node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2050
          }
        }
        tensor_content: "W\374\356\274\337\246\033\275\214\224u<\307f\035\275\353\205T\275\274x!<\340\016Q=\304\265\t\275Hn\002\275\t\371\247\272g\205\327;\023G4=\007\221\021=\273\274\372<\272\360\021=\307\021\250\274\r\3007=-|\250\273\225\347E\275\035\256\255<\240\277\270<+\312\245\274;\031\010=Q[O=\231\202\234<\247\231\004\274\267 \004\275k{M\2758\344\027\275\252\344\324\274V\202\002\274\364\321U=\250\233\345<\240\324\350;\367\020B\275\024\233M=\205\036\267<\004\333\325\274\325\371N\275=</=\033\022\313\274 T,\274\377\245\267<\270\354\034\275,#\302<\"\363@\275e\342&\275\324\2261=lV\215\274\306 \214\2744&\353<f_\315<\220\345\035\273\352k\036=\272\222\377;\224\0262\275\313\307V=\204\343I=\353|&\274\014!]\275aoU==\200U=Ih\363\273\302\331\212\274\260\230J=I\302+\275\306W\001\275\257c\027\275\346\"\347\274\302>6\275\312\264!\275X\243\332\274\376B%<\241\3334=\370\t\203\274\257\325\205<7\311\254\273\241\252\006\275\305|L<\354\352\267\274Y\002\026\275;\003\013=\225\251.<\310:H<\205\257I\275\037Z\250<\2077\022\275XxZ\275{\2001=\342\350\361\273\216\374\233<\251XG=\370\014-\275R\303$=h\2518\275I\326\224\274WAS\275\220\314\016\275h_K=\252M\305\274\177M5=\232U\323<\204\346\017\275OB\237\274E\340\007\275G\246\001\275\244\366P\275\250\007\242;}\033V\275\022\267\010\275B.1<YP!\275\007\235\304\274\211HC\275^w_\274\027c.9\256\001\340\274\226\347N=\206p\340\274\211\261D\275\255\357\336\274\205\350q\274\351\346b\272D\020\252\274\204\311A:\332\336\035=\206\034\002\275J\305\021<\277I\217<\216\257\207\274G\224\340<$\002\271\274\334lO:\027\313\321\274\277\203#\274\320\324\006=>\334\310<\252o\313\274\0243 =b\333Z\275\0137\021=?\324\301<&~\025\275\304\260\035=\205\210F<\004\n\221\274\230\3441<HZ3=>H/\275v\306\311\274\277\257U<\177\331Z=\032\014\226<\344\246]<aY\230\274\007\0132\275\220\351K\275\241\262\316<\373\272\307<\263U\224\272*\0035=\337\321\273\274\361\330H\275\016\377F\275I\316\247;\335\005M\275;\375\343\273\212 \366\274\241\242\036=v\3051\274\254\r&\275;\3529;io\014=\351\004\241\274\026S\270\274\356\216&\275\310<\031\275\022\236\032\274\330U\332<Mk\370\274[\330\354\274\267\371\204\274$\2467=\304\374\032<\363\337\354\274|s\022\275,\'\233<Y\357\006;\371\225\371\272P7E=#\222\371\273\274\246K\275\267\224\216\273\351\2611\275+\202+;\030.y\274\201\236\213; \007\306<\253\322k<T\226\331\274\376\026\234<0\375\302\273{*\313\273\256c\206<5\364-\275\255\241I\274\362l\257<g8 =\365\275\032\275\200\2730<\303\t\353\274k[\006\275\255\232\327;\257D\213<\236R\272<9g\354:\231i\177<\256\225\376\274S\362U\275\204\200\017=\001\234G\275\351p\205<\303Y\307\273\201\260\306\274\236\\\207\273 \244\'\275r\001\216<Q\357m\274?\310\312\274b\365>=\346*\211\274\030y\033\275\244\326\262\272?ZY=\001\030*;\'\377\t=\000\017\272\273\376\224\037\275\210Y5\275\034C\362<\021\331\266\274\242\030+\275}\214\217\274\326\244\213\274\006\241I=\255\334\217\274\267\025!=\353\324\221<\031[q;&f==>E&\2758~%=/\315\266<\r\213\260<\265\371c\274\233\352E\274\236;g;u\200\212;\342}\257<\272^\316<:\006/\275\314\212$<0L\360:\373\007\260\274Vh\033\275\276x\021=D\260\t=I\236\242\273\261Z\275\274\177\037\007;\2201\253\272\021!0\274\310\266\357\274\225\3428\272\200\335\347;V\202\306\274~C\031=\333\223.<nl\331<Z\"!=\344\"\213<^\253E<W\310\"<\002SE=\375\'O=Y-X=e\274P\272\332u\235<\3207\242<\317\316:\275@\372\2316K\2434;Z\255x\273y\205 =\241P\350\274\262GM\275\225I\325\274\254\262<\275\001>\325;/\332\257<\364\013W<\335\001\326<\225@\004=ZW\335<\031I\326<\352\353\272\274q\234\006\275#\025\227<e\223\014\272p#\356<Hzl\274\031zH\275\253:%=\020\035!\275\321\010\237<\310\355\352;\232H\271\274\323\237J\274^\371\330\274\370~;=w\025w<|\220\273\273\233\303\251\2749q\035\274\272\277\351\274\221\234\'\275\377T\023\274s\323*;\274\2512\275\np#= \210H=\230P\036\275Tb\324<s\362$\275P\360\355;\224}!=\300\265P\275\270\377E\274Z\372\266\274\001\231M\274t\237\n\275N\233\013\275\233\261<=\026v\352<\275\275\200\274o\034#\275rO\235\274\330\334\217\274\260\323\270<wFZ\275\272\301[9E\340e<\274A\021\274\324\305/\275\202\0277\275\224X\000=\360\253\210\274\212\310\272\274<8\225;\336V\304\273\246\336\277\274\316L\006\271\310\244J\275\016\232\355\274\252\264\200\273CV\007={\342\340\274\020\301Z\273)\357\360\274\374\314V\275\250\253S\273\225\014\341\274g+\003=\\\321\2449#)I=\354\264\013=%\277\202\274\257\331:\275\307_\027=$V\272\274?\337\352\274\016>\022<;\371\266\273\312t6=\337F0=\000\300\256\272\323\261\010:\353B\t\275\n$Y<\263\362f\274\036\352\210;\344\366\256<E\243\313\272\"Pu<[\332\337<w\004\346:B\001\031=$\025\277<\362:w\274x\230\235\274\246\320#<\361\230\343<\2003\371<,\333!\275\376J\031<\260\217\377\274\255\000\033;F\344\325\274\017@R=\353BK\275\355\262!\275\177\371\354\274\276pV=\256\"\352\27406\262\274\0371m<k\373D\275\335\373&\275^\265\033=\356v\342</\244\352\274\312H\306\273N\033L\275\207\027\266<YF\265<\320\276\250:\361\226\265:\363\010\377\274\333\003\207\274\330\351t<\213\201\301;&\265\361;`\324\t=K0\036\275\226\206\237\274\2334\026=\371\211\033\275n\224P=\201\336\244<)\241\312<\271\200\005\275\350\200\201<\023\\\362\274\2054(=\241h\n=\2737\274\274n\323<=\021cT=\003~4\275\262e\363<\330`K\275`q\006=\3033U\274\367-)=\016\235O\274`\363\007==\300\357\273\231\241&=\215\266\320<\325\255\215<\267\341S=\203\352\342\274\350*\002\273\210\203i\274\263[\224\274\223\n\224\274\271&\301\274\023\325\2269f\025*=P\270\273\274\332\313\207\274B\344:=\367\311+=\266&\346<\374\357N=\251\237*\274Pp`<1}\234<\363\203\273\274%\020\016=\324\257\341\274\265\220\217<R\352\276;uP\230<K\263\373<\231B\317\274\035O\277\274\\\305\335\274\210\352\006=\226`\007=\201\354O<\016\375[=\361 \344<\026\350$\275\'\243\222:U\300\005=\2604\300\274\247m\247\274Z\331\023\275\372gS=\356r\246<\241\213\027<\\\335\321\273\327\203O=\026z\203\274\272\335T=\254\215\336\274s\324\332\274\2039\355<\234\264\303\274\277\226\362<\204g\255\273\250\233n\273F\245+=\026\264U=\014\300\334\274\332\2620\275Q\256K\274~l\017<\265m\257<\306/\205\271\211\364\026\275\331\\\301<\201\344\322\274\276\352P=\021X%\275L!\243<\017_p<YA\003=B,\273\274\225q9\274{\236\242:\ro\023=\"\243\374\274\306A\211<\347~\010\275\320\335\001=\017K6=\341\325\033\275f\306\355;H\330\252\274/\234\032\275\205\315\247\273\323\226,\274c<\217\273\032\024*\274\226\327!\275\244m\340<\')\032\275E\310{<\3119\014\275\\\241\260<E\334\220<x\326C\275a\262\'=\303[\377<\343\222\n\275\206\026\000\274\247\372\344\274\000\276A\275eu\351\274?\335Q\275\0060\013\275\254\241\327\274\322\250\341<\224\3411\275\035\324\325<k>F\275i\244\341\273\206\253\237<\261>P=\324\347\n=s}[\275\206g\025=\246\020\237<\277v\005<\376\254\255;6\224T<\306\r3\2745\013\006\275\'\030\023\273/C\337\274J\223\256\274\311z\032\275\314dW<\374U%=\241;\034=\314\216O=\n;\253<|\352?<\242\030,=\233\026\331\274\234\366\265;\2165P\274\010c\274<\"df<\255\347\\=\231\034\350<\336\261\025\275\266 \250;\346\323\032=\352\256\022\275ND\356;\027h@\2750\213\306\274:\305\242\274\207\255-\275#G\231;\310[\254\274{]\242\274\217\315\344\274\2630R=\317\262\027=8!\r\274\031\3118\273n)L\275N\261\244\274\001\354\303\273\371\023\031=\364\316V=\256\357\323<\330\336\030=\317\371\024\275\372\3030=\240%Z=\344>@=\202\033\222\274\300\371\325\274|D\032=E~\366\273\010<\343<O\2246\275v\204k<\256\223\332\274&\234[=\222;\031\275[\300U\275\355G\t=\307H\303\274\"\310\030\270\351\357\370<\377\351\030\275\305U\010;/\257\262\274\023\273\267\274*L\n=x?\372<\305\337@\274k\377J\275W H=<\373\036=\231\032\276<\237G\344<O\022,\275=\207A\275n\002t\272\361\227\001<b\352r<(\302\"=s\373!<\376\315Z=\370\335O=T\200\231<\0039<=F\342\005\274\342\230\033\275F&[\274Py\236\274C\177\207\274\223\355=<\322,\346\272\334\0171=\242B\016=J\231/;Bk\005=p$\025\2759E?=\3507\013=\250\026\014\275\n\304>=\313P\331<N\225\371;\245\304\203;h9:\274/\001\001\273\306\206\374\274\350\206\342<\267\024\037=\341Q\n;\004\252\006\275W\366B=\264\243{\2747>\245\273\n\337\032=\nI\310;\336+\013\275qX\247\274\030\206p<~\223\026\275%3-\274o\217P\275\372\033\r\275\330\330\201\274\331\255\014=/\303\253\274\007\373\025\275\3146\255\274\316,\360<\0244#=BIi\274uu>=H\307\356\274\222u\374\274\n\363\245<\262\027\035\275\220\372\257;\304\374(\274d\3263\275\323\2740=\214\335\222<\261\301\332:\253\007\036;l\004\311;\276{\006\275\244>M=\tl\260<qR\037<\315\254\\<A \374\273\037N\375\274\235\257>=\363\245K\274\331Z#=Gy\372<\354\236\343<>\372C=+\201X\275\253L\265\274j\221\255<\021OF\275\243\253S\272\\K[\273G\203P\275\241\342Z\275\310[\342\274,\360-\274\267v\n=\'n\n=h&\033=\'B\351\274n*F\275T\366\330;\222\260\331<\313$\021=\264$\326<\250\026\372\274\347O=\275\347\273Y=hu\312;$\305\231<^@4=:\302G\275\271\000Q=\006\013[=H\2278\275\275\273\230\271\240\234\037<\317\022\263\274)M\317;5ws\273\314\275\276\274[$\265:\360\245\353;\223\320\377<\231\014\224<\374\331K\273t\376\n<\373\224:=c\3066\275\324\246}\271To\332<C\312<=\261\274\317<\005\014\332\274$\023]\275\037\227&=\r\370\020=,\302\260\274\363\013\274\274R 4\274\243\024N\274/0\\<\2667\217\274\256RO=x5$\275\373o6\273\252\244\344<\301\271\007\275z\375\336\274\204\302\032\272\351\3208\275\211v\241\274\336H\361\273I\360\035\275\353uC\275\200v<\275\034B\243<\243\204\013<\205?!\275539=.~\351\274F\242\007\275\303V\330;\3448\333<{DP<\253\370*=\004\213B=\215\250\r\275\346\322)=P\225\266<\327\204}<\3270+\275\377\333\322<_\214*\274\003#\337<\'\013\351\274-\324\241\274jk\020\274&k\301\274\217\024!\274\033\267\333\274i>(=\021\341\266;\275\227T\275\242\362\317<\322\322=\274n_\000\275>\035!=\273o4=\027\200\355<\031\260\357\273\304\343\030\275\027\267\313\274;\262\321<\346\346\234\273\002S\235\274st&<c/\263<\362tJ=\30552=E4\254\273\031_B\275\023\317@=\324\336\021\274=\n\327<\201%\013\275 E\031\275\221G\377\274\220\026\036\274\214\236\035\275\213a)=\364W\303:m\345\036\274\347\236\031\273\004\365R\2756\341\255\274\315\372\362\273\244\203<\275z\010$=\350F\177<?\204R=m\2712\274\313\225Q\275\200\241\004<\201\300\250<\201\357\005\274*}\326<\364c\325\2743\277\327<\033\364\336<x-{\2740\307\033\275\342\036,:\201\007!=\300\2724\275w*\005\275{\211\004=+\212\026\274o\255v\274&;8=\206v\206<\204=I\275\253(\271<\024?\354<a~<<\037\307\001\275\260u*\274h\200\033\275m\311\244\274kSV=\206\215\030=\300\272\277\274#\302\365<d\r5\275\314\275\021=\313\270\032=}\3674:\234b\272<\204~>=\315\027\201;i\222\337\274\235\n=\273\243\233c\273\032i-<\207\261\003=\374a\347<\360\330p\273<\"\311\274PSp\274\256\020\036\275(\251\032\275l`j\273\332;\024<U\3007<\213+H\275J\036\356\274$\223\354\273\373\342\204\274\311j1=\'I9\275\352\303Y=\020\303\023=J\232\t<\246\224\252\274T\270\266<=S\"=\276YY\275\362z\t;\rxP\274}\211\016\275\017g\006=\254f?\275\341\361\341\273\274\307>\275/\352A=\347\3443\275\2525\007\275\3175\002\275#\334\360<),\013\274\"\221\257<d\277\360\274\315\205\345<\255\360\245\273\315\030H\275m\325\026=X\322\016=\030W\337<\252g,=6\315\006\275\261p\333<%\030\213<\200\367-<\023\017\227\274D\020\246<M\017\\\275\227\177?\275\031\364\014<\356\237\'<\223o\010\274\366~X;\376[K<c\027\226<D\037\267:\325\010\036=\221V\023\275p\320\271;\177\367\305\274\357#\r\275\273\241!<HW+\275\273J$\275u\365\002=+\367\235<\031 \256\274\353\205\246<\204\331\201<\032\022\333\274\271\241+\275\177\373D<\265g\023\275\231\0262=h-\266<\344\332K\274 \330\365<\216#\236\273\211\355\343\274\226 <\274\007\346\337<\266\251\366\274?\3119=$\276O=\265\025}<\270\"<\274$\255p:\273\035\341\274`\204\205<\006\001\032\275t5q<\036cM\274\241\252\r\274,q\021\275\214+5\274\n\347\216<\312\016\316\272{l_<\237n9\2755b\254\274\275\256\006\275\254\364p;\274\237;=`\'\377;\243?\356;\317\357\276<\234\373\355\274\nxW\275RO,\273\361d\'\275\352sZ=2\0107=\237\356\010\275\237\317\204\274k\0266<i\002\323<}\241\034\275) \237<\325lg\273\325\330==7\262\030\274o/h\274\200\210q;\300\237\305\273LF&=E\342\241<\260E3\275{\320[=\352\343\350<\215\227\255;\245;\313\274\337\3618=\272`\023=\231\250R\275~BE\275U\237\276<>\337M\275\261\227\\\275\004\375\231;i\030V\274j\232\031=\017\246\206<\251\236b\274\253\2737=\363\256P=\371\237A=\332KE\274\225P\354<y\022(=C\311K=\334\266(=\337\244C\275\360\306\200<r\217)=\302\373-\275\226\235i\273\357\3578=\205\252:=\240[6=q\026\000=\237\246\353\274\003\227%<\037\330P=f\2671\275\2438!\275\2737(=\305\363\231\274;\241\335\274 \300\004=z\313y\274\221C\376;\365ZT=\002\024:=\271\222\024\275\271?\t<tP\274<0\035\024=^s\232<\250\363H=T\355-\274\336\210\'\275\376OX=\370u9=/\354w<\333zB\275\222x1\275\t\037\364;AI\234\273@\347\n\274\3425P=\256t\376<\016\317a\274\312\317\262\274\304?V=\217\311N=\322\302\236\273\221\\K\275\271\324\360<\324\203\037=\312\212\037\275\367\225R=\234\362E\275\363g\321;\364V\026=,j\235<\2367q\274@\2647=X\261\003\275\241F7\275\236\257\241<\352j\010=\265\227\215\274\2414\314\273s\353/\275\200O\364\274\210lL\275\006\205\207\274\"\013\226\273\242\230<\275\276\304+=R\360\261<h\232\315\274$\264\265\274\325\031C<\024\325L\275\364\357\010=\250eC\275\344\356\305\272\300\234\016<\216\260<=\264\320\377\274Yt\014=\332\265\020<\211IK\274l@\245;\270N4<\352\374\301\274lg/\275\345[\377\274\232\263\225<\023\236J;_\\5\275\326\227\021=\002\257\021=\3310\232<\232`=<M\236\005=T\3614=\340\244E<\002\371\375<\337s\370\274\300S$\275\350%$=4 \235<m\006}\274\376\360\022<\276\251\013\275u\031\370<\310M\252\274\236\230N\275\345\001\372<Y}\276<uaU\275\277\245\026=\264<\261\274\3152\027\273\'\340\002=P\241\342\274\340^\017=\206\016E<\311\222\313<i\206\241\274\207\3436=\326s0\274B(\022\275_8W\275>@\341\274\233\200=\274\014g\r\275x\177,\274;\220\024=\354q\247\274\210D\263<\302\235\324\274OH\014=.UB=\357\003\002=\304\204\r\275\353\237.\275)\275U=\247+\326<\037\2771\275\037\211@\275\027z\252\2744\357Y=\275@\325\274\2750\031\2754\347\357;\356\245Q=\rC\002<E\007-;\'\304\034=R\005\355\273\017\005&\275\314\376&;5f\352<\n\005\377<\373\373\323\274|oS=(\217\006\275\301\207\215\274F+>\275<\345\025\275\0243\341\274\016\271&:\261\370\\=^\306\034\274\204Z\373:\352\247\027<(\262E<\032\235\231\274~Y\373<O`\301<~\311\027=\311zC\275\335\237\271<D\215&=\331J>=7T\303<6\277\035=}\335;\275\235\027\033\274Z\336\236;S\364\026\274\0136\230\274\353\342\2069\272\332\230<\306-\005\275\240\355I\275$ .=I\030@\275\241\266!=\224W\323<\010\340\234<s\022\235<\002)\037<\220G\302\274\201:N\275\003\306,=\321\3067<\361\361\005=\217\371\344\273\215\323\374\274C\026f<\264\341F\275\216\3379\275k\326/\275\362*@\274\367T\000=w\366O<\343\2178\275N8<\273\003\363\340\274A6\263\2738g*=9vK<\243\005\007\275;q\375\274\301\021\\\275\272\224\310<\346%Q\275\031eI=\212*\030\275\204\014\245<2\356W\274\t\321M=i\020\001<_\222\035=\361\235\017=T\352M\275`AV=\002\230\344\274\037\300\231\274_|{<E\312A=y\"\034=`\007\t=\340\374\203\274\231 \035=\200\177L=\341f2=\275\341%<\206\267\007=s\354\376<\224R\025\274\204\326\212\274\010\343Y\275j9\020\274X6\202;\256\337\324\274\255\310\304<.\205\346\274\177?\n\275\270\021?=\3019L\275\350\031\221\274\375k\321\274k\256!;?\277h\274\\T\372\274\346,@=\340\257\275;}\2304\275KU\t\275uB\016\274>/\325<\025U\337\274\332\225S=\360\221\340<\271\242L\275_\351`<!?\035=\253\255\024\275\374\213\210\274#SF=\326\236\265<)\347M\275[\021 =\362\211|\272\322\267\010\274A)\214\273\304pI\274RH\310\274\255~\343;U89<\\`0= \014\215;\347\224\001=\364\211\206\274\263\205\360<g]\357\274\344yJ<\2041\234\274\304(:\275\360y\345<\217\2369<\027\303-\272u\037\351<xN9=L\017\371\274\316\224\376\274#\200\253\274\244\216\302<Z\275@\275\331\025W<\373\371Y;\273E\334\267f\370:\275~\177C\275\204\324\200<_\010<\275Fs\211\273\r,W\275h\024,\275\203\230\233;$\350<=\372u!=ez\014=0\242-=\'k\277\273\026\203\265\274\355}\354\274\214\224|\273\315}\\=\256\r=\275o\027\036=\234}M=\335\017\370<;\3369\275\257\214\023\2752\304\030<-\216`<\001;\007\275]\202\014\275Vs\261\274\001\277\371<=p\304<\264^=\273\013k\331\274\360K\006\275E0\374:K\264\240\272\235s\026\275\204\324\365<\236>J\275o\311R\274$z\311<\342\"\304\274\302\372\010\275\301.\212\274\003s>\275\345/\342\274\263\373A;{|\035=\241\341\323<\300\277D\275$\246\207\274\262\263\t\275\237@\201;#\227:=\267P\000=\237\274\022=\202\013\305<uM\027=:g\355\274y\207I=\320\303\356<\321\352N=\260\256\223:\310\311\022\275\225(\314<\366$*\274+\010F\275\024\206\213;N\332\263\274Qr0=\320r\246\273@\367\370\274\323~8=\253\324\023\274\3002\'=*b\355\272:\014\327<\250\204L\275MPz\273f\207\031=nm\021=\305i\262\274\215-\252\274\236\305\027\274\025\\{<\'a\025\275[\005\255<\r\206,\275\262\020\231;\357F\210\274\261T0<G\214\261\274\340xH</\026C\274PO\304\274\267{?\275\027\355\235<<55=\301\346T=~x\026\274\027\330\256;w:S=\210\342\274\274\t\235\300\274\360\364;;Y\254\373<;H\355<DL\303<n\366R<\241\325\013\275R\346\351\2749\311\034=\253DX=\301}\3179\240\360\035;\214HJ\275,j\355:H\202\213;f\213\004\275\264\357\324<\276\276\312\274\022\201\023=\272|\333<\317\025]\275\311\0211\275\020=\003=\217\357F\275\303\235\242\274\245\305Y=\200\375#\275\316`\036\275z\273\032<(\344Q\275\326\2769<M\013\313\274\366jN\273\353d0\275S^?=p\274M=\314\341\026\275\360\013\255;l,\r\274qH\300\274\220z(\275[\373\n\275\211\305\'=\2633@=\312]G=uX \274\"\313\242;\311\226[=v0\276;\000\030\310\273l\t\010\275\001\223\037\275U1\301<\213\345\374<O\237V=\200YV=\311\272\327<n\020\r\275\331\336\201<\203\216\236<\227\246U\275*\'\327\274P\254T=8lL\272\204mM\275I\264\363<\234\221\371\274\266\263r\274\003X\025=\335\223\201\274\341\337B\275*\246\216<\315}\322;\024\203\212<\252\201\207\272n\351U\271q\214T=L9H\275\214^\214\274+fQ\275\231\332/\275\014\002V=\300\273\377<\202\253K\275Z\263/=$\307M=\263;\007\275<\251\232;\241\032\030\275\024\034\005\275\231\032\226<:\316f\274\237A\361\273!&\225<\212\313L=\305\rx\273v\254Z\275\350\033b;9\236\260<*\245\021=ObX\275\372\252\227\274t\333\250<\321\t\322\274Gr\001=\336X9=\260\342w\274\257\200w<\002Z\026\274\033\304\370\274\301f<\275\344\335\262<r0L\275\302\3338=m\024\3118\344\204\277;\370=\335<\350\034\212;`\325\233<\232<\330<Ag\034=\243\320\017\274|\312\335<\310\0100<\306\r}<\177_\332<\377<\024=\253\305\033=$y\336\274I\300*\275\353)\332;\363\261\006=\316a\321\274\305\270\206\273\2311\016\275\354\303><#y/=1\261V\275\010\013Z<\214\003\200\273\034t\267\274F[Y\275\227\232\257;8\037\021\275;o\206\274\335\300\243\274\345\3538<|lR=\001`\032\275`\221\026\275?1\254:\332\243\033=\252\017\022\275\275\351\022\2758x\344<\205\261\330<r\2171\275_:\017\2749B)=\250^\371\274\222R\316\274\342\007Z=\033\033\007\273\222&\226\273`\347\271\273]\345==14\231\274\262\263;\275e\203\342<`\253\036=\005Z\207\2738%\003\275~\t\226<\274\330F=I\233\211<\222\027*=\031\206D\275\365\rR=\034\271e<\356)\365\274\360:\035\275\374X\213\274\334r\024\275\253>\035\275\367\215O=\000g5\275+\241B\275\231\010>=\351\227\\\273$P\035\275\016P\345<WQ\016=\254R\037=\270\274\212</\355\224;\274\363\305;\271\301\262\273\214\303\177\274\006\216\227<B\352\366\273\t\375\007\274\320\'\033=\356n\305<{\375\n\275\027:#=\312Q\227<\215\336\360<\260\303\213\274o\326\"\275\375\235\274\272\t\356\341\274\237\033\017\275\t\262\036\274f\006\231\274B\034]\275\013\304\245\274\366n\320\273,o\032=d\311\035<\014\200\030\275\331\373\035=H\206\036\274\246D#<\356}Z=\tX\004=\276\326\323\274\374y\013\275g}%=E\361\301;S\202\302<\307\265\367<\024)\201\274\271-\357<I\275H=\032d\237\274\224n\007=\364\263*\274\252\244\240\273\001,\"<\023\000\031;\265\370\275\273\361 V;\213\243.=\235\255\"=\022\314*=\231\374&\275\204V\031=\277,\034\275\210\025\002\274\304\r\t\275?\031\304:\354\356\342<l\377\007=o\003k\274\235$#\274\210\264\022=\244\353\221<\272I\003=k\364+=\371\271\t\275\324\240A=\277y=\275\367L\013\275\020w\364;X<\303\271a\241\273\274b#\367<{\241,=u_\036\275B\236T\275(\201\267\274v\275\030\275y+\264;dT\005\274\r\233\032=\020\333\267<\226\016&=\036JF=\030\211M=\024FT\275\272\253J\272\232\310\374<y\227\r\273\275\014V<\355^8<\306\336\276\274\343\355t\274\374.F<29R\273\321S\360<\250\232\252\274d\277\036\275\016b\036\274\335\371\324<\241\206\205\274M\3621;\007\254:=\245\225\360<7\337.\275Z\221\312<\206A\231\272W\2578\275.\001\211\274?\242\235<\206/I<\n\264\225\274\373p9\275b:\366\274\033\273;\274\031d\226\274u\\7=Q\036\236\266?e\364<\'DL=\272U\277\274\254t\270\274\375\204\231<\215\357\003=(\263\355:\323o\226\274\320@\373\274\271\242\243\274\014nB=.\367\030=G\223\017=\3138j\273\t \306<\331\016T=\021\301\021\275\"\256 =\340\202\376<\274dY\274\243\251\006\275\032.\363;!!W=\005\265\313<\245\232Z\273\2544[=\270\0138<\250$1= \346\247\273\2474\261<\301\343\t\275C\370\000\275\356+\005\275\315\237\002=\324\360\224:f\246\037\275A\r\372<\352\364\370\274E\303h\271p\350\324<\250\'5\274D\342\366<\343T\0059\360\3131\275\321\240\312\273\310\rO=\236\344:\274)\006Z;\013*\241<\227j;<\334xS=\267n3<2*\027\2740\343N\275\333U\022\274\256\242-=\212\353\333\272V\215\"\275\177\344\220<6\374X=)n\237\272BL\330<|\226\022\275\357\234\355\274\370\3611=\301\036F\2729\323_\2742\tb;Y\346\315\273\312P%=\364j\201;\211\314q;\372B\337<\277-\025\2759\357\034\275R\236\341<\232\233C\275\036\350+=\334{\275<\307\307\365<\013A\300\274k\337\315<RbA=\201Yk;-8A\275\262\254\222\274\360\022\210:\003\264\370<\031\276\376\273;\323\275<\246\264\024= \354\353<\326\343\227\274\371\337\272;\364\347\017=9\352\035=h\322$\275Ob\216<\003r\322\274\020\255\001<\243\016\302<\313\207\034<\330\316\351<A%\226\274\211\203\t\275.\230\t\274\353*\370:\2065E\275,\226*=\267nB;\377\236\351\273hT\021\275\036\302\351;A\217\203<k\322\327:\3626\2109];\005\275\006\226n\273.x\025<\210\010[=OJ\254<\014\302D\275\252\212\354\272\262\260.<\267\354\004\275\035fW\274y\257\005=\243\3771\275,\374p<\014f0;\010\036U=\323p\221\274\376U\236<\370\016\260\273\010)\260<@\260?\275\017\373\304\274h\251\211<\\qA\275\026\242\277\273\354\271Y<\242\207R=\340\342;=\2452\327\274o\n\032\275K@C\275\300\217Y=\326\t\035\275\236\332\200<\275\005\002\275\261\312\370<\275\234X=U\337\n=\257l\265\274?\304\030\275\264\024\'<\303\010\351\272\230\320\022=\222\023c<\316,|\274|\324\016\275\033\000+\275\n\377\374<\201\343E\274\241d\330\2745\036M=\216-7\274\371\366\003<\031\025\026=!\315\004=\377\351+\272\225\2117=\324N\361<\3452\346\273\025\253[;\310n\025=\357\353\236<\247\264\n\275;\371:\275\273d^\274\351f3\272\376\006\004=.X\010\274u0/\275\254\247\006\275\306\334\017<\377\361\204<\004A[\274<%O<\306A\346<\030\356@\274\"\336\212;W\316\036\275\240/\211\274p\017p:\"\332<=N|\002\275~;\356\273~p$=\270\"\027\273\1773[=\004\355\036\275\363\232\270<\366\316W\275q\003\250\274[P\002\275\201A\032=G\243D=\356\2049<3\251\247<tW\311\273U\377<\274\003\265}<*Z\214\274)\250\035\275~\016+=1\020\"\275\252\006\006;\2240\315;\376y0=\326+\263:k\304k\274\331\212\270<\307kS\274\227$\364<\336\325N\275@\352\t=\215\200,=\231G\352\274\263P\021=\350op\273T\3256:\221\246g\274\265\315\270<\037\026\213<\367:\327<\201\022[<\3020\353\274\345\324#=\354\226\255\271\221n\027=(\224\033\275\370\345\022\275\013\300\351;\037\271\246\274\004\014\261\272\276\355\337\274>B\203;\356\217\311;\"\260I\275\205\362\263\274\372\227\257\271\240\232\256<\3003*=\373\021\271\274\257(\000\275\253\236x<\365\205L\275|\301\362<8\263/=/\315\252<7\250\373\272\212cE\275\321\331Y=z\373\212\274\305\241,\274\254\361\321<\255\201\022\274O\265/=\304\201O\2741/V:\034\374\312\272;\2345\275\341\245b\274sE\272<\254T,\275\211I\201\274\271\371\221<O\303%=&|\375\274B\376\347;,A\026\275\357[\203<\224\210\375\274\234\'\034=\271\330\231\273\317Ot<\222\020Z\275ZS\006\275\321\205\024=E\270\311\274\215\216\257<\217\300\257\274\227\350\026=\207\315*<\233 \005=\036zI=\366\"\226<\372,O\275\216\241H\275\350\214\003\275\332<)\275`5\267\274\310i\311<\362Q9\2748\330z<>\020\r\275\205\215\252<\310b1=1\256Q\275%\2568=_q\033\275y\033\350;\031\310\243:\210\3702\274=\3374\275%\016\320<?\215\'\274\217!\252\273\322U4\275[7\255<+\022g\274\025\371o<8\325\t\275D\2070;\363[C\274\037\324\361\274/\200\224<\242\252\027=\334xH=\366\317<=\2744\223\274\023)D\275\253V\320<\323?\265\272HW\276<{ZE<h\330\023\275\365\002\372\274*jE;\031~\252<\326\230\261<\314\224y\273\177\233W\275\017\261\362\274.j$=\373\004\221\274\263p\233\274\350\033\206<L\363\306;Q\305\010;{\013.\275\366<\322\2731\375\027\275~^\326<\231\265+=\374 \027=\351\3601\274\244D\227\274\314\320\245\273\354O#\275\244\205\204\273BI\216<e*)\275V\272=\275i\242U=\021\030\300\274\225d\021=y\036\234<8\327\217\272{]G\275\230\207\\=\366e\016=w\327\375<\207\314}\27235\356\274\226@\265<\257v,\274\343\326\236\274\201ZJ=\272\201\246\274\223n\031\275\372\256\003;\202\231\226\273\203aG=\363<Y\275\314\252\261;\213w7\275\037\272\'\275\274\230\037=<I&=\304\3623;_^\021\275;}\352\274m\334\221;y\373\037\274\330\231\306\272\204\000L\275\017\002\022\275\35124\274\n-(\275\250\354\350<\016\252O\275\354x\344\274\363\001C\275[\256\035\275\201\215\201<\375\303\010=s\266U<\215\273\t=9\3327<\3307\245<m\2350\275\274\017\323\274\377\302\343<\234\2204;$\010\253\274bw\020\275rS\013<I\331[=\300x\224;\362\221a\274\036\231\024\275(e/\274\216\352#\275\321\004\322<\035n><;\034.<+\261m\274\033\350\335\274\004\036\"\275\004\266\371\274\257WF=\034k\237<\366\024\243\274\240\332\344<\316\257\216<o\236\014\275\355\232D=\341\026\265<\023\302\225\274\356;\252<\253kT\274$I\021\275\216VN\275\210\270S<\322\370;\273!0`\273\330\333\212<8\nE\273\220\345\r\275\004\306@=\301\377\234\274\301+X\275\311\2461\274h\334S\275\352Z\235\274c\216\007=<\212\027\275x\013\021\273\252{\003=aN#\274\241h0\275H\256\362<<\277\021=7\212\344\274\236q\301<\007\243\355\274\037\354\350\2746M\311\274HR\\=\212\014\234\274\212\314\342\274\237:\213\274wn@;\240\016V=\223I\252\274\357\270\035\275}!\"=\343}\025=\336\204\364\274\236N\035=1\'\364<q\337E\275\272 \336\274\303Z\023\275#EW=\313\013A\275@\311~\274\211\243#=\337~\'=\266\271\257<\274\224D\275K1@=8\2760<\026\014]\274\240\257F=W\316F\275\r\211\263<\370\243.\275ThR;j\3272=\330\026Z\274|T\004\275\347\202S\275O\314\371\274\000\0207\274\245\362\376<t\337\t=\260\321\317<M\354L\275\222\271\\\275\245\310Y\275\307\330Y=\342\034\205\273/\214I\275^\3231\275\200h[\275\030Y\025=\254\024K=\326\371\030<<\324\t\274-\200-\274\215\370F=\355A6=|a\313\274n\316\215;yrL;\225>\370\273]\005\304<\351\352R\275[\320\257\273\010\225\003=\006O4\275\325\021\331\273\226\320\216<3cv\274<\310\271\274\026\002A=\336o\271\274\342\340\016\274\207\326\t\275\277\277 =!\351\312\274\330\344:=\322Y\364<\214_\020=\366f9\275A\243W=\034\354\035=?\031\245<\347\016s\273(\tS<:G\036\275+<\326;S\210\030\275*\351W<\210o\315\272\010\n\003\274\371\221\251\274\274\315\244<\224\312\021\273$\2535\275\312)0=9\006\301<L5\026<\364\3402=\262\270\003\2758\036\306;\364\351$\275\036\003-=k\307K\274\232\345\030\274\233\357#\274\314\036<<\026\276\265\274\217E\235\274\246-F\275\020K\247<10\002<S\205\\;\204\004+\275Uy1<\205\247\031\275fJ\207\273p~P\275v13\274?y8<i\004\007=\336\335\342\274\003\001\307<F\'\007\275?t\335\274\346\357\n\275g=\326<\371f-\275\3252\037=~0\026=\n\226\003=\332\321(;\037\246\016=\324kw<D\320\311\274\024V\032=t\362\376<\313\301<\275\222\2611=B\320\353\274.TM=\022,>\275\300\302\"\275K\371T\275o\024\006=\007W\376<\330\355\027=2\017U\275n\007\357<bPQ=\344\277\350\274u\316\202\274\304\315?\275\021\353\206\274\204k\004\275\330\221 \275\'\3300\274F\n\322\273\311a\023=\201\251/\275m\242\302<v\272V=r\206\260<@\n\\\2752\331\256\274b\250\223\274\320\006\301\274\215\356?:\330z\350\273Ch\250;kT\031=\344\344\001\274l\2338\275\n\256C\275s\2232\275\331Rc<F\306\002=\014\376,\274\353\014\327\273m\252\227\274\241R\301<\362`%=8\016\023<;\345\373\274\242\252b<=\"\254\274\001\345+=\250\211M=\331k\317\274\361\205\342<\t\233X\274\362\177\241<V\031\365<\032V6\275\313V.=\035\223@=\376\372\345\274_\016\215;\233G\022=\337e+\275\251 -=\313\327\202\274\235r\333\274\370\005\037=\374\036#=YR\273\274\266l\270;\371\2670\275\272\030\257\274\223h\333\274a=\035\275\335P\324<\332je\274dA\277\274\363*\010\275\367\034\025\275\310\220I:\343\355\031=Xl\360;\340\024\221:{=5\275\270\222B\275\265O\321;L\247\027\275\240/#\275\203\2005\275[\256O=\37702\275\243\t\362\2742#\301\274\335\021B=\032\025\004\275\365L\360\273\311\356<=\230\377Y\275u@\344\274\261\342\000<\353{\301<\2014\335<\375\027F\275\241\244\236<B\266(\272z\240\"\275\246\2430=\030!\263<\205?\334\274\204\031U=\247\371,=\036\234\356\274\271\236\224<\203\030\302\273X:?=u\021#=Q\264K<=\005\r\274\010A\352\274\224F\r\275Yr)\275R\244\366\273\r|3=\340#C\275\3175|\274\243[\000\273\342\265E\275\002\372\317\273\007\031#<F\254F\274\377\305\350;x$\273\274\002\342\234\274\341v/\275\204\034\013\274\243\206\351< _\367\272PwI=\201\314\\\275\271\375\037\275\320\362\\:\'\307\230<\235Y\235<acV=\313r\033\275\313,\322<\032\263G\275p\335%\275\365\322;\275\rj\376\274J\301\313<\004\363K\274a^\371<(`\271\274\271\361\240\273\242D>\274\271\223P=4\346\264\274\211\314g\274\312\310\273<;AD=JO\201<\244\243\310<\365B$:\n_%\274\240\263\251<\006\314B:\300\341\354\274\177\234\304\272m&\265;\306yM:\323\216O\275H\321\320;K\276\265\274\ny\342<H\326\227;\347\274Y\275\263[\331\274\3468D\275/\335\336<\372\232\277\274\033\213\201\273\316;\006\275\231\n\226\274\345\231\353<=\321\323<\0226\034=\356\340q\274K]@\272\367%6=!\026\036=\305\237C\275jg\363<\2519 \275\303\177\236\273}a\354<\262,\336<Rh-=\303\202\253<\031\350\324;YjN\275\234\326.\274\310y\r=Xa\303\273;\013\010=\364\344!=\203\177:\275\373\304!=\266\006\371\274c\2204;\334\002\221<\217\\\037\275$\020\t\275\341\0050\275\210\374\374\274\027\3001=kt\375<Q+\353;\375\034\334\274\231\375M=\177\370\216<\323\224l<\246{E\275\245\270Y\275[\336\034\275`\341R<\352Dz<\351\323~<\263{\n=[\341!=\374:\374\2740\004\356<\'f\267\274\334\217\026\274\246\014\016\275\332*L=\313\326\355\272\370\340\024<I\204\251<\270\357\357;\324\264\210\274*\026\312\273\235\020\275\274\025\301C<\324+\204<\377-\202\274/4\037=+N\006\275\357\345\037\275Kl\277\273\345\345\027\275\265\303\334\273o,\022\274g\010\004=\344=1=\177l\223\274\206B\332;\361\001J\275\231;3=\300\336;\275\307!G\273\351\022`\274\260\021M\275p\233\022\275\274Y\t=F_,=\205\320\003=m\326\036\275\357\014\005\275\014 \240\274\336o#=\364\372\357<\013g\233<C\340l\274\244\203V\275)\2040=e\003\034\275\361\025\372:\252l\024\275\222\217>=\210\\\242\273\342\244\004\275\357\177O;\201_\035=>WT\275pVy<@\020Z\274C\215\234:\357\224\035\275)\347\014\275A\332=\275\201\273\256;\262\200+=\340tR\275\227\301\035<\375\371\t=\204RY\274\333+\017\275\311\251\256\274+\022)\275\231J\013\274\370\3749\275O\256#\271\3263\326\274>\233\222\273s\016\375;&=w\273\362s\005\275\337\025A\275\271/O=\021q\031=\274~I=\3669\001=/\222\001;\021M!<\273\234P\275\025\237\035<\006\014\262<[\306\375<\036=6\275a\222Y\273\270\226\275\274x\223\345;\232\3770=\327UI;-\2410=F\207\245\274e\0321\275F,2=\321\005b<\257\303\003\272~\225D=2\234\001=C6\337<\254\304\300<\335\227\014\275\037\207\242;\364\tL\275|{\302<\374\373\\=\002\177&<.(\004\275\241\246\300\273\204s\333<\372s\276\274?\271d<\356\333\036\275\2576\030\275T\274+=hsW\275\332E\200\274~\270\020=T\031\024\275\255m\275\274A\t\027;\3435\223<fF\374<\256t\264<\262\300\251\274\r\203\353;D0\342\273\274=\377<.>A\274\304,\245<\272\3266;\375\"B=\026\025\247</\254\013=\236\263\222\274\301\217\275<\324UQ\274\207\2633\275\264\200\325\274\301g;\275\304{\027\275\236\323o<A\035\375\2746\005\347<x\005\370<U\2439\275\037\243R\275>o\034\275\277Q\033<\3039\001=\326\323\223\274wx\031=\256k\010=\234\265\003\275\3236*=(S\266<;g\031\275_ZG\275\232uE\275\306\252\023\274;\261l\274\266\020\220\273\340,V=U{A\275\242\'A=\321oL=\302\2005\274\030\241\t\275[\345)\275\244f\010\274\362\365\'<s\002\240\274\033\242:=\014\275\017\275\306\356\272<\201\355T\275\234\n\017=\"\345\225<.\315\030=\313\177$\275\314j\003<e\010]=\023+\347</2T\275\001\313\377\274}\306\357<!\004\237\272\340G1=\270\241\232\274|\">\275) \370\274\256\222\020=\333\225\363\274\233\001\027;\237\376\023\273\177\340\016\275\007\370\366\274\034\004 ;\216*\374<\225w[=\213\343\013=\376\261&=\331\360\241<\275\341?\275<\353\233<\016\322&\275\027/\334\274T\005\031\275\275W\004=\320&0=Z\314\023=\220\344\025\275z\n\252:_/T=:M%<Q\227!=\177\235\320\274F\250\010<\300\024S=\274M\021\275\022\002\010\273!\000\210\274\024C\032=\317\332-\275c\302C<\331\206\251\274sn!\275fTP\275\263l{<\273\t;=\010\260\200<\217_\234\274\355\001e<s\270I=\023an<\272\370%=\001!q<\352\357\3669zr\367\274\355j\243<E\021F=\242\256:<\255\245\032=Q\271B=\263\200\221:\344\352\343<\204\031c\274\217N\033\275\031\036\304\274n\023\262<[\316\367\274\241\224{;\202m.\275\r?\254<\220\0009<\321i\257<\355\310I;\031\303W=\000\025\350\274\001\332\200\274\305:[\275\332\034n\273\332\"`\273)\217\356<`\230\377\274\324\241P\275\274\310C\275\016.\346\274K\n\377<\366\344\244\274\261XE=\204\250\210\274\311\226\375;\023![=\363sK\275a\256:=\177\363<\275\032\336S\275\305\021\236;%\321.=\205\357*=<\267\322:\340,\352\273\356\030\336;\001\244\007=\010\314;<@j\263<\227\271\027=Q\311S\275p:A;\312\314\3449\324\364$=\377\347F9\271\020\242\274D\330\226<\222\226\330<\254\232/\275\351\310O=\353:\350<\317\241\326<\356\354\025\275_>Q\275\232\223,=\023xj<\2436\354\274\"\3454=\352\212/=:\375C<\315\342\374<\217yW\275\242\310\002=\326o\033\274^pO\275\226W\341\273!\360]<\271\347<<\022\332.\275R\021\262<i\254\303\274\013\265T=\2708\206<\306\3774=Q\014\320<\216\230\025=\033%\253;\200\226\'\272\325J\372\274.;\000\275\343\340-=\002aR=^\217#\275\271\342?\275T\3218\274\237\034\013=\256\264K\273\t\t\270;\021\263\030\275\013?\006\275\346\306\033=Lg\017\275J\031\025\275<VE=\227\350\267<C\262o;\031\201\256\274\234QY\2742G\206<t;_<\252/e\273\336\366\316\274\307]\026\275\033\353x<p\251\231<\366\3503\275L\215\017=HM\016\275\322\252\307\273z/U<\335R\010=wt\016=\253\350\037=\214p\257\274\336\330\030=!\332H=\215S=\274p\306k<\3331\007=\014:0\275\260\251&<+\201N\275\265\375(=\013\267\373<\\\221\235<\020\260J=\341\260\r\275L\205\361<+E\367\274\007WS\275\216\027\363<\315\002\232<\037\336\010=H\223L\275\353\016\322:q\207\024\275)\240\'\275\302S\312\274\314\214\360\274>r(=TU\022\275\221\240\032\275\250\333[<\236VN\275\306%U=@5R=\225\0264\273\222\364\354\274\314\223\346<\372\213\037<&\240\342<\371,\307\2737\310\315;3\002,=\347\177\032=\246\244Q=\220\207L=vc7=<\325\004\275\3423\267;\020\264\201<P5\023\275\2461L<\314\2527\275]a\360:\236V;\275\321\314\266<\331\366\312\274m\340\331\274\357\310\236\273\312q>=\327\006\237\274\347\036_\274:\3561=m\334\361<6\350\030=\013\200\003\275\313\'^\274\325\037 \275\213\217\223<\344\340S\275I\323\214\274\264_\2549\202~\000\275J\201\021\275\006\300\n\275\217}\357;\016\307\306;\360l\372<\254IE=U\240\330\274\373\216\364<A\307v\274\\\210\342\274\002A\035<6\0376\273\243\363T=\356\201/\275\256\2165=\301\360h\274\343\364:\275\345\024%=c\220\030\275\255G0\275`p\323<\331S\010=\324\250\302\274\343\260\r=\034\261\025=\351\317\253<\364\335\207\274./\000\275\246\343\001\275\277\265\007=\277]\345\274\027HK<H1$\275\360\227T=\363\201\331<\345\037\033=\251\002&=i\261\235<R\326\303\274+\221S\274\3307\244\273\321$\031\275\315;\026=e>0\275\225G\307\274\335\'E\274\3619N=\006i+=\224\244\002<\276\223\325<\333\001\270<tG\024\2731CX:)\212*=\257j;\274\214\200*\275\216\370%\275\273\"\375:6\207\236;\333G\267\274\177e2\275\300-\373<F\364=<\352\241[=\023\271\002;\317\227\360\274M\227\314\272\034\0006=\320\263V\275$_7=\3128\261\274\235F\320<\351x?;#;&\275\251\365}<\302B\354\274\013\3459;U\224/\275\361\332z\274\353\361\314;\223,\255\273\2405\331;\006$T=\032UD=W\372\362:\241a\177;G\365\033\274\n\r\334<\370\207B\275\0026\307<\363\003\202\273\027\003@\275Q\233\034\275B\274\340\274\265\302c\274\2444S=\270\301,=?\037\030\273R\007&=\267up<kC\375<\231\276O=H\003(=\313x[\273\024\256\035\275\271j\020\274,\253?\274X\313h\274\240\267\031\274\n[*\275\177\374\264\272\370W\372<\256\243\342\274r\233\034\275\205\261=\274\367\271\202\274\360\301\377;\335\350\021\275\201ZU\275\370x\303<\262}\\\275\273\250\036\275\374W\365\274\017\3306\275`\330\310<\304\025\361</\335\027<\3046\347<\351H\031\275\271\2364=\215\245/\275\265\277\256\274w\2024<\333\000\367\274p\210<<\003\234I=\0305\022\275\322,\022=$\356\033;I\251\311\274v\373\262\274\321\030\267\274\207\332:\272\223\271\024=PL\375:\343t\013=\301\314%<[\257 \275\210\351\323\274\347\266\320<\324\024\226;V\223J<c\274\t\275y\346\222\274\304h\002=\321\267\223<\314\257\355\274Z!\n\275I\273H\275\037%\024\275\317_;\275\020e\243;`\023%\275v\020Z\273J)\251\273QZ\025=\\\327\324<q\201J\275\343#\'=\365\337\377\274\344\274\321\2747\301i\274\253\030\020<%\365\007=rm =\336\262\020<\304\262\013\274\217\370\326\273\020\353R=\336\343*\275\266\020:<\344(G=\271j\232;\0165L=D\252\274<\337\226\246\274y\366*;\025]\025\275!\\ =\213\354\253\274S8-=\024\251\242<3\354\235<\252\213\365;\212Nz\274\276Y7\275\377\336\207;\243\236R=Iq\245<n\351%\274\337\201\247<\341O\023\275\177V/\275\204\320\035=J;\n\275\272\324\023\275\357\372\006<o\233v\274\026\246\002\275\212\2417\275\374#\371\274\234 =<vg\340:\"\001+9\326h\006\274(\267\240\274\035ch;^\201\003=x\002\342\274\324#\021=\243m*\274\"#\3619\021.3=\264\260\325\2728\357%\275\260\335\034<\240J\017\275\301\314!=\340\220\350<\205rT<=\014\334<y\3664\275nkK=\033\027\371<\271\272?=\236,T<\310 6=\351\261F\275veY=f\3311\275MUO=\205\274$=WZ,\274K\234\304<\261\334\364<N\027\371\273\333\351==K\3102\275\264\002,\274\220\264\000\274a\347\257<\2579\201<\'\232\177\274\026\030\367\274\275\231-\275\346r\016\275\231\216\006<P\200\271\274\271\223\222<\246K\340\274\371*\236<\007\365\t\274\034\320\270\274\ro-=\360\226\326\274D6==@#\200\274\226\306\004\274+\211U=TpN=\334\213\376\273^jF\275r#\325<R\3712=\205\355\233<O\353\014<\216\346\020=\276\262\002\274d\034\022=\022\3769=00&=5\336B=+|+=S\215\250\274\345xs\274\323\200\360<\2121\370\274\352\312G=g.Y=\006E\331\274\324\272\001<\223\310(=\241\316\251<\033\034&\274\320\342!=LP\213<\347\371X\275\357\003!<\310\254\275<U\266\021=cS?=t\032\310<\212\371X=\237\333\367;\260z\213<{\347\303\273\235\337*\275\014\0105=N\0160\275O\3369\275\341\014\017\275d5[\275!Z\223\274\235\230T\275y\221\317<\230\222;<\311\314\t\275\233\365\004\275\325~\237<s\351\'==i\\<G\346\023\275h\372\317\273\254\347\350\274\230jA=|6\315\274z\225\207\274\230\341\260\2745\245\035=\320\253\212<\271_Z\275\212\270(\275\313\311\212<C\245$<\213\303H\273>V\352;\310\254\221<&\305\006\275\366\304\013<\377!\365;P9P=\225\350\030=5{l\274\031:\002\275\231\036\244\274\327\000\006=E6\213\274!\361)\275\244R-\275\3301+=\324\314\030<+\362-=\002\034\246;u\353C=\253\\\255\2741.@\272\275>\205:\357\3247=h\300I\274=\200\220\274\221\241v\271C~B=\212\272W\275d\313\3548\340\036C<\314d+\2731\333f<\234<\'=\261\262\245\273\025\241U\275L\345\354\2741\252\254\2745\371I=\342\221V=O\353\'=\010\023R\2746;P\274]K\'=e\366\014:\276\355\353:\323\177f\274\001\242Z<\275U\201\273\234\t\034<c\246\363;\312\036\025\274q\377\205<Dr(\275\227WS<\024y\306<\005\274\372<\263\016/<P\240\352\274N\377i<\221\370/=\234\225\342\273\243`\350\274\227\017\220<\016O\031<z\355.=)\303\007\273\0141\027=\254\237\014\274\221\336\255\274\027\3600\2751\016\027\275\327\367\001=/\246\313\274f\213\001\2757\305\241\274\263\351\364<m\322\217\274\321\272\253\274\025\254\027\275\360\244\211<Z\003\376<(WZ\275\346P\215\274*W\r\275\002\333\231\273\355\007\214\2748\260P\274\264\031\303\274T\001\323<\027&^<B!\240<X\234A=\364\n\303\274\362\260\374\274\006\373X\275.\274\016=\314\313>\275\365zE=7\005\007\273y\360\323\2728G\\\275\310\334\356\274\333\177\211<\252\2711\275\215\016\250\274\310\210\010=/\355W=\334>:\275\2643U=\031\324\237<\r\253h\274\2527F\275l+T\275\032!\261\274\346z\233\274\204K=\275jx-\275\270\241S;\303\005\013=\303uZ=E47\275\037\377C\275\314\252\001\275\333\302\220\274\006\317L<u\245D\275:\026\351\274\025@\014=\306\207\263\274\350* \274\341;\206\272\377v\021\275\021\277\277<\013\010\r<P\372==\225\002\365\2741\207+<\237\031&:i\217\3509\217W\307;\356\010$=\301\255\030\274\224\016\366<;\255\313\274{d8<w&1=\203qx\274\364\300\\\275a\343X=\355\2121\275\031D\201<\006\212\214\274\223v\334\274g\202\027=e)\370<%\265\265\274\211HQ<\222\376\366\274s)\303\274\260IU\275\230y\330<#\252W\274\231yD\275\371\234(=\374Q\361<\312\226(<4\2040=3f\025=\034\324\037=\337ZX:\214\203\037\275\226{z<\370\372\001\275\351s\347<+\242C\273\351\206\352<\244B>=\007\230\032=4\231I\275\260\260\255:\331\374K=F\274k<\\\320E\275\033o\006=\220`*\275\250\212\031\275hJ)\275$\024\034=\276\305@\274Ov\n\275\2274\216<\351\334\341\273Z\035\261:\327\202\320<\324.Q=1\244\265\274\345<\243:\234\1774=\343\246\020=\357\236s\274\360\200G\274r1\362\274F\2001\275\370\001T\274\244\253\313\274\325%\275\274\271\361@=o\344\251\274\373,&\275\331\220\264:\264a\r;~l7\275\262/\004<=\233M\275\303\225\237\274\360\204\036\275\363\343\003\275l\3742=2\016{\274\203\352\275<6\213G\275\\o6\275\213+$=\362\"\022\274\321n\325<\370\026V=\205\"*\275e\014\301<\341\301K<\314A\212<\340\371\001\275\213\006\275\274\200\271\001=\351&=\275\010\231v\273\274X\345<\305ZU\274\262\235\274\274\246\261\370\274\304\321\220\273\323eI=*FS\275\236\346\\\275\021(\031\275Y\223\240\274\347\325\364\274\223\273\352\274\244:X<\333\006\333\274\023\007\241<\021\010\016\275\242t\306\274\325\024\023\274YXh\274\032\364/<\347\274[=Du\014\275\326>T;\344\376\t=*C\240<\376\307\003\275\267\275\360<\336\006(\275O\031(;\265\241k\274\006f\'<\245\341\003=(\244\376\272K\275\005\275\311\330\251;P!\033\274\254\237#=\225\351\364<\276\331\010\274#\005\325;\027\316C=c\303p\273*lS\275\211\316\002\274\313\322n\273\235x\021=\273[\350\274O\205\367\274\277\214\302<Tg2<\207\330\t=j;9\274S\010\026\275M\236\016\275L0A\275@p\022=\221\032\322<\336.%=OJJ<K\301Y=\317\000\325\274\221\222\240<\267n:=\007\345\036\275\356\243;=\'t)\275X\036\261<\205\\\016=6\342B\274]\223\030\275$\201i<=\373\037\275B\324\034=E\222\245\274@)l\273\230a\005<\215+>=P\252\t=\270\373\'<\252\025`\272\"\324\354<\276\205\242<\025\234>\274\3659\3209\206\"\250<Q\244\300\273\275\034S\275\235\317\335\272\322\230\224;\372\"\302<:*H\275\337\327\001\275V\241\312\273Pz\024=-\3140\275#C =#T\352\274K\010\331\274\334\233\366\274\234]\373<D\334)\274\331\033@\274\377\244\313\274`\357V\274\021\377.=\324c\332<\032\346@=\314xZ\275<\207\346;?\034T\274\223\264\202\274e\027\373\274\003x\037=\037\010\033=<\2405;A\231\263<\243\230\314\274\237!\224\274`\003G\275\353\023\014=#e\032=q\016R\275\037h\256\274\024\0359\275\003\235.=\207\214)=\266\357\202;\354\322$=\311\225\260\274\246\231\030=ph8=\222do\273\245/?\275\207.;\275=\251:=\376\356\201<\211]]\274\203\263\002<m\340(\274\225^\321\274\256{K=>\013\033=\223i\311<u(j\273\341\343U=X\0027\275\347\320l\274=I\032;\221IR=\307\260\302<\244-W<\004VS\275\3271\253<\232\3537=>yT=\241\322\354<\n\023\025=a\345k\274\316\031a;{\373\3779\311,Z\275\352\034\276<\331\004J\275V\312.=Q\200\212<!p\373\271/\255#\275\312\377\365;R\0365<S\033\013=x{L=\246\002H=\027\205\026=\356\350\024\271\020\344\223;\2061\"\275\350\032\026\275U^\246;\177\272\236\274\313ZZ=ce\202<,L\317\272\352v\271<<!\236\274\r\246<=\215\213N\275\277\263\005=\263\371B\275\266\354\231:H\302\374<\320g\243\274\310\277\032\275\236\366F=\355\321\361<rO\320\274\320v\005\274A\017E=\335\344A=\236\021\007\275%\"\265<\255-K\275&\3560=\352\240\n<\337.4\275\314\333\224\274\217\226\000;\261\205>=\332m:<\262\320\014\275\220\237\373\274\213`q\274\310\2314\275\201j8=l\276\264\274d\026\'\275\247(\362<\351\326@=s\203c\274~;\244\274G\031\t=\246\313\362\274\204D?\275\013\260\014<7\202==\35159\275\17746\275\003\342J\273E\320;<\253\255K\275\034\022\003\272|+\005=l\372\376<\340Se<\262\201\363\274\327\034\324<\037q\275<i\256\t\2751\226\273<;\363\204:Y\245\236<\326\336\362<\004\t\031=\324\342\"=\001\3331\275Uw\006\27386[<7@#\275\241$\003=\371\357\253\274R\223{\2744\237\372\274.)\002\275\222\234)=1\204U<\336\232V\275\265\202D\275\335S\257\274-\2733=Z\214\005=\374v\t;\262A1\274l\372\"=\024\336\017\274\224\370\024\275\260Z\300:\225\020<=\344\344=\275O\023\031=\023]\213<*\277\242<\226\023$=\222\353\227<\330\013r\272\374\352\241;\377DH\275!\251#=\270YT=\023\201\016<\274\241\233<l\220\356<\333\'\205<\261w%=DW\217\273vd\230<\r5\036\274\341a[=\254\202\010\275S@\367\2743\373\"\275\031\205\n=\320\026`\273\265\346\013=d\300:\274\220\n\n=?\307$\275nL\332;\212so\274\242\215L=\363\215\274\274\371\300\352\274\\\342\226\274.\204\031\275|\305\355\271\033r\033\275\365\376\325\2733\300\216<\215\001\215\274R:\000=o\337G=\"\265\313\274\277\320\033\275\001\n\351;=\014\200\274\334l\230<\323\362L\275\200\344\214<\031\246%=\357\211q<\013\013<\275\357uX\2752n1=\341\036_\274\022n\311;\360cK\275\367\201Y\275\331\326\221\274l\n\007=\204\226\225<\360\013\016=\245E\273<\036^\240\274E\365:\275\360\2779<%\360\037<.\234\\;sU\005=\304\3653\273$\203V<\253\356>\275\344\207\372<[\025Z<\2061j\274\355K\276\273\2612\272\274\360\017i<e\362@=\261\031\336\274<WS\275\341\250L=\224\304e\273\345\253\300:\312\305\036=-\3440\274b\371\260\274!\266H=\267*\002\275\271;]<e\335U=;\362\345<\240]\322\274\372\366\'\275<gg\274\217\032\302\273\350\265\366\273\3412\237\274\231%\010\275\0335\'=\371\017\377;\243\014\200\274\204|\306;GM\323\273;QF<\324\234\336<\'=\362:\340\226[=\221/\263<\010\005\023\275\340\217P\275/\231\254<B\271\027=\236\203\220<\227\237\214\274dA\016\274\027HU=\004\306&=g%\007\275\323\271\\\275\013\206\254\274\226\204\355; SP\274\364\321\036=\376\032\233\273\363\214\'\274\005\t\221:\322\330[=\260\032\244<t\345\226<\272\252\214;\362\354$=1c\232;\247nP\274joM=\344\271 =KA`\274\362\205\212\274\224)\345\274\351\006\311\274\305\254\353\271\320\266\";\007\016{\273\337\006f;\351=V=Smb\273\031\025\210;Ag\351<\364\367\262<U\345\273<\020\325-\275!c9\274\347C\332<^\214\320;\214\031\206\274\333\333\314\273\311\221\274<V\037<=\233XM<\256\010\017\274\256\207\326<y\311\301;\024l\364<6\364\271\274x8\215<w\2616\275\212Z\235<K\360\004\275{\262\316<L\211\215\274\256\270\266<V\242L\274\372\220\033=\244c\263<\220\255Z\275\252*J\275\372\031F\275\000\347\335;\346\n\025\275\270\024\260\274\333;7\274#\025A\274\230LF= \372\327;u\247\300\273t\330\020=P\177\224<\341\003\237<Z\372\010\275\3012\031\274\n\243v<j1\304\273\257M<;\205P\030\275\035\3022<\253\334x\2733\214\r\274mh\024=\350J\376<\224r\346<\021\322\243\274#\2644=\375%\010\2744\221\270\274\2240\014\275\271\363G<|\215\223<W\326\035\275z\220I\275\037O1\275}5\371<\312K\276\274\3444=\275\027\010F=V\311;=\333X\033\275~\345\"\275Q\023Q=\014B^\274\rN\366<\203\313\261\273\250\326\222\274N\205\215\274\242\232\210<\353[\301\274\217\237{\274\346A\007=^\372\251\274\334\235>=~\024D\275\332\213;=\333\3434\273\253$\022\275z\256\355<w\300R\274J\216\244\274\363\3708\2753\3762\275\221\304\030=\227\262\305<\376\210\321\274|W+<B\214=\2750\204M=5\010B\275\247>\322\274\007E=;f+\316\274\025\215\362\273\2157\220<\005\341\305<\001^P=\327\346\312\274\014\213\026=\3657\017\275W\343V\275\263\372\005=\321-\202\274WU\036\275\203\257\376\2749\003\222\274\201\037\326<Z\371\211\274\216\215-<\341=\005<FC\323\274\225\314\366\274\204\333\230\274\255\031\232\272\262\2513=\272\237\212\273\324\0264\275\2354T\275\205\373\273;d\205I<\273\311\211:\2653\330<J\177\246\273ym\014<\260L\035\275\205\362\217<\340\006(=\340\2413\2755\257\203<o\031\022=8B\317<\371J\377<\364?\215\274F\340\007\275\375\014s;\330\001Y\2747\177\341\273_4\214<R!W\274\3203\262\274]@p\274\234L\233< \253\374\274wP\345\274&\344K\275\367\252\016\275\352\224\267<\005Q\271\274Ha,\275\202\347\302\274%\023\032\275\2650F=\324\252p;K-U=\264\346\005\275\275\304\004=\225H\351<z\300\332:\201[M=\265\301]\273\0222\343<\201\332\316<\314\332N\275&\377\242\272Rp\215<\276\301\033\275PB4\275\002\360\n=q*\017\274I\005>;b\031\024=\261dH<R\003\\=\232\345\230<\250,B=\002%\014=\260w\254\274\026\007\257<i\351\240\274\210Z8\275\032\340X\275AZ\3459CO\374\274e\035\007;\327\271\330<\254%\332\274\374\252\002\274\372\2159\275K\302\205:\033\226\304<\211LG=\243\232\347:q\331\010\275:\271\356<\345\222\017=u\324,=+\026\035\275\363B\234\274;\320\361\2741w*=&\204z<!\227\307\2744\270t\273z\322)\275\320s\035<\356x\003\274\354a\314\274\240\307O=z\254~<\374\"9\275\177k\020\275y\246\365;bC\014\275\366\004\200\274\206o\350\2743\332\371<\345\337\300\274\\\372!<\351n:\275\322L4<\037\342_\273\302\363\031\274\216\025\020=\367\232@=XN8\275\371t\210\274;\314#=\334:\000=\001\241\310<\304\307!=~\306\266\274\262\364\237<\246\324;=\224\314 <`\226v<t\214\223<[\217\027\275\236q\313\274\213OS=\t\254\263<\033\354H\2752\226$\275<i\220\274\216|(\275&\327\033\274\"\2618=<\253\221\274\372\371,\275\037\355\026\275+o\205<>\243M=\300Y\207\273\367\266Z\275\320\"==:\320A<\247|\025\274\033-\006\274\024\376b\273g\326&\275\3347A\273\275e\224\274Hy\326\274J\342\004\275Q\303r;F\274\353<\200\275\261\274\316rT=KA\033=C\372\231<\266A7=\250\364\213<r\035M=\372\305S\275(o\036\275M4\r\275\325\342\333<\014\023\\=\241F\247\273\211\205\345<\2530\223<\354\232\300\274K\253\271\274\207&\363<Q\023\357\274O[\r\273X7\206\273\010\340\221<w\\\305\272\365N\213\274^2\274<\225\236\';\341\031\311<\265c\232<\302\266,\275\310\255\261<u\207H\275\347\362\016=5\333\336\274\033@@:\014-\341<i\311\"<%k1=f\206H\275\333\357\017\275b\006\033\275\236\227*=\033\356\367<\267\277w\274\024\307\3349\016\265\202\272@\247#\275\203\2471<\013k\233\273\005\331\036<%\277\266\272\362\024\347\274\363\235 \274\022\300\354\274{\361=\275\247S\005\275:Jq<\255\224:=`\007o\273\354(\301<\024g\236;\315\357\016\275\"\232\001;|\216F<\361@G=-\330\202;\357\362X=\356\224K=\377g\371\273\250\310F=\355\316\342<\231\3746\275a\346h\274\221D\233<]\035\322;p\033];\326\010E\275\205-N\274w\377\343:\'50\275z\276M=\364.\241<Ce\t\275\232\343\214\274\356u\271\274\326!\323<\221\371\332\274\370\203\233<PQ%\2757\036\007;\000\'_<)\347Q\275\036\306D\275v4\331\273\362\364\021\275\370A\267\274\213\1775=\351T\035=\215\343\244\274\357kO\275+g\253:H\314X\274.\303\026=\0066\313<\033\351:;\256cu\274\022,-\275\377x\367\274J\2160=j\275\016\275\321-2=\037\021\312;\334\257\373<\347\n\023\274\233\377V=\333\231\016\275&\220=\275A\211\246<9\321\306\274\031\232[\274R\212\017\275\'\373&=\031c+;i,\031=\270R\372<i\325<=\352\277^\274a\272\030\275c\332\032\275h!\260\274-\n\016\273E\345\032\275/\\\365\274}\311\274\274:\323\201<\357oP\275\302\225\376<z\245S\275\272g\274\274\271\0304\275\354G+=\225\215\312<\353R\317\274\331Z\362\274\237\305D\275\370\274F\275\003\234?=\t\340P<\230.A\275\315\247<=\233\316\220\274\006$\327\273M\331\374<^\220.\275|P,=\277[R=\273\372\360<\307\333\343<\320\216:\275\341\327\020=9\247\227<J\203\016<\370\253\367<`\365Z=\005G\211\274*I\242<\252G\014\2734\231\261<y\300\001=\275\302\372\274\177\233?<\026\2579\275\031\020\213<w\207\277\274\272\337T\274?8\024=\3643c<t\222\266\272\004>7\275p\301\220<\034\334\346<\014\234 =\003\216$=f\200Q\275L\017\244<\366<\311\274\027\244\000\275\304\211O=\250\2373\274\211\036\274\273\375\267\343\274\210EJ=E\215*\275w\261\347\274\206\r\202<\323\246\333\274\306\226)\275\221\312Y=:y\033\275\026z\003<\252-:=\350m\355<iuH=G\255y\274@\003\205\274\232\361\315<+\222\322\274\366 (\275e\343\244<\204\304\302\273/-z<\247\3310=\216\340p<\267\315\260;\347\362\003\274\321b\336\2736\313\202;w\215\314<^\3664=\"\366\235\273s\237\330<y\035\213\274\251\235b\274\030\215>=Y\235\274;\236?\226<\333\207\010;\300B\267<\327\266\207\2731^m<\365$s\274`\366D\274~\031\351<\320i\202\274\255lE=(\373\241<r\217\321\274\027Z\024\274K\276\347<\021_0=be\036\275%\371\002=\313l4\275\023{\210\274\305\025J\275\333V.\275L>\335< e\032\275\323>\331<\360\231J=\261\366\r\275\024\215\243<\314\345\323<>\2005\275jJ\320<\nz,=\301\374\024=\231\2356<\234\231\257:\020\010\236\272\340\002\222<\373\305\033\275K-:\272\341\344,\273\370]H\275\247\266y\2748\221\031<@\036.<\312#4=t\2109=l+!;\000\300\331\274\334\315\030\274\310C\342:\224l\203\274\336;>\275\024\214\237<\360Rx\274\350\264\013\274\221\362\224<)\244 =\202\242\217\274\031\327\"=\277\3305;p\"R=^\265\n\275\356\336)=e.\3668r\261\254<\224\2459\275\335u\025\275\317x0=3\361\346\273S\232\371\273\363v\232<UL\334<J\301\214\274`L\\=\316\245M\274Q\026]\275=\354\227\274;\323P=-\214U= G\021\275\376\001\025<Y\220\023\274\313\001\037\275|\0006=\364\263\215\274\270\335u<\3165\213<T\346h\274\254\223\274\274\305^*=\352\321\214\274\022\005\233<@gD\275\013\330O\275K\365\216\274)\2314\275\327\375\342\272\030\204\246\274?\301\005={\235\375\274\206\376>\275 \257\234<\313\013\233\274\227\223\030<:T\010=\320\365M=?\257\274\273\013]\367<i4\237\273\340\236\"\275\014j\006=Tqd<NX\027;Hr6=\001\364\021\275@\203U:\017w\252;7~\256<R\202\007\274\2421k\274\240\016\017={\247L=\225\014E=\200/a\274\322OC<\334\306l<\004\276@<%\272\366\274g&\034;x{0\275\233VA\275\337v\313\274\005\217\256\274\251\371W\275\270\010\344:q\206\272< 0#<\314\334H\275a\330\325<P\233\215<\370\260F\275Rm\033=\351 5\275\303\2644=\272\004\246;!\211\337\273\210\245O\275\307\302\257<o\376\260\274X\341\t=\220\363\373<F\245\335<\017\347C\273 \306\032=\367\003W\275\245\004X\275\320\347\003=\315\244\230\274\312\242&=\315t\214<C|<\274\222J\026<8\362\227<\221s\261:\020\213M\273\242\203+<\244v\217;B\360E=N`\010=ER\236<&\3528<\020\372>=MM\213;\374\277h\272\003s\260<D`\220<3\344C=\374\366D\275i\214C=\223=g\274\031\262\006={\235\035\275=\203\312<\030k\002=\236|\230\274\333K\256\273\367$\261;\375\003\"\275#\346\224<2uS<\37202\275=\314\357<M\205\315<\311 A=u\371\340;\025\353\003=\346z\217<\272\215Q=\222\332:\273\2263\324;\206\326\206<\211\272!\275\200\2656=\346\271\r\275\343\303>\275{1\026=\322\366\n\275\3462Z=\210\375\366\273\274\034\022\275\277\356B\275\233\276#\275\216&Q=\233\013\320;]s\256;\312&@;\350\"\345\2738\221\340<\356D8\275\376\373\\=\233t\n\274\255\305r\274\032\237\312<\355\026\031\275G[Y\273\375Y\t=L\007\271\273\203p\t=\266ak;l\225U=\344B\230\274RxR=\207\241\037\274\377\337\227\274\311\003\330<\324\'N\275r\t\n=\342\337\372;\352\031\237\274\213\262R=\310P@\275\346B\375\274\230W\334<\010\232p\274\014\205;\275fy)\275\217\307Z=\216\326F;\230\311\254\273u\2038=.\271\033\275\327\365\202\2730\333\003=\304t\004\274\265\214\250\271\301U\020\275u\177W\275Z_\237<ZbR=f\247\272<a\202\303\274^\002\025\275\237\374\241\274\343j;\275\260\031\340\273\347\021\013<\316\240\027=\314\323\027\274Y|)\275\374g\367\274\343-\t=\333\327`<\216}o\274C\234a\274\217\344\377\274\346E\250\274`\234,\275\001\2444\274y{\014\273\244\200\016=\253~\010\274KpS=\373\215\224;\321$\370\2742@\204<\236:\307\274\313\300W=@%&\273bK:\2703\327I;\032W\302<K\330\334<\344P\222<\233\002X=\377\236\345<\313l0=O\212\210;s\366H\275\005\2210\275\"4<=\201\252\023\2741\346\'\273\326\3227<\00793<;A\005\275F;;=|s\373<H:\001=Cp \275\3728\n=\205{Q=\241\237\n\275\360DY\275i\274L\275\024=\332<\033p\325<\"\221\217\273\264\023\274<\255`S\274\334\333A\275\340,$=R\242I=\364\245F\275O\352\343\274\r\032\343<\335\014Q=<\230\022\275t]G=\001\2248\275\\\344\270<\255t\256:\255\3451\274Q.\315\274Y$?=\377\223P=\n\310\246\274\301NF=\330\237Y\274\"\223N=\010\343\034=\275S\332\274\321Y\371<\235$\305\274\002\366Y=H\372\310<\275C~<\272\313:=\245\305\303<z4Z=)\200\316<.\360b\274\013\\\231\274^\344\003=;.L<b(k\274J\254\343;\217\016\334\274u\037\214\273q\377\347\274\304\275t< p\265\274o\025\366\274rp\033\274l\t_<\337u\n\275\223\226\203\273\361gV<\335\242\'=~O\204\274\274\334\013=3\233\375<\030,O=\022\355!\275\025h}<\241\352\262\274\302\261 \275>=\245<\272\267\'\275\244\261\226\274\355\213\226\274x\235-\275l\377U\274g\245\203\274\214\013\025\274E^\030\273\000t\256\273\356\370\254\274(\017\032=2w =\244\033W\274\251\343\016;)\005\002\275\200\r\017<\261\252S=\337\031M<\"\350\260\274C\002\260<\207\014\001\275\212Z\303;\231\205A=\340\017%\275\006;\016=3\245\365\274)\277l\273\224\035e\274g_K=MF\317\2742\215)=\331\3103<eL\342\274\014\341O=(\t\000\275@.Y;\031\203<=ss\225<\002FN<Gr\013\273\323\224\336<4a\t=)}\367<>;\310\274+\247^<9YB\275\264\346\225<\312\312>;\336\370\372:\036\016\245<A\022Y=\244\326\274\274\\w\273<}\225P\275\257|\352<\022\003D\275\023\231\002=\221h\227\272\343n(=\220\311{:\">\032=Cc\271\274.\335H\275\242kF\274\\lG=\000\327\231<#\347\352<2\272y\274\316\327==\247K\032\275Z\226\217\274\376O-=]TR=\322\310!\275`k\372<B/e;\027D8\275\365^Z<\232\367\220;V\217\340;,WI=\021y`;\232\3732\275~t:=\253j\360\274V(4\275\021\021\030\274&\360\031\275\263O\240:H\360>\275\326bo:\232\365\224\274?\316\344<\372e\002<\246\263\002\275\017 @=\032\242\243\274\036\356\226<\007\251_\274\203\353H\275\275\313\371<wh&=\246<\276:\0068\203\274\tY\306\274\004]\201<\276 U=\262\254\312\274\242@\016=\272\004q<\321\207\255<\316H,=0\2471\274\341<B=q\341I=/\232\016\275`R8=6S\254<\037!@\275\000Ml;E\331K\275\031\261\t=p\306\025\275\222\2377=T]\261<\007\263\024\275\302\211z<\356\343\037\275\213\261@<\n>V=8\247\336<\350\276\220<\356\207\246<>k\204:H\311n<\210\203\004=\017\014L\275f-\236<XVs\274\033W\022\275\251\263\007\274\t1\272<\317\371\212\273\024$P\275\341\376\372<\355\227\245<\033\356\020\274vR%\275\371\3612=\022\341\353\272\2759Q\275\342q\177\274\256\220\330\274\274\367\257<j$L<\235\"$=\343\265\217<\220V\244<H\244\032\274\3414\014\275p\333\024\275;.\213\274\024L\361<\340\214\016\275\303z\023\275\035\221\001=\275\331\317\274\315\351\362\274\225\242N<\365,\\\275\312#\200<\227\204\003=\345\236\031=\031\316\204<8\355B\275\260\037\332\274F\342\342<\302sU\275t\215\270\273\354\344\'\275\001<\210<\336\366C=\352\323\304<\274\006\005\273/\277\002<\216\304\336<\216\333,\275\212\267T<~\232*\275\230}\025=\324\2465\275x7\343<\222\301\016=\303\035\006;()\"\275\353\212i\274J:\262\274\305eK\275a\301\t\275\260\3168\275\3517W\275\266\356\\<?\305\037\275;r\023\275\377\243\002\275Z\307\344<i&P\275\022\\\005=\221\360\261\2740\270<<\315\001\r=\371[e\274\323\226\013=\323H\003<\215\032/<3V\236\274\025<\\\275t\227\005\275PC\313<@\177\372\274\035e\230:{\037\"=\262n\004\275\332\240\035\275\321pD<\355\206\316<*x\005=0%\013=\231\327\241\274\246\370\007\275\332,\347<\305\217B=\305\330/\275\2663\202\274N\232\022\275\343f\007\275\201\204\000\274\214@>=\235\303\255<>X2=\200\373\312\273Z!\366\273\255\224\004<j\026\014\275\277\230\230<\220\324U\274\215\376\356<\242\242_\274\300\333N=\014\206Y=V\210\376\273\237\264F\275\252\234X;\016\254\350\274\215\016\267;\355\034\264;\316\377V\275\204\331\363\274\3231\036=\261\353\014\275\350w\313\274\261,i;\302\331\032=W\264N=\247\263R=\000#\235;\265z\n\2753\315\211<6\026M=\375,\227<xc\323\274r5H\274\2661\036<:\217Y\274G\272\227<\257\r\037\273(e\354<\327\026\034=\031X\214<\004\357\2349j\323\302\273d\307\222\274\377\364\037<I\013\243\274]\303L\275\223b\266\274?\236\'\275=\277\'=\241,\235\274_\251=\274\334\333\022\275\035-\213<b\316/=\300}\007\275\342\211r\274\034\014\321<\305n\276;W{;\275\275\360\014=\360\300\322;\307II<\033\207\354\273tU\273\273\2341\211\274\305\353\000\275=\340\n\275\204\3771=G\342\336<.\220\252\274\307)0=,]\004\274\347e!=\202e\245;\251\340\226<\220t\366\274\243<\235\274\255\364Z\275\270\313\\\275}G\034=\203\212\320\272\253\207\223<\226\305\000\275\377)l<\213\006:\274\201\nT\275\252\331\301\274\267A\341<\374\030/<\010\341D=\236p%\274&\032J=\201\366\r\275\\\020\014=E\003\347\271\353T\361\274\317\323Q=e\244\330\273b\3472\2751\370B=\202\030C\275\331\372@\275Q\302\002\275\016\037\342\272\332s\004=s\022\316<\263\010\301\274\312\304\276\273\'C\305< \034\371\272v}E\275n\230\343;\342\305%=\230oN\275\202\217u\274\'\026\025=\245\254B\275\0359*\275\022\325\361;\251\003\366<\226_.\273\301&\354\274\272O\223:\322\036\032=5\236\306\273\244^G\275b*\325<j\2350<$\034\'\275\335G\032\275\375/U\275\226C6=\264f\346\274\233\201\3309|~T\275\303\350\001\275\222\345\361\2748\032W\274\252\3243\275Q\305G\275\245I\276\274\344\237==\321\344\311;f\243\250\274\347J\360\274\275\342t<\266\343\026<t\204\021\274f\262\306<\206\340\251:\253\2719=\037\001\341\273\350K\245;\331\036<<n\346\263\274q\370\344<\241\020\301\272T\313/\275\374=.=\266=\277<\276\2755\275\246\206\204\273\327\252^\274\000nS=S\n\235\273KD\031;V,3<\313\026\n=\336\242\016<\331\213\030\274k\220\325\273x\004@\275b\023\265<\024\302\361\274V\371\177\272\212\350U\275\321I\201<)\375\243\273\351\206L< \354\n=\017<\002=\tv\227\271\204\272G\275L\347\023=\220\243\257<\273\323-;\221K\272\274\253\2134\275\202L\373\274\277\355&<\000\r\332\274\373\211J=LT\024=P\274\005\275ea\317\274|\313\214<\257B\257\273\302\220<=\033\'*=\253\036>\275\363S1<*\312\374<\251w\003=j\304\206<\202J\r\273{\323L<\267z\033\275u\010\243\274\266\236-\275[y\276<\237\n\224;|Y\333<\177~\252<X\255\266\272Gz\031\274\360\337\007=xQ\341<\320#\006<B\272\035\275\037E?\275\0377)\274f\224P=\244G1\275\177\255\037=b\320\025\275,\247K<\211\221K=\"\243\334\2736\325;\274\304\244C=\010\201\002\275\375\352\347;\205\014\352<\336q!\274j\316\032\275L\254\320<\263;^<\2067\271<A\307\036=\321]\261<\005h\235\273\270\3373\272\32448=1\340\271:8\222\226:\230b`<\242>\317\274\"V\376\274\240G~<\350\261\003\275\273 \202\274\245\246\003\275\247u\350<\317j\013=\010W\251<\346Q\007\2740\375+\275&Pj:\340\363?\275\372<\255:\220\314\312\273J?X=\305F0\275\211\352\246;\255(\251<\261\272\301<@G\340;\177n\032=R\2755\275\033\213\265\274\275\000\\\274K\312 \274;3\032<\215\236P\275\0312\343<\337\202U<%\3475\275G\252\331<\321,\355\274\305\332\035\273q,\034=\215W\016\275\200V\232<m\325\010\275\233\353\347\273\236\351\021;\331\232\\=\303\225*\275n\2724<yWD<z;*\2753~\327\274k\352\274<\323\261\326\273\374\027\025<\255{L\274%\221#=\307~\276\274M`\377\274j-\315<\212\324C=\277\216\322\274X{\010\275\010\227\010=\344\264J\274f\017%=\314wV=\350\316O=\016\255X=\367\026T<\005\224\352\274\220U\031\2750\336.\275\347\002\324<`.1\275\253\345w\274M\254\013\274]z,=\303p\021\2759\217\306<\327!W<\311\250P=\337\330\246\274sqx\274\367\027\311\274IE\342\274\326$\302\273\327R\305<\337\032\n=\351\212/<E\262\014\275\346\370\373\274\244n\224\274SE$\275\3356\341\274\330\204\t=\021\235\370\274\027\022H=\206\035;\274DT\322<A\274F\275\243\370\255<\361\224I\275\347\321\322\273\304(\024=\205`\204<\374p\264;\225\034==\000\355\363<D7\325<\273\256\023=\346\365=;\340\020\024=\222\014\265\273\003\370\210<I\2638\274&6@=@\031\333\274\002CW\275\342\312\001\275v\306]\273\362/[\275\010\356@=M\354\016=\264\027M\275+h\232<sc\304\274oS_\274\010\2370\275O*\345\273\'\307\022\275JbE=^\005&=$\036*=\262 Q\2751\177A=\227\2638=\311\032\235\274:)R=\010\302 =\337L\306<k\2033<1\306\210<Q#\373;\360)\014\275\005 \005\275\362^!\273\271[M\275Y{\020=]\r\226<\271\373\004<[b8\274\330\235\217\274\037\225\260<\223\033%\275\274q\225<YU\255<\246&)=?;\005\275\330\347M\275\020cG\275\225\231\027\275\035\217\266\274i\311\033=9i\341\274\377\217v<\332/-=C\3465=\024\245b\274\241\323\221\2745\304\013\275\344\235N\275\216\327\261<\316\220\347\274\013@\337\274&\221D<\231\035\001=;~U\275\306\212\361<W\302)=\364}\200\274X\363*\267\373\215t\274\216^\200\274\243\224\t\275t\022X\275W\345\026\275\005\220\036\275n\006\230<M\317^:\336`U=\223u\263\272#M \275\366\033\357<\237\333\313\274\2338a<\243\225\277;\211\242_\271\261\t \274\376r\025\275\263E/<\360.\360\274\263\300f<\nQQ\274\023\202\034<v1\362\274\361\253\255\274\254\036\325;\237\301\005<f\202T=\354t\027\273\001CK;\325\234\034\275\353V\247<H\r\010\274\010Y\321\274v/\026\275-\363C\275\324:V=\260\207\322<\271\360\231<\212\010\031;\177\315\356\274\344\252\003\274\026\306.\275=\277E=\005\037\'\275\240\222z<\315\357J=\321\215\254\274&`i\273\\\223+\272\350\213\010=Y\276<\275\3534I\274\035\2357\273M\222S<\247L\237\274$\355\335<\0056\263<\364\0222\273\020\036\265\271V*Y\275N\210u\274Xg\017\274\265)\254\274l!\034=\341}\014<\026\2409\275\006\301Y\275:\032\324\274cj\007\274\204\367\233<\3271\305<j\317\332<\252~\037;np\364\2744\274\013=\006>\265\274\342v\016\275\311\365B=\032F\263;\334r\276\274\265Q\025<\361\224\001=.I\037=\271\277:\275e\177\010=\365wa<\3268,=;\223\233\272TYE=2\264H=\315\215=\275GQ\251\274\231j4\2741\214\377<\300\364(\275\237TT=\256\331Q<\020_\024\275\257\312\020=b\215\365<\334O\260<\300\335\023=\276\201\303<7\314\022\275\201m\242\274y\366\316\274g\264)<\234\375<\274\335\214V\275\212M7=\315\252\030=\314j\247<\0311\271\274w \321<C?\324\274\375\312V=\265&\010=X\304\375\274\217\301G=8$0\274$\033-\275\264\311.\275\334\301\020\275$\002\246\274VV\233\2748\234\313;\255\355\356<\222\343\237<Qy\367<L\364d\273\254\335\235\274\255R\315<\315Y\031\275\357\236*=o\303\235\274\246U\021=\032\365y<\264g\'\275\244\320\366<\227\264\005<\335\227\275<\222\207\347\274\312X\315<:8\200<W\271\346\273\350;\307;\006\274\r\275\024\306.<\000\"\325<kI\020<\361?&=\272\333\350<\303/\305\274\017\347\010\275\331\027Z<\200\324\032\274d\341\2478A\236);P\277F\275?-\022\275d:\245<\\\004C=Jf.=\006\256\271\273\375\340\362<619=\254u\253<\032\211\003=\323\330A=\3323\216\274\002DT<\312F.\275_\372\014=\343\235\366<\366\000\261<\263Sm<\311\307\317\274\336\330d<\367\264D\274u\021\347<\327\022F=H^+\275\t x\272-C\030\275\030O\340<\207N\314\274R\032\334<]\300\367\273V\341\037=W\252\004=\027\361V\274 [\361\273\237\353\025;\017\'\\=R]\006=\240\004r<q\235\026\275c\350-=\3048e\274\261Ty\273\370\216O=\361\262\002=x\265\321<\036u\024\275\325\222!\275\240\376\334;\303V\025\275\335\364\030\275\345\260;\2759_n<\326/Q=\212\320X\275V!\002=\372\375\002\275<%?\275m\313\n\275\210N\\=\202\272!\275Hf8\275\373\370m\274[\371\252\274\212\251\027\274\230\231\021=H\002)\275j&\213<8\275\271;z\334\307<v\237$=\350\006#\2753YI\275\344K\234\274<DX\275`\235\207<\375\034\006=\250\2038\275\343\017\306\274\301\022<<\321\344\t\275`R-\275\251\2528\274\371|\345\272\344\0208=/&\326\274@6.\275\235|Y\275\357\3431<\231\366\265<\343i\t=b\273\205;\216\346\210\274 \006\347<f\227\352\274~\224\262<\361\313b\274%\257\000\275?X\022=\014\2053=\246\322\346\274\025|\202\274L\371\022\275\355\351\001=\n\032\025\275\356\243X=\303C\242\274\013\321\001\275\335\261;\275x\023E\273\261\330\311<\347w\327\274\220\214/\274\207\245\036\275\256\214E\275\345\235\346\274%\276\351<\360a\215<\255m\344\2742\001\311<\0318\003=\363L\233\274\327pV\275*\334\314<\222\027\360\274\216<,\275\357\246\\\275\207k&<8p\023=\263\320\367<\276/\272<\217\316R\275\227\350\345<|7L=\362\035\032\275\2604G\274;\027M\275\3556\341\274\nU\222<\002R\333\274\372\331\022\275^t\263\2746,\354\274\207_-=\324\'\222\274\362f =\314$\377\274Sj.\275\rh\356<\006o\374\274^\356\300\273\007\010\355<\260\366\317\274\201-\220\274\024\331\035=j\230\307<\260\312\332\274\371[Z=U\255X\275\324x\326\274U\217\301:\303E\334\273\t/\005=D\\!\275p,F\275\332\017j<\366=(<\366\321P=B\004\212;\304X\364\274G\274\022\275\331\270\023=\214\310\232\274\363\313o\274r\316r<\345\312U=\217\372\024\275\351\244\275<\003\350\022\275$R9=\320\0168=\\\016@\274\213\252\260<\237\213\313<\037\372\244\274\325\222D\275\027j\353<\227\222\001\275,C\034=T\314\032\274\001\277V8\233cT\275\216\336#=\002\340&\275\014\177\301<\311eF<\006\035U\275\353)0=\2317@<-\000=<\031\313\337;4m\273\272\252\264\031=F\344\220\274\230R\275\274\0062\002\274\366mL=\312/0\275\034&G\275\222#\t<I\205\301<\223\216I9QmY\275\322X7=#\375\376<\223a\037\274\241\376\031=\tBE\275*Q\325;\004&F\274?\263m<u\225\350\274\r\216_<\261\027\253\274\004sW=i\000A\275\324\353\315:\254v\352\274\370/\326<\3142\351\274\264\3554=\310\365\255\273\254\220l:\320\272\362\274\227\2169=\202\014}\274(f\002=\366\230\362\274{\327=<\322W\031\275\274\332\217<\177\200\271\274V\305\344\274\002\2266\274F\376\267<Q\336I=x\263C=\363\336=\274[\322\177\274\rnS=8\022\035\273\265\236\035<\3268Y=e\371\227<\304\217\037\274z\340;\274\222\274\030<\322\306\022=z\316/\274\306I\030=\370#\364\2747B\261\274H\322\255\274APj<x\213$\275\177\325\\<\330=,\275\36700\275\221!\314\274\025\325\211\274\014\005\213\274&9Z<\235\214i<\313r\016<Q\265\202<\334\033\221\274d\365F<\300\020c;\272\221\034\275H\232c<5\025\302<\366.&\275\244\3123<us\217\273\271o\027=\272\246\356\274\211{\007\275\340\224\010<sy+=m\223\363\270/\253\241;\025Z\212\272\244\315\002;Dc\\\274\340\252\307\273Y\331Z= \204\213\272\332^\373\273\376\361\024\275=\225\323\274\372JH=Q\036J=\225\371\324<)_K<\337\001\304\274\342\316\243\273\310\036`\272\266b\016\275\250\316\314<\303\034\367<a[\204<\013=\007<\263)\026\275i\366\177<Z\007\333\274\310\n\005=C\360\245<\"\276\'<\366\016\034\274\030.#\274\'3*:D`\267<\021Y\347<\262\377%\275T\021\'<\177 \320<P\242.<\025M!<\n\201\236<\3413\246<xq\223\272\0268\243\274\371\265V=d`m\273G\2332\273\227\253\017=\235\245\004\274\271/\251\274\247\227\330<\352\276S<\033f\032=l~Q=C\236A=\237\343L=lK\024=\000\275\004\275N\335\374<\344\302;\274r\273\376;\256P\300\273\271\210\257;M\277\325<\225\340\337\2749\252(;\r\315q\274>0\r==\214\211\274\243f\304;\240o\340\274\276\2326=\353\325\010\275\366\t\245<\364V\'\275~\377\342\272?\363\\=\226\007\370\274\204\0172=s;\020\274,\344\016\275A\267V<\210\334\315\274cO\267:}Nj<\303b\010<\026\3231=\003\217\310<n~m:Nv\020=\356m\022=\025\342H;C8I=\303\343X\275ub\016=\2444\367<\026\316\337<\017\2036\275\037Z\024=\275\272\255;\332\205\351;\210O\022\274\n\240A=\255\317\371\274\254\354\036=a\320\"<\216\250\016<d\376+\275\306\361y<Y\201\035\275\035\356F\275\210[\351\274\003H\023=\023\223\034=\023\005\004\274\350\274\207\274\264C-=\334\223J<\322t\352\273X<=\274U\334}:$\264\256;3e\216\273N\365.=\351$u\274\010\231=\275S\355:\274#\377\005\275\032>\213<>\0141=\331\037\365:\360\342\201\273rH\303;Z\3308=53\371<\006\226\211<\207\277\364;J3\335<\034\224\001=^dH<\246o\024<\333\254C\275a\003N=:\373\220<\353\221\315\27408\310:\255gV\275-u]\274\260\312\002=Ee;\275&\016\r\275\217\023D\275\'\212\\\274F\360\216\274\313\233g<\002f(\273\270;R=\353\360h\274\333\363\217\274\215V\306\274\226`6=\272>r\274/\211\233<\032\010\224\273\213\250\272<\201\243\352<I\025B=\252\020\302<\235\201*=\223\314\367<s\201\246\274\nw\212\274.\202\325\271[D\362\274\373Ue\274\037\242L\275\000iP=\265\004e<\241%A<\262x9\275\376\206\365<\220\363R=\027(\336</r8\275X\315\267\274\260\301\341\274\274\253\023=\321\3658\275\316\367(\275\023G\'<\016\233\036\275\306_\214\274\n\302\240<q\363\324\274\314\205\337\274\000v=\275\034\253\365;\377\"\261<\215^F\274\345\204\356\273c\n\222\274\375\202\006\275\217z\010\273\230\326\255<\372`W=~\373\332\272N\362\201<\030\023\021\275iU\347<\251\242\025\275\322\246\325<@\206\213<\335>\013\275\331\247\003=\312\243P=A/#=<I\000\275\"N8\275\244a\001=$\323\227\274~\004\360\273oU\"\274\272\206c<\241\003\332\270\235*\022<)\242\334\274|(\t\275[\240\301;\225\314%=\336\352\021=w\r@=\025}\"=\027\212G=\277\243j\273\230\231\365\273\320\326$=I\356\347<6:\262\273\345\204\020=\322U\036=\204\376\017=\325\270\345<\205\265\331<\231*\023=\320+\273<\243\234\306\2742\370Q<\305\3452=\335f\331<\227\252:=\020\303\367\272\226\372\252<R\2754\275\244\322\377<\003\204\032\275A\270\277\274\363\271\032=\207\262\353<\324\212Q\275l\302O=${\255\274\371\010:=v.\327\274\016\377:=\276g:\275\205\2435\275S\005\000=\360\374\022\275\225\357\002\275S\201\000=\r\"4\275\340,#\274J-\035=\373\352\006\275\233\351\'\275\340\213}\274\334]\017=8\266\205<v#\265<.^G=/\345\254;\366\027\247<\004\244\001\275\334\'\006=\345\031(\275q|:\274/\3222\275Pb\033=Q\361\351\274V\036\246<T\354\n=b\315\370<a[\232<\363\364\364<F\225/\275J0F=\260\355\3679\325\035\301<o\357\252<\375bP\275\272\231z\274P\ro\274\302|I\275\372T\033\275\236`\242<>kW=\274\342U\275c\313R=v\257\305\274%\005\031\275\375\351\266:>F\002=%\252%\275\031TU\274\377\3367;\023\320\002=;K\021\275OV\240\274\3200\357:\034>p<\273|\212<\302}\021\275\215z\267\274r\251\202\274\021\035\243</V\262\273\353\r\373\274G\363\004\275\307\033\014\275VNZ\275\016kN\275Z\031\2359\273\301\264<\324\035H=6\206!=\254\337\365;\001\262\321;\227e\323\274M\372F\273\212\243\235<\327l\341<\275~\215<A\356\336\273A\330U=\367\000V=0\314\210<\031-)\274pp,\2752\240U<\217\006\t\275\205\250\373<\001\325<\275J)\026\274\365\233\035\274\262\014\311\274\026S\245;R\313A\275\332rW\275\254\266,<\003\n\013\275,\304W\2754\271<\272\n5\007=\240\335\264\274\rd\033\275\243\323-=\327\272T=\025\361\005=8SI\275\216O\314<\255\305\222<\177\351\363\274\310\214\330<\205\353\330<\320\035\242\274$/\220\273\272\177\020=\007P\000=\207Dc<\377\337\330<\n\337\300\274\373\254\212\274{\354\220<L\213%;\220\240\344<\r92\275\242\0278<\376o/\275\271\2101=\213\222\246\274\004\351\027=\315{\007\274f\352\232\274Ga\222\274\373fM=q\317F\2754NQ\274\304\267\263<\'\232\363\272\337~\010\275\017\260\034\275\223\316\351\274+\202&=\017\332\263\274\211*\316;\326\016e<\257\352,=\276\235\376;i!)<\207\272\302\274\007z\005=q\035\233\274\350\203\026=\201\237K=)\021\014=\255\372\217<F\277\354;\336\352\316;\001\003]\275\240\351\014\275p\037\235<i\021R=\373\206\\=(M\004\275\242\226\010\275\357\277\r<\2310E\275+\3320=\rZ\375<]N\331\274\003-\241<\230H@\275\303\266\242<\017C\307;Z\253\360\274@\026\205<\035\225K\275\306\201\322<\347\t\343<\212`A<\021\215V\274\321\204V=o\304T\275\335\264\241;\263\250\325\274\037\'\032=K\314\264<Y4\005=d\326\010\275x\313\201<K\032\\<O\000\010=\277\016P=C\273N=\3313\363\274\202!]<\340[\003=B\301T=>\203\017\275mI}\272\250\356\213<\215p\351<\202\355\371\273\262e\331<k6|<\006\013G=\24383\275\2414b\274h\261\025\275/\206P\272\302\351\231\271~n\211<F$\271<\\~\342\274y\373\241\272A\313\363<Yy\205\274\013,\035\275[\0169\275\263!X\2750?!\274N\036e\274\350P\326<\373\373=\272<x\357\274L\223\"=\231_\222\274\310\305\256<+\305\027=\017jP\274e\010\017\274\364P[\275O\344\247<\351\376\240\274\021~X=\020\345\226<#\302^<<\374\217\274\323\332[=\371\351\225\273\336/\246;\'\3743:T\270\315\274\271]\370\274\304\245J=$\361\321\274\217\251\344:\037\353\3619^/J\273\177\235L=\311\335\347\273\304\363\314<\370\315W\275D\032?=:\361\257\273\320N\225<\027\263\214\274%u\276<\002\227a\274\271Y\205\274\253\275\222<&7<=/\030W=\340\360(;\304\354\'\275\305d6\275G\256Z=\246\022U=\374\350X=\253\207\031\275.\021D=J\361\315\274\031J\264\274\207\360\023=\007\236\033\275\335\262\230\274\205s\324<A\240\024\275\324\264(<$\212\217\274.\2270\275\345\3602=\356\024\362:o\317\n=e\272Y\275Qu6=\003*;=\t\376\004\275\346\033\261;\023\207\373<e\034\337\274\214\r\251<\014\354A\275\211\272\274<^\212;=x\214\244<\036\214\372\274e\200\020=N[\022=4qr\274\034\033&<.+/\275\237g\034=\327\005V\275}B\352<ot\236<\210W \275\347-\367\271x\346\335<p\216\030\275\004\272\032=\3505O=\032(I\275K\255\n\275\351n\202<n#B<\242\2212\275\275L\334\274>\215\";9oS=\035\310\347\272V\' \275\347v\346<\201\335O\274\001\344A\275\005\013\323;\3155X\274\314\312\004\273\213\327\337<\212\326\342<\376_\272<\201\005=\275\022\364\214<\265\321\356\274t\276\240;]\230W=\376\213\364<\\\244\252<\312\031\007\275:2C\273\345k\020=\036\337\336<\234\374\002\274\340/\021\275e\373\330<\324$\253\274\206\354\231<\322\237\302<K\373\317<WH\030=\027|\004=U-\037<T\273\362\273\377Q:=WV8\275\227\024V<-\225\030\274\033\000\225\271\343\030_\273\204>B\275\023rI\274U\232\033=\322z;\275Y\337T=%\3053=\301\315\373< O\032\274\'\364\017\275\346\376\276:g\243,=\365\250\006\275\234>\326;1<3\275\354\246\027\275\032\326\027\275\033\304\037\274\230\265\203\274\315x\003\275{iv\2721\325\025\275\025}\235<\327\300+=L\203\034=O\331\270\274\013\263/=A\244?<\035\014(\275\251F\241<\251\rJ\275\024\257\037=\231\321V\275\022\016\244<\205\300\006=\007;\026={kP\275\264\t\227<\304\361\212\274\227\021\257;\214\312J\275\262\027N=\216fx\273\"\021\006=re\010=8\365\356\274\2338\352\274\026\004\335\274\016\374=\274d\316\351\274\006\354N\275B\304\037\275\203\360\253;p\365Y=\323\205A:\337\207I\275\021jQ=\020\233\226<a\340K\275X\304\024\275\247,\365\274\236L1=\230\343\020\275\275\234\014\2750Y*\274~]J\2754+\324;\376\007V=\231!<=\300$\300\274\260\r\014\275\302C\330;\261\372\242<J+\031=\203\027\343<\354\016k\274\316\034K\275z\344\023\275\020\221\305<go\261<\247\"\351\274N\031\020\275\177ZE\275U\362\324;\005\210e\274\006\210o<\370\213c<\250=<\275(\334s\274\222p\017=\006\263\344\274[n/=\342\2221=\353u2=\240\341;\275\273\034\026\275>p\306<\257\237\272\274V\330\243\274j\310c<)b\315<\375\301\345<\233L\354\274\260w@=\340\n\305\274[<2<?\310m\273\253g0\275\234\301%=M\343\256<\264\334@=\006]\311\274\n]V<\365\306\261\274\302n\233<n= \275o\021\321<\0064\023=\227\3469\275\267\276\3239\304\374\003=\334\031:\275\327\301\355<G\007O=\344\363S\274o<2\275s\277\372\274\177\270\357<\204\302!\275\270\323\013\275Y\231\266<\223U\216\273\370\364E\2732\312)<\360\363\323\273H*\322<\326\246e\273\366\370)=\010dH=9q\367<\341\233\310\274\225\310$=\037Y\235;\r\361N<\212i\254<[\267\025\274\216\247\366<U<\240<\256\0239=\337\n\212<\203p<=C\371\023\275\"lK=\277\355G\275r\026\304\274\\q)<\357\337\213<\260\221-\275<`7<0\207\342<\267\344\361<6\001\\=\004\034Q=T\261\035\275\263\300\260<\225\306\354\274\013I:=d\2439=\261cP\275\274\251\347\274t\021\221\274f\363\023\275\245\226\241\274\320sQ;=\027\037\275??\336\274i\246\246\274\223\325L\275\303\242s<\321\250\227\274\255\0025<\354\340N\275\351\310\243<Dy\376\274\3629\360\274\366Z\237\273\026\270!=X\324\207\274>%3=|\2423=\225\322\234\274:B\025<\001i\302\273\017\360G=Sv\\;\240\320%\275\234\035\344\274`\230\312\274O\377:\2751\244\303;\264\270\320\2746\222\030=\331QF\275\320\3614=\017\225\210<we\372<\337M\345\2747\214;<\317\344\306;S\206\253<IW3=`J\020\275\370\215\254:>\376\274\274\24470=9Z\301;\3463\001=\353X\t\275\020L\365<\332D\001=7\232\303\274\t\256:\275\0327\235;\0316F\274B6\022\274d\256\253<\361\321\\=\321\274\'=\033\032\264\274\027\344c<\211\276Q=e-\n\275jM\252;\332\324E\275\254\244\322\274\250F\301<\353\014\267<\202f\254<\020\005\035\275\326\344#=rZ[\274\310T\315\274\\\251\233<h\034<=\212\0305\275\205mO\275#\310I\275HV3\275\271\000\030=\312\026M<\360\322\207\274K\007W\275\316\3657\275+-\252;\352\024Q=\346?\202<s|\371\274\300\313\006=X\320;<\3526\003<\260%;=G\251\322<Kt\031<\035>\373;1\325\334<Jb\017\272R\254\352\274\"*\224\274\027\037\321\274\240\202\216\274\322\252T=Y\336S\275\020\025,\275%\002\220<\206\272\325<K\252\313\273\001Z\n=%\',=\272SK<\362A\006=\354\253L\275C0;<\316\373s:=\245\365<\241\016P\275\226%\201\274#\226\331<\265\277\204;s\250)\275\034\272\362<\263ar;t[U\273\312\310\226\2736d<\275\320x\335<\233E1=\330u5\275\025\001\r\275!,\205\273\300\355\026=\007\2003=\234^\305:\303g\250\273\264\306\256<Hr\343\274\254\324\003\274\325\207S=\364\034\330<\247\0138\275\367\014W<\361\033\t=\257*3\275f-,\273\262\346l<\242\220\221;\252F\346<\036D6\274\222\264\215<\334\356&\275\370]\206\274\317\233\367<\376)\034\275\224\0101<\243`\356<\240y\317\274=g\242<\266]\316\2747\227\313\274\262\340Z=_\264\263\273\276c\320\273l\021\254\274B\270(=\341\336N= \321\004<k\237\263\274\331\236\241\274M\317M\275\222\221\344\274`\372\017=o\251\t=d\345J\275K\261\205:|\2515\2758aP\275\376\277&=^\341\351\273\246S\225<\240\213@\275\277\233\t\275\000\220\215<b@\255<\020:\202\274$_\t=q\344\233<s\013\036=\254\001*=p\3246\2758\307\355<\010p\316\274on\227\274\265\210\021\274l\317&\275N!J=)\233\024=k\031\247<V\242\030\2756<\013\275W\242E=\024s\345<\300\304\263;!\243\262\273\235\234\341<\216\036\326<\222C\303\274\334R\250<\247Y\347:[\005\244\274c\026\342\273\216\320\006\275\265\273\037=p\006\365\274\024\3575\275\227\007?=\267\032O<\220$0=\004-/<H\264\267<\247\214\367<\267\264\370<3U\347\2741\216S=c\370\022=\352HC;s\312)=\266\r\332<\322\260\023\275k\033%\274M\022!\274l.#=G\225$=02R;\020+\205\274\024V\354<\322\320\025\275D\313/=P7\357;\316Z\270<\306\201~\274\311\277\372<\202\222\020=\210\322\323\274\233*\275<\350\'.=h\215\r=vF9=\351\244B\274\240_W\275\225\253J=wx,<\014S8:\310\326\025\275^\377\341<%\321\013\275jP\341;\365\300\243\274\277r\033=\013\257\r\275\n\3423;\003\331U=\335\207H=r\323&=\350\247\200<c\300\375\274\206\356\007=\204u\036=\031\250\016<\014\347\n<\244\017\036=\020y9=4\222\224\274\342s\333<SsZ\275\235&T=\247\377\255;\374\333,= \202\330\274`d \275\3272\255\274]\236.=\320\367\330\274hS\017\275\255\345(=\0264j;\360A(<\312=m\274\003\312\031=x\222.\275Qi\r\275{O\244\274(p%;\256\340\332\273D\026\032\275 \262\346<\334,2\274\335!\r\275\222\2569=\352C\002\275\233\250\360<k\347*<a\"\217<\302\242_<\205y<<\'\021b<\030B\007=\237\n\250\274gbL=Hw,\275W$M\275\364%\266<O~\314\274\330\2216=7)+\275N\246\004;\333\365\271\274\300\266\230\274\225.\031\275\332\247y<\255^\003=q\345#\275\223\236S=\3371I\275\202\007\234\273p\322)=A\215\234\273:A\010\275\315{\365;V\033\027=\002&\021=\017\210\t=\217\276\003\275\262\276\n<\213d\242<\030\223f;j\364:\274h\3608=w\017\244\274b:(=\360\270\314\272\274\277n<0\205I<\246\023\242\274](Y\275\256\277,\273\361S\205\2737\256\027=.\333\300\273h\362\313\2742SL\27557J=\025\345\353\274F\2467\275\023\t\260;\327\202\201<\216\366\014\275j]\233\274\365aD=\220\003\253<t9\351<\346G \275R2\263\274\"p\021=E\2361\275\205\213\311<\205\271\223\274\273\205\355;\005~O=\357(L\275y\317\262<\031m\254;\274\024\236\274,\374K\275\200!\360\273\353T4\275R\200\263\274\006b\010=\n\316G\274i\307\037=\267S\002=w\016\253<\014\211(\275\371\375(<M\303\215< v\\=\347\265\272\273]\352\345\273\014!\032\275A{M<\377\261\357<\336\304 \2750c\211\274\213\0049=\243\234\216\274#\227\363<^\303\317\273\317(D=\016m\031=\266\323\350\273G\260\010<y\205R=pcH\274[\317\024=\356\316w<\022[\300<\300\245\"=\306\202J\274\316\264\r=\2402\305\274\r\217\036\275\223\205\225<\203v\263\272\035\027(=d\216\261<\301\213\007\275a\\\030=`\2243\273\327\005\237\274\272\023\031=bT\177\274\256\215\342<>h\246;\353\327\315\273zl\033\275\331\367L\275&w\016\275\314\311\2669\022h\013\275\207\035<\274j\030\323\274o=\267\274\352S6\273\237:Z\275\320\265*\275\264\364\234<!\002U\275\'\357\032=b\227\310<\\\0179<\034\303\323\274s\250\367;\331\264\223\273R\225\333<\311\355\243<\303B,\275U\246\036\275\251\213\244\274\243B`\274M\023s\274\222\032|<\3150&=\222Z\005=\023\037!=\001)\376:\216qY\275\262\032(\275\200\305\311<@\345\212<\264\334I==\014\361\274\030\335p<@}\025\2757q\'=V\006\233<\017*V\275\332@!=\023m\260\274B\006\212\274;\331\031\274\352{\367\273\351R\351<\025\351\377\274A\262\034\274s\304\250<\301\n-=a&G\275\177\325\204<\316\361\313\274\004\230\227\274\377\013\\;H\311;\275\350n\003=H\351!= \302\360\274\311\3161=\362 \245\273\025\331;=J3\030\275\320c>\275e\341\345\274[l4=\361\3534=Z@3\274\245I\017=\200\235\313\272\273#)=\325,\357<\361:\360;\r\036$=\"\303P\274]a\020\275s\260\213<\021\331I=U\304W\275\277\276\315;\315\030\010\275\235\021V=\004\226\362\274\035\255?=\322\200\314<\362~D=\014|\377\274\231\207\362<k.C\274\251uA\275\346\252\244\274\212\263=\2746\021\001<\362H\354\2741\275H=\356\2327\275\256I\315<a\221\034\273\367^\010;1v\207;\027\267\366;\037=\351\274\030\370\265\274\335>\200\274\377:\014;\n\027\030\2751\316\360;}\010\354<N\220\322<\345\007O\275\320\207\034<YU\003\2752\247I\275\304\377\201\273<\004|;\350z\306\274\327+\002=\305\370\024=|\032\232<\242Q\001\275L\023\005\274\002\372\334<\361>\274<\314\253\322<7\260\\\275,\321\032=\177\373\361<\347\320L=\016q)\275\317\0346=x\006&=\3770+=|\316?\275\304\360\213\274\273\364\207\274\025\n\266\273\272\336\323;t\251U\275\302)\371\274\305\223K=7\326\270\274Y\243\315\274<\0240\275`\352\036=N5A\275\255\310\275<S\302w\274S6?=\177=\313:\232`\030\275\274\241\306\272_D\226<\305~\010\274p\223\251<\311iU=\233\334\034\275\233+3=0\326V\275\342&\033\274\024\034\003\275\354\351 <yA-\275\335\224\271;\023]~\273\354\355\032\275\212\333\336\274\000\215\343\274\303\231\n\275\341\252 \275T\365\206<j\332;\275\036\372-\274\204\266\000=\233\001\267<Qc2=E\266\244<\237\2305;\325\031(=\345\036[<ZJ\352\274\320As<\345\347\273\273\014_\320;kz}<7R\376\274\303\210|<\001\001\212\274\202\266\200\2746\242\035\275\361%o\272\243A\232\274\231~#=\321^\363\274e\372\222<\274A\023=\033\326\345<\301\216?=\336\013\316\274\272\222%\274\302\271,=\004,\367<T\313\313<\235\326\032\275\377\346x;^\347\n\275F\235K\273\365\017$;X\210\364<\251@[=\2759Q\275\275\364\030\274\327\236\021=G\376\332<\337.\202\274\037\374><A\200\206\273\010aL=\251<\306\2731\232\307\273\036m\205\274\025\272\231\272s\317\222\274\264\364\030=\205\315\334\274\252b:\275\0305\034=8jY\275\374\207W<\361\345\035=\335Q\035<\177\316\323\273\334\264\'\266\205\323b<\265\272$=\240\033%\275~\002\226\274H\272\362\274gd\323\274\263\200\221\274?\'\312:\333\264\325\274\362F\320<z\223\202\274|\2534\275+\016R\271\032I\036\275G\357\306\274\245Y\016=\003\337 \275o\271>=8N\036\275\037\254C;\177r&\275\263l\324\274/\222c\274\037<\003\275\276l\367<\236F7\275\030^L\273\313\372V\275\216#\023<k\232\004\275\024\316\201;\205\217\r=5\210\205\273\006\237\241<\334\323R\274&\306\254\274\240#@\275\333\3315=\027a,<\230\205\204<z5\213<\215J\033\275#_+=\270\201>\275\346Q\032\275]\023+\275\302\252A=\0371\375<\223\207\023\275i\376\322\274\037\320+\275\301\001\326\272\266L#=\301\332\253\274gR\373:\354\217R=\340O\213\2746G\002\275EJQ=1\215\221<\240\304~<\350\267\203\274\006\364C\275\316\0045=$\262\226\274Dg\321<\200o\237\274\032\231\251\274\346aU=\327\220P\275\212\307\262</\371&=\026\341\224\274 \301\365\274j\251?<%\274\303\274\234y&\275\310@\203\274qN1=\213\225\201\274\312\202==\363\252\342\272\214\210\277<`\007\243\274\227\010\337\274\252\274\326\274xN\263\274\341\030\215\274\371\322\335<m\243\n=\037\341F\275hx\007\275-vI=\206\326Q=\370\254i<~(\320\274a\020&=\2444\221<\r\300\332<<\236Q\274\204`G<\335\214f\274a<(=\312\2478=;\344J\274\305\331\033\275)\002d\274o\226B\275\326\r\023\275\001t\317\274\363\034\250<\3609\376\273\217-M9\3718\023=1\021\n\275\275\253H=6p\005<\246*\345<\031b?\275&\344E=\360\017b:\373\351\t=\000\356:\275\355\214\272\274\013z\035=?\302\006\275J\024H=\220-\334\274\205|\n\275\332\000V\275Cb\224\274d\267\201<9\312\352\273w\003\265\274g\231V<\3164\231<\313%\241\274x\026\324<\267\327p;M\241a\274\230\265\003\275\245\261\013\275s-)\275\200z.\275\341\007[\275\374 \237\274\303l\306<\031\342\241;&*\311\274\200UD\274\255\326\004=*\013O\274^\254\022\2754\260\025\274\370\232\375<\314\242\000\275\277n\017=i\210\216;\315&\313<\300n\026=\316\250\245;M\361\033\275\323\372D=\232\342\r\2756X\370\273\201\017?:de$=\214|\031=\352\311\221<$\227M\275\036:#=\353o1\275q\036\236<V\203O=\230M\031<\204\032\227\274%\211D\275s\2431<\2710\375;\245R\004\273G\240\206<\\\364X=\253\324\260\274\243\026:=[m\007\274i\003R=\206\0227\275\004\245\213<I\037\001=\341\003\352\274y\t\022<E\362\370\274\r\213\353\274\345L3=\340\333\216\274\\h\201<Q\0016\275\357\026\262<s\254G=5\270\026\274\202;\032=\354?\356\2744\321\035\274\254P\253<N\311\021\274\017\237Y=\226\243/=\307\205\017<b~\327\274\006@B;\001J\306\2745B\343\274\223\334\202\274 \000\007=\246\231\327\274}\261\251\274sYF\275\273\265\354\274ywA\275\362\371\206\274&\030;<A\360x<\303\274\232\274\373#\337<\001mh;$\312\365\274\331K\007\275`VL=|)\t\275\324QH=\356\337<=R\242\t\275\270U\r\274\364g\031:\222\261\027\275\351{\024=TF<\275\276\352\324\274\216\332\025\275\376w\032=\026\272\355\273\336:E\2753_*\275-\'r<.J*=\342\005\206\273\250\253\220<0<\366\273\227\374\325<\0043\365<\215\301\351\274\357\010A:g\232B=\0204[=\320\252\352;\340S\345\274L\023-\275\333\2706=-\0336\275\254\233\202<~\003Z\274Y\204\222:\367\013\357\273d!\004\274\216\310\000\275\273w.<\351eO\275\370\311\t\275\342$\254;\320\267?=\016[X=\215\2402=\202\247\"\2739(\201\274m\334==~L\362;\346\374\374<(\276%\275G-\032=\230\2224<No\366\274WWP=\177A\005=I\036\245<\205M\245\274\210#\230\274\310U\005\275\360>I<\004p\347\274/\013\026\275:oE\274D\214H=Ld\356\274(2+\275\332\311Q=\370\245,\275\222h;\274\227\327Q\274\\\364\334<\016\237\257<P\214 =<\ru\274\337\311\242\274\267k\331\274\211\0066<\2119\242\274\251\017\324\274\273\244e<\336\332\301;\337\240@=\202F\352<\020\2561\275\370\221\302<\010X\014=\216\344Y\275\245C3;\016\354g\2749\265\017=\231\226B\275J\022\030\275\242\325\302\2742\324-\275Z\250\326<\330)\013=s\301\033\274\021\325@\274\221\351\252<\367\361\304<\205I\033;\277o\322\274\005\307\270\274\202\263O\275\'\363z;\221\371\312\274P\017 =\3313\323<\354r\006\274\305\273\t\271\243@ =4\274K\275\330#\214\274^f-\275\250=6\275\016\302-\275\206\272\021=\361\201f\274o\271&=UP\214<\"-\264<\265;\303\274\372G2=\217\271\335\274s\213|;\247\3049=Dk.<QTD=\027\234\001\275\251\366\364\274\277-\224<\010J\024\275\257\207\265:\030B!=\323\177\231<\216#\035<y\017\373\274\256\311\304<\r<4=\311\267\016\275||\305<k&\031\275\376\240\273<\213X\'\275\350\252\017\274W8\006=-\033\004=10\245\274(\255\210\274qw\n\275\372\265\216<.L\236\274\250\277\342<\303y\351\274c\255R\275)\320\244\274\202\025\360\274\310f\303\273xM\257\273wa\013=\206\256\003=J&\373<r\377\3477r\3474=\367:\"=h\007\235<\350\234\025=l\364\353\274\324\242\312\274(\340\006\275Qg\345\273@\002\270<\267\350\223\274a\367z<]\251\341<\307\371\001\275P.1\275G5K=\013H(\275\030\312\"\275\231\262\326\274|\032\212\274\336\014\267;}\363H\275*\353A\274\010\333\213<\274\001I\275\322f\364<t\220\035\275\010\034\201\273\375d*\274\177\022\256:\023\351\345\273\030C&\272\004\270+\275\010^\374\274\340.9\275\022\223\034=\001\013\275<\264\344>=\346\242\314\274\340tZ<\301M\203\274\253V\205;]\t\274<\325\264H\275\226?\243;7\215\n=0\277\351<\325\021\357\274\344\344?\275\007HE\275\007\354\001<\305r\335<\234\006\000=\363IH\275\312\354\254;\026?\'\275\177\003M\275\364\313I\275\266`\004=\t~\357<\323\333\003\275\343vK\275\366\300D\275\255\007;=\302\216\001=\n\212\306<\017\022\212<\334:d;\260~\241\274\300\300;\274\375\037,=\306\204\242\273V\355*\275?\353[<\242W\t=\247\301$\275p\337\244\274\326\307P=>\201_<\253\004\020\274_\264\305<V\236\246\274J\340.\275\006\231\246<\346\306\035=O\364$=\205\366\033:c\347\344\274=\242&\275N\226\036\2757\031\256\274b0\003\2737.\013<\0277\226\273\276yi\273G\312%\275\350B\217<U\004\217\273\030\342\023=1\316\000\274\370\262G=\020\365\346<\271\363M=a$2\2751\033\223\274%\022T\275\010L2=\250V@=\351!\273\274\016cX\274z\300\266<n\355u<\263\303\027\275\277\006\254\273V\020\037\274\215.\314<I\266I\275U\2322=7\353\335;\200\0135= \321I\275\224\243-=\004a==Y\021\\\275\022BX=\223\333\035\274\027\360F\274\031\3171=Bg/\275&0\217<9\202\372\274\0105\n\275\363\"\247<-\310\354;\346\232\320\274\207\234\024=\307\253\030=\325l\203;\004O\252\272\223B&=\025=\373<\357v\003\275\"\010T=<\024\324<\004v\t\275I\346\355\274\334\000\025=\264\347\302\273\243\361K=\177\236\316\272\344\246\346\273\236\275P=\260Z\277\273\317_$=\023\304\206<X\313A\275\265\004V\275\333?<\274\264\014D=\031\360\272\274\351\036H=\362\2700=\337\016%=\364\2557\275U:z\274\225.\r\274\36425=\224q\365<\324h\247\274\2613\222\274q@\2649\n\301\312\273\275[\030=\326\254\224<F\3626=\004\362@\274\324\243\211<\2156\342<\370\263\r=L8C\272)\244\363<\204}\374<\023\202\246:\244\013\261;\303\037\204\274j\311o\274U]*<\004\307A=W\253\003\275\013AM<\030r\024=\255J4=C\313Q<\305\211\342\273\263\233\232\273\342_K;\"\n\243<<\376\3238\014R\003\274\273s\213;\222g2\275\210\n\377\273$Sg<\272\326\262\274\004W#=\320\273\260<.s\247;\260\327\025<\357\271\251\274\346.\373\274\2242&=\253O\216\274\312\334Z=\033w\366\274\377\245\303<\255{,\275s\"\345<`+U=\350\036!=0\232\225;M\300\320;\234\364:\275\253\363\212\273m\2158=\364\203@\274\260\312G=\177\315?\275\266\335.=\333\310\322\274\253\220\033\275\241\325,\275\360\377\250<\255\334\201<4\251\374\273\016kO=*\240\341\274\2769)=\322.%\275#\0340\275\325Rj\274\276\362U\275R\3777=\2570\237<\265\022A=l\205\324\274\306\206I\275I\361\006\275,\235\007\275%\303 \274\232e\277\274\\6\232\274\364}\346;H\010\247<m\347%\275\210\346J\275\264\037\006=M\037&<\366\250\220\274.y\201\273\316\201k<\3105g\274\212=\244;\256\3133\275\231a\035;\373\223=\275\346\035E<~\0050;\334\034\306\274$\337\310\274X\013\262\274\230;\037=u\207G\275\306\321&\275\305\314\361<R\353\230<O\333\213\272\265 1\275\315n\306\274\217\000w\273!b\034=\301\340\035=\266B\223<\326V\r\275\275\202\227\274\005\255^<\327F\327\273\250\300\324<\276\301\263\274[\362\\\273\220\243\025\275\256.\026\274\306R\010=(\0348\275z\326\300<#+t\274\224\227E<\246\2279\274=\206\354\274\342\214\023\2753VN=\2027G=\200\305\265;\305bJ=\366\240\214;.\334\351:|\0143\274mE\n\275\031;[<A\004D=\3226\315\274\010\341A\275\303\371\222\274\244\331\213\274\304gm<\354/\215\274\215\205\t\275\277\261U=f\216\265;\353@G\275\022\303\311;\314\031T\274\311\254q;\353\352\024\275\222\330\027=SG6;4tG\275\235\377z<\0147[\274\230\006G\275\016:\247\274j)\026=\200O;=\220t\t=U\330:<m\353\321\274\216\235U\274\263gp<7&\255<$5p<c\017O=h\371<<\207|N\274\302\372\270\274\303o%=\r\377\004=S\366<\275\220\302E\275\001\031\212<\276\035\004=\371\351;\274a *<P\371\035<\3479\306\2745\\\312<\312\177\374<\013B\027\2756\204X\275\020\333\266<\213J[=\337f\346<\370\222\001\275/#\000\275\r\2159\274\374\267\027\2759_\023\275c\004\036\275\210\236\251;]\330[=#\274D\275\310\361\353<M\333\226\273r\274\303\274\026\260\327<:\260\322;\035\005\366:)\311\347;\202i?\275\224\316J\274*(\207\274\301\nk;u\351G<\371\352\220<_\014.=\"\332\031\274\250\010\t\275\341\226I\273\003t\277\274R\350h<\365\223\302<\316\225\\\275\033\202\305\273\340\303\372<\306\333\024\275:\237\325<4_2=\343.\"=\013\036(:\233\355\216<(\300d<6o==\246_\322\274\\&\016=\324\262%\274\267\263Z\274\016\240\324\274\331G=\2758\224\312\273|\244D\275\026\366?=\030b\363\274\001\371\003=!z\356\272~\371W\275\333\2048\273\036\205\201\274vp\246<P\315\276;0\020O\275\372xP=\227\2417\274\343\0057\2754FA:\300\324\327<\262\245\237;_\020\324<J\031 =.\247\026=<\322\376<\370\260\334\274\017\245\337<\016G.=\333Y\004\274 hA\275\334:\220\274}A\321\274\341w\223:\273\000\024=\243\014\232\272\370\340\\=\0012Y=r\3227\275MX\236\2744\327\254;\375\006\301;\225\304J\275y\355#\275\2676\000\274\351,X=\205^\004<o\246$=\257.c;K\024\307\274`\227\"\274(\3052\275N\362\006\275?\253\252\274\2535\342<\236#C\274\036\300\236:\311!\277<>\016\366<\337;W=JF\032=gJ4<\022\254=\275\215D\016=\300J:\275\227Z-=\364\247;=\275\200\241<d\221\002=\2715\213\274fo\257;a\261\221<\024`\032\275X\245>=\211\334X=\317\022C=\253\261\004=\211\020\370<}\335A<]kZ=\321\260N\275\300@\253\274D2\217<\264\344\215<1cG=^$\022=\301[3\274\316\t\204\274:\211\345<\363\037\277;\301\266+\275i;\003\275O\353><j+\261<\201\322\253\274\255\224\303\2743F\013\275\266\207b\274\200>\004\274`\226\036=s\274\213\274+\0035\275x\t\232\274\341\333\035\275\330\033v\274\353\246\205\273\322\225\037\275\226\326P\275\357\331\322<\305\'\214<\311\237\314<P\373W<\343}:=\177\252k<\244\363\223;\237K\'=\277M\212<\203\210\341\274\263\206W\275\014u\027<\302\265X=>d\315\274\206\262(\275(\260\254<\207E\347<\r\303\226</P\016=\371\007\016\275I\2448\275>\321\204<&\357\025=l\207|<9\207c\273\241:\234\273~\302T\275R\232\246\273\271\310\227\274#\217\031=\n<2\275mA\256\274q4\034\274\233l\037=\252R\220<s&\331<7\364\253<`\312\206<\344\344\277<)r\017=\321\255\333\274m\246\277\274s\266\365<>\256\270<r\032\220\274 \347\215<^\027\256;\317*\342\274\362\332B\274X8>\275\312\312I=A\236\323<\322\327\340<]X\031\275\351,6\275\274\251\002=Y3\022\275\273\036\374\274-\372U<\2059\265\274\305\216~<\227\272\277\273Bu\211;\273i7=4\200&\275\256\323\004;\365\270-=\237\213\220;pH\t\274\314\323\254\273k\001Q\275l\001P=\2342*=g\202\022\275\364x\345\273\353\276\023:\344\352\222\274\361\n\036\272\223$\001;\207\262\357\272\'\262^<-@[\275\2467\244\274\203%\200<\264\004\203\274\027\212}<\264B\233\273\303\226V\275\220\341a<\236\350\274\274\274X;\275\314\315\272\274\215\203\035=\306}T\275\"e\354\274-\"L=\'\334\234<\032q!=\031\340\363\274T\006^\274\007o==@!.=\216\033?\275?T@<\246\241\355\274?\374\321\274I\374\217\274\221\331><\250\346\335<v\205\021\275GM\275;l\310\215<{=\310<\37435\274A\364]\274\337\260+=B\002J\275\003a\243<<j(\275\231\352\035=C\024\353;\r5\331<qm\035\275\327\210\247<I\036\010=*\243\215< \307\006\275\024L\240\274\177i\020\2745\244\360\274\313\316$=\321\251w<\246\r\203\273\220Z\006=\350\300#\275\345\301P\275\214\272\213<t\227:;=\266\323\2746B\203\274<@H\2755\227\362\274\261\351\306\273\204\002\257<\267Z\017\274\213\021W\275?\341\024\274I\305\346\273\254\035\331\273\013\020\365\274r\026Q\274\274g\355<\n\232|\274\251d\340<S\024\031=tKD\275\356\203\336<\336\027\316;\367)[=\326N\232\274\306N,\275\264\325\003=OV\337\274%\235\247<\357\325\350\274Pi\332<L\203\245\274\233\212\007=\214\202!\2757\207C=\202\r:\275AO1; \247Y\275\2707\021=\2132*\275m\375\024\2757\202\016=LlR\275I\244\t=\377 )\275V\317D=\375\303\364\274d\2612\275oB\372<\352\251,=\261vo<\217\375\001=i\235S=\375D\025\275\345\243S=\372\033\r\275\346\220\252<L\"\255;W\016?;o\272\030\273\267\352\331<21\315\274\203/\034\274\263\241\t\275>\232\244;\036\260\251\274\312q\241\274\356?S<3\203E\275#\357\000=\360\313\252\274\316\312;\273\274\324O\275\005#I:\265E7<\251\304\024\275[v\005=9I\014=\255\320\245\273\350\276?\275j\350\022\275\366\004M\275Yl\203\274\360\272\356<9\331\017=W\314\266\274\374\346\230<\013\213|;\235\323D=\242\340\320\274N\365\347\274\266U!\274\257\307a<I\334\353<V.\334\274w\270F=\255C8\274\034e\026=\214\037\307<\313\246\017\2756\2160=\373\200\262\274Lj\031\275\257P\315<IrT<\252\340\n\275\276\013\007\274\\D6\275\305A\026\274n\231\210\274Vw\350\274p\243\365\274a\332%\275g\035\001\273\024\303:\275y\234J\274;\260\271:\225\264\013\273H\250<<\242\331\224\274\"\345#\275\363%0=\313\214T=:\364\245;\204\250\014\274\005\230:\275\325\367\"\275\035\255\006<\376\331\347\2741ve<_<%=\300?\361\274\251\n\264<\031\320\371<\250d\273\274-\r\235\274\260\315(\275_f\023\275\305U\326\274\204S\032=+z\273\274\r\373+\275C\331\216\274\030\253\035<\240\036\306\274\\\237\212\274\225e\340\273\302\240\030\273eV\276\273\333\324-=K\234\220;\241\202\372\274W\377\037\275c5P\275\350\311}<\333\247\232\274@\300D\275\025\016\234;N\036\345<\307\374\227\274\371\021\351:\204\"K=\'\257b<\270\353\020\275\332\021?=\361\021;=0\362C\275\000\237\006=\027\314F<\334X\253<%\006d;\355\256>=Z\234%=\312\335F\275B\204G\274\336i\264\274\342\257\316<\005\251 =;\305\023\275\246\3216=\023\260.\275yM\261<\313\366\003\275\337\242\227<o\345\360\274I#\220\274G@\247<\321&X<;QX=\367w\225<W\276\004=\356D\031\273\263\335\005\275\323nS=\204\277\366\274\2635\013\275\035O\321\274\r\337\325\274\272\316B\275\204\027\037=\331\323Y\275%\001\335\273\371Kr\273\342V\037<\034!+\275\370\237\036\275G[\240<]\360\250\273)n\321<\242m:<#m\020\274\\\241\032=\020\273\"=\253H\023=I\301&<\211\334\206\274\231C\220;j\226P\275\353\241\313\274\262\003\230<\302\004\322\274\212JG\2750\316\371<\352a\364\274:\3379<:\310\274\274\260\013\005\2747\376\377<\223P\251<\036Y`<\321!L=\214y\032\275\250-\220\274Yk\325\274\036\3302<i\3070\275N\3336\275?wJ\274\256\t\365<m\363\033<\241\220t\274\275\254\007<\247W\336\274.Y\253<|!N\275\333\273\255\274\317\256,<\203)K=\246\351\001\275FG\250<\351\270\347\274x4==\034\332J\275\253\246\003=Y\321!\274\272\376R=\214\305J\275T}T\275\356a?\275\221I\"=\367\016/=X4\356<\234\350I\273\331[=<\372\017:\274UD7\275\212m\231\274\355\311\263<\\\362\210<:_\025=;\352S<\364W\177<\237v\303\274\372r\261<C\225W=\034\246m:\234\277_<f\365D\275b\335$=\035\350\024\275e+\304\274\006\251\343<\211\032\241<\222\373\r\274\247\224\344<+8Y=\033z.\275:%Z=\227\373\260;\004\033S=y[\262\2738g\375<Y=\342<\330\325\035\274a\n\323\273\362\216R=\1772\\\275\360>H<\364A5\275\322?\250\274\304\362.\27552\020\275\370H\004\275+\354\212\274\177\030H=\265~\340\273\026XI\275\264~\025<\370\231S<#\020\202:\244%\305\274\366\023\216\274b\024\006\275\205\3179\275\365?\2169\323\3347=Aok\274\200\210+=v4J\274\220~\370;\021=\'\275\016\205\270<\367\234z<\255\321\017=\"HZ\274\230\314\370<\371P\353\272\363\320\341<\321\267R\274\337\004\t\275\214w\222\274k5+<<KF=J2\242\274\304_\241\274)\231\240\273`\275\356\274@\244\247\274qS\236\274\302\247\260\274\007\275E\275\377\205J\274\376\344\373\274\007\362e<8\333\031<\355\200b<z\276f<\267k\027\275W\313\346\274\375<a\273\376d#=Q\252(=}\335q:\342\272\227;\373\266\273<}Z\313<\340(\003=\370\370D\275\243\214&<\030\207\020\275\016w\256;\321\316\002\275\3059\372<\326)8=\325\tB\275EZ1=\231\201.\275,\373\n\272{\003\034=\266\331\241;\251\232,\275cgJ\274\347\0138\275\267\312#=H\314I=i\370\223<\337\214L;\254\000\025=?\366\334;\231T\351\274cG\223\274\240j\353;\002\027#=\367aE\275\363\261\024=\337ME\273\"\376#=xw?\275\242\373\343\274\035v\014\274Y5C=\244\370\034\274\237\271P=\305\0228<\214\302H=\347\022@=\334\3107\275\035\305\375<\031+\021\275\205\372\240\274+\200\020=^\350J<\270j\321\274\022\030\016=\315;\305<!\360\025\275\321\220\376<\001\2547=\366*H=\202~M=\317\201.=D|;<\254\255\t\2740%\034=\370\332N<\'\215\203<\334\017\342<\331\251\r<\254\270\367<o\3413\275U\260-\275\377\316\014:\020\347\344<R\r\023=\n\205\246\274k\033\243\274\272\005K\275q\226\224\273\0063\276<p)\027\275\\4\353\274\301m\232<z^;=M\376K\275\237\031\210<\350&T\275\217R\230\274\365\276,=5\230\004<\005z\364\273Fr\204<\343>\"\275Z\t2\275\033\035\033<QA`\273`\301`<\203\324\370\274\341ZN\275zL\244\274\325\216\\\275\305\254D=\235bL\274d\2771=~\340\226<\226\335\272;`\177\034\274@\027V\275\246\023\016<\350\330W=-\225*\275\014\355\367\274\326\300\334<\311\330.<\257q\022<|\361\370:z\034\315\274\352\343\033\275\374\246Y=A?.\274\366\006\204\274\371\3360=w}\r<\004\0174\275/\227k\274\202^\034<\275\350\203\274\266X\316\274pz\036=c\222\265\274ES&=\344\244\000\275\350\276\033<L\0072\275Y\006\033\275T\242v<%\342 =\365\027\372<\253\215Q=\234\336\023=\265\337$\275\360I\343<\310G%\275\211\206\213\274\347?\326\274\036\335\373\272p\210\\=\245G4\275\323\3068=p_\344\274\3047\214<~\202\204\273\'\\Z\275P\241\'\275[i}<\225,\376\274f\272\017=\370\2161<\006\002\236<\201\017\361\274x\020Y\275\320\205S\273\217\236O\275\231\325\250\2743\342\316<S|\263<\036?>\275\201\244\013\275\213U\262;\\t;;\371~\024\275F\017\000\275y\204>\275c(\251\274\212\200\032\275\034\362==\354 \341\274\250\201\277\274f\360\020=\241;\034=\237pP=\324\022W\274\335\225\010\275\266t\325\274\327?\020\275#\343\200\274/\245\350<<f\217<s%-\274\354)\325\274q6\205\273?\202\367<\000\205O<\345\263 \275\371\030\275<\201\255p<\031.\'=>\216 =^\022]\274*\365\344;:6\006=\240:S\275aY\356<\230\264\354\274D\355\350\274\260\260\260\274\354\233\010\274H\t\232<O\277Q\274\371#Q<\"\373\321<\013H2=\244\203\032\275b8&\275\317\200\334\274.I\2259\"\230Q\275\246?\372\274\004\235M=\330\314\316\274\340\246,\273\036\315\035=W\251\203\273\374\247-=\\IP=\242\222\330\274\375\350\240\274\301\205==!\n\006=\260\203,\275\367{\025\275\333\nC=\321\035\333\274G\0311=!\311\032\275,J\231\274p\031.=g\222\005=\005\240\276<1h\366\272b\266#=\332\375\363\273y:\242\274\226\314*=\256U2\275bzi\274\032e\021\272\020B\272<\225\017{<Y\0317\273,\\F\275\1777\204\274\211c\022\275j\017\277<\030\243O\275\370\304\346;,\345\242\273\030d\337\273\033=\024=I\342-=\265?T\274\234\022(\275\367\236\017=\321\3465<\025N\317<\345\006\261<\232\022\014=\264\272*\274\363J\325<\374z\035=\214\312\266\273\210\304\031\275\025\335\025\275\177\311\016\275\334dI=\006\240[=cc\205\272%\266(=RN\037\275\010\031$==xA\272\240c\233\274l\274\246\274:\367\033\275\216.\t\275\017\r\r=]\353K\275\232MI<\371\217\240\274\316\215\347<\307\366\n= \000$;\026:4\275\027 D\274\247\017\010=\002\325\034=k\020\217\273X\033\313\274a\036\224;\313\222\025\274\030\rZ<\3468\322\274\257\232\336\273Ft7=\344\020)\275\025>\331\274\320u\345<i<V=\021T\260<>_&\273\n;e\274\202\035\017<\253\020\251<\266I\\;\273\371B\275,\354g\272>\306\237\274\222o-=\263\274\337<\017\226\240\273\231\352\t<\000gW=\232\215\223\274v\367\207:\345\256\312\2728\221\317<WH\034=8\251\361<\275\235\226<\317\241!\275|\357\\=J\376\017=G[\231\274\031\240\324;l\307S\275\'\340>\275\346\212\345<\302\372$\275\373q`\274\212>o<\367\357]\274\277~\231\2715s,\275T\213\353;\352\rM\275\354z:\275\010qS\274{d\210\274d\nN\275z\243|\274[I\300\274\037g(=V{\303<\263\363\256<\267\345\310;UY\372\274\215\'.\275y\255o\274\304\271F=i:4\273\030\035\376<\211\332[=\250x\004=\210k\262<m\235\020;\221\223v<\002q\027\275J\0262\275\0207*\273\275\227\311\274\253\271c\273\242\026O<\216\305;\275y2^<\210\3227=\271^,=)\n\274<IS\375<\330Z.\275\034;O=iZ\031=@\321\037=\355P\267<\016|Y<\312\266\375<c\365\373<\357\004@=\247\r\251\274\223\022\273<i\310\222<\272\315\326<c\235O\275F\007\r=)QF\274[\023\377\274v\325\264;\005T\312\274\202\246\\\274\233\252[={\372\033\275a-\320<\217\207T=\277\336\301\274P\237\333<j\235\334\273\013\254\002=P\207=\275%U{\274\221\354\303<p\301H\275\034W\006=pO\325\274&]G=\347;N\273\033\031\004=\023\224H<\331!\355\274\273\360==\266F\324<^s\363\274C\245\346;\354\326\025<\270\025g;7\242F=\230\314\231<\232\3357=t-\276\274\360!\212<Sku\274\246\224J=f\266\277\274\223\265C<?\330\312<l\243\355<\026\250\247\274\267\243\r\275\213\025\257<\327\237\252<\030\345\021<<\246\3159i\226\236\274\266,\006;\312\303\225\274\314\316F\275\375O*\275\210\340\020\275.\306\034\275i\254&=\220\324\177;\364\243\352\273a\350\035\2758YY=\220\341\357\274\341\264\220\274&\263Y<\356U\334\274|{\221<b|\377;P\221\340<\376*\236<\2715Y=\247\274\n\275n\333\323<H\253_<\004\022.<\355\211M=A\177\270\274n\\t:\230\230\r\275\246[\205<\253d)<\016\031\n\274\251\331\033\275\267\260\262\274\225\212\356<\330\377\"\275\304\323\016\275\271\004\354\274F2%=\274j\335\273L\3371\275\276@#\273\251\316[=\223\311#=\'LP\275\366\237\341<\272KF=\232\330\351\273%\013W\275\331J\236<\327F5<\221\356\356;Q\363L\274\007(\320\274K\224R=6\3534=n!\241\274On=\275\016\207\302;X\034\021=\354\361\013\275\330\020\027\275\251 \304\2749\244K\275\034\202\361\273\365L\212<k\0200\275\036\1771=+Z;\273\363mQ\274\026\003\342\273\322 \342<a\352\r=}G\260\274`\206\013<\003\240`\274\374\350\310<\343\325$\2759\177F\275\261]#=\002O\007=z]\250<9\267:\275~\203;\274\377(q\273\002\250\301\274T\361!=\261\324(=\351\2605\275\242\374\210\274\342J1=v8\2039\257\"\361<\335>k\274\2418N;:72=}\276 \275f\252\276<\316\346\017\275U\030\365<\355\323\025\275\365`M\274\005\250%\275\373<*\275\"\342\362\274\203\364\022=*j>=\352\366\304\274\307{Z=%\343\203:\362A\346;\025\261<=\010q\256\272\206\324\r\275}\000\242;W\231\223<\327\345\266\274\230\376\030=\371\365J\275B&\250\274C\323\001=kZ;=S\202\251\274\007F\254\274\027M\240<]~\246\273jK\215\274\376\026\031=\'\027\336\2747,\257\273\241\302\260<\025>!\275\221\262\021\275\3064\330\274+\0311\275\334tb\273\033\3344\275*\035\377\274f\267\033=\236\254}<\356\300\001\275\013h@;\275\277\234\274\014\t;=}O\"\275#\330\362<\317\3438\275|ag<|\033`\274\250:\206;\030\226 =\364Z1=\374[\332:%9;=T\253\177\274\307\262\n\274v\365>\275\233);\275P+?\275\216u\253\274\244lU\274s`u;\323 \021<:\336\336<\261\363\201\274\257t\322;\246\303\352\273d1\275\274\356\024x\274\351\"\321<\322\205s\273\316\331Y\274.,3\2756\376\2729\014\352\\\2756\207\310<{k\323;\302\307&=\357\255:\275>\276\234<G?\304<#\335\031\275\376\014\305\273e\337 \275cS\375\274{s6\2759g7=\377V\216<AE6\275R\216Q=\372\371\'\273\360&D\275\371h.=k\346R\275/@\023\275\355\216>\275\347L\030=3\321\344\272\225cS\275\214\327\374\274\232\033\260<\242N\371\274\034\264\251\274\244\334,\274\374\226(\275\314\345\353\274\014\377\325<3\320\311;\236\244\351<hhW=\002O\342\274\330\207\321<\007\227M\275\374\223\307\274<<\"\2749\243\306<\225l8\274\356f\202\274iBv\274\030e\023<\231\304@=v\217F=|9 =7k\314:\320\016\302<\306L<={%\212<;\322\020<\213\035\r<b\3153<\374\002\215;\373\246\034\275>>\273\2747\331\006<Ls\346<t%(=K\220\200\273\330\201\264\273\240\266\302\274\200l-=\240s\000\270\305\316\270<r\275`<\300<D\274\006\352)\273\000P\372\273\024\206\001\273\205\034+\275lT\245<\000\213\250\274\327\010R\275\320\226\\=i\014\310\274E\345\336<q\2234=\201\021\007=\212\251\263\274T4\244;:\364\322\273\321=\000\274\031\362>\275\003c\326\274\370(\327<T\253\000<8\264\016\2752\205\247\274\355P\273<\212g2;\320\265\006\274N\374\227;W<\"=\317\241>\274\234\342\030\275\365\277\374<\020\n\207<\352 J\275\216\310\021\275\350\3459=W\264\000\274#\233\035=\247:\277\274\221\333\027\275\327\257Y\275\307\261\273\274\246\334\\\275\215\303\370\274\362\227%\275\243\016\211<\353\021\\\275\375d\007\275\264\3016=\316\376\003\275\253B\355\274\177\006\364:\264\351C=\314\2006=\006B\"=\037\002\266;\254\310\026=y\221\013\272&\276[\273S\004\224\274\321,\017\275_\2344\275Q\214i</ (\275M\210|\273W\362\314<\242\206\346<\023Z5\275}3\001=U\245X\274v\\?=XD\353\271\371\312\013\275-\2176<]=\275\273\3629\255\274\261\353\227<.N\t\275A\004\024\274\035N\347\274\014rH;\262\0105<\031_\002\275\375\375b\274]\352\244<`\006\347<\262\034\207\274\377x\023=\371\003x\2746\347\333\274\374\310\032;\267l\023\275\241\216E=\374\244\n\274\001\345\266\273D\361\337;\230v\355\274\206\356\315<g\3049=\214J&=\333\324*=\010\352\356\274\302\303\323;\336\345\240\274%\327\\<\267\374&=/\022\251<\264\322;=\207\227\315<\336\376,\275\373\376\207\274\206\263\025=\323f\306\274\032\237\016=\201\322\273\274 \302O<\305\013\007=K\306\255\273-\\c\274(\347\363<\336qx;i\377\025=\177\347o\274\031\031O\273\314\016S\275yU\240\274\372g\367<o-;=\266C\213<\3143\372<\013I\237:\233\"\026=>\025\366<\337\312\372<\256P\\\275\342\346\037\275\364\304\257<R\035\344<\261`\325<\231`\004=1\2548=}\330$=N\3641\274\366v\243:\322\307C\275\300\225\370\274u\304\364<\262\345\224\274\206\300m;37/=\014\214\034\274\034\364.\274I\372L=n\242\350\273\217\270\024=>\005\030=\376\333\267<n|\217\274@q,\275\357b\240\274\323S\002=\366m\000\272C}!=\t\031H=\rp\254\272\354\364(\274\305\035\310<\031\322\357;\250\306\221\274\2151\330<\347\231\002\275P\262s\2748&6\275I:\325<\206\264Y\274\322\025D\274\301k\256;=\267U=\276\257\035=b\214C=u\256/=p5S\274+\207\276\273\257\326&\273re1=s\273\364\274\0213\003\275{\333\342<>\002\225\274\343\353-=\325\257%=_0\267:m\3318=U\272K=<6\240<\301\276\016\275\027\227\233\274/W\335\274j\302\272\274f=8\275\367\2525\275`\351$=%C%\275\257\321\"\275\350D\321;\250\360.\275\3610F<\004\276\272\272\207\320\337\274-\271?\275\305J\031\274\nV==\021a8\275\331\300\035=*\346\006\275T8\257\274\035pE<a\t[=]{O<\234\245);\262UX<\337\220\n<\362x\035\275\024-\235\274v\350\n=\036\331!<VF\365\274\325YI=\260\365\340\274N\211\002\274d\001\023\275\333\263\222<\014\301\034=\347IR=\3455\020=\324\013\352<M\337L=iz(=\367u\337<^\007\305\273\214E\027\275\251\370;\275\330I \275A\202\"\274\232\2246=\204\225\325<I0\316<\254,\034=H\207U\275\016P\267<\334\226L\2751\330&=\236T\036\275W\024\357<F\246\373<en\352<\236\211\325\274\345z\031=S|\370\274\232!\333\274Q\2478=\241\205D\275\267\311\'\275^\261\202\274\202\2736\274h\217\317\274j\350,=\253\353Z\275+\322\232<\305\356B=nO\006=h\n\243<>;@\274\370\347\n\275\364.\340:\304\261V\275\314(\034\275\364\004\006=<Q\250<3\346*\275\217\340\003=\376)h\274\323\335\342<:G7=\016\007\024\275\005\305\005<>\003\017=\343i\220\273\333\217\000<PT<=\225\311)=\016\021X=(l\017\275\022\222(\275\251\017F<q\330F\275\001\220G=:\304j\274\030Y\272\272\335KQ\275$\352\000=\2051/\274\244\027\034<\234\224.\275\273\242\305\272ij6\275\361\356\021=M\261\005\275\2201V\275B\335\226\2748\270\271<4\247L\275\300.C=4q\223<A\263\363<\301\310O\275\377\275\225<d\257\313\273\000jU\275?\235H\275W\336C\275\324G]<\t\362\014\275f.\256<!3Y=\177\2344\275\333?)=\001\355\372:\246?\000\273\317Tf\274\370\014J<\216\264\341<\030/\014\275\277\301\242\274\265\313\025=moD\274Z_m<\010-\321\274\357JQ=n\255Y\275\357\362\363\274\253\204\002\2743\3057=\236\335\344\274\220\317\014\274\371\333.=\206p\366<\333b\255<n\247\334\2743\';=\304\314\030\275\017\201\'\275\214qK\2757N\226\274\t[z\273t\242\254<\376\241\034=;U/\275\337\241U\275\231<\\<\231j\302\2746\357\321\274\210w3=-Q\366;)\324\027\275f\033\000\275\017?\035\275\n\224 <\276\304\0019\3064\245\273\374\020\372<\3341\235<\216\016`<\036\027\031\275T\341*\275\327\361^<q\263\021\275\235\366U;\263aa\274EDY\275 \0334\2741\343\035=\010\214\036\275\347\257\006\274=\335\017<\324\357N\275\235+V<\020\325\002<\306\021\325<\2268\236;\276\317<\275,\2154\2755e-=\216-\023<#\227e\274\375\0252\275\257wy\273\332\313?=?\000\337\273\334Q\342\274\3433\274<!\367\242\273\\\343\275\274\346\363\346<\225hA;\303X\256\274\220\017\037\275l\230\002\275\245\340(\275\023\333\003\273H\'>\274B\305\230<\270&\023=\332\0010<\243\262\022\275}1L=O\236 \274S\003\';\250\2662=\357\262O=&\217O\275A\372\n=\345\"y<e\231\002=\017\361\34791\211\006\2750\031 \272F7\363<\346\322|\274\331\336\210;\034Ql<%31\2741\255\315<\020\3118;\203/8=\267\2139=[mg<\206A)\274\036\307\016=-\272\217<\264\323\n=\003\267\265<\000\334\021=\200]\204\274_Z\264;\302\313\001\274\2061A==Q\264\273\213-\203<,\033\211\2744\255\t=w\233?\275\007\371\364\274G\247A\275\377\001/\275\020N\304\274\001r-\275\327\030\270<\257\002\032\275\024\314S\275%\021\026;\206\367J=\351\305\023<L\203\223<\020\321\321\273\313\200\000\274\201\277\227<\364\271?\275\300\250\217<DL\220<O\244\000\275\374\0214\275N\000+=*\344\032\275M\337 \273z\263\010\275\363\334+\275\352\014\302<,\304\r=\210\325\275\274|\362\023={\3428\275c\341\022\275\251\353\003=_\307\013\275\315\250@<\310\213J\275\304d2=\342+\207\273\260\0067<QE\020\275\376e8=\234\301\377<\302\017\035;\330\342{\274oF\312<\027E\022\275\342\255\302\274\3628\312<\232\370\353<\264B_:\322O\n\274A\244\371\274\017T\364\274\363\255\005\275\257\203\023=\220\2506\274\237\224\261\2737^\006=j\220*\274\021)\207<\202\023t\274\372C\301;\023\262D=\002\342\246\274\346\211\330<\364q\032=IW\222<N\251m;\253tG=\"\231\247\274\373\r\024\274\233\244\266<\203s\034=Js\201;\036\2600=l\035\337\274\352>\n\275\276\265==C\017[\275\314\307@=\207>\037\275\256\337|<4]\n=kfY\275[V\037=i\341\351\274\r\262\016\275\335\321\235\274u\003\252\274-\321\n=\305\277\035=\333\300\304<\036t6=@\365\244<\202N>\274\255\372\325<R+\336<L\032$\275\243\331{<K\234T=3\221\362\274\030y\003\275\325}S=\360\177<\275\247\367`\274D\013\'\275Dn\372\274Z$X\275t!I=j}\030<\263&\323<\355\215?\275R{\315<.\"3=9\334S\275\341%\013\275\031@A=y\377\351<\261\246Q<<(D\275\032\230X=\254\367\300\274m\3025=\332\017\016<\367\017\025<\366\211L\275\225\263\225:\035k\332<Lu<<\234\th<\354\225\227\274\037]\254<HM\254:-(\226\273\3213K=^\345}<H\217:\275 G\376:\225\2108\275\350\261\013;\206\247\027=CT\023=P |\274:;K\275\023\277\026=d\207T\274\342\345\252<\211h\263\274.\205\262\274\005\300\321<>L\251\274\343\223f<6a\223\274\221\361\026<v\222\023=\001B\257\274\267\372\374;\242\214\204<\250\363[\275\317\376\214<\222\030\035\275\3313:\275 I\335<:_\365<B\337U=(\024\267<-Lx\273\242\244\254<\035\3210=\233\254j<\201\'\364:\310\312F=\250)\210\274\320\353\213\271\312\302\256\274\267\357\336\27301Q\275\031\335\326;,\357\327\274(\346\035=\326\022\226\274Oo\017<_\320\022\274j\262>=\320\210\r\275\351\241n< \025\373\274V\256\317<-IN\273%\263/=H\341\233\274>\271\272<\213\3570\275\327\361\t\275PU\277\274u\324\213<\202\370\326\274\361\216-\274\372G\365<\t\232\016\275\373\232A\275\325\224P<\272\363F\275\322\303\316\274\254\3701=\334\240\307<M\030\337\274\223[\016\275\327g\016=W\3147\275j\236\013\275\303u\375\274\210T\016<<\311\026\275\207\205+=\301\264,\275\275G\340<\204E?\275|8\035=\3337\260\274\315\271\020\275\326\370\035= q\230<\335u\"\275\360\355\356\274\202q\023<Mj\374\274\006Y2\274Rg[\275\037\266y\274\364*\003=7\274\306<K\313K;D\211\342\274{\272R\275R\236\344\274-\024@\275\266Z\"=\312B\'\275#\324W\275\305\244\246<\034Q\220;\367\033%\274E\312\201\273\377k3\273\305\016X:t\236)\274\263\252\316;\000\020\213\274\246E\n=s\210\022\275\345!\255<\354iU\275\340N\032=s\224C=\340\221\033;\005$\221<A\246\301\2743\322\217<\025\213==@\342\354\273\377\211\236\274\275\261\235<\356\371U=X$\007\275D\002\200\273\256\250\364<\271s\356<+e\206<\336\232\006=\026:\201<\307T\255\274\217\253X=\272\005Z=\372\247\304<\\(\234<]Q\255\274\345\376\207<F\034\324\274F\013\010=pS\035\275\373\037\001=9\240\031\275\2131Q=\035L\035\275}\351\007\275\000\225?=k\274&\275\255\363\304\274.G\351<y\361\006\274m@9\274y\000\374<\257u\270<a\276\261\274\371\024\024=\307\233\274\273DW\n;\230}x\274\304\213\211<\260VY\275\006\357\202\274g\305\342<:\373\205;\301\007\245\274\307\334\202<\0145\021\275N\326\221<M\322L=\253\250\031\275\233\317\261\274\362\246\'=\236\271/=q\371\204\274\262G\301\2748\033\260\274\013\230O=\316\357(\275\220\251\345<\260\251*=\253\3214\271%\204\241<\341\276\213\274\001\263\265<\037\321\215\274\036\375$=\020\252\023=sI8=c;\t=*+\233<\"\223\231<\027d]<g\222\314<\203\344\335<kR\t\275\210\021\'\274\rn\244\274\257F\246\273\373s\231\274\320\343;=ExM\274\372\247\023\275\316yL=\251\350\233\274\317\177\264<\237Q?<\250&9\273h\227\342<5\316];{|1=\234\003m<\215\366\031\275_&\346\274\033\026\203<\303I1=\233\321\214\272\014f\222\274yXM=\225\317h\272\317\3139\275\234L\333\274_\325L\275\203K\212<W\304P=\362\211C=\"\316\260\274\271KQ=@\314\r\275\3229\340\274\206\217?=UH\323<\035B\021\275\3102:\275].\211:\205\221\007\274\324\346\261<\354+G=\001;(\275\002f\r\275\206I3\275E2\217\274\242~K=P\325\257<m\240\330\274\365;\020\275\247\037\204<\032\367A\275\231\2216\275W\235\212;7k4=W1\007\275\331Z\014\275P\037\302\273|\2679=\214\316\351;\226k\377\274\200@\345;\003t\\=V\253\005\2737\217/\275q\246U\275\242\t\233<\240\311T=\344h\001<\347P\014=#y+\275L]y<\211LG\275/M\013\275\220\256>\275\004\331Q\274\276\nG\275H\373\014\275\352XO\275\033\337\373<J.\250\274\333\315[=\025\334\020\275\r\024P\275\233q\342<\227T\034\275\032*\256<\331\';=O\340P\275\337,\375<\245\323H\2757R==\226\351\221\274U%\024=\313B\350;\324\313E=\021\016\262<;\350\033=\224WD=U\tQ\275K\343\006=E;\353\274A9E;\220\2776\27510\034=vO\232\273\300\003\004=y\315H\274\213\377\203\273\230\001F\275\361\214H=\324\327\223\274\331T\355\274\260\3535<\227O\334\273\272\007\024\275\200\224G\275\224\343X=:pZ=\333tX\275\361\343\207<\235\223V<\217/\006=\035\2514\275\314\016#=\326\354;<oGL=\227\264%\274@\0365\274\304\013P=\354a@<j]C\273U\n:=B`\314<\331\350L\273\362U\003<`\351j\274b\351\001\275n\367\031\275\207t\263<\212\275\004\275\000c<\275\022\2740;\033\2504\2756Aq<\200\361S=B\352j\274\214g\311\274\350>\216\273\220\263\310<[\252\006\274V\361E=\275`\351\274\370\373\334\274{n\200\274]\361\301\274_\217I=7\272\206\274\354?\037=/\241I\275\246 \034\274B\332\026\275bo-\2753\000\310<+Y!\275a\202A=_4\022\275\364\2458\271\325\257\346<\304\014\267\273\353\244\"=\251p;\2757\312\221<\330\234_<Y0\225<1#c<\237`\202<\255\3225=\365\257\204<\340\364N\275\003\253(=\242VW=C\306\320\274\032\344\370<\230\251u\274\337:*=H6\241\274R\314\216<\342o+<\323\346%\275~\0369\275\037\236y\274\353\226F=P3f;\341\273B\275Su\027=\302\331\005<;e-\275\214gB\275V0\304<\r\202\375\274\212\230D=\235{N\275`\334\242<|8Q<\201\235I\274y\311\003<\221\037\363;\220\241\361\274W\263\004\274\307\327\321<\226\372\206\274\330\353X=Rx\037=a_k<LX\017=\'l!=\230\013\032\275\243\017P\275x1\\=\350\"~:>\236N=\203|\003=C\031.=5\220\325;&\036d\274\356\373\3739R\247\324\274\353*\000<0\257<\275\276\314\202<\306\027R=i\277\n=\316S.\275\224\2137\273\365\256\031\274\324]\277\274\243lY=\020EB\275z\247\201:\031n\033<}\203V=\356\247\302\272\242\232\017\275-\273\304\273\237x#\275I\227%=\347Q\024=\323v\276\274\255\302\010\275\255T\243\274L\213\211\273R\024\010\275\323?\277\274\345\335P\275\321\241\365<\363\003?\2754\356(=\340;\323\274\275N\330\274+y\277\274\037\3426=X\\D=\301\223\311\274\037E,=z\345\212\273\ri:=\362\327\271<|\264S=\300A\255\274\252[\031<\027 -\275\013\217\324\274\377\277\'\275\363p\004\275\n\364\317\274\263\256 \275\302\241\254\274[:\211\274H6\260\274\300\273\'<x\330\013<f\364\021\275\034\306I=F\2702\2757\263/=\216\322\030\273>BU=\333\000!=F\326\264\274D\265\343;\3217F=\344 H\275\345\006K\275\016e\342\274\303\025\r=\rUM=\363\001\026=9\320g\274\335;\r\275\242\207p;B\204u\273\021K&=\351\267\020\275\276\200\336\273\312\223t<\353\351\\\274\320v\220\274\304\365N=\266\236\340;\320\302\322<\365\004o<\001/><\212\276\354\274\254K\377<\234\302\345<\304<\"<\304\325\331<\0134T\275\222i:=\305\320\347<\016I\230;DI%=\325;\005=\226\213\237\274\025m\006\275\224\247T\275\236&Z\275\215\240\276\274=jS\275\325l<;\007L\271\274\020\327G=\374\263Q=\243n\301<u\t\013;\026\001\262;\005\002|\274\340o6=\227S\273<\237P/\275\222\312S\274\\c\277<\302[><y\353\022\275;\223\001<!\327\032\275s\324\026\275k\312\r\275\002jI\274c\231\035=\266\300\231\274\242\270D\275x\034O\275\200\373s\273L\032&\275\266 \352\274\"\020\001=W\354\034;\332D\245<\363Z\345\274\206)\023<\362]\202\274\262\220W<\303\004\022=~\0024\275\251\353\017\275\325<0\275p\330\"=\334\320\235<\334<\230\274j\177t<\217A\357<tHQ\275\264+A\274+\266:\275\037\223\320\274\277%\024\275\364,\010=\234\347I=\266\024=\275\017\027\010<\250V#=\205j\001\274L\256\370\274\330\374\"\275\347\273(=\r\235X=\026|\024<6\214\233:\037\324/<\377v!<\036\373\r:\200\242\346\274*,\340<P\3146<Ol\341< Y/\275\327\260\021=G\"\002\275\333\353x\274\327\267\316\274/ \000\275\270\227{<\255oP\275\301F6=\025\371<\275\324\203\"=\337\371$=3&\014=\030\315U=g\370\306\274\001\'\036<\337\264\266\274\215M\034\275m`Y\274NJi<,3\341\274_\n\030\275\261\375\316\274\306L\340\274\351q\025;\305\\a<\rR\305\274b\016P=;\017(\275\311\304\315<\347\211?=h\330\346<>N(=\327\352\252<V\031\260\274\221\236!;\367\246V\275\010\216\034=\326\321\004=\022<C\275]G;=\370\317J\275\024o\\\275I$\213\274\266X\t=\252KQ=Xkr\274\214\246H<\262\262\264\2743\317,=\036 \310\274\336\227\002=;\202F;\231-\210\273\006\rE=\343r\032\275\312\203\226\274I\373\320;\202\260\336\273!M@;\314\026&=\367\271H\275\212\252\304\274\213\003\323\274%\031#\274 \3615\275Q\"/=\347\036F\275>\301\r=\372f8<\364I:\273|NV=\257\0310\275$\206\350\274r\231\034=\354\225\336;\274_\251;\234~\341\274\213\332\354\274\313/\247\274~\007\036\275\224\267\304:$\031\371<\251>\026=\003\245\'\275\273\227M\275\363\301b\273\3328\003=\031\266\020=\002\316\213;\0050\230\274\225\n\277\274U\307\013\273\224\363W\274\340\253\246\273Y\204\022=\t6\330\272\375\001\356<\254\243>=\035J\n=>V\000\275k\"J\274\"K\317\274\305\031\n=?g\356:a\267\322\274\246\n%\274\205\302\367<\272\213\324\274`\312\'=u\034)=\231/\035=uP\320<;\t\027<\335F\"=\021\242\252<\245\333\010=m\266H\275\307\002\303;\361;\225\274yP\352;o\321-\275Z@\237\274\312M\226\274\275\005T\274x\250\340;$-^<K\007b\2746p\'<{\024\033=\020,\026\275t\016\035;\351>[\275=\341\032=\231\235\010=\272\243^\274\271\213.=\207\225\314<\233\325z<\340\272H\275\342\247\017=\013\036\314\274j\235\014=T\261<=\375\343\357\271k\030O\274X5\013\275\221[?\273\325\032\250\274+\303<\275\201\266\036=6)]<+\315\006\275\350\223!\275\"\t\005\275m:\177<0]4=K\251\345\274\025\t\370\274\030\220u;\261\361\027\275\022\2238=C\'\210\274\361\373#<\256k\017\274\270\300\221<\356p>=\001\323\311<\211J\277<Y\324L\274\375\000&=\344\272\\=`4#\275L\326Q=\374\004;<t\363\254<\2708\304<\001r)\275z4\307<\'FS\275H\366~<8\347\355\274\020\243\257;B\325\201<\312\203\032=e,.\275\023\3745=V0\304<O\242;\275\347\"O=\310|\\\275\306\002I<\347\334\302<\213\330\350<\255\004\017=1V\027=\273\237\241<\330\356\020\275\1771\375;U\004-\275\200\376\266;34S=\025`\023=\303\335\034\274O\001\245\274\374S-=\214!L;G\276!\275\237\300\343\271\254\030\252<\022\253\346\274\374\270\003<\252\245\226\274\037C\375<\362\222D\275\206\037\247\2728\231\234<\247-D=\027C\372:\242\2444\274\347c\326\273\370}\t=\310\267\010\275\377<\024\275\034\252)\274\220*C=\210\\\001\275\n\224\327\274\310J\t=\357\202\232:\247\215\204<\325\351\247<\004\275Z\275s\223K\275\356\tD\275]\263.\274\006{3<{P\254\273\274g\007\275H\344A=\014\352F=\227N\301<\355\333\001\275\027\307R\275\235eC=\0275&=\202L\007<\337\321\032=\006[\021\275{\3363\273>\335*=\013\016\r\275&\246\274\274\352\324\314\274\352\000\345<\350\301\221\274\025\315\205\274_\245\006=\243\010&\275\214\355;\275\205\'\240<\'k\000\275\206\r\034=\222\336\211\274\231\t\206\274\236EL=\265\"R=\021[(\275\337p\0059*>\227<~\204\247\274\216\215\262<\037\031g<e\265\302\274\324\251\221<a\303\022\274\335/\001\274\016g\270<\265\212K=V\374\253<avX\275 \003\211;-\200\372<\013\227U=7\262\304\274\261\322\247<P\220\220\274\240:*=|U \275?I*=\377\337>=\261\033\220;\377\227K<\254\3412=\345\001\033=2\223\003<\367e\361\274\237\375\035\275\367\277\330;\231F\357\274\206\003s<\210\360\243\274\023\207\005\275\221^\242\274\343CW\275I8\223\274X\2401\275\212\362\226;i\323@\274\'\230\037=\214\rG\275\363(p\274\212[L\275\014\034\024;\342\377\014<A\262V<\205q\365\274\204P\321<\313:\204<r\202\324\274m\2636\275\225G\006\275Y\351\t<\366+U=\245\274:\275KDT\275\342\n\203<U\226\213\271\212\033\224\274\347\032\243\274\215\304W\275D\347\013=\010\373\250:\242\0078\275)J\223\274\213\267\202<\337wi\274\210\021\272\274Fs\340\273;\277\024\275\355\252\250<\252<;=p\241\373\274\366\215e<\240\n\234<+\243J=\3166\036<\235\021\377<0\247\216\274\262\344l<\2644\364\2731\215\363<!P\005=\300\232\363\273\276\005K=\312\366\266<\004\313\264<.h\r=\214I\336\274\316\305\263\274_n;\275\377\366\374\274|\367]<Z\n\003<Ny\207\273 \203\335\274\252{F=\016\010\364\273\215]1=\036m\332\274YJ\2528!\260K\275\253\320\035\272\360\364\302\274\210\333;\274(\037h<O`\033=R\351?;\n\346\256\274N\013.\275xL <dN\266\274^\305\203;\\H\250<\272\247\020=/t9=\377)\257\272\271{\342\274\324&\021<\n\356\260<>I<=\265\356\230<t\037\371<\001l\360\2727\366\343<\336\273K=\270b\311<g\231E=\3739.=\234h\034\275\033\341N=\253I\027\275\033V>\275\037\270\034=\204&\341<\303|\237<\313\0144\275I\305E\275\027\232\307<\375\257\017\275\325\207J=\0351\237<\341\273\025\275w\023\310<\022v^\274\212?)\274gq\365<\323\227P=\334\223\246\273\201\030Q=\311\022\307\274\341\346\010=\274\023\305;}\205\340<@\365\034\275\344\t+\274;\213^<\245\260%;\033a\024=\351\246\036<\243\363\002\275\304\251\001\275\367\2117\274\236\353\r\275\305`\r\275\307\0309\274\345\264\t\275\204\177U=1G\016\275\342F*\275?]\036\274\031\376\230:\351\366\034\275w\n\305<l\212\335\273\332\240!=\r\243\022\275\322\234\361\274\330\236\356\274\362\362?=M\304\271\274\374\302\232\274\001\203\016\275I\370\245<.o\276\274\300\215\250<\305\365@\275\265\000\024\274an\347\274\\\2478\275\343\n\025\275k\224\374;\212(\001=\373&J\275\250h\220\273\032\306\354\274\003\362\343\272G\332\\=r\306\302\273\023\245\235\274\275\017\243\274\241z\362<\346%\247\274\306\363-<\206\177K\275\3741\";3~\306<\322\333\022\275qf\214\274\322y\331<\371+\275<\227\2417;\310\346N\275\'\200\371\274\017\3109=3\202\264\274\221[\370<\341\364E\275|\326q<7B\331<\017\024\023\272\307\027\\:1\257\003\274\033O;=\3531\206<\327\363K\275\271\215\321\273Y\014\311\274\014\251\016<xs\027=J\213\016\275\020\036H\275\302\216+=3\243\330;?$\346<=\330\023<\026v&<\374Vm<V\351\314;\000k!=\303\377<\274\256w\005\2749C\031=\232\306 \275\257mQ\275\3766\205;d\226\273<\216/\351<\263<&=\363S\360<\020\337\223\274\030\037*\274\371\027+;N\340S<i{/=\342$\314\274g\344C=\001\0343<\014?\337\274\212\265!\275\355\352D\275@*\034\275\340f7\275\256\333\314;\271\037s\274+z\322<i\301Q=\351#\016=io\2769\262\240I<\223\263P=\210\005\317\273q\245,=\374y\026\275\021\364\246\273SMQ=8\327\310<\212\036N\275\351w!=\324\344)=\362\"\377\274\204\334K=$I6=\247\317)\275N\036U<\327\272\016;\3320 <pt\265\273\333\255\261\274\250\220\342<Dc\005=\300\364\250<\354\271\227\274`\346^<,\345!<\374B/=\377o\321\270\200O\211<[\t\355\274\222T\255\274-\202\362<g\202^\274Z\341\253\274\346`\033\275x\353\006=\216\222\262<7`\304\272\201\r\224<p^\210<\236k\031\275\300\241\231<\365A\\=\206\026\345\274\340\263\227\274\005B\361<=\002\002=\213\225\351\274p\251\373<\271\277P\275\340=I\275\373\270\024=\330\252\211\274D0)\275\256\232\254<:d,\275I\222 =\311^)\275q\346<\275 \032&\275\312\204\362\274\257\017\352\273\002v^;\277\r,=\332\327&=:\305\367\274\337*\025\273\226\2403=v\2769\275\260\221\312\274E\\\266\274\365\370\032<\023\014*\274\361\227$=\266q\331\274\217\r_\274\3522k\274#\260\001=-\247q\273J.\362\274C\032I:\254\325\212\274\2017}\273w\356\205\274\207zS=L<\332\274\324\326\014<)@8<\302m\333\272\016pL\275{\n\362;\000\254/\275~\213\024\275\265\027\346\274{\265\213;\024Tb\273ab\\=O!\203<\262\257I=nJ\017\275l\224\374;\004+8\275\026\221\224\2727wl\274T\272\307\274\263vy<\211\363E=\247\307\316\274\036Y\017\273\035\355\330\274\372GO\275\233\251\361\274\007X\272\274U\215E=V\027$=\304]J\275;*\\=\313\277\363<\'\261A=G\245\373;\244g\017<\034\226?\274\211#Y=6\036\316<\247kO\275G2\265<\231\234\373\274\201\350\303\274H}\362\274N\373\010=\372\236L=\300\000\215\274<\331\266\274\372%8=\326\233w</t\265<\233\347\003\275z\'\034=\014[K=\211\'[=\256\314N\274\003\007\\=\\m\353<\007\257O=\374F\325\274=w\\\2757>\"\275O\307R<\244\353\371;O\247\226<+\252O=\2573!\274\211\256\373\274t\313N\275Y\016\322;[\006\334<\257\337\274<;\222w\274\013\262\303\273\252\344\304\274\313\224\024=T\013<\275:i\214\274\246\216\337\2749OJ\275\347\234\301<\265\237\324<\035\035;\275C\024\'=\265A\274;\010\216\016\275\003%\004=\354xS\275m\1771<A\345 \273x\016\n=\337ap<#\254\351\274\232\005\006<\226(Q=\241\000\211;\370\312\022\275{\235\243;\236!C\275\032\217p\274\342\211\336\274\243\276\272\274\203\226\032=\237T\205;\3106\207;\035\256@=\2142\356\273\022\3230\275\215\177&\275r1\225<%\031\264\274hK\274\274\253\350==\360\360\017\275\270\317\240;mw;\275+C\320<\007#H<\213\3309=\227&+\275\016%\356;6\306\235\274*s\233\274\260\211L=\276.k<V\357\215<\237SJ\275UD\005\274>\\3<R\276\321\274\030\263\346\273\274\376\362\273\001\233\025\274\302Y9\275\320=\342\274O\023\000\275\256\246\312;-\205\201\272Av\242\274\350\353A=\r?\\\275\003\230s<\371<\217<\373\205\n<\321\301\356\274\005X\323<\377\357O\275\226\326\217\274\204\267=\275\367\235X\275\314\014\224\274\223\316\331<I\242\342\273v\251\034\275\3137\021\274\005^\024\274}G\371\274/\316\017=\361\363\020\275\013\310\210\274\203t\000=\346\211\206\274\2100\031\275\'I\t\274\225U\010\275\266\317/\275\353A\r;[`\255;\317\t\016=\227\352*\275\'\3302=\376/\027=9\250\016=d\2614=\300Z\014<\2315\355\272\034&\375<\363_H\275\310\273\025=\342\007{\274\275I\030\275\216GI=\221\017\342<\223\340\000\275\020\034R=\366 \225<_M\017\273}:%\275]\342\335<oI\007=u{\014\275\013\205`\274\3742\257\274\030\316\\=\244\363\263\273\302T\210<o@B=#\315\033\274\322\212W\274hyQ\275\370R\362\274\2444\036\275\205e\033=+OH\275E\265\000=\340\024\222<W\305\211\274\361\301A\275\3731\370\272*\237&\275z\237C=y\224\034=\300\212`;^\'\210;5<\232\273\334A\222\274I^\004\275}\312r<\321\006\n<ko\354<\242\370\244<8Oo<\2610\021\274\300\032\212\273\023(\352<\223{\226\274\355P\342<\203\271X=\014+\030\275\23218\275X=\024=\345\006\330<9\325\346<\372\200\315;\245c\305\274w\360j\272\276@\024\274\036\323,\275u\233\314\274\240D3<,\217P\275\376\233\222\274p\246@\275\030\310\017\275\037\017,=1\251\232<\222\365V\275hm\266<\227K}\274\225o\r\274\305\264\020\275\010,\332<\214\316\331\2748(\311\274\302\317\332<n<\345\274\365UI=q\232+\275\030\002\026\275\000\232g\273\312\237==\335\330\037=6\245+\275\352BM<\312\321\026\275\250OR=\305oD\274\336\274H=\211(D\2750\357\362<{\326\367\274\310?\376\274y\326\010=\325\323J\275\267\354\270:\354\306\261\274\3652\204\274\334a\033\275-\214\'=\370\rO=KX6\274Ez9\271\3715\377\274\017\360W\275-\331\322\274\267.\033=N]-\275\245\0045=\0321\346;\rsW\274\372\2430=N\360\363;\3121\307:\030\315C\275|\013\206<\000Q\371<\244c\335<\033\336Y<\237\232\000\275[W5=\362.\034\274\366G\364\274\024\354G=\024\352\227<\034\222q<\200F\341\274\261\020\237\274\267\360O<\252\236\350:\274p\371<\342<\016\275\276\303\032=\020\0364\275\r\210&=\236\201 =zX\271<O\2604\275f\001\003\272\330\237 =-C\362<w\244\023\275L+9\275\215\373C\275\017)0=\317\337\014\2757_J\274\233_\031\275\316\004W=\314W:\275+\336\274\274K\031\330\274\177#g\274\333\360=\2759\016\344<\335\362\003=@} =\315 \255<\332\376\"\273\273\341#\275\265\351e<\303GQ\274Ue%\275\266\2078=T{\345\274j\211\346\274~p2\273\007\321\353;8^O=\304\242\323\274:\230\036=\351\222\374\274\014\254W=k\340$=B\177\307\274F\366\016=\221\347G=\302\211\240<\244$m\274\254\275(\274(\266\362;\214\300_:\202\021?=\374>\025\275\177\247!\274k\013!\275\300\376\215\274\233o\236<\024^\231\274\004Q\201\272.g\035\275\025\345\327<\322\206:\275\001\323w<\210\347\256<\373{\261:\006g\371<\251i\"=\013\253\234\274\005kF\275m\360S:8L\030=\305\023?\275\364\342m<\313\001\016\275\216$\262<\006\3122\272u\215\262<\257V(=\252\205\022<H\206-=\274\352\246\274JC\362\274B\"\023;\254\357J\275\263\210\346\273\234\200u\274\004Q\372<\243t\364\274\200r\331<_\222\314\274=rZ\275\000m@\274\207\260\010\275U\227\t\275\354~*=V\347\003=\316f\243\274\036\002\362<P~#=\010*\014=\224\367E=\320M\005=\275tQ=\200a&\275/\204\227<\316\371\347\272\034H\301\274\026\274\032\275\252\211W\275\n\265\224<\371\340v<\213l\033\273\006\317\307\2724},\275&\270\210\273\216\030\262<LR\264\274\002\365\310\274\264\331n<W\342\036=E\221\263\274]\257\242\271\312\301P\274\031\246\002\275^X\334<\375\203W=\2440T=\263\271\264<uG\344\274\007pU=\234\204\034\275\327\201\220\273\031k\267\274\255/C=\350\013\t\275\025\357Z\275Ew5\275\310\006\200;\240\334I\275\007\324D\275s\344M=\010RX<N\0203=\304\023\271\273t\245\303<\306\236\202<\266\rL\275G7P=\316\325\311<\260F\317\272\324\205\206<\210\330\005\275\331\032\021\275\212K\247<\257\363\363\274\311\r\347\273\002w\001\275\306\272c<y\022\266<\237Fe<\217\305\373\273A&\257\273\376\'#<~l5\274&]F<\204UD\274\370C3\275\367\204I\274H\260\334\274\232\251\366\274\240T&\275\177\nE\275\316\305\277;\002@F\275\005\257\345\274Nv\240<\321\"\275<\030\014&\274\303Z\007=\222([\275\030\372\316\273\202\362\355\274iN>=\331;\003=\\\205$=\200t\032\275\2271\371<a\206D\275)YS\275+\004$<N\223\003\274\326\220\361<\233;\246\274\340F\377\2743K\315<\365j\231<\025\317K\274D\271\014\275\262\216S\275\252\3019\275B\354\350\273<\"K\275\250\324*\275U\304T=\377\357S=\343)\246\274\017\031\226<\360\032\020\275e\023\t=B\354g\273^\005\316<\314+5\275\345E <\345\207\344<\020e\241\273c4\032\275\233\032\256;\351\023\235\274>\372K\275\301\261\232\274\225/\310\274\374\306\371\274\265\324\214<5\212\252\2728a\022\275\247m\n\272\016\001o\273F\037\n\273\212\276\036\275\262\251%=C\236?=\324\334M=\212\256I\275\300 ,=mH>\275>W\021=F}\305\274\314\215_\2749\232P=\373\2567\275\005\274\023=\235=\r\275\242\277\325\271\342\377\'=V\203\323\274s\033\025\275\255\370\264<\322jO\275\257\333A=\272\233\204<\025\2552=\233\376(\272\363\257Z=)\t&\275\265\003?=\253\251\271\273\323aM=\n\315\001=9j\007\275u\225$=FXZ\275A\271\023=C\0340=\324uW=Sn\313\274\327\264\372<y\022\336<8\227A\274\023\206M=\241a1\275\005\201.\275\371+P=_\352[=\264\031\232<\215A\t\2756\263T:\037\314\277<tX[=cP\022\275\240\221\341<\030\270\325\274@\332\203<\016\362\355<\300\373)\275\342\311\022<\312)\'\275\265\367\372\274%\311\270\273\317-A\275\2277d<,`C=\002\3021<)\007\324<\217\360:\272/9\332\273`\344l;\250\366$\275e8L<\362\250\250\274-\233c<*\243\320;v\213\334\274<s7\275\326\2361\275P\207\001=\221\203\330;`Q\311<\362\356@<\206(R=\000{\367\274\242\246\005\275\362\024\246<o~)=\346=\034\275p`\032\274\030\253\315\274\272p\217<\253\022\007\275a\367\023=\211\360g<\021&\021\2756Zg<\301a\037\275B\274.=\026\263&\275\316\227|;\202\242\326<\260,J\275K\340\036\27385\334<\224p&=\224\375\024\274\340\222\354<\r\202D\275\020Q\226;\035\361\370\273\023\226\020\274\366\205B\275Sr\352<\316\302[\275\215\n\035=\032\222Z=\347+)=\003]\016\275S\231\230\272\024\262\n=p\327\202<\253\245$\275CF\200;\014\2423\275\276v\374\274U\237B\275\003\252\002\275\271\2446=fX\033=\002\240_;q\372)=|\034\215\272\204\330o<\305\020\356;\274-\037=\311\023\016=\337 \272\274\246\275-;\3067\014\275U=Z=\026\235\020\275\351\346\273<\014!\344;\255\323\272\274\021\204\r\274\247\3712=\271\0100<\354T\370<\253\304)<ES@\273\223\031\360<\246fB\2740l\367<\232\306D=\3423\r\275>\261\277\274 \027\313<=HC=\225\357)<+t<\274m\213\030\275\254\235\242<\200\344\020\275G\363\024=\343\0241=\037\332\035< R\210<;\352\364\274\3426(\274\255\314\316\2735\242\205\273\377\3504=\307\237\313<\341t\014\275Z\225Y=\353p1=.\251J\274\367w\020\275\214\301X=\236\3462;\323g\254\274!s\363\274wK\337\274\331\326\336:H\323\301\274\204|\036\275\223\204s;\314\221\014\275Q\260S=2\250\334<\312U\007\274iT\354\274\276\024\261<\326\276u\274\n2E=\377\037\024\275\226\250\255<3*I=S)\354<\346W4\275\021`\016\275\235)R\275\363X\244<\230\244\367\274\346\371\376<B\365:\275\311\314\244;d\257I=\344\322%=_\344\354\274\274\374I\275@\0014=\375\330(\275E\320Y\275\005\321]<[\360\026\275\004\302N=\344\365V=\233\276o<=8\225;/\3204\275{.@\275_X&\275QZK\275\364\010W=\025\216\305\274 p4=P\341\376\274\216\231K\274\366gA\275\220\021\035=\263`\343\274\256\244y<\023\356::\314\022\017\274\230\017\355\274\342la<mE\337<y\016+==w\037=\tn\002\275\235\005=\275\246\tM\275\264\310\334\273\274\327\003\275\030\335\256;\233\267*\275\316\332\207<b\240-=\233\323\213\274\276HF=\223| \275\317\245\273\274w{\274\274\327\220\010=m4\004\275\352\353 =\253\253O\275\001\232\347<\320\2623\273\177\373\023=\311\030\003=\020\014\276\273\275\343M\275\317\324\266<\340\345\274\274\235\201z;\000\311\334<1\301U=\320\303*\275\330\352I=\364[\355\274\315]R=o\226z<bL\"\275\305\262-;^\271\376<\252\307/\275&\203\337;pZ\372<\376/|<\323\2230\275,\3746\275\r$w\274W\034\225\273\2427\000\275\260#\225<\204\354\244;R\257\'\274-\333w\274\"o#=),C\275\010\037\275<0\262\276<\365\245\244<N%O=\031uA=\351\2304<\325*+\274\375B\203;Z-O=\320u\031\274\347_\335\273vv$<\207\251r<\271t\227<<\372\'\275\033]:=\210o\337<Ij\007=|\224\356\273s\320\257\274U\365\037\275\345\0379\275\257\262\\=:m\362\274\325\371B=\371\353\340\274\355\355\351\273H\005\332<\256\340\027\275#\t\350\273~\022\000=\260t\366\274\304\341V=L\2200:\204$\363\274\2667\344<Sa\342;\273\267\200<\216\004X\275\254m\327\274\261C\357<\333)4\275r\\\313\272\327S\255\274\375\243\246\274\220\263H<\273\367!=\232\225\025\275\246j\241\274\t\"\211<\371\343N=J\210\264\273\326\363\020\275\302O\326\273\372\031B=4b\225<\337\023\024=\357s\025<\0352(=\002\272T\275\350l\377<\005\214\003=\226\3310\275\321M#=%eT<(\022\032\275\317\334:\275\022@R\274\002/\357\274\205\236\263<\025\022\032=\227{a\273\223\022\266<\030|\252\2740\271\225<\300\022Z\275\205\030\367\274A\317\003\275Dw\"=\000\226\3559\3152\232;\314\364:=\264\260\033\275\247Z\020=\240\346\016\274H>;\274\203\270\306\2730\365\213;\331m\021\275h\213?\275\212\032@=Bx\301:\332/5\275\034\324\331\274>~?\275\223:\204\273\n>\030\275<@\006\275MK\022\275t\331\227<\247\347Y\275\313\2353\275\326\344\247\2745\267\201<\033&\317\271`\317\023\275\325\362[\274\335\254)\275\204\244(=\005\365\314\274T-`<e\216>\274\221\204\320<:\362H\275\367\177\343\274\310\034\212\274+\227\025=\376\347\016\2758NJ\275#*\360<\241/\357<o\211!\275\210o\035<1\027D=g7G=\225\002L<\014\215@<q\243\312<\360\316\300\274:\223:=\331\375\004<\242\300\003\274\326\277\003\274}.X\275^\273K=\365T\033\275Q\343\\\275\270\201\346;\250\3548=\257p.<\345\263\332<\\q\370;CiB\275(\241*\274\373\250\223\274\"S\024=\361\362\276<3r\013\275\022W\245\271\237\371/\275$\373\n\275\240\255V<W\202M=i\217\246:6\323\374\274\350\316\022\274\205\350\260<P\2475<\246\245W\274\315`\353\274U]\240<6\207\n\275\312\267\014<D/0=w(F\275Ae\'\275r\204n<~o\263<\002\005\003=C\331\025=\246\244\310\274\236\">=\355L\r<|\361 \274\0205><kr\206<\350\261\361\273\343\246\372<JS\023\274\255D\r\275\226\212\n\275\272^\000=\334Q\022\275\243\314&<\334\221\300<c8\256;\202aG\275Y\005>\275\263G*\275\3161O\275\\\035E=vX\377\273~HD\274\344\321\347\274\321\275\372;\347>2\275\210.\004\275\336O\'\275\\\302\253\274\250\252\350;\004\016\375<t)K\274\362#!\275B\255\313;\343\366L=\357\002\320\274\237I\034\275\370GH<\010]x<\010~m\273vn\334\274\370qY\275\277^\225<&\261\'\275\366\017\261\274P\310I\275y\305`<\211\336\365\273\251\177\212<\355\374A\274U\2214=\006`\024=R\001\036\274\214\213\314<!\034\027=!\201\022=\355M\322<\233-\352<\367\333\037=\330\206$\275\261\037\345;\022\001R=j\351|\272\207\375\026\275\336\023\260\274\222|\023=\3446<\274\025\300\325;\227\357\014=\032\005>\275T\022\374\272\251\264U<L\257K\275\335\250\303\274\277\251;\275O\351N;\317tL<&x\021\272\204\021\215<\357NM=g\307\021\275\220o\037=\245\210\"\275U\2306=\3521\207\274Y\271M\275\344\372\340\274(\'t\274\257]\247<|H\302;\013u\216\274!\017\232<\004g\344<fX#\2757\343\323<\200\351T\275c\342,<\345i\264\274\274I\317<=\220\220<\306+\010=\371\001\006\2754;Y\275\203a\332<\372\017\332<^`o<8\214\n=I\213\272\274!\270\276<{\320\022=\205s\307\2713\335E=W\030\317<\323\235W\275`\305\030=5\265\223\274\245\006=\275\256\002\033\275\000\373\266<\"\360\264\274\034\035*\273\271\352\360\273\316Y\231\274\001\034Y\275) #=a\314P=\324\217\\<\016\204\305<\2074,\275\023\323\207<\233y\'\275\374\"!=\"\247\350\274c\301\236\274\205\244\r=~f\005=\27765=\373\213\225\274\262\276\367<\253z\242\274\0066\021\275I\246$=\363\033\017\275\007\376\255\274t\3303\275\332E\365\273\\\200\370\274\317\203\234\274\233_\\<\210\313\022=.\267\263<\260\016\034=\221*\r</7\267<3E\343\274x\024\205<G\036L\274l\353\352\274\364v\371\274\204\255?<\304\363\263\273\023X\336<}\212\357\274\r\375\343\2749\213M\275\255)&\275\232\371~\274XlY=\3632&=`<\336<\363\271!\275J3\246\274T\273\305;gz\013<\325q\004=\301\204\322\274\312\020\027\275\270\345\030=:\205\237<\330\236\373\274P\014\227<\3758\265<\035\244\351<\"/\257\273b\2652=c@\244<\026\266>=\324\210\3758\n\307\022=C$\317\274\305\032@<\364\r\344;\251\222\313<z\177[\275:%G\275\355\273\244\274\334\346P<\325P0\275TE\270\273\213\265&\274\'\217%\275:4\210\273\223U\037\274c\264V\275$\013\366<x\307\352<=M\026\273\177:\221\274\367c\234;\212\252Y\275\362f\343\274\'\036\341<K\236\334\274z\307\"<(\373\035\275T-\214\274\010b\206\272F\224C=\341\332\315\274aAn\274\232\013\313\274G\347T<t\262\246\274\346K\001=\026\275\303\274\300\010N\275\221m/\274\231\271\022\275\351\326\024=\311z?\275\026a\313<\304\'G\275\2226_;\211$<\275\241\246\377\274\031\024\355\274\211\177\'\274\200\211\003\274\253\236\037=/5G\274\240\'\225;k>;=\255e[\275\206l\023=D\022=\275\003\006$=`B\034=\305\315\037\2755\n\025;\217\211\032=\006\213,\275\357s7=\231\000\204<\346\177,\275\315\222\326\274Mc;=\337i\021=\3256X\275\331\336\274\274\310\303\340:\332\351%;OL0=I\303\006=\243W6\274Y\301\316:w\000c\274\253l\357;!e\006=\233\346\216;x\265Z=~\210%=\232\240\"\275\t\306?=\237\262o8j\t?=\326\3348=T2\321<\215s\254<d\007\010\274\263\374\230;&\014\307\274\202\306F\275\317@\211<\215\372\025=\234\360\362\274\016f\021=\016\241\374\273\205\3021=w$\235\274\227\205Z=\330r\025\273g\3466\275\013Q\264\274\312\036\327<\307\346_<\265\252\316\274\372c\025\273\035\260\036\275`\032\300<\323F\032\273\234\273\032=|\365\201\274\225\212\316\273\275{$\275*\013U=xS\274\274\014\216S\275d^\216\273\344X/;\267g\372\274\304\201\370<\315\211=\274\030i\'=E\245\213\274\002\216o<%\361\211:H\212\030=L5\233<\262J\273<s\256\262\274\344\230&\275\213H\004=>O\"<\034\324\345<0d$=>\230\217<*j\033=\n\037\n=\273G\036\275\305\2336\275A\353D\275\235\363D=o\261\361<DPV=%\213\314<\347\340E\275B\261(\275\220/$=m\217\027=\005(\311< \234?\275\362\305\227\274\334uB\274\233\356\321\274?W\351;\250>\2409I\253`\274\014\375\315\274\242c\034=\303k\277<\325\321\340\274\226\3670=\221.&\274\2310\270\274\225\036\272<\201\323\031;\001Q\331\274\211\024\343<Z\204\251<\212\t,\275\360\315\275<>\241J\275\0262\036\274-.O\275\t\302P\275,P\203\274\034=\032\2755\000\017=\232\274\207\274\331l:=y\370\n=\243%\235<\2159W\275\307\330\271<%Pb<\251\263\344\274\0058\206\273\312g\\\274\014\214O<\257\310E\275\351q\003=z\310\310\2748\ry<\306SA=\325\202\264<\350\234\207\274\273\001\257\274@y\213<\320F\352<\031\270\037\275\3306+\275\236\322W\275\020\373\324\273g\325\322<A\325 =\266\210\327\274;PD\275&\365\357:\007g*\274\203\316D=\240^\263<\245I<\275\223Q(\273\244\335\017=q\245\346<2GS\274\353]\007\275\001\n\215<\347\361\232<\013\344\022<\276\037V=\232*#\275\010\r+\274|\'\000\275\177\324\033\274C\303,\275\202\322\036<\217\342\343\274h(R\275\274)\202;\031\004\3529\266\355\275;O\311\010=\t\030o;\035jA\2758\204\316<\267\355#=;c\354\272@Q\276\274!\2330\275L\212>\275\253jB=\353\031^\274\354\343@=\273\340-\275\357-\366\272\'\035\215\274.B2=\260\226\243\273\220p\313<\226\205K=nX8=[\334\261;\313QH\275Y\210\017\275\371\030\345;1\214\367<\334jJ\275>\005(=\276\255\226<\371\212:\275\345v\205\274\345\000W\275v\2043\275d8\020=\003x\237\274\3651C=\266\022\316\273\002\004B=\332\332u\274Q\257}\274\001J\206<ps,=v\221/\274=\007\022=\324\360K\273\231\367,\274Z\227\r=Zf+<\227$\251;/6R=&C\355\274\263r@=TiG=iL\247<_\271==*\322T<\254\342\232\274AT\213\274\037|T\273\216\262K=$\322\000=\246r\024\273\375\235\261\274e k<\333\305\\\275\353\306,\275\324:I\275\246\204-=\305\022+==KC\275e\362\"\275\023/\3009P\340\t\275\260=\020\275,BK\274\016\003\022=\222\320\006=N\211\251<\t\200\342<\364O\332\273N\341!=x\005\t=ol\004<8\325\034\275\213\313\201\271\260\363Q\275\340RB=wu7=\026\312*\275\017\342H\274d\217\\\275R\1779<\303\266\310\2742%F\275Yu\027\275\215\312\342\274\205\337Q=\017`-=\010\202\247\273[\211t\274\272\rD=\006\267\300<\n\267-\275\246SV<\277\013\230\271\330R\334<\243EZ\275\235\310L<\265\312J=\230\226\313<J\344\013\274)\326\265<~\344O\275)\027P<7\226\254\273\231\311\275<\305\004Y\273;\377T\274\262\347V=\003Q\\\275xd\210<\366\005\364\274\257@\005\275\314;7\275\222\304\202<\300\177\260\274\010\211R=\252W\214\274\266Zv<E\312/=O\250\3039\367\222N\275\206\346\227<\005\036)<\262\305\376\274\354\267\201<\037d1=\261|j<\n\\\002=\314)C=h)\312\274\347{\214:U\270\010=>m1\275\343\235\033=p\351\t\275M\0373\275\327\2025\275]B@=F\220T\273JRF=\304\004\336<0\232\023\275\031\014\261\274D\272w\274\354\002\202\274\366\2136=R\213\261<\303\230$\274\353\016\211\273L\353\317\274^\307\333<]\330\235\274\302\234\315<\262\014e\272K\3216=\241\256L=3\017-\274B{H\275\031\024E\275X\2220\275\264\347\016\275\317\203\370<9.\350\273\202\326\360;\327\217\347<dpV\275\303\361\001=\352k&\275\nO\325\272\270\241)\275\037\203-\275\217S\327<d\312 =\000\265O\275f\334?=W\202\274\273\177\033\027\275%\345U=z\346\021=\325\213\265<\245@\310\273\256,\276\2736\265\350;\325\311R<\007\356\017\274\344Y\033=jO\021=\265\345t\274\030<\314<\216\365\274<\250.8\275>&b<\302\366\235<\353\346A=Ax\016\274u$\020\275Hh\023\275\377\231J=\n\311\323\273\235\3579\275\244B\032\275\276]\003=2F\230\274\232\354:=\022\n\016\274l\223i;Y\377o\274h\220P=\325\330\225\272\277\334\367;PF==\177e\255\274\036F(\275\026\352\030<Q@\301;c\210W=#\017\025=bf\357<C\257R\275\301R\032\275+\2323=3\274N\275\215yP<\256\311\354<\275\316\017=r\275\363\273\256\303j\273\211\205V=\345\331\r\275\322\025r;1\316m<\324\230\256\274\312\032\375\274\255\254G=\"\312y<\226\376==Y\202#\273\263jD<hZ9=g\306\321<\367\tC\275\277\377\362<\263\001*<\217\202{\274.\3410\275\244d\024\275t\323\205<\331\206+\274\367\326\033<\004\232\324\274\230T\020=\252f\267<\365\211:<O\265X\275\343\325#\275\265\3541\275\301\"\r\273\233>\357\274\335\333\302<\021#\335\274\2455 ;V\322\017<\001\225\263\274\226\r\222\274mTP\275XQ\377<\366\265T=T\023\305\274)\2573\275\310\267L==\235\306\274\233\216\273\274\236\"r\274x\243\353<+]\214\273VkG=;\375\246<\364{\303\274\351\004\021=\276\210S\275\234\365#\274\266o\202\273d\3238\275\210%\013\274\037x\225\272\225\332\217\274\236\216\206<\301\237\023=\345Z\202;\256;\303\274Q3\330\274\265\201H;\022\366)<\326|F=\016\300\312\274\345X\322<\254$!\275WR\307\274+?\331\273d\205&\275\323\307\312\274\220H\360\274#\370\243\2749?\205\274N\377p\274\306WF=\324\\\033=\277a\005\274J\247\354<j\216\031<Y]\216\271\333\301\235<7m\217\274\370N\002\275\311e\227\273\240\372d<\253\356\367;\014\344\301<]V6=\355\334\303\274z\307\215\274GU8\275\335&.=\230\200\332\274\214i\361;[M;\275\277W1<i\303\346<<X4\274\374\207\r=h\\\022;\203\223\033\275\0223==\204\025\300\273\025\203\000\275E\221\2029\351V8=9|:\274L\226\262\274<\241\255<\213>+=\021?v\274\034\373)=\016\242\250<\205\244H\275\240a\236\274\022\256\232\274\275\210\037<\310lI\275n\016\002=\037X.=\277\272\332\274x\tq\274\205\021t\274.jC\275UjR=\302e\202\273RG6=5\223@\275\357\232x<\304?\204\274\"(\375<{5\005\275`f\237<\355|\352\274\244\246I\275\247y\n=d\tB<\241\351\303<\375b\363<\222w\257<\376s\034\274$\006>\275\\n\277\274@\250\032\27499\214<\302_\310\273\353\371\357<\326\271j<%\032\277\273PuR=\273z\333\274m!\316<\025\330\224<\364K\302\271T/B\275\260\"\033=a&6=)\363F\275\021\334<=\302\033\245<\366\t\240<\374\215<\275\377h\201<\241d?=\241\223\355\274&\017\'=\372@\211\274L\353/\275\020~)=\266C\360\274W\3007\275\004\201\322\274\017\331\374\274h\200m\274Cg}\274\334\000,=Ke6;-eP=C\363\000=\206\014$=\227n+=\247\335!=q\2364\275K\240\303\274\363\300\"\274\275>I<\317)\363\274\354#\220<\027\022\303\272\266S\016\274\264\237\362:\2171\377<L61<n\034\006\274\020m\317\274\rt\001\275X[L\275\217\n\027\275\307\331l\274\3149\3429\005\256\022\275\353:\t\272\224\327O\275\352\021\025\273\\\237\022\274\013YF\275)\253)=\'\262\200</\025C=\271a5=ac\272;\005=m<)x+\275~b\024\275\3356i\274\341|+\275r\305\031<\234i\030=\340N\216<lp\222;\225\254U\274\366!V\275\344\247\364<\r\305\260<\020l\371\274\250\251 \274+U=\275\021\244\303<i\3205=\221\005\312<\r2\353\273\005\314\343\273(2\r\275fNQ<\346X3\274\213\350A<\322\222\014\275{\340\374;\302\247U\274\205:\273<Ot\377\272\327hM\275{?Z=\317\026\276<a\267J=\263\031S\275>\260\023=E\350\010\274B\361(9\353\037R=\226S\244\271\307\3012\275\020\317\027\275T\275\025<\306\276\272<\305\206\276\274\363c\271\273\263\306\030\275\373\315\335\274\225\341\237\272l\231B=M\006\260<{\316*\275\330\201\037=2\032\022=f\333\035\273\2027\027\274\305n!=l\307\274<\220\204\t\275\1777\265<\361\332\325\274\331\371P\275\214\\\037=\206w\251;\213\263\267\273\027@\321;3$O<\273J\'\275Z9\322<\267\246\"\275\034\232\216<_<\010\274\033\354\021=4\262&=tr\354\271\363k =\322\372[<\332\005\032=|tB=\367\375V=\212j\001\275}\3214=\357\3301\275\201\376\321\274\217:\005\275\365\341\364<\301\036)=E\264\033<u\016:\274\353\273[\275\023\307w\273\204\373 \274\370Xj<]\'\217<\271\237\200<\356@<<\304W\000=\002a\212<\316\327\024\275\206\346T\273q\212\031<\026\n\247\274\003\272!=\'m/\275\273;\343\273\340CQ\274\272\177%<\031c\t\275\344\225\243\274}\267U\275\302\026\005\275FI\346<p\021A\275\316\214\001\275\221/[\275\227b4\275j\247T\273\263o\037\275\330\330\000\275\rv\374\274\304\315A\275c\262\257\273U\241r<\\\032\000\275g\270\241;\211$\026=8\205#\275\034aj<?\013B<S\326\237\274^\216I=\016\337\022=K\017\324\274\323\302A\275\026v%<\016\232X\275\333\302)=\037B\033\275\025T\r=\000\302T=S\235\300\273\214\212\003\273d]E=5\257\272:\3457\333<\2556\027\275UHa\274u\275(;\244S\337\274\201\000V\275Q\361\026\275\032\023.\275\017\2707\275\003\264Z\275\257\244 <[\032\333:\367\306\352\274G\271q\274\371\230\013\275\tyP\275Az\002\275x\007\361\272Y2D\275\243`\346\273\030\032\t\275\300\315\000\275\251\031\370<d\204*\2752\210Z=h\332+<a\333E=I\007\007=\224\265<<62\027\275\006\212!=?*T\275qP4=b\346\026=Y\262\035\275\374H\241\274R%\214:\262\361\3368\333\374L=\345$\207;\204\353\034=9U\037=\302\215\302\274K\261<=\035Y\n\274n\222c\274\276+#=$d\312<\271\234!=L\362&\275\330\206\037\274Hn\304;\277\244\036<\340\357\233\274\35728=\364\370:\275\215;\252\2740,P\275\2723\342\274\275\232Y<$\347\036=\350\214\253<Fc\314\273/*Y;\375\033\260\274J\211\303\274,9M=\312\354H\275\374]Q\275\036\215\026=\3322Q<\340\3133=\311\035[\275A23=\324\307W\2758lX=\253\2338=\316\223$=\251\n\'=\363m\030\275NU\036=\272nH\273m\323\376<\263_\372\273\372xZ=\374\335+=F\014\020=\210\200\277\274\257\225y;\241\022%\275\177\t\223;\331N.<=!\352:.\333\006<\265]J\274\363r\\=.eQ\275\245\202\333\274\333;J\274\332\351\330\274Cu\360<\345M\245<\374\314\302\272j\323\006;\250\2316\275ay.\273dp8\275\316\314\033=!\352\340\274\016\227\300\274\204%\374\274\335m\024=t\237\243\274\374J\206<\357\363!=)\254d<D`\276<\r?\316\273\347\007Z\275\032\346C=\025w\366<\373\303\342\274\370c,\275\n3\037\274y\257\231\274-\344\251\274|\003\266;\233\2675=\262\215\017=\014\326\370\274!`\306\274\001\267\266\274(T\267\274-p/\274\212\230G\275\352:\205\273\217\013\333\274ds\342<\265\026\034\275%\247<<\367tU<\263^l<\225\336V\274=\010J=\352\353\251\273X4>\2736 %<i\355\233<\357\345\213\274\217\235\234\274\2630\235<\377N\002:\313\272\031=\345\331A<\370\330\357<\024n%=\n{\305<\304\004Y\273Y\r\262;a\010\035;\215\272\025<=\276)\275\347\365V\273\214\256<\275\330Z\033\275\245\377\033=\020Z\211<\230X.=f\343\216:0\212\215\274\354\337\017=E\346\270\274\250\226\027=\304S\004=,3\n\272j\311!\275O\310\357\274W\261%<V!#=\244=5\275\335\215Y=\254\217\347\274\0005\033=9\202-\274\356\2161\275\335?$=\241\320\266\274\021\210\320<\321\352\252<Va\357\274\214\'\006\274w\033\305;\204\372X\274u\333\350\274\027\364\270<\334\371L\273{#5\275\254\316-<r\276\203;Z\246\341<H\345j\274\337\302\r\275\032\003I=\222\375\361<\005c\242\274\322\3037\275\035\345i\274{-}\274,\224\366<n\311\333;7\212\277\274~\276]\274-\262J\275\214\276J\275\275Fg\274\222DA\274\037~\330<x\214A\275+\2357=\221\240L;R\313\321\274\225\253\235<>9\200;\327\205\016\274Y\332c\2732\316\360\274.@=\275\274\017==\261\256\013\275\3437v<\231\220X\275\017\337M\2735\365:\274\210\352\n=\221\273\200<*.\035<\344b\266<\026x\203\274\223\016\377\274\'\235C=rp%\275^\020Y=C\353\264<\2531\377\273\221<\027\274\037\036\355\274-\205p<X\225%;y|I<\002&\210\274\241\267B\275\244\003O=G\001N\275\340\025H=\377 \357\274\007\274$\274%6\211\274 \177\235\273\354\227\246<\254-\223<\"\234O=a\216\023<\266\305\351\274\306%\305<\217\255\035=nG5\275\353\2237\274\363\304\330\273\177\007\375\273\253gL\275$2C=&\271\022<\344\317O\275xC\010\273\0221\272\274\261\2759=\336\317I\275\323H!<\200\221E\2741\342\037\275\023\355C\275\227/D\275\324\213Y=\2754&\275\375\314\210\272!\226\230\274\370\021\020=\255j\216\274l\265N\274RW\002=\016l\025\275\222\023*\275hH7=\316\006\225<CQ\303\274\343\314\333\274S\324J=\3751\"\272\177\n.=\003\267\363\274\336#\351\274WQ\365\274\236\300\016\275\026\264\274\273\3018\320<_1\"\275\rO\240\274,\371o<f\'\020=\332\261\017=Kc+\275\233+\001<%\031\211<\243\371\n\275\327g\026=@\004+\275\254b2\275@SC\275\005\305&\274\235\327H\275n\331\027<\325vW=\377:>=*\343[\275\032\024\367<\312\321C=\327\177r\274\2215\221<\000\332\254\274\210\006B=\205y[=R\207\033=\367\014\361\2734\"\\=\365\275}<\342y\206\273\027\313\036\275\244\340\003\275\336\373V\275\311\226S\275\n\355\035\275q\344\030=\221\034\026\273\363)z\274\320\222D=\001\275\006\274\233~T\274w\324\032<\205\301J<\3668x\274\004&\031\275\020\025\334:\355\3605\275N\204J=\013]\037\274\206\273\004\275z\271B=C>J\274\303\307<=\003\3776=\336\3025\274\327\226\013\275\202k\034\275\354\267q\274\356\275\031\275\325\335\214<`80\275\010\334+=\020@\343\274`,\010\272\211\370\002=\266\313><{\332\244<6\240-=\355\341\221\273\214\327\242\274;\n\013\274\273&<=\323\221D<\237\r1\275\276\312\243;\377\277\272\274$N\263\274\315>\354<\317W =\346o\341\274\304\350\023<Q\031\322\274\330\3227=\224\0333\275K\024\215;\035g\361\274\016\024\031=\311\000-=\254\271\311<H\377\255\274*\243D;]\023\312\274\250\264\373<0N\n\274\236\373\362<\203j\035=\264\005?\275\322\366\3459\304\237C;\227\"\001\275\226 H=\014DC=/\212\260<\311\353\022=N\032<=v\244\206<5\002\271\274\021b\020=\324\317\037=\306P\247<#\200\023\275\311\350,=\303q\273<\323\311I\275\335@:\275hr_<\031\363!\275\331\032\312;\227!\014\274zD\037\275U1\004=7::<\013\367\214<\352\277\016\275\215|%\275\242U\244<\202/H\275\021\343\3149j\335S=\210\n0\272\247\2118\274\364\354,\274\361\037\033\275Riu<\010\013A\275+\324\t\274\333hE=\362\304\322\274F\226\313\272TU\242<X\224\016<o\316 =\326\351\000\275i\322\261<\206\331\230\273\023\'P=\223\t\276\274\270\272\230\273\030\251\316;r\224\262\274\243\024\322\274\276Ht\274\363g\226<\264<P=\245\2125=\034\227\010\275%\355F9\336_\022\275\236\221\243\274\n\3760<=\303c\274@|\240\274\005\304\351<\352l\030=\031\337Z=\251)\325\274\322\230\210<\017UD\275\340V\237\274\260\002\363\270U+2\275M\263\003=y\326B=\347\341\314\273\324;\250<\025C|\273\035_\031\274>\207\335<\336\307\017\275\275\245\233\274U\230s\273v\231C\275K\364\022=:J\327;\005\025P\275\223D\373<\3033\030=\001\335\300;<[\267\273t\t\377<\211\276;\274\216\343O\2756\226\262\274\0303\000=I\034H\275z\177\t\275\204\246\"\275\374];=s\242\250\274i\266\325<6\305\242\274MX\277\274\n\325+\275A\324\035<k\022\034=Uu~;\363O\030<\205T7\275\031\"\002=\206\202E\273\274f-=\311\274A=-\205w<\202\237\032=kC\022\275\0002t<74S\274\031\217\361<\245\025\211<\354vM=\335U\276\274HC\014\275`-\210\274\202\300\223;\226\355\007\275\033\204E\275\341\376?=\237;\202<j>@\274\337\252\311\274\312\264\016\275\357\317\271\274\303mE\275.\260\355\274\355\203T\275\342\310\325<t\215\214<O\2416\275!\005Q=\004\276\307\274\337\010\004\275\236\"\270<\271L)\275\006Z\276\274\304\351\362\274\277\371\000\275\365\267\016<j\023\235<\224*\025=\236\346\213<\314\360\323\273N\242%\275.\2730\275\221\320I\273@\236\017\274\274&2\275u.\214\274\341O\346\274\244\210\306;/\222A=sK3<\374\216\315\274\347-C;\201D\021\275\027X\036\274\343\227\007<\305\025\203;\031\271=\275;\256K=\271\362\000\274\001\215\243:!\216O=1\251\306\274\211\220Q=T\010)\275J\223\226<\362\237C\272\371\361\001\274gt9<W\3771<5\340\316\274\340\222\177<\247,\371\273\224\030\031=\002\236p<&\230\232<\267\215H\273r\220\024\275!\273\364\274\260F.\275\354\333\007<\352\346(=/\204\226:\270\346 \275m\330\000=\325\312p;\366\355&=\014\213\005\275\000wD\275\234\262\374\274\240JN<\273h\262<\364BK=\314M\014=\353F\004=\375\371\352<\324\323\031\275\004\277\\\274\014Q\327\274\265}\027=\357\3612\275\304H\020=\373[[\274\212\033\234<\n\350\242<L\354:;cY\002\274\245\270\266;\277\036\002\275+\332\301\274\305\320U=`\341\007<WO\222<\031\247>=\327\311\354\274\036\340\214<\343\000,\275\202\370\026\274\241\241\\=\3352\024\275\367\017\211<F\231\372<\'\262\375\272\322b?\275/\036J<u\354\371\274\344JL=\321\310\327<~\331%=\017\037\234;\222\230\353;6\033&\275\204\003\001=\371\210B\274>\014\027\275\304\232:<g{\262<#?\271;\320\246\t<\202\244`\274\342\323\037=t-S\275\251\246\265<r\0144\274\273`\200\274\013B\336<A\315\311\274\346k\032\275\274\0040=\206\333\"\275j6\271\274C\357\010\275|\035v\273ZIR=v;V;\244\347Z=\236_M\274\347\364\255<\224U3\275X\026\326\274\340[\257\273?4Z;\314\205(\275 | \275K\363#=\240\255\020\275E\t\352;$P\336\274\300\230\335;,Q\237<\233*\332\274\344\"\244\274W\303\341;\246\211R\275\000\320\t\275\022#\202\274\370\235;;\372\212\\=\324\211^;r\267\322<\201\263\221\274\350\203\032\274\332\344\017=\277\362\230\274y(P\275\372i0=\246a\215\274\213JY=\370\321\t\275u\221\032=\366\3505=\310\345\245\273\254b6\274\223&\r\275?\t\212\274\236\340\020\275IB\006\275\367G\026\275e6(=fj\263\273\367\3403=\342\013.\273\252\021\004\274I\003\003\275\365:\376<\333\210\220\274\312]$\275\203w\226<\313p\207\274O\372&<\276ow\274\\&?=_G\342;\357%9\274\'T\026=\313?\203\274\271%\311\274\257$\027\273\tBS=~iC=\0256)\275\270\332\254\274\316\001(=\270\2557=\276i\232\274\034\0209=Viu;dz\243<7O\024\274\253\353\272\274&\362\227\272\305\223G:(9!\274\336\275\205<\200i\364\274\331@M=Or\246\273e\341\317<\356v\\\275\334\2143=\335$?\275N\307\344\274\211\202E\274\256\2251\274@\334\366\274\3350\034<`\3041\274\022=\324<\201&\022=\r\310\352;\252\323*=\263\257\206\274\361xl\274\350\275\326<K,\\\275mB\231\274\346\271\\\273o\254\036=\357\'\227\2745\021\260\2749\007L=\352\243\215<q\" =.o5\275h\264\206<\365\325\020=\024kT\274\217\200\274\274\212&X=7;E\274\371\376\226<\027\010G=\372\364\242<\341\3124\275\017\322\303<\301\374\020\275\036\263\n\275\356\312\357\274\321u\233\273\215 \035\275\320\321\020=7\'\"<\203#\352<\273\363\"=G\256?=0\325\211<]J\231<\007\017\014<\2232\337</\373O\275\254\317\030;a\354\024\275\364\020\303<%\342z<\323{8\275\010\351\277\273-I+=\347\2413\275\250\374;\275\253c!=\036\0242\275W\371A\273]s\311<\247\272H=\346\255[=\350g\311<\025\252\004\275\023\263\302<\316\326\321;*\234\n\274\346\002\327</\366\037=\316\017\001\275\200\262l\274|\226\230<\\\323+=i\340$\275<\301(\275\342\300\351<-z\025<\215Q\216<\006\375\246\274A5D\2750\247\035\275W\270\373\271\374\036)=EY\013\274O\235\221\274\227\347\347\274\305y\323<q\365V<\005\3311=L\216\324\274\305\302\202<g\375\343\273\233b.<\243\320\226\274M\002 \275<\351\0279H\300\372\274p\2375=$\321\037\274\304\r \275\226\247\373;b[\211\273\313\350\t<\314u <\355\253[=K\367\377<\277\216\021<c\255D<\300@\026=\203n\356<\035\311&\275O\257!=\024\352\246\272\262\004\026=\372x\206\274\3036F\275>y =n\0177<\236\0061=\306R%=\222\227S\274{\202R\275\340<X=\364\033\200<\276\301I\273\2625\030=\365\002;\275\327\252\247\274\025uK\275A\252D=\016\372?=\010RB\275e\221\322\272D\321T\275\210i\373\272\'\270\005\275^\263-:\325+h<\3211\227\274\271G\365\274\220z9\275\3731\246<v\247$\275\'\207L\275\201\357\333\270\313\206$\274\337]\361<\304a\031=\213\004\247\272\2102\321<$\232\312\272{\274\350<\255&\230<y\321\203<\211\023\342\274\360\320\360\274\305\250\347\274\036^J\275\016M\254\274\366~T\275Wq\366<\037\314\217\274\374\326\216<@S\262<\331\014$=\241\376\002\275\032\003\345\273\352\372@\275\331\327\035;\350-6\275r\213\r\274I_\354<2\210\020\273\'\316\177<(\274V=\246P\257<\031W5\275\325E_\274\227\2541=\230\034\343<@\230\355\274\035\362\334\274{)\327;\313U\230\274\216\274K\275M\336\356\274Dz2=:\302\247\274+\350\342;\204\334\306\274%\n\347\274\357v\376;\021\027\252<O\177*=\327\342\"=\2558C\275\220\362\241;\003V\025\275?\376\373;\250\265\313;\033<\020\274U\010\266<dbE=%\317\036<EFQ\274\r\361\000\274r\231\344<,\272\235\274\227q4<#:{<3=\273\274T\240\034=?\321\323\274\200t\361\274Y\375\025=k\306\266<\023\235\301\274\312W\252\274\214\276\324<\022M\345\274\376\225\212<\020pJ\2756\217\213<[\353,\275\372&\"=2\245\252;\'\3511\2756TN=G\372p<\373u9=\332?\243\274\033\333L=\374\017\017\275\003\322\222\274\364}\355\274\217g\034=\234\227p<s^\342\274\013\350\312\274\306\035\331;\000\256t;j9\266\274\032\340\277<\210\335P\275\022VY=lqS=c\323\364\273$B,=\205\360\376<\235\313\023=\321\356(=P\027Z=\350\206L\275\013\333\"=U\021\323<`\234\210<\307\314\326\274%\006\'\275\3105#\275W\350\266\272\273\222I=C\305\317<\364\262b;\037\202\026=\241\321\253:\030C\342\274\360\332\030\275\344\0350;\223\003\007\275\373=&\275Z\006P\275J;\332\272\244x8\274\370t0\275\030p\332:Y\253\003\274\031\206j<\271Q\237<\\M=\275\321\2331\275]]\006=\207rF<\035\336w\273\340\020w<\"\335\t\275\"R*=\003L\301<\177g\251\274\336\036I;\247\226S=\273?\021=$\271-=\355bB\275<\227>\275\'\374\027<W}\037\275*\352\342\273\306\313\374<\261+8=\213\262\253</OR\275\231\210\355\274ckW=\020\263S\274\260\\1\274\230BA\275tn\205;\365A\302<\321\3447\275S\304\036\275\013B\005\275\264\000\t=\261\3007\274\'*\301:j,\206\274\344\310F\274b5I=}\3068=\372Y\223<\250+;<w\270\220:\336\255\373<\0236#\275\270$D\275YKL<>\025\031=\006,M<S\376\004=\271\230?\275\371\337\032=Z\177\264<\273m_\274\324\231\364<\367\363V\274\233\3635\275\314W\210<#><<\215l\003;\210.\322\274\361\230\316\274\177\326\360<\326\310\367\273\302\301{<Q\031\250\274m\264\370\274\310&\267\274\177u{\274\273U\245\274j\321^<\356\300[=Q\252\033<\364xK=\364\321\225\273\312d\304\274\227#R\275\030\333e\274\036\230\251<\314,\315<QiE<\212D\234<\242X\237\274\300\272W=%\372o<\320\303\014\275<\2252=\342\365\022\274\331Q.=\245\302\030\275\323dA\275\364+1\275J\024\256<K\333\273<\342v\212\274\371\227\022<p\232\257<\274w\027\275\036\307M=\300y2\275\354rf\2740e\255<`\221\021\275z\226\255\274S0\372\274\030\202\315<\351\233[=\022\370t\273h\334:\275h\255\001\275\332\332\242<\251O>\274\226\303\010=\240]/=0\rB=,\223\n=\203\013\340\274\330`3\275\204\267o;\343\031I=\3378b<\244\n\300<\263K\277<\277\232\336\273\017\252(=F\212\026:\225\313=={\265*\275,H?=\303\016\211\274v\370T\274\252t\354\274\254$\027=\212\375\003\275\200\373\300\274S6\005\275\246\361#\275G\236\004\275\001\250\265<B^\362\2746\267\300\274x<9=\330\211V\274?\321S=\r!\234\274:\270\216\274\362eH\275_\324Z\274\370\306?\275\371\353\t\275D\361N=\331\257\036=\302\255\034\275\032O\211<\211\362\323<U\226\373<\202f\237\270\271M\343<\214\315\377<J\036\336<\301\363\000\274\371\246\243\274\223\316\257<\317x\006<\007\006\r\274\217\352\353\274\376\326=<\212\371\034<\003\237\027\275c\201=<M\3353=\217\271\002\275p\356\370\274\216J\327<=\270\177<\"T\341\274\377\262P=\345\241a<\273\201X\273\255\016\004=Dc\256\274\n~\205\272\225\257\376;b7\356<ia\267:\020h\010\274\'[[=zn\257\274\006\006\340\273:\333I=A\026\227:|\003)\275\317\014\"=\236}\375\274f\210%<GN\223\274\250\215\024=Vi\377<[t\253:\275\201\007=\030\272\313<\234c\256\274U\237\356\272\201\'G\275F\'<=IF>=\350\370\016\275\217\010\r<\253#\272\274{\312>;\356\270\356\274\322\016\250:S\262\302<gWW<\354~C\275\225\312\027\275\302{\375\274\346\357N=\220&\300<\247\023\253<\242\257P\273>\246^\274D\355$8h\036D<\261\260\'; M\266\274\031W%=o\253\205\274V\037\207<\320\247\212\274\231\024\356\274\033J\367;\005GU;\216q(=\345\347\300\274x\373V=v\246!=\206\354\357<\207\016D=<\177==f+r<\202iq9\327\267\326<|\010\001\275~\361\216<;\325\006=\177\217\305\273\300\3105\275\211\245>=6\000\013=F!\007\275\315\361W\275%O\030\275\242\317\000;`\3073=\234\205\020\275\321xd<\272\017\306\274\272\035C\275\237\275\211<=~\377;\017I6=F\247J=\301\031\032=u\027\021=\205\375\311<\347M\036=Yn\334\273:q\257;\'E\027=\231\262W\275\247\205;\275\005u\265\274\2154J<\313C4<\317\224\005<\370\256^\274\242J\224<x\316\034=\230\363\031</\214\014=Q\001\310<\256\013q\274\357\3016<\230\310V\275\334\3075=\224u\257<]\264\371<\223\203X\275X3\313;\362\0274\274\332J\227\273\035\346.=E\'\250<Ib6<&EX\275\302\227\347<\351~\216\274\315\213\025=\r\235*\275.\334\250\274\220\230C=\353<$=\010\365F<z\232Z\274p+.=\002\273n<\316\306\035\275p\341\357\273\"\376Q=e\207\013\275w\004U\275\030\251\213\274\021\023?\275\350\017\375\2743R\343\273\212\277M=\000FO\275F\232G\275j\356\237:\200\r\005<\204\327\312;0t\306\2748W\027=8\246\343;\321OO<\t\034\264:\005\264\245<\212\365\023\274L\261\313\274\272\274\025\275\rXa\274Y\252\232<\361\t\233<\332\336\310;\027`\274<\3204\215\273\225\016=<\326\3547\275\305\3000=d\334F=\374w\t=\302S\017=\020[\321<\032\212\n\274\251M.\274\276w\006\274\025\337\007\275!\337\342\274B4>\275\365\333\355\274\254\250\026=\354\3168=\204i&\275HR\217\274.@\315\274\214\3441\274\232\257u<)\352.\275\315\347\n<\232F8\275\243\316-=\360t\264\274\233&)\275\017M&\275\267J>=c\007)=\306nZ<\367\333\037\275\360\030\021\275\307.\230\274\233\321s\2747:\343\274\313\236/\275\314\007\345<\203\030\001=\375\007\275\274\274\306-=\367\202\023\275\354\306\r\275\327lG<QX-\275mA\026=\341J\016;\216d\245\274\013\256\'<N$\014=}x[\274\371\2441=\224\316\235<f/\004\275Y\314X<\272V\222\274BF&=\000~4=\026V8=\322\315!\273c\3605=\231\003>\275w?i\274\361\311T=\033\363\270\273]fE=\306\r\336\274\363\340i<\377\301\2249\221\374\312\274T|\177;\324P\336\273\200J\343;\034\235\033=\2151\340<\227H6\275\222\251\000\275X\275\375\274\356E\357\274\314\313\313\273\366\030\303\274\361\260\242<U0Z=Q\372\210\274\240k\276\274C\236\313;K\364J\275\201\002\252\273\212C\346\274\300)\373\2730S\356<\023\273)\273\2568\271\274\243\350\310<\213\203\r=\004DV;y\302 \274\306H4\274v\3476\274Xz\032\275\363\265D=\200U==\303\272%\274rL\000\275\202\225d<\207\rE\275r\304H\275\362\017Y=\004\000\253\274\367J\235:\373\333\017=\2312\365\274v\274W\275\312TC\273(r\371\274HY1\275\235\n\241\274\234\314)\274\264\252\007=a&\337;\351\231Q=\026\266N\275\367A\375\273:\2079=51\375\274E^9=\376\320)\275\\\304\016=\327\215U=$\201*\274\373\001\310\274\331\001&=\275R\023=_\303\002=\307=\031\275\271\364@<8\256+\275dn4\275\002\374\322;I\020;=D6\023=tP\n\275\233\253\234\274\234\324\220\274\272\2018\2754\321\'<\253x\263<\217\321\371\274A8\317\274\246\2028;{|\206\274R\\\2129\3246J\274\325\0239=\2676\034\275C\362\034=k\r\006\273\352^$\273\350\211\207<\350x \275\313\363\330\274{\224\264;\000\026\002\275\\0(<\356s?\275\034V\253\274\"+\000=2\247C=\360\337\377<\213\034\270\274&\177Z=\374\206\031=\214t>=2\306\374\274\364\377A=\244\321\004=q\211n<&2\327<\255\344/=\337\2738\274)~\355;\235\353\317<C-\335\274\206\315$\275\013c\201\274!\311>=\225\255\320<\333\020\324;\314\360\317<\214\237\r=B\331F<D,N=\215\265\022<\246\362B\274\300f\252\274}\376\250\274\021\004\274<k\374+\275\202`\023\275\317=\013\275#|@=W=\033\275\254U\024\271w\034\323\274\272\302\\<\377\256\010<\365\\|\273T\322\361\267Lz1<\233\225\307\274u\306v;\275L\024=\321\217P=c\331\313\274a\337\370<0#\311<\272\216\n\273\273\007\210\274\323+\n=W\257\022;P3\301\274\225\034\020=\254d\026;q1Z=\345\373\024\275\264=*;\212<\307<9\304\232<\227\320\020=^\220\244\274\203\256\255<\206\323\326<\211\214\316<B\"\357;\214I\300<\355g\366;\233]i\274T\343\017\275G\227\252\2735\202Q\275$q\316\274\035\3545\275\242{\000<\302\257\222\274c\312K\275\n(D=\244\327\033=\314zF\274\220\177\223<\261\234=<\232[=\275\2513R=\037P\004=\271\365G\274\000`E\273\302:>\275%\313/\275\254\213\007=`\014\361\274\261b\233\274n\354h;N\355/\274|\233\027=\321?\365<\302p;\275\253\013\270;\211\020\370\274\340\243\203\272\337P\352\274/\334\303<l\001\027=\3422\342\274=\345N\275\236\353\035<\300\216\271<\324\020\340;|;\243<-mH=\200[>=\272./\275\3654<<L\366!=\177\204\337<\252\014T\275\360\241\003\275\360*Y=\347\214S=\374\260\224\274\27718\275\332AN=j\340\320<\221F?=\310\340\017=\367\3150\2751!:=\020\017\350\274\214\377\"\275\256\313\276\273N\350\020\273S\323,\275\272C\017=\324\266z\274N\2004=\326\346G=\t\306\233<~\352\020<\177\314\\=4:\237\273\213\332\225\274S\270\017=&\2504\274\264?k\274\332\026\300;\263\226\217<v;\332;\037\372;\275\"\0140\274v\226\023=\016\255\026=]\352\325<%>\024\275\357wO\275T\016\236\274\002\330{\274K\320\227\274\201\234\314;\255\356\365;F\330\331\274\006\362\353<\007[#\275\000\215)\275ws\240\274\331\217\352<o;W<\006\002)=D\"2<<u\300\274\031\227)=d\034O\274\023\274O\275qz\237< \334\221<\250\340\250;#\317Y\275O\264+\274\251a\014=:\031\323<v\250\313\274\203\3011=E\374\020\275BA\036\275\335\213*<F;G<}\212z<5<\003\275a\275\321\274\325\215\t=\021p\224;\306\227)<\235\211\036\275=\205\270\274\320\353H\275n\224J\275\215\332\242\274\220*G\274I\227;\273t\361\217<\303~\337\27307G\275\026z\021=uT\362<\245\364\377;1v\017\275\222\361\343\274\242\272\t=\330*\277<\355\2063\275\'\351\301\274\2756=\275\226\207\"\275\301\331\357\274W\253;\274\014\315\355\274D\224G\275a\201\006=7\322v\274\272\334q\273\n\345\227<\037\377\335\274J-T\275\306\306\235<\211)\037\275\256\362\337:\016\027]\274\2330\006\275\020\211.\275\337L#=\035\316d;g\267*\275l6\031\275\376\307\271<\341!\344\274V\311>=gc\026<\'\274$\274\216\026\314\274\237i\207;`\373\216\274\202\010\246\272zQE=\240\252\330<>\224\n=\226\366\256<\202g}\273\232_\025\275\020i\243\274\252\206\222;jq\021=\013\234\020=}\252\331\274Ds\324\274\026%Z=&t\255<\240\001\216\273\271k\"=,\251\216\27433Z9\225\315\342\274\273KV\272\323\331\021\275<\304\200\274\207\223\262<\034\311\254\274@O$==Q\264\273\257\321.=\205d\024=\245=P=f)\235\274\031\226\t=<\221\021\275{\353A\275p\003\306\274\200\214I\275\340(\017\275[A\030\274\036*\003<\320\227Q\274q\364c<\371\223$\272*ph\274\243lJ\275\255\262\t=n\377\305<\336\025\224\273\032\374Z\274\241a\317<\031\216#=\350\266\247<0d\332\274\337(\033\274\035\221f<\035vE\275\265\022\035\275\273o\034\2757\371Z\275\321KX\275\311M\024<\2532\006\275I\357A=\236/\276\274MIZ=\001\233\237\274A\016\'\275\246>\r=O\020\244\2745\222!=\356\\\332\2743\356\';,\3759\275\376\225*=\362W\360;\352\000\274\274\224\016[\275\017\334\023\274\331\250\025\274B\201\\\274S\343\337;\303\263\203<z\364\313\273y\"\353\274\373\242:<\273R;\275)>\025=\300\026L;y\007K\275\251\264\335;\360\3026<\247\365\277<g\364\315;\335\240C;wd =l\257\242\274\241\352\325\274\357\271!=P\024 <\025\007&=\357\325Y\275j\350\031=M\312\237<p\036\353\274\357\361;=0\334\017=\\T\020\273\352\201n\274\202\004J\275\232\2627\275?\246E\275\256D\376<\365i\267:L\244\025=\021\204V=\207U\360<T\3613\273$(e\274\345\304\241<OZ\303\274\233\331\213\2746?\244:c\355\254;\376\336\244\274\301>v\274\227|M=_O#\275\270\202+\274\374+\035\275\0100T\275o\270\221\274\345\0025=\322\227\241\274\325y\257\274\026\241V=\240YI\275\rh\241<F\3376< \344\365\274\265\247\251<@\020\262;\t\274%=v\207&\275\027F\026\275\256\347<<\247\003\252<\002L\200\273\267\237\006\275\247\356H=\303\267\205\274\032\341\224<\010?1\270\201\2328\275\352\000\373<y\026\237\274\204\352\376\272Ew\027\275M&\315<c\241\013=>B\355\2749\314<\274\351\241Q=\371z\362<\336\375E=\235\024B=\\P\354\274]h\005=\227\226\\=\244\304\033\2744\273 \275\033>[\275I\2642=\325O\016<\217\320=\275lX%=\213h\365;\337\255\010\275\033\003\351<\302t\007\275r\314\306\274\232e\207;\2135\253\274\362d\322<it\022;\201\002X=Co\355\274\023g\211;)\215\267\273\262\202=\275\324\373K\275\227\034.=\231\362C\272\275\360R\275\372R\335\273\300w];O/\000=\332\275\024<\217X\363\274Y\014,=ey\320<\267\3208=\016`\t\275^\336\256<\257j~8J\367\020\275\003\000R\275^\247\246\273\311\324-\275d;0\275\177\336\027\275,\2641\275\000\245\366\273g\277\202\2746\242,\275a\221\035=\300#\230<a\035M<\031\244\206\274k\'|<\004\241\005\275,N\264<\371\245Q\275*\373\315\274g\305#\274\240\263\255\273z\353\003\275F?\';;\323\010<\257q<=\3735\363\274ho/\275aU\300\274j\200\026<\221\362n<c\275\032\275\201\332S=flP\275g1\377\274U\r\264\274$K\266\274u\354\013\275\256\243.=\264\342?\275Gqx<\300P\231\274\031\'S=\350\233*<|\206\'=\t\020\206;:\206\367\274\272J\n\275\323;\026=\236}W\275D\0347<\n\016\032=\"W\227;\0252\3248\221\373\212:T\374\030\275/W\010\275(\342C\275\241\245\004=\032\031\354<(\370\025\275A\350\333\274J\315{;\310\266M=\240P\276<i[\016\275\361hA=\340\2134=\t]S\275-\257\016=\242\247><\n]\316\273\253\340\n=\334\001\362;\325-\220;\351\032\212\273\035\251\026=\271A\272\274(\223F=)\335\256\274\327\340\257\274\316\000\"\275M\205\020\2755\257\337<\332\275\207<p/\217\274c\362[=\026\236V=\'-\352\274\247q\256\2730\0358<\331\377.=\213\311*=\374:\375<\247\360\302\274\016\271\000\2756\200\024=\303\347 =\337\351\036=\3105\202<q\305y\274\272\335\350:\203\264\201\273V\037\035=\2531%=\231z\225<\013\314\023\275$X\360\274\014\265\016=\315i\376<1\323\212\274(Xz;\265=\225<1\254\263<zD.=\272f\361<\206\202\216<\340\326\007\275<\365==\340\tK=\326\220X\274|\275\376<{\"\037\274\316\266\005=\225\262\247;o\340\206\274\277\355\207\274\241\021\252\274\266\262\246<AO!=\232\371/<\217\334T=\257\345\323;\350\206*\274\304\322\204;\235v)\275\341O\004<\362\r\022\275y\213\274\272\261\274\335<J\006\010\274\037\263\032\275\220\217\252\274S\000\204;z54=\241\376 \275d5\321\274\020\026\204\274\013c\237<.\025C\275L\313~<Hd\026\274L\021\323\273\"b\262\273\360\251\\=\240G%=\254\255\r=\353B\267\274r\350W\275$\366\035\275\200\341\t\274A\263\026<\355H<\275+7\006=\2058=\2748\306\252\274]\252\030\274\240_I\275\230cZ\274q\340\006\274\343Q\254;\212s\323\274\205\'\n\274\343\371E\275\340s\322;\260\nB\275\250\004\254<\346Z\270<\222\033\271<\342\334$;l\334\034=H\022!\275\274\037\261\274\242\235\357:%\3745<k\230};\326\207\010=\305Gq:\330\3714<X\3212=\032\3023=(\207X=\030\353\201<L\224\340\274Q@\207<wV\331<\036ju<\372!\353<\006\200g\274\337/!=\0025j;\216\373\263<\213\202\014=9\224Q=^\237:\2712\212F\275_\365\371\274\225c\373:\024/\207\274\372\246\256<4\246\327;\311Y\207<\313\"F=3\330j\274\250\250\324\274\314e\262\274\034\2767\275\347\232\350<\354\203\333<YI\375<\\\263\251\274\311{3=\245oC=s\227Y<\372\331@=u\227;=qI\010\275\\b\021=o\330\326\274\277\311,=\331\201\366\274M\351\255\274QG \275\366\007z\274\264\271\315<\252A\244<!\212\353<\276\207\014\275\274\260\346\274n\223\276<~\211\231;\246.m\274\347l\303<\031\036b<\246\0342<[47\275\267\036\350\274\222/\030:\315\334\251\274\273\016W=\313\2174=\007Y\221\273\034\r\273\274]\355\375<Am\'=b\230\'<\037\037N\275\342\325\276<\005v\013\273\306\340#\275\337c0;\27540\275m\314E\275\035\026I\275*\203G\274\355\310\352\274\247\361\037\275s+X=\331\304z<\370\211K\275G\352\032\275\"\020\276\274>\263\242<\2753\000=\021\274\350<^\013\025<?y\271\274x\256\247<\227\362\013\275\230L1=iI\263<\n\207\324\274\0362\'=b\335\220<\314\262\364<\257\235\026;\365\373\330<\337\324\243\274\22483=\232M&\274\326\370\003=\266!\315\274/\316\037\275\304z:\274F>\376\274\237\222\250\272N\350[\275xUl<!\362W\275\014\346==\2779\177\274\302^\361\274\256\255\336<\r\357\251<uH;\275wUL=|\327\265<c\0351<\206\360:\273Y\212^\274l\340\262<\226u\363\274Br,\273h\005\247<\244\236D\274v\304\235<\224U\202<\034\301\246\273[fJ\275\275\274?=;\006\337<k\236\275<\323\374\020=\254\221\221\274\333\220E=w\350\014<\361\303o;w\000\245<\232D\246<\247\367\r\275\371g\034\275\335\240==\332I\316<\010\341\265;PHw\274\3130C=\302%X\275\177\213,\275\334!\030\275X\303\021\275Z\022\005\275\357\201\260<}\234=\275\3716\024\275Z1\272\274>\373\224\274\227\206\273\274\256\367\315\273+O:\275sD\352<\016\200b\274\276\001Q\275\333w\233\274\275\362.\275\2242U\274d\262F=\256\037\034\275\366n\r\275\205\003\201;C\031;\275\341\366#\275\354\345\264<%Z\326:\331\305\n=\342Ym:\216\352!\275\334\340P\275#6\203\274`\345\t\272,n$=u\303\033=\031u)\275\360\023\344\274\315r$=_\307\022=\tz<\275/C\344<\340\215\026\274]\347\317\274\375C\377<\257Z\037=\253\013\016\274f?\216;\373\360\300\274\340\262L\274\036\200\"\275\310\337\244<\336\005\r=\323\376\316\274\336gw\274\007\354\337;\312\223\r=M\257k\274\303\206\277\274\3231\t\275\277^\235<R\204v<\326\332\255\273\343\260-\275;\333\365\273\323V\354\274\360mO=\311\t\332<#\300Y=\247?\002\271\321\246M\273+\2747\2750I\316<\254. \275D\364X\275\016b!=#\324=<\372\256 \275\204a\355\273\233\340\004=\363\252\006=\'vu;\256\317\307;P`\273\272\000v8=jj\215<\372\"\207\274\034~\331\273y\245q<\314\336 \275\234\224K\274\362\305\376<\326\036\002\274^\314\242:)t\004=\023\017\350:d\241\016\275\230\\+\275\250\206\224;\020\021J=i\322x<\275\236\350<\037\330\230<\235I\013\274\367\237\237\274%\354\000\271\207\334\372\274e\242\226\274\276}2\275\277\222\214\273\245v\344\274J\244=\275\327\233K\274yPr;\t\347\275\274\032\334\034\275\231\357\210<\003\241\353<Yg\005=\205hC\272f\031\026=\'\261s<\273c@\275F@\313\274\304\240\207<{\250\303;\327u\000\275Y^.\274jO\025=\324\275\014=\346gc<\262\341\023\275\2542Y\274\001\270:\275T\260\247<\272\226\242<\332\351\315<\036\264\267;C\272\320\274\223\017\024\275\364\016\'=\241:\212\274\261\231\021\275x\226K=>\333\257\274\340\031\220\274w.\r\275\376\346\"\275\327\024\326<K\365%=\022C`:\227u\021<\257 \356<Z\335\234<\037\372\305<\023\263\231\274\242#:\275\377\370\035\275\351\204\"=T\371\025\275\250G\000=f\200\225;i\203\037=\'\376\200<V\341D=\303*S\275n\nM=f\317I\275\2322\004\275\231-&=\235\"\003\275\003\372\335\274&\236\010=&>\262<j/\311<\301LO\273<\302-=4\205\036;E\3719\274\342\243\022=\200\226\233<nj\022\275\024H\200;\321\202*\275\360\217\333\273\031\245W<\250\032N=\013E\306<\000\0071\274\272\001\251<\316\264\n\2752\036\026=\375C<=\321\010\260\274\203\220\310\274\030\277\032\274\2135D\274+@\025\275\305\352V\275|\220\273<Ul\332\274\240X\247\274\307B\222<;\243D\275\251J6=i\017[=\262\367=<\221Y\232<\206\021\366\274\272\\\230\274\'\234\034=\247\017L\275\274\346\350:\020\247\314\274Z\320\035\275.\2405\275\022.\367\274\364\024?=\\\252\206\274\367\007\n\275f\205\340\273tW\005=\016\2763=\022\263[=&\030\300\274\n\265\277<\364{3=\343\334o\273\310\033\024=jh\334\274N!\032\274\254\343\037\274W\3456\274Gk/=\204x\000\275W\257\030<\301\210\207<u\177\000\275\006\202N=\023qK\273KXG=\325\270\337<\254\3676\273\273\326\257\274F\350\007=\305\237\031=\211sN\275\001\366R\274U\316$=\354\354\017\275\034\360\"=\271\215\260\274\310\303\330<{\267\255<\"\257\003:\305LP=\224\037\333\274_\234>\273=\0102<\233\2055<\210\307B\275\373<J\275\310\230\365\274B{9=|\246Y\275\233\014\273\2739%\316<z\204V=\340\372D\275\200\320\262\2740\204I=\321\363\211\274`\341M\274U\326\211<\304F\274<\212\267\001=\213eT\275u\375\204\274\257\227*\275\277\201V=\331\2143;\2332\026\275\'\371s<+\225==\312\267\321\274\216!\014\275I!C=\307Lj\273\306\005\230<su&=\r\013!<\350S)=5BB=\247\322\000\275WL\002;\222w&=\245\304\303<B\342$\275\000l\337<\305J\310\273`\r@\275\303\230P\275\2044W=/\252~\274\354\360\207\274S\351+=\275\224C=w\245*=\177\323%=\240=\025\275\004\301\273\274\213\225\254\274M\214>\275\215\2634\275\307F>\274619=e\346\363;C\361\341\274\316\216\003\275\202\t\253\273\372\0264\275\227zV<\264fJ=%A\313<\315\350!\274M\371v\274cJ\347<\317\211X\275-~Q=\262wO\275\014w\330\274\325\362W=\311J\337\274+\340\245<\230\r\013\275c\241C<\256\200\030=NI\211\274\221K5=2\201\274\274IN#=x\026E=\261\tj< \251\"\272\325\035\200\274\256\221\007\275\372\322b\273;\202!\274M1\022\275\017\247\335\274\255\0174=\336\334\024\274\211\322\374;i\300>\275\335\377\\=\022\253\'<\262\315\223\274\362K\003=\024\3612\275\347y\372\274\301pZ\274\177/\030=\3055\225\274l\204\\\273(\372\317\274MU>=\230\3074;2}#\275\261\357=\275\307\223B\274X\327\033=o\357\350\274\002\313u\273\211\320K\275c\301\342;\221\206\017=\304\222\033=\214\347$<\313CW=+\234Z\275\254\210\023\275`\331==\\\300U=-\327\254;y\013\316\274\365\033\024\275Q\334\203\274>\256N\275\246r\003\275\372sj<|lh\274\334\260\226\273\0167;\275E\3672\274\'\3616=K\204Z;\202\351-\275\357\307;<3\226\310\274\177m9<wrS<\034gs\274x\364\265\274\241IL\274\276\013\232:v$H<\347\324\014=\005\211\364\274\344\002\022\275Fj \274\274.C=\024\023\373<\213M\330\274\027|\211\274\373\005N=O\215R\274n\250\274\273\301\034\026=\331b`\273\021^\320<\234|1\275\271\032\344\274\r(\004\275\342z\305<\204\207\"\274\232\303I=^\214\370;\032\2639\275\177\265\017\273T:\337<\234\177\206<\212v\322<\271\241)\275Z\271]<\222\232u:\216\"<\275\307\207\022<{5\276\273qyE\275)\215L\275\355\200\247<M\021\"=\240\233R\275\304\372\356\274\336+k\274\251I=\275\302:\r=D\241\007=S\023\020=E\'!\275\200\345\334<\254\271M\275\375\r\221<K\342t<2\020\350<\262\221\226;\346\033\"=\347\360Y\275A9O<cM\363<{p\010\274\023\3559=\266\224\n\275\017|\201<M\366\271<\276\255=\275\"\200+\275(_\315<\037;h\2742\360C=\004\315\004=C\252\375<q\260\300\272\3611\354\2742\320\005\273P\313W\275\014\021m;\310\021\t=\224G!\275 \3748=Q\344G\273`5D=)\355\215\274\202\035\013=|\343\001=GvL=|\227C\2734^\367\274\376\270\n=\032\3629=\245\3748\275\037\232U<\260`\225\274\\\270Q=\226\263\302\274\"g\002=\354\014]=t`O=\037\224\240<\t\334\366\274e\224.<>\317?=\216\004T=-\345\267<PD+<\"\314N\274;\255\252\274\306\3573=\303\360\001=\301#T=\363\2454\2759\355C=q[$=\242\267B\275\033U\331\274\217T?\271\0048R= &\270\271\016\321\221<\332IT==\344\213<\207\321\017\275\014\336\223\273\r\034\025\275\221\022\316\274(Z\303\273\235\226\225\274r\360!=\325gQ\275^s\300:)R\r\275*\372B\274\353\311\261<\321\002;\274\231\2636<\352x\316\274\222\262\221\273@v\'\275\214j;\275\247\024D<\200\2431=\313\177\314;\244\\\013\275\310\177\017\275\237\tH\274\033)/\275Z\312A\274\353\321\003:\t/W:\247\247#\274\357\255\261;)\226)\275\320\342\r;\207]_\274i6\315<\271\203\334\274\003.\r=\326\333\250<K\331\265\273f\001\271\273\365\326^\274a]R\275\022nP<\303l\317\274\242](\275\366\311,=\232\356S<\236J\225\274\2175\205<\022\231[;D\254i<\233\301&=[\341Q\274\307\204\006\275\233\372P=\310\221\036\275W\307;=\002\360\263\274\355\363\023=\351/\000\275\034C?=C\026\377\274\335\203\025<\307\331@=\240\033K=\037\354\264;z\301\013=2T\177<\221\244,\275$/\210\273\030\256\316<\023s9\275dl\355<4\036M\275\307.A=\265\023h<\331\330\360;;B\350\273?\006\317\274\363>\261\274\215\021?=\332;t<\361\361e\274\002,\013=\\\354\216\273H\016\376<%(\\=9O5=\246W-\275\232\237\321\274\374\340\326<5\n1=\200\347\351<\311o;\275\312\n\035=\230\004\377\274\225\242\372<t\364#\275\302\266\333<5IV\275\362Z$\275\016\205/\275\263\371X\275\264\207\267<H\3756\275\025\343\303;p\325\215<\227\315\031=\025\353Q<q5\025<x\007\211\271\257\346N<\342\256\341\274\372Z\"\275\250\342!<\220!\234\274\370\000\006\275Ps\014<u\354\265;0\355\361\274\335T5\275U\004\005\274~\255\257\274pq\315\274\020\241\224\272\327V\035\275\307\366\014\275\327v\204\274\010~\373<?{\223<\264\301\361<\342\261\025=\025!\035\275\342\204Z\275+:\242\273\233\302\016\275\276\254\340\273\313\210\001\275\364J1\275\026\252\222\274\276\365\306<\300\033A=N8\031\275\037\212\317<\025\307\226\274\277\274\357\273\024\313\356;\347\256\023=d3\r=p\326*<\254\\\246\274\034\022\262<\267\236R\274\265\250\231<\2109K\2756\035\265\2736-\326\272\276b\344\274\376\236\300\273\241x\036\274\246z\003\275O\0147\2752\232\032\275\245\262\021\2757\3750=5\331(<\251\273\r=\356|\372<\274\264\266\274\360\332\365\274\324\232\"=\010\343,=\260<<\275\036F\312\274\252{&=6\271\365\273\353\235\222<\276\000>=\014T9\275U\000\037\275U\352>=\332\207|\274\267\n\023=\324\016*\275\365\246\335\274\264b\346<x\332\014=S\265\302\272dE\350<0\032\006<\3414\203\274\037\326\221\274\316\251\254\273\271q^<\200\2721=\036\025B\275[\n\263;\032\232\350\274\003>?<\212a\244\273\024\225U<\020\216\364:\366\355M<^?Y\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\313yQ\275\027\200\375\274\316\355\323\274\036\333\271<\300\330;<\373.\362\273\307L#=\360\3421\274\203[R=q9C=\304\352)<\302\276T=\314G\375\272\344\212\354\274,\263\024\275e\202\260\273\232\\\345<`lT=\307\207\241\274}-\026<gb\344\274DDO=:\256;=1\314n;Q\037\022\275d \330\274\370\n\035;K\032I=\355\007}<6\273\020\275]m\030<\013l8\275\202\2666=\361\262\256<\020\212\031=\346\262\321\273\250\222\265;G\377\267;G\216==\340(J\274\327\332\317;\252\212\346\274\001*\024\275\363IF\275\000<\264<\316HM<\322V+=\321\350Q=\205\253\252<\237\266\257\272C\254\351<\373r\241:l@Z=\030\267\'\275\032\312\n=\263)\350\274\216\207\201<\317\214\226\274\3722[\2751\333\371<\223\025N\272\236\236Q\275}\2442\274\2047\014\275|,.\275\344+b:?\354>\275s\251\210<\246j\372\274}\010=\275\277\374\363\272\257\336\002\275\030d3\275\320f\n\275u\2545\275n\300\352\274\214\017\316\274\213\276\343<\342\004\032\275\313R\022;\256\205S<\2268\255<\372:\244\274Z\214%\275A\237\024=~U:=\214\036\365\274#\374\373<Gw\331<\240<V=\013!\256\274\206\3303\275\330\355\326<\020\373!\275]b\325<\302\333.=\343MD\275*n\240;\237\361\362\273\220\202\377<\264c%=\306\327,<\343\002\325\273\235j\234\274\266R%=\360\314\240<\310\344\233\274=xL\275\327o\223\274+X\034\274\004\0251\275{\3777\275\002\205\327\274x\335\340\274\325\013#\275\330\215-\275\367\272\362\274\212\233S=\324\003<=L\016%\275\026+s\274\204qG\275\'\201+=\310\003\354<\025\326\373\274E\321\026<\377\367\346<\317f\231\274Mz\322\274+\341\317</\rT\275\342\364C=\237<\003\275#\031\026\274\233\"1=n9P=\356#H\275\300P\340\274\027\341\025\275\316\307\n=\335\354\337<\235\230)<\036rG<[\315\003=\322B\372;\361\342?\273\005\211\026=D>\274\274v\3772\274I\241C=c\375\013\275\205\304\214<\202\212*=\200\264\025=74\365<\003\027\314<v\272\201\274\204A=\275\0139G\272\257\242V\275\375\t\\=\233j\214<\3333\367;\272\271;=7>%\275\n\333,\275\000\303\004=\326}\362\274Q\270G;\250G=\275\020\273*\275\035\3675\275U\3130\274J4\304<M\346I<\357A\t=\352}\355<\244G\005=\324\236W=\274\224J\275\031\341M=\367\214\307;\220\240\304<\210\243{;\017\336J=0\220Y=\306\214G\275\270\357\026\275\366o>\274\314\273\312\274\362\0055=\"\324G=\016\245\227<E\344\201\274\365\344\037\275\267\320\230\272\214G\353<\250\373\274<\371i\366\274\236\276/=2Q\330\271\334HW\275F\\\345<\036\\\004\275\3700\031\275\330x\201<D\343\024<\270;:<<\3370\275.Pm<\230\306\267\274p\235O=2\223u\274>\006\205\272L\003\030\275 \355\201;\025<\371\274\013\315\211<\\\320<\275^L(<\216\257\312\273\234M\255\274\223-\303\274\362x\032=\302\360\"<\"\246\002=\275{T\275G\263L=~\035\262<\312|3=\201\204\036\275\312\216\354<\023\214\245\273\"YH;1#N=E\344:=}\274A=\216H;\275\263g\217\274<\251\005=\302\315\222\274q\373\027<\373\277\220\274_\017X\275\212{F\275\266,\030\275\252\307;=4:+;\351\310\210\274|\0132\2736\215[\275\357\361\037=\351\331\300\274j\341/\275l\311\010=\024\251{\273y\227\367<h\370?\275:\276H=e}<;P\363|<\212\014\344<ll7\273\207\026$\274\220\261\225<y\310j\273i\256#=\272\331\026\275\202\031D=\330I\265<\360LU\275%\252\342<\375\340Q=\214\351\357<B\372\034\275V\302\002<(z\216<\376\3561=1\343\205\274\010\220\014=\221f\306\274]\362\307<BOP\275\210\331R=\\\345\024=V\217\354:q\234a;\264\363\356<wz\277\274\346x3\275\"\"\014=\002\360:<\352\226\177;]\327P={\355\362<\210%\022=\357\030\370\274P\241\340\273\376\037\003<=P>\275\257\332 \275\301\247\002=\036\3177=!\237<=\336`==vH;=\333,\013\275\347\203*\275%\302\326\274 \256P\275\rR\370\274\324\267K;\005\267.=\230\3566=7\3754\275k\220\350<\243\036\r<dEq\274\223Z?\275\300-4\275\027\371G=\036\233\037=\303IF=\001\016\013=\211\022\366\272w\014\2658D\214\225\274\274\002\032<\377\362\321\272\355\026V\274\311\367+=\264\273\352<O\224\r\274EB\304<.\351\377\274B\262\034<\377|\360\274\361\177U=\361\013\023\275p\033==\242:H\275\036\277\302\273\001\323O\275\r\215I=\004{\333<\3752\322\274\221\277%\275\331!\264\274\344\344=\2752C\001=\241\371\362\274\327\245>\275\022\332\205\274\201\251\001\275>C\t\275\244\311\336<\026\r\002\274\035\2159=\\\002\371\274\2701+=\347\203E\275\014w0=s\212\036=\266\335E\274@\350\300\274\335\000=\274\323~\024<\220\240\277\274\353\316\230<yl]\274\336\325\001\275b\211*=\372\352\007=\326`\317;8\002(=c6<\274z\332>\275$Q(=\r\377\273;0\017\365<\246\304Q\273\004\351\230\273\247_\220\274\252\270;=D\244\257\273\001;=<\331\274\357\274ds;=\3677\353\274\344Z,=\324B\347\274\207\346\037\275\213\316D=\n\360\372\274\375\211+<\3238M\275\344\023\026\274\331M\257\2743\250\271\274[\273&\275\2200;=\357\030H\275\351\214>\275\250\375@\274\300\210\307;\305\205$\275\223\020\331<\225\2418\275\365\354\204\274^1<\275X\307\324\273\320\303\232\274\247\306\212<\026=\252\274\355\251\375\272\356\036\013\275\032\3143=\223\307\270<+\003H=\t\364\253<\026X\335<\267\255\317<|\276\314:\036\204U\275\367/\310<Z|\274\274\010i6<\300\363\263<\351\326\305<\3059\302\274\212\264*=6\355\250<\376\020\333\274gf\237\274\0136\277<\345\215\263<@\201\250<\004\300\225;v1\353<\237\244\217<6-%\275\027\251\237<\203L)=\010\345\373\273\276<\373\273\304\r\\<\316\305<\273\306\271\033\275\364\021\'\275y\006\276<\237v\232\274\214+\014<\263\372\300<\2348\213\272\300\315\243\274\007W\360\274\324\361\340\274t\242\377<\374\'\007\274p\224\013\275\010\222Y\274\320\004S=\227\347C=0$\341\2740\243\203<\353\2667=@\237Y=\243<:\273\312\'J\275y ;\275\317d\342\273\347\352\226:\362\022\323;\302(1\275\334\214\255<>\303@\275Z\343\321</\222&<\305\016\025\274\232\030M=\310;!\274H1\376\274\031\352\':\002o\266<\024\010\272\274\331\273\037=\317\221Y\272\311\323H=8\326\013=%\255\036=a3\211\274N\272\277\272\274\'9\275\306\031:=\232\310\'=\025R\010;\330zj;\362eO\275;\250\031=\212\325\340<\016ZD\275\302\3173=3\002\367;WNd<\303\232)\275\006\006\241\274\245\245\211\274\372\354#<\335\201\240\274\341%z<D\3022\274\201W\035\275\257o5\275\202\014\003;$\001K=\032\270t<@\230G\275h\347X=-\014\207\272\336\263\302<\223=1=C\372\275<\016PU=\354\024\032=P\201\345\274>\362^\274\\\203\312\274#\272\210\274E\273#\275\336\306\036<8V\335\2745\215W\275}\216T\275\306G8=\266r\004=\206)&<`\342\312\274\326\2632\275\025\376/;\364\206\010=A\016\320<\272\036\025=\205\262K\275N4\020\274{54\275\251\253$<\266\353L=\226\324X\275\026\003z<\202T\227<\230\340U\275\232\264\r\275\346@\315\274I\312l<\217\177\234\274\252\321\n\274\313\r\037\275C-\027=\234\004\255<\346\240\231\274\302\374\023=\210\233D\275\236\340\255;\252\303\211<\'\277\222\273J\177\214\271\230\365\337\273\243\232\002\275\233\246\006\275S\345\221<\243\356\341\274f\004\025=\360\240\000\275\232n\371\274\"9\302<\371?-\275\264\337y\274\014\356\016\275\271\'L=\221\2241<\311[N=@1]=\214\r\242<\302(\242\273/\005\n<&\002G=\215\2744\274\205!U<\344DQ<\204\365\266<\222\301\016=Bl\314<\274Q\010\275P\351\354<\031\377(=\303i\224\274*\231*=\226\210\021\275\271\342a\274\263\036\020=s\354[\275\335\232W\275q%\343<\347H\246\273\233\017\360\273\027V\007<\266b)=\374\3448=tOU\275\374\226*=\2434\030=\232NN\275\337.I<\352\245\033\275\221\241\323;\000\003\221\274,\357\360<E\260P\275\315hF\275x\377W\275\227w\215<\n\332A\273%_M\275\326\276~<\265\356$\274\354Z?;3\272=\274\244\207.<\036\016\357\273\250\026\035<\236\016c\273?\2639=\263\355\204;\371G\302\274Y\246\263\274\357\370\027\275!\351\001<@\224)\275M\311l\274\001\002\306\274r[\214<\241\2127<\2031F\275\313\376Z=\206\303T\275\315\262V=S4\024;\356\2511\275\003\027\262\270\356\024\362\274\\uP=\27303=\200=\274<\210\302\306\274\376O\327\274.\200\370\274e\325S\275\277\242\335<cf\302<\016\205,\275\026\303R=`-\n=\323\207\006\275\202dh<\255mX\274\361\200H=p\\\016=\264\240\206;F\322^\273\246\322\237;3\3707\275\333\3049=\\\366\244\274\253\220\036\273v\233\237\273\340\251\215<\233)h\274L\256\010=\"\232\013=\000AX=\323W\237<\3724P\274\312O\'=\2060\005\275\262`T=\302\2518=QY\371<\004\rC=g\203\r=\332\037I<{\275.\275W\303H\274>H\304\2743G{<E\027\237\273\017\rD<5\316\031=\323\n)=\355B\343;\243@\372\273\235\005\314;\340|\241<\274}\032\275\205i\002\275\"\305N\273\222\'*\273\250\2560\273\267\306\243\274\217\0240\273\241\250;\274g7\005\275&\027T\274\327;X\274\267\204\017=\224\264B=C\341\006=\3747\325\274\002\363]\274Rfd\274\240T\277:\013\0100=\0016)=\227\272\337\272Gx\020<\243\301\016=-\336\370\272\022\r\351;\273\3524=}\020\266<\304|\320\274\243\025$=\345x==\034\342+\275g\371?\275\253d\003\273\000\n\326<\357\333\014\275J\377\306;\375\355\245\274\317\267?\274!\274\226<\363\330\005;\364\235P=\321)\254<\206,H=\035\242-\2757e1\274\233\203\027\274\033\017,\2748\330H\275H\256Z\275z\312\n\275\375\374\014<^\023\033\275$\212\361<\241LP=h\255\362\273K_\020\275\t\227\313\274\350\354\035\275\312\006\325\274W\362,=y\263\314<8du<\223\205\034\275\037\021\r=S\335\207<\247\2666\275;k\003=g\374t\274j\350\240\274\024\317\227\274v[\370;\353\352\352\274\222\314\352;\300\352\326<\016\345\233\274\355\355\202\274\004\002\351;\341\234\035<r\351\'\275D\342@=\266]\302;3lU\275\245\303\321\274\244\005b\274\315\236\263\274z\366F\275\027\357\177\273\315H\311\274\226\365\322:\331\242\216<D\310\342<2\306\002=q\325A<\364\352#\275z\031\363\272\267C\022\275\201hm;\352N6\274\200}7\275`p\334<)\370I<\205\357\002=\313\021\005\275\002\302\254<E (<\"Le<Bm\031\275\244\262\247:\363(T\275\027\376)=_M\'=\252o\261<\334\t9=\235\375\365\271\031\2400\273\226\004~\274\215\263\\\274\305\3136=&\271\336<$\370\000=\016\234L\275\010\311\023=\237*W<\336w\022\2752\277\350<]f;=\3068Y\275\316bP=\325\250\033=\362\230\377<0\214\021=zX\t=\306\365#;j\331\264<\264HL=8\006+\275Q\304\021=;\250\317\274\375\023\013<\361\355(\274\256\261\275<\267\013\006=\035%\026=\316\345,\275\004r\000=\021\246\275<\202f\277\273\322A\343<\362n\200\274:X\371<\364\331\216<Z)\343\273(\363\016\275\033\215\276<\363\327\376\274<T\304\274\236\'\204<\233\2676=\023t\236<\217s\226\274Rz\027\275\324&\005\275\010\\/=\270\177\277\274\017\177\\\274\353G:=\025\322\320\274\373+/=h*\324\274\265GQ\275\242\306#\275iWT=\300\300V=\267}5\275\010\3609=\300\220\305;\250\370<<\277\260\220\274\3574\036\275\034@\"\275\0352\372;i]\241\274h\317N8qW6\2753?\314\274\247\2437=\370\365\033\274\236\345\202<M\341X\274c\267\363:1\030\342\274\r\241F\275\252\371\311;\314=\006=+,\002<[al\273\004\313.\275\263&\034\274\346x\0109\"\343\032=*/\274<\254\361\005={\276\007=\367D\024\275\363p\356<\216\276.\275\357p\301;\374\333O=\206-\013\275\255>;=\\DB\275\336O\336<\006+\021\275\371\275e;\274\224\020=M8B\274\034\223T=,v\323\274\356\001?=\266\001E\275\256\243\025\275\376\353Q\274\223X<=\027})=\326\265\r=\226\361\237;\r\036\257<\242I\"<>\0279\274HJ\031=J\205\242\274\360\210M\275\264\257\031\275,\303\261;\343\222[\275}!\250\274\272\217\201<8\334R\275,\025\031=/nW\274\217\375\243;\0105(\275y\3462=\240\220\023<\003ED\275u\256\033=er\200;\242-L\275\351\366\001\274\333sN\275\352\364X\274\370\032l\274z9\342\274\367\312M=\362\177\037=r5&<\343C\'=\277bW\2758]o\274\005\264\224\273\3673\005\274\233\014\005\275T&/\275\2155\354\274\335\215\004=*<F=\376\377!\273)\2656=x\300U\275\020\325\037\275\000\347Q=\226\032\005\275~\255A\275\203a_;\352\365\'\275\230\315\327<\320~3\273\312\350>=\356\353$=\336\354h<^\2463=\362\324X=[\\/\274<?*=\213\037\000\275\026\217/\275efy\274\"\242\031\274\333?\021;\247\256(\275\331=\024\275\"+\234;H/\335<\250\022+\275\266\246\203\274\203\303\351\273\250\242\277<\353o\216\274\2148@=\'\001w\274\316\327\216\274~\341\024=\033\021\005\275\322\346P=\203\214\261\274Fr}<\224\277\333\2749\354\201\274\303\2572\274\377\014\013\275E\3211\275[\035\234\274\336+\377\274\335\"0=M\242\314\2749^\204<\323\357\241<;Q\233<.\036X=\344F\217\274\374\322\265<uz\315<\010\002\221\274\216\366&\275\305@\351;\274#\000;q\310\004<\261\363\375\273Q%X\273\303\253{<\261\025,\2753]\207\274\30371<\357\034(\275\320\252\241\274|g\234<<\022M<\261\242\332\274\304N\356;\240_#\274\217\235\022\275)}\345\274;jI\274\2774\301\274\t(P<\240\263\014=\250\205\322<\267\311\272;\337\214:<\274;\2739<\036\'\273\234n\376\274\263\021\216;A\"\257\274z\377\017\275G0\205\2744\006\360\2741\225\020=\223\321+\275\326\224\337\273\321\3069\275\267\262?=\261r\307<GL\'\274\036\250\262<\377\377\360<\007\254\033\275W\253\036=\224\232\233\273\221\270\r\275\026\261\026\274\256\346\036=\001=\252\273\215H\246;\356\246\036=\210\315\374<\321\200\215<\200\r\363\274R9\371;\222,\220\273\372\000\317<\314j\276<_u\302<\224\276O=\301\205P\275qs\341<\333\260\230\273\316\354\032:\033\200\237;a\322R<T\327U= \035\t<npJ=\224\371\010\275\331\2420=\274\227g<\235E\003=X\357\'==\276!\275g\2103<\316\0068<\035i\027=*u\311<0\341\200\274\316\223!=\226)0\274\354\273\225<M \312;\251\272\274\274H8\360\274\343\313\034=\354v =\253\016?\273*\333>\275ft\001=\002\265\313\274\0347\'=\330\345\265<\331\372\320\274\267\336\216;:\313G=\3116\014\2758\274)=\014h:\275mNP=-Y\021;\300\312\\\2759I\335<\3213\346<_\365==\037\220X=U\255$:\262\332\013=r\034\376\274\321\316\023\275b\310\315\274\225\302?\275D\346\304\274\377\321\\=O,\016=\003K\243\274\201\201U=@B\207\273+6!=\377pI=\26165\275\226\210@\275k\2302=g\251Z<*\334\245<W\204\"\274A\306\264<\232\205\031=\023\344\217\274\025%\002<b\267f\274\301\000F=\234\370\014=t[9=\252\271\324\274\026\250\247\273\277\032!\275\000l\010\275\217\206\317:\340\320h<\214A\010=\332\013\002;\304V\251\274\230\n\007<}\241B\275\356\257\351\273\314S\006\273\tR\361<\301\023Y=A\264G=\234\376#\275\211\336\322\2748=\034\274v\326E\275\307\016A=N\215\006<\353\200\333\274_\002\'<\275\325N<&\310D\275r%\310<G\336\023=\267\213\'=r\027\325\274\3455K=\214f=\275\251\"0\274y5\314<\225\216 \275dm>\275\036\370<\275\222l\241\273y\tq:.\267\n=\300\270g<\302\215,\275c\201\032\2754\034x\273\021\267\356;.`\356<u\270\326\274\rv%\275\300)\024\275\350H\020\275(a\237<\263\354\220\274\362\276\007==\320\014;\224(\270\271\366\251m<\355\363P\275\201\317\377<\275j\276\274\336\235\373<\257a==\334\210\247\274\203\271\256<I\212|:\264R\270<\301\277~\273\027{\362;mc\"<\027iY=\336\\\301;\010:Q\275\247z\032\275\375yh\2745\272K=\356Q\341\272\300\370K;4o\027\275\3427\274\273\234`\273\273b\026\240\274\2319R\275\334\256\010\275I\377\316\274\376C\364<bE\t=\316\020\275\274\361*\252\274\261L\233\274\361\355\200\273fP!=\224D\205<\003\021\245<\014s\364<\262i\333<j\275@\273\345\363[=\2109\363\272^\241t\2749\2728\275\026\330\030\275\233\"R<\203[\242\274\340\342\021\274\363\344\311;\346\221\004=\207b\026=\262\3428\275\372D\350;s\306\317\274_\212\257\2748\017\010=_&\021=\310L\255\274_y\306\273\027\316\317;5\271(=\265bP\275\257\207\014\275=:\\=\332\337Z\275\261G\021\275e\214;=\004K\275\274|S\036\274\263\246\354\271q\255\306\273y\211\217\274\353\237_<\014l\215<[\3430\275\230\276\035=d 6\275\306X:=\314-\225;\211\261\007\274Nb\342<^\354\033=\256\251\251\274g\364\255<\230H\026<\371\215V\275\373\320M\275\300\276\340<c\030\020\274\225Y\267<\377Vr;N\2766=}\344*<,\231\213;\256\336D\275\266\324o\274\241\242Q\275) [\275\033\372\371\274\251\265\216\274\203\206\203\273\3571J\275\206\332!=\016\375\350<\257\026\343<\341</\274\250\3348=\t\376\002=>\3263\274h\274\215\274s\371\266\274\016\251c<\346\303\177<a\321=\273m{F<\325\263\335\274\276\rF<?\273\257\274]\016\371\274&>\274\273\027\007C\275\324\211>\275\n\016W9\260n5=\360\263\213\274hM\\\274\027\201\317\274p\357\014=7,\232\274Q\323\2329\216\267\221\274\2376\026=\220\001\320;\301\316\322<\345!\251\273\343\234\020\275\001\253\200\274B)/=\226\262/=\315\263\n=\240\362H=b5\024=\324\020\226:\276\316Z=*\023\327<\007\205\312\273\333\241X=\374\317\361<:\033\333<\314\271\t=G\366\300<\215\007\016<\031\325M<wn \275\257\302<=\037\340>\274\034[\'<\035av<\337\353U=#^*=R\341\343;\366\023?=U\316/;\362}\023\275\333\303\257\274\027\246\010\275\332\002\'\275\314r\207<AB\013=KRF\275\240j,=oO\323<m|\217<\363\206S\275\364\375O=\361\340\021\2751\315(\2757i\363:\203\3070<\214\333I\275\206\245\346\274\000\322\014=\375\"3=C\374)=!aC=\305\2761\275,\312k\274r\267\377\274\341\210\353<%j\340\274\374\265/=\000z0=\357\007P\275\252\022:\274\376\347\\=B\020==Y\360\261\274\210}\225\274\211H\033\274\265\263L\275 \2060\275\177|j;\314-;\275\004\"\216\274\347u\021=\202jZ=2k\212\274 wU<5[\301<\214\331s<\205\203\373;\345\272+\275\014 \014=\237\242B\275\006\252%=`\260D=\247\2534=\336\375R=\001`\366<Z\240\003\274w@\027=\030\261z\274\346\n\325\272\372\336\n\273\245\364=\275u\324W<Sd\322<\344\232R=\237\3510\275A\205;\274\204~4=\346\252-=\030\276S=\375\327\010=\217\214\323<6\253\316\274\206m\000\275\354!)\274\037\254\312<4\037K=4\030\352;{a\325\274yQ\222\274U\347\270<\n\014O\274\320\354\377\274\303O\213<0\274\031=/\233$=\367\017/=\022Y\\=\203\253\260<\267\337\"\275\273\220?=5\364[\274\0306\027\275b\244\343\2749\233\316\274z\0246\275\364\331\214\2742G\033\275g\363\274\274\2658\007=\316\264\266<\272\036\010;\016\224V=\340\313\272\2748B(\275<\252\025\275\240{\016=zn\036\275Z\220\000\274NM7=\214\204K=\266p\022\275r\'X=\373\352~;=\204Y=w\300\'\275\177\253k\274\247s\003=;\301.\275h\351S\274\016\2209=g\301\216\272\374u\333<P\344\030=i\240O=\206\302\332\273\276u\313\273V\277%=\354\005\342\274\304W,=\201Gx\274O3M=\267s\033\275\372b9=`\250\340<O\267:<\314\272Y\2740\317\357\274\207\367\245<\354\355|\274x\337\324;\275\2179=\235\223\371<$=\016<S\357(\273\255\274\316\274\271\311e;\021\231\244\274{%:\275$\001\r\275&\306:\2742r\303<\231-C\275`\340\216\274P\211?\273\262\320*=\210a\240<\\\030\035\2754\253\266\274\313\017+<]\226\340\274\344\306\n=\014\204\004;s\306!\275GZ\323\274\213\257\215<x\347T\273hIU<\363\373$\275H\331\375<\017\211*\275\377@\274\274\335x\224\274\202\2503=@\201!\2758\363\"=H\376\234<M\272\246\274\"-4=\373\222!=\266T\203<\265\016U:\262\nW=\271\t\034<Iz$=4\026$=U\024\362\274\020B\212:\263\210F\275\256M\312\274\360\370\005\275g\224\317<\007\237\375<U\024\257<)\2275\275\315\257I\275Z=\277<\351~k<\36243\275\306e@=\357\304\216\274\204p\252;\310\346\367\274\237\354\003\275A\205L=\327#\032=a.\233\274\320\311@\275\342\200D\274\273`\356<\216\017N\274|\204I<\232\245)=\230Cz\274\362\233\025\275\014-\212\274\275,\017\275xDy<\336\022\243\274\273\345\022\275*->=\251\200\034=\020pU=\262\355\243<\244\354\227\274\221F\035\275\315\263?=\036\265\251\273\331B\342<\010\r\344<\277\201\234<\336\330G\2750\227\262\274\246\200\326\274\231\225F=^\270F\275\213\000\023:8\000X\275\346\242~;[\341\307<J&b<\312\261\330;(\356\246\274\203$\331<S\321\021<\021\341K\275\246\277\247<Jo\207\274\266\037\360<\211\'7\275\376q\216\274|\236\227<\233\333\037=\320\2651\275\303RJ\274\326\tO<\341\273B=\312fU\275\305rP=CZn<L\256\242<\2152\013\275\267\275 \275N\203\013\275\364\261\356;\031\371\342;\020\216\231<\311\235\335<NY\223\273\264s\236<2\253\303\273N\241\221<\340{\203<EN\232<\237\013p<\255;5\275\235e\013\274\264\300,<\022u\346\2748\275[\275Z\316\314\274v\357Y\274\357I\360<\312\204\020=A\331\362\274\334P\213\273\211t\005<\013p\277<<\245\351:\214\242\205<2\324\361<\236-\201<\350\213\262<\353c =\260\234\266;\212\226\017\275\252\237\241<\315\204`\274\007\222\361\274\337\177\275<\227h!\275\346\364K\275d\373\356\274z*(\275\213\275\205<\374\342\323<\255/(\274\223\013\032=\\\325X=\336\264[\275\334\025\007\275\246Y\321<M\227\251<t\217\037\275]V\006<P\343\225<\304\354(\275@\332\230\273I\311==[\026:=\263\2707\275\271^\035\273\277\217\203\274\247\350\332<^\266\272<t\252\026\275C\246\r=\010\326\267<\356\013\303<\007\004\026\2756a\311<\025\364\213:z\352\021=\246\265\020\275DII\274\032}=\275-\0315\274\326D?\275\t\253\345\273o\340\353\274\236\220\371<\246\330{<\r}=\275\005\337\353:\212\300\002\275:\342>\275\013\302\332;q\3640\275\005r\177<\202n\001=\2043\255\274\030\240\235\274\3637\301;\013A\026=\035\201Z\275\267!F\275\350M\357\273\244x\301\274\254!\240<\371JO=\307\315E\274\335?\267\274\255\031\257<\373;\211;u\267\024\274\250lQ\275\220\236\004\275p\312i\274S1\340:\234\265\366;\001X\206\274(}9;\264_K\272\024\347\255;q\320\002<\266\355\225\274\211\225\t=\001i\214<\374j\345\274\'\020\310<\351F(=\2538\346\274\231\2735\275u\377\223;/\304E\275\035\231;\275\321I5\274X,1=\263U$\2743V\301;\240U,\275\255\302\035\275\030\301)\275\3371\233<MC\004\2750A&=\251\240\320\274\210Y.=\320\210F\275\347^F=\370UX=^\220\n\275I\204\003=R\022y\273\202s\356\274\306\000\351\272\211\035\212<.f\r\275s\007\324\274\215\2356\275\331\374-<x!,=\271O\256\274\256\305*\275\013_*\274;\2125\274\256\017\255;\240\237\356\274\326\372\326\274\313)\361\274\3306\206\274R!\034=f!\262:\004\223\273\274 \001\020=\213\341!\274\365\032K\274\372\273#=>\315\010=\253\344\245<\022,<=n\264%=\326\364\355<\037nF\275l\223\331\2723#\277<\373\337\341<\360\327\371\274\216\206w\274I\3330\274\351\032Z=DM\337<\335G(=7<\223\274\275\214.\275\242\317@=\345\256M\275\260\315\232<\370\225F\275k\346\210<\303\232\033<\362W\036\275i\236\206\274\334]\262<\334\277\016=XW\023\275\336\024N\275E\301W=Y\277F<\236\256\021\275\275n\273\274\364\374U<,g\000=\0312\371\274\231-\2109h\300\031\275R\230\t\275\301\301+\275\311\237\004=\026U\343<\370\206\014\275}\004\273<\252\270p<\224:\';\322S\021\275L\327/\275\274@C<\217\222\226<l\236\261\274+p\245\274P\300F<\024^\031=\302\366\016=\312\336\257:\366h\023\275\360\341c\274\264\257v\274\315\374<=\263\352G\275\210\035\002\275\317T\276\274\246\316[\275/\205,=!qJ\275\270g`<\336\361\271<\245e\303;I\324w\274.)E\275Zq5=m\264=\275\364\273&\275\375\320X\272-\2714=\306\237\032=1}J\275V6:=\t\207A=\001\3759\275U\350k\274WxF=\220\tS=a\266A:\364<D\272U\345\'\275\246M,=U\356|\274\177V\'\275\316\030r:\351\252X\275\021?\"\275H\007\\\275}\373$\275\021\272!\275\335b\277<\375\027@=\')N\275$\334;\275\317Z\216<hKN\275(\034]\275\335^\343;CfO=\322\364\010\275\256X\253\274.\307\243<\270\346\'=\370\007p<z\241%=\254\t\332\273\205\027\250\274\324\336\352<\234n/\275\215\001\342\274\224\240\347\274\001\265Z=\266e\267\274\'\243\320<4\026\374\273>Z\242\274\332t\303<GET\275\010\216\316\272\002L=\275\333\327\022\275\271\266f\274\366k\330\273hv\242<k\337-\274\240\305\225<2\003#\275\231\237-\275\272\034e\274Z\264\346\274A\235\336\264h\363?\275\335o\363<\363\002\014\2743\345\205<\034pI=K\0019=\355\3772\275\023\221<;\030\2135\275qq8=\024W}\274)b\331;\030^@\274y\014/=\312\312\255\274\264eB<\'\312B=\300\222[=\004\356\003=\311z\364<\\0\312\274\2735\347\273\210A\354\274\211\332+\275WrR=\206\375B\275\035J\000=(\274$=(\342\336<_H\213<\327m`\2742 W=|\300@<\016\232\230\274\251\277M=7\177/\275]V\245\273\023~Z\275w3;\275\231\372;\274(\261\2258\312\202V\275o\300\302:\2504\023\275\275{\001\275Y\020\324<y\372\025=\022\234\322\273P\254g<\323\225Z\274e\035\262\274\204\334\310\274#\010\202<\215\2206\273_.\037=[VU=\204\267\003=\226HD\274h\205<<\323qQ\275\005\001\210<-s\266<\207b\037\275\237y2=\021(U;$Er<\023\220\344<\363mO\275do-\275\266\274(=\006\010\373\274u\304\000\275\002#M=\032\334\364<pZ\270<f\241\031=\370\301\360\274hi\370:\344\353\020\275\003\002\030=<%R\275@\010\216<\310\253I\275\276\202\003=n\325\001\275M\261\004\275\353&2:\341\214\274<!\241\341<\302!\017\2759rZ\275\333\230\241<]\233\361\273\240\022\222<\364\nK\274&^u\274o\212@<P\000\222\274\014n\350\273\306xj\274\306Z\245<\321\274\037\273\013\376\366<\223\t\270\272\255\221M\275!\013\034<yH\377\271\273\033\210\273\270\363o<\223\231m<\371\330\\=\215$J=\214\253\342<\312\026/\275N\303V=+\003\357<\0033)<\025\200I;\nh\347;\n\264\362;p\030\233\274\243w7\275\027\361\355\2714\270\330\274R\003\027\272\261i\r=\320$\n\275\323\227\257\274.\325 <\301\250\204<M\032M\275\246;A\275\377v\032=\3267G=O\366\375:\371\242\036\274\256PC=\240d\t\2759y\014\275r\266&=w\272Y<\342\307\001\275\301&;\275\271\007I<\264\0352\275\320/\024\272\214\305\207\274UF\201\273\264\257\335\274\304s\245<\207\007\204\274\367\243\377<.\204\004<9\375@\275&\r$\273\020\303\r\275-p\035=/\002\233<\"\025@=\274y[=\232&\357<\332\212\'=\232\032\030=\235\202\031\275!\3244\275\030,\264\274\200C\032=V\256Z\275\344\345E\274\032I^\274\212Q\237:\205a\300<\026i\200;\035\307\316\274ed\377<\223\"D=\017\'4\275X\277\232\274rG\300\274n\263!;x=\021\275q\030\364\274\306\344\007\275\376\213\016<b\270(\275\311\007S\275\027w\031=\343\327\2019\376\201\345<\345*\210\274\351?\310;@\2468=\231\3132\274W\201\204\274\005^\271<\345\267\346<7yS\275QY\240\274$\241?\275\357\325E\275\253\214\250\274\021\305\007=\022\260\216\273\210\023\343\274K\347\316<<\321\232<\216\257\275\2741\234U=\321\020\306<$5&<#\332\324\274)w\220\274\360\252\025=\241\357\014=W\336\343\274\246\345\000=\375\337\314\274\344\355\277<i\031V<\232\330\022\273]\342P\275\023P?\275x\0330\275NZ\023\273T\260A=\231\235?\275h\307\255;zC\243\274b:0\275\\\270^\274\317\211\277<FH&\275^\013\337<\016\320\031=F\232`\273\033\036W<\345\2743\275\272\203-\275W\264\300;\337\224l<|\267\257\274VW\363<g19=.\2603=5\310!\275P\323H=\002\031]\2754\301\226<\315dE=\311E\243\272\320\t\232<\004\331\342\2734G-=\2456\261\273\362\305\241<H\302\224<\340\251&\275FL\032\275\237\216\022=\325o\237\274A\000\016=\n\224U\275\036\231\221\274\032b\313\2737\340R\274\023\376\310<Fp?\275\334f-=\212\362!\274M\022\306\273bA\001\275\205\210q<rwA\274\t\230\374\274A\223K\274 \257\221<@\260\372\274\212<\320<\236\036\350<\310{X<\277\334!=\364\206`\273\230\3202\275#f\036=Ud\327\274\2779\371\273=B\\\275\362U(=\177\346\302:\274\233\207:\331@\360<~\221\202;\272l\232\2744\031O=h\t\013\275\000H\013\275\347\364\n=\272\225\356\274\371\2011<\014\235\306\274\251\014\260<S\363+\273\032K\350\273\033\266\214;\215\354\314\274\234\234\221<Rg/=\360\272\036\274\345\231\217\274\225\035\325\274\307\035\036=\261i[=j\373\036=\226\323R\275\002s \275\031\334 =e$4=}\212\351<b\356F\274\000\205\317<\3246\355<\372\200\021\272\032A\236<\232\305\"<|]9=Y44;W\037\312<\260o\025\275%\006%<\354WM\275\311>Z=g\023\347\274\305l\363\274\261\034\324<\037\313E=\376\344>\274\245Q\327<\207\032\236<\272\345\313<\223\247\026;Iy\270\274pR\036=\245\2741<\370\350\010\2754O\331<\344\2302=,\330\346;\254W\026:S\245\304\2743N\344\273\017vZ=\002)Q\275\t\010\004=\347<F=\001ci\274\313\001\031<\273\222\"=#\033\236\274m\275\r=\235\334\365\272\257\320\027\274\311;Z\275\t\257\252<,V\324\274\323\303\346<By\306\274\207\221\226\274\216\275\353\2743\207\005\275M\213\332<\244\024\200\274\2156[;\240AA\272\375\316Y=\344\210\026\275\232X1=\010\010Z\272{lD\275\007sF<\363\313\245<jCH\275\253\3357\275\374\036\254<4\233\362<\257\251\262<\252\221)=M\021\231;\332x8\275\262\r\016=Q\001)\275\240\037>;nF\"=\332MI\274E\217L\275\254\3215<=M\035=J\2427\275\026gW\275\275$\323;_v\240:\217)\t=\304\232[<W\224C=\366\001\036<\243WG<\3444d<\220\315#=\243b\277\274\204\277\376\274\327\032&\273\331\255\255<fU\276\274k\251\024;\031\255\023=5\222\"\275\257I\"\274Gr\237<\366C\230\273\205\325\374<s-B=\001?n\274\274\264\333\272\373%X=\016k\254\274M\221\201<\302\344L\275\303\256\320<\303\360\036\275oq\327<\0213\202\274\373\201\000<(\346><\204\232\204\274\271\224C=\211\367<\275\010\2379=H\366\254<\327m-\275h\344\026<\360{\n\275\000~\010\274\314\3304\275\222\216\315\274\3513<\274\340\260\215\273\333\361~\274e\330K=m\320\266<\255\232\202\274\013\000\323<\217=p\274\031\\\203<X\024\221<\263\270\204\273\312\007\225<Eui\273?\335@=\374l\344<MQ\377;\226\3742<\326\227\344<\002<\223;\361,.=V\254\033=X\353\363<a\365\016=mZ\313<TR\265\274\274(\322<\370\035\311<\241\264Z<\250K\004<\000!5\275E\250\223<\372\334\226\274\3338\000\275\206Hn<\273 ,=\035\260\360;e\2277\275\200\232F=?\370\253\274\341\0145\275\264,\205\274[\2122\273>p\211\274\322\'\310;\203?\235\274\312K\232;\007\377\354<\244\232\014=\025\264{<\354\253\245\274\212\355\342:\007\027 \275#\233\214\274\030h\355\273\000+\\\275\326G\000\275\343:\004=\277i\371\274\202\300J\274\354\277\"\275\321z\203\271\030\226J\275\221\032\005\275j\323X;\320\323B\274\npW\275\337\275\275<\343\341\346;\264>\361;<\3011\275\024\027\034=f\302\252<YVQ\275\210\224-=0[$\274g=\241;\241l\211\274Iu\350\274\355y =\0004/\275\277\005>\275*!\'\275\361\316\260<\000\253y<]g\005\274+H\250\274\231\240\325\274g\314\210<\213\3061\275\250\'\242<5\277I=\372\324B\274C\034,\275\023K?=\307%\n=<\034 ={\025A\275\235{\342<\221\315\031<\274\305\010\275\032hZ=Ceq<M\245\270\274\361q*\275=\000h\274\334\3106\275-\323f\274\223o\213<\031A\333<\207v\035\275R\\C\273\031\364\031:ud<\275\351\2433\275\237\243i\272\021l\323\274\260\353;=uJ\314\274\234j\'\275\237|N\274\"\006\330<\364\\\230<aV\007\274\362\3173\275\363:\005\275G\365\271<\333^\351<Jc\t=\263\224\375<\354\3209<\251\202\n=\214\"K\275]g\344<\2544S=\301\366%=N\370\216<\252i9=\276\200\243\273#B<\274XVP=\020FQ\274y\374\230<i\255\207\274#\375%=\013}\021=o\301\375\272\016N\257;\'\232\200\274s\326\250<n\024\025=\236W]=\177\314\025=O\244P=D%-=\006`\355\274\226\325\032<\n\207s\274\"F\364\274\260\340U<*\317:\275\263\313;=\236\322Z\275\274\374\216<\374\310\227;\331\274\370\274\002\347\031\275\313\037\370\273\366\323.\275E\341+=\2346\320\273m\372\356;\233\022\245\274I\210\362\274m\030\032=\227\264\311;\304|6=\347d\270<D-P\275[\366\304<\216n\266<\202\201\311\274\246\2223\275V\240\036\275&\250\013=\277\363\242\2747\202\255\273\352\256\237\274\021\007\266\274\0327q;j\230L=/$\002\275}[\r=tTy\274{\363 ={\326\326;\227fN<\r\353\325\274\204\216_<\354\207\252\274\357\261\030\275\236\265K=\253\327<=\003\212\025\274#\036\305<\222x\234\274\273\354D=K\0251=\271\276\031=iQX<\252\000\367\274\241iH=_\016\335;\rK\200\274\266C\351<\327XD\275Jj;=\311&\275<\371J\227;\000\335I=\300~h\272\316\357b<)7=<S|v<\001\203\366<v7\313<#\230O\275^\341L\275]&9=\247\367\264<{.\271<\216m\016\274\337\355/=\365\243z<\353&\270\274\375\240R=\355\235\340:(\274\220<\322\210\332\274LJ+\275\313A8=vt\245\273\307\023\335<{\3131\274{\211\201\274\177\346\362<#\302\024=\t\353\315:\313\342/\274\277\261\315<#\331<\274\317o\263;\245\346)=F\211\233\273\245\325%=\376\023Y=\321\367\312\273r\261*=f\247[\275<\243\252<{\227\032=\'\225y\274\265+H<\273\n\016\275\216\217O\275\326\0143\275\301\361\035\275\251\024^;\240\324\315\274w\020*\275k\312g<&\225G\275B\226Q=\304\233\343\271\354\0370\275\355\234<=\232\3667\275kn\014=\014a\375\274\3136\n\274\330\320\r\274\344\014\014=\014\226B\272\216o\005\275\327\351G=\371,G=\341F\374\273\355@Y;\354i\030=`~\036\275\371\264 =R\"\216<6\320#=d\234,=]Q\034\274M\345\016\275\304\032D\275)9\321\274\021\233)\275\206\367M\275{\332\326;\334\253@=\316\312\276<\263(\005=d\377\210<\336V\353;\271\035\351:T\260[=\363L\315<IY\345:!\247\332\274CF}\274B\323\273\274e\315\207<\235\306)\275\235\033\233\274\326\016\312\274%}U\275\353\352\317;\340\370b\272V\230\314<\037\347\001\275\374,5<\2249\036\275\204nQ<~\372\256<\250\305\220\274\317\340\360\274\020\031\017<\355\037\336\274S\205\006\275P\n?\274*\n\317;O\347\253;\000\032\314<}.>\275\032QC\275T\243@\275m\027\027=\031r\014\275\201\254\363:\033\345\032\275\373\2664=6\215\321<\253\201\313\274\263\377\364<\022H\023\275\253\333\377<\'\004\020\275\247\r\352<N\303>\275\025\020\210<ic]\274\003\234\020\274\2644,\274G\021\300:\014\253+\275\372\027\321<\tm\307\274X\272\023<\373\' =\001\177\031\275\335w\027=\234J\273;b\221P\275\312\035\231\273U\034.\275\347\327\302\2716\361\003=\261I\037\275}F\033\275\007\214\376\274\214=`;\333Q =\377\006\033\275:\276\376<\1773(\275\253\305Y=\257\213R\275a\2078\274gu\241\274\312\007\334\273|i.=0h\33492\241;\275\354\025\367<\006\301S\274\316\\\274<_\342\372\274f\225z:\330\003\213<\360\250\367;t\002]\274V0\177\274\271\244\321<\374\323\014\275+\332\027=k\373E\275^\r\351\274\2233\263\273\272\233\236<\253\203\021=XT\014=O>\010\274\320\211\307\272s\344\351\274\325\205\310\274p6\037=\246%\020\275\021_9=\210\037\370\273ac9\275R\332K\274\357\270\314\273\334ZY=\010\333\017=T\277\026\275\271\224\331\273\0014I<i:\003=\372\277\261\272\332\341\266<A\3066=\020pZ==\316\001=\233\353.\275\031D\302<\251w-\272\300\365\262;\244_n\274\313\216G=1\3140\275\372\367\r=\332T1\275\034\0322\275\350\226\221<gT^\274Rw\310\271v\330B\274#\217S=\206\271S\275}z\361<\002\326\243<peU<\364y\347;\346\374/=\033\330#=\225\226\253;\013\314\3579\314\3770\275V\021!\273\336\310\272\274\020LA=~\316\010=9\353\310\274e\224\344\273\233F?=R\027B=@\331\272<\272\272\316<<#\341\274+\260P=\320\300P\275\260\313m\271\271\236\030=\022\002\244\274\225\017!:\274\027Q=4\031H=23\035\274x\000E<R\373E=\336t\021=%\311#\275\007%h\274\200>J=zH\241;\344\322\026=#\366\357\274]\336A\274l\357\026=w\210\007\275\253\242\206<\305w+=\205\002\372\274G\\c<hg\252;\210\300F\275\273T\356<=\232\026=\027\254\206<\267\0239=\036M\355\274\021\006\347\274\212\006\232\273\307Z\361\274\211x\327\274\275P9=p\030\376<{=$=s\307>\275\"\337R=\t\305I=x^!<H\374\007=\241u\255<\301\217f<\300\370\343<\254=\025\275\\\016\017\2744\321\244<T\3019\274\375\365\357<\376|\304;\036\036\021=\317\024D=\311.\022=\242iO\274\253\373\204<*/\035\275\274X\306<t\376\315<$XT\275\241\267\004=4\246\242\274\001/\016\273(W\006<\231\223\3549\334\307<=\003\327\025\275\375\010\016\275\2076\001\275p\375.\275|\236<=\315\302\346;\331$\225\274j\276,=\274v\267<\213\206\223<m\030\n\275\246\037K\275\000 <=\204\256Z\275X\032R=\320\334\314<\365\332\002;\202\345\260<\"\244m<m4\212<\027\3318=H<\301\274\300\337\353<5oX\274\000\265\344</\220\223<\310\247\305<\033a)=/\2771\275\347c\010\275$\3178=)m\315\273%\350\035\275\275\265\017<\010R\263\274\277.K\273\246\022$=F\255@<\336\n\177;{O!\275\220\300\007=\257\200\377\274?\374\346\274\332!\353;\271\277\366<\231\367I\275!\201\\=\010\0147=\037\355\366\273\276B\233\274\225\n\237<4>%\274\214-\013<8gN\275[$\013\274Wbo\272Y\254\313<Z\325\003=DiQ\275\001\244>\274P\223G\275\246\204\320;\315\207b<-\010:=\214l\325<x\370h<\203r\377\2744\331A=\352\005\274;\201\214\350\274i/J=\360N\340<Q\203\377\272[\376\003=D#+\275N\272!\2756\331/\273>\211-\275\205\321\344<O\363W\274\356&\304<\275\234W=\274\004E<\245\365A\273\024}Z<J\0039\275\236\250\207\274F>F=\321\346;\274@\356C\275\254\340\272<h\206\356\2749D\021=\227T1=|\326\024=\364\231\373\274<\242n;\363\367\026\275LB1=b\323<\275\252~T=\000\021\037=\nE\030=\\\234\266<\253@\245\274/\032\211<\3633\365<\343\277\353<.\242O=\2631\'=H\215\035\275\334\007O=\220\004/=\337>\307\274H\371Y=\305jM=\305\312\344<\"A\260<\264W/\275\275\315\001=\321\023\240;\354\221@\274\321\014>\275\242\250w\274\332\376>=*\352\352\274\037\210\234\274\214\266!<\364\225\371<\214\373\340<\344\202\257<\333l\\\275\007hT<\036\3205=\r\204<\274A\250\312\274c*[=Le\n<\314\351\021\275\222\364\267<\007\337\\=\216\3615=@\200O\275,\372\034\275\330\007\034=\214 \036=\356YN=\337\264\036\275\310/\375\273A\370\243<\343\336\017\275\223\346!<t\243\021=\274\246\332:\346\3275=n\213?<\257\233B=BS\334\274LQ\230<\312\224F\274e\007\222\274\031\242W\275\033\3132=\373s\236\272<7C\275\216\253\311<\3445\251<3\342\033\275\037\300\t:N=)\274\367\344H\274\366o\027=\364p\254\274\261\376\360<\3779X\275\335\035\022=l\217A\275\274\023\267<\024\235\007\275\201\222\014\274Y7\033=\016\230P\275\274\000\364\274\265\2060\275\253\016\027\275\216%&\275w\327\357\274H\320+\275\1779\250;\334\3739=\311\n]\275\021\003\234\274@\025,\275\333\330\216;{(\271<\320cS=\300\222\247\274,u\317<,\330R\271O:\252<u\333\n\275N\225H=\214\202.\274\026Z\224<\376\346\203\274UD\017=\306\037\346\274\246\363Z=$\211;\275#\362J=D\021\'=p\264\037<i\326\025\275\225\031\020<\'@\261<\226qI\275\325\335\344\274\263o\217\273\204X\364<\023D\327<\356\202\037\2747\227%=\n\304\217;\014\311F=\375hQ=u\200\235\274}\3663\275\025\003\352<y\242\017\275\203\255\332\274\316\272\037:\306\037\233\274\257\363\371\274\315\361\262\274\271\374\367\272\213\216J\275\272\272\243\274&\214\"\275\321%\365<X\274\267\274\201\034;\275\216\3429\272\377\3737\274\353\375\005=\330gL\275\021WG\274\351G\213<\365\265\r=5\372j;QxN<\366\234\225<\356F\272\274e\0318=\207Z\355\274,\362s\274Tf6\273p\276\032\275+\276\345;S\210k<\"\227\010=i\004\342<2\177\314\274\361\331\235\274\374\325?=\2515C=\242\255O\275ffc\274^(0\275\334\314\222<\234c\201<\241A\r\2757\206T\274\264\372n\274\030})=[DJ\275cb\271\274\316\223E<5\264R;\315\273\342\274!N\230\274 \365I=U\357\327<\313F\341\274\037h\246<\017\233\326\274\314\0326=\240\357\350\274\331p\\\275:\220\275\274\022\031G\274\r\307\002\275\2060\213<,\361Y\275\035\2452\275[\265C=k\246z<Z\336\261\274B\207\361\274]\367y:\256\206n\274\334<P\275\210\"\342<u\224N=\250\023G;\352\335\031\275\306\302\r\274\353}\007\275\252\305\201\274\354\352\265<\001\335\017\275\207 +\275^2I\275\234j\273\272\267\0034=\354\021X<\337$%=m:\007=\370^\304<?H\n\2741\337\333\274g\000\331<-\357{\273\027B\217\274}\367\350\274\207\274E\275D\243E=\371\233x\274\354bS<{\226\274\274\337\210\254;\3134\211\274U\020\314\274\361hO<\303t~\274\361\376\233;\222s\344:\334\016\223\274\031\303(\274\000-&=\355U\230<\342^L=!\335==k\272\301<\037\007\257\274\313\200\351<\372\347\034\275\022\371\247\274zQ\373\274\345\345Y=\340\0047=Y\345&\275\235\370\"<\r\213\360\274]\316\024\275m\252\220<\300Z\376<\025\373\r\274\300\023\035=\260W\033\275\315\362\264\273\377\"R\275\253\305\375\274\324\353\026\275\213\307\374;P[\024:h!6\275\267\304M=\220,C\275\211\216\270;b\313\022\275[\337\315\274\217\007\363\274.\374\246\273K\276<=\334\351s;0\301\342;[\226\261;\002\355Y\275\302\354\035\275Z\023C\275g!F\272s\351\010\275\305\017\023\274\332u\336\274\006\340\330\274\252|?=\001CA=\356\343\265<\320r\013\275\205\333d<\345\344\323\274\365\274\001\275\036\024\226<\262M\227<\023C\264\2739\310S\274\320\220\221\273\224e\235\274*\017Y= \356\320\2745}N\2740\3517\275\2762:\271\261D\257;\017\023<\275\375\'\231\274\317?\255\274\234i\270\274\300\342\022\275Qk\031=B\325Z\275\036\226\323\274|\274E\275\344\353\242\2746F\320<\365\203&=\243\247%\274\244U\002=\336\375\211\274\342t\336<\271;A=\256.$\275\003\376\316<;\302&=\307f\332<\366\376\021=\347\035\240<\341\340\340\274\250\3322<\247\242T\275\210\324\351\274\306\177O\274\322\026\000=D\003\332\274\234\323\216\273I\3167:\242\020\203<)19\275\310\004==b\323\024=\347}0\275\373v\027=\267\026L=\232\177\376\274U|\177\274\361q\240<&YL=)9)\275i\243\352\274\305\335\251<\276\373k\272\256\221\365<\253$\007\275\0073\377\274\237\344\033<.L\354<+?\\=U0\210\274\244P\007\274\214\315\242\274V\227E\275M\035\340<\244\033>\275\320>\267<\\<\213<\214$\016=u\351\220\274Z\317O\275\274\265\206<\327\351\347<fq\020=\231\217\364\274\030\207\267\274\320\013.=<l2=\037\255;\2755\240\316;\020\271\314\274\036y\023<\326t\335\274\341F\020\275F,F\2750\360\301<%\026\241\274\036@\251<\210\243S\275pC2=\031\260.\274\226\377\004=\322\252E\275\3725\360:e\322.\275D\3055;\333\365\037\275\317U\013<\224\232u<\'\304\371<\257!.\274\321\213\0359.K\271\274\t\366[=;\272\2079\3554w\271\201\353n\274\000\322?<\235:g\274\323K\261\274H\265)\275q\3132\274W-\031\275\216\000\017<\272\2459<8-\303\274^\207\365\274M\273\322\274^\231H=\231\023:\275\351\234I<]R\035=\206\003\"\275\263*3\275\334\206\365\274\016\240\234\274\336MZ=S\267\035\275\367\260\004\275c\220A=\373\242W<E\027\300<\010s>\275\324\267D=(I\225\273s\254\265\274o\".<\316\316\000=+q\000\275\234\2578=\305\304N\274\32568\275?\372U\274}\340\264<`\204w\274yX\024=\022\245\022=\014\237\351;Q8\317:\237\3764=P\274\034=\000\274\224<h\335*\275J\010\377\274\330\272\362<u\332L=\350T\333\274\252\205\013\275\021]\024<<j4\274Uh\362<\223\206\217\274\013%*=[\030N=\307\037X\274\0067\275;z\350\331\274\314\226\370<h{\037\275\347\324\357\274$\025\027=\271\010 =#\3507=A1C\275\317<\235\274\254KP=8\214z<\001\031\004\275\252L\022=&\264\364<KR\223\274\211\265\203<k\315\020\275\352\271\227\274\220}P\273}\242R\275\037\367=\275\310\006\220<\177,I\2752)v\2737\020&=\305b\327\2741&-\275\252y\352\271\267k\362\273\023a\251<\003\373\332\274\23305\275v\313\330<(\007X\275w`\037\275\246\305\240\274\315\243\264\274\'\333<=\366D&\275\035\347\301\274\226\004\021\275V\036\033\275\002\323/\275\263~\025\273N\245\036\275\210\361\236\272M\326K\275n\203[\275\343k\005;&\036\0038\266\351\005\275\372\022\221<\256\301\267\274v.\n\275\352\204G=\306\311\363\274\217\216\373\273\033\361\033\274\031\023\344\273\273\212\210\274q=?\275\022\342\302\274?@4=c\216\006\275\351\2149\275\237(2\275\010Y\372\274{8\365\2743\330N\273F\332\033=\305\275\035=\355\335.\275\0165I\275\225\301t<%\360\225\273\242\265Z\275\216x\227\274\377\250<;\354&\250<Mg\266<\222\006C=\246\3714\273\272\t\330<K^W\275B5\202\274\222;?\275\3604\255<mP\251<\231\243I\275\024\222/<}]\252<\250r\366\274K\242\030=\204IW\275\2659:=[\312!=\024\2632\275\300\333\000\275\236*\024\275\254\263\030\275>\'\035\275o\324I\275\264\325#\275\202\206\021\275\226\2473\275\311\014\351<\277W?=\246Ma<\362\203B\275\363tU=\270\201\244<\251\203.\274X\3415\275Mv\271\274\261\260==\247\244\266:\224+\241\274\254B\363<\303\225b<\324E\237\272\312\000B\275\213\301T\274(\341O<\004\236\275<{\031\301\273\266\203J\275\270H\034\275\343\371\362;\370\243\200<\274.I\275\356\007N=\351\023\240\2744\354.=\336\262\\\275\000\371?\274.3\\<\034\304\310\274\264n4=\277dB=\271\325\253\274\001\314\320<b\030\304<I\301V=\356DG\275\345\321\030=\336\304C\275\006\222D=\237d\013\275S\346G\274!\221\265\273\301S\021<\r\375\016=i\351\324\2744\204\006\275\271\331R\275\324+\232\274Y\260\236\274v\230T\275\243\216\001<\347A\321<E\026\023\273D\236\216;?H\316<-\206\347<\362\342\016=\274\000\017\275\0221\373<=\"O<\002\267t\274V\026\223;\336\036A\275\306U\037<\"\016\223;\303\2450;\2006.\272\375J\260\274\320\360\320<\2440\307\274\271\303\272\274\353P\336;\226i\t\275\320\2620\275\264\304\030=\347j\321\274q \000\275L>Q\274!\271\036\275\376\252\370<\t#\310<\224\304\364\274\"\317\022\275T\327C\274\311\013\242<\025\014)=\231W\005\275NaK\275\217^+<\007\n\020<\226\266\003=\007\021\373\274m\257\241\274G\364Z=T^\246<\340f9\275\260iM\275\360\212\316<\275a!=x\0376\275|P\260<8 \336\273\367\210=\275La\006=\312V)\275\367\262\350<1\025\022\274\203\036R\275+\027\316\274\226\327j\274_\236\023=\211\202d\274\031\222I\275\240\310\252\274\233\224\267<\302\t\035=\307\247K=\311\220\363\273\226\372P\275G]Y\274\\\346\027\274.j?\274AS,\275\037\363f\272M\245%\275\000q\335\274\264\223Z=G:\246<\303\327$=\354\307\"<\331q\335\273\366Lq\274\027\021\014\275\227_\210<ch\361<+\310\376<\375F\r\273A\336Q=Y\310L\275\005\200H=\3758\032=\323\254\013\275\363\313\034\275NJ\361<7\347v<\005\022J=uW\330\274\241\357\036\275\201\267\n\275\276\2214;\033i\014=\2711=<\372\3758\275\030\250F;\213bU\275\3516\224\274c\346\233\274\347\324\'\2754A\032\2758\250A=\036{\203\274\234\265\274;\261\237O=T\371\220;\\\325\334\274\361Y\002\274_\316X\275\352\221E\275\022\013\352\274\343\246\346\274\346\267\345<?\026=\275\245g\210\273f\224\025\275\323\361\371<\232\223\004\275\226\026O=\211\201\032<(\021\320<3\315\022\275\203)(=\020\361N\275\375v\377;z\177S=5\224 <\32490\274E\"^\274\312F\232;#U\365\274b\241\231\274\350\270B=\325D\024\275\304\273\020<\014\240\264<\345M\r=\313)&=\267]\332<\263G\032=\030\"\021=\236\367\032\275`\360\035\275\311\206?\275\244l\204<G\334\r\275K\006==\005x\001\275\243A\014=K^]=\217\273\372\274\304?P<\000?B=]\232Z=\320\227\313\274$eK=\317E\'=8v9\275\346\247W=C\214F\275\251\204*\275,\036\017:\264\250\376\274\000\330I=,\316\275\274Cl\023=\023\325&\275\331\3259=\214\277\034=N9\020<9\217\247\274\2055P=\"|\300\273O]\312<\367Q\315\274\374x\n;k:u:~\337\351\274\236f)\275_!(=\377\3431\275\340A\025\275h\360\312<\220K\342\274\207\341\317<M$\352\274\262v8=\330\325\336<dm\032\275\352\374\003=vGv<F\024N;P\377\267\274\311\323\014\275\037K?=\204\3148\275$K}<\034\357-=\375u\"\2751U?=CB\300<\035\000\007;7lU=S\006\303;\252\245\032\273\221\']=\366CA\275f\370G=\247\365*\275\222\016\243\274w\276U\275(G-<u\301\302\274\345\003\032\275\361\023!<\327\250\003=\177\032\260<\317\2117\275<MQ=\333\234\373<f|&\274_4L=\021I\316<x\0209<G\221\206\274\367\243<<\033.\366\274\313\\/\275&*V=\3107\026\275,\251\024=O\3447=\365\2325\275<\234L\275\347DP=\006sA<\341\030\241<\363\023\324\274\313\325#\275cX\210<$G\217\274\206\274<<\000?5=\032QG\275\262\023T<6|-\275zG\233<:\030\017\274\217\003\372\274g\r\013\275\302\205\327\274\252\307[\275\252\254!=f\327&\275\366\226<=j\334\005\274r\030.=\371\242\323\274KN\031\275\312\257\325<:\325\211\274\265\247<=\017\337F;\365.C;\300\374P=\t>\'=\231\341;\275\256\226\017\275\333\221\253\273\032&7=(\322\243<P\202\"\275/\376\025=\216\317 \275\207G\t<\226\215\272\274\027:\000=R:L=\002X\363<\376w.\275\221\262\013\274\317B\003\2759\031\004\273\021\357?=E9@\275\361\302\263<\274\020\020=\275\024-\274\030H\007\275 \274\023\275,*X\275\272\371\252\274\013\352\203<\341\225W\275\365\273>=\305\254\314;\206\027B\275\273\3247=\006d\353\274A\302\037=\235*\337\274s\350#<h.4=\362\274\027\274Z\324\202<\236L\206\274&\036\376<7td\274R\002p\273\252\022\246<\330\226?=,\345\303<\207\343\036=\236\027\r=\273\352\363\274\277#B\275\2667\351<\005\311\331;\177\350\022=\3641\257\274\267q,\275\272\022\027=71\375<\330\2207=R\370G\275Hl\227:\261}\r\275\330G\243\274ty/\275%\205\376\274:~\210\273\303\240\260\274\225X!\275\353\344B\275\207zB=L\177\020\274\230)\375\274\232bW\275\2140\000;f\002)\275\010\234\016\275+(/\275\332cq\274-#[=\374\3218=\031\273\216<\375\317E\274\352N\032=[Q\356<\230g\265\274\324\366\003=|\013\022\275\217\353\t\275\362Su\274\250|7\275\221\274\005\273\311\253\235;H9\204\274\365y!=\016`\016\274\226\250\"\275\'\314\344\274$\360\351<\346\202\254\274\303o\350<\256\226\340\274\302\226R\274\014\002\253\274\031\010\353\273B\271\010<:\376g<$\214\037\275\206?\031\275\374pW;\326\r\323\274\351\3757=\210}X;\303\350\004\275L\371F\274\237\024K\275\227i\025\275[ \270\274\223\303\271\274\017\2656<\352\340\017\274M\350\034\275\3630\031\275,\'\263\274\272\n\234<\023\347B=e\222\027;W\314c<\252\203\033\275\237\0256\275\023\350\223\274\375\271\317<\264O\303\273\232\3473\274\370\213A\275\373\036H\274\245\225\001\275\035\236\003\275#\"\345<\022\221\034<\211\000\206<s\215R;\013\252\364\274\327b*=\204H\337\274\210\353X\274o2\313<gF$\275\375\252\005\273^+\215\273\322\221\360;\376q\363<e\"\361\27315m\272\352\375\211\274\001p\377<\317\001S\275\006T\026=\310R\360<4\337\013\275\326{d\274-\255\023=\331\030\256<\323\026\301<h+B=\004\235V;0\371\t\275\0207\251;^\227e<\206\327\312<\311\265\370<n\333\337\274\240\214\205<\3110\251\274KM\'\275T\220\231<\207F\331<S\224S<\317\326\251</\210\022\2749\300\030<\013\332\014\274\352\002)\275\317\247>=\027u\007\275\0105\201\274\361R\023=-V\247\274\320\037\261;\355\201>\275_\026;\272leC\275\315YK\275\200\201\223<\237\345\260<\373+\010\274rJ\006\273\3364\021=\356\027\024=G!\037=\335\261)\275\301\t\240;\310`\337\274\323\316%\275]BA=C\305\211\274\231u\030=\377\361B\275\232\336F=\340\211\331;oJg\274\275>)<\211\327\026\274:>\201\274\256\021g\272\001I\\\274\277\256H=5\276\275;+>\314\2748(@=\006\336b\272Di\023\274\030\341\341<\363q\022\272=\n3\275\337\310\271<\222X)<\006\3110\275@\330\014<Ju\271\274\204\216\205\274\032HT\271\010\254\005\275_I\233\274\023^\362\274\206\322\036;6\230\023\274\342\025\366\274\307\373\022=\276\265\022\275\203\354J=\035J\376\274i\261\227\274a{\373\274 \260O=\312\254-=\003f\021\275\003\354\374<Y\005\034\275P\313\001\275\211\237,\275\210\031\017\275\352\014\261<\226\372\203\274\376\336\025=tG/\273\226RU=\256\313H\275\263\2756=\030h>=\363\201\315\273\003X\037\2752\256\356<\033$\241<\016\341)\275\221Q\\=\224<\356\273\311\232\271\274\014\365\022\275\360\000\326\274j\311\315\274\356m)<\350\005\320\274\256%\221<\025\"\n\275\021\374\r\275Psz\274\177l-=\266\r\340\2746\226!\275H/\243<\207\207H=\331\027\"\275U\311&\275\316\226[=\336\275\270\273*\3077=\222&\264:\026\375\330\273:\262\320<\020\322\354<W\377\255;\2779@=(\177=\274m\345\270<2\224\035\274?(:<\255\\\232\2742R:=v\036\376\273\235\017\335\273\226<\202<\221\270\362;\345\rM=\363\222\214\274\3153S\275\273Z\000=\321\270\010=\322&\341:\211\224;=\246\0275=\341:d<\255{Q=\303h\375<:\227\003\275p,\333;\263]%\275\273z\221<\236MT=\'\242\240\274\r\216\253\274\333Y\006\275\355\037\033;4\276\362<\030+\'\275\221\022\220<|\321\246<\025\373\360<8\274\205<\002J\032\275\265[V\275\2352-\275\301[\033=|\013P={I8=V\001P=\022w\217\274\373\363\001\275\231s8=\373\232S=n$\006\2729\234Q\275\235\003\036\274\300\321\264;na\307<c\024\'\275\353x\274;\244\260+\275\211t>\275#h\377\274\217\354\t\275\255t\036\275b\235[\275GD$=*\253\247\273\333\016Z\275&\331\233\274`\373J\271\332\376[\275x\365\363<O\334y<\207)\026\274\261\003\177\274I\3703\274I\366W\2743?\213\274m\273v\274\031\'K<|v\243\274\356\341\217<\332#\221\274\3146\216\274\314\001\261\274S\000\233<\216[\240\273\3467\370\273\025\3332=\344\335I\274\330p?<\213\226\032=F\230\017<u\n\033=~w\306<0\351\034=K\210\025=:2\036=\265\nW=\306\031\311\274\330\372\337\274\026?\376\2744f4=\320Uq:\250k)=4B\341\274`@\236<P\360\306<\317\365V\275\354\233J\275\000\227\005<Y\310\n=\367J.\274\301\332\026<\331\204\233<W)\233;\007[\213:\320\216W\275\225\n\002\275]\204\005\275ETV\275+\352\003\274(\357R\275\000IC\274D\2611=dj-<\036\203I\275\013\234,\275\036\303\274\274;\3077\274%D\002=\355\021\326<\360\312\213;\003\260\346\274L\3513=\363\274\t=c\200.\275C\354\205<&gT\274\372|\260<J\301\3679R\260r<\r\016\225<\317\360\030\275\213\232\016\275jd\301<6\350\206\274\241\"\034=Oq\004<h\031*\2754\377\t\275l\242\036=BX\'=\377\320\203<@b*<\032,\023\275\343g@=\2025\333\274\335\002\014=\300\304\362<\247\005V\2747\"|<c\274\213\274\346\"F\273\325\262o;\215JC<\016\362\224;W\032v\274\215qO\275w\233\361\2734\261\212;&\365\347\274\300\347\267\274\212\020\227<\356A\036=\326\306\014\275Y!)\274/\256e\274\024~\233\272-e\262\274S\212\234\274C\275*<D\"s;\217\254E\275\307\374\000=\243\360<\275~\226\267\274\243\212\267\274\241a\222;\005!\362\274\372\272\025\275\365s\005=\331\307V=\2405\330\2738\225.\275i2\025\273\370#X=Q\022\036\275\234\177\337\274\336\306.\2757,)=Rp]\273\014\304\315\274`[;=\240\353\231\273\362Q;=\345\344\"\275\264\223Q=\210\006\215<\'\033\006\275G\027\"\275-\360\027=U\267\025\275A>\226\272\2539\223\274\312\365U=\201\334T<m9\026=\273\240d<\252\\\020\275\224P\220\274`\364\034<w\240;\275\205\314C\273\177T%;\346\002\253<uJ\216\274\266\246\220;&\370\247\274\'\264\r=\200\2244<\273\2335=\027f\026\275\310\037\266\274\364\256]\273%\213\261<\017\337\324\274\300*\301\273\364\300\206\273\210\316\005=\030-\216<j\237M<\205\023S=\323\234 \275\177\256^<z%I\275F\346\312\273\276\002\320<\316^\203<\366\030\377\274k\350\376;gY5=\027\022:\275\212\256\"\275\206,\305\274\200\3200\274\223C(=%\341?\275\251\206\305<\026\277:\274\354\276\247\274\\\024\000<\260\233\203<K|\200\274\243dE\275\323SD\275\2239\010\273\221\361\374\274\320p,=\312\344\235<JQ\276\2738{X=\232\370p\274\312F\265\274\2634\023=N\2760\275m\223\200<+\220+=\333\245\016=\304e?=589=\357\312\337<0\312 \2754\363G=\377\276\010\275xN\242;ve1\273\252\306\354\274%\025\347\274\327$H=\002\177\334<\021+\030=\223\313\034\275I\322\366\274\204\343\310<\005\236J<\247_\257\274-\316\023=\n-\362<Y\224\341;:P:=\273\341\021=\000\000P\274\0347\016\274f\253)\275C\272\211\2743F\336<\254\211\333\274\036@\224\274G\302\313\274\023\211\r\274\307\0362\274MO(\275 \357\202\274\336\320f\274YA7\275y\001\035\274\246k<=\265LX\275f\251:;\330t+=\223Zs;\360\374G=\261\302\345\273\360\236\342<\375\306\352<\n\251\311;\034\354\350\273\211\323\201\2712\314@\274o\007]\275\257jW\275\314\206&=H~\232\274&\230O=\327\273\364<\227\3318\275\312}S\274,&\'=\257\034\365<Z\305\006\275\022\n[\275\016\336&\275\003*\345\274\344R\361\274+z\\\275bP\275\272\271\001\243:1\316m;\346e\027\275\nd \275\245\245\202\274\255vI=\233\3143\275>-\350<^\"Y=\231_\227<\213C?\275\225d\006\2754|6=\321\272\223:j\302\327\274\251\302K\275hF(;\3048\322\274\234&b\274\216\204\335\274\243\361\010=8,\034;`o[=\277 A=\222\216&\273*\306\3119\331-7\275/x9\275\337\234\303<\206\214\027=c\351\307\274X\036\231:\304?\000=\334\272\"=\250-\263\274\033\324\n\275A\010K<\342\304]\274\254\272\021=\336\364\355<;\335K\275.`\037=\350\030\210<\355\010\245\274\014^\343\274\277\261C\275\236\037<=Y\316U\275\2543\030\275\007\027\031\275eU\'=P\3018\275\271Z\306<\034/\263\274{U\253<\316\365&\2759A\325\273\203\007\336<\016:X=\326\201\322\274\213\250\001\275\027\225\370<u\027Y\275\027a\314<\333e\362\274\247\342\220\273\214\375j<\231*(\275\243/\226\274\350\234\251<\374\013\222<!\314\023<\n2\005=\021\357X\275zO\340\274\212\211\001\275Y\210\006\275\221\342\274\273\320qt<\241\351\005=TM\000\275\350\002\"\275Ro\035<\231\250\361;\360\277\\<G\010\034\274`-\314\274\252k\327\274\220Y\373\274z\353\250\271\213\010_<\303\243P=\'\326:\273\334n\016\275\263V%\275\335\177\267;[4\022<|\346x<9-\006=\032\305\250\274q\2262=\271\304\371<+\3254=Lx\n=\341\003\002<\234\026\025=0w\327\274(Q^<\221*\023=\245\236\203\273\375\005\324<\370\310\300<\024\361z\272\330<X<\220\227K=\270#P=\247i\r=\302\262\362\274\036\257\244<LV\366<\341\260\026;r\007\n=\372\272D\275\272\201\235<\354Q\000\274\323\265}\273\327\"H\275\350\207V\274\217\302I\275\rj!\275J\355\375<.\226\256\274979\274[\003\253;\212\357\333\274p\243\362<\246\022\227\274\263_\327<`7J=\021a\272;\223*6\275Q|\315<\211\316\215\274*\226\216\274\312\351\372;\034E\025\275\037\227\003\274\310\337\230\2740\305\343<\007\001S\275zV\026=xU\027\275\376\376\330\274K6\227<\326\225X=\251\256)\275\261\252\261\274_\033\247\274C\031\030<\304@R\275Z\353x\274<\203\253<~\215\330\274V\310\005\275\027lD;<\241-=\360\377\326\2742\035\363<\033\243o<\216\354O\275u\323\303<\344\346\325\274\204&\267\273\002\2177\274d*Y\275\347\3604\274\222\307B=[XC=\247k>\274\352{\340<l\0162<\2714\346\274\220C\377<\207\370G\275\213\235\213<\316(\311\274r:\036\2755\3658\275n12=\202d\017\274\037\270h\274\367\203\2538\277\311@=\264\313\213<T\375}<\206\326L\275\314\344J<3-\346;#\345\t\2751\215\326<{\344\216: `t\274\320X\330;O\344\343<\005\3301\275\002\344\274<\355\235q\274\257\3564=\036\376@\275\237V\225<M\240\334<\324\241\270;\304j\203;\000\322S\274\304\225{\274\371n*=9j\037=\375F0=\270\267\004\274\2749\346\273\240\2376\275\231\003]\2759\352Z\275Nm\227;tB]\275\341\322}\274-\220\245\274\327\276K\275\347\0340\275\203\207*\275)\251d<\026\224y<3\344\347<\177B\323<\211\217\027\275\2440\320\274\201\322#=\215v\202\274\002Y\3129J\320\336\274\020\014)=\n\321:=\261f\003\273\347\367.=\0029\211\274\233\350e\274\252\256/\275lpj<\017\336\203\274s_\317\273Ju\027=\261\276\304\274\3271<=\2068W\273\2220\002\274\315s%=\001\327\010=\024\"(\275\226lJ=\231\277\010;P\330\275<~t\273<\272\333;<\316\342U\275#\\J=\257?J\275\371\235\302<Zl-=P\202\336:m\265\004=\267\314\262<\361\366(\275-yB\275I\247\022\275f=]\275\357\002\371\274\334\3452\274\327^!\274[eE\273\314\364\032\275T\322N=K$4\275\2130\t;\006\271F=9\230>:\321\2732\275N1s\273\206J6\275\243|\004=\010\342J<$5T\275\316,B\274|w\r=\204= \275\271\262\261<\206?D=6t\343<b\205\325\273N\203\310\274M\322\272<\226t\313<P\"\320<\320/!=\346\250F\275\316\223e<\366\030(\271^B\000\273\215\235.=o\362\035<\'a\266\274%\227\374<\026k\035\275\337\001E=|&\355;\333x\"=\302c\020\274\200\327+\2753\361\206<\031JV\275\032W\030=\305\3245\275y\314<;\235\267H\275\206\351)=\374\341\\;\314\024J=\336R*=\314&\272<}q,\275\216\243\367<\262\000T\275\024O\361<\013\240\354\274\277\311\013=\256}4;\363:\304;\233\273\023<$\016\336\273)\370\272\274\"(\200;\035x\232<oY\372\273!5\021=;\354\222;Q5G\275=]\362<\331\261\'\275XP\207\273\367\235\211\274\213fJ=\255\260\352\274\325\005\365\274f\237f\273\270\202b\273\203\350\010\275\260H\244<S\243\t\275/W\005=!0.\275\223NA\275\252\236\003\275n\330\035<\351ob\274\026\354Q<\274\270g;\024\202B\275\003\335\260<L\177\247\273a\352%\275\344\371\016=\355\305\013=\346k\031<\366\004\302\274c\217o\274.\002G\275p\306\343<\364\337`\2745D\206\274\253\257\360<\013\207\021=|f\020=J\021\277<dj\217\274Y\226\367;Qb\207<Do\235<\262\3205\275\nS/\275-\335*\275\014\235\310\273#\225\004\275\r\361/\275\256Y\274\272\027\325\244<\0243\371\274\216\361U\274\005\221A<\022\215\245\272.<B=^\324\235<\220T\226<\203\206\037\275\021\273\333\274\002&\217<40R\275\017-\357\2744\221&\275\002\213\334\274\325\315\303<w\367\246\274\211\251\001\275}\210&=\253\022\370<\253\235\005\275\325\303E\275\032A*=$\021!=\'\316\023=9\345Q\275}w\336<nd\364<_u7\275\322I\202\274\367\330\223<\030\230M\274x\3204\2732\371\007\275Y\353:\274\337_0<\370}C\275\010 \021:\t\260\020\275\360\2663=[\253\303<\354->\275\356\036F\2750\'B=xj\034\275\342\212N<R&\214<?\001W\275\025\312+=\254\246!\275v!?\275\327\232\027\274G\367V\275\034\177A\274\3406\264;\205C]\275\266(\217\274X\334T:\207\336W\275\367eV=Le6=\347a4=\033\331==U\326u;\031\3369=\217\244\252\274\271\366\014=p\020\230<\30020<\336.K\275\211\365P=\300\023\322\273J\016p<4\227\007\274_\024\014\274\261:_<\343F4\275\035\327a<b\361\'=E\204x\2734\023\016;\364t\243\274\336\233!<\013\240\005\273-\272\307\274[r\000\275\216\277\302<M*H=\252[[<]\033\322\274V$\013=\276*\343\274-@@;II\016=\304\357O=\3153\254\274\\\023W\275\n\222(=i\217+\273*:\"\275y\002\317:\276c>\272\037\004,;\363\204\t\274&\302\340;\000\303>\275\265(g<g;\241<\335V\027<\250n\014\275@E\342\274\010\267\355<\273\252-\275I\tJ\274\300\226\022\275\310m\276<\017\216\265<\304\247:\275\221\233\000\272<\360\212<0\375\000\275^yr<\3369\217\273\337*@;\001\224U=\2579\013=_\316\313\274k\340O=m.6;\022\252\036=S\t1=l\216R=\254b\216<s\027\\\274\254\333$\274\210\253\367\272gt\236<\005\037\276\2743\272\027=71\302<\001\357\232\273~\313\302<\372\273+<\320\215Y=\277\366\020\275\324\203\251<o\362\035=\224\366\007\274#\325\031:\311\244\320;\341?\322;\355]\310<\345\361\220\271_)&=\362\2517\275U;\255\274\005\313\n<B\\M=\032\357*=\273\2430\275\314M\244;]\002\366\274:\035D\275\227\376\254<\240\216\033=\372$\231\274\271\305\305;\002\024W=u\222\266\274\2266\257<\375\2108=z4\207<\036\037\350\274\037\002\234<\341\204\215<\305\027;\273NNZ=\203=D=\237R\362\274)o5\275\320\035r\274u\020B\275\344\365\003;\242\326o\273r\371!=!=\037\275V\227\306:|\013]=\326\030\\=C\271l\272{\013:\275]\353o\274_\264=\274\362\205\377\274?\311\271;\014>\371<\221\343)=\267y\177\273(\325\001=\353\220\310\2745CX=;f\264\274[q\372\274\315MQ\275\325\216E=\373\013\277\274Cs[=\375\223I=n\t6\275|\341\251<b\302\033=\215\353\247\274\326\223L\274\246\311\032\275\230\006\376\273\007\257\001\275\364\307\243<X\256\014=\320\375\002\275-\371;\275\032\026\227\274d\261\004\275u\0225=C\242\027\2733A\211;\016\332U=\017\002\250\273C&I\274\315p\317\272\225J\224\274Zu\376<A\312$\275\360e\037=[\202\254;p*\022\275\220\251\024\275\275\270\263\274R\024\370<D\250\227<org\274\234\350P<\373W\037<\354\225\340;\014\221\362\274\242Z\316\271\251:H=\324\341\250\274\320X9\275\340\327\363\274\377\"\033=\231\200\010=\372\323\360\274\276M;=\350]\323<V\0035=\202l\025=\266\261\037\2758\216\017\275r\005\016\275\014\003\036=\370\233\n\275=\261\014<\0229\r\274:\264A=\307\365,=\372\234\331\274\270\363\366\274\200\231#;h\232\232\274\010\360\236<p\314\222<G\203\316<os:\275l\341\212<\357\005\026\275\320\303-=\231\313\317\273b\033J=\373*~<\031/\001<\310y)=\260\2012=VQ\220\2747(?=U\371\006=eF\025=\275%C\275\324Qq:\003\330\275\273\005\365M=~\303\342\274\307\261D\272l\346\220\274t+\364\274\304\255\177\274\224\270B=\207\346\374<1\320*\275c\231\331<\t?\036=\177\201Z\275MC#\275\257\310,\275c\354.\275\035\236\323\274\230\217\016=\260T#= \214\306<\314\365\032=\206\014I\275\001\317\243<n~8<\004\250\357\272\377\014\274\274`\000\315<\223P\230\274\\\304\t\274\rp\307<\2721p<\263\266\316\273\035md\273bH!\275\271`F\275U\377\007\275\366u\267<\303\311\216<u\212A\275\355\207\245\274\302\272@\273\313\255\267\274db\221\274?Q\225\274$x\360\273\257\334G=\351\300\253<\212\340\r\275\256\2475=.\245k\273\021F\344;\321|\016\274)\276\330\274\354\267X=\311y\356\274{\014\327<\300\221\000=2\364\323<\354\261D<O4]=+\340)\275_\034\355\274*\311\200\274\304mO<\270)\344<\000\266$\274 \326\3679*\205:<\200\"\300<Y\274.=\202\373\343\274dEF\275O\'*=&\213Q\275q\334\311<\331@L\2746\351D\275\'\202[\275\004\242\340;Nc\236\274\240\226\364<\247\323\240<Z\027\365\274\344\325P\275\001\246M\275e\010n<\207-2=\252m\357<\\\221Q=-\316P\275ZX\321<\332\007\377\273e\326U\275\010QS\275&n\336;]\021\202<4\2272<\000\373\353\274\300y\313<\275I\371\274;\235\214<B\315X=\376\377\376<\242\211\t=\013\334\246\274\034N\327<\274\220)\275\"\277\256\273f\234\024=\350\363\023\275.\304\034<\363\017o;\352\331\270<\303\223O=\357\032\214<>6\270\270\201\225\374\2740\3225\275t\342\001:\231\\\217\274#\332\260<o{\217<h\262z<\323i\336\274\3017\206\274\314\212>\275|\247\r=\204O\230<\314\351\026\274F\n\246\272\242\225*\274Yj\261<=$n:\213\331A<\222\223*=\224N\220\274o\236\014<\363\\\022\274s\343\311\274\330\020@=N.\252\273a\r\"=\212\247I\274W=q\274?\037\241\273\215\2315=\266!:=\313O]=\345T\025\274C\221\030=\231\206\343<\177\237\034=a\0216\273\350\260\272<\334Cy<\202\304\230\274\304\346\251\273\355\007L\275%B\247<\376\230\266<wE2\275n{\254\274\002\365$=`\301/=\216J\264;\356\320\301<\314\321\232;`\273\031=&\030U=\231V\332<\263\312\t\275I\3777=h-\234<\224\0025\275\237\247P\275\356\253\257<\336M\315\274+o\036\275\221\314\257<\023\200H<\370@\033:\006\227==\264A\306\272D\321\233\274lm\271\273o\310\347;\314\306/\273\257\3759=\227\247\036\275\265\224\307\274\245\360@\275Kv0=\352\210x\274\r\365\037\274\035\326\'<\327\342&=G\215\023<\274\262\'=\237\026R<?<\336:\204\240\363\274\017Kd:4Z\221<\267\017S\275\232\200E\275\203\t\361\273>\331U<\205\331\332\273^O\321<\211\330+=\315\270\205\272\355\305\006\275\331IT=q\223A=\325\361\324<G\027\254\274\310\336\010\275Z\304\001<\366\315\221\274\244\"\373;\307q\240\273\352ym\274\262\221\245;\305vS=8@C\275\251^@\275\302\327+\274K\264$<EJ\274;\020\256*\275\342\337M=\261H\246\274\331x7\274;\263\362\274O\023\277<\331\203E\275\214\243+\275\023\310.\275?<O\274\326\367\2718M\367\033=\002\347*=\244F\214\274\317\227 \275\237\035\354< y\226<\014\356|\274S\322\013\275\235\205\204<i\237\021=\316$\371\274\205/\036<\004\325\\<X\336\250;\035K\004\275y*\003\275\255Y\n<\311\000\025;E\276\027<\244=\006\275@}R<\0225%=\373#H=Z\247$=\244[<=Y\276\202;\244+%<\357\263&<\234\230\202<\324\250W\275\234\304\244\274\216\035f\274\"S\231;\243\201F=\024\227\032=\377\242==\001\364\276:\236`Q={\355M\274v\341\256:\247\023L\275g\204\000\275,\337t\274\376\354 =+CG=Ij\023=M: \275\315[.\275\374+\022\274\253g/\275iu3=[\313\314<\210U>=x>\\\275\325\200\337\274\007D]=\032\353\244:\255\376\034=\260\242\204\274\275l\215;ND\204\274\371\347.=\323#\010\275\374*\032\273\022\246\373<\025\343\251<W\366\004=\204\333G;\n3W\275\'\016-\275/\r\244<\254B\007=\302\327\355:\"{\242<\022\365\264\274D\001\022\274\024\263\244<\347\341I=\022\264\370\274\000\331,=\312\215\r\275\034\376\037\275Q\266W\274\320Z\343<0S\211;Z%6\275g\214\016<\323\267(\275\213\274:=\225\373y\274\021y,\274h\276\014=\311^\227\274TG\007=\373Z\331\274]\010%=KI\234\2740\213\r=\271\315\335<k5_\272!\324W<\241\n\032\275\2679\031=\207M\250\274y4W=\037\270\r=\247\211\026=\277\n\037;\250\n\013\275~\035\302;\371\207\374<\254j\352\274\200\312P\275\357r:=\032\"\344<\333~\317\273I\312m\273\321C<=\'\235\365<\304n!=\262\224\330\273\302TP\273\003\321\201<\245U\333<\276\r\231\274\352\330\227<\317\000Q=\n\224\357<\nA\211\271[3\362\274\004\220\255\273\260\341\242\273:\006\350\274\261\230Z=M\262\357\273\326\027\023=F\235\324<!\"8\274\332\315U\275\363l\245<\237\2367=\227\215\004=\t\0336=\262\230\241\2727\036\211<\203Q\203<\036L\010=\354\227\246;,\\\243\274\206\306N\274\372_{\274\252\220\234\274R\036\025=aEk<JY\032=-x\336\273a\356\033\2755^\320\274w\252;\274z\364+=`\013\017=\010\271\237\274\206|\n9\303)_\274?\223\376<h:C=\333G\003\275\356\336\023=\331\372C=\032j\330<\2619\037=\326\224\331\274\325\316\221;\233\333\274:\313\242\003=)\225v<\021\245\362\274y\207\025\275\3175\014\275~\272\037=\262\310R=\243\326S\272}\374/=\374\027\350\274\365\306+=\023\345\311\274\305\343q\274i\0070=\014<\210\274eP\005\274\023\353\243\274\306\200\203;{\351\005=\276\364N\275k\327?\275\323H,=\254!#\275\005d#\273\330\023\034=D\260\210<bv\024\274Sp\\\275\241\304\236:Y\330O=\264\316\275<\300<Q\275\240\266}<D\235\342\274[Z\000=\234\237D\274\206\274W=\026\201\332\274\240\236\000\275\303\027v\274\305\001\021<\254\016%\274n\300\274;\241\302\032\274\354\315O\274;KT=\376\325X=\024\341F=\341\013\031\275@\276\272<\355\322\217\274O\300Y\275\266\207\250:\006\2019<Y\3510\275<\305+<J\205<\275\2264\003<Z\264)=-\301\270<\322\0034\275\316\361\364\274\256-\366<J\212\227<$u\373\274\033\253\211\274?\312\254<\363\340\222<\2224\326\272\220\353\375\274\260<\022\275\274\263(\275\345i\"=\002y+=\326Z\311<L\354\235\274\347\r\213\2725\013\244<\324cK\273\032\364-\275\210q?\275-\2021\275\333n\263\274E3\016\275\362_\230<T\013\214\272\352q\343\274R\023\372;\006\270\327\2740J\016\274*~\364\274\304$\225<\207\004\323<\347\372U\275\201\325\036\275\347\2568=\304\2254\274\301\342\010\274\206\266\t<\205\314\375<\t\020\362;\322\317S\274\204\212\203\274!\240E=e\272M=\271 \252;\321\336\t\273\262\265Y\275\264\027&\275i\224:\274\307\331\371\274\246\020\227<a\277}<&p\251\273K\310\276;d\2767\275W\220\276\274\253\366\316<`\213x<*\236Y\273Ro\277\274\005\220P=o\245T={\257\211\274\344\364\005\275\200\303\020=]\375\030=\223?E=P\354\025\275=r<\275\3661<\275Hh_\273\204\326e<\0171;;\374\010\030\275z\306\375<\345\'`\274\3650\265\274H\3637=8\212\026\275\315y\340<\016\363\032\275$\306\230\274S3|;\220\307O\275\253NA\275V\260\266<\010:\333<\033\221\030=`\244\325;Ny*<\277\372\371;\247\232\t\275[V\003\275\201_^\274\355\323\215<^\364!\275\350\001\277\272d\313\004<yz#=\013\376\343;\204\363\000\274#\235&\275\323s\035=\234\301\233\274\304\324\312<%\\1\275\353hi<\336X\376\273qC\305<V\371\"=D\\2\275\246y@;]\027@\275\332^\\=\214\234\032\275\007\356\312\274\251\274\030=!&\257<\002\347\274<\363)\246<\311\375P=\177{!=\361*B\275\230\253\241<17\335<c\035(=&+&;ch6\275\203\337\004=9\3020\275[\240J<%\317\366<\373,\n=\321x\377<\300\360\206<\312\211*=\241_\351<\025\272\202\274\214\371I\275&\247\374\274\024IP\275\324:\227<\317/\334<\257P%\275\'\\Q=H\214@=\315S\2519m\245\000=\245#u\274\301U\245\274\215W8=\212\314\221\274k\261\267\274\016\2171\275\232r\000<\214\t6\275\333e%<Y\343\275<\371Y\363\272\250o\000=\240\251\373<*\254O<\333[%\275\272\3119\275h\010\022<\365#\373<i\212\014\275(\350\303;\312\021%=\204l\246<\322\311A\275\3079\r=\322\036@<m\352&=\315U\213<wl8<\347\021D\274\0013\305<\207\'1=E\267\014\275\272\002;\275t\006\"\275&\024\351\272\255\242F<\0103V=]\t\326:\001\327\023\275y\2219\275i\r\035\274E\276&\275\316\204;;`\205F\275\252\315\364<\264\265\022\275\231=9\275}\216\021\275\260\017\034=\354\274\025\275K\375\274:g\314H\275\3569\251\274\355Y]=T\010\232<{\231#;\336\007\242<\317\337\311<\311\217\210<\272\332\001=n,\006\273\225A\372<\023\000;<\277G3=\377\250\303\274Sa\334<\254\330\303\274Z#e<\201\202a\274\0041!<L\321\027\272\337\271Z\275\343\374Q\2752\270\"\275\361\325\242<\334\235\236<=|G=6\276\331;6\3021=\315-\026=\302\213\233<i\032\010\274\334O\225<\222\2516\275\030<\032\275=w\003=\265\305:=g\001\010\2759\313T\275\202\204i<\014v;<S6\"\275T\333B=\276\373\001=\247kM\274\224p\234<Q\343A=\037\223\305\274v\363T=\2405I\275\300#\274\273\324\261\365\274\355\305\222<\370\237T\275W%2\2752\365&\275\226\266p<\265<\022=xi\331<\004 \362\274\260\244%=^\350Q\275\"W*\275\026\202\327;\210\016\336\274\323w\014=\332L\373\274\213\n\260\274\317\355Y=\360[I;\2376\373\274\333\234\234\274\260%P\275\210K\337\273\265$F\2758KO\275\324\033U\275\022X?\275\276\035V=\345\257M\274\213:\373\274\247\367\025\275\022\366N\273\275D\007=\364u\347<M\326@=Q-\221<\026;5<\177\200\256<%\\\200\274\010\323N=\275\221\332<7\234$\275\354\345B=\336\260\036=\n\245\236:\225\002k<\225\013\226<jI\333\271I\203\013\273\217\030\027=\254\023\251\2741\363w<\240\326\365\274\3072F\275\3614)<\220S/=\204\341\013=\224\3473=\025\024\361<8S\376\274\332\363\255\274\345\315\037<\317\016\344\274\253\351\362<\255\205\016\275\223\373==\266o4=\325CC\275\006P\344;\222\227\321\274g\207<\275:1\237<\375\332\366<\270\216\253;v\004\302<\265\362M\275\373\333\007\274\206d8\275{\n\367\274%Q\346<.AC=\303L\344\274\265x\250;\337\220\217\274\'oC=\352|\232\274/\332>\275\302I\r\273\272x\034=M\177\312<\006\276J=p\0227\273\267}\351<\341\026\370<\210\202\221<\006\234\033\275Z\275C\275\201f\n=\353\227>=\213(W\275\347\262\003\274-U\257;\355\335\347<\001?\024=\246!\370\274S\347!\275\307\003y\274\320|\3368\334Oe<\207\336-=m\243k\274\216\355\233\273w\323];|\254\022\275\372\377-\275\270O\214\273~\345\364<\336\333d\274\357\376\031=\361\374Q=\242\373\347<+\005*=\272n6=~\324\031=\370\270\370\2747\304p<\241\226U\275;[!\274\313\316\240\274\374X\315\273\322X\277<\232>\361\2749p\020\275\0144J;\342GT\275\273\323\033=\310\351R\275y\r+=\330\357\n\275(\016\275;\244X?\275\305\265\317<*\020\272;\374\335\313;\333\026\364\274\\\261\005\274\313\256\024=\366_\n=Bh\204<\310\3112=\237\000\035\275\036\217\263;\027W\216;M\004\306\274\370\221\217<\222\371G\274\347`\'=\223\233\031<*h\215\273\256\306\330<\360F\237\274\345\004V\274\275\"{<B\355\360<\361\273\221<j`\342<A\253S=\306p\337<\374[)\275\225\010E\275a\227\316\274E\360\003\275\210\374\226<\222T\250\274\303y\354;\306+\013<\374\235\347\274(T\000\275J\2519\275\355\326Y<\227J\311<\245TU=\353!\277<\345K\246;\314xt<<\311M=bs\237\273n\330N\2758\037\036<\353\023\027\275\n\036V\275o\321\016=\014\322\000=\312O%\275\207\000\260\274Y\017\034=Hp1=|d\370\274\007\304B=\327T\023\275i\251\354\273\267\"?<b\200:\272\2663B=`\026\t=\353Z@\274v\301\303\272\313\361(\275\010\316\000\274\364\000\346;\260\r\326<\026\024\220\273\267\245\002=\231J@\274\334|!=XB\014\275\373e\034<\371@K=\277\341\237\271UN1=\234F\220\273\275\242D\273\006<\266;@i<=\240\332I=X\371\020\275Yl\220\273\223\210\020=\375\223\264<id\002\275\2751\\<\225X8\275\374\002><#L\013\275a2\335\274\370\217\311\274u\037\347<(N\365<\025\256G\274\033xZ=\032c}\274\231\234\250<\351-;\274\370\223\365<\333\000\002\275]\014+\274e\267\343<\333\271\253<\336V@=\257U\215<=\224G\275-\226F=\353\034V=i\362\257\274}B\224;0\020\224<\013\306K\274\005)\n\2744\250 =\235A\n<\365C\316<<\265\005=\031g\312\274\006R\000=\225\215\254<\261\233V\275]\354[\275\025\010\n<\301\224\024\275.\0261;!\264!=\221`\315\274\207\375X\275\265[\204\273\276\007U\275\005G\242<\3332(\275\023\003\007\2752\237 \275\213h\177<dN\340<\245\212\277<\026\276X=+\r<\274\245\305\254;.\034M=O\272\031<\315\3400\275\217\350\333\274\234\021\030\275\352\326\376:\201/\177;\2348F\275,\026?\275\326W\360\274\243\320P\274\314\260\372<:[\000=a\3708=\014M\310\274\017\200\277<\332\204\234<\257\0209\275%\360==\256m\250<\253\372\211\271\311\026S\274\362\3263=uNQ<1\234\331<\352Y\330\274P\314T\274\262]\026\274\315A\346;E\306\002={\315\275<\026L\265<!\341\007=\350\010,\275\351b\340<\341\254\307\274\035\307\\\275\210A\271\273\214?\005=\210\262\213\272\302\264\332<\\\236\216\274S.\206\273\2276*\275\214|\227\273q\273\203\274\331Z-=\263#\206\274\245\360A\274!\262\264\274I\3515=\367+\255<Wz\255\274n\251\307\2745\201\305\2748\266\007\275~V\n<\234)#=\274\354\226<\260\352\332<k\225,\274\254\231k<\257\240\364<]F \275u\215\215<\217\365%=7 \364\271a\362D\274\326\217\301;\037\0047\274\313\203;\274\312\230\034=\'\222/\275 X\003\275\306\213\016<\241\004\254\274\307RV=\373\333\276:e\3728\275\362\202\032\275\222)\n=p\025\337<1\007@=\255\316O=\026\024\203\274\307\327\300<9W1=\217\301U=j<\200<M\235\220\274+\343\237<\233\007\013\275\335\243\265<B(\350;q\210K=1\355#\275\360\257\004\271\363\317,=\353\311\013\275\2637\230\274\365\r\301\274A\364\263<\3477\224\274M\204\240<s\016\257<\265x\032\274\225\351\206\274a1\217<\360\227+=\266\370\034<\312\254\246\274\341\272\366\274<\007\232;\211lG\274\351BD\274f\320\034\274C\344\256;\353\362\320;\241\253\324\274t\365G=\254\002\277<\021\0210\275\337?\351:>.\331<R\350G=6@\014\274\334\277\003=*$\261<\213}\244<\264\322\352<\367\375\013\274\200I0<\356\177\237\274\204\373o\273-2\037=\212\354\333<\242\r\377\274jl8\274\366G)=\027\276\354\273_\332\252\274\220\"\361\274\346\036(\275\022Y7\275\363\267\017\274\327\316\2528JO\243<\352\344H\275\263\361<\275\213\n\345\274\252\306L\275\273\004\277<Y+V\275\023\226\261\274`\336.;\352]\347<\022\220\261<\363G\t\275\374x\262<F\0070\273kx\341;W0\024=\215~4=\n\275\304<\2542.=\005|\222<`:\\\275\215\305\214<\377\213@\275\023M\007=\354Uo\274\316\030T\275\304l[\275*\2579\275B|\017\275\217\360S=\025\246\206<\020\312\274\271C\360\216:\035\321-=e\362\215\273\n\232\007=\270H\231\274\247N\177;\276\364F=vj/=Z<,\275c\014k;H\013\024;|\252\336<\210p>\275.\354o<\316\361\246\2726\300\353<p\255\013\274\0370\304\274\367\273l\274\351t3\275C\004\016;-A\370\273\216\2431=\322\362\214;\007w\030<5c^<OH\n\274\370\257o\274\032;.\275\221\364/=\311\211\200<\325\026\020=)\"\"\275D\377\354;p\277\023<B\346\324\274\2017:\275\310 X<1OM<\010I\r=(o\017\275&3\324<\302\r\364<\232\347:\275\317\216J\275G$\005;\273v5\275S\302H=}=\206\274\224\370\306\2733\241Y=7l9:\207O\266\273\002\026\326\274\001\013\201<\271\254\246;/9\017=\211\324\000\275\221\272\341\273\326B\230\274\305\t+<l\264Y=\217Q\210<YH\014\275l\345\235\274W\014\030\275\207Z/;\010\021?\273\266\324W<e\'\277\274\244\2446<~pi<\021\362\277<\331\037P\275,\255G\275\037\214\020\275\003\342\211<\304\014\353\274\024\355\032=\225\246\221\273\366,H\275\335\214\t<\344\371\004=\032+?\275\333\356\003\275\363\274R=\337\032\335\274X\'\336:\037\344\257\274\215cu\274\034\022\006\275\364\263\037=)\202\323\273\220\025#=U:,=Wo\335<\002\312\014\275\3107P\274\360\371\364<\234\252#\274\323m0\274\335\250Y\275\265\275D<\311\3249<\242\331\363<0_7\2751\237\264\274\274\254 <>\265\010<R_\n=\266\215\221<\363(\273\274){\362\273\014\320*=8M\035=\216\301\013;\005\221\230\273\213C\242<\017\273.=\374\315\252:\300qe\272\357\277{<N\247%\275\271\263 =n\021K\275\014\343/<\231\353 <Ww+=\227\310q;\223\232q<\242\222\361<\372\212\201<\005\324>\275x\223\"\275\202\342 =H#\232\274\026\316\350<w\240\235<\256\353%\274\202\\M=\205$\"=n\204\024<gmV\275\0341N\275\0138Z\275\004Y*\2758{#\275S\275\\=\014|E;\271\276\215<\241\305\301<\202`\025\275H\335\346<\331e\302<\rn\023<\001\334\203<\362\033Q=\237\r\313<\030<1\275\0306,=\2267E\275}o\330<\016\200M<\3042*\274,^\203;\037\016=<Y\200\\\275)$\007=\257$%\275.\375-\274H\0214=dq\'\275\243l\327\274*\254T<c\325#\274w\262N=\352{\010=\340\030]\275\002R\205\274\326\204\377\274\351\000n<\244\342!=\031p0=\345/\024\272-\261\251\274\327g\201<\271\237\005\275x\275\001; |\222\274\224\032_<\237iy\274v(8=!\222l;\213\235\025<\002C\025\275c\037\312\274[\317\377\274/\247[;4 \013=\2234\207\274\336t\242;\021\2146\275\025\362\355\272{\352\202\274\200\246T<\235H\254;\033y.=\322\244\\\2759\244X<\016d_\273E\200\377\274\277\3064\275Rc\025=\366[4\275\235\032U\275>=%\275!F\274\274]\236\353\274\020\206\224\2737\024J<\021\233\305<-\232/=\034\376\247\274@\026\337\273\253\317\353\274\3061s\273m\026\313\272\n_3\275\017\364A\275/\021:<\227\001\013=\261\227\215<\354b6\274sp\344<\024\326\007\275I=\002\2752\351\365\274\323\n\226\274\3550z\274\034\302F=\3368\276\274\240\"\350<J\177<=`\260*=\246\271\237<\351\341\235\274k\025\234<1B\305\273,.)=\315/\r\275\241DR=\230\037\261<\270\000Y=P\302;=\'I\001=\274\307\024=\0039\304\273y\242\006=Cu)\275\200\370X=^\316\032\275\227\323P<\345\206\022\275\":\032=-\314\200\274H;\324\274Y\322w\274\"\024\337\272*\006\371\273k\372\003\274~V\004\274\025/\001=\033ZX=\232\355.\275\024[\373<\314\225!;n\260`\274\377M%\275\353\254T=s\2751\274\314\001\265\274ZcH\275\201\263\360;V\013\245\274\311\025\003=\317\004J\275\26138\275nA\377<\266\352\276<f\303L\271\"\324@\275;\377\305<\004\024\036=\253\251&=\007\016\234\274\031C\002=\321\273\010<\023\314\010=mZ;=\222T<=\377\334#<\353h$<e\301\343<A\327\021=\252] =O\217\243\274\007xD=[\035U\274\360\0262\275\027\360\016\275e\344\n\273\333q\244\274\211B\337<\002l\273\273S\347\235\274\345g\333\273\223\377\216<<$\216:s2\021=\013w\377<P\245.=\223\225X=\324\261 =d\235*;\3115\245<\324<\340<\302Vc\274\321\237\321\273\017\371\203<\216h\022\275\372\353O\273\366\302\265\274\260p\347\272\362\343\312\274,b3=0\327\014=\203\360c\274\367r\350\2747\344\246\274PX\226\274PqU=\224\342\307<\3068%=fX\225<\252\364A\272\017\3211\275\021g/=\230\\\3328\002\316\277\273\303\271$=9\313\004\274@\\\030=\327\327\373<\237\275H\2759\2735\275\233\310\325\273\214\255\374\274\343q\374\274O\231\260<\311\203\274<\374\266?\2757\313\"=\211\3166\275%H[=A&\372<\345Q\004<\354\306\250;\345et<\026lr<\323R\241:/b\037<\304\365\007=\014\242\016=\242O\265\274\327\342\016=\371\320\020=\204?a<\233\035+<gf6=\372\215.\274{\'Z=\035\245\326\274,\020\013\274;L\005=\353\351\000\275\336\301\025<\235\244\017\274g\322J=\221\266\357\273\033.\367:\232\246Q=\357Z\206;)\026\366\273\310\313\212<C\316\037=.k\217<Y\261\005=\332g\033=\334\037\006<\257y\352\274\370\324D\275\266\375\261\274\003E\252;<)\020\275\236.;<G\002\337<MZC<m\016I=\"J\204<\341\027\256<^\362@\275\313\260B\274HvX\275K\344\026\275P\222\004\275&\246U\274B\343H\275c\350\303\274\034E\327<\300\342\221\274\223U\340<K\3316=_\3109=\336\355C\275+\003Z;\261\212L\272\335\206\337<\350\235\202;\255x+\275y\303\264<\"4P=\233\251\307<\222\202I=\320rP\275\325\244\350<;\002.<\r\265b\274\357&H=\375\273N\275\205\221\331<\240\213\301\274\261\247\035=\334\\>=\t\014\211\274\375\3666\275\032\206#=\237X\'\275\217R\217\274\200\'*<\356\315J=L\247\007\275\220\006*\275\262K\025\275\255h\252\274\321\013\373<\205\264=\274\275z\232\274`\244\367\274I4/=(6\335\274\363\r\232<\2163[\275\374\003\320\273\343\367\203<y\033\305<\325\276\036\275d\217\250;r?F=\371\004\316\273.\310\340\274\321@\255</E\n\275\213\220S\274\007\251\323<nj\345<4@\177<E\266@=\256\036\016\275\364\271G\275l\234D\275\234\372\'=\2531\"=\225yY\273\354\220\205<\243\217\207<>\020\023\2743\034\225\274sI\016\275\223w\365<%\215D\275\313/\005=\241\020\221\274z\333E\272A(\327<\252\222\242;\210-\2549\013\303+\275n\324\317\274\227\236\006\275\2135\017=(\"\332\274V\215W=\007\353\362\274\221\022\237\2733ME\275\222\024\210<5\236\326\2749B\236\274\315 \222\274(\277\304<\371\202\315;>\003+\273\014c\"=?\275\001\275\317U\375<\010O\234<O\r\321\2744\244\006=\276\263\301<@\337\212<7\337A\275mE\246<\020\000A=\262\366!<H\031\327\273D\273\"<<\277U\274\347\t$9\316\364#=\375\262L==\212,=Q:D\275\205\202\255<C3\006\275\304z\r\274$k\204\274[\344\321<Q\315&=\314\034\344\274#\301>\275Ck\r=O\2534<\214\304$=9\\\034<\214\333\340\2729d|\274y:\255\274z\227(\275\251\354\035=qh\023\274\224\342\'\275}\022-\275n\035N=\213&\303\272\220\274y<\315\215;\275\316\357S\2754\357\021\275\236\016\202\274z\177\370\274\354\362\237<\3165=\275\005\020\217\274\370\377c<\3156\372:8E\211<\345!=\275\306\272\234<\006\345\310\274\337~\247\274\247\221R=c\211\221\274\265\215;=(S\302\274\377\200\033=w\023\347\273\3177,:B=Z\2758l \275\'F6\275\n\306t\274\313X\023\275\256\236K\275\006\372\010\275\342\261\267\274\306\005\r\275\263dc\273\330~7=m\003\005=3@O=;\310M=r\3353=\243\332Q\275\273\2673\275y\020=\275\305\311\311:\212t,\275\371\364\271\274Z=\277;\312\370\033\275(H_<\375\227\014\275\351LR=`\352\227<\373\317\2678H\244\376<h\312/=\226\0057=Z\326S\275\330c\352<\336\330\336;\250N\263\274\361(A=nv\222\274\0142\304\274iT\366<\372\037O\273)\257\244<3\225\351\273\331\346D;m\023\322<\tSC\275\200^Q\275\242(?\275\274W\337<\332/:\274\276e\264<\030\274M<\177\033\004=\036\020&=\004\247\372<\271\3159\275D;\026\275R~\242:\227B[=\377\217\032;-mH\275\035\3326\275\256\243\207\274~5\022=/\376\202<\332\316Y=h\2123\273\035\352\001=\344\362Z=)\027\376\272R\264\274\271\337\363J=\235Y\334;`\001(=]gD\275\202\305\311<\007/>\274\227\302\035\275\324\216\350\273]\331+=\244\2228\275`p\033\274\302\002\363\274Q\320\215<*I\r\275\327\224\006=\320\203\024=<n\026\275\363\014\237\274\013K\032=\025\002@\275\35028=\001\364T=\232\313\201\274)\201U\275\32323\275\212\334\260<\374\323@:LU\225<\037\365|<\334\tY\275p\216)\275[\007\226\274\355\251\333<$\253s\273[L\247\274YX\227\2740\316H\275\205\2017=\177\021\244\274\010\210\243<`\244\372;-\211\232\274\0043\033\273l/\223<1\335g\274/\236==\352\277\376:\264\340,\275D\356\007\275\237\2427\275c\352\253;\376\312\210;}g\271;\006\\E=\r\333\000=\340\244X=\2705\225<\274\004\377\273\350mK=\2464/={\251C=\023\032\017\274g\227\026=Ij\327<L`7=\335\002\230\274%\'\031\275\205@\020=V\200R\275\n\372\325\274\206\023\"=8S\311<\027\301G\275aH9\27441\370\274U\247\260\274\243\346&\274\\kB\275\001N\026\275\246[2=\261\344\003=\034\240W\275A\027\240<c\215:\274\267B\334\273\030\025\332\274\256\315%=\277T\263\272n:I=\365\374g<\031\263\313;\223\343J=V\214\035=\266~C\275|`\003<\367><=\356\376\014=[o\241\274x\030C=\207/\325\274 \313K\2755\312\274<S\260\210<Q\254D\275\026y%\2751\273;\275\340\315\023=&\000\306\274\232\223\024<M\032 =\347\246O=\267\217\202\2744\376);o\207\001\275\265\253\023\275;\224\330\273\210=\226\274\345xh\274\300^Q\275\007\236\020=@\217\024\275\321\356g\274\257\007\247\274\253hS=\302qN=\036\353\267<)t\306<\244\206\272;\206~S\275\351\265\005\275h\340A=:n\265\2723\217\326<\001xX\275\016\014\362</SM=;\216\303;\t\221\336\274\243\242==\265\216@\275\007Z@\275d\277k<\nMR\275#\335%\275?\323\365\274\314\307C=$u\000=5S\316\2731/>=\337~0=\264\300\321\273\364\352J=q\3554\275@\213\356\274\036\016\353<g\312\204;\313\342\276;R\3059\275\271\347<=\305}H=\324C\n\275\205\255\004=\322\214\335;\033\005\303;\244|\320<\223\346-\274L*\310<\377\263\335<\252\020\211\273\317\354\021=\206\264\312<\300K\'\275\\O$=\315\276D<\220\250\244\274\327\224\337<g8L=^\001\300<\227h\263\274\226_Z=qV\267<\022\332\222<)\356\206;\025\375\036=\213\200Q\275\026\002\251\274\022\215\377\274z\016\001<6L\035\275H:F\273\253\006N=\327\223\366\274`dI=5\253\276;\270M<\275\343)\265\274\266\361\363;Q\226\007=\260U\214\274\021\314S\275\005\364 \275z\002\345\274s\'K\274\305\202D<)-\353;\024\211\235\274\210g@=\253\2744\275\'~\207<\032{C\275pe\345<<\244J\275(\235\036\275\372\333\034\274\367\233\017;\2511J=\0305>\274\300\027\"=A\346\352<]\363@<\235\314\217\274\331T3=\227:\350<\312\213!=L6C\275M\214\257\274\020LP\272\005\235\t\275\016{\361<\202\333\203<P\367\013\275x\0033=V\337\350\274x\214\304\273\007]G=0\307\017=\320p\343;\311\213$\275|Z\225;%\005x;Z\245\201\274\026\214\263\274Z\332\345\274\365Y\273<\236\004\223;\231\356\336;e\222\335\274\354\264\005\275\344b\254\273\367\\\023<\336&P=\233\343\320\274$\204I\273\246\346\007\275\306\251@\274Q}\376;c\300\024\275CCH\274j(\227\274.\275!\275\243\271\263<\330\343\023\273\371;#\275\027\233\"=i\315\360<\005\247\'\274\267<\326<~\216\027\275\351D\024=\002\365\242<\245\300z<~\\\315\274\310\315P<\301(?=n\022%=\264\204\257\273\332\266B\275\247\242\330\274j\266\017\275,T\224\274\207?L<\344m\002=\313\\b\272\2450\'=LK\335<\217+/=\275SY=\323\340\031=Q\035\013=H\271\027\274\3048\330\274\014t\037\2753\033\223\274\321\262N;\324K$=\210=(\275bP\347\274\375\211\006=u\235M=\034\215T\275<W\\<\300W,=T;i<\222H\016\275\274r\032\274#\375G<\305\365\261:\034\256\341\274\023\277\357\274\211\242\330<#R\242\274\257\320\315\274\r\034\354\273z\253\005=;\236\336;g\210R<Fq!\274nx\'=\356\214\261;\036\214B=\2377\007=-\224\222\274\201\3139=\203l\002\272\322\211Z\274\r\360K=\023\345\025=\320~0<\013\004[\275\n\202\333<\377x\304\274\357w\330\274]\335\376\270#[\027\274%\250\231\274\3073 \274\005\371\275<h\014&\275\310\220\232<\206\326&=y\337\251<\346i\222\274{N#=(\000\374<c\320u<\202\241\033<\301J\252\273\032gX\275-\232-=,\350\222<\2722\224\274\307I9<.\025D\2759GU\275\276~\342;V\"\362;3\252\t=3\204\264\273-\324\300:\\\024\005<8\354\026\275\204\330\373\274U\220\331;\006x\340<OZ/<4\242\"\275\353\307\343;\346kE=\253\3145\275\350@\246<a\3764\275eMR=!\274\024\275!\305\\\275\346,\276\274\203\213\025=\354\323\r\275\036\330\350\273\354\231\306:\004,N=#I\027=\303\033\034=\004\364L\275)\365 \274\304\364&\275\002/?\275\200\n(\2759U\001\275\315\330\025\275\035\032\013\274\035\021#=t\rY=\323\343L=\262\257R=\316\356V\274\335\'7\275\367/\231<\233\314H\275\373\2010\275\345\205n<\023\3156\275\240n\023=\333\3501\274=\026 \275\350\273I\275\204V4\274:\342\013\273\254\221\203;_\2237=\324\201*\275\210\277\'\275#@B\275p\255\225\274\247 \177<\370\033\343\273nN\r=p\023\025<`\243Z=n2\016=Y\377]<\243\271W\272\365[&\274[B\030=$\241\354<\240\2112=\227\177\025=W\023\342;\243\2760=\345\002\"\274u\260\250\274\326\305*\275\376*\266<\327#\001=\241\010y<&\233\036=\353vM=\253\2149=\241\311\363\274\355\370\261<=\025\205\274u\035\216\272*\354+<\r\330\240\274G\236T=\034*7\275qZ\225<c\030\211<W\007\371\274)\021\002\275\307\266\333;\357C\233<\317\337\374<\252)&\275\007Q\027\275P\231D\272\211\275,\275+\300\336<\205\336?=~C\016<K\342-=\275\244\226\2744\352G=\216\361\247<\210\361\221\272\312\274\226\273\306(M\275\337\215#<\024\266\237<\210\'4\275\345_\023\274\316B\254\274\017\320-=\214n\333\271\001\254\304\274\353e[\275\312,\000=T\\\264<U\324\233\274\245t!=/\270\364<&a1;\220\205\377:HZ\2259=\274}\270\331\003*=\025\2475=\364\325:\275y\226\367\273xM\'\274k\300\276<G\201\014\275y\346\245<\001V*<\355\300\022\275$D8=\003\231\362\274a\006>=\332\034\213\274^L\225<M\302\023\274\276\036m\274k\021\347<\031\242\315;\2712R=r\363/<\306\246\221\274\342\030\254;Bks\272\277W\"\275,E[=\272\354%\275\267\270\023\275Q\213\036\275\201+\035=\342o\002\275\352o\022\275\231f\033=\t\201\227\274\035\355\366\274\306s\026=\010\005W=i\235&<p+\263\274\007j7=\304\221\330;ZE\307;\t;I=n\222\362\274/\277\020=\235\315+<\n\207\312\274\253P\034=\365I\000=;s6\2729\2353=Y\305\366\274:Y@\275{VA=\373AB=L\244S=)\332I\275\235\266)=i\266\351\274\266\323\025=\376\312$\275,\334\001=\263L\243\274*\322\202\274\366\322|<\343\003\270\272\255LI=\262\222N=2\304\334\273\007~4=\223\0335=\t\242\207<\003u\220;\344\005\275\2745\0244\275\366\266\234<\'\331G\275\227\223\342<$N\352\274\\OY=\326*\006=\301\014\317\274\261oA=\275\230\260<\240\377N=\t\2351=\265s\272\273\237\214Z=s\301J\275\225U\023\275z\026\231\270\237i&\275<$\361\274\275RD<\016i\214<\240\251B=M\013\344\274\261\270~\274/{\303\274m\314K\275dq\203\274\0005\303\274\241a\346<\201\300\373:\355\267Z\274\207%%\275\211J\277\274\364\3678\275\224U\036<\027\344\300\274\034\316\';\210\237Y\275Dq\t\275\036V\001=\253:\022<\250?;\275L\201\375<\036\205\242\274\226\000\\\275.\017\201\274\312\210\232<\251=\223\274\203LD\275\257/\323<\005ZN=q\016\240;\t\330\205;\342=-\275/9,<[\241-=\267\234\377\274\216v\'\274\004OZ\275z\371?;\"\366\022=\361B/\275\017.\242<\337\310\242<\205\320\024\275\316p\020\275\001w\330\273h\315\305\274M\262P\275J\226\210\274\266\236\330\274\300\010]\275\305r\311\274)\334\2649\322cD\275\020-\210\274\301c\036\275\007\372z\274N\216\232:\330-\016\275S\222\267<\'g[=0\320\364<mE\\\275\257\262\211\272\267\025\'=\244\301\023=D\227\256<\335\026B=H\216-\275c\360.=\'\223O\274\2244\032=\030\360 \274\0043\276<\002\3472=g\220\341<\303\223$=t\303\t=\023\0349\274\234M\326<k\351@<\000p\322\274\247\210\000\275\331\305\004=\\\205\363\273\334N\006\275\317\377X=ecX=bf 91\376H\275\202\261\272;\340FA\275\230 (\272j\336\366<\226$\275\272\305l\"\274\262\327>\274\350\251H=\371\331\330\273\222\357V=\266o.<\274\'\217;\332\263O\274\212R\003\275\254D2\275\216\376\317\274\216\215\331\274S\254\026\275\t\017\354\273\002\037}\274\213<:;/\312\302<\346X\351\273\251\324\203<\021}\002\275v\324\017=\010\350\270<M\031\223\274R\036\202<I\265/<it\031\274!)\010=\210}\"<%5\024=\222\352+=)Q\024\274(f1\275R@+\275;\304T\275\235\252\036\2736\220\215:>b\257\274\335\001\303<\236\024\032\274s\004\\\273D\n&<c\256\030\275\2528\320\274Oc2\274\350\035\324:\025\277\025\274\023D:\274\002\371\365\273\330tT\275\203CB\273oM\324<\324\267>\274\237\372J=\221\'\314<\205\252O=\274\345\316\274\230\262\275<\215GD=L\025\364\273\024\235Z=A\245\273\274\216\022\271\274VH\004=^\370\367\273\366\036-\275\322xm<\020s\023\275\213\357N<\333H\361<\320w\363;\343[\336;\244\0210=\205\n\317<\324\264h;\275ah\272\212\310\n=\013h==\303$(\275\252\376D<\260l\267\274\224\217>=7\274\353\273\230}K=\251\246I=iY =X\177\277\274{,\032=\202\322\311\273I\3662=\273\0032=\032\005>=\346X\352<\005\033!\275\3149f<h}\024\275\020\224\256<lXQ<\226\030\222\274\334\"\007=\034j\374\273#>\271<$\237\271\274\216\376\330\274\024\237\'=Y\362Q=&D\256<\277&E\274\304\257\035=\022\240\346\274\371\224\\<\004H\337\274/\276\331\274kh\\\273PXA=\375l\254\274uZ\367\274\241\344l\274\377\237\214<`\317\032<\226d\026:\241\036P\2756\235\211\274\225\033%\274\\\341\006\275\350\236\206<\311~I\275\322\"\007<*\n\237\273*\000\276\274\231\223@=\t\000H=\320h\341\274\263\016\352<,\301O\275jR\0329\362\212\021\275\236\225W\275[\007\255<\246\177\355<\213\360\203\274q\335=\275\316\310\330<\326_\021=\217\035 =\353\333?<&\n\016=L\312\014=[\360A\274\211\211\005=b\377Q=!\003\000;X\336\007=a\303E=\342\263\364<\236\001g<\226\202\311<\005\255\037;\374\341\023=~*\202<\220GM\2756\013\336\274\257\013\277<\244\347J=\307\265\252\274`\035\270<\367\267Z\275W\347\234\274\023\005\'<4Ir<\277PF\273I\201\030\275\034\246\322\274w\254V\274\3338N\275\032\270\007<\354\013\304<\031\245\357\273&e\007=\321\237\324\274\354\215\325<\301\3761\275nH\241\273C\326 =?~/\2754\202Q\274\324\014\333\274\331\264V;\001W\231<\223U\377\274-\306 \275\016Xb\274{\017==o-\257\273\3774\345\274\363\201\317<\231\374W\273\323\305\250<mQ$=\376\355\371<\351t\256\271\350h\200<\332\352[=\245f\315\273\276&P<\344\226\003=9\355\025<\264b\275;\241\003\002=\n\202\306\273N\370\204\273\262b\243<\242\023\261<y\252\002=\362\310p<Z\262\305<\213\377t<\314KC\274\222\277\212;\335\345g;<\243\331\271\223\234I=\202P\010<\t\331\271<N1\207\273\304\030\301\274\027\0346\273\320\340L<\340\275&=\036.L\275\327TD=\n\010\337\273\002\376)<\373NB=\225$\275\273\002\0019<D;\274<\354o+\275a<\276\274\273=Y\275\005\000@\275. \007=2\377v<$/\026\2750Hq<\341\303\230\274\376\220\005\274\303\256\202<\355g1=G\374N\273<\"G<\214\355\236\274~\373\252;\016\346\306;\247*\277\272\000\n\010\275+s\202<\0070\020=yFH=\027\032\355<\314\225\231;\201hN\275X\251\025\275\354$\244<&C\033=+\006D\273o`T=_x\222<\201\336\037<\245\037G=`\327\025\273\356\363\223\274\364pC\275\367\036\347\273\217\210F\274A7o<\251\2553\274x\202\213<\226\013\027\275+:M\274q\250\024\275E\255U\275\342\010\254\274\271\177y<h\300\r=H\310M\274\322:\024=g\227\374<\327d\303\274$\331D\275\336i\212\273\230l\325\274S\372\204\274\267G\347<<\245\037=&\277\310<\270\276\221<\026\264\265;\275\007\364\274\203R\022\275\225\273\3079KW\252<3\0330\275b\027\227\273\345\266P=\200\2213=\261$\246\274p\026T=\253\025\211;\372\206\351\274\301b\257\274n\260\240\274\031\227\036\274$\214\361<\031\244X\275\320\353\341\274{\212\n\275YG/\275\010\022\037\275\353\332\r=D.K\275\344\337X\275\271\317\222;|<\305\273kE\360<\244_\303<8s+\275\233\330\325<\225\207\005=hv\211\274\003\300R\275\377\237B\275\013\374\330\2739\023h;\034a\'=RbT=\324\3551\275\337\364\216<\375G\264\274\3435?=\322\247\037=\333\204\313<\254y\031<\223\312\346\274\007DE=\265\031\020=.\037M=\357[N\275\266$\206<\302R\212\274\314\004V\274\025t\025=\335}\323;\235\324\026= \n\233<\231\313O\275\233\267S\275T\'\306\273l;;\275\241\261\320<v\276&=\203O\007=\242\n\231;\">.=\362d]\274\331\224-<p\270A\275\025r\r\2740w/=\226Ar\274d\257\325\274Q\0239\275\374g\021;z$@\275\036mh<R3K=\034\347\374<\232\344J<.a\310<\360_\026\275\302\356J\2752\202\004=\332\250\036<\201_\346:\"V\232<\366\223\t\275X5\234\272\0106\001\274`\223\372\274\307\271@;7\205\234\274\376\312s\274N\205\331\274\252\251L\275\216#O<\214\017K=2\244\237\274\226\323A\275\257\023\030\275E\324[<~\027\004=L\231&=v\264\n=&\227}<Y\003\336<\21699\274\240\016\t=\320\277.;f\300K=\360\377\"<\261\243\220\274[0\000\275=\301\037=\344XM=:\035\006=\023\244\366\274\216\224-\274@\027E\275\236\366}\274\237G\225\273K\301J\275\331\347\332\274\301\035\350<\353\347.=f;\372<AqR\275WO\223<\255\0311;\345\0136=\243Y0\275\035\2544\275\210^S=\010\006\310;d\302\335<\n\317\016\275\014\350\024\273G\335Q=fP>\275B\016\'<n\211\222\273\350\004\322\2745\260G\2754\037\024\273.D\247\274\333+F\274\355\017\275\274A{&\274w\007:=\316\226\266\274\266\3427=\022\234\252\2742\270\340\273GH\230<\326F\236\267A\016R\275\031\327J=@\353\020\275\232.o\274\374p\273:d\031G\274\355\\\222<{\206S\274\262\371$\275\035\"==\205\301\336<\023DP<\370iQ\275\203\202\006\274L:\247\273"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
