node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2190
          }
        }
        tensor_content: "c+\004=\302\r\021=\333\252\t\275L\3327=>\212\316\273\244\204\001=\031lD\275\332\311\323;\022\315\030=\262l\221\274\013\212\302<\340\\E\275\211\241J\275\3028\312;\372\3346\275B\340R\275\371\\\211\274oq\263\274yS\376<\007\354\264\272\223\263\'=pyp\274\247\026G\275\366\351Z<(\027\201<!\306(=\3663{<R1\313;\246\231\253<\010Q+<\240\\\366\267\216\315\345\274\335\214 \275\344\262\001=\252\267\r=\222\210\030=\326s7=\330\352\214<\016-\367\273\027d4\275#k\264<5\210\367<I\324 =,\375\036\275ag\014\275\335\246\251<\233%\325\274\277\207g<\210\351\327\273\016S\320</A\305<\202(\003<\351\311S=\355\364\037\275\207N\005;\001[\004=\360_\"=\305e\245\274\261\235\230<\016\342v<T0\365\274\220u&\275l\301S\275\337\373\225<e\376\235:\324n\352:K\0328=\014\3502\274\306l\207<\376\213\312<\n/\"=\215\002\026=\355\355\214\274\030$\035\275\273P\312\2743>\265\273\247\240*\275y\235\360\273\021\232\024=X\320\240<\321\252K<\370_\261\274\251\323\207<|\323\'\275\301e\347<\255\2623<\017=5\275\3536C=z\2336\275\211\354\234\274\001\356\242\274(\316s;\016\032\n=\004\336\004\275I\265.\275\343\256\204<\370th<\301\356-<\226_\361\274d\236D\274S\007\220\274\370\027\312\274\360Y\204<\306o\010\275,\227U<\234l\271\273\003\230A=\311C\256;\\p/=CR\223<l\342\335;\311\215\266<JsE<\004F!=<\332}<\374L&;\272\330\243\274\331\300\306<\330\2535\275\2304\220<\022\303\245\274\271\241\233\273\'\212q<^\031I=\010\034\013=kpB=\243~;\274|\016\227<\014\200\200\274\256\312\020\274\251\354\250<_\247\245\273_\261\256\2734r\235<\"\350O=:\312\342\274/\032/\275r\361\326<e\317\241<\304\334[\274\360bt\273\267\352\301<\221\213\321\273\237\206(=w\373\251\272\\\216\337\274\006\347\270;0\275\354;\243\370Q=R\331\346\274\322\244(<Y\0174\275\310\263\024<Z\225\361\273\347u\037\273\221\311\004=\276\037`;\213\030v\274}\322\037\274vb\353<,\261.\275\251\2737\273\032\262\232\2746\223\324<\351\370\003=\357}0<\021\322\314\274g\364\335<-\205\256\274\"\230\271<\223L\366<(\247\235<[bT\275O\025B\275Y\276I\275\330\2272\275\323)I=\373\3574\272<\266\013=*\301#\275?\317\377<\242.\021\275y\033\353<\243b=<2p\021\275\315d\014\275}V-=\224\315\013\275\361\020\277;5\324T<\321[\027\275\344\272\243<\334\3712=\246\234H\275\271\226\014\274h\'\006\275\204\321\375\274\274?6\273\2143\312\274q\370P=\177`\212\274\276\305\035=\263\364\304\273x\333\013\274\014\343\313\2743\313$\275\3044\213\272\002\240\200<.(\016=\205\037G=>@\014=\372\315+=\004`\267;\205Ts\274\250=*<\27158=@\333\350<\232\251\220\274;)N=\235[\001\275%]\305<l\365\"=Y\301\254\274\304\023L\275\353l\374\274\341y\030;\247p\006=\361\034H;6%=\275@\264Q\275R\002&=D\217\021=7\367\305\274\277\262\013=N\234\335\274\331\364\255;\371;\253\274\2758\034=A1\035\275#\220\321;\335?\277<\365\211?\275\262\032\006=\234,\224:u\273\023\275\335\305\300\274\'\261\353<\322)\316\274\250\310\332;)#\"\275\3774\021\274m \332<\254\362\007\274\207\216\036\274H\006\033=\206i\016=\323!\332<1\375-<\377B\330<q\035\233<\204\303>\275\004\210\321;\207Y\t=\231\357\013=\326\006T\274@\326\345<\363\346\277:IJ+=k\204\002=\206\027\213\273\266\265\177\274\364H<\275\322\025\365<=;\031\275l\027E\275<\371e\274\361/\224\273\006\031\270\274+\304>\275\371\027\203<\016R\200<\211\232\237<c5\\\274\023R+\273\370\304U=\237\025\n\275[DN;)/\253<}\307H= \341\032=\342}\013=\202\027\212\274\014\207\241\274\217Q\032\275\377\034\035;\335\273\337\274\362\357\'=\004\360$=\335\356\220<;\346*\275r:\002=\305r\267<Y$\300\274\213\306\354<N\252.=\375F\342\274\201\240\276\274* \020\274\350\022H=\264S\205\273\341\235\"=;?J=+2\033=\314\273\261<N(0=\t\277\256<\311\223\317\274>\277C\273\030\343I\275\261\2763\274\273\220G=\253\306\031\274\01019\275\210\007Z\273\025\360\211\2730\305\202<\367\322\006\275\377~>\275\335\226[;\336\336\352<\274\366U\274\034\222\214\274\257\024.<\316\210N<\217\202\030\275\350\376\001<N\2165\275\245\257U=1\301\006\275\201{\251:\201\216D\275\324|\314<+Y\334<\032aH\275\230\275\246<\274B+=\310\3025<w\212\037\274\215Y&=\354N\354<\000\300\260<cX@\275\311\024\017=\337<\257<\020\327\271\274)\205\273\274\211-)\275\330\0376<X\300\006\275Q\335\232\274\361a\027\275\204Xn\274\003\346\317\273\352\365\360<\310\240\350<P\362\371;k\307\023<\3366\020=,\315\254\274\332\235\265\274\204C\020<\2223?\273\301A\335\274S:\337\273D@Q=\375r\254\274Yd\376<\240\352\017=\356$n\273\221\246A\275\266\255q\274\313_J=\016\314\345\274w\212\345\274\232\353\314<\263]\214\274\355\361\036=\340\020\243\274\226\020\267<\020\251\035=\035\215\321\271\315C\264<\271\255\277:\213\032\274\274\277\253\030<\221\007\240\274ok\220\274\010\266\020\275\337t\223\274\323\340\227\274V\2135=\240\2624=\333\201K<F\344D\275d7\027\275\364;\031\273\\O\221;\341\262F\271Sgw<\354\373\230\274I\277\341\2743\244}<R;/\275X\254*=\275\320\020=$ \355<}\212w<\377\361\004=\3453\320<\325\221\r\275\241P)<\236\033\351<\3443\200\274W\330\276<\377\326\353<\356Y@\275~\215\260\274|\027\212<X\226\236<\271\250\037=\276\017\262;H\360V<\345<\037\274R\350\t\273\262\231\245\274R\362\367\274\362\342\301\274g\342\254\273\277\017\003=\025\331\277<\270\225\272<\252\205\304\274.l\213\274k\315\021=\320\350:\274\222\331\023=\246\270e\274Z\356+=\332\357T\275 \375\033=\314\225\251\274ffo<,u\001=\311\252F<\3231\235<\"\2379\275\365\311\013\275E}\026<D\342\374\272\350\320#\275\036u\003\275\275Q\242\274vj\021=(\030\364\274!\211\273<\375\034\037\274\256\221\254<\n\346\326<9q\202\274\333m\344\274\306\201\275\274\037\266\247\274\227\375u\274\327\032\300\273\350\371\360\274\345F\272\274f\264U<7\203G=\320l\377<\360Z\016<\243.L\275:\004\241\274\025l\326<\024h\000\275*\034\033\275\364\260w\273\271\322$\275\036@p<\t\027\037\275\341\3054\275\005\241\017=4\3470=\'\301\031=\336D\213\273:\034\037\275.\252\366\274\234\210N\2754\240+\273q)*\275a\272\375<uh =\205\2569\275\022\202\343\274\t\0309\275-\370\331;o\027\211\274g\331\241\273z\0029<\2372R=\364X\362<sp\242\274\274\010\030<\342\230\334< \210\010<k\270J=\315N\252\274\206\377\366<\312\001\031\274\350\\\n=\213\367\344:\21263\273\350\377#=\334*2=\3146I=\020\302\314<\330\305\037=\261\367\023<>c><\362\001\031<\262\276\303<\227QQ=\007\370\005\275\347e$<p\346\331<Ja\232<$\204\343<t\303\032=U%\027\275\006\027\250<\305\246E\2750\211%=\243\363\032\275\262\331`\274\276\225\271<\302\337X<#\215\252<#q\301\274a\210\364<\032~2=\214\375\302\274\272\274#\275\313\227\363\274k\007\222<\276V\020\275t\205\367;\244x\020\275s4\252<\035\r\273<\312.O\275\245\315\353<\033\324\327\273\177\3723=A\240\275\273R\037\235\273\275\272\321\273e\314\337;\021\266?\273\337\205A\275\301\344\340\274r\321T\274+=H\273\177e\355:\243\224\010\275\004\255\216;J2j<:\014\002\274<<Y\274\233\016;;\256\232 =-\005\226<\023\300\254<-\251\321:E\252\235<\036Wd<=$E=<>\'=d\0149\275\275\254G<\304\234\335\274!\2441=\001\310G=\016\035\350<\006\252\205;\361\177\336;\341\350\254<\215\207\250\274\253\255\323;\200\267\331<\237\254\030=\352\006A=\257c>\275K\203\t\275\010jW<*_{<Bl\022\275[\177E=\352\365\271<\026\367\017\275$F#=\260>)=\226\226\017\275]\275=\275H\375\323<\350C\203\274CA\256<AQ6\275\350H\310\274\262\332J=\202\263\354\274+\021\210:\003MJ=\035\203\265<\367`\355\274\300U\335\273\367\002,\275\203h\220\274\221~\2529\361\'\271\274\337\301W<3\242\253\274\232]\t\275V\272\261<\334\264N<J\264\320\274\274\3556=S\232/<\255!\223\274\260\3047\274\ry3\274!\215\"\275\315\213\236:\226\370\026\275\024\203+=\315\327/=;|\024=\002\311\330<\210\004\301\272\34495\275\207o\260<\315\234*=2\326\024<^\272\315\273\376\305\323<\2310\273\274\353kM=\231\231\301\274;N\024=\266\027\346\274\263\266\207<S?$=\263\336\030\275\340\223G\275\232\226\360<1l\352<\0168\313\274\336lM<s\236I<\223\333\370<\360\360\371\273[\227\001<\300S\030\275l\226\003:\0044\004\275\251\230\036=\236o\372\274D?\251<$\030\370\2744\364.=\037\031\035=\251{\325\274\005\325M=\306i\027\2757\205G<\337|S<\246Q/\275W\r\262<\340e1;0\363\033\274\\\201\034=\303\262\236<\246\013Q=\215\246\241<\265\203:\273\232\365\352\274\325\305\n=6~\232\274\321\365\177<\257\001\254\274\253\350-\275\245\244\217;\322\277\273<\276\004X\272f\305c<\036\026\301<\205\200\236\274\227\346\331\273\246\212\265\274y\353<\275P\255>:u|\3369\300M\214<R\t<=\271i\312\273\010BI=\215\203Q\275\272Q\n\275\210\201\351\274*\340I\275\226\022S\275\252|\004\273\273\315\235\272 \026H\275\024E\014=*a\'\275\035\332\r;\340\237\005\273\221&P\2750]0\275}S\224<!\373g<\371>\354<\376\322Q\274\255Z\265;\023\320\036\275`i =\352\274\243\272*\355&=\254\034\222<\313\334\262\274H)w\274\210Bx\272q\3571\275\363\t\217\274 \022\235\272\221\2177=\376\000*<\366c\314\274P\n\037\275KR\031=\273%\362<\226\271\032=E\031\252\272\257\232\325\274\035$(=\242#K=9z\203<a#\353\272\032\035];imD=u\261\020=\0149\362\274)}i\273#\342\030\275.\342R=\211Z6\275\r\003\212\274S\367S<e}+\274\312\313Q\275E\367R</h>\275\253\035\277;)\027\013=\0058R=&\203I=\031C\017=iW\017=\234\r\347\274\245\000=\275\267fa\274\374yD<\340#R;\206\322\341\274&\313\016\275 EC=n\357G\274\371\021%=\267\267/=L\200\367<\211\177N\275\206X\354\274=\304\006=\345\340\276<\022\002\356\274I\3373\275f\250\007=qeA=n\207+=\326\244\262;Vh\036=rF0<\205\255\354\274\023\367\2619\311\372\256\274U\233\305<\377\367\024\274\2032\301;\010\355#<`\377\362<\201\030<=%\361\211\274\244\360\005<\270h&=\345\005\005<\331\005\023<\205h\225<\265\325\225<\320T\027<\357\277\322\274\335o7\274oF\036\275\"H\032=X\311\027\274\225\315\203<\251c\242<\247\200\245\274^?\347;qY)\275\230\026A\275\340\364\010\275c\371\036\274\261\2746=\334\246\001;\240\377N=\321\007\343\274\206\223R=\341\331Z\274\221\334\007\275P\3232\275\027G<\275{\222q:\220\227\354\274\260\324.=\306\203\035\275\264P|\274\306`\321<7S?=p\376\'\274\310\307^<\004\"{\273\365\t\004=\224\213\206<\211\240\241\274e\340\267\274\315\t\203:\306D\304<\360\274\027\274\322\033\270\273P,\n\275\323(\001=e%\336\273c\346\246\273\204I+=\\\257K=\\~(\274\201\214\316;\236\023A\2755\346\235<Z\354\016\275\321<\242\273[,H\275\366c\271\274\254\324\335\273\240\3771\275\361\300~<6T\001\2744\3225=\304\370K\274\215q\034\270\325\n\324;\r[\310:z\244\277<\3205!\275\322\300\035\275\364\0226\274\316p\366\273_\352\335<\354\217\312\274\264\022\025\275NM\315<\220\317S;\017\225\034\275\304a\363\274\355\215\017=\256W\250<\362\020\376\274\2428\001\275\201\320!=\000\275\315<g\234\010=8\\\320;\375\255>\274\225\277f\274bH\320<\350])\275\205[\352:U\207\372<\235>\002\275\177>k:\017\357\256;\320\345\375\273\327\207B=~\t\021=\245\3649=\222\006F\272dlh<>m\001\275\325\302\364\272\264\351\310<7CO<IW\333<\263\230{\274\300\224\002=>\362\366\274\265.\032\273\327]\305\274\356\325\177\2721j.\274V\240\256\274`;\222\274(\206Q\273\314\000\203\274MU+\275\264\255\\\274\340\256\354<7IR<|\355\221<\027\r\337\274\217L\030\274\205\341\005=\371\313\025<)\374\302;\r\036\245\274\366\347`<\315\340\035=>{\300<i\372k\274M\213\245\274\032\271\035\274\200q$=\304\013\016\274\230\374\032=I\317$\275v\243\327<\236\'\212\273a\226\002=\263\035\203\2749\261L=\342\347/<\317\306\320<\242\177\330<\215+\304<L\365\240<\275\340\211\273\313*8=\217\013M\275\264\337\254<\232z\246<\364\014(\273Em\324\274\213\271==\033\210$\275\373\366\306<\201-*\275\020\222\304<\270i\017=\327\0032=\205FG\273\220n\353\274\257a4\275\0076\361\274s\305\025<\247\340M=\251\034+=\026\256H=\007\215\335<0,M=\210E\000\275K\225\217:\310\257\320\273\237\031\242<\177\272\217\274^0\247<\365\310H\275\212\222\350\274E2\256;\336\027$=\331\322\227\274\033\250=;\217sP=\245\336\226\274\223\002<\2739\020w\2740q\277\274C\212\222\274^\220\227:!v\026\275N\273\000=I\007\262\2748l6=a\3711\275>\363C\275\331\\\'\275Y\037K\275K1\251\274;\226\236\272\241\177\t\275\007\371\311\273\317\373(\275v\363\r=\tX<\274\3752\342\273\r5J=\361\315)=k\332\244;/\277\271<]\272\r=\010tE<\031f\005=\216Ah\273\036\201#=B\020\201<\225\321N=cS\375\272\376J\212\274\032r\001\275\375-\365\273\204\n\001\275\253\2463\275\207\356\t\275kZ4\274\263\2765=_z#=\267\314\035=\036\315\357;\036\261L\275\211}\255\274\2028\001=\312v\223;k\313\227<\246LN\2752?~\274\"\260\313\2741\021k\274\246\3225=\027\272W\274\r\344\214\274mY\241\274]5M=n&<<\017\267\203<\347\\\362\2745\306\303\273\216\320\356\2742\217m\274F\230\342\274d\026\006=Q.T\272#b5\275R\013O:\212\245u;f\236\024\275!dM=s\343\361<C#\007=\207lO=#\240L=\221\355\273\273\265\036$=\320\346\'\274:\271+<\003F\020\275\323\223l\273\230\355U=\030\030\271\274Du~<f\035;<=Yo<\022=,\274\020W_\274X|\265<*>p<\204h\r=\205RM\275\034\240==\332\311`<\"b=\275\307\360D=\252\253n\274\272e-=|\213\275<l\241S<p\240\t\275|\232\321<\305g\306<\206\351\247<T\035+\275G\020\271\273\236\263E\274\323[\276:\314w$\275X5Q\275X\334\331\274z\217\'\275\345\247\241<W\266\267<\224\267\321<L\343\035=\270KJ=9_G\275\271\002\020\275\207H\003=\333Py\274\207\224\351\274{F\034\275\327\330\220\274\215\331\035\275\341\224\200;\316yI\275\321yM=\\\216V\274\260\330\315\274V\275\304\274\026\267\325\274\333\010-\275@\031\221\274\336\255.=\333\361\023\275Y,\246<\017\353\037=M\300G\275\245K\273\274\376\210\276\274\333 E=0z.<\2030\027=q~\033\275\307\233O\273\215\337\322;\300\312\203;S\205\330<\025,\366<u\027\243;x\216\371<\356\036\264<\265.\273<C\317\017\275\333\335\331;\363\313E\275v\t\034\274\222S\337<\207j\002\275\216\256\320:.\302J\274\372\317\017=\"P\372<\031d%=\3608\277\274\0322\007\274\027h\026\275\004\220\206<\371\215F\275\277\301\262;\315\263\013=\204\217I\271>N\256<\211\2306\275\327\276&\275\316\"8\275c\244B\275\227\266\264<G\276\346\274.\363\355<\200\\\177<+\364\352\274\337b\331<wr\240<\360%%=\3547\023=\225\354Q\275\216;\225\274\035\300\036=K1\357\274\311,!=\237\314\233<\304WW<\031\212\353<W\305\230<3\023\226\274\026O\264\272\221\377\005=\2538\250\274\003A\036\275\264\017\222<\272\035\023<\006\223\364<\215\250\n=\030*B\275\215\375D=FK\026=\006\236\207\273x\206\223<\357\223\362\274.\247\327\274\210\017\235;\243\334\006\275\363\036}\273o\253\254<HpN=x\357-<\026\2363\274h\267\033<^d\032\275\254\335\265\274\264h\260\274+\1772\274\006\317\025=\305(\323\273hZ\263;;@S\274,#A\275h\3452\275\0371*=\023\370\367\274\344\374\037\275M\352?\275 _\037\275C\260\313\274\260\315\'\275\257b\302\274\361\277I\275\030Ae<\312OC=r\017\240\274\203g\005=\363\234\267<\265\017\317\274\2370\022<\330\252\356\274 \247.=\227\355\316<\322\224u<\231T9=T\224\001=~q\355\274\355\376\274<\250\263\256<vA\'<~\2354\2754Z5\275\231sB=\013\200>\275\t\301\216\273Zb\315<\021\237\335<e\377\370\273g4\201<\246\2271\275x\357\t\275_\241\265<\332.9\275h\324T=Zw\373<\321\312)\275b\233=\274\004\371\334;BL%=\335\177.=\250\261\021=@\372\304<\273\343\311\274\253.\301\273\362-J\275>]\345\273\316\035\204<\360L5=\026\321\001\275\256P\004\274\355\237\'\274\371Or<\213\'\312\273q\'C\275\264\0163=\250\024N\274@\237\001=\233n\024=\337\314\255\273\260\023\313\274V\353U\275D\001\317\271O\263\355<Y\351\352;n\207\220\274z\236M=\324\273\265;\205\007\373\274\326\037@\275\204\177\254\274b\0210\275\177\363\320<\212\307\'=}\220,\275h\177=\275\351\273\310\274\200(-\275\246?><\363\234\303;\206C\267<6\002\213\274\244\223M\275\273\330\252\274\274\221\232\274O\354\314\274\370c\024=\251R1<Mn\354;\277s\037=\203\225\323<B\2413\275\275R\306:\366#\264<\0047\372<s.\246\274\226\212\250\274\t\r\345\274QC\'\275\250\371\010<k\261\032\275\36156=\253KU;m6\346\2746B\016=\022\035\306<#\264\266\273\000\204\"<ytZ<\241\0133< \257\217<\220\312\231\274\362f>\275\311\335:=\321\227\314<\272)N=j\007w\274\310[\360;\335\2571=\022*\363<\033J2\275\271\234\001<\261\211S=R\302\363\272\037J==\362\317A;\211\345\354\274\367Kp<\325c\010\275 \211\206\274\235\365L\275wx\t=\t\207\002\2745\237\004\274\320|\234;\234\t!=bl@=S\265\241\2745\254j<O\231\274\274\251\256\r=\230\215\"=h\347\327<\003\321R\274\016\234\335<\2562)\275\276\253Q=\251L\216\273\304\225\221\274\221B \275\322\302\356\274\t\021\246\272\242\221\000\273\353WR\275<S\211<\204%\275<G\372\030\275o\3658\275\014\031\227<\314\343)\275Vk\217\274\356\214\003\274D\200\021\274\256\247\235;[1@\2758\316\367<A\032\250\274p\310\"=\311X)=\031\006\231\274\014\317\001;\031\3330\275\2664\005\275\3107\377;\375w =7\351\013=\272$\006\275\301\014\004\275^\372\326<\360\202\007\275\026C\016=\034\2326\275\020\271\336\274\227^#=\237\002\341<Nv\201<F>\233\274ya\"=vVw\274(\275\003\275[n\014\275\233\271\010\274\262\022\316\2723\377\"=$\231\321\274\324~\022<+\376\037\275+\311F\274\260\342\206\273\3567\006<\250\334d\274\274F\356\273\206\370P=\376\013Q<\330\272\374<\237S\213<\233\022;=\264\204\313\274`\242\325<\035V%<\332.\000\275\266\253C\275\3308\245<R06=\363;+\273\014\276\n\274\243j\\<\344\265\244;\307\254\003=\343\264\002\275\023\343\264\274s\037g<X\212\333\274\264}i:\n\337>\275\250U/\275U\313Q\275\n\373\215;\3743\025\274\274zM\274\344\002\016\274U\265\255<\034\021\232\274\200\245:=#\242\032\275\253\310?\275=\\.=\313t2\275\201}\007\275\316\300\014\275\002\346\005={\022\320\274\230\261\204\273s\n/\275\005\'\236<\001\362+=H\207\222<n1\017=\320*R=\327\332\332\273\336-\366:+W\236:\353@\034\274iFU\275\177G<\274\306k\027=\221$\305\274\344P\221<L\222\316<p\325\357<B\206\300<\312\021i\273\315\331\271<\202QO=\216c3;\033\002\004=\241>\220\274\302\"\240\274\217v\023=\035\253\014=\324\212\t\275h\253S<\302<F\275M\343\"<\271\234/\274\232|F\274\212\210R=\267sp\274\270\266*\275\300\302\335<j\344<\275\230oM\274[C\031\275\321\277\206\274k\t\343<\257\313\300<T\n\030=-1\214<\321d\353\274\002\234\013=?\374\246<\375E\361\274@\354 =\017W\245<17R=\371\3315\2744\314\216\273}\353\350;.\222\005\275\243\327\004\274\304eH\274e\001\373\274/\326\033<\240XA\275e\020P=}d\033=\246\361\3149t\315\336;\247x\226\274\354\236\257;3\365\262<\033\032\227<`!z<\"\303%\275\'`,\274d\r\013=\2614\035=\366\313\343<\002\274\372\272\036\221C=\243dh\274\227\260\231<C\277L\273\227\310Z<\317\250\017=\214#\217;G\232-=\307g\351;\003\020;\274\333Z6=(%\323\2741\326\253\273M\037\260<\0352\000={\030c\273&\273S\275O\0021\275R*k\274\006\026J<\320\374\204\274\221\227\305<\222O\245<yJ@\274\004\'l\273\363:F9Vu\020\275\247\3302\275\221\257b;\342\217\006\275r\030\330\274q\364\r\274~\3359=?=\266\274\340kO\275\023\377\013=\371\233\023\275\032\205\367<E\"\022=\001\022\276\2740\017\320\274\267+\225\274\211q\2119Y\035<\275j\234f\272p\373&\275\312\243\253\274\203D\365<\030\373\307<\\\0077=w\247\367<n\254\r;\221\302\316\274\352\377M=\026\263\010=\303\315\021=\nb\003<\267\204C\275\264\3175\275\215\033T<\t\357\363<\031\237\234<\2504G=[!w<\213\272\022=JB\'<\252\312:\275\205a{\273\3133\352\272\266[Z<z\362\310<\220\016\022=8\332\344<\211\3133=\370\343T\275}\322$\275\3724\t=\274Cq<\037\r\002\275\016\221\026\275(\334\312\274\031\227O\274\233\250N<\334\272\014:\322?\370<\223C\347\273I\212\202\274\2144,=\261\000\025=\347p;\275\271:\370<\\\301\253\274M\244\374\274z\021N\273\235\360t\273j\355\274\274y\314\215\273S\305\207<\346\276P\275\2717V<\t6\037=q7\023\275\\\251\354\274\220.\027\2751\237\351<\262[\001=\264\344\330<wz\253<WWN<\272\252\317\272\367\356\325\274\356\247\002\275r\263\271\274v\205\234\274\213\335`\274\025\215\016\275%\030D\275a\337\007\275\256\371N\275\210t\352;\223\220\002\275:\0249\274\0276\016\275\315zw;\351\243\346<\363\2263\275\336\246\213<\353\343K\274\337:\372<G\266\301<\253#\026\275\212k\263<x^\315\274\235-/\274^\216\266<\035]\037\275\nb)=\037!\202<\221V\275<us#=M\256\221\274\037\260\002=\204$\314<\2461Q\275\207\205\300<\035\032\347\274\362\242\343<\335\035\025\275C\216\272<\037\336\347<\t`\023\274\221\001\200<\204\325\246<\203;}\274v\336\310\273\321\'T\275\025\215U\275\330\r\310\273\313\373\020\274wk\231<\343\n)=\032\303\177<\014\032\031<\356\344\035=\300\n$=m\307\203<\220\201*<\377\345J\275\262\031H=\327\352\006\275{xo<;\262\212<\212\346\202\274\314DS\275<\365\t=\036>X\273\263WF\275\212\217\031\275\017\310\337\274\242\333u\274Q]\267\274e\216\353<\211\232\031\275\367\326\307;y\331\233\273\263d\331\274\3209\021\274@\342\246<\207\346\335\274\340Qe<\324v\274;]HT\274\273\315G\275\\\201;\275\n\312\271\274\000\202\316<\341\274\033\2759&\322\274\331\2736=Sh4=\357kS\275\323/.= Y:=\224\374;\275[V\226\274%\241L=\316<\202<o\321\254;\021\276E\274\0171D\274\201\331\024=]!\031=?R#\275\237;\021\274\240C-\275\002)\023\274\212\227<=it\204<2\223U\275O{\026\274!\014O=\263W\307;?L\233\274\201\211\271<\\\362\033=\372K\025\273\022\263\225\274\223\350&\275\230\312\207\274\n\271\327\274\267,\023\275&\n6\275\354\306\302\273\334\264\032=.\301\303<_\375\315\274K\255`\274\350\242Q=3\330U=\036\303\241\274Z\355\220\274 A\017\275\020\275+\275\267xV\273\367\307O\273\222\271O\275\216n\320\274\243\246\221\274$oK\275\032\275D\273\356\301\021\274~}\025<\024:\351<\217\307\007=&\006\215<\373\034)=\023Y>=\"n\017\275J\324x<\226\265\334\273\373^!<\212\326\255<\333\367\325;e\025\342<\262\315L\275\203RL;\347\205\236<s\374\005=\212\r\025\274;\255\t<\250\373O\275O3\016=4s\232\272\271\221\324:\030\355\240\274\362\335\321;\250\3442=\307\270\315\273\265F\343<\305>!=\206\341\003<\350\260\367\274\365(I\273\014\273\244:\217\026+;;i+<\322\233<\274\220\023F=\245\241\003\275F\333\321<\352^\237\2740\032\235\274\325\275\344\274\237\317>\275\360\257\000\275\243d<= t\312<\232\200\021\2751i\275\274\210\014\021=\360\020H=\016<\240<\367\3443\274`|#=&\3364\275\277\303\343\274\337X\020\275\215\201k\274UM\000\274\'\376\315\274<1\251\274\202\210#=6}\311<\243DT\275\375HG=\032|\203<$\034P=(\252\301\274\001}>\275&\240\372\274\024\'T\275\272K\221<X\232\364\273\214p\021=\355\367\005\274UKH=b(!=\271\352-=\351u\352<H===\311\265\020=\355Z\020=L\327\210<\334\333\013=\303\227h<\325\2256<.\032\364\274\202\304\265;\022\352D=\377\221<\274\235\307P=\350\225:\2757,o<8vT;\367\316\317;\016\354\207\274\036\330%<\307\215;=\177\273 =\335\2078\275ip\367\274`\376\037=n\022\265<\364a\345\273l\301\'=?7\023=4x\216\274\221\037\326;\352\322\004\275\371\277\022=\0345\034\275\235\300G=\214\365z<7~\212\274\342J\221<\201v\007=&\350E\275\317\tO=\225\356\244\274\021\010\261\274V\351\003=\351nJ\275`w.=\333\373S\2756A\033=\307\022\024\274\335T/<J\372:8\356\301E\274\231\225\213\274,9\311<\004\306\027=|\000D\275+\016D<\016\244D\275\232\3126=\332w\206\273\215h\022=\357\320s\274\004\323\017\275h\010\371\2740\377\327<VX:\275\276\034U\275P\203\362<k\312\003=2\313,=\346\303 \274%\220\361;2\227&\275\257I\337\274Q\205V\273\323\346\365\273\213g\301\273Jn\024\274{\362\346<\203g2\275\211\366l<\251F\211\274\313\303\023\275~\375(<\347\020\350;\271\263\301\274w\020\304<\370\245\211\273\350d\'=\342\375-=\305\177\n=I\035\006=0\027T:\354;@\274\327\253.=W\001\202<W\nU\275\272\300H=\232\001\022\275\316\277-=}TI=\234\231\037\275\307\370\021=\322\260\311\274\312\345&=U(\r=v#\266<KJ\033\275%\254\232\272Y\222\226\274b/!\275\022\201E=\210\347\247\274\273\202\024\275\004\374:=\247\246\031\274v\020\013\275T\271\003\275\327\247a:o\230F\274\007\327\310\273%\244\226;\254\226\310<m\326H=\214\236\222\273\313\003\030\275\037\223@\272\361\335\341\274M\2445\275\263\360\233\274@el<4\225\271\274U@^\274\335J\307<\033\276I\275\324V\004\275\336X\331\274\373\373\035\274\231:9\274O\322\021=\236\310!\275\261\250(=5\365I=\210~L\275f\330\344<\030>\2758Wv\353\274f>\031\275\272\256k\274\263D\267;\035Q4=\"I\t=%\0010=\265\0314=#\341\021=\336\034K\275U|O\275\366\177\355\273\017\362+=s\211\271<\nuK=\371P\005;\036\302\004<\034\267\305<\215`S=\237-\n\274\253\201\023\273\'\377\345;S\206\214\274\375=\312\274\225\007T\274$\324\025=>]R\274\274\376\005=1^7\275\356\232\323\274\2756!=\203n\305<\364\261\307\274\241=O=\003_\267<\237\344 \273Gg\375<\240F\306;\340\3432\275\23577=\362O\010<\371\326\t;\"\"F=\302\226\t\275\246N,\275A\003L=\264\331\025\275j\327\223;W\330\331<\024\0163=\234V~\274B\205\354\273\235\237N\275\253\230#\275\213^*=\245\032/\274\314W\342<]\2332=|\3571\275\366,S;\374\014C\275\246\204<\275\010\\;=\026\033\022=\265\263\244\273k\353F\275\242\245\233\273-\256*\274E\202\216;\200\2306\275T(]<\221O\330\274n\"\002=3\241:=\tT\272<\351\346\227\274\377D\341\274\'){<\021\200\371\273\340y\317\274\207U0\273\314\203\367<m\256\303\273-W\016=\364\r-=\321[+\274\331\371\3509\252\002!=F|V\273ZT\226\274Jo\332<\236]\023\275\317\262%<\305!\321<;\357\265\274X\257\357\274\341]\271\274\356\222\314\274yX\202<{\006L=@L\272\274\355\3274\275\371\234L<\325\032@=\037\026\024=>\303N=\206\241\205<\374\306\342<\260\331o\274\366\331@;|tB\275*r/\274\243\356\203<\203\341\261\273\365\036^\2746TW\274g>\001\275.WH=w\240T\275w\334%\275\217H1\274\235\237\007=\013\264\347\274\200\335\353<\301X\244<\366v\004;\320\271%\275\300L\367\274\000\316\002=\302*\214<\340\305\027\274\202\362:\275T\313_\274M\265E<q^\220\272\244LT=g|\275\274g\225\n=\347\023\003\275\366\216\022\275\227\327\034=\227K><\022\200\243<\t;\036=\361\316\026<\032\274]\274\363\2142\274\344\010\006=\261:\301<\027\233);7C\222<\232\301o<X\322\225\274\226\236\205\274u\222\252\273\030\n\030<\354=I=\006\033\244\274e\350\360<\211\335\027=u\373\374<P>N\275\255\310B\275\237\357)\275\263Q\202\274\270N\034\275\361\253z\274`ZT\275\201\024\017=\3114\034\2757!\243:\274\0279\275\331k\325<N\371y\274\010(\337\274\317f.\274\241\210B\275\272\004\372<^\337p\274\336EV\274\213vz\274\362S1\275/7\325\274\210_\334\274\262\032\206\272&\237\366\274\253\214u\274TQ=\275DB\274<{CN\275\001\277\220<_\362#=O\307Q\275x\330\031\275q#T=\013I$\275\371\\\014\275{;\303\273vNj<\253\262a82\220$=\213!\346\274\263\333\214\274\302\377\207\274\356\222\272;\007\355K\275_Z\333\274/r\266\274\333\273\254<\356\307\375\274\337\222\323<\356C\307<\220VO\275O3w;\236\3131=D\000\352;\241\346R<M_\247<\240\n\256\274<\2605\274\264\002\003=N\342A<9\234\033<G\270\013\274\344\345\r\275E\350\021;\256\243<\275:\357\311\274\227\354\030=\351y\033=\337\022\350<\340\337R=F\231/=\272\275\222<J\342b\274\022\262\300<\256\345\034=\207a\372;(\266;\275\177\032\226<g\034\207<\354\2770=\232d:\275\315&\253\274\372y\272<\370f4=\002\225\364<\207T\252<\370\213V<\204\335C\275\030\351`\274;\020\236<Y\342\202:\306l\013\274\263\244\007\275\276Q*\275t}!\274\200\375;\275\342 \264\274B#N=n\201$\275|\365/=\302F\332<s\210\013=\277_2\275+\227\341\274\257n\266\274\027\244-\275\'\337\376<\"\321X;G\243D\275F\364\026=\260\277$=\033-\013\275\263\256\305;n+:<\230~\033=\270s\3769\252\3505\274\262\202J\275\221\241\246\273\022&\230\274\225,\026;[q\306</\203S\275H4\201\272I\3676=\361\026\2329\251\3013=v\205\035=\014\315k\274cx\263\274\005\240\037=z~\n\274N\270\316<\212&\016<\262\332\033\275\n\247\003\274\316\333\376\273l\366M\275gZ\240\274o\316\210;>\r`\274\001\225\311<d\2173\275m\022\364<\200H\343\273\324GU\275\004\362\222<+\201\310<v\332\255\274\356\177\031=\351\363 <\002\233\252;\2572\000=\021\302\321\274\223\371\310<\020\353\211;\361I.;\021\217\262\274\026\r\220\274\n\351\006\275z{\320<N\304w\274/k0=\247\257S=6m\002=k\'\\<\232\257\244;\255\215\025=$#t\274\013\034\235\272d!F=\2053\366\274[\331\270\274\027.Q\275i\335\311\2741\026\036\275\376\327\254<X\355\363\274y\330\257<9?i\274%\013\252<\316~:\274,\000\030\275\263\037\025\275\335I\357\274Km\031=\023YF=)t\r=h\360\000=!g\332\274\202H\207<\224\317t\274\277\3427=\027\311\264\274\251\326\020\275\255\224\005\275\n\343\223\273\036SL\275\3443\264\273pE\025<\022\336\243\274\314\254\264<9\212@=Kf\353<tS\"\275\257\0016\275\007\'\300<)`\245\274!\310\005=\265W\r\275\223\005\355\274(Z7=\267\257*;\375wy\274\250\243\243\274ae2\275\2716\272\274\201\005W<?\244\234<\273\343H=\363\346D\275dL\325\273\353\007?\275\241eD=6\'\222<w\304_;\231\251\373<\250\005w<\207\203\034\275\203\275U=\201\251>\275;\005\004=0\3108;L\250\007\273\337G0\275\255\371\215<\317)R=d\275\245<\t\211\327<\337W\242;\226\210n<i\371&\273\260\024\215<\276\3373<F\021\375\274\021G\312<\036\037\316;\227\222\222<\007\r8=4H\360<\005\023\360\272\305\314\234<\232\366\235;\327\"S=\224\337\032=2.?\275%b\213<\371f&=d\275M=\235\247$=\017\302\373\273J\230\020\275K\3744\274\317\"\335\274\254s%=\271\303\220<\271\314S=-\033,\274]\222?\275\350\tN\274\016\302I=\224\036J\275\026%\215\274\024\364)\275a\252\000\275\310\362?\275\213\235\356\274\202\223\026\275\200\256\036;\206\032$\275\030\357Q=\326\235\031<\253\007,:\244+-=\263\364\010=!\336\243\272g\220\350\274\315\364T=\324\307\220\274;\223.\272L\233\340\274\365\351\360;[8\317:\031\021\010\274>\261z<\270\251/=\031-%\274j\260\031\275p\004\322\274\217\264\033\275BQ\301\274\0201\036=\3350L;}\361\030\273\001\237\217;2\3717=\346\250\026\275H\rL\275LgQ\275\'\250\335;\202w\033=\3776\353<M\325v\2748\252\215\273\374V\243\274\030g]\274\240\305S=<\000,\275~)\332<\277\336\255\273V\031\313\274\346\360\261\274\016Dt\274\246\002^\273\023\024\000=\361\020>=\270GU;\343\027\365\274\240K/=\231\010\253\274\3222\315<w\272E=\330x9=zpG=^X\224\274\n\246\215\2743Y\354;D\314V:i\277(\275\227\017\347\274\217\330A\275\260\361\322<\322\010|<\212\211\010\275\201\344\347<6\207\325\274*\001=\275\264.l<\300\213\"\275\376j==!\020\010;\317\202!\275\207n3\275 \3030<\243\306=:\2139w<?\345\001<\320\230\326\274\005\177>\275\0313\016\275\013\241\207\273L\0012=U\270\336;\365\363G=@\216\324<\321\033\022=c\020\036\275\003\362P\274\256u\303\274\247\003E=\206\243\344<3\301\272<hQT=\020\rR\273\306\n$=\026:\220\274n\202\344\274\344\354\342\274\274\341\255<+\213\314\273\315\264\333;\261\337\031<:*\321<g\361\336;\360x5<8\373\034=\007\356\311\274\202\373!\274B`C=\203A\347;)\366\037;\300\264\365<\245t\345<\320\2413\275\210=\212<\260\233\316<\301\005q\274\014P\365\273\211NB=\237\372\303\274FJ\214<\265\334\344<Wf\306;\2513=\275k\256\276\274\361\317\020\275`g\320\274\215\327\001=\240\275)\275\336\302\201\274\304\273\020\275\244T\t=\"\351\001=\253FF<\240\216h\274\205\2620;\271\315\337\274\025\215\264;{\004\r\275\007\335:\275\244\2470\275\341\177\006=\334\307\346<+\013 </*\262\274\325\\!=\314\327.\275\005\023\027\273(\331\321\274\242|\344<k\366,\275u/\017\275\331\027\"=\334\223\032=\006\026D\275\267\312\370\274\232\340O\275^A\377;\372]D\274\255]\255<\335\364B\275$a~<\343|\231\274h#i<\322{\306;\3510\366<\010\035J=R\252\005=\225I+=L\234C<\247\217R=\312a\322<\300\360J=};H=EwP=\256@\312\273/\220\000<\371\024\350\273#:0:\375\033$\273A\360\247\2748\331\013\275\345\342Z\274\250\211\024=\020tA\274!\263\234\274\023R\366:\224\002@=3`\256<M\326\"\275\301\025Q<\246]\021=0\227\244<\373\207E\275\243\025*;\221\373\255;\333\272\363;\336qA=q2\302<h%\204<\374\351D<\315\020\'\275\273W\330\274\306\367\364\273\027\303\347<\317T\313;\216\340\267\2744y\241\274\025\375\344<\213,\315\274\354t =\016}\364<*\313\005=%\354\231\271\265\364\214\274\336kH\275\313K\321<\214\022o\273U<\304;\213\244G=\205\204\013<A\242\016=\321\312\002\274Y&e<\322nw\274\247)\r=0X\370\274\n\365\337<\3257=;\321$\376<\25419\273\002\337G=\204-M=\337@\375<T\355\376<\034\342\013=!\260\026\275\006}\374;\034\377/;6/g\274\366\370\251\274\364\367?\275\212V-=\364\272\027=\016\320.\275Y\262\365<]t\312<\201tL=\320\336/<D\323q\274x\371\024\273J\030\372<\024\r\301\274\272M\003;\362\000G\275\037\024\t\275\271\004)\274\240R\n\275\357\375\246\2738\206\"\275\374_==\023\025\242;\030HR\275\226\020\220\274C.\307<]\232\034<\001\007\332\274\203\206\265\274\304\001`\273\023\354\036\275\321\020\321\273\253\"A=\037\202&\275Z6A=\312n,\275\312\341\360\272\336\351\242\274G=,\275\346j\033\275C\206\035\275V\020\231\274\257S\004\274\r\261\221\274\270\251/\275\252<\325<\321\326\235\274\351\271\274<\265|\322<\372&\257<\214%=\275F\271W\274\263C\034<\270\250\001\275bi\307\274f\022\r=\374\327#\275\332\223\363<\246\353\215\274\302\356\000=O3\324\2743^\215\274\177\276\200\273\266\215\006\274\250\344\324<\357\237A=\2345\304:\356-`\274N\211B\275\272\252\213\2744i\376;\344s\320<\241\301\000\275\0071S\273\033\t\001\275\271G\214\274\177\261\272\274P\213\325\274\2017&=\222\2101\274\006_\220\274\3169M\275\020\007\372\2749\224\2319\341\335\350\2747\300O=\306R\316\274=\352-\275\310\354B\275\2275=\275\203\256#=\315Nc;d\r\3237\245\313r\274/b7\275\331\273\357;\315\354\000<\334\255\377<RF#=nh\203\274_-\360\274\036\341\027=o_*\275jsM=\221\025D\275\031\277\003=\373%\035<\314\340%\275\000Q\211<`B\010\274~\360$\275\316\035,=\317Eg\274\273\222\205\274!\326\324<\253\034\247<\216\026N;\356R\262\274\263\342*<\227\036\001<o3\347\274\246\016!=*\000\277\274\007~\266;Ha9\274\353\r!\275\352\207\333\274)\006\325<\215[N\275V\217B=\307\030\311<,\254?=\271\004D<\200\nE\275\313V\356<7#\203<\303c\023;\2539\274<\305\271<=\264\026\260;\334\242\245\274\221\311\261<i\313K=\3429;=\3123\314<\306^\260\274%\350\364\274tg\372<\350z\325\273_\317\214<\037\002\265<eh\276;&cu\274DV\256\274\207\371\302\274\026r\306\274\270c6=\347$\036\275\311\230\006<\312\313w<T\355\227<X\t\271\274\333\020\017<\367`L\275\245\305B\275\375\006\220\274!\267\346<\365\"\352<5!\n\275\235\242\001<\351\314\003<\001k \275X)_\274-E,<f\356\305<V}C<C\202U\275\314H\210<\023\313@=\000\311\202;\364\243@=\2748\010<\363\234A\274(\372\240<\276\344)\275\026.\374<\033\243\310<sib\274\260\260\354\274\230w\354\274\237\314H=\261\231\371\274Q\233-<\\\357>\274\364\020\375\274\355RG\275\tA@\274;\243\275\274\371\2464\275E\333\003=-\3246\275\356\264\020=\225\027\201<\366\277e\274/\246?=%\213\344<c\333\344\273>\251\t\275.\323,=_,\n\274\264G\021\275\373<\237<\220\373_<\000P\036;\310\364\016<\007T\242<f\266>\275\247T\336\274\354\203\010\275\210\356\264:+\3420\275\000\013\376\274\355\3164\275\004\313\246\274^\356~\273\222\320J;\355\247\010=R$\305<\026\372P\275\032\021\344<\2241b\274\311\010\316\273sj\215<_\022\215<\314E\320<$\326\346<\3144\032=\331\310U\275\263t/=\212\316H=%\346E=\351\320m<\032\306\337\274\264\365\'=_PW\274\360\3510<\204\250\304;m\024*=o\217@\274\214Z\016\274\277\255?\275\352\326\240\274 \036u<\264\007\276\274\261 S=f\222\217;\263\306\334\273o\016\022\275/\231\020;\370b\310\273\315/\030\275Tv?\274\305m\234;\212\022\242\274\364\240\352\274\351\020\300\274x\277G=\316L\336\274J\013@=\361ag<\235\010\333\273\261B\033\275M\235\233\2741&\233\274}\204\332<\372\215D=\010\242\000\275\tD\234<\340\002\316<\210\345\316;)P\020;\356\2638\274\326f\026\274\245g;\274)\344\010\274\177y\312\273\274<F\275Y~\031\275\251\237\003={\035R=~6&= \355\266\274\305\363l<\023\264\026\275\030\242#\275\333\247\035=&\257>\275\345\215\340\274\004\203\003\275\243l\303\274\217\366\014<\020\0266\275\247\234\000\275\315\377O=\361\263\r\275\366\304\017<\304Q\264\274\337=\265\274\321b\203\274\'\336\354\274xP\022\275=X\327<q}\036\275\003\0143<\321{<\273\325y\013=GS\323\274/WH<\375\r\251\274\342\265\r=/\363%\275\033\341\017\275\253\244p\272\013\204\236<\033\2533\275\207q\351\274\016N\226<Qb\304\274\210\272\262\274\255\020\371<`\3223\275\337\210\231<\216\014\000\274wY\337<#D%\275I\311\003=\271\250\306\274\334\230\021\275\362\275\003\275\221\320\214<dA\007\275\000\254\311;\3531\001=(\"\016\273\376\027\317;\357\360&\2745\257\300;`\255\352\274\327(\016\275\253?\003=\326\\\204\274\005\251)=\007\343`\274\216I+<\267\341\205\274}\255\317<\226k\240\272\217\246\026\2759\277\016=\326\225S=\240\306\026\274\023z\375\274\347/\"\275\333\242/=M\203\002\274WH\270\270\316G\316\274S\220@<t.\245:T\340.\275i`T=|%\017\275\257^\300\274\224\257V<\230\177\313;8\277\035=\017\271T=\005\370&<\272\3415\275\372\027\247<\r\027G\275\241)\002\275\203\275\347\274G{\250<s\336\362\274\021\007\226<+i\313\274\342\344\200<\033OC\275\034dd;\037&\007<X\032\357\274\241\013\276<\005id<\342}\026=)\030\017=\267\224\257<\245\356\243<B\223\344\273C\342\241:\206\nC=\216\242\230\274~\313\223<#\376\351<\352\327-\275i\351.<#y\353\273\375E\377\274P\035,\275\037\363\033\275\330\235\200<\031Y\212:\024\356\251<\344;\265\274>fK\274W\016\205<o\347N\275\214\020G\275}\000:=\'\264.=\244\355\2759]\270>=\264\221\020=\226k4\275N\375&\275z(C\274\n\234s\274\216V\215<\257h==\364;==U\031\273<hq\010\275\306\200\367;@@\004\273\253\377\204<g\031\010=:\372\242<T#\321\2742\202E\275]\035\010<\r\233&\275\215\016 <(\302\035\275\374\321\'\275}:U\275:\231@\275\021R+=_\255$\274\226P\t=\322[\312\274s\375\222\274\327(s;\347\366&\275\253B;=\365\227q<7a\211\274|\343U\275x\241\023\275\rI\036\275\221\010\272<\221\302 =`u\226<\245\300F<%\272y<\265\326\322\274|)\020=LA?\275)\0246<\267e\000=B{\300\274\232\305\332\274+\241[;F\"\345\274\252\320\324\274\312\227\360\274\336W\223\274=g\245\272\006\261+\275\205NL=QR\005=\221\334\262\274\241\276\352\273[70=\375\013%\275v\021N\275\342\025\371<*\022\334\274\331u\363<\007VJ\275x+\326<\351\310\257\274N&\247\274\264\262N=\301\306D\275t\006*\275;>\350\273\263\271\370<\033\340\037=\001\267\353\274K\r\373<\375\026\343\273\027)\037\275\220=\035<\016\260\010=\301\346Y\274\032\217\030<\216\220&=\361G\275\274\230r,\275:\267\372<\311P\235\274\257U2\275\307%\200\274M+)\273LY\242<\3054==\370\204\341\273N\265U\275\344|\033=\373\201\007=\275?\335\273$\344\005\275\2573\037<WjB\275\0014\234<\327b\307;\372\225\231;\243l\024\275C\301\232<B\275\010=\037v\037=\370\234J\275q\305\324\274\240\302\377\274\035\207\n=\026*P\274\261;I\274z\307\240\271s\202/=\230\352?\275do\227<\213$M=\302\303\007=\302\001\375<\317\000B\275/\212\n\274U\242\007\275\016\333@\275\0144/\274Z\254Q\275%\300\277\274\207\354\007=\317\261$;\233\033@=#H\310\274z\016\030=\300@&=\372\304\234\273\211m\200<K\241\014\275\363P\007\275\265\367\215\274\351\271K\275\2176\364;\251\037\266\2747\252\237\274\303\365 =\316\000\323\274! I\275\2472,\275\354\016\n=1\316\303<\342\257\t=\340\217\030\274X/a\274a\240\267<#\211\262<\221\260\272\274\037<w\274\346\217\326\274\000\005?\275\311\356\333<3\3213<\244\3500=UX\t<\322#\375<N\021H\275<\316_<\326\261\202<\360\265^;\323\341\201\274\310\230G=\022\0040\275\364?)\271H\032J= /\014\275\316)\366\273\377\3171=\017\001\010;+(\320<\020h\366\274\346\'#=\307\360\304;_\337\312<\273\3263\275\321\345\024\275:%\202\274\214!F=\0252\373\274t2\326<\367 \027=N&\364<0\315\t=:\232\017\275\332\306N\275\365\276\014<;\034\3679\ta\365<\023};\275\253$\313;[u\022\275\'\217S\275sY&\275\004\340\'=A]\226\274M\311\"=\324o\201\274\0008S=)\2415\2751\267\320\273}\033\360<\023\355J\2758]+\275.\333\372<\254\252\r\275\352dG\273\316(\215\273\033\027\214<\027h\024=0\242B\275\332s8\275\244\022\206\272\214\241@<m\225P=\326\260\245<\317RH=\nv.\275\225\007\374\274\274Y0\275it9=\352\364\272\274g\277\010=\214#\260\274\017\252\001\275\223[i;x\333]\273v(\345\2732o\301\274\304\014\001\275\325\3606={\n\025=\225\016 =\272\354\332<a\360\200<\267n\301\272\000uj;\221\354-\275.\'R=\245\232\274<a\016\275:7o\302<r\013\303<\232 z<r~M\275F\002\264;>\241\242<5y\340<B\337\000\275n5O\274\220\332(=:\"0\275\264\356\361<\346v4\274+\001<=\336F)=+\302\354\274\034\245\223\274\324\252U=\002<Q\275\362\302\301<\006%\334<B\000(=\004\240\t=\235\347\331<\2661\314;v\252\355;\343P>\275;\324M\274\255%5;\237\346/\275\244\r\304;\337\366\357<ov\267\274z\337\257\273(\276\027=e\303D\275\277\307\217\274\370\3635=\\\261\361\274\026\223\013=\240\246A=&\0019<E\247\242<\177J\001\275\372\376\010\275\347[\006\275\035P\277\274\333\204[<t\225\205<,8D=\315Ra\274Fu\t\274[\235\203<\254\273\332<\200\t\265\274\033\\n:Qta;\'\013#\274\357~\320\273\344`\017\275\260\006G=\305\034\016\274Ls\360;\002\326M\275\307\\\325\274\000p\020\275\303\331\343;\265\374;;\020\243\014\274\301\225\231\272?M\006\274^\267\020=\366X6\275\027\370v<\363\3668\275FK>=\301r\366<\310\t\231<\305zb\274\201\204:\275\246$\274\274r;\215\274\275\"U\275\324\231\206<>S\251<\021\253-=\\^\376<\227\324\227\274\037\213\324\274\rO\363<jWJ\274\003W\275\274\330\302M<\225\250\210\274eF\241\274\373\260\221\272\222\220\372\274\317\337\3558\234Lc;\312&\202<C=\311\274\246\200\317\274-\331J\275mp\261<\304^\026<G\027\303\274\2376\223\274~\227\n\275q=<;\266NR\275\024:U=\207\347\244\274\3576G<\376\256\037\274%\r\306<\377\005T=#\027\214\274i\340]<cG\335<w!\300\273*\0033\275@\006.\2753\247I\275\222\313\306\273A\301\024\274\351\204\024<Pl\010\275\213\301U=\014\227\'\275\201\202\017\275Z\351\'\2753\202\"\275\234\243\337:\305\243\024<\205\010E=\200\244O=\006\252\021=\277u>\275$\274\221\274\213\363\037<\"y\014<\221\233\001=\266\323\205<$P\356\2730\236\350;\271\003\014\275\252\0136\275W\252\240\274(\017\202\274i\247S=:\315\356\274AK\032\275\342E\022=l\327\246\274\236\371\350<\274\027\213\274@\251\213\274\307\256\315\274R\330-=R\2620\275\2661\272\274x^\210<A\354\320\274\336\t\245<E\256E\275\237\246M=?r\347;\276\304\262\274X\353\'\275Xx\034\275\335\"D\275\214_\010\274\301\207\333<a\022\216\273A\350\243<\330\277\031=\263^\t\275\231I\024\275F\360\211:fN\315<\2224\331\274D\246L<\035$E;\250%R;T\341\372\274\005\337B\275:\357\\\272\023\305\026\275\310\375\026\273\301\030\232;\034\330\254\274\364bL\275\261oH\274O\316\014<\314\"o<~\345O\275\035\303\325\274\364\213\206<]\250#=\365X\n=\021\034\022\2751\374\357\272\t}\265\273K\257<<\016\013\014\275\306\270\036\275\332J\017\273.\214t<3\003\366\273\340\206\020\275\323\3458\2757\330\225;C6O\274\210\020\273\274oX\304\273\313P\027=<\014s<#\341\014\275)\021Y;4|\034<{\275F=\272E\023=\331\326!\274\276\016\033=N+\364\274O\252T\273\027h!=\310\241H\274\354g\242;r5$=d\234%\275*\204+\275\013\036\021=\361\343\366\274\246\323\r\275SFH\273|\177\235<\264\226>=+&\346;\014e\336;_\003\346:\237\242\351<L\2235\274\376\037\265\274\361b\025<^\244\306;T6Q\275W8\242\273\310(\200\274h\022\375\274\242\375\313\274\334\030\\\274\217i/\274\321E\350\274\240\377\253\274*F2<\236p\222\274<\303Q=\352\222\006; \\O\275P\326\210<[\347!=\335\207-=\224I\255\274\256\214\250\272W\345(\275\000\302>\275p\364\001=\036\355\352\273\010j\374<\212\205%\275\250\353\360\274\322|Q==\340S\275\203\2625\273{\336\256<\322?\007\275\000\310\322\273;^8\275\252^9\275v\344\032\274/)Q\275\244Y\033=\203\307\004=Lr\306\271\206v\215\274tY\327\272\264\304\001\275\207\304\274<\213P\350<\323\355M\275\n\251\006=\337\326\217<\300\241\362<\027i\213<f;3=VCu<8\314\303\274\313\274O= \303P=\263\312\361<\350\374$\275\332\307\253\274\300\234\025\275\021\346k<\010R&=\010\030\316\274\330@\032\275\263~f\2741uJ\274\303\237\225\274f\365\366<\241\000<\274-7/\275\262R\337\274F?.= \203\304\272\3033\'\275\353\335\032=\213\271N\275\260\033\363\274\321/H=\205\336@=-\310\036\275#\205\025\275`|\007=\201\037N\275\353\3044\274\351\r\264<\377m;\275Z\302\253<\263v$=\362m\321;\346oK\2730\237t<\223\233\236<3\302X\274\250\243\225;\215\275\250;\364,M<e8\r\275s\2266\275\273\033\000\275\204\263\022\275\314\211\321\274\007\355\244<6\257\261\273\327\332\260\272\347d`<\346\373\014\275p}u\274\373T\257<^\254\366\274\377\010/=\353\016\220<\034\013\205<\354\303\370<f\321==\\\205\252\274\217YJ=Q\014O<\266w\356<J\347Z\2738$\363<$\260\357;lj\031<\'\214\036=\2432E=\367\375\240\274$\254z\271\037\351\027<\020lT\275c\232 \275\202\270R=G\270\363\274s5\222<\216U\257\274\276\337\223:\236\202\276<\266r\312\274\270\273\340<\324@\366<\303\307\204\274\227\212\246\274\257\363\376<F\224\031<JP[\274s\253\243\274Ky9\275\316\261T<\305/\343\272\235p\014\275\217\023=\275\236\037\005\274\252\n\345<\311\003Q=\363\332\t;\022\027I\275\322\236\237<\372\177\022\275\336\206\307\274Wl\027<rsp;+\306\334\271\204U\252:\031I\t=\037\244N\275G\014(=6\311\376<\253\341\035<H\233.<\rLI<\001\201 <Da\276\273]\025\210\274x\312!=\350\016\340;\330?v\274%\372\010\275EAI=I\\\t=\202\301\346<\377.\037\275J\315\033\274a`Q\275\037\226\231\274}\233\214\274\356\276\213<xgD;\004\200N=\006\343\350;\245\305\350<\221R\242\273\353\031M\275K\203\031\275\353\300q\273-\007\014;\342\240+\275\340I\306\273\024\347F\275\177\371\'=\013\334S\274\321\227\007=g\247\010=\327\311\025:\013?\374\274\277\313\216<<\223a\274\263\303\276<\016\025\'=\364\331\004\275\214\313y\273R\n\321;\230\3053\275o\0344\275\262\344\221<b\316\013=aD\007=G\357Q<\370\2626\275\212\304:=j\201\256<\222\303\240\274||J\275\373\032\203\274\215\004K=\237\3360=\335\273\365\272\237\262\362<\255\324\020=\274w\333\274\203\243\316\274L\257\023\275\032|\201\272\320c\t= \232\301<u\262\003\272K\372\247\272TP\346\274A\022\361<\340\352o\273\3126S\274\340\320*\274T^\"=\366x\205<\263}\304;h\345\262\274v;D\272\371;\352:\345W\253<\021\034\002=\347s-\274\313R@\275\352}0\275e\326\247\274\031(\353\274 3M\275\n\3342=n\033\355\274\231z)\274\001$\260\274\343\220G\275\260J`<:xL\274\307\267+\272\314\221\356<\363\233\244<\374\276\362;\027\022(=\354\211\303\273$\373\345<\353\332\234\274{&\243\274M\264e<s\377\345<\373k\272<+\234?\2758\346\032=c\036\322\274\254\246C=7\335H\275\024\373\336\274A7\262\2745\276\220;\033\345\334\274sd\267<\002\004\222\2742\225\207;\r\343j<F\036\177<\336\013\221\273V\337\246;\031\200;\275\037\225\013\275+\233\343\274\264`/=\333\243\225\273\231\207#=\214\377\317<!\317f\274\352o\207:\017\233\024=9\315\017=Bn\346<m\303\202\273@(\014<\005\2517\275\332C\036\275>e\004<xaA\275|*$\275\307\275\037\275\367\307\'=\241I\'=\235\332\226\274\320\341\214<\332y\262;\006\020\244<\342G\030=\210?\265\274\230W\017<\307\324\232\273\026\247\245\2736\304\025\274\311\346\'\274b(!=\007\3176=\315s6=\343\375I\2758\245\033\275\310\265\355\274\345\353%\2753X\'=\343\225*=~Y\233\274\366A\262\274\303\334\260\274T\377\'=\336*#;q\377N=\345k\255<\226\2725\275*\242\017<F\224~\273\244\336\302:\334\342\337\274\357\332K=\207\340*=f\304Q\275[\364\036=\210\006e<\256\300\200<\345-K\275\237\216\345\274x\257\212\274\360\"\016\275\356\322B\275\020\230K\274\353<G=\352\030\r=\216\225\r\275\037\\T\275\032\265\017=\270\347\365\273\334{8\275!\034<=TrB\275k\211{<\233\300\353\273\037\217E\275\027\327\026\275\277\217\017\274u\237\300\274\027\n\315<\217\n9=\313]J;\216j\313<\204$\222<\321\251P=\325\3032\275\034!\224\274\351\277 \275\333\230\233<5y\374<@\271\354\274%-\351\274H`(=}d\014\275J\322\201\274\004\371F\275\322A*\275\236\246\350\274Y\254-=TL\001\275\271\231\300<A\340 \275\036\"\373;~\0149\275\270\322\370;\264\321\307<\350\327T\275\211z\366<9*7<\332U0=\331\323@<0I\036\274\326\003>=Nk\"\275\336\035\322<@\326*\273\326U\307\273\010,\252\274,\017\221\274\257\303O=\361a,\275\265\255E\274\326\"\350\274\031\311\r\275\357\301\366<\206\021\335\274j5\020\2756\243 <]\226\020=\006\243\240<wIJ\275\322\226\252;}N\247<\200\201\235<\010\354\034\275A#7=\350]\n=\311P\216\274oX\217:iE7=\357\000\"\274\220\260\000\2753^\026=\330\366\330<\210a\377</\3163\275s\333:\274\021\023/<\214\212\326\274\0032\335\274Kr\036=\237U7\274\002\214\005=\031a\233<b@?\275p\211\221<\243d%<\245\267\232:m1\365<\004O\317<\032\262\270\274\225\225+\275\303\217\377\274/\302\311\274VM-=\220\246]<\225\310N\2750\346\"\275\234\233\226<c\r\236\274\021OH=\231r\225<\204\320?=\254\037\032\275Z\321\360\274\252\204\236<\336\357\374:\202\361\213\273\335S\271;\356E\241<46<=\325\361b<\034\260z<P\226>\274b\304r<^\327#\275K\232\355\273\0168\303<\300\254=\274\3456!\274|F\271<\\\346\353\274x<\211<\177(\024\274\001p$=c\010\003=\r\177\003\275\304\257\251<n8\226<@\315\003=\256\315M\275\350\267L\275\352\310\202\274X{\003\275b\372q\274^\351\210<&*S<\022[\307\274\263\253\t<K%<<\277*\021\275\244\331\374;\254,\014<\016\007\263\274\020\233Q\275vw\351<\202\351\316<\234\206$<\327\025\030\275b+\021=|7\341\272\315JN\275\346\036\312<\351W\026=:L\t=\364\205\253\274\247\355\013=x\363\271<4\312\023=\324\361(=c<\330;\302\2233\275H\3757=:r*<\0360\252;$;\034=\327j\"\275\034|\036\275\251[\010\274\323k\321<y5R\2754\2261=\206\347\211\274F\307%<\013\"\007\275\313\206H=\337\332\346<\033\234\332;p\007M\275G\301D=\233\265\245\274xI\226<`I3\275\177\232\242<\21178\275\350\224\211<\311-\032\275\016n\306\274\364J\371\274\371d&\275\204\250?\2759f+\275\235#\331\2747\3719\275=d\000<c\327\253<\207M\320<\32296\275\032\371\242<\220\2465=\367\350+\275\320\216 \274\226r\021\275\236Q\031<\3208H\275\247\007\264\273\351-%\273\337\232[<d\214>=\335\037\007\275\265)T=\030n$=%\344\336<2}\263\274M\023\232<\3109*\275\247\307;=\247\351\017=2}4\275\315\317*<\220\2620\275\226\311\302<}s\007=\371m\025\274>\370\t=4\222\025\275\277\350\247<c\226\013\2756+]\272\206\217\377\272\374\3606=\203b\375\2746\236\262<\004\020\017\275L^D\275\037\025\3469\002\205\251<\3017\233\274\205\330\352\274\354\224\023=\006\013\000\275\225=C\274\023\0074\275Hi>=\222\362\377\274cx\224\272\332\265\347\274}\364\245<\315\017\211<q8\025=\235\372\033\275\312\341@=\321\344/<\325U\001\275\336\364T=\214\215\247<\221Z?=k\024\350<\226R\260\274\032\334\026\274\247\375M<\361q\246;\251\302\027\275) \274<F8#=\243\336\007<p\313\034=\363g\004\275i9\346\274\356_o<pk\253\274\207\005A\275\\\021\261<6h;\275V\177E=CmA<\022=N={\263\274<U\025\233\274\241g;\275\207\332\035\275\230\345K= ].\275\245f0\275\310\240\000\275\357\220W\274FI\371;\344w\016\275\rT\225<-\265\332\274|\247!=\370v\201;tZ\014\275\321r\024<\331\026!\274\263I*={\310K=df\264\273P$\016\275\366<)=\nN><\013\313Q=\374\325|\271l@\302\273\005\307\027\275DMK<A\336^<16\237\274\327\305\021=\334!+\275c\014\034\275\342\275e\274k\353\275\2748i\007\275\375j\326<\265\307\315<\276\352\277\273\30146=\345\277\245:\341\337\001=\037<\277\274\031Fk<)\330\347\274Q\\\r=\363\2743=\334R\340<\267\256\215\273{j+=\213\\\375\274.\'H<a\275\031<\220M,\275\032B\313\274\374\"q<bN+\275x\202%=\365{\356\272j\227.\275\213#\234<\354ET\275\235\203\354<\244\251\265<J=\234\274~5\020<4\010\023=o\235l\2744XJ\275d\303?<aCk<cBK=!\336\224\274\332o@=\003\326\036=\020-E\275t<\214<\250\346\r\275\317\222g\274\215q3=\312\221@=\214\242F=\233q\261:\352\317.\274C\317\257<3$\310<!9~;`\311\t\275O\351\021\275\303\232!=f\227?=dx\311\274\3223?=\335j\237\271*a\343\274\311\240\333\274cr4\275B\246O=\214\021#=\363\234\223<,\253\352<8;;=\006HN;)\033;<]S\207\273\264\0333\275\222\313\330<\350O>=\255\2519=\250\2754\275\247\017\246\274\017\323\267<\010\333O\275\343\261\365<T\302\t9\335\350+=\346*\357\274\264?,=dB\031\275\360q\251;\250\026<;\342v(\275\315\3429=\266|!=SK\272;\006\033)=\220\340-\275^Z\242;\272\023\257;GO\337\272\256\262\266\274W\262E\275\341\030 \275h\204\032=\363C\222<n\260X:Cp\r\275\371\344\007<\034iF\275\004\374s\274r\317\n\273\002s]\274R]\177\274\377>\353<\3410\241;\204\254\350<\356\020.=\2701\035\275\r\2431=\2529\206<at\377<\2329\214<\337\265W:\334\336\020=\317@K<\237+\361;G7I\275f\266d\273\217\211\273\273\353\220\213<\346\251\210<\340<3\2755Y\301;\215\271\265\274\016\246&=mV\007=\357\266=\275\255 \031\275\016\324\016\275\001R\235\274\032\331\256<\023\201,\275\232\267\002=\341s,\274\305\304\372\274\345@7=\250\n\230\274\364\203+\275xf<\275\323)\036\275\300\316\231\272\351\343)\2755:J\275K\027\245<\2477\355<\344\324\310\274\355\223\003\275\335$\022\275\346Y\250<\031Lm\274^\020^;\214\263\357<\333\244\241\274\250\t%<V\\\342;L\006\007\273\242V\350<*A\013\275\214D\200\274\205\225\'=!;\031=\024\305=\275|\006\032=\261\032\350\274\354\034Z<\247\245V;\027\023\t=pF\034\275|\321\377\274\000<\022=-L\233<O\232\272\274\330\303B=!\3173=\241\250\222;\222\022\253;\253\037\304<\330x\251:\200\234\233\273[\220D=\ra\332\273\351\2728\2750\270/\275K\363\365<f\337K\275\233\025\272;\022IC\272\247\206&=<$\335\2732\201<<:\033A<\257gY;\027\243\"={nA\274\273\035\344<d=\322<\354\352\346\274\204K\300<\026_\354\274\351O\316\274\344y\013\275\32274=Cg\245:L%\026\275\2419W\274EAE<q`\026=\365W\263;\023\205*\275\274:<=6]\264<\241\253\355\274\'\326H\274\013)\004=\034\241\032\273*[O\275\305\300\004=M\342\354\274e\331\035=\021yh\274\267}?;3\377+\275\0348+\275u\370\000=\3323-\2741\340\030<\254\313\010=\020B\306\274\337\275\273\274^\261\376<\345N\350<GY\024\275j\1770\275\032\215\377<\027\270\"<\3566\202\274Q\275\312<PA\000\275\342\036\235\274\006\347\032<qQ~\274\016\323\201<\201\013\334\274\206\023\033<\177f\324<\212\206\333<\311L&=a\3010\272\336\213\245;\305c\362\273I&\017=\346\376I=\244\213;=\'\352!\2740\3075\274\222+\002\274)\230u\272\377\223)\275l[\263\272\036%J\275\3227\211<\310\032F=w\' \274\030BL\275;\263\354\274\252\324\030\275\335(\261\274\324\357\005\275..P\275\177n\354<084<\303\2002\273@\016\035\275\353\t\242\272\234\336\305<UPT\275\032\350\030=\363\262F\275\223\202\021=\2539\r\275\316\337\206<]H\t\275\242N9=\254YZ\273W\017<=\230\324L\272\033\212\014=?\014\273\2745\022!\275\001K\306\274#\226*\275/\031;\275I:;\275;4\350<\262L)\271\313\303\307\273\006_\002\274p\326*=\273\007\003\275\377\223\235:&R\031=wT\327<d;w<(\227G\275\272\231T=R\274\035\2740\374\005\275\3164\210<8\330\210<\306]\277\274\257\3744\275\316\002!\275H\271+=\371!I\275\316bM<\231E%=d\205\r<\2675\222;\rE\004\275\000\346\331\273^EX\274 ?i;8f\253<\177\272\275\274\032q-\275\256\356\245\273+15=8\336\315<\300sd\274\215\264\244\273\020\327\314\274\315\344\032\275\304\227)\275\013D\310<\2273\305\274\306\355\005\275\311\035\362\273\363uF=\271\034\247<\364\2245\2756\2767=\311D\251;\037\3375\274\261\313M=\330\0167\275\271\264\312\271=\260\003<y\245\355<\271\t\007\275\372\002E=\223\235A\275\226\006G\274M+T\275\024\"\321\274\236\3749\274ce:<\201\263\317<\351vB=:\232\r\275\302_\034=\347\210\227\274S\252\035=\3573N\275\007\020\'\275\022KH\275\037;@<\205\320\323;$\222\n\275\n\273\250\272\326c\250<\350\322\036=G\t\003=~\3062\275\337\t\216<\374\321-=L\340?\273\323\372R\275\326\022\234<\026\331\356\274\351\313\"\275Tb9\275\310\266B\275\236\253\014=\rU\355\272\357\204==\353\320\345\274$n\346\274\026\005\212<)\'\343\273H\246\024<h\tP=\233\270\267\274\212\357\006=j\020Q=\006~\312\2748]!\274.<\021\275\304\264\037=\265\006,=X\1779=`\355\035\275\254\207\206\272\355\377\235\274\232\264\353\272zdC<\300\350P\275\'\200\355\274\007p%\274\346\2631\275\237\210\277<\300w\334\274\343|\010<dY\274\274\235;\010\274\324\300(\275 \\\243\274=\201\010=tR9\275\354\255\030=\303\363-=L\263R\274\301ui;\265TO=\316I%=\360\320\251;\312[\201\274\033(\017\275\033\253\320<2@\026\275\206]\230\274J1\372;t\222\026\275\351\216\362\274\215\371S=\205?L<\"L\310<\345\243%\275\253\225\005\275#\333\t\273M0\207<`\250\237<+#F=#(\007=\233\216\226\274i\0356=\265\353\034=Z\332\345;/\363\030\275\033\242;\274r<\254\274@\314\014=\351S\036<\316\314_<\354\341\017=RA\350<~\343z<\016\216\017\275\0336\025\275E\211\001\275`&&\274\0261C\275\214\212\312<#\362\035\275\333_7=\251Z&\275bAS\275\247\377;<\013\311\303<k\232\024\275&\266\227<\360\244[<1\234\367\274\277\036^\273\244\337\"< \200\203\272\"\224\241\274f;M\274\352\2651=\201\360<=G\016h<R\331\314<v\005A\275\246\000\307\274\375p\203<\365\353<\275*r6<b\266\227\273\275^\005={5\224\273\261\227\223\274\311y\271\273_\333\031\275v\334\217\274\240\353\232\273_9\273<\306q0\275\225\271N\275T\0322\2752QT\275\367\232G=\323\020\263;\240}\210\274\007\2371\275\313\261B8U\337&\275\300\206\036;\345\344+<\310X\237\274\375R\215<v\2260= y\007<\016\266?:\023o0\275s\231\364<@_\031=HV\342;\203\200)=U\340{<\305\031&\275R\323\322\274\376\001x\274v\272I\275\372\334\227<@\013\335<\016\222\335\274x\261\221\274\245a\240;\300\335\037=\014\301_\274\340\315?=\324\245\313<Q\213(\275o\370 <s?4=Dw\t=\361\3235;Bvk<3\233\347\274/\244f\274\236x\005:\027\306*<\004\021\271\274L\360\275<\007\323G\274,\'\263<\362@\010=\267\226\223\274\r\214,\274\267\233(=@\r%=~\275\004=\016.G\275K\226Q=\204\265\246\274\3057\362\274\200\332/\275\233\277&\275;3}<\273\317\n\275\214`\272<\001\244\240<\177q\024=\002\375\217<\277\024\022\275by7=\020&T=\333K\340;\030\275\036=\235i\'\275#>Q\275/\303H=\231L\227\274\360{D=F\216\357\274Q\006\356\274M?\021\275\322\036\377<U%C=5\363==5\261\227<\325\274\352<\262@/=I\215+\275\235\265\212\274\260\225\313<\333]\261<F\323\376<\007A.\275\237\374\226<\354R\373\274APP=\025\305\350\273\255\342U\275\3205\014={x6\275\361SI=\262\310\027=\211\324#\275\224\337\t<\253\305\341\274\306\211\316\274\002\035\370\274\203\210\t\274\270)\271<B8\027\275\n\221\340\274 \342\"=]\335\013<\005k\313<\000\312\215<\334\013\n<J\342\033<\202\337;=\n\301\264<\266\234\356\274\325\235\240<\222\025\227<\027M\363\274\355\265\255;\2230\001=\340.:\2757\364\023\275\233\346\353\274\014\254\300;\013f\222<Ml\320\273\233\336\010<QG\240<~\247\275\271\351A\020=\257K\031\274\256r?\274+\\;\274:\365\275\2742\314A=\030\240\014\275\213\215e<\'sS=\373\345\344\274\270\227)\275\376\300%\275\204\034\037;\325H\343<\345\035\221<\262\241G=\024\361\276\274\021\006G=\340j(\275\340I\021=\367k;<\255^w<X\337\007\275\210\236\375\274 \251#\275\250 9\275O\001\003=\3238\327;\025\353\266;\024\207&<\204\036\001\275\022\321\014;\310IA<x\357\225<W)\220<\013A\005<\335\315\323<{\2033\275\363\355\272:f\216\274\274\034\004\357<\221W\270<h\332\003\275\177 \030<\344\'\034=\"H\330;\343\245\320;\375u@\274fV\t<\2326c<\225Dn;E\021\272;\355\023\272<y\335\261<\217\274!=++Y\274\010`~\274H\270/=\206&A\275\037K\034=1\341?=q\343\323\273\021\236\201<\345m\242\272PO\304<\315\024$=[\223\013\275p\224\345\274nD\323<\250\035\355<q\032{\274\207\t];\252y.\275\"%O=\016f>\275\344\207\013\274\225o\261<W\277\212\274\235\033R\275\263D\006=L\313\023\275Bo\032\275d\3648=\026\201(\275\203\301\250;p*\235<\007_8\275\321i\236\2749\327\227<[S\220\272\335\022\320\274\023=\3629\260\236\373\272\037hE=\314\354s\273\233|J<\305>\375<\255a\320<\275\253\010\275jQ\030\275(Q\265;\254\222\r=\004\263\336\274\035\200\244<\345s\224;\010`\320<)o\377\274%D\2408X\323\235<x\232\201<\212-\020\275\\\022\250\273\022$\344\274\317\327\227\274\225\260\276\273iG\313\273\210G&\275\377\3753=\004]I=\213@\250<t=\244\274\250\207:\275BW\007<\331TD=\021\225\035<\003nO=\205\335H\275\277\003F<H9=\275\237\2250\273\277t/\275\255\340\255\274\217H\001\272\0377@=R\312\336\274\372\257\237;\017\263 <\"\313\035\273\322\335\025\273dQ-<=\014\343<\t\376\317<>\356\202<\020\000E=`$\026=\371\316\205\274}Y,\275\023I\263<\2418\323<\250G*\275\364\315G=-\245\250\273S\217\335<\261}\034\2752\0241;I\351\245\274\035\3312\275\275&P<\022\313\307<\021\377\341\274\030f <&\227B\275\2633@\275\201n\242;\300\207N=\251e\036<\013\256\271\272<\341\323<\210\222\363<&L\256<D\335\275\274\270\317\t={y\226\274\231\257\211\274\340\2758<`Q\032\275m\321\220\2743\0140\274~m\246:\022\332C=\260\205$\273\270\263\024<\224\264v<\220\331\306;\245.*\274aW\306<)\241\026<\002d\"=\377\220P=\325\341\266\274\3204j\274\217y\\:%\340\013=\360r@\274\321\017>\275\300\310\207\274#~\t\275\203q;=\237\266\036=\020\t;=\374\262\r\27469\203\273\240]\024=\311<\346\273d7L<\273\322Y\274n\250\232\274k\215\226\273\260;]\272\351\222M\274BY\253\274\324.\253\274\336\256\251\274\264D\324<\0218-\275\343p\337\274\350v\253\273\210\202W\273\353\3425\275\205\245\020\275\244\250&=EG\026\275\\\247\326\274q66=+\237\032\274\323\302M=\324\240\365<\313\327|<\345\032W\274\354\237\205<\245\340B=)m\370\271M\007\264\273\235\003\001=\022\350\t\275;\3243\275\0251\255<\274\214\022\275\217\265\313<$m\322\274bX\323<\241t\322<\022\306W\274\277\260\330\273\007\266\035=>\027\014\275\322\214@<\007\0207=\270o\034=\007p\024=\246x\344;`ex<\202:\366\274\355y/=\021|\241\273J\210\3408\266\260T\275\3148N<\222a(\275\215h\342\273E\275K\275\031\270*\275k\351\255<\354\354\024\2744\213\370<>#\333\274\223\375=\275V\363\375\274\023\344H\275\266\236%=\361&\234;\373\252\243<\013\007\020\275\177u:=0\340>=\023\235\316\2745\206\202<CI\226;\216\006;=\202{\002\275e\3249=\014`\260\273\235\306\310<@4\032=\305\365b;~\344T\275i\320\006=%m\364<N*T\275\3575\304<\324\035\374<\3701\023\275Dj;=\252\273\335;\255^%=*b<\274\206\t\253\273*\227!=\372\361\013<CYJ\275\246\020\010\275\341\275\006\275\330\344\006=A\200\016\275\352\226Q\275-\246\233\274\207\037S=A\211\236<\037&)=o\332!=\343f*\275I\2775\275<\322\037=\305\0366;\001(?=Q\3767=\271X\361\273Kt\023=\010#P=x\370\032\274\355[\356\274\206\321\r\275\320\331*\274\0005\220\274\016d%=*\230\347<\203s\020\275\207\224\003\275\203\037)=\013\237\255;\221\355\325<\261K\213:=*\2778s\265\254\272~^\343\274\364\000\311\274\013)\027\274\2543\324\274+\014+\275\037\361\245\274I\215N=-j4\2755\332;=\243\035\261;v\233a;#\"\003\275\0001\001<V\262\355\274>\247\270\274\225\243\301<\271A\336<\3404\215<\307N\306<\234zU\275p\254?\2754>\033\275\305\357\305\273\344\r8=!\213\027\275Z`\014\275C\372\020=_}\321\274_\346\022=)%a<\344s\027\275\013\037C\275\202v\314\274\306\227\023=6\214\000\275C\251)\275#\365m<\025\272?\275(u\037=\232\270\030<\205\021\031\275\\\002\333;bkQ\275\024\203\363\273\372\035 \275\324\214\370\273m\001@=\001\022\211\274\3021\247<#\210U\275\271\222\200\274\356\364\365<-\272\301\272\374K\274;D\027\237<\002\036S\274Du\014=\010\3160\275\307\220\026=\304\341\311\274.\260\t=|\033\247\274\177D\000\275\205\352\235<\241\013B\275\"t\357\274\326r\356\274\220T\223<u\377\313<K6\n\275\217\036\020=Y\3566=m0A=\247k\247;\031\025\027\274\024u\360<\321\345u<\344\333\020<^d\037\275`\010-\275\344e\352<\324\341\341\274\370Q\200\274uW\004\275=\375B\275\246_I=\350\225\246\273\031\236P\275\307\022\"\275#)\010\275\334\344@=\350\322\261\274\311t)\275\347\251\257\274\2179\204\272\271\3502;\340\247<\275\225iJ=Kg\236;p\216=\275d\320\013<a{.\275\246\2403\274P\257L\275x\245\017=\250\350\302<\320\200.\275\333\024\034=\252k\206\274\337\375u<6\233U=/Z\246<\006\246E\274O\273@\275iT,<\244\t\363\273\306c\225<d\006\315\273\315LY\274 \222?<UX\212\273\341\224\226\274=\306\256\274($\014=\350sM\273U\203\220<\2638*\275\257\305\304\274\372B\010=\013\237\276<\204\277M=\223`G\274~\214p;kX\226<\222\266$<3\327\336\274u\001\200<\202\301\315;,)\021==X\032=\306m\016=\320\222\031=\265HA\274t>\266\274\321\343\014\275\014\0145\275\325\333F\275\231\211D\275eh\370<\333\'\247;\222\001:=\177J#=5\273G\2744\210+<\312\230F\275\314\034@=\322\036<=!U;=I\246\277<\376\2073\275\335\246\013=\364\257\356\273;\3430\274\364,\323<u.\207<\241\335+=\203\350\017\275\002\211\022=\026.N\275\342\024\031\275\013Nj<\200,\"<\255%\027\275D7\331;e*\033\275\372\007\024=\032\254\255<\254\254\232<\341%\363\274\010\3533=w3\363\274\006OA\274\216\202\031=R\001\377\274o\000\200\273\223\251\206\274(!F<\263;y\274\243\0246=\213O\362\274\306O\326\274)\357\215<t\031\341\274\267\025_<.s\035=\375K\001\275\300<\247<\205\273\017;\271\024\312\274\372\257L\275O[K\275(\206\007=M\235O=\3333=<oe0\2753\207\355<\031Z\010\274z\252\"\275R;\330<\302\330\030=\240B\311<\275S\271\274\013\177:=\223\354\000\274\254\260\352\274\003\344\016\275a37<\327`@=\323\0034=.s;\275b|a\274\341\350\333\274\017\210q\273\246\345\234<\242\227A=\nj\211\274~ \356<\302O\243<\350w\225\274~\200\177\274\272t\377\274\021\226\234<&<\346<h\310$\275\226\352?<\3014B=(\3559=\242E\317<\2014=\275\316\365^\273\321\035\371\274N!\343<i\360S\275\301\230C\275rD\014<W\253\236<\373tg<\205H\247\274\320AF\275r6?\274\022\213\244\274>V\264;\257u\227<\324\343\375\274\243^\020=aZ\036\275\234o\034\274\215\370\370\274\177\253\250\274D\236\271<\307\231\231<\000\301L=\346S\316<\255y\346\274\027\337\323\271y\234\257\2737\203O\275*?w\274\306\335\340;\216\263\342\274\030v0=E\356\017=<(\312\272G \022=i\345E=J\256\n<\316\002\022\275x\202\304;\307\315)=\224]\312<S\310\356<\000wL\275gx\354<\274\267\272;^\023\361\274\0256\215<\357\003\032\275#]\031\275\014\233B<\320C\013\275\260\224C=\3700T=\302.6=\272;t\272\222\031\242\273\276:9\274k\265S=\037\265)\275yq&\275\017\316\206<\217\026G\275\202\017M=\rJ+\274(\326\001=[/\014<[ \253\274\020\221@\275\006\007\212<\032\234M;;\005T\274\202\231h\273\2551\000=G\355\236<\361%\330<\316\320\363<\366b\033\274\306Z\225<\341\327\300<\001\000\336<\"\210 \275m\361\373<\r\226\000\275J\n,=\356Q\365<o\357Q\275\301\333P\275\263++\275\250>!;\255\3021=l\241\022\274]HU=\253\212\211;k\214D\274&\234\036\275\262|(=*\0344\275?\231.=F\227#=\007\267\264<\331\204\025=\210j\r<\332\305&\275\301\353Z\274\322R\r\275\303\264\217\273c\350n<\331\033\373\274K\347F\274\211\221N\275\376\227p<\271\"T\274\272\"}<\277\236;=\366\273A=\000\003\354<\217?\211;\007\365\253\274\r\377M=\245\257#<\231FH<\334\356\222<{\3254<\273\324\t\275\203\346\263\273\n\356\211\274E+\r\275oq\301\274\220\353:\275\230\036\325<\367T/\274z7\374\273\270\325n;\264\335\021=\000\217\344\274B\037\224\274\371\t\r\275\025Cy<\252\345e<\001\t\246:\217g\013=\253\030r9]\364F\275C\352\212\274t_;<\241yo\274%\327\037\275~\023\274\274-!-\274\221\205I\272T\213\325\273?\212\222:\010L\337\274:\266<=D:\346<\270(\242\274\274\002P=U\352\271\274\013J\003=\324\315\001\275:;T=0\253\006:\321\000\027\275]\234(=\331\004\233<J\232\017=^\335#=\373`\001\2750\313`\274-\373\257<\017{\306<\272\341\312<^s\230<\220\245P\273\237\257U=][?\275\251\036/<\254>O\275\213:\030\275\236\205q<\022\267\364\272PF1=\032\225\330<fW.=\244o)\275\364\227\004=AB0\275*?E\274Nho;\351k\311\274\351G\016\275\'\220\345<>l\331<RY^<g(\303\274`\343T<j\277\341\274\276\203\357<\026\333\363\274\366\363\025\274\227\326\230<\006\252\313\274\243\317\251<\030p\311\274\226\326\217\274\365\346\375<\200gO\275i\347\245<\005\342\027=NaO=\256\267J<\345\032\307\274\336p#\275\263\0243=\221u\'=@:U\275pP\\<\032\037\220<\310\000\307;\207\207\025=\375mP=\304\247n<\224\3344;Ki.\274\025\266@\274\343\355\356< \206\310<?\300_\274\022\371\353<\270 \032\275\372\372\":\252\362.\275y\025D=\355\314R=\300\016\353<\311\242\022\275;}0=t\241D=\262\3262=I\310\361\272g\377\020=\202\200\005<GXD\275\007\235\246\274\373\354,\275r\364\241\273\240=5\274!0L<ZHU\274u\366=\275\316\272\003\272D\225\001=9t%=\0368\027=\025t\006\275\206\'\356\274\337\361\034\275\t\322\027\275x\3513\275\301l\277<=\326!\275r\023u<=\033\003=)\003\024;\304\302\"=_\316\010\275W\321f\2743j\344<\225.B\275\341\350\237\274x\366\277;\006f\265\274\211\345 =,\241J<\363j;\275F\336U=\277\310A=\257\3419=\224\340\307<\210T\240\273\325\300\240\273\355\315\335\274+\250_<v\001=\275\"\271;=\210$\025\275\206\034\334<\025\300\256\271\026\324z<b\341I<HB5=\375\224\204\274 !\037=sW\211\273\335\007\356<\031\333S=\t[E\275\362\313\020=\226\202\200<\275\267\320<\265\nF=\363\203\261\273\360\352\364\274\322\002\033=\220\235J\275\204\222\216<\326D\021=r\326\006\275JKZ\274\217_\306\273\nX\036=\272\3471\274E\323\211;\346M\314\274x\243B<\262Z,\275O&==\346\002\217<\"\363\024\274\353\255|\274\375OC\275\336>]<8\351&\275\270\375\203<\307?\351<B%K\275\200\016\261\274s\267\202;8\275\375\274\035\370Y;X\273O=KJ\373<\354d\373<\241\037\225;B1\033\275|\374\256;\247R\027\275xUN\275\353\317\031\275\251\025\010=\353\330\250\274\203\224\266\274L\221C\274\327\337\300<\345\342U\275\t\252\035=\354\342\347\273\245,H\274Y\360<=\2374\036\275\361\014\343<\245}\232;G\377.9Y\303\363\274\337\2402\275\"\232.=\275%\014=\036nX\274\277\342\371\274\325\276;\274\312\341m;\013\027\362<\203\302N\275B\233(\275\215h\314\274\232\234\301\274^\220;\275z\236h;\256\265@\275\251\241\222\273-\'<=N\263\214\274\304BB\275\247\334J=\271\203\224\274\307\262\251\274>\031==t\225\274<\221\336\"<\255$)=gw\334<r\3033\275\366\266\273<\335\246\037\275n\021\205;\251\232\'\275Q1\252<\234\234\307<h\026U\275N;\'\275\030\t\027\275Al.=\266/\"\274c\237\037\275N\351>=\235\336.=d_\r\275\260\241\213\274\367w:<t\010A=x\337\027=\353\202;=v\032w;\200V\005=<=\024<w\222i\274q\331&\275\306\265J\275\214}x\274\364\200\025=\241n4=S\315\262\274&\303\222\2743\007\366\274\254\262\220\274\\\037\022\275J\345,<^\n\345;\246\226;=i7\315\273o?~<*}\322\274\253\272\t=\034x\260<PZ\276\274\336jW\274&\274\022\275\367\261\005\273!\265\000\273gx\031<\202\216#\275o\210.=\006&Q=3Q,\275`\r&\273\210\223\326\274\036\025/;\241\2370\275\362\304\200\272\217\3468\274\035-+=+\332\320<\r\211m:\232\2032=B\003N=\270\304>\275.\035\253<\315\367\343\274\203\300\321<a\352\202;\334\244\004\274\335*$\275\356^\016\275\352\263\n\275\002\027+\275\026=\033=)\232\324\274{{\240<\325L(\275\324\362#=\313|\017\275\207\017\206\274\325\315\250\272\302]\250<\246g,<kXD=\321\366\361\274\250\241!=\275\313T\275\373\306\242< \204\343<\334$\317\274\255\036\024\275\375(3=5\333L;\263\324\014=\227\022\337<R~A\275\2030\340\274\003\254P\275\256w\343\273F\247\364<S\262\265\274&gS\275&E\025\275\240\026\200<\271WH\275?\'E=\234\213:\275m\276\013\274\272\316+=\357W6\274A\316/=\210^\227\274\311\013\203\274\376\345 \275f\357\004\275\235\030/=\026Oq\274\244h\025=\226\232:=\343\r!;_\316.=Vr\236\273V\016\200<\311\270\273<\245\261W\274\214\331\262<\200K\202;x\310\217<|\336#\275\252\344\177;cW\211<\363G\243;a9;\274\321\346\316<7\007\237\272\022\036\270\274\265}\005=\301?/\275\216\312\256;\342\220\333;\016\014\331<G\003K\274x\2536=W\356\021\2756,{\274\233$\033\275\233\223F\275h\244\003=U=\357\274\334\354 \275\220\313\335;\375\2348<\025\245!<\235\217\000\275\370v!=\311\222Z<\010)\031<\357\370\206<\222\251\200\274\256\001\003\274O#\213<\373\275\025\274\343\r\227\274\210\312(=5\001\322<\251F\252\274\261]\321\274\317xt\274 \235B\275\213\n\371<\273\265\036<p,\213\274\014\234/\272\2450\'=\212\206U\275\304\206>\274A\237%=t\357-=\270T\236\273\354z\311\274*\275\027\275\326\224\002=\033\030f;\031\001_<\212\004\327<\230\354\"<I\214\024\275{\370N<\341j\002\275\323n7;-\317X<\034\345A<P\373\275\274Je\030=mq\270\274\303L\"\275\023\300\300:\217d\324<\023X\200\274\313\376\373\271\217\361x<\241\305C\274g\315\317\274\314\371?<\326\244\270<\254\024\220;\305c\243\274\251\265\t\275Zi\341<\001WG\275\334\252\340<\244\364\001\274\255\273\004\2756\tG=?\257\341<\335\212[<B\024\372\274\177y\364<\007`\025\275\030 \227< \250/\275Zn\201<\255E%\275i\025M\275\265\3452=%\376P=|\327C\275\206\250d<\300-;\275B\301\020\275\257\207C9\2212\275<\335\255\336<\253\325\273<\306#\326<\224\273\353:Sw\350\274\276\224K<#W=\275\345\3326\274P\2735=_\346 =+\342\256<\302A)\274\315\352>\275\321j\362<\345R8=N\224S=\260\265;=\311\221\t\275\274+\037=\335\377/\275\263\3049\275q\343\001=Q\252+\275=\316\260;\261t\036\275\211\371\006\274\306\217&<\036\253,=]\031@=\202\324\354\274\256[[\274\3151\033\275\254\033\003\2753\026\n\275(\226\023\275t\340\036\275\204\326\323<\326\215(=\373\336%\275\204\265N\273\256\323\242\272\177w\023\275d\356\001=\203\3112\275\nn\334<x\217\235<\254R.:ZY~;5y\230;\037i\251\273d\231\001=>\254\261<\022g\373\274p\362;=Cz\245<\255\001\263<K\276\032<K\267\317\273\023\366\312\273\364\233L\275\255}\212<o\036B=\200\216\021<~\215<\275\341\343\325\274\267\233\216<\350\005t\273\305\245\005=\303\351\004=\005\307/=5\227\016=\217\262H=\212\210\324\273(\241\270<Hsh\274\271\351\202\274\346\213z<\304h^<^\\#\273\300\225\341<\313Y\206\274\345\226\027\275\022\256F\275\"\255w\274Y\346\007=\031\254:=R\375\r=\371\335\377\274K\267G\275\202\322\r=\264\266S=>\0149=\241#\324\274E\036\245<\377\276N\275\331\321\312\274\373Z\301;\337\022\003\275W\207\002:\232K_\274\272\2741=4ve\274\270K\375\273\251\223\274\274\204\266r\274t\204G\2750\270L=\270\016\265\274\030\305\'\273+\241\023\275\375f>=\270\276\244:Ea\331\274\251\331\377<\241\201\005\274zV-\275\362E\313\274\277\n\033\272@XL\274\337\r\017;\021\227\245<\035\017\374\274!\354\036=\007\"+=\25077=\252~\027\274)\320\233<\277\260)\275u3,\275\304\n5\275\274W\027\275>\3478=\002#\020=\270J\276<\316\361\203;\213\252\002=\200a+\275\322\207\324\274r\025a;\246r;=m\312\022=\364\346\211< \355\301<+rL=1\334!\275\000\330\367<\266\202\332;\233\361:\274\223\3073=Sc\023=F\026/=q\262T\275\372\324\253;D\367\364:\314\315\004=\313\005\001\275\345\362)=\226_\026\275\231%\036=\372\366\374;t\2145=;\205@<L\270\260<\312\"\032\275\200&\254;w\224+\275\227m+=7\305\376<\242\033-\275\256UH=\234\\L\275\236\312\013\275\245\2564\275\337Q\300;<\377@\273\262\2442<Swb\274\336&\202;@\221\320\274\250\223G=\352\214Y;;t\314<\023;\221<\022f\337<\325\313\035\275\326\337\000<(=\277\274\016q/\275\320D\337\274\3578\266<\374\266/=\344\340j<\377S.\272\222s\342;yq3\275U\347w<f\317v<\340Q&\275\366\202;\275\217rM\274x\3158\275\351\336\365<\357]\t\275r\222\300\274\357\274\036\274\224\307\362\273\034\365\320<\272\364 \2738SP9\236\331\243\274\325\375B\274L\336\033=\"\275(\275P`}<Wt\354\273\303\004\313<n\260\254\274\267\330\262:w\370F=\'\034\016\275)\3518\274u\020D=\221\314\353\274\316\376\027=\036\331\345<\037\370&\274\357\354\330<\255\004Q\275\026NQ;\225\243\016\275\351Z\204<\224\032\200<\325eO\275\201k\301\273\000mw\272\271\032\261<\360\246!\274\243b\262;k\0329=\t\201\033\275\030\301\n;G\301N;3\016H\275\005\214\241<\376\301\014\275\002XB=\'\277\001=\375F\363<\350r\357<5\216\230<\345\nB\275\264\213\211\274\3065S<\302\311.<q\222\271<\234\270\301\272O\3235\275\334\217>=\245\246\213;\302\230\272\274(\377_\274#\031\340\274H\014\342\274\305)\241<[\353\377;\245eN<lkM\274\350@Y;7\344\212\274\337\230*\271&J\035<yX\031=<;\007\273\024\253\307\272\\TA=\017r\032<\266S\320\274\316+\343;\004\246\017=\325\0367=z\273\256<\355\225A=zH\020=KW*\275\233\202<=\212B[;v\307\353<\205\313\327<\357\324I=\254\312\033\2757fL\275.*\023=; \007\275t\225\241\274}\016\005=Y\001\003=(\3540=\003\343\261\274\226\355j\273:\2127<\310\247\303<\002\373\252<C\226\325\271&^\260</x&=\205\005\362<7\346p;)\2147<\224\370\361<(p8=\301^\273<czl<\363\213\233\274~j7\275\320\366\260;\2072#=)n\017\275yb\260\273x\202\204<FY6=\342<\r\2756\3310=Q\267\306\274`\342\"=\242\210\033\275\212\357\370\274\356\023\023\274\006\005\017\275/\350\r=`)\020\275\023\302P=Ui\026=\001\361:<\n\214\r\275&\262Y<\222\227\036={m\031=\257\r\203\274 e<\274\301q\317\274\313k\365<\244CU=\320P\023\275\n\251q<&ZJ\274\332v-\2755&\027\275\035:\351\274\2739x\274\302Q\305<m\323\031=\335TR=q\253\233<\213\344\210< \010\036=\303.<=\3466+=\246\246J=\202\210H\273\331\275!\275M\003\213\273\323\320\331<\004\257[\273k\024\361\274-\240>=t=\260<e/\270<\255\336\234<k\001\027\274\035L\362\272\375)\001=\211$\357<\025+1=\373\343C<\331[L;.\231$\275\3603\023=fo\362\273\276\241j<$~\032=Y\225\334\274\374\253&\275z\2543\275\001\025\206<&\325H\275\230c\013\275O\235 =9E\224;x%\265<\266R\004=\260t\276\274R\032m\274\237k\235;\031\2611;\n\205\243<\023:1=\003\r};&\215M=r\326\312<o\340\330\274\215h\223\274\262\352\235</\227j<\277\265\212\274\035\350\312<\365\240\327\273\272\270\340<\262\274\325<\022\337O<\323\034C\275\312x\342<\250v\002=6\235A\275\242\235\016=\262\032\362<\363c\026\275~\017%\275R\033\357<`k\036=\206\005(=\275\375L=e)\267\274/\313\377<%\216\335\274\372\001=\275\010\2522=\374\000\207<9\177$\274\275g\226\274\376\266\006=#E;\273.\346\302<(\233f<S\252\017\275\"Q\356<\024)\350\274\202\027\026\274\237\024\220<>\363 =5\\\037\275\022t\234\274_rL=\345\016\007=\006\021\207\274\\\223\272<\2271\352\2737q0\275\227\027\253\274F\033R\274\351\365?==\030]<\351\227\004=\352\2450=>\236\252<\254\177\323<g\014\027\275m\206\271\267\243\337\346<\246M;=\230\026u\274&#\004\274\303&\277<](\016\275\311k\010\275\303!\375;\275U\030\275W\254\245<S\016>=\313]\025=#\037\342\274#\344D\275\203~\200<\301\250S=!\231\207\272\t_@\275\373\036@<\376D\313<n\226A=r$%\275\220\216\322\274\256\234\036<\024\307F=\177)\023<\013\365B\275\t\206\341<r9\245\274\232\000\"\275N\343\020=\373\370\016=\376\320\005\275#\327\314<<!\021\275x~8\273{\334M\274\223=-\275\0137\010\275\312\024\003=I9&\275\262\242\272\274\214\323\024\275\226hj<q)\"=\263\367\342\273\252*t\273\300\372\033<`\335\025=\232\360:\274t5N<\217\\\002=G\233\246<]=\242\274\177\305\026=\3604l\27282\260\274l\265o<\300H\030\274\336|\r=\222 .=\333W\r<*_ =\216\360&\275=q\353;\351\2262\274\315x\261\274V\374\214\271+\177\300<D\261\001\275A\266+\275\270\275P\275\002*\364<2\332\375<\345\343U\273\335\330\310\274U\350\315<D\235\035\275\013\363\314;%\362\023<>eK\275\353\375\315\273lx\r\274\250\216\001=\366\026p<.2\311<U\304\032\275\035\372\346;\013\352>\275\352\022\362<E\372\366;&\034\002\275\332\321)<\315\\C\275qj.\275s;\021<0\254_<\335\336h\274\317\376<\274\315\307\027=\373\220C;\215\260\314<\215\332R\2752\244i<\261|\340<J\354D=O\022)\275\320<\312\274\031\345\205\274\313}\000\275\r\377\227<$t\'\275\276Yv\274\250\3131=r\371\326\274\375\320\244;\025Q3\275\361\227\017=\231\304D\275P\213\013\275\335\036\223<%\335\036\275D~\320<\312o\276;`T<\275\237|+;\rZ4\2758)\375\274-)-\274\201\373\014=IE]<\225\232-=N\006\001<h\2016\273\332\024\324<Dk\320<\210\"\236<c\271F\275fS\371\274\340\357<\275\211s:\273\324v\220;\313\257P\275\300\010\304<\035=[\274\302\374\370\274\222@J=\345\212\200\274\201\3209;2\250R<\'\r\014\275l\353\214<\262\026\244<Y&Z<\023\357O\275\260\231=\275T\022\327<b\343\025\274\033\276\315<\343HD\275\240\371k<k \320\274\362?\032=O\202\017\275)Z\351<[\353\232\274\264\254\344<?mL\275(\005\021\275\355\033\321<\005\332E=n\321Q=\002Y\007\275\310#2\275P\002\'\274]\367\025\275\364\210\224;\351mF\275\271.\370\274A\246\265<\253y\'\2753\030?<&\273\351;\301\000#=\257\302\340<k\270\236\274\310\257R=2\364\312\274\335\372\026\275v\321\265\274H\236H=\232\265\345\274\343S\016=!\2778\275\207\207\274<\333\325\205\273Q\342u\273\213\216\331\274\030,\314;\222d9<.\346\207<,\225\376:\035\220\363\274\242\010\267<\331\371\203\273QNM\275oX\356<ul\370\274\322\007p<\002\270@=\031n\321\274\373\017\216<L(!=u\253\371\274\203\320S=_\207\037=S;@=@A\024\275\301,\375\2744\212\255\273\303\3045\274\272\361<\275(\014\347<{\247\212\272Ab\010\274\371V\254<\010\313\000\275\334\347==\005\206E=\2510\276;\2155\017\275\327\3447\275\235\210,<\370\351&\275Z\r\000=\"\206\351\274&\316L\275V\330\312<\266e\024\274\027\366\331<\010L\001=\277\024\333\274p\321B\274K\246 =0\'\344\274\330\n\017=\030<\027<-\363Y\274?\216\2479\021T\036=3W\034;<\223\231\274\303/\220\274\300\2050\275^\222?<U\0167=\371\177\207\274\300\206\025\275\345\245\210;\343u<=p\317y<K\335\232\274\037\305H\275n\n\003;M,\200\274^\307\030<E\263\005=\207\000==\001g\374\274_\210\033=z\263\332<\013B\t=7g\316<\2721\222\273\356z\225<u|\215<\000\265\"=\016\317\340\273\316f\235\273\032\355G\275w)\023\275\244\302\310<\251S\033\275]\374\r=;\351\323<]\003H\275\344\313\021=\035/\037=\002R4\275l\251N=\301\226\255<\237b\006\275\004\312\265\274\337\"\360\273l=#=\030#\202<\301\3179=\335x\245\273\030q\241\274\271\033\035=s\207\237;d\033\016=\347C\'\275\374\337:<Q\n\201<6\371\235\273\267F\t=8r\232<\352l\006=\264\030\027<~\256\326;n\311\\<\257!\247<]\272\210<\350\026\270\273\035/L\275)\375\352<\255\327\234\274v(1\275^\304\254\273\334\351\314<\301\303n\274\341\273L<\002\224\r<\357\345\345\273\273\214+<\377h\037\275p\306\341\274\351l\255<\275\360\252\274\342A#=Oh\022<\303J\272\274\023\213(<]\322\033\274\377O\356<\225)Q=N5\024\275\324\324\026\275\375\264\336<\034;\036\275\267\314\214<K \241<;UJ=\202\223\371\273$[\377<[a\000=\340\213@<\233?K=wFS<t\373\354<h\205O\2751\017\261:Iex<\336\311\330\274\236D\004=\0071!<\362\\Q=\330\260S\275\037\020\006\275\370\252\213<U\373\272\274\336\366.=}l\024\275\033\242\260<R\266\225\274\340\264\323<H\317\264\274|\252T=?Bf\274\350\224p\273\314S\034=]\226\264\273~&\000\275\271G=<\321(\000\275\301\324-\275\201\344<\274\301\2611\275\261\026\343\274\310/M\275\344\353\252\274e\361\000\275\325\3118=\216\333\302\274`\274\224<\211\222H=\363T\363<p\274\017\273\255\032)<\"f@=\321Z/\275\302{\033=\212\257J\275\010hk\274u6\302\274\\-\271\274]\314\263<\360\025#\275\306\037\035\275|C\010\275D\254\037\275b\215\221\274s\311\233\274\314\021\266<\267Q\277\272\024\260\017\275N\233\227<jW\021=<\004\353\274\331\226L<\324p\374<\345\320&=\272\304\336\274\355\262\034={t\007=j\261G=\306\276R=\275=\202<@\005\'=`\003\026<\231K9\275\277\323\234<\215\357\n\275\024\341\332<\236\366\357\273J\321\001\2743\035\022\275l\235\203<\301H\022\274\346\354=\275\220\346\027=\206bG\275\241\345\206\274X \030\274\033+\277<;\\h:\230\030C\275tp\332<\035\315\255<\270\023\006:B\177\177:\374\020.<\210\301x\274?\256\356;\251$|<4Q\341\273\371\316\016\275\350\2323\272\254\250\300\273?1\017=\023\333&=7\020$=\346s\217\2742(\366\274\247\323\275<\274\324+=\360\314V:o#\304<,\322O\275n\200R\275H\3507={\303\032\275D\020\001<\255z\361\273\255;\272<\266\r\017=e\3053=&\036\027\275\207F \275\332\315\006= d\305;\360\201Q\274d\330D\274>\002\255\272\314\006\340\274L\013==\202\035\001=~\004\344<\211S&\274\207\247\034=\037\316N=J\326%\275Yu8\275\3568\000\275\330<\327\273\177~\246\274\235b3\274\302\246\212\274\027b4\275[\305\027\2750\334\020\274\r\r\033\275]\302:<`0\307\2743\217\247;{\236\310;\305i\200\274W\261\202\274\301\026\362<\340h\010\274\253t\013=\\B-\2759\323\341\272\265\306\377\273\003zO\274\263\371\306\274\231\333\017=?=\227<sl \275\021\241\000<\245\256C=c\022*\275\023XD=\376\356f\2747\033(\274\274\302\270\274\r\256I=zL<<\372\330\272\2749\205\016=\230x]\274&\362\020=M\rC=\331\350\214\274\214\362\010=\333\232\246<p\363\242\274)M\000=\324Q&\275\346\266\"\275\315\037<=jo\326<h\267\206;\201\277S\274\323dG;5d9\275\270\200\275:\217\222o\274\330%Q\274\353\240\261\274a\220\331\274T\207\251<\205\203\372<b\034\370\274\025j\006=\273s\023\275\331\304\315\274\255\020B=0V\343;\340>O=k\374M\275E\014\344\273.\267\266\274\372F\t=\360\234H\275sL\t\275p7i:\334q\321\272\302\362\365\274\244x)=\306\365\006=\312\256.=\276+\033\275!\213(\275\314F\243\2747\013\3179N\253\304<B\205\347<,\335F\274N\303K=@a\245<\203\310\3069\201\0275\275\216\3369=\260\3464=I\0214=\203[ \274\311e\t<y\234\'=|\340\326<!\272\274\273\350\322Q=\013\322A<\231\235Y\274\364\326\231<\205\241/=>\212B\2759\351\023\275\203\325\246\274\365\313\342<c\3513=T.w\272\314e\244\273\026\033R=\235\014\261\273>6\341\2740\266:\274\314Q\274<M\314\025=_\236\261\272\227\030+;3\0037\274J\027H\275\360\355\302\274c\257-\275\225\362\272\274\262\017(<\213\006e<Q\301\371\274\000^\035\275\310\341J=\377\236.=\230\267\016=\271w\236;r8\037\274T\372\260\272\241\030\247<\201a\274\274\310\203\224\274\273\252\315\274\345\245\301\2730\250\021=\300dN\274K`\021=\331\001>\275H\212,=\357\310\260<|\217f\273\024\335\377;kMU\275W~0=B\225\343<\371\371\273\274\327\351\000<\271\223\223\274\314\356#\275\206^\'\274\271A\304;uYG\275\300\247\r=\367\005\260\272s\362\377<\367o6\275\032tK<+\254\022=\363*\037\275\350@\001\274\004\233\240:F)#\275\365\265\264;\250\327%\275\247\361\261<\315\272<=\306\324\203;\255\263\225;\300\177\301<{N\372<\341 \337<\212\202\236<\273)\025\275G\256\267:\242Y\347<n\014\034=;;\205\274\201M\245<3\311\353\274C\360,\275Y\321P=\23244<\323Q\343\274\3741\033\274\353\366 \275K\232\230\274<\372*\275o\224\241\2743\305J=\"\265b<K\247D\275~V\322\273\230\245K\274\202\025\254<\361\333\262<\344\264M;\277#R\275yFE\275\3430\034\275\215\355\035<D\'\207<\347\300$=M\236\265\274\026`\033=>\034?\275\213[G\275%]7=\220`\023=\357\336/\275d?P=R\0312=\017-3=.j7=\261\225\244<\231J\326<\031$K\274\234\260\177\273\346\321\001\274P\242\234\274\033\313\020=Q\3219=\373\227\201\274L\241\25090\233%=\317\3078=h\316\254<\322\234\261\274\273\210\330<5\354\222:\240\243\356\273\266m*\274O\3123=Hy\031\275j\200\017;I\004(\275*\277\231<\240\257\366\274\205\340\230;\214\3618=\221\205\021\275g\331\310;\230\356W<-\250\000\274+7-\275\224\024\013\275\335bf;\231\037U=S\006\033\275\010\024\302;#\0325=\357\330\021\274\314\373]<\271\351\305<\017\005\355\274\202S><\340\257\017\275\002W?\273\214\266?=4{C=\351\200\t\275\317B)=\023v\365\274\255\0041=T\227\232\274\231\021\275:a\342\013\275\265\375\275\274\361\nJ\275\225\300L=u\'1\274N\361\362\274\225XH\275C\374\303\274\211B\347<\316\216\034\275\357Y\221<\320\036\331\274alp\274\302\2728\275?(;;\n\246G=|@D<\224\313\326\274<\232N\275\007\235\374\273k?\340\274\213[\314\274\007@\357\274\022\371\276\274,}Z<)\t\374\274\337\314\311\274?\226\277<3\177(\275\316\037\313;\313H\250\273\230\204\036\275p\021,\275-\231B\275\347\271\352\274?wA\275\266U\306\274jvP=\214\225\027\275\205\274#\274\010\'\370\273%\005L\275\375^\267\273W\223\243<\211\255U\275+\t?\275\243b\371;$\362A\275.\352\3269\020L<<3\373 =a\006K\275DP\023\275k\362m\274*\263\247<\261%\336<\010uL\275\340)L\275\360\371\351;.\004<=3\330\323\274\002\t\366\274s\313\201;0\250\000\275\307\237\240\274\307}T<\223*\033\275B\237\n\275\207H\256\273\345w\006\275&\035?=f2\327<+@\001\275d\304#=\262\345\247\272\226\310:\275!\371\245<M\312$\274?\277\236\273\375\021\357<\364 <=S\261-\275z*\037<@X\232<\337\332\305\274\022\302)\275\302\025}<3L4\275\2409%=\243\213\037\275\214h\232<\036J\032=\037\203\r=oIK==\230Y\2749\361K;3vO\275e\247\211\273\227D\242\274Z\201\030\275G}\216\274R\242-\275\254\227C;\307|4\275\250\021\225<\326\211\242<\007\332\027=V\273\n=\264+\010\274;\266\310<\210\260\004\275Y\010/\275\301\017\263\274d\002\023=\005\266\'\274d\031\207;\375\307>=,\320\206\274\035\250\331\274\317\336%\275\215\204\357<\246\247\312\273q\"\342\2749\336\335\274\233=A=U\0309=\305\232\314;\020\352\311\274a\376#;\317\236\343<\334-\321\274\217&*=\255\310S=g\203\307\273\343\273\034\275\023\361p<\326\343m<\234b\225<\020\351\361\274\345X%;3i!;\261G\343<\345E\000=C\3646\273\360\252N\275k\301\033\274\022\2549\274\265O\211<\210&\266\274+\267\\:V*\201<\232]\'\275\212\243\007<\203\232\022\275\351\275\314;W,\325\274\301\033\014<\207lT=\221B\021;B\356_;Fh\261<\277\210\301;\033\321\337;\200E\020:\037~O\275`\000\207<\272R\230\274\360\376\036=\t\246\022\275H\r\375<\216M\351\274\316h\234\274\376e\342<[\375\200\2749\253\001=\221\347\260\272o\313B<\305q\355\273 <1=\265N\351<G\030\253<\244\230A\275\026\262\035\275\2362G<\202\005D=z\020}\273l\271\364<B\354\313\274\311\277\337\273m\373-\275\264\031\310<A\270\206\274\024VF\275k\212O=\350\\U\275\007VR=\305\216\025=m\350\277\272\327n\250\273V\335 \275\n<P\274\337\223d\272k\353];a9\024\274r\003#\275{\300\340<zu`<f?\265<\260\177\222<>q\3719[\312:\275b7#\275\252\247\t=\347\023E\275\245\247\364\274\017\251\034=/\035\355\274k\325\337<*\355\2578\225\266;=\264\177\235<\201&\316;\205KA=n\365\037\274l\277\021=\332E+\274\027\264\\<\305\013\334\272G\317I\275i\3612=\316\251\223<\344-\031\275\036.;=\210\371!\275\260w6=\'jI\275m\221\234<w :\274\233:m<\020\215\364\2740(\206\273\006\3441=\336\232J\275\000\274\267<\247\352\327\274]\375\027\275\020\230Z<\2458\201<\031\306-<\206\220\331<\266Z\223\274\246\363P\275\354c(\275{1\014<A\322\273<x>9=\036C\006\275\301\315\206<rw\267<\311\301\321<\226F!=\353V\355\274\310A0\275\233\304q\272\374C1<\033\".\275\230?t<6\3722;\200\317\'=\010\217\346\2746\353\205<\013T)\275rY!\275\236T\214\273\217\002#\275#n4\275 -\t\275:\241\205\2742:A\275\021K\301\274_\014\334:\277s\223<\303\022+=\330\223\273<4\2574\275\223\243\213<\317\3457\275\201&\346<=\363\2329KZ\225\273\244\221\215\273\345\3523=\341\r\004=0/\264<\350\242\003=/\352\n\274\2767\220<\261\021z:\3434\r;\247#\303\274d>!=\356\373\336<W.\315<\017m6\275\371c\240\274Hi\022=i/\020\275Hf\301<\211\247\300<\021W\234\274Wl\016\273\243\246\024=\343V/=\220W\003=L,&=\352\325\"\275\326\353\253\274\250\001[\2725S:\275[h\222\274B\254\372\274X\030&=)\006\256<\352b\327\274\3062\355\2745x@=\352\240:\275\202\361\246<\324\255\236\274\021)\342\274\213\344\345<\271\222J\275\375(f<\260$\352\273\272\355\263</\276\242\274W\300\275;\243\236\t\274\203\233 =\324]\232\274\201\361\357<\205\346\037<;\342\257\274Y\266#<\035\374\027\274\003\241A\274\r\251\033=\210W\240\274\377\202W\2749\026\231\274\215\006U=4\356\315<\256\222\022=f\223\004\273d\010\026=qH2=\203\312\372\274\225\207\360\274\001\206\035\275\3406\341\272\003\310k\274\021\364\023<p\321\034\275\361!\347\274\324aD\275\267&*\275\365\2663\274\252\210\231;\367Z\344;\332N\001\275\230\236\257\272\207CO\275\322\256\257\274tG?\275\206\034*\2753)B\2751\347\361;$\367\305\274j\344\274<dA\270<\262C\262\274\313\273K\274%\254\024=\2079\267\272\016\337H=\374\024\336\273\324\2073<\341\253\016;{ \330\272\255\227\207<\207f9\2750 \343\274\030\206;\275\370\367\036<b\273T=\232l\025\274o\213\213\274\3015\026\275\035\321n<\264\025;\275\304\004L\274\216Q\232\272\354\347\331<g.Q\274\355%\256\274\2023\216;i\262r\274vB>=\0025\345\273-\351\316:\235(\030\275\250\330\034\275\035\340L\275+\322\027\275\216uQ=F\277\007;\217D\006\275|:\204\274?!\317\273\362b\301;up\315<\224\026\364<\r\273<=-\027\363\274PEq;\241\224\324<\307\346`\274\224K^\2734\2515=\243\'A\275\377\310\330\274\314\037\\\273\000C\207<w\254H\273H\274=\275\023\350R\275.\223B\274\367\025\336\273\330r\030\275\376\227\340\274\333\3430=\357@\004=\317ZQ\275Fw\336<}b\304<\357\224\326\273\276\026o\272x\037\203<c\335\205<X\217\336<\354\312\256<l\347\377<\210\373\300\273\r0\262\2737 \'\275\323K\003\275_\237+=\034/\371\274\244&t\273d<\027\275\202a+=\315\214\010<\032\030\251\274\311\270:<;\260\334<p\"9=\364\370\342<MM\347<\263`\3369\327\260\262<Hd\260;\361\256B\275>\353\021=\036S-=4{\216<% \267<\010\rB=)\361U=\357#,=/,G=<\353)=\257+\300<\312\202\262<\344\177\370\274\256\034#=_\001S={\1776\275hb\235<\351p+<K\037G\275q\336\323;W\363\350<\274*\020\275\325<<\274d\310D\273b\264\005<\257\334N\275rx\336;\205{+=\177M9\275\374BN\274<\262\\<\230if\274\256\235[:;\323\217<\263\312\260<AK\016=O%=\275\264\023\034\2759\377\342;6H\004=\2425\036\275\311n+\274u\265R;\36030==T}\271u\362\333<\316\265\n=\023\254q\274:\305\021\274Z\243\300<\377\331I\275\010x\377\274\305e+=\276\rA\273\233\210T=t|\032\275\023\305{;\265\013\253<7\314J\275\365\035\020\275\223\256G<w\222\251<\256_L<\243\032H\275A\210\274\274\27052\275\\\2146\275\234L\254\274l\366\234\274\246\274/=\363\200>\275\343\251\026:O\217\016=\306\357N<\352\260}\274\3738M\275\227\375(\275`a\276<q\343\362<\214T\312<X\242L=\245$1=\230\274\016=#\333\274\274\220E$=\264\3732=4U\254\274/\344\313;=z\365<H\t\027\275\376\203w\274\326$\260<\363\304\210\274\201\361K\275bM\211<\337+\'=\225`\362\273\242t\317<C\326I;\r\016\n\275h\243Q<s\r\007=0\364\270:`AG<\255\253\357\274V\341\224\274\025\323Q\275a\277!<\346j\t<\267s\035\275\001\202@\273\2142\224<\324\221\343<\201\252\022<\'LT=K\n\002<\346\336\037\273\326,\312;6\276H=R\203\361<\036\3551=Z1\262\274F\220/=\026\342.\274\270\344t\274oRh\274\270-C\275\226\373\227<\363\311S\275\351\273]\272\320W.\275*\313\250\274SGL=>\362\335\273\242\275H\274|7\265<\260d~;9\207=\275\314\272\024\275\r\264\373\274\207\036\036=\214\240`\274tI\336\274\324[%<0K\313<|\232\370<\235\000\342\273\211\006w\2741\213\356\274\235\317)=\210V\257<E\346=<\005\314\035=\003\316\264:\317\351\233\274\017i\n\275\271;,\275\300\303\n\275\215\316R\275\232\247O<\3361#\275\023\212)\275\026\253\270<\225\302}\271\n\n\355<\341FG<n]\352\274\337\016Q=\022\357\251\274\271\303M\275_\237:<\340=K\275\304;\030=\215\354\021\275\315\225\'\275\022\3266=L\177\307<q6L<\330\230\t\275\321(\254<\010\202o<<|\255<\035\356\261<\000x\241\274Q\344\226<\t\214\267;\022\353$=\027\225\t\275T\2018=\372\013\035\275\365\t\216<\264C:<##\362<N45=\"\013\241\274\036G!\275\321\374|\274\222\353q<_5+<uX\010\275\271-\036\274@j\233<z\021P<\360\331\3229\325\233\272\274}\033\373<q\330b\272\254\'\316\274Y\267N\275\333\004G\275F\014t<C\365O<\313\260\201<l\024H=\205\315T\275\307\354\344\274\345\217\002=\203\332I=$\357L=\237\361?=>\0276;\225\373\231\274\366\017\231<\201\205\203;\301e\303<\335\356(=~\351\017=\336\236Q\275\354/\343<9\231\023=\036U\202\274\301~C\275\237vO=\244\342\303\274\357t4=\354\371\354\273\237ME=\246\204c<2nq\274\250\"\021\275\305\215\351\274\327\245\312\273\354\305\201\274\353\302\271<l\033>=\n\000\200<\236\354b\274-y\353<g\3308\275}j \275\227\002\375\274\354\352\037\274\023KH<\t@ \275\257o\321\274\026\317\263\273_\240\030\273\332s\000<^\243Q\275\232\340g\2746\254\027\274\347\331\345;A\023\261\273\004\201)=T~\034\274\025\014\024=\341|\374\274\013\025\257<\355\375k\274E\235\242:\200\252\006=\232\200\214\274\202\222\320\273\241\215<={\317\205\274\001Y(=\351\372\344<\016N\237<\252\246\233\274\177\0133=\006\240\024=\217\317\266\2744\366\"=\023\206\343:itU=\345\375\252\274.\266\236\274O$\005=!\253\356\274$\233\006\274f\375\263<\263\304\330\274\313\206:=`u\031\273\220\210\313\274\243h\201\274\355K\356<\373h4\274\2541G\274\326F1<\323.\032=\023y\316\274\260i\202:\334r\334\273\224\226K=\302\203,\275\365S\276\274.\004\332\274\333\251\037\275d~o\274\260\360(\275\006R\275<\262y?=\356\371\275<K\370E\2737\236\261<Z\204\021\275\237\314\264;\322V/\275h\r\262;\327\265\250<\244\367\353\274b\314\232;!\366\332<r>\356<\237/S\274=7\030;R\212N\274ct\002;\370\234\340<\321\036\022\275zL0\275\013\301:=\366\220\"=TUu<\232OD=;\000\211\274\"\271\350\273\2172\275\274\344\330\376\274\270\360\344\274\241\336/=\025\325\344\274\003w6=\317\004]<\3574\244\274\372P9<\2663:\275JI\367<YZt<\236\230I\275<\206\342\274\326e\255\273\247\232\322\272J:N\275[\204\010<+&S\275\021\0311\275\346.\005<2\252\221<\251\366*=Uo5\275\364\2652\275(\313\033\275\243]\326<\350\356\272<\262W*=\313\3112<:\323\226\274=\347Y<\031EJ\275\210Z*=x\254\036\275\0001\300<=L\262;\032aM=_8)=\014;%\275D1I\275\350 \340<4\250S\275~\357\340<\214\301\340\274\366y\247<[\371\245\274?\003\263\274KM?\274w\247\260<\217\200!\275\215\343\017;\211\231\252\274\311V\342\274q\225G\275\221JD=\253\257\342;\377\253l\274\222\331\025\275\303\nu\274\204\275\313<\377\240\326\274\343U)=\225\270\261\273\276l \275\340\215\376\274\255\0329\274JF[\272V\213^\274\273\025\177\274[\232/<%?C=\237| <\004\375\t=\370_r\274\313\340M\275\312\2421\275hC\027<\362~\026=\353\004\004\275\317FN\275l\005\307\274{jN\275\036WH=\321\371I<\034\350\207\274`%\262<\200 \224<\302\010\232<wd\336<aTk<1\371\n\274E\036\242<a`\037=\323\376\022=)\006R=0\257\221\274{\301\030\2723K\021=\322\353\353\273\321q\n=\222.\314\274\351\377;;a\254D=\205A.=USR=Q\300\031\275.t\330\274\227)\002\275\337\330K=p\302\311\274A\330L=\275\277\271<\240]\327;pt\331\272`~\002\275\022\351\353\274u\027\026=#\205\261\273\307n\372<\317\020\203<\333\033\003=i\352\207\274\257\t\023=/Z\016<\256\010\360<\357\237:;u\203\212\274\330\005\007<\221\213\024<f \341<j\325\247;\336\307\036=\317Eb<\241\361.=e\260\324;\340\344\014\274\206\307\341\274\300b?=!{\021<\360\010>=\227\3308\275\312\201\376<RP\007\275c\001\263<\024v\312\274Xty<\267\260\005\275],\021=c1\017\275\373\371\325\273\324\252\010\275$\226\006=cL8\273\260\341$\275\214\362Q<ik0\275\232\260\344\2747b8=\"\232\347;\355\2749\274R\020g\274\206\346\200\274T\004\275<\305\037\n\272bL5=\003\341$\275\253\343\017\274\200fx\274\352\035\210<H\232?<?B4=\304\362\203<\205\000\\;\355\274\261\274\344\254\210\273\2712\204<\334\316?\275#\203x<\325.\030\275j\243\257\274\333\314\t=\221/N\273x\017\016\275-\377\202\274\263\0061<v\235\372\274rB\241<\202\320\027\275WnI\275\003eI\275\245\007\016\275c/\024;\361\267\251\273D\007\327\272\212\374\2228@\310\007\275H\315\262\274X~:\275u(\"\275\234OQ=(>5\274in\021<^r\231\272uT\347:\232\032!\275\337R\317\274\033\203\022=x\022\010=)\241\372<\010\264\341<u\346\212\273e\3468=\242NI\275\'i8\275\321\312\014\2730}\036\275]?\031\2735\327F\275O\375\265<w\267\220\273\351\014y<\205!\322\274\206\202P\275<\211\216<\264&2\274\203\267$\275\214\306\013\275w\3445\275B\347\305<v\212\001;\255\301A<\366\202\306<X\356?\274i\247N\275\351\202\024=`\034\037\275\250B\265;@\316K<&\333\332\274+\0257\275\230\204\037\275\274\331\010=^\030\006\274\241\013\212:S1\'\275w\340?\2736\2303=\313K0\275\305\347\225;\234\3428=\355\301b\274\312]\n\275]+6<\267_-<\220Wu<R\324\366\274M\322\304;\026\330\377;J/\276<<\203g<\334\355\363\274a\034 \275#\355\325\273\017\235j<S`\272\270\237:\347\274i\367\000=\260\n\000\275\325|\307\274S\306\033\275\003?\023<\356\202M\274D\230\031;\317\302\253<O\314\231<\3741\010\275\233xQ\275\364\255(\275\350\220\021=Ur+<9\277\r\275\304\202\243<\236\007\006=\232\0043\275\020\300C\274t\240G\275VzO\275`\261\254\273?\273\031<\275\026\232<v{G=n$\020<a\'o\274\347\016\271\274\260\2123=\247\224/\275\231\027\343\274\260\3348< xp\273R\272\262\273@\230\330\274 \274\247\273 P\025:r\214S\274\201\266A\275\210\336\255<\304b}<+\\\035=\337w*<\251\350\356<\226\3509\275\201\222<\275\200\325\037\275\330\317\325\274\2312O=\344\200\272<1\006Y\274\346t\256\273+\214\265\274YjI=\014 )\2758\3662=\'\326\020\274\306VV<Z\001#\275U\327\232\274?#%\274\363#\"\275J\303#=)\231A=K5,\275cpA=|\364\226\274N\r\020\274Z\033\355<\002\2508=9\242\334\274\252\025)\275\233\303,\2756\207#<\307:\336\274S6\330\273?3.\275\237\344!<\227\244\214<\221G\240\273W2\230<\3413\006<<\265\204\273G[\303\274 \270\201<\274~C\274G\004\256\273\250fF=\rcP\275\373\211\034=L\035*\275&\303%\274\234B8=qc\366\274\333\177D\2736&\320<\357\241%\275\253\005\257<\216!\267<\2569\316\273jk\241;\327\323L\275c=\006<P\2350\274\207\032\036\275\257\035#=\033\351\007=\355\370\"\275\333\313$=$\2379\274b%p<\\\213\200\274F\375\365\274o5i<\250\030\305\274\251BP\275\010/C=\245\202\025=>\260%=\250 \377\273\265\234\306\272\'1\370\273\252\255\241\274H\241(\275\322f\364\271\240\311\251\274\241\276\300;LU6=\\\234:;9\362\254<3\033\311\274\002\354\325\2748\336C\275I}\010<g\025\374\274=\274/=8\352G\275\253#|;s\202\306:q\360.=\223\352\235\272gA\270<f\275\003\275\007\376\261\274\016f%\275\336\342\221<\004\322M=\274\271\r\275o\232\356;\277j7=\201l:\275R~\240< \025\311;\226\364-\275\370\006\306<\304HF\273\036wT=9\223\336;\345\377\346\274\361\026\017=\036\220\026\275\203AT\275\024\017\366;\273v\016=v\2062;\022\3067\275\356Q\341<\036f\020==L-:sV\313\273\303\270\255<Q\363O=\303\264F<\030\254\033=\236(H\275\0107\001\275\025\342\022=\313\273\n\274\362;\377<RnZ\274\357\362\321\274N3\354<~\212\373\274\332\267\031=m|I;[\003\243<\206\301\372\272B\310\330;Tc\005<\020\350\316\274\014F\033<\021\255d<I\3558\275\327\236\021\275\216`#\275\265H\242\274\266\257\000\275W\335J\275\244N\272\274Z\342\014=\345\317\026=L\374B\275\301i*<\021\n\333\2744\374\215<\313}\365<\243\225(\275L\3711\275t\262\200\274\256\020\370;H \001\275\376\215\n\275\360\341\017\274Lr$<Y\304\020\275</\000\275c.=\275\312\343\n\275j\220\233\273$\222B=[\331}\274C\022v\274\375\304\020=a|U\275\034\270E\274\220\243\270\274u\217<\274\222\321\223\273\2649\005=\347\327R\274\230\210)\275\350Z2=\221\275\\\274\321\226:=\363[\004\275\205n\367\273\300k\266\274\020\033\373<\022\3338\275i\3702=\220\331\'\275>\'t\274\241*\353<\365\037\275\274\254\224%=yiU=\326\230A=w\322!\275\275\246\002\275\217i\333<\007\345\2609UG\345\274p\237N\274a\265\271;E\335e\273\230\362:=\013\244N<\355h\020\275\326{,\275pN\204<\261\377@<\337F\036==:\017=4\340;=\346\002\005=\200\210\252<\244\013\274\273\2711\034\275\'\226\'=-\357=\275\207O\326<Tdk<\206\301\347<%\2365\275\247\230\206<\325\033N\275l\325\350\274elb\274\000a\r\275\325\255\363<BD\213;%\224\311<\2240\037<\312`\224<\253=\244<D\204\215\2744w\377\274\203#\r=\236~\233\274I\002\370<\3414D\275\005\000\007=j\333\275<\213\271\317\274O\366\333\274\354{1=sM\362</\233\332\274\211\030\326<\223D*\275p\3621=\241]O<Y\205\n\275\371\321\236\274v\024\276\274\232\0332<\234\266<=\264\3543\275\321?c;\014D\n\274\204}\020=\203\006-\275\231a\025\275![\013=\0146\017<W\256\304<\251\217\250<\253\377b<\337A\377;y,`<\034\337)\275E\330{<\273c\023=\374(\214<U\370.=-\273\022\274\332h\241<>\331\033<<\0271\275o=,=\2303B\275>\223\021=\262\206\375\274KT7\275p\300\270<*d\364\272\341n9\275\261\213|<d\250\217<,P,\275\243\222K\275r7y<3E\305;\274\2059\275]ov\274\207b\376\274\035d?\275\240\315S=-ga<\355\225\205\274\221|r<\272\212\217\274\\H\243<K3+=\037\270.\275\270\232\227\274\003o\375<\362gN=Y\235a<\214\370J\273c\254\200\274\210\223\224:_\330\024=B\366\277\274Zj\002=#\250\010\275:#C\275\250\024\'=\222\315\004\275\271,\322<!\200\355\274\267\240\336\274\211O\307\273\371\362\232\274\213,\340\274cjK=\313\344N\275\017O9=\020\377\246\274+~\365<\210\032\013\275*\013R=\321\323&\275\232)\223\274\021=!\275\376\2021<\233\r\312<\013\376R\275\261l.=\276\023\362\273L\033@\275\010\304\023=\002\030\307;\002\206;<{E\373;\224\017\311\274\014\n\325\274b6D\275(\265A=7!\010=\251\323V\274L\337\326<p\251\306<1[\353;\221\037\206\274\254\3204\275\254\244G\275j\222\207\274\373\307\314<]ia\273\335\240\372\274\350)]<\241\255\363<Jc\037=\r\225\024\275{Q\"=\234\355D\275 \226\003=EyT\275\336\324\036\273ExC\275r\033\310\273\371\302\234\274\206\030!\275z\030\202<\316\317\257<\3258\373;\306u\314\274G\307\007=\"\341\\\274\n!\225<!>\224<tM\314\273\030#\027=\017]\177\274\210\351\241\2740\002\277\274\002\233M\275\026\3053=ds\304<\215\022f;\326\272\300\274}N\317\2738.8\274\301\373\022={\343\314\274R_$\275`\271\356<\254L{\274\274\237\r\275\234\305\374;\030rE\275\203\036R\2759n\375\274)\227f\274\354\245\234;\033\323\033:\347\313\332\274($\273<\240d\3469\'\017\254<\370o\366\274\374\340\027=S\002\357;\265-H\274cQ1\275g^\201<:!\033\275\364~\025\274\377\342\252\274^-@\272oY&=\'\377\327;\036c\371<\235\023\2019\331\305\212\274\366\007\'\275\365\202\362<\303\261\006\275\361\345&\2751)d<\356\347\335\271\32420<\030=\216;v\027t\2744\0348\275:\276\265\274\035N\007\275\246*C=\222\"J\275\261g\376<\203\363\252<\362$D\274j*O<>,\017\275:\372\305;$\352\220\274\335\3542=\261f\373\274r\377\314\274\243_*\275,\006L=\n\264{<\236\337\234<|B\013\274\224\273\260<??U\275B4\365<m\336C\274\205)\223\274\\\314\024=\222\310.\275\030`B=-K\007\275\3323#\275\351\n\321<\312\361\267<%\241\303\274\237\323\030={\0022\275\202\243\327\274@\204\367<\312\034\264<P\005\231\274y\267\271\274\267\365#\275$~B=\3360*=\203\230\217\274\211\035\324\274\2120\352<]\206\020\275\340h\214\274\374\236\036<\024\317\035=\326\235\375\273\325\373\365\274H5\372\274+zP\275cq)=\260\336-\275G\307\236<\302\3279\275%g\201\274\224\256\333\273\243#\311\274=`\331\274\304\026O=\003\376\272\273\311S/\275=\025\010\275\233\231\021\275N\037E<\236\000f<WG\375<\237\030\323\273]\356A=(\372\277<\275SH=\'\373_<\341D\n=\210I:<\030\031\342\274)\0065\275a(\202\272mS\320\273L\007\022<\303\371\235\274\033nL=^~\'=\215\376o\274\233*\307\274?\221\263\274\355\262-=\371\007\255\274\356-\032\275C\362\001=\246\355\377<.\302\305\274R?F<\355\337\237\274\247\366\r\275\215`\353<I,k\274H\241N\275\353\322\026=9_\355\274Y\024*\274\306[^\274\347\013\323<\272\010\r=\200\214\235\273\252\233I=\357\317-=Ea\270\274\242\025J\275\357\270)\275\215\241\005<\216\177\275;k\007\203<V\t\000<\203\360\035=\307}O=\206PC\275\214.D<2>L=*\357D\275\035r\207\274\022\314\242\274\005\340\311\274\260\233\023=\332&\264<\307\365\023=\240\007\224<\244A\314\274_\036\231\274j^U\275L\366\004=5\270\335<\247\273\254<C\3000\275YxF<\244\205\267\274E\212d\274\006\302\200<\nEM=\316}\245<dn\030=\354$K=\t\313\245<\203\365\321\273\323-\023\275F\n:\274\303U\211<J\357\033=\315\350\211\274\375\3405\275\246\362,=\017\252>\275el\027=Q!\031\275\270f\340\274\267%C\271\376o =x\246\334;\314\257\277\273\177\001z\274\373#\035<W\255\030\275\300\364\307\274ie\375\274/\223\256<\277\200\"\274\273\004\224\274\026\003\022;/\037A\275\227\264%<\270V\225\274A<\364\274\312\232\034=}\250\241;X\207\246<p\303\305\274\323\245\343\274oE7\275\212`c<r.H=E\316:=\217\323\r\275\200%\372<[\235\336\274\346\213\360\274E\017\340\274\177\305\014=\336\315U=\017-\331\274\366\324\256<G\277\374\274\371\364\252<|\206\277;\0371\204\274\010\027\257\2747LS<\311\305\271\274#\347\001<\354\321\274<\033\255g\274\277[\033=#\366O\275\244\277\002=w{8\275\004\336\010\275\020R\311<Oq\224\273\327GN=\240\256J<\320\017<\275\232\030M<\037\210\030<\026Q\035\273\204\013\301<\213\201\007=\333\024\230<\026\251P=\tY\312\274s\305J<\204\3228\275#)\237\274\267\211\270< \016Z<i\252I=\341\024*=\343\201\030\275\227\\\275</:h\274\302$\303\274\360\367D=\3202\361<-{\033\275\340\325\350<`\206C\275N\237\035\274(\2377\275\311q#\275E\316.<\210y\372\274\342\250\n=P@\202<\366\327\013=\016\007.=\212\303\215\274s]\200\274|D\362\274=\240\254<f[\t:\265Q\224\273\355\370\'<\270\303\251\274\300\nI\274\214\376\311\274\307u\343;\'AN\275si\316\274\362\340 =<\363u\274\320\\\303<u\234\006=\330>\275\274\257v\370\2740\253(\272]\303\351<7m,\275<\035,<\">\246\274U\203T\275\220\254\243\272\020,\325\274\267\3778=\222\303\374\274;\264\354\274\351\241D=\265\315\245\274\324\030\370\274\266Q\025\275\272\2722\2754%+\275\307\3653=\203A\336;U\3577\275\270\234\245\274-\307&=\007s\301<\354b\346\274\314\325\260\274\007\232\007\275b\351v<I\256\354\274G\341(;\213:\034=\363\275\004\275v\004T<\374\024\226< \016\331\273\003\305H\275\344J\237;\305$3={z\022=Q\306\266;\017#\357<_)\"=\220\330\021\273\224\351@=\261&\217\274\372\306\023;7\2611=et\275<\244t\361<\343Y!=\002U#\275\212\002\352;*7\033\274\377\367\304\274\346\247\027=\247\335\341\274\246\325:<UK\034=\246\237z<\322\300%\274\177a\351;x\310\225<\372\007\354;\261\225\264<\264\252\234:\360\033 =\367Ei\274\205\214U<\325\234\014\275\r\304\322<\372\357\"=m=\270\2742|\377\274\257\016\005\275Z\210\335\274\345Q\346\274\243Z\237\274\'\n_\274?\251\350\274`\240\030\274\372G\312<\001\006G=j\204\356<\303\306\256<\216\365,\275^&\277<\306\346\263\273\253\220\\\274\221\353.\275\361\205\343<NP\260\274 \002\253<\302\037\262\274\200\370b<\307\353\357\274GJH=q\357-=\016F\014\275^\361\237\273^\rg;\223C\037<j\3652=\343\340\001=\241\\9=\247)\340<\025M\216\274\360\247\330\2742$/\275?=(=&N\312<\226X\315;e\0162=\224\301 =\221\320\261;P\316\034\275j3\205<](g<\343\313\000\274E\321\236\274\205\366z\2720 /=\377v\265;\001\2343\272/\371 \274\354\021\322\274\306\370\363<\332\201\007\275\013\225\006\274\347\376C\275\245\215\030\275HL,=c\344\343\271\277\3054\275\364\302\027<\202\312\006\275\245\257\306\274\014\242A\275n\245\032<\031^\271<\224\364\350;\334\341\252<\362\267;<\345\2043=\t\345\016=J\356\014<|\302J=K\302I<\037\214\377\274\004\225\'\275+\366l<\376\347L=\005\031\020=q\004\207<\307\301K\275>\272+\275\216,\026\275\023w\024\275P\341\376<b[\352<\216\250\320<L\375.=@\211\307<\3575F\275\000\326\311<$7\320;\376\337\006;\314\216\017\274\257\376\366<\315\253\037<\220\004\271\274\225\335\001<_c\002\275#\354\367<\261\1776\275\027\265\303\2749\203\210\274\226\365\353\274\315^\220\274)\361\375<\355 :=\247\376\022\275%\326\352<w\305\221;\2447\276<\032\360C=\211\347\375<\205\234\250<{^\025=1\020\003\27287\t\274\335\\\032\275\010\340\005=\352\005G\275,\t\030\274\302\200M=\204\242|\274P\2072\274\252\367\317\274\353U\004=&0\237\274\346\221\276<d\003\315\274L\373\316;\360]\362\273\2362*\275hi*=\253\n-=\360\223C=\356b\034<8\205?\275\343%\026\275\302\001\037<]\3643\275gb\004=\335\250\352\274\326\372;\275![\006\275U\340\r\275\212\220.\275\017I0\274\340\013)=O\016\313\274\276\345.=\367\357A\275fW\265\274\361\212\037<\252\016\200\274\271\360E=\232\256\013=i\337\326<\3524\201\274\rg\025\275\361R\021\275\017\237\320<\261\001%\275j\253\237\274\213\243\010\275\243e:\275\350BO=\360\\?\275\323\307\314<\234L\231;\001\236h\274X\230\017=GC\027=\207%~\274\210\263\'<\344\355\000\274i\3559=B\037\247\274\020\214I<\227$T<\334\232J\2745hP=6O.<\243\006\022=\307\370\267<!\031\237\274\271W\215\274o\256\343\272\r>\331<\212\342J\275\210\344X\274\251\330\032<\265sC<\200q\270;Q\237\307;9i\325\274?\345\226\274\255\360\332\274\235\t!\273\226+\236<a\2013=#\236F=\3069\034\273\305o\004\275\261SD=\364\267b\273\207-\304;!\006:\275M\240\004\274c\270\010=P\305\256;\334k\210\273\307\374x<,\356\340<\350W3\274[\024\304<\340\336\247\274\037\256R\275\202\325\237<T\031\031=mO\265\274C1\305\274\002|\373\274x\336$=\236\001\316\274UiQ=v*\235<\270\372\272\274\017\325`\274\363\240\025\275e\226G=*C\371\274\245u \274y\210\303<_H?=\001\303\302\273\247\267T\275\355b\265<j\261R\2738\017\016\275\n*H<\210}\275<t\"F\273{\203\363\274\342.\031=\334~#=\240\2742\275r]:=5\204A=i\365U\275d\334\320\274 \216\325\2718\230\016\274\034\t\232\274\222*\"=\222\266\314;\364\252 \273&K6=\377x\000\275\240\214\347;\256\332\366<b\023\025=\256\020d\273\346\001\267\274\237E\222\274\322\372 \275\031\376\330\274\262\235\311<\323\214\354<\326\n\020\274\202\360\355<Q\346\246\273#\356T\275\276b\222<t\201\030=d\031\271;\212\376M=\020TA=\216\\\374\274\236\243\335\274\372\327y;!r\342<O\270\177\273\303i\261<\250\346\200\273\3067!=\373\332\001\275 |\341\2740\3047\273\275;\"<\344RL=h\347/\275\367\347\321<\322\307%=\375\2339<\217#:=c<\337<\216\211M=\264{\277\274\375\037.=\212\247\013\275\271\025\326<\317\2344=\365\377\254<\006jQ\275 \232X<\210\323\327\274\234\302\215\273\177\222\246\272\3426\301\274\022\352U\275\353s\346\274g}\263\274\225\016h<ml\346\273\000\370\317:\254r\343\272<=\267\274\236J\036\275\004A]\274\223K)=\236>F\274\220|\336\273-\222K=t\340\002\274v6\336<\275\310:\275s\374\004=~\027\245\274/\211\010\275\371J]\274-\257\225<W\227\344<\222F\266\274\350\310\013\275>\021K\275p\334h\274\254\307.\275\010}o\274\335\206\330<\267C\030=^\0072\275?\221J=\252\376\356\274\350\200>\275\276\250\013\275\334\004Q=8\000\007\275\031q(=\364\330\251<%l\342<\301\207&<\215\222\037\275\031m\226\274V\030A\275\034\264\024=\332p\312:\365\317+\275l\313\t\275W\2333=%\273I=\241\251\304\274\3441\326\274a\302:=\302|T\275\356Ga<\225\032\001\274D*I;L\252\037\275x\036%\275\326F\254\274\352\270M:P\234.=\246+\364\274\323\305\371\273\331\312\324<\234\3157\275u \177<\302\324\004\275\331\327\016\274\374a\217\274>rY<\277\375I=\207(0=-\033\227\273\272\357\216\272\302\2010=\000\335\027=N\307+\275e\353?\275*\254N\275\371\035\275\2739X\204<_| =\362g\036=\0165\031\273\273\345B=\320\262\201\274f\223\371;\305\344\'=8\240\234\274\347\231\357<\224k\335<\013pT=[\256H<\2701\357\274?\317\002\275\006\340\344\274\263:\207<b:\332\274r7\260<\377?C\274\006\227\212;{U\237\274\365\3360=\010\371\371\273#\227\007\2753\313\003\275\204C\214\274\007N\r;\350\244`\274\205h\277;\201\200\231<\345z\226<\273\3149=\210E\204\274\373\361G=\0146\r=y\215\014\275-\213\255<N\366\366<6k\340<0\037+=l\337\233<\307\374\024< q\032=P\232\000\2757\010\202<\250\241\224\274\324\231\240\273\306>\301\274\311\034#\275!\247\334\272\314R;\275~\332S\275\006\255/\275\303\314\256:\252\356\223\271\007\010\016<\000\346\241<\013\000\001=s\312\006\275\256\347\023\274\346X\333;\224\203\004=\375\205*<\037\323\253<sM\321<\253\375\026\275\215\214\000\275pM\254<\035\010\267<L\020\242<\201L\007=\264\366\363\272(\3578\273\271iF\275\254_\250<\376\217\273\274\220G\363<\256\023*=\334e\377<\030\303\320;A\307\270\274Z\r!\275d%\370<L6\363<\027\230-=}\270\010\275\341\374*=m\014\371\273\314yK=?b\322\274g\247\033=\031\032\275<\037kM\274^\t(\275\005\364\303<\322v4=\006\334*\274~i\204\274\0021:=:\031\230<9\265\335\274\246r\303\274\260\373\260\274\277nu<\273\032F\275\021\206\221\271\325\336\233\274G\355\017\275\345,v\274\260S\320<\265(\321<=?><U}\032=\004\032c<\260>\013\275\362\304\'=\336\010\203\273\325F\243\273\350a\n=\362N\361<p\206<\275\242\031\027=\224\273\021\275t\374 =\020X\010\275g\366\023=\002\275\221\274\351J\340;p\225\022\275V\242O=h0\224;\214\213h\274\345,/\275;\271~;\341\202<=\000M\303<a\376\377\274\372b5<\"\317\014=kY\026=M@\271\274\365\347F\274\377\370*\275{\216\343<\260\325J<\374\277\013\275z#\243\274\304#\271<\025`<=\327\246\227\274;\323\013<\262_\342;\346g\310\274\260\337b\274\245\327S\275\2150Q=\367O\211<\200#/=\320\t3=\2047 \275`J\221;\273\325 \274\270BR\275\034\336[;|\221H=;r\303;p\277\004\275\320.\266\274\362\304L\275\245\207>\275y\270\007=\220\033\234<\345m\002=\323$\244\274~q\376<\255}2<\271\177\205<,\346\005=\227\031!=(X\223\274b\273\336;\233\007\000\275\223\2039\275\033\205\353\274g\325\037\274\377\332S\275\314s5=\010\377\252\274\336\262\315;\223zA\275\340\014\333;*A=\275|z\247\273\325\233J\275^\226\317;\217\302&=\267\256\370\274pj?\273\270\245==(m\322<\0244\010\275\203x\247\274OD\207<e\247\013\275\323\237)\275y\267+\275\0147\302:\005v^<\215\233\037\275\024\255\r\275\031\304E<\223`N\275)\2239\275l\316\256<\261\306C<\375\2230=9u\036\2759<\325\274\326K\310<\356\300%\273\316\233*=\"\340\354<\363\2273\275\033ML=r\200\265\272\020I\250<\247\301\362\274\305\325\007\275\374r\244;\3169\276<5\321!\275\364\365O=\373\302\303<ow\377\27310;=\310\2347=\350\365b\274\321\363\221;gc\017=\243\022\033=,\322\226\274\'\370\t\275+\026\320<8\323#=\320\271\236\274[C8=\304q>=\215\226\027=\365\354\342;o\227)\275\'r\362<A\342\366\273\313\266\237\274R@%=h\250/=I\234Q=\013\206<=J\014\n=O\310\357\274\371B\024=\370b9\275\023H\013=,\336\3467\202\352O=\365\325P=K)\027<\372\013\333\273vFB<$\204\233\272\'\016\317\274\3556e<N-\033\275\276\006y<\205\032O=\001:\033\275\3576Q\274\2644)\2754r\357<q\251\177;\356o$\274P$7=\360\324\221\274\200\3722=\2373N=\373\276\216<\224\3447\275\317\346\266<Y\327\355:\237\373<=~\335\221;\032I\'\2750\260\025<\306C\010\274T\216\341\274O\"\234<6\227x\272 \300\242<_\351\001=\317\270w\273K\305Q\274\3579=<\262\205\374\274q\223\234<\301\336B\275\'\315\307\274\007X*\275\\\226\275\274o\363>=\027\021\"=[\330F=\203fH\2753W\220\274\303\200\250<\361\242\355\274\266\205\036=QiC=\276\372\323\274\351\327/\275\212\243\034=\3641\321<\276\277\010\275,\207N=y\305\226<\312\023\025\275W\356\210<oE\214;\353_\247<\256\234\'\275rU(=\363\2368=#\370\275\274\001o\230:\3069C\275\325b2=\216\256\253\273\"\367\322\274,_$\2756\314\242\274\nX\213<6\337\345\274\262\327\254<\036\375\006\275Z\347\255\274\034A,\274^C\334<\223\200\364\274\372\363$=v\016\257\274\3463\337\272\245W\201<1#\n\274\260\017\025=\267\265\016\275\361z(={\333\3219\256\207_<\317\201\225\274&\275\034=\214\224\261<fPK\274\346\274\366\273\314\0049=\'\261L=Q\034\021\275\230\346N\275-\325\025=\214\231\000\275\002\005\303<\212\253E=J&\275<~a\316<\212\r\343<\301\233\342<g\261\362<\201\277D\275\235\265\005\274\346\231\357<\223\254%=k\3138=\247\210,=c\262 =/\326\367<e/\227<\356\340\255\274\3766L\275\270b\220;J\331\320<!lH\275\305\004\327\273\017\230\311;\312\027\327<3\213\252<)\037\272\274\003r\312<\241\355\000\275\315\352\376\274\300S\t\275\217\020P<I\211\302\271\312\035\344<\022\212T<\3448\030\274\035\227.\274\273\305\367\274\214%\003<\355\370\250\272\307+>=)\022\201:[\206\230\274\235\003\343\274c\022B\275?\300\036<\241\030\027\275{t\215<\021\023\224<|+\360<\275\005E=\006\336K\275V\204J<\375Y\026=>s\216\273\377^\220;``\300<\n\371\237<\331\354\303<\023\232\361:\201\370\027<\016\213\206<x\025D<\325\207%\274\01418\275\224,)=\251\303\211\274vE\355\2741\0352<>\373\006\275?K\n\275\016\240\210\274\361\276&=\360\031\344:zK\240<\213\325G\275\001\rr;T\030\257<\014E\367<\255ni\274t\243\243\274G\333\020=n\";<$\237\000\275k\352\2079\002\260\n;X\000\014<W\250F=5\205\013=\220\035\363\273v\311\316\274H\310\005\275\325\252\253<k\005 =\335)I=\010\251\353\274Q\0237=\265\345\236<\\\243\262<)S\312;\264h\232\274E\336F\275g\203B\275\305?\376<\324\234\371\274\330,\010\275\356\225\242;\333&\336;\206j\242\274\372\014\322<hXH<\372]\003<#\203$=\375\353\332\273\251\341*=\242\363C\275\264\"\004\275W\373\250\2747&\212\271\310\366\323<\'\264<\274<G\217;\357u\221;\215\031\360;T\272\007\275\362\023\347<\017\306\033<\220\222I=o\213O=2\2165\275\347\013\333\274y\0220\275\367.\243<\272\177\033\274\246\337\014=\352p\025=y\243\306\274\006\223\340\274\240\237\323<\177\354\335<\000\022\273<d\347\313\273\310\377S\275\262\332a\274J\241\000\273\230iM=\007g\r\275~\361,<[\356\355;\217\003\302\274\3570;=\322\315\027=\207Y\330\274\333\3353\275c\367\313\274\226\271\316<\336F\266\2748\310\275\274\326?\304\274\025\307\035\2757\"K=/\001\211\274\353\2506=\177\010\365;[h\222<\306q4=\n\364.\275w\'\217\274\367BU\274hu\377;\310\305>\2747\nP<\330\004P\273\343\333\266\274\230\222\263\274M\232\005;\317\206Q=M\233\377\274(C\000\275\212\177\205<\352H\212\274\277\312\024={F\367<\350\005\304\274v#\016<c\351Y\274\216@)\275\272\\\001<\344\322\245<Z\374\032\274N\315\226\273\341\254\010=\320\236#=t\226\214<\3207\320:N1\251\274\376I\027\275\333\216\332<9\327P=\305C6=\317\370\000=\376\363\'=\2038\227\273p\337+\275 \211\321<\213\n\277\274\352\220\200\271w\022Q\2759\276\033\275\030\003<=07Q\273\370\330\035=\243\355\355\273\201>j\274\213g\t<\214\026|\273xJ\253<X9I\275K\316\226\274d\3138\275\\\251P\275\370g\014=\355\310\031\275\201\214s\273#\025\037=\267\346F=\0054\320<\204S~\274\303$\352:&c7\2755u\312<\361\2619=\253\2228\275Qt)<[z\255<bv\222\273[\3076\275\313\307~\274N\337S\275\276a!\275\013k(\274o\233\337:\271u\365<\351\020Q\275\031\326`\271\350\241\375\274u\256x\274\2255)\275\364\244?<\274\371:=\204\225V<\023\362\367\274\177p\241<\003u\336<\231\3748\274\037\r\274;\036r\005\274\213\343\006\275\200\223\035=n\310\264<\014]\367\274\362%\007=i6\212<\250p\347\274}4\257\273~Zg\274\3218\312<5\037\303<ou\333\271\2240#\275\226\313\217;\217\3111=\222.M\275\030\270==F\220\252\274-\026\305<<[7\274tN::\343\343\001\274\202R\005\2759\007\200<\343m\003=-&\362<\206\252z<R\356b\274(\325\320\274\312\2441\275\266\364\036=\217XW\274\244\314\017<=?\335\273\'ZO\275\312\3309\275\270\271\267\274\034\340\217\273\250W3=P\021(=5P3<j7\242\2740\203\214<W\346^\274)n\026\273\237H(\275T\346@\274sm0\273o\204\031=\344\311\354<%\377\316\274\241\361\031\275\331=\036\273wy\026=Ho\t\275\303&!\275\276\310\030<\355\355:=\035:C=\224\\K=\n\351\326\2743\331\302\273\201\177\016=R\3260\2757\314\257\274\014a0\274\"\241\337\274\241\007&=(!\003<fot\274\230\2052=\001\303\270\273\342\3558\275\205F\017\275h7\357<\260I\n\275\274^\370<\312)[\273\316\323\345<\223z\316<\222BI<m\374\220;\334\010\374<\301\262D;\242\005H=\237\222n\2741\336\026=\244\222\017<\300\261\037\275\177\314\000=S\017H\275\335=\353;\333;\375<\230\364\027=\0356\247\273j\252q<\356\2217\275\2318\n\275g\016\211<\010\361/<\317\257\n\275\375\314C\275\026y-\275\367v\032\275\220\272\307<k\363\370\274\314\331-=\017\231\030;e`\004\275\323\014G=\202\321\207<w\315\351\274`Y\232<W\020|;\221e\010=\256&\000\275\332\212L=\353\363C=\026\357p\274J\256I=\323\0375<\371\236\034=\354\204\021=a\205\337<\014\257\024=\233E\347<t\347\206<\t\352\357\274F\2469\272\364\237\023\275\244\261O=T\2064\275t\251\022=>\271+=\322\330N=o\323\264\272\317\3549=\014;\036=\255T\007\275\026\022\002=\244 \017=\004\353 \275l\\\201\274\233\t\006=\213\336!\275\3645o<\315}\361<\277|\327<\264\3557\275D\332[;Y\374\032\275\031&\272\274o\336R=]\275\324\274\314\n;\275:\323\302\273\017\336\211\274D8\'=EU%=5Y\245\274\262\325\010\275Y1\036=\3069)\275S\" =\354OI=Y]\276\274}\216\003=\276\340\234<F\331\014\275o\321$\275\301\362:\272f\323\251\273MM\270\274\370\350W\274\263\010-\275-\007\032\275a\355\373\274\362\346(\274t\271\007\274\023fE\275v\226\006\275I\372@\275\235\005\230\273\244)S\275\337\0060\275\273b\007=\014\223\204\274\362\2433=\035G\'=;\261I=\026\0263\274\300\r\022<k_\007=K\0134=\244\236;=\366O\256<\346X\247< q\327;\007y\213;\033\224\271\274s\366\t\275\242\t\265<\001)\227\274\213\275%\274\036\010D<z\355\310<\313F\362<\317\316\206<\211L\232<\t:B\274\034\357\227\274-\030\020\275\355[D\275n\374$;\035\3338\275p\271\265<\250\2323=1\266\252\273A\231\327\272~\217+\275\265\253\023\275\3511\013\274@\370\245<:\231S\275\316\277:=p\334\270\2734{%;\035\273\037=\031\3105\275\314\262D\275\254D\021=\\\247\027=\263\204\327<\026y\231\273\322\037\037=\n\337\344:\020\264\021\274\010`\002\275\3176\020=\311\366\344\274\262\335\314\274+\3328\274\365\343\276\273\274\320<;q\225\370<\342\370\016:\336\213\354\273\020\023\304\274D\3039=\263l\025=[\270;\275\300\300\262<\375|\312\274\244\273\242\274\270\277\000\275?\230\000\275g\360\357\274\242%[<\354\322!\275~\210w<\215\0349\275\014+/=?\330\332<\372\3555=\375Z\024=K\236\024\275.R\313<\314?8=\224\303N\274cI\340<,\370\210<\006\0076\274(\036\207\274\005\2133\275\2028%<\377\372\207<\031\214\037=\2311\263\273\344\3068;0p1=\r\337\265<\200\234\364\274\227\201\017\275\327\177\035\275Q\270-\275\324\001\023\275;\354\021==A\215<0W\355<\363\253\376\274\215w\262<=\372\"=\276\341b\272b\204\n=\023H\345\274P\331\251\274\344\237O=o\017\036\275\333\223\035\275\234/-\275\317\252\010=\025\322\272\274gt9\274u\025\231\272\347x3\275\211\304\215\274<5\361;9\026R=\221\342-\274\004\000h\274C\023+=\014\336\013\275z7\331;\334\"\216\274E\317O=\010GT\275\271\325?<\257\036\340\274\315\207\000=\3332\365;\2311\003=\214\005\212;\253\376\220:\230\254\010\274R\227\223<%\366\016=\312\207A\275\026\341.<\334H\214\274\264e\264<\3019\007<.|m<!\261\214<z\337\250\274S|\021\275\376\306>\274\220D\"\275\223\235.\275\211nT<\300\003;\274\251p\221<\214\002\337\273\321\r<=B\0256=\220\315\276\274tr\300\274\027\010&\275\020\361b<\340\001Y\2726\\\243<\210W\270\274\355\320S<?A1=D:0\275\247\251;\274%\2644=Y\356\274\274\361\017\035\275\250I\025\274\346\'\032=\000Y\177\274\255\206\'=\201>\036\275\270\252\366\2743\"\034=v\021=\274Oc\277<i\003\003\275G\336\311\2742G\037\274\231L.\275~\006\245<\343\236B\275s\212}\274\204\226K\275\300\352\270<\205\2164\275\0255\336\274\246\302\210<)\270\273\274\245\223\351\273K\316\254<\004\331\024=\020\003\272<0\035<\2755\356\346\274\232s\355<\033=\026\274\3331\261\274\343\3622\274\233\255\274\274\221\310\016\275\022\312\315\273p\264;=\254\265\002<\246\273\227\273\315\030\237\274\025\355\004\275\215\211==\251_\234<\3736\017=b{7=\346\261\'=\221\226>=\235\367\023=\251~\017=\237\366\366\274\271\357\014\274\351\3337\274\342\2469=w\323O\275\327tE<\213\243=\275\373\361\"=\237m\023\275\315L\277\274\200\256\327\274\2250\337\2748\304I\275C\316\007\275- \343;92/\275R\252/<\303\242\360<]\213)=7d\007=a\257!\275\340\247E\275w\354$\273\221\242\260\274\252\314,\275\376d/\275\323\026\000=\270\322\317;3\246\311\273\025\204\267\273o\310&\275\363\363\035:\214\013\347<x\327\305<\221\343)\275\014\250\240<\026\264\016\274u:\255<DSO\275\204\035D\275\n|z\274\360\200\r\274\n6P<\237\013\271<\253\217\'=X\236\305\274\244R\207\274-t-;%\2424=\023\374\316<I\255\006=\332\271\322<\320\233/=\347b7=\235]\356\27273\210<\350\032!=,LU\274\034\216\003=8oI\274\242\222J<\2310D\275\272%\214<\376dT\275P\006`<\331\321$\275B\245\256\274\225H\2008\345\032\003\2751\270\320<\317dV<\272S\345\273\323\033\013<\243\320\314\273\317\2559\275\331\026\327<[\363u\274\310\326\374<\317\033_\274\231\351\344\274U\311\207\273\'Z*\275\205\346#\274~\254\223\274I\226\264;t M\275:\317\215<fZA\275\247YN\27592\007=\243\341k;|\0171\274\377\307/\275\256\341W\274\202\2521=\314nc<\002%.\275\024\347e<\335\033\312<\231\0007=A\310$=\007\377\364\274/,<\274n\000\225<[D*=!\367)\273o}G\275n\237B\273\343\032D<\355\024&\275Q\324J=\032\212\"\275e\t\325<\336\306\003<M\334:\275\037\277\201\273\263X\030=\206ZH\275\202\226\033=$\004\356\274\273\360?=\023\'\314<\333h\331\274\334\252\275<@l+;\\\'O=\353K\353<\216t\017=\302^\235<`\023\231\274s\024a<\022\341M=\377!\034=O\334\035\272\370\0136=\020;0=\333\261M\275\035\273\311\272\215&\360<\006tQ\274\377\251\306\274Y\002\037\275?\3352=/\002(=\276\030\261\273\275\3666\275\233\347\262<\2000\n<\267\3171\274\203\356.=\351\237\363<\200K\250\274\033hm\274\313\017\024=\034\223<\275M\275\242\274\305\017\025\274a\340\301<\355\205\244;\2758\312:]\360#\275\357\002Z<>*\034\2747%\013\275\212\365&\274U\311#\2756\334\265<E\331\214<\'\322\030\274\033\2158\275\031Y\361;^sD\275R\366\352<\005\235\347;I\223\023\275S\310G\274\275\";\275\263\020~<\351\3534=\3615\211\274\320i\336\273J\267\330\2742\020\355<\">\003;\304\254H\275\274P4=n\317\327\274\370D\227<\267aG=\224#F\275\\r\205\274\001OP=\236\226\020\275\315!5\275\267\216\037\275\347SH<\266\365\204<-\232\250<jU\355<\243\373\'\275c\250&=\322[u\274\344\021\"\274\203Y\220;\022 b<\276\324C\274\177\200D=\216\241\302<\010LG:*\241\255\274_\324\303<)\262q<\013\020\022=\277\320\r=\272\227;\275\310\262\277<$w\304<\236\263\206\274n\245\273;b\333\033=q\325I=\022\3172\275\304\357\n=]\315K=NS\031=\371\365\362<B_\314\274\241.\"\274\257\222\370<6\002\265<L\326\322\274R\216\234\273\374\225\242<\214\351\351\274\371\267\262<\274?K\275\241r\030\275s\250G\274o\365*\275\236e\356<\246\034(\275h\364\003<8\260\031<\213\326\027=\371\343\003=9\177\360<\t\275\222<?<5=;\344\\:a\000\004=,z$=c\272.=\013[\253\274M\341\014=d>\372<\026\205\252<Z\206W\274~\264\362<\030m8\275\337K.\274\005)N=2\"5=&\2013=D\310%\275?p;=,x9\275\245)M\275\335\233\251<\277@m<\025\021(\275\262[G\275\372\357p\274\226\354\374\273\031\3029=Ip\003\275\240\030\340<0dI=\355\267\216\274U1\305\274,\321\267<\r\rM\274\001+\030\275N\266\006=E\241^\274\354\245h<\010\246\351<\277l>=\276i\017=e7\233\272\355h\035=o\223\227;\334/9=\372\0062\274,\310\245\274\n\3137=M|\375<\2001\036=\336\007\245\273\024\252#=(\001+\275m\367\260<\341w\034=?o\357\272Tb+=\2711\342<z\332\256<Tw\257<\365\347*\275zN\031\275\273z\236<\224:\222;/SQ\275\277\036\035<O\305,=^Kv\274m\361\336<\001\262R\275Z\000Q\275\310G\242\274\356Z#<\"\340\005=\233\331\376\272\201\241\275;X\n\366\274\235\245\372\274\261\313\312\273\206_.=\347N\261\273\216\205\224\273:J\330<\371r9\275\316l4\275\270\266\031=3\026q\274\316@\343<\'\252\215<&\222\272\274\225\201\333\274\367_S=\342\033\370<M\215\216\273\327;Q=\254\364\363\274J`P\275\203\036\361<\032AI\275\010\034s\274\355F0=\003\231\030=\354&\235;H\241\211\274C\310=<\313\302\275\274\216\353L=\2533o;]\330$\275\226\272&\275E\016\310\274\301\257\246\274\226\320`<\365\240\010;\314XO\275@\366\253\273\277\311e\274l\317|\274\275(\246\274\236f\313\274h\376\024\274\370N$\275m\374+=\242q\245<Jw(\2745\266\023=b\231\242\274\207\357\332\274\237\342I=5\016:=V\323\250\274\023\357I=\216\017\357\274\020\013\t=\324M\305<\352\030\300\274<v\350<\205\226\230<\204\350\237<6\370A\275\031\323\375<\331\345\235\274\025\304/\275m\377\316<\337`\207<7\346\276\274\200\277\037\275\343\264\363\274\300\342X;T\227\362<\010\0212=\246@\231\274\3030\010=\326\230\275\273\033\311\212<\326F\221<Z5O=\332v\323\274\330\206\017=\224Q\364<\000\220U\273)o\241< T\364<\010\245(\275\350c\236<\004\213\356<?\026\307\274\020\346\200<L\302\216\274\307=\n\274\252\224\236<\320\303\300<\023\231\'\275\333\272\003\274c\302N=\277\371~\273\377F3=\r\247\371\274\345\233S=\034\245\342<\222\246\007<Rh\203<@cR=UC\251;\3708\327\274\230/\036=\221\312\355\274\325\023\224<>\251\305\274\343E\030=\350\333E=iCM\275\375\313\251\274\351\226\327;\331\226\236\273:\233t\274\274\317?=\025\370}\274I\022\026\275\311S\322\273D\332{<p\360\334:\025\273\326<@\255?:\013Q\335<\226\373\270\274\210X\333\274>0N=\345\313=\275\327\014:\275\307I\352<y\361\004=\323=\261<=\241T\275\341\013\207\274\212\330R=;\314<=\253\034\n<\320\031\007<\350V\301<\337\347\331\274\331\023\272\274p\305\234<\315\304\021\274\213[\351<\345%+\275d\223$\274\206q\213\274g\005:=\227\003\342\274\245\243\027<z\322\211<\265g\302\274C\252\330;\344J\257\274NS\262;i>\326:g\366\251<3,I=j \017<\035\2341=\237v\217<\300e\240\274K\217n\2746\rB\275\327b\256<\336\357\320<\330j\313\274&q\262</-\270\274\322> \275\247\203\341<\277O7\274\335\375a:\215\251\354<j\037/<\324-*<\270\230\355\274(\331\331\274\200=\264<Kk\033=n\371\n\274\0325\310;\005\3001=t\033^\274)\206\234\2741^\357\274\325\347\007<\222J\013=s\345\275\2742\327\362;\316\261\256\274\235\245\353<\213~4\275\020\241\030\275\245\201\247<w\242\032=\234\276J\275M)\000=uqO=\215\267\305\272\017F6\275j|\302<\'v8=2\024\374\274\214\263\250;\373\270\213<(\236\017\275\017\006H=\362\347<==\005d\274\241\017\001<\322\200\201\273F\352\315<\202[M\275\257\t8=\036\021\275\274EE\262\274\311\221\303<]\220\375<\200\270 <\257\207!\274\\\377\206\274\261\210(\275\313\"&=h[9\274\376\345R\275\335l\360;e\376\037=]\031G=\357\036\001=Ch\t=\r\000N<\340t\357\274Y\315\227\274\335\343\030=\313(5\273xm\r=\334%\037\275\231n\215\274VW\336<~\3426=\262c\026<\370\215+<\355\227\207<\307\014\025\275;\236\213\274\215\t\355\274\246\337O=\231\331\033\275\352;(=\352F\310\273@\201\314\274\037\333\324\274P\237F=\251&\000\274]\204/\275\241\326\373;\335\312\240\274$In\274\244\017g\273Z\213\355\274\205L\021=\346\002:=\025\373\037=\224\324\346\273\347\306F=&\346\351\273@v\221<\016\241a\273\323/\013=\377\313\004=T\324C\275F\337_<\345^\323\273\272\002\273\274\252\372G=\251U~\27440\023=}\345\206:z\035\002\274L\000\261:2\036\371\274\210\021\017=\004\221!<\361\217\217<\016 \030\275\205\370E=3\026\371;\030\277\021\274\310W\206\274\272\205\207\274Zu\331:\003\231\234<Xh\255<\356\0213\275vw\233\274\307\013\206<\271};\274\204\"\352<@\255\235\274^\313\222<\240\221\003=\243\316\301<\207\203M=F@x\274\353\233\331<\301U\266\274\374\0364\275A\004\234<\254\234\304<8e\003\275KI\006=\t\315\255\274\014\332U\275\247\312\002=5\237\267\274\224i]<X\030\005\275\214E\316\273\2048Q\275\376\231\2569\310K\262<\315\254\027\275\266\261\025<C\264\037\275\230\354\241\274\372Y\212;\207^\255\273\024\273)<6J.<bEe<\0100b\274\001\237\311:\'J&=\0064\\\273z\200.=G\370\243\274|\r\003<<\213,=\037\3719\275z\306\025\274\310\344\221<\007\213\233</\365*\275&\254\257\274:q\213<!*\274\274\034\035\200<?\362\222\274\240\023\026=\001\332\332;\017\005\274\274\320\257\'\275\025B;=U\264\n=\t&\331\274\363\304><jEe\274\237~\341<\014\'\024=[ R=\250H;=\336\0052\274~%K\274\360\252K<\367.\021=3~\337\2736o2\275o\3272\275YP\002\275\206\016+<\0169\211\273\311n\213<\226\000\003=\017\007\271\273\327\305\224<\351\327\276\274)\314\014=,3D\275\332\351\t\275\255+\r\275e\255H=\325-\333<Cj\372<\236\324C=\265,B\275\341l#=1vE=\030\242\274;<$\254<_Z\n=t\374F=\376\340\001\275Y\371\345\273\345B\017<8\325\016\275\337\371O=\360h\003\275D\352\241\274\352\271\002=\331e\022=a\016I=n,?\275\310\2114=BvH=F/(=f\t\334\274\266\211\221\274\37461\275\336\207\305<\261u\336<[\262\335;^\205\346<\010\247\024=<\004,\275\031\230\275\272\272j\316\273R`*=\333\243B=\330\312-\274\037\222\354;\203/\216<v\235\201\273hv\235\274:^k<\001c\000\274\200c~<\211\211,=\341\032\363<\255\217N\275o%\361\274!,\032\275\276\220\022\275\2006>=\335N\370\274\316\013@\275\036\356\001=\003i\300\273\205\326\313\274,\017\234\273\210\213\363<\005\342<\275\177 \347\274!\233:\275\010\334\205<\340\213\203\273N\207\324\274\017\251E<d\230\340\274\255\026\021\275\234\013F=h.-\273a\302\372<\021\366\344<c\372\010=\363+#=\325\244\005\274@\002\332<\311\274%=\307\205D=\2567\274<\013+8=\030\030\304\273\233\207Q=p\024\267\274\345\3672\275xB\256<\324>\260\274\226\002\375<8\035<\275\243kh<\207\371\007\275\257\2764=\357r\207<\356\035\335<[g\021\275\302\211\235\274x!\036\275f5\206;\3058D\275\321\264M\275\322a?=\237I\237<\267\013\"=\267yR=\272\247\034\274a\254\006\275M\333\266\273\234\366\031\275D\227\262\273\213\364*<\334\035\256\274\222\325\2679\341\3343<\361\253\337\273kc+\275\335\333\373<3\270\330< ^F=\204mG=\265,A\275\360\271\017\275\255\310\037=\337\304A=\202\300\206<;\365\027=\177!$=\334^\301<.\335;=\\\2344\275cs\265\274\214\324H=\017\261>=\275\364\375<\333Q\361<\216H(\274\233\024:=\304\264\004\2743\252\273\274\017\250\001\274A\324^<\022\312\n=\026\357\252\274\n<\356;\026\331\020\275\275\224&=\330,\207\272\227eG\275\0227\334\274\023Z\234<c\325\237<\205\327|\274\270\024\010=q\034&\274_~\276\274\277\234\266\274\237U\376\274=\352;=\306\275J\275\266T7=\021M:\275\354\266\032\275\010\rw<\307\261\216<EbO\273\205\344\023=\364\347\246\273\362kP\275\225\271\326\274\205h\013=OXL<,\205P<v\275-=aB\203<K\345\372<\266/1\275\334V\024\274T\362\037\272\023r-=~\226\216\274\306zM\275\311\356?=C\314\"\275\233j#\274\327\374S\275\033l\312\274%\362\270<\270\253d;\254\022\353\274\266\213i<a\332\327\273\370o\r=\0231%=h|@\27447J\275$W+\275:\251G=\344\200\332<\354\026E\275X\222\241\274\236n\022<O\037%\275\202\346^<\264(\025\274\316\336T==\203\211\274\317,J=Bd<\275\316\022\274\274t\035\026=(>\374<z\023$\275@\302\347<L;\317\274\0214\340\273\255rQ\275\000\344q\274\353\260\364\274\273\206\347;\007\222_\274\312\036\221\274si\017\274\004\355\010=\315&\005=\2330\320\272b\204\214\273\356\355\326;>\023\010\275 \252\215\274}\315\246\274\017\243-\275\002`5\273\244:\016<H\271\037\273?$\216\274M\035\225<\370\n\232<\200\242\271<!\370<\274j\310A=\r\327\203<\256x\016\275\310\253\256<\323\322\006\274U\023\211;\376\306\362\274\361V\030={55\275XOU<\304S\003\2757gJ=\326\001\020\2759M\020=\025pU<.\342)=\356\013\344\274\371\026\231\274\2446\277<\241\362\354\274\363%\263<\310\204\233\274h.6\275\200\306\255<A\342>\274\"f\356<\232\304\266<\362\005\315;g)\365\274\'c\244<\203K8\275=\233>\275\214\325L\275\034\335\317;\263\205\340<\010v7=G\342@\274\313`@=\354Yp<\270\254J=V\220\025=h\307\364<\265\025\256\271M\252s<*s.\273\\\356\320<\030$\331<\365\027\n\274(\372\225\274\274\001G;\375\322\351<\301d-=\245\027K<\373\027\272<\362\341\013\275\365\327\036\274\337`\233<\306\273\026\275\310\022\033\274kwA\275\021\032\n\275<,\345<\000\014\243\274\017U\205<\361d\201\274\365\350y\274\342I\025=\313\334L\274\264\333\354\274\271\310\016\275\302\316\234\273\373t\251<~c\351\274i7\324\274/\031\211<\005\025R\275IkN=\231\356%\275\300\217\254\274\233X\257;\276\351\220<\263M\352<\235\207\232\274uyG<\313\003<=\332\316\314\274.H\036=\350\262O;\212?\334\274\303PU<?*E=R\233\014<\265\004\272<\341\214e<\261](=\315\371\314\271\007\2465<X\334Q\275\215\026*=v]F\275\306\302\334:\241\351\251;/1\005\270\301\221\361\274\342\363Y\274d\237\321;\231\000\200;.F1<1N$\275q\267\224:\224\262\243\274\360<\222\274v\304\347\273[\340\263\274\024,\345<&\036\213\274\373\231\336\274%\344\276\274\350\254\372\274\3322U=\2116\236\274\261\332e\274\r\372\240<N>\335<5:\016\275\303\312\222\274\246\0356\274\340[\037=\330\002P=_y\026\275\326\025H=&\350\035=\021\352\346\274x\r\001\275/\372\010\275\022\331\375<\242_\035=\372(\230;\335\373\333\274\343\201k<\273\261\312<\036\243\312\274\203\344,:\201\255;\275I\251><%\341N;\363\036\205\274<\251\035=\316\252y<,\262\357\273\235\362\266<1\240>\275\213\034&=\252t8=\311iw\271\214o\005=\336\027\342<\241H\000=\364\335Q\275W\362\377\274\366\206W<\305\017\312<lC=\275\372\374\314:q4\371\274_}N=\251\330\025=\235\2243=\274\311U\275f\036\214\274\343?\367\273d\333;\274\014f\242<\220\366\330\274\224/\026\275\235\325\000<\327tI=\001\277\200<\356^\254<l\334I\274\317\262j;\365\353\300\274\305\364-\275f\214\014=\366\345\351\274\336\344A=\314\341!\275w\010_<\354\363\030=,\033I\275\336\367A\274g\301\206:_\212\326<\221\246?\275\316\351\271\272\302\275\002<\037j\216\274\033\270\035\275\370\327\037\275\275\234G=\003\\:=\202D\212<\327\035\'\270\264\021,<\254\253\"=\001\360\345<\266\006\201;\235\000#\275<3\001\275k\375I<\310v\367<S\224\027<\366dg<Q\016\362<\230e\007\274\267\r*=\2572\000=v\3216\275\202\365\255\274\363\216\027;\215xP\275\222\014N\275B\370J=?s.\275Q\2218=)\213\324\274Ve/\275\033W\363;\213\377\305;\210\253\211<.\251\002\275\216\272\227;\256C\202\274\262m*\274\340\323L;\024\0316\275\035\232F=\241p\014\275`\305G\275\222\277{;0\021\034\2756\321\260;C\024\036=\205\177k<*\3603=\217:\276\274u\250_<w7\027\275_\225\017=\211o\230\274\251\324\007\274\212\253W:\314\035)\274(\216R;\375\2430=\\\214(\275J\224*\275\005\014P=\306Q\322\274\024Q\"\275\251\305\000=\024\334\304\274\355\003\315\273\323\356\037\275\274\033W<\311\3339=\013d)=\355\245>=\201\310\226\273\342n\303<\265\025\226\274\364\020\242<T<\032<\247\207\274<\007R\224\273\325\0142\275\2015\340\274\267\2410<ju+<\227\341\347<\203\262\277\274\035\252\261\274\005t\003\273\333\361\242\274\230\rM=J\223\350\274!1\220\273\355\357M=R2L=Yl\375;d\337\241\274\322]3\275S\276\356<\207J0\273U\310\240;\357\247\355\274\000}&=N)\224\274\265\240#<\365\203)\275\213{\032=r0M\275\231\267\303\2742\265\342\274\370\023\\<u\355\026\275*\2314=U\r\362<9n\204<\372\276 \2755\343\020\275\217\257\204;22\376\274\2261t<x9\351\274Z\377\221<\321i\212<%\354L=7S\216\274\037k\006=U\005\034=\310k\320<\245nM=\332\006\022=\333s\321\273\206,\254;\246\233\031\275\372\274\301;\215\345\022\273\303\231\220;\313\275\264<+\331\033=i\322\217\274xI\231<\340\351\257\272\227^\354;\252\253\'\275\310\302\224;\230J&=hi==_\360\022=\003-:\274\345!\017=\2155\202\274\024\223z\274\231<\002=\253\231\310\273\331\026p\273\214\236\304\274R\344\275\274\361(\232<\3708z<\010\245k<bS\023\273\202\033\366;\270H\213<o\332S\274\356\252\350\274\332d\253;\035\310A\273\222\367!\275\016}\320\274\264\025\304;A\214\223<\253\r[\274K\205;\274\024D\005<023\275v\277\334\274\204\253\311<r\272D\274\203\310\255<\226\207\344<\230j&\274\274\262\022\275\002\330\020=7A\251\274*_\034\275\332\261\223<\327I\007=yc\032\275\237\320\332<wz ;\254\264\357<iB\276\274\261\343\237\273\236\305\227<*6Q\275S\214\032=\215U\276\274$\326\017=b\003(<@T\276<\206\353+<\005HF<\275\313\275\274\026\236!=\252W\372<\265\246l\274\342\251\365<\030J\017\273\200\263\220\274\326\024\037\274\355\242\236<\327B\254\274\014\036.=\254\n9\275\364\273\233<\344\375P\274\327\270\356\274\332\240\305<\246\254\037=#\264\032\275\232X%=\325kP=\350]\314<\303_\330\274\313N\002\273\026\232N\275\270\330Q=\213P\351\273\2108*\275>\364C=&\313\305\272c\360\020\274\362\226\371<g\317U=\327\341\246\274\177\231\030\275J\241\375<\276T\032\275\003K\261:\233\010\024<z\2106=\251xN\274;\320\226<\207\350\344\273\361\273@\275t=\333\272\323\247\344;$#3=\037\334\017=ZX\300\273G5\"=\210\355\375<\344)\267<q0\241\273\235T*=\360\2641=\220\0056\275\371\244m<N^\017<:HL\275\350\276(=\200KH\274r\0047<\030~\031=bI\n\275z\350#=Uq\310\274\202\3461\275\036\371\035\273\"Y\365<\r\236#=sx\376\273\233\364\222<\003\244\320;\374]/=\375\360\034\275\236\350\036\275\234\tI=\231u\237\274\220[\230\273\237\246\021\275\346yM\275\332\323\007\275\025\356\t=\262\357S=\324\366\202<Z\215\014\274\014\350\304\274\022\255\250;R\247\000\275\264s7\275\226\036\325\273\0267\003\275\246\200\361<\247\273\231<y\020_\274\013\225\336<!\245\215<k&\007= \217)=j(\317<e)+\275x\372:;\351\321F<QJj;\347@>\275|\226-\275\274+\263\274;z4\275\244\010\r=8\3105\274o\205\261:\334\361\002\275\023\\\000=lv\267<\372\274\272:O\204B<\217\014\007=\266\307\261\274>\366\321<l\372\013\275\365\275\027=Q\017\270<\333\205\300<\320\002F=^.=<D\261\r=\241\204\326<T\352\343\2746\256\330;\331\241\335\274\254\027\010\275:SK=\034|\246<u\245:\274u\267\n\275\251\332\374\274C\2516\275f\2433<\300zP\275+)Q=\340\333\265<\357\003\204<B\275\330:\223S{\273o\367\033=\272\373\030\275\264k\302\274y\243\003\275\211o\232;%\321H\275\272\032\303:$c):\n\rD\273]\033\033\275\213\\P\275\371\264@\275\t\247\370<;\013\363\274\243*\030\275\237\220\026\275\215\233S=\n\202Q\275\355T-\275`\211\003=\242CC=G\024M=\247\"\007\275An\315\274\021V#\274\322\222\021<_\343\273<k\263\362<\271\377\026\2755s\273;z\267\034<\037h\347<\3423\357<\014\357\360\274\267\225\333\274\227{\230\273\252 \026\275&\\a;\222\253\203<*\001K\275\317\213L<\030\374+\275\030\3510;\031\010\376<\252-\260<x\367\321<\013\355\277\274(\254S\275T/>=\023:\021=z\030\277\274\004\366\021<\336\\\224\274\326\236\"=\301\331\224\274\271\002\037\275Y)}<\201\222\022\275S\223\331\274\264\002*\274\345\302\r\275\220\321O=O\3012=\362\216\027\274\326\3101<\371%\331< \213I=wd\2139~k\003=\2710F\275\234=Z\274G%\024\273!\234\232:Jl\362<u\341D\275\022\340\002=\325-9={\'\005\275o\260\233;\322\245\022=\264o\325\274\004\274;\274\227\253\237<\004\007\2358%\335\355\274\233r\372;\331~+=e\351&\275p\334\317;Y\001r<\326]\206\274z?Q=`j=\274D\215\324<{{\036=!\214\r\275\305\"\274<^W\016=\256\274#=\213#,\273 \223\r=\302\261\324\274\223`L=S61\274\033\300\034\275\3322,<r\3330\275Lr#<[#\247;S;\365\274\333\t\265:\016j\267\273j\225\223<\371\352y\274g*\262\274M\362+\275\224!i\272\002\311\016<L`\346<\362\360\257\2740\251\370\274/62\2746D\311\2746\275\326<\256G1\275;\003\010<\251\300\021\275\355o\"\275\241-G=czM<|\330/=\225\221#\275\272_ \275\265G\374<lX\001=9\031Z\274\367\214U\274g\253\002=U7\005=6K\230\273s\305\022\275\305\223&\2758tO<O6\014\275N2S;\255\033<=+y\324<\273\361l<U\354\271\274\177v\321\274\366v\235\274\261e\032\275\026\343\373<B8\203<Om?\275\241\357\347\271\342<?\274v\036\033\275\356\251\322<\231P;\274L\206\014=\337\n3=+\3526=\022\223O\275\333\247\t=J\367\022=\271e\037<1\3122\275\354\332\026=\030]<\275\275V\035<\313\212\336\273\217\247\271\2744\373*=q\001\366\274\242^\020=\230\2720\2757}\035=\006=\000=\373\3646=I\2159\275[\035\305;nA\207<L\330\322<\225#\210\273m\tb\274\360q:=\217\305[<b\330\311<JY\3258y \001=A_\020\275\n\346\314<D`\365\274\351\371A\275\343\315[<\362~G=\235\361\371<N\n7=7M\233\274\231\276\006\274\001\337D\275\3446\r=\031K\177<\347]\000=\021\225%=Y\032Y\273\213\223(;\244\344B=\274\311\237\274\344\266\020\275\262\013\'\275\373\357\023=#T\273<\024\247\213\274\327x\236<T\033\013=z`A\275b\001\204<+\031\030\275\006`+=\343\330\251<\205\365\355<\367\021\203\274\270\336\006=\320\204\221<\'\243\260<:\327\260\271\n\344\031\275K\t\022\275\363W\211\274\343\315 \274\326\224\034<_\277\230<k(*\275\275\356\355;\227\263\323\271\225\254i\273\3508\013<?N\320<ol#\275\tC\225\274\2312L\275e\271\021\274U\020\035=\037i\300<\3043\225<\351\274:=\351\215\356<\3409\201<\321\366A\273\314\030\344\274\322\026\233\274\025u\007\275dU\r\2743/\334\274(\310\203\274\330!\003=0q\205;Z]|;Zy\t\275^9$\274\204\254\033=$\2159\275\r<\004=S\300]\274\312OI\275\205\220\240\274\261\321\030={\241\236;(\206\377<\327\315\'={\257\355;#6\253<\304\371M=\010\371\364\274\025\305?\275\215\265:\274e`O=\212\263\262\274\002xO=\345\373C=+\r}\274\363\336\017\275e%#\275\234\215\272<<\247\354<\371Qf\274\354K\355\274\275\365\206\273\3104o<\213t~\274I=1\274\033\317F\275m\037S\274\345\374\330<\347\001\226<@>\001=\017C\033\275\002\t\007\2743\005$\274\026\304\374;\235\217\275\273:\344\352<\343y\203<\331+\346\274B\211 <\014\262\320\274U\325\032\275B\0130<\033\267\024=&\356\372;6\350\031\275\323X\350\274\257\303{\274~\2754=\272\002\033\273\013\335(<\320<\335\274\240b\037\275Wr\256\274m\336\253\274\311^,<j\277!=AI\210\272-\\\235<9\017\"\275\347\013\322\2730\013\207\274\355-\006\274\344\302\010=\202z>=\360\326\356\273$B\243\274\350&)=Y!;\275I\362\237\274\213m\022\275r\330\005=\253h\025=\225\302\373\274\302:\257\272ga\233\274\020\026O=+c\002\273v\337\215;\037\270\004=\211G\244:\336\"\276<\361\375m\274\230\254\312\274\031\200?=\264u\343< \000\305\274\334\227\020<XZ\214\274{\274\322\272\361\001m\274\236\r\006\275@\036\225\274\321u\336<\320\200B=\336\346\377<f\267\313\274N}g\274\305O\2628\340\356Y<\321\203:=\024\017\251\274\320h+;\204K\313;v\256S\270\253\356{\273S5\025=\244\374\352\274\034\244 \275U\261\200<\264lR\275h\234\000\274\2548\342<K\022\340<\330\310\223\274\212\346\257<)\031\031\275\211\275i<\2025\001\275b\235\304\274\217j\350;\361w \274\372`1\275h\206\352\274\303\220*=%S*\274\360\246\027\275\262\256\003\273)\014o\273\244W)\274\200\352)\274!k\005=\273\272\202\272\367\2212=\345\237\270\272\344\026L\2751}?=]#\r=\224\354\005\274\257\304P=\201+\230\274!V\025\275\251\010\271<\037\344Q\275e\363\322\274\227\034\344\273N\320\227\273\021\256y\274\235\225T\275 \234\304<q\224L\275\260\342\020=\310\255\264<\374.\230\273\317<H=\372\377?\275#\024D=\3207H:[\234\247<\217\020h\274\234>;\275\364\361\t\275/o\255\274`\003N\275\255\027\007\275\226~N=\231\217\273\274\007\302U=\246j\316\274\237\306\032=\024\241\302\273\024\016\035<\205\371\262<@\237\016=\235\251F\274\'n\303;L\355n\274+\256 =\020 \304\273\227pH<\316\232\222<\200\320}\274\222\243\222<2A/\275\216\320\036\273Uz\013<\332\303L;\017\346C\275\026\304\346\274\233R\035\274\333\032F\274\037\265\275\274\352_a<\021\216\335\2736\305\025\275\'\271\202<\375\210-\275(\357b\274\363\3121=J!B\274\361)3\273r\344\217\274\377d\020<\311\273\n\2752q\234\274\177\"|\274!\366\234<\251/\314\274E\225\346\273\215\233!=\352f\342\274\022\336\312\274\027\311\305\274\304}@=[\215\003=\r\327c<:\367\220\274\220B\314:c#\007\275\r\221\362\274\025\234\314<$,\032\275Fsi\274+\214e<\027\200*<k\314\342;@<\020=r\3551=\227M\t<\333\n<<\305\237\227\274\344\352\313<\200\t\344<sW$=\247F\300\274\200\n =\364\370\037\275\355\035)=u\317\304<\331&\240<\031V+\275\367A\374\274\004\023\363<s\257\001\275\024P\244\274\033kF=E\317E\275h\014\375<\357|/\274W\251\217\2711\201\206<\2222\334\274Y\010\301<){\337\274\376\223\024<@@\033\275\375\262\003=\273\206\234\274\346\256\265<\236\213\263<M\233\330\274\264 2=\222h\001\275\326\3051\275\235\026\024\274x\021e\274\022\276\022\275KH\211\274\177\347\377<\340\263\035\275r\265P=}\022\032\275\\@\222\274\\(>=\r\331\253<\273i\034=\025\346\037\275%\010=\275u\2166=\201\370\223<>\366\"<\260\254\r\275\265V\010\275\024s,\275k\206\372:dt\313\274r\355\'=\323(2\275\270\2356=5\375/=\030\034\332\274U\202\037=,./\275F:\032=f\\\327\274\334e\372:%u\247;\007\236\264\274A\035/=\337e\022<\266T\005=\234?p;\030\224\301<\363$Z<1d\273<L\252\000\274\'r\016:\201\352\023\274*\342\016\275:}0=\332m\202;\275\3331=\213\004\202\274\201\343\314\274T\230\244<g\n\244<\203i\321<\205\242%\275@\324\017=\370\365H=\305\220\272<\330u\007\275C\302\355\274X\327\310\274\243\273\365\273\3615N=\225\000(\275x[N\275\223*\025=\221[\202;\031\330T=\261\215_\274\276\321\340\274\206\321\222<\020[\255\274\267\244U\2744^T=\331\3660=8n\363<\026\233T=\232\0361=\272\366\254\273\207q\003=\262\367(\2755\214\035\275\343\373R\275m/\264<\264%N\275K\331 =d\247\"\2752JM<8\201\317\273\014\362.\274\267\325w\273$\376f:\312-\225<#\313\351\274\252f\346<\3404\202<\371\325\033\275\373\337\024\275\225|\242\273\255\213$=Z\233=\275S\r\366\272S\230.=\034v\007=\333O\"=K\244\332\274\234\006\353<\360E8=\363\3118=%\210\020=\323>\014\275\005\3449<n\355\324<\tu\233\274\344\'\316\274M\354\373:CI\010=JTM;f\231A=>P;=\024\217-\275\373\275\307\274x\274\212<\366k\255\274(x}<\264E\304\274~\225H<\030y\321\274\245\031\004=\373\272\021<\302\010H\275\263l\370\274v\313\337\274\277\323\263\274?*\274<\241 \211;!\031\035\275\n\034\'\275\221KA=9X\n<\371\301\326<\206\207\272<\002\007\302;\371w\333\274\307F\001\275\314r<\275n\244\030<,\270E=\315J\331\274\3012\232<\220\242\037\274y\3512\275\3456\274<1\205\277\274\205\233\022\275+\320\'=\242BO<\302\376#\274>\207\325<&\347\020\275\2403\210<D\366\024=@c\022\275\3768\371\274t2t<\200\375\'\275Bq\370\273\350\200\025=\003\271\357\274hR\365\274\'\271D:\315C2\275{\237\251<A\022\007=\032\317N=\272O\266\274OI\022=v\t\016\275\201\357C=\301\t\330;.\315\033=$\260\316<^I\321<\325\331\370\274\257! \275\307\302,=Q\333\014\2751\246\024\275\035\256y\274\320\255I;\326\022\220<\267[*=v\264C<c\250r<\354L\215\273a\257\326<\330p\310<\337N\'<\266\364\366;\302\277\023\275\307\364>\275\023\337\325<\024\270Z\274\372\354y<\342\216\215\274\256\000\345<\257\262\027=\026\277\351<74\020=\222\306\020\275\003^\370\273\216\277!=\014fS\275\021\027.\275\317\266\211\274\261\0329\274j\tO\275>\316\000\275\342\254B=\025\245\200<\032\t$\275dA\340;\364\352\222<\3270\307\274\377\273\007\275\230.\025=Z\3173;\351\005\371<\204\016\371<c\233U\275\262i*\275G\362-\275\343\253\023\275\";9\275\232+\031\274\247#\270\274\006\234t\274\321]\304\273\323\244\270<\364\342T\274\360b\253\274U\353G;\036\323\n<\032\220\334\274\332r*=\026M\230<\240\2324=\210\305^<\221\364,\275x\373\362<\262\342F<\247\330R\275\240\345\247<\243.\000\275\353]\226:\306SK\275\356\360\231<\036\346\230<\304c\026\275*\2503\275\361[\250\274\234A\361\273\306\035W<\324\212_\274\326\035\023=\310\273\327\274\2169\"=\366k\243\27356\t=E\361\004=\3162\223<m\330#=X\230Q=S[\032<\\\3003=\334\340\320;\030\331D\275L\"E=\330`#\274Y\201A=\342\222\315<\216\032\013\274A\323\274<\314$\025<\373^\333\274c\324s<\013\021P=8O\347\274\343\325\020\275*\330\022=4:\234\273\321A\207;\023lt\274#\'\027\275\255\360\327<\377\0219=\007\002w\274\035l(=h\327\211\274s\031\"\275g\321K;x\215\200<`\211\020\275{\271\356<\003q\004=N\336m<\024Y\352<\212\243\025\275_g@=i\223\022=\334\037$=\330xD=\010\277D\275\013\326E=2V\033\275\2218\024=\201\361G<\231\364>\275^\262n\273I\016>\273o&\371<\033\325O=m\3469=\374(\352<X\377\360\274\347\301\020=\276s\363<\353\002\235\274\3716\374<3\315\006\275M(\314\273\300{\321\273XN\244:\371}C\274\366\310\022\275n\244\233<TE\234\274\317\334\027\275\321\301B\2744\0033\275PT\003\275\256u\242<H\013\026\2748\304\033=]\241\\<\231\310\357;\310\340\315\271vp\345<(O\026=qLS\274\355\3556=/\335\350<\014\027\366<\3139\036=\242\377\347<F,\004\275\210\367;=\3547\210\274vt\257\274Zp~<6~.=N\212C=Mz\365<\t\212\234\274W;\271\274@\352\025\275\255\2202=\2249\365\274\252\217\020=\010\'\035\274\371\220\244<\024\366x<\277\341\375\274\330\217\003=r\360\364<\266\331N<\000\353R\275\007\301C=\030\023\036\274T2(=\253\t\273:\325T\307<\336\347\034\275x\353\217\274\362I\343;N\356\251<\326\014\'\275\036\345Q=8e\277\274g\265\325\274m\376\320\274<\2259<1\031l\274\364m\n=Uv\025\275\373\317S\275\003\340\"\275m\272@=Hc\030=\000\242\213\274A3S\275\242\275\373<\262\254\026=\245k\337\274S\255\257\273\223\372\373<\020\030\231\272\325g\256<)!6<\237\376\334\274\375\362\314<\365k\364;\031\266\024=\027\261f<\262\233.\275\263a\000\275\311\005\030\274\032\223\331<\006\313\036\274\024\244)\273\275\300\213\274\"\321\341\274\034U\351<T\017\377\272\003a\024=R\223}<N3\272\274\334ej<\363\340\373\274\376I\240<\277d\345\273\250!\230\274\300Fl\274\310NF\275\372\223\030=\376*\273;R\251C=A\210\326\274\301u;=\024\205\035=j\301~\274p\325\376<`\356\t\275\206\341[<0\340\034=\302\377\216<\3039Q\274\235\034\353\274\247\r\000\275\311\276*\275\343I\277\274\'\304+=y\273O\275}\235\337\274\225\016\226<h\006\276\274\216T =\014\000\020\2757\0013<f\251\205\274R:\034=Iw\352\273\240I\032\270\036<K\275\360>\342\274{2\017=\226\010H=A2 <\221\005\t=5>\016=n\320t<\330\277$=?\302u<\377m\261\272S\325\367\274\263\273:=\0104\037\275\270r\300<R\365.=\032,\321<~\335\252\274P\212?=i\257\001<\243\372!<(\213\036\274\354 \021<h\3126\272\313\244\204\274\364{\227\274\367^\006<\232\323U=\013\256\273\274\222`9=\254\247\213\272\332\347*\274\035(7\274\204G\001\275b2#\274\033\321\222\273\254\363\221;\031E\302;\020\301\033\274\237\216G\275EZ,\275\331e\341<dp&=E(\030<svg\272~\026\024<,\335:=\303\027\025\274&\025\017\2758-\330\273\373\254\252\273xI\305<\032#\317\274\016\034P\274~\244D\275\232b\032<\356&@<K\032\244<}\335\250<\013\357\303\274\027*\037\275u\022\373<\337T\013\274\365!\302\274(\354D\275\223\362F=,0)=\257x\330<\r\340\306<\303X[\274\220\203\316\274\256h\235\274\037\231\177\274\304\317\247<\t\277Q\2737]\325\274\201\302\256\272\303\311\317\272H\301\232\274\377BT<\201v\321<y\353\274\274\234U\375\274p\003\357\274\266*\001=m\364(\275\365L\346<\206\027\033\274\2706m;rn\350<\021\032c\273&\n\027<\336\037\024\275\316\177)=Kl:=)\035\r\275\302\322\334\274)\020\203<\201G\330\274\300J\006=\000q\305\274\013\320r<8\001\006;q\r\354\274\351\222\356\274\311.\330\273\232 \311<lM4\275<\220\'=\205{$=\260CO\274\273\233\022\275\341.\003\275\024\211\362\273\000C\031\275\232i\037\274r\2425\275\033yS=\362\313\"=zr\235;yc\232<\241\361P=\262\221\000\275\031\202\227\273W3-\275\271\n\262;\376\271\037\275I\274@=\362GF\275\351\211\372\274]\312\251;\246<\017<\203\367x\274-\001H=\347\004\026=\0271F=\243\0057=\350\277<\275u\246\257<\337$\273\274\256\203\325\274A\300C<\230%\002\274\357!\000=\005\002\317<\244\027\t=]\021)\275\232\300\031=qf\343;\350L\327\274U\035\006\275\331\251\356\274\322\302B=hP=\275\314\010\271:\201\354\204;+oP=+B.\274\317\235=\275V\302\345\274\376\265\027\275\217\275\376<\274\022\224\274\340;+=\316^\031\275\300\311n\274\353w\335\274\035G\321\274\320|\006\273_\375\235<=\3640=\255M(<\225\265/=L\312+\275j\230\223\273q\365\341<dpM\275Y\'\360\274\002\332\302;MnC=N\027\221<=G\274\274\352\304\234<\006\\[\274\n\272R\275\016C\276<M\204\207<s\235\371<\21619<\212L$=b\217\225<\030\243\031=\371\324!;\351\235\361\274\213\357\243< \006\344<\265Q\033=\347C\356\273W\201\006=\246\344\026=\031:\021\274(\325Q=h]\035=\200\227A=9\267$=\017\255\2408\377\333\216\274X\310\344\274\263\021\316<\222_\317\274\014}\234\274d\335==\353gH\275\024^3=\310R\263<\227\316\001\275\177\223\271\274z\t(=\017zs:ZRR=\225\240P=,\310\204<x\327\000\275\372\252\n=\"\352U\274A\254\033\275J,\005\275\277\307\362\274\2019#\275\234\221\021=\2146E;\026\007\t<\302t\r\274>,*=\303\235H\27403R\275uD/\275xlR<\266\253A=x=\312</\215S\273\035ZA=\370\342(\273\014\004\370;\020\321\301:\226\345D=\364Z%\274\004\'T<\362\\E=\374\356\222<l3\222\274h\345\301;\356\3231=K\236\305\2741\275D<l]\211<\261\367A\275A\\<\275CZ\271\274\'\3451;\340=\017\275\215\200\030=\326\356\224<TBI\275\254\270<\274g\001\321<\035\226\021=7X<=d\341\217<5P\001=9\006\001:\236V\304:A\371H\274\253\373O=\0326\212;}\010n\2742\370W<\002D\261;r\354P\275\265SH\275\235g\262;z\354A=\265`!=\355\351\371\274Z\005\356;\353\260\021\2750\341\006\275\035E8\275\264Ek\274\216O\352<\273Y\267\274\020\217\004\275\331\256x\274u\226\311<\036\"L={\323\"= -S\275\220\360\212;\023\332\273\274\331\200\312\274FK\243\273\273W\022<\004\t6=\027\233\032<\005\205J=`Y\312\2749\335\301\273\371\225Z\274\341]\301:\332Q:\275h\237\371\273\226\346N;\n\252y\274A\020\375<\024\3271\2756jU;Y\327J<\025dP:3\227\323;<UB\274\347\2530\274\262E+=qA\311\2744\371A<\033\353\267\274\226\335\221<1ym\274\324\326\330<z\311N\275\304\260\230\274\355K7=\0033\323\274K}\254;\262\355\251\274\232\223\324\272\205\366\366;2\3348=\345\376G\274o\006\272<\355\227\217<FOu\274\322]\031\275\027/\342<\346\030\206<\336\267\373;v\234\354<\257\3348\275$vS\275-,B=\362|\234<\000x\201\273D\357{<\'\226\362<\327\263\'\275\222\'\301\274\2131=;i\007\021;\357\361\001\275\370\327&\275Lo\211\274\234\362\237\274\304c\326\274\267\341\202\274\211\207\271\274\214\010\251<?\271W;\355\223D\275\200#\242\273<\n\301;1nH\275\255o,\275\270b\003=\200\256\325<\177\265$\274\240\276\374\274\240\301\027=Ir\223<Y\231\303\274\201\036(\275\213{\005=\030\361\201<\226\302\030\273KRM=\331\335\266\274\306\013\033\275\365\007\n\275\321\307S=\231\034\t=\341\236\211\274\273\227\316\274}\030\225\274\t\312\022\275R\210\345\274 \007D\275\274\272\'\275<7\317\274\265u\023\275\213c@\275\334+:\275\035\231\360<\330\365(=8@E;\034!7=r\341\265<\207:\236<\317\002\257\2746^\302<\004<H\274\364o\024<\031\034\221<V\'%\275\024\t\2569\210\264f\273e\0164=\005\303J\2759MT\275MR\033\275>\t\203<\313\324\343<#\374\312<\344\244K=\031Q\366\274\2709\004\275J;\002\275\222\377];\377\007\251<D\023\355\272|V\t<\300\274I<\274\r\025\274qj\322<\221x\n\275W\212;\272\215<\312\274\375\325\224;\313Mm\274\244\326~<-\302\031\275\360d)=\252\232G=L\3705=\3572$=_\006==\311\005\035\275\237K\237<\326KI\2752)\375\2746\367%=\263\215p;h\026\301<\002 E=\000\367$\275\246\234.\275$\243\037=\241\326\235\274\3315\364\274\325\347\342\272\216\013J:\032\265!\275c0\242<\005x>\275\307\223K\275\023\2414\275k\010[\272\205\273^\274\337\r\246<\364j\315\273I\034\304<\211p\365<\033\2368=\267x\342<,)R\275\r\226\217\274\005~\374\274\305\326\035\275\203-\017\275&\305\236<d\311J\274\367\250\021\275\265\351\t=(2\264<K\205\205<\330\260\037=\210}\310\273\01389=zC8\275\336*\217\274\005\273\217<\335\327F\274\020]\032\275962=B\341\213\272\314\325P\275=Z\263<>\030\034<\317r\230<\256Z\345\273\016\373\303\2749^\373\274\366\270=\275\343\223\204<x,\362\274z`\336\274\211\262X;\013\3172=\022@\257<\205-O\274M\022K=a\237\021;Z\324D\275\347\'\307\273\272b\371\274d\325C=\275\361\004\274\351\350\366<\207\342M\275\337j\244\274\317R\310\274\366D\235<Z\361!\275\003\360\376;\353I\036\2756\324U<\276y\003\275<VG:N\274\002=\214\252\021=\001](==\031\205<\304\220\022\275\3224\370\274q\227\036\275\270\361\276<I3\243\273\364\245\245<#\201\247;\260\240\370\271\022\220T=\177\261\007\275\256s\270\274,Nx9\017k\231\274\311\376\347\274\\\270D\275\235W\237;\000c,=\362\304\014\275(\232%=<\000W;\262Q,=)\202\274\274\321\332\202<\265\233\224<\315bG\275s\024D\275\276\366\251<0\311/<\216Rx< ]\262\271E\266\016=\215!\007<J\230#=UE%\275\203\315e\274\270{\035=\334\363\001\275w\272*=\377~\n<5 \303<\333w\n\275\260b\r\2752\326U\272<W\002\275z\256\241\274\025\375\302<\023\231P\275wS\354\273\232\261E\275\002\360\020=6\214\030=\357\206T\275\017\035\t<>5\230<\213\266k\273\0333A=\257&#;\312\321\006:]\366?=\301\3267<\344\2655=\030f\030<r\260\006\275\204\214\002=~\237\032<NG\r\275i\330A=\242\371\014\275\300l\020<\341\001\035\2747\347)<\367\231\343\274t\363H\275\0367F=\355(\320\274@\r\033\275\203$\033<\'\000\333<X\261\335\274\003f\003\275\266^8=a\325\264\274D\356>\275c\334\255\273C\203\001=\031\267Z<\350\221\220:J\257@\275\010\036C\274\357\237\307\274.\263-<\317,\331\274\377\273\246;x\340\245<o>G\275\337\000\247\273\017\031\021;\010\217\2209\327\231G=\234^\007\275O#H\275v\033C\274\357\357\257\273h\310<\274\304CK=n\370\037\275\243\023{<\036\006\203<?\352\352\273\362<\202\273\003\2524\275I*k<Qm==u\237\013=\343u\275<\367\024\276<\362J\347<\345\'\226\274?\352\245<y\355Q=W\263\201<iM\030=\356\364\'\275L\331U\275\362s\222<.D5=tp\007=\206#\007\275\266\220\253\274\370\351\345\274\352ZU=\266\217C\274i\317\t=\353\342A=YZ\220<\211\352\013=\363\273#=T\271g\274q\007\375\274\213L\305\274\315\221\323\274\026\346@\275\201\327\226\2749\335\006;\355M\036=\003fF\274\326\322\277\2744\240\366\274\272.\366<Z_\246\273\362j\233\274\211:F=+\332\231<%3\026<n\266v\274\360\034\267\273\344\"Q=\206\310F<\245>\207;\310\330\306<\371iZ\274\334,%\275;\270\255<\032+==?0\245\274\315\274\003\275\314e\n\274E\017\343\274o\034O\274\036Z\313<9\300&=\027s\253\274\240\326\363<\307\030\001=\363\243\256\274\311\364\023\275h9\274\272M\225<\275^V\271<4\366\032<\315\3441=$\001\254\274H\t\352\273Er=\275t\245 =&\0370=\252\024\016=H\212\004\274\236\033J\275\245A\320\273\023Mf\273\031\316\271\273w\265\035\275\261Y\022\275 \241F=\023(\373\272\247\375\026\275fS@\272\343\260\345\274j\3231=t\333\030\275\332\233\275\274i\373>=\321\253\206<q\260t<\333&\277<\311S(\275\333\314v\274\202\233\n\275?\024Q\275\320g \275Q,\251\274\177\035\344\274\330\3244=\227\014\212\272Z\270\252\274\367\301l\274u\243\224:\355{\021\275\332\271\037=\274\345-=\344\237\013\274=+\251\274b_\335<P8\250<M\203q<\313mN=H\2515\275\313\211@\275n\\W<\316\373\"=N\331\246\274\273V\n=\363\021\332\274[_&\275+\010\362\274>\"T\275\330\260\007\275\347d5\275\246?\210\273\331I\203\274e2T\274\023\225\033\275\323k\016\275\324\313,\274\277\255\263\274\335\325:=\357\350\032\275fGQ\275\033\353O\275/\226\023<[\251\016\275\033\013\303<;c\306<nO\022\275c4J\273\013\3733\275\277\333\200\274\272\307\266\274\256P\2719\320M\020=\327\263\016=\351a\201;\027\220\337\274\272\201\340<h\004)=\334\"\026<\020N\013=\341^d:\305#Q<#^\356\274\231\360\331\274\264\\C<\374\261s;<\000D\275\"\204\347<3Ue;\347\204Z<8*\345<\254\215,\275\022\200\256\274\332\321V\2738a\242\274\253f\364;\256\2351\274j\372\202\272b\212\236;\200}\236;\003\220\013\275i\220M<T\302\371\274\304\244\326\272\313D\214<]\377.\275\203Qo\273\207\375\237<!SI\275j\003@\274\235\210=<,\023\220\274.\325\371;\312(D\274Xo\220\273^\025\030<\032\036F\275k\016\025\275!\251K\275\275\223\305\274\217&1\274p\000\220\270\245p\334<Y\177\n\274\032\375\323\274\3134\340\274\363\352\255<\335\251\006<\263\302\330\274\245\':\271\033\244\207<wp9\275\355\336z\274x\374\337;l\341\005\274\352\260b\271\024-F=\362w\017=\201{\363\274g%\003\275Rm\220\274]\274\270:\033\273?\275\323\327\251<)\016#\275r\224*\274\326\327\344<\324+\250\273Ll6<\307\222\334\273\'\363O<\233\022\367\274D\032\014<\006\316\255<b\010\337\274\007\272\260\274\311\331(=\357\236\316<U\023\010\275\t\325P<\275.<\275\265\213\035=7\335\226\272\247\037\027\274\035~\271\274Z\340\020\275\330\202\301\273j\366H\275C\030\207\274\010\202\r\274\257LG\2754`\005\275\336M\303\274\217O\214\274\010=<\275\331\0050\274 c\016=\006\360\037\275\022\367@<\254\006\315\273\256\034\300;|\2674=\3470\327\274%Y?=\304\003\312<\371\003\014:\2124\244<(d\225\274z\030\036\275\375\226\362<\364V\331<\247\001&:\302\373\227<\263|\t;`\243F=\361z\370\270\316\361v<\256\024Q\275M8\006\275\177\036\211<\360\027\311<\335\230\033<O2J\275\330A\227<\2322T\275~\304\007\275]\222(=t_\364<\213\211\'=(\241\r=\016\305t<Z\212\266;$\027 \274\362&\240<H\315\032\275\211\257\307\274\330\377K\275\035\2646\274\370J\221<\345:}\274\331\305\r\274@V!=B6\013=U\357==\356\200\210\274\240k\270\274P\264(=~\0350\275\272>\031\2743\210\210\273=)\035\275\260\'9<\261\205\246\274o+\257<\267A5\275{\223\014=j\370\332\274\022\3703\275dn\016<\274p\016\275\221\325d<\032d\024<\014\"K=a)\202<\002\236\252<b\260\334\274\352l\306\274\276\026\374<\001lf\274\201\320E\275\375\267\260\274\347Q\312\274\276\307\347<`\370\314\272$\230\364\274\271o\316\270)}\362<\270\030\023\275\272\235\034\275\235/4\275|\244H\272\345|G=Ur\262<\243\266\225\274\000\230\346\274F\273\022=\273\t1=?\026\022\274\020\233\005=\025\004\023\273\"*K\275\031\262%=\325\214>=\250b\350;^~%=-d\224<\204Z\200\274\277\370\006;\200\313H\273V|\302;\004\305\333:b\373\207<\202\\\351\272\033\007I=\215\260\347:\325\265\264<\277>\005=\234v\002<%i\345<\035{\215\274\200x\005=\001(\211<\3313\230<\362\032(\275\210\2105\275\242\253\241<\230T\023\275KB\021\274\341i\020\275XDF;\224\331\025\271\367\225\030\275\034nJ=0@E<p\030\002\274\307\334\363<\336\217\234\274\377e\002=\360(\370\274\207\330E=\307?Q\275\"C\023\274G%\341\274?\n\211\273\325-m<\266b\021\275\315u)<\224\352\'\275\267\237\n=.#\341;b\225\247<\'%\357\274\364\002%=_\310\002\275I/\367\274V.$\275\306\3248\274\323Y\221;\301\334H\275(\220\017=\275<\322;\225\336=\275\\C>=\032\375\355\274C\304\256\274g8\257<%\'\'=\226w\242\274\0042E\275\310\347\030=\225\235\305<W(S=\002R\341\274$,\013\274\362\321a;l \257\274v\257F=\337\232#=;\244%=\330\'\311;\310\237\250\274\360t\236<\311\0366\275w=<\275\336\336\345;u1\016\275\311\264\315\273\364\177?\275r\252d\274n\251\236<\250\r\036=\257;(=v\005\346\273\355-\261;\214\001\016=n\355\251<;\265\035=\2616O\275\2466\037\273Wt\017\274>\262\372<\016\314\211\273\232w\263\274B\251K\275Q\274)\275\216L\001=1_\027\275J~/=\316o\327;\360\023U\274\302I*<t\374?\272z`:=DlH=G`\226\2740\202)=\244\337\031\275\034W\000\275m\304\331\274\000\220A\2751\274\022\275\353f\262\274\0037;\275K\007\261\274S7\265\274G\362\253<{\301\370\274\245h \275E\235\360\274\0051\202\273\027)B\275j\2563=8J\334;\277M#=g\036/=\213\372d\272\230\320\027\275\346\304\263\272%\344\357\274f\260\024=\353G\311\272\337\257\352;\370\224\037<\3726!\275\234\000E\275y1O\273\350G@\275/\314>;l\021\231\274r$G\275j\003\346<yi\003<\3755B=\224\343\026\275g<\034\275t\217\303<\300G\031\275\364z\227\273\271\277Q=6\355\032=aH>=(\374I\275\007(B\272\276uT=\225X\312\2741\242\021<>\341\017<\345z\321:*p\033\275\301\251\232\273\261i\311\274\037\246\342<B\236\010\273B\t\024<\035\007M\274\016\004I\275\203-\341<\303P\326\274KLy\274\245\004\272<\032\376\301\274W_\375\274\006\315\030\275?x\357\274\21766\275\004\374\304<\344\346\013=\246\375N<\327@#=\242\032\246<IS?=hc<\275\353fa<\354w\366\273\347\314f\274\020\376\330\274w\350==\233K\r\275n\353\004=K\315N=\225\376V\274Y\363\3109\210\237\333<\265\237\017\275;\2266\275*\234X\274\351\376\350\2731-\037\274\005\207\342\273\020\234\r=\267\345/\272L\275\032\275\2103\352\274\322<\332; B\376\274C\214P<\373)\316\274\004\263\027=\230\016k<T\321\323\274w\311H=G6Q\275+N\002=\234\021.\273\264\0021\273\241\027\356\273\032\377$=b\261P<\240j\001=Z\344\372\274\243D\276\273\255L9\274\272}\021\275\024!\342\274\342\224\017\2743\t;=\2701+\275\273\313\213<\250\315\331<\210\374\256\274h#\325\273\3649L=$\241B=\300\031\030\274\351$J\275\350Q\341<\3439*=,??\275+\374\341\273\365\372\014=\367\245\366\273\027\2548\275\220k\322\274\340X\020=H\332\365\274W\303\006\273\264\313\355\274t+\014\274\005\306\032\275\210\201\263<\357\311%\273\234\374\216\274\256\345B\274\324\253\255<T\254\200\274\32137\275t\037P<d\203H\275\3742\035=A\2179\274\202\260\323\274\304\265D=\216\r3\2750i\031\275\357r\215<\2705\027\275\304\355\001\275\\\375~<,\034\035\275\264\0350\274\312\362\017\275\303\313\265\274\311\305\317;\344\334.\275y\343$\275\373\241\026=\000\270\310\274\035\221\264\274\226D\360\272\331@$\275\330\357\256<\217\3675\275\220\027\037=\261\257\024=S\246s<\"\002\033=\221\317^<\352:\321\274\301\350F\273p@Q\275\333Z\205<UZ\014\275_\361G<\214\234\210\274\377\224\027=\312-\200\274\234\214\033\275\2228\033\275\177f\256;:\231\343<A\346\274\274E\273|<\242c)=\022t\370\273R\022\026\275\370\027/\274\r\024R=p\032\253\274W\034G=\242\230y<o\264\333<\362\203\302\274\234\270\235\274n\213\030\275$|2=\260^\006\274D\317\030\275J\335\377\274\006\355\002;b\344\336\274\347\340\217\272\215\024\260;\372D1=\"\304\203\274hG\301<p\026\233\273\020D\013=\302\262g<,j:=ud>\275<j\014\275\275\024w<E\236\340;\2740\250\273}}\332<|R\n=x\245I\275\232\224\253\274) \354<\026\366\372\274;\203\210\271\004J\\<.\250\334<\326\230\r=\366\234E\275\231\037\001\274\212-\200\274\270C\031\275\376\212\301\274~i\037=\272\336\201<\204\035L<\346\025Q=\330\243G\274\230\362&\274\210\325\265<\223\255\037=\323\311(=\031\017\357;\024@\005\275q\270\355\274\331\312}\274##\n\275Avk\274\246m\020=2\230!\275\320\267\3259\32288=\370\362\200\274\326\036E:\242\377\257\274\304\261\314\274\177\312\032\275\355v\253<\341\276A\274\267\252\334\274\231\205\370<\220\224\016=\237\3418\274\376\333.\2753=\374;_=\344<\254Y\035\274\306k+\275\334\244\031\274\265\316T\275\0336\023\274R\376\276<4\221a<\014\207\302\274\353\363\257\274\355\303\267\274eg3\275\206\370S=\332\364\031\275\026\023\031\274S\350\340\273\211Z8<B\233G\275\006\003m\273\344\306\261;\017\373\000\275d\310\350;S\032\247;_\235=\274\257J0\275w\006\016\274\204\035H\275\366b\227<\373\255\312<\354\376\034\275\344lC\275\031\025\376<\022\241\251\274\350z\2479?\327x<\301\234L<\213\201\215\273\331#\t\275\225\203\235<\233\345 =\030=D<\347\350\270<\002\255\267\274\271\207\336\274J\371\013\275{1\352<s#\022=s\003\375\274\014`F\275M\032\023\275\320B \274F\236\312\274\224\312\225<\237xT=\235\305\231\274\213\333\016<\277\031O<\342\362\256\274\204\031\'\275\314\244\203<\256]|<\010n\326<\022Rd\274`OE=:\273\002\275\221\035\363<T\262\270\273F\0035\274\205\206\033=\230\344\257\274s\253Z\274\262\236\256\274\374z\005\275\244\236\027=\007 \375<9O\021=\010\261\001<\211\375\270<\355\013\263<\303\316\351<\331$\332\274\001\334\216\274\024\037K\275\330\3633\275\3424\020=;\'/\273\233\313\030=\374X\235\274\275t\343\274|\261\255\274\351PC<\343\245U=\235\037$\275\312r\305\272\014\244\013=\322\3740\275\232S\314<\376\035/=\346\\\231\274\266\345\221\274\226\'\310\274\335\215k\274\024\233S=Y\373\333\274)9D\275\371\311\234\274\225\344\332\274\306\314T\275\221\207\035\273\337\014?=4\220H\275\313\341$\275&@\221\274\277\263L=s\326R=E\2073=\3267\313;=\356\'=F.\\<XD\240\274\236\211L=\213\357\014\275#d\377\274\20634<\214o =\177\341\320\2742\177\201\274n)\033\275\330\2018\274K\226\362\274\247`+\275\326\246\031\273\237\313\225\274\274@\331<\303\004#=e,\027\275\020\306\003\275\014\024\005\275]\"\004=\307\257E=\207\363\277\274\313\207i\274\332aO\2753m8=w\247\210<. 4\272u\212O\274A\002k\271ua\024<\245`-;\345\007(=\013D\032\274\354\263\373<\266i\355\273\324\310@=\261\371\311\274\324\337\037=e\313\n\275\242\354\020=\246\300\005\275Y\354\020=\247\263\236<\025<>\275\274r;=x\022\'=\005_\007<\2514\034\275\360\037@=\344^)=\277yZ\274\270v\303\274On2\273\342*\001;\312\241K<\340\340\254\274P\t\345\274\300\350\251\272\036\341:=\374\205\031\275\007\231D\274S\221\025=\255P3\275\220D\261\273F\274\034=#\240\251<\311a\037=\345\273\342\274\316#\360\273\353P\177<4\236\034=2\270\033<\3259\310\274\034\323\216\274\216\003\275<\032\017\314<\014\250K\275\300(,=.\3063=\001\231\272\274\372=.=\305\003O<\352\261\202;\233(\026=\335\266\026=\277\306\357;8`9\275eU\035=\201f\003\275\000\317\242\274\034\235\341\274\213\241\033\275J\214\016\275zr<\275\2247T=\035\3445=%\217\002\274\250\021\003=\324\320\021=\017M\203<*\307\027<\037\343\036;\315\t\210\274Sz\311<Q\005_\274\233E\021\275\221\331\313\273>\352@=/j\343<\027=\301\274\2248\343;- B\275\311X\344<,v\006\275\0073\020=\246\326r\274\233A\006\274a\342\017=\217\244?=\373\220q<\341\301\361<Af\017\273\277\251\021\274\235\305\350\2741\300\244:\244!>=\212?L\275\252\027+\275 \202L\275e\224\215\272o\212@=\305\367\031\274\':O\275\24790=0\362?\275\256^\036=C\311\014\274\244\352\"=\275\372\371\274^\315\035\274\026\221\373<[\\.=?\367\006\275{\276 \274V\263E\275.\013\375<\330\030\021=O/M\2757.><\235M\240;\220@\227\274W\231K=\\\364@\2759\352\263<\2175L\275I^@\275\351X\325\274\273{\310\273\201\005\005\275\027\316\316;&2\221\274\340\261\357\274|\205\310\273Y\332\321\273\347\265\271;\"8\257<t%@=\344v\303\273\204\313-=\230\355\032=\314\235\336:\326g\265<\010\2154\275 ~\r=\017\364~\274\021x\031=c\345\334\274\000<\035=Gy.\275b\265\026;\346\351\265\274\300\244\356\274\233$\220\274Z\302+=^\235J<\202\006\335:`\271\004\275\033\225\366\274\330\201\'=\342\210\003=\203Y\005\275s @=Q05=\226j*\275XX1\275\033\3501\2757\002\217\272\001\027\362<\206\203I=\014zC\275\260#<=?B\237\273\312\030\273\274\353T*\275P\266\221;\312\344\214<\341\340\201;\374\341\001\273\227\022(<\361\362N;d\025\306\274\301\013\262\272\245\256\033=&\264\314\273\345\253\r<\236\217H\275\001\337\220\274\005\'\273\273\nT\360\274t\357\315\274%\023%=\250Q\371<!&\006=\273@X<\\\217\004=r$T<\006f\312<.\211\375;\306\265\303\2746X7\275\274\253\362<\343=\021=\0324\272\274\254r\025\274\233\227\013\274B\374\331\274\231S<\275\32291\275\270b\276\274\315 \003\273\303\325\005\275\262\377\245<\232{\254\274\257\372\223\274s\302\220\274`>\304\274\375\341\322\274\177;\345;\314\325\266<UV\007\275W\241\232\274Hdt\274\234\362\314\273\224\347\035<\344\3174\275\221}\366<B\242b<\242\262d< \341Q=f5\023=\364,\004\275)wH\275\250\274/\275\227\363\000\275\203\2011\273\0328\371\274\251\314\260\274\343\352\303\273\035\261R\275\240w\300\274[\246/=L\264\r=\025\307*\275)\366\240<\0332\022\274\247\333\016\275\231\246\275\273\260m.=\375\317\313\274g\0077\275\024\274\262<\317\"\377\273\204\027\3339*YK\273vgG=,\2232<\233\232\347<)\372\265\273\235\320\302\273\362#C=\341M\031\275\260\347\"=\2475\315<\220\343\027=\2708\323:F\017\253<!\206\341\273\377\374K\274\375I\346<\22144\275\332\372\035=/\354b<\257;\034\275\"\206K\275\'\257F=\314\266\311\274\277\'\351\274\313w3\2753\002\003\2745\013\325<9\2625\274\375\231O=y_ =(\224\341\273i0\255\274\202U\337<_0\271\274\207O\016=\004\3313\275(\277\315<\235aQ=\362Z:\275\307b\225<\265\326\010\275\"Bi\272\030\254\375\274MQ\271<O\366L\275\037\335\016\275\240?K<\272I\267\274\223\021\251\274\306\014\350<\tXL<\t#2;\273&\257\274\326\307!;\223g\353<\035RQ=\272\241\202\274\217\244\342\274,\306Y<S\230&\274#\236*=}\322}<L\353(<(9\307\274|\014\226\274\314\216\001\275\373\306U<\270(@=+\020}\2740D6\275o\201\303<\234\330\312\2723\371\026=e\342Q\273\222\027\240;|\354\371\274A\336\005=\026\256V\274\354\233\235<M\311R\275%\tL\275\245O\"=\330_\017<\370\230\025\274\327\035\214<L\030L=\277\317G\275\234\220\032;:\337\027=8\'\t\275x\340\367\274\247\007\211\274\332\030A\275;\006\036\275\305=\305\274\311\300\031\274t\317\323\274\362N\035\275\233n-\275\240\030\206;.V <\365\306>=#!\235\274\'i\242\274\266^\303\273\215\"\306<\376\"\023=\r\373\247<1\325\334\274\266\341\252\273\366]\014\275\347\352#=\305nL=6\345\037\275!F\370;&\347$=Dg\334<O\252,\2752f&\275\356\364\277<\312\336E\275\001\0018\274\005+Q\275\030!A\275I\343*:\000\013=\274\274\314\007=-\006*=\371\261\2149 \313=\275\010A\365<h\377\021\275\334\241\005\275\275D\237\274\361\230\344\274\r,C\273\363\3401\275\3365\005\275\374\323\345\272\326\005\352\274\303\376\377\273\273\210(=c=\023\275\n^\243\274\223\353\233\274\276~\000\275\310\360\270\273j\177\352\274<FO=\025\243\357\274\370\361#=\336E\016=Vm\367\273\310I\000\275N\332\357\274\337\310%=\336\267\223<\265\326\"=\236\360\200<\263\017.\275:\035D;=mR\275\335\024\271\273\307\313\320\274f\035-=)\272\'\274\r<\233\274.KO=\332\351\024\274\002\230\333;\374\323\275;\020\200\010\274R.\276\274\224#\243<\354\311\025\275\340mQ\275U@i\274\261`\317\274\305\367\023\275]\031\303;\222\346Q\274Kq\266<\013\247E=r\2020\275{\321\223\274\240\275`\274\010\273\373;$\202\322\274ikA=\224\313\230<$<\032=)Y\261<`=#<^_P\273\021\016\203<$\223`<\261\314\026<\217\013\350<\025kD\275\324\244\016\274\"%\027=\325\343Q=h\336>=\202\020F\275!\232]\273\031\360\363<\277\\\025=\233\345\225<r\214\245\274\177\243\261\274ng;=\210\014\247<\033\205\217;\001\332,<81\005<`\354\003=\031\203M<9\332\336\270f\354\030\275\351\243:=\024g\021\275\302\025\373\274\252_\243\274o\244\026=r\255\362<\024@\200<\324\n\234<\276\266\030\275D\243\366<\035EL;\345\256V\272\304\245,=\036G`<@\363\331<\377\265k<\t\236\251\274e\301\210<T>I=\324\2731\275\207\333@=\321\031=\275d\216\273<5\032\037\275K\230/\275\037|\016=.\256T\2755R\262<\212\020 <{\241\255<a\315-=\301a\025\275L\252C\275x\345=\275\344\327\304\274X\337\014\274CFK\275\025g\365<\214\020\310;$X\320\274U\321\024=7\013a\273\035\305\027=q8\";c\323\354<\343\322\030\275\367\305\177<\006i\321<\207U\331<\t\017\261\274\353)\005\274\276\000\262;N\0104\275\300H\n\275\364(\036=\235\332\3359\035\246\237\274\"3\315<}\001\021=Yw;\275\353\213Q\274{v \273\017=\021\2751\272\226<\334\377C\275\203\232C=\037\244O=JZ\034\275\3311\037;g\351P=OI\2029\344L\223\272 \315L=\r.\031\275\007:Q<\034\367)=\017T\245<a\365\247\274<\233(<2\346\221<\014\241,\274\222\227\312\273&=\251\273\240\271P\2759\035\271\274\0340\343;\256\317\020=\314?)\275\027lP\275y\344L\274\237M\010\275\310\227@\275\222n\250<l\2731=\221U\261\274\t\350Y<\022\314E<v\315E\275%2B\275\377~\365<.\360\372<\363I\025\275\325U\022=\272g\021\275\324]\260;\221\234\206\274\370[\345\274\032\200\254<\242x\313<\t\300N=\020qM\275n\340\314\273`\006<\272\252]\302<\265c(\275\221\310\022=\233\340==(\364(=,zk\274\021V\246<\303\335k\274\032\214[\274\323\261t\274\255;\314;o\2571\275\222\016>\2757\206\023\274\262H\355<pv\032\275\361\314\n\275\302\254R<J(\364<\211\217\251\274\006\321N\275\247^\004\275\254\346\242\273\345F\253\274l5\356\274\350\301\335\274p\246=<\315\375\270\274\0173\017=\255^\326\274\271y\241<\177e\314<d\346\232\274:\035\"\275\303\005\233\274\312\236L==\256\235\274\206c%\275Q\266\000<\266b\036=\251\213\034=\335 \204\274\023\026!=\210?5\275eZ$;K\335p<JtO\275M\223\"=k\275><\354\312\024\274\372\013N\274\022\000\217<\245e\212\274\340\200g\274q\223$\275\377\357\035=\207c\326<\220\337\367<\246\330G\275:\026\031<\236|\t\275J\365B=\337\234\006=\311n^<\\\350\332\274\313t\224\274\250\3602\275\r\277\026<\021\004\035=\t\366S<\227J>\275\212\362\005=f9\016=V\2664\275\370.G=O\347\303\274\\p\016\275e\221\215\274Nf\341<\037\n\014=\021\360\247\274E$#\275\306h\255<i\2336=\231\037:\274V\270\037<\220A3<nz\271<$Q\357\274s\235\007\275\t\212\367<\301\215F\275O\027\371<\373\2521\275![\262<7\005\347\274\331\375\373\2747\321w<\277~\322<%\3129\275\377+8\275}\006\360\274f\225\367<\037r5\275M\"\342<a~\t\275 \225\334\273 v\215\274\031\347\027\275\334\020\335\273\333?\001\275\316\363\344<u\023\223;WJ\244\273\277\213*\275\242\005\245;\362\327\311<\363\271\032=o\315\346<\273K\251\272 \3448\274#\247B=\365\334>=\321\013\353\273\346\216\330\273\250\2740=D\306\034=\313\017\013;\226\245==P6G=\004\267\245\274\005\033\315\274U\257\312\274\323\302\021\275\330\322\240;\377p\204\272\035\013O<|.2=\30581\275E\374\325\274\345oY<\237T\211<?[0=W\3726\275\250\037U=\361Ua\274!\376\034<\305\216\024\275\016b\311\274\214\0056\275~\024\217\274)\370\230<\316\361\220;\033R\033=\037\014<\275O\301+\2722\236?\274\326\360I=\tL5=\001=\317<y\236\200\274m\001==\231C\263\273\322\301\357\274\375\307<=En\'=\352TT\275\220t\262\274\355\364`<\331\204\004=S\302B\275d\260*=\321&-\275\204k\010=\245\365\027=7\243\204<1*\303\274\207\335\014\275\034\332\357\274\275\311H;\007\273s\2730.0=o\321\375\2741\353T\274I\351\034\275\325\205(\275L\315\362\274t\272E\275\267?\340<AF.\274\010\216:\274~\205\340\274\270\024\005=h\305C\273E\275\267<\236\316^;\302n\027\275\02584\274\273\260 ;UV\353\274\202\240\016\275C\237\032\274\020\331#<\200\022\342<\025\236\274<f\377\326;W\000\370\273\2379\336\274{Q*=\273U)=\017c\221\273\274\304*\275\273\323\032<\252\003\001\274\033\010\306\273\361\002\371\274\326<\342<\033\007)<\t\217\351<\331\224U\275\236\221\201\274&j\020=4M\316\274y\000\300<\013n\014<A\024\026\275K\341\025=G!\233\274\313\005\006\274\255\021\014\275\024\020\242\274Q]\262\274\204\010h< ~\316<\321\350==\321,3=\222\270\375\274\007w6\275&\253\303\274\0071\036\275\\z =\227j\035<!\361\024\275\32369\275\002D\304;\231\364J=\017\256H<\277\324D\272\211=p\2744\346\020\275\371\224\020=FLI\2750\030\324<T\230\265<\345\314\014=\305A\356\274n\345\303\274\005?\003=T\314\035=\205\302\001\275\2663\234\274\024\376\324\274\355W#\275V\037\203<r\2338\275\355x\225\274\014\215\332\273))$=\373\276\017\275\222\000\224\274\355\351\217<r\260B\275\213*\206\273$5\031\275\205\2071\275gN\t\275\354\035\216<J\234\304<\334K\000\275{\307\014=3S\325<\213\232\360<B\020\003\275~\317\313\274\217^\336\273\036\301\305<\362\361\014=\243\316\'=?e\210\273\265\215f\274j\305M=Jb\206\274\223\027\340\274<Q\'=O\347\320<]\347\313\274i\004\r=Q\354\260<\373\273\032\273\355\224\352;\014\246\216\274\214y7=\257\005\373\270:)\031=\266\343=\274\222\232\323<\201\336\007\2755\272\202<\253\215\033\275\032\035\223<\246\325B\274d\325\353\274\251\206\032\275\353\275\341:s\275\337\274\014j\007=\272\365\036=\326\216\022\274#sQ=z\364B\275\371\276O\275\3715\312\273\207yF\275\226\335\221<\021,N\275\207\244s<\247~s\274o\255\006\273\255\014Q=\330\345L\274~0\031\2745U\253<\262\017K\275\342\306\032\275\226\3029\275V\0037=N3\014<\251\275*=\324\0031=`\205/\275bW+=\246{8\275!7\324\274F\035\024;S\307\303<\007\214K\275\3554\373<}Y\356;Q\225\223;\031\n\254\274\370\212\312\274\023O\000<\036j\326\274k\364\353\274f\323\237\2741uI=v\376.=\212yK\275\036\235\316<\006\333\224:w\220\345<~T/\275\013Q\247<P.\257<\235a-\275\017\360\275\273\257\033\025\275\314ge<\324\220\324\274uv\317<\035;p\273\317\207(\275\334J\224\274G\317\213\272\342\035\334\274;\317\307<@\357\327<\272bS\275\345\2622\271Y\245\237\274\345XP=\346\267\311<\254^\'\2759\221\332\274\242\')\275\227\2737\275\377\036|\274\177=\244<\347\265\353<\217)\027=\335\223,=w\255K=\316/|\273\001\265\362\274\347\325K\275\321\240\361\274\352\243\004\275\214\335\016=\220\222$\275\314\211\331\274szo<]\005\270<\034\274\246\274&\"n\274\367t\022=\263\274==\226\336\210<pA\313\273\220\024\375\272\226\232\364<\223\005\372;c\017\306\274G12\274\202\2431=\210\026\373\274\240UY<\353+\002=\317m\254;\374\2007;\006o\306<#^K\274\250<N;\315\001\022=e\350-<\0028\020=H$\343\273V\202\016=\263\364\253<\240\202\265<\274F\314\274\257\216_\2740\347\313\274 \365\204<\350\3018=\3716L=W\332\t\275O\314T=T40\275\202\364\205\274\227\243?\275PpM\275\331\3417\275\372}\300\274\366)\270;\275\212$=\264\313L=B\321\022\275\220{\340\274\201p\016=\267\226\231\274\357\313\023=V\331\317\273U\317@=\010F\312\272\374\"\365\274\300t*\275\024\273\350<\317d\004=\007\334F\274\267\021z<N\211\244\274\343\317\202\274\240\256\021={\256\004;\336L\004<&\236\037=\316\026\237\274\\@\352<m*\215<O\246\251\274+.A<\343\376 \275\332\2177< K\007\2754\263\341\274\227\246\227\274f\354\034=\027e\264\274U\326\337<\000\350\232<{\236(=\265\322$=\254v\347<\327\251A\274\';\206:\022+o\274\014,H<9e\334<\232a\314<\315c\342<\277wH\275\315\2357\272\276=\022\274\273\262z\273\032\217#\275\221\002X;jI\0259\236gT=\261\352\237\274\017vA\275\215\303I\274\207\014-=\036K5\275tR\304\273\331\3002\275V\026\361\274X\300\310\273\276z\302\274>\372\320\274_\250Q<$U.\275N\276\034\274*\230A\275\306z\300\2741\"\271<\325/\"=\260\3010=\312. \274\210\037\r\274I\356P<\370\340\005\275\212\2277\275\010LQ\274\334\223\215<\004\247?\273\370b\245\274\317\373=\275^\032\370\273\210@\003\275 lH=\331\'\236<6L\'=\363\333\032<\274\023\275<Xhg\274!B\326\274|h\203<\234\227\267<\272\210\005={h\003\275*\271\354<(\362\321\2749bS=\310\275\367\274\236\246\023=!bC\274\023\017x\273\265\347\021<\021\307\217\274\276r\231<\212\371\031\275\275\252J;\237V\330;\322\356\024=\262\260O;=\327\261\274\315\337?=\236\007\023=\262\207\327<O\326S\275\277\272\347;:\017I\274_\253\007=(\303\270\273\257\'2=)\307\t<4!,\274\000\346\206<GW0=L\253\215<(\333-\275=\201?\275}\262Q=sn\350\274?\372\014=\'\n\n\274\275;\250<\326\206\037=\317(\257\274\035\207\375<\3521\020=\014\327\216<\373V\"=\323\254\027=\251\303\024=\003Q\010\275\261\004\030\275\'\020\014=\037\356E=\246\214\327\273Y\t1=vu&=\310\353\312\274uH\340:\213!:=\330m\361\274\031\004\225\273Q\\%\275)_\221\274\355\2343=`\026\326\274\354\271_\274\271S/\275\216\367g<\230Q^\274\035\2214=L\350\005:\320|\341<O\2260\275\334\247\247;=\305/\275\010\274S\275o\215\364\274\014v\207:(%7\275bI!=\037\267\365\274\315:\'\275\023\201f\274\260]\376\272\237V\010\274\377N\233:\354G>\274{\365G<\032!7=A\006\334<\311\273\360<\225UG;\325\031\272\274\273\010\232<\260\202\214<\362\257G;\000\235\\<\t-\262\272\242\356/\275Z\3722;\2744y<C\274\005\272\024\263O<W\3126=\334m\007\275\237;\317<\341\031B=\366\340\232\273\217a\003=\201\"\r\275~B/<\247N\316<\341\326\353<\263\221.=\372\307R<\001m\032\275\'\306\032\275c.%\275\024Z\215<rl\350\274\347@\017=~\220\274\273\034\316\312\2748\306\301<&\240?=l\021\031\275X\320\242\274\306\002\250<(1C\2749\214P=$\021h<\327\026\330\274F\000\370\274\tb\026\275\035U\334<I3\"=\277y`\274{g\207\273\335f\027=G/?=C\212N=\345`\007={\252\244\274\350\270\013\275\230c\210\272\231\347\002=\355\357\016\275\262\231\202\274\004wG=\2657\322:p0\031=]\010\240<\214\2122=t\243#=\033>\263\274\215\264\332<C\211\235\274\332\376\276<\2143\377\274\320\302K=8\322\332;\0028\037=\332N\t\274CCU=\231\212\204\274\025\305\322\274\"=T=\342\034<\275\233a9=\323\3477<PI\n\275I\266\236\274\322\363C<\351\300\324\274\323\351 \275\250\262\n<\275\272Q\271G\321e\2741\370\r\275#\334\301<\'1\020=\205=\313\274\250\267;\275u\2650=\242\350x\274\r\360<=\266{$=\023F:=o\256\203;\263H_\274?\317\t\274\004E\322\274`\237\325<\322\350\323\274\211\331\264\274n\004\006\275D\277G=6f5\275.\266O<i\202%\273\367X\253<\036~%=\325\241\316\2748\323\307\272\254\177|<P\245\302\273%e\021<\010\007\214\274N\306$\275\037Z\271\273\215i(\275\256\251\034\275\223kn\274\310\324)=\233\360Q\275\354~p\274N\337\353\2748]$\2756\013\020<\0210\226<\320\215\037\2746\365\365\274\002\3625;zJ\030=\264\321\216<U\"=\275\213\213B=M5\277<\257(\000\275k\026=\275WP\341\274\035\315\203:n\355\365<,\001\027<;{*=x\305\t=\270)\237\274\004\340\210<\004\321*\275\272~\243\274\206\231\331\274\303?\215\274\346[\366\273\305x\354<\310l@\275H[\253;kd]\274\322#\025\275\177\362\313<\354\227E=\027\204R\275\374s\037\275\006\274\003=<\021\r\275\217?\315\273\374;\033=\203\032.\275,|\3528\277d\326<\243V.<8\316\274<6=D;\373\\\262\274\016\300\315\274\315\336L=\270\207\035=G\252\255\274\370\032\367<\301<\'\275\236\331U\275\270#\264<\006+\022=W\265\000\275\020\306<\273\262}\234\272\344\355@=\377?\037=\210\355\337\272\021y\217<qq.=\266>\267\274ml\364<{\243,=\205\n\272<\347\270\221<\234\356\001=>PM\275\252\333\024<>\010n\274.\320\025<5>5=\310U\021<\357\033F\275\301I=\275H,\027=\312\350\013\275_B3\275\036\217\301<\230\256\224\2744s7==\310\224\274\366\314\210\273\274\317\035\273\332\227\027\275\243\272\007=\310c\210<\010\264<\275Z\"\016\2744a&=\320\3414\274\225\217\205<\215_6\275Y\247\035=\232\252\332\274\026\261\016\275V\274<=\300N\235\274\347l\002=\372C@=r\255\322\274\203;\333<Y\321!=\252,\330\274]\215G<W\003:\275\032\215@\275\252\262\014\275\034\224X\274\001\207\341\273:\376\275\273#\373\r=\034\002\037=Fj\316\273\360\325H<\327\026\302\273\325\376\222\274`\215\321\273?\320\341<\326\207\331\274,\205q<\307\225;\273/\200F=\277\362F\275\334\374\227\273\352jR=!^\020=\331i4=\201\331\323<\201\302l<Q\002\022=\351\357\003\275>\375F<\354\245\014\275\310\320\226<i\267\342\274\026\256;=\211\202\r=\205\\\367\274\300{L=p\224\r=2\033=\274vj\306\273r\265\241\274]|\366<C\356\036\275\000\021\340\274\334\326\030\2752^6=\302\233\205\274\216\264)=\275\325\236\272n\313\001\275\004+O\274\372\237\203<&\307`<\253}*\275^p\220<\326\304\301\273\256\210)=\343qt\274\213\r*=\342_1\2753\262\222<\213\346J=\027\014\277<>\3672\275\277\"\002=\\+\246<\376\240\036=\210\231\370\273\217\336\001\275\rs\300\274\344K\233<\220\242e\274\225\375\305\273D+\347\274\263)\353\274x\321\216<)\022F\275\345\024\270\274\255\213\364\2749\004\n\275b)#\274Q\330G\271\273m\270\274\325(\023\2759i\376\273\265\267\'\275\014\274\372\274\312\033\014=0\r\253\273\225d\005=\214\2374=\330\365\363<t.\233\270\324/r<\213]#=r\321\002<\244\240\231\274\360\243\332\273\242$\023\275\263\224o\274\202\330\r=hrg\274\202\352R\275\000\334H;\222\267\035=\006f\016\275\330\330\001\275\335:\251<\216t\000<\3122\260<i\357>=\2661\027=h\016;\275$\r\355<\33287\275\344\021\022=\272\225:=\202DI\275\361_\231\274\033\004\334<R\006T=\373\014\321\274\210m\325;\244\373~\273l\376\347;8\\\362;\240}<={\275\211;\364\333(\275\037\'\220\274\325\374\243<vmG=E`\022\275:%\346<Q\231!=\2746\r=\333\215(=\207%\017\275\322?\262\274\315\0053\275\361\nL=\363\321\207\274\214y\r\275\350z\236\274n\273U=\234\347\352\274]\207\212\274[%6<\330\323\376<\030@\025=Au\300\274`\357\254\273\273\201\234\274\023\r2\275\031:\037=\347a\026=Z\324K\275\335t\260<\003H\310\274J\206-\275\264l\344<(\356@\274?L\001\275G\2206<\027\244\353\274r^\365<}\316I=\230\332\025\275\265S^\274c\024\t=\221P6\275?Eb\274\205\345\232<\231\0049\275S\336\314\274\231\332\016=j\222\300<\260\257\032\275\220\335\263:\225\316\243<\275\344V;\216\025A=\363\341\334<<\250\223;\376\307/\275\200\335/;\333\316\003\275zE\n;w\336\301\274\2152@\2746\271C\275\373Z\005\275L\2550=\223\342\002\273\213\203\021\275\266a\243\274\311u\271<X\265f\271\2669\315\274\260\001\373\274\366&T\275\331\t\365\274<\255\274\274X>E<\177J\242<\210\272J\274\203\367V\274\002\0244\275\243A1<\310\0145=\206Y:<y6p<\347\334\022\275\337\0273=\2609\273<\273\r\024=\252\332\347\273x\352D\275\270p\312<\227<\201\274\300q\367;Z\\g\274vG1=\014Q\263<w\350\373< Va<\210(/\274Z\237\342<\302u+\275\004\313;=#\353\025\272\260z\030=\0250\250\274=\364\017\273\314\236\\;\321u8<\250\300\257\274\333P\370\273\013SL\275\241+\207\273\'\301;=\245\212\251<QK(\275\343\244(\274\177BP=\220\215C\275M\265;=\357|\022\2750f-=\347\2312<;\376\307<\346\366!\275(\274\217\274M\211J\275\224(=\274\317\367\203\274\315r\037\275\314\226+=\177\274N\275\036\233\023\273\251\207\313<\313\004`;\365\361M=+\006\332\274!0+=\213\t\2717H\366G\275HI\255\274\"\265\263\274\037\353B\275v/~;\263\211\330\274\375&%\272\00288=s\207E=h\365\255;\032\301/\275\247\233(\274\232\211\"<1G\007=\346(1=\003\202\'\275\220\341M=\007\220\202:\024\302\233<)\206\035=\27763\275_\332K=%\007\242<\225\351T\275\277E\216<&\247\371;V\"M=\236\361L=\004\334l<(\356P=\327\005F\273\305A\362<\340\022\024\274+\216/<\2179\304\274\231\023a<\240\356\341<\021\210\271<V\'S=d\274G\275I?7=\315V:\275\\\366\352\274\262L/<\221\350)=\334N\013=Lj)\275 \265;\272\207f\007\275s\301?\273\233\371-=F\212l<\271\362\336;\207\266\014\275\376\004\t=\341\004\326<b\342\013=U:\020\275\217\324;\275\24314\275\221\001\005<\271\"\020=\217b\331<F\305\314\274L\240K\274SG&=\202\353\034\274\314\307\001\275\274)1\275\303\333\342<\0236\022<R\331\304\274\230h\302:\334\303\321\273\347\375\332:\2338\367\274\330J\272\274\264 N<\256ZC\275\017\364\036<\224@\373\274c\001\014=\024\020\364;\274\304A=|\244M=\343\373\037\275\273\002K\275\233\017\037\274`\375)\275\323\220\232\272\327I\223;\022J0\274\023\354C\275\365H<\275\374\250\337\274\242\361\304\274.\245\214;\231\357\013=c\234\322\274\020\3601\2751\236C\275\351\031u;\260\214#=\331\327\255<\322\254>=\240\220\333<wt\220\274p2\221\274]\377\032=\362\204E\2752e\005\275!sQ\274\364b)=22/=\2378)\274e:M=\3569\004\274\005\"\000\275\"E\245:\236E3=\261|P=\375\352J=?\302\031=D\370\312\273\250\351F\275\n+\353<\020\217\311<\335\3730=\327eM\274\251[\025\275\226u;=\034\353\013<\300\372\005\275\327\367\001=\236\251\035\274A\340\207\272\230r\371\274\220\221\032\275\341\021\210<0\263\335\274\224(\217\274\0255<\273\370\314\377\274\002\3145\273\252\r\276\274\007\237\177<\264\306\217<\272\212\026\274\256,\336<T\276\243:x\206f<\351E\324\274A)\033<\370\017\275\271=\023\215;\232\250\277\271s\030T=\232\206\374<S=\032<@\237\207<\243\224\"=\373\206J;\003\250\n\275v\310\032=\227\243P\275\035\035\'=\203\373\311\274\354\274\270;l\214\304\2748(-\274+\232A=\273gc\274]\266T<`\037\004\275\272\343@=\354\221\227<\316\365\006\275Hd\342\274\006\322\370\273\371\311I\275\261Z\023\274;r:\275\325I\262<T\023\213<SJX;\367\317m<6\377\020<Q\305\322<\365&\341<\304CG\275\305\302\222<&\002\251<\212\276\017=\250\374\r<\301\360\323<K\234S\275u\005]\274tw\234<G\231\377:\315\363\r\275fV5\274A\000\354\274\221\267==\t9\331<o\027\230<\007\364\372<\002\202\212<\035\3050\275`!R=Dl\375\274\262kG\275\033F\217\273@\243/\2752\'\374\274G\252\'=\263\312\023=\346`\324\272\n\t\007=g\034\314\273\267\316)\273\204\263\003<\240\330\025\275\330\235\260<t\001\315\274\343%\314<`\213\374<\246\220\035=nz\227\273KO\017=5% \274\327\361\"<^\372k;N\355\306\274r\345\035=\033\t\251:b\351%=\341\373\265\272/h[<\272\004\232;Q\321\'\274\260\301I\275\032\325\246\274\215\343\264\274\305\331U\275N\224@=\343\017l\273D\2772\275\233r\336<~E#\275Ix<=D0\025<`iI=\273|U=\350\2222\274\234\034\023<\027\235(=\204N\310<\216\244!=\010\026U=\\dW<J\265\237\274\037\3276\275`<\030=b+\370\274+gP\275\016|\360\274\3403\353\274\222j[;\017\'\024=9\362\026\275l?+\275M\335\320\274[\343\021=\304\375\013\275\360v#=\362G\247\274-\275\347\274\237d\253\273C-\034<9\310\r==m+\275b\006\001=\036\006.<.0\203<\371n\370\274](\002\273UQ#=\241\234\307<\327\371p\274\016S\334\273!\262\330<G\301\226\274Or\264<\320\021\227\273\240h\006\275\002n\300\274d\251$\275\220*\334\274\310\370[<\00564\275\333\334\237<3T&\2751(\001\275^\274o\274%a)\275\306\361\024=\227\031E=\254\304\306;\027\2719\275:\005]\274:\023\036\275\261k3\274\270\327(=K\270\200\273\340Z#\275n\322W\273\021A\026\275\274\271m\274\2220\341\273\334\034\254\2745t9\275n\300)\275w`\355<\034\372\257\273\362\034X<F\025\271\274\325\364\211\272c\214\036\275\342\213C=o\266\363\274]\365Q\275R\235\246;\307\3268=\031\0108\275\010\310\025=m\037F=\247\2350\274\260\3564\2757)O=\313\366\337\274F~\343<o\362Z\274\302\035U=>\3470=\240v-\275\376\275\203<`\225\343\273\005Jo<E\265G=\203\3727\275\252\307Q=m\2763\275\231\340\375<`\266\332\274\036\201(=\324\335.\275;\241\004\274v\026\007\2759\230*\275~\230L\273f\276-\275\240\014P=\027kR\275m\246&\273[\370\223<\300\204\355\274\026\351\020<\335@\311\274\373\304\332\274\316\312#\275C\253(\274$\364\007=\221\217q\274B\324\014\275\250\246\253<\216K\372\274!rF\275d\323\271;\224\0367<i\276A<\335^9=\311\244\325\273\223>|<\352\335E=\310Z\020<\027@\342\274)\260Q\275\327\356\265\274\255\225\232<\001\350\245\273\000\230\005\275\323\231(\275\020\355\020=\203\340\241\274d\027 \275\017\006G\275\345\007\027=JG\r=\253\267(=\343K\005\275\257\026\007=\246_\241<C\303S:~2\014\274\016<\357\2730I\177\274d;\023=\002h <\247B\262\274\215\315\274<\210\\E=~Ia;\255l\201;\342\'\355\273\362\264\363;78\004=\021\305\314\274\254{\220<az\247\274\361\337B\275?\177\002\275{\031\337<\366\010\347<\336\367\016\275\246\003\270<|>\323<JPU\275\002C==\214\313J=.\254C\275\263o\264\273\255\235!<\217\177U=Z&N\275h\211\355<-$\322<!\003b\274\331)\264\272FI\022;\'\373\226\272\021\031\312\274\334\211>\275\325\013\372<\347pR\274\320\275#=F\360\023\275\233\262\322\274\235~\'\275\264[T=\272b\214\274\241\370e\2747s\230<\266\350\016=8\023\206<+\330\342\274)\275\215;\212\341H<$\214\324\274^MU\275(>\014\275i\032o\274\237A8\275\333\030\007\275\344\201F=\343\233\037<\360\\S\275\3156\355\274\354\361\213;\026\242\017=0\312D=m\327\034\275\253d\230\274@5\225<a\321\323<\324u\353<\370IE=A\223\005=\204\230C=\357\020\363\274Xv =\345[4=4J\361<\242e)\275\317\'F=\273I\004=\030\"L=\275o-\275#\344O\275\016\264\360;\351t\013\275Q\037W\274 \327\314;\225\353\300\274\r\367\373\274\021\013B\274\364\256\032<\266\022\036=\004\031\341<R\tv<B2L\275I1\023=o\375\242<\034\336==Ly_<\240\271\346\274\263\233\005\275\356\275)=\270g\354\273\026\340\004\275\205m2\274\245A\035\275\302w\005;P\362\003<\227\335@<\353)\270<y\302\247<\235\275\306\274\23362=\3222\031\275\007m\274<\2441\317\272\362+\035=\270\237\007=\"\374\315<B\224F=\337\255\023\275\254\262\326<\266L\036=4\256\037\275\310\2149=6\315#=0\267?=\256\275q\274T\220{;\213\274>\275\033j><\241\215R\275\260\212@<\344|\337\274A\2416<\037\367P\275\355\350\264<z\361\353<E7\030\275\316\205\350<\326o\001\275\374\371\035\275\027\325\030=\270e\034=o\026\222\274:h:=o\343;\275\224\016d<\353#\253\274`1\253<\372\201\377<Y\257\005\275\0308V<\375\301\232\274e\344r\274B\362\030\275c\000=<\264\023*\275\256[g\273 g\347;|\271\300;\271\361\223<\031\274E\275\006\375%<a\274D\274\362\310\000\274\234BF:x\314\032\274\023\256\372\273c#/<\027\244\013\275\342\272N\275f\035\373<+;\263\274r\242\004\275\275\001A=\304\307\230\274\231\213\304\274\177O,=(u\310<]Cy\274\032!\034\275p\361\026\275\177\n\033\275d\0359=\270$\001\275\316\351\033=\374\227R\275c\320+\273U\307\247\274\264\312E\275\3234\333<\305\230W;P\205\220\274J\366\362\274a\332\265\274p_\345;\330\343\272\2747:\365<a0*=\226\343\211<;\212\031=\250C\202<\231Yz<\026\2042=bb>=N\226C\274\035\310\255\2736\252\241;\032Jw\274m/\210\274l\323\353\2732\224<=\271\376\247\274\246\000\220;k\322)\274S[\177<\272\003#\275\022\006#\275T\361K=\244P?=\032\317\371\274\017\347\030=\004S =\311\235J=>\023(=\3525\242;\255r#=\177\r}\274\327\371\315<\2124\n\275\341\r\310<v\353\027<\256\3446\275\257\317F\275\r\001\360;D\336\364\274N\355\306<\017\303\216\274!\027\237\273w\2204<F\352)=\226\333\220\273\2050\246\273HT\200<\033\361\211\274\241?,;?\273\304\273d\303K;\014\005\t=\207K\023=\005tB\275\353<\345\274\023cM\274\207\235\037=\333X\277\2747l\315<\254j\214<\032\334\021=\330\316\217\274B\032\377\272\330}z\274Z\370\205;U\375\270\274t\254\036=\021=0\275\010n\257<\215\372\300\273S\300\002\274\177\311D<\004\327?<k\373?=\306X\273:\220\343\263\274rON\275 o\036=\33560\275\267\3055=\232\335\016=\274u%<D\033\305\267\325&2:Ne\021=\312\267T\274\207\\#\274!X\025=\"V\013\275\326X\300\274-\224\252;b\212\352\274\344IO<\253Fz<\257\322$=IW\026<\243V*<\221\204e:-\365\023=\203\326\006\275M\333v<\353\312\022\273+\316*=\350O\276\274\376\366\345<J\327\377:i\000\227\274j\006n\274\363\366\375<\367\217\031\271\220T\356;8s\022=r\267\350<y\335N\275W\335!=\302,\335<\323\362\031\275\357Z\217\274\006\272\016\274\227\273\034<\244\024\026\275(xb\274\211g\275;\001\241\352\2736\244\020=\307s\207\273\356Br\274\376\272#=\355\266\261<\212\362\233<\250\306J=\324\026\023=\354\202\327\274X\025\274<\240\357\306<S<H\275\2770\357\274!\320\365<\353\0230;H\t!\275LED\275\333\242l:\202\030\004\275\026p\372\274\3103&\273\212\260E\275\321x-\275\361\305#\275L|+\275\314\233*:\234G\314<\3703\263\274\014\305\t\275\213S\203\274\301p\260\274@\227\005=\206\265\213<\376\275\302\274n\266\027\275\346.\035=|EL=v4\"=\327\010\005\275pd\"\275\260\326\004\275r\321\211<\375/\246<\341\0203=a_m;\037=)=\021~e\274\351\204S=\353\373\346\272\240\037\035\273\346\361\260;\306YG=>\247}<\351\317\022\275?\\F\274\014\016,=F\357\304<\032r\350\274\346{%;\313r\224<%^\037=\254\215\255<\215eJ\275\363\364\"\275\213]\016=\261\331\317\272 jX\274\371S\314\274\177\253\307<\206\336B=\26565\275R@\365\274A\250K\275\250\215r<\274\364\362<\317m\010\274\203\204h<\356B\224<\003\037U<d\250t\274\303]?=U\262\005<\302\007\016\275=\274U;;i2=\213@\275\274\027\240\004=\024\233\017\275\020y\211\274D\006\005=T\021\016\274:\251N\2749v\250\273*\344\252\274\026\227R\275e\212+=\376q{\273\020\224B=\304\000R\273D\343\n\275\252\244\024<\010\323\265<\004\250A\275\201\334+\275\323X\037=\214\013<\275`b\256<w\010,;:\037\361<\270\213\241;&\273?\275\365o\210\273B\316J=>\200\313<W\323>\275\014\302#=\335\037\300<\013\234\356<\036\202T=\220\271\324;A\342\323<\243\341\263<X\377\347<\003\003\315<\t\n\374<\013cK=\\\323\216\272\010\347\034=\004.\334;\023n\251\274\257\332<\274:W\377\274\021n:=\302!$\275\004J\260\272[\372\365<p\330\200\274\212\006\370\274\035\253n\274r\332\304<o\226i<7>L<Ch^\274\303\037\005\275P4\014\275\224\346\003=H\344\277\273\266\037\323\273\347\315\231\274\"\213\301<\242iW<\371@\027=3\"\223<[b\352:\201 \252\274\245\366\323\274u\362H=\300\345\350\2742n\355\273\253*\355\273\331\221L\274\343\250\332<c\004\022=J\312\326<,9-\274\305\006\362<\177(\240\274\025\355H\274\372\2572\275\315d\304<\317W\002\275\220K*=u\341\315<\244\277!=\311\352\251\274\206\357M\275\240\333);\235\301\037\274c36=\271\252C=\026|\322;P0\224<XG\337\273}\327F=x\315\247:Lh\014\273F\207R\274\236\236\t\274\261N\221\274?2\262\274+\222q<\027P\020\275.r*\275\335^\271<w\303\027\275\331T\356<\247\273I<\261P\020=9\'$\275\325X\021=0(\243<f\303\277\274\243h\370;\243?\030\275\003\320\310\274\350X\201\274\026|\306\274I\t\036=|h@\275\306\317>=[\024\234\274\351[+:{\267&:\363r=\275%\027g<Y\304d\274M\221\355<>[\370\274\037\002H\275\200HR\275\213\220\372<^\014\351<}\254\035=\304E\023\2737\215s<\027\213\360<@\021c\273y\207;\273Il\250\273d\010\023\275-\016\034=\225\004b\272\375\274\242\274Y\032A=\371w+\275,Sj<[\016\001\274\276\013\241\274\253EM\275j\014;\275n\311\333\274f9!\274M<2=\021q\214\274\227\327|\274\266\333\375\273\254\360%\275\246\\<<\360\343\254;\"\250\200\274l\343\310<\274\352\016<\257\325\311;l\001E\275iqP=\301\n\374\273xG\207;\014{\026\275\342\3343<\343.\345;\375fF<\313ya<\273\206\346\274hD\237;.0\005\275\374Y\270\274\007\370\201\274\240 Q\275\2237\020=\247\227\210\274\016\2732\275\026\230\277<u\207\"\274\035s\264\274<R\310<6\205N\275\263\034\257;y6\213;\307\227\333\273\'\325)=\023\036s\273|p\006=<\222\255<\321Xj\273m#\020\275?cT\273x\236B=\302\262\224\274\233Z\301\274\217\332\360<\306\005 \275\023\377\322\274l\371\215<]\326\014\275;\234\211\274\005\237y\274\324&*\275\367|\373<E\026\363;b\304\270;m\225\377\274\n_\350\274\301}\020\275\230%5\275F\317\336\274\233iK=\025\213\022\275\303\315s<\367\244\035\2750G\337\274\267{Q\275?\334\353\274V\325\020\274K0\300\272x\036\202<Hei;\033\341\025=\216\022\214<{\357\275\274i\370\374<\375\313<=i\337\257\274\0353\027\275h(1\275\243\341\240;,o\t=a)1=\272!\013=\340\345\002=\207|O<\243\372\324<\245\010\n<\031\033*=v\364\020\275\236\202\270<\200\357\333;\334\327\006\274j\'\024=\330F@=\357\360\023\275\373\215\321<8\227\361\273\304\000\251\273\271\257\351\274O+6\275F1\305\274mFx\274\314q\227\274k\267\267;\317\315];\200\360\343<\371{(=M\253 \275!\367\216\273GW5<\034\241\307<!\242\342\274~\037\036\273P\325\035=\035\'<=\177\036;<ua\316<\306\244/\272\325kH=\301#T\275a\262\023\275rV!=\372\206)\275\224^\214\274%K\235\273\242\222\215<x\252T\275\207\202\032<\231\262\200\274\274\\B=\376\2265=\3421\242\274\332\216\205<\251\376\r\275\217m\n\275\177\201\274\274\t\357\032=\261%\027\275.\367\321;G\301-\275-\330\352<\220\351!=~\213w\274\343n.\275\346\305\'\274\021W\201<\374\277\247\273\036\205*=\374N\037=\202\n\004\275\361\247\256<\355+\017\275pI\216\274\363\336\222\273\237\024\317\274\314\2760\275\371^\260:\224))\275\253\236\372\274\002\n\254\274\001\275\342\273\002\355\337\274\301\324\361<\005\005\246\274\"\325x<1\377\245\273\242\030:\275k\220\257\273)\372T\275\020\264\327<:\346\367\274+\334]\273\316\005\232\274\035\0336=\315v\202<\223]\330<Nl\025=\r\3523=ca\276\274\341\'\003\275\235\356\032=\237\0104=\312nT=FOd\274c\316\307<[\301\221<\334\332\210\274\347\242+="
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2190
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2190
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2190
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2190
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\377\'\207<x\265$=Z[\030<\341\373\010=\005\273\351\274Q\237\022\2759 ?<\341\224\202<\016\3420<\256\261\253<\231\200\001\275M\202\017\275a\004=\275Q\330\337<\n/\232\274\316\351\341\2742,r\274%\375v;\234)\014=+\260>\275\342Y\021=\035\226@\275\274\330\372<\3711\033\275\374\370\356\274zkU=\326v&\275I\340\033\275\003\002\026=\261BN\275#\004\005\275\221\2040<l9\222\274\t\313\017\273\371K\232<\251\210\326\2744\202\271<_\370?\274M\317\002\275\267\2170=\364`\024=\301#\335<5\202P=\3714-\275\370c\034<Q\274\271<e%\217<\317\362Q\274\3745\024=N\t\323<\247\2454\275r\334Q=<D\246\274\274$\310\274/\233J=n\253-\275\357\317/=usa;\333\240\341;\310_\227;\3049\027=\271\225\'< \315h<,Q\020=+\367\270<\2633K\275\204L\257\274I\372E=)\315\200<Q\212\352\274%\"\020=4};=aV\032<\245,\335<\014[6=1\320\224\274\301\376A\275(X\026\275\357\3418\275\355#\254\274r\200\031\275\'oK\275z;\036\275x\221\332<\322(\010\275\310\304\353<\304\023N=}\203<\275\322\2447\2743\3438=G\037@=\257\203W<M\331;\2753\035\264\274N\255F\273\322\301\360\274\254\340\345<\234\265\367\274/\207\004\274\201\035\037=\377l\375\274\016\346\334\274\216\251K=\202\3773=\3558\201<\301y!;\244\313 \2750\273\337:\342\026D\275\212\327\'\275\263\037\324\274\331\025\t\275\307\016\n=\210\246I<\tV\t\275_\202\344\274\314\356\315\274m)\"\275\231\212\030=s\212\366\274\035\211F=\344j(=\277\313\'=\362\373\375<\027\377\035\275\\1\010\274Bj\341\274\241\271\005\275\232\254J=\2530s<\227\005\204\273(\237\r=u{\222<\362\031\032=s)\205\274\334Ij\273\323\\\020\275\363\202\024\275\216\245\225<\2023\025\274\364\375\005\274\237\304r\2748:\254<?6\262\274\277\363B\274e\025\240<\032\031@=/c\037:k\246\325\274\215W\004\275.\271\301<\350)U\275\332E3=Mb7\275\\\311\332<\247Y\233\274\374\334?\275\021\025\205\274k\003\032\275|\343J<M\376G\275\252]R=>\032\213\273\303\266\'=\010\272\234;\203\3735\275\230\362\345<\3172\332<\347\314\365\274\254>+=\203!9\272L.\331\274\260}\350\274\234u\213\274\313\305\247\271\212hN=\260\276\226<kp-\275b\tH\275|\315\341\273\343\201Y\274\244\205\233<\265\2010\275\2372\037\275Ay\016<\\\372\022\275\244\021\027\275Wp:=7\221\217<\357}\024\274\247\320\236<d\346\247\274\333\313$\275\277\300*\2757\236*=X\\\347<\272\231O\275\371e\255\274\264\331\306\274&\266U=\230W\255\274\237~\225\274\345\313!=\235\n\341\271G\233\001\275\230d/=\342\"1<)\256*=\242\266\321\274O\373\r=w\202A\274L+\376<\010#D\275V\320A=.\273?=\312_\364<\037\325\020\275\200Vw;Z\2203=\317\010\250\274\311\t\306<\3506\\<\201\2533=\311\240M=`\320>=\203\220\203\273\351\311M\274\257u\234<(\207\323\274\327\376\306\274\253\232\255\274)\371\351<\254R\300\274\036\211\004\2751\204\252<\3568\261<\014u\227\273HA\270\274\300=S\275\265\363\220;A\245\023=5\260J\275\357\254\262<y\315\274\274\207\316\001\274d\356I=Fr!=i\0148\275A8\330;\206\2044\275[\210\352<\231Y>=U\231\266\2725\355,=\374}w\274\331\371\324\274\317$*\273\372s\343\273\350\333\363\273\225(\217;|i\363<\207\341\002\274\020\024\376<B:*\275\206\\\264\2744\331\253;m\330C<3D==\352\3331\2757\274\356;\246\362\027\273\247\357(=\027>6\275W\226$\275\323\027+\275\250G\345\274)=8\275\323\000B\275#`\r\275\337\272\027<\200?\265\273\271\3223\274|\034\036;g\203\327<\024\3503\275@ D=\343\313Y<\324\200\200\274\2676D\275\037\223\036=\031\265/=\005\316\023;\331\335\345\274\325\227\022=!\362.\275\221\325\332\274D\244$\273w\356\013=5\026V\275vm\260<\210N.\275\n*2=\334\272\232<\335\265\025=\201\327\363;\036\213/\275\346D\006\275\266\250\004=\323\2204\273+r\307;d\2470=\003r&=\353I\300<`\214\037=\264}:=\3553)=d\343\211;\237\337\233<\276bB\274\376D\213;\332`\243<\002N\314<GB \275L\230\310\273\031\252\362\274\273/:=\342\2171\275\016E\016=\331\212A=\236\227 =\337\016\017=\231\333\375;\276\364\372<\005\316J=\254\270\331\274\361\'\245<D\031\266<\025b\024=\035\232F\275\217\262\241<\314\223\000\275U\307\016=CR\266<D\277E=\233\225\207<,\247?<\007\314Y\274\227QU\275\301g.=^\246\366<{l\233\274\326m\263;N8B\274:\271\371<\366+\204;@q\036={\223\265\274\340\254&=k\372\301\274Q\301 \275$7<\275\362\263\253<*\303\276<\330\265\017\275x\023\266\272c\3159\275EW\273<\226^\344;`\330\001=\275\327\335<\002\246&\275\rh=\275\005\235\017=\274\340\260:^z\036=\350\3136\274\271\240.=1\251\261\272\356C\005\275d\tK\273\345i\251<\304\373c<\033\025S;\265F\361\2739zL\275\322Q\210<\272\276?\274P\236\021=\272\2142=\343\245\307\274\'\246-=\301\263 \275H\375\037=[Wc<L\034\254\273@\335\343\274\332^\031\275\264\210\206;\314\272\'\275\367\0209=)\351D=i\340U=]c\031=\354d\273\274\260=F\275q\321\362\274\0027\202\274\255\227U=J\220X\273\021\212?\275<\2223\275\244\243\000=\333\036M\275\245\005\263\2742\315O:\244[\035=\260\022J=\216*0=0\252D\275|\327\333<q\375\352<Q\3430=\360F\240\273\333+/=+\373\026=\204\360\021\274E\354I<\225\254\"\275\241\270\277\273C^3\275\032\224:\275\021\367\325\274\233\256\250<-\002\334<\3224^<Q\215\036\274\326\316/;D9\235\274\313\362T=0k-=K\003S\275\327/};\217\003S\275\207A\300\274\326\212P\275o\3426=\242L\024=\361\310\036<\270\037R\275\204\2136=+g\221:\225[O=\270}\264;\240\025\310\273\005\3047\274\237\223\316<\311\331g9+m6=\362\211z<\336\375\037\275i\330G\275.E\353\274\275\330F=\272\331\305<G\010\266\274\316\332:=\021\362\232\272r\tK\274^\340\252\274\313\204+\274\030\3564=\216\3348=T\262\223<\027\367\314\274\273\326:<\213\200\002=*\252\236<[K\235<\205\323 ;\241\366D\275\211\3253\275\000eH\274\231\356#=:gC=\233\2336=|\323\216\274\205\260\331<\345\340\305<\036v\231;{\222\367\274T?\334\274\025\314\000\275\360\226\251\273j\006N\275\343GD\273\017\370\005=\201\351 \275K\1775\275\307\'S=,\270\260<\303\271\037=\034\335\036\274\326jp<1q\033\275\364~\257\274V0\237\272\035:I=\036\237 <\013\254\267\272\004\\\276<\343\304\337\274x\255\206:\304 =\275\277\312\t=<\207T\275\240\027\031=\237\003\030=\356\220\325\274\362\346M=\2028\341<\177\220\373<\344\214J\275\317\323\203\274uG\223;\355\371T\273\'\250b\274l.B=\362pU\274\037\264P=\263\314J=\224ud<\232\311M=\247\014d:.\252\033\274|\221\260<A\263\027<\272\272<\275\274O\367<\243\353.\275\r~2;\346\010r\274\t\237m<gUP\275\235\216\374\2748\230\333\272\323F\365\274\007t\227\272\321W\334<\033[\264<\334\215\220<\036\274H\275\031y\003\273t0\365\274\241\252\022\274I\204<<\327\335H\275\177X\014=\316\014\014=\363\010\342\274\226hN=-#\010\274)\010\302<X\033\025\274p\336\371\274\361\361(=a\353!<c\001I=\230\205 =<\246\014=\254\235C=\234\331\311\273\207\355 \275u\321\'=\t\331\254\273B\211\203<\267\003\274\273\205\214/\274>\333.\275\311\205\342\274\036)\374:\026e<=|\321\302\274y\030\273\273y\350\'\275\r\361\033\275G.\230\274a\0173\275d\311\375\274fJ\026\275\320BM;\317A\255<v\376\267<\306\030\222<`\2671=\344\032\275;=dH=\226\211B\275\263\303\020\275\013\321\n=i\301\020\274n\t!\2756\014\343\274\236\241\001=\241\311\032=9\321\255\274\375\260\333<\277C==\214!\227\2733\225\016\275\241\271\372\274F(\341<\202qD=\252\236F=\241\206\244<\276\365\376<\300\217\003;6\346\255<\304\036\002=\305w\354<i\272P\273\325!j<\310\005\313<5\273\017\274\246\277w<}\231\362\274\200f\260<\026y\002\275\351[\t=\341=\326\273\001b(\274\\\020s;\2363U\275\3104\366<\253\247B\275\224\212U=\223\"\216\274\006\\5\2756\000\024<\271-O\275\312DS\275\357\034\262\273J\220\014\275\021\360#;\204\267R=\010c\251<A\310\207\274\207t\032\274\222]%\274P\324!\275\304\341\037<c\312\267<\265\273\240<\205\223\033\2751\365M\275\\\273\342<>K\006=\353\033 <K\236\344\2732W\243\274\367\304v\274\360!*\275&v\023\275\326\366\376\274ES\366:\310\227>\275\223\346(=E|\310;\365\272\310<.\234>\273\375I\372\274z\367?\275a;\"\273gf\014=\263\240\345\273\245\317=\275\263\242>\275\023m\354;%\201*=\245\335\033=\\\260J9N\201\327<F\346$\275.\006w;\006pI\275!\355d\274q3/<\357C\272<)q\334<\374^\"\275\250\203\025\274\t\262#\275y\2027\275nv\025=V|<=\236\266\'=\242\362P\275F\001\"<S[\220\273\006L)\275!\253\247;\351\215T\275\363\245S:\324b\037\275b\315\234\273~\370L=\t\007i<\303w>\273P\001\311\273olS\2757T\201<\234\004D=\204+\003\275KH\024<\324\033B=\312]U\275\010l\023\275\300\254\315<\202\324)=dt\313\274\341D\205\274`bl\274l{P=\366\007D=\321\323\276\273H\270\222:$m\003\274\321\037\371\273\244]\237;\346@\266<\274\027!\275\300\226L\275\356Z\204\274m\024\020\275\322\301\025=\312\3002=\013\347\350;\350\030\260<\t\347 =>\007\235\274\316N\031\275`\376/\275\3560\307\274@\306\313<\357R\030\275\333\276]\274Zu`<\231\035\230\274\177\300\345<7\251 =\021\364\212<B\371\334:S\004\000=[\314\224\274t\307\354<[,\325\272+6n\274\033~\262\273L\251\374<\337\327%=\317\336%=g\t%\275\013\230$=r\022N\275\350i\303<0\033\203;\224\304\204<Z\2434=\207\257\023=\236\317\207<\265x\202<<u0=\'\274\226;!4\034=#\313\017=\264\231\016=&rF=\367\314\376\273m{\023=\305>\002=Z\202\345\274\255\367H\275\301\026\360;\260\312\002\2755\331H=\360\267\330\274\'\037\273\272u\341\202<\037\t\336<\037\355\244\274b\332\2129\245=6\272\274jC\275\263\326\326\274fp&\275\311\343\352<]\356\030\275\017Y\312<%}\033=\360\376\217<\334\036N\275\035\300?=\207d6<\237,\326\273-(\034\275\202\0374\275\",>\275\322DI<\t\324\265\274<\\\241\273h\317\002=\240q3\275\301\311\004=\241z#=\035v\022\275!\206\367\2747\034T=D\250\250<\\\247\003\275\347\202\000=\361\257\324\274\372[\'\275\266\327\215<\336u\250:DH\215<K\264\220<\016\023,\274aJN\275*]\245\274\250\320I=B\024\304\274\211\rV=\315\2736\275\377\202D\274\t\272\300<Q\021I\275\375\354\373;c\2661\275\360\306\233<\026\260\022\274\231\367b<\302?\376<\'\017\312<\271p\351;\203Q,<\306\013\300;\t<5\275\023U4\275\261\273\312:\022\221\260;\354\246\230<\324r\237\274\345\357F=(8\377\274\212>?=8\260\247\274\236r\251\272*\261H\275\231!\023\274\300{\375<p\034I\275\300G\275\274X\206R<\3012R\275\233\2648=\307\305\313<\374\2778<\313\226\376;u4\000\273c9\306\274\005\036\344\274D\367)<$\246\217<A\275A=\311\334\030;}\353R=\301\325>=\313\345\273\274\322$B\275]z\255;=\254d\273\256\255\324<\335\330\"\2747\214\020=\341U\231;~Z*\274~\357\216<\225%#\275\310\221!\275\302\361\214<\030\320z<\263V\277\271\236\3649=\274\354\003=\254;\360\273\334\302\021\275\033\252!=J-\032\275c\372\014=\275\344\272\274\024\345\201<\016\314\217<\316\261%<\377U\333\274\224\204?\275\000}Q\275\177v\'\275\267\264\"\273\002\264;=\020S\'=W\364#\275b\236h<\365\252J\274\332Z\362\274\201\342\246\274\314fE=/\334Z<\001T\030=/\320L=L\3313\275\317M2\275W~\035\274\352\230%\275\327}\026\275\r\'\017\275\024\302B\275\200/K;\332\344*<0\361,=n\307\337;,q\325\272@\340\034\274\233Z\263\274\304\020 \275C(\274\274\335\372\025=\253\213\373<W\302\000\275\257y\315<vD\215<C6g<8\205\205<\320\333\027<\030\336\370<P\272O\274D\231_<%V\243\274t\211\344\2745\374\000\275\350\353\276\274\323\304|\274\336dI8\016CC=6k\324;$\020f<\264\024#\275\032\374K\270\357\3164\275I\260S\275 \371?\275\260rN=4s\005=W\\G\275qQJ=6\034\t\275M_#=Q\367<\274\374G\311<\243\324\247\274\235\003\200;\210\300\311\274\'\230\275;%\342Q=\006\202%\275\322o\t\2756\217I=\212KG\275\014gc<7\240\026\274Z0\317;\340K{\274pMK=\335\260\020=\257\355\260\274\374\211t<\210\377\237<\030\332w<\245EU=\"\325r\274\306\031\033\275@\364+\275\233\203\250<M\335\316\272\272R\032\275\215\004\021=\304<:=Y\025\016=\2030\277<\025\243\327<*\0068\2750Q\316<,\2141\274\232\206\033\275\263\004\326<\030\353\366\272_\221+\273\024T\370\274C@\024<!\261\262;D\233\261;{4\272<\266\022 =\236\321\005<\217\006\237;!c \275\342\002\026=eo.=u.K\275vM\272<\225\340\347\272\274\255E\275j\250\032\274?`\020\275,51\274g\304\316\274\301\347h<~\321O=\030\337\213\274\252\312P=|\027u<\216,p\274\273\353*<F\2009=\227\254\344:\0035\325\274\037+T=\236;\321<\352\315\337\274\003\2001=\314\300M\275\256\307A=\373\214\035\275\355\357\261<L\256\014\275\336m[\274\000`q\274\271\007\010=e\'\004=P\223x\274v9\367\274e\361\242<9O\360\274\345\263\004\275\005\257\030=\347\345\305<:d.=\311V9\275\360\375A\275\365v\370\2748X4=\013\214\330:\022\031\016\275\215\247\335;\227\253\014=\366\267\267<\010\271\374<\235\374-<\027\330;=\206\335\031\275z\346\303<\r \367<4\217\027\275;\314R=vq&\274^\314\332<\267\324\232\274\265\003\024=\345%\267\274_\233V\274\336\220/\275\022.\271\274S\023I=Y\377\\\2749x\026\274\273\331\224<\223q\312\274\367\312)\275l\342\r=\336\276\032<\320\362\220<o\355\300\273\\\341\301\273\330wR=\300\335:=\362\301\035=\"\351\026=P$q;\310\341/=\207\3605<\364\001\316<\244\010\026=\014+\230;\211\254Q\275\010\303\336;}u\262\272Fd\244<|r:=\010\214 \275U\362\014\274w\201\340\273\363\267\201<\256XD:\374\227\034=%\022\037\275\200\272H<e\375?=^\225\033\274+\233\254\274\261\243 \274t\261\246\273rRF\275\361=~\274\277/#\275X\330\026\274\344%\024=\240\r?\275D\0102<\020*U=x\351\241;\203D\\;\216\335Q\275\205\231:\275\013f\030\274\256^\224\273\202\241M<b\217\n=\221\322\023\274E\347\215<\201\313\275\274\214+\300<4f\034\274F\256>\275J\276\006\274\215\003\006\275\320\347\276\2747\000p<\230\022P\275\307\006\004\275tC=\275:\265&\2754\356\274\274{\310\365<q\367T\275\001\213\213\267\026\277\370<\251\222\256\274\033\t\255\274\277\036\211<|B}<y<\275\274\340\314\220\274[\021\337<\240\222\020=\233\216?=\350\367\000\275\013\306n<\006\230B<ZJ\021\2746@L=D\237&\275\215\255\017\274\227\237\333<\251\003\274<9\234\337\273?\266P\275\253V\007\274\257@F\274Ms@\274\340\307\341<\266\377\251</\313$<G\364\351\273^\352\332\274-\006\326\274\375\030\337<\265U\246<\347\023\337\274\257\030\272\271|r\"=J\362\014<\'\005b\271\020\251\313<\344(\013\275\204\277\200\274X\032*\275\366\032\036=\245\021P\274]\242\360\274p\213\315;\266\265\031=\035\250\016\275\202+\360\274[\210\232<J\264%;\007\317&=k1\332\273\347|<<\203I\030<\361l\253\274\247\365\342\274\312,0=\366\305\010=0\212\356<\t\372\006=:r\362;I\256\020\275\245b9<\003\361\033=\334\376\310<Y\357\211\274\ni\000=\337u\212\272\366\243F\275\360Y\320\274G\337&=\277_\275\273cf\005\275\324\231F<\312E3<\272\277\350<\031<\267<\227\217\030\274\371,/=\277\244\271<\212\360\334\274\3370V:Q\3251\274J\317\303<\214\367\273;\033\013z\274h\302\017=\322b\021=\316GQ={J=<\270N\331<!\300I\275\316\361\323\274\021\350B=\004\236\236;\206_\263\274\\\262\006\275\014\361i<\331\321\331<+8\343\274\026\302\031\275i\314\036=\3735\357\274\2341G\275n\"\327<\345\225\301\274a\002#=\305\262\032\275\272\033,\275\325\"\001=\241a\001\275\303\303\031<\0036\326\273\033\342\276\274\274\"\037\275\312\351\301\273\030\237H\275~L\354<\245\3772\275E\027\032=)Gy<=\035\220\274\366JB=:\251\274<\312\240-=\217\300\323\274$\240O=Exy<\372\300\317<N\0164\273\341\354J\274\335\036j\274\237\350?=[\341#\274\2747\237<Km@\275\036IQ\275\2304\224\274a\262Q<\300\006\361\274\242\265\322\274\036\313\n\275n7\244\274\216\311\244\273(\2068;\331FL\275\357aI\275 \321B<.\204\007\275\207<\'<\230\251u;\276,\270<\306k\210<\364\212\276<{\332+\275\001\3514\273\'\"&=\201\000#=\202.\036\274\257+#=\001\034\033\275\221v!=\257y6<\342\251\235\274\033\322@=Kz\235\272-<\0108\311\275:\275]\025~<\"\204\212\274\346\332J=\323 N\274\021B\262<\325a\236\273M?\314<\314\360Q=\265\037\352\274\361\241T\275\270\374\366\274M\371\211<\304\010\315<F\000\371\274]\361U\275\340\\\r=(\223\030=V\264==\304cS=\223\354\"\275\342i\255\274\361o)\273<\234\002=\330TP\275\253 .\274\315\224k<\261\212\031\274?\363\264\274B\032=\273F\240\031=;\026N<\003\353/=\220\3305\274\204\277\312<\017G\256< 4#\274\035\213\006=T\003>=\350\020D\274\000\272\037<\332\036\003=<a\001\275Y\212\257<\321V<\275\177\313\316;\2513U\274o\257\226;\371\366\342<\255\371N<\230\n\n\275\243&\341<\371\353?=\237\203\304\273]>\'=\345\264\302\274\200M\245\274\033\302\340\274H\016\'=\215b9\275\245Q0\275\302\262\014=\006\332i\274\033MK\275\271\306A=Kq\222\274;\201\327\274\206\314r\273\365\363u<\227\3540=\203\201E\275\242\237\031<\244W,=\265\301\312<\371\375\235\273\"\306-\2750Y\253\274\351\375(=`\303\027\275*gX\272l\324\033<\240g\r\271\370\n\032\275\334;\217<\210\204(\275\336\201.\275\252\027\352<I\326\002<1\021I<V,/\2749\236z;\330$\021=\031\026\032\274g\303\203\273\236\244\025=\276\201\014\275\246\307\017\275\361U\260\274\362M.\274z\233\240\274x|!=\253\332\255\274\216\204A\275\227\326\036\275/q3=+5\357\273#[\207\274@\031\236\274o\2475\275\267\177\202<\242\236\005\275\222\177\250<@i\362<\237R\373<Y\037\005\275{T\2079\244[\'\275O\266-=\340\347\006\275,0K\275\261\257\235<\203\357\224<\264a1=\371\2342\274>\272@=\317\021!\274\215\340\343<<F4\275\204\004\014\2741+*<\220\"?=|\027U\275T\0012\2750\271 =\177\355_\274T\364\231:\300\316\000\275\"\302\300<\276`-\274\234A\254\272f\370\325\274\244\347D=\310\001\250;Vm&\275\233P\'\274O\t\013=v\234=<\257\225M<\270(\302<\000o\237\274!\341\252\274^r\220\274\275G\023=\312\033\273\271\300\223\010=\372\335=<)\231\331\274}\016\'=\203\326\307\2741\206w\273L\307M\274\344\371\366\274IJ\302<\203o$<;\307\020=\233Y\357<9d/\275\367\204\035\275C!\357\274zZ\240\274u\346\235<\035\301;=-\371\205;MO\321\274\311\rt\274\325+/\275\375\372G=\277\024\326\274\362\307\344<l\252\021\275m\344M\275\207\261G\275q\241\200<\266#\305<\237\201\006<\332\245\352\274\224\"\344\273P\203O\274{[(<`X9\275\206B\004\274\324\243O\275\304\034\237;a\030\360<\240\021\320<\221\267,=\307[\025=SrM;\205C\271\274(\322\005=\247s?=\005\313\353<\002\324\021=\337)\322;~\'\372<\333\004\316<\014\010\240\2743\r~\273\003\333\237<\230S\034=\374H0\275\346\026\320\271|\305\320<9\316I=\313\245K\275\304AQ\274l\004N\275\345J7\275Rj\t=n\317B\275\271\235<\275^&\022\274\373u\336<\202\343\374<z\030\205:{\036+=n8\325\274\037\005\002=\006K\226\274\310#\330<\230>\231\274\247r\241<\360\275\275;\246\303a:dG\367\274\002;{;\376\003)\275\211X\345<\223+><\241(E\275\211\211\226<\206|D\274\022!\007\275\276v8=\216\374C\275\311\307f<\355=;\275\340\027%:C\276\223\274\335\206\223<\324*N\275\2325\024=\305\323\253<P\366\027\275\367\022\032\275seU\275gZ\262<\316\222\273;\344\005\024=\003\3539\275\304\203\010\275\341\361:=\212\021\024=\210\352\001=\366a\201<\342Q\207\274\343\274\032\275-\222u\274\200i\204\274\320A\364\273_.x\274?\303\013=\355\\+\274\022\265\326;\006{\357<n\335\341:\021a,\2753\013?\275\365\370\3508k 2=\362\241\005=\243Tr\273l\221,\275\266,@\275\347OA=\3371E=\203\366L\275H\013Q\275\267}4=u\315\342\272+9\216\2749\204\013\275\363\311k\273\275\014\236;\\I&=\007\'\377<v\330P;\264\212\214:\202AB=\356e;\274\334{\344:H\344\336\274-]G=\221\353!\274\323\225\206<\330\261\\\274Ee\346<\225\224K\275,fM;R:\035\274\250\367O=\215\034%\274\271\375\211<v\tQ\275\233Y\225\272[\t\'=\261\210\203\274\231\266)\275\032p.\275$\241\005=\035\253\266\274K\310\363\274\035\207D\275G\372\355\274\025D\372<\345j\347\274\373\321\322<,\307\354\274s8,=\003\377\032\275ly\031<\017\313\221\272\325\347\301<\001\235\231;\\\203\243<4\333/<\211\3374<K\267U\274\320\273:=\225\327\252<\261\352\213\274k\342\"=\3338\225\273\260\345\343<)\300\223;\0069\316\274-\276N\275\207\214C\274\226\232\000<\252 %;\271\027\004<}Gn\274r\3614=\366>\251\272\030\3110\274\327VT<\356L\234<X\001R\275\r\025\211\273dr\023\275o\212\303<$\211Q\275A\362\337\273.\177\013=n\247\301\271\365\341\014\275\364\031U=\371{2\275c\234\277\273\271/,\274uZ\333;\222\"\201\274\372\205^\274\2569<\2754,c<\013z\027\274=)\322<\371\246\376\274^K,\275\034\253\312\274\224G.\274\34073<c\365\244<h\313\243<pe\0168\357\023\202<\033d5\275\3560\241<\273\376/=*\237\300\273\306\203\370\272C\0011=\213\3033=i\276\242\274\034o[\274\3111\202\274_\275S=\204F\377\274l\321@=Q\244/<,6\345\274T\345@\275\364\\\274<D\227\340\273\261\312\004\275\202\356\330<V\307#=\352\344\347<\320X\361\274\212J:\272\346\341\207\274\320Z\205;\213h\016\274\277\300@=Z\254E<\003\265\340< \007\n<\2355\245<\177\035\343<\003\224\207<h\005(\275F\264\361\274\002i\037\274_2\017\275h\367\n\275\202\336\014\273\332y\277\274$\235F\275,b8\275\245^\022\275\253\352$=\026\0179=\t\276\230\274\275\177\021;\365\005d\273\207\2247\275F\361(==UU=\250?\246\274\342o\312\273\371\020\323<C\327\325\274\013\263h< -R=\356\307\000\275\230\360\344<\377\300\255<wc\'=\275K\221<!\021\032\275a\243\373<\367\317I<*n\207;\200\321\255;O.\263\274\t\354P=Q\363/\275\017\253E\275\004\3415=F\210\253;\252\310!\275K\177N\275\377:\035<3\t*=\032I)\275\311\316\'\275d\326\302\274\364\361S=b\361\274\272\366\321O\275\210\343\360<2@3\274\222\242\217\272\303;;=\336\026\364\274\0138\276\272\221gF\275\002\225\350;\300$K\275\342\'R=;\257\357<\017v\232\274\241&9\275\327&\021\275n\351B<\204`\030<\211\243\022\275\347\347\354\274\337\r>\275|k\260\274\371\342\236<\317\301\002\273P\340/=\2400\245<\312\225\016\275NiD\272;\207\014<\360y \275=\030\030=\377\317\022\275\265R\275<g\247\022=\006\220A\2759\206\021=dP\341<L\246\315;\225p\327<<\252\365\272\211\367/\275\266\211m\274o\"\355\274j\376\330\273\250W\004<(\223\"=w\353&\274\177d\033=\032E\234\273\032\036\005\275\203\327V;H\3235\275\377\270\222<d#K=d\035\303;)}C\275l&\255\2733\206\243<z\213\"<L\214\212<SK4=\004\371\202\274\035\255\213<\242\010\026\274Yx\236\273\237FO=\300n\305<\317=$<\322\314\247<W\277,=-9\242\273z?\034\274\267\0325<\177\212\\;b\035T\275w\326\'\273\272\321\016=~\317\026<4\336\363<}\340\003=\250\367<\274\007\013c;7R\027=\2326\r\274\213M\004\275=/\302\274\024\366}<\272\251B\275\266\'\214\274\313\315\034\274Y\225\027\274\264\302\261\274\327-|\274\320q\026<;/==\206m\261<1\2374=\366\311\324<\357\\\313\274\267<M=\242\370L<\212\200\327;q\236C\275\256\225\023=k\270\035=\006l\026=\256\025\016=\312\023\037\275x\232\220;Y\224\022\275|na\274\231^\"\275\374\221,\275&8\277\272\030\344\300<\235\377\207<;\002\361\274\277\023\376<2,\343\273\000\213\324<\321)-=\255\2443\275\304\262\325<\273\355\356\274\027j\213<\272?\260<N\271(=\343\336\347\273H.\037\274\244iQ\2751\275\342<\010\213\000=\032Z\206<\276\207\277\273\311\3313\274\361F\273<\24344\275\225\254.\275\177\350\004\275\345O!;6+\205\273a\221J=\262X\200<\023=#\275\246\344J=\200\217j\274/\1777=\021\342\311<\'^N\275a\230\365\274\267\346\250\274(\357H<\254TL\274D\375\303\274zR\036=@\004\270<py;=\331B\233\274a\027\325\2749\273\361\274\352\325\r<\310i\013=,oE=\204%\376\274\226\307\026\275\257\010E<c\304\313<\224\010W;\n\316\013=\353\014u\274\243e\034\275\177\201n\274\243\3711=\336\211I\274\350\033\250<\246\312O:\032tg;\374\252 =\273\301\023\274\204\220\'\275D\3463<6\300\335\274{tV<X\214\226<\0200\304;\235\323\377\274\263p\233\273Z#\261\274\006@\312\273\374\202?=\222\2219=\233J\t:\3358\364<\203\273F\275\312$\303\274\277\376y\274\330*1<\323%\323;q\013\217;(\213\036=64\335\274\215wF=\276@9\275\2745B\275]\016\256\2741P\020=\213\371\336\273\331\222\"=\245\263\203<yB#=?\346\027\275\236!\356<\327O\014\275S\032+=IM\017<}\205\352\274\247\364\302\274\202s\367\274cl!<\202\314 =!O#=\013\221\036;o\320P<7\303@=\346L3=Y\346\316\274>!\355\2745;=\275\223\2139=\205C\265\274\212\376\016\275\223\031\335<\317\241\260<\035G\325\274Y\250\000<\001WM=Kr\307<\375\304\247\274k\271\005\275X+\032=t\363\326<\201\256\231\272;]\003=\320\363c\274\203J==\205\267r<?\312R\275\003\354\037\274\240[\264\274\231\365\013=\2232y:\036\327L=B\353\361\274/\325\014=XE\365<y\355\035=K#\002=\0029\204\2738\371v;\207h<<X\261A<ml\000\275R\334\207;P\243\305\274\2020\372\274`\352@=\036r\275\274\262\252G\275 <\033\275M\236\345\273r\301N=m\341\370<\016\342\222<c\207\341<!\322?\275\315[\261;\214L!=U\311\237<\2633|<\302PB\274\3310;\275\327\217\206\274\262\260\000\274\'\347\311\273\353\303\t=\244\374;\274\254\337M=\001Il\274$\306{<\317,\026\2753\023\203<y\224\001\275\230\000\221\272\346\377n\273BH\252<\227U\324\274\334\246;=\nj/=\257\374\255\274\217)M=\302\215\332<H\374\316:\363w\202\273xh`<mc==3\352\372\274\001\221\256\273T:K=P\'R;\0274e<\276,G\274\250<D=.4\375\273\331:\203<\314\324\345\274}B\210\274\032\207\000=\332\000\243\274}\350\305<j>\020\274\353\241\226\274\247\314\014=pb\036=\020\250^<\214\366@=*d\312<\225\365\037\275\267\243\211\274\235R\311\274VT\326<o/\253<\256\231-<\001\222E=\321\007\210\272q\272 \275\201V\254\274q\003\255\273\301\234\013\274\036\327H=\034\336\270\274g\"\334\274\325>\361\274x\373U=t\231\305\274\370[?\271\255c\307\274\233-$=\266\210 \274}\204\202\273\372um\274I\237F\275\274|,\275\030\274s\273\232P7\274Pr\032\275\361\2104=\224\\\223\273gD\027\275\205\243/\275\322lM=\271\350\301;\212\3771\275\361\000\372\274\246\3203=$\261\277<\216\311\364<\236\370\010\275\007\003%\275\204N\360<\222\033\001\273\251T\362<\235\0130=_\200*\275\275\201==\242R\275\274\301t\030=.\032<\275/I\372<--\257\274\357HC\275\272\272\245\274\223!\233;\270\216\216;>\020G\274\326p\010;w\313D=\216\351\366<\274\t\032=:\323\273<\354[\005\275\375\270\312;\005\344\274\274\032}\033<\307\003\222<J\226\227<(A=\275\275\375\233<\3414\357<:\312`\274\321\232(\275`\371\212<;\212>\275\215\005\260<}\r\026=\353\331H\275\373X\377\273\003\355\032\274\314/\027=\027 9\275\201\362N=\260\275\350<\367\235C=\003\267s\273\326`{\274Mf\262\273\277\215\333\274\262\331\321<a\3664<@\266\310\274\2352\026=M\004\242;\001\307B=\317\277D={\246\035\274\334\321\260\273\033\331\032\275\267$\274\274\265\342\356\274!\335\017=\214w\274;z\271\242:v\243J=\220\025H\275\377\370\214<![\t=BR,\275W\3234=\242\347\"\275\203i\021=\272\376\311\273x\375\241\274\323}`<ta\303\274\340\275F=\005%+\275\210\216\371<)3\223<\360A\350<\266!1\274X\"@=\227\035\310\274/\347G=\251\260\010\275U\251K=\2467\034=z\227\267<\205v\004=uj\244\274\014Q\027\275\310\000\243<\303\326\';.0\262\274V\250\r=\376\211\234;\300\273\221\274\273q\023<\242V\007;\023\250\341<\221M&\273vu\311\274\214\217^\273\374/0=8>,<%\312\303\274\0166\206\274Z\307\264\272\310\204\326\274\034\332\225\274y\037@=O[\006\274*\235W<@\272<\274E\364\350<\315\2177\275\025\235\240\274\205)F\275\313\224>\275\313\323(\274\027\276\031=\334%U\275Q\001\t\274\366\036\022=:\232\365;\243<\245\274T}\347<?\300\t<\377\032J=\327\360\017=x\214@=\236M\021<B\362\005\275\034n8=a\305\274<\263\314J\275E\211\344\274R\342\002=6lQ\273\360\310\002\275)b\325\274\034\275h\274Y\013\252\274<\007\275<\274\014\030=\032eI\274\362\340p\2740M\345\274\"\242\216<\3263\212\274N|\262\274\230{\261<R\314.\275\007\020\301<X\3454\275\311\010B=\314\207\340\274=\020$<\216\340\344<9\001\354<\342U\365\274\013\342+=\200Sx;\301\324\306\274\010\334\265<\324M\275<\027\322\212\273k\3379=hdn;\367j-=\200O\035\275\003c\267;\3304,\275\361|\025=b\375=<\226q\024<@\337_;A\001$=l\266H;\335\257C<\2553\363\273\010\253\230\273}]=\275\006\230/=\037\207\251\273\t\211\332;V\360\271\274C\0139\275\246\207L\2757U\316\274=G0:~\022G\273j\304\260\272\372k\255<y\212N=\024\3202=\215\212\n;\301Y\233<10\277;\310&\022=G\250\017\275\212\034U=\202K\000\275\320\344B\275\350\346\014=|\256\352<\301\322\215;p\263%\275\256\251N\275\3575\355:@q\031=%\366I=\021+ \274P\031\016\274\026\257#=\371\261\006\274\017M\305\2731\346\260<\t}\n=\332n =2bR=u\263J\275<B\260<\205\272\016=\255\214><\214\207\201;\000\376e;\305\216\245\272\350\003\013\273-\200U\275\036X8<\3469\362\273\256\322\303<?E\357\274\250B\033<\261\006Q\275\"\371J<\265<\032=\352\216K\274>\002,<4\337\021\274\340\264>=o\347\231:\013[\t=\320\006\026=\306\312!\275\273P,=Q\322\022\274;0\013\2752\271\023=\256\021\037\275\372l\250\274\341\262\362<\n\241\214;\025c5\274\023\300\261<\234\016\250<\321=E\275\002\203\333<\243\324\200;V*\004=,\213&\275\332s\r\275\252\026\020=\000k\003=\330\367\361:\320\322D<(!\376<I\316\022\275/\255E\275\305U\240<\225\002B<\037M\363<J?1\275f\370\354<9\211\333\273, \232\274\021\354=\275\305\311\034=\256\327\251<\004G^\273\261%\206\274\321zk;\243\333\024\275\220z\251<6Z:<K\347\355\274\317\345\277<\342\2161\273\333\205<=\0375\301<\202A\211<\177N\234\274\327\375)\275\020\024\036\275\212\265\005\275*Q$=\322\355\r\275\223\035\330<W\215\033\275kP\244<=B9=\374P\331\2748~6=e\233U=\017jC=\314]\324<x\242\233\274\356\"\013<3&Y<\246\327\316\274~\023\213;\260\234:=\3416\260\274l\330\027<.\033V\275BN\276<n\n\357<\235\372\027=s\343\303\273\006/\344<\032f\362;(\213\263<\242(V<\253\265C=\233-y\274\316;\300\274djD=b\371\202\274\2466F=\213\254\002<Y\353\005\275\257\243D\275\350`\322\274\027O\t\275\245\257\024\2739\2213=\351\303B\275\022\213\n=\033\302=<\022+v<\301\0210=%\2246=\322kN=\301\021\320\274\022\003\006=OY*\275x6g<\204\255U\275\201\002\234\274\361\234\301<\220OA\275\303\034\276\273\332\307\302\274\2419>=\'\331Q\275\tr?<b\245\246\274)r\n\275h\021@\275A\2218<\"-\275\274\222\365t<W\221\000\275\221\273\024=\314K\264\274\365\212?=\213i\246;\\\020 \2756X\213<\340?S<\017\375D=\367r\002\275\rz#\271\024P\354<]-.\274\274jU\275N\346E\273\375\024N=-\231\222<\031_\005\275\275,\273\272\337c7=\032\007\252<m\247<<\010\253C\275\350,\000=\251\0026<L\276R\274j.\216<1\372G\275\2568\261\274p \212<%~\266;\317\022\347\274>2\240\2749\272\214<;\030\003=\366c\267\274\220fL\275=\342\201\274\325\021\241\274\320;\200<\233N\035<g\305\365<\354.\317\274\207\350\327;\230\353\'=I\330\004=\3518\225\274\1779/\275ii\302\274\316^%=\347\207o<\253\276\321\2707\2005\275i\n>=\2600\202\271i\003*\275\034\364>=\027\007\000=\347\335!:H\346\010=\001Q\025=_i\006=\337$U=\273Z\034\274*\306\200\273M:\032\275\342\032\003=\003/4=P\021>\275\301\016^\274l\013\313<\245A\301<3\352\341\274^)%\275\003v\364\274\373\212\344<\'\"%\275@\013\327\274\335\234\376\274\177\347\260\274_\256\363<\303\204\244<&r\360\274\204>U<\033\210L\275\243\302\177<\216b0:\021\333)\275\271\3207=\362\246\312<\256\355\270\274G\307-\275\315\325\321<\027l\220;\243\207\225<:z\005=\316\2062=\001P\372\274I\224\263<\303\312R\274l\250\257<\345\271\305<\370~U=\314\244G\275\010|\364\274::\303\274\023\303>=\301\264\366<Rt\267\274A\345\242;+\355\000\275J\272O\275D\266\233<\031z:\275\356| \2753\317\221<@z\311\272\370:Q<\026<\324\274\240B\352<\323c\302\274\276\3745\275\316\210\223<>\342?=\rc\346<\007\317\021\27579\255<\315\022\330<\2672\304\274\243\3247\275}\001\327\2720D\006=\205\366\315\274/\242\247\274\375!\010\275\266\254)\275\310\341`\273J4\020\275\2401\331<::R=;\027\352<\2636\357\272\033\216B\275\356\222R\275C\345@\274\242k\305\274E:@=\201\226#=r\021\010\275U\240F\274\177\244V\273f\257i;g\320B=\330\262I=\223\344U\275\246\342H=\373\237\224<\256r\261\274F\316\355\274\034\235L=G\250K\275?\344\302\274p\\\020;\350\177\036\273\001A\371<\231\235\020\275\020\360D\275(?\020=\362\356T=\255\263\263<\356\270I=:\304%\272\2036\353\274\017M\'=\265\253\021\275\204w\356<\' \333\274fz\253;\372i@\275s\267-=P\331\301<\354\236\330<\255\001\246\274\306\247\272<\220yA\273\344#\327\274Qz\006\275=\333\277\274m\307\264<\353\200~\274D\304\202\274RA\230;\214\003\373<*@\251\274]\2566\274t\r\306\274\301V\354<\025;U=B\326\211\274\r-\261<\347g@=\271\316\017\274\374\266\263\274\350\225\216;\020\224\232\274Fp\006=Q9=<`if\274h\233\214\274\362A\014\2746\262\200<\232$\034=$\006\337<\032\365\364;>\222\224\273~\\J\275\007\272&<\253\202\037:\027\343\007=)\374\030\274o\230F\275\226\334\377\2742\254\253\274\234\007\372;\254\375\365:B2\341<\312o\232\274\263\302M\275Dq\211<\230Xw\272\302sS=\003\363s<\311\352\316\274l\237 =\221\360Y<\307\3719<\213\177\265<cr\231<(,\202\274<\2152\275\001\037V=\352\001\361;.\345\360<\312\225\001\275coA<^\305\026;\371\201!<\017\267\211\274\367\311\026\275\352P\274\274N\346P<W\261\232;\033\333\227\273\035\337\023=\341\260\316\274\005j\310;\367RL=\311\226\215\274\2776\314\274\016\'\017\275\313\3714\275\270\3130;\262\250\315<\007\244\355<\216]\020\275\361\243\033=\333|\001=\241~\277<\354\373\204\274S\023\026\275\001\373\246<\371\300N=\006;I=\344\334S\275!\241d\274\014o\367\274 \\N\273\313\227\317\2731\023\312<C\230\232<f[j<\334\021=\274\000\356\035<\324\233\362;\025JH={\264R\275ll\276\274a\217\213<.\253\023\275\242j2=\247\337G=\224\3619=\024\321\205;\230\225:=\254E\312;\312<\234\274\341\255\331<\322o\307<\237\300\261<8\345D\275&\267\247\274\027Q0=\235\212\016\275\026G\020=X;s<\276\301\010<t\372\033=}\330\271\274\307\032\225<\361kg<\264j\021\275\257V\255\274/\032\"\275]Xw\274\272u\260\274\001\223\035=Uj\337<\201\214\001=\336\373#=\220Q4\275I\023\232<\025\210\375\274/#\t=\031\003\354<\317W\246\274\234\361\205\274\014FN:\014\332\341\274!\030\217<\0328\354;\014f\210;\035\010\231<\331GD\275\020\210\367\274@\304E\275;\327\037\274(\2562=\n\2158\275u\035G<\350\210\331\273\267\332\267\273\017E\t\275}\020\026\274\035\231D=\241Hp;w\035<\275\016\2460\274\211\242\370\274\271\320\303<\31388=t\373\005=m\002c<<\346\247\2747\002D=ns4=/\240\013=\330VL\273\r-N=\312M\020=\362#\245<\346\317\014=I\207\220\274+\336*=#:\360\274tR\031=\223vP\275@\231\256;\247gz<C\263\210<\r\323O=\372\335\322;\200W\014=\030\322\223<\232!L=\214\366\371;\376\207\246\274}\216;\275\300\2111<\020\305%\275\376R\323\274\307\325\t\275\307);\275\240?4\275Ct2\275\004\034\004\275\265\262\212;\267\332\262<\227\2427=\260\010:=\025\226N\275\3775\032\275\302\314\231\274o&i\274\230>R\275\311Y2\271\276\030\000<\007z\354\272\t8*;\"+\032\275Lc%=?+\022\275Du\224;\003fH<\005{\311\274\200N =\211t4<:2F<f\367\262\273\005\310\237<u\267\206<Y{\325\273\022\030\277\274=\245\320;\217\263*=\366g\014\275\233\321z\271\367\205\323;\342\356\353\274\303\355\017\275\352\301\315<v\276\016=\256\354\035\273\214\363;\275\036\260V\274\030_1\275\211\004l<\323\360\352\273O2#=\312\342/\274$\307A=\3253\031<6f\036=pI\033=\211\263.\275\326;\"\274$\325==\202\217C=\321A\031=\\\231A=\314\030\233<=B\213;\204_R<b\311 =\013\013\016=\253\356 \275\202\3003=,\\\213\274\347\343\003=B\337\234<\361O\000\274N\216\346\274\275\207\254\274\220\242\221<x_.\275\024F\316<g0%\275\326\324\362;\255\034\'\275\373\214\361\274#\251\354\273\345\014\374<Y\312\253\274`\227A=a\326\272<kj\244<A\036\341\274\033\325S\275\202f\000\275zAD<\211|\361\2746K\004\275\243i#=\231\217\237\274\326\320\370\274\335S\324\274yWd\273E\003r<\247\000U\275B\027\030\274Aw\216<\000\216\237;\242\203H\272\2619@\275J\177\267\273\244\342\300<Y\323\230<\346\351/\275\001m*\274\r\220\220<\314\327\305<jW\242:\251T\240\274G\254\002\275\3741\327<\024D\235<\237\254\264\274Uz,\275c\335\'=\235\230\017=\244\312D=Lj\022\275A\2203\275\n\273S=J\277~;\221_\226<\306V<<\305\344\363\273R\331\343<X\361-\275R=Q\274}MF\275\030\005\343<\274\024\031\273\343\225\225;R\220\224\274\251G\233\274\340G\023\275\370\0357\275\365\367\031<\341?\356\274\230\021\025\275\002\353\225\272m\216\000\275\273\312\310<\262\210\n=\345K.\275\013\0252;\366\313\031\275\026\273#=\002\353\314\274x\242s\274\336\327\036=\244\260\031\275\304\r/=\013\005L\274\315\214\327\274\004)\256;\245\276\366\274\337\314\026=\366\233==\326{\240\2744\201\330<\345\251\327<.\030C<6;\374\274\220\023\272<G\3460\275\035a.=\315\365 =R\"F\275\235@I\275!+F\275\240\021~<\344\332<\274n\324J\275\032\317\245<\265\241F\275\220\267\004<s\246\341<?\311\371\274\001y\234<\337_O=\373\315T\274\335>\300<P\263\272<\336\262B=\0202C=\"!Q\274\030\331,=\305Y\010=\202\361\027\274\336\364\334<\007q\020=\023c\205<)%\210\274\364\377e<\231\245\305\274w\350d<\363\364Q\275\260\321\337<61\250\274\352&w<]\233\342\274\377\2454=\035\210-\275\252\215\t\275\377\216\350;\324T\271\274B;\201\274D\374\017=\313p\312\274)\375\005\275\375\216%=\252ym<=.\024=\276\220\224\274\360\376j\273\01364\274d\364\010\275\004\222|<\201o\311\274\340\342\353<\004e\374\272\211\245S\275rNC\275\'D?=\232y{\274#\022\337<\345\'F=\235\200U=\216\246\361\274\310\307\312<\347\207\214\272}\316?<\324 \027\2751\374P\275N\221\260\274\362\217\207\274{; =\304V\022\274\224\t\031;\247i(=\331\253>=tx\206\273\253\310C\275\346\026\250\273LPI\272e\227?=B\0278=~\315<\275\024\205\026=\020\004v\2749\321\031\275\345Z)<\203:3=\323\030\245\274\264~\227<\030\202,=u\027#=\311@\251\274\335P^<\276\305\034\275\3642\"=\257\000v<\323\3668=\304;\241\271\000=\335;\000\261\036=\230\347\227<\275D\025=\334\336%=*>\263<bh\215<\r\327\324\274\345+\250<\343\277\362\274\272\355/\274b\016C\275\304.\365\274\227\010\364\274\337S\r\275y\247\373\274\rd9\273>\004+\275\256\023\r\275{\330A\275\010\212*=o.\024\274/\301\232;d\312\n\275\226L9\275K\277(\274e\320\001=\360f\227<kjg\274\353\312M\275\177\276\022=\317\226Q\274\240\001h\274\346\200\275\272qL\336\274C\225\000</E\026\275\275\307*\275\242\350\027=\253\326\233\274\270\207\212<S\036d\272H\345\242\272>s\262;k\226\357\273w\025\372;\265Q9\275^\"1;8\302\022=n(\315\2740|\034:;A\035\275\353\324\027=\260z\202<\025\032\024=\270\001\023=p@\035\274U\177\270\274\317\375\200\274\223h8=\202=p\274\226 C\275\311\342,=\336\367\177<\346o\207<\343\231\235<\254\366\253<O\001\007;8d\354;\022\271\223<\213\226\'=L\213\025<^\373M\2741\246F=\365J&\275ev\013=\362jf\270\317\341i\272\272\202\217\274-\355.=\265\376\237\274\351z\367<U\344\222\274\242%\316\274\326\263\230<\373\353/\275\330\2475\275\0252\005\275\\v@\273\333,\213\274\251p\213\274\251\344\013\275 a\034=]U==\212\351{\273\247\256\211<\037\256\217\274\333\310z<\206K\347\274P\367\361<T\035K=\010I1=k\3332=\224\325~<?\353\356<\263\262\222\274\356TH<\363\215\356\273\371&\267\273\314\024\000\275(\265(\274\257\253I=\000\3560\273\366\2416\2754~3\275\267\361\004\2715\210G\275F}\351;!l\371<\277r8=\354\003\'=\272\245\370\274lJ==\342k\307<z_\037\274\205\235\363<V\246-=F`\032\275n\"\347<^\006?90\356\021\275\256QC\275\006\002\213<\216,J<\034\326\231<\215\373\227\274\234\357J\275\251\264M=w\262\007\275#\363\026\275\254\314Q\274#\025\303<+%\240\274\326\324\245\273\211/\006<\253\2767\275\350:\r\275\333\311\002=q\212C=\352\032S\272.\212\351\274\332\346\375\274\202\320\231<\362\026Q<\240#P=\367mR\274nv\231;\206CU\274\224\014\274<4c\204<\263\037\006\274}\202.=\244\345#=\031\016@=e\270:\275B\323\021=\213\274\005\275oK\261\274\003\362?\2751\265F=\332\314L<V\'\217\274S\350\270\274\031\354\005\275\256\351\307\274\222\372 =<\241S\275p[\n\273\372Am\273\322\335\017\275\252\347+=\261z!=\376\0324<-\205G=\313\215\376\273%\347F=\212\324z\274c\016\256\274\022\247\014\275\210b\376;C\2528=\tf\371\274\243\222C<P\3159=\316\307,\275\326e(\274\023\324\035=g\340n<\327&\326;\242\005\344\271\264\260\014=,\242\363\273\313T\t<\325\023\006=\275\370`\274x\316w<\222K\210<\321\205\r=\272\002\341;\345\3654\275\322\243P\275\317p\235;N\215_\274\'\017\316\274zV\312\274\344S\366\274/~\014<\241|y\274\235.5=\202\214<<\033\324\252\274w`O\275\210+e\274\rA3\275\317xU=DS\233;Je\324\274\022N\361<\372\304:\275-\275:=+4\237<Z\313\353<\325\006\317\274\250\010\240\274\374`\033=e\231;\275\346\335s<\304QX<GK\321:\251\243\260\273L>\013=\014\"2\274\300*\006=@B0=\020\264\376<\256j\264\274*\346;<\346X\323\274F@\204;\312k\010\275\253\346\n\271Dj\t<~\001\022\275\263\265\307<?\310\031=\035\260\253\274\273\006\030<j@\334\274o,\026\275k\2662;\261\203\236\274\304\307z\274\251\3104\275\036\215R; \367?\274\205\320M=\362\304\t\275;\307\234<\021)D\275\023\242\265<\201\324U\275c\377\243\274A>F\273l\215\263\274]\017)=\372g\365<\303W\307\273\331\355\373\273\221-\314\274=\006/\2747\026\010\274\254<\014=]\020\037=\346\202\001\273\350\334\212<\\\251\037<%)@=\\\207m\274\333}\213<\201\334\031=\266\034I<\033\363\213<D\274\r< \352-=;_\262\274\265\257N=}\352\216\273\364\013+=\212\237E;\306\352\317;\350\302\254<$\016;\275\251!H\275G[\342<\'\371(=d\203\354<\355\204\300<\314\250\226\274\002\2622=\010\035\357\274\317\300$=\256\377\310\274\005)\216<\217\304\267\274\315\235\304\274\010\021\017=\302\350\237\274\020\rm\274hY\020=\021w\'=\321\337L\275\374\014\340<\002\232@=\t\320\215\273af\034\275-\324J=\375\320\340\274l4\333<\3720\026\274\024^\241<\254\2519\275\360D\311<\177\3478=\352\014\317\274<\216\017\275\001\325S\274\231\307!\275\352p\342<+\322\320<\323_.\275\377\344\261\274\240[\246<V\241\020\275\325\326@\271E6\353\274\204\236\241<\247KB=\274B\336<\317\006=\275\365x#\275\271n\"=\232\000\024=\231\307k<\354\204\210\272\247\336\367<\233\353\311<\275j\022\275L\314\013<\2515\342<\370~N=\360\030\'\274!#\250\274\317[C\275\343\244,=\267\210\241\273K\373\357\273j\303\262<\242hA=_\226%\275\372\351\031=@\235A\275\031\207E\272a\022\366<\360>\263\273\214[\273<B\016\254<\007\324N\275\026\333\356<Ee\254<\235\300U=\034\373(<\030\317<=9\333\237<\332\366\364<\344&\031=\253\260\265<\203\253F<S\301-\275\337\313\330;\276K-\274\321\361\355\274G{\322\274\033\346\333\272N:_\274\356\016\207<6\306\343<\3717\020\275\235$I=\364\2111=\023\013\364\2746\232\361\272\201w\365<\260\334\030=.(\320\273\360K(\274u\210H=\005\023\347\274-\233\326<]\245U<1~\300<\253\347\214;t3\323\273`\311\267\274\021,,\275\357[\'=\273\322P=_\016;=\355\347D\275\244\236\037\275\000k,:^$\270\273\352P\364;\325\263\342;\307\275\357\274\177\312\210\274\263\342\320\274\345OM\275\257\257\322<_A\010<\230\235\365\274\326\316\260\274PC\350\274E0\313\274\315H1=G\214K=6\232$\275\372[L\275\014\034\336<\004w\007\275\371:\036=~\317O=uxx\274;\243\233\273\355\3114\275\312\253\327<\323\334\225<b\254C=A\265.=^\020-=\202\304\271\273\222\232\224\274bG\233\273\347\334_\274pe\377<Z\362\017\275\240\320!\275J\374C=\231\273O\273}4\366<\313\375\001<L\213-=[n\350<2\375!=\242\316\013=\243%;=\247\235\273\274\350\211k<\240\010\007=6\332>\275\022\003\241\273.r\t\275Qa\220\273\353\274\037=:\267z;\245\350\301<c\235\025\275e\2167<\035\355*=gb\236<\200\263\003=\001{\017\2755\255P\275\264\304^;\021tT=I+\020=:\'5\274\237\210S\275\265\002\302\274\033\3145=\003\277\272<\243\306\014\275\177\213$\275o\336\034\275\202O\267<J\373\n\275\0233%\275\\\002.\275\241\302\326\274\027mF\275\365\304\002\275S\">=\306\034\026\275\334T\252<\210\3754\275\320b\026=8\013\030\275H\273E\274A\214h<\037o\326\273\235\362\211<H\211\261\274\006\251\004\275\031\354\304<P\271\353;cGW\274ce\002\275\332\r\346\274\374\352><\301$\256\274|\005^<\362~\242<\350\013\r:\025\347c\274\243\377C=\n\004\026<x\205\023={\347>\274\220\r.=\006\232\017=\361Q\317\274pd\204\273}\004\016\275\301\262\t\274\330\034*\274\027\3000\274\225c?\275\251\375\033\274\260\310+\275A\314\352\274\273\257q<\356\373\305<\214\004\241\274aP\361<\331\215\\;X\226\264\274a\031\034\275\222\225\236\274y\275\326<\344\334Q\275\354\223$\275\234\373\250\274-J\353\274C\241\203<\351\303\310\274\331\263\346<J>\240<[DR\275\327\354\005=\210\365\364\274:j\311<\203\357\240<\020\224\252\271\272\323O=\310\375\311\274\257\377,=B\341\373\274iXa<\211\'\377:\217z\022=X\216\'\274\n\2668\274\314\326#=M)\020\275\334\212\022\274\317\202\022\273\014\032\223<\221\367S=\214F2<\343\234 =\233J\310\273cPW\2748\224\347\274\344\007\005\274M\250\"\2740z\370\273\265V,<\263\333\r\275\376\232\275\274\024/3=\270\024P\275>\360\206;\353\277\363\2734P\006\275\177?\210<\363\3151=\274\307\031\275i\332\313<\255\270\274<\030\370\226\274\301w\036=P429\210\347\004<W\366\225<\017a,<\374\223\000=\017\026\177<\277\327\332\274\002\n\032\274?\202\005\273\332\242\t<_\264\265\274\350\221\261<3\330J\275u\343\003=\231\201\036\275\1772\"\275N\264e\274\227\340\224<\264\334\363\274\264H?\275\215(\000\273\032\003\304;h\364\007\275zz\251\274\021\354\357\274|\234\221<\233\206\225<>>\033\275\251]\367\273i\271\274\274\352?\026\275-\207\347<Pc\325;5\036/= 4@\275\377\2039\273|\016\256<\351;\334\274*\352)=\370/\177\274\335\307\215\274\331\210\222\274}\004?\274jb\035;\306\313\036\275\027\337:\2742E\346\274)\330\037\275H\274\201<\366.\233\274$\312\001=\210\324\013\275is\300\274y*\371\274\374a\036=\270OK;\327Y+<\317\177A\275\267\330\000\275\204\305\010\275]\022\327\274\36541=\204\324Q\275+\235\031<\276\364+=$\002\365\274\013v\027=\232\304\303\273\016\352\212;\034RH\275I\266\010\275TJ\026\275\334\326\344\274\254\007n\274\256\346\335<g\252\243<\347\255\346\274B\207\034\275\336\360D\275 u%;\240\260\261\273{3\303\274\322\346D=m\345>=\255=\276\273\036P/=j\2327\273\341\243-=\025\034F=tZ\030\275$\201\264\274T\246\351<\362\262V:\n\3646=+$*<\313a5=\034v\031=\244\230\271;5<&\275\360{==ku\007\274\0349\265\274\216\314\322\2745\334S\2749\357\255\273\271\3662\275\363\217}\274E\340\362\274g(\"=5E\231\273\233D\330\274\344\006\274\274\261\265\331\274\000=\271\274x,4=\201;\321<\363\263\026=\366\304\335\274,\337z;\2121\005=\352\361\361\274\355\252\306\272@\323E=\004\242O\275\335>\004\275q\226\003\274{\266\325<\364\202\206\273\312R\033=\214\361\274<\247T\331\274\205\355\235\274\2316P\275\215\300\326;t\251\030=\245*\010\275\254\tH=g\3143\275!`B=\371S\2068\226\351\343<xO\315\274\003\325\222;H\272\335;B\321\2769\177\244\004=\000~\001\275d\244A\275\343\256,=t\366#\275\356O\017=\326\210\316<\250\224K\274A\3565\275\347\005\206\273Q\240\354:\241\315^<oOS<,\300&\273\350\313K;ku\221<&zH=0\204\335\274x\231\230;\236\376@;\020\371\n\275I\221&\275\332\356T\274|\305?\275\036\227D=I\334\n\273\243\014\201\274\332|\335;\2139\336<\307\254:\275\020K\363<\205\327*=\033 \026=\023)S\275\264x\313<IA\242\274)\037:<\262\363\236<\204\272t<\370nF<\023\257\240\273gVL\275\350M\323\274\036\345\375<-5<\275\234OL\275\340\273\272<%\247N<\002G\032=94R\275,\3067=8\200y;\243M\272\274\277\266\'=RV\234\274\246U\266\274\0305.=ka\007\274\372\234\351\274\372W\027=S\257<\275\246\340\027\275`\353J\275:\254\215<\216\345\235<%.T=\316\236\031=\033\337\377\274\225\2319\275\301u\217<\272\347[\273X\024\001=| \344<UO)=\370\325$\275W\2360\274\205\027\202<\361j\252<\273\017\236;?D\213\274Z\355\200<\3417\037<\003\227\374\274\224\365\026=\314\264\021<\273M;=\322\305\236<E\330\030\274V\217B=\255`a\274\0353@=\365@$=\\=/\275\321\331Q=\251\353\266<I,\020\275\373\2541<\317^z\274\222S\001=\332\277\250;\354k\231<x\275\335<%(\027\274|&\375\274\224\023\346\274\272\230\017\275\320\277Q=\225\204T=/\001\321<\376 ?=\353\202\312\274\023\241\334;\030\236\307<z\215\235\274\r\033+=\222Ep\274\340\226$\275xq\315\274i\320R<\010\231-=\031yP=\244\326\023\2754\306\243\273\033\020\255\274xg\334\274\201 U\275\346\235|;\037\214\230<\300\022\034\274}tg;7\3608\274f\0064<\312Z\313<u\022\005<-@\013\275\360>Q=\210\025A<.M\256<Z\276L\275[:\205<\225\244\355<0\t\373\274 \310-\275NO\250\274Zv\357<_G/\275\377OP<\301v\010\273Kj\310\274\314\007\031\275\257\217F=\207\022\203;D\375\'=j\360J9\364\336\311<\324\361\034\275\234L\233\273\357\222\036<\364e9\275\3034\036=_\216c;2\023==\274\013\231<R\'\032=\203\300;\274\214\257\"\275l\005!=\2628U=0l*\275\366\260B\275\201\214(\273\311g{\274\300\334>\275\002E\376;#\207\001;\273\276\032\274z\217-\275K\360\021=^\206\"=\374\213\253\274\024\267/=\215*x\274\234\177\365<\221\214\266<-\375J\275>=\335<\261\314T\275\220<\304\273\330r\"\274\037\025<=G\265\271\274\347\365\236<\365y\366\274!\257\256<\310$*\275\302\212\325\272\245\241\214<\3007J\275\307\231)=\276\222\253;\n\254\032\274\320\007\333\274\265j\354\273\236\2171\275[\232\030=\2369f\274b\205\241;}\232\r=,\"O\274\351\247\301\273 \305\241\274B\370\311\274\2727\025\275\013\353\337<\262\263\351\274\032\357\203\274J\374=<C\336R\275\'\331\254\274\3010\363<\336\002&<\004\"\014\273\372u\r\275$\217#\274v\'8=\02178=C#\270\274\367\322P\275\035\300w\274\235\367\022\275Oc#\275Y\333\240\274\221\256D=\252\243:\275\253\234\001\275\016I!\275\370v\372;M\0029\275\022\345,=\001\025\036=aB\023\275\204i\027=\352\272\277<K\025\210;=m\036\275\000\203T\274\333\255\'\275\033q\242<7\2001\275\001\"\026\275\027aR\274\330\037\205\274\0232\n\275\325\330\336\274y\202[\274\352+#=_E\\<TYP\275\362>\314\274\3314\342<\213>\r\273\333}\'\274l\317\t\275\020\002 =\255+&\275\245\213u\2748t\037\275\260\355\233\274\265R\263;\252I\323<Rt\006=\305\213\'\274]\222\235;\245\327\234\273\210s\322\274_\367\267\274I\207\261\272\255o\216<\350\010F\275a\'\316<\253]\244<\2569R\275\352\005\'\275\014\362\273\274\264\371\334\274\356\342\002<Tn\212<\223=\230:\202\260\232\273rb\"\275\'e\267:\232`\244<\305+\344\274+\272f;\224\004M=jvQ\273\371\273\004\274b\023J\273\321\2762\275\331}*<:]6\275\356\n\023=\022\216#=j\363\375\273\376\333L\274\025\031\346<\036\024:\275\025i%\275\237\257<\275\340\321%\275\317\004\002\275)\007<=Z]\255;\306n\007\2756c*\275\0017?=\262\002e\274CG\370<t\304\036\274Q>\002=h\254L\274q\202;=\256N\352<\340\316\200;3\215\034=\250<\243<\025\257\307;\222HR=\224}\332<\013\224z<\261 T\275\262\357M=\256\276>=\353\202P=\254\332&=\367%}\274\032YJ=\013v\250\274@=)=M)\001=\340\2225=\313\2300<?j\031\275\356\315:;6&7\275j\223\323\274z\321\365;}f\016=o\262T<|\203\300<\253\362#=\224\177\276\274\326\212Y<\371\355\n\274o\030\324<-IK\274#5U<\003\314:=\337B%=\246\024\027\275\357\344\302\274s@{<\222\200\032<\207\265S\274wK\207<\355FO=\016\"\010=>2e;\005\212I\273\3575\002\275&\326\374\274\364\324P\275\020!\022=w!*=\"\265\372<\245\003\342\273\211\206\023<Q/\245<\234\374\374\274#\244\305<A{\004<\010j!;\360\364$\275lzM\275\263}-\275\255\334\030\275\022\345\024:|\032\376\274e\250\245\274D\227<=\267\212\021\275\303\020\315\274\374\244\372\273lN4\275]\204\036\274hk\025=\r~\343\274\346h\361\274\301\246\234<|\035<\275\313\313\002=\221\324\'\275q\260\312\271\264\266\224<\375\251\256\274\032\302b\274\016\\\200\273w\023,\275SA\214;\367M\026\274\340wA\275&\260\r\2753\027\207\273U\236\032=N\375\202<P\350F\275K\240\247\274u\031\244<~H\332\274Tl\032=\351\025\034\275\355\345 \275[|\300\274k1\276\274\320s\254\274\345\263.\275va\007=\334,\247\274E\340\364\274J\270\236\274\303\320\022=\236\306\243\272\346A3=\373\300\207<>tB\275\223\205\036<\031c\320\274<$\341\274\255\365\024\275\204\265\025\275\013U\332<\347\213\211;\256\013\360<gG\260<\t\211\367\274\332\344\025\275#\020\"\275\3230F\273\225\226\361; c\351<l\267\315\267\244P,<3\344:=\245\203\366\274\363\020T=8\220\037\275\366.9=\002\0173=\242u#=\374V\253\274\350a6\274\334\260\356\274\3555\267\274g\300O\275\357&R\275\327\'\343;\341\273\021=O\221?=\206\030\311<\253\2457\275OO*=Z\340\037<\377\200\2329\222T6=}\"\201<:\241;=\317\267\217;\366\357\222\272K(1\275E\246\245\274\252\375\017\275\225\260\235<\337\325\013\275X\203P<z3,\275\367\345$\275\3265\'=a\303\"<\313H\372\274-\262L=i=\217\273\210\223>\275W\3725\274\237\277#\275IpD=8- \275\304x;=\216\236\205:\r\220:\275\324\010E\2756y\353;\207\311\016\273?\031\030:\023\337\005\275u\354<=\035\244T\275\305\325L=H\023\037\275\000\206\236<R\3436\274\005\320\277\274\377h#\274B\204\006:\'ST\275\333\215\336:B\264T\275\263\020\007=\027%,<\374\315%<\244\267\340\274r\373\210<\246N\244\274\366\273\313<v\212>\274\201-/\274\243\3547=\226\263\013\275\321\261 \275\372MJ\275>\'\303\272ZQ\021\275\314\000L\275\367\0345\275\005-\026\275\020\311\341<\033\252\016=qda\274<6\264\274\t\342Q\274W\0107\273\023\222+\275\276\245\227\274uRy\274A\026\270<\021\334\"=\372\232I<m\036\216<\250\351l\274 \274\365<\224fP\2758w\341\274\370\235\025\275\363\244\350;\0271\235\274\367\n\032\273\027n\315\274\354\360\271\274;iP=j\273\037=;\017\362;\000b\003=\312\342$\275=\021}<^:\363\273\2473\274:\270\005 =:\351$=\0106\256\274\376\271\264\274\337\356\273<\035\254\233\274\004\016\037=\000\0149\275\347\231=\275\031\322V<@}\021\275\273\220\217\274\035\367M\275?\232\213<\337\323+<\225?$\275(\234\017=\344c\271\271\357\240\253<\r+\352<s\016\013=\307\315\240<\350\030\305\274\230&\315<=\376n\274e\300\276\274:\327\232<O\327I\274\210\232\227\273\335\357C\273\350\256K\274\216\212#=\337W^\273\304\241\024\275N|\214<g\032;=y\320Q\275\276\235\244:P\303\221<\342t,=\316\"}<u\003\037=\210\375\r\274\212\203\222\274\202\331\225<U\243\244\273N]\214<>\204x\274\313\341\220<\343$\254<t\035\237<\377\t\327\272a+\310\2745\372\350\274}\036J=\210[\032\275\224\322\010\275\313Q\346<\373x\'\274\265\271_\274?Y\036=\262:\003\275D\030\014=mx\342<\037\245;=\276\303.\274\251K\325\274\303\3608\275\353!\306\274V\267P=}\020\362<M\213\205<\31645\275\033\232\212<*\3441=\257\221\316<\246\013K\275\214\2656\274\302\246\374\274a<7<\354\203U\275\220\342\305\274\217\2549\275\367\014\'\275\026u\004\275\223~P\275\237e\034=\232b1\275q\332i;:nM;1}\0269\264k\376<\220\336#<\324\221\023;\361\242\253<\355\022\230\274\217\224\004=\241\022H=n73=\020\306\240<p\360\330\273\210\317\301\273f\010*=\2253\253\273\202\326\205\273\233\013\351<d\215\002;\033\201L=\303\rW<\260\216\017=\026M)\275\230p\226;\r9\027\275W\001/=\017\222\376<+\351A=\224\006z\274Y1\371\274X\010R\275l\315\007=\237|\240\274\341\276\025\275\325\224\307<_\316(\274\342k1\275\027\355\211<\020\344\217<I\356E=\316\331\275\274%\335^\272\0317\246<\020\315&\274\r\202\245\273\037t%\275\217dA\272\020\261\'=p\"N=\363\237)\275.\374\177<7\370\355<\347\303.\275\240pj;\021\233\301;\233\323{<\n\312E<\217\367\026=9\254\233\273\335\235\010\275\340d\337\274\025\037\030<\304?\317\272l\0025\275i\3648\275\266t\262<\317\t\215<\345\205\254\273\215\204\223<\266>w\274\326\036\000=c&\231<j\2074\2754\266\036\275/?\t\275\211\036@=\024\306\353\274\256v\020\275\223\344\314\273b\177\361<:\020A=b\370\2359\265\341\340\274B\0204=\204\273e\273\322\236&=\217T\033\275}<*<\263\225\027\275\022\254!==\354\266:$r<<\216\253\364\274\037oH=eh\001\275\275\246\003=\007\322\364\273\334\212)=\260\210\211\274\017\204\305\274 \274m\274#\2510\275\313_\033=A\233\010\275\027\310F\275U\301\356\270\\\200K\275\227\264\010\275\025\255\020\275:\265\034\275\230\245S\275\266;\230<\276V,\274!G\034\275\263\206o\274D~J\275_\302\330\273\221X)\275\262\301N\275Zh\325\274\357j5=\300\205L=!(1\274}\340\032=\010\240\274<\240\250.=Una\273\302\245\331;\343\212\006=\2616\025=\302I:\275atk<R\023\225\2741\202\345<U\253;\275_\031\240<1\225\307:\216c\243<\260\370\'\274\274\342\242;\326\272\207;\030\025\216<x\260\324;[\033\322\274;D\017=\\\374I\275\276\223G\275\330\271\t=.\332\305\274\355\217\347\271\361\nl\274\376\252B\274\300\013 <-\334P\274\204\231 =\316\223\016=<\013\'=\326\347J=7\267A\275\207|\033;\255\265\364\2746\2347=^\235F\275q\0228=\217;.=\035\341-\275\206\337\034\275L\320F=+\226\233;SQ\374\274(u@=9o$=F\030H=\270>\267\274\216\313<=o\334\033=\247,\t\273\035\345+\275\330z\232\274i\027\244<\014\305\256;x\037G\275!2,\275l~\234<\2245B\275\303\274F=4-==L\220\225;\273V5\27525@=:\326B\274\367g\3679\200\345m\274\274hI=\353\275\365\273L\235\317\274\225\265\023<\032\322\024\275T\245\t\275.\032\273;\226\244\006\275W{\027\275O\300\306\274\005\267\212\274y~+\275b\364==w/\037=zc\236<\253\245\245\274y\226\243\273\235\354\253<\\el<;M\037=O\203\222\2743_9=5\034;=\313<\375\274\246\037\002=S\215\240\274\227\333\341\274\324&O\274(\354\223<\311o\211\274\225\331\002\273\333\177\332<\0033\347\272\030\212H<\205h\024\274H^I\275\330(\002\274\021\r9\275m\2202\274S\237\t=\022\257O\275P{\247<\335d\204<\275s\241\273n\2655\275\253^+\275\177\250\376<\352:\027=\201\351-=\317:Z;e\303v\274\375\253/=\257\215\007<f:@=\365H(=\317\351r<h\267F<\302\266\307\274\020\307S;\016\371\270\274\277\034==\341m\376\274\330AN\275l\026;=2\334\305;c\344\014\275\364\330\271\274`\347<\274\336\3569=\372\r\027\275\001\313\316\274B\242\020<\t\010\027=V\214\353\273\364;U=\326\023%<U\334\'\275\265\003\306;+\221\301\273\315\244I\275\225*\022=a\235c<q\244\252\274[%\362\273L\255:\275\364\241\037<-\000\n<\204\264t\274m2\002=j\352N=\335\373\2008w\3576=\335\224\341<\261\032*=\210\020\222<&\353\253;\213#\274\273\222<\233;I,\020\275O[\274<u\354\222\274\310\254I=[v\006\274\334\276&=P}!=Q\r\253<\265\216E\275r\336\364\271b0\234\274\264\255\177\273\023W\013\275\237f\354\274\330\352N\274\261(l<\032l\346\274\213\n\205\273\246\277\213\274N36\275@\253\331\274 \355;=\277\236\241<\230\336\003=\371\305\210<\206\264\342\274z\022U\275$\221)\275\022AU=\205\234;\275\003\231\325\274J\251,\275 C\004=r/\001\274\021\225\345<\020\377Y<_\022\213;\226\010\027\275\310\346\250\274t}\r\275d\324\303<\211\273\2159\2712\307\274\251\330\014\274\351\200;=\375\272\035\275v\334\307<\255\033\222\274w-\330<\240i\262\274\355M:<\n\302\233;(\353\\<\017\357\003<\255iN\274\251\342\006=\2249\274\274\265C\254<\212@_<}\207\245\274\357~\036=\272\265\267<\253\352-\272\373\220\027<\215\017\007\2756\263\256\274\264\307\360\273\376\344 =\177BT\275O\210\t=\310d(=\2614^\274\212\241T\273\352\246\351<\336kG=!\372\214\274\314\251$\275\353c=;W\275\363\273\354\367z<\275\205W\274\220J\351<\030O\266\274\216W\330<qN!\275\310\256\t\275\202>z\27466\343\274\037\207\037;\271/U<\350z\346<\013\\\000\275\215r\223\273\307\013\327<\242\255\245<tsP\275\006\206\202<\325\317L\275\244\233\003\274\376B\013\275Dd\321\274\315cF;\224~\327\274\303\301:=\t[\355\274x;Q=0\212\025\275\252\212\336\274\034|\'\275]\374<\275 n\320;;\023\257\274j\210\304\274\255\225\314;\024\006k<p\347E=S\373R=\312F\243\274\377\210g<^\3070=\364\036V=\233.\312;\230\252\177</\347\224\274:y.=,O\"\275K\325H=D\032U\274/Z5\275\026\260\233<k\314K=F\225\024\273vd\020=n\364\251\274\312\372\257;\036\'\024\275*\370\037\274\310GP<*\027\355\2743kU=Ig\\\271\006 B=\271:m<\364\322m<.\220\243\274\r5\020\275\227)\375\273\003k4\274\225:\253\274|h\014=\035y\260;\352\024\355\273\333\200\334\274h\2504\275\247\222\305<Ka\327\274\346u\276<\022\223\034=\335\0275\275\026\336\220<X\374\373;\206\250\341\274\256\322\005=\027_\026=\223i\265\272\307?i\272\364\316\217<\3671\233\274\016\2323\275\320\345g;\315\214\352;\244\371\t\275F|\320\2743\230L=\344\240Q\275\236\247\020\275\232\341;\275Q\025\223\274\347\204\033\275\236\023\026\275O((=\306J<\275\235m\233<)\010\t\275\213\002\365\273\347\212\032=\313\017\324\273\023\2359=_\317\343<\230\274$\274T\274\214\271em\364<\316\261C=>Z\031\273\304\210L\2748^/\274\2710\232\274\020\222!=\264\206\251\274G\274\003\274\331J\236<A\341 \275\353\211\347<\323\265\237\274cE\207;Y\024R=\356\"\022\275X\370\374\274F\215;\275\265\003\021\275y\275d\274\320z\"=\032\t\000<\250-<=\0330D=\322\274\001\275\371G\355<\032\365L\275~\207\025=S\373\374\273\234\177\036=/\254\276\273\357B\273<\372\016\224<\242\ng<\212\306\305\274\023\031\362\274\306r\030\275\271\002\037=\005\337\323;\347\212e;\263 H\272\014\235\034=\320\3709\275\335\340\343\274\345\357@=\001;1\275\357\027S=\252\002\031\275W\331\345:_QT<\237\270\342;@Q\374\274\275i1=_\346\023;\242\346\330<$\316\277\274Q\375\331\274~\2305\275x\031(<\261x\220<\240b\242<\305jP\275sh:\273L@\004\274\257\2027=xS;;\244\271&\274\352F(=vV\235:\211w\035\275\304L&\275\004H\006<\333\235\'<M\323\006\275d\326\021=0j\3669\265o\215;\273`+\275\016\273\034\275\010Y7\274\257\251P\274\202u\312<\252:;=\027\206\274<\0254\212\273@\231\251\273P\265\247\274&\343\031\275\350N\014\2750\201\265<%\366E\275\342\3625\275\202\016\n\275\267~i;F\3234=\314\276H<y\205\230\274\035 \333<\331\206\033\275\246\000\026\273\233\3040=\275\'\344\274\001\020}<V\332\374\274i\367T=\362\3254\275^\307#=H\343#\275\355.\301\274\315\264(:~N+\274\276\211\020<F\345x<\007\032\330<\016\\\214\273\277(\201\271\320k\260\274p\315\352<v\037\354\274\022\0148=6K\003\275p\275\320<\232:\277\274\252\222\301<\352\243\262\274)\202\016\275\307\304\234\274:\373$=Q\2164<\357\244\326\273\373\2077=D\310J<\226P9\274Z\363\035<\244\327J=\3629\025=\331\350(\275M\217l<(:\217\272,\355\266\274\002{\275\274<\200F=m\376:=\340\007W\274PN\205<SdT\274\326\277~\274\241\007Q=\336\025@\275E\000\241<:l\024\275\277\177\230\273_\3155<\271\302\010=B\322\242<#\260\357\273\364\315\035\275\2352T=?\014\033\275\022E@\275\255\341\275\274i\310Q\274\3619\034<bZ\3069\2115\206<\350\310\245<\317K\210<M\223\233\274\374\016;\275\237\215\016\274\t\016\003=j\344\365\272\321?\371\274\3359H\275aN\317;\016\233\322\273\233\315\031\2751B\276<_N\322<\235\343\360\274\366\263\373\274\3313X<E\330@<\340T\021\272,\334B=~k\034<p\312\320\274\314\343L;\372\035?\275\245\255\013<iM\242\274s\274\037\275\236\321<=\365tC\275s\030@=_b\260<\245\245\355\274p}\347\274\222\365\016=dz\353;\334N.=\362\332\255\274\304J\037\275K\210\273;.\204\241<Be\'<\032\261S\275{\351E=$ V\275\356\241$\275\222^\201\273\013\370\333<6,\036=\2350\376\274\205/6\275\274\307M\275q\344\r=\254TK=n\003!=\350\247\t<\361\226\005=\323\342\t<\205\255E=\236M0\2759=\030\275\200\310\205<FW\235\2743\232\013\275?{\006\275\206\251\256\2741\311\267<,?\010=\344~%=w\2245=&@\003<o\353H\274\342\346I\275\214k\364\274\244/\n=@\235O\2752\024Q\275@\241\004=\002\030\t\274\375\366\036\275\262C\245\274<\030\323\274O\020#=\241\320\226\274\244\026N=\250\024\261\274\324up<\301\3326=qs\'\275\214r\273<I\273\263<\274\001\314:\330\363\037\274e\223\010=B\325\360<7\307\033\275\261E\361\274\022\037 \275\243A>\275j0\236<\332\364J\275P(\262;c\235Q\275\354\224!\275\025\221\313\274v,?\275\016=\221\274\204\204E\275\375\256\343<\204\2377\274\245\276\261\274\334Y\"\275J\252\332\273\023\251\232\274\2609V\274\034\261o\274\226\252\360\274N\343v<\210\301\021\274w\314\275\274.\373\024\273\231\250\315\274\036\367\010\275\"\227\353\274\3223@=F(\326:d#\376<\220\r\206\274\030\025\016=\036EQ=VY\246\273\332DI\275\347\002,=\233\003\016=4\242\321\274TK\021\274F\365\357\274\3113\031\275\221-\375\274\227G\373<\210\231\003\275\373Vv\274\341\204\234\274oYe<\317\354\350\274\274\232*\275(l\'<\374\034\334;c\242\206\274\361\214R\275\336\206\003\275\217\365\216<G\2315=\3345\201\274\220\265\376<\265\022\373\274\246[O\275\300\207\022=e\275\036=\350\355\236<g\271*=\006\rs<\303<\034=\203\311s<n\315\201\274\365\266K=2\000d<\026\202\r\274O\377Q\275`i4=\245r\334<E\210N=Z\274/\275B\241t<I\020h<\206\000\005\274\307\210\245<\016(\264<\217\000\010\275)\034\277:\345\204;\275\352\355\246\271\334fP=<\317\332\274\316)P\275w\336\360\274T-\374;\267\027\355<\320[\002\275\\>?=\007\2712=Z\177\252\274\243g&=dC4\2758\274\000=\r\372\r=\304KK\274\371]S\275\264;7\275\013\214\000=\343\370\263<\037\260/=\216\2246<\310^M\275\336\335\304\274\356\376\225\273){)=8s6\274\230?A\275\353@\002\275\204\277\246<BPt\274\256\017\356\273h\373\372\273\232\342\245<\361+\032\275\020\346\006=e\322\027\274\0343\006=\254\315\362<\360\201N\275\325\241G=1+ <\277\r\026\275\370\206G=\351\305\020=\032\247\200\273\242\033\022=\023&\020\274<\304R=m\335\330;4\272\317\274\351m8=\340\2140=O\3175\275\322\'\031=\323\312\222<4\246&\275\277\214\257\274\221\377\331\274\014\007\'=\226\217==\337-?=\026\306\223;\022\370\023\275\235\244\266\273\203\020N\275\024\220\031=\216\212\253\274W\272\356<\337\2635\275\2241\005<\366\026I\2759\222\233\274\314\216\311<\210\252\246\272\366p\346:\206\316>\275Dv\027\275\007h&=\261\375\376</l \273\000=2=u\374\256\2724y\241\272\302\242\274<\2250:<?\3711=[\374Q=\364\267\035\275\214z\334<\362\350H\275n\021\020=\312\334)\275\330\314>\275\333z\201\274\256m\317;\336S\236\274\346\371\020=\000\254\342<\r]&<\317\016\266\274pw\327\274\215}B\275HD\031=\246\022\204< \r\342<o-\210\274\370\026\347\274\376\254\243\274CU\002=F}\340\274\022g\240<>\3270\275\360\327\024=.\264\225<\356.\336\272\001\027+\275k\247\000\274\251\376o\274\306\220\001=\225\253\335\273\356a\005\275B\316\n=\311\014L\275Z\r\300\273\321\300\217<\222^\374<3\017\201\273\235\275\235\274\201\221\212<:\203Q\2757\205-=\263\217V;\334|\344\274\366\275\372\273\271k\341;l\214g\274b\232\r<\202F\010=\000\206\257\273\002\031i\274\314\022.<\236&U=\351\222\326<\016.\017=\243\320.\274\327\272\014=2q\020\275\330^;=\010/T=\014(\366\273\310\251-=\t\236f<n\376[\274\342@\003=%\035H<\373\221\013<\232\240Q\2751\250\324<\311(\343<\353\226\232\274\333o\026\274\0214%;\2656\014\275\354\253\361<\275\230\245\274Y\001\363:\270\343\005\275\214\320Q=\220(U\274\361\021\017\275ti8<&\354\'<\377\\\001=z\3628\275=\326P\275Ro\334<\'\220\347<\245PR;I\254C=HC\274<B\330N\275\327\247@<\010\335>\275{\006:\273\232=\242\274\227B%\275\303v\002=\314\242\261:#\021==(\237\344\274\317\\;\275\311\224\206<\017\313(\2746\233\312;\372\027$\275\335y\034<F6\211<3\217\306\272^Ph\274VM\306\273e\366Q=\327\004\035\275\265\025\"\273\032AK=lT\226\274g5\347\274I\017\020\275m)\235<\336\3719={\261O=.\r:=7\005C=;\\\211<\332> \274:\002\322\273\264Y:=\334\314\207<\324\021\214<=\007\203<\032\201U=\315$\035=G\031\332<\234={<\337\007\352<\031\346\247<\205\027\227\274\'\230T=v\207\3649\037D\'\275\363\200\324<\261\241\242\274\326/\013\275\006\251\006;+\034\231\274\340\342\317\274\300XN\275\265!N\275Q\322\033\275\212\211,\275\302\334E=K_2\275\343\033\r\2750?.:\'J\255\274\220\"Q\275V\017\272\274B\020\326<}\251\016=\356\027\354\274\031\326\337<oUu\273\360\370 <\256n(\275k\317\356\274:\250.=-\374\231<\352; = \322;\2759w\206<aeM=\340\263&\275\372u?=\013\023\031\275\205\202\021=\270\210\311\274X\261\025=t\2066\274\300&\n\275b\024\377<(q4\275OAQ\275q\305\3558\344\372T\275by\343\274\207$\326<\314>\032\274\002\234\003=_\3530=\207FD\275\323\261y<\344\243#=>\363x\274\004\340\357:s\351\357\274YA?\275\332\260\035\272\n\360S\275\251{\234<\374i*\275\375\2260\275\221\263\027\275u*\017\275\213\277\310<\264\033#=tT\256<~\035\030\2749\000R=\r\031\373\2732h\347\274\255\213\356\273\375\251o<7\213\333<\257K$; \361T\274\007[0=\027%\237\274\025\230\254;\330\304\013<\302#)<\225\306N\274\201\003\031\275~\376u<-\240\026\275\315\331+\275\024h\354;\004\215\020=`\321*<\242\230\"\275\224\223!\275\334IW<p\377\003=r\356&\273\272[a;\237\274\017\274\244\007\001\275\336\230\"\275oZ\005=\302^\264<vq\227\274$}\034=9\273S\274\253\202\271\274\032^\203<\036\007\323\274\016/\310;\303\210\345\274K\r\370\274\311\357\236<C\033\020\275\013\262#\275\253\"\340\274\020[\301\274N\350\"=\267\3208\274\354P\017=\t\2663\275T6\302<t\350*=e\332\021;\267\273\023\275\363Q\256\274\237y\377\274\354`\266<#f\253;\003\320<\275\237SF=\336\\,\275\233\303\225<\272\223\330;i\021\360\274\032\314>=\016KQ=m]f\272W\2610\2756\212\237;\211\254\251\274\007E\227<#\354\004\274\333\032L:\331\377b;]w\035=\346\246\025<X\267\033\271=\014\034\2755K*=#e2=eN.=\037u\274<v\204@\2754@f;\253G\255\274\261\016\335\274\317\271*\274\345\276\001\274S#0=Q\324Q=\022\025\314\272|J\265\274\321\250\331\274b@\312<\217\277\374\273\225\377I=\327\271\021=\0103C\275\223[\274<Vo\367\274\305\335\275\274<(\245;\313\250|;\211=\266<\375\331\033<\003[\200<%\301S\273\365\241\312\274\215\307\"=\346\243N\275e\372\203\274\354\346\255<\275\2215=\322\312\324\273R\345B\275[\006\337\274B1H=\227ZR\275\034?9=\\\272\376<\370\213\206\274^\376Q\275\350G\004=\355t\000\275S\177S\272\002\3709\274z5R<\236Y\357<B\304\272<\002\340?<\211\025>\275\021MI\275\375\007\304;!\373\304\273o\026\017\274\257V \275#K\260<Q\215\200\274\017\"\243<\377\3212=\000r\371;\006\316><[6\231\274\324\204\350<&\242\t\275\341\277\243<x\365\023=?\026\234\274\205\"==\224\203\236\274\306\277\311<\346\375\303\274\314\341E=\333\256x;0U\201<+\364\"\2754\2670\2757\332\021< :d<H1\263\274\374&\366\274p\331\021=\355\277\261\274\267\327\312<\203\357.\274\232\271\374\274\"\315\362\274\211\322L=\007\306L=\362\320\334<\216\342[<\211\232/\272Ip\035\275|g\t\275\266\3419=%*\207<\214\350?\275\026\177\251\273\001\365$=\003$1=G\244.=G\215\314\274\327\221U<<\342\371<\3203K\2757;\016\275<\\&\273\270\235\337;\320\346\307\274\376\013.\274\374\226\356\274\321\177\316\274\355\213\340\273\255I\025\275\033\356$\275\360V\325\274@\2313=o\277\233\274\037\214\302</k\362<\257(M\273\240b\021\274.?\021\2757\232Q<\250\310\276<\316}Q\275/>2<\014m\251;\324^L\275Z\000q;\345\311Z<\221\215\342<q\253\257<7+\216:\264} \273\224\204\346<\332y\035\275\033}\374:P\352\324\274\351\227\372;\313\334\016=\374\356\252\274u\342K=\'\006I\275%k\001\275\rzG=(\341\310;\343\026#\275\020\251\022=\317#\002\275\234z,;/>R\274\254P\022\275L\274==\001\033\036=\223l\335<\270A\n\275x]\020=\305\002\347;;\267C\275\252H\213<\023\204\003=_\2136<O\340\346<\321\271\267\274\2518\316\274\361\372\004=c\326\017\275S\307\020;\214\024\311<\274\344\275<\333\326\270;\341\353x\273\364>I\275\210\3455\275<\252\034\275\364 \000=\222\346\202;dC\323\274\203\255P\2758\251\377\273I#\037\275\302\321\276\274v\334\344;\341o==\327?:=<Ti\274\310m\232<\347\334\222\274\217\362\221<c\241\022\275\246\317\256\274\267W(=(\026\027\275\374Y\031=\215R\221\274\320q\350\274\002L\337;\330%\021<\317\207\215\274Z\246\255\274\257]*\274\377Z\334\274yO\204<\305\317f\274\307L\232\274(\270<=\217\353\014\275\302\204\000=\217\243\366\272\222~=\275\270G:\274\004\315\324\2747\235\\\272_\030\301<R\230\004\2750j\'\275\340\205\225\274~^\025\275\020\037\341<\023\001\2458\344\261-\275I3\204\274==`<\211\025\n=\021\357>\274:\240T\275\312\320\r\272\016D\232\274{\233C<P`\201;\352\023\034\274\371\301\377\274\200\333\301<\000\350\006=\346=\377<?~\241<.\3121=$HB\275z\233|\274\001\312\260\273\320&\206;7\004A=\251#+=[\231\006\275R\255\020<\310\223_\274\250\305\024\274|\216\267\274%9U\275l\304\322\274 \003,=\273\364\r\275\027\273\346\274+\034\004\275\351^Z<2\"\025=&\244\017\275\352?\320;\035{{;\006\224\370\274*\242\301\274\003\2368\275\353L\301\273\352\020\335\274\031\236\333:\245\t\037\275\320\277\"=\260\026\200:\342\017\206<\251|;\275!\224\032\275y7\366<\205w\251;R\2512=\370\370)\275\322\030\236;\225\021#<\t\307:=!\346\207\274\200Z\311\274\006\272\240<\032`\024=\307\350\362\273)\245)<\334\331\026\275\215y\014\275\336\032\2759\237\277\227<\010\200\003=\326>\033<\251\360\031\275\244\233\343\274\254M\004\274\301`\352:\364*\253<:\2763\274\256e\210\272\241\234#\2753\375\217<\341\273N\274\375\035\r=v\241M\274\245\217\346<\np\216<Y~}\273\215\216@\275k\273\243<\303\232\030\275\r\2652\274Ry\235<W\347\361<\210\240\342\274\353D\324<\260\000\t\275!\216\241\273\021\300\311<z\334\215<F\030\344<$\2307<y\323\321\274=\207z<[R\341<\314\250f\274}t\212;XQL<\371\327\362\274\351\303\001\275\365\360\353\274\0266\"\275\205\236\004=\010\263\017;\r\344\275\2744}\035=\334\177D=\275S\037\275\225\316\t\275\346\0352\275\212\316\007=Y\323\000=\275\311s\274Es+<\345\250\260\274w;\032\274\203~R\275\262\240T=\344?:\275\211\212\303\274\262dP=\340\324\352<\016m\211\274at\246<\271\273J=C6\254\273\225\322P=\346\311\252;\035\t\221\273\321\300?=\010$\201\274&\003\237<B\266\013\274\341=J\275n\262H\274\013\303\010\275\310?A\275\3574\343<\233\362\004\275k\274E\275:a\270\274\327,<\274\334\005\034\274\264\351d<\203S\216\274\224\006\207\274f\206O\275L~\245\274vW\226\274\203\352\n<\276\357\373;|\237\031=\033\217b:\240\272c\274(\006\264<\262[4\275\324@\333\274\004\026i\274\356\001\270\274\265S\355<\034JM\2751N\342<%B\017=\342\001\035\274\003\350\342<SG\034\275\016We\274\025YO\275\346\203\330<\374\\\216\274\000U<\273f}Q<\201MJ=0\000(\275\361\356\016=\321d\3359Sy\3749SIS;\226\233\323<y\356\036\275E/B;\221^\255\274\365\215\335<\246R|<\242\330\030;\343\215M=\\\214\016=\317Q9=\250\340:\275\025\366\271\274\321W\006\274\336OH\275S\000\004\275\036\n\376\273\240\243@=\377\204$\275\273\251\320<\372\202\343<\377}@=\226\320;\273l\"\351<\243\216Y;/TS=h\312?=\3514S=\363jJ=T\275\027\275j\351\256\274\241\241s<\324\304a:\215:\275\274\345\350_\274\245\246,\275\250\023\337\274\262\324+\275\367\247\017\275\320%M=\241\364\234<\264\201\004\275\232\362\253\274\256(#=v\246e<bC\373<PD\326\273\360\342P\275Y\004>\275\202e\t;\032\240\242\274e\251U\275@\034\301<D}1=\371\255\350;\224\224\200<m\344\275\274\362\\\026\275\365\3412=\2022-\275\243\345\224\274\224\244\020\275\341h\305\274e\320)\275\020\237};D\3354=Q\231p<E\024\033=M\"R:\262\364\016\274\342\347\373;|\216\355\272\3330\225\274~\251\230;\324\021\206<\025\212\363<\373\3421\274\350`D=\025\357&<9C\205\273\037\325&\274\337\005\250\272O\337E=%\356,=\241eV:\017.F\274\261\004,\275@\312\301<\024\232\244\274`c6=\377r\353\273\2216\222<\351\2778=\201\t\362<&=\303<\227\310Q=\024\344\347\274\221\rl\2747\373\340<L\245J\275\032b^<E\026\320<?\207\021\275\247\365\317\274\317\376\023\275\270\3111\275\010#m\271\023\265(\275\3063 \275\2333\217<up\332<\264G8\275j\017\243;\316>$\275k\2178<\220\206\007\275T^\233<:\335\353<\331\300\264<a\271\200\274z\254\330;\213\255\340\274\006\244s\273\306\332\323\274\004\214\347<\311\3265\27554D=q~\"=\205\013*=1\301\235\274\337I\306<\277\235\361<\342s\036\274\236\370\201\272\243c=\275\251\227\023<\307\351Q\275\301\325\003\275w\205Q\275V\315A\275\377H\021=w*:=X\355\027\275\247\341\001\274\226\237\031\275\240\322\010=\3605\207<\252\2666\274\035b\025=R\360\322\274?\010J\2746\227D=\266\252\226\274\014\212\304\274g0\370<@.\"\275kr\254\274\020I\003=$\374\r<\217\304Q=\314]\014=K\251F\275N\270F<\230*)\275@\370\025=\032\334p\274\010\336/=\377\2204\275m\274\034=W\232\367<\177\260F=\335\244\215\273\364R<=\034\315L=y\306\227\274\340;\036\273\233&$\274\222\240\304<b\002\323\274U\262\301<\332q\021\275\211\211\261\273\337W\343<#\300\373;\002b|\274\276\031\374<\211\206 =\022~\200<9\352\010\275\327\022\232<@\236E\274\305\257\244\274\250\206K\275\304=8=\007\274\305\274\227\231\244\274D\352N\275n|)\274?\374m\272A\330\n=c\210\257<\251>\336\274K\262y<\272f*\275\010\377\220:\344s\027=\200\216\021;\230\030\r\274\312\354\032\275W\006\003\275P\321!<\3542\324\274\266\215-=\357n\025=\002\230\267\274\010n4<P\304\377<\261\034Q;\274\327\034\274A)\205;hkI=\031\222\256\273j\240\022\275\270\202\313\274\226&%\274\272\364\t\275\221\370p<\275\025\360\274\220B$<\302\314\254\274\031\3161\275\345\343\017=o\265\024=\036\273T\275\262\335\255\274\2241J\275V\322\351<v\307\240;@;\254<\005\3319=\234\243\004=\3770\010\275F\211\020=8\226B<(\237\306\274M\362\212;\027\035H\275!h\371\2745.7\275D\025\027=,\273\035=\023\345\"\274\363O\'\275T\3612<\206\037?=\317\034\274\274j\353;\274\342\371\251\274\233\235\225\274rhq;\342\017K\273\213\303\036\275\3210\221<\"\200&\275ML)\275\212\212Y\274;\264\211;\243;\212<c\007I=k\3371\274Rq\361<\226\270\360\273l\320\017<O;L=3\236\220;&$\000=z\030Z<\351\375\037<\026\336\355<\022\031<\273 \350\342<Y\210\326\273\254\201\007=\260yY\274\177]\376:e\320\202<H\337\035\275#\213\365<\035\223\016\275\225\341%\275vb\014=\371\357\336;\250\220:\2731\235\263\273\305\372\271;\260\356\010=9\210\216<\022\361\"=\\qg\273\200\271\355<\257\221\010\275I|\022=;\305\224\273\002\334p<4\334\335<W@ =\246H\323\274\342v\343\274\'2\010\274\301\232\243<\370\214*=\344RJ=\027\201~;\207\374\210\274L\274\'\275$\347I=f;\211<\026\372\017\275\336;#=F\216W<p\355\r\275\024\351\260\273\251r\227\273RU\005\275+\3602\275\336\322\374<\010\026X\274\307\276\026=\333\210_\274/J\301<e\260\212\274f\221\335<\323\251\223\274\033\256\036\275\233\222\353\274\335@?=\311\257s\274\342e\326<\301\321\035<\010\341\'\273\314\211\357<Hp\275:\227\213\225:R\3049<\021!\256;\372/\017<\257\351k<DP\274\273\341\243\277<\370\342-\275*\202V<\263<\316\274\200\225%\271\001\254D;\316RM=\250\265\033\275\264\375\357\274S\306\"\275\303E\035\275\031\324\020;d\216\362\273zpD\275z\342H<\321tx<b\002N<\323\223\372\274\r\001c\274\310\310I\275B1/=e&\036<\234\002U\275\000w\036=~\203\342\274 ?\221<*\327T\275\256\264\221<PT\010<\367*\361<\215K)\275WFQ=vv\212<=\333\273\274\024\344P\275\241\327\333\274\001\260\320<\r\0140=a\235\014\273\205\244\314;8p\254<\333x\352\273\324IS\274n\277\033=_\013\005=&\220\264\2748\021.\275\222\226;=5\225\372<\353[F<P\r\270<\243\001\367<R\300J\273e\254\341\274\363Z\377<w#0<\221\357\377\274$\335<\274\034\343@=Q\n:\275\236G@\275\272\000\271\274N\271\007=<\202b\273\341\266d\274\225\0363\275\2404s<\256 \267\274\307fT=\002|F\275\250\204]\274\307R/\275\220\271\242\274\300Y>\275\223\301U=\373m|;\307_\327\274\0108\'\275I\220\267<\233\361\266<\022\376\216\274\210\234T\275\t\347\027<P\355\200<\323\233 \275E\233K\275\310\357S={\300*\275y\345K=\277\326:\275X$\001=\307[4\275\363O7\275\n\305B\275\226\252*<r@\332\273\027\212\210\273$\360\227<\300\370\n=\307a0\274]\\E=\345?\177<6\360?\273\271\020E\275\206\376\243<*\250:\274y-\244\274*\356*;\375\030\200\273\377|q\274\317\374Q<\370y\312\274?k\220<p\301!=\251\350R\275\344\rS<\023\361\205<\316\tJ=\362\334\206<k~\020=H\226:<~\373\331\273\212\352d\274\365P\377\273\234\343?\275v\272b\273 F\236\274\2740\267\2742\351\006=\257\0026\275\323\331M\2758\3125\275[^\032\275\035\342\337<\253\177\304\273z\242e\274]\236O\274\272O\275\273\367?%\274o\003\007=X\217I\274\177gN\274:\317\n\275\000=D\275\022p\271<\366\006d\274\247=\277<m\353\325\274\354\332\032\275\242l(<\213t\360<5C?<\\\201G\275\024\010Y<0\216\367\2740y\311\274O6%\275\\\010\2579\231\014\302\272\235\323\021\275g\006\014\275rvu\274_C\376<\225\342\272<\275\372D\274k-\t\275\374\373\264<\376N\303\274\373^\312\274\305\345M=\333W\347<\231\021\031\274.\233}\274\324\004!=\017\032*\275\203.Q\275a\360\333\274\216\'2\275+\263\254\274\355*\024<\002\232P=\243i\337\27442\273;OO\034;\016\274)\275\033\303:\275,\232\013\275\005++=)\231\304\274{\2720\275\305\305\037;\223\331\r=\033\245\345<,\273&\274\350\037\022\2750.8=\256\245\324\274Y\0354\275P\tm;\321\377\024<\270*X<\232\226\304\274\333m\351<\3638\264\274\254K\225\272\010\3108\275\016\323\202<\253>(=*\374\347;}m\257\272\024\311\261<<\234#\275\303\207`\274C\243\036=P\331G\274\237\2663\275\005(a\274\300\366\033:\366\373?=\311\344,\275\377\026\033<\331\310O=D\376\304<}\027~\273%W\334<{e$<1\206\245\274\336\022\252;\204\356U\275\240\254\234<\220i%=\232(\276\274\205]L=\260\257\365\274\206\372\267<|\316\r=\266|\252\274j\266O;U3\033\274\213Sb\274\361>\037\275\301\232\006\275\312\027\333\274\252\255\027=\025\361W<\2724\000\274\376,]\274r\033\006=\304\254\016\275\300\221\234<P5\276;\304\220\331\274\331k(\275\377\256O\275\006\206~\274H(\014\274\227\203#\274b\201\275<\266\315%\275\351NP<\177\276\211<tu\246<\005\236.\275\247vY\274\201H\333\273\327UU=\034\334\333\274\021\223:=\362B7=\272\335@=\201\221v\274w\t\301<g\006F8&\251\224<\243\031\000=\027\304\343\274uk\333\274\315\3156\275\264\250\261<#.\210;`\251\331</\3434\275r\236\004=\254\322!\275)xi\274)\3471\275ZoF=\367y\031<\376\316\223\274\302\215k<7\247\233\274;oY<\270M\017\275\305M\324:\023\204\234;J\356\022\274Fn/=\323\276\025=\275KU:\357\213\360\273\244\233\014\275\217\037i\274\014\373\246\274R\326<\274\224:\343;\2567\t\2754\243\234\2746N\035<)\3376=\266\356%\274\035\244;=\343\341\347;7\316\223<l\375\320<\367\r\237<l\231?=\003,!\275e\255\027\275\002\272\312\274x\317<<\244\346>\273\321~\"=\'\005\005\275\372\021\317\274y\216k\274}$\351\273\236$&\275\365\272w<\001|,<\2500W<\315\016\325\273^*\204\274\335\366\332<\342\306\356\273gw\226<\316\2568<\203\206\022=\353\n,\275S\301\336<\231\247I=\360iF<\217\215\214\274b\003)\275_\273\035\275\351\341\013\275\271\324\313\274\21247=\242\364\033<\313\356\253;\224P\237<\237m4;\364\323y\274\313\203\005\272\035\346\275;\031\373\214<\377\r\366\273\204\3368\275\320\213\254<\232\002\375\274\010\350)\2755J)<\320\343H\275\022L\224<\010}\341;^\376\230<\372q8=\324\251:\273/&\016=\267\306*7\241)B\275\"EM=\337:6\275\021\341=\275\301\365\t\275\251QR=Q\2363\275\000\335\027\275\264\021Y<x;\350<0\307\006\275\270\317A\274j\343\020\275~\023\035\275\376C\262;~\231\213\274B\216r<\376vO=A\277F=\0201\230<\037\224\032\275\357\375N\272NV2\275Z\244\"=\254\022\303;\200\354\002\275\356,\005<\r;\005\275A\370\017\275-\226\375:Y\010\026<!\224a\273\250\'\361<J=\337;[\200\261\274M2\200\273\316\022\216;G\020\326\274\274\252,=U\330\356\274.\327\203<\206$\243\274\232\242.\275\337l\004=\320\364\013=\002Y\035<\351t)<n\0334\275qq\243\272\335\236\006=\266\222!\275\316\205m<\207\017?\275h\023\323<\213\214\252<\305\211q\274\035U\372<\0142\305<\230\244\014=\r\355\024=\r\274P\274%\306\t=\373\335\024=\n\0071=\311\202\005=\233\337\033=\037f^\274\266\344;=\306\374\r\275\031c,=\030G\276\274\237\242\025=\231\377\021\275@\037i\274\022\1778<\177[%\275\354>\223<-\0319\275}\r\020=$jC\275\020\2659\275H\212T\275\271Z\312\274\377Y\243<H\020\313<R\n%\275\3302q;6\256\322:\237\365\027\275>\2544=?\367\253<U\345F=\'\275\007=\035\267\002\274\246\312\207<\320\025\310<1;\037\275<|\370<Yw8<\300\327A=?7\321<\302QN\275\354\213\033=\274\275\021\275\353\025 =Cj\023=]\236\354\274[\336V:\000\326\311\2743a\250\274\324\2328=C\300\265<\362\322\232\273L\234\004\275r\341\024=R#\366<\245\001\253\274\3024\320\274\300\035\351<\256\366N\275\267\3645\275w\373O\275\352\017\344\2733\005\236<N\274\310\274\343E\306\274A\304c<\030+\225\273\312\355O\274^h)<\240\224\364<x%\246\274\rO\312\274\356\270\030\275N\342@=\235\333?=\326\345j;\221\r_\274\352\2004\275`\354\036=\260\021\000;\245\373\r=MU%\275F\0238\273\370\023Y;\376j\243\274\337`\356:C\306+;\3320\333\272$\356M=O\272\364\274\032\226\t=W\227F=!F*\275c\377R=p\240/=\006r\343\274{\226)<\237\032\226\274o\337\363\273\247R?\275\331\232\210<\374\024\311\274\035\322\017\272Z\256\226\274\372Y\340\274\004h\222\274\207z$=F\254\247;{\021\276\274\235I\037\275\256\215\256<\204u<=+\031\256<\237\200{;s\267&=Ya\221<\177\240\302\274q\245\'=_\201<\275\246\'V<\270=:<\327V\366\273>\230/\274\227\\\335\274\222\037V;N}\360<s\246F\275\002W?=P2\264<\022d\307\274\256<\333;3\376?=\027s\311\274\324\306e\274\2361\356;\257\0057=Q\247\257\274o\365\367\274s\026H\274h\261#;\350OR\273\"\002\254\274\310\271\351\270\263\2214=\347\243\021\275\030!S=\374\321\340<\3300\330:\302\362\003\275_\320\022={d\256;\354C\237<\210\317\023<\314o\013=n\020\001=\251\220\016\275\330\236\332\274\231i\234\273\3139\221<\263S\207<\354q\034\275e\351F=\256\240d\273\211\360\026\275\226h==\n\357J\275\013{N=\255\354\265:nz\n\275VX)\274\204\323\n=\3262\267\274.\204\277<i\243\360\274\202\2435\275\200\254\025\275j\305M\273\230)]\274cO*=X\010\n\275\246=\000=\262\313\225;\305\351\017=\177\223R\2745H\254<\201\"89\223I\336:>QF=\377\354\277<z\234j;\325PX\272R|=\275\252\233\345<\357\002%=ZY\013\275y73\275\021\361\320:\240Y\212\274\363\331\310\274\362A\033=0\264\205:\335\003F=0\344X<\261A\020\275\177a\317\273\007\225\240<&u\211<p\326\253<\'\3307;ru\343<\243+z<\005FH=O\360\004=\000\254\265\274\024\260\310<q\306\276<\255\3401\273%>\301<\310\362\210\274C\0239\275\013\024\266<>\2072=\201u\006\275p;;\275J\016\303\274\177\2113\275\017\177&=\214\245\234\274\277\214\363\274\320g\032\273\220\256\002\275@\"\017\275`\253\321<\243|\021\275[\177\373\270\010K\033\274\234ba<C\363\237<\375\035\375<\267\204\355\274\331\250\302\273e\003O\274\351w\265:?[\266\274\214\276\374<\024\340\032=~\351\'=\021\354u\274d\356\032\274-{\326<>\252\010\274\233\3626\275\002\312\304\274\225\2059=}\010\366\274\320d\014=\344vN\275\3473$=\311X\365:\350\366\224\274u\253H\275\032\2372=L\324@=X\316\264\274{\027%\274\246\tJ\274\236\251A\274\344\331\231<\357\200n\274s\214\373;\326T\005=\000]Z;\322\332\'=\231\227\"\275RNR\275!\235<:n\375\264\274\230\373\317<\323\025\014<\023\234\234<\241\361\005=\272 E=\337\356\232<\036\024F;Za\307</j\007<\212\350@<\331\264E<L\312\230\273\305\2143\275T\270\337\274\021\217`<\342\356/;\022\331\000;|\242+=\377\370\'\275W\325\314<\006\213M9\372\342+\275\2426\245<\266\343\213;\2553F=\005\335\313\274\017\223D;\255\304\304;9\032\217<ow\032=\337XA\273\352#*\275\2321\'\275\225\334\024<\232\237\250\274\304\224@\275\010\376\371;\262\3065=\371\354\"=\355\214\336\274\314\353\020\275\375\303P=I|*\275V\214\304\274\262\236\360\274x\200\217\274_[\337\273\211\t$\275\340\014\200<\355\002\177\274\366kQ<\220P\325<\034 \004=\343\035\226\274\221M\244\2731\271\252\274e\365\300<\243\357E\274\347\022{<\361\323\356<\223\254.=mk\013=\034x\223<\370\360x;\272\311\260<@\275@\275^)\022=\250\347\030=\276\366\255;\251q<<\322X0=\361ea\2748\003\005\275\010\270\352;\273\350\275\274X\365\025=nW<=\tPB=\263\307\344\274\026\034R\272J\252\354\274j\2015\275\206q*=\030\303\372<\031s\252<\244F7;\254@\004\275\313[=\273]\321\307\273\355\366\372<\372 7=\r(\364<\322\326\362\274<\375\236\2737\367\025<\177\245\225\273\024\'8=\206\013\241<\232\022\037\274\264+*=B\235,\274\243\243\274\274\357\364K<=\260\213<X~\027=5nA=\313Dc<\2522e\274\367\004\315\274Cy0\275\022M}\274\323\347\236<h\222\214;=\207E=\353\333\324\2743%\375\274>\247n\274\340\001\002=\265\253\023\274\325\260M=\271\360F\275F\246v<\032S3=6I\274\274\316F\244<N\004?\274A\320$=SH\371<\336xH\274Qm\334\274\027\357\n\275\264E/=\227\343\033\275?}\t=\311>\262\273\300\314\326\274\013\r-=\022dc<\303\2510\274\022h\274\273v\2313\2757\251{\274\013c\002\275\257&-=\027\006\005\275\354<\312<\\\230D=p\027\023=\342\304L\275\237\275A<_\2534=\357\2774=+\310\203;v\266J<\322 \010=\031\254\034=/_H\275\361\261\335;i\027\314<~V\221<B\251T=\205y\026=0\271)<\"Iv<\254!\267\274B\367\377\274\3023+\275\235Z0=\276\261\006=\337\236.\275\222\354%\275\303_\310<iX\013\275Y\245\r\275\354[,\275\001\227\312<_7$\272\360\214\227;,\332!\275\262\354\316<\264\333!<\310i-<\204%\251\274\255I\024\274\026};<i\n\201<\026:\r\275.\341P=\001\2250\275\301\\A=\205\"J=\334\230#<\210\317\025=\244\214O=\025?\030=\372\336\270<$F\367;\241\022\222\274x\227\334\274+\2141<\303G\031=\336UA\275\"\234\337\274\352\222e\274\225\342&=\205\252J\274\361\017T\274\034\203e<\315\203&=\302/~:\362p\332\274\313\330\257\273\263\0225=C\243\376<\332)\203:Qp\207<g\262\374;\320\274\272\273ha\004=\234\241\221;\255\366m;\371\010\252\274y\340J=\337\324O\275\r\362\367<\303b\307\272\344\232\356<\213\334\006=Q\307&<W\2326=\177\030e\274\375\277S\2749\016\300\274e;\256;\344\345\260:\334\201=\274ayB\275\242\3471<\357\260\354;aI\'\275\312\013o\274\206F\013\275\371\217\252\274\001\3352\275\364\265M=\t\343\204\274F)\023\275\177 \340\274\204\357\313\274\344~5\274@\2707\275\031\274G=\211\221P=\257\216\242\273\367\016\264\273\271\2600\275>\230:=\223\275\321\274\326\252H\275@JI=x\020\347</\314\333<\333\344\344\274\027\353\261\274[\216+\275\227^\301\273+,\3529\361/\347<\356%\240<\031\377\014=w\345N\275\241?\330<\302\201\360\273D-P=\3560K\275\231\273\320;3|\000\275\002\214^;\215\242\307\274\252\025Q\275\210\366$\275\223+g<),:=\010>\311<\335z\233<OA5=\370[\032\275\216\221\366\274/\323\223\273\215\302R\274\300\251D\275\274[r<\263r\303<\373\260\367\272\331-\032\274\274\337\024\274N\261\306<p\024\321\274\317\276\247;\2166\336<4_\247\274\3253Y<(\265S==\264\304\27472\303\271\264\010\022\275\320\242\027\275_\003\351\272\216U\317\272x\3718=\016\222\301\274\023\214?\274\014\'A=5y\010\275\335<\027\275=4i\274\375\302@\274\311KJ=\'\233G=CW\260;;\000\345<\037E\341\274m\356\315<\371\010\344\2748\354\236;\213!|\2731\\\353<h\363M\274e\324C=A\260(\275\277\215==\230`H=\311M\355;\006\3725\275w;\201;\245\000@\275\330\254A=\233\373C\275M\005\003=\264\2605\275\320A9\275f\r\254<u~1=u\222u\274\247\341\377\274U\001\033\275\025g\035=\274(\212\273z<\'=c\006:=\202V\203\274\223W\353\274\223\235\361\274>\230\007=\004\264\023<dN$=\337\254\027\275\312\021\246<c0\272<\331\376\3567\232\321N\275n\277\237;\261\t\256\274)\031\254<\261\r*=R\203G\275`I\024\274\377\366\333;\366\233J=\307\210\036=\267\013\272\274\374\014\257;Q\275G=o\276P=\363a<\275F(\274\273:?G\275\177*\000=\303%5=waH\275\216\023\377<8\347h\272\274[F\275qW\235<\005X\313<\316\271>=3\301\027\275\205\\*=2\001\226;\022\010S=B\334\314<\347\0369\275#\002\032<EX\302<`VH=*\311\31775g-\275\256\324\032=*\233T=\302p\212\274\275!==\n\375\322\272\355\210\376\274\367\327\343:\263%\230\274\227\337M\273fR\305<\374\014#<\234@\032\274\360/8\275,\354\"<\005\360U=\315{\026<sB\345\274V\361 =Z}\234\274m\314\"\275\245:\025\275]\254\273\273l1\346\274\337]Q=\343\311\005\275\367\031\332:\377=3<\250(R<\035\201\035\275\205\236\016\275\033 (<rz\027\275\205\223B;\364\270\217\274\005\220\215\274t\302\354<0\337\023\275\277\376\010=\020\221k<\032Mx<\035\005<\275\243R\354\274\010c\210\274\251\210\272<\366{:\275\017\005(\275\361Q\016\275\324\224\257<\013)&\275z\004\273;\016\247D<Ca\313<6b\234<w\342\270\273\254g\301\273\323k\027=/j$=\032\242\016\275\000w%\275\\\020\'=\334\335\234\274\003|/\2758\342\232\274\215\372\020=\004\260\007=\356\244\344\2748\"\217\272\240\311\004=\2249\274\274\034kK\275\342\003\3039\030\026\025<\017~?\274S\273(=\010\223D=v\243\337<\240\351\374\273;\367\006<l\3050\275\301p\024=fj\016\274\365y\202\274\254\276\306<\026\177\007<\2333\037\275\272\314\302\274\217\357\367<|\362\274<\n\322\254\274\007\3627\274\331v\354\274U\301\233\274\256\204\317\274\334\264\013=#\344A=\027\037\013\275\260\342\034=2\004\270;a\304\276\274\276\322?=\031\326\030\275\177T\325;~\270\236<\224\217$=\245\222\356\274\337\245\021;\301>\243<\254\360P=\362E\016=\237\265\'\2756\241.=\237\330~\274g\3575=qt\247<Y;u\274\177\2603=x\026\356<)\324M=_D\021\275\030\3515\275\036\2509=\006\020\005\274\271/\006=I\251\276\274\306\362\021=\344/\364\274[(a\274\332\357\312\274\306\213*\2749\267\315<\267\373a\274K\365~\273zy\205\273\177\206\221<\032\217t<Jd`<\0219\031=\332\234\274:\326x\230\273/i\033=x\326\024=@\356\321\274U8\325\273\"\226\031\275%7d<\275\013\306<\233\340\t<\004\010~<\025\203\351\274\235zN\275\311\302\005\275=iw\274\014]\033=\220\305\036=A\033\204\274\310\310P;e}\027\2744\000\206<\333{\257\274Qs\327\274\266\020A=\206@\370\274\350\246:=*\353\3449h\2725\275\363\334,\275\356!\233;\371#\213;\27436=\277&\300<\200\270\013\275|\376\036=4,\001\274\240\001\245\274&&\351\274l\252\022=\372\3744\274\002N\260;\312.\032=fg\321<\3221\244\274l@\356<\360\031?<\206\373\305\274#\337P=\333\324\303\274\241\037\311\274z\260\2678\237\201\017\274\002\324\322\274\345\317\223\273\215U\374\274\230\227\226\273\023\331\020\275\213\3228\272\016\001\277<\035|D\275\260!\036\274 \3065=\350\331\215<\267\211\t=\344z(\273\336>\270<\'\365`\272\354\332\243<b\216,\275\321-,\275\343.g<\351\321\257\274\027\212\007=\264Q/=\t\006\353\274\237\007\342<pd\021\275\336\371\364<\230!\006\275\254(>\275\271,\014\275B\374\274<\025\205*=2_6<\226\252\003=HXE\275\361\272\275<\2057\304<\246s\227\273\332~\301<\033Y>\275T]\033=\361\316=\274W\260a\274\306\240c\274\304\240\305\274\320\353\007=\326\247\263\274\364c\220;C\004?=&mm\274b\276Q=|\200@<\221\330\364\274f\273\r<\2207\031\275\024\300B=\2622\007=\312\"\351\274\002m~\274\243y\013\275\320\347\002\275\346-6\2742\233O=\256GU\274\033j%=\006J\241;Maf<Dt\275:K;\213<&!\344\273\024\321\232\274K\205%\275q\010\007<Ap\017=@\3154\275\3164\347\274<>O=\037\257(=\335\023\273<\n*7=yG7\275~\260C=5W2\275\241U!\273\207\221\340\274\021R\030<\363)6\274\220#\344;\366\365\"\275\335\027\323<\003\031\253<=p7\275\367\256\305<\013\032E<X~\220;y\304\221;\013*\311<*\r\'<\314:J\275\326>\206<\326\003*=\336k\341<\212\205\363\273\372\374\t=(\016\"=\367c\033\275\317\367\256<\3430G\275-\251\326<7\204*=\274\nM=1\210\266\274\346BL=\306\205\026<Q\233\344\274\353\251\234<\250Q\205<8\312}\274M\236\024<RV\336<\353l4\275\'\342\377\273\231}H\275A\346\303\273\004\323\002=z\360\243\274\334!J\275\037$\314\274\373Q\'\275@\376\346\274.\341\t=\211G!=\034\276\365;`\030G\274\206\275\235<\221,\t:\374\177L<\302\355M\275\314\205\247\2738\0267\274\234O\365\273\305\261m\274`Y\246\273$\243P\275\372\377\023=\277J\257;G\333\352<g\264 \273z\261\013=\334\2713\275\360Y\r=\026\313\223\273^\233\005=G?\037\275\351\024\312<\031\362\244<\341C+=\224%S<\244*;=N\206+\275/\364\373\274\036O\217;\345[\354<4\\\340</\246\344;\271\372\2159\203\022,\274\017\366\351;\\\301\010=Q1@\275\010\262\035=$\3278\275n\0374\275r\277\263<\274\257M\275&\365\'\274\360\265\037\273i\221=\275\200\204K\275Z\323\204<\237\2154\275\031R\\<9\265A=\251\221%\273j\243-\275\237\357C\275\342!\227;\215 +\275Oj\370\274\n\244\243\274G\263N\275\361\036\266\273\366\341:=#\006A=\347\032\031=\336\230&\275\177}K=\321\346\000\275\322S\325\274\253VJ\275\363z\220\274\216\036\020;q|\343;\344\237<=\336\372U\275U\'-\275)\\\320<P\0247\275!\'\267\274\222\313\255\274L\276<=\327+O\275`\303\013=\032(s\274-e\243\274\037y\341;\236\264~9\253-\2509\377Y\000=2eB\275\330\273\375\274\354=\005\274\006^0=\274\016\374<\246Q\037\275n\213\005\275\177\222\352\274\217\220B=\\\346\r\274\025\004\250<\'\313\025=\347:%=\332\216B=U>P=\327\245\023=\341\026@=\003\003\014\274\373\200\376;{\357,=2=\271<,\013.<E~S\274\316i\337<\216\307N\275m\246\005\275\320\252G\275A\231\224<QO\n=\203\'\"\275~\314,\275M\024!\275P\3601\275\234\010\326\273\'\334\364<:\3454\275Em5\275\325_\343<\244\320\2209\355\315M\275\272\001\322<\262\210\251<\021Z\032\275\343\031!\275\311:L:\343\314\013<\366\001O=o\374,=y\275;\275\232U\006\275\007\321\375<n\3612<]r\235\274\256\000+<\025\347\321;\202k\223<<\243\030\275iZ\277\274b\356\002=\352\321\346\274\351F6\273FG$=\206\317\025\2754\277\254<~O?<\300\337:\274\273\317\246\274\366L\r\275\032\327\025\275)\032\t\275\2153\323<\351o\223\274U\226B\275+\247\t=\356o\234\274\342\301\214\274\002\223\316<n\225.\274\303\263(\275\211gy\274\275\374s;\236s#=;u%\275\224r\306\274Z\327\315\274\351\372f\274\227\257\310<&\342\346\274p\261&=\366\3442=\375\247C=~\345\036< |-\275\000{\271\274\351x\r=\364\3325\2751\373\311\2732\301\357<D\241\004\275n\260\325\274\353\250\003\275\233\234T=ES;\274\347\tH=C\275\010\273bn\325\274\316q\026=\313\1772\275G\342\317\274\217K\254\274?7(\2750\236\344\274\025\036e\271\226\225\236\274\263\223-\275Hg\323<\016\375\007=\371\355\250;Z\276\274\274\2739\310<\224WS\274cBX<\313\376\004\275uVV\274G\213\310;>\367\r\275\357LE=\334\224\005<\206\304o\2748\305?=R>A\275\346R\363<\014:u<\344}U\275|\274G\275\302\305\256\274\265\n\375;\250NB=\027\276\343<\033\232\344\274\263\301\245\274\000\336\305\272q\0027\274\344\025)=fa!=\331\367\027\275\302\n\021=\256\203\350\273u\345>=\221,D<r5-\271\257\254\366\272\376&;\275R\250\023\275\326\337N=\267\346F=\341\323\177<\304b.\274,N\351:\003\317\304<\352g\362\274\203,\263<\256\231\032=\322\014.\275\242ao<\032\327\035<\365\223E\275AH\n=\027(\225\274\304L\364\271\n\006?\275\334\202\343<\331\004\213<(\263\364<{\273,\275\276M\272\274\310\260\364\274\363\275&\275\263a\271\274~(V\275br,\274\325\342\315<\203\212<=\2118\021\274\220P\346\274m\255\357<\251\326D=\251\303\031=_t.<6\021\n\275\n\014\224:\240x\033=6\204\322\274\252@ ;\333\337O=\376\215\"\275\270P\032=\202\335\300\274<\276B=\250\020B<\027y0=\367\211\357\274\031A\367<xz\222\2728I\033\275\253K\300\273iZ/=\234\277\377\274+5;\275\347/\332\274\217\267\256<\245r\006=\215\306\024=~f\214\274T4)\275;=\364;s\217\267\274\350\361}\274\026\374\233\274\002\330x<^\021\001=\244)\377<N\253M=-p5\275\017q%\274\220;\375<\361\375(<M\312C\275+\020\344;\313\205\254\274%l\226\274\327\260 \2745e\250<\353[\n\273\304o*\275A\376!\275\354F\333\274\226\030\252;\227\250P\275;\026\240<\005\237\310:\244\007\351\274\321(\266\2742\010\026<\273\234*\275\271\275\335\273\276\362,=\243\260\235\274.\324\232\274\325v8\275A\267D\275\251\263H<\262?d<\257\327K=\374\006\337<o\320\362\274\240?\343<.\2143=\002\031E\274(\234T\273\201J\235<\002#\010=\247\376\005\275b\265!=\n\361O\274\360*\344\273\021\021\324\274\262\r\027=Y!4\275\263?\006\275:,H=\257\336S\275\214*\014;\226\022\037\273;/\257\274\307\331\357<\233R\004\275\3410\"<\000\245\315;\025p\237:\316\334T<\013\356\225\273*\203$<\002L@\274\373\336R\275\023\254\350\274\333\241\312;\240\274\325\274\024d\356\274\277[\215<\304\312\2739,\231_\274c\315\001\274*V7\275\203;*;\00554\275z\344\034=\336\364L=zt\325;\021!\365\274~6\354\274\022#\337<\330\031\034<\273\2173\275\351\2221=s\267D<\224\350\360\274\017WM\275\026v\034=B:!\275\201\277\255<\024l\203<\204\256\343\274l\217=\275\245\346\212\274\203x\201\274\305/\374\274J\327S=\304\352U\275F\2057\275y\334\273\274R\"+\275#J\253\274\\UG=\023\371:\275MG\037\275\320~\355<\345\002\025\275\256h\212;\032R\216<@\272\017=\036\0375=\236\270\017<4\330g<\247%\000<\002&\273\274\260\200\036=\027e\353<?\342\030\275z\200O\275\274n\002\274S\377\311<p*>\274\3676\014=K\344\027=y\261\320;\273\244O=\036v\026\275\024\265\005\273\0360`<\231\300\010\275\250y\373\274\363\213T=\226\224\005\275\360s\016=[.9\274Ig4\275im5=c\354\034\273\213\332\032=\010\367\217<\245\224.<ZR\014=\223v\005\275\330\247\371;\3072\020\275\276q\006\275\342=\031=\271\001\232\274\022|\036=\235C\023\274Y\n`;\014\320\215\274\377p\350\274jg%\275\220\025x<\021R\373\273\346-L\274\242\000^\274r\0056<\331\245\014\274\215i\020\275\210%\310<\340\277~\273\272\027D\275\225gI\275!\302\315\274\236B\014<}\306\276\274\032\240\337<=Z\302\274\260\326\333\274\n\007\370\274\004p==\260\004B\274\331\211J=\006\253F\273YmN=\224\371\";?\226\204<\321/@\275\214\270\254\274\317\006\275\274\313X\305\274w\316\235;]\323\221<\267\224\010\275F\266\222<\300v(=\260\237\007\273[L\317<=m>\275\227/\023=\232?\375\274\256a\250\274\200w\022=xO\204<\017 ,\275\274-.=\245J\333<\253\335\024\275_\000O\2753%a\274\300\275W\273\225 \325\2744\303\332<\332\'\247\274X\033G=\026\000_\274\204v_\274n\002\243<IO\016=\321F\202<\334e\245<\265\356\026=\rAU\275\321\331)=\325P\261\274G\366C=\321_;<\246\027s<X\330b<\243] \275\2037U\275K\003\006=\322\005\032\275 e\245\274\255Y\001=\324\330\261\274MhF<\341\262\";\3021\264;6\343\037\274K\303=<2P6<M\\\357\274=u\032\275\277\256\366\274)v\014=\276\264\345\274\232/\343<*+$;W~\t=WX\277\2748\023,\275\253lU\275\375\361\004<\315\026\032<*A\007\275\345\224v\273FL\'\275\026\336T\274~l\266<@k(\275O\236\r=\267\306\205\274/\316\023\275F\"F\275\t\2638<\270[s\273\357\310\004\275\347\2309=\304e,=\007MO= \304\016=C\2733=\305\350\235<\265\350\336<\365\361H=3\214\003\272\030i\204\274\310l\'\275Q-\021\275\324\000\016<\362\3201<\300\355B\275\243$\000=d?\352<(j\333\274\267\203(\275\303\230\341<\272\270\337\274\003\353\024\275\221\226\021=z\200\002\274\257G\003=\246\347W\274\024f\364\274v\211\024=|~=\275\331\006\246\274&\372\375<K\300]<\353\367\355\273\304\034(\275\226\371@\275\353\372S=\267V\231<i\351R<\027Uc\274\213\205\200\274E$~\274~TT=\025#\014=Bd\177\274E\312\244\273V\226\333\273\270\315N\275\3746\020\275q\203\035\275@\005\256<\306c=\275\206)\035;\243\221\274\274D/\205\274\333\023\227<\302\364\267<g\213>=U\035\020=`W\366\273\231\256\021\275\276\220-=\200J\020=\020\273\236<\231[%\275\222\256d<$\260$\275\300\306\334<\003\264\243<\245\300\231\274GS#=N\204\262<U\221D=\006\000\003=\271\273\031<\367\360\016<e\222\305;~\324p\274\254\"\031=/@J=\\\221\t=\234\334S\275\"\301N\274\007a\271;\275gI\275M1\353<\222\223\276\274\010\2046<\351\214c;\246\356\013;\222\"\355\274\333fA\275b\002T\275\023\2618=\3662L\2751\200J\275\260\305(=\353\224 =\363\306\311<j\024\036=v\000.\275\005N\360\274\014\304\036<\265!\013=\341~\272\274H\310\017=\2429\034=\205\rK\275!\347\037<\"U\022<\243+\010=\302\240\276\274W\236 \273\262m\237;\234\341\314\274\371IL\275\243\206\223\2731\013\343<\372\355]\274\027\032\221;|\2353\275\223\312\200\273/\037!=\231\'\246<G\2510<*\235\000\275L\357\241\274\251,\262\273\244+\360<\351&\355;\373\2165\275\253|!=\371\365\302;\024\323\207<\236\227B\275Wh\304;2\352\303<t~*=e\300:=`\377=\275p\t\006=6\220\000=\367\262F<\3162\204\273\001\177\000\275Ez\236<q\254/\275\231\205L<%;\310\274\001\007U\275c\316j\274\230\027\026=nS\002\275j\003\'\275/\327T=/\223n;\215\272Q\275*Q\205\274\365M\361<>\334\241:\021\"0<P*\356\273\333f\213<9\025\027=+u\'=\263\361\357<zW;\275\t\'\276<\352Z\211\272B\252\215<\344\353v<0\342\243\274\225\227\232\273\333\266S\275}\3013=\2172\321\273q\014\267\274\322\360\004\274\356O)\275\re\023<\273S1\275\033ka<\224@\375\2746\250\023=\225\034\361\273\370\221A=\200h\007\275:\031O\275\316\237\030\275\272\341j<F\274v;\223\0249\274\231b\333\274\244OD\275^\251T; [:\275~\342H=\374t\033=e\214\311;\202\355D\274\017\033\032\275\352\300F=.d\357:\371\205)=\354\232:=Dp ;I\374G<i\313I=\\\336\336</\271X\274\250\035(\274\260\030\374<\267r\242<!\3057= w\306\273\217\036\036<\033\235\260;\347\243\025=+\323*\274\371\374\034\275q\375\205<\316\'\240<}{\323\2718\3555\275\370\t1\275@\303\000\275\356<\035=\027F\270\274\262\201>=O\322\253\274\004\315I\275\027V\006\275\016\204@\275M\001;\2757\004\025;\331L\017\275\231\357\001=\244\223F\274\221\305\000\275\273\000\000:l\037x:\321 \236;\033\370\350\274v\256\017\275\030\302\320\274\354 H=c\342\002=\224\261\020=7?\327;"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2190
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2190
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2190
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2190
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2190
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2190
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2190
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2190
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2190
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2190
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2190
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2190
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2190
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
