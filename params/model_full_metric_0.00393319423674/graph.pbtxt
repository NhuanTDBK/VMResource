node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2030
          }
        }
        tensor_content: "9a<\274\302\357\224\274\357\204\013\274\336YK=\252\342\306;3+\307<\243=\303<L\355\030\275z\322\023=1\206\024=\336\034\363\274\273\344O\275\372\010%\274E\rR\274i\n]\275\3631\257\273\351c\317\274\324\353e\274\252K\202<\035L\307\274\'\021\346;\212\225\340;\211N\266<\021[v<\374\352\036\274I\210 \275\206\3415<\"\204H=\212i\327\274\020x\260<D\333F=\306\261L=}\233y\274dR\030=\0274\000\2740\363\200<N\334\024=\273\000?<\263\354\306;\025\207E\275)\372\366<nIq\274s\365U\275g\311Z<\233t8=t\365\355\274\346O$\275)\242\346\274j+\251\274u\001l\273\260)\357<\274P\335\2746:f\274Py\177\273\277i\253<\214\310\033=\222M\005=\200\004\351<\237;Q=De7\275\312\004\220<z\236T=\275\211\344<@\202\037<dL\037<b\312V=\273\205L=\017\021\310<\030\233\277;\031\314=\273\231\177\023\275(\220\325\274\000`I=\276}%<\273\270S=\333\202\245\274Y5\370<\001\026F<G\365\200<\026\025H\275x\365:\275?S\r\275tV5\275\226\033\031=\021\327-\275\316\245&\275\267\214V=+,\025\275\311,\221\274\276\002/<J\261U<\202\010P=\r\021\237:\036\003\034\273\212\212T\274\035\374\233\274M\035\315\274\324\003\357\274S\327\r<\333\250\253\272\352G\n<,\341\315\274\243\315R;l\020\363\273\272:\351\274\350\014U\273\235`\307\274\361V\252\274\222\202\207<\035d\205\274\234\2614=\207\303\027<A- =\370?h<-^Q\275~g\034=\212\372A=P\275:\275\372\376\326<5\014\367\274\301\224?<\254W\257<.+\033=\235Z\\\274i\247@=\344\241L<Od\\<\321 U<\035l\273<\235Q\223<gA\211<;GF<9B\007=\214\206\347\274\202\362\"=\356\243\313\274\366\362#=m3\227\273)>\251\274)W\030\274\310?\030=\310\222\317\2747\274T==nL=\027W\240\274G\030\032;\3655!<\216EQ\275\333+\244;\210\257\324\273-\371\302\274\235w\371<\302\230M\2750D\016=YQ\207\274)(\323\2742\243*=\361\340\243<\025:\313\274\243\263.=\361\317\014\275\236\023$\274\355\026\023<\335\274\';e\236\017=#\203\265\274\215\337(\275X\316\010<\347\202\n=\324\307K=\300\017+\275\241PB\275U\203]=n\r:=\311g\315\274\213q&=\315\250\016\275g\312\322\273\004\201\322<g}\007=\004g\211<\320F\\=w\017q;\361Zx;\361\270\352:t\233\034=\"\3066\274\021\244+=7V\304;.\206\024=kf\304\274\357\356\002;;\225%\275K\030E\2752\351\036=\223\371%\273\217\314\256<\233~\336\274\322u\217\274\240\221\364\274\243\010B=\314\337\t\274\265\204\006\275A\345V\275\341\"\345\274\346\233\375<\013P\327<|M-=\364\235\221\274\364\336N<\\J\034=b\215,=W\336R\272Ab$\275\rr\374<\346\034\":3\242\365<>\363Z\275\216\030\000\2757\006?\275\232\260\034<\233\035\201\274\001\264\001=_\r\256\273\025q\253\273\361\nQ<;\316\237\274\263\337\027<\211\000N=MX\270\274\000\234:\2756\007/<Y\004\253\274\233\'S=\004\260:\275\375\214u\274\220\246\372<-BL=\236\024\017\275g-q\274\226\343B\273m\263#;\242\374\225\274\306\007\274;\3233\002=\327\177L;\264\230\262\273E\2434<\225\202\267\274\354)U\275\234G\3729h\235,\275\022]\371<\211W\374\274\365B\241<}\034,=\t\024\351<\204\262\237\273\304v+\275E1L=qV\371\274l%\033=\223\313\222<\3766\327\274g~M=\026\334\342<\326g\311<\317\257\014\275\207mI=\314\nH\274\353\243\266<\177\345\217<\244\rL=\270\004,\275\270\256\352<\351t#=\227R4\275!\210,\275g\003\214\274\'\203\035\273?UY=\035\347\352<\373=\376<\276\033\014\274\275\366`\274\234}\273<\031OD=\314SX\275\202;\'\275z\005Y\275\351\2720\275\3223^=\347+S<\327\201\232\274\245\276\021\275\337\235\277;\213]\263\273/\300\202\274v+e\273\375\272\314<r\345 =Y6\303<\375\201Y;t(}<\'\037m;\301\324\373<\274\350\007=\310\027\253<\320\3643=\256\225,\274\314\"\210\274\017\203f\274O\006k<\327|I=\322\266\"\275n0w\274\226\026\252<\\TE=\335\232 =.\205S<\374\326\306</\354\\=\t\367J=\325\350\345<#b>=\344\367L\275^-2=\364E\336\274\031v\277\274\361\2403=\025\221]=$\212\020=\324\252\035\275\222\225\\\274\223\313\'=\215\361`<\314\257\000=$\027\224\274\252\201\307<\333%\371;\356\177\010\275(X\373<j\342\273<\250\357J=\334\225\374<;&\361<\0339(=\r\264\022\275?\364\206<\230\277\213\272t\007O=\267M =\030u\253\274\257~\313\274r\320\034<\307:\351\273f\025%\275\245;\304;Y\366\347;\242\233\023\275\213n\243\273C\024\341\274\3749\030=\r\270\005=E5s;\251\265\017\273\337\360G\275\250+%\275\215\274\334\274$!W\275\224}G=`\034\"<\345|\215<\026K,\275:\347\277<\303jW<\373\276\003:\005s\276\273\234\325L\275\311\254 \274^g\021<\341\376\022\274\233\371\261\27438\305\273E\241\023\275M\360k9\367\304;=\340\313s\273\373\0343\275\340X\035={\2159\275\t*\2169\245\350\370<G\021J=r\030s\274\336\270\262<\2616\377\274|\234R=\004\235<\275U\321\004\274\356\263\n=\327\035\003=Z\0274\2753x@=\033\373\337;\366\0230\274\347\362S\275\247\370\014=\264\263\354<\030Q\006<\247(T=\211\266\235\274\344\232V;\324\363<\275\314\225\210;_&V\275\243JP=\250\331\004=\302\215><_O\334<l\256K<\343\267\354<,\261\330\273\235\001v\274O04\275><\356<D\355~<\032\323\033\274\225\234\200<Y\212\371\274\257?\n=x\3128\275\204\016=\274\255\263\214\274\250-\030=\360zP=\367\326\006\275\205\r~\274\336`\201\274s\246\n=:\254\t\275\304\0214<\324\230\374\274\007\215};\205\263(=m}\212<\247\237V=<U\246<)#\010\273\270}&\274#\376\244<I\360\327<U\210\r\275\014.\333\274\371\017?\275\361\203\000\275\305p\256\274\030\352\016\274\022,$\274\236\370\016\275!@S\275\223\225%=,Tr;\202\320*\275\215\021Y=a\030M<\375B0\275\300\022\203\274\261%\017\275\374\236\374<\311\243\004=\026\013u\274\024U+\275\346\253Z\275\365\2333\272\267cW\274\034G\275<\305\313\336:\264`V=8,\002\275\332\341\306<;\243\006=\013_\013=f@\242\273\000\262G\275\031\214\242<^-\317<\363\242i\274v4\006<\366M\021=\347\314V\275\275\010\317\2734+Z\275\017\005\255<\230\2713\274+a\004\275\227\340\'\274;\254\235;BJ\350\274~/$\275\027\217\217\273M\353\027\275\334\002p;\255\017&=\342\244\224\274\005\2721\275\224j\233:\200/X=\377\322)\274\306\314\037\275\304g#\275A\262+\275\347SR=\274\002\242\274\333y\250<\322\262H=?4}\272\257u\030<S\300\030<\202\241\204\273-\024\017\274\260\240\027\275\220\230_\274VJP=\014\244\203\274\302\366a\274\222\343\242\274X\356P=g\014\027\275\324\377O\275\034\357\366<]\203\232\274\321\346\023=@\253r\274\247\353\201<\260\330u\273\247\3405\275P\273\246<\032\343\316<^D\010\275\2142\333\274\333\017\302\274T\266\356<\020*\313\274\247\315\342\273\\\002\337\274\220\025Q=\275h&=\246j\210<\341z3\275\223YH=\332\010T\275\341\330r<\310&\230\274{X\001\274\317\014C=Lj\"=75\r=y\363W\275\302*h\274\312\270J=\200]\336;-\216;\274YRP\275\261\213\332\273\254\250\316\273B|\036=\225\361<\275aQ\013\275\260?\310\274\332\230A<\037`T\275\255\251\367\274\260\337\303\274\357l\026=\220\323a\2744\357;=\322\344\374\274\216\225\005=\2613\004=\252C\200\274\245-\262<\331\237\202\274\3232\371<\0105\215\274d\365\304;\373\341\272\274$\243\251\274z;\337<\346(\017\275\017\346\026=xi =\017K\310<\3276\237<\232vC\275\007\373\342\274G\023Q\275b\245\316\274\177\211\005\273dv(\274\245\005,=\371T8\275)\323\\=m\257\252\274\245\212\033\275\2546\305<A\321.\275\236\315\267<\000\030\252\274}\374(=\272\260\344\274\272\264\266\273+\227\375\274\303_\323;[U\025=W^(=:P\215\272\020\\F<\347\263D\275\301\310\337<1\004y<\36411\275\rsS=f\3674\274{\\/\275\372\333C\274<\033a<\340o\323\274n\253\212<\351\362E\275\201\376L<\311R\226\274\266\302\r\272\370T$\275\366\2419\275,\353\315\274\254\207\273<u\230X=\362!h\274f\361\225<\307\375\253\274\237xY;\027>N=-?\341;\366m\005:\245V\252<\257c0\275\260<\022\275\224\014O\275Y\255+\275\333h>=`\2064<K\030\327<\017\302\255<\256\230\026\275\000};\275\237\234m<\341\223\224\274\333\0012=\335\266&\275 \\\373\274o\321\022=B[]\275\237>\243\273#\332q<\312h/\2750\247\320<\213\036>\274\251~q\274\007\361\014;\206\243\324<\276\3432=\305\035K=\010\264\350<\273=?=\261[o:\272\371\022=\030]C\275r\"\"\275\205!\336<\365.*\275R\333\002=+\237%=\247W\216<\003\363\331:\006&\244\273\231\374e\274\232\242\033\275\335H\356<\013\353\t=\370\306@<qM\274\273D\213\035=\361d\270;\376\374\215\274\307 \211\273\033\325\2139\357;\315<y\030\204\274\005V\232\273\340[ =\272y\367<5\334\371\273\243\356\037\275VN\026=\201\372?\275\217\033/\274\307\221\010=ju\016<\364S*=\003\362\037=<\260c\274\375\"\016<\020\231\215<\010\014+\2748\276\325<}\026\213<\004Y\337<\014\324\325\273er9=\321&]=\307\215\233<\360\350x\274\310\225\235<\200\370O=\201\320\007\275\261AW\2759\005#=<\303\221\274\304j];\205?\307\274\313\340Q\274\024\222\272<4ob<\264\0023\275`\204\t=\002|L\274\337d&=\255\257\3418\n%\273\274\000j\014\275\341\323.\275B\362I;\264\350\014\275Z\322,\275K\032M\271\300:R\275\356\212\020<\333J\377<\325\217\302\274\262\024J\272f\336\326<N\207\320\274\220\233\343<\022w\243\274\222J\277\274\204\036\231\273\034\236\227\274\022\355\215\274\235F\t\275\016t\231\274\316@\017\275\360\"\311<\014\271\360<\013\265\001=\001\233\331\271\343F\220\274\263\247\006<\\IJ=5\2537=\264\177\000=\267\256)=\312\210[\274U!L\275\201p\037\275F\333R=\353zl\273KS\230\274S\222\270\274\313\340\334\274\3200\221<\'+\021\2755/\025=\305\310&\275\331\245\310;i\2402\275\022\246|\272\334\3171\275\315c\254<8\332\032\275\r~\252<p|\352<\0073\026\275^.D=j>(<5\213Z\275\032\303\332\273\253\224\251\274%Y\002<\275_\223\274-!j\271\3745\260\274\315`\227\274\321qE<\314\'\254<B\233\375<,BE=O$]=\322h\\\274\364j\322\274l\214\266\274\010\313\032=\253N\214<\26453=\035+\202\274\252d\037\275?\277\020\275U\244\203\274*\332\222:f\0365\275\242\035*\275\004\024\357<\330 \330:\312o\310<\352\333\310\274m\321;=\364s\004=s\344\010\275\336/\365<e\222\307<\ny\r\275\202W\007=\376\2414\275\302[4=\007\036j\274O\355;=&S\205<\000<\007\275\343\374T=\246sC\2754\370L\275I%\312\273K\234U\275\023\245&=J\203@\275\257\224\r=@\246W\275U\305\031=\031I\032\275\224\270\000\275\356\000)=\213\222\360\274\356\326\300\274\355\360\340\274\353,6=\241\001^\275\370\240\313<Y\225T\275\325~\007=I\\(\274\240\343\352<Lw\010\275\274\002\373\274w7\227<\250\2721<\346\031\330\274o\337]=^\367[;L\377}<\311\321\246\273\261\303\014\275\363\212\016=\255Y#\275\025]\262<\232\\\264\274\'\355\025\275\254K\201<\237\340\314\274\243\201Y\275i\305\306<\257\347:=\220\223\006\275\020\032\'=\3730!=\310\030\334\274W\371==\n\357\n\275.A\363\274w\027\243\274\0079J\275\2331I=:\031\r\275i\277N\273\262\212*=j\310\010\275\366\237_;%I\025<\212\347@\275eW\242\274\304\342\250;\3352\213<\245\273\000=\254l\312<WqX=\261\027\307\274#0\224;\262+U\275R\340\004<\360\270\023\275_\0253=\004K<<-\235)\275\230\337\347\274)mP\275m\3318\275\303\032P\275\352\206D\273\000\321\317<B\243\226:\347\0324\275\200\332\"=\220\315\007\274\"R\327\274v\024\365:[\276f< w#\274$\\\035=B\2411\275\272\3064\275\246?\253\274\303(Z=\234\3003=}\"\003\275\316\361\017=\236G\243<z\240\336<\002\325V\275Y\372\357<\231\t\010=\236\202\253<T\3749\275Cj\024\275v\256.=\2640\212\2741@_<t\253Y\275\253<\017=\262G\025\275\376\257-<\302K\026\275\375\"\200\274\213\251\000\275S8T<x\360\021:\022\256\360;{\243\033\275\177\272\366\274\275\241k<o\247M\275\234\366,\274o\362w\274\232M6\275\177t\010\275\177\"\317<\227l\364<*\221S\273H\364\013\275\314,I\275Y\005\267<9\367\264<\325i)=\345\335M\275z\211\033\275y\322\324<#\377\347\274\271\023\036\275\2440\263<\341\254\007\275\201\025-=\270h,=\033\230\337<\251\325H\275\217\216G\275\003\307\215<\225o\005=\243d\"\274\274\320\245<j\274Z\275@tA\275*d\001\275\254\027\022\274&\256\037\275V\350)\275\251,\276<\361\032\207\274\302\021\376<S\251(<w\262\\\275\344K\005\275\357\213P\275~\2770\275B\nD\273\3149\226\274a-X\275\274\031\030\275\205P\372\273q_\343\274\350P\004=cn>\274o},=\305:\004\275gQ\334<\266\207%\275\264\030X\275[\344;\275\301ZX=\007F\026\275\005\263\263<.\351\001\274\3450+<1/`<<\266\"=QO\377\274\n\311\264<\257\213\247\274\324\311\320\274FtX\275\375\0018=\345|9=\372o@=\237I\215\274\264T6\275\035\220\032=Z\322\302\272\223\002F\275r\306J\275\022g\025=,g\371\274\000c\35795\305V\275\345 v:\352\217;=X\t\210\274\022\364\002<\230\314\334<j\315^\274\366j\302\273\276<\226<\356\203?\275r\266\304\274>m\022=\024\234O=U\0269;\373#\361\274\007#\014\274\017{\300<\240\273 \274\233\220\324\273\033T\021\275\367\246\000\275I\014G=:\014q\274\0356\'\275WX?<\353\033F\275A66\275\177\\\277<9P@\275\324\003-\275\223\3055\275(\253]\273\033\326\204\274\035\230\0269\251\367A\273\274G\334\274\221`@\275q\310\245\273_\034\n\2750\221\264<\037\256\034\274\300o\001=\222\003\305<_\270\034\2757\372\210\274\341\010\000\2737\267\205\273\243\334#=\210(\035=\347\355W\275\020\324\255;\204\270\300\274\342C,=\255\374\322;\215S\222\2733&\363<!N\273<\031\031D\275\240\240\245\274_\325H\275yw<\275RP\333\274\255\376I;\334^,=\031:\014:\345=\321\273\275KF=\320i\t=+\351\337\274`\324\036=\317\200%=`\363\021\275j\371\"<\242K\254;\347\017\255\273ob\343\274\237\352\324\274\306\002\013=\217b\027=>\327\030\275s\334\227<\327\337@\274\342\002\224:\341R\311\274)\327\002\275\035(\323<\360\245\306<N\347\302;\336\306X<h$\236\274>\335\360\274\231\320\215\273\331K*\274>4-\275\004\243I\275-\220U=6J\t=A\230\312\274ld\217\274\261K\016\275N\340\266\273\344\352\312\274k\364\r\275\241^1\275\376\036]\274\227~(\274\257\366[\275\022\355\026=\212E\201<\0138\230\274N\004\203\274(\253\222;p\253\267\274_\200\352;\013\370\261\273\343:*\2752$;\274\231\340\307\274\'Vd\274d\004\035=\245\205-\275\2231M<\301y\223\274\254p\240\274o\353\227\274\234\3611=\271\327o\274\324\r\003\275\320C\246\274q\300>=,\215,<\275\023\364<#7!<\004\211L\275\234\264\362\274\377\221\207;\257\364\250\274\233\327Y\275\351\374\272<\251\000\307\274*\027-\275\023\001\225<e\337\026\274\243\243\014\275\313\027H\275\261\'#\275:=\323\274\247\014\200\274\364\220\351\274\235\247M=\010\326\372<\322\264p;[j\302\274\000H\334<E\017[\275!\203Q\275\272\357\003=\004\226\037\274:h\r\275\007\236\376;i\235I\275\344\305 =\222\233M=\206.\344\274\316\234\325\272\263|B\275\313[\263<\266\017;=\322+\226\274\025\360\271\274\227K!;\nv@\2756d=\275\333\003+\275\037\307\031=$\224\030=/\332K\2751\205\004;\323\331Q;\233\244%=1w\023\274H+\333\274_\202:=\322\260\230;\017\031L=\027j\034<\344M\320<\220\345Z=-<\001\275@\261\327\273\244\'\275<\271\272]\275\024\274H=\314K?= ^\232\274\377<5=\247\034F;eX\333\273\346\275l\274\177\232\232<\377\"==\340\303\236\274\312d\016=\276\210~\274\376\220\"\275*z\243\273\002\375\324\274!4\366<\327+\273<\341\266\244:\302\213S=\037\260\016\275~\254~<\036\344\231\274\232\246\214<\353KS\275\223?\303\273\036\235>\275\004!\326\274\2352\215\274\265s\325;\376\341\033<\357\023u<YI8\275\302\236*<\201\352M=\334\307\326\274\316\2616\275\016h\320<\017_e<\344\347L\275\324\300\353<u\227\033=\331\251\355\273\3065O=\025\347\373<\257H69\030\031\343<\344\300\244<\321zJ=\214^\264<\354\361\264\274\243\337\001<&\016\035=\323\347\033\275\203\330\030\275\016\3313=\233\177\373<\220\264\004=\254[\321<\306\306\226\274y}G\275G\242\341\274\205 \004\275\261\026\271</\214l<H\346\025\274X\242\366\274\257\315?=\311H@\275\031F\302\274\224\310\247\274veI\274\014X]=\257\341\020=\327\254B=\217\244O=^\034\030\275c\315@:\\\340\342<2\004\245<~@k;\227\377=;\237 \357\274_f\221\274\352x`9]rS<\034\273x\274\016\364Q\275kB\363\274\005\364\033=\225b\362<\231\241?=/P\241\274\377OV\275C_\301<\321Y4\275\253\242\'\275\257:U\275\215>\256<\213\357\255<\240\270<=\245\317\023=\254WQ=\214\031\000<U\3306=\325\344!\275y\030\337\274\031|\005=\036\201\037=\005\3301=\301\234\005=\306\262L=}Xw<\270N\250<\207|P\2724u\354<\305_\330\274\373\333\201\274\030\327&=\220\214A=\200[\314\274`\367\207;\224\r\351\273\300:\275<t\014\033<7\032z<\026\356u\273\220?\225\274<\271P<?B4\275\343\316\232<d_U\274\324\320K\274\220\233\235\274h\233w\273\n\305\032\275\322k6\275\361\332\014=}\317\003\275v\003/\275A\355\027\275\332\242.\275b\325<\275R5\001\275s\210\325\274\310\213\036=\332\3537\273;\354\311\274\331;;=i\342\020=\244\277v;\005\2740=\211\257?\275\240\375k\274\336\326\237\274\347\372><\271\026!\274\214$\024\275\332\363\035\274\276#\217<\236\273A\275\341\251\252<\003\323\037=\233\257B=\014tN=\014\275\250<a\317\322\274\240\346\276<\301\236&\275\217\'\303\273\253\3155=\262\343\245:\251\262\276\274e\025\000\275C\255R=\374,\345;C\027!\275\231;]=\256\310\234<\264\235\355\274\357\3531\275|~\303<\tA?=\234\275\225\274\260\\O=c\345b<k>@\274O9\025=8/\254\274k1B\275\323\235\003<4\206\034=\315\247\016\275\313~\"=-\357\332<\225\327\354\274\275\000]\273U\313\026=%\370S\275\222\250T;(\246\314:\332\372\230<\352iK=\202\242\323;>\345h<\304\214\272\272\210\000O=dO\017\275OBV\275\257\322\212\273\266\031\254<\302\023\322\272\020\243$\275q\253!\275\3103\311\273\201\236\314<\356\336-=L`\205\274\226\347B=AS#\275\265\307y:\324\247\306\274\004r\326\274\240\340T<0\007\200\274h\344x<\024p\016\275\301\2442=\217\206\253;\200\315\267<\231\320\"=\277_\013=\237g\302;\247\343)\275&T\244\273\224\216\245\274\377h\000<\243\002=\275\013BT=\230/\311\273g!*\275\337\2307=\236\033K=+\3076\273\270\177C\275\364\227\027\274&\220\220<\017|\332\274W6Y\275\313\276$=\203\252\310<\350\221\013=3\253\326<\360\335\256\274\226\'3\275\037\254\217\274TIh<\305LC\275\262\211\326\273\202\216\271\274\tX\035:\016B9=T\303\321\2741\331a\273\t\277!\275_\230]\2757\016\341\273\332sZ=[\232\235<\\Ye<\311\241\022=\032y|\271X\313\276\274\317}\371\273\254\334\335\274\303\230.\275Ve\r\2742\347?\275\377\177]=\004\232\310<\3157C\274\215\006\352\272@8\023\274\026\274~<(\300\035=\336h?\275\010J\337</m{\274\374\336\366\274zGU\275f\260N\275\025?\323\274\005\300/\275\\\002t\273/\3153\275Af\004=eW\375<\271\353.=\367J\225;\316\337-=\257\316\351\274\337\t\344<\304.\034\275\302\0144\275J\346#=\036\3114=\260J\212<\232\204\351\27305Z\275=WE\275\337\314\001\274\334\323g;\310\315\305\274\260\203\261<\250^]=\354.\031\273\221~\266\2745d\307\274L\234\310\274\322\241:=A}\260\274\016\230%=\277J\312\2749\212\341;\263\260\\\275\357\240\2339)^J<\375>\204\274Q+S=\377U\320<\360\312>\275\356\323G<)\324>\275\177(L=DX%\275.s\004=s[\361\273\246\272\364;\367s\246\273\310\336\231\274g\360\003\275\325\362I\2753\343\021\275\223\270/\274\004\024C=x&Y<\0064\013\275\003\214\330<~t\"\275\252\000\006=\275\025\234\274\267\362\'=\034\216b;\301\374H=\036B\236<9\361\222<\341H%\275)\365G=.i\013\274\036>\r<\371hZ\275g Q\274:r\360\273\032\272\007\275\257\375p\274}\341\347\274E\362\271\273\023\304D=\034\255u;\002u\275\274\357dN\274v)\245<\264<\001=D\207\306<l\214\016=\227\351\352<\002\2201=\304}4\275\275F#=4\030$<\273p\345<\005\335S=\020>S=\314\207\256\274\376)\363\274\341\363s;\036N,=\034\274|\274\232\247\023<\325\226P=\321\210`\273{2>=\211\027$\275s\212A\275e+\374\274\346\303\002\275\n\000U\275p\210\020\275\200\216\330;^\370\225<_\373p\274a\016\020\275\263\226\005\275G\267\300;\255\361;\275\027*\327<\373\232\020=f2\205\274GHW=E.\372\271\027\217$=\235\350%\273\235\030\222<\034\243M=\022\343\335<\256L\261<\263Q\256<VC\325<\277z[\2750\261\r<\233\341\020\275\234\360+=\3350\\\275\366\207\016=\022\rS\275\274\316T=\273\3716=G\302E\275\204\017\255\274s\0236\274\311\330B=F\324\014:\264\223\324\273\235\\\033\274(\314\021=\302\013\t:_O\024=\346d\373\274\371f\036=\377\007O\275rk>\2755\0223=Q\351c\274\303\324E\274\204\350\027;+F\032\275\265\243%\275\024\344\010=RC\325\274\371\225\t\275\320E\336<\351\257K\275\325a\337\272\002{\031\275Y\237\244\273T\346U\275\033\025X\275U\\F=\0057s<\221\301\026\274\247iR\275\314\275b\274\306\277Q\275\240\001\243;J\216C\275\022^S=\322\251u<\256\316~\274\217bT\275\224\3720\274\367g\022;\320 \027=\324\247\357<tY\003\273\243\301M=\260o,=\304l\253<\265U\"\275\361\346\337\274Y\3763==\273\277:\031\337\260\273$\034\315<\366\003.\275\305\333\251<UJ\216\272\242\n\331\274\221^A\2750\234.\275w\360\010\274\307\211,\275m\251\302;\317R6\273\261\031p<\3275R\275\323K\314<\231\024\261\273(\322o\274y\270I\275\203\240\033=8\371a<\274\3219=\264X\034\274Mp/\275\322\310\374\274%\2249\273\376\256\224\274:.3\274\371[\037=\377\212\\=yo9\273\217\264\225\272A\214\241\274\026\302Q\2759\247)\275\310\016\004\275\0227\227<\002\354\373<\367\017\217;\352\177==\235\313\242<\207\010Y=??\360;\215,\310;\255O\017=\226~G=\374\035\277<\244\310.\275\240 `<\t\236\016=\022\000\327<.\210\375;\265\242H<\276\256\007=\005\021\025=!+\313\274\306m\357<\017\305\232\274\222\220<\275\263\2361<\375\265v\274-S\320<\331a\007\275\226\272\021\275\006\354\236\274\225r%\275}5\365<>\201]:\t\037\030\275\206\217\301\274s\021\365\274(\n\270\273\236\3103\272\240\215\n=,\206w\273\376\2740<\262\021D\275\274\017h<\315t:\275\262\250\374\271J\345\362\273\326\370\262\272j\211g<\t\241\203<\365A\022=\317\305c<\212JZ\275[\020\003\275\325\353\032=\247W;<\000\301\356<\267\206\276\274\372\034\016=K\225\370\272o\376D=i9\243\274\321\227O\2749$M<k\271r<\037HB=Q\312\002\273\366\277\004\274I*X=T:2=j\375\006=\022\024\313\274\253\317\237<\300;\333;\250\204;=_-J\275\"\261\350\274\"{\005\274\324W\242\274\307\273\025=\013\312\335\274(C\006<t\266Y=\362vZ\275kc\026\274fp\353\274\006\200\335\274\310\3155<r\'\343\274f1,\275\314\330\323<\365\346\255\274\2127*=\235`\274\274O\3770\275\223\220\317<\032\260\372\274j\302\221;\272:\213<\344\301P<?\232\311<^kv;T\312C=\024\216J=\376\365\033=\361\332o<(\260N<\324v|\274\025\202\331<\362N\252\273\311\257\033<\204$\266<\353\013\005\275\234\3606=s-\226;\323\217V<\355\246I\275o\305\272:28\313<\373\333?=\251\341%\275\030\226\030\275K\232C\274[\ra\274vS\023\275\030\341\204<8\200\354<\224\026\230:^g\023\274}\275\024\275QSF;\310\236\334\274\233S\032\275&b\225\274%w\333\273\264\035U=\307E\353;\277\324/\273\311\036^<=\003\366\274=\036\224\274\300L\007=&\376%\275(|\347<\260\014\000=\272\343\221\274\010}[<Y\2679\275\361\273\367<\002\007\204<9g\032\275\222\354\233\274Mp\n<=\266\243\274\251\002h\274\253R8=\235\307\363<\320N_\274\330\363#\274\224\315\315\274\347\357&\275\3757\331;\344\220\006=,\367}\274\254\266\343\274\272\322\020\275z\300@=Y\233\200:\345I\034\274i\035\"=O\264\365\274s\354\'=``\214\272\242+\023\275\325\266\021<\327\3003=R\\\303<t\004\356<e\277\365<\335\032\321;i\236\250\274v\300[\274\320x\313<\307K!=\016\213\034\275A\263\367<\024\227\210\274\253\2111<)\245V\275\371\3427=5\374\207<0\227J=\013\205G\275@\207\005\275\245\207G\275\222\231E\274\314\375Z\275\205\324J=\024I\221\274|\241\\\274\300\356\020=}I\302< \263\234\273\301\245/\275\364\202N\275\233\t\326;!t\031=\313:]\275\235\016 :\343[;=\342\342\344<\367S\026\275\232;\334\274\323\234L\2735\'\225<d\026:\274\t%\250\274\210\217\030=\210L1\275P\027u<a\372\206\273\032\360\321\274\0267[\273\250<>\274\022F\330\274}\230\227\272r+\335\273V3\362\273?`S\275z\001\001=\r\200\036\275\022\010\\=\241\020]\275\022\010)=\300\247\241;E\377*=07\361<Y\014+=\214\261\360<\"\242\004\274=\226\345\274,\301\222<z\032\201<k?4\275\320\034\354\272\372\247\355<\361\250\372<\327oB\275\323!\211<\3457W\275\362c\007\2756@T=\212\034\032\275\2057;\275\262\205\022\275\250\342\001\275\246O_\274#\345\306\273\233x*\274 \034\370<>\n\205\274\335]\010\275\237\276\177\274b\265s;l.\007=\267\2779\275g\2764=0\301\302\274\347\237\017=\010[\313\272\025\370\212<\022\203H\275\306\365\334<Q\356\321<j\337\010\275\355\0162<Y\211\025\275\330n:\275\205p\t\275C\010\373\274\013IR\275\313\343;\275\232\214\034\275\373\217*<\223}5\275J\347;=\312\214\274\274\223/\007=d\265\032=H8\313<:~\226<zP\001=:\030\354<\250TP\274\017/\212\274\276\001\236<\220\210\207<\325\354\304<\356\364\247;\020\026\\\275a\331\363\274p\022H=~{!\275\265|\373;\352\243,=\375.7\275]\256P<c\3471\274GvV<\035\002C=|\022?<\302n#=\201\3470\275o\"]=\211\034\036\2757P\000\275;\036R=\027p\312<.\353\377<\307\3026=\\\244\237;\204\243\005=@(^=\333I\313<?\332Z\275\256\352,=tXF\274\225\242\032<7\307D=\342\240\377\274\274\324=\275\331J<<6\315\266<=\230\361\272L\274\004\275J\240\013\275\20301;%f\235<%\"E=\363\303Y=\335\010*=\276FK=k#W=\311\245\304\274\353\207-\273\372\336\177\274\201\340\336\274\331\017 \274\252J><\263\222\n\275$\030K=\204o\'=\231X/=\222\236>=\004JA<\3515\t<k\366o<1a\224<\214o9=\\\"\020=a\334\320\274\216\204>\275:a\n=\034\216\242<sdR\274y\233\330<\000~\346;\007\332\003=\355\303=\275\377\246\211\274\000\214\n\275\355pF\275v\030\254\274\371\035;\275\305\273\257:\023\343\272\273 ]\340<\331\'\003<\225\372\330;\t\020y\273\357\007\013\273#L\233<\004\204+\275\023c\246\272\375q\330<U\t\206\272\265\027\305<z\\+=\260.=\273\273u\024=\235I\241\273qcV\275\341\257\277\274\350\363\313\273_]\313\273mi\326\274?\021L=\316\363\016\275\256\343\221<\314m\030\275\006\2409\274\3222\251;\267\323\017\275\177\213\267\274\3067\000\275\351\216\013\275\260\221}<:=\"=o\344\250\274\217G\r=|<#\275Z\331;=\242&\220\2744f\\\275\261\246\226<[\276H=\371\316X<w\350\223\274\357\3556\274\210\2725\275\031N4=\322g2\275\024\036\016\275\327\237M\275\n\257\242\274\"S.<$\021)\275%\364\247<\350\363\017=\370\1774\275F\224O\275A`\\\275~\324\030=\214N;=TY\247\274\256.I=\374\340G\275\344\021!=\3640Q\274\002v3=\341\240E=\215\002\254\274G-\r=\005R\364;\255\'$\275\316\265\306\274\263\216\017\274\3739L=\244\031\033=^\264\t\275\352\262=\275\374\2518=U\212\313<\326\344G\275\314\302\323<\235fG\275?Bh;\032.\025=\226\314\220\274\212\333\'=f\344/=W\326\200\274\232|\364\274\025$m\274W\353=\275\022P\031\275!L-=\225\352*\275p\260\020=\004\277\326\274\316\\W\275\365\014\026\275\332L\033\275\370\340\001\2757\332\014;\312\3037=\317s\t\275\347\211\226\274\257\346W=\017\001{:\273\204=<(*\034\275\014t\207\274\014 \006\274&059[\215\250\274\332\3174<\007 \204<\326Y\005\275\325\267\334\273\0354\021\275\032\205\036\274\212\252\206<\2466i<<\357`\274\256\022J\275\277\266\017=X\023\264<m\273O=\212+^\275\265\313\346\274\323~K<X\233\311\274\325\262\264<\244\252\317<\367\3342<\364\372V\274py\024\275\246\013==\017\351E\275\357C\r:\272d:\275\315S\362\274\362o\262\274\034N\335:|!J=\337Fv<+\362\020=\274\371\013=%\034A<E\312\016=R\242\301:\363E$=\312f^;\375r\373\274\250\367\351;\364\224\265\2743\2047\274\006\203\225\274\377\371I;\342\270\t=8\206+=3n\346;\204\006\027=\370\352M=\340x\253<\"\263\270;\010D%\275\342_1=\263\227z9\246\236\270\274\330\225I=\253\337\250\271\234?]=\271\267\214<\224\213\027=\220\005U=\215J\014\275Vk\021=\377\356\365\272\324\243\217\274\375\260\251\274\030\345\367<B\005\342\272\364H\344<\365^@<\315\346\352<\203\367n<\346o\345<<\n\344;D\235\035\275M\r\201\273\274%\226\273\021<\335\273\321\357\322\274\365\225q<\236\020a<\262\263Y=\245\271]=i\213\302;\303\026\371\274t\320\262<(\221;=\365\227\371\274\370\037\251\274\013\275w<\003\211|<$\036T=Qy?\275\314f\242<\373^\253<\341\247$\2750A\024\274\330q\213<k\023\242\274\374*\034=\234\207/\275J\206P=\224\272\214\2741{\361;\231Yh\273\374\035\025=k\301\031\2759\2325=o\326&=\3515\305\274?\361A\275T\020d<\013 W=g0\374\273\271p\030\273\240\035\030\275\301C\023\275\273G =\307\355\302;LW\261;\337K\"=t\377X\275\n\254/\275\275\014\326<\033\215\017\275\2545\262<<\322\353\274\227\243\335<\355M\006\275\350uG\275m\272,;\222\313V=r\347C\275\365:\264\273\330\005!\275\253\n\t=\341\000(=\201\3560=\303\266(=nm\322\274(\2579=b\273v\274\224/\303<v\254X;\352k\237\273m5\003\2740X]=\357A9=\336\206\276\274\266\367\001\2743\2248=\312X\310<V\230\204\274\372D\336\274\3654Y<\356\367\202\274`8%=\345N\"=96\031=\204\016J;\255$\n;O~\272\274N\373\017\275\315\'\333\273\354-I\275t\301\274\274\n\320\303<ro)=6uL=\370g\356\274x\333\217\274Z\225\006=`.\266\274\235\275\315\274\327\333-=A\253\303\274\324\003\236\2740d\361<o\231\017\275}\350P\273Q\355\202\270\323\222\006\275\223I&=\006\224\311\274\300\"3=9\n\201\27489\243\274\275\355&\275\202\3415:\021i\360\273A\2069=\010\350\202\274#\270\025<\342*8\275\026\002\031<\177+z\274D\207%\275\337\337\007\275\353\206N;uw =\037\307P\275\3472\3208K\232\033=,?\t=\300p\366<Q\246\026=\356\313H=\370\017\246\274\2755\324\274\243\271\343\271l\002\016=\255\':=\262.\333\2744e\007<\206\304\001\273T?V\275\034\036\244\273\222\323G\275\217e\031=*\230\370\274\237\314\376<\342\037A=^\246?=[\363O=\355\312\224\274\271\030\335<\030\000\016=\213\032\340\274\301\210\265\274\341\230\273<fE\n=\215\"$\274R\242,\275\215\026\357<{\001\202\274\"\344\357\274\237\177\223\274ry\335\274\336\316\262\274\263\3722\275\'t#=\253\354w\272\017\272;\275\217\213\245\2742\356\254\274#\201\014=]\246\010=\245\342\317\274\027\243J<\266\373<=A\303\255<6\3017=\211M\r\275sB\237\274\035\372\031\274\014\2076\275z\321\207\274[uF\275\016\240\242<\335[\004<i\016\216<\271\037\t=E\300v\2749tZ\275\"u\202\274V!\333\274\t\307\006=A^\244\274s`\330<_]\036\275\220\3536\274\014!I\275X\007B<\022,\006\274\250\367G\275\230E\353;<\226I=8\2514=@\232a\274\226\022&\275\262+O=\212\365\265\274\217\205#\275\303\201C;\036v\261;\224u\213;z=\374\274K#\364\273\377lR\275>l(=M\321\034\275\034\231R\274\246\t%<e\262P=\233:3=93^\275p\375/<\356H\021\275\235\203\001=ts\200<\235#\313<\033\0240=e#\217\2714(V\275/\334\245<\206\255S=\021\212\277\274x\317\006=\233\225\360<\247\350\027=\025\361\t=\352w\353;\001k\262\274\036b\000=/\252\211\274\255\245\215\274\017:\374;\256!\341<u?N\275nF{<\317.R\275\'\205Y\274\261VC\275p\372*=\267\267\025\275I\224\227\274{m)\275\2451F=\030\217$=\237\354\031=\216\361,<\'2{\274t\036?\274\344.\334\274\2168\301\273\004\340\261;r\353\310\274\256,\212\274\037\212\240<\335\210?\274\002\304o\274\232\322I=\001\353!\275\036\025!\2751\n.\275\356\360\275\274v\2759<\206\341\037\275f\317\315<)\203\243\274D\274X=f\205\023=\034\"\300;~<Z=\330JL\275\"\216\201\2740\213F\275\360\037\312<\3639]<\367\177\021\275\235G\377<\314`\025=\\n\264\273\014\202(;Q\014F\275h\257+\273c\210\004\275\003\3164=x\006\372<\3511\014\273\345\234\013\274\365\210\326;\202\003\273<\027\350&\275\007\032\034\275y\013\343\272\026\034\314;\311\247(\275\332\250\232\273\252\3465=\341~\212\273+\354\203\273ZDw\274r\253\271<\363\026\250<\225\033\305\274\335\363\006\275\332K\010\275\025\337\032\275\237\310N\274C\030I\275\235\037\200\273.B\345\274\225\346\245<\007&\203\274\243\256\241\273O\240@<\013\257:\275\262\034L=\375}Y\275\363[\233\274X\321\353\274\211\360\343\274\262\246\356:/\271\331\274>\313$\275T(\206\273g\n\255\274\004\201\016\275$\276\035\275k\016\300<-$\177<\355\3241\275\321\261\375;W(\364\2749\302\306\273\371\253\031\275\3467\301<Ir7=J{.\275\377k\207\273`\376\256\274>P\007<\004_\325\274.C\036\275|\300\r\274\353\332\n\275\000 \306\274\034\216!=]=U=\n\234\355<\n\355C=H\2359\275)\014X=\351+L\275\336\266\230\274\216\304L=\252\375\276\274\031\003#\274\316\375\311\274\005\006?=\331\357-\274]\323A\274,\345`\274\021\307S:\232\205\r\275\301\017\262\273(\323\223<\205m.<\377]\206\273\246=]=\222\223\325<}\033\200\274\030\362\034=O\3443\274\277\262\017\275\323mP<\'\350M\275)\301\024=Q\266\307\274\315\241?\275p\330\217\274*\326H\275\254z\023\275s\224\001=\271\342F=\013O\224<\211{==\206\207\025\275\234v\357;\224B\342\274&e\342<.\224\003=\226:8=\004\216\213\273\244\3034=\327\032T=$\332A\275vOY=\243)\206;\021\210\020<\'\276\266;\264*,\275\016\340\026=\211F <`v*\273\371\010\337\2748\307:=W\nA\274\272\005\002=Y\341\323;B\320\301\272\250\241T\275\2464\260\274\337\001\335\274<P\177;A-\371\274\277;\320\274\311\377\342\274\001O\360\274\373\022\374<\262\n\337\274<\323\035;\204\2551=\031\333\277<tb\\\275\023\206\302\274xo\034\275\3213/<\266\355\002\275\037\302+\275L\311\034<#\276\350\274\376\021b;T\'@=\273\246Y\274=a\017\275\333~<=p\370-=,\256!\275\2272\016;U}\220\274>`\265<\201\010\036\275\253\356\016\275\275\340\345\274\2409M\274\013\207h<\t\375\003<5FC<\2354\215<w\304\260<\202\221;=;(@\275\377\021\353;\373Dc\273e\027\203\274\251\262?\275\336Q\307\274\316\370\314\274\376\344\037\273a4\310\274\201\327$\275h\330x<\234}J\275\262c\246\273!\346<<xe\t\274\337L\310<\241V\317<\371?\232\274\202\212\340<\227\3720=\034\020A<\372\013$\275e\340\347\2742\207\334<\357~\340\274\206\306\362\274yO\372\274\373\331\363\274\353aI=\247\372R\275\243B\354<>hG\275\321[[\275\225\357\201<\277\034\017=\344\331(\275\211\226B\275\365\311\224\274\204\257\356<\270\236 \274\010\213E=g\013\024\275\346x\246\274\235\363\337<lb\363\274j3\272\274\272\246\203\273v!{<\321\352\243;5pK\275\317\201<\275\362aL=\261\016\270<\353\025/\275\330\320\034<#O\203<\363\373\013=\364%2\275\354mx\273\346\217\223<\3204\016\275\204\262/\275&\310\344;d\201\310:\367\033)=\324M\344;\256\376<=\352`\005=\204\031R=\242\215\001=\3363 =\261\003\313\273BIE<\351B:=\035\364\226<d}(\274p\275\024=O,\252<=-\324\274f/\023\275g\303\237<\313W\320<Jw[\275\210\305\240<\324\2269\275\312)\017\275\367\006i\274\242\245;\275\235\367\256\274^\024\\\275\034\273<\275\345\274\"\275\r\332\"=\216\376#\275\302)\256;\270nQ<\340g7=B\371D=\256\010W\275\23193\275\023(\016=\352\337\021=\021iH\275\370\335\005=%\226\010\275lE:=\2319\023=\331\034\341;\207X\321<\006\353\211<)\352B\275De\352\273*\'Y\275\021y=\274VN\216\274U\026\304<\027\372\001=7\034V\275t\0043\275\'RC=\302)\275</K\255\272X\032\016<o+[\275\255F\230<\026\261\002\275\203)P\273\301j\222\273\364l\007=\257\217\276<\nr\016\275\203\006\026\275\277\263\317<\265\276\036<h<\035\275p4\265\274\260z\365<;\345\215\273\203W\276\274N\274\003\273\t\033G=\240\266#=_(\t<\304\244\325;A\262\334\273\370R\006=[\214\034\275\333\317Q=\225\371\021\274\3434\000\275\330X\001\275#}\001=\320W\260\274~\210\024\274\213m9\274iZW\275l\003+<\342S\233\274\007\t\020=P\031\327<E\323\310<\342\236\000=\t\202\023=\024\021\r\275\264\3706\275\357\273\241\274\205\302\267\272\nb\377<\363\376\\=\364\213!=\215WE=\266\245-=K\362\312\274e%3\274\246K\377<\217|\266<\206>\325<\026\275\300\273Zq\212<#\276\0249\207\276\342<\247\375\016=\346\215\233<\372,\031=\232\304\263<\227\271\365<\237c0\275\361\374:=\216\275\352<F\0237=`\036\266;\216\350\324\274GI[\275\226\200\230\274\220\201K=(g\360<\030\244P=\030\330\361<Jo\026\274<\247O\275\215y\256<\236]\220\273\311\200\033\275\225\353\006\275\262\366_<\270\003\310<\306\374\322<\242\210\021==\213\314<\035d\036=\000\341\202<\344\254\365\274%\213D=\233\351\206<\362br\274\350\374\275;\353\220\327<\206A\023=\337\3460\275^\217Y\275C\033\n=\343PG\275ii\031;\372\214h<\230\224\277\274n\272\303<`Jl<\2732Y\275\347\230\017\275\2133\004\275/\304H\273\213\320\330<\245`\215\274\3349)=<\300\026\275\260\323\373\273\271\321\302;H\364\002\272\253\362M=;\263\031\275H\215|<15\024=\224F7\273\304-$=e\331%=\322\310?=\261\350\277\274q\3471\275{TE\275\215/\264\274\264\210\331<\031\246\013;M\373$\275\026\241R=t\206:;\376?\013\275\355\001\261\273/\013\036\275H$\207<\336\374\010\274[\305O\275\302#\246<\002\213R\275\316*2=_\326e\274d\337f\273\211\000I\274\270\377\274\274\322\3678\275\234\005\002\275IxO<\031\341\352<\341\322\202\2725\264\276\274\261\356\255\274\300Y!=\273*\034\275Z\245\034\274\372;\333\274\000\222\324;H9\276\274\230\247\350<\2723\347\274}@\344<\205,\024\272\003a\311\273\003\252\336\2749y\336<\314\027L;\343L\246\274\367\373\021=\361\257\237<@\217\035\275\353\027I<\024Y1\275\004mL\273\354\010B\275\000W\005\275\336\230^<Fe\023\275\273\371\013\275\244\210\357<\336\325\026\275\254\202\214\274H\362\376\274\2655\005<\330.]=\320\354\'=&\"V\275\374\326\316\274<N\304<`\245#\273X\031\262<4\244\031\274C\206\363:\255\244\013<f:\223<\251\341P\2759\371\262<\254)P\2751\r\n<=\364\037\274\3036A\275\307\020\241<.\272\321<\347\351 \275H\',\274\211\340\270\274\333\274P=F\274\245<xz\001=\201\201\010\275\252\266\204<\3125\267;!>~\274\210_U=g\304\316\274/\366\237\274\2407\241<\251\356\223;e\312\271\274\364\273\347\274\272\037:\274\306\344T=!l>\275\3523E\273\025V2<N\211\336\274Q\210\t=\2104<=A\310\333\274\322\270\022\274\315\212K\275I\343\036=\354\371T<\267\347;=ln\034=\335\351>\275\361F:=\234OC\274\0105\312\272W\024\305<Y\270\212\273\347\232\252\274\037\267\331\274\344\305\002<X\017\3769\247\033B=:\246\373\273\371\233T\275\245\274E\275\363m\202;\304\337 =?Q\270\274\334\230\020\275w\376X\275+U\265<G\272\313\274\312\230T\274(\225\233<~\274C\274\1772\022=\235\224-=\206U\312\274\033\202\237<\343\203\335\274\232S\001\275W\257\020=\326C\377\273\227\353$=\220\006\034\275^\317\007\274\023z\266\273r\221c;\347.\234;\032%\264\274\374\025\244\274\231M\021=\254\315\253\273\236\203_<2U\363\274\257\256{\274So\020\275\266\332\276\274-\307\016\275{\006-<\257<\201;\031*\036\275jo#=\224\254\272\274h\223\200<\223~t<\317\252;\275\214N\350<\010\334\033=\303M\010=\223\332F:\230\322\026<W>\274\274\300(\007\272!\033\261\272\300\256\t=-\205S=\260\017\317\274\273:\036\275_\247\276<\213\216\014=\313k*<\014;\336\273\256W%=\262\334\226\273L\273\233;\303\304\2049D\rV<(^2<3O\212<X\207U\274k9\264\274isW=r\036$=R@\221\274\270\371D<L\307\034\275>\364\024<\36011\275\206J\026=\265\364\372<\214\376\261<\266=\335<\00010\275\t\335\273;fb+\273u\344\t\274\317\271\006\275J\355\347\274\274\005\271\274O\326[\275\223@9\275\\\2266=\312\t\324\274\344\030\222\2743:\251\274m\200!\275\356\270\002=8\314\223\274K\"1\275X\345]=\322\212\371\274\203&\225\274\2255\212\274\206_3<\227\235C\275\254\232r<\352~T=\351\022\003=mx\274\272%.G=q\350P=\325\026\275<\256\376O\275\200\030\233\274\351)\256\274\321S,=*\274\034\2758X\237<\241@5=\223\203C=\325\001/\275\003S\346\274\207\374\016<C\366\031= Y\365\274\357F\256<<\317\345\274ESL\275\332\305n\274\017\232)=\315xZ=ur\366\273\302D\247\274\302\222\017=\327\236\354<\211\356\302\273\264t$\275\253\342\342\274\337\262(\275\n\323\267\274\365\337H\275\274\363\217;\263\027\342\274OyF<\0169)=\024Q\242<\005+T<\233\000\021\275Ec`\273\305\3326\275W\0211=\005\307\246<u\236\361\274{\322%\274c[ \274$\334\"\275\254\375\217<X\251A=\205\221 = \203M=lm\360\274\223\354>=\236\214\303\274o=\017\275\274\267\213<\225q?\275\277\246H=@\321\214<\314\014\222<\331\000U=No\251\274rI\006=\352\312!=\263\342-\275\n\202H\273\240U\321<O\266\333<a\025\325<\373\350\224<\217#\250<A\354W\275D\203\266\274.Z\033\274LU&=\007\274\364\274\346/\337\273/e\310\274\260\013\373\274\220+\001\274\354\311+=\330?\253\274\327\264\212<\032\000\345<zp\257\273o\325P\275x\2571\275\0164\351\274\222\355\320;_\"\033=\314\241\031=9\177\027=\317\340\n=\024\277T\275\247\244\255<\n\365\341\274\370\212\224\274[\0244=\004=\035=\210\200\'\275\021\235\377<E\233?\275\250.\035\275\363a\227\273\006\252\007=C\t\006=\375\324H=\010\344N=l[%=\377\215h<\246#+\275\210\302\341\274\'\030\254<\352Jt:\277l&=\220\017\203\274\235\322^\274K\262S=\224]H\275I\3429<\347\320w\274\266\353:\275\247\377R=\224Z\'\275\r\207R;\001!\271<t\240w\273\321R\214<\260gH\275\316\232\202\273*\355\266<\n&\036=\302\026+=\"\231\351<~Ai<&\365\326<\375G/\274\243)\300\274\214`\'\275\233\240\005<XlU=5\000J\275\033\232C\275\000j\t=\332\343\347;A>H=\231_\203<\rj\360\274l!\336\274\224\324J\275\320\210~\274\311vA\275$\221\267<\242\266\311\274=\223S=\250\177\260<\rf=\275s\'\036\275\014CV<uOx\274T\333J;\377\351E\275 \322\323\273?\341\007\275^\027\277<)\307\213\274k\2341\275\th\305\274\316\335\260;.\226\n\275\373\273\314\274\333\377q\272IMZ=\304\306=;\026DV<\210\004\010\275W|\212;\3377\232<(\017\033\274\211Z\362<,o\206<\224\203\231\274\330\n\032=\366\310\316\273\210\013\244\274\344\247%<\314K>=\223?\240<\r\204J\271\3355\331\272@RP=]\016\354\274\306\024V\274\310p\014\275xg[\275\314\311\310<\227\266\373\274\211\340\027=\"\315\024\275b.+=\n\336\343\274\200P\223\274GZ&=\376=\236\273XV_\274\003.E\275\261\343\r\275]!\016\275\245hN<2UT=\030w[\275\333%>\275W\305!=\243\211\343<\215\006$\272*r$\275\'\255>=\261\374\336<\025m4=\261SO=\257\351y\274~[\316<\233\006O=\242\257\000<*JR\275\313!+\275l\367l<\244\260\016\2754\205\037\274b{\002=NN\037\275\220\325f\274E\217\037\275\367M\027\275|\021d<\037?%\272\214$\325<\224s\234\274\315\270f<\371\221Y=\317\3425<K0\017=7\326\002=\231P\371;\326\260\227\27423\270<\016f\r=t\273\247\274\344\033\325\274`$\000=\216\213\340\274R\277S=s\234R\275\255\351\t=\330\223\025\275\361mW\275G\027\370\274\312qF\275Er\023=F\031\031\274\222\375\256\274&\313X\275\246\214N\274\206\367\313<\022\202\247\274j\r\263\274?\252\333<_\370\213\274\214\251K<\234\006\024=*c^;2\364\334<\311\322 <\0045\337\274\370\343\016<\227\271\266<y\361\320\273\364H\302;\237fK\275uL\275\273\257\030=\2752\0230\275w\363)\275\245\330\337\273B7\376;\035H\024<ZyN\275\311x\255;#!\243\274\210\315\216\274\324`\313;\277[\r<\r\023\'\275\346\224\372;\260l\250<\254\267\005=_\215\033=\277?)\275\275\357\210<K8\010\275\307<\255<M\006T\275\272\nf<\301\261<\275\301\260\\=w+\271\274\223\016\207\274J\325\000\2757\335\"\275\322W\n\273\"\014\017=\t\350\\\274\3376M=\365\n\003\275\356\0006\275\033v\025<\346}>\275\217>\007\274b\324\t=\022\016\004\274.\n(\275W\361/<\355\031^\2747\332\314\274|^B=ID\037=]E\262<\027AL=\030m\240\274\332\333W\274\266\326Z=\265V[=\241\302\263;\004\376\226\274\372h\003\275\367@\350<\236\233\032<\2305\177<\330\344\232\274\364Gy<h\263\226<\345i\323<\352\035,\2747p\353\274dd\237<\367M@:u\035Y\275\250\223f;\237\220\312\274\210l\n\275\331<\201\274nU\263<\013&N\275\313\264\252<-EV=*\236\017=\374\305[\274\235\203\225\273riG\275_SJ<\t\2549\275~\244\244<\330\021\"\274\033\356\023\275\021\3229\274\n\323Y\275\366\267\200\274\377\334\323\273_\246\"\275/\n\216\273\250\372\231<\302\335\206\274e\300\t\275;5\036\275\nF\375<\341\244\021\274\375\023\336\274\013\242\313<\236X\371\274\263Q\353\273X:\317<\237\343\245<\270\334\032\275\250\203\257<\3079\210<Gs\362\274\262\033F\275g\027\255<\031\203\006\274II\202\272T\021\275<\230P3\275\327\327\375<\301B6\275\t\211\363<\372\317V=\340@V\274\277\304\216;\363\0062\275_\366q\274\032}N=l\252*;\247\245\001\275\033\355\003\273\034\376\316\274\177(l\274\357\270==yo%\275\341C%;\036?\014=\332?\022\274\235\266(\275\373y[;\201\\\262<\307\032\251\274\014\0213<\215*$=q\330\371\274\357\332\030=\350kc<\370H\373<\300\236\276\273\026\306\222\273c\014V=\323Q\322\274\'W\032\275wF?<j\246E=p_Q<\263i\034\274\007v\351\274V\320D\275\334\267\246<w`\263\274\333\024=\275Y\036\257\274\237\220{<\360b\335\274\306\214p<~\262D\275o\377g\271\311\263\254\274`\242\241<9\273\237\274\267\224+\274\304\005\311\272(\204\337\274\373\261W=\270\337L=\260\212Y\274\023\247D=\003\260\022=E\267\267<\224\022\220;MMT=\033\314\324\274\276;Q\275\2244P\275\344\205\367<}B\273\274\316\273:\2751\372\347;\276\317\001=~7\257\273\320\266\362\273\341r&\275\033T)\274\341&T;\357\236N=C\303[=\234\332[=\210\n\"\275w\022A\274\211\r\275<\264K7\275\361\207\r;|l@<\241\326\241<H\254B\275?+7\275\t\242\030\274v\234\315\274\302\345\342;h\262\203\272\032\324\240\274|&Z\275^\2237\275\274\005\375\274\234\tO=\213\030\021\275\202\212\224\274KG\324\2747\203Y\275\216\247\355;\372@\225\274\347\235\270\274\207yJ=\314;#=\346!9=\350{\360\274\374\211\251;\215\002\341\273n\016\302;\203\321\014\275\213I<;\331\325\267\274\307\\\376<X<\255<\315\007-<L\234-\275\016\314=\275:c\010\273\307p,=\317\232\256;\335\314\276<~\2075\275\002_?=\241\313\226<\303\276\007=\211Q\000=\177~\250<\217_\261<t%\342<\036Y\366\274\200\201m\274d\344\010<\277d\222\274\255m\035=\031N\221<\363\207\t=\371 \306\274\177\270\304;\371\014\235;c\216\021\274\236\320\022=\002\251/=\313\355!;\0162\255:\330\033J=\322zp<o\360L=\301?I=\255\352\341\274\20655=y\031H=\270)3=S\013k:\3642\024\275z\317D<\240\022\371<\010\334\254;y\2369=PV \275\202\037\035<O\244X=on-\2752\364\355;wJ\241\273M\310\331;\331\004\026;\313\250&\275v\033\n=\"\307\224\274\261\263\224;\300H\367<\347\315X\274R\006\251;@\032\310\274S\214I\275z*J<\177(\324\274sH\337\272W\003(:\034\234\344<\020bD\273\010\303w;A\345\217<\312/\237\273f\265\357\274%\302R\275\241F\331<\002b$=\2051\320\274\237\317F=\327\0017=\002\006\340;\317D:\275\201\253A=\220|C\275e3\020\275\002?A=\335\340Q=\252\3569=\331p?=\275\033\203<\224\025\356\274\201`\030\275O\231Q\275)B\221\274>\254\246\272e\345\354<9B\376\274\304\363\251<\336\t(\275\253\332\245<\373/\204<\261\352\031\275\267\244)<\n\2055=O\n1\273\000h\033<\277\2250\275\360\360\260\274\3428\225\274\225\353\310\273\342{|<\337=X=\302\026\202<*\304)\275\014\023\373\274\177\211!;\014+\022=\2318Z<\001\033:\275\257\230\002\275C\356\315\274\256s\017=%\323\020\275\323]\221\273\373\303P\275\373\347\353<_g\004<Op\027\275\277\232 \275m\273\n=\256\207\377;\275\030\372\273\220\373\024=\274\0311=u\346\272\274\033\276\236\274\354\237\254<(\202\275<\270\224,\275,\003^=_L\332<\342`;=0j\313\274\302\346\355;\344\336J\275\245\342\271<J\217\211\274\361\313\321\274H\352\241\274\260M,=\227\327\270\274\016\257\300<\3576\006\275S3\237\274x\017y<U\023$=Y\240\023=\301\031#\2758\317\316<{4\377<!{\245\2736\'\"<#\241-\275\360[\212\273R\202\226<!t\r\275_L/=\212D\217<\026\2666=\250s7\274F~G\274\255o,\274\001\023\366\274| /<\242\232\307<\330ra\274\033\227\031\275\222\242}\274\351\r\334<\237\357.\275Da5\274\236U\224<\311\206,\275\245\376G=\230\005\257<\002\372\036\275\377L\233:\2653\227<!&M\275\217\255\324<\003\375\035\275\005y\023\274o}?<\016\231\325<\332\352n\274t\257\241\274\306\220.<>t\317<Y\251\217\2721\233C\275Y\217\004=\220d7\275\301\031\214\274]i\016=o\033\005=U\005\323\273\263\232\346\274\024\004\177\274\277\036\261<\2542F\275\021\314&=\302o\004\274\227\031J\275\353\254U\275\272\017\202\274f\006>=j\347E<\241\315\334<9;9=T\347\216\274\025\316P\275\257\200\323<\361gV=\275<S=\266\312\n\275v\332W=\236\303\322<*M\t=\221\302\t\275n\353\016<\335o;=\016\317=;\026\200C\275\242\245\255\274\026E\264\272\266\373\021= \340\320\274\334\317\304\274\252L\210<p\316Z=/\356\001=\237{1<\002\300\357<\004\n0\274\356\327\210;\361&\366\274\357{\313\273\305d*\275~\243I\275\263\336\316\273\275\021\351<rb\214\272\213]\353\274\311\206d\273\335\333\235\274C\233%\275\221\230:=\027\263Q<\361&^=\330\235\236\2749\372\005\2743:\021=\010Gs\274\027\020];\316\341C=\312\014\004\275r0+\275\336\237Y=N\373Q=\221\307\023\2751\276g\274\327\263\007=\325\230\326<:\300\211\274\037\276>\274\300\270\t\275P\230(\2755E\376\274#\036g\274|\271\242<>\325\372<j\320\026\274d\314\332<9.\026\275\327w/\2753\312\331\2744\006\221\274\345\240\036<q1\224\274\215\243\263<\277\252\035\273\215i^<\365 \033=\220\352\027=\373\235Q\275\252\317\331\274\016\333\227\274\325\227\016=j\003\253<\2679-\275Rr\275<`aC\273h\230O=\027\213D=\344vP\274\304X\377\274\377X\300;\376b\216<\375S\334\274S\001\031\275\276\346\001=\356d \275$\3661=\311\233\231\274\347\314e\273\234\236D\275\007k\345<1\221\024=\347.\004\275q\216\330;\323\350D\275\324c\331<\222\337\311<{\267\"\275GY\026<\361\326\010\275i\367\357<\315f\034\275$\217\364;U\211K=~y\221\274\023\t4\275\311\276\203<\227\254\251\273;\255Q<\340\177\217\274\177N\234;\265\215\277<\231\345\275\273\023\3265\275H\220\034=u^\034\275G\342H\275&y\032\275\375-\226\274\304\301B\275:\244X=i\370I\2750\225M\275\211\237x<\025\225\034=)\364\331<\233\177\376\274\032[q<\235|R=\222\0135\274\207\366\333<\206\241]:R\346P\275\233r\023=\216\017\342\274\274&\341\274y\036U=\250\373\027\275\323\307%<*\224\017;\202\356\006\275K\3075\275\332\337\302\274\255\311\332\274\365\370\360<\374\271n<t?\307<\016W\037<f\357N\275\260+\336:\372\326I\275@1\343\274\325FV=\231\333L\275arX\275]\235M\275\333\377\222\274&\317F=\214+\031\275\365\220\275\274\005\"\364<\034\017\222<^\374\247<\340`#=\200\023D=`\236\334\274\203\224\216<\034\0028\275Mv\243<\353E9\275\250(\000\275\255\354#\274S(\027=#\242\\;\n\346\256;w\201&\275\334\212Y=\211t\353\274\014\356*\273\3044Y\275\026m\333\274\337%o\274\245\273L=~\354%=\377`\235<\264\032\240\274ou\365<\035\360\017\275\303\204T=\327\3107=\261\031=\275C\310\240<]\245\355<\2429&\275~%C\275\025\326\330<\242\320\375\274\2722\355\273\251\3041\275-\255@=\313\256\375\274\325\031&=\033\316x;\264\010[=\002iL=j\202\262\274\227\231\025=c\332\021\275\230;\201<\262\020\t\274\364m\244\274^*\333\274\177\322]\275\257\361\204\274\331@M=sg\270:!\351;\274\340[\341\274\307\355\'=\206`\334;x\224\201\274\220~\266\274\264\374\272\273m\270\r=\316=L\273KC\246\274\\\245\033\275d\263\\=*\034J\275\325F\277<\352\'\026\275A\361\365\274\331;==G\256\342\274\221$\"\275\325\261\276\274\352\371D\274+7\007\274\313{4\275\306\362L\275m\374\306<]Z\203<\320\202*=F\023\206<\320<\023\273\222\025\247;\331\221F\275\321\372\243\273\216\231&\274\366\301\030\275\267\'\021=\373\313\375:f\237\244\273\362R\346;\302|1\274\277S\351\274\266\024\231\274\334Y\326<\200\006\034=\037h\006\275\261c\274<\307\306z\273\335\362\007\275{`\251\273\325\353@\275\033m\n=\211\024\245<3\022u<\305\326?\274\241E\026=\251\226j;k\373J=\340F\024\275\276\001*<\024.\026\275\225R=<+\301D=@t\"\274\341v\203;q\325\307\2745\207\030<B\031G\274\300l\0147\231\025\241<\310\201\206;\260\266<=\270P\030<+\225\361;s\000\224\274\246\262!\275\365\227>\275\255\306\302\274A&\370\274\002\025\003=\026\320Q\275\376`Z\275\215)\035;\035!\022=D\3647\274s\033u<\254\375\033=\270|\027\274\213\032\\=\325=\300\273$)\t:$;\302\274\375\3118\275\255\226\204\274\201\356?\275or\270\274\021\277 \274\240\324\022\275\262\032P=lNO<-/$\275\233h\200;\037\375\332\274\320\2707\275\370%\306<Er\210<ls\\=\267\004U\275ov?=\355\3320=\303\206\332<\302\214\007\2757\313\256\274\210\362\242<\242\355\203<\312\310\225<\025\217\316\274U\315I\275i\224A\275\374y\222;\226*Z;\024\330\310\274\331\231j\272\267\243\213<\242\311-\275P*\200\274Y\3224\275\357\324\000\275\245L\356\272\310ZE\274i\237>=F\016l\273\367\010\350\274f\r\r=\3448\310\274R-\262\274\343\322/\275\247x\311<k\354\022=\252\333\355<\21305\275UT8<\311\3531=/\367\034\275K\371\r=\002yZ<\206\343\335<\007\243\030=\257\375\234<\342\332\263\272\355\340\200<r\204\230\2730\243\010=r_\356<E{U\275\330K \274n\346]=\371x|\272\202y\246<\307\221\361\274\265\361A\273\006\357#\274\375\3738<\\VF=\202\253\221\274\202\314\212;\216\rW=K\032)<q\037%=\224\225T\273\373(\274<\306C\026=(\322>=d2V\275\374;8=\212\345<\275\271x\236\273\333\342?=\201!>\275\254<>\275\027\305\365\274\226\264\022\275\335y@=\001>)=s\rH\274\336\205\020\275\276\337E\275\332K%<\276.\270;\226\257\314:\337\033U\274(\247\031=WA\343;\202\270\014\275\210\216\370\274\023^\364\274\276\327\354\274:\310Q=\n\245X=\377\353\242<\325\261\241<L\366\274\274 \372\t\275\227\226\\\274\375Y\231\274^\243W\275\200\254G=\261Q\033=5\261Q;\255\030 \275\253\004?=:b\302\274\204\nz\274\365ER=\306h\302\274+\377\363<&\367\255\272\"\314E\275\322\021F\275;F\340\274\334[@=7\026\271<\036*^=\324\235\271\274\026\356@=_k5\275\347\316\305\274\207\233B=r\223\357\274C\021\204<\313D~96\314^\274|\256m<4\225\376\274\326\361\2549pE[=\351WI=G\013\031\275\201a\"<\327\276V<&v\243\274h\001\275\274\242n\261\274\241\2415\273\373\036\016=C?\345\274\002\205w\274PA\013=\340\3262=\346\n\365<2\247\0048\332n[=\333\241)\275?O\343\274\375\3729\275\270\262\032\274\345\027\361<\324\025]\275\322\224\002=\251e \274\350\250\220\274\312\230?\274\346-\320\273]\224;\275t\224\341\274\020QP;\243\014?=_\251==\270l\002\274{M$=\014\223T=xE\031\275\023\312,\275|w\022<\217\335\266\274\206]\005\275\334-\355<\262\251J<\003\023\257<\355+\363<\256\364M=\335\376O=\305\316\030\275W\307N\275\217@\303;\304\237\376<4\031[=\211\271\251\274\002\307\000=\246\241O<6\317C=\001T\347\273^\353\300<\333\3067<\204b:=\313\266E\275\345\243\266<f\212\335\273&\332+<\3274\332\273\323C\260;v\260\\=\343t\372;\332L\201;\257;W\275v\215#\2732t\221<\036,[=7\304M\274yFZ\275\025\306\302\273[\023\236\273\243\351+\275\307\231\371<\271K/=f\034\276\271B\210\206<\033\277\013\275\005U\237;Wl\036\274\252UZ<\246\\4;\034\017\356\274\236\250\033=\021O\300<\300\275\030=\235,z<\221\253Y\273\027\220\206<\2623)\275\252\317\232\274\000\016\031\275d\363!=\217\267L\275\344\236\020=s\3427\274\004\365\020\274)\036><\314\2159\274\243D<=\260%\004\275F\205\021\275\002\206\327\273D\343\035\274\311/\305<\333A\311<\375@<\273?4\277\274\244\304\324\272l\202\016\273q\301\002\275}kg;\265%j\274\200\234\301<\264\270t<\362\264\n=bI\356\2740q\000=\303S\255\2734\316\t\275\365\361\031\275F\211O\275\207DZ=\022{\202<J\027L=#_Z\275\033\242\026\275\020\013S\273tO\301<_\330\027<\\b#=u\352@\275CR\235\272\007T\362\274\236\035\034=\267\256\211\274\236\010\024=)x#=\255\265$\275\370\3001=$}O\274\353Y\312<y\025/\275\300\333\242\2740\031\220\273\021N\031\273\221H\334< \266J\274\243\007\"\275\013?K=:\304\204\273\300k\022<\"\337\210<\034 8\275u\211\266\274M\302\350<\303\337\204<\177\366f\274\033FB\275V\333Z\275\334\334\267\274pG,\275\373\3130=y\256\214<\324\352Q\274\244)[=\361\234);\004\2517=\344no;x\224\026\275<\251\'<?\245\270\274\016\365\305;\321\220k<\016y\021\275O\335\006\275#e\273;\022yB\275\2511V=\007\227I\275\376\221+<\220\246\211<J\035\030\274\337\036\\=A{\316<`\376\374;yX#\275$\257\262\273;jD=|\322\304<\352Z6;?\214B<\316\021\217\273\273\372\034\275\320)\000<.Hc<-\341\001\275\002\305\n=\231O\022\275r\217\234\273h3\005\275\325L)=\200\361A=\035T\240<\3611\303\271\265\376\276\273Pa\017\275L+:\275Zk\233<K\210\034;\227g\271\273\307\257\022\275\230\004\303\274O\207\316\274\314\260\210<\315[\356<P\340\305<f\362;\275\240QM\275\267\002\253\273\302U\177\274\013\261\362<\240c8\275\366\235-=S\372\017\275P\002\341\273S\004`<\301.\234<0>\264<\376\271\304<\311\020\276\272nQ\220\274\342\332[<}\323\n:\371_/\275\340\0054=\257[F=w\264\007=z\272$:\2502\266<@[P\275i\3106=\025A\337<\316d\217\272\327\352x<\020i\237\274\"\365\004=9\020\014=\306c\270\274`\340I\275\347B\004\274\225\362\227<\364\330\370\274\362w \275\303\2725\275\304a@\275nio<\031\267\275<4(\032\275\244\231Z<\225x\261<[\240\017\275!\370I=\231\364\251;lo\235\274\303\356\016=R\370\331\274\177p\311;\322.A=}\205\007=\004\366\r=r\010\242\273\003\000 =y\2510\275\274n\356\274e\235\366\274\2663[\273\313\240~<\336.\007=\301\347\024\275\215\304A\274^\316\\={#0\275\256\321\\\275\031\371\206\274\272/\016=\324\360T\275\344_[=\rRG=W\3732\273j\227\236;aO\215<\335O\367\274#\330e\274tK\207<\007R\t\275\242\310\006\275\2166\301<\376,E\275\357\356\326<\372(*=J\024*\275q\227\263\274\366\354\361<\253%(\274\312\342\242\274\363\344\324\274\276i\006\275\323]\327\274\014\002\027\275\331DA=\320\036\211;iX\233;/\3460=K:\206<\203&)=\270I\210<\321\315\211<9\366\025<\271\332\030=\313)\002\274\227\266\325<\315\223\212\274c\000\320\2746\250\346\272}\027\014\274\\\335/<\267o\351\274\254hN=\222\215H\274\343\346\257<R\221\215;\255\236\025<\344~\r\275\005u\026\2753C\3749\022\311\323\274<\'\243<\236\007\325\274\275\355+=\327\265\304;\037\223\000\2752\234\375\274\n\022\326<P\314\021=\r\0162<\020\337\004=\241\235\354\274\374\020a<P?D\275}\226J\274l\030\031\275$\300\036\275U\370@;1\350\325;~\3777=\376\340Y\275\261\242R\273\234\203\365\274_\002\025=\325\n\222<\307x\346\273\326\\6=5\251\026\275\317d\036=ce\324\274\341\"I=*;Y\274]N\311;\230L\345\274G\376K=\300\3519\275\300\276\000=\336\203\234<4\374=\275\337\332[=\232_\213\274\024\305%=\246{\277<\373\035\330\274tA\343<\177y\206<G\352K\274\263\270Y=V\345><\222\206\217\274\257y\035\274\033&\002\275\216{C\2740\334%=\300\304\017\274P\237G\275\232w\210\274\367\026\302\274\214\273\367<\344\236\005<\232W\255<p\000\321<\316O\220<L`\220<\344\263\244\274D\212\032=\347\317[=\245\'\314\274FS\027<EQY=\027+\366\274\277\305\343\273L\207\262\274\246\227\227<f\311\314<\332\226P<(\210\016<15\325\274r\206\t\274\026\225\201<\202/4<\225\003\021=8\034\t=\206\253\205<p&!\274.\302]\275$\316U=c^1\2755\263\016\275\206\0365=I\007\321\274\224\016\032=\026\244\305\274h\364\375\272\211\363v<\352\210\231\273\213\366\316<\2240\006=\215\317\031\275\264\007F=\356J\256\274\271x\324<Fj\363\274\377{A=o\031l\274\363C(==U\002=/\274M=\204Bt\274z\373\262\273\303\323\036=\363o\372;+\312.=\036Ln\274N\226F\274gsF=\237\342>=G\026X\275\207\345\026<=\305\330\273-\231\331\274\215f\325;n\214\"=\366!8\275G\275\005\275[\257a<\272\222\347\274$\221\021\273\254y]\2756\325\365\273T\325I=\303\227\376<\306\260p\274\022z\372\273\007\303\322\274\320\364\321<*2V\275\334\006\031;\r}\034<&\345\234;\001q-=\031\237\270<cnS\275xZD=Q\204X7/!\003\274\252\004\020<\255\322a<\336}$\275W\026\r\274a\013\263<\254\265\237\274\204b\023;\276u>\275\365\264M<\372\263=\275\027\2029=\334d\260;Lq\026\274)\2529\275\014b\177\274\2025\271<c\261P\275\315\014?\275C\2553=fA\032=;\026\223\274Sw\316\274|\203E=Y\261[\275\217hZ=\002\305]\274K\005+\275<j\345\274\036w\241;\'\222,\275A,1<\017m\235;\311+F\274X\266\207\274\033\263\253\274\023\201\302\274\356\3143=\006\321\250\274\005\263U=\001\2275\274y\260\037\275\341\306\026=\002\306\220<\365\364$=\34408\273\313\3041=6,\201;#\252@\274\305j\342;\"\236\001\275\322\304\230\274G\247R<x\"\n\274\031y%\275\210\223\215\274;\235\"\275\223\326(\274`\315\027=\\\013t;1\366\273;uV8\275\305)V\275\265\265#\275O=\036=\222\201\020<\364\0346\275\002hZ=2\273z<,\217=\275\004\225\020\275\261\266\272:l\026\247\273l\306\010\275\261EH=G(\035\275\260\261\022=\210O\366\274\335@\370\274mK\202\274o\252\001<M%b<\305\262\033=\265D\333\274-4%\275En\207<\373\001\000\274\341G\264\273FF\274<\300\\\026=\361.\027\275a\235\353<\323\177?\274\020\230}\274\256\201(=8\007\345\273c\236\307\273l\003\014=\204\310C=\331\215U=)?\224\274\270\007\017\274 \3477=B\276@=y|\001\275\021XS=u\023==V\335\360\272\005\263\234\274\227\204)=\252\245\023\275j1\304<\301\366\364\273\301\214\006\274:{\254\274w\343<=\374\227\001=\305\362K<C\233\363\274#U\244\273\247;\007=\234\206\303<\357Z\330;\005\376\037\275g\377/\275\332\'n\274m\240\347:j\236)\275\327v(\2758*D<\222\306\037=\311\324\234<8\333\021=0\207B\275U\244j\274\332\033%\274\304\2464\275\3561\020\275\014p\r\275\351KQ=\251\326\222\274%{\366\274\265\254\272<`\331\003\275\017O@=o\315G\275\216U\031<P\365D\275g\230:=O\367\335\272\000\036\211\274\315$\n\275`\242,\275\376\350\221<S;\256\274`\224Y\275\350-\234\274\322K\315<\024e\347\274\177\\\340<X`T\275=%4=\023\347\330\274\373\273\240<\230\376$=\264+@\274.`\303;\261\352\024\275M%4=\250\213B<Ww4=\035J9\275s\323<\275\373\240\210<\333\2446<]\"\300\274%\233x<0M\225<\021J+\275$&i\274\005,W=\232jN=\032\006G\275\370\302\017\2755\274\037\275\341L\034\275\026Z\000\275jYA=\265\203\036=\340AK=\327\232\255\273\030(\252\274\306\246\240\274\340\n:=a|\331<\335\206U=\001\234\024\275\233R\273\273K\214\021\275\270\324\310:\026\031\276\274\037\325;<\335\357\272\274er\031\275M5\273\274\220\306-=\232<\317;\024@\"\275\"\256B<\3235\247<\\\025q:\0015\304<\023;\303<\373C\r<\246R\354\273$\350\300<v\372\305<z\325x\274\233\336\376\274\002\264\3309\251\036\001=\317\272G\275\354n,\275\205\031K;\273\345\224;\220\245B\274\253\202\036\275y\245\003=\030\235\327<\376\202Y\275\274\027:=\342F\034\275G\322F\273\021}\020\273\252\027\212\274\300#\327<I\027\017\275\261I\225\274Hm\277\273K\356D=W\370#\275\345\006|<\345\227\335<\334\371\313\274\215\233\035=O\345P<\006\357\266\274\306\315L\275\354\275_\273u\257\356\273D\372\0308\316,a\274V\3050\275\276\202\305\274\372yM\275\350\243\014=RG =R\"\036\275f\336\260<\016&\363\274\201\016\005<]\007\271<T\225\303<\026\225R\275!G\033<\330\323\030<$\356Y=$\217N\275K\375\325;\213f\240<v\224\225\273N\\\313\274\377\031\310\274\007\213 =+\356\316<\265\221\003=\260\251\016\275\027\305&\274\031\244[\275\252\034\006\275s\032\020=\321L\017=!x\317\274<\371\346<\331r\301\274\3129_\274\005\325\r=\330\304\302<GaU;\014\363\215<\362\032\305\273z3;\275{\366\356\273\357\2766=6\325!=r\330\017=\246\264X\275\200\264\261\274B\'/<O\230\216:h\212\236\274l8\204\274\207Vn<y\262\361<\350\315\026=*\337Y\274\265\340\326<oK4=[\201R\275\306\331L<\005m\204;5\351\300<\275\271\204;\031\013\';\306\226\262\274aq<;^\300\"\275\272X\2328\026%R\274,\330\224\274\342q:\2757`,\274\370\215;=z\024p<W\333U=\000\252u<\207\t#=Ke\'=@\273B=\221F\014=m4$=\362\350\r\275\353\n6\275\330\364\272\274\255\250\030\275\020< \275-\222\026<n\260V=\207\222\202<J\210J=\372\232F\275r\267Q=}+\346\274\326\\[\275\372\261\030<\312i\216\274\n\350\033\275\030I;\275:\262\312<\201\354\215\273XjV=d\005\235;\t\341E=\266\346\320<\337\333\r\275Jr\321;)E\222\273\374\243\372<\006=\005=\236\203\231\274FMG=\350\332\335\272;\017G=\211\355\306\274\214\217#\274\004<\323<giX;#\275Z=\323\023A\275z\370$\275W5H=.\010Z=;\277><%\375\037=s\255\n=\037u\032=>\323\010\275=\242\221\274Z*\013\275\314\3262\275&\343\177\274\242\033\276\274B\341*\274 5W;9D-\275QY\206\274\003\035\340<\026V0\275\253\2639=`\'\\\274\213\252\243\273\n|\362<}y*=>\371C\275\242\000$\2749\351\337\274P\255\305\274\200[\032=GS\024<\314\346`\274\372h\352<Q\250J=q\314,=\200\014\031=\020lf\273\370*K\275\0028\325<\235K5=\371\322n<\\\032\t=\222\326\253\274a\242\303\274fy\350\273\357]\214\273f\221\007=\n\325]\275\227\323\036\275\223K\020\275\264q\263\274\354\005\227\274\240OI=q\336\374\274\266\371\252\274\303\252\237\274i\276%\275q\030\221<\231\210N\275*U\363\274\014\347\273\274\320\335\223<AtZ<\032\373\016=\235*\"\275\273\244\032<\036\336\\\274D\020F=$\352\365;<\023\034\273Ql?=\347\251\210<_\272N=})\232\274\225S\243<\221v\302<\036lA=\262\317\222<4\347\003=\250t\372\274\271\003/=\251z\022\275\330\226\243\274\034\311\005\275T\230<\275je\313\273i1\034=\226\024B=\341\274\016<S\312\031=$\247\357\274\344C!=\216\371\303<\310\277\032<+\032p<\377\314\037\275\224\322\n=\017\374M<\325O\024\274k\2556\275c;\245\274L-1\273\254\036==sU\303;\353\242\326\274\203\266n\273\'\352A\275\262\320\022\275\007\004\326\274s\021U\274\234\026\261\273\"@\024<\365\367N\275\211u\352<\214\364\355\274\375\320\274\273\256I\324<}\307\243\2741\325P\274?<I\275\356\003\215\274\177\237D<\202\341\245;K\026^= \177?=t/,=$\246\030\275\364\275\212<\326\004@\275\244I\017=\320\254\347<>v\022=n\030\314\274\214\324)=\330/\214<z\306\344\273\014\026\270<s\2603\275=?\345<\240\322\035=_\365Z\274,\3028\275\342\266&\275\025\n\037\275\357m\312\274\266E\337\274I\000D=\010\315\016=\321\252\262\274\'\321\304\274^\262 <\241\266\036\275\007\2602\275\202\3701\275\374_\034\275\207\346\317\274\367Z\000=\261Y\010=\313X*\275\001\312\352<\177\255\225<\266k\300\274\244\n\302;\312\341\335\274\001\363[\275\362\236]\274\346\244]=\273\266\206\273\317\352$=\327U\021=km\022\275\331o\000\275S+\232<\352X\337\273\255@\365\274\320X7=&Y\"\275\317\354\222<g\354\347\274\250\337N=\213uX\275\256\365\330\273\332z\326<\270_\370<\316\374\337;\347~&=\001+\033\275\006sx<Y\332X\275\237\216\206\274\254\3327\273\2673Y\275\321\234\017\275\374\350\t\275\024\324\177\273\310\254\357\274(\260\363;\212W\321<\246\347\323<\215\371-=\261\377\331<\320(\261<\253\353\231\274\336a\236<\370\006\215<\371\303\310\274\002%\014\275\203\235\267<KJC=\275\256\"\2730\346\222\274\367\266\275\274@LI=\255\232\010\2743+\030=ONO<\272h<\275\302\316\321\274\372\305C\275\245A\235<\344h\247;-\302\244\274\'\217c<\'D\266\272\202\214@=\217\264\341\274\304i\363<\236\337\260\274C\340e:\327@&\275\226\032\243\274\311-l<\314\264\374<\262\036\257\273\240K\013\275\370\252\377<\221\254P=\006\020\205\274Y\033\n<F\r\215\274\307\232\374<\254y\235<^\032\233<0Q\204\273]\327\006\275U1\365\274j^M=\245\267h\274\214\016\006\275\325\207=\274zp\304\274\277FP\275-L\277\273\204E\030<g\270\3639\'\320M\275N\024M\274X*\373\274\350\316\253<\030e\014=\355\373\262<L\227H=\263\333\033=\2202@\274\254\311\027\275\252i\014\275\231@\301\274\300\277 \275&\034\371<\212<\347\274\3200\363<\013k\037\275/\220\304\274{\232*=}\252\306<\031\024\244\274\300j\032\275\002\352>=\312\032\'\275\212\222B\274\303g\243<\010\352\014=9\315\320\272L\344&=O\032\\=\"v\213\274T\007,\275erH=MA\262\274\310^O=\331.\364\274\3768|\274D\010r\274ph\200<B9\242<\362\"a<\215\356\263;e\331\031\275\217\372\225\274?Jb\274\243`\036\275\324q\2229*\265\021;\273\307]\275\232\377\354<[\310\024\272\342o\347<~\320\215\274\347\032\315<wR2=(\303\000\275u_\265<\rX\013\275\236K\027\275M\217\323<\234\331>\274I\217S=\271\032\374\274\225\341<<\210\020?\275*\365R=QY\310\273@\300\371<g\243\035\275\271g\335<\2657\350\271\347\223&\275t\230\037=\017o\371<\3732\036=\355\271\362;y=x<\254}C\275\216\363\031<\025u\010\274\214\211\356\274\026\034]=\363!?=\245\276\304\274\202]\033\275\235O\016\275\026\356/;bf9\275\215\016\370\274\234^\341\273\210\327\303<\013?#<\016\341/\273g+R\275\223\t3=\t\315/=d\201\214\273!\240\020=1k\240;\224\362]=B\356\217\274\031\251O\275\024\262\357\273\364uR\275|d)\275n},=\312\201\"\273\203\210[=s\365*<\336\333\365\274\270\250\271\274\235\001@\275\236\340\014\275\177#\337\272\275@@\275\201\232y<\005\212\264<o.\264;]\243\202\274\273\220l<+\244%<\206\304\266\2745P\365<)\271;\275G\210>\275\033\034\006\275\343\315\366<\372`\004\274[c\200\271\357\252\022=1\340S=1^7\275\352\3543=i\306\013=H0\267\274\221\240\230;\004|\346<\001G\345\273\365\317\314\274\255\373-\275T\277\033=|;\344;\0230\377<\303\234\305\274\265\377\020=\346\352#=0\020\250\274G\204(\275\352\375#\275vI\323<\317\031\257;\366\311\265\274\374%S\274\312\273\340<E\207:\275\317\020$\273\035\361x;\021\021\246\274+\333\277\273\265\223O\275\227?\370\274\367\277%=A\237\t\275\202\235\223;\355\3357\275\356d\036\275-\026\006=g\316\256\274\317N\304<\265\312\346\274X]C=6\212\030\275\373\215$==\314\000\275\277I\t\275\314\"\247\272\021\231]\275\323\004]=[D\207<\203\333Q\275m\265\222\274\036\326\030<*\220\311\274\036\260\'\275\241\353\362\273\305q\231\274\372\360[=\276\020\363<\215+^\273\244,\035\272Y\222\027<\330\377\311\274K\023Y<C=\r<P\301\003<|\242)=\326\314]=\232!\013<\023gT\274\343\n*=\214za\274B\314\\\275[\255;=\365fX=\276\303R\275\0133\321;\010\277\016\275X\315U=P\232%\275\373\346@\275\023\263P=Wo\013\274\377f\006\275M\'K=\223_\224\274\234Z\257;\265\'\241;\027>\333<k\017!=\376\025l\273\322m@\274\235\030(=\310%\273<\3217\220\273#\3435\275\330\024Z\273\377\206\214<f\235[\275\005K>=&\016\321\274\345\304\2519\216\225\243\274\235\313\217<\301\267f<\003\0211\273\211RG\275?\307\343<\037\354\027<w\tB\275\350M\273<\2401\212<wP\r=O\3204\275\013\'\036<\365\361\242;\204&\367\274\363T\017=wh\271\274\230\366\n\275.q\022=\307\033\014=\371\022\265\273\005\332P=\030)\234\274B\230\270\274\201[\005\275\031\326\362;\306\234`;4\347\000\275\226\273\264\274\003\261\013=\240\205N\2754\261~:+\274!=\276R$=\352\177C=\200\306L\273\312\033X;~\221<={|\007\275\006\260P\274^\020B=x\307\320<\322\007\"\275\366\377\215\272[\341\336\273\222)a:\337\217+\275N\024\023\274`\257\036=7\251\256<\375%\301<\277\315T\275U\373\241<])\335\274\013\2558<\000\233\241<{\024p\274\201\2760\275\366\313f;\203\204:=\346\004\234\274\355cE\274\037wU\275zCW\275[\375F\275\302\021\246:\001\177\375\274V$\214;\323\214\331<\3249A\275B\251\320\274D\237\363\273\235\021H\274\254\274\362;\\\237?:b`\\\275\320\235\323<\207\2726=\264{\271\274?\036\016\275\373\261\304;\250CF\275\301\320O\275\003lA\275\360\332\031=\260|\014\275>ZY\275;.,\274\000\377#\274\004T\321<\274r\177<\377\235\362\273\027\255?\275v\'F\275M-\013=\221\252D=\265\201\267<\345\026%\275\000\004\032\273>\263\256<O\\\331;\\eG=\222\235\252\273\353\256\261:\333\372\344<\264@=\274\372\262\326;C1\014=\023\2460<\212@\001\275\2678<\2759%\t=\022+-\275\323\370+=\21400=\347\317\231<\t*\202\274\017\005\310;h\361\236<\002\256%=\026`\210<\306\016\323<x\362\253\274\327\032\232\274eK\'\275\250K\226\273N7 \275\202>\323<l\002\331\274\236\263\322\274\n4\347\2748\007\371<\307\260K=a=\261;\320\310?\272&%D=\017\354%\275\2400\232\272;7[=\260\377\025=\222F\020=\\\3367\275\014\240\033<\376\256\233\273\207\021\003=?\227p\273\216\251I=T\021D\275\272NV;\271\003\230\274\221\334M<X\226\220\273\"\010\207<tw$=]\361\203\274\006\'P=.\355\023=\255\002\270\274]\255\200\274;\241\237\274:\263\223\274)\032H\274\033\221\347:\377/\363;\200l&=HX\316<z\005\310\274I\251\260\270f\251\002<\037\310*=\216\023\031\275p\337]\2757 \3329e\323#;\361\204\007=C\305\364\274\037\231g\274\227\343[=!\302\352\274\227\2675\275\267\035k<U>I=\017\320\235</s\245:\376\001\"\275\311\217\350<\255:C\274k\313D\275A\276R\275\247\254T=\241t2\275>m\t=\221\320\002\275S\243\310\27475\"=\016lD=\347\370\261<=\304\034=9\240\017\275s/F\274\263\024\360:\305\202\003<\304\004Q\275\313\275\247<\202\374\237\272\220\255T<V\213D\275:\002$\275\262\0276<\205\0275\275R\033\377<\376\2051=\260\2708\275\177\354\334<\317\247\234<\3320\n\274\222\357\221\274\201F\230\273\203\253\006\275\342\325\203<\3672\031\275%\327\200\274\262\n^\275\204\332N=\'<7\275[:N\2742\242H\275\225\242N<(2\316<\361d\020\275\205|8\275\300\270\005\2755xN=/\217\266\2744dD=h\213\262<\007\275\336\274\222\303U=!\251\317;\034\033\021\275\320\313\356<\267\033\315<%\0348=\r\237\342\274\365\314\223\274\3145\022=\321,5<\314,T\275/\022Q\275\0014#\275e\3617=JE\353\274\372\352u9\200\303T\275-KD\275\260\235\341< *\2548\\\273H\275n01\273\027P\316\272\365E\032\275\226\177.=d\036\002\275|\036\341\273\227\031,\274\016\206\353<\314\215R\275H F=#P\r=\362\314\353\274\247.8\274\030\r\005=\251\316\245\273K\350\357<\353\317\317\273L\031\212\272\223\270\366<\312\331\240<\"\251\277<\032\241\014\2756dD=\233\372M\275Z\352\352<f\315\r<\272\210Z\275\236\000\251;\\u\007\275l@\271<0\017\374\274\312.F\275W\274\256\273\222\335L\274\3724\347<\220}6\272\273^Z\274\361=\007\275/p\t\275fWI=\210\256\213<`\273C\275]\260G\274F\355.\274A\261\\=a\200%\274\344.+=$\007\003=^\375\023=\270\340\037\275\303\365\222\274WS\007=*\206\260\273\241\"L=\262\346\\;k\362\257\274\353`B=(5\013\275\363d\241\274_9\'=:oT=\246\314A=\241\233\233\274\224\351\017\2754cF=\376\346\004\274MFK\275\177}+\272:\304\376<\220\305\t=\224K}\274\350-T=\274\227k\273\350LU\275\225rv\274\354\177\223\274h\323\3469[\251\303<\216$\272\273\373\344\014=;,@\275J\262]\274:\241D\275\346\236\245\274L\215Y\275[\004\344\274\315j\037\275\377#\037\274\036o4=l\247\026\275\300\320-=\313\253\371;$#\004\274\376\021,\275M\005\241\274#/\001\275\352o\254<9\240\245\274\030\205\014\275t\351\031=\374/)=\000\211\314\273\242nY=\201([\275\014K\261\274\312\345 \275\344\307\227\274\023*\361\274\261\307I\275f\031D=\277\013%<\020Rr<\010\211Y=\252\253J=}\t4=\021\222\236<\2420\312\274\316\343V\275\301!\023\275\341\t\376\274\260\014\324\274\254=]\275\030{5\275\252\013@\273\276v\366<\020\332\231\273\031\340\002=\3656\"\274\0348\365<\177{\025\275\374\3678<,\200\025\275\353)\004=D4\214\274\233\031\024<\311\314\237<)\1772=\225\010\331\274\"\241\r=nM\331\274\304%\212\273\265\3076=>\341\020\273\ne\201\273\031M\233\274DB\236;\013*\t=\013m\004=\257\267\320<N\247\372\274\377d\022\275IG\n<\354y\356;I>\023\275\272\365N\275\340_\010=\203U\216\274r\327A\275Y\2413=K\200\204;\005\033\221\274\340\357\002\275\315\342\005\275~1\233<\247i\230;\316\3721=\374\026\022=/J\'=\2424s<:u@\275|:\272<\335\200\306<\200&\026\275g\243\001\275J\236<=\r\031\276\274y#\026\274\203\362\t=\265p3\2753\367\'\275\021\263U<B\227W=\003\325\204<\177\003T\275\010&\205<.\006\327<\254cQ=N\344{\274\350\330\034=\024aR=9a\212\273\210\212\r=\342&;\275&\271@=_W\270:\016\004\025\275\321iW=7\344\356\273\353\325\000\27565?\275\320,\366<\207\374W\274\344\350\356<;\022\321\274\207\0308\275\331\211\252\274\347\t!=a\341\372;:\375\245<!_\325\274\367Z\014\275\376\3319<\035\362\n\275\262~\037=\364V\t\275j\353\\\273_\3618\275\357\036&\275\025[><\233\331.=\244\265?\274\314\177Z\275\016\367\340<\003!\215<\377fz\274\241\251L=Z\311\027\275=\3637\275P~\210\274\304\212z;\035\205K\275\246\371\\\274\026\276\\\2753x\033\274\370\245\027\275\226\364\365;+\257k\274s\341R=\205\375\315<\000\203\265<T=\035\274\275E\237<\255\304\214<t\212\014=0\364\367;\027\244?<\016\035\311<\016\"\031\2752\213\026=\251\3033=\"\374&\274\312W\356<\\\275J=\212\233\026\275]\313W\275\303\204\255\274\252\023\373\274hY\213:\227\313\r=\261\325\017<\031G\\\275c\202\274\274\332\3312<\352\204U=\213\276\377\273L\264\351;Ot\265<\016\240\030=LV\364<x\352\004\275\3401U=:\374\216<\305\370\300<5\303@\2756<\250\273\373\200\276<\341\251X\274\002\000\347\274T\217\017=\031\3416=\271\274\356\274\337\301Q\275\365\257\036\275\252\344\200<\r4\004\274\026(\205\273Y\210\320<\357J\033==\001P\275\237\213Y\274g\026]<\251\254\345:\200&\240;\343K\227\272 \"\215<\344B(<\270X\313\274\302f\230\274\337&\342\2730\t\030=T\217\212\274\277~ \274\240w\357\274\207\372w\274SYT=\342\'3=\0221\332<\223\020<\274\350\"O=\330I\037\275\013\3412=>\311i\274NH\030=\351\021i<Y\265L=m8\014\275X\316\030\273e\213\315;\300a\325<\272G-<4\224\355<\214\2517<\227D\362<\253\260,=(!\022\274\034\263\272;\227\321\\\275(4X\274\377\256\224\274!\323 =\"}\022\275\350\325\031\275 Se<&X\016=8O[\275\0235\257\274| M=q\377\227<\243\002\016\275\315\2359\275I\263\345\274h\251\360<~\207\203\273(>2\275\n\327\375\273LV\214\270\000\327V\272\337\260\325<\344\342f\274\247s\326\2741\034\017\275\021\311\347\272\006\2120\275\247~\316<\246\034\002;\263R\221\273\204\2263\275\325\006\034=E\350\234\272\341\227\030\274S^c<\260\332\327\274\014\370\031\274\227X\320<\247\225\022\275\324\273T\275\324[\364\274\327\341[=\317\237r\274\nC\'\275\224\355]\275= K<\344\260\353<VY\274\273\037\321\341\274\214\356)<\373\270\362:\004\017T\275c\265\252\274\372\201\031\275\014#\315\274N\232D<\314=\323<\243\320\005\2758\340\025\274\313\242$\275\201\245\010\274M\030\026\275\023\000\372\274\2241\006\275O\355&;\017J\252<\205|F\275.\360J<6\256A\275\274J9\272u\237W;/v\034\275\016=X<\215G@=i\211A\274\234rO=\356 U;\003d\023;\234\326\026\275?\302\202\274\340\007X<\220\036.=\274\022\240<\353P\371\272\237\301X;+\"\260<cY\214\271\216\232\351<\347\203\370\271(7\244<\324\206O\274z\200\213\274\376t\377\274\267\371;\275\t\330\"\275\336,\240\2745\321\036\274\265R\205\274\315q\'<3)T=0\246\200;\241\330=\275$z\244;\n\216\337\274\243\006R=!\230P;\320\0311\275\217\220==\264\252\030\275\220\032\232<\346\365\325\273\314\251\200<u\'\370<li~<\212IW\275\245:>=V\377\004\275F_R=\346\305\365<\035R|<n\3575\275\331\316)\275\247\353\316\274%\242\246\274\334v\034=\2330H\275\001\363\277\274p\300\256\274\215\267G<\224\352\275\274a\021N=\320\210v\274.\221?<\001y\207;\264f\273\272\337\014\202;\271\260\\\275/[\211\273\337\213D\274\236c\347;\005\332A=\215\322@\274\001\350\n=\3628\001\274\251KU\275?\206\231;\2216-\274_\032\010\275\t\033+<\212k\214\274\007\n\000=M\r\342\274\204\310\017\274\317\267\265<j6\225\274\010\3233\275\371\271\034\275\265O\345<\016Z7\275-\021\331<\300+\355\2748\332\314\274\032mD=x\362\317<\035\217\010=\314\244\274<A\000\205<C\307V=\270\255N=h\275\334\274wI\020\275\277\306\035=\221\236\022=dv\223<}f\317<~\207V=\364\202\025;\365\323\366<\207\225\276;\242#W<\341\033E=\035#\247;\003\256\014=\342\331\r=[\240\237\273\313\027p<%&\200\274~\214\260<\204{@\275\370\200a\273\260\010S\275\361\332#<\344\020N\2750\334\252<\'.\002=\334\032\224\274\336\220\036=\347\310\337\273\347\000\001\2755\202\204\274{X\006\275\276Q-<\371q,=\306\251\031=\317\342T\273\260\233\314<P\002\326:g\363\274\274\250\177E\275\222Y(=\336?z<pn\274\274q8\270\274>\215\013\275\301\3411=\313\247\\=\205\274W=+/\350\274{\350\255<l\025V;\351U8=\251\262\036=\367w\235<\346(\010=\206@4\275MP\236:\255\2424\273\n\360V=\242\035\n\274\235\247\251\272\260\365@\275p\3613=\224\344U=8\306D<;\333K=S\371b<\213zK\275\227\206\271\272\000P\233\274\270e\311<\204\341E\275\001\2653=\010\250\036=Ux\270\274]mR=]\221\'=\241\262\227\274f\373\231\274+g@\275W+\236<R\251\233<\266\307+\275\004\366;=xH\007\275\262\327\001\275\201\242\342\274\031P\267\271\370\323m<8\220\026\275\243\210\310\274\n\361\371\274zc\017\275\211\347\005\275\2555\026\275lb\237<\035H\216:\340k\213\274\2116&\275{\0317\275X\330@=F\215#=2\014\334:\033\240?=\031\222\033=k\316O\275\310\010:=\350\236\221<  /\275f3a\274\305\016\341\272\006\266@<@\343\001\275\215\272G\275\030\034\217<0y>\275\225q\036\274\\\207+\275\377\307\t=q\023>\275&\215\025=x/\244;\216#u<|fO\274@\263\352\274\250\354\222\273\031<\"\275\0108R=d\323\351\274\376\356\246\273\003\035\233:\351\'D\275\237\364\025=\277\306\210<m<\222\273\373\035*\274\3140>=t\220(\275\331\350;\275\301\333Z\275\330\301\274<5\256%\275F\241\021=g\026\034=\014\225\023<\005\260\207<q\344\340\273\006\241*=hHW=\331\320\020=\314\340G=\254\237\324;jj\323<\305\262K\275\332\254)\273\344\223\214<;\215\301<\266\264\030;\323\207_<c\231V=x\212\266<}@\356<5\362\022<$aK\272\233Fs<s\343\032=\013\370\335\274g#X<I\234\316\274\222\221x<\337\312Q\275g\035\344\274\377\334 \275.\222\333\274\256\202F=\224\002\006\275n\203\200<\362\n\300\274oz\n=\363\242V\275\335\375Y=\311g\247\273F\334\245;Ps\361\274\205\366\357\274\027\231\346<\"\315\337\274\250\240\026=\247\240\271\274|\225\005;j#\004=\237\304H=\035\304\376<\356(I=\363\2432\274\037^\025=}\022\351\274\262\263\260\274\335*\002<\230\254\014\275\31003\275\246Tv<\2103\217\274O\033\247<D\253N\275S\375X=q\310\217\273\002t\375\273\260\202]=\006F3</\023\202<\214\007\024;\231\305\322\274\232\342\325\274\322\221X=\277\275\307<o\3138=!>\307;3\215F=\017KL=\361~\'=\\\3754\274\002\032-\275-\320:\275\245\237\205\274\354\264\026\275\354up<{+D\274&\320w<\223\265\n=s\240\262\271c\354P<\342,\261\2749wd<\236\342(\274\271\325}<f\301r\273J\265\324\274\000\026\001=\355\\S=\223\222\023<\310\036\223\273\"\2429\275\245\231\204\272\016\276\004\275<\203C<\314\034-=\007[\035=I\377\300<\224<*<\344\251\010=\376KE\275\037J\363\273\025\244\034\275\271\355o<\330\313\002\275\312\273\377\274\234\350\'=\2442?\275:a\\\275\307\373@<.\223\224<\322\"Q=\3251)<\321\'\237<\371\236c\272\023[\313<\004^\\\275/\256\313\274\313\350\205;(DO\275`\0351\275\271\'\322\274\236\315E\275\3163\322\274\035\030\010=\230e\356\274H\326\035;\377\265\032\275\255L\322\273\0321\366:\374\3418\2758*\023\274\213\361\031\275|\373\020\275\007\373S\274Q6\326\274\273\336\353\274\016_\320\274\007\"\266\274\353\344O=\023\230i:\235\310V=\261l\343<U\276$:MR\\\273\226\177\245\274\345S\002\274\t\216\213<\242\202\247<\236\027+=\372,u\274\314g\367\274\223\216]\275M\2217\275!\226\352<Vt\230<\357\362:=\204\037\205:d\356.\275C\010r\273(\"\271<\255\303\236<E\236\201<\354K\275<\354\267\r==qA=y%x\274\332\177 \275T\026w\273\265\244D=k\237\260<\317\275A;m\3245<%w\014=L]T=Y\022\326\272b\330\324\273\370(?\275\340\243;=\3572\n<{\202\006=\025w@=\362\276\204<C\362,=\032k\001=\215kl;\357\025\201<\337\242\014=\303d\"\275\244e\354\274\240\3147=w\177\032\274\000J\037=h(e;k\n\203<\367\022Q<\317\013,\2750E\253<u-\303<\312\t\031<FL<\274o`\361<\2275\231<V\210$=#T6\273P\376?<W\224\t\275\313\036B\275\254\005\323;\016\3110<\211y\014\275\310<\017\275\302\034\010\275I\206\337<x\360\261<p\245\301\274\n\266\"=\375 \253\274H\326i<AU\230\274\326\rA=\370\364x\274\037\177V=I\236}\273`\347J=\002|9\275A\354>=(\377\367\274\354Y\\\275Gs$=r-\000\275\002Ln<\372\251\327\273H\344\265<\353\266\335\274-\212Z\275p\306\231\274\004\\==\343k\326\274)\313\016\275\346\217\331\273\241\367\031\275\371\205\034\275\231E\243;\243\036X=\201\016G\275\330\243\033=\006s\026=Tm\027<\200\2366\275\2420(\2758\\7\275\246\313\207\273\366S!=9\324\254\274\032\376\'=\332\220\262\274\276\234\312<\336\344R<i)\024=\004\227\340<*}\236<\267\313J=\342+I\275\371\000;<\314\343\000=~\222\024=O!\\\274\026E\205<v\023\034=\272\364\000=\t\333\014=\204\002\305;[\353\271<\026\244\300<\224\366\005\275\026\345\260<\213\037\322\274(\206s<\275:U<\3035/\274\205\252\214\2745:V=\243[\322\274;\037\344<w\302/=\3765/=\222\014G=:\277X=\351\342/=\332J#\275h3P=\267\333\036\2752cY\271Y\221\263<1\305\031=u\241%\275d\275]<\013o3\275_\265D=\352^O\275\355\217\032=$\266J\275#\020\220<\370\270H=\333YK\274\004\325\210<7#-<\336\320\240\274f=X=k\253!\2758\304o\272\010\377\222\272/\354\341\274pmP\275\324`\331\273\273~\335<\226\311\265<\337\355,\275L\t\242\274\013\330\007=\rh^\274y\035\030\274\377v4\275\n\306\037\274\324\311z<\317(\216;\310\302@\275b\302T=\257\200\017\275`M\000\275\221\317V=\314\035\035;\224\266:=\000d\263\274\272dK=\\\303\272<M.\261<t_4\274\255\205\332\274\020\240\017=\373W\000=n\177V\275\0000\265\274|\343\355\274\031<\357;\204\204\334\274\004\010\214<y\262:\275U\0353=\021\365\004=\217w&=%\0022=\252\205\372;ZT\354<8it<\035\017\205\274\253\250+\272*\352\031\275+\215\002\275\235H\222\274\365B\275\274q\330\357;l\213\322\274\206\271\233<\223A\014\275\016\255\003=L\246e<\035l+<\304GE=\032\353C=\360\340\347:\217U#=\207G\323\274\024\3249\275Y\261%=9\205\373;(\301\360<S\264-\275\262\032 =\272\300X<\026\3742=\355a\037\275\013\376:;\315m\253<7\340\\\275a\026\020\275\026\263K=It\004=h\213\024=\367\256T\275\207l4<\200T\375<b\000Q\275\003\316\266<\235YJ=\372P\035\2752u\305\273\'\360\255<O H=-\202\300\274\275\235.<\360\302\344<\371i\000\275\3051/\275\\`\322\274\037K\377\272PY\003=\241\010\006=\306b\003=^\207\t=)\230\270\274z,h<_L/=\257[\036\275\372\236\244<\376\252D\275\223\245$=s\016\325\274Nf%=38\260\274\325\266\3239\227\314\274<\200U\000\275\322\206\231\273R\332\244<X\035.<\250\315=\274x\232J\275}^X=\"\2134\275\023NQ\275?F\007</G\343\273\325y\247<n\224\343<Y\324[\275\003hS=D\014V\275\017\363\013\275\331\021V\274\255\313\235;\036\371\204\274\313\033@=\234\365\026\275l\205J\275\340\346\273<\t\343\354\274\030\253\017=9[O\275C\316%\275\227\304\035\274\005p*\275\261\037\352<\225\252\266\273\202\2365\275\371\266S= \317\305<\231\026\021=\227Z\215<}\262\024=\2218\273<@\330\342\274\316\365\304<\022\220\313\273,\347\256\274\211\020 \274/\0104<\247,P\275K\203I\275\n0\333\274\230#\\\275\242\210\274<y\"m\272\315`\245\274\266\215P\275\325\024\235\2741~l:\3376\370<:\320\274<@\032\373<\330\260\035\275\2625\334;F;\004\275\033F\335\274\336\235*\2740d\225<\342[\337<ir(\275i\364\014=\243\310\301<\014y:\275\024\324\271\272\230j\277;#\307Q\274p5D=\346\374\020\274\212\230U=\025\313$\275(\250H<\272\310\276\274\342\032\017\275\314\342\027\275\243\217\006\275N/p<\241MO=\3518\031\275137\275I\302\244\274e\223\202\274\313[\243\270\271\252\375\274\366\313\027=sO1\275\362\365\017=\276\333\236\274\331\0022\274\300\273q<Z\263\023;\016=\321\274A\243K\275\013\374]\275\322&>\275g\255\024\275\002\327\032\273p\201\201<s\ra;\207\352\"=&}*=\250\345L=q\354\332<dz^\274I\271\004\2757G\003\275*\273\262\271\322\010L\275\265\363\'\2752\246\304\274 \357\353<\030\241\230<B/\035\275|\222\"=\361\r\262\273\200\241\\<\032\343(\274\306\273\'=\177\341\301<\346\313\240<9\032\016=\2013\373<\277\300\245<\373HZ=\264\374#={\367\275\271v\372\021=\246\224\240\274^\204\320<m\327\023=\245Y\217<\017\317\035\275A\234*\271Q\216\224<\244\306J\275@h\021=I*\260<W\264[<.\232\270\274@\260><\364;\275\274\321\251,=M\201\353\274?\351W=\244\364\316\274\272 \255<P\273\315\274i\037\274<\220\206\375\273\1777\311<\004&!\275m}C=\034{\"\275\362b.\275\316oj\274\370\224>\275L\251:=\332\013\200\274\353\030\037\275a\3453=\300\0224\275-\272\326<\302\3761:\327We<\254\224\330<\374c\000\275\271:\337<\352\265>=\306/\304\274\354Ns\274\253b\321\274SCP=\2439H=T\262&=\214\224K\274\024-\024\275r\307\303<\340\234\037=\035B\325<VM\026\275\313\001\355\274\222N\245\273\330V\226< 1A=3\226P\275\304\272\205<e\322\026=\272\024\016=\342K\363<\334#\353\274\236\250\n< \204 <\264\377\021\275$\352\313\274\307\263\240\274=V4<\017\321\232;~\005J=\3407\223<%\306\002<\'\245\032\275\207\016^\274@r\237\272\252~\335\270\rf\007<\023\2430=t\2434=\3441\326\272\233\020\035\273\220\375\316\274.\314\312;P\365\355\274\350\365w\273\270\\\031\274/F\262<W\235\010=\250\370\223;\006\332\205\274\036\303:\275\341V\271;\2435\034\2750\nQ=\\\234\204<\033\221\227\273\236\226+\275\257\314_\274((\004=\007wS\275X\312>\275\335\220\000\275\320\2209=\272]G\275\232d3\275\342\tD89\tG\273\014n\313\273\177P\253<\364L(=\307[`\274E\031\003<v\312B\275\237]\335<`\373L<\210\030<=\245\343Z=\365\260q<\350\275\311;\177\350\013\274`\313\020\275\214\203\276<*\240\332\272Kq\301<c\r%\275\177\020\025=\017\014[\275*\351\366<\353\275\354<^\005\207\274\323/-\275\201|\211\274,\352H\275_;)=h\330\374<\215|\321\274\322M\264\274@2\021\275\013eu:N\"\336<\237\330\025\275,\216\341<\265\376U\275\265\321\265<7r\001\275Y\262\006=\346\255y<\344\025u<\352\232\277\2744\347P\274\233\035\021\274\215\312\376<\321\016\357<\245AL=\210J\266\274J:\'=\326\232F\274)\022\254<d\321e\274_\317\026\275\376Z\005\275\223\205^<B\374z<\362\252?\275\374v\2479AuY\275\304\357G=\304,^\275\336\331:\275\034\031\327\274p\320J=\032\271\t\275\325x\221\274Gx\335\273\303\344x;\010\370\016\275\332B*=\273\321\200\274\3253\346<\301A\272<y\007\031<\300lZ=\335\256\021\275^<y<\027%!=~\342\321\274%\014\250\274\322\n~\274\270\321\324;Q\221\037<\362\373@=,\337\026=\316\257\340\274\333:\353\272^\262\r=rWU\274A\325\224<\353>\246\273\240\230\334\274kY\001=W\271\034\275\300\314\004=m\001{\274\275\214\366<\007\005\\\275\375#\340;\021\304\n\275\304\226];\345\274O=\241\366\014\273%I\336<\2073\346<\034%k\274\363\314+=\227\2157=\272\326.\275\222\342I=\033\252\321\274\265\330?\275;\3542\274\300\337p<\217\331\010=2\n\001\274A\3752\275\354\256\210\274\252\277[=\005f$\275\352q\265<\367+(\275\357\'\002=\002\241G\274OW\314<\372\311\314\274\033w\232\2732\241I\2731e\251\273n5f\274r\324\026<\352^?=`[\006<\203F\246<\207\246R\275X\264\343<\026\332\027\275\340\006.\275\252\364V\275\255{\363;\301.\036\274\034\223\313;\343\0317<\003\350N\275b\3024=\245\217U<\227s =\r$\245<Ox@\275\265\274\001=\000K\014\275\323\301\r\275\177\312\337\274\266\214E=\250\261\003=\0345$\275\306\377\265\273\270\367\372<\210\317\222\274\251S#\275\t\267\n\275\333\177\010\275#8\021\272;\204\240;\343\216\342\273-:\000\272\266\305\272\274\235\342\001\275\341\264E\271C\t4\2754QX\275G\271@\275\001\237$\275\242$\254\273\217$\t=\230\350\"\274U(D=\372@;\275<\031X<\273\323m;%M\242\273\271\022\002<?MZ\275\254~\014\275t2\n=\031;=\274uOy\273V\'y<X\2021\274\337\351\327<O\010;=\316\276\177\273e\"\331<\336e\217<j\260\030\274\202\005\\\274@E\355\274\316\016\246;\226\255\026<\2733C=\000\0029=&\262.=\261\252\262<\013\207\r=\300\314)\274a\321\334\273l\306\304<\353\224\334;I\241\226<\271\227\366;\343\034\237<-\232\207<\216\033\335\274\2225\362<E\304\256<>0\355\274z}\021\274\010\330\031;B\004R\274\225\210(\275G\305\261\274\211]]\275:\3668\275\236\033\371<d\251]\275b\325\337\274\266\025\344<\024\247;\275`\3663\275\206\034\302<g\223T;]\3017=\267X \274\nO\361\274\235tW=2\337G=\300\353\203\274#\026A\275\370\301\022\275\312H\263\274\302\036\024;\340\365/\275\311)\014=\236\363\016=\342O\016=\237\213\007\275\302\033\006\275r\324 <\303\241A=\2654\353<\324\t(\2751d\260\274\322\303+\2757\260\346<l\r<\2731\035\033=\266\252g\274\263N\232\274\365B\374\274\037\245\344:R\304\310\273X\310W\275\201J3\275\274\271L<j\301<\275?\225\251<\203?m\274\227\320\013=0}\024=>kw\274\275\205\210\274\375\375i\274WZ\353<\032 \324\272U\354\206<\000\322\016=\367\354\033=\340\207\354\274\374\025\237<\302U\243<A\300\'\275YJ\373<\301\3015=\010t\022\275\314\2623\275c\003\202<\254MA\275\320\306\033=\177\246\262\274\331\014\t\274\031\n\233\274\250\3461=?\332L\2753d\017=\300-\327\274k\000\302\273D\235\240\274)8\307<\352N\367\274\235I\035\275Q\345G\275\263\363\372\274v1\314;4\347<<\n\213 \273d\344\305\274\260\342\006<\326\206\231\274\210\306\210\274\317\274D\275\263\347\376:\340>\256\274\2662s\274q\312\006\275\327\354\004=\207\313;=Ko\227\274\177\037\272\273\022<==\202\350C=\307\346\031\275\341\\\314\274-n\204<\233\236]\272\355\033\322\274N\317\334\273&\372\375\274>\305W<\r\226\031\275\363\263\351\274\270\2346=\2561M=\377\372\210<~p\t=!p\244\274\303\2419=\177\374\022\275\020\010\373<\344]q<\3442\014\275@\331\375<\243\311\207;\0105Q\275\364\010\222\274d\270\276<\252d\211<M\037E=\370,\204<\005\210\366\274\326\204\"=5\010h<\307?\032:\010\351B\275qI\206<#mJ=\374R\032=\032i\332\274$\315\306\274\264H&=\314V\300\273`\345\320<H\345<<>F0<\241\371a\274\265\003\343\274\2233\347\274;*A=\312\202\014=^>\t=\003\205\"\275Ng(\274\337d:=\213\350\r\2753j#;/\231\317\2737\256\036\275\325\220V\275\356\374=<\236\017\324<\201\210:=\034\240Y=\322P.=\360\274\367<\315J\226\274\004\344\024\275/\276`\273\310\026>=\277\351\227<\007\036\231\274\336\205{\274\017\236>=f\223\004\275\035\032\346\274oO\032\274\331r\003=y\225(=L\304\361<\221\307\330<\\\212\234<\325x+\275A\215\033\275\333\250\267<\256\005\233\274\'C\371<1\210\275;KB\001\275\312[J\275\240\223F\274@\365\304\273eZS=\211:9=\333\315\337<\377\353I=\241\357F:\021\320,=<\257O\275\363e\236\274\271Q\201;\275;n\274v\225\006<D\244\022=%\333\240\274\232\027|<-\326\201\274Cb\306\274\276\312\354<\366\204\203<\274\375\005\275\357\262Q\275\323\352K\275\337Q.\275\3266\026\275`v2\275\311\243\237\274Hl<\274K<U=\372w\034=\330N\022=\273\244\267\273\254 =;\266i\033=/\027\266<\270I\"=A3K=\370\340=\275\205RB=q)\270<Y\377I\275g\204\312;B\320\264\274\271\265\037\275n\037j\273hI.\275b(T=\212\242\275\274\036\203\031=\267/\266<\350}\320<\'/\300\274m+#\274\323x\301<\214q <}X\004=Gb\34095($\275G[\3649\030q\025=q;G\275Q\377Y=\235\300\376;\022c\244\274!\034\033=\334S\245<mr\310\274\223\342\316\274\020wJ=\037U\020\275\276e\240;z\333\316<\364o\210\274\355\007\030=\271\354\243<w\036\r=\024N\033\275Q\367\021<\003 \340<\034\020\344\272Z\306>=\007\214+=\322\226&<\214\030\'=\311\322\'\275D\331\336\274<\334L\2755@\373\273+\2670\275\'\220K\275+U\214<\301\211\005=x\017H\275\022>o;\215\253\226\274\007\345E\275\217^\016=\350\027\216:#\225c\274\233p\032\275\356\036\"\275\377\252\032\275\210P*\275\037\345\265<\013)\252\274\270\231\003\274\tg\374<\226\244D\275\177\211W\275\255\2659=\226`\001=\3568&\275\006\357I=\243\3764\273\216\223\017\275\271oj<\3566\006=\241\263.=\002\357\221<\305\266\315<\026:\315\274\224\240\263;#\2457\2752\226`<k\355\374\273\254\352\037\2732\205==\3554\026\275\270\322U<5\371\000=\027\231\310\273\\\300:=\303\303-\272\247\276)\275h]\354\274\232pH=\244\255\034\274\315\247\241\272\356\223\363<\241\017\313<\n\357]=\237H\027=\306l\t\275\245*\361\274=\347\317\274Kf\223<\265\017\313<~\223\352\274\266\201\341;\356s!\275\360ph<WX7=\032\354\207\274p\266\027=\26737\275\217\340*=\332^>\275[\017\023\274-\331\224;\002\305q\2747\267\347<\001.\377\274\221\205h<\365\276E\275\271Y\360<2\024G<\367E\322\274\3461.\275\240\362Y<\237\025\033\275\246m\255<\234\003;=\221\317\033=3\2535=\001{\345\274P\036I\275\303Q\232\271\t\017+=A)\234\274\216\260=\273\317\324\017\275\004\311\030\275\264Z\010<\366\353\331\274\t\320J\275\331\363\320<\247=\005=Pl\351\274\353\r\341\274\207\245Y\273\236\240\264<\201\242K=\204\030\r\275\336\333\354<\003\031\372\274Fv\005=\037\322\244\274\235\364&\275\217\201\356<\273P1=\260\237\002=\313\216A;\2111\\\275\230\243\247;_\221\026=\354\205\347\274\220\362\266\274\226\265\310\273\223\337\300\274\021\257L:j\006u\274*\316\017\275\251J9=\323\343J\275Y\213M=\326I\326<\002\016\n\274K\247\231<\374\3625=\344+4<a\311\267<h\257\337<\333&S=\335Yd<1V\335<K\001\3229{d\216<\363r\374<\010O\372\274\273\223L\275\302\017\027=\245\245\307\274\340\316\217\274\0050\333\272e\265,\274Ez\302\273\312HU\274\277\366\037\275Jt\260;`E\032=\214\033\362\274\277\351N\2755\252A=\023\004F\272/D\022=\036\215\350\274\246Q\261\274\n\0144=5\242N=\337\246\020\275&D\035\275\255\201W\275\346:\006\273\377\222\215\274\371\223\233<I\'\';\306f\320\274\334\204+\275<\216\016=n\343\001\275u\253 \275\363\365\321<3}\357<5\305\007;;\266H;\357\201\257\274 \371\260\274W\347\314;\355?3;\022.\237<\276\025\030\275\222[B=\221\250\203\274\265~!\274\220\256\t=\242\\(<oM\277<R\251J=\361\216\'<(\342F=\035\266\273\274\300Zh\274:\236S\275\250N\032\2758,!\275~+\250;\272\214\311<\277\005\255<\343\335W\275\210\032\031\275r\n\206<zm\230<\317\347\216\2745\265\021\275\222\274\225<\247\037K=\002\223\t\275\016\254\231<{\327\244\274\000\362\350\274%\367\307<\224`g<c(G=@\311\244<$\016J=O\331\242\274|\177\204<lb\205\273\217\352\317<\335|\235\274\324:\006\275`\335\341<\027\246\\=\315\210\224\274\032\377\331<\355\365C\275\324\266\243\273\361\320\r=\006\362\n\275\300\332_;\220\347h<\365L\210:\215\247\031=\266\371L\275\200\2568\275`\356\353<\320\217.\275\344\275\247\274i\231\026\275Bl\037=\210\352\270<\213|o\274l6\025\274\3024>\275\365\021@\274\022\233\224;\275(\275\274\234\367\353<:6(=\310\341,=\334\206-=\027\037K\275L\234\032=\207\251\230<\360SS\275\256\177\332<E\005\375\274A\025d\274HP-\273B\370\027\274o\026l<\376?\322\274{\213\233<*\237O\274-\215\364<\004%\221\274\235\306\352;\031 \007=\241\324\273<\337\337\017=\326\265\212\274xk\"=3J\244<\363\005\022\275\005z?\274\211\211\001\275\314\233l\274-pR;\341YP\275\357>V<\t\221\362\274\002\241)\275\331\336\"=9\317#=B\336\305\2743\360\037<\275\332\035<\022<\373<\376\226\216\274?\376\343\274?\300\003=\254\310\347:4K]\275\201\203\024=Z\2214\273\321\312\326<\276\335\347\274\337[E<\214J\344<\3573\225;lF\003=*\246R\275\001\250\034=\022\340B\275\240\025A\274(\217\016=\016\370-=]\346%\275`}\325\274\353\340\n<)\234\311\274\200~\001=&n\377;i\311\027=\376\371D=\372 \007;\023\"C=\212i\365<\371\343F=\323\376M\274\356\327\037<\017sG\275\347\322c<a<\"=\273\347\314\274x\026\002=jX\362\274\270\027\350\274x\245\t\2757;\225\274\255\357<\275\345\201\037\275\214\371\003\275\026\311Y\274$\252[\275]&%=\t\265\261<?\2366=\347HY\275\304\032(;\225\366\365<\320\3342\275\312\374\026\274\t\260G=\210\214\332<\242\361\307\274\340\200\341<7\265j\274P\340\027\275\017\277\213\274\253\230$\275\351\315\262\274\232\204E=\225\233g\271j\017\035=\362d?=\317n\202\274@}\027\275\371Z\211\273\345\207g<\334\2621=\025s\230\272\031\351\022=[\340\373<\376[$\275LX\306<6\240]\275C70<`\250\030=\033\362\266\273\351DB=Y@\'\275P\345\220\274\002^.<{\032o\274\203\211\352\2741\212\006\275\304\273\234<\211\317\025\275V\271\212<\255\005\320\274\357\221\016=ZJ#\275\250G\\\275\313\216J\275\321\326\034=X\024\362\274\r\231!=F\341\355<\232\363\\=*\001\317:\024\255*;;^E=j&\255\274\030\256Q\274\240\004?<\003@\215;\273L\206;{\345\013\274\323X?\275%\177n<\271>\207<h\306V=\332\243W\275\304\3707=\005\300E=\321\360\037\275\007\355==\347\3236=\r\\\265<K)/\274#\262\241<%5\351;D\211\005\275\220\020H\275\017\317\013\275\344\013\002\273\310>\001\274\302\266\\\274Y\221\024=R\316\240;l\034F<7\tW<\222\227\023=.46\275n\216&\275\355#\023=\355\r\254\274JI\033=Y?1\275\362:\272\272#&/\274\303\245U=\223\022\013\274\362\r3=zcQ\275\352/(=g\035\"=\371r\013\275<z8=\371\320o\274\364<8\275\326f)=\377%;\275\247H\000=*\341]=\324U\250<\277Z\265<Tj\326;\243}==\367\342\r\275*\333\007=s\227\214\274\375B5\275\275\247.\275p\210\036\275o\236\314\272O\033\233\273\024\232#=\304\241,\274\334\'\302;?gW\275\332\334\275<bH$\274\r\\\263\273\247\227r\274n\255\230\274s\2107\275\r\035\320:@dA=\r\356]\275\023\212\237\273<C\030\275\323dQ\275\210\327C:\371U\027\2755T\211\274p\213\241\274\275`\010\275\355\303?=\345\013\332\274\277\351D=\345\230G=\275\320[\275x\004\332<\007\3640\275W\362\371\271HI\355<e\205\010=\337\314G\275\255\234\245<\255\003O\275\246L\301\274V\272\314\274\276\360\013<\003p\030=\351=\010\275O=!=\205\"\013<\'\224n\274\227W\035\275\323\262v\272\210Q\022\275<\003E\275\020I\326<\001\272\337< jw\274\255Z\025=\352\213\356<\202\211\007\275\216\033\266\274\300\024\341\274\030\364H=D\0060=\003\256\010\275\020\035\016\275c\363\205<\t\235\357;\010d%=b\021[\275|\244\273\274\027u\214\272h*\353\273\313\024[\275\324\r-= Y\250<\322\207\032=\342\360F\275\322\244T=\350y\021=\013\256S=Cx\201<\016\354\353\274V\314\345\274\354\354\\\275\0371\311<\003$\354\274\026\3404=\364r\036<T\344\037\275\024\231\024\275\255\313K\273\353\354\315<h\256\314\274h\311S\275\346\226T=\262\225\257\2749Rq9\347\365X=\236\301\370\274\300@\324<\005\025\221\274\312b!=\266\003\222\2745\366\013=\303\205\315<Al=\275]\036\276<\241M\351\273\217\254#\275\024eW=\263;\377\274\326qf<\204\\y<\340\003\243\274\036\2045<)]\020=\010\236Y=\022\262>\275^\233\036=\352\305q<a\211\374<\353\034I\2750\304\013=\322\257\000\273;f3\275\264\022\007=\346\307.=\031\236.<\217\352\013\275\357<!\275\250\250^\274\312\230\314\274H\033P\275\367\267V\275\021(\204\274\367I%=\302F&=\220\2461\275\'\226\223\274\r~\003\275\244Q-=\272\230I;zt\007\2750\005\017=\010\355\013;q\234L=\361i\022=\022\264|<\243\351T=\331\231X\275(\304C\275;\300l<\310Y\252\274\340\016\327;\275\256\357;\\|o<\022\277E=q\"+=\373ZH\275\344\215Z=L\352G\275\327\nS=xf\n=\211fX=\272\310[=\013\302\252\274D\016\001<\376\322\003\275\343`#\275\013\032O\275\307\247!<\250\245Y;v\342\005\275\320!;=\220\231l:\263\2049\275\217\273R\273/`\265\274_CU<\230\322\235;\'\254\217\274Y\026\'\274B\333\200<|\035+\275?\206\354<\363\321c\272\300Q0=\014\315\032=\352\264\016;\316\224\221\272\005W\226\274\244\376\005\275\r\232\214\274\017\236\242\274\254\261\203<\232\315E\275\212m\362;\\\260o\274\034\377\367<\3174)\275\361\346S\275\377V\027\274\373\005.\274\351\024\277\274\200%@\275o%\265\274\252\327\244\274\030\371\350\274{\274\"={\332O=\345\316L\275\376\262\010=\021\302I\273\216Va\274s;\253<Y\247\273\2743\177\237<y\004Q=\203x\000=\262\007/\275\272\004T<\256\275\201\273;\'\256\274\333\2728=\006\337\016\275\362\033\250\274\022\331F\274\300\t\234\274\250V4\273\214\177\'<\021\037\272\273\016=\250\273\000\013\260\274&\264\"=j\003\251\274&\252\262\273\264\332\352\273\017\252-\2759\257\201;\\\004\377<X\211\023\275!\260(\275b\367o\274\314\277\034\275\253\'A=\365\324\001\275\256\332\260\272\376m\326\274\310\317,\274\021p\202<\247c\004=\345\250\022=.\222\034\275\276\017@\275\252\355Y=BQ1=\320!C=\230\3101\275\230\333\037\275\005\"4\275\203\231\300\272\350\004\022=\017T\205\274\225P\225<>\304N\275w\333\212:\271\344\033:?\3202\274g\376P\275\200\367M\275\234\2523\275\302!\341\273\016\367\t<\243\016\305;&\342\247<\222\343\033\275\210\201\244:2\326\320<JM0=\256\216\263\274;\321H=\024F\'=\202\265.=\341b\323<\315\235\223\274\203\357?=\336x]\275\010\366>=\320\240\004\275j\215\313\273\240,*=\223:!<he\037<\375\373\034=s\366S=|\207\236\274\363z\371\274\341T\n\275\232\217)\274c\320F\275\343\225F\275n\257\355<\344H\365\274k\352\200<1\370T=\337\274\023\275uV\272\274\212T\022\275\235\346\244\273B\277\370\274\240e\245\273\326\000\017\275\347\235\242<KT\003\275\220\211\275\274\016zY\275\251\025 \275\303}\032\275>\235!<\205@\271\274\273T\260\274?\353\240;2\223\243\274-*<=f`\377<b0\022=\351sW\2754\201Z\275\313\250\032=\211\257+=x\330\262\274Q\374\025=1\337\231<\225@\023<]g\237<\311\333;<\214\020K\274\210\301\205\274\271\014c\271\215\362X\274\374x\024=\226\317%=\2635\006\275\311\202#\275k\302J\275\361{G=\346\013d\273\325\350*=\305\324\022=\212\204\261<\177\324\353\274\260\2034\274\342\034g<\252\027\311<\001\371\260<\362\n|<\'|P\275\317\2355=\354\223C=<W\021\274^\347\r;\271d\022=!\361Q\274w\240\330\2746\260Y=\206*o<\005\236u\274\356\247\370<\244\261%<g\344Z\275\265)\376:\330\372\230\274r/5=\330T7\275\322\307\r<\024\346\306<\321\n\265;}o\372:\'\344\317\274q\276N\275\336\237S\274q<<=\253ZJ\275\005~?\275\376\034\302<<\2101\275\306\321~<r\241\310;\n\363\270<\303v\t=~z\217\273\022Sg\273\322\247\036<\215\333\342<\273u\n=\367 \351<\345i\237\2748\251\354<\r\0257=\027/H\275\252\345\215\273\247G;<\311\371\225:Bgv<\244RY\275\231\212\343\274\336\240\352\273\310\274 \275\301fE=\337k\302<J\266\007\275&\025\010=E2\r<^\376\020\275h\274\004=\364\302X=\0216\007=\225\3045\274s\321\204<\206\367\374<\217\335z<\341\212==S\323\231\274\005\216\023=R\230\'\275\016\273\304\2743\362=\275\363n\243\274\316\211\341\274\346\267,\275\335\356:=\3478\010\275k\rO\274\230\016\026\275&\302\025=\366k+\275u\333\225\273\235\261\027\275\360;\032\275\221\342\357\273m\206P=q\025\004=h\245V=\320/\006\274n\366\254<>\225\205\274:\221\244\274\334l\355:)\325\036=\216e\205;y\251\021\274\356B)<\311\354C=`\362\334<\350\nQ\275&\025\024;\242\n\322;\304\226\317\274\256G\230\274\377y.\275\230\317\224\273H\340\371\274\340\373Z=\247\253\242<_\316#=\210\3647\275^\262\371\274\353\223\265;p{8=7\216\360\274_\001\t\275\355\325\013=\241\021p;3\261\025<p\343*\275\227\264\034<\250c\003\275\331p\034=|p\232<\312\016\214\272\211\302A=\016\375\010\274\344\\\\=\241\264O=\2155\013\275\'\303\341<\260\226\377\274\037\2212\2754\344\370\274\312\004\365<\033\217-={.\217<y\325\344\273\241\253/=z\2704<v\302\t\275\233\205\320<2\254\263<u|\032=\373\214A=\000/\013\275[1)\273\363\026\036\275\255EL=\335\030\332;\020\226\010\275\371\3120\2759y\360\273Rl\013;\214&)=mp!=[A\261;T\331\242<\333\3724\274\"\344\333:\357O)=\337b\3648\0173\377\274\352\207`<\025\2247\274\007 \031\275\242\313\306\274\277m\013\275\303\223\031\274d\177\270<\240\240\346<\251\313\336;L\247\357<\264\256\316\274\365\303\016=p+\360<e]]<\247R|\273\n\032r\274{\203\207\274N\237\010<&\356\332\274\354\220P=\362\211\376<\025\351F=\030}\016\275\374\247F\275\"i\236\274\355=\327<B\364\343\274\005+4\275i\253\277<\345\210\376<\031\213n\274\332^\231<1\360\267<dV\027\275-C\227<\305\\\224\2746\352\036\275\177\321\314\274\310G\327\2746\310X\274\303X2=V\227\335\274\035Jv\274[&\246<\232\361\320\274\335u2=d\337.\274\274\304\324\273\033\301\327\274\322\010Y\275\270\250\351\274\372^\234<H\023\246\274Io\266<>\367W=\305<\344\274D\310\006\272\270RQ\275%I\002\274\205\023\002=4X\377<\325\353T\275R\203(\275\337/\237;\227\270\000\275\362E\334<\262ks\274k\250\204<\337\373Z=\304\330\313<\204\273\366\274\254KF<\r\201\231\274\346\rC\275\034\2439<3Q=<j\nb\273\350Q\001\274\220\3237\275\361s\204<\014\353\225;\025}I=\354 \240\274r\032\323\273\2311\324<i\250\212<}\337s<\250=[=\235@\354\274\350P\024=^_\334<\037\316A=\013\243K\274\2172\344\274\320\313d<\227m\237\274\356\2563=\363\352D\275zX\375\273\226\351M\2755[\317\273\\P\227\271Qn\017=\333\313$\275}\2511\275\356?\300\274\000\3579\275GN9;\271~_\274!\313\203\274\351\201\231\273p\243:=\230\000\303\274\270m:=)\306\260\273\353\275(=]\335X\275\254x\215\274\277V\233<\347\271T=E2\313<\3071L\273]\235\013\275Yk\024\275\307\371\274\274\316\267\204\273y\262\215\273\035\005\307<\366\034\270<}O\253;\234\324\t<U\0207=$\226!<\007\347:\275\344\204F=$\230\256\273\225tY\274\235\367I\275\034\267\235;\036r\311\274\231\354\t<\350\363\352\272c\001\337\272\231Z\361;\346\343\201\274?\327\010=\334\034Z\274\377_\356\274\262\376\t=\223\333\310<\364\357Y\274\370\361R=\254\010M=\327*#\275\232\0076\275S\313V\275\304s\t=G\222M=\370Q@\275\316\372@<3l\330<Y\375\371\274\301\3319;\312\250K=t\317W\275\004\246\370<\267*y9\202\"\270;\360\007\037=\321(\260\273g\327F=T\'\273\273\207\307\377;\377Y\032\273F\250T\275\374\254X\275\016/\017<j.\261\273\201\243O\275\255\306 \275\225\333\370\273,\356\264<n\3259=\231\360\276\273\363(\t=o\262-=?\244\\<3\352\214\273a\3137=\345\377\"\275f>\306<\263\317T\275\002\233\363\273k\372\035\274>\302\374;\322L\r\274\353\023\214<\324b\353<O\t\320;\330r$\274\222\200\323;\250\2208=\323\316\226<\250(\371\274nA\224\273\025\367\010\275\310\204$\275\243\367%=p\225w\274\016\201#=6pA\275\315\222[\275\305T\256<M\322\366<t\'=\275d\010\217<\311uO\273\315\316l<\320\022\221;t\355\377\274\276k\006=%\305\336<\370\240L\275/\223\024=\016vC\275N\002 \274#\375\277\274\036\002V=\214M\\<S+\316<\360\376\373\274&[\021\275<\254$\274\274iR\274$\026==\265\2358=\330\r\277<\225\327\373\274\261j\351<q\'?\2756\367J<\307\301\344<\025\313Z=\'\367t<\030!N=\320\353Z\275\236\034V=\300LI\275\314\266Z\275\315\035&\2758\304\307\274Z\005\317<\254x]=qX\226<=N\300\274\244pM=m\263\014\275\033\356\247<\016\006A\275\317RQ=7\377\\=\362<\365\273\2324]=B\200\275\273Kc\024<z\277+=\323\350\013\275\255\020\022=\177\250F\273\243}\201<\305\351\265\274aF7\274\201\340v\273cD>\275h\257N\275\n\033e\274\342\213\006\2758\347\336\274ec\241:\200QO\275\222\205%=d\331\025\275\340\030\337\274N\333\267<i|K\275\336g\013=\212\217\327\274&\0361\275\253(W\275\1772\255<\2726\330<\035mN\275G\306<<\210\037C\275U\3505\273\205\377\027=H<\007=\322\342>=\245t\211<\307 \310<\357{J\275\206\271\241\274\377\026!=\032\273\021\274$\037\177\273(\351*=\265\030\021=\207\034U\275\362}\322<\361U#=\002NI\274N\314)=f\222\211\273_\035\333;\370\177O\275\232\377u<\033%\230<\tt5=\241\241\245\274,\327)=\311\372\223;*t~\274\207\232\247;\026\251\022=\305\014\340<V\366\005\275&\267r;#z\213\273\022\273$<\371K\006\275\206\220\013\274\351\375\364<\223\246.\275\0035\350\273Hcs\274P\377;\275Xm\031\275\335\255<<\356T\020=L\317\\=\227. =rJi\274w1\250<z\343\'\275\340P$\274\\M~<\204\251[=\345\272F=\310\276X\2752\214\002=U\222\337<\245d\032\275\005\213\032\275\321a3=!]\247:#\030\333\2745aK=Z\223\022\275!\351\007=\347b\306<\304n;\274\331\333\025\275\345kD\275d\210A\275\354\030\010\275;\021\335\274?\007\007=\3443L\275-H\365\274?=Y=\214\343\006=\034\362\t\275\220\022\212<\245t\376\274\2420T=\357L\350\274xKK</B\223<wM\370;\371AB<s&!<\"\277\211<I{\002=Y]\002\275\314uK=+\361\262\274\364+\340<6D\340\274\021\206\004=\327\257:\275\335*\t=O\272\030\275\257\200p<]\014\261\274\213X\354:\234\2055\275\224\367I\275O\025Q<\347&\t=\216}!\273\321O\347;k\0258\275\351\037C\275\253\311\002\275\025!\024<\354\300\003\275,\231\027=\'\224(\275F\2325\275\351\2149\275Rde;\214\245\320\274\020,\026=\367D\267\274\266A\034=%\253\021<h#\256\274\036,\227\2739\010\264<]\376X\274F%\005\275b\306+\275\036\202\001\274\205\332\340</\365\030=\204-5\275Q\364a\274\265\275\235;\362\253\362<p\357)=\370\310\001=\355\237\005<n6\361\273\345mL\275\032\373\323\274\336\304E=B\307\234<\374\222r\274\231fS<\216\3703=b\244\322\273\0347\027=h\030\005\2744\270O=)<\200<\354b\177<\275\235\234\274x\340\243\274\371\311\037\275(\305?\272328\275h\n\355\274#W\005\275\263l\226<\213\370\231<|\247\226\274\203n\231\274f%\216\274\310\0030<#LJ\275vMO\275T\371\010\274\353\n\342<\004V\032\275Y\006\265\274\001[\321<\340$\217\274\013\3751<B\026J\275\267\r\014<\024\365\000\275\363\007\025=\253a\013\273\374\336Q=\\\003N\275\316l;\275$\345\327<\037jx\274\010\374A\275\371\027\376\274\0208D\275&k\254\274\243\017#=\005HA=\333\013?\275m\232\005\275H6\021<\341\025Q=\372\267\241<\262\240\360\274\227L8\275\357G\342\274\002\004\330\274\tJ\326<s\314f\274=\343\357\274\236\365N<\243{W\275\352\257r<!\007%=C+\025=W\261\335\273\\\2136\275\305\311\203\274\206B\344\274\365\201\363\274.\2215\272\226\033t<\225\237\316\274\261\242\017\275+\234?=\330T\311\2746v\255<(\227\266\274i\251V<\016\032\035\275\317\177\026=\326\364r\274\210!$=\217\336\211\274\355\262\026\274\226\355g\274\025\260\207;:\372\355\273\303I9\275\256\241&=N\210\002<!\034N\274\246\035O<\220\372\210<\356\024\\:\0134\220<\371\373\027=\2437;<\214\003\244<\304\311\010\275\321\222\310\274\254T\312<\016\023\324:\335\272R;4\220\344<\026NX<\3519\027=\344k\320<+\345\375\274\233\274\301\272\356\020\301\274\305\006D\275\234d\307\274cK\206;\305\r\342\274\026\372\204;k!\000\275\242\321\236<e\325\n<\322j@=\030\332\021\275\344O\r\275\267E\270\274\r\243>\273\252\316\\\273\006\242\003\275kDC=\327`\245<\274\276g\274\213\334\027\275\230(\030\275\273\007\021=w\234\265\273=\334R=?\3042=^D\000<\356\363\031\275\246\363\022\275\223\331\275\274\t\206\267\274\\K\031\274\016B\021<9s\"\275=\313;\275\251\336\254:\347\355\317\274&\264\"\275Jm\247\274\365\241<\275\311\217\034<5\262\336\274\347\2115\274\265\367\203;\275\315\320\273\225>\215\272\364S\007\275n?\033=\221|N=q\2115\275o\211\037\274r\233(\275\344tS\275\034\204\213\274\250\202\347<\002\342\224<\331\026\016;\333w\362\274\313N\000\275\203\362\223<\247\0208=\250/\221\274\325$\302<>-\027\275\230k>\275\262hp\274\217\0026\275\2219\361<\335\213G<\027\325{\274\202\r\323\273\200KY\275\334\024\362;\300\365&=7!\212\274\257\']\274\016\245\234\274\010\016\343<\277\273 =N_\277\272\352\037\026=\212p\236;\343\022T=\360/\256:\300\377\211<\273\262\014=\023\255\300\274#I[=\375zL=\330\037#\274\210cz\274\225\000\323\273r<\005=\004\222\346<w\227\335\274\276\311\020\275\230\333*\275\243\024.\275~Z<\275&B\261\274\351\225#<\214k1\275\371\326\"=u\211/\275G_\262<\005\301\264\274\\\300H=\034\365\350;2b\021:\363\036\274\273\274\273\016\275\2111?\275\014K&=\020\354?\275\035\344*=\033f\234\274\365!\026=\320\003E\275=\377)\274\330!<\275\004\2659=\313\304\n\274\rh\334\272f\252R\274bM\025\275\375\221s<\266:P=\246\014\212\274\357\376\365\273y\211\023=;\337\035<+\006\032=\230\205%<@\212\335\274\334\340\030\273\335\255\332<\0339H=\353|H=45X=\233M8=>W\371<\367+P=\217~\020\275\251\033`\274[\223\n<\200\345g\273\324aS\273\014~\003\275\323\003E=\006\225*=M\3173\275lg\223\274*\323X=\321\247\313;\312\322\032\275\346\350\365\273S\355{<\342hJ<\332\323\035\275\263\352\"<\217/\355<\214!\324<\256\217R=6s\376<\243)$\274\261\230D\275g\'\347;N\210\035<\364\217\342\274o^\013\275a\237\221\274F\026\"<\255\311\r\275\235?\270\274\201\037\205<N\376\030=\030\\\357\274E\263\227\274Lh$\275\254>8<r\365\334\273\372\335\357;xj$=\266\2445=\263H\034\275\231+J\275\265\312\352<-\236;\275#\016/\275\374\223\335<\241.6\275\003\336\242;\253i\265<\337\014Q=\245.]=\330\365\036=\227\007\260\272\274ob<\267\202,\275\252X\r\275\330\261\320\274\247\244!\275{]\302<b\001\026<\305\335\240\274\272\365\247\274\2666\006=\2157\273<\2329\3039\003\352\026=\205M\217;\242\241\341\274\026T};\310i\221<\030\357Z\2742\220\315<h\334\014\275\364~\331\274\004t\312\274\254d\005\2754\204\234\274f\267\005\275\347\372\221<\370uE\275.\253L<\264\303\215;\035B;=L\337\340\274\223r\364\274\265\353\345\274\237w\307\274\252\231 ;\321h\217<\210E\"=\214\263\361\274\247DE=`\207\254:HqN;\0327\226:\236\326U=\210\341E\275Z\353\206;@\300\217\274\035\236\250<\3339\317\274\220H\027\275\357\215\336<\027_\'<\215\331+\275O\252\334<\311S\336\274e\210\004<\031mI<o\274[\275f\332\371\274\230\323\021\275\265\216#<\266O\360\273:PX=a\207W\275p\216P\275\034\213\312<\323\327\222\274\370nl<\334W+\275\226\242\\=h\351 \274\307`(\275\241WP=\236+2=\200\374\005\274l\2670\275\0015\032\275\000B)=\241\242\002=\334vP\275\203\020%\273\007\342\235\273F\306\367<\200#\352<HE\002<\237B\235\2745r,=\2267!=\020w(=\265\356)=)T\251\272\341\276/\275mC\277\2746!\035\275\330\252q:P\r\236\274\331\217s;\014\321\265<\334\301L\275\272\024\013\275\272\335I=Q\305\014\275\033\322\276\274A\027 \273\216x\001\275\324\247*\275\264o\010\274\243+3=[^\334;\300\341\363<3\274\212<D1F\275\263\346\262\274\364\024R=l\243a<\215\246\000=\370\206:\275c[\361<U\374\217\273\212\024^;\013\177M=@\225&=$z\223<B\304\007=\224\351~<HB\"\275\366Z\037\275\355\231\226<\334\354\353<\345b};\247\316.=\260Q\223\274r\"\r=\302\001@=\207\250\217\274G\301\300\2744\243\355\272C\370\013\274\343x\033=\260\367@<Iz\002=\323_Y\275\341=)=&\\<=ynY=I\345\360\273y\227\204\273\246<\260\274D\273v\274\350\300\242\274O\300\034<m\261\310\274q\356 \275#\267L<\000\262)=<cl;,\3243=Y\234\251\273\245\003[\275y\235\206\2741l\337<\227\371R<\007O\205\272YP\215<\017Q\276<\255@><\210\326\220\274\233\324\333<\214O\352\274aP\226<b\232\261:tA\007=\001\345f;\200\264\316;!\243\'\275P\326\035\275\332\332\245\274\317\354\\<\377\324\025=\204\'5=\341\265R\275\224\304W=,\361\035=l\201M=\226\276\277\274\215*!=\3675\255\274}\000O<\342t\253\274\005\267)\275K4\026\274\023\262\352;`=\333<\222\333\260\274\244\n\001\275\232\320\260\274F\344<=\376B\030;2\0315=\270ur<\214\356\312\274-\002\000\275\306\004\273\274\323t:\274\306\0105<P\014\337<\304K\327<\375X\377<\364\266\212:\3309\006\275Krn\274\3030\221;\231#\035=\226\023\036\274\267y\t\274\373A\374;,\247[\274!\266)=\271\324c<\220\025?=6\204L\273\346\305\244<k~\014=\270R\366\273\017\351\014=\373J\371\273_\266\366\274\263\177/\274\372\377\321<r\205\246\274#0K\275\030j\262<\020\277\t=\366\365\022=\224\005\254\274\211\243\032\273\002\324\261\2741!4<\'\212\354<\357\004M=\225*\3119\320\354[=\306^)=Df\310\273\245\317==4~\267<\213V\327\274\307V\034;\304pM\275\025\004\225\274\355\320D=\226C:\275\232\322\247<b\220\246<\027\363^\272\204\376\016\274\270%I=\237\365C=\226\342\333\273+\236\037<[\345\216<zO\020\274\243,8=\214\374\223<o\t\017\275a\030\347<\304\360\200<\234=\313<\326\274.=\n\r\270\274\331\226\257<\301\010\276\274\"\327 \274@\276\255<\303>M=\r7v<M\037\025=\260\256\033=\325\354u\273$\262\262<\352C:\2752\225\251<\257\\+\2757e\206\274\273\2554=+u4=!\356\317\274\346Kj\274*[%</A\324\274\372e\226\274\376\237Y\2758+^<\346#\n\275j\023\032=F:\\=\0337\346:\001w\030\275p\343^\274Vd^<\343m\230;\251\263\031\275\312\305\361\2746\\\236\274\333:5\274d\221 \27537\376<\034.A=U/5\273d\rA=\246\000\202<\333/i\274\277+@==\340\030\275J\2511\275\325\031M\275_\273T<\352\246\025\275rS\345\274$\220&=\304$\206<\273\303\211;\370x9\275\260u\021\274\377\377Z;L0X=\347\\\361\274xo\234\273\334\323\276<\365\353\320;l\275M=r\206\247<M\375\030=M\311;\275\\\016\\\275\343\271?\275\242\376A\275\335\206Y\275\005\332\344\2748\343$\275\205?+\275Vf\253<\303\301~\274\3463\343<\204\257v\274;\354\372;:\255\310\272\232\266\201\273W7!=\347^\255<\214\211Z\275\026\377T\275\373l\367\271!\005\343\274\350\323~\274\037)\002\275i\347G=\272\271\022\274\014\273\252<\031\356F\273\276\013\000=\010c\315;\312\346\343;a\344\003\275\3669\206<#.\335\274/\332\331;\273\314]=\305P?\273\322\340\210\274\261t,\275&\207\252<\326\035\254;\264F6=\006\270\017\275\005\016#=\271\035\364<\342D\003=\210\226}\273[\016=\275\356\007\022=\307\216\010=\033B><:\274\024=\271D[<\324\360\337<\334\353?\275\207j\177<\342\2779=\003\315\347;\340kC=\001\327\t=\n.T\275\232\020U=]\t9\275\275\327\373<\351\006\013\275]wF\275\347]\023\275\373\340\261\273\245\234\027\275&\231V\275\026\325\227<\327\253\226\274\355n\301<\3243J=\361\331:\275\340\343`<\332\'l;Q!$=I\326\003\274\232\305\267<\250M(\275-\377!=\t$!=\211\036/\275_\256>=\250\361\034\275\337\2522\275\377B\260<\277\233=\275\366$\302<I^\361\274e1\010<\206\242\326\274a\321\322\274\0369\331\2719n\024=e\231[=e\262\004\275\230r^\274A\202\024=\243\033\t;u\233d;\200\002W\274\024\t\207\272`\253\251\274}\007\024=\030\026\035\274k\361\032\275bUG\274\230\205\362\274\010b\346\274q\020<\275\017\363\032=\331\202\227<\n\270\030=\032m\263<R+\204\273\334\202\363\273\\\236C=\227\317B\275a\360\022=UUr;G\")=\311Y1<\033B\336<\323\263\014\275\237\007N\274`9f<\304\022\332<EA\331<l\322\202;\341\2036\274\030H\242\274{\262\307\2735G\313\274\222\255\267<\253gM\274I\224\245<+\316\006=\377\027\341\273$\204E\274\0042\'=lAL=\214\346\021<[/R\274\021G\213:t\337\211<\213\314\212\274\244T\366\274\221\327\303;Y>+\275\222\343\371\273\244*\343<O,M\274@$o;\234^[=\007\331$\275\"\301\023=D\320;\274\2118B\275s\374\315\273\216\341C\273y\370Y\275&\352\313<\"W\020=1@\n\275\034\205\202;\227\236Q=\227\301T\275{\021C\275\313\'[=\255*\025\275\301\375D\275\275\023\216:\344\321\n=;\2577=z\266g<\311\317V=\021\236R=\302\235!\275G|G=\344\036\026=\375\263\021\275L\307\277\274L\017\206\273A\327D\275o\353\2039\342\202\020<%\372(\275\3624B\275\351(\313<\014\2165\275u\350P\275,L\025=U\316\213\272_Y\002\275o\247\330<q\261K=5L\001\275`\317\032=\240\210\000\274\314\243\r\275\302>.\275\035V\210\274k\312\341\274\271\331\035\275\344\307\343<\322V6=\03758\274IVh\273\013Z\036=\345\230R;8\2044=\206\266\002=\223\330&<OD\246\274\033\244X\274\321\026\317\272J\255\026\275f\272Q=\n\232\330<!\257,\275\302{ \275\006\261\014\275\346\206C\275\301\313F=K\245\350<K\212O\275(\332\374\273\230\313\353;R\314#\2758M\321\274$\201$<\000\031m\273ZLZ<2\tP\274WZU<F\357w;\364\332;=\031\340\375<\031\216[\275E\220\374;\033\033T\275\342\222K\275*0;\275&1\034\275J\316\377\274O\261\221\274\n\037#\274Jl-=1\216\\\275\257\211\205<\276\303\310<\240{\264<,\215\351<V\303S\275\332\303+\275\203\317\205\273\237*\207\274\226\362\000<[*\000\275{\350\222\274\345\375m\273\312G1=7\016L\273\242\207\301<\310\006\'=D\217\020=|\262\314<\320\211\202\274\302\352\366<\366\232\013<\001)\253<:\202\344\274\237<\"<\274\002&=\002\214\032=Z\203m\274\236\244z<\201\227Z=;}o\274\236\002\301\274b7\232\272\264\022\304\274\275V<\274\366[\007\275EHB\275B\320\367\274nd\376<^\327U\275\376\271/\275\225\355W\275\376^>\275\337?\322\274\241\373\006\275{z\262:{6Z=l\215\345\274D\322%=\334\312W\275!\235\014\275\345\333\254;\n\303I\275\252\265\014\271\n\003\354<\353\205\247\274x\236O\275yb\310<\225\346\331\274OQ\"=Q\313X\275\210\256\\;\346d\234<\213\223\307<\357\2505<u\362I\274\002\177#\275\266\2675=\240,6=J\0238\275\234\273P\275\\\324\300<\334\267\320<\367\307\\\275\360\rb\274\372\306\326<\354\331\347\274\334C\316<g\231\245\274\320\031\000\275\037\203\007\275\317\377L\275\322\315K=Y\r\236<,\t^;.\t>\274\256\211\371\274\010z)=\213\n\337\274,\352\017\275\027\350\240\273\215\026T\275\027a\266\274N\024c<\206\241\274\274L\305(\274H\2621\275\207\354\004\274M>\203\274\007\271\243:\352\346\034=\226\262Z=\312\266\217\274\315\024U\275g\227\223\272\177 \024\274\272\200\'\275\243\230\211\273\226\217\234\274\036p;=\014<{\274\360\222\313\274\007\036\313\274\236\343\200<\213\337=\275\014\314\022=-\2625\275&G\251;\344\310>=\260\216,\275.\200W\275Z\360\263\273(\267\033\275\267\304K\275\236\3735=\255\322=\274\211[\323\274@o\320\274E,3\275\362\353\002\273v\274d\273\3442U\275\013\2728\274 V\306<\274\266\t\275xBH;V\\1=\031=>\275?\274\352\274(\246\004=\226\366\023\275\024D\306;\003\377K\275,\240P=+\2536\273\3467[\274\271\310\026\275q\216;\275\342\265g<d\225b<U-\247\274qOY\275\t\022*=\3424\322<1\271\007\275\235\253\245<\005C\301\274\365\321Q\275\362{7\275~\231\240\273\335\231\357<\032\257\206<\205\3072\275\035\356P<\031(\316\274*\360\347<%\342\206\274\332u6\275\177\356\213\274z\327\347<\211\266\355\274\000a7<2<\014=\373\377U=N\234,\274F\314J<\342s\004=\006X\303<)84\275\235s\256\273\'\322\022=\307\013G=2\tl\274\253\246\016=\024a5=\014\032O=L\300\\=X#\337;\016\212\002\275\026\317\003\275\002\271T\275\264\200F=\\\r:=\365D\007\275\"]\270\274\353(\202\274\372gU\2758\340Z=#\344*\275vP\333;?\006I\274\244\\/=l\324X\275\327\305\362\274\026\354E\2758\3203=\245\271:=\305\360O=\373\0138\275\231\031#\275\360\201\254<6%v\274o\266\032\275\215U\233<\370\342/;9\255\200\274\214<\262<5\202.;\200\232\036\275U\350%=\264f,\275m:Q<N\010\024<\220w\221\274\245v\222<\201kP=\240R\271\273Hi0\275\305\240\004=\253\017\305<\264\261\373\273Nw5=\n=\225\274(\240<\275\227\302#\274E\331\233\274zG[\275)\222\024=[uJ=\276\026W\275\223\211\250\272K\214\362:\025zZ=\027.\037\275(\2349=\301/\023\275M\004\233\274/AB\274?\2615=\265\n\370<\023\031\014=\365c.\275\323\037E=~UY=A<>=\304\332Y\275\243\037Z\274W\352C\274i\244\207\274\351D\002=\213\026\247;t6\001\275(\376\005=0\237\227\274\212,[=\343\377\227\274\347\201S=U\376\030\275\3140\353\274\207\032.\275\232{\350\274\300\307|<HZ\233\274\254\320\330<\013tA=?sR<i\023\323\273\'\224\311<\t\261\003\275\275r%=\300/\n=\311p\007=\253\202\352<f\270\354\272\302\203\023=\250x4\275rP:=Sd~\274Z`?\274\257\204A;\317\336\024\274.\301\267<\241Y\205<D|W=\037\302\244<\214\275L=\267\260\023<\245\276K\275\tY\010\275\221Bf\273\341\377\322\274\302!\323\2746Q\333\2744\322\273<{\302&\275\345#D\275*\"\036;\226\327M\273\223\347\030\275\"F\257<\331<\013\275\301\000\350\274\023`,=A\336\013=\257\366\001= B\014\275\355\261V=\303\n\215\274\356\217\260<\210vJ=K\242\013=3\217\205\274\014E\001\275\251\331\225<#\305\342\274\010\320\306\274G\274\003\275(\277\022=\'\301\037;\373\016T=r\035\324\2746\025I=\327\273\'=j\257\367<57\023=\371 ,\272N\324\036\274\230\264\315<}.S=\241{D\275\337\224x<g\343N\275\307\002\217<\334tU=\266\375\367;\'\215X=\007\322G\275\006\205\033\274\243n)=\375\3044=/\234\000=\327XC\275\351\242\345\274\227\3172=_\026\"\275J\251C=\342\324\024\275\303*U<-\242\032<5\246S;\246\330\257\272\034\2414=\031\326)\275\344>\315<t\374\021=\241\333s\273\222\222Q\275\345\023\217\274S\003\023=\206\315\251\274\216\024[=\010\\\330\273\253\203\264<N\'$=\200i\324;\342\331L;1\207i<\2441\034=Y\010\267<\350J%\275\016\227X\275\343\207h<\301\361\003\274%#[\275\212\3430\274\261f\326;3\212\032=-C\200\273a\364V=\2059\366;\340\372/=\246b\375<\325\010D=\325\227)=\355\037\014=\001\345\327\274\311\372\252;b\343|<\006\240\213<\033F8\274\275\323!\275\304\007\377\274=\363W\274\340\021/\275\243\0377\274\237\031\305\274#\256\022\275(l\241<\270]\242\274bVd\274h{B\275x\301O\275\205\033T\275\031\236y<\245\001\300\274|\267\242\274\224G\243\274%\267\013\275\260\321\376<E\270\230<-\307\330\274\004\311\010\275D\026\224;\336QC\275m\213I\275U\022u\273h]\315<v\022\010=\350\026$<\000\246W=\030T\024\275\354\251\000=\211(E=\215\310\316<\3342\347<\224,,\275a{\365</5\367\274\376\003\024\275\210\341e<\007x\200<@\237\377\274=\2616\275\026 \340\273\"ZO<\020\344#=L_[\274\224V\177<\237;\021=n\215\211\274\305\371w\272\300\303\t\275p\272\342<d\372\222<*\230\210<\312\272\343\274\202\346\034=>n\374<\201\232\222<\377p\316<3\343\266<\352}\376\274\345^\201<\371\274\275<\356\221\016=\t\216\026=I\034e<\312\354/=1\300\203<&d$\275\244\004B=e;|<\225\230e<<\n^;\333GW\275b\243\036\275\202\370&\274\033\211\260<\234_\212<\354\020\317<\031\274\017\275\214\031$\275R\211\037=\216YJ=\002]\'\275\245$\303\274sC\332<\346\246\205\274\355\372\013\274h\273\006\275\301\326\013;\312\351\362\274\251<\002=$)P=`=\351<\342\363]=2\331\221\274Xm<\275\360\014\t<\216\273\002<l\030\"\275I6,\275\006\246\031= \334\340<G\367\237\274$\030\004\275\344\353\201\274\010\257Y=H\274\244\273\024Z\307<\361W\266;$\rP=\021\247$=Y\352\373\273\362\272\'=\256X\377\273(\217\027<\214\337s\273\340J\260\2749-D==\330\313< \310Z<rO@\274\035\224A\275\351#\247<\344\357\025=\217F\312<T\311\032=\252\221\242<\270\3649=\312\277\327<ZJO:OH#=\330\341\016=\021\306\327;\035\020\251<WQ0=\331\014\373\274Cn>\27421\327\274\0330\300<}z\243\274\256{\200;\003\224\020\275JG\236:\307\030D\275$\036N\275\003u\000\275L\031\325\274\001l\024\275\010\306\206<^\321+=\320\251\n=\266\350\301\272\200\246\034\275\313\3457\275\363W0\275\211e9\275;\037\307\273\253\372K=\306J\214\274\372\007Y=\355\323u\273\005\354\347<\376\316\205<l\364\221<\250\314\347<\235\327\r=1\347\033=f\211\027\275\224u\245<\257\253\014\274\225\333V=\372T$\274\231\267\333\274~[I=,4:\275\035\214\034=\354\010\362<\376\313-;\354\007\262\274V\375$\275h\001\333<\025\031\264<?\275G\275#?[=`\246\336<\n8\376\274\035\"\357\274\021\304\000;\203E\223<X\037U\275Q\275S\275\205\366/=\245\321\340\273XP\250<\201&\032\275\312\256[=\300\314\303\274N\275:=\333G\324<\334\264\372\274\203\372\234;z/D:\"\022\004=\010\322;\275\235$>=}\311\227\274\255\013d\273_&\010=\262\221Y\274\2069L<X\267\257\274\276\177M=:\373:=t\220\326\274\026}\314\274<\322@\275W\266\274\274\374\215P\274s\001\235\2749((\274/G%=\257q\332\274\214\034\241<\214\222\360:@>W\275\335\325\364<WT\371<n\277+\2756\007@\275\301\350$\275R]\006\275\027\321\232\274t\342\013<4.\036<\006\325\021\275\207\004<=\036\236\224\274\245\337\014\275b|\332\274\375{\335\274\216#\035<\217\214\332<\372\207\242\274~\322}\2747\262\221:\310c>=I\230\344<B\002\307\274\333\245\315:x\243\265:\321\353\027=\276\234\021\274\202\305\007<.\357\335<p\324F\275?\022\252\274\371/\271<w\202\214<JpU\274%\023K=f|\330\274G\230t\274\006\267\334<\013\226*\275\014\347\t=S\217\201\274\201\317\260\274I\330P=\333\327\237<-\2321=\375\031B=\004\3671\272\003\340\034\275&s\224\274t\"\332:\347\\\335\270T4\345\272\253\014\201\274\341\214R\275\250%\271\274\275>J\275\224\217.\2758\273:9P\2557\275\242J\n=\027\201\004\273]\337o<JYR=:\350\001<qI3\275J\324\017=V\217D\275--\355<\327\304\202<\357+R\275v\nN=\312\216\325< \247H\274r\237K\275A*H\275P\200[\275\274\236\253<\215=\r=\024U\006\275W\356&=\202+X\273o@\307\273s\223\222\274\356\245]\275\330sp\274g\331\203\274\264\223\325\274\376PD\274\340p\331\274@\030F=65F\275\251b#\275-\004<=\3033\265\273\376V\310\274W5\343<\322\315\371<\305\261+<\022\333\223\273\341\213N=\261a6</JM=t\231*=\247\214n<\247\234\337\274w`\366\274\323b\340\272\244\301Z=x!*\274\2259y\274\353\001;\274Td\355<\350\340\317\274CT\345\274\003}r<*\216%=\250\361\t\274\301\006;=\357|\336\274\342\030\224<\370m\376<1%\320<\307\026\300\273\001`\022\275U|G=\363d\026\273\016\276\226<*\216\323\274\351\256\002\274W\366V;dR?\275wR\347\274E/\030=\367\361\030\275\311m\347\274o%$<lK\270\273\210D5=\327\2140\272\033!\241\274\021*\022\2759a]=U\027M<\257\243\n=\032\302F<\314\266\031;6\207\037\274\245^q\274&\241.\275]\031.=\036\2212=\317s\310<\232TZ=\265\351\211<V\227\312<b\250\025<_\0358=&VE=\305<g\274\305\261\031\275\203@\355\274\302j\001<$W\024\275\275\220\t=v\225\246\273\221\002L\275K\223P=\373\217\"\275l\343\272<{\340X\275*\267\275\274\2779\036\274\017\342\013\274\212\330\027\275H\273\007\275\252x\215<\216\233\025=3\221\002\275\342G8\275\313\227E=\314\344V\275\033\231v\274Tp<\272\241gG=\245=,\275\313\3440\275\350\"4=PZ\006\275\253^`;\227\261G\273n\210W=\315\272r\272\315\032\232;\304B\202\274\023\023X\275u\036\276\274\223:\\<2\030\014\275-\230B=\247*\207\274\001\222\037\275`T\302<ms\243<\215N\026=\000\3554=;\221\020=\357\306\227\274\026\252\010=\360\3114\274\033\207\321<\027\n\014\275\375\017\025;s\256\345<\000s\200<\225\026\371<\006\224\254\274\234\n\276;*\272\266\274\007\343\206\274:S\265\274\241\027@\275\256\033\016\275\020\230\36792\323\014\275\201k\327\274\305\002Q<tL8\275\313\222D\275F\342\232<2\013\217<m\255\031=c=\026=BT0\274m\013\003\275\332\004\n\273>\213.\275!Q\322:|\353\322\273\324X\300\274\262\253\006\275\325\256\010\275\366\333D<;\231\352\274\350\364\330<\032`Q\275o\034\304\272D\275T\275A{a\2745\227\312;\020l\240<+\330I\274\320\342\n\275\313\327\246<[N<\275=\2512\275\377\235>=\032Tx\273C\325\315;h\023\"\274G[\221<Oj\231\274-\3363=\305\270\347<\362\264\264\274\005\346T=\025Q/\275\027\272I\275W\277\253\274\220fh\273\325kW\275\346\247\376\274\301\244Y\275\001\246\216<O0/\275\017l\233<1tF\275\024\204\3129\265\010\354\274[f\370\274S\301=\275a\363Y\274\346\260 \275\te\r\275-\257\224\270]\t,=\tF\322\274\224\225\367\274\355\250H\275[3P\273\335i\210\274+\3700\275\277\313Y=N\002\213< ,A\275\226\334\035<\310U\364;\251|\206\273u\303\"\275F\322\305<3\265(\275e\002\221;\200\235*<\366\374\306\272\326\266\002\275\034\221\004\275\277\204\320;\224\227\310<\366_\202\272Q\3776\275@\010L=Iq\252\274^\230\033\275\323^I\274Q\001J\275\322/f<\233T\253<\206\031:\275 E\366\272m\253G=d\265;=\032\203D\275\353\014\347;\202ap\274\206\342@=\207\301\310\273\260!C\274\222\2554=(\372U=~\005\031\274La%\274~\031C\275\301\217W\275\326\2672=\250\367K\272\274\001\315\274\033\271\362<\337\306\330\274\206{.\275\233\302\370;\276_\352<\213rI=\253}\013\274\241*\204\274\352\220\r=@\325\307;\274\035\203<\\\221\021\275\276\271,=\272\343\031\275\310U\367\274\356~M\275I\275\346\274kX0=@\220a<\006\317\367<&\240\347\274\240\220#\274\272z>;\355\214\242\274\212\3103<\264^\005\275\257\324\004=\325+\303<\315\237\t\275\302A\3219s\021\036\275\371\034\017\275\317pQ=\3635T=\317R\237\274\ndC=\032\027\334;o\271\023\275\224\377\361<\251\374$\275h\265\024=j\243|\274T\271W\275\212\007\026<\356\314O\275\273B\250\272gK#\274\205\021]=\302\271N=\247\251#=\351IA\275\305$\246<\250\323\312<9\201[=\354\000\366\274\215\t=\275\244\0077\274\300\2424\275\326\033\241\273\010\013\225\273O\356a<G\2037=\341k(;T\271\214\274\n\330\362<\245\300\023\274O\234W\275\003\335\t\275\263`u<\200\2644\275+\276\034\275\005o\260\274oZ\030=\204Z.\275\371\006\333\274S8\024=X\345C\275\216\001\316;\352\316\260;\204\251\300<\t\003.=\372\030\n\275\252X5=kk&=\255D\203<\206_\027=\362\"\037=g\213\321\274\263J\225\274Z9\246;\001-=\274\217\330\222\274\231\261\316\274\204@2\275\205<\357;\336\244\t=\355\212\246\273>z\2308\357\234;=$\363[=\031\333$\275\\:\277\274\264H\270\274A\007\234\274\313\037H\273\313\337\233\274Kb$\275ePC\274\03321=$\201i<P\234\310:[\253\351\274\255#\262\273\237#\252\274,\322\034\275\003V\370<D\251\222<\3122\337<\343\036_;q9\360<B\331\222<\360Y\223\274_Y\260\274\332\356\255\274\332=\360<\2758==>\304.\274zF\361\274=\306l<\326\346\003\275C\256:\273lz\274;u\025e\274\237\341k<\"j\000=w\235\002=k\252\n\274\304\313\277\2739\177\220\274\247W\272<\241\322\010=o\031H=\224kR\2741`\027\275v\035\264\274\242f\020=\'D\376<S\026G\275\366\332$=\306\364\007\274t>Z=\005\204\027=w\300\005\274\005a\360\274\007`\321\273\332\225[=\225\0074\274\217\2621\272su\307\274QxV<\312\351\316<\232uX<5k\034;\202cV\2751\007\230\273\231\355\374<\265L\230<\273\242\265;\227\nE=\255\226\276;\356+\201\274\3513<\275\332\004\000=\270\376*=\343\244+\275sW\324<\203\374\024=D\333.=\357i\301<\242\327\276<Gq\'\275M\013\007\275`w-\275)\230\212<\344M\207<\204\373[=\'\263\n=\0039\\\275\323e\377\274\325\272\361:\231\222\001\275|\256\003\274\223 \204<y7\242<-\r\267;\033\270\000\275z\323\021<\207\241[<\362\262\003\275\r\270\037\275\263\335\030\275\242\r)=\363^2=c\276\032=\220\005X=\364\317\017\275\360a\036\275\366\250>=\325v\024=\3476\355<\3663u\274q1\312;\240T\277\274?\243W=\314\224:=P\366K\275\357\032\022\274\331`1\275\327\030;\275,\356\233<\266\017<=Me\345\274\313\t\344\274\022\317\314\274\0250\252<\223o\034\275\026\344N=\356ZO\275\014\246U<~\275z\274\\\347E9\371q\267:\365&2\275\253\322\241\274\tb\376\274\203\267O=}\034V=t\037\203\274Q]8\275$\347\026\274\256\027\224\274\370\214R\2754\260,\274V\272\237\2743}\344\274\226\332\233\274t\005\304<\367\347\267\274\303\307\313<\304\245\010<\304\306\030\275y\010;=o\216]=1K#=7j\276\271\353!V\274\317\030\273<\354\2129\275p\205;\275>\354\227\273\277\252\020=\263\346\305\274\\v[=,\274\305\274=\240\255\274\261\233\310<\354qJ=>\\\343<[\232\301\273\310\214\016=\363v.=\320TY=\276\237:\2753\244\032<\225\300\235:o9\364\27474E\274\210_\033\275\307\214\327<\347\371I\275(B\264<\020 R;\374`\034\271\261\353\n\275\325\001\027=*\347#<\205\034\307<|76\274#\220\231\274u\264M=6\305\262\274\002*1\275\244~\r\274\276S\213\274\326b\253\272\213\0261\275\246\367\352\274y\201\234\274\023\231L\275\343\361\200;\357\302\351<\206\365\217\274_\2363\275\314\277(\275\031\247G\2754\374&\275\331\304K\275\221\022\305<\264I\241<^`\267<3\342=<\236\247\321\273(\320?=^=\306:C\271B<\007\257\301\274,d)\274\227\026\363\274\365\345Z<\"\236\312\274\023G=<J\376\036<\032\271Z\275\250\255I\275\305D\346<}\251!<\365\2451=O\224\323;\302S\246\274Jl\261<\227+\376\274\252\n\003=\211\360\243<PX\006\275ww\307\272(<\013=\305\341^<\250\244\344<\005\215\005\274\016Z@\275o\031\255\274+\264\256\274\254\230[=Q\210\267\273a~L=S\363\273<\225\005P=\276r8\274\212\001\241\274i\027\350<b<\037=;\215\327:1XE\275dtJ\274\035\274/<\036`V\273PY\033\274\337\247\213\273\2308\367:I\221\217;\322\000\271\274.a\r=9\265\032\274- \210\273\312\021\211\273D/\007\275,\341[<\275w\024=\324sL=CP\351<X\276\305\273-\305\034=\204%?=\022+W<\220\231==\274\244\262\274\r;\204<\020r\3009\003#X<\332\307F=\317,\324<\007U8\275M\007*=\265Q\016=\222x\030=\020\227+\274\304\310\r\275%\007,\274\211\210(=\243\313\265\274E\270\251<^\225\023\275\354\265H<s \236:G\367\350\274o\313#=S\210\314<\301\341\217<\247\234\036=\313\322\340;\345l\343\274\024\233C=~\300|\273\267\274\274\273\315w\333\274z*\250\273\202\374U=F\261\232\274\233\013\t\275\301[\304<q\220K\275/\323Y\275\305\2605=\333\257\320\274ca6\274d\315\010=\306\026 \275\020h\021=\363/(\275\0241\032=\004\203B=\317\320\002\275\333\025\222<p\241S=\006>\232\274\2344\316<c\250H\275\373\275M\275\006\336=\274\016\022>=\202\306\232<\337\217!\2752<\246\272}~\300\274\223N\370\273\267\240\371\274O\230K=tM\'=J\324Q\275\236\304)=\220\r\002=\001T=<\036\274\276<6\345\024\2750\364==+\321\002=\002\214C=z\\Z\2740\332\006\275\246y9=#2\236<\022\2313=,\305\352<\300\017\325\273\023\3076\275\340\327b\274\206_4\275W\215\003=\016\263@=t\031\254<\034\2678=_N)=-4i\274\\E\001\274\022\332\031\275#\007\006\275\203\310\374<\367\0337\275[\341\036\275\232\".=d\325\234<@F\000\275;\365F\275B\344K=\253\356\257\274\207t\201\273\255\230J\275,}A=\272\264G\274\037\237D\275\363\006\256;\361\'\377\273[TM=\020\205\310<\216\200\271\2749\347\315\266{\264\305\273\rd\035=\247\247>=~\010 \274\332\246\004=\207\1778=Zg\026\274\265|\241<\236\245\r\275\376\243R=z&\243;\355\203r\274\353\220]\275\300\245C=Y\261\365\274\006d\377\273\300^\035\275\352s\273\274\2360\225;\204\361\201<\323\203#=\251\0162\275\201L\253<v\024%=\354\177%=\260rK=X\016;<\362\"\217<\255<$=*\300A\2753\353B\274.I3=\223H\010=\276\373\224\274\035\204n\274\210\251$=\373\322\313\274\254(\315\274\231\261\2278\340\214\226\274~\271e<rQ7=\250\016\376<P\373\345<\024\342N\275\026`C=u\366\312<\355\374\t\275\325\244\372<9\272I\275\014\216\204<\005\234\257<.)i\274\341\303\'\275\352k\210\274\301\020\237\274W\303O=2\034\024=]#@=\005k\3709\300z\234\274\237\0017\274\215_H\274\010\221\305\274\377o-=px+\274\334D7\2737\326\214<\035\257\\=\237\217\220\273\311\013\310\274I\250\211\274\354\352\275\273\362\327\266<\034\005\035=\263\3548=\237\016\026=\216\2510\274\237\362\365<\2065F\275N\205<=\313~\366\274\317n\247<\016\270\344\274\251\006]=\246)\";T\004\371\2732\344N=\353\373h<B\'\321\274 \243\320\274W]_<\212\310\311<\3077\022=#_\372\273\375\"\023=\201\205\336\274\001\214\252<R\270\\\275\327l\025=\333~\337<s\330!\275\363\357\310<\245\2529<\262q4\275\033\230\244<3M\037\273*\2250<\260\303\262\274\322\275\034<]\253\314\274`L@=WX\313\274\351\317\346\274\025\250\257\273\222\036=\274\373W\354\2749\377B=\351\036W\275\216T\005=\223\244\315<\366\330\027\275\357\370\\=\370\037\330\274\r\340\034\274\314\267\260<\347\365p\274\227\t\354<\233\261\350\274\334rT<\367\204\250<^\240\303<\347k9=\271\321\354\274\320_\013\2737\2652=<\230w\2742$F<Y\336\273<\033\235?=gK\300;B\'\201;\013\352\245<Z!\"\275\215\344\310<\345:K\275;\311\320\274\345\276\000\275F,\355<\'\272\017\275\231\206\321\273\353:;\275>\212)=\343\345{\274\037\016\002\275Z_\020\274\207?\257<\353\220\216\274I z\274i7\201\274\\\300\365\273\213\346\275\274\373\264%<\354\243\305;\221e::\337r\317\274\323\350M\274\017\226\313:\207\274\337\274\361\201\263:\217i\346;VUE=9\350\016=\201\r\034=\213\r\031\275\314_q<z\354&<p\020\031<h\314*\275\273|2\275K\033\336\274\006\326\017=\363\224\274\274\325\206z<\364\340X\275\271\212\352<\317\325\221<d\2475\274\330\306=\275\350\270(\275\307]\320\2738xl\274\2357B=\207;-=\342\277\275\274\003*4\275\220,I=\210\213\373\274&\215Z=*M\017\275_\365\200\274s\364\237\273S\312\377<\030\343q\274o\231&=\327z\n\273\240s\334\274\003?\233<\230h[\275ub,;Y\250\362\274\205p\002=;\031\312\273_Q@=,\370J<\332!\315<\010\372\002\275\212B7</$\274\273\206\2133\274\347t\333;\033\000\034\275\2037\365\271M\250?\274\002\210\265\274\277\224\312\273\243\3510=B\353\t=\016\3503\274\355\347h\273a\027\203\274\263\261/\275N\036R\275q\236;\275$\312\257\2745\313\r<i9\023<d2S=\363\024\257<l\306\033\274\265`4<\372\023\375\274h\302J=\310\206\324\274\025\313V=:\311U=\370>]=\275\020\005=\243~,=\226@\305\273\305\217\332\274\301u,=\331\305\216\274\205;\230<\022\373 =\3762&\275\253\036_<\240\311\351<\313\300.=\010\375 \274\366hZ=\220A\232\274m\030\275\274\333\t\315\274\364cL\274T\200\327<&\304\363\271$\373.=\363\273?<\346\316-=\244\223X\275\211R\001\273|X\r=HB\300\274\216\366\325;\3273+=\225CS=\300L\2529\316y\021=\224\351/<\361\211\214\274\333\274>\275X\326>:\237\361O\275\222h\016\272\323u\236\274#\315)\275\3312I=9\316Y=h\212V\275\340\366\206;\272\303\n\275\035!4=o9\n=7j\341<>\320\236\274r\3166\275\236\200\234;wJ\2219\231^\366<p\333\305\274o\307\350\2745\361\0349x\034\213\274\032\375\362\274\361~\234\274\245|P\275\2076\205;\212F\316\274\363\372\365\273x/\315<\200\262\n\275\234\340v\274\202\211j<\002C\374\274\231\324\343<\331\242\350\273\277if\274\356\261,\275\224\253\202<\357\351\321\274\345\3309=\235T\024\275\371aZ=X\226\263\274\020\023?=\216\311.\275VU(<\363\352\255\274\236\300N\275\313kQ\274\337\262\233:{\361A=M\006\376<\017Vh\274\356\252>\275\375\002\341<~\n\225\274\235\306?=Y\302V\275\003 6\275\016\255}\274d@0\274\024\262Q\275\262e\261\274M\255V\275\330\3625\275A~\242:{vV\275!\343r<\315\237\370\274\377\216\347\274\n\336i<\247\252\177\274\346<\212\272!#[\275\367\2605=\036&\373\273:\325\t\275}\362G\272u\200\225\274\005\370,=a\203E\273\257G==\234\350\372<f\0235\275\213\"H=>\032 =\340O\002\275?\210\375<\322v\362<,]\037=\326\353#\274,\372\307;\010\267\022=\3008=\275\275\032\031\275\242\205\006\275T\022<\274\356-\037=J\332\313<C\360B\275p\2642\275\307tR\275\034\3738=\365\224\031<\357l =\302g\253\273;\3243\275\3138^=\217\250Q<\335~\260<\265\255\'<\260\022\003\275\364M\022\275]n$\2759\247\006\274\353k\320<]\007\005\275Z\232\331\274,\030\224<\\\010S\275\227\263J=H\031\307;\034\357\244\274\215^\375\274\313f\237\273\270\234\347<\364!\232;\247;=\275\277w\033=B7\371\2723%\215;\370\373\'\275\204\322\023=\375\337\257\274\\k\007=\371US\272\356\340R\275:\371\226:\225\211P\274MGa;W\242\312\274\217\247Y=<\361\203;\262\357$=\302\330&=\022\362\244<c_G\275\311\263\376\274q\351\004=\273\023\005=\374N#=\005MY\275\306\256\016\274\364^\223\274]H\r=\335J\371<\306\302/\274M\247\033\275\016\234\t\274\267x\000=\313{\305<\206@o\2742\360D=R\273,\274H\351\016\274\316\236)\273\230\361\260\274\304\325a\274R\232.=\243dZ\274\\\254\216<!\340\273;P\327\300\274!|\245:\222\355\252<\307\360]\275\304VK\275\271\352\233\2748\271\034\275e=?\275\337\254-=q\224\330<&\325\234\274\245\303[=HW\262<\314w\373;z\256\'\274L\216K<\356w\213<7\272\016=\234<\254\272pd\345<I\253[\274\310\027U\275\201c*\275\342\324\356<[\246\340<\241Ow\274$\3138\275|\034$\275\263\337\016\274\301.\341\274\377\337\005=\313}#;\231\200\010\275\331\032\331\274\267\223\371\274\311N\026=H\004\340<p\003\033=\000\236\323<Dr\227<\301]v\274\3456\261\274\247\207A;<\021;=\232E\215\272\213B[\275\346\262\267\274DK4<r\210\004\275\013e0\274\302\330\025=\001\377\230<\273\364=\274\224\030\356<\353\271O={X?=M\350\037=\014\250\250\274[\240\313<\203\315>\275\311\311\370<\351\003\360\273,\376<\275\177b\032\275$\274\214\274\020.Y=\031U>\275#a\201<\206\2500=\310v-\272\'g\032\273\3628\350<e\315*=\245\302\026\275t\373\t\274:\344\303\274J\351\334;\300PC\274 q\250\274\021R\030\275\003i\024=V\256U;<x\211<\207M\245\273r\371J=\273\3461=\177\256%\275\330\224\034\275\222I\203<\272/\022<\273SU\275Y\003&=\343QR=`\232\374\274\256\251C=\'H\322<\226\nH<\010\340\336<\206\374\212<\"\354\027\273\374\263\314<\333\231\005<TC)\275_B\245<\220\254V=\303PV=\311\307j<}\\*=\2300\263\273\326nN=\ty,;\'\210\366\274\260k\200<\216@6=\341\236\n<\310\327\010\2755\305\207<\306\"\261<\\/H=\252<P\275\350\2460\275\366k\013\274\230\233?\275\274\234\212\272\324\322V\275\255\323\377\274\010SI\275\274\201\"=9\204P\275\330G\335<(\020\323\273\260\017\221;\350\232\001={\220\010<c\360\265\273\000~\013=#\276]\275\0175-\273\r\356\020\275\263~\026=Q\340\032\275\274M\373\272\362\316\274;\224A\032\275\235\336\207\274\326\230N=\307\354\265\274\340\316\036=\2337\277\274\237\366\036\275\3616,=\334\037\010\275\275\303\357\273\353\333+=\037k%=6\022R\275*\230\236<\317\334\245\274\263\322,=\005\020\351\274\240\230P=.\037\207<\241\377\352<\314\2243\275\322\'\005\275\332\374\313<\347\346 =C\251\\\275MRP=3\260\223<\344\237\220\274\273\325E=,\310J=\230bU=\353\257\010=@#]\275\355\237J\275 y?=:\357\005\275\377\255E<\241\277V=\253CZ\275\026\247\334\2743{\232<E\366\377<\341<)<\315\005\010\274f-\312\274\tY\303\274z(\026;\024\202\226\267\343PF=V\305!=I\307\277<\354G\013\275\346\307\236<\213\224C<$\001*\274\375D]<\332\025U\275\276\3108\275\265\344:=\345\026O\275e\337T\274\345A.\275\013\302D\275\345\206\260\274\243^\220<\312\250\013=\270\357\032\274\242[\034\2757\373\241< 2s;V\376\306\274\271#;\275xH\036\275\233a[\2751\303\226;2\367f\274m\346\000\275^W\035=\224\300\n\275lS\230\274%\220:=\032\3619=\270:\022=O\351\336<]\260\025=\245\212Y\275x\274l\274\350\027\247\274_\032\r\275n=\313<\357[ \275\314\004Z=\241\0055\275AN\234<\351\021I=Eh\376\274\006\335$<\024\240A\275\247\242\037=\007\341\322\274\311\274\254<\212\007\\;1 \016=\0312\027=H\027\3319\222\002@=G\203[=`G\005=<\260\014\275\327F\241<\317r\335\273\230e\033;\202z\251\274\235RJ\275\377\010w\273\334P\215<\355C\213\274\230\316\306;\326\301\266\274xc\216\274\005\003z<\025\314\027\274j23\275k,<\275\376\204\016=\234d:\275d\024q<\325\352?=O\n\033\275\227\236;\275aZ<=L\226\003=\225b\261\273\300Z\001=\347s\361<\254\257\r=\342\213\231\274\320\342W=\021\360\215\273\227\021Z\274\202,I\275*\240\337\274\031m\037\275\201\264U=\202\2113\275\244(\303\274@\363\255\274/6\013=\342\021\262\274\272A\002\274\343\356\353<\243H\034=\003\335\006\275\200\300\006\274Hu\357<\242\030\020\275\005\264U\275\332\340\037=\002F\010=\"\303\221<0uI=\232D\302\274\327\0321\275] \220\274\203\306\232\274\003\273\275\274\335a\240\274p\013\345\273\253\207\261<>\377\204\272\004\204\007\2748\001\001\275\017\232}<o\231\202\274\326\353o\274\217\3715\275\230J-\275<\336\202\274\333\212L=\331\224\010\275\373aJ=\332H\364<V\340|<@\377\220\274\206E\'\274\333\377=\275\256-\360\274\354P\335<\355\267\317\272A0\353<#\331F\275Ze\265<\013\237\260\273w\276K\274\334.\000\275\177\022\303<\016\231B\275^\323$\275+\017\354\274\343\363z\274x+*\275\262\351\233\274\013\247\003=\350J\315\2742O\025\275^=\'=\t\323X\274\226\252:=\033:\000=\331e\257<k\007V=\013\204Z=x\371\026=\\w\'\275))#\275\234\010\010\275\204\243\n\275\262p\326\273\351;\r;\034J3=.!7<\3203]=\006\341C<\024\361\034=i\002\007=\341\202\023=8\2759\2756\373\354<\220\255Y\2740\257\322<O\226E\275\277\032W\275\317\251V<\025A\346\274\333\007=<([\322;`\344\300;\017\356\314<\341\t|\273\375PH\275yr\255<\262\000\334\274\263t\236<E\332\r=ht\024=`}\037\274\'\340\302\274\005$8=\031\035R\275\255#\271\274\227^-=4\342\035\274\264\345\275<\355\3726=\035`\241<\014\350\026\275\336\017X=.\"\254\274\364\244V\275\366)\305;\301:\'=\300\225\347<=\346\004\270\301\177\301\2741\036\336\274\355\220==A\367\221<\341\203\234\272\0161\377\273\274\206\t\275bR\357< \256X=v\257\203;\342\227\r<\365\303\000\275\352\302\276<\374e\226<4\n\325\274%\r8=\3427\350\274_\021\276<\353-\202<&\334\265<\301\025U\275\006\375P\275\374\201S=.\205\221\274H I\275,O\222\274\010\264Q\275\201f\002=\372\224\263<U\322\225<}\010E=~d\373\274\302\2656\275\031\000\212\274\030\253\360\274\200\222I=\336\210\332\274\364g\272\274\345\n\022\275\001d\204<\227l\001<\376\034<;\'\334\306\274\316\177\304\2744\227\036:^\262\006=\232$\357<\324\036\214<>\006X=\335\205K;}\246\361\273%\313\375\274\244\343\346:\220\251\001=W\325\346\274\020\030[\274\366\341\301:\031[\316<\341\352Z=\222\313l\274\326M\364<\364\324L\275R?\335\274n\270\357<?\322\372;]\345\013\274c\034D\275\214\360)<{Y/\275\000\260;\275\255M#\275i\331R\275a`\247<\027\001\311<\233\2344\274Z\324\306\274\335\227R=\243\207V\275!1\177\273/\335\351\274UME=\225\315\260<\255\370\371\273\013\020\023=\177@\276<tU?\275\010\3619=\375~&\275\354L\332<\214\243\031\275\306V\235<n\275\'<\027S\n\275!)/=nd4=\033\026\356<\357\354\225<\277:\334<.\254\362\274\255\362!=Y\344D\275\2402(=\251\005\264\273\230\024!\275\226\\@\275\231\364M\275ZMR=\037]\310<\032\330(\272ag\025=\272\314;\275!J;\2755\242E\275,B\007=\247\271S\275\366\212H=i\277\212\274\002\326X\275\023\\6\275t\032\234\273\226\302\026=#B\036=\204\007X\275,\212\231<y:\235<\\D\273\274%\2342=\356\302\300;\2623D\275Hi6\275\033\256\253\274M\211U\274\206P\010\275\007\326\317\271r/\036=u\356\022\273;S\221\274zk\342<p\304\216\274\276v\005=*\005\273<@.+\2743\360A\275eF\217;>6\013\275\332\364d\274J<@=\013\016\003=\220\230\354\273\213\374\275<\275:\257\274\360\355U=%C\345\273J\367H\274\032\365\345\274A\336\357<\033A\352;\251u\270\274\352\341_\274\306,\342<.\266\026=s\260\026=\024\235\004\275@D\324<\004\315H\275\364\r\227\273\221\354\\=\272X\'=\ntB\275\',\023\275\030\007!=&\"\010\275z\374\303;*J\004=\340\017\234\274\266\347&\275\236\334\355<\267\277R\275\315\312_9+\205T\272c\023\002=;\2723=\244ZY=D\030\2009\305y\023=\034\211f:#\220\005\275\200)Z\275\227\376\334<|\033\t=\'&\205\274\254\261s<\323\273V\275\254\254\361<N5\023=\035\251\214\274F\377\033<\222\n\007=rDy\274\267\001\002=\264O$\275\2438\376<lL&\2756E5:\371L\277\274\336\331\004\275\210\343,\273\365a#\275j\373\253\273U\320o<9\362N=\200\032C\275N\036\371\274V\222\203<\023\273E=h\'\346\274\023\267\327:Q\025:<\334\\\210\273\325\000\001\274\350\206\r=\362\335\242<\240\3521<\235\312L=\2314*<h\222,<\270\335\023\275\314\t)\275\267\233\275\270y\010\346:cyv\274\221\366\333<9\331\355<\254.J=!\361\"=\243A\311<\354X\025=\362\036B=7\235t\274UJN\275i\326\357\274^]#\275[n\022\275\312V\340\274\222\337\313<Y\275\241\274\001\331)<X\037L={\205\321\274\320,\027=\025\020\341;c\241\267\274\254\244\"=\010a6\275[\267\311\274\315(E=\r5(\275\377,\351\2722\236\364\274o\362\027=\024\200N\275\274\022H\275\276\333\273\274\371\322;\275\273cA\274\007\350\003\275N\375P<\343wj<\210\3710;\322%&\275\330\372\377<\357\033x\274#\034\337<\362\010\020\275\220(\033=\347W\022\275>\3605=\312~\374<\356\204\245\274Ua\344\274<\252\212\274\257\206J\274c\306\242\274\346\036\007\274|\350\005=B\254\370<\206\2175=\231\203%=\326\315\014\275\304\347a;\343 \260;\373TP=,,\216\273\005\030\226\273l\236\033=Sp>\274\231\301\0209\030\213/\275\263\213R\275\225\2636\275:m:\275\267{\270<m\300\027=\274\371M=uq\';\217M\335<\202\243\235\274\023J\337\274\t4\223;i\177\355:\220\303j\274\326_\032=\300\022\007=\242\264&=f\023\236\274\330\301\201\274g\275\333<\336f\205\274\331\203T\275\201\211:=B\354\005=8m\273\274\325D\033\274P,\265\274\272\':\275>\3120\275\3768\377\274\331\356\341\274\263\361\031;\270\311\003\275\203\317A\275\236A\251\274\344\357(<bU\201;\r\005\245\274\335\242n\274\363-\216<\032}\312\274N\230,; \216&=\024\022\266\274\234\377\346<\331\215*=C\177\027<\202\223\251<\022Q1=d[\321<\014\0260\275\357\351)\275\345Q\'\275g\262\251\273\277\335*\275\277o\037\275\364WT=\375L\004\273\220\275K=h\335]\275\354\322\345<\341\245\356<\3642\022=z\3364\275\320\356N\275\373l\373;@;&=\2153\"\274\t\216X;]\227\223<\006\032C<\375@\203\274\034\022Q8[\027\333:\250\207\204<\244|Y=\016ZL=W\272\032=\017\260\227\274\262h?=V\376C=\367\244\260<\t\325\220<&J\316<\303_S=.\353$\275qS\270\274\005\346.\275\274\337h<\253p}<t\202\377<\303\364\336\274\262\376\'\274\217\245/\275\335\273\275\274c\2104\274 RE\275\001\024,=|\210\006;\334q\305;vQ\030\275*?:=\0146a\274\037\224\233<\027~x;\206\024t<\245\014\257\274\030!>\275\257\245\023<,}\314;/&\264<\316\177f<{H\013=Q\267\035=:*@=\345eX;\234\006\002=\3229\021<\257?X=F6\230\274\220\027==\2167\013=\016\0243<\321I\237<\032\263L\275\321\311\023=\203\002\r\275\014\2151\275\\?\000\275\321\347\254\273\000\227T=\0255+\275q@\343\274\272\376\253\274~\341\256<n\227>\274MPB=\334j\013=\203C\212<\233\3531=q\252E\275Cs&\275\314\273@=\272\235>=\035\300\026\275aS\303\274Ai\275\274\263\267\027;\205\022<<\365%\372\274\203\306\246<y\235\357\274\033\rO\274\234\265\032\275$TE=A\"\201<r\222\336\274n6\026=\335\255>\2753\023\232\273\007s.=\273?\354<\023\262\227\2747l-\275\314V\365\273MmN\274\004jH\274\224\0027=\221\206\256\274\215t\237<>\036\221<X\\\222\274H1\273\274\314\275\326;\277\361O=\r\311\353\274\220e\033\275b\025\002=\352\025\323<\035\014\033<\013o1\275\274\033\225;\273\212\303<\224|\364<xTj<\342\352\356<\306\237:=<\033\014=\374\021\030=y7\331\274L\327>=\365\023R=\22169\275\241!\033=\307\251\356;\330A\t\272\351\240>\274\201c\267<k\365\r\274\030\242\232\270\037E?\275\306\246\312<[Q9\275\244\262\366\271#E\325<9\316l\274\345r[<&C\016\275H\351<=\212\266+=\204\"\001=_\342\327<\334\0244\273oL\'=\212&\r=\333\333\241\274\023\027\026=\211\226C=\230\241\005\275\023/>;k\252U=8X\262<1\305V;\352\217\343\273{\346\365\273\340K==5\371d<\365\310\005=\020O2<_\223\343\274\234\022\236<\261n\022\2752^L<\256\343\222<F`Z\275\333\017\301\274x\326\t<<;^<9\233w<\'\001(\275\354\363o<\005=\005\275oL]\275\266\367\026\275Cu\206;\033X\035\275\352Wq\274AwM\275\365\231\227\274\371\377\313<A%4\275\005\203\026\275\033\305/\274\024\213\201\273\335\323\014\273\357\006*=<\263\360\274\035\325\213\274+\275G\274H\177\354\274\354\tP\275\203\027\231<\013\231\005=\304%+=6\021\350<`%\315\273h\2609\2742\3241\275\336\000\n=\360NU\275\264\0005<\374/4<\321\340b\274\351\001\034\275\266)\253\274\025\257\344\274\362<\031\275\371\250\367\274l\246L<K44\275\352\340\035\275[\t%<\037e\242\274\246{O=\311K;;\010\023\331<\033$?<S\364]=\314\351\371\273f\237+=\341\007C\275\37689\274]\320\263<\257\243R\275\205\333\273\274\257\275R=d%4\275Kb\034=7-\354\2748\nS\275\243\257L=\'\255\266<Y\362\016<\337\3560=A\250Z\274\017G\230\274\033\024\033\275\200\346\344<\212\374J<,\330\242;\323\021\250\274NLP\274\024\'\374<7\251\237\274\344\000*<\322.K<\377\264\010\275\025;\r\275\274\376\004\275\240\216\241</\327@\275G\257\246<Tj\025=E_\340\274\232\027[\275\340\377\020\272\003\247\346<*\216W=Z\000%\274,\022^\2750\0145<\\\324X\275K\002 \275`\215X\275\300\245\216<k\037\222\274E\236\000<SzY=B\333\232<P\270\326<ZfH\275\262A;\275\327\356\341\272>\3208=g,\025\272#\330[=\017\320\373;l{3=/\240&<\272\222\005=\227\013\377\274\274\301?<TT\331;\3470\311\274\365 P=\025\231\372\2740\312\204<\036\255\377\274\310g\024\275\324\277\220<\021\027C\2757n^<\240t\\<b\241\322<\2415\002<\3273\270<\033\n\016\274`g <\033\255\222<9\300\030=%\207N=\"\200\303<\004\270\021\275\3749\347\274yy\003=\345(A\275\207\231M\275\333\3379=\362n:=\225\003\211\274\301\225\232\271wzK=\202X\004\275\270_\207:\223\007\025\275\205\220\225\274\326\215\265;y\003+\2759\205\256\274\034#K\275\276\2472<;\251Q\275t-,=id\364\274\004tV=\306j\223\274#\332\007=5\202P<\254\340;\275\253`E<\204aG=\223,M\275\304HX<(\306\002=\333S\305\274\212\206\304\274#\315:=\275#\002=\n]\003\275\364\177\206\274\227AK<-\2509\275e\200Y=\331\331L\275\330)\027=\026LA\275\247\3276\274/\333\r\275\347\024\034\275\250\227\345:\246\201/=\362|\010\2745\333\r\274\317\266Q\275ctO\2755\366\\=\361\354D=?4\302\273\244\205\341<\313e\332<\334\277\3019FpM=\324T\"\275?V\313<\002\300!=\374\340A\274\203\t;=s\263\024=\234\371\317\272\376\222%\274\001\2754\2744E\312;c5#\275%\354%=P\007K\274\233\236t\274F}\302\274\335\344\207;MS\023\275\033z\207<e]\026\275Y\271\313<\35138=?X=<\243\021\003<\275k\315;\213\300\033\274\210\323\003:\010\t\003\2754\251x\274\031qC<\327\342\201\2744,K\274)\032+<\3328\003\275\211\2608<\373\017\033;\302c\240<\333\017\010=gp\204<\332\027\r\275\351\336\200<\010\247\347<\2265>\275\336\017%=bo=\275\235\204\363\2748e<\275* \344<\320\235\032\274-\232\024\275w.\014=\003\334\240<\342\010\002<\354Q\237\274\177\342P=\2341\321\273.9\375\274Q\254G=\227W\023\275\002K[=\220\265R=\272\342I=\255/\226;\317\200;=b\347\027<G\300\372\274\026\246\301\274j\266\010=\020\215B\2755\302[\275B\032\234\274qH\332\270\307$==\240\035w<\304\230\366:pV\276\2739t\010\274s\332\256<4\247\361<D\331\357\274`\327\211\274\237`1=\226\315M\274o\243\022\275\202\3421\275\376\245\340<\232\232\337\274\004\026\203<\226!\330<c\230\313:6)\003;<\264\276<\345g\235<w5\312\274\2051\025=W7\037=z\357<\275K\335\260\273n\354\022\275\"g\316<\337\337\217\274\364\311\006=\006\211\016\275\333\257\243\274\253\362\216<\227\365\365\274\017\034\351<_^\014\275\017\264\215\274w\363\002\275@\270\322;sv\311;\365j&=\323\267&\2751\376\205<\344\250\214<\336c\027=\277\032O=HsE=\256oB;\232\336\303<!fA;\003\353\333;n\027\347<\265 o<\365\254\353<\276\350\022=\236(+\275\301\027 \275\022\230Q=\266\230D<3\213.\275nz:=\020\346#=\276.\336\274f\025\362<\333aN=\302\013\274;p\352}<-\347?=\213J\254<+^\365:=\036j<\274\237-=\364Q!=\250F\253\274\221\345\222\273\307\"`\274<\036\265;\0200\001<\214,};dLB=Sf~\274\367u$\275NL\023=\325\356:;\336\332S\275U\005F=1\270>\275k\252\034\275^f\251\274\346\365\325<\024r\017<\232\243<=\217)0\275]\'\322\274`3c\274\277p\335\274\374\213\206<\257\"\034\275i\251\210<\260\366#\275\347\346\006\275\344.\033\275v{\022=\257\006\264\274 j\022\273\214\367\000\275\336\312\036<\351\205k\274\033\247)<\230\235\014=P\355\260;e\2169;@n\254<\363\311\010\274\241Ho<\253I\325\273d\010\002\274S\233\265\274\353]\027=\3221\261\274\027xU\275%\203\263\274\t,\005\275<\217\000\275\017\272B\275Ps\037=\024\202\"\275a\224\352\274\371\207F=a\250\212<\036\036-=#ME\275\t8\263\273\361\014f\274\364\356\267<u\003\267<\375\237\010\275\263\204\230<\251\235G<\317}e;w\321\235<\261BV=\200_\251<\377\177\214\274k\265P\274\325c\213<^T\263\2744{\336<q\006\017\275\337\245\246\274\316\312\026\275\031`\034<.\363 =\271\353A=\226\320\037\275fn\304;\203H\177<\203\3731<$\021\007\275\275\3265\275`\255\274;\027\375P\274\251\352\241<E$\001\275\374\243 \272\316\237\222<z\3020\275S\270\037\275\350\313\246\273u \201<\002\365\014\273KS\343<\324\372(=\006z\007=U\366F\275m\220\'\275\325_)<^\263\344\271\321\224\022\275\253\247\037\274CK\'\274}\234 \274\242\347K\275w(5<\307\013.=\220\\\231:\016V\360\274B\332D\275\207\0008=28R<&,\331\274\247\025\267<\2358=\275\337\230R<t8\244\274Y\232\237<\226u6=k\017\203<o\203A=O\352+;\322\347%\275|W5\275\0373#=\016\'\301\273\021\245\014<wD0=\277z\201\274\376\266\213\273R\224\363\274Cq\321\274\260\347k<\260/P\275Y\234\002\275(\312\346\274\222\0308<e\340A=\322U\022\275W\202P=\364\020\235\274xU\273<9pV=/_\274<2\',=\202\200\357<\230\024+\275\276\361\311\274\341\201\033\271\273\263O<\216|\342<H\327\340\274j\321\014\275\367<\272;(\036\\\275[Q5\275f\0370\2754TB\275\210\220]\275\247}8=v(\273<\246\377\370:m\207\262\274\354\373\277<\241:\254<\306\264\023\275\220\344E<J\202\'\275\240\231_\274\005\177\210<\317\227\375<c\r\035<_p)=\215\002\353\2747\353F\274\"\210\252<{\347V=vC\024\275/\353\022<\240\375F\274\253io;\205^\362\2741\314\245\273\250\316D\275_\032\022=\273\320<=\033\315\345\274\014\365\315\274e\220;=\311\376E=\036GQ;\256\323\013=\037\\\002<\344g\236<\255\ri;0\340\010=\024wU=\312\205X\275\271\260R\275\231b\013\275\307\362-\275eY@=\033\264\317;\016\265A<\240\274\236\273r\271.\275\357*{;\210\025\265\274\035{\n=\336\337\374<AE3\2758\022\r=?\221\203\274\022\213\266;\345A\220<\350\342\367\274\003w\026=e\003$=\265+\227\274\327\325\377<t`K=\273\373\331\274\316^U=\261\374]\275\374,\027\275\340\003)=\375AU\275\034S\317\274_\345\246<Q\\\002\275\335\304K<\314\311\355<\302\252\270\274T\272U=\016\331H=\246?\276<\212\"\321<\324{\376\274\244\246\364\274}x}<\276N\263<a\221 =P\002)=\216k\372<\277\263\'\275TD\232;*\247\\=\357\000\007\275\241\356\000<L\323A\272\27105\275R\365S=Y\013\275<\212\235s\274\344M{<\362\201\"\275\374\332\037\275\313,x<\305\256]=\210T\204<\273GF<\220T\246;\225\355n\2739lk\273F\345G=\311F\311;\203\210W\275u\022\263\274)\213\276\274o\360\262\274\354?\303;\263;\000\274\321$\355<^\320\010\275e\\G<\n\330\363\274\221*\325;\202\250\001=\026A\301\274p\255\347<\225\352[=\264~\255<M\305J=@\274;=V\2105\275\274N\232<\202l\332\274\275\215\023\275\360\315N\275\232dQ=\345<\257\274\005\305/=\267\237\034<DT\"\275\027\327\356\274\300\256.=\337\000`\274\252#\035:q6\277\274\254\274\340\274b\177Y\275\377,9\274,\207\372<6\320\233\274(\237\n<\330:\347<\341\204\357<\334\036\006\275|\257\325\274\3636\366<2\"\332\272\002K\326\273\335\271\'=\364u\333;5\210\002<\375\243]\275\030]\334\273\316\3064\275\370!2=\n,\023;$r\362\274\202\272\347<[\372p\272\2370\204<5q\016<y\234\214;\317\252\346\274\3311\017=\310\236$<C{5\275\231\033\023=2\036j\274\3645\005\275\254\036\363<_\203\350\274\3248\370\274\352\335}\272F\205\301\274v\326\312\274d\376\314<xE@\275f:\351<\361I@<\367-\237\273\371\330\334\274`U\030\275\221Q\225<nF\314\274\020\271\004\275\027\016:=v\345\034=M\007\016=\247:\316<\363\357\245<\300h5=D\222%\275Ir+=\346\000\020=\320e\321\274\326\177\330<\207\360\341<^K\266\274l9\020\275\351\036\315<\244Z\355\274L\0019=\355\375\025=\\\203\";\311w)\275)#\t=z\2131=\361\306\334<\334\323\333<\260E\303\274Q\203X\275J9\2439\005\"\352\274\234;5\275[\373E<\221\207\270<\227\220\277<\310\267(\275\032\004G\275\364^:<N\274\027\275\320\357\210:Tb\212;\230/C9\337y[=\221\027,=\330\372\n=\t\000\203<#\317\'\275\375`%=\376\036\255\274\355_2<\343;[=\325Q\035=\205i\330<d\232,<\010A\'=\235\232#\275\021@\316<\305\217\327<\177\225\373\274\260\271\207\272Z\004\035=-\223==@8\277\274 \016H\275\340n\235;\252\221X=& [\274\250\003+=\227AT=\253\326\266<\225r@\275\nW\350\274\014\313\334\274vjR\275\353\001\017<LP&\275\327\210\252;\022N/\275w0 \275\252\312[\275U\020&\275k8\255\274\323g\026\275K\nz<;\307\367\274g\245(\273\255`=\275\317$\335\274D\253\\\273\202\353\022<Z,\\=_\\\006\275O\036\\\275M\226\253;\005\227\010\275\376\216\316:e8\014\274\354F\232:\277@\035\275\372og\2743\033\221<JE\037=;\320\004=\261ST\275\200\322\373\274ntV\275g\220\234;+\245\256\274x\215\356<\276\356\236;.\220c<\n#E\2754\373L\275\254\031\242<v\177\327<\037W\020<\273\331\234<T\265F\275\266\344\233\273\370\013\234<[\215\275\274\247KY=\207\037:\274h#\356\273@\215\204\274\247u\"=\017\017K;B\216\021\275\241\211\324\274b]\020\275t\265\223\274\313\333+\275\365<x\274\357\314\316\272\356\236*<\211!\177\2742\255\036\275\216\274\302<\005\217\212\274L\004U\275\3010/=\024\235\227<iL\375\274\212\334Y=\203\201=<\226\340#\275\266}z\274)\037<=\202g\'\274\361\311\021=\243\205\356<9q?=\036\017L=\327\226\017\274\223R\335<a\351\017=\246d0\273\001\377\226;\333HH\274\253\030&< \334\014\275\213A\321\274\021\023\263<\371\256J<\254\310<\275\216q\005\275U%3\275\362\342\331\274\227\0205=\003\373\322\274\304\332\244<a]\237\274RH\032\273 yP\275\234\221\002=`\216K\275b\232.=dwU\275@J\375;h\374\305:\240VB\275\353`\r=\277\037\213<K-\330;\367\334\351<\360\264\014<\"\304\020=\313\0313=V\177\355\271\233\242\004\275^\257\204<3@\320\274[\177-\275\3770:\273L\2625<\263\344\006=\t\030\031=\0205V\275~TP=\251\205\010<\305%0=\032c\377\2742.\267<\351\315\243<\267c\005\275G\"0\274\224\327N\274]\231\200\274\344\211\017<\240r\030=M\014\340:\244BX=C\244[=\205\271:\275%\034\277\273KuB\275h.J\275\377\347\370<\001\r\360\274\272\263\206\273\214\017)\275\224\356\030=\354\023\333<\027r]<\253\002\366<\362\220\236<\300;\010\275\211P\340;G1\323<[\277\021\275Q\270M=\010\264\020\275\312eW=V\263^<\273\033$;\346\342\375\273\344\224\014<\271\376Y\275\263\223E=\277\013L\274Te\201<\016\305\027=Lq\334\273Q\341\031=\021\355!=\324\257\345\274\253z\323\274\357\332\\\274\1773\220<5\246s<\"\374\r=\300]\213<\002\337\263<V\345\324<*\336k;\272\311Z=r\007V<0\303 \275\277\321\264\274\027\031 =\n\356?9\301\252\030\275\354\241#\275\253wN\275e\017G\2752]a< q\037=:5%;\234\277K;n%\373\274G_\336\274\321H\022=W.A=}\001\301<\377\215L\275\374mX\2742\342O<\356\275\250\274\032\323-=\264\330\n\275\3253\256\273X\302]\274gw\244<\316H\254<Q\210W\275\366\222e\274\2451\321\274\217\207M=>\233\'\275\261\236\\\273\205\332x;\346W#\274\r\2502<\006\223Z\275\37271=)9\"\275\263\220\216\274\313q\024=\203\271\333\274G\301\240\271tr\n\275\272\032\r<\275f\247\274\336\363;\275\236\037U\275u\200\206;3\003\243<;\224W=QQM=\347\"R<-\364\021\273\251\262c<c\222d<cT\000\274\022()\275&\033\364<\223$X<\202W\010=\320\250>=\206$Y\275JE\337<\363KD=\224O\351;\247\\9=\3214\200\273\313\207=<Z#\022=\014\226\036\275O\035\317\274_/%\275\251\240\026<I\031\310\274r\323Z\275\227\365\235\274\t<[\275%\340\333\274\034{\030\275!\310\246\274Q/\367\274\226b0=<\003I\275O\024)\274\250\"\250\273\017\247\327<\267\002\034=\303bH\275\227\275/\275\033\271\240:7q:=\241\374E\275l\206E\275+\212\325;\364\374I\275D\331(=9UQ<\315\261\250\274v=D\275\257\233\253\273\346\242%\274\206&\r\274\311\002\\\275\267f+==\262\017\273\205\247\346\274\224\000\226\273\376`:\275O~\356;h\323\006=\331\355>\275g\344\177<]\375\347<\342\245\205;\330\214==\315\231(\274\275\014D\275\013\220\t=\362\247\377<\337%\357\274\247]K=%\234J\275w-X\274\004\371)\274\247\177L<+\tT=<\017\257\274\267\341\006=oT\010\274\200\201\202\273M\361\357<\236\353Q\275\274\323\023\275V\230^:I\232\002=.<\037\274\361\302\355<w\323\227<\024GI\275\364\2471=\263\200\025\275\257\203`\274}\220\013\275%tx<J\037I\274\365\354\310<\277/\006\274\222\272/=UO\205<\260\231c\2746\245\303<\0313\213\273\331\302\r\275T%d;\316:\334\274\315\300]=Z\313\200;\307\235d\274>XO=\207\223\032\275\214\r\335<\n\276\270<\016\240\374\272\004@N\275\201\343\217\273=qV\274\356!+;\025\000\310<\350\230,=\002\256\177<\226|I\275]RH;\"\347X\275\351l\334;$ER=\326\340\"\274\330\300?\274z\035 \2748\267\004=\254/\032=\243;><G9\263<\224,F=+\036\201\274\214];\275\320(M\274\360U\347:i\373\377<\243\207\337\274R\023\225\274Q\217X=3\265\202\272\350\241\'=\263\237\351<\351m\257\274\346\241\027=\317\367D\275\036\313\241\274\343\327\034\275\200\034\314<\t\375W<\272\336\037\275\317\373l\274\326\3121=\335\223\014<\003\312\356<\244\364\227<\t\033\000<\234\003\3519\200\024\362;\346*V=-wN<k\346\253<\n\315A\274US#\275P\227q;\353\016\267\274\373hv<\301E\003\275\243\036\350:\254rN=>\tJ<\315^\355<Lyh\272\300*\313<\023\367\027=ya\'\275\253]p\274v\353R<\250\005I=\360\220:\275\202@=\275\001\3532=7#P=\376\274F\274\177\207\374\274j\0238=\217d+\275\274\0329\275\205\004\t\275\320\271\365<\374\023\222<\346\"\026\275\201\"\372\274\340\210H\274g13=\177\225\342\274\244\357\003=j\235\017=\2023\305\274\357N\201\274\355\214\017\275\347$\253<\356\275+<5\"\000=H\023K=\240\230k;\366[\222<\003\265I\273\236\247n\274\273\375\004\275\243g\212<2Pp\274\365\323\261\274\201\224\317<\262\3678;4\214\035\275f\001\311\274\220\275(=\245\375\"\275\035\034\207\274<\334\023=mN\002\274\200B\007=\317&\330\274\316\206M=O\265\017=\231RT\275J1\261<\2722P\275\007\326\275\274\201l\013<{u\337\272#J\256;9\036\266\273W\305Q\275\254;\276\271\251DO\275V(p\274\332\241&\275\252\371\016=\032\231\001<\375\214\324\274\255\242\020=\n!\\<;W\022=\205\275.=\267\270:=d\237\330<C\226<\275\2205\367<t\374\001\275\243\034\000\274Mh\263;W\311\030\275o\260\253<\267\262\014;\270\022O\275Jt\023=\226\272\334<\242G\340\274\362\257\032=i\204*\2752\357\245\274G\2229=Y\324\001=gK\371<O\300\306;\307L\343<\264r\014\275\247\312G<Hs\307\2741\276\360\274 \331\335<I\371\021=\241H\001=\344&R=\244\231\235\274nx<\275\2744,<\rm#=\353lL\275\331\t\334;\330\0345\275\343\225\376<\031\275\\=\340v\326\274V*\017=\201\000L:W\312\020\274\346u\n\275\332\'M=\036\362X<\361\262~\274\265eB\275b[\310;\220\362M\275\202=\200<x\202\221\272\315\310\010\274\014\341(\274\211\203\345\274\017\312\013\2758\216\021<\237\240L\274b\030W=^b\376\272\'\347w;\270\247D\2753\021$\275\211d\'=\243\377\020\275\272\213\346;\203\340U\274)(\034\275/n3\275\350\344\337<\022$\347\273\312\355\016\273\247\0253\275\023i\240<\246A\271\274_\364F\274\245\214^\272a\326\233;\227v\236\274(;2\275s%\'\274\226\207L=\360\231\247\274\206A;=\365_\022=\002P\025=\343\201\\\275\003\357\034=H\370\022\275\343^S<\363\327\321<U\023[=\251\265\211:<\261O=\216\022C=,\370!=\021\307A\275K$\004\274\301\006\033=\020\2653<b\340=\275d\224\004\275\230\3749\275?\243E<\200\214\346<:\331\277\274\025G\016\274\2472\037\275lR-=\244\010P\275\250/V=\362\263\225<ke\305\274\027\317(\274\334\027\373<\212\200\351<\024+^<S\234\320:V\361\226\274\273\307=\275IvJ<\224A\300\274kGM\275X\274\310\274\351sK<\235\r\020\273\200&\366\274\301z\376\274#\346\377\274\225\230\030\275\002\211\"=\023[#\275\227\246U\275\364\277\310<\334\023\250<E\272\030\274Mq\257<i\362\321<\t\306\336<\326\366^\274\231\347\207\274\360(\013\273i\253\366<0n\002<\327G\250;\217b5\275#\345\006=4\2041<\354PB=\254\227\'\275\177;U\275\313\022\301\274aH\221<\235\244:=+9\025=\227_T<#\010O=\320\331\253<\275\325A\2756/I\275p\221\253<b\276\213\2744\025\225<\231\266\245\273\365\251\367\274\366\377o\274\3112\016=\246\256\355\274\330\332\225<&\tQ=\377\223\033\275V@\230\274\325B\n\274\376\241\017=b\220\212<\004+\t\275!\257)\275\254\364.\274NXs<@\223\021=\332\262[=x\276\220;P\255\232\273h\3616\275E+&=\334\206\\=\236U\333<\230\214\203\274\376\321\3708\030?\357\274\373?V\275\006H\013\274\333\256E\275)\341\303\274^\335.=\201\323q\274\252\246\255\274\027\333.;\246\254\246<\006\331\013\273\245\221\025\275\270y&<\270\273\271;Z\217K\274\271\031R=\306\320\314\272\253\373\030\272\t@9\274\324%6=\351Ma<\315\343\242<\255\3039<\032\347\343\273F\316\002=\320\325\341<\205\263\307\274!+\330\274\223\240]<\315\026\002\274\235\315\212\274\021e\246;s\337\234<\0334\304<\020\376S;p;\356\274d\242\210\273\271o\017\275zZ\237<J\215\027\275gr\322\274V\323\375\274\245\272&=\320\262R;[\244\351<\262\030\031\275\t\'\024\275\3503\010\275\226m\363;Cq\017=\324\006\201\274\2048\204:\275\253\000=\343\000Z<\304\007.\275\350G2\275|#\"\275\343\265\001\275\256}\331<\253a\327\274\301\307<\2758\366\220<\016\346\320<\354\223\014\275Ls\217<Gbh\274\331:\235\274E\333\306\273\037\205\321<P\222\324\274\321+k\274\263vc\274}\242\034\275G\244\314\273\243\320%<\3157$\273\254\302$=p\252\301<\\\030M=\266\030\205:\235\271-=\024;\035=\273\2474=aq!\274\237v|\274\252\322\226\274\347\263H\275\355\327\006\275\217\034\004=\303\324J\275t\370\261<w\364\351<\336\3760\275\234\276\010=\244\0219\274\201\237\024<\233B\322<\360\270E=\210G\245<\243-a\274nN\244<6\263=\275\224+[\275\303\367Y=\345\262*\275\312w==z\034\013=\321\307\031;\032\365\365\274\254[\020;\327\271\201<\230\256f\274\\X\202\274\366q6\274\263$\034=D\267L\275&\363@\275t&\"<\016\345\354\274\373\0144\275\272\331\363;m{8=\202\010\003=\332\314R\275\3245\222\273\355\372!\272\366<\251;\340\333x9X\315j<\036)\334\274\304\253\037=T\025\014\2751?U=\330\262\216\273\006U\014\274v\270\022=!\373h\274\025\3464\274\2149\236<!\014\014=\341\005\255<\017\360V=\276\0036;u#\356<\305\024A\275t!G\275&I\304\274\263[\225<z\216\326\274xx\020=t\251N\275\013\354B\275\364\032\364:\226\332%=\276\250+\275 \000=<\022/\261\274\374\273\260<f\005(\272\222\352\334\274\221@\354<\006\360\217<L<A<\321\326\366;K\222\013=\"~\365\274`\321F\274\"\036%=\235\366\251\274+\3207\2755\316K=<\334\030\275\305$\214\271\030\\\227\274\021lP=CC@\275\023{\033\274\231|\326\274P= \275\303\312I\275\240Z\376\274W\304\004=a\031V<\266\220\221;\031\202>=\211J\r\275\265*\205:\306|&\275i\2547=\235\371\004\275d\242\302\274\251\276\321<q\3201\275\311\236\031\275\032m%=1\212\364;\300\016:\273&@\256<\027\237C\275\242YB\274\202 \330\274\\\367\353\274\037\"n\273\213\010H=.v\235\274i\033\335\273nP \275K4\341\274\025.\021\275e9\010\275\301H+==\'9=A\363\360\274\013z5\274\336>[=\3009\204;*\260\247;y\001\016=|\027\253\274\003\001#=\2017\255<\342\025\370<\231:\020=\232\3758=\033)\010\274\301\215H=57\005=;\022\350<l>\241\274\206\352\215\274[\207\224<k\230\271\274z\336v<\253\220_<\346\2626\2752VO\275\321\007X\275\244\210`<\336\212\230<\237\237\353\274\303\350\224\274\357\372,\275\243\006\377\274V\247?\2753dQ\275Q\360\031=\202\335 =by\023\27484\013\275?\t\316\273\252\225q<\004.\310<\230\265E=\250q\247<\226{\037=.\005\006=\033\303+<\325\360\022\274H\223]=\364\264]=\267\024D<i&Y=L\3117:%\3714=\272\204\315<\267\376\013\275\324Tc\274\275n\365<\303\026\302\274\221\325\214\274\202\261\32180\202W=\026\240\352;\'\311R\275&\261\207<\246\022\026\275\373}\214\273\271\024\036=\231+\265\274G)W=~)\002=@\to\274\261B\301;T^\031=\274\204#=#\350\305\272\262s5=!\261Y=GS7\274a\332Q\274WP\217:\203%\034\275\356\3574=\220\315\001=\007\307D<`\217\272\274r\236]\275\025\245*\275N\343O<\367w\013=(\322X\274<!H=1L*=G\234\254\274\236\222\021\275\336\333Y\275\225T\304;J\363%<%{?\275\214\231N\275w\344\002\275\031\255;=\252\027\027=\253t\271\274\340\360\004=\375\217y\274w\301(\275\307z\333\274\263\306\313:\334}\374\274\027J\254\2746\271\313<\026\3372\274O\334[\275\003\301J\275)E\341\274\177\240K=\2356\352\274\353\340d;\010\331\233<ge\033<p\274\302<Z\376\033=k\217D\275\3744\315\274\336\217\036= N]\275\013\034\266\274\277\267\335\273\305\243\206<\213\005\010=,\263A\272\374\345\"=`\244!=\240((\275\225)\346;\375\315\034=\252TP\275\2663p\274.\316e\274\237\206Z<L\223:\275\\\\\016\274{\272\321\274\322\246\220\274w\266s\274\313{/<O\373*=\331\220\352<y\\\335\274\322\030\203\274\311[[\275\021\307P= \240\321\274\362\351\344:\254\242\326\273\022x5\275\313\262\204;\'\361\036\275\335\362c\274\237\240\231\274\235dZ=TtJ\275\207#\262<\315,\022=\226\335\345\274\351\352\355\273\364#\320<\315\0258=\344\216\005=I\\\370\273\376\177\226\274\233\257\375\272+\240\"\273\276\323\204;\326a\004=\306J\251<\001\241\"\274\300\345\230\274\320\375\266\273\222\203\037=\002\220\033\275P!\213\274\277\rA\275C\024Q=\3744z<=\211\"=#\300\\=p`^\274\024\205\377<\265\236\\=wQ<\275\302\232!\2746XD\273\246\321\010={\270\242\274\032q@=\277]\246;`\215.=\000\2725\275\334_$\273\327g@=\3371Z<\376\346U\275\241B\231<R\211>=\307\'A=\335\240\2029L\342&=\304\312\337\274\306\357\340\274\213#\351\274\340\233\014\275\021\216\374\274\375\037X;\0040H<\253\035:<\347b \275\363\261\361<\346\321.=\344\342\216\2733A\223\273v\217Y=\t\363\334<\315\006\361<\217\230\246\274\262\035&\274\246\321\224<8\217A=\361m7;\356\341\'\274\334\022<=\352\261\326<R<A<\373\273\225<\366\340\364\274\224\2221=\346\2510<)\337s\274/\001\230<\n\225\314\274$zI\275\201\333\005=B?\246<\023\302F=\274\331X=\365\016\023\275g\220\034=rs\242<\304(\224<\001\252W=\233\2378\274{\313E=\264\337\207\274\313\260\310<@s\213\273\256\355*\275K\361@\274\237,%\274\206\276\001=\315+\334\274\216%\002=S\327\034=\233\177!\275\302k\354<\306\254n\273\301\357\002\274\207`\237<l\315\002\275&W\307\274\370?\330<\317\334\031\275\346\256\353\274\347\372\346<\231L\325<\r\336\252;`\305\217\274\255?\r=0\231\017=\377\2520=\334\361J\275\320\013\212\274\370X\006\2758\304M=gb\365<\335\223\231<\000Z\267<>\341\277<\r\356\036\275Y\303M=\335M\006=\352\034]\275\032w\347\274\352>\003\275\340\225\002\275\376\347\007<\335\264\227<\341\333A=X\004\032\275\262\301\035\275\351\247a\274\220u\326<\353\334<<\321\247\325<\316\235Q=\001\274*\273\346\212r\274\267\231\337<]$G<L\374\n=\232B]=\351\271\003:\213\233\363<U\313F=\354+\275<&\014>\275lq\007=\347\372\005=\034\373N=\027H\235<\312GP\275\232$|<\256\370\352\274;9\356<h^B=k:2\275\033\250\224<\316\217\354<N(\025=\277\265\272\274f[\360\274\245S\316\274\244\017Q\275.I,=/t\035\271\212V;\275\232\037+\275Ma\002=\022\272\274<u\243\322\273\257)\006=\270/\025=^\004\335<r\352P\275\202\2409=y\200\374\274[\016\023\275\321{Q=\234\252\362<K\363\031=\022\220#\275%\n)\275l\301\032=\261k(<\355:\'=\036\241\261;\272\022Q\274Nw\022\275\2265B\275It?\275\370\247G\275p\030\231<8\376\3709\024\236\014=\031\304\234<X\233:\275sI\032<\213h\353\274(G\252\274\274\344#=2`9=\335(\323<\376\231\207<\344\223\260<\300\006<\275>\201P=sQ\327\274lG\025\275\r+\204<\005l2\274 \034\r<\326\3255=1\241\354\273\300]\021\275\331\326V=\003\354\301<\306\014\\=\234\237S=\020\272\006\275\251\346F<\n\302Z\275f\nu\273\317\200\330<\211\024\252<K\336X:y\007\335\274\204\031\316\274\006C\363<1\347[\275\\V\310<>jR\274\022\360\'\275\n\263\3269:0]\274f5\367<\3322\311:\207\023n<\227e\031\275]7\312\274\277bo\274\2656\003=.h\211\273\236\222\377< \220\006\275\252\202V=\002K\022\274\274\333/=s\234d\274\321\014\342<\343%\027\2752XR\275\307kG=\332[\265<\023*\337;\274\270\021<\270\2644=\261\312\303\274\235\234V\274\371\335V=}+\014<\252N}\274\315\0211<y\3363=\245\003\020=#\271\202<\235!\231\273cm\370\274\373\"\354\274PL\006\2752\"\210\274\2257\000\275\024\302\345\274\207\r\003\274d\006 \275Pc/\275/\244\003\275\216\200o<u\352\002=\343J\036\275r\331T\275=\374\033\275\340\t\\<\3725\302\271\304\301U\275o{#\275\240\265^<\315\254\002<`u<=\254\266\310<\343\030[=}F\t=]k\\\275\357q\\\275\357\371>=\007\'\236<\020\274m<\022\2236<J\374\010=M\312E=\362p.=P]\334:\036a[=\346`\315<\276.[\274|:$<\010\037?=\251\344\315;\315\2354\274\006YG=\2143\301\274\177\221\"=\330\321\244\274{\301A\274\027\235%\275\335=A=\351\373\032\274\274wI\274\271\005\035\275R\234\271<\356U4\274#A\017\275\276\'\316;;O\263\274\260z>\275\036\347,=}j\230\274D\277\224<\307\324\357\274@o8=\033\204\261\274\3518\241\2748\342\027=\237\267\r;E\244:\275\213\243.\275\006\342O\275\251\0374=rb@=\242a\220<\330\263\311\274\257~\036\275\r\233\326\274fJ\354<\251\031\211\274\205^)=t\026=\275/\345\t=\304\2724=\221\031\370<r\334\014\275\267\221:\274\201\214\310<{\036\224;H+\337\274\373\240n<\221\343W\275\ny \275\207\347^\274+[\203<\031V\301\274\203\320I=\367\245\263\274\257\307+\275\305\244\224:\223\326\030=\241J\211;\032\323\037<\372>!=\227+R=<\230b\274\227\'\334\274\214\256>\275k\300D\274+\r\233\274H\0319=`|(=\320~\330<^\321X=\201q\"<\213\001D\275y\365D\275E\353\225\274\215iK=\310\312x\273d\264\327<\325\353\024\275d\213\271<\001H==\245\203:\275\220\036\334<8v\363:\366\340M=\235\022\030;\303\005\257<]\027<\275\t\003#\275h\327S=\262\233\022<V\304X\275\010\212/=\321\026\\\275Wy\003\275\010\336\251\274\347\355\212;\245\217\273<\257\336\201\274\263\260\321<\214\217E<\216\201G=\014\245\007=\204|/;8\330)\275\027\372?\274\010\274\271<0\210\376\270\023a\026=(e\363<\2679\n\275M\2318<wC\010\275\257\257X=\213\322\302\274\304|N=8\344\344\274\306\310\236<\r\037\207;\316\213\014=c\014\360<s\353\375<\337\036S\275\272\343\024=\204f\271\274b\257\316\274N!D\275\332\225E\275\243w\334\274\037\222\336<\014\217\021<z\t\037:w\210\215\274\r\370M=\353Z\301<e\352\313\274\241\r\r\274\227^\370;\\Dp\274\233\305G=v\313\370<\230\204Q\275\212k(=*\364\266\274\273\315\352;\300\\\004=\037\013\241<B\362^\274\2761*\275\373e.=cb:=\311\273,\275X\347X\272\017Q\223\273E\265\367\274\266@\334\274\233\264\\<raq\274Y6\307<AY\372<\000\277\222<\2619\032=r]4\275\r\365\035\274\016e\023<\265\262^\274\356\2054\275\242\225\363;\305\323\347\274/\013\013=\307\356\314\2745\201,\275\275\027\010=\033\362\022\275\345\242-\275N\006?<\267XS\274\277T\014\275\016\323\300\274L\302 \275\243^\r<\354\240\034=\324vh\274\205G\272\274\306\2762=|\005K\275\310V\022\272\005\220&\275\271\235G\275\035l\021=i\306)\275\277\'\270<\324G!<\273{\324\274\257E\023=\220>\310<d]\340<\022\t9\275\"\260\022=\321\n\362\274mTC=\242\222 \275\007\020\354<\360\\1\275\206r\332<\232\202\216\2748)R=\\\033\343\274S\263*={\315L=b\326\004\274\331\004l\274\306\260\341\273\022\023 =<\311*=\275\316\032<u\335\346\274\327\257\263\273w\204\"=\2506c<v~\272;n\226\361\274\211J\302\273\030\020\266;H.\240\274\360\227u<\215\353\231\274\326B\365<\0338\271<5-V=\202\340\352:\357\204\253<\347\323\006\275\302\225\236\274N\245 =\206\306\374\274V\305\310\273\235Fz<\2734.<\251\261\314:\326\321%\275Y\021\"\275|Z+9\312U/\273Gk\311<\365\343\027=\272X\252\273\371\236`:\356\241Q=\240\214\244<*\236\t\275\335\263#\275\200\3253=\333\2618=Y\217\334\274g\377q\272\321 \227<c\364\316\274\203\036\314\274\001\361a\27458L\275\376\222\250\274\nO\243\271Q\364\277\274\346\371\350\273\006 1=ce\270;\005x\337<\347]\037=u`\n=y-\'<\321\305\231\274\030\325\313;\224C\347;A5\343\274]\n\256<V$U\2755\'\t\275\322\'I\275\025b1\275O\020^\275\360\273\217\274%\302\001=I\3777\275y\260\007=\004/\037\275\t\324\033\274\222j\374\274Pt\336\274j\322 =l\367C=\357\222\257<\314Ln\2747\216\007\275\024\363K<h@I=a4\222\274\330#\261\274\274l<\275\363b,=\367\220,<\235!?;A\223\010\274v\355\013:\3671.=\301\311\264\274u{\333\274^so;t\004s\274\270\263\312\274x\342\000\275\333fH=+N\354\273\225\234U=\363H\244\274uf\376\274\260\252D=Ux\216<\226pU\275\\\035\340\274\331l\"=\266w\001\275\311\341i;\270`\007=\tz\304\274\241\326$=e\304\030=\233\362\357<\204\327\213;\346T =V\244D\275C\rn<\301\272\016=\242\334==\233\313\272\274_\343\245\274\260\032+=\306i$<\326\317\362;\221\336\323\2740\022F=/A\203\273\236\026\251\274-T[\275\377|\363<\230h&=:\234\253<ww\342<J\360\n=\312\343$=\\\353\225\274<\005J=\326c\314\274\304OQ<\020}\236<nn\023:N\312\023<\345\243K<\261\'-\274\002\037Q=\320E\230\274@hM\274\355K\255\274\362\tH\2752\224,\275\237@\376\273r\007\233<zT\224;\340\314[=\030%_<\225D\026=\036`\230\273ld%\2742<)\274\273\'\377<\027V[=\"_\341<\252F8\275\3760\311;t\367\005=-\214*\275\365\001$=l\205\017\275e\207\021\275\2115*=\321\201K\274\205R]=\205\014\n\275:\213\225\274&\321>\275\264A;\275\331p\000\275\244\037\036=/[\214\274UvA\275\261C\215<\376~\264\273\227Y \275\303\226)=O\317\024=D\027\\=\304_\213<\305\205\241<si\364<\367p\266\274U\"5\275c\347\005\274\204\225\006=\272c\004=\235\374o:\024\367O\275\314\361\017\275T\366\031\275~V?=\321\372\030\274U\302M<\210\341&=B\037B=\302\213\232<;\343\261\273\032\177\373<\302\213@\275\021\232\001\275\001&\010\275\r\340W=\002\257\230\274\031\263\004\274^\337\032\273\026w\230\274\366\327F\275\331\305\320\274n\262\"\275+\250M\274Q\234\025<\021\250V=\354\247\231\274\232V!=9\340\022\273\331{\266\274V\200D\275\022\336\022=\230\027\021=\303\246\353<\220\314\305\274V\200.\275J\207\322<\223\030B\275(\202\304<\333)$=c\030P=]N\344\274(H\"=\272\272C=(\341\034=w\320K=\005\236)\275\345\331G\275\311!\n=\333\027\003\274\277\304\205:\204E$=\255z\275<\224^\360<\220\266+\275\003\276\'\275\307tT\271+\310X\275\303\243N=1S\302\274\351\377\352;]%L\275\202\353\200;Qn5\275\317\312\316\273\266 \320\273\217\375\"\275V\225\250\274R\020\242\274\344\236H\273u1\007=\026i\003\275\264\2573=\325\002W<\340\240\211\273\302\0103=\274\016\257\274K\275W<\371\021\016=\003\317L=\213:\240\274D\320\331;\r\246\\<\204h\222;\266L\337<U\311\351;\025\377R\274\255\3413=Pb\215<\207j\343\274\252[|\274\214\272\030\2758\037\033\275\n\271\265;i\274\311\274E\276\033\275\210p<=$\234S=~&\035\273\005\335\t\275\016fB\275\300\220/\272\336p\261\2746\'w<\244\027*\275\'\\)\275\263Q\313:\331\222`<\033\207M\273\245\273\232\274\203\037\375<\'Y\264<\207\300C\275U\317\005=.3E\275\r\027,=\221\322+\274/\217\215;\2209p<\242\201V=q\255\344<\343\364\315<v\276\314<L:X\275\017\254U\274\312\252\006\275\037_\324\274\251\262\241<H\301\207<\032\023\013=.p\007\275\3622\325\274#\373v:\001\3379=\357\223\r=\225c\332<|\360<=&\371\033;\346\177:\275\341-c\272|T\322\272\274\367\316\274\347\376I<\307[\'=\375\331/\275\232U\005=J\255\324<\372\274\305\274\345\355H\275\036\331B:t\307J<\236\244I<\346VK=\217I$<\032\370\313\274=\321#\275\324\032 =\306\206\335\2749\253\014<\025\240N<\022\346\371\274<\270\t\275-h\'\275i\250\267\274O\203\005=\256P\017\275%\333\365\274\315\215\017=\330\350[\274\220\2241\275\034\334\223<\013b\205<8\240:=y\207\317\273\323\277\325<2an<d\035T\275\034G\244\274i)\014=\027_v\274\351\223O\273>\336G\2759\271\002=\310\347\223\273\363\326d<\037\213\222<\241O\260\274\237\2206=V\355Z=N\270\334\274m\211\375<\204A\304<LC]=\374\365\017=\353\350#\275\276\350\005=\317\2028=\005\007?\275\301m\335\2741:\237;\0340\2469\335=\302\274\365>\201;\206\006X\275\333\233\347\273-\340\325\274\241\363\264<RmE\275\t\035\002=\376\366\025\274\2777\r=\365M$=\364\357\200\274}a\256\274G\310U\274C\210\375<1\2769=\256\350\035\274\234\"\326<|a\r\275 \372E=jt.=\340\340\327<\250\2510\274\"o\257;UR%\275\310\023=\275\332\322\242\274\273\344\370<\005\036\256\274\204\tc<\247\034\021\275\362\rE\274L\274\302\274\3523|;Xu\021=%\274?\275\350\304\223<jg\222\2747\371\251<^zX=\243u`<\022t\3479\037w\337<o\236#=\377\220\3539\026\010:\275bq9\275\263\204\003=^pd<Ol\005\275l\310\337\274z\333\006\273M\202@\275\342\004&=C+P\275\307m:;x&\312;\301\202\007;\247\033\375;\"R%\275 \253a\274$\020\253\274\330\245\206<\324\356\357\272\332\241\\<\322\371-\275\355\254L\274uc\207<<\205X=\203\026\026<q\367\317;/\207\r=\300\327\024=L\207\251<\300\3574;\270\254\014=S\023W=i,\231:\202\t\214<\036G\344\274\272b\206\274:\277\357\273\026q\352\274\002\301\321\274\226F\030<\243\'Z=\344\370\n<\327\311}\273/8\376\271\222F\265<Y\230\376\274ma@\275\353\372F\275\010s\t=#\206\037\275\312p\247:c\224\277\274\2028\214;\270\355\267\274\244\273\026=\004\2105\275\222\017\316<+r\332\274\254X\361\274\017I\312<\222Sm\274\262\324\036\273\233u\177\273\216e\324<)\215\272\274^n(\274\2247 <\244\223\363<\302b\013\274\364?\027=\260\254n\274\326^\234\274\214\216\241<J\031\227<f\177)<\006\216!=\211\r1<\333\246\007=\007\365\014\273\327c\241<\313\310\357<\177}\031=V\016\222\274P\346\000=,\332\010=!+5\275\203\356P=\016c\342;\325+\364\274\251\314#=\0018J\275\031\276/\275\223\233^<6\253\375<~\376\013=\365Ew\274\254\221\263\274\361\207\201\274\331\235\023=/\024M\275\036\223\233<C\203\214\273\262<l\274\363\262+=pWE\275\3660R=\320bG=R\022I=sW\331\274\244\2146\274\314[\007=\323CY=\025_\250\274~\356:<>\004$=e\302\025\275qM\274<\235\036\337;\037\3579=\034dJ=fp7\275e\3164=;$6\275&\245\016\274\023\251\343\274_\2375=\304\200\204<H`\242\2723\037\005=\316\347\'<\372\354\\\275\262\357\006\272\317|\362<\\\230\\=\370S0=\266\320\002=\364\0242\2753\177\305<F\007V\275\320\220M<G:J=\t\214\271\274J\343+\274\332\262+\275\037}\211<\243\351P\274W,\340<\010\217\220<\270\274P\275\261\213\'\2759\203\257\2747\2205=\233\025\213\274\037D\336\274\304\031c<-g\302;\nZ\234\274\345\303\n=\364?\210\274.\371B;\034X\321\274 \276\262\274,\005\022=\213\221\226<\t\373\326\274S\225\361\274\031\005+\274\214\016,=J+,\275IJK\275W\233%\275:\307\020;\242-F=\2779?=\357\363F\275\316G$= \302Q=\300\2769=\221\0365\275\021\367\016=\310\215\244<\362\020!=\271\200\036=\343K\270\274,/\007\275\t~\n=,9*\275\001\225\022\275\250s<=\267y\001=<\301\035=I\333\r=\205\211/\275\267Q\212<\013\334,\274\177\342\033\275\237J$\275,\272\346\274\273\307\235<\'\362G=We\r\274\254\375\013\275Y\254\241\274a\272\264<\224a\027=]\2002=\270\365\255\272{r\332\274\243\372\315;0\367\007=\314I\t\275\362\314H\275\033\020N\275qs\005\275\335\320Z<\215\346\026\275t\033\233;ak\013=\372\032?\275u\235\231<\345\010\341\274h\226\002\275\364\316\001\275\364\331\337\274\r\337\314<e\250D=?\302[\275\354\255\263<\265L\230\272\023\224\232:q2\371\273.7\301\274\021\224\027=a\2530=\r<\n<wA\360<n\236\n=\003\370\000\275j:v\274}1&=\204-\215<)\261\365\274\353\224.=wK\001<@\201\215\274Q+\030\275|\274\334;o\004$<h\331><\360zO\275t\2679;\365\3453\275\r\343\021\275\253\336\006=\2245U\274\"9\014\275jx\270<\243x\000=p\254\'\275\3013.=N{\026=\035\375Q\275\235h\200\274\302\t\203<\034q4\275\374+W=I-\216\274\256\353\234<)0\030\275s\032\222;\335N\033;2\377\343:n\204V=\322\214C=\200VN=\256:%\275\306\r\265;_j\241\274\215\"T=\261k0\275\332~k\274\277\023\004\275Q\223\322\274!Gw<\366\007=\275\361\320\243\273\307\313\340\274\332\010C=a\342\022\275?\314\023=\376\3567\275c\341\002\275r\217*<H\262\243;\035\320!\275\017\276N\275\016\267\232<C4\006\275\262\350r\274\331\304C\272\256\215\013=Y9<\274\270!H;l\022\240<\335\343\226\274)\3343\275\361\250\276\274\306\201\021\275\206\345M\273\300\315\323\274bUQ\275\313~\"=I\232S=\"\\C=\2679\227\274\000\341\371;\3742\025\275\314;V\275E\227\255<\230\303\316\274\224>\033\273o\256Y\275\322mN<\225\241\370<|\376\004<=\3137\274\256\341`<\016\225\222\274\0260\\<RB\262\274\303\\\027=\302JV\274\270\2224=\313W\003<\346\224\255<\021\020N;k\360*\274U\325\377:\360:K<\273\223\355\272\'\376\005<\322\360*\275\270\347\035\273\341\3754=\366\007\311\274T\345I<~w\\\271\317K9<\226{\234\274\253\210\252\274\243\020\275<\"\035S\274\330\304\\\275z\255\025=\367\240`<\321a\255<:<&9\216\'\373<@\017\265\273\201\345\022<\'\235D=*\354\240\274\223T\036=q#\363<\034\233\357\274)\363\256;\215\221\\\275X\240\035=\303\225R;\342\241\257\274\354X\377<\246#W=R\017\2138v<\230<\222<D\275\203\200]=?\022T\275k\311\031\275\2424\327\274\003r\3369\271no<\342G\\\274\220\001\357\274\232\377\326:\252=\010=\207\312%=\035\"\357\273\024\242E\274A\370:<\312\354F<\t\232\257<\344)\360\273\0356R\275n\020P\274)C0=\240ib\274`i\037\275\315\023\226\273H\035\365\274\317\231B\274\337\020\304<\346\326\233<\346\224\037\275U\032H\274\221\341\023=C[6\275\210\255?=\023T\014=\341\241>\275Z\346\372<)\260\275\274\325gy\273\326\366\002\274\352\340\337\274B\003\250:\351\344\240:\033\177\266<\341\203\315<\246t\305<\2431\230\272\313V\322<\210;\006=*\266U=\212\006\023=\205/\213\273\2629\210<8\261:=\313\227\035=R\307\275\274\235l\364<m\250*\275\3121\026;\375\317\375<1\3429\275\331wh\274F\225\334<\2208\341\274\301\267\255\274\313\212\0069V\363+=\324\201\361<\3045W\275;\354\301\274\364\257\366<\303\322\305<Q\245\377\274\010\300y\274\352u\227<8\005J=\306\2054<\207\275\343<\265\353\027\275m\332S\275\025\277\264<C\206\331\274`#B=\242w\225\273\303\206$=\250\213 \275$\373\200<\350\233w<0aJ\275\215\255\244;98+=\266\366\240\274\242R\006=\267\257\341\274\314\355\023=\355\325o;<\244\302<W\311@\275V\234\357\274/\311L\275\320\342\231\274\017k\375<\326J1=@\352I=\324\367\346;\026?\311\274MQ\024=\241\304<=\346\262=<\273p\013=&\"*\275\374l.=\262\342<\274\375\321\273<8\273\365<\202\003\006=\\\373@\275zFV=]B\261<w\033\013\274\222s]:\313\317\004=w\n<=\321\016D=\033d\t=x\222\351\274\0320\213\274\031\271\217:\rE\013\273\302D\351\274\324\305\n\275\3743\371;?D\003\275\344\\/\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\247\177\004\275\3444\375<\312i =\221\336\231\274kz\337\274\361\026\n=(\355\275<&\217\217<\234N\273<<;,\275m\234$=\223\316\'\273\330\277:\275\241E\034\275\334\227\234\274\'u[\275\000\376\300<|\202A\275c\210\007\274K\246\007=,WQ\275\332p7;\031\260\377<.\303\n=\207\024\215\274~\2152\274/6!=\224\203]\275\264I\023\275\213\033O\274p\3421<3j$\275\322\tO\275,\253\263<C\227a;\350\022\335<c\316\032\275I%@\275s\352\250\272U/u;\203\215\n<\302\366\221<r\340\314\273\3061!\275\003\337\003\27549\371\274\327g\373<Q\367\270<\363\314*;\026#U=\313^\317\274]6\313<>\271c\274!o\350\272\254^\365<\330\246G=$H\224<\r\224\320<\306\316\201<\262\002V\275h\3157=\t2M\274d\243\341;\330\342D\275\320\213f<\343\3177\275\225A\025\275\216Q\005\275\023\025\306\273d\347@=\262F]\275e+\363\274\300\255\034<\034\224n<\371]*\275\222h\265\274C\271\235<\214<\220\274\327\252\261<\010\221F\275P\327:\275\272\247B=h\221K=\236\025\236;\277Y\331\272\031f1\275E\256\346\274\214W0<\221\212\377<\206\373\306:pZ&\275~W\377<\345\245\014\274\r\227@=\220\335&\275\033\206\022=\257\005\034\274\257U\223<\317@M\275\024\001\002=H\253\261<m\'9:5\216\037=\316\t+=6\"P\275\344\212\033=\201r\026=\346\034k\272%.\303\274\20141\273\305\251(\274PfU\275\261\003\035<a\301\252<1:w\274Z\\\200<\325a\357\274A6\203\274I\370\265<\000\373\034=\233o\"\275\371\024\303\274\007g\206<w\247\007=\272`\311\274\366\343\273<\336\371T=1^X=<K&=\313\246\205\2747\245w<\273\261;=\273=\317<t\307\242\274\274\302\006\275e`\005<\361\340u:\265\233\003\275\020,5<\031\"2\275NUW=\311/\016<\213\275B\275%\214$\275\305\247\275;;Z\\=\374\314R\275\273,%<\236\266\033<\001\240M\275\253\316v<\270+\t\275X\335\260<\207\3336=1\335\020=6\220\272\274\231\267\217<\373z\207\2747~\311\274A\\D\275\221\003O\274\210u\226<k\313A\275\231\275\254<\374%-\275\377\023\337\274\275\\\034\275\245\225\260\274\001p\212<\222\330 <\204W/=$\342\024=RN\316<\032Y0=\316[Q\274\002\2035\275\351\252=\275\221\377\351\274f\302\000\275P\354\024=\374\316:=\2076D<-_\'<\027(\244<\211\026\203\273\320\360$=\216&V\275\204M\374\274\307k\014\275\251b\017;ct\025=\375\351\322<\266\241\322<\020\317\271\274\313[\377\274\3351\030\275 5#\275iW <S\200X<A\225Q=\204\331\224\272\300e\357<\230\311\031=\351F\"=\010\227T\274u\3277\274c\330\204<\300_P\275{\244{<\346+\272<:9\021=\0148\024\275f\207\246<c}\260\271?5\244\274\014\036\335;\236\255A=\"k[=|\271R\275\301H\302\273c\260\013\275M\3358=\030\323\033\275\236i\021=\200\364b\274l\222\030\275\232*\226<>\'b\274\003\226\'<\214_\027\275D8\034\275\270\210\267<\\\337D\274\033^L\275/O\254\274\311C\202<\226o\027\274\277\247\027<\267P\022=q\317@=gE*\275\2479N\2753\253\013=`H\204\274M\370\016=A \244\2731\351\013=\241\257\272<\373\354\317<pA\200;\322\241#=\0163X=\t\220&<}t\"\275\320L)\275%\013J\2752<\'=\301P\311<N\324\352<\034rY=}:V\275\255`C\275\225\347Q=\273<n\274Ib\315\273\373\306\006=\200\205\022=\330\247\305<\353P\346;q\304\300;BG(\275\312X\360;\367\2731\275\305 \221\274o\257\224\273\376z*\275c\241\371<\343\275\372<8\341F\275\327\002#\275\364\203\337<?\2209=\254\377\235<p\004P\275,\230Y=\037\000\004=\016\010\366<\024A =bkO=\301\226\007;\224\\\206<nS\250\274m\274$=\357\372\r=j\260U\2753\234\256\274kP/=\225TJ\275\301\006\313<\341\265T\275\360\367\022=h\232\300<DG\341\274!V\022\275Vd^=w\2564\275\311\223?\275V\237\215<h\372D=b\230Z<\351YE=\r\234\350<\337\303\274<c\210\022=+\375\244<F\376\232\274\336\357\252;W\342\221<\211V\357;\027\256\270:\\\267\r\275L\2669=\370j\375\274\246\003\2659s\260&\275d|O=\214\241\361\274\212L\235\274\252\3505\27598\017\274\275\322\026\275}\251n<G \037\275u#\363\274|n\315\271\241\000\n\2750\357\020<\'d\323<\350;\247<\264\351\023=\244/\030=\220QB=9\2205\274\023Q\277;\332R\264<\276\276\321<g\035\221<\252\235\\\271q~\007:\252\307\"\273\254\320\024\275\224V\017=4T\010\275\234\347\322\273\350/9\271\2464\037\275\324b\345<\325\335\024\275,st;\004\205K\275\232m\003\275\247qS\275\016V\270;\364\356\323<$J\013<6p\322\274\266\353i\274\216\'E=|\262\360<C0\021;g\0008\275\276\333\323<\035\363==\245\026\024=\177\001\233\273\302C\261;\2051\024\274\342\277\007=\310e\254\274d\326[=\252\224\345;\026\026:\275\213PU\275\242\373\265\274b\241\256<B\220[=\027\213\237\274\304\226\247\274/k?\275a3\324;D\355\244\274&\253\360\274M\2210=\033U.\275\017\253\331\273f\270\023\275\000r\342\274\266\277#\275\354\276!<\366w\370<x\311I\275\213V\000<\006\007\002=G\272\357<\335{\310;^\252\2468\323\377\'\275\202\231\003<\310\356W=.\300\256\274b\324$\274\315bK=\242A\244\273I%\034<\216\315\006<\255\264!=\306\177\022=\334\310\030=r\330.=6\207\017=gh\216\274\364\302:\275M}\243<A\002]\274\022\005\305\273{.9\275\341\n\032=b\3544=\274h^\275\020K\003=\023\206\333<=\352)=]Y\033=)G\356;\332G\276\274\266\236\207<s\260\033<\262Q\355<I\344?=\032\361/\275\246\024-\275c:\000\275Wq\357<\265\270\207<\2008W=\331\324\201< i/\275\202\331\374;W\331\357;C\311i\2742tO\275\356\211i\273\035\376\241\274\276\005R\275\017N\006<\354\312*=\177\251\223\274\021_\024<i@M<\206\256\020\274\351dY\273\213T\002<*\322P\275k\376\310\274\371\314\004\275\261\3670<@_U\274\326\024\261\272\336\336\014\275uy\032\275\225GD\275m:\325;d!\035\273_\377?\275\363N\005\2740a\204\274\347\240\344<\215f!<v\316 \274\371\'\006=\344\376\014\275\376\211d<\276>\362; \014\033=T\343>\275=\207\262\273o\230D\274\177\276\354\274\014\234\207<\221hN\275\016\2702\275\010\301W=U\271\\\275\231\357c;\213\363\022=\375\323(=\350\207.\274\247z\270<\023-\327;ys\210\274h\337\024=\324\240P=\355\370\271<\364\277\3409\366~M=\211t\350<\223+Y=\311\325\366\274\336\276\226<\372\004\255\274?\342\014<\220\363/\272\310\217!\275\377\301\026=\321~\255\274\027\3228\275\375\033I\275\004\211c<\226q:\275\21310\274X\303W=\337\265\272<\306\316e<\231\213\233\2723q\006\275UC\006\275\004\376\310\274\232h\331\274\312\241\\=\232S\017=i\236X=\353\333\026\275S\342;\275\306\316\307\274\3178#\274\3477\321<\242f\240<\277=\247\274\207\033\035=\370\2148<C\372\021=5\233\r\275n\177E=M\024\262\274\316F\267\274\3237\340<\232nO<0\315B<\247\376\212<\321[9\275&f\200\274\245\326#=\345(\277<.\n]\275VMV=\236SH=\351\367\t\275\0351J\275\242\343!=\374\245\350\274a\334\241\2747I\376<\021\345J\275\320O\364<\256<\366<\233\264\350:\303\300\n<\001h#\275}U==0\004\035=\266 \244<Lb-\275d\357\251<\344R^=\345\237\253\274\371\321\220<\0056\273<(\324?<\3604\333\273^\237\314\272\3028\303\274*\367\201<Ch\300\274\"\326q;\212j<=\351{\251\274\022\326\036\275\321\363[\274C\323\221\272\351\303\364;;\333\374\274f\033+=\236\224\"\275\367p\224\274x\374+\275D\316D\275:\317D=\312/\001\275\026\314Y\274\234\201<\275C\355\005\275j[5=W\034\232\2741\330\376<\354Y\005=\350\253\004=!\005$=\226R\\=\251\333C\275\n\020\313<\325\352[=\243\375\212<SHo\274\242\335\347<r]\003\275\030\376+\2751QP=\025\215i;hPQ\275\347\346\210\2746\201\200\274\225\354\r\275\340n\010\275=\236\253\274\365\313\360\274\'\307\030=\221\034\027=\221A\027\275\t\304;= \230 =\361\263\024\275\320(\226\274\036\214\311\273\254\222\345<\032\274\006=\336\357E=\222\311\367\273\237\373G\274w\016\276<\034&\213<n?\376<\034\226\346<\303\326L=\363\372\013\275(C\262\274\207:$\274\201\331\023\275\227\256D\275,\3535\275rN\001\275\303\220\304<_\305\222<\277+P=\356J\210:\314\202\250<\304\216\326<I\376#=\263+z\274/z\365\274\301l(\274\032\026\020=\034k[=\026\320\005=H\300)=\263p9<4\364>=u\221P\273\031\020\267\274\3775Y=\2149\017\275wd\r<h~\221\273\257\000i\274\312\215\311<\276\256\000=\306\316\312<\361\021B\275\232B\267\274\265n\306<<\301D<\237\210W\275\335\366\323\274\246\223\310\274\347\350-=eP\027\275C3\030=\001\330K=\334\265~<\246O\245<\367Z\315\274\362r\370\2740\362\245<!C-=\035\326\346\274Q\377B\275}\250;=\001S\036=\272\254)\275\272@W=#\345 \272\356\023\254\274\364\215-=F-\342<U\245\020<h.B\275\312,\031\275\177\201\002=\372\377\220;\277?\225\274\220\204\350\273s\210q:\023\236:=,\242\"=\352M\266\273\204\256J\275\316w\031=m\306U\275W+\324<eR\267\274\333\033\363\273\022n?<t\301\000\274\t\316\001<M\014\010=A8\270<\263Q\300\273K\'\231\273\307\326\352\274\357\374\006\275\020\264\017\275TH\332\274\276r\032\274\347\302M=\220\3756\275\321\227?\275iO:\275\366\032-<\344#[\275\357\355G=\322\220\270\274\204\030\006\270\036\350{<D\233\034=\244\341R\275N@H\275U\'\221;>\236D=;\332 \275i\365u\274\260\007u\274ts\003\275\340\212A<\317\361\243\2744K9<\370YF\275\315\361D=fd\356\274\277\231*=_!\210\274\342\013\327\274\266#A=\004MB\2751\372<\275\001P\000\275\340\247h<\264\024f\274\002\214\010=F\270N=C\033.=\000\030\232<Z\222\327<!-\025\273\220\311\233<\354\241]\275\344\343\035\275q\264\356\274\316EX\275\016\323P\275\204\347\364<\246*\'=\364\371&\275>\203\343\274\240<\022=L\303\231<o\3127= \261\263<\264k\002=\201\275M<\013\300.\275\007\252\022=\000(-=\337\253\r\274\311\221\373\274\367H\002=\341\247\033\275D\364-\275\332\221\"=\214\365\337;\006\320\324<\363Q5=\231u\326\274w\356\017\272\346Y\235<o\237C\275\317\352\324;jc\022\275v-\372<\206\275\027=\361P\243<@\241\213\274\006\232\277<#\"\014\275\250\365\235<k\333\227<\314\023\'\275\355\3300=\001\002\345\2730F(=8\371\336<\332UB\275cVH\275\246\235\320<\260_S=j\335\215<\326A\316\274\001\035\030<\272gn\274:%Q=\027\017\277<\374\246c<\326\202\321:\336}\245\273\243\274D\275\210\333@\275\301N(<\347H\022\275Y\246>=\347u[\275gf\210<\317\024\261<\251eO<~b\273\274\267\321u\273\013\223\317\274k(S\275\374+{\274 \324\332\274\267s\352<\250\312B\275\377J\037=\277j9\274^\3061=\3056G\275h\002\307\273/\251\357\274C\351\314\274\224\300\003<9Z$\275{\027@=\177\205\t\275C\222\210<\016\251B\274\023\013\307<.b\361<\327\247=<\361\010)<S\220R;\337\236E=\020\223\201\274h\265\006\275\240\005\257<C\210P=/\330\030\274\342\275\341\273\017\310R\275k\307\302<\245\300a\272\214\333\313\274)\276#<Y\363\t;\nf\367\274\"#\n\274\346L\335\274\034\233\231<\370\t\030\275P\374;\273R+^\275V\225R=1\217H=[.i<1\224Z\275*\006B:.FL=\000\276\312\274\025\363\007\274\2179\024=[\352\247<\260\352;\275\264\304E\2758\'\317<\3739\262\274\007B\371\274\250\303(\274\007:\301\273\rV\036<D,\236\274pAP=\036L\257<\334\370\025=\223\311V=\356\352\334\273\312\342]\275\002\r(\2756\345);\2747o<\254\223\t=\272\374\323<\322\377#<\027v\225;\375-\322<\025!\236\273.\330H=\245\034\366\274\204\020\013=\004\371T=\036\264\n=\260\224\n<\007\357\010\275\324\0254=A\0133\273\356T=\275\214\252\367\273%\344/\275\021l\027\275\377=\020\275\300Mu<\310\031\027\275c\355\231<\315\210Z=\n3\246\274\023\301\320\274[\026Y=\305A^\275\262=\352<\332[,\275\275\221\031=b\2367<\237\241$\275\317\022\004\274\233\252?\2757\017[\274WX9\275\245?H\275W1\200\274\224\324\274<\303\212\244<\337mp;\341\267\372\273B\360\354\274\220\370\323\274\226v\323\274\306;?=~8\350<\350R\210\274\253[\001\275\305\305D=p5\377\273%\322\034<@\352\r=\207\\\"\275[9C\275V\347\257<;\3730=PgE\275\217\362W=\224\264\275\274,\002X\274\270)\300\274;\277\t;\313\001\267\273\265h\270\274U\364\016=\246[\365\274\206\330\225\274\354:0\275e\034\210<\354\030\235\2732E\037=W\373\225<\031\263L\275xfU\275\2159H=\317zx\272\321R\275\273\'\315R<nL\035\275\242\333\203\274\037\352\236\274E\232\301\274%p\361\272\245\214\253\274\224\273R\274\217\207Z\274t=\243;\247>\245<\252\207\325\274\252\232\325<u\027\252;\304HX\275Ph\363<D2\214\273G*\'=\322\365\226\274\233\024*=n\222\333\274\244{H=\244s\327\274\'\255\020\275v{\277<\214\353\227\273\336\332\322;b9\363<\221\233\031\274\001G\026\2759\264K\275\"\364\007\275\233\344>\274\234\307\364<\267(T\273\030\210\037\275a[\273<\350#@\274]\350?=\267yL\275\227L\017=H\240\237<(\270\252<}\224D=DK\r\275\225\267\341\274\273\244V=)\232j\273W E\275\261\215\024=\342\304\270\2731\272\336\274\3201\323<\"X\r\271\250\322\361\274\036\027\202\274lbD\275\000V\004<\256\022\013=o\334#\275\375+D\275\335I\034\273>\236\272\272\372(\022<\245\021\351\273yY.\275\037\262A=\270\233o<\234\001+=\0370\204\274\2006==\332r\005\274\003\350\205:\357\236)=\325\036\027:\242\255\274<\367K\036\275\250\370\033\275S6V\274)\272\360\274#b\270\274\032\346\266\274KTB\275\316\016\366\273\0265b;M\300-\273\336A\205;B\352!=_a\031\275\316`\360;\217\354\027=\304\003\354;\263\370\022=\232\246!=\007:=\275z\275\240\274\006\017A\2751e;=J\331\007=\031\205?<\306\233\031=G\306\345<\275\262\030=,\314\347<n\222\032\275\3048\033=4\345\023\275\321$\305<rb:\274\227\272\202\273\205\017\300\274\021\263\033\274 2d<&\322\321<\241\005\236\274\253\316/\275\"\265\264<T\222\370\273\366\272\000=\247]\003=\204\t\275\274`T:=RN\002\275\236C\251<\233t\"=\302%\324\274\341\"\230\274]\223\226<\333\305\230<\240\217\244<D\361\200<\254\352\257\274\233C\200\274\346\244\023=~\377T\275\"I\004\275\205\213\244\274([\006\275\213\341A\275\237\033\345\272ai:=$m)\275\342*\314:\353q\317<\230yc;\002\3700=\264B\020=\346\254\311\272\002Y\233\274_\213\325\274?\313k\273\212\261\241<(]Z=dSD\275\001\336\317<\302\377,\275P5]<2V\352<\201\217Y=\t\220\360<]V\003=\354\242\n=\030)\234\274Ca\t\274\322\264\325\274~\0239;O:?=Y\300\037\275\225\272\377\273W\357\204<\300\302\224;T+S\274o\341\363\274\341\240Z=;\033\256\274\336H\211\272\016N\307;\243]\350\273\336}\264<\344&g<L\303h\273u\037\026=\374\330P\275\237\267\223\272LpN\275V\3162=\206\025\373\274\300B,=\253:\224\274\265\000[=*?\340<g\250+\274]\n\304\273&\361E=^\310P\275-\316$\275\327XO\275\024N\211\274\316\332\210\274\255\365U=W\260\243\274\304\033r<\331\240\347<\022f)=\313W\025=\306\354\260<\327\206Q\275d+\371;\346*\030\274h\274Z=Y\210\247\273\226J\377;X9\204\273\344\227\367<\327\2426=m\2264=\320\2040\274n\3622:\321m9\275\303X\003=T \235\274x\335S<(\035O\275V\031\"\275\233PE<\244x\227\274d1\343<\003\014\237<\316nr\274\004I\220\274\313Z9=\2532\255\274\266!\033=(pj\2749\375\022<\205x\023\275\234\361\344<\222\310\007\275\353!\331\274\030tA\275\324\3240\275c\372A\275\376\365B\2753\020\265\274\343\330\376\274\356\001r\274!\366\304\274,\247\343\273\231\210\277\274e\214\'=\366g==\376\002\016\274\374\354G\274\257\022\317<\\\251\267<G\247\023\275\261\016\345\274\367(\234;\006\023\005\275\314\2525=;(\031\273\3479\306<\016\365y\274\017\017\245\273@D\330\274\323\357\303<\210GM\274\212k|\274f&\204<\231\255\315<\207MR=R\300N=\346\332\365<\224Ay<\256\'Y=\211JH\275P`\214<\252\231%\275\234\004\221\274\254*B=\244;%\275\340\207\'\275[\351\247\274\313\264\017\275\202\016\003=\245@t<s\021\356\274h\354R<z\006c<e/7=\315<?\275p1Y=\302u\\\275\321\027)=.[\302<F\221I=\337v0\275\355\253\300\271\237\322\262;\337\371\350<=\320\014\275<\007\307<.\301\326\274Z\3178=\361\020\010\275\236e\216\274\211\032\020\275\303\247\026:f\317O=\225\006\221;\0044)=a/\351<\021\312E=U/\033=\200\327Q\274\325\321H\275\216?\350\274\271X\311\2727c\243<\334\260@=\255\323\016\275\257c\336<\366l.=\272\201\221<\021\352(=,PB\275\"\333e<\016\376\016\275:\000\306;=\325\330\270jAd<~I;=\n\353*\275s\266\346\274\334\334\372<\001\2266=\275\302\272\274\250\003\346\272\006!\355\274\342\331H=\014,G=\373\177\n\275o]\354;Ht\245\273i$\260\274\003\344R\275Q\031\"\275\372j\320<Q\263$\274\226i\211< s\221\274^h\255;\253\247\211<\242\341\224<\277\223A\275\336\365\374\274\005\211\204\273\237\'=\275\270\236(\275^\372X=\374\365\221\274\367r\223\273_\352\314\274\333W\342\273m\353\225;^\036\272;\247\'\265<\261\271\033\275\260D\020\271N\324\231\274\261\377j\274\2569\376<\315\006\027<>\201\317<\020\266\002\275\021q\304<\372t\014;\010\371:=nu\234\274\342\313\336\271\2139\036=\307\341\002=\260NG=+\214\364:x\234\333<\311\007\362\274\024V:\275\216\006K\274\302\225\306\274\277\366\034\275Dg\273\274Hz3\275\005\213\"\273\262\304\351<\2043#\275\002b\264<:\204<<\000\305\\\275\245q\260<\243\254\023\275\335\001\033\274Or\224\274\217\301\326<\367\243P\275Y\227@<\366\266F<N\276\200;\350|\025\274\367\3240\2757\356\213\274\2451\027=\003[\330\274\345\021\261\274\260\214\367<6\3377<\2225E=<\246\215\274\322o\037\274y\243\221\273\304F\024=fl]=\022\332\006\275\312-\266<\\\2463\275.\004\024=po\243\274z.\037=\374BP\275r\357X=\205{:<\244\231T=\277z\n\275R\344(\275s\023\316<\216\257\346\274j\273]\275\252\262\013\275\0145\361\274\032\226\303<\221Y\n\274O\271P\2751\271\224\274\030wC=\010?#\273\004\202t<\374s\377\267f\233\004<\366=\331\274\246k6\275T^\250\274\363$?\275T3-\275\340\244W\274\335\202$8\321\t\352<YH\276;L\006\"=\230\244F\275\026H\235<\215\203j\274\350\234m\274%u(\275\000>\371\274@\213w\274qg\014\275\222\341\204\274\177\030\037\275;#X<\r\013\334<\026+\r\272iZ\210\274\303\314\266\274\372\212 \275\201A\230<\030\030\240;\352s\033\274Y\251y<\2418\347;|\314Q=\322\213M=\2731\224<\027\204\214\274P\217S\275\343\220\274<\243\\\010\2756\237\017\274\233\223\036<\304\226\035=\317\323-=\217h\366<\275<\002\275b\270(=\344\325\016=5A\013=\356\364J=\346\372\003=\333\2154\275\374\276\036<\367\005\232;$\333*\275,\023\027=~\034s\274N-\277\273\2630A\275\250\354\017\273t9\025\275\001\030\255<\276\243*=\332>\317\274a\250*\275\276vP=\034#\361<\024\330+=\2701Y\274\374\200\247\2749V\037\274F\313?\274\223\031 \274\'0\354\272bN\360\273\3206W<\254\344\031\275K\260\376<$ip\2744VK=\0342E=D\n\215<\016C=<c\273R=&\323)=\305\003=\275\307u\227<va\323\274\216\354\304\272\274\233\256\274\307\263\243\274D\304U\275\270uV\275\236uZ\275\350\037(\275F\363\231\274\030\212o\274\314[\031=g=\035\275\022\307,\2734B(<Ju_<\317\317\304\272\0271\033\273z\367\000<\275N:\273\177\372\007=\267\354\322\273\253\343%=&\202]\275\3109\344\274o\347L=\346(\006\275$mN=G\244\354\274fy.\275\210\307\035<\nO\000=\304\315,\272\2234<\275\264\352O=}\244#\273\337\246\007\274\262\020\220\274T\226\343\274\335\360q;\321\236\"\275\374\3067=;\226\237\274\202\276\234<\"\262\006=0\005`<\3770\002\274u\310\031=\025\277E=\336\337$\275\341\000)\274b\2056\2753\206\'=\tJ\363<\272C\341<\371\265H=\340\271\014<.\003\343<8\223X=\237\300\233\274\263\241\242<_F\371\274\362\273\261\274O\367\024=\rA\033\275-\203N=\361\243\"<\237\364&=\035N6=\312\366\216\274\033C&;>,\256<\376\261\010\275\271q@=\345\030\000=\270\233\003=\316\3009=^\253\365<\332r\314\274<\351\306<S\332\r<\"\2720\275\357h\021\274\'\233\364\274\231\2218\275`]\222<\025j\002=Qt\221<o\232\366\274fW+\275e\364J=\n\347\340<_\r\323\274\"\360\356;\254\216*=\022;\002\274wS5\275U\375A\274c#\304\274\253.\207<{\302B<\205\351@\274\234M\207<\310E\304<\232V\252\274\221\342<=\214\314=\274\341\010\371<\307Q\030\275\337\316F=\273W\242\274\257\000\035=-\\\254<\314I\261:\202\303\003\275\375\350\357\274\177\335\024\275JF/=%\346\241\274\213\351l\274\335\374\250\274\205\254.\273h\332c<\370}\244<\022V\342<.dY\275\233&\243\2714\314\250<\333[1<\003\004\324<\232\272#\275G=\n\274?\271\005=\276\016\347;g\316\304<#e\341<\375\374\374<\313\223S=\377F/\274\336V\222\274L\0378\275Cj\341<ZA\020\274\222N\355\273\273\267*=ZwQ<\303\302\"\275\322\226\342\273\345\025\310<E\203\021\275l\022\223\274\337\022O\275UHt<)\240\025\275\230\245/\275\353\244%=\336pU\275`\210\215\274N\233$\275\2362\262\274\007$\213\274\374\222\253<\304UU\2750Q-\274\224\244#\275\263\204M\275Cg\331\271fZ$\275\241\364\253\274zA\360;)$\226\274\002\021\275\274$@\274<\344\300\001\273\215\027\'=\246~\006=\034\333L\2757\304R\274\241\331\307;\226\227\024\273\021\323E=y>\035\275utW=\305\304J\274\\\033\223\274.HZ\275\247\266\030\275j?\201;\372\224@\271\246\',=M\227\250\274\007\022\005\275\3131K\275\372\017\244\273\323\207&=\310.H=u.\236<\342\211\\\275\2043s<\362\327\252<\361u\347<\202\222:\275\027\224\016\275\034/4\274\372\006\010\275\270#\020=\177L\034<\003\312\305\274xn\324\274\324\250X=\r\345\207<D\265\240<\034Hh\273\274\204M=\336OL=\256\322O\2759\267\034\274\375D$=j\301\300<\003\200\n\275\'\350o<6\304\274<-B\276\274\006\312w\274\304Z\221\274G\342?=\264\375+\275\007,,<\010\243\354<\366\364\034\275dR\366<:\220\333\273\203\231t;\301\022G<\026h\376<\304$\367;\357\212\030:\232b\306\274\245\371M\273U\320\"\2752\265\362<\263\317\034=\3248\342\274\304a\"\275l\355 \275\343d\353;,\0140\275\264\tL\2759\2267</\004\354<0g,\274@\314S\275\025\260\r\275\367>0=*\373\332\274Z\373q;\366Z\277<:\334\271<]\225\343\274\177\353?=\376P\340<X\311-\275\324w\235;\376\336\025\275\032\t5=\252U1=u\007\261\274\272\220\024=,\262\002\275&|\033\275\347\002\243<\360\rU=\227Y4=zx,\275\322\004N=&i\344\274\252\355A=\231\017\220<\334\246L=M\344#\275y\022*=I\315\342<Ha\303;\020\326\330;_\007\200<V\021\367<\372\274\342<U=;\275\n\243/\274\334\246m<\r\326%<\303\306\314\274\177\227b\274\356\006S=\220FG=\366x\t\275\335)3=\t\262\035=\313w\277;\210\3752=\305\270\023\275\300\231 \2757\220O;\360\206\253<5^K<\215\0325=\207\034\026=n2\007\275\005\365\036<\266.z;\265\300L;} \261\273\337\013^<2\374A\274\354^\373\274E\231\177<V\245J<\037\005\264\273\367\254\236;xl\022\275[\024&\274:\273>\275\026\323\306\274\257L\204<\267&\352<w\031\276<\206q\273<\374\302\330;\226\237\330<8\024W\275F+\341\274!\260\010\273\360\365\211<\302\257\030\275\0003\254\2749Z\221\274\3100 \275Z\375\213;\223\323\270\274\247\357\240;\216\267\252\274\032\272\366<\251\034(=\351\321\013=\220\234Q=\0217\030=\'\327*\275(\343\237\273\330\265\311\274\346\245\003\275\243X\334\274#\363F\274\241\204\221:\n\217\005=d\351\256;\316\252\213:\276\347\022=-1J=\r\343\234\2741K\230\274\273\006E\274\300q\003\275\230\227\250<\223\3128<r\240\235\274i\202\250<f\2642\275\177+\272\274;Z\023\275\032c\027\275X\345\207<\2734F\275\317\352\335<\354M\260<g\247\t=\003\021Y\274\200=\035\274\023#!=\2153-<~\326j\273\005\220\026<A\241$<g}\256\274t\030O\275([\324<\0002\031\275T\207\270\274\370\257.=\352L8\275\375(\366;\337\366\256\274\252)>\275\255\257@=\360A\035=\320\004\337<6\370\333;\242O\010=\377H6\2749\3154=\254g9\273\321e\254\274\265\023\013=\267\020\207;\371\217\035\275\371=J\275R\265\352;\257\212\257<\310\322\202:\3767\202<\001\001V\273\227\344\363\274\327;?\275Z\032;=\1770\210\274\r\231[<\306Zq<$1\374<\337\307\260\2736\n1\275\302\224>\2755*\033\274\231\374\307\274\010m@<\254\037\'=\316\030\212\273\235\3332=\236\301)\275\3622D\275\271\344\332<\362R\242\273[\177I\275\020nT\2755\3074=\277\341\332\274\304|\037\275\313\256,=\005\243\302\274\272\2427\274\274\007\344<\tk\246\274\36330\275H\323\353;\263\2172\275\234\235T\275@\252\034<W}\205:\236\342\363\274\267\\W\273d\321\\\275D\376F=Ibz\274\371\236K:\005\333\302\273V\331\242;`\302$=\334M\035;\256\347\214<;O\345\274G\337@\275\377\266\020\275qWT\273\251\272\361\274\352\017r\273t\205\032= \006D\275\361\2112=\316z\025=PTt<g\0209\2748\370\205\274\346\203\377\274_\003\335;nq\367\273\200\212]<\025Q;=\316\r==\3207\276\274\277\362\t\275\322oN\273Jh\241<\247?A=S.\277\273\004\223\323\274\344\\M\275Y\305\323\273\214\013\262\274oa\030=\'\266\323<\326\215\327</D\246\2746o@=O/\216\273\227\206\"\275\037\331\001=e}\035\275\265\260\033\275\333=\007=\006\026$=T\353L<@\344\271\274\177\264,=\035%F=\316*\026<T\200\320;\225h-<\351>t<2\363\377<\344\347\314;\37703<Y\340+\275\207\212\307<.\251\221\274\030\263\004\275j\1778;m\237\r<\314J9\2745\247\304<\325\370\n<\354\371D=\276P\220<;\227\361<u\233\362<\227\002\n<5[T;t\372Z\274\255\265\262<\345\374E=\023?\023=!\001\367\274<NQ<h{\027\275n\t\210<5TV\275e\305\026\275b\353 \275;J\234<r#\324\274O\305\312<\014Mb\274!!\374\273@_2<P\353\023<\243K\207\274\315\001\021<\000\377\307<w\231.=C\272\021=oi\\\275t\002(\275Y\277\251:\262-+=\033\2676=\022\032\230\274\014\203\010\274\027\364\351\272\271D)=\026\\\270\274\323H\036=\375u\026=&~\032=\220p\030<\304\032\336<.\361\033\275\254\254/\275\224\014S=\375\315\017\275X\033\266\2740\217A\274Q\331/\275\250\023\t<\226\341\230<\342Z>\272\345\277\217\274\347\2469;\272\372Y\274\0025\021\275Y\261\335\274\237\362Q\274E\2469\275\037\330O\275\203 6=1\307M=\366Gs\274T\017\017=+\036\273\274\031\023\001=\362V\254\274E*\345\274\366\240]<\341\3232=&\226\254<f} \275\275\335M\275\025\t\200\274\027\2756;\'\220\254<g\025<=\210\310\203<\275\242<=\253r\007\275\253\311\022\274\202\272S=s\261R\274T\370\316\273\017\270!=4l\035=!\224\356<\217A\317;\247YU=EI\325<\236\350\021\275\337H=\275\304\311\323<\365\223B\275\345\007\377<Y\2104=\324K\000=\216\305p\2744\360.\275P\001\017=\026\361@=\306{!\275n\3236=\302\016>\275\n~H<\274\362]=L\254D\275\027\242\005=H\r\205<\213\017?\274I)_\274\257p\007<\305F\025\275\3178I\275\376\2467=\273\251\274\274_\200\"=\375\303\005\275\370 7=\262`\250\273}\225\231\273b;K=\321\306\370\273\221~0\274\247\321\314\274\245\261{\273/\261<\274\334\266\271\274Aa\001\275\036\347U=\267\303\266\274\272*\255;}\3720\274b\007G\275\361\205\200\273\315\221n<\017\203\346<\362\034R\275\033\237\234<\322\207\n\275,\335K=Wp+=\341\327\310<7\"4=t\350\251\274\225}c<\270\205\372<\310\372.=\226\031\000\275\330\022\n\275hQ\225<P\230\221<\335U,<\212>U<\234?\031\275\354\037\013\275\305/`\274<]\253\274~\3420\275\231\005\262<?\217)=\213\255\"\275}\007\301\274\277\323\003=\301W5\275r\240^<\231\301\364\274\240n\016\275B\321l\274\342\247\\\274\307\332\241<o]\235\274\ru\343:\353\005\315\274\034\355\n\2701i@<\016\347B\274\342e\254\2746\213\325<\332\313\376;n\037\036\275)\327\314<\267\002L\275\214t\025\275\002=\035=\237e.=\013\213H<\205b\'=\303G+=}\363\314\274\203\304\220<up\370<\320\303\306;Oh\027=\275\274H\275\233Zj\274t!G\273\357\245\335\274N\256\346\274\310\2159=\241HM\275\263\317$=\177\2279=C\301\365\273\311]\332<\244M\363<;\006I=\326@\377\274\273\226u<\355pu<\354\016.=\241W\215\274\013\307]<\036\321O\275t{\365\273\250\226\037\275\351\235H\275\377\204\311\274e0\037\275X{\016=\352\350T=%\'\017\275\\8!\275\200\325(\2750/\365<D\331\001\275L\320\352<\225\034\356\274\020\t\215<\005J>=`<\014=4\364\353<\003\256\211\274c\200==3~\013\275\\4\252\272\251\005\036\273\275\335\231\274\316\024\331\272#\020\201\274\025b\016\2759\307P=*\206\t<\316\350\313\274\016t6=\326\304D=n\250\213<\211\320T=G\343X\2740\233I\275\271{\273\2749h\221<\'Ja\273\n\t\256\274\317r\\=\377dc\274R2\302\274\273\362\"<\322\202X<\217\330&\274VW;\274\313\355\241\274\210\3021=\'{\357\274\326\\T\274\235\364\245\273R\3139\2748\350\362;\313^\244:l\230\352<\022\2779<2iZ=jt5\275\010\036]\275\016\352\004\275\232[\006\275Dx;\275`\274F\275\231M=\275\252*\013\274b\372\264\274\031\005F\275\231\026K=!\334D\275y1\022=\337\342O=\351bn<,\234\343\274b\036\030\275\247\246\224\273\211\262\241\2738U\324\274\206\323/\275\324\245\342:\314\365Y=\260\257E\270\353PF\275\343\033\220\274S\302\277\273\377[\000\275\"KY\275\217e/\2758\336B=\020\224\365\274\267\306\021=\r\"\310\274\336\322\321\274q\377/\275\326\315\016\275\225\246!\275]P\"\275\273\234\302\274\310\0362\275B\300\251\274\002\212\241\274\njI=(\331\263\274\241\327!=\341&\213<U\367B=\'\325\034:\023\267\014\275\227\004U\275\266\222\230<\036\207~\274^Hu<\025\201\311\274\347\334\005;\217X\346<\r\032\023=Z\305X=x{;<\305\243\027=\256\004\304\272\204\nU=\326hm\274J\340\001=[f0\275\027\3176=\010g@=\356B(;\236\201\267<\000\371\261<}\'\030<\315\337\356;\326\351\265<n^T\274m\301P\275|9^=\t\273\337\272\342L$=\341\360H\274\237\272\264<\257\022S\275?\365\335\274n\313\322<\221\223W\275IY\035=a\314C\275\354\227\320\274A\317\223<\305\307U=t\217S=x\371\r\275\3548E=0;\031=\334E\216<\341\213Y\274M*3=_\322\027=\226\306\352;\230\257\020=6_\016:jzP=\324\226;\275\306\251U=!}%\275b\3525\275\270\306V\275\307\323\000=\230\315#<\372\377\016\275z\334,=:\020\221<\247B9=\327zn<\225W\010\274\230/\311\274\376\273\216<\242\364\202\274\3040 \274\241\333\017</@V\275\237\355O=\210\241\334:c\nF\2753>\336\274\001\207P\275\307\256\356\274}\257\002=\001\354O=u&\024\275\005U\023\275\n\264\022\275\226\366\223\274g\215\017\275X\364\354<\365\352\255<\367}#=\013=<<\222\211X\275%:<\274!C\227\274f\320\377<\353\262)<\256D\353\274\003_\"=c\252;=Hd\026<+\342(\274K\030\325\273\212\355\014=e\001\032=\260\366*=\253\277\331\273mrA=\333~J\275\307j\020\275\241\032\253<\321\302\214<\351dv;\246\0226=\356\307\223\273\375\304\353\274\242%!=2\342*;\365\203\003\275j\303\032\274\033\273\3629\255\355\244<u3\306\274\303|G\273\277g\032=\223Q\277<\231g\202\274^\343[=\020\242\t;\341\213<\274i\340Q=yL\353<J{M=\207T\'=\252\275^\2730\177a\274Y\276\357<\20138\275\240]&=4~\334\274\316v*\273\275\2704=~I\346<\023\364\006\274\2328\341\274-\216\032=\034\210U=Q\240S;;\355\022\273V\323\001=\332\366K\274\221\364\323;VOT\275YVL=5\316\273<`b\225<k($\275\006\362\360\274\330\323\026\275\305\263\002=Q\240\301:h\234\"=\351?\315\274\327\027U\275\210kn<\367\320o\274R\317\262<}9\036=`Q\017=\206\222\032\275\336H:<o\202\305<\026\310@\275Gb\250\274)_<\272\n\201\035\274\254t\207<:\023S=\217y\254<s\273\217<\357b%=\314T\001=`\322\214<\224D\216<w/\003\275\353j\333<\377h\304<\273\013\313\274\346\363\010\275%\r\234<\343\373\233<\341\354\326\274\377\2609\275\'\350\226\273;;\322<U\034\200\2718KB=\257M/\275\276\217\000\275\002h\235\274\276\t\'=\267\326I\275p\217\373\274\024\014\003=\354\325\344\274x\337\374\274\324I\';R\n]=\251\225];\370\346\346<+\311R=]\212i\274\342\216\326<\2370U\274kV?<\311\364:=K\024\005\275\357\205\324<R\340\016\2758\022\337<\252g\034=\271o\203\274\302\207\033\2753\347B\275\350\355O=\231{\324\274\347\346\017=$C\350\274\037Z\244;\3051Y<\204\025*\275\242\340\316\2749\241\034=\346\345]\274B\313.\275\224\365]\275\323U\004\2759\376U\2753\255\017\275\212\016\013\275p\212\217\273\010\002>=\257\026\370\274\371\371\037<\254\321\274<\377\327\341\274\001\331\001\275]\313X\273+\025D\274\335\216*\275+.#\275\276f%\275\335\3654\274\367sP\275\320\225\t\273\210\372Q\275\022\t\027\275Et\005=\314\034\272<\002\032 <\333\360\247\273\261\237 \275{.\033=\263\240\324\274\367\026\362\273\031_\230\274\351K\347<\020\244\253\2733g\007\275\257\307A\274\020\311\314<\302\021+\275\224\2761\275GB7=|\221\024\275\246\203H\274\t\343\273<]7\026=\243}!\275\256\241h<\335\346\"\275\363\227V=\212\337]<\023\020N\275zL==o\343\350<\034\t\331\274K7\027=g\355%=\021R)\275\032ZL\274\203\246\033=\242\343U\275g\274<=h\231Q=\376\024~\274\033,\211<\224\370@<\233\243\304<\306\304\000<g#\037\275\304\316\016<\346~\351\274\\w\205\274\316\324\326\273\216\360\027<\010\344\003\275YO5=\244\3557=\343H\275<Vc)\274v\216K=\237lH\274\322n,=9.f\274,c.\275\322\001*=d\355\217\273\336\352\353;a4x<\3332\351<Px\225<\361\0354<\363/\211<\273\322\370\274\253\177&\27562K\274\"G\\\275\361Z\314<\262\312\t\275\264\005\223\273X\253\024=\313U\001\275\271 (\274>\277\"\275\025\020\307\274I\205\221;\272\327\n<\270\242\321\2748\313N=Q\340\006=X\242\374<\270\324\r\275\231~\036\274\201\350\022\275\020#\t\275\3308V\273\274\302\010\274.\206\273;\255G\002=\345\302.<\372o$=\272<\311\274\005p-=\331?\264\2743YU\274\262\177\000;\244S\356<m\274\260\274\336e\"=LB\373\274\241\206\t\275\034\r[\274P\327\004\275B\020C\273\305\r\000=]\307\020=\030\r\264<o\360\327;ey\213\272\330\204\210\274\017>\375\274R\370J\275\213s~\272D\234o;\240\210==j\362\235\272\3507W=\2437\004=\205TN\275]L\r=\235:\256\274\264\234\324<\027\244\237<\230\374\010=\256w\003=\304&k<#\331\273<\204\234==\377\330\027=\317,\026\273\335 \235\2744\211c<\301\030!\275\273\266D\275\303U\365:\226\316\345\274,N\246<3 i<@G\032<\224\220\031\275\001\2247\275n\357A=\323\\\027=|\222!\275\304\240\254\274\264\036\351<\311\037S\275Q\246Z=\371nU\275\002^\037=M\260\313<\234G\313\273\202\3052<\364\231Y\275da\366;]\256\n\274\013f\306\273<$B=\236H6=\017y\372;\177|0\275\004%\003=\241\311\r\274\322:2;R\324=<\234\242\034\2751,\021:R\335V;6\323\034\275O}\227<\311_:=9\024\254<\022.\332<\272\355)=\373VK=\227\002\341\273io\240:x~b\274\310~\321\274&\235\016=\235\273\221\274D\2205=\361\266\227;\371\361 =\266\327\031<vH\301\273\257\1775=:L\346<#\3609\275\222)0=\020+\037\275\215\345p<\032\236A;qAN=\257\301\200;(\005X= \307D\274\372\217P\275;*\274;\010\245\221\273\031|\226<\330\304\003=\017P\201<\310!\271<Nu8=\205\326\033\275\201o0=t\332\017\275YZ\r=;\010\014=\262\355|\2747P\364<\357\330T\2751\2750\275R)\366;j\222\003\275\007\237\367<v`\022\275\260\307\313\274\236\325\255;\275S?\275\'\032\332<\356\220.=0c\231\273n7\206<w\202*=f\"F=q\341R\275\007W\035\275\370\201?=3z\007\275/\007:<lw1=u\026\303<M\204\026;\265\2123\275X\260\366<\254\304\312<\037\225S\275\313\214\002\275\237\214\007=\277Z\321<,\325\302;\230/\033=\236r\337\273\021\370\200\273\317\024\001<wy\013=|k\301<\237\230O=\301\332P\273\257\312\351<\374\342\031=\035\351s<^\016\024=\035\331@\275;7\311\272\313\267\232\274\032j\304\274\374\010\023=\344`\241\273U\211\372\274\031e\036\274b\237P<\327\210\236:5!\211<E;\373;\023\274\026<7al\274\353\330\266<\276EZ\275r\271\031=\264\361\240\273\247j#=\017\241==R\335X=\205\233\227<\016\016\r=\320\024\307\274&QJ\275\330\327\023<\307\325>\275\276Z\213\274\203D\340:\300\361D\274\234\220\205<\207!\004\275\327\322\314<Pg\270\274\313\036X\275yk\327<\204\216\200\273\346\330>;p\264\027=9\364Q\275\243Iv<\244\247\213<3.\344\274\332\025\236\274b\262(\275\004\241J\275\004^)=\214\331\324\274\24650=\213\354!<\022\346&\2745\336<\275\250\265\225<:\020\020=\213\212&\274@9\372\274\013\272H=)\033{<\371\210\'\273\267G%\275\325\020\277<kq\240\274\026=W\275N<\321\274\234}\312\274?Q\244\274\0303D\275\0371T\274\177\255\364<\"\204\255\272\305\270\033=\214\216\010\275\366 \t\275\350\350\372<\n\247I=\005+\337<\013/Q=\312}5=\256\031;=P\372\354<\264\177\335\274|\317S<l_\351\274\306\344<\275\377 >\275\017\377\010;\245q\010=\361\333\037\275\201\245E\275(\3038\273\237\374&=>\010&\275d}\224<Y\365;\275\257\356\347<\213S\273\274xw&\275\3473(=\200M\014=\202\364R\273\311\232a\274\230\r\007=;E::h#\237\274{\2631\275\267\316\233<T\235T=\305\357\035=\3332Z\275\301\247>\275vO>\275\366\272\'=\367\'Y=\266\246\001\275\216E\341<5\223I\274\263\250\263<\364\223L\274\214`8\275\277B\367<\3511\001\274>\305.;ySR\275\001\023\"\275\004d&\274q\231\262<\314\234\230<\306\335\031<;\246\300<V\333$=\351\377\023<\340\234\236<\017G)\275\335\026\244\274\344a\361<Z\267Y\275ci+\274\273\315\003\274z\002B=A\017?\275LD/=f\241\203\274\330\246\r=\n:\'\273\203J\036\275*\327\242\274%\322]\275\244\215\020<0\306*=0\307\275\272:}\373\274\303_\241\274\256\005\314<\350\300\035=\221\273N=m\221\253<1\3275=\241\236\334\274\203R\232<`c\277<\303(4=\255W\220<71\013\275\264\'M;\222\201\030\274\241\032\327:\203\030K\275\203\301\027\272\207\314\"\275R\2555=m7\375\274\016\3303=\035\231k<\'\206;\275\016\330+<U\265\311\273y\357\006\275p\035A=\222\025\272\274\262\353\352\274?\363\204<\252\202M<)\325\314<\302\245\222\272\325R1=LK\357</\013?\275/\003\375<\326@\240\273\315\006\252<\014\023P\275\364\313\274:_9\323\274\377\343\375;_\340\267\273\250\276\201\27491\026\275\206\363s<^\362Z=W5P=\201H\304<4\2759\275+\253\223\272\213\r-\275h\234;\275\214]\013=\276%%=\214\361\007\275\334)[=\030\231%\275\333\341F\275\224\233\314\273-l\304\274\261\276W\274\222\347\306<\361\353\262<\267\300\206<*cA\274\265c\017\2759o/\275\rl\263<Hg\245<}\032\315\274\232\017\234\273\226\327\341\274\320\027\331\274\310\003\306<\317-H\275\005b\n<O\010\000=\307\330==`)\035\275\325=\020<\314c)\274\000\344H=\007\215\237<\220\213*\275M_&\275\337,x\272e\247Q=>\23578g\232\260\273.\352L=\025\254#<\222\306E\275\376oZ=\262\005+\275=\327\017=\376\320\342\273\030\3121=E\326\246\274m\275;\275\306\303/=\250\034\326\274\262\246^<[\2431\275\005\3432=\227\363\004\274\347\270\355\273\205n&=\t\372I=\334\r1= p\201<>\367/=\234+~\274\307?\372\274\321\344\025\275\003\370d<\327\300@\275\353r\013\274\010\021\353\274\347y\t\275\256\241\234<Jd\354<\tm\032\275\023&\260\274\032\332\030\275\342\255#=\177\311,\274\260\235\217\274\027\317\213<\026\251\340\273\222\322\r\274\220!H=\334e\001\275\237*\020=\244\331\250\274-\213\347\274\306]\362<\201\333B=C\237P\275\320\313K\275v9\330<n\347V<\254\tF\270\376\274$\275q\202A\274\365\374\216\274\035E\016\272\317\271\016=\240\257\265:\234;\005=B\001\324\274X\234P=\377n\023\275|\202\037:\177\327\337\274\225\344\341<\017\371\301\274\004\365r<\231\022(\275\250\346\006\275\023@u\272\371\327\240\274JJ;=\005s\220\274\276\340R=\323P\361\274N.\312;\020\240\355\274\225\017G\275\206 ;\275U\326-\274v\372\007=,\3427\275\251\202\037:\303\374\360\274\016\375\262<Kc\013\274\250-\002=*\'6=\221\323F=\017\333T=zJ\234\274I\225\234<\311\2750\275\240\332Z\274[2\323:\304\302:=\031\305.=\0305\r\275\031\233[\275\340\361B=}\2547\275\316\233X\275\351SI\275@\\\227\274\tc?=k+3;4+\325\274\016f\345<\030*\024\275\260vd<\333a\270<#~\240<\225\306h\274A9\021=\017\366#\274i\273\n=L0\342\274\224\203\036\275C:=<z\322B=\344\346\210\274\275\001!=\272\207b\267\360\237\264<Z\257c\274\230\353O=<\022\005=2\014\016\274\306\316Z=6\244l\274\272\202\271\274\3266X\275hHK\275O\322%\275 \351:\275a\331)\275\225\257f<\241j\355<a\250K\275\315\252\2149;\335\024=@\034!\274\251\t\376<T0k\274,\370\324<o]\237<\351`i<\326h@\273/~&\274\013\362.\274]9Z\275\221\240\027=\366b<\275\351\326\241\274\324\237\335<\344!F<\265\210\314\272ai5;\262xy:\2133\342<\203\034<=\331\313\016\275\377\205C=\010D\021\275\300QK\274BA1\275z.\017=\333\3310=F8\273\274AnR<\224\312q\273\3715\037\275\236\032\200\273\212\377w\273~\245@=p\305L=\360Hu\274fw\023=\177\216\246;t\224\007\275N\210\313<\212\025\320\274\000\246P\273\234B#=\256J9=\300\330\3557\242\006\254;\304\310\211\274/\252\311\274p\261M\275\324\2101=s\331K\275\336\206\213<\314BO=\\\353\005\275\274\217\"\274 M\230<\234,\210\274\335\370*=\237\256\310;\362wU\275\254i\246<\242\032\025=\036l\363<m;\020<\363\177\331<\254\336x\274|\227\242<h>N=\234\327\003<\262\007\277\274\304gX\275\n\202L=\242\302\035\275K\320\032\275\254\005\370\274\340\304\323\274\2555\337\274$\"2=\351\267\304<S\204 \275\303\214E=\355j\341<\200\022[=\210\037[=\261e+=\360\312\007=K\022\324<\277ZI\275\245\245\027;\362?\212<c\000\204\274\257X\032=dQ\311<\227j\312\274\227\370\345<^d\250\273\000KQ\275o\001\307\273\217\200\360\273iFB\275\374\317 <DDX\275\010\273W\275#\035\222\274+{\001=Z\237\275<\274\230\003<0\303&=Q\233\306:\200\202X=\211b\305<N\260\240<\320D\212\273\026\237n\274)\013N=\260\273\273\274\210W\023\274\023\2023\274\325\013\022=\374\021\227<\272\343y\273f\275\260\274\250V8;\216\246Y:&g\373\274\235d\212\274T\024\354<\263\t\316\274W\220L=\3051\327\274\267\366\004=\217\261\024=|\325\n=\312\317\373\273\226\272\263\272\264\371\343\274]\323P=\000[\032\275\301s\373\273\305r:\275\021\315w\274\317\276\204<b\024\351\274\246\245F\274F@?\274\203\305\005=\223\335\366<)\333\314<w\361S=\276N\220<\254\207=;d50=\370\246\300<\326*\003\271\314-\270\274\253\0173\275\253z\306<\322ut\274\342\315\255\274\271\342O\274\345J\355\274e\345\217<\326\210\346;F\231\021\275Nw*=+\215\036\275\363\017\013=0\337\030=\343n\311<&D\234\274\027\036]\2752\207\350<\3431\355\271\362\007<\275\345,\351<\346\223\367\274\\\031\245\274\276s\2579e\322\376<k\231!<\376\360\037\271\233\276<=D\226\371<\200*\240<%\273\225\273\305\0070\275e\320\016\275\362\263M\274\227\316Z\274G\234@\274\333\336\031=\265!\2569!\233\010\274\302\036\264\274\334\225O\275* \030\273\345\306\214\274l%Z=\376\244\030\274\026\207W=\312#\007\275I\233\255\274\034N#\274p\350\272<\265\314\n\275\240\313\026\275}kM=\233L^\274U\325g\274\2210g\274\324P\236\272\217\303\377<\"\362\026=Q03\275\006AI=\210R\231<!\207-\274i\216\000=1T\007<2hS=\344q&=\006\356I\275s5\234<\227\271/=S\371]\275i\273V=*\007\241\274\242\374\220<E\371\363\274\315\244\347;S\312A=D\220*=7F\023;\361\350\205;\001\374\302<\372\240\222<N\235H;\366\302*\275J\2632=\255!q;\266Q`\273m\003\352\274\366\275\340\274\273\0311\275\026\2460=0H\312\274\022\340\257;6~y\273\207}\016<C\274:=\335:0=C\212\377\274\361\365\023=\226\312\002\275\342:;\274\275\216>\275\326\2742=\223n|;\230\277\014\275\271\234\034=6\264\233\274\216\tN\274\350T\203\273\205\225 \275\230\215*=\026%\304\274bv\003\275\271\373\331<\214\330\360\273h\252Z\275\236\021\346\274\356\344U\275bc\354:|\374\224\274z\247\026\275V\233&=\222\252%\275/\3151\275\202\n]=\220\311P=R\262\212<\306;\013\275=]Q=\210zG\274\025\207\331\273\0374\314<\3579a<3\224+=F\"\210<\315\001\234<{\2742=\000\261\302\274R\270\002=\362\377\004<\303\302\254\274:\240B<\r\272\374<\270\177Z={\315\017=]q8=\225\270\n=\342\2668=_\211K<J\255\225\274\331oO=s\227\204\274\352L\370;;\346\312<\376u\035=\231\033\367<\t\004.=\333\003\376<4.\360<\243%D<B\317\225\273/\357\366<R%O<\367Z\242<\361\0300\275\232\227\020=\302j\335\274\217\205\371\273\276\317\000<L\334V\275\201i\377\274\010\017R\275\233\321\001;\254\234:<\0166R=\000\224E=q\271\031=\366E\"=\317\205)=1\227d;\304\0233\275\367(H=|\017^=C\317L\275q\361\003\275e\311\347\274\0346:=\221\253\032\2758\034X=^\">=\320v4\275T\007\222\274\374P\247\274\316ga9\221\333N\274\006dP\275\255K\027\274\030\027\231\2741?\031\274\004\276O\275\356\322\000\275\250L\310<\256]\246<\177\214\206\274-\375\354\274\351@I=z\334]\275\252F@=.\223\345\271\264\313\024\274G\020\n=\223M\377\274>\2266\275?\2303=/0\027\274\212#\031\275!\243\213\274/aD\275\350:\313<?7\333\274\001=\265;92\320\274\001\230V=\3635T\275\336\032\033<\232\r\322\274\322S\013\275\327\254/\275\345\306I\275Id\232\274\237\262D\275\333\247\214\273\202\226\273\274\233\223\312<\311M\r\275O\322\274\273\0166T\275\251S.=\345\006\337<\222\376\351\27407\004<\347\000|\274$\204\227\274\355\222\346<^M\252<_\245\345\272\2415\324<\372\245\214\274\373\260\211\273\004\253\263<\034F\367\274\013\200[\275\0259D\275\254 \214<\321\274;=T<\216\274\001\372\\=\003\353@=\003\240Q=5\201\326<\217\031\027=\271#z:f\035D=\276j\252\272~\361N=$\222\225\274\270`S<[\244\027=bZg\273/\230I\273\371\000\020=\366\025\321\274\320\300\032;\264!\034=\225F1\274\024\244P=\205\372U\275\302\316u;\005\354N=\317\362M;\225O\273<\270\331\234\270\000u\256;\304^[=\201%<=\334P\031=\007(\202<\260H\264\274\016X\2269\350\002^=\245n]\274\352a3\275m\217]=\260\214\314<\251:\034=\220_S=\214\245\"=\212!]\275\207\317.;\300\343#=\271\304\210<\372\301\333<\035\342<\2744*n<\322\272\000=he\317\274\320]\360<(G\271;\263\264\324<G\3300\2741ty\274\335)\037=\353\346\032\275s\303\256\274\2164Z\275]\203S<\3342 \275x#C\273\243\267\026\275\314\0171\275\224\245\030\275\266s\256\274\002!;\275\035\252\016=\365\331&\275\243W\031\275\360\350O=\317.\250<\036\033\036\274Z\3303=\206\340\344<\020\014\357;\037\306\315\274\270r\247<\253B\302\273\235i\275;\035r\201<\241B\321\273\203\376\221<\350\200\036\2754\312\037=>\263\243\274\317\356\204<3`\330\274\230\233\201<p^\r<\t\263K=PQ\002\274\373\000\213<\021\365\231\273\330\347%<\200=\004\275f\004F<\241|\267<$\366O=\214V\017\275\232K\032<\233:T\275U\357B\275\036Y\024=\314\273\003=\334D\030\275\033\215*\274tJ0\275\371\235s;\275\021\207<\330\002\310\272\262\336\031\273\321\242\354\274\316\235\031\275kV4\275!\364/=!q\016\2757\234\305\274\225g\351<\312\322\322\273`\025K\275\022g\221\274h\2410=j\216\303;+\303\021=\032\0023\275\354\374\027;5\005\r=y\236\263<\230Hd\274\250\363X\275h\270*\274\020\344#=cu\024\275\232\312\032=\347\322p<\245\324\275\273\3005\244\274\212\313\256\274\242\\\367\274[K\223;\261\356\364<\232k\346</\030B\275<\373M\275\351\326\375\274\365\211\222\273\326\n\027=\257\235\n\274\266\337\246\274|\245\250\274>^\236\274i\365%\275\247{Q\275u5\n=\200\307+<j\304;\275\246`V\275ow+=\272T%=2X\312\2742y\022=k\365W=}\326\275<\324\347\"\274\\9I=\353\205\255<\000\311\235\274Z\204+=\2433\342\274\242J\000=\216B\333;\252f\363<e\3232=\214\310\033\2755\322\340<s*\027\275q\347\255;\205M\320\274LH\265\274J\022T=\323\2615=\t*]\275j\321\252<;5G\274CNT=\327`i<\013\210\017\275\003\371)\275\271\033\234\274c\244*=\367W\026=J\302\267<z\376\205\274\352\013\370:\304\254\302\274\373\022T=\356\006[=\233\3079=\342\333@\275[96\275m1?\273\211P\002\275\311,\335\2742\211\027=\343&$\274\346;\031\274\347T\036<\rLI\275\270\221X\275\301=J=\236.\210<\022&Z\275\325R\232\274\257xb<\326\351g<\275\227I=\377\372\370\273\2620A\275\207\027<\275\306\336\365:\377\302\320<]O\006\275\344\254:\274Bp@=\371\300\322<\357&\335\274\235\r2\275?\"^\275W\356I=\351 \021=w+\366\274+\000\022=\276\343@;\013\331\312\274\323\3519\275\204\261;:\251\342S=\233\242\035=\314\007\246\274\027\250\224<\230\177%\273O\025\362<\361\033J\275\2002\267<\223`[<\374nY\2750GZ;\372\017\332<\036\357B=7\233\316<w\250*=U\377\002\273\332\361m\274q@F\275%\352\000\275\206\323.\275tr\372<sf]=A\030\350<\274\370\033=\026o\017\275H\317r;\201\307\002=g\373\035=\317`5=\343\240\256<-?\036\275\017\313I=\347}\305<\306\027\031=\001\177;=\366\237l<\216\344%\275R\312\025=\027]\226\273B`\236\273\201^8\274)0E<h\304\353<\372\2341=4\333\335\274_\305\276<\263 \310;Z\332 =\010\272\274<\330\036\020\275v^r\273\217\250\r\272\315\367?=\034\266\n<\312R\305;\361\025\000\275\'\016\031\275:\321\\=\030\2429\275@6\000\275\301\216\302\274ujC;\301\346\232<\314\253A=_\3658=B(4=\267\356\221<\260\276\005;\252\210\000\274?\350A\275]\'\211<6\236V=\024\354\343<\246J\026=i\254\036\274fo+\275z\232\261\274\241\345\261\274\032\204Z\275a\331\262\274\\\221N=)\004\014=-L\352;\024\226\372<\315/P\273\205\2465\275r\\\240<\nf\007<\330];=\347~\231<\277j\017;\225\263\004=\243\276R\273_\207W\273lZ3\275\010\215\314\2732\027\241\274\035|I=\034\207\r\273<+A\275\325R\002=\"uR\275\345m\313<rD\t\274\345-<=\354\027\246\274v/\244;;h\323<\334iN\275\005%\016=\265\367\305\273\215\3305=\261R\177\274\344[)=\275\3620=\2704,\275\325r\036\275\ri\275\274\205w\217\274\207\355\036\275\253\033O\274\273\\<=\202\321H\274\213H\372<\243\'\373;q\233E=f+\020\2751\327y<_\2377\275\302\006$=;h\213<lr3\274@pV\275\317+S\275\0011\026=<\264l<\023\007\023\274\250?I\273=U\037\275\177\256S=1\002\000=x\225\031=G[0\274?\247\373\273y\034/=\312C\340\274\014\262!\275-\250.\274\360\031\364<\241c\353\272\275\245\210\274\\\331M=}\')=\330\304\004=\367\r<\2755[=\275\021\366\212\272\216\016\031=\274\360A\275\025\024~\274\2409\010=|\200\307<\257\014\355\274\013\013\357;\260\253\333<\253\300\221<\323r\203:\303\335\004\274\364:L\275\205x\372\272\224\007\242\273\253\222M\275LtS\275<\230\"=m? =HjJ<\205p\004\271W\244\213</J\000\274K\031=<2\t\212;\374\214!\274Ol\035=(\2166\275\206\177\005\275\247\231\036\275\300\367L=T(\245<2\224\320<@\022\350\274\326\005,=\371\373\202\273\263%(<NZ!\274_\"\t=\373\254f\274\323\211E=\014\305\273\274\211M,=G\327\305<\017w\023\275\274X0\275\302E5=AoI=x]\222<)\0015=\013\"\254\274\257\022P\275\354rd<\3022\345\274^\227\264<K/\006<\331\340X\275L\351!<\021\321I\275\004\320Z\275M\322N=u\225Y=\230\021\3448k\322\333<\315u\246\274\304\2066\274\203Vu\2745O\326<\344\336\230\274g\336\264;\017\346\034<?\247\032\275\247\303\036\275U\021\354<x\375\223\272\315\340<\275\003bR=\205sI\274\212\3102\274X\361D\275e\255U=>v\023\273w\r\265<qh?\275\026[F<?X\334\272f\035U\275\232\340\t\275\334\252Y=\246\303l;\354KK;\023i\365\274\303\275\034\275\265\300\370;\371\220U=\335\356\025\275\317\317\324\272@\360\n=\325\234\014=\t\332;\274@J#=\177*\314\274\256}\372<\004A==\314\232#\275\2660\362\274d\006\021=\237\226\031<\277U\235\2742\377U=\220t)=\005Z\312;$1\310\274\372\2740\275O\366=\275\036D7\275X\213[=\371\276\271<\356%2<\214[U\275k\344\237\273\262\242J=\374\273\016<k\274L<j\006>\275\313\256H<}\265G\274\345\006\262<\323~K=&\034\346\274o\270\t\274\240\253,=\221 \014<=Q<\275\322\251\352\273\303\227 :\235\207E\2757\365\325\274\260G\232:\3054\332\274\353\341-\275~\323\037=\265~\342\274\203x\003\275\242\035\341\274 h\201\273\313*\357<dQ\220\274\277\2425\275F@\003=*\230*\274\375;\025=#+E\273\357\025\016\274\006\330&=\305iW\275\036(\345\274\343\3064\275P\3636\274\241[\000\275\2374W:\0341\355<\311\025/\274\nN\001;\027\252K\275B\\(\275\324\230\350\274\224\331\335\274\267C\376:\033\375\270\273<\344\252<\006\347\252\274\025\201\377<\001\242\275;\230\322\257\272C}J=V\352\317;\207r.=\215\350,=\373}\304\274\221\017%\275\326^G\275\0103\022\274 \241!\275G%\310\273<\335\245:fg1\275\255\201 \275\301s\241<2\016>=\306y\257;Lz,<\327#S=\335\005M\275\265\027f<\000\217\216<@\377O\275\223\367\303\274>\000\340\274\37693\275\315\3509;d\216T<~\245\007=\230]Z=\202LM=L\000\277\274P\214\'\273\345\177\203<u\305C\275\347o\261<(\203\222<\342\312\025\274gt\t=o\207\001=\331\375e;\241_\362\273\271y\215<\342\340%<\034bK<\206\010\316\273\210\230\231\267\312\354\345<\360\007\024=m\276\231\274\376!\000\275]3\231\274\242q\354<\004\317]\275\227\273\362<xn\027=\370\357\025\274\333\262M\273\031MK\273\254-\344\274\0208\034=6^o<@\377\021\275\335\232\215<\273\224$=;\242\313\274\260\356)=1\223\007\275\342\233\234<\263\254$=6\361\265\274:\210\201\274\323rB\274w\373\337\274\213\363q\274\353\007\260\274\327\037\201<\302\325W<\376\030\245<\316D\004=\230\350)\275[\354F:\034/\211<\326C\255<\312\337\246\274\366\273&\274i\240\000\275\221\204S;\253\344X=\345kS:\221n\252<\312;\305;O\034\252\274n\214\231;\316;G=\346JM=\021\267%\273m\357(\275(\212\037\274\204\177\246\274\267r\364<K\314W=\210\\\032\275Q<\016\275\321  =\2332\375;\342\364\025\275\003\216\024=\240y\226\274 \3232=\016\220\000=\252\356s\273\273FS\275\342\355\313<^\032\271<\330~\372\274|\013!\275c\221B\275|m\"\275e\363\365<\236\254\207<-`^\275n\3533<s\357\234<H\333+\275\036W\344\274\2047M=\203\021\243\274\027k\t\2751\366\013\275\267\275]\2750\316\270\274A\013\n\275sb\345;\264#\2339k\2678=AQG\275X\316\341\272\230B\275\273\372C\335;\002\366\305<\356\026\272<\356\254\372\274aY=\275\311\'5=\260f\361\274-O0\275\037\361\031\275Pu\316\274M\014\031<\013\310*=\211[\300<\274e\004\275\r\316O=*N\220<\341\274\215<\321\340\025:\205}9<4\"\215\274\254-G=\024\207\273\274\213\330\033<\017\253.\274\213\"S\274\237\207\253\272\245\233\366;s\210%=+\325C\275F\271i\274\352\205\032\275\265\2312=\300\007\303\274\237nY=\024\233\024=\344W\267;\\\347\235<\312\355E=\313\213.\275\177\031j;BV1\275FM\331\274]rQ=\"6\023\275!\374\223<\023z\366<\347\200e<\271t\n\274|?\244<.7,\275<\254\363\274\233\240\357<s\033\355<\334\253y\274\265\332\014\275\235\360R=\276\314\311\274\rn];\233\266\002=e$\267\274\276\235\344\274B\020\023=>]\323;m\331\014<\326\256\032;\213\231,\275uS(\275k\235\245\273\"\377\204<o\240\213\274\001.@=\312|\203<\373SH<\257\2071=$\022\252\273\005,\001\275m6\002=\300^\315<n\301\340\274\372\003\327\2732\032B\274C(\027\275\'\223F\275d\263Z\275\200\335I;\274I4<\311\362\267:\272\235\022=\336\247K\275\231uL=m\006\037\274<\026\024\274aoQ=\210\234`<97B=\001\302\021;\2222I=\332\374G=\347s-\274^\352\343\274p\032\007=\301\250\013=\213\266\365\274\205\310W=T\231\307<\007\006?\2758;I\274\226S#=\215\264\336<\377Y\255\273\2417\214:d\\\370<\254\202\026=%m\327\274\025\236 \275|\236X=/+\264\272*\375G;\363(!\275\300\023)=1\205\265:bz\305</\225\247\273\234F8=\346\357;\275\351jU\274|\341\376\274\253\200\353<\325\005 \275\3040!\275\013a\363\274\346@W\274 \236T<\322\333\257\274R x\274\304\0065;\314\273\344\274\"{\221\274\221\021(\275(3\\\274s\0034;>\267\260\274p\343\177\274\357 _\272S\247J=\315\354\211\2745\001\364\274jQ\225<\241}#<\304\344D\274@\201\300\274\003\241\223\274\261\227;\274\363}(<\365\242\234<\023\304\334\2749 B<\2247,\2751|\272<A \026\275\204#7=\344\324\004=,8\311\273\257\214\223\274\243\3071\275\r$\026=\342\320Z=\320\277Q<\023\'L=\030<5\275\374\327\275;H\2142\275\017)7=\305,H\274\224=y\274\266\'S=\016\032\237<Y\212#<\355i7=\352\373\261<\206\227G\275Z\007$\274*\334\274\274\363\010\\=\244\353R=q\322Y\275\376\264\\=!\004)\274\246\266\313\274B\3574\275\320f\020\275\222\350\265<\273\333I=\273\342\263\274\007\021\302\274\313\335\361<\376\217\302\274c\006\\<\210\031\013\275\213LR7[\021\250\271\252\242E=\306\342]<8\334\266\273\367\'X=\032\362\032\273\314\351\327;\024#8\275\313nJ\274\216FV;\363\014j\274V\025\341\274\206\264@\274\027\374\365\274\321\2102=\357\365/\274\330\367$=\320=O\273\216\217\2379/Z\035=\017S\030=\353\234\013=\227\032\376\274\200 \264<\342\274a\274\375\255\204\273\021VV\275\347M!\275]\333)\275\331\021\335<E\036\331\274\251]\'<\226\315&=T\357\037\275\354\262\225<\304\223\325;8\347\351;$\005\225<+9\373<\'3\303\274\224\375\215<\300\202-=)\366\022=6!?\275\264\302(=\025\207\364<\2551>=~Y\233\274\365\224-=&j\364;f\243T<\236\325\244<\010\273\367\274=\">=\005\377\375;\314\000\2308\220\336\315\274_\027\354\274\010\241G\275m\316H\275d\247\020\274\321-\261<}\216\273\274\245\037\265<\024\226O\275\355\005#=\270#)\275\t\r\265;\306\241\370\274\253z1=\313\227`;\354>\030\274\274% <\347@H\274b)\277\274\244\362X\275-\324\332\274\235\005#<\214p\025=b\206\302;OH*=\316+\3649\246\307\006\274\0078\354;\336\3637\275[}\250<TX$\275\375\225H<\337r\'=MxP\275w\242\202\273\017\223\t\274\002u#=\032\272\035\273baR\275!\355\221<\234\245\037\275\016\324&\274\336\327\"\274\313\206\246\274+{\010\275vPj\274`\\\'=%\346\265\273\314\235\032=1a)\275|b<\275]\312s;\350P\"\274\316\344Z\275=g\005\275MU\237\273\275h\364<\245\300:\275\305\351\277\274\013\366I\275\213t4\275\320E\255\274y.\022=JU\030\274v,Y;<\3073\275\007\327E\275\\\n\231;\370{\350\274b\371?=:o]=\243/\347\274\344J\301\274\311H\373\274=S\212<\313\036\034=\365\2478=>\200S\272\327\\]=\034\256R=\212\314\346<,cY=\372\202\025\275\267@\340<\260\307I=\001\260\033=k\215\027\274\374\005\r<i\301j<5\376\303\274\n9T\275B\270_\2730\351!=D\323\356\274D(K\275\261\340*\275\327\017\010\274/\3435\274\236\n\210;\222P5\2758\023\374<\351\251*=4\022A<7\254\020=YI+\274~\3254=P\330G\275\303\301\353<\022\255\267\271\0320\201\273\213\222\371\271\031/W=\221V\357<[\016Z\274\271\333\207\273\252t\223;\217\275\006<\325<\230;\340#|</_3\275\271\317\253<\334O\236<JG\364\274_\324\024\275\2642%<\2038\001\275\210\2701\273\026\n\212<\222,\271<Q\231\030=\3224\323<\374iZ\275\320a\366\274\216\324\312\274\204\262=\275\327-R=\360\355\312\274M\332<=9\206!\275\302\206\030\275[D\023=#x\331\274\263\005\314\274\257\034\315<(\262\006\275\334\027H\275\250L\371<\367n\213\273\342\345\021=T\177#=\003\352F\273\322r)\275@Z\373<\233\236V\275\2051=\275\331>>=\265\241\340\273%\212\013\274\2724\204\274\014\262\345<\253a\366<[\237\301<\005\331\023=\376\373Y9=\2129=|:\277\273b\336\223<\260s&\273\347\354\177\274\034j\307\274\030\335\310<h?\213\273\030`\033=g(\027=@1\237;\3142\360\274\nV\221\274:\340\003\275y\300\n=\202\354N\275\202\307\374<I\303\301\274\341a\210<\2338\016=\355\177$=\006L>\275\215\236\n\275u\324O=\317Q7<\331\275\035=\200\322\021\273p\354\256;\321>Z<\205\342[\273\275=\345\274WBQ=m\223\001\274\266\0058\275\016\025U=\\\250\337:\366\220O=\304\177\021<|\026\221<\225\005\273<v\234M\275jk\342<\223m\247;ZM\361\274\215l(=\347\004B=*\034\005=\252\365\215\273\307\240\026\275g\246\342\274?\275\333\274q\'\200\274\333H\312<\317b\007\273\242@\005\271\332\204I=\2413\356\2741\3617\274\276;\021\275\tC^\275\320qN\275\261u\242\274\3531\037\275\372gW\275\206m?\275D\242\352<s\014d\274\t\240\022\275\311\345I=U\264\003\274W\317Q\275\252\2239\275E\010M\274\201\\n<\240\207?=\361\334,<\235\362\242\274\006\222+=\007l\000=\013\270\202;q_\236\2734nE=\270\227%<Q\310\347\273s\265\177\274\236|\263<\"\315\202<\021\037-\274\237\010\376\2741\3644\275\034{\352\274\\%\314<6\336\232<\327u\326\274sY2:\2707\202< \033+<\332\263\333<\037\362\203\273\376\217p\272\331\316\211:i\361\'\275y]\023\275%\344\360\274\010NY=?\204c<]\0076\275\224N\371:b|\265\274\\\\\215<\310\360\034\275&\354\007;\3320\303<*\341#\274@\257e<,\201@=\017c$\275\246\n\003=\312m|\273\335\016.\274?\357V\275\0275t\274O\3013=U\246\265<\246\221\001=\231K\372;l\240P\275\230\037P<\2077\000=\315\250\002\273\267((=O\"H<\345_D=\355\2221\274[\035\215\274H\026\372\274\216\330\034\275;\215\200\274\331\005o<\302\326\366\274\203(\216<\330j\340<\3742\312\274xS\266;_T]\275\362\360\202<-\003\365<\2417%\274\230\256:\274j\213\026=z\022\004\274d\242\014=\022\357X=\016\227\365;\253\273\264\273\267\030\304\2745\014/\275L_\004\274\226\345\212\273[I\036\275\221N7\2756(\013\275J\007==\037/5<\322P\267\274k\225:\275\335\221\204<\251V]=-\205\325<\221\021L\273J\021)<\3712\000\274\350\375\321\274\305l-=E\004\000=\026\342\006\275\014pB\275\220\251+\2750\365\344<,\214\022=\376Z\333;\257\272\004;;l-\2758\3268\275;\336\261\274\250\205\030\275iL\002=\210\202/=1\214\031\275\347\005C=_f\360\274\324\230;=\033U\006=K\342\267\274\240\320\342;\303BZ\275 /;\273\220\303\227\273:\315\035<\023xW<}W\006\275(\005%\275\370\262\003<d\3351=\021\\\303;\027\243\020\273\321\240\000<\372\330Q\274~\356F=t\324\377<\226\n\266\274\212\354\335\2747\252\220<\347jF\275u\037\272\274\347v\024\275FT\366\274\220(\277<\247{\231<,\t\270\274v\3046= \246x<\322i\n\275<\2419\275\235\220T=Ti1=\013\356\230;\365\316]=\351\246\223<\301@_\2746l\n=\347\341\336<d\026\r<q\016M\274%\206-\274\2405.=\233\225?=;\326L\274\277v\000=&\211\204\274\007F\243<\371\237Q\275\224\312#=x\014^\274\227\335\254<od4<\320\311\320\274q\207A=dr\027=\003\232\035<\225\017F<\200\333\034\275\023\017\361\274\363y\t\274\245\223\332\273s\214\216<\223\275X\273\321NC;\214\0210=\'/\313<\311C\014\275\026\t\007\274\345\203\245<\016~t\272\350Y:\275dj==\341\323M\275\014\271O=\025\nZ\275\214\207\200\274`y\214\2747\274\331\274\310\275&;\244#\364<;\031\316<$p\014\275;\217\300<\027a%\275 f6\274n\353.=\246m\003\275\223g\370<hn\301\274\335HZ<\337XG\275u\023\014=\265\351\002\273l\016|<\221\231\000=\335\255\363\273Jg\360\273Yo\204;e\207\024=%y\243<k\272\323\273jS\267\274e)\231<\352f\266<\314\320\030\2745\307\302<\212\343\220\273\344P\017\275O\367\371\273y\2705=\313L\362<\0216@=D?\376\2733\023\263\274\3619\367<\r\350 \274\010\023\267\274\346\346\312\274i\263\031\274f\352\210;\226{\235\274\251\353\377\274+6\r<\\\355<\275>\344\020=G\227\376<DR\\\274\207>]\274\277\351\257:\000\212\231\272\301\204\344<\205dG=1\323#\275\271\231P\275#i\'=ps9\274\307\211\335\274\250\302\361\274\3139|\270]\304K\275\244\014\260\274\026\375!\270D\007\333;\035\366\017=\277&+\274\212\353D\275\005\026\325<\007x%\274y\202\036\2758\333\032=\354\264[=\306a\353\273.\360S<\354\304\020\275\252R\\<\314\253\036\275@\260B\274\010\031\211<\200M\331<S\2028\274\225\264\350\274\302\2139\274\020\010\250\274\213Y\254\274\003\177\234\273i\327\274<\260\360\341\274\260\272T\275\264$\023\275\n}\213<c/#\2757\261\227<qT7\275\342w0<\nt\342<\273\376\235\274\241\217a\273\242A\377\274\343kh\274\027>\264\274\311 [=\004\002\025\2756\365]\275\241\255\252<\300d+\275\271\004\017\274\026\263\352\274*0\036=Soa;\231\325G\275\341a\365\274#I\"=\031\317a<%>-<\250\357\334;T\201/<\307\r\261\274\342k\236\272r\227\223;\001\251#\275%F\034=Sn>=\370\323\'=\376\275\304<\212\311^\273\323\035\177;\303\277\026\274d!\'=\366<\032\275\'\241\254;\311\020\324\274\240\357\003=\202>Y=\025\351W=\376RR=T\0201\275\210\313\260;\241|?=H\t\025\275\307[\021=~\2174=S[A=\306X\332;\001\352\347\274\341\225\t\275F\2132\275!&M<_\035 =\341\262F<F7*=\315\371\307\274\0072\371\273\312\023\352<K\226J\275\005d\214<\322\254*<}\207\'=Hj)=\241=\212;?][=\267\275\017\275P\242\245<c\021A:\241\273\022\275\240\274\277<]\332\236\274\211\303\345<\266\177\025\275er6=\345T\200\274\277\367 \274\334\014\240<\301\255\264<HQ\031\274\253\306/\275\370n\312\272\351\316\271\274\212\232B\275\337\037y\274\304\232\'=\304\266?=\211>4\275\003u\027\275\213\033\026\275\256\223\211<\203\257I\275\r\254\272\273\034\206\276;\335\332\236\273\221\342\321\274\026\345E\275g\237R\275\330Jz;U&B\275~\355\314<\037?\334<~\336R\275M\300\325\274o\237\256\2746\370=<\235R0\275\243\002\354\274r\026F\275\177\325[=p\356\277\274M\"\233\274\256_\231<Y\276\247\272\202\340<=\214\363\222<}v4\274\302fX\274\346\034b\274\210v\370<\031\316B=o\036\321<\036\034\315\274\303$\250\274n\036b\274\210\247,\275^\254\320<\371N\033=_\026?=\317\005\034\275@\230\210\274Z12\273\310\330\340<X\243\240\274\251\t\t=\377>\227\274\360\260\311;\247\203\240\274\350\252S\273m\234\262\274%r\005\2751R3=\010-%\273\371\226\014\275u\2715\275fY\375\272\241\374#<\247\007\032\275\352\201\026<C`Y=,o?\275\017\325\250;#\232\320;Y\332+\275\221\002-=\022\033J=\364\360\364;\343\367\227\272uCq<\035@\322<,Y\213\274\374j\336\274\245\316\357:\276d\250<\271\034\t=\305.l\274I\227\341<&\340T\275=\341X\275\370\243\222;\357 \"=\245$\"\273\215h =\t-\331\273|\037\365<z\361$\275q\202\354<\243s\335<\314\217\235;\312\211\213;\257&\334<O\224\375\274\277\271\324\273\331)9\275W\347\215<\333\020\367\274\362\202\n\273\237\241\001=\364a@\275Y\200\267<\202?W=\311\375)=:\036\365<\213\021\220<c\266\023=\226\312\301\274(=.=\204|Z\275\236\234\365<L\034X=\205\362-\275G#9=\177\265\264\272\330G\320<\226_A\275Rh\261\272\233\330\034<\356O\020=]2\367\274&\327\224<\375=\233<=\030\222:\2539\006\275a\207\275\274\360R\372<\331v!\2758\265#\275\324{7=cN\031\275\013\232\033\274\256\345\372<+\362\304<%\354\377\274t\267<\275\271\372I=;\036\035;\362h\2138*\310\245<\275l\375\274\nJ\320<\014~.=b\367\233<\004)\255<3?\331<\353R\222<l\361\365\273\326K$\275\205\305\311<\227\004\247<\256\374\310\274[O\342\2742\206F=3f,;\356%N=\325d8\275\337w\341;\363\027v<\021\256\223<\233-\027=\207\177\350<}\333<\275\372E\320;\201\276\207\274\257\324\232<\314\246\325<\333\367\317\273\307L\003=\007\321-\275!\343\373<k\2703\275V&\370<C\362T\275X\231Y\275\210\203)<W\272/\275\254\270\n=\250\\\207<).\336<{\340[<\\;\022\275\013x\324;oK\217<\025-\241\273\032\312/<\263u\222<u\0079\275\214\315\022=o\241.\274\2453\235<\257\263\354\274T+\333< \353S=\016\3415<T\300*\274Q\215K=\245\250\212<g\202\010<\265\363B\275mce<!OP\275<\361:\275\244+%=\025<\364\274T$w\274O\000\267<`,G=h0\214\274XU*\272\327\235L\275\035\n\017=KB1;\370-Q\275c\236\344\272V\324\025=\217\244$\275B\323\035\274\032\311&=\233*\036=6\210Q\275\262\362\036\275\265\232\027\275~0\266:dh\262<\004S\'\275\177\343\030=i\275\364\274\265\365\237<\036\217\251;\243\347\314<\213\337\214\274\321JO=\276{Y<\324\365a<\260S:\275\344\332\203<2\017\207<\276\232\021\275-\274\323<\024\234\324\274\201\326\030=H\255[\274_\257\036;A\017\003=\340\346%\274\371\032\033=\021\035\306\273m\225D=\365\224\004=\205\212\003\274;2Y\273\006\301\372\274\211 \375\274J\024\334\273\306O\323<\250<y\274ha\007<\235\307C\275\303\262q<\267\250\027<\010\273\037<\260\200\230<\364\007\035\275\237\022Y;\022B\336;\253\244V\275\300\303\265<\326\2026\275*\334\'\275o\212v<\345\245\260\274DA\311<=\017\007\2743\2327\275\034\030\265<\031\327D=\362L\261\274F\223F\275.\355\211<\246H!\275\227G\321\274\376\233*<\201b(\275\246\0052;<\210\362<\017\262\317\274^w\363\2742\004\007<\001e[;\n\271\223\273<0\234\274\304\207.<\304\205\017<\\\370\351\274&\370\234\274Q\010G\275.@\257<V\301\025\275\t^\027\275\342\354H\274\224A\006\275O\224]=<\213\023\275E=\016\275MlG=\317\341\007=\206#\374;\344/\256;\313\316\376\274\205\367\006=\351\224w\274\004\307\003\274\020!4=1\330\343\274\200\000[=8\313\203\274\001F\244<b\220)\2756\336Q\275\255bT\275\223\376\031=\310\367\344\273\366\274J=\013\330\267;b\330T<9\220\233\274\217L\211;\006{\005=FH9\274\303\020\311<w\223\334<\347\237\310<\250\224\266<S\206R=4\377\222\274y\254S=\235\350\337\274s\2545=)\203\252:\021\024L\275u\2323=lF\274\272\227\030\021<\226\324\214;BdF\275W\021\365\273\004\252P<\004\216)=^)4\274\026\322F=c\374H\275\372U\311<8xX\275\310\367\255\274\353W\001=\177Z\032\275\232h\304;\377\214\240;\257\336G\275%\014\266\274\023\250\n\274o\230\262\274\361\272\n\275\n\353M\275bKR=8\225\034\275\017\232\037=\200?\367<@mK=\032_0\275,\266!\275\213\333\344<Y\215)\275%\n\027;[\223\362<\250aX=\257\233\350\274[\271B\275\177\321\245\274\200\325\231\271d!\332<\263y@=\306m\014<\333\350;\275\315\301\220\2741\226\023=\321\3755=\340W\001\275\036\335\253\271x\213\300<\234\272\032=\314q;\275\272\253\240\274h\247\350\273\000\035\224\274\305?n\274\306\316V\275\212\203 =?\332\354<\207%\031\275/\317\036\274]Y\360<-\3312\275Z\\\256;\355\343\013<\026MN=V\nG=F\310Q=p2%\275\000\267\032\275\363\3174=\341M\001\274$0\246<!\357K\275/\204B=\036fN<H\224\300\274\010\362Z<\313*\347;\024q;=Cd\225\273\n\200)\275\005\2027\275\226\366\251;N\013F=o\365Y\275\333\253D\275\376_]=\263/\003=_9Y\275\223=\340<\346\\#<\255R\203;\374\t\373<\205*\275<\364|\257\272\346\271\n;n\231Q=^\226\032\274\360\246\240\274\375K\r=cDA\275O\214\014=\246\272\325<\263\000\374;)\335\025<\214\005\303<\344\031X\275V\005\235\274k\002\027\275$\315\241\274\347\007\\\275\200\223&=S\027\003=\312}\253\274\223\"\337\274oe\315:\001M6=\345\273\207<\254c\316\273\003\246%<\243\274S=\334\010*\275~B(=tY\r\273\347K\310\274h;\305<%\362\037<\344\217\246:\344t\035=Xq.\275s\235\260\274q\033\001=\225b\'=\321G6=j/\344<\021^\250\274\3636\273\273\200\0341\274\305\331\035=2\235V\275o\364\224<\223\372\226<\245B\242<-c\315<+\350@\274[a\265<\333\3468\274\275\332\270\274\210\rA<\304\347A\275\022\250L\273tx\264<\246\210\232\274G\3111=\247$S=J\016\005=\257\361)\274E\216\017\2747\313\307\274\347\355\023\275(\3027\275\242A\302\274P\334\003=8x\257\274\275\261\266<\022h\034:\025\347C\275n\245\"\275\243\263k<\212R\025<7u\374</>A\275\334\215\r=\2548\334\274\243\030\240<\241\325U\275\033\023\'\275\324\373\333\272\002\325\037;\r\356\243<g]\306<;t\017=!{G\275\314\341\316<D\000\367\274\023M9=$\362X=h\215%=\352i\010\274\335\376\213\273\237c$\275\2104A\2753\372 \275d\256\244\274%@M=T\300\214<\t6/=\334)O\275\353\365\241\274\361\242A;\343(\336;\325\216\010\275&\"[\275Ot\234<\216\3008<^\303\201<\247Z6\274(\356(=\336\355o\274*\352Y\275\372\025\013=\036\223V\275\327\351\007=\204\354\207<\323\353V<\231\244\314\274\271f3=ia\276\273\366%\347<\021\210\375\273\021\332i\274\3537>=\344+1;\246c\202<\021b\031=\350=\255\274N\263R\275a]U=\371]\025\275J\317\\=\262\2151=!\r\025\274\3546\014\275K\366\313<\t/\206\273\036pP\275^\016\240\274BGg<\215\300)<\211\370(=\256j\373<\027a\370\274:\356\004=\033F&\274\035\317L\275V\317\341\274\201K\334\274\311\367\220<\2328\360<t\342\307\274k\317l<aQC=][\031=\370\026-\275\355\344\276\274\215-\361<|\323\340\273\210\315\230:G\365(=\004{\330\274<4 \275\234\242A\275$\373\035\275 v\331\274\013{\332\274%\241\255\274:\362\302<N\237\033=3\362\030\275\254n\331< \303\221\273\336\374\037=\360\241M\275,\234#\275\236\327J=L\3334;\020pS=\224\033\366\274x\254H=\242G.\275\3445\320;\245\3243;\316\242]\275w\377z\274Ea&\275m\247\270\273k\"\230\274\266\253\306<\361\251\033\275U\231\355\274\271\313A=\367\231\337\274R \020=\325!W=4\237\032\275BI\024=ikM=\321U\376<\313\0206=\240<\233\274\276\305\010=\032\334\371<;\265S\275\264q\314<\310\365\372\271\376\232\321<\3074\346<\233\316\302\274{\226\364\274pXF\275\314\202,=\243\231\004=\373\355\202\274\3314\346\274\023\267=\275;\013\304:\254\263\235<v\275\366\273\353\215\007\275\301v,=\214\261+\275t\251\255<_\2535\273\326\334\235\273LN>\275\275}\3759\203\202\023;\030h\004<-RF=v\212\232\274c\351\312<\236\002\215\273\030\365\366\274\246\365\030\275\037\322\323\274\005P@=y>\313\274\201\212\300\274\341\314\236<\032\277-=\265\321\234<*\335\031=\n\373\033=\202OU\274\224\370#\275`^#=\247MN\274\267L\362<\204\236\344\274-\304?=\365\313\036\275\272\214\302<W\240\225\274\010\t\260\274\024\033\035=W\200\373<\203\272\340\274U\261G\275q\226\303<\277\303\265\274R\034\231<SE%=\230\2538:\n\370\335<\224\312\266<\017\267\033=Z\030\001=\247\361\005=(\335\t\27594m\274#<\010\275\256\314\377<\024;\305\272n\351\344;\345\207w\274QB\212<k\032\357\274\250_\221<\2036U=q\021\021\275\177Y*=\322\261 =\350\3321\273/~\316<\274s\226<\346YO\275\357>\212\274\357n\r\275*\212\2318\3555\177\274Y\2257=E>\n\274V\027\277<\033\317V<\2723\271:@!\200\274\002\3735\275\033U\306\2743\025\275\274.\374\243<\364\032\365<\026\237h\2734\343\033=X$\r\275\277\256F=i\336\t=%\302\\=bc\'\275\251a\024\275\2439\034=\300\234$=\352\001\243\274\330M\002\274S\351\327\274\240:\021\275/:I=N\213<=\032\274Y\275\373\216W=W\320\016\275\230\002$\275\320?\250\274T\317\205<b\316\t=\030\343\366<\373y/=Cr>=\227+\000\273\213o&\275\010pH\275\235\315N<\246&N=\343\037\315\273\220J\366\274\007\224B\275\360\335w<\333S\217\274\346t\351<\036r\\=\227\246S\275\316\335\245\274GZ\202;B\357W=\227\225\t\273\334\002\033\275\361.\224<T\1772\273\036P\354\2749\263\034\275c\007\257<k\323\301\274\362\364\343\274\370\277\t;\375_\230<\334\275\233<\275F\326\274\336H!=\374&\004\273\200\274\017=7\021\341<\227\n\007\275\335M\024\274\331\250Z\275\365D\023\275\2607\005\2752\244I\275\242\0001\275P\332\204\274\365\257\272\274\261\234\210\273\266,\200<\237\256 \275/\002P=\335;\265\274\224\352\220\273/rM\275\032\353\241\272JB>=\0140\000<O\021w<\"^\214\274\320\036t;\006\255W=*\033\210<Jb\014\274\353\210\030\275\001\313\205<\247y\t=\375\267\t\274E&\216\274\206\313\237\273p\377\247\273{0R=$\007\001=\177\3250=\003\203\'\275\021\021\372\273\311\252\327<m\275E\275\223\2159\275\372\3616\275\013\212\214<q\354\016\2758\001\323<\001B\002=\345\231\001;\246\270\356<}\3406=\031\313\303<\374\301,\275\275dx<S\023\200\274xf\232<\371\204\n\274\353\362\361\274\250\330\266\271Ar\244\274\334>\370\274\203R4\275F\253\264\274\323:^\275\341\242@\274\355|;=\331\374\224<\206\nM\273\002\220D\273\205\236\024=\016\020\r=\210\215\351:\375\224\356\274\305J$<\221\233\343\274F\301\n\275\343\362R\275h\373!=O\316\037=B\250L=A\036\266\274\360\t\203<2\204\016=\237\216[<\342\347\271\274=\023)\275(\242P<I\316\025\274\330\326\003=\267\306B\275Q\r\306\273\033\t\315<\2576\361\274\023FW\275+\334\322\273\225~l\274\245\246\255\2745\306;=\266\261\335\274+\014\340<\216\277\327<H\317\347\274B\347F<5\232\243<K\370(\275i\220$\275n\213\340;i\331V\275\007R\361\273g\302+\275\316\265G\274\032\273\n\275!\177\\\275\026\243\005\274\334n\362\274\370\221\023=\321\306-=qn?=1\367\303\2745\374<=0\232\232\274\204$Q=\217\371?=\232\3518\275aJD\274<\256\241\274=jM\274\324q]=C\216\025\275\366\257\254;\320\376 =\3367L=\\^/=\355hM\274\276DM\275k\240F\274I\250\303\273\344\005\305\274Z\024\346<\017\234\240<\307$\026\274\3727X\275\272\014\325\273<l?=a4\324\274\024\244\331<v\326\316\274\337\004\364<\tl\033<\014\211\000;\003\202\027\275\021\257\001<G\203\350<\330/\371;\225\370#\275\202\n\243<\233\\\023\274\211\202&\275\264\007;<\301%N=SV\037<5<\311\274\271\2324\274\205\027\212\274\317QY=\220*;=*\310\\\275\032\013T=6\001><B[\202\273\203\343J=\343f\355\274J\277\365<\007\\`\273\2571\031;E\336\001\275\200v\335\274\024\362\022\275,)I\275m4\264\274\2331\252\274\022\263\001\275dK\023\275_\340\024\274]\313}<\236=/\275\226\3005=\236\305\005\275\315\367\004=\303N\300\274\325PP=\216\312\237<\350uK\272=f/\275oen<X\210\371<0r>=\335\177\355\274!\266\335\274\014\236\031\274\2404\303;\260\377\013<Z\244\220\273\210\313\t<$\304G\275\021\307R=\310\'\"<@\372]=\340\t\311\274\273v?\2758\207\354<\362\355\247\2747,\t\275\307G\340\274k\232\323\274\344\223\303\274\t\255\372<\251\200\026=jy\336\274\377\347\013\275\3627\2236\277\201\250\274\020\035\035\275\323\311\013\275\253\364\302<\374\353>=\216\247\364;\356k(=$yK=\373\007\200\274\217\237\354\274/47<\253Y\304\274\366\030]=)VP<\222$)=\r1\311\273\366\277}<R\266\014\275\360,\t=W\357\307<\030\210G\275\374\n\344\273\001(\226\274\021N\224:\345\315\005\275\253\010*\272\323 \300<\315\2628=\257rM<Q\376\364<2\264\351\274\323\2770\275\376\0039=`\010.\274\001\036\244<\231\245\376<_+\034\2750{\020<\315m\217;Pc!\274 \2652\274\205\004\245<G\032\307<\005\3719\273\242B\\\275/\262:\275\036\002O\275\326PB=\336\305\366<13\025<\314\300R<nG\320\274\035\261\237\273\'\272\031\274T\027\260<Ke\202\274\323\223\313\274\302\277#=\206%\270;\263%F\275B\007u:\236\177\377;9>\021\275\321\0137=\230P}\274\261\025\230;\345LL=\355\205;=\365\240\237\273\355\314\255<)%\033=\335\245\273\274N>\313<\357\243\241\274\204tE\275\330\251e<\232\005\\\275q\'T\275_\256R<3\027\371\274\272J\002<\357\230U\275`\323J\275\341\302\030=\024\032U\275\002\\I\275\030\370\\\275\216\021 =nd \275-\024`<q\354q<\301\022\'\274\207\225\267<\373t@=\340ED\275u-\006=\201[\220\274\371\322\023=k\310\354<\233r9\274\367\377\234<\273{\013<~\307\'\275W\336Q=\177\207:\274\231b\333;P\375\032\272\\\0238\275\3358\250\274\326>\016\275\025\264\317< l\353<\360\252W<\010LW\275\357\334\362\274j\254\242\274\334\222Q\273}\221\003=\325\373!\275\317\017\033=\021i\004\275\230\343\246<\214\240\356<.\2561\275#6\262\274|\221\344\273\006\243V=:C\033\275\314\211*=\267K\273\273D\255\025\275\252\225\203;\205\377\221<\"\215U=\224\262\350;\t\273\013\273!\177==1\214\026=\215\315$\275\005\030o\274\003EI=$\250<\275R\2147=\032\344C\275\036\250\345\274K\273y\274\256k#\274\206\353\240\274\004?\005\275q\036\226<\300\325\205\272A7E=0\330/=\013\2226\275\033\374\273\273{-e\274\177\316]\275L/%<m\020U<\341Z\337<N\264N\275\014\025\341\272\317w<\275\230\353\027\274\261(\000=\311q\036\275\300\332\344\273\212\354/\275\316\370\203\274\231\205\273\274\303:\\\274\255y\007=R\216!;\2401B=b\022\340<\352#\305\274B\362\227<\267<\216<cR\241;\362\357R;6\304 \273B\313;\273\003\025\240\274\305w\027=\323\3201=#n\234;u:%=n\200P=4U:\275\336\212\223\273\031\230\352\274fL\331\274\366~\307<\317\010\356:\232c\313\274\271Z,\275\336P\207<V%\022;\222dp<\307\033\366<\226\204\227<\022@1\2756\251I\275g\367\222;\377\344[\275\027%\000\275\'q4=\n\266S\273S=\036\275\\\332G\275<R\233\273X[\021<US+\275\357\303\317\274\243\301)<\220\013J\275\350-C\275\245\312\377\274\212\024 =\276\321 =\177\265;\274\035]\034\275\332\030\303\273\177\301\345\273\3760\250\274\336\025-\275\360\241\353\274y\247\010\275\023\276\213\273\031`p<e\240\005\275\217o\323\274\301\363E=M\3572=\254\nG\275)m\367\274\266W\013\275\335\327==\013JN\275\304\270\024\275\244\323\237\273\353d\010=\227\022\027\275E\377\027=\030\206(=\036\334\n=\310\204>:\354\347\346\274\2254\005=\226\341O\274r\344\020\274X\354\301<\3343\255\273=l\r\275F\036<\274\363\373.\275\337\203W\275\353r\220\274\307\025h<(<\027\275\"cJ\275\303\274\216\273\233\323\246<\016\315\035<[\250\302;\356\351\260<b\007\024\275\366#3\275\341f@<(1\335;\212C\376<M\326\335<\277!;<EXQ\275\206\302N\2758\226\376<\204zA=\036\032+=2\031w<.\016\251\274Q6\350\274\014\000\004\275\263\315\253\274\200\343\336<5\3231\275\377\275V<>oW\2744\240\255<1\nV\275\352M\344<\240\222\371\274_);=\215\305M<\026\001\240\274\r\236\210\274\310_%\275`\2675\275$\224I\275\035\035==\342\303S=\211\254[=\334\262\222\274t16=\203\230\237\274\'\316[\275\321\364\r=\177\333\202<\217\255\245\274\236/@\271\267\'\342\274\377\242F\275\275\333\003=\261\n\034\275\240\366?\275\254t\006=\026\331T\275@\373\001=\017\323S\275\177\032\253<\216\361\037=X\nu\274\315\257\021\275\335GV\2754)\035;\250,\027\274c\347+=\037\331\013<\003\276O=\212\256\026\274\231~&=YA&=\343d^<\367\240Z\274\265\024G\273\353\372\347\274\242>\372\2743\252F;\204\245\274<!3\255<\200C&=\016\320O\275\244\304\241\274\334X\035\275\243\212:=\254\337G<\021\366!\275\221\261\264\274\276\032#;tq\031\275\320\345\200\272\371\005G\274~!\212\274\347@\026=\240M@<_\300\330\273\353I\006\275\360\021)\275\347\346\324<]E\331\272\266\351\022<\355SW=n\334\\=n\335k\274\265\3001\275\324|\300<\3034\222\273\302\264\036\275x\367$=\254wk\274\004\3454\275\3737t<$&X==\004u\273\330\345\010=\032\r\263;\251\245%\275b\322r<\207\300#\2722\021\035\275X\3175\275\315\0010=\274\215N\275\306bE\275>O/\275\331U\343<\212\307\232;\251\345\343\273<@\232\274o(0=43Z=\325G\302\274\'\230\302\274\350c\026<\242h\\<\313\272\262\274\303\365\207\274\371\376+\274\271\276\362<\352\370\352<\263n}\274W\\\222<p~\377\274\2606\332<*\265U\275\003\311\\\273B\006K\275\230\201+=F\372\010;\005\345\352\274\333hK\275\251\310\020\2751\267W=^g1=\262]\273\274#\332*\275?\304 \275\t\2050\275t\357\027=[E\003=\023k\343\274\275iW<\372\314#\274\335\177\331\273\t\"7=\341\025\247;97\203<\323n\342\274v\016\304\274\245\256G\275\013\0278=\030Kk\274\247E\343<P\335\301\273\201Ar;2\030I\275T)V=o\247(=w\366\020=q\001\031\274Sl\004=\262\253\264\274\275\310x<\014\313.\275\230\320\342\274X\001\256<\317\342\302<\005\307#=\023\2359\274\236\364\213<\314\243\245\274\261\001\210\274\2404>=\022\032\215\274;\000<\275U\031I<\246-\030\2742oo\274kH.\275\260 \207<\370s\013\275\"\272\031;\255\022+=\242\326\314\274%!\010=.8\352<-\323\223\273\021\370G\275b\254E=g\341\305\274\317\2230=\2106\333<\242\000!=\235eG=,<\'=\255\374Y\275s\332\023=\023\264L=\237\3013\275(\377\305;\177\3661=\246\'9=\023\376A=;\\X=\222\\\347;\213\321\272<\314s\215\274\t&h\274\324\355\021=f\224<\275\017\276\266\274}E\025\274\tL\201\273q\362K\275_\021\243<\310\232Q=\347X\236\274s=^\275\376C\032<(Y\000\275\265)/<@\204I<i\200K\274\252\021\214\274K\343S=\016\212\211\271d\\D\275\371_-\275TYA\273p\273\332;&\273\t<\235\207\335<j\216\200<\\\330\006=\200\005\244\274A\212\246<T\207n<\366\304D\275i\201J\275q\216K::1\340<\003\224j\274\2471\372<\222A!\274m\363\314:_\375!=Y$Z=\207]\376<X\342\t<G\362\024\275s\236\366<\302\271~\274\024\264I\273\0319+\275\252 \276;\031\212\025\275\355\2341=~?D\275\346\202H=!@\021\275\331\246\221<$\3222\274\270\352\017\274\341\314\210\274\232 0\275\260\375\310\274\371x\n\274e\242!=\337r+=\360*%\275\330s!<*\222\037=\036\360\316\272\365\222 \275\317sS\275q\315q<\320\224\205\273\374\\\260:\270\345Y=I\351\372\274\277\312\371<\253\014\373<R\360\253;_7G=.\217\300;\310A]=\023D\326\274\243\302p<\310\231\336<5x\014\274\271S]\275~\237\367\273\3504\"\275\324\213>\275z\217\336\274\'\2044\275\305\213\355\272\'\313\027\275A\265<\273\304\375\014=\262\334\255<\03619=\333\202:=\232=\363;\207\312>=c\221\035=\234zC=\205\353);\330\024\037\275\342\246\\:\213\342\346\273\351\030\r=\354\336$=\266\357\252\274\352K\317\274\260\361&=\035\317.\275\250\331\355;\216dF\275y\364\003\275\267$\345\274|a\301\272\203E\035=E\371\324\274\026\322*\275\234p\027=n\256\330\274.\357\267\274\220\376O<*-\310:\243:\304<\037\302\245<\255%\021=\237HH=\317\373\342\274\2222<\274+\366#\275\352\336-<}\035\371\274\345{K\275\302]4=\303\t:=^\231\211\274\'t\016=\342\2174\275\255\262Z\275\266\010U\272%F\375\274\030\302\014\275\225\227)=i\026>=\220d\035=\306\017&\275.\340&;d\271\316<\372\255\344<\2048\362\273\206s\216\274n\022\030=(V\024\274\314\371?\274\343|B=\303\223\341<*V#\275G\202\207<h\264\302\273O\355\010\275g\276S\275\363\317Z=\034\275\334\274\265\321*\275\270\327\033=\242?\210;\343,\343;\023P\255:y\344\'=\211\306\301<Uz\024=\341?\t\275\336\263\013\275\236\244L=\203\335\377\274|h\347<q\276\255<c\010P\275\0162\350\273\260\324\361<\035M;\275x~\217<5\014M\274u\300\350\274\360\354\207<q\'==\236\035\323\274U\034\233\274\221\244\2159K?\300<\334\207\301\274\317O\231\271rn\355<\245\234h;\344\243 =\255\223K\274N\230\343\270\304\331t<\266\220Q=D\340%\275[\n\261<\201\006\372\274+\014 =_?\336\274\021\n5=\034\236\324;\333\202n<\253\007\022==bZ=\237\210H\275o\366\030\275\306\305\274<\022\340\'\273\030\206\203\274(M3<F\313\007=\277\005.\275]R\240<J{N=K\035\322:H\352>\275\355\362\347\274R\225#<0\221\030\275\254\306\230<(NX<\005\337\261\273\263\343\214\274!\322\'\275\027\\H\275\236\032\023\275\302t\n=\270\204\032=y4G\275:v9\274\200(\001=\243\020>=P6\252<\t\335e\274\210iQ\275,J8=\177\254\233\271\345\332\023\275\264\257\022=\025\360\375\274\303Xl:N\335\303;\200\374\250\274\315h\325\274\237!\362\274\035N\016=\214\237\273\274\214\225\377<=\224\364\274$=&\275\001\211z\274u\236\233\273\303L)=Bg\214<x\304\006=\036Z\271\274\206s7=\225\300\217\274s\017I=\212\270$=\t&(=qO\333<\253\326T=\026\310\365<U!1<Tb\001=\2502\317\274\271\236\233\274\310\316\030;\346\337\'\274\303\'\340<\024+\"\273\274\266C<lW\\=n-\006\274\025\320\334\274[\226D=e\3425<\035\026\335\274\214;\017\274\267\017$=\010\352-\274r-\375\274\205\201\330<\335Mv<\201,U=\264)\360\274\016\272\001=H!\215;\004\2313\275\014=\250<vZ\023\275s\317T\275\202K\263<\202\202/=\266&\031\275\335\201?9\036i!\274\001\253\032=Q\2007\275\276\374\\<o\352\311;\247\315N\275\336H)\274\2207A:h|\270<]\023\276\274Lc:=\032\331@=\304\300\331\274\333\336n<\211\355.=\304\366.=K).=\273^\035=\373\221\032;\355_l\274C\207\332;\320\206\315\274OX\037\274\352\222c\274N,\326<M{\320<^$\360<X<\251\274I\352\213<\314\322x9\234L0<\315K\275\274b\250C\274\215\3734=\254o\025\275 >9=\333\327\242\274\313\370\276\274>\0325=\261\376R\275\026K\033\274\247\'\010=\363\034\\:\201\200\017\275^\264\324\274\007\232Z:\016l\214\274F^#<&P\002;\020\322\200:w\246G<\230\203\207\274\233r\316\274\275\206n<\312\325C=\"{<\275\024;1=\\\335\\=\276i\250<21\006:n\213\265<\255<2=\243EX=U\254\'=\223\253\213\274\250\003U\274\2341\023\275l\255\334\274lX\345<\245\227)\274k\312^<\204\271|\274\330L!=\260\205\200;\324j\022\275\306\323]\275taE<\036pP=\333t@=o)\345<p\251B=\014\360\t=?\304\242<0\325\220\2742\021\336;\376\215j\274\004\3510\275\223\324\276<\203\037L\273[E\036=\265\373\225\274\024&\303<!\333\003\274\253\200\026<ub?=g\255N<~\367\t=M\367_<P|(=\000\353\357\274/<\331\274\263\305@<\241\374\340<\273n\375\274\010o\246<\374\351\206<qV)=\3313\263<F\327%=\027sw\274\350\003\312\274\210h\'=\270XZ\275\2525]=\1776\314<6\010\370\274g\241\001=mIS=\213\317\003=\302R\310<w!\330\274\246GB=\177\227,\274\177\025\332<\365f!\275\267\260\362\274{MZ<\242n\256\274\301[\217\2740\233\n=\3201\024\275YP)\274G\316\363<i\035n<\323\351\200\274\213vZ=\025\260\267;5 (=\034<\345\273\035\376\225;w\364\334\273H7@\272\rZ\242<9\014\000\273&J\317\274\224\216\210\273<\245\023=\307\020$\275\351\307\025\275=\215C\275\276\206f\274m\202\256;\022\203K=V\361\261<m\356\361\273\'A0<$(\322\274\026\203\024=\332\336C\271\344@k\273?tC=\320\321&=\321I\035=\301v\241\274B\034U=\004\225.=y\370\003\275f\3222<yUD=2.-=\006\273L\2743/H\2757\361\227<\354\226Q\275\213,\365\274\241\016\017=\364 N=\240\205m\274\223\014\'\273y\277g\274a+\321\274\344\370:=\331\254\001\275(\013\301<\027^\301<\'\325\311\274?5\203<u-J\273\002\320X=;`\275:\031\260\262\274\214-!\275\257Q2\275X\366\210<\303y =>B\037=\326\231\213<\005n\007\275\241\007\3707u\243\265\273\273\221\035\274w{\245<\233\356\211;\311w|\274\301\246$=\t\000\307<\213\341G=;\207F;*V\246<\203wQ\275>\272\004\275N\302\261\274NF\177<\345\347\"<r\247\233;\004\"?=\2069\031\275)\305\006=\315\314;\275\271H:\275\357<n<~\027\240\274s\013W=\026\000\335\274\243\255\223<TJ\022\275G\316-\275zP\001=\205\342\007\273\323\t\r=\300V\032\275\277\342\037\275\323\034\336\274\212F\031<\362x\000<Wc\037=\324\301\302<\3156X\275\242\270\027\275#\312\020=\231\275\210\2748YI;\026<-=\014L\337\273\247\021\344\274:\302\032\275Q\220$=\3174\363\273Z\273\223<\014\201\271;\324v\022\275)\263\r\274j\342x<\263\"-=\240\204\212\274[\024G<\230L\006<z3^\273VUV=\346\"\372<\0207\265\274\212.I=\t\256T=L\251\276;\362\3108=-P\312<\001\004\254<\337\241l<\327\264\031\275o`E<z\027\254\274\337\321\361<\204iS=m\310y\274`3\016\275\366\001F\274\236\373Q\274\'Z\217<g\023E=\000%\244\274\266\001\000\275\311\362G\275\362\321\356<\353J|\273\353\331c\274ck\300\274\251\021><\017\367\367\274M\235\024=\2563\340;\033\022=\274K\036K=\377\301\331<\214\351\001<D\0141=\022/:=*\302\177\274b\336 <bq\034\275\336np\274\020\026\035=oj\253\274\246g;\275s37\275!\274\037\275\264\231]\275\346\244\000\274\3109\346<\006w\347<j\203\253\273\020}S\274%\327.<=\230W<\371\216\010\275\375\002\234<&\3671\275\\,\253<\232 \365<\300\006l\274\010}\035=O\255\365\274\032\016I\275%\030\002\2756E\220\274\365\000A=\3658Y=\206\357\001\275\330\203\027=\343\037\222\274\272&8\275\373\261\371\274 \350\311\273\322\216 =\227#\203;}\3618<\257\252\013=\325\242\006=}dY=,d\030=\\\370\210<\243\336\010=\301^\242\274\277\205\017\274s#z;]\377[=+\032\020\274L*\260<\257\346F==(D\275\335a\347\274\330\221\"=(\356<9b\'U=\341s!=UO\002=\203\032.\275\275\351\030<\316n\375\274C\367<\275\307\304\242<R\006\013;\207VZ\275q\004Y\275\207\203W\275jXY\275\335\372\327\274\226^\t\274\220\303\241<\222\342#=\216\240O=sf\270<\353f\316\274\302\276\006=\377;\246<\230y\022=\003N/=\023\2327\274\300:`<!\216\256\274\036\333\013\275kY\025=*\r\005\274\215\333\031=\263f\300\2740\325\300<\255cW\275L,O=\340\237\276\273L\366\331\274\216\316\013\275\3526\225\274\350\2772\273\221\322;=8r\320\274\227\212 =\221\n\035\274\262u\242<;7\252\274\251\211\334\274\372k<\275\373\223\033<\337-\320<\3069\362\274\355;;=\315\227\207\274\215aT\274st\272<\365/\204;}AT\275\210\001\367\274B9!=\307\375f<;\317\232<\375\233\357\273}0\022\275y\370z\274e\357\213<\343\331\035\275\224\177\214\274\250z\334\274\337\250\335\274D\361\342<\350\277\312<Pi\201\272\350R\034=\237R6\275>}.=\340\205e\274K\213\314<\313\357\246\274\323G\025<\000\357\300<\221\030i\274\016\350\212\272\212C&=dr\232\274]\337\266;@DE=8\315]\275\255\277(=\346\325y\274w\215\366\274\3330J\273\216`\345;~H\002=\317J\361\274\357\243\360\274OR#\274\026\245\314\274\233\346\211;EQ\232<\317!\317<\213\200\024=(\303#=\267:I\275\352\370\367<l\357\326\274\241\3565\275\232\346U\275\210\236L\272\260\331\212\274&\000\363\274\243%\007\272e\025x\274#\3028\273\373\304*=d\322\305\274\231\311\263<k\313T\272\n\301V=~@A\274\266\343\236\273]GH=\256\t/\273\207\246+\275\220)W:\373\017U=F\226\222\274\347\"\021;I\321E\275\034(\362\274\312s?\274\3752\023\274@C\215\27331U=V\276#=F\317\004=\311\"O\275G\351\272<\366a\251\274e\314t\274\246\325T=\371\276\001=07\325\274\376v\207\274\005\005C\275\360\272C\274\271e\244<F\347\230\272w\350\336\274\377\275?<Bd.\275\216\010F\275\003\317\033\275\240h+\275\267\334G=\2558\031=?c\331<\221\305}:\357\222\027=\234=\030=\247U\322:>\327\246\274d7\027=\030D\335\274\304\253\364\274)j\004=\261]\"\273\005\260U;\316l\276\274\356\250\266;\270(\000\275\\\263\027=\365J\030\275$~7\275\002%/=\213\033\276\273MO\231\274\367\334\034\274\222\0373\275\243\324\'=\341\204\263<\320\364\322\274UAO\275\250j\262:8)\345\273\234\024\023=\336\372\014;\341\000!<\315\335\231\273q\006\004=\251\224\333<\202\203\014\275\033\263\n<\363\217\310;z\257\331\272\330\202L\275\217\314\035\275b\340\261<\177\315K\275\017\302\202\274,\230\032=\350^E\275\0306\301\2744\274A\275\372\317*<\2218\356\274\260\365B=~ \344\274\031-S<\230i7=dP\263\274^\004\005<\377\346K=\035\367\025\275K\177M\275v\213\373<Y#s<\234\214\227\274\231p\275\273a\2644\275\305\030w<\2156\307<;\205\031\275B\324C\275\310\364]=%\351\235<\365\304?\273pU\224<\017\n3\275}\322\3579\222\033?=\212\334\222<\355\325\316<,[1=1c&=Gj,=\215\235\271<\326Z\034=\035*\214\272\0217\'=I\316.\275Q\274\021=\000l\376<\000\n?\275\226\350\210\274B\2202<\260\"\237<\367\255X\275#\364M=\010\314\002=\311\025M\275\335Mo<<#\245<Q?\r=\351_Q\274\263t\322<\000\013?=\234\177|\274r\201\366\274_>T\275\210\361\236\274L\377\356\274\221[%=V\363B\275\346\201.=b\277&\275a\376E=\034\'\031=xk\254<X\222\t\275\264\322\\\275A\024\204<2+.<\262\222\t\273\235\031\244\274(\324L=\270\300\023={b\372\274\232\202\343<\247\233\263<j\276\033\273\311A\211\274P\033(=P1\334<KO\224<\300\014-=\222\322x\2743\237\026;\201\021\267:=A$=8?\320\274\213\257A:\177\377\352<%+\037\275>\324H=\250\237X\275=\355|\274\362m[\275\236\227\017\274\237\213L=\271E\362<\344\243\234;(V\002\273?0@=\363\345\237\274\n\242\357<\264\225\036\274\\\310n<\244\221\026=\021\'\016;\205 J\273\013\236+\275\367\371?=\333+7\274\236\232,\275\355\177\362\274:\006\260<\227Ys<& \n\275\364<X\275\316N5=z\247K=\355v1=\235^\241<|RC=\376\375H=\032]O=\233\3261<\316\272\007\275\352\"\t<\333\375\"=\333\3237\275T7\036=RS\226\274\301+O\275\272xC<`>&\2751\251\312\274\307[\034\275\311&\207\274\311\\H=\232\223U=d$K=\337\242|\274\242wZ=\313\000\312\274.\316\224\273\355)\027\275\222\270\010\275\000~5\275p9\245<g\267\356\274ML\326<\327\315%=\032^4=\343\260\264<<\215\366\274\303\370\273\274E\307H\275\010\303\030\275\215>@=):\331\274\210\215\272;\346\362I\275\365[\024=\305\343{;\275\034\010\275\017+4=w\236J=\001\244?\275rK\237\274\030\344\024\275\303\270\030\274\033\311\271<\264W~;!V\022\275\247!R\275x\241(=\036\020\230<&\220G:l\215\213<\020\340)\275\027\211\027=\374f\026=\017V\377\274c\0167==\202#=\351c:<\377\262P\275\030\304\035\275^E\345\274\312\242\273\274J\354&\271\002\007 \275z7\374<y\313\006=t3\317\274\032\231\225<\337\037\031\274>\271J\275\254\342\252<p\t\013=\264\340\301<\353\206\333\274\023\010\364\274%\203\020\275\2438E=\372\234\221\274\252w\346<\355z\332\274\177VK<\200\005\375<\227\253\324:f#,\275p\305\305\274\371\306\022\275}\316\n\275\3710\226\274`\314G\275\300\252\356<Z\242==\241\005}\274\\\272\217\274K%\217<\313)\372\273\227\3066;f4/\275\232i[=R\324\006=\300Y\007\275\315\311t\273\206o\033=\254\2610<\202q:\274 ,\037=\230\032n;\250\226\203\273\002\216<=\264\320+\275\315\207\313\274\275\317g\274\216\034\244\274L39\275\247\333\316<\350\226\264\274\307\365\020=,;\r\275)D\246\274u~E=@-/=\177\013\317\2738\n\017=\001\201\032=S`\024\275\322\206\245<\240\377B=V\200G\275\264 \373<\203T)=\031\037\031=\331h\'=GO\216<A\263X\275\234h\341;\276\271A=\n\337*=I\241?=,\313\024=\342V\030\275\022\327\322\274U\261\301<\272\020\312\2741\331==U\265\313\274\034\025\034\275\243]\030\275\367\234\230<\233b\033\275\020^\007;!\252\020\275\250\0055\275S\225K=\240!j\27403\013\275\2505i\274\322k-\275@l\212;30\216\274\030\020/=B\016\253<\211\327I\275\221\347\r\274\221\266@=!\356\027\275WV\202\271\245\000p;\3153\325\274:\250\024=\352\320\025\275\036t\307\274\016Q\030\274\227=(\275\267f\226\273\247\352\001=\234\251\351<txL\274=\235C\275\330\247\367<R\314\203\273E\3260=n\371\010=V\032\010\274\246\256\036=\364@\274\274\333\302\370\274\360\251\306\273\203\035M=\2007a\273c\037\r\275f\023\311<!=\026\275\202*\010\275Kh\323;\372nz;\312l\360;6\375W\275\257\242\245\273K\310.\275\2013\r=a\351<<H\t\352\274_\340\211;SD\373\274\230\006\203;\30244\275|V\274<#\222\020\275\177\211\231\274\021\314f\271\241\365\304\274`u\266<,\356+=\3406Y;\205\212\303\272k\014\277\274\261Q\352\274|\"\025=]\257=<\223\361[\275^5\234<-H\341<R\202\004\275\235\340!\275z2F\275G\261R=\355\3274=\177#\324<\376\333\016\275\350QM\274\025\301\n=\2264\035=\335\345O=G\306\375\274\035\\\316\274 ?\346\273\201Q\031\275f\311\007=\276D\253:Xh\250<\0251\347\274\241\341\211<\362\3616\274\032\253\223\273A@\235<\220w\333\273\372\371\021=\022\"B\275\356H@=\2044\374\274\266=\177\274\2363\000\275.\355\014=\267\274L=\r\247\340<\363\352:=\347\205\337;\021\351:\275>\334\301\274\021u\243\272Y\203\277<\254\031@=\246\357\032=@\0149\275 \357\252\274\204\222U\275\356(\336\274\026\356\244\273+*A=\007%R\275\277\210(\275\362&%\275\342K\342<\337O\375:%\252\006=c\367,:\250\315\211\274>\261~<\0018\264\274\262\273\245\274\3168\375<\235\203f\274\214\0339=M1\325\274\n\027\364;\263\312-<\017\355\"\275siY=\200\010\006\274\206\260\027\275\315U\236\274\004\035\373<\371Vs<\311\020\332;\344\307\023\274\202\030\033=\025)]=\222\351\035=_\016\275<\276\375v<lOj\274x\307-\275\225Qa\274\0205\010=\244\212\264\274\334\362(;\001>Y=\353\273\250<9\303\"<?\0203=\270\301!=\0008.;\000\212m\2740~)\275\336\305Q=A\231\204<\357\021\r=\332\207t<\323\216\023<\200\207\203<P6 \275 n\206;\031\322\274;9/L=\0313\261\274|\206L=\345z[\274\371\373\341\274\306\230\255\274\177k\252<\246]\360;tG\243\274\242\346\234\272\352\262\305<\336\213\234;\345\303\223\274\222\254\260\274jjM\275\034*[=/\2043\273\213\243\216<\313\242\2719\307\013\026\274\376\225\016<\374N\227\274\031S\010<\325 \252<U\216\334<\036n8\275\335\037\270<Iv\370\274rCq;y}1=]G\357<\020\251\236;\215[N\275]e\002\275\223N*\275\263\202\321<\342\264M=Q\016\027=hHN=\372!\325;\305\273\241\274\367\2047;\",\005=\302\306\027=\nk\016\275\307\374\242<\357\030X=\304/W\275\346\370^<\261\226\221<\376J\230\2742\207\341:\017}\005=\244\030\202<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
