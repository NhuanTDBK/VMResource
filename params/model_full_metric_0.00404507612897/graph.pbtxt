node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2010
          }
        }
        tensor_content: "u,\216;\254](=pi&=\006\313O<\346\305\024\275\355\352\334\274\204\230?=\263K\007<H\023\351\271d\024\245<\375n\023\275\323\240\326\274$\351\240<c0\323<t\366\030<\0209X\275\204>N\274\330\002\003=\374\3645=Q\247\026\275\361G\r\275\301\262\332:\317\205S\275\35089=\3101@\2753\2316=!\376\200<\351\234\223\273\032\241\344<\364\233\217\274\210j\017=\316R?\275K\247\025=\255k\203<d\325>\275w\2146=f\373\357<\325`\002:\2733\002\275\234\373\021=\014_*9\200Y\306<\203\220\020=5\"\r\275\265\031\332<J\323\202\274\034\226\020<B\240^\275Uf2:\325z\353;\301\355Q\275\356\241\212;\213C\321;%q\025\275x\025^\275i\323J\273@\354F\275\037\203\250\274cG\010<\231\274\006=)\240]\275(\226\035<\t\233\264;l+`<\t\005\376;\177\332\243\274\354\027I\274\245r\210\274\264\266T\275\204V:\274\274\242-=\315,\277\274\253{R\274^\027\367\274R\275\352<\253f[=\274\241\334<|\345K<\212!\306\271hf\354\274\2323[<\312r\026\275f\253\274<\001SN;\331\275>;\232\311\377<^\355/\275R\211\021=G\274\237\274\267\227\356<\266\353C=rD\n=\200\241[=\204%\350<L\302\034\275\322\357\351\274\250\200Z\275\302\347\236\273\326\004F\275\3067\344<d\030\357<\275\024^=\031rX=c\026U\274\030&1\275\2726\020\274\204\222\274<\227\345\222\274\035\312\247<9\350\364\274\252E\257<\025\374\355<\200x*=\212:\337\274\233\371\007=\262;\354\271\203\200\025<W\240A<b7D\274\3408%=qe*=D5\366<{\022\243\274\014\203\021\275^\341\213\274\004\251\035=\230\007D\271S\250\037\275\211V\365;\270]J=k\217\\\275$\350[=tG\025=\214\220g<\267\343G<6v\262<c\347I\273\254e\017=\032H\306;NnW=\273\366\205\2726=\320\273\336\326O<\034\272\r=\356?\010\275\267\330\332\274\272\302K=\263?J=\200\203\245\274\027\253\310<o\232\226:\003G\314<G\322R\2754\016\272\274c\263V=\230\377\243\272\335\030\027\275\275\014\235\274}!O=\267\245\226<\363\253\200\274\2260A< \253Q\275\316\324\014={SD\275p\223\356:on@=\224\004\371\274\246\032\301<tm\213\274\265\307\257<\231\221h\272\212\307\\=\207\3579=#\t\002=\255\341\022\275~\363\261<\tw\277\274\177R\362\273\253f@\275\275\204\317<\306p\311<j\3063\275\363\276\333\274\204\020\243\274\261.E\275$\017\262\274Yf\021\275^\013\020={*\306\274\332\252P=\200i\270\274\'N\014=\357\034H=\'\367\232\274\365\261\027=\3016\254<l\366\345<?\23199\307\370,=D\310\300\274a\323Y\275\037\377\311<\215\330R=\273#?\275\210/:=JX4=D\017\245<\260@\207<\326E6=wQG=\241<\005\275C\310\2379\267LB\2743KO\275\000\036\374\274\210\001\316\274\341\351\034=\005\364y\274\022\332E\275U\333\253<^v\033=\030\303#\274\234\327==\247;\222<\370\215\316\274\273\177L=\354\034\313<\\e\221\274\244\370(\275\224\303\010<\245\003\030\275\374_\270<\257\257\214<\345\t\260\274\3355\354\273d3\022=\002?\376;\013\022\020\275\027\234\000<\312gZ\275\016\320\312<\nr\224<\254>M\275Y\003\225<\035\343\334\273[H\002\275]\306S=n\334N\275x\376S=\300Wv<\020\245\004=\2574\223\273C,\303\274\303\" =T\025=;\200p\270<\272e\016\273\237\021\014\274>\253\225<u\216\364\274\347\267\002=d_\020\275b\357\264\274\036\374P<\364\246j;-zB\275z\360\247\274}\242\311\274R\250 =\035\227\272\274\200^z<\206\344\270<)f\271<\326X\230;L\211\342;\242\t\375<\240xU\275yXR\275\207\235$\275\373R\324<5D`\273\205\242\213<\246`;\275\3010D<\"\006\314<Y1#\2753\315A\275Y\177(\275I\032\010=\3302P=0%J\275\240H>\275\217l\036=\232.\001=\227jZ=R\217\350\273\230,\371\274\326>F=1\206\004<\354\261H\275\034\260\022=\241\344U=\005\032\n\274\235~\371\274l?;=\237\036\341<u\303\226\274\2376n\274W\010^\275\220\313\276\274\277\013!;\233\247\263\273!V\013=\237X\002<,\367\225<\361\3372=`\243\277\274\322f\361;\2335F=\325\024\342<\021*q<M\235\302\274\016\305\023\275f\362\301<\304rY;s\177\240\274\221tB\275LQ\305\274g`\026;\215K\007\275\377\027%=H\221<<\022\323[<\017C\375\274=\341\006=:\324\030\275:N\260<V\244\211\274\254\273\314\274\013H\324<\220W\345;X\032\363<\272\035\035=`\252 =U_\207<Y\235\253\273~\033\n\274\266m-=x\034@=\346\024\013<\354u\335\274\343Q\370\271\235\247H\275q\365X\274@b\003\275\261\2069=\016\205N\275\266v\\<$*\r=;\370\225\274\230 \013=\355\207\201<\023Y\250<\317\227\252\274\241\225P<\244\324Y<\223\376<\275\357\230\365<\366g\305<[g1\275\006U\010=\227\375L<)b\020\274\213\310 ;\003\263\037\272\246\256\251<\n\271\030\275\253\200\361<\016\020\310\273\345)\245<\203\013\244\273\016D7\275\355z\r\275\005\352\261<\267\350\003\275\350\232U\273p\275X<Gm\035=\314|\215;\300\236\027=\235E\364<\221\rk<\230]T=\024\237\315;\354\177\002\275<R\353\274 \306z<\000\311;\275\332\220\334;\177\032\327<\302\3238\275GD\366\274\014w\000<1\216\352<{\266\n=<H\022\274c}\232<q\025!\273\010u3\275\316t\235\274L\244\235\274\226b\365\274\225rK<\365?Z<(\013\'\275\217E\367<<\'\022=\364\350^\275\330\246\272\273\223$\020<E\246\t:E\335^<i}\230:\202(\255\274E\333!<\010\037\020=xA\023=\366\373\334\274\243\227A=`j\325<\017\275\030=\211\305.\275H(\330<\232\014a\273\r\367\347\274\326~\327<\320&R\275\357\243\177\274\316~n\272\211\014\205;M)\313\273\360\004\265<\255\372^=\215)\035<\263\272\264<\310\010\005\274\217\002%<q\004\202\274\347T\311;\3650\364<z\223\r9+\204\016<\374\342\001\275\0243C\274\001.&;v\370\332:\224\366\021\275\034\030\340\274\215d\t\274E\004\226<\252\346\005=\354WQ\275P\177.=o\r\r\275)\242;=\210\231\305\273\247\006Z\275\346\325\037\275\033\271\207<,\257S\275\036CI=\272oA=\236\365\362;\365\207\213\274\362\257T=V\371\237;\030\2165=\247\207\225<Y\302K:\243i^;R\001\311\274T\364O\275@\000\023\274RP\335\274&\013S\275\353\343\355<~H\357<\355o\205\274\373_?<*\031H\275\243\323 \275q\026\333<\211\313\210<K\250G=\234\254\020;u\343\242\274\237*\367;\326\216\335\273\351\346{;\251\267\213\274\303\214!\275\260\345X;\354\002L\275\n\3162=Z%\365:\337=\036\275\321H\367\274\276\262V\275Z0{\274\261\255\312\273\311\3367\275o\352\017\274\255P\344\274\231-\271<\204\335\335<8\004\"\274>(\320\274\223H\000\275!]\254;\"AG=|6\017=Q$\214\274=\333\245<n\254V=\276S\025=1J\313<\331R/\275\303\"\037\2751-.=\265\270\003=1\300L=s\324j\274\036\216Y\275\226\3039:\351X,\275\272\235u;&e\315\274\217\234\210\2740\355\311\2748Vs<\343\374<=\332\201W=~\024\353\2741\321\376\274CnE;z/\240<\334\224\004=s\201\"\275\317Y=\275Q\205\315<D\215Y=\317\0261=kn\024<a8Z=\341\316F<\"\313\225\274\345\206\210<\010\003*\275\037\241\352<M\035\026\275\324nE\275!\205\346<\206\213\267\273\222`)=\251c\007\275\220x\371;\334/\261\2745\032W\275\022\357v\274\326\021\'\274\002H\202<I\310\315;6F\242<\302\036Z\275\372\255\037\275\370 Z\275\342\0029\275g\335\374\274\240\370\271;U\362\017=\007\372%\275\302\305M\275\307\221x<\251_\346\273C\002\020\275\004j\315\274\"\006q\273y\300\362\274\034\232\014=U\363\336<Q\304E\275\033\265I\275\362W\306<@\036G=\242`\274\270&\357\"\275\247K\000=+\374\356<?\246\354\273/\265\001\274\357\256!\275\366MM=]/S=\005Y\033<\320\272^<WX\243;\323\005\236\274\201\210\205\273\325\301M=%\253\007=\205\235\006=\355\324\317\274\373\261.=\030&\212;X;\305<\363\347-;g\274\271<\272b\266<\331dQ<\242\r\271<\354\204$=\326Pq\274\203\232\037\275n\\)\274,\234\311;f8\367<\341\3332;3E\017=\177\365)\274\251\367Q\275\305\363\211\274HKZ\273\321J#=\004\215\351\273\277\237\351<\005\357H\275\0014N={i\344<\216\027\371<\2326\315<\037\232\316\274\267\363u<\305\241\246<$\273d<\245\355K=\275\004\017\275\304Y\010< \342\235\274\256\376\351<J\321\257\274C\311\262;@\375+=\020\226\223<\246R\036=\026!\324;*\346\214\274\001H\262<:jF\275\374\004\342\274z\247\265<\204\n5\275\235\314\274<#&\036\275b\246\213<Z\003\035=\332\357(=\236\305V\275\344\250M\275\275\237Z=\345\221$\274\306\210\034<B\333:=\231\311\341;\315\234L\275C\212I\275\032\235\313\273LYG\275\260\246\266;L\033&\275-\237k\274\2149/\274\003\265\231\273\236A\\=\322\363\256<\005d!\274\376\'\222\274\252\323\257\272ZUD\275.\206\374<\377@\220<\307\313?\275\313\202H=\260{]<\203\3560=\235e\036=*\374\204<0J\336\274\2274\230<|\210\212\273\351[\016\274z\344\257\274\2644R\275P\275\324<\016\0171<\005\372\n\275\366Z?\274\263\303\257<\317\211\354<\366\024\300<5YI=\323\216\311<\n\231P=\214\304N\2759\320\224\274\235/\221<\244s\007\275\350\244|\274%\253`\272q^\\\275\003\335\013\275\272\311\307\274\224\347\020=\273\314H\275\273\026\026=\006\307-=(#)=\2251\325\272\004\225R=`\3234<\270\257x<\\\235(\275\200\310\335<\'\241\244\274\035\304Z\275\263\020\276\265\013\324\\\275bVj<\316\002\243<\352t \274\304\220\257<\321n\361<\323\353\030\2755\372\013<\0014)\275\034\031\260<\272\226\003\275T}\242\274\201}\353<G\335\004;\236\367#=\246\002\017=\357\334\324<:`K<\034h\276<$e\032\275\0221W=D\033\304\274\t\355E=\275\"\222\274\201\205\310\272N2\034\274\267\374\035=\347V,\275\325\313C\275O\240\"\275\347y\322<\253\330\024=@\330\014=\250\233!\275\354\340\005\274\r\020\220<\300\313s;s\2226\275)\013\024\275\322z\330\273\366\027\'\275\217\014;\2751\013\263\274\204\306\022\274:c<=s\256\263<\213J\024\275\210\371\254\2741\251\t=\275\330\364\274L\331K:\033\301\031:\264\324 \273\333\037\016=g\033\t=]\366\252;\303p(=c\370%\275\310\311E\273\372\306[\275\204\361\211;(\223T\275e\\\013=\027\301\253\2746\353\233;Y\256\030<\332\375\207<u9$\274E\025\237\274\301!P<\ry\033\275\217JN<\322\300\347\274x\200F=\032\346Z=YA\010=\277\352H=[,\226:\036\230\315<J\306\351\272\240\253S\274.l/<G\372\201\274B3V\274\330\315\336<\026 U\274\346N\263<\272;\346\274\310\323B\275a\3641<\244h\234<R\334\331\274\363\221\316<\215[\014=\00361\275\246\273W=B\302\006=U\025M<?z?=\257\023\374\273\350\302\253\274]~o\274\321\237Y=M\213\353<\356>-;vyZ;wS\276;\367\351\010=\205\3015\274\332\'+\2747\260;=\365\226\001\275\227t]\275<\257\267\274Z\211\t\274`\366R\275\223\257\276\274\234\277\346\274\367\326\267;\203\370@\275\001&\030=S_\336<X\370O\275\211$Z=AI\033\275\n=E=\365\375U=%[\021=\2441\205;`u\005=\t\t\033=\345\365\211<\\\222R\275\365g\035\275ue\307;W\314<=z\n\t\274U\033C=\375*\004\275a\211<=4l\251\274\361\276\252<$\005z<\261\253q\274\004`*\275\342$==\367\374*=S\321\313;\035yb<\"\"1\2754\233\247\274G\217\034<\243&!\275M\251\342\274k9\257<>\331\034=>\363Z=uR\"\275\016\0071=\227E2=a\'\302<kB\263\274\271\212\034\275\216\224\r=a[A=2\r}\274\252\017\235\274\237\200\227\274s\366>\275l\323U\275\227\363+\272\026\032\331\274\312\332w:kXI=\275\341\016=!i\037=\001\017\002=uE\310;\210\223\022=\242\332\037\2753q/\275\311\037X\275V|\"=\306\207\240\274\277\336V=\345\320A\274E\337]=t\266K<i\211I\275B\355O;R\260_<7\274\206\273\303\244\032\275)A\033\275\336\374K=0\274d<\353\0044;v\360_<\003\354\005\275\243>\030\274\206\303\030\275\347\241\216<\373w\001\275\266\354\350\274!\246\032\275<\363\233\273\356\\S=\233\014P=4+\017<\037\306T\275\213\352\005=B=9<tN\353<\345a\370<|\363\027=\232\323$=\243t\241<v\001\242<f\241\023=\243\2774\275\017\3555\275\231WE\273;KU=\313N\252\274\3707\366;\243\276\027\275\335\330\363\274\032\373\014=\340h2\274\355\010d<\307E>\275Q\327T\274|\336I=\330\364\r=\222\034\364\274\214\357O\275\205O\277\273\316m)\275\217V\177\273\251\370\004\274\235\035\026=r\2037\275L\311\037=\013\326\332\271\025\2437<\\\376@=\361\225\017=\276\314\'\275\252W!=\307O\374<\216\320V\275\032+ \275H\021\234<s\337\370\274\301\367\300<x\363\000=iI\r=7\210\256<\0037Y=\214#G\274\350\320\267;Q\023\277:\025\227\313<\311\371\003=\253\247<=\247\316\350\274r+^=@KH=\220\353\026=\337\274Q\275s\247&\275\266%\332\274_\263\235<c~\360<S!\356<\000d%\275\017[I=\224W\342;:\251-\275\362J\374<\000\177\\\275\3753\035\275y1\207\274\032\035E\275\332\021>=/\217\217\274S\353\010\275\305\263\010=:)\334\274\312\345\370\274\260\273\257\274\221\320J<\003&\317\274_\333\3069D\363\343<\017d5\275\341=-\275\033R\336\274\210\036\214;\017#B\275\213`C\274v\261\005\275o\322)\2752n\234<$\212q<\260\313\211<`\233\374;4\267\001=\324\276*=u\034\267<\315`N\275\257m\202\273\226\306^=S\000\337\273\221\215*\275\020\270\305\273\0278\364<\277\361\226\274n\351\356\274\211\256/=\237\004\025=\374\242\206<;\316\365<\313\036]\274\363\350\r\275\374C\312<0\236n\274\371\232=\274d\373c\274\'r\223\274\235rG=N\300 \275\361\0305<(\274\014\275\013\242\345<D\030J\275\243V\"=8*U;\302\267:=\27366=~\367@\274\264\202\214\273\377\016\376\274E\260\221\274\261\340\000\275\353\367\017\273\001[\"\275.$1\275vXv\274\001\004]=\315/7=\334e\361\267\211\366E=\361\352S=d\244J\275M\316\375<\216\016\261<9\331\231<\255DV\275~\0002\275b\220\250\274\351\230B\275\004*\232;\376\233\270;\224\027\204\274\257p\236<kU\007=v\300\340<\336v\351<\347\3763\274\276\023y:\250-:=A?D\275\2510\340<w\177l<\3025{<\"\214N<\247g\266<\344\330\205\274\215\371==\205\304\311\274\311\314{\272B\202)\274.\235*\274\210[\'=n\331\206\274\237`:<\321\177\023;f\263e;\261\330J=w\177\345\274,\355\260\274\310\342~<\203\263\232\274\341\323\322\273m\246A\275\363\177&\275\207.f\2748F\330<R3\366\274\010%e<i\335\006\274^\2772\275l\333\\=m\220#=\235\355@\274$\303x\274n\215Y=\346>Z=0\020\n\274\343\313\367\273\241\"\t=\332\317X=\306\306P=\363\262D<A\242\343\274\257\220.;CD\030\2752\005%=\307R\274</\234[\275\362H==\367\357\027\274\372~ \273\266\"\300\272p\356:=-N7\275x\315O=\016\202/\275P\204<=\276\273Q=\026\2369\273\226Rl\274\2328o<\300\004\325<\321\354K\275\033\213&=\303\270%\274\226\364o<\215\316u\274\024\037.\275\032\227\330\274\317\330K<\177[8\275\213SK=\251\230==\210F\326\274?\330\t=5\005C\275\210D\337\274\034H\364\274\350/\244:\274Y\035<\212=\010=b\263\264;$\t9\275\276\373.=\361\032\004=z2j;Nu\002\275\241!\t\275^\366\320<|\253\010\274f\000\\\275\360\246\251<=W\333<\253\361\327\273\tE(;Y\343\010=/\031\032\275\204\250\306;&\3528=Z^\305<\372\315\r\275TI\027\270\372\\\030<\210D\177<\317\r\215<\305\003\252\274\211\367)=u\373\203\273\334?4\273*.N;\350\343\266<\020XC=\335\377)=\2602\025=8fC=\362/\263\274\202\002\017=\330\272\001=E\271\212\274\025\n\376;\007\035\021\275P;\023=^\316I\275LOE\275M\262\032\275M\227F=\256O@=\361\305\261<\207C!\275\330-\007=W\307\307<\335\326\336<\366)\021\275\235IZ<\261\363\365\273*\323/\274\010\305\023=T\260\273<q\332\375\274\251\373\200\274l\245\236<\2459H=ge\223\274h\032\317<\321\216\n<\234\225\232\274\304-\013=2>\026<Sq\"\275\272\305\010=|\344\262\274wS2=\241\272G= G\002\275\032qQ=\262\317*=\256V\244\274{\243B\275\253\245\201<\262\2366\2737\357\364;\347\367\032=\354P\257;8\316\033=E\366\332\274\313\'\000\275\373\230[<!\203(<\226\021\251\274\227\217\260<a\313E=;\265\252<y\372\037\275\367\303O=\3756X\273n\210\336<\251%B=c\272U=\313\341\362;K\254-=v\265\251:\030\204\033\275\276`\301\274D_i\274}<\355<\265\2745<\337\332\270<)\327$\275.\271\346:\347yK\275\256F%\274MG\n=\003\026N=\234<\376\274U\312\316<\303\343*=\255.\024\275\2547\355<\'\024:=%\312L=\321a\270<3\236}<2\307\371\273x\356W\275J\336D=\030\332B=\372\003\332\274\276\365\371<\202 \027\275nJ\004=\004\022\016=|/\n\275\275\020\002<\335\247\263<Qa\221<\254\304\010=D\210\213\274c\272A\275|~\307<\315\206H\275\213\377\336;\306i\001=\373\344\373\273\357\340\251<\376\215Q=\240\210G=\r\270\235<\003\357\000=\347\2127\2758S\224:\350\343i;\343\215\313\273L\177\246\274\273\3641\275\261/\"\274n\326\254<B\017W=\305TX\274v\313(=\276\017\273;\007h \275\027\256|<\202$2=\367\273d<{k\321<\334-\226<ck[=-\0032\275\333%\215<Q.\030\275i~/=2\267\031;\277-\023=\231\033\035=\371\255\036\275&\r\333\274\0058(\275\014h\037\275\310\265\207<q\347\031\275\213\317\253\273\242M\274\274\222|\345\274i\247\016\275c\254\330\274ZJ\273<r\345G=\\\036S\275\272\032C=\177\031\357<\333T\335<\235\262Z= \356\204;\207\206\315<%\032?=\372\025\330\274\276lf\274\301!\\\275\231}!=\211\354\214\273\250\036\270\273\020C3\274\224\212-\275\2253*\275\362\2107\274\226\"A=\337A\031=\354\257,\273t/\313<u1\211\273rl\330<\344\204W=\200\247\3518\217\244E=\301LC=.!m\274V\222\203<\266a\202\274\230\347/\275~%\034\275\373jK\275/\'\307<>k\266\273\001\272\031\275\025\314L\275DrV=\340\211\207<\030\nF\275\251U8=\"\264G=\356~\025\274\325n\364\274\2072)\275\373\351\001\274\373J\375\274\347\364\252<\023\022\\=\326\322\224<z?\214\2732\014\363;\351\023\371<\250\312\332\274\007\262^=\"\\\020=\241\361\361\274\306\315\240\274\333\233L\274\254\3471\274\323Z;=\t*(\275i\237E\275\230zG=\026{A=\266\036\\\274\t\r\334:\265\021\345\274Y\336\001\275P\325\341\274\326\231l;\r\020!;\245c)=\352\326\260<\346\027+\275\021\317=\275\025\003^=s[U=4\242\206<,\253Z\275\2553\360;p\376Y=\243\207\007=\236\217\\=\365\241\277<j>\375<\251\350\270<b6)=\242Z\034\275)q\253\274\022\025\025\275\325t\314<R\370#=\206\037\304<~\375\026\273\376\'L\273XP\n\275\310{\272\274V\360\210\273[;k<\301Y;=\026\'\273<\273zG:\327\027[\275\371$\005\275EmW<\342\256J<=\263\001<ry\023\275{\261\376<\243~W=\234\265,=\332s\252\274\365\231s;\036\271\034=_\363t<v\260\037\275w&\"\275\242K\211<,\313\274\274e\324@=\257$\325<7\331\334\274_\306^=.\237|\274\t>Z=A\232\256\273s\006\345<\325<H=XA\216\274Ym\310\274\343\316==\240\264\335\273*\217g\272S\363V\272\347\335v9aP\233\274\311_\034<\021d\317\274\352U\010\275;\370:\271F2\207<n\200\353\272\306F(\275\207t:\275\301Rf\274\020\313I<\264c\265;\235\263!=P\361<<\325\333Z<E\027^=\373\376\350;pc@=7\230\244\274\3022\036\275IX\202<lz\243\271\357F\177\274\356\253(\274\020?T=\210\371==\335\363G\275tV\342<\205\223L\275\242\352 =2\2036<\332\251\331;\300o\371<\253i5\274\275\223l<\337\247\022\275Z*\022\275/d&=\350\371\036=\225\256O=\324\014-=\245\303\332\274\317-Q\274\005\341\014=r\243~\272\310\267\234\274\221\206\356\273\251\337I;\007\336T\274\225Uu\273\214&\363\273!8\231\2747p\302\274\221\025\222;\360{\032\274P\364\350<PL(\275CB\000\275\0315\"\275\271\310\253\274O\360\351\274\215\225)=s\322\327<\233Y\021=/*U=\014%\264;\367LB\275F\336==\221\361\374\274o2\021=\332\363<;b\240\006=\214\336U=\305\351\032=\355\034\247<\036\023]=W\036\n\275\017\222v<\237xS\275-&T=\354\212\201\274\270\214H\275\322\200\020=\253}\242<\264\367\345\274\300\010\330\274\\\214\350\274\023\324\000\275\030*\230<#aq<\035\241\023\273V\314\003\275$\357\364\274\276\341\325\2747\305\203<\227\213\361<\350\331\253<U\030$;\001(A\273\272\306\261\274\220\224\277\274\337\2731\2757\017\031<c\246#<\272\240\334\274\032\014\217\274Lj-=E\306\330\273\t\244\210<\210\251\037=\240?8<\010\340.=\016:\207\274\311R\023\275\374,\230\272\241\016\216<\346\267\274\2732\320E\275\1775<=bw\r\275\177-k\274\365y\251\273\340\261\263<6}[\275\325\200\231;\n\026\030\275\351v\033\275CA:\275^\263,8\243jS\275\250/\265\274H\r\230\273\265G5\274J\\{\274\017\303\024=\177\355D<=\247O\274,\024X=\206\024>=\241\233\'\2758\0327\275B.-;\212cL=\260\343D\275\270\347Z\275i\207\365;\237W\232<\340\243\373<ys\231<;\t&=\200\350]=\017S\211<@N\036\275\022\2142\274!M\344\274\'\352-=\263\223\264;\025\247L\275b!\323<5\201U=z[\313<\345\343:\274\352\345[;\202\356H\273\323WR\275\000\232 =;`\'\275*b\234\274C\376>:\3627\371<rCU<#\345O=Y^\316\274\253(\313<\\\360G\275\211\321\375<\351?[=\250\322\301<\367\035\005\275Wt\032=&\255\220<iP\275<\001\317\222\274\t\330X\274\033>D=\365\337\341\274\276\030\233<\033\367\242\274\007%\370<\334z\207<\266\260f<\010\202P=\211vQ\275(\326\335<\004\3777=\372\214\002=\020\302V\274\377\032S\274\335\003\001=m\026\365<\027!X\275S\004\330<\220\3179\275Z\3163=k\352H=p\373k\271(\245=\275$\331\001<\302\006\370:Aw}9]\336N<t\350-\275o\215\006\274\'\020\235;;\300\331<\375\367\334\273C\245*=\254\233(\275\004\342^=T\312V=\032$\013\275\337\211\342<#IY\275%\277}\273\230\327\007<#\256\007\275!{\025=\344?\236<\031\302\362\2749y\350\273r\235)=F\013\246\274\363y\026\275\305v\220\274H\027\r=\334\351\307\274d\212\002\275z]><\217\207\336<\310\227\016=\210\005N<\210\360Q=#>\033=K\254\026=\017\250^=\031~\033\275\217\223\377\274?\357 =\250\361D\275,\024_\275\204\246\207<\253D\330<J\305\020\275\232\312\364\273(\222K=\303\215!\275j>\026=j\214\272\274\363\212?=O\223\337\273\270\004%\275fo\344\273\036~\270;\213\302\300\274/X;=g\377\226<\201\217<=O\026[\275\365\267\342<\007DL=\337\013\016=0]\005=8\036\\\274\331t5\2746\222%=\314|.=\245r\216\274\366\354\302\274iS*\275\352\344$<\216\255\'\2758%P=\227f(\275\nVP=\250yN<\310\343\211<r@\372<D\tb\274)y\307;\240a*\275\276\303\005=*\337y<\370\020:\275\322\265\214\274\021D\'\275K\300\236;\301\257\307<F\314\346<\2603\014\275AC?=\274\353N=\024\231\352<\025\327\253;W>\203<9e\326<\377\372\321\273oW\341<H<N;\315\333\316<\217\203?;\276\221\271<\302Kk\274\272}\326\274\357j\336\274ZA\204<H\333\302<\250\367\254\272z\261*\275\360J@\275;\376\227\274u\322\272<\334%i\274\021\321\026\275\032/\270\274^\357@;7\3755=)\306.\275{\255\323\273=\211\333<cy\376\274e\276Z\274\364\3323\275;`\212<Q\005F=\320\307W\275\010\r\0029%A$=t\351\277<\241.\324\274\300\366\205\274x\256\"=#\n\255<\240\2164<*\265\224<\'I\312\274Q/\016=b\332Y\275OtR=m\367\340<\215\337:\275\"\037\345\273\374\367\033\275\206y\275<[\367u;\225\302\000\275\355F\024\275iKF\275\216\020\214\274\024V\300\274\216\224\312\274\335\007T<i\2642<\2372\327\274\246\020<\275%\347\376\273\372JE\275\001\314r\274\326\326W\275n\302\020=\317\203\'\272#\302X\275\267\254.=\236F8\275\240;_=\021\303\300<V\r+\275\237\020\307\274m\345R=\220\232 <\372|O\275\311\366q<\354C\361;<\2023\275J H\274\374D\326<\2459\013\275\272\177h\274\343aO\275\257n\301<\227\241#\275\244G-\275\030\377\036=ZL\207\274\252\241\005=\364\022)\2759\325\263<\342\334;\275\336N\363<e\220\037\274\271y>\272\'\2366\274[\241%\274\252\323\300\274\020\030R=\364\375;\275W#\022=y\2742=\'I\341\2745\206\362<G\346P\275\233b\031\275\032?\020=5\310\024\275\224\303w\274\267FT\275\256\017(</\251#=O\300*\275j_\002=\276Yv\274\036\373\020=\323\270\313<\303\325\351\273~9\312\273\017\260\024\275\375\326>\275o\037\007\273\351.U=\337O\037=\276\003p<U\" \275/r\033\275\202\3764:\202D\362\274X\035\260\274\2322\006\274\016\304\002<b\340\361<\332\376\002\274\201x\025\275\213\234\034=\204\2002\275\363B\t=\353Hy<\355\215\364<\023\312,<f\204\221\274(\221&\275\265Y\032\275\014\035&\273MP\003\274\307#\304;)\302^=l3>\275?\314?\275\207_\251<\250T\345<s\247\366\274\2274\331\274Hm\033<\"V\232\274\270~?=\260[i\274\240\255.\275\251\032\017;\3775\341\274X}\321\274\341\212&\275hF\231\274j4X\2750F\237;9\3325\275\270\203\310\274W0V\275\216v\300\274\310\014h;!\361^=\317\3731\275Sn\323\273\340]9=EX\034=\r\221\226<\271\232Q<Y\354\034\275`\236/\275\203\177H\275yY\231;g]\353\274\017]\014\275\266wS<\364\262\014<j\305\230\273\225\372[\275\020\202i\274\345\354V<-}\213\274\212\252\203<\315n\352\273G\313\021=\301$.\275\277r&=\332\255\007\2755q\233< \026u<\213Q\331\273\203\231-=Y\307\003=cl\241\273$\374/=\3450\271\274\322/\005\274\207-(\275\'\3142=+\352E\275\265)I\275hRF\275\315\215@\274P\340\241<*\312\031\275\001\031W\275\230e\n\274\316\254\034\275\207J\274\274\235\356\022<\372\220G\275f\207z\273\031h\n\275\276%\t\275;\371\261;\350@L\275\2477\036\273\330\340\224\273\027\327\332\274\263\272,\274i\247\240<C\217\004=L\263\244<K\333\007\274$\351\037\275\030\213\017=\315\3618=N\215\353\274\242\2758=\263\002\372<\376t\242<\246X\274\272\223B%=]9\024=\256z2<d\234\227\273aE\275<\377<\235<\235\272v7~\276\324<\202\264\344<\367\343^=\211\037<=\36347=\274(\n=o2Q;\256^\363\273\310o\t\275\014\"#\275\036\3121=\275VH;\372\202K\275FR\377\273{_\314<\204j\355<Z\033\177<\237G\240\274b\201g;\321)\300\273\"\276\275\274\rw\212\273aW\r\274\313\n\306\274\n\341X\275\214\377<\275n\032\211<\203I\361\274\025c\327<`\272\020\273\013T=\275\215\275\366\2745\2231\275\200\306\260\274\014\020\'\275\227\002.=\256\266\007\275\200\3407=N\313\023\275\327\tg<K\035\031\275\\\251\264\273\276\273Z=\340\004R\275\225\022A=\305x\266\2742\212|<-\216\344<\200\214\004<\203\3160=mrA<\264D\364<\357\273\237<\312\327\343\274\035g\023=\274\251;=\322\355\003\275\177\235-\274\204\254\206<\".5\274\231A\314\274\274\275b<\246]\246:\006\360\022\275\227\203\241;\025(?\275S\030\321\274f\037\016\275O\017]<\354\350\036<V\271\326\274(Y\225\274\232\347G=\226\367D\275\261\257\375<#$,\275\025\365\227;\247\376\314\273N\t\352;\371\201`<\257\325\'=\000\211\024\275\013h#\275e2\324\274U\276\251<\236;I=\375-\262<\337\366\235;\376|\037=\244\t\342;\010]\002;\356\323\266;\200g-=L\260\250<\352\247\\\275\257\350\226\2749a\004=\362q\007=/H(\275\250\226\032=\351\216J\275\344\345\024=\320o\237\273Vz\013\275\222\274\241\274S\204\273\274\240\023\021\275y\027\t=d\224+=\243\032\342<\223\022\355<\210o(=\017\314\030=\234\310\004\275\345\377\004=\215J\233<I\302!=\216\261\230\274\216\267\002;Js\323<\367q6=\364\245O=\3205_<\t\324\220<f\277::\027\334\001\275\037\241X=IMX\275w&G\275\211\3322=Y\007S\274$bK<\221C\216\274\241\202\013=\007<K\275\276Y)\275\211\022\346<\260:\022=\002\030\276<\314\2079\2748\033\312\274\376\366\'\275G\225\007=\023\217\344\274%\245\264<\255\216\217\273\266y0\274\207]\026=\261@\026\273g\317\266\274\373\342F=\224k2\275\027T\257<\2036X\275\311\037%\275j\200\265\273\0037\005=\377\260\035\275g\003\233<\341,%=v\032T\275\370y\034\274\035\254\205<\265\255K<\234e1<%\251\3508|\361T\275\355x\344\274\375\274]=&\036\005\275K\3605\275<=\215\274(\332\235\274\303!\223\270\346\205\201<\0325\036=\272\332q<\336\336[;\323\000@\275g\353\340\274i\315X=b\307A=\2247\024<5.\177\274\255Y\304;f\272t\274\014\347\005=WG4<\223\376A\275\256\373\324<1\200\023\275o\3378\275\237\321\320\274{\224\340<\366N_;\367\033\013=\273\252\027=\253q\244<k\367*\275)\330[=\353\351w<\323\244S=1\377$\275\2062T\275\316\352M=g\n\032\275;\341)=Jt\271;\313\261\242<\026Nb<{\346\250<;o\235;\204wV\272L\037\030\274mF\306\274$\366\320\274D\350\357;sM\203\274\221@J\274EH/=\027-\232<S\232!\275\353W\225\274e\333\221\274\333\217\325\274\347U\201\274\367\241[\275i\242?\275\000OW\275\021\0143\275\301\254X=5\276\372<Ms\312;O7v<\253y\231\274+;\323<A\371\n\275\324e\034\274\376\033\342:G\252*\275\2312C=\341\234\021\275\270\016k<x\367\204\274\3222>\275\254@E<OG\333\274\177|=\275\353\252\003\275T\222K\275\250\264>=?M#=\0302\246<\020H\314\274\215\261F\275\025S\225<\341\352L=\374\211<\275\307\273\n\275[\355K\275Z\262*=K\217\362:\271\017G\275F9\241\274\007`\203\274\230t\t\275\343\332(=\314\230-=\346Q,=z\201#<n}\n=\321Xo\274\247\255W\275\003\267>\273=\3059=\206\376\264\273\r\000>\275\2057J\274c\312 \275T6\244<zh\005=\030>r<2\206O={\200\322\274f1\305\274U\357\203<1\247\355<\263\265F\273%\247\334\2743u\027=\006`A=\324\010\275<;\362*\275p\222y\2749\'\n=\" \r\275\360\347\262<\365\377<<OY^\274^#\031\275\326\272I=@\245\266;\337yq\273I\2328\275\321\226\215\273\2155\376\274E\370\222\273\025\257\336;\361\201\"\275\341\3615=\365\321\036\275d}\031;k8\223\274T\200\202<(+.=\026O9=\204\354+=\204\313\200\274~\313*=\314\021\303\273\213\305,=\334j\237\274\365\0352\275\260\224\177<.\023\343<\006p^\275\336\331\035\275\275\356\242\273\317b{\2742\202\377;\3212C=\007_\310<br3=%-D\274Pj+\275r\240E<+\324\312\273}\303\312<q\013Y\274\022\310\004=\361\242-\275d\343Z=d\211*\275T\306\360<$\031-\2745R\222\274kU\030=\305\0144=\313\272]\275lVN=\372\225%\2753\301\035<Z\326\034\275\204g^=\276:\277\273\310\033\275\274Y=\264<\3157/<\231\000B\275\'v>\274+r\315\274\207\007\0139\276i\200<\200\213\334\274#O\376;\254@ \274\351p\372\273\313Q\"\275\252\210\033\275`\252\007\272\361\256\016=\373\035f\273\355\021\027=\277\0229=\332\002\307\274A\201\302\272\010WD\273Y\233Z\275SF\256\274\206\371\000<\331\024K=\220 E\275`\005\032\275z\3241\275\251UW=pE\241\272\0054\323\272\324b8\275\002\340\005=\007Q\017\274\200\322\213<\177O\253\274\372-Z\275\261\215J=\224{\321<\341\004\030\275\313Z\351\2744\254 \275\333\344\373<G\303\000\275\232c\245<\347\300^=\303h\337\274\376\300\003\275L\256\313<\255a\236<Q\274N=u\004D\274\034\253\021\274\372\227\371:\303$\216\274j\245p\274\324\200\031\275\017\343\304<\t\'\221\274\310\253\214<\350\317\202\274\343\323\030\275oH\264\274*6G=\337\026\242\274\272\344\352<\353\242@=\365\232\265<}\203\247;\320j\315\274~\350\342\274A*\306;K\361\371\274\215>\212<\323&\201\274.\360\207;\260\212\352<\320\253\346<QP9\275\003\316\254<.\001\320\274\323\245^\275\251i\036=\323m+<\234\334\000=\taK\274\272Q\230<\316(\031;\005~\376\274\326\354\003<\232|\334<Y\236\366</W\020\274\344\257A<Q\r=\275\371\375\207;\205\312{\272\223S\271<\235\371\311<\267\225\022=\276\337P\275\316\376\261\273z\303\254\274:\005\247\274[,\324;\272\255\030=%\326\256\274>\2118=\010\243\202\274A:,\275T\313\214<5\r\036\274[A==\202\364(\275\007\320\243\274p\201\213\273\237y\303\274 lM=\227m/\275\227  :\240V/\275W\214\322\274E\251\027=\242\014\010=\313T\026\275\331\204\276\274 \243\336;\010{\361<w\312\227\272(\352\r\275\203\315\271<;J#;\357\202\307;\243\275\213<\3757/<\202\2175\275\002I\324\274\332-%=\350\2670\274A\014%=\365m\344\274K\215*\275\377\210\002\273\257\336D=\315J\026=\006Fm<a(\271\274\023\253\000=\274\243N=5\3358\275*\3501=\366\303\004=\354\255\010\275c@\373\274s\037[=\246\271R\275\343\267U\275\352\226\250\2724\347\227<I\311M=W\342H=\t\204\276<y\202\n\273\036\351Z\275\\&L=\360Y\004</Y\020\275T\346\346:\250\267\331;^\223\345;\355w\266\274-\0329=\232\233/=\310%%\275\235!V<\212\227\234\272\335\227\236\274\006F7=\253{\"\274\330\233P\275\t2\377<\014\362\226;\227\332\344<\307\224\030\275\366u\025\275\223,\325\273F8\\=\263\376\010</\223\311\273\347B\325<o\240\225<kV\227;\366\034\024\275\031y\232;K\317(=?K\256;C+z\273\010\335O;\361\277\257<\356\206\274\274\375=q:\321<\031=E\312\273<\226\254\271\274\271l\317<\204\203U=:\272 <\205VW=qj\'= T,=\336V\230\274\324\3255<{\200\234\273\217A\004;@O1\275\236\007\006=T(\354<\2723,\275\225\213\223\273g\361\321\274z)\221<1\342d\273\367pg\274\303\276P\274\351\301\271<e\376.\275\234P\343<\3700\007=\024\233\032\275\020\370|\274AvM\2759\334.\274\271\002\000<~t\254<\200\032\213<\007\031\013<2D<=%\275\n\273\201h =;e\024\275\032\3760=\302,m<\354\031m;\004\016<\275\177$\216\273=m\375\274H\220\\\275\232a\021=\0004\033=\240\3577=yw\377<+\247\346\274:0A=\325\306\237<\266\004S\275\357u\346\274\006~\037=V{\274<!U\356:\037\343\241<m\273U\275\250\276=\275W\032\000\275\0213\313\274c;\"=\375\255\000=\034\177Y=\233\217\210\274\003\321\352\274\\\267B\275\026\'\037=S:8\275\004\301Q\274\024\302\254<\362;\213\274)\300\233\2740\025Z=\006\306K\274\301\301F<~H\021<7\n\016\275\347;\311\274\027\242Z=r\312.\275M\272^<3\353\014=\247\240\356\274\373\037\355\274\025M\206\273=\245V<P\3179=\256\244\"<\025\374K\275\277\371.=\271lF\275\213\002\231\273\224\341\006\275\370\361F=^\005O\274&6K\275#\244\026=\034\306%\275\361|!\275\244?2=\250\322\037\274\303D\272:9\201,\275\250\240\177\273\177\343u;\224]\t=<\363\352;x\351\235<\331U+=\323\333\244<\337j[<\325\223\352\274R\276<=!\241v<0p\324\274\035s\277\274\373\3562\275\207E\010\275\212mt\273\3713[\275;\265\201\274\252\225u<\276\375\324\274\365\343\205<\005K\226<\212\300\303<\355\365\000=\021[\363;\037\306\006=\204\311\225<\363L\244<\007\021\251\272\341y\316<\352\247o\273V\315c\272\362\001\030\275>\375\005=\014\3009=\222\240\210\274\361\312U\275\373\373/<\230\241\177<\213\203\210\271@\221\021=\214\252\t\275O\036\226\274(\220P=\300\270\202<B\003O=\031d\351\273\007\333\326\273\022\304G=\024\317\317<\314\241\305\274\034_\327:\230\023\311<\215\304\313\273[\300\320;UO7\274\341\275\031=Y\271\246<\013\201)=\362\207\320\273\312qI\275a\222\325:P\350\017\275+\264\370\2748\0030\274\322\035M<I\207\235\273\320\177\240\274p\214\303<D\014\212<a\370?\275\244;[\274\377\010\'=p\242\341<S-\357\274\373\010\027=\306\210\010=\274\325[<\367\tN=]<\355\272\325\037\365\274\343\375\026\273\304G\335<\300\3455\274\256\330==8<Z\267\343\017M=>cT\275\365\332I=\3209\224\274\225A\243\274\254\311)=\007:\n=#\326\371\274\033\025\333\274\034\344\033=\226\037\215<P$2=\035\221\005\275\3302\2729w\362\017=\266\005\235\273\213y\363;\263\223\017=\342\034\000\275\233j\"=r\221\264<\230\204==o\220:\275\326K\032;eW4<I\363;=\001\'d\274\211J\036\275\267)(=s\276\253\274g`\370<\224\001\206\274b\222\037\275\340\024\207:\377A\036=g\255\346\273\002nF\275\007tI=\212\304T:\006\2766\275Ln\374\274\017\244\005\275d\005\016<\223\025C\275\027\231\030\274\264\347\214\274\204Z1=\0319;<\365\177F=3Z;=V\375\231<|\270\036<\267t\010=\260A\020=\004\002X\275!0\272\274\360\213}\273\202_\342\273\267OT\274\007@0=\024\232L\275\326\336U=\316\331\212\274\025*\034=z;\372<g\326\025\275I\033\353;>\311\021=\252O\000=M\027\016=\221h\036=\\Iw\274>lQ\275\243E.;\332\177!=g\355X\275D^T\274{JC\275\020\243\022=\224\320\031\275\032p\223\274\221\304\020=\304\340\002=Q\2140\275\342\035\246;;\2005\275Cl\255\273P\377\026=r\347\312<M\357v\274\265\341\316<\032\327\337<\"z\r\273W\203U\2759\322\353<L_:\275\177\241\010=\343\357\206\2740\354\267: \202\240\273%\354\227<\017m\272\274+ P\275K\373M\275=i\230<)\021\263<x\262\022\275o\267\r=\277)m;\020\004E\275^\360$\275\227\211:\275\212\2438=K\316J\275\271+\003\275?h\331\272@\205\026=:8E\275\235\367T\275\301@p\273\340\312\221;rQ:=\276\367\301;MC3=\344SD<\270\255\361<\'\367;<\027\236\020\275]\001B\275P\205\232\274\031Q\274;Cp\377\274\206\344\'\271\240V\303\274\322\375.=\341\006T\275\013\212\240<\032\250 =\020A==\202\341\000=\256\320\337\2724\211\021\275\230S\311\274q\221\t\275\246S<\275)Z6\275z\230X=\345Z\237\2742\325\017\275?\343\306;\372\033\330<T\'\032\275\274\2615<\005\034];\323\357\026<\352\336\330<h\201\205\274\212o\220\274fo\035\274\'\320\310\274s\262.=\r\026\014=\230{#\275\003\306\364\274\340xC=\333\363&\275\373\2319\274\315\271\024=\233\002\271\274\t\336\357\274$b\000=\032\323N=f\013#\273\013C\006=H\264)\274jKJ=G\232\226\274\322`\003\274\314:>\2744 ?\275\n\201\025=C\313\000\275q\034\002=\354O\315:\230\303\331\274\277\204\336\274\\!d:\274\332`\272\344&A=\320\005J=\037\243+\274\267(\034<u\177m<\330|&\274\355\230\367<\001\324\252;\013\002\201<wY\331\274\314\004\260<\022)]\275\313\315\354\272\324\2128<r\313a\274\253\302\000<\264U\000\275zi\034=\031\007%\273\375\372M=B\001\217<\347\246\004\275Vg\014\274xN_\275\334\307\374:\315\241\224\274U@b\273<\322{<\366L\236<\245x =\037~\223\2745\206E\275\020P\377\274A\033\363;&:\342\272F\204\257\2745Y\032=x\245\305\274\235\377{<\241\310\253\274\332U\267\273\330\303\030\275HK\346<\314\370\\=\272\272U=\362\004\r\274W\3364<\211TW\275\215\002V=\217\227e<)\317\272:\234\375^\274\201\322\347\274z\343\310<uX\021\274\336\331\002\275\331\301\200\274\360\256\241<\226L\251<\251\023\026\275\024\251\000\275\016y\203<cU$=\037\'\026\275\026\370\274\274\300\3355<Yr\004=,\352Y\274\016\250\316<o\363Q\274M\014\307<_\265\t=\366p\036\275\'\372#\275;\342W=h\355)\275w\211\346<\307\243F\274-!>=\005\267\016<U\232\326\272QC\315\2740d\t\275/\260\320\273+\177\035\275\210\310 \275\207_\270\274\264\236\251\274\213Q(\275\321\266M=Z\3169\275Ep!\275\201\315\230\274\313\376\002\275\034A\020\275\260\206\351<\244\333\006\275\020A\007=Y\256\200<1h\340\273\212$]\275\211\234\213<g\230\024<\272\026\317\274\030\245\235;\255IJ\275\333\343%\274\363o\316;\322\027\'\275\323\342\363\274\235+\321<\2268\030\275\021o\016\275o\375\201\274Hd\353;\017\207\010\275=\307O<\350\2268\274\302\022\2759}\364\221<IRd\274\203o\377\274\027\344\364\274?\250(<\265\227(\275\316\r\324\274dc6;hu\252\273\304\303A=}.J=\356_~\274X\204\375\274P\301\024\271r\245<<\243\303\004=\320\000\252\274k\033\257\274,\311\303\274v\237)\275\274(\344\274\005\257\034\275\365\336\252;:\001\\\275}\361\256\274\207\020K\275-\325\030=\273 -\275\233\301\021\275T\216V<\237%\277\273p\3400\275\211O\370<\2632\201\2744!N\275\224+\020=@\342Z\275<\243\007=H\223_\274\236\357\377\271\2679\364\274\210$F<\232=\345\274\350_M\275h\374\\\275s\351\037<q%\320<\034\260!\2755\211$=P[;\275\274,\216\274\250\305\007\275\315\256\001\274\354\260\020=\241]\017=\250\344\024\275\026\367\244\273Z\227n\274z\235\013=M\223\227;i\027\227\273#\367\236\274\322U\312<Be==|\304\017<u\270\023=]\214\023\274\216/\373<\303\250\262<\006\3028<\377\001,\275T\335\023=\344|T=\357a\n<\370\007H=\005\334\364\274\024\":\275\317\230\037\272z\301\302<\234@/\275\360\204\034=\016\330\016\275\365\tT=\324\250H\275B\333&\275\236\231\r\275\345O\337<\217T.=\236\215Q=\370\013\355\274\307\272\346\273m\323\002=\304R\\=B\t\240\273\222\374A\275B\274\035\275R\003Q<N\337{;:\177%\275S`4=^)\023\275\241\215\003\275\263)\034=\010\226\033<\007\255\026=z` =T9\023\275\314\3577\275\205\367?\275\315\237\226<jiJ;2\360\262<\267\205\352<X_\031\275\205|\374\273T\222\203\274\332\310$<uI\213\274.\206$<W}\177\273 =S\275\020\323-=\031\337[\275\322\326\003\275 \266A\275\255q\025<\203PD\275\327`Z=\0325\033\274\005\355\027=\255\324\'=I\002\355<\277\200\270\274\266\3315\275W\t\234\274\277k(\2733 S\273\246:.<\351\342\025<\252\252(\2745b\025=f\240\010=Mi$\275\300\245\326<TQ\231<\305\240C\275\305\306\204\274\004v\272\274\266\267\254\274\357\241\371\274Pf\331<\273\361\234<\367\r\275<x\213\240;\247\354\225<\270\236\370\274\360\366\304;<\037x;\352\350\370\271JVx\274\363R\216<x\3448<\034\363\357\274\221\236\206;\n\3014\275]\014?\274~7+=\320\351\023\274h\326\357\274\r*\231;TP \273\341\341\005=\337\343\321<\300\034-=\2125\005\275Xnq<<\342\177;\231E\350\274\240X\336< \206\022;\314\327\301<\t$\003\274\343\347Q\275\312\367\274\274\021\375\216<\334\2669=P\235\366<?kO=\3547Z=\266\337\357<,=\365<K\357\264<\307_r\274x\334Z\275\214j\321<\255\302\320<\221\321\035=\365\017\006\275\366\226!\275\016N\353\274I\253\003=\252k-\275\326\274M<\245\371\375<+x&:\235\267\371\274\212\001\376<6\247\275\274I\211F<+\240\002:\254t\037\275\'|8\2749\303\005=\270\337\036\275\312IV\274\217\241\275\274\030X\332<\236yX=\n\304\210\274\034^\214\274<\273\246\272\330\365!=\376Y\006<\r\267U:R*>\273\303\345\276<\371\346L\275\356j\357\274,\354<=\275y\265<\230\256\264\272l\327\034=\244\033H<\215\036\267\274W\232;=\210\307\332\273rL\010\275~sV=K\225@=\rI\326\273\020n|\274IK)<(9\020\275jO\020\275m\2011=\226\257\017=\236%W=3\231,\275\211\213&\275\344\001\377\274\371\032W\275\025.B\275?\304O\275\232YB=5\216\016\275\211\013\025\275\033\252X= \234\303\274\300\267\267<j\352I=\000\003\024<=D\r\275\250\302\227\273p\357Z<\371.\333\274`aL=\377^/=\r\\\027=\352\021K\275\210\304I\2757\204\324\274\336\361\240:\324\003Q<\237\264H=\223\266)\274]\260\375\274!\204\366;\315}9\275\205\361J=\tt\234;\r\325\020\275\013lU=\321<a\274\335\t{\274\244\\\343\274F\210\r=\326\351O=i\253B<\222\2451\275\253\004\210<\307\3349<\r\362\037\275\253#\231<\371\'&;d|\010\274r\301\265\273\202Z\035\275\272\235\301\272\255?:=\263K\373;\267\343Q\275\347X\206\274\224\354=\275\302\235C=\017\027\232\274\324\035P=\"\265\027\275\342\262x<61\031=7\0053\273\317\240y<\230S\032\275\304\267\342\274\202\202O\272\031_\'\274\336\244\375\274\36091\275\311\240\373<\203\331\322<\211g\014\275\256\243I=\236\220\201\274\351g3\275d$L=\342@s\274\307`\266\274\014fR=\246}\310<\3559\210\274s\030!\275W\201\010\275\257\213S\275\253\336\017=z\334\021=\266S\215<7D\216<\0026\330\274QsK=\306\350\016=i\372\231\273\377^,=X/$=+\347\256\274(\233\r\275\256\201o\274\203\'\204\274\262Z\031\274\342\260\275\274\003^\331\273\034\032\337<\246\334\357<\241\013\265\274\346\324\005=\016)H\275\327F\336\272\267\210U\275\253\303X=c\324J\275\216P\001=\024\324)\275\315M\020=\366Y\274;\237\'$:\351\365Q=\023\320\035<RX\204\267x\344^=\253\374\n\275D5.\275`\032\350\274\353\204\264\273@^8\274\223\205\322;o\264\366<\307\016\2759 \225*\274j\3314\275\2645\220\274\203\025Z;\337`3\274\342`O=[[\\=wK\233\274\177p\020=\021\002#<\222E\030\274\254\250.=\255T\233\274$N\035\274I\004\253\274\210a\271<\001eJ\275a\256\022\275B\033K\274\010\234\243<9F\313<\002S\217\274\302\233&\2749\214[\275IQ9\274\261]\353<I@\260<n\301e;\215[\225\274\310\'4=8\264\232\273n\010\226\274\023\246\350<\274\370T\275\032\356\"\274b_\t=\265q\'=\357f\001=\331\340%=\310\023\252\274\374\344\200<8\027>=<\3746=\304#\006=\000\314\006=\317\341\310<\325\256\036\275k\2300=- v\274q\364D\274\000:\007\275\347\014>=y\345?=tz\340\274\000c\004\275\353C\223\274\233\336\355\274DH\307<p\036\214\273\021a\206\273\364G\2669\220\310D\274@\n\363;\277\236\001=\262\242\032=\261y\303\273\200\320/\274\263\233\320<\252\260\317\273\036rG=\366\241\355\274@\177\310<\006\367>\274S\327@\274\310\276\354\274\252z3=B\254\366;\337\241Y=\027\316\226<+\2109\275\022\310\363<A\2533=\260K\352\274\320W\010\275\313\261R\274i\207\355<\210KR\275d\343\017\273\273\224]\275\242}\237<%V\201<\017Y^\275\221\203k\274\007\270\032=\335Ua\274\3436\t=\250\347\332\274\303\225(\275T\024\024=\260\221\036<m\334^=l\256\360\274\214I\201;g~E\275BQ\254<U\360%=-\014%=i\216\212<`\271\354;\370\004P\274\216\252\332\273\215o\242<\0226\213\274\2063\020=\215\347\360\274\324NG\274\243\321\361<[L\036\274L\224\334\2724\371\237<\021\2560\275b\216I=\267\333\022\275\025\361#\275\304Q\245<\007\321\231\274\357\217\373\274\335\201#=4U\374<\271g\207<\207T\376<\371\014P\275\223{:\274|\177/=\366\003\013\275\362\333\372\273\013\215\331<\217\354+=y\250\013=T\370\211<p\3408=^o\214<AF\300\274\207\254\326\274\321\364\273\274\253\001\311\274Q`\223:\206\246\t;R\362\022\273\256\364P\275!\336\261\274V\370s\274I-r\274F\256<\275\001\235\210<PK\213;\260j2\275\301n\341<\337\203\321;Hz\226<\000\361\035\274\266\201!\275\024\354D<=\250\361\274)\2204\275h\230i\274\225Y\243\274\315b\337\274\260jZ\275\264\356K=\003\033\010<\"\217\215\273\261s\331<\270\317\016=\251,\221\274\277\222\005=\036\330\310;\325\0045\275\216\027\220<\244\303\321\274\031t\036\275Z\305\304\274\372>\272\274}N\266\274\307n\010\274\322\277\"<\017\2215=\031\216\253<\177\364\231\273\017x\'=z\375\014\274c\201\361<[#\200<\242\2211\275\317\265\022=\251\370\316\273\250\227L=\336\220\201\274\362n\200<\353\004\301\274\374%\034=\206\224\026=xz2\275\211\326)=P\340\207\273a\350F\273\200\254\230<QlN<\273\276==\270\254>\274\"\200\017<\202\237\033\274\246\364\030\275\002?\r<,F\365<\013\302Z=(j@\275\257\006k\274B\235\266<\247c@\275C\220w\273\237sf\274\016(\024\275\334\346\363\274#E8=\251(/=P\227\260\274B\335\032=\230 \367\274@Z\352;\200\226;=w\362\350<\016\374\r=\341\303\n\275x\324\006\275<\275\350\274@\234\010\275G\3670\275@bP=\223\236,=\204\265\022=!\345\362\274|\021\232\274\262=@=\010\257\032<\311\000\013<\354\276\\;\003i?=c\0277=\367\332\224<\373>\304;;\2562\275:\232j\274\277\'\344\274\014\242\354<\'F\364\274\261\222\314\274Si\316;tR\"\275r%9;\230\\9\275\306%R\274\270\277\375<I@2=\216\223\010=3G\033\275Q2\314;V\254W=\005\321;\275 &r\274\221**<\022\202\223<VI\344\274\226\245\353\274\207\2737\275\002C_=?\244&;\205=4=\236\225\316\274\216i\032=\347\245\006=\301\232:=\021>\227;\336\362O=X\346:=\246\037W\275t\373\364\274\313\225\363<\321\026I\275\\\373&=\357AD\274p\337e;DR\266<\226\330\343\274\235\216l\274\301\326/\274t*\t\275\363\356\013=\233k^\275`\274\272\271U\003\355\274<]\201<#\332S=\367s\221<\24093<\276t(\275\306>v\273\366\200$\274\252AW\275i !\275\257z\265\274C.\243<\364\263g\274\004\034\025\275\016\350\002\275\023\306]\275\017g\265\274\030\3729\275W\236\021=\025\354\024\275\237X\311\274\016\343F<\265\027\036\275?d\271\273\256\024\353\274\337\241\221\274e\3663\271\2324G\273\335\2577=\340\215\024= \260\230<\307\2719\275\346)\356\274VY\262\274\033\234T\275b\304\306\274\336Y\311<\247\325\036\274\3379\370<\371o\217\274@A\274\274\233\031:\275\215\033N\274o\3356=\033\017K<\305\213N\275[\314K9\246\200\336\274V9\300<\035\212d\274\200\232\350\274&\3231=P\206V\275\0000\246\274\231H@\274\213\341-\274\216,\225</k\023\273P]\314\274SNI\275\024\027(\275\032\242\026;0\250\204<\344.\215\274\2214o\274\340\316\370<\035\256\341\274\261a%\275\366\323Q\274\265\207\367\272\250\263\217\274$\366\360\274\010L\013\275\376\222\225\274\271+G\275F\360I;\2033\013\275\326\221W\274e\201\021\275\262N\371\274u\264\004=\301^K\275\2276X\274YU\023<\265\331\367\273\206\177\002\275\364\356Q\274\205sI\275h4\026=\273\263\245\274\321P\331\273\310\261\005\275\335\024D=\270\306\033;\007\344\360<\246T\022=\343\354\220\274\203J1\275\210\257\333\273\234\354\t<\342\212%;\013\270\350<\027\321\300\273?\351\354\274\305\2155\274(K>\275\031\212\215<\254\353\272\274\030\250\224\274\243\022,\275:\023 =7@2\275\020^g\273{\265\033\274 xw<\256t\237\274\024\352\210;\n\010\034=\301\241\322<i\341\r<\037\"+\275\372\026o<i\242\305<\326\005\340<` S\275\310\214\005=\010-\001\275\3435\321\274\335\324\263;\210\343T\275{\301p\274\017\220\266\273\215\022%\275\336\303\\\275T]N\275\236<\240:UB\r=\265`\315\274\010\030O\275u\033\227<b\277\007=\210%3=\367:\320\274p\340$\275n0/\275r\370\326\274\277\242[=\322\332X=\016}\003\275\336\315\321<\213l\364;\220\2642<+\333\037=\312D\003\275#\373A\275\014H\320\274ht\r\274\320?\336\274\323\237\305\274A\013\314\272`\3642\274\374\226D\275s\324\335\274`\344\347\273<\362\352\2744\223;\275o\363\022\274\233o\344\274\304\330\323<\251\331\034=\314\311\030\275\364\242\007=t\330#<\032\202S<\336\367\246\274r\210\275;\230UB=\020(\245\274\310C\326:Q0\006<\243:\256\274R\006O\275\2363\216\274\030\226c\274\221+7\275\300\374\363\274E\035\343\274\202\207\022=?2L\275\003\331\n<\027\235C= *\024\275j+n\274\367\020Y\275R\370e\274-\350\\<v\257+\274\371\257\321\274\301\035\025\274\356_\206\274e%\245;\366\023\027<\257c\'\275\313A\255<u\355\025;\244z\252\273\235\n\313<\357\252J\275\240\241\227\274h\307A;\247\232M;\252\216\321\272*\260\346<i\035~\274\364\221\266<53\200<\334\236_\274\326\034\036\275Q\313Z\274\r\370?\275\240\r\t\274\236f\365\273\335[\013<=\357\006\274\325\r\207<py==\360\375\337\273 \223\274<X\315V\275\032\'\017=2 \n=\373.\360\274\217\277U=\307\236\\\275\213\\\272\274F,N\275?\320,=(9N=E\253\037=\325C\033\275-(\207:`\235\004=\236c\033=\024{\274\274hop<\202&C<\362\3717\275d\302\036\275\n\013E\275\324\205\017=4^6=y\376X=\271\232I=\271s\256\272\337\256\374<\321\233\247\274\\,[\275\365\266+<\237\277\035\275\237\272\026=\"!>=\002\332\006\2757:!\275M\232 =+\355.=\245X\207\273y\365A=\025P\244\274n\341\231<w\346\223\274%\341\241\274\324\344\220<v_0=\343\213\200\274m\316\352<Q3\252\2747\362G\275\343\230\210;\362;!=aL\260\274:\305\235<\360?k<\343\r\202<c6\024<D\366\244\270;)\356\273 \260\230<\302ZP=\'1\260\274\221\270Q\275C\307Q=\306r\267<7Z];\250\275\312<\305>\316\274#\0219\275!\264O<\024\321R\275)\355\355\274N\305\214<l\2746\2751)\310\274\232\302\263\274\016\007\204\274\271\320\311<7{\257\274\351\206\325\274\362\323\202\274H??\275cS/\274pd\264\272\307D4=O\245\352\274\002\314\357<_\321\207\274j\024P=\360\332\315\274$\340\330<;\212\r\275\3649\034=_\362\352\274\225\264\306\274\243\366\"<\366F\260\274\230\320Z=\214\251\3119}4V<\212\246O;\032\301\350<\246\212\251\273z\227,=8X\\\275\344\246\023\275\315X\351\272\\[o<Y\2452=\300\350\207;\002r^\275\203\327O=\215\267I=\331\273D=\344\341(\275\216\257\363\274mE<\274A\n\035=l\361\000={\375U\275\t\306\355\274\267S6=\204\323&<o\254\006=\342?\204\273\324C\005\275\307\356v<D\345\206<\256V\277\274T\363\274;\205\240\';C\006\311<n+j<0\030\264\274\356\303\023\275U\370\035\275\201\013J<?\314\371:\256~[=\"G\377\274\006\332\301;\003\352.=\363\307q<h\332O\275)z\311<\016\300\266<\376\234\364\274\325]\033<\344\345{\273\330\013A\275\032\007\275;Q\246\035\275Q\307a\274Z\200r\274\202\034V=\203J\331\273\374\201O=\360EU\275u4\206\274\r~U\275\337\021\035=\261}\237\273\266+M=(\254L\274\375\255\025=\222\224\215\274\240\343#;\360\221\250<\t\031f\274\006\006\310\274w\350~<\326\232Q=\225\002\356\274\252\006S<\363M\250\273i!\020\274\3421Y;\322\004\r<U\274\024\274?L\014;{6\246\274\257\347\323\274\331\000\231\2743\214\243<\376\030\357\273\363/\001\275\311J\016\275\267h\036<\232`C=\225\200\337\273n\262\271\274\300\343L\275Wm\331\274\276\243\367\274\005\3152=\315`\3239\217k\370:\203\332\031=\326k\261<\362uw\271L\355:\275\300\200\014=e\010\336\273\377_X\275\336\302\317\274\204{0\2740\177\030=\313c\321<\246\2166=\234)\020\275E\251\321<\230\304W\275\007\255\345<\373u\324<\261\265\315\274\262\260\322\274\337\345K<1\316(=\376\217\026<H\020\030\274\237\000\256\274\371Ly<B\016\014\275\257\031O=\253\257\004=\253&#=m6\025=&\177\013=jYW\275q\021\215<~\220\240:\201\355\274<\367g\324\274\372N\310<i\325X\274\372\345s\274[\241\250\274&\240\"=U\260X=\272L\325<\030lQ\273\220\364\365<n\202[=\263K\301;\032v\206\272\316xZ\275J\035\363<\253\006\005=\301)\265\274Q|0\275\001\327\010\273ZD;\275\025^\367<\023\034\022=\254:I;\366\235\233;#2\013=p\335I\274\337\'#\275_\217Y\274T\014\331<-\235\010=\300\377\000=\005\032\236;/\227A\275\226\000H\275P4\206<\031\247\004\275h\235J=H\3232=\354$N\274|\300\374<\330_\237<\267\000n<\334\343\223<\354\277\352<\211\320E\272kV\256:\272r6\275UO\014\275\216]X\275\n\005N=\014\006\230\272\237\344\"\275=a;=\206E(\275\002\361)\275\034Q\255\274\314R\337<>2\020\275o\031\030\275\320\231!\275\000\354\242<\312:\\\275\350\3136=\037\2361\275\367\347\214<\3214\"\275\374l\363<$\026^=B@G=\211\235\221\272\304\370G=\232\345\267\274\327\221\203;!Z\351<\252\234@=\212O\263<\250\020*\275\326\023%=\222Z\r;\177\300\312<e#\'\275\363ub<B%\374<\237D+=9\3724\275\276p\241<:L\310;\207d\203<\262\331\3449\214\243V\275\n^r< \257M\275\231\225=\273\311\324N=\315\270G=6\024\364\274+\2101=yB \275V\347\033<\2560\215\274.\3628\2745\200@\275\331\244S=\341\307\215\274NO\247\274?\n\024=A\374\235\274\333\203\002;\234l!\275\303$\353\274\246\375\\\275\025\336.=m\272\364<\337\253\322<\r\365\361\272v\275\340\271\023;$\275u\354\244\274\337\016\306\274]hV=;Y\322;\250\2514\275N\265\276\273N\375L=\242J\037<x\256\307;CR\026=\231aE\275\260\036\032\274\226\232@\275\000\206L\275\342/\251<\025\364&=.\333\210<\3721t<z\244E\275\265\314Y\275\237\262\363<\367\262\027=A}\307<\'\251\351<\270\354Z\275\016.\321<\346g\237\274\320?\246\274T\276+\275\337\001p<\030,\215;I\243\350<\242|\222<\276\214\332<J5]<\201g\024\275\206\261\363\274}\241\347;\207A1=\022\372\021=\342\230\274<\262\000\222\274\r\331\326\272\233K\334\271X\334+=\274\216\201</L\007<\232\2509\275\tu\017=\367\\\264\274X\2374\275pTT\275%\261\032=(\236\271;\001h\030=jZH\2758Y\"=\366\032\350\274\371f\024\275\304?\205\274&\"\260<\276\000\245\274fo+=\007\255.\275Q\022\217\274@)\021=?J<\275e\013\367\274\353;T=\004\010!\275j\262%\275\360\332C;\'5\004\274\013\377N\275\305\002\000\275\326aI=\211dO=\235\242\021\275\013H:\275d\302\363\274\031\017\261\274\250Uy<P9\222<R\203o\273c\366\265;DI\311\272\240E\013\275.\261\007\275J\3466\275\231\362\242<H\333\032:BS\221<B{%=\323\244\306:G\303D\275f\215Q\275\334\\l\274\031\207\177<Q\2110=2\013C;\024\303\270;\267\317\007\275d\255\356<\204\002\332;J\265*=\014\233\311;0\306Z=2\301w\274\347v\000=m\374\r\275\361\263\362\273m\233\206\274~l/\275YC\337\274\377\032\027<w\'\013=\303\213K=\211{3\2743\270L\275\207\376::\306\221\267<}\230,<\317\224\034=%s&\275/\277#<0\274\032=\313q\031<#u\361\273\244B\030\275\351B&\275\317O+\275\205\311\304;\356\200\331<>\357K\274\224q\034=\341}\017=\335\016`\274\242\035\206\274\205\224\036=\315\251W\275v\320?=\214\325+<a\256+<GD\246\274!\356\007\275\304{\263\274\344\373Z=g\2669=,\2658\273\241\371K=$\274\273;)s2=\257\375C=\373\224\003=\224\377\002\2727\201D=T}j\273Wq\231;\237\316\036\275\'.j\274^r\n\275a\214\356;\034\251\300\2748\017\034\272r\347\025=\240\205\376<bQ9\275\331V1\275_k\021=G\256)\275ij\036=\2514_<\312\323\206\273\337G7=h\344c\273\022\254\027=\356\225A=\217\030\320\274\350\314\340\274\247\357\313\273\341\241\031=D\374n<]\026`\274\010:\006<\027H*=\352\032S\275\032C6\274\007\363_\267!\035\014=\325\3205=A\261L=\271I0\273\337\013U\274o\352\272\273.>J<j0\330<s\255\234\274%/^\275]d!\275\323u*=Xj\022=\250l\003\275\363\330\221\273\3501F=\2047!\275y\275:<\202\025\030<)F\007=.\2236=3\2251\275\353d\356\274\027p\323\273\276\212\303<\r\"\004<P\261n\273%0&\274\337UY=`\305\354\273\357\220\001=\021\003Z=Z\026I=]\r[\275Q\2069\275\261<r;8\340\2508\216\347Z=X\215\014=\307\232\\\275\200\203\235<K\353\002=\237C\353<\256\330\020\275\020\325\023\274\205\031Z=\242\236\266\274\376\316(\275\326\271\001\275\276\361%\275\323\025\027\273\242\326\031=@\213L\271\202\336,\275\264s\227<v\340 =\356\327\003\275|9g;\240\003\212\274\245\0133=\311\031\213<\2613\333\274:\274M\275\304\032\277<p\322\'\274\206\252?=\0214\026\275[\201H\275\302\372\032\275p\305\344\274\377\374\315\273`8\016=$\203D=\307<\226<\315,\001=\301M\031\275` m\273\307\250\016\275\234\247\246\273\225\252\226\274\377\276\377\274\357oB=\210\247<=\203\223\313\274A\224\201\273\344\3128=\177%\357<?-\257\274\365\017\374\274\317C\244\274/>\356\273\305\\\365<I\3509\275\003/\2029{\356\235\272\203A\003\275t\260\230\274\006!\360:T\303R\275}:\254<\211*\217<\220^\342\272\252\265\206\274\374\027\364<\232-\372\274d\306==\342=\247\274\331\255\243<\237#\r<Y\234\203\274&\330\312\274%DU\275\362\324P\274\016P\227<|\370\335\274\247e]\275\341\207\375<\r\351\\\275\365>5=\256gA\275\261\023\034=\370$\t\275\336\275\006<\352\016\321;\203p\260<\376\2478;m\250\250\274\227\355:\275\306\027\010\275\270p\216\274v\234\337;\274\t\241<\332\214>\275JQ[\275\ra[\275\346\374%\273\246LC\272\316\335E\2750\224\325;\270\235\352\274]\214\267<\274\263\351<\272!\004\275\251\307\340\274:fX=\237p\225<\310\030.\275<\036\300<#\321\317<$\220\237\271\350\312\037\275\214#N=m\225\006\275q,h<\245\271\006;\'\266\244<\230V.<Zy\005\275*b\341<3:\374\274\211\330\033\275\333(\316<\006\273/\275\356\212V=\256\t\215\274\356g\253\274\212\272\023<h\235\017=N\345\360<\207*2<~D\317\274\337\210:=#\357\n=\006\325H\275\272\267M=\377\272\247;8f5;r\004\014<\372\377\362\274\\\345\027\275\002\371\250\274\236\365=\273\251\231\223\274\365\026Z\275\316!\017\275\352\322*\273\034\337|\274\307\032O\275\323\2436\275t\347&\275\017]\374<\247\3638\274\325\001\2539\017\202\312\273\374\341q<\363\001\201\274\337{\304\273\252LZ\275\353\027\007=`\322\2568\230\030\247\274\300|\364\274\201\276/=t@^\275C\346\224\274\241/\344<\263>&\274\361\356\326\274I\301\034<G\305\360<\227\232X\275=\305\004\275\013\002\003\275\246\235\243;\266\270H\275\346\353W\275\335\016\341;1/\361\274\030\226W\275p\206\022<:\032\310<\373q\336<\313\373\323\271w\237\251<\257\216W=\356\263\275\274Wy\337<\203\215+\275\242\253\212<\314\377K=\366\nZ=DX\017\272\373\340\022\275\354)i<\374\242\336<e\206J=E\177\310<\327\343\254;\247\021%\272\236+\205\274An\210\2742\n\210\274\217\351\036=\367\233X\275]M1\2752\224!=0\246\374<\376\215\021=/\320\216\274g\254+\273\265EV\275\336\003\322\274\016\204\256\274Tl\326<*]\255\274\223/\034\275\005\220\t\275\344v=\275v\230\364<\362\267%\274\025\270\001=O\342\024=`I\367\274FKG={aH\275\211\217\271\274\222\331\'=&\306^\275\235\t3=3.@<\377:D=\033?\240<\247A\372\274\330E\346\274\357\355x<\"\215(\275}\234<=\033\323\007=\270\036A=`\\\375\272\355\251G\275ZZ\"=|\014\246\274\322\3459=\"7W=\363\3517\275}\306\222<\374\207\t\274\201Q*\274p\217\014=K?\021\2747\243(=mn\364<\3664Q=\211\2654\275n\242B\275K7\346;d\"M\275g\346\254<_\t\016\275\026\202\356\274\350\340\024\275\304\351\204;)QC=[\305S\274\t\316u\274\320\202,\275\213\331X\273\272F\207\274\335\276b\274j\227G\275\353NT\275a\026*\273+h\002\275\314\370\254\274\332\350\242\274\355\033\304<\007s\035=\247l\355\273:\245r\274Rs\225;\'\324g\2730/P\275\320\266\000=e\302E=/Zf\274\223\314\235\270\261m@\2750b\224\274\373\206J\275\221Y\014\275\322\311\233<\201SY\275s\0174\275(\260T=\\m]=\262)\347\273\241I\020\275\227\3757\275\247\255\034=\320s\001<CCw<\034\3164\275/\362J\275\337\034G==5\330;\277\377\332\274\264\247-\272(\nZ=D\212H\272B\005C\274~\377K\275\231\340\240<\363\306.=\357?(\275y\327\'\275\355\335\017\275\024\203\263\273\360\351\265<Y\336\002=\357\330\026\275QV@=E@E\2754]\265<6S\337\274[\337=\275\220\236\034=\020ZN\274\327\246\"\275~\235\306\274\237\234#\275\340\337A\274*\341\243<a\352\010\275\013\016\007=q\376M=\300v\000\275\307rX=\221\335\221\272{`/\274\3250\360\274Gc/\274\200F^\275\230\313W=\251\332\367<P:\'=bX\032=a~\362\274b\t\256<\020\277\373\274\324\037>=\252\251\t\275*Wv\274\'\024?=N\246\350\274\261\025 \2759j\037\274b%\205:\306\'\205\274\363OE=\330\371\n\275\013\021\007\275$Y6\275T\325\260<h6J=.\344\204\274r\245\022\275\272RH\275y\003\224<\307\250\034\273\221\030\031=i\354n<\033\004H=k\252A\275\2775\324;7G\350<G\0103\275\364+^=D\266\345<3\222&\275E8:=\264\2431\275\311\233K\274\341\r\360\272m\3141\275\"\345\r=\315\207\034=\213H\036=\377\3241\275\335\006\036\275\316\035P\275\036\357K=O\316\023\275\3465\340\273\nu5=S\326Z\273y\360a<g\324\177:C\030X<\233\t\375\273+~\031=\013\301\313<b\342\357:\375\361$\275o\334[\274\374MN\275\342O\001=\272\236\362\274\344\272\301<d\n\247\2747w\003<q!\017\274\334\333\223\274B$\312\273\032\306\323<4\310\005\275M]n\274\365\016|\274\373\324\"=\235v\"=\345\312\317\273\323\010\331;\032\256\036<\226\205\016\275qk\271\274x\234\306<2\364\020<W6\036<\177G\033\275\321\341\\\275Nv/\275\324\030&\275/F5=\223\236l;p\311\014=9\342\352<\352\206%=u\273\n<L\354\035<\231\031\333<\230\300J=e\033C\275CD\031\275\242\233H\274\212i^\275\353sd<d\277\311<\255\273\031<F\271D=,\313\261<#\302\025\274\206|\361\274\366\2439=\216\002w\273\332gB\275\265\377\363<\221_\001=aN9\275>o\'\274>\024W\275A\320\201\274\376f\r\274\356\206P\275\346\345]=\273\007\264<\263\t\275<u\316/=\003\033Q\272\202\020!=\241\033+=b\013\311<8\337\362\274-\217\323<9\370#\274\225\227A=\333A\217<.=x\274\223Y\334\274\3641\200;\375O+\275T3F=\330\301*<\357\344\027\275\233\261\t\274u\332\300\274k\321[=&q\302\274O0M\274c\202[\275=)\006\275\222\334$<\035\016\006\275\217w8=:<2\275\316\251\304<\031\250<=[H\033=\255\306\026\275aGt<\350t\240;\347\350C\275T\270\006<=\327\036\275\356\247\277\274\377\377\217\274\016\3055\275\004\312k\273f 1\275\277#\036=5\221\310<\245@\211<\233\r\274<!\0042\274\261\274\004\275\024\245=\275\331)A=\225p\334<{a\037=\002\270\362;\3620G\274kk\006=\025\226j\273\215]\021\2754\260Y=)\335J<*T[=G\013\357\274t3\306\274\315$S\275\360\031^=p\325\030\274\000+\313;`\251\316<VJ\354<\273w8\275c.!<\355\376\243\273\251\214\371<\342i\024\275\016hS\274r\243E=\021h\303<Eq\242:\366\276\251\274A%\240<\263:=<\222\215\026\275\376\250\333<rf\r\275\256v\353<\307Y\007\2740\252\217\274:=(\275\350\031\017\275\003\235\"\275\010!\217<Q\227(=\373\n\203;\245B\330<\276\371\031\275\2639:=\244p\374\273\235\377\362<\\\200\025=\303\227\035<T:I=\020\373\006<\017\014\3129<\nX\274\026\266T<}\244)<\247F3=l\307.\275\324\326\'=\304\000\243<\302\005<=\016a\207<j\322=<\335\215Z=\376A\203<E\202\371\274)\002\270<\0353\266;\331[\261<\241\207 =\325\216\220\274\317\252$\275\005Y\r=\341\370\307\273S\023T<}5F=\223\342\372\274\362\345G=fa#=\3317\262\274\n\rI\271^\033\323\274}\262(=\006\376\372\274S\023L\275\010\2769\275\214\030X=N\275\226\274\241\233\031\274Nl\335\274F\300\016\275h\346*\2753\026[=d\241N\273\305\256@<I\\Z=+\0161=v=\t\274\370\373J\274\331\217W\275H\215\315<$\262\364\273\216\301\245\274\334n/\275\213(O\275d\313\265\274n\n*\275\233W\300<\230\251\362;\354\334w\274Y\3609=:,@\275\364\354W\275\354\357&\274\351W\306\271\305H\257<\253\223\253\274_\3066\275K\3661\2757\033%=\214c\253\274\277u\335\273\273\031\334\2741\006\025\275A6\352<\252\313\320\274\220DI=\007\210&=[\316\031=n\"\025\275\377e\r=37M\275`\313\270;\257\263\324\274\343\004\300<\027Y\r\274\n\246Q\274}RP=\301\202\303<\335\3645<\354\031-=\271\353\005=@J\223\274ch8=>\273\017\275\362\312W\275|W\351\274\335\221\316<\346\275:\275\341\236I<\252\016\034\275\032\313.<2W!\273\214\006\276<rW2<|k\'\275\026\222\017\274\334\301U\275j\340-=\344KP=\336Y\030=\247\331\307<\333l\271\274n\251\221<\237<9=Lu^\275\354:&\275\324\362I\275JF\t\273b\034==\257}L\273\352A\037\274\333l\234\274\234\230\265\273\327TV={1\276<n\335\006\275\326TD\275\271\314^=\r\':=+n\317<\317\233\005= \376<\275\350_\023=\026\252\247\274\n\214\004\274\367>\326\274\250\212\272<\366\246\315\274e\037\206<I\235 =\376\364[\273\0311\341\274Y\270\234\273d\324!\275`\017\002\275\320\364J\275vU>=\222dM\2751\274\276\274Lon;\266\2656<q\364\362\274\273V(=n\341#\275\242\240\032\2757%\201\274\371\245B=\221KF\274\016-:=\242\277;\275|U\177;\207\r\002=\234\260P=\037\325S\275=^\215<\362T\014=\327\324?\275-\377\231\274\253e\213<2>\366<\n\232\021\275_\353\t=(e\030<UA\374\274\2308J;\035\370\241<!\314\033\275\300\2109\274\177\341\321<\224\346\013\274\013B\014\275\231\2376\275-{\232<\320E\215\274\025&\223<\221\2177=\3701\215\274\2620\207\274\243\215T=L\217\231<\2041\021\275&\261\020<\351#\260\274Sd\260<\361\235M\275\005\202x\274\325\2243=4b\250\274y\343\314;\331\325\037\275\277v\t=\232@\360\273\374\354\006\275\005\255\365\274u\230r\274\233\\\327\273+\327\016\275\303\345\337<\214\033\037\275\2629%\275\233l\025\275\333\033{\274\307\205\201<\342\242/\274\037\274\276<\177G?\275\t\024T=\246H\3279E\255?=\2778\207<\343\t \275\256\366\264\273\251\251\352\274 )O=y3\007\275\200VU\275\364\272p<\335\0302\275\350\376\031<\007\272\213\2732\013\311<T\374\353<\005B\017\275\037E\361<+M(<_\314\021\2758\242\356;\006b9\274z6I\275\363|\212<Z\020\315\2712\336a\273\254\374+\275\005\251\275<\013\000\312<\352\361X\275\310E\223<\342\034Z\275{\235\276<$Q\n=\360\"5=\254}N\274?0Z\275\233\005\336<+\317\\=\177n\202\273BR#\273\330\014\227\273\330\261\357<\355^!=\245\002\256\274u>\324<\231k\375\274.>\020=\255r-\275\251\2334\275\264\253&\275\202\347\260<-\302\337<\204\240^\275mMD<\005\302\334\270\017\0215\275\377\342\236\274\202\267\003\275\207\236\010\275\321\363\237<a\201\351<\341\266@\275:h9=\351\363\350<^\030E\275\017(\353\273HL~<\314\301\266\273\256\232\020=\027n\363<{g\037=\327\321\201\273\344l\016\275/@\013\275\360yW\275\371<\032\273\233\307\003\275\261XA\275\311[\271\274=\0175\275}K_\275\335\267\031\274@tf\274\371\253\246\273\366\036E\275\024\203\020\275\226r\006=\002\244\261<6\306M\275\t\372\341\274Z\253a;s\316\371\274\373\005\364<v\251\266<2\014 =\3370K\275\243\264\376\274\302g0\275\000*H=\326t\\=;M\320\274\273C\345<d\026\020=\272\2227\275\2642\324\273\222\353\007<\242}\020=\340C\337\274\274\353\301\273\020y\177\274\274h%\275\276\340Z\275\266\376F\275\356\341*\274\237g\370\2744x]\2757\353\336;\240\365;\275G\333!=a\237@=9MY=\222(\235<\335\262o\273Z3\246<\250\313\035\275\023\306\250\274\001(\331\274\272\200\310<n\025\210<<au\272\274\241J=\032\000\316<\247s\360;\222\312\251<\257u\371\273\270[,\275\376\331%\275\235J\351\2734\223\327<\277D~<EB\247;x\202V=\320b=\275\3540\222;9\340\263<\030\026Y=\323=\013=\r\'\273\2743\276\266\2746\222\331;\014a\357<`\267\177\274\256\310\230\274+\301\356\273\377\204\r=P\201W\275H\375\000\275\206\345\020=[rF\273\353\265\235;\201\313\276\274\336\021Z\275\002\231i\274\205\373\216\274v\352\346:\344\n\305\273\273v\307:?\3636\274o\261\036<\261\272Y<\023\232\326\274\222\363\344\270\2243\357\273\330[\321\274\t\346X\275\364K4=2\264G=\033\305\032\275b\t\375\273%4X\275\233\3342=\203\304\006\275t\224;\275\2014\020=\234\274B:\325\335\341<\276\221\312\274\217\372U\275,\237W=\375\346K\275\360_\t:\335\0166=\342G\351\273\316\275\277\274J\257\001\2754\277(\275\354\274:=\277\240-\274\253\270\264\274\364\335\037:r3\007=)\034>=\312d\026=\304R\310\274](A=\323n7\275\267\223\235\2748D\020=\363\t;=o\220\363\273}\301\354\274F\220\250;rR\n=\311iN\275\362\214)\275\210L\246\274\\\345u\273\205\273\010\274<l\354\274$\362\035\275\363\303\230\274\355\223R=\240]\375\274#\335G\275\010\014\n=\303$$\275\037\334\031=\221\231\020\275\001t\372\274\373\3430\275\315\350)\275\340\200.<urO\275v)\3079Y\342\210\274\245)\341\274\377\004%\273\333\335!=\220\221\000=\320\247\0059!\323\352<\240\360&<\317@\031\274\310\353*\275AcF\275\246xm<<\020\312<C&\270\267-\251\013\275\372r$=\225\"\035\274\272_:\275R:\244<\252\211@\275\3216W=\363\330\317\273ov(\275\314\346\375\274\027\264<\275\321i\373\274d;7\274\217\363\010\275N\331\034=\222j\241<W\332S=\222uJ<\3251)=r\330\271<\334\304q;Z+\352\273C\200\251<\331\252]=%\3403\275\\\177\265<.6|<\344\321\335\274Q\317\265;\367\2519\275\'^\357<\271?\262<:K\371<\320\254/:SzN=\337\247 =\345{-\275\263\004\317<R\022 \273V\322:=C4\023\275\362\007b;\201\273\205<\225\n\306\274\313\310\204<\204\336\023\275R<\241\274AP\377<$,/\275\272\023\202<\025\250\033=M\023\216\273\rO\360\274M\307\201\272O\314)\275e\227\237<\2579L\275\242\324*=\355\3671\275+\"H\275\376\325\n=3\265\025<\024~\022=\'\005J<\250\237T=Lo\311<\261\014\272\274\251\336@=W&\224<xd\314\274F\002\270<\204\"\366\274\036MX\275\226p\336\274\211\210\341\274\314.\023<\024C^\275\241\003\\\275\212x;=\003\244)\274\265\025&=\215\020\253\2740V>=\217 \344<\022x\024\274\335\"\347\273M\033\276<\354\257\352<\321\272\"<l\241\224\274\275#\016\275\302\205V\275EM\017=E(\304<\032|4=\252\033&\275\233\027\036<\377\370\315;\367\345+\275\236\363\261<\310\007O\274\324\3329\275\231\354\200\273\232I\255<\325\360\030=lDV\275\036\254\232<\250c\306<\230\035\t\275r\356 \275\236}?<u\200==\314\305\014=\021#P=\020\327\201\273\321\003\354\274\003~*\275\267o\324;\372\343\321\274Q\317!<\360=\317\274w]r\270\202*_\275\r\352\217<:\364U=\2348\246\273\267\303c\274\010^U\275\201\2324<\203W\317\274\260\232\370\272\252m\225\273\026\332\t\274\351\007L\275\230\227%=\352\363\035\275]\314\300\274\212A\030<\004\255T<\350\'\212;\000W\032<C\034\024\274\347r\344<\203x\323\274\235\341\237<\324-4\274\007\026?=\235\036B<\235\236\001=y\336 =vK\231<\261YE\274@;\r\275\321\312\330\274\250\364\272\273\237\023\245\274\036\371\233\274a\210\245\274H<\226\274_c\351\274\002\274\377\274\333\230\t\274m\366\346<@@\347\274\376\t\344;4\021\004\275W\322\303\274G1\231\274\366:\027\275=\262\217<\2417M=\246\002\212<\266\262\014=\3676.=\035\350\215\274\262Q+;\341\317F\275\223\360\010=\004\277\205<\313]\263\274h\014\233<\372\320\264<w\353\373<~\371\362:\357\031\350\274\370\333\247<\023\310`\272-\221\\=\343\266D\275\3578==\014Y\325\274\227\275\271\274\335*p\274\036R\330:Y\014I=dU\021\275IC\216\274\243A\010=\354\021\007\275\263\324\032=-/7\273\343#C=\021\352\007=$\364\020=\327\223\021<f?8=x_U\275x\007\224\274\221\322\326<PR\030\275\220(@=\257\372)=a}+\275\263S\";(:\036=\nF?=\0016s<\245\211@\275\232Sg\274\023\342\033\275\222\017\336<?:\313<\357\342=\275\2631\332\273\003\322\373\273\314i\215<\330\240\344<B\331F<]\210\207\274\014\215\014=XV0=so\021=\273\235\302;\372\323\265<\364\231B<\362\250\310<\311[\267\274o2\373\274jT\234<\'\314P<o\275\344\273\223R\226\274\200\025\277\274\033\274]\275\323\354\246<u\0108\275m=U;\244;}<\2600/\275Vt\037\275 t/\275\267\031\036=\245\201\024<\203t\264\274z(\007\274\261\373?\275C\375A=\200sA\275N4\370:\346<\310\274\177]5\274\264\017&=\032r>\275^\276\242\274\231\033\310\274/\035\023\275jp\340\273\231,O=\201\032\005=k\003\233\274\317WZ<)\243&=\177\253\'\274\005RJ=;\316C<\353\265\234\274;\200d<R\263G\275\204O\273<\302nK=\363\317G\275o\316\345<\3053H=y\335\224<~\365\010\275\240\024P\274\342\2515\275\020\r\022=Q]\005\275\371\261?\273\365)3=m\330\320<UO\374\274\370\243\323\274\033s\265;W\223\311;v{\303\274\000\037+=\342B\230:z\330,\2734\275\003=\353\275:\275\276</<\365\2037\275\367\347\347\273x\0130\275\024x>\274Hh\244;\017\230Q=\374\005!\275r\263O\275\036,\'\275|%\005\275\203,\001\275\263Qr<\377\272><be\'\275Y\262[=\\\202\331\274\016\007b<\305?\271\274+.D=\3645\327<\362#Y=\207&\336\274\3330\"=#\0367\275\017\213d\274\260>6\273F\365O\275N\310\036=M#\232<\276X \275\013/F\275\204\300\233\274\344\262\007\275C\241=\275\324\317K\275\320\004\224<e\273\010\275\336[r;\320\373\203\272u\022N\274w\373\326<U\305\230;>\311\277<n\263\002=\325\232(=\001y\307<\263&Z\275\244\017\313\272\276\2036<\273\334\347\274\232\270\324\273`\213,=\031\017I\275x\234><\002Ug<|k7\275\366\276\367\273~\306\020\275^\003\'\275n\006\232<\331Yz\273B\022\025=\213\325\367\274\212\004\250\274U\3750=\3070?\275j\026\010\274\344\306R\275\210Z+=[\212\035=)\356\341\274\331\207\271;S\023\000\275g\365L=\372L\306\273\345~\030\275+\361\035\274\242x\376<]\200Q=\315\365_\272\363\272e\273*\3265=\304)\352\274\'\016S=,L\372\273\264>\256\274~k\250<5\030\220<\010\3529\275_\204==\241\350-\274@\013-\274\302.\\<\266\033O\274\206\243\022\275\025iP\275\212h\034=VsQ=\277b\354;G\313\247\274\232;\325\273J\363\r<\271\250\212\274\000\226p\274CP\363\274\345\215\032\275\023\371\003\275U_l<\353\033\320<\0012\356\274\337\021\221;s\261\\<\202;%=\221\236\313<L\340\276\273\256\350g<L\362\343;\260\244 \274 \314\262\274:C\010=Q\211\330<S\030\033\275ijt<\014U1\275\360B2\275=\301\226<<;\345\274 \330.<\211\351\244<F\240\336:r\351S<\\\362\337<\004\375H=\000\033\036<\301\220|<\320A\261<S\366\371;\271d\037\275%\327\2159\223x\013<\027\241V\275\036\335\027\274\217\254\215<\214\024\220<R\356\003=\\n;\275mJO\275\010\247\013\275\322\037H=\323|\273<!\026H=[=\223\274\346j\274\274H\021E=\327\306\333<\276XK\275\300\274Q=\254\3101=\341\262.=\245\242\351\274gh<\274\331C`\274lH\232\273\213d\272\274\027\207\200:\267UM<T\241Y\275\321\201\314<2=*=<&\022\275\216\254\226;\355*8\274\203\327^\275\255\023\346;\027\247+\275\266r\310\274\364h0\274f\355h<m\234)=\263\274\033\274\275\242!<\024z\006=V\001U\275\254\202\362\274BK\207<9\232\227\274\200\'/\274\257:\036=A-3\275\033N\224\274V\257\235<i\211\243<\000\025\026\274^4<<\204\007\035=6\273\321\274\020\242\353\274}c\350\274\370\330X=&\226l<\261\252\273\274\r?\362\274\221z\031<\266\200\034\275\226\342\n=c\220U<\377 1\275\255\357G=b[^\272\267\0221\275\301\310\313<\\\022M=\202`%<\227\tR\275\343\272K=\010R\021\272F\245\334\274\204u\336\274N\005\016=\001\232\302\274\026[I;s\373(\275\375\3022=\n\330;=\306\272]\274\236\035\322:\211\371\014\275\263\260\004\275\374\033Y\274\306\000\311\274V]/\275\314gS=\360\201$\273\3374\360<\344B \275\016\0171=\343K&\275\227+\225<\2449V=\000|\204<\\\216\"\275\241\262O<\264\321\374\274\263\314\310<\024\243$=\263\273\016\275\r1\365\2738\227\"\275\356\2076\275\215=\030\275\010cX\275\274NI=\343\341T\274\240\324\341\274\\\213\376<\310\022\371<\001\"\201\272\304r[\273\266,\240\274\261\240\010=.HF=\242\217\372\274\037\270]<C\027R=\3455\016=\026\325Z=\266\220\233\274F\257\353<E\037%\275+s\215\272\\\177\\:\220\332\254<X\r\312\274\014\333\n\274\261\n\'\275\366\330\031\275\020\233\234\273\212+7\275/&\002=\220\313%=&6\366<\001\302\007=\273\301\264:\031I\022=\035O\031\275\202\034\366;\234\330{\274\202\362\310<\361\255\230:\377\242&\275T\032\347\274\340@\037\274\275G\001\274\341,\322<\217\260\353\274d\323m\273\231\304\360\274\250dT\275\250p\251\273\022\0236=\3311W=\325\327&=\250iG\273\342D==\272s\003;\243\261\177\274\002\316\364<\211%;\275Z\"\207;\215@P\275\263\013O\275.\262\210<@\240[=*\340\273\273\307\232\227;\202*\023=\245\270E<\303l<=\306\372\351\274\344\264%\273r\263N\274d\201l\274H\0230\275\260\3150= \371\'\274\033\r\030\274\021\223F\275r\321\243<\23230=\201r\025\275\236\025\010\274\365\267\244\274\216f\344\274/\312\227;\020@\377\274Q\352B\275\303\223\333\274\230\325\023\275\013i=\275\246\325\253:\254\370C\275r\305\267\274\255^\002=\032\206g\274,\234\"\275\233\245\035=\367\367\247;\210\246<\274ek;\275\261,\037\275\034\205O=\335%\025==\331\267\274\240\363\230<z\374\334\274\2334\212<\r\250\032\275JlZ\275\352I\024=\361\302B\275~\020:=t\000\313\272\227tT=e\217\037\275\320\316\274;\201{^\275.\344\014\275\232\222\367<\237\204\00395\201I\275\246\237\001\275\352\251!=\222\260\014;y\211-\275|Z\014\275\263\005\001=Q\006\327\273\206g\242;\270\322\254<hH\275<\323<\036\275\355\006\367<\342\363\003=\226\001\"\273\3246\370:q\033\021\274\260\246\t=\317yT=\324\322\217\272\004\253\037\275\364\271Y\275\024\246\202<\367f\307<\3252\215\273\020\035r\274\323\270\007=B\207=\275\353u\314\273q\035\374;\215\237\026\275\275/\247\274\370\2108<\326A&\275\307\327\365\274 \324\336\274\310\365\275<@j\025\274\367\225\237<\2352\354\274\n\311\333\273\375G\341\273\317\302Q=r]\367\274\327\221-\275\360\303H=\362\377\033<XW!=\264\277?=\366\257\307\274i\212k\273\335/U\275\2532\035\275\274<\235<U\325]=\322\243\360\274w{\031=\023\311\326<\037\036\227<\277\341W<Nm\364<\217(\037\275re#\275\344\2279<\357\271\367\274QS\261\273\376X\264\274\210\307I<\214\237\231\274{\026B=\017\320\206\273\355g\345\273\013\033\300\273C\2305=\346\013\350\274\31409\275\010\301,<\313\226\342\274\263\227\200<\357\242\244\274g|q<U\225\t\275\257\240\365<\235\022\275;\034\341\334;\356\026R=\214\343;\275H\241\216<\345\032\021\275]\330H\275\252\231\263;u+\257<\264\365f\273\334ir<cBl<}\\\224<\215\nH\275\014\326\271\274\240\250$\274O\334\010\275\373OU\273\220I\016\275\006\356W\275\272\3246\275\rD\254<\275~\030\275)\211S\275\010\366E=`\352\027\275Od\033=[\302\340\274\016\376;\275\302\306\363\274~\240\333<\262\024\021\274\301`\344\274<\033\023=;KG=\333\202\254<l\361\r<\'9/=\242\273\212<\362{T\275\270\260\331\274\306\262\327\274]a4=E?@\2752Fh<\226\207\333\274\031\365\341<C\232?\275z\346\326;\326\310\213\273\311U2<@y\016\275t\254\317\274\'\204\344<\330\340\031<86C\275\014\010\207;\020\256\312\274\313\023\373\273c&\003\275iQ\336<\366\357\304\274( h\272P\343\235\274B\347#\275\242\247\335\274\245\235\252<\277\346\005\275\201\214 \275#\272\r\275\273\016,\275\237\233\254\274{\203\006=\2679O=;\373)\274c\027\231<\036*5=\375|Q\275\242\245(<\236>\023=\327:v\274b\335*<\004\316\377\274\357\231\353<\236\337\251<\234i\337<\010\360\332<\261D\302\273\364\322\034=\351\367-=\267D\037\274\266\331\221\274@@\344;B|9=%n=\275\033\251\035=;@\303\273\260\3612\275Z\371\242<U\266\251<>\n\225:>\007\r=P\205\007\274 -\334<2A:\275\177\252\000=\322\0029\275^\306J\275w/\031;\313\356O<\276J\014\2736\346H<\352\356K\274o97\274|\004C\275\014\244;\275j\231Q=\025\326C<Y\375\017;P\245\376<r;h;\231\034N<\013\265\307\274AJ\203\274\3510`\2730{M=\360\341\276<H\027=;\372\314a\274\211_\016:F\026\024=\217\333\354\273{\334\004\275\375L\325<:\246W\274<\"\245\274\250\010\272<\237RA\275\"\270)\274\307\214(=\262\264\312<qP\023\275\376\205\024=+\020\006=L\221\027\273J\262\222\274\313\310\207;\007\367\033=\215*M=\341\243O<\206V?\275\010\222u\274\021\355F\275\357\241\026\275\252|\025;\n\257D\275\257\367\333;5~\032\275\236\'\016=<\360 =\266Z\035\275\0028[=DI\024\275\262X^\275\031\361q;\301B#\275\232fQ<\021\023\222\274\306W\330\274\217\tC=\367;\r\275\001\360\257\274\ti\022=\342\276\t\275;\034k<\267}\201\274u\261\206\273<YI=\232\327>;\241(\257\274\317\315\305;\371]%\275\r%R\275\323\266\336\274g$2\2759A\247<>\3478=\005;\002\275\353\330\220\274\020\337\"<j\330J=|\023\213\274)\215K<(\025@\275\352\272\271\274(n\032\275\261\243\006=\274\032J=\204\227\354\273\021Zi\274\024\331\033=\007%\212\274\341U\300;\262\337\275<\303\0246\275\233\223\350\274\000\026d<\304/\036\275\213\333]\275\216\337\365<\2554\244;OC)=\355\207K\274\260\207J\275J\317O=\t\033\207\274\306\215\036=\242\363\262;G\377\'\275\270#\003;\253\372\221\274\2132.=\315\2119<\035\004\241\274?\375\025\275\003\316Q<v\375G\273\356\313\005<bZ\345<\005M\017=\036\n\363<}\207\221;\317\315\022\275b\377\002\275[e?=sm(\275:\214\022=\225\275\017\275\213\351P=\320J\225;\344\3217=\022\260V=\003)O=\261\372Z\275\312\331K=)\313^=l\275\';O\220I=w\013T\274\237\240\t\275\332\372C=[\201\354\274\3305\335\273\334\272\005;I\203\213\274\245\013\034\275\000\246\024=\000\266\006=\010\330 =J`X\275hQ\360\274\224\335\355\274\024Z\303\274\350\027\321<+Ze<U\033\\<\027JC\272\301O$\275/\325V=G\314D\273M\366\375<\n^X\275\351:?<\332|\215<\272\021\252\273@\353(\275\226\260\036=\222\337e<\271;\200;\257WK=\266\264-\275\243\235\246<|\225\244<\333\336\t=\243H\216<\205V<=\232\032\245;\224:\023\275\"\370\221\274\321Y\025\275\010\243\020\275M\363D\273\003\004\363<ZU\022\275\323*\363\274\2675\306<\355\240\r\275y\233{\274`\300O\274\3530V=\252\000\207\274$\272)\275\347q(=\207\233\326<\203f\006=M\022\036=\347\215\276\274}\214\206\274\000N\225<\245\373\374;\301\221\362\274}Z\344\274c \'\274\372`-=1\244\310\274\333\324\025<\\\262\r\275=\275\r\275\245C\025\275\275pA=K#D=\251\261;\274O\300Q\272\034\276\306\274\204\325\\<\244\306O\275\333(v\274\241\237\021\275\020\340\300<0\253\225\274cVU\275\3728\354\274 \224\270\273\2012\270\274\267W\027=\037p\205<\026@<=\256lE=\032\224*\275#\236\026=\013\254 \275\266\367\001\274u\262\352<\035\342$\275\257\312\256<\270\273\316<\366(\353<WD\266\274?\347\327<\353\203\302<\002@J\275\367\241\311:\341\006\330\273q\270[=sC\017=\362\346\014\275\340\363X\274K\002U=\341x\325\273\204\236 \275\345)A=X\331\177\272;K\313<\255[=\275K\004\004\275\2646\241<N\343[=\263/\306<\261\016\315\274c{\317;\323\036\\=\2771\340;\261%/=\034\3673=;\327\244<m\360\307\274\357C\213\274\355\350\336\272\204\t9\275\266\366{<Xic</\222U\274\021V>=\274\214\020\275\001\3040\273W\222,=\005\343\006=>v\031=\273\256\274<)\374\272\273v]\357<\326\330+=]\264\010\275\336\3516<J\225\306\274&\252X=d\217A=\317\036\261:4\rI<0\336\312\274\360\310e<L0\312\274q:4\275\"\3709\275Uj*\275\2000\032\275\200\324(=\320dI\274c\316\003<\254\201Z\275i_X=\346\221\371\274\031\261&\275\230\252\210\2736l\027\275k\3408\273\326\010j\274YJT=\312`\275<\001\035\212\273\321&5=>\021\232</\243\353;\351wH=\2474-\274\343\373C\275\200\211;\275\304uI\275GH\247\273\204\306\317<_\230\245\274m\022@\274\037H\305<\232\2063\275\304>\211\273\230\341#=\212\277K\274\322\"\312<O\r\322<\274)7\275\230\245U=\352s.\275\246\363C\274\223k(=\006]U\275a\025\347\274uR\215<\031\"\020\275\371+\244<\023\nX\275\246\270\037\275\217C\031;WPK\274`\230\205\274EU\204\274\374\241A\275\007\242<=Y\352 =\320n\244\274\356/$=\223\343P=\371\342;\275\256o\036\2751\215)\275\016.\250<\366\277,\275\244\000\032\275\363Lr;\360q\325\274\252\365\257\274\236eF=\202\313=<A\225M\275\330H\305\274\010\237\315<\216\332\320\272\0020\250\274\2036&=\313M\261\274\210\302\037\274\002\204S\275$\313\372\274\270\251U=i\253\223\274*\326\252\274\255l_\273\315\300\345<\013\036\022=\363\250\036\2751\340\375\274|d\227\273\357$\341\274k\371\361\274y\207A=)\n\332<(\255\202\274\363\n\324\274g0\016=@5\331\274\032kI\275\361g\t=\t+T\275_\262\276<\377]\033=\266L!=\'\013\211<\2653R=\272*7\275Y\000|\273\373\0328\2759\020\000=\370o=<\315i\244\274,\312w\274\220`.=\351\027\022=u/+<\035\203\016\274\241\235\226<;\231\256<\371f\336\274~e~\274\323\201A\275\335\260\221\274\310\244\361\274Y\224~<t+\237<G\373\\\275?U\025\274\267\333\311;\345\023\177<\326*\276\273]\341\215<\201\335\214\274K\343!\275\273\025\034\274o\027L=zfx<Z*7=\200\262\211<3\332H=\320c6\275\345\007\376<B\222B=\326\2046<\344\224\215;\204\327\306<\264!\302\273\340\217\317\272\003\301N\275\307\244F=\370\314K=\345T4\275\317J\331;\363iV<\335\220\006\275\304j@;\246wG=\221K\270<\005\005\024\275\211\0214\275\307\272-\275\301}\324:\216\357\345<\314\213\333\274\\\223!\275J\210L=\002\341\031=\340BJ\275D\376\021=\003\362,;4.\\<\003\272\036=\206O\025=\272\341Z<\374\310\361\274\212\261,\274\016\0027=EK!\275\3571\315\274\351\036\206<\247<\322:\'\026|<&)\217\274\335\007W=\247\031_\275R\337\370\274\256\334\320<\253\266\'=\224\017\301<\231\0162=<}X\274+\243\321;\360\341[;I\242\013\275\367\005==U\007\222\274\250\036\374\274\346)\300;&\206J\273\267\206S=\314OA=\306B]\274\304\333\337<\266<X\274\271\317\260\274\356|/=n_\001\275j]/=\016h\023\275\373\344\240\274G\201\306\271\335<\022\273\252\210\354\274k\373\030=\250\364\365;\366\2067\275\305Q\030=%i:=_S\036\275\363\246q<\226\034\331<\022\203\375\274\271t\2009\202\361\323\274\261p\225\274\305\324\035\274*\200L\274\242=\014\275\326\227\026=\233!\377;\213\016\235\274\322[\345\274e\024\315\274\354\244W<\227W\345<\241\2133=\203y.=\202\337\221<I\327\014\274\227<\213<\017\326\224<U!\033\274\340:=\275Q\372\026=\305\313\205\274\363\257B\273\276\276\235<\341\014<\274\267\027k<i\323M=\033\211,=B\010\335\273\207\"^=\331\026H\275\266V\313\274\023\310/\275\027[\177\274\000x\262\274\341V:=\217\277\024=\017\274\371:\177Z\027\275\000\262\016\275\276\303\\={Ru;\3640\005;\312\305;\274\355\240\030\275+9<=YX,\275C\213?\275^\3676\275f#\273\274Oy0\275\316\005\365\274\030\225\346;\205\323U\275Q`H=\346X\205<\275/Y=\003\036\252<\001\\S=\256\r\005\275hW0=\347>Y\274\032k$=2\006\326\274\003\240\010\274\034L%=d\206E=-\231\031<!\201\324\274CS\016=9 ==\200\225\030\274\277/2=}\370\363\274\206\231C=b\204\313\274{\352$\275\276W\'\274\302\204}\274\360y[\275\241\212R<\262<\005\274z\302!=xT\016\275\342\2058\275\330$\235<\214\226\266<c\334G\274p\021O\275\362KX=\277\014\275\273\200!R=\233\360@\274\364&&\275\371\n\002\274L\234\264\274\210\254P=X\005\t=?f\323\274\254q;=\310K<\275O\332\021\275\313+\320<p\223\t\275\330\3613=\256\375\002=\321\247\213<\253t\220\273\222|\271\274?\037\000\27568\010=\322\337\005=\355\035_=V1\177\274\314\272\037=>Y*<\230\320.\275`\r\366<\200|\352<\010\346I\275\252V\275;\217\230#=\340\0206=(\177i<s\345\023=\311sJ\275\321\220\305\274Xm>=}E\205<\377\004\240\274\030yJ\275cv\017\275>\241\207<\250\237\300<\003\346%=h\355+\275Do\032<\232\207\006=\250\2010=\227\224K\275~\215\314\274c\332\335\274\241\222(=\355\016\025=|\263\032=\020t\354:\024t1=<#\020\273\332\037\252<\206(D=\250\354\340<\2578\367\274PX-\274\371\205\200<cK\013\275\036\007\201<\314E\372<\306W\367\274\361\243\000<\226\\\342;T`\257\273z7\355<$\262\322\274\302\300{\274\036\343r<z\265+\275R \036=\265\357\315\274SiH=\023\254\344<\317UB=W\264\333<hk%\275\203\335\335<\302\332 =&\177\270\274\212\214\232;\033\027\322\272\370\243\265<@5\023;\3049\375;1\025]\275D\226(=\350%\002\275\013\212\226<\333\342\255\273$IJ=\341\302?\274\025\352X\275\377\004\021\274\352>M\275\207\301\360\274k\3718\275\306\311\365\274\001\004\033=HWF<\311nS=.\3711=\033\271\334<}\301\004\275x\333\216\273@t\330\273\265\200\306\274\022dG\274\004\001(=\222dH=\271\205\2679p|\212\274\233DB<>\002T=\213\025S\275:\337D\275|\332Q\275\362\303==M\346><\346\246j\2743\3370\274\254\300\004=\206\217\033=x\311\177\273\200\001\017=\037\r\266\274cs\364<\307\201B\274_\\#=\370\\^\275\016\372\033=W\323!=\220\251\003\275r\2078=\013\222\320<S\343\\\275\332\375/=\242\035\034\273\220\2517\275O:0=fd\026<i\363\036=%\237\017< \242\327</\006\235<\347O\017=\370\035L\273\030>\352<\320\321^=\340.\375<\337~}<\376\0372=\234\037\222\2736\206O\275g\306v\274\244*\240<\332\306\307\274O*5=\177\033\364\274`\221\3079Q\343\006\274=\236 <\300\342]\274\010\211\303\272\223-.:\347\364\013\273\244\351\025=\321.,=\315\026n;hp\\;\007\260\212\274\222I]\274\225\307<\275\25021\275\365\364B;\254%S=\1770\301<U\222\344\274\013*@=\340?\023\275\332\212\n\275\261}%\275\nJ\014=\267\340:\275\262c^\275\366\243W=\340\274(\275\354%Q\275BCS\275.\220U\271j\210\270;a\'1\275\212\322\223\271\247\016L=}NJ\273@\'G<\t\320\310\274\t\021\363<\365\261\007\275\261\0074=\242\231\333\274\210\256\266\273\317\3045;t\214\232<+~\222\274M\034.\275\224\344\252<^[\262\274\370.\001\275\355\373-=\3770\247<\333v\314\274E\243\001\275\374\004\304\273\301\213\t=?\340W=m\246\333;\027\327\017<\204\366W=Bz>=\220\273~\274dl^=\217\304\002=\227\202\205\272InP\275\\91<\273\\\031\275Q$@<\262W\262<f\276\232<\256+9\275\247\231\331<\220\353\004\275\356\247\031\275\3235>\275\270\273\377<\254\335\241:\025C\013\275\024e\253<\236\017>=\t\216{<\303#1\275k\010\300<>y\301\274\017\371\373\274\004\rC=0W\231;\316\2172=\006r\356\274|\031\327<\256\327X=)W\005=%\035\371<-\001K\274;\364I\275\322\332\242<\203\022R=\030\203\265\274\013\313\200\273e#\220\273T\027E=\306\252I\275\216\375N=q|\023\273\374n\025=\345=\004;\224b$=fAX\275V\373A=^\357]\274\207{1=7\342:=AC\304\274\375\366\211\274\007\357Z\274${\274\274z/W=_\364=<{u\352<=5\367<\003v\021=\360G\326\274F\254Z\275\220\376\232<\271W\036\273\211\274^\275\365~\021\275zR\200<\371\375\025=\242\220M\275\220n\360;\267\261<=\211\000!\2730\356\001\274\277\t7\274\027\035\207<\237\265\376\274 \373e\273v4\270\272\362\t\372<g\022B\275\225\254\371\274\265\324M\274\r?/\275\243G\312\274IsA\272\211=\264;\211\347\177\274Y\177\326:\027P\337:u\251!\2759\362\332<_\234\216<&=(<+\342F=\2779(<\346\262\307;vO\313\274V\212\223<\211\212\270<\013]\313<\243\330\363<&\255\303\274\261\351+=(\200R<[.\035<\377\302)=\312\r\021<\254\266\311<\322\270\252<\263+\256<~d\025\275\022C\033=\257{A=\263\016\233<\320\264T=\274\032Q\275\036H,\273\206\346\025=\226\341\220\274\254\262\344<o\352\'\275\347q\276\274TYB\274\373\3671=\217~4=\324\030H\275tc\260\274\336a\010=\352 X=gx\343<-N{<l\001U\275g!\203;}\322\t\273\207OC\273\005\367\253;\022\347,=\243\240\n=\007\267\316;\370\361\032\275\357T\311;Q\323!\275\325\276\330<=\274\360\2743\361\350<\307\307\025\274s\003\255\273\350\207\262\274E2Y\275\217D7=d\350\001\275\213@\035\275\361+d<U\215\031=H\251\r<Q\343F\275yn\010;\324D\350\274\272aH\272D\311I\275a\336H\275\236\024\265\274\345\302\030=[\317\321<F\202\214;\222i\020\275\312\023\322;D\000\325\273<\367!\274\316\3649=\337\223\355<<\347@=\303u\r=!\353!\275JRH\2756\024\033=\004\242\332\272\23094\275=B\333<\302a<\274\370w\021=/\305\254;\240\353\241\2749\030!\271\371;!;\206B\205\274/6@<\377d;\275\373%\254\274xy\367<#\000M\275\216\342==\026\240\276\274\010F\017=F\013;=G\320\025=Id;;\005p\360\274\244\266\030\275\027\325T=\322\036\006\275`\314)\274\352\252\017\275\213{@\275m\301\"<y)\002\275}\332j<\330R\325\274\241\rA\275\335\317\351<0\261.\275\320\244\277\274\350\007c\274\206=\331;\001\262\261\274\222$\311<\270cf\274.Ly;\356\375\331\274\341\367>\275\014\204\303\274\002\311\025\275wn#=R\243==e\307\262\274;?U\275{z\013\273\257\236\023\274\360z\365;:E\010:\311O;\275\020\203\360;y\241\266\274VAO=\'\003\371<\211RS\275Ad\223\274\306HZ;\301\312\n\275Nx9\274\243\243(\275\243D\272\274\232\215-9\030\362\277\272\243\025\r<q\0328=\2506R\275,/]=\311\346Y=\211\224\316\273\314N\013=\303}\024\275\256\230:=\222\357\037=#g2=\023_{\273,N\372<\252}\301\273\365\360\303<.\236%=pdJ<\r\324\026<:\037\n<\236h\300<\273\366\020=0\360r\273\242#\r\275\245\265\016<\316\214<\275\376\033\027=\313\014\005=|yX\275K\225(\275B.Q<>\021\272<\006\323Z=\255\277\353;\235\304\377<e&.\275\377\224\3649\333pC\275\270\353\307\274\307\202\030\273?\n]:\3613F\275u[\350<u\r\n=\246\372C=\231\345\r<LZ\276\274<\021\t=\344\006(\274;A\337<\336\331\220\274X\276\220\2731\n\342;\332DR=\225IQ\275\240M\235\274\224p3\275\n\362f<\250\327\315;G+?=\341\215(=[\201A=\n\306q<uq\007=\371\362Q\274H4\345:\221\021,=|\354\'=\021Y\033=7C><\363D\003\275\313\367\225\274J\371\207<j;>\275V\376\225\274?\334\016=\332\264Q\275 \032S\275\362\206I\275\032\265@\275\340p\250;R\232Q\275\357\374i<\316n\330\271\016\212\302<\332\006&\275u\235\213\274\253\245\004<\336\331.<\310\263\'=zEY<\263KF=:9#=\322\341\027\274\314\3449<\257Qm\274\254\236F\275\211\213\017<\315\304;=\316v[=\315\375\037\275\357\000\032<\222w\354<P-6\275\275\3148\275\206?\021=\334\010\022\273@q)\272\317P\235\274\341\261\014\275^f\200<:\022\316:M\037*<\'\277P=\232\310H\275/\207+\275\035.\237;\250*\013\275\322\370\237<y\251>\275z\024\265;\370\0312=ro/=\007\341J\275u\222\324;\377O\036\275\333\255 =\313\0256=|\357\325;:\"\345;\236\376?\2754\333\324\274\255x\235<H$P=q\216\201\274q\301\314<D\215\030\275\255g1=\200^$=\026\265\246\273@s\344<\341O)=F\371\357\274\027\301 <\025d\332\274d\033\n\274\3451\006\275s\312\034\275\035% \275\030\r\352\274\303\364K\275\220\232)=\373\343\211\274$D\r\275\203\327\\\273\nK\266:\315\363\003\275hC\214<\272\301\355\274j\244O=\024\0007\2746\327\\\275\260Q\"\275\234uR=\377/(\2755\221\314:F\275 \275%Zd:\356\206\016\275\027=1<\020@\313<i\303\\\274V\333U=h5*=\364\n\255<(\200\035<\271j\316<B&Z=\345\244\341\274\240\304\261<\006?\210\273P\345G\275\2344$\274\220\235\r\275\243\274\'\275+\217\200\274\236\346\237\273\223\346\212\2742\352x\2738>H\275\371\002\004\275\243\312\031\274Bd\365\2745\340$\274(C\333\274\345\276\334\274cWL\274\244]\002<*;H\275\037\223+\275\327\252*<\003\016Z\275(\255F\274\017\207\206<\023/S\275\270:\225;\317\234\016=k8\275<\273\330\202<\016\356\177;Z\027\326<\303\265^\275\301\202e<\324\021\343\274,\3513\2748\3548=\245/\201<\262\035\312<\261\205H\275P\377K=cs,\275\272\017|\274\177\204\272\274\222|$\275\256\255\020\275\200\250\313\274\225\341i\274.\021\030\274e\344\344\274\313-\010\275\313\267s<\263H\252\274\335b\013=\372\037\303;\245\363\005\275\244e\032\275\370Z\265\274\257\2074=IrM\275\234]#\275\007\"\252;\237\221\274\273\363\360\365;\203\\S=Z\\9=\372\372\021<\215\025\024=G\235^<\350\370\036=\304z\341<\322\205\253;\377o\'<\375\240\207;\352\206k<\312^]\275\235\010\342<F\354\n=\356\237\t=O\321\"=Z\376N\275\311#\351;\232B#=\343s\255<f\367V\275\314\375\n\275\336\360\025\274\271\362\351\274@\333\"=\365\262\033=\345@\000\275}7\264<oT?\275<,\356:\255\270\353<\256\2521\275\014\301\030=979\275\373G|\273\265.\007=\261\201\262<\030E\247<4L8;;Z\242<\262\312M=\253fX=\030W\001\273\n\332[=\301\262\326\272j~[\275\362H =\256\3472=\177\313^;^-.\274\033\025H=9\242\031=2\324^\275\327\203B=\273\002\000=\210\367\037=\343Q\334\274\010\276\247\274\354\315X;\337~\013=\374!\372<B\016\013\2754=\001<\234\273f\274\217L\037=`j\214<\266\341\276\274vJ+\275e\275\201\274`\020g<\206H7\275B\310B\275\325\236\222<\263\341\013\275\344\033\004\275|\025\026\275\354\030\265<\333\352\326\274\346\315\251<\037\266\017=>\3449\274A\311\223<\232\367\351<\364H\016<w\204\006=IY\020=l\276F=\310\304\t\275\275\2401:\3149\013=!\225\010\275\030\340<\274\2606\243<^\177\030\274\257\251\026\275\216\373>=\316+\013=\000\247\t<\022\347\347<\345m\"\275\327\000,\2747\345\025\275\266\356C=\332\262K=\324\301B=\376 \224\274\354\027M\275.#)\274\000\017P\275\350\221\003=\224\324\034=\200\214#\275\203\177O\275\244\346\005\274\215\200\013=\235\0304=\341\273\370<q\374A\2759\312\024\273Y\2365=S\007\222\274\233\336\020\274\313\261o\274\t\244\216<\340\240\373;L!\022=\323\315\225\274\034\2710=\035\265\337<\255\314\334<9\372\034\274\376\26678\307\276\330\273\246\r\362;\006\371\001\274\351\323\225;\375\354\216<M\3613\275\256s\254\274\373S\253<\310\223\017=L.\352;\3702\210\273[5\313\274\004~V=\351\025\315<\005\221W\275N :\274\223\327}\274w\343\211:\216\000\355<\200\331-=\341z\243<\267\356\037\274\275\305?=P\271\036\275H\215A=\037\247\010=g\366\277<\307\206W\275\242\343==\250A\"=I\301M\275\221\214\002\275^Z\004\275M\251Q\275\0319\271\274\377b\031=\277\257\025=\017\262:\275C\366Q\274\204\371T=\340\354l\273\365\205\001=\241\337 \275\024\234\031\275\007\260\031\274\335 U=\340\244\'\275\354\240O;*!\r<\2019q\274dQ_=\263\242\034\275\377\353\035=\201\2533=\245\246\003;\227\ra<\\\206\251<\355\333\200<\251p\351\274:\324\010=]M\362\274\353^S=>\n)=L\203\260<K\314b;\r\004\325\272\006\2613\275t\247\017\275\376\202\037=\334\355\022=Zl%=\260\"\035=\3535,\2751\315\262<\371\216\251<\364\031\216\274\3626\363\274\352\031\217\274\213L\"\275J{\331\271\371\346H=\016\266\t;\364G\222<\247\261\020\275\226\000\035\274\022\372\r\274\010\206Z=\302\242\202<F\272\337<Q\320d\274m\270\326<\301{\210\274\211P%;f\262]=\374\367Z\275\200\036\325<\332Z\2059j\2507\274\031jI\274\325\203\024=xH\316<\007\225\014=\356\347\031\275x:E=g\360[<\337\354\232\274i\241\202<\013\370\362<\353\225\334<Z\227\310\274B\275\021=\257($=\234\373\331<\335(?\275\321\000\3469\005\357F\274-\346\375\274eu\363<\353\357\215<\274\2472\272\327\236\215<\004\306\343\274\370\303!=\263-\355<4{\252;$\260\264;\272\311\345<\242\322\323\2736@Y\273\361\366\337<3\020\342\274\027\305\332<y\035\000<(\0248=\334Q\373\274&\253G=\372K\357\274Z\255U=C\271<=\362W&\2751r\037=\2119_=\276\252\270\273r\311O\275ur\017\275\027L\240\273@:\223<\211\246\314\273D\310\300\274\023\013_=S\330\225\274Z\2431\275|=\037<w\242\n=.x<=\232D\331<\212_\365\2731\2024=%\376\004=\314h\357\274\004\337\213\274j\356\016\2748\035\001\274\225\232\201\273\021{\200\274\335l\021=7%\340<7j\310\274\017\005\037=RJ{<\003\256|\274\221\022\020\274N\336\227\2737]\202<\306=Q=\360\230\306\274\016\312H\275\277\206\341\274\204\355\372;\325\035;=\240~\307<A\311\236;\347\366[\275\265\016;\275\013\245^\275\357\031\250\273i \235\273|\211\235<\226\017U\2755B*=&\325\272\274{\024U\274O:*\274\2310z\274\267\277\036\275a<\021=\024\033(\275\"\025D=\223\nD\275\001\264\013=\327\311\023;p\023\254\274\322\270\277\274\272\243\032\275\270\255Q\273\374\336J\275\343M\332\274\205\322?=t%\205\272y\341p\274\021\306.;\274\325\326\274\343\312S\275\307g@\275\264\375\374\274o\372\373\274\345\030*<\323\224g\273\212\240\035\275G\341\332\274\3421\246\274J\340>=\3236\031=\027\320[\273\274M\331\274\227\026\325\273?+\t\275v\375\006\274y5\333\273\277\2473\275\305\257N\274@\347)\275\253]\234<\264*T\275\025$\244<\336kJ\275\254\213\313\274\305QZ<\324\321;\275g\317H=\004I?\275cs*<O7\344;\266x\366<\202\246\371\274\242\307\207<\026\360F=7\315A=\243e\264\273Fc \275\210\027\252<\334\002\242\274\036\325Q\275\\\336\204\274^q\352<>\357\374\274\343\363>=H\342\236<\357\232@<\343YE=\253y3\274\310\t\010\274\215\037L=\026\357\260\274\020\366\332\274\330T\301<\024\016I=eS1=\262\225=\275\2326/\274\364\273Z\275\303\003I\275\306\203\032\275/\256\345<u\014\320<\3564Z\275\206\013\212<d\205\004\275\r\305\013=z\0213\275/\331/;F\366\000=\005\335\330\274\021YU\275j\365\332\274a\372\363\274&6\235;\320\221\n=\001\240\003=\263;\242:\237\205Y=d&\002=\252\275\232<H\035\030;-\337H=\255\034\212;\023\272\2318\232\227\263\273\356\323:\273O\010\212<\332\037-=Fx\005=\351\313k<y\205A\275y\303\026\274)\356\243\274\217\327f;5F\317\274\0236@=\021s\010\274\010\3256\275\326yF\274\220\340\222<n\337r<\332,F=\327?6\2756\362(<O\231\036\274\000(\362<98\316\274\360\004\204\273{\2443\273FY_\272w\344[<\205\273 =\331\244\366\274\\4\271\273\305~\231<|z7\275\236r\202\274Q-5\275\242$\263;\372\376\211<>\200\233\274\375\211\213:\262\330\300<I\207\300<\332y/\275\354V\036=\312e\032\274\236\216\364<\010e9\275\237\202\253;<Z\235\272o\300\251<\021\\d< L/\273\244\354\272\274\037\251\034\274b\375V=\210\271$<Ol\031\275\347\376C<\360\261L\273\374\006\243\274w\211\031\275\211\264-=\\\"\320\273W\251h\274\021\326\034\275\006\373X=(J\001\274\344\nJ=\333\356V<\355=\307<K\2234\274\322\270D=J\016\337<h?\203<\311}\264<\300\371V\275\000V\245\274P\033Q\274\0206\237\273\375 ?=\010g-\274(\323\254<KM\034=\372o\037\275\216B\000\275\226\246\036=e\232,\275?\2134=\025(\307<\341\337^\275n\367\224\273\237\215\307<\204\257\222\274#CC=\330\003\306\272\267V\220\274\273\016\232\274+\242.\274\t)\365\274V5\020\275\300\323v\273\370/\006\274}\350\016\275\027\t\206\274\216\022\311\274\0009T\275`\342N=7\364)\274\013%\212\273\014^M\274\270\373\325\274\252}\303<\215\204B=\267\252*=\335G6=\336\310\320:\250\262G\275\307\0221;\311\306B\275\347\0002=)\\\332\274~\365\225<\311\207i\273\025\276\276<S\3639=\234\002\020\275u\367\201\2747\304\332<\013\2701\275\322\n\227\274V\003 <\314\220\014=WtF= &\251<\355\026\261<\227\'\257;\3142\326<e\257\371;O)==\026l\"=/\036\213;9\271[\273\206\0068\275\275\250\333<\240\352B=|6G:\255\336\343;\337\003\244<\312\232\227\274\326B\233<\324\300\312<\357\262\270\274\220\245^\275>K\'=\312$K\275`\266U\274\374JJ=2\312H\275+\344C=\317\334\333\274\3401\367<\223\013=\275\245\005\212\274\264\306\014=\355\254\335\274\027kX=\024\375V=\314\367$\275_\353a<63\002\275\261zX=a\347V\275\232\000\372\273\030\335\204<\215\372G\275E\222\211<\003[\244\273(\337\034=\314W\220<)_t\2741\372\030\275\321T\301<\264\243\007\275~\213X=\355\2456\274\332<\243<\377\246\324\272\317\372\003=S\330D\274E\225\016\275\234A\326\274\345\273W<\332\r\223\274\202\016\353<|\031\013=\330\335\370<\320q>=\267\244\032\275\017\236.:Hd\374\274\241\\\314\274\203\236E\275\n\331\000=k?\374\274\t\245\267\274$\221\301<@\t\244\274;Yr\274\005\260\254;4\2319\275k\227\263<\'\022\026= \271\220\274U\211E=\255w@\275\345\010\272<\235\303\232\274\243\237\023\275T\227\022\275\037|\014=\nI\n=\214i*=/\033\017=\271\361\n=\311\302,=\226\223\004\274t\344\304\274\244\360\232<^\325-=\024\260\355\273x/\022=Xq<\275\306\335\022=\247\225-\275%\247\376:]L.\275K\302N\273\310\221-\275\254\004\027\274r\216K\275p\306\t\275\223i\306:C\337\220\274V\374\342\274\340\250\310<\30225=\260\323\017\275(\004\014\274Gol;\301^[=\201\203\310<\255\024\211<rv[<g%G\275\250\314\312\274\202\0301=\223\352(\274\263IC\273\002?Y<\277\347M\275\265\373\214<\320\313M\275:\300\360\274\355s\016<k,\027=g\205\026=D?!\2751\311\303<e\3711=.\021)\275P\261\226:\327{M\275\211\202Z\2754\311(\275|\366\225<u\327U=\323\233M\275\316vM\275\000\247\344<\253K\017\2759\244\017=\206\3700\274\207RH\275\204\2463=\265d,=\205\371,<\026NA\275\023\026\304<\022\312\350<\361\231R=\354\321\254<u%C<$\314\332<\3354\334<R\261\n=,\270 \275N\016\315\274\257\3732=nW\263<\266\2361<\255\352k<\037\242\035<\2526\035=\364\3018<\021\315\352<\314\352C\271NR\210\274\017\247\323;\302ZC\275\374\3705=\025[\337\273\330\354\263<\303\'\300;1\002\225<\203\266\364\273\362\336\264\274a\324\367\274Z*i\274q\303\233\274\203\321\000=\321!\027=\350bC<e\000%\275\242\217G;\246\353\215\274\245h\201;*\242q\274m\3159\275\016\250\341\274\207\225\'\275\232\237H=\316zJ={^\000\274\3016\017\275\3127\030<\006\242\035=\326\224\n8\265\200\246\274\377,%\274\307}\023=1c+\275\252m\014\274\244\214\203<\233M\010=\301M\"\275e.~\271*\300+\275\'\023\001\274\0328C=,\365\214<\3061+\275\t\344V<\317\356U\274\244CN<\3250M\275d\003\302;&\300)<\227\264\347:\304\354\226\274f\3372==HU\275W\004X\275\220_Z=\021%\\=\360\030r<\320\361\251<n\321\014=\371\035\232\273\305MB\275H|@\275uqZ<\224\276\037\275p\331 \275N\2618=\305:*\275\340\327\002\275=\222\354\274jjh<\211\0052<i\366\013\275\325\022\r<\234,{<]\204\277<\350$V\274\343\002Y=Z\370W\275\270\327\n\275+\037\332<%\000\346;\253\270\263<\307XJ\275X\377!\275\014\265\364<\034.\306\274\243\273O\274\24446\273\243\242<\275\210\0245=`\006\302\274w+\002=\3430\307\272\210_\346;\306$\327<>\n\247\272q/\270:\235&G=\255\346>=\036\245\010:!\301\235\272x\236\"=uU\016\275\306\244\245;^v?\275u\337\357<*\222\206<\366\300-\275<\325]\275d\333\006\275L\031\014\275\007\353\371\274\215\036W\275\323\330\361;\214s\024=\277\233\t\275\323E&=p\367\335\274\000-\226<U\005D\275\261\233X\275\2116\326;\365N\030=Uh\257\274R\315\234\274\337\257G=xa\223<y\237\241<\236\256D=\006\\\032<ov\247\273\243]\270\273\202a\375\274F\277\007\274\211m`\272\357\356[=,\020\003=\313\320/=6\307\031=e~\203<\316S\202\274\353\\\334\274G\033?\275u\301Z=\336\rL=\177\275T=\274\312\376<\272\303\276\2733\246!\275p]\256\273\210bE=~8\036=\021F\327\273\371\216\356\274\225&\307\273\364\252\017=\335\217\002\275G@K=o\337\201\274\227\366\204<\240\347-\275\207\336L=\254\341\002=7E6\275\370\274\r\2745~^\275\326\222\\=\016\304i<\022\010\'\275^qr<\276\357J=\247\242\020\275\242\347\\\275\023\271\221;\375o\010=\270\027\032\275o\002\"=.\350+=\315\365\350<\374\t\t\273\036\t&\275B\237\365\274\3215\024=\275}\260\273\360\332\003\274\357\020Q=\315C==\372\210\264\274\263#*\275&\367\036=\375\3719\275I\256\002=\'\301\023=\374/\332\274\026w#<\250M#;\364$\275:\342%4\274\200r6=\216\336\250\274\177\207(\275S?\312<\027b\336\273NN\235<\240;P\275G\333Q\273r\267\024=\224\003(\275\016hm\274\367\212Y=\372\247\031\274\327e\373<\367tY\274\324T\312\274\200,g\274;\026W\275\335Y0=a\304*\275\340\014><\022\323\223<\255p5\275\327!,\275\301}\346<\315\350\000\275B\326\000\275\351\r\030;\254\311E\2759\334&\275G\021\004\275\256\266\031=YrY\275\301*\034=\341\304i\273\327@\211\273\303X\207\274\331\266T=\336rW\275\260\301.\275\352L7\274\231\304T\2738\'\000=AM\002\275\322\252Z\275\307p\026<\003\236O=\020\220X=kA\267\273\265\347\023<\345\2643=\024\341\362<\006\345K=\202\353\006=z!\004=C\017\340\273\256\373\260\274\200om;\"\006b:\201\3723=,\351O\275\250v\234<\0167S\274\365\2456\275*\322\312<i\3625=\341\n_\275\265\235@=\030\371P=|\214[\275\250<\322\274\026\022]\275\241\3666=#{\376<~\255\236:\205`\242<.9@\275\023\360\356<xZS<\020\270^\275\316\037<\275\303n.=\207\270l<A[F\275\236\3173\275\033\302D\275&\277*\275\330\224\335<\256\271\364;*\237F=\277D\306\273G\017\0019\357\227U\275&\346\255<\203\004v\274\005\321/\275\355?\021=\234g\312<\350HN=ey\n\275\330\210\035=\227\256]=^&:=]K\245\274\333\365L\275#\315*\275\212\'\351\2730\013P<P\214W\275\342\3543\275\240\371\\=-R1=\255:\002\275mrP\275\267\312!\274\313\374\013=\332\351\312<\277\364K\274\301\342\260<\2726\261<.9\000<\002%\335;\005\320\"=\225\357g<Bg\275\274u\235Y=b\037^\275A}\370<`@f<TM\334;XK\345<~}\205\274\221\227\247\274G/\372\274\205\026\013\275\227\007\364\273P\236\307\274\371\333\265<o\246\006\275\3351\352\274\377\213O\275dRE\275\372:R\273b\025\243<\365\014\316\274\027\275$=\003\001\272\274\357\206\257\274~N\034\274!V>\2751y\361\273\371A\274\273\232u\257<\341\2101\275\355\027!\275\026\367\207;\214-\356<\211\277\014;\033\363\342\271\234\017H\275d\033P<0\367/\275\016\263\263<\225\364\021=w\322\006\274f\324F\275\352\333\021;g\002\007=y\034\'=G\334n<{\234\237\274\371\276\260<\201\003\377<\037\201\363<p\306+\275\326c4\2757\260\004\275%\022\275<j\226\327<\201\177\033\275\207\250\321\271\003=\210<\346\t5\274V\210@;R|\363\274y\372\271<\013\261\340:\260/W\275\313\221\310<Hh\026\275\372\000\006=&m2=\232k\007\275\362\204O\274L\004\250<\215\306r<\353w\001\275\033\032\327\272\363\301\355\274\303\365!\275VS\351\2742\034R=\036\212%\275\225\322\267\272\226\324\202;\302\346\357\274\035F{\274f\233\217\273\273\217\023\275^fM\275\313\300?=\233bb\273t\316\010\275\306\r\265<\207\266*\2744~\277<\257\324\340\274if6\274\367\025T\275\275\273D=\345\252\'\274\214\234\270\272\373|\021\274\346\014\261<A\232\256\274\363_\304\274\321\374X\275t\203\033\275/\322\247\274\223\013+;\\,0\275\007\255\305:w\303R\274fF9=\262X\220\273\013\316\331\274\313h\001\275P\275\004\275\333\336\275\274\tW\345\274X\033P\275\026x\"\275Zt\034=V\214/\275L\263\346;\221%\332\273/s&=\226\364\023\275\377C\324;\241\353\203;\277\305G=\203\302\363<mm\210<\244\3473=_\323\017<\2027\325\274\023\314\322<\371\201?\274\203\2611=!\365\017=\270u\010=s\215$=\242L\024\273\270\304\304\273\336\225&=\251\243\216<[K\365;q1b<\036L\033\2758\005\200\274p\r\330\274qNP\275\205\3104=\215*\005=\352\364X\275o(\027\273\335\013\r=<c\030\275\001\007\353\274\254\"\241;\006\330\333<:\230O\274|C\002=\372::\275\303\316[\275\023\244\240\274\236\334G<Y\214W\274v\313\254<D0Q\274\027\335\364\273\213L)=4\257O\275\347MR=\314.)\275]\250q<\213s\262<\347\240\370\274\0207K\275\313V%\275Q\351j\274|u\"\275X\336D<ix8\275\310a.=\3579E\275\004\222{\274\352!\261\274\242\363D=\tK!\275\202\364\363<\345\002\356\272_\013/<\005\201\205\274,F\322<s\361Z\275\203\036\305;>\360\036=%\266\014<u\343;\275\013\366\261:\232\270\216\274%(\255\274\313\373R\275\241\300\322\273~\265(\275\017\334*<\274\314]=->\023<\263\345\021=\354\263\271;z\003\371\273\362W\033\2756\224\"=.\347\\=\273\317\035\275`\276\020\275\02398\274<^\"<p\026T\275~B:\274\376\3523\275\335\253A\275\024\214-=R\366\272\273\302\200\315\274WF\221\273\0252\344\272\351\3106;\260\307\202\274\254\030T=a\001\\=\023\375\022<\030\322D<\265\271G=~\021S\275\357\3503;\001\220\202\274a(3=E\362K\275\003\302\333:\010\363\"=]D\315\274aG\230\274x\342^=\36576=\255^N\275x\363\277\274\301\005 =\234K\361\2745r\364<v\234\305\274,w\030\275\324C\360\274\014\007\341<oa\367\274p\257\006=\337\310\034</\305\'=\227@\342\274G\266\364<0\216\270\274z\353><\001\264D\275\247\tV\275\223o!\275{\026\335<\237\327K;\000S\006\274qa\023:\236\2700=\316\263\006=\030\251C;\2220]=j\265\373\273\360\210C\274\017\244\344<b\0062\275\272\352-;y\027\345<r+\272\274\374\367\014;6R\214<\302\264\010<\341\216\013\274\246\335\205\274\2135H=\204\014\250<\311\347\266\274\"\264A\275\276\304.\274\036i*\275l)W\275\013\2311\274\034\210<=\213\tT<1\010A\2754j7\275\374\360\311<73C=\334\232K\275/RK\2755\225\306\274\202\351\036=*\256\213<\300\361\354<Q\255\034=\016\256\224<_\231*\275\320\357]=\276#]\274\311\335\232\274\021\366\005=\262J\346:\314n+=\301\212\\=\000X\215\274=\203G\275\001\204\202<W\222\007\275\255R\340<\023n9<u\036\020\275`L\302\274I^\221<\331\237\033=U\246|\2742\276D\274\235\375A=\'\300\223:Yd\370\274\253:A\275\255\005\032<\2207\205<\336\030g\274(z?\275wW\024=\227$J=\023\307\251;\001H4\273\271r\026\275\n\272\211<\243\254\373<\363\2128=q.==\205[\230\274$\257L=L\255\005\275%\306\034=\240\215\376\274\372e/<\225n.<\267\335\354<]L\335<\025!\304\274\366\003\321;\323\2615\275\222\367$\275\036\371\315\274\305\016\275<G\\,=\333<v\274\366}$=\\F:\275\026@,=O\274\224\273\272c\275\273u\355\003\274\nNO=V\272\032=!\035\'=r\016$<P\361>=\2714J=\016C\217<\353\353!=L\360\220\274\254\226J=\216oS\275\255s?\275\213\375;;g\355W\273\253>~<\322\241\035=\245]\324\274$~P=\263\367\225\274\363\263\020\275\205 8=\354\334i;\003\357\031\275\344\324\003\275\\\323G=\361\362\376<\376\0369\275\231\025\326<\3666\026<\321\327\004\275\240A\n=\332\2771\273A\305\t\275\264\343\026\271\330\214,\275\327\377J\275\270[4\275\262\325\364\273#\025\252<\036\330B=\337\221&=\t\253O=s\253\210\2743\034\035<\350\034\032=\215`i<\211\010u<\366L\021=\264\231=\275\013\277\223\274\334`\031\275\304*/=@\271\025\273\255\230I<\377\303\276\274\365i%=\027\261\277<\254\276\021<w\351/\275\264\273\016=\'\240\311<\370ML=@\2375=Ib\332\273\005`T=\022D\037<=\003\275<\213:\020\275\333!\234\274\203\3224=>~E= \242\207\272\215\r.=\316\324\t=\327\203\311;\307^M\275N\3234=R\341%\274p\245\217\274\247\323\006\275\326\271M\275\333\035\'<\353\324\312<v\241S=1\312\337\274^\244\365<\027\001W\275z\004\321\274\020X\001=\347P\356\274u\250\'=\305\271\017\274\244\020k<\005a\225;\273\376\224\273Lh2\275\223~\306\274\326\265\350<\005\256\271;\"mW\2756n,=\225\001\017=\251q[;/\373\005=\315:W\275\207\272\346<\204\246\325\273\263Jf<\322\'\324<\304\351?\275\000S-\275\336\311\276\274\205\344Z={m\264\274\237o3=\013\007\000=_\351\n\275\317\267\254<\3513\206\273\033\306\3229\250f\001=ko\036\275\274S]\275\3450\256\273A+?\274&_\024=R\274\322\273\265\224\005=\t\277\027\275K\027P=\273\310\312\274\335\260\365<\337\363[=\355\365b<\001a\204\274\326b\230</\377\225<5\020I\275\201|\376<\220\377M\275\025\2709\275R\035&=$(\246\274\375\307>;\000t&=-\005\224\274\274\364\330\274\325:\002\275\343hV\275\211!\261\274\365\342O\275\325?\303<j\031\314\2740Y\014\273\215f0=L\226\005=\300\001\032\2750\2415=\360\323$\273\177Y\014\273\2270\251\274$\330%<\273\026\t\274t\241\226<\007W\365;\344\235A\275\345o\031\2757\355\326\274\003\033,=i\307Q=. &=\357~\256;F\225\t=G\240\314<\264\317Z=\264\2405\275S(*= \026\332<\224\321|\273\221\016%\275\333_\276\274<\017\\=\230\"J=\331\360\346\274\321ne\273\205S5\275x\034\374\274\225,\326\274Y\245G=\247\034L<T\216\355\274\313\361@\274\314\323\r\275\220\377\021;\324\226\231<\310\3504=\317\301\207\274\212\271M\274\231\205\352\274\315\206\010=\236\006\231<i\031\271<\261s,<\314\335\305<]\r\\<\241\003\253<9\323,\2759-\260<\255\264)=/\nK=J\240\021=\334\026c\273\245d\224<\303&\022=\304\332E=9*Z\274A\355.<\007[Y=KF\001=\245^P=(w\010\275 \241\307\273\343\312\022\275\355\354Q=YK\003\275\032\034\347<\266\377b<J\230\353\274\247\035\243\274\266\274\332\273\354\200\010\275\001\\\362\274\274\345\366<D2\002\275\2650\357\2744\244F=K}N<\r\266;=2\035\013\275%\236\333<\276\211\r=\rl\321<+\312\355\274\207\347==ZaU\275\301R\246;n\333\006\274\266\224\225\274\360\302\265\274\024!\216\273\035h#=\202C\257<\324\373\'<\343\016\271:*\257Y=\311\316\241\273\267u\213<lW\333\274\376z\010<\3271\302<\344\261\242<\006\366B\275e\273|;\272,\245\274f=\3549\315\337,==\276\275\274\232\3327=\356O\334<U\315\006\274\027\260\310<\024\245\215\274Md\317<K\0033\273Us\252<#\332L\273\332\225V<\2565\324\274\313\307\n\275\032\254X=\262\370]\274\370\264C;h\2611\275\211\242<\272\252\261\334<5\216V=\306\372\000=u\301\227;\231s\030\275\253L,=\311)\352\274\255N\201<\333\0207=D\036*=\235\205B=\317\347M\275\340\375\351<\006\334X\272\014\317\315<2.3\274\310n?=4H$\275\366\211\223\274\275\376\241;\307\315 =\255f3\275(\006G=\315!\013\275yv\204:b\204\254\273q\035\344\274\246,\241;\257\231\200\274Y\316W\275\375\241\020=\0331\202<\3449\032=i\217\032\275\356O\030;_\317\317<9})\274\231S\010\275\371&=\275 hE=\3037\263<\204\325\230\274n\014\376<\233\322!\275<\277\251\274#\3365\275_8\001\274\251P-\275\226U\212\274\316\177\314<sL\210\274q\370=\275\237\'\000\274\201\"\255\271Lq>=\342a\017==]9\2756\024\034\274\245\250\014\275\037+\272<4V\224<\001j;\275+\024\203<.\365\373\274\032\222\360\272T\253\235\273\263\355V\275\241o\314\274v\311B\275{\347E<\332\376T\275r\322\000=~\317X\275/\265P\275|\264\006;EZ[\274\362\320\311\274\3576\314\272m\204::\226\2424=1\374\306<\305\207\n<\312\367\001\275`pW\274\260\345*=\303\331I<\251f\256<\225\030\035\274\351\034[=\027\333\253\272|/X<Xk\352:5\274\035=\021\304\t=V\323\003=\300*I\274\342g\302<?zA\275\220G\000\274\214\352\304<\177q\220;\230\323B=\230\315\347\274\230\305.\275\274\351T\275\271^\264\274\340\356\316<;$\307<\304T\r\275\005\272\211<\313?\036\275\220.\032\275\024\212\243\273\251\201[\275\010\323d\274\247\005\360\274\242g\\\275e\356\004=w=\034\275b\0065\275 \201T\274\2663#=\314\2718\2755l%9e\373K\273\374|Q\275\014\013\324<\377l\263\274\332\241\010=\314\265i\274\025\343\323\274\204,\034=\334\250\266<\351\t\017\275\307\230\260<\317\330*=\263p\265\272X\207W\275\305%\272<*F\216\274\235k\255<P\222$\275\340\261\366\274\020\250t\274\241-\030\275\255-v\274\274\0035=\323g\263\274\342\257\275<\251)\356\2736jP<>\"\233;U\276\r\274\227>G=6\211\037\275N\261B\275\17743\2675\264\356<\205\014N\275\035^\036=\357\230\\=\301a[=\211f8=4\361\033\275U\243\207<\257\364\252\274\312\004\3269j\352\253<M\207W=\254\357\223\272,\207];C\0140=\270\233+=\237X@=v\351\333\273\272\341\322\273$|@\275\210\227\233\272\037f\300\274k\206\250;\252\365\026=\013\317\022=\035\020\206\274WsL\275\357\304\257\274\374\005a\274\201\243\021\275\345\325?=\304/\007=^YH=\253\340\251<\006\177\010<b;\002\275\255\035<\275t\241\331\274\260\346[\274\252\341V\275%\233\242\274\307K7=u\021\330\274\232d{\274>\253\004\275\353J\310<\206`\214<\246T\265;q\343\031=70\216<\221\304N\274\302\245\246<\003\311\376;\203QP<8\365]\274\0108\014=\252\331\317\2744\243\345\274V9A=\371}<\275\374\245!\275\007\031\210<\263\377*=ox\222<@\004\210\274\203\276<<aH\241\274\201\357f<m\376\016=\375\232M\274\\i\311\274\223i@\274G\2327\275\013\257\257\274(\211\244\274(\303O\275\216\263F\273\374-W\275\255\325\252\274l\016\314\273\361\326Z=\224Q\036\275,dL<\376N\305<n\366\\=LYG\275\316\3378\275d\272\244\274\316#/\273T\017g\274\016\022\r=\003\336\204\274\177s\315\274T-\334<JQ\207\271\\a\266<\032L\330<\336\021T\275~\200.=\313Z\365\273\034\265\013=W\014\024=;\215\002\274\254.E\275\210\032\t\274\213\377 \275\025\347T\275uYV=\352;\362\274\320>\221\274\313T\025\275\ru\005\274\341\213\350\274\013\\\250\274ROC\274\245\017\212\274[\207\334<\002\363\030\272\253\232x\274\331\035\363\274\"\373\334<CJ\230;\374\302\002\274\214\010\357\274\013\265\306\273\014\256\031\274!\251\353\274\'\370J\275\033\014B\275\3149\010=A\205\267\274\217w\032=p\252\202\274\372yA=q\355\322\272\310\340\334<\356`K\275\253\263\200<\305\236\"\275C\363\337\274\3235\232\274^0]\275\300P=\275\375WL\275\2116:=\334\244\360<\344\\K=l1O\275]\301\214\274\212\031\367\274\302\001C\275\244\027\341<\016\207\006=\221~\204<\\\355\002\274\026\2313<A\3345\274\324[\030\274\261\2045\274\357\226\247;\030\336\241\274\340_V\2757\235X<\203\237\213\274\222\r\264\274\371\357M=1\215\327<\026\266\033\275\321H%=h@B\272\\\035\3519;\266!<~)1\275\234y*=\007\273%\275\212Q\023\275~\206\236<\200\246\245;~})=\207N.\274\016\316L\275(\207\032\275U\306\245<\247\020\002=\362\365E\274T\302\017=\266>\002=\'R\327\274\200T\365\274\336\300\377:\366\211\202\274\232)\264<\352\206P=O\304\230\274\003\241\265\274n-\330\274r\014\022<n\254L\275\312P\007=\t\325s<[1Q=\204\233*\275\010\\\r\274\2320\326\274\320Nu\274%\320B<\014\221\322\272\253\314O\275S\t\270<\300\327E=\257w\224;T/\013=\370nS=\362k+=\324l\220\273?u&\275\341S@<\263E\001\275\252\306\034\273\302\025\370<VEG\275\010,X=\340r?=\025c\022=\343|\t=\276J8=\231\307~\274P\314\234<@\230]=V\357\267<\254\006\255<\246ew;\2702\376\274\361\342\002;\177\367%\275H\265\334\272\336\336\001\275\353\000\217:\261\232\341<\206T\001\273\205\021C\274-\271\025\275\375\363#=a\242\372<\201\316N\275\267\343)=u`\014\274\342m\254<\014\233\206;\244\236\337<\260\366H\275\363\030\007\2754\252I\274\302\375G\275\022I\255\274I\237\272\274C\177$<\361\357\217\274\266\274\013=\017\np<G\226!=\225ic\274p\252\363<\004l\253\274\3459\352\274\352\224\243<<\"\335<\030\010(=c\267\253\274}\006\244\274\237\315\367<I\360\031\275\201uV<\261\271\211\274-&8<Q\341$\275\213\211\227\274(#\t\274\230\'\266\274\312\264\353\274]\364\004<p\363*=(\373\t\274+H\243\274\r\306!=\333\335\374\274\336Cf<4\\e<\336dB<\355\311\027\275\350\235.=\\\3539\274*\253\037\275(\214@;Om\225<-\312M;8\275-;\256\331\342<\251\350\244<q\365\013\275\230\335\342<]\235\014=\350\273<=V\322I\275o\267_\274\340C \275\344f\'\2743\356\007\275\244\025\027=\3253[\275c$\002\274\355\374\311\273\033\216\010=\n\010\310\274,\233;;8l;\275\256t\236<\327\335==Tc\217<H\341-=0\003\332<$P\202\274\370[v<;E\036=K\210\344<\005\\V=/\320E\275u)\\\275!O4=\204w \275\034\324&\275\204P\245<8\325\034\275\304\023B\275KDP\274\002\252\026=\006\355\032=\306\330Q=G\361\243<8E\240\271\317\276\226<s\271\205\274\247\342\306\274\371\314\000\275\353\014\001\275Jk\032=x\023\341:y\253\003\275\010\177\023=]n3=\0053\356\274\336\017\\<u\252\014\273e\315\311\274\267\315\250<u{\370\2743\023\3118c\372\275\274\3066\341;\30584=}^7=\251t#=\306R\224\274\305\3527\275\245\373\321<W\334\021\275P\256\037;\0276\313<\024u/\275\343s\271<\301\3255;\206\206h\273\345\3508=\367q\r\275i[#\275\213\2622\275[m\023\275\304V\320\274D\253$\275W0\243<\275\366]\275\'.\265<M\177\365\274\"\261C=\271\340G<s\344\310<\253\350\374\273LUN=\337$\022\275\010} =f\277+<\253D\347\274\3661\353\274\275\374)\275\235\323?=jP\030=\254\333T=\217\210D<\273\271\233\274n\203\352<\221\271|;\255\2551\275[\350\321<\315\354a\272\336f\377\274~\313J=z,.\273\"2\240<\'+\026<\372\265;\275\216\371u\273\316zA=\347\\\\\275\324\255\001=\260\222\310<k\202\364\274\232\005\001\275+\r\233\274f\212n\274\010O$=U\364\021\274\\w\007=\323\201\006=\006\236\253\272\205\3421\275\356v\257;\376\276\205\273p\314\017\275\345\3554\275\313&\021=\006\024\370\274_\210\374;<\363(\275%4\343<\272u\006=\351\263V\275\266v\037=lw\n=\005`\270\273&\000\245:*\262\021\275\210\200\n\274h&/<\216v\273<\353\034\246<\3544\267<\275\005\026\275\271\273%\275\335\373\251<\317\230?=\262\202>\275\277\2612=\365\243\006\275\306\"\326;*1\302<\223\r\245\2717TK\275\355\245\007\275\375\2319<\t\224O;\010\276\257\273\323\\\211\274/\355\021\275\214\202\321;\232\013\n\274\316\026\325\272\267\322\242<\032\305 =\341\304\366:\237z.\274 \005-=|\2111<\234\317\337\273\243\\)=&\221\033\275\321\362U=V\021\010=P\257\255<( \003\275\n\332\213<\244\271y<J\304Y\275\\\375\'\275N\0305\274\rm[<:{v\274Q\361\010=\224h\236;4\2404\275\341\334\246;\227GG\275\200\200M\274\241\222\031=u0\'\275)\362\010=vV\035\2751\217L=\022W\304\2747N\214<p,K=\367]6\275F.W\274\002^\270\274=\241\005=\201Fu\274\262\231\013<f\356^\2756D\333<z\334Q=\342K4\275\215\331-\274\346KQ<k\251\034<\207\371\336\271KW\233<\231\234\222\274\005\3647=+\033G=h\027\363\274\006\006\036\275\351gK=\027\033E<^\342V\275\373\345S\274\272\221\022\275\351&[\275b\335\346<\371\351\332\274\347\023\034\275+z\016=ew\347<\365\030L=\025\025S=\274\0139\275&\341\301\273\320\275\300<\000\376\202\272A\312\272\274\256k\252\273kcK=\306I\006\275\242]<=l\366\270\273\345\246\220\274R\263\346\273\345LL\275Z\360\336<`0\037<\020\004\020\274-\333\034\274\356C\346<\023\2418\275#\t\273\274\215\236\324:<\243%\273>4\'\275\217\270\207<+5\247\273\257Q3=\026\262H<\225\034\314<\362\373\267;\376\364\036=\300\3042=\004M\324\274\323\263[\275>\213?\275x\252\007\274\254\276\324<\000\277\026\2759\306\017\275\301t\033<\014-H=<O\'\275s\330\245\274^q\321\274T\323\'=RD\006<;\363\273;\352\023 \275T\036@=\241\036\363\274\225H\n\274\250/\370\274V\331<=PV3\275e<|;\207\'&\275\227Y7\273\231[\230<Y\t\003\275\033\246P\275\363\320\343\274\232\037\232<\034\351\211<\221!\272;U3\024=z#\017\275O\230\026<\243\277\035=\207\306I=D\3116\275X\330\254\273[/1<\263(\\=r\237\350\274\2657\253\271\341\200(<]2]=\020&4\275\210\202R\274\2708T=\314\030\227\274\025]<\273\226\232\253;\240\267*=t\356C=\370\234\037=\260\263\005=\347V%\275\354\212\330\274s\352\017\275\232\230\276<i\3731=\216[\001\275x\303\365<:e\346\274)Ru<\206\346\234<6\350\320\274\033v3\275(K\n<\031DG=\220P\024\275\032\301\353;\353mT<\371\004\251\274\003o8\275\275X\361<d\023\234<\022\353\206;\004[\036=D0:\274F\250\023=;%\014\275\374v\355\274\350WZ=\363D==\251\'\346;]\212\322<\255!\'=\264\2165=\344\225\352<k\211\251<\315\376\313\274\336H\\=\006\367\020=\272\217==\357%\342\274\365F>:\342\010\315<\211[\241\274\233\3778=\207H\266\274\267\0013\274\373\363\300;\r\306\317<{\333\223;[\273M\275\241*\323\274W\265\r=\303\265\215\274\212MP=\302\023\242<S\274\335;\242\005\273\274\256\tN=X\246\227<PA\375\274\325\342\004\2759rW;:\032\020=\277\000\002=\302\274\242<ce\310\274j\350\217;\230\354I=\\\036\021\274\373\377\327\274\327\275Q=C;Z=%\277\241\274r\001\'\275\360\374-\275\307\3067=\313\243\002=\246\335\250;\225\335\020\275\003@\225<\216]\331\274x\020\023\275\0178\360\274\270E\246\274\202\311\001<\220\235\231\274\035\034\025=*\032\002\275v\016\244:\275\301H\274\007\264C=r+}<\262\257T=I\206\312\274\276\376\212\273\370}\033<\2655\022=\207\022\273\273\226\275B\275\306\357U\274\273Q\006\275>q$\275\242\301\005=*\311\002=U1\203;\374\320J\275\364\020\350\274I2\034=\304aG\275\250\237\014\275\r9S=\2459j\273_\265<=\211\266\200\274\206\333\007\275}\310\274<\347\211\341<\277G\310<b\235?\275\206U9\273~b\035\275I\310&<\331\256\004=\203\333Z<e\211\006=\367\206\244<,\2108=\345\275\032\275\314t\265;k\001\001\275v}#\275\232\3446=\335BZ;-E\224\273UR%\275u\014X\2753\3317\275\310\273u\274[\'Y\275*8\261\274w\274S\275\355\341\037:\014\352\275<]\255?=4\355\341\274M}\257\274\320\240\350;K\030Y=\033\005\013\275\264\225\366\274@iQ\272\025\2325\2750\263\033=\321\\9=\243\306\234\274;GH=\357t\351\274\302\245O=\367E:<\245|\035\275\223L\370\274\316^==R\0311=\346\252\346;\265\315\315\273\312\2247=\333\234\n=\t\203\007=u;-=\00547=\274\316n<\205\301\212;\006\257M<\217\322\031\274\242v\361\274\353\254Y\275\002\000\266\274\225\\E\275\311!\207\274\025\304\010\2755\032M\275\265\026\r<)\232{\274\035E;=\346\210\361;\217\324\337\274\221 J=i\010==\212N\323<\262\3648=\346\304\202<\0372\001=\323\034\r<%\013Z<\217\022>\275h7\034\275\211^K\275\032\036\025\275-S\024=\241z\251<y\372\222<\352\214\"\275\230\031\342\274\350\301$\274\030\222\036\275\353\224D=.\353v\274.\3617\273\343x?\275\034&\240<\030\031\017\275\027\227\207<<>\322<Q9\037\275+\357==\377\361n<\252\231T\275H\245*\275v\333\n=\315\343O\275M\025\024=QaG\274K\3043=\342\322P\274\231\215\342<\215.0\275t\276\261< |\037=\331 \367<\035\317V\275\373i\016\275\372l/\274\237\236\366<~E\332<\232A\355\274\303PK\275G-]=\2410\350\274\373\214\'=\326\2573<%\323\255<8k\352<2[N\274si\272<\014z!\275\303\267E=\240\203z\274r\344A=\366\206\020\275q\242T=\rY\273<\007BE\275k\365\260\274i\357\256\274\355\276t<\341x\235:\215e8\272\205\371\337<\030]D\274\365R\322\274_\013\361<\261\323\247;\372\376\325<O\311Z=\"\032\356\274z\332\353\274\367\030I<\243\2077=\273\005c\274c*\346<\354M\006\275\253\021\230\274\r\n\t\275\n\321\014\273q*\003=\334\240\326\273\243\006\"\2758\326%\275Q?\014<\254\263\037\275\216B\014=\274DV\275\330F\006\274A\203.=7Z\316\273\260\273[=\362^+\275\376(\031\274\311^\326< \356+=\032L\220\274\356\240\310<\237\231\370:\320:R=8I}\274\336\224\360<CAB\275\377\r\222\274\272\264N=1\rW=\205\267\220<\224\240\021\275D:\244\274\304\373\326;\352\323\017\275\004H\013\2752yE=\224\017\032\274\275\360\023\2751H\325<\361\004\216\274\266c\251<G\275\304<2!\344<\354\374\250<\257\025S=\274\335\302\274Rze\274\301\205X\275K\377:\275\237\370\351\274\036?D\275\230\300\225\274\272\342];\270\027M\275\236\2421\275\032\201\240\274\3348<<\233\0303\275\374\025\363<\235QC\275\216AC=9\024\013\275\243\'\000\275u\177\016\275\305\345\267<@\260\340\274\204\205\032=6\362\026=\353\276\"=\247[\260<\330\n\353\274\343\204]=\310B\031=\263o:\274\372&^\275+`\034=\211\271O<\317\325\034\275\366\322\026\275\3611\303<\345\213\026<\302K\017\275\313\214\363<\213\013+\275\377\321\306<D\266\273\274\263\300\344<\263\033e\274{\007\327\274\362t+<\206\347\254\274\373\367\032\275\032\237\260\274Eg,\275\340\220\345<\354\375!\275\261\0319\275\201[\233<\217ZO\275ucP\275\321\275,:\010>w\274tS\n=\306\375/\275G\205\007<za\013<\263\244\314<\362\213\365;\371\256\307<\364?\262\273\226\303\337<\357\010\356\274\022\036\\\2758\016\367\274s|\005=\034\364X\275c\261\002=\201O\311<\276b\005=\255\252N=\251\335\321<A\327V\275\371\253\000\274\315\373\013=\350\221\255\274\2741\214<q\324^\274\214\363\303\2740\260\014<\365\317\036=\273=&=K\224\200<\216C\361<w\335\321<9\354\251<\353\363C=\002\224C<\322\220\323\274\350\r\373\274\206\013\262\273i\323%\275\235\374\360\274}\010\353<\340\207\254\274\177\320<\275G\354\241;i\035^\275\nq\314<\2001\003\274O\326\233;\206\302J=\210\342\207<D\252\341<\310Z\206\273\\\262\207\274\372d\021\275\303\255\203\273520\275\214\036P=\253\265\031\275\303\242\341\274AG\003<\274\365\021\275\353\017-=f\335\177<\20135=)\2427:\363]\020\275j\315\206<\361\024\204\274\035[\002\275-Mg<a\2478=\021t\270<\367xP=\2776\376<\r\345J\275=\314^\274\25313=\365\242\032\274\202\251W<\217,>\275T\023I\275\261\273\337\274T(\000\275No\373\274\361\251D\275\247\331\325\273\243\311J\274\205\217{;N\241\304\2742\240\000\275\257\201\214\274\335X\003\275\2458$\275\014\203\"=T\nC<\2260_\275>\2521=\317o\357\274\n\261\345<\264\355\272;\020\201\273<q\246\347\2735\003\024\275m\225\016\275\236\324\274\273P\244\'=\243u\235\274{F\013\275\363M\316\274G\304\327\274*r\341<\347[\237;\0001\376\273#\274\242<\204\215\t=CV\376<\250\347\212\274\252|\307<\230*w\272z\242\262< :\025\275*\217\262\273/\216\204<L43\274\305\016[=w\373V\275-\304\267<\222 ?\274<@\272\274\373\013\274\274\016\303\235;-2:<\000;\027\275\2554P=\020\314\017\275]\311\343\272\032DI\275<\014\010\275A\324\337<7\310*\275\241K\253\274\346\021\037\274\306\247\306\274\001>\000=-\347\241\274\234\371\235\274\207\014\277<R\262]\2747\367\352<\243\214[=\352a;\275d\201\200\274BM\020=vy\010=<*\003\273>\2435=\275w~<\305\031{\274\273$Q<\350\273\345\273\313\3777=\177\200P=ak\237<C>\017\275Q\364j<f\313\230\272\2764\024;j\274\034\275\333 \034\275\021H\005\275\"\255%\275n\253\377\274\374\333\276<\003\037\313<\360\'V\275\036\200)\275\270E\t=0\353/\273\342}\211\274\232\010\276<\177=#9\233\267\030<\325\272]=?\347+\275\253\2565\275\272J\003=\325)#=~\231f;\351\026\327<]\335\025\275\323\264 <\3114\252\274\312\211\362\274\275\360V\274\341\250&\275\035(Z\274\226\tq\274\360z[\2756\362H<\2526\002=\275\203\325\274\003 w\273z\020:\275$\305\264\274.`\177<\035\021*\275\365\236\036\275@\250.=\023\300\026\275\267b\337;\325\010T\273#DC=\022\265\306<\'\205A\272\260k\333<C{\t\275\037$\230\274\374\250\023=\036\241\327<i\240\243\274\327\277\225\274o\207\025=\355\312X<=!\002\275\344\311\351\274\370L\326<w\220\r<q\332`\274|\253\353\273\0234D<\177D\247\274\351\016\203<(\203\022;p\232)=/P\032<\254\217\274\274[J\014\275|hz\273\010\302\024\275\311>\256\273\020x|\274\362TD=H+\020<k\0002\275\356b;<O\256\206\274\243\267F=\314\271v\274\350\255Y=\255\002.\275\212\364E<\203F\221\274\266\231Q\275\356\220L=v\353M\275\010\267G<1p\024\275\251\307:\275\303\332:=\367)\233\274j\021\021\275\317\207\307\274\372\177t<\231\231(\275\273\217\301;\201\001\370\274\213w\025=\333\276\243<\341\250p<M\241[=-p3=L\'\255<\340=#\274\304\032\005=\252^\201\273kf\272\274\333\254\022\275\216\256<=\274\331\215\274\215\213\023=l\3504=W\351\325<\365\005\016=;\353\337<,\303\\=&\221F=\227;;\275\032\240D=\317~\t<\016\014>=B\3549\27505[=\374\231\364\274\336R*\275\r<\017=\276\205\004\273\247Up<\346<Z\274<m\026\275k[\273<\'\340V:\361\244\313<\3144\004=J\337\n=GI\237<w \005=\205\312$\275\316B\313<\037*\224<\307YL\273.\337\275\2724J\177\274\023\256\003\275C\023^;\337\030D\275\300\205\004\275T]\032=\370g\311\274\237\213,\275X\017\036=\002\t;\275\275\375\355<\":M\275\276f\257\274w\253\3348U\036\002\273_\014K=S\246\216<@j\275;N\001:=\233_q\273\233:^<(\210+\275\214\201+<\201\367\313<\233\033Z\275\243OH\275\211\264\350<\020\242\250<]\275\361<\217\245\r\275\317\230\332<E\323\335<`r2<\261\234\007\274Q\250]\275\002\260)\275\236m\r;E\274\271\274$L=\274\244O\366\273\273\037\037\274\226\233\301\273W\374\017\275\023\325\034\274\220.\207\274a\023\336;\335\212\367\273\272^\262<\001,d\2748\370P\275\253\222Z\275\376K@=\336}\007=l\275\233\274`:\265:\341\226\310\273\236q@<\371\030\326\274\303\004\225<fkH\275\255\004h\273\006\002\031=\274\336\006=\364\032\000\275P\220T=Rn\321\274\256,\220\274\214\325N\274\333\251U\275\017\347I\273\307TO\274\216\017\006\275\357N\223<&\305\036\275,\344\241\273\000\027\005\275\321U\017<\naF\275\355\t\336\274\177\352]=\244g\247<\222\006\020\275\3258\300<\331\246\212<\003U\211\273\361\351\034=\364\362&=\237\352\031=-\345\243<*x\365\274\031#\254;\234\314\356<\007\2026\275\025\235\232\273\0019#\275\034i\301\274\357=\033=\272\022V\273\223\311\373<Q\266!=\310$ =\344\211\365<\375\343F=y_\"<F\336\231\274\334\322M<\241\260B=\375\260\300;\023\237V=\033b/\275\273<,\275\364\357R\275B\223\005\275O:g\274\373\321\363\273\266\'\013=\3112\266\273\357\323L\275^\014\";3\371\010\273M\365\"\275\261\244\t\274K\321\207\273s)_=\032\271\337\274\241\273\205\274\342\360L<\260\020\003\275\364\274I=*{\335<\275\364\r=t&f\274\305I3<\263;m<\036\351U=\200\263\305\274\251QH\275fb\262\274\265\215s\2731\331\262<hn\275<\216\r\013=\26219=\014.Y\275\2505D=O\257\022;\361\245\310<\007\324\035\275[\205\\\274\243\017\211\273G\002q<)\n\3229\312\212R\275\204\263\017=e\373r\274\335\332\214\272s\035F\275\314\036X=\007\031\004\275\203zO<\345\267\276;,\211\250\274 \304^;P\0234=\264\243]=\234Z\275<\266\205g\274\250\252\216<\234\014\"\275\2003*=\366}\007\275\367Y\"\274\030\222\006\275,j\314:\365\324j<\364\037O=_v)\275$d\351\274\205\036];E\000\334<\\C\315<\211\377M\275z\256I\275K!\252:5Q,\275\013q\005\273\304\350\265\274\3354\333<\262\003F\275a\363j\274\370\030^\275ee\r=\266*<\275\275\310\214<\020\256;==\330\330;\032\215\326<?\210F\275*\355\025\2758/\255<\344\377\"=\231\367\\\274^Z\227\274\343\0262=\363(3\275S\221\267<\307\226\204\273H05\275\236J\323\274\332P\200<Y\210\245<\365c\337\272\265\360\236\273\367\3102=\226\350W\275z\257\227\274\25435\275:\217\211;\353\326,\275\013\265s\274h\024\304<\377\014\372<@E,\275\305+\315\274G\343Q\275\314+\023<\374:\377\274\337\370X\275\333\003\302;\204\rI\275\334\225E=\nHF\275\336\251\r=*|=\275\354\244*\275h\235\344\274w\240\313<}\364\030\275\333\334\260<F\342D=\345\257Z\275\256gL=d\022\204<\202\022\221<a\210%\274y\027H\274\022B\273<(J\027=\255\303^=P>S\275\361-\311\274\305U\374;\323\203\023\275\230\t\261\274@\236H;L$\024=\"{\327\274\352\327\210\274\rj\254\273\204\374\"<\206\204\'\2753\243\'=\305\0179\275;\254<\275P\304\201\273\261\272\034=\364#\252<8\202\355<\263\267\241<Y\376[\273\225,\224<\265\324<\275!\017=\275#^!\275\004U\345\273\210_\355<P\n\240\274\324\340\023=\201\024\022\274\372\024S\275\t#5=\t\341W=\241\376\221<\002\325\006\275ZD\272<\273H\267\274ij\300;\223F+=\\\017\006=\250\215\322<Ih\233\274<\320\246\274\200\2034=1\361k\273d\023$<J\260\241<\032\273*\275%\034\023\275\300\373I\275VA\261\274N\343\030<\026E\257\274\211G,\275 \335\216<$\201\352<\300JU=\265\235\336\274\273\333\031\275W\253\304<0\t\207<\345\263\216\274p\230/=V!y<\263\247\236:D)I\274\273\372\376<\357\324I=m\371\242\274\365\014\026\275\264\3034\274\350\266)=X\305F\274\361;\324\274yM:=\230c\267\274\"q\265<\233\220^<r\322\300<ZU\371<*\363%\275\232\316\020=y\t(=D\325\350\274\376\212\205\273\254\357\t=XNO\275%\322\334\274\256GI=\037\353\301<\227\303\027=j\341\203<\241\301@\273\310\320.\275I\2059\275\024\3273=6\276\003=?<\361\274d\360\321; \376~\274p\275|<\244\377\026\275cZ\272\274\252\302\310;\347\342\216\274F\216)\275\232\357R\275r\274\023\275\334\332F\272\360w\025=\272g\027=\010W\010<\242\3447\275\246,y\274\234\264\263\274\207*O\275efn;\303\277\227<\345\014\247<\344\217%=\226\265\333\274\274eM\275\364C\254<\315]\305\274ix\316\274\352\021/\275\357\177^\275\241*\366\274\243\345\201\274<\245y\274\333\365\320<\014\2708=\201\236E=\231QK<\334\nK\275\217\370*\275g\206(\272\364\027F\275\305\177\234\274\231*\343\274\204\252:\275\023\210\353\274m\214 =\373\343\317\274\211\334F=\277\346\212<\0334U\274\263\215\222<S\210\351<\374\224\035=G\003%=s[>=\007\211r<)[6\275\227\217)\275\272\204\321\274Y\223\314<\2647\306\274\302\216\r\275\330/\r\2740B\261\274\247e\360\274\032d\336\274fEC\275*\177(\275u\n\341\274\376\256\\\273\321*;\275\344\\\356<\004>D<4\013\334<>-[\275~}\024=\031\315\342\274h\277\240\274\332;D={\227\365\2732f*=\272}L=\010\024?\275`\242\036=\351\3137\275\000\332\220\274)6^\275\025r\036\274\302\215?<\346\305\240\272\353\200\261<\374\261\213;\nE<\275\321\260L=\033\013\017\275\032\000\364\274\373\247\007=G\213\000=\233\013\213\274(\013\032=X\255\266\274\313:\307\274?\220t\274\"z0=\214\353\335\273\377\340\347\274Nd\016\275\013g\314\274\0242?=\257\244-\274\247{\201;\022\021\327\274*n\023=\226\317\002=\340.\035=Fj \2751\\\002<\212\t\305\273H+_\274\003\231R=\033F\006\275\307\247.=\303\252\346<\252\266(\275\235\211\207;eAC<\357?\020=UI\313<\354\220\270<)\224\234\274\317\024\344<8\026\034=N\270*=lp\004\274\320\376\233<m\2643=\237%\035\275s\022\t=`\001\256\273L\0015=[\360\027\275\2258\033\273\3213F=\320\372X=\002\314\230<9\024\326\274!\331\037=k b\273\350\221x;\327\267\\=\250\206\023=\362\340\223\273\227\223T=+OJ\274\033PT\2757\256\360\274\234\343\003=x\217!;\374\020\247<\344\010h\2747-M\275E\244\306<5\275\026=\037\\!\275\237\367;<36\037=\352\203\021=\314\007\372\274\347\000G=pC2=)\024A\275QCc\273\3339\020=\356\023\326<gA@<\2462&\275:\274,=\206\0365=\365\327\216<n\033E=-\004\241<b~^\275\035\307\341\274\263\345\007=\334#\251\274\341\2370\274\255\335\223\274f\3106\275]a\"=I\215/=\324J\307\274\200q\204;P@/\274\tk\302:9u\352<\325gE=\026R\207\274*\312B\275/1\034\274\213\244\241<\201W\006<Ap\274\273J8Q;\365\366m\274+\225V\275p1\324\274\323\204\364<3\314*=X\2620<\2670\276<\301\231d<T\3709\274q\030u;\346\341F=\\\365\370;/\365:=\035\375(<\307\257`\273\037;.=\273\023\034\275NG\003;`\265\010\275^\014\000\275,MQ\2753d\202<\271\010\244\274\351]:;\354g\275<%AR=\306\2223\275R%L=\303\220\010=\260\254\003=\211\301]=Vk\372;\030J4=\202\000\367\274\255\036l:|\337H=$\251\031\275\215@I;\t`\010\274^\306~\274K\376\374\274>\262K<\"%\272\274\004\nR\275\221i\t\275\342^\232\274\215\004!=\371\027M<\313\335\005<5\202\241<\246~\314<AN0<\251\250<\275\246T\342\274\326\301\005=\007\013B\275#\213@\275\211R\266\274h\023\376<\210\037-\273H\277j\274\340\261\312\274,\356%<W/\261;\360\3647=\317\366\023;\313r\026\275\343\356\017<\223\341X=\244\001\372<d\254\367\274C\036\365;\230t*\275\036\347%<\334\200\242<\260\177y\274\022G\002\275\376\361\323<\\\034\020\275\260I,<N\'\235\274\303\000/=A\006#\275\372\250\353<\233\240\342<\312\346\037<DZ\030\2752g\373;\303\031\375\274+\221U=\366r\027;tH\240<\304f\320<\306\001&=\201\216\030<v4\303<\220\"\034=\371\264@=\362]m<\035\237\203;V\262K\275\032\312\013\275\304\301(=\177\342\354\274|\356Y\275c\202\314\274\373\233\311\272h\350\030\274\375\r\023\275_\327%=\312\221\023\274Lq\036\275\306\303\274<\254\237\323\274-\345\217<\33322\275\252l\\\275rE\311<a\263O<xr\253\274X\264\022\275\376g\275<O\207\033\275d\330\256\274\354rQ=\rF\007=\031e4\275\037\364\003\275\253\353&=\275\224\242<C\002\021=\314\373\360\274\021\211\320\274\235\022\301<\243\032\362\274G\030\213\274\271Mx\273\257\017L=\216\235K=&j\023<\362qO\275\241\2408=\3252\321\274\207\363\2319h\351\r=\336k2;{qY\275\305rA=:+-=\361\275,=\371V\037\275\205|Q<%\\\360\274\340\242\217;\344\324\337\273\235j\344\274\337kR\275\225\3506\275\244\034\252\274\205\021\017\275-\035^\275\201\302]\274\367t3=N\037\262\274]\355\365<\305Q0=\366?\021=\243\343\037=$\373\036=b\262(=\243c.<\001\331V<1\221X\274A\n<<l\275F\275\224\n\263\274,\335.\275Q\017\206\274\240\001,\275\304\321;=\004G\323\274S{I<\020\355I\275_\236K=a\211\213<\334\205\r\275\277\360\377\272\321}\026<\306K\030\275X\353\n=\357\225\251\274W7T\275\3239W=\2572B=b\232<\275\031\300\352<Y\022\361\274\320:\300;}\305\223<^\235\032\275\356\230\240\274\221\030\004\273\210\327\"\275\235w\335\274{I,\275V\360Y=\033i\023=o,\022=L\332s\273\016\341\023<\323\227\205<*g\244\273\237K%\275\032\306\'\275\342,#=/&F\275g\266(\275\314\210\236\274\'\313\026\274\230\010O\275\"\271D\275\221~\373<\362\272\323<t\313\226\273\0072C\275\231\032\367\274`/%\275\343\003\033\274\335\027#\2759\203\036=&\007\210<\231\027\324\274,z\351;vD<\275\357\277\330\274\243f5\275Z{\376;\364W\000\274,\253d\274<\203%=s`\035=t)&\275\260\027\026\274\251\035\"=\277\276;\275N\032\340<\314:\027\275i\234\006\275w$%\274f\000\321;.n\223<\227\027\002=8\336\253\271B\211W<\236\220\252<\223\303Y=\201\350\317<\335q-=\376\033\007\275G\375;\275_j\336<:gY\275\2654D\27558N\275\273\376\327<nU\267<h;\351:\33097\275\0346G\275|\335t\274\211\351,=\360\220\"=\177\037\"\275\034=\210<y|]=\3734\001=\337\222\003<\340\212h\274\300\360?\275,t,\275\306-\r\275\3254#=!bA\274\rc/<3\264\250\273\3073?=\250\357\005;\227vD=\373\0016<\036JZ=\221\317*\275\314\370-\273\314$@\275\265u\013=T&\306\273\211k3=9w\003=\310\350,\275\335x\033=\006\351>=\037\212\\\275\324c4=\362\0328=\321\363-\273C\2641\275\372\273\036\274\265r9=N\r\344\274\307\242\356<\320\'B<c\370-<J\024C<\262~\032=0\327\374<\267\3176:\333\263\247\274-J2\275Y%:=\216\234\200:\026\232c<C\364(\274\002\242\244<\241\"0\275+\215\205\274o\017\243\274\211\256\341<\020\356\023\275\033,8=\225\277\314<,^\005<\225\205\242<6\212\016\275\203\323\256\274\26593\275\010k\260\274\226\263[\275;_\003\275\022z\335<^\236\364\273\322d\310\274Y\324\306\274\274s\372<\211\037\334\273\213\307L\2751\322\312<\363\352\321<\302\322\200<\177aw\270+9s\274\026=<\275\210\331\345\273)\3162\275o:\354\273\356o\r=\306|\274\273\037\2237\275R\363\224\274B\376n9`\336\267\274\010\240\016\275nF\034\275a\0247=\"\370\260\2748T_\274\253M\024\275l!\025\272\005!\007=E]8=\334\t\024=\306\260\345\274aM1=oF\025=\3246u\274T\007\314<\333\346\031<\203\007B<\305\242x\272\316M\277\274\r/\\\274\217\243K\275\303\220H=\320\3745\275\003(7=\233\032\020\275\353\251R\275F,\376<\003x\"\275\377\217\332\274\035\234?=\003\210i\274\367\332D=\216\331@\274\271\204t\273\234\033K=i\236A\275\255\307\025\275\362\202\265\274`v&\273\304\345\022\275\364r|\272d\343\001\275L\217\214<9\326\221;x\217\215<\337\316\026;g\303\023\275[\004\001=E\371\247<\222\235&\275\361\363\037=DFK\275\353\034\314<\266=\036\275\355\n\214<82@<\245\264\001\274\240\256\350<\276C\266<\226\312\317<\003d\305\274\373\334U\275(\221\002=\2234A\275\206[|<\n-\265\274q\262E\274c\213\257;,^\022\274\337SE=O\263\336\274\t\035,\274\230\005\317\274\366\316\354<ey\214\274H\3727\275\206\3629\275\221\034?=\201\236\377<\363\333\"\274\274\333\300<\002\024N\275\370\377\032\275\301#.\275\337 \356<H\236\'=\0275?=\363\003\"=\310\235\036=\014\305\231<wE\024\275\372\356U\275\217y\023\275dD;\275m\0207<I/\337<pm\006=\356\344&<|\250\257<\341\256D=\031L!\275o\324\354<K\372!\275\252\274[\274\242G\213\272of\236<\311\235\037\275\2447\215\274y\224p<\377\304\371<c\2328=\224`\232<m\017\322\274\331D\006<J\3245\275\257\005S\275\362:\347;\242\364\222<\004o<\275\364\303\000<\320T+\274\r\324\313\274\370\361I=\332L\001=\010,\242<:E$=*]\307\273\325\317\204<J\302Z\275\331\371\306\274kP\026\275\2657\037\274)\257V\275>\347\342\274\231Fy\274\035& \274b\006\214\274\246\363\346\274\366\347\021\275KF\252<\025T\240\274B\236;\273j\261\031=;\334H=\356\000S\275en6=Z\2117\275\357\356/\275S\306\031=\364]+\275W\\\215<\372\037\303\274\306:\330<\250\360@=\367|A\275\333\027\266<0\271\203\274Q\203\350\274\276u2=\3050\021\275\325s\257<\217\355\370<\274\301+\275\222\020\232<\312\036\217<\237\261\237;,M\313\274\n.Q\275).==\342\017L=\340\227\313\272\035Lj\2741\223\213\274Y6\230\273\020\227\311\274}\236p\274\312\030\022\275\\wH=\216{J=\300C\343\274\300V\222;W\375\315\274\310\2715=\245\347\305\274D>\005\275\217\2545<\035l\\=\200\202\t\275\205\020&\275\037\202\222;\216\t\032=\004\330\300<Z\016\022\274\224\275\\=\221\017\261\274\252@\010\274\367p\336\274\037y\300\274s\250\013\273\035\215\026\275\343\\\007=\202\240\302\274\010\n.=\254\tJ\274y{\253<\202\277a\274\204\272\370\274j:\364\274\242\322\030\275\310QX<4\0276<4\200\260<\003\2340<\316\304\332<\0365\234\274\rX\307<\035 $\274\3248M={\312\036=\277~\216\274\221\255\342\272\277\001E=2B\331\272\352\031\004=\020\205K=\301\2504\275\022\371\227\274\317\0364<\334\317\007=\256\320\336<\005\010\3139\300`9\275gT\037=\241\320X=\353vI\275\024\313M=\016-6\274\237N\277;\205[!=\330\"\203\274x\311\"=\241\226S=\262\314\260\274\357\334\214;\351x\214\274\220p#=\256\333\346<\331GE\275\036\"\364;cF\266<\311\013]\275\316\345\024\274?\302\315<\331J\243\274-4?=\240g\265\274\342B\271<\256j\365<\304\363]<C\230\245<C\246\\\275\363\353\217\274nu\037=l\204\035\275\014\233<\275\0200Z\275\373\035U\275\321\0353\273\265\251\317\274\346\022\233<\314\356O<\221\235\200\274\354\206\376\274\005&V=\024\351P\275}_\004=>\316\210\274_9\250\274\341\267\336\273.\022&\275N>\024=LJI\275\317fz\274x\014\001=z\020\317<\036a/;\001\315\350<.\221\350\273\354\255\306\274G\020\020\275\263Q9=G)\212<\035r\335<\307\345\n=\232\266\217;\210\000S=\2774\264<[\225\244<N\013+<4[\214\273AD\330<\000\033\226;\265g;=9\326\376;K\267==6b\017\275\247\231\356\273\020\312\037=\322\215\216<\025\335\037\275v\265?\275~\336\021=aQ8\275p\237\231\274xn\276\274\216\3453=#\007J=VFB<\201a\017\274\225(7\275\276\276O=:\251O\275\005\267\023\274h\212\327;\256Fo<\374I\020\275\373\026N=\355K\027\274Fz%=\351w%\275\334\032*;\302^\273\2746\214t\274<\254\361<\260\017^\275\\\021:\275\216I\250;\260\236I;\204\201(\275\247&3=xW\236<V\370\303<\025\3310\2751\243\034<*k\375<\272v\334\274z_t\274\036\240R\274\0021\013=\353\255Y\275O.\323;\223S\355<\'\327D\275AW[\275/A{\273\"\315\036=x\252\025\275\035UT=G\376\014=\"X\335\273\351,\303\274v\006\001=\365\351\251:\261\374\002=\330\224_\274Yab<G\307\305;\0205t<\20044;\221hA=)G\003<)\351\n\275s\357\240\274\013\313\316\274\305\356.\275\024-\027=\024\372\351\274\324Q\244;>\2747\275\032\324\327<\274\260\005=%/A\275W\340\277:i\3755=D\344\036\275#\325\310<\356\247b:\335\345\031\275Y\360\363<\324\340\005=\350\200\264<\213\267\226<\353\033\035\274\261\022\013\275\214{e\274}r\022=\226Q\326\274\004\277\305<UXS\275\261g\341\274s\260\364\273Q\006\263<\334\265\023<\035\226\n:}\345~\274t\334\007<\023\200\301\274.`\333\274X\006\375\274\225W\362\274\275\363Q=\235\332\'=*]%\273yI\300;\262\033\266<\2530\320<\020\"\322;\247@3=j\226\332;\273\261u\274WJC\275R\307\003=\034\314\2047\205\024&\275\005\360K\274)M\302;\264\375N<z\231\376\274\331\001E=\nA\200;9\364d\274e\260\301\274\363\264N\275-QF<\347~3=\224\360\r\275\210\352\261\274\0307\371\274\312\273\335\272\304\314\023=\364\"\022\275\231\336!\275\327VP<\243\3505\275\005\301L\2727\336\355\267c94=0\315\230<\316t\350\274\337R^=p\217C=C\332\355\274\022\231\\=\315:\234\274*8V=Om\315\2748\2603\2750\254\006\275.\211\024=N*\304\274\274\016\323<\220\312\'<\022\201H\275I\224\257<f\352\031\2757T\005\275hO\213<5\264\250\274\270Z\031\274)\0312=\251ZG=\346\362\364<\035\t\311\274V\r\033=nI\030=\247\2166;8eT=\230pB=k\371\352<\206\230\033\274\312[-;\2752B<\234\366Z\275\364\001S=&z\026\275\r\2423=\216\315\"<F\320\317<%\336\226\274\262\225\334\2744o\303:\246[Z\274\3751\202\274K\377\377;\221\027;<\034\2107=\006[-=P\024|<\344\261\212\2745g=\275\035\227\211\274\345\244\224<\250\315\231<\356\314R\275?A^=\364\177\330<\032\373\271\274\264\214j\272\252NE=\ns*\275\260d\304<\266\342K\275O\302\010\275\013L\205\273\3048\301:\315\377\361\274\346~\337\274\\\351\013=(\006\005=I\177\247\272\312x\251<]\373h\274&1\262<U\345\314\274zv\237\274\266u\322<\315\026\322;IU\370<\223\365=\275\253\210]=\341%>\275H\255\356\274\372\264 =q\353<=\336\256\t=\024u\216<\273eS=@\020z<\036\243\003=\'\002\316\274\335\\0<\rU\317<\222\231\347\274\360\374\374\274\221,==\375 ]\275\270\334\026\275\010\240\200;*DP=\321yP\275!k\375\2740k==\036\232\272\2724\333?\275\262\242J=c\250\372\274\236q\301<\273\317M=\231\274H\275\225o\232\274\310c@\274\023\207\\=\365\177t\272\235\374.<B\371U\275$\024S\275\014\201\325\274\241\3106\275k4\021=\305\024\346\274q\240\007<)}\224\274\251\253\n\274\211\263\022<S\263\204;P0\001\275\374\250N=nkO\275C\302\250:@_\315<@\244\225:M\257\300;\215\3319=\347R\360\274}\036?\275\201\000\r\274y\300\307\274\'\\*\275\300K%=Tl =\236y\227<\354:\031\274\035Zc\274\241\342\037\275\263z\313;\372LU=\004\326\226\274\315C)\275\216\342)9C?/\274^P\247<)T\217;\340\031\032\274\334D6=^\240\351<\224\274\n\273\360o\017=\376\347Z\275\216\341N=\266\241B\275l\026M=Q\302\006=\325\205&\275\232\203\016=\025\265$\275\347h1\275j\310\363\274\244\321\016=\251\334V\274]Q]=\315\241\024\275\270\3155\273#s\020\275\220\rO=&\354\243<O2\211\274O\276\027\275\206\257X\275\331\2463=r\017\000<\316\357\t\2757L\242\274\000F\327;G\365\031=\030\273&=\311%O=\\\261\240<%^\036=\375\334\277<\223(C\275\027\232\r\275=\342\013=\342vM=\002\216=<m2-<\274\267/=\201\367@=\210\241`\272 P\035=\r\016\226<\033\346L\27476Y=h\347-\275\013,\304\273\315\235\301<a\213\241<\233\311L\275\025QY:\206bT=o5\003\274\036\340\224\274e\2029=\n5\264\274f\204\017=\375\257P\275\207\262\016\275\234\034\n\275\322\266\334;y\016$=\216~\312\273\303~\241\274\'TX\275\210U\327\274\023k\301<\022Z\257\273\224\377Y<\253\247T\275/\254\"\274u\025\021\275e\340\357;\\W+=\250\267\255<\\\317\273\2743\211\007=\303\347\037\275\364~X=/\302\270;\362\271>\275\035\0019<\265\r\370\274\227\253L\273TX <\222\371\221\274\237c1\275\270y\374\274\230\032\024\274\244\265A<z\333-=\010Y\003\274\340j\"=\003t8<\\\277\016\275+~W=\016B\327\272\361\226+\275 \245:=Y\352\213<_\376$=\350\266/\275\353\235%\274\335]q<BY =MQ]=\340\353X=S\375U\275\377\026\177\273tv\027=~\342k\274+$9\275?\241N=\262\252\037=\215\002H=\000\216\366<\036v\030=\371\206L\275\327\375\t\274\243M\264\274\365\3754=\346\345\350\274\032f\026\275\214F?\274S\206K\275\177\000\344<\246u\307\274c\220\270;\023\306A<_\031\357\274%; \271\274\260K\275\337\177\353<U\276\017=\202\004X\275R9\001=\3519\300<\365\361\030\275\36030\275\306\232a<\207q#\274]NF=\036\0374=\262\232\023=3\021\002\273\202D\235\273\300\250\273\273\004\271\312;\274\332\212<`\332\010=\031t\022\275\'\021\353<\375\360\004<\213 \004\275_\274\361<\225\342\006\275\334\266\274<t\033K=\370\331Z<\233\244\2619\235\337\036\275vEH;d\206\241\274\366\022\222\274v\362[<b_\247;\031`\231\274\303\333-\275:\243\227\274\216\252\227\2746\236\302<\356\217,\275\276\334\006=\337\346t\274\302y\017=\214\375T\275u.F\275\335\035G<=a3=\252\202\243<rx5\275\231\266\242\274\262iK\274\317\224s<\3727\n\275@\231\352\274c\236P\275\234m\227\274\205\205\260<\027\336\267;e\367Z=l|3\275[ \001;\334]H=,e\276\274\032$\021\275\021ow\274\023\327P=\254+\010=\256\tS<\255T4=\243_+<\250\264\337\273\314P\016=\033C\003\272F\335Z=\373\223\013=\367\221\n=U\225\n=\255\353\273\274\356\273\033\275\204\216\021=\315\036\340\274\341j\216<\2427\225<\2755G\274\326\317\337<d~E=\035\372\022=r\234\003\2751\304U=\265vY\275\305\302\330\274\227\3755\275\341\224$;A\031O<g(\'={\032\307\274\036\242\243\274\321\222#\275\333\272\241\273=\341@=\200\034\324\273\177\372\245;\253\004M=\2660\331\274@\202\006\275\022\032<<QH==\3677N\2755\322\344\274\353\2662=\265^\217\274\224\250+\275(f\266;2q8=\024\344n<\007+\n\275\205\013\276<\032i\005=\275\227\276<\352\257Z\275\360\216\002\275G5\003\2756s9=p\260X\274\331\020\005\2750c:<\3274\371\273\352\364\355\274\332\2444=\247\2620\274\033~@\2749\276^\275\341\252A\275\000\250C=\341:\036\274\213\2250\275\235\304\361\274\266\333\025=\227_==\317\345%\274`\276\373<\240\257\320\274,\267\035=Q\310\264\273\260\223\033\275\242\214\177\274\"\365\006\275,\360*\275A\324\330\273Dg\322\273\256 [\275\037v@\275\230\226\327\274\200\242V\275i\334N<-4\271\274\277[]\275\201\215\314<y\033\375\274\250D2\275\t&!=-k\027\275ll@<\352X\033=euO==\010\231\274\251\354;=\230\027\305\272>\255\003\275\377^\000=\2637\260<5.L\275\252\350\322\274<\340I\275>\300\\=\266\253\252<%\036\206<\231\027?=\345O\'\275\356\320\333:\362\204\310:S\000\036\275\337\335k\274\317\324A\275\236\347\331<\26254\275\267?X\274\320\245 =x\2407=5\346\321<1ms\274\236*6\275B\217<\275\317\235\034=\353\r\230<u\0163=\203:\306\274A\271\001<i5T<\r\334A=\t\233C\274\271yH=Bj\037\272\033\377\235\274\275\2074\275\264w\202\274\020\251\337<\357\234\376<ax\033\275\0047B\2754\323\271<da2\275\352\237\006\275\200\200*<\364\000\036\274:\342\223<\250\223R=X\2220\275\377\323#=\355\211!\275\345\313\014=J82\274X\035\362\274^\315\264<!\"\312<p\006\253\274\030\363\354;\016\222\376;\254\261\215<TG\246<\26403\275\034\rO;\351\313!=\027h8\275\220\220\264<p\353\237\274b\262==\234EL\275\007p\231\2741\215\371;g\221\224\274mPq\274o\267[=\301ZE\275\032:\306\274\316:Q<3q\236<\205\254*\274\261\314]=8\357T\275\225\n\361<\002v\326\273\262\223I=u\006\207\274\267r\240\274\013j\014\273\236\240\337;%\005T\275\377\035\032\275\205=\303\274\302\362\270<j\320\r=\336!$=\254\367V<\366\324\005<T\201R:\177{\372\274CG\232<\376AS\275\301@M=\300\247\373<k.\367\272i\234\203<\337<\264\274_ ?\275\306\3364\275\311\327\335\274\216W\231\274\361\216\224\274s\311D=\300\343\245\274[P\002\275\033_(\275$_\263\274Q\272\315;\217\366p;\201\312\206<\3075 =\020\026,=\223VT\275\014\210\233\274\036?\004=qS\232<\2560C=\202\232\360\274Co\355\273\374\242\035=\300[\013\275\223Z\250\274\274\037 <m\007\033\274\005q5\275\361\224U\275c4H=\232\242\177\273\t\266\032\275Fe\000<\366=\245<\022\242/\275X\312\377\274t\346O<\344\361\270<\244\324\301;D\336\014\275\315\223\356;\256P\271;kq\331\274\272\031s:+\032\222<\356\327\331<%\277\037\275\365\214\001\274@p_\274\3763\223<?e\225<i\376\231\274\3607\235\272\326\322r\272\223E =f\236\322<\307\353;\274\202\361\261\274\027\255;= \265\017=\366a-=AN\"\274}\251}\271>\022\002\274:\251#<\370\236\017\275\260r\251<[\t\204\273Y[6=24G<6\350\370\274\032\230\315\274Q,\017=\240Zg;\235\221d;\323\003\354\274\356\331W=\016\363\002=\020l\020<\225\371\021\275\216\271b<\177pa<\213\345\377<i\000\347;dV\305<\331\031\017\272\340q6<\234\027y<\303\020W=\000\351\256<J\307\014=\201\211\027\275\3143*=o\246\036;/\362\256<\270M~;\010: \275\3061\270\273\256\017\032=\335\352\342<i\347>=\354\2173=\231-\377\274\306CW\274#}G=\006H\220\274!\304X\275\222u;<\306\362\037\273\376\257\376\274*\337\232;\341\020\\=\204\262\260;\374\234&\2750\212W<\201!\351\273\023d\353\273\331!T\274Y<\023\274d\313A\275\235]\277<\255|a<\366\332\'<(A\200\274*`.\274\204S)\275\272\2407=D\220^\273\203\362\313<\177\262&=\305\343i<O\264\354;\343B\306<\362\037\327<\372\230\307;(dR\274\202v@;x\231K=\274\304S=\004\0017\275hu\301\273RZq<q\005\307<6\361\r=f\272\253\274(\031\255<\243I\312;F\004F=\335\013@\274\370\232\031=C\244,\275\257\323P=\363TA=\031\215\363<c3\352\274\277\254\375<Lk\267<\376\225O=\024\033\022\275\002fB\275\302\0308\274\221\231\226\274\370g\342<l\256N\275\2478\233;\3530\337;\0262\376<\352!\244\274\331k\237\274\254\2651\275_\024U\272\226\031r:dD\031=V\001\352\2728ed<\005\251\273\274\204\351X=\376w\037\275\245\317$=\016\211C\275\302\362\\<\021\310\013<y\347\275<d\204\376<\2134\025\2741M\000\275\226\310,=\037W <U\004=\2755\257|;\321\341\270<\243\3422\275\257EP=\334\220\"=\233\225\333\274\357\225\000=J\360L=\252p\256<-B\273<,\335\017\275l\314\334<\034]\351\274\363\332\236\274d#\027\273\276\360B\275\324/O=\326\3553\275\010\005 <\022\275.\275y\202\036<\351\305\263\274/<$\274rc(\275\275\2143=\'\217\006\275\331\016\313<\214\213j;B(R\275\027C$\275\020\037\342\274\212\334\265<\305\001\r;Y\201\341\274~J9=\352B\225<\333\275\374;\'V,\270J\242P\275zj =\020\321\033\275\377\343\373<\366R-=)\242\360<\022}\017\274\034\324\031\274\353\223<<\356\305<=\374\315@=\3300\357<\244\321\001\275\324\3657\275F\000V\275\2127+=j\235\341<\256\023\333<x\372A=\'\325\225\274\020\276&\275?\327^:V\273F\275\337.\340\274\226l0\275)\004\203\274\316\003\365<\2064\264\273%\030\014\275\263\377}\273\201z\232\273.\376\367\274\n\240\365\273\211\263\305\273\327\017O<\r\350>=3\250\273;\221\0175\275\370!\032\275\322\033-\275X\357\032\275V\264\341\273\223\362O\275\2139\357<\252<\241;\003\036\007=\225^\305\274\r\361k\274\017\246I<\253\020\025\275y\034\300\273\307M\014\274\274\343\360;e\270\025=\241\212\354<g\304\304\273\333;\312;>\356q\274\275\267I\274\243\240\250\2747\005?\275Z!\023=\240\322\237\274\362\267\013\27576\330;\230x\271\274/\2342\273\355p\304<\366\323\035=\317\022\226\274Z\343W\274\343\332\014=i\367<=\006\237H;!:F<\rc\300\274\031#2;1\331*\275\322I(<\324yO<\233q4=\223l)\274E\027\360<\371a<=\361\242\201\274\025\244\306<m?\361\274\302@\275<\201[N;\306:\\\275Qq\033=\217\362\252\274\340\330\345;f\226\244\272\322\257\322\274:\370$\275^D\357<\255\270\021\275\266\245\303<\246\367p\274P\261\017=\314\310%<0>\364<9\204B\275 %\r\275(VD\275\3509%<^\037>\274\344\327\213\274\343H#=\253:\031\275\204\343\021=:\033I\275\365\"\257;\227\026\273\273\313\250\030<\242l\221\274W\207\302<\3521\023\275\260E\013<\267\364+=I\306@\2759lr\2744<4=\000\320\200\274\331/W\275\257\005Y=\272s\351<.\250\210<{\034\351<\304\323K\275\352u!\274\316\217\342\274\233\3276\275t\267\361\274\266\306~:\352\017\333<\021:H\275\020\250\254\2748\246\374\274\346\237O=\252\310R\275\006\"Z=\035p\315\274\\\356P=w_\272\274\341F[=#+\027\275\237\354\236;;\305\020=\000\276Q=\337M\362<\2025\364\274Jh\343\274k\345\\\274N\326V=]K\026\274J\017h<|X\035\275\230N7\274\037\355\n=~\t\367\273\0176T\275>\224\006\275 \030\257<\0260L\275\372\024\034=J\254\354<\022\366\023\275 \255 ;\303\032\213\273[\022\254<\223\356J<40,=A1n<\367$\023=+\204\236\273\244\210\256\273\256\000\347\274\004\215\004=\242\351\373\271o\201\001\275X\363\314\2742\236\002=\322\231:=\226\206\374<I\3579\272k\224\313<sv2=)>\336\274\2025\242;\2447 \275\303\331\257\274\246\t&\275\300;J=\255$O\275\207\302G=\201\345#\274\030.\255\274\t\203\361\274\303)G=\302\243\023=\0049*\275\002z$=q\367?\2757\n><\301\014s\274\242\364\200\274\335\323$=\331\031\022\274\264\277\003=\251\013\177<\343\\\355<?\205\016<)5\205\274\350\264\022=\257w[\272\267\361W:2\'\036=@\370\214<__\276<]g%=\367uP\274\304R\024=\016\275\353\274v\024\006<(\002\240<\234\016D\275m\177]=\237U\362\274+\214V<v\220#=S\216\010\274K$V\272\025P\034\275\313}\346<[<o\274\343Z\302<\003\207\024\275\322T:=0\272\341\274\360\232}<xJ\004<\235\340\310<<\332\361<\256\033\233<8*\245\274L\367\020\275\3509\345\274p\222P\274\024\375P=\3104R=\322\275\205<l\363\215\274]\275\025\274\'\370L;\203\365\245\274\206\222T\275\303\316\004\274\262\016\307\274f\263%\2753l\223\274\375\237\325;d\305y\274-\332\022;\244\025\005\274\215m\234;m\310\277\274~\246\343<)\374\334<=\021G\275\327Z\267<\017\316\335\274\352\014\000=%\314\244<c\232\311\274Y\300V\275\202\301R=h\267^\274)n\204<d\2214\275\337\231\353\273~\206\016\274oT\033=\0164A=Q\216L\272n\355\335\274\342\305X=\273\202V;l\024\345\274\350uW\274\272\270\001\275\270\372 =\262\273\244\274\003\266Y=K[\364\274\300\275\024\274\351\3566\273\324\342\020\275\353\374\242<\035\221\310\272c\356K\275ZM\312;\272M\034;\034\305\204<l\300\361<;0!\275c\'\210\274?\\\200\273\006\345w<~\020,\275Jk\325<\017\326=\275\005\371~\274c\302\216\274\263{\\=\211\307R\275\247\030\214<H\242\266<xj%=\\\013]\274\377y\002=u\010B\275\247!\337<\224\016L=\300\000V;\353\326\020=>i\216\274\263\203M\275\213\024`;\215X\357\274J\300K=\341\356I<p\305\336<\310K\262<\027.\354;:2 \275\211\350W\275\302\330\360;cY\352\274\333C\314<\233I\005;g\357\027\275\342I\312<\302\221\306\273+|\263;\273\032}<\355\026\"\273u\360\026=\355\221\036\274\223\314\010<\221\336F\275\351\004\022=\007\371\016\274\211\367\002\274MsB\274\351\003[\275\356\017\307<\361\322\202<\320\261L\275?\204\2709c\340\013=\256\335\234<qG3\275\260\035\n\275\357\360M\274\252\024\210<\363\320\t<\004\247\224<+\354\262\274o\026L=\200\331\t\275\360u\035\275+27=\321\010\341\273\212\317\377\273d\247\036\274=\"\030\275q\364\212\273P\243\367<\000CV=w#H=w\005\376\273\177\215Q=\334,U=\254t\316\274\3575Z\275b\350h\2733P\3608p0\275\273\237\222R<QS\003\274T\334\207;\325q\232\274,R)=\330\016 =7\207.\275 \027\301\273\275\367=<\006\224\'=}wm\274i50\275i\030C=\3047\222<\371z]\275\005\327\035<\024\333\275<;\354\030=\205 Q\275t\260\370<O\037|\274x\310\266<j\"T\275f&^=\303|\276<\244tS=k\271U\275\341\014\362\274\301\346J\275P%M\275\242A\031=\2202\037=\340\353\225\273\233Y\270\274\311\254\034=\276\233+\275\353\241\201<\024o\022<\00350=\037S\371\274\"\024\020\275\020\365v\274\027Z\007<\334\2662\275^\213\315\274\354\333S\275\226\367\206\274\353\202\251\274\364\232\r\274Js\027=\317JD\275\365\267V\274\r\006\235:\022\310!=\031}\320\274\243nn\274q>J=\304\327\213<B\254W\275\350\362>=\305\005Q=\226\201<\274G,7\275n\337\244<\\\370w<\200\2319\275\r\017@=\301;\257;\314\326\331<\220\352\314\274\276H=\275\020;<=\211\030\245\274Qn)=\357\305N=\374\336;=l|P\274y\033\242\274\277\226\240\273~\2024=\014_\225\274E\027W=\024 #<\332\263C=\031^:\275&\274\367\274\376(\t\274\216\273Y\275\205\234?<F\244\016=\024p\035\273x\201O=N3\232;\214Y/\274\237\000\t=\331\244\034=\212\236X<\246+\013\274\302\272u\274;a\317\274UI\226\273\373\356L\274\014\202\375\273\273Y <nv\t\274\007K\032\275L\202=\274\311`\254\274\234\037\364\274\352-7\274.k\335;\265OF\275\265\'H\275\226\341C=\236-<\275g\270\236<\320\330h\2744\311%<\037\016\332\274\322\2553=!\253H<\017!_=\016\251\267<6\300=<1o\307<\004\367\242<\037\311\313\274ly[\275\036i\n\275\315l)=\214\020u\274L/M=_\026\003\275\237\357\032\275\334\021\002\275\355f/\275Q6D\275\001\030;<F@\207\274n\033\\\275\320\206\024\275 [\n\274X5\237\274\213\235\000=\2624\231\274Ws\336<\205S\265<~\3629=\266\220\221\274}\245D<w3T=\201d\226\274\2533\352\273D\242\376<N\266;=Xp\n<\316J\254<\253;W\275\216\033\265\274%\t?=\310;N\275O\217\272\274\217\273:\275\007\0057=\222\327\343<go\342\274\017zG<\225\323h\274+f\333<F\315S=I,\365<\261\246\216<l\216\026=\245\2174=\307O\301<;J\244\274\244\035\367\2739\241\t\275\234\023\023=\330z?\275\320\005|\274]\361\207\273l\370\330\274\355\247.=\004\365\023=\205\324\276<,\003\236\274x\242\034=f\206H=\200\254\364:\034\340U=\357\354Y\275v\254\036\275}\2777\275\273E\262<\272\005J\273\371u\032\275\370\325==\334j\271\273\377\n\211\274\230\333\276\274J\260.=`\247\005\274\230\245\341<\201\261\224\274\nG\037=\357GG\275\216e\320\274Cp\334\272D@F\274`3/=$l\372\274V\330\237<\003E\031<D\246B=\361\210Q=Z\346\333\273\322\320\266<e\026\"=~\350B\275\346IQ=H\276s<D+\014\275\000\213K<\356\014\204\274\316Z\237<8\267\n=\330\211\307<e\005\351\274\033\232\232<\3703C=\331\252,<\340\243H\2751\272H\275\221o\272\274\277\355\327\272\032\0032=\002r=\274T\320\377\274`gD\275\351\203\021=\373\016\201\274!\261\016\275lE\323<l\240\013\274\217e\244\274\265Yw;\247\332U=\344D\035=j\374\t\275\230\\\n\274\003-C=\333\247\271\274\036\254O\273b\033\351;\212L\023\275=[\326;\3512\036=\247\007\222;\231(\036<\3477/\275\334\000A\275\223Y\014\275\346\016\362;\020\022\014\275\010\256\010\275\272A\224\274\007l\334\273\002\323\227<\277\321\037=\265\276\353\274\235\310.=\241\222\251<\n\027A=\r\321\035\275\265G\341\274\201\204:9A8\301<\303\255\336<\206\2038=\002\000\303<\253\302\324\273/,\'\275\261=\374\274\243\271\243\274U\366K=<\034\014<\037\t\202\274g\357O=j\2776\275\0306\236\274\363C\364\2749j\326\274\214\364\034=\262\030T<\320\025\255\274\237\264\323<\316\001\027\275\322\372\035\275\212\025\021\275\326)\267\273)wZ=\035\262\022\275(1D\275{\027\350\273\334\222\\<\300\261[\275\317\325\363<w\246\t=\271\311\335;\262\325\177<\271\237\214<\010*\036\275\205\027\321<$\224\262<\"\354o<\230\303\177<\013G`<4\313}\274&C\014=\337\215^=\000.Z\274jN\305\273\370\241)\275N\037\3417\253&\n\275|\007E\275u\032\353\274z\034\302\273`\360\200;\233\372\017=\306\241k\274\256\020\373<\304\323\233;M\313\007=\220\307\242\274\201\361\230<@\377\006\274\336\013\010\275\350p\370\274\226\254&=:\200\016\275\354\025\016\275m\022)\275\352\\\034=\232^a\274\202v \274.L\017\274\337\002\241\274<\226\253<\321~\247<>\320\267<\307f\035\275\323\023{;\330B\'<\204I_\274\235\201\216\274\n\255\364<W\235\260<\366\223\034=\207\010[\274{\350E=E@4<b\360\312\274\n\205\t=\366\0267=\3522\014\275\020L5\275T\005>=\272\205\206;3\214\225<\203\213\"=\362F\027\275\274\'\325\274(\265,<\031\330X==\271\020=/=G\274d\r\314\273x\255\327<\244\\\341<\356Hp\273\204\r\000\275\324#\357\274\300\217\014=b\2270=\227/M\275\277\265\264<\233N\372\273\017qO=)\231\304<\261\362>=\327\345\006\275ia\214\274\324s \275h\036\032\275|\267\204\274\030%\223;\037\212\223<D\276,\275\263|\177\273\234\251\037=\037\004\373\274\332\257\361<~\264J\275\271\001\360\274\006R?\275Kg\276<\345\304\026=*\201\373\274\345-X\274\320\031|\274\247{\212\274\024\224l\274\250<\"\275\201M\013=\362\270\260<\230C\373<\003\244[\275f\215\325\274`t\206<\371C\350\274SoI=\241gS\275\242>%=\004\217\031\275\2144.\275\240;\020\275\324\211\035=\010\344X=\036/\235\274\017\314d;\370f\235<\220\367\237\274F\233y\274\002\t\207<u\000I\275a\244R=\020\330[\275\212\307\001\275\347\302\360<\300\220\035\275\210\311B\275\345\302\035\275\355gV\275\252\r\r=V\003W\275\240\365\210\274\272\314\220<0g\022\2758\315\343;\224K\227:ME\272\274Ho\020<\017vQ=\330\315\034<\234\362\215\274\343\234\004=\3303\357<\207\0313\273i*\331\274\020N,=/\244\200;\326u\214<\001\206\003=\373(&\275\n\364\207\274w\304O=~\307g<V\332\002\275\270\177\033=a\3471\275?@t\2746\307\376\274X\301X\275\026\255!\275dh\017=\210 \022=z\363\220<E<K\275\033\304K=\032U0\275\024\235\0048yc\016=.\221\262<\302s\024\275!\303]\275\216\345\037=\014(\t\275}\\*=\2500\375\274\036c\366\274\245\305;=e\313\036\275a\326]=A\300@:\356\t\\\275\341p{\274\027\214\251<\206:\355<\305F\217\274\365G\361\273\250\354\302<Cp\222\274\254R\335\273K\304\010=\372ES\2757\217(=\313\035X\275&zi<\317Q[\275\216SF=a\305\302:\351\374Y=\210\364\\<a\351\002=d[>=\302,\'\275\230\221Y\275\215\314(\273.(\214\274hP\020=qq\326;<\337G=\202\215\\\275\217\352\317:\010z\314\272\231\006\336\273\031\265\320\2749\211\253\274do\324\274\2152\300<\225\261\010\274\301\212@<>\374\003=\3476\251\274W?F\275tuV\275\034J\360<\226\020\374\274\276k\356;\203\000\230<e\020\304<>\2321=\022\326\014\275\271\325\033=6\342\327\274\"\231E\273\027\177\306\273%\3643\2743X>\275u\377K\275\001\177,\275\310\317\350<pm\336\273\016_\242<=\201\247\272\305\312%=\262e\n\275:\t\r\275\000\226\016\275\231\222\032\275\225uP\275{\370\215<\212\330\367\274\"\000T\275\213R\023==Y\t\275\036\240\027=|\344]\275\000\220I\275\357\254\273\274\027P\366<\347FZ=\024\372\017\274\"\323\250\274\022*O=\262G\234<^3\324;\207\2615\274\247g\006\275(\325@=+_X=\216\213\322<\305\366\033\273BE\305<\031\260\305\274s\037_<\257\007\017<\357\244\031\274/\366\237\274[\3246=\306\232q\274\372z\353\274\020\3348:hc\r<m\317b\274\030))=\227&,\275\303\233*=I\230\005=\366}\276<h\336\233\274) \372\274\267\321\350;7\347\202\273\241\007M\275\364\353\023\275\2437\355<\206\263y\274\302\231;\275\253\\\353;6\376\301<\335V\030\275\214\273\240\273\222\220G=\277\205\\=\344?\363\274\322t\353<0\005\252;\362\270f\272\362.\t=]{T\275pD5\275+KV\274\"3\223\273\001\364\2537Y\222\032\275\005o\310<\265\021\";\247\\\242\274\376{u<\341P\237<A\252<\2752e\037\275\274\265*\273\243rF=;\000?<E\310\247\274D&Z=\337\326s<\200W\232<\014\013Q\275\335\003\235\2747\241\025=\202\252D=\260\215=\275\206\365\003\275\353\201\007=>\315S=\231w\341\273\250\352!\273\025\255\235\273\002\335\021\275\002\r\016=a\206\013\275\336f\014=\004\337;=\036\245\331;\211p7<}W[\275\327\226o\274gg\303\273P\025\006\275Ja,\275~\'\353\274\327\231\025=\2727-\273E\363\353<\245F3=\332B\351<\356H\330;\257@\r=\247O\013\275\306\257q<\213X\247\274)k^=\341\305 \275\026V\235\272\334\225\325\273\0005<=\231\205\020\275\202\322\206\274{\0271\274\225A\242<\347\376<<\'m\024=\365\277\211\274\373\264\005=]\333\274\274j\237\301;}*\034\275=\037\300\274\271$l\274\371\'\335<\373Y\000\275\303u\207\274\324*k\274$\357\221\274\024tY\275WW\244;\377\036\236\274\311\267\227<s\333\235\273\2252\032=\0221\222\274\\\276\010\275\253Y\307\274\267\350Y=\244\327\2579\017\337\235\273\320\302\036\275Y,Z\275\":\177\274Z\215];8CU\275\177\023\';\250\354[\275\351C\217:\337\315\340<e\216\'=\031\232\001=\375 \340\274\320\376\320<~\324\366<\327\r\202\274`4\317<\253r\020\275\035F\217;\246\373\026=\251\347\364;\212\016\313\274\236\243W=9\326Y=]\'%=\206d\223\274\244\3215\275\365 \032;4\242\034\274\334d\006\275jt\004=0\340\034<*\213\205\273]!\270<\330tg<\301\243\030\275\372XY\275/@\267\274\332b\026\273\031?\000\275\213A\223\274\365+o\273\255\317\r\275_D\014\273 -\350<=EE\275\022\246\004=\243 \213\274u\250\025\274,\202\276<R]\330<):\272\274\010]W=;\277X\275\216s?\275\317Q%\272\222WX=\217h\034\275Nu:=1!\032=\022\224\n\274\335m\t\275\267\354\232<G\272o\274\227\240\211\274o>F\275\rP\225<\354\334\221\274R{\350\271\203\223\336\273*kq\274\240\251\356;\225\305\344;\207\336\021\275{~\177<\341\254{\274\262\270\272\274&\027L=\341\260@\275[\350<\275&Q\\\275Wxp</5\342<v5\035\275\355&)=\343\260 \274\226\354Z=YHC=\324Y5\275\231\341\364;D2D\275\037}J=\230\017U=\302\231]=\037\t\030<\366\314>\275\344\251\312\274\222\305,<\370\020\363<\374<Y\275_\002\231\274\367\010\"\275C\257C<\254\323\226\274\3142T=\204\335$\275\331\2109= \023\273<\247\2730=\334\242\313\274s\304q<y\326\357\274\276G\301\274\266(\006<\221\315\333<\337\023^=\037\035\001= \201\034\274J\334\307<\2648&; B^\274y\356\005=x\331\251<\031Z\366<X\257!:sZ;=~\2760\275\t7\230<s\303@\275\022{;\275\315\344\2739\2152U\2754\030\014<5\364\371<b\371\017=\366D\010\275\371\\\313<\037DK\275\027\246\006=\204\227\272\272\226K\037=\035O$\275)s\\=\363\370\245<=\2030\275\232\213\267\273\373\201X=\024\214\016\275\002\275<<\237\321\'\275\301i\346<\021\003\031=E\214:\275\340{\304\274\357~\014=8y\274\274\242a\034\275\371m=\274\235u,\273\027\357/<\005GL=\337\016\216\274\236!\326<\346\021\346\274\337w\030\275\320\367\370<\021\376\262\274\250O#\275\035^B\275\010\001>=\311z&\273\373V\035<\374P9\275Df2=\215Z\206<QF\226<R@\345:]\034\347\274\227~\020=\213\316\002=\030~Y\275H\313\313\274\244\366\341\274^\370\006=}\377\217\273D\rS=?\0266=\027z2\275\273\314\344<9\231%\275K\250h\274;u\031\275E\347\'\275\376x,\275\367\216\304\2747\361\320\273\343+\202<\025\\,<\202\207=\275\221\t\032\273\344sO\275\250FR\275\316^Q\274\374\371\022\275\031\354S=\376KQ\275pjZ=t\220\021\275Cp\222\274\271s9\275\317R\223<\212\213q<\035U)=m\nl;=\351X=\216\277\002\275\354N\236\274\210\003\000=L\337\350\274\253\241\266;\240\243\251\274!w\016\275\371\2154=\264\365Y\275\013\017\334;\\\000\003=\246\263\257<7\244`\274n\366\013\275\331\310\337\274\022\004\267\273\354\305\212\274hw^\275\302\274\207\274\301W<\274\r\0258=s\263\010=\211\274C=\375_,=h\234\251\274\316GH\275\357\3209\275\242c\301<\277R*\275\352\311<=\331\277J\275\004\003\363<\303\2757\274\271\375\332<\322:\332;\321\002\255<2\262:=\3472P=\261\230\330<\227]\215<\225\371\t=\250\227q\273\300\2048<\327\010\341\274\261\360\005=/hT\274\322\371\207\272\033\0355\275\031z\276<\177,\\=\214\3005\275\251\206\237\274\223\2458\275\347\243%=\263\336\213\274\212\010\003=\177]\322\274\306\256\005\275%\371\332\274e\256U=\312\013A\275\235\306q\273\'\250\000\275h\350;\275\006\317\014\274_OO<x\022\364;\223\004T\275\275\273\313\274\302\3564\275&\212\027=\366S\336<\001\364\340\274\344\337E=$\211\311<`:g<R_\327<D\306X\275K\214?\275\\\243\215\271w\3663<0\204E\274\0359\352<\273]\204\2735hm\274\253\206%\2750jW\275u\301\010<j\025\"<\374j\025=@\003\023\275H\331\230\274\312\375}\274\274;==\300.\361\274\304\034\243<\217\221\252\274{f\200;\356\317\016=\021G@\274Og\026\275O]6:\246\270\243<_\020Q:V\016#=\242Y\276\274\343\033\036\275{k&\274\2341T<\364\367\022=\216\276M\275m\346;\275z\360\321\273p\270M\275P?-=\244\332A=\265\273Z\275+\243e:iq&=\252\204m\274\270\272N\275O\315\367\274uoR=\300\001\004\274p\033\224<\204\310)<\247\250\340<\244\006\211<D\016\010=\335\316\312\274\341\267\\\275\222!\010=|\313\221;+k\361<m\357\234\273\212\373Y\273\212\214\241\274\306\372\333\273\000\201Q\275L5\262\274z\325$\2738W\225\274\322\336M=\362\036W\275f\373\025=@\272s\274\037\336\245\273\344\230\031\275\204\024W=7 /\275\\\354A\275`\264\253\274/\364c\274\027\034\271;_#\314<T\331O=\242\005/<\246\242\000<d\030\363\274\353s\310\274\333\250\360<O\036A\272N\201\274\274\334\232W\275dO\277\274\240\000\317\274\253\324\031\275\177]\216<\366K2\275v\222\020=2\2713\275\274\377\324\273\203\201\207<,\036==T\200\'\275\253\r\377\273\211\0227=om\001\275Xk\210\273\224\"\034=\tNI\275*Z\023\275\377T\307\274\327\322\201;\207F\224\274}O*=\266\252\273<\201\214\300\274\237\325\312\274_\323Y=\304u>\274\031\377/=\020t\306<G\262\035=\332\310\036\274\232I\324\273\350\253<=\021i\240<[^\272\274\013\3002\275\345\236(=\250\327Z\275\267\203\215\272K\r\224<\274\030\001<8\021\363\274\234\2528\275\221\3563=\377A4=\177\327C\275\372\257?\275I<.\275 \272\304<\252Y\005=\263\2731=o\000\303<\215h\026\273%#\021=\321\275\335<\006\2718<\357\261\013\275\336\210\262<\004\220\236;\260\313\363\274FK7\274\321\242)=\275\311\330\274\360\r\347<\2331\205\274x\257\226:7\331y<J2^=\350\016\000=\242L]<\332^\233<[\233\242;|\003\021=rD\037=\347\243M=_\n\034=\321\\\272<fs\240\271\r\305C\275\355\232\200;\305\037I=\222v!=\033\344\224\274>&(=\366Y1=\263km\274\223\262\033\274fJ\r\275\366N\274<\265\034#\274D\035M<S\337h\274\375\274\331\274\255\353\036=\335\324\371\274\030\314\265;\204\345\227<\326\370\203\273\266\004/\275\364jY=tO\033\273\024\306G=\242\335\017=\263X<=\375{\031\275\251\303\036<y\337I=\217.\037\275\235\232\321\274] D=\007\2306\274\254\310\036=\353\200\303;\350\224\225\274\307>#\275\251W\'=\243U\356<\350vX\275\211\324H<k\370]\275\256kz\274n\262;\275\010,\215<~\2662\275r\376\364<\247\304\323<N\225N=\\^ =\201f\366\273\215\215\022=\354w\013<9\345 \274\225v\361<\267z\021\275\367yO=\236\\\254<\227\261H\275\260\247T\275\rj\025=\272\2473\275C\261W=W\'^<\013\360\231\274\000\363\024\275\032\3774<2b\233\274\016\356:=\362x\252<dR\217;8.9\275\232\262m\274\322\210\323\274\267.T\275V\004\235\274\305\323\327<`\030+;\3365<=\310\311f<(\225\307\273\372p\030=\r\026\t\275N\225\225\274q\240(\275P\342\'\275,\264\255\274e/W=\360\2365= 2\026\274Byi\274\3255\'\274\345\252\"=C\372\356;\271S\271\2749\365\370<\'\216\204\273afA\275\206\003A\275\010\237\316<\2658\267\274\276\365<=\373\264\033=\336\2437\2752\333\244<\377\373<\274w\300m<\020\261\237<\2079)\275Y\3130\275\255T\226<\277\322\314;,p\031\275\322\007\024=\306C\263;\323\305\017=\230B\034=\321I\315\273\216:A<\022>\r=\223\200l\274\032\276Q=\007\302Y=\"\ta\274\255\0045=\366\213\324\274\346\226\\\275\212\216\311<\356\2663\275O\251\376\274\243\314U=\206\221\262;\334\224$\275\325\363\350<\330\331E\275\013\276\320<\221&\313\274$\014\315<\3127;=q\031\261<\273\335U\275\007\350E=\3567\'=Cg$=\206\370\322\274\202\237\003<\212\037+<\367\336\017=\200zo<u>\r=\226~R\275\325\242/=/P[<\251$F\275\270G\256\274b:%=f\332#;k\263\377\274*\304\014\275\32185\275\360U\034\275:\356A=H*\303\274\243b\313<P\272\035=5\206\017\274\342\255S<Mx#=,\2274\275/\014C\274\357\177(\274\262U;=b(1=}0&=\206\323+<\306r;\275W\363\217<\353E\033=R\264\277\274c\020\205\273t[V<\273}\034=3%\016\275\306h\034\275V\364\267<$8w\274\321F\300\274\333\017\216\274\367\262\344\274\353\226\267\272\257E+=bv\326<S\2637\275\360\353\346<\025w\033=8\260<\275J\303\211\274\207\226m\274\376\250\227<d; \275\270\274\310;\213w\t\275\356(j<\347\013\241\273\313\225E\275\307\225S\275\277t+\275\031\021\375<z\333\003<\004\2668\275\004\343\004\2758&\205<l\243\315\274\010\024\355<\320\376\302\274\037m\224<\0054\013=\207\370\207<+E\237\274\306.0=\016\330\210\274(\222Z<i\201K=\321\000\003=H|\017\274i}B=\357y,\274\001\277\204\274\362a8\275\312o\374<uA\206<\002\237U\275c\267\031\275\036\036I\275w\316;\273c\272\213;\223U\222<H*\257<\331\202W=\340\017+\275\226*9\275\000\t\213\2742\277@=\361^\004=F\276N=+4\374\274\301{\025<E\005\034=*\222\317<\365\262\251\274\300\\,<x\205T<\'4\377\274\342\273\331;\254l\017\275O\274H\274\376\000\r\275\272\276\002\275E\035E=\357\024#=\276\317K\275k1\367\273i\306d<\254\027A\275\347B\022\275tKh\274\311\263\";N\2779\275\370\000Y\275N\315^=\t\323\033=!|\034\275\211\001n<\250%\345<\271X$\274*\315S\274\331\202Q\275\203\367\354;\232\221\232\274\014n6\275\r\355\301<\211H\306\273\315\266\355:\tAN=IR\003=\353\367\373<eT\221\274\237d\007\275\362n\037\275\017\265\021\275c\235\027=\2737.=\363\242\034=\200\211\211\274 \220\305;\205\314\334\274\210\334\276\274\3604\017=8\0318=\246\276\364\274\023a:\275\313D\004<\206\243,=\266\265M\274\0052\035=\005\005\364;=%%\275d\t2\275\205\007\360<\340\362u;1\025\266\274\204\216\201\272\242L\023=Hg\036\275\341};=y\026!\275n@\313\274\rD\257<\030\263\226\274\356\224<=\005cX\274G&\327:\311\023)=+\004j;3\374\245\273\037~|\274\246\010F\275c\270\004\275W\332\027\275n\217\000=\257\323\330\273\303\232\310\274V~]<\254\033\322\274_|\024\275\363\346\n\275\306\025\314\274b\032\372<\215;\263<\022\231\"=u\1778\275\212\304\221\274N(\021\274]Q0\275\235*\366<\317\271\242<\354\002I\274\332\260\307<%1\207\273^J\177\274\241\334\360<\225\247\333\274\335\224d<\240:\305\274p\371A=\307\3415\275\277\335\315<\320\233\007=OR\031\275\354\324\276<\272z\202<I\030G\275\025\326\027\273\021\250\210\274\237\231\016\275\365JS=\220\335\350<\255<K<S\3013\274&O\360\274\243EA\275\016s\000\275l\325/==iG=\'\323E=x\263\020=)\365S\275\341\006\217<\354*\303:~%\232;`\272\002\275\022\264\025\275\321\263\214\274IpD\275\020\006\237<\344\332\372\274@IR\275$g\003\275\334\\\254\274t\200\305<\366\326\021\275l\024A\275\330}\206\272@\361Z=\034\356\326<\273\205\246<4s7=\320\303\243\274\303\023\314\273nx\010\275\331J\340\273\257\177L\275\3618\225\274\275\375\201\273t\360\024=Np}<\355F\250<8\227\372\274\007\r\240<\244\\\001\275\356a\243<\023\302\222<\203\030\340;mr_\274\364\313\252\274=>8=\226\220\340<~\276\266\274`\260\351<\200JZ=e\313J\275\275\027)\274\344\3039=\177\251\346\274C\031<\275 \315F=\301%\250;k\316\327<\267\004\006\275\350#^=\365\347\005\275\'\256\272\2748\352\001<\035\231\026\275\351(t\274\004\035X<?GQ\274\347F\032=Y>\031\2753\364\273<8\312v\274\347\024;\275\310\307e<F\224\022=\251\362\273\274^;J\275\337\222\344\274\223\335f<\224U,<\334\010M\275\357\020H=\323w\016\274%^#\275\266\303\t<@\354\000=4\016\226;\253|\370\274\326\027%=\236UO=\350\313j\274[q\341\274\277\303(=)4\"\273\270\364\220;<\263\353\274\375g\016\275\320\0308=\263S&=\377\210\325\272&\274F=\207\003Z=\206\220\246\274\037\255T\275\243\023B\275\264\240^=\'\357\327\274\270\001\221<\276\261\"\274m\342\306\274*nM;\037\033\351;N+B<\256\353\354:\364d)=\271\320(=\264 ^=G\221*\275\213_k\274\313\023V\275\242\275d<\242k\313<)\320v\274\025\257 =\206l|<\261\017\016=P)\023\2741\230\367\274\2331\264;*\264\331<\351Ar;\rk\231<8\347\262\274\214\037\023\275\337t,=\204_\276:O\372\323\274\354\030T=\306D\r\275\2071_=\300\222\237<C~\t\275\215\277\247\274E\2110\2759\3433=\310\017\367\274\356\210\002\275\261\333\227<p\332\367<\311\251m<i\265\004\275+\'\366\274\213\224\236<\200\225\036=[\2174<qP7<\016\230\010=J\r\230\274\307\022\333<\306:\n\275\'A(\274\217\200\"<\275\274y\274\346\315\023=\2548P\275\264I\321<{\375\203\274{\264\316<(\214\341\271\177e3=wT\271\274m\207\024\275\266X<=Y\251\216<\273k\022\275j\364\002=\037E\022\275\245\237\245<ms2\275\231J@=RD\\\275\231\302=\275w\023,=\325\r&=\310\205\337<\000l>\275\347\217/\275\371\352\205\273\261=\333<pur<\232\256\007= @\001\275\251\2164=\034\036\007=gUO<vy\247\274\177\032^=\274\200+\275UF\024<\322?[=\006\322Y\275m\342P\274\2250\034=|B\034<\035\315\037=\203\255 \275N]Y\275\371\377?\273S\367\002\275\2231\244<\272\373\213<\343\242\030\275\221\241N\275\341\246*=\244\325\014\275\030\017W=\321\364\343<\321\177I\275\322\317\'\275+ZU<\022t\364\273 m-<\326z\r=3\rO=7g?=\023\207!=\345\360=\273\356R\333\274\265\312\263\274\361\357l\271x\326+\275\336z\016=\242\353\322\274#\201\204\274P\357)=<\325f\274\010\251\303\274\212\363U=\325\301a<\350M+=\340\230\204;\313\252\234\274\304\253N\275\212N\020=\201VE\275\276\264\024\275\020\001n\274\343=\210\2747R\234<\323A\366\274gDR=$\001\254\274b\301\331<\217\330\260;\020H\372<\317\211(=\013l=<d\0360=o\356\036\273\362\\\220\274Q4\033\275#e\362<\004\237_\274\342\240\210;\r\217_\2747,\360<5\236\020\275\000\030]<\317*\362<\340\277T\275\016\262/=\330\360\205\274\310\244K;\216(X\275\"\275[=\310\222\325\274\264+\240;j_\307<x}>\275m=7=\016\340\242\274_[6\275\025k\020=\2544[=P\240\352<\"\275\000\275\013\271\233\274,SO\275a\016$\273{\246\355\274v\006Z=|\365~\272Q@\037=\025\316\021\275oo\206\2748\213\023\272\235\230+=\356T\005=S\2126=\325\202S\275\347\2126;\256\273\354\273\237}O\27432b\274t\315\355<n\035\306<c6N\275\326\230\n=\205\024\021\275\276\226\026\274[\363\355<\177(6\274\241\256\352<\225*,\275bl\230<K\207\346\274\334W\263;{\006Q<\252\032\217<\327p\271\274\311\236(=\251\266n<wb\325<\360\025 =\363M\276;\202,\265\2741u\017\275\002\n\216\274\230\342(\275\233\037\250<\016\022\016=w\005Z=_\256\330\273\n\334\007=Z\272!;\211.\365<}\276N=\343\021?\275,\363\301\273h\351\2629T\340\274<\351\200-\275IMH\273c9\325<\234<\\\275\272eI=\247\034~\274\347\nO\275y\252M=?\250\251\274\036\3647\275lf!=i8p<z(R=\313T$\275.\357a\272\t\r\223\273\275\254S=D\022\035\275\303\304(<6X*\275*v\032\273G\021\331\274<\337N\275x\254e;8\265L\275 \201\346\2733\0337\275vs\334:a`j\273\301\226\216<\263\013I:`\020\377\274W\245\253;Gz\r\275\362\336\365<\260L\271<\357\207E<9\204\365<\030\375\362\274\227\202\232<\260YE=B\017L\275\"\321\343<\232\261\327\274\214\253\345:\241+\254<\277cA\275(*\017\275\352\253)=Xf%=.z\314\271=ME\275\000\235T\275\377\\\365<\252\347\324\274S\rA\275\267\361\364\274V\250\356\273F`\217<\343\305%\275\027\0210=\304t\r<\263.S\275\023D\341<\237\030\\=\274W\304\273\254\263\336;\364\234\t\274\305\037\216;9u\026\275L\207>\273\257\235\032=L\016s<\025\'\200;r\205\324<\240\252\007=\177\2666=\n\314\'\275l\025P=Z\267\263\274\320\024\014=\001\222]=p\3331\274\377\0137\275\333\223r<{i\320\274\017n1\275z_\345\274zdr\274\335m[\275\270\273\276\274\324\313\217<nX\341<2y)=\277\346\024=\225H\306\274\010[\302\273\037\034R<\265.\331<\315q\216\274XZ><\201\036D=u\001\374<\215D\304\274^\362(=I\216\335<*7\204<t\215\313\273^\025_\273\0310\362<C\363\323\272k\010\361\274^r\223<,\205\271<%\346W;U\212\033\275\205]\200<\203\253R=\240\252\233<\025=\374\2747n?\2753a\020=\253\315\014\274\312\253\351;\344\2730\275\301?\016<f\244O=t\315\366\274tr\275\273\302\'\223<\364g\244\274{\336\345<V(\275:\315!9\273,\271\257\274\024\325\223<L\257\017=\254{Y\274\347(\326<\230\371\342\2741\2455<\351zK=R<w:1,\253\273\326\235;=\344\327\034=\024Q.=2\327G=\037\021\240\273#\337\357;\332\0378\274\256\"&\275\0178Z\2759\264\342\274\2354^=q\013#=\022\301\317<X9B=\005|>\272\367b\330\274S9\201\272Pj\005<\204\207\016\275\371\027\001\274\034\037\213\274\266\3448\275\031t\312<\'\231\220\273u\214:\275yL\034=\311\267\222:\334\227V=\247\214\310<Z\2471\273\304\2559=K5\"=\363\'\205\274B\035\232<\233\370\354\273\336\3165=,F\236<\271\307\211\274W@\010<\235\033\022\275\225@\300<wa\345<\017\342\363\274)\306\006\275\037\030\000=\235\026\317<%\3307=9\3146=z\265\022<\362\0365=C\313:\275\366Q2=\3070\014\274\006\035V=\236\367?=\272\377\017\275&v6=3\035X;g\372\267\274\217\205\306;\336\355\345<g\267\177\274\226#[=\005\254\235\274\264yp\274\264\264\223;\223\223\367\273\334QE<{W\232\274\026\275\006\275v\207\335<\231\355\022=&s=<[\250\334\274\027\214\352\274C 8=)\3229=DAR\275\344\3725=LM7\275\000\276U\275A\363\354\274\"\356\355;\301\377\276<8Id<4\202\345\274\236\010\221\274\344H\307\274\335u\256\274\241\230H=\260\352[=\314O5=VED=,\364\025=\276\335a;\341\303\030\274\022\275\226<%\324\236\274mt\312\273~\365\004\275tzV\275$\232\321<\342\357\331<9P\'=yw\357<lb8:Q%\314<O*/\273~\010\351<\027&^<\007\266u\273v\213!\275b\3632=\301\364\232:\273\004\006\275\357\300@\275U\356\211<*\2026=L\300_\2733)#=@/\315<Z\337\261\274\213\264b<\357\225\305<l\207:\275\355A\257<\252\023T\274-\020\363<\222mT\275,f\371<\354\'C<\207\216\032=\0138\253\274\010\242\004\275\326R\353\274J\021\267;\331\367\177<\252\221@\275{S\273<\362\307\025\274Qp\200<\246S\325\274\341\016]=h\223\005\275\007J{\272\372\350\347<\025\026\253:\250@\257\273\301\303\030\275\256\376\003=Z\304\031\273\366\311\013=\021E7=\202C\244<\314\332\030\273\275\301\373\274\350\243:=\252\315\357\274~\3719=\344\1777;\325\r6=d\216:=\214#K\275m\350\026=\247\307\316\274\364\2212=c\227\'\274\254Q.;K\263I\275\237D\203\274\353\005K=\277\350\353\274\035\207\367<\355\327T=\346]U\275\330\250f<\357\230\260<(\372\366\274\307\362;<\356}8\275\272\243\303<&\265\021=\377\202!\275\230\314O=\376;\000\274 \2746\275\250\364\316;\345\305\035\275\340\020\355;>\246\004<g|\304\274w\372Y\274\313\305\304\274\nl@\274\251\"b<F\344)\275\253\364\325<\023\237\210\274\362;$\275\303m\307\273\366?M\275\035\304\031=\324>\036=\217\301E\274V1\211:1\364\024\273\234\234@:D>3=:\372G=G\244\310<V\206\035\274\005\t\013\275\214\013*\275<\301\254<\211\236.=\363\336B\275\2610\n;\370\010\000=\235\020\342\274\367\3271=\036{C\273\200\212\240<q\026P=\'\233\016=I\ra;\344\322A\275q+=\2758\342G=\010\251\200<G2\373\274\214\031\201<I\367\241<\216\243/;\233\022\346\274\233b\227<\325\013\223\2743w\367\273\342\n\367\273Y\317\373<\322Ha<\355\032(\275\252*g<\3566]=\344\354\372<\347\0016=\312Ol\274\212W\301<s\037%=P\306\375\274\230V\210\274\234\253O=\340b\003\275\312(\212\274a\354\333<F\342\223<t\t\005\275e\343>\275`\205\"\273 \240\326\273X\005\030\275O\032\347<\006\271\367\274b\032\364\274\"\344\022\275\310\276)\275)\317U\275\234\240\315\274\003\001\004\274\372)\306<^\353W;\021(3\2754\310\037=lj)=O\246\253<\244<T=\212vL\2748\207\340<\311\260\256\274\351\271\210<|\275\207\273\274\241:\275&\235\214\274:zV\275\245MT<\2079\376\274\277\235\377;\366\205\032\274J\337u\273 ^\030=\366\217==J\024%=\226XL\275A\236\246\274[\004v<\003\227M\275`p(=\352\266<=\030\035*=3\323\005=\272Y\230<\014\252K;Hu#\275s\273\216<U\222-\275\216s\250\274\"\366\n\274\206\033\002<d\004S\275\236\217|\274\236\'F<B\317\346<+\241,\275\366\370\370<[y\324\274XgK=OJH\275\361\277J=\354g<\275\265\0168=\305\273\\=\000\031[\275M\274\017=2\337G\275\340L\330<@\357\316\2729\031\277;f&\352\274\302q\271\274/\353\276<W\203*<y\322\336;\360&O=0\260\033\275\245\017\332\274\377\221\033=\032E$\273\252\307\340\274j\026X=\240\241\366\274\374\367-\275#\036\032\275\376\266\t=p\371(;\227s%<\332S.\274{\023%=\335\221N<yP\326\273\016Q\375<\255\271\362\273\227e\226\274\3171T\275\247\005%=\200W\347\274\212\3716<\222QI=\256*)=\034\351D<\037XL\275Y_W\275(\215 \275\020\017h\274\336c <\365\242\261;aH\005\275&\264\301<\223ik\273\207\244F\275\301\367\236\273\201\005\237\274q\245B\275,g\024\274\257\022j<\225\276\257<ZA\017=d\304^=~\211\004\275\'y1=J\266\007=\005\224/\274\365\335?<\274#2=\265\371*=\013\210G=y\230\364\274-\336*\275r;\230<\325GY\275*U,\275\t\337J=\201G\001=\374\204?\275\336\0017\275\0020\270<_2\260\274M\230\032=\016\033\374;\016\320X=>\3129=\362\253\201<\177Z\014=F\243+=\177\302s<\220S\360\274T9\023<\312\373\\\275C\233,=\330)\247\274\351\026\334\273\274\213\035\273\032\232}<\220@\356;\211_S\274I\350\263<\007\257\266<\2041\347\273&\365\026\274G8\034<o\224\310\274<\331\014=\023p2=\212\260\026\275\034\227J\275V\332\032<\364\312<=\t\257S=\007-\017=wA\240\274\352\211E=\nr\334<\371\035\370\273\035dv\2739:\031\275\257\312#=\2225U=\360q\334;\367\027:=\271!B\275\266\354\264\274\266\331\263\274n\002\232<\314\241\271<\2526\342<\360\265S\275\204\234\004\275\327\261.9\010?\262\274\221!\031<\311\276\265<\305G\345<\207@*\275\2311\235\273P\276[\275?\034P=\207\263\350\274\305\204<\275\3632(=\3144\240<?4\021<<\277o\274g\252\004\275p\324\316<\206\376\227\274\"\'\200\273>\265+=\035\274v<\376\306\301\274& \210\274_\257\024=\252_.\275\270kQ<\365#\036=qM\266<\234f[=I$%\273*P\217<\363e\010\274\' \245\274\376\307\034\275\335\221\241<\210u\217<\360\210V=\324\n\n\275\336\347\355\274\221\266K=\r\320\343;\272\227\'\273\354\003\037\275\332\220U=\315eC;\343\320E\275\036\332X\2751\315\360\2743\222\r\275\221\006\264\272`\001\'\275[O\224\274EY*\275\032T\227\273\363\006\010=\3670\245<\304s>\275y\\\341\274\323\351N=\271e\274\274\345\232\317\273\374w\265\274!\321\331\274\035\016\354\274J\031\267<\251C%=6^P=\000\001\270<\n\242\261\273\326A\006\275\210(Q\275z|p\274\260 \240<\025\nE\275J$\235;#\231\016=t\020\321\274o:\232\274r\247\377;?7O=\203|\311<t>\002\274*\310\372<\242\250F=\253\323(<{(\241<}N;\275\356\345/=x\'<=\301\220\307\274\302\250\317\274\270a\367<8\373\023\271AR\010\275\327\016\337\273{\360V\275M\261D\274"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\337\014^=M\030\305\2748V\007\275\304\001\227\274-\233\024=\275+\356\274\224}\363\2745\310J=\n$\366\2737\243J\275v\300\003\275\024\266C\275\276Q\210<j\013\r\275\004\225\035=m\335/\275F\2153\275$\2362\274\254\216\320<M&>\273\002\353P=\307e\320\274\206\030@=\265\034\223<\336\247\313<\276\303 <\326\t(=o\266\255<flC=240=+^\246<b\224\303<2\235\020\275\211\\F<\301\213!=\215\340E\275\322n\025;I\327O=8s,\275\243\251;\275)&\003\274[G@\275*NF\275\002\362(\2752\006u<\036\362\322<Y\376\003\275\366\326\212<\006\350>\275\271\200[=\037t\273<\035\334\203<+\035Z=H\322R\275\251\343\023=5>\240\274R\364\210\274\002\203\017\274\306\340b\274_`\027\274\321\010\204\274q\261\341;\031e\r\275\220\223\270\274\242m5=I#M\275\3774N=l\275\312\274\"\215\312\274)L\021=\252\253\275\274\233JG\275\344?\t\274\001\211\264\274\264\257o<W\010\200\274<I\022<\205\010\207\274#\222\256;\333\"\343;\266\201>;\235V\'\275\263|\367<K\311\250\274\346\234\310\274&\007\036\275\033\324\007\275Jwt;\376\235\002\275d\247\247\274@\357\023\275\315\306\361\274;9\253;s;\346<\037Q\211:\324\345\t\275\356\216l<\236`\235<E\363)=\345\022\252\274;\334T\275(\342\220\274u\254\345;\n\201\334\274\303\251\262<\300\233\225\274\315\2409\275`E\302\274K\361\306<\273\2620=\327x\335\274\205\261M\275\025_k;\371\304\352<\360\324l<\234\014D\275\310\252\016=\326\267\240;\344)L\275bp\016\275\322)\216:\222\255Q=\204\203W<6\363\243<\272\347^\275@\273\023=\315<6\275\224n\244<\266\307\375<\271\351\263<K\313\361<\327\276\177\274\226p\376\274\301P\240;I\335\300\273\355\377.\275<\030:\274\373\026U=\343\333^\275\023\233\003\275\002\273\244<8+\325\274\230UY<f\257\2109\363\352\375:p\237\274\274\306\233\007=\232-\250\274a<\274\2731\263K=\374\000+\275\265\306H<\274\346\022=\303\004\005\275\0203<\275\305\277y<\224\343\025=\006\'9=J\357@\275X\017\275\274H(\311<\006T\376<\322\2416=oj\214;\007\037,\275+\272\033<\004\207O\275\274\'\300\274\212\355%=\330\023n\274\246\033==\235\270\307\274\332\266\210:\251\035\233<\030w8=\034(\320\274 \266\"=O\266\340\274\271\377L\275\030qW\275\007Hf\274\000\001$=\265q\366<D\034\214;\303O\202<\222\272\r=\313_\310\273\224\363\254<)\242\035=|\003\024\275\341\244W=^\340\322<Z\270\236\274\356\0310\275\3146\212\274D\333;\273\227\314\345\274A\005\027\275\336\204\321\274m\374\036\273>\276\214\274\362H{\274X\313\315\274\314A,\275\236\234%\275\334\2530\275\237\\\177<]n\326;\372\342@=8\2764=%e\227\274\243\365\001\275\000L\034\274\274\017D\275\324\255I\275q\2612\275k\345\216<y\261\374\274\231\0238<|\225\374\274l\017@<)\303\000\275_\216\262<\242\346\347\274\013J]=2FZ\274\264\236n\274\035\023F\275>\341\020=\001L\252<\007\314I\273\000\260\"\275-TE\273\251\306\310\274a\204\242<\225\222\321\274V8\353<\202l\240\274\000\2617=\352\023\026\275H6!\275\246\265\202\274\356\356Z\275\230\200\261\273G\235\r\274\367x*<3b\024<F\233\216\272\244\\C\275\257\032\352\273!H\245\274\2606\335\274\303}%<4\211\004;m\304\202\274\344\323\323<\233\254\204;E\372\013=\314h\210<$q\373<\362\206\010\275\217PP\275\222\237 =_\203\251<f\002\027\275\007\002\030=\305\355\022\275o\356\311\274\303^O\275\374\247\031<\205\343\341<\003Lu\274c\375\020<m\025V=e\327\302\273\330\322\231\274\354x\010=\340\020>=\036\300\'\274\\WU\275\321\357B<H\311=\275\204\276\333\274\241u\257\274\333\002\037<\312\246\323\274Ol\357\274e\307O\275{\216\032\275\373(\230<\026@\377<]\r\r\275\211\331B\275\353\237X=\301\3723\275\022\3438\274\317\037\246<\3208\013<\261\2120<\025\033[=\'FP=\346\3548=\201??\274\243v\"\275p\032J<2\216\325<\25151\2748\313~<Xr\014=\003\213\254<\301\262\242\274\210\2430=\313\301\031=+\220\277\274\020\356\364\274M\325\226<\250\371u;L\276^\275*\326>=\346\tB\275\361z\245\274\006\t\315\27417\204\274&\016\221;\003V\313\272\022G\260;\320D\276\274+f%\275\322\035\375\274=\013:\275\370\334\312\273\221&\006=p\304\223\273\216\023\252<\300o\225;4\272N\275\357N\350<\350]2\275\327\307\271\274\327\003\251<\304\324\023=\356\006\023=\021OI<,\211 <[|\016=\206\235V=R\250\361;aC\376;\334\214#<\363N\030;\222\357-\273\303r\267\274\n\237\024=\272U>\275f\0353\275f\274\364\274\273\250\035<\302U5\274\252}\025=\3452\035\274D\242\307\274gk\000\275` /=\374\356\000\273\230J\267\274\340\220N=\214\365\316\274\250{\023\275\223o\256;\345\035\325<b\323\024\275XE\207<b\027U\275\240\026!\274\030\254\341<\032z\307<S\203\303<\367\335\207<(\231\223;\241\204\210\274u\274\344<>%V=o\362\277\271\244\243<=\201,H\274\314\252\033\275\236\305\220\273mG\372\274\265\214\010<S6\033\275\233\315o;T\031\\\275_\232H=9Z\352<\020\216\271;\257\327(=\021r\321:!9\332<v3\375<\325\021?\275m\210\317<\232c\013\275\364LK<\307\310\026\274.0\264<\262g\353<\022~5\274\321\036\303\273\341<\336\274\201\"s<\360\234\361\274\371\316I\275\252\375\223\274\264\2337=\225\222\017\275\"\025\272\274e\362\316\274\333)\'\275\207\037\\=\362?&\275\002.\211\2746\216\351\273\"Q\300;\356\235\231\274\247\353\372\271\021\027\263<\213\275\013\275\2765\027=\036er\274\344h!\275\271a\314\273P(U\275\220\376\215<\375\016\"\275\242\020`\274\252Z\235<\355\344m<\342A\237<|e4\2750VQ=\200\366\017\275\341N\177;y&\022=\330b\013=Y\037\253\274\312R\032\275\317m\277\274\210U\034\274\271\013\333<U\345;\275\371g\305<\333\325{\274_\026\304<8\263Z\275\203\007\323<j0\202\274\220\255\010\274\024\336\'\275\265J_=\3514^=G\241,=\336\257T\275\374\242\214<v\243\241\274\003\243x\274\347\340\301\274\033\331\342<_\\>=\370\213\032\274\366\002\037=E\235\322\274\263\372(\275R\274\022\275x\300\365\274@\374S\275\226J\315\274\202J\224\274!JX\275;?*=\3769J\275b\266&=\370\256]\275\'&\210;oJu\274\313\353\230<\177\331\230<\006\032\367;\371\307\322<@D\370\274\n\013U=.!,\275k\341&\275\202\314\364<\202\351\216\272\364\030\305:A{\240\274\243\177\244;L;\017\274\006\353\232<\335`H=\nQ\032=\020&><\215\257\360\273\337C\246<\023\"\010;\317\271)==\375\316<\267a\006\275J\237\266<\005\344\225<\343\226\325<p\013\262\274E\010\266<\216\231d\2740y\343\273\330\007n<D<\'\275Z\305L=5\0332\275M\337:=j\340S=ls\216<\300\266.=\323\305\250;\257\325M\275\234\200Z;d0G\275~\\8\275X\334\t=\251c\250\274L\227\022=k\277\002\275n=3=\276\023\275<td(=\005\r\230<T \247<A\034\274\274\370EZ\273\034\246\375\274n6`<\250\334G:^\001.\275\245\3606=\027\300\312\274+\204]\274\246\305\205\274\013\276-=_43\274\204\304\265\274rx9\275\034\245\005=\021\010\257<\020\037!=\336Z\214\274\333\374\026\274\200aM;@\226\\=\211\031M={TC\273\361\245\257<\313\375\026\274\353\374\016\275\367\223\t=\020\277\333<h\360f\273\034\337\032=\217\343j\274X/\335<\350\0257=\310\035\020\274\346\241(=\035Q?\273S\234\263\274\\\357\205<\2724\020\274y\213\377\274\316}\001\272\2776\317\274\350z\342<S\2232\274,h\255\274\241p\260;c\203\253;_\330\272\274\242\277\037=\377\351\237;\350h\327<\037\327\026\275\374\340\r=\357\327@\274f\340)<\016\371S\275\314\333\253\274\221m\r<\232H\215<\246Q\357;\354\367\023=\244\022\270\274}\371\341\272d\311-\274d\241\025\275\206=!\275\013\261U<\023\210\006\275\361\006\212\274\255\201\022\275\255\300\337\272\223\246\352\274\320\364\017<\0326\007\275m\345C\275\r\375\222\274nA{\274I7L=z\251\002\275|\035\220<\262\337Y=\266\304D\275;\rG=-\370\233<v\343\036\275b\036\331\274+\177\000=\275J\270<!]2=1\307\010\275\025\217\021\275U8\327<\327(\304<\306\342\347\274\230\245\026=\317V*\275\006Y\333<\177\0138\275\367\t\332\274\334\312Q<\345d\330\274\010\0058=\212L\3458\206q\206\274\370\324\343;GM3\274\246\363\313\274\033W\221\274\004\027\306\274\341\301\000\275\017\356[\275\222\245*\275EoB=\204\'&\275K\317z\274\0167\261;\322\260[=P\352O\275\343mH\275%\3505=\013[U=Wl\037\274^\265?=\351\370\004\273\000i\226\274\267}\270<n\223\273;\223\002M=\270\007\217<\020\373\317<\3360\037=\027R\037=\375\340\024\275~\016U\275\260\3732\2757-\274\274\207\032\313<\'\327\275\274\357\253\260<\226\260\032\274\346\r[\275\360:6\275B\354\276;6\250\302:*\221\006\275Ym\023\272b\257\260;\022\320\352<\311\343\027\275G\346\023\275\366[\334<\306\222Z\2759\214V=\235\205\345<u\317\017\275\265\340\356\274\231\335\025\273\363\250\252;\217\224\364<\303,\t\275\016 \311\274\265v\345<\250\233\315<k\242\325\274\265\267C\275\324\002*\275\371^\020\275\244\271\031=K\230\325<L\205\270\272\367\005\347:\250\034\r=\253A^\275\304\206\363\274\240p\312\2748\377\001<\330a1<\233%\341<\346\364^<\321\322G\273h\355\030=\201\251\027\273\304\3749<\324\336\327<\017`]\274d\302;\275\032\215B\275a|\002<W\374M=\373\352O;\rw-\275d]$\275\340\272\365<\347\3320\275\244_\224\272X\224=\275D\005\2119\226KZ\275\026\300\027\275@\220?\275\250\360\036\275\347w\342;8A\306<\276\236\032=\263\276;\275\250=O=\305:\256<\237n;\272q\324\235<:~\014\275s\267%\274\371.4\274\263\243\023=I\263\307\274\203tD=\311\315H\274\210(L\275\204AK\2752\004\344<\2555\273\274d9o<\253O\205<Q\342 <\000\362N\275H\336\371\2747\333/\275]\206\006\275\230\027v\273\225\214\001\274\254<==\221\222\227<\360K)\275\313\005W<B\324R\275:\201$\274\314>\371<e\272\360\274\351B\035=-\226\007\275\217\r\022\273\275\270.=\201\251E=y\344o\274\340\224H=\351\347T\275\363L\364;\276\245\016=\2622\213\274C\311\";\215]\306\274\353\302\346<\372\347<\275\273u\316;\257\260\r\275I\353:<0J\223<i\237\230\274\022B\264<\036r\026=\007j\013\274\356\204O\275\307\260\236;\341\342`<\310?\025\275\377\255\027<[\224[=!\326\351\274\005\371]\275\177\336\347:\3705H\274\273\300\320\273\356\256\3159\352\223h\274^\255\331<\230\240L:\3106\207\274\025\332@=\003\232Y\275\256\353\242\274\245\211\323\274\307\255R\275P\355\364\274\010\243\334<v\360\225\273\271\030 \275$\233l\274\220\2773\274\000\326\212;E\270\025=uL^<\377\253\022\275\220\357\362<\365\007\035\275\006-\251\274S\002 \2752\022(=)\371\232<1c\336<\252z(=7\375w:\257\323\225<\216\323\304\274\306\242f\273\330\211\241<Y\322R=C]\016\275\336;\005\275\014\325\247;\345\372(\275HO0\274\034\216\340\2744\225\030\275WM0=f\333\220;!\037\037=\364FF=\345|U\275\312M\243\274\232H\236<)d,=\237\347R=\304\276;<\256m\001<\032\277\016=\327L\347<\366n_<a\033/=TX\035<\033\350\024\275\234\223\213<\200\357H=X\261\265<\365\305\010=\321\230I=\004\010S\275\343^,=\202g\313\274;/_=\377~\363<\361\215\266<U8\344\274\362\340\275\271\354\355B\273\242\365[\275\202k\035\275H\3305\275\241\324R=\025\324\337\274~AA<\n\201\200;\316\355*=b\234\026=\313\"/\275\323\217d\274h\rX\275\200S/\275\262\247*\275V\014\017\274\267\260\023\275]k4\275\327G\263:niV=\315\337\032=\346P3=\205\200\366\273\234N;\274)8\004\275\002\262E\275\243\275@\275V\376Y=pl\024=L\271\214<\002\\\316\274\002m\027\275\350\3506=\356\352O=aRC\275~YS\275e3Z=\037\214\016\275\271\305;=\2215\342<\030\204\032<\341\246\003;O\354\334<\240\354\016\275W\361\\=\307x\033\275P\215_\275x>\r\275A\003\033\274<\325M\275j\260\257<\321\304\017\275\274\261\340<RD\233\272\365\376_\274\356~&<\034m\017\274\364\242\002\275\267\265M=\340\372]<\366\331\213\274\255V\001=\265\2630=NU\324\274q\344\304<\320\006\276\274\360\306\002=>\021\377;\241*W\275!JC=\"\000%=\355.?=\352\036\345<\017\335\275:!M\334\274\221j\253\274#<f\274r=\265\273\252\273M=%\322\372\274\022sm<\352\375O=w\221N\275o\021^\2751\346\037=\255o(=\224\227\005\274\304?\304<\2138\357;\355%)\275\020\022\255<\242]?=\302t\036=Gmk<\265\333A\275k\376\316<*\371\201:\005\026I=X9\241\274+B\262<\204n\357<g\240F\274\376~\271<\032.9=\277\373E=\002T\"=\251\333\211\274C\332v\27447D\275\345\232\013=\365\275!\275\235H)\275;\"\\\274WC\276\274#\317\031\275\253\362F=`\241G=\003S9\275\266\251\360<yI\302\272/= =\354iD=\332,X\275sH\027=`kF=\324?\215<_H#;X\220$\275\247\364\223\274pi\354\274wM\350<\261!F=x \243;\341P3\275KR\036\275\215\270+\274pJ\r\275\207\226y\274l=\016=9j.<\205\360\033=\205\001\202\274\343\272\241\274\203\224n<5\304V\275\233\245\030=\345\253\006<\235\315\227<*\006\034\275.\243\304<\325B\325<\376\0230=\326\025\004=\000C[<\213$,\275\355\334\261\274\2627\310\273T4\252\274\244\312\346<\203+\241; \340\035\275\335\006\232\274\276\274\330\274L\r\323\272\365\323\037=\251\301\263\274\311\344\177;\232ks<\224s\347\273\017\367\244<\214p\232<T\360\026=oO%\275~G\020\274\340\343A<5\260\362\274\215\322m\273/\024s<\222$\243<*]\014\275\332\376\243;\273\035+\275\343\274\030\275H\354\304\274\255\232\n\275\005\356\003=\253\025\032\275\355#\371\274\014\374\032\275\336\032\2119i\312\247:\273\\<\275\364|\036\275a\005\346<\366\347\027\275oY7=\342\211\002\274Uz>=\2306!=\327\322^=\256\2268<\265\255\013=_4C=\343\266\342\274d\263\t\275%y8\274\240\353$\275\234\342\001\273&\276\251<\301\026\3719\321p+=\360\334&=\324\033\034=\266\316\037\275\370w<=\001j/=&\244\376</j\244<\332&\262;\223\254)\275\232\2115\273\325Z\206\273\300l\"=6\235\326\274\327\n+=\353<\367\273Y\322M=\327\t\216\274\234\"3=\354\205\365\274y\244\375\274\215\017\220;\331\256\001=t\231\"=\006N$=g-\370\274\010\255\267<\210\226\360\273:\301\006\275\225a\245<-J\304<\026\224L=u\014\006\275FZ\013\274\030(\177<XV.\275;x\215\2746|\006\275t\331\n=\212\364Q\274\017:\346<N\240]=\352\320\334<\265\351:\275\322\3139<\270/\265\274\236*\320<\030\0139<\362}\357\274\200\024(<\006\237\316<IVW=\266\314\023\275?((=\014\"\206<\324w\337\273\255\267G\275W\312\001=\223Y\340\274\300\236\347\274\016\024==\363\205\006<\017\376\210\274&\210|:\263\305\t\275\020\344\201\274\\\256W=\013\303Y=u]\031=g\0301\274i\342\336<\365\313\322;\356&\354\273\035\037\364\272:\331`\274}\230\003=\371\234\\=bs\270\274\025z(\275\274\227\006=\275DN<A\000&\275xW\200<\t/\014=\377?2=\277\"\272\273\202\242\250\2745)<=\204\272\355\274<A5\274V\371\213<.I\006\275\305\340\303\274\235\224-\275E\225\255\274\352:P\275\360\261\256\273\346\266\033\275\267\254L=n\320F\275$\325==:\303D\274\352f\303\274\342\313\224<\354^I=\004\217V=\010zX=\316\314R\275qDP<g?\r<\024\353!=\337$\026<y2\267\274\207\3552\275\226\301\263<a<<\275\221\001(;\001\305$=!\030}<\310\361J=\r\266w<\263\243\016=X\375\253\274\211I\003=D\324:\275|A:\275\360\340\301;\367\212:\2748\020\\=\207\273\300\274o\t\234;_8\255\274\264u\035<q\370==\217e\315<Q\035\205\274\246%\035\275\313\0047<\006\033T\275%OA\274\r\232\243\272<\037\376\274\\\350\303\274\006>\260<&\271\203\274 +\254<\212\2479\274\242\006E\275\262//\275wF+=\276\037\262\274\013\206\212<\252\323\014<=}\364<y\262\013=XkO=\257\300\000=3\022\230; 1\216<\205\033\330\274\017}\003\275\260T\010=\275\346K=\034P\036=k\311\251\274^\356+\275\016\305)=\247|\302<OQ_\275\246.\231\274\227\331\244\273`\237\006=\314\256j\274z\234\027=]VE\275\313\300\276\274 N\250\2740%Q\275nN\260;3vh\272\"8\203<E\231&\275j>\357<a\373\037\274\372\277\225<\345\246Q=\222\322\037<v\244M\275\326\033\255<l\335\305\274\242y1\275%-%=.\034\003=\236:\360\274\200\'\344\273\321\241?\2757F\027\274\376\222\032=#\310F=#\341\312\271\226\275\020\275\257V]\275\310\n\364\274F\272\035<\027\304\376<OL\213;RQ\023\275\026\314W=\024q\277<\033]\244\274\214\274.\273\323\005o<\336\027\361\273\034\232\\\274\004\r\216<[h(<\020l?<\330\346V\275\351\317\031\275\315R\372<\204I\341\274${\320<\033\251$\275\245u^=\276\316\360<\257\337+\275\261\331\344\271\005y*<\237\366%=\320\245^\273{\2762=Q3\027=\364vQ\275,g\270\274Y\204\356<P\265\372<\'\216C=Zg\362\274\252OV\275)9+<\340\220\306\274\275\323\n\275\256\n\335<\242\202\226\273\357\273\230\274V\371\333\274\231=\006=\276D\377\274\003\362*=\214\035\003<w\372\023=\377a4<\332\306\343<#\271\336\274\367Q)\273pQ\027\275\357\313$\275`\304 \274D\010\366\274\006\332\000=b\021X\274\345\371P=\232JX=\320\337=\275\021\010Y;VI\341<G\270\230;\027\3362\275\256\355\020=B\344\343\274\263\315@=A\nI\275\036\335\352<5\2124\275p\235\364\274Dp\203\274\213\322?=\r\201\207<\002UA\275\241\271\034\274\023\377\221\274\225\322\207\271\242N\"\275\266\273\232<\023\337\202\274\260\303*=r\244I\273N\215\342<42\010\275\311\354\300<\032\356t\274\002\2149=\331z]\275 \256\364<\320\307\016=\3166M=\267v\342\272E{\307<\"<(=\303\310d\27347\250\274\026%\002\275:\343M=\305\253(\275\376\360\240\274~^\005\275rl:\274\352~_=\202+-\274\223x6<\310\022\274\274\2150\007;\376V\332\274T\004\036=\305E\327\274Qe\'\275E\311\2245\313\304\007\275\343^?\274\312\310\261\274\233I\225<\257P\207\274EQG=d\013\342<+\033\031=\t\030\243<\004\350\324\273\300\366\314\274\353\217\332\274\215\233\334<\306\014*=^rO\275\000i\236\274t\3269=\035k_\275@\263\365\274\232Kr\274^\'\345\272@H\2449fJ\210\272V\274g\274\234r0==T\037\273\244.s;_ZO\274\205\317\206\274v\215\371\274\255\215\276<PA~:\026\346P=\365\373\236<\256\322R=\027\313\034\272\201|:;\357#B=\004\201!\274t]\376<G\251%\275n>^<p\nB\275\210\365\374<\271{Q=e\3604=\022\2748\2757\346\014\275\007\343\037=OtL=\331\354 \272\367\0069=\032~I\275\356\356^\275\006\330N\273O,\233;;\365\313\274@\001\024=*T\t=\034\376\335;\255g\321<\310\346Z=/\340\255;\366\332\302\273\217\307;<\242\343F=\203\331\372\273\017\250\236\274\225q\014= ].\275*\255I\275\027\rA=F\002\014\275>bC\274\263\254\013\275\337\325E=\346\010\007=\267\022\013=\273T$\275\217\201\t=\322F\n<[\2312\275\360\013\217<\225i0<A\224\037=7\361\212<[\251 =\246P\215<\226\036\211;!\250\217<\216HJ=Pt\013=\335\017W=Z\361\262;\314\217M\275<\030_\275\206\364$\274\n\365\023\275\304^\266;a\276/\275\235r\021\275QZ\247<\370+\025\275\004\356+=\206\273F\275\001/\004\2741\223\306<\335\323\342\274]\240 =x/\037<\335 L=\205&\210<\265uR\275\236\tR\275\300\031\013\275\323\306\026=,K\003\275\255:6=lr\205\274<\030\217<,\006\024\275r\322H=\323\017;\275\271\020\253<\263\255<\274\342i\005\275\236\222O\275\031L\002=\346\022\304\274\025\367\033<\364$\234;!o\221<\375\202\024<\344M\241\274\364\245\353<\215\\\237<l\257\372<\256\007\375<\306G\257\274\244\246+<J\221}\274\300(E=\216\224\306\2740\366R\275\177\247@=v\347\302<\362\255\n=x\247*=\023\2452\275\323\272\026\2756sR;\036O\000\275\322\253\200\273\"\204,\275\327\232\233\274\330\r\002\275\337\321\003\275\322y\030=\243\'7\274\212\177\226\274\223\315^\275o\212&=\013-\263\272\\\364i\274\232\260^\275\013nF=\263\177\350\274`\230\353\274*\375X=i\354^\275A\233\224\274\213+\001=\364.I=\350\"\273\274\216\240\002<\210\001}\272o\321\"=\t\360g\274\005\002\303\274\376\006\035<\315\313\017=\256\201\220\274:\000\220\274&u\333<T\275\326<\233m\223<\207\031\025\274\314\207\314\274\016R\335\274Ab@\274\007\230\t\275\262{5\275\200\322C=kv0\275T\265[\275\300\323;\275\344\2652\275\214\344\247\274_rj;\322d\003\275\236\016\010\275at\301<\320\0205\273\231\255\234\272\352\\%\275\r\217\360\273\375uA=C\317L=m\243A\275XM\210\273\356e\355\274\0279\265;\252\272\203\271\345\276\023=\033\210\005\275\233\372\350<4\253C<\273B\005=1\345\003\275\255h\033\275\201\211\022=\212\231\246\274\177hH\275\215n>=\343\177\010=\313\037J=)\272C=\355\240,=~X\024<Zx\226\270\025\267\255;\020j\023\275J\354\220\274f;\003=\331!T\275\311\'M<*\004\036\275\277\365Y\275B6\216\274R\276I=\001\311\001\275\031\377\303:\244.9;/d\035\275\205\215!\275aV\227\274G\335\324<\023\252B\275\256\200\031\274\036=\337\274\207c\330\273\351\205F=\243\367V\275\262\324\324;=\314\352<\'#\300;t\026z\273Kh\014=\332\231\024\274@OV;}\307\006\275N\315c\2725\237Y\275\215\333\221\274^\313\316\274\266\341\274:\223j*=\'\367C\273<$\023\273\367\210y\273\216\276\237;\277\311I\274\256\311\265:\230 N\275\266\r\256\274\272{\002=\031\343\346;z\314\031=\242\025\302\274\004z\314<Z\240\021=J/\030=\362\026:=\335\222,;\324\371\030<\373\326\320\274t\256\035\2743\362\321\274pg\021=\202\373\203\273~,\017\275\352M\257\272\020\3073\275\231\277!\2748\2770=u\301(<\331G\253\27329.\275k\234G=\241\232\274\272\332\265)<q\2620\274\010\007,=\377MF\275\023\252\032\275k\206g<\213\343@=\3707\033=\343e[\275\003\307\017\275\347\"<=\353+X=\305t\017=3\264\254\274\367\346B\275\232\313e<6\033\346<\343\226\001\275`\372@=\257\\;;c\017\244<\233\321\306;\3066&\275+\273\231<B\302e\274V\237\006=ln\\\275\304\334\030=~\235S={\272#=\204\234\206\274{\022\327;\341\253\005\275\274\225\373\274\03447=\207\004\336<rDN\274\021\333%=T\023\260\274\367\2032\275e\022_=\002d\360<4o\003\274\323;J=%\022\324\274K\007==\\\335M<\203\314\r\2751\351\034=\206\223\321\274_\271\371<\311[1<\260bX<G\272w<\212\rW\274\201c\024<\t#\324\274K\\C\275\245\302$\273\013j\n;\347\002@\2744{&=\235\341\236\274Z=)=\211P$\274\271\353\016\275\\Eh:5\342+\273\357\352\370<\020\263\206<31\306\274\216I\315<\003\306\017\275\016\325\356\272\300\233O=\371\340\332\273>\322\212<+\345\257;\031_\036=\253m\205<H\247\016=XS \275g\377\274\274\231\003\021\275\343 )<\340\252\3067\373{(\274f\305\214<\212(\205\273\350z\351<\204\2650\275\264\273\206<\272IE\275\241)o\273\306)\333:\251a\226\274\370X\310<Ng\215\273Gw\263<e\177\036\275p~u\272\247\\8\275\016v\326\274\251\367\354\274\315\303[\2750\317\006\275\242\177\324\273&\031M\275\tH)\275\303\212\211<\357\366+\275\241\202c<4\t\020=Q\306\034<\343U^=B\312$;\205~\210<\037\315Z\275~0\355<\330$\034\275A\203 \275\\\330\234\274|P\255\274\231M\341\274k\355W\274~\2566=\214\315\014=<\345\305\274<l)\275!\253\220\274\331?\222\274\034\351n\274\216F\251<7\021\037<\372\250X=\353\264U\275\016Q^\275\334QA\275\020\365\241:\240\270S=\016.2\275\375\032K=\340.\013\275\263R\214<N@,=\374\245H\275\344\372I<\327!\357<Y5\"\275\305y\036=\211y\030\272\343\230\025\275\231\013H=oN\227;x\332j<\210qv\273\217B2\275)\t)\275|t\036=-\316\270<\365\231\244;\205\016\r\274f\361\274:\013|\263<\273\202\341\273b@E\275w\320\213<\373\024\016\275\264r9=\262\304V\275\r\213\347<\206\324E=P\276\342;\352\363K\274\r\'e<\235+)=\021\317 \275\212\n.=$e\313\274\317;;\275\337.\217;\326\021\035\275\265\2521\275A\267H\275\352\346)=\230K\203\274\027\2459=\237\340\260<!\324G\275\2434r;\244H\263;\300\201Q:kv\004\275\212\005\016\275\307=\"\274\355\223\263\274.\037S\275f\')\275\234\031.<\001\275\206\273\244\017\023\275\206\202=\274\021\273(\275\363_\025\275\363]\303\274\353\020\326\274\221_ =}\334d:\314\377\"<\242\221\006\275b\262+\274)\020\004\275\365\332\020=\215y^\274\374k]\275\341(J=/\327\301<\273&\370<\274\316O\275\353r\032=n]\375\274\230\336p\274\r\256:=\231\321\315\274\276j\325<<\271;\275\264/\004\274\024\231@\274\034S\372\2744\023[\274\324\304h;\246}\326<\245\350*=3H\325\273lq\361\273\256\233]=\317\347H=\336\\\025=\"\251\027\275\251g\267\274\334\026n<\375f?\275\2078\241\274f\226\005\275\200\200\336\274Pj\n\275\256\\%\275B\364\332\274\337r_\275>\2029\275\257\006:=\300\326n<\200E\364<\315\234S=\331\260\204\274=\021%\272\274WF=\2413R\274\353\243S<\000\251/\274\321;\016\275kzh<\211\254\375\274\300o:\275r/\337\274\244a\376\274\257VA\275\267\360G\275\236\215[=\002d[\273>\346\t=\333\333\223<Z\322\223<x-\234<f\314\031\273 ,\001<\224\026<\274\013\301p\274t\336\326\274\214\246\365\272\020\234I=l\3437=\361\357,=\214\r\332<\3764\246<t\0226\274$5Z\275\304T0=\221\001\016\274u\207\013\274\356q+=\321\213\202\274\323Rj<)]\325\273\214HN\275\004\235L\273\200w\017<\226?\333<^\313\263:\346\233\233\274\355h=\275)x/\274\362\230$<\014\237%=FiL\2749!\007\275\033|\275\274\354\300\266<Z}\302<\374\370\312\270\201\036(\275\3506V=\3478\336\272\000\355n\274\327\272l<\223\020Y\275e\0009=\025\327\313<\024C\033\274<89<\261\241\271\273N\001!\275\237x&=\357(\002=\230\334\345\273/:\177\274/T?\275\217d\021\275\241(\035\275\003\372A\275\202\007$=E\341F\275\252\216f<\201$n\272\227LH\275\341z\367<0\277\013=\3566\353<\361/\353<\024\222p\274\037\346\211\274d \020\273\275\355\322;ux\017\275C\243\373<~\250\"\275|@\n\275*T\377\273\234!/\273\347\036\t\275\022\354Z=6\261<=\300[\013\275\205\347\373\274\203\213\354\2749k\311<g\216X\275\222\013(\275\353]\220<,\362b\274\347v\210\274 \240\277\273\267\005\004\275V\252%=\030#Q=\351q\223<No\001\275\025\2537=\323;\252<\"\025\241\274^\033$\275\272\341\007\275j\265\334\274f^T\275\322\300\205<\265\232\337\274\3625=\275\253\251\205<\323\305\307<\320w\222;o(\025=\341n\003=\225\324\216\273acS=\257kN\274>\303\037==m\367<n\370\000\274N\260\206<nK\306\274\204\016\200<\355\377,=\241\224\370<uzA\275\027\363\251\274\026]\335\273l|L=1U\026=\252)\224\274\275\002>=\335\227\263<2>\n=B#\256\274C\335\354<\036u\204\274P&\350\273\r\034\031<VT\r=\363\317\375\273\216\272^=\301\353\340\273\236\302\022\273%6-\275\202\302,\275\336\232\364<\257\241\200<-\"\253\274\231\013S\275y\256\304<\305\303X\274<T\205<l\240^\273\337W_\275\303\216\250<\341y\002\275]\311T=\347:\014\275\2775\215<\261\316m\274\225\373.=]~\253<\240\211\344\274,\177N=\005CA<\000\3658\275@\341.<\023D\324<\327n\024\274\253a\307<\225\251<\275(\261\360;\257\224F\275\307h4=\025$\344<\251f\373<\036 \371\274 /\n\275\305\242\013\275,~\031\275\323\324B\274!4S=A\362\021<\225\032\321\274\nL\037\275V\262\376\273k\207\005\275\r\351\'=z\303K=\3324%=\005o\211\2741\003[\275\354S\031=a\372\301;b\006\222\273lBR=h\275\347\274\017\'/\275\244\203;\275\224\tL\275\241~G=:\230\366\274\364.E\274\005\354\212\272q|\022\275\021\030V=\323\247\335\274\377O\201\2740 W=\372XM=*J\362<\353\344\361<\366q\325\274\002\320\t=O\221\266\274\325B,=\232\240\n=\363\277$\274\247\252:<~?&=\252+\025<\311\231Z=2d-=\203\372Z\275=\253\017=!\002P=\205\2060=#.$<\353\321R\275\033\021 =Z\364\017\275z\034\007=\320\200\263<\252\270\016=\327\\J;\000<F\275\034\320H=?hW\273(\246\300;\231\371K\274eC\367;\366\321\312\274\351N\326\274\274\375\255<\354BK<\263\347\320:\356F\t\273\002\357\300\274\207\032A;f\250\376\274\331x\t\275kQ\327\274\253\267S\274$\277\'=o\331>=V\004m<A\371\264\274I\037q<\033wN\275\010\361\256\273\257\332\363;E\033\252\274}\r<\275V\235!\275\344\030\033;\005g <6L8\275\262\205T=\270\023/\274\254\310\320\274\022A\302\274\'\237;\275/\317-<\315\243\263<Vh0\275\202\262@\275\214\361R=%f\330<%\035\227<\220Oj<.I,\275\202A\202\273k\260\301<\203`\364\272X\213f<aN]\275\020\261\t\275\370Q[<\024\2246\274\273\326\222\274J\376W=\331\002\301\274\205\335\"=|\212\206<T.\344<\372\273^\275\r5\037\275\221\0051\275\274\260\006\274\266\022\037=~\324\226<\352\346\303\274w\316\006<\317!`<\007\264B=\367\255]\275YO\007=\237\3014=/|\312<a\356-=\202\023\301;\373\207W\274\245Bw\271\323\322Z=\035\277\267<\242\200S\2751\204\212<\221\232\004\275\017\210\270<\231\331\344\271\266\326\230\274#/!\275&>\257\274\256\271\240\274B\313]=\030\t\200<>\221\215\274;M\r=\212u`<\020\250\362\274\325[)\275\330Z@\273\242G3=\306\201<\273\360\236T\2750\3709<\210\010\342<\374\003\260<}t\\\273\305\023\314<\200\221\360<\206\323\213\273.\232K<\\\332]=j\2213=\034\215X\275\342\344\301<\206\365\364\2723\203K\274\246\032\275<2N\267\274\310\327\375\274=6\236<\335\247\334:\031\221\313\274u\2528=Cw\272\274,\361P\274\277YW\275\031\365m\274\250y\344<\225\321\005=\327\271&\275I\224\372\273\033X<\273\336\364\225\274\003\212/\275v\032\'\275F\303^\274W\357\007\274\221\303\204\274\202\233X=\204\347\370\273\347\336\314\274T\3232=`\343?\2759\025\200<\333\334\376<\364$\324:\017\273\222\273\364\250U=\232\301;\275\030\357 \275\217\206\276<\306)?<\254w\211<\347\327\351\274DH\262\273\0218F\274\205\3612\275\240!?\274\273\313\032=Pv\210\274\215\311L8x\237\030=\256\027\274<e\037Q=\336A\323\273\271\337o\274{\302\325<`;\t\275\342\022C;V\020\'\275\036\275\030=\263\205\200;\tE@\275\244\227\006<-\301\354<\323\030!=J\3360=\224\312Q=\210\231\214\274\254\234\020\275X\310\266\272\2377^<(!K=\014\203\330<m\257O</h\225;\220\0023\275\242i\323\274$-\036=|\331\320<M\346W=c~o<\242\357\322<\277R;\275p\272\t=`\034\337\274\345\366\\=\357\340@\274\320FL\275\323\"\244;sgS\275\034\357\212<\005\244\030\275u\010\265<\245\215\275\274\242*J\275\026\240 =,\234\301<\365e\336<\323\2271\272\236\241\231\273\177;\000\275=\275\341\274l\3552=\354H\346\274Kw\216\274r\210\027=\007\224\006=1:\000\274\3773\004\275b?\002=8\273\013\275b\017B=\336q\250\274\tD]<\205oo\274,\272\371:f#\222\274\r\342\374\274\363\023L\275%\273\t={l\221;\211\221\017<{t.\274\354\'\232\274\025f\220;$21<\255$\341<\316\372]\2757\345\216<\372\204/=N\231\246<\323\215V\275*\376\277<\210\277\003=\310\340;\275!\232!\274H\3716<\006%B=z\360\223\274\220\t\226\274\367\271\351<\257$H\275\t\301\007=M\2202\275V\350\350<u\266\016=h\360\372\274\216D\215\274\357\006\000\275\r\324F<\317,\017<\325H\360<\227*(<I\262W\275\313A\310\274\303,\032=\233\007\236<B\265\354;B\317\216\274\036\313\363;<\223\004\275C\277\017\275J\334S=\022=\004=\264\025\003\275\r\374\254\2747\237\321\274~\337\000\274*\345\255\274\373\330\017<\313h5=\220+7<\2645\307;3\365\031:\327\337c<\264\342\026\275\363\262\032\271\304\246\023=\221\272S\275\017\\\275\274\337d\203<\263\005_;\242\035\002=\365D\373<\212x1\275\307hK=\275\272\262\274\201\214Q\275a1|\274\336E$<8%\\=\023\310\263<l\205G=\200\022I\272^\305Y=\277\246\231\273\315c\345<}b\t<M\244};\305\272\222\272\312\003A\275\'\023\350;!@\007\275\206 \315\274B\272\331<\361@\034=\037p\263\274t\335T=\347\324V=\264\341C;\203\264>\275\263\302J\275r\306h\272h\211\272<j\255R=b\222\226\274\005\217\034;\013\333\267\274|\035\263\274\336\233\005\275\333\333Q\274\373#Q=\t\016\303<<X\022=\215\231L<b\017[\274D\024\032=2\034\347\274}|\013=r\325\032;\243\"q;\263GT=5\322B=\351\n\\\271\264\274\236<\215E\207\274FF$\274<QS\275~\320\177;aG\237;\233\232==\210\222\033=\350\177S\274w\273A\275\365\213\010\275w7\017=\365\207)8$\357\344:?<;\275\3733\364<\036+\310\273\357\245\005\275B\303\023\2752\003\300\274\316%U=7\362\350\273\203Wn\272\2311L=/\233\346<\3068\314<I\337\221<b\t\000<\214<Z\272f\001*=\201\026%\274\234g==\302?]=3\234\276<X\312&8*\301\207;\020<\327<\315\230\232\274\306\224\234<\375T(=W\242\344<!\347\252;\267\261*=\366\331G\273c\017\215\273\254P@=,%>=\274\254?\275A\033\023=,\017\216\274\333\234\226\274\351\311\034=g>\375\274\021\030]\275\312\3476=\033\357\271<\270w\326\2749\003\355\274\020\3471=\210c\336\274\274\347\246<\032\352V=U\010\366\274-\213\326\273\177\364\262<\323\354\317<\024\277\"\275\"=\016=5\001S<\323U\367\274!\"\t=`\220\315\274\371\036\370\273\245\316\025\274\331NO=\010x\013=\326\237\006\275\332\316\225\274\353\201-=\343\227\361;Q\302\017\275\037j\017=\306\351^=\277\340/=t\312\235\274y\234\237\274\271\021m<\213\303\304\273\223W\302;\260f\'=\351kL\275&\2672=n\221\232;\0015E\272\360\035\"=\325a,\275\r\376\004=\307\357\330<O.\305\274zU|\274QLv\273\340\204\3759\204\'\321\273\313TH\275\340\322\002=.S2\275\372\307.\275\231\336\013<$X\267:\343\235H=\037\250t;\237SE\275\327\224\361<a\212Y\274zx_\275i#\214\274\377%J=\0352_=\3661\323<\244d\003=\006\230\314\274\312\276&\275\007\202\227;\226\364A=\326\322\237<I\022\033\272\217\341\347\274\243\263\241\274Q\221H\2756S|<`\202\273<\204B\321\274\342\267u\274\r\354\024=\253\217C=i/\360<\226\202\224\274\271\244\277\274\226_\345\273\036u\025=\254<\n=W\3430=\331\262\253:\347\2031\275V\234\002\275\300\353 \274\005\257>=7\247\264\274$q_\273AH\236\273\230\252\202<0)\373<G\341\231\274X\"\263\273\275u\335<(\252D\275`\234V=mXl\274M\002\375<i\316\262\2747[\256<\264\315(=\035\2467=\374|\032\275<\310\343\274\262\266\n<\241\370\253;\216I\027;\247w3=2\005\327<\326\376F\275\ty\326\274Rn\010=\210F\264<g\247D=\221\232K\275_\364W=t}\035\275\000}\277\274)\230(=\345H%=\021\222\000\275\316\001\036=_\364\030=\237:\234\274\033\004\376\274o\327\r\275\356\237\300<\341\022\017=\351\'\347\274\001C\027\273*\353#\272\226\233\016\275\250\245Z\275\013X\331\274\025\"\033;\236\000\017\275f\344\037=\336s\352;\361\032,=A\0268\275`)6\275e\006\031=\206\370]=]\321\267\274\3510s\273f$\\=\223\306\346<\007\371\250\274\\\255\224<\325\336\261\274\'\001%=\271@\025\2755\252\346\274Y\341\361\273\306\220?\274\210\224\375<\022\204E\275\033\247\037\275g\247L\275\022\214V;\034\313\324\274s\0017\275\312\224\225\274.\0209\275M\320\366\274\267\3611\275R\312]\274P\\\021\275\271\r7\275B(\345:Q\r\026=\366\365\352<\245&D=TY\005=\241]\312<\364\227Q=\201O\006=B\331\'=\216\344\273\274\337\037\340;\244/W\274\247H=\275\316\371\277\272$\014X\273o\207h<6\213\n=\33196\275\236\010&;\204.<<rF\321\274\367\332s<\353\364\226<\330\373\301<\016\255\006\275\244\264!:[KI=\262V\256\273\n\227\254<5\033\350\274\"\315y<4\237\213<l\232\244;\t\213\372\273\363x\303\274\005\267\346\274\315wL=;\316\331\274g\272D\2731\226O=\324\035\215\274\254a\223\273l\315\025\275E\327?=\023\305$=v\361a:c\tD\275W\371G=/U-=\000;\343<W5\202\274\327\312\274;\301\"\206\274+\327S;\001\0206=\r\243(\274\037\264\"\275>cF=B\227\001=\'\375<=TY\245\274\354,/=5\200\360\271\217!\261;/\"R\2758\365{\273-l\004\275[i\242<\336\266\227<{`\217\274\214F\177<\373\014\277<\346\203\234<\3717\327<\255\246\314<(^P;\241\350%\275\352P\220<\241\003\\=|\\\373\274\300\356\213<\232V\023=\307\267 \275\210\335\'=\244\t!=\013N\311<tgT\275y?e\2734\322\200\274\003uS<3&\244\274gT*\274\321k\025\2753\256\211<8S\337<_t\035\274\3345U=\t\350\003\275r3;=\"\241#\275U\030?\275{\346d\274N\025\253<D\215\n=\356\362\303<\0347\304<\3619\207\273f\001(<\377\0315=\023\226\361\274\205\371\224\274\\\242\256\274i\332g\274\240U\262\274\315-\322\274x+\007\275\362iQ\275R\276\350<\343?R=4\345I=W\013<=\340\223B\2755\324v<\201\301\001<U\027\232<5\375+=\261\344@=\303\222\265\274\n\205\276\274{m1\275|\r\343\270d5F=\031\332\363\273s\316\324;\270\305\242<\260V\304<\3213%\275xL\033\275\226%\300<\014\\\252\273\205\276A\275\353\031\036=e\312\n\275\304\205\240<\007\371\003<\r\371\016<\030\026\346\274\262Q\264:\253\234\031\275\227W\200<N\2673=^\272\r;\002y\342\270\344\376\372:\277~\306\274[k8;pO8\275\353Z\321\273ff\022\275I\247\217\274d\232\010=\356\251\006=\002\275\034=\300\002L\275\274\372\270\2746UD\275\375\355\232;\326\302\325\2737\273\251<\217\351\006=\005^\245\274\271\301+=1c\017<\214\374Q\274\337h\022\275!t\020=\013\253\036=G\273H=\225\233B\275\254\246\027=]O\241<sg =\024\272\003\275\'\013)\274\327B\264\274\t.A\275\272\277(\275\356\214D<\223\220\302<\336bK\275&)\032\274[rA=\023\314Q\275u\333]<4\335r\274\365~\242<%\236\327< \013\r\275\246q\260<C\241\034\27530o<1\220\306\274a>a<P\344z<l\315\021\274\306\032\240\274EB1;\375[\270<L\242o9\254\242\272\272\231\t$=\016\255r\273SX\310<b\210\252\273r5\023=\375\355>\275\370\033\307<(@F9\014\0358=>g\243<^\335\353\2743\201U\275\233\016\251\272\323\244O=\242!\334\274x\034\365<1K-\275\264\312:=\254*\227\274\273\026\260;\216w[=k\357\243<}\326\253<\0370\005\275\'\216\006\275\352\376\017\275\214\361;=\204\306\301\274l\233\271\274\356\376\326\274\364\370J\275\013\014^\275\231z\363\273\257\276\034=\342\266\324<\025\237\033=GMW\275\t\272\241\271/\251+\275]>\010=\273\350\022\275*\035`\274\036\241D\275C\245u;\301\250G=3\3000<\034\272\004\275\367\275\316<\016\322i\273\334\006\337<\375sC=\342\300\363\274\r\026\353;\202\345K\275\024?\001=\315\001\345\274\023\177_\274\2121\312\273\3277\256:\376^W=&d\022\275\235\233\234<v\220\311<<\231\227\274\tC\301\274\2715N=j\341*\275\005:\274;\236\213\215\274\276\177\274;\354\337>\275\357v\206<f\357i\274\032\216\304\274\004W6\275\373\362&=\273\341\341\274\204\001\370\2741=\213<\366\261C\2756&\021=\336\022Z\275\362\2377= \2247\2753\251G=\314\207\022\274A\266\320<g\"\240\274*T[\274\215\355\322\274\227\3043\275C\2323\273aU\244<\216%I=ZD\360\274\251.\r\275g\010\034\274\206\237\340\274\323\377\010=\tQG=\334\177\203;\247-=<\327\212\227<\261===#!\370\274\355\263 =\004\257\303<\205\020\217\274\316\254\302<\376+\350<(\006$=\n\331%=\221y\354;?\344\377:\022\303==\016\265(\274t%\335;.\034;\275L\362!<%\313>\275N]G=\035*R\275\200|^\275\310\274#=\235!\364<Q\315\004\275\245B@=\250x\'\275\235v\241\273_m\r=\201\236o<4\345[=Eq\344:\316\326\023=\353\367V<O\365\221\274XoV=X\254K<\253Y\021=\316\316\204\274*:\271<\004=\272\274l\315:\275\264\2458<v~\235<\247\264\332\2742W|\274\364\360\312<\332\241\364\273\235$o\274=\244\217<\320\237P=\347\364\303\274\337\231\005<\227\376\233\274\271\353\203<\023?\031\275\241da:\261\200\014\274\351\2552\275?\365\'\275\262\365\"\275X\341U\275 \250+=j\346P\2754D\362;\271\376H=\363\316\005\275.\337{\274\013b\212<\254<\003\274\255\037\302<\301\022\377<\371S\264\273m\262\341<\"3\025\274!\226\256\274\275\2169=C\210]\275\225I\266:\240E\375<\311[\003<\365\2135=\232G =`\341\016<7C\006\275F@\014\275\023\027\254;\305\263V\275\220C;<\342S\362\274\270\013S\275{1\255<\211\306\333\274\316\233^\275\227N\262\273\377\tG=_~\033;\037\026\274\273#\254\237\274\234\203E<\321\000\010=k\207*=\345\206\350:\256:\364<\320\274\300\274\0316\375<e\360\226\273\020\376\336\274F\246\251\274\306\247\017\275\000\213\004\2740\2011=r\007\346\274\224\332\300<l\035\346\274\017.d<\241*6\275O\222\254<{\274)\275\246\206$=\216>\002\275\251_K\275\337\264-\275\215\306\351<\345l\225\2740\311$\275J\242U\275\036dI<\205D\320;\360\r@=\315dN\275]O>=w`L=\214\037\"<\351\254\361<)=\277<d\036\'=\320\362<=\276v\371<e\216.=\000`\016\275\327\t\370<\251\'L\275D\345V\275\240l\201\274\357\274L=\2130W\275\237p\033\275\212^U\273o\230\302;\300\013$<e\200\325<\261\356\024\275\306\233K=M\242\302\274uz\302<\2137\306\274>_C;L\224\034\273sB<<[\255\034=e%I\275\304\337\365:x\234\344<eb0\2750\321L=S\374\354<1\222E=9b\016< \324\030\275<\233S\272\305N\034\274R\207\n=\235r2\275\203\320\337;.L\350\274\307,F\273\343&\025\275\323\221x\274\"\301\355<\377\005F=c1\300<8\274I\274\363\032\226<\001\220\355<f\0144\2752._\275#eY=?\2719;\255\200S\274>~%=*\326F<\312\362\037;bN5\275N\1771\2753\301}<\265\215\001=\322\214\013=c\274\032=\r\344\277<e}\027\274*u\000<\306\221\366\273=\377\254\274I\221\t=\333x\304;2z\007=\016\363\025=\'R\n=\335\234Y\275\265\277N=q^\251\273^\377\317\274\227\203\235\274\252?X=\375\215S\274\037J<=\373\212@\275\r\2446<\250/\272\274\227~ \275\226\311\211\274\327\215\341<\307\325\346\274\317l\035\275\202i\024=*\372\222<\r\323\\=\236\363F=mb\376\274(\255\007\275J\377\240:\326~O\2759\256\313\273>\300\036=\331<\231\274_\010\177<\037\322\227<\254\027\322\274\022\356\311<B\252A\275M\327\326\274\207\313M\275_lY\275\270\310\177<JQ:=#\3040=\010wv\274\000*\273\274\'\305K\275\0211\363\274\346\'\031\274\251C\t=\022i\275</\302o<\000}\361<\025\320\305<W\377\310<|\244\376:\304\361\020\274\3169T=\210\014\017\275\357\223#\275\220Q&\275\357\036\350\274U3 \274\335t\330\274\t+8=t\t\322<.gK<\016\tB=\026\"^=x\3460<6kE\274EM\312<\021%W<\261_\205\274\214\\^=\004\233d<\003\223\344:r\376\312;\3008\357\274\252K\023=\330\337(=\364\331E;\320\256\362\274\272\014H\275\227\223f\274\031\203\"=\022\236\261;\225\337X=xs\034<u\rX<f\342\036=\022\360\005=\234\234\305\274\200\343\'\274\326\244\317<F\275\030\275\2570\204<\222w\212\274\206]H\275\230\022+\275\3205\324<\020\021\267\274@<#\275\204\340\035=\266\310\034\275\245SA=\371\002\340\274\0379\372<\251\036\224\2735\234\263;A\312M\2741\350\237\274\'UE<\033\022A=\246\334Q\275\333\226\304:\221\2262=\200\363==\250/t<\243\375\\\275\035^\354\274\317\035\271\273w\316\246<\014P\035\275E\245j</\320\022\275\266(\305\274\263\304\366<@\303\007\275RJ\257<\375\360\315\2747\'\241\273)$\202<\202^\325<Z\207\023\275\266tN=08\026=y6\'\275\262t{9\326\260\340;j\330\306\273R\264\341\272\332\332)=\314\236\216\274\351HT\275\265\362\037=D\0348\275&\315\222\274\023\222\222<\007@\017\275\265\020\317<g\325\000=w_\357<+\033\027\275\201\207/\274\362`\265\273\222\"R=%4\222<n\001^=\020R\257\274m\371\322\274\3734.=\317.-=M\022\204\274\233\236d<\277\\\203\274\366m\324\274\363#.=\344\3120\273\242\214\010=\363\377\323\273\177\367A=W-\025=\032\333$=Q\001 \275\200F2=d\355\347\273`\333\310\274M\240\242;\361\017J=M\236\303\274\202+\014=\246\373[=\026H\350\274\300\373\361<+\004$=\207\217\366\2744\035V\275\030}\004\275y\373J\275\365\031\\=\211\014\337\274_\002\202\274\276\341y\273\340\2667=\222<\350\274\024\276\263\2749\034\276:X\204-\274\000O\005\274\022\205\r\275]>f<\005\020\220<\t\225\361\272\240g.=2\362\225\274\232D\346<\346bz\274\222\277#=\304\036Q=\330\235\353<\330\260%:w\326J;a5\022\274\345\006\316<u\252\032\275\2462\312:\351\336!\275o\343M=\344B\245\274\250\326\007\274\'\0167=\240\264\216<\3639\352<\235\324\374;\345g==0T\236<\246s\234<\302\371;= k\001\274\001\r;=u( <k\0215=\246\n\331\274\230\302\007\275b\302:\275\307\371-\275\365\271U\275\264,\024\275\331\261\333;;\024\014<\343\253\210<$\363,\273F\004a\274\356\230\003=J\342\270<\320\331U\275\242\220\332\274C\241\023=HTG\271|\353;\275\261#\251\274\271CO\274#Xa<\017\342\024\275\217I\006=\357\351\3079\340\003j<\317na<\ty\020\275\361f==\233i\264;\235 0\275\227\364<=\210\372\001<\226\320\014\275a\333\220\274\\f\333\274\316\317&\275\"\223Q\275\320&;=\224\217K\275\231\262\270<\364t\334\274\234,H\275\036^^\275\3509\027=8\364\013\275\t\345\253\274\010\3179\274\245g\n<\004\352C\274!\342\206;\'Z\025=\351C?\275Q\177\231\274\n\312\320;\345\276\277\274\254-\256\274Ea\376;a\030!\275\305$\221\274\220\'\265;#\330\213\272L\377\312\274\230@\"\275\001\316\237<X\003\350\274\303\032\036\275\350\313]\275\260\364\274\2744\nR=\210\250\235\273\311\337\036<Q=X\274-\371\r\275\007=J=>\250]\275Y\322\022\275\004\325%\275\347\332\025=\031:P\273\201;\237\274%2a\274\256\204\334<\373.\231<;\026\024=\332\277\016\272\210\030D\274a\351\347\274\224:\013=\350$\\=\023[\345;0\034\201<;\263\234\274L\022\301\273\320\361-\275EGG\274\001\027\302\273\222G(=\233\345\025\275\317\256\024\275<Z\227\274\033\3101<=\030\253\273\345\215[\275\177\361\217;\363\200,:0\240\316\274$\336\002\275\201; \275\306\025\226<\341\246M\2754\235\006\275qS\305\274(~\000=\034Z;=\234(\263\274)\272\022=\266R\207\274t\021\271;\\\212\247\274\225\224N\274\347\371Y=\365:.\274\325OZ<+T\241\274\376\327\307\274\1775Z=W\005T\275\326\276\377\274Q\305\343<d7:\274g\235\t=&\263\r\275\336\210Y\2742J1\275\277bA<\342O\353<[\2520=\225\254\257\270j\r1\275]\001\313\274el\243\274\002\316\256<\230\361\242<PV\311;V\225\300;\321\r\037=>\324,\275tW6\275\320\212\335<J\360*\274\340\016\023=\034i\022\275\270JB\275\201\3247<4Qu\274s\017P\275\257\002E\2747\2675=W\001\216\273\334\366\334<H\245\304<$c\021=X(\247\274,}6\275\211\373\"\275d\341\352<\237\"L<Ny\322<\244\2121\274Gt\r=+\2335\274i\345\335\2731\201K=\323\2170=\257\306*\275\216/\001=\244?\003:\332\234:=\247\370I<j,+\275I\346C=08\252<\252fW\273\255O$\273\210b5\275\022\331!\275\306\366\211\274m\254\027;\257\0165\275\206\353\315<TkG\275\232E\247\273t\\\t\275\026\207A={\330{9\351u\246<\361:6=B\206\016=\217\223)\275\024f@\275F\206[\273\'_\350;\267A\357\274b\241M\275\036\301)=\230\271\300:\227\264\023=\341\227\311<Y\034\275:E\276A\275\224\223\013\275\247W\315;\0225V\274\317/%\275*]\314\272\332\030\367\274\014aK==C\364\272\320\263\033=pU\243\272eC7\274\343M0\275o\034\026\275\260\234\360\274\010\2046\275p\203\313;;z1\275\203<\247\272m\377\315\274N\254Q\275\002\034N\275\006\307\024\275\315j\022\275\024$5<hh\226\274.\351\003\275\235\347\270\274\017)\222<T+\224\273\025W\220\273\0144\347\274\323A\321\274>Z\304;\274A?;\371\005\362\273\007\177\002\275`\2621<v\327Q=\0021j;\236\314\326\274\252I\004=\273\340A=D\240&\275\r\274\\<~o\302<\367S#<\246Q\017\273\342\322(=\226Zm\274\032\224\364\274,\377\254<Y\270\256<\332\326B=.\233+\275\313\253\037=\200\220_<\307\264\245<h\025\020\273\037\304R;\260\203]\275\255\316q\274P\244\366\274\377\274N\273\335F>=\306\334\031<\374&\024\275i\361\004\275F\203\324\274\217\240\036\275\025\374\365<l\267\314<\262\223\014=\216d\263\273\313(\026=\242\311\330\274R\020I=\242i\035;\241\347\362<\263\225\245\274\034\240\353\274:\363M=F$\352<\026\234><\233\261\311;\2434\344<\264\345[\273\26134=,\276\032\275qD4<\361D$=\035\310\026=5G\202\274\223H7=\340\221&=\374o\202\274\030\304\006=-7\365;[\336e\274\222SZ=\265\312\370;\3668\030\274\366\"\010=gg\250<\002\233%=\234\367\n\275sA\213<Z<:=<a\226\273\026\030\025\273\003\367\277\274\317\236\214<\026\327\225<\371\375\021<\234\222\224\274\203\265Z\275uK\026;f\356\224\274&\200I=\251\232N=\226\314n<\033\346\027=\231\023\226;\302W\262\274\0203\037\275w\253\303<\250\321\007<`%\004\275$\341\322<\263\245\027\275m\020\006=4\305\371<\312,\254\274\275\327\016\274F\367L\275\236\002D;P\210\366\274\340\270\032\275\344m\243<2\250\247\273t\200\260\274\277\301I\274\034\331\\;\210\232V\2754\332\306\274\250\256\316;1\333\206<\357b\030<\342\356\004\275i\346\003=\"\311\030\275<\036V\275\001\216\031\272\275\202\005\275\220\003\205<X\375\005\274\273v\005=e<y<\366\r\342:\361\256\350<\036\262\032=\016C\237\274\016\241\347;\216\322V=+\264\231\273\334\021\036<\233\005T\275T\3427\2754?Y\275\360\236\334<\022\0221\274ER\216;\275=(=\315\375\216\2732\202\356<\306\306\\=.CV<k\032_\275G+\332\274\327,\331\274N#\204\274\\\017==\341\227?=u\217\310\274v\254%=\312\327\203<P\205U<\032\333\221<\316 \264;\302\306\037=\014\351b\273\362\246@=C\231U\275P\201r<\371\246X\274]\342+=\36381=\321<-=F4\t=8G[\275r\245\363<E\210Z\273\030bN\273u\324\253<\2164?=\215P\013\273)\205E<\246\311\t<M\2540;\243\322\340\272\205\371\376\273\027\027D\275\205\031B=\010\335\024=?\344;;}E\262<\333\270\222<\253\337\272\273y\237\030\273x\251\006\275\000\265\245\274\366U\r\274\034\2542\275\030\353t\274\331_\304<\013kW=\323\341\315\274j\233[<Q\363\362<\376\307j\273R<\277<\346\3706=\023d\037=\335\255(\275\211\375\001\273x!\311<I\206\237\273\216m,\275<\212L=5\312U\274bSP=\'\272\263<\362\366\205\274K4\362\2745\253\203<\213\366\324\274\236\261(\275\002\321\020\274\243h\031\275\272W\300\273N\006\354\274\232\203\226<Ha\272\273.\303d\274\203n\033=T\200\'=]\273\301\274\263\312\374<\304\006\264\274\331\177`\274$\334\372<\2174\021=\223\205\243\274\367\245N=\205D\214;\016CN=\0061;\275}0\226<\251\351\020\275TV-=#%==\316\234\315\274\324I\377;\202\247\237<)P\255<L\241\022\2742\020\255<\250\312\365<9A)=\275\251\274<\377!\271<\362\301Y<9\351\037\275$o\016;\23183\275\024\253\252<\341\241#=\203\000\335<\216\342*\275\\44\275\311s\"\274\276\306\200\274!s\272\2735\366R\275\320\220\014=>\207D\275\263.2={\344T=\023\\\005\274_9 =Q\370P\275\336\251Z=8@S=\241\357\263<\002\017\001\275\372\027)\275\226\\\001=\242\206T=k\3075\272\232\005N\275\314\005O\275<F\223\274&7\013=\270\266#=\"\212j<X\341,\275\000\000\261:r\240\217:p\373\263<Y\243\211\274`\033\r\274\013\210\271;1\271\037=)\307\224<j\316\"=\273#I=)\013\020\275\016+\301\273\314jp\274\267I\316;8\221\016<q\342]\275\2127\326\273\252Q\307<\263\243\306<Q$]\275\276\315:<y\336\'\271/\177#\275MvR=\354(s\274A\315E\275\344e0\275\\\003\"\274\361\300\243\274\r\322<=\235\241A=~tH=elb\274S(\013\275T\333\377<\350<8=\034\314\035\275$#o<\212\023\250<\227\313\032\275\002\272;\275\354M\253<\340U\323\274\352b\334\274\363\354\260\272\006\025\304\274\332\242\032\274\343\202\2038mf\017\275\035\231H\275\355\022\370\274\027JA\274$\236\265\274-\231\252\274\016\214\r=`b(\275\37793\274F?\000=\225\247I\275\273\032^=`\252\016=\331\\=\275DkU\275\0342U\2753X\\=\221\367\340<\314\260\353\274\212$\201\273S\354\020<Lh\017\275\210D]=\223\225\247<\220l\006\275\256Vu\274\270\363C\275\272\362\374\273\321\337\013\274\\\374\026<\363_\353<\377\037\r\2751\232\234\274H\306\014<\303\204_\275\220\247\014\274\274\037\231\274L\311\311<\\\267\224:\017|0\275W\340>\274;W!;\276\326s;Cy5<\373\"m<\322\tY\275k\004\013\275)p\332\273\031\362\020\275\260\345S\274\213?\270<\342n\034\275\033p;<\330\302\317<\016\232c\273\337\270,=\246|\211<\021\356\224<T\211\213\274\346\247\'\275H\353d<\357\310\016=\333\215G\273\275\271\351;7X\212\274\261\227\243\274\244\273\263\273\210\367\362\274\373\232Q=\336\307\313\274s8\343\274c\033\210;+6\020\274\244nI\275j>\005<[\003\362\274\024\306\022\274\004\271\2338:\300G\274\373B\261<\200\2754=Mm\360\274\277[O=\356\201\035=>\211_:G\202\367<\333\"\222\274N\327w<\201\3730\274\003\026\367<C}\005<xnR\275ifu;\022\2357\275M3\001=\306\311x\274\335\225^=\230\305\035=\030\336\240;\203t(\275\032KR=v\274G\275\247\353\\\275\273\233N\274\260\257Y\275^:\212<\262l&\275\014_\035\275F\t2=\327MT\275\374\231\352<\231\254\035=H\247\001=z\300\252:\365}7=\007\206\n<}\2310=\376\314\013\275\032UW<*\n\253:\217+\374\274\334\215\014\275#\351P\274\247\371\343<\2460\014=r\2639\275\330J\351<\267\033\336\272\277\003L=H\300\363:6^\010\274\351\375\312\274a4\014\275\347\234\007\275pW0=5\260$\275\255\3447=\024F\255\274\226y:<$\000\003\274\352\377:\275\010\030[\275Csl<T\267\021\274\3533\'\275\245\3338\275L\317\366\274\nG0\275\276\253\271<v\272\\\275\351\236L\274\016`\037=1\262\256\274\306?\023\273\221\303\016;\356O\246\274a<\013<,\317[\275\037\014?\275\376\265\372<S\220X<\310+F=\222\023\370<\370\273\206\2734\3679\275\371{v\274\225=\256\274\273l\n\274Y\320\240\274\244\330)\273\367BL\2743\206\373\274\342F[=\204](\275\371\330\374;\340N[<\034\355O\2758\364K\275\262j\002\275!?/=\232\366\021\275I\253\235\273\310WB=\355+\302\274T \363\274\256\202V=\326d\262<\177\004\236;\"\350\313\272\245\267(\275\333\023\330\274Q4h<\244\271\004\275{\027,\275|0F\275\r\340e<\013\324M\272\037\374P\2755QA\274\341R(=\271\216\033\275\211M6=\377o#=\371\301\032=IY\346<\373\375\271<\362\337\246;\243:$\274.\'\376<\236PT\275\314\251\353;\322\226N=\350~\010\275\025\3336\275%F\371<\306)/\275K\336P\275\362c\215\274\n\202\034=\344\301\300\274\335\363\224<.\214\373\274I[;=\021\243\206\273\257\324\002\275nD\004=_+\253<]+Q\274\2316P<6\326\010\275\250\301\374<\274\366\255;@\020\310\273\2110\331\274\2413\033\275B\002\362\274\t\362G\275e:\264<}\312\222<]0.=x\374)=\003o\346<sv\035\275\332=5=\032\242 =\017\217\250<Q\341\321;~V5\275\234u\016\275\'M(\275*+\264\274\375\226\023=d\003S;\376x\312:\006-\275<\037\307\005\274\225\211R\275o\321\367\274$\377&=R\tE\275Z\272\n\274\003\267\335\274\031e.=\210\307o\274\004\225A=\365\327\225\274#\024\323<\331\344p<}}\241\272J\364\010\274\326\265\273\274\230#\334\274\335\r{\274\325\265\227<\266\336V=G\t,=K\240\320\274\261L5<\265\337\256<\251s\010;\337\356Q\275\013\315\371<\020C\344\274\\\027\246\274y\312\332\274\315\375\214\274\247V\345<\325\244\210<\324\374\337\273\310\037\001\274\013\260\030\275D\2544=\352?M\2750\326d\274\221S\263<\'X\305\274\004\277\035=E\350\230<^\317\313<Q\354M=\257\340\224\273\313\003c;\256\350*\275j\214\\\274=\376W\275/\274O\275VcP==\355)\2752<]\275\275\372\013\275s:\034=\007\325\013=b\007\301\274\263@\003<\013\252>\273\354\301H\274p\247E=\340=@\275\3510\030=\337<N\275\350\367N\275ly\022\275\217\333\356<\215\331\007\275m\004\270<\033:\036=<\276\274<*\226\004\275p\355&=\264\373\013\275\361@\264<\321\210\304<\207\212C<\3760@\275B_\003=\034\322B=\032{]=w\022j<L\211\366<\247\360\020\275a`\225<u\306\217\272\014\313J\275/<\220<\265dY\275\035o\005=\323\024\372\274W\030\223;\244\325D=d\252\376;\256fV\274\330-\204;\314\224\253;A\337\260\274*,#\275r\272\017\275\337B\336;\340\235A=J\'\334;>\210\230\270zg\236<\315.\345\274=T#\274\004\225\013<\212\002\245\274T\261N\275\210u>\275\312N\272<\363\301:=\036X\226\274\357\325\317\274|\277\325;\324\313\305\274\214\331b:\007\001W=:t\371<\356N\001\275\347.w\274\200yK\275\336jD\275_\3231=\030\332\346\274$\360\333:\301\341D\275\276\312\030\274;,\007;\244\316\276<\343$\261<\340\213\355\274gc\251:\247\244D\275bM\266\274\\\3357=t\231Y\275\326\006]=\233\335\220;\300\007\235<\205\253\024=\224\207\237\270\374\246S=xD\363\272\346\250\212\273\310\201k\274\0247\036<\247\300>=\360\031\206<\233\227\224;\242bY\275\201\210N=\177^\366\274&\330C<\347[\261\274+b\334\273\177\224O\274@\207\347\274\335\352\342:\222\334A\275\255\241\361;B\265W\275\250L\224\274\022P[\275`2\351;\344 #\275\221\305\335<\330&\301\274\0300U=\360\262S<\340[>;,[.\274\374\245\002\275\267\003\026=\004\356\352\274\301\260E\275cF\367:\322\344\336\274\345\261^=\215P\014=\324\004\343<;Q9\275\217\020\027\275\264\353-\275i\033/=\246|\340\274\315\020\375;\222\317!=\013\004\r\274c\332\205<K\"\316<\2727\0269\001Z[=\242Q\210<\200K+=m\3644\275q\3770\275\343\271)\274\231\023\017\2754\301\244\274\234\344\001=\366\256\230\2746\351\227<\353\003O\275W\312\037\274\326i\271\273\036\265\300\274\215\001\352\272\266;\033=\357N\023\274\237\311U=\341\356&\274#\306T\275jLB\275\303\027H<\230\226\305<\343\215\270\274R\024\231;\357\r\247\274\325\225K\275\313\374D<(0I\275VS&\275\216\004U\275\323v\276<LEZ\275\346C\030=\r\321>\275\264\3553=X\246D;s\211\202\272%\212L\274\352Q>=~\236\232;\216\023\360;W:a<*|\312<\252\341\334\274\356S\276\274\270\361R\275\001\227\214\274\224\002\'=\255\270\330\274\241\275\337\272^\263:=\256\330\301\273\245\017\201\274.7w\274\365x\347<\222J\336<k\"\371;\3408\347<@\344$\273](Q=z\252\014=\231\324\321\274\225k \275\335(\223<O\032\031=\364\nv\274u\300\317\274#\310;=\025\021U=\206\014\013=V\276\014=T\360n<\007\362\306;\321dX<}\361\232\274\2176\031=\310\313\003\275xe\243\274\342\276\320\273=\334\031\275\222@\223\274\037\320\244:f\252\032=\013\310\\\275\327\206Z\275\370[\210<(\271\016=V%-\274\264b>;6K\262\274\325YA=&\354\'\275\327\343E=\352\350\257\274C\007\315\274Q{Q\275\350\266G=\373\236\n<F\373\310\274;\2558<H!\252<Q\t\333<\001\350t<\365\325\305;\251\326\017=\'\010\240\274$LM\275\326Pf<\347\246\036\275*\016\201\273\235\334F=T\357\334</?\346\274GU>=\267\216\n\274w\331\023=D@V:=j_\275\222p7\274\330q>\275\360\325\370\273,\3423=S\rF\275\313/#\275\311\200\364\274C\220\t=\262;\236<X\3369;JgN\275\214\013\356<&i\022\275+s\374\274\313\346\320\274?\364\221<\336\371 <\331\321O=\210ca\274\005)X=\370$K=\325*\330<l\214\030=\237b\236\274tV\305<\332,\317<\002\340p<\016\234C\274\323(\274<22e\274\243O\206\273\276{\213\273cE!;\220\200\262;\367\217\001\275\354\242\007\275\331#\226\274\325\212\364<\006\016,=c\302=;\226\224\207<\022Kv<e\332\275;\265JE<Z6L\2744U\233<r\310\221\274\251\235\363\274UA\375\273k\177\220\274\365\365\361\274o2\265\273\231\263\364\273\274\034\"=-@C\275V\343\267\273\\\350-=\320\023H\275J\002\254<\236\273\375\274\242\r\346<*!*=\366(\363\274\344J\270\274\267\347\003\275\344L`\274\027\343\274\274\257\035\267<9\246\334<\224\227\306\274\242\264\013=\272\030\243\274Y\343\326\273)pN<\\]\033=\302\366J=#\032\375\274\td\024=\362^@\2744\010\363:g\322\004=\336\034O=d\305\333\274\353g\332<\017lK9\303Y\034=\267\275\221\274\220S\330:6})\275\235\243\376;^\\\027\275v\254\321\274V\020-=r(\350<\200\265\214;g(\r\275\004}\004=Q\375h\274<\030\351;\251\266\346\274!\363\323\274\246\230$=\234\311\360<\222\221\204\274]\240/=\317\324\223<8{\020\275B\256\n\275_\374\357\274I\243\\\275\244/\260\274\216\363\000\275Vv\016=\354\303+=8()<\213\030@\275\202+$\274\227\213/;\365\376\343\274h:1\275\321\334\252;\304\327X=\030\254E<6\231\242\274\313\241\021=\357\034\270;5;F\275\321\243s;\265\273\342\274\376\025\036\274\267\016\377\274\204\2007\274P\312k;\007\2042\275o\024\266<{\310\306<9\231\003\275\335%\027\275\255\306\020=\261\020>=\263~\375\274\242\202C=\212\222\004=\3713\013=8\2768\274\240B;<v\016\002<\207c8\275\333\277\366;\221P\032\275\n\2717=\242\n8\275@{\330<\016\013\342<~}\301<\341\242(\272\357n==k\005\251\273\006\021\241<\366$\021<\207:N=\237h8=\370N\036=\267ah<\324\215E\273y\226%=d\020\377\274=)\217<\304\311\370\274\337\263\233\274\262\223\242<\231\220*;\327\2152=\246\342 \275\310e\270;\202\363\226;\367]j\274 \013%=J\034\260\274\372\353\211\274\271KJ\275\366J \275\220\306)\275F\226v;<k\\\273\220\347\376<\302\326\355;e3\244\274\201\022\256<\347\216\275\274\261\222\327\274\313\027\020=/\274\264\274q\300N\275\245\256\310\274\253\241\277<\230;\240<\35754\275\337YH\275\271\322O\274rMR=\341\274\023\274\333\316[=\261\021\013\275Hk\273\273n\037O\275d\351\005\275\030p\204<\367%\023:\311=O<\025\343^\275\036\210\267<\007U\336\274\200\267\023=I\203\305<\310|A\275[vC\275\023\202\014=\273\017m;c\261>=\236%?=\232\201\262\273@\030\037=\246\371\026;W\250\325;kz\'=2\337B\275&(\\=\351\227\253<\021\002\'=\344\010C\275\313\256\222\274\265\301\n\275\014\020\241<,\255g<\022\352C=\371\226.\275{w\337<X\222U\275\270\243\010=X\355\337;s\326B=\307\335\243;~+\247<G\3527\275/\213:=\277\344W=\214\324\023\275\021\330W\274\246\037\223\274L}\242;\355\225\035\273\215w\356\274\223_\376\274\003V\014<3j\313\274P\342U=\000\314P\275\366\016\032\275\217@|;p\232\002=\211s\331\274Vh\216\274\266\247\013\275\026\227\314\274\226\307\034==\363\323\274\031\352\236\274m\014\375\274,Q\227\2731qZ=}\314Z\274B\312\377<<\277O<\357N\005=\210\365\024\275\035\316F=\261\304\301\274/\317O\271\327z\203<\255\236&\275t\254%\275B\324\032\275v\001\302\274\247`$={6\027=\213&\244<\200\341\213\274\355x\354\274\375\006\021\274\002z=\275\300^\232\274q!Y\275\305\216\330<\016{7\275r\374\354\274\336\335V\275r/U<}\301/=\200\377c\274\233\"\350\274\345*\377;\333\343Q\273\251\343\214<H\270r\274^)\014\275\023\340N\275\3018\362<8\007Z<\223\364S\275\031\377\316\274ap\004=\232\0335\275r6L<\370\3320\274O5U=Z1\216<\271\253W=_\023\223\2744\307\312<\270i\245<o=\000=Q\225$\275T\033\272:\205o9=u\023\373<\213\355\236\270i\014\003\274i=M;\\_;=\034\226!\275\205\350\275;\247C\330\274\242\322X\274\266\362\337\274\300q9\274o\233\233<\254Q\356\273,\267\355\274j\374\330\273w/.\275\315\362\363<\024\\\370\274e\252#=_qM<\275\364[\275\202\274\020<\2253i<\3272\351<V\254\035=\310\234\013;\311C\027=84\370\273\365\322\255;VQ\021=\343\362O=\257\014\014\274\302w\270<\250\006\271\274\321\036m\274st)\275\362\0007\275\367\242\313<\007\362I<\334\344d\274n}\306<\032\252\372\274\213\267\022\275&>\205\274\036\275\004\2750\000*\275\363\021\247\274\236Xr;\014p1<\"x5\275\341@*=\020^\002\274\342\230=<?\341<<wk\023\275\251\3777\275\351\376\017<\350l\350\274\326\264\312\274\t\256\221;\242MO\274P\211\315;w?\r=\313v\004=\211y\035<\0368P=\313\331?=4\225\024=\313=\247\273\361\323;\2758\232D\275\336\216\"=\020\330^=Y*_= \253\025=\361\313W\273\345\3211=F1\035=_\324\033=z\335\354\273\330H\253\274}\365\351<8mX\275\\\314\325<lZ\231;\367\261\254<q\305\031\275\220\034\351\273\312\003\370;X\210\024\275\254B\004=W\301\276\274\346\211v<\237p9\274<\357\224<\251\n\010\275*\205\'\274\025=\206\274\375\t\313\274\270\225R=@S\025<\371$K=<\317\332;\227\327\234\274\273\275\205<[\330\362\272\261\016\221<Kx\343\274\316\236\255\273\030m\024\275\305\001\371<[\030\341;Y\030\365;\021\237P=i\322\260\274=\213\363\273\222\251;\275\261\204\026\275`\013\327\274\315Il<\007\270\374<\300\364\251\274\237\217,=1\215\315</\210\244\274I\324\210\273\014h>\275\217\232\225<\373(\022\273\235\352\341\274\204\304]<\254\233\010=\316w\271\274V\350\345<\022\262$=yK\005=\304&Y\275=@\264\274L\244\372\274\305\006\245<\201\3475\275\236i3\275S\337\3579\232\274\323<\017\024!\275\025\361==\023\210><%\257\031\2747\252\277\2739\010\004\275c\3256\275.z\310<\315z\375<\323x\023=[\322\355<\0067\023\275NA\325;\263W\004\275\260r8<\216\3502<\210&M\275\367ol::\272\320\272\222\003/;\t\361\021=\243\221\337;A0:\275\3135\231:2O\017=\006\261\361;\221xP=\013\247B;&\361\r\275X\272\002\275i\337\037\275\320\3162=-x\264\2734\352\267<\277bR;\363\217\000=o{~<@\337H\275@\036\237\274A\2447=\347\353\371\273\273P1=\304\367H=Q\276.\274\363\331\352\274\026H\005\275^\3071\275\377/f\274\253;\234<\316\255E9\037]\034\274\256\306%\274\"\327Y=&\002\276\273\213\241\036\274\000]\266;\237\2408=2\333\254\274\"-!=@\014#\275/d\021<E\364\226<$\226\204\274\330Z#\275\361\3330<\236\274W=8[_\275\002\0136=l\261\316<IH\003<}\0063\274H3\360\274\207\3036<\224\351\215;\345\331\370<w]\276\273\262><<\214\276\277<m\376\006=\236\363\031=\234\272\036\273\300\300`\273M[]\274\016\265J=\336)Y\275\243|\253\274\002\210<=&\315Q\275\207\354 \275c{@\275\211\347\377\274\2673=\274\223MP;v\016/=\227\337,\274k*F\275 \252-\275\361\226\204\274D\227]\275\226U\322\274\317\340\213\274As\315\274\032\200\035=O\325\362\273\226\261F=\260\233\364\274-Z:=\001jO=&\207\010=\350\245Q=\254\330\373;\261D\241\272a\217>\275\226\305\022=E|\n\274@IB;\213k\024\275\321WB\275\002\271\205;\361\'M\273V\0318\275\214l\337<i\224\2506W\322x<a\320\366\274\215n\025\275bl\013;\340H\t=\"\334C=\317\037\324<~\323\007<K\217\334<\360\320\275<\201$U\275v\226\303\273Z\367\354<v\037\035\275\372\317\217<\3615I\275\333\227\030<\336)l\274\252\031@;2\330\360\274\276kN\275\003\325Z=\337\276\271<}\311\n<q.\026\274:\034D=O\273d<\253\363C:\313\233\272\274H\r<=\253r\001=\234SH=\360\340\177<M\375D;3\336\214;\324\271\330\274\034H\365\274\t\346\254\274\265\210J\274Oe\'\275\304\nM\274\371_\330:\330\255\313\274]\260\340<\330\221\314\274\007\257A<+\213\212<\243\354\006=\223\243\314<DUF\275\016u\030<t\354\225;\244\2250=$F\"<\241\3329\275z\021!=\'\250^<\313g\300<\257\346\035\274\"E`\274\213\317\017<\023\366 =\227\032\037=\316;\255\274\366\323G=p^o<\006G)\274\223\264\240\274E8T\274\210\033q\274e\333N\275\001\2530=7\232\223\274\350c\335\274\206\345V\275\275M<\275\033~\217\273\322\261\034\275\200\0236\275\261\246\"=\250\267{<5\322\233\273\022\010&=6\r\314<(\232<\275R\302L=\013t^=\332\353\202\274\2371\213<W\370C\275n\367\300\274v f\272\325\336\304\2743\224\037\275\262\363E\275}\357(=Z\3735\275\365!\264\274\343\327\026\275\230b>\275\361\2010\274\242Z.\275?o{<f@\203<M^~\274\262\222\020\275v\250\006\275+\307\204\274\005^\024;{lX=\206\227z\274\004M2\274U:\302\274\356\371&=\272\256J=?74=\221\0256\275\342JQ=\031\022J=\200\354R;\t\202\205\274N\232\016=\365y\021<\307\017\033\275\264\242\367<.d\207<\324\262\n=\204\262\332\273\373U\263\273j\032\315\274\310\003\201<z6\211:\034\264\'=\030:2=/\332\212\274-\347l\274\346w\013\275+\016\'\275\315\014\230\273\320\215\230<x\227\254;_E$\274\333%\206<\232Z\030\275\231\264c\274\016<\242<\252J.\274\306M\331\274e\211\323;`\351y<T?@;P>\"\275\251\232[\273,\210k<\310=?\275\3203\331\274\317\357\223<\017`\233;\3322\225;\237\376(=e0\343\272>\322\354<\205g\244\274\324y=\275\347\356\212<\2303]<\313a^=\270\376V=\226Ae\274\031\321$<\323\327C=\355\210\261\274\355nn\274\003\'\031\274\004\177\r\275)\336F\275\217\261G\275\331\233\305\273&\330\3609\264\320T=\250\305E=V\276\370\274\251\333\361<\023\\\202\273\272v\023=^*\365\274\216\324O<\270\222@\275\010\356j\273\233\306\360\272\014\'\365\273\"K\025\275\033\377/<\247\222\037=\312|%\275\230-H\275U\337\202\274\036}\302\274\347\215\261\274\244\363\301\274\301\231\022\275\262\352\204<\350\217:<4\2665=W\347\200\272P\362\212\274\257T0\275\274m\235\274D\342U=Fd8\275#L)\275nZQ\274\322\372\371\274\036\003\005=\326xt;\245\337\272\274%3R\275\023\254\311<\244\0265<B\037\207<7\361\275\274tt\250<\007\013_\275kRZ:\264\005*\275\344\221*\275;\3058\275\313\335?=\315\333\204\274\266\203\252\273\253Q\366;\316\202\027\275\247n\323;\244+\022=\241\017\356\274\211,\336\274\230$_=\013\341\362<\232\031(\275|\233B\272X\3324=\337\337\343\272\370\245\016\275\352\316B<?\343\002=\n\000\334;Z<[=\337\274]<Z\370^=\317-\010=\307Q\277\274\276[\273<|e&\275\216>u<\333&(;\221\0166\275\351\017\025=\331k\377<\003\364F\275\260\257P=\311\275\271\274\205\274T\274G\020\'=\304=\254<\256\023\370<\263l?\274\214\2320=Y\365E\274y\352s\273\205$\252\274}SE=\213\254\376\274\014\004\032\275\265\213\007\274m\220\021=`\315I=H\021\346<\311\036\375<\247\362\001\275\235\030\220\273\020\227\006\275\037\367T\275\204\'\366\274\337p\210;\231PC=\311\304M\273\373\210\"=\246>i\274\0229\341\274\362\223\t=\005,\307\274Ls\001\275B:\377\27429Q\275L\005\013\275\224@\241\273\344z2\275y36\275\274\013\217\274\023\351\203\274:\245R\275\221\246-=\356\375+<\222\341A=d\367x\274\322{\357:)v0\274IB-\274\361~\023\275>X\371\274\363f\027=\262\016\300\274\014\357\024=J\023\213\274m\210\373<\274w\327;\202\214\016=\252Z[=\327\006\001\275B\207==\311\343@\275F\261/=Ub\031\274#b\025=K\336\312\2744\\\272\274\330\354H\275s+\265\274\263 S=\246\361\356<\204\000\273\273l\\\356\274\013\277\310\274\254Z9<\253i\320\273\224\316\364\273v\2173=\201\223?<f\234D\2749`@\275\001\204B\274\313\343+=\206\306\320;!u\246\274\306\247\201\274%\017\254<\300K2\275ig\365<;\333\320\274\225\352*=5v\277\274e\r8\275\0066Q\275\273\023#\275m$W\274\027\201J\275&-\025=A\233Y\274\036\255\\\275M\273\310<jg0\275\216yS=\326\010\267<\266\325\001=\335\251\341\273+\234\202<ea?\275\343\201)\274\261e;\275\332>\025\275\347f\221<kcO\275c\t@=\\\025/\274\301\376v\273D\312\\=\273\367\206<\315Y\003=\023B\024\275\031\2349\275F\022$\275\300w\212\274\272\311@\275\221W\'\273&{;=\266:a<b0O=\355\225,=Z\3000<5\035F=E\247,\274\316\370S\275b\247\212\272\334\025a<\037\005\006\275u\240\t<\r}%\275\025\036\274<f *=\tQ\035;*\314\030\275vK\031=\034\333\'<\317\034\033=\373\315)\274\006\025\034;\324\333{\273s\003\253\273t\001\037\275\273\264?=|`z\274\325\313\366\274>\320\001;r\255\200<\256-]=\314\300\036<#\364\003\275\202PX\274v0\307\274W\225\035=\3618s:X\263\031\275\2069\216<\271\256\020\275\033\275\220\274\373\361|\274p\355\023<\021\010\304<\005\251\240:n\245i<\267\364\034\273\020\031\245<\364\207U\275;m_\275\325\312\246\274JK\324\274x\017F\275\241\\\211;\366\200\356\274\"\270\321<\241\203\022\274/P`<\t\340\322\273\2005\037\275(E&=3\222[=\020\301\233<\376\010\n=\r\263\014\2757t3=q\n\\=\375\245\355\274Lq\r\275\271\026+\275-b\277<x\340\375\274\271\343\272\274\200g9\275\357\370\337<\234]Z\275\335\354\r\275\274N\021\275t\036O=\265\224/\275\036u\024\275\220\343\224<t\267^=\326\2322<r\377\230\274\375D8=\324\200\005=\256\004\202<u{0\275\315\312\325<\312\022P\275\023/\020=\334e*=\023\373\222<\337\357^\275\367\334\350\274\037\261\004;9#\354\274\005\370\237\273Cf=\274m\006\363<q\223\307\274\223n8\274\210EK=\340AZ=\017:\020=\'~\337<\331\371/\275\35454\274\r\177\332\274\251\024\342\274\356n\311<0}\215\274=Og<C\221\300\2710\255\337\274\223\212=\275\272\332\n\271\323\357\222<\317\245Y\275M\255\007=S\'\216<X\324W=\347\227\023\275\274\3076=m\344$<\005\020\327\273\343<\007\275\030\211\212\271\007e\341\273\032\227\320<\342\254\024\275u\001N\275\257\253\027=\2378\022\275x|]\274\314\364\222\274\221R\360<\377 \377\274\313\202\272\274\'\245T=\203x\236\274`\336N\275\"\312?\274v\226\237\274,\376\016=\032Aw\274\020\023\016=\237\024\252<\\\272f\274\3035\034=\005\037^=\350\362\236<\373g\016=lF\024\274(\224\304<\323\260C\275\315s\213\265\253\352\004\275\234\235I=L\320J\274\377\226\241<\"\253\037\275\247\000,=\\7\\\275\351N1\273}\230\310\2743\027{<,J0=F\021\304;\227\337T<\215\331H=\375\203\313<\3174X\275\320\3242\272\204^\326:\337\251W;\221Y\251\273\250\230\262\274X\177\221<\244\272\200<g\224I<\276UE=$L\033=b\357\370\273\342\370!=R\244,\273g)7\275_\0349=\004\222E\275\344/L=\305\272V;\031\252\371<\234\025(\275\365\230\242<\323\004\210\2737\237\303\273\232\317\377\274\250\357\343<m\357\014\2758\017\203\273zR\300\274\037\025G=\025\303\n;n\235\245\274&*\235\274\250\034j;\027A\340\274\n[I\275\264\036\'\275\206\352\315<o \303</X\346\274\323\314\210\274\325\332\213\2730\017\021=&XU<$N\360<m\273\244<\327\222\374\274#\352I=Aom\272\t\352%\275\304\316R\275\303\341W=/\270\014\274\350qS\275<&\331\274o\353`<\310b\275\274O\3008=I\207>\274\021\017\353;8kq\274\214\2552\275\003\216\337<\367\343N\275iJ\204<T$\236\274\335]\330\272i\'\343\274\315%\220\274yt\217\2746\362\035\2750!M=\000\177\017=Ob\037<f\200\244\274\202X\357<\246\265X\2749\212(\275R\006\300<w\310(;\377\352_<\214qh;v\253\337\273\210\234\273\274\007\036-=9\206\203<v\250D\275 \374u;\226\373Q\275\341H\022\275\275\374\374\274.AR\274\n\'\t\275\0353\201\274\004\2027<\'\001{<\222\027Z=\211\027\004\273\316\325\035=\362\314\371\272x\004\000\275/\320K<F\366F\275>\274\024\273_\227\002=\030\233\253\274\251%u\274\034\002\322<\263\020\356;8\211\222:\227\031\273\273j\305\362<\331\314\203<\345)\331\274\032\203\004<\325\205\034=\315TA\275vJ\"=e#6\275uHR\275\303\342\261\274\2742Y\275\214\324\272\274<y\321<s7\216\273\204\227\334<\320\201!\275\337\370\265\273\243\256b\274\361\321X\275w\025-\275\270\2231\275Y\275\232\273+\302\032\275_\241n\272\306\246\346\273\343I\222<\246\334\306<\356G\313;\322\300\257\274b5\203\273~\003\360\274.\0338\275\320\263\027=@\027\240<\372a:=\227\373\201\274`\376\021\275\021\227\021\275\245\231\236\274\036\010\331<\377L\032=^\343\334;\310\341\023<\362Z\204<\312\266^\275\031\000F;1\330\251\273\202\244N<Hw\322<\243\306\335;\001\n4\275t\"\357\273*\311;\275\330\253;=D\257:\275\316\312z<\337\256\342;\0216\330\273\213\013\234\273l\240)=\256r$=\331\230W=e\245+<\331r\003\275\021\1771\274\321\316\207\274\360\345\010\275\"/u\272\233^\315<\261\n\371<\333D\004=\036\347:\275\304\340P\275\212\312\030\275i\267\235\273\263%\216\273Mw\310<y\201\305<\203P\244\273\026\200M\275\337\307\327\274\201$\274:\025\325\004\275S%\023\275(\273V=U\221]=\301*l\274b-4\275\314\007\002=Q\r\315<\375\267\251\274\257\232\005\275C\307\303\274 \320|\2746\322\304<\200\026\305\274B\177Q;\300\370[=\363\227\330:fgQ\275]n\202<v\372?;\317K\360\274\026V\004=\203\312\003=f\200%\275\324\277S=w\265\003=\217\336G=I3\246;\322\202\025=\356\346<=\351\203\322<\226h\033=\275\224>=IX\010<\217\0044\274\327\177\251;\244\374\326<\225\004\232\274\035,\332\274\004\303\036<fB8\274\276\237\302<\330\270\017;\327\234\222<\307V\371\273\010J\260<&?|\273\323\371\004\275\007\2314=\367\363\000=\0052\240<\022\265\253\274\3364M\275\020Q\332\274w$X=\361P\001=F\177\"\275~j\367\273`\2220\274\3313\013=\352\341\327<D\270\211\274\261KA\2741\2247\275Z\230$\274\177\2242\275\235$\027=X\376\036<<4n<\262\205*\275\027\234]\275\247\242\006\275+\331>\275u\214h<\014\376\242\273fI\177\273zu\210:q\230\305\274yz\204<\324\034;=fE{\274#\334(\275\355zM\271\353{;\275\365\245\226<GW\031\272\241\337:\275\036\322\r=zg+\274g\037)\275V3N\275.\223\t=P$\022\275\274\270x<X\235\021=\3444==\263[\020=\274\261\036\2748\374=\275y{\'<\252\034\022<\243\200\037\275R2\030\275F\243/=\262C\242<gW1\2744{#\275A\217\321<@+\346<\n\363\n=q\nN\275\315\'#\275\363\030V=\317\302\307\273NM\247<,\274\006\275\004\264\243\274+\230\221<\345J\251\274\342\270\n\275B4\366<\332\260\274<w\305\007\275\263dW\275F\014z\274\327\331\257\274\272or\270\313\350<=\3071X=@!\257\274q\0138<\376\375\360<\307\002\375\274\000\356?\275\227\332/=\353!0=\224\346\025\273\350\261K\275rP\230\274\307S\353<6\322k\274a\357L=Z5\003=\242\210\212\274\331|<<N\233B<\246v\004\275\366\265<\275a\017\254\271g\325s\274\341l\213\274\270\362\350<\237tU\275\3464\242\273\302\346M=\217_X=d,\241\2733\254\n\275986=\235\235\026\275\3230\033\275\275pE\275\031\307\213<\211\213\004=@\374\234<\252\362\235;1\323<\271\006\034W= O\000<Y\315\265\274\214\014\253<D\331\217<\223\225\253\273j0\241\273W\037\367\273\272YR=\214\005\272\273\007\302\025=@^\376\272\013\2601\275YeW\275\232-\253\274\n\214\005\275\021\026 \275&?[=\306c\016\275\307\004_=h\013\006<\ta\026<~\025\270\274\271G9=x\322\334<\326\0207=\365kN=\362\214\246\274\251\222\300\274_\"\t=LR\352:\031\026\004=}\214\016\275\341t!=\270\374,\272.\376@=\343\266&=/\rZ=\007}x:7\244S<\024\004\265<+\252Y\275\320\275\270\274S\0000;\324\r)=@+==\267m\261\273?\321\315\274\375\2015\275\216\341\000=\305\273:\275\005\216\243\273>g3\275K\270*=\323Y\355<<\0067\274\323\025\006=\356T\033\273}\333\332;\004\254?\275%\235\231<\\\213\311\273k\362\022=a\270%=\374\251\234\274B\277\023=n,A=\214\356^\275\255\235 =\010+<=\221\356J=\262\204\322\274\306\240J\275\267\013\013\275\371\020\363\274\2773C\275\033\260\244<\271\252B\275\322m/\274\273\n\032\275sx \275\177\312\252<`\244\007\275\247\322,=z\017\262\274\376\2367;\272pM<t\304:\275\263B\367\273\222\3336;\010\026P=\204\335\250\274\313a)=\354t\014<NA\255\274\341:J=\235\032[\275\262\323C\273\004\022\225<\224`I\275\341gA\274\032\350,\275\005\250\277\274\r}><\013\"/=e\360Y=\262\241\217\274\265\3716=\373N\037\275?Y\037\275\3312W\273\210Y\322<\210\335\312\274\202;\003;\377\231\353\274\244\030\215\272\314\333\000=\265\301\000=\030-k\273\r`\006=K\326\022\274P%,=\261\312\016=c\347\225\274s\377c\274T\373\332\273,*\361\2746d\301\274S\325\233\274\351\243S\275\321\352\202\274 \213>=-\021`<\210ik:\"\2100\274\336\260\354\274\336?w<\214+-\274\322\275$=^\233&\275\261VT<\313\246W\275\365yt\274\254I.=\3664\035\274\320M#=\325\251\275\271>\010\215<a\024\206<\316\035]\275\347! \274\267\217\214\274\231\346\007\275\313mF\275\220\2424\2752\313\213<r\207\331<\302\344\020;+v8=\020\211\313<-\334\024=q\'o;\200q)=24r<\250\226\313;~I8=>\237\246;\344\360/\275W\273+=\217\363\031=~\210\024=G\221;<\347.\024=s\004\314\274P\0365<\226\207\000=\221\331\241;\246]P\275\364\375\334\274\3303\317\274\'mL\273\306\206\031\275\027\023\364\273+\300\206<\376\207\353\274\323\362M=\004\232C\275/\227\023\274+\017Y\274\t\006n;\200\335\001\275\236PO\275c\270\037\275\017\243\367<\215\202\250\2748@\376\274=\025V=\250\353\317\273\215a:<N\226\032=\351\304^\273f\211N\275\003\264\030=\247\247\376\274\225/9\275\373J\200\274\t\373X=b\361\037\274(g\230<\302\372.=\250\314D\275\030M\267\274\020\260L\275t\276C\274\007\265\231\274\347\245*=?\370d\2746\020\252:\365\300~<\021\237b<\355`+\275?\214\245\274\210 \316<Jf\004=Z\304:\275\rM!\275\275\354\304\274\334y \275\275\314\220<\005rO\2756\306\221<\002\'F=\346\240k<\370X\242\273/=\004=\002!\035<\224\205\026=\305\247>\2757\257:=\024(\210<\232\':=\371\243K\275\2515\375;\363\306\017=\2473%=\376\323\305\274=J\035\275\276d\266<\237\216e\274\347\231\027\275\232\256\235\274\217\305\025=\300w\315<\204)#=\221\245\024=\031\213E=}\324j;Qya<\366\372\377\274\316\017\331\274\014D&<\335@e\274;K\212<N\235\'\275\332\273y\272=,\331<\227(Z\275\223\223\035=}\371\2649c\210:\275\020,\357\274>r\001\275\234~3=%\226\010\274xQ\n<\345\257\002\275\300]R\275\322\363\261<\177\255\366<b%9\275\354xB\275\324\375\\\274I9\326\273aM\\=\373\303\264<O\213\005=\013\010*=\345\341\275\274)\352\"=\336\037E=\366\215\022=\016\354\273;f\215\314\271T#>\275\371\014\327<\332\310\375\273\020\005\035\272}\005\225<V\226\036\275\023\010L=\324\241\n< \252Y;\337B9\275\361V%\275\324\030;<\207\333r\274\303l\236;$\274><\036;*\275N\275#<\242\207\t\275\210Z\003=X>\034=\224\322\244\274\302\360!\275\026:\346\274A\005\277<\212&E=\270i\276<\0076\017=\342\233t<\217w#\275\363\212\333<\331\304\300\274\251\216v<\352\003?\274\362~#\275\354|\301<\021\030\004\275.\033\r\275v\036\356;\345\r);e?\271\273CC\273:\316\271]=*\235\024\274i\325\205\273\366hs<\031\204\034=\020\277\237\273\237?\033=X\344G\274I\0305\275\214]1=\037\303\273;r{$<\206\301\203\274\013\366%\275\204Z\007\274\347\322\345<\353mJ;*\250\217\274\261D\026=\231\000$=z\214\222\274\250\326\021=\262]\024\275\177rL<\177KW\275Q\351&\2751\376\346<\345\001\031=\331F\307\274\300l\007=\260\037a<\023\324Y=E\207<=\276\276K\274c\321\001=\206=\337<\227\037\023\275\344\333\010\275MA\201<T\203,\2755\367\375\274\222S\033\275\177\345\347\274\363$D\275u4\323;eC\023\275\347_\375<\365!?\274\3411]=*\3537=\366\223\344<\222g\221<\317rx\274\320\204_=\225\0242<:\270$=\315Q[\274\002fL\275\210d\347\274\266\231\342\274o>\247<\217\030\364\274\367EX=\312\032L\275\032\330\217;$L0\275\020\233`<\003i7\275\276]Y\273\016\333\342\274\206\303\226\274\237|N=^\3765;Q\357!=\276R\247\274\303&\014\275\257\250;<`\0325=\274:\004\275\362\261V\275/B\335<\313RP=\322\034\010\273\037\240\3569\004i\316;.E\031=pY\262;\227V\346\274C\332>\274\251a\322\274\342\200<\275\363\\N=\005\244\350\274\010\223\263\274\036\016\251<\004\344\264::0\236\274\215\016\314\273V\316[\274\022\345\271\274\315\016\007=W\3129=A\201\021=q\2032\275\365\206@\275\0344\307\274\n\265\331\274\256\031\370\274\375\271;=\007\032b\273\322@\024;6$X<z\367\037=N\273O=\216;\377;\202H\250\274k\206\214\274N\364?\274\264\230\373<\372\313\376\274\337]_=\317\275\372\274/\003\033=\002\210\371:w\253\352\274pGB=\264\035\206;\331\371!<Ns\306<^\364\036=Q)B<\307\360\t=C$\234;\344\251\230\274\273-/=\272\274\036\274\262\221\021=\345\027+=f\352<\275\336\305\002\274\313\006R=\321\026R=S\036Z=\215\256\220<)\223\245<\311\241\351\273].\244<oN\001\275v\250\026=j\3726=\010?\363<\260\277Z=W:U\275nj\372;\241vJ\274\032P\241\274\242T\375<\213\256X\275bj6<\236\245\3609\235\316\247<#\316D\275U!\356<DB::\262\274\322<\036\306\254\274I\035\017\275\345\032\025=rGC;\252,\325<\002\014\224;n\207d<\0170\002\274\241\027\034\275{\214\314\274J\340\226\274\030\036\370<\207j\326\274\222\010\373<p\240\226<8\027\232\274\251\313F\275\334=\030=\315\376\330\274\316\006\034\274\217L\216<\254\375\030=C!\036=Oz\t=\370\374K=\344h.<\245z\303<\031\r\230\272\277\244\355<\203\331\316<>\207%=k\014@\275\245\231E=q\234\323<\343\331\275;\257\364\022=\214GO\275\031\355\224\272\272\301\355\274t\300\010=\323)\320\2745vM\275\264w\031<\n\216\007\275bP&=\t\300[\273m\031\020\275\024/B\275&\225]=\301\327\r=\330\316\222<T\366D=TD\212<\316\324 =\333\302\365\274\207$<=\031:\024\2757`[=>\350\247\273e1*\275\0043\020=\0072\303<xG-=\275\254y\274\246z\177\274pG\'<2\362D\275\036\323\017\275\014a8\275.\rP\275M\022P;\250v\'=\257\001b\274\020\2711=\220!\355<\036w&=9H!=\'\343\006<o^Y\274\363\267\207<q\356S=\214\236\367\273\314\014&\275\254e\353<\000\320D\275\311\225\333\274`\010B<\232\002\264\274 ~\3749^\307F\275\376\na\2745\250\372<\001\021\350<\006W\235<\317\363\336;\363 \026\275.0A\273\213>(=\026\271\320;,e\003=DR\256;/\264\246\274\224\313\r=\035\216\031\275n9H\275\335\312\343\274_[[\275z\300\025=1|\003=\326y\330<9\337\350\274\201\361\353\2734l_=q\213J\275\220\361\245\274\247\262\340<\266\335\360\274%\r\307;\356\337\314<\274j;=\310\"\205\274\243\007%=\363{*\275p\022I;\360\335V=\245f\211<E\'\350\273j\021\010\274\034o<\275\021\243L=\315\031\270\274\352t:\2738\232I\274\347y)=\034\032\203<\225\001\330:4\235\341<E\3002=\351\262\331<\364\357\030=\276\000\306\274\321#\216\274\252\310\240<V\r\'\272\241;\005=Kh\202\274oEJ\273@\201\360<YA8=\346\212\307\274\226N\275<\240fC=F\226\307\274V\255\017=<\014\202<\004{\316<\023\\_\275\001D/=f\333U=n\323#\275\000\253\336\274\022\250\265<v\037\263\274\3027\033=\270\263\020\274\027\246\302<>I\201\274#\3238\273\377\202\215\274a\270R=7\252\347<w*\233\273v\261\004=7\023\025\275\332TN\275\017\311\\=\331\245\322\272c\0044\275\214?\363\273\201\303\370\274_\345A=\021\341X\272\223\267\003=(V\210\274+\300\034\275\233\002,;}\216\035=\006\342{\274\346\024\034\275\023\306\010;\360U\020=yz\016\275E\221\316\274\376\017.\274\300\033S\275\241j\270;\306\001\270<\n\323\214<\275\375!=6\217-\275\354\231\'\275%\205\010\275\251)\021=c\345\034=7\006\030=\301\343\200<\344X\276\273\352\315 =\241A\333;\257\375\314\274\237\242A\275#\260\335\27241\017\2748D9=\t@\020=\237c\357\274\2306\273\274hA>=W\006\000\275F\0356<<\244\335<Z9\014\275HHW\275\376]\025\275\374c\217\274O\325\265<\007]N=GiI=\362\3523\275jD9=\354\231\005<T\360)\275\t#\346;\311\2752<N\306\033=\312\tH\274\265\361W\275FQ\372\274\\\330\231;\024\321`<~\235#\275\030\036\315<\027\267\263\272uS\026=e*S=\315\0270=\242\333D<\347\375K\275\336=\037\275@\231\275\274\275\317\001\274\337\177n\274\337\270\326\274s\'\302<\270\320(<\256L2\275\261\355D=\252\271$=\245\243\256<q]\271<*`\226\2745\330D=\213MS=\212\265\"=\366\322-=\202Q\020=\025\0218\275\342\233Z\275r\3431\275\212\021]\274\264\362*\275\207\311U\275~\0241\275\274\025\006\273[\017\302\274\220O\347;\341q\273\274\027\233,=A\260F=x,\314\273\222\204+\275\335\316\213<\246\342`<\241\021\013\274&&q\271$\374\006=\301\201!\273\333\346\022\275\017\3214=\275D\000=P\307\303<\356\034`\274K\236-=L\034\306\274\365K\"=(w2\275\"\241;=\265\325\262\273/\370\006\275f\210O\275\344R\t\275\203(\266<8+H\274P\331d\274\241\370:\275t{*=u\273\250\274\257L\033=#m\200:\240\365\300\274\022?\037<\304#|<\331\016\020=\335\307.\275R&\023=i\266\363\274\267\373t\274\224k\274<)dJ=\252\231\213\272\325OQ\274\022-K=N\373O\275\001\3774\275`\344\301<x\255==\350\274\304;g\210*<\004\345\'\275\334s`\274Qv\256\274\3071F\275O\034\234\274a\003I=\246\337\320\274\305\017\014=\300\305\335\274\350\'\r=\212e\376<\300\246\314\274~(\025\272\301/\034;\242\206B=\327o\013\275\007k\"=R\220 \275\307\322\025\275`K\001\2754\r@=\035\243\252\273\305\331\231<h\364Q=h\023>=\350\004\037\275R\216\"=U\361\r\275\204\222\271<Q\344\026=U\0277\275\372\032\352<\207B8\274\277\007Q\275\t0G\275\270QI\275\314\213m\274Yi/\275\223\034\003\274{\302E=\335l\267<)\032\367\274k\323\"\274|\002\203\274G 0\275\215[\261\272\023<\003\275\016\245]\274\224\305\301<\253\254\274;\247\374.=\331\243\3419B4\010\275M\0353\275\234\377\215\274\307\303$\274.\\\330\274$\345\362<I\2308\275\365\3220=\335\r-=k-\307\273\346\202\002=\326\2160\275\367\247y\274\2525\306\274\\\t==\314\342\212\274z\217\267<\030,X\274\200\256O\275\371\325\006\272\177\345\003\275\220\000Y\274\210\304\t=\313\240\023\275\302M\321\274\366V-\275w\242U\275\0163\013\275\243L\220;\276\255d\274\200\367S;\260`\241<\252B\274<\307\266+=\233\316\253<\037\317\261\273\224V\273;\262\305]=\217\340\273;\016\036\003\275\221\371U\272\321^M<\236#==\2140,=\tUa\2749\177\026\275\322h\\<\337v\253:\273\r\271<\221\243<\274Ic(=\022\217@=\021\213\037\275\033\324,\274\016.\023\274\250\357@\275\024\216E\275U\253;\275\341\221v\274\364|B\275\365\201\360\274\267\036@=\324A\325\274\212TE=I\353\237;\325R>\275\345t\n=\247\356]\275\317\257\321\274U\007\306<\252a3=\033{\207\274\324\3032\275b\237\334<\212bB\275\3560\222<\307}\302;l\301\315<l}T=\274j\316<\257b\021=j\021\337\274\337h`<`\350\232\273\005\033\275\274Cg\003\275Ii\013\275\r\324\031\275y\000\200\274\311JR=\334-;;\225\247^=n\t\023\275\253</=\242Z:=\343\351\310<;\326\354\274X>\347\274dl\005\273GV(=\010\212>=\344m\271;\373\265\200\274S?k\274\033\276\375\274-vC=\035O\030\275\2573\256\274\347\310/=\\\353\327<t\361C\275\'\004\341\273\375\333\001=c\036\232<0G*<\274R\r\275$\'\374:\320\346\226\272\230%\234\274nB\331;y\031?=xi\017\274\227\373\031\274\236\022?\275\323\257\223<\367F\375<\321a,=\212\332\324;\247\210\221:V\361\032=\203\177\273\274\220\341(\275\255A\325\274{\273\345<\\\314\252<f\261\'=\312V\311\2741\006\034=.5R=\010@\325\274\"\373t<d\3363=\274\273\331\2745\036\010=]O\216<Z\004<\275K\264B=\271\316\327<O\2037\275\331\266=\275\337\272M\275f\010\222<r\206\236\2742\267\315<\237%2\275\020vN=\325\246\221<v#\321\274\214\232^=\302\"\226\274\361L\265\274\261\204d\274g\2314\275\362;+<\350\322\360<\244$)=\345s\204\274\230\334\303\274\232\303\325;\373\376>=K\301\375\274\304\357\'\275\030t\311\274\253\314\326\2749\343\343<\352\202\322\274\000\270\340\273\021=\241<0\315\276\274\021j;=\203\377^=uw\351<\013\364R\275\"\254W<\226w\255\2737t\003\275\033D\027\275\361\370\226<\305\337\027<\377b%=\217\327\310<\326\036\374\2741\346T=\355Nk<\343j?\273\356\031#=>I6=\216\005M=\362\002\n=\364\375\177\273\276\016\372<\356:\246\274N\372\236\274\230\017\372\273)J\017\274+pv<\'*\302\274q\222\032=@:\306<\244uQ\275\272\303\007=H\375\371\273\035\344\216<\334\230\362\274\205C<=\311q\024<V/\350<\333\337\367\273\2153\034=\347\"\t\274Q\332\017\275\244+V=\267w1\274\342P\007=\007/<=P2.\27509Z=|\323.\275\275+C\275\221\247\337:\021\033\001<M\005\336<c\214Z\275\037\3333\274\253\225\034=z\036\316<\204\352|\274\014\212\022\275\266\247\010=\320\014T=\'\026K\275!;\253<\035A\020=\202AX\274\200\326`\273eM\017=\020\346:\275\325\304u<\311 \357\274\031\332\265\274\034\3359=\274\247A\275\220\220W=\356\030\260\273\303s\243\273o\030_\275\004\226X=,\0223=\007\345\'\275z\215N\275\017\221\341<\301\336{<A\t\354<\347\363\311<\021\022&<\304\364\251<:+\300<s]J\275<\251&\275\267\352S\274|;\314<\243\315];=\204\'\274\024\001w\274\215b\365\2742\207.=\306~\243\272\373\024C=\217\246 =:\"C=a\231\256<w\205S\275?\336\211\273\277(\250\273=\364\203\274\005c\002<\334S\004\275j\032u\274My\003\275\360\332T=\260\2305=\267\252\302<S\222\027=\216\003R\275:\377\204;\036\224\213\273\366\032\022=xB==o\266\367\273i\210D\275U\327\025\275\360.\206\274qc\264\274\020D<\275KGK\275A!x<0w\247\274\216\301R\275\350\375N=|~:=\366$;=]]P=\370\017\210\273\256\316\274\274\027\3338\275\203\275t<^\207I=\240\213\001=\322b2;N\243\253\274\363jE<\267\333M=>e\334<=\177d\2739:!;p\363\"\274\352\351\251<\250\376\032=+\225\264<i\177\';\232\307\367\274f\364\271\274\362e\002=\325vC\275\242R(=\347n8\275\030\234\354;\363\001\\\275\260\3177\275\340\327\024=\234\236F<3\240L=3\361\270;Wy\034\275t\331D=\006@\373\2742\265\036=\014\357\020\275\317\017N=\177\307\204<\342!\220<\345J\203\274H\243^=r\034\240\274\232\227\204\274;\261\026\275\346SV= \231\033=>\037\334;\315q(\274\026\207\000=`c\\=\235\332S=\325\261[\275\360\335\344\274:\360!=\3119/=\333H9\273\253\362l\274L\273\023\275\006\307\025\275t\315\307\274\325q\313\274\303\005)\274\027c\024\273\371\300U\275\211y,=\357\007\311;\266\000\"=\327\305\364<@T\037=\365@\251:S\212\335<\342\276\013\274\216\266\233\274\366\232\376<!\030\304\273\317Q<=\024\3166\275\262\363\030\275L\035Y=\227\372\315\274N\201\'\275ep\035=o\213O=\316%\014\275\221S\003\274\267\322$\275\014g\024\275I$!\275\024d\320\273\254cA=\250KX\275&+\367\273\014\300H=O\353\354<DJ\023<u\'q\274\211e\006=]\300)\273\324a\217;\343\203N<\215y\223<\030\014\246\274\3071\201<\257\277h<\n\267<=q\310\322<\260\244\033=\250@\331\274\260\032Z;\232iN=\366\250:\274\021q+<.\324\301<\272\r\202<2\2551=&[\033=\274f%=\022\000D\275\030\014(;\243\3243=\021J_=\226\325Q<\210\010*\275#7\\\275\321\205\202<\022u/;\202\321\277\274\202[\325\274\325d%\2750#J=\235\317\315<\271^\354<\247\246\002;\204\314\343\274\222\271\002\275\365\0368;\215\034\224<\025,\222<dKF=\230\246\004\275\361\362\270\274\260\300I\275\223,i\274X\036i:M\374\t\275fG\261<\325\304\302<\370V\203;\305=\226\274\333\357\370<\245\376\026\275Y\245\250\273I\212z<I\332[=v\310\r\275\220\031\n=\243\327\305<<J\013\275\347\245C\274\360\013\323<\211\353*=\345o\031\275\207}W<\"\232\351\274E\033\376\273\001\344\363;\004]\017= \026\261\274\313\367\237:\234\210\037=^\220>\274\25747\274c<F=\257\016W=i\320\261<\031\250t<)2\261\274\037\301\275\274\330\363\241\274m\231X=\264\364\232\274r\346q\274\365Y\332;r\206:=\032\376#;!\235R;>%\356\274/\344\016=\222b9\274\0249\t\275\302\365\033<,\361T<\276\005\010=\3564\312\274rRF\275\3724$<\271\301~\273K]\r=\203\n\355<\327\337\301<\342\315\267\274\214\\\036=q\345\346\274o\362I=\254G\344\274\341m\000=\321\274/=\365\003\t\275(\350\213\274IV@=\357\200\n\275\370\021\350<8\001\243\274\277\335T=1\177\305\274\334Q9\274\363\307l\274`\206\025\273\304\332\001\272\r?*\275\355\362\032\275\233\350V=Xo\003\275n\001N=\370\373\302\274\221\017 =\230\3402<\3013t<\035\351\256<\"\254\267\274\305/\023\275H\020[=;N\305\273\307\000N=\221\"\226;G\374q;\\\350\227;D\345)<\3069]=\207p\226<?\3604=;\271\017\27591.\275#\262\003=[\345n\274\335\222\272\274\303Q\026<\212a1<*\243\005\274\257\344U=\203\322\244\274\264\213\261<\007\374\357\274i\211X\275t\214)\274\201\303\236\274\"\265\327<\214.\037\274\024\370\324\274\363\340\377<t\206\344<\006\3441\274\26529<=\326\\\275-+\017\275\327\311\002=I\267\272\272\2654E=\320h\274;XkH=\333\217G=6\224\230\274\316\344\203\274\276\035&=\033\024`<3\252\206<h\323\320\273\2458\265<\261=;\275\376\272\226\274\260\331\034\274\221\000 =\005c\267\274n\200|\2719b\211;}\232\217\274`\320!\275\255o$\275\2578W\275\377C\322\274WA[\274\307\262\333\272\373\313w\274\240[\225<G3\017\275\021\010@\274\227 :=\260:\016\275\022\351\335<\226\0345=\375\276;\275\357\276{<j\262\263;\323\221S\275\224\n\007=\231\374\032==AR\275\272\352\031=\266\\P\272\275\266F=_#!\274U\'\033<\326\244|\272\254\222\013=\354\247\016\275\270\336\317\273\266\033\312\274=].<\351\206\026\275\035\021\355\274\177dR=Q\210[;t{n\274\334^J\274\032\311\336<G\200F\275\306\335\240\274\022s[\275\220\355\255;\035\303^=\000}O=\340g\255<\316\353\275<\030\363>\275\317\001\037\275\270Xw<\272\355K\274\372Q\332\274Bx\027<\215\315\301<eI\033=\223\303B<.\344G\275\345O\'<\321\364\333\2740\253S\273\010n\377<;\026\247;\252\256\033\274\316\0077=+\002\375\2747\315]\275\254yw<S\020\317\274\265\363\205\271\315\036\002\275\001\247:\275\375\002$<\355\013\004=\030f\022\274d/\327\274\0148K\275\016\316T=\354\303\304<\314h\023<$\2252=t\025F<\211\357\213<Kk+\275\016R\374<?\332]=6O\002\275\324H\374<\355f\350<3\332%\275\301\211\010=^\000\325\274\357\303X\274\030%\200<CS\315<Q\003\000\274\035_U\274\367\344\006\271h\026\334<\321X\212\274\n\376\237\274\273@8\274\257\2563\275\226\321\022\274\027V\211\274\010\240\275\274\305\020B=\'\037\017=\237\035\324<\311eV;\357\354\221\272\236%\303\274\001c\236\274x\023?\273\237FA\274\326z\303;\225\346`\270VGP=\302\017.\275AP\331<xQO=\035\303\n\275~\333\221<\324\266C=\236X\371<-\331\363<D\361\022=v\306\'=.P&=;\224-=\023\t\330\273\251Vg<\255/4=\213\232!<^v\245\274o\030\232<\243\311\005<\266\275\255\273r4/=7\027\"=\253kK=\002\251\271;\247\331C\274\256\3242\274|v/:`\023A=\r\014%\275!\346~;\316\377(\273\214\232\244<\207\307\371\274\036\227\2209\277\332\306\273\313U\326\274\272\341\257<\251\341\034\275\322\354\246<#\332,=rh\244\274.\220r;\007U\027\272\001\264\310\273{\326[\274\243\tB<w\203\306<,\325\007=\321 +\274\277\032\333\274nx\272<\017\310^\275\344\315\241<\'(0\275<R\352<\345\355\301<\025\2409\274\277#+\273\036\306\354\274\\A~\274W\267C\275\234:\330\274F\250\377:]\'\330\274\'J\274<\032\340\t=\272\\\r=\214\250\037=I\2076\275\210\273\021\275\211\345\367\272\r\236\303\271B\007\213\2749P+\274\275?I<\327c&<\321\347(\275X\365A=\242\273\000\275\017_\232<\351\2778=\3150\257<\220)\320\271\346\2722\275\007\206\216\274\343\222\354< \363=\275\017\253\014\2757\0213=\247\356\313<\327\332;\275\r\024.\275\224\013E=\353PP\275\244w\003\274~\031\310;\017\312\355;\3372\360<\267\210\364;ed!\275{\344<8;\014\027=\237\341N=\306]\356\274\2554j<@\314\223<\272,\214\274S\010\356\274\202\225L=\254\014M\275L\236\017\275!\310X\275\027=\n\273H0S=p\3126<\345f\345\2735\213W<\002V:\274\204G\362\274fT4\275\035\352R\275\023\207j<\213\233\331;\205H$\275rF\020<\355.\200\274ty\245<\227\t\030\275v\013\004\273I\225\036=+8\266\274E\372*\274l@V\273\026\202D=\000\301\024\275\252\326\260\274\300\315\230\274\016\313S\275C\267\246<J\262H\273\005\314\270;\305\010\033\274B\007\263\274\025Q\t\273)\376\261\271\240{S\275r\311[=\005\227/<\213\333x:f\266\020\274G\3714=\264k\210\274\271E\350<\371\330\300\274\312\\C\275\250\360<=\362[\r=\220\360\330<wO\351\272$r?\275\301\354\n=\372\377\345\272b\206Q\275\371\007\031\275\266Z\310<\246\324\030=F\351\374;?Gc;..[<\363\002\016=\341\365\316\274\241\343G=\203\'\010=(-*<\376\345%\275(50=\1772\345<\256\021\332;\n\367\027=\346\036*\275\250\031-=)\322B=d\026L=\211\226 \275\214\310L\275\034\246\275<\007ho\2731$\371\274\326\347\333\274\317\365N=y\370\016\274\021B9\275\250\321O<\264\2244\275\362\3032\274\217\317\205\274\311\202e<\315R\004=\'\3241\275\003\346U\274\215\307>9\365\313\306<B}3\275\243\030\226\274R(\337\274\300\225\336\274\333\203\006=\22583\275\252\370Z\2752\223\032\275\200\201`:\257\035\t=W\031\373<\364\026\276;\227\213T\275\235\374\364\273n\301\'=\030kM=;>\362\274\246w\350<\310I\\\275\345>\t<\0249S\275Mh:\275\022\t\006\272\177&\025=0,&\275\010g8\275\236\357@\274\177\037N\2751%\331\274d&\305<{\310\331<\343pA=\364\366\020\275\005\353\r=!\327\024\275\200\333\334<\356+S=\305\245\326\273\234\033-\275\025/%;\rX\237\273%\245H:!\0075=\26592=C9\364:\211=Q=(\205/\275\351\342)\275\340\207?=\007\255^=bry<\006\246\254\274\270z\021\274B;\005=\327\030\270\2747\376\300;\032\331P=\0066\177<h\003~<\3561\202\274\217\036\255<-\017\004\275K^\355<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
