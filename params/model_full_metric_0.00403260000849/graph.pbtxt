node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2070
          }
        }
        tensor_content: "\204\226\323\273\025\016\002\275\033\301\227\274Pn\225<z\343:<\370\332D\274L\272\013\275\014\350W=\344\246C\275\275\276B<?\215P<i\021\372<C\317\002=\355>J\275\034\003S<E\006\210;\237\037\022=Bo\t=\017\305Z\275\305\320\311;K\212\250<\3241K\274T\266Y\275Bn9=b\210\017=\260\372\321\274\tAR=\354sq\274s-A=\203\313\021\275\211\017\000<\373\2451\275\2231\210\274\334I\315<8\t\373\274}\177,<\330\223\246<\266\0360=\300\300G\274\023\032\022=\231\222\346<\200\262\023=C\277/=\316\036\360;\224\222\212:H\235d<4w\340;\021\004\225\273L!\007=^O\222\274,\014\210\2734\\\025=\"=\334;A1\222<\177\307\315\274\000C\006<\305\2016=hHf\274\330\366\245\274\212\005\014\274\243\303\270\273\227\302\023<\213\362\323<\263Q,\275k\217\007<\345\210G=rE\324<)\341\200<o\r\260<G\035z<<\314i<{5J=\021\013S\2731\311\350\273\361\362\361;Y\350\006\275h<\242\274\365i\007=*\251:\274\313\214\025<j\375\005<\377Y\031<\220\266,\275h\217\337<\342\223Z\275\331{\370<\223j\027\274J\356S\275\234\3307\275\275\'><5\026\321\274\324\302=\275G\375\373<\204\206\336<\236\002#\275\360\312\230\274V\031\236<\240\327D=\205\233<=\"\335\\<AK\312<\366\300\317\274\364\177F\275\013zS=\320\033\014<0\351\026\275m\222\202;\033Z$=\314\272\327\274\343\323\251\274xs.\274\326\342h<\264KN\275\013\256\277<\354&\317<\345{\363\274\346j\010=\364\370%<\343v\306\274\t\200\257\274\253\334[<\273#/=w\344\013\275\007o\025=\'\373\356\274\277U\356<\335\271\n\275\257\223\021=^\335$\274\333\310\242;2\370\241\273\345\201\032\275\231pj\274\324\247[\275\r\302\237<\007&9<\311\364\005\275\246FJ\275\232yC<\017k\023\274\325\235\020=4\302\244\274I\224N\275RU(\275a}i<\025<N=T\323\036<\306\221\254\272?\017\252<\371\227\010\275\311\300C=C\2407\275\203c\251<)\367B\275X\260\221;\224s\226;\200\303\311\274\310\225\337\274V@,=C\205\261<\320L[\275\237\224Q=\233\342\321<\026W\242:w!*\275\223\003O\272\002B\036=+\267\327<\300\002>=\260\233V\273\013\2605=\320\002\004\275\245\0261\274\345\227#=\025:\335\274\326FY<\375=5\275J=\243<\216_\220\273\n\037\030\273;\r\251<\300bJ\273\305\037\354\2737s\013\275 \345N=\314V\177\274\344\263\305\274\016\302\222<\244\013\342<b\037>=\313\273\r=\3231.\275\346\364Z\275.6\347;6\036\307<S\013\354\274\241\\\376\272\030\n\224\274e\272M=\275\"?=r\303*\274V\307\321\274\'\3153=\3341\227\273&\360I\275A\301J\275\376\302\315<\364V\204;\360\210\327;\335AQ\275\034\030\207<\207\304\312<\257b\332\274\246U\240<\256=\270\272\325j\033=\362\355D\275\351X\200\274\034fB=N\240D\274%\251-=\201\3333\275N\376<\274\'\253\313<\005\203\277<\003\337!=\270t\t<\336n\024\275\360ZR\274Da&\275h[\226\274N^\313<\227\177:;L\200\234<cm9=\330\275\237<\021\226==\274\317P;\024\266W=\225\031p<\241f$=\206\3173\275\240s!=\021\215\310\274R\223=\275\364b\232;e\206\303\274+\311\242:\301\027\367<\343i#=\367\316\255\273\336\301,=\326\304#=\332\354\317\273\000E\276\273K\025\361<\023\334\022\274\030e\207\273y$<\275\300\370\016\275\004\332\265\274\307S\364\274W\004&\2750,\304\274\227\336\'\275\201pU<:\"F\271;s\033\274\264%Q\275\243\237\016<\256vE=\241\032\277\274\010B(\275\"\313\270\273[\211\337\274q\224\002\275!b|\274+\350\212<\032\357G\275\234\230\341\274\027\304t\274\032C<\275fG\214<\026\322P\275R0+<\251*\302;\340\246\272\274\2455\212\274cM\350\274.(#\273jMQ\275C\277-=\007\025\241\271^\244\313:ww\026\275,\332!<$\177\024\274\270\245\314\274\177\277\2049\207s+=\216\255%=\375\331\244<\344\202&\275\001\262\333<OK\032\275\010]\261<\210~\250<f` \275\242\230Q\274\3072\314\274$)\354;\235)a\274;\326\302<\371\333q<\032\365b<K\034s\274\"\304\344\274\242\264\200\274\274a\017\275l\363\252\272\344\336\006=~=\251\274_;\255\274)\270\267<\0369\021\275b\002\371<K\203\315\274c\310\032<\313\210\361\274\252,\254<\310\"V\274z\262\032=2\237A\274\225\3411=\2019\370\271\214\325\230<\340\351\226\274\005w\002\275.q\n=\365\227\025<\311\025\032\274\2246;\274\270\336~<C\353\322\274d\336\014=|\010G=\271ju;\357\374;<\362\257\330\274\253\204\270\2741\300>=\352\227U\275r\212\377\274\252\275\177<`\035 =X!W<8\320[\275V%%\275#\210x<\002\006\231\273\2342D\275\276\341o:~\205\000\275\231\254-\275\330\352\017\274|QM\274\272\000\312\274\n,Z\275{.\004<\250\232\342\273\316Q\200<;\341\007=\203\214?\275\224E\243<N\004\033\274I\n0\275e$\002\275\324H\321\274\214\346\010\274\346\336)\275\377h\002\275\263\313;\270t0\256:\361\245e\2740\262-\274E0\312;\315\377)=U\260\013=\037\\\000=Qu-=\334y$\274Y\304\277\2745T\027\275\322\303L\274\344\330K=c\003\253<\ra\240\274\331\0250\275k)\034\274\260\274\347<Z\207\317\274b\005\235;Ex4\275)\2030=\006\257>\274R \006\2753\243\320\271>\237\355\274\272\306\213\274V\320\364<\001X\315\274A\251\355\274\265\'V\274\351\221\'\275\007I\224;0\261\201\273\0138W\275\241\027\014=c\364\332<\33121\274t[\335\273\207\351u;>\036\250<\231\335\020\2752\340\035<W\314\026=%\0019\275\371\361\004=\t\273;=Ls/=\307R\202<\235^\020\275\272\260x\274\302\357\215<\301,N=7c\365\274\"\221\253\274\360\347D<\021H\214<\247\0320\275\366\374/\275i\352\364\274\222`\301<\255\0208=\274\242\001=\0228[=\211\211\256\274M\r\033=f\232l\274\252\333\364<\2637\001\275t\364\233\274\321\311\016=\n\023\272\274\370\215S=\311\177T\275\265\335\000\274F\312<\275\276\314\037=\2138)=\300\"w\274\027\333\010=\023\302N<\031\026\322<3\214q\274h\007\032\2759\264#\274Ec?\2745\365L=#IQ\275\341\203\257<\"\200\315;\342\264N\274L\336F\275^\200\312<\314\007\314\274\266\022%=\350\375\023\275\225\266\214<.\335\005\275\220n1\275\351\305\262\274\346PN\275\227\025?=\034\367-=^Z*=\\\210\3516\003>\211\274\177Bn;`\246E\275\362+\006=\201\013\353\274.@P=\243\233\270<\263\245\376\274\021\327\026\273#\224\306<\252\2560<\344\026\312<4\3666\275\202\305&\2758\022B\275<\'&\275\027\217a<\355\345C\275\237\213C\275GmP=\016\301@\274\266\377n;\010j\362<\\;\266\274\253\226\375\274J\305\226\274\2318\003<\014\214\326\274]\036\321<\377\332\372;CY\357\274QbY=\214\\\035=\304)\323\274#\252T\275\264\021\240\273\322\025\356;\006\273a<p\274L\275\313-\016\275\343G\336\274o~\277;]G\013<A\226-\274\362-Q=\357\214\266\274\242\262M=\0175,=E<^<o\333\031\275A2\r=.\212Y<\201@7\273N\\\024\275\026\302\n\275Q~\204\274\233n\022\275\206d\235<\004IA=\225\250,=\244\261\013\275\270\326\266\274\233\351>;\004\034B=g\204\313<p<O\275e\n\\<\177\374E\274\257\277t\274\361\266\002\275/-\220\274\363h\347\274\237#W\274D_Y=\211\020\206\274\236\250?\275\311\322?\275{\017C\274\031\243\210<\276p\373<\276g(\274f\3432\275\320?#=\212\030K=Ng\364<4\331\373\274\344\333b\274a\000%<\035XB\275\233\025<=&\017\301<\305\036\315\274R\345,\275\007\363$\275\212\313\356<\337\330\201<\317\260@\275r\312Z\275\324ZZ=\277\325p<\225*3\274\337\200\223<\252|\363<\244o\030\274\325\3264=W5\220<\230\373.\275\0012(=7\206\266\274\254\022\352\274\305{\001=\352\324X\274\013j(;^q\030\275\203d\325\273\007\"\204\274\203M\267\274W\324\214:\243\321\036<\374\260\260;\337O\024\275\267\251\024=\273\2046;m2\200\274v>\225\274/\217\255<5\302\246;\023/\346;\030\322\'\273~\033\017\275\035\3417=\037\362\223<JX\311<l\333R\275\334\215\323;\225j\206\274\266-\245\274\270\306\023\275\037\016&=\020\352\031;\013\024Q\275\240o\247<,\355%\275\0255D\275\263{\351\274\326%Y\275I\231Y=\222*-=*\026\014\274\242n[=\223LM\275\023I+\275N\265\257\272\300\016\032;\027\2332=\356\307C;/\261\212<)\333U\274O\262?\273\207\033\035\275\230R\357\274\004Q\364;4\223\010\275\031\327J\275X\353\"=%J\224\274\007\345\352<\353T\266<\305\275\302<\365\350)=1\231\003=7\200I\274\202\320L=\245mX<\231#\247<{\3759\274\014\342\2336\361\016l<\354q\034=(\334P<\315\210\032<}\340S=\220X\016=^4P=\320\321\346\274\010.M<\375\023m\274Ohe<\370\245S=\375>\271\273\364\246\263\274\316\371N\275M\024\315\274&\207\352\274S;\325\273\024\251\007\275aHh\274\214\034F<\307\341\347\274\312\305O=\253\305\210\274\274=I;VS\247<l\216?=\360C\202<\231\255$\274\223\231\023\275\020\'i: \020D\275@\227\'\275\313\217\256\274\322\363\204\273Na\244<-=\273\273\3153R\273<G?\275\240\2276\275,\220 =*,D\275G\212N\275\257?\325;\360{\370<VF\213<\244P\002\275\034\245\315\273<\351\301\274d\034\t<F\303\366<\265\336(<\252FB=\312:M<\370\320W=\357\3759=Y\210\203;a?\272<c\222\251;\332h\272\274\267\246\237\273\332\031\277<4\032\003=m\323J=\302\204\244\274p\253A=i\000K=\337\362\007=L\233T\273O\036:<3\333[\275\310V\032\275\306\275+\275>M3<-\2332\275\0320R=\275\330\027=\304\374\023\275\213\375\'=V~U\275\321J\\\274\013#%=\t\313\030\274\277\232F=\021\210\261\2749\340[=5q\237\274\034\027}<H}\017=\2373\246\274\227\237N=\217M\017\275\"D9<\332\264\\\274gH\230<\352\231\010=o\333\n=R#\027\275f\274\303<\347\210\237\273r\2565\275\317DO<X\333I\275`\225\035\275\2357\n\275\372\205\021=Tn\003<\276\347\214<\027\010G\275\365\262\375\272\227\302P\275)W\277\273P\365[=\353=\232\274\225\207\321<\224\313-=\"v\017\274\253\223\330\272*\350\010\275C\356R=\247\312Y;\006-\276:\030%\000\275\263{\007\275\303d8=\271\257\026\275\255N\301<N*\263\274m}\345;\250\261\036\275\373\2109\275r\034\020=\017K\032\275\255\271\267<\326\262\006\274v\030\311<1\230;=\217\031\035\275;\276\204<=\367\227<\264\242)=\340\277\355<\325\202+\274z\003\330<\234Q\253;\r\206\024=\004\nH\275E\372\201\274\323Q\330<\027\335\307<\237^\240\274\266L\233\274$\217P\274\252a\331\273\244\\E\275\321\211\205:nyo:\250\24649C\001\351<j)R=\334\320\354<dg\031\275n\346\205\274\350\345\327\274\377D\372;\240.\035\275\241\247\247<\213\255\253\271\303\222i\274}\277\001<a\016\232<?X,\274:\210\342<\rm\004;\243\362\260\274\333\276\236\274\347\341\303\274\211Q!\2756\271\200\274&T\033=r\301Q=x\2034\2751^(<\2761c<\275W\236<\216aA\275\257\002\350\274E\302\360\274\323\255\233\274N\320S=\342^*=\177\324\323<\272O*\275];\017\275\235F\026\274@\207\026=\336M8<wp2\275\'\231\t\275\010\372)\274\226\031Z=\266<\205\274\254\2551=,\366\323\274\307&z<\034\303@\275\330\213:\275\271(\013=\036\001\001\275\237\342G=\355\303\373<\336\2533\275b\253\022=\305\203 =;x#\275(Rf<\377XP\275\215\217\365\274>@C\275\211\311\322<J\345L=\337:\251\274_\233==+\220\315\273\273I\355\274U\026\033=\3221X<k\017g\274\260\2074\2749gN=\250\377N\275\322lV\275\367\212\037\274\027\3502=\r\0136=\016\263@\273\214\224\324<\306\222F=w\334B=\016\220\232\272\223\265!=7<\314<\220\256%=<qA=\301\3113<\357P<\275\013q\210<h\275\316\274\017(,<\232\323$\275\342\241\'\275@w,\274\242\2138\275\345\267\234\274mw\035\275\301\2133<M\347\035<Yx\307<\353\222N=\354J\212\272\366\366\264\274T#\231<\0029[\275\216Xq;\036\0105=\220\203\373\274Z\360\345<\202\257D=\032\2264=|\304\324<&\026\031\275\374$\345<\364\251S\274\337d\271<\355\221\251< \241-<\363\207\225<\034\264\t={3S=\337\207\010=\317\225\016\275\201\323\203\274\303,4;`o3=\177\032O=\314O\";-\244T\275\276_\020<:.\372\274taJ=d\000\003=\263\354\206<\020m\357<\275\266\260\272\226\353O=\017S\335<\321\266\272\274\307^Z\275\251\013\226\274\341\2056=<\273\300\274/\302J\275\233K\023=k\224\217<\024\327\265<\320V\372<\377k\030=U\177\020<\270\336\246<\312\365\020=d\376i\274\215\222;\2755j\364<\342vI\275\276\262\266\274\221x<<.\220S\275\343b\257\273\222\335\363<\377*1;\202\373\307<1\207\311\274%c\360\274\315\350M=\205\244@\274\342*\301\274A\223\001\275\037\264\370\273\200\241\002\272\361\275S\275\234\300K\275\323\351\257\274\375S\266\273L\242P\274\221\002\\\274\241\242;=\r\3628=):\232\273\366\205\206<O\020j<\223rW\275;\303\027\275\214}\316\274\321fb<\013\200\354\274\013\254\016=\025\237\204\273_e1=:\317\004\274\272l\344\274-\355Q\274g\256Q\273S8 =&\333\316\274\364\264\354:\221\254\255<\303J\027\275`H?\275\334<\250\274\323W>\275\230\237\353\274\353W\010=\236xI\274\225\203\"\275r\221\247<\032\326\360\274msM=\231\261\243<h\312>=el\027=K\237\n\2751S\022\275\311\252\356<G\003\272<\215)Z=+\265\254;c\014C=%\261\206<\360NW\275E\252Q=\245\273H\275\346\014\\\2721c\207<\217\374\023<\315\227\t=\030\\Z\275y\236\236\274?\201\233\274X\244\274\274\226\025\352\274\224\002\037\275\351\017\010\275rX#=4\017\2039\310\314?\275\224k\003\275\253\2435=\214\022Q=\347\315\216\274\0272\026\275>o\241<\326 \273<[(\342\274A\1777=\265\027`<K\335\276\273:\010\236\274\366\251\035\275\360C\037\275\020m\030\275[\350\025<\253\315\270\274;\007X<\256\255\031=\226PO=\250\226\275\274\275\230Y\275r\037\367<98\260\274\017\227\324\274\346\356\311<\346\310\025\275@\266\201<\332\305L<|_\317\274\004\205\231<\243\200\300\2748\220N<\205[\006\275GH\023<\030\000==5\270\350<\242m\365<\2704\000=\023\300\341;\340\211\030\274\247\017<\275]\330\026\275\'%\n=fw\277<w|,\274\035!\007\274J\272\021\274]\247L\275N\035X\274\024I\205<+3G=\\\207\373;&\235%=t\235%=\241\337\232\274\360\"\371<5\205\223<\2366N<v\277\360\274\247\301\243;\035\332\252\273\350/ \274\273\213;\275\356\356\347<r\'&\274\301\364\002<\345h\253<\247\207\273<\230\270\001<\256\234S\275|;Z\275\240\263x;W\351.=\202G9=\010d\224\271\363\254\300\274R\005\252\274\275#\375\273\205K\005;\320V\010=a\rg\274\242\250\017\275\330\226\004=\036\246\305\2745\007<=+pZ\275\255\312D<M\354\205\272\231\310\366\273\341C\334\274\303Z\026<\223\204\"\275b\333*=\342\332\r=[\000\352\273\304\267\341:2\363\020=F\257Y\275w\034\210<\206\205==\242V\346\272\276wp<\324\346\350<w\263\206\274\306\330\003=x\3403\275y\300Z\274\036\320Y\275F;\003=ksc<\276\013\t\275C\223\264\274\t\320u\274\214R>\275\007\370\371<\206\311\016\275M\317&\275\022yS=E\024\014=tyR\275(\305\221\274m\250\367\273!\210\177<\335#\254\274\341+\323<\244\361\237\273 |!=DB\346<\271b\267<\303\204\031\275^W\226\274\026\034\212\273\225a\330\273-\245\254\274\241\362[;Z\264\030\275\363\244T\275H*(\273\034\036U=\303\277\022<\274U<\273\3736<=\005\303.=\275\246\034\275\265&\311\273\333\210\025\275\256Z/\272V\273\365\274\222\014K\275JQY\275\335r)\275c\350|<\270R\232\274\212\032H=\304-c\274\017\320\036=\2279\210\274&\366\373<\334\317\354<&\316\342;\361*7\275\337\002\322\274\227\273%=\332\262\202\274\227\202S<K\204Z\275 V\324<\371\362\263\274z\372\371<\361\013\356\271\273\254\241<2\027V\275f\231\226\274\326w\305\2746p\357\273K\270\022\275\231\375\323\274\005m\305\274n\364?\275\327z\260<\306r\033=Cn\305;\203\376\016=a\315\321<\360\357\272< g\262<\211pX=\270LF<\267\244j<\320`R\275\232qY=\241{\247<\206\002\354\267?\010\253<J\007A\275\303b\035\275\345\242\247\273\215\007\322\274;\r\034\275\207\276Y\274\006\304\302\274!\366\034=\232\333\032\274\312\377\227<\261\250\213<G\226N\275\217SR\274\255\022U=\257TC=%\373\010\273a\203\265\274C\003\013\275\032\374%\275\215>E\275S.i\274\377\"O\274\321S\264\274P\246\360<.\335\005\274\373\003\223\274\350\216\237\274\313\261\315<\006z\025\275l\331\002\2750\373\264\274z\006\017\275\353\313D\275\321f3\271\222\303\331\274\374\320M\275\027M\371;}E3\275\367\256\037\275\353i\004;^\3671\275\350\324\343<4@\250\274\014\3501=\200\363f;\2524\336\274\"\223\014\273\233\202\262;\002\377\205<\311\222\216<P\026\034\275\253\033\332\274\357uE\274\360\327J\275\314\301\006=H\007D\275x\263\354\272\211\303b;\351\362\343<\034M\220\273P\207\335\274GO\323<(B^\273\344\026\027\275\224\211G\274\210!\377\274m\3453=\nz\003\275\002\352\007=\004\230\204:\202\252\332\274\370\324\202<\267\004\346<>L\264<\370\234\201\2745\361\260\274\204\3529\273\226\020\026=wZ\375<\3044\306;L\037|;n\320V=+\3347\274U^\324<\276k\207\274\025\006\225\273\344\345\272<\305._\273\360i\361\274;S\031=H\324\345<E\020\306\274`u\215\274\272\225\t=pIH\275w=\310<6\264\n=\2045\366\274\373&\201\273\256V\001\274l\030\004=\'].=\017\023H<\303\317\006=\225\327\333\273bz\004\275\031\227J;\300\352\273\274\315? \275\037\300\351\274\002\242\255<\020T\361\274\233\372r\274\247v\021=&\316\027\275\017\351\017=\202\027g\274g\274\247<\'P\200\274\024f.=\200\022;=\204\336:<\244\326&\275\243\240\334:\277\243>=]\tR\274\253\373\017\275p\246\231<\203\016\020\273\356|\027<\026:U\275\302\333\343\274\007\016Q\274\273\327\272\273_\005#=QHP;\211\233N=\335\243\371\274\344]\364\273\231E\024=\202;,=\237H\364\274:\323K\275\301\037X=\350\227S\275\275\200\273<\272l\030\275\205\030\236<\024\2455=\225g\310<\211\303\241<M\305\034\274YBz<8\2230=\332\352\222\274%W\263;\264\306\374\274>o\031<\267a\372:\325\364\272;Q\3076=\227\000\030=]\376@\273\013\273A=\217\262A\274\247\333!=6\224\362<4.\206\274\032\213S:]xY\274\377\245?=O\340R\274\327~\026\275\354\231\025\275iJ\334<*\334\267\274V\205<=\256\262\021\274\331#\336<\304\272\265<<\022\341\273i:\'\275\205\233\377\274m`\002=N\000\002\274\376\365P\274O\256\203<g~*=\233\222[=\262\367\237<n\253\007=\346\334%=\240\256r\274\222\250c\274d\323\351\274\327\317~<\304$E={\014\342\274Q\204F=h\360!=Nf\312<\030\024\245\2742,\035=>a\344\274\224\335K\275?\016\267\274\226\014\351\273\235j\330;\022V\016<\307$\010=X\275\004=\264/\373\272\316lG=\321%!=sL\004\275\217!\244\274\3606\267;\357~ =Y\277\337\274v|E=HL\225<\036\214\025\275\257\342\004=\312{\212<q\t\003=\226\234\257\274o\326v\274<n!\275\254\226 <A\231\000=\t\3359=5t\376<\257)\327\274\211\364\311\274\267#\034=\224\305S\275\220!\343<\313\t\212<\036\025P\274V\377\316<|\212\007<\242L9\274\254\1772\2759e\031\275SF\265\274\345\202:\275\346\304\022\275K\t\212<[\360\036\275\250\365A=\007\223\377\274\026 \352\274EfZ=\"c\347\274\315\014\014=\3101\033=A{H=\314\254\001\275\2146\007\274w\306\311<1\253\005=\321\'\271\274a-\024<\017\265\017\275x\213\r=\276\341\320\2737\234;=D\016/=*L\023\275%O\025=\0065@<)\207\021\275pi\035\274\213\371\n=\376\206\307\2744\3567\275^*\237<\237\263O=3\372\017=\224\350\336\274\252\374\274\274e\2278\275{\201c\273p\227+\274\\vA\274\321\210*=?\003\r=3\\\000=\372_\301\274\264\346\r\275\336\317\214\274o<S=\222\254\037\275\244\rD;\367W\200\274opH=4\236\207;r\374\312<\342\365\364<o\263\267<\240\'\'\275\354\217\020<G\2650\275\234~\272\274\214\031\355:\316\225\232<\236HQ=\010\205\236<+\363;=n\010E=[\360\017\275\271p\253\274\001\004/=\275\203\222<Z\005\024<ELt:\305\351\355<`=\313<\355\273\013\275\214\002@\274\001yA=\377CP\275\032b\302\273\330\371\021\275\227&\311<\026\177\t<\311j\253<[\213\374\272Gr\205\274\371T\223<\325yA<NM\035=\3628\305;\255\2661=,G)<\271e\230<\225z\264:~\260\260\274\342jb\274\217|{\2741\0262\274\303\222g\274V\261\201\274c\371V=\334\337\r<\332sG\27445\322\27404Z\275%\221\353\274\003#\273\274\021\275(\274\026\344\251<\242\301\227\273\323:b<\023i\213\274\301\374\235\2742Lr\273\024\360\354\274\320s\205<\010\026\221<\2724\222\274\270\226\n\274\007\335\320;\333\372\364<n\320R=e\343\302\274\330\307%=+\241(=\201\371\312;\35014=\325M$\275iZ\307<YaU\274\033\333\361\274<\244\016\275^M\224\273\016g\266<\300\221\265<<C\342\274\262\215\002=)\300!=\337\201\325;.}M\275F\017i;\016k\256<\0032!=\226\304(\275\020\233\000\275\205\023\033\274-\225Q=\271\3479=Pf\024<C%I=\004\022\024\275L\252q<\0334\271<9\2040\274\373\016\013\275qK\240\274y\207$=d\375\017\275\204\025\300\274N\360\205<\036#O=j~\213<\236^?\2753gU=\005\370=\275\304\031\250\274\272\2732\275\247\2234=]T\252<\312\237\346;\000[\024=AuB\275{\006\212<Z\336:=6\313t<g\311{<-\345\037=]\254\002<\374\311&\275;V\333<\353\346\243\273\270Z\024=\241X\037\275N\355\235<\2523L\2753\323\233\274\256\032\031<\253\253\214\274M \006\274\272\356M\275\361z\372<\306a\032\275%W\016=\241\274\321\274\352h\353\274i\257\212<\024\206*<&#9=\277\3152=\207\374\031=\377\234k<M;\002\275\251\203@<\366\251\224:\005\342\251<\343\315\317<\334\247\033=\255\246T=\032K\202;\315\032z\274a\204\007\274a\340\032\275\025\237I\275\377\307\321\274wr9=\307\277\307;|_&=\335MB=\200\255\356\274\362*\360;z\305\351\273\210\201/\275M\372\235<\313sL\274\206\254!\275M\300S\274\375\010\354<\r\246\315\272{\261$\275Ux\363\273t\010\210\274\234v\244\274\346|\3439\302\335\r\275`\265K\275\247\354\330\274phY\274\024O+\275;U\202<\377\363\035\275\357\336N=\031\211\031=k\033\'<\325\010\213<\335?E=B\342\036=r\361\232\274\223\377|\272\036~\013\275`\203\355\274\3747\0038B\023\356;\307&\006=\375S3<M\312\246\273\000\273\353;\371\177\354\274\310t\255<?\302\315\273\215.\030\2755Z\007\274\3159\013=\234\211\033\274w\314,<\202\001\342\274\313\210\222<mr\220<\301v+\274\016:U\275\375\035!<\257\305L<\320\374\353\274\362\360\020=\204\267O\275\342\202,\275Ce\353<\260O\316\274v\224\217:#\207\003\275\276\252\231<\272>\231\274\210yv\274c\241d\274\th\271\274}\033p<\027RL\275H~T<\006\325\247\274B*<<PVH\275\247%\213<0\357\216<\214J\'\275/\020\036\275z\305X:e\367\017\274\260\370\312:;t\241<\251\2349=(\202\323<F\326/<\346+\215<\302\004i\274\217\362\221<\230\253@\275\217\372u<\200\n\253<j\036%\274\006\340\332\274EKx\274e\230$\275RZ\323<\346\\\360<\327\276\324\273\200\336\020\275=_Y\275,\271\030\275\372\"\024\273_JB=\245\014L\275\316\247\221<y`\022\273\272\026\216<\371\252*<t\341\005=J2E\275\312\241?\275\320V\377<u\374\027<el\267<4\251Z=z\206B=})+=\036\324\005<\215\024(=\0312S\275+\310\321\274\204K\326\270\013\007\251:\265\276V\275\216\342<;h\301<\274.\'\216\274441=\350\362\316\273\336\300B=q\235\'=R\010(=W\\(\273\330\0376\2757\367!\275SNS=\340\030 \275\031\276Y\275\200>J\275\271\341$<\254\"\311\274k\033,:\302\243\217\274$\257\030\275\"\360\031=\332\247\033\275\220\232\350\273\374X\365\274\273LZ\275\306\234\005\275IL\035=\265\025\004=\354c\3209\035\244\301\2744n\016\275\377|\331\274\010#\010\275\334\351z\274\317\306\025=\332\005\331;D\020\\=G\211\006=\274\236J\275\350E\271;\033%G=\262G\367<\210R\330<\213\261\335\274\365\347e\274\3110N=\216\241N<\006\300\237;%\010\000=\366\037\325\273\351\237\356\273/\005)\275\256\"\353\274\316q\321;\014\345\330<k&\360<\277\023M=.B\036\2753d4\275IR\214\274\336\007\366:8U\316<\246-\032=\303s\262\274\344\373H=\351\260\354\274\302H\222\274$l\n\275\322\343\377\274\362\302\266<~+\231\274\255\\\333<\331X&= h\033\275\245\227<=\227\330v<\232VX<NH\371<k\300\310\273\223k\002\275\265\364\2239\354\361\257\273\2548\243\274\370\026\306\274\210$9\275\327\220K\275\t/\236\274|\332\304<\306\231\016\274\371\316T=C\227\007\275\017\373o<\270IA\275x\226\306\273\001EU<\022\rk\274(\355\340<P\354X\274\215\303\252\274\341X\264<\232n\351\274q\223L\2755\265\341\274\355\227[\272\214\265!=\356\354\'\274@\024M=\337\r\010\275\214\032\371;\027\0369\275l\226\004\275\036\262e\271\373\035L=\031\361+\275\337\370\364:\354y\272<\026\243F=s\252N\275\004\316B=Y\304\272\274\366y\314;\222g\007<L\025\256<\375\005-=|o\002\275K\300H:$27\275\311\266V\274\353f\274<\357\360\307<O\366;\275^\025V\275\032\3240\275\032N\320;\332\036A=ujy\274)\311N\275f\334\027=#)\346\273\363\021\204\274K\266\032=.\200(=\277\213U\275\021F\256\274\327^\366;5\003\250<f\264\351<-\316R=n\303N\275n!\253\273\022\316\371\274\013\\\021\275\035w\271\274\200\223<\275\265\207J\275}\272$=\371ZB\275\364\274+=\211\253t<\321\207X=\002\0347=x\243\351\274\227\207[=G\037I\274r\225\017\275\373\303\217\274r\016C\274\\\016\253\271\313\240\224\274\343z\014\275dd!=\tp\264<V\n\037\275\203\232\267\274_[\242\274Z\"\253<\315=\303<\342\005.\275@\212\000=d\331\n<\363!X=\266\350:\275ds\262<Ra\245\272\017k\370<\226\224==\340\373\021=\0169\265<\035\023\000=\027\017\256;\236\310\026=\255\240\352<\315{\342\274\036I*=\346\245Z=f\340Q\275\006\256\r\275\\\267*<q\3520\275{\356\204<\n\213F=\004\270A=\037\261\246\273<b\257\274\252J\311\273\002|\212<\245\343\317<\303\361J=\214\2236=\335d\361<\232\211\007<\016\037\210;\216\356\236\273\237 \350\273\370\257C\275\224\216\336\274y\231\353;\236I\316\2746\0318=\262\023X=\336s\231<\245B^\274\27724\275l\242\320\274\177\201%=\204<6=\210#\346\274A\216=\275;\363F=\2130#<\024)\313\274b\006\262\274T\t\003\275-\010%\274Yu&\275,\213\023\275D\343\r=.P\366\274\3065\353\2744\376\225\274E/\343;\344n,:,M\"\274\374\311\356\273\233\336\234\273k\336\320\273\346\322\t<k\354%\275E2l\274\355p\274<V\034f\274:\375\005;\2309>\275-\320\233\273\250]\t<P$\026\275`\222,=P}3\275\233\361\332;\005E-=\353\005\266;\364\321\363<\316\201\031<S\316\244\274p|Y=AJ\214<V:<\274\352zY<\027\207\004=AQ\354\274\326\3349\273\376,\337<\0024\010=\210\205\257\272d X=\373\274\352\274I\365D=(\332\t=\252\3067\275\"\302D\275,G)\273\010\301\204<\374\302X=r/A=\244\251\276\274RC!<2<\353<\367\232P=\372F \273\274\373\270\2746\370\000\275\2646K\274o\275\033=/\200\335<\210\265\234\274\300\342+=n\346\031\275\230r\372<\336S\'=\374\004\210\274\007p\033=\351\210K=kj9\275\3103u\273\370\361=\274J9#\275 %\034\274\343^\213</\304E=b\213.=\352\006\363\274\213\ni;\306\030?\273\377-F\275^\367\023\274\253x\250<m,\336\273\245d\344\273\022\023:\275\204\005E\274\366--=\207\334\321\273\300@\002\275X\242 =/$E=AA\233\274n\007\030=I\271\350\274\366v\353\274\000\317\215\273\n\322S\274\007\361[\274\201|\027\275\036\266Y\275\320\031\212:J\255\342\274\275a9=\264\373\t\275\247\342V\275y\002\377;\307<?<.X7=O\373\034=m\'\357<\250`\031=\021\355><\rt\243<\'\\\377<\274\006\350<\205;\350\2736_\347<6\267\275\2742\031B=\253\352\314\274\340!\336\2732@\023\275_\370\240<l\233\021=\251\005\343<\353\036;=\327+\273;\341\270\266\274|^\253<\271\346T=t-#=\217qG\275\307\311@\275\3036\247\273\030\311S=@\022\016=\035\214!\2755\2265=\222\355\262\273\363\0160\275t.\037\275\345\276\311<\344\320Z<\253!F=\325U\006=\216\313\036\275\230\367Q=\350\2631<\"W%\274:\230=\275\304f\021\274\341|`\274\262\352t\274\322?A\275\264\003\225\271%\260\375\274\365\214B\274%\3116=>,\342\274Z\347\001\275\036)\227\274qi\303<@\305&\272\007\240\352\274\2118\002\275)\355~\2745\247K\2758\006\221<\320\017\314\274\225\003\024\275+E\202\274\242\277 <\270\t\255<4\240\006=\031\255\2129\313G\031=\001\231\220\273A\313\273<^&\017=\010\310\035=\200>\\\274+\230\224\273:\267\034<Gx\321\273\300\364D\275:\352\337<\323k\376<\260\354\347\274\231\255\001\275\341\020\246\273\315\320#\275*b\251<\r\275\324\274\242\224B=\364\335H\275\342\355\022\275_\232\025\274\363_\244<\017\337V\273\257gq<`d\340\274\251\313\n\273O3V=%{Q=.\324R\274Xs\245\274o\344r\273\\\246\014=\222\341\231\274D\302,=\rF\222<\222\342\371;\t\311\036\275N|\'\274X!\263<\255\260$\273_\343\017\275\246>\013\275\002\n-\275\346p\201\274D\365A\275jfm:\247\202M=\344P\331;b\026Y=4\305\001=#\276\3629\225\246<=z\312\374\274\217\017\210\274\375\250z\274\007\356\252<\024\177\202\274P\276%=\235\333\255;\262\362\034\273\277\230\033<I\311;=\037\320T\275\203p<=\351\3148< h1<Xz\274\273\360\345\010=\315t\346\274\265~\316\274\211\350M=\355\336\363<b\270\325<\331]\271<-}\303\274\035(I\2752U1\2756\347[\275\300\243F<\216\027+\274\331\333\301\274)bb<\263r\324\274Bc!<\246\203G<\307\242H=\016\266O\275eaj<\324 \265<\022\202O\275R|\032=O\243.<T\203*=\372T\306<j\266\264<:\305\214:\267\030\177<\030\374m<!\351\037\275\340\024\237<\305\343\n=\346vf<{\307Q<\"\006\037=\300g\017\275J\020m<\245wT;\263(F\274R|\013\275\312\020\024\275?\211B\275\365\264\276<\251G=\275\004DS\275W>\321<\005\232\025\275\244c#=\244g2\2750\251\372<f\260\203<\021C\023\274-\240\006=\221\336L=\275;\016=\206\273\220\273\033:\r\274\376\271s\274\364IS\275\316%R=a\347\032\275D\371\355\274\031/\337;\357\3028\275\310\364\352\274\373\250\306\274J\217\363\273>\244\032\274\232\255\232\273+C\252<\311\247\326;\207D#\275\301u\231<\3405\004=\022A\013=_\0306=\275\362)\275^\026\356\274\306\235Z=\221\351S=\345\030\026=*\307\361\274K\362\025=i\310C\275c;\254\274\332\277C=d7\010\275\007u\344<\265M\020=\267\024\261<t~\"=\017\006c\274S\017\262\274\364^\221\274\203\370p\2745?\"\275\360\373\037\272\321\331O=c\225.=\376\241\237\274\327\212b;\331\010\315\273\357\014\036=\224\254.\275%\344\321;\240\211\323\274n\033\302\273\352\377\347<\372l\371\273J\346$<\333\365W=\037b\035=-\351h: /\'\273\232\220!\275jR\313<!R\343\274c\277(\273\223EJ\2743\327\301\274U\326\340\274\201d\026=\216\317\027\275\257\224:\275\r\260\372\274\000\007\230\270\213\372V<\336\205\003\275\345z\271<\343y\023\275\037l`;\027\3109=\360y\026\2746\273\005\275\232~b;\344\305\322\2749\220\326<V$6=\014\330!\275\334I\230<\004l\335\274.\227!=v\210\035\274H\033\027=\236\000C=\214\3745\275\211y9\275j\236#\274\006\3345=\237\364u\273\233\357\220<8\312\347<\363\371\n=\255\332\013\275\331|\310\273\267\260\232\273\240\\}\274\206M\251\274k\326N\275?\317\001<;\230.=b8C<\373\375N<\253\370*\275\'\037\036\275\004\2227=n\342Z\275(\350D\275\315f\r\273\036R\373\274\220\016.=B\362\343\274M\310\341\272\007s\'=\340\"\002=\334S\023=8\306\030=\372\271\\\274\267\265#<F=\230<\335\254$\275<\374Y=7\344G=5~\027<mX\241\274\200\032\370;\264\311\336<S\377\002\2736\235\310\273\353q\215\273\310\262J\275\374\267F\275\035l\001=\"\215S<\r\340E=\363.\010\275\252\005\"=\316#n\274\2471\t\275\2461\301\274\177z%=\316\242:<\371CR<|\033==\312;\264<\024)\200<\271\370\206\274\241\352!<\264K\023=\233P2<\216\330\253\274\360b\222<9\315\t=\264|*=\217\024\203<\273(\212\273\362\032\343;>S-\274Z\033\354;mP\357\274\374?\236<q\324\331\2743:\033\275N\3447=\001G\373<\364e \274\005\277\304\274\t#A\275\324[\035\275~\242&=g^\275;`J\201;\325\\C\275\316g\237<\235\323\001\275\232\353\001<f\324\241\272}\036D\275\214\371\031<eP\030\275H\222/\275*\206W\275M\230?=\233%\034=\032\273\347<\227\306\276<hH1\274\006\326H\275\312\0164\275\377o9=\337 P\274\355\354N=\035\300:\275\254\353\201<\233\366+=\325]L<w\271U\275\037OH=\037\004,=\004\2340=\340\231\020=H\n\010\274\374\n\350<\\\010\361<Vop\274#\356\343;\321g.\275F\016\342\273`\204\243\274\201\212\331\274M\222R\275\0025G\275=o|<\330w\021=\220\201\264<J\346\372<\035\216\000\274\250[\326<\226\302Y\275\037\300\010=EpV=\225`Q\275\325H\220<X\365\001<\311\213\346;2\3201\275\272\017M=\377\225\333\274\206\361\227<\272\277\376\274\000\317\233;Q\365\366\274\027\031\022=?B\345:\004Yv\273\261\221\366<T\223\030=\'O7=(\340\017<\306\3514\275_\252\260<\364\313[=X\271W=<@\356\274\274\024\330; [\312\273Mx$\273\222\220\'==v\331\273(\365I=2\234\246;[\022\214\274d\243\202\274\257\3563=lC\n\275\023\3229:\347\025\023=\037\251G=\246\261\364\274\346T\365<\2704\002\275\236\257D\275Y\321\260<\231\0372\275\231\317\005\275!s2=\005\030d\274\007!\347<\320\242\036\2740\272\310<\204\312\305\274T\334\224\273\275\223N=\220\221\254<\250\n\256\273I\321!\275\272\212b\273\211|\336<\300\230\235\274/(\332\274\006\207\232;\031\375T=\311_P:\345\241_<\301\234L\275jq\325\274\340\231\347<D/\353<\2622v\274\366|\271<\267\320\005=\202z\000<Z\243E=H\004u<\250\005\276<\013\206\207\274V\342\021=j\334\025\275XD\010;)\360\232<\027t\200\274\346\037\253\273\315$\230\274\234\r4=d=\316<\005\256\216\274U$\026\275\345=\302<\033l\035\275=\377\330\271\020$\252\274\267q\241\274O\001\t\275\360\212\004\275\346\342\306;d\316?=ud \275\324r\335<z\275\342\274 \211\035=ma\227<\270\0228\275\226\000L\274\302\273\222<L\224\373\274\334,\212\274\021?\002\275^a-=\365\032O=\205\030\014\275\247\205\334:\276\352b\273\326\254\346\274\241\3627=\214\253\216;\247\352\225\274|\014\026\275wb.=3\3216<^\364\006;V\010\027=g`@=\023\020\251<\245{M</_\345\274\246\227\021\275\263<\030\275\375Z7=\210\357\033\272\203\036%\275\310\205\034\275\321Y\006=\311Fb\274\362,9\274#\275\014\274d\370\367\274+s\374\274\207~\367\274\241A\224<4T4=pF\'\275\'o%\275Y<\037=7\266Z\275\267c\014=R\'\233\274j=7=v\336\217\274u\013\035\273\'^\343\273\004t\202\274\232\'\013\274\242\347\031=\257\035\307\2747\251?\273\210\265\217\274!\337F\274\273c\013=\205\255\026\275X\0018\275B\367\277\274\363$\037=\322\307W\274\246g5=AEP=#\217\010\275\023:1=\225\002\010=jpZ=E\004\340<\001?}\274\2522B=%\231\310\273\257\305F<\"l\255<\353m\245<V1%\275\243(\247;\362r\226<QpW<\265\262\022=\003DH<\212&O=\372a\220<fh\217;\276\366\343;\321\322-=/H\323<h\266\024<\371\372?\274\2267\021\275\030\255T\274\324u\026\274\225\230\350;\361\376Q<\351\\\236;\014\306\"=\312\207\242<\355\301\371<F^\362<\032\271z\274\360m\275<<H\367\274+\302\037=\276\345\027\274\004\013\240<\353g\357<\201\301\001<D\037\377;\260\245\270\273@Q\005<g\360\272\274\000\215N\274c\2457=q\234@\275]2\020=5\253S\275\223\340Y=\306.\264<\261k\202;fIW=C\353\307<:p\034\275:\036\306<\211)\253\274;x\001=\030.\316\274\r8W\275\036\225\001\2746AY=\367\016\355<\264\252E=@\243\266\274D\177\276\274 \250\317\274\2766\031\275m\3405=s\243\010\275\270\361<=R\314\026<\277\372\3749\'\274F=\227]\301;f\353$\275\230\246\326<bd\010=\340v\030=\322\3571=\276\355K=\216\317[=\306\026\023=fs9<\337\270\343<U;N\274\'\206\004\275\273!\024\275\020\331\236<I/A\275l\033\333\274\321\004\304\273\322\300\234\274\212(\231\274`V.\2753\206\036<\342\240\233\274\362\214I\274z\022(=O\214\267\272\034\004\334\273a\214\033=\202\222%=\306\215\276\274eE\003\275\240\2343\274?+.=\036\225\333\273Ps\031=\013[\006=37/<B\333\255<\223\003J\274_\356)\274\026\321P\274\210\322!\275\201h\224\273\"\350U\275\245\2313\274\007\315\231;\341\356.=\375KR\275\325@6\275\202\264\223\274\323\227\037=\265\007S=\2650\340<~\006\367\274\351\210\316<\211\023\264\274\257\261;=\026^g\274\013?C=I\314T\275p*\347<UN\354<\246g\317<\343\227W\275\224\267\016\275U\264\027=\021#\360<\3138^\274\271\307?=\033\353\312\274\376\210&\275\317\314\221\273E\242Z=e\202G=\037L)\275\033\234\003=\244\250\272;o\364\321;\224Q\273\270\037\277\353;\030\236B\275\371\240\000\275E\232E=\317;=\274\331\304/\274g\271P=Tg\035=\215N\272<}b\262<\225\0254\275\007\266R\275\334\301<=G\243\'\275\234]?=\261\311\r\275\2038\033\274\310\254\014\275Z^\254\274p\264\010=i\240Y=UsZ<\361\253D\272\231B\343<\371\240\362\272\036/\3128D!\001=w+Z\275\r\236[=\244\316Y=\262\345\016\2756v\306<\321\016\276<\352`!\274\016R\025=y\257\025=\334Z\253<\013\000Q\275R\270\022=\206\370\344\274\375\207:\274\371\345W\273t\242Q\275\000D\004\274\216\345?\275])\274\273\223g-\275,\3424\275\257pQ<Y\301\216<!\037,=s\'\367\274\260\316\337\2749\220U\275\0224h<\002\247\'\275\212\226\235\274J!\314\2742\315\364<\221\211k<\320\036\006\275\275T.\275\030\312\260<\357\315Y=\023I\357\274q\274\252\272\t\363J<\263\031T\272r\226\323<L\274 \2751}-<\273\200\216\274\245><\271#x\353<\262>Z=\350C5=/\260\340\273OGS\274\322\356,\275\021_\250\274\'\355\236\274\303\271T\275\034:\032\275\234x,=\345\370\214<j\026\001\275g\313%\275\003OZ\275\241-`;\267=\021=\371\351\010\275\251\363%=tk\020\274T\331\205< \007\"=\271\034\345< \367\371<\217|9\274\224N\007\274\274\306\374<\355\220Y\273Z\263\255\274\270\260\021\2751\\\226<$\310\356\274P\225I\275\330\224\240;\3704;=\035\236\016<\220v*<\210|\017=\206$\330\274\217FC=}\372P=ie+=\265\0253=\335\346\311<*\266@;\326\031O\275\266^Z=N\343U\275\335\232T=\353\272\324<\240\330\202;\237g,\274\236\0257\275Z@\316\274\263\335\310\274\246\'\242\272\303\001I\275\3708!\275\355\345\t=\035\033\261\274\364\206\376\274\303P)\275*oD=t\362t\273\324\020\013\275\270qF\274\244\301 \274\026\265_<Ww\262\274\354\026\026=r7j<\037\326\257<\223\255\272<\326\211;;n\346\016\274\367d\027\275I\263=\275\335\260!\274\000\364\345;\313^\375\274\017\354#=\326Z\001\275\343\313C=X\002\000\275Ad\035\274\276\310\361\274\226\244\263<f\r#<\307j\327<J\030\n<\323\376\223\272 \210\272<\327\002\202\274\206\203>=\311\355\005=\240\351\320\272\300\357P=04[\274+W\024\275]L\260\274\023\305\026\2730\332P\275#\246\366\274\226::=\221\235\260<\245\370r\273\206Q\345<}\014\\=K\257*\275+ 8\273\313D\212;\003\266\207;\221$\024=>G\314<\017\254\366<\006Ft<Y\tN\274\2521R=\330\314\366\274\033\251\214\274\343\323+\275\347\335\210<\256\371\016\275U,\227\274\241\005\006\275\353\033R=S\354\355\274P}\033=\201\220\312:\267\026<<m\303\263<\220\367M\274\213\266<\275\276\273\013=\222H\354<\352\321\270\274:r3<i\334C=<\343\002\274(2\004\275\25752=R\214\017<\251\236\003\274O\335\373\273s\316\032<p\221<:\2331\245<\366\346\267\273Y\354<=\001\2777\274\304\005$\274a\375\024\275\177\\\016=\302VT\274|\213R8\035=\032\275\244]\322\274\014$\213;m<@=\313<\306\274\225\356\365\274h\334\327<\346\362?=\001\352\236:}\331+=\241\024\275\274\024\021\246<\260\200\344\274P0\351\274/\344\322\273\214\343X\275N\033C\275\340\247\027\275\266\370\005\275\230\301\224<\211\250\327;\361\t2=$w\323<\024H\024=\372\355\037\275\225\224%\274\036&F\275\246a\204<\256h[=.\304\357\274\034\375\275\274G\243\364<\226qA=\013\032D=\224\370\033=\321\227c<PY\304\274\317\206\363\274\330 \252\274\242\314=\275\274\237\354<\016;m<\212\313\037\275k\331\331\272\247\0012=\rd\034=d\025\\<=U\357<\031V\021;Rv\334<1\364R\275\022\342\257<I\232\320\274=#\201;#xL=\206a\340<\310_\016=\377\264\t<f\356\353\274\362\316\017\275\034\220\273\274p\204*\274\314\006@\275\267K(=\267\025\336\274%Ar<\366\343B=p\334\216\274\204\362\"=\373\377\306;\363\212$=\214\r\350<\032\000X;\216\010\036=\323\215G\275\243!\331;*9\214\274\304\221-=\3219:=\237v\266<\337]^<\265\024\265<\301FE<\024\311Y\271\313\226\334\274\301\343R=k\261x\274G\362X=~\304;=\013/\227\274\343\332?=f\336S\275\373\335e\274y\021T\275\262\336\336<d\2514=\270\267M\274;\312\006\275\327\347Q<\022\260\024\275M\225\367\274\235\r\232\273\300\311\305\274\204\265\024=\236\032\347\274\211|\342<\243\216\264\274\031\355\367<[Bo\274\214O\311<\240\010\311<\254q\'\275\251\206\035\274O\251\'=\314%\241\274-\221\350<1\253\323\274\002U$\275!\020\345<\270\212\270<@\215c<pK\030\275;q\005=T\\)=\252<\006=\201\2307\275\246\225\276<\316\201\'=\354\014\250\274\243}J=\306\0304=a7\033=\004I9=\352\365\031=\321I,\274,:[=\034\304\231\274\223\342\305:\r\324\213<\207\323\335\273\036l\177<-\333\277\274\222\247\302<>\336\023=\037h4\274\3007\030=\235\235\226\274\301_\367\274R\033\035;\223\'\221\274<$?=b\320\360\273f\276\263\274\361\3147=\\\236\260\274b55\275\320|\375\274\374=X\273\324I\t\275\203\365\2659&]\031=\312\"\222\274\302B\345\274^?i;\253\347\037\275\357\374\355\272\200\004\255<\215\360\243<\213\241\000=b\033\211<\030\014\360;W\326d\273.|#\275v\325E=\275\2365\275\225\220\025<\244\006\323\274\002\025O\275\021\301\347;\013\232\244\273G\335\235\274\315K\224<S\336\266<\367\021\373<>\232\365\274r\260\224\271\025Q\355\274\202\370`<\223\234\207<\223#K\275#ZM:@z\020\275c\365*=\213\260\240<D&\243\274\257\371\224:\350e]\274{\217*:n\036)\275\000U\350\274\360p5\275fM\233\274&IB\275\354L\271\274\227oM\275\342\2063<\017Yj\273$]R;\264\347\301\274@\221F=\023\365\022\275\334vA\275\335g:=\250\305\223:\305\323\340<w\252/=S3H=\036\036&=((E\275\"e\016\273\270\333\\<\370\205\246\274\367\036\030\2752}\261\274\355DI\2755gA\275\256b\256\273;H\302\274|\364(==\361\033=\002\033\370\2738`$;s\034X\275\353\366\t=\253]r\2735\273\001:\322\204Z\275\362wN=\215-T=v\315O\273?]\206:qc$=\236\216\311<\331\373F\274\301\312R=2\360\262<e.\r< \226\025=\"\006\\\272\277\227\350\272\241\366\010=t\262\033\275\252\2209=\274\025\341<\014[8\274J\315\004=\300\023L=`\002/\275\0173!\275\302\027W\273\001\262\236\274M\3154\274\341\031\376\274\234\345\261<\362+A;t9?=\345D\020=\254\246Y\275\244?W\273\214\3034<x\024\264<u\027,<@\332\367\274\231\300.=n\2217=\242w\324<\253\t\246\273V\323\253<\340\002\013<\355}\026\275a\376\035<c\223;\275\345\262N<\177\005\216:\373\347Q\275\274\255\263<\210\366\321\274\231\211\336<CW\031=F\344\232\274+\030\022=7\000\241<zo\255\274n\266+\275f\310\373<\243\021\346<\320\227\316\273\365bJ=n \017=S\234\313\273\t\337G\275\300\007<\275_u\002=\214\013\000\272\356KH=pD\000\275\020\330\314<\231h\333\2747W8\275\224 M\275\211y\"\275\217P1=\263\325|\274\236\276\026=\271\207\023\274\357\023\267\274p\301\341<\275+k\274\231\367\234<\207\241[=X\263,\275\010\221\366<#\3317=\305\021Q=\244#\226<}\240^\274\3373\270\274\221\030\003<w\304\333<\210)\262;\007\024Y\275\363\3461=/\264O\275\322\216\353\274\270M\020=\250U8\275j\372\014\274\235\226(\275\027\226\324\273b\037\006\275\327M\270\274\333\232\235\272\275t.=y\3779=i\330\006=\0237+\274\311z\277:k*\332\274G\204\232<R\256\344\274\025\347\334\274\242;\206\274F7T\273\'\353\213\274\010$:\275\276\300\023\275~\227\231;Pb\035\275\\\010\242\274xw\275<\224|&\273\327{\036=\255,L\275\217\212\207<\262\305\367<$\330\033\275R\230\213\274z\002\036=\201\014\273:\232^\371\274rs9=\351\344*=\326\033\254<gU\351\273\375\357\202<\232\212\266:\0027\361\274_-M\275\201#\"\274\013\340\341\274a\227=<8\022\301<\\\365\230\271\222\211H\275\026\240\355;\034\036\006=f\035\255\274WlE=\005^\375<_\3313<\026L\023<\235\376\214<\204\361\030\274-\2439<#iO=h%7=\224\371g<rV\366<\322_7=\320\330M=6=\214<\371\006[\275\3111J=Tz\221\274Q3)\275\324\327Q=\300S\345<#z\237<\200!\255\272!\353\272\274T\322\002=\2430\311<k#\327<\326\327P=I\022X\275iD\017=\370\305\326\274=\317\363<kz?\275\\K\022\275<\241\020\274\335\257A\275k\017[=x\034\035\275(\306/\275P\230\021=\364\001+\275\352\373\265<\304|9\275\201`\361<~\2744=pS\321<\344\235\356<%\221\'\275\264\316\323;g\007\271<:\323>=e\372&\274\205\244*\274\\\\><\013Z\244\274\000K\361\274\027\342\000\275\023U\312\274w\364\366\274\026\375\032=(\210L=\004\271\364<\016\363N\274\252\300\031=b\263(\275f\255D\275\251\313J=\203\313\020=\303\233-\275/\206\211<\204\'\343;\333\261\355\274\013\276\327\274i\224\004=;>\017\275C\316\351\274-\205\002<\315\316\265<\036Cm\274\361Ol<\030\252g\274%)D;\243S\355\274nb*\275\375?z\274E\316<\275\301\006\213<O\324\306\274\216\323\302\274\370\316G\2754\225\344<;\n==Z\t\002=\267\022I\275\266E\n=U\341Z=\240\321\033\275p\016\307;{\035\r\274\213qA\275S\351\032=\304\n\236<\013\264\312\274\230c\'=\354\255\204\274)\242\321\274\262\263\314<\274\330K8\240N\264<\273A\"\275\374%\323\274OHN\274\003?-\2757\035K\275C\354\024<\310:W\275\250\277E\275\006E\326:lc#=\204g\013\275\240\317o8\337\203\026<\222}\316\274\355\003*\274\303\025\006\275\030p\007<\242/w\274\3551x<\256\221\213<\337\276,\275f_\030\275\336;\262\273R\274\260\274O\377Q\274Z\212\037<h\034\241\274\362]\323\274=\321\036\275\340\247A=%T\024\275\344wW=\346\312\037\275D6\024\275\271\326\372<\2012k;T\002m\273sy%=9\334\227\274\037\311M=UP\317<\255EP=NK\016\275\325\003\034=r\002\364;\247\264\302\273\226\370F\2758\315\347<\375d\266\272\231\246Q\275v\261\356<g\354*\275\3245\007\275\354\234\252\2734\205`\2749\323\013\2748\035\334<\202\\\001=(\007o\274\214[\026\274\376\213\037=3\323\023=\366*,;\361\307\t\275i\257N\275c\235\013\273\'(\376\273\361r\330\272(;\367\274\311K!=\370\360\220<\222-X=\025\362p\273v\327\301<0\357\226<\231\023W=n(\025\274U\024\243;\201\346\201<)\210.\275Y\342D\273\332n\021\275\221\317o\273\323A.\274\034\377\343;\272\325\325<\260i\362\272>\224\016=\244\262\264<\346\377B<\275\315\201<7\300\320<\214P\t=\006\261\007\275~\202Z=9\225:=*\372Z\273\377\301\234<\2636\023:\004\374d\273c\267\'=S\215\363<;\224\035<\212\232N\275u\3749\274\204h5=\311\0219\275\234\340\236\273\346\261\301\274o\340$\274P\222R\275\261\321\206\274\223\355\313<\367\367\036=\031\"\275\274j\350\356<\027\312D=\234-\006<\t\036\360;DH(\274x\240\010\275\323\026\020\275\327\306\000=\021\352\005=y\317\363<\213\375G=\377\365:\274\022\017X=r\260\r\275\340\235\321<&\\\037\275\260Q\326:1\234\352<\243`)=\\hB=_\200 =\375\373\303\274\202\207A=c\213\232<A@R=vQ\335<t\360/\274\214\\\'\275~OS\275\343\035\260<\277g\035\275\023\256Y=_\251\n=\252*1=/\376\023=k!\304\274Vn\227\274+\203\323<\274\023\004=\005\021`\274aG0\274\304\322w<%US\275\335)\366<\312?S=\244[\353\274Fn\314<[\323\343\273A \037=\023\2512=\272\003\000\275:\0063\274\217\035W=\274`\014<\337G\'=\335X>=\3744\016\274{\342@\2755GI\275\374\\\355<\217\2652<\325\357\236\274zE\322\273\232k\267\274JgH9\177\213\270<\361 \301\273\232\346\002\274,\016\303<\003R\n=O`\257<\222P\'\275\262\344\274<\002\231U\275u\335\367\274\"\013\'=\336$:=x\311\334\274\210\353\235\273C\303Z=?7*=\351_-=A}\364\274\327c{<[\rC\274\361\025N<-\005.\275\003\275 \275\377\257\030\274\305\202\370\273\220\251\323<!?\035=\271\001\223<\256\224X=\224\356y<\246\334\315\274\010\313\300<\244\301>\275zV\023\275<\007B;,A\320\274\211\253==\340\263!=\320\003\036=MA\3079\013\266\240<RmG\275f\022h<B\207R=\212\214\342\274\302\325\225\274\370B6\275\313y\016\275$\317;=\262;\331\274\253x8<#g\245\274\021c@\275\236\367\227;>\346\024<t1N\274\214_\004<\247\345,=Y\355\271<\005\2100=\370\363T\275\303Q\033\274\'\326!\275\221Q?\275\311\274\225\273\"\n\002\274 \362\201\273\224{\030<\345[?=]\355\002=\026\263V=!\337\t\275YNS\275\243}\014<\265\263\322\274\356\352\204\273P\224\370;\342\022W;\233\304\010\274\276\0231=:\234f\274w\372.\275\334fS\275V\307\010=_S\025\275.E\024\275\232\361\263\274\257\370\365;\322\334\n<\216\250P<&\353>\275\211\034%<T\316\301\274o\263F9\223\336~\274O\266\334\274\3752-=+w\372<,\221\'=\254\311$\275\226\356\221\274\255\355\311\273\365\001%<\003\301\277\274iB\016\275~\361V\273\325Q\202\274\333\177E\275\303\336\245\273\242\205#=\335X\010\275O\'O<\267\021\037<_\313\307<sc\371<uB\244\274\242\033&\275\3465_;\370\243\025\274M\276\026\275a\016\220<\006\261F\275\372\033\204:\302oW\274%x\030\274\261\2402=\014\371\026\275\3135*\275H@\347\272\'\364\271\274\327$\010\2754\227L:\261\372E\275?qM=\261i\253<#\362V\275R\3368=\267\230\023\275G\030q<\371#\347<\007\311R\2754B\004=I]\264<<\243\355<%.X\275\322\244$\2734\030O=\353\324\023=\223\345@<O\361\000\275d\324\371\274\323#\\;\353\3736=+\314\023\275\200\311*\274`\2516=\005\217Y<6\344\266;r\204D\275\214\364\342\274-\032\301\274\274@\262\274e\335\212\274\347\r\320<?AW\275\341\266\215\274<\271\3359xW6=\003/2;\376J\213<\310\312k<\320\212\004=B\277M=D\260\236;zd\017\275}\304-=5N\002\275:\232:=c\246\307\274\215h\001=\332\232+<\263\205z<5\307C\275\031\004\340\273\303\243>\274\274N\037=>-\345<\270\231\223:\306\203\t=\t\351[=}\351\360<ri\003\273\360\237$=\367\332\302\274\223\025Y\275\247\272}\274\006\350\035=G\202E;\317<X=K\001\000=\205U1=\026\252 =IK\364<\250\006\370<\014\262\334<3\230d\274\353\340\266;\337\235\351\274\003\357\213<\275\\-\275(\343\330\274\223(\'<\371\377\207\274\265\271d<\262b,\273\213\3554=,\323W\275\225\000,=\220\254\373<R\002+<\266\330\322\274\375\224A=\311\\2\275\316c\216<\243\322\363<\324a\366\274\330\364\026\274\\u\361<-\327\014<\363\224\346<\357\316R\275\221a\332::\322D=>o\306\273\002\215\n\273\324\001\237<\306\004\306<\005\342\240;\377\027?\275O\344p<\361l$<\223\362\317<CY\014=\222JX\275\005\3317<\'\211\005=\001\331\201\274D\0024<^*F\275e\277\024\275\016E3\275\203j\220;h\221\n\273LZ\330<\274\034\353<\373\323\220<\010yH\275C\321\242\2733?i\274\212\370/\2740w\346\274\261\235\342\274y@\230:\235\362>=$\357\243\273^{\350<t\332\330\271\303\006\342<v\355\"=\"]\302\274(.\336\273\014\036\345\274\361\325\321\274\362\'\342\274\324Ww\274o\367Q\275\336\313P\2742\225\002=\374\270\233<c\014\\\275\022C\226\273\367\324M\274\222A)\275\003~\024\274L.\370<\234)\355\273m\240\023\274\260\227\020\275\022\024\324<\t\252U\275\256k\315<\361\003Y=\304\316\366<\270M\322\273r\237\332<\002\206>\275\020\265\263<&\253\315\2740\364\377\274\021\223I\275\"\325\354<\333I)=&:\343<9O\021=c@\365\274\203\230-\275#F+\275\t\267\014\275\216^W\2753\376\350\274@QX\275ZM\024<\227\317\270\2733\020\222\274\333\0220=\215o\035\275\207\332\n\275\345VT=\034\'@\275\363\257\354\274\\C6\275\334oX;\275eM=\365V\245<\252e :\030Q2<P\"\223<kp?=#0,\274t\211+<\311\034\025\275<\337\007=Q\024S\275\'j\255\274\357b\216\274#\002\370<GH\203:\255@W\275-\\4\274\361|\266<R\030[\275A|[=\317\375K\275\363]\247\274\224D\036=!\255\'\275m\0145=;dK\275\210\233\026=\036\250\027\275\267X\245<[\252\020=[\376\311<\024AQ\274X\245v<\370\377B=:<\230\273\r\357?\274\202V\037=\366\261H=<\343\241\274\327=\022<g\235\206\273 \260\225;#\330&\274gJ#\275\375\332\224</\216F\275$\306B\275\032\325Q=S%\016\275}+G=\303\035X=\306@?\275\305C\257\274\"i\373\274\372\324\352\274\333~+\275#\257s9\205Q\020\275\346\207H\275\376\275[\274W-\031<\202\035\020=\t\2524=\224zi\274Ww =q\355\033=\335\2465\273\241N =\245\006$\275\267T\010\275\220\2548\275\250qF\274\313@\035\275\233;\033\275j\266\276\2734\302==\356\323[\275\254\206+=\336\265\210;~\373+\275\014(\333<\002c3\275\246\205V8\336\3161=],D=\004 \351\274\033\320\345\274\361\253 =\267z\340\274\325\n\216<hV\242\273}\314I\275\032t\017=\262\261\032\275|\242D\274w/\002<\300\326\263\272b_H\275\342V\024\273\202\037M=\211\353\211<\031\370\205;\216<;\274\300\204\331\273\243\2361\275\230L\211<q\333\004=\220]\216\274F9\257<\0175C=\376v/\275\256\327#=\'\357\003\275z\245\004\272\237\262%=\212\356\221<B\221H<V&\267\273/\256\213;;\253\"\275^\361\316<\033<\254\272t\253@\275u\236\024\275\177\345Q=\232X?\275\305\306-<\202\363I=\013;#\275\354N\210\274\366\022\265\274\347\004\332;M\027\331\273\252\010H\275\263\212\375\274\370\247\034;O\205-=\266\207\266<R\333~\271\002\3325\275qh\354<~cX\275j\210X\275\030O\344\274\320\237\377<D\270\2449\303W\013=h};;\311\022S=\211y\232<\323\177N\275^G\317<\370\210K\274\311\331\265\274gCH=\tR\261\273owI=\201\364\321<\302<p\273\370\007\327<p\257\007\275\342-<\275\371\345a<\000p\020=\322\244\235\274&\262N=Q^ =D\312.=X\232<\274_\341\225<\312\327\006\275&B\2658\225\356W<\026kL=\246c\341\274\325Y\301\274\t\034\033\275Y\336\321<Q\266\306\273(\365\025=%]\343<A\n\234<\236\311F\272\362(\367<ia\r\275Uq\t\275\207<\200\274r\336T\275\327U\035<\0141\361<\016#/\275\241k\360<\304\334\017=\371\"\340\274\014\344\366\274r\000\253<a=:\275\304Z\372\274\361y5\275\006\321\272\274\035\020\010:`\177\213;\236\0357=t_\231<*jI=\357\0038=H]\332\273o\014\205\272\"\236^\273\001\014\355<\360\305\236<I\203.\274\253\365\020\275\257\316x\273r\022\027\271h\355\r<G\273\022\275\261\202\225<[\324,<\237\265O\274C\014\376<\354\201\306;Yj?=^\376\007\275\323\021\341\274T\000\005\273#[\264\273\314\232\332;\033\221\030=\352\241\367\274\364\265\210;H\203\215<=V$=\306\314\016\274\021\201\276\273\'\270I=\013\001J\275\322\2172<\342\020\322<F\270)=Z\263\242<\302t\223<\n\350\026\275\301\007\323<>\255Z=J\006\006<\021\247\371\274\2313\222\273\272\232\270\273k\367N\275\233\205\206<\356\212\006=\rX\026\275\2366!\275\240\321\027=IG\'=\220\300V\2741\002\236\2735\021\351<\322\277\337\274\341\364\235:\372\271\016=\363\363\273\274\177\225\025\275r\264\236<\256\027l\274\346(\362\273& >=e\3403<g\363\216<\232\354\'=\206\374<\273\014\340?;ny\033=<\317D\275\211\377T\275/\303\344\273J\327\005\275\342\254*\275,\310\216\274\234M\2359\"\314/\275\333\217%\275\353g4=7\217\364\273bU8=\'\207\336\274\t]\247\273\332\261\331<\261q\214\272\327\006\n=)\355E\274\037\3479;\246\356\224<\361`\304\274\243a*\275F\201\"\275\022?\262\2742\364$\275Nu\351<^\321T=\271\0349\2753\n!\275H(\022\275\235w\224\274)\214\270\274h\365\264<$\343\010\275\004\276\017\275\210=\026=\024\322 ;cfU=u\035\345<\217s\351\274\037*8\274\222\351h<\204\\\205;$cu\274R\312\033\275\340\213k\274\026\264\004\275;\327<<W\367*=\307\025F=2H!=\303\270\034=\333w1\275\\\243\243\274\245\323\003=\263\365\002=\232H\034\275\017\232\200<6\000\276;\367gN\275\272\356\324;p\364\215\274\260\211^;J\271Q;\021\3120=y\354\306\274\310\317\025=\241\362\016=J\265\363<M\277\315\274[\360U=\327B\303\273\275)\362\274E\251\366<RZ#\275\311\232\212\274\350 \204\274\260l\341<O\232\211<\020n(\275=\\2<\372\370\361\273\320\206I\2755\241K\274z!\315;\354;C\275\2750+=\233o\"\273q\230\334\274\027\236\'\275}\323J=7\267\235<\232\033d\274a}\r\273f!\216<\226\341\226\274\221\365%=\\Nk<n\"}<\t\274\027=\263B8\275E\305)\275\271X:<C\350\244<S\263t<\310\204/\275X\337\275\274\351\305\343<K\255M:~A\307\274\376\032Y\275\327B\224\273\030:.<3l\030\275Nr\241\274\021%\271\272\306\346\357:S!\250;8\344A\274\364pM\275\377\254\r\275\316\016\250\274\365\r\264\274R\253<=\301\213\234\274Pn\251\273\nf#\275\231\323$\275\343\261)\274D\216\026\275P1$\274\364r.=\372\031\000=\216\227\363<\2705C\275\377L\031=\037 t<\234Z\307\2732\273\354\274\207\272\r\273\t,\325<\302\\_\273s\376\t=y\200+\274\204\324\376<\237`I\275\2059\344<\032\335\013<\'Y\'=S\304\031\273\r\007\263\272\250\345\210\274\261\026:=\227\261J<[F\260:Q\210\315\274\230\037R\275\244w\231\273#\026$\275\251&\302<W\205Y\275b\000\362<:\205\327:3\2372<\305,S=\217`\227\274\212)\347\274\266\264[\275\242u\315\274\341t\217<\231 \222<xAJ=+\r\002\275\374\266\213;B\037\003\275\007P!\275\002\365S=\\k\000<\021\005\2739h\345\021\275C\350S\275t%==xu\021\274mK:\27536\331\2743dG<\350\333\035\275XyI\2755\325\016=\326\207&\275\330\264\016\275\"\377$=\303P\034\274\263\t\251\2732M\'=h\337|\274\307\256\230<n\010-=\2625\212;\354r5\274=\231.\274\363\341C<\035\021\036\275\223\303\274<\206}\267< \223;\275\3350\373\274\262\223I\275I@W=a\375>\275\0227>\274_\217\n=S\274\036\275\271`\"=d\334\201\2746\016\236\274\271\366(\275\245f\035\275T\325\220\274\353\235Y\275?\037G=3\t\254\273o\311\356<\234\031\354\273\177F\031=gQ\033\2752\371g<\2003\303;\227\215Q=}}\314\273\316\277\267\274uj\236\272LN\022\275\2500\023\270\200\365\273\272\202\351\014\274\327;\241<\217\266\337<TU\237;\343B\204<\024\264\200\274]\247\235\274\355*\n<\001\343\372\274L\021Z=\026\263\256<\203\334\361\274\221\213\225;\n\322E\275\374<\013=\266\246C=\276\245\257<\244\027O\275o\350\"<GSN\275\222\'0=b\205\002=X\205\014\275\331o\202\273\0335\273\274!\263\331<\243\324\315\273/\251\345<\272\353S=yBC\275bAM=\317\374?\275\240\222\002=/\357\026\275\253\001?=F|Y\275\327ot<b\231\277<\350\357&\275\273k\030\274\360\242\361\274W@\241\273\030\t\221\274w\376\010=\204\032@=\2303\237<H\300\244\274\334,U\275\273\311~\272\336J\036=E\363\200\274\3206C\275\031\355r<\255\202-<z\376\342<\320YG\275MB\260<\006\031\335\274\314\354,;\010\007\020=\234\243\205<\254\2307\2746\236U\275@\346E=\316\030|\2748~l\274|\347\007=\234\370\032\275\325\356\302<\361;?=\251\215#<\333\3777\275\351\261\377\274\204\266\205;\333M\004\274\362\030Y\275\365\233\323:\315+\026= \202\223<\271\002\235\274\335\rs\274\336\266\251\274s.6=Q\2648\273V\036R\275\305q\304;\037\344\275;\24249\275\273\311\'\2746\200\014\275\250\363\261<UL.<j\340\177;\256\0049\275\020;\"=G\2368\275\207\035\314\274\374\234\005\273N\323#\275\224\250P\275Q\355+\275\032\226\336\274\277V}<&o\261\273/\370\257\273\036\361\356\2731#\275\274\275#N=\352W;<P\266O\275FA\321<\210\257G\275=i.\275\253\344\371<n\213\337\274\346d\256\274x\343a\274\247HL<\322ZR\2756\004\345\274\263_\212:\352|s<Z\360\276\274&\364\236;\337\312\021\275d\2404=\322D\205<\307z!\2755\356\2019\005\001F\275=\237\353<^\224\220<\002\020\217<?\200=<j\375\231\272~##\275sW\013\275\217/\346;\276\270p:\211\323;<\314\203\305\274\0265\327<\253a\';\341\242R\275P/T\275-\020\005=hl\247\274\262\005\352<My\345\274\310\n-=\242\356\267<aF\034\275\ro\016=\270i\232<\215V\250\274\324\241\272\274\342\207\265:U\034\253\274\302X\016=\017\221\002=$f\017=\330y\340;\363?1=\366\262\370<b\215J\275\221d\365\2747\212T\274^\025\275<B\027\265\274\245\244\017\275R\026\321\274rPE=\260;\211\273\332\217\340\271\017\325\007\275!?\020=\310\022\236<\377\265D=b\002.\275]\003\"<)IJ=\337s\227\274^\r#=\211\355\"\275\224\316\020=\007\352c\274\263\253\226\274\301+\251\274%p/\275\257\260\313\2734r5=\240n\212;\342\244\023\274/\377\204<8\342\010\274p\231\245<\217O6< \240==Q`\017==Q\303;v\245\r\275\264\3645=\334\020A\2758\'G<>y\021=\202\3368\275\3536\276\274L\362\007\275\246AQ\274\032\361z<\021N\024=\257\253%\275C\0065=@\303$=\252\034\005\275\376m\366<Z\'+=\305M~\2740\233\n\275\216\016\013\275\343\267K\274\331\322[<Y\211\234\273\217\003\327<\365E\225\272\243R\277\273\367\320\310\274\rU7=\227\356Y\275c\343G\275\331@-\275I\320H=6\2563\272\033k\362;\375bX\274\246\341C;\241\316\240;\'\362\013<\221M\036\275\325n\214\2746\022\230\274\026\364)\274\323K\037=+\264X\274$\377\n=\251\217\007=\210xT\275\"\355\262;\212\005\311<\210l =[\234\032\274\031L\024=\311\222\254<\356~\372\274k\357M\275\317\377\245;\366\252f<\2453)=\3431\013\275\254\220\205\274\3348\003\275\201\n\022=\266\345\007\275e\272\005=\032\222\223\274}\002,=:\245E\275\"\251\356<\214\013K\275\354ml\273Wa(=\377\r\261<\3778\212<\'{P\275(\306N=W\323#\274i\237\267<\226\362&=\350\223\t\274\220K\000\275\t\004\336\272\357\352K\275\005\2568=\214\305\244\274\211x\316<\3523\232\272\304\234\004<\316\327\271\274u=\371\273\375I\006\275O\0102=@\300\303\274\207\340\203\274_\007\374\273\016\262v\274\345\\O=c\034\344\274{j\002= \2030=0/M=\016\342Y\275Q|\234\271\250Y\346<\207D\214\274\257#Q\275^\205\312\2742\202\327<\345\370\273\274\245\240\031=\013%\234<\rtI<\005\200\025\275\222\003D;[\023,\275\262\335\303\274\217)\271\274^\024\020\275\313v\373<\353\\\235\274;\347\027\275v\350F<1\246\222<\020\230-=.\025C\274\004%\324\274\312\231\004=\320+Z\275\357K\266\274\024*\202;n\214\231\274%Ba<\260\304>\274\034\302\330\2744\351D\275\026mu\274\030\277\360<\326\373\334<\315I*\274\371$\263\273Y\031\301;\177\017G=\243CF\275\240\t\275<\236EP=\204\034\007=\3038\217<#z\264\274\265G\037=\216O\343<9\217L=$b\351\272)\006\334\274\004r\237<\271/\023=r\355\237:\'D\037=\311J,<\023n]\274\265\023\363<\344\362\357\274\225\211\366\273\363u\316;\267\261\315\273\334\355}\274\003\013\022\275\310\004S=\332M\315\274\33016=e\037Q=U5\027\275\353\010W=\017\204\225<\330G\354\274\232tJ=\2358\002\275\027\217V\275\236\031\024\2758\224\235\273\377\375\357\274\262 <:3jP=o}@\275t:\031=\2255\314<Y\025\373\274\335l:=\212R\034=\273\214O\275\216\200C=8e2=z\206$=\320\361\034<`d\t<\'1(=\345)Q\275$\243\206<o\200D=n\'\002=<\204&\275Rz8=#!n;\240\010(\275?\037\242\274\365!\025=\003\227\225<\355x8<H\270\027\275HoO\275\210\356\253\274\007\207\004=G\344|;\245\302o\274\332\303\010\275\314:\026\274J\223\021\273\030\335\020<\275\363Z\274{\220\336;\232\305\377\274\370\222\007\274\235[\371<\212Q\240;r\324\336;\201\017F;}\325\021\272\256\256X\274\365\342\353;x\357;\275\315]q<\254\224\326\274\222V\'\274@\335\266\272\351v\000<w6>=~rP\275\271\203\025<\264\017\254\274\203\374\343<y)\265;\333\337y\274\370\201\312;\300\351\344<\021*\225\274\231H\267;hg#\274\344\304X\275\327\177\212\274\242\013A\274S\363\033=E\025\221\273\335\320L\275oo\233\273z\215U\275\316\220N\275c\232\262<_ZU=\017\221\361\274\026\324\252\274\314\210\364\274\304s\377<\365?\006=\364\255\016\273\214\224,;_\307X;Vj:\2758\234K\275\310P\245<M\246A;\3715u<\227\310%\275c$\336<\001\2775=)\321\251<\360\016<=\377\260\020\275\325,D\274\220hg\274\260t\364<q\374G<\300\371\025\275\266\224\007\275\246\026\252\274\335v\014\275jx\"\275]s8\2756\013\242\274\234n\034\275\030\362\027=\324\363T\275\311\237\374;\321(\236\272\352W\215\274\202\241J\275\256\025\326<\210\2634=\245\020\014\275\013=<\271\002\267-=\337|\r\274a\240F<\000\235\275\274F\262\364;\\\225[<\nmf;\357\3734\2751\256\n\275\367\210\237\274\2749\243<\327\321_<\257_\037\275\244X\003=\027v\317\274\336d\237<\025Z7\275wS\017\275E\321\301;\037A\346\273\215\356\005=\0235\302<b\373\033<\332f\372\273\204\236\331\274\340,)\274\006\206\235\274w\216v\274WU\251<G\367\343<\013N\"<\037\343\007\274\231T\267<\227\273\021\274Zf+\275\213\215\312<\301Y1\274\033#\240<:\312\234<\277\335\225<4aU=|\273\304\274\344\022\337<\264U\272<x\301}\274\3220\277<\343E\253\274\031-\033\275K\372\214<\007\256J=\254\0236<u:\204<09\223\274\025\006%\275\\\361G=l\216\006\275\2322w<\226\337\227<\362\356\245\274c\345Z\275\310\320\337\274$G\010=\343\254O\274\367\222A\275\356\271\332\274\357o%\275\035\r\245:C\'\273\273\232{K\275\322\014\377\274z\226\026=\337{\030\274\002\270V\275\225Q\017;\316\252\023=\377\203+=Ga\322<\331\036\262<\255\'\263\2748\022\332\274\346\311\342\274dZ\215:\234\232\003<\324\2351\275\003\301\t\275\275,~\274+\363)=\262E\267\274r\300N\271\202\002\241:\242\3274\275.6y8J\311\033=\241\376*=\325\037\206\272V\321V\275MX\030\275\0133\277<?<9\275\346\247\001\274\036\214\n\275\306\334\232\274*\343:\274F\247\032=R(B=vx\014\275l\177L\2757z\347\274@\361?:\224v\200<\371\313\332<p\225/\2747<R=\212{\031\275\250\017\204\273/x\275<OT\026\275\276Z7\275\020\312\272\274\205\371!\275\323\261C\274^kJ\274\262\004\222\274\366\005\241\274#\210\265<\2645\030\275Sy\017=.k\020=\303\"\023=\237`\351:\222\277\206<\220\333!\275\000i\t\275\036Y\000\275\226\277Y\274\r!\327\274\350\246\361\273h\232[=\370\236\340\274K\222\036\275c\013}<\363\020+<\275f\022\2751c\203\274\004\200\023=\034\0327=R\343\337<\031\0341=|S^\274\275\225\354\274\263\263\333<\336\333\265;y4\006\274\000\312\027<\037\215B=\200w\235\274\253\201E=\221\372\274\274W\205\320<\317\313%\275\272\231\035\275\220\266%=\330\361!\275\024\216\267<h\276\371<\021\352\215;\311\266\355\274\261\337\016\270\312\2659\275~\3277=C\222\326<\243\352\006=|\210D=\t\330p\274\305\021\034<\363\017Q=,s(=u\360\032=\"W~<\211\366\252<\205\014[=Eo\264<\005\020W\273\263\373(\275ZKz<\262\237\034=x\274%:\354\024\367\274\331\013;=\303\035\257<!&\233<\225g\024=f)\346\274\2124\257<b{l;\243`\035=\231n\206\273\331\230\014=\016Q\362\274\010\355Z\275\333u\360\274\202\343\027\275\365F \275\036f\223;\267M\362\274N\215\003\275\231o/=G\216\001<\257\341\253\274?\274\004\275Z\340\035\275\010i\216<\263H\"=\254\243\357\274\254Dt\274\217\241\025\273\033\343\370;\201\340L=\265jU=<35\275&-Q=\267\275Z\275\271p\321\274\273.P=\324\033\371<cAB\275&\301\001=\302\271G<>\2077=%\000/<\027\221k\274N\373I=FO\010=\243\223W\275\n\2754<\3709\313\274ScO\275\257\222\321<\3256>=\014\351\324<\n\002\005\275\216\314B=>\2630\274uj\345\274\367p!\275!\374\274<`\027\275<\250*$\275,\317}<\211\327\017\275\33401\275\237\263M=\003\271\002=\252\247`<\346\302\227;.\"Y\275A|g<\003\2412\275\245Px\274\312\371\033\275\2230\352;e\270v\274\210\3336\275\n\275\362<~C-=\203\226\325<\226\001~\274\255\227J\275\243\034\023\274\271\365\n=P3,\275\342\324<\274\301\347\341<&]O\275vF(\275\373\367\312<gZ-\27474g; \034P\275\372B\020\275E\353)<.\3637=g\342\037\274\327k4=e|.=\236/\333\274\016\223#\275f\207\263\274\301\036Z\274\212\333\215<C\022b<\271\'P\275\r\005\334\274\363>9\275\210\312\326\274\031>\n=\367\374\226<\315s\'\275\033\206\274\274\321\301\t=\337OA\275\300\257p\272B\014N\274\357Z\2129yK\246;e\355?\274C!;;G>a\274c\242\265<T\t\255<i\201\262<\244?;=\013\214\2079\227\036\003=r%O=Y!v\274\314\t@=s\010F<,\230\020\275h\200\260\274\343X\001=?\351T\275\\\215\231\274\303\245\024\275\305\310\233\274\204\307\364;Z\305\247\274\034\235I=\032:\344\274d\020\336\274\356k\022\275I\n\202\273\217\203\274\274\241\213K=y\215\017\275\261\267:\275\201\337b<D\361\365\273\031}\177\274|\265+=%\260\036;\300M\001<\306%\321<$\353Q\275\352\036\232\274uX);\351C!=\001y\314;\202V\247<\234 \332\274a\257\252\273\200\347\313\274\034\232\215<,\322\370\274\024E&\275hP\247;\263\304 \274\337\237\347<Oi\370;\304\252\036\275\275\262J\275\013D\025<T\355\005=\33300=>x;<\266\016+=\357\367A\275W\372\207;\241\265[\274\\\326\213\274\352\030\025=\363\232\033\275C,\302\274\002T!\274\005\215\373\274#JP<\t\304\031=\341\366@\275\342!W<y\'\022<\214\220\315<,\231%=|\345P=h\017\035\275\326\372R=\372B(=/\213\353<z\276&\275Z\0039=\344\371\363\2746y\250\274\006\002\007=G}\340\274\373\263\222<\343\323#\2759V=\275\206d\022\274\370{\000\275\347\326\'\275\006\217\003;s\214\002\275BkP\275S\264[=c\320X\275N\273\335<\222\240\017=\000\375\351<\267\332\006=l\007\016<\260E;\275\251<\224\273\033\206N\2749\365%\275A\331?\275=\365\032\275\313\3275<\331Kr\274\212\337^\274P(!\274\3065\231<j\233\367<\203\035\021<\2566\"\275?X\230<)\253\007\2756)\311\274\030\007\n\275\300\216f;\340\002\n=*@-\275*w#=\027\275\201<7\356M<\2633,\275\206.N;*\225\002\2751\250P=\224zq;\354\304\333<\275\345\327\274-\342\276<4OZ\275\307\315\024;Sg0=\250\312o;\006\264\355\274X\326\264<R])<\227(\205<R\362i<\312\264V\274\215\'\307<K\027\277;ti\274\273iy\310<\177-\254\272T\336\250\274Mr\223\272\010Y\022=\211`\265\274{V\316\274\260f\342\274\336\333F\275\215\352\005<\t\367\022=\232A\310\274\222\373\354\274w\301N\275f9:={\\2;Pj\020<:b$\275\027\0038=\305\2478\275\261\224\243<\335<\237<R{8\275c\313Q\273\305\322\013=U\"F\275x\000\220;\354\315\303\274\n\325\023\275\2674[\275\356\226\204\274OR\334\272\027\002\247\274A\367\016=!\002S\275S\234P<P\027i<\215\3124=\252\3737<h~6<l\r\360\274k \002=5\300(\275!\031\244\273.\2272=I\r\230\274\235Y*\275\270\255\234;zBL=\247\301@=\331\3369\275>\026.\275\232M?\275\304>C=\003\342p<\231\346V=\252\333P\274\377\352M<\360\331\025<\317;\027=,^t<Ht\177\273\2330/=M\350\t\2752\366\326\274\363F1=?e\210<\347G\323<\261\276\251<\240\006#=(\035\311\274\2364X\275\270\326\273\274\261\261<=\267\203\006=\263e\277\274)\270\251<\236\177J=\2563u<\340\263\373;\331\311\316\274$\023\263;\311;\343\274\204o\320<\001j\023\274rI2\275\363Zo<\3561\2539\002\242\301\274\207\230\331\274\352\344H\274\36562=\r\026f\274\004a\\\270\016\221\305<?\023\226\274\374\257\316<\020|0\275\234\023\t=?|\025=#\3172\275I>\207<\32011=\261\273O\2757\262J\274f\\\033\275V\302\271;[\304f;\235\311\n<.\034F\275>\352=\273Z+U\274\202\255\260\274:\230\024=2\244\247\272\237.\216<)/\'\273\001j;\275\020V\252\274\030\360%\275u\301\205\274\301\235T=\2355y\274\304q\370\274\246u\226\274\352\266\002=\210v\345<\264Q\355\273o-.\2753(\0169\322\370T\275\274\351\032\274U\001(\274\317\342E=xq\361<\304\244\207<ED(=\030\271\'<\232\230\333<\306\373F\272[#\306\274\247\2228\275\317\263\010=\320u\017\275\223br\274+6;=\321\232\322\274\340\266\206<\264\234\013\275-\226\"=\"\007q\273\rm\204\274fq<=\370@Q\274j\225\367<\355\001\005<\032\313`\274\tm<\275\327\343Y\275\214\347E\275c\373\260<\236\317\274\274f>\305<.\304\005\275P\026\310<\034\267[\275,\3349=\372\274\016\275\003\200_<3\327-\274[\216\025=1\356M:`p9\275\326\221\252<?\274\036\275\036Y?\2752\020=\275U\346\347<\257\213\342<\230)\266<\r\0365=>\021\310\274\210\'@\273\255\314\222\274\210\312f\274\213N\204;E\314\322\274 \264\203<D]?=\267\262\014;\226\177K\275A\213\'\274\033S*\275\203O\332\272\342\374\013=\210\350\315\274H\030\363<\374\037Z\275\242\353-\275\021\370\035\275\222>4\27546\034\274<\013\013=\222\262\377<\2437K\275EeG\275D\026\"=\037\377\207<}5\001=\253\035/;\273\261\315\274W;%\275\t\312\t<\221\032\020=J\017\013\275)jL=\307\241@=\236\023P\275\364Iu<\306\250L<\216\204\211\274o\2719=\370h\320;;o\372;\007\252=<\031\265\n=\322\021\014=_I\327;\37366=\032\230\324\274\217\027:\275\210\347\335<\315\346r\274d\321\017=f\251X=\024s-</CF=\257/\242< \377P\274y\222%\275\272q\016\275\320d\265\274_\374\223<\302\006\001\273\254\"S\275<\376\253\274bO\037\274\035\240,=\302\226\023\275Lvz;\210q`:\017-\242<\340\361\332\274Y\014\324<\217X\032=\223\371k;\316\307#\275\203\251\261;\351\263S=\273\021\001=\325\220\270<\"\375\007=\256JH=\306\222\000=_AU\275\000\2446\274I\336\007\274\027\\\371\273lz\014\274\243$G\275\376}\014=G,\024<\214_&\275x\360@;\306wD=\307\334\034\275\262\2167<\353\313\002\275KI\377\273\356\031o<\373\020\200:UwM=*\233\322;c\216\212\274\366\013N\275H\304\311\274-f\377<\226\221\202\273\232t\020=\303]<\2732\372\201\274\027]A\275\302\214I\275\366\010\332<\361WB\275\240\242x\273\371\221\271<\265\345~<Qw\340<_\244\325<\r\277\250\274HV\r=\323\344\305\274\317\271\203<\275\234v\273\n<\255\274\\\207X\275)\267\267<Bl\274<\334\3634=\365\226\035\274\225>\335<\273\333\000=z\207\330<\372\013n<\007\364\242<Rhm<\031\257\332\274\001\033L=_\334S\275f\0009\275\267\277\245<\014\236\n=\212-\035</J\264\274U2\026<l\364\024\275\231\375\025<d\241\324:\320\236\262<\276\366\221<\322\2262=f)Y\275\270Pf<<:\333;\337\357\304\274\334\212E\275\257[\373\274\334\245H9\277\213#\275c\221O=\206\300\025=\242{\020;{\256Z\275\310\356X<;\002\027=7/C=\274%)=\240\220+=\262\2258<\265\357\325\273_D\300\273B\020B\275^N\240<\r\247\322;L\\\266\274\322]\r<\357\231\340;v\205\224\274\246\233\276<\370\224J=A\215\354<\353\270\n\275\321\246\274<vOS\275\226I\375\274\236\217R=\230\364\203<`\314K\275\276<\353<\223\200\370<\345\205\246\274\266\356\312<\232\250\242\274\2310@\273\262\203\216\274\242X,=\327AH\275\346\231\355\274p\020\203\274F\000\323\274\333]F=\022\014\343\273\372\273\020=M\021b<\275\313\033=q0V=\2511\375;\003\343\017=\321\345\031=2\247J\275\2347#\275C\023c\274v\261L=.m\002=f\204P=\256n\316;\347\241$\275\302\205V\275\331\304\324;M\215\317\274P\002\"\274\234\204U\275D\345\264\272\330LG=\323b3\275\277iA<o\207T<\361\277\023\275^\033\026=\037\226$\274XT\204<\211!\003<\345(\031=\362\323.;\371{T\275\022\233\233<\3079\206<\272\202/=\274\336\355\274\354E==q\2376=\334\027\217\2735$\355\274_\211\'\275\330\351!=\260\263\210\274\310\343^;\027\234\357;\3239$\275\263\037\r<\032.\313\274\242\202\324\274\300\033\320\272\233V\325<\374\202\005\275\231\320@<\375.\032\274\273?P\274\244\321\301<\262V\221<\306F\303\274\360\n\363<\333}\325<\241\2402=j\302\303\274\224f\324\274$\314\022=\254\342\225<\346\302\302<o\343&=T\232::\314\363\377\273\261\310>\275\274n\313\274[\263\363<,1H\275\377\246\325;\234c\003\275\341\337\274<\222\273\361<\222[\316<\227\021\250\272\376\0106=YmE\275\323\335\017=\341\030\302<<\035\030\274\3762\032\275\271j\r\275\231$\243\273\303p\314\274\265\336\307\274V\037]\274\316=\372;\315\363[\275\205RB=9H8=\256R%=\330\"0\275;}@\275\ri\003\275\016R\214\273Db\311<\227\"I=!?K=\241\023/=W\354\034\274\246J\023\275h\303)\275\213w\206<\231\337\342\274vd\366<\272t2\275\000@7\275\303\246\t\275\003J\266\274bc\033\2753\347\337<c\037\034=V\232\247\274\265\017\006\275\031i\346\274`e\227\274\213\231!\275\263\351\347;\311\242==uy\013=k=&=\257[\227\274%\374\031=d(8=\242\222c<\305\024\314\272\300\324\223<\223\207\340<\031\320 \275/\240\234\274\275/\033\275 YR\275\251\005\024=8\275g<NX\355<5U\241\274\352*B\275\000Y)\275\035\250Y=$\374\377<\331\342\325\274\n\032S=\247\266\247:\270/{\274\353\037\325\273\264x\236;\036xU=\356\346\207\274RF#=M\304\020=\023BM=\255\260\203\274#n;=M\207\304;\003&\262;\312=\260\274\275\353\214\274\263MX;\226\320\034\2758t9\274,]\026=\005\323\246<\247d\225;\274t@\275m\235K\275\036\201\263\273\314\342\334\274\265\363E=\016\331\261\273}J=\274N<\r\275\264\262+\275\351\004@=\370D\023<\332[\356<H\317\035\275\030`H\275_<?\275\207#,<b\345\000=\032\373)=\231\253\001=\227\353\037\275\034\242\256<\007\300E;G\333\3558!k\007=\320\n\365<F*\255;E\355H\275\026ES\275\357\364=\274\365\200\364\274\222X\300\273\366\340\014\275G\307\207<\006DO\275-\200\356;\021\211\326;\220\347N=N\027\310\274\246\255\017\274\220\207\220<\316\013\037\275!\352\"\273\013 \002\275\026~\263<\252V\006\275K\n3\275\245\357\275<W\367\362\274X3\024\275\322\361\303<*\211\n=\215\025 =R\203\344<W\3735\275U}\372\274\\\037Y\275\211y\243:g9R\275\341\323A<[\221\225<\232\331F\2746\326\003=l\3047\275\315\007\301<j\306\330:!\010r\274\r\013P\275[r\370<\375\366\242:q=$\275k!.<Y\3772\275\355w\006\274\214R\270<\036\253O\275\312\026\200\274\212\244\325\272^\272\'\272[\325M=&N+\275\250HA=;m\221:\301\300G\275\313\264@\275\271\266\201<\226\240+<\243\210\237<\000;\320\274\364U\261\274\372Sf<5D\032\275B\"\265\274}-1;\225=\020\274\372\243Z\275)N\031\275\365]\016=\200P\234<]\223\003=L\355\377\273\223\234\341\274\220\226:=\305\366\362\274\005U\201;\263\324&=\353\366\331<\305|\311<\375a\004=\220u\363\274`\232@<Rd\035=\316\006E\275JQ5\275\031\004\202\274\372\\\264\274{L=\274\023t\306\274/\352\221<CJ\324\274\266\205r<^o\327\274}\2758\275\3614\003\274\341\322\273<\306\014*<c\345\277<;`E\271XJ\267\273\r\242R\274\207\216-=\360\333==\205\314\037=\224\\\243;Bl8<\016 \207<0M\010=d\300\023=e0\345<\271\3222=p\340\242:\214Y\370\274\200\2223\274\0212<\275c\274N\274\004!L<\234\301.=\3348\r=\'\303\013=\332\3729\274\274\204\304;2b!=^\005F\274O\320[=-@\004=\211\007`<\2004 \275<Y/\273\220\217\003\275\232\207\034\275S]\005\275\243\223(\274\374\tn\273F#\365\274\022\006L=v\370D=\'#\004\273\342t\355\274Y\211\247\274\265\336:<\327\216.\275\254\235y\274\020\nS=&\022\026=x\\F\2750\255\245\272\353\033\022\2724~\373\273\225=Z==\037\374\273\201\356+\275\217T\001=\226)\323\274}N\361\274wm\225\2734\276\326:\340?N\275\342h\005=H\211\376<\271/;\275\027\374\031\275n\324\037\275\224n\355;\235eQ=\366Tw;\302\361\007=\210\003\211\274Fa=\275A\342J=,\321\215\274D\246k\274l\200\020\275\372|!=\337H\324<\310\2028\274\357\244\035=~3Y=\313\305U=\226(\016\271L\205\016<\210\301\334<6\324>=\220c\032\2744\342v<N@\234<\243{\030=*\030V\275\r\357\010=\216O\307\273\263Zz<\231\365\216<uM6<T\025b<B\353E=\252a\373<KH\264<\236|e<\'\240\020\274\035\220\014=Lc\037\275\375\221*=Z\367S=\016\263\242</\354?=\035\375\"=\361\263\004\273\0360\036=\325\2707<\306\024\026=\017\346\223\274F\266\n=\277wZ\275\303\301\336;\325\315\252\273\206\315\205;\304[\305<<0\211<,\203\035=W\212\254<\026\372\017=p{@\275\226l*<\205U\273<\033n\203\273\273\213S\273\031\274;=\231\030\373\273\360\2464=\024\255,\275_\254-=\t\202\016\275z\274\033\275J\2528=\2041F=\326\265\352\274\005S\233\2749\325\007<\226jT\275\235\347C\274\230\326\025<2+F=(\023\027=\r\232\343<\224\266\013\275\037+\235\274\240$\343\274Q\235\271\274\\\247\'=\000\263\322\272\245@\035=\306\262\234\274+\300!\274,\305\004<bS\335<4\242G=\3548\363\274\366\214F\275Q\007\313<\255\231\201<\215\334\214;\205\220[=\310\376\227<\206\373\262;\0246\270<\364\264\014\275\253\253\014\275\300s!=\352\365)=?\224\013=$`*\272P\232?\274\331\260l\274\311\2234\275\372\016l\274\352\007\252\273\022_;=8\373l\274\344o\354\272\303*8=W\333\336\273K\202\271<p\277^\274\003e\363\273Z\311\310\274=\250\341<\321\013V\275-p<=\005\267(\275\031\323R=\371\035\260\274\217G-\273\216\301\376\274\362\214\t<\365\263+\275\265\313\244\274Y\034.=|\001F\275\010\027\313<\027H\352\274?\"=\275%\316\"\274\201\347V\274L\354\277\273(\275\036=\272TZ\275\315\220\215<2\351-\275\037b2\275_\266\267<\260\242\032:e\312\206<Fn-=U/s\2728\376\255<\n\201k93\375*\275\245\313U\275\026\254Z;X\271\002<;\256\356<\3672\237;\202\301\304<h\0001=\025\t\n;I\362J\275T\010\276;\365\344\277<M1\345;ni\026\2746\342O\275B\317\247\273\246\242I=\335cZ\275\316\255\016\275\312\213 =\321 \334\274\261W\247<\036\262\331\274LM\010\275\331\nU=\346{i\274me\264<\331\024M=\233V==\026w\006\275\035`%\275G\267\326;X\232k\274\234\355\000\275\263\355\216<\201\3351\275\305\014\245<\352\225\302<\036zA\275m\336\337<c\305L\275\363R\373;/\013P=+\333\000\275\251\311\376\274\374\334\231<ws\367\273\207\260!<\230\002\363\273i\202>=\335\216\224\273\212\245\'\2751\3004=\3104\235\2749$P\275r\377.=\312\204I\274\275w\215<\211\317;\275\322\304\017=O\027\361\274M\2544\275\236\211.<\020\264\263\272\023\356\017\275\333&\037=\350$\232\272\315}\345\274\032d\014<\264\300P:Z\013\327\2742.\377\273\240\r\256\274\232:\'=b\202U\274\002\205\343;\037\242J\275\334VN;\364^>\275\364\374\310<DB2\274k\3741<NZ\004\275\352\222\321\274f\205\260:\002\345\366<[{@=\235\270\373<&\321T\275\373\362\000\275\351\005B\274\300\026h\270Q\353\301\274\020k\272<\252\225E\274\004f\253\274\357\216C\275\257}\224\273\020$3\275\215\351\361<\213P\231;\222\2527=\227\326\342\274\344\223\020=\301]&\274\033J\037\275\254\240\343<\332\010\002\275~e\356;\314\273P\275e\013H<HoY<9\316\021\275\274\037f<5*\250\274D\214D\275O\035\367<\'K\335<\333H\301\274\317M\177\274A\316\252\274\216\275\360;[R\361<A\207\270\274\236\327%\275\021\376\024;qD7=\3076\034\274>\325.\275m\305\032=buY;*S\231<q\031\200<U\315t<\366pT\275\304\321\006=\311TB=\207\036\267\274\323\2356<L\304-=\272\362\351<-\225\237;\326\"O=\233\254\025=\254\242\n\274\0133\032\275\210,8\275$\313\205\272\275\326\213\271r\222\014=Zb7\274^\374\031=\227\027\235\273\342)A=L\333\366<\330\013\004\273}\330\t\275\230\336\210\272\'\310\323;U_\220\274JJ\314<@\3222=\227k\206<\027\356\316\273\2614\031=w\312+\2750\251\033\274 )8\275+8\032<\344(_<\271Y\177<\214@\033=\0257@\275{\332\002\275&\002E=\215(\230\273\365)+\275C\310\345\274\347\337\311<\372\363\370<\330\216\"\275\327\315\005=\000\310\363\272A\3321=0\t\215\274\200\326\020=\327\331\035\275\010x\335\273\242\373\037\275c#\002=\301\270\236;\265i9=T?P<\350RR=\'u\267\273\245Z\247\274\021\247?=l\334\375:\342\377S=\'4D=\305H\013=bO\031=vp\231<\017\373i\274\211\366\221\274p\241\033\274y{==- \264\274\264I\363:<;\300<\314\2657=\270\234Z=N\335E\275@\353\344<\327J^\2747e\000\275\360[\230\2744Y\215:GDE\275\241\257\267<\265\0355\275L\006\306\274+\256]<b\205\003=\302>\336<\204`\360<&\001Z<\3451\335\274\330\304N=\246\377\207\274/`\324\274@ \200\274\301\355U=\315\3732=\272(\005\275\316\243P\275\362@e\274\253\361G=\336\350:\275\264\002\n<\326\037c\274y\322\036\275\345H(\2757\017Q=\217\270\214:\375\213\366<\026\372\347\2728d\034\275\212\201A\275\215Y\370\273\366\222\360;I\267[\275\n\036N=|PC=\266)K<\307\256*\275\273t\311<\027:\237\274\252\344-\275\342\333\002=q\n\203\273P\230Z\274\004\r4\275\000D\'=\203\033\207\2741\2215=\203\036\356;\013\252i\274\254\230Q=\362\223\303\2741\267\261<\375\240X\275\345\326T\274\224\357\025\275\317\3401=\347\025\304\274w\333\206<3E<=\341HC=D\367\023=\023B2\275}\272%=\251;?;\265| =1R\007\274\305\035P=\272\301\'\275\357nT\275\377\367\260\274\274\006M\275\226x\253\273`\366\227\274\277\247\340\274$\020\245\274\215\327Z=\315\312\036=\352\272\031=\375aC<2\315\314\274\262c\016=f\273\001=.\335u\273\236$;\275Z\211Y\275ao\264\274\261\320K\275HA\267<\203 \326\273 \376\013=\262\212\374<<\363\215\274\224\333e\273B\007\204\273]\305.=\326\213\317\274\321\307B\274\014\345\242;\341\037\'=i\235\247\273:w\030\274\331\354Z\275)d#=\2563I\275S\'#\273\245\020\210<\271+\265<\303\273T=\216\312^<\315u\010<\2705\255\274\356\207H=\253p\242\274\376\273/=xF\327<\374\357\311<S\226\304<\230\364!=\272hz\274\270\037\221\273\202VL=-\'E<\0248\025=r\230\023\275\032l%=PG\027=\262\344\326\274=\034<\275\251\021\361\272\002\0276\275\270\232\366\273N\230\343\274&f8=@\314\230<\346\350\300<w\245i<\001\366R\2741\312W\275djM=\354\275\377\272\341\370\004\275\313\363$={\207\232<\243\317\241\273!j0<\223\304\332\2739\310\036\275\341\027\363\273\027\014?=\334\357t\273\305>\273<\216\252\\\270\022\235\255\273;\003Y\275\024a6=\325#\327\274\020\266\240\274\336\273\010=a~9=\333\037\230<\275\023%\275\247\214\352\273\027SP\275\274\007 \275\330J)=\363\350\017\274\233n\315\274\t\035A=\337\342\304\273\303%\036<FNK=\253\315C=R8\213<\310\357<\274c\302J\275B)C=\344\303\205;\272\375\314\267\n\367-\275\325e1\275=\247:=\203\260\010\275\344[\235\273jCT\275\272x\'=o\316\034\275\200\316z\274EO4<\277G\371\274&\022H=\337\335T=\333\224m<\342\370S=\271\341\340;\261[\364<\306\211\271\274\010\260\014=t\322\026;\345\244\245\274:M\347\274\207\005\017\275k\330W\275Y\024\362<Z\273.=J\254\337<3a!=\267\006\374\274\005\227\032=|\016\033=2\215\035;\347\201\037;Wg\350<e\272\366<0\003\246<b\266\230<@\274S\275a\003!\275\177\207\014;\rO\357<\200@\025\275\031H \2742\336\222\272\332WQ\275\222ZG=!\216\204<@\317\376<V\230\316\274_\016==\022~\326<$\324\333;\273QI=@\364\216\272\3318\222<\361\366\000\274\217\002>\275\315\372!=\002t[\275\331\360\235\274\357\201Q=\210O5=\321\243\313:\030\027o<\036\256\t\275Oo\300<Sp4=\311\256\346;\203\376\203\274\002\325\236\271\340\0327=\311\223\034=\215Z\021\275\026\333\300<\240\317\314\274\333\2676=\302\035)\275\241\220\007=\236\026\'\275\365$\026=\013\266\354\274j\377\252<Qb\360\274\324[\342\274\266\027\335\274\30047=Z\355T\274hKT=\007u\316<v\234\266\274T\361\010=q\023a<\302\333\330\274\024\233;\274\027\266\335\274\364\006.<\344\302J<\330\206\t<\004\272\317\274\256\260\204\2742\214\027\275\267\223\376<[\222\313\274`=L\275/\324\344<_\367\271<\365!\\<\204\302\014\275d\374H=\246\206G\275\371Q\331\272k\265]<|\326\017=\217\025!\275!\336\013<4\\\027=\222I\"=\003\354!\275\315\n[=y*\326<\270\004\205:\300\036\330\274A\351.=\303\216\261\274\275F\227;\212\222\322<\344\213L\274C\341v\274\363,L\275\374\2460\274[J\032=2\247\271<\2526\330\274\223\2034<\2116\264\273\332\203H=\003:\177\274\227$?\275\r\333Q\274\006+`\274\217\210\020=\207\014)=\032\252#\275f\337\024=\333\307\244<^uO\275\312\356Z=.\000\371\274\002\351\007\275\263\215\000=\025\367\001\274\363I\243<K\265S\275\020G\035\275\022\371*=G2\310<\025\347\374\274\346u\363<\023\223>=\373\336d\273\356lJ\275\336\037\253<_\222$\274\270\273\355\274\305\033==\266\037\021\275\231\246\026\274Q\302T\275\254WG\274\247\3524\275\213\204\014=8\373V=#.R=0\251B=\347d\226\274\371L\007\275\363\316)\275:\000\335<.u\345;\345\002\266\274R\321\302<\346\337\377\273\005oU=\234^5<8\236\032<\245\245\002\275U\021$\275rMI\275\346\261N<\250\3553\275\211\261W=7EG\275\364>\365\273\227Kt\274y\370\324\274Wp\341<\3465\350\274\301\337X\275N\252\344\274\013!E\275\374p\212\273\265\037\025\275\030;\210\274\205f\212\274W\343:\274z\235\301;x\014J\275\035b\213;\331\357\312<\205\376\323\274*,:\274\347\276\342\274\2737\261;\320q\257\274q\303\331\273\231\363\253<\036\367\332<\277#\024=\323\021\364<MW\363<\353\2575<>\035\231\273\034X\1779\034\305\037\275Ov\324;\216\255\264\274G\037O=\016\213N\275\216~\036\274\036\037\014\275\006\355*<\350u\376\274\345\035\022\275lxM=VX=\275`\177\345\274;\344A=\206,\006\275\260_\023\273\375p\005\275\214\320>\275%\004\315<\302\320@\273Bh2\274\376\324\370\274D\215i\274\303\2308\275e\3325\275\376\177*\275^0=\2743\342V\275\266\365\035\275\255g\277<\220\334+=2&X\274\205\306\234<k<\034\274\263\t\240<I\214I9w\310V=\301\205D\275 [\002=TQ\335\274\267XT\274018<mPK<2\022\274\274\025U\322<r\222\300<\304~P\275:\2360\275\035\252B=t\374\304<\356W\307\274\304\332.\275\303)\035\275\325\276)\274&h\271<\331P\005\275\201\350\332<\210\2039;|p\331<\365\267\024=\357\253\022\275\237K\367\274O\0004\275g\231\200<\024X\207;\252\270G\275\270\203\030\274\031\225\003=f\346L<Q.\246\273(\347%\274T\275,\273\367\245P\275\212\277S\275\201\265i<\236\202\036\275)\326\361<v\326\020\275\302\366\274<\335o\321\274!}\211<A\315/\273\374\362\300\273\230l\372<\247R\216:\004\003U\272\354\253C\275\275#\266\274\304\022\245\274V\313(=\024\247F\275\264(\322\274@\242\356<\310\230>\275y~\236\274\347\212\345\274I\020\003\275A\215*\275\354\300\037=\251\342y<\210\256-\274\334\213~\273\210\317\233\274\024\024/=\364\001\034=A\203V<]\352J\275\031H3\275]1\231<\350\220t;\177\274X=9\2772\275\003\001\316;\344\'h<\363f\316\273k\325X=\376:\'\273\177\r\300<\227\306\003=)\201\002=\245\324\n\275z\227\336\274\211H\014\275\311\330\365<E\207\257\274\356\373\036\275\201\257\031\275\336\373\300\274O\014Z\274\354-4\275\\\214\373\274t\030\007\275TZ&\275%R\337;\327\000E\274\303\010\"\273\242^@=[3\350<\323\024U</\2503\275gW\r\275\204\022\321<\310:\000=P(<\273\025\004\002\275\267\3041<N\366\305:r4P\275\216\033\021\275\231\233\006\275x\315\213\274\235\356B\274\347\212\327<\345\022\025\274<#\211<\31075\275\001\034\263<\027\217\013=\226\032U=\256iM\273\207d\344:\033\242\241\274>\343F=\004\372y<\227\320!=\260+\215\274_\021\227\274\262\363p<bU\016\275=n4\275\222~\006<#\360\366\274{\007\250\274\177\016\332\274\244J\034=\363K\021\275>\354@<\364\314\332\274\331\205\200<\333\253(\275\304oM\275\307\031\261\274\235\272\300\272\236\275L<9\250H\274(\255q\274\252\260S=\0168B\274\240\244\230<#N0\274\324(\016\275\005\273\177\274\372%\005=e\257\251\274\227\232\355\274\003\242\"=\345\246\247\274/iT\275\325z.=+\207Z\274\002\027\244<\374\204\357\273l\017\262\273oX\323<\275\2138\274\250\344\273\274\rI\241\274>\261Q=\220\251\333\274\213\223\331\274}\302\r:\260\225\032=\376#\325;\374\377M=\010up\2747\326\215<\234|\234;\nz9\275\365\217*\274\234\375\330\274e\215\002\274\315\304-=\252#E\275\216\370\201\274\t\274/\275\337]\352\274\230.\222<\205\035\023;d\302H<\252\272>;\317xK=x)\004<\343\234D\273\247;\236\274\307\202\035\275\240\377\001;\307\341\273\274\010?3=\"W4<\201\r\033\275cZH<y\315,=\214\350\231\274\377\356==\372\323g;A\t&\2758\237\201;\203\033\302\274\206\254\365\274o\224E<\345s\302\274\246,\373\274\316\307A\275\332\333#\275\250\213\254\274#[\000\275\231#D=\217\216N\2753\206\223<R~8=\237\256\362\274:\211\312<\216s\215\273\315\374\013=\010]\005=e\357\024\275\264x\000=\036gU=\360\326R=.\334\016={\244\225;c\241\357<\315\237\204\274q\322\255\274\003Y\340\274\252\254\005=\277\177\213\274T\000y\274\016\251\303<\331\3554=\330\276J\275\252\024\331\273O\r\017\275\\\034\243\274\016\327H=OO\026=s\031S=\315\346y<?\017\250\274\374\203\213\273\332\020L;R\211\214\274/\2767=\250\261;\275\004J\343<W&M\275n\030H\274q\305/<X\262?=\360z2<<&\371\273\035~O=\254\3267=\233w\327<\341\306\036\275\033\350\037\274?~\231\274\257\245\007\275\301\n\314<Z\365A<\020J\356;j\341\211;s\330,\275\207=(<k\315\304<\230\306\337<b[\264<\263\204\020=\203\2233\275n\010\020=\031\\\250\274}\000\023=\021PG=\177\327\031\275\010\274\026=\0109\307<T\316\315<\006\275 =?\306:\275\343\371\316\272\2338(\274\342\312\016\275>\242\"\275w\274;<\320\331\004=\314\264\221<\013\002\376\274\232\327\010<\030\323C<X\"\013\275\344SZ=\263\364*<VO\245\274\371\374<\275w\353\t\275\273\013G\274;K\364\2746\357P\275_\211\350<\"Fr\274l\315\251\2748^\364\274wZ\316<\326q\366\274\270T\273<\242\017\033=Y\332\311<\311\231\020\274\351\354\022<\177k\353<\344\340y:\n\021L\275\244\325\177\274\353y\234<v\274\347;\277\233\215<2\253\023=x\023\n=\257\326\033\274O\327\007\275 \343\233<\337\242\342\272\236\357$=r\346\037=j\304\207<\0207b<\275\273\312\273!\257\360<\r\347,=m\330\261:\367\363\035<X\231\304<\221\330h<\351\220(=\017\022\276\273\032\213V\273\270\241\326\273\337\3618=}*\261\274&M\201:\013r\022\275Q/>=\334\260\037\2754y\205\274{\243`\273\004\333.\275\221\361\263<PDx\274\361\367\265<5d/=\235\271Z<\234Q8\274e\026\004\275i\264D\275\032\225Q\275\222\313\306<\203k8<D3/\275Cw\311;\313r\341\274\315\311\266\274\3209\310<\036v\316<\265\326\333<\371\276/<f8\323<\240)\025\275\225\016}<\373\336\'=\277\230\336\274\375o$=O\3315\274\310`v<\321\333\336\274\tm0=[\345\322\274&J\326<~{\021<(x5\275\355n\352\274N\247\244\273\276\236\275\274\032\327Y\275\023\336A\275\234\252\373;\343&\'\275\337\253\272\274\037\313\016=\263\033\027\275`\255Q\274%\022\001\275\273\277==\244_<=\271X\024;{%{\274\361\201T=\030\024I\2758\001\364<\032\203\022\274\301\026N=V\371~<z\204\266<\321\364\307\274\251OT:q\2102<\375\275\037=\347\342\312\271\352\314\240\274\220\1776\275~\277*\275?\304*\275\254q\337<\003\332s\274\256\276\330\274\262T\224;E\016\377<\211>p<.\376\'<PD%\274\3434V\275\272\027$=G\223F=\367\356\374\274\002,}<=P\013\275\265|.\275\242\247\215<\330k0\2751DZ=\357\022\031=7\300_\274\030O\253\274\375\035*\275\025\330\002=+\345\370<Z\013\366<X\346\344<\177s\347\274\020h?\275\331\237\016\275O\036\007=\025#o<\314\274W:\241d\362<\035\345\243\274\241\222(\271\030\331M<\374;\363<B\001\242<\223\266)\275&z\010\274\0164X<k\212F<\3609\215\274\021h\2729\2625\\\274\201\206\315\274\221\347\221<AR\016\275A\200\036\275VL\252\274\006\363\024=\"6j<\025\354\362\274\223\032\022=u9T\273+\'\344<\007p4\275F\017\210;m\3048\273T\373\330;\"\272&\275t]3=\2013\031\275\010\332G\275~\243\270\274@LH=\231\217\326<\342\242\036\275W\262\255\274\325c\273<HC\016=e$:=\'O\261\273]\004A=\244J\025\275\331\266\232\274o\360\376\274M\360H\274?\306\260\274\007W\036\274\314\334\022\274)|F\275\331\334\330<p\035\344<#K\032\273{\265\037=\204\301Z=\370\303\263\274\203\035v<x\222\360<\377\256\320<\314\355\016=\357\322\200<\261G\217<\0326\277;\307\375\277<\257J\300<E\007$=w\t\035\274\200\210\260<h\t2=\233\3057=J\257W\275\340\372\005\273\310\305 <\314\244\366\274 ]J=B\354\363\273\237>\271<\233\321\255;\361\234\305\274\217p$=\207\0372\275m~u<\214\2145\275Y\372\202;[\252\334\273M\277\360<\247:\030\275{D\242;\274>C\275[\036\027=\264\221\007\275\262\006\315\274\236\371\214;\201Iv<(\001\315\274\204\245\";\277\3004<:\016\373\273\020\353?<\022\351==\203HW=\300WM\274\276\271l<\023)\021=:gI=b\374\345\274\023\035\212<\202Q\365<x\256\272<\336\2115=L\215\007=AJ=\275\244\200:\275n6O=scH\274#6\002\275\016\004!\275\024s$==>\342\273l\034%\275\006&d\274\031\311\"<\3468\356\272\241wC\275\371\205\255;Y4\206<\364\222\371\2730\331\370<V\3664\275\3002\266\274\242\341\260\274gg\362\273\001\3248\275\'&\301\274l\233\255<gs\022=9\364\034\275\023e\323\273(\224\311\274\253P\215<\\U\305<yz9\274\210\210\336\272\260ae\274\005\266\241<&\036\031\275\224\234S=r\226\032\275f\204\3369\357h2=,\361Q\275\325[:=\211\243\262\273\226g\235<\261k\204;\r}\254<l6\034=\352/\312:\353*\332\274\260I*<U\236\'\274\347T3=@\021?\275~\014\331\273h\275\t\275\215\255\305;l\372y<\327\207,\275\031OJ=\263\005\006\275\305\210B\274L\r\207<qQ4\275\214,v<\201\020\211<H1\254<{\200\021\275\217\177\000\275I\n\371<\257\031\360<\327\335:=\246\002\024=\031\356&=\253p\210\274\353\340\263;\t\346\n\275=\267\261<Y\246S=\321,\222\274\203\235\r\275\372\232\245;\210\364A\273\312\301Y=D\251\373\274\342\240$\274\224\371K\274\343)X={\2149\275\004\005\316<\265\316\205\274\235qE=y\372)<\310=\324\272\030\231\273<\344\007\362\274\323\261\023\275\355EI\274:\020\321\274\201\313\211\273\014/T=3h\313\2742\031\'\275\370\274~\274\322\240W\272\020\2664=\221\\\031\275\202X\001=\213I=\275K\343\014=\375\275\303\274S\262\000\275\313\003=\274\313\253\256<\200\013$\275\372\035Z=\356\273\037=\223e$<t*P=\307\224\356;\3335\307<v\001\344<@\240\327\274/r\373<\000\340L\275$\320==]<\027\275\327m\370;4\2239<\363\304\202<^\3100\274\376(!<j\303i\274W\242\356<\021/\021=\341\272\275;\315\024#\275f0~\2744\005\275\274#\2764\274\325\304.\274L\032B<\346;\002\274\343a\037\275\361_0=\356[\337\273mR\277<\362\026\001\275\226\024\270<T\374\033\275\003\247-\275\0259\000=8\005\314<m\340B=\321\260G\275:i!=!S\021=\230SB=]\n\250<4\"==\t\331\313\274\211\331\r=~\315q<\no\341<\263\357\302\274\201\304\221\274\300\226\260\274\006\333I\274V\373\366\274\201e\006\274\251\306v\273\306\251\356;\311O,\275\356\340Q=%mM\275\222\320\254<\034\273\007=\364\236\024\275\250F\016=O7\364<\202\271\316\272\'D\317\274\337\257\324<\340\371\254<{\234X=\302k\351\274\364\213E\274,\360\206\274\256\t\276\274\243\0328\275\250\204\251\272\236}\226<\310i\007<j\003\215\274Uk\035\275\213\244D=(\376\312<V\321y<\005\265%=\237\246\256\274\021\355^<%!\337;\301\262\010=\026(y<6\375\"\2743v\355\274\2264\342\274!\016\203<\360tq<\007Qx;\371\217\006=}C\371;\367\254y\274\265\351-\275\370`\230\274\"3\001\275+\257X\275\213`\002\275\377c\323\274\336\247\370\274\214\273T\274|{\002\275U\234*\275\371|\037=\372\3151=i=n\274WvQ=5,\256<\306\017%<^;]\274\271\277\016\275\332\227\025=\251\033\373<\\\006!<K\210\t\275?\264$\274;\1774={R\272<\030\217\033;\254\305\025\275\351\367\377<\177\347\177<\034_\346<\316f/=\366+o\273\016\021L=d\364\227<\222\323f<\257\214;\275\3404:\275\017\223\376\2734\\\360\274\004\327-=\341[\365<Rzq\274\357w\267<\240\020\032=`\340\351\274\245w\037\275a-\265\2748\3009=2x8=mi\343\273\352\202\002\273\020g\r\275\323\3006\275\344bB=4\376\201\274C\006\264:\374\034\013=!\301\272<e.\201\274\356-!\275\014\377\325\274\372\226\032\275!\r\316;hm\365<\246Ja;K\275\362\273r\260\263<\017\352\036\2757\277Q=\010\001\270\274\354\002\345\274I\364C=}s\267\274>@\306<\343\2246;~\014P\274\022\261@\274\244\254A\275\214\275U\274\302\'\002\273\231\2641=\263\004d;\310C\314<u]\020\275\001q+\275N\263\017=x\200\262<9\023\365<K\034*\275\006\006:<\220&\t\275\322\317R=\340\357X<\271j\016\275\357]!=D\267\313<)~\325<\273\305\036\275\322\235J\275\313\020\325;\'#A\274g\262\235;F\247\323<f\240M=~V\"\275\025\260\036\275,\362\376\274\022\202\364\274)\013N\275\352\367\014=`e\337<\321\307%=\205\341\310\273\373MY\273\t(\020\275\314\3163=\370\264R\274 $\036\275\215\275\201<\234\337\205\273^*R=V\005c<T\031D<\247i\355;O\301A\273H\021%\275\272\335\236< \274D\275Y6\033\275Qk\257\274y\374|\274\234=\221\273}\273i<\224C#={\004\025<\021\342\027\2754\"\251\274-\246\016=G\356R\275\355\240\"\275G\365\300\274 \210D<\323\312O\275\341RI\275\221\022\267\274\301\343\000\275v\255%=?L\037\275 \320\034\273\375\312\236<\346VW\275|\260\214<\357\013\006=|\344P\274\031\256D=s#\302<\254\016W=\266t\370\274\323\202\376<\271\202s<\300m\300<gQ\340\274\311\364\264\273\005\360\366\274\203\247\002\275U\226\020=*<L\274\025\320\264\274\264\010\020=\204@\356\2743\270\320<\231\000\004\274\311\251\311\274\360\315\225;\253\n\250\274\266\223\025\2754\330\275;#\302\213\273\273\363\313\273n\376\030=?\350\336<\246(\203\274\253x\026=HD\362\273\256\007\345<r\005\036;\244\014\363<\301n[<=IQ<D\017\345\274:\214%\275\267\270\270\274\311\370\221\274w\260\250;E4E\274\253h\230<\303\2121=\3537C\275\311\367X=\325\3611\274L\241\325\273H6\335\273\232\226\034\273\343\"=\275Z\333I\274%\203\022=\321\274\013=J\336[\275\02734=\r\0016=\274\037\024\274\3111=\275\325o!\275|\2666\275a\0214=q\177\307<W\331\t\275du*\275E\317B;\027LB\275j/\320<\201\255Y;\263?1\275U\354\351\274\037P\352\274\3775[=\350*V=\'3\254\274\373M<\275Y\320B\2759\325\350\273\332\2146=lT\245<5\265.=\366\335\254\273A>`<\217\nJ=\262\237-\274\376\252\026=\355\231E\274\374\013:= 7Y\274\006G\025\275],6\275\241\026\031<\334\374C\275\001e\031\275\220E%\274q\245\016=\206C:\2753\232\215<\310p\014=\351\334\322\273\\\363I\274\210%\363<\300\267\257\274\262E\361<\365\232o<\352\204\267<\255N\216:\260\024H=Ba\246<!\350\010=\200\037C\275\231\032h;\366l2=\344[:\275\006+\315\273CD\357\274\224&\004:\254E\361<)\256\220<n\r\333<bf\231\274\343\266\'\275\335\0051=\367\200.;\277\272\030<\232fd\273\345\376\024<\233\301\224\2743\203\376\274\342W\244<a\307%\275\\7D\275\006\t\030=l8\234\274\262I\240\274\221k\026\272\000o\312<\253\025\206<U]\366;)\262W\275\035\217\330\273\337\276\270<\255\236D=\321Q\305\273.\321\001\275B\220<=zE\203<w\037\025=\243-B=\352\026<\274\260\315\021=5\211\330<\2403I=\022\322\371\273g\001F\274G-?9W\317\371\274Y\201!\275\367\2653=A\203\220<\270v\346<[\224\020;7\346\014\274\371\257Q=\234/\321\274\253\002\320\272?o\310<\207\331\236\274\333\022\312<\014\201#\275\236\366-<\345<\010=\240\301\027\275\364~\314\274\021\211\371<\352\331\326;ASY\275\332\250s\274\322\376\246<\310A(\275\0203\360<\000\331*\274\256\327\331\274\225WM\275\266_\356\274\302\342\030=\024\200#\275\340\331Q=&\220B=hO\325\274s\201\346\274\315,\001=T\007\010\275\373\2435=\251-t<\212 \277\274\376\036O\275]\013\254<\352\034\\\273\313\326\260\274c8\255\274J\2355=o)U\275j\025\227;=\263\002=\256?l\274\006\233P=\220f\207\273Y`F={G\037\275\177\370\216<\031d\r<7\215\200<(\246\206\274\232\274?=\230\231J=\304^Y\275\361\236\336\272\272\304\221\2745\214\323<^\316:=\250v2\275r}\"\275q\\\002\275\302\351\320;\353\300\027=\341F\261<\362\331\347<\327P\031<\345\322\224<D\254\272<\376J\032\275d]\336<\301\3138=w\223\351\271T\211\357:\343\202\350\274\304=\250<\262\246R\275\214P\025\274kQE\275\013H\245<\317\221\030=\315R\247\274Ah1=C\306\026=\177\354\361<=\316!\275\022\322;=h#\323\273\302\2660\275\301C\360<\316mH<\275\311\014<\222\2704:+\251*=>\304g\273\204-\364\274\215\002=\275\371\032\252:=\274\020\275{\263\212\274\353\242\230;\235#\310\274\334\216\347<\300/\r=3\t\014\275/\351\004=\346D\013\275\356c\034=AFP<\266\374\365<&!\035\275\377-m<\026\036\213;f\335\'\275\271Q\022\275\3518\357\273\254t<=\254Q\363\274\372\035G=\326D\325\272T_\363\274\275\211+=\326\005G=\377\2671<\224QN\275\364\200\244\274\303\327\363;\305\200\346\274\272\026X\275\355\t\234\273\255-\334<\252\342\201\274V=\034=\346\0268<\301\304\004\273b\374\274<\350\353\264\272q\010\264\274X\037\232;\267|\351<\353gZ\275\000E1\275k\030\026=U\273\006<\321\365\034=\\\245\304<\226[9=9\022\257\271r;Q\275OrN<\203S-\2747m\231<\3436\026\275\375\271\376\274\310H|<\202<\251\274)L\021\2755 c\274\304\014U\274g9*\274G\250\377<\300\004!=:\367\016\275xL$=\303\224\001=\371qS<H\010w\273\315\240\227\273~\213\313;\010\355\267\274G$$<r7C\275\276\022I=w\362`\274\246\350\354<Pu\002=\377D\376\274\325!D<\346\210\030<\274i\233\274\365\r\021\273\311\021\335<*)\t\275\017\277\331<\271/-\275\036\223y;\013J\022\275c\222\326\274\370[.=\307OW\275ne\231<\340*\331\274oC\017\272\177\0033\274Qz=\275\210\336\006=\251sZ\272\014EN\273\321aJ\275\302&~<\272\034.\274\231\340\275\274\343?\376<\322 H\273\305\302:=\261:\017=\345\2446=\007\361\023\274\021Y\314<\237\343\272<\366\334\223:t!T\275\275&/=xQL=\313\2660=o\032\025\275\037\216\325<N\004J\274\362\370]\274\221\3430\275\327\304.<\320>\267\274\350?\376<\006\304\270\273\317\317\002=r1-=rz\274<c\233|\274\t\254\276\273\210\032H<\322w\035=\345\235L<\237~\3519\035\277M<\215,\223<\234VR\2751M\240\274r\322\002\274L\251\254\274\263\274\220\271=\377\274<]\207\372\274\222\353Y<\256&\003\275\303>3\275B\340\014;ZJ7=\272?\266<^B\210<\257\224\020=8\214\032=\315\364=;\246\343\025\274c\332\033\275\337\235\353<\363\372\032\274)\242\200<w\350\305<\357:*\275;\322!\274\241\246T\275\022\331P=N\251O\275\335\302\007\273\343\221\022=\002\233\303;\334\314\233\273\'\030\n=[\007\007\275\222\222=<\n2\202\273\010\337\263<\221\210\"\275P\223I=N\267\016=yA`<\235s\271<\215\307\367\274\243\252t<\020\377q<|[\260\271\377\227&\274\245\350^\274\351\207?\275r\252Y\274^\243\017=\342\200E=\364S\220<F?/=[UW=wp\375<L\2026=%f\330<\336\204I\274\316\313J=\332;\205\273Q=\200\274^\324H\274\333\253\344\274iZ\002\275%!\250;b1\345\274\220JK=\372&\357<o\214\014\275&\016\305\273\265n};\351\234\250\274\310u*\275GE\275<\223\372\242<c.\021<7\0179<A\247\357<\215s$\275\026`\314<a[W=;\204\377\273#\235\035=\366B\344<hdR\275tAt\274`c4=/2\262<\244\204&\275|\305\276\274\206\371+\275\266?\r\275}\366\330\274Ro<=2\000\033\273\372mV\275\254\236O=\304\021\324\274upP\274l\010\024\275\310\317L=\tMS\275_\274\007\2756\267\201\274\\W\312;\214\375N\274l\\\017\275{\r\362<5\3251\275\0071\016=\245\360\334<0%\'\275\345a\242\274\300\331\250\274b\035\353<5v#;\tN\277;\010\216\256\274_@\374<\222s\317;\370\351\372;\0132\326<\250\306 \275\322\327B=E\307\"=t\347\247:0\023\242;>I\310<\311p\215\273\340\033\014=\206\333l:Z\231\256<Y\017\030=OTW<s\016K\275E\365\322:>\210\332<5,6=\247gT\275\264\330\025\275\257\313O\275\2527\276<}\253\202\274+\271V;m\344\375<\224z\004=\365J\325<\271\306\344\274r\336N=\300_\021\275\276\230/\274M*\367;\244:z<9%b\2748sz<Y\237\'\275\351<\020=\177\177\262\274\322\210\003=,\300C\275\223\337+=G\320T\275\032\274\241\274\275\341\243\274\027;G;}N\034\275\275\345F=n\007\003\275D\001\315<\312\226\320<GJ\255<\256pI=\350\242\'=\271\201\374\274\"\266I\273\303cn\274\244C[\2750i\023<?\225X=\033\003x;\222\246\017\275\272\372\030\275\327|\227\274M\n[\275m[\271\274\204\237\210<\366K\266\274\352U\026=\r\272\373<\255\277J\275\245\333\217;M\222\355\274\r\005\270<4\023\330\274_!X\275\316\2327\274\233\274R=\023\034\331\274\036\360U=lA\036=\210\374\264\274\303\357\2328\202\350\200;\317\017\003\275v\371W\275\003\007\270<Z\300S=\214`\3579&\365q<\035\325\237\274[\374A\275z\350\346\274\361\201#\275-\315\r<l|\004=\202\tG=\"&0\275\016\231I=\364\016\032=\3050\004=XC\016\275\342\332\272<\336Qc< \003@\274\362\266\340\274\245\037<\274w9\021=KI+=\261f\001\274r\333\346\274\350\006\234<\016\363\001=\265\000\260\273\027\320\251<\341>Q\275r\236\010;\007\000=<\213\026o\274\244\244>\275\252\310{\274v\241g\272R\206Q=\350\335\221\274*\262\260\272T\250j;Yz\\\274\307\312^\274\320=\317<\361\221\361<\\\260\005\275M\014\024\275\355\205\363;@+\004\275\322\"r\274\315 \257<\034\330\"<\000\360\032\275\2257\223\273\370\032\001\275\026\262\273\274\226\371\031=\351z\034\275u\235P\275\0066=\275\036**=tdG\275\017DR<k\203k\274\264\225\340<\232\375>\274z\241O\275l\323\333\274\001\\6\275\350\233\255\274\264\356+\274\007\223\247\274K\243\201<\256\201\222\273\275\375C\274D\031\222;\216\021\"\274\177\274$=\264\346\222\274\255\\Y=;a\237<E\341\302<\324\216\232;\344\352\\<z\225D\275\035\030\231\274\356^:\275\001\315O<9\356\264\274~\026Y=\352c&<\333} =dy\'\273\327\260R\275\253F8=1\037\302\274\r\301H<\366^G=\"\033\031\274\027\315+\274\313\rf<\206\004\303\274\177\013\025=\202\220A=\n\270\352<\312PA=\222|\255\274,P9=:A\214<E\007\277<1\332\204\274\370<B\275\330\235\246\274\356?\252\274\353\2076\275\311\026b<g\223>=\224\tJ<\177\306\357<\204q\014\275\347w\324\273\372NT=\235\t\2309Bj\355:JD[<y\330\352;\241\215s\274\n\301\350\273\370\033f\274DH?\275\020s,<2^!\275W\003s<%0\200\274\00477\275?fG=b\212.\275\334&==\271A$\275\220\227\221<\256\202U\275#\2449\275\200C\301\274Wi\271<\361\021\224\274\016r\227\273\257\354\276<}E[;\204\264y\274\276\242\374\274\3437x<\341\233\243\273\030^\345<\225\241\322\2744\362\372:EK`\274\003u\361\273\010P!\275r\253\364<\302$D\275\333\236\276\273\\\002S=U\354\223\274[q\024<K\263\376<Vx\000<%\270\246<\014\374\234;*Z\316<\303\320\031\275(K\305:~\206\307<\3145\304<c\373G=|JV=\252I\343\274\271\364\251;d\3300\275y5\017\275\250\315\322<\304\216N=\313\035M=u\352R=\r\313\013=\331\001\273\273PvU=\"\267\n\275)\272\020<\231x\313<\271\"\252\274\377\347:<\374\223\232;\221\022\014\273\243F1\272\212\315&\275\030\362\262\273\226/\251<\332\244\033\275N\000\r=\226\314H\275\342\357 \275\002\362\225<\021\214\362\273\341n\022<S\264\237\274RS\235\274P\334\374<\277\341\206<\221l\010\275\270\314J=/L\264;\000\2454<\024\357Z<5\2230<-k\022<9* \275\203V\271;\375P\246\273\306\2621=\225\2509\275&u>\275gG\214<\224\235\267<\2134\353<\305P\203\274\265Z\315\274\201\000\247\274u\220\003=k\320*\275\"\371\002<\207\215\004\274\n\311\025=\230\250\020\275.\323\307<?-\372\2749s!=M\330\367<\343\303@<~d\231;\246\322\343<\264a\326<\247x\334<p\037\332<`N\326<\357\321,\275\020\270Z\275\337\226C\275R\340i<\227rL\275\016\331`<\037\354\314<\334\321\004\275v\221\346\272\354\366Q=\205\211S\275\325\031A=\202\2724=\314E\357\274.@:=\237\315U=\032\370\342\274\244\311\"\274\316\2241\275T\261\022:TK\2008\2364I\275)\006\267\274\273?\365;\272~\221\274w<D\275\017^W=\006\214\271<\362\322\037=\260L\221<\236\'\234\274\245N\032\274+2\340;P\016\235\274\302z\213<\342\365\016\275:\262\272<xjA\275j\005\027<i\224P\275\032^G\275\026F\247<\371\237G=q\267J=\205l\024=\230v>\2752\350\031\273\255Q\223<\030$\346;\376\231\261\274\221\362N=\316>I<e\202\372;N};\275VYE\275\300Q\355\274|\023J\275\311z\025\274\033}H\275\320\342\335\274\340:\357\273\347[:\275\007D8=\214\325\301<\033\001\371\273~B\005\275\216\343\020=\357=\335;\334+\334<\342\025\350\274D\351\347<\0165\303<\263\0221=\'6$;l\343\024=\024\254\200;\006Y\023\275\367$\"\274\232\323\033\275)\342,=\374j#\275\231\360A\275\260\000\241<\264mW\275\351\304F<.\225\215\273\340\361W\275\323\276\301\273\272\201T=\274\366\265<\261\344\017=I\t\006=\371\205\014=\261\361\275\273C\273\322\274\340([\274V,\256<\361\223W=/g\036<\357\007Z<U\216\276<K\277\266<\370\2030\275\0350\022\275\014\254/=\3305\327\274V\352F\275\220LE\275&I\005=BI@=-+\314\274\247\001\251<&\2566\275\022\250\235\274\251\276\331\274\234\340\344<IEL=\343C\314\274\226x\353<N7\323<:\255\340<V~l<\000F8\274n\334E\275\243\016\246;\305%\031\273\255\352\355<\221EF=\277h\377\273[l\3619\342=;\275\262a<\273`\336\324<\374b\240\274\202\307Q=U\242&=\023[\032==\275\243<\321\004\255\274O\265B=\037\275\031\272b\231!\275\260\325\024\275j\322\013=3\rV\275\2334N\275\240\013G\2755\0264={&\013\274\340\244\000\274*\332M<5\231\236<\021>\327\273I\355\027=\326\345x\274\217\254*=\274\204v\274Xx\343<2\353\037\275\347Dp\274}\355\234:\353\336/\275X\347|:\257\013\034=\255\3113\275\351L\000=\335\343\376<\312E\277<\032s\001\275\021\262-=U\267\350\274\365\231<\274\355`\224\273\273\336\325\274\247U\326\274L\227\271\270h\340@=\323\254\031\275\2063\200\274\333w*=\344\250\002=\302\027\262\274\032\366\323\273\036\233\340<\212sR\274~7\020=zT\302\274\347\252\373\274\031\244\362\273\355\204\034\275\034\232\251\274=I\t\274bS8\275\344\2352\275\205\026\030=w\256\264;\002\355\r=\300\311\212\274\242\316[\274n\204\"<\016\2230\2756\206\014\275\353\260$\275\363\214\234<\371\016\205\273d\2063\275e\204J=T,#=\221\300\002\273\304MK=\267\276D;\205\237\207;\336\260\314\274\tj\031\275D\007\205<E\362\350\274\277Jq<\377)\360\274\266$H=\226/-\275\tG\264\273q\023\232<\331y~<4\2749\274p\004D\275\\\327;=Q\'\t\274\344\223P\275+*\355<S\311\023\275\302\301\346\274\235\355\202\274\367\203=\275\364\207\"\275\t\200\217\273\361\2063\275\275\022\261<\003\311o\272k|\370;+\220Q\275\230\037A<,;\266\274\223@\350<Bp\343<,\344X=\207\324\274\274eR\301\2734\025(\275\373\372V<0\0234=\332\374V\275\330@U<=B\366<jY\250<\241@\n=\231\341W\2756e1=\201\301\022\275j\027\001\275d\356\375<\227\253\372\274\351\016T=.N/\275.vF\274_\274;=g\275\211<\\%U\272\355*\367<1\030\2679*\370M\275\266\202g\274:Q.\275\013\317\330\274\263\366\033\275ND&\275\351j\266\274\2362S\275\234\033\n=\304uM\275\n\377\255\274\302\272\033\275X\222\355\274\235\361\007<\242\302\032<Z\246\270\272\214*\306;\006RW\275\377\'$\275L\342\005\273\245-{\273BG\000=m\034V=|o\357;n\370N\274]!y<\025\220.\275\365\016V\275[}\253<m\2660\275O\200&=\212\036,\275\325Y\337\274\320\264z\274\001\014\241\274\320\365\034=o\333[\275*,\027\274\234#\260<\273\025\207\273\333+\270\274oK\025=\252m1\275\0372\272<7p\n=\273\0212\274L9\224<\004\007\033=\007>I\275\243\234\346<\253\236Z\274;cL\275\253E\241\273\326\237\251<me\017;\013\026\226\274\353\037~\274\243j)\275h\354.\275\326%N=y\342\300\273s\241I\275\263\026\363<\032\t\035=\3134\n=\261\235\223\274Q\344\023=\317;/=\242\tY=&P-=\224\374\214\274\242\314\025=7\330B\275\025_\222\274\212\n\371<\347\317\031\275\332\345=<\276CP\2753\377G=\200b\322\274\251\200\000=y\377<\275\356\303\260\274\242\302\034\273\207\221\022=\332\020\317\274\027\223\031\275r\342=<\205\306\333\274G\326b\274\202\202\025=[v\372\2742P)\275PZ\277<\233\327\354;\203_?\274r\256\224<9\224\256<\257q\256<\212L\202\274\244&\037\274\366\307D\274>\251\347<\303\301\035\275|\200\247\273\346M\'=}L<<X>+\273\222\246\037<\266\342\004\275ZK\333\2741\250\372\274:\231Z\275\364P\271\274\216~\222\274\353z\020\275IbL\275 +\212<:)\325<\007i\242\274\3437\010\275R\354\'\275\020*<\272j\301Y\275\0178\014\275\010\325\323;VlR=A9$=\337i\362\274q\326$\275\212\006\\<\"\261\246\274+\020B<\200in<\315\233\001\275\374\014\027\274A\273\270\274\246A\350\274\276\363\203<[n\333\272\177B\002=\367\3642\275\336\220O;\344\251\\\273\362\212\262\272\224\205X\275Y\201\005=\325u\027=\342\033\355\273\217*\017=j\245\310\274,W\361<G\250\255;\002\205\216<\n\005\236<\000b#\275u\315\375<S\027-\275\000\\,;0aN\274,\336\246</\0254<?g8\275\304o\326\2746\304\244<\031\001\3269\007x3=s\226\327<0\232\'\272V\027\230\274\023p\360<\315v\246<I\246K=\251\350M\275o\010\030\274\002\366W=c\016i<\212TN\275\276\222\257<\017\265\005=\251]\375\273\365\240\326\274\303=\313\274\211#\360\274$\200\003\275\201X\343<S\366\035\275L\362\337\274\003\003\313\274\302\241\212\272I1\366<\254\350 <\354\364,=\237f\340<eI\204<k\346\037\275T\233D=\273\326.\275\016\371A=x\036\216<\362\006\305\273\232\036\343\274\033f\260<9\332\"=P\373\256\273\300\325\323\274\023\025\347<\362`\204\274\325\010 \275\345c\036=\007\241\365\274JG?;z\236+\274[\362\241\274\254~L<\316\035\007\275\030}\276<\337\301K=\237\355\367\274\261\320\350\274\320\251>=P\246&\273\322\353\371<\350\264\031=\322\362\004=J\361A=\206$\265<\235\024\010<\021\330<\275\245\032\034\275Q<7\275\200\277\002\275\252t\021\275\005p\014\274\347g\271;\0057H\275\3544-=)u\376\274C\rP\275p\2206\275\255\315\251\274\024$l\274\304\335\343\274L{\023<\177LT=\355\003/:\246!I\275\324\234\345:\0056\255\274\364cy<\356\000\366<\244+O=\312|\327<\263r-\275\247L\337<\311\325\255<\010*\252\2742\2214\275\347E\274\274Ke\373\274~\342y\273n\013\367<\227\204;;<\307\021\275\310\2517=\2338\233\274#}O=\216M\242:\002\210\037\274\'\263\243\274\375Y\022=\25645\275s\247\231<A|Y=\320\367\275<E[\205\272\020\213\215\274\270\321J\275\374M\354\273\203\257\365\273\360\265\250;\337D9\275\252rN=\373\277;\275}\034j\273\253n\310:1&\276\274\210\274,=\320\355/\275hvw\274>\267\006<\332P\325;\325@\352\272\265d5=C\377:\275\032B\360\274\256\3039=\037\356i\274Ri\235\273\227W,\274B\221\037<B\211<\275\223V\r\275P\230Z\275\364\344\034=\274/\320\274#2\252;\240\243G\275D\202[=\031\300\275\274\3731\223\273b\177\253\273\271\024.<A\236\332\274a\306h\273\321\312/\275\2379>\275\3319\324<\2037\350:\341$\236<*\344\311\272\335\217\341\274],\002\274p\003\032\275\000\261\3628F\354\330\274\267P:\275\204\234V\275X\272\365\274E\212\377\274\303\2353<\357hn<\353\345$=NP\"=\006a\023=\250\r)=\266\032\014\275]*\301<\250\273\264;\321Q\250\2744\241\000\275\n\276\210<\243\343\007\275B5\302<\305sP\275\222\253C<T\313\004\275\016\231\001=\362DW\275\271 \347<Twn\274\362\322B=\333\340\035\275\315\241\r\2752\031\341<v\3744=\250\007:=\027\253M=\332\244\215\274\006Y\017=\314\"\020=S\341\320\274)l\204:\322f\024\275pU\014<-\336\031\275\017\000\003\274\244\375Q=0-\t= \247o<\001\231z\273|\275\215\274\237_\003\275\\GB\275\303(\365\274c\030\317\273\365\222\303<\004\007\316\273`_Y;\307\343;\274\270\3119\274\277\303\217\274\311\237\231\274\265\275W=\3531O\273>z\t\274\306\235.\274\256\362Q\275\004GM=\035\251\016=\247P\262\274\241mE=S*\271<13;\275\351\256\010=v\322I\275\001\353\371<\014\306S=\035\313\224\273\371?\265:t\201\006\275k\270\323\274)\'\356<<,\007\275`\203\n=\264t =\247\272i\274\000*\302<\0076R\275\'\317,=\210\n\033\275\207\235\000=\315\002\016=6\210\206<v?S\275\t\033\301\274\362\3579\274\252\032 =eJ\007\275\373\270\355\274\302H\200<\\\324\027=\300[\370<\001\226\033\275\325P\312<5aA=P\205\364\274\016\177\273\274\345\327\237;Y\304\262\273\035\020\336\274\240k\272;\302Y\265\274\322\374\306<\217\rM\274\200m\317;SKN=\r\376\007\275-\365\010\275\3375.=j\325C=\350n@;c\354\227\274\034)\210<\264\261\014\275\302\357\245:\307\310\261<\361Lo<\203\036Z\275\360\337\233\274\340b\r<@\023\037=.sg\274/\352==\245\326Q\274\225\356\005\275\321\361O\275\024\324\267\274\371\252\017\275\333 \002=A\352\357\274\373\226\007=\2766\021\275\253\341:;\235\332\021;\242J5=\263.V=\235\372!\275\226\271\307\273\222\230\206<\363\027\366<\333\374\313<M\345T\273\321\221$=\356\304;=\313\302w:b#\320<\201\002;\274)m3\275\025\0324=B\226\361<?\271\007\275\260^\225\272,^0=\334\355\007\275\001\252\027\275\350\020\371<j\313\326\274\037\322\315\273\204N\350;\352\240/\275\024\230\275\274g\020\002\275\351\313\021=\021qE\274O\270V\275y&\037=\033\251\300<\325V3\275\205\037\035\275\363\240\330\274\303\tF\275E\033\235;\345\017-=\320|$\275\373L\362;\277y\222\274[\325:\275\013\314\234\274\3273\020=\030\024\230\274\035n\221<)\240i\274a\233_<p\203\313:\205\000\210\273\237\363\227<\331\305\002=g\014\017\275|\377\t:Z\347\"\275M\307\260<\023\234\314<\037\021\275\273\347\241\226\274>\'\242<r\037\004\275\243\225\307\274\037q6\274\326\305\037;\246\3732=n\227\307\274\262\2654\274a\025\272\274\256X\302<n L\275O]\305\274?\330$\275I\211\202\274I\025\323\272\251d\271\274\226\006\313\274\341\365Q\275\254t\000=\364\361\233\274\237;\003\275\347D\240<4\204M\275r\005\n<\331|\246<\263\003-\273\257\355\314\274tb\204<\300\332\005\275L\313\275\274%i\014=\220)\036=wC\241\274T\374\237<\335\271\300\274\302q\020\274\211.\212<\014$\203\274\323\361-\271\224\357\310<E\275@\275\355(-<\270\201r\274\375\373\350\272\265\345\026=\363\363P<$\000\316\274v\2033\2756\212\250\274\365=`\274tZ\n\275\370\230X\275\243\223\273\273\031\277A=\330Y\017\274\325eI=\340@8=\033\320\000\275\211\306L=x\343\257<\000\031\000<;\276\357\274\302\240r<\322\275\030<\316F\366\273\225\264\036=\262\026\215\274\035\306\320<\3429\326\273D\026W\275>-@\272QC\236\274\246<\031\275\271vH<\256\356\021\275\215\231\272\274vPo<\216\277\354\273}\247\222<Mv)=\275\373\213\274\335\256\010\275\272\006\236<n\023B=\025\206\356\273v\002-=;\221\332\270\360k\272:\255wU<\240_\216\274s\027\251;\336\312\241\274\313\220\270\274\230\005\343\273\364\205\'<\336\313*=&\311\352\274\027c/:*\364X=\350&\240\273/iK<\246t\036;\315\273E=\'6\333<\025Pm\274\324\342\003=\352[z\273\325\342\205\274\251\314\200<\004f\270<\314\261Q\274,\\~<\026oE\275f\362{\274I\032\327<0\026h;\326\362\345<\207\024Z\275\022z\346\273\016\315\017:\\\371T=\321\'\225<\177\275\025\275\344\263A\275\022\373\310\274>\263\"\275\r\2026=\215\353\022=\332\330I=.\037\016\275\321\232\341<r\346\303\2734\326S\274\353D\004\275\257%\226<\022kU<\027\303\325\274#\023+=\037\203\t<\274\253\025\275\177\314\273<\026k\364\273\250\265\371<\035\304-=\003\263\377<\240<\306\273\363\0168\275[X;<7\302>=\210\277R=\321\337G=\331OS=\307\273\'=A\034\217\272\362>S=%\313M=\005\204\215\274\006\316\301<\357\257\026=\222\225\273\273\212}?=\276\030b<$\243\330\274) \373\273\024\004-\275\363WX;In\243\274O\023\222\274\215\233p<\272\346\020=\336\'6\275\245=\006\275\264k\274<\020\017\223\274\211V\257<HrA\275\303e\240\274~\231\253\274\320\260[=\215o\346<~\022\214\274\016<\217\273\207\331\213;c2T=\373(:9\216\254\241<I\222\'=\337\"h\273\352\3503\275 \350\342;\235\2366=\377\3144\2753\264\250\274\362\331\030\274?\356\001\275\346\365>=\367\372\031=\361\373(\275$\206N=\304\240\377:)\355@\275\016\230\314<Oz;\2758\246U\275\277\355\004<\025\274U\275:\237J=n\347\037\275|\252\037\275U\272\023=\306:6<\266\2225\2744\346\245\2723d$=\241\325 \275]\017Y<\301\034e\273Y9\312\274\314h\274<\277\0252\275O\'\303\274\203\032M=\226\321\216<\321\302\356\274\264\237\230\274b/\017=\336 \322<\344O\313<\376\014\266\274f\341\033=\'0\366\272vl\004=\330\000\'\275\315Z\315<\363\006\020<\232\322\033=2\\\341<\'\032\365\274\250\243\316\273l\360\367\274\006J\207\272q/&={\2000<\316l\003\275c\331\271\274,&\036=W\016\364\274\304\351\306\274\022\030\236<\373\031\024<\321\345\275\274\n\300u<\272\025\200<\242n0\275\306MY\275\272\r\033;\2136\340<\300\255\274<\031px\273\010\346!=\371j\371<V\350r:\376^\010\273&\246W\275\362\311\'=\214\240O<\031\006\210\274\252y\030\275\347\373\307\274\347=\244\272\362h\220<\301J\020=O\177\225;B6\261\274aV/<O\210s<=\371M=G2\352\274\300\237\227\273>\332\000\275\242\014n9\311\200\035\275\341\331\350<|L9\275h\301Z\275c%;\275>Y\215<p\313\001=\262Q\306\273\211]\376<|\016\314\274-\005\233<>\013\032=\022\2140=P\255r\272\353x\274<\035\254M;\333\273W=\220\274}<L\302<=\331S\352\274\3678G=\367*1<\004\032Y;N4\312<\224\t\252<\r.\251\274\004\314H\275\367\330\016=~HA\275\351,\300\274\257\3354\275GWC=W\232J\274\236\273,\275\t\347\354\274C\325\225\274\345\211;=\367\372\214<\232\020\226<\\\317\017=b\036A\275%\217\331\274\364\327\007\275\202\016Y=@6J=\3307;\275\252 C\275\342\022A=\245\227K=\221A5\273\264\324\n=\013Q6;\215\226\005\275&\272L<U\342S\275\250\204\323<\207h\263<\274\3408\275\373\274\213\274\271\373I\275\222\006\272\2741E\302\274\177\244{<\214*[\275\223c%=\357\253\017=\251&\n\2758\223\n<\327e<\275]\037+<P\205\216\2739s\265;\222\270\200;\347r\266;\026\022\020=v7\316\274\202\020\355\274\r7y<\037\001\367<t\027F\274m\366*=\351;\364<\222%T\275\337+\032\267\250\261\244\272,\340\020\274Z\2558\275\300\2140\2752\221\270\274\245\323\236<K\022\315<\257\\W\275\205u\014\275\311&\262<\237\211\227\274d2\313\273\305{\322\274\306\031?=]\007\273<\303 H=l+\351<\211fN\275\320g\023\275Q\267\221<w\232\n=\237LH=\006\2616=@FU\275u_\004=\217o\357\274\216&\002\275B\004Y\271\020M\006=\366\362\377<\264g\232\274\276\002\033\275\207\002\244\274G\006I\275y\234\037\275\274\022\216;\261\351h<\t\250O\272\320\211\233\271K\357\245<\020\325\232<n\034\020<\363\'/\274\270\321\247<^\224\343<\353[\261\274\273\031\t\275\2368N=\352\001\232<a$==\315p\223;`\302\203\274\276&\r=\257\221;=#\366D9\272\020 =\355z(\275\0203@=\"J\251<\\k[\275~oN\272q\211\245;\304\240\033\272\267\333\032<6N\t=\305\347$=K\376\n\275C\002:\275\013\2369\275\273\240\\\274\256\344\350\274\227\327?=\320c\014\275\331\226\005=\257\325\264<\207\313\262<\241\210O=\270\256\004\275\252Ln:\250\325X\275\204\230.=\177S\005:\233\223\r\273\337`[\275v\274\034<&\2125\273a\233\"=\351\333\202\274\321\202(\275\355\266\330\274\003\362\373\274\035\306\343\274\2647Q=\305\244\374\273\240.M\275\273\313E=\227\322H\275\017X\016=\344\302\337<=\226J=\310\354\300\274=F7=\347\020Y=[8;=_I\"=-\231\026<\336\211&<{&\023\275\237>Y\275\242\230\213;\177\004\220\274K\2442\275\245\020\n\275\267\372I\274a\356B\275<*K\274j\325,\275\026 \247<\351t\270<Z\3267<dh\026=\365\017\250;t\253\032;\316\304\"\275\234\027\'\275\355\210\035\275tG>\275\31420\275Y\r\271\274x\200\016=p\273\363\272\370\354\241<\333l\231</W\261;\242\025\004=N\302\006\275\000o)<!2\212:N~N=K:a<MFA\275\320V\261\274\200\300z<\204d\372;\201\372\014=\222o@\275[g>\272a\271\033=\263\211\225\27425J\275I\355~\274Pl7\274\270\364\260\274iNI<\362\323<\275\353@F\275|\314\007\275\n\327\326\270]\001\014\275\006\223Q=,\021\023=\251e\265\273\335\022\231\274\252\024A=\250\004\200<\256\232\303\273\030}G\273\314\255\224<ei-\2759\205\373\274\305:\010\275\266\253\330\273\326+\205\274\302\010\344\274H\267\346\274\234\350\230\274\323\311\242\273\312\322\330<{43=\335e\243;\334\203c<p\374\272\274\360\350\257\274H\276\271\274\272\202\336\274\362\3758<n\343\364\274g\333\005=\324\036\224<\"\231<<\331\231`<\305,\'\275\267Z\n=\016\014\026=\362\344\335<\311\030m\274t-\026</\274J\274\336\250\377<H\324\224<\002?\250;Dc\214<3\375W=\222U\032\2753\222\344\273\"\250\017\275\225VA\274(\017?\274\312\272\342<\221\322H=Fy1=\255L\211<\217\327C<\311\367\032<\224\375\302\273=\000\021=\035J\035=a\302\002\275\024\003%<\252e\252\274\277\256\210;oz\340<\306sT\275l\362G\275\033\350\347<\212\2313<!\323\034\2755_\244\273\006D\033=Ij\316<\234W\337<\037\220\230:k,+\275\3628Z\275\005\007L\2751\022T=:\365%<\223\2062\275\236\025N=\377^\366<i\206O<HZ(\275\335\351=\273\311\022\362:\203E?\275z3V:Jv\211\274G\026\014\275\236\211\213\274\344\307L<1\234\230\274<L\276<\"\360\312\274p\022\361\274\275\225$=[\346\313\274\363\221\315;\032\317L\275\t\032\306\274\036\177.\275Ms\017=SQ\251\274\352\305\210\273\243\033:=\301<\014\275b\010\255\272\321\240S=\367\3504\275\360\3611\272\266\266\234<\001\001\227<\234\263#=~k\304\274y\2543\275\215c\373\274V\036\366\274*\225\303\274\354\020\265\274\004l\355\274x0U\275sbW\274\216i/<ym.\275\335\3546;\375\214\234<\002\307+=\271\0314\274\357\235\022=\235\333\354<3\335\002\275\016\3007\274\354\342\313\274\361\204]\274Dn)=\303\207\237;%\254L\275j,\001=\022\' \274\362MJ=\037\240C\275\304\033\026\275C~V\275g\032U;L\270\255<\377\372V\275;\245\t=\201\013\\=ih\025=\342\371\251\274\204\326\246\274r\305\235\274x\370\002=\254Z\260;$*\006=\323\n\337\274p7\267\273\313\333\014\275\230O\327<B\304\t\275\230\033\271\273+\2760=\023!\373\274\n\275I=,t\201\274\263\036\351\274\030\263\243\274r\322\016=?\370\024\275\332/0=\336\201P\274l\314\373<\336\333\255\273\354\373\177<\234/S\273\224\336j<\274.\266<\033\321\016\275\361\315B\275\014\020\317\274)\316\261<\277\t\005\274\366\337I=I4\203\274o\017\027=-1\032\274\313\341\242;\362\014\315\274\260_\313\274\222C\n=\236w=\275\257e\315;\224\367C\275\022\216\"<a\345\035=\rV8\275\344i&=aaH\275\276QS=HSJ\275U\207\004\274b\333i\274\223\253N<2\3034=_\210d<1\205O\275\240x\022\275\242\021\233\274\362>\217\274\356\240\317\274A\246\031\275\213\342\235<\307\215\360\274a\nu<]\247\326<\n\0076\275U,H\275\213\232\020\274\r\207\356\273\356\212*=\375\033\036\2750`\013\274\033\'\034=B\2062<\271\315\342\2733Z\215<\035\375\214\274\377\311>\274.^W=\300\030\244\273\275\272\035\2754%\224\273\340\202\023\2759\371\017=\r\210\t=}\355\222\274\333\010\262<>\373\032\275\216\010R\275\227\035\265<\230\261\203<\337\365)\274\256\303\202\274\025\302`</\313\330;\227\325\364<4\310\024\275a\341\031\2752\034\003\275\312\320\303<\317\260[\2752\251\207\274$!^<\252\026\001=\317\365\250<\007\277\215<d\230\255\274\330\203\277\274\034\002\371\274\022O=\275\255\'\213<FC\037\275Y\247\304:\261k\023=R\315S<9\376\343\274\232z\363\272\244\300\205\274\207\034\204<j$8\271T\210\223<<d\321;\222\202\334\2745\'\020\274\026l;\275XS1<\357\216#=\245\216\006\275\037@\365<\225\347\217\274\246\013\203<\261\310\t\274\312i\223\274a\032\007:d\020\221< \\o<\231\267\253<\207\233\372<\217Z7\275\355O\233\274\307^m\273\242\2361=\355\252j\274%\276U\275\344\247^\274\314\016\330<\245\177\360\273\231\263\313\274n\270\234:>\367\001\2744\2458\275\251\214\360<\232\212L\274MEQ=\205\240\233\274\344P\370\274R\302M\275\210^?\275\023\367\305;d\330\037=i\3013\275\240\376\332\274\356\260J=\240\r<\275\343\256\t=1u\013\274\30461\275\312dF\275Q\332{<\375\223V\275\365\023\373\273\302\207\026=0\024\022=\314%\360;\207\362A=\2510\036\275\023k\224<\366\323\203\274\017`\033=.\340\226\271\351\270:=F\325\230\273\3675-=x)\272\274\226x\030\274\005\211\n\274\342\356\375<\006W\002<\322]\237;\2210\343\274\241\341\321\273\365\3037\275\252\031\000\274\341\376a\274?\232O=\022Z\347:\343\222\371;|-\221\273\260\255\"\274l\264\257\274\224\032\322\274\312\221C\275\323{>\275\2132\034;\000\024\302<\224\340\274\273\367\0032\275\023C\262\274XmS\275\304q;\274z5w\274H\346M\273\017\352:=\266\263C=\t\214==E\347\355\273\027\316D=r\n\246<k\376P\275\355\267\367\274\222\342Z=R\251\362<5\010\272<\201\260;\271\242V*=\000;\205<\311&\300\274I\003-=A+\241;t\3378\275g\tZ=SM\002\275\264@\355<T\273\336\272\246\227@\275\n\254\370\273\230\032L=\036\312n\274*V\312\274$\217V\275\265\317\355<i\t\316\273\346\336+\275^\317\000\275\262g\004=\316\321r<r\305\007\275}\313\346\274\351\213&=Z\366\375\2749\367!=\325\342\364\273y&\343<\222 \037\274\357D\204\274+t\314\274\273\345+<#\362E<M\365L8\312\371\304;\003\022O\274\270\3047\275BwO=v\316\326<\024\354\037=\336\364F=\002aD\275\003\214\020\274\351O\313<Q\253\036=\2433i<,b\231\274\236Q>\274\204\354E=\360x.\275\242B\031=\340~\335\274%G\207<\332\203&=(ga\274\000,{\274\003Q\351<\237\370\207<X\204\177<\027C\\\274\251\n\001<e?J;\013y\250\273x>M\275\240\n\307<\3556\014\275\n\000\315;\254\3275\275\204\007\375<\204\020[\275\240\3073=\014\257S< \034 \275\305\361\363\274h\t\017=$\250\360\274yz+\274\344\364\006\275@\375T\275\202R%\275\276\336B=\356-\002=\005\252 =m4\023;\201/I\273\201\276\263<\241\365M=]*\001=\010`-\275\344\331L={\270*\275\251t\362\273L;?\275\036\265\'=O\207\350:\204\353\013;l\203Y\272\266\2559\275\"\003\351\273p\265\006=\311~\347\2740\263g\274\"\316\322;\007\243\354\274\352i\r=r\022\201\274\301?T\274\353\377e\272#\213%;\020O\222<\005\002\017=\263\371\034\275\337\376\270\274]I\026=\350Z\373<H\340\375<\266\322\240;i\027 =\240_\222\266\021\371\212\273\357H\340\2743\220\375<\376;\226;v\2003=\340!)=?n)=\242I*\274\017\240\356<M\220&\275\203\256-\275\373\232==\371[\004\274\025\366E\275c\021&;\325F3<\240\237\337\274$-O<\215v[=-\235*<\002\236/\2752\372V=\213~[\275\346\037\306\274##F\27282\263\274\315m\270;:\305\370:\341\3463<U$\301<^\355\315\274\021\337\030\275\'r\300<\203\322\253<\311\321\362\2748\377I<\021 L\275^\327\346\274`@\036\274\307\363\350\273L\255\022\275\235\372\264\272\344\326\035=\034\226I=^\327\002<\332\335\235<qBX=N\234\t<,\222\227\272\335\247\177\274\363J\273\274\305\303\246\274\2731\032<\017\224K<\353u\257\274k\247)=\311\232\257<m1\275\274G\305>\275\212&Y=\266\2338\275(a\010<m\2322\275\331\344O\275\211k\347<<(\017=\024\305T\275\337E\364\274\234\300\243\274\021\247A\274&\345\235\274u\216/=\027\256V\274\037QW\275\242k\270<\246\267P=\356b\332\274]\325\030=kZ\005=\372\010\022\275M\332Z\275\350&T\274\345N\361<kU\215\273\245s/<K\215\372\274)JJ=\361F\'\2753n\030\275\252}/=f8\355<\241\2737\2758\330\350<\016\363\217\274\273>y\274oLd;a\317.<\013;9\275\346\260x<GkI\274\242\316\207\274\350\005\032\275p\033\021\275#\340\216\273P\222\362\274\346\354}\2743p\370;\017_T\274l\234\036<\365\016S=\364\307m<\016\345\236\274d}}\273}\352\260<\001\260\244\274\006!\301\273&\207\037=$\210J<X \260\274\365\261\005=e1J<\027),=\255\201*;\024\255C=\3359\310\274Q\2023=\253\201\365\274\307Q\234<\035rD\275\260\346\000<\340\030[\275\2237N\275\000\255\235<\324\200\235\274*\030\373<\322qz\271\321\237\341<\365\301\030=k\226\3059F\271X=\211 \365<\tK7=U\346A\275\344\256\004=\301bq\274J#\217\273\221\205\344\273`\'\204\274\017HQ\275\205\037\020\273\037_\001;v.\322\274?\030/\275\023g\"=eW&<\344r\252<\037\024H<\242\304\014\275\253\202\251<,\316$=m\267:=R\2656=!\270I\274A\n\t<\374\355\226<,\nD\275\344\343=<\315\343W=\354|E\273\003\\\210\274\206t\014\274\270\356\'\275>:\n=?k\337\274gW\024=\3623R=\357n\245\2741\014\351<\246V\317\2744\257\034<\236\246S;3.\352<\322\243\203\274\367$\251\272\"Y$\275\347\344\325\274\312\r\233\274e\205K\275\010\330\361<\301\237\324\274o\211,\275[#9=5\000\027\273\010L;\273\256I#\275w\255*=;\037*\275\"\200\272<\262N\234;\373/\"<2y\010=U\270M=m\237:\275C\270\004\275\222\356\016=WA\007\275u>\013\275\001&S\274\262R\021\275g\307\366\2748\3311\274\244t\r\275\026l\031=\232\022c<\007C\200;\235\250\262<\303|?\2755\031\250\2747!\311<&\364i\273\033\366u\274I\3465=;\031\037<\372n\367\274\260\325E\275j&\204:\003\370\300\274\356=\364<:\337\004\275\022l\320<\337?l<(e\t=\330\245\235\273\330)\317\273q/[=\332nM=\3433&\275\311\344\270<\0365\322\274\274T\243;\rh\243\274\036\374\036=-\220\013=\321|E<\363\360P\275\345\235\205;x\367\275\274Z\255\005<-\301(=\0243\032=\301\367\353\274\317\355Q=\0355\335<\r\245\223<q\275$\275\271;h\274\314yJ<j1y\273\207?e<\024/@<\301\276\337\274\027SC\275\2246\356\274\324\235m\274\313\372\034=\327L\340\273CW:=\307\247\341\274\373f\004=i`D<\206\304I<\364\265\252<f\276C\275\031+\007;-\212(\275\034s&\274$DE=\234\307\022<\275\270\320;\200U|<\177\3251=\207\036!\275\005u\246<\025\001\n\274\273\370\216;\201\301,=\031\231[=\357h+<\304\241\377<\017d$<\235`\007;-\365\022<\347\304\270<\241W{\274\33524=\243Pv\273b\367\313\274 \257/=\025-R=9\027\220<\307\n:;\337\014\327\274\223\335\025\275\026\036\t=B\276K<7Q\237\274\322\212j\274g\036\237\274(\0215<\2649*\275\307\374\250<\220p\032=\244\277\030=*\331/\275\231\354$=\033\267\037=\317,9\275\177\276\245\274 >2\275\\\303h\272c\270N\275&\300\037\275>U\'=\346\260\241\274t\301$\275zu\365;\300\266\014={t$\274i\250\034\275\201\004G\275\361\262U\275\313\023 \274\347\234\320\274\r+\000\275:B\220:\021\002\250<\326\370\203\274UK\004\274n(\224\274\2141\030\275\217\0211<\271/3=\274\314\005=\244\271-\275\224\030j<>0\001=\030\200\360<\337Z\255<\262\347/=\215!\230\274\232\373\025;\232\2124\274\356\367\n=\0300Z\275c<D\274$\203\234\274\263kf<\252\375;=\320P\357<jA\027\274\204\217J=\354d\306<t)C=\351\336\337\274\255\017F=\302d\364\274\357K\370<\001z\320<E\334==\273O\004:\311`m\274o\001`<\275A6\275\023\330X<\316\002\214\272\360\002+\275%\r\023\275\244\211:=\277q$=\271\000#=\210\361\365\274>S\257\273\006\2541=m\030\341\274*\021R;\033\036W=W\\+=\031x\002=\222\300\036<t\206B\274\374\227\006=\265\241\273\273Qo\236<\360?6=\206\267\361<a\374\304<\030/\027=\366\247T=z$\255<A\357\352<H\2305<\275a\027\275Sf5\2735\"A\275\\4\030;\305\236\344;\010F5=L\20598\021\224G=\267\216\034\275\036[5<h\003\r=(\000\225\274>\"P=\375\211\022<lr\205\274R\\5=~\371\002\275!\212\034\273_\n\266\274\016!\255<\360\353Q=\365\224\007\275\356m\027\274\325\304o\273F\250(=L:\376<\247C\243\274\317r7\275h\247\035=\003\224A=K<5\274:K@\275\276%\'\275\177\306M<\375-\207\274-{\230<\340@&\275\020\230\230\274S\310\347<y\334\034<\3423\242;\243\344.=\023j\016\273!J\325<)\2750\275\344\0372\275\220\321L<Gh\354\274|sH\275\'o\204;%4L\275K,B\275\367P1=\001\303\303\274\206\260\000=\260\320.=\370\277\006\274\375\357\365\274n\305\254\274_ \036\275/\224\312<\357p8\273\267^\026=\247\346\305;Mnl;<\366\024<\337\213\327\273\036y;=\ni\350\274?]\220\274g\376)\274Q\207P:\023\317I\274^n\351<\334\'X\275LzG=\027\035+=\241\307\332<\225\271\002=)\024\005=\276\265/\274\001\254I=\270\0141=z\305#\274p\265\021=\255\373\017<z@\264\273F\222\205\272\267L\220<\314\261\241\274\244\211Q\275\307B\352<r\340\253\274h\203y<\250\264Q\274EF\020\275\013\325:\273\237$\022\275\212x\025=@\224\316\274e\245\022<(\354\007\275\010\245\r\275\377\257S\275\027oU\274\337\200S=6\303\326\274\326\3510\275\226\265\016\275\263k\004<\035n\017\274B\355\257<\003\234\025\275,\257K<\274\205\364<\214\330<=_\272\206<\202O\035<\r\370P\275\326\025\212\274g\275\022=\256\226\344\273OO\017=c\262\017\275\227Sd;\324.\014<}\314\267<=fR;\363,/\274u\345-<\304r\323;\374\372\014\274us\003\274\261\003K=.&.<\255\244J=\250\271\221<\257\201Y\275\271:@=\35155\274\356\311e<%\211\241<F\301\223<o \222<\376%!=\367\"[<01\210:\317a\240<\300\354\354\274<\307\300\273\321\255\346\274\3108\371\274z\207&\275\275\372\033=\334\205\237<}\235\206\274\"l\005\275\002\274:=am\245<\255\036\206<a\216\261\274\245;A\275T\201\020\275s<\276<\204\007\035=5\333\326;\002r\024\273\2540(\275\251\354,\275!GL\275:V\223\2749\016\344\274e\007\322<\374\002\324<\007\261\006\275I\264\022\275K\010\225<\375\0264\275f\330H\275\013A\t=\226\037\027\275\340\274\207<\227\374^;L\255G=34\030=\273\004@\275GG\336\274\004\310\230<tH\345<\242\217;\275\223b-<\204\312-\275\025J\017=)w\005=r\325\254\274\347\377\344\274\201\004\203\273\366\tK\275\331JR\2749\203,<\210v\271\273\034\323B\275\303\273\032\275*\213\210<\225\357\234<\265\177\247;\372\307M<\274?\023\275\325\037\347\274\202a\341\274\004f#=\242O\261<h\261\277<f7\301\274\262\027\343\274R3\177\274\247\224\260<\003|\005\275\270\273\013\275\210\272\341<\224\252\n=;\"\250;I\302I\275C\317\010<\223j#\275\263\225Z<?\226\004\274\276n6\275\253\311W\275\373\243\321\274;\005\366\274?\332\035\274\035\206\003<\334(%=hK\212<\352e\206<)\302_<\022\350\363\274it;=c=X=J\362X=\026\036\024\275\020\240\013<\002\212A=>\204<\275u{N=T\242\031=O\3610<lY\352\273#e;\275\304\317\007\275\360\023\000\275\266\202\2029\005{\374\274L\343\032\275\212 \314\273e}\372<&i\233<m\301Q\275\342\353\270;\234\335x\2749\271K\275\177\335#=\236\243\231\274S\344C\274D\226\301\274z\310K=\3212&;\021S\357;\320@)<3K\312;\361\3650\275\306\364\031=\034\3322=w\306)=\351\310:\2745\007\365\272\010\014:<\001\0263\275T\362\336\274\275\240\026=[\242;<\202\020u<\303\202X\275\t\274N\275xrp<o\004\006\275\355\360&\273\307\034\352<\004\3640\275\215\201\370\273\263+\306;\362$H\275\351\3249=\300\022Q\275\337B#\274L\177\3329\004u#\275\222+K\275\334\262\220<\031S4\275IP!<\020{\376\274\263\020\331\273\205\333\323\274\003\312\306;Q\300\251\274v\210.=xC\251\274\"\263_\273\344o\212\274g)\350\274\356\262\353<PR\323<\257\000[\274*K\231<\t\220N\275\tdE={\004$\275\351\273\037=\352h\354\2716\351\216<C\245\"\275Oj\023\275\223\201K\274R\235\034;\303\233 =P\360\262;V\357!=\017\332.;\320z\037\275\344\322\242\274\020\240\005\275\334f\010=rI1<\315a\r<\327A<==r\263<\337\007\017\275\227\306\033=\247\355\'\275\014\021O=\220\235\002\275\234\305m<\231\340\001=\034!B\275\\F;=;\264J\275\004\246<\275\010\225\017\274y\323\351\274x\2665\275LK==\216\024\266<\345:1=G\023\030=\257M\"\274\025\2320=K\023+\275\342\262\\\274\345\233\032\275Hc\350\274z\0100=\226\010\206\274\0323U=\005VL\275\303#\014:\006\347>=m(,<N\204\026=\t$U\275\242\215\237<\200Q\014\274\361\356b<\327\377\263<\010\250\212\274\n\203=\272d\0063\275\217\351!<\2015\010\274\032\003\006=\341nQ\275\305H\022=\205j5;0\3538=\031\nM=RsC=B\266:=u\246\2539\327\262\231\273\270z\362\274Z~\003\2750\235\254\2740\026\221\274\2121G\275\347@H\274\307%\314;\310\2203=\203m\364<\262\037(<\233\007X\275\365\344\031=B\276\365\271\375L\341<\005\324\017=W\337$=i\004\216<\277`X\275\033\244\343<\314\3140<\316M\325\274\013<@\275\23285=\267XD=\231\356\016<\207\036$<[\036\037\275\323\211\000=L\377.:\0030B=?:\303;\222\222\016=\3628\246<6\032\347;)\336\342\274\007uC\273\272\305=\275f\347\260\274\200%\324\272Q\302L=\032\364\372\2725]\364\274bD\304<\277\214\t=\374\321\242<2\327E=\306,>\275+\317\030\275\003\305+\275n[\264\274\032\215\222<\317/\202<\226\3106\275\207\243C\274:2\003=\377h\004=\020\037\026=\013\215%=0\207\030=\262sw<j\212\377\274\302\260\367;<V\323<%\355L\275\230NX\275\267\345J\275\2358\346;~\330\357\274\210\344+=^-\307\273M\352|<\200\374\206\273\356`\222;d\242/\275\215\343\r\275\3344Q\275QO\244\274\371j\371\274\216\305d<\007\202\362<\367=\"<\025\367\006<\016\376\220\274\334\312\014\273B(\004;c\335\244:\3570\223<\303\223H\275\t\321a\272}\376\337;\374\356 =\201\237\317\274O\370\203\274^?\300;G(\353\273\361\317\344\274\260\213E=\221\r\034\275\262\361\230<\241\375\221<\3537\354<\"w\372\272\300iB=\370m\253\274\327\240F=\003c\035\274\303\221\330<\033+\315\274\375\335\261<\230\020C\275\247k!=(\267\376<\251\370\351<H\346\204<\255&\300;?j\217<\355 \"=d\263\212\274\017\266\026=\314\350\320<\343#\242<\310}Q=\314\207&\275\313\321C\275/\322\037\275\017\262\032<\217\244\007=\311 \244\2662\0047\2758\205\336\274\321\213\002=\336E\276\274\261\361\n<7\372\341<\237\035\225\274\363<9=\034o\300\273-m\304<W$\017\275\201\356\001\274jB.=\221\003/\274\177\307\331\272\330|\342\274\312\204\026=\035HI<\365:=\274c\210\347\274\256\341A\275\205\254\364<\334\210\033=\\\240\224;\'\314O\275^\256\371\273z\305\273\273\34107\275\376~\335<\240\366\034\275\034\234\257\274\313iW\275\313R\300<\301\202-=\020\325\324\274\371\311\020\274\253\246\006\275\t\377\267\274!\203\323\274\257\351\021=\3512\316\274\341\'\r\275o\005P\2744\274B\2751f(=Mx\007\275\027,\243<\017\010]\274`\302V\275\010n?\275@\214[\275{s\361\274\270Z5\275W\354\370\273xR\347\274\001-\227<\010\351F=\326\271\004\275I\003\310\273QZ\317\274m\201\236\274\262\034\005<tP\335\274\266\334\265<\264(\035\275\337\202\244<\360\r\334\2746RG=\356\346\221\273fQ\336\274\360\'\231;^\275G\275\000_\253\273\307\010\372\274\270\3563\275\rrX\275\177\210=\274\036\211\274<\177\255\234\274\206U;\275\031(\204\274\014\345;\275\227-\331\274\261\260\207\274\241m\277;;\310\255<5Xh:\310kT\275\302\004\360<\227p\234<1P\205\272\301+7\275\357\255\333<l\362\036\275Q2\217\274/\270\025\273*>\341<:\234d<\313sj\273r\216\023\273\362?\223\273\035?\256<\376\341D=\3125\241<_-\317<B\357\224\274\331\265\026=\323\315#\275Y{\227:\24788\275\2422\013=\206_\317\274\305e\317\274\344\375\353<\244z\307\274\263 )\275\034\313\271\2740\r\323<\355\226@\275\024\022\210<\243\237\017\275\204\334\211\274\360T\014\274\033D\260\274\260\303J<\254\027\003=S)\031\275\376\"\342\274\201\237\212<\252av<\263\353Y\275\310N\201\274}\267A\275{\336\016\275\017\n\347<\347^\353\274\020\206\010\275gmJ\274b\005\364\274\210\310U\275\270\246$=lu\246<\304\350\031<|\343\017=\231*\327\274\332\221.\275\"a)<\267\363\215\274}\016,\275\271&\324\274\2121\314<\225\374\r\275\230\312\207\274\245w\224<\371\261\'\273\325\315\364\273\001I =!&9\275\304I\247;^W\005=\3725\326<\263!\215<C\017\030<\214\024r<\347b\251\274\346-\000\274/iR\2754\316J=Y\260\020\275\264\204-\275(\275^<1\376\314<L\003H=\351/\201<\340\364\361<\250\004\025=\327%\315<\346&\320\274L\372\357<\"$\032\275.\2008\274K\347\201<\367@&\275\275\246\250\274\264\250==9d\257\274\rk\t=\310\342\347:eU\314\274\030F\374\2744v\273<\001\306\210<(\251\230<~\007\254<\217\023M\275\223\013D=\2562\343<\204\253I=\336u\200:\362].\275b\"a<9\253&\275Or&<6\336P\275\036]7;\303\3537=d\0275=\351)8\275\036\305)\275\034O\035=\343\001N:6\013\034=\247\232\034\274\375J\021\275\013\305\026=\001/\032<\017Z\305<FZx\274\222\3070=\266<\211:y\341{<\264g<=e!\217\274j\366B\274\204\3133\274OxU\275\272\250\021\275T\376\n\275\240\303$=\372\363y\274\311\010\032;7p\260\274\243F\"<~\2136=\355\3075=\017\0106\275-\036\264\271\031\270\034\274|O\010\275cq#=\020\356B\275\313\271\030\275\227fQ\273q}\210<\0100\010<\004go<\230\260\353\273\231;\363\274\374\337\232\274\250\t\241\273\375\372M\272\344F\367<nN\017=]\027\365\274\356\240\t<\364|!\275-y,\275E\254\375\274W\273\365\274\240\253T\275\224\022\214\274\nS\275\274\332\200\002\275C\263C\275\271x <\357\255?\273%s\361\274\225U4\275\272\335\t\275n\221?<\374\007\"=\272\177\314:\377\034\237\274y\026(<\3561\334;y\344W\2751q\215<]\231w\273\337\362\213\267\345aG\275\031\211\250<@\242\344<\217\331\376\274N\220==\202Ss\274\326\305D\275\235{\000=\207A\016\274\\E\312\274\251y\r\274\356\234B\275\374sS\275\344@\314<\316Z\360\274\331|\255;\364\006~\274\310\342%<\264fJ=\\%\322<\223\014L\275\361f\020\275G\250\373;\302[P;gw9\275\202\321/=y\221\225<\235\332+\272\366\362\271\274{\270\316\274\245i3=\252v\036\275D^j<\317b><\224\333K\275l\2378\275\214\325O=\240\363K\275@\205\320\274\223L\027\2756\274D\275\027kG<W$t;Y\253m<1\307K\275zn8=\373\376\355<\266g\243<\375E\373<\277Ru\274\366a\2149\031\232\261;&\224\023=\014\272\273<\271\332\254<P\325\013\275\373\370\022=#X\030\275\364\310\302\274\225p\002=4\324&=\251\2368=\204Xz<\300I\026=\003\276&={\005T\275\366b\324<y\306);N\256\343\272o\341\202;\225\363\366\274\343\257\373<\277_!=[8Z<L\024\010=\270\312\021=A\354Z=\0048\240\274vY8\275qj\226\274<\306\240\274\213\260J=D\253}:vn\000\275\265\372F\275\306\337:=\351(\307<HcX\274 &7<\017\013\373\274sBq<\257)\031<\321\234=\275a\242\240<A\',\275\257\240\320\274\337\212\251\273\267\2566\275\n\244\335<\347\207\305<\336\304\007=[+\306<\335\035H\275s\310\223;\246\216#\275\367\274\030=;\373C=\337fQ\275\325\304\316\274\223\376\"\275\315]2=\32605=>\276R\275\230\036\355<3\025[<\372\003\027\275\256{;=\364*\022<.SZ={\235%=ZR3\275\365/~;\342P/=Gv\206;\317\243\363\274\326\275M=\361h&=/,=\275L\213\014\275\376\r\260<\350\277\347<\231\335F=\002\tT=\014\237\277<\314g7\275\032\373\325\274\263\320\367<\2362\335;\025X\033\275\351\210\232\274~\270\231<\324\374\035=\210\222.=\271\031\342<\301dP=\234\214\225\274S\240\351<S\374)=Hm\246<\335,\'=\036\025E=OM=\2754\256C\275\372\320O=\177\270\240<[\034\023=\346|\223\273n\307Z=uO\007=A7[=\177)\235<\375N\233<\032i\273<\254\207\205<\345\345\222\274\370e\250<\376\226\024\275\314\255N\275\314\231\343\271\326\371\361\274\217\254`<\324\305$=h\3642\275\217\313)=\357bN<q\353 =\036MU\275U\')=\3653\014\274\030\204\301\274H\355*\275\210}<<\2511?<O\301\330\274@\r\014\274\270\014\274<\316hi\274\005\233\324\274\234i\340<\310\361\253\2732wP\275`\031F=\231\326\"\275\3751k\274i\275==\001a\003\274\275\240\304;=X?=\270\210\334\273\240\265\031\274\317\276\317;\374\3209\275\274\354\031=9\266\323<\256\370\343<z\315E=\357\344\371\274\240\361\263<\0168\375\273\252\307H\273\236\244\010\275\3239\252\274\223\201L\275\225A\\\274H/*\275\n\200\"<q1\'\274\2314\007=:\035\310\274\316\246N=e=\027\274g\337E=U\256\200<-\371=< ^\350<\351O\352;\312O\301<k\3751;\260-\315<\345\357H=\357y\320\274\017\351\340<\211\272>\275q\247e<\255\207@=Z\023\006=\343o\031<Z~>=\342\275\017=\305K\213<\03332\274\217\256\233;\010\240j\274b%\240\274y#!=[\206b\272\355\346s;\346\217[=\245\304#\274\013,\256\274\211\325[=\t\343#\275\374u[\274\030\3070\274l\243\217<3\255\n=\226\373s<X\372@<\351\232\305<\030+ \275\022\216\244<\356\270\225\2731\302\242<&\245\032=\014\244.\275\025\321Q\275\346$\354\272\205\367r<!<\023\275\253+\217\273\376$\343<\201<\017\275\337\205/\275m\301\223\270\352\3512\275\215>0\275\340\365H=\025\237;=n\276B=~\277\323\273\255r\033=\303H\022\274\366^\211<\323\261#=\272jM=\027\003\022=\365\310\203\2742\271\022=L\231\315\273Sy\037=&h\261;\253V\034\271\222\363\252;\004\3604\275\261y\342\273\202Y1\275\340dV\274\033\213\333<\"\340\007=o=\353\273\014a&\275\017\363\307;\344\205I\274\252\3268=\246^^<\333\263\253\274nd;\275t\221*\275\370_A\274U\350\207\274\341#\220<\216\341\017=\373o\252\274st3=\271\207\n=\016\325\302\272~\330\366<\362\374Q=\016\275\306\272\201\276\365\274\027d\300<\355\212y<\345\007l\273\344\273\232<\374YQ={\023\374\274\007\340\366\274=\036!=\220\032\207\274\34699<\240\377\213\274^\032\324:\252\023A=\231yP\273\356eZ\275%\\\277\273c\261\006=\341~R<\327\004\314\273\313\233\013\275;\277\374<8U\234<[\331\261\274\300\257J\275\311\257\342\274\353\352\005=\243\313/\275\225\352O\275\014\336\014=S\372\240\274\030I\027\275\021\326\341\274\306\211\266<\207<,\274\206\035\273<\237\rG<v\264\'\275v\313(\274{\365\264\274\027\217\203;P\314\262\274\231\260\366<~\t\013\274\263\223\324\273\377\313\027\275{t\265\274\317\026>\275]\316\361\272\203`\t=\345\311\342<\324\247,\2755i\340<\263\364\245\273\035\324\013\275\326\345\'\274\240\341\234\274\352\r\271<\346\022\\\275\332a\005=\342\302<\275D\306\313\274H\363N\275uu7\275\325\003%=o\037\311\274\372\360@\275\202\321\345\274\251\373\264:\312\307#\275\273\226&\275Hk\234<\377\3301\275O\0102\274\003\303W\275\343<A\275A\235n\274\344])=\0147\331<a6+\275\241\323N=\376\t\357<\037\232V<B\242\356\273Yr\016\275\252\344B=Q5<<f4$\275+\330\351;(%\270\274\320eb\274\237\373\332;\232\374\021=r\000\333<\\\361\301\274~\272%=\377\233\375\273g1\"<O\026\353<\206\301?\275XI\373<\376\006\372<\361\000==\203\234\026\275\331\347\345\2740\212\022=\217\314\024\275\302?\202<\234\211\233<D\272\030=\365F\227<\022%4\275\213\2436=l ;=g\367j\274\245\3022\274\367\362%;\003\236\026\275\264:$=k\244\026=\337\2470\275\241\334\000\275 \314\336<\250\220\243\274&\021\t=pF9=\262(\027<\322dB\275\222\353N=v\3470=J\177\222\274\030\325\263\274\314\2117;\204\2049<\354\266\305\273P\355\341\274u\236\377\273\375\347\035<\322\227\001\275\001\325\205\274r\256\265\274\226\032\036=F\337\016=\021\265*\275\244\3134\274\023\006\025\275\n.G\275\262\\\204\273\003\255\330<\024\333}\274\231I>=5\273,\275-J\033\275\263\360!=*s\327;~s\366<]\005v\273\227\273\327<ue =\361\264\025=\324~4=\02534=\234\333\227\272\213\037\212\274B;:=\275m\264<_9>=%\222\211\274\264+\250\274^\367\206\272\344*.=\265\026\377\274w\0175=R1\336<\300\310H\274\307\326\036=\032G\036\275\337\221\332\274\021\353\243\274\314\336\302\274\035\270\316\274t\263-=\033h\334\274M\245(\275]?5=\237A\346\274B\207\215<\2451\n=Lvr<\005 (\275\226\310\333;\241s\343\274\006t4\275\360\000\005<\\\245\'\275\270;\327\274\030t\t<?\224\027=\354P\363<\207\211\037<]\260\030=\234\313\006\275\257\2725\273\002@\035=UP\243;\365\242M\275\323\233\244<aY\017;\371A\276\273m\255\000\275v\252\243\271I.\232<\371\000\036=\263\214\337<\037Q\351<\016\3753;\313\245\030\275y\360(=R\262\376\272\2412\031\275b\023\231\273.\0227<A\321<<\244\000\375<`\217;\275\177\245\004=a\310,=\t\252\320;\321q.\273\275\326\007\275\375\342$\274N\234\001<\311\236\026=s3D=\\\344)<\241\253\027:N@\000=\357\232\"<4\325\320\273\364(9=I\314\335:c\367 =\264\177!=<;\302<\300H\367<\371\331\361\274ii7=v\217\275<\177\246\306\274\374\2435=\252\353\034=\213\330\004\274\215\376g\273\350.>\274\n\275\005\2757\037\277<\300\031B\275l\347\002\275\2423\224\274\270\030\376<\302\240#={\266\000\275S\313=\275\253\3204=\237\354 ==\354\310<\365\363%\275*VF\275>\034;\275F\250R\2756\005\016<\207}}\271\304\305\234\274\262k\336\272\0306,=\325\262\032<\273=J\274PV)=\242\032\034\275\006\007)=\227l\035\275S\002\211\274\022\304\036=\231x\016=\242DG=I/)\275o\026#=\030:|\274)\026B=\266.\267<\030@\314<\241\255E=|\2034=\251v\023\275\343x\206<\000\024\314\271\211\032\004\275\322\376\004=m\017\241\273\022|<=\\N[=\037\241\003\275>\245\024<g(N=\362w\245\274v\216H=\261f\023\275\243;9=0\355\025\275\221\300;\275\243\252\000<l\214\243\274\177\270\301\274p\030W\2754\320\201<\344\263\244<j\316\247;\322\t\031\275U\325\002=\226;\215<\347\313Y\275\024\263\277\272\331\273)\274\371\246\301<:\377\242<.\363-=9\205\261\274#\327\231:\014\316\237\274\310\213H\275\360\271\247\273\262(U\275\214? ;&i\031=PU.=\025XI\274\371\234\013\275\245\035\026=\347l\177\273=$\033\275\356<\244<\267\220\232<R<\216\274\260\1771\275\217\025\316\274\341~\336\274Y\341f\273$\tQ\275\352\r\363\273\352\3329\274^T\252\273\002y\305<\242\000\311<\375\236#\275\272\225\313\274D\315\344;[\231\261<qe*\273\372\236%\275\340M\303<\353AG<\373\227\214<#;\347\274\002|\276\272\nb\025\275`\245*\275\033\311\224<\334\247|<,\021\033\275[\200\205<\345\353\037=|\2329;~\020\214;rI,=\342\266\243;\2272\307<b\350\326\274\0371\246\274\336\2646=\361\241\262<\212\021+<\246\337K\275+\376]<ls\355;\002\205\036;/_\266<\021s/\274\314\361$\275R\307\177<\346\212\371<6\273\325:\232\321\304\274\256@\247\273\210\347\205<\235\327\"=\330\032\265:p\023P=\234E%=\375\377\216\273\250.J=\000\377\201\274\207$\314<\375_K=8m\373<\330\270c\274\230\207\026\274\347\264\013\275a\256\010\275A\351\373<\007o8;\337\251\346;3\234i<h\201\311\273,\266\020<\244\000\231\274\217\347\013=\204%\250\273P\221?\274\313H\006\275\272\035<=;\301\350;O\215\327\274/ \376<\217\362\353;\217#\363\274\331.(=C\276\030\275\277D\360\274\276\256\336\274\021\337\256;\033\264O=\322Q\266\274\265e\010=\355\0262\275\010\336\356\274]\332\374<\362$\255\274\217\230\036=pk3\273u\314\271\273\214\033\372\273j\237\246<#\324\035=\016\233W\275\242\004\257<?\205\000\275KlT=\024\355\271\273\232\352:<S\335y;\223~\364\273\3118J=X\322\217\273|p\352\274\302\035\276<\000\331\004\274\2005\317\273\262\266\033\274u\002\342\273\325\n\250\274\036\222\033=\264\265\031=y\025}<\022!\304\274\200 \274\274,b\355;.\333\323<e\n\243\274\270\t[\274Ou-\273\203\356&<\272\227F<\260s\357;\366\020D=4t\230\273A\205\266\274\001m#=\301#!<\264\246\'\275{\260K=Z=\017;{7<\274^\303\243<w\343:\2750.4=7S\034\273[\3119\275\220hD=5D\002=\007\361|\273\250u\206;\320\330.=\254\300\332\273\020\242\252:a\321X:O$6\275\0242\303;\000l\n<\037\\W=\204\276?=\311\177\213\2747\264[\273\260\275b\273:\303\030\275R\272\366\274c0\234\274A|\322<N\375J\275}\330%\275i\202C=K\002H;\033\252\225\273@\020\014=\326u;\275\026\251\004\275\303\241B<\204\n\266\274\231#\320<\203\376F\275\256h\036\273w:\311\274\2021\t=\221\024\354<\300\331\364<aY9\275\316\270\360\274\345~\245\273\003Y\016<(\264\204;*\235\212\274\215`\200\272G\222\000\275\342\322\305\274e\264\002\273?\376\030\275_\2655=@\332\360\274\344&E=\"\037+=\244\326)\2755F\316\274BF\007\273\336|\370\274?\023>\275\333  \275\031p\341<j\311%\275\036%9\275\365\220\263;\332\360\n\275\247\234%=r,\027\2751\353\223<<w\311\273Dy\007=\324\375x\274\254\271\230<\302\324\330\274E@\346<\377\317\232\271\231\372?\275\313+\322\274\335\001\017\275w\344)=\034E?\274\317+A<\365\032\031\273\256\032\007\272<\222\216\2738\233%=n\'\203<2_\357;\332%\343<CnF=1V\361<\370O\020<\262^\327;\272Kg\274]\306~;k\207F<o\323O\275\037\264\037\274=\256H\275\373oJ\275\\S\372\274\016\267d;\320\036\002\274>\207\311<2\242H=\r\036\003\275\275\332\r<\234R\347<\252\217\302<c?\325<Q\373\307<<f\024\275\205n\020=\232#\023=A\300\327\274^\305\322<\003\356]\273x\rY=\237\000\035=\353\201\344;87\263<\3677\217\274<\273k<\305\250X\275\373[O\275\231\335\274\273\261F\006=k\'\346\274\227fk<\334\264\026\271\350\'6\2742iH\274z\326\032=a<\t\274\200\275\263\273\032<\247\274\002\275(=\2678\023=\340\361\342<l\262\t\274\t():\334Jm:GA\327<\355\241c\274}\376C=\n\203\374\274\005\312D=\222\273\201\274\025,4\273\361\030\374;C\306\215\274\240\325\000<\026\302\001\275P3\270\273\2001-\274\301\226a<\217D@\275.y\035\275\271\243\244\274\327W\207\272\367\304\366\274%\235\231\274\306\027X<F\225E=\343\340\263<v\343\342\274;\373:=|C%<\220\207\346<XTy\274\375;/\274\027mZ\273\0077\026=\242\213\024\275\246oR\2751Bi;\246f\001=C\317U\275\032\201\240<MnJ=\367X\373<\353\266\226\274\214G-=>X\034<%\214(=\261\\\r\2752\207\335\273(87\275\207\214\256\272\313\212\315\274\313\014\336<\326p\340;e\370\252<\222qQ=rv\312\272\340\241\333<\201\236\016\275|L\357\273+\221\037=\275\227g<N`.\275\010T>=CZ\305\274\026\361v\274\242\363E\271\254,\337\274\367\266-\275\251\342\037\274\223mW=\006<\361<=,\201<\254a\017\275\237F\220\272\035\253\255<\006M\016=+\235\351\274\202VN\275\021\306\234\273\302\375N\2754\234/\275 7\r\275eZ\200<A{\357\274\317\300\220<:\324==\212^\036\274\3129\021\274\026\305/=\177~\030<q\252\326<\004n>\2742x@\275V\305\262\274\001\nJ\275\324\3117=\205f\277\274\370q\235\274\005[\020\275\277\354\t\275\355\033C\274B\367\212:\003\313\005=\2609)\275\357\235\247\274u6@=N\351[\275~\027L\275)\253V\274\233\037W<8\177)=\274\n)=\362\366\367;Xp\376\274\275\351\343<\244A\022=8:\314\274\326PO=\301K\007=\206\353X\2742z:<g7U\274\203\234\247;\362\270,\274\255\"9=\363\366\'=4?3\275\374\016\332<k\246\321;\345\342)\275\214\374\266<K\211\367\273\367\271\273<y\353\0249\035\337\002=\326\031\016=cG\000=8\266\035=\311Y[\274e-\026=\367\267\274<\205\017G=\264\272\'\275\0023\357<\230\341K\275Q\274\013<\017{\363\273\276E\375\271\3339\025<\t\014\023=S^J=\323\370\017=\330\374S\274Ie1=\347\000\240\274j\233\264\274\346\205\241;\372\'\316<\305\274\345;\343\245\202<p\007=\274\203\314!=p\225!=\\\346\3309\000\3470=\336j\342;\037\023@\272\002g\205:i\n\264\274\004j\001<\256P\363\274\347Ac<\020J\365\274\377$\372<\227\353\002\275\202N\331\274?{\321<nJ\323\274\247\013\343;h\376L\274\260\305I;\007\247 \275/\005\226<\206\250\"<\t+3<M*\351\274\314\234O\275\355xw<\271\010\277\274\300L\001=\333\336C\275\376\025\206\274\010\216H=x\226L\275]\326J\275\314,B<\274NR<_X\020=am;=\257\310\030=\037\241\311<*\277+\275\321=\233\273\277\374/\275.\332\306<\367\226\200<A&@\275b\014>=\257\275y<b\247\216\274\020\306\023\275F<\022\275\206=\213\274}\006%\275\324S\007\275\226\207m<\377\376[=\322\266r\274\256U\337<<\314&=\242;\305\274\2326!\273\277\304R=\360\352Z=\202\3203\275\023\247+\275%\214\004=\317\007S=\377\360\177\274\310j\257;W,\252\274y\213C\274]0\033\274+\265k\274\360\366\222\273*S\253\274\366\221\245\274i\001H=UT\022=\242)\017\275\241\2161=`\001\016=\253\037\263<\013\300\000\275\237\020M\275\303\032\212<\376-\003=\301\n\r\275W_\355\274\204\271\223<\002\213L\275y\005\313\273\250\034\355\274a\024+<@Y\254<\334\354^\274ixI=Hk\367\274@XU\275\207A\027\275\034.\t=\024\243\037<\005\230\374\273^\231\222\274#\226-\275\373\261O\275\220\340!=wK6\275h\247\034\275\027\354\270\274F1\207\274\216\0046\275[\370d\273\304\222\203\274\021\302\210<[\326\377\274\001$\022=\235\330\212\274I\363\217<2\tU<\3607\037\275.RN\273\345o\276\274\2447/=j\007\"=\\\374E=\260\257.\275\315\r)<\032\027b<5T\335<\3524Z\274[\205H<\204\242\331;s\334\273;\366\342\316\274\r\223\330\274\366\312\002\275%b\260\273Og`\273\357\220F=\0255\034=\377\301O=^k\221\271k\026X=D\236\001\275G=L=\265\023\010\274\316\217C=i\010X\275\r\326\345<5\202\236\274\222\263\342<)_\262<\325v?\275\325\016\242\274Oe\244;\030g\222\274\277\211#=\322\206\262\272\013\3437\275\277Z\224\273\t\254\235\274;d9=\213\352\315<\334i\037\275k\n6=\331\241H\274E\260 =/\275\376\274\233\036/=3Vl<6\307<=\035z\260<E3\275\2735 T\275MyH\275\253\205\023\275\353\363y<\325\373&=\236\264\244<\027\360E\275\374\235\277<p\264\350\274\371\334\232\274\301!\337\274\303\351\335<A\226R\275J\223\021<\214(2\275\250/M<\034\336\332;\227\n\251\274\334\010@=\257\331\017\273T\033~<\233\347\326\274^\320n\2745\036B=\300/\231\274W\223x\274\273\316\037\2748N\"<~%\266\274\363\200H=\222\251:=\255r\004\275|q\375<\372\\7\274W\035q;\324n%=\267\353\303\274\255\304L=\302\305*;K\316[<Dm9=e5b\274|\207Q<\261\000\302\274LI\\\274R3D=q\023<<<\004W=\246\215\277\273t\374\244<H\330\326\274\035\3071=#\306\331<\351\031\260;\027*\373\274y\035M=\254n\316\274\2531L=\263I\202<L\034\244\2744\300\036\275\236l\030=o{\026\275\014\360\377<\002\343\363;\226,3\275\"\341|\272\tV;=_\016\367\2741\320\345\274\006t\r\275\302\350\235<P\336\274<\026+!\275\026\360\007=\026t\006<K\275\341\274\030:F\274\354\014\302\274\300\246Q<\346\212c<\250r\002\275\021\006\267<V\277V=\355P{\272\037\224\212\274ge\n=\231H\241\274\200u\"\275T\306\016=\306\344\006=7\213t\274z\257K=Nm\247<#1G=\373\033)\275\300\'|<\370\213G\275I\301\231\274$\263d<.RB\275)kH\275w\2627\275\243\202!\275S\247\006\275\246\317\264<\341\251\315\274\240\\\353\274 p\000= \202D\275O\230\212\274\002j%\273jd\273<\\U\354</\024-<\002P\013\275\275\374$;\375\366H=\305\315H\275(\0261\275H\3572\275\033\254\274;\371\342\"<\252\304W=\014\t \275\005\344\356\274\004\365+\275(\003+=\323G/=\"1\351\274\0319\331\272o{\342\272\264LN\275>\027\003\275\022b\010\275O\301\013=\222r\250\274\260\245\221<%^\250\2747\025\230\274\301\225\223<c\203\306<\343U\023\275\r\327W=M-\177\274,\220\020\274\3475;=\316\340\322<~\332\353<,\330\030:\320\341\r=\206\216\374;q\036\r\275g\336\017=y\243J=\020e\022=>\243\236<\202\177a\274\345\037R\275\357\332\n\274\252\021\275<\301>\200<@\257?\275?\325\025\275th\033=x(\025\275\3275\300<\214/#\275@\303\243\274B\325\277\273\"N\354\274dw\312\273\nFV<u{<=.\020\001=<\271O\275=D\n\275U3\n\275\330\364Q=\236(\323<x\234*\275yK.\275\022\321\005<\323R\341:\263U\203\274\347\310\r\275\373L[<_\312\200\274\341\376)<UTJ=\216p\320<\026h\324\273*k\251\274c\223\245\274z\257!\274p.\372<\356 0\274\350\365\026=\326\262\245<\202i\374\273\325$\027\2758\256\321\274\t\342]<\274\316\330\274l\2615=cf\030\275\203m\000=-\322\275\274\344v(\2759\3749\273\rC\266<\223>\254<W\255\032\275\026\t\036\275\204\360\213<\353\231V\275Y\367$\275H\037@\274\265\254\205<\346S\377<\335\267\301\273\316D==\002\366.=\315\022\315\274 \334\245\274\323\013%\275}\220F\275\232\013I<\240\211\024=\036\365@\275\353\037\227;w\275\037=\2346\010\275-\\\014<\302S\007<\333\241T\2747]\336<R\272\327<\352\343\314\274\363\257\021\275\215\377\270\274\022\360\310<\347k\336\274WQ\216\274\231\016\201\274\010\010\016\275\0172\360<\335^$<A3\002\275\2209&\274Q\014\016=\367\3609=(\"\025=n}\'=\t\210:\275\255D$<\362\024\266<\225\312\332:\230\331X=\025\024$\275\300\026\032<\247rI=\243\202S\275\367\367\207<^\2525\275 \013\347\274/&\336<x\240\347<E@\035\275)\016-;>-v\274\221\307\007\275\357v\222\274\321\206\251<\363\204\334<\n\263\n=\010\023\216<l\'=\275\230\276\017=\222_\334\274\024\361Q\275\331\211 =\273\340\"\275\270\021\026\275\037\212\377<\232\006\270<\351\032K\275\326\267\234\274\'\332\327\274T\260\031\275\306\3638\275+\016\263<\334\036\210\274\277\376\235\274\357\342\013\275\374\366\203;\307\271\004<\302\2326=\305\004\237<\202\nf\273\221E\025\275\035\234\242\274 \275C\275\312X\031=\313\330\305<.xY\275\266\354Q=\324\201X<\332?\345<0\343i\2740\341\265\274\361,\273;&\251\026=\313\370]\273\355\021\347\273\263\241*\275\242\312\305<`\263\222\272\023/8\275q:q<\347\024B=2\377\230\273~\210\201\273\037\2003=a\2353\275Y\2003\273\344\3504=\351\307\356\274\246U\303<\335\236\355\274\214@\251<%\234!\274\370y\035=D~$\275F\306[<\t[P==\254\356:\265\371\312<\347\343\001\275\342~\014=\216b\324<%\020\342\274\317>Z=\026T1\275\030.\021\275\302bM\275\306yS\275\241\237\273<z\265\350\274\277O2=J*\007<aW\357<\312\232Y=\003,\272\274%\342\234<\222\214\374:7\032\036=\373\335X=\223W\324\274\243\0021=\377A\007=s\320\337\274O\201!<\341o\235;\203\347\274\274\342m<=\235k\366<`\010\260\274\035\033\354\274=\023Z=!B\332\274\200\323\231\274\374\310\023\275\2655\006\275\207\362\007\275d\317R:\361\220&=\353\010\342<1\274\265\274tn\341<\320\245i\274\234\333\004\275\300l\006<\312R\002\275\2659W=&\344Y=\271\230\\\274\255\220\312\271\334\336b\274\367\362\216\2722\275-=\224\177!=\016\233\336\274\215&E=]\026\307\273\303\347*=\225\321@\275rk\236<L\t\035=\037\3215\275\221\332\253<\307\021e:\205\245\034\275\351}/\275\275\260\362\274Vi9<\350|\251\2734>N\275lL\345<\2520I\274\021\244\'\274\312\276n\274\346\235\264<^\030W=\214\2117=\364LW\275\'\252H\275\353\234\010=Y\230&\275\254\211\326\274\352&\032=G\221\'\275\033&\207<\231X\252\274_\006/=\'\343\240;\021\204\275;i\010W=)K\020\275;\200\036=Cw&=\251\304*\275\250\263;=\302#p\274\370\342U=\207I\215\274\036 \240<-\014\252\274\246\223\366<\261\2354;q\030)=ThY=\217\210\"<I<?=\3348\347<\216\367S\275\007\331\\<\035g\034\275\017OK\275\274\260E\275NI8\275\002\"\'=-\203b<\335@\032\275\0342\232;\261\373\370\273\267\022\320\274\304\305\277\274\244F\014=\307(\003=E!\307\274+\313\310\274\272}\263\274\321/\257<\336\265Z=\260\n\031=\2036\020=\346\356\360\2734\320\260<\353?\r=!\363G\274\204\216\000<\320\036\226\273\177\321\035=\326W\213;\347\325\037=\026\037M\275\341\013\216\274\300\026O\275\272\007%\274^T>\275\303Q\000=\207b\226<Z|\016=\213\334\200<sQ\260\273\207\314j;\301\016,\274\204\372Q\275k\206,<\206\t0;+\335\352\274\363V!=\006\222\217<\235\373\227<\305.\3079\032rc<\237;\360;0\3031=\344:5=\271B\347\274\317$\277\274\244VP\275\200@0<\350\345\024\2742\0130\275 \266\004=\304\001\010\275\303\265\022\275\177b\274<\021%?=\236#+\2750(\361<wcx\274DZ\030=\t\365\220<:?\271\273wY\242:\305\240\205<\014\321\231;\213\347\250<\036\204A\275\252\003\241\274\027\234*\275\030S\240<\027\346\335<\212B&<\r\347e<o\225\263\272\347\307r<SnW=\3724\032\274\200`A\275\375y\237;\020\227\213\273\224\036\254<*\210\210<\312@\217\274\316\216\025=\302+\327;\343!\331<}\004R\275\357o>\275_*\275<\255E\024;G\357>=\366\030@\275w{\356\274|\212\027\275\207\305\234;\3543D\275:\306<=\026OF\274\200/\312\273\376\301\252\274l\213C=x\212?\275k\\\014\275\\`e<\"%\241<#\272)=/3\220<\213\032<\275\230\277\212\274\325\305\355\274\001px<\004^\233<`\355H<\334\370S\275\315\340%:7\037\266\274=\232\261<Q\252\177<[4\037=\337\235?=\006*D\273\332\323W\274\315\316\373:\231\373\356<y\221\201\274\305{\000<\263\330\037\275\257\215)=\230\000\347<\367\263<=ju\331;P\177\346\273\212V\301\274v\3440\274\341\364\347\274\333\365\337<\310\024\017=\\\033\341<\236.\320\274\365\271\022\275\243\230U\274\332yT\273\352\243\353<\312\311\266<\360{c<E;\263\274p\014:=J\210\003\275}%`<\266\264i\274\252\306N\275\323B\342\270*\3610\275\373.#\275\014UB<}\365\t\271p\030\275;\340b@;\026d\304\274t\326\032\275\213hA<\222\361D\274\332\353$=\004\324\311\274UJ\234<kbT=\264\005L<u\365\"\275R\004\323\274\255\375#=\321\021\310<\200!\020\275k\212P\274\334R\327<x\200\201<\360Q\000\275\277\021\013\275\216\236\031\275\354\202 \274\210\234\263\273\'\303*=*V\335<\226\317[<\26342\274rA\374<C\250,\275y\246\363\2740w\260<V\316\251\274\316T;\274\314\367\225\274\275jL=$Z,\275\246F(\275\305A\234\274\256\031\317\274\332f\336\273!\006:=\222\031G:2%i;\200U\004=\353S\321<\177\314R=~\212\005<e\232\231\274\257LH\2750s\364<\206\264\261\274\000e\305;\206\332T=z\226D\275mE\034\275bt\332<z{,\275\301\013D:\255\301\236\274\027|\300\273\'\007\254\274\001\207\215<\037\201\344\274\347U\004\275\331\264\330<O+\343<\347\206!\275\367\202\023=5\002!\275L\322\362\274\300\375A=$\003L=aH\327\274\265\3335:\\\022\025=\352\336U\275\331\370>=T\260\223\273\177j\231:m\371\370\274\316O\266\274\356X\004\275:\320\323:\267$)=\023\252X=\003\037G\275\271;\277<\334c\376<\005\201==m\204\016<\374\016/\2750\217(\274\265-F=l\232\257<7\215\346\274\344\232\n=\256)E\274\331\306U\2734\022\022\275\177\2120\275?\3340<\226\345\024\275\303\316G=\306~$\275\345\251\016\274\231\363\337\274\"\364:\275\302\215\224;\320O\300<kL\000\275\216\373\002=8%\205<\033#6\275\022\203\013=\276\223\313<\251\235\036<G\254\035\275\260\022$=\353\321;\275t\340\t\274\014\322\363<j\036\215\274\330\303\343<0Y\016=\356kg<\312w1\275c\246Z<\234\270\244\274\204\3654=\034B\3409S\213\364<\036\350\"\274\363\377\n=P#\202<\256<\006=\\5&= \200\221\274I\246\261<\361w\023\275\271\275$=\n\340T\275\342j3\275\022\371\263\274L\275\212\274bbA=\352\213F\274\314|\214\274<Q\014=\353\307\014<xSP=\006\037X\275\334\201\023=4\345!\274q\257\334\274\205\037B\274\022\372/:\232\260)\275Ec\303\274,{\016=eR\266\274g!\017\275\213\226\016=\343\362\266\274k\333V\275\037\303\204<<\220\262\274\331\022\211<@u\021=[\n\375<\303\271d\273\n\205\204\274\234([\275]\326u\273\344w\223<\320\246P\273S(\220\274}\365\016\275(\374\233\273\234\265\031\275\032\207R<\213;9=e\324\225<\010;\027=\205[:\275\220q-\275;\213[=.\322A;\004\234?\275\306\347\2019\223\206\177<\217`\302<\006\014\300<S\023\226\272\333\366\371<)P8=>\337\300\274\271R\316\272\250\"\n\275\000\250\371\274]fp\273\250\t\035\275\336K?\275\247p\364:\222\013\025=o\201\272\274di2=(\363\005\274\r\2720=\177\342f\274\341W\307;O\237\240<o\260\240<\373\367\036=\252-\020\275\210o\224<\261et<\254Y\335<\351\243\374\274`cJ\2757\304]<c\326\217\273\201\233\234\274?\270E\275\260\344I=l\r\335\274\333\362\201\274v\200\362<4(3\273\003\321\310\274\333\037\342\274\375\344\341<M\330\t=|v4\274\200\002H\2756\005H\274 RV\274\003\354\265<3\353\266<\367\362\024\273`B\226\274O\033\320\274\332\232\r\275\214\331>\271\020\227\'=k-\357<\336 ?=\202q5\274\324\315^\274\225G?\275F\2319\275\362\233\344\274\022[\035=\232\211P=~\364\020=\210~<\275\266\234\272<\363\230\361<rb\017<s35\274\253hZ=c\321\272<\227\275\371\274NBP=NPQ\274k\027+\275\216\323\341<\270Ch\274@\210\230\274\215\2528\274}b\212;@\376\272<(\366Q=\203\266\225\273#p2=\252\016D\275\347\255\014\275v\347o<\272\245\327\274.\332b;\243\357\013\275\241\315\037\275\003\276\244<\236\020\331<K\272\003\274\247Z\020=\027\244\255\274\3254\001<\325\316\375;\256?O=\t\353\223\274\233\373\025\275\220\355\021\275\274\343\365<\323X\233\273X\334\330\274\216\256\262<\253\017\r<\241\024\307\274\230\223\224<\006S\'=,&\003<;\241\030\2757\225U\275za\314\274\274\265\226\274x\325\260:\\E\230\274\303(R=\303\314\001\274s\217\034<\354_\336<F\367\265<\255\000\217<xG\254\274|\224@=\325vm;\211u\371\274\033W\327;,\373\037\275\244!Q=~\271\027=*\030|<>\3633=g\016B=\307N\241\274\215\347\360\273A;\031\275\030\036\326<2\230\362<s\204B\275S\370J\275\332\"\254\274\332\027\244\274\230/\210\271\037UU=\240\230\241\273r)\032=\362\332\010\275\rE\375\273\304\235&=\244\"\023\275$DJ<\327\313\022=\035\303\004\274`\224\270\274\263\016A=Lc\002<\006\002L\275-\337\'\275\"V\030=\230\320\344<\035q\362\274CI\377\274|\360\254<\304\024[\275\376}\213<\343\357\351<%\261\270\274\271\037A\275\217\316\373<\364\275!=%,\332\274\032\354\'=\000\027:=P:\272<\253\035K\275a\360\327\274\361o$=z\337\021\274\\\263\036\275\005\266O\275\200\246\033\275\231\247N<\241f\341\273\263\337E\275\264\302F\275\271d\217<\204\313Y\273\237\203\023=\346w\212<\235\350\337\274\372iF=U\326Z\273Oa\356<\1778*=W\347\r=\321\221\214\273\200\326+\274\252\261\017<I\204I\275\225\003\354\274\271\032\336\274\366&\277\273{\357F=N\035\361:\200uC<\004\351\352\273m\230\335\274\206\316\313<\270\2242\275p\023T=\327\252\237\272,\303\261<\010\016d;\202\034\260<\3321;<^{\036=\037\021v\274 \240\202:K\031\010=\342\242\307\274Q\006\006=\225\344W\275\355E\217<\267\037\n\275\213\330\n\274\310\tZ<\246E\032\275\256\360W\274*<\033=\3327C\275\243\246G\275h\204J\275o1{\274?\272f\274\265\027\331<\332\206 \275\2305\375;Xx>=\205-*=\224\3206\275\217\326N=h\372\342\274\355\007\335\274\305a\030\275x\n\016;SO\207\273DB\257\273\021\214\367<^\332G\275\005\206U=\213\357!\274\017o\022=\030\3465\274\217\2640\275\335\003F\275\224q\217\272\003\n\001=\211\241\003\275\331\217&=\312J\263<\332\2216=\364\352C=\004K\001=\253\\\362\273km\035=\033\242\373\271\205\364)\275\206A\346\274yk9\274Y4\217\274+\rM\2752\2604\275\0319\241\274\001\252\035\275\203\304U=\217HJ\274s\337S;\253\032\373\274}\270\200\274bTF\275\014\350\327;\005\215\366<\"\321\256\274\272\214\"\275\332\275\335\274e\330\n=\236\004D;\351\256G=\243\365=\274y\022\273\274h\013\371\274\256O\313\274\364\364\350<\377h\362<\005\301\025<b\266H\2748\002M\275\245#E=4.4\273\324R \275(#\013\275\"\027C\274A\247W=\3331i<X\034\341;]\350)\275\257\222*=|\3559\275\t<\024\275\021/\227<,/3=6e\242\274\033\007\354<t\2011\275\206J\303<\363n\346;\335\206\004=@\013@=\304\026\223<:\0323=\022\010\t=U\357\036=\0200\357\274\257\264\331<>H\336\273U\020\017=\206\261\344\274.\317+\275v[#=\267\235\377\274\213\252\213\274\367\203\370;\025\340\034<\307\007\014\274\265TD\275\242\344\305<\\\032!\275C:.\275X\324 =\364Md<5\251G\275a\254\263<t;\246<9\3706<\255N\003=\242\tV\2748\267\t\274$E\277<KF\022=%\010Q=\320A[\275\372\336X=\315\247\347<\341\001\232\274>\002[<D\010\260\273\260l\206\274\334\217\225<\257\3230\275\346\332E\275\243\326B=\t\221\302<xG\'\275^-\317<\016c\'<\305\206\221<f\230\240<\321[\025\275\350\026V\275\t\231\003\275\035{/\273\2718\265<\0007\313\274\007\r)\275p\262C=\2749\010;\371f]<b\313+=\"\226@\275\336{<;Px\014=\262i\213<\233\000\317\271\350\231K=\343\337{\274\373d\010\274K\314\027\275\016\2048\275\001\321\002<\030`\021\275\370\201E\275\030\231\006\273\027i\032\2750\033?\275\327\224R=\364\013\301\27454\033\275\366C\024\274\033n\010\275\352l\270\274\027\373\016\275e\312\350\273Q\3704=e\277>\2752V$\275\025\033\212\274\n]\"\273\2526R=B\262\324\274Y{A<\261h\026= \206\220<\027$.<\004\365\271:\006\316S\274\277\324\376\2740\2211\275U\003\221\272\276\023\233\274@\2278=\315\334\006:\355g\226;\323!\017\275\366\262Z=\205:\253\2740\210\223<\313o#=\3600\001\275\033@6<V)y<\347`7\275\245\222\023\275\340\3759\275\350O+\275K/\272<\346\372\027\275YX2=\001\002\t<\247\272\270\274\270\237\037={![=-\225$=\322\246\037\275\321\360\351\274\013\270\255\273\215\2401=\301\267\000\275$\0134<T3\214:\251\017#=\020\363\035=\333|,=\333\361h<\374\301\233<h\316R;\217\203\213\274}\r\"\275\347\232\006=F\016@<37>\275\334\304\361\274\211\204\330<\010f\332<;!U\275Vj0\273\014V\235\274\216\240T\273\312\271\227\273Aa\033\275\243G\347\274\305K\230;s\377\000\275\302\211\215\274\262\226\021\275-\247E\275?m!\274\230\322V<R\260\023<\330\237\025=\213\326.=\007[a<\335\006\\\274?\337\246;\nX@;^=/<H\305Y=\371\311\330\274\210U)<\037<E\275A\010\241:\212\313*8\202\347P<P;\316<\357\337e<]6d\274\333\236\266\271\331=\003=\335\312\002\275:\254\335;\037\330\027=\257\210\356<\260E\355<}\026\201\274G\271\313<\034\267\033=`J\253<\270TV\275D\331\222<}\027Q=\301\007\'\275+\307\371\274~\277\033;C\202\007<\331\303W=\270\316\240\273\246\003(\275\312 \266\274\351`S\275=\3370=\350\237\016\275\265\210\003==_\001\275\204We\274\355%Z=\314\307-\274\001\203[=H\312Y\275C\201Q\275\327\214F=\312\244\027\274\276\327&<\024\021O\275\2405?=\242\255\316<n\014<\2759O\006<\206,\'\274=\365\321\274\t*)=aj\370<\017f\005\275\267\322\022\275< \326;\265[\253<\360\032C=\243\273&=\240w\355<l\310\034<\314j\000;\241\013\025\275\226\004$=\324\327Q=\"\235Y=P\0312=L\271\303\273\302):\275qL\233<;i\024\275V;\026<\325\001\017<\244dX<\256\3614\275R\r\244\271\363\370X\275\276zK\275\231\022\354\272%P[<\214\300\366<\345\2145\274\304IA=oYY\275\024\370\330<\004\335\363\274v;\211<\027F\177\274\262\031\355\273\177\352f;$\307:=\210\177\000\275N\027I\275\007?\307\274\254?\357<\017|Q;m\300[\275\2614\020=\204Q\300\273mD5\274\221\203\325\274\021<<\275\371\2577<\261\233\037;\207\341?=k5J<\232\345]\273`2\301<\321\200\205<\035\230\206\274-\361u\274)G\034:\034\370.=\247] \274\025rB=\024MU<\177\217\363;\223\335E=\301\364\321<\324\373\013=\322uc\274\245\000\373\274\'\021\377\273vy\211<On\003\275NM\t=X/\367<\217@U=\260\205\372<\023\363\325\274\270\242\014=\t-\227<U\3270=\000%?=\241\216,=T\r\023=\255\230\343\274\234\217\307<\350\231\243<\212\316\000=\246V\260<}E\005\275z\251H=,\311n:\241\222w<Z\3413\275\304\311;\275\307\207\353<Cc\312\274*\003H=\034\264-=\t`\320<\r\261\273<\355\006d\274\344EK=\007\347\206\273D\217\022=\203FV\275os.=9o\321<I&5<\274XI=\227\375\354\274\234\006\007\275B\273M<g\2554\275\006z\300:GY\031\2758\205\025=\375\251\244;1Q\311;d\315\327\274\302=\"\275\327|\333;\022\036)=}\245\320;\234\270>=\200cD=Z\323I\275\025N\351<\003\375\027=7\n5=\275\007\243<\221v\206\273\333\211 <_\242\371\274WpR=\202)B=X\233\222<1\341L=\r#?\275\277\032\356;\310\253W\2756f:\275\337k3=\364\346f\274pP\366;\214\276B=_\024\034=\2211\216<\243\333B\275g\213G\275\330\340\200\2744\213<\275\004\215\363\274\032\303\033\275)~\242\274B\232[\275\020\201U=\035YZ\2753\337\207\274\246\033#<\230\353\247\274G\344K\275\207\\k<b^%=\262\024\027\275\356\005\266<og\272<; \007=\341\206\031=QQN=\333B\001=\234\215\032\275\"\351\235\274hI:\2753\377\354<atA<\020!W=\375RT\275\350\021\374<w\357\023=P6/=\343\316\003=\302\246\037=_\237\230\272\200\232\251<|m\234\274\ra\036\274\372\316P=\021\375\365<\222d\r=<\020\246<V\2033=\227\341[=J\261\026\275\317\344+<\005n\005=\"\366Z=\346E\025\275\272\321\356<M\"\340\274\334\223\007\275\352\010\275<>\203\372<+\314\241<\3738C=\376\231\017<e\020\004\275\275\212\340\274\000E\020=U-\032=4\266R=lz\312\274\203BY=\020\351U\275\032\\\205\274^\017S\274\330L\277<\340\3158\275\226\025\035\275XD\327<e\t\033=\t\2432\275\2670\267\273\331\322\t=\376\311\322<t*\376<\227\345\024=%\264\005\273\220d\001\275Y\346|<\303j\351\274\313\305\210\274x\347.\271\306\264 =C\3477\272?\270\302\274F\340\350<J\200\311\274\242,1=\021\263\241<\000\367@\275m\344\000<\000\302:\275~\0339=-\'\325\273\334\357K\275\213r\236<pm\230\274\312X\023\275\030\300\016=\216d:=H\316\255;I\314P=6\010o\274\275\374\r=[d\275\273y#B<8X9=\265\343\343\273\231\210%\274\034f\223\2744\211\025\275\202yS\275\375\367><\265^O=\316\r4=\276E\331<P\327K<)\276\214<\032?2\275\304\024-\275\302\330\026=\276\333\336\274\007]#\275\237\3433<\207\220\327\274\340\2407<\324\341\025\273\241x\322<\325\320/\275\321o\002=\240B\020\275>\327\021=\211\247\341\273p~)\275e\313<\275\247&X<z\256*\274*eL\275~\235@=\332\277[<\333\3479=\335\1773=\247/\300\274\316A\234\274`p3\274\271\362#\275] \017\275\356T\322;`\374\321\274\306<\006<@.\010\275A\177p<~\226_\274\237\247\310<4\204\216\274\272\351E=Y\024T=\023}\035\275y(\017\274x\332\250\273P\354\377\273\362u\016\275\373\256<\2757I,=HE?=\007\332J=\270\371\305\273\2323O\275\373\010D\275\\\255\003\274\352K/=\005\215M=F\001\347<;\013\000\275\322n%=\215\255\372<\t\r-=\372\361\001\275\276n\257<\234\2257\274\332Z\276\274\351r\334;\207\372\001\275[\264\217\271{\360\215\273\337E@\275\213vA\275\267})\275\221\335/=\330\355\254<D\345\347<u+\257<\363J\\\274\006\371\001\273\371=\370;\253\370J\274\371=\234\274&~:=\275\021\030\275\\\213M\274\342\034\013=\207d\204\273aB\025<P\362\275<h3\215\274\211G\034=\335\000\032\2749\023-=gn\246<\260\276==\211P\364\274J\323\205\274~f\035=]h\234<i\271[=X\351=\275\273m\n<pk\335<\204\360Z\275\332a~<\026\267&=E\245 =\177[\\\273\026\363X<w$\271<\371\2463\275\233\334=\275\377_\240;\342\\\220<>\326\204\274\274F\007\275g|\030\275\317\007&\272:c/;\344\235 \275\325\342\002=\322\201\006=\235\\\026=t\2658=\350\272X=\004\363\361\274\361&\034\275\3710z<\372\244\214<\033\351*;C\3508=*\300\355\271\363U3<\346\006E=\207k\204<\303E\":\2147T<\236\\\010=\377\347/=\027\325G=\036~\346:_\254\340<)\005?\275\216S1\275\177\2721\275g)T;\200\037\337\274\355\263K=\377VL=\022 \201<\230\374\021\274.\216P=\357\316\372<\305\263&\275~\021\237<\377\004q\274\243\340\237\273\262O~\274\311\006\"=\023\333\355\273)\rK85\377K\275\211\034n\274\372\272\213<L\030k\274\205~)=ws\r=\321\023\342\273\370\262F\275\246\"\353\274\355\377\'\274F-\n\274-\266!\275u\2314=w@\030\275\'\'\001\273\216\244\304\274U\324\234<~9\215:\3530\363\274~\340d<\264\037B\275\222](\275\242\220[<\262\367X<n\nP=il.=\325R\316\273\265\327\020\274\3135[<;t\037\275<el\274\025]\027=\024\356\211\274-t\245\273\224R\207\274\262U\022\274|\301\n\275s\371\270\274\366\004\353;\260\251S\275\246#\257<\236nR\2757&\034=\356A\274\272\356\234\025\274\200\266\362\274\361\251+\275\276\346\372<\006\272\020\275\026\224\005\275\330\202(=1\335\205<\334Q\335\274\331\022E\275\310-5\275\022P8\275\032\231\036\2731\004c\274<\301W<#\010\275\274\271\255\027=Z\242P=\027PG<\347a\036\275\264N\204<\004\336\027\275\255\032\260;q\2712=C\216Z\275Qp/=zG\020=b$\007\275JiB\274\371\305o\274^\251I\275\325\027V\275&\207>=`U2=\017\220~\274V\213m<\243\013\370\274=\344\362<f\366W=\262 \224<\364\220\270\274%?X\275\352\036\t\275\331\337\'\275\017z\037;\347o\266<\215^\024=R\0228\275\273\362o\274\203g\244\274\247\342H=\222\242S\275\020b\036=\200\247E\274\"\3455\275\014\223\330\274Gz\002\275\246\261\016\275\217\0336\274j\2236<p\374+=h}\366\274\344\016)\275\247\230);\340\257\205\274\225\026\351<\356\3450\275c\326\240\274\362\246\375\274\371\325\013<\345\034X\275\261\237\034=\242A\001\275\0230\216\274d\202\315;D\177\360\272NX\353\274+U==\361\027A=\312\207S<\036e\r=\277\024%=\313\356N=\"\212\251<>OM\273\240\217\001=$\356\260<\352\243\016\274\233\326\036<\210\336+\274!vA=\035\010\365<\003]P\2746\223\266;\261\331I\275\362e\304\274\024\257\221\274J\370\033\275\3074\003\275\225yT\275\256\254$=x\2253\275\326\244\002\274v C=f\362\221\274\320\354\025\275\375\341\277<\253\300\235<\022$:=!:\021\275\251\2365=d\247G\275+\203\270;\036\3735=\241\231Q\274{\351\027;AuX=AL =\202\366:\274\0053\360\273-n\033=\026\357\265\274\204_\252<\334\352\014=\363j\217\274\333\362\016\275\203B*\275 \307\210\274\231\263X\275\230ve\274\027\013\255<)\002\273\274k\251\023\275\221\346\264<\223\366R:\t\036\236\274Y\'\n\2751\234C<;+\025\275\374k\017=\3148\263\273\001\340\002=5t$\275\251O\004=!K5=\002\204\331\274\205\2660=\314\354\035;&\244\010;\374N\246<EZ&<\270\227`\274\233\307\027=i\273j<\320\271\300\274\010\302\262\274)Iq\274\273\326*\274\334\2133=A\332\013\274KB0=\004]L\275F)M<\337\356\341:\330\343\321\274r\263\030=\034\341\r<\331\250\007\273u\014C=\362A\313<\032\266Y;\370\210\303;x\007G=2\260Z=\234\020\220<k\272D=\376\307\305\274I\216\330\274\232_\032=b\272X=q\242V\275\226Fj;\r\377T=\004W\030=1\251\327<\325A\000<\004\322\372\273\231o:\272\255Z#=\023\362S<\037\245;\275=\231U\275\304\370\373\274\240\000T\273\251?\263\274\204\257Z\275\247\212\t;VY7\275\310#\350;\373U\244\274\\\322L=\027c\032<\307\372x:\032\261K\274\031%\n<\226\277S\275\022\255\253\274q\231\"=\301\340\017=#\025\206;\240\3171=J\371\020\275\226\300)\275F\211\003=\251U]<\032\227W<\303\027?\274d/3\275\331Z\365;\224<\255<\034\343\023\275\253\236\260;\202\262\036\275\325\3716\275X\010\023\274E32;>\247\353\274\352\353\025\275\203\226\2739\231\246\202<{dC=a\367F\274\270\324\225\274z\366\244\274\363j\216<\205\3561=\304\0105\272\231$\006\275\216\366\364\274+\245\213<\273E\327;~G\346\274\207\332\"\275\213\353e;\000\254c\274\376\010\034<\357\244\337\274\316\240c<\347\341?\275\332\0064=a\3353=0\340+=\177\315:=\275\016H<v\0138<\301O\\\274\0268\023\275\0274\312\272\347\002S=\0312<=4\364\":3\022\347<\260\210<<\214\005\222\274\371\254\327<T0\313<D\276\266<!m\342\274s\3324=h\336\327\273u\036\202;\337\330\336<\201\313\300\274\tuM<\302\005\210<\336\314Z\275\350/\345;JO\315\271\310>\370\273\326\254\267<\317$\311\274\376\'3=\226w\255\274Sq\236<\001\277\002=\\\234\002<>\277%\275\304w!\273\027r\007=2IQ\275]\271\032\275\206\310\273;\355\031\017<\0050\261<\340\"\254<.\372\032\275\204\2170<\307j!\275\305WK\275U<\006\275O\341\t=\316bK=\213=\236\274\211t\006\275\311\215\223\274\222\313:\275\257E<\273O\"@\273\213\r\030\275w\252\324\273\247\0162\275\341\312X<\035[\027\274\2001\034\274\022\315)=\363\275B\275\317\377V={\020\316\272\350\360\212\274\024\2405\275`\265U=S\344.=\332\344 <\007\317\032\275\255\240}:\r\320];\232\312\364\274\215\354\033\275nu\036\275Jb\335<1\365U\275\217\303O\275M\317\221;\032%\266\273\343_\021\275\006\323\024\274\302\202N=\252\237\351<GG\364\2741c\025\27576\016;\273\370q\271!\324J=\005m\201<3\257$\275\353!O<\265\372:\274^q\334\274\204\250\343\274\203\004\022\274vm7==\253\300\274Y\327\004=\34465=\367\317\246\274n\207x\274#H.<A\315F=\362\006$=\001\276%\275\353)\034<\355\322[=\266\200\337\273\266\317\0249\014\2154=}\346I\275Cd\220<\206jE\275\327\354\334\274IZ\245<\270y\257;\335\020\303<\t~?<\343!N=\317\361\362<\225\260\202\273,\375\367:{h\023\275w\252/\275Vh\375;/VT\273\365.\273;_\013\n=\253\304\241<\201b4=\"\302\025=\256Mz\274\342a%=^\224\277\2740\0142=\344|S\275\006\261\"\275\177kO=oK\312\274b\372\325\274\213\320\224\274P\275\037\275fu2=^\323\027=\320n\371<\363\352\271<~gT=Dp-:\323=>=Y\030X\275\260\034\355<\221D\214\274\217\205P=\355\317\267<\035\216\'\275\230\0272<@\2113=m\234\330<q\353G\274P\'/;zPU\275b\3649<8\212&; % =n\244\032;\215\334\326<\322\231n\274\360KR=\310\316D\275XO\260<\265\016\324;\232\017\034=\217\023#<!\222\000\275\234\231\352<\222j\200\274y\220\275<O\312\337<\265\233\357\272\221|q<H(\260<\267l\344\274v\00299\262\265\003=\304\270\021\274\262\371\353;5S3=\273\'\233<r\375i<\362B\261;\223\274R\274\t\360J<\311u\216\274\334\230\274<\352\374E\275\275\tR=T\315)=\317\006\247\274\271\221\356<nds\274\024\177\262\272\352\2509=\236\217L\274I\370\207\274\031}A<m\214X=gp\311\274]\3303\275R\001G\275\262Q\320:fj\264\2748\022B=A;I=\017\331\003<5\332*=k\344I\275h\333\333\274Q\027\321<\200Q?=\031\233;=.p9<>\",\275\335\366\235\274\014\246\241\274\364yS;#\036\021<u\302\321:\245J\254\274\202[4=B\266\377\274\216\372B;\326\036\010\275*>^<E*\025=\222s-=_lL\275T\223==}[\217<\350\367e<\230\002\'\275\331\264\025=E\317\343\274\376\021Y\275\274)L\275\231{\324<#G$\275\362l5=\341\245%\275\211\217\213\274C\214?:\356(\302<&00\275\370\265/=\301\221\200<\010-E\275\017\265$=\210\217\026\275Y\177\273\274\0221,\274uQ3\275\252D@;\206a\377<u\177M<F\204\364<\370u\230<\325Kf;\3502\206<;e;\274\364\257\033<w\3564\275\324*V=\257\321>=#\2260=\303\0200=\277\241\000<\222\223\240<\377\346\263\274\345]`\273{@\260<\030\031\241<\353\004I\275s0\232\274\236B\":\250C.\275\233\035.\275\220\013K=\316Y?=~\214M\274\233\313%=~\214\231\272\200\'\340\273\216\366Z=\3163D\275\247\343\274<\002\346t<\271qG\275\253\374\032\275\267\271\316<.\024-=\006U\322<\265\354\357;\304\300\006;\364\203\032=\321\304\377<\272\320\3119\341\341\340\274)\316X=\214\212\366\273\243\264\203<\rk@=5\010U\275F\214c\274\354\335\006\274\'\276\025\275t\221\004=\033\345\237:\'UB<Z=\001\275\250\243\023\274lY0=\245\222\234\274F\303\005\274 V\007=6\2123=f\022\336<\026\371Y=\265\333O\271\316F/\275\317\221\367\274\302\337N\275F\302\266<\036\252\256\274\004\361U\274\2765\231\274\024\253\035\275K\226R=\250\3434\275\013\237W\275\010\006\310<\'\032\241<\232\036\365<\232\250\021\275\253\002\017\275\035\2033=\300\274\307<\327_\332\273\260\251\243\274\251L\t\274\n[c\273\215\256\213<\214\355J<\214\250G\274\300\007\361\274\220\370I=6\"8\275\272\322\372\274\3239;=\252+\300\274\t\327\265<#\325\270\274\334P\220<J\332\246\274NI\001=\'\025 \275\313\363G\274\032-\245\274\221\2231\275\\>\364<K\357\314\274^\312M;H>:\275\222\260E\275\330a\321<\020\202\204\274^T\373<\212SU\275v$\033\275\231\347\304<j\334\010\272W\177{\274\366\234\357<\206\037\017=9KV<\235\020\270;h2\351\274:\001\006=B*\373<\032N\232\274)EL\275=\324\273;\224\324D\275J\007\271\274\345\235&\273\266\213\232<\222\305\317\274\247?\307<\3713\320<08\341\273l\367\220;>\254\222;\034M\021\274\r\201T\275|\246\\\274\033k\177<a\224\270\274\331\215\316<?\316\373;\214\t!\274L!\340<\335L\275\274\343\356\0108r\2208\275=F\361\2749\344\r\275\323\357\023\275\3146\002\274\352<\343\274:*Q\275qF\321:4\244\266<B\317\272<\234\246\0139\221yE\275\335\376\032\274\330L\n\275\354e\222\274C\222\027\275P\260\317<\343\r\216<\340J\262<j\'\030\272\375o5\275x\316\264<\243uS\275\265wY\275\326\365\022=\241!\013\274\235\301\000<\205\366t<\300l\201\274\362\256(=X9\033<\316?7=\372\356S\274\220?\231:\33703=\316\201\033=\273p\231\274\264V)=\035(\346<\241\033\250<ruT\275\273W$=0@\334<Z\252\216;\203\264\272\273\"\326 \274\246M@\274\217o2=\312\221\235<\232;\006=\201\034\010=\273\237`\274\371\324\n=\311/V\274\237{t;\227\220c\274\372G\325;\226\200!=\244I\200\274\271\223\225<\360\223\231:@2P<\014\375\261<\210s\027\274\336,\223<\306x\016\272\313\260\331<\355;\037=\'\340\303\273t\311=\275$\237D=s\320\376\273\213\321\017=8\3631=\266v0\275d\366\351<s\305X\275\035\036\014=\276\202\253<\203\267\324\274\242yY=\003ZW\275\260\364\212<\212\324(=\201\250\027<\347\354\274<\304\272>=\266R}\274Fi:=\247\243\377\273S\367\222<l\252\033<~QT\275\242V\347\274$\277\023=f\244<\274\346{L\275\333>?<\372e)\274\353\330\"=\204\300 =\014\213\013\275\002\353\021<c-\276<\346\004\213\273\266\252\"=+qU=\345v\251\274@E\010\270\271\355\016\272\237.E\275\030\322\275<\221\0141=nR\033=\026\\S\275S\006V=\032\370\334\274q\3065\274\2771\002=Jx\230\274\214\036\253<\'\311o\2730\251\203\274\337\357!;\257\0306\275\325\371\023\275J\265\216\274\036\177)=`\356\316<\357\360\2269\322\236\231<o<U\274\37106\275*h\021\275\036\343O=-Vc<]\016\032\275\177:M\275\367\215\201\274\331\032\031<\246s\321<R\010D=n\336\302\274\032\270\t\275\352!v<\210|\022\275o\374=\275L\020==\343\342\031=\253\351j<\271h\275<+\002\\\275\365\1770=\237\002\025:\275]\315\272\321\300\327<7\tI\275\375-4\274S\332\207\274~[\353\274\271\361\325\273\000\333)\274>\230\333;\314\255\270<\344\320\000=\272:\037<\347&7=\006\313\344\274\350\265\353;\336\037\220\274\242\265*\274#\201M=u\2050<,S2\275\217\2348=I\023\024\275}\303\254\274\361\212{\274\320\312\211\274\271\355\312:`\303\361<\301\364L=<.>=\004\016\323:z\211|\274\242\354F<|S\237\274Z\337,=\257\220\276<O\302v;\343\306\000\272\240sX=\0225\225\274Q\273\342<\237\224\242;\201\302+=\027Q\016\274\330z\3539<\367\354:\351\327q\274\223kR\275\030#+\274\266\005h<f\201\220\273\307U<\274I\271U=@\341\370\274\356\233t:\334\302\003\275g\312)\275\213eJ\275\234u\213:\003\344\227\274W\324\255\274\232_S\274\216\314(=L\211\304<2\306\235\273r\024\007=\211\247\334\273\034eK=\016\260\312\274\355\212\260<\225\0303=t\2232\275\323\332\224<(x\262\274\207\342-\275\210\233\241<\3424*\274ckH\275\005\031\363<R\356\262;\252\266\007\274\272\327\240<\003\034\207\274P\3650=(\210\005;\207_\002=h\333?\275>\325T\275*p\347<\024M.\275}hW\275\337E\224<\316B\210<\'\214\006\273\030;u\274M\026K=\205>\321<\251j\030=w,\350<\364\3712\275J\272p<\260-\030;\t$%=\025\322E\275\206k\310\274-\022(\275\246\220.\275\206\355\266<\376T\265:9\273C\275\003{\007\275\033\036\314\273\314\267<=\245\220\"=H\327\264<c\233\024=+n\020=w\t\016=\350\305\311\274l\274E<\315\342!=\377B3=Wf8=k-\250<\235l\323\274\270\342T=\277\212\206<Twz\274\010\270:<\000X6\274*\345\005=+\240\317;\370\327\256\2749\346A\274\010(;\274 /\307<\025\246\356\274_\235\274\274\272F\341\274\266\336\220\273\024Q\204\273#=@<\003s\227\274^c\247\273\362\234\030=H1\020\274iw\342\274J\3426=\226\223\036;\221v=\273\325}(\275\013r\003=\260\223\033\275\016\330\333<1\374\323<\205D\324<\365a\346;\364\214\212\274\r-N\274\034\357\355\274\332\356\250<\351\032u\2742\021\207:\364\025\320<jb\220<\274\272;\2755\367-:\003\0264\275Q\356\227\274\300\362&\275\360\0206=V\332\023=\277\223X=7\352\307\274\363\200\251\274\305\010\264\274Dg@\275\312Kq\274B\2564\275\251\364&<1\337N\275\033\201w:\347\244\307;\020!\232\273\307P><\341\237\210\274\276\010\377<\336\323\375<\r\036G\275Y\t7=W\362A={8\243<\334j\231<\021\352Y<\305\315v;\217\217\177;\366+\003\275\367\375\253<\212\350\316<\037T\336<\352-\217<Y=\t\275\263\\9\275\nx\3159`\364\010\274\224\301\n<\247\\$=W\211\255\272$\243 \274\305\321\335\274\304\366\023<j\236C\275h\201\036\275\014|\236<I\030\245;*\031I=\\\201:\274F9\022\275\371\217\016=\242\001 \2759\366\'\275}\022\\=s\343\263\273\371\026(<\254\302:\275\305U\030\275\205j\007\275?bC\274+\211J\275\027\033!=\031\023q\274\253\203\004<\253(\025\272\315\3335=\177\214\323\274%\366\035\274v\305K\275\301L4=\304\373\236<\351\270[=\277\376\343\271\276\253N:8\025\025;\363\205\035:+\230p\273r\307m<\345\312\306;\231\232\021;\211\225\227<(G\032<\n.\251<\254\306,={\200\352<L\222D=\006\274E\275\266o\271<\346\333\353\273\207\333\001=\277GZ\272O\212=\275}\006\000\274\334\362`\274\317\371u\274\032\021|\274N\321\351<E\007H\275\323k0<3=C\275\251\356r\273/\257\355;\240\335C=W\277.=\270\300/;\231\307\222\274x\311U\275\242\354\200\2723uR\274\370\200\372:S\214\007\275\256o\224\274\227#J=h\177\356<\3143Z\275\203B5=\271\3167=\307\340\240\273\370\005g\274\335Q\373:Y:J=\344\227\337<\017\231K=\341\0253\275|\241<<\236\022\005=-\362\023\273\375\231\014;\277U\312;(\256\255<\211UC\275N4\017<\365\036\301<\365\205Q< \375\300<=\'\010\275\341\355\025\275\311\323\341<\204\210\252\273\363w\001\275\032 ~<+\277\025\275\007$\343\273\335\013L\275\304\337\023=;\3216\275J\221\372\273\257sB=\345\270\211<\036p9\274\026\215\021=\222\034\264<|n\262;Gd\022\274T\031\2109\n\3234\275\355\033K\275_U\200\274pj\t<\232x\243\274\037\335\306\274\020\254\234<\347\225\320\273\257\215\'\274\260A\366\273\361\376\340<(J:<r\210\024\275\230\375\201\274\201\220\036=X\332\240\274\\\331\216\274PEx<\232L8\275\004\232z\274xwO=Y\021\'\275\177\377M=t@\263\273\246.B=\341\365(<\nK\007\275\302|5\275\367v\303\274\266h\017\275\307\231.=KM\n=\340\013<\275\031\003\232;M\222\026=\311k\211\274\025\223\255<\377\010\017\275\342\366T=<\244%\275u\327\331<\031\013\010\275r\333\007:\377b,=\022\267O\275\030*\274<\370zR\275\201\032\037=L!\371\274%_K=\305\334*\275~\247r\273\212\006\214<r\365\017\275\277\362\030\275\327\\\310<\233@0\275T\274\226\273\260\\\224;\017ux<\222\232\300\274?\246C\275\373\343\311;\272\\B\275<-U=\205;\003\275)\320\263<\351\211I\2746\242\007=e\035\"=\271s\242\274e/\301</\232\006\275p\177o<\205\024,;\350\013G\275\320\254\342<\2571\367\274\013\363\031\275\034\351\350\273h\033\306\2746\224\316\274\335\240\017\275\017s\022=0\017\264\273\217\\Z\275\253\322\\\274gr\247\273\230\3058\275a\030\244\274u\217C=\030\332\323<\3065G\275\201g>=EH\347:3#C\272G\024\370\274\334\2324=\231\375-=\320\335\022=2\010)=KS\253\273\317O\304;\356!+=!\313\375\274\026n\234\274\371\362\301<@\2002=\217@\007\275;\200\351\274RV\016=T\335\217<\241\204l\274\327g\275<~\036\353<\304\214V\274\2004\220<\016\336\002\275\207\235\001=\205g\013\275\350z\307<\033\323\252<$]G<\247d\026\274WS\271;\330TU\275\343z\277<\200M\026\275\233\257\014=\250Kd<>=\320\273D,\246\273xL2\275\260\372\032\275;\034\314\274A\255 \275\252\365\376\273\355\322W=\2018\341\274\341BY\275\210\001\311<\252\025[=\221\276\304\274\343\0314\275\212c\"=\326v\331\274\301pS=\332\253\264\274F\305\305\274j\0079\275\342S\374\273\346\rU=\323\371V=\261_)=\037)\270\2739\360?=1\326)\274K\310\256\274\217\241\260<\325cZ\274]\267\322</~\237\274\315\n%=\343\321\206\274\206v\032\275\334\326V\275\250\215\032\275\266|:=M\354Y=\356\3538=\001\204\210<+4F=j\222\000\275C\206\036\273)\214\356\273\007\363k<\253<\357<\242^\232<\332\232\275\272\007\213A=\210n\021\274\010\311\316<@B\006\274\206\033\326<R\006\240\274N\203&\275\323j\323\274b\020J<\367\362\332\274\371\361\n:\310 \034=\216\244\"<}\257\371<\265K1=\010\036\003=\364\361!<1\370/\275k\214\003\275\262>\250\2748\210L=*\267\375<\361\235\267<\377\342#=i\372\300;\271\340m\2748o>=\027S\270\274\337v\374<\022\242\'\275\246\200\350<\233J\036<\324\'\001=os9\275\335\236\264<\210x\023=q\032U=7`\276<\301\340%\275Vp\325<\350(\023\275[\336\255<f\362N=\347\261G=\364 \r=\300_\312\274\010I\033=\010\021\002\275\036e!\275\217\2267=B\256\000\275fE\377\273\021\201\224\274=\336W\275J1<\274\364\364H\275\0057\260<\362\346\017=\363\203,\275\350\017\003\275!\214\340\274\345U\027=\350\014\333<\212\214\036=\316a\310\274\207\331\304\273\234\ti\274\346\234J\274\027\013\001\275\351\016\014\273\315Gv\274\"7\232\274j\014@\274\027\022\277<\366\317\366<\035\312\374\274\270bW=\277\207U=\357\202\004=\001\246\327;\351\311\020\275V\342\022=\'7#\274\221\272\307\272\n\352 \275\261\215\"\275`DC\275\322A1\275\247\321\356\274V\324\232<\373tH\275\350z\027;\316lZ\275\230\t\023=_\212Y=?\305\007;y\3355=!>\213\274\232\251;\271@\021\031\275<;\017\275\306\371.=\005\200\350\267B\350\242<\360\262R=\322R$=\247\3025<\007\016\016=K\272\010<Z\304\003\275@\352R<\3130T\275\331jM\275\006\343\\<\273\237\362<!3<=L\222\037<\376\304(=\035z%\275]\320\006\2750\300\036=;_9=![\t=\220\235\030=#9\300;\214U&\275R\277\005=\204\201U\2756t\227<4\2162\275kdO=\024nD=\214\016@=\247\377)\274A\343\032=\356zN\275\001a\255\274\017\023\233<\335\036\246<(\310\321\274I\310:\275p\010,=\224\016*\275HH\004\274\371\237\347\273f\2337\275]\204%\275\332\304(\275\202\216\254<[\325 \275\375\307\355\273]\262\217\273\303\r\013\275\272@:\275\022\353\232\274\245\256\341\274\030\322\036=\362K\275\274y\301F<O\310N\275Y#\225\274\246\364\014=\234\300\225\2732\252\306<\317\367\335<\337\366\003<\353eq\273\221Y\356;\246^\3229\3145\275\273\314\301\200\274\363\331@\272?Q\010=\236\366\337<R$\031=\014\254P\274\253\320\t\273\025\\\306:0\006\232\274U\370\t;gw\016=c\005`\274\207\000\005\274\224\3167\275\326\277L\274\2558\327<n\306?\275C\241W=\371\364`<\210\250B=3ZP\275\010\260\373<v\216\207<\361X\022=\000\330\217<gN\202<mx\020=\270\277F\275\363tO\274\207\347&\275\360\036\026\274\031EN\275\037\037\023\275v<4=\220\277\034\275\223\310<=W\004\232<\202\214\n\275\336\362>="
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
          dim {
            size: 4
          }
        }
        tensor_content: "c!\254\274\342\006\305<\254=7=\357\233%\275\333\212\214;L\003[\275\327\240\271;\340\037\024<\200p\255<D\252\235\272C\202\222<U\322\3139\rfS\275\216\206X<\305f\217\274\222\303<=\245\367\030=\310\'Z\273\tX\026\274\332\324\0219\223\025\311<\010\351\035\275\314\234 =O\2530=d#.=\361\032\224\274\230\2727\2758NZ\275\020\317\207<j\202o\273\301\2769=7\340K=\257\314\242\272AEK\274\243\006\334<\001\370\273;\036\306><\306-\307;\351\311W=d\301\302<\271\304q< N-=ya\014=:h*\275Z`\202\273D(\"=\341!-=\334\375N<\377\223U;\314Q7\274\016?`<\365lW=,\177\206:\210\236\330\273\247\3651=\223\016\035\275\374\273O\274\336h\306\274\200n<\275\243\274-\275\023\210!=\301\261E\275v\334\275\274a_\244\272\027&\252<dYR\273\366\036\232<\r)\253<\217\275-\275\014\314\n\275c=\347;\340\257\364\274J;T\275^\313\244\272vX\366<U!3=\010\337\204<`\376$\275f\340\005\273V&\010\274\212$\r\275\241\265\202\274\2462\310<\321\241T=\304\264\025=\223\271\021<G\345[=\266\001\227<Q\r4\275+\331\026\275S(N\270\367\0346=\020\355\336\273;D\337\274}\371\362<\241\234\227;\343\222$;_*:\275\242\3774\274\204=5\275\363s:\275\t\243\221<\362z\335< \352K\275\346\003\345\271n\341\253\274.\237\037=\261\221J=\207\3425\274\333$-\275^\267A<\370C\366\274\211\030\\\274\004\267\363;v\273A;+ \340<l\313M=:\211\371<\325a\177\274\024\327\265\274\010\\\022=\370\3227=4\010\357\273M\024\036\274d\032\204\274\213p\331\274)\227\024\275\022\236/=\313}2=\243\377\263<\323d\272\274\272\346 :\200}\307\274\202\366\304<\212\204\t\274{\257\304\274R/\202<\270\251\002=\300(A=\326\234\033=\206\312\263\271\0211\030\275\021_P=J\347i;\370\255\006=\326H0\275\204\014\001=\213]\r\275 \366s\274G\236\245<e\3376\275\365\241O<\032\005\022\2741\006!=h\256*=H\006\003=\234\265Q=\024w1\275\330\214\353;\241YP\275v\016\222<\304\264I\275\260\362\257\274\"\241\320\274\037\331P\275\323\274\206:4M\316<\006p\200;\351g#\275\224lW\275\332]K<+\217W=+\372\311<\334\272E\275\021\017\034\275\240s\353<\177A>=G\212\003\275\242\326\031=\261z\022=\266\032\000\275\336\227\022\275\352\343\3438\216\315\275<\022\014\260\274\253\316\375\2743\212\240\273\373>\n=G5\354\271\243\306$=\034\317D\275f\263\r\275\032)\\\275}\2557\275\306Z\227<\002C]\274b\376W\275\344=\325;\375\310;\275gs&<\277\013j<#H\006=_\217\024\274\362\223\246\274\221<\370<\332^\267\274\000\035\010\275^\343#<\275L\263\274\001\035\217<\374\370\036\275\365_\231\274\032\207C=\345\366!\273\177\233\265\273\300\212\003=?\362?\275\216\335\021\275\344\340C=\250\270\007<\242\212\357\274\272\216G=\202NR\274~^\003\273c\300\010\275\353\321\373\274/4\016<b\200 \275\004b\000\274\336>?<[`^\274y\301-<\320\2269=\307\016I\275w\327\372\2744|\035\275\005\241\335<\027\201\013=}\260\032\275q\321\017\275A\265f\274\313\256\300\274\267\355\277\274\210\336?=\237\322\003\275m\325E\275\303r\331\273\037}\033\273l+\233;\026\337\023\274\227\344\022:\367w\335\273\306\227\323\274\376\007n<\336\367X=\323\261\246\274\271\302>=M\030\t;\262i\341\274c\350\002\275\026`\243\273\317\003G=\353\302\337\274\350\177\252<.\252U\275\320\2109=_\322F\275/PF\273\177\365\2709\323>\204\274:\2265\275f\316!<\326\325\254<\2423\035\275w\2369=f\305\006\275\030\264\032=1o\312<\261AT<\337\027\177<\314t\206\274\260?\270\2730\n%\275\240\331\022;\371#i:E<\234;\355\254X\275\323\t!\2759\023\036\275\014\004\335\273\221\3777\274W3J\2743\031O<\026zZ\275!\\\026=\307\013\021\274\231\030\020\275/\256\27631\327\033=|\207\031\275\033?4=\340\247>=\217t\256<\345\373=\275\276\037\004=83k\274\177(<\275\016b\227<\314H\200\273\'*\033\274\337;A=e\367D\275\016\331=<x\177\323\272\002d\276<h/P\275l\201\310\273\371SN<\241!\021\275\252\265\340<\370A\317<}*\004\275\023\2352=Xg\t:V\240\272<N\344N\275\315\032\033=\036\340\341<\023\004\337\274\321\267\237\274fF\207\274\230|\332<\014k<=\265j\013\275-\214\303<x\222\212\274a\373\216<\306\n:==\244\204;\366\326\264<\374\377\325;\264\377\t\275R|R\275\256X\030;\312Y\204<\354\226\014=\363\314Z=\330\241\032=\301\327\363<\231FW\274;\325\032\275\026\243\031=\361GW\275^\271\201\274\310\341)=\243v\324\274O\007)\275s\210E<\3360\014\275\312K\024=\271\261\354<\220yH=k\000\213<\272\322\256\274\204f\241<ij:<\272\326\026=\371/B\275\036\272j<[\000\237\274jS\212<\340!\360<\357i\313<\342\022\344<\353\n\360\274\277@\236\273\207\270\006=\270\222\235\273\244\251O\275s\235\203<\233\220\007=1L\264\274\240\210P\2759\373&=f\232\014\274\014\340\030<P\315\034\275`\205Z\273\260\263\273\274\036*\t=\334:5=\337\360\035\273\276\325 =\227~K=\334\375\203<=a\000=\231\201\226<\310\341O\275\227\300\220<\014\2223\274-\347\240\27475;\275c\002x\274$*W=!\205\256<\222\022+=\367\340\'\275\317\222!=\344\256\234\274\301\0238\274:\220\013=\357\210\225\27415\274<\333\2406\275\025\326\006=\210f@\273\210\263\335\273\303\260h<9\237\220<\260\021\\\275\210OM=^+7\274\217\241\307<\223\304\007\275\321\007\341\274y\254\312\274\0211\360\274\3403\022\275\342\3557\275\240\332\007\275\203\375\010\275\314\330\000=\374\337B<&\004B=\tMs\274\231\372\314<\264\366\034=$\3340\275\335\324M\273\003s1\274\357\002\377\274r\212L=\264\316\335\274\372\021\032;R,\003\275<\t\241\274\275\030\023=\027\234:\274\017zJ\272\177n\003\275\257*9\275M%\225\274u\367\337<\271%#\275\023\211==\002\267\313<\241\267\214<K\n\304:n,\263\272nqO\275t\231\255\274\272\232\345\274\313F\340<\006\336\000=y T\275\367\360H\275\330xW\275\277q\376\272\237\260X\273\2774\017=C\034\237\274\033\274\327\274& \354<G\247N\274o@i<}A6<r\332\"\275\026\225<=U\211F\275\240\020\177\273\031\322\370\274\240\000\261\274\245\272d<\370\347.\275g\245\304;u\001R<\360\020Q\274\3439\330<\350\337\022\274\025^\027=k\304\333<\270\343\233\274\2574<;\373-\021\275\304OZ=\266\3235\275(UV=g\240/\273\255\327\037\275F\220\037\275:Z\213;\214\206\274<\230R\306\274\363\222\002\275\244\335\306<\r`\221\274\036\360I=A\026G=\211\030\032=\377r\010\275A\257\362\273\214:\010=\271c\222\272$pF\275\"&J\275\250\334\327\274*\221\276<\220\305\024=^\311.\274\002]\037;\320\272R\274\3313P\275v\320\243\274;g4=\243\233i\273\274\314)\275\226\264\037\275\2142M=\305\3527=\311\232V\275\022\204\343\274Dh\033=\353b\370<\310l\"\275%\312\232;?\346:=-\342G=\275xT\275\27583<\213\221\037\274\274\025,\275&\004>=zoL\275\250\345\203\274a\266E\275U\273n;\372NW=\242\273\027=\323\211\267<\375\316\201<\030.[\273\033|=\275\245\333\032\275\032\370\036=\373,\002=\2525E=%\240\365\274\240`[\275cmF\275\203\016F=\r/\000\274\264\327\231\273\004Y\263\272\344\307&=\363\354\367<\256y(\275\300p6\275\351\314:=\004]m\274C\202!\275\001]\021;I;|\272\2721\002<z\021\000=G\305\330\274\325\377\026\275%\266\316<\241\007\003\275?\000\252\274\036\250C= ~\036\275\036\353\036\274\200\341\371\2743O\253<\310\210u\273\201\244\244\274\243j7=E\027\007=\341\363\224\2745c:=\265&\031=H\034-=\254\001\346\274o\272|\274s\013F\275\313\273C\275\220N\316;\227x\322\274\337\016\363<G8\361\272)\355V\274\220\256%\275\202\262\034=7\263\023=\361yB=\275IJ\275\325\257\340<dQ9<\027R/=\343\221&<=L\265\274d\n\355<\031\321@=tE\357\273\n[J\2752\252\234\274\324\222\277\274bw7=*A\313;d+]\274\26450=\332Y\255\271\270\313K\275\352\235\234<m\2061=}\026\260<\273\373\210;\261\335\000\273q\301\301<\324\245\244\274\3149Q\275ua\034\275\277QP=\224\223\245<<C=\275\227\004\317\274\240*>\275\365\345&\2750B\226\274\336*\n=\251k\233;\025\214\016\275 3\247\274\207\331E<\017\225\203\274\305\361\202\273\370<\234<b6\223<\344\324V=nS@=\250hA=F\251P\275\370lS\274#=\027\274\312\201\021=\005\376\036=s\322\214;\352R\301\274P\344\007=\204\341\277<=A\\\273pQd<0X$=\262\205*\275 7\265\273\3475\005\275\n\351\206\273\262\232\017\274\254\036\216<\367\272\003\275\257\366-\275\037\020B\273\340\263\301;j\301(=\201\2378\275\005\017\017\275\225\001W=\205\267I\274\2005B=\177\365\212:\264\023\346<Nw\'\275-\331D\275\260\373\306<u$X\275L=\336\274\344\234\\\274h\204\201\274!\227\376\274\351\271\211\274\030\314\017\273;(3=\370\217\352<\224\345:=\374x7=\222\t\034=2o-=g\216\002=\302\035\341\274N\177s\273\"_Z\275q\263\022=^\220\216\274\222\001\230\274\277\340\r\275\2108\336\274\227\210\353\274\2433\224\272\240\344\353<\366\316!<\376\324>;\026(!=;\335/\275\237\036%=\214\263>=A\000\220\274\215\320\362\273\t&\000=#^(\275(&\026\275\372\347T<\276\237.=4\030*=t\354\017\275\324\331\311<\264\360\243\274\352\211s;\362g_\274\033\016\004=*\234\333;G\203\200<(\2373=\000b\220<\231\005\241<\344\223\325\274O\277H=\032X\023=R\224\364<h\236(\275m\2130=\315\021\000:\335 \335<C\027H=\013$-\275\"T\270\2737U\362<\346\352\372;\371\2161\275\026\rL\275\020\3115<\300\0352=\337^J=w\224\275:\376\021\005\2749\364\n=\212\350\304\274\000s\206\274\334\2051=:-1\275\346\335\006\275\223&`\274\360zU\275\013\322\006\275\214\327!=\001\326d\274\t\334\333\274\204B\250\274\244E\210\273\350\3712\275z\377X\275\340\360\347\274\237\363[=o=\026\275\324\214T<\262N\\\272\023\275\230<*(9;\222\305\t=`\230\034\275r\265/=\343R\310\274\277>\003=~\003$\275\316\035\222\274u6\273<\327Q%=0\352\347<9/\036\275\251\317\013\275/\204P=\337\0165=\026k\344\272\336N\207<\361\017\016\275\211L\355\272\314\252J\274Mc\321\274\nP\235;/\243(\274\227\363\310\274\254\311/\275\221hC= m\010\275\274V\275\2742\303R=\031\211(=Z\211\032\271\024\335\002;6h6=\317,:=\356k\037\275[\260n\274^\'V\274\013jF\275n\314D=m\317\257<\330\013$=\206\337>\275\366P\367\274\252\266\344\274\243z\014\275J\2042=\246\034\213\274\023\246\353\274\373\272/=\'\000\007\273\326\200@\275\023\001\337<\020\255\033\275F\346\275<c \257\274\351\255x\273C%\345<\227\177\003\275{\303\367<T\034Q\275c\020S<\210\212\314<\005.\036\274\000]N\275\360\010\213\274o\332L=\361\024\205;~N><\016^x\274p\227&=d\033\344\273\375CH\275Y<\367<lT\235<Q\201O\275\225]\223\274H\3720\273:\276\340\274Bl\202<\251?\373<dY\037=\216N0\275\335\262\017=\332!\\=\302D\310<\245\n\305\273\2139S=&\332\"\275]`\341<\232\2535=PB\305\274E&/<\n\310\226\274T\351!\275wK\337<\355\246\242\274\200\255\317\274\245n8<f\202\014=^ \n=6\036[=\314\243\331<k_p\274\007\t3\275\260k\356;\023#Y=j\263\'=X\033\t\275T\316\037\275\\\363\242:!Q\251<\376I\243\274\337h\315;\321\211\377<\230\240[=3\252X\275\260\273\361<\331\200\333\274\236\252\306\273\215\231\006=\375\216R<Hz\361<\026\036\026\271h\034\214<\243sZ\275\324\340>= v$\274\316\036==\355~\r<t].=\223g(<\223\334U=\261\n\341<G\307\277<\307\220]<\331\317:=v@.<9\215\311\274\241\204$=\354\354\366;M\244\007=E\270\347\274\262{\251\274\034\300\326<\376\247\023=\222\262\251\274\202\206\250;\272\366\335<\316\323)\274\217w.\275\264\327C<\274_1=<B\210\273U\036\241<\323\031T\275E\320\000\274\307v\014=\300\306\237<\343\310\251\274\224SB\275N\271\247\274\257?\362\273\014\245\0308\026\336\017\275\010iH=\257M\372\274\315\344(\275M_Q\275M\345U\275\253\375r\274\317]\247;9U\207\273\262\321#=\365\250O\2753IK=\036~D=;\014\374\274S>\246\274<\2413\275\211u\213\274\337\334%=\266\021Z=T^\356\273ir\311\274\303\361A=>G\261\2745\005U=%\374@=Y\373\206\272A`\254<\373v\331\273\2567\007=L\350\245<\345\322;\275{\363;\274\re\344\274\'\373/=\332\017\033=\222)\255\274.\254:=\343\202\r\275WZ^<\222?\006<\262\270\354;dk`<C\214\353\274L\273\010=\276ST\274/:\353\274\352Y\313\274:A\035=\236\033<\275\367\245K=|\032\337\274\301 9\275M\206\030=\233\266\271\273\347\030\356\272\224\345X=D\371J=\365\357\014\275\303=j\273\031\3574=\367S\300;\375CO=P\240\036=\022\223r\2740\357R=\262\363l\274\241\3621=\264&\014=h7\224<;\353X\275\027-%\275Ve\335\274\216\003\033\275\006\336\016\275l\247Y;\3559\370\274\317\020\273\274E\256*\275\302\330\231;\2213[=1\302\007=\036KJ\275\307M\214\274\370\001\032<L\001\264<*V\307<\206\225\307<\354\247\n\275\225o\245;\004\025\223\273\237\340\245<\177M.\275q\344L=-Z\032\275\337I\230;z\337\355;\337fJ\275&\375\013\275\021\354\240<\321!\024=\374\375\036<\300W\210\274\324\007\016=\312\245\267<\251?\250\274^\317!\274_\364O\275*\321,=\003\340Y\275,$S\275\201\034l<\366[#\273>\247T=\205\033F<\353V\214\2747\205:=\251\311\"\275\267\016B=`\330\266<\004SN\274H\332\022\2756\254&\275?\307\203<K~\262\2747]\221<\230\232\006\275\215\305\351\274:\177n\274\347\321\230\273.\005P<\010\214_\2740\005\016\275_u\352;|\326B\275n\363&=8e(;DhO<j\205\t=S26\274ciR\272\035\017\246\274\343\244\277\274\317Mu:z\3729\273-z\335\272\373\252\002\275\320\004;=\254\207\206\274C\3458\275\361rr<>N\325\274\251V<\273\332U\034=&\371?=\312\204\203<\226\013\026\275\177$\235<h\023\333\274\362V\317\274\200\325\036=\2077k\273\374x\272\272IP\204\274\260\251,\275b\016\210<\366\232\034\275\304\236\346<\262\340[\273\346\272\201\273\005qT\275*QV\275W\375\014=\262x)=e\203\n\275\374eG\275_\226j\274\326\250r\274J\330:\275\3606\260\272\025\242\216\272\315\260\232\273\313\321\221<g\210$=dN \275u4\214<\364R\367\274%\013\343\273\372\3757\275E\025\031\275\232\313\331<\245\374?<\261\210\022<\025\376\234<#9N=,\343\241\274J\251E=}\357\025=\237\2749=\211@==r\222\256<y\037\"<a\001J=\003\230\235:\007\024\300<\2061X\275R\362\026=@$\375<\334\024E;\324Z\207\274\270j\013<\275>H=n\302\024\275x\230&=\201\335\001<\207\325\347\274\356\026\342\274\340T\374\274\324I\001\275\265\225@\274\363S\"\275\366\214K=\302\234\227<8pW\275#\266\000\275\371\370\236;3\262`\274\026M&\275\"\226\220<C}\225\274\227\362Q\275\326\366\253<\220\342M=\\\0058<\264\005\031<heO\275<@\\\275[\333\001\275j\0021\275\222\320\004\275\371\0076\275\365\254\205<\3006c\274V\033\031\275\310Li\273;4\t\275\326pO\274\357\253!\275\353\225:\274zi\211<\236\313\225\274c\263\336<\204g\023=,3O=\276+\273;\364\345\227<ky\030\274\356\2416\274\010\2763\275\327n1\275g\273\006\273\235\231\335<+\356\213\274\221\236\304<ZU\350<;\321\023=\3512\014=b\305\014=|\247\013=\236\313\034=d0t;O\307\251\274\321\376N\274d\210\020\275\214r\214<\340n\220<\027r\023<\276\005\024\275n}\341\274\344\266\215\274\327:G=\262\342\361<\240X\020\275\222n\031=\200\032N\274\036\\\032\275\311\300\331<\350*U\274-\370!=\2518\325<\215\355&=k\267\031\275\241\300\016=x\322\266<\006\261\013=\250#+\274\027\005\333<;M%\275&y\204\274\343\234!=\360I:\275ATK\275\254FC=\243\n\327<\331\203I=T\214C\275\2604L=L\320\003=>\341-\275s\313m\273\326\006q<\002B\235\273\340\272\252<\235\251\325<\202\205\373<.\235\347\274C\220\326\274\271\243\246\274,\242?=\231/\032<\312\216;\275\355\371\036:\311\':<[xZ\274m\364\r\275\341\rH\275\276P\255<\364\022)=\237Y\340\272!\033\004=+\022E\275U~\237\273\224\014.=q\022!:-\nN=m \035\275\333\251b\274\365\330\305<\201\347$=N\257\t=\330\361\234:/\335\271<\031a\331<\303\202.=\n=\337\274_\203D=\307\3212=\013\357\014=[\034\276<Z\361\024=\214\302\371\2741t\014<\372\255\034\275X\323G\274\033\377\221<\345\331,=\306R\300\274\302{\212<Cz\t\275\177\265M=\301\225\210;>\211==\017\3001\275j\036@\275\372\266\"\275\035\323==\000\026\247\274\314/4\275 \344\307<6\220\315\274@\355\014\275\033\253?\275W\021:\273\326\222/=Zh\033\274\262\361>\274\224H\r\274\0016o\274\200h\013\275s\224#\274\356\364&\275<\264\232\274\344EP\274\367c\277\273\250\301\036=v\375:\275R\367\007=\312\002\022<l\245\330\274{q\017\275\214\230\377\274J\311\306\274W\241\324\272\3535\352;<\031<\2753C\030<\237RJ;\203\336F\274\212\276\274\274X\016\t\275*\331\\\274\340m\245\274\205U0=\300q\037={}c\274\014\244~\2743\034.\275\222*\264\273\000=\036=Q\017\212\273\365\3737;A\371S=\265m/\275\376\214\013\275>\375\003=\325\366j\274p\022L\275\256]\003\275\323\216\315\274\024\2740\273DV\017;\222P\352<\306\270P\275\305\247\275\274M\221E=-\277\003\275786<\rz\276\273$\t\340;\226\355\243<2H\006\275h\252\001=\365\314\235\273O\247\253<\030\307F\275h?\260<H2\242<\202\246<\275\3632\312<\270\272\354\274b\326\327:\3614[:\202\014D=U00<\037\343 =\327\354g\274\355sI\275\221R\035\275\254\203\021\275Sm\\\273\353B\022\275\345`7<IY\005\275,\312Z\275\262x\004<\227\361\020\274&\037\271<\366\2415<YBN=\321\3452<\302\003\201<\200\001\366;\332\210\251\274(\003O\275\025p$\273\222\007C=\352\2549\275\246Y\211;\3151!=B\364\213<\021\\ \2757\300G\275\275\013\265\274\231d\340;\3462\274<\227k\313\273\254\267\263\274*\356\266\274\n\247\312\274ffT=\002K;=\245\00589\2304\034\275\335\304\220\274\276\341\311<\264c\024\275} \212\272\241\037I=mg\220<\335\004\307\274l\375\333\274\n\320\345\274{\363G=O\222b\272\033\177\265<\262\0320=\260\253\"\273\351\353\035\275\245L\341\274\'\346\245\274\343\264\335\274]\242A<\375\231\311\274Kn\242\274\347=\335;\355(\305\274=\000\013\275K?S=\343g\311<\342\'\016\273\312\207&\275\243D\336<Z\210\020<\367\327\337\274\250\254~<u\373\010\275\271\3664=\242\367Y=0\024\234\274y*:=b\000\325:\362>\315\2741\3609=j\230\350;tk\370:f\220\206\274lV\232\274-\255\207\274S\005\032\275\231\265\n=_\003<<\276W\354\274\332\200>\275\263\nl;3\026\250\274B\277\265<F\273\037\274\232|/\275Bd\325<\304Wu<\323G\033=\243\342\377\274\327~\210\274O\205\014\275\331\236A\275\0252\211<\215G\'\275\006\271d;\272\232\266<\237\321>\272\322\270\367\273\271\300\3507X~x;\310n\263\273\271d\275\274\334N\t=N\355\241\272N\207H\274\260\364=\275t6\337<[:\"\275\306t0=rh*\275#\353\307\274\373\274\357\274\037|\333\274\221\347\243;\320P\240<\006s\016=&4\263<8\205\024=\317\372\364<\303\237\306\274\267b\271\273\tO&\275N;\222<L{L<{\247I\274\333\nV=\314\245\032=@\3556=\241\n\014=\311\333\020=\022\242<\275\216\234C\274k{\256:\270\243\024\275W\037\022\275/\016\352\2749X;=\334\204d;\275\225\017<\0346\205:\375\016\243\274\347?K\275\260\312\036\275\323Q,<}\244C=\260\002\007\275\353\202O={\337\263;\023\251&=\212\\\356<\256\300\375\274\327\005\010\274D\276Y:\233b\t=\352\315\223;^\371\374<\020);=\371\030\313<\337\251\350\273A\317\374\274\210eg\2745\364j\274iB\032;\271\027Q\275q\243D<\024\205\365\274\300\024\036\273\334\t \275\230\271\277\274\205\2065\275\n\317(\275\t\332\020<\335\345\033\275U\2259\275\"R\r=1\'\257<u\032\235\274\005\002N\274\017\336\302\274\212\267\002\275ANv;\217\353J\274\t\004\267\274HrS=\3226\253;m\n2=\330\335\255\274\'u0\274\316\302J\275\'T\341<\275:\334<\322\324\373\273cE\361<\005(1=:\220&\275\017\266Z\275\022\352\001\275\246\343\263<2\334==\\\372<\275<\236]\274\004\000\327\274$\tY\274\326\3543<rT\343\273\305fI\275,_\025\275\004\210\007=s\\\350\274\251\315\345\2742ye;\302A\246\272\347@\261<\331FE=\024\354+\275\002\2028\275\357\352\201\274\260o?=I\037\252\274#FD=\256\230\313\274\365\004I\275\267-\360<\232E6\275AB\306<\000\3023=\350=K=\223\330\304\274J\322s;+s\"<\367\3207=\263\246\002\275\353\365T=\304\254\204<\016\033\'=\216\010+\274\265\354\336\274\203\245\346\274:\275\032\275\210vG\274p\024\351<\202p\027\275\377%\201<\223n\220\273\340AJ\275\205\275x:Sp\332;\377$1\274\267\204.<_\020p<\256\206\341<<`\224\274tu\001\275\236\356\230<\330eI=o8\025=\353\367\371\274\213\343\306;\243\334\001:A\256N\274*\315 <\232<-\275{\3534\275~\372\354<\211\201\030=\337R\023\274\214\313\243<\233=V\274\264\303!\275\235\245I=\366\230\310\273\260m\376\274>\364\310<y\014\317\274\001-B=\230\313\307\273[\305I=Rf+\2757\270;\275\262\360\254\273\301\224?<$\377d:\345\344\035\275\317U\333;\177\010V\274d\335O=\216\300\264\274r?;\275\202\022Z=\276k$\275\313\233\230;\326\354:=b\227O=\223\002\250\274&\216\001=6\351X\274\336C\246;\256*\027\275$\331C=\036\242<\275=\351\026\274\"C\250<*\271<=\263\332\225<W\3458=\017\274\177\273\255+\215\274\255\226\226<:h\323\274\224zs\274+c\200;\254{3=\257\3153\275\346\021\313<f\030\351\274\206\004\225\272\025\362\310<8\366\r<\200\322\037<;\007K\275\023CD\275\372(\316<xOL=\204\030\265<\0017\303<-D\033=\3279\001=\2068\017\274]:\211\270c\203\037\275\274\224\007=\245\255*=\250\236N=\241\0306=n\271\266<m\351\034\275\"?\275\274v>w\274n\026\244\274\324\211!\275n\334\033=\246\001\030\275\"hV\275\370\211\243<\344f\304\273\232y\021=\252\177J\275\010\036H=\323\220,\275\000\371\322\274\321\212N=\244\244\262<\026\243\3669\263\334~<K=\016\275\007#\363\274/\263O\275\007\320\370<\247\n1=0\250K\275\267\036\022=b\366\024=\010\3767=\330\320\023\273\342\221\326\274\271\002&=/\230\243;\\\347\307\274L\335!\274Pr\t\275\231\243\244\274\n\275\225<\017\377S\275\305H\313\271\014\267d<\031\3735\274\343=\017=M\323\031\275\340\321\365\274o\000\007\275\246i\022\274D\264I=6\352\023\275y\364\000<\236\227\351\274hVG\275\364t\277\274Sv\021\275\316\025?\274\373#\311:\262{\240;\377\n\275<\246\210>=\027O\237<\341c\005;J\254\016<\356\354\177<\t\303\222\274\373\341\333\274\361\251\303\274N=\213<\013\275\334\273w]\355<\017\244\220\273\353\212d\274\262\013\001=\215\234\266<>K/=pyG=K\274K=\226\270\355\274@\r\035\275\237\367\257\274\216D\264<\267\0321\275\'tR=0\350\021;\023\021C\2751\343B\274\213\303\303\274\265\206\217\274|\023Z\275\033\001<\275\036\\:=\305\207\005<\343\032\237<)\013\341\274\377I\030\275J\254==\345\256\006\275\274\3131\275\354D\241\272\351\361\223<\363\266w<55\266<\036\231\035\275\3622k\274\375\203O\273A\003L\275s\340B\275s$\273\274\211\254N=\177\001c<;,)\275\326\351C\275\347]z<b\203\332\273\221J\303<\335\361\232\274LA\262<m\026\324\274j\224\304<\005\n\343\274oP\300\2723s-\275+3@=\360\366D\275\262L\016=\225 2=\024ZE<OmQ\273\341\356\226\274\023)X=\301X\t=5SB\275&0\006\275\021\352\031\275\220r\"<\261\226D=r\342\327\274\2308\001=\007\205$\275\347\335\363\274k\231\357:\267j\002\275l\334,\273W@\265\274\010\344=<\006\222\260<[\242\337\274\352>:\275\352\245\037\275\230\323>\275\265;Q<\362\017+=\247\324\007\275\324\325]<eY\317;Xn\207<:\037\002\275r\003U=\215X[\275\312d\t\275\202F\271\274\330\354F=\364\355V=\253\034\375<QUY=\234\027\010=\306\321#=\264\317\233:\226\004\032=\234\023\234<\374d\240;\266\354\255<\225k\364:\232\241\001<\2253\302\274\216>[=\033u?=\2553\310<\276\017>\275\252\027Q<\247\241\016\275\326\030(\275\027\306\352<\312\344\024\275\370\211\027<\335\206}<\n\2041\275\2735\021=\337$G=\345\224\253\273\031\242G=\277\367\342\274\261C\n\275\034t\310<T\327\370;$\237\017<\367\326\226<\346>\"=\270Z$=1\023\303<(d\013=\224\376\335\273\312\323X=\260/Y\275\322\267M\275W+/\275\307\234\344\274\024\264\350\274\250\217 =\330\275\207\274v$\242\274\365qS=\027\030\316\274\326;H\274:s\321\2745\357\362;v\205\205\274\252p(\273\333\354+\275\305]\013=\025\202\241\274P\374Z=\232\222\233\274\313\226D<\226\205\254<\345\001\374\274\363\036\307;K\230\201<\r\216S\275\035\001-=\304\275\177;\022\310U\275z_J=\222G\363<\021\337A=\373\031\326<p\253E\275\014\013\037\275\350\373\006\275\211\0053<\235?\334\274\2028\222<\311\004\t<\037/\261\270\333\356\212\274\242!B=\264\212\207\274`\244\001=/0\351<\256\210G\272\2510\370<T\2114=\rO \275^w\241<:\240J\275|S8=v\375n:*\'\023\275\314AJ=M\317\207<\300V\001\275\315\225\256\274\241(G\274\373p\030=\374\337H\275\030\310N;\363h*\275\231\031\363<Z\362S\275C\007\020\275\315q\032<\376\203\016=\362*\314<\250@\303<\336R\355\272bf\'\275\264\231\306<\345\277;<\205&I\275\374\204\212\274\365\'\020\273\307u\000\273\371\337m\273\237\212M\275\202\223O\275\270\246\017=V\005\346\274\300o\362< \232\016=\374\212A\274\214O\213\274V\345\333<\\\031\321\274\245\233N\275W\r\t<=T\234<\004\335\031\275\254\3252<\315b\210\274\3628x<#\205.<\375jN=\247\355[=\246J\323\274\034\217/=\341\351\010<\034\357 \274\302\371\033\275\255\222\352<\246\1772\274\243G\303\272\312\236\255<\227\",=q\237\367\274\366\373\265;\262\0337<WT@<v\244\026\275\312v\307<\007\236\344\273M\2231\275\332\223\240\274\350\364\001=\232\324\267\274\001S\355\273\272\264\003=\304\244Y<\271\022\026=8^\024\275\337#\321<k\207A=\2738\005\275\037\210I\273\205?\024\275\321\257\310\273\314\2676<Z\2054=\231aI\2746\273c<\307\017\307:X\203>=\220\202Y\275\317.\247<\3246\267<\225\274\242<o\016G\274\207\306\022\275\366|\372;\204E!<\213\363\300<4\021a;\255\252\n\275I])\275\223,\241<3,\364:\21233\275|\r%\275e\347\266\273\242\367\347<yR0\275\265\275S\275{7\215\274\235R\004=\026W\256\274!6I=p\271R=\305\032V=\364\241\200\274\213\357\005=K\352\267\274Kv\035\275\375a3\275\270JK\275\312gC=? \332\273\326H\\=\305C\322\273\177\233\202\274I\0235;*\3234<\037\300\313\274o\016\005<\213\003\000\273\241\322\000\275uR\023=rE\034\275$\001L<\263.P\275\212\020K=\"y\024=\346\0020=\313b\374;\010\323\375\274\\\202\276;t\3461<p\000\020\275\331\017\001=o\344\221;\316J\256;\371mf<+\325O=\332l\t=\002\021\334\274\314\036\017<\347z\321<V\211\t=\263\344o\274]\360\006<\202&\r\275\364\300\364\274\0014\212<\377\253Q\2747\002D\275\353\031Z\275Q\357\252<R8\335\274P\212\024\275L\335=<\356L\351<W\312\311;]N6<\r\202\014=\351\010\352\274\365\252\320\2734wY=\367\321\234<\371\251\033\275\371\000\010\275\245\250)=\377\273\311\274\340\334\207<\200\275#<P<B\275\037\332\243\274\226\007\374<z\031\205\274\276d7\274\343\261+\275\265.L<\356mX=d\322W=\320\304N=\306\347\026=\200\302&=H\213C<\013R\037<\374\303B\275\360\316\314\274\272ML\275\232\350F\275\245h\022\275|\306\234<E\207T<\023\036O\275\220\301\346<\262\212Q\275\262\305\031\273d\302B\275\220\3748=\357 I\275\207\272\021\275\245\215\217\274}\330\317\274\322N~\274<\002\341\273\247\304\372<\250\nK\275\333C&=\025\277\360\274\231\r\312\273\324\211\013=\315\005t\274\224\221+=\261\257\"=\243w\024\275\3763\020=i/\315\274GMf\272\217\376C\275\202t6=Y\377\010<)!O\275\247\253C=I\007\333\274\207\306\247\274u\215;<H\200G<\214wP\275}\000\035=\022c-=5;\340<\224\255\263\274\261r\326<k_U\275\357H*:h\206\264\274\241~E\275f&\303\274Oi\017<\177\305&<\343FV\275\377\246\371<\246\2106\275@\366\245\273\324/\361<\373;\212<;\271\227<\310\274:=\277\3651\275\2079D\275\301\277.=\010l0\275zV=\275\027\377\314\274\376M\023\275i\204o<\027\277\'=WO\227\2733g@=\217\320\250\274g\017C\274\020\233\223\274\265\275\265;\225\033\210\274\276\034\270\274bVM=VOJ<eTC\275Gl\016=\252\376\034\275\276F\272;\256\333\274<A3$=\252\210\r\2758\317R=\330\"\002=\346oN=\010\001)=\371z\021\274Ml\274<\334)\025\274\016\023D=Z\307\030=Ju\033=n\202\362\274\331\023G=\365\0145\275[d\332<\204vB=\2364\275;W\357\223\274\r\372\322\274\242u6=x\033O<\226R\205\274\212A#\275+CH\273\232\005\232<<\321\232\274\360\304\310\274\264\027\330<\374\347\032=\026&\001<\274\374,\272\352\323\000\275\236\225\r\275\220\3340=_+w;\017AS\275\333\267\002\275\267\344,\275\364\313\252<!IQ=t\020\313<\253\225E\274~;M\273\022\352\326<\222~2\2746\216S<\256\022\362<\216\356\013=@\225\017\273&\207\311\274RN\231<d>\n\274\200\224\'=wk\016\275q`V\267u\370\021\275\324,\350<\203\325\227;`\261\300<\235\351S\275S\327\202\272q\234V\275\370`-\275`\236,;\300/\264\274M$%=\225\030\032=\361\221\003\275\260\375\372<\270\246\217\274\324\255\013\275\020\313;=\260\315l\273\001PH=\3361\306<1\257F\273,\004l<Lp\037\274\241~\344\274\274L&;\\\365O<@%F=\355\2506=\203q\334\274\t\200\033<~\3132\275\276G\263\274\257Y\375\274x[L\274\346/\017=\237\035M\274\026:\240\274\227\217>=\244\014>\275\nx\303\274\341G\351<a8\270<*0\"=\305\356\363<8\033\214;\264CJ\275\211\322\003\275\375\352_<\006c\033=W\3522\2743dL<Ol\310\2745P><j\260\006\275~5t;\337\206C<\342\370\302<j=\301<\001\265\000=\006\005\324\2740\264\031<\217\255|\273\031\221\027=\365\202Y\275\264zH<\240Y\361\274S\020v<yO:\275\237\233\231<\255X\364\274>\010v\274\204\342\312<\352\366\350\271\310cW\275[\266\335<\216\324\010=\327\334\216\274\257#\002=\262&\353<\252\t\271<Y{Z;\367\315\220;A\263c\273\204q-\274m+M\275%\"\312<\321\212\n\2759\032\254\274Cy\010=\254\245\266<\272\322\345<;\024\275\274\321\010(\275\005\264\211\274f\335H=\014\306\357\274Q\034\001<\177s\365<\"\344L\275(\263\020<\260\022`< \340\211<I\177\004;\325\376\347\274y\310\014=Z\302O\275\331\220\213<\266J\\=\330\272\261\2744];\275\332\370O=\001\274\332\274/X\311<m\2027<\376\034O=\336Q/\275d]\347<a\356\243\274\t#\273\274\243\364\324<H\315`;\372\223\010\275e\3240=\034,7=\026ZY\273\236i\004=\341\177\000<\000\034\\=\361\303\037\273s\223F\275\005\256\233<\314\373\251\273\332\023!\275\276]\360<]\244}\273B(\251<:A>\275d\024\\\275?]\017=R\311o\274\344!\026=\'\277\320<MK4\275\021\000Y=\2405C\275b\327\r;\316 \014=\311|&\275\305\343*\273\276\274\r=\235}$\275\303\331W<\276\000\216<\331\342\021\275\037b\326\274p\300\337<\35777=\210/\022\275m\250\241<\265\035.=\036\223\236\274_\263\013<j\345\025=\235\215\270\274\031\346Z=s\004,=!\347\362\274\253\2728=~9\002\275\245^\210<-P\022\275\231\333-;\230D\003=)\304\001=\036\354\204\273\260>\321\274\027.\r=\243\216x;p\1776<\257\267\007\275U\244\203<\005\371\345\274\210\377\370\274\352\267\013\275\316\231\205\274m\211\255<\264kH\275\312{\342\274Y\2136\275\026Vb\274\340\031\225<\260J\265\274RT7\274\225\245\345<\262`\027\275\344^9=w\3361\275\013\356\252:\022\t7=\203Y\265<\035Q\337<\250\305\313\274Ym,\274\021\310\t=\222@\264<~bA<\003\005\214\273\222J\200\274\024*\237\2741~,\275%\333\272\273\034D\377<<P\315;\223,\r\274\321$@=[]\033\273\321YD=\226\364\302:\360\375\251\2749\342\327\274\375]C\275\020\t5\275~w\034\275i=R;\320\263S\275\225\332V=\353\246;\274\"\347\250<\207\233\035=Q\010\223\273\363\272e<VV\363\274\316\230\236<\355\213!\275F\262b\274\320\324\317\273\250\004\001\275 \255\345<[\031\325\274\307\344#\275\317r\270<\026\261\204;\320[J=8\353\306\273\365\241A\275\204\376\226<\\\264\327<\'\241$=\233\220w\274\370\266\232\273tN\333<\366(\n=)\003.=\262\354S<\036\276\331<D\366\337<X\177\354\273\360\331\375;\024\026R\275-\263\347;\330c\032=\031\335\033\275\001\322/\275\2132Q\275\350\230\r\274\272{3\275\346\005\334\274\255\273\337\274\363O\306<J\251\266\274S,\366\273\300\000G\275\243\206/=\004\367F\275B\207\361<0\217\376;\235j\024=\217:\026=\210\243\313\274\207\261\227;\315l#\275\353\247\230\274\260{\344<\311\375?=\347\331\'=\"\323%\275\274i$=\265\251D\275>\020\345<\233\344O\275\006O\344<K`\031=\315\311\264\2746\315\006=:\346\300<\037B&<\342\003!\275\250,\225<o\326E\273h\222\"=\222\022\276:\325\331P\275Ra\330\274\366\350R\275b\360)\275\036&\260<j\354\021\275\224RW\2723\250i;\354u3\274F<\230<\352\370\"\274\206\207\343\273\216\343+=\214\345|\274\333\'A;~\262\327<\346\201/=\357\275\005=\003\205\003\273\205\215F;\373\001<\275\001$p<[u\032<1\351\002=_@@=4\213/\275\333\364\352\274\036\032\004=*\334\342<\027\025\000=\205M&\275\252p\220<\354\314\373\274\234;\304\273L\373\017=\276\227%\275\317 \276\274\352n\326<\270\036I\275\342qO=\037\325\005\275\010\362>\275w\207\311\273m9\351;\300k\032\275\257\310\255\274\355B\253<\037\332^\274wZV<64\324<vK\241<\307\277Q<Q\305F\275\021nX=\200e<=!\201\340<\234\246V\275\027\326\000\275%\232\003<\261\312\312\274\027h\032=\352<-=\030\337==b\321\266\273y\374N\275\017\320@=\253\027&=BI\256<\315\0052=oLL\273\202\321J\272\334\310;\273`a\265\273c\324T=\335\201\024=\2243O=\246\317\316\273\245\020\260\273\177rh\274\212~\037=\340\266\\\274\364\200\225;3\227<\275\346\335^<`Y\200<=\377\276<\'u\374< \022\n=!\276\364<\276\352\253<\220\254\330\273\033-\341<\250_\035\275c\343\004<\002G\t\275\300\036\'=\006\325><=\213\217;Z\202)\274\374\375,\275\353\036\260<e\277\323\274\215\367%=\313~O\275\277\210(=\221\200\004=\335\347\'<\204-!\275y\244X;QC\027<b\315V=e+7\274\260\0349=\\?*\275\014\t\177;&\334\202<\361Z9\274jJ\353\274.u\037\275\336&\245\274\344\270H=\317\\3\275D\377\371\274#d\225<6\223L\275\354\257,<P\275.=\310\246 \2759\3764\275<\360\003=]\335\036=\303EO<,\2628\275\002u\316\272\210\010\002=\000\332W\275\313\000\'\275So1\275\"\276K<6\2302=\221~,<\206\257Y=:\257\251<)\303\327<\234\2438=\243\036\335<$\034\242\274F\013\'<TZ\031=\035Y\324\274\315\030\321\273\330\225\266<){\375<_\201\003\275\274\216R=\303\'\354\274\375a-\273-~\004=p\352\304;\204\207k\274\362\230\374;A\2555\275\002\2603=K\240>\275}\037H\275\211%K=\262s)\275\352PV\275\013hf:\303\033)\275H\001\372\274h\004K\274\200\216\333<7\360\210\274 \225\355\273\004& =A\223\320:\277\367/\274\247\255/\275\033\013\246\273RN\031;\370]\034=\'\360U\274\311T,=\257\031I;\314\313U=\351\261\233\274\372\205\n=\034cR\275\341KI=c,\314<i\364?\275k\357\013\275\331\357@=L\264\234<\274\340\000<\th#=\263\216\335<:B\023=}O\307\274\335\350\267\274\025\035\363\273\374Z\230\273\354\256X\275\361@l\274\302=\n=\035bT=\016\006V\274x\273\363\274\t\221V\275\314o\357<\3014\032=\004\3277\275\3471F<$\000\342<\260\244\022\275i\345}<\265\372\024=\330\005\n;nn\367<\0169z<@\306\007\275,\223\016<:\340\335<dA\363\272\221|B\274j\313\245<\204$+\275\t \017\275\234\300\342\272\225HP=\031\352\272<\007>\262<P\0135\275\273;G=\357\3717<@\336><\241\270I\275\0212 \275\300\245n\274A\335P=}@\031=\351\305\327\274\241\253]\273\034\206\302\274\303\333X\274\263\265;=\311\004*\273\022\305c\274\341\006/\275\336=[<\366\343\017\275\362\223\037\275\220\371\223\274_E\002\275a\310R\272\020\277\202\274\212}V\274+\357T=AF\002=+\006\213<\250\2624\275\007j\254<\361-X=SAN\275:\030\202<\036GU\275\330\017W\275\320\017u\274A\363\225<\224I:=\364M\'\274\027\330\003\274\352c\001\275\202\214,\274:0/\275\205\325E\275\300\007V\275\226<\027=\022\305\223\27247S=P\014E\275\224\243\302\272\326\362{\272\tc\035\275\013\263\211\274[\334\253\274\237Q\317<\016\365\346\273eaD\275:\202\301<\350\336\032=\016\014\021\275\311\215\341\274\244gB\275\022f\267\274\370_3=\245S\305\274w\233\026\275\003\005\302\273D\252\271<\201\355\t=\021\305\204\274\25269\275\030\315M\275(\010B\274<o/=N\275\207:\201\255\"\2756F{\274\363\356\320<\371\031\311\274\\\236%\275~\203\314\273\t\234\372<\3040\334<JS\301;\340\332Z<\002\355\343<\"\3112<\204\337;\275\323\351,\274A^\300<\263\210J=\2651\021\275\200\274\032=\227r\267\274H\316\257<~Q\242\274+\2235\275\325h\307\274\020\017\024\275E[\264\274<\231\276<\233\365\320\274\032tE=M`\224\273\267\276\350;\235P\315\274\362\232\303\274\320kX\274\261\256,\274NVD\275\270=\366\274\323=\363\274\230\017\356<.\001\236;\237\346\300<8\303N=\t\347\336\273\320\223\210\274?\0264=\231\256I\275Mk7\275\212p\031\275\013\213\263<A\n%\275{*,=\217\014S\275\250\316s<Ei;\275\202\226\316\274{\340R=\323\240\001\273#TV\275\r+X\275\022\272:\275\206\216+\274\002(\033\275O\360\355\274]\260\016<\202\r\016=\236\226L=\367\244\344\274\203\326W=D\307\223<\356p&\2754\300\027\275\'p\347<\244K\225\274\200\2541=}\345e;\363\372?\275\316\271\275\274\360{\327<}&\264\2749\220=\275,}\016=),\274:k\360\360\274\361C<<\014\027S\275\367\033\033\275b\255\373\274\342\253\251\274r\026\207\274\325\034\305\273\037\330\r<\336\333@\275\376\000$\275\306m\301<\261\367\r=!a==\220e\300\274\2277\2569\304.L=\002\362\204<\266\t\032\275\366j\271<\222\'\017<\2670\275;\375\376K\274_rM\274\026\3530<\277p\363\274\224\2266=\3173L\275\"N\376\274\376/O=E\031:\275Q\200\026\275\t\276u<_\255\246\274\377_z<\034\257\202<\361m\265<\355\367S\275\234\367(\275\307\350R\275KcA=\234\231!\275=n8\275\027\374\326<\377^K\274x\206\002<\332\301\017=\006\300G=*_\370;\177\003\350<!\323\233\274r\202\000\275u\027\262\272\'B;\275\'K\254;\335\013\000\275\315\\\241\274\036\207O<]\341\031=\022\313\377\274RE\306\274wS\362<\275I\314;*\364<=(\336\340;\365\252\010=\\\221\220<\276\232<=\020c;=uqF=\322\334\227<\372U9=I\213\360<\324\346D=\202\034u\274\007H?\275l\260\002\274\001a<\275\022J\225\274\037\362P\275\272\247\261\274\345\376\225<\363;\202\274\014\240Z<\214\241\212\274\"L\342\274\256\303)\275C\242\243;|\223E=\320\305E\275R-5=\014\340.=\260#==\213\0104\275\221\020-<;S\323\274@\220i<\206\300X\275\010\021\374<\243\320d\273\027\256};yW\352\2749\177M\275\002\374\212\274\262B\211\274v\t\316\274\210C3=;\024\315<!\214U\275/\\D<$\2060\275+\250J=\333\255[\275\260\227\305<\255iH<G\202\305<\020\031V\274\340\036\"\275\235z1=\034,m\274\250\212\241<\326\357\332<\331d\037\275\361|\024\275T\333\333\274\306\3462\275\206\034\326\274\036\321C=\0362\\=\343\305\306\274\327\305E\275\326\346\357\274\025\340\337\273\036lO;\304\n:\275\355\030A<f\265\322\274\262\227\275\272\t\257G;\316\245>\275\037\326\300<\235GG\275\226~,=B^\375\274\276\321\213\274\027>!\275\026TR\275\203L\021\275\023M,\274\265pS=y\262\000\275\333\243}\272$\\D<\035\217\336<\354\032\\\275\243J\014=\266L\301<v\320\261<\022\365\034<\243\241\321\274\035\026g\274\350\355\205\274\005\372\355<\376\3121\275n\242\334\2745a[=\356\242\373\274\365k3\275\262\221\025\275[\374\253\274B?T\275H\377I\273Oc\271\274s\371&=9Yc\273td\361\274i\204$=}\333W<\255a\014\275`\177\032\275X\tB\274*\272\346<z\317=\275r\236\013\275\3548j<\024\2353=u<K\275\201_2\275v\277\365<\265\344\2479\374\342N\275Oc\313<\254y\373\274y9\363\273JS\235<\236\027\001\274\243WB=\265\237\216\274\267&\232\274J\233\377\274\235\251Q\274\256\207\331\274irR\275\250\324\016\275l\022\312\274\242\214+=\037\342\013\273\232\030n<Z\256[\274\267\r\027=\246$\020\275\257\343Q<\257\320A<\014\271G\275\343\201~\274\001\363\335<&\022!=)\274\210;\327\336\347\274!\322x\274\3156X\273f\222\311\274\333\217\234;\246\215.\272q7\201;x\364\344<\244\256J\274\240_Y;\317z\337<o\'>\275\201\313M=Hf\360\274\242\237R;\273\247\2709\314[\311\274\273\222%==\014\327<\242Z\327\274$\311J\275\031\326\000\275\327\260\030=Sn\003\2755\366\222\273\032\007\031\275\254, \274,\312\241<\004\325\272\274U\257Y=e\033=<\212\355\345<j\325\177\273x\031\231<\000k#\275\370\034\\\274T\r\256<*\230p\273\023lX\274\254\337%\273sJ\006\273\003\342\224\274\340\226\323:]\257\027\275~l\025=\226\230\365\274\332\371*\275\270\373:=B\311E=\255\221\017=\002+4\275\032\325\376<\032\263N=\274\324\356\274u\312\024\274\250 -=\342nT=0Q\257\274s\2714=\037g\027\275b\270@<(\245\364\274\260\362w\272T\003X=\330\031\235\274\037\255*\275\270\177M=\300\003@=\302\277)\275\035\202\t\275\004\tY<\222\251\003;\261\356\222;\3563\334\273\235\\F\275_\312\256<v\343Q<@\320\033=\230[V=\264Ig<p\237+\275LD?\275\233\207%\274V\224\274<\217\251#\2745\311@=8\024\316:T#4\275\004\255\024\275\002\301H=s\210O\2752zh<\273\373\022\275\363R\010=\313\216\r\275\216\000,\275&\202\240;\233\3212<\334\212\341\274v\026\177\274p[\230\273\371P\351\274z\3721=G\202\'\275UK\020=+\257\307\274\361\370@;N\244h<\333i\035\275\306\260\035=\201\277Q=\2308/\273`%\334\272\353!0\275y\337\014=<\356\200<\313\320\t=joc<\'\361\307\274i\251\020=\360\270\017=\315\303\300\274\377\010\014=\324\333\335<\205\210\003\275\032\032\024\275\355\241T=5\263G=\200\002\243;\334\222\023\275\227\3075=\347y+\274\300X\222<Q\201\034\275&;\351\274\350 T\275\240>\210\274&\343]<(fq\274\204\236\313:\342\364P\275\306\312R=v(\322\271&mZ\275I\245\033\275\373\332\205\274#\267u<\317\014G\275\013\3258\273\031u\345\274\237bZ<\300\321\251<\241A\013=\246U\261\274]m\014\273\367\006%\275\233\212K=\321%j<Q\263\034\275\251\000\020\275\213\303\257\273\241 \007=M\313R\275t\3166\2741\214\320<\"z\311\273\\s\241<\271_\202\274\251\371\'\275[\336\007\273\036\020\224<e\3762=\246\0344\274\234\002Y<\372\203\312\274\330\356\344;\252\240\257<o\374\032\274\304\334\263<\304\222\000=\210\236 <u\234n<\364\237A\274\354\375I\273\306\032\000\275\264\253==9&L=1BZ=7{\377;\310\223\206<\314\373\013\274\353\025\035=\234rN=\310\326.;\310[K\275\340o\030\275\275\030\342\274i\225>\275\274:\362\274\275\277?=\204a)\275\001\207!\275\307E\351\274W!\354\273\263\002\211<\254\\\323\2743,\005=b\363\'=n3};\326\036 \275\034k\003<\232DH\275\004\375&<\370B\026=\030q\021;\256%M\271;\221@=]\272\207\274\376`*\275\2402\010\275\307\304.=\240Mt<\021\375\221<Yq\237<\370{\210\274\032\212!=\217\026\363\274u\364*\275\205\345\307\274\372XW<b\254;\273\363I3<sY\264\274\227\331\344;\'P\302<\030\023\313<\364:\014\275\260\207\033\274`\316\200\273@\263\022\275O\337I<?9U;u\256:\275-\366\222\274^Dx<ckH\275\203\354%=\350\256\331\274{m,<\313\251\315<A\357\236<kG\025\275v\033\020\275\026\304W=\246\255I\275\207\323\002\273B\216\365\273\255Z$=\224\rw<sOS\274)R\351\274hF\364\274\365\365\027\275\335\013\031\275\340\252G=\340\245T<R\216\021<dM\035=r\206\371<D\371\253<}\272.=\366\272\306\274\363\321.\275\365%\302;\222U[<@\036K=\266,:\275\370\343\245\273\256\260-\275\244\326\366<\335\377\237:l\366\321\274,\335\347\274\024\000\236\274\03242\275\320 \344\274{\363\022=%}\374;xg^\274\3721\004\275FBP<k\321\265\274\013\265.\275\212\'\005\275\220\207\253\274\344\336e;\0079\000=@E\307<s\025S=&\270\001\275\331\351\022=\310\366\264\274Ac\"\275}\270U\275(kU=\331%\264<Bq4\275\027 \035=~r\250<\373\0130=_\363\373<\203\244D=H\237\361\274\352LL\274\032\322\020\275G\000(\274K\223\'=\370\243);\013\025\031\275f\035M=X\372\025<\311\021\212\274\3144T\275\274\316!=QJ\267\274\270 \301<\302v\246\274|\223<\275\225\006A\275\312\017\037\275\302\002U\275Ny\232\272\302+g:\014;\037<\203\245I\275\036dS\274\232\262\251\274\324\251\203\274-\274E=C8\n\275\342\303\213\272\242\340\276\274\247\010&=0y\361\273\226&\230\274\031\340\016<K\250\345\273\225\320!\275\r`\'=I&\002=\033\220^<|\257%\273\325\301\\\2744\263B\275\230\3033=\347\201\312<\371\217\222\274\314\354\330\274\233Y\2109\354\376H\274\350\276:=O\316\355\273AV\025=\221\347\203\273\330)j\272\025L\021\275G~e\274\323@\024=\361\234\037\275+\341\005\275+\361x\274`\217U\275\222L\000\275ZC\214<\306\261\034<\223Z\272\274\256ZB=h\342\362\274\237uL\275\030\020\355<\023\246\336<MA&\275p\355\000<\276\252O\275HF\0169\360\371\225\274\022\030\212<I6\226<\270\265@\274\332J\374\274\230\324\310\273+r\212;\010\325\007:\321\244<\275O\374F\275H\336W\275\010Z\222<\221C\274\274\006\0141=p4O=\244z\371<\217\252\252\271\215\245\'\275\247{\323;t\013\2519\334\360\246\274\227\341L=z\032\244<\362\355\276\274\224A1\275\235lE<B\303\355\274\214\2130=H\264\263\274\347h\360\274\3462<;/\317@=s\2776=\214kt8\006\332!\275?\203\331;\367\362,\275\334\375\013==r\372<<\362\031\274v~[<\347\023\000=H\371z\274\217\035\372\274\275\2610=D,J\275\001_\301\274\317\256q<\253/\\=w\001\020\275V\351\274<\026\013\030=\016\240\347\274\253\t$\275)1X\275\'\330E\275\364\347j\273\275,\035\274\202\312\020\275\260\351\336<\304n\223;\323*\002<\352\005\r\275^\206G\275i\222n\274U\364\370\274\241\360\267\273d!\026=0\203\353\273\263\273\342<\212\2413=\273\251\330;\024U\264;\010v>=\364U!=\253\026\320<\272`\005\275\315>\325\274|\207\020\275X\"\355\274K\244\013=m\265\215\274\247\300\375\274\243\254\n\274\353l\003\275 {\327<3\277P\275\342\315@=\365.a\274\371f\306\273n\223]\272\2757\032\273\351b\347\274\033\215\333\273\247\330M<\243\352\203\273\0322\300\274\350P\322\274\021\307;<\023K(<s1\303\274\374\254\004\272\241\211n\274`\037#\275\001\017\006\275c\210\360\274T\2074<;>c\273~*\213<N\035\026=\353\2418\275\313\006\007\275:H\r\275\016\230\027\272\236\317\001=o\331\313\274\331\362R<\335Q\034\275:O\234\274,\270\250\274ce\226\274F\213\025\275\342\023\\==\265\014=\230P\371\273+k\266\274\265,W\275\252v\2769\377\'\233\274\254o\216\274\301\033\005\275f\274\310<4\215\363<\013\341\243<&\344\010<\024#\350\273\232\327\000\275\350\325\004\273?\374\325<\234w\271\271\370\301\316\272|I\025\275\230\271;\275+J5<a\246\212:^\242\233\273\253G\213<&\221\005=z\3435<4JR\274\223\310\270<\343R#=p\266j\274U3\320\274%\024(\274\004j\336<;\341\301\274\353.d\274l\310\360\274g%N\275\247\231\314\274\177\226\241\274\034\214\306\272\35507\275\325\264\321\274N\254\030\275q\360q\273`B1\275\\5\271<(U\000\275u\363P\275;e\334\274^\346X=.\337\231<y`7=`G~<i*\215\273\236\217\334<o\264\016=\256\301\'\275\222\322C\272_X\221<-\2253=\325\020\355<\271\220\237<\354E\252\274p\'\321<\007(Y;\236\372\322<\363\200\224<\362\226N=Ma\007\275-hW=e9\361<\246\2050\275\232\273;=\365\211\025=J\rY\275\275\237\252\274z?\202\273\351\310\017<f\323\327\274R~@\274\034\272&=\211hD=br\005\275\255rH;\375\270O==\267`\273{7\"<\250I\033\275\334uF=\270\325>\275\237\343\010=\0252C=\201\373\213\274\020\301\222\274~\312y\274\207Z=;\215\244\363;\030f\007\275k\007\213\274\267\"\301<\257\325\206<6\026\233\274c N=\277=\225<\251\216F\275\037\261\275\274\215\2002=2\2519\273v\261\324\274\235\332\221;bo\214<4\207\325\273\313\200Q\275\252l><\355k\273\274;\016\212<\345n\366<\326\271\354\274>\260\020=\277\314E=\250\203L=\353LM<\366\212\344\274P\353\n\275\246\267\377\274\303^\034\275\223\351\317\274L\337?\275 \264M\275\272\240Q=+\027\223;\311\230M=6\264\004\275\355\204\r\274O\331<;\246E\355<7\3646\274\312\357q<\223^\273\2746\302\334<\356W\"\275\'b\240\274@\222\002=e\255!\275\317L\013=\030Wx<-I\000=\232\242\370<\tN\312<e9\207<\366~\326;!\252%\275\021\274\336;\031\265\261<;\211P\275_\214\'=\364\030\341<\374f!=u05=cQ\"=\267\227\031=\313\201U=\352\314\t\274\035\266\025\274\332#O\275n\027==r\261\013=\371U\247\270\233z\317<f\027\312;\230m\346\274}\310e\273\014X\207\274\344\242\032\275\027cz<\265\300\n<\355\237\212\274\330\2549\274o\205<\275v\320C=\245tG=\257\004I\272m\217\226<\ns\255\273\363\005E\275k\270\007<\234\352\030=\363\251\006\274\372\303\300<\265\342\361<{`H\275E\214a\272\305\227 \275r\001#;;\232J\275T\007\273\274\027\027\025\275\213\311M\274\243\367\t\274\344Q\026=\214\256\303\274\036\212\234<\035O\224;\246\343\213\274\375Qt<\351\266S=\274b =\246\316\270<r5\377<(\274\035\275h(/\275\021\223S\275\304Z\205<\263_\207;\341\024\340\274|\261O=\334\250\003\275\276\231^<\350\037G\275J\276B=1\376\302<9\347\266\274&E\363\274\270\002B=<\223H\275e\035(<\317\346\351<L\013U\275{\301\342\274R*\021\275\277\374\377\274\205!9=\363p\376<\345\307==.\234\023\275\002\007\003;o\256,<6P\272:\310\007\332;\241\020\341\274\255h\222<\013\340`<@\262$\275\225[\035\275\251\214D\274g\332\226<\200s\034=Yv\247\273\223\370a\274\021\251\340<04\023=\365\271\221\274m\341\023=\271\n\331<V\016\215\274\362Q\226<\347[\300\274\335\311|<s\2140=\266\357\321\274Z4\241\274\233\310\347<\0041\253\273A\362\307\273q\0049=5\313n\274O\303F\274\312\365\243<\337\272I=!N\000=x4\214<*\256T\275\020\327$\273F\233*:\354\343\021=\217\361I=\035\261\353\274d\\\270<0\367\344\273b\221\346<\377\356\337\274\327]\240\274\354\332\305<\311\355\362\274\267\370\013\275\177\365\273;;,\220<\236(}\274c=\220;\240N\275< 9Q\275\271\216\257\274\016\002 \275I\2761\274\036\033/=\360V#\275\010\341*\275\361\253<=\016vC\2758\306x;A\274\201\274\351\362\232<\3445\366;m$\031\275+\372{\274p\221\026\274\317X7\273h\033J<z\030S\274\210\324\032<\235\007$\275\233\247\333<\317\253\365\274i~\201<\022\317\244\274\323\306\245<\233\"\n\275\001^\r\275\014\257\263\273\210R;=\030\2012\275t\207+\275d9\232\274\021NI\275\327\014L=\020xE\274\376\275Z\275\340\2612<\027\276\000=@\205/<u\223\324\274\304(\005=\325\201\005\273\226$\254\273\231\340\263\274\223\324*\275\013\033\032=\214$p<\206\242\301;6\364N\275\215q+\274\014\032\301<w\343=<NK\272;\206&\347<\342\037\263:\221\3658\275\354e\262<\315\t\312:\243#\267<\177\355\377<\236\024\275\274,\366\244:\227Z/=\024\375I\275B\327?<\272\365\245\274\260\203K=\034\222e\274\\\000&=\274\027\271<\340\216\326\274\271/\255\274\215\306\22196;\260\274h\212\000=JM\345<\207\354I=\314\r\214\273\247M\377\2734\000\r=\314+\314\274\002*\333\274\024N\265\274\364\360a\274A\227\n\275WC\371\274\246\345\233<vW\016\275H\257\r\275\317\3428\275\0103\310<h4E\274\301\036\301\274\036D\362<\2673\353:\343\032\013=a|\021\274\n$\221<\016tc\274`\317\037=\001\244X\275\264T[\275\3172\037=k%\t=\231\0028=x;\005=_\263\221\273\210u\013\274N\211I=m\311\024\275\\x\034\275\210\263 =\317#V\275\246\013<\273\313\310\032=\356\234&=U\303\025\2756^\034\275~\356\321<XL\021\275\257\305\026\275`\3705\275\225\237T=o\017\032=z\237\325\273\240\2035\275\224\014\031=\027\202\304<b\\C\275\324O =\374\014|<\225[\024=\240\221\003\275\361\321\346</\260\'\275\226\337\256<\213\353N<YmR\275\201`\024\274\177I5=q\016\030=[q\"=\215$&=\r\205U<\357t\224<\255\213:=\303m\"\275\246\372\304\273\366+\013=\262>\017=Ys\201<\271X?=\247\240\032=\340\371J=\201\001$=\272\306\347\274vw\037\272\242\0164;TT\302\274w\261\230;\016\016\261<q7\014=\205\242`<\320tJ=\003\337[\275>g\342;\031\246\240\274bAc<,5\212<F\'\027<{\325\002=\341\222?\275\201\315\026=\317\340I=\301\037\305<\214`S\275\267\327H=\210\256\004\275\354\346z<\275\303\036=\020\242\206;2\0315=9\207\311<an\235<\333W\316\274\340\335\320<\263R\232\274\027\343\220\273\"\214\340<t0j\274N\265D=\370k\010=\215\334H\275\371\223\022\274U2+=\234\257\030<h\270<;\363\360<\274\300\240\0339\210\014\006;T\010\003\275\005\0041=-\241\360\2742\024D;\302\246)=\300=H\275\372h\000\275G^\211\270\"\310\251<}%\260<-\230S=>.\'=\367\2349\275u\276\224;\326e\225\274\010\374S=\325\371)\275\217\362!=\204(/\275\005^\277\274\314\206\337\274\242\344\204;\032\251\347\274\332]\021<\0261X=\006\206\277<7\210\333\274\351\210\'\275V\350%=\240\237\236<\340U8\275w\251V=\t\2622<=\342\027<\211$\001\275!\327\346\274s\\\"=r\007N\2759=@\274\331\022\010\274\216S5=\271\021:=\355q#=\302M\000\275#$4\275A\\\353\274m\347\323;-\221H<2\314\025<\306\346\"\275IG&=R!\321;R\243\036\275\222\241:\2755\231\026\274\267\355!=\314\327\006=N\241\255<\343\202J\275\362`\"\275$-\'=F\036\223<\r6;=\274i)\275\177\242\316\274\256Nf<~\257\370\274\034\r\020=\262\032\n=\273\'\027=\323\336\013=\3659\260<\033\263\234;*P\022=\336~\241<\212\330\251\274\367l\034\274\266\313\026=\022\270-\275\224\357\332\274\346%\201\274o(\037=1\346X\274\3529\254\273\265\2648;\260e\"\275-\207\202<\006\304\027\275\310\234*\275\377l:=\307O\327<\202\231%\275\311\0265\275\353l\023\275\t\343\223<}\341\254\274\r\226\035\275\037\316\314\271\303\2649=qe\206\273/{\031\274_\025\223\272a?S\275<oa\274\301I\346\274\332s\037\274\032m{\274-\311\026\275\250\024\022\275\224Q>\275w\'2=Z\316\357\274%\030\010\275\301\275\253<o\023\217<N\210\'\275\255&\344\274lY\211\274\203\026)=\226\237-<Hd\242<7\236\026;\254\037\032<I\030\237<FB\r\275\302\245\\<\264\313\234<9\376$=\2764M=\370\037M=uY/<vJ\036=+\275\210<\247\014\244<\031l\232;\236\261\337<\251\276\243;}\343@\275\220a\372<\007|Z<$Lz;\337l\360<g\225\010<\004\214Y<\265\3624\275m\247/\274\236\372\273<a\262\t=7\305\001\275\332\nQ\275\227\003\004=\227a\326\274h\330\247;\364q\025\275Z\245\365\274\002_\207\274e\007.=\305\213\253\274\216V\203<\204\276-=;\032\266\274\216d\\<N\344\242\274\326\306B\275\232\363\213;\006.\023<E\243 \275p\363\006=\313\215P\275\241\243*\275Y\035\206<K\302\241<\033\261T<f\330\t\273@_\340<\343\321\273<d\355\326\274#~\021\275\271\r4=R\024\027\275\355\336\001<{\005\035=\025g\337\274\217RC<\202\220\024=\222%\310;r\3166=\312\013\033\275\343^\004\275\274\0216=\030\237\205\274\021\031\203\274\241\240\240<\006\361\031=<\347\205;q\370\347\274\351\022\373\274f\326\034\275m\000e<\232\023\320\273\344c\361<\350fX\275Y0\253\274\257\026K=\220&<\273\347\016o\274\207]\r=\014d\320\274\242\034\211\2740g\364;y6\314\274\014#\353;\346\022:\275zp@\275\360\333\203<\242h\021\275\201\000G;\0241\346;\363\3421=\223\010\033=<\362,=\317\365\346\274\222\025\226<\225\372;\275\034 1=.\243$\275\024X\257<\241\317A=\300F\210\274\324\356\026\275R\302\207<\251\305\002=\254]6\275@#N\275\303\024\311\274(r\260<\313#$=\225\213\010<\010\231\353<\035\223U<\202K\025\275\316\320[\272\2109\013\275B]M\2753vI\275\345\223C:E{?\275\366e\016=\360y6\275A\252\031\274\320\371\006=\364q&\274\260\261)\274p\360\322\274\375J\036\275\t#\365\274\356r\034\274\177\376V\275\357*\351\273\370\007Y=\216\323\3518\221\001\223<\354\242X\275\303\335G=\263\274\343\274\351H\306<m\007F=\231\217Z=\321\233~<\025\347\325\274i\222Y\275\337=\211\272\366\021\177<\313\035\001\275\376\307:\274`\365[\275\022O$\274/\232\260\274\024h\351<*\327\225<n\220\035\272\273\301\005\274G\200J\2751\2703\274\262\254\025<\302\323N\275\035\247#\274`\034\305\272\014K\330\274\2604\221\274X{[\2754\326\225\274\255F\017=\210\232\213;\241\026\034=<FY\275\302\022\003\275\177\336\325<\005u$\275\2168\000\273\313\232\357\274?\345\034=\211\346\035=Z\371\005=\006\337\315\274\001\324\373<\365\352\323\274h\232\373<\361/\307;[.[\274\355\235\203\274n\361\274<\317\246\024\275\214\010&\275g\356\001\275\023$L<^\004Y=U\262\353\273k\365\243\274\317\023C\275\205q[\273f\240\272:\311SY\275X3\025=&\215\317\274\033\001\213\274\304o\322\274^\274\230\274\230\345Z=\234E\312<\270\2219=\362\\\010=\034\230/=+\232v\274Wz\032\274\004\327\006\274\246\200\225<\242\227$\2758?\276;6\243\017<W8\\\274\330t\356;^\010\022\275@\177\315<\304a\025\274\255Z*=\003ig<\241O\010=\327_\001\274\220Z\030\275\272a\022\275\230\317S=\007\205L\275q\223\016\275\256\340~\273\037\351I\275n\272L<=m\375\274i\373\255\274\214\323D=\207\370=\275\323HX\275\362Q\273<\351 ;\275\374eY= \262\350<\003\227\243\272\365\216\367<9SU\273\025\3335\275\314\266\357<v\252\360<:\267;\275re\023=\377\342G<\212{\006\274\022\217\313\274\300\371\264;+X\035\275I\307\243;\366g\370<V;3=\303\034\277\273\'\233N\275+\230\332<r\255\r=Q\201*\274\r\261H\275Q\374\010=9\327h\272\n*\302<+t\222\273\027\315\r\275\361+;\275\334[\300<dv\357\273\030\t1=\332\366C\275d\341\303\274\224\211)\272\212n\025\275\365\335\324\274y\250\313;\016\033\262\274\333\025\302<\266\334\336\272\220\001\243<j\235/\275\333?\037=9\300\252\2745K\275\274\276H\332\274#\017`\274\037\232E\275\222\327\373\274j\331P=\266\2060=\313\035\375<\337\034\205<\255\332\t\275\351[R\275\274\r)=z\005\206\274k\350[\275\323\215\276\272\000\264\205\274\014\016\025\275\272\373>=F\200*=\376\030\002\275J\274\336\274\212\346\203\274\261\255\316\274\037\000\343\274A\030*\275\035zv\274\370\2270\274/\363\n=*\237\363\274\301\0373=\370\345>\274h\376M\275\375WB\275~\327,\273=\344\345\274\276\231\r;I\272\350;8\334\t;\211\036\033\275\220p.\275^\303\252<\026O?=\342\360\037\275\345\233\317<\021\203e<\\\211\260\272;E\222\273\203)8\275\261\235V\275\334\016\004\274\253\267\330\274\363U\333:i\233O=\377j\234<\0370*=6~\210\274\376[\337;1P\254;\216\251\034\273\013\214\354<Y\222\306\274\261.\035=\255\'\235\273\253\237\t=(\352\027=enW=3\223\375<\000\350\010\275\231\274\255<\320\232\005\275\2137\034\275\r\213\254<\240O\252<\361f\017\275_\252\377<\263RR\274\224C\262\274\322\270\021\275\026H\217\274\277p,=\024\212\221<aF\017=\363q@=\270\223\254\274\207?\314<\007:\021\274\323[\327<q>\025=\211\013\207<\217z<=b\371\324<\014M\323;\307\360\023=\313\0244=\235S$\275DM\021\275\334\240N\275%g\234<\257\315\215\272-}\200\274\276\267\255\274}\007\030=@\312\306;\275\210*=\252\027\321\274\304G\331<m\013]\274\347\342\034=\rc\225<;\320\r=1\244\274<Q]\321<Q40\275\3224,\274q\266\023\275\345\204\027\275\332\354\013\275\216)\"=P\333\021\275b\354\207\274\356U\026\275z\033U=\002\325\253<\353\232F\275\000\205\275<w\251#=3\335T\275\214%\305\274\307\342@<\003s\036<\"#\n=\270P\"<\246\244\364\273\220+\005\274\362\321[<r\016\377\274*e\307<\374\022\327\273\201\031K\275&l\376<\'\355Q;\367N\247<8\350\343<\355\342C\275*Mw;\254\214W=Bdk<w\010Y\275\250>M=\365\207\355\274\215\'\004\275\301\223U=\221\2166=\201\3423\275\364\021\267;D\237\014=\352\256\260<VC\220<\242\306K<\260.\262\273+\2735<\337c\007\275\254\353\376<\252\366\231\274\024i\236\274\345^\n\275a\3344=q`\316<\312\353\225;\214K\322\274\344`\237<v\025L\275\267d\340;!CX;\002\372\033\275\347u\225\274<\240\244<\233\214.\274\33683\274\006[\"\275!|N=\010:7<\210[\201\274\365S\'<\353\020I<\367\\R\274\354#,=\303\021)=s-)\274h\234\377<\001\3012=\0106\325;\006x@\275y\010\216<\032\247u\274f\020\242<\234\344\030=^8Y<\2559}\274e\206\351\273:@Y\275\256*\215<a\202I\271*L\000<\216\311\274<\374`U=\020\317\256<\002\262\004\275\257\0209=^D\211<;\264H\275\030{d<W\246\";\232n\300<\365\213G=\277\246\006=)\237P=\240]\351<\345i7=z\233\000;\\h\267\274r4\355<v\205\306<\220\252\316<90\021\275\026\3706=q\333\314\273\344G\353;]\227\241\274\300\370\341<\023\372\025\275c\2270\275\204\352Q=\271-\375<\307\360\032=\270\253\377<\357\3000\275\370:(\275\023\255\006=\214\r\033\274x\336\316\273\230//=\320\340r\274\205(\317\273\334 \300<\307\037\323\274\345\366\323<\371\333f<FV,=Y\034%<Z\327H\275\2439v\274\303\005\330\274\251\342\263<\274\034\364\274\227#6=\240\036\306:\252\315\205\273\351HU\275\005q\005\274i\211\231<\323\224\255\273\353\344$<\231_\266\274\223\343P<\232\253\023<[\266\351\272A\256G=\370\251\362\274v\307#\275{\031Z=I\363\020\275\322\300\253\274\332%\213<\342\315\205\274\010\273j\274/\215\017\275\217\025\313<\265\361J\274\245\\\214\274\330\235\035\275u\3414=\023{a<K\025,=xq\n\275cdA\275\334\227)<\264\3310=-\373M=\350\021\374\273tX\"=;A)=9\324\352<\221\334%\275\321\t\330<\312\331\372\274\001\302\245\273\252\031\333\274\003\230\262<$\245\'\274F\2443=\217.\330<2\316\365\274d\r\207<\232\375\331<n\310\343\273[\345\327<\304C\221<\350[+\274\304=n:\276\252\r<\022\303\214<\020\256\003\274\332\271$\275T\255\016=\010\\\036\275\365\005\244<\005\355\347\273j\235=\275eC\034=\361N\037<_E\212<Ng\032\275\325J;;z\303\013<Cg\350\274\233S+=\332D\334<\254\244\027\275\366\232?\275\201\255<\274#\341\322\274\215\'8=~\010\030\275\001(\001\275\000\221*\275w\230\267\272+-J=\036A\022=\257<\"=r\315\266\274\177=\002\274\322\311\020\274\031K\003\273\027\013f\274\020\265\005<\323\205Y<\354T7\275h\203\r<sy\036\275\274M\254<\307\021\231\274\246\333\205<\311R`<\034\206l\274\375\227\013\275\222\271\000\271V\377E=G3\006\275\321x\236<\361t\244<\230\005\034<\221O\314<\246\372L<\240\270:=\360\0241\275\325uS=\235?\270<9\2116\275\352\2520\275\2176\362:\215M\277<\212\216w\274\377\372\033=\205\247\236\271\363\347\236\274\311#\211;#A[\275e?\222<\277t`<\242\360J;LQS=\314A5\275C_\361\273UW\346\272,VN=v:\354<%.\256<\036M\014=|\204K\275\242\310\204<\334P\327:?\260\222;b.\t=\356\247\315\274w\204\255\274\002\372\266<&}w\274\343\241\220\274w\363,\275LP\253;\t\342M<\271R\265<\236\234\027\275\226\274\366\274\201s\t\275\177\274E\275(V\251\272&\224\t\275\\o:\275AM(=4^T=\010\034\371<9p\260<\2479t<\004\220\356\274\231\t\250\272\241:i\274\256\330?\275$\360\211\274\305\037\357\274\364\341J=\311b6\275\210\254Q\272j\217+<\311\010F\275\325\333\001\274z\005\002=\032q\377<u\r\207<\032x@\275\"\007\245<\272\314\"\275\205\323B=\310E\006=\206&\031\275 1\314<\025\261\035\275\337\225\032<\375\035\275<\312\2052=\330#\r=\274\245\002\275/rH\275N\224\241\274\275\245\n=%f\213\274)2 \275\257GU=\344\220I=\253vC\275.\333E\275~\347/\275\177\226,\275@xA\273\233;\"<\250\0361\274{`\005\275#\002\232\273\000\352\304<\314\252\305\274\257\0276\275\201\0167\275\324\326Z\275\355\215\004<\327G\371\274zML;\177\341D=\301S:\275D9\313\273\3704\310<\215?\006\275\261\336\014\275\364\354\226;\200y\330\274\336\363H=\253\314\216<\243\301@=D\2006<\252`\321\274\'\021\r=@HC=\322\273\034\275)\322\036=/[\327<4zG\275\001l\004<\305\223e\274\377\302K\275\023W\250:\"s\233<Z\264+=\240\353$=\ncv<\200\276\304;V\321=\275\241\277\351<V*\035\275w[\256;EM\233;\253\345\024=w[J=\001\245@=j\303\334\274\256\271\207<g\355\013\275\317\306\'\275=\327K\274\342\327P=\302aW\275\261\376\254\274\305\3465\274\000v0\275\002\3108=\223\247\014\274\303^\002\275\247\214\303\2723\316\000=h\374\004\274\005u\025\275\303-\223<\327\343M\27556\324\274\313\365#\275\351\267\236<F%\264<\256dU\275{\342@\275O\216\026=\303\224v<\022Z\370\272\223\356\032\274b\302\330\274\272\331:=m\206\010=}\300\026=T\023\312\274\r\261\272;\373\245Z=\2176\013=H\314K=s\234\367;\250\206M\275]pP\275\301\324w<\372gb\274\216\3076\274\024\326\251\274\352|\'=\247\346\270\274\264?`<\314wR\274\252\250\032=\316\237\014=<X\206\274\366\224\313\274\374\246\301\274\302p\210\274L4\204\273\345<>=b\346\232<\333\250 =\325\035R=)\376\003\275\361\2050=\357a\025<y\341\226<3{4<\217\030\323\273\2647\023=\345\210*\275\264\211Z\274\010\3478\275\177?\001=s\2716\275Zc\270\274\3403%=C\331.\275:\007Z;\320\315\277<\270\234\206\274\230\031\374\2749=M\275\350\263\034\274\037\3213=\260\250\254<8\211\211<\3205\021\274@\014R=\352\277\265<\035\336\363< b\251\274\334\275\207;.\024\344:;\255\017\275k\320t\2742\270\206\274\316\311V=\267\235\205</?\266\273\323\332|\274~\177\'\2754E\227\273\331\352\r\274\314\266\233\274K\323\004\275j+\316<\017\350b;\370\321\337;\267\223\376\274]20<z\235\266\274@\033\000\275sW,=\252)\321\274\214\0052=\tp;=\261\225\266<\000\373 \272j\036\022\275\343Hl;P\371\356<\373\257\366<\376\3607=\236\232\256\273\270\240\272<T\020\032={b+\275\234\251V\275\'\2377=\233\3334\275\265\027D;\236\0336=\324y\026\275\232\031\352<!?\267\274\005\270\022<Y\265\272<\265m>\275\306\360\224<jq\024=\'\"\255;\264\220F=\244\324W=1t\313<\360\001 \275GP+\274\370\222\030=\353b\305<\354\376R<\354\255\036\275\247p=;v\016\037=\373\220F<hJ\336<\267\005\374;ds\324<\\\323\370<\226\205\030\275\362~\030\274$\303?=\202o\007\274\316\032\024\275\364\361\003\272\363\000\375:\235Z\017=\352\362\364<\265\362\364\274B\271\316<\034\207\202\274q`\022;\33204=/\\\251\274_L\024\275\332=\322\274c\250L\275\326k\260\274\214>\026\275K\216\266\273\265\353M<\205\254\200<-*G\275\025\366-\275` \251\2742\030Z\275\006n\243\274\352\221M=\'\343\005\275)\246\223:=\210==KI]\274[\3566\275\320\350\325\272O\363?\275\307\217:\275z\020\371\274\361\227B=S,\327\274\301\014\236\274\234!G=S\005M=\211\002\027=\002\247\351\273\023\370\300\273(T\234\273\230b\211\274\261\313O=\340\365\024\275\227\226\274\273\202\177\376\274dv\331<\362\032\320\274\353_\026<\006\026J=S\356\'\275\276\005\245<H/;\2753\020\242<\013\010`\273\266g\203<\3002\036=\1771\000\275\224\325\376\274\037\026\266<O\241-\274\256o\360<\311H;\275\300\377W=\264\'\201<$@\"\274\352\327\003\275\263\204\037\275F\225\210\274l\244Y\275\267\033N=\374\207\247\274#\224\255\274\320\027L\275+Y]\274\234xH\275\301\310\000=\351V\001=&\335\232\273\370\376\327;\353\326\341\274\231\316;=8\306\013\275\203~T=\373k\367:\275Y\036=\257\202\315;\350\211$\275T\313W=\206\310}\273\274&\232\274\003\245\016\275\205}\312\274\213\2352=:f\004\275\300\032/\275\373\204\030<\212\003\275<F\302\260\274\364iV=\365\t\353\274iQ\006\275eS\240<|\\\365<31)\275\002)\215;\270\037\202<\035m\313\274{\335\204\274\345\220\266\274t\036\274\2741\243\025\275\323\206\n\275<4g\274|\335\030=\267K6=\305\202\035\274pp\\<J\301)\275\276\031C= \nS<\"]&\275 \300X=\337\276\346\274\216!\243\274<\354\"=\r\245\212<\210@v\271\3419\037=/\362\006=X\270\257<\377)/\275=1U\274\323\035\304<\240[d\274w\202\301:*\000z\274o\262\204<Lg\324\274!6\021=i\333M;];\023<o\242\014\275\200{\001\273\0031\327<\373\250\352;\002\232T\275\255|I\274\317M\033\275\006\0276\274\2617\317\2735D6=\010\213\325\274^\236\206\274\362p =r(\334\274H\344\013\275\364\247<<\247<\272\274Y\245\027=\217\377\242\274m\240R:\352\013\024\275]\2234<\254\200\312:\304\3518\273\'\253\270<d|\020\273:v\232\274\254\2672=\221m\010=\356\2671=\377\317\360\2741\243\030\275\031?\370\274\204\261\354<*}#\275\330\345\023=\331\342\2209\231mU\275\364\3524\275Z\272Z=\003\360\'=\230\201@;\000\234\226\274\\\251\307<\213\233\205\273nyX=\252\200\376<\017\353\302<\312\034\363<Z\256X\275\021\225I\274L\370\212<\341\223\372<s0(=C\240\317\273\313\344*\275\002y\'=n\301\320<\323\233?=\363\035\354<\021\321\350<Y\357#\275\"|\332\274\343\340E\274\"\302\262<\177\272\342\274\277\327\371<e\030\032\275\323k\027\275\022\231\271\274\326E\372:o\305S\2744\006O=\260\345\014\274\n\346\022\274\265m\273<?Y\323\274 \251\014\275\220\0241\275\302t\032<@X\316;\006\364\317\274R\225>=[8\"\275y+\271<\254q7\275\351\232#\273J\207\027=Z\030\240;d\025\372\274\320\245\203<&\'@\275\207\236\3739\306\267\014\275p\352P\275\221\010\r\275\000\300@\274uDP\275\354\312D\275[\002\337<\351\376,=\354B6\273\275$5\274\204+\317\274 L\247;\374}2\275\257Q\315\274}MH=\371\320O\275\200\330\224\274\243\244\271;_\266\374<\274\3547\275\210\221\262<\336_=\274k\341\234\274\322\206\256\274:\225\t\275\353\273G=\276\346_5\035\341L=V\206g<\023\273\246;\270\332\333<\206\210u\274\244e\263\274\351\345\252\274V\212\031=\007\3479<$XV=[\372f<k\220Y=\204#\376\273\204I5\275\272\021\376\273\372\324<\274\350^;<\177\225V<\326\010\017=\362\233R=\324\224X\275?\261\320\274\303\205\033\274P\253A\272h\256\327<\331/=\2755\264E\275\317\211\n\2751\254\2219\247\214\330<!\271g\274\365\223r;\306(K<\331](=$\347C\275\230\3308\275le?=\250}==\252\352#=jM\275<\247\301\010=S\340F=\340\253\240\274\277\333}:\341\231-=%K\"\275\245\231\004\275\013\321\276\274d\304\273<G\334\030;\025\022\327;\255e\274\274+\340\367<6\344\006\275\202\2328=bH%=-\"\335\274+\006\025\275t\253\330;k\324\026\274i\030\n=|\256X\275\314i*=\240)\031\275\2259\022=R\301H\275\314\313\013=\364\226X\275ex~\274n\322X\275\273d\234\274\323\232\325<Rh[\275/7\027=\316\226l;\332\250\031=>\215)\275\022\211\335\274\366\247D=\363\243\315<)Hn\272o\007\020;\'0\215\274/\263m<\203p\021\274\017\366V=\342\266\372<MJ:\275\301\343\034<\256v3\275\333\\\301\274+\373S\275\025\036\027\275?\343D=\217\\u:yuH<\362h/\274\000\324<=\330<\r\275V\035V\275\360bJ=\305\244z<\351\273X=\203^\276\273\021\260\317\274K2c<?\301\232\274S\r\240\273e\t \275\204\264\037={\334\332;$/\340\274\032W$=\n\033\036<!\017\034<\036\341\031\275z@\027;\224N\246:\002i\371<\313\006L=\372\0061=\223\330S=#\332\340\273g\303Z\275m\031\014=\010\343Y=\014\253w\274\020\314\027=cj><\3343\310<\305\300\025\275@\350\220:R\215\000\274n\026\'<\274]\244\274\250\334T\275\212\3612=\226\014\226\274\302\204)\275\327\203\n=\025D\270\274\017(3\275\030D\372\274\000\010\021\275x\222E=\301\210\235\274\250a+=\222e\347<i,\022\274\353\304\222;TZ\"\274Y\272Y<\0061\230;;\2647=\037\323\033\275+\257:\275-\252\213<\031\304\210;\270\364\010=\370OJ\273\021\006\353\273\312\365\277<\230a\002\274\263$\\\274r\355}<\035\265N=\004\340\n=X\224P=;\234D\275\263\332\331<R\013\341\274\2475\341<\204\246[\275WM\023\275Wg6<_\036S=Ml[=w\206i\2743hI\275\003\nD\274\270\317\300\274\340\331\000=G\272\025\275[\366C\273\2203\031;LjX\275~\023\263<v\010$\275\327\007\205<\357E8=P\313\256<\006\266\253\274\204Y\"\275K\270\205\274VT\224<g\254R=\357\366\031\274l\364\000\275\316`9=i3\024=\275Zs\274\3370\271<\265\004\245\273oK\246\273\224}L\275\372\224\202\274+A\245<y\3119=`\261?\275\231\244\371<\365Pl;\240\')=\220\271\001\275u\330<=\305\'\223\274\355\373\367\274#\021\314<\207\251\3238\002\251W\275\374T\365\274\034b\232\273c\212\036\273\232p\376:\020\030)\274&B[\275\256\224\314;\177\305.\272H\n\010\275\026\355\363\274\306\321F=\361\347\250\274{\242)=V\227\327<\026\242V\275q\217\276;\307\362J=h2\034\275p\215\027\275\354\245c<\032y\004\272\032QZ\275\373AM=S<\203\274\222\204\211<\036\205\037\275\373\224\271<Pv*=\340\"\362<0\350\334\274|i%\275Y`<=\305\201\221<?\221P=\"\373 \275\200\241D=\033-M\274\'`\r\273\204Q,\275\022\304D=\230{+=\270z\342<\363|\377;o\247\002\275\027\034\t=\311\263E\273\365\302\n=\377\031\276\274\371\355\016=\037\034\006=X\207\250\274\033\206\220\274\017aF\273o=H\275!;\232\274\235\212{\274\270\031\017=\266\313!\275\335\331\305\274\272m\"\275\350r\036\275`\343+=:PB\273\346,5=\373\3506<\342p\336;\320\036\240<\350H\313<x\326\t\275H_\034<\225\323\"=E-9\275\276\017\337<\322l\"\275g\037\346<\'lZ=\353H(=\020\344\317<\033O\001=\026\023C=\225N\231;s\350\035=\177\032\215<\331\250\305;\352\325)\274\233\003O=\377~c<olK\275\037>G\275\033\344t:\206\360\"<@[u;\353\212v\274/\306\022\275\236\226\203\274H0@=\372Q\340\272\323\256\353\272\314\016O=\005\230G=M\253\262\274Qe\356\272\215\372\255\274O\306\032=\252jo\274\024+,\275\361\342R;\007B\024\275\304\376K<\006\302y\274\205\314\345<\330\336\032\273\310\2339\275\353\275\020\273|\363\214\271\361{\n=\030\275+\275\331\242\006=\334{)\2753\007\271<\3305\'<&Y\207\273\3712@=#&\003\275,\007\002<\357\211+=\317\203K\275!\271\036\275\210\212\353\274G$)=\236|3=\326@\217\274`\014\210\274\364\321t\274\317\346?\274\025G\326\274\270{\321<GjS\275V\216F\273\343\333\201<\367\000\007<\345\345\336<\357\204\032\272\320\002K=\321\240\315;Mi\177\274\270\204\255\274\372It<\035\223&\274|\207\227<dI\236\274\357\314\251\272\361\010V=P\326\010=\300\r\003\275\000yM\274\037y\336;\244x5\275A\275\232<\323\363\250\274\331\353\026\273\265\017V=\247\374\r\275>-\336;\317]\004=\200\0009=\334\355^<$H\207\274\363\372F\275fM\372<\333KB=?\335\202<\367\336\353\274U>\242\272\210x\351\274\033g\010=\362\374\273<\335\303h\274\3363\362<L\232\315<>\325\311\274\340\226\373;]\315^\274\245\377\245\274\0022\252\274\272b\367<\256\030\256\274\362/\343<q\313L;\261\002a\274\340-:\274p\034\334<\364\210\372\274\001S\n\274\250\202\010\275\200DS=\337 A\274\320\204?=\0021K\275\243z1\273/\026P=\265\324V\275R\215\265<]X\312\274\317\242\310\274\322\255U;\270\265\016<\364\243)\275Q\255*\275\037\023\036<S\024\227;\334\334\371<\203\275\032<\207\210\324<\r\203\366\273\347\264A=\034\327)\275c(\036\273\000\177\232;\311$\373<\221\373@\274\354\036\t\274(\314\323<m\037\371<\257\377$\275P(\t\274\200t\320<\261\031<\274\032\n7<E\347\335\274\304\323\353;8\332&<\234\r\366\274+=y\274\301\326W\275\257\353\313<\307\347*=\235\2043<\n\223 =7v\315<1\004M=5\203\207\274\031\333\304<4G,=\325\311U\275\301\237\371<\3611Q=\227\315\233\2746\345\037\274c\245&\274Y\016\204<\375\203X\275\236\360\316;)\345;=0\240}\274\262\006:<\275\363\004\275\316\344S\275vu68(\300\372<\321\325\241\274j\2758\275\212\306S=\324\223\260\272Y\316\320<\2115P=\236{\370\274\312UJ=\273!\203<;\036%=\317\205\351\2749k\254<\351KY=\235I\275\274\3146\346\274\252(\214;\335\206\232\274\374]\262<\271E1\274$$H\2756\305%\275\210c\001=\177\206@=\264\316\"\275\265\200t<\343\'\224<\022E8=\031\014\027<]\263\322\272\307B\237<i\235\020\275\264\033X=TE\361<\336\322\224<\203\025\034\2752\222\033\275\221\202\224<\206M\031=\220\021 \275\306y\r;i\267\310;\271\340L;V\356\027=\337\313\200\274\035\022\027=a\"T\275p\311\326\274\224\323#<\001)\200\274\267\300\252<\337nY=\275d\230;:\236!=\'\236\013\275\317\315\035\274E\3442\273K\241\035\2751\017x\274\266\3329<y}z\274\206\301O=\225~\365< \307\240\273\262\223\252<g~\020\2756\2318\275!1\013=:\310\222< \013}\274T\262=\274X:\223<\326\032\016\2754\033\273;\003\344\272\274e\n\020=\225\233\223\273\224\227B\275\370\374\246;\0051\311<\327\353\312\274\370t\002\275\301z\023\273.<V\275p\013+<q\202:=C\341\214\272deO=\3718\037\274\323\206\006=\336/\245\2744t\'<\273\372@=P\004\306\272`\203\000=\234\316(\273\344\371\000=\307\010\306\274M\316<\275\270~\026\275\260Y\304<E\340F=\035c\026<\t\256\357<\301\276\261<q]S:\027\274F\275\354\n\310<\303o\200\273[\003F\274\316\275\206\274\337\341%<s\263\204\273ss\277\274q\214l<^\2443\275\240Z\270\274\357\216D\275-\371-\275H\210+<\313\300I\275\025v\266<w\224%<~\\*\272\030\206!=\033+Z;W[\313\273\213\355\255<FG\230;wH\033=4\255\300\274T^\032=\327\270\206\274\300O\343<\316xB\274\232\032>\275\202%\362\274\373o#=\243\206F\275wm\347<\232\274\177\274\273\214\002\274\247\342\226\274\376\367l<\237\257)\275\304\336\266\273\256dj\274\003\342\"\274f\010T=>z\274<k\335-<\2233\004=\213y\376\274.\271S=]\360G;\373\266b<\362\345\376\274C\372\337\274\250\2212\275\375\205\372\274\224\013\027\275\031S\205\274\226\315\232<Y>V\275\242\372h\273\311XP\274i\221R=\305N\312\273\nM\360\274a\3629\2756%\365\274\3609Z\275\273T\272\274\214\262\253<2\023\033\275R\033>=2_\022\275\335&\016=\300\3070\274N\025\370\273h\321\021\275[?\014\271M\033:\2756\252\t=\326\315f;\007\322\030<F\370=:c\260\262;:g\274\274\025\227\215<\340mb\273^Q\370\274\212\0308<\r\231\'\275\333\202\304;#^)=*R\303<\222\304\2679\240\207\211\274\364o\325\2746\270\322\274\365CD=)\241F\275\00394\273E`\004<\n\2669\274\204n#\274\234C3;\361\227K=\226\261\n=zT=\275\226c>\274;\320\010\275\237\000\334\272\225:\240<\256\023N<\346\232\254\274\350!\223\274\213\254K=\336P\231<\226s\217\273\350\217I\2750\3053\2745\275===X4\275oJX\275R\273\023=\372<A\275\243\017D=|D>=\316e(\274\233\366~;\'\nG\274j\214\251;1\364&<I\241\r=\023\037L\275\273\356\272\274\217Z\227\274$\355\005\275o\236e<K\002F=,\255\220<f\322\366\273BT|;\246\227\233\274B6\005=\375\333\276\274W3/=R\032\'\274@\300\021:\363\314\000\275i\260E\275[\346\247\274\0235\362\273\323\366\241\274\307\036w<\033\016U=\003\206\031=GP*\275\346\273\352\273\250U!<\265\000\326<\351\243\033\2753)\";\327\022\306\273\277a\324\274\026s1\2747\000\016=\314H\n=\253\327P=\205~\034;\335*\205<\'\216\"<1\333\205\274\251/\\=\321\010\025\275hu\332<]\227\017\275sD\032\2747\372c\274\361X\005\275\327\312\226\273\214*.\275\232<\031<\270w%=\340]K\275|\352\373<\315\361\244\274h/*\275\035=`\274\3524h\274\021\2200\275\2463[\275\021\260\031=\222\265B\275\321\227\025;\225\221P=\333k\345;Roz\274<\\\030\274a\004E\275\371\211\236\273\365\244,\275\024\002\017=\026\315\223;&\257\n\275\362\370T;\034\256\244<\223\355\013=\275\2612\2759EZ=8\277V9\261\000\302\274\317\340M<WK\274<\324\311C9\3470C\274\302\tZ=\241R9<&g\333\274i!\323<\203c\010\275~\311\306;OlY=\021\2467=9\203\266;\024\231<=@~@;`)*\275\264(\037\275\200 \250\274\266\251\267<\335\220\233\274\273\035\325:\377\225\007=\331\236]\273c\302p<C\224\326\274h\350\013\275\371lC=\320\257\323\274\031\034\250\274|z8\274H\230\'\275*x>=\243\0231\275\365\331\226<s9\212<e.\252\274G\374W<\213X1\274\202;\002=E\035P\275\216\016\002=B\316\341<ap1\274\207\255\314<\324\035\006=\356\350*=\322+\357;\320\231\033=`f\035=\r\366\233<P\002\266<\221?D=\374\316\021\273\244\021\033\275i\023D\275k\r^<\022\177\341\274\321@*\275\212\221\363\274Y\203\354\274\013.\036\274\250\032\364\274(\0209\275NH\357<\3125\233:\346\271_\274\336\t\264\274\177\323\237\274\235\3278=\245_b<\255o\343;|\017)=\221\226\"=\343R;=^\275#\274n\"{<e\204\261<`\242;:\'KP\275\371\2200\275\026\204\267<\301\321\266;K\3339\274\024\030\377<O\265\265;\020\341\330\274=!\\\275\3237\033=\306k4=p\332 \274\336\021Z\275\227c0\275o\277\224\274B\325\313\274\033\316D=\370\340\247<\222\025\021\275\030\3074\275\226\262\010=\264V7\275\ra\212\274\262\367\006\275\314\227\252\274j=\021=\261`Y\275\240\201\370:\200\267&=\332\331A=\220K\354\274Y\005W=vVj<\250\262\013=\255\2061=v\220\346\274\372\357N=\237k\310<\324\335\004;U*v\274\252\364\232\274\322\346\273\273\235ID=\303\037\336\274\261gZ=L\340\027=1X\023=\030\035%=\201\264\204<.\201\266<HB\212<\305;,=.u\300\274\037\031\333<\257\200G\275\003\0252\275\246\035\202<\261\257\316\274\017\223)<7\r\263;W\0242=\2227\326;Wu\253\274\227E\257<\212|\"<U\253E=\303W\374<\210\243\251<s\024u<\004\300K=\370u\025=&\'\304<\3458?=v\3770=\352 \272\274\367\353\037=\362a\276<\377\005\310;20[=\363\'8\275\322\3718\274\265\366\224\274[\211\310\2748B\020=\371*\243<\017H\236\274\272\225\301\273Q\271S<\333~\025;#\330\320\274\033\0061\275\331\207\257\274\371\200_\274Si\332\272\254\372\310;\2072\325\274*\037\252<=2%\275\036\267\017=\335\325W=\304\344\361\274\217\326\031\275\035M}\274N\306\232\274\225\004\225<\353z.<\211M\237\274\001\305M=\317\221,<\'+\363<\331\335\345\274\271R\267<_C\277<\330\347*=^\337W=\250X\014=\267\0107\275\375\226\037=\013\260k\274e\3275=\201\334=\275\275e\266\274<\231\317\274_\2231=U\267\310\274\301\325\332;y\202p\274\244G\222\274\340=<=q\221\375<\335\302\033\274L\"\312< u\220\274Wy<=\227b\013=\352\237\236:DP5\273e\216\345<\031\353\007<\212\213\216:AV\221<\020gE=A\0311=\325\303\320\274S\014\017=;\202\017\275\350\243\227<\313\243\016\275\371\323\030\275\242\320\244\274\364Z:=\260\370\177\274\017Ho<\010\002\027=\237B\321\274\332\245\244<\020\360M=\213\320\025=\336\314\013\275\t\362\212<\325\337\303;\261\000\233<\020vQ<\224r\212\274\212\010\023=\334v3\275\257\007\362<\263!&\275\311u\365\273\201\354\n\273\371\303\372\273c\245\003\275\204\204\352<q\364\301<\275\177\346<H,E=\255\261#=\3231W<nRF\275\223\002\251<fV$\274\333\244V\275\216\323,\274\022\361[\275\376\240\014=\251\203\251\272\262`\335<\301E\201<\341X\032\275\263B\261:\277\210#=\345\362P=GiW=\016d\220<\356\310Q\275\035\225Y\275e\222\210\274\353iy<\n>\373\274\245|D;4\027H\275\\a5=\364`\032=\"\030\036\275vS\"=\335\334+<D\030\\\274\262\t\017=\257\314\253\274\373\336\241\274[\377\263\274\371Z\326;L\263<\275g25\275\231R@\275\2668\215:\345\205\024\274g}\031\275\234\350\r=,\367\352\274\026\265z<\272/;=y&\314\274\360\231I=s\375\007\275\236+\n\275\2355\367\274\"\207V=?\322P=\013\352\316\274cf\274<)\016L=\304\275Q=IQ < \177B=\005\t*\274\306\205\216;\240\262\301<\374\200:<\372.Z=B\227\301\274\270\037\032\274_D\010=\260\0241<u\001K=\346G\004\275\t\364>\275^q\035\273tc\367\274.\217!\274{\257S=\351$\370\274S\317\346<\313\322\312<\"C\"\275\327\367r<@\362Y=\376\3602=\3535:=\254\350\215\274\373S\341;}\034?=\361\353\337<\3559\223\274\2617N<\227e\026\275\034\377(=\023f\332\274\344\213\237\274&\260\013\275\241A8=W\310\007\275ae\333<\317\227n;f6.=\250\3025\275\215\003\235\274i\353\020=\244BN\275u\334\237<\361q\306\274\246\021\005\274\024\0057<\311m\255:\243\234m\273X\020\272<\0271\037=\353(]\272O\207E\275\276\303\200<\320\331\351\274\221Y\230<*\334I=[\024\204<\023*\223\274*\334N;U\004\247\273\232fW\275&{5\274\342\211\n\274\205\027\225<U\222\016\273\'1)=v\346\343<\314Z\251<\177T\372<\003\007\305\274\221P\210<\370\302\001\275l\234%\275\354\3073=\241?&=V\324:\275K\311\244;\210\222B\274luj\274F\246A=)\352Z\275AhX\275\307\327\256<u\274\273;Z\341<=\361y\273<\242x8\274L\n.\275\347\007!=\006\374&=\334\326\361<\0205\255\274\355\3005\275v+@\275\325\346\023\275M\026$\274\235\254\324<\010`\202\2731\373\030\274\264\345\020\275\237\214\030<\253\271\304;\303\220\026;\233Z=\274\306\236T=\306\231u<\256l+\273\211\303)\275\\\254\030=\241\251\316<\r\3311=\276q\335<\243F\034\275\323\360\210<\005\3632\275\207iS\275/\034\220;gJ\347:\371\321\023\275\234\032\032=\272t\033\275\346(\030\275t\220\231<\341\335\271<\303#-\2750\311P<\327\257\307<\325\177\007=\202\207t<\004J2=\207\210\200\274\263\260\n\275\222%\000\275\342\016\031\275KM\315\273/\0349\275w\206f<\014\333J\274\354I\003\275\342M{\2746\246J\275\005:\177\2733\263\231\274\177\037M=S\224\210\273@\022\344<\000\307D\275\020\213X=\\VV\275\20022<\311y\020\275\263p\206<\330oB=w2\240\274h\223!=\373\321\277<R\376\243<\315\200!=\273\266D\275-t\274<\356\350\026=/\340\024=\273\236\247<.T\031=\236\350\001=>c\377<3\302\002\275\r\2442=`8w\274@\330\003=\247\'\307<Jj3\275-\203\'\275\202\246\027=\265\031\344\274\235+,\275GC\\<\344n\321\274u7\376;\342\207L\275\031\017%\274\330\302/=\263\377\204;@\333+\275 \007V=\367\347\235\274\275Q\034\275\003w\201\274C\034+=\n\250\215\274\246\326;<\257\003\344<b\341\006\271\325\232\307\273+v\335\274r\341>\275\327Z\227\2746`\023=\331\340\023=9\250P\275\300\277/=\242,H=U\323\027=\264a7=\010\363:=\376\030\022\275\003\274N=e\333:=\322\341\003=\364r\014\274\241\207\361:\255\217\306<\333\227\005=\372[-\275\331\361\371\274\034\016:\275S\017\232;s\010?\275\00084\275\032n\"\275\025\244\034=\322\241\000=\336WG\275*\205&=\275\212\t\275\315\2101=\364\003H\274\216/1\275\301\372\321<\030\244\341:\177\206\030\275\330{\377\274\370\323\030\275\236\212L\275\222k\037=\267\325\016=K\351/\2756$\237\274\334\340\265\2740\177\034=\341/Z\274M\271\265<\2636\000\274\310\177j\274\315>\"=\220\304\032\274C\236\010=d\347\017\275\346\031-=\370\264\026\275bF\001\274\352\013\307\274\356f\345\274\215\303T<\360\230\203\274\345\030\301\274\004\254\r\275\r\363Y\274V\3545\275\321\365\026\275\033\0243<\261\213E\275\373NW\275nm@=\367k\353<+\252\254<w\020c\274\002cT=\301\017M<\376 \027\274\304\034&\275\016+\230\274;\177X=E\233+\275\211\261>\275\367.M=P\367\227\274>\013\310<\202\217\350\274{\033\'\275\314{M\275\2002\\\275]C@=\342\001\331<5,\036<\006\274N\275\245\262\272\273\271u\331<\255R\017\275\200\177~<\271I\324\274\373/\247\274TZ\305<\177\220\033\275\n\3350=\326\2051=TD\360;n\235p\274w\031\245\2727P\361<\213\357\034=\037\3102=G\030J=p\315\025\275>B\242\274ms\344\274\310\266\366<\260h\n\273:r\014\274K\305\217\274&\260d<=\252\260\274\275\036\231<\024\273\027\275\330\243.\273-#+:Q\006\027\275=W\230;W\364\001\274}\316\352\274^\227S\275\271\022?\275\020:Z=\245u8<;\305L\275\037\261$=BuM=\022\323C=m\304=\275\353s3=uY\216<\301\234\031\274\326\347?=\023\376\231\274q}\365<[\2636\273<\242\346\274\353R\342\273\227D\263\274v!\036=\201\365\303;\275\'\370;\301\305\026=&WN\275\220w\224\273\360\373\317<\n*+;ymL=\251\023R<\337\277|:\262d\247<fw\246\273\275\226\n\275\273q\032\275]\347P=\364\362B<\371\236%\275\3578I=\3444\013\275\231?\365\274\334\272\257</n\030\275p\327;=\027\335\210<\250\2759\275\327c\254<u^\271\274\267VT=,\344\272<\306\2225=N\254\036\275\237:\355;\315\r\024= \003\346<\245}\201\2747\006\027=\211\301\227<\347\320P=\360~\016\275\304\034\025\275\213s\320\274#q\256\274\325\322\332\274P\343f\2748|\020\274\241\001\275;\026\002$=!L\001\274\272 \266\273\260\323\363\273\023\262\217:\276}\026\275\355A\216;o\017T=\343\366M\275\023v\036\275h\274\031;=nx<\302\255\357<\317\300\365\273\327\364\274<\341\322\213\274\265u\"\275\253\\4\275\301\260&=}Q\353\273C\311\033=\220)-\275\337w\331<\222F!<mY0=\007\335\207;\253\021\275\274dO\024=\346\302x\274\210\325\323\274\030\366\342\274\\\271J=\240\345O<0\036\363<\327E\210\274@<\326<L\365\337<LS\312<\256\307\200<\337.%\275\307jN\275\2674\314<E\373L<\022$A\275\347n\030\275\rO\031\275\361T\340<\21467\275\270\311\014;\237\3720=g\211\363<\214\270|\2747 V=`\'\264<\010\303?=\315\241\217\274B\222\013=#\023*;\373\317H\275\332\317\202<(\277\356<O\360\264\274\002\253\276<d\301K;f\322\021\275\033\010P\275\002\3302\275\023\201l\273\376\006-=\342A\337\274[\224\200\274\311\000\270<u\346c<m&r<\021\004\023<\333\333Y=\341\361\342<Ri\326<\315*\202<m\366\005\274\226\255I\275~\340A=\201\214\361<\234\247\313<\347\337T=\333\315\023\2752\226\000=\260\030\351<[\270&\275hfA\275\023J%\272\031\342Q\275nN\216<\034\305\231<\241)7=)T-<\344K\337\274\245i5=.\347\022=\316\343\335<\371k4=\343\004\026<\211P\343\274:0\263\274\352\376\r\275\376\3266=\\\305\314<\267\315\373;\320\032\026\275\372\362\207\274\354\r\307\274S\3256<8\024 =(\030B=\031\201\356\274a\211\n=Ac<;\373\245\365\272\226\375\025\275`n1=\304w\000\275v\272\357<\033x\201\274\203\200\236\274\304\250+\275\2774:=k\033>\275*/\030<(~\212<\332\373\366\273f\367\003<\300-C\275\226\030P\275<\3255=\300\203\363<{\3333<\272l\005\275\262;\010\275&\331J=\332\242\007=\355m\333\274\322\202\252\274\307R\032<G\324\022=\344/\025=<\257-\274#\\B\274\235\372[\275\262|\233<\336j\361\274\332_\340\274\270\247)\275\267\010-=\316\275\261<\325\310\225\273\352\001\t\275\355\376D\275\235HF\274\277.\362\274\024\306<=\362\252\242\2741\255\322<\017\264O\274\347UX\274\325\013\346<\355\245\005=\367\300\032=\2454o\274\236>\356\271\265s\275<r\255:<\t\r/\275J\356\001\275Y}[\275q\030\337\274\364h\276;\232u\001=f\007\267;p\031\345<U\267\333\274\324\036\372<\005\'\246\274\353\206\032=g\226\035\275\2132U<\363U\311<\355;\362<2\007\365;\307\313\013\275[\027\357\273f\363\252<\005\211j<\347q\022\275YJ\364\274\371_8=\274Q\314\274\214@L\275\207\007\361\274[\240\231\274\025O\\\274S\342\031\275Q\022\025\275\007`E=R#\374\274=\356*\274m\005M\275\032\306T=\036T\210\274q]\022=R\367\036\275\3331\254\274\227\305\273<\235\2563\275D*\367<&\2302\272\001M\217<<.O=\307W\222;\\\030R\275\036\224\340\272\031\337H\274\037\224\207\274\223\270\346\2747\212\305<P5t\274\257\377\360\273\324\327\225\274\211\225\202<\177L\224:\014+\010\275\220\266V\275/\375\307<$\021\216<\001\023Q<\026\311\252<\276\354\222<q\366\n\274t\202\350<M\031<\275\364\303I\275~\234\324\272\271\276\344\274(6\303<1\205K\275\004zZ<\235\316-\273\3657\253<\276\265\336\273\234K:=\356\255\246;8\016E\2757S\273<\210$\204;D\010\355\274`\2042<\243\276\001=\22141\274P:1\275G\330\335\274\311\"\361\274\013\311\343\274Y\335#<c\327\256\274\021\203=\275\275N#\274\261\362\n=\2473\361\274\323%\260<n\243E;W\034\002=BhS\275\026\024\025=D \305\274z\212G\275\211MF=\303m1=\316\306Q=]\305\377\273\315[\027\274d\021@\275\227\223\206<\341[9\275p\224\355<\351cW\275\361\342\327\273\035\245/\274\357\2743<\031\271%\275\311%=\275\035\207\221\274V*\250\274\313f\321<\266#\224<\345\3714=\346R\016<\213\354T=:\371\021=B[\277\272\326\361\252\274\332\356\274\274^=\267\273\263\035\350<\376i\322<e\353\020<\261\'C=\005.\324\274\2714\010\275\201\005$=P\235Y=\372\306\003=qvG\275\206mD\275\345\230\003<*\025!<\352\324\247<\002\245B=5\233\020\275\237\033\210<\360\354\033=\354\303G\275\224jx\274;\226K=\324\250D=\331\351e\273\314\351\236<\332-$=S-\214<\314D\335<;W\234;\304o,\275\244\275+\275%\342,\275\324\3714<\'\252(=\270\020\257\274\010\323L=\301(\302;v\3339\275\"5\357<\213%\247;w\343)\275c\257\031=\"\007\232<\"nP=\316UP=\272$Z=<\321,=\257\377\025=\3212P\274\347\347\016=(9;<\361\\V=*\366\177\273{\326\026\275\244K&<RK-\274\313\371X=d\372\013=\235\311\336<H\rJ\275aJ\005\275\317i\036\275\332\251\262\274\223/\314\274\3432\365<\006\254\232;7\037\037\275\205\016U<\376-\232\274X\343,\275\2058\031\275\003)S\275?r\320\272\247\346\023\273\253\302\236<X\303\235;\217\363\274<\004\000\210\274I\272\013\275N\344\337\274\364\220\362<L?F\275\247\000\267\274\336\360\257\274\3732\001=\003B\215< %(\275\353X\302\274\273\024\035\275\005\031\335:\213\264\243\274SmH=Q\233\265;\332\024\002=4-\365\274\226\271\210;\277??\273\273\327\262\2735\2400\275.M[\275\002\005\n=\264\035>\275y\235\037<\367\031G<\352\367%\275\232\316?\275|\245\'\275\0313\347\274\207&$\275\303!=\275\037\314D=\212\305\301\274<\375)=sg\234<\366=\335<Y\370\310<\021\225\331;\222|\303<\323B*=H\261\023;\242\007\276<l\"-\275\214\255\207;\317\312\024\274\310\200\364\274B\316H\275\025\303\366\274n\377\343<\243{\351\273\346AN\275+\237\211\274\317\245&\275\235$V=]\006\202\274\364H2=\325\302\037\275\362\244\254\274\r\356\026=\243\267\023=\234\3348\275\376c7\275\353\207\347<LP.\274z\251W\275\2364\325\273\304*/\275\321\224\304\274\256]\'\275\307n)\275\002\215\355\274\234\377\346<\217\251\'\275>^\345\274\316{\204\274?b\264<\313\307C<D\214L=\360\334 \2758\323q\274\231)\350\274\262m+\275[\2001=\320\030R=\253\035P=\333\025\021\275\271\274W<\246\320\306\274\212xA<\337D\273\274D3\203\2713\001\343;\270\177\255\274\217\376W=\006+\027=g\001\301<\215\002I\275\316X\276\274i\253\276<\306\236E=\007\350,\275\037\241==\343\244K=L\276V<\230\322\264\274[\316U\275fw<\2758\350\340\274\351f\347<\362\034\367<}\334U=\321Q\265\274\232\274#=\206r\025<B\237K=\344\237\025<\206\345\033\275S\021\r=\223(H\274\177xf:\200\252\034=\215\332Z\275\036\252\202\274\220M\357<\021\240/<\246\261\340\274\361\2200=\024\314\315\274P\027;<\270\275W=5\005J=X\001@\274jn\022=`\300.=e#\034\275rq\347\2744\200\214<\336\267O\275\322A\034=\251\244\023\275\263\275$=\201\301>\275\245\036N=\327\255\020\275Jw;=\034k,=\250rE=>\255\252<\341}E\275\016\010\004\275\244U\306<\227\000B\275\235GU\275\363\337\026\274\001\240D\274\217/\305\274\004\270\230\274\200\3725=\234v\261\274\305\003\017=\202\245\211\273\033\232\243\274g\351\242<\300\371\315\274\032*\010=\300\311\277\274\350{\256<\356\221%=\342\275#<P\336\305\274\277\365\275\273Q\nK=\332\362\342\274\307\244\362\274\265`+\273\377Gv\273SO\001;\215\342\224<&\024\223<\277\034\224;q-\216\273\023uO=\223\234B;W\230\251<uN?\275\302\316\247<4\344X\275\204\246\004=\244\302H=1\201\3039\232l\325\274J\004F=N\315A\275\364\253\256<\333\350Y\274\345a\370\274\232)\204\273\242X\002\275^\027\007=c\300\003\275\227\001\025=#\323\350<\346R\007\274\314\211R=\246\034\017\275i2\320\274x\"C\275\340\332\205<\350P];Z:==\220S\004\275\355(\346\274\366\270@\2758\253n<\375D\033\275\212h\236<?\205\031\275\003\301!=\252D\352\274+\365W\275\302\260\247\274\276ZE=\266T\372:7\224O\274\345\265\251<\275W*\275\200\215F=4\273j\274a\2500\275\001\033\264;\307\240\245:\366M\026=u#\027=\rZP\275\310H\013\275\013\203\367:\230\300\010\275\334>3=\214\270\006=\231G$;\002\005\224\274\204],=\315\370\277\273Q\211P=\307!G\275%\245\224\274\"\275(\275\3466#=<\252\255<\2743h\274~\217/=\221\303)\275I\224<=\017\254!</\257\230<\262\352\347<\212\272!\275%\355(=\216*\225;M4\200\2736\354x;\351\025\303<[9M\275\022\241\'=6\333\343<\232e+<\016\204\r=\365\365\354;O>\333<\321\214-\275\313\363\016\274\265E\037\275\271\0037\275g\263\025;[q\303<Io\001\275\035\376\'=\363\364\372\2737\215\003\275)`8=\207\n<\275\"nH\275\272\254F\274\245a{\273\233\267\314\274{\026Q<%\202\034=\014\021@;h\263+<vYW<\330P\007\275\036]\224;\020Q\316\273-\347\001<\213\266\375<\374!J\275\351\321\034\275\371|O=:\032\264;\246\024\212<\246\253\n\274h\300\'=Dj\361\274\2424I=3\347\003=%<\2539;z.=]^\303<\353\361\350\274\274\257W=\335\021\004=\271\250\216<\227\3578;\3058t<^\303[=p18\275\342!\263;\202\203O\275ek3\274?Q\201</\361\310;\343B\323;BJ\303\273\276\353,=-\255\255;\341-\357<\207\241O<\021y\354;\201\224\014=A\021\320\274\205@\030=\320\241\026<k(3=Xu\004=9\304r\273X\272[\275^\212\001\275\3413P\275\r0\007\275\272\260U\275\225\1777=\225\365\307;\377DE=]\210Q=\243/\361;2\215\323\273\336\251k\272h\016\366\2745$C\274\2300\344</\356U\275\203\027V\275\231\272\024\274\332\222\320\273p\344U=\377\371\276<\005\372U<A\222K\275\215\277\313\274D\3373\275\365\025\002<CJ\321\274V\000\364\274\016~\206<\223\\\372\274Kz\016<9\363\212<n\005F=Y\013,\274\036\276\271\274\306m\275<\267\000\031\2756\337T\275 \226;\274\360vr;\377\346\351\274\211\364x<\376>%<\303\213\003=\324\223:=pWA=\227C\250\272\324\226\366\274z\323\020=\373\265\333;,\216\027<\375\200H\275\234\375E\275/\242Z<\376\362\227\2735 A\275\234\257#=-\222O\275\324dX\275\251\264r\273H\367\3349\t\0028\275?\206\023<\226}\202\273\214\276\027=\037\244\033=\021\373\036\275\226\255\365\274\372\016m\271bc\020\274\356\274V\275\252f\350<\272\246\301<\371z\020\275.J\327\274\344\234\032=z\337\005=\236d\314;\225\254\265<ai*\275\002Sl;\022o\315\273\222\337\315\274\353\315\036\274\'\355,\275\021\317\033=\243\273X=LZy\273\371\303\017=\246G\222<\2445\320<\270\260\032=u\336L\275\004\202:\274\216\365\216;5X\340<\241I\014=b#(\275\355x\271\274\331[Y=\343$2\275\003\256\267<z\245\331<\222!\236;z\020k<h\235\331\274\231\315\345;\004\r\244;\345q#=\352y\000=\246\324+=\272z/=\335\263\001\275\236|\023=8xB<\345\034\374<\334\\\347;\367\336\326\2747G\311;=M4\275 -\371\274\007\355\315\274\2500K;\236\276\241\274\202=\202\274:c\342\274\245\233F=R\305\324\274\377\246@=PD\345;\365C\032=\201\372\344\274\312\013>\275\224\354\024\275\333\360\035\274\312#\033=\332\377\"=\215\364\006\275\270\337\017=\365\020Q\275V\272M\275\254K\270<s\312n<M\243%=\007\352[=\0071\260\274u\000\020=A\020\233:;\372\036\275\030%\337;\202\216\301;<\332F\275\306\206L=\230we\274\227\357C\274\242\227\374;\245~-\275\3640T\274\252\244E\275\203:4\274\261\203\304\273\013|\362\274!\211V<\014\2663=\246\037\257;\037\251&=\256D\364;\210\226\345<\273A\326<&\303\261<\334S\n\274z`b;\027\231\247<\3205\\\2753\313\265<\361\240\003\275\336\241E\275\031x-\275_\035\317\274\370\210\032=\204\023W\275\305<\256<$g\314;mb\327<\006\265\223\274\227X\311\273\251\374\007\275!t2=\375\272\343\274\306\021Z=KD\336;\267%\252<\246\263:\275?\315\335<\027{\005\275%\372K=\037\204\253\274/\277\330\273=;R=\202\337\375<~Q<\275\370\211N\275r\0337=\376\231\000\275\367\273\232\274\247\377S<\305\330K=\302g\273<\214\020O=X\023\363<\272\334\017=\263\005\\=\343\275@=\2113\002=ua\005;\222D\222<\025\2610=\250y0\275 9\240<\037\343\007\275/\245\3019\253BM<\272\341\256:\227\r3\274e[@\275\372\026/<kl;=N\224\035\275\252e\257\274\\?P\2753\376\343\273LW\232\274\030\027\r=-\232\204<U\023\001\2745\277\000\274\024,\271<k-\335<\210\353%\275\232\004\024=\225\274x<\262S\207;\353\357\031\275\010\306\215<\n4\315<\020O*\275\033\276\003\275\310\376\021<#\373%<\321<\006\275\010TU\275$)\222\273\204\024\034\275=\315\005\275\201\t$=\323\216\3729\323\222M\274\030\203\361<\314o\245\274\375\354\030=\252\243\266\273Q\021\321\274]\370W:\373\246\353<\302\227?<\322\363\236\273C/(<U\215\221\274\245\016\013\272l\342J=\330r\t\275\355d$\275\337ia<bu\332\273r%\204<45\014<\221\032\033\275\032\025><Z\271I\2756\376-<m\301\332\274Dl\237\273\030l#=\202\021[=\014O+=\200%L\275<s\231\274\n>\2478\375\014\364\274\326\366\277\274\314\363\010=7\235\205<\"\301C\275w\227H\275h\014x<o\352\371<\301B\211\274a\224,\275X\233\376\274\201\331S;\014P6\274(\233\016\275@\203A<\275k\330<\330I\330<\0061\002;\312\262&\275\265\265\024=u\025%=\205\202X\275\240H,\274\250\232\216:\364c\207<w\014j<\322p|\273\177\243\020\274Oz_\274\310;;\275\303\017\241\274yt\363\274\354\014\030==\022V<\001eZ=0h \275\343\307$=\003\3209<\036\034l<f\021\311\274\212\243J\275\340\355M\273\276\272\317\274\236\377\341\273\237\031<\275\245\232L\275\222.\\\275Q\005\244<\201=9\275\266\212\036<\3039\333\274\315\202\332;\313\372\317<\315\337>\275r]\037=yN\001=O\206B=h\232y\274\333\367 =di\331\274\255B!=\273\300;=\004\2141\275=\246\t=t\253\t=y\227\021\275`\362\367<\372l8<\240\300\365<r\353\035\275\327]\036=\034\246\037=\341\347M\275#\351\255<~\217S=bH\265\273\225i1\273\224}\022\274\253\2779=\301\200Y\273\355!\267<+\220b<\334a,\2738\200\002=\204r\246<\335\202\273\274k\003(\274\206\343Y\273\033\022\200\274\224\303\004=\313\250\321<\202\224\275;?\335\002=\0025\357\274~\001H=\242?>=*\345\'=\303\307\277;K\257\347<%CL=\372*\356\274txV\275\244L\322<\220vG<\206\265R\275a\341\246\274\373(A\275\342\224T\275%\377i\273\302\267!\274\277\213A=\206\336\303<\222\312\317<\215M\014=\027\265\302\273\240\025\003\275\232\251\367\274\272\216\342<\017\244\322\2745\250\201<\270\230\325<r3\t\275\001\024\002=\331\226\026\275;\305\027\274>z)\273\227\034X=\351gN=R\006\356\274\236\330\335;\271\326Z\275\205$D\275\332\224\037=i\335\332\274\254RK\274\334U\014\275Y1\030<\342\0322=\216\304\204<|hC\275N\216<\2753gt\274_\312:\275i\000T=\201\314\267\274(\247\365;>\257J\275\227`R\275\262qB=\262\373%\275\200\005!=\355\273\254\274\363G\344<q9/\275v\332q;\350r.\274O\273Q\275\220\255J\275\274\367\034\275O^\302\274=F\215\274\355\261\n\274\347\355\345<\303 \316<\372\013B\274x\262|\273\316]\365\274\326\233\006\275<\274\257<.\363l\273\277\262\341<\347\224\014=\243\003\277\274O@\004\275\313L\372<._\033=m \031\2752\0229=\177p[\275\225P\207\274L[F=\245\027\232\274\200[T=\201\3248\275\257\3022=>\261\303<\306-\016=\272\323I\275 \352q;\241$.\275C\342\025\274\364\252\200\273\026M\314<_;\003\274\251n*<n\376\242\272\013\251)=IeC\274\007\273\226;\346\273y;\327\0368\274r\001\341;\342\270\256<\336\261/\275\345\321\310\274\374u\320<\346@\034\274\201\354\246<K\364>\275\320A\301\274E&.=Gv\304<\220 Z=S\327M=\203Ri\274\347\342\034=\336\001!=8\024\'\274\021\254\004\275\325\177\003\275\333\371!=\004Z\225\274\2614=\275\370\266\315\274\327\356J\2759\233\270\274\331\322L\275\233\213W\275C\2040=\360GI\274"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
