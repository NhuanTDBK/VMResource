node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2060
          }
        }
        tensor_content: "\251g\003\275\322\035\373<\317\026\037=j\231\230\274,\242\335\274#\363\010=\317[\274<\311_\216<\314\302\271<G\317*\275\223@#=\370k&\273659\275f\373\032\275\364L\233\274g\245Y\275-f\277<\221\351?\275\374i\006\274\244\207\006=\315\234O\2755\3555;\312\223\375<\363\235\t=f\352\213\274.\0241\274\204\341\037={\257[\275u\022\022\275\344eM\274\212j0<\303\016#\275PTM\275\201/\262<\214\272_;\275?\333<A\207\031\275?\217>\275\201\205\247\2727)s;\272h\t<P\302\220<\202/\313\273%\335\037\275X\310\002\275\216*\367\274\223T\371<sp\267<\005d);\261`S=\225\250\315\274\361\210\311<\006\330a\274\365\203\346\272*X\363<\362\000F=\313\016\223<J\333\316<x\274\200<u>T\275\000I6=l\200K\274\224\306\337;\312BC\275\242\244d<vK6\275.\006\024\275\3257\004\275~r\304\273\300O?=\032s[\275\211)\361\274\251b\033<\364\233l<\365\365(\275:\351\263\274\366k\234<\300\013\217\274f3\260<n\355D\275|L9\275c\014A=<\343I=\217\307\234;s\216\327\2729\357/\275\315\306\344\274\350\342.<\220n\375<\nW\305:\347\372$\275\352;\375<\256|\013\274\024\000?=\362|%\275zP\021=\374\273\032\274W\036\222<\023\217K\275[\356\000=\3263\260<*\2407:\n=\036=_\240)=cjN\2753B\032=\2254\025=\020,i\272\262\221\301\274\n\276/\273[E\'\274]\243S\275\345\267\033<\213X\251<\302/u\2744\232~<\372g\355\274\373 \202\274\301w\264<F\257\033=Z\030!\275\273x\301\274\003K\205<\316\210\006=/\267\307\274\353V\272<\3207S=\370\224V=\324\353$=]\214\204\274\346\231u<\032%:=\313\207\315<yo\241\274\367\245\005\275\214F\004<\\\331s:\231\205\002\2757\2553<\254\2510\275D\216U=R\003\r<\006\"A\275n0#\275\377\026\274;\227\210Z=\207\017Q\275\260\317#<\221m\032<|\355K\275 \305t<\332\t\010\275\231g\257<\036Y5=\021\253\017=\371\005\271\274\346\207\216<\260\\\206\274m\324\307\274O\275B\275\034NM\274\2267\225<\3461@\275\222P\253<\027\270+\275\230<\335\274Q\022\033\275~ \257\274vK\211<\255\204\037<\375\344-=\206\247\023=]\232\314<s\344.=e\241O\274q\0034\275\035\032<\275\026\021\350\274\235d\377\274\235\261\023=9D9=\345\227B<~\375%<3\315\242<\206\001\202\273C\224#=\005bT\275[8\372\274\013C\013\275\2513\016;\2208\024=K,\321<\234\344\320<jF\270\274-@\375\274@\360\026\275=\334!\275\225\004\037<\322\266V<^\332O=\371\236\223\272\335k\355<\236\204\030=\376\357 =\313\325R\274\370R6\274\252\277\203<l\247N\275\267\220y<|\242\270<X\006\020=\326\376\022\275~\'\245<o\010\257\271?\332\242\274\312J\333;X\024@=w\233Y=0\374P\2753\256\300\2734\211\n\275\247V7=\317\211\032\275V6\020=\350\024a\274\003P\027\275F\355\224<WI`\274\3403&<\254\037\026\275&\356\032\275\342\004\266<U?C\274>\256J\275\021\343\252\274\2040\201<\223/\026\274Fg\026<\207\033\021=\0008?=\227\335(\275\335\205L\275\017\204\n=\3270\203\274.\312\r=m\305\242\273\211\301\n=!%\271<\2315\316<\323d~;\nH\"=1jV=\0170%<2\035!\275\r\347\'\2751`H\275\314\332%=W\247\307<\022\344\350<\234\246W=\312uT\275\317\303A\275\005,P=LEl\274F\260\313\273-\252\005=\341O\021=*\006\304<8j\344;\027-\277;\250\343&\275\345\\\356;bD0\275\027\356\217\274<u\223\273\275\022)\275\340\221\367<\007\254\370<\364<E\275^\252!\275\240\253\335<\037\0108=\313\261\234<\335LN\275\\\314W=.\351\002=&\000\364<o\356\036=\022\265M=;x\006;\246@\205<\273\357\246\274O`#=\347\316\014=\332\354S\2758+\255\274\363\335-=\006\251H\275\272Y\311<b\364R\275^\301\021=g\003\277<7k\337\274\345 \021\275b\216\\=\24703\275\363\376=\275\021t\214<(ZC=t\312X<\340\270C=\202\260\346<\3734\273<\275R\021=\204\240\243<\277\266\231\274\246\206\251;\020\256\220<\306\\\355;\325\'\267:\343\213\014\275\333-8=tS\373\274#\205\26395P%\275\360\305M=\361\242\357\274#\000\234\274Bh4\275\223\t\016\274\006\224\025\275\'\261l<\004\320\035\275\252!\361\274_\274\313\271\001\335\010\275\353\274\017<r\245\321<\203\332\245<#\261\022=\013\356\026=\357\266@=\215\0204\274\312\274\275;\314\325\262<\204\003\320<\300\352\217<w\313Z\271\037`\006:\256o!\2733\226\023\275\256\'\016=\0364\007\275\356)\321\273\223\2507\2718\344\035\275\030~\343<A\243\023\275\233nr;\362\326I\275\337W\002\275\326\262Q\275\205\320\266;\032/\322<\314#\n<\205\263\320\274f\375g\274\357\206C=\332\265\356<t\375\017;\223{6\275\r\034\322<\267a<=\266\335\022=\362\271\231\273+\315\257;\\\370\022\274\005\241\006=z\371\252\274\327\005Z=\205\257\343;\333\2148\275\306\215S\275\023{\264\274\\0\255<I\300Y=\3639\236\274\2374\246\274\257\326=\275\366r\322;\277\220\243\274\224\256\356\274/\034/=\266\344,\275\027\337\327\273=\200\022\275|\223\340\274\256e\"\275 i <\350j\366<\017\037H\275\260\216\376;A\364\000=\261\277\355<5\324\306;,J\2458\321\234&\275k\203\002<{&V=\347N\255\274\022x#\274\003\265I=\210\346\242\273S\333\032<\262\260\005<\366^ =2J\021=\000\206\027=\370f-=\352W\016=y;\215\274K89\275\322#\242<:/[\274\274d\303\273)\2477\275]\305\030=\020n3=\277\222\\\275\2365\002=/\266\331<-\203(=\025\021\032=\243O\354;\301\265\274\274 \200\206<sg\032<3\\\353<\311N>=N}.\275\346\246+\275\326V\376\274[w\355<\347\231\206<\264qU=~\302\200<t\366-\2752\303\372;\177\336\355;<\333g\274\317\275M\275m\234g\273\314\247\240\274\356IP\275@2\005<\002b)=vq\222\274\210%\023<\255\216K<\311|\017\274\205\231W\273\"A\001<\344\030O\275\257U\307\274X\264\003\275\273\201/<\\\234S\274\242\236\257\272/\265\013\275\0073\031\275\317\250B\275\326w\323;Y\325\033\273\246i>\275?5\004\274sI\203\274\305\275\342<|\021 <\247z\037\274z\014\005=\362\324\013\275\r\247b<\327>\360;|\304\031=\363O=\275\372\r\261\273\376\370B\2748\312\352\274{}\206<d\264L\275d>1\275\033\371U=\350\346Z\275\357\rb;\003\275\021=:o\'=\027\027-\274\321\364\266<_f\325;!S\207\274\320\244\023=\366\347N=\357o\270<\004\345\3369\267\314K=Q\211\346<\250`W=/\314\364\274Q\200\225<\\\227\253\274\211\270\013<\277\177.\272_: \275k\203\025=1\020\254\274\210K7\275\002sG\2751\250a<\232\3478\2757\275.\274g\373U=R+\271<\'\351c<\350B\232\272\032U\005\275\234\'\005\275IU\307\274/\235\327\274\217\317Z=\273$\016=\251\324V=!\235\025\275KU:\275\213(\306\274\344\337!\274\312}\317<\256\023\237<V\334\245\274\210\317\033=\373\0067<\311\305\020=\370o\014\275\025\336C=\375\233\260\274\203\303\265\274\004^\336<C\270M<\2111A<\357\330\211<\037\3247\275\244\255~\274m|\"=\361\224\275<\0267[\275{\210T=K\254F=\\\324\010\275\331\205H\275\210\215 =[\272\346\274W\206\240\274\335/\374<Q8I\275\213K\362<V4\364<\334\310\346:\216\233\t<\263\016\"\275e\305;=c\270\033=\341\305\242<\351\363+\275J\210\250<\025}\\=95\252\274\362\237\217<i\252\271<\312>><\270e\331\273\367\356\312\2729\234\301\274\207\344\200<\255\321\276\274\027\327o;b\334:=\303\025\250\274l\206\035\275\005#Z\274\034\237\220\272\256\276\362;\347\304\372\274\322\261)=\016=!\275H7\223\274\t\221*\275b.C\275V/C=\313\036\000\275\330\377W\274D\363:\275A\322\004\275-\3343=\256\326\230\274\251\275\374< @\004=\215\223\003=\207\252\"=\002\201Z=\310=B\275\357b\311<\034\032Z=\355\327\211<\256Nm\274\252\363\345<\331G\002\275\245\222*\275\374\230N=\214\237g;\027\226O\275\233\305\207\274Q\343~\274\254\300\014\275\221N\007\275\2243\252\274\035\317\356\274N\204\027=>\335\025=\360\001\026\275A7:=\303D\037=\264y\023\275\200\353\224\2746\342\307\273\213\255\343<c\237\005=\230MD=\364\275\365\273\005UF\274\330|\274<\020\000\212<)&\374<\330\256\344<\347%K=%\323\n\275u\312\260\274|\337\"\274\023\241\022\275\367\016C\275\277j4\2752=\000\275b\361\302<8\217\221<\331sN=\353*\207:\265\036\247<_\311\324<\275\243\"=\014\033x\274ss\363\274\330\010\'\274\237\345\016=q\233Y=Q\265\004=\222Y(=\325\3507<\257`==\267\330N\273B\215\265\274\376jW=\343\n\016\275\2569\014<\364J\220\273O\024g\274\337\343\307<\240=\377<5\"\311<\326w@\275W\277\265\274c\313\304<v!C<)\301U\275\3636\322\274\313\353\306\274gy,=\245\020\026\275\243\361\026=?)J=\235\233|<R\362\243<\004\251\313\274\356e\366\274\204\223\244<\377\324+=Q\356\344\274AcA\275\357\033:=q\004\035=-F(\275\334yU=#\221\037\272M\250\252\2744\037,=SO\340<\253s\017<\021\224@\275\032\351\027\275\267m\001=\221\315\217;\\\004\224\2746\231\346\273\r\212o:\270\0239=\200J!=\254\314\264\2737\002I\275\2013\030=\257\002T\275\376j\322<\001\317\265\274 \032\361\273\213\331=<\275b\377\273\274\273\000<\316\354\006=\370\262\266<L\273\276\273\247\343\227\273\206\346\350\274\257\337\005\275d\204\016\275\020{\330\274^,\031\274\030\020L=\337z5\275\362\002>\275\264\3058\275)\255+<\317TY\275sGF=\315\n\267\274&\375\004\270\313\323y<TP\033=\003$Q\275$\231F\275\231\364\217;\301\376B=S\206\037\275\250\355s\274\346\001s\274\255]\002\275\343\361?<^\227\242\274\245\3037<\321\266D\275\240QC=\243l\354\274=1)=\264\001\207\274tE\325\274\223\213?=m\262@\275\331j;\275\267\201\376\274;\274f<\201.d\274vk\007=q\003M=X\253,=_\322\230<\320\312\325<\345\361\023\273[\200\232<\223\315[\275>\226\034\275\005\274\354\274\310|V\275\306\031O\275\376\341\362<f\311%=\032\231%\275x\242\341\274\232\007\021=_~\230<\rF6=h5\262<\032X\001=\275\nL<\304N-\275\032t\021=\030\272+=\177\200\014\274-~\371\274\2465\001=\363^\032\275\254\204,\275P:!=I\034\336;P\016\323<\312\3223=h\260\324\274P\276\016\272d\r\234<\014\002B\275\341(\323;\022.\021\275\313\034\370<\337|\026=\324\367\241<0z\212\274#\005\276<\002\372\n\275\334\247\234<\204\232\226<\274\262%\2758c/=\022\036\343\273\230\342&=\n\"\335<0\273@\275\n\257F\275\316\344\316<\005\241Q=\241\261\214<\373\215\314\274\220\333\026<\360ol\274DkO=Z{\275<\353\305a<\033\310\317:\' \244\273\346\034C\275\375C?\275\027\353&<\307\023\021\275y\023==%\246Y\275+F\207<\234\236\257<e\257M<\204\326\271\274B\312s\273h\334\315\2745jQ\2757\031y\274\264\005\331\274G\204\350<\007/A\275b\372\035=\356\3427\274\263N0=\314\221E\275\335]\305\273\276\256\355\274@8\313\274*\252\002<\353\376\"\275\216\201>=\344b\010\275\251q\207<\265\rA\274wf\305<\031d\357<\021\027<<\276\243\'<^\323P;C\375C=@\201\200\274\277\230\005\275\306\223\255<\231\317N=2\225\027\274\332\340\337\273\244\nQ\275\321+\301<\227\343_\272\303,\312\274%d\"<\325\317\010;>[\365\2749\377\010\274@y\333\274\204V\230<\257\310\026\275\021o:\273\326U\\\275V\330P=`\347F=\232Ag<L\306X\275)l@:\203\226J=\222\021\311\274\314\323\006\274U\000\023=\205\207\246<\227]:\275\311\"D\275xq\315<[\301\260\274N3\367\274\007_\'\274\265\241\277\273v\007\035<\005\336\234\274\\\211N=\257\331\255<\362\273\024=\261\003U=\027\030\333\273\350\r\\\275\343\251&\2752~(;:>m<\363p\010=\303<\322<C\245\"<A:\224;\330q\320<\355\322\234\273\303/G=\222\024\364\274\246\352\t=\3706S=\003\217\t=\327o\t<\252\315\007\275G\2312=\347\2201\273\327\304;\275/\237\365\273tp.\275\026,\026\2750\r\017\275aGs<{\332\025\275\034\250\230<\000\273X=\324\323\244\274\361\007\317\274\235KW=\033l\\\275\264N\350<\241\357*\2758M\030=]\0326<\272E#\275\267\373\002\274\225\025>\275O@Y\274\255\3207\275|\230F\275\344D~\274\214E\273<\016/\243<\316qn;\021\246\370\273\221\373\352\274\2428\322\274\272\267\321\274\253\247==\305M\346<\3242\207\274PJ\000\275\365%C=#\032\375\273\302\206\033<\\\276\014=n\005!\275\320\234A\275\237s\256<=\205/=*\306C\275:*V=\263#\274\274\2669V\274\246\223\276\274&\234\010;\022\177\265\273\005\343\266\274?\306\r=*U\363\274\337\233\224\274\204\306.\275\305\374\206<\363\314\233\273\242\364\035=g\276\224<\211\002K\275\204\243S\275q\222F=\273mv\272\276\302\273\273\262\017Q<\010\000\034\275\377\304\202\274O\232\235\274(\001\300\274\362q\357\272!\"\252\274C\376P\274\305\271X\274\177\344\241;v\341\243<p\304\323\274H\327\323<\006\260\250;\270\177V\275\363e\361<\001\n\213\273\010\311%=\321\266\225\2743\255(=p\302\331\274\374\323F=Z\254\325\274m{\017\275\323\346\275<\204\252\226\273K\035\321;i7\361<\367V\030\274q\t\025\275\303\005J\275\327\324\006\2757Q=\274Z\302\362<chR\273\3726\036\275v\317\271<\342\215>\274\324R>=\237\311J\275\306\035\016=\367N\236<eO\251<\025\365B=\257 \014\275\232\332\337\274\'\337T=h\252h\273\307\177C\275\306S\023=o>\267\273\210\343\334\274\206s\321<s-\014\271\245\323\357\2747\004\201\274m\303B\275Z>\003<\314\354\t=+\202\"\275r\215B\275\231\377\032\273\343\023\271\272\035\364\020<\"%\347\273\013\351,\275\317\030@=c\241m<>\230)=\311\030\203\274\251\246;=\332X\004\274\013\315\204:\1778(=}\337\025:\354\036\273<u\375\034\275\020\257\032\275\251qT\274v\275\356\274\200\334\266\274\232c\265\274\245\271@\275\330\006\364\273\022W`;#Q,\273E(\204;\032\224 =@\035\030\275\330d\356;\205\253\026=\006\021\352; \302\021=\001Q =)\252;\275\316i\237\274\017w?\2752\3319=8\272\006=b\360=<,W\030=\271\340\343<\020p\027=X\342\345<\313K\031\275\301\360\031=\255\254\022\2758\204\303<\225\3308\274V\246\201\273\252y\276\274\014j\032\274\351Ob<\303\026\320<\263\267\234\274([.\275E7\263<\016\205\366\273\335U\377<\016H\002=\014z\273\274\241\3128=\366:\001\275\357\335\247<O\035!=te\322\274c\341\226\274,U\225<\005\203\227<\3413\243<\224\301\177<\357v\256\274\037i~\274\346l\022=d=S\275\2271\003\275\317/\243\274=?\005\275\327G@\275z7\343\272u\3378=\035\007(\275q{\312:\216\273\315<\346\230a;\013\202/=\333\021\017=\272\002\310\272\274\020\232\274\036\310\323\274\371\330i\273\333[\240<\267\217X=\206\264B\275\277&\316</\222+\275\334a[<\001g\350<\303\303W=\260\223\356<\323@\002=\366}\t=\031\337\232\274\364>\010\2749\361\323\274e\2147;6\246==\304n\036\275/\236\375\273m\326\203<d\210\223;\030mQ\274\022\336\361\274\342\322X=Q\253\254\274\303&\210\272\343\250\305;\233r\346\273u\000\263<m>e<n\327f\2739\342\024=\247\037O\275x\177\222\272\017\274L\275}T1=\360\002\371\274\273\326*=o\001\223\274\3531Y=Ke\336<\251=*\274\031l\302\273\335ND=-\017O\275\352q#\275\257\242M\275\356+\210\274\233\271\207\274\2131T=pV\242\274&\034p<a\267\345<\032\000(=5\034\024=\347v\257<\023\314O\275\333\034\367;X\351\026\274.\356X=R&\246\273\034/\375;\357!\203\273\257\214\365<\346 5=\320\0303=\314\017/\274Ix1:\371\3457\2754C\002=K\324\233\274\303\035R<~gM\275\313\302 \275\245\257C<\2178\226\274KQ\341<\353\273\235<\201np\274\036\030\217\274\033\3237=\254\304\253\274\345\331\031=\300\200h\274\234\306\021<\344@\022\275\320\r\343<\243\251\006\275\025W\327\274L\333?\275\'_/\275z`@\275\002ZA\275\225\221\263\274Z\276\374\274\207\002p\274\352U\303\274\032\306\341\273\333\363\275\274V*&=\267\327;=\346\326\014\274\202FF\274\032]\315<A%\266<Co\022\275\250*\343\274\371\336\232;\321\371\003\275\347*4=\225\344\027\273\004\227\304<\332\344w\274C\262\243\273>{\326\274\307Q\302<\276\225K\274\"Vz\274%\017\203<\367\372\313<\037\221P=l\013M=^\323\363<\3342w<\313\\W=I\243F\275\2557\213<\271;$\275)\322\217\274^\220@=y\336#\275\332%&\275\207\206\246\274\036\205\016\275\220\371\001=\177<r<_\032\354\274\260.Q<\274&a<K\2545=\257\250=\275yfW=\344\243Z\275\177\262\'=y\300\300<T\347G=\370\001/\275\307\024\277\271\275X\261;\216\r\347<\255\246\013\275\247b\305<^\373\324\274\321H7=i\361\006\275\2668\215\274\005\352\016\275gi\025:C\030N=\036\324\217;v\316\'=\237B\347<\032(D=g\347\031=\022\034P\274w)G\275\307T\346\274?\257\307\272\363\t\242<\253\031?=\333\245\r\275\274\215\334<^\374,=?N\220<\037\205\'=\217\265@\275h\365c<\343\317\r\275\322]\304;\010\013\327\270\022_b<\271\2759=\334\201)\275\352\316\344\274\277\312\370<+\0245=\0248\271\274\231\035\344\272\355+\353\274s1G=)\207E=N[\t\275\364i\352;\246\026\244\2731\260\256\274]&Q\275\306\302 \275\216\262\316<FW#\2746G\210<\303?\220\274\356\371\253;\310\204\210<\006\247\223<\260\372?\275Q\337\372\274\363p\203\273\347\227;\275e:\'\275\333/W=\214\301\220\274a;\222\273Z9\313\274\216y\340\273\237\256\224;\021\225\270;\327\250\263<\236p\032\275\323\023\017\271<\217\230\274\031\017i\274u \374<\250\307\025<\300\312\315<\331\241\001\275\364\321\302<+L\013;\355m9=\316*\233\274\023\365\334\2710\353\034=4\315\001=\204\251E=f\207\362:e\314\331<V\010\360\274Q\3148\275\207YI\274\035\362\304\274\016\253\033\275@\333\271\274\003\3771\275\2123!\273\264\326\347<\245\332!\275\324\344\262<\334\365:<z\362Z\275\312\374\256<\224t\022\275N\272\031\274\2368\223\274\276\373\324<\022\353N\275_\000?<\013\023E<\177\\\177;\003A\024\274J_/\275\204\306\212\274%\362\025=\321\221\326\274\267\233\257\274\222\201\365<\250Z6<\326\224C=\350z\214\274\347\036\036\274\266o\220\273o\r\023=~\230[=\033\275\005\275\320\254\264<\273*2\275e\313\022=\022\026\242\274\031\336\035=\344\212N\275\006%W=s\3618<a\330R=\035V\t\275m\177\'\275\372_\314<\024\310\344\274\333\346[\275v\213\n\275V7\357\274\314\370\301<65\t\274=\000O\275\352~\223\274\013\332A=\020\346!\273T}r<+X\375\267.\203\003<\344r\327\274*\3524\275\211\372\246\274\007\221=\275S\305+\275/\335U\2749\'#8A\033\350<?\266\274;\352\257 =\324\000E\275\271\373\233<\374\223h\274\312\246k\274*\021\'\275O/\367\274&\200u\274\276>\013\275\305\310\203\274L\310\035\275~ZV<\020:\332<\306\000\014\272F:\207\274yJ\265\274\2717\037\275\302\377\226<\312\305\236;j+\032\274\305\231w<\005P\345;%\021P=x\331K=\222\370\222<([\213\274@\320Q\275j\002\273<{<\007\275\267o\016\274\201D\035<\300I\034={d,=\333_\364<\207)\001\275\331S\'=\016\250\r=\360\032\n=\014HI=\000\344\002=P\0203\275\207o\035<|\300\230;\030r)\275\355\323\025=\302\032q\274Q\231\275\273t\230?\275\205\274\016\273\036\376\023\275:\252\253<&;)=\350\210\315\274\300?)\2759\276N=\213%\357<\361l*=\300fW\274\005\037\246\274\204\005\036\274\3735>\274B\307\036\274\014=\352\272\224R\356\273\007pU<y\237\030\275\030\226\374<\034mn\274\204\250I=g\221C=9\340\213<\035\263;<\023\376P=Gl(=Yt;\275\2675\226<\307\242\321\274lL\303\272\301*\255\274\331Y\242\274\212\000T\275\207\260T\275\372\247X\275\242\274&\275\363\255\230\274\350\217m\274\272\027\030= \361\033\275\367Y+\273\245\336&<\025\235]<\352/\303\272%\351\031\273\345\315\377;\n\3058\273&\333\006=\376.\321\273\036\205$=\020\256[\275\200W\342\274p6K=e\r\005\275\356\270L=7\260\352\274\264\010-\275\036z\034<\315\177\376<\232`+\272\335\246:\275W3N=\257J\"\2737\210\006\274B\340\216\274f\265\341\274\232\361o;,G!\275\241B6=\377D\236\274Hs\233<\177\225\005=\313+^<\341\035\001\274}\203\030=6\035D=v\203#\275\277\233\'\274\260\0035\2751$&=\355G\361<\265g\337<\326\rG=\177\220\013<w#\341<\217\311V=}w\232\274\010J\241<\2357\367\274]D\260\274\204\274\023=\371\370\031\275\310\316L=AL!<\320\223%=\337\3144=\257\310\215\274\304\343$;0\274\254<\"\221\007\275\016\333>=h\024\376<\233\205\002=G88=:\244\363<\322\302\312\274\347D\305<\220\256\014<\255D/\275\2505\020\274B\226\362\274\223\0137\275\025(\221<\177V\001=\362@\220<R\221\364\274S\355)\275\204GI=\310\013\337<aO\321\2748\367\354;A&)=\337\'\001\274K\3243\275gc@\274\352\204\302\274\001\021\206<\354&A<\335Q?\274\261/\206<\006\247\302<\246\356\250\274lS;=x;<\274\240\372\366<\347\017\027\275\301*E=\255\000\241\274\351\264\033=\363\357\252<)\323\257:\021\255\002\275\004\356\355\274\353\242\023\275\350\323-=\007\220\240\274\350\364j\274\304\227\247\274g;-\273\352\370a<^\"\243<\311w\340<\314\230W\275\327\315\241\271\201g\247<\021\345/<\374C\322<\235`\"\275(\031\t\274\252\236\004={&\345;\205.\303<\327\210\337<a\346\372<\261\324Q=\233\324-\274\241!\221\2747\2326\275\354\215\337<\204\020\017\274\031Y\353\273\372N)=\267\274O<\322j!\275\000\270\340\273\024o\306<\307O\020\275\242\333\221\274J]M\275\037Dr<\372c\024\275l2.\275\342F$=\325\255S\275K]\214\274v?#\275\016\272\260\274\000\376\211\274l(\252<\364\222S\275\361\342+\274\306J\"\275g\322K\275\332\233\327\271\030\377\"\275B\211\252\274\306E\356;\343\346\224\274{\201\273\274U\262\272<\263\256\000\273u\266%=pb\005=7*K\275\325\006Q\274O3\306;\226]\023\273\0071D=0\362\033\275*\255U=I\030I\274\200\344\221\274\351zX\275\362s\027\275K.\200;\005\376>\271\334\273*=\n3\247\274\324\370\003\275i\204I\275I\265\242\273\352\'%=\303\207F=1\340\234<\330\267Z\275\2271q<\355n\251<\323\214\345<@\0109\275\314f\r\275Z\2622\274\207\347\006\275!\363\016=6\002\033<\r(\304\274\221\255\322\274\376\336V=\342\305\206<\252a\237<B]f\273q\322K=\037\240J=\204\033N\275\016l\033\274\334\351\"=\027*\277<V[\t\2750\355m<Q5\273< \260\274\274g\276u\274\233\'\220\274\313L>=B\222*\2753\300*<\372\256\352<H\251\033\275\337I\364<A\300\331\273\242\224r;\024nE<|N\374<\203\032\365;\225H\027:a\277\304\274bFL\273Hx!\275P\264\360<U\204\033=\311Z\340\274\240\n!\275[\231\037\275vs\351;\'\230.\275\211ZJ\275F\0226<p\021\352<\336\372*\274\257\014R\275\254\204\014\275\207\312.=k,\331\274\001\374o;\230\306\275<xS\270<q\264\341\274\360U>=\371v\336<\033Z,\275\022+\234;J\242\024\275\213\2123=\355\336/=^\221\257\274\310V\023=\375\235\001\275\2253\032\275n\252\241<\267KS=z\3342=\005\014+\275xQL=z\206\342\274\334S@=-\337\216<e\366J=\370\211\"\275\025\253(=\004\356\340<i\304\301;\332\013\327;\247\361}<>\007\365<\327\335\340<\252\2619\275\343/.\274\251\260k<\234w$<\010\026\313\274\253\270`\274\376HQ=v\241E=vV\010\275C\2571=\314d\034=1\343\275;L\2031=\234\200\022\275_F\037\275\231\331M;x\034\252<u\260I<\331\2333=Q\337\024=\274\024\006\275\036\245\035<\t\036x;\010\020K;1\252\257\273\2466\\<Eb@\274\273K\371\274&}}<\035\371H<\266\210\262\273\250]\235;\r7\021\275g\265$\274.(=\275\357.\305\274\0355\203<\3527\350<\300\207\274<l\345\271<\356\370\326;\323\325\326<\271MU\275tO\337\274H\217\007\273g\322\210<\033m\027\275\035\307\252\274\022\'\220\274E\336\036\275\210\325\212;\001M\267\274\221\233\237;\315N\251\274\271\260\364<i\271&=s\252\n=\236\341O=i\365\026=#n)\275I\221\236\273\231\013\310\274\264\217\002\275\002\207\332\274\271NE\274 Q\220:\316t\004=\306w\255;\252\203\212:N\261\021=\351\205H=\206\227\233\274_\t\227\274bfC\274\374[\002\275T3\247<\024D7<ZS\234\274R\036\247<\304:1\275\027\242\270\274\331\"\022\2751#\026\275,\306\206<\343\221D\275\334\025\334<]\331\256<\204\204\010=PFW\274:\361\033\274\220\316\037=\214\305+<>\346h\273\333Q\025<]E#<\255\014\255\274\323bM\275i\232\322<F\356\027\275d\001\267\274\323>-=t\3076\275\320 \364;$\205\255\274\322\227<\275\177\030?=\240\365\033=\212-\335<`\'\332;\226/\007=\313\3074\274(O3=\341\3377\273\203\371\252\274\321\355\t=L\363\205;\004C\034\275\231\222H\275X\305\350;\274\027\256<T\276\201:\321$\201<\307<T\2734\341\361\274\273\247=\275\371\2169=\264\020\207\274\001\311Y<\300\\o<8\034\372<NR\257\273\030\224/\275\007\002=\275Q\342\031\274\376U\306\274g\326><\203\276%=\374\364\210\273\250a1=\344Z(\275X\224B\275*\026\331<\355\373\240\273\217\325G\275*\255R\2751I3=6\023\331\274\276+\036\275\343A+=\270\007\301\274\254\0366\274\336%\342<^\013\245\274\232\277.\275\362\340\351;^\0261\275Q\334R\2751_\033<Ac\204:?\337\361\274\237\225U\273\304\376Z\275\302YE=/Qx\274\260\360I:A?\301\2735\201\241;6f#=s\001\034;\354\275\213<\251j\343\274\265G?\2751\205\017\275\272\226R\273\330\273\357\274f\020p\273\355>\031=\345gB\275\251\0201=\356>\024=\001Pr<U\2117\274\036\335\204\274\363g\375\274U0\333;\213f\365\273X\266[<@\3059=M~;=\331\245\274\274=\317\010\275\225\273L\2735\023\240<I\247?=T\232\275\273\354\323\321\274\354\252K\275\327\005\322\273N\223\260\274n\037\027=\306\366\321<U\306\325<\326\344\244\274\220\330>=\331\002\215\273%/!\275\273\306\000=\2270\034\275\265g\032\275\021 \006=H\273\"=M:K<n[\270\274\212G+=f\202D=z\355\024<\273\307\316;$\372+<\307:r<T\326\375<\3446\313;U\2661<%u*\275\335\344\305<`u\220\274\255\232\003\275\212\3716;\'t\014<>\3037\274\245\007\303<)\323\t<\256YC=\310\037\217<\266\230\357<\311\232\360<\363\336\010<v\232R;\267+Y\274\010<\261<\203ZD=\353\007\022=*\367\364\274\360\223O<L;\026\275\365\351\206<L\217T\275\312\206\025\275U\227\037\275\367\377\232<)c\322\274\322\030\311<\325n`\274V\014\372\273Q\3460<\274\262\022<\274-\206\274`\317\017<`X\306<\202(-=Q\206\020=\252\227Z\275k\237&\275\244X\250:\367\303)=\37745=\247\330\226\274\223b\007\274\265\005\350\272\010\337\'=\201\326\266\274X\372\034=\n8\025=\2567\031=o.\027<kE\334<\245\247\032\275q9.\275\231NQ=\033\236\016\275\206\232\264\274*\366?\274\267e.\275\375\361\007<\206\236\227<\242\310<\272 \220\216\274\226\0368;\032.X\274)\002\020\275\337\334\333\274\3676P\274\365\0358\275\352 N\275\245\2374=Y\024L=\336Eq\274\005\341\r=\301\222\271\274W\002\000=\304\352\252\274\001F\343\274\237\314[<\375Y1=q)\253<B*\037\275\266*L\275\013\365}\274\356:5;\177#\253<\363\207:=\r\262\202<\037\024;=rT\006\275z\223\021\274\027\373Q=8\364P\274\367B\315\273Rb =\213\037\034=\371\233\354<\230\213\315;\317\226S=\220\206\323<J\264\020\275\341\270;\2759\n\322<\310\370@\275\370\354\374<\332\n3=oy\376<\304\310n\274\207~-\275\036\323\r=^Y?=\210& \275\026Q5=\"}<\275]\326F<\271\035\\=\262\014C\275\263\207\004=\037\364\203<\314{=\274\265Q]\274yR\006<S\013\024\275\230\217G\275\350\"6=\016\033\273\274\372(!=R\251\004\275\374\2355=\342\374\246\273\360P\230\273\353\215I=\034\271\366\273\233\t/\274\326 \313\274\306\235y\273q\";\274j.\270\274\332O\000\275\032#T=\201A\265\274\313\274\253;\200\204/\274\315bE\275\264\354~\273\252\231l<\362\233\344<\361`P\275$T\233<\025c\t\275_.J=\020\006*=v/\307<\220\2452=i\201\250\274\333\234a<St\370<\005\211-=\306\025\376\274\022\357\010\275\337\025\224<\245d\220<\260\351*<\353{S<\305\373\027\275\356\371\t\275\007V^\274\035\363\251\274\265l/\275h\215\260<\360((=\306U!\275\225o\277\274-\275\002=\214\3303\275\377\311\\<c\274\362\274\244A\r\275\323\334j\274\231\325Z\274\300\204\240<\345\020\234\274e\224\341:\253T\313\274\211\307\t\270\231\322><1KA\274\224\371\252\274\365\307\323<l\261\374;J\321\034\275L&\313<\233SJ\275\2718\024\275\275\360\033=\027\365,=C\343F<\317\000&=\321\335)=dB\313\274\230\222\217<vc\366<\312\037\305;\\(\026=\214\024G\275`kh\274\250|E\273\215\321\333\274\326\306\344\274\254\0058=\324\226K\275ms#=O\0178=\361\271\363\273W\220\330<\200K\361<o]G=q%\375\274\303\217s<Ejs<\033\237,=\363,\214\274c\362[<\367\031N\275\265t\363\273kE\036\275\371\365F\275\'\333\307\274\001\340\035\275AN\r=\377&S=\243\370\r\275\254\343\037\275\271p\'\275\022)\363<\340\306\000\275\031\340\350<j%\354\274\010\337\213<\350\267<=\010\024\013=\230\001\352<\022\213\210\274\360\357;=mW\n\275\261\314\250\272\273\267\034\273\230\230\230\274\023J\327\272\320\376\177\27435\r\275\n\016O=\215c\010<\3519\312\274\200\3624=\010%C=O\201\212<\322\016S=\365\030W\274)\361G\275\212\357\271\274\3644\220<\023n_\273F\231\254\274\367\240Z=y\204a\274\364\227\300\274e\232!<K\271V<\374w%\274t\3139\274\234\227\240\274\345J0=\026\201\355\274\024\234R\274\354\225\244\273\265B8\274\352\346\360;t\003\243:\257\250\350<\21768<\250\233X=\370\3643\275\306J[\275/\321\003\275\256?\005\275\034\3549\275j\030E\275\221\275;\275\225\004\n\274\362{\263\274\245bD\275piI=!<C\275\213\374\020=\222+N=)kl<2\273\341\274\357\334\026\275\207l\223\273\327\\\240\273\206\224\322\274\371_.\275\342\306\340:6)X=\361\rD\270\327\255D\275]\353\216\274\033-\276\273\201\231\376\274\364\177W\275\352\362-\275nBA=\035\215\363\274\252\222\020=\"{\306\274y\027\320\274\207\213.\275\021\240\r\275\374P \275^\371 \275{\001\301\274b\2460\275\213Y\250\274\2464\240\274k\300G=\033]\262\274\240\201 =\324\000\212<V[A=\275\211\033:\270\215\013\275rBS\275LP\227<Bm|\274\013Bs<E\327\307\274\007\302\004;\315q\344<3\343\021=G\373V=I\3579<Tc\026=vf\302\272SHS=&sk\274\327\315\000=\227\361.\275\311L5=t\320>=]\337&;\326\375\265<\352\200\260<\366\345\026<\005\347\354;li\264<\250\235R\274J\010O\275\343c\\=A\342\335\272\260\361\"=BHG\274\266<\263<\246TQ\2756 \334\274\374\r\321<\004\314U\275\310\014\034=\240.B\275!\337\316\274\350\226\222<\004\004T=d\320Q=s\315\014\275)\230C=b\367\027=6\031\215<+\300W\274\262\2571=\214\221\026=w\326\350;\331}\017=[2\r:\335\301N=l\n:\275E\346S=l\037$\275\367i4\275\334\000U\275\026\207\377<ss\"<\313\321\r\2751o+=\257\335\217<*\2737=\344\202l<x7\007\274u\206\307\274_\216\215<\347\337\201\274A\336\036\274\242\253\016<p{T\275<6N=M\317\332:\345gD\275\220h\334\274Z\316N\275g\266\354\274T\233\001=\2424N=d\355\022\275\257\035\022\275\010~\021\275\352\275\222\274\r^\016\275\236\377\352<q{\254<{$\"=D\257:<\375\277V\275d\254:\274}\003\226\274\322\263\375<QL(<\205S\351\274\345\007!=\321\035:={&\025<J}\'\274\374U\323\273\274\303\013=\365\273\030=i\215)=\207\363\327\273\244\331?=\363\322H\275\2319\017\275\017\261\251<^\231\213<=\\t;\346\2214=\245\217\222\273\304\322\351\274\032\321\037=\027y);\013n\002\275_|\031\274,\272\3609\'\221\243<\240\220\304\2746\327E\273v!\031=I\275\275<\010T\201\274\265\022Z=9\177\010;s\375:\274\350$P=?[\351<\023\311K=\356\362%=\371\346\\\273\255\242_\274\273\303\355<A\2566\275\021\376$=C\254\332\274\226\016)\273\330:3=\333b\344<\345\326\005\274\254\\\337\274\223G\031=\341\304S=\035\341Q;\277\266\021\273\377\300\000=\327GJ\274\2544\322;\261\216R\275\214\246J=XA\272<\263&\224<\206\315\"\275\335\364\356\274\036\225\025\275\223\237\001=\'\007\300:\310D!=.\216\313\274\212US\275\265sl<1\326m\274wU\261<\"\353\034=\205\"\016=\343K\031\2758\2778<\020\341\303<\2640?\275t\376\246\274\031\321:\27254\034\274oV\206<0UQ=\027\r\253<\270\213\216<q\005$=\177C\000=\313\250\213<\361\027\215<@\032\002\275A\233\331<\363\311\302<\251^\311\274~\322\007\275b\303\232<E\262\232<\265&\325\274\231(8\275C\251\225\273\372~\320<:\033~\271\245\260@==\333-\275%\000\377\274b\033\234\274\303\250%=2,H\275\331{\371\274(\367\001=Z\362\342\274\033\311\372\274Q\350%;97[=j\301[;\010\377\344<\276\013Q=\333\234g\274|\311\324<\035nS\274\027\302=<\267i9=\023\373\003\275\326\304\322<f\262\r\275\325:\335<(\035\033=\372Y\202\274\031?\032\275VKA\275\2046N=\226\272\322\274\320\266\016=TX\346\274\322\376\242;\315fW<\031\256(\275w+\315\274=V\033=\375\020\\\274\344Y-\275\212 \\\275->\003\275\005:T\275\226}\016\275\260\350\t\275\035[\216\273\203p<=n\n\366\274\353\247\036<\253B\273<\300\372\337\274\236\306\000\275>\001W\273\320vB\274r&)\275W\325!\2759\t$\275ww3\274x\273N\275\022s\010\273\317>P\275\350\311\025\275BZ\004=\202\223\270<\257\307\036<\370\215\246\273DL\037\275\216\346\031=a\337\322\274d\027\360\273\034\035\227\274$c\345<[9\252\273\022I\006\2752.@\274Q\030\313<B\250)\275\372F0\275\005\2775=\211W\023\275\355\333F\274\000V\272<\357\371\024=a( \275\027\266f<\240\216!\275z\322T=\257\n\\<\241\\L\275u\274;=M\367\346<z>\327\274\300\367\025=\305\216$=C\354\'\275F\252J\274\231]\032=\246\037T\275\222-;=|\336O=\023\374{\274<\n\210<\314`?<\023\004\303<Si\377;\036\323\035\275\375\240\r<{\221\347\274R]\204\274\325\016\325\273{\257\026<S\315\002\2756\3203=\370h6=\346\270\273<d\375\'\274P\340I=\027\305F\274q\002+=\320Gd\274\251\362,\275\221\232(=?\275\216\273U\370\351;\342\'v<\021F\347<u<\224<S\2412<\r\016\210<\355\304\366\274\323\037%\275\323\204I\274\246uZ\275\032\253\312<\205\247\010\275\006\317\221\273.q\023=|D\000\275p\275&\274Tg!\275mk\305\274\307Q\220;T\262\t<\271\347\317\274:\026M=M\303\005=|\214\372<\002\251\014\275\254/\035\274\020\262\021\275D\001\010\275(tT\273\274\241\007\274\350\371\271;_4\001=\230Q-<~\024#=z\223\307\274\204\001,=\364\302\262\274\\\226S\274O\340\376:\004\\\354<\364F\257\274\261\016!=X/\371\274\003d\010\2758>Y\274\231\276\003\275\017tA\273W\376\375<l\225\017=\236\220\262<\037(\326;\252R\212\272[d\207\274\352&\373\274iKI\275\330Y|\272\355\241m;\034\370;=\246\244\234\272\035qU== \003=\202\240L\275\306!\014=p\312\254\274j\333\322<\275R\236<\036\333\007=\336a\002=\3325i<.L\272<\326\013<=\036\230\026=v\357\024\273\323\324\233\274a\250a<T\304\037\275\013\027C\275TO\363:\367\350\343\274\275\356\244<\2203g<<\001\031<\021L\030\275\023\0206\275\234U@=\370\034\026=\016= \275\3713\253\274\0252\347<\245aQ\275F\330X=\363\253S\275=\r\036=\337\001\312<\013\232\311\273\274K1< \316W\275\277X\364;N\211\t\274\313\302\304\273\373\211@=l\3074=\305g\370;\215\007/\275\343\017\002=\002\236\014\2741\3020;.C<<\234W\033\275k\371\017:F\027U;\320\207\033\275/=\226<\362\3258=\227\250\252<\005a\330<\244\206(=J\251I=\033\'\337\273b\034\237:\331\237`\274\025\304\317\274\310o\r=\250\207\220\274\227\0204=Xv\226;\336\235\037=\235\222\030<\005\260\277\273&\0004=\221e\344<8g8\275P\265.=\266\332\035\275\177\350n<\364\004@;\226\215L=3c\177;\253<V=M\'C\274@\327N\275\233\234\272;Bq\220\273\031>\225<e\256\002=\315>\200<\220\232\267<\203\3576=5\215\032\275\252\372.=x\252\016\275\245/\014=Q\340\n=7\327z\274\360K\362<\'\027S\275\267G/\275$!\364;a|\002\275\303\223\365<%+\021\275\021\031\312\274Ff\254;o\277=\275DM\330<\013 -=\r\037\230\273\316\033\205<&\032)=\264\177D=\320#Q\275\212\n\034\275H\355==\351[\006\275\023~8<g\0000=4z\301<<F\025;M\0172\275\014\247\364<0\030\311<\003\326Q\275\354x\001\275/n\006=X\240\317<u9\301;\250\347\031=o\232\335\273\021\317\177\273\n\004\000<\273R\n=\301\322\277<\360\341M=i!O\273\244\334\347<\314\235\030=\261\345q<\200\325\022=\230A?\275\007\216\307\272\331p\231\274\013\313\302\274F\322\021=\337\013\240\273\350w\370\274b\026\035\274\207\346N<\3249\235:n\377\207<`(\371;\214}\025<\265mj\274\210V\265<\177xX\275\232t\030=\231\235\237\273S\021\"=W\020<=\014\023W=&[\226<\373\343\013=\036p\305\274\236\245H\275m\237\022<\203B=\275C4\212\274\231j\336:\223QC\274]v\204<P\n\003\275\003\"\313<\243\341\266\274\030VV\275A\244\325<\264\375~\273\233E=;\334s\026=\2168P\2751At<\207\200\212<\004L\342\274\312\307\234\274\346M\'\275\323\364H\275\035\370\'=\303\027\323\274J\301.=_\226 <c\205%\274\031O;\275Ly\224<\313\337\016=\235*%\274|(\370\274\337\021G=\210\010y<\361&&\273s\352#\275\024}\275<`\036\237\274@vU\275\'\202\317\274\266\321\310\274\004\366\242\274~\224B\275\271pR\274s\250\362<v\025\254\272\263o\032=\372m\007\275/\377\007\275\260\326\370<\352\374G=mS\335<\000uO=D\3763=O\2169=\211\005\353<\243\253\333\274\344\017R<Dr\347\274\234U;\2759\217<\275\220\335\007;QQ\007=!\212\036\275\330\003D\275\271<7\273\300\233%=c\251$\275\233C\223<)h:\275\222\004\346<\261\307\271\274\262\027%\275v\320&=\004%\013=\2716Q\273\014\276_\2744\360\005=\234\2738:\036\323\235\274\370;0\275w\205\232<\t\334R=\005\242\034=\304eX\275\336\024=\275N\275<\275\204X&=\024]W=\275\224\000\275\205i\337<>\351G\274\r-\262<\245\343J\274\356\3326\275>8\365<\347 \000\274\354S-;\005\227P\275\203\274 \275h\004%\274\010 \261<MZ\227<\240\230\030<!\017\277<\367~#=)\307\022<\263M\235<Y\341\'\275\036\274\242\274\317c\357<G\353W\275+\377)\2745\267\002\274\200h@=\203{=\275\356\321-==\213\202\274\203{\014=\252\330%\273\004\374\034\275\016\177\241\274f\375[\275-\\\017<P])=\'6\274\272\311i\371\274\300\n\240\274\214V\312<\213s\034=\265\006M=\340&\252<\356V4=l\314\332\274g\014\231<\360\316\275<\016\2542=\250&\217<\024\013\n\275-vK;M?\027\274\024T\325:VkI\275\324\200\026\272\202t!\275h-4=W \373\274\004\\2=A\247i<\342\3719\275\354l*<\026\013\310\273U\322\005\275[\205?=W\214\270\274E\373\350\274M\332\203<c\320K<Q$\313<\336o\221\272\036\334/=\241Q\355<zw=\275\206\354\372<2\356\236\273\201\237\250<Z[N\275\377<\273:\005{\321\274{\313\373;\317[\266\273|\254\200\274\330\363\024\275\003\360q<\262#Y=\\}N=\272\251\302<\26448\275\037s\222\272\332\237+\275\364\017:\275\0147\n=\302\310#=F\322\006\275\273ZY=);$\275\225=E\2755\353\312\273\032\315\302\274\311\366U\274AC\305<\332q\261<\365\243\205<\201\312?\274\2634\016\275\200\374-\275\347\360\261<\301\t\244<\022i\313\274\322\305\232\273W\372\337\274\016M\327\274Xa\304<\314\206F\275\230=\t<\202\363\375<\231G<=D\335\033\275\007\r\017<\331\375\'\274|;G=\336;\236<,#)\275\272\377$\275o v\272\\\354O=<\031686%\257\273)9K=7R\"<\243$D\275e\242X=L\234)\275H\247\016=\261\361\340\273eR0=\267u\245\274\2630:\275ZP.=4X\324\2742\320\\<\372+0\275\000i1=\244\332\003\274\216\302\353\273\322\016%=9OH=\267\227/=\232^\200<f\203.=\201\022|\274\365.\370\274\021\250\024\275)\024c<\205)?\275=L\n\274L \351\274dW\010\275\261V\233<\300p\352<\265&\031\275\327\261\256\274\031\227\027\275\001T\"=^\\+\2744n\216\274\246\247\212<W\316\336\273\340\246\014\274\247zF=kT\000\275\371\371\016=\325t\247\274\343\241\345\274\235]\360<\275?A=h\346N\275(\035J\275\213p\326<M!U</gD\270\340`#\275\206\351?\274\314\316\215\274y\030\r\2724\214\r=\261/\264:\021\"\004=BA\322\274\203\343N=q7\022\275j1\036:{\376\335\274;\007\340<)_\300\274\233\363p<n\257&\275\226\311\005\275\3219s\272\025\204\237\274\203\2769=\306A\217\274 #Q=\343R\357\274\020\203\310;\354\251\353\274\356jE\275\027\2259\275\374f,\274\036\333\006=\230]6\275\2261\036:\204\377\356\274\323\202\261<\276<\n\274\221\032\001=>\2464=j/E=B\031S=5\000\233\274fJ\233<MH/\275&\014Y\274\020t\321:\03389=\310S-=\263\n\014\275\010\313Y\275\354UA=[(6\275\023\322V\275y\252G\275f\034\226\274\232\316==\315\2601;\275h\323\274L\201\343<\377\360\022\275\350\223b<:\334\266<\375*\237<\257\332f\274_\006\020=\225\233\"\274?\226\t=RR\340\274\2344\035\275d\252;<\3116A=\230\305\207\274\201\255\037=\007\251`\267@\"\263<7\316a\27494N=\010\371\003=\006\340\014\274e\000Y=%\260j\274\266\372\267\274\361mV\275\326\232I\275\346s$\275\'^9\275ur(\275\032\310d<\356t\353<\004\372I\275\214\201\2139\247\242\023=\313\307\037\274\326\360\373<V?i\274!6\323<\253\014\236<\276sg<>\322>\273[\036%\274Z\200-\2748lX\275\'`\026=\336\324:\275\353\200\240\274\200\313\333<4\177D<~\330\312\272\007\3523;\205iw:\213U\340<\000\217:=\030\236\r\275\322\350A=\017\021\020\275\032\244I\274\260\312/\275\350\377\r=$d/=\245\254\271\274\224\261P<\242\313o\273\210\345\035\275\322\027~\273z\363u\273f\016?=\270\024K=\234Bs\274\307?\022=\210.\245;\363u\006\2754\332\311<\322]\316\274\027\355N\273\234\351!= \3037=$\342\3537\034\233\252;\233\245\210\274\010\000\310\274\305\376K\275\253\0210=\256*J\275\006`\212<\322\214M=^\320\004\27578!\274I\013\227<\331\014\207\274\222\217)=\214\006\307;\332\264S\275\003\n\245<\215\337\023=\272i\361<\244\n\017<U\264\327<\304\320v\274\346?\241<\224\212L=\001\301\002<\004t\275\274w\236V\275\341\321J=Bu\034\275%\211\031\275\217\371\365\274_\005\322\274\377]\335\274\267\2510=6\030\303< 1\037\275N\353C=\224\216\337<\220CY=}PY=\200\373)=\374\253\006=&R\322<@\261G\2750e\026;\315\033\211<r\351\202\274\206\022\031=\370\247\307<\331\276\310\274\237\022\344<\207\000\247\273\272\220O\275\347\\\305\273V\204\356\273\340\253@\275)|\037<B{V\275(\363U\275`\350\220\274\215i\000=\246\016\274<\246\202\002<\312b%=\241\367\304:\372\270V=m\301\303<\276\\\237<\240 \211\273\326\246l\274\302WL=\372.\272\274, \022\274\276\0062\2746\327\020=\300\322\225<\252\323w\273\353G\257\274\036\3216;\240\332W:\344S\371\274+@\211\274t!\352<OV\314\274\020\340J=\007k\325\274\275\335\003=Xw\023=\032\260\t=\253\273\371\273\311>\262\272\364\027\342\274\025\032O=\322\024\031\275e`\371\273\306\3508\275k\301u\274K\246\203<\330\'\347\274\340\001E\274 \254=\274\324\252\004=\350\323\364<D*\313<\2301R=\313\035\217<*\367;;\010\301.=\334\017\277<\250\025\002\271\231\250\266\274H\2251\275?\327\304<<qr\274\233^\254\274m+N\274tU\353\274R\265\216<\255\241\344;\231e\020\275\025\017)=\037>\035\275\026\352\t=%\234\027=9\305\307<\357\371\232\274\325J[\275\323\233\346<\247<\353\271\232z:\275\'@\347<\272\210\365\274z\274\243\274\374\000\2569\352\267\374<\356C <\003\237\036\271\301/;=\331\206\367<\n\330\236<\275~\224\273\312\223.\275\233\242\r\275B\001L\2747\000Y\274C\005?\274\264\231\030=\274\261\2549uz\007\274\"\242\262\2742\337M\275\263\336\026\273i\235\213\274qXX=nb\027\274\244\277U=7\006\006\275m,\254\274\004\365!\274x]\271<f\247\t\275\370\214\025\275g\271K=\332v\\\274m\353e\274\006He\274G\002\235\272\026\247\375<)\263\025=\251\2651\275\275\227G=\211\016\230<o\030,\274\200\375\376<86\006<u\251Q=*\022%=PCH\275[\353\232<@F.=A$\\\275\245\365T=\343\262\237\274@\312\217<\266\365\361\274L\273\345;\3200@=\326\')=\000\017\022;\370\315\204;\370_\301<\037k\221<_\365F;\035Z)\275\25291= $o;\260w^\273\352\024\350\274\013\343\336\274}\243/\275\3140/=\273\234\310\274jl\256;\375nw\273lP\r<\25019=u\306.=Cn\375\274G\275\022=3\266\001\275<\2579\274\017\374<\275#C1=%Yz;+\226\013\275\307Q\033=/k\232\274)VL\274b?\202\273.B\037\2750%)=\231\206\302\274\224`\002\275\026/\330<\232\333\356\273T\334X\275q+\344\274\357 T\275\333o\352:\246\301\223\274\036i\025\275E;%=}L$\275uU0\275i7[=\\\020O=;\215\211<\215\025\n\275\321\242O=\000\325E\274h\273\327\273\233\204\312<\376]_<\240)*=\231\002\207<\"\270\232<\310B1=\225\025\301\274\026\244\001=\345\346\003<\260U\253\274\363\004A<\377\243\372<\377\261X=\232\235\016=\232\3536=q\223\t=\21407=C\333I<\377p\224\274\200\271M=B\177\203\2746@\366;x9\311<A)\034=k\021\365<O\224,=\024\353\373<\2512\356<%\207B<\260\222\224\273^\345\364<\226oM<\342\003\241<\321\244.\275\016f\017=\336\226\333\274Gv\367\273\024\177\377;B\026U\275\306M\375\274$SP\275G\277\000;T\0229<\327yP={\362C=\230t\030=\r\357 =\224\037(=$\264b;X\2311\275\376\201F=<:\\=v\036K\275\240\332\002\275\227\337\345\274\235\2548=\271d\031\275\212SV=\225\220<=v\3712\275\277\322\220\274k\357\245\274|\213_9q&M\274\250\253N\275\366\013\026\274\226\323\227\274Z\373\027\274\005\007N\275g\205\377\274d\245\306<\037\376\244<,p\205\274a\010\353\274\241\227G=\246\007\\\275[\260>=\014\256\343\271E\221\023\274\207\354\010=\0232\375\274g\0245\275\273\0342=\263\360\025\274\356\337\027\275\r|\212\2743\302B\275r\215\311<\001h\331\274\004\276\263;Dz\316\274\210\322T=\203uR\275\032\323\031<\271Q\320\274f-\n\275\2349.\275\202\034H\275\007\036\231\274\367\022C\275\240~\213\273\032\n\272\274\207\347\310<0#\014\275LC\273\273\236uR\275G\343,=\232/\335<\032\020\350\274\314\037\003<a\354y\274\366C\226\274\257\253\344<}\345\250<\027\300\343\2721u\322<\303|\213\274\004\216\210\273Y/\262<\224;\365\2744\260Y\275n\232B\275\217\370\212<\0300:=\303\017\215\274\013\'[=XS?=\n\345O=\354\273\324<B\332\025=#\023x:\371~B=\237\002\251\272/<M=\022V\224\274\013\242Q<\351c\026=~qe\273.\356G\273\253\320\016=!\\\317\274\313y\031;\305\327\032=\370\317/\2740\353N=Y6T\275S\307s;\3036M=\233?L;\303\303\271<D\216\233\270W\004\255;3\217Y=\353\227:=\341\014\030=\375\024\201<\267\313\262\274[\032\2259\302-\\=\271\232[\274\331\3461\275;\273[=p\334\312<\205\360\032=\345\240Q=\331M!=AN[\275 ^-;m\211\"=\265\243\207<\227\361\331<\370R;\274\3532l<\225U\377<$\257\315\274\341a\356<\242\277\267;7\363\322<\223b/\274\rew\274\206\331\035=\226\237\031\275%R\255\274sgX\275g\304Q<U\340\036\275\034\207A\273%y\025\275\243\231/\275\002c\027\275\020\003\255\274\222\2259\275\244|\r=_y%\275\231\023\030\275\2271N=i\313\246<\004\315\034\274O\\2=\336\374\342<\353\022\355;I\023\314\274\337\020\246<*\250\300\273[\331\273;\223`\200<m\210\317\273\000\312\220<\3661\035\275\212x\036=QY\242\274\346\325\203<\366\226\326\274\266\211\200<\2643\014<\226\004J=\355=\001\274>\333\211<\273\257\230\273A\211$<\016&\003\275\364aD<\344\370\265<\256>N=\246\'\016\275\215\005\031<\"zR\275fSA\275\242\037\023=l\245\002=\027\003\027\275\264$)\274\353\325.\275+\233q;P\364\205</\\\306\272\212\231\030\273\304\256\352\274/Y\030\275V\3312\275O\200.= D\r\275\241\372\303\274\\z\347<I\025\321\273:hI\275\3173\220\274(,/=+\361\301;&\217\020=\323\2071\275\277\273\026;5\333\013=\350\"\262<1fb\2744)W\275\245O)\274\274\211\"=\254;\023\275\200\203\031=\000\326n<\200C\274\273\277\332\242\274+Z\255\274\352Q\365\274\031\024\222;\033\351\362<\257\204\344<\007~@\275\366GL\275\201\276\373\274KT\221\273\251\313\025=\303x\t\274\024\177\245\274\033A\247\274\226\017\235\274\266\226$\275\373\300O\275f\021\t=\200\\*<\2417:\275\242\233T\275\031\r*=[\367#=\234\254\310\274\254C\021=\017-V=TE\274<\224\217!\274$\220G=<\027\254<\223{\234\274\350\031*=\242U\340\274\020w\376<9s\331;Qd\361<\201Y1=Z\177\032\275\037\367\336<\003\353\025\275\364w\254;W\225\316\2747\311\263\274&RR=\34014=\256V[\275sh\251<F\220E\274\240\215R=\254sg<\274X\016\275\325\221(\275\327\321\232\274\312;)=C\032\025=\372=\266<S\343\204\274\300\377\365:c\021\301\274\325RR=\0278Y=\005?8=WD?\275I\2704\275g\235=\273)=\001\275hY\333\274\371H\026=\001\314\"\274\027\370\027\274R\006\035<\255\242G\275\022\310V\275b\222H=\327\016\207<\026YX\275\271\014\231\274\035\232`<\303\377e<\275\355G=\333\354\366\273s\230?\275\016\212:\2755\327\363:\331\t\317<\2133\005\275j\"9\274\232\331>=\235\003\321<\232S\333\274[\2250\275\327L\\\275\240CH=:\356\017=E#\364\274\245\313\020=#L?;d,\311\274\365`8\275\343$::\351\"R=\177U\034=\362\250\244\274\364m\223<\336!$\273\277\025\360<\331pH\275_\257\265<\376\220Y<\203\243W\275\355yX;-C\330<0SA=\236\346\314<\326?)=\203\352\001\273\010\373k\274\200\235D\275t\263\377\274\025b-\2757a\370<\230\222[=\314-\346<$\257\032=\374?\016\275/\316p;%\263\001=\220\255\034=\207\3413=\336/\255<\306\360\034\275\242 H=\221\334\303<C\324\027=\313\3629=\357\253j<\377\205$\275\311\215\024=Y\037\225\273\225\021\235\273\346\3306\274x\217C<1\322\351<\246%0=b\006\334\274=2\275<\314y\306;q\206\037=8+\273<K\356\016\275K^p\2735}\014\272#b>=\375\220\t<\317\261\303;\214\016\376\274\271\312\027\275\232\376Z=\322\0318\275\243N\376\274\237\363\300\274\203\315A;k\237\231<\211\022@=\206n7=\216\2532=V\272\220<\020\244\004;\032\362\376\273}N@\275\210\005\210<\260\330T=q\n\342<\017\r\025=\033]\035\274 \005*\275,#\260\274\263m\260\274X\266X\275p_\261\274\330\334L=H\334\n=\021]\350;\214\204\370<\336wN\273\251&4\275\223\t\237<\353G\006<\350\3219=\212:\230<\256;\016;)\233\003=L\001Q\273\354\277U\273k\3371\275\310\334\312\273\311\302\237\274W\322G=\n\\\014\273\t\223?\275o?\001=g\270P\275\004\300\311<`\"\010\274=\240:=\360\270\244\274\202\324\242;~\251\321<\254\265L\275\245\370\014=^U\304\273GX4=&7}\274\002\366\'=\321|/=\321\310*\275\001$\035\275\313\330\273\274ZH\216\274\257\235\035\275\003fM\274\260\316:=%)G\274\2477\370<\347\024\371;\335\371C=\276\372\016\275<\307w<Y\0336\275$\254\"=\244A\212<8\3671\274\033\253T\275\221mQ\275\240\363\024=\n\300j<b\320\021\274b\226G\273\212\004\036\275-\357Q=_\347\375<\353P\030=\234\346.\274v\223\371\273o\252-=\341i\336\274\\\\ \275\0317-\274\034\026\362<6r\351\272\373\204\207\274]&L=\n\302\'=H\254\003=\223\200:\275\020\313;\275j\320\211\272\036\313\027=\350V@\275+\373{\274\302\031\007=\347\332\305<\302\027\353\274\350\021\355;|\333\331<\253\214\220<\r]\202:\377\304\003\274a\213J\275;g\370\272/\261\240\273B\340K\275u\265Q\275\245@!=\313\354\036=\213\276H<\247X\003\271A}\212<,v\376\273\262\211;<\201\345\210;\2317 \274\245\037\034=b\0145\275ke\004\275\201J\035\275\236FK=S\313\243<o\333\316<\330\'\346\274S\232*=.\347\201\273`\302&<W\005 \274\225\000\010=\206\305d\274d\350C=B8\272\274n\341*=55\304<p?\022\275\026\344.\275\262\3063=\227\305G=-(\221<\253\2023=L\266\252\274\375ZN\275,\220b<lN\343\274\277\031\263<\275\023\005<\214\026W\275&\223 <\230&H\275\241\001Y\275A\035M=\252\311W=\245/\3428\346\001\332<\n\026\245\274\016\0055\274\022Ps\274V\212\324<\332\233\227\2742`\263;\202\232\033<p`\031\275(t\035\275|\036\352<\275\304\222\272\254Q;\275p\245P=\321\311G\274\276N1\274,QC\275\334\351S=\241>\022\273\336\216\263<\367\323=\275\355\267D<\237\206\332\272\014[S\275>\275\010\275\344\336W=S\317j;S\236I;{b\363\274\213r\033\275\r\263\366;\253\315S=\007\262\024\275\032\016\323\272\247\312\t=\262s\013=\022M:\2741\361!=\017{\312\274Yl\370<\027\261;=\022A\"\275\3540\360\274\355\323\017=\020R\030<E\t\234\274\373:T=z\016(=k\256\310;\032\212\306\274\200G/\275\343d<\275\330\3005\275i\273Y=v6\270<x\2550<\257\230S\275\212\222\236\273~\366H=]\216\r<\307\013K<\333t<\275\270\006G<x\017F\274\261\216\260<\316\320I=\3435\344\274h\225\010\274\276>+=t\370\n<J\303:\275\357\271\350\273gD\037:3\346C\275\0261\324\274\253\001\231:\252g\330\274yr,\275\301\201\036=\026\240\340\274\261b\002\275\355A\337\274\253V\200\273e1\355<l \217\274\353\"4\275\353*\002=\254/)\274\242\000\024=}\212C\273\257\351\014\274tw%=\221\242U\275\337C\343\274\340H3\275\265p5\274\306\230\376\274\333mU:\342;\353<\315\243-\274\314<\000;\266\373I\275{\370&\275P\255\346\274\305\004\334\274j*\374:1v\267\273\034{\251<\341}\251\274(e\375<G\021\274;\r_\256\272^\321H=\3712\316;\344\001-=+{+=\302\336\302\274\304\262#\275\211\271E\275\027\376\020\274\223K \275V~\306\273\274~\244:\204\360/\275\200.\037\275\224\036\240<\224|<=\366\006\256;\322\r+<\252eQ=\235TK\275{1d<\300a\215<\270GN\275wY\302\274\344&\336\274B\2771\275\361_8;9\315R<\331\206\006=&\220X=\255\232K=\256l\275\274A*&\273\003j\202<\302\'B\275\362\370\257<\215M\221<X\216\024\274\360Q\010=\267u\000=\327\027d;t_\360\273\303N\214<[\202$<S\264I<$U\314\273\365S\230\267\354\006\344<\037\317\022=\212y\230\274s&\376\274\240\357\227\274\374}\352<L\372[\275\247\272\360<w.\026= \263\024\274.\000L\273|\237I\273~K\342\274\362\355\032=cdm<\274\312\020\275\240o\214<\3618#=\353\363\311\274\227\207(=\262t\006\275\361P\233<\267P#=\274p\264\274\201v\200\274\354\327@\274\'\"\336\274B\364o\274\357\223\256\274\372\016\200<\251\rV<\035\274\243<M-\003=\214\201(\275\377GE:8\r\210<\262\325\253<(\177\245\274\237[%\2744!\377\274\230\305Q;V\032W= \255Q:k\006\251<\000\233\303;\326\264\250\274\365G\230;\313\226E=\025\231K=\342X$\273p\212\'\275\0069\036\274\255\037\245\274\'n\362<F\004V=V\026\031\275\277\017\r\275q\316\036=\216\033\373;\377\267\024\275\027T\023=\245;\225\274=Y1=\302\000\377<2\353q\273E\210Q\275\362>\312<7\223\267<\201m\370\274+\267\037\275<\366@\275?\026!\275\251\353\363<\352\215\206<B\212\\\275;o2<\322\243\233<\037p*\275\230t\342\274\333\205K=\353\270\241\274\263H\010\275n\316\n\275#\351[\275\252G\267\274\213\347\010\275\271}\343;\336\333\2319\02417=\020\254E\275-\361\337\272\250\262\273\273gp\333;\257S\304<\260\215\270<5\233\370\274A\311;\275\371\2503=\221h\357\274\233\332.\275\320\253\030\275\010\301\314\274\343\310\027<\'_)=\r\305\276<\364M\003\275\355\026N=9\035\217<]\221\214<\031\244\024:\214\3657<\367\367\213\274\306\210E=\315\372\271\2747\217\032<\3659-\274adQ\274&\035\252\272\205\222\364;\247*$=W7B\275`\313g\274a?\031\275K 1=\236k\301\274&\243W=\014a\023=t\324\265;\256\231\234<\210KD=\362\032-\275\316*h;\204\337/\275\024\202\327\274\304\267O=\r\377\021\275i\303\222<:q\364<\355\233c<%P\t\274f\344\242<B\313*\275P\251\361\274<\246\355<f&\353<C\234w\274\017\261\013\275\3342Q=N\"\310\274\"\232[;c\242\001=c\241\265\274\243\272\342\274}\331\021=\230\236\321;\311\257\013<\367g\031;\320,+\275\302\357&\275r?\244\273\027\346\203<ay\212\274\345\227>=\357f\202<\250\254F<\210\0200=\301\252\250\273\016\033\000\275D#\001=\305\254\313<{\346\336\274\235=\325\273\006\200@\274\327\350\025\275\210\357D\275=\345X\275\3552H;\301\3142<\022n\266:\346g\021=\202\371I\275\213\305J=a\266\035\274N\335\022\274\316\264O=\343\301^<\320\234@=\376\215\020;g\211G=?VF=^\005,\274\276\010\342\274\361\374\005=\241\201\n=P\257\363\274\210\000V=\213\363\305<]r=\275\373\221G\274s\372!=\360\335\334<\255\353\253\273S\017\213:\220O\366<\236D\025=\351\245\325\274\253J\037\275\273\324V=u\256\262\272\216VF;d\324\037\275v\256\'=\234\005\264:\024\331\303<\0163\246\2734\3016=\302b:\275\354\247S\274\341\306\374\274\002\217\351<\256\263\036\275$\334\037\275\276^\361\274\010zU\274\324\334R<4h\256\274\375\023v\274:\2103;r\330\342\274\265G\220\274i\256&\275\326aZ\274\r\2072;\320A\257\274\264\306}\274mI]\272\026\373H=X\311\210\274\225\375\361\274\341\025\224<%$\"<\262DC\274t\352\276\274\014i\222\274G\013:\274\345\031\'<\365W\233<\217\361\332\274\001\206@<\247\313*\275\035\362\270<\003\343\024\275\203\2405=2\274\003=\366\216\307\273\343T\222\274\365O0\275\307\346\024=|\002Y=\224\004P<\252wJ=\035\2753\275\320F\274;\372\0221\275\002\2465=\304\205F\274\344.w\274\201iQ=\331\311\235<\3030\"<X\3465=\316\203\260<\300\361E\275\273\254\"\274\022M\273\274\3727Z=\356-Q=%\006X\275\232\342Z=\370\236\'\274*\010\312\274\351p3\275\2535\017\275+h\264<,1H=\232f\262\274\357v\300\274\260\336\357<\331\364\300\274p5Z<\227\363\t\275%\220P73\256\246\271\007\001D=\344\r\\<\315Y\265\2731_V=\255\252\031\273\211!\326;\367\2356\275\005\303H\274\301\201T;]\036h\274\2639\337\274N\035?\274H\364\363\274\213\0171=\031\202.\274=\233#=\341\207M\273`>\2369\254\r\034=,\021\027=\344u\n=\240\001\374\274\334\243\262<\334\337_\274\235\225\203\273#\221T\275\n\371\037\275mt(\275\260>\333<vS\327\274\375\373%<\032m%=\\\235\036\275\225v\224<q\320\323;\361\370\347;=\312\223<J&\371<\251\226\301\274\207\321\214<\027\024,=\233\277\021=S\215=\275\026^\'=Z\202\362<\304\237<=6\021\232\274&&,=\251e\362;\016\342R<Ky\243<\211\257\365\274t\220<=H\346\373;\226\277\2268\207+\314\274y$\352\274.\373E\275\026&G\275\267u\017\274h\267\257<&\002\272\274\346\240\263<j\337M\275n\255!=L\276\'\275q\216\263;_\224\366\274\240\0030=0\275^;4\375\026\274Q\323\036<\273\231F\274m\225\275\2742(W\275\300\005\331\274\036\255!<\3024\024=R\353\300;y\340(=\324\'\3629\326\252\005\274\333D\352;$o6\275O\031\247<\n\375\"\275\035\356F<\006\021&=\305\277N\275j\216\201\273Xp\010\274\230\033\"=\314l\034\273\320\244P\275\303\270\220<@T\036\275\205s%\274\300\177!\274\345&\245\274\303Z\007\275Pah\274\267\372%=\303e\264\273\021W\031=C\373\'\275e\324:\2752\307q;\350\371 \274>\026Y\275VM\004\275\233\004\236\273Bd\362<\00169\275:T\276\274DKH\2756\3672\275\251\327\253\274\220\371\020=b\023\027\274\211aW;UK2\275\3654D\275\365\306\227;\261\220\346\274\265c>=L\233[=\032G\345\274n\262\277\274\3105\371\274\357.\211<\342\324\032=\300!7=N\301Q\272\020\211[=\350\360P=\322\344\344<\313\227W=\010G\024\275\325f\336<K\035H=\002g\032=*M\026\274\373\333\013<U\321h<\013`\302\274\223xR\275\200\337]\273\013\223 =\226\332\354\274\366zI\275\231w)\275Q\360\006\274\324b4\274$\353\206;k\3213\275\212\376\371<DA)=6z?<\177z\017=d\337)\274\\W3=\0022F\275\221\317\351<\357(\266\271\033\037\200\273\'\203\367\271`hU=\316\\\355<\221AX\274\241\274\206\273\021=\222;\324\240\005<!\373\226;\020\017z<$\3441\275\250d\252<Q\001\235<\026C\362\274\336\231\023\275\235\325#<r\'\000\275\372@0\273b\346\210<D\245\267<\331V\027=\202v\321<q\234X\275+Y\364\274\360\'\311\274\247!<\275\262qP=\035A\311\2749K;=\3450 \275rD\027\275(\r\022=\226\254\327\274\221V\312\274?k\313<\205\225\005\275\007qF\275\330=\367<RH\212\273\223\261\020=\325%\"=\255EE\273\300\014(\275\031G\371<\024\331T\275\270\241;\275\324\254<=\006\307\336\273Fc\n\274[\035\203\274\252\314\343<\005Y\364<3\006\300<\230\240\022=Z/X9)\0028=b\246\275\273\351\245\222<\362\023%\273\026\320}\274\266\304\305\274\2434\307<\'\031\212\273\302\027\032=\373\350\025=\331\340\235;87\356\274\353\"\220\274\215\311\002\275D\233\t=>7M\275W\261\372<\325)\300\274\256A\207<\021\014\r=O$#=\344\271<\275\240y\t\275G\035N=l\3165<\203p\034=[\236\020\273\314z\255;\241qX<\336\021Z\273PY\343\274$\210O=\234\201\000\274\327\2006\275\306RS=\273\317\335:V\332M=ML\020<\344\343\217<`z\271<\370\351K\275\364\214\340<\305\013\246;qO\357\274\245\010\'=\350j@=\341\002\004=\256\311\214\273zb\025\275t\307\340\274\346\354\331\274B1~\274e\235\310<\267D\006\273\014\'\004\271\002\333G=E<\354\274}l6\274\327\010\020\275[m\\\275\217\275L\275c\036\241\274\203\341\035\275\312\240U\275\001\331=\275q\262\350<\213*b\2741j\021\275$;H=\005\236\002\274\371\023P\275\202\0138\275\001WK\274\316dl<\344\362==\247o+<G\232\241\274w\'*=M\271\376<\320\243\201;\306\020\235\273\000\315C=\3139$<\205\336\345\273\027\231}\274U\001\262<\272\270\201<;\261+\274\316\357\373\274\316u3\275\234\213\350\274\367u\312<\363\226\231<\246\260\324\274\221\3400:\214$\201<\214\261)<\225\343\331<L\333\202\273\244\223n\272\242\253\210:\204\216&\275\021&\022\275\031\347\356\274\324\202W=w\243a<\265\2064\275\300?\367:\337\374\263\274\2431\214<$\245\033\275\354\314\006;a\224\301<\334\206\"\274\343\311c<`\352>=\256\007#\275\274\365\001=]Xz\273\r\237,\274\016)U\275\n1r\274uE2=z&\264<\331\177\000=\256:\370;\217\347N\275\314gN<*Q\376<\262\224\001\273^\305&=d{F<\354\300B=\257\0330\274(\363\213\274\316\005\370\274\035\215\033\275(\373~\274\300\014m<%\315\364\274\033\374\214<\235\220\336<\264\207\310\274/\322\264;\252\200[\275>\334\201<m\375\362<\200\332#\274\032$9\274JM\025=c\373\002\2745y\013=\247$W=\025\220\363;\300=\263\273Tz\302\274M\232-\275\223G\003\274\023\300\211\273\336\372\034\2755\3135\275&\002\n\275\327w;=@\2603<r\315\265\274\"\0139\275\271y\203<\357\202[=\371\301\323<VbJ\273\005\254\'<#H\376\273)B\320\274K\376+=\200\353\375<\016\305\005\275+\325@\275\320>*\275]\021\343<~V\021=u\213\331;4\242\003;\303\375+\275\241O7\275]f\260\274ZC\027\275\0229\001=\246\017.=\270G\030\275\312iA=^j\356\274h\014:=<9\005=\267]\266\274T\361\340;\212uX\275\223\2439\273\334\202\226\273\304\177\034<\300\260U<\232;\005\275q\250#\275\253\234\002<\210e0==\277\301;sq\017\273\001\"\377;\210\035P\274\035JE=\327\267\375<\347\211\264\274\224\027\334\274\203x\217<\235\307D\275&\226\270\274+=\023\275\274K\364\274\235\224\275<Q7\230<E\204\266\274>B5=\260\230v<UE\t\275\367\0308\275n\317R=m\362/=\340\252\227;=\372[=\345n\222<\373h]\274\263G\t=\352\n\335<@\354\013< ]K\274u\027,\274}\305,=\301\000>=`%K\274\220\316\376<\024q\203\274\001\355\241<\000\345O\275vp\"=>7\\\274Kp\253<<\3472<\233\020\317\274{\356?=[2\026=\371L\034<\013mD<\t\220\033\275\255\021\357\274pW\010\274\301\305\330\2738_\215<\221\363V\273\031\262A;|\235.=\312\201\311<b\033\013\275\274\353\005\274\"&\244<gyr\272\035\3208\275 \332;=\357 L\275\030\002N=T=X\275\342\357~\274\210P\213\274\032\360\327\274m]%;\274\037\362<\266e\314<_G\013\275R\370\276<\236\003$\275\260\3444\274\314y-=\353W\002\275\247Z\366<\247\325\277\274\230{X<\236\263E\275s\353\n=\021\325\001\273\311\371y<\241\023\377<\355\252\361\273Gk\356\273~W\203;\207M\023=\263\037\242<\000\373\321\273\004\320\265\274\275\345\227<x\345\264<\337\215\027\274\234+\301<]\261\217\273\n\"\016\275\026\347\367\273x84=\305L\360<\344\237>=\377%\374\273\311\230\261\274\202/\365<\007\224\037\274*\220\265\274\":\311\274\236n\030\274\022\311\207;\314.\234\274\333\316\375\274\304\013\014<\037^;\275\017\262\017=I}\374<\260\200Z\274\000k[\274\003v\256:\214E\230\272\333\241\342<+\277E=\000y\"\275\352\340N\275_\007&=\214\3537\274\241\265\333\274\307\303\357\274\314$z\270\305\025J\275\236\230\256\274\307\246 \270l8\331;\346\305\016=\023\275)\274jKC\275\273S\323<]\032$\274\2043\035\275\373\223\031=\245\344Y=_p\351\273R0R<\000\223\017\275\026\201Z<\200\\\035\275\327\024A\274R\367\207<N\202\327<m\3746\274\326\310\346\274\252\0038\274\373\244\246\274W\355\252\274O4\233\273[H\273<=\023\340\274(\371R\275\304\355\021\275GV\212<\214\326!\275\252p\226<\t\3215\275\372\002/<\201\225\340<\334\260\234\274\373\262_\273<&\375\274\276\200f\2745\301\262\274\273QY=#\307\023\275- \\\275\365D\251<\221\372)\275\200\326\r\274 \303\350\274\343\341\034=\362\222_;P/F\275X[\363\2743\362 =\354\361_<\016\320+<\310\034\333;u\016.<\242\227\257\274\035\035\235\272\217_\222;)O\"\275\352\373\032=\352\333<=Rq&=>\036\303<\301\362\\\273\270\002};4\201\025\2747\300%=\007\367\030\275\\4\253;\250P\322\274\322\330\002=osW=\323 V=\213\226P=*\232/\275\357U\257;\374\347==X\316\023\275\234(\020=\360\0213=\273\302?=_\213\330;\356\377\345\274#s\010\275\373\0211\275\236tK<\006\313\036=\377\016E<\224\317(=7S\306\274o#\367\273$%\350<2\352H\275Z;\213<(D)<x%&=G\004(=\200\031\211;\261\215Y=\367\215\016\275LD\244<gy?:\217\205\021\275t\'\276<\256\212\235\274\002\336\343<\313C\024\275\333\3604=k\213~\274\230\243\037\274\245\272\236<\363/\263<L\r\030\2749S.\2751\303\310\272DF\270\274O\377@\275m\021w\274\2278&=\245!>=\246\3012\275\3654\026\275W\336\024\275\365p\210<Q\005H\275\224!\271\273\200\363\274;-\213\235\273\013\'\320\274\347BD\275S\342P\275\3579x;\020\214@\275r<\313<\264m\332<\344 Q\275\234\374\323\274m.\255\274\306f<<\003\336.\275\350\017\352\274\332sD\275\363\004Z=\333X\276\274y\332\231\274\223\033\230<\340[\246\272aQ;=\004\275\221<#\3712\274w\235V\274\025?`\274|i\366<q2A=\210d\317<\260j\313\274r\301\246\274\232@`\274\257:+\275h\363\316<\310\006\032=\222\202==\034\274\032\275\232w\207\274\315\2700\273\244\375\336<\343O\237\274\023\350\007=c\377\225\274\273\006\310;v0\237\274\236\353Q\273\376\"\261\274&X\004\275B\3271=\374\317#\273\342m\013\275q94\275\010B\373\272\030\242\"<)\302\030\275\335C\025<\351\224W=\244\332=\275Jp\247;S\341\316;1o*\275\370\224+=\374oH=Z\353\362;\301\266\226\272\241Eo<\321\203\320<\2642\212\274\372\224\334\274\344\323\355:\346\000\247<\373\372\007=\255;j\274\223\272\337<N\036S\275\360\026W\275\030n\221;T\312 =\002\316 \273\225\025\037=\033b\327\273\177\031\363<\355\224#\275\250\216\352<\254\237\333<\327B\234;\354b\212;wU\332<t|\373\2748\370\322\273\221\2427\275y\273\214<\304\006\365\274?^\t\273\260\217\000=j\313>\275\224\374\265<\247xU=\221\226(=@\030\363<\032\341\216<?~\022=\0231\300\274\366\314,=\321\256X\275\231\225\363<\237SV=\360\202,\275\014\2347=\2417\263\272\266\217\316<\364\306?\275n\361\257\272)\215\033<\372\036\017=\377\'\365\274\240\234\223<\357\365\231<\204\343\220:\007\036\005\275\337\366\273\274\366A\370<\245! \275G[\"\275\031\3705=l\n\030\275;Q\032\274~\323\370<\375Q\303<V\317\375\274\251(;\275\350OH=6\322\033;YB\2128\327i\244<5U\373\274\343\221\316<Q\r-=\315\255\232<\031\273\253<\036t\327<\266\035\221<\264\351\363\273\246\360\"\275$\033\310<\250\243\245<\366S\307\274 q\340\274\256\342D=\344\371*;NrL=-\3376\275k\233\337;\352\017t<\376u\222<$\356\025=9\224\346<gL;\275\334\215\316;\250\237\206\274\200\215\231<P\343\323<b@\316\273R7\002=\271a,\275\331\316\371<\243<2\275\364\031\366<E0S\275\205\315W\275R\035(<\377F.\275\207\223\t=\235>\206<\250X\334<\330\017Z<Y\006\021\275\017\267\322;\240\034\216<}\330\237\273\241V.<4@\221<v\2007\275S\227\021=i0-\274s\347\233<~\277\352\2740\\\331<O+R=\267`4<\200W)\274-\337I=\242\203\211<\357a\007<\276WA\275\260~c<\360\226N\2752f9\275\233\316#=\3717\362\274\023\032u\274\231}\265<|\207E=*\010\213\274f\355(\272t\355J\275\331\333\r=\267\313/;\360sO\275G\273\342\272\270\227\024=\244H#\275\277\205\034\274\247h%=`\334\034=o\315O\275\320\242\035\275XZ\026\275~\257\264:c\357\260<n\361%\275j\240\027=;\270\362\274\257\243\236<\320(\250;\2436\313<\333\265\213\274\305\224M=)\260W<V\030`<\362\3118\275B\304\202<\313\361\205<\016g\020\275\276\374\321<\314\332\322\274\210\223\027=\021\335Y\274\013`\035;M\372\001=L\210$\2746\323\031=kz\304\273\003\366B=\312|\003=\215t\002\274BgW\273#\257\370\274\243\t\373\274:C\332\273=\221\321<\372-w\274SC\006<\346)B\275\003\264o<<h\026<~i\036<m>\227<\037\274\033\275\350GW;fl\334;\027\337T\275\246C\264<(\0015\275ry&\275t\201t<\2340\257\274\373\227\307<\325\361\005\2747\0266\275m\231\263<$7C=H\326\257\274\246\357D\275\270\311\210<\324\363\037\275Y\215\317\274w3)<\256\376&\275u\2150;\271\207\360<)\373\315\274\342t\361\274\342\346\005<b\225Y;\341\200\222\273/\346\232\274\364\026-<{V\016<\361\t\350\274r\254\233\274\272cE\275\330\315\255<\341\204\024\275,\036\026\275KDG\274\340%\005\275\023\300[=sS\022\275\262\020\r\275\343\306E=\252\302\006=\266\016\372;\316\277\254;W\264\374\274P\332\005=\272\211u\274\214\260\002\274k\2442=\270\366\341\274\2661Y=\267\264\202\274\335\352\242<\021*(\275\271\"P\275\336\241R\275)\271\030=\357\023\343\273\213\020I=\215S\266;\233\026S<~G\232\274m*\210;\365`\004=\275\3007\274\341g\307<Z\301\332<\363\367\306<\325\022\265<s\311P=\223\310\221\274+\355Q=t\017\336\274\213,4=\327\032\251:\320dJ\275\354\0362=\220\270\272\272\372\345\017<\375\252\213;\005\301D\275x\013\363\273\022\361N<\267\'(=\247\2542\274\361-E=\253SG\275\205\254\307<\310\256V\275(\210\254\274\230F\000=R\024\031\275\216\311\302;\2719\237;S8F\275r\213\264\274\022\203\t\274\010\037\261\274\310\225\t\275\3467L\275\377\216P=UJ\033\275\313H\036=\0065\365<`\277I=f\352.\275r` \275\356\367\342<\016\'(\275\371\312\025;\301\222\360<g\230V=%\260\346\274\337\035A\275\030s\244\274l\220\230\271rT\330<\367\342>=\006E\013<\305[:\275\350\217\217\274Q^\022==}4=\215F\000\275\361q\252\271\227\364\276<\244s\031=\262\3459\2753X\237\274\305\273\346\273\003\344\222\274OHl\274\331\010U\275X0\037=\275\345\352<\347\341\027\275\230\177\035\274w]\356<=_1\275\346\353\254;P\274\n<#\231L=\272eE=\370\014P=Y\325#\275\020p\031\275\335Q3=\243<\000\274\365\320\244</@J\275#\351@=\366\261L<T\375\276\274\\#Y<LB\345;\374\3449=\223(\224\273\333\031(\275=\3765\275m\217\250;\316hD=\331(X\275A\014C\2750\214[={\032\002=WnW\275\267c\336<\257\003\"<+=\202;\177\367\370<\307\232\273<\036\n\256\272\277\224\t;\203\336O=\263O\031\274tS\237\274h!\014=\373\253?\275Nc\013=\001\367\323<-\354\371;y\240\024<oi\301<<QV\275\206\271\233\274P\303\025\275:w\240\274\3606Z\275\1773%=N\002\002=f\023\252\274\016K\335\274f\263\313:\305\3134=\020\235\206<\211\257\314\273\367G$<3\375Q=\214\241(\275\356\336&=\302.\014\273\245\244\306\274\237\232\303<\'\240\036<\352/\245:)(\034=\267\000-\275<(\257\274\236\n\000=\337\000&=\240\3064=8M\342<G\372\246\274U\253\271\273<\246/\2745\214\034=\256\327T\275\252\271\223<\210\273\225<\302\353\240<(\261\313<\205P?\274\022\342\263< `7\274\034T\267\274\224u?<\003N@\275\230\367J\273\027\373\262<\027B\231\274\226Q0=yfQ=\037\365\003=\220\212(\274\352^\016\274\004%\306\274M\265\022\275\330=6\275#\247\300\274\253\305\002=l\005\256\274\255/\265<\217\035\033:\033IB\275\273M!\275\220\301i<\376\026\024<\272_\372<\324\245?\275\274b\014=Og\332\274S\306\236<\303\021T\275\r\262%\275\367*\332\272B\203\036;\244\223\242<9\272\304<\026E\016=\230\325E\275\237,\315<P\366\364\274\200\3057=\262\'W=\220/$=\246I\007\274\007\327\212\273=\010#\275A\234?\275\007\246\037\275dR\243\274k\216K=\346\226\213<\311\303-=\026tM\275\253\237\240\274\301\t@;mS\334;Cn\007\275\025SY\275\262)\233<$:7<(\261\200<O\3314\274-\211\'=\333\362m\274\254\035X\275\020\360\t=\257\315T\275\242\312\006=I\315\206<\251%U<\'\364\312\274\236\3531=\032\317\274\273\201=\345<Pp\373\273\346\353g\274\365\245<=\177\265/;\035P\201<\361\035\030=\321\317\253\274\017\366P\275\201\232S=V\"\024\275\256\374Z=~\0260=(\322\023\274\240\016\013\275IG\312<{\023\205\273\247\267N\275$\274\236\274\207^e<\326Y(<y\223\'=eW\371<9T\366\274R\325\003=\276\346$\274Q\036K\275)\362\337\274\374y\332\274r\305\217<\371<\356<\020<\306\274\377\332j<\243\264A=L\027\030=3\251+\275\211Q\275\274\347/\357<c\370\336\273\242\212\227:=\220\'=\217\261\326\274\262\341\036\275m\t@\275M\255\034\275\227\252\327\274[\255\330\274=2\254\274FV\301<rV\032=\377\256\027\2753\243\327<\032\217\220\273\311\252\036=g\357K\275oB\"\275\372*I=\036]3;B\261Q=\203\023\364\274i\004G=Z\327,\275\350}\316;\241X2;s\316[\275\020\355x\274\256\001%\2759!\267\273\356\340\226\274\342\007\305<\377`\032\275?\243\353\27432@=u\301\335\274\302\357\016=8[U=vX\031\275\347\017\023=R\271K=]<\374<\017\2204=\225\364\231\274\270\244\007=\033\314\367<\333\365Q\275\256\301\312<u\343\370\271\017\340\317<PN\344<\3622\301\274\240\221\362\274M\265D\275@\026+=n\201\003=N\331\201\274bN\344\274-&<\275\365l\302:lf\234<\017\264\364\273xo\006\275O\n+=\273F*\275z:\254<y+4\273?\217\234\273&\274<\275\022f\3739\314J\022;LP\003<\027\257D=\344C\231\274\232<\311<\243\330\213\273;\353\364\274l\262\027\275\202\022\322\274\241\271>=\374\220\311\274\242\363\276\274N}\235<\362O,=R\206\233<\006\230\030=l\261\032=\277\214S\274\024\236\"\275\'\005\"=\263\231L\274\262L\360<h\273\342\274\361.>=e|\035\275\234\361\300<\'d\224\274\n\225\256\274\026\317\033=\340l\371<\240\337\336\274Y\013F\275!\371\301<\246C\264\274\306\330\227<\024\350#=[%7:\373\"\334<OH\265<\002n\032=\216\007\000=\233\326\004=\323\271\010\275\370>k\274@\034\007\275!\260\375<L\232\303\272\264\005\343;\322|u\274\'\036\211<\'!\355\274u,\220<\365sS=\344\336\017\275\205\361(=?^\037=\021c0\273\325\311\314<\3165\225<\273\243M\275\314\032\211\274\020D\014\275\266E\2308\237\032}\274h\0216=#\032\t\274\207\203\275<-\tU<]\254\267:\373$~\274sz4\275\377\261\304\274\243\205\273\274\247\241\242<\001\025\363<\204\263f\273\311\231\032=\027\372\013\275\345\nE=\022\273\010=\245\357Z=\252\001&\275\033(\023\275\202\357\032=\345@#=t\251\241\274}:\001\274\021!\326\274\273\007\020\275\365\220G=\341\374:=\376\357W\275x\307U=\214\242\r\275\003\250\"\275F\334\246\274\220\264\204<-\253\010=a\331\364<,\007.=\320\337<=}9\376\272\326\017%\275y\310F\275\232\030M<\004sL=ln\313\273\033B\364\274\331\370@\275\'\322u<\372$\216\274\220\207\347<H\240Z=V\347Q\275M\177\244\274\322F\201;\363&V=\332r\010\273K\273\031\275\316\365\222<\"\0061\273\300\\\352\274\026h\033\275\205\225\255<\3259\300\274<\023\342\274\341\234\010;\376\035\227<\301t\232<\360\201\324\274\014\364\037=\271\017\003\273\303\214\016=\2345\337<9\355\005\275x\024\023\274\311\332X\275\300\r\022\275-\036\004\275\030\372G\275\231\212/\275\222\301\203\274u%\271\274\002|\207\273\266;~<\023[\037\275\241JN=\343\274\263\274X\270\217\273\013\300K\275\361\224\240\272=\260<=TB\376;6\007u<\2035\213\274\362\032r;C\345U=\214\373\206<\2429\013\274\226F\027\275G\260\204<%W\010=\367\224\010\274\342\371\214\274\331y\236\273n\234\246\273PtP=\367\354\377<\321_/=\010!&\275\242\000\370\273\014\343\325<\221\033D\275x\0058\275bo5\275\020a\213<l\276\r\275TC\321<\277.\001=\007\210\000;0\300\354<\n^5=[-\302<\353T+\275\327Wv<\\\t~\2742 \231<A`\t\274\243\363\357\274EV\265\271\300\026\243\274G2\366\274v\3252\275~-\263\2747e\\\275\317\013?\274\274\3609=\003\302\223<<YK\273\243\360B\273vd\023=\367\345\013=\377\237\347:\323\234\354\274\227\357\"<\227\272\341\274\017\234\t\275\0365Q\275\034\245 =\234|\036=\311\367J=h\235\264\274\010\365\201<\010W\r=\251\276Y<\t_\270\274\364\255\'\275G\351N<\271\221\024\274?\300\002=\037+A\275\314j\304\273\324W\313<\3658\357\274*\177U\275\226\036\321\273\324\212j\274\2617\254\274h9:=<\335\333\274\2672\336<\244\367\325<n\345\345\274\361BE<}@\242<;\223\'\275\2514#\275\355\260\336;e\023U\275\024T\357\273rW*\275\311\017F\274\361\225\t\275/\255Z\275\260\210\004\274\216n\360\274 Z\022=\231W,=\352\331==\025Y\302\274\331l;=}S\231\274\217jO=\342c>=\332b7\275\226\253B\274\223X\240\274)\270K\274\341\235[=9R\024\275\013C\253;\232\252\037=Q\210J=\307\353-=\334\266K\274\372\222K\275\260\374D\274\324\n\302\273\214e\303\274\'.\344<\252H\237<\177\347\024\274\022oV\275\204J\323\273\272\327==\364s\322\274*\330\327<`!\315\2748\001\362<\232#\032<\334\362\376:\332A\026\275\005\235\000<\360\227\346<E!\367;\025\236\"\275\371\261\241<4%\022\274\254\"%\275z|9<!rL=\236\005\036<\366\222\307\274\023\0353\274\265\363\210\274\224\206W=\r\2379=\235\365Z\275\004KR=\263o<<\313G\201\273\3066I=8q\353\274\374\267\363<\352\201^\273\365\355\027;\326\313\000\275\203\242\333\274\216\273\021\275\025\200G\275\240\267\262\274\365\311\250\274\376\240\000\275\"\024\022\275\305\245\023\274\016\263{<N\313-\275\203@4=\357\252\004\275\321\336\003=b\270\276\274\240\230N=\343x\236<\366\307I\272\227\363-\275\252ml<\ny\367<\276\337<=\375\211\353\274\236\341\333\274mY\030\274\037\230\301;\331\327\n<\263r\217\273Y\250\010<\000\036F\275\250\tQ=\036\321 <-%\\=\014a\307\274#\342=\275e\223\352<\025\213\246\274X\n\010\275\326m\336\274D\333\321\274\232\366\301\274Q\233\370<\237B\025=J\243\334\274Y\300\n\275\331\000\2226\252\035\247\274\016\321\033\275n\242\n\275\262X\301<\210X==\217\242\362;\007\010\'=+\313I=\334\362}\274\210\253\352\274\013\2615<\277\272\302\274\276E[=\351\235N<%\277\'=\346\207\307\273\276\247{<\371\214\013\275\020\013\010=\330H\306<s\342E\275\027)\342\273\263\352\224\274\254\024\223:$\263\004\275\\\241(\272\323\212\276<\200,7=\212\300K<\233\370\362<W\306\347\274SJ/\275\006}7=\236\230,\2742\303\242<|\213\374<\\\341\032\275\337I\017<\266>\216;E\016 \274};1\274\317\247\243<\212u\305<\007p8\273/qZ\275\252\'9\275\254LM\2757\266@=e\274\364<\350\367\023<p\003Q<M\217\316\274\250_\236\273Mu\030\2747\243\256<\277Q\201\274\242\345\311\274\272e\"=d\240\266;\372\202D\275x\001s:\265c\375;M\013\020\275\002\2115=L9{\274P\324\226;,\235J=\250\3719=\242O\236\273\250]\254<P\335\031=T\031\272\274\321\220\311<\\N\240\274B\323C\275\207\304c<\2514Z\275 gR\275*\361P<\324\010\367\274f7\001<\221\325S\275\305&I\275\022\200\027=\302WS\275\200\262G\275&%[\275N\277\036=~\021\037\275\251:^<7\355o<\263\261%\274\225\021\266<I\336>=\036\247B\275\352\021\005=s*\217\274\230\232\022=\016\324\352<\271\3527\2742\264\233<\373T\n<\362d&\275\332\"P=T\3758\274\000\223\331;\313\265\031\272`\2166\275b\325\246\274?\022\r\275,\375\315<\243z\351<2\343U<\022\205U\275\271\333\360\274\251T\241\274\377\327O\273v{\002=\210\245 \275#\310\031=CQ\003\275\356\202\245<I\250\354<\26660\275\213\275\260\274{\256\342\273u\335T=!\373\031\275l!)=\356\277\271\273\371p\024\275\233\177\202;\000\313\220<\335\311S=\331\306\346;\302\223\n\273\260\356;=\017N\025=Kq#\275\306\036m\274\261\233G=z\031;\275t\0106=\'FB\275\320\302\343\274\221\253w\274X\022\"\274y\227\237\274r%\004\2757\341\224<\357\272\204\272\201\226C=\231d.==\0205\275\335n\272\2730Ic\274\310\371[\275<\322#</NS<\344\202\335<\201\377L\275i9\337\272\213\351:\275\217\252\026\274\2763\376<\367\"\035\275$\367\342\273\310x.\275\355\341\202\274U\371\271\274aiZ\274e[\006=\3558 ;B\227@=\3418\336<S\203\303\274,\261\226<%\020\215<|\375\237;32Q;|p\037\273k>:\273\273\302\236\274\2617\026=\022Y0=\223#\233;N\335#=\325\307N=s\3138\275\026S\222\273\\\250\350\2746\201\327\274e\331\305<\315\021\354:\316\265\311\274\202\356*\275\3542\206<\202\360\020;\224hn<\265\023\364<gD\226<\202\311/\275\021\377G\275\326\300\221;R\024Z\275\230,\376\274\331\3632=\250\366Q\273\360\356\034\275\t4F\275\003\n\232\273.(\020<K\351)\275\344\014\316\274\352Z(<\233`H\275u\221A\275\035\256\375\274C\302\036=\347}\037=\326(:\274\261\022\033\275\224|\301\273\373\333\343\273\224\315\246\274\034\250+\275\002\260\351\274\263\206\007\275\306\226\212\273%dn<\005\206\004\275\302\260\321\274rQD=.u1=\020fE\275Nb\365\274B1\n\275\261F<=\037\226L\275~~\023\275\347\201\236\273\262D\007=Y\323\025\275\023\276\026=\372!\'=\257\266\t=/\362<:\373\377\344\274\030\033\004=L*N\274C\262\017\274\215R\300<\332\305\253\273dA\014\275\277\220:\274-\212-\275s\274U\275\255A\217\274X+f<\222\374\025\275u\267H\275\"\217\215\273\023s\245<\230\177\034<\003\r\301;\025t\257<\223\316\022\275h\2511\275M\320><\275]\333;=*\374<\205\001\334<N\2269<\344\235O\275\233\rM\275<|\374<\252\341?=\215\260)=\t\017u<\360\250\247\274\235K\346\274\033\351\002\275\246b\252\274\200\014\335<o[0\2756\370T<\376\247U\274M1\254<\343ET\275xk\342<<\203\367\274\336\2359=\270\022L<\370\256\236\274[}\207\274Q\002$\275a74\275+\352G\275|\215;=c\004R=S\334Y=\335|\221\274r\2604=BG\236\274\253\375Y\275\327\310\014=\371\306\201<tO\244\274\177\231>\271\317I\340\274>\377D\275\032\305\002=\363\300\032\275\372`>\275\213X\005=M\027S\275\224\350\000=p\023R\275\355\260\251<\221\237\036=\210\004s\274\361{\020\275\016\203T\275\030\335\033;3\355\025\274 |*=\231\261\n<\004\007N= p\025\274\305\036%=\006\342$=\356\216\\<\367\322X\274\004pE\273\264\020\346\274\323-\370\274c\006E;\337\026\273<!\305\253<(\344$=\351\030N\275\314n\240\274\\\014\034\275q\0009=N9F<\320\237 \275\2733\263\274\024\302!;4-\030\275\333\252\177\272gaE\274\231\375\210\274e\003\025=B\267><W\366\326\273$.\005\275\252\254\'\275\001%\323<<z\327\272B\263\021<\347\214U=\266\t[=\002\353i\274\026I0\275\022\346\276<\316\377\220\273ce\035\275\336\232#=\026\206i\274\301f3\275\3503r<b]V=z\376r\273\217\304\007=\274\222\261;\237G$\275C\321p<}f\"\272I\305\033\275&O4\275\336\215.=@\331L\275\252\301C\275\311\334-\275su\341<w\200\231;\023\004\342\273F\372\230\274/\264.=\034fX=I\255\300\274\361\374\300\274\033&\025<\337\226Z<\033A\261\274t\326\206\274\204\223*\274\303\275\360<a\010\351<\'W{\274\016\'\221<\211b\375\274\221i\330<\220\361S\275t\366Z\273<YI\275,\027*=\321\330\007;\246\364\350\274\005\273I\275\265\226\017\275Y\357U={\360/=\302\321\271\274\031q)\275\205p\037\275\004\020/\275c\256\026=\366/\002=\200\212\341\274\210\242U<\327r\"\274@\264\327\273\014\2375=\314\264\245;\361!\202<U\220\340\274)p\302\274\256\010F\275\010\2226=\341Yi\274ce\341<\245C\300\273\223Ap;?oG\275\305dT=\nC\'=\"\304\017=\035\276\027\274~T\003=\350-\263\274\004\273v<\256Y-\275K\361\340\274\244\221\254<\374F\301<\356l\"=\327\0248\274\336\314\212<\305E\244\274I\342\206\274\260\242<=\346\357\213\274\364r:\275`pG<\022\354\026\274;um\274!\330,\275#\003\206<HM\n\275Hu\030;,\251)=\307%\313\274z\001\007=<I\350<\314\232\222\273\200QF\275\252\nD=??\304\274\253\036/=Lg\331<h\254\037=A\300E=\307\332%=\0100X\275\003\242\022=\201\003K=\304E2\275\301\\\304;n~0=c\2407=#d@=\006\223V=\252s\345;\303F\271<\342H\214\274w;f\274t\271\020=\345\005;\275\344;\265\274\r\n\024\274\317:\200\273wCJ\275\310\270\241<\331\337O=I\n\235\274\321g\\\275\001\376\030<\337\223\376\274\217\267-<i\332G<a\322I\274\255\351\212\274\211#R=ig\210\271r\275B\275\232\361+\275\277\300?\2739\355\330;\031\230\010<{\263\333<\201\375~<h\273\005=\345\252\242\274S*\245<G\217l<(%C\275{\325H\275K\340I:yW\336<O\244h\274\363 \370<\317\354\037\274UB\313:\017\247 =`WX=\002D\374<\371\276\010<\207\267\023\275M\225\364<{\237|\274\330\tH\273F\317)\275\344\216\274;\030N\024\275\231%0=\311\240B\275/\333F=0\r\020\275\017s\220<CX1\274\231\272\016\274\314\253\207\274j\254.\275\366T\307\274[T\t\274\325L =\222\010*=\351\315#\275\253\036 <\367@\036=\322:\315\272\243?\037\275\371\264Q\275y\316o<\211z\204\273L\350\256:C\031X=\021\327\370\274\344\272\367<(\372\370<\374\204\252;e\222E=E\370\276;;n[=K\177\324\274\336\305n<c\303\334<_O\013\274\005\200[\2759\224\365\273#\336 \275,\371<\275+\271\334\274\261\0063\275\314\225\353\272c\212\026\275{&;\273\324\323\013=Km\254<\306\2517=\271\3708=\227;\361;[7==lD\034=\210\335A=s\204(;\256\304\035\275\234\324Z:\245\372\344\273\277\356\013=\206\202#=\177\206\251\274\334\225\315\274\350\220%=\267]-\275\n\343\353;Q\301D\275\241\335\002\275\177@\343\274\327\310\277\272+\371\033=97\323\274\035i)\275\2300\026=\213\344\326\274\177j\266\274\tGN<)\206\306:\370\233\302<\330c\244<\364\362\017=d\241F=\'\034\341\274\341\244:\274\260\233\"\275~o,<\020\017\367\274\346\315I\275\235\3402=\242\2008=\231v\210\274 G\r=S\0223\275\210\344X\275\211FS\272\357.\373\274\246\230\013\27551(=\271\204<=\367\027\034=\334\260$\275\213\177%;\214\004\315<\275\312\342<\2518\360\273\200F\215\274\023\321\026=\262\034\023\274\037d>\274\347\341@=\024\267\337<\002\375!\275\355c\206<\367\030\301\273\366\313\007\275\364\376Q\275\220\001Y=\247\352\332\274\275h)\275f\216\032=\267\037\207;\323L\341;\326\341\253:\260\201&=\016-\300<\223@\023=\331\035\010\275\247\214\n\275,\364J=\323\300\375\274{\177\345<JO\254<\307PN\275cG\346\273\250\325\357<P\3019\275>O\216<\350ZK\274\235\324\346\274\264\315\206<\272\227;=\177_\321\274\217\324\231\274@y\2149\013\251\276<\346\356\277\274\326\013\230\271\266x\353<\031\261f;nP\037=|\345I\274[\267\341\270[\324r<\335\325O=\276\201$\275=\224\257<)\366\367\274\366\271\036=\271i\334\274\177\2133=\320\334\322;\327\212l<\025\323\020=\301\224X=\334\340F\2753\263\027\275\3356\273<S}&\273*p\202\274C\3221<Q\254\006=\002\226,\275\223\377\236<\365\306L=Ia\320:\330V=\275\310\010\346\274\244;\"<\312N\027\275\325\203\227<\021\205V<%g\260\273\372\271\213\274\177o&\275\262\264F\275\303\343\021\275.P\t=2>\031=\205\217E\275P\3567\274\221\027\000=\377~<=\240\316\250<K\367c\274\002\257O\275\274\3046=\210c\232\271t\242\022\275\273y\021=x\327\373\274Sej:i?\302;h\227\247\274\324\245\323\274\365!\360\274f!\r=\022\023\272\274ty\375<g\217\362\274\331\335$\275\225wx\274\234U\232\273\000\347\'=\220>\213<\257\247\005=p\322\267\274\334\3575=\317\220\216\274\223fG=u\\#=\266\302&=\000\200\331<\350\024S=\265\300\363<\007\253/<\352P\000=\320|\315\274\337U\232\274\337\213\027;&}&\274\025N\336<d\324 \273(\031B<\315\205Z=\344\021\005\274w\375\332\274\357\366B=\013b4<\353B\333\274\337\014\016\274\007\265\"=\205z,\274p\026\373\274\002\270\326<aEt<\010jS=3.\356\274\354\247\000=\r\367\213;\177\0352\275\210\331\246<\025#\022\275\277\rS\275\241\320\261<\240\017.=\023\343\027\275-\355=9\007\024 \274*d\031=\214\3745\275\302)[<\300?\310;\244\030M\275$\343\'\274C\237?:\216\366\266<\264\201\274\274m\3318=\224A?=\236\364\327\274\025\346l<\342{-=\t\205-=B\271,=/\022\034=YK\031;mlj\274y\271\330;\200\324\313\274\226\007\036\274\003\262a\274\271g\324<\277\302\316<\350(\356<\271\326\247\274\237\302\212<\375\304v9\017\330.<\311\273\273\274\355\nB\274\032}3=\3433\024\275\255\2667=\276\177\241\274=e\275\274\213\2333=\323@Q\275\354\002\032\274\357\007\007=\320KZ:CQ\016\275\343\362\322\274\026\314X:QC\213\274\014\005\"<\306<\001;\257\203\177:\222\000F<;e\206\274Y\276\314\274\261\216l<\3657B=\330\354:\275\217\304/=\242\n[=\334\005\247<\240\025\005:\313\013\264<\007\3040=\236|V=\003J&=m\204\212\274\205AS\274\220\372\021\275\030\333\332\274\307s\343<D1(\274\240\363\\<w\243z\274\375\367\037=2\354~;m5\021\275\004\377[\275[\300C<\247\267N=*\336>=-E\343<\025\016A=\220\314\010=Kl\241<!\243\217\274\356;\334;W\236h\274,s/\275QA\275<*pJ\273\347\366\034=\304\276\224\274\262\211\301<\177\304\002\274\241B\025<\007\316==\250\370L<\362\323\010=\006\036^<F\030\'=\004\360\355\274!q\327\274W.?<1!\337</W\373\274T\017\245<\344\314\205<\232\360\'=*\271\261<\322x$=/hu\274\004Y\310\274\304\006&=Q\213X\2756b[=\366\206\312<\024\374\365\274x\217\000=\360\212Q=\002\271\002=q\253\306<\277X\326\274\032\255@=\310*+\274\246H\330<\343\021 \275\337\257\360\274,\200X<\007\376\254\274\320,\216\274Jv\t=\247\370\022\275\217\352\'\274\023\313\361<;&l<\321\262\177\274\344\250X=\353+\266;\355\274&=\262W\343\273(\301\224;\214!\333\273\030\241>\272\371\002\241<E\373\375\272\035\224\315\274\003n\207\273<m\022=\024\266\"\275f\213\024\275\001\360A\275\232\237d\274\251\021\255;\003\325I=Py\260</\357\357\273\262\314.<\013l\320\274BI\023=\362@B\271\302Oi\2738\327A=Kq%=p\375\033=\216!\240\274\354YS=\030$-=\230\341\002\275\205X1<\226\266B==\300+=d\nK\274,\210F\275#\260\226<\006\334O\275s&\363\274S\340\r=^mL=\264\217k\274\222\253%\273\300\325e\274^q\317\274\311m9=\323\232\000\2759s\277<y\305\277<\246*\310\274\373\037\202<8\202H\273\330\005W=\014\320\273:\2006\261\274\364\330\037\275\335\3300\275\353\324\207<\247&\037=\264\361\035=\325r\212<\326O\006\275\200\373\3657\240#\264\273\303D\034\274\306\035\244<!\313\210;Gbz\274\322J#=\203[\305<);F=\265\343D;\253\366\244<\337\274O\275\304\241\003\275\253J\260\274\335*}<\245\217!<\205^\232;\037\216==\274\365\027\275^\250\005=\363?:\275\022\2778\275\177El<1\305\236\274\006EU=\023-\333\274\222u\222<1\025\021\275\377^,\2757?\000=`\303\006\273\312\337\013=\233\020\031\275\341\220\036\275vG\334\274\244\002\030<\354\322\376;\207\022\036=F&\301<\347mV\275\005x\026\275,\230\017=\244\234\207\274\274\257G;\003\316+=.t\335\273\264/\342\2742{\031\275\2204#=\3372\361\273+\203\222<\014\371\267;SA\021\275\271\207\014\274z\324v<\326\264+=\351_\211\274\252oE<\3140\005<\356]\\\273j\220T=R\022\370< \270\263\274i\205G=\233\354R=f\026\275;vB7=\250\244\310<\201\230\252<\324\255j<\010p\030\275W\277C<\321\253\252\274\335\322\357<\304\252Q=\227\270w\274\341\006\r\275\211_D\274\343?P\2749+\216<\362rC=#\312\242\274l\346\375\274BLF\275G\331\354<\3105z\273n\370a\274\306\324\276\274\004\200<<\021\353\365\274Ac\023=\347Y\336;\221\202;\274\022qI=\326\365\327<\005\327\000<\"\226/=\242\2458=\264\245}\274q\212\037<\312&\033\275\312rn\274\035\312\033=4\000\252\274\242\3339\275P\2605\275\225j\036\275l\305[\275\033*\377\273GS\344<\346\215\345<\372\030\252\273&\276Q\274\255e-<\246\320U<fn\007\275O\271\232<\024\1770\275\244\302\251<\233\032\363<\374\023j\274;0\034=\'\246\363\274=eG\275<\005\001\275X\024\217\274\033i?=\355mW=\363\334\000\275\253C\026=\031\353\220\274\225\2416\275U\242\367\274v=\310\273\211;\037=x\016\202;\254j7<\213\203\n=S\206\005=\032\231W=%\"\027=\353\326\207<h\275\007=\243\007\241\274vV\016\274\335\022x;y.Z=\250\351\016\274\007\266\256<_BE=\271\211B\275\351x\345\274N:!=\353^;9\364dS=\263\036 =\367;\001=\232\252,\275\233\246\027<BW\373\274\362g;\275\322l\241<\212\340\t;$\211X\275\3319W\275\034\274U\275 \215W\275v2\326\274M<\010\274\272m\240<A\210\"=\315\351M=\310\340\266<\301\262\314\274\004\242\005=\267\334\244<\021D\021=\220\333-=\030\0266\274\352`^<D\035\255\274\224\263\n\275\322\035\024=\001\364\003\274l\226\030=\037\320\276\274\263=\277<\205\234U\275\201vM=\r\r\275\273\264)\330\274\036\247\n\275\231\373\223\274.F1\273\252E:=\274\271\316\274W7\037=\266\276\033\274d\036\241<\211\317\250\274\240\267\332\274\317\335:\2758K\032<\364u\316<\3509\360\274E\2609=Ey\206\274\301\240R\274p\352\270<\237\030\203;\365\200R\275\221\367\364\274\221\344\037=\247\025e<\027\210\231<\250\241\355\273\221\373\020\275!\346x\274\260\307\212<R\214\034\275\256V\213\274\277\250\332\274x\324\333\274\262\021\341<w\023\311<\330W\200\272\221\010\033=W\3214\275\204\014-=\333\240c\274\017\333\312<\007\217\245\274_\014\024<MW\277<\377+g\274\205\302\211\2722\344$=\005,\231\274\355\\\265;d\243C=\204\370[\275\024[\'=\364\305w\274u\204\364\274\227\205H\273\327{\343;/5\001=\353L\357\274k\247\356\274/\371!\274\243\364\312\2743\303\210;,\013\231<\033l\315<\273F\023=\031i\"=|\221G\275\350\354\365<:)\325\274-n4\275\227\"T\275\"\356J\272F\264\211\274\245\376\360\274\014\010\006\272\'\tv\274\266;7\273\035\\)=\\0\304\274\255M\262<\300\tS\272;\373T=\036\250?\274\363\223\235\273$\240F=\313\227-\273\315;*\275\343bU:\276MS=\202`\221\2745\360\017;D/D\275e(\360\2748\337=\274\357\373\021\274\274\030\214\273\260nS=Rd\"=\240\266\003=\023mM\275M^\271<\007\374\247\274\030\307r\274\345\023S=\314\254\000=\240t\323\274\273X\206\274\351hA\275T\035B\274S\n\243<)\244\227\272l\021\335\274\320(><\275\363,\275\023fD\275\303\205\032\275i\376)\275_6F=\344\364\027=\336\227\327<N\255{:\242R\026=\346\373\026=.\231\320:\256v\245\274\330\367\025=\205p\333\274\274\246\362\274YR\003=\226\006!\273v\354S;g\332\274\274\360&\265;\3133\376\274\312r\026=#\t\027\275d\3725\275\346\262-=\320\211\274\273T\013\230\274}\221\033\274\r\2451\275\373q&=\206\t\262<\0077\321\274^\213M\275\242\361\260:\366D\343\273\316\335\021=\364\320\013;\247\254\037<\247\230\230\273s\357\002=\246\304\331<\224Z\013\275\003\216\t< \350\306;y\343\327\272\255\322J\275\032\177\034\275\200h\260<\324\036J\275\277\255\201\274}Q\031=\324\275C\275\316\235\277\274\316\"@\275\006g)<+A\354\274\264YA=l>\342\274\331nQ<\003\3465=x\325\261\274H\353\003<\0368J=6\272\024\275\013\315K\275\347w\371<\216!q<\\L\226\274H\340\273\273\20563\275\235\016u<\225\221\305<\321@\030\275p6B\275\300\037\\=s\233\234<\270/>\273\374\033\223<\270\2171\275\264\327\3559\272\207==2\246\221<\331 \315<c\344/=\226\003%=\357\375*=P\025\270<o\020\033=\354\001\213\272\267\325%=\344\\-\275Z\210\020=]R\374<Mv=\275F\307\207\274\354\0261<h\322\235<\025\344V\275\354@L=\243\267\001=hdK\275,Tm<E\306\243<\326\024\014=w\245O\274\370\267\320<Kw==\njz\274\211x\364\274\335}R\275\250\241\235\274B\006\355\274#\376#=_WA\275\"\021-=\005_%\275\374[D=y\343\027=\036\377\252<\242o\010\275\021\000[\275&\375\202<&\273,<\373o\010\273\330\276\242\274Q#K=~\210\022=`Q\370\274\326\241\341<\034 \262<Mu\032\273\275\037\210\274\023\270&=\002`\332<\344\025\223<\021\237+=\304\304v\274\351`\025;\247\216\265:$\346\"=(\207\316\274@\026@:\350\016\351<\314\332\035\275\333+G=\344\325V\275\303\326z\274A\236Y\275/h\016\274b\333J=\303E\360<\342X\233;\273B\001\273\036\232>=\017\224\236\274\247\247\355<\226F\035\274\306\317l<wS\025=\254\372\014;duH\273c3*\275Id>=\310\2505\274\340-+\275|\177\360\274A\222\256<ZWq<D\374\010\275\001tV\275\254\3173=\037\371I=\352\377/=\234\t\240<\274\265A=CUG=\350\246M=\316^0<\374\233\006\275\037\001\010<m\245!=eO6\275\375\350\034=\250\025\225\274\370uM\275\252\333A<\023\337$\275\357\374\310\274^\021\033\275/\t\206\274c\265F=G\320S=\036wI=\002\215z\274\371\251X=\356U\310\274\272\223\223\273~\352\025\275\250\227\007\275z\3763\275J\334\243<\364\276\354\274s\207\324<xo$=\364\3402=\0173\263<;\204\364\274\213k\272\274\375\036G\2758\200\027\275N\250>= o\327\274Q\003\271;&HH\275r\"\023={\317y;\034\375\006\275U\2562=L\362H=\t\017>\275\324\372\235\274v\251\023\275\010v\027\274\202@\270<<>|;\346 \021\275\234eP\275\037=\'=\311\316\226<p\352E:\206f\212<\026y(\275\337H\026=))\025=}:\375\274\216\2135=\267(\"=\t\3328<\372\371N\275\265v\034\275\341`\343\274H\026\272\274\216\213%\271\327\264\036\275\177\"\372<\241\256\005=\232}\315\274\372\\\224<K\334\027\274\332\014I\275\217y\251<\241\343\t=\001G\300<\005\267\331\274e\004\362\274\304Q\017\275\340\227C=Ei\220\274\246\220\344<>\255\330\274\317\250I<\323\356\372</\352\322:\244\267*\275\203#\304\274\317\220\021\275+\251\t\275\230\363\224\274+&F\275h\262\354<\240\021<=\363\356z\274\244\212\216\274\315\366\215<(\031\370\273ZD5;)\302-\275\362\231Y=g\267\005=\273;\006\275\206\304r\273\020\'\032=J</<\205\3478\274\304\333\035=q#l;\227\200\202\273\220\377:=\241e*\275\265\331\311\274\341\345e\274\302\301\242\274\360\2537\275\206&\315<J\031\263\274t\303\017=\272\020\014\275\317\344\244\274\037\335C=\022\273-=\371U\315\273\363\333\r=\203:\031=\307&\023\275\t)\244<\220cA=\301\332E\275\007\016\371<\260\356\'=\207\333\027=\025\007&=\215\"\215<U\351V\275H\214\337;^ @=\365u)=W\014>=\277\220\023=\367\024\027\275\207\031\321\274\007\030\300<\272e\310\274\002H<=\334\006\312\274G\313\032\275\251\033\027\275wZ\227<@\032\032\275\002@\006;mx\017\275 \2073\275\036\347I=\3362h\274\t\r\n\275\331Hg\274Z\375+\275\275G\211;\273\003\215\274(\236-=\311\244\251<\002-H\275\262\273\014\274U\037?=\023\255\026\275\352B\201\271z\005n;Eq\323\274\027n\023=S\224\024\275\243\316\305\274/\017\027\274\022\332&\275\344(\225\273\035\330\000=\327\273\347<_\310J\274\337\377A\275\201\234\365<\317\265\202\273\225`/=\373\327\007=\272\372\006\274S_\035=$\263\272\274.\265\366\274!\006\305\273\022lK=\224[_\273,\365\013\275~j\307<\246\377\024\275\304\n\007\275\216\251\321;\304]x;\273p\356;\3124V\275\253D\244\273\362V-\275\037\t\014=.Z;<\271\032\350\274\003\275\210;[1\371\274\266\361\201;\363\2672\275\177\310\272<\243`\017\275\014E\230\274Z\344d\271lU\303\274\317\363\264<\333\202*=\335kW;O\355\301\272\264x\275\274\211b\350\274V\347\023=\207\036<<\313 Z\275E\353\232<\036l\337<Nj\003\275\212\212 \275\247\217D\275\014\364P=\306Y3=6c\322<\034\256\r\275\007\240K\274\337\233\t=b\350\033=\212.N=\002\256\373\274\n\250\314\274\224X\344\273\204\r\030\275u\252\006=\322\332\251:x\004\247<\211H\345\274C\276\210<Zo5\274\rs\222\273\365\363\233<\312\247\331\273\201\305\020=\325\207@\275\232\262>=\220\037\372\274X\"}\274iI\376\274a\303\013=\022\014K=R\314\336<\366_9=\220\255\335;\030^9\275\225B\300\274\247\033\242\272\246\356\275<\274\203>=>\250\031=6\2057\275\352\205\251\2743\317S\275xS\334\274\220\221\243\273\373\221?=\365hP\275\233$\'\275\364\311#\275\256m\340<\2248\373:\223\215\005=\341\211+:u\252\210\274\t\227|<,\273\262\274y]\244\274\264!\373<\177\234d\274b\2247=\311n\323\274<\023\362;r[,<\305\224!\275\006\236W=D\355\004\274\372o\026\2756\007\235\274^\n\371<\301Tq<\372C\330;\232\217\022\274\303\320\031=\273U[=\340\233\034=\335~\273<\317\363t<I`h\274>X,\275ru_\274<\025\007= \r\263\274\327\215\';\360rW=[W\247<Gk!<\333\2251=\346k =\331\307,;\n\224k\274\006\030(\275\225\nP=\r\201\203<\324\347\013=\035\203r<\003W\022<\216q\202<\302\343\036\275\rR\205;\027C\273;\277\177J=\245\274\257\274J\326J=\031\253Y\274n\036\340\274\357)\254\274^\003\251<\266a\356;k\356\241\274\023\233\233\272%\021\304<\017A\233;\244\213\222\274:7\257\274V\270K\275\372ZY=\326\0102\273\037v\215<\204\032\2709\265\316\024\274\257h\r<?\017\226\274\0053\007<R\271\250<C\274\332<b\3506\275\307\232\266<>i\366\274\235Eo;h\0060=\272M\355<\312Y\235;{\247L\275\321Q\001\275\260\346(\275\367\307\317<0\002L=\034\317\025=\177\224L=\230_\323;\377e\240\274(\0016;\270\022\004=\010\206\026=\026>\r\275\\\244\241<IPV=\niU\275\270!]<\nc\220<,\t\227\274\236\252\337:\372b\004=\272\005\201<4M\001\275\351\004\337\274 \214\273\272\301{\255\274\215\347\366:\026\261Q\275o\350E\274\225\216\035=zk\350<\000\246\221;J\350A=\366\321\220<\n\305\355\274\257Z$=\224\236}\2746\362W=\2741p;`yB=\361*\264<\231\264\231;\224\021T<z\341 =\033\351:\275\205\243H=1\032\361\274\350j1;P)\353\274v\211Q\274-`B=\024\014\224\273\036z\024\274\213,\"=\274\242\3248\361\330\240\272\222\247\364<`\350p;A\262\234<jgA=\341\330\r<\310UP=\361>O\275\253\304\213\274c\335D=\257V\010=\206 \023<\204\205\365;\332\225\003\275\272t\207\274f\242\376\274Z\213\363\272\2429\026<\333\\\315:\376<+=?\215N=\032\240\366<tuK=\003&\034\274t\020\223<1\317\305<\322\362\253\274\344\025\r\275\343D[;\277C\200\274\331\222X=\017\027\362<C\377\000\275\365\317=\275\316\\\246\273g\343\255<\206\272 \275\020\235\023\274\3077\214<\355\0210\275\203\016\036\275\252>\023=\316o\026=?1\312;\355\335\314\274\034!\361<}x(=\374\363K;iW\311\274H\314[\274\313\261\232\273#f\244<<G\016\273JW@\275\365_\r\275\025L <8G\350<\362\360-=\n] =\r\035\006\275\350j\377<Vb\212\274S\236\236<\252\034\314<\014\371\027=\251_\004=v\310%\274\275\250G\275\311\301N\274.\275\336<\204\303\230\273\234\217\262\274\201\331\r=\216\362;<\253\021!\275\246\304\251\274>\367\001=29\346\273\213\3522\275\000l\367\273G\250\210:c\341B\274\n\326:=;\202B\275\270u\017<\343\033\321<q\n\260;W\317\024=\334\364\274<\347\364P=WS\035<[\243\361\274\031n\"=\007\337\351\273r\337\'=\310\322\360\273\"\373S=\222\240\010=\327\tK\274\003\262\313\273\266\276\003\275||S\275k\245\230<\265\361h\273\245\\\203\274g\274l<\212Y\311<G_P=\305\361\023=\004\014\022=\030\000\004\275\r\3368\275\337\361V=t\375\n=t\205\263\273Yj\027\274\250h\202<\337\250\253\274\001\255\026\274\375G\022=\343LM\273\346\005H\274#u\206<\2251\023;\355pl;\357\026\315\274w\277\004\274d\365I\275\372S\255\274\023\000\003\274y\t\346<\357y\225\274\236\032\016\275\225\272\247\272\250\0210\273RN\003<\r,O\275\214\002\215\274\336}\007\274\371\355T=\321_P<|<\374\274\371I\032=\226\306\'\274\335rU=\350(J=~c\336\274uL\033=\360\021\026\275\256C\014=\215\342\013\275\030\263;\275\033\363#=7%\330<\305J\020\2759J\227\274\210\305\203\274\333\316M\275\013\274\000=\342#\343\274wQ\342\274\237\216\331\274\0225\352\274\000\316n\274\003\3251\274\325\244)\275\264vC=\313\314\000\275N\217\207\273\251\013\341\274\345qp<\204-N\275^\301\"\274I\301\346<\277XL:1\345\325\274\307\305\026=\th\354<\021\244\003\275\226H\'=c^\032\275\252s-\274v\2567\274TRQ\2756\306K\275\250\271\037=\023Y\'<\313\027\033<\255\241a<Ia\261\272\355\256\273\274f\264\277<k5\021=\357\035\235<N\033\"\274J\010\377\273\003\032\375;6}\026\275-\034\374\274?\210\273<\022\306r<\332^\003=\252+-\275\217O\326<\202\0325=\0163/\275\'\202T\274\343\317C\275}\2069<\277/W\274m!\304<s#[<\370\010\261\274\254\027r<\243\025 \274U\340b\274\026\037\240\274ur\344\272L\260\252\273\253\244\334\274*\201\334\274\314X\240<\244e\321\273\006\342?\275EF\331\273\367\036N\275\200\355\236<\006\261\253<C\367\236\274\244V\301:\"\354\023=+y\217\274\242\222\236\274\2166\253\274\365\237\320<\207\031G=8\313(=?\330\213<m\245\206\274\033qp<5\261\207<\371$)\275\360\332\027\275\221-\027\275N\245\005=\257\0242\275\201\214\364\274\202\376\331;g\206\257\274\200\020\225\270\241\263\203\274\354>\264\274\357o\020=\367\271/<\033\031\032=\355\333\n\274\035T\021\273\225\267A=\tc\216<:P\251<\004 \206;\241y\205\274M\363\022=\247\226\022\274\323\206R=T\274\254\274\335#\031=]]Q=\2309{<%\351p\274\\\001L=\252\2451=S\022\026=\225l\037\275\377\340!\275~%\266<,z4\275\356\315K\275\356\020G\274\030\3153\274\360b\336<97N<)K\223<<\323\031\275c*\036=\243y:=\033\017F=\231.\215<\003}p<\ro\246\274\250\316\013=ik\030\2759\261\206<\342\377\007=\270_9=\372\274S\275p\035\234<\324\207V\275\260\376\036\273\215\314\243;\332OP\275\215\301\r\273\0346\263\274\270<\357;s\034\252\273\215\241\313\274\022e\343<6\020C=\306\211\367<d%=\273B\353O=bo\343<Q\243\016<\336\350\016=\3613\325;B\177a;\260k1<\022\204\r\274\260\2079=\014[J\275\032\027#\274\037U\373\274\000\346$\272\203\336\352<u\326\351<\217\235\006=f]*\275-)\256<\223mT=\021L\377\274U\0258=\027\224\017\2740wP\275i\307~;):\250;ea\267\274l\265\006=D\023\343\274\202\027\233<\246\352Q\275Rs\230\274\261\014\370<-:\220<\224\223-=\342+N=\242\304\277\274\321\266\355;\245\331\374\273\225\005\360;\262\005\014\275\017\272\332\274\226\371n<f\\\341\273\030\211O<u\004\033=^\256;\274\212\340!=\214D\216\274)\326\314<?\\O\274\013\310\250<\370\014,=ou\203\274\265\023\3619E\003\315\272\262y\235<\244x\375\274\016\223F;\316\007\r\274t\306)=\033\234\305<;bL\273\216\022\006=\2325\034\275\215U\371<1\245\262;\007\234\233:\335\343+\275\347}\036=\357x\206\274i\2472\275R+/\273\316p\007=z\272\261\273G\000-\275\037O\032\275l\n`<a-Q<v\244N=h\201J\274\254\007\336\274\241\301H\2758\314\200<\007i\253<\375\"\006\275\215r\\=\226\245;=\323\337T\275\351\265[\275\n&\206\274\330\271G<\324;\340\274\361\336\263\274\377\001\236<\235\020U\275!\336\022=\244S\210\2745\302P\274\307>\022<X\023K\275\334>\224<v#\234\274\320^\306\274\272\223\201<\006s\245\273\204{W<\014\334\226\273u\235\364;[\355\253< \024Y\274\3378\036\275J\365\000=`\226\207;\210\303/\275PUR=vfW=\320\247U\275\014\235k<\376\201<\275`\222\246\273k\351\302\274^\203\225<\325`\231<\356\226\013\275=E\r\275\357=U\275\243/F\275\002k+\275\016#\013<\035\213A\274\006\301\255<\347F\177\274\311\375\001=y2\025=\3614\223\274\026\026\302;j\313\024=6\223\"\273\315w\251\274!\006<=\243\225m\273\346\216\272<\324\204\320\274\006[%\275\022\226\252\274\251\221F<S\312\257<\\\246e\274\300\017\022:Yv*\275\370\3642\274\241\'=\275\330\2708\275\273\226\360\274\235x\350\272\330\232M=\332\340\0039\002\031\006\274\266\240=\275|\352b\273\220\236(\275\374\224S=\362i,=]\311\025=\000U\223\274\014\310\364<Z\363\343\273\013:\005\275e\334B=\200\337>\275\240\214 =\371\335\021=\363\002K=\375S\024=\0237\257\274\247ej\274\001\310s\274\001R&\273\305-\341<CG\263\274{WE=\344\306X=eGH\274{QS\275\274+4\272_\212\010\275\337\375\021=Z\321B\274\322\214\240\271\203p\023\275\343\335\231<L\305\302\274\020\200\273<\033#\013\274\342\202\"=\314\211\210\273(\275Z<\337\005V\274\275`\360<x\374\'=P\342L\274\225\347\036\274\312U1\274\352\036\341\274X\'M=\247&Y\275\220\311\342<\n\201)\275ck\'\274J_\006=\322\224J=\213\2655=\372\273\306\274\216\026\260\274\357\207@\275\273a\255\273\242?\271<M\277\037=NI\216\272\245\200\300:c\030t;+I2=\322\"\275\2740\332\021\274\200\2275\275K4\311<\253U\n;}\215f<\334\310\205<\331\336,\275\330\0201\275\021\306A\275\"Q\356;\2559\300\274\362h\002\274\024\027[\275fu\232<\302\242\302\274\017\217)=\025/A=X\251\211<Mw\236\274\221\310^<w\247\006\275\224\331\244\274r\215\001\275\023).\274\'$\235\273\201\214\342\274\250\240\234\274\261.<\274<\343\020=\364\317\361<\007\036\347;\357\371&=\224\031\032\274\005o\003\275\201\203\335\2742\022\\\273\224\275,\275\256@+\275eN\014\275R\005V\275l\365\231\2730\311/\274\023\016L\275\002\327@=\367\315\255<le.=\276\366\333<\203\026N<\254\224\014<B\353J<\253\023Z=\037]\024\274\365\005U=\317M\310<_O\"=\034\334G;f\2309\275y+\004<\256g\334;\345\010?\275\nO6=\276\325q\274\330s\232<\266\377\t:\034\251\005\274k\033\010\275s\031J\273&\005m<?d\021\275a\305\251<\302x\235<\342/4<\210Q\334<\235\013\325;FE\017=\244^\357\274\250\371(\275\266v\025=*\334Q\275=1\377<\022/\355\274\263 =<k7\013\275\226\033\010<\236@8=\323\007\376<\023\331\246<\216\204\213<\251\317\207<\363\276\r=\343\206H\275fhS\275\316\031\257\273\373\225\336\274X\233\265;k\357\002=\370@1\275y\332o\273\277\t\341\274\207\033\036=\003tX\275ehX\275\320\3304\275\313\026X\274\374\"\004=\335?\013\275}\354\272\272\333{\025\275\267\020\367;\0260B\275\357\232!<\236\023\316\274\352v \275\213\032\370<\244\355\205;\212f\'\275K_%\275\tu\224<P\026\260<\242\316\342\274\347KO=\312\'z\274\364\333\264\274\'>\016\272t\207\240\274u\234\323\274\310\376\350\274\343w/=O/\334\273\227\025\003<\312\025I=\332iI\275\203wH\274\327\241\\<\021k\n=\370\0317=\244\000\360\273\263\233\264\274i\222\262<\332\302\035=,U8=\207\014%\275\023i\036=\222\201w\274o\003\216\273\021\313\235:\345\376\034<\004\350\t=\233KX;\233\'Z\275\333gP=\304\2717=\177#=\275;{|\274\263\300\031\274sf\364\274\364\303\362\274\200\202\016\275X\023\027=\002\311\230<\225\271\t=\337\310\007\274`\014\032<\377\203\016\275\305v\241\274\262\247\374;\335\007\347<\330\324\347\274\305\024\315\274\213d\020<Uu%\275\026\365h<\341\362M=\223{U=\310\014\003\275}\364\037\275\350\376L<\320\024\364<FbG\275D(\244<x\247\213<u\316\232<\362\342\n\275\374[\000<I\273D=qT);U\364==\251\275\031\275W>\312\274\357\007\205<M\351\021=k0\010\275\357\350\203\274i\036?\275\360\231?=\322h\240\273\367\247\233<\315\261\t\275\235\242Q\2745\256!\275\354\003\267<\3314\010=V\031\036=9\032\004=\323\240\033=u\324\306\274\177\270\251\274\003~\312<\337\013\006\275\25368;\255B$=\340s\'=\360?4=\036Yl<\230\244\r=\376\366\234<(\232\"=:x&=\'\305w\273]\241F=\307\347$\275\250\247:=\321\n =9\302\005=\263\025\201\274\312\247:\274\306\204i<\351O\231\274oVK\275t\236F=\263;\235<H`H=\223u;<P\322\261;I\3570\275\261\226\027<6\252\n=\202p\030=\261\317Q<\270\377\202\274\327\177\303<\260\\)=F\377\231<\252#\037\275\026\360\272\274\243\322)\275\374w\017=Qw\226\271H\024I=\226)W;\310t\245<%>\244\274\376\2657=\321\212#=\370SV\275\356*\347;\334\024\271<\324e\'\275jC\363\272\364\337[\275\274\232\226\274\035*\250\274\031O\316<\301\322\273<\256\020\330\274\302Fs<\314\203\003=\227\372 \274J\277\277<BI\000\275\353\346\364<6eX=\243\203\325\274\003\n\354<\220\237\320;[\225/<\275\016\031\275\"\352f<\202\244\003\272O\241\336<\013\222\000\275}\213\022=\021\204\371\274:_p\270\273\225\004=\331PM\275mGS=\024\211I\275<\220$\275\351\025L\274E\226:=\257\033\000\275\261\277\242<\017Rl\274a\tJ\275\200\314~\274N\376:\275\307\234y;\325_\376\274\223\023n<\350c=\275|\317\243<\n\237\r=v\034\016\275\300\223\010\275\231\212\035= ;P\2750\210\272<\266\027\005=\232\377\305<St\340<\t\347\315<\214E\020\275\252\3124\274\254\243s\274[`\036\272\266+h<\303>D<B#,={l\201\274\255\2176=\312\264\323<G\235\220<6\322\240\274\001\374\007\275\240D\213\274/FG=\325oV=j\037\351\274\215\260\000\274s\035r\274\003\317S\275R\275,\275\t\205;\275Z\037\016\275\372\300\005\275\237\033\337\274\017\036R=\3024\225<\372\351\311;\017}O=h\2024=c\316\213\274\372\314\236<\355\202-=yE\365;\320\351Y=\342u\203<\365hZ<\022+\356\273\274\227\326\274\264K\t\274\361)2\275<[\321\274\314\305\326\274\254\273s\273Y\0362\274C5\312<}\241\266;\2604?\274P\\\023=n;\245\274}\256\346\272\3637\345\274[\016\313\274<\023`<\033\001\301<4LU\275\005%\340<\302\215\253\274\225H2=A!\'\275\224%:\275\343\242\320<\'M\307\274\337\221v<S\254D=H<!\274\372\2329=\342)\243\274\322\316\264<\366@F\274[SZ=\010\003\374<@\021.\275\302\354\264:Y\273\337\273\335\231\234<\023@\275<F\245\225<\014\026\005=\346$\024\274\255\353\214<\325f\262<\3653\025=\263\226$=\347\223U=t\354.\273v\213\251<\337l\023=\302\315-=\013\276+<w\t=<\272\377D=\204p?=t\354\033=\272\235\\=\004I\340\274\014\365\233<\245\3541=Y\312@=Vx\206:\375E8=1\234\037<\227\306\314\273\371; \274\210C\t=\013(\251;IT6\272\023V4<\"\254\302<3\305\352\273\207\200\237<e\202.\275\026\037R=Z\310\016\275m\270\224<elP<h\245H\275\272\222\271\273~\234\'=\317\335G=\\\313\030\274\r\340\225\273\300\355\243\273:1\277\274\231P!\275\256AZ=?\3319=[d\353;F\000\303<\030\357h\272\020\247\224\274\206&\202<\342\256`\274\352\\\016\275\343\304 =;\255J=\326\330\"\275\372\230R=On\212<]\330Z\275\342\272C=\250\261\025\275\373\252(\275-\243\007\275\266GD<]d\327;L%\301\274\216;\024=ar\004\275\265\257V=\010\226\310;\001p\001<\010B6=\304\013\335<\241\350\'\274\305\r\232:#\337\332;v\301\364<\312\035L=\233\277)\2749\033\224< \203\232\272\346\354\236<\220\230L=\257(B\274o\217\266\273\374~\016=h%R=\202\332\244<\252^Y\275\200\371U\275\240KA\275\177\\\246<\360^\346\274<\332\250\274(\243E==\233\343\273\354\263\345<\210\224N=-\004\242<\257\272 \275\"\2145\275Q\335\206<\035\241?=kc|\274\215]L=Q5u<\350C!=D0\325\274%\247\226\273\345\333\216<Z\3362\275!\'#<\376\323\003\274\334\211\366\274\017\360\356<X\207\244\273\341\222K\273\002\236{\274\250l\002\273>\211g<*w\000<u;i:f>=\275\377\361\206\274\241\222\005=\323\020\036\275:\377\342;\222\242N\275\021\277\267<\026\260\305<\236\020\\=\006\2755=az)=%c\277<\326\220\237<\262\341\346<\030\374\300\274\177c\006=y\024\317<\366)|\274\214+U=\005_p<-7\t\275\2624\305:GY!\275\205\356=\275*\207!<\024k\261<k\370[\275\223}\206\274\225\353\032\275\221R\216\271,E\352\274\326\326\005=\342\253\270<AG\247;\233.\003=z\267\010\275\22503;-\316O=\223q\241\274\004\213\202;x\233\031=+~\303<\017q\r\275]\354\305\274\332\261 =_\2736<\210\345\340\273(y:\274\255\233\027\275jT\"=\266aL=H\352\003<\262\211\314\2747!\210<F(\371<g\265-\275\323\007\236\274\37620=\276\366\365\274\243\323?<0\002\343\274\017\257\"\273\310\212\025\274\235#\027\275\013\276\032=\036\367\006<\2631\220\274%h(\275S\374.=l\036\367\273\027\317\364:D\313%\275e\225\025\2752\273\005=\334\336\033=#\035$=!\337c:5d)=~j\213\273\273\333\035\274\034\270T\275\226e\035\275<!U\275\2117S\275\307\247\352\274e\r\303\272v\227#\275\017\263;\275\037W\022\275\211\220\255\274\231\274\233\274=4\273<\332  =d\204H<*m\\=9\217R=V\010X\274\262\317R<\313\025\343\274\204\330><3\206\027\274\326Ql<\254\237\373\274\276d\300\2748\317\007\275\203\351\034<\025\304\013\275\334\330\331\274\013\353<\275\363b\355<\255Y*=\315\214\235\274\270\346\265\274Xu\306\274z\356*\273\271\350C=\212(\032\272\3644U\275\r{\330\273\371G4\274O\253-\275\215\344\027\275\254\223N\274F\262\365<iH\035=\271\266t<\213\025\024=\ri\246<\325kO\275\n\345\031\274\233\316\355<\374\232\373<\376\303\026=~>:<n\205\017<\270\364==4iu\274T\3209\275~\220\033<8V\006\275\241\t\014\275\342\233D=\341l8=\034\2372=\035i\033\273\254\321\003=\013\320\321\274\252:\001<\260\336\332:\001\256!=\355\226\n=\243\373\212\273<\375\252<7\rC=\024\003+=\327\334O\2755\031\r\275\336e\334<\005\2542\275\227p\265<Y:\002=,\017C\272\3364\017\275v(>\273\024\250\006=B\305\206<x\021*\274Q\2372=4\352D\275\232\361\277\274\036\225\332;1\035\234<F\035*=\213\0324\275\316\006b\273\244\320V\275x[u\274\221\353*\275\254Ib<\235\272S\274{\005D=\353\266x\274\363\243K=\216\234\010\273\2534\250<\340\302\031\275\207\315\257\272\367i\033=\305\3640=\301\006\006\271\337\264\207<\227\323:\275\252\313\026\275\346KU=\370\022\274<\226\0255\274\376\304\257\274\276]b<\300w@=Na\010=9\301\244<d6e\2748\2537\274\200ER\275\234(\017\275\036\313\340<b\002\030=\020\270a<2\363B\2752$\217<\236\247\203;l\226A=Y\217M=\361x[\275;\341A\275\237\2464=M\034\221<\352\006!=\316\377%\2753\260G\274-\006\336<>\025U\275\257-\233\274\317\215\271<wL0=\232\350\242\272>\372\323\274\372\222p<&s\022\275E\026\233\272 \371J=}+\314\274c\323E\275\316\031\256<2\273z<\272\261\351<\"q\025=\264\277 \275\365\255\005=\225\217{<\231\016K<I\314\t=M\245*=\217\351!<\372\003\227\273\n\026d\274\010\375\346<\375\356A=cJY=\261<\251<\257\374==\250\374\2318\373\325\260\274MV\020<Q\2662=EA\303\274\3473\264;\234\241\331;\206\212?\275\211[\354\273\'\206\007=$\304]<\246y\261<Zh\266\274\362q\377<\273{,\275i\234\003\273\026\346\273;\376\376\245\272L\310\303\274\224\235\356\274\3263\262\274\254\363\374\273\027{\352<n\007\036=q\005\'\275\027q\372\274\366l-<\260\002\036\275Z\210N\275\320\177\227<V\220\372:\223IB\275\342\212\205<3Ed\274\226\324\206\274Q\006\355:\263\2204\273\036\302W=\210;,\275T\314N\2756\343B<\247\210\243\274\021_Z\275\347\036Y=\3378P\275\336\354U=d\007h<\252\361\'\275\031\211\361<\022\210\025\275P:\303\274\345\3368\275]K\332<\231\371c\274!\223\013\275\234\236D=\323\326\241<\227\n$=z)\242\274\260\\#=k\343\037\274\032\350\033=S v\274a\352\027=\231\277\340<Gb\277\274\352\305,=\244\t%<\026\317\352\273\306T,\275\r^\003\275\335\222R<pfS=\201\350\'=FB\007\275\321\010\206;8\'J\274\224\250\304<\370l\300\271\031\346\206\274\255\271\300\272\316\276b<\314\025\270\273\"\251\031=n\0044\273\2079\035\273\321\017o<\027\241\313:~\242C=\314g\013\275\0040(=n<\035=V\371V\275|\024\345:\310\377\206\274\237,#=<oC\275\251\214\030=\363_\325\274y\210 \275\036X^<\031\344\302\273{\0365\275\273T\030;\324CS\274!\235\211\274\301S\311<%\236I= Q\r\274L\214\306\274\377D\361\274\\\200\211\2738 *\275\t\315\005\274=0\217<\265p\233<8\322\347\274\267\366 =\"\317>=\336\223\316\274m\264;=\205\325l:\341\272\241<Jj$=\326\020\320\274\376\022\024\275R:\373\274\345\007#\275\372\266\010\275\030;\020=`\2743\275A\344\303<wu&=\267^\234\273\005*\005\275T\210\261\274)\353@=\355\010\237\274\032DG=&\353\260\274Ha/\275\337\322F\275\302\234\263\274\364I\020=\352\341\342<&\253\004<~[\216<Z\314\367\274\252\235Q\275}\207\032=\205\220B\275\243}E\275u\321\'=K\255\325\274FJ\233<\265\201\025=#J\255\274%b\021\275\217z\035\2742\371\260<p\304\322<\374}\022<\267\240 =\327=\312\274\274\251\010\274\360F\243;\273\307\006\275\232\207&\274\026T\332<\330@.\2738/*=6\037\333\273\355\334\007\275\300j\t\275\257\000F\275\377\375\234:fG\\\275<\206[=\301\325\034\275&\0148=j\r\360<\252\212\257\274\030Z1=\205\213G\275<\227E\275)\321\025=B\207(=\372\017\005=$\220[<W\224\341\274u4?=\361\271\260;\23415\273j\3634\275\004\370X=\207lI\275\374\034t;\211\327\014\275\353\210\361\272\302\251\017\275l\224\020\274\331)\211<J :\274#\275\t=\032w^<\343\363!\275\351\225E<-\360\233<\373\214+\274\177\266\303;\244\205\350\274\353\353\374\274E\252,=\020\333\255<\244\243)\275\207\242X=_\367\356\272\255\234\001=\255\252T\274TqT<\306\030R=e\003>\2745#\300\273\024\256\257<\362\362F\2758wR<\211 =\271\000s\002=7\306\034=\253\375\341\274\362D\304<\273\035;<E\002D\275\343\027\313\272\262G\371\273U\311\024\275\367\346\210<\274\027\362\274\236\335\244<\260lY\275\352s\007\2754\345:\275q\014\236<\363\261\013\275\245\376Y:j\250\235<\255v?\275\316\300\004=\242\202\335<\006\376\023\27509\305<\327\251)\275\035\2454=\256\217\240\274\177\030\304:\333\205\032\2742gB=;\203+\273\226q\024=\326\304N\275\244\002\007\273.\315\037\275\265\200\007<\004\227\375<\346\374\352; \264r;\216T1<\370\330(\274\262d\024\274\3778(\275\230\365\242;\374D\342<p\036W=\352\202\006\274[eZ\275\221l\262\274%\200\341\274S\303F\274\252\362\030\275\224\364\247\274\216@\233\274\322\302\364<\236\352>\273*J\360<q\2723=\303a\3048\205\301J=e479\261\266\r\275\331\323\207\274\240\231\023\275\212e\t\2758h\341\274tV7\273\223n\005\2752\347\341:\030\033\301<B)\364\274\316\244\366<\025.#\275\374vZ\274&v\331<?\030K=\021\020\251\274\211\036\024=e\301A\274o\244><\006\315\253;\211\000\257\274\017\310\024=\3379\240\273\234\tC\275\363\332\251<\320]\202;-\3069\273\200\215,\275\313\327\345<\243{\014=0\026\n=\274\364\353\272l\2563\272Fv\272;,\274\"=\327fD\275\216T\'\275\031j\005\275\366\312I=\311\343\246<\261T.=q\317w\274L\217\301;9w\223;L\300>=\276\260\252<\227\316\345<6&/\274\375\260@=\201\313;=\360;\340\274\324\267\002\274e\347\315<)\351\312\273\260\3659=Mc\026=\353%@\274\333\261#\274\344\312\323\272s\037\264\273\325f\021\274r\356|<\034+\005\275\007y\373;\377\331!\275\312C8=\237\251\315;\005U\006=\330\023\307<ju1\275a\254\361\274\375>\243\274\372\237\313<\253:J\275\006\337\030=\231y\036=\224\375c\274\347%\360\274\t\370\330\274Y\n\t\275f\2534\275L\346\311<\003\302U=qZ\341;\312\212\004\275\323\342V=\374\301Y=\245\010\017=<\024.\275\022\223:=\254\342\310\273\302S\225\274\356\224\364<\242e\023\275\325\276\372;#]7\275\340HS\275#`?\275\227\207B\275\261.X\273_\275\014\275-\245<\275\216\263\313<\357\3279\275\375b\317\274a\334 =Q0\215\274\223\264U<=\014\017=3\225\247\272{\013\031=\322r\004\275\327\257\323<\265\t\021\275\375\376L=\365\035N<0\374\275\274k\223C<\224\354\343<\201a\267<^\347\233<\315\3421<x;\023=V\255Y;_\350\216\273\2625\341;\260?@\275`\277\024\275\031\356\246;\016+N=\304\206>=\366\277J\275\232\231u<E\354/=\307\311j<\252R\333\274\224]\244\274\032D\020=8d\016\275\344\306\211\274\007\205\277<\245\032\267\274:\252\241;g\n\353<\232\272\277\274\024\003F=\363\341Q=\234;\243<@\333\016\273%\247@\275\225\r\014=F\352L\275Q\241L=\321\n\210<@{\232<\035\004\27595\026 \275\344\215Y=\332~\026=\374\3606\275\270?D=e\345l;K\253Z\275r\243Y=a\177O\275\373Q\006=\307DT=\303\3432\275a\246!\275\322jM\275\340 \341\274X\007\025\275\344\257\025\275\353\257\246<\232GW=\236\237\013\275]\000@=\031\322Z=\330\213\024;c\247\t;\252,\261\274m\202\002\275\nt\316\274\255(\312\274\213u\215;>\032\'\275\222>2=\246\003\030=t\262\220\274\302\316E;\263\225\251<N\317C\274{\030\240\274\372\212P\275J8\342<\3172\302:0[\244<\301Q\256\273VC4\275\326\237\021=\304\002\310<8\217\\=\035\2115\275\325h\026\274>\024\370:\376=Y=\222\n\210\274\007\327T<~\311\330<\034gP\275\033\244\037<\016\3665=9!\302<\201\355&=\001\2110\275\376\265\030=\024I\301\274\265\3131\2750+\004=\332\310G\275\030\374\376\274\035\237w<\273\035^\274\237V\033=-\007[\275*\306\024<\215\326O<\013\366d\271\027-==p\177P\275WhR=\330\313\005\275\253\225\022=\324\030\342\274*\037-\272S5\016\274\r\332\344\274\243\356\r=S\355\013\275\2019\037\275\257\276%\274\031\002\315<\264\226\232<\207\374\001\275\344ys;\252\342\316:\036\356\001\275\337^N=\024\034\002<k\2036=\373O\020;\215\206\356\274< 7=\201\276\335<\230\005\000\275B\263T=p\032\207<\260%\275<U\321\333<\257S\020<\341\201\365<\343m\027=Y\346@<\274B\335\274\022\216N<\331\354w<\244( =\303\234>\272AE\021\275E\037I=\275\307U\275\352\365\330<B\255+<>\276\t\274K\262O\275\204\276/\275\241\214\'=\2559\274\274v\002\t\275Q\260Q\2746\315F<\2577\026\275\341\2275\274\017)\266;\353Y\027\275\21085\275\263\327\215\274\205\330D=\206+\230<\037\217\013\274\206\204@<\311\033\273;\022u\272<\340(>\275\350\023\201<\206\336!=\372\222\216<\254y\322:w\302(\275\014\322\016\2755\322K\273\307g5=\354\200F\275T*\344\2739\347\331<N\245\343<\224\263\355\274\221a\013<)\317\227\274\377Y)\275!\017!<\375\035\353\273\327\267$\275\2005\314;\203\006\270<\200=\334:0\224\\=\"\010\003=C\250L\275\315\020\000\275K\211\030\275r\361r\273\276\024\201\274\243\230l<\311\277\243\273\324\300\300\272\237\302J\275\3667V\267> G<\270h\020\275\014\001\006=\032\347?\275\2548p<\330\251\254<\025\344V\274\201u\215<*P#\2754\030\332<\226\346G=\347\230\350<\235v\270<\023\237\001=\211\360\202\274\375\\\016<_\300L\275l\030?\275\225/\022=Ru<\274e\2540\275[Xj;\274X\033\275sz7\274\034>\264\273\262\\F\275\202\264\000\275hS:\275\2140\177\274y\315q<&<\330<\307\317\221<\353\312\211;%\236\020\275\376\037q\274\201\242*\275\273\270\027\273\343_6=\025nG\275\036\341\017\274\003\325\017=\241e\034\274\321\377\036\275~\277[=\335\357\304\274v\372\220<\334\223\343\274\205\323\233\274\'\213\026\274\243\006\244\274\375\243\315\274b\'\030<\203\345O\275\221\263#\275b.\345\274\337\255\034\275\233\014\"\275c\211\322<\357N\347\272\372E6\275\014\233|\274\005\300W=\335%&\275 %8=6\2169=\305\n\366<\377\242\r\274\210\307\201\274L\334 =N\357\017=\310\275Z=\031N6\275\257*(\275\346\222\017=\326\t:\274\320\002\'=\200\257\260\274\271\0356\275K\363\001\275\030s\335<\242\364\275<z\266\002\275\004\263\351\2739\374@\274\221EP=\331+\352\272\250\010?\275i\316K\275\022\256)\275C\257\245<\t\213u\274%cD\273iO\023\275\222d\010<)\323J=)m\t\275\375H{\273\037r\202:\370\2735\275\0244\350<\270K1\274_e.=\006h$<$\251\010\2750?\t\275\246\361\311;\217\277><\307\371\025=H\251[=\302\023g\274\201\241O\275\033\345\362<\265\244\216\274\217\244\213\274a\300J\274n\231 =0T\002\275Y%E=\272G$<2Y\304\273\366`\333\274\352YW=\223\006\366<@\303\266;\223\272X<\337S\022\275\350D\035\275\261ZQ\275\373\223+\275\310\010\322\274\211\331\331<dh\036::L\240<\304\262\250<A\013\207\273 \313\023\275P\001\224\274\201\013S=j\343H=qIP\275\260{\322\273n^\277\272K@D\275\301UJ\273\002gP\274\367Vr<\3674$=\322D\214;\303\'\007=\003v\373;\205\237:\2756\016\244\274\202\361\332<\351\3436=\362\276\312;S\257\315\2746\013\215\274\317\302q<\221\033M\273\030\225\007\2749\251\020<\353~\023=\243\354\030=rG\235\274\374>\026\275\223\273\016=\371G\237<\032\321_<\003\367\347\271\364\325y<gT\341<\251hT\275|C\2339*M\020\275\333,\261\274\277Ub\273\030\006\360\274\336J\320\274U6\314\274\251\252\303<\313\024\035\275E\245\346\274xw\217\274Pw\373<\232\377Y=b\231Z\275\266\221\347\274>\262\326<\017\233\030\2753SA\275\307\274Y=\274b\031\274\361\'5\275\357\002 \275\005\322\213<\026\252U\274\006\343-\2756\3156\275\255\261\213\274y\323\305<N\227\302\2740b\243\274\201Z\204\274\272\343\"\274N\007\006\274\211\2562\275\216H\365\273\304\020\261;\300\224\004\272m[*\274\257P@=!y>\275=!\344;\203\344a<\251\364\\\274\200\340\243\274\376\300)=\363\314\004<\013\330)\275\236\313\016\275\266v\221\274\003\246S=\376\007\352\274\274\214I=\342\263\000=;\002(=\327\343\022\274M\201H\274\360\004\237\274\255\341\r=\273\340x<nQ\273\274A\"\277:[\263\036=\255\'*\275\005\302.=\264:\026=O\220\317\274%R\224:\334\303==\201\276H=\225*\\=3\371\353\273==\017=\017\236\350<N\347\212<8\314\025=h\217\036=\361q\241\274\276\364X\275\247I\241\274\301\'\\\275\021\030\211<*hS<h\270L\274FaE=\354mZ\273J\330\245;\222\021\032\275\212\357\327<\246\362\303<\253\231X\275\275\223\000<\273\252\024\274\347b\t<I\003\312\273\252\232\005\275\224\000\342\274z\177\036\274\272\037Y\275\353\206\277<\235\377\337<U\337F\273\353\247\232\274\261\005\250\274G\026`\2747tZ\275-\272>\274^UU=Q\327\366<\013\326\275;\005\350j\274\240\211,\274\317aJ\274n=X\271U8<=s\010\355\274\343ZA=}\275>\275\032\336\272<\007\213\213\274\252\244\035=gbU\275\026\335\325\273\326\310=\275\323\344\211\274J\306\202<\226]O\274\342\357\017=\362\232<<7iF\274\311\327\301\273\257\216\253\274tY\333<\005\031\256\274MO\013=h=\324<\250\023\230<\340C\263\273\314\324H=\367\353\360\274\020=#=\271#t<c2U\275\356\362z9\243\002N\274(3\367\273\007\2413\275\304\261\276\274\330\213\005=\255\305\366;AC\257\274\376\277D\275e&\3729\211a\3579\235\034\272\274\367\322)\273G\234\374<<\337\030<\027\267\337\273\254\365\223\274Fh\366\274\263]\207<\311\364\366\274\230\260\"\275\244\371\331;k\301G\275=:)\272\212,V=\275\014\032=)f\334;\r\325\275\273\350\320\020\275\207_\343\272\263\313*=\304{1;\217&<=th,\275Xi\200\274\315C#\275\235\315\007=\310\205(\275\nI\034=\221[4=m\200\333:\322\010Y=\342\231==\232\032\356<T\362\334\272\210>3\275\231\330\303\2748\376\324<\273\257\367\273\271\233Z\275i\335*:\215\241?\275\276l#=y\226Y=Z\022>\275\377\271\314\274\\\375>=lT\010\275v\210\206\273\353\265\310;\221%\020=\370R\211<\210\361R<\027;\317<\215s\347<3\346\030\275r\256\270;\027\376P<nn\335<\223\351\270;\200\271\037<g\274\026=v\260\234<b4==\344\322.\274\305/w\2730\006\246<P\251 \275u7\375\274\013=\357<y\332\303\274\205\340q\274\316\351+\275\317\300=\2759\302\005=\002\201\237\274\033\2230=\270\212\\=\020\375\232<\211\242\024;\3164\311<\242[S\275o\001<\275|\206\023\274\300\320\013=Z\240\341\274l\3715\275)\252\317:x\337\347<D\020\274<bR\003\275\251]\365\273\301\300\361<\022*-\274a\305\366<\2714\367\274\267\233\273<\236\320\357<SB;=\303{\'=i<P\274<%\372\274\247\216\222\274\2424\024=\350\242\211<\313<\r=\217\232\257\272\347\314 =\206\202\246\2748\204\266\274\233\273U\275\341\317\r\275\204q7\274\337\003B\275\023DD=\251ql\274\2239G=d\332\210\272\333dG\275\371\354\'\274\300\272\365<\207\325;<\025\2068=$\247m\274\'\347\201\274\251V>=\370R\027\2752\367@=\'\270\372\274\355w\203\274\271\'\r=\274\221\010=,)I\275\025\313\024=:W\005=\027\315x\273\2041\276<\345\230D\275\270\261\322\274\304#Y\273\211\361C\275\332KW<\315\255\352\274yR[\275\201(\343\273\367\346\211:\234\324\031\275D\257H\275A\022\002\275\244e\251<\315b\252<\310?\004<25v\274li==\366\027\377<\275&\206\272#\205)=\2308\336\274{\036t\274\037#\344<D6%\272@\220+\275%\240R\273rR\034\275\356\237V\275|\246\317\274\270p\037=\342#\'=\365t/<OQ2\272\254)\203\274\300=\330\274vWv;\362\213\032<\344)\232<Qx\t\275\221w\"\275\276\007\\\275\362\362\331<\356J\035\275\"\363\255<=\200W\275\177\037$\275\003\277\010=\010\237\330\274<\253J;N-\213<\273N%;\346\231\245<\351\206\263\272\n?\345\274\004\372N=\213\213\261\274#\345-=\002\204I\275\303\264O=\240\315\005\275\345=r\274L0Q<{e6;\254?\313<\326\306O=; \301<\003}\t<s\022\007==p\005\275\355[\245\2749\345\260<Q\034\016\275\3127J=\300\242\014=y\261/=\362<\224\274\006i#\275\207\007s:p\265\013<\236\272\234\274^\020\262\274FMG=\253\321u<\262\326+=\315\r\230\273\231)k\274Y;\364<t\306\320\274\214\375.<\321\271\020\275f\027\026\274u\345C\2757$\272\274i\323I\275\270g\213<\223\276\224\273\207:<\274\214n\361<\224\224E\275\370\205\017\274&\3773=\032\304\005=+\360Q\275\254\221I\275p\220\327\273\336EE\275\034\"\036\2748\216\335\274u=[=\366~\335;a\331\260\274J\237\300;Q\004\344<Z\372\271\274\210\254\252;\236Z7=\006\205\276<\376\217.=<[\371\274\337\336\005=\302\014T=\010\314Q=\323A\251;l\353\"<?\260L=\"\214\365\274u\277@=6\375\'\275\271\212\365;\347a/=\310\232\035\275`\227,<\262z\331\274\262+\344<\207\203\225<Rt3\275D[/=2ZI\275\374p\353\274\001].<g\240R<]\356/=\\\257\200;\3654)\275\226\365=\275\203\253\213<~\377\373\274?z\345\274v\305{\270!h\013<\207\262Q==\257\350<\3161\265\2744\322\263\274\216\223\367;\373)\001=B\273\266<\346\0165<\233\336-=\337\001\317\2748\263\030=\247\240\227\273\246\3212\275R\264\311<\224p\356<\214\336N\274\246Q\025=\366Q\206<\177}\333\274\001\310\346<c\354\357\274;\271\367\273R\222\226<\303\352\016\275Qr\000\274\013[ \275\364\341\213\274\'j\026=\034\254\004\275\307,\262<[\250E={\016\253\274\245O\342;\336u\315<D\212@=\346<X=\240\352\022\275?\327\264\274q\223)<\240\253\325\274E\343X\2756\3408\275]\217)\274\363\355\017\275\213E\210<I\003X=\364\003W=C\211*\275av\005\275\362\271\000;\311.&\275\365iG=T\227\t=2/\204<\331\242M\275q0\037<\263\261\301\274i\314\304<\377\271\317\274\321vf\274\264\370E\275\326\212\"\273\204CT\275\210W\262<\211p\345<\014!K<\263\325F=\343\367\037\275\253\375\244\272\255\231\023\273\030\357)=I\334\356\274M\374\365\274\326\025\014=/\203#\275~\232T=c\375\007=\325\322H=/\033\244\272\3205\014\274\346\024W<b\276h<?\212\265<\340y\221<\304\365 =\350\374\037=\237\367\245;I\221\007=;E\255\274`\322\345<\235\230\001\275\216B\313<Z\237\354<_\261:<dU\035\275\342R\205\2712`\201\274\354\2469\27558\'\275\347\277\222<\360H\000=M=8=\261(\344;a\373U<\232E\'=\364\001\266;U\027*=\\\277\346<\264\'6;\307PO\275\003\017\026\275\316\213\243<-k\004\275;\031\237\274,\247#=\211\216\024=5\3569=m\372\347:\323/\\=1\311\331<\260\213\347;\350!>\275[\023\314<\220\252C\275\003\347,=\322r\325<\206\324 =|\225\242\273\2133\242<\274,-=\233\311$\274v\302\200\274$\270\202\274\244ZV:d\035\036\275\264M\250<t*/\275\323\021Z\275\337=R;\217\033H\275\000\250e;\367\2571\275\374>\030=D`\272;s\235\016\275\314\331\n=\306\004T=\214\342\266\274\222\3502\272F*\"\274\254\034\n<\002T\374<\356o\217<\306\007\030=\362\224\351;\325\356\215;|\'O<{\224\240;UE\335\274I\323\031\274c\246\356\274\376\347\014\273\221\227\274\274m\352\014<\267\240q9\375=\335\273/\330r\273\204\215:=\342{:\275\362\001H=\030\215G=\302\010\261<Y\225R\275`\333\314<\216\217.\275%\246\322<\267\326\324\274@\231\036\275\"\361\314\272FE\035=\301\227\037\275\341H#\275X#\323;\350f\353\274\236X\r=\374T\325<\336\360\255\274G\372;=\216\t\005=\023k2=w]T;R\3273=\251H*=\350\262)=\324\225 <*\215\341<\205[&=\037k\000\275@\213\242<\345\3167\273\002\347\340\274\251\r9=mE \275\202Pr\272\253\306\262<\032]\021\274\364s==\t\030\372;Pc\340\272\234\242e\274\002\267\311\273\2700D\275*\217\306\274\017R\035\275\323V\276\274\025\2728\274*~x\274\251\321u;\\\227\334<\207?*=i\265\017\275./\374\274\257\221)\274$#.=\321|\340\274\370\013\017\275\025T\200<\351\275&\275\021$&\275\212\276S=c}\204<k\013\001=\344\007\\\274p\257\227\273d\\\205<>F\214<\337\246G=\237OZ=\262\3305<\"\336\001=\303x\277;\006\341\344\274\255M\004;\343\010\307\274\206\260Q\275\316Pc<\2153A\275\036\326\"=\3425\204\274\372\276_\274\350}[\274\025\002\017\275W)\006=n\212<=Q6\324<\232\303\231<^\331\004=\330:\031=\207\361\206\273[\202\277\274\030T\n\275\257\364%=h<\223<\264Kx;HS\252;rD\212<I\353\346<\274\016\355\273\256\257K\275\313_\365\274\t\260,\274ZO3\274\270\233\234<\020\247\006\274\264\327\235\274\3325&\274\3517\215<\017\264\033<\330\314\333\273{\340\036\275\270\342\260;0\237W\275`>F=\373.\036=\037\177\000\275U7\003=\321\004\336\274\204\267\025=Hp2=X}C\275\275\255\377\272F\0019\275>\354\274<\210c4\275\001\'\216<\204Qb\273\376v\336<\204u%\275c\272>\272~\"0\275\3476B=v\247b<\316tK\275\217\270?<G2\037\275\266\237\"\273\005%d:\200\212\243<\217\204\300<\230\255\271:\005Z\371:7\032*\274D\324\036\275\272\243\007\275l:=\275\343Q\t\275\036\341\331\274\3752\252\274\2734\032<}M\351:rQ4<z\351\032\2752\'\257<\235[V=3\"\022<qjE=i\272+=\232Vk<\037\321W\275\003\376\025\275\273T?=\265\t4\275\303\222\216\274\203\036L\275\227\325.\275\230\214\217\274\t\033\247<\266\016\200\274M\017\237\274\t/#\274d\337.=\244K\032=z\342F\275\361>\\=M\013\005\274\261\014\260\274\260k\335\272\004\366\002\275\241-\204\274\237\2066\275\272\240;\272p\027D\275\351!d<sS1=w_V\275\004&%\275\377\025#\275!R\007<\223\033\303<\030\212\014\275\325\216F\275\033\3210=\363R\311<K\206J\275{\272\276<1\303V=\353\324\342;\345\302\"\275(\260\032=D\310\000<\371\326:9\021\222\304\274<\307|\274v{\311\273\2017\021\275\020O\t\275F\211\326\274\210\"a\274\034#\351\271{-\":\245\253\300<\215\210\001=u\204L=\020c_\274\006\316\020\275T\251\276<\270Yc\273\363\027\016;~F\r;M\310\252\274\007\355N\274\324\250$=z\216\322\274\254\372\246<\262\023\216<\"=\364:\310\345\227\274-u\304<\360\357\341;\224\214\010<\221\017\021=\216\021\267<\346\220\207\274\300\372\247\273n\245\375<0\\\023=\203\002\023\275\375WO\273T\367\246<\027x1\275l\003\234\273U\365\021<\037\217A=\245\217%\275\235IL\273\017\222\032=N\017\t\275\312\030\004=\006\251C:\363\241\245\273H\246\017\275S:(=\206\366$=o\350*=uU)<c\356P\275\342Z\027\274\2162\232<\3450\330<\267\315\216\274\024l\034=\'\232\211\273W\347\002\275\230\035\202<Y\215 \273\303v\336<\372Y\240\273\266\366y\274\232\376W=\207\331\032\275F\325%\273ob\343\274\374\034\314<\253i\'=\344t(\275\327\277S\274\211d\025=r\010E=\303\212(\274\211\222B\274$\302\026\275\307\234\335\273\262\346Y<\321\213\306\274l!\263<\246\003T<\310\241\365\274\270\035\301\272\264\317U=\307\354\027=\033tP=^B\224;\362C%\275ns =\376\367\213\274\313\030\t\275\355\262\021<\314\207\212\274\373r\244\274\026)Q=h\025\326\274^z\363;o\353K=&Z\335<.\261<\275\254\0337=\013\031\212\273\247A#=\354\374\322<\233\251*\275V\021\311\274\321\254*\273\244%\365\274\311\300\225\274?>8\274\314\272U\275\362Y3\275->9\275\245U0<N&\255\274\350r5\275V+d<\013e\343<\250iR=\332\321!\275}\033\\\275\\\037w\274|B\311\274\016t\216\274\t\0264\275\006\303\036=\n\025v\274\2405\032\275Y\207E=\252\323\036=\324\030R\275\3206D=\321C\007=dd\342<5\234\204;(<%=F\374J<K\025?\275m\267\242<X\020\027=\214\265!\274\035\232\277\274\374\274\033\275w\000\025\274Hi <\305\206\316<\362\312J=\256\205\"=\332j\213\274K\231\224;\322\356\315<`KE=\342z8\275\230\354;\275\220\206\204\274\3171/\274\242\360<\274[\007\253:\016H\271\274\"\002T\274\0301\252<\336\325/=\033K\270\274\031\362<=U\254@=(\317\031\275\320\260\240<a8\014<R}\330<\337U\332\274t\013?\275\177\361\"\275\310\326\247\274<DQ:\332\375\345\274(\262\210<\033~\202<\273\026@<\356e\\=_\273k<_\342\320;9\t\003\275\307\277\237\274@\272h<F\200\377<\037t =\253T\204<\270D\261<\t\332\367<\2143\013\275\213\254Y=\335KL=\315e\026\275\271\240\034\275\323\350\024\2749\314\202\274\274\252\020\275\236\010\233\274\355\363\201\274,n\255\274u\034\222\274\344\262\355<\321\223\230;\323\007\312\274^\2325=\206\324Y=\004S\360<\222n<\274\215>\327;\256\344U=\376z#\275\213\035\334\274\231\257\n\275n\364P=\200g\312\274\202\262\013\275\224\200 =\343n\217\274b!!=\376f1\275g\257\001\275-\250\244;\375!\004=f\271?\275\325\330\231<\017\0273\275\251FB\275uJ\001<\r6\236<\214\357U\275\327\006X=\243\2628=\345\3458=\300\006\276\274Z`\036\275S#\264;~\307\212\274`\355\345\272A\335\233\274\022\374\236;\361(\255\274\373wB\274Ym==td\271\274&\324Y\275l\224\335\274o&4=\320\217\254\274\212\312\004\273;\220Y\275\032\222\001\274\313\253A\274\010\234\023\275\207@\352\274\246\027\372\272\031w\264<Mn[=\266\373\342\274\202)\022\275\017p\036=\200\002\346;\272\254\375;Xi[\2749\002d<L\273[\275&\355\023\275\037\317\022=B\312\370\274\2471\t\274;i\\=\341t\n<\016\352\036=\221a\204\274!\370\256\274d\r\201\274<\320\037=\225\261\202<\365\254I<\205xN\275|X\374\273S\r\013=*\274\307;n\024\306\274\230\312N\275\375\210G\273\272\305\351<\222\010J=!\272D\275\311d\261\274\321\353\354\273\230\255\310\274I\271;=F\203\217\274\016\242 =D\301\344\274\270\240U=A\271u<\201\2248\275\216\310\232;\240\205\035\275\316\212\323<\325\035\337<2\275\246\274\n\022M\275\363\3534={\'<\275\341I\216\274\332p\035\2740\013\272;\206w\244:\'\025!<\263TU<\237\315\014=\1770\013\274\202\000\037\273$Z\331<\017\032\365<B\177?\275[\032\375<\025\232\212<\006\300\177\274\010Z\036=-\242\260\274\002*\014=m_7\274\235\361\363\274O&F=\370\315)\274\265J\037\275\3702\'\274\206\371W=-\272\003\275(D\362<~.\263<\377v\357<a{\005\275\375\313\017=q\272\362\272\371\205\236\273\264~\253<\221l\364<\226.!\275Y\364\036\275?\326,\275\030\r\246\273\036\'\037=\346jC\275>\021\003\2759\366\362<\277\342[\275 \275\205<I\225==\006\275\233<\006\020\251\273:\337\334<\214\317\004\275\207S3=\013\263\003=\241\3564=\262\206y<6\276\201\273\274_@\275a\337;=\262\233\\=\354\003\227<\234\321\277<\td\005\275\212\2770\275\007\244\021<z\337\336;}u\024<Q\316\r=\003\3373\275\2573\337<fT\226\273\200\261\331<\260\317\3759M_\021\275\375g\217<\2444\252\274+\250\207\274\272\251A=\222\2064\275e\014\326\274\305\213\013\275yT\032\275R\202\273<\340B\342:5m\016=&\205\025=+\324>=\217o\022=k\3501<\366\306\365<\022V\\=\313ja<^V\004\275\213\252\244\274\016\256\352<\3071\253\274[\350H<\r*:=\032\330\345\274\206\365\247;\337\347C\275\225\214\010=\323\010\240;?gs;\313$\"\275\327\350Z=\250\275G=_b\255<|le\274)f\312;F\2009;\370\234X=\346\355\364\274e\022\033=\240\263\033\274x\036C\275\315\225\244\274\raD\274\202\333\017;0}\235<\357\335\232;\242a\214<\223K1=\322\037V<\221r\270\274\341?j\274\311cO\275\225\374F=\334n\020<\357(\037\275b1\020=$\3633=\235\222q\274\310\237\344\274&\003W\275\300\013\240;\355\220\204<4\223\033<\264\2659=\224\332T\275[z\022<\216\313\007=\204-\374<\007\037K\275\245\013\003=\204\370\244\2747&\321\273%\270\237<<\270\026=\314\nP\275P\201W\2755-C\275^\205\351<@J\027\275YT==`\252(=m\337\261;\002\'Y\274{1J=\256\263\346\274\333\316M\275\353\367J=@\025\331:\007x\035=\233\315\004\275\344;\023\275\311\200\201\272\354\233\022\275?\226\t\274\312\205\203<\244\250\323\274\343\253D\275\242\305\036==\025>\275<\367\013=t\305\n=\"jH\275\264}\243<6\021,\274\363\246\305<Z`\006\275\237J=\273n\257l\274\3127\221\274\335\264\214\274ul\302<\177;\353\274\312V:=&\200\003\275);\037=\221\227\013\274\322T\207;8!@\275\025\346\036=\335\010\333<\353K9<=n\244<\003\363\254;\227\r\237<s/\251<N\273\301;\265\024\021\275\375\306C\275\205E\350\274j\320X\275\344\336N=\036\274\005\275:*\251<5\nN\273.\370\260\273\320\360\007\275\211\303J\275j\274\353<\2224q\274\034\323\222\274\223\250\357\274\267\3217\275\004p\352\274\227\307!\275\276Ww<1\002\267;Ze\365<\253o\035=\255\377\030\275Z<\241\274\363\240\351\273 +\227\274\0170\243<\276N.=W\326\270\274\033/r<\201\322\336<;\2607\275\300\312\202<\025f\3649\002z\324\274+\303\321<n\333\007=\364\317\032\275kUA=\006\236\013=\301\206\022=\372\345\215<MH%\273\247|\210\274~\233\024\274\343\377 =>\'\316\273\374\374F=\004{6=\025\270\023\275k\0325=KQ\021=\255\256D=\222f$=d&7=\366\035\373\274\212\2027\275G\241\223<\343\3019\275b\211\034\275\013\363\216\273\001\373U<E\230G<]\352\302\274g\036F=\312:\242\274\226\225\355\274P\335\241:i1M\275)sK\273\020\264M\274\252R\207\274\217C\200<1%\275\2746\207\020=7\227\361\274\213\352O<\303\3032\274?\346\031\275\\\347\217<\3118?=\236\253\244\274\243\202==\362t\r=c\226_\273\016e\342<1\202\001:k@\307<ZW%=\265\'\031<\217\356S\275\027\327\213<\246\371\250\274\n\331\026:C\270!\275ry\035=\310}F\275\221V\023=\264%\374<G\316\353\274\336d%=\272\306\336;N\356\017=\332\031\361\274\237Rb<ct\235<\225\rH=J#\243<\037|\345\2742C\023\272\327T\227<\313\272\251\274\336\330\236<\261\316^<\272\330r;\030+\026<=|W=\250\036\261\2745\215\241\272\237|\321<\030\307 =\213\033\300<\210\004\n=k\\e<\0019\250\274\033\340w;F\323;\275\035\274\r=WP[<\326A\236\274\033n\237\274\317{\205<\024\224\216\274b\'[=0\366*\275DRk;\024\326i<\216\207A\275\260\225\007<\344\266(\275\352Z\034\275\223\246\034\274\340[\320\274;.\264<\223{\254<\320\305W<\317T\227<<q\251\274\370.\321<\317RC\274\251\362\277:\014\271\036=T7\013\275\266\r6=T\r\346\274\324\365A<d\"\025\275\2229C=U\365\005=\213\367@<;\225G\275\271\2021<\324\376:=G\333z<\330\'R=:Y\342\274\331P:\275\327\001\016\274v\357\356\273D\363\225<\277X\025\2750\354,=<+\304<\366\370\311<\207j\321<KI\262<\326\207\323<\375[\\\275\237\226\027\275\210\005\365\274\322\\6\274TA =\324R?=\366\007\342\274%\306\024<\241n\027\275\376\305F\275\350\311D\275\305\033 <Os\201\274\333=:;\322\250%\275YI\321\274\232\220\222<\262\036\n\275\334\275\345\274\204\270\271\274\371n2=Ab\020\275\3540\003=\020\221\372\273\366MO\275_\3614\274\3526W\275\034z\271<6\312\323\274\336u\000<\030\256\t=f\254}<\'\2154\275\"\263L\275%\210N\275R\030\306\274\223W\302\274\337\344y\274E\375\253;\375=D\275\n\376\325<k\322F\275y%\202;\322\247\031=\225*\000\275\377\037\r\275N;.=\256\001w\273ng\032<$\316\016<:\325\313\274\316\254I<nLL=\220\243\364\274\253\005\210<\241\030A\275\211\360)\275%sN=\034\2110=\023\273\276<M\247\214<\304\215Y\275\2731\036=v\301\363;S\001N=\216\222h<\034n\324<\355\224\n\275r1H\275vg\003<A~\200\274\244\340\244\273\273\001\246<\'\035\006\275\376\300\004=\335VU\2746E \275s>\232\274\3620[=\230\270E<(G\021=.\240\007\275\235\307\021\275\247\230\253<J2Q<\'\252K=\247\021U\273\352$\013\275U\002\005<\211\265\253<\247Y\234\274\361eB=k#\002\274\255PZ=\376\261\014\275\330AJ=\366j\333\2745\206\033\274\003\252\013\275\205i@\275\317\007\335\274YJc\274\316\323\006=\017BM=&\020!\275\250\364R=\025?\224\274\234\031 \275\177\302\344<\246\224\304<j\347\t<\221\267Q\275:\232(=1\0043=\331{\"=\316k2\275\200\376\307\274\347\224\332<\343\255\255\274\335\234\005\275\026\364\016\274\240KN=\241b_<\212\020\264\274\32082\275\350\2732\275\000\007(=\207\336\304<\306\013?\275\014v\004=\271*\326\274e\233U\274\203\253\027\2758K\240<\344W\271:VF\323<\037\233\037\275\343\212\003=\265\215\215\274 \302\035\275V\'\202\274\200\225\034\275\242\305(<\335>\262<5\360\021\275*g0=\003;1=\222x\003\275L\376O\273\203^\246\274\365SK\273\022\025\204\274\\\201%=\245\026?\275\004\331\003\275iY\021\274W\314(<\210\351\3079\221\362\257\273\256\2665\275\320\360\034\275\222,A;\334Q\375<\226\324\3278N>\034\275\270.\332\274\312\376\016\275D\272\264\274Mv\370\274\353\351&\274\220J1=\211f\367<&R\362<\234\330V\275Ct\007\275\303FY\274\300d\361<\352|B=P\226J=\260\264Y=\\B\261;\317\3124=\244\224\034<\365w\007=\307\311\207<x\036;<\207\227:=<\365\316<|\271:;{\016\373\273\310(\236\273mg\231\272\276\024%=\017L\340\274\374KG\274\270P\375\274%\255\322\274\206\232\020\274\360tI\274\366\305\264<\247\202\217\274\347p\350\274\350\013W\273l\205\034\274M\245>=|\276\303<\33626\2739P\330<\203\350M==\362H=\316\253\236\274\356jK\275\020zF\275\377\312V=\001\254$=\204kU<\261\333\r=]\263\321\274\333Y\020=k\0134=\300\337\034=\233*\324\274\t\346\337<\216\230\276\273\217V\225<\327t\304<\r\2070\275\365~\023\275\327*\230< #;\274f\216\354<\264\343O=\331\217\013=Lv\217;\263\177/={\212 \274\003\241,=\n+!=\032`9\275j\302Y\275Lr&\275\260\337\362\272\2077\300\274\253\000:\275\276K\271\274C\245Q=f+\323<\353N\371:\274\310f< \372\352\274\3365\325;SC\265\274AS\247\274\n\221\244<\364g-\275\221a\254<\257\024\264\274\340\257\374<\222\322F\274avH=\2357\276;B\006\214;\3022\305<fJ!=\370\301>=\003\326\021\275I\tK=s\346(\275\021-\240<D\016.=\364\315G=L\274\032\275\"\235-=\177\335\025\274\237\356\006\2751\353\266\274\006aP\274V\254\037\275\025\3138=\302#\367<\330\237\034\275\274\246\345\274\252>B=\310I\016=\371\314\342<\365\201\261\274Nai<\373\351\211\274A4\030=\2520A=94 =\342z\240<07\354\274Lu\340<`\274>\275\232\3055\275\245\254\027<cC\271;\031\217\377\272/\211\316<\032\265\354\273X/W=Y/\031=\313\333S=\210\331\366\274I+\211<\352\0244=\210e\033\275\270\214\242<\005\274Z=\236\007\356<\320*\206\273\325\235\241:\"j\010=`\003.\275A\276E=\354T#\274w\2157\275\251\034 =n\007\027\275\210\003\300< \004\020=l\350\370\274JN\213\274\331-b\273A\331V=5\221\331\274D\343\201\274&\2460\275\303TJ=\005\013=\275z\362 <\242XK=\036e\004\275$3$\275:h\006\275\020\335\300\273\305J\034=\t\334+<$\201\234\274\r\307-\275\370\272\"\2758\r;\275\013\020\360;<|\000\275r\014\007\275qp\302\274\026\2153\275x(\311\273\332\275\026=\017\301\017\275\347\343\327<3o)=\232\2136=\340\306A<\215R\365<\013\002\360\274\352|p<\254\320\003\275\205p\246\274PQ0\275\207\343\362;4=\202;\217\263\334<-D\022=P\360\007<\244?0=\211\322\217\272\341@/=<\273\207;\366\034\377\2748B\363\273\256\032$=\2630\030<\322h\250;\030\373\034\274\234\221\201\273\330\\\n\274\004%G\275\177\246\007=\271\024\361\274\343=1\275\207\270\r\2757\271\215\273I\007\271<\002\244%\275[\374\365\274\026\377\266<\210R$=\232\'\232<>\205\201\274\321\205\325\274\231\031\003\274\246&\370;t\223\363\274\010>9\274\342\364\241\274F\206N\275\342\373\356\274T\021\305\273l\314\037=)\311?<\277e\246\274,B/\273\361/\347;h\3071=\320\r\246\274\355\314\375\274a\022%=\247\250\001\274\004\357!<M\003\224<U\322\340;i\215\334\274\347\333\037\273g^1\275m\222\251;\222\201\203\274\376m\263\274\013=(;ZI\331\274u\t\231<\326v\255\274\372\211\020\2751\201\230\274\342\212H\275\'\366\"\273\301v\005=W\277\033\275\201\017N\275\300\225\275\272\016\227\005\275\232^!=\306\347\032=\322\324@=\220\2373=\2524\025\275X\210\201:T\324\032=!u+=U\331\361\2745&\220<\023\367\246;oOE=\003\007\226<\352B\346\273\352\224\307<\216\037;\275+\034\003\275\375`\357<\260\t\275\274\232\374\023=\2060p\274\325\305n;\244\352/\275\313\222\027=\003\0345\273h\3531:a\177\347\274\316\202O\275s\223\354<7\371\342<\\q\321<\021\023\\:\005\314\245\272\211DD=\353`\204;J,\007\275i\332?=\313\365[\275K\017\024=^{I\275\255\3460=_\217&=\211I\312\272D\0323\275\"\213\253<X\3075=\353M\036\275\177\037\264\274:\251\234\274\356H\014\275\214&f\274?l\003=R\2205\275\205\336\034:\205\351-\275)\"&;vU\223<\007s\373\274-\241\347<\257\177\353\274!\213\025\275\307\007\362<j\314\010=\336p\037=\343\245\"\275\275I\332<\003\335\005<\0063\254<\345\254\324\274\205\274\342<\343\202\'\275b,\277\274\226\317\351<\242\210\377<\313tH\274\2718\337\274rgU=\372bI=a\264+8\372\013\340\272\324\202C<\033_\202<\326\240\277;VO!=9S\220\274g\343\355\273\003\006\213\2743\2416\275\241\341\\;y\366P=z+\177<G\021 =S\031\352<\264\004P=\213,\376\274\037??\273\325+C\274T\236\253<\241NU<@\261a\273i\017R=\213b\016=\374\363U=\214\2518\273/x.=\032\027\032=\346Z\217\274\245\r\'\275\333\375!\275\037\300R\275s\237<\275$\332\226\274\271\005\326\274))\355<wr\031\275\251\215\226<\006\363\007\275AP\363<dD#=z\0001<\330S>\273\364*v\274\017\3359\273f?U=\273G)<n\351\335<r:\021\273\374\231\212\274*Y2\275D\203\371\274\231k\021\275\314&\210\273\334\005\353<\271\374@\275v\320\t\272\037\264F\274\343k\210\274\264\340\214<\363\037\006=t\335\337<\017|0=T\245\230\274\021\016G=A\316,\275\267\016\215<-Y\303<oc\250\274V;.\275\377\264\217:\023\220\237:\315\322[\2759\210R=\323\002\277;\213\201\017\275\336\022\022=\222mh<m=\201:1GJ=B\316\267<\231\277\213\274\316j \274\372\377\241\274`<\013=\273>\376;\375w\023=v0\010=\315\347(;G\006\027\275\270$P\274)\267\021\275\271j5=\247\311\340;\236\340Q\275\341Q(\275 \337@\274\340l\016<\367A<\275\0175\026=\220\300\212<1\225\350\274\t\010G=\222w\010\274b\333Z<\373X\303<\206\255\233\274L\t\026=kc:=\365\301\006=\374/H=>Y\262\274\024hV\275\226T\225\274\007\263z;\275\300I=1r\n\273\311\253\351<\333\025\013=18)<\342\027x\274\022\244\315\274\310\222\031\275\327[\036\275A\344\361<C!\342<\235\007P=e\202\204\274G\345\252\274\306~\"\275n\004\032\274\352\267;\275\251G\351<\222\271)\274`\267n\274\261\023[=\241\324\004\275}\364d\274\026\210\326<\254\201.=1\305\025==2K<y\347\261<\227\364S=\"\367\375;$\222\264<\205\304\242<\007\245\223;\020c\305<\341\r[\275H\2031<\367J:=\'Q\177<\005\330O\273\270e\004\275ap3=\303 \272\272t\222U;\251\330\017=\361G\037\275:\357\207\2745\270\270\274\"\031\300;\347x\325<\212\334\005=\\^\244\273>9\020<\312\215\362\272\2430\334\272c+\245<M\010\033\275\006\250.\2751t(\275h\306o<p\343\325<3\300\036\275\007\265H\275v\351\234\273\210\237\013\275\002yP=\317N\271<\003\263o<\277s\223<\222\005\266<[\032!=\3760Q\275\000@\n=\353X>\274\347\321[;\253\261T=\313I\005\2752 2=\215\246,\275\236\366\371;\326a\224;\265V\306;l\3022\275G\275\005\275V1d\274\223\237[\275\"\303,\275P\232\032=\344i\006\274\264\0341=\250;\370< \325 \275\334\3555=\211\314\211\273\315\213==\206u\373<\307\"T=\036e\355<l\3501\274G\2565\273\347\214\344</0\026<IJ(\275\312q|\273gEL<\217\245,\275#\003\325\273\222~\207\272^\337\r\275)\273\232\273\223\225=\2753eK=\207\303\310\274\350\217\342\274\211\3021\275\253\244\311\272\202\357\343:f%\242\273\344\203\240\273\347\360,=\347\304\007=\251\235#\2753\276\002=z\243-=\001\233(<\025J\037\275\333b\214\273\003v\350<\242J\274\273\276HI=J>\031<\372\263Y\274\272\307\317<\352\304\334<\377$\377\273,\366\010<0%\374<[\026\350\274\257\205\232\274\253:\301\273\245\212\330<\016\0277=_\207\225<\356\376\020\275u\377\232\273 \301\024=\233\262b\273\205\037\220<r\205\031\275vh\t\275\325My\273\216\304 =\350zo\274\037`\030=\241?\267\274=\3221\275\317I\323\274\334Q\300\274{\226\227\274\362\336\342\2744\037\315\272\260\340R=\365\2141=\306j\230\274A\203u\274\247n\177<A\372?<\343+\204<,\271\355\274\320\222|\274&V\210\274Q\0240<0]\222<\327y\r\275`^(=\030\3258\275\310\035\022\275\246i\367<\222\212\367\273\335!\013\2756\217\347<\222\031R\275\304\025\001=\'\3478<\030\256\006;\355\255\343\273\267\243\211\274O\210\255;\302\2412;\310\376\330<\242l\237\274\1775\353<\241H7=\000\361[\275@\275*\275?\0378\275\237\343@;J\000y;.\332\327<\233\221\347<\222\231\370\274\243{R\275\242(\2147*\254\"=\350\231\226;\333\001)=\014g\027=\306\263\345;\230e4\275\360#\261<\354\177\017=\027\266F=\002\264W\273\205\316\027=\311\202\226\274\334\2656\275\230\016\250\274\261J\t<\255B\034<PY|\274\271\313Q\275\344r\211<\035 \241<\225\360B=1X\242<\317Q =$m0=\213AJ=\276s\351\274\316\367p\273)K\262;]X\200\274\367\304\021=\010\256K=\231nI<6\"\350<\030!V\275\335\365G=\274n\335\274U\252\023\275\327;9=\336\267g;\331\203\210<\224\n\351<b62\274|Id<VfG\275\305\313\230\273\023B\347<\205\255\016\275\004g\277;\332\274.\274\277p\023=\016=\004=\361r\267<\232\000:\275\334s\002<:_\001=\314yQ=&(\363<\032\275\321:F\323\251\274\222u\213<\370\226\026<#x\240\274\231y:=\013\3333=P\322\025=\353YI\275\345i\344\274-\310\006=\303\207:=\306\276\202\2740\311\335<\355/(\2759\227Z=n\214\335\274C\210@=\237w\023;oZE=dT\256\273Q\265\'=_\303H\275\321\227W=\324\212\217;R\353K<\227<\026=.vT\275\254\276E\274\313VK\275|{C\275\277\320\010<\344-\266;:\2346\274]\345\034\274\251 O\270\331\365*=V\242\"<\003-P=\244\314\315<\271o!\273C\327@\275\277iN\275\254Z\322\274\366\236T\275\207\317\254\273\347\363^\274RA\342<=\264\375\273W\023\357<Nok\273\000\035\271\274S\204J\275rF\214\273\272\264\2449V-\231\273\251UM=\305\023Q\275\342\005\376;\215\262\'=1\315(\275,\336@\275\374\370\245<\340\232+\274\364\375\000=6\315\030\275\006\007\235\274\020B\316\274\013\261n\274\272G\310\274Q\373Q\271+\235\n=f\235@\274<\237\002\275\316<8\273\266\356\212<\307DF\275f\346\371\274<M\036\275=#8\275\\6\254\273\351\253\241:\305#7\273\307\356K\275\357z\336\274\245\277\351\273\030\251\353\273\206v*=\212v\242\273\245\374$:\031/\234;\022\023\243\274\250o9=\215\344\242\274\333\272j<\267:\330<\350 \007=\213-\303\2746k\217\274\325@\005\275p/\366\274\322?\240<VQ\251\274\017YE=LT\035\274\375\2169<0d6\275\006AA=rH\004=&g3=5\243R=\272\374\024\275\233\225*<V\274\217<N\276S\275\237\343p<\024\007\005=\01073\2756p\021\274\233\031J=\275\020/=u;\n\275\334\341\264\274\371Qo:\004\200\024\275\200\030\"=10\327\2742\302>\275\016\346\250\274t\237\370\274\362\261q\274a\212\370;\233\300\324<\261<\022=\365I\004=\001_\305<\022W\027=v\t=\275\326\200\273\274\226\023\221\274\334\000\256<#`M\275oU9=\2725C=\270\306E=\203\200R\275\304\014,<\034\303c\274GO\207\274\315\030\332\272\347\364(<\000v\034\273\240j\222\273\243u\221;\016\350\352;\020\273\025\275\271/9\275I\206\343\274T\367\037\275\263w\002<\362;\277\274\275@\366\274\214\331\010=\227 \223\273\210bT\274\231\315<\274\007&\203<%\356\003=\205\013b\274\367\'N\273\035\201?\275\373\016J<\026Dp;)wT\267\265\3102\274\351\025#=\200t/=v\003u\274\342\324\270<3c\300\274\032\274\020=C\030\205\273{\333M\275^?\336\274\231\014\247<|\270\216\274\230\335F\275\005M,=\\6\031\275h\231\372<\016\006\017\275\274\016\266<\313\316*\274*\2759;E^\322<\373\\\n={W\005\275oV\202\274\001\252\374<\325\257y<\0005P<\371|&\2754\222m<\203\275_<P\317\002=4\327\017\275\002Y?=\361\244G=E@\t={m\335\274\005\253\036=b\310a<^\027i<\334 K=\331|N\274\2760\001\275Z\"Z\275\032\201\373\274\000\335B\275\222\220\336\274\272\375\030\275\251\372\356<\202\225\003\274\227&\244\274^D\341\274\320\350@=$\346{\274\255\030%=\300\243+;V\340i\274\245D\032\274JKW<\361\331\253<\3621\360<W@<=.\311;=\275\230:=\374p9\275\205\224\032\275\226{V<\004\230\266\274\036\330\036=\302\017\033\275\031\302\263\274+oW\274\344\374\243<\217\243\314\273Y\230\352\274\216\260\307\274C\252\017=\317\276\026=\343\0232\275=\306\'=\267/\212<\240\315\004=I]\213<\216\332\021\274\311\212\030\275P?5\2734\365\010\275\305R\257\274\270\273\233<\342\271B=\256\0178\274\276\350\023\275)\351\254\274Q\177\375<\206\333\023=c.\322\274@\2573=s\314\334<\221\222P=\225+\200;\201\3775=\024\214\240\273\027\221\316<\314\2562<\331\350\235<\323\025\204\271\316a\t<,\3123=I\365\261<\002\005b\274+\340\"=\337Ay\273\326V)=\254\nG\275\202sI=\235\267\037=!\275_\273\253j\310\273\257\"\300;\017\020\220\274\214\341\007=\370\275H\275O-U\275\355\270H\274\207\335]<%bO=\021<\2319\3416\360<K\025\300\272\214\225\016\274\324\010N=V2\205<\363\003\0369d\370\307<+\300\372<)\274\004\273+)z\274\376\235\337<\226\350\227\273\254\277>\274t\335\207\274!p\352<QM\002=\360\177\376<e%\021\274\246\334\305\274\214(\025\275n\273B=\244\300\260<\202\340\215\274\323\202\301<\240\317\200\274\246h\t\275\2520\352\274\235\266\032:\376\036\310\273\225i\177\274lV\'=\254\246\314\274\265\0166;\207\2446\275\362\004\017\275x\374\204:\351\247;=\030\334\004\275\241\325\024\275\017\265\331:\005X\004=\213\303\344\274\030\351\317<~`/\275\241h[=\236\004\270<\367(\322\274\242\237C=\371D.<\025\341\225\273\233\027\305<\257\276<\275\024\312G\274\315j\306\2749\003\242<~ \307\274/\332\013\275\252<\345\274\271\2745\274\363\274J<q\320C<R\202B\274L\3220=\203\002<=\252j\374;\301\365C\275\355P?=PV2\275\244j%\275k\003\007\274\"\033\341\274\222\271X\275\344\253\313<`\217)<\366\305D;e\272B=T\351\235\274\246\370\262\272\323\347\231\274\275\251\216\274CR\032\275z\360\307;\361\177\326<E\363\331<\250\313\264<m\312\006\275\206\034\237\272\375g5=\210\313\273\274H5\237<\203H\217:\357wO\274c\272R<\250\301\337<\222\302\031\275\3112\234<\n\241\002=\224\376U=\234\352^<\321\376M\275\240\215\226:\032\017P\275\225\324\013\275\316\212\215\273\302\250\315:\316\345\016=l\277\365<g\336B;4_!=C\212\243<\371\266e<\222\2079=reH=p\241\315\274#\267\354<\305\027,\275\232)\230\274\335\027\203\274\201\256\367\273W\033\014=\250\r\327<\256\"\304<>[\016\275R\206D\274gsU\273On\314\274\006\000\252\273d\322\016=_m\265<\307\273V=$.\"<\002\211_\274\336\314T\275\232=\266\274\023\356\275\274\374\323\013\275\371J \275t\031\264\274*U\255\274\326\3703=\347|?\275\363/\243\273K\316\201<\274\264@=)\024\273;$\226\305<]\024\016<\251bt\274-\253\373\274A\345j\274\037\221\212\271\324\020\030\274(LV=\2053\177\274\013\200\371\272}\013\353<\364\032\245<\363\220P<\330*\"\274\332V\007<\215\003;\275\030(\035=\234\234F=y\177\210\274\303\342\345:8\320\021\275l5/\273f\300\221<W\222\023\275r\367\032\275\331\250\315\274\275\003\006=*\354n\273]Y\311;\312\316+<\223\006\027\275\207)\373\274\211\220@\274\324\337\326;H\375\371\274\232:A\275\230\017\306<\354)\236;\264\023\352<\376\307\265\274\347\016G\275V?\225<\036\256\364<\346\3733\273^1>=-\262\001\275\037\260\n\275\315ZF=\226*\367<c\331#:\2332j\274\212\211:\275\325[\024\275\231\211\021<7i\021=\376F\031=\231lR\270[]Q=\306\227\023\274M&G=\223>I\274\255c\250<\313\034\n\275\005\250\025<sy\226;_\032\333;W\342\226;\370\364\000\275\304\376\373\274\027u\022<0_\244\274l\234:\2740\035\026=T\303\330<8\307\t\275;\350i\274rBW\275\023\322\034=\002S\236<\247\336!\274\201\331Y\275\2355\030<pM\034<\207O\216\273/\003/=3k\261\274\001\3661=iO\002;b\251\017\275\201\305\024=9Tj\273I\231\016\275D\315\212\273\204\317F\275\325\3173=\031!\202\270/\235\244<g\273/;|\2211=\022\271F\275\244\314\351\273\262\r\247\272l\267\032=UA\034\2755,V\275\361\374K\275\013/\370<D\214&\275c\363[\275\241\026\277<\346\255\016\275\324@F=9$P=\321J!\275n\212:<q\036Q=\230\037&\275\003\254I=\376t$\274I\204\216<\361\177\t\274l\367\207<\234\306\344\274V;N\275O\221\276:\244Eg\273\227\351\022=:\222\203\273pK-=\002\237$<~WC:\355\367\213<\276\2106=\266 \301\274CK+<X~\022=P\032\025=t\307\311\274n~2=\013\370\034=U1S=\002\201\370<p\325\036\274\211\240\034=U\263S\275[\030\375<\330\2740\274\031\322\226;)\343R=\026k\233\273\265m\"<a\306V\275\271j =\324$A\275]U\027\275\023;!\275:hI\275\371\346\363\274\201\037Y\275\374\344\335\273(\306\006\275\230\267\224\273\362rR=\017\310U\275\022\305\000\274\347$F=\270\234\010\272\363\363\220</U\313<\306kP=\241\240\233\272\334KG<u+\310\274\350{\306<\001\221\322<\224\2020<\2156\005\275\037\007S\275\226\260\206<0\222y<\"\273I=\255\023\n<\211p\270:\035\222\350\274\026\300L\275\362\022\373\273\035\344(=~\026\275<9Q$\275\013\210\326\274\230\3154\274\356\300\242\2741\337\000=\004\334\307\274\370\343&=\321p\216\274\n\373\034=\267GA\275\355\201L=\321\316H\274\307\344$\275=\t\203;a\254r\273\361\213\004\275T\317R=\340\3617<\273r\241<\\&\234<\327c%\275\001\030N\275\025\002(\274\247\341\234<\313\353\372\274\200\374\2649\317\316L=n\342\005\275\336(!\275\"\364L=\222\355\330<,S\262;\033\233N\274\300}\362<\232\177P=i\316\035=\335o =\203\346)\275\030\272\003=\315\327\004=v\3454\275\341\315\211<\330\341\310\274J\007\021<\201\251-\275\24278=o\337\261\274\374\r\317\274\371\366\317\274N{)\275\275Z\021=\225\257/;\311\027Z=i/\207\274\347\206I={\006,<\021\370T\275\024\025)\275GjR=S\277Z\275\212\217;<\342\325\002=G\327\201\274\333jH\274\354E3;x\265\214\273\227$\251\274u45\275\200\013@<]}\"=I\0135<\232L\004=$\364\350\274P\020\262\273\237L4\272\341\001\261<\004\345$=\r\231\214\274\263\237Z<t\331\256\273xY[:]\3327\2740>N<\375l\225<N\221\367<q\025@<\363\212\207<\272\006S=/\375\301\274\360;r\274o\227R\274<\2275\275\334\316\320;C\3322\275\352Q?=\341\203B\275\314\344\\<%\265\203\274Z\227\336\273\253\317?\275\220 \017\275ymA\275\245E\216<\3565\272\274\240\337\205\274\0025O\274\332\357\360\274}\0375\275\365\0378\274\024\364\352;\220\245G=\027\311\372<z O=f\243\355;\205M\340<\030\320\267\274\327\306Y\275\277Y\213<\334\336y<\326U\350<X\303\262:\236\370$=\021\003==a\345\007\275\000T\256\274&\277G=\021\373\353\274\022\022\341;L\"\247\273m\246\202\273\031\314(\275j\353\002\275G\345\371\274\267\006B\275\347\256z\274WS\200\273\240\230 =\300\304\n=^kE\275\207B\033\275\307\233\255\273,\370\031=1s\273\274\231\2711=\240\312\021\275\'\334\225\274\3123\350\274\017\275\377<\344\032N\275\273OV=&\231\340<\357V\354\274hVT\275\221\362!\275\323\322\210<hH\224<uN\200\274\304\272)\275\022\206G\275\'\364S\275\327\316X\275\235g\366\274\306\013\002=o\034P=\305\206\306\274:@\373\273\030}&\272\006\2649=\373\313\023=%\317\377\274\203\331o;\027\021\035=I\346V=\202$X\275k0\265\272J\341\323<\260\215{<\215\022h;\356<3=\026);\274$\'\362\274\242\031\'\275\377-\327\274V\255\375<;\025K\274y\214)=\365\333\261;\236\016U=\304*<=Y\026\026\275-\335R\275\2270\332\273\321\n^\274Q\357\022\275\214\344\n=\2535#=\026\037\315<\024\224\263\274\367t\005\275B\031\032\275\333A&\275\204\332\022\275\255$`\274?\324\030=\320^\336\274\020\307\017=\250O\020;\357E\316\272\251\265H\275I\001\312\274\240I?=rK\036\275R\2733\275\212\232\020=\035d4\275\016\242\243\274\357IN<2sT\275\025\265H\275<\337\264:\330\306F\275\253\354\037=w\3027\275_(\010\275n\001\r=\252M\017=\021\361,<\374\270\377;\313\345\006\2755\357><^cG\275q2i\274\303n[\275\305\243\377<\225\265\t\274\333}\210<i\234\036=\326\344\037\275\332\201\006\275\223\n\212<\346\010M\275\237>A=M\324@\274\256q9=[\'S=h\237\212\273\234\212\330\274\257\306\254<\352\213\010<\336Z\243\2741\003\267;T.\334;#\347 =\216\271\375<\027\321H\275\333y \274\377/{<\273\326\002\275S[\273\274\236\302\200<\315\365\024<$\024Z\275sp2<\341e\021<;><=\277\327\032=\202\365\344\274\352\356M\275k\333\n=\273o\351<ofU\275\032\273\274<TY\250\274;\273\237\2719\363\233\272\304\202L\274\365d:\274\353\304Y=\202/:\275M\226\017=\377|\'=\274 \005\275\227\2373\275\262x\310\2747\362k;u\227\302<\\\304\204\274\212O\023\275\021\222\005=\254\0275=\342\225E\275\302\352[\274\367P8=\366\341\230;D\t\227<\331\320\274\274F\000\030\274\200\273\026=\252\245\253\273\274\322\016\275\326\2348;\035^c\274\252\324\022<\316\034e\274\224\000.=Y\016\033=e4\021=\260e\374\274\317\006r;\215&@=\243\013*<(\244Z\275\334<\267\274\343\212Y=\264Q$<\247\260\325\273f\353\333<\003\3471=\002)\233\273\232kX\274V\372\277<Do!<R`c<\244\331\230\273<\243Z<\334g\301\272\307=\016\274\004\274\314\274y^\266\274\"\225F<7;\016\274m\304\037\275\245\257\'\274i;W\275Fr$\275M\226\255\274\'\3552=\014,\253\274:e0\273\204Z\327\273\377bW\275fc\354<\033VM\275\255\373\274;\252A\334\273v\255\272\273\245DH:/\257/\266\023\006Q\275\023ZK\275\007L\243\2745\\\361<\026\177\345<\257\264I=\375\334\360\273m\220;=\352w@\275\322*5\275}\263\033<r\004$=|\332\032=\030Y\357\273\025k\207\274\227\023\215\274O6\272<j\220\201\272\003d6\275\357f?\275\260G\302\274>\377\346;z\3004\2745\014\237\273\235\213F\2744\220\322<2m\201</\304\300<B\243a\274\034\000J=\234T\020\274r\314X\275\360\211\370\273\310\225\333\274\375?\n=\277\327\253<\270\227\r=\347g\016\275ud\321\274\261E\021\275]\246\245<}#\203<\261\261\345\274\334\260\307\273]\005v<a\264+\275\207\3454\275\2127\212\273<\016.\274\342\307T:\367\275\267\274wU\354;\\\024\272\273\305\341Y=\375\205\214<\206I\006<X\230\332\274\030C\344<\030_X\275\217\260\301<\303\023\246<w2@<3\227\316<\024F\034\275\232\235\014<\310^(\275\234`\267;hQ\023<W\374m:\215\236\253\274\301H\370\274&\001Z=dk\031\275\2519\344\267<0n<\014\363\252<7j4=\177%1\275F<\205\274F\375\177;\264\001\024=\005\224F=\317\336s<\262G)\275\341\362\354\274\226b!\274w\316\035\275\256~R\275\310\310A\274m\215V\275\007\252\353<\023\236\034\274V\367\027=\222\243\023=\035\376U<\213\037C=\253\226\202<\303\315\227<\326\230a\274\324AQ=\177r\260<\310\036L\274pp\213<i\366\347<\340\3056=\364\200\010\275\260\326\004=\2660\032\275g6\345<3\252z<\320b@\275(l\324\274K\312\001\275\030F\217<t\016I=\313zD\275 \336\250\274H\225(=G\327O=\376.\023=\001K\004<\336\327\363<Ph\344<\025\362\203\274\340\343\005\275\026\"\215;\226s:\275e\326\"=?4\013=\375\243\370\274\354\226*=j\242\024\275&U?=\337\267\373\274\014\"\243:\231\315$=L\354\252;\313K;\275l\233?\275vS\\<\255\354,\275\221\267\022=\363z\312\273\033{\\=\256\017&=\255\271\032\275\273O\3069\270CZ\274\013\350\373\274%b\";\240\306E\275n\260M=\rK\206<\346\310\240\274\031\374\003=\244^\010\275M\361\347<\200\250\355\274\n\274\364;\023,\305\274\0328\201<,\234L=H\211\274<\023\003\216;d\204-=Q\336\240\274\370\245\243\274i\004\020\275\3412\243;;\326n<\245C\273\272w\202:\275\234\217\006\275\370\034\t\275\236\232\\\275j1\341\274\265US<\302\013<\273\002q<\275\265\242\024<5@\207\274\2250\341<\377\tt<FCH\275\003\034\010=w\300\231<\232e\242\274i\370\261\274K7\005=;\313m\274\267\363,\275k\337\373\274\014\204\002<\246^\001\275\032eF:y\335V=\373\'\002\274\242X\037=\t4\t\275\364\3009<\241\206\374<\221h\'\275\275\201/=\014N\346\274lF5=\327O\330;\253]e<\243t8=\240}k\274\022\264\235:\274E\027=?\032\243;x\032\006=\267\374\312\274\3301\240\274\331M8=\350\366Q\275\210\275*=\325\017\032=\001\246\204<\204\311O\275\234\0070=\256\2664=C\240,=\262\027T<I\2177=Wg/\274\234uN\275\033-\332\274M\223\007=\t\246\252<\202\307O=sd\302\273\352\330\037\275\013\201\204<\3026\243\274e]\221<\035\0168=\2566\210;\216r\217\274U*\021=\365\035\001<\346\273\014\274\273\022\273\274\277\024 \275\007\216\363\274\341h\252<\333\210\342<C\362\247\274\316=S\274\\\326V=\037\2669=,\203\333\2746/\344<\001.\247<\240\203H\274\310|0\275\251\026\256\274G2\337<]\271L=\352\204<\273\257m\251<\237\276\213\274\275\3616=\257\326\306\274\250\322\024=K:S\275\312\374\020=\251\231\235<\336\367R\274\352\024\226:\270MD=@\242\257;k\3437\275\214\252-=F\232\304\274\263\222\311<;_\206\271E\255\035\275\336\032\000=\313\216W\275\177Y\034\275\000.\001\274\203\305,=.IK\273\323\032\022=u\352\367<g%\247<^\177Q\275}\270E;\267{\007\275\206\307\331\274A\343\300\273\330\210\320;\026j;=W\266!;\314\253\026\275(\032\027\275OcI\275\363\220\221\274\333\0246\275_]*\2751\205\257<\325c?9\242oD=M*K=\304$6;\3102\n\274\216\022\001=\357\260\013=\300\235\244<\244\326\017=?W\313;t\005G\275U\266\016=\302~ \275DLK=\020,\222\274\013\315\344<\223\2317\275\253#\035=V87\275\340\364\316;\353a\031\275=\027\272\274\257D\226;t\344$\275\342#\021=\217(\025<\026\244\177<(^&\275\376B\360\274P\327\027=>!*\274\034\353:<w3\022\275\360\271s<\266\242\302<\260\200\373\273\005\261B=\352x\236\274\243v\214<\253)\225<\303\242?=\303%\r\275\n>\026<\334\201(\274\273}\025\274u\327\310;\004\216N=P\233\241\274\226\301\022:\2326\227\274[1\356<\376@3\275\223/O\275\260\227\340\274\316T&=\347\216\323<\344XL\274\024\037[=\333)\n=b\236\017\275\374\225`<\013<\207<fI\'=\3771\311<D\211>=\217\001\317;s\254\001\274\0042\315< I4=\276\334\250<\250\347K\272_J\322\274}\255\000\275uH&\274\221P\n<y\260\320\274\2108\216<\3278\021=D\034\013=\210\3527\275\225\370C=\027\316\360\274\343\231\t=\254\214\002\274\201\266\021=\225\317\245\274\300\336\007<\341\263\027\275\237b\233\274\346d\207\274\207\006\354;mP$=4\317\332<\005\227\262<&\274\224<\006l\372<\236\347\216\2742P\234\274\206M\355<\265\251&\275C\3279\275}\316\030<5,\203\274\204u@=\266\315\323<Tk3<\223T\206\273\230\322N\275\243\216*\273\373\262\033=/\025\364\274\354\260+\275?G\342\274\245\221\301\274\007\261Q=\355f?=\353\037\324;K}\367;\226\207M\274\266\213\013\275\224\250*=t\316G\273\373<?=XMB\275\255\277\273<\006\024\236\2730\237\032<\252g\341;Q?\301<\222z\\\275\343\3450=+\207;\275+\340/\275p\274\302\274V\006.<l\336s\274\371\353[:\235\000\217\274IJv\274\226\235\330\274\355\354\357\273\346B)\275v\357\020=\374(\024=7\261\345<K\024\277\274\236\013\025<\'\226S=\274\037\224<\361;?<\340q.<\030\312!\274\376a\364<\226\000f\274\276\200V<:\253T\2757w\031=\360\301\256\274+\347S=\023\2049\275\243AZ=\361\207\364\274\207k!\275\325\031~<Oyv;\371V.=}\270\234\274(\214V\275#}T=o]\375<a\314a<\255\351K=\267G\n\275E\002\'=\307\032)=\210>\242\274v\365\366<U\217\013=\303\321m<\307fq;\362{\353<L\226\236\274\342\240\003\275\276G\n=pED=\354\377\254\274\205FB=Q\261\314<\210DT\275(\262\371\274\301\\#=\277--=\220F\301\274\252\340\007=\372\305\376\274\322\037\305\273X>\335\271\034\256\352<\037\343\273<\244\3000\274N\n\005\275\024\3166=\013\321\362<(\371\n=\221\334(\275G\n\257<\320nE=U>E\275\270lS\274\300T\001\275\201\305C=\025\331;\275\315\210\361<\213M\325\274\277\233\033=\000e>=\312\200\313:Mb\004\275(\233\377\272\334g\345<n&\003\274\240\350Q\274\226\003Q\275M\204<\274_\216F=8\365\357\274\220\024@\275$QM=\232r\021;\364[\257\273\306ML\270\224y\034\274\335ko;\366p\\<\206c9=\206N\035=\324*\361\273\201l\215\274dP =j\021\002=\217\334D=+\227\271\274\371\375>=7\267:\275G\364\006\275\315fW\275\265:\337<\313\241\251<7\373\347\274\336\036\327\273\033\336+\275\376\244\t<\311\234\207<\336\265|<\254\351\306<\006}\010=\320\024\017=t\3459\275\3577l\274\311\311\345:\273\220E=\001\213\374<@\327\276<b\014R\275\373\001%\273,\212\336\2746XD\275\230\242\230<\026\254#<\315g1\273\004\222U\273\342}/\275\005\273\327<YLJ\275h8\202:\000\321-=%O\352\274\340\344L\275\n\337\335;P\235V\275\nU\362\274\240}\016\275\310\276\021\274\362`\331<`t\022\275\374\216\030=k3\014\274\201\214\031\274\304\026\274<\024\006\372<\230\3500\274\234=_\270\335Q\017=5L\342\274\326D\305\274\277\336B<\317\363T\273`\347\024=\320\034\276<03-\275\342\013\374<\347E\007\275\202@\202<I\247\232<Q0\003\272\365\3334\275\370\260\300:R\277\364\274r[\223\274dm\332<\325\363E=\340\276\324\272\250\007Q\275U\301,=\253=1\275S\353(\275\253S(<\033PS=\013\\\304<\210]O\275\236\024\366\274\243\240L=#\2551\275\230)\372<\251<\337<L\224\t=\307\367,<Z\002\003=t\376\351<\273\367\025<=t\256\274\317\261\325\274\317\006\263\272_\204\026\275\363\242\327\273\260\374\024\275gMb\274f2\210:\026\216\032=!\004;\275\207h\n\274\256\210\035\274\373\223\361\273\267\001\364\274C:\016=\265G\303\271\203\222[\274\334c*\275\362\006<\272\216#\242<\'\177[\275\021\016\"\275\261\207\373\273<4\220<e\346G\275\306\037\n\275-Ju<\356\010M\275\242\325$\275\276\243\025=>a*=S\376\271<\013\215\027=h9\243<x*2;\220\352\276:8\257#\2757\364\027=\266\\\272<\376\200W==z\212<2\020\215;=\232\271:#x*<\302\330\037=\312BZ\273\201MC\275\027\220\0379\263\272\227\274\255\216K\275\365\nN=+\0163\275\322\303\374<\006a\000\275~\230g\274bQ\247<O\216\221\273\272\2556=\313\220\016<p\355_\274\326\031\3428\275r\001:\222\230V<\223\000$=\202\305|\273\344WE;:\247\374\274\035\316\220\274\244\021)\272{\257\350;*?2\275\335C\316<Ru\005\275^\266!\275\233\316/<\237\321\005\274\341nB\275\037`V<I\344\026=\307\315}\273\276\277\243\274\334i/\274\22702<\235uQ\275\354\372\375<\224PI=\004\035\311\2728\031o<+Wo<\361\221U\275S\016\037\272-\027A\275\336\242\'=\250\3268\275\342\347\370;\370Z\004=\221\340\354<2K\025\274\264!\244\272\223\016%\275\334yF\275\263\363\231<\215\310\200<\t\356>\275\376\200@=\226Q\325<c\213B\275\365\213\367\274u\030\234<7\355[<\325\211\361<Y\336\313;0\337\323\274z\026\342\274r\362Y\274\307\017\003<\205M\027\275p\261\305\274Y])\274\276 y:\311\177T=?7#\274\357\270I\275%F\366\274\301\030\"=\t\200\336<\311M4\275\331\375\247<\237;\233\274\306(\275\274\355\257|<\271Z\373\274\230\342\006\273\220\347o\274h\216\246\272\343(+<\336\225\205\274m\034\n<$\316\321\274\300]\005<\360F\010<\037S\031\275\2508\034\275|5\351<\356)\271<I\361\315\2732\314\320:yEK<$\3435\275\0025\344\274\324\334\022=\034\017W\275\021\275V=\330{%=%\230P\2751\316\217<d6\252\271\243\355K\273\325\212+\2746_\"\2752\312\002\274\310I\032=\\e\335\2748\300?<\222\227\027\275w\2326\272\201\242\303<\030\224\340< \326\346<\350[\245\274=\327\373\274\366\255\355\273\217\224#\273\021uu\272\377\344\233\273\006 \220\273\221C\200\274\270G\014=F\257d\274Q\363\274\273B\230\013=\242\363#=W\235\t\273\374\242\037\274\367}:=\264\360\207:\323S\204\274z\334S\275\203\rG\273\215\"D\274\212\036\251<\277\357\347\274x\312\231\274s\010\356\274\274\227\331\273\221\333\340;\353\020<\275\254\027A\274\253\035X\274iW\325;\243\006\030\275\007G\230<\226\031\275\274\246:\027=Jj\272\274\340<\031\275\013\027\211\274!(8\275\261\261\355<\300\216.\275\244\375\013=\370\342\036\274\371,\350\274-\234\024<L\277\022\274\363\365d<\272\033\033=\310IL=\347}\r\275b\350J=\311\021\026\275n\276\277:\261\220h\274\305=D=0\363/\273\237\237T\275\020\321\253\274\234J\342<)\216\031=/m\033=t\n.=\235\210\032=xz\252\274\035\324\007\274\334\320\237;\216t\243\273@\r1\275\251\257\034\275\252\2256\275\345\3021\274\031\020\025=\003\234\212;\222\374\256\273\232\224S<\364\027D=^W\364<\207\230\230\274qV\255<\273\276\370<\362y\336\274\373{D;\014\3609\275\006Z\234;\267\272\222<U\264B=U\323\252;\031qM<$\025\252:\337\263S=U\267K\2757\240\256\274\203g\000\275\314\365\205\274\326\274G=\010E\340<\256$W\275C)W=YYT\275\225<!=A\265D\275O\326\332<j\360\311\273\222\253\233\274:\247\200<\215\340\213\274\261\3109\275\261NT\275\000^T\274P\351\233\274\205\r*\273\364r\272;ES\265<\342\234\316<G\301\026\275\021H\020=3\271\'\275=>\363;\363>b<p\254\026=v\232\004<\031\374<\274\253;(\275Qj\216<ReV\275\354\206\373<1L)=\317C\317\273BpK\274\347@F\275\232F\333;\220\375W;\367\237\261<C\261\035\275018\275\\R\274<\351C\201\272\253\025\034=\033\014\317<\237\227\223\274<C\335;\244\243\005\275\013\343M=~LX\275_\301/=P\033\270\2746\r\033\274\246\234\033\273\262\r\032\274y\005\262\274u4\021=\253\243\376<\345p\236\272\347P\022\274\017\352X=\334Y\010\275\\\335p:\271d\031\275\207Yy;e4><t9\016=\236*R=\022\354K\275\231\241\327:\007T\316\273w=!=\233\214\305<\312\325\031\274\207dw\274\240\322\024\275\265C\010=\255\271\r=\260\002,=\006\242^<v=-\275\177\315\"\275\247\217Y\275\013\271\331\274\372\222\017\275\204\3456<\337\204\266\2746T\356;\250$\231<\270\237#=~\206\006=\352u\264;\260Z\277<W\247\365\274S\030\353\274\023\0075={z>\274\226HH=\217f\240;\027\001\307\273\037\206Q\275z\344\344<`\376)\274a\005Z\275\227J\215\274s\205P=\017\340\241\274@\323\037\275o>\022\274\261\017p\274M\331\302\274\020\rJ=\217M1=\337\232\270\274]\307\261<p\255\177;\240\374V=3M9=\273\236\027<_\031\360\274Q\300\017\275!\331Z=\235Tw\273\005\277\016\275\033V\201<\014\346\335<\376\227\361\274\312\267\037=\354`\216<,Q\223<\312\205\030;\274\241\205\274\352[n<\251\216\214<\032X7=x\365\345\274&\351V\275\306!\t\275\017L?\275\tZ\260\274gS\"<\317M\\<\220\022O=\361H\004=\r\036\244\274\352\315\227;R\365U=!\335\020=f\362H=\354cV<\250\245\021\2759\334\007\275\313x?\2753Em<+L\"=\236\200\022=\001\366\360<\276WQ<v+\035<=\274u<\263\353\';m\366<=\363!\003=Laf\274~\306J\275K\256\213;\332\355\"\275z6\262\274|f%;f\262\322:%\307+\273\3017\206\274fA\326<\035\247N\275\271J\274;\356C\332<\032/\331;w\'2\275 \313\326<B7\251\274\2524\";A\367\344\273\202X\"\275l\302\"\275wk(\2755\023G\275\023\245\207\274\025\220E=\026YK\275\n\210\032:\225\211\321\273*\352\350\274\244\225W<\206\363:\275\211Q&\275\212\370\255\273\240\027\275\2747\363\023\275N\0057\275\303\322\003\2759\257\216;g\312b\274tsK\275\221\3456\275e\315\277<V\202\261<8\376\022\275}\236\r\275$\347=\274\336\314N<\376\210\342<LA\354<\321h\233<\341\323\n\275\310\237T=\317\3644\275\022\321\034<u>\376<\001\272R\275\202*G=T\261A=\324.\275:I\010\007\275\213_L=\363\360\210\274\322M\246\274i9K\275\301\324\214<\003\0175\274R\370\220;\033\032\260\274\205w@=;\317%=0\321!\275\343\n\334<\251(G\275\001F\305<f\210<=\r\340{\273\003bE\275\375`\370\273YL\312;\004x\367<\313 \344\271\352\202\t\275Z\033\030=t3\307<D>\021\275\244\313\205<\365(\325<\311\r\351\274\"\240\t\275^vC=s\376\033\274b\307\227\272\323\n\236\274\031\312\254\274\224\306\005<\335\242\r=\255\274\362\274L\301\002=\002T\377<l\240W=\rK\207<-\237&=Q\333\016=BMA\274\325\342\007;\311>r<\316&\004\275\217\305==\367\233X<\344\322\335<\025\252\302<\332\314\260\274\276\303\020\275\216\302\n\275\205\222@=i1\010\275\236\022G\274\010T\307\274\021x\003\275\010\373/=\321\257m;e\365\271<\022\023Z\275\217\037\'=\206;\003\274\0167\231\274\025\334;\273\326\006e<\264\022,=\002\2239\275\202\273\215\274#_B<\362\300\331\274\300n\037=\3559{<}\336\335<\022\363\311<KK\320<&\314\3419\231\033[={;\370\274\372\r\223\273\262K\276\274L)G<\242SQ=\204\\4\271\243\357\030\275A\006Z<?\013\017\274\036\2428=&\371J\274\315a\005\275\013,q<\003\033\027=\273wk<\247\210W=b\324\026\275l3=\275\223\024y<\373]R\275\\\345\266<\232\242\026\273?\271\230<\230\364\336<7\300\244\274\216\335\376<\332M\330;\246\322$\275\026)\356<\2341I=\235th;\320\316g<\331X/:\366G;=\311\244\"=s\247I=\371I\243<\322#,\275\351,J\274:\027\316<e~\r\275\240i\036=\260#\004=\030\2542\275\246\216H=\006Q\303;z\223\254\274\031\231\372\274\323\324?\273~|\t:\000\314\344<~q\326;{\373F=\304[L\2750\327\374\274\352{F=\315\350\010=\206\263Y=\372s\352;\255\363#\275w\271\355:\333\334\034\274\034c\027\275\212\317\336<R{_<g\3044\275\001\215\020\275\036\334G\275}\024\356<H\033H;\340k\323<\357V\327<4\211]\274\243x5=\005\315\001\275\002L\265\273\342\032M=\360\310\377\273\243\267&\272A-E=\366\316\014\275\253\034\244\274\211\374\260<\232\362\006\274\365\010\267<\007\301P\275A5;\275\236\000!=>\253\322;o\033x</\005\035\275\311\220E\275\006>\326\274(:\362\274BZ\303;\234\341!\275*?\n<\324\177\025=\333\276\346;:\371\3079T\242\217<\023\302\322\273\360\023-\275\240gP\275jF\255<T\212#\274\034\237D\275\224%\215<\317\212X=Z\207E=\201\366\036=Opz<j,J\274\256\246\014\275\362\014\232<\224W-=\033\361\261\272\307\274\266<\307\366\223\274\342\242/=oq\027=\226\244\346\274\315u&\275\242\005M=W\236\205<\263V\323<K\374Q\275v\264\001=p\325\352\274\256R4\275z\307\221<\231\352\352\274\246\034:\275\347@\004=\204E\311\274\250\350\033=\325oD=\022\rR\274]2C\275\360\3018\275\251!9\275\211\277\236;\336\304\216;\272\223\002=:zP\275\300^\013=\306\336B=\333_\034\275v\263\254\273\024\333W\275\350.\276\274\370\032?\275H\023\353<S\256\037=\364E#=7\021A=\026\204\207<\036Z\324;a\332$\275\266g\322\274\to\020=\341M\234<\324\3473\275\305c3\275\226\001\202;\334\302\000=%A\362<\216\n*\275\036L\320\274bXA\275\205\026\004<u]g\273\301\323(< qS\274\t)\260\274\013{\365<\035q\257\274\316\t\255<\323\317\216<\373\010\245\274O\214U\274\244\225\373\274\305,\226<F\342Z<\256\234\350\274r\306\006=/\211\221<\204\007-\274K\307<\274\220\310\373<\223\324\177<y\020$=\237@\234\274\\U\363\274\221\211<\274Q\277\265\274\340\352(=\242G\001\274\217u\333\274e\320\010\275\370\333)\275\225x8\275\273\367\256\274\201\314=\275$\246\325\273\024L\200;H\033\376<\352J\324<Aw\025\275\335\361!=\305\361\330\273\021i\\\275\313$\312\274\277\216[\275\242\020\220;*\350\364\274\223\363C=\374\311\035=\327\014\033\275\017\031\363\274\006\033\265\274\324\014R<9X\002\275`8|<\240\223m<N\356\276\274\246\035!=V\323\307<\177\244\363<\361K(=\024\252<<g%\301\274\ti\314\274gi\'=%\241M=p\2741\275\336\017%\275\336\364N=\261M:\274sQ(= ^\346\274gC)=\243\2102=A06=\022m\325\274c\204\330<\302TY=HX2=\2010\351<R\"\342\274\013\247F;\307\027S=\r\321\033=NSW\275-\254\n\275\253\251{\274?A\r\275\220n\r\275\0240w\273\232d\206\274@\273\"=\351\310\034\275h~`\2740\320\017\275\0105\307\274\253q\245<\314\211\205<z\t\025\275G\277\310\274b\026\227\274\031\343\306\274\36664\271QJ7=\352\236\205\2749u1=i\362\253<{\264\352;\002\334:\274\354 \014<AYF=&M\t=\306j\250\274zz0=\007?\006=\321c\373\267\"\377(=\360.\325<\010\024J\275\311\367J<Vvu\274\370`(\274mH\234\27453\331\273\025\205\313<\275\375\030;\226\3137\275\274\2370=\333/>\275\305f\007\274O\310\302;\021\354\367\273\362\3165\275\356\3017<\230\357\001\275\021\234F<\255\3529=\321m\330\274\356\201G=\332\301G=\224]\006\274\021\013\377\274\334\265[=\313\r7\275=\'\010=\243\n\264\274\221pR=e[\373<\377\352\230\272+\322Y= u\331\272-\204,\275\333u\300\272\010\262\251\274k}\t=\302\314/\275,>B\274X\305\204\274\216\362{<7\303A=\312\255<=r\031-\2752o)\275\261c\335<\325\357H=\234\210\263<\225\210\032\275\033/8=\no;\275\360\254\244\273$\3437\274d!\033<Z\342\226<\\\023}\274\370\337\005=i\212H\275\225i\253\274\203\306!\275\231\225\373\272<\334\004=\201Q\002\275\237\272E\274\307Z1=\224\235O\275\203\026A\274\350O\'\275$\275\251\274W\017S\2754\351Q=\361\016\333\274^\307\026\274\353yI=\207\233\001<\232\277K=\034 \362\274_\213\017<9\271\032\275\252N\272\274]\354\014\275`\242H\275,MA\275B\325\025\273\325\2670\275\370\315b<O\261\307\274/=\037\274\334\232\342<\026\\\222\273R\341m\274\r\250\204\274S`\000\275\330\276\350\274\215\254S=\223P\027=\274IW=q)\230\274e \324<\247\374\r<\362\346\357\274!\337\331\274\364\301B<\262^\000\274\r\236\326\274Q\265\010<\353\301\333;\n2\2139\364\265*\275\206Il<\326kU<\314/b\274r\377H\275\035K\322;_Q\261\274\307\206\215<C\333\003=\215G\340<\233\201\267<Y,F<c\037\311\274$\264\341<\004\250H<\345\037\330<\225$\007=_&=\273\341,\360\271s4\254\274\312\0174=\245\203G=\263!!\275\223\224 =\237\037\032=^\013\r=\357\177\265\274\26259\275\362\212\371<&*\325<A\332\323\274\305U1<\2004\233;\313\302\242<\014\342<\275\335q\334<\220\353Y=\3016\372\274\345z\326:/V\311<{jX\275\243A=;d\232P<.\240U=\216\206:=\354\354\347<\327B\360<zu\231\274\034\177J\275yml\273y\3360;\207?\271<\247d\026\275\207\206,\274\331\251\221\274\277\374\223<\271\303\t\275\\\262+\275\320\233\252<\344\300q:\033\231\263\274^(\236\273\257\0035=\001\205\025=\227\254\323\274\377\241c\274\377y\262<\316\032\221<b\3124=\0234\264\272s2$=\\K\360<MJ\241<\213y\007=\25403\275\016iT<\337:\342;\2208\036\275\025[\020\275\221\374\020=\246\037:\275\37794=t\272\000\275:OX\275\021iB=]\240\251<\004>\013;\rNG=W\226\233<\304FU=r\004\315\274o\3075=\206\267\200\274\354i\323\273a\362\303\274\262>\023<\277)N\275<V\373<\350\232g\274Y\301\236<\311\3712\275]\031\270;\253L?\275\307\274\373<\324\250I\273K\363\027\274\200i^\273\231(?=\307\212\037=\224\344\005\274\250;~<Z\363\231\271JL?<\246\2611<\"\332\357;\352V\006=\034Q\027\275\225s \275\027^!\275=\276/=Ij\314<\232\027\336;\273%.\275\361.\325<6\363L\275W\276\"\275\361p\233\274JoG\275\346@+=B\0272\275\010,\207;7\'\352\274\3122\001\275\341]R=\022OT\274M\375\313<\271%\002\275\335T\306<\027\032\303<\261_\371<\230\224O\274\2650c<\270\231*\274@\353?\274\377\342\025\275\225\272R\275\271\377\007\275\007\360\325<\366\371\347<Ty\331\274\3572\224\273Wy;\275\000\003\222<\037h)=5.==|\3315=\275>O=\0174\264\274 \234\027\274\376\350\237<\275\002B\275\211\356,=\275\255\355<:\014\317<\245\210T\275$\207\002<\212wg\274\223r&\274c\000a\273\370\304#=\301\177?\2758a\252;L\323s<\232b\372;CL\343<\275\365P\275\263r+\274=\t\036\274S\2238\274\330\222\266<\300XA\275ph8\274\203DE=\310\232\034\2751yV\275Q\202\022=2\377\227\2739\344\213\274\037\2746\275\214\2278\275\371H\035=\255.;\273\307\3753;\333\35668\013\322;=f\263\031\274Jj\223<\017\030\243<\2725\225<\207m*<\023O\030\274\204\325*\274\014$\310<\251\014G\275\233\327\375\274e\003\300:r\373\232<z\331\324<\2531\250:\246\357\025=/\324F\275z\254R<\215\304R=Qd\027=5z\247<\202\032I\273\364\321(\274\037L;\275^\022\026=\255\347N=,g\032\274\301\003\001=\352\031o\274\217\245?\275\264i5\275|\0358=\010\342\026\275=\361\345\274\271_\\\273\233d\3339\360\ti;\031i\350\273\337P\036\275?Q\243\272\352\322\032=\213y\350<\177\000\365\2749\342G\274\2111\024=R\375\023\275\361A\032\275T\220M=\310\213\220\274\030\257\030<G\t\237:\230x\315;\335\373\265\273E5&=yR\363<\303\3002=\236\361m<U\3159\275\025C\320<I\323&=\234\315\210\274b\326F\274\031\2605<\304\254m<\250\272\325\273g_\024<\236&!\275e\000\301<\255\203U=K\200[\275\035\301\366\274\302<\316\274\201;\007\275\373\033E<\305\330\007;\231\245@\275\324\220W\2752\006.\274\025Q\315<\0028\371\274\263\3042\275\334I\223\2748\215<=\030!\262<\3369\214\273\021\032\251\274\325\271\215\274\005~\331\273\244v\023=E ==\347\205`<q\334\251<\274\003\";\342\213\336\274pq\222<\\\351\344<\361q-\275\210\261\355\274>\2447\274\317\367F<\325J&=~s\014\275/\010\326\272\227c\035\275\000\376\013\274\r\3153=p\277\202<&\243\366;\3502\025\275C\241\345<\025\242\243\274#\325\307<\241y\377\273Z\221?<\346\016><0\033V\2740\037\002\274\014R\035=w?z\274)\333\027=\254k9=s`Y\274\277\313\300\274\000%\225\274\302\001\n\275\254\206\217\274\246N\327\274\240)#=y\234{\274p\370\034<\037\247E<\201\241x;\002yE=u\316\232\274\361\215\222\274K\023W\275A,\277<\262\003\004\275*\211Z\275\203j\027<]\026\023=\303\216Q\275a\022n;\343\317\350\274\270\r\234<\023K\"=R*{<\213j\021=\251<Q\275k\2725\275\242W\352\273\332\201\330\274\253\332(\275GH =\317V^\274\220\240\332\274\276C\021\275\020{Y\275\247\315Q=P@-<\264\203\000\275\251aF=\226f\251<\031$\272<\317.)\274H\257#\274\244Q =B\260B=\037\300\024\274\357\023/=\337\363=\275\202m\3579\236u\266\273\026z\211\274-3\344<\014!\257\274\020\tg\274\314L\t=\371\r\332<6`\373\273b/\025\275!\254\331<\354\255S=\331\241\"=\325\377\024\272\024\024\344\274Q\275\275\274\2754\334\274\211:\242<\207\036\361\273t%/\272\330a\202\2745\236\t\275w4K=R\326S=\367\355X=XyV\275<\270J\275\033\346*=\202sI\275\246\350@\275\374\r\n\275L\207Z\275\311W\n=W\275\375\274\300\254\317<\035\316!\275\230\2537=\212\213\335\274g\333\364\273\342@\325<\017<\276<\334\025\022\275\250\020=\275\303S\336;\356\226\\=\326%=<\r#\357\274\303\231>=\2712\022\275\231pQ\275\316\372\253\274\014f\3679 \014.=\221\372Z\275[\327\020=\321\034#\275*\217\001=\256}\202\274\253\203D\274\327\361C=\216\021\270<dx\273<\234BX\275\366O\246\274\227KZ\275\303\244\036=\215\303\241<\222\354S=Gf\315<|\326\027\275\367\242K9qL\014=\222\306\001=\027\344\020\275\267\222\024=\324\323\306\274\367s\253\274\367i\372;@\004O<Z\327\027\273\314\250\315\274\206\351\341\274y\2741\273\277\271\345\274\211|\326\274\340\214-=ts\\=Y\021\252<\306?K=\227\221\267;}\370D\275\231/\214<\177\221>=d\212\035=\030\233\230;\317>\000<\234\257S=\030\232\337<\177A.;\225\233\242\274^\260\260\273\236\203-\273hB\'\274[\203\204<\220s\317:\3545\242\271\301\217C=\312\231C=0\267\352\274ij@\274l\246C\275\226\004\375\272x\234\236\273\262\265X\274\t\311B\275QE\302;\233\376\t=\0337\024=\322\221A=\014\006o\274\327\232h<\275\003\340;O*E=\200f\013\275\230\367R\275\303$L=I\337\214\274\320\224\031=\364\276\376\273?\370\351\274\273\211\264\2740\367\274\274\346\252o<\232\010\361\274_\265\357;\030\024X\275\200\312*\275\014\035\332<\305V\254\273^\236\036<J\025\376<\210\356:=\333\222\222<\371\222\237<Y\300:\275T\344M=O\023/\275\021\350G\275\343|\364\274\247\037\004=\251\2014\272\214\210\303\274\330\265\010=\023\005X=\367\2106=|7A\274*\347\254\274\251\017M\275@,\221\274I\307.=\025\013\206<\363\334\206<\373\220\254<\'\272>\274\313\3730=\3504\225\274\217 F\275\"\311\035<N\251\230<-\365\001\273\213\205g<\213FI=\031T\207\274\343\320\201<O\331L=\276\322H\275-\326\246;\316\204\265\273C\236\236<\357\023\332<\306v6=@o\031\274\224\300\177;\241\001[<3\226\272<\241(\303<\242\320X\275Z(3\2758\373\346<\322o\n\275\267R7;z\206\253\273\267\353\257\274z\233\221\274\372<\006\275Oz\005<\004(D=\325\362\202<\"!\333<\032\244L\275\306V;=yu\203<\244\010\020\275*,3\273\332\351\007=S\262\315;\264\245\365:x\340I\275\341r\034\275{\177\300\274\316\306\037\275`\023\035;\213\206;\275\350\r>\274\367\260@\2701\231P=-V\354\274cO\026=\306~\014\275\210|L<\341\332\\:\363\226\377\274{cY=\304k\"=_\373\332\273\321\023\276\274\250\010\006=~\374\374\273\323\220N=\275\'z\274\005%D\275\240\200]<\324M\350<\210\327O\2757+\253;\203H\030= 2\357\274hGk:\244\213\357\274p\206\034\275\251\341\017\275\017\n%=\376\'\327<\206\301\010=\277\3705\2753\337\000\275\274\177J<\026qP\275\271?=\275\027\270\234\274*`G\275\207\362\'=\212\345@=\337\345C\275\227\365\010\275\362d\325\274%o@\274\314\243\337\274\213\2250=a\224\204<.Y5=\335\316D=\313~N\275z\023\201<N\006\374\274\006\341P\273i\'\356;\0224\253<\343\263\303<\322\316\371\274X\355\023<> \335\274\0306(;\263\277\035<_\022\311\274}\305j\272\242i`\274\341n\274<\226\356?=\220d.\275\013p\016\274>\255\276;\374P\277\274\220\246*<NL\246\274=\236W\274qZB;L\217\026=\322\216\363\274\225\035\232<e\227\002=N\301\000=\210A\367\274)\013@\274MHb\274+#Z\275\315M\365\2743\324K\275:\361\236\274\202\223\247\274\373\341\026\275\342\002a\274\007\331\326<\374\340Q=\227\341\356<\365:\345\274Nc\037=\352\375\215\274\234Y\321<P\200\032\274q\030\243<@\365\351\2735\037-\274(w\374;@x[\274z\244\366\273\310y\371\274\355\321%\273\370(\247\274\016U\t<b5H=\334\267k\272l\232\021=H\202\271<\302\371\226;\252@\365\274\325eH=\256\357J=\301\352\233\274(\340\024=4\021:\275(!A=x\310\003\274\303J\034=\2224\230\274\177\234\202\274\000W\263\274\020~~\274\037\206\220<\255\316\034=\242\377\014\275\027\014@\274*\362\"=\035\301\016=L\232n\273\345\327\363\2745\007\003\275\025&\202<`*L=\353}\277;\305 \t\275\021\351\251\274Z\261\220\274x+\203<\226\006\374<\333\3148\274&0\005=\315\340\276;\\\231s<\242\346\357;j\215\343<\216\312\020=\206\226#=\365\007\311<1r\315\274\332B\r\274\262\211w\273\313nF=\035\"i\274\016c\337<\345\200\242\274\315h\023\275\220\213J\274.\214\203\271\321\034-\275\303D\262\274I]\222<\374\335\211<\327*\207\274\002(\000=]M\261\274\362\032.=\320\017\337\274Z\335\375\274\216e0=_\201\016\275^\021B<\\\014\335;\244\352\023\275V\337\"<\314\324\254<\274\224\021\275]\202\373<\330\301\024=\253=(=RM+<\312$:\275\265\344\023;x\313\013=[\236#=\024\277\254<m\274\246:|\201J\275\262\240\203<e6\300\273\016\371\033=v~\t\275\365@\337\274\262\230\210\272\324\355\220\274V\355\251\274\344\313\247\273Ea\244;\301\014\367<\032\346\214\274\270\322\035=\241[\206;\002\376\356:\234\345\t=@\205\307\274\302!(=\'F\362\274\334\241V=\267R=\275Y\005\200;b\024\r\275\254I(\275M\036\3349\346:,\274\320\\C=8\3178=\3151\211\273\277\002D\275\202i\227<\r\313\031\275\222\2627\275\262\365\363<\230t\314<\241\200\330<i%\"\275\355\314\347<\345\2264<\225\207\006=>\253\247\274\326w\347\274cF\206\272\334\255\230<\204\030\317<\177,\344\274\212TW=k\247\311<@\3642\275\177\202s\274\270\246\302\273w\363\226\273\023\"\347\274\335\022M\275u\214\366\274\026H\225\274\253\254\355<\315\364\374<\340\220\255\274\255B\374\272\353\007\023={+\204\274!UL=\032^\335\274o\224\301\274\250[Y=\036\234=\275\253H\t\275\247\214\270\274\325\324\034\275\356\350\224\273\317\366O;_\352\r=yt1\274c\203\037=I\231u<x\373\'\275\322\266\300<\256\002\313;\227\241S=\2560\333<ER\034<\024\247H=\027\207\257;\376\007\214<J~L\275A\275\225<\327wB<\355\233-\275\233\263\262\274\0165\2469\261\373\252<\317P\204\274\031\345\200\274C\245\302\274;\200u;\330\025\322\274\202\303Z;\366\241\373\274\"\346R\275\300\025\337\270v\263H=\266\337\363\274\277#\373<\213u7\275\013D%\275\316\003\003\275\023\303:\275\215\016\367\274\014~\346\274\244\211\371<\374\326\333<\033\351\220\274\032\301\t\275|\256Q\273\224\001I\275\221^(=\240jX<\272\360M;\037\224\"\275\316\326M\275\014\265B=\036\376\022=v\241\244<\357\3268\275N\374\003\275\213, <j\010\033=5\352G\275{\372\325\273\245h1\275!^C=\341-7=\227\321\210\274&%\370\273\261\317-=w\025\305\274\217\300j<l\201\310\274\013T/\274\315\252\000\275\344c@\275[1P\273\320G\272;4\3049\274\033\266\375\273\321f\022\275\245\253[=\374\273P=\302P>\275\356\312\021=,\216\322<\335[O=-\210Y=\260\253T=\271Y\370\274\354w\025=#\266\313\274\377\210\357<\023\345\021\275\031N9\275[\272\306<~\340<\272\362\345\314;+-<\274\021s\360\274\013E\010=nr\\\273\2665\307\2741\3558\274\327wO=\337\3624=\266\222\356\274\374 I=\302|\3279\261\324\353<\306=9\275\265\027\216\274m\350\004=\330r\013<\275\234:\2753\355\350<\360\243\213<J\022\311\274~\325\336<\204\301\314\274\"\255\'\275j\000\377\274\016,E\275d\030\n=\213\253\275<\227l\306\274y\312&<a\265%\274\364\246\026\271\177\364\023\2757\035H=}\214\004=x\3105=\251\361\'\275Y\254\243\274j\347\252\274\312\301l<\344\034\326<O3\325<\2007\364<\306\331e\274a\035\021<GB\200<\305g-=@\220\247\272\373\242D<\253\353\t\275[\243\032=\221\355\"=\266\002\243:E\302\322<\006\214R=B!Q\275*\031\033=n\002\344<\001E\225;\276\245\030\275\002\361\033\274\232F\347<@\021\373\274\033g\005\2751I\235<\333\013.=\212\343\317\274\212]P<\250\250&\275$\002~\274\347*\335<x\370K=\267\256\307\274e\320\016\275)\255K<\247\007Y\275\210\202\204<=(\311\273\355?F=\326\322\275\274\030\034\353\273\373\302@\273\371B\370;\256\307>=\204\205\332\274%\360\024<X\251\251\274\314:\303<\310J\224<\020\222e<\\\320B=\206\002\202<\350\277I\273\035F\346\274D\231\276<\363y=\273MR\335<\036\301R\275\246\271\006\273\260Q\357\272\277n\000\272z\224\000\275\007*+=\234\264\212\274\350\006q\274\336\364\001=gG4=.D\352;\313#a\274I\256?\275\371\360\315;\345a@\275\030\222\341\274\366-\320<\356$\322\273n\266\377<N\'\'\275\353\363\221<\r5S\275\254\264)\275\241m\021\274z\237\312\274/\261\010\275\223~\347\273u\233A\275\203\242\261\274\326\377\016\275\263\310\264<\014\365\r\274\233\316W\275h\351\277\274\374N\366;?\234\203<P\212\325\274\342\000\005\275bJ\021=$\034\212\274\370\205v<@p\237\273\340\r\304<5\037h<\263o\"\273\356\252\374\274\\6\216\273\355Q)\275\341\325\033\275\241\337\221;\301v1<\327!?=m\273;\275\367\306*=b\3748=\377\237\332\274rT\\=\365\300\321<\202\212<=:\234\306<\225\\\334<\322\024\001=\335w%\2757w\014=-\302\321<OD\025\275[\r78\rU\373;;\225\250<\006J\372<{e<<i\257 <aJ\343\274\260\025\231;K\371S\2752\312.=\345\205K=`\265&\275\356\002,=\366\231,<\343E#\275\330\357\264\274\224\177\030\275\233;\002\275\266\330\031\275l`\013;\331\252[=.\301_:\013\r7=\374;\303\274\362\004\036= \203S=\306j\306\274\274\225\014=\355\031\222;%\014\250<\027\t>=\277H\315\274o$\010=B0C=\270\306E=r\n\214<k\240N=\327\360\340<\271\036\240\274&\354\373<\265m6;7\\]<9M8=1M-=\354\370V=\352^)\275\341\347\026\274#\025\027\273;\370\026=\375\374\222<g\301\001\275,\2312=\357\357\276\273\260\317\027=\343\271W=\211\345F=wy\360<ve\327\274m\330\205\274EI\230\274O\342)\275*\207\266\274\246\321_\2736\0064=e\323\017\275\357\001\036<\315e\210<\227\243\214\273z0#\274A\262\031\275b\'\022\273l}<\273\343\370X=\366\033\013:\363:\213\274@\226e<\000*;\275):N=\367\315\347<\306;Y\275\263\035\002<\301\265$=-\n\212\274\367\343n9\216\315E=\217\r&\275\'qI=$B\261<Sk\215\274J\254\033=\361\315.=\037<\022=C\277I\275\265\\Q=\227\022\377\274\013\030\254;\221\205D=\370\305\n\274\334\347\253\274\303\246R=J}\234\273\014\230\256<p\216\023\274x\207?\274;\214X\274\265RV\274H\207?;\267\263\250<\366\206\034\2750\024<=\320\323J\275\264\240\023=\237\277\247<\351\243O\274\322\240\375\274\274%o\274\013\021G<\031\177\"<\344\3700=\202\272:\275\342\267\'\275\323\2330\275\0272V=\301k\254;\327\217\355;\177\222Y\275\271,\235<\310\003\273\274d\022)\275\232\343q\274XF\327\274\351\312E=/,\305<\243\341\203\274\025\010\234< \373!\274\353\302\035\274\227\275\233\274\310\370\202<1\364\237\273\313\331\220\274g\220U<@;O=-A\246\273u\364o\274:VE<\031\311\236\274@5!\275\360(\213\274\237\221%<C\242\372<%\027\377<\271\245;\274\314\317\322<Y\026\371;~\370z;W\356\322\274\033fb<\240\247\270\274N \341<\335\365\031\274\030\2619=l\037\271<\367\333\036<\276\274D\275\177x\n=Tz2=\246\375\355\2748m\212\274r\263\013=>5i\273\346\320\260\274\226PH\275\t\303\375<\300K\302\274vG\247<\024b8=\023\022`\274A#\\\275\316\224J\275\371\256\022\275\253U\234\274\r/Z\275\275\356:=\r\274\252\272\244\372\301\2743gW=\201P\037\275\317\254\374\274\303\300\346\274r\210\341<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\306j(=\177\340S=\250\007!=\035R\025=Y\3774=\213p\037=\333\260N\273a\245\317\273\311\3620<\206\002>\27572\020\274%\2231=\306\331+\275\017\2665=\202\001\007\275m\270\022\275\304AH=\221\327O=\316\214\343<\341\210,=\354J\n<O\336\036=+.&\275k\317,=\345%\"<\265k.<\336\001\002\2751\035\316\274\346\030A=+\353\275<}\030\276<OS\252\274\275\3625\275\321\227\351;\373\202\262<\200\013\260\274Sf\310<V\302\220\273\004QM\275tP\035=P-\346\274(\343e<#Xl9oh:\275/\007\223<\005G&\275\230\310\036=i\t\\=\214\206?\275Fb\375\274\367\1775\275\177\247\035\275M#\277<\216\356p<\230 \001\275\332\010P<\013\236Z=\362\307m<l\244\001=\320e6\273\263\223\020\275\365\366I\274oW\023\275|\321\\\275\210\202D\275\304i1<-\r\253\274\236z\226<t\223\343\2740ky<z\240\375\274,\030G\274\231\214Z=\251\313\332<^\202\334<4\241\006=\026\rZ=\037n\330<2\352:<\001VK\275\3025\002\275\345\360\205\274\273i\206\272\203\356>\275e\202==\304\315\010=\327\\\352\271\004.&\275\345no\274\325\023|\274Vc-=\300%\303;u\371\024=\315|\025\275\275\352\345\274#\0177=\005\327N=\342\362\307\274b,\035=\307Q\035\275q\213\332\274 Av\274\271\255\005<4\036%\275\353\"$=\274\307N=\2414\340<T\023P=\322$\237\274\341\302\030\275\\&F\275\255\320[\275 \2204=vU\200<P\205\222<\202\306\235\274\326+Q\275\270:\274<\260\2474\274F$\217<\202\317\037\275/\000R\275\035\306\021\275]8\232;\022s\336<\266\266\022=\347\311t\274\377\0044=\000o\021\275s\036\224;\265 \276<\211\230\330<\224\204E\275iS\212<\031\235-\275\327\003\236\2735o\261\2745\017x\274>\226\025\275\0024\213\274#N\016<\2478\260\273\260\272y<\232\016\264\274\310\337\034\274\037\302\\<\016\017==\202O.=p\264\305\274\254tB\275\276\244\003\275\233\305M\275w\021\212\274\3308\330\273\254\352\323\274s\357\350\274\325\261\\=\353v\216\274\237\241,\275\352\221\027<\"<\177<>~\200<\377\353G==\026\342<\020\344\371\274\300\305K=\r&\005=\212&\372\274\030\223\272\273\351!\366\274\214\323|;\274!\226<\331\335;\275\246\210;<\371Q\031\273\200\266\276;3[\273\274\367\242\364\274R\236I\275\004\005[=}e\r\274\241\313\204\274\207\263\201\2728\227P\275\366=F\274\316\203\212\274\2326\326\274\021\016\230\274{\202+\275\033cB=h]\272<R\337\352<\030\232*\275B\3727=\240u\261<\250_\211<\362\306\232\274\021F\317;\271\202\300<j\233\343\274Sw>=>U\0329g\270=\275\260\316\010\275.\3522=>G\247\272\013\360\224\272\303\r\353<e\013\004\275\224\334p<\342\366\335\274\177\234\376<g\327\343\274\335\325\354<\1774\023\274ua\235\274\320!>\275D|\301\274\025\023\361<\2167W\275\242\271\014=\336\203\t=\010\253\026=\026L!\275rNL\275\244\322\247\274\225\005\\\275\325y\217<\036\322!;\323a$\27295T=~\275\313;!\301\004=\273\277e\273z\032\356\274\223\212\265\274\302\\\216:\335[\246<#\204?\273\026{\240\274\361f\206\272\235\343I=:b\r=\301\362\225<\341d\\=\264\3078\275a\034\342\274\267]9=\301\270\367\274\357b\356\2747\355.=\351-\227<K\273$=A\037\016\275\3321\217<\355;\321<\177\363\017<\373\352\026<\230\030?=\031\252\360:f\330=\275(\214+\275>lP;\306\270\350:I\336F<\214\240\005\275\345\250J\2750\242C\275\305\235\210\272N\247\021=\231\320U\275\204H\353<\337\310H\2750\007Y\275J\260U;\307\005\241\273dKt\273\246rR=I\3166=\241_w<\310\260H=g\224\036=\037\275z\274\222\223,=@\r\013=:m\336\274Y\241\013\275m\205\263<e\325\003<Q\303\026=\370UL=\276\371\361\274\357\362g\274\273\375\n=<\206\332\273\273N\311\272\223\204\304<\346\313\025=\360\350\322\274x\270L\275\276\311G=e\032g\272\367l\314<\356eL\275/\257H<\237\017\024:\023\177\313\274\017^\231<\004Z\233\274\217\326\016=\252\310p<\033\364\034=\'\330==\032D8=z\206\260\274/\345==\trI\275\217rD=\203\340\n\275)\264\007\275\003\302\255<(\321\033=v\347R=\302S\257\274\005\036V\275\027N\367\2745\333\325\274\246(\003\275\025\274\340;\347\240><\245gi<\003\006O\275S\255\316\274\373\236\027\274\337\3615<\326\350\377\274\362\014+\274$\325-=\031\277Z=\323\370\301;\021\336&<\330J\230;\352\021\022\275\351\213\305<\365\3604\274S9s\274\313xW<\031@c<:cH\275%\370\330: \n\354\274\321\035\004=|\207\346<\342h\024=\244\225\311\274h\346\035\274\234\357,\274f!\363<\255~\261<2m\253<\366\206\246;\325\267\273\274\216\031J\275\255!$\274\022|:\274\010\336\001\271\335\254\300;\271\n =\r3*<%\376\017\275W\372J\2756\234\316\273<S\034=~\272P<\241\260\221<\257\346S=\232\356H=N\370\373<v\220 =\222o\277<\233\017W=\344\206<=m\237\020\273\014x\342\274\325\364Y=\341\214/\275\332\311\033\275\232\303q<X\252\353\274\0310\003\275Wy\025\275\216[\214;\301\373\237<\272\322>=\225\026s\273\224i$\275\337\376\233\274\276M.\275}\337\014\275\032\357D=\366\260\021\275I$\003=x\245\027\275\301\254]\273\207s\025=\242\363\355\273\231\225^<&T\307\274\212\202\276<\210\003\247;\206\252\001\275\363TV\275lq\037\275\313\326v\273\344\300K\274\031\021B\275>\033\031=(\325B\275\024\0100<+\247\035=\320,\013\275\223\345\336<\265\037\t\273\321\277\235\274\216\3665=\236|\311\274Fv\007=l\201\201<\306:\013=\273\272Q<S\330=\275gCI=\372o\035\275\346\351?\274\253\021\'\274\244\001\253<=\001\010\275\223\233!\274h\276\224\273\324(\201<\240\375D\275\300\037P=\375\027v\274\324\277\223\273\2569>=p\215\356<b\264\273<\253xT=,\006\253\274\320 \300<8B\037=\241\n\251;K>\377<F\227\357\2744\rO=k\201g\273h\327\302\274\304I\352<\351(D;\354v}\274\\>==t&\220\2745\217-=j\2166\275\351\273P\275\373I\326;v\312\220;j\2722=\014T\214\274\253\177\010\2751El\274\344\200[<E;\022<\370\230\311<\272\3553=\306\211B\274\312q\217<)z\212\274\217\370\256<\000\027G=Q(\007\2746\034#\275C\365`<\000?B=\033o\221<\3768\215;:H\032=.H\373;\3568(<\177\363U=\024OS\275hSZ=\304\215\022\275\005\020v<8\207\274;\035\363\324<\214r\003\275;\213\326<\264\332\010\274\267v\244<H\243i\274\342e4<\000LD=\311P@\273\335\343\323</9\034\275\243\321\n=t\014\353<U \327<s\373E;\246\025\250;\255OV<\313\310\013=l\220M\274\031+\033<\310\345\031=,\351\333<A\257\020=}\n\357<\205\221\263\274Gk\233\271\260\001U=\216\233D=\355\223\214;\256\240T=u\272I=)\305!\273d\n\275\274\010\331\032\274l\2659=\344\357\022\275\036\254\250\2722\246\333\274\036\364\327\274%\332H=\326\232\256\274\305\214-=\213\353*=\225\266\256\273\373\277\273\273D\335;\275\241_D=\014\331\200\273^\266,\275\315\207\212\274\303c\273<\244\005\214<\240_\347\274d\216\257;;i\004=}\375N;\204r\004\275$\226\004\275\312\352O=\276\006\353\272\302\231!\275F\2461=\007\311V=\006\220\201<\267~P\275\202;\"=\313\321\331<\274\023J=\021kL\275\373rE\275A\353X=\234\330D=\0331\351\274\263\224\253\274\324\177\233\274r\251P\275\3457\322<,X\306\27353\252\273\361\231\355\272\375C\266\272_pA\275\032\221\227;\320\306E:\315\324G=\3667z<\235e\'=\034~\355<\207\343D=\021W#\275\320\n\250<.\302(=\304\237^\274\306\213\336;\025\242L\275\260\322\327\274\'\361\036\275\323G\342\274\224\203\317<H\205I\273\022\0307\275\241M\254<\352V\037<d\304@\274k\214\342\274\203\251I;\257\010\323:\372\325\352\274\211\354\230<\017&5\275\205\237\024\274\335\222\223<*d\244;9\032\355;Q\236\202<\340\036\322:\306bX=83\216<\322\3375<L\200\366\274\177K8=P,d:\330\357\313\274e\313\t\2758\037`\273f\210\024\275\273\244\004=\006\212\177\2742AG=\271@\214\274pV\254\273\027\001\036\275\014\342\324<\267\310\236\274\235\374\203\274\030\215Q\275-\316\036\275H\210\220\274iCC<\252\0005<\240\344\007\274\001\363l\274U\024\332\274M\214\202<y89\275\275\266\353\273`&P=\020\000\256\274b,\024\275\237\266\371\274\277\\\222\274\314\241?=58\327;\036%\256\274\334\361\207<\365r\017\275\2743+\275\354,\016\275\343Iv<Ek\024\274\317:/\275a7+\275x\234\030=M\014\000=\377\220\227\273\025)\037=1\3322\275\264\216*<\216(\247<\214\006\253\274M\355\224<\263\256\034\275\3673\307\273\324YO=\331+\307<\355\211\007=\253\206\371;<\302 =\"\254\025;[\254\037<\271zI\275F\016\377\274\325\217g\274\261\305\265\274\344]\237<\256\361k\274\333\360\363\274>l8<\234r\003\275\001fU=\004\266\336<\236\305X\2758\007I\274\023\3002\275\024\261\324\274/\001<\275\261)?=\334(G=\312\227N\275K\364\302\274\231\253\036\275\261\231\n\275Cc2\275z\321\010=pv=\274b\014\201\273\305\242\r=\r{[\275\tZ\200\274{\305\035\274\330-\263;\257S\211\274\204p\226<X\221\027<\231\t\356\272\356\2734\275\261\001z\274j\032\307<\005\020\034=\350\205M=\214\3133\274\251h#\275fW\010;\261\340P\275t\177\034\275\007\245B\272\352\201\000<\227\266\030=G\371\010\274\200.\313\274Y\231\r\2759\1777=\017\234\363<C\312\202\274\275\t#=\036\370\333<\351 z\274\336\024[<\334\001\013\2755Z\312<9\352\356\274T#\r<@\236R=\032\362\004=\2403\374<o\344:=\271\325\214;\223\301\016=K\320\353<\271\016\301\271I\211\'=M\024\307<c\3536\275\275\274\017\275a(V=_.\224\274\023\357e\2740n\255<\\5\342<\313\\A<\223\330\355<\'\3605\275\206\220S=\205\"[=o7\002\274\016Vg\274\200\232\235\274u0\034\275\262\223M:\337X\235<\207\346\334\273E\n+=\303!\247<\\\303!\275\224\274\247;\003V\344<e\352\274\274\242\337\272<\013\221<\275v\324]\274|\347\033\2752\213y;\3408:=T\356!=\034\373\002=b0\334:\352W\006=\222NZ<\026\333\235\274\014\333\320<v\272h\274\274\327\202<L\302\001\275\004\215\346\274\302&F\271\336D\241\272\005\r\024\275\273\213\320<\277\016\366;\016\335\345;=t=\275\203\263\033\275\255\373\272<\252\231\000=]\315\317<\304\226%;\n\350K=[\274\207\274Z=\204;i\340F\275\376\223\212\274c\225A<\376J\223\273\270\214V\275\023\343\035=M\302\005=\250\350\361<TU\013\273\374`\305\274\344\247\341<\026\372!=\021$\350\274\337\234\032=KK\210\274\244\266\035\274\203\262\t=\277\004)\275X\347\341\274\312\006=\275[m\"\275\231\361\327\273g\330X\274\255\356K\275|\272\"\275s>P\274R\263\006=AJ =k\2049\275<H\336<\036\375\325<\217z\377<\257\307+<\240\346.=\210\315==a\340\360\274\252\277\000\275q\036D\275\033y0=p\360\217\273\304\204\037\275\033Rm<h\217\277\273\323\2746\275\357\327t<\263\342\220<\236~F\275\270\272\372\274\336\237\'\270=\337\345<we><%LR\275\237\250\350\274\013\033\315:5.U=\237vk\274\337\347\002\275\257\270<=v\304\004\270Wfq;\007ZO\275\201\265\"\275\024o\"\2756\246R\275\224i\337<\314I\030\275\006\2663=P+\010<\250O\257<\341\361W\275\300\\\356\274\262;\361\272\007\020\352<\330\300\304\274\032\273\220\2746\315/=S\332\246\273\226,r<\200\245\247\274aU\260\274\244\243\365\273\345\rP=\035\332\346\2749\262S=>@/\275\352\325\267<\006\262\363\274w\035:\275\314W\266<\303[\234;\t}L<~NO=\206\365J=\013\204,\275\032\030\263\274F*\225<\224\3203\274\0325~\274\0274#9zG\364<N\274\315\274\007\351\n<k%>=\006\352J=\021q/=\022X\327<\230p\330\274\0268B\275\253M\213<PuH=g\027\304\274m\010\230<\342~k\274\244Q\020\273=\261\014\275\221\335\367<\233\250g<_\"\037;\344\241,\275k\276D=\266f\277\274\352\224f\273%\242C\275Jm\206\273^\335\200\274\346\273S\275(y+=\001\n`<\223\370\032=\365\312\214<j\336F\275\354Jt\274\323\360\317<\360B\327\274\370\235\231:\316!\216<\277\266\036<\232:\024\275<\200:\275\254\250V\275|mL\275\022i\007<\236\347\310<\207M\223<\315 \247\274l\257\035=\340\0239<\341\021\317<\362\237\003=\277\202%\275;\222S\275X\225f<B\017\025\274W^\030=\"\236_\274\214X:\275\t\004<\275f\035\335:\353\317,\274\201\0342=\374\2506<\247Z\347\274\255\333\203\274Mc\204<;D\034\275\3463\373<\342\2460=*x\371;\014\250:\275x\212\030\275\016S0=8\220\305\273\356\266\030=R\235\377\2740\006H\275jF\231\274\027\356\340\273\345\366@=\037\033o\273[\'\315\274\023\350c\274\312\244\316\274,\005~\274\327\3512=\252\361$\275\353\036(=\361\251\214\274\232\240H\275q\375K\274\0167\033\275,Oy\274\025n\267\273\236\3728\274A\237J\275\007\201G=\354wD\275q\223\355<\006\313\001=\225\257Z=(S\303<\024\325\237\274\304f@=\342\177\332\274\027\323\273<\375\246\033=\027YW=XQN=\027\316)=\327\313\224\274\310\324\367<\002\n\272<V\217\"=\374D\036\275\3623\\\275\020]\027=\344\264\002<\177l\345\274\272\201\000<\272z\201< m\277<\324]\230\274I< =\305\331\177<\0364\210<*B\026\275\360\200\217\274Ei!<\34671\275[\021\355\274\017\017\327\274\220\312\350\274\016v,=\t\'M\274\305`\212<9\n}\273\253\236P\274\207X&\275<\205\207\274\027VI\2758\026J\274&\326\310\274\325\360\r\275\213c\260\272\0255\304<\033>W=\210\033~<\367\237U=3n\217;\320=K;\001~\035=a\252\021=\031wG\275\314\tK=C\216\366:;\342%\275\201\000.\274\205\003\347\274\031x\272\272\030@4=\256\036\340\274\244\354\334<\231$\361;{j.\273\345<\222\274\325S\244<\006\370N=\324\004\034:\trP\275\315\250\366\274Ry5\275\346\335\377\274\271a\303\273Z\240\250\274@b\211\274\326\232\021\275Z\315\036\275\017\213O\275\330\362\334\274\355\202\347<\362\342,\275^\032/\275l\201\367;\200\266\023\275\240W\007=J?T\275\216w%=\257^\362<\305\375\215\274\341\356\334<,\314:\275\275\346\310\274\'\350\327;\225e\215\272\253-\030=R\201[=\363\210\374\274\306\346\306\274\035/\351\273\236}L=#\027\266\274S]>\275\004\333\002\274\000!\322\274\234\3674\275\372\230\337\273\321\005\307<\212S\014\275\270;\235\274\367\317\245;P\347B;\212\365\227\274\254\276\\=2\247\025=\010s\2009\267X2\275\353\244O=\303*\026:\341\351\024\275S\301P\274\372\373+=\257\211H\275^k\221\2741\230X=Z\0164\275{\375G\2751\207N=\020)\245<W\0266\275\216\371\034\275=\364=\273\304\3238=\007\336S\274\362\325\237\273P\r\301\273\327?\004=^Q\234\271\372\350(\2741\315\205\274\343\307\237<)\204+\275\302,2\274\256y\004\275\323\251S\275\240\007k<B\253\037=/\360Q\275;\275\003\275w\264\001\274.,\247\274~\210\330\274\2418\026\275)<\016=b\350\n\275R+$=\265\354\306<\244\035\364<<\317T\275\t@E\275\002\025N=\274\265\330<\007\315Q=\342\345\315\274\000\n9\275\007\367\242\273m\304\034<\233\203\226\273\020O\273\273t\313\325:\267\371\245\274=\277-;Z\260\305<\303\333n<\221\353\324\274\255n\361\274\256\177\017=\275E\036\275\272\001/=\211\007\031\273\340D\275;\354j\021<\n\227\014\275\212\013X\274>\026\366\273a\0033\275ID\316<\235\371\301\274\367\275\261<w{(=,,\304\274\213\273s\274\027\022p<F\351\277\274\237\363(=\340I\035=\036Y\266;6r\301\274M s\274\035\211\211<\373w\211<;\310 \275\244\231\034=m\223\001\275LM\361\274\233\236\351\274L\324\034=\235\013\n=-6x;\311L\336\274\324TC\275{\007\367\273K\270\355<{<\207<w\247\033=\335@<=\000\243\337\274\032\300\020=\r\317>=\tk\316<<\377\214\274\020N\330<\262B\220\274 \231;\274t\003F=\024\363<<\333\013M\275\016\317^\274Y.\033=\205\364&=\276-\001\275\000\251H=2Ul\274o_V\275\243\023\206\273)Q\306<=~\215;\010\253e<\tr\026=\225\277\005\275\0327\255<\032\367\013=\267\216\343<#\271\304;Z#\242\274\016\\\251\274e@A\275\353,\247\274T$\304<$\353\353<\345\325E=\024\017\026\275%\3272\275\334f6\274\000\350\357<[\263\341\274\353\217\\=k\336\002\2747\276\356\273\210\225\217<\233\300\272<P_\000\275A\317\025\275\323E\370\273\357\217\270<Dd\022=\317zI=9D\373<\327\362O\274@r\000=\226\273\267<\354\350\022\275\333,Z=\007\000/\275\010n\035=*G;\275Rt\350<X\010\236\274\003ZN\275:Yt\274\202}\037\275S\213@\275\223l\203<5\260I=_O\300<\007y\352\274\306\2525\275\013\277\013\275\342\352\003=\026]*=\256\0219\274i=\013=\375\3703=D\264}<\363\217\202\274\265\275\360<\316NP=u\021\034=\203F\021\275e\242\223<\307)\271<\216\335\016\274\354]5=|\262\031\275\317kE\275j\340\033=\t\355\262;Ff\216<\313\226\377\274\251\277X=\026\374\004=J)\226\274kW\234<\247\326<\275/1\"=8]\352;x\021\237<\276\212\203\274\333\217\352<\354?\017=F^z<\355Q\304\274\273\265\022\2753\351\n=\341\252\371;+\003P\275\204\206\316\273\365\336d\274\270\205/\274Z\204\225;Y\263@=\037r\334\274\0337\365<EkR=\007\340\200\274\327\201\025=@\305\233;\271\274\325\274\326\232\341\274tk <\202\035[:~\234)=\361tw<\334~\276\274\251\256J\275\202mI\275\036\244\330\274\346\352\'=\342\025S\275)\211v<c\203;=\355?\240\274e\241E=\027A\030=\343XR<\224\367\227\274\021\020\266\272Z/N=\021-.=w\276\026\275\230\355\304<\261V(=\007\354\025\275??1=\026\351=:\33707=\345lJ\275`w\247<{\323\021\275\244\313\252\274F\216Y=H\021*<\233\247,;\360CF=OF\207<rZ_\273\334\207\226\274\004Q0<V\323\240<\033\366\333\274\037\240\002\275\203^\002\274\006/\310\274\020\337/\275!\267\035<v5k<\224\341\351\274\007\226\037\273\2770M\275N\307Z\275\362$\323\272\271\234\023\275Ay\233<+\032==\374\302\346<\034\225\201\274\230\274\266\273\037.\234<\013c\036=h\343\004\275\323\364\371\274\304\n\022\275B\305\010\275\335\207\000;\261\206_<\2440I<\027\207\324<oR\324<0\207\003\275V\360\017=5\207\316\274\007\263V<\262*V\274\343\"\200<\233\016\005\275\306>\274\274\200\001\014=^\244\343<\254\"\021\2741\374\361\274\301\353-=\374A\264\272!\003#\275>\373\353<\377\3512\274\006p[\275_\'\036\275q\301\247\274\322\202\265<\026\026\366;\177b\346<\245\274\243;R~T\275 \237\030=\313\340\215<\255\225B\274\016\233w\274\317\370\026=\032~D\275\225?>\274J\273\245\274gcZ=\001\307\030\274\274KE\275\345l-=\244\024\202\274\256{#\274t!\250\274\346)<<\264<\303<* \224;\256*O=\316%9\275\033\344\003\272\221\347X=:}2\275R\0210=\'\302\206<\014Gy\274g\034+\275\201I$=\211_F\275k\370\014\274tl\002=\2603\014\274V\315;\275Z\324O=\207tL\275IkP=}\035\017\2738-\377\274G\331<=\323lN=\030![\2751\327\350<\003\253\211\274\376\256\021=I\254T=\207\270\030\275i\270\345\274\267\251\247<\002r\377\274\023D8\275\013\370-=h\276\035<\256\234\222\273\033\217\223<\304\026#\273Y\206\347\274\001/\350\273\200\022S\275\370\262\037;\241\342\020=\266\006%=\016U\2348\215\243\002\274\033\243.\275\222\342.=\240}\232\273Cn-=\336\230\306<2\201\206\274\364\314\203:{\306N;\245\034U=\016\307\373\274\350\373!=\370J\023\275\013\270\346\274\034\2613=\304\265\274\274$~\362\274m\327\321\274\252\216\372<9U\246\274M\3256\275\336G\026<\263\201\000<}\276K<\217\326\t=\014\321\355\273\376\3575\2712\321\014\274\245\237\327<\251\311@\275\320\343J=e\212\005=D\210\'=\003\225B=\3212\2778r4\333<\240\345\027\274\027\330\024\275\277\022Z=\366<\312\274\271\353\003\275\310\032;\275\356D\224\273R\2657\275w\205\246\274\302\276\311<\300\242\r\274\225\262;=4>\345<\216\211\310\274(j\221\274\252\253r\273\220\035d<\271\267i;o\354\246;X\032\023\275\317\205\304\274\267\037\364\2743\346\276;tt\350<\251\211i\274E\241K;m\\+\275\326\005E=\344\271\346\274e\016|\273i\243!=^\343\035\275&N^;\233\215s\274\022\320\013=U\033\226;\335]\212<\\\022\220\274\347\262O\275\242\366\024<\253p\301\273\314\325\024\273\360Z\332\274\372\307W=\337\202\226<\201\257\271<\330\2301=\372\226\233<\35318;\037\2628:\215Q\343<^hX=?\307X=l\243\242\274\273b\244\273\220B\314\274\024_\364:\336\276\004=7\3124\275R\356\203\274\223\367\375\274\206\257\272\274\226\335\356<\022-r\274h\223\356\272\255}8\274\376,\'\275>\370j\274\225\357[\275\206\005Z\273\031L1=\366\n\314<D\265&=\247\250\032\275,\352\357\274\257\306W=).\304\274\351\333+\275O*\273\272\035\342\003\274\325HR=\312\001T\275\00125=\031m\002;\314\216\032\275\n\374\032=\004\177\305\274\231YB=e\030\304<7\257\203<\206\r\373\273b\213`\274\2553e;\225k\346\274\222\240\247\274\007\323\372<&\001\332\274w\312\353<\330\tO\275\246\334\001\273\020\213w<L\312D\275\221>\337\273\301\2546\275H\377+\275T\037\321\274\201*\311\274\314k\242<)\267>\274\034k\024=`z;\274\363\260\006\273NJ[<\002\3162=\225R{<\222\035/\274\301\372\'=\273\323Y\275\nx\026\275\272G><\225\253W<<\277\016\275\032\362V\273X\000f\274\200/\315<^\2647<K\026\345\273\222Vq\274\035_\215;WnY<9\336#=(r\317\274+C\022\275\265\311\313\274\306\t\025=\373\326\367<Jf\320<\013\200\032=\242\026#\275\'\320\334\274R\276\'\275vX\274\273a\227\317\274/\223\227\274\315\321\337\274\243\342 =\306\361\254<\370\324\373\274)\266\'=\221\036L\275\022\333\004=\005\217G\275`\003\031\275_-\020=\251\0005=\025\"\216\274\251\355\360\274\022\332\266\274\034\352\253<\026\005\361\274\246\033\331<6\354<=\346\372H=\217\t\302<\"z\351\274\370;;\275\326\315\243<\007a\220;@>\317\274\310\256\023<\r\031\205\274\205z\333\273\267\344\254\274d\221\341\2740\210\262\274X9W<\272\371\025=\224C1\275z\321\033=c-\031<R\251\201\272\237\006v9v\336\257\274\340\\\344<Q\240V=\234\203\306\274\034K\026\275F\'\230<\206\235\230\272de\373<W\"\331;\005\027\311<\223\205$\275\314\2146\275e\347P=\023\346P\273\034a\221\274\212\025\312\273\311\343\216<\246\212\257;\221\037h<eF\003=W\343\337;r\350\001<\213\373\317\274\004\026$\275\266\027 :\357\372\016\272H\216\322\274\r\007>\275\343:q\274\361\310\031\275\021*\010=\000z\321< \222\370\274t\3665\273;\363$=\2576H\275T\001\017\273\314\360\276<\214-e\274\332= =\010\\J=\030\342\036=\254\214$;T\2273\275\323B\002\275]\221N=\313d9=\314\252\206<\240\236N;`\236m\270U\016\323\274kj\010=\327\247L=\000o\005\274(d\024=\371E\272\274\243^\371\2742\267\025\275;Q\r\274h\014\367;\021\311\304<9\3579\274/|\005;_\207\371\274\234\374\030\275\265\233I<\357E\r=\203\232\277\274)VI=\303w\023<>{\023=\272\3174:\004\250\345\274\023\010\260;8\325\006=\343\317\344<\037\'>\274]{F=\360C\002\275\341\366L=\\g\221\274\014\322\275<\001N7=e\322>=?8\335\274`\206\252\2744S\001=%\334\002\275\302\362\032\275\273\310\"<\305\326p<\005\326\\=\226\330=\275\246\t0<V\366\326<3\0062=\276\375D=\217Y\233\273v\251\374\274Yx(\275\232\274\275;\267/,\275\214h\265\273?\205\0179\035X5=`\230\001\275\354.\357\274\226\367\347\274\253\330\025\274\375\201\022=\253V2\275[\'\202\274C(\312\274R\363;=q2P\275)R<;\212\227A\274\300S\225\274\2617\003\275\334DP<\241\242\323\273i\372W=\245`\341<\247\205[<\223ZF=\331\261\031=\tU\311\274\0004\305;\021\232\315<\205\030-\275_2\233<\024\035\r<\211E\005<x\336\327\274\304E8\275\235\034\033\2757\003A<\275\306\002\275qi<\275&\270\244<#\333\023=Q\335?=\022\0032<9\230:\275\361=t\274a\360\327<\326)\233\273\213?\032=\354\360C\275\035\326\023<\242\010A=\017Pj\274\033\203\037\275\221CT=\325\217\026=4\314\000\275\247\357\t=Co<;\274\252\337<\266\261\031=\364\354\016\275\207\254\002=u\221\303\274T\032\344\273\217\014\322\274L\334\002\275\005C\r\275J\323&\274\305\277\320\274\r\221A=\253\202\366<\221\323\245<\304\373\342\274x3\001\275\177\nm\273_\330-\273f\222\341\274Q\364\345\274e;i\274[\267\363<\333\331\352\274\246\3113\275\206iC<\000\214\362;Z=\251<\250\262\322\274\205\224\215<\330\006\200\273\214oa\273\226\031\361\274S\365\025\274f\243\355\274\357_\246\274\036\2323=\325W\263<e\227\032\275\022\032\204\274\3533T=\270\007\216;\340\022\006=>\277\024\275\223\304\376\273\376\201\031\275\343 \016=\304\364\265\2741\354u\2732\313\002\27578\354<\301\310\031=\374\317\372<\250\321\333\274\255\320\200<\313\r\030=\33640\273\022[T=\270*\240\274\300\253S\275\234\030\272<1\322Z=\r\237Q\275\233\261\205;|\322*=)8C=\254\327R<\023\207\253<ff\366:F\325\345<\241>N<\003\3264:k:\246\273\021\035T\2735\302$\274\3676r<\225\247\347\2749[!\274(\222\016\275pO\001\2759\207U<,\001\021\275\360v9<\352\264\373\272\376*=\272.\\\014<\r\035V=\300J\020=\275 \013\275\353\251!=\241\234\252\274\371H\006\275f\250J=_\254\'\275W\251O=`\230V\275\277\026\225\273\265!\302\274\214\214I=#\324\342\274\372TQ\274\364\032L\275\327\030\020<\363M);g\371\332\274\270\223t\274\020\275X\275\342\361\007\274\347\221:=O#&=:~\374\274b,0\275YS\r\275w?\\=nY\007<Ur\222\274F|\246\274\236\355\010=\334@0=\002?v\274\335\270\002\272\322\350\t\275\345p\274\274\251qP\275\021\366\230\272\001\034\340\274\235\302\220\273a\340@=\306\322\241;\334\354\005=^\213<=\0055&=\022\347\351\273\351.\214<\306\307\366;\\;*\275\032,\201\274I\375\t\275\"\006K=\216Q\302<\351M\t=\214\277\000=G]\326<\315\242\326\274\306\267(=\250\034\257\274\016\234\301\274/R@=?\035K;\356\236$=\000\305\240:\214\337\036=\235\265\001\275Cm\371<\006\307+=lkk\274\034\010\363\274w\226\210\274\2654\020\275\215\277\004=\014V\207<\206xF<\367\214i\274P`\356\2748\303I\275\205\027,\275\331\204\016=c\343\030<\310jU=\022c\037\273\355\252\'=\252\367g\274hH@=N\326\354<LW:\275\230\325\270<.\206\006\274\037\323J=\340\022\377<_^\022\275\245!\235\274/N\206<\220\201&=v\304\342\274_\270#\275\314y\"\275\3037;\272&\023\207\274\204\313\235<(\321.=s\033\364\273I<\272<\226\326\021=|\274/=FS\376<\025\304?=\220\372,\275\353\247\251<\377\"\315\274\372W\"\275Z\0231\275\256\247\023\2755\316\035<\210 \367\274E\004!\275\331\021\240\274;\3019=\253\362\025\275\007\033\252<`\203%\275\206\026\020\275\370\227\t<y\203\374<\203[I=b\265P\275\331\330.\275U%.\275\2238\005\275\343\274\033=&\231\000\275=8\252\274H\342~<\222\260\365\274\2421\016\275f\200*=\244uF\275\251\351\335\274F\367\361\274\236\262:\274\203\252\232<\326\263\010\275\260\357\367\274\307\345\256\274\242\330\233\274\332\366%=\3001\246\274\010\307\365\274\'x\311\274\3129T=\000\210$=+4\213\274\272\033\364<\301\302-\275{\277\230<\315a\331<\337Z\270;!\377(;\300\200E<\300\373\211\274_H\352<\016sJ=q\tA=P\377\276\274\014\017Y<\3742\'\275$\300o<\360\364\243\274\206^\023=\372f2\274e\264\365\274\303\232Q\275\230\323\372\273\244\266\224</\022\300\274\237ZY<\333(?\273l/A\274\375}(\275&\210\211\272M-\216\274c\007\366\273\373\327n\274\225(\337\274\357\326\005\273E\035\324<\304\232\213\274\271<\326\274\227&.\275\207S\331< \255=\275\246\363\005=>\025\214\274\366V\217\274\362\245\276\274KU\200<w!i\273\257\020\342<\227\232\302\273\227\274`\273\025v\330<h\375>=J>$\274w\227\245\274\313\r-=\343\350}\274\007fK\275\014\3669=\020\254\376\274\0264\370\274\r\220\020=\364\337\026\275w\3503\275<\333\266<\243\354\374\274\232Q\360\274\207P6=\311\302P\273Gv\257\273\270\275\336\274.\034\305<\222\254X\275@Kt<\335\322Q=\'\007\336\274\233\325\325;\020T\365\274\273LY=l)\014=@\025\305<\022\005\254\274i3\316<M\226G\275\300\362Q;\215\006Y\275^\023U\275@QS=\234\3268=\257JH\275\326\327\n=\035\2358=\242C\302<\216\240\306\274\215\201\'\275\270\364\345\274\027\026\002\275@\216\004=\034\247\366<X-=<J\225\271<\263\270\276;{\270\013\275\302]\354<\203\245-=_\274\277\274\336\367\341\274G\036\026=\320\306I\274e\034\031\273\201\005\024\275\032f\272\274*\232R;\035\002\245;\\\177\311\274\252\337\312\2744\013\215\272d\031\002=\3710\031\275\341\365\237\274K\227\203\274\250F\213\274\036\274\302<\2602\204\274~\255\327\274\213m\370<0\3746=w\220D\274\315\376\177\274\362\300$=\350\005\301\274\345G2\274=\207\204\274#\265\264\274:\272!\275\312\257g<?\032\240\274\22515=;S\350<\340\205\021=\371\353{\274\002\0202=\022\316.=0JI=\002uS=\272i7\275pdE;\370\020\007\275\377^\204\274\261\3120\275\210\2609\275\271\316\017<7\246\'<SG\314<\257\235+\27467;\275\261\237\256\274\031\206\220\274\315=\251\274ixM=v\340\346\274\025\331\373;\247\2756\275An\254\274\202\327\243<\332\374\232\274\004\225H\275\313\251O=\223\314\022<Z\216Z=+\326$\275\256\036\001=\206\346\340<|\240\203\273\261\014\344\274\'\262\340:\363\241?\275$5;;\356:Z={U\t=\333y<<\3640\327\274Q\250\036=f\265\030;\343B(=\312\307\232<\241\350\010=,\345M\275\267\326\230;\033p0\275\223\374G\2744\036P=X\023Y=\r\377\243\274H\261x\2740\300\013\275\034\014\017=\250\267L=|\274.\275\307B\331<4\361U\274\267h@=\265\177F=1\225J\274\205\350\000\275\005\355W=\254x\'=_l\234\274b(\\\275\256\374G\275;\3654\275eTZ\275\302%6\274\254\200\355<\367\234\016=\220\333\242<\022<\006<JaJ\275\214\006x\273\341K\026=*\3722\275T\224\025\274\235?\316:\0168+\275\274\254F\275\302\323&={\022\304\274%\207F\275T\217\013\275Q\233\005\275k\357\r=\323\225C=(\237\251<\252\320\323\274V\267\031\2733$\223;\306z\031\272\365\237\030=\255\033*<\224\345\035\275\357\004 \275\002\360\362\274\207\305\366\274`\237&\275\376j4\275\227\t\267:\037XI=\251\275\320:a\202R=4\307/=y\300\016<\254\334\345\274v\215@\275\227\273\316\272\233}\266;\320\3025=\227\002\342\271\315K\212\274\2669*\273\013\266.\275\373\'6=-\033\205\274\263\337%\274J\243#\275\023\374\340<\364k\\\275\353\305\036\275\024\177[=\271\306\215<uh\203\274fK\003=m\222\024=\223\032L\275oT\322<\314nH\274R\276\010<{g\223<\264\026!=\342r\033\275@\263\016\2745\341\025=B\274E=Y\224\225\274\346\316;=J\264\271<\255\\\231\273I\362e;\3131N\275\205_\336\274\320g\376<\272A\013=(r\034<\212\354\222\274;L\337;G\316\321<MM\227\271\312\314:=\337\366P\275\230J\025=\346\3758\275\3555\375\274$\360F\2741[A=\216\322\007\275~G0=\324\335\367\274|\203\367;W.\007\274\364\302#=Ql\226<\357\343R<\t\221\313;\363\255L\275\235\232\271<\300.\\=\342\324#\275\244\302\210<\022\213w\274a\251\017=\340\276\376\2749\251\004=\nZ\005=\275\230\354<\377\371\'<\230\367>=\263\222.\275<F\202\273\233M\222\273\031f\264<\200\251M=\324V\013\275\353P\\=7b\024<\356\364\312<\361\'(=K\003\224<\025\336!;\001\232/\275\365\233 \2756\025\017==$F<\316\271\356<\232\375\221\274\212m\235<\r\355\207\274t\252\252\274\034z\315<\201h-\275\321-\237<\202$\354<_q&;l\332+=\231F\210;\256\203\021=!3T<\254\351\023\275)\350\240<\276\032 \275\0018`\274R\374|<\265\205U\275+\245\222<\036\2247={H7=\304\0302\275p\032\001=\315\215N=\337K;=\236\243p<\365\030\'<\357;\350\274\014\341&<\330v\312\274J9\006=\224oB\273\216\316\266<B\313h\274\225\007\353<:5\200<\272\271Z\275\377W\233\274-\216\343;\372\230?\274\037.*=\262c6<%x\220<\235\317\203<\314H$=\330\233=\274u$\205<\265a\257<\366%\025<\002\211\311<x\324L=\345\002\001<\036V!=\300lA=\270.\022<\351oV;\2627)\275\224@\344\272\034\350F\275\346\\%=\317^\207:\266\':\275]\027?\275Wn\033\275\335\336>=f~}\274\260\010\247<(\320 <\303\355L\275T%\227\274\203fZ\275\037~\313<Q\330\217<t\357\024=\267\272S\274[\311V;F\312\017\275\017\243A<e\352\233\274\237\3229\275\253\312\263\274\355=\244\274\262\365\261\274q\r\031=\304\336\332<G0&<f\374\010\275\360\270\002=\227\013\033\275u\275L<w\"\345<\206\234\243<\221\334\232\270\223\006\004\274\256\237G\275\272\331$\275+\344\000=\217c\345<5\321N\275\232;@=E\277\031\273\323HF\274)\366-=\244\201\343\274/\3541<@\273==\371\360M\274\314\210D=\232?\027=f\273\360<j2%\275\251\367\007\274\365\331U<\301\203\302\274;;6;\365\203\305<\\AM\275\267\323\273\274o\351\234\274!\215\260<M\007=\274NN/<\022\272\017\274o2Q\274\330\217+\274\335\'\357;]\246]\274\232\350\'=\003F)=\335\313y<\251\2200<\365\225\007=\306\255\026\275\224\322G=\277\'K\275\317\273\236\274k\235\210<\345\272\233\274\n7\010\274\204C\373\274\265\377e\274\317\342A\271\010\347J=\230\320_<i\\\035\275,`k\273\030[\205\273\237\337\372<\336\332|\271\270\377\020<\260\030\204<\013\260\275<,\006\340\273*\245;\275\225UP\275\214\350\000\275O\234W\275\307\351==\035\240\017=\"JC=N`\251\274\223\216\247\274f\351\312\274\033\031\241<\332\250\222;$\303H\275\245\233\014\275L\350\026\273T\0303\275\267\247J=\332Z\007\275\023\320\030=\377\363L=\222\353\331<)\234\347\273\230\0254=h\333\375\274!\224\020=q\274\313\274\336\231:\275\376\036\032=.\324u<\344\254\030\275\213\310 =\356\253\334<\372,\324\274\357\256A\275\220P\034=\036\327U\275\017\356\221\272\371\321T\275\013I#= >\326\270\377\024\020<VPV\275\003\300\177<\314V(\275X\373\004\275\247\204\262\274\037\225\307\274C\366C\274\331\0314=.\336V\275\364\341\212<xx\326\273+^\235\274\245\241\"\274]V\025\2744\356\347<\277\376=\275$\247@=\200\253\025\275Y\240\000=K\014J\275\200F\230<\220\373T=\325m<\275\377MN\275\257\374\016\275\266\221\300\274\024{\371\274\316\331\203;);p\274x\333\233\273c@\214;\312a\357;_\3312\275\005<%=\013\370m<\220\211\030=\361\025\022\275].U\275w\216\207<;\207\014=\220`A\273\024=\304\273\0042\027=/\331\033\275\217J\373\274y\244\005\275T\324\206<\003fO=\234\244\025\275\214Y\357<\t\241\r\275\226,\357;\275\277Y\275-W\245;\203\032D\275\253H\300<\321\324\317\272rr\261\274\262V\003\275\341N\r=\362\001\014\275\036|\305\274\247*\r<UP\r\273\350\333\204\274\002\3264=_\376\303<\236\367G=\327\352\302<<A\031\2758<N\275\252\217\"=\240\310\001\275Wx\3479E\035\363\272\026\264\270\273\251`\232:\3730\340\274\304s\035\275Z\004\031\275\372\362\030\275>NH\275\022\224*;\356\266R\275\242\261\216;&\237\034\274\373\3226=\317\337\024\275\250\311\t\275\037\204\000<=\003H\275q\001>\272\347\031\273;7\324S\275\346\335\257<\000\301H\275\002\'#\274D\207\035\274\237\3145\275\252\357;\275K\303\n=\315\"\214<:\271\177\272\t*C=cI1=\346\226R<\316\313\205\274\236\216\266<\366i\002\275\016\373;\275\0211\341<\333*\037<\325\260L=xHF=C\3570\274\n\211\036\275\021\203\022<\327\223\347<+L\364;w\243(=MMb\274\0006=\275?\0140=\0279\303\274+\330\333;\214\236\245<\230\331\377\274\235\346%<\203\365T=\361\311B={\2229<\302\020\363\274\333\242\340\273\250\020\210<h\014\365<pM\203\274\022\024\352<,E\317<\213\362\371\274\315\t\020=\3655\277<\242\3110=H\213Q\275=\202\351\274/\253Z\275\274\233\314\274\300\223==\342QZ\275\312@}\274\036P\005\275\031\212U=h\020\374\274Re\346\273\345?\336\274\363\006\002=\214\2000\275\241\334\025<=\343g\273\265g\251\274\251*\245<\323\325\036\274=\257\355\274\335Z\234\274[<V\275`\005\274\2715\317\024\274\217}\252\274\014\352\023\273K\237-\275\017LN<i\310\342<u\025H=\256\340]\274\034\341\000\275\311]\343\274\376\005\202\272\373\006\222\274\261\004V=\220o\016=>9\343\2748\377\251\274\376\354V\275\332\023\032=\3039\226\270\322K\300<\363\262\\=\236@\"\274\351\035\330<i\221L\275\214E\006=\347S<\275\307\353\373<ww\3119A[\323\270\240\342.\275\253\025[=\211\021V=\242xp<c\370\007<\324\365/\275\202\277U=+\026.\274BI\374<r\233\026\275\377\356\'=\016\315c<\350=Q=:\253K=\3668\274<\233\036$=\307\240O<\020\3217=H\231\033<&~\"\275\364\261\032\275\273\230\254<\263\001T\274#*\n\275\007\373\004\275\275\356G\275\233o\374\274\266\212!\275\357\251\014\275\230\020\302\273\340A\022<\377\343\034=\205@@\274S\362\374:8#\301<0\204\337\274\372m\345\274/\234\014\275\274*\032=\007\341\340\274\"j\022\275]\362\203<\273E\274<\325\2465\275f\230&\275\300\243\365<7[\021=9@\212\273\235\273\243<PH\263\274H\372\363<\037E\376\274\364\332\005=dP5<N;6=C\352\342\274gP\203<Z\211P=\244e7<\236Z\334<\213\325\002\274\230\312C\275\'GV\275\306np<\304-\253<S\362\235\274\271\315&\275\225\223\000\275-\271\220:*7U\275\345\207\032<s\336\202\273F\220\331\274\0004\271\2745\205\236\274\332\201k\274:\2240=f\315\230\274\027rK=XA\210<\240\177\034\275\023b0\275\340\013Y<\352\207\003=\364\250\010\275x8W=W2\320<\341<\324\273\010\000_<>q\332<\214LA=@\231\371\273z*<\275T\266\036\274\377\035\273\274\001\360==\002\303\n\273\272\270,\2753\013#=%8\317\273\006\262\r=\350<\273\274\370\235\023\275\244w\215<h\216\205<\265S\004\274\303\314\232\274\252\317\200<\031\257&\275\030W\212\274\013T\374\274\211\302\201<\0343\035<!\236\326<\272\034\267\273|\324#=\332\341s\274\316O\007=\363r\225<\320\303_\274a\006\212<\\\222\035<\\P\242\273\036n\211<\342\326\005=ajV\275\262\211\020\275D\251o<\314\341\314\274\000$G\274i\371\177<\"\000$\275\336\212 <\345`R;\004\305F=v\0136=\313\027T=go\260<\356\360S\275\225\020u<\304\206 \270\303\345&\275+\226G\275\255\221\202<=\275o\274\300\332\"\275\275o\300\274\324*\245\274\345\332N<\202\220$\275\200b\304\273\256\373\325\274\035\311@=\271\0247=|\3073=-\001\253\273\342[\227\274\216\373P<MM%=\306\375\214\274\363p\n;\251\034*=Pv*=\255\027X\274\327k\034=\301[\025\275\237Q\312<\036\367[\275\234@/\275!b\345<\217\270E\2742s\300<\'p\271\274.\317\244<f\316\010\274B\003\\=f\220!=\353h\274\274[4V=\2051\372< \334\375<\354\020 \275\314N\271\274e>J<\217W\024;\321\302E=\231\306\000=\265,5\275\027\203#\274$Y\275\274\233c\027=\274\367\021=C\243\316<\013\241\017\275r\340\006=\207\303M<+h\374;6\351.=W\312Z\275\372.0<f?\333<\316\202\021\275\234e\307\274\311\031\223<\310\216\027=#KU<\374\262\362\274\322\t\200\273\257I\213;\336\373\026\275\035\267M=\255\3722<\350\253\032=R\'E\275\345z<=e\311\237<#\356|;\004\\0\275\272\262\000\275\345\327!=\300?\221\274\341\211S=\343\313N:\014q\234<b\361\'\275\261\342\"\275n%\t\275w\225\316\274r\302\367<\275\232W=\364.M\275\274\321y\274)>s\274\226(\325<\033{\300\274\003\014\215\274^\351\006\274z\231\240\273\017\373\322<oi$\275_\300\036\275\241\305S=\222\'M<\000\210*=\\\0310\275\361\016\302\272\004\016\253<R\2421;\\\337\225<\221YZ\275CW\314\273\022\315%\275O\304L\275\251\241y\272\236\312\037\274? q\274\217\315\254<\245\262\207<\301,)=\230\010\t\275\366y-\273v\377\333\274\225&\036\275\177\345\230\274e\2235<\3303\222\274\250\350\243\274\361\241\013\275I\340T\275\236\255\030=\2472%\275\343\3174<N\214\315<\222\216\243<a\262\214\273P\330\017<\007Gw<\263\307\\\275\347\202-=\240\311@=\023\016\245\274\324{\035\275\3574+\2758\243<\275\022\001\004\275\016\206\';F\005\337\274\350\302\354\274%|\225\274\236\213\204<|\251\023\275\2128V=\006\217\177\274\"\265\370<\001\363\035\275\0033\214<\360\224\327<0\243\016\275\016\303 =\242\356\010\275\016Q\376\274-\207\355<\030;\347\274\215\336.;\275\007\006\275\323\310\211\274u4\216\274^qe\274D\236i\274q\344&=\235|\003=\314\265\332<\016\211`<,\363P=h\'\010\275\325\230\330\274Ur\021<>+\274<\215\205\356\274\353\245\\\274\224A$;n\314\314<!+R<\275\322\236<qD\023=\207!\215<QqH\273\016\006D\274\344\307I=\347\221Y=9\205\030<\357D\'=\301o6\275\354\033\031\275\345\207\r\274\0356\013\275N\241Q=\004\214\257<a\213\034\2753\226W\2744\246b\274\216\257y\272\177\352\374<XQ-\275\\oZ\274\324\332\'=B\361\361<\275d\034=\226/&=\350\267\277;\212),=\207\272+\275N\225\334\274\030\234\236<\301X\\=\251T\027;\313|N\275\353s\260<L\277\000=\234{\236\274\270\305!\274f&1\274]\322j<v\326\351<l\226F=Y\377\r=\324\026\242<\340\350\264\274/\305\364<q\263\363;\343\006\331\274Cx\243;.\026R\275SF/=\264&\330<\233\305q\274\201\006[\275\310\227=\275i/\014\2751h\022\275g}\014<\021^\005\274\246`]<\340\032X=\244\212R\275\037\320\322\274\352\034W<6I\366<\005\352\245\274\000\325\223\2735n6=p\252\233;\020\353N=e`<\275\"K\264\274}\351Q<M\222\n=\r~\007=\363\344\356<]\320\357:\r\236\034\275~\245\332\274\030E\007\273\232\366\232\274(\244\002=\247\366\362\274\022\307\203\273\3655\243\274\306\025c<V\034\237<\2144o\274\\\357R<\203}\330\273j\031\253\274\313V\246\273\031\272[;O@\250\274q\206A=f\206\260;\016\346#=\216\217\'</\367f\274*\245\021=W\237\014=\214\260r\272\245\255J=\336\367-=D\210G\275\315+P=\256\333\004\275:2\315<\273\212}<[o\365<\342u\221\273\004\225\312;h-\332;\262\001G=\270\261\304\274d\321Y=\337b\235<\213\303\335< ?W\275\332\177\313<\002OT\274aC\302\274\022\200\206\274\303\254:=\002c\307;TH1=\002\232\024\275\242\375P\273\240\316\r\275H2/\272\300/\311\274\226~P\275\023\340M=\215\004\027=\263n\014=\342\334\023\274\263\235!=]\205\361<\360q\330<\004\205W\275+L\226<\267\"\251;\242\213\213\274n\247c<\357\234%=\021+\263;\004\234\353\273\312\001H=G\324\377\274\251<P8\331\017\204\273\304\004\347<\367\375D=\000Xg\274\245\342\365\274\200!\005=\031\027\257\274\360\" =\036\010\366<f\275\301<9\327&\275\326\357Y=8\177\035=\326,+=[\037\317\273\224Z\007<\263\004^\274\200\016/=\232\346\224\274\007\323V\275y=\322\271\tu\257\274a\354\020:j\314\274\273$\262H\275E\270#=tA\017\2751R\204\274\270T\272:\363\344\335;\013\306\243\273\254\022\243\274N\202\303\274n3\300<\271\272O\275\263,c<K\262\024;\000\207&=\313\031\024=\212\020\\=i*\376;\254H\227<\n6\010<\237\252\035\275\221\302\373<\361\267\360;\371\354\010\275\321\334\273\274\376\241\002;\261\010\026<}5\025\274\313\025\236;\304kK=%\200H\275;\322R=\214\010\t\275\376s\266<\037g\005=a\215V\2750\230\033\275:&7=\232\277\035=\363\207\373<Z%\245<\357\345\020=\2527,=OW\267<\r|\375\274\030\334\334\274w#\374<\264\020\022\274\364\2174=\014_\024\275O\3771=\226\363*=\027\265\310<6z\327\274\232Y\021=\306+\362;/h0=\231\350\036<a\377$\274\354_1=\035#==\312\001\024=<\3520=\311z\001<\374M\271<!\307*\275Y\303\305\274\t\\\252\274\333\336\n\275\306S\336<\241\205>=\0246C=\211\256X\275Ro\346<\376Z\016\274\272\025~<tPF={8\226<\303\207#= \255k<\316\307\252\274\265\257\320\274F\262\375<\327Am;\223\271\307\274\326\323\206:*\343b\274\342\000-\275p\022\267<W\361\336;\356\337\035\274w0Y=5\005\322\274\353!\010<.`\006=\2318M=\351zs\274S$7\275\355\007\034=,%i\274\303\232[=\"\246T\275\202\313\014\274\006\223\373\274\2777\002\275\277F;\275\006P\341\273\010\177o<\270\356\037=E\354\207<\211\2771=\013\221H=\367<\332<b\257\252\274\354`\367<t \256\274K\304\034<\336a\302\274~b2\275>\251\021=\251\376%\275\224\363\037\275\251\014\"\275\236\rI=\230\231\335<\370\356Q=\213(\016\275\377p];\331VQ=\273\377\213<i\255\265\274\3321\305\274\355\267\363\274f6\026\275\302\340c\274\032\362\302;\250\334>\274R\313\314\274\340\'\307<\252\315\236\274,\203\215<\300%<<\230\350A\275\225\306u<\315i\240<\370\246\363<i\363Z\274X\266K<\262\235\030<.\240\014\275\312\001T\275\021q\337<\363\021C;\3333\003=\016\315X\275j\0255\275\217v\210\274\037\216-=\242\225D<\306\276\243\274\227\212I\275\254\242\355<\364K\336\274L\202\032\275\016\371v<\265\332M=\314\324]:\361f\035\274\2505\002\275\227\350\303<\036\\\224<~\257\341\274\020\227\217;&o\242\274\347\340\'<\313@9\275%\347\374\273.\007\025\275S\200\356<\r\246<\275\270\261!=\347\300\323\274(\003\333;\025l\256<\224l\343\274\365l\330<k\025\242;=\005\331\274{R%=\301\330\234\274\367\010\n\275\366\t\321\272f\001\030\275\220Z<=A(\016=X\345\023\275\372\264\273<\273)=\274\200\327P\274\022S\032\275\252\rG=\337a\001\275\377,U=\322\260A=\013\340B<\341\\H\2753\265v<{^\371;\007\234\364<\272lA\275\'/8=\376\002\037\275\341j\350\273\264\370\312<\034C\241<\264\353\270\274\316>\000;\305\354\022\274`\210\332<\276\316\033\275j3;\274C\256\212\273\243\257\010=D\272Y\275:\271`\273P\307\332<^M\007=\301;\035=\037\327\022\275\2456\345<0\261 \275\013\222`\274h\336\017=}\216\'\275\234\257\3679@\241\206;M3!<\347t\365<\335\331W\275=\346\232;\212\345\037=tE\251;\361\305P=~\375 =\177\215Y=cn\023\275\221\353>=\2703a<\211\360\020=k\274/\274\203#?\275\034\265$\274\364MK=k\375/\275\316j\026\275\307\215==\205\231\030<\206\214%\275\026N\271\274N\261M=\236b\013\275e(P\275a\201\013\275;W\210<\277=\036\275:`\200;Fo\343<\221\307\222\274L\242!=\261OW\275\027e\036\275\003)\323<\304\314<\275\240z\001<\216N\000=M\302X\2755Y\250\274(\327L\272\177\374!<\214QP\275/0\022\275\014\004\237<6A\275<\177\300W\275b\367\324<h\356]\274N\213*\274\275\026\020<\004\226\267\274\370\3317=G\316\327\274b\272<\275W\200\357\274\235\035&=\342\306\263\273r\013O=[\306\006=P^@=\212\346V\275e#\201;(\243-<$\034\276<\216\302S=n3H<\216)V\275\242\363?\274\210-J\275\302\253\261\274\311a\254<@\024:\273\240L\013<W\325\356\274P8\005<:\265\344<\220\303;\275\211>\302<\323\215\266<\313\272\232< \0045=P\271J=<+\374\274\201K\233;\345\021\033\275\322\003\037<?\273\355<\035\214T\274!0\207\274\244\005#\275\342\322K\275;\224\375<\275s\243\274\224\374\225\274\21323=\366\034L=\374\316\275\274##\004=\020\366N\275\354\262B\275\361\000\020=L\200\304\274L<\314\272\226\226\377\274#!5=\243\031\340\274\320^H\2750\2107=xR\340;\3026\323\273\317\030\'=\362\335+=\327]\257<\254\261E=\nVq\270\337\314<\275\205*\256\274:\242\345\274d\312J\274\331\002\033\275\240s\367\274\345Y\033\2743\347\014<\210\321\004=e\207I\274\243\301\367<\307\006\001\2759\024V\274\200\230O:\005\301==\034\376\315\274\362\200\233\274K\242\367<hy=\275\216,E\274h\321\241\274\226\250V\275)\320\030\274\310`W\2755\247\372\273=\026\242<\251r\206\274(\274v\274\013MS<]99\275a\376\211<\350\367\006=\211\250\335<\024{&\2758P\220;\\M\307<0\307\033=\3052;=lz\020<\345\314\034=.\3111\275\235\013\205;0B\036\275BPX=q\351\026=\275\241\315<r\035\311;%] \274d\362\'=\r\316\226\274\270\361\036\275\217}I\275\367\276\347\274\336)\261<g<\233;x\035\033=\372^Z=\032\271\023\274\377\227\202<\336\366\365\274\360\355\247\273Kh\235\274\322wL=\032\3731\273\272\370\000\275\261\365\326\274\211\210\255\274\003\271\031;\377\247\\\275!p\234;\'YI=\355\240\342;\370\310\025\275\203\312X=.\276\355<\256\356\316<\3155\364\272.*H=\274\227\250<7e\311;\377F\'=/\227\362;\246\327\267</\006\373\274eo\236<\243\253\005=\206n\002=\345U\204<\354x\016=\250\\0=\213\\\003<m\325\025=7\255\365\274l?\002=\326Y\234<\200\014\254;\271O\010\274\315\024B\275\313\0076;\244\232>=\353\225\312\274T\303v\274\003\332O<J\245\362;~\253\263\274F\340\304< $M\275&Kn<6\354\016\273w\t\036<\270\231\246\274$r\006=\244\005n\274\356\027\207;3\2129\275\031[\301\272f\250\205\273Zn\032\275\314\005S=\305\224\313<\257\257\333\274RwP=\001V\201\274\001\326\356\273\222C\017<B_\207\2727\232\033\275c\"\364\273\201\355\371<\005\003H=\316\033\347\274w\372*=^\2224\275r\334V\275\332\256M<\004\316\t=\004\214L=Za>\275FNN\275\337Z\237\273\207\376\014\275\222d\327<\025\"3\275<0\272<\357\003\311\274\300\335\357<\345LU<\246\205\002\275\330\274\032\275\356\217h<!\3068\275r\253\373\274\254\315\"\275dx\326\274\357\215y;\342\341)\275Bs\001\274\0309O=\342aY\275\327g=<\254#5=P\331\243\274\300\\\003\275\356&\377\274\2452\016\275\004%\340\274\312\264\244;\013\341I\275\242\275Z\275\233\202\205<\001\030[=\276\310\311\274q_\365\274\021\347\243\274/]\270;\303\3638<3\360H=\017\\\337\274\224\351T\2755W!=\264\tE=\2415\310\274o\2403\275\304C\303\274\302\343\037\273%\246\355<]\303\251\274\233\306\265\274\003\3606<\021\205\036<s\254Z\275\365\257B=\257n5=\227\0344=\357\034L\275\307\300\007\275|\n\315<Q,\026=Q\305\313\274\330\367\344:\231\257 \275\271\364\n\275\014f\207\272vz\250<\347\2461\275\321w\262\274\265\242Y\275\245u\t\275\311\210\n\275-\357S=\356\024!\275\276B\350\273ImH=.d\200\274t\307K\275\203\246\34790E\001\2755\214;=\370?\022\275\330[(\275\204\311\353<\367\247\217<\371\346\205\274\332H\262<#\025\222<O\236\005=\267G\234<\330\320\025\274\203a$=z\240\023\2750\020x<c\233\334;\201\n\215<\253\361\004\274\005\277^<\335SH\275t,@\271\262c\242\274C\325\314\272\355\334\254\273\"|\250<,G9\274\346\362G<_\337\315<\250{H\274^1w:.\034\357\274\002\214D=\336/\016<cjp\274\337\373\013\275, \364<\205:t;\223$\031\275\014~V=LP\336\274\273\'\006=\267\031F=G\333\020=J0\313\274\302V=\275\270\"2<Z\214\334:Hf\245<\242W\320\273y\251\332<\346\231V=A`0\272By\377<\233n/\275E\255c;q\202\212\273\321v\373\274Vd\013<\257R=<\316\262\037\275\256?\227<!\2076\275\220\253\361\274\224\253\037\274\25513<g\2771\275\342\334*\275/I\257;\202k\374<\010s\320<\021\317\000\275\306\214\215<u\360\367\274\251\255$\2755E{\273\374>\241;\345\277\321\274\034\320\260\274\251\353\017;B\317\324\274\337\226G=/\315\013=,yD\274\334\205I\275`r\025=\211\3568\274\2159V\274\355\000\276\273k\030T\274\370b\233;\267p\r\275\345@C=a\000&\275\031\0163<\203\366\035\275\030~ =\206\261\001=\343$=\275\017{\003=Y\367\026=t\225\262\272c7\360<!o\010\275=\344\214\274\313X\242\274\037n\276<V\376%\275\313\255x\274&7,=[\305P\275\315\357J\275\3501\367\274\267\227\363<H?\205<\030\177\351\274QQ!<\354L\264\274g\303T\275\375T\207<\365]D<\240\325\300\273\352\224\350\274\247\237\000\274j\224\247<\354P\032=B\n\333\274h\372\032=\351\275\350\274\356\334-\275q\005\217\274\251w\t=\331\367&\275N\370\307\274\014sk:\331\3171\275[p\322\274\r\305 \275,f\236<\314\330\367<\316\320><\334\343\214<9\2364=6\223E=\315\274\007\275L\036\367;\251@4\275\340lU\275\377J\371<\0275\353\273\014\030\003\275\254\000\211<amN<\240\276\356<>\220E<k\313V\275[=\\=oi\t\275;\017A<\351|\010<\362@\343<\234\251\\\274]\032N\275V9\214;\351\322\353<\226\361\346\274A\300\032=u\313,=\264_\007\275\212\210D\275\037`\347\274\016E\000=\363,\246<\245\002%\274s5\"=\371\017\030<\234\023\323\273M\310\016=\200]G=\261\313\250\273\231\0104\273\345\037\t\275\301\0074=2\331{\274\357\0160=B\256\264\273N\301G=l0t<B\023\031=\312\367\256<@V\236\274\365T\032=\375z\233<b\246N\274\321\002X=\377\213\'\275M_b\273\310q;<\351\351==\271\006\345<\214\326\010={+O= \345\n\275\341\273\270\2733\276\021\273\0233d\274\022\236)=m\271\'=d\306s\274\2171U\275\224\366\014\275^&\013=HC\371\274\267g\354\274\250\236d\273\276\003/=\265\363\204;\3043\035=X\341\217\274\215!G\275o\025m<U\364>\273\r\365`\274\303\304\016<jb6<-,\030\275\247\204\025\275\234\214\025=\235cP\275\210?R=w\036\213\273\366\272w<W\251\321\273RW\r\274\013\310\342;\373\341|<\202\303\n=\272?W<\326wL\275\375\311\363<r\367)\273\230\336L=\031\224*\275\306\230\261;^/h\274\312\251\201\274\303\037\343\274\263C\234;\370=\260;u\303\236<\264r\336:\345\320)\273\342.X\274(\024\372\273\2207\214\274\230g\220<\250\235\356\273\205\017\272\274\010\240\235<\207\204\301<\025\320\006=\353~.\275\203\351C\2751\344\270<*\200\022\275w\212\241;\346\252\346\274\216XP=A\361\263\274&\310r\274\324J\035=H\207\340<[\232n<\337\260\340;i5\027=\231\255\372\273\013\344\345\274C\262O;\311\312\263\2745\330\275\274\\\320O\275\247\337\213:\361[\013=!\2379\2755\263\221<\354P\004\275E#\3158\207\247\325\274\257\301\005\274\006T\245\274R#\270\2732a\363<\364\021\006=\177\223\t\274k\226\010<\253\204\272\274\227$\355<\341\2252\275]\007\270<\247\">=\332-\376;\344j\224\274\301\200;<\274\272\021\275\370\0245=\340\245\355\274\226<\021\275\032\262?=\267\271&\275\230\016Y\275\2145\272\274d\016\017=\004K\302;53\025=n\220)=\"\317 =!\002\360<\363\n\304<\006\334\302\274\201\030O=\022Y3;\272\261\034=!eY=?\005;\275\270t\n\275~\260 <} ^\273\376\001\022<\373\335\266<9\300!<\240\246\364<\003\246*<\212\327\330\274%\365@\275B\304\251<}\004\262<d\300B\274\204\375\\<Y\232V\275~\376!=:\226\273<Os\261\274\230\247#=\373T]\273\344\271\023\275V\274,;AO?=\322\n\347<\014\t,=\034\254\023\275\274c\342<\024%7\274AF\217;\357K\006\275\020\312\330;P&?=\263(N=\215?\272\274<\035\250\274\216}\n=\310\'C=b\251\377;\335\327\222\272\216\232.=\004\024\255\274&N\030\275l@!=~\0316\275\2347\000=};\023\275\357^\244<\337\320R\275dL\342<_6(=\030\244\277;P&z\274&MW<\356v,\275\203d&=>\244\225\272\233\317S\272\367z\212;\365\332\327\274D\361\331\273\014\260\023\275}\321T\275p<\005\275\263\034\213<\214[R=\r\037\211\2746\274\215\273\363#\366<^*\222<[,\316\274\306\302^\273\265\003\034=d\300\277;\033\236!\275%\322\022\275g\345k<\216\346 ;\352\213 =\002\035\036\275N\3573\272\320\275H\275\243\313\3329\332\0330\275\255\364\363<!\006\264\274U\001\031:k`\030=\2505Y\275\353\332M\275\346\315.=n\000[\275d\350\223;\353\222\027=\221\250/\275i\263\370\274j\002#=\320\255\n<\235\217\356<Xd\277;\365\242\250;\210\3647\274\301\276\330;n\220\203;\\NJ=\002g\t\274\245`&=!\320E=\262\227\244<e5\230\274\203\277\230\274\'\300\222<f\366\250\274Jhy\274\370\317\006\275\177\366\200:\235z\237<\350\337\306\271^\033g<)\232\033\275\336u\300\274\326\241F=kw@=\007\020u\274\330\024\376\274Y\350\272\274L\244\017;\274\230\026<K=\211\274\037( \275\262\335\031\275UBL\275\202\031\246<\304n\027<B7\013<Xh\005<BCK=\370\236\211<3\331\257\274k\223\353\274\272\rj\273\261\260\364;4S\017=\031@\032=\251/\333\274\374\r%<J\t\216<\267L\222\274\021\354&\275@C\246\274\202i5\275\226e>=v\r\274<\353\2405=\317\227\356<\353g\364<\232\221@\275Y\036\320\274\030\335<\274\274#\351;]\205\253\274\027\376F=\262\364\005<\004xJ=\232Y\332\274\266JO\275QYV;\366G\361\274t\016*\275\334^\t\273`-\200\272%R4\274\210\267\222\274R\006\277;\216\217\266\274/\r\232\274XT9=$A\177<\366{!\275\2726)=\325q)=\311\203B=\255|3\275ps\014\275v\237\"<\030]\211<\204,1;\215\023+=\210\231b:L\222\362<\035\3204\274u\345\226\273\361I#\275\356\213\200<~\2115=E.]\274\007\2353\275\032NV\275\202\305)\2753Q\000=n_/=\260:\031\274\203d9:\\\205\240\274\001\nD\275>\272\024=t\360+\275@\274\004\275\355\267\324;\325o,=\375\027\021\275K\037C;u\217\253\272\367\230\310<`\247N<\203-\r==N\316\274Ct\272\273h\202z\274\352U\341<\330Q\003\274\207\243\205;\331\271!=\203\347\270<\235\312\241\272\264<\026=\rVV=B\005\331\274\323\200P\275\351\364;\275\372g\226:w\034\304;TL\035<\271\022\370\274S\216\253\274o\205\365</\334[\275\003\273\036\275\303.\343<\003\344\374<Y\2143=\024\360\'\275\250\220\273\273\216\027\036=\037\006\246<\200yN\274\"U@=\224\177G\275\272\373,\275PQZ=\260c\\=$\245Q<\200d.\275\356\243`\273\r\025h\274]\037\241\274\n\016m\274`\232[=7\0074\274.\322\203\274\271vB\275\257<\204:\277k\372\274\3137C\275m\200\227<\016 \206<\320\317N\274\363H\343<\352\002\321\274;P\006=\231\343\212\273\223\3618;e]\002\274\032e\027\275]\032r<pm\002\275\033\0030\275\270OS=0\324\004=\352#==lZ$\275d\316\"\275u]E9\243o\035=\322\314Y=M\272\030\274>@!=\006\253!=\300\321\030\274~\307r<\014U\311\274\374\365\020\275\033\244\'=\2223\266\274\2548A\2755\2311=<\356\356\274\360\013\315\274\352,%=\200\nY\272\'\352\005;_\216S\273\234\252\344\274$\330\374\274\306\346\367;\204\025\376<Nt\021=?\215\r\274\275\344\205<\352\013R=\360L\002=m\367\242\274d8\214\273 \243\301\274X\213\017=g\270\003\275\255\325!=_\235\211\274.[><\357\250$<\0328\267\274\"V\242\272xJ\036\275[\324V\275\362 ;=|F\300<\032\373+\274\377\307\\<\364\332\250<\352\331K\274\031\263X:\344\324*<\252 \344\274\303\361\354<$\005I=z\370E\275o\351P\275\324\223\325\274S\210M=\210$H\275\251\006Y\275\006\361\'=\'9C\275R99=p\360\r=\324\376\235<ri\203<j\235\370;8\220\031=beC\275\307\354Q\275G\242s\273\002\2049=1,(=$\023N=\337\3246\275\177\274;\275B,\024=\r|{\273\024\302G\274Q/F<\245\177\364\2745\031\026=\313\343\303\274\257\354,:F\264\t<\r\207\266<\t\344\243<\365\364\004\275\344\301z\274MB\254<0\265\236\273\252\315\207\274\330p!=\204B\203\274\241\034T\275\327\274\336;\357\224P=b:\'=gm\230\273Q\007\315<\244\3703=\007\3368=W\2334=\252\343R=\003B\355\2748\255&<$\003\344;;\265\034=\301\346\026\274\262\020\\=\303\274\037=t\316\214\273\351\310\211\273\235\034\371\274\037\350\255\274)\216\037\274\340\347\377<Y\200\366;\355}\311\274Q\233\377<\336\212R=x\3472\2750\310Q\275O)\037=\313\334\267\274%ps\274\274Uk<\243\236c\274\006l\310\274\262\036j<\304\020\214;Y!\025<\242\345\252<\204\223(=\337\007&\275-?Q\274\300yA=\326\265\252<\035gO\275\335\315\335\274\2476\037=\366\257\r\275\263n\034=\227\314\005\275\303\323>=N\224*\2748#T<\334\014\271\274\013g\236\273\233\304\204<k\025\352;\251\244Y=\2010Z\273\260\341\032\274\352\005\241\274\225\207\323\274\212?-=\340\227;=\'J\005\275\274\323\210\273e2\376\272,\032\251<\'HL\274\370}W\274\333\2269\275\266{\225\273\223)\353<\377G\230<|\226\024=`Z\023\275\026S\267;jv\361<\212<-=\354\227\352\274]F\204\273\375\002s<\363\312\035\275y\236\000\274i,\'=\341;?=\332\325\352<[!\245<\341\305#=\305\327P\275\026\215\246\274e\023\216\273\305|\021=)\272J\275v\356\304<>|\267<\275q8=\005\334H\275\310%K\274\256\275\230\273\232\267\375\271|\267\303\274S\365D\275\246\240N\275\240\035\035=\224\223\\\275\244\022\236\274Z\025<\275\252\301\271<\005s[\275\203e$<\262JG\275YR\006\275:\020\324<,\2503=\005\177\207<\341H\001\275\250\323\007\275#\000\357\273\t\351\025=\013\352\003\275J\226-<\322\031\222<\204\264*\274>0\365<ve\245<\261l\272<\177\254\327<l\256\006\275\360\244\000\275\306\003\022\274IY\273<\256H\320<\222m\007=\036q\315\274\376\355P=\273\243\026\275\216KU=Dl\256;\341\321b\274d+I\274E\177&=\245\351\260<\334\327\024=\340n8\274{<M=sgP\275\210\207~\274-\310%\275\276\321\037\275\232v\007=7U\032\275\214u\241<2x\002\275v\264F\274H{4\275|.2\275\364\347I=\271\316f\274\341\324\212\274\367\205C\275\304\247\241<\264\006\334<\320S\352<,$*=\023{\317<\001)J\275\005\264\003=|\037\363<j\225Z\275[~\022\275\343CY<+\035\253<2lc<\227\245E\274\352\351\035;\203\242\\\275\022*.\274\262<\003=\332$.=\323\031\377<\236\252\311\273\272\177T=\227Wa\270\304\264\024\274\362\'J=\350S\034\275\210\274W\275j\3563=Pj#=\275c \273Hv\031<\271\346\211;\310\006\357;c\003\202\274\323\355G=s\207\300<\340\336\017\275\317uY=\304]Q\275\225i;=jl\3629\370\334E\274I\303T<\031\340\233\273J\206\030<\025$\024\275\370R$\275Lu1==\302+\274I\214\376<?\243\017\275HI\311\273_6\017\275A\326\017\274,\003\002=\230\312\372<fK\027\275\370\320\367<\365J\237\272\304\212\251\273\307\233\340<\344\323\302\274\224\361E\275\366t\300\274\322d?<\361E\304;\274.\'\273\324@\362<\361S\022=J\325\350\274\275\332\357<qL\356<^\270\365\274\r\224\261<C\265H:I\t\014\275\256\375\263:\240\306\241\274\336L\277\274\242\361\027=j\360\320\274\321}\343\274\014\017\366<l\212\331\274\002\210$\275\204s&\274Q\341\311<Z\260G<\n\315\267\274\357\301\324:\360\226\315<*\226\332;\301\311B=\0040\253<F\256\212<\366\246D\275\027\257F:\255\273==\010B\315\273L\231\251<\005L;=\341\313\252\274\222\356\002=\007\250\237<\2468 \274\351\r\215\274\331UO=\031\360<;RV \275w0\210\274\274\3254\275u\333\255\274\317\226q<\203\317\270<\305\324V\275\216/\032=t\020\027\275\267\004\200\274\005\025\316\274-\353\270\272\007\327\211<\320\353\347<\205\220\253<\201\354K\275\360\3150={j\224;\357^\272\274M\375B=\360\323*\275\314\334\315\273_B\316\274P\337\257\274\336\025X\274LO\007\274\233\276W\275\305\222r\274\237e~;7\213\210\274v\323\037\273W\317\263;?\022;\275%U-\274\360\306\363<\265\371\337<\016\377\003\275U\361\361\274\270\313N\274-w\362<\ra$\275\350q\223<\310\225L=\001+\212<G\336\216\274;\270\017\275\000\352S=\3721\267<}\367U\275x\353\243<\354\010!\275\3279b<\301\255K\275\307\310\027=\326u\354<\013<\374\272\262\315\036=\010\034\213;\365\227(\275\232\300\005=z6\021=\323y\010=H\030\372\274\203lC\275g&#\275\276\354\315;\224\276h<\220\314N<\331\300\333<s\361\376<\307}\346\272\032W\231:\206*\312;\267Ln<\314!\035\275:i\007\275\346\343\020\275\375GA=\346y|\272\266\303\357:\251\203\242\272\334\021D=?\242W=Yh\005=\336\016n\274\363-J\275A\246\246;\277\320\021\275\025\031\013\272t\265\354;`>;\275\225!\037\2746\270B\275\214\3218<sdO\275\332\210\031=q?S=\327d\372\274\366PJ=\345|\030;\275\267\023=\2218%=\177\036+\275\271\034\327\274\237\337\347\274W6\016\275,\334?<\013DB\275vk\351;\3253\311\274\277k\312<A>\225\274\301\336\331\274&I\315<\237e\";S\003;\275|\031@=\335\212\025<|\031I=\310\225*\275\276\253D\275\020\377\357\274\204\346J=Z.D\274p_\250\274n\221?\275\257\223\253<\013?\367\273|~?\275\246\335\263\274\037\2067=\205\377\315<\r\013\275;*\017(\273\333\346E\275\351S\277;\277\204\020=\0323U<\030Z9=x/\004<\232\317\311\2748\341\000\275\352\2726=\337Wy\274:\020G=\340\225\234\274\013#\203<oO\224<\241\2437\275\342\225J\275\031T\237\274\033\260<;\0320\007=\025\264\221\274\016Jf\273\221+\035;V(H\275\372\337#<#M\274<n\227\"\275\306\t\036=\224n\030=\307\275D=C\353E=\231\247\307\274\016\"j\274\372#\035\275\371\356\005\275\313\036!=\2646\177<zZ\323\271\352\023R\275c;0=C\350l\274w\307\344;Y\301\371\273&\275\322;\027\312,\275\246\227\313\273\213\206\034\275\376\2746\275~\320X<\252\213&=f\033\210;\337\377\372<\024\2751\275\364\240,=\350\014\222<\232xK=\234\200\021=\206\t\341;Dk\366\274\307\021\';/.\017<\003\300]<\213\337\021=\323\240\035=\352\325\341<\032\\\267\274\273\225&\275t\207\254;\321\231<\275+a3<b\274\020\273vU\031=\377\234C\275f\240\370\274\351\014\217<\260hJ\275\031\0130=>\371\260<\334\374\334<\205o \275\261\206\025\275\301\352\374<\237,%\274\016\264,\274\371\373\252<\224X\325\273\024\206@=\t\366\003<]\254\270\274\323w\336\274\305\224/=I\270\322<\241\323e\274v\367N;\2630m\274\237J.\275\265\247R=\177\350\002\275*\362\t\275I\260\n<\242av<\2315\350\274\375&4\274O\206\325;ec\324\273.\303\201\273`\315b\274\201@9;\244\323\310<q\231\014<\030$\360\273\016\271\256<.\312\017\275oJS\275Du\302\274\341\310I\275\035\244B<\264\377\002\275D\263\006\275D\333\204<\305I\231\272\002@D=\374I\232<\262)&\274\3714\251<t\006\201<\250\212Q\272t\203\202\274\240\002\313\274*\354(\275\n\\b\274\375\366P=r\367\260\274txN\275\373c\007\275\261T\300;\235\241\343\274N\216\324<\211\202L\275T \217<5\2660<P\241\331<yAt< \372\016\275\022\265\360\274\347\343\317\273\033\231\377\274\017\206\337<Ed\216<\004\326N<WJO\275>m\017=\353\262@<\316\250\014\275\262\245\030\274~\024\033\274\332\016\226\274.\374\t=)\3302\2752\243\"=ZLM=\366\350\312\274A_\226;\377X\233<\362\276\360\274\372\232\350\274\016\350\232<1|i\2741b[\275l\225\"\275\017>\271\274V\233\207:\256\310\305:\3749\020=pd\"<>\236\034=_`\177\2741>K\275\r\315/=M\227\004=x\004,\275\037\231Q=\013K?\275\307\237*\274\255\3058=\364u<=\335A\264\274\347\321\223<I\313\016\275Y\242X\275 (/\275\321b\244\274\203\261G\275uT\\\275r\350H\275\016\n\001\275\032\360\272\274\313\025\301<U2\353\274~\324\303<\247Z\004\274_\004&=\200\230M\275\267\t\274\274\325\001\027\274 \023\370<Y\202\035<\224>l<\203\351\302:WQd:\312>\315\274\231\273\314;k=\260<\354\331\342\273f\214\026=\306Z\341\274o\020)\274\266\022\017\275\010|\330\274\226\223\275\274\373\237.\275\336\275L\275\356\305S=\'\3240=\274\232\355\274\333\355\002=\316-\202\274\326^\016<\030\215\013:)\320\014=\364B}\274C\311\020=RQ.;\206bF<\242\353?\2752\220\022=4\r\225\274<\266z\273\260\314\342<\265\372\231:P3\017=\034m\010=\224\300v\274\272\237g<\240\316\337;\027\252B\275\357_\306<\305\n\016\2757\204\037=\243\342+\274\202\261\227<\022\344\345\274c\363y\274\245\002\r\275Q4\010=l\002\252;(\007\007=\027x\013=\022xS\273Z\0302=\230wE\275\242\255\333;\242;\232\274\"\246\371<}\033Z\273/\210\250\274\010\245%<\211\372N\275u.A\275\226 A=W@\201\273[\251\032\275\2472q\273*\317J\275<\325\217\274Z\204m<\005K\304<`\342\014=\357\332P\275\300\037K=>RO\275\235KP=\327@\306<Rb6=C\212\334\274\025\\ <\341s\\=\027\375\242<$\234P\275\314\245\022\275:\363\013=\260He<0\312-\275\265%\245<~3\370\2722\334\'\275W\373W\275\357\327E<H\224M=[\022\205<\327\321\231:\267r\306\274\014\3667=j\330\207< \321\312<\272f\023\272\324\016B=\220]\376<\025\017\017=\016U\211\274\351\336;=\257 \016=\362\017B=\027\324\024\275\204\332\353\274\302\326H\272\251\346\362\274\007\325\320<\255\236E=\347\341==\204\237\246<1E4=\256i\202\274\017\365\305<J\277P\275\305zD\274\352\242\004=M\2136=\274\340N7\362\031\263:AAc;\313\215\253\274\030\327\006=\001\230\246\274\333UB\275&R\304<x\261\014<\023\306,<\027UU\275\306\003\253<\262|\340<\343\226\333\274\013\377y<\3201==`s4\275y\343\031:\002|W=\316\246\247\274O\314\235<\323uT\274\315d\224\274\201QU\274\204\031N=M\260\'\275\341\306\004<_\306\223<S\277\310<\326/\350;}\264G\275\26209\275|\356\226<\021\346.=\202\343\302\273\341C4\275V\201+\275W\007\001=l\203\032=\255rI\274\320\246\007\2738\007\256;\317\223H\275# \004\274\272\213:\275\257\253{<_\315\033\274\350\260\320;\333Y\352<\342v\244<\266b+\275q\345\023=T\252\211\274\347\327D=M\"1=\017\0026;\240\370\233<#\230L\275@\260\033=\361#\032<\253\327!=,\324\221\274\304M4\275 O\312\274\203r[=V%\004\274\357\367p<\022\300\004=\2555K\275\376f=<\332D\243<(\254\3168^\236\021\275\307\231<\275\000\270\204\273\000\207\336<\177\270t\274!o\364<\230\352\370<a\255F\275\216\0251\273\215\232?\275\007q\014=\036\273\026\275\253LX<\307\005\":O\0010=\021\355!=|\0364<\341h\024\272p\035\376\273b\263\r\273;D!\275\251\233\242<\241\020\341<\211\\T\274\017s\306<\271\'(\275\245\026\244<\020;)\275\001;\030\275\252\360M\275)9\360;\3206\211\2736]\372<\334\360\372<!\244\025<\004\035\211\273$\263\004\274\t\202Q<\345\275\357\272\027\253\372<\327Ly<\224Z2\275?\235E\275l\016\342\273*\n\002=\031\2640<\251)\000\275\223I\375<\036\177J=\245O\223<\266}\025:\035\037\023=G\034O\275b\205\346;\223>o;D\367\1779?\352\306\274\201\347\324<\377\312\032<\350%X\275\034\305\366<\222\275\262<\376\220\002\275\344,\002<\"\235^<\204\357T=`k\361\274\205\352(\275\375\322\324\274\361x\332<\010\357\337<\356\3265=\350\013\033\275\3450\005\274&u\317\272\020\327\327<=\026:<[yP\274\355\323!\273B\335#=\342KL\275\370\021<=\265\357\364\274D\240A=&.U=\303V\036=\215^\343\274\252\177\361<\310\033\305\274Z\306A\272\371\004\"=\022\250\332<\320Gf\274Mu\241<\363\303B=\272\301%<\345\374\014\2750\347*=\240\3028=\323\327B<\206{\217<\302\264\370\274\320\307m\274\353y\216\274N$U=$^|\274\242\314d\274?;\256\274\031\005\021\274\205\221\035;%\347k\274\025\367\255<\025\205\032=/\235\310\274@\366K=K\364\327<S\314\024=\003}\007=\351>\"\275\275 f<\224\376N=\206\000/;\342\2519=\230$\222<\332\311\304<\222\023\242\274\026\343\311:}{\212\274g_\360\274\033\314[<\240G\017\2756;\"\274\237\274:\275\222=\311<o\232\002\275\002\331&=,_B<AfB\275%\230\"<\343\212D=\252\213@<\0102\315;U\315\025=\206\021\204<\0043\020=\311I\024\275\274\321\031;\213\256I\275\376v\337<2\252 =3(\254<\373\332*=m\244\020<\270\016u\273~\237%\275\027\274\200\274\203\261\262\274\023\343%=zBN=\331e[\274\252Y\260<g@\036=\253\206\016\275&&\373\273\353\277;\275\205A(=bK\225<}\306:\275\004,\372\274i}\227<\364\014]\274\020\365\220<\322FO<\003\326\000\275\232\2250=\014\\&\274\263\3026\275q\244\371\274\345\310C<\272$\303<\2177\362\274\260\240-=\263\314@\275h&\231\274\024\005\037=m)N=\276\227\360\274\321\014\317\274Q\210\371<\271\177\357\274c\216\365<D\304\300\273\357\265<\275\376oO\274\r\034\024=N\235\355\274\301\020B<u\177P\275\231\002\205<K\237U=\255\241\230<)\312\022\275\344\231 =9\336\034\274P\033\341<\373pu<\245;\2308\355I\270\274\n\235\344\272\335\236\303\274\344\003D\273\261\246P\275h\301\276\274\3671\002\274\2301\034=qe\263\274\3569\276<#\355\252<\210\224#=]\006\006\274\364\206#=\343f8=\243W\016\275\037k\022=F\345\003=\336\'\360\273\214\001@=\177b!<\230\211\030\275\213\023\266<\004\3720\275\022&\007\275\200\315\007\2751\352\206\274\343\352\013=\351%Q\275\036a9\275c^\362<0AZ=O\341\2169\232\331\203<\n4F\275E0-\274\210\223 \275\tL\320:\242\365\021\274\313oO=\371\263\246<\242\213\344\274]h-=\031\345\320\274\355\017\300;\215p\275\274F\201\31695[;<\341~\307;.\035\312<Cu\244<R\354\033=\201\014\344;}\224P=\375\374\230\274\302aO\275\223[F\275\n\225\354\274i\266\245\274fG<\275\t\\C=\377@(=q6\262\273u\2276=\'\216\t\275\260Z\354\274-0\201<\211\306\246\274TgS\275\353\303K\275{\341?=!\317X=\346\371\022;\256_\251<\374n-=>\037\264<\202}6\273\215\3050=\254\275.\274\336T\374<\014a9=\310\235E\275~\332.=\200\262\"=Xx\360\273\374O9=\332O\200<\242\261\320;\357\002s<\267`.\2750\3760=\006\'\014=\263\347\311\2743J`\274\246\330\250<\r\322\007\275m\277\021=\016\275\030<\376\261\254<\343\"(=\343\250Q\275\215\245\021=\272/%=\035\000\205;\260\263\362\273\246\203X\2757s%\274\301\343\033=\014ST=E\342\005=(\036\030=Y;\263;\246\370\351<\266\223\262<\346VU=X8\372\274:r\017=\020/Y=\246O/=\375C9<\205\210{\274\007Q0\275MU(=3\255c\274K\'\252<)\326V\275z4\r\275\t\203\204<\301\3740<\375C\304\274V4Z\274\304\322j<C\034\303;p\0179<\207N\356\274\257A/\275\350I\315\273=\231\004\275\353z[=!\031\252\274/\236\037\274A\274\273\274\312\214O\275\264\026\343<^9\026=zr7\274raB\275F!+\275\347\304)\275u\337\360\274S\246\034=0\'\252<\310\034R=\361\310\025\275\312\261*;#\226>\2757\315+\275N\001\026\275\317\233==\347\017\235<D\215\037=H\326\217\273\343\035&=\256\243\035=Z\364\346<\3248\023\275\274!<\275T?\331\274\204B\257<$\000\352<\"Q\371\274\340\032\210\274\3136;\275\022\247\006\275\352\303\335<F\300^<\231g5=z\\T\275 &\321\272\375\301\032=\335\315T\275}\335G=\205P\246\272\177\260G=*\371\255\274\001\377+=H\265u\272L\031U=L\341F\275\367\033H=\000Iz<[\017M=\3678;\275t\3205\275\263\240\377\274\272N\017\275\226N\352;\247\314\336<\025iZ=e\"\037\275\355\032\365\274\014\317!=\231\006?\275\214\215G\275\333\001\275\274\206\210v\274\327g/;\0102+\273\234(\\\275\016K\206\273l\327N\275i\307\027;asY\275\001\030\342<.\340}\274\230\022\016;I\345?\274\234\007\361\274G\212z<}\213s\274)B\370\274\001\352\371<\204\232>==h\033=\357.!=\214\037I<\355\225G\275\322}\223\274\252\221;\274\311\367K=\376O\212\273*\316\257\272Z\270 \275A\336\375;\023@,\275\223uV=\205\225\022;e\307\352\274d\244\016\275$\202\277<\014\364\266\274\265\\\266\274Z\326\330\273\024\001\254\274\334=?\274\204\025u\274$\246\300<\247\220\362<\325\226-=<\205\t\275\201\"\030=\212\037\320\274\2426\312:\331\"\245<N%\363<\033jF\275\245\326p\2717\335S\275{\202H<\213\254\023\275\233\327@=R_Z=\355\230C\275U\314(=\326\336\363<\365/U;\014_\370\274\363\020)=\216\365\211\274\334\030A=n\334#\274OC\362<\325I\220<\350\340<\275\305tN=JH\350\274\225\244\334;\322z5\274v\247\257\273\247\2014\273}\317E=\213\020\214<\nx\222\274\033\002\031\275\345\367)=\311\321V\2755l\033=Z\335H\275b\2501\275\362\231$=\021\026D\272\030\243&<\032(\365<\273\240$\274\370\332\006=\206u\002=o&\235\274\245\034\311<\253?h<\002PR<\037\375\267<\342\t\021\2741s[=\t\020\010=#\361\374\274\316\3437<\\\316?=\243\262\272<<\227Y\275R\260\255;\244\323\370\274\320\253\344\274\337\202M=\234\361\034=\361\242\300\274896\275\272\375\270\273\330\332S=\313,\265\274\210\323\325<\266\3416=v\330\t;\236\306\017=Z\363\035=e\001R=\316\2579\275ZB\233\274\2473\023\275\357\021K\275\005$\310\273\265\214\222\274\322\0368\275B\275\217\272L\264N=\257\203\030\275Y\226<\275\217\240[\275 \251\024\274m\251\323\274-\252z<\275\214!<\255\302\377\273>\3227\274ng\037=\337\323\265<\327S=<\350\211B<Sq(<\031\026\026\275\353\212\244\273\370\366\017=t\307!=\004t|\274pf\203\273\315\313\226\274!;\017<\240\361\215\2748UL<\365:8=\212\032h\274\307O\"\275\372\3568=\210M\264\274\334\331A\274JW4\275\313\306\246\274\200\254t;\207\n\306<\306%\215<5h\254\270h\370\026\275?\025L=\273-\366\274\350\315\030=\271{y< r\022\275\215\313\206<]\2337<\307}\254<\250\210\374<\261\336,=\357)\003<\225\343\215\274\201Y1=\3028\007\275\014\020\024\273c~\\\275w4!\2746\375\t<q\261\376\274\201\324\274;\304\'\306\273F\304#\272\006\304(\274x\'\367\274\354%\207\274%R\266\274\270\242\036=\007\3557\275\247\245J\275\371\302;\274o\262\220\273\014\313E\275\037\224=={\225\260\274X\212\"\274\216(#=\337\213\r=\361e\325<u\225\333<\264\322\213:\376\366.\274}\204#\275\266x\344\274\335\216\255<t\342L=\274\016\351\274si\030\275\317\357\246<\274\360\231;=[L=c&H\275N\333\307\273\357\342B=+s>\274C\034;\275u\226\020\275\216\360=\274\336x%\275\360\257A=\323\247\020\275]\266\361\274\2764\023\275\373\240\021\275\013\204\210<\t\274#=\316\035\'\275\"\014\232<\2505/\274\247\177\351\273\034\035\033<9\020\017;&\">\274\255\344\221<\264E\311<\273#\371\272{c\253<+\355\223<\353Z\025=\316\355G=\236\265\r\275E \327\274P\223\'=e\217\r\275\340\274U\275a\225\n=\rG\317\274p\303\224\272\013\033S\275\236\267\243<\317\216@\275\345\n\236\274txI\275\233\313\221\2707c \274\330\014\317<\355\204}\274\357\241\244<\211\246\014;\226HS\273\226\202\364\274\376\254\265\274\362\270\351\273Q,*\275_s\252\274wIC\274\373\323\205\274\275\361\247<\tQ_\274\262m\002\275\002\003L\274\2508\007=1\252\321\274\242\017\000\275\206fN\273\270I\241<\230I\030\275\325\242T\272\272\215\335\274\277b\215\273L\301\032=\3655\305\274R\306k\273yD7=\204QJ\274\314t\223\273\n\375\202\274\360s\250;\300\0057=\212h5=\263\323S=\207\2558:\345\333E=\373\253U=S\265\305<~\367\303<\366V@<\r<\317<\200\010\215<G\237S\275\000\243\230<\247H!\275\036M\235<\365\220+\273\014\320\027\275\252\\j\274\347\302w<\316\316\336\274A\001[=\221M\216\274\231\"#\274U`\206<|\224\353:\210\275H\275+^T=j<?=Z\272V\275\217\323H\275\205\352\003=\220\201\037\275(\003;\275\241\300\022<x\270-=\303$[=T\000\237\274\372{\251;5\304K\275\211\013.;\241\217\326<\235\020\275<\027\357\320<<\032<=\261\2362=\357\336\006=\037\201\302<\265.\374<\225\264)\275\307E<\274\347p\037=\324\330\223\274\026\204P=t\341\037=\274\375\207<\030\336V\273\203\227\033=\334\000\362;\252\305\321<\205C\372\273g\252K=\030\236\021\275F\200\006=\357\206\316<V\016\223\273\005\356\355;\320\211\206\273\217u\333\274\024`J\275\376r\003\272\245\276\\\275\tr \275\356m\215;\336TI\274\270ek<\332\234\"=3\206\025\275_\343\005=\237C,\274\264\245\274;\005\314\355\274\n\001\210\273[\341\016<\211\2102\275\223\302\016=\376\341D\275TQ-=\304\275V\275(W\364\274\203\332!=\277\'\217;=##\275K\031C\275\373\347\372\274\025\230L\275\177c7\275\022\3129=\2448O\275&@h<n\357<=\214l\302\274\220\335&\274\314\372\020\275\361/N;\347\360\002\274B\250.\2758:\304<o\200\272\274tn\352;\224\021\333<\242\022.=\327\270\005\273\307\037V\275}d[\275\204\352\013=9T\021\275\205\305G\274\274\3354=\340\307\020=\354R@\274\320\r\000\274\3351H\275\331\022L=\342\372[\275Y\273P\275\334I2=\371\373\341;B\273D=n\000\026;,\311\270\274\367y\201\274O\023,\275\2747\212<\270\t\031=\316KM\2753\177\026\275\030\206\333\274\304\226C\275\017\3719\275\036\240$\275\350b(=\000\006\375\273U\261\266<\261\206\027=2\377#=1\237*=\214\252\300<X\3418<*dS\275l\235B=N4`\274B^\231<1\004S=qr\335<\373I\r\275HR3\275\270\034L\275\377\356V\274m\311N=\313\006S=n\r\326\274\265\257(\274\304ZT\275m\006D\275&\310\223</\027\233\274\374^\307;\375\221\r=\331\303)\274\265<\376<)\300\205\274\036\311%=\206\n\026=\356\3416=\030@\032=a\017R\275l\307\016\2751\357\367<j~\371\274\221\233\307<\203\216\246\274\352\273\232;\226/\302<H\252X:\374~S<\207n)\274\2437\266<G1\034\275\346j+\273t\332\344<W\0304<~/\340<\"\265\270\274\325\271\267<&\037\022\275\307\036\020\275\025b\377<,\371#\275*I\221;_\321\202\273mz\307\274\330\324\226;\275\253\201<\2731r<\3507\006\275<PT\275lWG=\232\340!=g\n$\275\357L>\274!\024r\274m\177\307<\201[y<\313\207\346<)\250\010\275\322rW\274Ob7\274\'\222Q\271y\214J=\"k\003\275\213\204I\275\030\3576<\270UM\2752\305\237\274\253\310\210\274\374\202\006\274M\336T<\357J\025=+\243\267<p\274\220\274P\002\324<\317\2653<5\014(=\221\177\022=\304\030E\275a\254K=\374\007\332\274\333\235\344\274\275R\364\274\242#K<\347r5=\344\035Y=V\334<=\240\231\265\274\225\211\265\274\253\2235=\027\233$\275\212r\222\274\2357$<g\350\203<\340\r\377\2740\024\363\274e\221\362\274\313\233\213\2743,\021=\177\0309\273|\0270<Q\177\031=\256^\267<\002\274\220<c\255X\275\205\325\205\274\274\353\343;\r\226\347<\020B\215\274\022\243\327\2746\310\366\274\321b\245:=\'S<\347\355\005\275\252\007\n=0P\306;$\365U\275\253\222\263<\321g\253\273{\366\024=\203\202\2229\236\337O=E\021\202\274\363\343\346<\26635=*#\312<\260\005\026\275\236\007.<\372\r\306\274\273\240L\275\314\342\r\275\013\312\201<\nj4\275\032\274A=\274\360;=\336B\020=.\226\375\272\317\223N\275\021\240\277\274\001K\014;&\275\013=\366\331k<\2047\223;ckC\275\300\357\366\274\200\006\340\274-\235X\275\374\006\254<\2401/=\247Tm\274QM\323\274f\311\027=\341-\000<\340|\026=\221\364Q=\235\277\000=\300X;=\255l\224\274\302\013)\275R\262\255\274Or\303\272,\375G\274\350\255\037=\250\335\360<\271\274\217<$\365\277;a\035G\273\261\334\363\274\177\341\325\272r\\M<\0212N\274\346\036\254<\251\215\021=\007\336C\2750\031\033=\030\2534<\216\244\350<\324\3715\275\'\316X=\241[[\275z\214\313\273\225\205X\275\221\231\333\272V\372\342\274q\026\357;\203\007\354\274y\3236=\221\360\035=\311K\036=\010\3317\275\236\242\301\274\3036+\275\246\023\020\275\267\303\001\274\213\007\271;\232\356\343\274#\231\n\275\255\331(\274\310V\217;C\000(\275\335\3466\274\202x\360\274\326F>\275\306\016V\270\324?\366<hIZ\274Z&Y=N\357\320<\203<\031=#\340\233\274\022\311X=\3157A\275no\220\272\370\226Q\275\240L\302<\320V\354: sW\275p;,<n\354\031\275q\2214=\346\233#=\333K\241;!:\"=+\242\337;\013\324Z\275f\240\324;y=?=\256\010$\2752\302M=\261\2675<\301\3733\275\313CG\275\205}v\274(\312\314\274\374]\262<\332\014\032=\247\240\031\275\205L@\275\252V\332:\016\223\217\273\357\034\262\274\365\366>\2751\342\244<\267m\343<\277q\r=\346~K\275@\242W\275c\016\233\274\206\233\307<\263\310\007=>\220\000=\357\311\240<\344\225\340\274\300\003X=j\034A\275x\330+=XB\325<b\227\024\274{^\262<\371\271\216\273\367\250\372\274\177\251[=\353\324\226\274\375\007#=\373\216\224<\245\"\302<\243\320W<\305\272~<\243\232\233\2724e\'\275\205\010W=\201\013F\275\222\324I=wnU\275H\346)=\341j\255\274{\000-=\305\353\034=\022IY=\014\364\021\275\"\261#\275We\021;dK\364\274Z9\323<\325\2600\274]\344\233<!e\036=\303/ \275\226\301\244<\177N\030\2750\342\356<\222\r\n\275$V\305;\310:\035=\224;V\275g]1=\275=2\274.\206Y\275K5(\275(\021\335\274\302\213\234<\231\327\215\273\342\216\246<8\347\037=\222V@\274\025,\330<\025\326\271<sX\027=\343Qk<\337\306\244;\312:U=\302\036\361<q\300\314<u\306\000=1\340\036\275\0065\037\275:\336\264\274U\277.=\'&y\274y\207:=j\246F\274\325\376O\275dR\034\275\316I\232<\030\3720;\030\222.\275F\005\332<gPD<\370R-;\3716\037\2759X\005=\276\'\351\273\261X3=3\365\247\274\245\353\242\272\021\365,\275N#B<J\001==\324\372\255;P\235L\275\275\030\324<\360\274\027\275&}F\275\027Z1=+\302\313\274\024l\010\2750\220\265<O\211\262<\312J\003\275@#\021<\032\270p;w\214\314<MV\245\274\026\212\266<3\030\241\274\362\234\010=,\361v\274\351\252\224\273\026\377\316\274\317\270X=\005;\006\275pR==\302\373\n=\217\210@=\345\3629=v\250\203<\027\'C\2755\251\274;eN0\275o\212\001\274\340\304\307<\265\324\013\275\001\301F=\2613k;{X\226<\361\321\344<Jf#=\320\356\224\274\"S\306\273\016M:\270\344u\264<!\302\213<\335\335K\274C\374\272\274\000\207\227;\206\017\026\273eI\203\274\362\024Q\274\336.\307<\201\307\004=/g\023=_\234\337\274\373\362\304<\037\241\002\275\246\375\026=\n<\334\274\357)\"\275\250\264%=\224L\014<\220+\233\274\301X\'=\200\366\263<\301\241\374\274j\340V<\230^\303\274\313\310\254<\261\360==<\250\363\274\3375\245<$\205T\275\251\202@=\235\315\273;-+7\275\023\374\366\274:\325B\275\250\331\365\272\035\253\336<:\036\003\275kT\211\274pB\014<\346\232\374<\305\367\300\274\245})\274W\345\274;\301\360}\274gx\007=g\2402=O\321S=\252\204\267<\201Y4\275\r\316\315\274\\\030\021\275\253\266\361\273Dl@\275\2035\007=\006)X<\2547\'\274\260J\350<\345z}9\200\302*\274\355\024\223\274\374\353u<\361\037\203\272\235\237\367<\330\002\303\274\205\3133=\272\264\\\274\305\355F=\335\031\r\275H}\r\275%\307F=\007\020\345\272\223\260\377\274\370D;\275dN\032=\317\017Q=%\027U\275\2169\313\274w\034\365<li\017=^s\261\273\237\215\302\273o\314\232\274\206\210\023<\256\332\t\274\206\\\032<\225\231\305<\256OA=v\345-<\266\2640=\275\301\240<2\370\020<@\364\\: u^\274\262\241\353<\353tN\275\343\353\303\274u\224\262\274\304P{\274g\0000=Yy\360<\242\273<\274\313s4\275\000\221\026\275\005g\237\274+*\362<Pu\034\275\211\\6=\016\326\234\274\252\022\002\275\0133\n=\236\262\"=\332+\363\274\233\3731=\022\235\202<\315-4\275\365\274\336<\342\240E\274\005\351\013\275\203\002\023\2750\376|\274\247.\233\274\372\254K<\320m\014\275\210]\021\275\204rX<\360\302\241<fZ+\274$\270\223\274\200\354\212\274:\3034\275\271\354\376<\210\210\227\274T\t\010\275\006\356$\275yKc;\310:\002=D\004\210\272\251;\361<\221\207\305\2743:)=;(\035=\023\351*\270k\023\332<\265b\023=\273Y\322;<\344\236:BIE\275Z\030\333\274-\326\007=\034&\213<\326\230$\275\314\364#\275\010VA\275x7\361\273\364\327\364<\014A\337<u3K=1]K=7M8=\201{r<\n\330l<[h\270\274s\334J\275\330\233Z\275\266\363\006<\210\234\374<\236\233\203<\324\t\030<(x\033\275\037\013-\275\307\237B\275lR|<\024\354==K\234\033\275\\-\010=\206\022\257<8\257\215\274y\270t\274\037Z\320<\340?\232\273\336a\177;D\211\036<\367\264.<9\277\315:\034_\271\274q@W<\247\334T<^\033#\274\233\363H\275/\253H=\321Su<DB\033\275\275#\213\274\250\037O\275\345\010\035\274\2110l\274\355\016I<{\347\350\270a-\345\273t`K=\215\'[<\006#\236<C\367W\275\372\346v<E\250\206<\005\273/\275\207wZ=[\271\364<ya\031\2752dK\275\034p\256;\265R\365\274\250\222\314<\'x7\275q\226\375\274\352\334*=Xs\227\274s1n\274\304\244\200\274\217%3=\221\177X=\007\327\362;6\300\256<\001\235Y=\203\342H=d\365;\275\002\322\010\275\345\324D;\376\222\r\275\356\337\333;\304 \242<\234\036*\275\362\003\034=\266Y\370<\254\237\007;\304\347\'\275\222\n\022\275\236\357!\274mn1=Yz\271<\364\273\024=:\025&\274Y\221J=\023\330J=<^t<b\3221=\332\311$=\250M\312\274\026\353\014\275\261\213O=\346t\034\275\216\250\260\273\250\217\t\275s\220\265\274\352zI\275\305\301\020<\004u8\274A\0364\275\261\226\005\275q\277\213;\3524\225<\217T*\275`U\036=r\225\320\272\031.\014=a\340c<j\224\254<O\232\377;e\230\341<g\246t<\363\237\342<\237\343\257;\214\363I<\276\200Y=\200]\312\274\365\004\r\275\214V\365\274U\004\020=\271\230G\275\235E\265<Sp:=u\270\274;:\233O=\t<:\275MM\266<I\363\215;\354\271\036=\177\237*\2755\010\035=\246\305\260\272\325kF=\344t\342\274\245-P\275B\\W<g]P=D\177\007\275\2339\217\274\206\3119=\251\267\301\274\236o\341<\267\177A\275l\271\022\275_lH=\317H\347\274\273G\343\274\305\267&\275\214\257\036\275\263l\027\2759\274\023\275\304\244\255\273\235%\n\275\277\227E\275\350\253\"\274\001B\374\274\342\023\306<\250.Q=\301\201\027\274\363\030J\275\002\352J\272\207\347\350\274$\336\'\275KD\354<\035\020#\275Q\266\017;#\202\216\274\201BN\275\240J&\275Q\002B\275\217~v<Z\314\331<+o\316;R\006\326<\340\270U\275\266T+=\265\325\300<\350WF\274\362\205;=\014\177\357\274JA\367\274\214\220\013=\347gG\274\335\026\342\274zf\007\275+\367\266\271\340\014\025=\257\262F\2752\353\210<Y\3618\275[\261\037\275\236\347:\275\243\345$\275c\014U\275\260`\3529\032\021\264<\315\333$=\"7\236;=\376\344\274\2055\313\274\036gM;A{\364\274\003\035\036\275\262hU\275\024C\277\274\306\317\016=\316|\034==\020F=B\327\231<\2602y\273y\306\006;\233\302P=&\345p<H\r7\275R\300\321<\306?\031=\034}\271\273\264\rz<\377\3339<3\037:=\216^\020\275\215\3071\275\020\337I<D\036I\275\366\276\237<Ag\371;\243\360\022\273\272\251[<\240\245+\275\377#\337\273(Wy\273\260\222;=s\032\3659]%\357\274\245X/=\371\251\010=\032\304&\2759mN\275\000o\025=&U\325\274\022\336\t\274(\236\342\271\3709R\275\317\023H\275}\230\367<\010\215\016\274\3312K\273|\211\033\275Y\217\"=5\266O\275z\0318\275?\377\034\274\333\267:\275ET4\274s\017\341<\271\221\002\275\230&\374;8\031/:\036Hb<9\254\334< \3071\275<\3620\275\264\366\222\274\272\213\t=C\r[\275\026P\201<\212\240v\274\257\274\006=\202\362&\275?vZ\275\270+(=\257\004O\275\330\266+=\013|\375\274^_\271\2749l\322<\nc\222\274\266\277\022\275\007s\347\273\277\030\031\275\201\364\207<h\020\357\274$P8=k\014\304\274}-&=.\214\031=\211\016/\274\020\2733\275\022NN<\240\014\257\274\2123\266<\266pT=\300\220X\274\337!\037=uEE=\242\313\n=.\260\323:~\257\224<% \t\275Ac\366<>Q\370<\222\326\"\275\3179c\274\273\2576\275$>\217<\224\310\206<\376!\033=\343\200\336\273_\177m\274\327\331E<w\331m\274\213\023<;\177H\364<\013/\204<\250@[\273\010T\254\274\304\006\035\275\217\302P=kS\235<s,\302\274)?\213<\274\306V\275\305\320\350;#8W\274\274\272<=\232\256\n\275\256\220\363\273\314\022\376<\034%\\=\007\233\364<\2413\202\273\226\026\355<\323\230\365:d\030\221;\006\302\267<>\251\242<\215\220\310\273\240\316\020\274\352\001Q\275\231`,;<\271*\275z\262\221<lo\224\274-\020\337\273\2665\332\274\006\026\365\274~F\252\274M)>\275\003-\234<B\214S=b\317V\274\2776\032\274-\337&\275)c\242\274\353z\275<!\3414\275\005P^;A&<\274\224B\";<\233\002\275\030d^<;\037\'=S\215Y\274\226A4\275~4\353\273O\344\244\274\214Q\325\274w\347\017\27577\200<JM%=\376\262\236<R\200\216<\"\215\000\275\352?X\275\235\007Y<\016\342,\272\013\006k\274\263X\231\273\343\260\336<\323\362\031\274|\350,\275k\026;\275\313a\235\274\245\360S;\002\337Q\275\n\245\271<\027\316\204\2747\354\240\274\014yU=5\235\235<\267\376\301\274\023T\307\274\354\364G=\372\272\337\274\022\251B=u\000\375<\360f\253<\311<\323;\3228\006:q\252\242\2737\0202=yk\225\274t\2442\275x\272Q=\3150\000=\216\372>\275=M~\274s\304\022\275?\255C=\237B\337\274\222<\333\274l\027\312\274\363\010\341<\024\377\030\275\r\254\022\275\274\305P\275m\275n<GB\300<\010\220\364;\nh`<&\\\270<\227\033Q;\350#.\275&\255\310\273\354q1=\265\355\267;\246\022Z=\032W\373\271,\222#\275\3110?\275\204>/\275*Q\027\275\254\342\016\275\315\232\"=\375ZL<\204\317\362\274\217E\007\275\026 \352\274\266\r?;\225\365@=\245\232\353<\230\216k\274\235d\004\274\370\317D<d\223\357<\243\277B\274\234K\026=\003\206\024\275\302\276\316\274E\n\322\274s\311\356<n.\r\275\260_\341<\301\340\273\273\310C\023;d\242\000<[\337`\274\354r\017;D4\023=cn\352<HO\262\274\324\000\372\2749\010\r\275\2212\237\274%\325\246\274\375\301\314<\010\332f\274\002\212K\275(\033G\275Bm5=\251M\266<<\014\202;\370\003\312<\264y\213\274\346z\017;\344\320\201\274\177U\331\274\260h\000=G\366>=>\035\370<9M\303<\242\353\316\274\013\0132;\211<R\275\375\350\033\275\035S5;\330\356\347<\302\213M\275O&H\275\252\260\007=\31518=\"%7\275\261\r.<\371\3547<?\310\010\275\" \274\274\257\224\204\274V\226\356<w\370\000\275C\273,\275\241\3264=\257aW\274\334\234\207<pg\342\274\213YQ\274\347\311,\275e\376%=\217I\022=\341\224+<\321S\t<\317Xe;\346\240T\275\302\353\352\274\364#\360\273\221\375*\275W\023\031=\260\003\301<\357\316\352<\330Xl<\2676;=\374\021O\275\267\035I\275\362p\\\275j\033\346\274\r>:\275\263Q\021={\nE\275j\200N=\346E\217;%\372E=>YS\275\020Z\"=Fj\331\274\026*\027\274j\206\354\274D^\024\274u\335\014\275\003\260\215:\001{\341\273Y\334\006\275\374\3121=\216F\365\274\210\211\343<K\243\263\273\027\307\375\272D0\275\274\177ZA=\301\227\356;/`]<~.~<\233A\3419\023\2014=\312\334\325<\314\374q<\024\256<=Ev\222<U\014\210<\36525\274\020zB<\327\327Q=A\307\010<\t\251\225\273S\032\210\274\213B\362:\205\227\014\275\035\026\017=\377\222\232\274\217\245\'=\237=.<\006\353\274<\211|w\274l\200\347<\377\275\r=-\020c<\026\325\273\273)\344\020\274c\307\216\274\204\245K\275\276\017\340\274\263\314\321\274\346\350\215<\020\220\227<n\314u<\337`8;1*\252\274\206\330\037<\322{\r\275/*\026\275:Q\003;\264\306[;\227%\n=+\037\250\274\223O*=\340\270\273<A\263\024\275Tt-\275*\310R=\022\002\233\274\304\014\343\274\247^\357<\205\3303=s\007\224\274#$:;Xbl\274\315\206-=\341\326\267\274\315\306\010\274\205\3178\275\301\350\032\275\361\026\234<z\313\202\274\263\275\3319Q\235\022;\271\353J\275w\321\'<\271\374\017<:\026o\274>th\274\337\260+\275\356\301\370\274\244\325\371\274E\\G=\352\024M\275\357\256\035\275\350J.=1\021\037\275\007\372\376\274\223\266\221\2736r\n=}\033h\274\205D\365<G\261\257;\025\353A\275\251\306Y;B\006\221;\001P9<\321\312\212\272o\031~\273\252\2609\275e9\004\275\014L\334\274R\010\270;\271\023M\275,\300G\274J[f\273\036\267\023=A\212\301<\332\243/\2759\376!=]\307\344\274(L\204<\'\243\'<\236\300\327<`\277\314\272\212\202\236\274Z\324\030\275L\3553=Z\024>=\302\352\233<,\356\323\273e\210\025\275\245XW={\374\233\274KS\325;O\360\304<j\000v<-\3602\275#CU\275I\270\234<\242\361\227<\326\334\356\274\032\007\273\274_\370\342\274]&\213\2745\177\373<\022V\275\274B\013\305\273\320\257?\275\001G8=\363\0106\2724\351\245<\245J\002=\007\336\322\274\035\023\355<b\262I\275\375\352\340\274J\034*=\315\005\"\274\201\004\303\274T\3161=\001\330\016\274\345\377G=\233X\261<6\\Y=\336\201\224\273\262kv\273\243\321\372<\340\337\270\273\037\035\'\275Z\272\231;\317 X=\037\n\234<\235D\004<S\200<=\245\256\033\2755\276\016\275\356\312\207\274\257\276\013<CaI\275\315\3414\275&\251\025\275\235\031\230<\373\277\246\274\371em<\000\264;\275\357aL\275-!\233\274\310\232\245<\2723\006\275\345M7=\030\257\327<[\266\245<\276=\005<\273\003\254<\376\037:\274\346\321\302\274\252\257S\274=;G<\250u1=\350t\322\274M~\274<7\031*=\031\304\024\274n\000r<\002\237V\275\221\240)\274\207%\360\273-\324\266<\271\013\216<\201\365\'\275\314\321\036=@m9\274\251y\000\275\304H==\327T\247\274\331G\027=\366\366\323\274\213\240\224\274C\230\220<\277 \230\274\213\334#\273\014-\016\275v\237\311\274-\021\374<^\370\234;\354\237\370;\\\034\001\275\004\234\262< >N=,u\204\274\222:\333\274\225]\275<\335Z\356\273\337\330H=\250\031\276\274\241kX\273#o\213\273\363\237\240<T\211\245<.\214\003\274h\375\233\273\031\2509\275I\346\354<\013\225\r=\036\216\035<\205\305\303\274\303:M=w\271K=h~\245\272\371\327\353\2746J+<\364\215\317\274N\310;\275\323(\247<\220\246\326<S\302\343\267\311\013\276<\245\373\013\2755p\030\275\353d\000\275\266,\371\272\021\3622<\254L\n=\324\222\t\275G\356\341\274\314\001[<{\223g\274\375\202\356<\300X6\275\335\355\314<<\215/=U=\321<\326#\034=]\311T=,\3434\2750\227\010\273\372\3604\275\001\346K=\337,\315\2742\nP\274\305\353:=\321)\355;\372\317*\275\250v\224\274\236\375S\274\313v\004=V\3251=\036X\267;\312\306\034=]4==\253\256r\274>\273,=|A\347<Z8\330<F?$<\324a\260<$\364\002\275->\353<\"\201\343\273\231\353\016\275\022\022\270\274`(Z=\'P\323;\252\317\206<\026\n\032;\213v*\275\303\302\n=}\354$\272$\376O=\320\321\271<\3230\377<\013\241\345<\351\345\222<\000\354\024=VXg\274\"e\n;`\305\314<&\356?\275A%\217\274\271\177\r=\313\312d\2738\002P\273\335\261\325<\252\242`\272_!/\275T\3739\2751\324Y\275\246\311\317\274\321t\036=n0\263<\221\361\n\275\377@7\274\375\020j<\275J\024\275\330E\020\275[e\203\274\347SO\275\275gT=4\335\245<9\302\203<\351o\200<\370\034\304\274\003\210\224<\241\324\257;\343\022\360\274\303\016;\275\033\221\247\273U\030\354\273\333\203\275\274\337\034#=w\236\020=\275\032\031\275\220\327==\312\037N\275x\341\026\275n\360R=#\207S=\242u\337<\206\\I\275U\214\274\2742\2707=Uf\222\273\273x\033=(Y\210<\361\261\212<\374\376\026<)/\246\274\377;M\275\354\\\035\275\246-F\273\231\256\357<5\310K\273S\307\212<4\360\010=t\r=\274\346\230W\275N<\371\274/\rI\275\003\022K\275\315?\202\273\003_\n=K\223>=\375\257\306\274pUG=\310\253\010\275\322%\221\274\300x\031\275u\021\305\274T>X=\324/*=\0340\200;\230b\004\275\357XO<\320\212\013\274r\256:\275K\020\265<\350\010\023\275\356.\035\274^l3\275\233\277J\275\223\215\342<m\r5\274\356 \'\275\002\330\342:\247~\221\274\262\023\026\275\231\313\027\275Ht\325\274\036FP\275B+/\275\316\374r\274\320r\365<e\031\027=\255\223\212<6\305\355\274q\007\r\275[g\341\274k\006\245;\370\022\336<)\305\010=\336:\034\275!s\303\273\003\007\242\273\262]\033<\376\340:=8I,\273n\035\344\270\3044\300;$\311V\275[\252\306:\210T\211<>C&\275/\177D=D\330\272<\341<1\273f\001\026\274/\022N<6\007J\275a\261X\274.\272\341<Zk\255\2715\231W\2752\276\246\274\310\323\376<f\225.\274\233a\364\274H\256\350<\347\351E<\')9=\301\375:\275k\251\327\272\001\017(=\371\366\266;\203\363\202\2749`\017=\211\010\246<A\204\022\275\264\215\035=\367\'S<[T\306\274\264\207O\275a\217\007\274\036\212\223<\257\202\030=-\243\334\274\342HN=\374\302\347<\314\361O=\271i\031=yD4\275X}\001\273o\311\304<\364\232\252\274\334\377\272<o q\274\203\246\250\274\034\344Q=\216\371\351\274\247;\326<\021J\374\274\006\363H=\005&0\275\025eX<\013\250t<h\324N\275\225]0\275\361_H=o}G<\005\226\003<\247lL=\024Z\333<\345\257\242\272\034\266K<\265O\022\2746\301y\274\034\223\016\275\222\213D<}Kj\274{XN=\317O\215\274\272Q\342<q\266\264<\252}\307<(\323W\275\231\216m<\216U\210\274\376\303\334<\365\242&=`\306\303<\253?\372\274!a\256\274\352\345q<\237&\207<\255;\311\274\t\365.\272.\364+=0D(\275\031g\332\274\344\360\325\274\'\261\316\274\225\3027;,e&=\320a[=\r\2752\275VYU=\261\253*<a\210\033\275V\307\315\274\0370I=\232Z\020=\017\255\251\274\267k8=\362\222\310<\315\242q<\277\t\001\274\000\216E\275e-\350;!\300\034\272\345\216\230\273\245\332\372<\376%&\274\236\321\001=\377V\203\274\257\205S=\377\223\201;3\355t;W\334\242;\353\347\001<h\317\031<\310\241\333\273\326@\353\273\035\302P=d\274\260<\3404\231\274\340\200\013=\023,\273<I\\\373:nM1=\177\n[\275\322?\003\275\002\030\366\274jAO\275C\004L\273\373IK\274L/,\275\361\370\031<0\007$<\360\256\365\274\373\017p<j;\373<\r\314:<\266\372\300<\323\252\231\274csy<#6$\275\355\213\006\2758\341G=\306\273\262;\3415\263<\2044\023\275\306k\t=d\022\t\274\323=\016=[\216\376;}\223W\275}1J\275\201\021V\2758\270<=\312\037\277\274\306:\211<\357V,\275DF\264\274X\316\224\274\363\314K\275\366\322>=|\223\225\272\320O*=M\345==\006\2028=\237P\005=\200\216\252<\022\213\215\274\2214\017=\025\341\231\274\343*\035\275gW\364\274\221\205A\275\002\345\240\2742\270\360<\355E8=/\307Y\275\322o\206\274R\033\343\274XC\341<\361\370\274<\005e{<\372\277\021=^bV=h\216\007=s\344[\273\343\266\224\274\271;\034\274\236RJ=\341\235\355\274\364\266\302\273\2553Y=\270\004\306\274 \260]<\302\212^\274\2007\2279\313c\021<Op\252<I\203\272<\020+6\2754\363*\275l\036\230<\264f1=&=[\2754BU=\351\337\357\274T\303\002\274\273\016\250;\205Z&=\020\n\343:i\336[;\0254\263\274,j\235\274\025\203\207\274E\324;=\007R\242:\326:\324\274=\355\210<\360\240/=\264V\344\274\266[\013\275\0268\345<\025G\201\274\264!D<\271\273\347:\226o\260<7GY=n\325\205<\225\307\314<\217\003*;\023\215C\275n\323&\275\030\022\341:\211\353\007\2755I\375\274\006\320-=\273\301Q=]\013p\2740\246%<t\375\202\274G\366[=T\223[\275\322EC;\361\234R=\356\300\020=\322\303\253;$\202\037=8_\327<\245\257\201\27434\234;G\356\231\274\270\231L=\353\032\363<\017\0025\274{lW\275&\030L=\324\023\251\274\217\272\235:\245\314\327\274f\203\306\274\245\263\013=\2652\340;\026\270I\274\345\224\300\274\364\321\t=2\207&\275\207&f<M\233\372\273\213\226\002\275\001\231\034\275\307/Z<dZ\216\273\020\003\373;\312\310\247<^\373\363<!\346\036\275\235$\273<\265\357L<\201%\214<^!\250<\010\365L\275zm3\275\016\272\256\274\362<@\275\201\336\016\273\305\253Z=v\023\025=\215r\275\271G\024F<\027\"G\275\256\234\006\275\375G\002=\0109;;\002\242\027\272\333\271Q\275\335vo<\031\377\022=\270\301\022\275I\271\030\275\346b4;vk\000\274G\016\272\2749,\225\274<\3128<x\356\036=\036CU\274@M\022\275\342\r\274\274\316\243&\275j\352\201;\214@V=J\226\035:?\r\252<\243\255\232;K\005\376\274\254\343\214\274\222V\031=y\335\201<\336\2659;\224\306\271;\261\251\371<\206\243\353\273@\361$\275QZ#:\304\335I=\\\220\243\274,9!\275qc\276\274\350\240\321\274u\2727=W\321\343<$M\322<a\330\310\274\322s\264\273c\036\037=\014e\332\274\367R\t\275\005\225\371\274*\0018=\254v\222\273\203c\200\274\347\363P=\264y&=\255\204\037=\224\220X\275R\271\366<\316\354.=\325E\0379<S\r=W$\227\2743\203\026=&\027\032\275\024p\301;\342^\2139|\365\231\274\351n\357<\327H\375<\264\261\001<\270\313v<)\343\035\275c14=\257i\016=\207\201L\275\231\332\320\274\177\310[=\251G^;\326p\001<~h\225<\335LX\275To*=^\315\304<\236\305\335\274\247t\000=\231n\221<\312\031\014\275o\312\033=\266/\'\275ibP=\356_W\275/3g\272\321=3<\266q\240<\301\204\035\274\210\2723\275\374\335[=\t\210#\275\320#\333\274.f\367\274\232\234\256\274\233q\036\275\227\031a\274\353E,=h\342\207\273\363\345(\275I\372j<VH8=\230\227(=\t\026\264<\004\212\260\274\302\343[\275\\\306Q\275\367\t\364\274\265\"\225<\233\327\002=\323\313\361\274\203\317\364<L\034T<\\\225\002\275\376\262\014\275\350\n?\275\366f&;\177\356\036\275\263\323\321\274\037\273\325\274\341\226\001\275\"\312\322\273SXS\275\314\2341=7UB<\204n\364<X/B\275\362P)\275d5\000=r\r\265<\376\365\036\275\026\252\357\2733\035\276:\200\223\360;\004He\274g\3128\275\335r\031;\250\224\r\274\303\316N<vV3=\333\177\326<\275\370*\274\353_5\275\310\264\027=\335\321y\274O;\216\274\3338N\275\304\035\375<PL&=\275\266k\274\352\221Y\274\013\330\"\275\206_\236<\337\311#\275K1\325\274\273\262\022\275c\003\010<\236\003\001\274\352\3558\274{\367\266<\2075\222;HdW\275\313\032D\275\025j+=\023\253\227\274\360\231\010\274\372\301\347\274\315\261\035=\205&\354<\037u\014\275\227\352\371<3-\t=S\273k\274S\025;\274\rm\346\274\373\352Y<\345u\027="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
