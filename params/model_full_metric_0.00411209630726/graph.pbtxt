node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2060
          }
        }
        tensor_content: "X\2136\275\324\232\\=\351\222?\275\205\301\031\275\221y\027\274\327(\006\275\201\022\331<C\374~\274\203\377-=4\274\242<&0\240<\013\215\024=\303>\270;\363\270\201\272cmX=\320\026\000\275\"\223J\275\365T\366</\366H=\006R\035\2745B\031\275uA\354\274\026\335\367<\350\337\323<\005%\213<\223\363\370<\327G\\=\016\014s\273b\026 =\321~~\274\355\254\271\274\002\355\332\271\346DP=v\213\023=\335m\340<\361\210\347\271V\317L=\002\016F\275f\241P=\230\'\222<\377)\306\274|J\244\274\306\244-\275e.?\273h-!=\315\222\022=\305N\020;\336\273\200<3#I=\020\220\030\275[\365>=\031\t+\274\3225!\274\215\223\023\275\257\314X\275\252\272\222\273\313\252\023\275\272\266\023=\371R\\\275\332\270\006\275t\362\226<#>\321<\245\036-=\220\311\320<\273\300\032\275\262\342\260<g\367N=\214\272\\\274\244g\245<:\331I\275\255\320]<\344\344]\267\212\236W=\004t\205\273;]B<\236\034\256\274\007e\276\274\021\353\263\274\301\t+\275\344\365G=\334\301\257\273\341\354p\274A\275\330\274YB\363\274>T\202\2747h\217<\257e2<\205\256==\014\"\342;_B(<\344\006\264;+\220\343;a\213\022\275)\257X=\261\235\006<+\347\213<\246\256\320\274\242\303\021\275@\345\221\274\301B\353<\316k \275\244\234\026\275x\253\352<\362\261\231\274\323QA=;\\\244<\'+9\274\361\3122=\371\023\353<V\356\242<\362y\226\273&\032.=C\254\364\273\321w\337\273\210\264u\274zDZ\275\263#?\27436\027=t\367W=\345\037t;!|\330\274\332\245\205\274F\311A\275\327\236\244<\240YR\275\371\314\021:\001\266\317\274\266P\273\2745\'\232<\027}.<Q\254\023\275\322)#\275>\270\263<\256\337\016=\200\006R\275\035\002m\274\313J\363\273\005|V=\016\t\021=\270\356D\275\204])=S\236@;1H\351;&0\033\272\307\003=\275\376\201\353<\362\270x<L\2012\275|\017$\275\314_\007\275o3\266\274WID\275p\007\\\275 \010\005\275=\370:=X\306\215;\327 \251<>1\026\275\362\366t<\356~4\275j\r\031=j\201\235<g\025\027=\177\217\214\273\313\2132=\347\022\001\274/$\255\274\237\036z\274@d\276<\243\366><c\n\372\274\351\2365\275&\247\377\274\266F\023=\263\324\3069\310\r\235\274d\244\305\274\227\205\310<\215EE=}\0044\275\0042\031=t\261\3618\250\260\306;zh0=\311*\013=\341TF\274ru-\275\014\377q;J\337L=\2125\251<\341\224\272<\003$\371;3<\215<\220H-=\006je\274\035\220]\274$\017\000\275\303\276E\275\250Q\301<\000G\315\273\256\247\370<\265\336\347\273\241\013A\275\"\245A\272\352\032\005\275!!W=C\221N=}\021Y=\037,\316<\364\254\271<&\246/;]zX=n\330\202\274\352H8\275\204+\010\275\246/U\273\177\300==\022l2;\340\213\237;\002\211\032=\t\275\'<%\036\265\272!\0271;OV\036=\2104\023=\014<\025=n\205\322<\237\345\\:W\333\365\274\233*7\275\257\201]\274U*!\275\"\237G=C\230\314<F\272\363<\277n;=2\264\010=`\202\376\274\202\nR=\317BG\274i.$\275_\370\327\274\206D=\275\341\024\276<\236q\016\274\254\005\253\272C{(=.;[=r\341{\274\343\274+=J\300.=\2059%=@\211!\275\'.\252<\223\2731=\n\213j\274\257\236O=\003\242@=~\r\t\273Q-\022=xt\222\273\247\3549=\020\252\207\274\211,9;T\346\215\273r\361\010=\243xB=\367\266\274<H\024\031\274\317\200\315<\312\305\357;\002\361\265\274\177SY<\273\333Y=\243\2748<\\\261f\274]\264f\271z7\222\274\341\014\344\274\316\036V=\211\\\024\275\315\252A\275\346\271\030\275  R=\224\275\006=9\253\377\272\372}!\275\301z\201<\004\351\035\275\006\316\317\271\255\254\n<9I\262<D-\313<\316i\341<\364zu<\013\031\300\274\005\206\220\274\177\210\251;\002\277\210\274i\t\211<\230\226&\275\373\210E\275\n\033(<qe\027<3\375;=_@\021\275\034\251\331\274&\312\031\275\373\025U\274qZ\226<\241!\267\273\361W\254<\030\206\353<>%P=j\357\363;\277>e\273e\246\304<_\353D=i\344\004\275.\000\242;\347\351\307\274\372\357c<\364W:\275 E\375:\210\236\241\272\2756X\275E\253A\275\220A*\275\215\241F=0\036\273\272\313BL\275o\013N\275\336\220\024\275\250\361\010=\241\210J\274l\213J\2758\211%=3\024L=\321\\N<\001\036\010=y6<=\"\350\022\275\320\r;<\326\341\003=q\332\031=\334\033\330\2748iH\275\277\341\355<@G;\274\033#0\274\302\037\016=D\3372\274\t\"\311\274\236j\372<\265]\247\274\200\026$\275\350\372a\274P\'\301\270\024\312\376<;]\035\275\352\270\332\274\350e3\274\342\032\362<\325\2028\275\303\315\021\275\213\271T\274\305&\226\274\202<\202<\344\r\361\273\357%\223\273\264\313\302\274;\207\203\274\315\211[\272\r+Q=\252\003\r\275\373b\360<\035-1\275\341v\010\275\312\0268\275\201\027\303:\202\367\370<\016\267\203<:l\021<m\233\036\275\203\207\260<\326\215N\275\205\230(=\306\303\312\273\320\2674\275)\262m\274\337[\271\272q\335;=\366\022\274\273!P,\275C\354\022=\254\343\275<\206V\244\274X\014X\275\360\266\200<\312\267\320<9\327\272\274i\207\016\275k\302/\2754\247\032=88\371\274\311\267&=P\343\006=\217\007R\275Id7\274\277\021\034=N\227$=\314\250\211\273?\277\';B\347\367<:\347\360\274\320\316\334<\034\034\255\274\320J<\274\3637#=S\324Q<<\222#\275N\345\356;\323\003\017\275W<\002<\374\020.;\227C\204\274f\032/<\342,E\275\377\357\235;\207.Q=0\363\232\273o\301I\275YIy\274h\036\254\274\325n\037;9\2612\275\276\311\000\275\025Si\273\343\000\000=B \216\274/1\355;\335Q\341<\324\027K=\r\304\375\274\207<M<\324\\a<\202\226\216\274\204#\303<\nM\263;5O\r\274\3118@\275\374\213\334<Q$\365\274\245\007\307<\006\311\372<\374CS=q\203/\275@\226\355\2743!B=\305\316>=>\2311\275\245\024K\273\234u\333<\261\321\r=\271f\377<\376GS=\003\345\036\274\036\274\333\274^\316\340<\347\336\333<\265\032\337\274H\265\377\274\212F\373<\345\3513\275\177\030\224<{\033\005=Hm\026\274N\226\245\274\365&Z;\304\361\017=\227\302\320\274U/\270:\305\357.\2748P\027=,5\t=\305\3674=}\350,=\375\300\327\274\025\007\335\274\314\354\333<Rn\204<q\375\366<\1776%=\277-\312\274M\026d\274g\031\\\275\333\361\354\274v\205\276;\377\263Q\275.\027\232\2740\201\350\274\301P\322\274\331{\026\275\314\226\034=\245G8=m\227<\275G\250\300<2\264L\275\351\257\213\274y\326\023=\244|1\275\367\323\250<f]R=\271\027\030\275\361T\201\273o\233\364\273\347\304w<\303m{\274\314\263[;\254m\252\273mx\010=\254\310\031\275\227\0005\274\201>\320;v\343\332<p{\001=;\314\342<\317\225\276\273\236\262(\274\207\302\361<\305>G=\341\232Q=\035\311L;>\030c<FSB\275C\242\377;\275^\212\274v\362\242<AfH=m\033\213<\221p\273\273\371\0041\275\301\361\032\275\2056\371\274\344\213\350\274\013\203\204\274Px)=\030C\023\275\326,\017=\213\'\313\274T\244\\;\340\342@\275\022}A=\305\274N\274-7\276<\204\306O\273Hx\210\274I\267\026\274\347x\300\272\216\214\000=w\222\222<\311N\343<\032\275j\274\327_\n=\340\336\022\274\226\021\014\274Dg\001<\326\013\024=\316\276\272\274\220\336R=\247Q\324<\005\256\320\274\350\2031\275\261\257I=\342\005\263<E!M<0\274\311\2740\261\311;\343\'\347\274,&\026\274#B\205\274\371\252\025\275\333\342\037\275\372\233\373<\324\345\257\273\304\274l\274\317J\254;G\"\036=\005\361\246\274X\326\355<\205\2120=\rJ!\275\020\032\327<\312\034\233\273pN\251\274\020\273\013<\021\231\351<\031dd\274$wE;\324\210\305;AU\217\274\346\014:\274\020R<\275\300{\334<md\335;28\030\274a\357{\274r6$\274\274.\010\274m\273\"\275`\203G\273\372\021\037=\243@\273<\314\274\031=\317\246\231\274\267\211\273<\021\030\275\274ClZ\275\366Y\205\274\310\036\264\274,\031Q=l\2117\274?`N\275\351p\017\2751\260\014=\226\211\354<K\215\2448\037\3349<m\3552\274\222?\030\275Mq\032=\233KQ\274\331\242R=\215\004S<,\226\366\274\017\036\017=k\327\034=D\034\007=\306\350G\275\3039\037=F9\"\275\2677\324<\330\230\336<x\213\346<Lc=<\245<\322\273\301)\003<\333\237Y\274\273\356\305\274\2338?\274\306\202\304<\212h\006=l\202\353\274\356\245\315\274\2177+=\027\274&\275$\340\304\274\266w,\275&r\376<\204>\303;\361\335\237\274t\335@\275c4[=^;\222\273\025}\005=\327!\035=\231\310#\275\260x\325\274\212}b<\013T\"\275\2456]\274\304\3664=\224\2753=\220Z\206<\327\225\321<\243\033\017\275\273\213\305;\274\333\310<\271>D\275\247\361+=,\002W=+\r$\274\t\2169=J\352\251<\312\352)<S\004\232\274:\223\320<\003\204\017\274\366\264\237\274\373B\264<\275K\212<\022A\242;\177t\320<\320l\317<\254\212\255<\357eD<\353\344C\275\234\231D\274K6.\275\304\316 =.\365\345<uv\334\273qN\274<\0336\t<<\332\336<8!\021<M\320e\274\320j0\275\021\243\226\274\321\212\002\274l\322\262\2749!\211\274J>\342\274\037\267\230<\300\026:=_\246H=\274j3=\251\310i<\262x8=\274Tm\274t\3209\274u\274M\275@A\357<\031\316\n\275\345\324V\275\310\207\314\272;\201\265<y\304+\275\t\322t<\315\256r;\n\320\276<\025&\267:\217\207\177<\270\376 =\301\325\216<x\332\301\274\336\267&\275\354\366\334<\263i\005\275\266\034@\275kc\245<\360\003\241\274\342\265\257\274k\245\202;\355\017\310\273Y\002D=\277Z\360\274;\016\000=j\013\201\273\213 \037\2749\351\216\274\273\264#<\234\232\202<\tC\320\271i\347B=\231H\t\275\227@-=\2155\251<\261\273S\275#\350.=C\247\305<@\021Z<\204\267!=\210\320\025=\314\275\034<YG\231<\013\214R\275\253c\236<v\211\r=\025\230\202\274\246\311\363\274\021|S\275\327\3266;\0060k\274s\3057=\235+\316\274N\246\004\275\227\237\302<\336\213\t=W\340\006=\354\213\"\275\332\200\330<\021\213}\274\252\235\321<\346\362\236\274B\261\325\272\376%C\275\315\274\036\273\375YT\275\323v\347;\344P\346\274\213\006\341;>\213X=\255\240\255<\200\316\231<\236v\224\273B\261\023=\375\261\033\275\215\0260\274I,\237\271\272\025\202<^\017(<\022\332r<\315Z\257<\276T\325<2\261\024\275M\027\217\274\205\246\323;\373\263\302<\237H3=\363\247\"=\224\226\215<\031\246\300\274jt\364\273\204\371&\274\336\024\313\274ls\320<mi\323<\260\0172=1\024#\275\365\215\360\274\000\036\n:c\325\325<\250\225\273\274\376A\326\274\326\217@=\313\025\"\275\363f\343<Z\261\211<$\017[=\\M\221\2741\244\367<R\261\313<|NW\274\313\312D;\003D\033<\201\332\372\274\204W7\275`cB=\t\375\031\275\222\272R;\316\033!\275h\023U=\252\277K\274\335\375\367;E\351\355\274Mg\366\274\312bR\275Y\263\225;T\206(\275K\004M=\266\363\270<&\215\300<\377\240&\275\274\'\242\274\277\345+=w\n\343<?\262\253<\215\265\025\275\025\261\016=\234\"\321<\223L\225<\375\304R=U/F=cy\t= `\221\274b\326\035\275\303\315\016=\367\301@=\231y\024=\241\235=\272\263\261\334<\306\372\006\275\331\261\027\275\264\327\327\274\336\256(\272\342|Q=FC\030\275e*\374;\324\\)=9\016@\274W6\021\274\311\023\321<g\263\355\273>\362\001\275\014\356\217\274\330lQ\274\231U\326<d\246\201\273\020\222\031=\345\220,\275\\\233U=B\202\311\274\343\201\210<}m\014\274g\262\016<\263\252\204;>9-=\254Y\025\273%\335H\275\275\351\275\274K\372\212:m\244\024\275\206b\356\272sH\034=\274\272L\275?_L=n|\314\274C\275N:\223jO=\002\260\227\273\370\212\034\275!\322\020\275{\037\021\275\236\\\n\275l\035\\\2749Y\207<4\300\003\275(^\306<\247\344F\275Y\023\237\273z\335\031<\217\353\250\273\340eO=\264h\253\274\242{Z=O\037R\275\331`=\275\352\230\323<\371J%=\342t\357\273t\346\n\275\365lD\275p;\220\274_A\023=\350t\347<\234\260\355\274`\3210=\035e\021=\254j\227\274\305\212D\275\323\014\302\274\231n\217\274U\225-;\360:\216\274\320\267\270\274 \366\030=\003\017/<\327\276\322\274\276\2009=\304\346\331\274\200\257\324\274\255\222\262\274F\211\010=\304:Q:\212\374\007=ju\366\274\341\214\317\274r\237\007=\210o\366\2720rB=e\351M\275U\262\260\274eM\204\274^\354*\275\300\344\276<nj\347<\246\317\367<\246\237\352\274*O\034\275:B\351<\033]\310<\335=\'\275\240\203\247<\266(5=\232\033S=\331*3\275\311\'2<\201q<\275\344\304Y\274\363_\330;\010D\364<!\341\246<\306i\332<\325\006:\274\032\256H=\3259V\275\367\2443\274\327Nf<\010.4;i\275R=\277\371\220\271}\276\337\273\021\274\317\274\003\020X<D\210\347\273|tM\273#\204\007\274\260\201\002\274,\347,=\034/\377;hA9\275\237\327\021\275[\215$\275\343\201\006=\301\335S=G+\023=\025\353\016\273\277:\230\274eC\017=\220\371.\275X\030G=\231\024\201<\223\rR=\354\021\"=/C%=\2736\001=\341KA=\346J$\275\242\307\020=\'\204\343\273\005\004M\275\031D\261\274%3\267<@\3672\27512\010\275\001c\027\275-TY\275\205n\r=l\237\027=\201L\020=d\321W\275\244:\275\274\212\034,=\233,N\275\263}\222<#f\016=\021\333\r\274\335\250\205\274\316Y\204\274\016[\356<\243+\264<eP/=\035\217\242\273\246\312\000\275\030!\300\273es%\275R;,\2751\222\006=\000\255\356\274D\215\314<U\023.=\036\207\'\270\267m\032\275\243\272\t=\305E==\024%\"=\224\302\246\274\244\227<\275\211\002Y=\017\005\272\274 9\026=\306\006\245<k\0015\275\347v\035=\320`\312\273\027\365B\274\320^\263\274\344O\236\274\217\035\241\274\211\252\016\275\356\320C=\035\tY=|\205\210\274\212sU=~?\000=\216\352\"=\225\252\360\274\353\374#\275{\027\037\275\362.I\274\237t=<\206\346Q<\302~K<\372\t\361;\357jQ<\266p,\275\016>\000=\355k\236;{\341-=0\225\217:\236\217\007\2750g\t=\345L;<\375\330\262<\205~7\275\363F\010\275\320\363:=3\3379\275td\"=\365\0329\275\036\262\272\274\036\3770=\025LH=9\237R=\352\245(\275M\261 \275\026\227J=\306\353Y\275/\237\305\274-\235\337\274Q\016\001\275$\332\003=\027\240Z=\354\\\331\274\224iG\275\270\205^;E,5\274u\277\037=\037\321Q\273J\005y<\037\240\337\274\375\366\004\275gi\231<\253\"\037<\320m\354<\202@9\275\332_\255<\0337n\274>\352S\275\027\353D\275\206\022G=963<\025\004V\274\356\324\317<9\321\003\275\257\261\301<\373\025\220;[\370\027=7~\252<\356\270\251\274;\345\341\274\204H7=y\265\016\273$\217L=\274\004[\275\203\016\013=\253\244)=\370LE\275@+\246<\257b\026=\345\376E<\312\363\277;S\350\277<\026BL<4J\177;%\320\001=j+n;\250\316\253<\301\033,\275\333iF\275\007\000\264\273\374\215\016=\353\261\002=\314\350\017<\024\023\215:\241\235\3139J\202\275<\241,F=\244\245.=\320\'\026\2750\324X=~\340P=\327\250\006\275\017\222\026=f\221|<\252\014\252<I\230\201;\311i?\275\366+8<\n\032\301<\206H\020=\346o\272\274\204\272\'\275 %\377;A\371\302<\321\253\225<\230_L\275\360\017S\274U4\035\275\263\211\376<\370Q\377\274y\275\231<\235Z\366<\235^\242\274\3108\305<\331\311\005\275J\014\031\275m\316\375<\314G\025\274_q\357\274t\255W\275(\361\013=U\037\220<W\305,=\274lL=\270]\272\2740t+=\230\210\274<?Q\352\271F\276\345:+\214\200\274\253YL\275\247\350O\275\310\024-\274\366I\022\275\202\262\r\275\201\306\353\273\216uZ\275b\231#\275#\204-<8\221f;\264\336\340\271NX\344<\n%\007<\241:<\275\321@\271\274K\363>\273\010&\362<!\251+=\237y\017=H-\221\274\031;\371:\261r\311<\306\t-\275\265\351\277\274D\2651=\332\272B\274\302\206U=@\205\345\274\235\304\342<\242\010(\275L3\030\275\332\227R=\316\251A\275\000/\"\275\210\3536=5\321\352<\202R\254:\325H\201\274\300\321\027<e]\320<\231%\352<7L\363\274\322\342S=M>\311<\316\245\370\274\036\270\243<\244T7=\000\232.=\376\355\305<_\217\321<L\"\22591\331]<.\256\032\275epZ\275\223T\003\275\244\275T\274!\260\217<\272\245P\275\362\367\366\273Y\271!\275u$V=\271v\340<\272\"\235<\225\231[=\025\030\353<\362\326\224<X\247\201<\337{H=\315\032\277<:\376\007=f\211\215\274#\205\005=\313\360\013=\261\004t<\226K?\275\234\004\\<5 \346\274\016{\t\275\226o\357<\202#=\274\360i>\275p\264\314<jp\025\275M\n\262<T7\207\274\343\033\252\2743\327;;u\245\374\274i\213A\275\027\0068\274\330?\325\274\th\336<hV\202;#\024\257\274$\022$\275|V\341<|\251\016\275\221\352.=\016\303\037\275\204\201\301;\362&\375<\310\354/\274\214\\\211<\266\335\034=e\203\324<a\330\255\274\352\366\347;\345}O<P(D=^y\002=\357\334]\274<\326\320\274\372\317!\275\254\321\r<4\000#=\324\201\362\273/\233\232;\305\257P\275\3319J=\177u><\347\2154\274\025m\"<\014f\255\274_\261E\273$,\016\275vk\364\2745\362)=\203IQ=\216\236\304<.\322\313\274 \316\005=\343\271\006=\315\001\365\274=\204)=O\022\224\274\3350\260:\263DS=\n\340\007;\r\316R=\030\226\317<\316\221\326\273\220\231\010<X\304\246<l\200\034\274c\365\270<R\367\022\275i\376\r<\003\242Q\275\231\227/=\341\204\007\275\355\266\'=\260\312\n\275\227\032K\274\373+|\274\322:\222\274\2015\263\273Q\023\010\274\'\206\304\2730\303+=\263D\224;$\324\016<\004d\006\275jn\025\274n(J=Q\010,=7\327p;\005\213@<$4\203\274\2160=\275\272\354.:)\006#=\234\263Q\275b\304\241<*B\357\267\022\262(={\352\341\272%\\W=\204E\007\274k\265\001=\032\323L\275\317[\037\275oA\006\275mlG\275\354gA\275_\204\343<\2364\224\274\326\030\212\274\006\267L\275\021]P=\312\250\364<T6\211<\263\272\362\274\275\0107\275C\232\367;\335p,\274\356>\341<\252\226Q=\241\213,\275\265\332F=\004\360\'\275\376\321C\274\256b>=Q95\274j\254\275;Q\305\3219\213)\024=\364\ta\2737\312\020=\203\352\t=n\344%\275H\361~<3?8=\332\017/=\363q\034\274]\354\007\274%\357@\274!\277\327\274cvV=\354\222\214<l@\260<\215E\245<j\\\353<\022\252\031\274\346X#\275\3018Y=\006\203&=Q\232\r\275\217\377E=\020\022\304<\005L\373;4\035\003\275v\326\201\274\202\016J\275\355E\307\274W\341\330\274\2449\271<a\331=\274.\252\034=\024\345\340<%\300m\273\245\3548=I\320\2709]k\n\275\303\037\213\274\357FS=\336uY=|x\312\274\330U[\275\301\334\376\274\030\325C\275\036g\361\271\323\327\353;6\264\365\2710~O<\323\333i<\325{I<h\3479=V\2215<G(\001\275sy\025\275;\007\246\272\300>S\274\300\363\t\275\342\266\354\274|\312W=\024i\006=t:\336\274\334\257U\275p\336\225\274\322[>\275i\274\227<\312\035\356\273\010\354\245\273\334\2236=\013\230\027\275\363\nZ=v\336\014\2750\010\022\275\013\277$\274{?\230<\216\370(\275L\353\247\274\340=q\273\2626\313\274Y\234\360<\327\271 \275b\035)=\000\276\211<\271G#<=\r\027\275\331\017S=\022\312\301\274\201\346\356<\311\024\340\274\264\200F=\005Y,=\010\036\356\274\316\360\002\2754\332\226\274l\246&\275vf\020=\255#\n=1+\240<\375\006\035<xJ\242<J\374\203<\205\265P;\207\354\305\273\354k8\275\030_W=\264Z\356<F\310\330\274\327\253\024<\313\224\017<\2462\366<\314tH\275\251o]:\000B\326\2743\257\305\274\235{\016=2a\305\274\335\221W\274=\344\033\275\305V\027\274@\215\034=\n\306\t\274%\3173\274?\260-<$Z\034\275K\363G=\254\354\267\274\252\331G\274pY\016\274\243\r\007\275{\177\217\274\206d\016\274h\305N\275\360m\342<\231\204\207<\305\352\331\274C\022\031=\342:T=#\215&\275\204\354!\275{18=\230\241==\3129O=\3701A\275zl\313<f\020a<R\'W\274\010\\N<\241\272\325<\002d\014<$\230\013<\322\235>\274\361CL=\216\272Q\275\301*_\274\215O\341\274\350>\3638l\322\035\274u\330@\275\317\312=\275\2429\351\274{\327\231\274F\331\035=\307I\033<\356b\007\275\334MX=\225\013\277\274);I=\232\311h; \367\312<\177\253\204;\210v\215\2742\370\364\272N\235W=/K#\275\3232\312<3\376\177\274;\tM=F\302J<\255\217-=0{/\275\202\034\014\274\255a\300\274,\300r<\317\221\265\274a\033\\\275\372nD=&\342\204\274\232t\016=\250\215U:G\025r;\277\336\352\274WTP=\224\337\332\274R\377\240\274\323\221}\274\223;&=2\377\370\273b=U\2757Q\213<\016q\314<\230\363\023\275\274\206/<\031\221>\274\245A\322\274\320Y\300<h\365\253<\241O/=\376\376$\275\330\013X<\0215P\275q\363\222<y-\004;a\206\257<<(P\275l+\352<q\333_<~N\352\274\273\324\251\274\245\025\356\272\230\314\251<\224\t\247<g\2167<\246\004+\275\321\333\231\274\337\022\233;\340\257\307\274\327K\271<U\337\372\274\340\014\212\274\302z\350\274\000\247Z<\036\260\354<@j\334<A\373\307<\032\246\270\273\241\301\230\274\244\332\240<\210`\271\274\251,\375<\357e3=%\316\221\274@@J=C\375\213<\262i|\274\311\244u\274\2565\256\273\003\034p<#A\354\274\230\362W=\373*\003\275\361\200V\275a\235\264;\375\313\355\274\366\037\334\274\342D\023=\215\216=\274\364[P<{\314\246<\325p\r\275H\354\376<\300\323\272\274\340Wr\272\272\231L=\250\303O\275x\010\220\271K\253!\275\226\350\n;\314R\277<K\375<=\2374\371\274\030*<\275\253.\305<\256\366L=\242%Z\275\r}\350\273L\036[=\235y\337\274(\177\000=\231\034\3669*i/\275\020\365o<\005\242\014\275\023\003\263\273\231\201$\275\320\2018=/\2322\275\234\300\026\274~\204:=S\322\'=\201S\361<\255fp;\377\312(=\335Y;<y*\272<\364\254V<\005m6\275zQ,=Q\036\244\274\210qv<\203\304F=\331\350\025\275\301<\315<\"5A\275\037\224\330;C2#\274\213\232\220\274\030\301\351<\307^\337<\206\311i\274\223*\351;\325i\007=.x\355\274#\265\225<|\372\300<\301\334\201\274[GP\275 W\350\273\223UU:\262P\016=\217f\347<\276zB\275\251\226W\275-\277\"\273\230!%=\005\'\235\274v\027\231\274d\017\324<\347\032\272\274\306\nZ\275\022\331\023\273\037\212\336;6S\337\274AVV=\237\010\224\274B\342T\275\270\372\266<&d\377\274\013 \205<C\310G=^C-=\203\215E\275\350z\373\273\301/\001\275\030b\005<\266\266\212\2747\237H=\005*\313\273\3716f;f\217\004\275\254/\013<\037\013\234\274\375\200\002\275a\266J<I\rE\275\214\361\022=\025\032R=\342\036)=rC\016=R\240\224;\354\352\255<\007G\301<\027c\274\274%5\023<H\307\215<4\035\371\273\316\344E\273\210v\021\275\335y\270<~\246*\275\036\315\245\273\273\321\245;\222\303%=\2547\215\2738\233\370\274\022\010D=\205|\274\274\252\303\031\275Y\'E=\213\027/\274\326\260\016\275pE(\275\030\347\004<\275\213\270\272\377\003\004<\035%K=ln%=Rk:\275\252K\"=\201\362\274<C\244q\274\030\340^<\314J;=\004\365T\273\346\347\017\271\215\203B\275\034LS\275\'\r\036=`\004?<t\007F=L|\021=\234\3569=\020\214\373\274 \334\360<3\230\370\274\017\021&=\355\272V\275q\240\347<\273\333\373\274\027S\345\273\000\200\233<\213v1:\300\362H=\272\206\353<\270\235\271<\207xB=\303S4<\365\270H\275\250\270\217\274\233F9<\327\276-\275$\344\037=z\366>=\343\275\264<[eL<\t\275\031=\2637\247\274\326I\306\274\357\202\354\274v\035,=\001\264=<\253K\014\275\275\372\337\272\362\325/=V/\314\274\251\3363\274\033\2204=-\267\031=e\275\004=\320eR=N\225R\275\244]\225\272\266\321\\\274\261\240\226<\357Wo:`\251$\275\214\177\315\274}\243\336;\204\337\017=j\317g<O%5=\\\2319<\225\0056\273&%Q\275\201\002K\275\310\022[\274w\363B=\342\370\277<\270\005D\274p\347#\275\360&\274\274\313\371D\275\001wO=t\206\007<=I\300<\345\375\372<\004\2577<\000E\352;\343z\2018\371\253\306;so\217\272\204\302T<\372n\341<\245\233\340\274\031}(=\345;\377\274\027f\362<3(\333;$\301\233<@x\240<\030\265a<q|\\=W\260I=\243+Q\275S;\301<\022}\321<\2414\017=4g\017=l\246\314:\3658V\275\221\337\333<7\304\016=*|\264<\250\355\032=\006 G\275\266\000/\275D\255\327\272>\030J<\237\343\257<\3636\275:\000\323\211<g\201/\274\036\307\267<\251\331\'=,\205G;\377\260\"=\250\227B<\332\253\257:\013\035\300\274d\204E<\222w\017<\227`\013;\305\237\256\2733{\377\274i\"\277\274U\363 \273U\226\017=\310\217\034\274\312}?=^\212V\275\262\303.\275^\361>=$\225\027=(\261(\275 \263!=m\317D=\214\317\033\274\260-5=.\253\260\274w\364\"\275\021e\220<(,[\275\324\366\355<\302\224\376\274\354\025r<\221\201\203\274Dp\370\274\262\223\317;\313\360M=\260\330\313<\343\300K\275\234d\372<\220\262g<\033\205\333\274\200\213\261\274\305\223\013\275\177P\375\274Xo\006\275\374\273\004\275j\311\321<\235\375\336\273o:H=\030r\253\274223=}\360\371<\213\006{<k\212\017\275\336\301Y=Dj\264<\330-I<6\r{;il\005=\365\022\013=\344!\261<#}Z\275\032\031\305\273\'\307\021<\212\013\025<\310;?=\213\023*\275\"\242\344\274:\020#=\014\336\203\274\016\t\233\274\331\2242\275\245k+=Q2E:\r\253\'=~\346\232\274\030D\205\274dkq\274\'1f<\207_H\274\034\357S=?\221\t=l\037A=\370\321A=9$\214\274BZ\332\274\327\"\200\274\213\316y;,\242&\275\247\340\247:\274\023\023=\375\"4=-9\014\275\351\303\314\2748;k;f\233\301<aw\253<\230\020\033;\245\365\240\274f\320:\275\216 7\275Fq\020\275?\234\340\273\243\033\023\275\212cP=\350\'\371\274\265!\326\273\262%J=q\344[\275\037\204\272\274E\000J<\245\350:\275\232\240\\\275\257{t\273\027D&\275\343\373\246<i\357%\275\037]\356\274#\233*;\210\327\271:=\200\236<\347\265\327\274\336\261W=%\331H\275\355\225;=\252~\336<\330\266\000\275\031\3333;\232C\331\273>\2030<\345\337\226<M\340*=\372\337\237<\336\265\034\275\334\322\275:\366\017\352\274\260\010\236\274[\303\335<\036\351\353\274\220\336\021=\250O\005\275R\004\261\2732]\264\274X:\036\275\375\261t\274\"\313-\275\237\177V\275J\211\r\274(\0007\275\237\251B\275 \272\263\274\315\265)\274u\207Y\273\234p:<=\356\252<\264\272\323\274\026m\343<\223k\352<\274\321\206<\327\344\030=\313\330\213\274Z\320>\275\365\014\316<\220rF\275\254\207\317\274\2414\371<\022\317u\272\373{k<\223l-<&r(=\252@\265<cuK;\315\026\251<\257\243V\275`\244-\275/^=\275R\3416\275\206\275\246<\224\211\037=e\324\267;\350g/\275\354\0343\273\247M\356\2731A\004\275\251 \267<[&\020\275\000\222<=4c0\275\355\277\250\274\223\224E=\214\371\352<\260\330\315\274JS]\274\261\227\340<\357\260N\275\357\016\002<\203\330 =\263\201?=C\264&\274\020\024\204<\264\257\010\2759\r\312\272\367z\276\274\373\204\002=\215_F<\371\264p\272\320\347\"=|\366\017\275\240\010\210\274\004(\025<\261\305\220<\256CK=\312uR\275\232\232\"\275\306\361w<t\250\342\274\032\242\031=\014+e\274\202\345\r\275|*\017\275\365:!=\202>9\275<\311B\275\021\247\247;\205\217\023\275G\301\276< \027\274<\246W\362<\"\240\222\274R\376\020=\247\362\320<\330FK<]9\265\274h\2052=\262x\221<\300{\345\273%\032\t\275j}\032\275@\357\320<\347\244t\273\205g\305;\214\276}\273\327,\376:\260\210==\2437$=.\002.<\306\214E=\233;n\274k,\032=\335wW=kYA\274?\234C\275\013\032\374<\000\332X=\271\350\341\274\371\247\002\275==\313;\376R\037<\001\331X\275\3165\262<huD=B\276\031\275\342\353\331<\327#\263<\222CS=r|X\275\306T5\2753\t\255\273\317\2731\275\325T\236\274\247~\237;\241\312\333<\277\335o<\\\032\257\274\356\016\201<\\u5=\240\027H=\372\n\211<\366+\260<\257B\225\273\251\277\243\274\336\230\003=:\354\023\275\252:\300\272.\371\006=\272v0\275o\303P=\257u5=\010E&\275\315\037\n=*\034\024=*@\000=\375R\240<\3642\357\273\265\006\347\274\325\006\t\272\024)&\275\237\213g\274t\207,=$\313\205\274\344a\255\274\034p\226\274\034\260\017\274\303\303\2659\365y\363\2743\244U\275k%\351<f\231,\275\345\3560<\202\222G\275\002\223$;\306_\377\273J(L\272D\036\036\275Z\004&\275fq\360\273\003\361J=\254\\\r\275\371\\[=Q,G\275\301\217P\273_\312N\274+Q2=\203\030\022=\356\246\271\274\374tu<,\324:\274\341n7\275\3241\234\274\226\024\221<\261\246\033=|-\203\274YP\262\274vYJ\275\334\001\236\274u9\003\274e\247\337<\371\336\030\275\375\366P9\317A\251\273\220r\313<7K\272<\227\345!=\236\321\r=\200GE;\274K\247<2\253\367<x\026\307\274\373\357\006\275\007&\013\2757\267\026\274Bd\252<]\375=\275\366\262\363;<\006@\273\327\354b\273n\277(\275\016\257\316<\273=\223\274\363\247%=\312\272!\275\256\027\365<\363X\205\273`\340N=\344%L\275\031I\342\274\332\333\010\275\354CJ=\024\275\n\275(\313M=\342{\005\275\253\033n\273\222\232\021=g\235\\\2729~`<\307\022\026=\305PU=\2114\306\273l\235:=\022\213\004=\276\251\010\275[\337\005\275Kb\365;\234\354a\274-~*\275i\342U\275\231\236V=p\2027=o\344\276<\265O\335\273D\330\363<S\2405\275o\020\270<fMw;%\317N<%\370\241\274\203\357-\275\001\206\275;WSF=\370\273\330<h\232=\275\\<\267<[\205B\275A\270\034=\306\361\030=\344E\272\274\274y\013=NrA\275KO<<.\017\220<\255\362\250<\21037=u\215\374\274\253;\213<;\365^:{k\307:\354.\335;\322\003O<\346\303^\273p\207V<\334\314\217\273^4\005\275\254\000\326\274P\323\";\373\353\347<w\203\016\275\033\255\222\274\232q\205\274\350\365\257\274\226f\t\275\013\371$\275[Q\211\274N\252\203<\241\260\313\274\376Du\273\371::=\220\006A\275\377\222[\275-A\035=Q\0054\274\220\021\'\274X?5\273\224/!\275\330\233\362\274\027\205 =\3312\005=\217@\245\273\205\331\214<W\023L\274\355,)=\366\351{\274\357\242L=>\002\301\273\363\363/=\222V\274\274\222\361\025\2750\215:=\003\221\356<\311Fc\274.\207\270\274\302\017\355<#\357&<\036\220\021=D\300\266<G\372C=?}\276\274\220}\010\275s\370\324\274\021\271\024=O\323\t\275I\363$\275\2337P=\212\264=\275\314\245\004<\3678\021;,\024\002\275\211\225C<,~T\274\000\345e:*\323F=\256U8\275(@W=qW\336\273\355gE=\320X\315\274g\020F=\317*\025\275\253gf\271\303\302\t=a=\366<\272\210\366;H/H\275&\367\"=\240\"\024<\301\354\002=M+\032\275\215\317\002=\331o\014\275\343\356\t\275{\232\204\2743Q \275\375L\256\274\031\033\260<\274\232\026\275\246C\256\274d\000N=\240\230G=\202%\371\273e\023Y<\274\0132=\304[\035<\363\320\247\274L\2139\274\250`\364\273T=\317\274\330\217E=`j\262;\330f\006\275>@\203<,^\032\274\007\200\327<\345\215\030=\257\246\375\273\205\006\'=\232YJ\275d=K\275/\0357=\321\316\374<Yx\024\274X\2372=\212C\004\275\007D\000;y\017D<\370\205$\275A\212\271\274\246|\311\274\245\256\004\273\241XO\2750\2348=\246\002$=%\265?=\350\301>\275\335\211\003\274__3\275|e\014:\324\264a\273w\202?\275)\215Y\275\237\232\254<\007\337\007=\255=E=\314\020U:&\014\270\273\265X?\275KD\"\2755\337\022<\270\375K\275\264\224\236<\352\304X\274\032G\337\271\355]\260\274\257T\347\274\264q\032\275\335\000\351<Fa\273\272C\301$<\017|\337\274\317\305\010\274 \344\361<&\t\245<\025\375\020=\225\341\323\273\010X\026=\202c\347\274 \"P\275|\357\322<\211\226\366<|\024==\224\272\265\274\300\220\310<\201\222\212<\r\212/\275\3531#\275\254\352\001=}\235\222<*l\230\274\305\254\020<\362b\354;\223\335+=\262\253\344\274\336\261\377:&\235\316\274\303\245\343\274\306\023 \275\n\2171=\203\335Y<\360\367$\275\251\026X=!\262O=51\214:\223l\356\274+w\365<\"\241\310<*c\243\2746<~\274R\003\320\274\377\205\264<Q\347\362\274\033\201\357<Pj\'\275A\331\351<\233^\275<\025\n\333\274H\321-\275\'h\375\273b9\361\272\023K/\275\010\265)\275y\250\027=\241\t\214\274_\2538\275\337\276\037\275soG=\r&\304<\340\245&=\246\2255=e\010\312<\0257\341\274L\036.\275\025c\317\274F\303K\275z\336\007=_I\001\275\203\340}<M\3743\275\322x(==\263\265\273\220T9=\270\223\025\275\211\241\236\274;\205\235;)\2106=IAd;x\263\221\273R\305\265<\333\270O=r\267\232\274\251B\021=\2254q<*\'\217\273\262\274\374\273\030\276\021\275\233\020\036=\226\245\365\2741\345\303<b\372Y=s\3120\275\316\346R=\255A?=\210&3\275\211\004\306<l\3662;\255p)</\200\016\275i\232*=\003\0201=\253\204\301\274^\300\006=`\373\221<\221\307\034=\n\332.\2750\201\211\274\234\214B\275\203`.<\267\326\263<\013]\326\274\276L\035\275\367b\333<\234m/\275\350s\227\273\276\373F\275Ad\001\2752\312\270\274\244\353@\275\334#\337\274\330\277\321<\221\002i<\000\357==\374Y4=\376\2354=$\252y\273\006\3756\275I\373a;4\242\225\274\257\275B=\347\332\3619\316\201\331\274?\nB=|\220\271\274\330\335.=\353U\251<\232\036\260<\274p\202\274\227k\313<\240\020\036\275R\336\007=\\G?\274p\266\010\275\233Tb\274\256\017 \274\016H\010\275\246\3316=\251\355t\2745\340\337\272\264\203\360;\204\0164\274\337\037\000=\352\215\331\274\222\016\305<\220\023\317\274(I\337\273\374\235H\275\356x\n;\332\222y<\223\330\300;\375R}<|W\222<k\271.\274\027\036F=\316\353\241\274bVC=\030\2356\274O,,=GlO=\222*F\275\205/\220\274fh\352;\262;\303\274\265\227\255<N\r\264\274\317{\214\273\261\251\256:\301\217\357<\340g\240<\254d,=\336tC=\36205=\277\343\345\274V\344\252\273\325\0003=L>\314\274?\341*\274\3069B\275VdT\274\232\3321\274\003\362\020=\366\266\347<\240\332\200\274x\240\312\274\017\3027\274\245P=<o!L=pEA\275\332\220\237\274\266\033\277<\237\347\367\274\221\020\033\275U\203_<:\333\024\275\373]\276\2742\207\222<\023\313\204\274f\006\037=\312\350\033\272\325\203O=\313Y3;\230.\340\273:5D=\345LP\275?2\020=}\354\003\275\224\246\337\274\013\177\013=}\026q\274\366\232*\275\237\306 =5\354\016\275\340\313\'<\3317\361\273\356D\200\274@\206F=cP\261<vK\370\274\257\023\005=\003E\343\2732\2673=\224[\231<V\220\027\274\031\032$=\300\310\273<\206\224\213;<\376\026\275\245\232 \2740\010F=\306\rZ\274=\350L\275\333\377N\275\213R>\275\200 \363\273\177{\354\273\202\026[\275\346\233+<I\241\201:`2)<`\365I\2750\033\004\275q\277N\275\374YB=\310]\024=9n&=\215\251\307\274\372\001e\273\210\246F=\006nL:\271?Y<E\215!=hNI<\350\3700=U\237\351\274W\266\304\274\362v\216\274pO\"=b\215\034\275g?X=\254\361D=m\377\022\273jr\036\274\362\030?\275\221~\264<\320\234\336<\342\261\277;\365\337Y=\233\234S<\370\322`\274\367`K=n\025\304<{\316b\274t\265\021=W\307\375\274\307\276\374<\331\364\222<\311+Y\2756\032\262\274AnA=\350\027\302<\007\376\t=\256\334\007=H\261\310<\331\346\032<\"N*\274\353{\276\274\375\2428\275D\337a\273n7\027\275\216\005-\275Nb\\\275R\230\330;\264\'\323<\355\335\250<\215\270\357<\215\035.\275C\367P<G[\274<I[B\274\352\206\257\273\002z\365\274\330\210\000\275\326em<\346\336\205\274\3358\363\274\326E\350\274\375\177\236\273\340b\002\275H\372\243\274B%\r<sP%<O\217\030=\373\233\344\274a\205\310;/ZW\275\273\307Z\275\243J\347\274p9M=0\024H\275D\273u<\273p\020<\246sO=\027\332\023=Acc\274\177\033\204\273,#\036\2756^\376\274RU4=e\r\240\274\231\017\\=\337G\317\274\363\003L=\364\312\372\274\263\350\023\275\263\302V=\305ZB<a\317\311<\303\356\267\273\314M\014=`y\021\275\210\267\264<\304\222L\275:\271\260\274b\003\t=2h\327<\207\361\210\274.v?\2754\031\362\274\300I\025\274\316\177Q\275>\357\366<G.L=:S\036\275c\221\'=\346\\\373\274Ve\017\275\035\375>\274\217x\341<P\366\021\274\256\255)=\374\002\246<\342\356\233\274\031\003\233<#rM=\003\353\010=\375o\321<\332\333>\275v,\232\274\250;\344<\200\3578=\033\205\372\273\347\026i<\356*\257<\234X\024\275H=\217<]\225\312\274+\213\370<\216\251\036\274\0334\004\275\353u-\275\035\342\247<\021-\210\274\332\026\201\274\007\027\247\2747\033\203\274!\315\272<\247\r\342<\347\241\002\275`\263c\274\334}\213\273RRC\275\247\2176\275\226\177\330;\327f\017\275?\336J\275\016\303\351:\317\311\203<6H\334<\235xE=\2662L\275\363\016\327<\341\r\025\275[\234D=\264\352\000\273\314\276\301\274\373\231j<;_\007=\307^\371\274\027\310\367\2748^\356\274 \016M;\031\034\t<[\337X\275t\262d\273^=\315\273\256_\277\274{\214>\275\205\276\230\274j\350{;\311\222n;c\353\017=\017\235\250;N\225Q=\257\221\355\274\313\261\316<\036=\021\274C\261\330;\261\300)<\260\362\013=\313\225@\275sI?\275\003\302\345\273\3767I\274\237\'\000=\354\315<\275\2230\247\273_CS\275C\317\023\275h\362\021=\310gJ<\252}6\272\223\314\021\275A\301@=\024\272\375<u\341C<,\034+\274\256\223M<_\243\023<k\007\'<\262\353\004<\302\251\013\275\242AD=\232D?\275o\271)\275\333c\356\273\203\203F=\177\367\035=<\345\272<2\313\004=\335_==\337HZ\275I1=\275\312\255\024=\217\034\314\272\343|z\274\235\233\263\273Sh\'\275\025\' \274\270\360\010\275~\022\000=\3634\364;4?\365\273\236\010\n=w\017\307<E\311\027\275\331;\036\275) \246\274yu0=\372\267i:Z\t\306\274\332;\377\274.\016L=\234\023\370\274\220kK=W\247E\275\002j\221:\233\374$=\022B&<\352Z\242<\331\363\321<L\371I\275,\343\237;i\202t\274\037V*\275\023C,=\240\333\";\260\000\356\274\204,0\273F\271\234<\301\020\321<&Z\331<g\177\017\274<\002\265;\320OH=\302\336\245\274\006\2219\274\322R\242\273\010\341\207\274]\333\225<7\372\205;W>\320\274R\035\013=\215\357\214<\356\332\213<]\350B=\006\233\353\274\337*\306\274\2072?\275\233\240<=\326\004\323\274\277\253\376\273]\205!\275e2\250<\210bQ=\005\236\253\273=\020T\274.F2=\212\310\022=<\014\021=\351\031\004\275\306\267\027<\251\265\240\273S\241)\275\260\240+\275\3768\270;\225\350\357<\326\260\207\274\004\032\345\274\255\311H=eA\350\274*+\274\274\333\312t\274\361\322!=Y\257k<\235\254K<\225\020C=\373N\021\272@\177\026\275t\300\262<\377a/\275\230\362\340\274s0<=\352\333\004=\232\001\207<\201$\275<\215\037\224;\017\345J\275P6\264\274-\337(\275\031\273\003\275\371\226\013\274O\304X\272m#\204\273\241\333\217\274N\225\031\275!f\352<M\315~\274\353\303P;\371I6=\013O\227\273\331:\301;\2711=\275\235G\334\274A\nZ\275?\240\231<\376\023\277\274\363uN=X9\017\2750e\"=\356\232\262<&I\257<{.\354<\374/\201\274\306\227\370<^\214R\275g_M\275\323e\001\275\210bE=\320T\366<\366\272\327<\000\334w;\307=\341\274(\367I<\252@o\274\026\253\007<\315\370\325;\235\303i<l\312}<5\362\013=\t\214R\275\263n\204<\305\215B=\360\212\235\274\251\360\374\274!$\313:\024\354)<\365c\227<\221\230\000\275\035\233\227\274\021\252\211\274\344\261\021\275\t\345K\275\305A7=\010\000\031<v(\034=\352\217\t=\210\230D\275.\324\026<\222\224z<\010t\365\274*\262\014;}0\355<1\272/=\271\275A\275m\2735\273\037\240\004\275\264\375\013\275\002\303\302<\363\361@\275\"1G=\022\017\226\274\257\370V=$z\372<<n\343;PQ\272<\324\264\004=\243\332\235<\220\344\273;hE-=\220t\340;\3765\351;(\317\266\274\022\'2\275\223\"\346\273\340\033I\275o6a\274\0310\223<\221\267G=n\274Z=\317n\350<\371q\366<w\3060\275l\266?<\263\215\005\275|C(\275E$B={\332\377<\257\234\243<\331\303S<(o\312\274\274\201\322<\355\204\023\275\332\355\"=\370\177\350\274\271\343\371<W,-;w\"\356;F\367\017\275t\005:=_AU<\233%\\\274\305p\373\274\202\216\243:\361F\334\274c\261\367\2747|D\275\374\264\002\275l+D\275\244\276\233<\246z9\275\234\237\227;`\323S\275\215\031\334\274\245\346\327\272\3366K\274\033\234/\275\215\313\221\274\327f\007=\270\332\010<\360\207H\275\360mA\275(L =\216\020\311<\314\222 \274\t]\276;$\237B=\030\2115\275\256\000\265\274\371\013\261\274\371\204F\275\303\010\362\273\233s\177<\244\201&\272\n5\003<\234\3260=*X:\275X\305+\273\325h5<\017\325C\274\327\364\321<\331\311L=y\340\024=.\025\037=O\320\267\274\204\255\227\274\240\335/\275\3502\355\274\024\365\000=\245}-=G\277\352\274\266\367m\273\314\n\031=\314?\235;K_\362<?\357\035=\227\240L\275\356n\205<V#7\275d\233\'\275\362\345\023\275p2U<\336_#=7\034(=\241l9=\013V\004=TM\350;\320\335\311\274\035\255\211<\305Ns<\tO)=^\013\306\274\300\360\000=-\007I\275\305 {\274J;\262<\t\315\343;Q\000\037=\027\350&;h\224\336<\315\\\262</-\306;\313KU\274:\247\021\274\221s\013\275\301\246\342<\310\244==\347\231 \275\273B|\273\013/Z=\250\360\256\2744\377<\274\004\240!=}\t&=\346\246\032\274\300[0\275KO\273<\342\177\021\275\247V{\274\275:\377<\2039\'\274\363\321\255<\2329g<\225\017\217\274\310\022\003\273M\267\357<9\227H\275\211\r\301\274\315\323\350<Y\234G\275\322}i\274\366g\215<b\007@\274T#)=\305B\355<\302\307p<\013%\016\274\"W\361\274\034\014;=\230!\232<\247\321\374<\342\214\344\274\200C\246\274)\205-\275\256\212*<R\022\265<\026IX=\203\037\365<W\016A=\370\031,\275\304\353\253\273\013C\240\274\247\\\027\275\220(R=\200\016\217<A\016\240<P*\364:\231\312\372\274\274\333n\274A\312!=$l\024\273H\303\247<\274\025\t=\311\251\036=\001\\\007=\313\266\r=X7\013\275\265I\373;u\273G=\004\264V=\330\335\226<\204\224\327\274\313\221\305\274E*7\273U\346\375\273i\006\002\275\332\217G<B1\200\272h\035\346\274\350\232Q=\026(\032=r\177\320\273\241TJ<W\311[\275\222\305\025<R\005\241;\204?K\275\324\255!<~\240\246\273)\334J<1\317\002=\013i0<\nP\316<oh\345\2735\215\252\274\177[t\274\215\343C\275\312>\022<\353c\020\275\007\242\365\274\2370\375\274\372\360\310\274\210O\022;\312pT=H)\246\274\250\024\022\275\304F-=\366\r\027\275Q\357t<4\333\n<A^\215<m\246\010=&\026[\275\270\215\355<X\246T<\305\n\235\274\262\\o\274\000\233$=s\276\204;G\202\222\272\364\227\264\274\322(\025\2755\222\343\274\226m\327<\026\205:=Y\336\036\275\n\335#\275\351\226-\274\271E=\275\263~\3159\020<Z<\253u\036\274\260\253\007=\276\325\231;\n\005\\\2756\347\267\274zh\344<\340C\027<*y\204\273\210\217\225<J\025\030\275\354GO=\367\014\203:\277\335\n\275k\310\376;\037~\030=Q@\257<Q\257\231\274\326\301O=r\330(=n\364\305\274+\200E\275\225d$=\211\212.=\350\313\271\274\\\302(\275\226\025\303\274\372\233\r\275hM.\275D\372H\275\177\276\301\274\274\322\343\274I\215\316<O\277\212<\302\265\364<\210\0045=\244\245\212<\003\3547=!\023\375<\2076#=\014\253\343\274\372!\270:]\211\334<\341\\\376\273!\265\000=.\030\003=\005\300\305\274uB<\275~\243\270\271\342\225\300\274\017v\315\273\314e\232\274\256\317[<\332\177V=K\222>=k\271\002\274K0;\275g\223\315:\362\347\032=\027x\303;\336\245\275\274\213\203<\275SZ\223<\356-?=\215\261)\27470:=\325\315\031\2754\201v\2721\027>\274z?Z\275\266yz\273u\223y<F\233\252\274[\2416\274{\312\356\272\252%X=~K\033<\221\312\367\273\210l\003;\261\026,=U\320[\275\310A\367<\333\237\320<T*%=^VQ<`\007N=\331?\034<\275\275J<[\354\030\271\177Y\273<\224\254\'=AU\272;XS\030=\326\205\274\274\251\263\351<}\255\022\275t\354\016\275\224\356\200\274\242\036/\274\245\210(\275\371b\223\274\263\233G=\265W@\275\017\025\207\274R\255X=\025l\n\274\027\205\260\274\201\260%=h\201\345\274\013\034\306;\2727\361\274\322\316\313<%Fd\274\010\362\347\274\001\325\352\274\325i\374\274\373\n\371\273\202\006\336<\243,L=\n\024\234\273Zq\312\272\312K\003\275\344R\006=\366\016A\275\277\363\017\275~&J=P\266\005\275((\002=\254`\030\275\341\0342\275\216\242\206\274\264\324G=\255e\365;&\204C=\'y\026=\256\214\367:\260yD\274\013\353\020\275\214\323\006=\233\004\000\275~\213\252<\2417#:.\024\275<\247\271\005\275O\242B\275\010\240\345<E.&=\305\002\034=eq2={\327\314\273TqY=\014\033%\274\373\201\016=^!X=y\007a\274\337\374\270<\030\027\016;\2538\034=\270 \021\275\301Y\330\274\372\010+=k|\032\275\310\r\014\274\016\330\326<\002j?=@OU\274\335)\005\275\010Z\365<l\253\240<\031\244\372\273-/\007\273\247!\215<\213\364\022<\026L:=Z\374\310\274\2106`\273\241|\234<g\2210=\\\005\272;\217\237+\275\316,\337\274\324&\243\274\341\240%\275\225A\202<\021\377\222\272+\230\027\275\244SP\274C\252V\275(\273I\275\222\277N\275\321\346I\275\322\034\215<\031\016\031\274h\203\273<\363\035+<\321\376\026=k\264\035=GY\226\274\016\2664\275\005VK=\0106\263:\021\024\004\274S,\006=Mk\335<r\365\271;\220\274\216;^\014\035\27446g<^\302\246<\253\363\001=4)\206<\2377-=\331\304\271<\224N\007\275\333\027\340<\035z\370<\253\262\272\274\317\257&=\245MZ<kuJ\275\025L\036=\005\003S=\367\261@\273\372\352<=kMS\275\021\231\243\274\275\354O=*ke<\242B\200<\006i\002\274\347\0206=!\341\261<\271\310\337\274\207\021\034=\323\357\223\274\354\261;\274\027\034\023\275\2078W\274U\344\016\275\200P\214<\3569\247<\330\251\020=\256H\250<\216\270\210<,\224\204<\317\231I\274\205H\034=\340\327i\274\367\214\030=Z\270>=\36377\275+\341o\274\273\240\217<\037\250\324<\261\334U=\206F\363\274\013^+=\311<\023<\234o\023=\023\313N<\226\327e;_F\221\273x\224\363:\241\265<\275I\264Q=\216\220\014\274\227\207\302<d\242I\275F\265<\275\342&\277<\373>\t\274\010\250\217\274.x\226;u/\222\274VA\007=\316\264\267<\273oL<\024\325\024\275\356\004\3148e\033K\275\243\324#\274\033\313V\273O\242\034=\257\214\234<\266\2668\275O\366L=\312\271\033\274\242g\002=a\212Q=\n\226\350\274\276\250\215<\350\007\310<T\224\257;K\205!\275H\317\r\275\177\372\035\275\2437Y;\266\364\374<\300\360\216\273g\213\307\274\322\315\334<7\027&=\347,U=/E\031\275\014\307\377\274:\246\221\274\377\030\014\275\204\211W\275\nW\006\275\036W5\274\264j\301\274<,\220<\266\237\244<;|\253<V\013\327\274\3715Q\275yj\027\275\256\372\233<j\320\020<\002\215L\275\205\347\023<\272@\036\275V\324\211<\2016Y\274\307\031N\275%\265\216<of\r=R\215\345\274\360\022\367;\357ZM=)\373\301\274\237\337\211\274c\3072=2E\212\274\247\230\223\2745\203[\275\032\022n\274U \032\275K\313\035<\340jA\275\21194=\350\366E\274\021\032\241:\372\026\322;F\021B=\376\360\030\275>q\013\275i\336-=.YN\275\234\n\252<\022\345\017\274\252\207,\275.\3500=\000T\271\274z%\343\274ur?<\326\266\002\275\200\r\353\274\311c\257\274\344\372I=\276\037t<j\0343\275\336\250E\275Ex\005=\362\231\345<\343\214\031\275\333\307\374\274\321\273\224<\323\325\247\274\343\213%\275\032O\324\273mkD=\310\2267\274\223\241Y=Y\203\313<\325\3662=\001\223\\\274\342,\337\274\261\275\264\274\304W\230\274\210\372:\274\351\313\252\274\272w\270;\374C\337\274\003\356\037=ekZ\274\353>&\275\311\275\204<`\203E\275\\n,\274\234\314\213\273e\242n\271D\030B=\034^\203\273\346\222\314<\256\263 \275{\357\366<\252\330\322<\271\354\331<\221N-\275{\307\364<\300\2253=Qr\375\274O\2535\275\007-\273;\213\340\002\275\224 \304<s\377\360<c\202\006\274\313}R\274R\247\372<\364\244Y\275Y\307\242<\216g,=,\207\225;\251\025\371\273\327*)\274\350\301\300\273\026u\203:\233\367\212<\267XO=\307G\325\274<\353Y<\306\206\241\274>_\275\274\302R\320\273\365\321-\275/\205]<\351\352\351\2743\276D=|I\037\275N\010?\274\264|\004=f\316\037=(\032\035\274h\374\327\274\025\270\212\274\344\216\035=~\315\317<\256i\300<y5S\275O4\374\273\352\353\026\274\266\241\375\273\367q\364<\225\341\216<\nfT=\tL\223\274\313.>=\301\373\362\273`o\010=\241\377.=i\367\274\274\202\377\221<\010\245\031=\273\335c\273\231\201\254\274=\004(\275\"^\355\271\256\rS=\255\365-\275\200\256==\307\315%=\224=\247\274\234\260J<w\373\034=\010\017R=\361R\362<9\347\265<0\273\003=\177\222\233\274\377\\N=\216\316\370;\304\240\316\274\346\240\020=\372\220\032\275\342\234\023\275![e;\212\313.<<\275\206:x\rN\275\252*#\275:\251X\275{\037%=<\002\271;]+\333\274J ,:\333T\022=\317\245\365\274q\203#=\315\013\236<B\365C<\370\355\324\273\271(G\275\036\031\345<1-q\274\210\356\246\274\334\"\023\275x,\237<\010\t\331\274\227\212Z\274\rsS\275\033/ \274\243A5\275\301&\017=\261\324\025<\311\026\005\275?\315\021\275n\032\317\274\367f\036=h\306==C\217\277<\204\217\005\275vM\250\273\016\355\005\275\006\225\2029\n\221\362\273\227xK\274\371\356\006\275T\270\305<\342\230\223<\254\035\221<\0211\225\272%\323\004<n\304\220<A\323F\275\220\350#=:/\362<\326\354\222\274\241l\334<\317\263F\275;\0266=v\335e\273$\330R<\004\201\345;kLS\275\271\312\r\274cyL\275\302\310Q\274.H\333<\334\326q:\016e\204<\240\226N=\331\363\352<+\206\r<\334lX==\021\025\2750\222[<1.\305<\351\014\275<TT\000\273\323\230%=5qX<\\\273K\274\0172\227<\361\326\037<\206X5=\313\215\"=@\231\027=E\340\023\275;KX<\272\013J\275\245\216\313<tO3\275c#_\274\342QY=\247%:=p\345\206\274\201\3122=Ir,\275\024\024\034=t\265\005=Y\007\267;\364\330\363;\316\3329<\'\266)=\276H\035=\253\230\001\275\334J\340\2742\n\272;\324\027\243;\303\002_<\376\244\345\274&s\007\275\256\245E=\021\261!\275\320H4<.\346\013\275Z\002\021=H\343\016=B\364B=O\377\276<\200\000\\\275\017\253\367\272\312\351J=\225\271U=eB]\274\027yF\274\214\021\027\275-\274\255\273&\227\t\275\351\215\241<\267\004\354<\272T\035\275\342\370/\275rW\016\273\'\327\301<\010\217\036\275\275_\277<\2311S<iWK\274\207,P=\233\360\352<v\221\030=\215(I=5\376\335\274\303\3318=\322c\000\275\371\3270=m\242\333\274\202\325\003=\034\020\021\275\245\0254\275\251{\316;5\265*\275\3555y\274Oh\367\274\322\207\334<\223-1;\216;o\274\243\330l\274\177/$\275h\251;\275\225\215F\272\261v\215\273 \347g\274\234 \233\2745\n\245\274\0101\312;3\276\236\273\207\261\030<\212\330\206\274;\217:=\020KB\275\265\352\t=\3323\356;y\364\017<\247i\227\274 \322\n\275\350\235\031\274F\357\357\274V\213I\275\375MF\275\226\030\231<D\253\200\2741\214\237\273~S&\275\371u\226\274\261\034\210\274\311\312\333<L\037\223<\235\332G\274\257M\203\273>\021!<\241\214)=&\000@\274\352\254\205<#\237\351;\260\306\030<\263\233\343\272\225Gx\274\\\337\025<\275\003\016=H\255\345<Br\323\274\2672\322\274\305\3069<|\311$=8K\276\274\177\262\031\275B\320\217<\031&\361<@j+=%\242\r=\260h*=i\224\354<I|V=o+\016\274$\"\264\273\372?4=3\310,=\357\244M\275\315(\314\274b\340\255\274E! \275\0270\270<\377\300\021=\240\216\270<;\343#\275\204\247\352\273\202\355\014;\353E\326\272\254\374\215\2742~R\275)SV\273\002\035\364<!\212\r\275Q)\265<\356\346\262<a\232&=a]\001\275\207\323O\275\200\306\311\274\266 \310\274^7*\2742\324O=\253AN\275-\261\366\274P\204|<\264n\305\274!K\372;\272\354\300\273\350O%=Z\227,\275\225\362\024\275\324\350\006=\272\253\023\275\323\335\351<^\035\332\273\320\324\010=w W\274\232\023_\274\275\317K\275\337\030\272\274>\3540\275\343/\027\274\363\373\037\273\004:\356\274\302z\251<\014U\355\274?M\243\274]T\367\2743\345\364<\r\275=\273n\270\030=^}n\274\030\273\316<\347\210U=9\254\034=D*\231; \2117\275z[\002=!\027\217\274\021-k:\024[g;g\356\374<Y\377\260\274\227L-=\256x\343\274N*\222<_\374\304<\267\324\375\273wS\035=\220d\325\273S\032\303\274\270\023Q<\313e?\275\233Iv<\260-\037\275\252D\305\274*\221\036\275o;\263\274\267\307\371<\025\247)\275Qr5=\013\221\241\274\202q\223\273\376y\200<\255\357o\274\213\007\014=\306e\303\274\002WB<~\221\232\274\206l5=\367\357n<\253&=\275w|\020\275;\322\002\275X\252\r<\231\326i<\'\377\335;DE\335\274\356\033<\275\020\013\226\274\234Q\004=\362\364H\275\340\222\210<_p\276<\255\313\347<\375\2670=\342]\016\275\030\307\233<\323\217\365<\315\004\022\274\361\303\034\274\336\342\346<<\265e<\360\237\024=cj\'\275\202\210-=GO\334;M|Y\273\351k\014;\216\270Z=Ra\352<\357\263$\275\356N(<\013T\203\274\300\323Q=\323\3475\274~3\214\274e\235D<\310;\014\274\262\001\302<YK\204<5\033\200<\273\266\033\275\354=Z=\027\233\275\274P\031J=%\211=\275&c\032\275\331\2074=7\020\027;\022\036\226<\320\367\236;\270$S=\000\303\027:\020.\326;8\207b9z`\003;\270\275J=\221\360h;\311\377t<\343?\t\275\233\3719\274^\023\022\275\367F0\275\265yI\275\212\305\004\275\005+6=t\273M=\370\003\017<B\335\253<=\002\n\275\262\210Q<\3100T\274\361\334e\274;\276\271<\306\364<=\036f\030\274\353u\'\275\361\032\272\272U\264!\274\306\235\032=\235\3446\275\224\275\327<\250\271\213\274O\233\335:\333\271#=\250A3=t\327\204<;\002!<\345\246\231\274\253 \304<\027\0038\275\3547\246<\263\2362=\275\235\342<\374\254==\307\rA\274\347K\007\274%M\375<\333-\364\274\224_\001\274$\261\326<\366\253\341\274\227\2649=\267t\034=\'\357\030\275\010\245\371<\331D\201\274\277\326\030=.\207\225\274\r\362\362<fo\004=\304u3=M.&\275\265\017\257;\333\\5=\022\r\224<+\365\003\274\266\007-\275\35781\275|1C\275y&L\275|\332A<\333;Z\2754#\014\275h2\365;Q\242\"\275\312\\@\275=~\\\275\244\347K\275\276\347\230\274]\022A\275\241\255Q\275(\360\314\274\367\321L\275\301\252\223<\205\030\004\275m7{<\224\355\005<\235G\220<\300w$\275\022w\243\274:\216\305\2745v \2747\206\016=\023\222t\274\301\365.=f \361\273\005hE\273\002\345\227\274k\215\023=\256K\314<I\263\327;\267U\3619\255+\177<e\363%=\342M\031=r\376\221\274\207V\220\274\362\023Q\274\232\2269=!a\036\275,\213$\275\302\n\372;\222\032\357<de\010=~\331\235\274\240\315\201\274\255\317\222\274&\312\246\274\256\240\347\274\277\rY=pAG\275s\025\010=\323&\320\274|M\006<\034\322p\274\334RL;g\3048\275:}W=\332\356\'\275v;s\274!\004=\274\341\030\253;SP\207\274\360!p<\024\311\007<8\023\021\273 \001n\274\030\264,\275\3278L\275F\304I\275\"3\311<\021\377\202\274\335c\366\273\301\2476=\366\322D\275<\2069=\211j\033\275(/>\273\374g2=>F-<\371\036\357\274?\244Q\275\360\r\003\275p\320\032\275\371\243[:\244\331,=S5R=ZA\372<\0073&\275\007\375\035=\314\327F=\235\270\245\273\007\215M\275)\001\262\272\336;\256;i\357\027=7k\335\272\367\210\354<Y\267U=\252\'\331;\325Y:\275\363\305\010<t\223\377;)\237\220\273\216\010c\274t\031P=\256D1=\242Y`\274|\317\341;\325{M\275TV\007\275\221\273\021\273\030S\001\275dI%\275\376\351\360\2746\371\017\2751\273\251<K\315\'\275\315\347\311\274a\224\305\274*\315\005\274AO\035\274\302I\232\274\204\001\r=\313\242\333<\325\027w\273\265\212\325\274\"u0=auG=\000B\003=J\030f<\246\262\027<v\233C;\267yk\274\2236R\274\330v\362\274\244\360\347<\232\t\030\275\323^A<\214\256\001=\2044\353\274\361\321\024\274\343\227\311<\033\n\t=\315\361P=\022j\221\274}hU\275Cj(=\035\270\026=\203\025M\274\310\254\200\273\023\340V=\203\310==e\035\216\274\227\220\n<\354+\034\274\201\371-<\261\267[<q\306\355\274\235u>\275V;\000\275\200\013\303<\334\221\000=\244\253\225\274\014\367\014=+\374\226\273\003S\256\274G+\371\273\263\343\017=c-\006\275.z\036\275?\235\367\274,\016W<\251z\321<\370\325\202\274%\240\032=\037\3245\275\005\035&=}>H\275[\000m\274g\347\263;A\313\250\274w\\\237<\017\315\034\275\356\267E=\3439\214\274*^G\275w\301\030\275N&\327;\230\312\035<\002\221\017=\300\367\275<\332\031<\275\0255\232\274u\014\265<}\206\013\275;\367U==\233\016=\273\237#\275!\203\234\272\205\000\302<\231\005\317<\'\201\364\273\0202.\275@UR=\310B\360\274\223\035\332<\034\020(\275\023<\017\274\010\007\230\274\272\311\037=$y\"=\351K\t\275\357\252$=\350\274\354<\366\016\371\274\375\236\346<\317\365\252<m(\347<Im\024\275u\332m;h+\202<D\006\200\274\3253V\275\331KS=v\345%=\3333?\275\234\276\340<q\2038\275\272\3478=T\203Z\275\306\320\333\274\021\347-\2750f.\275\326\267\245<\243<\005\275\225\017@=N\207\002\274\207\264\034=F\277\267;\275h\332<\325\351\364\2740/5=\2268\247\274\374w\303<.\246b<\316\373\363<\345i$=\373\227\001=`\246\370<7[0=\021\230\022==H\315\274H\344\010;\035\225\304;\271e1\2759\312H\274\316\2108=\265\267X=\213z\337;\221c\214\2746\363\314\274z\235\027=\010O\001=\321\377\203<\037@ \275\311\345:\274\204M;<J\2132=\251W\323<\204\252\032\275Jl\217<\263\237\200<$\273/\273RD6\275\246\266\"\275\030\221T<\204\365\362<\272\0100\275\'\306\034\273{\017J\275y\t\265\274\034a\007\275\271\307 \275\177\324#=\277Z%=&\273\264\274~\366\346<\317\317\225\272\215R\n\273G\030\370\273\264\255\273<p%\021=\212\253N\275G\217.=w~\363\274\253\036\3718\276B\024<\253\216\325\273*\3753;I\327^\274\212\364+\275E,\352\274\320\274\365\273\274\370;=\347\t);v C=\024\247 =\003e\031\275&[\355\274*\005:=\322\252\030<2.\312\273r\357\026<\245\254\367\273/\366\247;TQ\033=\263r\"\275H\361,<6?\342\274\225\r\303<\323g!\275\t\345?=\255x==\327\234O=X\343\025=\202\207O\274;z\354\274\254\235\026=\3320H\275\205\244\253<\022`F\275\036\275D<\001\353\221<\375W\035\275c\345C<J\300\254\274]c4=\337\302\355\274\330\316\272\274h\333\033=\347l\200<\271#\000\272\316\206f;qe/\274|\203<<\205g3=\250\343\004=\367\364\024\275+GD=\327\244\026<\345O\343<\220i\331<-[\301\274.B\010=I\330\021\275\312\320\231\272\271 \023=\271;\372<\r/\376\274C\355 \2757\"\021;\370\017O<<\361z<\301\3512\275\340\026(\275\t\255\033<\313\373\020\274!\374Z\2754\327\006<l\224\006\275\023\355h<\020\374\355;k;3\275\323\322[\274pXh\274\207-3;Wk(\275=\336\023=P\254\377<\020\264\005\275\220\211:\275\377\243\342<F\016\000\274i\317\230\2737#\205<\272\254:\275)LT\274^\315\316<\355\307\250\273N \342\274e\226\224<\223yK\275\254O\037\274`\n\017\275a%\035=s\215\362\273\367\365,\275\002\363\n=DhD\275\3342\257\274mg\t\275\262w\336\274\304\021!<\351\016\035<{z\022\275\'\365\325<\366\017\344\274Z\317\343<\332\314\302:\031\243\001\275\252\255\300\274\201\217M=\232\317\326\273\360?\222<a\267W=\252\267\007:\004\001\242\273\300n\274<\322+\214\274\354\251\317\274\">q\274C^\023\275\261p\023\275\222eG\275\344:\t\274a\361\363\274\264\211\276;\332\345U\274?\342L=\206m\032\275\312\242\003\275sp\026=\202\307\224\274\363\316\370\274\312\350\273\273\376/,=w\310\304\274\274\255\013<\2475+\275\354S\253\273\037\035\r\274\213\366A\275mU}<\227d2\2758\240\224;.y\2718P\233\367\274\244.\203\274\212\t\272\273\022\336@\275\027\337\361<\261\020{\274\250T\247<\267\027*\275\317\301w\274v|\031<\327\333 \274\nEX\275\267\207\347\274B\374\335;\374?\350<ik=\275\262\246f;\261\207\354\274&E\236<\330\353\271<z\000x;\021\247K=A\372\251<\274a%\275f{\031\274\3508[=\232\361S\275]h\n\275\203W\034\274\241E\234<\213XQ=\270o\311<\"\034P\274\232\362\314\273\235\333Q\275\312U\205\274\2722\034<\331\255\214\272\277\033`\273O\213\326;\361t\272<\361\267 <\364i\240\274\302\245+\274\350B\377<\270\217(\275\336h\32783$\014=7\200\031\275\255\315\021=\353F\340<D\017X=\254\361=\275(v\'=\362oP\275\316\242\206\273\270(\324\273\025\2413=\026Z\355\272[\323\033=\027\037\242\274J\351\003=\374\274\374;\277\244S=F\246#\274\315\303C\275\260\375O=\t\234\022<\300[2=[\2142\275\236;\370;0\207.=(\005\333;3=v<\367\377c\274\233\204[\275\017\240\327\2745V\301<\344\022\213<\2326\022=)\346\343\274\036\367\023=\326\263\013\275\363\020X\275%\373\331;\214V\232\274}P\006=\260x\'=\310\003\305;\341*\356;/\203\263\274iWz<\205f%=j\214\217<Xj\034<J\002\271<]in\274\276\337Y\275Fi\353<\020\030;\275\344\230r\274\214Qz<$,\002=\010\233\'=DO(\273\365C@\275v\021Q=U}\240\274{\032\276<HP\342<\206@#=\333\213\235\274\263L\\\275=\356\321<-\036\334\274us\'\2750o\016\275a\360\020\275\314zo\274\214\235\n\275q\275F\2740w\020=\244\307_;\357\251\260;)S,=E;\010<`\020\023\275K\006\013=\277~E\275Y\343\230<6\236\275<\256^\002\275M\353\252\273\236\177Z=\"M\035\275\325\342\210\273~r\002\275\205\223\023=\251\266M<\250\231\210\274\236$]\2734N =P\"p\274YN\000\275f=\207\274\242\010\344<j\225\t=j*0\275\010n[\275g\245@\275\331\351\r=v\027%<b\023\377\274\321\230\023=\305\275S=\3272V\274Gl1\275/\350\217<<\367\366\274z\003\323<\021\302(=V\211\334\273\203\377*=%r\036\275\201\357D=n\232\212\273\363\037\372;\315\233\376;\352\231\232<\374\n\340;(\213\033\275-\200F<.\355\254\274@\243\225<\260W#=\231kI\275\226\367\202\274\021\213*\275 uH=\353\340j\274d~\307\273\317\356I=DA\205\274\007\326\221\274x\001\035=\2210\314;\201h.\275\327\320\246<\356\002-\275Q\233\'<\203#\272\274.w><g4\220\274\3141\336<\313\213\367\2744\023\"=\304{\242\274\251\311\221\274P%Y\275\374\221\032=\241\244R\274\206\020\016\275\255\346\035=\321\261\024\275\262\337\030\275\261zQ\275\235S\027\275\247\352\036=p\t\257\274\321{C<3\304\022\274[\021@\274P(\310\271D\300\037\274\202\201\370;\356\323K=\375q&=\276l\037={T1\275\365)\241\274\244\3606=!\340~\274\3220E\275\374\306 <a\306\022=0\315T\275Y\203Q9h\026\226\273\316\355\271<z/>\274\235I(;(\346\'\275\274 \311\274~\303\262<\240\272\005\275\241\210X=:\347\r=\017\204\256\274\0050y\274\337\345\"={\340\232\274\240\305\214<\026c\360<\203\265\350<\247<\344\274\303\322%\275C\r\226\273\371\326A\273\023\024\323:\033d\005=\257\201\006\274\240\277\003=\032\227,\275\014\252z\274t\034\332<f\001>=\335<\\\275u\211S=W\316\211;f\032\230<5K\010=Ai\242<\227\260\017=\3003\372<\277_\271\274\334\267;=p\331\025=\210?\250<\rUA\275\031Y\232\273\217\363\177\273>\213?\274\007\004\234\274\207\344@=E|5=\367\302x\274\353i\354<\310\037:\275\260\274\212\274j\031\r\275\236!\343<232<A\326\364<Q\235(\275\013\256\032\275\255\373\213<\372{d\274\3755R=d\341L\273\366\3674\275^i5=tj\246\274>\231c<\375\307R=gm\037=\267\251Q=\n\322>=+\245\214<\313\t<=\023\t\n\275f\331\013=|\014\222<\377\201\344\274\201\036+\275\353\277\004=\340qE\275\310\372\341<?I\377\274\221$\357\274\037\230Z=j\360\000=ZT\332\2745\223\260\274\010o\307<@\314\006;\\\303<=k\314\021=\002\313\352;\020\t$\275\206{\036\275\005\267\005<\345\270\260\274CA\374;\021A\030\275d\264\031=\222|&\275->-=\001OM\273\025\177$\275\340e\262\274\366\222K=8\036\014\275\331\031\007=\3758\255<\324\272-\274\230qU<_\226\367<\216\302\376\274\t\344\324;\224\271\013=\360\206\013\275<6@=\370\022\036=\212M|\274\341\000\177\274 \337\214;>\030\2429A3[\275\215mR<\220\375\321<x\311e<7w\031\275\263\326\023\275G\201^\274\270E\013\275^z\243<\177\351\030<;{[=Jx^<&3\322\274\272\005?\275L!\026=\373\241\341<\305\025\033=\237\002-\275g\2140\275\267:b\274\022\317\030<D\"%<\r\246\025=&CJ=!\216\363<\325\360\003\275I\332\301<\311\233\343\274\343A\036=\034\262\300\274\021\345F</>\243\274`!\031\275\343\241\312<S6[\275\r{\023=\334\345<\275HaK\2754\331#\274\r?\035\275\311<\013=\335B\000\275\036\177E=\3567\030=\311r\n\275\006\273t\274\355\022Q=n\3103=\230\226\336\274\007L\025=\331\223<=\257\254\315\274\350\022\213\274jl\371\274\202sy<\3117\263\274_a0\275\254\2220\275/\355\302\273OD\226\273\262\256?\2756\010\'\275\353\320\013<\316\272\027\273fi-\275w\303\310\274)\256\371\274\020n \275\021\035\'=H\363\274\274O\215G<\317\317j<^M\374;RJ0=6K\210;\035E(\275S7\251<\207e\267\273\207\374\212\274<\357\010=-\373\310\274\'Y\342<G(\331\274n\353<\275\007`\230:`\332\016=\252\370\027\275PpL=\005\005\224<ENV\274\200F#\274\ty\021=~\221\323\274j\201\\=$\377\013=\341\270J=9\270\277<\260\0372\275\314\247 ;t\314\374<\236\0307\275\033\234\250\274R\210\255<P\210\204<\377r\272<\270\005\013\274\267V;=\306k\202\274\030\270\026<\340U\025=W\257B=\001>\023<\255?\220\272!\254\033\274\361E\365;\344\016(=\301|\322\274 %s\274h\017;\275\336;\007;A\240~<\035\201\250<[8J\275\211=\370\2745\0058\274?_\013\275\351\202\005\274<\"\007=\021\235 =&\276\370<\017\257U\275\347\027\200<\246\354\';X\016\204\273\300\3662=\0006Q\275\325\333\270\274\244\222\007=,\2322=\374fS=\211\302\357\273\307\361\266\274\036\017T=\177\211&\275\260\022-=\366\rH\275\233\220U\275\252\0067;\204s@=\206OU\275\001\246\t\275\355\303\352;JU@\275\332\221\347\274fT}\274\261\036\\\275\n\332M=\nF?=\323\313\377\274\267\275[\275\020%.\275\253p =\207M\236<\375\337\262<*\301\310\274[a\353<\277A\001<0\300\340:\361jQ\275tS\302:\361I\031=s\201+\274;\212\227\274\316ve<\372\023\014=\226\363$\274lq\344\274\013\234\270<NkS=\035\226E\274\014\356\035<P+\225<\304\356\204<{\253 \275\340\003R=\274\340\334\274dr\323\273\330,\312\274d\r8\274[\033\026=\235p\243\274\202@\353\273\261\312\034\273\215\335\265<?\347\262<\034\374\272\274_:\013\275\253\'\266\273Z9\324\2738:\005\275\273a\211<\253\0267\275\325F2=0\236V\275\nN&\275\204B\214<6G\255<\206\342\n\275\221\367\006\275\2213\001\275\004\345\316<p1!\274\007$\317:\005\300\031=\032\370\234:\n\267\031<\036,\220\273\035\367\250<\260\226\265\273\037\377z\274\372\242\376<\335`\341;\243\002\014\275\377RQ\272\222c\036<;\2701\275\002\201T=\245oX<mK.\275\006\336I:\024e\336\274c\013\014\274\267\350\213\274\337\\\364<\024\370#;)\270I\275\005\n\205\274\177\353F<\237\371E\274\272\2233\275b\022*\275\270\023\227\274bU\350<s\257.=pII=\\\276G\275cM9=\262\364 <\217,\230\274W\'\251\274\207\\R=\"=5=\224\223\262\274=\275\327\274\032Hv<\337Ky;\304\340/\275C\013_<}|\220\274\010\254\323<rjK=\325\301\273\274y\253\270<\024\263\010\273F\tO\2758\301\203<\327\023\316\273\321G\322<\257A\034=\334X\027=\351x\301<\226%9=\235\347\326\273\230\305\211\274\200\031%\274\317YT;l\025\203<\224\367\354\274~\305.=\'3\013\275\323\237/\275\277\315\211;\217\362@\275\351\013\025\275\244{a;H>\371<\303\345\r\273\374Y\245\274\322\035E\275(\003\313;4\010\331<\365\271\351\273\205(\"=5\341\221<\254\276v\272\325F#\274\367\230\001\275\005\313\013\275\366\2671=\361\017.\275\247\267)\275\210\022(\272\304\272,\275J]\210\274\r\306$\2758\251\233<\331\261X\274\235\262\033=\212MB\275\346\310<\275`\013\327;\223\364\240\274\254!\343\274\277-\n\275\341\350\257\274\010\212[\274\242\250\376;#\2300\274\376\344U\275\277\300\363\274\371\037\032\274\261\330\0179\274?\020\275\014@\323<\023\206\017=:\2214\275\222\032\362\273UP\323\274J\035\'\2743\250,=\327~Q=\346\204P\2752-9==\3520\273<\335;\275x\316J\274t\370\303\274\203b\375\272\213\215\'=#\257\357<\247\302/<\232KS\275\210 \035\275\251\215\372\274T\261\037=\206\326\221<xi\006=1!4\274\216\022\317\274\377+\373\274\205\021\353\274\023\017\004\273R\217Z=p\351\036=\316{\025<\205\347\357<\214-\250<\2112\327\273\374o\215\273\023\351\350\274H(\263\273\357\2730<\217\321\363\274\335\375.\275>\212\215\274{\345\\;\2320L\275y<\002=\316\231\276:|\002\004\275;#/;\3267\371\274R\342w\274C\021+\275\324Y\246\274\323\262\023\275c(7=An\022\275\224?\016=\342\261Z=\301\262\341; \022\037\275\030\210\332\274\227 \033=$\336\036\275\230X>\273$\340C=\337\374J=\257.J\275\376{\366<\352\223S=_-\025<\203\260,\274IPF\275O\264J\275\372\322\017<s\246!\275DPU\275+Q\325\274\003_\010\275-\327}<\332\351\253\273\254\267,\275F/!<\307\201V=\312\216\016\274\201G\365<\273n\273\274\337\2452\275W\230\222<\242\036\016<3\337l\274L\230\345\273\2414\376\274-Y\303;(\301\031=:\307\247\274Q\006(=\377\0202\275^\346Y\2750@\033\275i\036\014\275\337G\251\274\303V\026\274x\263\325\274\000\277\303<\003\325\253<\367\212a<c\276\341\274h\'Q=\275\275\253;\030\243J=\332\325\235<\016\245.;\207\263\226<j{\270<\216C8=\307N\220;\272|Z\275p%\023=(D>\275\226\347);\346!\235\274xn0<\225ZN\274\224\037\345\274\224\321\007=\177Q\226\274\021\250\037=8\251>\275)\252\302;\235\273H\275\t\220\263\274\225A.\275d\370\322\274\017\257\375:\343\365=\275})?\275k\344\007\275\350\250\243\274\361}I=^\r\327\274\'\027*\275Z=\016\274\034\362\207<!\014K\275\310B5<N\002\201\274\0138m\274\311\363Y=!.\313\273\250\3755\275\2777\214:Lg\226<z\'\357<\263\271\020\275\\L\034;\030\256-\275+\374O=\373T\'\273\364\300\221\2746U\203\2746\371=\275Y\020\331\2742\252\341<4\253S\275\330\022\303<\361\333_<\245\223\023\274\334\241\"\275|\357&\275\233\\L=\342\r8\274J*\331\274\365\304\025=\374\226\236<w\233R\274\r,\337;\215l!=dfJ\275\206o\267<\273\031\330\271\275l\034\274\375\367)=]\360?=%\010\261<\331d\003\273\1777X=\001W\006\275\014m\235\274\343\277m\273\372\257\255\274D+\260\274\344\337>\275\035\204m\273\363\300\241\274\371\340b\274\2650G=\336\034\327<\333\341\353<\236QE=\031>3\275q\335(\273\210&\321\274\362#\245\274<\274\211\274\027.5=\024\217>=O\3057=\265\207\217<E\377-=v\223\321\274\371\3250=\341\004\225\274B]\005=\264](=f\254\\\273\275\335\347;\231I\302\2721\367S\275\r\332\344\274\274\216>\275\211\256[=3`!=W\201\334\274\235\371\032\275ZE2\275O\344?\275\250\037\375\274\211\177\232\274\355\014P\275\223\264\375<\303zY=\334\271\204\274\357\371\215\274d\317I=\221\222\366\274\017P\366<(\026?=\304n@\275\010\233r<\371\237\017\275^4\304\274\305X\350;\370\355t<\227@:\275p-<\274R\214\376<\0235-\275\230\270\256<q(\353\274\366\356\213<\356p\373\274\252\200\217\274\327R\362\274\250;\014\275t1%=K\3338=\361\263Z9T\221\365<\024\354S\275\202DX=,i7\275$\375\204\274\3710\353\274\037h\024<\004;\027=\307y_;\275\211X\274\014\310@\275CHL=\277d\356<Ga\373\274E\377>\275;\033\004<\3734K\275\2279\202;y\367\313\274\223J\222\2745-+=m*\230;_\017\203:^\242 =\t\3560=\267<\300\273\023s\320\274Il\355:\037\016\360<\366>\010=\306\252\020=\347\026\362<K]\206\274\263\241\215\274\374_\'\275%3\035=I\267\013<\232a$<\326A\010\2756\356\004\275\242\016\310<\255\'8=l\227K=\207\213\272<_\036O\275J%\260\274\307[1=8\251\344\274\027\262<\275R\200$=\301\232\021<zM\023=<\252(\275\272@\357<h\013\310\273\367y\241:\003\226\257;\'\032&=\210]\306<\201\300T\275\247\377V\275\000\353A=\207\314\007<\325\317R<\031\336H\275,\022R=(\217\264<]\206\306\274\273\2668\272&\334\030\275\355i\354;a@w\272<\0173=R\331F\275C\314\026=q\311>=\374\210\021\275<p\372<\260\362\017\275\014\374P=\204#\375\274\033\177\242<\334sA=\342(\014\275\371/#=\200\211\237<\252E[=\331\313\206\274\226\3413:\037\300\271<\366*k<s\251T\273\355\322\263\274\330R\337\273\022km<\314k\321\274\354\304\243\274\203\260\312<sc\303\274\324\2206\275\316@Y\275\352\216\004=7\037\277\274c\231\270<\313\367n<t\276\315\274pnX\275\013\363V\274\374z\027=\213\271\022\273:\016\252\274\255\013\345\274\274\270D\274\272\212P=\266\022\n\275\004%6=\341 B\275\356\025.=u\321\247<\017\240Z=\2207\265<\336//=9\233\364<SQ\336<\237@P\275\006\3504<6\036\326;v\375R\275SE)\275\333\225%\275w\355Z\274\262\342\025=Qr\203<\266\222M\275\312\362\327\273\001R(<\300J\272<A\266\370<\300\353N\275(\204e<\3229\000=w>4\275\244\325\236<\221\212\212\273&\017\033<~\235O=\264F\330<\037\221L\2742GK=\354\257\226\274:\361e;\375\036(\274\025\313;\275!-\260\2740\227\316\274R\215P<\250\340M=C\317\226\274\213<\325<|B%<+h\234\271\236\007N\275T\236o<h\331\031=]CD\275\224\0347=D\227R<2\261\307\274?\346\026\275Mn\"=\240\315/<9\231\014=\225OJ\275\336\223\'\275\034\314\313\274f\025K<\207\026S\274\270\366\n;d\356\335\274j\321<;\210\257\212\273\326\247\t=Q\260&=\273\306.\272\200\376V\275F\305F=\354\227u\273\366\374\221;\007Iv<u\207\375\274\024\305&\275\353`\023=\277\232K=?\033\260\274\013\257$=^\345Z\275\210F\236<\003\220K\275vt\353\274\234\2513\275f02\275\373lh;\177\211c\274\016a7\275bl\211;\276a$<\241\\o<\323}A\275v\226\251\274\214\331\005=q\274\025\275K\374\223<\314\026\206\273\204\346\261;\267\037\351<\312\327==\371\373\306\270\037\327\022=\000\357\032=\245\230\350<|\016\302\274\345\226D\275\315\226\210\274z$2\274j\025\027=i\204@\274\206wC\275\211\3145=?>\263:\354\342\340\274\035\274\307<\270\333\305<\212\016\315\2740&\"=\233M%9\344-\005=\r\327&=.\243\177<?\362\260<4F\235<d\005\242\274 l,\275H\240\226;Kl\022=q6)\274\243\265\320\274\3336Z\275\361\234\000=\263RB=I\346&=JO3\275\007<P\275\001\243\260<\300\274\273\274q\350\327<^\026T\275\344\266\262<4[:=\306\344Y=\370\367\362;\204t\034=%\227\241<_3A\275\320bV<\'2(\275\203\377C<L\374\257:\274\\\361;p&\347\2744\340:=\033\251\032=\370\241\213\273\242+\021\275\203\361\010\275X\253\235</\271\000=:\242\361<\360\0366\275\204\336\000\275Z\304\t=\372(\311\274\206r\244;\313\250\266<\335\337U=j9\024\274\217v\376\273:*\001\275)%\251\274\215*\315<\030\234f\274\002D>\275\215\235\365\273\356w\275\274\213\321A\274\257y\025=f\2540\275\350@\326\274$\213%=&\017\244<\330\304|<\215\354\003\275\276\310$\275\375\333I\275|\336\310\274Fs\302\271o\034\320\274\325\n:\275\341y\214\274B\366j\274\005\350\001\275\031`s\2745&f\273gNG;V\tP=\331.\352\274\214\223\030\275\346\334\337\274\305\356\027\275P\320/=\343\302\275<\006A\021=\3002:<j\023\031=n\024\005<\026\315F\275\235\235Y=P\364^<\202{\007=0\242|9I\351\223\274<\304\257\274%\321M=\022gC\275\350h\001<\'\346$\274\372pL=P\211\n\275\207\t\023\275\251\231@=\2207h\274\001\013\303\273\363\005\344<\351h\347<\222\374@=S>\027\275\273\346j;\201FR=\225\334\261\273a]\237;\213\371\367<\350]:=5\374\034\275\254\027\234;\225\203\214<\262\364\024<\226\301\342\273\001Q\005=\223\037.\275\300H%\273m\300\314\274\362\213^\274\025*J=\022q8\275\260+\234<\365\222\\\275\362\374\300<\376\211\351\272\326g\023\275b/Z\275P\376\002\275~\221M=\267\2435;3o\373<\332?\030\274\266t\345<\377F\301\274\340\336)<P\266\366\274\330W\024=C5Z<\2607\356<\345\235\034\275\202$\320<\340UB\275\001\233\212<\356\211%=o2\025<x\202\211<\226@9\275+Q\224<\\\024\321\274\301\'\215\270\35622=\n\344\262\273\242\270\030=`\264\320\274C\325\021=\335\313\255<\254\331X=\2022U\274\007(\"=\027t\252\274\303\221Z=\230\304\344<\"\201&\275\3564\346\274_L\237\274\253\2042\2733\027s<\261\207M\274*\204W\275\304\367D\274\034c\275\274\332b\304<g\261C\275\334\241x\274\036\227\247<=o`<F^m\274\362&\225\273\265\014\033\275\263\346R\273\256\016c<\365\247\004=\267\203\210\274I\371H\275\t\237s;\252\273\036\275\006\310\233<\324\236\353<\010\333\254<\332\210\204<\313HB\275<ho<8(\260\272\005~Q\275\2356D\274\343\234\016=\001\"\307<\336\301\234<\264\360\010=\306OW=w\036\362\274<\212\273\274\225G\210\274\264\305\324<\t2k\274R\2443\274\306uF\274~\202\377\273C\320\222\274n\2576\275\235\254\034=\231\022\305<$sH\273y\037\315<e1\317<\205\334\010=D/\274<\030!\314\274\204\350\267;\330\373\336\273.I\262<,\221\240\274,\340\200;|\3050\275w1J=\265\233z\274\325O4\275%A\375\274\302\277\275<\025\260H=\240\010O=\037\300\370<\032mR=\210:W=e \311<\354\024\316\274~\265\";\370\255Y<5w\250;\353\255\341<\2033\265\274R\033\215<3m/\275\2533\204\274@\274\013\273\365\225\221;\337\014\272\274\350\231D\273\226\000\245<)\2571=E\240P=$\300k\273\276V\027\275;\337U\275\245)\277<\217/\035=\257\223K=+\345\372\273d(\261\274|jM\275\014\253 \275\360\345p\274\357\202\017\275qDI\272\302I\257\274\262W\217;\025=9\274\010v\210\274\337\010\033=\030\317\032\274N\252\203<\177v\361\274\006\013\314<V\262\254<\212d\200<\2021=\274\0255\231;\312\003-<\306\333\312\274(\0070=\367\345\203<\202\243W\275@\354\026=\264\0059<\357\3550\275\0337\214\274\202\036\334\273\255j\306<\004\210\311\273\'q\354<\271\361\252<\304\2268\275\216M\026<\001&\254\274\305\262T\275D\201\270\274L\332\371\274\241\034[=\336w(\275\240x0\275\'\273\274\274\301)|\274\2678U=\237_\030\274g\246\315\2728\225\277\274\355?V;b\262F\274PQ\240<@\314\236\274/\207\325\274a\211C\275\344]\227\274\'4\244<mJT<h\234\260<5\347+\274\252\271\207\274\010\220A=\374\274\317<[\2546\275\337\265\017<\307&\036=\333\001\257<\260\006V=\177GH\275wk\332<\002\264\031\274D\207\373;\354\240\336;\016,\n\275\374\2530=\376\373+\274\221\014\305<p \020=\017\034P\275\334\311b<\233a\005\275I\243&=Mj[\275hm1=\336\302==9>\355<\315\311\315\273$\365\236\274(l/=\r~\213<`\254\301:o\312\203\274w\335\006=\335\230q\274\017g\206<\256\261\342<NM\271\274\251\262Y\275\223]\t\274\311\'\370<&\270\017=\017\025\334\273\316\211*\273\373M\274<O\216>\275@\035\036\274\226b\016\274h\006@=\222\240\010\275h\325\365\272Wd\357\274\306\254\026=\3275D\274\300 \022\275\271\257\200<\211ui<\'H\\\275\256-;=)\246t\274\304I\366<\334\316\264\274u\365+=\037\2762=o\327X\2754\255\304<\276\324G\275}l\315\274!\013\346<qs\214\274\230\276V=`J3=\210\365\204<;\036\302\274v\346\300\274}\016\233\274]\034=\275X\214\276\274\001\264C=P\224\007\275K$\236<\334\023\014\273\021u\t=\206O\033\275\210h\236<\204\2167\275E\270\214<\217{\035\275\005R\362\274\302f\240<q\275\r=\014\"!\275\313\007\304<\025m\'<.N\333;\256\334\007=\330<\354<0~L=\313%\247\2747\337\303\273\313\213\233;7!\202<\257\277\363\274+$f\274v\014\203\274\317] =\3463\r\275J;\252;\203\352\032\274\2677\275;\037\035I<G_\233\274\210\021\212<\226\024\334\273\020A/\275\324\007\366\274\267~\032\275l\2430\275\027\373(;\206\022[<\025\272\342\274\243q7\275\014\351s<\340\216)=\016\nT=6\372\036=\364\304\265:V{Y\274\263y\370<qQe<\010-\016=\024\216\n\275\341\230z:\351\tV\274\340|&=\006\241\220\274;\010\320<>\271\367<\314\340\307\274y\221\010\275=\343\363\274\300K\250<i\243!\275j\016>=\037\323\036\275\013>Y\2757|\003;\321\'\035=zyR<\206\226\250\2723\223\226\271\324\334\037=~c\242;\313\0162=|\377;\275N\0244=\240]\220\273\277\211\020;\331\301\253\274\207\036E=F|\032\275\330\205/\275\014\333Y;r\031\\\275\020\222:=\246\t\340<%[^;\206C\006=U\303N\274\247\327\265\274\275C\357<B\355\257\274 \313:\275#KA\275$\001\262\274\235\264\326<V\352\230<QYF\275bQ\361\273XMJ\275e\\\302:\000\375p<\311_\202\274\007JU\273\020\274\302\274XS7\275\201\025\020\275k\362\002=LTL=fr\'=\3034n;\330\026\017:\003\002\350\274m>Z\275\014\327.\275\274\360\375\274\207!\013\275\341\321\014\275\3109\306\274;\025\013=\"\234?=\014\300\014=\004\336\262<;\373!==\334\276<\307\3357\2757\200\311\274\370rt\272F\374\207:\346\231\005\273\362*\255<c\213\355\274\255VZ;\350\223\357;\031\335$\275\006\226\023\275\222If<}\251\211\274C\240w<\322\331 \271\205a\000=\356\347\025\275l\205\t\275\254\303\362<\027K\311<\025\231\314\274.J\031\275\006\302\237<\257\313\305<\244\2378=(\365#\274E\010\024=\036qS=\302{+<\203<m\274\373#\276;d\262\233<2\247H=\353\336*\275*\033\001=\017\350l\273\017\341+\275G\217?\274\277\335\031;\211\204,<_\222\343<\321\356\265<\313\002\220<\312\307\332<\227\270<=\210j\311\273\257\277\270<\331\302\312<\304q\336\274\226%B=\002\301\226<\272_)\275\2335V\275\240\304\031=Q\332\223<\342\202\223:\0349\221<\315\022%\274#\270\364<\331\236|\274=\247%=\323\202\334\273\310#\354<6\024-=\257\006\334\274\230V\215<7zL=z%\031\274\023/B=\216\007I=\246\247\352\273I\261\030=\311\202\221:\020\305\206<\3342>\275\326\235?=\256\211\353\274\235\034\226<\235\005$\275B\214\247<\302c\n=&\225\336\274a\372)\275\264B\357\274\r8\224\274+\260p\274t\177\261\272\031\333,\275hy\222\274;S\013=S\n\241<A\242S=\036nH\275\211\344\003=\367u\300\274\351G5=\023p\241<&K\274\274\213JG\274\323\255\361\274uP\301:\373\257D=\344\320\n\275\010\367_<\252\376K=^\035x;\374c3\275 \246W=X\033\020\275h\265=\275\211y\222<\241V\326<kZt;\003uy\274\0339D\273\332\262\353;5a\032<\213\233\005\275\374/\365\274\215\357!=\303\257H:1\214\225\272\326@\277<\"\340\002\275M\003\267\274\245\224\250;\301\2165=\323.v<\300\313\001\274\241 N\275x\3661\275k2X\275(\2763<\231\322\030\275\177\010\353\273\257\253p\272#\0173=\"\010\253\274\376\272U\275\240\300\240<W\3574\275tt\"=~\376\202<X\017\004=exV=T\244\325\274?\211z;$\341\"=Z\3774\275\363\035\"\275\335\202\2227?\230*\275\344\370\'=mG8\275\'\253\244;\025\024\t\275T\014\345;Uy\317<\347\232\237\274tJ[\275\314RT=\257\"|;z\230\013\275AQN=\017\r\372\272\036\273\201\272\375\n\177\274\310_S\275E\331\361<\243>\252;6\342\277;\252N;\274\007\322\274\274*\273\224;>\351\254\274\331\316\005=Y\210\035\275 L<\274\332p\321<f7K\275m)\214<9\226\021=L\306\366<\224\337:=C)\000;\003\376\277\274\272j?=\204\022,\275?\'\273\274\3368\242\274\223L\014\275Z\031V\275\246\246Z\275y?\370:\353\005\301\274\252\342\010=\323\307\266\272\303=O\275:f\017\273\205\204Q\2750G\013\274\346Q3\275]r4=z\'\354;\344\3560\275S\"*<\200\014\272<\343\036\2618\023\323\201;!\301\n\274\004Ln<%\347\255<\323\020 <\rv)\275\232-\n\275j\276\013=Q\364\377;\024@\027=\314b\266<5\306\373<#\332\323:\014M\220\273\205\325\375\274\340\337S\275\212\261N\275\221\357V<\030}\010\274\013\370\034<lc\222\273\251qi;\302\330\304<9\316\220<\350\017D\275\225\217%<\320\311:\274\247~$\275\r\301\303<g\351\262\273q\004U\275L|\'=\367\322\246\274\177px:T\304\376<s/\370\274\3711M=\376\t\"=:\274\366\274\022b[\275\253G@;I\202\354\274\331A4<\321v\230\273IU\326\274\201S\035\275\316y=\275\022\003\021\275\256\345\246\274uU1\275\nR5=\014\'\201\274\263\364:=l\245\027=\223\027\032\274u\323\005=\242J\332:\211\211B\274\300\341\365<{!\247\274P\321<=\315t\244<\332\037J=\t\323\023<\204a\207<\355%\255\272?\220\013:<\214I=C\3114=\313\213C\275\325\350\007\275\220\201r\274&C\276<\344\013\207\274,\021H=,\301)\275\024\217b\274\321\334\267<\023\224A\274\022\251\231<G=T<]\313*\275M\333\223\274+\341\205<o\364F=\244w\300\274\366\230\372;\331\371\t=GH\315\273\020\204U\275n\354\211;\267\2322<>d\250<\315\240\260\274\244\213V\275\200\'R=\272\350\302\274\361`,\275\323\324-:\357\206F\274&\3554;\327\236\266\273C\003O\275\270\006\005<a{<\2759e><\357z\232\274\205\377\217<%F\310<N\334\204\274R\316\236<\210\225D=\360\210\310<RG\013\273\331PX=o\206O<\017\264\023=U\364\332:mY\310<.8C=\262\002\022\2753^\030\2759o\r=\272\223\025\275\236F\364\274n7\004=:2$<\366=R=\014\317\327:\311\260S=\033\\\343\274gc\313\274F\275C=\307\323Q\274\342t%\274\366\363\027\275\023\r\323\272C\220\362\273XN1=\315\225I\275-\3656=\250}7\275VmU=&\275\345<\205\214B\275@kT\273\364\320\304\274\263xS\274\373\252H=\350CV=w\210+\2756fz\274\212\222o<C\253\245\272\274\353\273;\360\344\035=\263k\013=\024q\014\274\0162\007=f\203/<\033\225\220\274zt5\275/L\365<\341#\331\274\3251@=u7`;\334\244\002<\016\005\273<\245\351\330;\344\272\206<\001w\314<\226\224\307<\2249\255<\306\'N\274\240Fy\274\251\331\036\275\000A\037\275\t\331\017=U\t\312<\233\335(\275\337\254\300<B\264\001\275\226QJ\2754\357,\274\211iJ\2753\274\n=s\214$\274\270\307\014\275\366\314\332\274\303\276\242\273\233\014\233\272\305\3123=\222`I\275ku\352<\364:[<e\241P=\243o/<\354\020\021\275\3374w<p\351\362\273\270\325\313\273\013?\333<\267\371\347<J\377\215\274a\362\020\275\367\022\023\275?\0076;\001E\355\274\331\317\202\274X\0037\275\327s\372<T\242\037=k\202.=X\372\322<38\304\274\037O\336<\\S\364:\342_\353<\243\350\251\2747\"\004=K\314\316<\006\3330\275~\271\030=\007\003\242<\234DL=\363PV=\262m\245\2731g\032\275\t\014\027<\033\303\376<T\320\t=7d\233<=\251\"\275\001<\002\274\305\0210=\034\361;=\334\235+;Y\315N=\004\306O\275\314\324u\274\301g\372<V\272\236<\242\006\324<\203\000\244\274\002[K=\216c9=\351\326H\275\251\234\240<F\177I=\253\234\201\274g\004X\273/\227\024=e\363\016=\356(\241;\342\253w\271\255\331\365<\177\033j<Z>\230\274#}\022=\n!w\274\303*\226\274O\376:=\263\301\343\274\314~\\\275\3535B=\245FS=n[\005=\352\365\004\275\235FV\275\364\320\315\2721\251\314\272\230\352N=@\277\000\274\006\272\346\274\363h\214\274\023\203\313\274\333\217\002\275\346\033\261<\323\213\030=:\374_\273V\311\350\274J\302P\275\204\325:<\236\031\313<;\370\364<\2337?=bN\037\271G\251\204\274\241\203\217\274\254\375;<\200\270(\275\252\337\372<\023\232\"\275\232\0023;\251\252I=}\371\230<Q\223\314<|\273\367;\301\013~\274\0021\013=\251+\204:\326S\025\274\037)&=7\2648\275\264\376\033=\330T\215\274\3352K=\227\360U=\364Q\315<\312\3376\275~pD\275\316\000\373<\250\037\270\273r\364\236<\035)W\275\346Z\247;\030\236A\275r%4\275\234\273L=\353`I=\232r\227<\336\335};7\374\214\273\250\352\207\274\364\204\206<\311V\263<\235\221\306<\2548R={\374\300\273\002\026\027=!#X\275=\035\334<\277B!\275\'$\331<\246\373\317\274\320\236\003\275R~\246\272\307y\260\274\230\367N=\263p\361\274\272\340\021<\221\210,=\022\365\021=\217q \275\035\213\027\275\256\210X=\031S\007\275T\271\232<J$#=\317\013>=\206DJ=\214_\320<\3766(=\276VS\275\360\2202\275K\335 \275{\351/\275M\277\256\274C\321)\275\224\3508=\342\222\331<\356\366\255<\3564\364;\214\335\226\271\256\317\266\273\336FF=\315W\321\274O\307N\275\306y\205\272\236\3556=}|\"=\336\"\007\275\314l\210\274\235\312\005\274\254\312H<\202\2301\275D\276\n=\021\031?<*7\355<\337\" \275UFC=\204\350\023\274\374!8=sYL=\242\306\245<\357\0377\275\277\020\031=\205\347\320<\257u\345\274PL\226<\221\233Q=\030\206b:\365\022H<\202\304J=\361$1=\273\264\337<\301\312~;|\254J=<~\016=\2676H\275\266L\270\274\315\010\032=\211b>=A\323\302\274jq\206<\2032\244\274YK\030=XwL\275Z\371%=Kv\004;oYt: F\3057\026\3343\275\343|\321\274\266\322C\275o\005\030\275\232,\005\275BM\335<R\023\r=\275\306\274\272b\3019=\177\322G=\033)\324;&\207\276;`\372W\275\315\021X=\236[\302:\3452\263\274:\026\205\274.QZ\275\270\217\360\274\273\306\r\275sB\333\274\331\344\342\273\341\323>\275\345\270\376<s\0137\273\255\315z<U\2678\274\244=\205\274\313\247r<\035\306\322\272\214\222+=Q\351%\275z8\004\275\227\311\310\274$o\t<\326\2513\274\302\373U\275\013\356&<tkk\273<\"\017\275n\251\353\273<\337%\273#\0250=3\370\030\274b\351U\275\345\022%=r\010\352\273\302\373\304\2746C\363\274\277\236\257<\306\267=\275\330\272\365<A\022z<P\263\014<\2016\355<~s\3609\211jZ<LA\327\274\021F\007\275\000g\023\275S\235O\275zx\251<\251\353C=\252\3037<\372\250;\275\310D\355<\373\250\001\275\206mW=\315\001C\275=\021\372<z\365\330\272\205Y0\274\035P\025\275\013\302\202\274u\234\206;\000\350D\2750X6\275\207\342\002\275\277\034\321:\242\376I\275[\256\246\274\3178\343\273v\"\351\2741W\010\274\254\363\005\275\317\006\333<\317W\245<\306\334\255\274\342\374:\2750\375?\273d\242-=C\325\225<\331\025\251\274l\017\225\274u\211\341\273\006\247@<\317\343\007\275\301\213\014=\366\003\373<qC^;\304\327\355<\'\307\305\274\241\360I=N\245,<\0338\037=\202!\217<\013\375\273\274<\033<\273\014\201&\275Bu ;{7B=\250\363|<\024\213\001\275+\323\350\274\337A(=\\\2352\275\253\033\233<\030\336\235\274\335\335\224;F\314\245<\205\022\t=J\036\230<.\003-\275ItX\274e\2629<r\274\231\274*\034\355\274\270\334L<}`\374<~n\362<\232\330\350<\330\227\n\275\\\367K\275\233\014\016\2754\'\375\274\016\022\375<\344\321\021\275\325\3046\274~\200.=\221\257t\274\267\277\321\274OqX\275\220\356\362<\006\372%\275nqN\275|\347\021\275_6\003\274\220\311\004\274\334 \344;e\'M=s\347\007\275\242(\216\274\223\353\307\274\026T\377\273\374Q\014\275Ls\325\274\264\001l<\222\360\024\275(o\372<\000Z\246\274\004\300H=a5\005=\355`:=\003\217M=\266\345\036=\006\315\300<+?L=\374j\301<E5\017;sp\024=K\247\"=\310\270\264\274I\245\353<\305\302\354;\242\311\000=?I\004;\363\024\336\273d\237\367\273\321\377&=\003DF=\035\3518=\316\\\'=QY\'=s\242e\272\342\312*=B\273N\275\275\215\264<\322[\351\274m\034\021\274\013\3764=g\266\031</\013\\\275\351\234\355<\203f\347<\323\306\024\275K\036\026\274\312rT\275\342v\356\274\001M*\275\363XB=7+\003=h\032g<\336\342\225<.EH\275\033VL=\344#v\274\246\212r\2740P\336\274O\360\035\274\303\251\017\275\221#\006\275\222Q\327\274\267\035\262<8\346Q=T`\350\273\023\362\204;K\347[=U3?\275yq\000=\206I\221<<\356\032=;OZ=+\277U\274\336\203\340\274\247\235\244\272\222\257*=\332])\275n?\032\275*G\306\274\302~\371<qS\313\274\321\\,\274}\237\177<\214\277\033=\215\246\341<\"\235A=y\000?<}6\243\274\235\305W\275\t\234\001\275\177j\224<\351\220\r\275\\\221\321;\022kp<\260\217\017<&\034\236\274\201=\"=\204\242\017=n\306 \275\252\336\237\274\334\367;\274\211\240\235<.\027\177\274p\301\232<\3512#=\224e\311\274T7\035=\013!\257:X0\255\273\375:K<\200\262\234\274\212p\005=\'\005!;/\356\236<\335GC<\342\212.=Q~\r\274w\346\366<\240\242\252<q0\037=c\223\036=:\255\027<]\r\361\274\316\220D;5uQ\275\236\004\236<\236\177*=\r~[\275\346g\363<,XW\2755|9=\267\212\026=\220l\340\274\013~\013=\363\3559=\324\277E\275\261\2764\275?\205\022\274b\310K\275bM\026=\361\211\030=!F[==\207K=\235\274\247<\205\037P\274L3c<\0348\334<\257\244/<\330\252?=\201\342\037\275\236\022#<p\177\375\274$\335\253\274\312\r\320<O\025\r=\233\271\371<\244\377\025\275\322\2045=\210\214K=?\032\317<\313\200\266\274\315\310p<\374\230\025\275\326U\210\274\362C\346\274\332/\201;\000]\241\274\343\235<=\334\3605\273\256\332-=\325i\003=\014\230c\274Z\210\016\275\361AQ;\250\230S\275\237\001Q\275\")\037<\267O/<\273\014\377\274+?\257\274f\203D=U\217E\275\201\277\346\274\326\374\303\274\014\037Y\275+\316\246<;7\312;A\225\\=s\347);\303w\223<\253\0329=V\265\004\275\305\\\017=\224g\036\275G\376g<\345\020\200<\210^\327<\350\275:\275H\031\277\273q(\303;\007\356\275<\240k\r=\327m6\275(\014E\275\244\274\366\273m\343\2159\3579\337\274\302\376R<\246\217\316<O\0202\275\'\370,=\235\220<=\266\243\233\272\0231&\272\375~*=q\325\351\273k\320R=WS\356<\212\372\217:\253\367\264\274\001\213I=\006\331\026<\026jN<[.O\275\346)E\274\271`:=\237\321\006\275\342\277\333\274X_\205\274\340\177k<&S\221<x\202 :D3\363<4\360\270\274\024E\023\272\324\352\217\272\030}-\274\347\202\010=\346\315-\275\\\203\036\275C\026\326\274z@\345\274g%d\273\357\327\333\274\0178A=\325\032\n\275\006R\340<N\005\354\274\361\303\322<=\231t\274+4\222<\255\037\272\274\213\372?=3\007J\274\246;0\275\007\010\022\273\332\253K::E\230<\333K\357\274\363ks\274\3425\333<\210\342\021\275\244s+\274\252\346U\275\"`\005\275\233\235\'=\033O(==\207\276<\333\001W=\225K=\275\273\330G\275G9P\275\246\250\275<\207\016\204;\312\234(\275\303\203\211<dC\230:\036\231\010=\370\377\257\274Y\201V\274\262\260\342;\245\223#\275\021\255\355\274t\344\213<\241\310%=\230\357\321<\226\375\302\2743\343\034=;\237?\275\342[w\274vQo;I\332\235<\371\014*=Dy\237\274\200\002\307\274t\306+\275\225\026(=\013W\351<\233\027\247;\014P\333;4O\375<ad\202\274Q\257==\374tY\275\363\272\316\274\n\304\222\2743\245\034=\335a\321\272\234\202[;\373|R\275\241\310#<\027\366\014\275$\036\205<\303\333\035\275\0309>\275\345\354%\275\340\226\252;\004\354\353\274\271\275\024\275\020+\001\275\343C\030<\340\346\027\275\3437\000=\323\253\253;\n\257\006\275\350\031h\274\221\205%\272G\331_<o\274\010<\235\264\034<(\330\214\274\250\323\233<2\002\000\273\275\214N\275\350\246\203\274\275\222\210\274\013\236J=M\201L<\210\211\224<\0163\005<\227rg\274d\377\320<l{\004=\270>\372\274\r\223\\<\300\327%\275\005\225/=\303RT\275\027\247\230\274\230\376\022=\311(\223\274\352\036U\274\007\233H=\3732\234\274\214\037J<[\022\336<\266\250[\274\016l\010\275\303\277)\275o\341\330\274O\220.<\027\275i\274\247\350]\274\2230\001\274(\365\230\274\212\225F=\260\217E\275W.\036={\034\247<\243\262\372\274N\205\177<l7\024\275\346\257\367<w\357\356\274\372\262>=ha\t\275\014U\213\2749\361\230<@1A=\033\314\003\275H\312\016=\r\215+\275\211\274\266\274_\236h\274Ha?=\340\343\263\274SK;\275k\343\t={A\270\274?\377\366:\377|\024\275\305\271\314;\321N\030\274l\375\311\274\205T\002<\200\213\304\273\"h%=\232\020\231\274\335<\026\275vK\222;\272\252\345\272o_d\273?\217\346\274\266\213\272;n\336,\275}1L=\271\350#=q\364\177</\307\337\272\347\024\304;\242\036\266<N\351T=M\026\204<\332\205\314\273\3515\275<8\334U;t8_\274\031\312\250\274\354\316\t\275\306\210G=\tm\320<\303\333:\275zb,<\345u\277\274\220\177\242;\334\212\220:\217Z\036\275\242\372D\271\354\314@\275\003\210|;\260\334\260;\031*\261<c(\r<\324\377)=\256!9\275D\345\372\274q\361\326<\232E\032==\256\010\2741T\000\274\302?\200\274Q\325\362<L\366\322\274V\027D=\2277-\275\343 \026\274\204\324\256\274r\253\333<.WO\275\tg\325\274\274\036B\275%\213\310\274]\241\207<E\324\026=\010\256>\275\215J\n:\310\240\210<\n\322\213\274\020k\254\274\225\322\373\273fz\374\273r\2713=\360_\256\274\354z\033\275:\214\022\274\n\365\376\274-\366L\275\215I\303\272\313\304G\275b\253#\275\357\236\327\274\027\010\262;`\274\344\273)\013\253<\221F\032=\330lV=\221\260\370:Un\026\275Zm\366\274Uqk;&oV\274\371\361@\275\221L@<-2[\275:W\311\274\3476\355\274X>\025=~\273\021\275\377\215\314<\264\003\013\275&N+<*k\352<\371\323G\275\215\331\013\274\275*\033\2759\'\003\274\031J\357<\204\216\372\273\255\300\220<~\326!=\356\3242=\207\237x\2740I1\275h\346E=w\372\307:\2336S\274\"\336\214\273\215\035\357;w\033\373\274&\0308\275E.\372<Lk\227\274]$==\005\366x;@\213\372\273\254[\234\273\322\260!\275\345\351\342\272:~\231<!EH\275\213\2414\275f\310\001\274o\370<\275\334\223\256\274\250\340A\275\336\331\025=\016\305\253\274\232\032\374;\021t=\273\310\216\2369\020\332!=h\251T;\340\276\341;\272k\300\274\331\360\371<[I\332<\003@Z\275\026\373\324\273g\277?=\305\215B<\200\305E<A(\244<\277W\356\274a\030\217;\202\020\327<:-u;\200\n\002=_v\305<i\334\343\274\"\340j<\312_\366;S]%\274\325\024\007\275!9\007=L\351\320\274<\354\014\275\027\232\n\275\252\3042<&\330\340\274)\005\324;\215n\340<v\252\277\274\014\211\270\274\326\306-\275\360\202\025\274\030,\250\274\317\215\026=\200\200\241<9\000\211\274\021\033d\273{\271U\275\260p3;/]?=s\274=\274\255\227N\275\210\177\334\274\353\340\221<\210\354P\275\021\221\037\275\250\335\'=\366\010M;\337\273==\245$\206\273i\367d<e$o\274*\375%=\013\251\'\275U\251\303<\006+\346\274\031.\242<r\'\006<\001.\\\2755\341\220\267\301h\375<C\350/=\006\203\261\274\226\230\315\273\345\335\355<A\371\277<@\317\025=\201%\355<\000\243\221\273U\024N\275\001\240\277\274\306~\333;u\006X;\307c\302<\341\010\220\273\251J\232:\307\301K<W\361=\275:\227\310\271\303\224\006=\251\023J\275\320\245\375<\337S{<\2574\004\272\267\031\325<\277\306\200\274\202>U\275YoL<A\221\330<\257\323\254<i\254J\275\216\251\032;Y\211\024\275Q\364;\275p\273\225<My.==k\301\2738\354\260\273\220\320\030\273\357\305?\275\0073\332\274\311\221f<i\330\000\275Q\312\275\273\032#\354\273\210\201)<\016K\264<\323\364/\274\247\353P\275\276\253\226\274U\312\000\275\211xM<\001\222\322\274\225\300\017\275\373\335\r=\212G\230\274U\202}\274Q\261$=\353\007\024\275)\346\363\274x\372+\273\345\316\037\275\251\034\006<i\307\010\275\204)\263<=\310\277\274\037_\025\274.\235\254<\227!\005\274\372\240\005<\020O\252<\207?\306\273\344\260M=\025\316\352<7,\'<\346\353\021\275\324\235O=\014\225\331\272R\361\016<\004\007\337<`\332@\272\273\306\251<\253\344\002=)\240\022=\243\004\371\274\353I\270\274}\256\306\273\307`\270<j\351|:\306m1\275\346\254\307<\377\350\250\274\255\3036\275\017P%=\2361\024<YD8\275\333\377\034\274w\022&<\261\253\325<`&\242:$\331&\275\347t8\2751j$\275\241b\256\274\364X!\275\035\333C\275\003U\322;\320J\267\274$\370!<\265P\016=\2510>\275\202U\007\275\204\300\304\274\032\036\023=\266\2520\274\017\032^< %\377<S\2471\275}GY\275{\214@\274\026zL\275n\010\247<\223\251)=?\231\335\273\213zR\275}\222O\274-M\273\272\003\341\001=`\206\361\273Xn\335;\375\202\266<\356\326\034<\032\014\312<\341I4\275)\033\334\274.?+<\270\220\233\274\215\010\300\274E\337%=v\352\020\275.`\313\274\2566 \274\014\354\312:\002\273\024\275\354Ds<[0.=\237\304\363\274\233\255x\274\3423\027=\235\251}<s\276\367\273\331\201\255<v\226Q\275\000\020.\275\374\r\230;\244/V\274\335\224\352\273\273\333\t\275\213\366C<\205\"\345\273\375\002\217\274\223\261X\275\365d\316\274\202\275\006\275\327\031L<\263\303\021\275\025\240(=a\242\332;T\362)\275z\324\t\275b\364\336<\237\205\374\274*~9\274\3258U\274\300KU\275T\014\302\2749\334D=\306`\033=N\006\013=\370{\033=\322\005\360<\300\310\237<\332\026O\275x\n&;\356\n\365\274\347k\365<\354\336\275<\334\350.\275-fL\275a\244\027=\332j\t\275CL\350\274\007E\231\273w^R\275\016\3124;]T\306\274\374#\211<\272[\241:\022<&=\035\347\245;\300^\027=\335\366\257\274\325\214\221\2741>\367\274\347\342<\275=\340)=\243\342\253\274GmG=\trI<k;\020\275\177\3100<\2044P;Y\006==\264ZB\275\\\r\026=\250\375\342<S\'\220<\005-\351<8-\272<\206\207T\275n\353M\275?\342H=\203\242B\275\371K7=>\241/<\325\224\002\275\010I\364\274g\"\312\274\t]\'\275\252?\n\275y*D=1\223\267\273\365\200\371<\014\036[\275\tU\346\274\324Y\';U\030\260\274\340Z5\273\317\231\3739y\310\007<\251\2200=\366\350\031\275}\373;=\001\2326=\013\316*\273\277\300K\275\314\211\212\274\215\373\354<\n\311\006\275*i\227\274EmX=\363\027$\274BYH\275\314\355\326<\370a*;\322=\241<\371S<=\010\335\334\274\370R\274\273\263\223\353<\026+\305\274C;:=o\211\217<\307u\362\274\262\303\212<d\317\026\275\333]\t=\303\t\340<\322\rW=\264\230m;\010\313\26793\223V=eeF=\276\316\205\273\021\311M\275L~>=\350\262B\274l,!\275\346\036\024=\311b\275\273\214%Z<\344s\001\275%\030\313\272\216\214\351<\301~\327\274\026\226\356<\022]\275\274\332nw\274$\257,\274@\241\014=9\300<=E\025\334\274\031&\356<\325E\240\274J\"3=\230r\255\2741h\022=\321\2561=^Yg<p\363Q\273\220,\246;\316)\243\274\n\033\"\275 \016\251\274\202\276\027\275\'_\323<\031\002J\275\313\341\376\274\245\216\225\274\211mQ<H\022\305<\316+V=\272\274\243<\004\236.\275\273\020{;\2735^\274w\326\264\2744s7\275U\302a<EZ\346<\021\202\333<E\314\025\275\246\355u\274\351\356\200\274U\370W<0\225\003\275/\322\341\273\035C\247\274\001\271\037\275Mh,<V\330\221\274\355\242\370<\220t\237\274=\007D\275\235\033\340\274X\351$=\372\354\267<\030BZ=\371\206\032\275\332_.\275{0k<\255/\002\275\264\351\331\274\202\361m\274\n\350\211\274\315\346B\273\303B\224\274\014\306<=\314N\342<\257\222\364<t\321\375\274\372\351`\274#\314\371<\\3/\275\256&\001=Ve8\275t\333\243\273{\025S\275pN\031\274\274xP=\222\365s\274>uL\275\362\236{<\010\250\356\274&,\031<\003\313\352\274\014\272C\275\253\227;=\346\242\276\274gk\020=Cw\261\273\000f\334\274\206\215\347\273\357\000#\275^\035\332\274/rX;=\014V\275n\324!=\004\0363;\220\322O=\313\020\t=r\023\366\274\3337\010=_\360=;>\005\241\274\235 \026=\217\330\n\275\233f\264\274\010\230\240<\23489\2755\261\355\274\\\314+=\305~\365<\247\277\345\274\014\375\317\274\017C\205<\236U\210\274\343\307V=\326\370\024=>\3760\275@\310\211;\350\0178\275\207c\035\275-1\025\275\377\0077=h|\335\274\221x\033=\004J9;!y>\275D\"s\274\2414\026=\265u\034\275\375M\230\274P5=\275\3414\317\274\323\314\203\271I\273\025=zK\033\275\277\200\355<\313\351S<(\2251\275QZ\222;@D\330<\'\031\212\272D\030\021=\276\032+=.\221\307<\235\246\332\274\017\177\001\275M\374\200\274>q\023\275#r\247\274\030\350d<\322\3543=9\374\315\274b\271\376\274,Z\304\272\2305\357<\244l?;\245g\024\2750\210\274<\364\002@\275E\3129\274+#w\274\236/M<M\301\000\275\225\203B=oa\264\274\\\250\315<P\227\361\274c\361\360;\027\347\367\274u\324\235:\272\216/\273\332\315s<\360m(=\2766\275<\376\343;\275C\024\327;S7\213<vz\036\27598\372;\302\026\013\275\023<\264<^o!=\2147T\273#\0348=}\336Z==f\344<\035\346L\273\017F\035=\345\260\263\274\324=\247;\327\"T\275H\3431=\373\256\t\274\327\317e\274\336D\204\274\033\304z\273\362\007x<-\"\022\275_\244Z=ty\270\274\'\274N=E,*=\"\313U\275\240\215\363\274\037@\242</\354\033<\243\035L=3d\312<\036\023P;\235NY<}\211\342<\'\007[=\361\355\246<\302\365\205\273|\276\273\272h\324\344\274\265p\352;V\232\245<\362\212\202\273\033\233\t\275\327\005@=\356\"^<\312\362\037<t\207\017=\331\264\305;\022\205\034\275\023\251\006=u\227\031\275\331\352}<\244B5\275\262R\022\275\341\0243<(\'\034=\033\207\331;\016\365%\275\021;$=\303\226\017\275\274\2311=\027\177\005\275gU9=G\305\006=>\270I\275\201\256\014=\362I\303<`Gt\273\002XX<\247\223F=N\"%\275(W\306;0(\267<\331\356s\274\235B\367<Up&=\374\355\352;\333\030C\275E]Q\275\337\312\313<\216\336\352\274\013\332\032=o\233\003\2758#\320\274E\200\213\274\214\n\320<\327\026-=\255\305\247\2742+}<\305\304\266\274\024\341W=\2010B<j\367\326\274\032x\035=^\266\247\274\024\330\256\274\305\036B=E\330\025\274~lP=e<\374<\264\377V\272\021N\017\275X]\326\274\331\263\306\274\335(:\275\024f.=D\205\303\274^\361\322\274\373\235J\275\261\357\331\274@;D\274\366\275b\274A\0341\275Kl$<\252\347%\273\316\032\346\273\351kP={\302\323;Y\'\277\273\177\370\247;\241.\353\273\371\033\372\273b\265\307\274\212\265W\275N\332\263\2744\340\021\275\321\260\203<h\226M\275\033\353M\274\213D\030<\r\271\3609?\372\000<\310\267\003=O\231\317<\325\316\367\272\304\201\225<(j\013\275Q[.\274\311\272\"<\"z\243<\206\3507=\234\356\340<4P\252<q\027\021\275\217\016\003\275\273\017\375\274\326|\234<\215\311N\275\207\224\002=\031\301\226\274D\302\220\274\372R\341\274\262\247\202\274\277Y\201\273\226/\027\275\342\333\343<\254\226\216\274\342\217T\275i\"\350\274y\035A\275\211\242\343\274^\262\001=~)S\275\3538F\275Kp(=\275\253\'<D\230\027=\264\006P\275\025o\214<py=\275\347\224Z=O\211\367\273\207 4\275\302aE=R\204Q\275\226\244-\275\n\004\014\275N\213*\275wu&\275\244%\350\274:s\026\2746\223\332\274\276}=\273\254\307\203;\337\t6\275\214-\005=\303#\322\270\220\246@\275\006\265\340\274\210Z:=\227%\t=b\302 =\3540F=\277\320\264\274\335\323\277\272)\301\300\274\342\021\017=\347\277\251<\245/%\275\247u;\27495C\275\226y\370\274?\316\203\274\361G\210<\214\231a;*\335\"\273\230\032\341<R\207\303\274\270bz<0x\006\275\366\201\352\274\367\1773\275\033\035Q\274\214!\377\272\226l\024\275\237\"G\274\037/Z=Z\220,\275\243\004U\275\310\305\004\275\270\237\031=W=\212<\206:W=u8\307\274\326\271:\275\341\325;=I|d<J\357M=\364\227=\275P\315\350\274\343\352D=lV1\275\007\353.\275A\263\352\274w#\300;F\016\354<Yy =\356}\273<\035d\003\274\2412\265<>\303\032=\275S\320<\204\0034=\363p2=.}\277<\324\272(=\227\336:\275\202E\366<\265\260\'\275`y!\275\236\037\010\275BAV=\034\275\'=S\253G=A\334\n\273;XW=\305m\177\274=5\004<\310\003\334\274\353j\277\274\227G\221\274\273\2613\275p_l;\030e\231<LU\255\273ui&\274T^\255<}\200.\275\223vO\275\246\0224\273L\345(\275\353oJ;+\260@\275f\342\007=\335\030\020=\005\275\265;\351\0252\274\240\264\023=jd\353\274\300:\244<\177\274\302<B\332\323<w\235\371\273#% =x\244A=a>\024=\347\314%\274\345\257\240:\033\3626= =\375\274\r\224w\274`\213\237\274\333J\t=\347\330\312<$\330\026=)b/=\256\336J\274\257\313\376\274\n\362\375<T[\220\273-\003\307\274\354\256\330\274\005\365\332\274\002\371\251\274;T:\275\r\343\340;\303=\021<\260\013\025\275\316YR\275\200\336\017=\253VC=\304\343\244\274dq@\275J\220W\275\225\372\202\274Zn\341\273\323\036\236\274\255#\351;\032\r6\275\211K@\2743\243X\2756\222\003\275\013\016\020<}\374B\275\274\341\247\2735\223\301\274\307`\003=\006p\315\272\364\t\231\274\315?\034\272NLF\273\223\334\024=\346\006)=\357\262\375\274T/\007=\'5L\275i\3705\274\222\017\021;z\036\254<L\272\207\274\252\263T;:\326\r\275\216\335\265;/\3437\275\347k\311\274\001\221\014\275>\245Q\275\032Z#=\002\022&<\033\3444=\241i\251\273\243\242\"=\343\344\246<pH#=\222\227\021<\320\372\313;\023l\276\273\224/\237\274E\233\301\274e\356\277\274\354\017\311<\033\367?=\246~\002\275cr>=\262\177\212\274\030\307\346\274\356\342\241\2744\311==k\371\227<\306\352\303\274\343\275<\275\276\264\276<9\3328\275\311G\276:\177\321S\275\240e\t=\'R\226\274/\'\017\275\220W \275\251\266\025\275\323\317\354<2]\371<dE3=8nO<\220Y#=\000~\312\273\001\271!\273\355\221\037=JJ\336<D\251\220<8\216\361\273k\267\314<N;1\275\020hr\274+\374\313<\232K\337:\024H\353;\215\237\252<\341\023\026=\276\214$<>\365<\275\376z\272<\223*I\275\237\363\005=\227\2000=\261\2476\275\323\355\232\2745}[\275P #=\341\347\372\274\2761$=\226\2561<\314\324\036=\267\022\016=!d\032\274|\273D\2750\235\257\274\\0W=\315\216\037\275\006\321\020\274\360J\005=\020m8=\r;/\275!~\336<\244\013\364:-\320\007=\376\2612\274hl\205\274B>(={\300&=\371O\277;\366\337 =\231=\013=\256\324\312<\3060S=<v4=\\\367A\275\3349\261\274\246\003E=\327\234?=\261\303K\275x,\000<\347\036D=o\237N\274\\\224\373:G\004\275<\025\363\023=\225\n\244;\310\366\002=}X\034=\240Y\027;\310\213%\274z\264\223\274\211\272Q\275\362f\206<_\341\331\274\352\177\'\275i\365\363<\366\267\350\274\247\\#\274\307\230\"\275\037\373\005\274+\344F=V]\227;\212TQ\274E<\000=HM\256\274M\357O\273C\356[=\224s\022=!\017\234\274%\340\342<\301\250\261\274\374\307#<\373\271+=\270\351$\275\366<4<\020\263%\275%,I\2753\300W\275cX\201:\272\302c\2729c\223<\261/\234\2748\316\024=~\360<=}U.\275L\257V=\301r\341\274\332.a\273\004\034\030\275\320c\233\273\236\330\276\272_!\317\274Q\017\207; \346\t\274\263\n\224\274\355>\302\274d\376\377<\351\320\031\275\273\r%=1g9=\340\214\223<\027\252\033=4u\001=\261\334\001=\316y\371\273\334\006k:\0248+\275a\3430<\177_=\275<\365\300<O\266X=\262P\324\274\362\332\307<\235\367\222\274\215a\203:\273L\242\274\034\311P\275\027\325c<\210y;\274\256\220\201\274y\007\256<M\026U=\370\367\'=\026\260K;\214\032\220\274\311\351\021\275\232\376\267\274\001\301\"\275-I\001=\206h>\275\320\201\014=\267tJ\274l\234\010\275\226\353\026=o\356\312\273\020\314*=CLS\275^\2267\275\376\366C=\202W\007\275\017\334\027=Td\001\275\034\265\016</\275\3359rK};\222\312C<\226s\233\274\372(q\274\346\000\232<\036\236W\275m\366 =\337=x;l/1=\250\311\013\275=\031\255\274\373B5<6\251\227<e\2053=\036\343\267<lX\306\274\366\261\311;\257SE\275\306\320&=2:X\273\226\001;\275~r\265\2748q\366<\322DC\274 \207z<Qo\300<\r6&\2743c\354\274\315|\352;bD\225;\003\346\013\275\230O\217;\364\3764=\216>R\274\203\371<\275\251\"\263<\010\036\237<`\321\362\273\272\'\251\274\201%.=\341\345\317<\211\2646=\311\210N\275?3\262\274\375W\324<\343\304\362<\327\215\247\274\020\003\272\274x\210\235<\227\1775=R@\230<O\024T;e\000\364\274\322N-<\216\311\216\274g\376\231<d\270\r\275\003\321\373<i\204H\274\362\020\264\272\257g\005\275`\206\321<\277)\254\2746\363\t<\377\257N\275F\005\207\274R\344I=\217\275\014;\247IY\275\317\2174\275\262\270\017\274\341o8<\361\035\303\271\215\305\003=\022hH=\2124\024=\322vD=y\301N<Q\373\023<\374\366\031\275\271\000\222\274\354-j:\227\323\006=\002\275\223;\301\022r<\202@\343<\244\357\020=\016:\211<\342GI=\014\205\220<\256L\353;U\002K\275qH\215<\365m%< \201\017=\233\233h\274\034\002\272\274\375\372S\275\204\030\274<\"\220\312\272\205Gp<\212\204\304<\212\373N=\333C1=\3751B<\213\314E\275\373\347\374\274.0\273\274\327gX\274sON\275m\020\201\2749J\324\272\231\245?\2756\356\3209\312\n\000=\275\274*\275\341\316\234\274\224\266\307\274<\006\000=\033?\370<\206\243Q\275\262\252\035=\366\352\264<\355]5\2754\334\225<b\022\n=\334\3159=&|\232\274f\337?\275\272\t\276\274W\3641=G\370\006=rB\t\275Z\315\260<\217\nB\274\362\270\t</\366c\274\360@\217<!<==\261.\266<\030\223?\275p5\213;\217\2273=q\367\004=\010\332\360\274h\237Q=\300\3519\2742|O\2755.\322<\022\027\210<\332\"\234\274\250\004\333\274\317\367x<\237\003\032=\"\265%\275\231k\241\274\000\320\032=\247\344?<\312n<<\2761%\275\351\246\371;\306h7\275R\312\260<\260\004)=\3631\331\274\220\241x\274\271h_<83-=\221\241(=\214n9=\024n\027\275\264y\224\274*?Q=\357\212j:\370\300\341\274>\310\217<\333\n]\274\0341\263<\264\014\010\275\\\317#\275c\341<\275\"\234:=T\217\362\274\255W\021=\306\3016=\032\212\000\275e\372\212<\377J\264<\322WU\2747\371\004\275(<\332:~\204\023\275\325\013\014\274\270\370\350\274.z\213\274\365-\307<\302\367\013=v\213\274<\0261r\273\243\352\261\274\342\332W=\371fK\275\230\225Q=Hs\273;\316\013I<\t\031\336\274\225\373\317<\207Q%;\304\250F=\3465\274<\0002\232<\332\323\030<\343\203&\275}\311\206<@T\363\274\310l?=X\177\037\275\360\361H<\234\374!<\006\302\023\275\014\301Z\273\203F#;V\2636\275\303\013+\275\t\273w\274JxE\274u\257\035\275\265\332\343<\300h%=\033Z(\275\350\323\377\273\363\226\302\273Z\232\213<\324*(\275\005T\"\275;\023\271;\333\272\"\275$\305\204\274h\252\031=}~\026\275\351\320\330<\010\336Q<IOQ\273\363\2500\275Dg%<\267.\236<\037\023O=g\211#\275E\303\t<\032\017\261\274.O\377\274<\334\306\273\0139p\274\021\236\347\274?\252\376:\234\226,=\276+-\275x>:\275e=\323<\247[+\275F\257K\275\365\222\372\274\346\270G\275\313\362\272:H\273\224\2748\276\027\273\276h@\275\343\210\003\275\016\355\t\275\343M$=\023--\275\222T\021=\262 \351\273\022\010@=\2721\000\275\357jC\275\264\225.\275b\344G=\313C\031;\352\026:=;\227)\273\361\005\357\274B%;\275\322\023\327\2740\330[\275\013\026>\275\037DB<!\006\272;Nl\005=\013\272b\273:i\031=\276\304\033<\344\261\326\274\001#\201<\235MR=\265\033\361\274\277\315\247\272\327s3\274\332\036\236\273\rG\325\272\271\033\030\275\272\210\036=|\335E=\001\236\006=\360:\005=\373LW=\244\016e\274?\326\220;\260`\007=\202\270\252<y\376\013=\340F,=:[Y=\374\3219\275\032\336\235<\202\242\304<\260c\017<\321|\337\274\210X\254\274_x\275\274\200\311\t\271\203\331\240<[\303\231<k\244\210:\276\033\303\274Qg\366\274\211]\241\274\240\262|\274\304\332p<\003\240\024\275\200\315\t=\020P\005\275\326\261\227\273\370\302\310<y\033\036=\271`\373\274\022<B\275\373\252\025\275\253\025\020\275\330H\224\274R\\\342;\2117\025;\355\254J\275\213!\001=\217z&\275\264\360B<:\326\246\274X\265\334<\303NY\275D\"/=Q\274\361\273\326\022*\2757\214\030=E\033\331<Q\340\306\274\327C\357:\250fc\274}\201 =\254\024\360\273\034oN\275\n\325\342\274\204>\240<\017\335t\273\350X\005\275\315r:\275C\245\031\274\246\272{<\257\000\314<@\007\277<\n\245K=\354\354\'=s\271\307:=%\201<\305\344f:\355\316>\273\370L\030\275\242\252&;\207\3678=[\370E=\016\220\030=\357\331\035=\245\026\361\274\236{ \275\302\202V=EB\t=\036\241>;\02528=O\0170=?|&=\300`5\275t\315\240\272\355\326\033=\031<\353\274\243aj\273Y|E=\013LM=*\226&\274^e\027=\273#I\275\016j\2419\225\370\317\273\352Y=\275\205\204\366<\277@\033=pG\004=\006B\207<s\001\021<\267\017\316\274\036\020+\275\027\016#=\304\246\034\273t/\304<\\$\240\274\376hF\275\370\007\246<\211\271#<\351\224\036\275\372t\211<cE\013\275B\207P<73\200;E5\334\273\371c \274=#\030\275M\343C\274\277K;=\rA\033<\303\267\n=C\327\262<\2474\007<\375\302\275<3WT\274\346h#\273\rRR<\005\251\262<\314{\014\275\005B\323\274A\264_<#\350\031=Cw\246\274\322\322v;]\013W\275\325h\326\274R\216X<G\000L\2746\323\001=n@\320<\031\371\010\275\017\255S=\316\232@\275O\022Z\275\315\234\245<\023\2257=\254\2303\275\364*+=/\272\n\274\323q\363\274\321t\026\2750<!<\0260}\274K\035\363\271\n_\024=\214\262-=\350j\003\274R\327\263\274i\312C=\216\\\024\275\250Yk\274\236\302E\274\r\201\375\274\023\1771=o\2775\275\263{\375\274q&\026=\250\016\027\275\211v\017\275\325zu;\342i\022\2755ef\274\002\177\006=\202\214\021=)\363\022=6\377(=\200\0210<\" \221;\032@.=\025l\022<\324\270S\275\244\017r<\3629&\275\311=\226<\324\036\273\274\220~0\275\377\202\220\274\355o\r=\021UD\271\343\222Q<\350\232N\275^4T=\265\371\022\275G\025\223\274o\0351=\024\322N=%\271\367<*\001-:^\0130<\337\254!=\253^\260<\201\376?\275x\351\266\274\2212\306\274\324\355\013=\305\352!\275\333\0359=\375\0004<\033\023\271<\214\004&\275Z\316W<_\302\020=[\246 \275\331\273\334\274\354hG=w4\'\275\203\300\336\273\307C\303\273\026\347K<Kp\267<N?\372\273\325\tY;\370{H\274\032\275\022<ZU\364\274H\373\016\275\261F>=\200\350\351;$\274C\275\033u\235\272h\202\273<p\311W\275\260\010(=\220\342\006\275\360\237R\275\230\272\244<+G[=\267l\023<\357,\\=\345\360\362\274\376Q\222\274\232\347J=\315\336X\275)\365B\275\343X\306\274\243\2331=\330z\014;\316\366\233\274OT\271;|hD\275\240-\"=\206l\034\275C\002&<+^$\275\032=\261\273\302t0\274u_\346<3=x\274\271\255\372\273:\362\377\274\\\355\342;j\206\305\274\246C\255<E\313\026={\'\032\275\n\201\203<\351\177\010=\275\001\013<@\331\374<vg1=\230\310{\274\315\032\214<S\225\031=\354\301\024\275\034\353S\275?\222F<\303`\336\274\337\303A=\036\320\010=\201t\024=\240\371n<\323RR\275;,\232\274\332-\003=\013\201z\273\177\3670\275Py/\275\003\3447\275\td8<B\006\373;\034\3405=\236\266\0208_9u9\207Q<<\240^\'\275\222\200\007\275\347{P\275H\177\037\274V\033\223\274\355\343\331\274\205\353:\275\037\3307\271iH \275S\262\304<P~N=\260\260\340\274\316g\220\274wU\235\274\365\334\375<\340\370\\:\016\312\004\275?\227\"\275\362u\267\274\013\362\334<\256y\240<\261\021G=\006n[;*\2725\275%\017==\032\313%\274f\347\006<A5t\273s(G\275\314>1\274?\324\203<\300\234\311;\023\2448\275\336>\277<\207\001\013<\r#F\275\277#e\274\354k\267\274\305\001\367<\275\343j<T\270\t\275!\314\035<Z\346G\275\035\276\254\274\240R\231\274d\353d<?)\017=\1773\002\275\005\372\020=}\207\377\274h\333\213;\216\257@\275\372\311\002\275\374\305\244\274:\223,\275\240\024\306<\310\316F\274v\255j\274\263\304\020\274*\353\005\275\356u\003\275\242.Y=\360O\236\273\340\240N\275\005\312\346\273n\211\265<|\3147\275\360\245J<n\377\027<7\225\021\275\031;\334<JJ%\274\300\300\021\275S\265l\27337\267<]\261\340<}b\205<cW\333\274\224q\004=\356\207\240\274*\347>=\215\340\200;c\032\355<\353\331F;w\235W=\036\223\300\274BE\211\272\354\326\017\274\364K\026=\355\360\030\275\357\203\367<\0257\036=6\373\000=\343\350\306<{KD=\010TT<\310\264\345\274\240\252\330\274\240i&\275o\222\013=\215f\271<\352\322\034\275En\354<S\207\300<m\227\023=\306Z\013\275`\2145<\024\300\220\274\220;U\2757L\337<\213\"B\275\203h\230<\314\314K\275h7\013\275QpT=\331\226\026\274\262\3470\275\000\2456<(\303G\274\242\322\010\273i]\221<Y\345C=\374(\034\275\273%=\275\354\235\337<\036\250M\275s\223#<\3655f\274{\2450\274\360\256\022=\237\373%\273\327\320\311\274a\352!;_C\311\274\333\tW=\360\314\337\272\000\241\366\274\217\336\273\273\316m\274<\275J\224;\2461\r=\254\303\005\275\025\266\020\2758\262\361<-\266\371\270K\342I=\004{1=ek\343<\253\252\207\274\347\020\227<\353\312\212<\016\230\034=\377\263\330\274\263\201\354\273m\315\377\274\021\272\006=\307\004\322<\304\364\034<\342\363\"\275;H4\275\255\tA\274\016\271f\274\004;\337\273\'!\364:\270\236*=\261\315\017\274\351e\323<;\222\030\275\314j\304\274H\211\366<N\2243=\005v\006\275\202\277\254<D\270:\275\302\2707=\004Ft\274\367\311\265\274)PH\275\r\324\n<\230b\267\274\214\010\2569)\223I\275\004\270+=\'4G\272\263l\020=\231\224\263<\003\337\230\274\022\014\374\274b\373\014<5\213\240\274ep\275<\316\310y\274\004r\322\274\021\336\031=\224\313\020=\254,E=\026\341\371<\331\267\365\274R\273G\275\261g\210\274\334\016(\2746I%=\3451\006=t\3056=\346n\037\275\366jm\2745\007$\275\361q\362<2\305\372\274\315\322\264\274\0273\341< \324\325\274w\302u\274\266\003T=8\226J\275\261\310\024=\223\2559\275\007D\373\273\207\003\006\275\025((<\332\356C\275\315\2175\274^\240\302\274B]R\2755\253/= \250\311\273\223\317O=/U$\275<.\314:$\354#\275\r\355)\275e\307\324\274Pm\014<N\311$=\264\235\334\274\t\300\340<\374g\304<\262\037\010<\016\341U\2747\226\032\275\3516\024\275*\232\235<\320\307K=\243~O\275\260\317\307<\027!\030\274D]<=0V\354;\353\030\030\273\036\226\323<\326\331\242\273\025\244\036\275\270\236\240\2746%!=b\017%=?\032\027\275\213\353\243\274\253\0326\274\327\336\r\274(JA;\316\235\033=\ts\r\275\207\3363\273I\216\"\275\007\347\337\271\274\033\017=(y\335\274z\233T=\206\263\366:\300W\234<\364\270O=)\330\023\275\333\371Y\275\2339\236:\272\253\r=W\241N\275\002\272\350\274\367\264;\274q\026B=e\315\200\272s\376\\<\243\253;=\355F?=LAY=\270|\304\274\256\217\021\275\261!\211<mKA\275\370\300E=\202\314\374\273\021\325\247;\033\312\013=\267\333\257\274\262F\027\274\356R\245<n\331\354\274B\332\032\275\026R\036\274\203>x\273\351\315J\271\255\216\231\272\r\243\342<\317\216\214<\245R!\275\301EH=\275\364\024=B0\006\2753G6\275^;\351\274\305E\005=\214\2450\275\023\2113=\204/ \275\351r\027=\225`\314\274\245\313\n\275\360\334\025\275\270\377\316\274\001LA\275qmG;\345\006\335\274Xx\315\273:\260Z\275p\362\033=\235PU\275S`1=}\377\342<\240]#\275\375\355\002=6\013[<\255\326\373<\332\216{\274\235}b<\333zD\275\":\347\274S\335\262\274]D\314\274\206/3=\233U\016<\005|\227\274\3405\037\275a\'\n\275+,\302<$\2308\274\323|W=\310|\024\275fA\017\275z\244B\275\274uT<\t\247R=\246Z\302\274\34382\275\341x\313\274Nc\206\273F\233X\273\034\303\344;\371\3220\275\n\320_<;\332\231<\315\2325\275C:\027<:\315\026\275\204\275\024=\014\3034\275Q\000\236<\365T\264\274\374{\210;\301{\236\274+*$=\024d\030\275w\014\337<\320\207\020\275O\261\213\274$!\035\271\213\205\343;1\317\n<\233\033\320\274\264\376p\274\335P#\274\227\273\247<5\234\225<\030[)=\350\2533=V\231)\274\332\300\204;x\303\275\274x\203\022\274\375\371<\275\313\021L=`\375\360<\027u\316\274\333\360[\275\364\373L=C\356\363<\032`\237<\350*>=\t(F=\376K@=u\337\036=\260\323G=\342lI\275O(\225\271\215\020\004\275,j\312\274\277\205\264;f\206;\275\237\255>\274VP[=\"\204]\274\221\001\304<\374\340\016\274&\032\334;\332\334\201\274\272\225\014=\023\203.;\346\276\006<\'\260\356\274\224\350^\273G\215M\274\333S&\2751w(\274\201,M\275\221\217Z\275)t\273\274\000\302.\275\214\224\354<\346\001\276<t/\000=\234\243\221;\347\331H=\035\244[=\017\026\373:B\360\311;L!.=\002\274\245<\315\334\242\274\270\372Y<\237\330\267<\363S0\275o`\334<a_\034<\274\261\3439\360\006\025=[|J=%*\'<v\031\212<\007\304\031\275v\240A=t\010\355<a\3409=\214\026\251\274/\034\366<\216\020\260\272\306\203\302<\n\220\036<$\345\"=\244D,\2752\253\013\274G\331\352<dA2\275\"Y\025\274\201aQ=\254\336.=#B\205\274yBK:r\026\000\275\2208\032=\007\350\034\275\310\273\276<\306\337\345<|\204I\275\002\323\305;\3528\207\274n\331n\274I\233\013=\345r\217<\330\331\020\274\354\227O<\343\201%=Z5\010\275\251\237\276\273B\273\340<\226\256\227\273\216&\356<#\264\276\273(\271\221\273\035\332/=s\335X\275Kf\n\275\322\377W<\233h\271\274@A&=r\335\232<\007\255\017\275\254\003U<\377\032\001\274\251\337T=T{A=\345\320$<\355\333\343\274W\354\313<\265\257\254<\363b\022=\317Y;=\372\006)\274\0012\374<\0002\244<l\354D=d,\301\274\326\177==\004,Y\275\273\213\331\274e\027\372;+\367\200\274P\240&\275\027\304\322<\347\314\200\274;/X\274:\353Z\275p\2516\274\010\177\320;0\243\331<\311\326\314\274L\361\033<j\344\274<2\333\034\275*\227\247\274\345\346\021\275`*V\2759\177\352<U\0074\274\223\241\244<v^\n=.g\217<\030\214==\204{)=\362\002\257<[\376\331<\037\037\"\275\331\323\240\274\333r\220<\340x\326\274\224F :SNV\275\202xK\274MVH\275\353b0\274>\241S=\312Xm:\322\310\256\274@b\010<\36003\274\243\227\267\274W\260\377;W\n\032=N\240Y=\243\334\033=\217\222*=\3756Q<8pX\275\267k\313:\322\304\222\274]\370\310<\371.\244\274\265\216*<a\273>=b9\035\275\305\300k\274\366\317K=uR@=\320\307d<9>\350<w\033P=x|\037=6\243D=;{_\274\001\304\003=mA%=/\025\312\274\262O\325<\242\256\227<\357#7=,S\300<\023\200\374<e\220\344\274\260\2504\275\315\023\306\273+a0=[\307\037\275Z\353b\274*\361\\<\304\316\243<\320M!\275g\351\036<\271p.==\341\255\272\236?\200\274\221j\037\274Tk\035=ip7=\007\035J=\001\003\036=/\232==J\2000\275\272\331\221\274\214\3606\275\255\376\300<;\217[\275\'\324\034=)\362&\275p\204\366\274\267W4\275\314k\013=\361\353\325<\305\300\245\274W\316\004\274\263\367\301;\352\366&=7\246\372<\226K\306<\225<8\274\0007\250\274\026\240R\275\372\0035\275\325\3752=@<\\=\027\005P\275gmF=$\223!\274<\213(\275j`\360\272\252\336\316\273\255\'\340<X\002\367\274\003\013\n=\270\234,=D\016@\274\345w\256<TKx<YV\023\275\357,C\275\241\303B=6\010R\275t\364\317<\243\255\217<?!b\274\314b\203\274\251\025V=yeh<\357\356\006=\017U\352\274<X;\275\261\r\2459&\2065\275\220\202 =\006\020>=\004\300\211\274U\331V\275\347|\\\274\275\224\272<*m\237<\226\245\265<\t\344\327<j\263\317<\243\215\007=\232\346C\275\027\246\241<\316\2737\275\317r7=oW\261\274r\206I\2755\301\002\275h\241\305<b4)\275\017\314\335\274p\001\024\275\261\322\003={\000\374;\260\331\211<\277\376\017=\361\035\204\274\232\222\\\275@\376\036=\273T\245\274?\253\273<\323\257\034=}\304\220<\021\220R=~\210\264<\215\240`;R\2168\275eA\336<\352r\026\275\275\364\003\275\362\2713\274\323\352\246<#|\n=u+L\275)\331\304<\214\377\323\274\272\276S\275\366\355\006\275\317\205\016\2741@\236<j\307\260;o\312\n=\307\237\021=\233\2370=\"\2216\275Va\007<\215r\004\275\204&\352<\22167\275\226\373\361\273-8\2619\261\236i\274\027\3477<_n8\275\360s\205\274\375\321\321\273q\014\302<\3253\241\274\322\361\212\274\005\351 =g\3753\275\227M\357<\037\205\027=\376\206a\273@\350\021\273\214\225\355\274\365\001\003<z\014\205<v\023\215\274\331\026\324\274\2015n\274,>\244\273\262\021k<8g\036=V\266!;\310\326u<\216\377\022\275Wa6=5\346M<\246\033\220;gu&\275\014\367\341\274W]\327\274\232\200\014=\362\205\r=T\370\202<\201\267\322:\267\273x\274\006\334P\275\343j\034\275\370_\"\275;\361G\275R=+<z\246J\275\271Dl\274L4\371;\0345\345<\262\303\215:\nVN\275\311\262\324\274\005v\210\274H\024<\275\214n\346\274\007^\374<\2065G<\346\321\n;Fr\"=\254\325F\275\224\265%=d\325\010\275\232\337\362;]z\216\274\367w\203\274u\214#\275\322{\312\274\215E\221<k\000y8\236\374 =\360\216\030\275\261b\237<S\"H=#\207B=\243\214T<&\225\006\274\233\353\337<\006\177I\275\332\214\243<)\321\235\273\344\3156=\022\374\334\274\270\330\035<}k,\275\207\010\374\274\034\026\037\275\007\000S\275\022\000\035=\024\236\010\275\252J\006<\364\0334\275\223f\t\27575\324\274\245\3064=\253\217B=S5\205\273P\217P\274\205\014P=\003\r+\275\000\225!=/\375r:\330\210@\274\311\310P\275JN\036=\205Z <\035\030\336\274E{P=\254!Q\275\270\375\367\274]\264\352<b\021-=\301\333\320\274/o\226\274,2\352<\374\017L\274\t\236\275\273D9\017=\230\245C\275\271\2603\275\305\221\361;\273\221\251<\351?\301<`\345\234\274/\334\020\275\027J[\275w\230&\275\324\024\301\274#2\261<\201\t\024=\207\275\375\274\313\345Z=P\253\322\274\232\212\032\274\257\353\003\273q\251\236<AX\352\274\32143=B\303\246<\225R\025=\010[\241<w(\263;\275\325\346<\255,\332\274f\231;=%\2419\275\271C\201<1\271\032\275\326\243\004\274N\317\000\275\005 \256\274\2673F=J\037\277\274\016m\001=b\2772\275\\Xo\274+\245\253\274\013y\250:z2\204</,\205\2745f\242\274|\272\026=\272\212Y=\027\261@\275;\255\265<\330\353\345\274/\220\t=\003$\316<\002\347\031=\272L\235<q\033\013=R73\275s(\365<\266\003t<T\227\365\274P\260#=G-3=\005C\356\272\340\013\026=\374\0217=\371~\272<\034\337+=5\250\016=\246\356f<@\357}\274\263y\004\274\344A\317<\355\313\201\274w\242\260<\206\r\256\274\234\024\005=>\230O\275\332\224\002=\272\016[<8-\231\273$\213\225<\201b\334\274K\262&=\226\376\000<.#\314<f1\351<\265\242,=\021r\n\273\307Zb\274\225\244\336\274K\245\334\274\260\265B=\'$1=\374\311C<D\213\323\273\245\312\342;\362QN\275\250b\020=\216\326(\275\343\007S=W\031\037=\310\025V<\033\366\272<,P\253\273\341|\026\274\006\334!\274\324\213\243\274\273\314\033=\3713\275\274\013\035\341\274zM+=\342\320G=\233j\3009\247\276+\275\245\274F=\007\t\326<\263~\005=\341\374+=F\264\021<\275F\270\274\267\033A\275zsi\274\244\351{<x\235R\2743\364\211\274\242\000\025\275\317\326\027<\267\006\013\274\260\326#\275L\265W\275\352]B\275\322\261\331\274\305*\243\272C\200\332\274\270_\274<{,\355\274yE\025=\373\353\254\274\242P\264<\352\237\\=5\224\271<H\217\246<\357\372\002=\335]<\273\3419f<3u@\273\372\306\272;\243\037\033=\364\257<=+t-<A4\270\274`\240&\275\263\037C\275\24440<4\222\266\274\341\010S\275v\204\210\273a\003\271<\0328\370\272\376vN=\036\323*=A(\031=\314\263T=;\205\357<E\004X<\035\rd;\336\206s<\336k@=\0366\027\275\300f@\274,\240\241\274\374\202=<\374\026=<\367\273\243\274\360\304\231;\323\366Y\275\030\243\033\275\'\326\201;\204\327n\274\374f\211<\204-h<\307\346\'=F\362\010<s_8\274\205\230\310\274\337\031z\274\227\234\263\274\234\363D=\220\273\342\274\331\216\\<d\344\222<\236!;\274\220\324!\275\027\371\325<\347\220\r<\025\2369\275R\303\276<\267\214(=S\244p<\307\330\327<\276\301\025\275\376\262J\275\'\032\372\274 \360N=~\316C\275\244&\007<E\275\024\275\246\220\032=\006bA\275\373H\321<\023<#<r\257\230<a\013?\275\372\357$\275\354\014F=G\277\226<\324\374!\275b\231\341;b>\243;m\034{;\261\313\"\275\314\022\242\274\272\010C<B \016=xC9\2754\273\306<\370\242\341\274\211\007\r=o\017H=\255\241\233\27412\001<\246\200\235\273\261\272X=\357\256+\275\026-&\275\013\250+=M\321V=b\272\301<\035\322>\275\345\2702\274\265n\004<\365-\211<\217f\347\274\315W\331;x\016\t=NP$\275\267\223\030\275\026\0235\274\016\"n\273v\351\373\274\264\276\324<\n\010,\275[\342\240<F\036D\272\016\237\272<\000\321f\274~\205(\275l\003\325\274$p\007\275.\033\251<\304\3112=\026\025\323<W\004\010\275\241\332\024\274\232\240H=\210\340\002=\366O\230<\363\240\033=1\260\026\275\245\331\005<F\332\215\274j\"\036\275[\302_\274.>\267\274 \371\257<\316\364C\275\031\030*\273\245\323Z=/\324\363<\356Ss<\261\301B=D\337\254<K\323R\275\345zz\273\006\336\024\274\365J8\275\335}\300\274\344\272(\274\023\371+\275vV\010\275\001\352\006\2757\202Y\275\277`T\272\200j6=\3741\320\274<\354\337\274\2378>=2\352\005\271]\336d;\346\256\210\274U&\215\274\334\277/\274\324{~\274=/4\2742\232.=\316j\333<\034\364\255\274>K\001=\253\305\370<\034\303x;\210q\354<s\211D=\205\001r;?7E=&\235h\274\026F\244\273Nq\032\275\312(#\274\350\220M\2751\324M\275C\374\020\275\277\341S\275^\177\023<\2624:=\204\340\017=\322\243/;y\262\211<9n`\274\371\2543:6\2243=\377Uw\273-L\021=\262\0036\2753\t6\274\366!L\274\2546i<D\236\020\275\014\255V=\342\324\307<\261S\'\274\234`\201\2749\204y\274,\2007=\310^\016\275;\272\025\275\243)$=\317\236V=\360\014\251<Jy\035=\177\000,\275\376(\016\275zk\310<\220 \270\273\337\345/\275\326K\335\274\334\204+\274\231\201\346<\000+\202<W\031W\275/\n>\274\326\361\322;\275f\345\273\2324*\274\013Q\237\274\014\354U=YqM=\366\374\026=y`\017=C\026E\275\310\352\334<+@\263\274\"\230I\275B\355Y=\037\242\000\275}K\010<\355f\356\274\243}]<)\0108=#_\227<\217\021\374\274/w3<\222\357c<\np\210\273\315_Y\275\366\013\010=,\323\017=DV=\275\221\334K=D\374\024<n\230>\275f\341\223<\010\235\331\273\237\332z\274s\334\235:\300^\217<a%\002=4\214\335<0\213\014\274\374\010\024=X\313\263\274\336\252\2569F\273G\273@\317\237<\306\001\271<\350\377\251\274\306\307\327\274\021w\255<u%\001<\323\224i<\274;J=\rTX=\226vb9\220\311\370<\336\240\024\275\346\204b<\227\361\004<U\245\315\273\210\3478=\317\002T;\022\333\360<\n\256\245<\014\370\215\274Q\000I=F\222\024\275\213\232\035<\356],<\216\332\240\272\302=\"=wE\223\274G\020\314\273\323\314\034\275K>\n\275\027fA\272X\311\211\274w\365\317<\201j\330;\353\352+\2758\341\217<b\034P=\0302\250<\255\265\347\2748\006T=X\214)\274e\210\331<[\031\017<\026@S\274\037u[\274\221\201i<C\211R\275\010r(=T~\324<\007\226\334\273\032\013\213\274?\003\036\275\203\206\255<p\256K\275v\362D\275\306w0\275CQ\024\275\346\\\212\274\353\337\214\274\323\004\"\275\000\207s<b|\204<\337\3324\273\314[\262;&\226\003\274\357\364[<\243%*=\2241\250\274\317\364\016\275\226\353m\274\250p%\274U)\004\275]9\024\274\263\244\006<\006p\r\273k\236\373<b\t#=\322\247\303\274i\330\353\274\377\263\n=M\366\362<\026}\224;\375o\304<Y\374\007=e\0029\275\255\257\341<\022\234\375\274\341DR=V\\V=\2021\237<\314\023U=\023\221\376;\250\313w\274\371\254\034\275\027\037\216\274\024.\337\274\216\350\211<,N\371\274\257\361\330<\266\276\004\274\254\333\027=\3521\376\274\006/\024=\016W\004=\230|\213\272;\3235\275\001\325L\273V^A\275\014\020\345\274\017\010<\274\266\315\335;\277$\024\27587\035\275m`&\275\251\217\226;\370\202l\273\232\250\334\2743hQ=h\253\334\274&\302@\273V5\251\274\002\360(=\340\225g<\' X<\363\242P\275=\375\325:t\337-=\242*5=\342E,\275\244\313\300<\2743\335\274\221!\005\274J\263\235\273AA\177:\351\274\333\274\204\263\343;\356R\373;x\233\225\274za\316\274\310\377\304\274#S\030\273\202!\n=\325\367\000=:\360\014=\372h\373\274\232\256\335;\371\031!<\200\2054\275\316\273\246;\374\367.\275\274o\215\274\334c\224\274\027\254\004=\312S\223<9\365\321\274*\243\243\273\244\026<\275o\326\354\273!l\276\274\t\217\034\275\034z\n\275\364\247\222<\033\221\353<\330\244(\274\341\254\307\274\024\244\274\272\231=\224\273\273\003\313\2745\255;\274s\355p\274\271\224\237\272\203\356\304<\207\301H\275\245\260\275\274\356\335L=8?\010=#\216\326;z2\306:\236\277#=\367\341K=\335\200\273<\314yA\2754 *=\027\006\303;A\334X\274\036\031\334<\001\273\034\2743\3414\275\013\010W\275?\235\000=X\346\354\274\371\335E\275z\214F=\324\342y\273B\024P<\203\036\017\274FK\022=3\332@\275a#\270\273\216V\362<Gs\031=h\225\030\275\271\003\014<\035>U\275Ps\017\275c~\272<mo\t=\225\023\002\274\022l\254;}u\310\274\013\374e<\010\2104\275^9\031\275j=>=m\335\255\274\357\2526\275\3556\312<+5\025=\327\021\267\274\314\033\341<\331\2673\275\306\r1=#\333\351\274\215\213\352<\264\264I\275\023<\212\274\353\n\354\273\357\263\025<\231?\376;=\0372==\342\360:\347\351\003\275{\032\001\2750v,=\004}(\275\263\331\014\275\304\276\014;^\014\030=\366\326\333\2741,\265\274\374\370\023<\031\002\312<\251c\\=k\005v\274K\\.=vE\032\274\224p\004=I\342\n=*@\025\275e3\371\273\300\t\027\275\313\233\205:\004\035\302\273\"\320N\275\265\304G\274T\274\013\275\345\001M=\376\257D\275\363\333d\274\2510\327\273$\306\275\274DW]<2b,\273\037He\273\250\237Y\275\343\341B=\307\252\252;\002C\013;\360\377\217\274j\320\230\274\355\217w<\246\245\014=/\037H\275}3\177\274\212}\220\274g\377\n\275\376\021\315\274\202\273\337\274\220\333J\275i,\023=\263P$\274e\240~\274\365\312,\2752 \300;\332\337J\275b\327\362\274;\266\314\274k!$<\355\345\221\273;~\357\274>V#\275\337g\004\275\325\323\025\2759\032>=\247\223\001=\005\246\271:\325\322\t=\207]C\275hL8=s\033%:ty\247<1J\037=\346\310L\275Md\014\275\004\272\342\273\002i\024=\027\003J=\004\343\345\274&T\304\274/\333\016;\313+\221\274\317\262\200<\212~\305;\311\016B=__Q\275\020`\370<\260\204\333\274\200aB\275\244\3162;\341\036=\274\276\033\372;W\273{\274a\n\215<\264:\222\273\335P\n=LU\242\274\373\023\"=h\212\216;\241R\255\274\226_r;\347\227\020\275\300\016d\273\273f\372<\210\304\353\274[P\255\274\254\207C\274\245R\360;\r\337y\271\342m\335\273\020\310\002\275\3614>=G\353\306;>\233\005\274[)\244:\375\205\374\274\224\271\353<\t\276?\275Q\323\016<K,#\275+qP<\341\207\322< v\346\273\262\303\246<\034ZD=Q\016#=~y\257<\242Cq\274\204\374\345\272\350\202\336\274/\301\031\275\261\307\356\274\253\254L\272\241\3774\275\231VC\275\3622\374;rm?\275\252jW\274/\361\335<\022;Z\275 y\205<\272\306]<\357\376\301<\363Z\256<5\335\036\2755R\231\274\201\3038\275\032%\017\275\253\007\230\274\326\234Q=\273z\234<.NJ\275\267\201\216\274\235\317\r\275D{T\275S\313/\274\375\327%\274\037:\250;\320q\032\275\024\021[\275!\325A<\244\327P\275Z\343T\275\367\274Y\274d\265\023=s\301 \275\201\nR\275\265\243\270\273$\304=\274\007\345\333\274\352\232b<\233\237\254<\214\220\027=P\374\220\272Af\221<\245\211\315<\212\377}\274\367\r\027=\271x<\275\234f\230\274I<\311\272\306B@\275\177\025\355;\2203\256;\273\347\002\275\331\225b<\235\3144\275u\361+=\257\266\007\273-\264.=\245n\'=M\266\317\273\022\352\216<\370$D\275\337\354\007\275\027#A\275\360\2326=?:\300\274\313\026@<\201\274\276<4\307\217<\377\367\337\274P(A\275\002\3513\273par<\3466\205<m\277\017\275\244\001?=WA\025<\270g\371<\373\0339=]\004\026=\327\314N=\375I\304\274\354$<\275g\n\t=bw@\275OJ@\274\017\257F=\035\277E\275\254\351:=~<2\275X\322\257\274\354\330\"<\276\3312<\227t\315:x\024\031\275\267)\273<0\377D=\276\255\267;e\000\211\274]\345(\275\020u}<b\313\\9H\274\036\274H\357S\275i\177\305<\201\025\316:\337\312V\275\271-\023;\030\017)\274\302;\006\274$(H<s-h<\331Q6\275{%\006=\016\356\010\275\343\240\342<\033\344\371\2741\320\260\274\302T\355\274\231\347\026=/\177];#\272V=\312\350\032\275q\262\242\270\332s\t\274\354R\356<\331\031\270:\340E\266\274\210\310\t=\217\021\277<9\322\372<}\317+=d\030\371\273(`\332<\366\360\272\272\030\262\014=/D|<\036\343\323<$\037\200;c\244\364\274\344z\254<\267\375*\275\213hW\275u~\313\274=\274\260;\257\321J\275\201\364V\274\004\203\322\270?\035\312<f\241\261<-,\305\274\030+/<\211J\014=\317=X\273\303V\017\275\027}\331\274\312\0273\275\nl\022\275\337\205I\2755\220`<)n\027=\000W5=C+\363;\244\347X==\246\207;{\355\t\275405<\365\221\274\274K\257\026=e&~<\363\265\034=m\301\025=w\034M\275H\361,\275\356\003A\275\343\032/\272\251\023O\275*\023#=\031q\236<\025yY=$\334Q=f\021\333<^S3\275\247\245\201\274,\343T=G\250V=\367\313\032<\2654N=\342`#\275\355}\324\274\261\364\017\274\332\322\252<\336R%\275Mm\025\2758s\205<g\317S<\231\225\005\275\320\016\311\274\216}0=\303\301\006\275g@?=\341</\275tH\031=\034\327$\274\333H\326<C\205.=\274pR<,Y \274\240\220N\274\205\346\234<\231ur\274p\256n\274\326SX\2743\177\326;0\256\334<{I\347<\025[\300;\313\204\347\274a\207\314\273|!\024\274\260\314\315\274w\361\330<\026VD=\336\352\334;\257\225\t\274\210C)\275`mK={\3012\275\366_\002=\274u==\000\276j<\024\317\033\275K\251\3539\035\316\001\275Oq\004=7t\002\2743\324<\275\333\234\246;,R\250\272{n\000;\313\364-\275\362\201\r\275\251\016\010\274\337\301:<\236U\217\274S\253Y=\214\355\210<\224\333\025\275\366\232@\275\371cF\275\354\277/\275\2714\'=\3776&<\200\257\357<#\301\t=\364}\007<\257\266\273\274\026\366\341;0\372:\275|\356\240<=\033\026=$\207W\275\023\350\n\273|\270\004\2758a\\;\361\225:=\237\021\017=\n2\322\274\367\325y\274y\316\273:,\244*=\325\343\211\274Cn\032\275\270\257\225\274\232z\342\274\006\325>=\314\266M<R!\364:\t\301\004\275\006y\371<\215i\016<\005*M<\352x\264<\357r7\275%\304*\275\344\017\336<\222\305#\275\232\331)=E\260-=\300C\277<b\376U\275\014\311\'=\033\252D=\222\315\271;\277\271\244;o\310\036=m\234A=\017J\030\275\224`X\275m\307\325\274\242\006w:me\354\274$\374W\275\256\224a\273\264\231\234\273U\230\r\274\006;J=\003DL=\303\036W<\231\t\323<_j\006\275=D7=\261\346W\275\311v\264\274o\362F\275\003\310J\275\302\371\246;\232\200\010=M\336\373;\347\231\250;\340\350\202<0\263\002=\352\307\021=\214\333\321\274u*\323\274\013\3000\274\347\265I=\362\253\202;i\333L=\333,G=\304[\311<\360-%<\304e>=\202%P=\247/f;r\026\020\275\002\223\t=U\3146=\315f\204\273\214R\224\272\354\003\033=\372\320H\275\273\255\006=J\\\037= \230\026\2754\345\334<\003p\030\275\177\351\316<\235\251\014\275\255z\025\275u\344\305\274\330\310\002\275k\370\020\275\264\030 <\255PT\275t:\366\274ct\211\273y\222\216;8\336\005\275\362l\002\274\036\2671<\304&\313<y\230\245<\311\306\014\275\252]\242\274\177\2319\275X\221A=\3572\212\274Cvd<\033(@=\r\030\216\274I\262,=\262\326\036\273E\254\327<\220LN\275\313\016H\275\332,\232\274\221\216\234\274\353\261\013\275\276\372A\274\234~\376<~<\236\274/\025\005<\340\021\006=\231\224\326\274\021hH=iI\026\275\357WG<\26157\275\323\347B\274B\'Y=\261\303\244\274\025x\014<\225\0049\275w\257-=\300\376\360\274X\340!;\336\210\030\274/\002\204<\352u==V\251\373<*\305!=\335X\\\275\333-\021\275\242\255\r<\375{A=\026F:=\312\325\233\273=Q\n\275`\033\356\274\343\254g<\010\035<=\335\036\006<\202\374*\275\213\342\266\274\336\035\027=\340\210Z=\314V(\274\352\037L=q\373$=\251\321\002\275\304S\003\275f\347>=w\2577\275\235\016]<dOG\274l\3643=\236Z\364\273L_\2109\016\032\261\274\025\006*<\013\271T\275\233\206M\275q\017C\275\211\331\'\275Yt\273<\3444\240<\273lK\275\327\010\316<.9\023<\241\323\215\274J/(\275\n\216\037\274\0250m;\033\357\371<\271\372\346<\200\301\207<\216=\"\275\361\363\312;-u\007\275\2634\252;\257\225Q\273\262\234\016:\200\225>=\220\354\"\274K\315>\275/D>=k-\300\274\251\211\312<\364\364\322\273\300\202\007\275nH\033=\007\333\332<\320\001\320\273\344\3520\275_/R\275\225\307\"<\231\007L=`\354k<1\250E=\360\033\005\275\373\357\'\274\243\243\231\274\025\261\304<yp\254<!\261]\273V/F=S\344\255\274\356V\020=>\n_9\233\014\377<\361X\302\274\241x,\275\376\277\333\274\207\226g;\337\257O\275K\010Y=V\317\322\274\262\252\255<0\235\025\273\241:\007=\0320\325\274\022\377\225<\332\202\003\275W\226\201<\226\362\\\274\204\023\335\274\271\373.\275NI\361\274\322\367\203\274`5(\274\222\240\304<\232\373\000\275\277\264\020=\212a\334\274C\354n\273\316\\Z=\035w\227\274\275\352(=\"kA\275Y\267\214\274Nq\320\274\360\3521=\247s\313<>v=\275\233\204F=\2420R\275\014\220S\275\235b\000=\"\016J\275?xZ\2751\276\324\273j5Z\275\017\017 \275\000\007\016<VX\027\275\026|\n=@\3422\275\002O%=\306\014V\275\334bK=\243d\361\272s\275\317<HU\273\274}\211.<\337@Y;\220\nP\275773=R\021\251<b\013\336\274\303\237K<\322\333\t=\332^\027\275\t\243\t=sHK<cj\r=\t\212(\275O\305\201<\357&)=\037z\256<\214\177\257<\271\010#=5^\346:\215O\006=lO\034=\256X.=\363\023\017\275\366\243\034=\360\372\356\274\003d\316<\036\244x:[)\\=\252W\225\274\31769=\337\361\340\273p\265B\275\235>><pCh\273|\255<\272q\342\033\275\241D\035=F\307[<\234\267\216\274\205\211\226\274\221z\035<u\271u<U\265T=\316q\250<(\353*\274vv:\275G\035\277<j\206\311;\177\251F=JQI\275\262\376\375\274\267\207\211<J\035\036=\r\036\371<0\276\352\274d\353\217\274k\254\370;q-\376;\310\251\325;\001\323/<X+\354;\034\032\325:\206\t\013\275\000\330@=\023,R=\331\354v<\014\215\260<\330\351\340\274i\276\221;\304\250\'\274\021-5\275\326S\034\274Z\210\010=\n\007\013<*\310\355\274\263MX\275v\205\257\274\303\371@\275y\254)\275\346K-\275\026g\213\274r\230\244\274\217FQ\275\252\365\026=\\\010\\\274\346\207\024=\317\327N\274\267\313\004\275\330\275Q=\306g\356\274\t\346)=g\315\263\274\010\202\036<\315g\226\274\370\2172=x_\365;P\326\016=\177\035\314;\034\370\000<\314hh<\202\334G<\305\347\245\274JL\003\275\007w@<\212\211\014=\333\276M\275\2045M\275^v\275<Sf\335;D\230\007=w\272\357\274\363^\350<H\321\004\275Zx\021=\023\213\276\274u\335B\275\225\234G<\017\001\311\273\225\343\006<\216\2515=\037]\203:\204%\263\274\222W+=.RZ\274\303\325Z=8-t\2743>\225;\277\236\231\273\276\303F\275f\242Z=om\373\2742\325\023=\032\225Y=\207\351\333<j\260\320<7\264\035=z\237\2139}\3143\273\t\345K;\0178W=s\250b\274\215\325^<6\377\234:\215\010P=@4T\2758\270g\273\222\340\\;\347/B\274-N^<\275\233\256<e\252\352<\304\002X\275\336\273\251\2743\255t<I\207!\274\240\3434\275\306wo;\216x\357<\3007\374\274\351uD\275\342?s\274\377i%=#\2142=L\201\005\272\300\301\216<\331\tX\275Z\"\037<Ii\250<n\2038\274\364\244;=\352J\032\275\267_\203\274\363\2463=\343\260K\273/\2141\275\231\224\336\274y\327\"=\371hD<\314G\350<\345;\350\274}](;\010\263\260\274F\031\203<3\215\312\274`\2330=\022\035+=Ux\240\274^^\211\274\241\013\231;x1\350\273\243#)\273:R4\275xj\341<\237\263i<\215\323\215\274\261j \275j\314\032\275\002`\350<\031\221$=b\355\217\274N\336\030\275\016\2629<N\253.=\361\251\037=\263\026\225\274\023\271\255<\375\303 \274BK=\274\344\354\004\274v\025\372;\3223#=kGJ\275i\365.\275J(/<\247B\216<\207\265%\275\026\001\336\274\255\304\333\274\321r\340\274\255\357T\275\024<J\275k&W=\343\272\253\273\332\033&\273\202\330\003\2752\270 \275<R2<\226\036\265<`\305#\275^\304\347\274\314\034\305\273V\321\031\275>\325\301\274|\305\007=q\354b\274\n\346X=\253]\267\274^\214\013\275>\233X\275\201\\\272<\325o\371<\325\311\017=;\221]<6P\'=\301\355\355<LI\030=\307\346\224\274I\003:\275\224!-\275|\373J\275\265\234\020\275\"\204`<\343\351\247<b\303\037\275\233$U=\207\325\350\274\263<\353;\374\367\"=\354\"\000\275\265\025@=\242%?=\361\321\374\273+AH\275L|K=\350\210d<\352j\021=\201\0328=\210UA\275\\\215\333\273/AE\274\214\314\242<\327\327O\274\3536A\274\320\222\365\273\231\231\236<Y\005K=\265\257\367;S\341\361\274Y\214\037\275\341y\r\275\214\235\310\274\036\004\025\273\323\346\003=\235\344\014=\250\314\304\274D\317\261\274us\025\275A\331\306<\245\346\023\2750\263\373\274\337\2768=\036\310F=4\3634<\335J\t<T\316\260\274\342\006\322;\032\320\016\275DU\216<\367V\243<\024\312\031\275\376*\020\275\331\005-=\247])\275\"tH\275\332\363\036=^\2015\275\0165\337<\310eF\274;eA\274\217D\352<9\363\214\273\367\032F<\211\301\031\274c\264j\274\243\251l\274\301I\252\273\242\364t\274g\2731\274\030Z?\275X:w;\243\310\246\274Y\013\345\274\351\032U=\002T$\274ps\257\274\337C}<\227X\320<_\367^<\213/\035\274<%\310\273\333\\\361<}\231\247<\242\366.<L\n\227\274\312\305\307\274\336\3645<-\236B=c\037\006=\340\000\026\275?\006\t\274\225\256\215:\231\310\005\275^[q\274\211\270D\275\311\331\260<\313\273,<Bk(\275\024QO<\324\325\037\274\026X\337\274\330D\366;\215\354G\273m\223\035=\343\352\344<\243\334\n\275\223\274\315<\375\362(=H\352\313<\314>N=T\236\007=\244W\036<\307\014\004=GCC<\315\307\360\274\r2\255<F\341-<:p\016\275-\213Y=o\356&=\270\"J\273c}%\275\223\017`\274.u\300\272\025B5=\201\210\016=7%\211<\205\224\033=&\010\263<\246\252\272\273``7=H\240\220\273U\220\t\2751D\007\275x\367\332<\260\216\027<\307\235\035\275\3019f\274\204\217\245<\365=I\274s\222b<\210\307G\275\217O\244<\370\364\027\275(z\032\274\205\247\253\274=\027\317<l\351\365<\201\270\000\275\030\321\340;\372\027\032;P\374\263\274\240\366E<&\035H\275\331\271\201<#\360\033=\230\261\013\272NU\004=\017\355\026;\3165\373\274#$\300;0\004J=\371\030\247<\\x\216<A\020M=\345\350\205;1\017\031=U.N\275\031x\305<!\317\221<\331b\n\274p\260\316<\336\226\t=\341\216\021=\24070\274\360lg<}\017R=\345\306\003\2756Q%\2756\206/<\034LE=\324\313\267<)\364\214\273| \n\272Lm\241\274)S\t<\312^\026=\002\363\351\274\347)\346<\272O\n<\276\nO=U\267\023\274V\316\356\274~\311\312\274\3178\223\274\244\331\037\273X\303\246\273\370\036\354\274\376\353\224<LM}<~U\\=\020\343!=\212\347>\275\262\356\264<\350\357p;\345\376\025\275\223p%\275/\315\265<O|\262;\204\340\306\272\302V\206\273Z\325\273;-\326-=\215\276\230\274\345\227\233<S\213\222<\353r\017=\257\370\243<\343\177\025\272J6\266<\322\207/<\260^\235<\2677{<\347P7<\365u3\275\306:8<U1-\274V\211\352\273\346n6=\365\r\323<\256\206*=]\236\226\274\370\222\377\274\216\n4\275&y\375<\332\226\306\274~\335\265<%\366\267<\211\331A\274/->=d\357\306\274W\250\205\273\345\325\341<\27762\275X\2603<=\264\006=\376\214\005=I\356\353;\214OR=\373\207\347\274\347o\241\274*\356\r\275!\314\001<\032\331T=\2654\021\275m\002$<\311k\346\273\310\271j\274\262[,=8z6\275\202\377K<^\022#<\2044X\275Rd7=?\346\237\273N]\275\274\366\244\332<;\316\034=\007\315\366\274\236\267\317<4\005\312<\372p\307<?\245\247\274!\003\240\273\303\022G\275\344?\007=\317\260\021\275\004\323\000\274\375\221\371\274\027\002a\274\333vU=i\275\204\274#\346\r\275\021\2665\275\305pI\275-\'*\275\204\354\373\274=\3362=\375[\017\275Z\007;\275\255\271G\274\311p:<\030\304\306\274\021\005\354\274G\323\305<ceI\275N8U=K\346(<\302&\246<Vs\236<v\366I=\271\317\232\274\203\2763=#\320\374<c\2349<o.\320<`6\223<\224D\325;\376\2106=Z[$\275]OA=\220\377\374<\030f\006=\023\266\240<BX\026\275\217VB<\2515\265\274B\270\362;(\271T\275\222Q\207\274\007\246\245\271\'W\020\274f\263\001=H\372\215\274\004\362\022<\370\013\014\274\002@\005\275\377\300\321\2744\211\262\274U\261\260\274\312\360.\275\375\017\232<\343\323\253\274\021c\300<\247\216\032=\353@\014\275\371\337\376;\037\306\'=\263\265R\275\030q*;2\243\024\275\317\233\313<\247\314\225\274\314f\204\272\236n#\275\274\303W\275\222 @\275\322\246\235\273\374\315\366<\357\256j;K\000\311\274h\215\324<\235e,=\340*X\2753\224C\275\271,\036\275\"=\327\274j\230\035\275\327\341\t\275\245\322[\275\031\253\013=\375\033Y=B;\373\273\006\020\305<k^\217<\207X\324:_L\343\274]!W=\362\312)=\305\025J\274\245>_\274\002\331y\273SA.\2704\271\205\274\036\225\204\274>\276\244\274\332\310\300\274\000\241\272\274b\312d\2743\'c<\317\034>=\263\n\371\272\202\276,\275\336\221\027\275;\347\255<C\034\330\273\321\255\':m\000G\274\237\242\034=\3049\240\274r@\306<\210\321\017;\336j\340\273\301`t\274\251\302\314:w0R=\001v\033=s\263\003\274\322}\276:\274\265\322\273D\270J=\255+;\275\203o\317\274`jI\275\216H\352\274vT\260\273.D\255\274\277\371\261\274\216\271C\275\021\347\365\274\252\200\200<\345\347\265\274\034m\307<=\023Z=\034\201\330\274\022\364\013\275\333\237-=\367\266W\275\211\324\354\274\306\246?=\031C:\274\355\362\364<u||\274\307\002Z\275\276\360\024\275\014\342\276<\204P\251\274\202P\223\274>}\317<\262\272\006=\357\014\010\274\367=\004<N\345\306<\362\253\\<t\036q\2748eR\273t\033\323<=\005e<\304m[\275\016 $=\301\246\375\274\215\023*=\3506\371\274\230*\330<\240y\314<5u\336\274\362\037\262;\306\262\267<\365\2248\275H ==\221\277^\274\252\2524=\276\262 =\231\2566\274\224\307Z\273\367\333M=7~d\274c$\r\275\n\306Z=\r\3752\275\264\340x\2740\020O;[m\240<\220\272\312<\356\345\311\274\242-\253<\220\213\033\275TaD=I+\016\275\3025#\275\035\352\330;=\006\223<\331Z\002=[ \252\274\257\300Z=x\330Y=T\3759\275:\260\215<\310E\353<\271\340J\274\257Sm\274\360\375P\275\301\033\377;(\240==_\312\'=\227\026\332<Vhq;\341\352\317<\2329%=4\331(=8+\345\274*\034\022<\203\211Q=\276\324M\275\003\244G<\316d\007=_\262K\275\220\342\227<|\202\260<\220\354\262\274\031\213\003=\300\331\026<ew\361<U\001\234<\362\032U=S\221-=\360\024W\275R\212\226\274\3749@\275\333\020.=\032X\211<H\264L=F]\352\274\247\223\336<\366\204\030;\037\027f\274$~g\274.C\000=\263\302N;\305\363\301;7\233C\275@a\271;\026\345.<\207\332W\274\24226=\257\334\343<\003\233\243\274\017\355\014\274\345E\335\272\353\n\3138Gl>\275z\331\311\2740\031\030=%\266\021=V\266\334<\030\375X=\245\375\267\274R2\225<\0107*\275\250\331E\275\215\220\336\273\316@I=\030\367\"\273\355\366\334;/f\022=\265\027\006=\275\r\250\274\334IH=O\317+\275\000sA\2753\020\365\274\n\265\221\274\252\326J\275\373\3279\275Z\3319=\037]+\275:Y\262<\373\264\335\274\215\270\236<\004\363V=:\346\013\275\333\226\226\274\332\'\033=\377d\\\275\264\333p<\330\350\224\274\311\350O=\3561\310<\202\0363=\374\246\025=\003\374>\275\233J7<Gu!\275\232.\264\274\347\2170;\252\275\245\274\200\005 =\036n\273<\243\271\225\274G\006\037\275\2209R\274\"\372\017\275\367a.=a\264\004\274\257\313*=2\335\270<h\025\035\275\027d\371\274\241\235\342<\037c\006<\026\2248\275\247K\204<\375\233;\275\006H\260\274\240v@\275\256\224\035=j\214L\275\251.;<\375<\316<\020\265\004\275\275\201 \275\240\025\235<~E\362:\0364n;\274\371/<\016\226\007=|c\037\274\036\010!=\251\207\204\273r\231.<\036\275\216\273\202\200v\274\266\304E\275\347\017\020\275\206]\237<\353\001A\275\032\275K\275=\2054=\372?S=\250\300\252<\203[C=\366\324\216<xc\362\274\202\2166\274>Y@=9\274Y\275|\375\002=M\307\277\274\026jV\275\3542\314\274\017\311\'=\376uv;\205l\262\274\257I\373\274\336<\345\273\007\267\222\273\373\265M=}\245\017\275\271\014\310\2740\251\307;!_\020\275\030\305\373<\010\317\201\274\005D\325\274\342Hg\274\005\275\223\273\327`\007\275\344\326\035\275\363\013:\275\263\272F=TT\277<\231A6\274|\337<=\342\2359=\362\307\037\275\270(\027\275I!\271\274-\230?<\313]\010=\2426\027\274\177<\206\274\231\007E\272\314\257\010\275\353\253\371<\340\330R;\031\"\254;\200c\r=\374\237)<\245\036\363<\341\340\363<\234\213\264\274\274\240\031;Ko!\275HIK\274\302\375\327;?{\242\273\304\033o<O\363%\275mk\254\2746b \2745\204\275;\234\245[=i\177W\275\202\010\026=\177\021\031=q\361F\273n\3679\274\354\362\233\273Ty\002=Qk9=X\213#<\000\266a<\257\0054\272\017\303\202<\313F\354\274\r\022\016=\2715\325\270\204\270\271<X\255\031=\2000\261\274a\344\020\275\202/\025=\000\2428=\223\007\206\274\342\320e;x\\V\275|\346\275<\257\306\006=\366\331Q=\"\027\000=N\354\265\274/\276\313;\021\257\226<6T\243\273\315\014-=\351\312\363\274.\255\320<\201~T\275\326\036\200\274\032\232B<[\213 <v\323u<\321\235\210\274\023m{\274\ni<\275\247`\033\273\350\353\356\274\377\013\030\275\360n\243\274^G-<\r3\004\275|(\031\275m\222\340\274#\255f<\031Z\035\275N\206\037=\327\364}<\034\225:=\027\354\020=\313\"]\274\327\'\235\274\317\022(\274\274\234.\275\223\271+=\331\250\307<\342\372\021=\177\026\372<j\316\022=\363%E=\0369\2659s&\301\274\2450\371<\021\021`\273\005\221<\275T\\\000=\017i0=\016\0176\275\366\242R\274\034\334\322<\177\336\2759\261\240\"\275u\355\034\275N#\211\274G0\033<\366\003\006\275\211D\273\274\031\025\310<5\236\017\275J\232d\274,y\r\275\361T\354<x\201\342\274\243\230\323\274\246}\010=.\336\003=T}\360<\233\025T=\226\210X\275\360\2635\275\343\276\262\2740\236E\275\345]\"\275\352?\037\275\002\376\035=7u\225\274\022M0=\260\234\023\273Ct5=P\000Q\275\013\314\024=#~\002=}/\303;\351\353\226<\227\322\253<\344\037F=s\315\n\275\244\000=\275%\356\"\273\215\003\247<\33689=2\204\331\273\233t|\274;0\016=\367\226\320\274\217\323H\275\302\'&\275`\217T=N|\221\274X\366F<\0376M=G(S:\307\0167\2742?\033=\026p\307\273\236\037H=&\3235\274\271/\365<\r\036\014\275~\320S=j\236\024=\362\035W\275\303\0009\275\001\317;\275/\355@\275\024|\362;\300\244\204\273l\017\237<O\r\336<\210y@=\005\364\"=\220W\226\274C=\233<\322\200\200<\320\301V=-\2762=\276\232#<e\353U\275\305:I\275,\274\000\275\361\243S\275\0307\317<z\2530\275\263\031Z\275D\233(=\327(#=o%)\275\301\257\022<\241mL<x\'\026\275\254\004\n\275\221z3<\317\017.\275\337Nn\274\024\354+=\261o\"=*c1\275\032\216\002\275\210UG\274:\005\370<\263 \342<\364\\\261\273\030%\037;:@\027\275?\006\005=\365\256\'\274\207\007:=\317m\177\274*F\324\274\\\354\000\275\305\254\252\274\r\000Q<e\3375\274\212\374\"=\037\302\324:\021\310\252\273\200uT=\246N\003\275)\264)=\345\243+\275U1K\271zDP\275\337\301\'=\003\374\026\275\375\\0=8l\274;(X\031=\262+2=r\260\004=\320\303\200\273\235\225D\275\357\3337<I\371R=\225\3601\275\247\360\211<\240\375\321<\352\263R=\313\330\026\275$\211X\275\013\244\207\274W\212C<\347\332\320;[$\037\275\034\025}\274\375\230\360;=\303G<\342\247\274<\275d\266;\221\255\021<\245\333\234<\222\266o<\236\233==\001z\224<\360\336L:)\2631\2738\032\351<\020\221D\275\234\355\350\274\270\360$\274\361 \223\274\2205I=\371\240\322\274e\'\002=.z.\275\362W\364\274{8\356<+s6\275AHf\274\261o\246;\265\276Q\274\351u:=b\"\212\274\000\254\307\274\274\261\006\275\222\311L\275\rfJ\275I\364\200<v|\324\273\362\361\211\274\013\200\247\273h\363C\275\n\210!=\371\327)=\301\230\260\274\2316*\275?g\003<\207\307Q\275r\232O=\005\264I=\2773\211:\322\374\016=y-\274\274T\021\263\274\375\3275\275\350&\034=\2154\021\275\211\030\264\274\237\342\364\274\034\217\305;\335P2=\246x\244\274\016s~\274\314 4\275\002Z4\275\362m/<\312\326\010\275\003D\010\275\200\277p\274\203@\035;v\207\004\275\233\376\005\274\243w\037\275\217\263\315<\217\246==y\254=\272\027\3739\275J\353B<c\223\252\274\2446\361<\353\000@<#CN\275\rcT=\241\037v;X\250$\275\267\014L=X\376K\274\220\322p9.\010F\2741\302g\2741\354$=\242\354\003\275\337\332\021\275\340\302\377\274\351%&\275\310\300\356\273\027\352#=\326\315\370\274\022\001)<\006 G\275\224PZ\275\246`R\274\245\335I\275z\177\003\275\361\037\204<\3354 \275\037\242=\275p\314\360;E\375\240\274\r\0267\274k6\301<\342\243\364;\212)>=\303\030F<\302\030\250<\023\2707\275\210\033/=`f5=\333\211T\275\356\027I\273H\314\000=d\244,\274\350\353\t\275\231\020w<\177Ng\273\330q^\274f\365\030<*\2329=)\227\n=\027\322\314\273\316\027<\275)\027K=\250y\n\275\241\321\031\275n\311\001=\355?\257<Iw\244\274\346\251\236<\014\335+\275\347\351L<\377\2223\273\376\2112\275\020\r:\274`\343\334;=;\270\274\221\376\326<tt\021=Y\230L=\001\321A=2H\030\273\252\203\234<\331\377\257<\245p\367\273A\0132\274\3428\215<\037\3246\275\207\326\323<*\262\r\274M\200\334;\2708~;\344\276\242<m\200\260<\317)L\275\355\336\r\274\001\225\207\274\262\026\034=\210rE\275\346\367\276\274\257\r\356\273\241\366\263<\020#\344\272n\324[\275J@);8*\274;\357\026)<[3\"\274\017\000X\274\252\365\014\274.\227V\274\202\000 \275\2074\020=\334nQ=}\270?\275\207j\322\274[;?\274\375<\021\275\255\177\275\274\302a\016<3\003\203<\231(z\274x\033\r\275T\371\'=\345\206\030\273\340\026%=hV\300\273g2\226<\333\333\234\274\242\265D=\246\264Z<\302I\254<\035\330\"\275\3227Q\275j\217\212<@\260!\275\261\260\023=\221S2\275\226{\010\275\031\000\211<,\030\312<\246\233\361\274Jq\312<K\257%=\355\331\356<BC\253\273\201\003\250\274\337j\016\275\207\372\031=;\2123\274\177y\344\274\242\364\372\274\242Q9\275\267\346\"\275\341\003F\275D\n\204\274\270\314\n\275Qo\241<[\333V\275\353\211J\274\215c\212;\214^\362<\241\377\033=O\237\014\275(\242\347\2727o\004\275GM\202<m\026\375\274\321\340\033\271\232t \275\234\014.\274\335l\274\2739_\266<\3039\353<\267\202\031=\300\334\346\2749\326\001\275t\017y<!\3657=:\233%=\204\303\371<\202\272*\274\276\254D=\203\240!<\307Z#=\271\321\304<\377\205\033=c\2554=8\322\204<\214\354\240;L\337\205<(kH\275\017\320M=\"\026\222\274\320\"\002=;\263\'\275\305U0\275\330\3009\274\312X\342\273\345\300!=o:H={\364\031\275&\255H\275\230\262\356\274WQ#\274\311\277\272<\242\201\030\275#\313\026\275\371\353.<\245\3756=\213@\025=\317\026\031=\254\223\027\273fzX<\317!0\274ov\237\2730\353\001=\314\223X=\202\004\020=\257c\270<n\317\022\275u\377\315<&\\0=\302\372?\274\311\240g<\227,\311\274-\036%=$!\025\275q@\307\274\252=\017\274\002\247\037<)u\267<z\276\256<\207\021\263<V\003\227\273}\3041;\324\036\241\274s\234H<\360\211Y\275\200{,\275\347q:\275\013\265Z=\257\031\367;\312@N=\212(\327\274\324,A;#c\242<R\002B=\303\235\212<\267\310\216\272\\c.\274\332\310I<\220\254\343\274Y&\211\274\034U\270<\207z\n=\367%f\274c\277b\2749s\034\275w\335\036\275\373y3\275\271N\013=x\026Q=a\034I=\014JU\275\301\331\260\2748\231L\275\210\303\311<\316X#\275i\005\221\273\2120\220<\231\231!\275Kc\034=nY\315\274A\255\037=xm>=\321\024\345\274\234\307}<C\010\"\2750\002\373\273P\260A\274\276\217F=$\001\002=\363\2779=SU\337<<\336\221\274D\262\373<\300t0\275B\032[=\241\261\321\274z\315\321<\022\230W\275\332\220?\275\020\205\005=\234\300!\275\355\2519\275\206\337\316<$\201\361\274bn\'\275~\030~:\253Z\004<+u\341\274\221o\202\274\251\377L\275\017h\212\274=\240\214;\304\366\363<\366\303Q=\245B!\275@k\273:\014\300\277\274\376\3430\275\223\222{<\301\001\254\273\314t\020=\344w\002\275^l\005=\270\320h\274\270\321\275<G\373\013\275!k\024\275ONt\272q\274,=\210_P\275\312\266\256\2733\021L=\220z\r\272\2360\305\274\311\344d\274\366\352B=p\342\007\275[4%\275\326\341\"=\243\246\351<\363iZ;pb.\275J\305\220\274\261.B=kR\224\274p\326\003\275A\021]\274\345\200v\274\010\025g\274\256\\#<\2176\017=\025\316\272\274\206\331Q\274\366\357G\274\367\034r\274G\264\005\275\267j\260\274?\024\301\2743\366\001;\235\230-=\2458\327\274\264BB=-\254&=\020\010\363<I\031>=\032\344\333\274\334D\310;_\251\\\274\225\326P\273\235kD=r\343\255\274\306\225&=\261\030\225<]\355\227\274\351\307\340\274H\260\322\273\353\263R\275\2270\257<\230R0=\352\351\367\274k\177\'\275S#\004<d\027\353<&\257?=\331\271v;\221\246.\273\221\271P<+y;\2744lH9\336\036\321\273\247\002\323\273\24347=\260@\315\274\027j\217<\0078\010\275\034\203T<\2663{<\202n\030\273T9\252\274.\016.=\302\326 \275\250=\254\274\t\302P\275\274\367\030=&\353\t=\314\266\346\274S$#;\327\r\251\274\211\274u\273\003~\360<~JJ=!\250$\275\216J\227\274j\205\036\275w\r=\275\210\230\n\275\211\021\\\275\347d =\206\306K\275\277\323M\275Ys=;PT\004\275\271\331\335\274n\017Q\274u\204\201\274\206\010\371\274g\304\001\275\232\340Y;\354\361`<\033vA\274z\232\361<\027\360\254<\020`\'<\312b#;\277F\331\274\217\tz\273Z\257m<\376UN=Fm\254<\251\330!<c\2758\273\342\254\004=\307\016;=\305\326\236;\321\\[=\372S\302<\357O\r\275r\354\367;\207\324\344;Rn\250<n\030(\275\335G\021=\024\204\214\274=:\333\274\216a\253\274h\231\264\274\0370:=1aJ\275\315\0271\275[\0262:\266\036r<)\313\370;\316\326`<\272\374Z=o\212X=\373\300\233\274\ni\373\274\355\252\300<\223\240\301<\343F\246\274x\227!\275\317\340\222\274p\333o:c5\274<\313\221\216<\032\303\375<\231\221\361\274;\314\365\274u}=\275\367)\010\271\232\364\375:\312\025\023\275+\234\016=\242_\314:\372QR=\364\376Y\275+\252\240<`B&\275\326\320F<\256\327\306;B\023\216\274\341\260\342<9\345+=Fz:=~w?\275\026_!=y\017/:\362\347\r<\245\205\335<28\242\274\236\022Z<\351\rN=\332v\027\275*YF<\265K\273\274\231\242T\275\'\361\020=\202x@<\n\377\003=\221\257\274\274\332\236S<\014\204\367<\230,\221<\241\250\273<\037\204\\=\373\212\222;\177\304\003=\006\314\035\272d\342\341<\226\265\345\273\274\002K\275z\243\314\273\334\007\027<\333!\024=\220\323\312<}\007\022\274\352v9\275\305i7\275DR\020=Ih\376<\203\307\320<\222.\r<\024R4=\205=\244\274\007B$=%\036\252<\223\254\032=\004N7=\314\357l\274\366\3340\275\251\021\033\274n\006T=\333\306[\275\272\367\220\274Pu\302<\021\307\334\274\017\333\007<$\277\330<\370~\255\272z\265\327\274\034\001G<\21361=`\035=;\341~3=L\3033< \334\031\275\004\"\341<\307-\r=h\235{<\354\320\320;;\216*\274\244\256\270<\353\323\017=\316\203\276\274m\264B=T\313\321<\222]\326\272\346+8=\223+~<\204\210X\275\275\343\n\274\327\226&\275d\207\355;\270\350\265<\356\2342\275\301;\276\274\004\264S=\264.\233<\255\351\366\274K\353\232<FG\315<\345\031.\273\264?\244\273\321\014\036\274\262\321\205<\250U\t=\256\334\203<L@\'\274\332\232(=\271@1\275\305\271\364< \232\230\272\242\217\\=\350\366H\275U\315\037=H\306A\275\231T\330<\210T\243\274-\237&<O?\372<\273Xl:S\355\200<\221\265x<\274\211\022=(\203U\275yh\246<\305z\023\2755*\034=\'Tz\274\032\3038\275E\274\213\273T\370\203<\244\023D\273j\224#=\001\203\307<\277\265\224<\214#0\275\364 \215<\202iV\275\237R\000\272D\263\317\274YFR\275Z\251i\273Q\302\022\275t\337\361<\361\271\234\274\217\214\201\272+\237\235\273\177\270p\273\022\t\021<m\246\311\274\363\252=\275+\3141\274b\271Z\275\323\317U=U\350\030\275\304\014B\275-H\263\273\202\202G\275k}\004\274/%\006\275\213\217\356\274\\\'!=\302\324|\274\335\371\334\274\337E\t<T\274\356\273\343\026\355<\003\214\301<\310\001\336\274\360\315\004<\037\205\223<t\256E<\004H\242<\357\373)=\204\311W\275\362>7<\342\2665\275|\226\035=d\240\332\271\230Kr<\301-\236\274K\320#=\256\030\007=\215\013 =\265\027N=!\200\311<\332\355+\274\275\330\026\2759nD=\327\225\366<\373\362\306\274\"?\240<L\021 =C\330\360\274\223A\035=\224\320?=\023\305E\275\025\021\005\273\227\322\'\275\024\031\375\274\235\272a<\214\337\3629\307\267T<\224\271K\274\277\350\002\275\336;\217<\341\3122\275O\0040\275L\242\000=\343\233\253<U\200/\275\242t#=\330w\007\275\221\213\217<y\253@=H[><us\270<\340J%=Y\027\211;\235\220I\275\245\022P<{\251\023=\221\232\325<\201\304\362\274\000\200K=\"S<=B-\010=E\252)=\3214\037\275\022\3148\275\233\312J=\366q\310\274\325\243\377\274_\240\354<z)\027\275\362gg\273\212)\345<\262\224\377<\230{\260<c\036C<\360\325\235\274)\3720<D5\005<\256\257\200\2739i\320:\266BE=+\256D\275o#\017\275\357\244\006\274\007\265<<.uX=k\271\035\274\031\260\323\274\335\010\313<\374L?\275C\036\017=p\241D=\346H\273<\251\021\345\274c\034\013\275l\004`\274D\270\007\275\322| =\364{\266<\337\3162=\206\257\206;\211\270\220\274\324\377\325\274/F\032=\2341Y\275\271\215\013\275\300(\027==\336\031=NC\211<\027c\274<&Z\n\275Hp\030=\014\361D=\'eb\2723{\354\273\222kB=\303\234\024\275\252\260\304<]\214\007=\257E\010=\373Z9<\031H\372\274\242#\014\275\303\375Q=\321\356#=m\342\257\274\371\r%=C3@=O\263\003=Mx\007\275J3\031=FV\372;\006\310\351<J\375y<T\3579\275q\366y<\342\215L\275\242\355!\275\217l\377;CH\332<\331\226,=\371\'\265\274\307\250\335<\315\001U<\215\353K\274\325\303\347<\177r?\274\373\2244\275\275\353_<\255{}<\353*\316\274\016c\036=7\376v<\t\314\307<\227A:\275\354X\252<\022/g\274\264|q<\000\266$</\264i;D\212\032\275\265t;<%0J\275=\242.\2751\030\032=cH{\273P\000\365\274\332=\202\274A&\326\274\321IE=* \036<U\032S\275\217\0254=\246\345\237\274\210\261\265\273\262\223\226\273\3079\001;\214\301/\275\002\341\334<@\276\227\273\311\327j\273:\250\277<jGV\275\335\220\257\273\304LR\275j\rL=\001<\341<\334h\024=$\014\r=\276\302\240\274A\332Y=v\235:=~6\000\275\274\237X\274\224\205\006\275\342B%=\003_\032\275\253\236q<\342\207\375\274\250\"e\274G\235\207\274\3756n<\203]\021=\301;\000<\220\275\327\273_\325+<m\256R\2744\227\272<\241\027\362<\351\322\000\275\021\353\315;\350!D\275\331y\214\274\207\003\031=\022\375A\275\223\342H\266:l\037<\262\212V<T\370\006\275{I\376<\024\036H=w\241\023\275\335\234F<\002\301b\274\304\033\013=\344\331(=TM\323\271\01485\274km\241;?\312\216\273~\261;=G\261T=:W\263<4\2647:-\n\376\274\re\330\273\335;\321<\317[\016\275\227W,\275\021\272\003\274\005\351\215<\260C <R\365A\275\tq1\275\214\376\260\274\327\021\354\274\002\"\365\273\035\221\r\275\374\241\263<\307u\225;\013\021R\275@\245\312\274j\250Q<\260\2001=\337\030.\274\244\267\034\275\253\363\335\274\307{\220\274{\232}\274;&\321\272\2338\3528\021\270j\274\275\232\335<:\304Y=\332\326\030\275\344a\244<\227\3753\275^\246\301<L\356\327\274\370\344A=\037\240\324;\2246\342<\310fX=q\263\020\275\356\010\'=~\211\210;\245j\024\275/\301\243\274<\375\235;\264R0\274Wr\231;\214U\317<\005}\331:\200\321\t=\251\354\223<\334=H=\303Q5<\245\326\033\275\252\306>=\274\245\215<X\347\004;\017\303\243\273\355)\340\274\307\352.\275\274\344>\274i\360\032<\310.\001=\340\n\200;\252q\241<\005K3\275\263\237\212;y[\313\273\177\231\334<H\203\373<%\304\002\275\345\232\233;n\215\216\274\261\315\r\275\020if;\213\016\037\275c\313Q=\252\377G=\200\252=\275\323\314R=~;\210<q\255@\272\223\220W=w\020\'=F\006\335<\311\261E\275S\221\254\274(:\244\274EhT\275 \035\334;\321\034R<\355\337U\275\241&\272<\254\324\264\274J\302\330\273e\006\022=\3711\371:\n\201E<84\354<=\'X=@\345\275<p\341/<\303\"l;1sp<\003\2308<\\\3102=\270\277-\274\327\304\013\275\027\276\242<_;\265\274\220\267\306\273\321\200\344<\317\220B=\235f4=\306\373\214\274<DT;\022\313\263\274\333\377\351;\304\307<=\033J\347\274Zu-\275e\341\357;1\317\235\274M\367\261<\375\020\021\273_*g;\n\266\303<Iw\262;\016\207\204<\271N\031\275X\003==\214W\017=\214\261\233\274\231\310\024=\232`\343<\031\222\t\275\"AX<\204\307\204\273\016k\030=\362\257[<+]\300<\276\324\226<\324\254Q\275\355\262\231<\255\033M\275yA\301\273\247\230\250<1C5\275,^6=\327\0177\275e\372\324\273\030;A=*\020U\275\'\274#=QH\262\274~\357!\275\202\300\211;(\271\207\2741k\014=\204\2508<=\312\324<\230mC=\214I\233<\260P\034=\356\026j\274PC)=\004\266\372\274\363\307r<\032H\003<\017\346:\275\253\0041\275\337\361\031=(\362\027<\267\'F\275\211/H\275\243\300\034\275\313\361-=\206\271\336<\337\020\302\274\203\211\211\274\264\276\005\275\331*T\275\\F\003=\013\022\005=A\372)=o\243\'=\257\345\006\275\014\325;\275\377\325O\275\315\3302\275\265m\262\273\314$\216\273\027`\371\274\320:\375;\000\326-<\242%\031\274WKu\274\207H\326\274\224.$\275\257\253\322\274W\344<=8R\347\274J\031\277<\241T\312<\3060\205\274\203\007\022=P\315\374\274N\304B=L\342\356\274\366\362K\273\317E/<b\345\013=\365\363\026=RA\261\273+\322\237<\t\3651\275\321\216\024=\263\322T\275\001\224\246\274\233\326\\\274\n\211\277<6i\257\271\010\312E\275;\376\231<\344\nN\2753s\262\274\355\3644<TS\213\274\317]!<T\266n;W\215\021=I\370\211\274\276i\316\274Me\373<\007\001\020;\240\324\"<v\335?\275\002\337\321\274\tb2\275\237\013#\274d\327R=p\2108=\243\2514\275z;\313<0F\020\274\376IA\273\214\355\302\274-6\031<pz\313\2749EC\275\270\271\232\274+\300[\275\372\261\036\275Zx_<|\311B\275\243\356O=\354\377\267<\353\244\r\275\013\3257\275\017\364\357<\226\216\330;G\215R\274\000v?=\re9\274\265,\027\274\347h==\021:\022\275Z\002\025\275\246!@\2758\200\233\273\225\204U\275\2120\031=\265|\033\275\353\003\263\274\227=\347\274\306\241)=\001B<\275\343[\340\274\305\017T==\344:=\000\243\325\274g\023\310\274;\372\213<10\025=0\350\036<\313\234)\275\362\024\177<jc6=*\020 =Nk\225\274\351\214\017\275L\006X\273\365.N\274\237\314\205<\210\206\201\274\202\313.\274Y\305\314\274}\355\371\272\366\274c<\262\253U<~\341\004=k\244\027\275\271S%\274\353O\262\274-\2174=L/p\274\327\255:=\232#\021\275k\240\013<\013\252\207\274\023$ \275!\315e;\274q\201;\325\372<<Bd\343\274\035$m<\235\027U=Bn\222<\346i\'=\317\266\372<\251\007\016=\344\n\316<\325\367\315<\327T\270\274,nM=\252\207\345\274c\220\032<\316I\007\275\255\220\260\274Hy\001\275\313j!\275n\212\315<Z\274&=q\361\001\271&6\033<\001\246+\274t\346\327\2743\273+<\032P(=\325\373t\273J\366Z\275\327\357Q\275h\3027<C0\031=\325T!=\342m>\275\260B{\274?\312L=\217\230\014=\000\357\241\273m\275\034=\310\241\264<\376.\332<\375b\277<\200\362&=,o\257\274\222E\247<\017Mf\274\314\253\260\274\376\226$<\243\362\230<\357\366M\275*3f:DQ@\275jD\201<]\322\364<\247\020\242\274\302\322\241<b\332\240<{\356U\275\344A\350;X\335a<\342\374>\275\204\3426\275\304\245!=53\240<\023\333\242\274\361G\032\275\241&\220<Xv\304\274\257\326$=\314\342\005=h\t\255<\261\256\'\2735L\324\274\037\037\277\274N\002\273<\306\032U\275$\362\024\275\n\035@<\266\225\r=\340\231@\275r\240\332\273{\266%= %\262<\320\223p<\317\003/\275~!\200\274W\337\205\273\335Zf\274!\320:=\020\351E<f\032\037=%\265X\274\346k\314\274\226\215\342<I;\267<\340,\244\274\246kS\274[\205q<\017\177\034\274\211=3<6\333\'\273\213K\256\273\351=\253\274\326\020M=\364&t<\205\207U\275\371\022\353<J{(\275E\375\237\274g:\244\274\020\325\023<\236\214\244<\251\346R=\201\232\014\275!\005\342\273t=\002\275\020w\377\274&\005a\273x\345\262\274\216\261\340<wM(\274x\013(\273\217?Y\275\330s\345<$\222Z=\013\374\006=\206\026>\275\005\203\020\274)\223K\275\246\001\004\273\030\274R=J\005P=}\"f;\336\023\255\274\3262I\275\223\020\034\275\354\021\255;\277\256\242\274\222\266\020\271\2204\217;\200\022\032=\317[f\273\250D\024=\366\255\351\274\017\240T\275Y3X\275(]\323<Y\360\017=W\375\002<>x\343\274\256\350\264\2730Wp:+(j<<\221\275<\2469\376;;D\344\274\\\337$\275\225\327\240;x z\274\000\355\214<\326IR\275\267\241A=fM\343\274\024F\372<Aw_\274Y\313\257;=\021\213<\222\225\343\273\021/\217<Z\004\005\275}\315+\275\027\014\334\274\273!\257<V\342\033\275\376\343\334<\271\213\023=\257a\020=\246\376\3738b\341V===\024\275\252:Y=\240y\212\274(\321t\271\264\236\370\274\214\246\266<\247\022\366<?\234\024=\202C\274\274*`1=\367tw\2734\217g<\177\262\367\274\245\223o9\364h6=PD:=\032h1\275x\310$\273\365\235\322\274\271+N\275CFH\275\247\335D=\'\341\003\275\370\013P=\032OL\275\243\207\204\274\245z\025;\377\272C=\252\331-=\226\356E=a\261\003<`\252\315<I\331\014\275\244\t3\275f\377h<L\325X=\272\031F<\373\014:\275\314\203\270</\365;\275\210\315\373<\346s\022\275\247\346[\275\271\277&=J\375\214<?\334\021=\212u\t\275\372\217#=\177\322\356;\243\265\222\274yFy\274\272\270\221\274\213\255\332<#\270\010\272\223\300\372\274\375\373\037<\243\347\344\274)T\';\275jL\275\342\207?\274\273\257\344:-\227\312<\217=U=/\3660<\255q\245<^`\313\273\322>\\\275\023\333\030\275\224\207\277\273\225\312D\275\277J\026\275\267\260\225<\232\264\026=H\326j\274\236\006\207\274\317\343H\274\317\0037\274\037),=W#\221<\344*\210\274\270x\270\274\325S&=D\233\377<\247\336[=pbA=\303j\201<%\n\352;\374\3730= \326\350\274\"\272Q\275*\237\r\2752w\272<\204\226\014\275TB\322\274\264x\026=\334\004Z=c\375\340:\361\273\370<\345&\014<\351\265\r\275\201\305\325<\347\205P\272\340\266\372\274z\3141\2750\255\275\274\314\366\"\275n\357\001<_q\000=\226\021\332<\373f\260<9\337V= \2137=!\236\022\275D\216*\274i\313\262\273Wgm<\323\343\273\274\201\270\217:N\346U=\263\265A;\302\357P\275\367\333\357\274,.\231\274x\\\031=\277\354,\275I\246\233\274\"\272:\275\023\263\027=H\373\007\275\340Hv\274\025X\343\2748c\233<\0253?\275X\032\004\275\2517\213<Ai\220\274pJF\274\004\275z<v\214@\275\033}\240<]TU\275\021\310\276\274\375\201B<\360\213\331;I\031\340\273*[\331<\023k\223\272\263\304%\275t\365\356\274\362\235\"\274\200\346\216\274t]T=\353c\277\272H\336F=\"\303\024=\254\353\343<R\005!=\244\256\032=\016\360\301\274\240\215\335\274\004\362\017=\025\224Q\275f(\304<\367\377\036\275\261\227\010=\'\303\025=oS\255<\215\304\331<\027\"\356\2742\351\r=\033\2030\275\2145\336\274`\216\341<f\237\231<\360\3053<\205\035j<\342\244\377<\207\016\336\273Cb\033\275}\266\325\274\323\024\366\274\307<\010\2750v\246;\233\001\001\275\306Z\267\274\235\016;\275\246\270\033\275\363\314\251<F\233\016\275%~\013\274%p\010=bv\201\274\363)N\273\036\212\020\274!*\003=1\2600=\365\275?\275\254\014\335<\0160#<\310\371\030<K\243\006\274\2721\250\270\254`i<\240\033 \275\266\340\360<\270\354\014\275\247\246\227\274L\035\306<@0R\275B\364h\274\265\216\322\274X\300N=(\017;\275\207\371;\274T\332\240\274r\311C=\016\311\016\2745\244A=;\327\323;\024\3620=\216E\234<\315=4\275\333r\335<n\346\010\275\362\263;\275P\335Z\275\033\371\330\274~\223\326<\327\375\210<5\0266\275\2759_<A\244I\275\314\214\200\274\305\377\003=\007\003\212;UR\305\274\320\325\327:\243\353\034\275\367 \236\274<i6=\'\375\246<\334\245H<d\000\033=tH\016<\016\302\316\274&\240\007=VZS\274\257\2073\275N\352\333\274\360JB\274\272y\236\272\247;\024\275\224\177\"\274\321\231H\275\373\204\317<\341\211!\275\\h\004\275c\255\207:\323\317\315\274\233t\316<\225\367\024=\341\2360\275\326\221\n\275\003\336\225;w\243\"\275\271\371(9\326\324\276<\314\316\260\274966<\217\223\231<\331\263\227\274n\344\022=\001\"h\274\022\202\240\273ke\037\274\274\336F=\264\363\006\275a\2665\275\306\221\253;F\230s<\355p*\275I\r\270<H\342F=\2702\000<i\353Y=\220\322\206\274|\335\302\273\233\351/\2743\244\350\273\200\353\270\274\245%\345<\rw\277<\253\034\2359\344\314\316<\216\254\026\275\325\016\275<\247\367\005=S\2550\275.\030\030<\037SM\275]\177y\274\211\206\352<\030L\334\274\223\306\265;\r\250\013<\037[(\275O\244\304;\243o+\275\231\370\340\274\244\355\016<v\036\370<&\236\237\274LR9=\307\375\234<\304l\'\275\254\334\006=\016\214\257<\3649\357\271;\314,=\272q\267\274\214 &=\032\271\220\273\225PH=\263\324;=\325T\014=s\rf\274\252(\004\275+\016L\274H\330\374\274V\332M<#\"\214<jw\311;\341\002U=2\022\366<o\366\277<\206-&\275\336\202\223\273T\250\244<#x\313<\251\260\257<W\350\340\274\014 \364\2744\353(=\342\264[=s{\r=\r8\034=\365\246\033<\236\304\004<\346\243G\275\273\2026=]\255\336\273Y\321\331<\215\231\332\273\030l\332:Y\227\364;\256\200\241<\300\212\337<N\351\016\274bcY=3T.\274.\007\212;7\345\031=\000\307\013=\224o(\275\343_\244\273\013\344\222:\273Z\366\274\231\037\267\273\226\203;=I\365\303\274\263\320\254;\253\037?\275f\204\335<i\217F\275>+\243;(\210\030\275\335r\023\275\271\223\210<\330\345\370<u\026\236\272\240\261\321<\023\336\315<\225\242\315<\r\321\344\273\232\227F\275DyP\275.@\n\274\023\263!<\037a:=\330]\001\274\204\033\034\275\030\361\336\273\350\025[=\332\262\203\274\346\341\323\274!+>=\357$F\274\221k\276<\335\247;\273\013_C=\362V\263\274\300AY\275\327\223?=*|\023=\344XJ\275,\3431<\036\232\024\275\364\257\243:f\234\201<\373\343\"\275\212\3653\275\362K-={\273\203\274k\333\'\275\375\313\241<4\327@=\231\031\366;\215\376P\275\2134P\275\253\214\n\275h\362T=\360\251E=\017w\005=7\233g;\361\017:\275?\350\266;8\360\263\273\272\266Q=\037\357B=))\241<\246\2328\275\304f\261\274{/\034\275e\271\356<\275\221]\273Qc\316\274\315\\\027\275A\300\025\275\275p\241<\313,\347<&\253\014=\tt\'\274\256oN\275&[\216\274\r\371\371<\322\004N=\330\372\r=M3=\275\223\034\247<2\203\023<Dh\\\275\247U\355\274A\253\r\274\r2I\275\333\265`<\317\2252=\r\220\002=H\313\303\274\207\374\367:\364\376\227\273S\030\240\273K\313\374\274\304\270K\275\362\312\313;]\022\3029\230\206\023\273\374\243\256<9\371[=\024:W\274:\222E=\344TU;\323\tB=\255\336\022\273L\306\'\273\320\201%<\274^-\275\316\377\263\274\367\247%=\301\3152=\n\301\024\273\025\177p<\210\022\n=\023\260T\274aW\023\275Y\334\242<\356T\323<\361\332\013\275\231\262\375\274\177\0327=\376\n\265\274\305\246\261\274\375\230\r=i\231\301<\277\245%\275\265\006\013\275\366PC\275\263\024\007\275\207K\027\274\271\245\341<\306g\275\274\376\237\265\274v:\354\271d\231\034\275\355P4\273\302%O\275e\215Q=\001LZ\275\326E\"=m\321E=\240\350\010<\371^\332<\020\256=<\353.0\274\336A\022<r\235\205\274\0134T=\240]m\274g\250:=D\027\002\273\237\376/=\277N-<\235\320\"\275\372yQ=!\357\222\274z\3733\275c\002\007\274\212\027\000\275\004\272\230<\3634\362<\212\224\321\274\306\363L=\034\257X\275\342UN\275\"A>=B\356@\275\351=\002=u\250M\275\311\276\006\275}\226\245\274\337\344\220\274\273\226.\275\367\213\'\274\221\263\t\275JO\000=\324\254X\275\256D\306;{Y\262\274w[\312;,0\327\274Z\016\365<E\321\257<\225Z\231\273\003\357\362\274\332\377\305::\320)=J\313\202\274\373WM<T\003E=;y\317<;\323\310\274A\231-<\363\266{;\373-\n<n\3312\275\210\217A<Og6=\222\273Z=\275\226\251\274\256A\345\273\233\3527\275\335D\302< \214\326<\204=\365\271e\347/=\036;\260;\236h\023\275c\307*\2750\330\021\2749\366;\275\255\205{<\263r.=\266\312\261\274=3\237\274\343\346\330<\035\324\215\274F/c<8$\231<k\366#\274G\373)<0\321\224\274\265\230\"=d\032\035=h\260;\274<P\014=\024G1\274\362\356\035=i\332V=\034W\357\274f\373X=D\353\340<\375\243\023=\027\357\317\274\247-\235\274\rg\267\274V\350>=Bk\242\273\243\001A<\327~\204\274\017\247\302\273\241\247\341\273\357\337\321\272\351\200\265<~b\'\275\010\224\021=\003\003=\275\177>\341<\211bP\275\006\264\370<\330P*=a\236\227\273\264P\376\274\033\335R=\250\217\275<%\005\000\274\203H#=\214\222\"\275\331\240\351\274Vx\223\274\360\212V=\261\3217\275\261e0\275\267\016\'<\\\372\014=M.H=\224\030\\=\016`)=\355\004\026:WHX=\315y%<\351[\343<\364$\026\275\233k\0369\020P\006\274\r\272\035=\244\031a\274|\320\321\274\024\357\343\274\255\002-=\003\231H\274\354\330\306\274NO\264\274\210\303,=\257[4;\0200\324<M\356\273<\342\'+=\004\341\020=\0359k<\271b+=\220\317Y;`\035%\275\222\251c\274`\216^\274\340\245?=\240\275\365;D\213\232\274\037\267\257\274BT\027=\235\317\357\274IhP\275-\353&=\20295\275\t\264<<\204f0\275\021\014(=\016\223\010\275\365Jh\273R\272\244\274\210\336\310<\317\034#=\214\247!=\255\017\235\274!1T=[\346\222\274:oX=\204w\256\272;J\256;\351\301,\275\237x\000=\326<\366;\226c$=\360\274\034\275\320\033\260\274\031\203\006\275.\263\031\275b2\"<\352\241\233\2732\'\007\275\225h2=qiH\275\341\016\276\274@q3=7J\023<G\365O=\375Bz\274\344OM\274\300\020\242<.i\325\274L^)\275\340\003\022\274\36001\275\004\243I=\325\0027=)\236\347<\202\210\321<\002\322L\275\243\305Y\275W.\025=\271\256_<\256aX=\237q\027\275\251;\210<D=9\275\250O\r=\211\336\336\274\000>\232\274\266M5\275\207\270\301\274\341J\016\275\001K =-\226\333<\255\261@\274\306\375\300<P\377L\275&sN\275\351\376O\275\350H\004\275\3612G=q\r9=U\377\035=\215\365T\275\333D\000=?\025\027=\360\231*\274i\257\004\275\340<\356\274b\333$\275c\026/\275[#p\273~\263\251<\222\323\237<i\320\"=v\352Z=\211\233\t<~\315F\274\'\361 \275o\335\026\275\326\013E\275R(\213<\374\0338\274\267\0059\274\023G8\275\340\035=\271Y\010\n=\241wV\275\272Fz;\312\\Z\275\312sn\274\371]\377<\277Ml\274\016\032\363<;]-\275W\367J=m\"9=4S\223<w\361\033\275\334y\315<\353\234\036<\313\214\257\2745s\265;\031\000\n\275\370\323Z\2756\274*=\247\3009=C\302\252<\'\242S<h\361\'\275\256\3212\275\212:\370<(\"\210\274\332\247\356\274u\335)<\351\214\250\274\213\003P\275\2225`\274\306\254?=\200\3735\274r\036\037=i\266e<\230\367\344;\312\032\n\275\327\342,\275\350\026L=\217IS=\235\007T=4_\212\273\032\242\336;m-S=\024\2237\275Q(@=\300[\362<2e/\275y\234\"\275\322\006\205\274\317`L;\237=E<\336v\246<=\010\376\274\014X\342\274c\327\025=\024\260B<\305i\003\275\202\335\300\274\307p\024\274\2215P\275\341\320\214\274\"\211\376<\177\334\267;`\203m\274q\274]\274\313Q\036=`\227<\275\007\257\353<\030\017<\275\273\334w\274\312\325\006\275\351l\007\275\217\372:=\327\335\325\274\234\2177\274\375\301n<\\\003\345\273$)W\274\356\2549=\315\366,=\367@[=\230\2716\275n\312\366\274\2500\322\273?\267$\272\360\216\330\274\372Y\317\274W/`:\277\262Q=L\272>\274\343\345Z\275\027\220\225\274\017\336\224<K\230\300\273\226\322\230<SH&\275\220\031\257\274J\312\033<5\311\000<\310}#=\212.\365\274\320\356R={#Z=6A)\275\262u3\273OG\007<gW\220\273\027\315\"\274`\035\220;\2356\337<\023y1\275\232\264\227<\367x&=\215\354\013\275\257\'\007\274\262\244\246<\354\260\030\275\007\232\316<a\255P\275==\274\273\323\254M\275|pU\274\376\014\007\275\374\215T=*\212N=\377`S\275Q\223\001=\347\365\027=U\351W=:\337m\271\303]\347\274\367\277\374\274\342r\026\275I\341\370\274)\325\215<\353\373\334<\325\240A=\033\361E\275\236-\373;\340-/=\310}(=(\035\312<\361\032\314\274\2404d<\337W\355<\267\362\035=,C\200\274\332S\252\274\316\206\345<\000\344\026<\265^N=\314\206\303\274)\000(=r^\315\274\245\301;=H>\213\2745\004\037\275\007\265\242<$\306W=\344\256\214<\244\251F=\330_\266\274\255\303m\273\275@\365<\305\247\263\274^)@;\342mI=9\347\n\275\305\305\024<l\034\t=\326\347\356:\273E3\275\002u\026=\003\223\210<\232 \232<\2456\212\2749e\207<\215\256\022=\320\334\212\274\t\367E\275\237{C\275\274|k<\033S\273<\02069=\225\031>=D_\363;\"(\231\274!\350#=\273\273\372\274\005\022\017\275\304\326[\274\355\345\353\274|\351D\275T|\371<\204mU\274\364M\333;uw\272<A\342Z=\336W\t\275\204\3734\275Y|O\275\2534\372\273\316I\006\273D\206\220<{l\'=\2555y<\241\305M\275\341\272\036\275E\000\302;]\304\017=\014|\025\275\030\220u<\301W:=! \356<S\357\016\274\026r\023\275\351,(=\356\247\332<\357\035\331<\331\314K=~\217\227<\314i\377<\321\376\322\273\331\322\010;;\375\231<Dm\331\274<%W\275~\267\255\274]\224F\275\346\202z\274\355J\362\274a\322\231\274\013\345\030\275\0262\035=\213\337\000=\004\266\255\274h\305:\274h\203\222\2740\256\360\274\212\007;\275\271j\223\274\225\372V\275\373\225 =)\"\376\274\360\027\205\271_)\244\273\335r\220<\231\276\257\274x\371K=}\032\017\275\"#+\275&\307/\275yv(\274\317\216@=X\341\002\275\014\324\236<u\2743\275?R\340:j\351f<\236\274\212\2744^\353\274\274\3116\275\031B\312<\271\355*=\005\'\032\275B#\254<\022\275\250\272U\023\024=,\037\343\274T5R=\266}H=\263\231\r\275\233\206m<\177\307O\274\24573\271\350\000\300\274\321\3512=r\032>=\277\342~\274{\t\"=;\237\220;\'\222T\274D\213\010<X\253,=\244Q7\275Wd\355<\366!B=\034>{<\272?J\274v\231\213; \315G\274On\001=\345\376\024\275\236E,;\360\233\245<k\341\227\273\346\335\020=\265X\345\274/\256\346<\374\006\005\2750c\027\275\357K\325<\252\253\253\274q\177D=\252q\007=,$\340<\220\241\264\274~\250\t\275\375\3420=\370\365Y=T\306\323\274P/\226;\t\362\022<I\375Y\275\r:=<\270g\333<x\377*=\016\346\204;\354\252\343<\261t\204\274\313u\032:\027H?\275<\'\310\274\217N)=\266\254i\274\342\026\t\275\273\'\013=\237Dz\274\223\271M\275q\270\316<\277G*=\005\241\262\274\002\t\252\274\371\234\276;^+\263\272\305\267\000\275m\252\367<*\002\306;\265\203\340<M\327\372<,m\261<W\002\003<\236\0378=/\234\t:8\304\242\274\343\3330<i\304\237\273\325\031\321<5\310M\2756;\020\275\357\373Z=,\262G\275\245\3265<j\341\003\275\323\330\371:M\330\323\274-n\350\274\231\365\001\275.\255P=\"h\360<%\036\023\275\361\203\361\273~,\017\275\212*D\274\r\360\321\274\302\025\201<2k\240;\177\346\203<ubV\274\267-\264\274\226\346\207\274\305\027\332<\313\000\034\275\3144T=Ph\026\275\016KI=\016\005$\275\215\014X=\325QV<C\177*<\361Sb\274o\2778=*\n\000\274\242\306\003\275C\330\243<\345MP\275\220\326r\274\360\264!\275\022\342Q\275\320\223\333\274\021\030\005\275\327\324\t\275\366\201\270\273\311A\230\274\326\323\023<$\277\275\274,\344$\275\226\003\037\275\252\311\023\275\210\3427= \366%=\0103H=\274P \274\266M\031=jv\317\274\364\013\014=\227\336$\275S\004C=\021\231l<\373BV\274\251\356Q=C\256l\274\352!\255<\223\2005\275\332\005\242;\223*\033=\346\346\034=\357&\212;\243\367\236<x,\013\275\200\305\230\274\243\352e\273$Q\023=c\014\347<\364jG=\223\250\313;\342nA\275\200\264\203\274\365\264\313\272\354\221Z\274,/L\273~y\005;\021D7=\370\373O=\205\262\002\275S\366K\275\312Z\301\274\300\203\233\274\267M\247<\r\024\374\273\226\256\240\273\355\315\307;bA\342<y\264P=\377\320.\275m)\300\274\275\2741<\221L[\275\013\024\014\275&\3154\275\233O`<kC\017\275\344\241&<\363\305M=ws\260;\234\303.\274\277\246\311\273K\233\261\274|\226.=\026\215\025\275\302\347\032=\301dP\275*\2029\274\354x\375<\213\301\346\274c\035\260<\264E\235\274\255\324;\2758\376\231<\351{O=f\252;\274\256Lo\274\367\211\214\274\325\312\t<\004\245\333:\211\341=\275\031z\332\274\017\274\352<\235\371.\275\327\370==\207s<\273G\246\030\272x\001\264:\210iO\275r\\Y=\341\327\036\275\177F\315<\201\300\002\275\004\357\256\274$\013\343\274\255\325>=U!V=aXE=\261\024J\274\361\232.\275\310T\014\274G&;\275\017\260\304\274\236\2333<\352\315\002\275).\257;\\\277\307\273QR\303;\033\346\203<J\0365\275\222\023\261;C\235\241:\"#\331\273\222\343\254\271e\2747\274\333\355S\273\225l\355\273sH\212<\266@\036\275\262F>=\354\267\010<\215\246\034<\005\252\007\275\355\022)\275\243t\000=\271\2173\275M:2;{\312\270\273)2\201;U\304\023<\3654\273<\242o[\274!qT;2a\256\274\2701\220\274\253\352\021\275\254\270-=bW\004\275/\315V:>\255!\274o\3629=Yw.=\201\362\256<u\273\037\275\034\313\265<2TU\275\340\350\244\274=\2502\275O\0132=\347oS\274\025\031\005\275\314\355\271\274R\276\013\274gw\217\274\t\211q<\366\201\"=\223$\226<\023\331(\274M\230\222\274\025\002h\272\177\334#=+\017\226\274f\"M\275\312\035\220\272k\225e;\345\t\026<\272\366J=\272mR<\207!\";+\206\357\274\014\001B\275]7\000\274d#\360<c\234\333\274Br\002=.\343\341<\341cb;=\260I=\tL\005\275.\034\357\272S\273\253;\362<=\275\240s*\275\243\232}\274\360\t\r\275\374cT\274\223g\331\274S7\307<\350\020\314\274\232\246\260<ak\312\272;\025G\275\263\263>\275\377\032H<\256\227\023\274\032d\322<\306\037\370<\230\017\321<a\014E=\265.\030=\345\3558\275\206@!\275\207\210%\275\005\224\023\275\357?\r=\363\251\021=H\300\035=\t?L\2757\376\006\275+\3072=\333\203\206<\266\031N\275\t\265=;lX\010=\263 O\275\023<\220:8\3656=s,L=G\3777\275Z\231\327\273\374Z\004=%\225\323<\272\3120\275y\213C;I\353\362<I\363.\274\370\261Q\275\275\214\212<\301\255\274\274S\205\"\275\376,o<*\004\320\271]%D\275\336C7=\335\377.=\023\316\253<\303V\037=\351\017\213\273W\n\206;m-C\275\3100\274\274\332\256\346\274h\301W\275\212\326\344<\332\362\372\274kh\207\274\216\3707<=4\020=\311\371\337\274B\214;=\2728\273<\345\245g<4\375\t\274\336\231 =\234!2\275\260I\313\274\rxG;\033C\314\274M\350\004=\341\3536\273k\305\013=E\002-\275!\341h<a\350\376<R\352\035=~\033(\275\rO\037\275\310\256\314\274\221\212\'=\373\351-=\256\377*=l\036\356;|A\242<H\333\371<G{\005\275 \305\251\274\343\226\322\274\3673\274<\312o$<.\037\013=\216i\010=\rD\005\275aJP\275I\370\270;/\235\330<N\t\004=\212\223 <X1O\275n\360&\274u\017-=2\'V=aH\016\273^\371\265\273\300yD=L\334$\275\321E\\\275\203d\256;\2630==N\364\243\274*$\023\274id8\275\315Y\036\275\363#\263\2743\344\020\275\353]\r=\362\244\026\275\270\'$\275*\241\340;O\005\260\274V\326P=5\266\232<6\261B\2757\3765\275j\306G=\277\331\r\275\234\374S\274y\303\323<?fx\274qb[\275\276\366\362:\222\351\035=D\261L=\243\205t\274\021\375\376\274\327~a<Z_<=.\214\305;\257\357\032=\333\255\037=\033(\325\274\"\3171=\215=0\275\3545O\274w\214U\274\232\256\245\274H\207t<\241+\354\273ec%=\375\325\263\274\001M\336\273.\226\030=\3304\"\275\0163G=a\211\021=\017\302*<\t\2441\275\034;\022\275\354\032J<$A\224;\223\231?\275\010\204B\274-\222O;\316\344\336<^\202\313<\215\344\014=\246\r\004=N\342w\272\210\271O=\027\342\032<\013\t\224\274=\t\225\274\216O\023=n\351Z\275b!\307\273\223\222\264\274\277i-<\225E\304\274\221\"\027\275\244\337\251\274\036\340(<\201|$\275\216%\353\273\356\304\273<\031\366X=\215\365\206<\036n\302;:N\340</\332|<@\275q;h\004\367<M\254D\274\223\313:=\002\032X=\233\257\262<\200\020\354\274\224\177y<\r(!\275H\217\357\274:.)=\373\321\t=^K*<PN\033\275E\3502\275b\336*\275Q\315\327<C\005\330<\274\340\267<`\304\024=\'\374\254\273\346\242\r=\211w\r<\027\247\302<\037.C\275\333\"+\275\261\235 =\020\037\332;\316\354\346<\246\335\221\2743\353\177\274\021]\262\274\010Z\265\274y!\r\275m\363%\275\026L\030\275\307\337%\275\351\327\214<:v\230\274\350\253\034=\222]\202<\331\327\344\274\260@M=_\225*\273M\2338\275\013hF\275l!\355\274w_\260\274n]\377<\331\367)\275YO\237\273\347\372\226\274{l\222\274\354\007\031\273V\272\314:\206\242\376<.q\335<\227I\230\274:\304=<\030\275\214\274\340\237H\275\3277\025=\030\235\024=\001 U=x\201+=\330\273\330\273\226\276\302:\t\241P=>\377@\275?\245\013\2750>\236\273R\033R\275b\252 =\325\372\000<\255}\375<\261g\252\272:\004A=\313\303k<\247\034C;\356\317<\275pC\243\274\323ge<\331\2314\275E\023\352<\356\233(\275Sd\177\274U\t\r\275\273\276\021=\037\315\025\275&\314\013\275\375\246\006=\254\247J\275\340\003[=\202V\003=\017\177]\273\3773&\274\016\n\t=@\2342\274/\034\262\274\240\356[<SM\315<)\317\342<\230\001\217\274\203\337Z=\020\275T=]\r-=\241\264\226\2730\010\315\274h\017\032=\340*\367\274\305\2113;$\363\335:*\206g<MU\023=\374\014\025\275\232\353\336\273XV\223\273E\001[\275\031\\I\275\022\205t;\233\376\001;[:\350<\273\352\034\275U3\246\274\3758\330<\273\257\354\273\261\242:<K\367\323<\010\274&<yDG=\014\341\331\274\367`\331<\226M)\275\204\0161\275@-~\273\035\375\236\274\333-\230\273\353\277\270<\216\247\024=\200\177A=&\033\343;\205\262H\274-\364[=@\227\200:\255\257\220\274\020\374L\275]\3556=\016\217\025;\t\356\022=\013M\232<\217\2307\275f0V<\362\233\306\274\375\246P\275\362\006\023=\276\362\333;n{\013\275\'\210\003\275+\"8\275\324\211D=\273|\357\274\372h7:*[\2448.\351\036=p\266\272<\245\343\361<:;\262\274\025\277\370\274\305\357\356<\275\001\332\274u\255F=\366\032\354\274mn\364<i\r\304\274\365Z\334<\354\327\343<\033\343\032<\216\352B=\013\215A=\037^#\275\215\267\214\274\254\241`;x4\273\274\340\341\020<~{\273;\201\270\254\274M\267\022\274\265\345\350;\001g7=e\216b<\325[\016\275\003\347\334<\261\272\232<3\035\332\274I\3215=\220\020\240\274>)\247\274\003\023#\273#\350\343\274T\364\337<\263\005(=\360\277\272<\2139\013<\240\350\030\275\224\325\r\275gtG\275\\\325\277\274\220Q\030=z$U<@\250\202\274\024\027\002\275\301n\245<\253\030E\275!\372\'=3\265\026\274\311my<!?\313\2744m\030\275r\3344\275\247\2673\275\033\305\221\273\331\023\355\274\247W%=\265\017\000\275U\002\247\274\232MP=:\220K<\203v0\273\221\322\236<{)0\274\027A9\275K\370\211\274\346\221Q\275c\230B\275_T\037\275\210\331\254\274\r\323\232\274\261 \013=\272\346\323\274\334\323=;b\275\001=\2779&\275\213\255\377<\370\004\344<9\301\206<P\212\t\274\234.\024=\321\325M\275|N\247;d\330=\275\003\206\327\274+\320\027=\237\332^\274W\337Y=\264R6:\227\224H\275;\317I=]]\266<X#\014\275\320\2167\274\257\307\240\273#5\215\274\020\371\302<\272\0258=z$\277;0^\222;Dm+\275\0009|<\217\236\203;\257\244\001\275\211\364b\274e\2212=iU\037<\305t\334<{\360\365\273>\020S\275{@S=\271\rV=\232<N\275[1-=\207\236\201\274\021\300\023;`+\245<\244\272\005\274\342\032:\275\032\320U=B\374N=\233\343\273<\36354\273\316\314E\275\271AN\275\\\301\316<R\3045<Z\246\003\275\232\307-=\305\244\036<H\264P\275\007\257O=\344:\226\274_\241\026\275h\257\014\274\305\346H\275\240\0226\275\364.\r<_\323:=I\347\323<\325\2524\275u\344\230\274\240u5\275N\341O=\222\333\300\273T\347\363;\355k\002\275\362\371k\274\325+\237\274\365Z,=\336\300\232\2743\222\000\275\256U\342<\225\002$=n\202G=\r\211\005\274\270\345O\275\035\017\326;_mG=\322(.\275\310\3043\275\362H}<\274\3269\274\\cF\275\023\024*<\342^\006=\017\342>;\365dA<\242=B\275\024d[\274\030\326\"=\216\356G=BY8<D5E\275\025\001S\274)\\L\275\017\322K\275\266\366Q=\243\265\003<\302\354\026=\304\022\036=\202yM:\305\276\311\274r\216\000\275T\t\025\275\0001#=\004_\336<\356\212>=\327\233)\2759B\025=\036\227\342\274\245\2360=K\214\370\274V\206L\275\337\211\005=\363\343\272\2732\030Z\275\025\206d\274\\\303\030\2741\203\244\273O\025V\273\213b\307\274\030\035\022\275J\370&<\004Oc<n\220;\275\363\006M=\002\034\004\275\314>,=\221mC\275\030!\002=\320\0309=n<s<~&\006\275\3727\032=\004O\020=D\374\021\275\223\321E\273Ro%=\223\016\324\274D\337\210<\375\\\034;\364\'\332\274\206Q\006\275\007\177\n\272\3776Z\275\321\216x<6\305\033=\376\t\001\275\201\021\234<\340M0\275\365\' =\033\353A<\331\037\001\274d\245\325\273\330\231\323\273\'\215\033\275\304n\273\274\272\325\037\275\326\253\023=\366\271C<U\224\326\274y\210\303<r<\342<\263\346\035=\202\217\345\274\365J\270\274(\024\323\274\243\266\335\273u%\303\273\274\363\005=iM\350\273sf\036\275yR8=\306\005\346<#\220\344<\317\267C\275;\267L=6\202$;\254\334H\27415]\274\355k#=8\257Z=x\246^;\274\335\031\274\302\326\341<\375\370K;\200\211F=[\314\215<I,\325\274hI\250\273>N?\275\375OC\272J@\365;5\303=\275^h\205\274\323\327\252\273<\272\373<\326x\300<L\0336\275x\216e<`\237\306<\211|\310\274i\270\355\273\201z\006=$\312\035\275S\351\370<\341D\222\273\345\327\335<\272\251\033=\363T\335\274\267\274B<O\355\257;H;\372<\272\276\267\273\214\2010\275\320\341D\271T\300\257\274C9X\275\376\000\344<\210wn\274\034\233(=;\277\360\274\031J\244\273\214\253\025=\257=\345<$\270Y=\2417\236<\216W6=$\340W\275\342\244O=<\361\023\275\361\to;\212\3529<\20329=\263\3221=Q\332\216\274\335\016o\273\322o>=\207?n<\370\276\263;\204\332\261<\237~l;\337q9\275\227\004;\275;\234R=\231\230\343;\310\212\002\275_\200\362\272\366&\202;`|(=\312\177.\274?\"[=\250\032\274;\002h\213:]7\232;\3558\'=\266\204.\275\335\272@\275\2225,=3\322\333<p\255 \275i\255\017\275\252K\000\275h\261\003;\312\210O\275!>\331\274\272\377-\275\t\232\374\274W\334\353;e\300{<\005\244A=m\t#=G\300R=\n\373F\275n.U<+\177O\275) .\275\t:\033\274\313\217\216\273\231\034M\275\214\266R\275\021!\366<\222\370\035\274\322\3000<\242\367\374\273>\250B=fc-\275\245M&\275\227\240\220<^y.\275jNY\272\031\223\347<\t\357&\274\327\353\n\275\252\257\363<\032\277\362\274\023Y\256<V\314\311<7\344\244\274\0008\273\274|\325C\275\031\036[=\205.\026=^\201\016=\313gB\274\236\\f<\376\222\007\275.y\376<7\034\222<B\t\036\275\255YE\275\244>\201\274b\302\251<\216B\320\273\233jB\274\317\212\306\274bD*<5\212\346;\300\235\333\274W\264\032<\271\3707=\034\266\224<r\350?=\034\330/\274\007X/\275*:\365<~\031\022={\365Z\275\244\001\016=5\325\031=\226,\020\275\356V\365;<\344\371<\334\237\330\274m\256\020=\372\262r<\005\263\331\274\252^T=\215d%=\361\253\037=v\333\202\274\254-D=dl\272<7@\027\275)\326\305<\034\276\330\271\021\301\025\275O\343\270<H\021+=\23558< 6o;\206\310\215\274\222,\226\2734Mw\274\334\351\022\275\354\364\325;\014\217@=\367\356J=\242\033\211\27451\\\275,Jk<V\'\376<:\020\332\272 \344\267;8q\374<\370\275\264\274s\211K\275\331\177\r\274\017\225\206\274\0028\234;\210\312\325<\376|i<\371\340\354<}\'f\273\226\\\377<\234\314\217\274\\\327\004=\236`7=b\251;=\'F\245<\022I\t=3\254!\275\342\356\321\274\344\017\241<\320W\004=\245\310\025<P\254\032\2752\332\241;\376\353\330\273\243\335\273\274i\320\004<\234\301/=D\327\304<|d9\275\n\253\342\274\224\315?=\006\237\002\275,\247@\275\3646\325\271\367H\266\272\217J\235<D\247u\274\240\351\233\274\254\215H\274cJ\031=\373\312\216<\235#\276\273\315\267\033<#3\355<;\363\267<$\223j;\252][\275\236wP=\322v\360;\020\264\333;\354\337\350\271p\223\016\275\030\265\370<\2217\262<\360\037<\275\343\366+\275F{\371;k*h<a\211;\275\312\364>=7.\361\274\006\0225=\324\006K=@\346\245<\376\233>\275\333\026\252<\302U\322<|Sk\274\215\026\355<\t\275\377<\351V\357;la\226:\215\257\205\273\323\271\027\275\275!\013=\304\203{\274\246RA<\276\n\375<\244[\312<\344\240^<\010\024\261\274\206kO<\354\311\032=\260\341\005\275\317H\032\275\321FJ\275\221\352[\275\025\304\257<\233\223+=o;+\275\355\305}<3<W\275\313\341\032\275\331:@=}*\023=e\025\322<\231\r\304\274\303HT\275{\360.=\013`6=\211\261!;XN\336;ny\005\275\352J\034\275\014\232\273\274X\267\305\274H1\251<5\345\360\274\254K$\274\256\331\336\274f\304;\274\244M4=\374S\'\274s\025w\274\301]\275<\035w\247\274\352t\265\272P\003\236:\317i[\275\323\021\275;{\256\311\273\t\215\212\273\345N\201<\345\310G\275\256 \365\274\033\314\232<\016B\202;\361\216\351\274\236\301\"\275]\237\021<h<\361<\242\246\007\275\306\270@=\274o\022=\301!?=\202{L\275\271\233\032<\331m\235\272\264}L\2741\357\323\273\362W\032=\217D\304\274\212fI\275.O\305\274q:\004\275\313U\264\274\266\324\254\273[%\221\273\373W\275\274&\357\024\274\r\000\000=+\321\253\272\200Gf\274|\327/\274U\337\314;\204c2\275Y\3774=\333\036R=\010\3346<O\333\324\273\314A\017\2752c\377<\000\031\264\274\364\'u<M\177[=\205\311G\274Zv\033=-B\022=\2529\020\275\027\352\017:\202\310Y\275\363\272\333\274\226\3240=FW\333<\277\231\321\274\036aR=\020\205(\274\351\373G=\244K\211\2746V\007=\330\340\303<=\323\247<b\330B<\007\262h:\260\223M=\300\304\223;\311,7=\211\304\033=~\251S=]R`<Q\n\017\275\260\2409\275ZJ\313\273B\277\302\273\037z\023\275\337\276G=\001\344@=`\206E;\360\244\326<\364\366M=ln\322;\014\266!\275\\\005\010=\327\346\236<\343\242\255\274\371H&=\"\205\350<\037}>=\033\004G=@\314\240\274\200\2429\274z\240\342<\244\350\360<\222\207\016\275\325#5=\017\000\320\274\362\264\023=\201l+\275t&\305<\334\272\034=\366\374:<*\200\212<\305\334\363\274S\316\003=N5\355<\013\0306=a\007C;\314-\006=\314{\245<\375\"M\275s\312!\275\014J\355<\013\2415=\n\006\n=\\\036g<\337b\230<\3266\034=\357\203\236\274\353\006V<KDX=57Q;B\207\245<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
          dim {
            size: 4
          }
        }
        tensor_content: "jBX\2755\366S9l\365\356\2716\273!\275\316\022\036\275\240\235\370\274f\371\017\274\326\204\336\274\273\2667\2754{\210\274\342-\023\275\0004\'=\344.G=\036\272K\275}\342\257<\017\214\000<\002\313/=\322n\223<y\010\251;I\321\262<\177\220H\274\262\302\253<b}\017=R\236r\273y\222B=\036(\006=\330}U=\203\352\021\275\020\001\025;\t\307D=V\031\204<\223_\037=\366\366O=\022\344\n\275C\354\342\274\301\354$=\037r3=m\'\344<\333=\207\274J\331\200\273dJC<\3666\322\271\364\247\033\273d\266\343\273b\232#=\240\026\n\275\361\310\245<p\312\263<\275\315;==jK\275:\365\201<\210\347s<\006W\207\273\364gE\275.\316K\275^\366\021\275\310\030\002=l\005\025\275 \220\037\275\235\355\201\274\274\030\333\272r\254\256<\004\004\005=\013\006\316\274\324\3334=\330\275R\275\350\237\\\274\270\252\004\275L\334\212\274*z\305\273\031[R\271\275S\027\274\246j\374\274\225O\372\274\207x\354\274\321]\312<\230\214\024\274\3029\024<[\027 \272U-\367\273Xb\317<\222\243\306;rY\256\274\216\361O=\220\020\363\274\256\214\037\275\016\016K<\203&d\2721\362\013\275\230\217,\275\265\326\213;9 \272\274\005S/\275\035\326\204\272\341^i<8\022L\275\025>C7\032\3617\275\232\253\000=\266\360\343<\361\377\321\274CK0\275VD8=\323\307\366:\374\333!\275\025\"+\275\250\345\026=\256\315\242;\037\034\323\274\240\366\005<\261o\244\274\025\316\000=BOC\272\326sM=\006\213\017;\377\0012=\240\003\335\274h\331\027;\327j\":CG\n=L\203<\2757\177\024=/`\006=V\201%\274\333\275L\275M\025\354<\375\016\236<\246\0109=\353\251\324;b\225N=KD\251\274\263Q\216\274\002\364\313<#\342\261<\313\020\307<r\377-=ea\277<W\350\240<\204\214\027=v1\200<\003J\256\274\2237\021=\217\201\341\274Q\003\264<\240\236};\341\223R\274\362\362\r\275Pj*=\\g9\275\007\027\006=M\022\242<\031<\206\273d\352\220<9\374\277\274\222\263\037=\230\002\016\275\336\323\014<\"\177\200\273\256\004\231<\016\272(\273\323\335G=%\007\034=\212\0030=O\214Q\275\217\300\027\275VB#\273fX\317<\330\334}\274\237\276\343;\'\302H\275G\037x<R\022\240<qa8\274\262y \275\306\230\023\274e\246\322<\362\362\024< [)=%!\013<(<\016\275\305\031\"<m\013E\275\335\005\327<\356\013\004\275\375\2742==\313:\273\231*\316\273\310\274 \275h\347\007=\31518=\223\344\253<\313\000\224<\345\204\266<\221B\330<\353\220\275<\211\262\035\275y\364\222<v?5=\034\205N\275O6\013\275\300\300\347<\205YJ\275a<\303\274\344\032\036=\n_g\274[:0=\307M\272\274\265oS\274|\210,\275\340\366\n=\222v?=X\367\013\275\341\307\246\274\337S\232<h\3479\275McN\275}2\231\274mSH\274=\006\255;\311\007\273;U\017\226\274\306Z\003\274\2043\333\274MW\003\275\031(\365<\214/\037\275\203k\254\273\261\271&\275\270\262\013=\263\266\027=\267%*\275/5\303<\245\370:=RZI\274\304\312\364<\0379;=\222\247Z\275I\344\310\274.\266L\275\245\334\004\275&\344W\275Q>G\275\230\354\203<l\242\272\274\303\036\030=\210B\223\274\213\025:=l\317\"\275J(\255;\357\226\265\274\0019\007=\027d\217\274\210b\'\275\377\344\234\2730\362\334\274o\241\330<]g\320<\217UX\275 \205[\275X\2408=Vw\234\2741\337\263\274([\312\274l\236\340\274}@\363<\250%\321\274\037r\301<\322\023\231<2\217\262;\233t\241<`\371\017\275\217\277z\273\215\304*\272\003\274P\275\021\346\370\274\350m?=\027$\214<\307jS=\030\343f\274i\311\347<\347\0240<\263^4<\243\313*\275\376e\365\274\245\354<\275\357\345\025:\212\325\210\274\021\364\005\275e`]\274K\235:;\304<\272<\213\364\036<\215\274u<\313Q7<\372[_\274s\031\232\274\034\013\330;U\213\334<D&9=\325\271\020=\376\327\275;\345w\017=5_P\275\371h\003=\022\273\004\275e*\244<|\241\017=\221t\243\274\227\0361\274\364yV=N\261\331\274\337\216\341<\263\367%\27488\243\274\357\366\356<v*\261\2733\225\271<\022f\365\274\204\010\017=\254}\277<\217\221\253\270\354\305\000=q`9=\240\336\375<\206\225\262\274\206\374\277<IFK<\260\301\026=S\232(\274\307\313\244\273cm3\275h\212\370\274~\\O;\014\377K;y9\274<\220\261\274\274\026\223)\275\272\"\n\275\2003\352\273\376\343\n\275\014O&\275\243\307\306<\005*5=\017\360A\275N^J\275\006K\275\274w\265\014<\230\222A=\341P\020<\326\375\236<s|\204<\226\305D=[\215\035=\320\217u\274\\L\016=\323\356\322\274y\254V=\322\t1\274\334e\300;l\213\202<)N\244\274K\201#=;UX=\026\233\365;\020\345\364\274\3666\275\274k\202\014=e\241\327;\330\312\225;\177\310\032\275b9\324<\026\266\027\275\262[\n\275\022$\030<`\200R<K\004\t\275\3452@=t\330\267<XC\005=|\002\370<\203\262$;B\316h<\200\220T\275\213\251\022<]\337A<\2439\224<\360\347\002\275\022N\236\274\021!Q=<\317\307\274\036\250\260<GR\317\274\333o\000<r^$=\317\014\014=Z\356O\275>\242\005\274`\366;\274*\3210=\321\006M\275\356\273\237\273\025\231T=\021\303L\275\266\326\226<&W\317<\304\203.\275\313\356\322\274\220\316/\273p\005\004\275\327\033?=\357\005\277<\36300\275\266\037%=\315\027\273\274\207((\274?eS<\014}\024\272}W{;\035\301B=\365\210G\274P\340\026;|\200\007\275I\371M\275\325\201\022;\276\2620\275\303\237\234<\363:\354\274\256\010d:*V\013=\231\303\253<\201o\000\274h\234\240<\327\016\236\274\"\3434=y\311\247\274\326\033L< \021\304\273M\340E\275\363\302&\274n\362\035<z\356;\273@\"A=\235>$\275%\014\336<\351\377X<\212.\177\274z3\273;\274\200#\275\021\222$<\225\025 \275\216B\036<\220\202\022=\214\363!\274\335{C\275\205\324\363\274;\304\356;\267UJ<\250\000F=E\242/=\007p\270\274ji*\275\263\246\r=o[\';\244\221M=\353\006>\275\252\253\202\274z\300\326<]\275\335;$\267\013=\262@\331<\n4}\274#\327P\274]\255\360\2748)\010=hM\345\273\253\023\031=\346\360E=\263\327\213\274\375\002j\274\016r\032\273\343\306\333<\356fU\275\342\275\371\273\324\257\005=\307n\033\275\227\206\342<(\250\205\274W\320I\275\306N\306<t\366\035=`\266R= \265\031\275I\255!<\222\033\311\274x\203)=^w4\275\264\325\014\275?@:\275\266\311\263\274;\025H=\014\262j\274\301\217\327;\266N7\274\246ET=\0209\276<\274\354\026=\206\212$\275\263\357@=%.\307\274\305\267\245<\274\003\263\274\362\315\203<\023\002M\275\241\355A\274\270DG=\002\320\035\275\362Gg\274\244\302>=\336 Y\275N\211\025=\216G\025=&\216\370<z\361(=\311IT\274\312\023\263\274\014\3013;\0015\266\274\262\256\337\274\336\223A\275\246\205\201\274\254\212\027\275\257\226\345<\331\213\235<\016\357\037=\265\223\031\273d\310\342\274\010\346\345<L\265\010\275\207\357N\274\224\353X<^+n<\302q\000\273\333\025q<\370o\377\274\tR\006\273\216^\243\274\315\323\021\275\n\370=\275\372P\003\275\204X$\274\266P\221<t\346\317\274\231\242\'=%K>\275\364\360\005=o\246\\\273\210\\\241\274\337\272\036\275}L*<\203\314\367;\266\222\245<\322\210\034=\211\255\211\273.:F=GcV=\307\\(\275\317\231\244;\323\026/<>?V\275\233\267\033\275\233\220\326<\034|`\274\343\233\n=\\\263Y=\300\376\030<\347\252S\275\316d\030\275\005\301\220<\204E\356<Q\276X\275\250~o<S\204};\261\347\"\275\340`7\275YEH=d\325J={!\240\274\3044;\274-\306+\275\301\346\335\274\003\035\234\274\362\304\250<8\003\373\273>\210\\<\005O\207<\207\353X;{\212\213;y\320\\\275\022\347m<D\233\250<\363EW=\251\266z\273\344O\241<\214\316\014\274o}\376\274[Q\036\275$\3444\275%\270\364\274oo\025\274\241\263D\2751&Z\275i\033\363<\373y,=\234\203\264\274\366\2520\274\363(<=\346\2771\274\002H\207\272\007\r?\275J\317F:,P\273<\302\035\302\274<\357\210\273\002\001B\275\265\2127<\200\242\265<\027vR\275\232)\035\273t\3516\275\262\017T=|\333\351\273^\377\345\270\007\330\203\272\203\013?=A\204x<m\274\311<\354\336\"<\213a\031;Y.\r=\227\270\023=\215&$<\257\315\337:92\034\274\253\325\263:\240]C\275Y%\315\274\306\324\004=(5?==\212W\275l]U\275\3547>=\224\226\030=\355\3259\272\000\020C=\201\213\334\274\321@\242\2748LC=YK\220\274\016tS=\013J\036\275\3232@<\003\244:<\331\252\025\275\325N\003\275ZJ#\274\250\360\2378\245\376\224\274N\274\227<\324\272E=\365\331\034=D\263\017\275-\223j:\217KZ=\345\"\200\273F\247!=\02209\275\326\331\257<Q/\027\275b\3408=\031-/\274\364\311\034\2745\2702\275\231\035;\275\223\302E<\220J\214;\005\316\205\274l\036N=\234\027\314\273\005\243\243<@\017\350\274\036-\3019\317\217A=29$\274\t\344\215;\246\025\263\274e\177\233\274\244\367=\274q\212\327\274\206\262\360<B\306l:cvE=\255J\004<jW\300<\004\334~\2734\337\326\274\222\235\246\274Eo\360\274\270\232?\275\326\203\264<\033\333\032;\373\032\343\274~\2571\275B\031]\274d\211\216<\271\315\214\274y^\025\274\301\000Z\273\236-\335\273<E\017\274B2Y\274\016%q\274!<\257<g\265\335<<\345\215\274\336G\364<\204*5\271\317\324\252\273ZW9=|y\302;\374\355\211<\007\203\360\274 3\207\274\220jD\273W\300G<9\007\316<\307\231\027=\252\341\262<\375^E<t\016\322\272\271 \026\274\341\321\370<\002r\002\273@M\020\275h\273\331\274\317t\343\2749.\013=v\247[=\371\036\007=Zv\277<\210\2502<\252\264P\274\213\316\264<7g\224;\035\207\217\274(v8\275\276#\001\275\002\023T=]C\215\274\222]\304<\312t\033\273]\377\025<\203\365\276\2746\334\202<\204\3355\275\366_y<$\302!=\256\267.=\273\364.<J\360\035\275\235\271\030=\305>\371\273\036\237\256;\017$\242<\267w\n<\032\024\021=\022\355\224<\007\307F=>\300\330\274\246\207b<^jD<m\025\255<k\346\363\274|\232;\275\324vS\275!\217o\273,\324\r<\346\340M\275\332\251j; $\016<\037\314=\275\304j-=\255\231-\275Yp\004\275\342\226x\274PJ^<\"\033\214\274\021\332\250;Ov\261;\202\271\264\274\001\327m\274\212./=\234b\205\274\226K0=\300\275L=d\230\357<`\263\233\273\345BE=Y\033\370\274\332\005<=\350\002\373<d\324B<\306\336\034=^8\207\274p\201\037\275\353\005X\275\361\275W\274\0241\347\273\235v\311<v\220\021\275v\023\032\274,\273`\273\364i$=9\230\316\274\002\251\037;k\3148\275\274\336\374\274\350\227\000\275\301\225]\274)m\332<\352\250);Y\017r\274\3613+\274u\247@=_\252\272;\327\201\355\274R\310\032\275l\253\006=\327\2045\275\373:\340\274\265\3109=\257\334\033\275\220\247C<{\221\306\272\364\'-\2759\366\260<\026\270\020=\245\265,=(w\360\274O\n<\274\375Z6\275\016/0=(\2640\275fS3={!D\275\236\200=\274\017\266P\2744\305\337:,\206\\\273\013\'\010=i\201\350<\206\306\250<\204\2512=X$K\275i\204\022<\243\255\264\273\252\014N=\014>&\275|\261\370\274\374\3543\273\262\3268\275\037\364\203\274\0324\255\274%0\364<-\000\222;\306uN\275g\205\213<\347\227\362<V\371A=\326\264\013=\315\357\243<+\205\n\275\232\3217=\327\305\035\275W\030-=\201\373\302:=v\001=\365\004C\274\205\001\005=7\251\t<:\022\035\274\312IJ\274\244\027;=\356\337\037=\341\374;;\227\004\312\2746\031\215;=\251\243<\227?T<\010<><\"_\352<lw\317\274\235\274\r=Zo\260\274.]4=\361\026\230\274$\242\335\274V\336\363<\324\306*\275\315\017\344<\r\275\037;n\022\210<\342\255\003\274\353\025F\2744\3655=\252\n\203<\347\233\312\274\371\300\032\275N\310O\275\r\357_<\207\2360\274\374\217\263<9\235\311\274\r\353\005=c\324:=\324\017\245<n]\241\273\305\351\257;\034?\014\275\033\311\021\275\233\255@\275\243W\250<\246\204\300\274\320\363R=J\324\333<&6\234<?\317\223<nf5<\010\177*\275\034\262L=w=:;\t\310\231<\202q<<\322\320\351:_v\312\274\343\";<\237\003\266<\021}`\274\027\000\265<z\367 \275$Q\267<\264J\366<\216\221U=JE\322<\336\325D=N\351\343\274\253h\030=\013$\250<>E+=AC:\275K\206\265;\226\362\007\275\304\260\375\274\222\262\334\274@\3020\275\302\276#\275\375o\320<:\025\n<y\266$=\214\024R\275\366\270\223;\017\024\007=\'\213<<lw\356\274\376\201U\275\3561\317<\302\022\007=\213\017A\275~\220\252\273\252\330\260\274dp\025\273\256\205\355<u\267\344;\261LP\2745<\264<S\000\'<\354\372$=B\244\017\275\014U\252\273\206eU<\n\246\216\274\032i\022<\372\344=\275\223\3400\275\325*2\273\274\311\221;\205\253U=\204\361\221<\361\224\245<\372\213O<\333MZ=\256\310\035=\226CQ=\235\036\005=\344u\006<\327\344\370<N>\032<\230t?\274_\220\345\274[IA<\n\257,\275:\244\353<\303Kz\274\354\216W=\270J\203\274\"\034\030=\221\245\302<\265\313\005\275\306\300J\275gp\224\274\021F\371<n:f<\330sP\273~\255\246\273y\276\322;\0147V\275\324\333,=AZ\025\274\021\230\351\274im\036\275\rw[=\3264%\274s\250G<\331l\013\275\202=I\275r\255\244\274!-n\274E\202\301< RW\275\3059==\226 [<\t\210%\275\007\0274=\211\315/\275\2357\314<h\251\021=\270i\251<\252\271\004\275\035\224\220\274g\3761\275\2104/;\370\341e\273DZ\333<\014\007\373\273H\377(<\360)\361\274\245<\001\275\335\345,\275\007\214\022\275aVR\275\036\311O\274\264\326X=\3708\030=\201\206A=:\243\014\274$q8=\200\273U<\365\250\034\275\033\275G\274\201\200\207\274\314^0\275!\352$\275\334\003\217<\262\205\340:N\231\000\275\272\310W\275|\304\272\273\221F\031=\224)M=Dh\206;)v!=\376\271\032=\205\213\336\274l^M=\303S\306;-iN<\221\204M=\214\264\242\274l\327O=\346f\212<v\340\022=!\255\013=\023\372\342\274\263^\010\275\321\236\253\274\0201\200\273\335\313\030\275\250e\r\275\311\276q\274%H,=\t\2752\275\250\356\233<\214\255s<\245t\376<PzW\275lx_\274W6\367<h\266\035<F\333\362\273U\024<=6\002C\275\342\202\021\275U\251/\275\200\007\276<z\315\265<\235\016 =\007\023\'=\263\022\324<\001\345#\275\022\035\3169D$\334\273K\022\n\275\365\200\376:\300\324\323<\233\333c\273\245K<=\326\2561=\333\347`<\365\032\303\273Q|\010\275\022\250\300<Vy\363<\371>h9`I\326<\275E\014=$\200\340<\370R#=:N\233:\353rN\274\224\242T=\030e6=\240\2250=\342\230\031=\206\2241\275\234\021#\274`{\374\274\\\370M\275\377B\005;\345\202\312<\230\272\246\274\305\267\361\273\253Y\261\274V\022\004\273\314\010\327\274%\371\256\274\332\262\265<\327\371@=7{9\275=\321\241<RZ\226;\242,\020\275\037=\004=T\020\201<\363Q\r\272\341\216\370;\274i#\275b\225\014=\267\325\235<\310\3448=\225i\207\274\031-\013<\000\2375\275\362$\014\275?\305\333\274q\215\276\274\246\212\224\274\314\246\222\274\342\004\014\275\365:\235\274\326\3627=c!r<\303\206\277<Pl+<{\265\370\274Y\t9=#\212\"=\263\021\205<V\316Z=}\314.<\316\364N\275\031\266<\274\255x\265<\t\303u<Yi\300\274\035\207\373\274\275\245\320\274\236m5=\210\nA\273\000\213\016=c\025\362\274\354\244#\273j\264>\274F\255Y<rWv\274\000\354S=\346\3620\273$\226\303\273[\231\274\274\262\235#=\307s\034<\346\303I\275\277$\251<\007\350M\274\246J\264\273X0\013\274\306\253&\274\004S&=\315$\007=HH1\275QHP\275\022\334T<\235\304\304\274\310\227<<\203R\017=?\207\272<\n\300t\274#\336n<%0\023=\207\021$;\200\213\315\274\027\263H=\202\177\n\275\026$\004\275Q\306\230\274\200\234M\275%>\235<)\300\t\275\333+\022=\275g\"\275\333\374?=\300C\214<\262\333\017\274lY#\275\265\253k;\001V\307\273\215y\034=\034Y\261\273\240RA\275\251\362\273<=W0<n\001\227;\276%\004\275\2667\317\271\271\360\n=\316\315Y<YD\331<\273\311\234<4o\301\274\254:\303<\237\rV=s\315\2259\263\276\213\274\344mX\275\337}U\275\301\0170\275\004\333V\274\253\273\006<\250\017\267;\263\325\035=\314G\214\274\336\210\214<\003i2\274\371I\206\274\023G\024\275\275\2651=]?\330;cK9\275\203\320J=\016\201\003=\202\271\237;e\205\277;\004@L=\035T\351\274!+\026=jyM=\272\265\t\273\310\240N=\215\033\374\274\243h\357\2742\031\313\274\361\373\"=\362\2465\275\337\261\246;\355\206\\\275\243\302)\275\212\343\225\274ohP=Yt0=\300\003\245<\347\360L=F\3132=\232yR=;\357\206<\350\330*=j\214\323<\2200B=\021\316E=\277\034\013\275\372\363\013\275\203\261\001\275\325-\210<\314\024\250\274\333\263C=\305K3\274\234\014\326\274\177\006\t\275S\340\003\274\317\037\"\275\037\2621=\037l\036=\303/\035=KEZ=.F\261\274\372\332\312\274\256\0014\275\036\207X\275>^\007=\225\264\257\274\016\023\351<\253\207)\275u\234<\273\237\331.\275O\316*\275\316\2027=b\257\352\274\271X\000=aEI<\216\274q;\024`N\275E\244\341\2748\342\362\274a\230\373<j\204&;\355\024:\275B\216\307\274\274\017\311<\024\242\306<\245\375\337\274\3209\024\275\001\035\031\274N\241\353\274\336\210\257::\3237\275\007B\344\273\221\223y\274\231\013T=\357\316\226\273o\221\205\273\346\356N=\351\034@\274\344\274\032\275\365\007\003\275\373i\025=\206\257\n=\316\326\271\274\263\221\225;c\2603=\254\351\264<\031lH=ro\336\274\262\377X=n\356-\275\307:n<\323\321R\275\331\265\303<\270`V\275\246\220L\274#\221\247<E\333K\275\241\333\032\275\307\303\312\274\236U\021\275~3\225\273F\2348\275\314<\261<\265m\004=\263Da<\007\336\207<\r\207\032<\344D\020\274\334f@\275\366\225\007=\260\213E=c!0<b5\252<@)\373\2730@\034;\035\"\307<b\037\024\275\031O\224<s\014y;\205?\330\274\213\033(=U\226\\=Q\251o\274\016\026\306\274 \306E;IA\340<\265\321\356<\373\246\224\274]2l\271\354<[\275/\327\005\275\304m\023\274@\010\315\274m\300\004=\352\361\023<5t$=+\362\037<\374#\030=[\243\371\274f\302\372<f\006E:\356\023\276\274\r~L\275B\361\203<h\017\335\274\3477M=V\2555\275\3778\017=d{W\274S\257W=\257\230L<\237\030,=P\263)<$\214Z\273\231B[\275Y\035\266<t\255\007\274\223\236\375\273\240:F<\341\316\336\274\310\331\372<\000eK;\325s,=\261\004\260<3\014\027\275F\267\265<\271S\342<~\351\032<\320\241T=)M\306\274N\203B;s\246&=\226sR\275\317\231\213\271\327\031\\\274\226^\345<\344\3239<\204\235\"\274DG\333<.k\261\274\'\265\201<\202\335B\275\255\311\004\273F\353\270\274\344E:\274\371B\013=\'\317\373<\207+\273\273\213\021\206\27331\000=\265\261\247\273\374,G\274\323\303X\275\206\246)=\311\335\357\274\212\347\342\274c\351\361\274\25269=\223\177\307\274v\271G\275hQL=b\026\240<@\020$\275\255\231\244\273\305D\373\274\r\253\347\2730I\207\274Wl\217\273\223\207\252\274\226)\007<\263I\022=\005\352\342\271\376w\251;n\027\316<\331L*\275\\\353\300<\234iU=\364\224!\275~\305I\275_eX=!(\r\275\311\3110\274\010D^<jd.\274zyQ=\253\250\274\274@Jv\274\006Y\033\275]\2621=\373\n\t<E\033\033\2748\224\234<fs\201<{.\036=/\334\355\274\013G0=\364\232\357\274\326f\032\275\350\2357=W\326]<\317\016V=EV#=\210\233\374\274X\216\204<}W\026=\177\264\030=vv\267<\235*t<\027z\260<\035\263\335\274\310\206\300\273\032\320\004=24\253<\317\303\034\275V\317\375;x;\266</d\'=\335\261\315<\346\367+<C\343\032=\304cB\275\266J\035<4\277\335;N;=\272B` =\332\004\235</\222{;\'\177\274\274?V6\275\311\215Z\275\035P\026=\362<\241\274\n\336\225\272\254\207\363\273\322\201\376< \032\316\274j\361\346\274[\227E\275\255l\027=)\337W=\251\244\262\274+\000R<oJ8\274\306Kj<\326\010(\275\215P\025\275\356\322\307\274\231\025M\275\025\372@\275}.\300<&\366\305<\334s\307<n\022\226\274\262\364\210< \347/\275>IM\272\'\010E=\207\355F\273\345_\244\274\005;\\=\360V\254\274Q\223\240\274\210\201\"=\214BX=s\033$\274\370\210C\275\237Jx\274~@\373\272=\014\017=m\037<\275A;\320<O&\326\274\264KM\274\336j\016\275k\350U\275\300\263\335\274v\266D\274\262OS\274i<I\275ZA\220\274\244\036\224<\306\211\017<;:9\275$T\037=eD\262\274\332\306\317<%\363\376;\307u::\374\360\247<m\344\223<\n\213\223<%\256<=k\001G\275\327\254\261;\304\022(\275\000y*=;fH=/\201\202\273\244\021I;\325i\013\275\334\207\026\275_{;\275\266f>\275\366\355G=o\236\035\2758\002+\275\235\321\211<\036\275\315<\364\004\032\275\227(E\274\027\006;\275\342\003S<\037u\240;$G2=\262YX=\254\347A<\032\313G=\370\375\245<e\231\314\273\202\3650\275?\3615\275\260\236M\275\027\0353\275!\374N=\341T\272\273\371\340\222<\242\237\325\274\310u\001;\325\265\202<\025\224\301;l\345\365\274\235U\331\274\213\2046<\261\315\270;\367\210\361;G\357(=\275\327\353\274\235\000\370\274\355\223\225\274\304it\274\200\343\262\274\267\204\032\274\272\005Y\275\207\037\35796\307\300<D\036<\275\005b\342<9\244I\275>\007F=B\003\307\272F\013\n\275\257\331_\274i\356\215:un\217<\3035p\274=\000\014\274\002*\036=.\233!\275N\332V<\352\tW\275\372\317\030<\274\214\213;\324\035\004\275\257\254\255\274\033x=<\325\242\251<\236Mj<\236\225\373\274|!M\274e:.\275\324|H\275\177\211\213\274\222\342\201<\360]\203<\006\255\247\274\033\244\023\275\345x\020=\216\266A=z\007:\274$\262\336<P\000\352\274\222<\017\275\016o!\275\017\205.\275Y\336\216\274\276\371B\275\377\3618=\t\nE\275\215\263B\275\302B\343\274\031\3060<v\354\347\273\352\232b;\217\214\004=\373q\014=\r7 =\003\"\312<I\"0\2755\0131\275\247\356\374:\303\260\202<\340\304*=\324\367\'\275\250*_<\304\235\000=\001\321\014=NX0=o\263i\274\203\226\002=\270X\373\274M\223 =f\264T=\201z{\274\342W5=d\247\352\274\0259\251<\036\022\221<\341!\207<J\023P\272\332\322T;\275\377+={\301%\275v\211\340\2745\221Z\275\301\300W=\336M9<\263\231\t=X\262J\275\275a\001\275q^\003=\2007\214\274\241\301\260<`\r\306\274{\373\013\275\214\355J=\367;\355<\233{\370<\\\306\026\275T\016C\275L\372\034\275u\300\304;lz\007\275;\332\037=\361h\306\273V 8\275;\335Z=;\230\'\275\251el\274\222\177!\275UP+\274\307\214\335\274l\037I\275*\226\240<7\311[=4/%\275\340\005\224\274X\307\342;s\377\345\2749k\340\274\215\264\033\275\354\032/<(W\032\275J\016\330\274\002R2\273Vj\244;74\005\275\203\211\302<T+|\274\\\301\370\274>\322\274\274\262\024\034<\243\313\207\273\t\354[\274\227\373\366;\025\\5<\r\363\316\274&\025K=\332\0210\275*\210\003\275\303\302\031\275R\340O\275\356A\320\274[\200\017\275;CJ\275H+\035\275\325\217\"=\242\316\337<v\342\006\274\231\227\026=\301\210\245\274wW,<\340\025\366\271S_\275\272~\306A\275\234\302[=8\226\n\275\341\032\303\274\020\214\210<\335\331R\275\231\320\252\274\267&f\274\341\267R<\ru:\275\306\212/\275kw7;n\334\013=l\024\267\274\330\312;;\352]p\267\333;\356<\306uX=\267^#\275\031\365\272\2737\373\214<\263@\364<\233\252/=%\310\316<\01354\273\030\251-=\035F;=\307y\033\275\r\373+\275\367\201\032\274bQ\331;\007\360@=\306\205-=\215\370\234< \214B\275O\005\016\275\3143?\275XG3\275\376\263\"\274\370\t%<\247\327\016\275\'\212!<\347\345Q=\230/\033\274m\365:=\231!T\275\370\311\245<bp\355\274J\321Q\275Bn\207<\334\343\t=\217\243G\274\2736\235<\214\0363\275u\'(=\351\3302\275J\333\017\275\213\300\034\274 \351\034\275S\322\206<\006c*\274v2\001<\314,\246\274yr\351<\273\373\203<K\2353\275L\227V=\260,\177;PRN\274\264\032\245;\260\213-\275\333\214\216\274\266\016\251\2734e\027;U\255|<K:\211\274D\240\\\2751\243\264\274>\364\302;\203\343\335<\374#\350\273\004\372P=\201\353n\274j\255\234\274\325>\311\274D\214O=t\010 =\206\241U\275\253)\242\273\307\273J\272u\347<\275 \367\257<0\013w\274_\330\'=\334\025\202\274\245 N\275\366\366\014\273:$)\274\326\337R\275X\250!\275\375c$=6hD=c\204\252\274\002KW\275\246\261\007<\232\213\274\273\357\3060=\272FN=x\316\247\274\026\002\'=\275D\377<\326\007\303;C\341!\274\2669\205\274{\247\010=b\326\204\274\354N\251\273\315\2244\275?)\237<;\215\313\274\2470\314\274s\r\005=DF[\274\330^\215<\241P\350\273\230\216\021\274\020d}\274?+\254\274\205\tW\273x\2073==\321\007\2754Q\266<\345\271U\275x\032\016\275n \'=\207\226\013<L\020I<v{\013\275\335\306\354:\247\203,\273R\324+=\336\363\275\274\276e$\275\345\272\326\274\216\216`\272\261;\300<%\031/\275\201\255\337\274MG \275\263\215\026=A\360\026<\316\211e\273x\322M=\035\r;\274\225\220\301\274\352\245\236<O\035\r=\265\353\036=\006\'X<\240\241U=\324w\347\272\254\013.<\031\347v;\2002{;\213\347\005=;HN=\006\343@<\273\202\322\273+\",=!=\007\274?*\314<\221\253-\275r\307\t\275\270\"\014<\\E\312<\002\341P\275)\177\006=8qc<,\225\210<\343\3038\275\034\322\224\274\352\277w\271\001\355\202\274H\234\032=-t\321\274\227\300\030<\266f\365\271\332\202[\275\333\004\353;8}\375\274\320\335T=I\201\346<\006 9\275E\356\350\274\022\332?<\024\022\023\275!\330\220\273\200\346\n=k\025N\275{\247\023\274\357\303\013\275\307vt\274\317\333K<\245Jp;\275\025\235<\206\022\032=\210\2229\275\343;G\275\210\275\312<4N\334\274\352HA=\202\025\027=j\326\035=p\303*\274\223\221%=\231M\020=rh\335<\033\2726\275\337\270\267\274n0\027\275k,&\274\230\204%\275\315\210\254\274)\273\023\274)r\351<\267[A\274\233=F\275\023P\031\275\341\317A\275\210\363\223\274\307\332\211\274l!\367\274\251U\355<\210\213\320\274\3408\276\274\302\214\361\274&\300\227<{\241\234<\010\0312\2759\300=\274\326\342&\273\300E#=\314U\247\273O\252\207\274\331}\014=\204@\032=\244\357\327\274\004\3001\274\031V\216<\225`\223\274\211\3117\275\246\254?\275\030\322\222\274\032\254\271\273\223\356\276<\345` \274\311\177\226<I!\315\274\376\t\211<\232\371U\275\270wN=-\010\004\275\261\026%=\264\251\t=\276\250\223<S\013\013\275U\243\353\272[G\030\275\375\343\007=\177\376(=\235\370\027=3\345*\275g\025,=^\352\257\273\017\312n\2743\307\007<\002\242&=\201c\007\275\023\344\266<|\326\031=\223\347\022\275\303\333#\275\000\003\372\274\231c\t\275\276\345\'\267\022\3170=\353\271\036\275>\242q;7\325\027=\370\246_<C~\244;\240\"\037<^\303\207<\203\310\\<Tn\323\274\212\223\301\274\313\315;<\310\244\332<7\361M\275\236\373T\275\342\363*=\252\360\263<\264&;=s\217\t\274.\223\017\275\2623\037=G!\027=\345\250\311\274E\027\255<\245j*\275\251\302\n=6\004\n<\336\263I=v(8;|\260t<O=F=\005\3174\275\232\244\300\270\260>\230\274\232D\035\274$\376F=\0055\010=\002{+=\365fN<\272\2173\275\320\260\272\274\335\276\301\274~\365\000\275\274\240B\274]\363>=j\237\251\274hg\010\274\275\314,\275$\203\263<cQ\341<\243R\025\275\317;\212<\337:\207<\320\216G=\324\0379<\342\252\254<V,\030\275T\354\036\273Nz\345\272\377\024\335<\255\201\014\274\204\325\266\274>\311\202<\262\207\327\272\332\007\020\275\335\322Z;p\023/=_\'\317\273+47;\241\232\022;|\2106\275/\351\213<\037\302;=\356N~<\r\376*=\334i\303<\357GP<\201\332\226\274\237\001]<x\346W\274\371V\\=\335z\266<0G\007\275\220m\204\273\020\324\024=\273ZB=\323\332\264\274\365\236\266<\363\336\016=/_\025\275\347{\036\275p\035S\275\263\376*<\216m\305<\033\310R\275\204|\013=9\261\'=L\210\231\274\344\347Q\275\246\021\362;N\345\364<m\320\000=FL!\275L\340?=\250o.=h\276\343\274\315\377\237<\337X\225\273YM;\274P\305\276\274\031\244X\275^ke<\364\037\230<S\327U=Vx\215;y\317\304\273\231o\311:\017{3=\251(\034=\205\211:\274#,\312<\316\236\354\274\0229\177\272qp\327\273.\320\034=\363\375<=\344\264\355<\247\211\"=\303\334\206<\255\373\n;\340\240\017=M\364\014\274g\367\003<\213\314\356\274\240\357\000\274\217z\326<\375\273\364\274*\224\'\274\355\376\'\274\330\253\036\275\0302\365\274\314\213\314<\r\224\211<_\032\237<\326\035\r\275\2768\264\274\016\2642\275\323\3167=<\377\253\273\243/\005\275\306\220\010=\326\217 =\342\027\013\275\tn~\273\323\013\253\274\n\231J=\333\336u<\374\2071=0\'\275<\010\217\351\273\345\306\201\274\335\256H:fL\016<\231~\207<:\0359\274\3101\265\274\343tO=\237E\272<6\030\016\275[B2\275@\303v\274U\"\345\273\303N\007\275\252{+\275\030\211\313\274U\216\\=\315q\366\274\257\351V=\364\234%=\373\240h\274\333J\306\274=\202\262:b\016\001=\373P\036=\346\226 \275\317\240\335\2745\245\221;d!\211;\301\216\255<z\001E=\247O\'<<>I\275[\366\221<\245\210]\274\231g\352\274k\'\234<|\237\212\274\275vJ=\366\360\014\275\237\256\336\274k\336F\274**\005=\023\252\316<\227wT\275\216r<<V+-\275\227u\371<\267\305\262\274E^Z=\030\217\317\274\005\240\214;,\237/\275w\005\347<\230\216\027\275\276b\374\274\032\322Z=\010Z\005\275\230LE=\241\212\353<\002\322\227<D\032W\275\000p\332\274Z^\002\275*\345\265;\305\370.\274\310\355\316<\205nH<\024&\357<\272\363I\275\261yZ\275\346\006B=\231\323\306\273S\265\010\273\357\3657\275\004\010\237<=;U=\362\314\001=\024\261\216<\263\'#<\206\331\223\274\376\177\035=\271g8\275\312\314\337\274x.6=\021\000#\275\3269.\275\203\031_\271!\331\201\273*\364\036\274f\222\350\2741\354\033\275\251\334\037\275\317\301I\274\301\346\236\273\2073\340\274\272\362\034=<\200\217\274\211B\352<=\360o\273u\203\223\274\266>\301<\002!\211<\212\232\002:\023V\236<{\3226\275\037\273P=\201\221\252\274\001\314\016:.\226i<\312\312\254<\351\316\023=:8G\271\326\274\211;\0178\333\274\306\227\316<\\\354|\274\316\377\322<C\3132=\304d\363\274gd9=J\274\023\275f\342H<n\360\367\274\356\346\260\274\210\373\226<\214Z\243<\332\2737\275\324\303\312<\325A\373\274\230\235\246<\036\023\326\274\302\026A=\036\030`\273\351\222H\275^\371A=\02165\275\021P\361<\326{\317:\373\n\327\272\330\006\240\274De:=\273\243J=\202J$\275\361\324>;\267\202>\275\212*)\275j\345O\275h\026:<T\'\000=\215\250L\275\202j\310;\233\302&\274\315\374B\275\316\205\364\273\252\355\003=\354\261\006\273\"\031d<\022\024\314\274\334\275X=b\207\326\273\266B#<\230rO\275\275\372%=>\331q\274f10\2757O\036;\206\303\226\274\242u[\275\232-f\274,\261\023=\010IA\275\341\265/\273\243F\377\272F\313>\275<=9=\274O\006\274\357\023\002\275\022aC;`\306X\274A\0239={W\017=\226bH\275\222\346\014=\201m\014\275\032t+=\327I\'\275w\331;\275\177r$\275\310\032\202;\217^t\273\2707\033\2751\242\210\274\347\034W<py8\275\223\214L=\2348R\275\236\246Y=\314\013\332<+\245\226<?\226\276\273\323$\020\274;\300\271\274{\305+=\000\355\353\274\200:A<\312\261\223<\245\362/\271\360\206\262<\365?\'=\263=\3159}\010\221\274\345\350 \273\355;.\275\227\361Y\275y\247\201;\353\320\'\274\366\026\003;A\3007=%\200\231\274\214>V\274\231\026\216\274`\220\264:O\327\345\274\215\372\t\275K\231};[3\370<W\272&=\275\031\030<D\323\377<\267,\263\274\021\251\t\275\376Q(\275Z\022\216<z\347\033=V\234\035=G\251\255\273_\2564\275\005\314.\275\200_1\275+f\274<\221\344\264\274\235\341\322<\351\350\215\2724\341\210<)\325G=\301\325\'=\251t\030\275\341u09\2354[\275~\260\201<R\334*=\247\016\365<\236)\032\272R\343D\275\300\232\264<:\3374\275\213g\032=\367\341\321<G\203\030\275\237\242\227\274\001K;=^zU\275\0374\255\274\25554\275\'\203(;\332\321[=$\225h\274\351f6<&\t2\275\276\204+=\303\373\342;\211\373^<\302\014\233\274\260}\021=\3577\300\272\266\370y\273I\034\336<\247\332\277;a\033\020<0\221\035=\n\235\226<\367\265\016=\327\0247=\032A\364<]`B=\211\\\005\275x\244\342\274o\261\311\274\262e\260\273$--=f&\323\274\014\177\017=\325N3\274\246\253@=tf\027:L\352\266\274b\322\370<\364|\240\274>l\320\274\320\244\340<3\217O\275\002\233]\273\266v\030<\0373\373<\361R&\275\311\277e\273D\340\356\274KwC=\331\021\233;wB\225\273yP&\275\332\275\222<\371p\325;\342\206\310<\312<+=X\261\260<1)\213<\336c\203;q\305I\274\350w\322<U\3329=\030N,\275\260:\210\274(a\301<Z\335#=\353\n\315<\206\233\300\274c[\236\274\000\337\3269\344\307[\275\215\205\273\273\367\252\253<\377\254*<\205b\270:\231D\306\274vP <\212\360\366\272\213n\006\275Q\274\024\273\225u*\275\352l$\275\213o\376<\307)1\275\324\322\262\267\300(\341\274\224\"$;\030,3\275V\020\322<l\340\010\274\276\3375\275a\225{<Yj\324\273\335gF=\204\352\204\274\364\213\030<\213\t\002\274P}\236<i\211\210\274#V#\275\351\330A={\267G\275\364v\025\275\322\271\301;w\027-\274\325\3127\275s\213\327\274\303\203Q\275\200#\207\274M\002\024=\nc\205<\247\241#=\001\025=\275\021c\376\273ns\273<0.G\275?\364\023\274\254&\017=`\177&=B<\232\274 &u<\213\303\362\274{\2356=\314\357\265\274\353\004\003=\244\271\014=%\331\375\2749|\014=\030\030\357<\300\304\030=vt\035=\343H:=\236;\273<\277^$=\232\2430\274\026\033\365<\267\317\277<H\210\227\274\211\217\026;\263\323\004=%\013\021\274\032\242\026\275`B\310\274B\365W=\375D\034=LF\'\275\212\"\013\275\372\351\350;I\237S\274\274)\004\275\013\310I=;\363\225\274\335\232v\274+D%=\326z?={\206\371\273U\215t<@!E=\343*h;\320!\236\273kN[\274\200\330\220\274\005\237/\274\220\000\210<!^3=\016\346\247\274\316\365&\275&#\271<\201,L\274\007;\351<\005 \316<\017\220?=\343V\214<\357\373\013\275vP\001<\027\0014<[\037\016=\225r\371\274\311X\332<\004\027\364\273\216\364q\2740\2002<=\204N;(\255\210\274\376\252\271\274\341;7\275zO4=\307\026N\275\2416\030\275r\375\035\275h\233-<N_Q;\340*\211<\341<-\275\021\262\025\275\323\037\325\274\344\213\271\274z\236\313;\250mN;\335\307\002=b\372\037\275\032\240\322<\330\201\220<\373\240\232\274\326\0360\275\366\324,=\227P@=\241\"\223<\023\375 \275\345\026I=-\005\316:\307\207 =\352\225?\275\321\344\030=\252\226J\275:\222\255<;\362\020<\370\343\246\274\361\220\266\274\"\357\004=\375\370<\274\257\350A\275\304<F=\327\207\367<\270D\274\274\302P\r:\326;1=\367w\352\274pG;\275i\'\001\275>\320\374\274#\306\034\274\235\332+\275D\204P\275\002\330H=Q\020\311\274\353\315\205<\347xI\275X\330\271\273\304\3109\273]HN\274\324\032I= \370O\275\214t\037=}\347V\275(\320\256\273Y%9=\341N\024\275\002e\\\275\037u\273\274\2129D\275\231\016\264<\363\004\3319M\3353<\035\307:=\210:\t=\301b\004\275l\254\005=\237\037\315\274\352>\210\274\222\034\345\273\25289=s\312\237;-\207\n\275\370\331\344\2748\344,=\322\342\031<\321k\250</\030=\275\217/:\275\241\032\263\274\255\375\250;\255\353\343<cUM=\237\n\303<\350\252A=\305)\363\274\025\263\342\274\317\005\364<\350\3253\273\205]\351\274\246\356\020<\037c\310<^r\372\274h\224N=\327X\264\274\331\336\007=\344\"\322\274Q\003\022\275\337\262\202<\3074|;\207\240\303\274\315H\220\273\227V\035\275#|\232\272\022\337\013=\242\001h<\355\310\265\274/\177><+a\000\275\311&\267\274\276\017A=\240\325\247:\321\000\001\275\242~W\275=X3;\337\315\201\272d\212-<1\353\226\274\354\002&\275\244=\004\275\2024\001\275\207\240\003\275}\005{\274\371,\027=r\226W=\327\250\254<P\324\001\275\240\310\n=\200\204\275<\351\022\370:\372\202N=\301\211U\275\347\350\361;\345\2510\273\234v\204\274\272\220\307<\246\204\372\274\302\031\372\274H\013\023=\000g\030<\342\365Q=y+c\274\226\032d<M\341\203\274ff\332\274\206\315\030=\244M~<\360\260\325\274\275t\276\274\340\3278=/O\361<\3439\221<\223\"A\275\021\371\013\275\353\237\305\274$YV\274\3377\004=\236\225\313<\366\0033=%\371g<s\353\023\275@\244\334<\001\234.=!;\331<\217pW\274\316\365@=\201\301\t=(\304\363<\001\232U;$\'B\275?PK=\344\266\305\274\"\261\363\273\014|\035=\031\327t\274\247\020\022=\220x\030<\243\214\363\274L!\373<4\"\204\274&\244,=_v\305<\246\2213;|\346\262<\200=\000=)\277\306\272\001#$\275\302\033w\274\250{c\273\004\006C\275\310\226==\255=B\275\322n\005\275\031\323\245\274\311\314\300<\335\335H=\241\270\366<\010q\020\273\006\206\032;\002v\337\2749#0=\311\331I=\272\244T\274h\227\374<\357S\034\275|P1\275:\212\025=\377l\300\274\022yC\275\006O\340<\004\216\031<fO\024\274\266\202\321<\027Q8=\037\221|<j\271\372<\344F\022=\374\312O\274\247\035!\275\206\323\204<\351\273G\275\264)\006\275\272]i<\026g\036<\223|\017=\231\334\260\274\271w\333\274\3355\014=\251s\315\274\001\204\013\275\270\217\000\275\021\021\"\275\242\\\005\275\177\327\227<\010\254)=\224Ou<\232\3228\275\034\2634\272x\004\022\274\202\370\323\274\210\273\274\2733\037\013\275\213\004X=\224#&=\321\244\030=_\2426;\372\177\244\274\023\017I\275\237\005\014\275M\303\364<A\355\020\275\371|F=\265*m;\311\214*\275\027B\030<\021\234\316;*5m\272\207\221\303<Y\362\020\275~F\017=$\345\367\274\301\375:\275\177\002\301<\353\255\212:O\341\005=\242\320\337;\360\327o\274\334b\023=\331?f<\257\"\370\274\326\220\307\274\3116#<~\377\207\2740/\025<\342|\376<\356V\274\271H\310\223<\367\036;\275\233E\n\274zk\345;9\010\230<\034\355\r=\271\213\313\274\352\203G<\003Y\301\274\252c\324;H\261\016\275_=\301\274\004\217\314:{G\276<[\303\034\275\316\006#\273\324-)\274\206\3746=\260`\023\275\000J\257<y\034\244;\005\014J\275\\\266<\275\374r9=\330\254D<d4\031;\202aN<`\001N\275\212\264\017\274\r\232/=\020\227\371\274\347a]<>.\032==\262I=\210+5\275\205X\364<\033oY=\227- \275~^\211<g\035F=\267\336\354;TT\355\274\013{.\275`\302\022\275\341\251\313;K\351\000=\357\021J\273\274R9\275\3141\252\274r\200\034=\034\255\002\275\215`\354<\372b\230<U\201\'=\372\321\312\272\034\034=\275\312@R\275\347\220\001=\245F\270\274\310\367X\2743\036\014= \306!=\177\021!\275\306\273\327<\343\023\221<\037)\272<\215\252\035=\327\360\355\2747y\331<v\2071\275>\3461=B\373\353\274\\\311;\275\347\3617\275-\305o;\273\236L\275\030\330#\274\301\237\327<\232\003\211<\351j\026\275\024\tC=\351\350^<V\371\320<\322\007\005=\\F\267;\227\252U\275]#\366;\351!\262\274h\017[\275\262<\343\274\224\3549\2754\376y<\326\371\2448W!*\275%P\231:\354$H;\200r\020=\221\265}\274\343\311\033\275\004\204<\274s\'E=A\310-\273\261\305\002\275\337\3077\275\342\2434<~\320 =%\231:=\227\321-\275\270\374\010\275G\n\265;H\301\005=\221=\266<\313\244\230;\220,0=\374\017\224<k\350=\275\300\255\317\274T:\000\271\256\301.=\014\274\030<\332\263 \275\376\036\000\274zo\356\274\234M9\275J\330\364;\362\213\305:Q\027\003\275\002\\\017\274]\303\275\274\333\344O\275\312\266\014<\013`\251<Uc.=\242\244W\2745\205\004=h4\005=\257\032\302\2735G\351\274\367;w<*\311!\2754\212\330\274g=\002\275E\346\033=#\376\005=\3372\013\275\303.\234\274M)\037<\200\r\003=\241\310\001\273{P5\275\336\315\272<D%\321\274\207/\237<y\336:=c\277?\274>k\212;\037\330\266;z\241\312\273s\267\203<A_\210<\325\201\346\274\020\005\207\274]\257\344\274\375\010\025=\227y!=\370`d\274w\366\375;{\377\006=\252!2\274:\366\302<\033\214\010\275\311i\304<\025\370\304\274|<\376<\364\203\256<C*B=\260\017\261\2742\3070\275oZ=\275\301\302\000\274\324\251\023\275h`V<]G\200<\263\0174=b\036?\275\224\025\272;K\307\226;/\244\036=\334k\'=\336\271\201;&)\\\275P]j\274\2355\353\274\230\253[=\3420\014=\036\202&=\276\323=\275f\207W=\002\256Y=#b\317\274\276\217\222<\254\215Z=\251\323?=\267%\000\275!\263\335;\230\017\242\274\'\216\366<\177\234\260<_\316\023\275\200+d<]\310C=DK\210\273\236>#=\377\':=\222\255%=\270\235\231<Q\230\216<\200v\265<@\024\324\274\237\005\016=\346\277\315<\335\2650=6\325\n\275\266M\220\274\334FK=|]\207;\\\240\020\275Ka\356\274\375\351\256\274\370\316\256\274#)5=@/\303\273\264\222W=\000\244\\=u\256\005=\267g\333<\313H\'=\226\312\'\275\036JT\274\016;T\274\316`<<\3160(\275z\204@=\252S\272<\204\275\016\274\207\251\260\274h\320\272:5Mg<t\nB\274:z\330\274m_\343<\307\340C=\365\017\261\274=\374\225<[:3\275\t\245\337\274\327\263Z\275\235\251\353\274\222\200\020=\315\226O\275KN\370<*\227\025=\270m#\275\305#\017\275^\206\001\275\354\200\n\275,G\313;\357\200\275<J\304\n=uY/\274J\303<=V4\250<D\224\227\274\247\363/: \177\027\275\273i&\275\035\340\323<y\312\215\273.`p\274*7\231<\266\315\025=WnY;<\252\267\274\305\014\004\274\341\026X=\3062\007\275\347\205\000=\272\276\340<F-\225\274\n\203F\275:\036\251<\202 \033\275\312\346[=mZ\242\274$\253{\274}tW\275\262&!=\244\n\376\274\356\270\275\273`\261\330<\262\320\235<\211@\366;vdB=J\307<=[>1<hc9=\311\324\034=e\026H<\004\205\277\274x\253\005\2749\265\005<y\325\203\272\023\341\353<\352j\3449\277\372X\275c\020\322\274\350\277l\274\366\275\247<_\032\206\272c\202\004\275\206]?\274:?8<K\2370<\337$\\\275\034P\231\274M9\025\275\236\"\276\274\000\343\270\273dp\276<<\333}<8\242:=\306\354\353\273S\300\367\274\266c_\273\032\200\254\2737S\034\275 :0=T\233\233\273o\2229<\004\014\'\275\263\337\032\275^-\037\271\305\217\031\275Og\307<\321\004a<\002\365*=\246\347^;/y\366:\350t\321<\367\325!=\277\250\014=O\343\312\274P\001\312<\210;M\274\355\355H\273\350\311O=T\356\273<\222\376\262<\201\023\006=\252\270\'<\3342\306;\241\256\312\274\266\264\305:\240\2602<\357\260\014<\333\245\356<\250\014\220\273T\233\366;\226\204z\274\232\377\345\274\346\t\312<\2163H\274\221\254\272<\202<\333\274\347\344$\275\000\305\035;\007\237X\275\025\274\257\272&Z\031=\010a\336\274\0349\034\275W\264\366<\263\311\245\274q,P\275I\2205<\026}\215<\2314\014<B\375\002=\274\265\227\273 \217\307<YVN\275\032\177\034=\'.\304\2747\254\027=C,:\275\310\243<\275\262\3564=o\306/=j\356_<\350w\222\274\032\006J\274r5\005\275\233n\353\274(\020\007\275KYU\2750\n\325<-\222y<\325\216\024\274\317\361\005\274x_T\275g\276T=\\\226\037:D\006T\275!9,=%\244{;\027\302)=\204\200$\275\037,\034=\222\217\270\274be!=8\376\374;%5\360\274\034\353\221\273\234\262.\275L\024\241\274p\036R\273\020\206%=\203H\374\274\314\300\237<6A\227\274\342Cc\274\220\222!\275\036^\257\274\321\341H\273\253\360\000\274u\237$=\330_+\275\276\262\t\275&Z\2319\235\020 \274i\355 \267\024\276\003=\206\232\243\274\246\374\271\274<\006:\275\345.\357\273\250K\226<\313\307?=\220V\024\275\244\322\006<\246;,\2756\215M;D&\237\274\313\277K=\021;=\275\326\257\033=[\332A\274n\213T=\256\357K\275\351\247P\275\342\247T=\257\250K\275,\345>\2752\021%=\201WJ=\300\0010\274wVM=k\244T=*:\201\273\347\244-\273\010\003I\274\234\310\'=\001g\344;\274\377\303<+\367$\274\235\030\013\275\311DD\275\200b\n=%\031.\275\375C\251\273\233\371\017=x\024I\275\3329\025\275\323\312;;\236\235(\275n\205\346\274\024\'\320;\271\337C=Rf\270<\276\t\212<\"~\351\272,\253\372\273X\345U\275!\314\365\274=\221\230<\362\027\275\273t\271\t=\260\324\233\274D\276\234\273>9,\275\177\260\303<lG\326<3\376\022\274rQ\310;y\024\275\274\377a\325\274\035\260\232\273\376\250\377\274=\237$\275\231\201\003\274\201V\251<\252g@\275\313\305\035<\237\227\004=\314,\341<\254v\010\2751\214>=\242\251;\275\250\207\3229\216\210\375\273\230\354 \275\367\322\2648Z\366\247\273r\313\254\274\356RK\275\036f\275\274\212\t\306<W\366\331<e\352\335<\315\254\000\275\035\034\242\274\007>\037<\251} =\214S\313;\264>U\275,\245L<\222:\n\275\325sP\275\240\305=\275\2639\334<\251\251\345\274z\210B\274z\034\315\274\246\231P;\362\221T=\276\246\340;\'\230\230<\217T(=\310\367U\275\305\3301<\312\t?=\317\365I\275\342\230\027\273\265\337\027=\033\2370\275_A@\275H%\004\275\031\003\031\275\030\337\376\274v\354s\274\377\334\200\272Y<\253<\207K\017\27569\030\274\345^B=\302,\374\274\300\250*\275:\254\372\274l\034:=\242m*=\027QV9\022zQ=\001S7\275\330\244\233<o\n\024\273\362\022\231<\345\267\200\274\031-P=y#v\274\356\356\340<\257\030*\275\374\353R=}]\004\274\025\221\002\275\210\221\375<X\353\353\274+\016\352\274\363t~\274\306\001\267\273\3538\360;\255\356\247<\312\245[\274\266\204.=\273\315\373;\346\214\010=\356o+\275>r\310<\213\312I;\270\370\020\275\317\272\026=\'\223\036\2745\205\307;\001\2160\275K\247<=\237c\r\275o6W\275\001M\305\273\323\244\002\274h\232\202<\323\214\021=w\242\351<\t\365\224\274\336\274C\275\350\270\"<\022Q2=q$\025=\3233\340<\004\017\366\273\236\220M=\021 \006=\222\264-\275\202\315\236\274\177\363C=\245\335=\275\335$B\275e\272P\275\307zC=\315\034N<\375\177\260<F\313\022\275a\0347=\243;\023\275\002\206\r\2744\345.\275\245\220 =Rn\010\275\260S\007=\362!b\273\221J\360\274&Z\317<\321\3274=\214\333\235;\222\322K\2740}\005\275\004o\023\275\210\217\366\274\337T\013=\001\202\352\274FI)=\325\273$\275\t*\201<\314\311G\274G\347G\274&\367N\275\314\322\263<K_F=V`3\27505A=\370\314R\275\272\215\254\272\237\242\247<\372\252\025\275vZ\211\274\242\276\010\275\310\022\204<\264h(\275\204\006\322\274\177\224~\274\325\267\237\272\350\2649:\370\333Z=$vO\273\360\004\037\275\265\312\252\273\264#!=\222cX<@\2069\275A(\021={\2026\275~\271\"\275\221\2065<\014\335\032\2755\004\017\274\032\233\206\274\250\234O\275\022#)=Q\377,=%\364\372;<~<\275\002\344\323\274^^E;x\331\277<\214\327J\275 \020\265<\240\307R<\001+\272;\333\210O\274\033!\031\275\264\361\014;\304\333\342\274U\317\004\275\242.X\275\2540G< -\311<\342\363\031\274%]\023<{\000\211;\205\336\225<\231\210I\275\223[\361\274&S\344\274\360\025\366<V\205F\275\266\201\022=\2120\372\274\214\\?=\373\230\340<.\260D\271\353\230\201<5:&\273\245\205\021=h\2433\274\357U\002\275\014\336\345<^\341F\275\222\376P=c}\320\274|wP=E\337(=\035\271\344;\270\1772\275@GR\275T\374\r\275W\216\035\275\235\214w<\033\330\031\275D\301\036=$t\376<\313\321\320<\337RF\275\330\3736\275\224\363\005=(\222\353<c\254\350:\310\251\031\275\315e\016=r\306y<\030\373\244<\025q\321;\034,\244\274h\271I==\346\026\275\267\306*\274\007\002\314;\230\327\316\2719\370N\275wbD=\260mK<2&\253<\341\222\037=z\256\013=\362\206\037\272@\r\014=\333]7=\224\004\310:\356\037\353<\301\336\264\273\026\225\363<=\345\260\274\262&Q=\205\202>\273x~9\275\245\237\035\275\321\027\034<\rLW=a\276\253\274j}\324<U\371\231\273\243r~\272\035\200~\271\356V>\274\005\375\026<G\300S\275\037\277\027\275\350o\001=\334X\002=\230\303\254\273\024Z#\275\373\274\026<\3565U\275J#1=\324^<\275\232\253\205\274f)!=\223;*=my$\275\355\014\257\271\201\350\022\275\340\237\331\274\245\335\025=\227\342\222\274\027\362\013=6\363I\271V\253\264\274X\257\324:\300@\375\274\220r1\275|\224\341\274Ab\230\274\230\343\235\273\315\237\355<\241\212*=\372\305\\\272\255r\216<6-(=\222q[\275\037\303\376;\'\005$=|\315m<\033\213\230\2744\3206\275~_%\275\337F\237\273 :\003=)\'D=\344R\200<\003\223\301\274T\221\265\274\236\330\333\274\323\313\033\275\227fd<\031\350C=\352\037\366<\361\003\215\274P#O=\234\277r;PC\034\275\326\0017=\211\325\214\274\360\354G=\301p\217\274\000\302\354\274\327\031\\<\202\201(=\272\2721=\016]\r\274\230\013\022\275\262z\306<N\031\3229\370\361\252<\026\276P=\275\337\334<n\354\301\274\0338J\275\034|\262<gv\004\275b\377\356<>\334V=s\347\260;^\371\016\275\372\220\330<\226\032\257<\242(:\275\253HZ=\207X&\275p\252\200\271\037\331\304\274%\3174\275\335\375\323\274\307D\023=\300\370\030\275\355\367\032=u\304x\273\370\261\000\275\270\033\266;\030\251G\275\220\234\231\274\001\027X\275\006\021A=\364el<Z\254Z\275\2628\205<\313U\262\273\375)6\274\361o\321\274\205\265\336<,7\r\274\362n_<VV8\274\233\330O\275(\337#\275N\223~\274\200U\257\274FAO\275\375\243\313<@N@=\276\315{\273Zlv\274\266\222>=\370/\252;\274\342\023=\202\023,\275\354\005\n\2748\245\t\275\007\271\341<\320;\210:\2160X=\210\273\253<\257H\235<\305ad<Tl\245\273\013\310\343\273\000;\233<\233\177\277\274\211\231\005\275\251D\241<\246\216F\274y\305)<\375\260\365\274K\347E\275\341\320\302\274\014l\002=\014\217k\273u\021+;a\201\334<\377\336-=\323\331\363;\234\016\005\275\003\0057\273\360\027j\274\313\324==\363Im<\004l\001\27432L\275\334Z1\275J\016\327<W\227\243<}\205[=\3473\251;\204\016\001\275\233\333\245;\007\0223=\337\350[=\373\\B\275\276\0357\275\273d\002=\317O\235<\2164\000\274BJ\031\275\272\357\220<\264uK<I\323\023\273}\247\361\274\343\265\224<\rsJ=+k\032=}\327\352<z\242K=?\333K=\327\002T\275\323N =\315\331\315<T\3508=1c\020=4]\216\274\232\000\362\274j\377\246\274\234;\331<\tpZ\273%\"\266;\262\022\034\274\020\323\031\275,\273\023=\337h\277\274p\233\027\275Cn\202;s\317\224<.b\247;\370\007\031=\2656B\275\005g\021\275\226\314>\275J5S=>\251\037\275<]6\275t\231?\275\033\233H=\2353\033<OoB\275\254\353\251\273\305\362O=\305\200\273\274\362P]\274!\252\013=\204I\325\273q\000\222<W\365@<\370\022\366;\253\177\026=\360\006U=r\211\356;\021\"\216\272\002\270\003\274]\235\373\274\354\035X\275V\333\317<\005M6=\376\273%=\341\375\253<\233\260\360\274t\324z\274z\310=\275\352\2467<]w\004\275q$\031\275=\020E<\362T\026=K\003?\275\300 \'=\351\'\n<c\006P\275)\225b\274\022\032%\275m\361*\275\342\337\r\275YE\343<\000\327H=\035?\374<W?9\275]\371\357<\031>\003\275\303\2610<\"L\343:\236y,\274\341\361\215<\027\037\000\275\'|\035\273\2024\202;)4A<\221\3520=\217\333\020\275\232\036\006\273\342y\017<O\315\225<\026\265\007\275\360J\307\273\213\320\002=\273\364)\273\272Q6\275\276\177%\275\025n7\275\345\030|<y\364\270\274\226\233K;3\275\356\274\352\002@\274\200N\336<m\330\231<\314\307V=Tt\246<a\335W<\236\250\357\274\277d\013=%\274X\274\010\313]\274}\277\004\275\035\',=HD\377<\0317\367\274\372E\005=\277:%\275\302\236I=0\263\261<\221\340Z<$\326\353<7\326\037\275\252b\346\273*4\367\274\nQ\244\274\330\317\244\274N\337T\274\3619U\274\033P9\275\026\325\020\274\266\220\014\274\034\327C\275\356)\325<\013[2=\t\223\023=\372~\245<\177y\036=#\250\202\274\217lC=\356fs<J\214B=X\230\306;H0\345<t\034&\2757t\233\274\014\337+=\322\333#=\206)\262<Fb\002\275?\3475={\007|<O\372:=\t\236\241<\020{\036\275\334\322\026=^\230\310<B\277\264;\302X\377\272\214\003+=\270o<\275\220\254\335\274\362\231\002<\254\004\225\273\216\202\250<^\224\034\274\016&\001=Z\027*=uDh\274\227?U\275Y\332\034=i\n?=\234|%=\225\014\231\274U\306\021=\321\007O\275W\303)=\017/O\275\275\223\331<\262(\362\274\004K\247\273\365\014\332\274\341\257\224<R\210\355<\270\263o\270L\3642=\025^\357<\033}\212\274\365s\271<\204\207\'<\177\326\326\273\275\222\t=#1\201;#K9\275\030\215==\002aM\275\212_=<{\257\r<\014j\347\274\031\234U=\264\3704\274\272c\024=\232\035\304<\336!\234\274\330\2044=\342\245\233<\370\343W=8\221M\274\364\247*\275\240\276\277\273\246d\013=F\232h<\260\374K=\352\tA\275\352\237\260\274n\350A=\004G;=X\2114=H~T\275\305\3303=\220\310?=\353B\010\2747\243\247\274\002g\353\274\302\306\256<B\207\036=\250\001\356<\032<\035\275\337\357\003\275\267\357O\275f\370@\272\266Y\207<\251\2742\273\375\0200=\336\030\r\275\230\307\340\273\023X0=\2442\201\274)\307/\274\003t\244\274K/\321\274\357\336\216\274Q\024\245<\310@e\274\276\023:=\000#==\325^,<\304,\246<v\365\367<X%&\275\321\n\032\274\302\223\000<I\206U=\264\271_<\243\311\253<\366\2026=P\251\245<_3\336\273\256\2235\274\202s\361<~\310H\275q6\274\274s\036\263<\035\017\262\274\272\021R\275i\276 =\215#\006=\231\240P=\024H\310\274.\252==F\364\013\275\274\303Q<s\331\350;\362N(\274l\223\253<\231\376\206<s8\234;1\035\230\274\370\367\022=\r\236%\275\353\265Y\275>\2744<\036\3513\275+\360\325\274v\301\343<\033\037.=2\257\235<IXV;\300s-=\337\036\363;\351\375\260<t\333O\275g\270\000\272\221vh\274\330\335\017\275v\250\245;\250\333\303\274\210{\202<\2120\375\274\031\310\276<\220\030\276\2741\331\222<\231\377R=U\013\327<\227\275\311\274\237\024#=\224\203\240\274\223A\032\275\006\214\013\275\242Q\335\274\245\271J\274\326\361\024=\312\317\022\275;\220\373<9\2765\2759\352\222\274P\310\240<\245Y\322\273\233\256\017=\240]4\275\036\237\021\274\313\252\375\272\316$\013\275\326r\t\275\017\2619\275>*I\275\013=\275\274\0246D<\030\2362=\2114\276\274\343\2152=\211\024\'=D\370\350<\361t4=\r\372\321<(\032W\275\336\316x\274\262\331\023=i\241]<\030\265\203\274\215\231\020\2749d\265<\251\020W\274\362f\342\274\303,\205\273\207\326\001\274\334-\334<\333a\343<\323\333\206\274-\206\020=\300\374K\275q\361\363<?\030\253<.x\224\274%\351A<mz8\274\025M\004\274a\007};\344{]<\256\375\313<\362\377\202<HH\205;0\010\335<\3625P\275]x\255:\230\200R\275\253\200\326;\330\375\010<\237\200Y=\016\214%=gV#\275N\2423=x\213\020<\337E\262\274t\2329<\241|\266\273\310?\257\274N\345\226\274\31359=/g\277\274\r\335\020=\256/\'\275\232\361\227\272|K\022\274N\245\031\275,b\002\2721\356?\274\234\254\231\274\212\222\t\275_\3468\274\336\246\013=\tt\250;O\004\220\274\232_H\275\205\364\231\273\027?M=\036\351\366\274\301\320c<\341(5=\253\357E\275\002\335%=X\3368=\301\2261\275\241\207\376\274\210\n\237\273\0215\002=\222\361\006<\024\r\225\274\350%\326\274LK\257\274.\221\305<\377\375M\275\002I\\\275a\335\013\275\302\\\\\275\362\267\206\273\221\222G\275\306\321=<f\276\213\274j \351<\356\267\006=\302\034K\274\233%\243\274C\030(=}\022\361\273\327I\020\271\247\353\2169\215\027\204<\026\334\306<\364\337\333\274\177\272\n\275\242\340\261\274\223\231\234\273\272\204\000\275?\252\357\2741\\\023=p\225P\273\204\231B<\360\0066\275~\240\204<3\351\333\2748?\374\274\320\3578<\355\033l\274,\305K\273\360\027\254\274\013\322\000=\277\2333\275\376B?=\265\351!\275< T=V\216\035\275Y5\364\273|\373\370;\375f\241<\351?M<\256\357w;\274o-\275\201j$\275\311\355\306<\255\310\251\274\342\357\003=\n\232\031\274Ez#=\220\264\216\274\325\337D=o62\275>\334\013\275\220x\032=\353#\362<\344\\\375<4\371\n=\352\025\'\275\324\217@=\'\"]\274\002+Z=7S#\274Y\233\350\274\002\355R\274\335\3143=\022U\245\2732\274?\274\223\225\013=o\241;\275\212\367N<Bt,\275\246\323\202\272\371\000\372;\2333\032=\250U\"=iZ|\274\335\277\347<+\t+=\321I5\275@u\337\274Q\000\355;V\3237=\030\350r<+\366\201\273P\245\207<\364p\237<b\251)<5++\275\316w\220\274\211\257\215\274\200\200I\275\356\3231\275Y\234\241\273\"\252\323\274OSG\275\025\342\335<]\360\002=\342\264P\273\211e\350\274\266\322\217<\363i\276\272Q#\26091\370<\273\260\274\020=\326\321P=\213\342\037\275\314S\t\275M\322(=5\364\355<g\335#=\r~\212<Pn\302<\224\206(\275\303Z\230<\025\301\264\274k`\323<\302K;=\335\324\367\2741\242\020:\247&x\274\326\262;=\310\2512={W\335\274/\255\237\274\344\360/=<1-\275\255\212\307<S\250\260:\367\225\276\274W\356\325<\247\002\321\274-W\245\274&\347\212\274\231\023\"\275&x&\275\373\365\343<\347xF=\316\371.\274\203\361\006\275\346\311\237\274\030\331\033;\320\361\006=\377\303\264\2743\014\027\274\202!\353\274\252\260&<r\tv\274\374lY\275J%\321\274\264\314\016\273\207\237\262\273\"R7\275\340#\370\273U7*\275\360\251v\274)\225\017\275\337\346T\275p1\021\274O\350\250\273\342\215+<x\340\225\274\241\000\273<\014>\236\274\257Q\336\274pVL\273M\353\271<kH)\275no\371\273\234\026(=\235\253\374\274\030\3131\275i\366y<\337b\375\273z\027\301;\211\240\241\274\352,=\275\231\276\331\274Xk\231<\216?\263<\330\321\035=IF\"\272s\314;\275\232\025R<\t\351%<O\244\022\274\205\214!=\305\327\366<\352\032\212;\211R\037=i\265_\274\3709\354\274\342\255*<\t\256$\275?\316#=\203\357\202<\306\265\225:\004\366J=\233S\275\274w\323+=\343p\364\274\255\245F=\032\037;\2755\204\313<F\237@\275y\343\200\274\213\326\243;\031\020\351\273\006>\030\272\323\000[\275\327]\300<.\3506<\314}Y=BO\317\273,\206\031\275E2\036\275>\242\245\273g\325<\275\204\317\222\274\251\354\305\2741\246j\274?\254\002\274\221U1\2742\353\036\275\251\227n\274M\253\243\274\273T\023=\347l\001=:\377\263;\213\013F=\016\305\026\275\032\356\022\275\177PH\275\321\366\234\274\274-$;x{\331<\320\362\021=\343\205\202<\224\277&\275\037\314?<\346\312\007;\216?\222\274\263\314\371\274\233<N\275\r\202\036\275g\320\350\2742\215i\274\020\366N=6\241w\274W\001\372\274\247f\037\275\374X\035\275\261\025\345<\330\344\346<O\251\271;\253JM;\210\323.=o\323K\274\315!b\273#\255\233\274\274\211\004\275+\252D=\212\325%\274\374\312\345<p\200o\2743\213\365\274\276\022\340<\004\356#\272\202u\317\274\244aw\274\210\252\037=;%\310\274\316\353\013\275\345m\r=\022\225-=!s\261\273\252\243\354\274\\\216\255\274\236\035\375\274\334E\034=v\020\325\274\'b\321\273\014([\275\303\3358=h\022u\274^\316\271\272\370z\276\274[\003(<h\307\007\274c\311[\275>x\001\275\025A\357\274\tT\231<%}\217\274_\264G=E(\006\275\222\300\t\275,\365C=\326\374\010\274Y\004C=\004\255P=x\031\370<\212\'\312\274\001\373n\274n\372\274<r\r\010\274jg\2017\036\3034\275\004g\226\274>\"#=\261\212>\275\265\323i<\247\327\264<\350\230\302<*\346\371\274\316\313J=\031=m\274c\\\016=\001\370\013=t\260$=\217\261\277\274\274\033\373<\265\216}<\334\273)\275\233\331\302<(\032\n\275\250\262\014=\347\300\311<\234\321\322<\375C$\275\270\005=\275\252-0\275%\237\023\275=\276\206<\307+\265\274\343\331V<p\n\030\275\351\252\221\273\325$\312\273AO\007\2755F\261<\357\207\016\275\213r@\275w,Y\275\252\330@=\226~+\275\2311%\2754\310!<\366\324M\275\305iD=\345\033F=8\252\333<\274\005,\273\005\370\200\273\250\036\261;\241\372B=\241\332L=\330\037\030\275\354P\305<\230\241\303<\343\272\227\274\230\361*=\2757\005\275\213\206\313\274\311M0\275\001\2324=\316\236L\273\273\330\026=\001~\024=l\342O\274R\223\344\274|\177\214\272\264\322\230\274\021\245\320<\267\3110\275\227\222\310\273\244\203\334\274,A0=F\263\215<\201\200\220<\237jR<0\271w<\316\375\005=A\276B\275;\240\247<\3425\023=\035\266\205:?\235\006=Z\253\270<\027\267\220\273r\006-\274D\311{<\203\2376=\276\337`;_\242\033\275\366\275\030\275/\340\017\275\0068,\275\246\2409\275\\O\250\273\337VN=\347\370J\275\311\244*=\235w\025=\211\212\037\275\266F\022\275\257N;:#\206\331<\341\263@=E\200W\275\321\225\304;\320]\223<\023|Q=\"\027\375\274\251CV\274\200\336\340\273H\220\221\273\032\315\030<\326S\264<%p\261\274\014{\307\274\240\213\005;x\263\t\273\264\204\371\273\215\262,\274\253\036\037=\264\301>\275\2662\017\275p\237I\275A\346E<\277R\227:\353xA<\240\263H\274[\2664<\305\202\032\274\230\'\023\275\014RD=/i\026=\347G*=\275\342!=\035\327\252<\267g^;\362\241h;\212>\003=t.\276\272*$\224;\036\340\376<\032N\035=I\244\026\275,\035\031\275/V\220\274\234I\r\275\355\214\331<\352S\305<\211Y\376\2731j\307\274\014\343\033\274\r{\202\273\242\366\030\274\345\240\013\275\274\234\230<\314\220\032=\017\343\255<j\023\307<\304\336\373\274i#\232<\'?\364\274\332KC=\313\277\351\274q\211!\275\303\334\243\2744\002\370<\021w\224\273\350 \323\274\302\207\224\273<a#\275\212&0<\257\274\026\274\230~Y=x\265 \275z\262%\275f\177\263<!F\3048Z\331\354<\203 \311\273g\n\370\274\346\363\"\275a]M=L\254\031\275:W5\274feD\275\363\261\t\275v\345\013<\315e-=[\324Z=\246\010o\273_\310\2009\223\0225=G} \275?\233y<\270\200E\275^\277f<v\305\336\273v\224Q=\206\246\306<\202\355|<\025\210H\275\3417===\025G=\3329D\275\347\262I\274oh\312\274\215m7\275\377\3759;\241+E\275\216\010\n\275\307\324\375\273\321\335\016\275a\373d<\240\014\261\274\355\035{\274(\302=\275\337\213\232<\317\211:\275\225#\033\275\007i\300\273\240U\301<<\\\356\273\320\223E\275\005\361U=\253\203G\274\374\357\024\275#\2661\275\272\323\223\274.G9=\366$\323\274\360\"\331<\372\023\026=\241\367Q=\361\236=;\303:m;\2311Y=M\261o\274TK\300<d\200\263\274!\206S=\336^\360\274\246\204\206\274P\353\337;\rz\206: |\373<\350_\336\2746\345\307\274\274\336&=l\226Y<S-S=\373\343\226<\223_?=\005+\376<\251\177G\275\235>\257;_&\014=)\201\251\274\204\001\214<N=\216\274\237bh<\004\277\274<\"g\335\274\255\004\034;E\373)\275\010\257\320<]XK=\253}\017=W\262I<\363c\321<\3526!=\371DC<\035\014L\275\365\343\001=\257\327\300\274\255\313\006=B\247E\275\026O\232:\352\260\026\275\273\354o\2736\347\235<+ @\275\262o[\272\327\220d\274 u*=R\376;\275T\200\"=\324[\353\273\016\377\317\270+O0\275\253\210G=\334\320>=2o\272<\321\026\273<\350r\007=\374?7=\327\363\030=\357\354<\275\350\262\022=({\004\275^\006W=x\376\025\275\303\025O\275\365\251\2609d\311\210\274|\267\007<\004\031\334\274\3658\266\274\266\322!=\026\305\341;+p\355<2)E\275\326\304\347\274$\306\000=\034\262M\275n\332\377\274\"\342[\275\270\275\034;Y\211\266\274\024\232\320<-\350==\337 \006\275\243\005\241\274C5\275\273\236f\013=\352S(<\346S\211\274z\232\227\274\2262\270<\322\236\"\273\372\023\337;9\250\265<\025p\356\272\027\226V=\314|\226\274\023x\320\273J<\352\274E\'R\275\337\212r<,\372\001\275\237\270\032\275\306\004H=\243\'\006\275`\334\\<\363I\033=\213\374\274\2731\367\270;\300\347D=\304\235,<O!\005\275\253\347,\275\305\036\366<\341\255P\275m\335\241;s\177\360<\'\337F\275s\323\t=\361[&;\263\302\312<\271\203\022\275\226Qe<u\236[\274X\002\035\275\313\000\016\275\377c6\274\262\031\023=\227\262\r\275C]>=x\005N\274%b\275\274\0216F=\352\336S\271hKE;\313\2700\274$\357Z\275\332LT\275\305\266[=\336L5=\335\232\037\275\221\030\013\275\210\254\305\274z\026N=\345\261\351\274Hs\336\274\303\242&<\337\244Y\275\307\201\003<h\257\t=P\335\247\274\242Je\273\201\323e<\177\026\004=\235\336#\275<\2049=\342\347Q<\242K)=\266\006U\275\252W\034\275\257\252\000=\345\r\211<\2208W=c\'\035\275v\3010=\325\215\256<\245e\276<\226+\236<n\360\354\274d\353A\275\0077?<|\216\251\274f&\375\274\177\242R=}ZK=\007\\S\274\326\227~\274\234\034\020=\233\333\025\275f\212\037=\232h\237\274\262C\300<\235\033\323<\317\355\371\273hn~<\325\010\251<\226\206\362;\362\2643<\206\342\355<\005V\"=Q@\350\273,c\335<?J\342\274C\201\311<xHe\274\375]$\275\270\345*\2740\237Q=\270\367\257<3\031S=\222\\\330\274>\001\350\274\020x\344<u\203\221\274\206\032[=\317\345\245<B\237\243<^\266\013\274\275\247[\275\307H\010\275\237R#<R\221!<\307X\034=LX\300<\233K\037\275\023w\305\273\257L\017=\2352\017\274\310|@=r\001\223\273S\005B\275\256U\300<\271\320\231\274w\261\021\275\215K>=\202\000\325\274\241\234$=\305\362\366\274\211\025\3039\271\013+\272\364h\272;\325j\357<O\267\302<G\322\027\275\243\312\350\274b\356E<\357\3474=I\257\237\274\221\234B\274D\231\r<<\277\323\273o\303\247<#E\253\274\034D\n\275;)\226</QA\275\035w\372:\000\274\003=\222\300\251\274\371\315C=$\2542\27513 \275\000e <K\020\347;j\202U<\020|<<l{\031=o~\264\274\023\354\234<\014\035<\275\276Y\022\274E\017\240\274l\262\210\274MQ\215\274\241\356#;\3077\207:\r.h<\261\263\333\274\374\007\201\274$\342\244\274\374?$\274\367\377Y\275av\213<x\203\320\274\t\217w;~\003\030=\327\311\333<\"\002\242:,\375\340\274\341\003S=p\273\010<\372\326V=w\010x<\236F\036=\336\266I=13\212\273\227\201\373;^\230\003=\037\302j\272\303\332$\275\251*\331<N4\020\275\027Q\205;\001\353\303\274\312\331\037=S\237\251<U\310\277;\334\234\205;j\000b\274\032\350\017=\263\347X\275\367\230c<S/\033=&\220G=\217H\267\274=Y?\274C\005\301\274\370\333\017\275\255\261\225;\025\306\225\274\302+\000\275\332\267\221<\343\2133=\213\267>;\306\215\343\274U\026\'=H_\022\275j\364\211<\005\227\304\274\223\256X\275\231\235\'\275\023\235I\275Y\307\200<B{\242<\345\333\203<6^C\275\227\216\273</[\333;\330\361@\2750\245\030\275\033b=\275$B\371;\311\207\312\274%a$\275\001\206J\275\275\'I=\241\357\314<\212\035\026\275\013F\360<\367\251\020=\365\224\217\274\023z\352\2743\207\341\273N\333\025<\363\021V\275l\301\341<\262\373\031\2753\272\"=\270TZ\273\226\037\220<l\312\024\274T\304,<p\216W9\37017<!\305\021\275&\313\213<T\336V=5(\201\273\216\314K=,!\001\275(\311+=\355h\013\274\306p9\272w;R<+d\251<_\206\203<MR\253<\032\tH\275\214\020\223<\342|\257\274E6K\275\305\360\350\273,/\367<\001jS\275HG)\272\206h\253\273\312F\033=WPO\275<1\n\274\270\353\352\274\370\315Z=O\262\007\274:\214\350\272\234\376\206<\016S\347<\302X(\2758\025$=\325\247\206\274\"\347\037=\242vN\275\271]9\274\375L\210\274.9\022\275}2)\275\030\n\021=%\220(=\3033\026\275\363p!\275\310\212\001\275\215HX=\244\256N<T\013\207;`A\230<>\034R\274\347f\332<\013\305\343\274\277\306\322<\245zB=yt\210<\221\220\207\274\312\311\2349\001]^<\257\225\026\275|\273\022\274\tPU=\223\202\265\274\364\013@=\327,\201<V\350V\275%B\361\274\274\236\363:\344M\n\275})5=xd\037<\340\nm<e>\020\275s\005\323<1\005\214<\021\300U\273\"\021\022=OR\035<\014~\007\275b\212\252<\354\\\320\273\226sB=\236\360p<6\304\304<.\235\237<\260v\341<\006AT\275-nQ=\210\227W\271\210\265\211\274\030\320\026=w\320\020\274\\N\374:(\304\311<\375TP\274<\307\271<\242\240\247<\210\326o\273\231\206V=\0021\013=@\207y\274\251\322m<J:@\275\245\345\005\275\324\357\200\273\253\3732\275\000\217\327<L\224u<\323\262\022=\366\343\216<\265\037\000\273\001\0247\275\3244X=\362V\221\271\325\035\354\274\332lH=\356\013\007\275lR\251\274\341\'6\275\371\002\361<9\363:=\312B\330\274]\221\"\275\335\213\305<\037\304\211<Al\250\274\252k\272<\3165\346;\344\215\"<\332h,=\233&\013=\226\351\032=\326\026T\275\377\235@\275\265[8\275\263Js<T\332;\275\330\371\362<Y\232\035=\344\253\340;P;&=\332Ry<\323\264\267\274\362\005~<\260\021:\275\232\237@=b\246\263<5$Z\275\014\2246\275\016\t\341:\000\3348\275\'f:<\006\201>\275\236\002>\274x\274\355\274K\346)=\3359\003=\035\335I\275\3661\350\274\000U\\\275R\354\356\274\353WY\275\342\343V\275\215\3518\271\307\240-<Ia;=]\212\243\274\330\304\344<\222\351@=Q\302\020\275\312{ \275\3653\275\273\365=5\275\n\010\333\274M\265T<\247W\323<\005\377\317\274]\236\032\275\330\233\001\2755\243\034=\373\234\330<t}L\274\2518\024\275\371\310\262\274(\356\372<\317\227\264<\345\305\030=\363}\311\274\267h\277<\317\307\322<\177\252F\275\025\005$<\242O\016\275\rk\332\274T?\010<\262l\332;$\335}\274s?N\275\327\353~<\016\nu\274,\313\214\274\335\364(\275\336\207\272;\365m\267<CJI\275\263\251\363\274\315\215G\274\240\0161\275\340=^\274z\346\371<\255C6\275\270\357K=\024\216\027\275\277\2552=\017K\033\275\247\201\234\274\313\3310\2754S/=n\3378\274B\014=\275<\027\024\275\"a3\275\244y&\275E\346B=\273\017\032<9\354H<\250\"\241\274\307\270T=CbT=\275\037&=\272Z\035=\027*P\275\327\030\263\274\020K\257\274\201\327M\274=$;=\377\346#\275r\272\024=\\\005&=f\217\373\273A\025I\275s\240F\275\332\365\376<\212\363\022=\367}B<\243<\034=v\332\'\275\341\005;=\213\003W;I\005\310<\340\272A=\200YB\275/\223\027:\223\231<=\304\032~\2713g\351<o\242\371\274\265\340\346<\212\347\265<\202eI\275\033!M\275\374\027\007=\352\343/\272\312\3131\274<\257\241;\227\226\010\275|\221\327<\267*[=%\261==\0078M\275\017\364\032<\000\005\220\274#\005\224<\361w \275Y\256$=Xx\\=\027J\006\275\340@F\275\374\330>=\224\215\007\2747n)\275\276\235S\275\264K\001\274.\374*\275\216`B;`<S\275\014\0234=\344\320\377\272\275\215\210:8\211\352\274\006\214I<\374K\355\274\217%@\2750\312\031=.y\035=\204\272\r\275rk\232<\207\236\364<\306\2058\275y\177\2419\262\033\305;\375x\021=\333z\361\273b\311(<:NV=)\021\030=8\350\000\275:QJ\275ve\010=\025\202\362\274\367\005\354\274\357\362h\274>\257*\275L\275E=\245A(=U\262[;Zu&\275/a\020\275\275\364\314<\271F!\275\232\025\202\272\371\265#\272Y$B\275\353\240J\274)>\243:\232\241\034=\331\327\346<\320L\005\275h@\313<\221\251\300<\236WY<\031w$\274\306\376\004=:\025\301<\312\0011=\033\326\363\274\2169\274;\263\001$\274\014(\007=!\330M\275\340\303\270<\3354H\275\331c\305\274\027\0041=\340\337\316\274l\017\346;V\017#\275s\374%=\177\233!\275^\253O\275\21272=\351\313#=N\324P\275\273\277\355;\366\022\001\272\337B\200;K\006[\274\3052M\273\014p\254<\300\3361<\014\202\264\274Rwk\273 &\020\275\034\214\361\272\\\277\027\275q\262\345\274\322\300[=S\020F\274\370\004\263:\023\262B\275\310Z\226;\002k\031=@\302V\275:\026X=\350\342\033=s\242\343\274\3666\237\274FB\254<\024\023\235\274G\254O\275c]\345<[\264\002=\263z\276:_i\330;\313\372M<\024\016\204<R_\020=u \023\274\212\224\031<aH>\275\315k\3258\001v\243\273mH\264<$\205\267<t\276\346<R\207)\274my&=*\364x\273\000\0137<\335\225\263:8\245\341\273-\3735\275\376DU<\362T\336<\006\350\343\273\356:\333\274\273\t\020\275\025+\274\273\212\323\007=;s5=\354\361\335<p\341\241\274i\206\310\273!\025\265\273\362n\347\273\3050>\275|~\201<\365;\022\275_R\314<\016PR=}\177\224<\257\327P:\210\212\226<\221\035+=s\365K:\262]\007\275PwK=\357a/=#D@=\304\374\235;\036\231\227\273\322\352e\274<\016+=\242\300\211\274B\234\332\274\\\325\002=\365\3163=-\302:\275\003\310\202\274\202\026\371\274\252O\033<\322u\236<\313\367?\275\026\301\263<<W.=|8\005\274\2616\367\274\227\316!\275X\350$=\306\302\310\2740\311%=\253z+=\264\243Y=\271\010\032\274S\360$=\340\347\373\274\242\304,=\'\313,=\371a\032<\223_K<\362\325\201\273u\022\321<!\321\341<\250+\267<\274\340.=E\036\037\275\374\355\020\275u.?=\342\325\245<\246\360\372;\215\\E\275}\201\001\274\331\305\216\274\310~F=\326)\256\273\245\371\366<\315$X\275c\354\240\274 \365\271<\210\307.\2756E\010\275\005:\352\273|\347\237<\200\241\217:u\332\335\273\215\377\337\274\340d\027\275k$\215\274\206\213g<P\367\034=\351\\\304<\n\006\227<q\261\252<\020\275\201;hP\276<\245vO=\2628r\274\007\245\236<\222\327\013=\333%Y=\222,X\275\262\334\235<\216\272\320\274\304\276U=\37527=3\277\347<\220\006Y=\2247M=\010\301\211<\372\340G\275\234\243\211<\352/@\2752\323\034\274 \346\211\274\214\316\374<*\006\277<kdM<|\210\263<m\252e\274\222\250\362<\022UP<\326\337d\274&\021o\274\302\243\020=r\350\035\274\302\222J=s\261\202<\244bk\273\365\350\217<\037x\227<L\022\265<W\235r<\010\247\010;z\261\251<\014\207==\310\346\240\274/\024\035\275\370?\261;I\354\013\274\203\020\247<+\311J=\327{\236;\022\264\264;\325d\022\275\366\026\'\274nn\342\274\203\013\"=c\t>=\340I\356;y\037\031\275\240\311\t\275U\304\032\275_\344<=\\\036\355;\242\340\255;\365\3116<n<\035=\267\300\354\273\304\257F\275\340 $\273\021SM=\\\245C<&\303|\274Y\347\013\275\361\010\005\275\317\221\002\275\001n\t\274\224\2414:\347\000\021\275\003QJ\275\337\362\241<G\025R\275<\357\t=\277\226\252\274G\037N\275\320\034Y=\246\007\252\273\261]\277<\267\204/\2759\277/\275\263\337Z\275\207m\213<\010F\213<\226\213\037\275\371\320\027\275\257\256j<\022\306G=W\267N\275\355\225\226\274`L(=\252K8=\276k\265<\343\243<=\005I\023=j\203\002\275\273\026O=\025j\210\274\020\341A=\021\352/=\361<\354<\277j\250\273^\230\266<\315fw<X\306\\=\354\355\022=\356\243\027=\001\3024\275\224\2213=.\330$\2757\222F=\232\003W\272\030\333==M\225<=\3747\027=\364/\017<\024Q\000=9T\020<{V/\273\272:L=\206\026\001\275\260\225%;\3523\346\274\243\005@<Z\330z<\276\333W\275\357\345l;J\351\351\272-?\000:\233[\377<\263\364\242\274\253\333\260\272%\027\264<\353\331R=\220\212\007=\320(\013\275\"S\355;\003\2246<\037\227\346\274yQ\022\275g\201\203\274L\364)\275\225<5=\031U,\275\033\220\\\275\312T)\274w\355\243\274\243\031\202<\372\027\264\274\020\026E\274U\023\017\275;\233{\274\r\372\026=\375\224\301;\377\t\326;\016\270!\275K%\007;\315]\210\274\311\211\233<O\030/\275\317pX\275\265\317I=\352\335\024=\367\340\001=\360\017\307\274\340%\r=\303w\307<c\250N<\2423\\\272@\305\254\272\274L\003=\200\312\371<\030wX=*\'\027=\271F\313\274\332Q\202;\242\326\025\274\363RB\275\0321;\275\347\336\277<\032\nO=.A;\275\217\205 ;\253CC\275|&\340<H\254\276\272\310\037e\273K\200\261<d\355\267<\226\034.=B\177\245\274\335\214\264<|b\021=L4\351\274\245\253$\275\210\232\'=\004L\026\275\376\3533=ZO\245\274\362\344E<\346h+={\272P\2751\312\344\273\311FF=\361\027\006\274}\023\034=\252\003\276:\217\216\026<.\262\313\2740\277F=\375YM\275\307\334\'\275\262\217\007\275\322\t\207\274\201.\317\274\366+\3529\017\273\031\2752\340\003\275\275$c;\355\2447\274i\263\360<\247x\034=K\024%=\336\335\310<m\252{<\006A5\275\363Eh\274\255\273\021=\250\240O\275\246T\266\273\3210\301\274\206 ,<\\W\307:v\356 \275\352s\225;D\201i<\007m\306<lm\372<,\030\215\274@6t<1!\241\274\315L\220:U9\0219\027\231\227<U\006I\275\313A\212<\340{\254<\014\030\351\273u^@\275\016k0=M*\031<\220\253G<\257C\036\275\317\367\210<\247\374\265;\006\3003<L\303\023<[C\346\274\243]\337\274\035\206\203\274\266*\267;J\033X<A\3203\275Z\356\240\274!R\334\273\010\036X=:\026\327\274\373\036\030\275\010\221C<a\032\203\274\334:\020=,\034\r<|\360(\275\022\320g\273\031\263\023\275e\236,\274\231\t\025\275\220\0315=\rY\321\274wtZ<i2W=#\023\243;\377i\273\274\037\2367;r\361\003\275\033\245U\274n\357\264:A\356\361\273\224\322/\275\376Jr\274\317\0147=\340\357W<w\244\373;\251\310\276\273\334\312\203\274\375\346\'\275\025/\014\275T\210\t=2\262\327\273>\355==\315O\003\275\332C\267;2\003 =\321\253\224\274\220W\301\274\014\010\024\275\336\227\242\274wfO<\210\264\265<k\363A\275_v\033\274m\'\204\274=\331\354;5\004\232<S\374L\274=(.\275I\254\024\275\210\266!\2750l\223\274\227\246\022\275\260M\r\275\313\253\301\27309X\275\323\003a\273\306\022\351;\264\343\212<\023\335\276\272\216\250t;\365u$\275\373]\301\274UM\356;\355.M\275\276A[=\263\222\255\274\304\"_<\037\014\306\274J\364\250;d\037\233<j4K\275\245 X\275D\371\341\274p\205O=Z\307\367<{H?<6\341\215\273j\036\016=\020I\265;\017>\t\275\310D)\275eK9\275\006a\363\274\031\222<\274/\327\353\274>\240@=1\233\234<P<\005<a5==\256{\245<U\254\000\275s$\320\274*_\014=jK\026\275\007\231P\275)\245\024\275\211\2357\274\034\013;\275z\033Y=\351PX\273\306u[=\347\376\220\273\245W\343<%(\033\274\211K-\275c\333\'\275[\332|\274\372\223\031=\224s\'<_nS=B\243\031<\\\\\224\272g\220;=+\004g\274\210y\355<;Y\363\270\0254U=nm\t<\334\033.\275x\345G\275\313\373\265<\201\341J=\\L\373<\364\260\013=E\325\337<6\'\375\273\037\tP=\310\202\363\274!\334$\275\310\273\\\275\270\021\203\274g\315\036\275=\362\350\274\202h\333\273\026\216\274\273C\353\226\274\353\r\261\274\034\224\204\274\341\316\205<\364a\210\272\256\377\326\274x\351\374\274\270\377A\275\304\230\"=\021l$\275\222\221\364<\2358\275<r\3200=\211O\374<\255zf\274\025\014\315<#x3\275`\246O\274\2671\341\274\221\r\005=\357\370?=\004\004G\275o\317\017=\314\\\035\275\266~R\274\315\201r\273\262\347\026<Z\314?=k\263X=\027\357\327<4.\016\275=\260\246<\307EZ\275+\330\206\274\257[\365:2\321=\275-F\014=\346\314\215<\203\224\321\274\224\266K\274\237\310\030=\326\245\270\274\n\265u<\335\274\216\274\335pT\274%\322K\275U\215H=\313\207\257;\236\246\010\274wOI=\334\236&=\001\274\337\274\320\355\"\275|\025@\275\021\"\300\274\316\032\002;\333\224~<Lr\232<;w\200<\032\234\366\272<\212q\274\277\030M\275\220n\371\274\260\317M=\232WH<\t\320A\275:\351\270\274\324\254\336\274\341l[\275\26628=\254\265\217\274^\320\341;\317\341\003\275p\226\315\274\206I\033\2755\312\'\275\270&%\275\t\340\266\2730IX\275\343\346\205<5<\323\274\032\246\"=?MM<@\361\r\275\231%\n;\t\377\306;\033\177\026=\225\\\030;7\024Q\274\2009\002<\305\376\301\274X\345\350<\204\276\220\273Uo[<K\371\006=\027I\264\274\326\215\010=\214\023\257\273\202\303\206<Tg\020\275\001\t\304\273\002+B=\347\\\315\274 E;=7\203-;\205n!\275\344\245\354:\343O@<\370V\321<K\212Y=\342\232\004\275\337\230\020=aG\234\274\227\\W=\025\323K<\250\363\360\274\241Q\227\273\013oq\274\211\354\362<\2375G=r*&=\301\337\"\275\227\267\016=\021Ri\274!eR<\346\r\255<\" \327<\322;S=\344\\\223\274~-T\275\362u\262\274\021\301\"\274\370_G\275\\\225\343\274Kn\n\275)p^<\365\310>\275p\020\213\272\021|\374<\366\2423\275&\343\035\275\204\325[\275\341\016g\273\026\313\215\274X<G\275n\213\320<\254bU=\302\\\001=Y\342\001=\337>N\275\276\207B=]Zi<uE\245;?\314M=\227\215,=\346AR=\'\246H\275\035\035U=Ry\032\275\376\327\360\2739\024\t;/\344H<\345\256\035\275&\223\017\275\"\024&\275\034P\323\274!C;\274\361\243\260<\334q\210<\006:\373<\315\337y\274,v\3119\362I5=\354\'\020<\276q\266\274Y\2257;\350F\250\274\326\331\346<\377WV=\n@!\275\317\0212\275\276\241\022\2754x\353<\313\300\363\274\032?*\275\356\311\346\274y\224\007<y\004\"=\261\372\005=\026\250N=\347\243W\275\3617\025<\3101S\275\\\251\001\275\021\332\000=y\231\365<\247X\267;\367a+<\026\300\244\274\217\273\374;\340m.:*rH={\237\017\273\375\235\343\274g\345\255\274\270\t\302<\014\\\\\275\275\266(;Kjs<-]\217;\032p9=p\315G=&\224\275;\217\351\217\274\364\022\t\275\351\263\367\274dB\002\275\304\221S\275O\226\243<L\325\331<\351\333\303\272\363\026\220:$\317E=\245\302\033\275\215=0\274]\201V=o\373\253\274\241R\233\274\036f\270\274\021c\203<\376\351\342\271\364c*=r01\275,J+<\217\337=\275\204/\372\273\316\021\322\273\234B\000\275\255\2316=\330\274\255<\305]\205\274Ab\240\274\365\331\344<\026\301\004\274\323\351\n=\235\370\235:x8\305<\223IA\275\3418\'<\314\305\264\272\275\360U=R\266\265\274p\333\211;2\010\001\275+J\257<V\303O\275\306\005\343<\306\227\214;\331c\304;\233\214&=\350\241\227\274\024\203\354<H 4=1:\030\275\240.\037\275^\301\'\275\220\261U:v\262\375<<\274 =\362_[\274\347\220\211<\t\350A=\032\352\367<\"B\240\274=\222\001<\276%1=\243\254\013;z\021\243<\036\265\245<\2403)\2759H>\275+5G\275\016\020\211\274\304\205\3159\274 Y=m\016\327<\210\321*\275bm\334;\354\347&\275C\342\017\275\3053\030\275}\023\364:!*[\274\203\325\374;M\364\372\273DS\276\273\027\244\336;g;4=B\366\277<\250\000U=\227B*\275\305\222\322;\366\'N\275\230\274J<\036\201\364<\r\357\215<\260\033\005=\261\256\321\274\205}\013=\202\327?\275O\261!\273d\"?=\200:\036=\312\2775=\"\247\323;\221\0030\275l\2614\275\347I\371\274\207\233T=\002\010B=\022ro\274\013\231\267\274\313\007\242<\365\342@<\361I\315<R\223\304\273/\324\017\275\310l\375<\355a?\275T\265G=\004\r\210;<\2300=}\003E=\221\203\355\274\026E\314<\n\247\267\274lF\344<\324\335\030\275`Q\212\273\221@\027=\2363<\274\301\334\326\274\351\220W=+\257\367\274{R)\275\355WJ\275\372\235\347\274\227$\231\274\266\331Q\275\021\r\221\274\346\364I=\360u\236<\267\231\034\275\276\\(<\326D\346<\317\363\201\273\204IA=\351\014Q\275e-\201;\372\275\266\274\275,\357\273\271\022\023=\325}_\274Y\265\027=\304\263\245\274.0\241<\255X!<\277,\r:\330m\037=\357o\305:g\"\312\273\254+\210\274k_\316<\215\222\250<\216\245\341<)(\233\274\332\371[\275\330\207\361\274\215\177\272\274H\254\010=0\374Q\275\211$\235\274H\303&\275\037\300D=9gL=\036\332\000\275\037JA=l\367 =\021\337\032\275\223\337\022\275\221;\n\275iC\034=Zzc\274ofY\274\243=\006\2755\204D\275\'\337?=\025>=<\355\004:\275\205YR\275GI\321\274\352Kv\274>\274&=\234\375\324\274\300\266\020=\3673[=\244\226+;\336\000/\275k\224O\275\201\255\224\2743!\361<\350F\013\275\321S\341<\001\307\265;w]\001\275\223\014=\275\022i\236:N\327s\274\377\t\001=\2508X\273\354\344\202\274^\352M\275h\317A\275\333\360\231\274\302\206-\275\376\\\264\274[\031\034\275\277\3670\274\027a\300<\356\377\364\273\016jS=\000\3604=\305\013\377:\210m\300\273_\020>\275U\236#\275M\031\037\275\014\367X\275\347\021\350<\007(X\2754\r\316\274\2614\225\274\250\004F\275N:B=\213\013\005=\300$\212<\374\324\t=s\271p<\255q\274\274gq\023\275\3356\\=\254\342@\275e\375\n=3\221\247<\251\246\240\274H\017L\275q\275\037=Z\251\223\272\300\260\000<\357\014+\275\301\373;\275\262\303y\274\210\1770\274\032D\221\273\002*\371\274n\244c\274g\036\037\275\351\202\005=\365F\347;\374\215D\275\366[\017=\340P\211<\375\264F=B\242Z=s\265\006=e\202*;\211\0263\275\234^\020\275\313\257\210;\267P\200\274\325\221\326\274J\0233\275?\317.\275\241\253\230<us\366\274S\357M\275.\226&=\303\3660\275&\225)\275X\255p<\307\353\325\274.\r\301\274\347_@=qJ\352;\3300b\274\327J\311\274\226b\004\275\n\362\372\274\321pC=\225\017\035=t\363r<\223\312\273\274\305\025X=\317\031\014<L%\236<\310:,=\362\372\261\274\220\316\352\270\016.\317\274\373\304\260\274\032m+=9\250\016\275\355MG\275\360d\353<\340KV\275\350-\037=\337\247\346\274~\317\235\274q\027\303<\001\001<=\010\347==W\032P=Q\034\237\273L\3524=\354\033$=\032\304\313<\334~0\275\373\274\254\274\265\233`<\030\361a<\022\333\275\274\327\3644=\320\257\020=\344\322\004=\275\016\340<\244\255D\275v:\032\274\275\3671\275z\343\206<\021!O\271\"\326\374;\241\3368<\267P\336<\341[\267;>\306V\275\201\251\366\274\335\036\362\274t\035\000=p\003\310<\013\3060\274\360\310\241\272h/\220\273\212v\241\274\332\252/\2754\005\212\274\273\274\342\274\222\250\257\274xm\025\275\345d\017\275T\010J=\025\242\315<e\246\264<\322\037K\275$\212\t=\\\374?\275f\307a\274\220\177\321\274\3177X=\027\300\357\272\371\252!\275\022 \223\274\304\340\320\274\350\345\007=\270\t\322\274\346\222\367\273\364\320\033\275B\330\014=D\2267=\020:4\274P\023\\\275!\255\354<G\225J=l\261\366\274\325\247Q<w\233\005\275Q\302\255\273$\3743\275\307^O\275\354\n\335<y\242X\274\335\315/=\222\262\350\273\330uD\274#\266\256<GHs<[31=\320\024W=H$G\275!\222\035\274\274\375\356<_\361(=r\225\207\274\211U\002\274\333\3047=vW\261\274k\275\315\274\362{N=\247\3526:\262\013\006<\314\326A\275\306/\222;rUE\275\235c\345<\tk\t\275Y\370A=\276\300Q\275n\277\016\275\030O<=\315\331B=wTQ=\004\217\3419\036\260D=\2618\272<G;\316;\357\t\032\275n\351%\275\261\363(=\213~\316\274{R/\275h\377\367;X\230\035\275\270\013L\274\325#\221\272\236\212\373;\230&\235\273\307\024R=\'\030\371;C|\024<\250\235\013\273\213G\240\274\"`\026=\035\231\252\274\230\271!\275\234>4=\375\364\004\275a\306\000=0\"S=C\317\224<\254\326\334<\234\307\251\274\365?G=\311,\234\273^m1\275\357p\277<\223\242\377\274?P\004=\305I8\275\007\024\253\273<0\004=Q{\215<\002\001\003\275Y9\025=\346\325\344<+\236w\274p3[\275W\031\363<\321G*\275\373\3777\275:\036\312\274\036\360\373\274\006\324\034\274\254*~<:\342i\273\030\0258\275\177\225\034=\241\365\034=y\215\256<\271\3130\275&_C=R\226\005\275\267\352><\235\220\006=\360\247X\272\361\317\240:\r\336\266;\320\nJ\275\273\013\032\275?L\224\272t6+\275\024NG\275\022\031\312<o\\T=3B\000=Dim;\2310\333\274u|\236\274\310\363\207<\246\307W=\322)\242;\264Y\316\274&\370\267<X\033\351<\374\240\031\275\252\002W\275\266\303\202;\345\010\274<\255\0076\2756O\035\275}\022\020=S]\030\275\003]\364:\302\303\204\274\272G\032=\365\017?\275pY*=w\3019\275\254L\023\275\213\241\332\274j4L\275LQ?\275\334\033\022\275\365w.\275\362\006\007\274\010\240\311<\206\223\224\274[\376\032=\342\372\310\274\273C&\275\302\304\276:fe\004\275G.2\2754\t\013=z\237\014=\234\304Q=\305\240C\275\260\333A\275\312\3159\275>(F\275\372X?=\341\270Z=j\014\347\274D\323\343\274d\316<\274\010,,=\370M\350;\r\367C\275X\216\006\275\312Lh\274\340\337\244\272\262\352\357<\323\0055\275A\233\377\274)\376\002<@!J\275eJ\252\274\002\255\010\275\006\242K\275\372# \274\262-\336\272\266\264\217\274\021\2548\275}\230%\275C\333J<\346\220%=^\000E\273\360X]\272_\010\274\274\350g\017=:\233\374\274\321!N\275\"\000\266<)\376D=\341\206\276<\362\355\002\274\277\305\276<\243\351\247\274\322\250&<a\302H=_dX=\352\347\371<\240\241d\274v|+=`Y\n\275\010\323R\275w\365\364<@E\010\275\360\031,\275\016\216\026\275\306pM\275\177\346*=\005\366y<\005R\267<\000\373K\275\024`\313\274,W\325<\263\257\304<\025F\235\2741\313Y<\270\206j\274\307\376\260\272N\0345=\220#/\274\201\310&;(\322\'\275\2329[\275\250&\251\274\200\323K=\023\206F=!4\364\273\022\003\006\2758u\210;\227\376\016=d\273\036\275\'\030\305<:\214\236<+y\300\274\356\343F=\343W\243<\014x\311\274\370{\305\274\247?\027=\205\370#<\'\350\364<\224\243\220<\217\246\r\275\252\314.\274@\230+=\376\272\031\274_c\345<\371\276e\274\246\"#=\240t)<\365\023F=\274\331\004\275\256\374\371\273x\000v<\357iU<v=\234<5\t\267<\005\005\366\274\036K\002\275\35395\275o\0236=|\372\352\273\234\203K=BoM=\333N\321<U\035\244<\210\212\017=p\327\037=A\034)=@\213-=\300)\267;\346\313\010\275-\357\341\272\366Q\276:\024\321F\275@\262\027=\256gZ\274\322/5\275\244\037>;\000r4\275\022\350K\275\221\373p\271<\023U\274\303\004\000\273\023\200)=\022o?=\372\352\276<1\215\030=\017\334F=\324&z<G\346\022=\266rB\275\200\356*\275&Y\"=\035\342\360<m;\027<\300\013!=\270\206R\275\223\261B\2753\247\216\274\247U\307\274\277xX<\032\'\r<&\272X<\337I\200<!]E\275\321\360\232<\354\221+;+h\376\274\324\236\232<p\320\322\274\2253\371\273\355\307\333<\251?\257<M\034\227:4NH\275\217\305v<\305\3745=\346\024\007\275\215Q\034=@\201+\275C+\200\273\214\013\276<~sB=\220\220?=Q\t\340<\033OW=\313\003\020\275}1<\275\3242\307\274\trH\275<\311\331\274?*\007=\226yK=\003\014\013\273\374\375\215<Q\366*=\350#\230\274\021!\314<bL\036\275\377\346A=\026jO=\007= \275i\314\004=> \243<\000\351M\273\303\332n;\032\230\026<r\317\016\275\230\022f;\304\365\030\275\274\224\225<V\226U:\017$\337\274y\035X\274d\254\024\274Y\033<=l\017\317<dFC\2742*\324;\265{\024\275\023\2147\275\020\262\367<\342\2577\275\017P\353\274\263I]\274}\353\242<\001k\333\274\323\232\';\026}\030<\3218\242<Q\020\325<\205\243\375;\236\321\256<\t(\036=\320K\032\275\313\376C=\275f,\275\025\216[=:\231A=\361\245\373\274\225n\"=\2659J=l\260\n=T\247?=\221\253o\274\r\0317=\320\355\256\274a\2256<\240\253\264\274{1\n\275\350\307\030\275\342\'\210\274\261\232K=\315:\'=I\334%\2743\236\234<~9\000\275\362\310\034\275!\230A=r\260U=S\003>=J\317.;\230\030\333\274\220\261D<\267VK\275\221\222\366\274Z\333\203<e\017\026\273?\247\364\274\367\265\265\274\233v\346\272\2769Q\275\251A!\274j\307\235<\206\352\251<&\352\351\274\r-\231<\017\252\320\274\214j\013=\233\376\260;\245\256/\275*%\033\275\221\2019=J\025(\275\374\030\305;\201\265#=\322\271\025<\027\207\022\273\330A\030=\330\275\371\273\\\036\030\275\372\025\362<\202J,\275\2401\033\273u\331\351\274\241o9\275jxZ\273\322}\022=|z\231\274\332\301\n\275R\226\353<\212\236\334<\350 \"=\225\310\274\274\013\026$\275\010\035u<\3412K=%\206(\275\0133*\275\233\312\272\274\325B\215\273<\211\001\275\365\325S\275~\332\037=Jt\264\274\034]M\275\352\214\037\274\370\232O<a\300\212\274ggJ\275j(\013=\000q\333<\254\t\276<\346\017\333\274\\\3723=H\371S\275q\222\001\275\221\372h\273\275\010(=Nm\341\274<#Y\274\322_\024<wt\"\275\007\353\026\275r\330\320;K\242\353\274\272\335\360;,\347?\274F\347O=`\222\025<&,\256\274&s\032=\371\372\n:\274\207\022\272C3@=\255\365\212;\212\320E\274\005\00528$\213\024=\001\266\227;\271\235\336\273I\310!<\271w;\275\020&\244<k\2470<)\203:\274zD!\273\ri?\275X\216\256\274\307:<<8\304:=\002\360+=\235\337\021\275(\366\023=\311\355\265\274\343f\273\274\324!\300\271\273\005-<\253\367\330:v 0\273\026\005\273\274oOK=\253UA\275\375+\207<\313\337O;\346\243;=8\244\005=\005\212,\275z\277\255<\372T:\274-U\257\274\352\235\353\274\260XP;i\314\373<\031z\322\272$\3305\274u\260\326<)\355\316<\013\027\200<\231r\030\275\270\004\362;)z\312:\371o(=\271\231\325<\276>9=\331S6=\227\030\317<*\302\300\274\243\t\020=\311{F\275\347o!\275\333\007m<\247{\227<\344p\243\274!\230\203<N\302\033\275\276#E\275\255\255\227<\374\356\273<\004\327\241<O\261\215<\311\006K\274P9\001<\030h\344<\0206\371<\330\252\200<6\275\261;\247\275\022=\024M\237\274D\352\023\275\237\364\367\271a\035@\275\264g\354\273\300\014\353\274o>\2449@5%\275\030}\020\274\377\370:=FTZ=\336\244]\274\356\333\323<\2649\224<\266\245$=3\037\346<\343\256I\275L/\257<Y\306\314;O\027B\274\325\201K\2751\266\025<\250\363A=\206f\004\275ZP\010\275f$\210\274\354\303[=\r\374$=z\014\227<\200E\214\274_.F=H\221M<\364C&\272\341\030\362\274>v\321\274`\022\210\274\227g\350\274E\'W=\027:\322<\003\222\276<2U-\275\361#g\274\237\373G\275\215\304\370\272(F2=\333x\346\274\331f\031=\007\r\377:\267\317\341<\\\302S\275\210\005T\274K\330\031\275&+\367;\022o)<\224\3126=\0030\n\275X\177<\275\032\r@\275G\273\375\2747\240\370\272D\021\014\275\315c-\273\010\345#=\253YY\275\000\204\r=\367\242\367<\227\206/<\324\271\334;\037\022Y=\331%\033\275V\271\267\272\335{#:\311\205J\275I\007;\274vv8\273\230\221\371<|\302\027\275\304\236I\275_G\024\271^\022\313\274\304\264\256\274/?\204\274*\177{<\370o\207\274t\351\341<(5\014\275}\3357\275\236\256\213\274gI\260:}\020\006;\262.\354;\232\365\220<\207\223,=9\177\023=qC\305\274&<?\274\032\017\r\273\'V\272<g\371\371\274\313\305\262<\260\201\033\275A\247\027=\031\375\030=\365\340,<\021\rB=\030u\n=\347\324\000=\205\264\025=%X:=N_\303<\341\263W\275\364\245C\275{\362\225\274\007\335W\2740\027\016=[\207.=`\036P=O\027U<J\252\016\274;C=\275q\271#=\341\257\023\275*\260\322\274d%)=\241l\304<\246#6=\335\302\014\275\277h\305<A\034\025\275\246-\352\274@LT<\370=S=:\220\010=I\244V\275G\'2\275\241\3308=\341\357\030=v\256\224<\220\370O\275\236\037\341\274Cu\203<\232\201E\274\302\233\214<\203\332Y=\r\026X\275q\017\363\273\237\244I=\332*(=l\'\020\275[\034\003<\274\334\301<5\322\265;=\326\030=iz==4%\241;\256\261\037\275j\000Y\275o\352\367\274\307C5\275\326\335|\274\204fJ=\334\037\342\274U\206n\274\2652#<\346\235\026=?\234X\275\022\034$\275\020XR=\023\0165\275(Z\210<y\237-=vM\215<\r\316\005=\265\227\241<ap7\275\261 \267\274\220\365\346<4\316\344<H1C<M\326W=?\027\221<-w\202<\247\335\262<;\342z;#\353\266<\001\034\n=w\233\223\273d\331C=\254\350\302\272\035\330!<}j6\275\244\342\311\274\200\263V=\267\0140=\006\374\321\274\330\005\023\274\026\261\306;\242\322+=\362\2721<<:j;l\351\321\274@\026\226\274\243z\322<\361\032\251<\225;-\275\177C\211\274\221v\326\274\263\222R=Kp\245\274S\273B<$\313\217\272\323\272\377<\310E\005\275\367zV=;$\261\274\3127\367\272M\036>=}\324\252;W\010\333:aI\017\274\2158\007=2\347\334\274\273\314\366\274,B\205\274t?E=\2103\033=\315\016\331\272(\001\370\274\350,\211<`^\321<k\013\251\274\324\024\362:\262\301W=\225\211\337<E\350\274\273\303\202\034\275\275x\002=O;P=\257\331\254\274\211eN\275\203T\310\274\315`\027=g\332\022\2752\210\320<O\214\n=\374\247(\275`m\213<\333\366\274<\r\206O=\206\\\001;d\351,\275\2105B=\244\233\030=N\211\362\274S&\007\2752\206\222<\331\345P=\353\250\252\274\331\374C=\210\371\270\271|\276.;A\313&=\3272\277<\331\245\236\274\177\254\t=1\037\022\275\301\003D=U\373\004\275\345PW\275\234\003\023=]\202\257;\036\246\213\273\264f\367\274\373\251\024\275\'\332\301<\232\325\027=\364X\024\274\350\224\030\275m\347\262<\0016\257<\257\262\305<\223\033\377\274%Y)=\211\215,=\020\347L\275h\013O=\022\2151<\306\317\";B\237\026\274\367Z\252\274\362*\010=/\323$=\367\365{\274A\2475=\333\214?\274\306\376\346\274K\3523<X\343\311<o\365\005<\207\353\352<g\343+=\005\231\342\2746\345\340\274\242E\316\274{\216\235\274P\234K=\223\352&\275\327N\021=\007\277\032=\266\2041;=\025\311</\217\343\273\335\321Z\274\326\304(\274_\265\325\274\0012\364\274Z(\262<\354t\005\275\206\314\301\274\016f\310\273]\267U\275\251\320\020=\244W4\275\031\270\327<\351\023\206\274v\3214\275\005x\021=\375\344\375\273\304\362\205\271\353\255f\273\'\367\021\275J\275\274;\316\005\344\274@m\007\275?-\307<\023\246\036=%:\375:\300\366\330<2\037\351\274Zy\375<,\2068=\001\231\256<\013\364]<(\360;\275\352\213u\274z_\236<\223\215-=?\247\352\273\273r\320\273\323t<\275\200\023\344<\245,\322\274\203u\303<\317o0\275h\034\037\274\242rO\275\223t\311\274\207\336>\274\252\037\215<C\006\233<\004x`;\007\367I\275\360\245]<P\304b<#\244\273\273\350\361\005=\030\3230=\013\253\2669\313\317F\275\230;S:\343\200\357<x\310G=)r\354<\217\364\275<\035\306\222\274\307\371*=`\001\027<lG\215\274\301\215\360\274,\253\254<\265`R\275\271G\025\275gN0\275\177\335>\275\244\nG=\335\325\370<\230\332\320\274q_\316<j\221\347<%q\000=\255\033\262\274\023`0=-\345\240\274C\266\177\274.\264\301\274\227S8=\243\346S=\205e[=\371w\324;\211\314\373\274E\3170\275\317\373F\2744\354\3479\301\352\203\274\330wb\274<\0247=\314\315\366:\272\245\242;\365\004\357\271$l\311<\335\201n\274&\005/</\230\254\273\22193\275\177\335\336\274^o:\275\316\2642\275\270\207\022<\243Gi<\033Y=\273h\233\372<\231\371\035=\007_\313<\336\305[\275\342@\332\274\341\363B=z\340\313\274\273@\031=H\265Y\275\345\344\357\274f\223&<}\310\016=\236\301(=\225\252\034\275mCP=\033\313\n\275t\3272\275\277\250\361\272\302\360\214\271\306\262\206;\372\237G\275;h@=c4\027<\372\357\'\2758\231\212\272\235Y9\275P\271\263\274\232W\r=\310\214\224\274\202\035\035=\2717!\275\252\273\017<\313\030\354\274\243\026;\274\232\375==\330uD=\241j\303\274\215\354\006<P\201\376<P\220\320<\310\227L=\364B9\274\300\201\235<$7\260\273\221\024\202\274^AR\2752\331\033=\253K\332<X\312\321\274.\206\013<sr\261<\3313+=vb[\275\274\220\361<E)\236\274\203wk\272?\315\351\274\205j\250<\2376\203\274\035\254\343<%\254S=\036\263 =i[\007=T\317\261\274\345\035P<^\2541=z\206\304;^\267U=&\212\"<B\034L=O\246C\275u\274|\274.D\222\273V\'I\275\212K\276\273\000dJ\275\257\233\205<Yq/=T\252];^\316\030=\037g\206:\253\302.\275\262z5=\270\257\275\274&\002\n=\267@.=\301\360\320\274\361?G=\255\206\300\272\225\3129\275\310\277\251<\210\345\350<G\304\254<\325>\341\274\331\302\004\275\033\007U=L\263\037=\254\003\004=\304\244\260\274=3p\273^&k;\214\240\350<,^\003\275\033\0318=U\014\215<\202\025F=,\325\026\275\305X\370<L\'\236\273v\035H\275l3\325\274\354*\324\274\017TZ\275+\335?=\277T&\275x\037\303<`\032\023=\351\251\356<\264\202\271<\307\246F\275\177\020>=\0077$\275rg\031\275Uu\001\273\340\212)\275\301\362?\275bY\036\273\352z\207\273I\206\272;*\021\341\273\343\234u<\003\007\340:)|\350<d\374\'\275N\376\212\273Q=O\275\262\321\r\274!V\017\275\217\340|<\351!\350\273\231v\316\272S\0135=\337\313T\274*\372\264<\247\224\275\274\316\254\260\273m\203\002=X\272\362<\\\342J;\353\237`<N\'\334\274\2415R\275\035\360\005;HB&=\270$S=\004v\307;~ip\274b\247&=\312-\013=)\351;=\204t\347\274-\312\221\274\026t\351\274*]\273\274u@+=\360,\025\275a\205\037\275\036\246\355<\372`\235< \001T<&\273\016\272Py\200\273I0\021=\202x\301\274\007H1=$I\013=\022\201\313\272\311\367k<\317oB=\304\350>=\336j\031=9vR=\014DH=J\356j\274\255x\330<z\027\\\275\005\247\362<\207\367[=\343\342\275<\223\315\244<\252\371\221:\205\016\001\275\324[%\274\263\267\206\274\025\213\246<\270\322\366\274LT\251<\203(?\275}2\273\273\211\353P<\372W\341:jl\"=\303\2651\275i\302L=$K\010=.\3450\275\213\230\361\274\270eE=f\303i\274\276|\206;%t\264<\022\363\305<+\354\221\274\333\251\023\274{\004\232\274HCK\275\'\374\021\275\212\n\022=8\346\226\274\255\303\231\274\340\026;\275\323\"\344<\312\276\022=\307Q\307<B\032\253\274\367U\304\274\025\240H\274@\255\024=Hf\242\272\277\213\362\274\263\004S\275;\251\343;\373N\255;z\207\270<\220OQ=\212sU\275\022XC\274\302\335D\275\2136n<\025r.\274\022\346[=E8\310\274\361\333\031\274&\233\245<kJ\374<\266\263+\275\\\240\213<\236\020X\275M\252\323;\221n\321<\025\3652=\004}\024\274\\\346\251<\234\2128=\252LM\275`^\031=4\320\302<\204\013\374<\313\321q\274t\251k<N\223 =Q\271\'\275\210\226\367<\323\306\223<\020n\2009;Y\320<Q\265?=N\030\016=RIm<m\\A\275\2632\264<`\242\323\274\026:d<\031e8\275\020\314\025\275\354\t\304<\266\317\226\274\254\341@=\221j\203<\375X\"=\347\365=\275\010`\006=\243\307 =\214\034\301\273\206\235\177\274?\310\277\274\331Hd\274T\314x;6\001\027=\263)6\275#N\002\274]\314\215\273]K.\274\264x\036=\225\362 \275\333\321\366:\335\334\305\274\177\305;<\352\037\355\2730\233[\275T\374h;\3261\222\274\0145<\274\211\261S\275\006\033V\275b\'\352\274\235\'.<vo\030\274L\274\024\274\013%*<\322N\345<>\306[=K\274A=\376\373D<d\251\351\274\331\327\003=\374\340\024\273\006\222\002\273\247\265\363\274\t\022\260\274\210\263\376\274\357\025\"<\257Y\327;1\037\007\275\214\377\250\273\362\037R\275\t\3642\274O\320\375\273\351)\345\273\3468]<\200\254\t\274\3057\331<\344i@\275\325,\230\274f\263\326\274y\252\344\274*\365\245;\255\263 \275\035\244\025\275\022y$;[:\314:\343\311\273;\372\206Y\275\256\333\004\275\225{;\275\351ON\275\377Q\307<\013Y\222\274\244\334\007=\022~\036\275\333\253\352<\001\354T=)K)=\231\355\r\275\302\245B\274!J\024\274\233\270\223\274\227\363#=k\033U=|\035\2558\377\253\223\273\021\243\332<W3<=\367\000\216\274n\330(<\221Si<$b3;\224\005\326<\244\374\273<\020\253\252<\266\224\230\274\335\301><\\S\006=\027\232\025\274\232:\347\274n5V\275i\262Z\275\255\277E\275\311lO\275\354\231\340<B\004\004\275\t\326==R\362\250\274\274\221\336\274i\236D\274\025\231i\274G\2518<W2\005<;\376\304<\013\331\355;\373|\254<\201C8=h[\022=\202\020\310<BO[<\3671\346\274d\200.<\325\312\370\274=\254?=\236\376\007\275\230\r\232\274\t\261N<\307\336\251\274\023X\035\275\335\030\002=\223\337\263\274\331\270*<y\032\241;\246\372\035=\215pT<\214-\326\273\006\263\027\275\014\312O\273\323\340\325\274z\003\000\275^&\036\275\231\361D=\250\264\377\274\211(>=\211,\\=\216\025\224;S7\036=:\200\027;\020\374\215\274\302M\317<y\351D\275\n\237\375;\336\373\026<n\316+\275QQ\010=s*\025=D\r\274<\332i\257<\373\010\362<\304@I=\\MP=\023?);mr\037=\232\264M=\272gY=\206N\036<\373m[<\022\213\200<\217\205\344<\247>\367<6\233\025=gzh<\007\334+=\273\315\327<,\005&\275\255\335F\275\177\235\007=X\3358\275)\240\260\274h\300\263\274\004\232\010\275(>)=\362\244\304<]\326\360<\223-\257\273I\3277=\177|J;\001\250\367\273PY\275<\247\036T<\260JN\274\007\365C=\265\304\032=\274[D\275/\nm<b\360\216\274\231\374==\206s?\275h\355\017\275\360\2672=T\357\306\273\301\372\220<y:\200<\267.\204<\370\360[=\233\364U\275\354\233;=\372\032\201\274\2271\243<\242\0164=\361.!\275\324\361\324\273E\\\376\274\213\220\001\274\221\004\337\273\210\027\000\274>\225\007=\261\372F=\020\265\276\273\013\004\371\274\225\231\033\2725d\n\274%\222\010<\227B,=\272\315X=H(\201\274\302#\311\274lA\342<j\217C=\366S&\275/\025\233\274\221x\334\273\366.\216<\034\260\270<|.}\274\241\370\006<?G:=\272w\253<\337T\017<&.\007\275\002\354T\275\017\207.<M\330\302<\252\366\2629\371\'9\275\263xB\275e\234\310\274\215Z\034=\225\301$=\265\213D\275\232\212\213;\343\342H=8k\363:\372{@="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2060
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2060
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
