node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2160
          }
        }
        tensor_content: "@/\237<T\260?\275\265d~<\243p\t<\222\250\214\2741()\275G\277X<Au\022=\305O\022\275ES<\275\250\331\034\2752\274@=e\376\272\2748\002\032\275\355\3237;+\216<\275y\005\302;\351yI;\177\031K\275\245<F=\200\201P\275\307\245\033=\244W@\275\303\351\031=\271\374\254\273\252:J\275;\216S\2750Q\"\275?\335\212<\034\311\001\275`^\336<\204\247\242;\274.\014\275+\375\003=\331\234o<\0138\303<_\303\352<\234\031\033=]\\<\275\247?\010\275\375\357\371\273-B\377\274\3711:\275\260\006\377<\221D\243<LMJ\275W\331G\275\002\017\222\274\213V\004=~6\307<i?\214\274^@N\275[\332\003\275t\342\313\274jhS\275\213\366;:\266\242A\275A+\'=v\\Z\273\200o\241;~u9\275vS\n:9\201\335<\341E?=c;r\274jMp<\376\013\225<\313\3371\271\303\260\007=\225k)\275R\356\034\274\226\267#=\3064U=**\013=\020\237V=U\326j\274@H\331\2733\360\361\273Y\311B< \371~<\222\225K\275xV\003=|\330\032\275%\261E=\217\341J=h\240\014=\037\016\014=\0279c<\033\3304\275\n8\372<ynU<r\362\004=v\224\242\274\266?3=\r\202\022=\307\3651\275k9p<=(\366\274\252=A\274z\030r<\344\241\301\273\344_\227\274\243<\026=d\027\271\274\0205\003=\010?L\272\\\217\371\274\272\2766\275~\253\334\2742i\020=G|\016\275\000\314\374<\347l\351<\250\002\354<\016mC=\215\004\301<\301\210\243\274\260\225\257<\031/\370\273\354l\332\274`\302\007\275{\177\334:\032\324\222\274 *\213<\226\210+\275\304\266\271\274\354\223B\273\301\007\230\274J*\010\275d\270\032\275\217K\037\274Y</=76\335<\nR\351\274\266k\271<*&\300\274\243u4\275\214\027\022;%S1=l\035\030\275\037\323!=`\262=\274?e\350\274\224\216\347<\374\327\242:k\003\006\275\204\3375=\n\353N=\346G/<\372p\376<\245\332T\275\020\002\203\274Q\267\261;\253\347\261\274AZ\022;\021\240\215<\366t\004\274y\244A=}\030\202<\224C\337<\"r2\2733\346\010=\223\251\033\275\323\366\276<5\002O=r\021\030=G\374*\275{\3072=\270\244\376\274\252I&=v\2642;\000\\@\275\027C<\275M\022\026=`Q\022\2748\361_\274\247_\257\273\273E\024=\000\207\206\273\177?)\274\214\204\375<P\300/=ylB<\262Z%=\341g`\272\022R\\\273\235\213/\275$%\001\275\275\302\022<r\326\352<J\241\352\274\001\242V<\361\217g\274\251z\005=\206\022<=\314G\020=\032\353\325<\005X\027=\314\346\311<+\242\206\274\013@\t=\354\006,\275\273\362\255<\r3\247<\251U\257<\355N\362\274\320B\306<\305\375\035\275\330\204\026\274\003Pm\272\3574\233< U\243<\026oh<A\034\345\274nb\347\274\247{Q\274\206\2723=\270\223\367<\030lX<\\s\n<wz\377;\316\323\307\274\374V\016=\2512\266<\217\226G=\351\316\017=\200\303K\274\363\006\274\274ou{<.\037\367\274\377\346\215;\275\3341=\216\0173=)9\376\273\313R\025=\035\347i\274c+\276\267\025c =\036\221\347;P\363\254;\212LB\275\270\206I=iK\363\274\224\245G=1y$\273\'\242\t\275\342\255M=\323P\035=T:\352<\007\016\254;\030\010\230\274P@\243:\010\'\347<\2773\003=\272/\030\275\264\231&=bh\034\275H\203\263;u\nO=\356M\246\274\']\266\274\210<\313\274\277\2179=\014J&=^\221\335\273c\312\000<\260&\036=\323[\374\274/`\000\275A\213%\275P\002\231\274\305\311\006\275\253(\023\274\240\351\340\274\213\001\033\273\222\244\301\273\273Z5={:\023\274oFM\275ZMK\275}\250\367<\032\217\035\275\'5F=L\336I=9\355_;zd\r\274\303\302=\275yc\200\2743\235P\274bqK=\030\237\351<<M\314\274\032ES=2:\205\274\203(\037;\023\220\022=\250a\215\272\261\002\326<\031\364\351\274E#\272\274@\375\303<y\367Q\2748>S\275\213\344\332\274U\014\312\2749\314 \275\261\363\027=<m\\\274\234\0277\274\253\215:\275e\2554=\026\3751;\030\255+=\006\2577\275V\301!=F\0340=\320\345\272;A\332\217\274A\332\310\274\262\344\316<\343{\036\273\037\263L\275\302\355F=\274c+=\367<\r\275\334\243g\274\214\355\221\274\354:9=u\0249\275\363\2555=o\252\256\274/\301\213\273\337\312\315\273\273\214\036=\200\370\246\2744\223\300\274/\022\'<\024r\026=\352\361\037=\372\344\245<\264\3311\275y\361\374\273>)\352\274\340\023\023\275q\233\032=(;%\275\333\225#=J\207\302\274\036\022\250\274\027\345\234<W\320.\275;\010\236\274l3\010=\375\032\366;\315F\374;8\360\327<\373\322:<\256\343u<\014\032_\274\t\307\'=\222n\231\274\001\250&\275jJ&\275X&g;\"\363==\220\263\014=\304O\253<\312m\346\274\032\016E\275l\2047\275=)\360\272\270iP=v\317[\274H\335\254\274\217\231G\275\370\203\250<%\300G=\205\"A\275\304\255\030\275\370r>=2\367\007\274pWN\275\037\244\203<\350E\n=\341VS<Ic\333:\337\006\033\271\232<B=\376\324k\274h\'7<\224XH\275\257\331\017=\331\210\262<\313\3740<\004\016\007\275^\344U=\220\0212\275\361\217\002=\0021\364\273\271i\006=\213\325e\274\372uw< \203\332<N\002\327<\3236\320\274t\222\002\275\251\236\243\272f\302+\275\244\323\337<\217z\351\274\277\263\001\275\\^\006=b\360.\275\0057L\274\025b@=h\3309\275\237 \263;\357u\'\275\343\372==\002\330\030=i\264\305<g\216\016=\265\316\312\274\310\027\205\274 G\235<\266F\306\274]9\234<\353\nE\275\362\271\361\274\021^I\275\247A\357;R\245R=\033N*\275r\316\032=(\034\007\275\316\3557=\021\331\370\274\317\1773=\323 \333<\2415X\273\030\273#=\300\013f<\361\342\232<\001\2657\274&\303\324;#\331*=\177]8=\226\025\252;\244H-=\244\006\235<\365\275\377\274_W\341\274\033m\217\274f\222K=\200\306C;y\375>=\206\002\327<`A\006=\340\007\010=F\337\210<\353\217!\275$\254I=\201\305\035\275\355\225\343;\333\3045=3\272\315;\230\360\267\274Ib\357<\360\273\243;\0236W\274\370\375\014<\204dM=\376$\023=\323\024\340<\366\204\006<:\254\266\2741\263-\275\313\2573=\247(\024=\001R|<*\305\034\275+c\025=\374\247U\275HZ\244\274\305YB=w\207\256\272\337\222\277\274S\372\333<\3124\177\273\313\347\355<Ai\031\275\003\205\006\275S\177\"\275\355\340\036\275\263w\311\274\375I\371<\214z\033<\367IQ<\213\004\223;%\224B\275\262W\002\274\343\360\240<\213F\004<m\362\343\272\274=e\274\\Y\334;\270\2231=\303u\325\272k\3775\275\306\372C\275\216\252\327\274\330\033\302<\027s\t\274\257\031==z;\004\275$a\366;K&+\274{\026\272<\317]P\274+\367,<K\356\323\273\214-*=\020U\022\2752\216E\275W-V=\212M\315\2726t\003\275&\332\004=\204Mx\273\244\264\004<\203\260\277<\346\n\n=\006\254\020=U\363/=\010\322)\275\255\217\022\275\302\337\272<\rb\212<K\374\272\273S~U=\'\254\341\274*P\327\274H\214\255<\351\242\321\274\254\201\036=\201\013\315\274\314\334Y<d\324\353<\236\001I\274P\314\300\274\350\207\034\274\357\r\031=\361\0138=\2255\276;\\\220T<\206\317\215<\203\307\313\2747\204\035\275\300t\260<\201\271.=\255\325\230\274\243\032\023\275\301\364!=h>A\275\323N\031\275F\3379;3\216k<\237\202\220<g\355\352\273e\244\315<\377~\250<\3138\337\273\375\317S\275D\227B\275\211O%=GKF=\016\330\204\274\215\030\353\274\246\377\203\274\313\351\027<\010\275\321<{O\025\275;,\210\274\353q\010=\362\274\377\274\254\267E\275\025\000\241\274\036M9\274\370#3\275Sa\317\274\257\277\250\274\262\233s;\272\202\031\275\274}\024\274\034(\016=\204\030\014\275\234\224\036=\201\010\023\272\t3\335<Cg\224<\331\205\201<\216\300v\274W\223\347\274P\272\273;8\0172\275\340\373u\274\363\230J=\301=M\275\317\316m<r\373\016\275j\322\032\275\306\214`<\266\037\320\274\027I\323\274\250}l<\334\2427\275\016~\014<\007aM\275\251\177\025\275\362a\034:\320u,\275}p\027=B::=\253\364\004=\236\272z\273w\304%=t\307\'\275\247\235,=~48=\251W/\275\320\303\001\275\275\363x<K\300\307\274\265f\024=\227c\000=\376\366-=@\232M;w\335\022\275\002\237\271\274\235\364\213\274\212\000K\275\005WJ=k\345\003\275\201\2712=\337\003\252<\321\014\220\274\261\352\204\274|MK\275S\261\221\273\251\336S\274+\n\260\274\310{\220<\010\314\026\275O\320\254<\227\206\017\275\317\304L=\032X*=h\364\302\274\303\375\032\274\0365\225<\306\206\340\274_\244\310\274V\3302=\375 \370;\227.@=\337o!\274\304\357\227\272\305X_\273\364\003N\274\200\314\334<\001\323\223\274\031Ni;\353\253S\275\370\230P\275}\230\303\273\027x\035\275r9\030=\360]6\275\016\303\025;jr>=\022\244\225\273p\333\004\2758\'\256\272W8\331<f\335\354\274\236\374Q\275\207ib9\023\342\374\274(qN\275\227\237o<q=\255<$#(\275\355O\337\274\330\231T\275>\372\'\275\377T\n=\"M\246<g\n\252\274yE\234\274<n\007<\214\265\007=\206M9\274\243\340\256\274(D\033\273\212\327:\275x\306W\274\177T\367\274\314\244\351\274\"\021\253\274j\322K\273\r\3755\275\227\335Q=R\374\243\274\251\206\263<\352\252Q<\302\345\033=\270\370\244\274\346d\357<=k\252\274>\361\251<\322\\n\274F\014\374;\225\312\007\275\0313\210<\267\n\243\274\313\255\205\274\225g<=\216A\200<!|I=\3717\0239Jf\300\274}KA=\340\200\266\274\215[\363<\222\321\323\274\320${\274\002b\372\274\204\360\010\275~k\262;\303\375\035=\026\\\263<\241\217\257\274y#/=\036:\225\274\213\330|<g=O=6\364\033<VO\001=\002f\363\273\\N\304\274\014l\024=\337]4=\331\343\007=\027\365\307\274\355\2176=\203\220\013\275\333\305x8\351\273\305\274\256\234\325;\035\321F<|\344F<fR@\275\374\200\365<~\351\002=\243\037\307<^\216\034;\274\366\023=\2645\244\274\020%\r=\263G\001\275\0007=\275^\016\261<\345\005\"\275\336\214T=(ZC=Lf\225<x\340\017\275\236\204P;\204\246\374\273\357\240\335\2745\202\300\274T\251\031<10\337<\236JG=\216\271\023\275P@\224\274;G$\275P\'L\274[\257\257\274\251{9\275\303\3110=\221\272\224\274\360\034T=\230\332\337\274\325^\027\274\202\220\232<\366\360\031\275h\355V=0Q^\273\2160U\275\016\345\001=\201\221W<i\000F\275K\242\016={\371\337<\177\212\263<\270\374\201<\210\261\024=}/%=\310\325\307;W\335\017\272%\253\002\275\3765+\275\276\265\330\274l\276\037\274\366\350\264<\3371\033\275\356\t2\274\000\335\344\274\006\327\373\274\233\366f\274\301\370#=\371\311\037\275g\2638=O\277\223\274Cl\021=lf[<\354\2760<\221\220\273<Z\304\016\2743\216\343<\376\376\206\274\326\030\302<\013*)\275\003\264)=q\253\244\274Z\354\251\274% \356<`\276\341\274Y\206\003=*\247\354\273\271\236\262<\255\230\362\273\257\345R\275\002\253\274\273\255\321*\275\243\272\266<C\321\025\275r\233<\275C\247\"\275\361\321\027<=\024\270\274\212\301\264<\353\177Q\274\250\214=\275\330n)=w\3454<\324dE\275i\207D=\245\205#<c\356\005=\036\265\373<)N\022\274\370\371\000<\375{B=\365\'8\275\374\rG<\333\226\237<#MO=\177A\006<\341\330>=\030 \213\272\266:\343\274\222\354\244\274d\3013\275\024\210\233\274\223\213\030\274\270?\241\274U\356M\275]\347\351<\\VP\2756\3301=\032\032\327:JS\250\274\204mG\275\350\r\004\274\001\347\013\275\360>@<\033K\'=\214\366\205<\003\373\t=\025\344\276\273\314\3262<\217^\321\271\037\277\377<\270u2=\235m\374:y\237\310\274\017\315I<\\<z;\317J>\275\360\3050\275\354\353V;\027{\026\275\262\263K=0\366\273\274\301\322\325<\"\266\016\275A#\035=\274\3415=$\025\241<\250\270\315<\371\351\020\275F&\'\275\300\214M\273?\2101\275\330=\014\274\177\264\366<\260\333\t=\340`6\275\237\306\032\275\026\361\251\274w\226N\275N\214\343<W \263<\211\265z\2747W\271<:\017\274<\013I\204<\001\345J\274\377\376)<w\315\226<\225\2376=\000\007\007\275\240\321\3779\013\361x<\224\333\'\275\345\037\266<\202\0073=XK\010\274 \232\372\274\314\353(:\027\255\031=&\007P\275a\006R\275\377\266\253<\274\002z\274\017N\242\274\003\253H;\365B\027\275\242\263\376<\260w\272\273\300\n\016\275pt\320\274\374\245:<\336ZI=\363\246\253\274\236\350\225<\025\207S=O_\000=N\371\010\275a\260\t<\321\361I\275,M?\275|\t\203;\346?\276<w\352!<\257\377Y;KO\361<\233\247\007\274\002.\375;\026\371 =\031\305\373;\nM\320<o\217\007<\260Lx\274\332\200\332\273\375/\"=\n\346\362<\247{\206<\3101\010\275\353\034\200<\264\350\023<w\252\225\274g#\354\274\203p{;\371\235P\275\000\3105=\006Z\026=\274\346\363\274r&1=\236\034;=\357\222%<\374g\257\274\320\366\251\274\353%\341<\241!c\2743M\000=\245\244\033=\343\360\270<_nC\275\210\005?\275\316f\313\274\267\003\013\274\270Z/\275\014\330\340;yaB=H\361W<r\036S=\267J\221\274\326)\335\274\360\323\346<~\355h\274\020\300\352<\334FB=\026+4\274\312.\016\275;\355D\273\227\222A<@\325}<r\344\310<\350\336>\275J\311\034\275\376\3276\275\364\260P\275\345\025\253<\212\225\017=[\255\377;\nI\027\273q\377?=n\3033=\312y\021=\035\324\234\274\262\033B\275\223;\240<\265\034\230;\'\222<<\301\367\257\274\306i@=\277\373y\273\227\350J=\321\177\"\275\306\255\355<\363:#=?::=\212\342\325\274G\304P=\267\'\237<4\022\226<\301%(<*\"\242\274wz8\2751_\006=pR\332<T\224\277\274\033\246k<\353X\200;\345\357P=\277\317\246\273=\265\027=P\037D=\310\010\252<\205(\021=N\213\357<\020\002\343\274u$I=\003\025\r\275\253\217>\274\256B\272<\235=\"=\021y$;\305q&\274\324\375\021\274\337\371\271\274H\216\027\275\336R5\275t\365C=\324\014\265<\326\336?=\027\302>=u\226\254<\210\375\034=\'\375P\275Q\204\333\274C\025\017=\330a\372\274\231\036\356\274;hL\274\271\263\236\274G\027\317<*h=\275y>\346<\255G\260:\031l\351\273J\233\213\274\325M\250\274!\013D\275\202\177K\275\371\033\033\275\360\336\013=\376\002\276:\263\377\273\274\247\315%=U\213\254\273\3076\205:<\227\031<H4\024=q\310\330\274\0351(\274)\031\r\275\331\374\374\274M\007\205\274\316h\'\275\"\345\277<mwT=\371$\255\274\210\2451=4)\270<$\017\300<&b-\275U\tG=\222\371\023\275\n\227\321<\236V==\000j\342\274\205\222\337\274X\230#=\0316\335\273\367(\006;\032\366\007;9\035\016\275TP\032=!\031\010=Y\234\272\274J\022!\275\2711\302<\210\252\034=\367\036f\273\020\327E\275*\274\351<\010\000\025=\230\323@\274\240\253.=\\<B\275J\2724\275\316\340~\272m\013\317\274u\205\274:! \030\275\252\3547\275\252\322G=\347\037\310\2749\0146<\226\021K\2748\221\261<\201od<\212\316$\275\334\372L\274\301\341\001<\032~\230\271\200\277\270;_~\235<m\"?=\310\303\016\275\002\244\260<j\275\371\274\261\370/=~\352\023=\373xN\275\231\337\272<\305/\303<\266^\005\275\322\322\226;S\215\351\273\222\nX\274Sj:=a\213\310\274\010\371!\274\364\0276=\235\375\205\274\330\206\005\275\207#\206<\324!R=\367\262F\274\303\031\213;\031!\017=C31\275\357\337 =)\370%=\244\360\200<\2623\023=\246\235&=\212\237\002\275\\\220\2108\274lC\275\017\233\302\2731 \231<\227gL=Z>R=kw\262\272/\016\014\2750X\220<\226\355\177\273\236\325A\275\305p\002=Sh\211<\010\007H\275\370\370\362<+\234D=tUq<\375\027V\275\2236;\275\211\316\275<\250r\266<\303|c\274,\370\n\275\266\364\004\274\037?\233<\204\3665=\007e);(\355\327\274%\252\263\274{A-=h\260\034=\345\227\220;\033\241\301;\334\004\222<\\]S\273mc*\275\226\354\033\275 \006;\275\223u\270\273]\214\334\274\304\014=\275\346\035F=\236JI\275\331\233\353;\361\244\332\272\251\316V=\300\334\030=\265\027\r<\263\263\020\275-t@=3\240+=\303\264\t\275\3152&=.\341\312<\373l;\274!\210I=I\232\2029\032\232.\275\254\302_;\312\252V=\245\263\202\274\316(\'\274_\013\202<\3741A=\377o\034\275\352t\016\275\204\264\356<\316\005J\275\r\035\234\273\361IC<*\347\001\275\341\356\266\274\335D\217<3`-<qJM\275\275\302Q\275\177\r\013\275\251\213S;\307\302E\275\316\222\006=<r\323\274\206\214\n\275V\2452\274G\336\201\273\277\343V\274\256\372L\275\247n<=\220u\322\271\t\347-\275\245 \332<D\023\022\275sr\260;\2069\344\274\r2\001\274\023\257\310\273~\314U=\321^\377\274\204\312\003\274#l\264\274\026ER\275\333\226?\275\017\307\254<eO\324\274\223B\326\271\271\237\235\2721u\347<)\007\010=\261\3244\275\375\251\236<Y\377U\273\234\247C\274:\233\337\273\350\017\345<\240\271a\272\365@\302;N\014\233;\316\261E:t\\\230;\225s\240\273\024\352\260\273F\210+\274\232\365M\273f\343M:/\375\t\275N\203\316;\236\235N\275\352%\346\273\026\337\036\274Og\030<9\277,\2759}\322\274\371\254\037\275UT\020=o\004\027\275 \010\214\274HZL\275\240\257F=\342\243\337\274M\323\006=a\240\260\274%Hx<\346U\374\273(\027\r\275}\370\031=\037\263\010=\221\005q\274\260\212\020\275\3279\251<\"\004B=\207\260M\275\036B5\275\343\310j<8\315\031=\317z8=q<N=x\306\023\275\241\346\004=\341I\025\274XN\'\275\207\307\346\273\341\360\355<\007j\332\2746\253,\275\035\r\306<g\'w:\024\205>\274;\252\375<)\342#\275\\\234\255\274\240\"\251\274\205\220\021\275\243\006D=n\022w\274\233v\270\274\273\353I\274DD[<\346\315D=\357\251A=P\310\365\274\231\341\025=r^G=\316\336\253<ps\232;\002\313P\275.\300\377\274A\350V=\313\017\215\274-\341,\274\220\017+\2754x\200\274\256m7\2740\322\263<\330\377\376<\211\366;\275\217\244\317\273\024\203A\275\3562N\275\031\270Q\275\263\254<\2753\274\374\274\227\276,=\375\352\030=\224\241\203<\271\203E=\\\264,<\326\254\017\275k\354\2669&\341\000=\247\035#\275W;\221<\316\322\014=\246\007\240;\214\004\017\275u\376\027\275\263\017\201\274\\OS\275F\337\277;uw==p\034?\275@\317V=\023\023\306:\330xB=\211\205L\274\216\310z\274\270=;=\002\265/=}r9=~\2043=\306\356 \274H\262\001<\277Fc\274\304\n)\275u\227{\274\222N\260<\014)8\275\351\306\276\274\366d,<G;F\275$i\334<\202\352i<\241\361\'=\370\217\214\274W\363\030:EF\313\273\272\202\374<\336\2258=SY==\036^s<b\232\207<Z\216`\274\231\310O\275\272Hm<\222J:\275\325&c\274\336$\334\2741\354@\275\277\206\273\274\273\370\202\274`\242\340\274#\263g\274*02=\035\177,=\327k~\274\177\213\023=\006\263\226<\300\306)\273\217\267\253\274\331\2749=\341\020V\274]\242&\275\300e\'<tQ\003=\035\241\250\274\366\273E\275\002\347I=2\212\232\274\243\355\r\275\2517)\275\240\037M\275\014q*<o`\020<\312\246\345\272\373\324:=\204OR\274\271[\022=\314I\016\275\317\n\370<\223a\241\274\313q\356<\24494\275\267\253I\274\206\364r<\\\325\250\274c\345\202;dB\256<\271\022\200\274\227\326\"\275\026\237\272<\204\036\202\2744bM<\034\3446=\033:\"\275|L\224\2747\306\245<\2661\350\274\221r\254\274\334\2553<\326\270\313<\350\224#\275\223[\321\274\255\221.\275\321M\022=;s\035=9\357(=\313Y\"=\247\232.\274\201q\005\275\020\220\n\275\374\337\201<uI\013\275\262\256A=\346Y\007=W\335<\275\246\357\021\275\023\363K<\235\244\202<\241\035/=QM\022=\321\340\004=\250)3=\341\260\335;\242D\334\2746\347#\27564\005=\r\212\"=V~\031=\267\354\033=\014V!=n\337\001\272%\255\353<\373\241=\275\336\327%=\013\017K\2753c\204<\250,\304<\370#<\275tZ$=0\217\366<\306n\023\274\203Y\005=\305\262\377<\007T1=q1\322\273\023+\315<U!\004\275\352\353(\274\005\372\306\274\262n\327\273\236\201\367\274\305\033\030=\231]7\273\307L\033\274\202\315\307\274>\177\233<\222E`\274{\177+<\331\"\246\274[\367H\275\203\342\216;`\230\243\274f9\n=\033\311\021\275\246KF\274S\307\200<\276\356\025=%\247\233\273\307\202\303\273o\323\347\274\030\205\014=F\341+\275\247\250\036\274\261\250)=[G\350\274\253Y\315\274\250\002:\275\177D\020=\205\001\366;\020\307R\273\206\230,=5\301\245<a\214\212\274\277h\322\274u /=K\366\366<\t\256\036=v\266\326;\253\354\243\273\267\3724\274X}R\275V\253;\274\213}U\275u\276F\2758^\010\275\200B\227\274ad@\2740\026\353\274\200\026H\274}\264O=\224\220C\275FE\005=\223\260\364\273.TO\275:\036%<\002\214\014\275\320\343\"=\010\2106=\376===2\252\371<\245m\277\274P\307B<y\242\223;\242W\000\275\035\010!=\357\355\374<\256\313\270\272L\263\020\275\n\360F\275S\305*=Yt/=\343r3=u\177\264\274\013\246@=\316\203Z<f;>\275G\000\261\274\266\336\020<\304\035\226<\214\033/\275k\320\251<\006\346\210<i\311\230\273\202\343\265\273\016\301\021=}\017\361;K\351(=\356\002\300<;\201\023=\332U\311<\214L\352\273j\336U:`>\201\274\254\201;\274\025,\r\275\344\217>=\316\250\367<\3626\203\274\343 \'=\303\241\240\274\"&\324\274R\377\037<\217\002\366\274v\037:=\323\253\330\274\243\3403\275bZ\033\275\371\310\347\273[U\010=6\020\004=\004\230\273<\270\307\265<\260\262`\274\014\241x\274_\032\021=\231t\242\274\215\362X\274\26008\275\267&\240<\343\rK=\257\250\006\275\355\351\325<\030\275\032\275\325\251G;;\'W=j{\'=\265\275G\275\242\021\025<\344\217\355\274ja\022\275G\370\320<]\000\246<\264\341\325;C\373\270\273J\250\r=6\233D=\317\350C=\027\306\331\274_\360\236\274T\2107=\323\245\t\275\257\277 =HQ$\274\356m\020\274F\010\006\275\232\032j:\242\003p\272\255~\354;\245g\217<\275\304\034=e\335\204<\332L\265<>\032\244<1%\021=\226\377\267\274\034\352\242\274\375\247\035=\265GT=c\376,\275\017\034D=\320 \244\273\024u\372\274\321r\032=\216\2436\275\354\257-\275\033\023\316<\345\032\017\275\360\320\020\275%mG=`\311\006=\367aF<?\353J\274\333g\330\273\362\232_\274\207\254\003\274\263\016\203\274\367\350\266<\360\363\252<.\0061<\277\210\233\274\023\250\007\275\351;\364:]E =%\273\274<qg\372\273\273e\356:D\275==5\272\002=\226\213?\275\"V\236\274\225:p:>L\304\274\001\364\007\275\351k\020=i\230\367<\355\257\004\275\225\363\253<\003\234O=\326\331\343;\010\332:\275\206\3510\275\032\301-=aWV\2759}>\275\237\325C\275=\264T\275k\002B\274/\332,=\272a\001\272\217:]\274\346\341\033\274:\016\201;\345\236F=\225\007G\273\260\033B\275\177W,=e\003,\275\331N\360\274\001\026\035\275\325\201\332\274\016XL=^\371\n<e\377\213<&\0315\275\353\3119\275\261\367\r\275\355\271\t\274\274\t3<\002\222\336\273\321\324\"=,aQ9\320\335\003<X\002\275;\332\304<<\227\232\"<\377\311\005\275\022gq<q+\022\274\222D\204<\031\271~<\306\2315\275j0\004\275%I\343\274\243\2410\275S-\257\273\251\nS=\316\005\275\274w\343\027\275J\177V=pZ\276<?\247\245\272\030[\317\2737\3731\274\371\342\363;H[\004=\315{\213\274\242\005\024\273\"v\316<;\021\372<\256W*\275\021J\263:-\366\366\274\035\3530=zi\203\2743\360$\275\024AJ<A\003\247<A\351\236<Q\302\033\275n?\000\275\013\272\024<\3440C=F\370\245\273\240)V\272\340\243-\275RI\021\275\372D\346;a\220\"\275\331\335\227;\232\026M\275O8A=3\362\2569\346\211\220\274q]C=\320\r\363\274s\005\341\274\276\324 \275\207\364Q\274v\310#=\322\272\305;\305A\227\274\247J\245:\205\301\255\274\241\035\222;6\353\027=I\343\301\274a\342\034;\251\263\030<\346\032\351\274\020Z@\275\336n\005<\317\332\010=\245-2=9e7\271z\312T\275O\373\306\274|~C=\326\243\036\275#\230\005\274\004\330\262<1\263F\275\031\362n\274\224o\t\275\034\355\242\274!\r\026\274\370*\331\273\3109\303<7\266\316\274v\203\330<\006\n\017<;\006C=\005\2241;:\220B\275\364\001 \275\273\203\t:\374\327\350<\261k\035\275\243\037\226\274\261\252\223\272ve0\275\201K\340\273r\226\264\273\017Q\"\274\345X1\274zF\017\275\366l\'\274z\225,\275t\202\324<\251b)\275\232\2018<x\0375=\274\024<=q\317\312\274\336\320\354\274\301\013\377<-\'T\273\252_/<{6\203\274Fo)=o\201\207<ji\206<\305{7\275\201@\202</\310#\274\207zM\273\017e\254<U\t\005=\337\305d<x\246(\2720\017z<\024\336\357<\373\376\351\273\277H;\275\257\373P\275\244\000\276\273\376\0108=\253!u<\241\233W<M\367\237\273\027Z\001=\201\253\316\274q@;\275\0326\242\274\t\3176\275\t\2207\275\336\264\342;\211s\004\275\217\376I=!\304:=@-0=\357i\021\274O!\"\275pV\220\272`\254\304;\377\003\t;\371\0076=\3323\344\274X\030\r\275\177\322\215<\244\002\332\274\000_C=K\321>=\014\017\031\275\010\267M=\310e\005<\364\003\331\274\263\007\200\274\345\374,<sf\260<\306\320\n\275aA\317<\277\224=\274\316\236\367<T\214\346<\376r\227\274\367vK\273\267\271\340\274\230\236\233\274)2\3729#JM<\307\266\207\274D6\354\274B\346\344<\247\360+=\275\3003\275\225\370j\274\024hK=l\373A\275\207\273\362\274\240\373\317\274\334\313\226\274fb\264\272\277\335\t<J\215\260<\030H\020\275\224\nW=\336\273!\275\315\016\250<\227\332:<\315\026\003=\357\324\"\275\244k\312;\201\212<\275\217\221\372<r\214\245\274T\027$<I\245\337\274\313s\t=Y\013 \275Qb\203\274\334\244J\275\357\277\327<~\234\227<\360\356:\275\271RU\274\\P:=\320u@\275EF\272\274\243\250)\275\032\224><\256\005G=8\034<\275\272Z+\275\246\327\356\274\303\255=\275\004K\241\274\005\324\372\274\375\237\356\274\213\257\020\275.@\305\274\211G\253\274\025\177l;a\3374\271\312_\247\274@fW=\3578\245\274\343_\271;e\260\003\275\'\252\244\274=\343\374<\370\260\225\274\251\331\271<\260d\377\274\235z\177<\324%\r\275\300Q\021\274P\0161=\311j\324\274u\340W<\257\341\235<\355z\233\274/\037*\2758\37599\307\362\246;U\241\376<\257\255\374\274\240\334/\275\016\323;=t@/\275\255\333\341<\326z\007<\304\360\274\274\213\360B=G\216R\275\315\035\004=\333&\324;0\303\r=\375\217\222<x\330R=\241s\024<\254\257#=b\'Z\274+u\207\274\203\020S=\260\256\323<CxP=;~t<\256\324\227<\3767\023\275tB@\275\3035>\275\334\317\254:\216\221\220<\027(\335\274z\343\235<\014\014\034\274\365\347B=\315i(<\341\337$\275<mi<\240y\231<\265H\210;A\002,\275$1B\274\365\237S\275\177\376D\275\2437\214\273\226\2464\273\216\271\277\274pz(=\312\342\025=\013\000G\275\354S\323\274\351\034\311\273#\227Q;\231\354\325;\205\020\213\274f\236h<\202\276\271;~S:\275h\237:=\253\203\006<iaC\275A\t\324\274>\250G=\2105\027\2755<I=\275&H=]\020\000\275<\321?\275\230\330K=}\237V\275\000=-\274+\332r<WA)=\031\177\226\2745\371\234\274?\0307\273\021\222\302\2748\266\200\274LA8=\261,\0108gs.<\266\312b<p\037\000<\3220\300<\323?\035=\247\254\356<\352\212=\274Kz\266\273\222\013\254\274\373\343\005\275:XO=ZGJ=2_\254\274}\222\007=v;,=7\342q\274X\257\357<I\333\264\273\310\243U=\300\243\265<\023\035\255\274Mcj<x\003\246\274\200\274\336;\353\226\'==[p\274{</\275\315B\332\274!\351\226\274\351\230\025\274#\355\030=\246\361\017\274\377\224f\274\304\212\304\274K\366\037\275\"\200\266<O\025\001\2742\276\236\274\024\2370<\'\337\240<Yw\251<\320\271\317<\306\223I=q\346O=\364gU;\207\271\355\274\342\252N\275g\206%=\215\3373\275 \226N\275$9\302\274\220\361\264\274b`U=\022\301\'\275\277R}<^\002B\275\241T\333<QC0\275i\215\020=\201\022M\275rV\206\274\372\003H=\312\245\027=\304\317)=-\216\236\274\241\035\207<\000\305\275\2740\213==\270\245o\274\310Ru\274)E\n\275\210l\027\274<b\367\274 \200\306\274K\034^<\367g\304\274\'\355\237<y34=w:\273\274\331\2051\275\033X\341;\236\323\336\274\201\211\237\274\206\034:\275\314=\265;\221\206\017\275\211\244\004\275*\237\004\275\035UA\275\354D\031=-\370\235<r\216\262\274\014\326*=j2R\275\006b\034;\346\242\346\274;\200\026\275\000\274\303\272\200,\340<*+\322<?C\025\275o\342>\275i\3733\275O\202\363\274y\311\'\275\205Z\333\274\326\373\002\275J\010\026=\021d\036\273\206\013\345\273\'\243@=\264x\213<\265\254\001=\2267M=\223\007\310<\240\266\002\272\346\354r<;\2322<A\036M\275\230\216\203\274\305\030\204\274\303\374\007\275\201\357A\275\000\272\306\274_\302I\275D\347L;tT$=v\2511<\346\344\021\274 [\305<\344\\$\275Y\223\242\274\356cD\274<\252\365<\325\223\277<!\316F\275\222\320\327\274u\275\277<K\323\254<\322c}\274\352\225\261\274JfA<\355\300\330\273\305\3310\275\034W\000\275*\337N=\3649\351\274\300>\226;\233QP=\361N\223\274\r\376\374;16v<\215\217\010\274p>\t=atn\274]&\347<i2\214<\341\020\320;(~\267;CR)\275\316m\264<*\251\255\274t(p\27397\035\273\201`\024=\362\312N\274I\307\017\275\354\330\004=C\017\243;5\346\342\274\277\331\253<\267\360\003\275f\250\273<{\232\217\274\336\313\361<\217\252\200<\005\023\266\274l.==\352\330E=\025\360\312\2739\247\314\274\243\326Q=\311#V=v\213\247<\330\0148<S\037\026=\224n\344\272\001\315\302\274\200\306\240\273\340\257N=h78=\217\005\340\274\'}/\275\231\261\024\275rJz\274\310\325\246\273{\305\356\274C;\356\274\027u~\274\273\266\201<\341\303\374\274{\277N\275\322M\370<\260\017f\274\020\223j;o9?=n\271\014\275\000\317G=^#C\275F}U=\322\'\210\274w\362i\274\211HR=K\0046\274u-&=\205\227V=g\342\030\275F\304[<\305\3721:U\016\373\274(\331\"=6-\"\275\312<N\274\177{\250;\202t\215<\201\301\243<\342\213N\275\243\2663<\022_\027;\007\265\374\274\232\210\267\274\272$\344\273\037\266\004<\330\036?\275\375\234\311<\206\307M=\276\370i\274\365\363\343;\253\275\310<\365\301\372\273\355R\351\274\256\005N\275\004\230\006\275\203\205\002=\007w\037=\310U.\275\355\3310\275\351\350[\273\340\355l<r\0043\275\377\277\253\274\375\227\006\275\023\217\340<\302t\324\273\244\226\301\272\345\374\n\275S\237\361<*q\274:L\340\010;\353\304\376\272!\242\256<\251:J=\264x\335\2745\224\006=\022\352\026\275\302\227\347\274<\242\217\274\301\344\377\273\2536<\273-0`<\223O \275\243\3432\275\373\211\362\274`\024\210;\356\230S\275B#\371<\205wM=>\334\r\274\313d\251\274RT+\275F[\346;\323\323<\275\3265\273<\236\031\026\275Q\254\341<\223g\035\275q\306\244<\314\2562=\200\236Q\275\362\020\212\274h\342\022\275\206v\"\275\225FJ\275\211fN=\357\246C\275z\367-=\r\247\301\274\004\t:=\250\237\006\275U\t\307;\t\237\025\275\200\013\005\275\023\312Q<\227\215N\275\375\355\213<\337\3309\274&\347\3179\336\024\212:\3544U\275\336\355\250\272\260i\246\273`\225L=I\323&\275:\2276=\034!\207\273?\264\365\273\225\236\231\274\274\215H=B\021\351\274\300\326\004\274\302h\004<t\334$\274\"\3365=#\033\214\274?\030\022\275!\010\300<\212/\336;\312\022\027=\360\374\217<\3260i\274\251\374\277\274f\376\002=\260\265:\275F*\213\274\201\313\361;%%$\275\234V\250\274\034\002\227<B\373P\275\002\253\345<\332\350\005\275\030\000\270\274\222<\377\273\037\261\020\275\342\321I=\254\217*=.\375\025\274\237>\322\274\227\250\316\274J\'M=\220\2713=\375\032S=\361k\204<a\313\264\274\030\001\034\275Y\356\306\271\230\244$\275\305y\027= \360\247\274\355_2\275\\\367\234<L<\353\274#[/\275\222e=\275\331\330F<\013\336\000=\325\247T=\353-\323\274\235\031[;\256\020\022=\333\257\361\274\2771(\275_+\n=\324\025N=\264\361\246<\366\310;\273Z9-\275\n\363\313\273\356^\300;\034\346\270<h\217\024=\337f4\275\016\313Q\275f0\234\274\307\177\336\274\363{M\275\271\221-\275r\304\017=q`\306<\240\307\221\273\256ck\274\316\177\022\275\376\223.\275\331\361\312\274\t\271a\274.\016\257<\325\316>\275\247\361\034\275\351\254\213\274K\031\314;\211\311\204\274\234\001S\275I\001\304\274\354\"\314<\230\346C=\271\010\265\274\215M\352\274\257\250M=%\212\036\275\037);\274\371\205(\275O]\000=\333]#\274\250\253\010<\271\"E=\013)E\275\220;E\275\373n\004\275\006G\321;\003\025H=&\261\001=yqA=(UV=\213O\007=9\032\031=\275\312\236<\222\010\320\274{\023#\275W\263\337\274\366\325\361<\302\257!\275\323\224\240\274\371\377T\274\202\331_<\227\004Q\2753\312\271\274\250\230E\275\301\257\002=\010\263\n=H\007\363;\314\016=\275\331[\306\273iX\016\275\324\373T\275\354\302\215\274\334\301\230;\326\361O=\274\002\021\274\322\304\204\273PP\220;\250\245\241\274z*\223<@\365\224;\307\334\010;\026\344\001=\242\257,\275\016\235}<V\343\r=I\261\340<\237\000H\275\274\2313=\376?\346<\002\217u<b\003\313\2741\207Y<\232\204;\2747\024\364\274\343o\313\270\235\3131\273\305\216Q=`\355x<V\207\007<X\330\344;|\314Q:\347\221\004\274\225\305\007=\007]6\275\312\221\201\274\023\362T\274\331\210\345\274\223\314P\275\334V\020=\367b\022=/\024\006<V\335\014\275$=\357;\241\373C=\'Qe\273l\262A\275\372\005H<A-\025\275\"\303x\274\315\2670=D\332\354;n\344\251\273c\021\361<(u\";\026A\005\275+M\036\275\020v\265<\336\360\360<>HY<\025\372\346\273\375\300\336<[\266;\275|e\362<%\356=\275\006\231P\275H8\262<\371Z4\275\221\362\027=\356\311X\274\264d\022\274\"\334-;\177a\253<\270\273y\274\033\216T\275V\215(=\030+\207\274_\202\314\274N\304\261\272\201\0146=u\223{<`w\340\273\376\177\220<Z\206\010=|\r2=\0346g\274\373\366\200\273\321\005!\275\035\272\023\275T(0\274\017\342\202\274b\262\343<?\254\003\275\n\201O<\0010\217\274mr\323<@Y\026\274Mg%\275][4\275\311\225\n<\326\260\036\275.\362\264\274sG\004=\020\306\276\2742\2031=\274v\343<\373?\237\274\361\307\200<W\346\021\274K\225?=(\0139\275\331]Y<H\252\357\274\375\354\251<\2222o<\367\264,\275\2632\030=\005M\312<f\207\231\274\375\315\031\275;\212\037;n\375\253\273\203\264 \2748\305<:> @=QbH=\200\320\035\273\353e)\275T\026V\27310)\275I(F=\222\321\"<G\331\264;\024\367\270<XU\303\274\332cK=\t\375\274\274\"\233\254\272\000\346\316\273\276\025\021=\274\031\260;\240\330\364<g\254\352\274\345W0\274R\034\234\274\362\352N=\234\270\007\272\221h\305<\313\244G<\373\264;\275M\014\006\275\235G-=T\273E\275\311\323\300\274\202\036\267<\355Q\327<\321c\030\275\177NS\274\2721Q\275+\010\032=\262\342\241\274D\334\037\275\353\370>\275\202\005P=&\013\223<\3723P\275Q\364j\274J\243P\2757\263\032\2759kW\275\t\221K;3\307\036;N5\n=$\037<\275\323!\"\275\252\326\325;\217\311\323\274RMU<\000\004\235\274\242\367\306;\223\264$\275\017w\202<V:\r\274\365G\204\273s\240\313:\262MX\274\007\313\266<\005+\360\273\310\367\240\273{\356\235\274\210\237\266;;\347\203<\213\224\006=_x9<\027\341H=t\310\010\275\3719\321;j\330G\275r4>=h\204\023\275\222\273W\272\211?\201\274j\304\030\275b\276\003\275\376#3=\355\313<\275\244\242!\275\263\274b\274\333GS;\221.\272\274\203\377R\274\266\034\t\274\336y<<\354\342U\275h\027\273\273D\000\204\272F\2158\275\250^\251\274\333E\026=G\177+\275I>\224<\2170\030\275\026\272>=\345\236\370\273\303z!\275\313\026\326<s\205\021\275\344\330<\272U\354\345<7\332H\275\227z\037=\017I\014=\303\001\212<\374\023\013=\025[\035=\\\3230\275s\313\261;\262=\311\274|\301Q\274DQ$=\007\336\320\273\031\356<\273I\215$\275\010\025\035=g@\n=\345?\260\274<??\275\261,;\275\\k6\275\305\257\343<\360\0028<\204H6=\252\360\224<8\266\244\274\332$\373<\243\3430=\210iD\275Oi\245\274\267\225M\275\321U\035=\341d\005=\225\034\022\275)\246\027=\034#J=\003S\n=\234(\016\275\356\246\036=\207^\372\274\323\0227\275T\232E\275qi\256\273\\\317\"\274\354\233\345<\003\240\023=\262\344\207\274\002a\201<\372\357\247<\332Z\254;\242\342\020<m\036\231\274\316#\306<]\262\376\274\341\213_<\200uQ=;\267\340\274\n^J=\266\234\353<\266\310\245;\327~~\274\243IB=\201|\214<\300\231\334\274\352\317\017\275\033!\300\2744\234\025=]\316\006<\3427\315\274ZM&=\2514\010\274~5\316\274v\325\303\274\346!\334:\251X\022\275\026\277\337<x\233\276<\367+\344\271le\226<WP\322\274\253\315\343<\315\255\"\275v\317\261\273\324\240\222\274\013*Q<\265\000P\275H\350\313;\031s\271;B\2314\275\222T\243\274\006\271\020\275\330\346\220\273R0\017=\234\224 \275\026\277\027\275<\242\332<\313.\210\274\302\205\224\274\310\372\022=\345g3=\206T\014\275g\2217\275\3444%\274\n\271\021\274\020\366\346<\366\204B\275\026\226\017\274\303T+<\2733\020=\303/\361\274\323\267\232\274\342\\#\275\035\366\037\275\tE\001\275\210\314\037\275\037\222,\275\367c\021\275kk\253<\245\0322\275F^T\274Q\377\\\274\253-\212<\014\363\232\273z\254\342\274\262\352P\274\203\271\300<\211b1\275\272\316\352\274\275\013\321;rW\226\274M\231V\275o\236\2209b\266\323<\363Z\003\275>\037\024\273\241\213\001\2754\377\244<\365\3075\275\034W\343\274\334\276\216\274U\315O\275\261\201\303<\033\001\211;\351\020\201\274\200\205\023\275i\265\211\273\366\221@\275\3457Q\2758>\322<O\323D\274V\217S\275\327\267\023=\206\336\014=\245\205\266\274\272n\376<\006\375E=N\355V=\013\231\207\274rc\210\274\334 ?=\227\367\263\274\330\335\336<J\272\200<\201\225\"=\317]\344\274\332\024d\274\245\177\004=\336`\371\273B\037B;\322\377K\275\221\250\203\274\220\347\233<\004\037\302;#OR\275\315\345\323<7W\222\274\260\3217<\272\320:=\305\347*\275\233\022Y\274\016\0263\275\330;\255\274O\207\246\274\274\324\026\275\032\024\323\272\227\304\355\272\"\217\372<a]f<\317\267\030\274\002\251\340\274\315\222\002\275\310\252\217<c\241J\274:_\340<\320\227\002<\\[\317\274\021z\201<\331\330\'\275e\270\372<AXk\273\362&\n\275\202\007?\275\033\311\004\275\300\323z<W}:=^\026\221\274\266O\252\274\2017\354\274\037\332 =\242,!\275\205\2576\275\365M\'=#\267\300\274+uI=\023a\234<V\000\307\274\316\273\233\273p\356\006=\370\025\'\274\016=\022=\037\321\006<s;V=\217\271\201\274?X\237<2\036\"\2741\303?<bF\016=\314ZU\275\"a6=\345\202\312<\027U\017=Z\2744\275\362\370\t\2756\252P=7\372\030\274`\255\363<\200z\003=\275(\004=\373\0177=\324\021%=\357\272\003=7\374\210<\373\340\215\274\200A\004\275N/\361:\273\213\237<\335\276\005=\353\373\301<\317d)=\207\022L=x9x:\014l4\275+\320I\275n\340\256\274\307LE=n3/=\371\227\267<\010l\202;\253\351\013=\303|E<k\316\036\275\026vW\275\306\002\354\274\357\214L\275\023\021\236\274\201(U\275\254\335\202<zeF<\373\356~<\305M\240\274X;\r\275\221_X<g\354\332\273\264\272C=\271\206\254<\270\210,=:\217\034\275:9F=N\272-<\225\005\222\274\362\223\246<\225\215\306\274\276\345\344\273/9\211\274\243\353@\273sF\203\274\347\370#;z\347\t\275\003\010\314\274\013\\\347\272\3032\360\273G\210B\275\375\013\331\272\311\244\300\273\262\230\361\274\356I\255\274X\366\336<\027h6=/\200\220\274\205_\032\275~r\013=>\035%;\343\'G\275\273`\370\274D\324\240<\241\274\016\275F\315\017=\227\000\353;b\337(=I\205\267\274\361j\236;\365\367%=9\006\007=\302\3217\275c\233\253;o\321\320<\ne\306\272\354\361\254\274!9;\274\364\376\374\274F\200D=\264\021\254<\003\343\305;Q\277\037<\272\n\265<\366)9\2750\251\"\275N\350\211;\256\244\210<\n\372\302<D8\271;\304\206M\274Z\320\024=.\345\010\275\274\243g\274\306Y\317\274\351\303\244\274\210\325n<[\251\251\274\230\225\000\275\233\246\007\275\220\177m\274\250\247\276<\244\347\025\273\024\265A=\352\2475\275\2435P=|\204\346<i\375\323;|\302\317\273E\013\262\274\270\306_\274\336\320\372:\000F\n\275\303\243\250<\'\321L=5\370Q=\206\304\334:>m\024\274}ch\272\355d\020=\265d\016\274#A\237\272\375{@;\214\313W\274\265\274\252<sO\021<\177\301\376<#\016S\275)\365\246<\236\226=;\363\365\261;\333{\010=\266\253\215\274\250\200 =\010#*\275\233\201Q=\207\305T=AF\340;\225\256\027\275\311S\345\274o\216\027\2755\'>=\014b\231\274\337\341C\272\234>\201\273\302\313\331\274\246z\001\275\270y\005\275I\370L=\334\351\002\273\371\341\241\274WJO=E_\340\274\212Z\"=u\317\273<\002PE\275`\303\031\274\263I\306<\036\214\371;\340 \005\274n\336O=8\"\241<\326\"\343\274\264\204\001\274\366\025P=\r\3007\275\365\223\037=+\365\251\274\276\010\350\274\037\241\t\275\re\272\273\326VY9\311\315\227\274~\320V\274\232o(\274K\243\332\274W\'\302\274]\215G=\345\035\206\274Pc\t=p\205O=Zl\005=\266wA\275\224+\327:\344\2739\275\023\207\221\274]\271G=q\333\017=\335\001\"\274?\305;=,\376\373\274\376_\r\275\213H\216<\361\366\213\274\254\2445=\330\356[<\226\177U\274[\334\026\275\376zz\2739\267(\275\313V\017\275}\014\236\274\272\275\354<\245\306M\275v(3\275\211\336\225\274v\363?<\325\016?\275\037\226\245\274\007#\331\274\014.|<T%\033=*h$=\332{\302\274@\2531\275\346\265\245:\231~C\275#\377J\275\335\255k\274GMy\274biV\274F\2016=\244L\327\274\031\273\213\274\331p\271<\260\207\233<\002\'\361\273%\252\240;\357\372F\2756\000\017<\312\034\006\273\362Y<=\243V\353;\2328\261\273\335\225\352<\004\010H=\256E\006\275\214\271!=e\207\0209E\362\014=\215\374\240\274\312\022\002\275c\024F<\334t&<\202\260$\275\316Z\251\272D\0306\275\"\007\306\274:hT\274\305\255&=\2720\t=GH\277;F\304-<\024\203\217\274?a\277<\t\372\301<\3520\3578#X\022=\300l><3\336\033=\216S\326\274\335\265M=\234\364\036\273\214\331\265<\216\014J<BS\\<6$\326\274\363M\036=lK\365\274\242\343(=\325\215\":\000\2279=\213\"\014;\336{><&\353\006\275\337\212E\275\"\377o\274\025\327<\275\\(S\275\255)(<\002\240\007=\343VW\275{\204W\274\"p/;\200\324\\<f\274\337:+\014\302\274\332}\356\273\242\304\350\274~Oi\272\316\253n<\334\367\364</\006X;\350\237\222\274\r*\016\274YI\206<\275M\220\2744\322q\274e&\364<\264dH\274\262\031\312\274\375B7<\240\332,\275:\263+=e\3162=tL\351\274\376\272\246\273\371\270K<\226\016Q=\237\3059=\030>2\275\317\350@=3\242\t\274\245\330;=Y\231\017=\364\025\216<\234\025\001=%\3121=\336u\002=\323:&=\374\205!\275\371\254.=O\334C=V\213\237<\221\304\377<\3320\273\274\216`\300<\262\317\365;\342\263\013=\240\244\030\275\33521\275\222\376l\274X,\222\272\352\366(\275\3314\020\275C\311\323:\337\366,<o\276\312<\034\241\037\275*\2219\275\327,\035=i\225b<\201\314\033=\007V8=\277\302\305\274\302\017\261<\333\232\376\273yK(<\334\033*=w\332\336\274w0d\274b\330\310<\305\031\247<V3R=C\3164\275z\0332=\345\230\260\274[\275\017;\217\267{\274\311\211 =\242\310%\274\225\017?=\004f\314<\267\365@\274\006\034I\275\260\227\021=\017\315T=z\324\030=\347\264g<\323\3332=\243\271\326<\356_\343<\021I\013=\235/\r\273\333I\264\274,\227\223\273y\3658\275\322*\201\272O\276\203<c\026\220<\323Z\025<\234U\013<\240\371D\274\223\005_\274\363\2369\275\301\232\003;S\034\230<\226\346\355<LP\261<\364\204\t\275\235#\"=]1\017\274\363\213\025\275\025\355N;8\246?<}z\344\274\353*\344<9\025\022\275\312T\017\275\221\017L=\371\352\275<5\3416=\006\305I\275^[\303<V\322\330<J#D=ni%\275\177\364\271\274\215\346\375\273\003_\357\274M\216.=\221\270J;\035\327\2549\'\025F=\354\246\366\274\233\245L\275$w\014=!8p\272\317\273+:\204^\017\27579\006=\224\236\037=\247tB=0\\=\274\325\353/=\357\037\205<\000(q\274\343gR\274\376(V\275u\377\254;\236\2365=\014W>\275\257E|<\255\022\023\275\251R\361\274\315P\267<\010<3=\250h\";\224\2155<T4&=H\345\335\273\275\216\351;.\376\330<\346\215\256\274\363$\002=\271A\004\275P\3612\275P\257?</\364^:\231\274\261<\217\257\253<\274P\017=I0\030=g\221\211<I\326\326<\337\026\024\275\267V\331;\302\254\031=\372\227\363\274<\006\037=_\260\215<w\255/\275\342;|\274\237\036\215<\324\014\034=\252\016\005==\221\234<&\000\032=\227\225\360\274T\377\034=\242\004\310\273\300\213\274\274x\321 =\301t =L\247l<\307\317\263\274\276\236P\275\332\253\311\272C\010\330<)\013\222<\333N\017\275\004:\340\274=\024\325\274{(N=\374\247R=\027\247\325\273P\205\201\272\232(.=d\352$=\201\000\027\275>\342\n\2734($\275[B\362<\267\364\331;\374\343T=\201\360\021=\211\353\205<+}w\273i\226\r=\0272\036\275\264\222\037\275(,L=\307\247\025\275\230\343\261<\214\000\356\274C\372\205\274\\\363\r\275\014\317\321\273\277\364K\274\243\342\315\273\"\304\203\274\377\365*\275\010\332p\274\367\253\317\274\"\2029\275c\345\247<1L\013=%\371\031\275\t\343v<\231\001\214\272\316T\360<$\275\r=\013\350\221\273\374\275\322\273V\370t\274\364\227\372;\2634E=c\2558=\341\357\326\274\3578%=\003S\031=\377\347\010=\263x\004=\230t\244\274\312c\004\275\263\213\341<\276b\014\275^\275E<\3054><\223\261\001\275\316H\022=\227\231\377\274\345\362\022=\313\367\271\274\257,\235\274>\235\353;\243\2723\274\000{3\275\323\013\033=\234\205A\2744HS=\261\360#=u`\332\273F\310C\275\000\010\250\274\252\227*=\354\311.<v`L\275tm\'=l<\026\275\222:\374<\236>K\273\027G\246<\367(\235\273\337\331\037\275\223\226\033\274\300\267I=>\004\332\2733I\021=\351\372Q=\n\204\345\274\236\311}\274\262\"B\274\317\240\364\274\313\252H\275/hk;I\306\342\274\003!\022\275\033J\215<=b\216;\034J<\274@\0002\275\0340J\275;\246\314<t\247><\206b\337\274i<\3549|\326==\316\300\206\274\331\r\230\274\2528\007\275\301\346\306\274\030\365S\275\340\245\233<X\3536=\274\036O=`Z\006\275\223\364<<\303Y\267\274\300\314P\2756\020.=\034\022\355\274\215j,=\344g\030=ga\n\272Z\221\225\274\201\207\211\273\352@\264<\357&T\275\"\341A<\270\313\274\272I\323\212\274\214\302\023=]\374\034\274j\231)=\271\010\257<\374\2504=D&\207\274T\364\357<\3765R=r:\263\274\353-X<$\360\204\274\261V\303<D\rk<\246\025\266<@\265\034\275\255\016\337\274\300e\305\274\364\365\'\275^0\351\2745\341\000\275-\201\003\273md2\272\356\\4=h\355%=\"N5=\\\236:=-\017!\2757\222\025=.\2246=Ubp\274\031\205\351\272\314\3179\275Iy&=\345\236i\274G\0261\275c\314D\274\204,F\275RYH=\372\277\267<\264\324\n=\330\252B\274\224\r==*Sv\273\\(\263:VD\265\274\027\343`<S\371\242<]B.=\217\310d\274\363\367\033<X\324\353\274\346$B\274y5\025=*\007\r=$)\223\274\354B\272\274!\265S=\232f\215<\226\214\r=\007P\377\274Y\342\266<&g\210;Fb\344\273O\0373<\270\331\320\274-\004c<>\351/=\230Z\227\274\327\002\021=\363\3444\275\251\333\'\274+$\320\274u\263\250;\231\004H\275\210\241\022=\337\252\037\274\363#\245\274\354\274,<\205\212V=T\2655=\200Gb<\325;\027=\27573\274\212\3506\275,\2132<\332\017v\273\334\235\007<E\210\353\274\35544\275\305\235\245<W\330\337;c\375\007=q\346\257\274\330\330$\275.9\247<\274SG\274\014c\021=~\326\035=\266\235\030\275<\362?=\271|E\274\3669\350;s\177\277\274\321\036Q=D\007\032\275\305e5\274\037\366R=\203\250\006\275c\236\362:-.\365;\334{w\274\224\rD\274\355:\362\273cs\014\272)\226-<\235mp\274sk\004;\027\275R\275\223f\027;\232\004\";\306@\n=\371C5=\203C\370\274\255S&\275\025\262%\275\035\025d<\273\343\005\275Fk2\274:\217?<\345\364\003=\340\226\214\274z\003\203\2731\316\334\274\355\317r\274\345\360\271<\356\223-\2758\352\010\274]&\035=lA\'=\\HA\275ws\035\275\332 \320<\214t\221\274\321\347\030:%R!=\307\367\006\275\250\227\001=\305D:\275\035\235\353<b}\262<\225\277\217<\315~V\275\207!\026\275\2623\211;<\343\261\273\210E\036\275\\\0056\275=A:\275\025\207F\274\353\331=\275\0351H\274\2106\213<0F\332<\377\246?=\270Q\203\273\376\303\333<\0058A\275X| \275\253\022\026\275\365\357\034=\324I4=\007\273(\274\207^\275\274\261{\r=\021\023\030\274\367\272\237\273}\3257\275\272N\212\274\226 E=\336g\024\275\214\020\310\273V\270\243<~\360\271\274\244\0160\275\243\3352=\330\r\370\274\266\227\300<\2262%=_\n4;\031\037\026=\257F\264<\312\371\005=\266_\026\275\0339\261\274/\315\240\273\001\246E\2748\225\236<\211\322\377\273Z\334\275\274M\215\374\274\247\362n;{\220\007=\336\320\021=\336S\202\272`\3350=m\303R\275\350\321!\275C]\201<FIF\273{\232O\274P\326\337\273\205k\330\274\301\307K<&j\215\274\203\235\307\274\021O\"=f\344#<F\211\\<\251\347\300<\263\271\336\274`Z\'\2745\203\341\274\\\303\210\274\315\032\373\274\n6#\275K\240\325;\210\002\033\274\005_\025\275\256i[;\224\342\010=\236c\211<F\217\374\274\356\210\202<\217\340\036;\350Q\266\274\005g\345\274:\345\376\274\375%\337<\013\2067;\301\240%=\316V;\275\331O\372\273.m\006<\316\275\330\273;\321 \275[H\353<jl==t\263\026=\210\0048\275=\035\273\272\273\265\205<\347\\1\275\273r\337\273\250 >=\371\377@\275\033\211<=U\245E=\007\320/\275\225M\026=\306\266\355<\270\3115\275G\241\316\273/\032\033<\010&K=\"\235\242\274)\202.\275\353&\320\274\203Qq\274w\240\021=t\021\017\275\3454q<\366\200D=\212\031\240\274-\312P\275p\256\007=}W\311<\217,M\275\274\021M={T\361\273\205\362\177<\303%\353<\036\274#=\274;\370;\032R\221\273SK/\273\335\337I\275N9\373\274[k9<9H\374\273-\004\357<\266\343\237;\253\251p:\210\234t<\256\3243=0\266N<e:\243\274Z)\202\270\031\002\025\275H\230\232\274\032\326)=\005\270\006<\251\037\231\274n\3676=w\301\201<\277G\006\274\034\232/\275YE\254\272\230O\r=7S\256<F\227\201\273\035\010n;\337\360\344\274T\323\"=`\247G\273\335)H=E\235\";\\\004B\275\030\034\017\275\026\372\024\272\007\317<\273\322C$\275\315\377V=\r\322\024\274\2736\351\274\232\177 =xf\251\274\275\351\032=R\337\234<\325r\r<\207\206)\275\205\226\203:\230pl\274\020\224\206\274\217l\320\274\326\031<<\010j&\274B\215\201\274\200\342\036<\357t\002\275\302s\023=\242b\257;\023\250\250<\036\007@\274h\234G=\036\t\001\275{\000\014=\3062\032\275\204B\201\273m\345\326< \260\375\273h=\244<\016\207U=\350\026\301;4\0277=I\300\242\274c\003)\275\243\010\273\274\233\312J<y\3378\275\010$\007\275\006~\267<\363\223\224\274\321y\357<\t\200\371\274\370\357(\275\242\231A\274\227\027<\275\366\250\252;\2138)\273\"\3639\275B\351\226<C\320\262\274\220UI=!\260\363;z\2463=\221J\364<\223\n\212\273\032pQ=\242\000J\273\237\356\273;\370\037\026=\333bG\272&%B=u\324\311\274\3570\017<\031\250!\275L\031\343<\2102D\275sH\263\274\341\230\264\274\252\366\234\274\352\344@\275A\351\003=Kv\377\273o\341*\275\205\324\'\274I\336f<\244R\363<!\004\356<m,\223\272p\321&<\217P\305\274P\2533\274\331\335U\275M\004l<G\323*\2755T\206\274\375\272G=U\223\343\274\273\215\257\272\270\037F\275\233s+<\232\340I\274i\032.\275#\341\223\274f\036C=\327\240E<\177A\";/F\323;\014\201\251<2F:<\245\301\303\274\374e\262\273Q \236;\241\227\'\275\236\254-\27512+=\271J\372<l48\275\323\304R<\272\257\t<V\327T\275\020r1<\225\217\213\274X\2441\275\035\203\221<\372\366\\\274\033\265\037\274D\212x9\257g!\273$e%={\000$<\036Q\227\274\244s\001=hL\214\274gx\333<\366\303\252\274\375m\306\274\376]-\275\376t\014={X\332;\240\030\007=\027\261\232\273\300\226\272\274}\340\323\273\204\027\305<\257\2728\275\240\327\337;\301\277\2609\214p\237\274F\267\374<\317\305\252;\312\207B=\000\216\017\275A\3351\274\273\243d6\032C\250\274\025\t\226\274\362\246\206<9\340\204;/Ww<MN\177<\251\357U=\231[G=\273}\r\275T\371\036\275\327iL=\355q\006\275\224+!\275W(\'<\275d\000=\324\264A=\255\321\007<\322EH<\026\277H<r\200\301\273\256?9=\361_\035=Jc\016=(\027\\<\206\320\246<&\307=\275\201\250\221\274\372\220\004\275\004\324g<\343\225\200<\264\240\016;\332\315\036\275k\322><\240\275\000=F0\007\275\206\017\345\274\306\213\267\273\262f\344<\330\354\004\2753\327B\275o\355\332<_\221\253;.\204,=\374\034\033\274\325GT\275\275}\013=\032/(;\206\004\257\274\312$Z\274\362\377(\275C\352\'\275\204\027\027<\265G\266<?\320\224<\242@\316\274r\315\007:U\206\201<\327\316\217\2748\276\026=\370mC\272\022\2160\275c\363\005<\330e\365\2742\240\026\275\336\346a\273\000\266\363;5\2442<\236:\021\275\321\225\r<b<\343\271@\304\211;\304\247z<X\005\266\274\017\335&\274\021R\200<\270*\002\275\367mK=\277w\034=Ux/\275F=L;\307\363\231\274\321\212\\\274z\355\021<\307x\370\274\003\005\204\272C\3141\275\006N\374<:!L\275z{\363<\221\027\373\274\201\202@\275\301\364\221<\207\237\224\274~R\035<!\345\366<\362B0=z\362\r\275c3K=\222\272\031<\356\343\353\274p5(=N\244\n=\036L\002=\032\026\252\274\340]N\275l\3522\275+\241\376\274\264\377\t=\251\023H\275[M\372;\202\033\301<V\360V<3\274H=\227zS\275ta\235\272\274X7\274\274\0003\275\366\376\331\274tOp\273l\262\035<\304k\262:izP=#\364G\274\257\267\260\274\021\027\203\274\237#(\275\017\256(=\324\0070=f\037\247\274\r\006\263\274U\235\033<5\216\204;\354B<=s\317\211\274oVO=\231\262K\275zC\264\273b\224U<y\217%\274\351\004\021\274\252\026\225\274\330U\031=\263 \241\272;\223\263<r\365\334<\327r\013=\347\336\005=\325\325\r=\322:\r=k:%\275\262\206\265;\324\005A<\035\372D\275x\365B\274\263\220\217;\036\364\243<\222A\260<o\241\251<B\213J=g\026\321\274I\344\n;\026A)\275\301|\306:\367\2037=y\034v<o\232(=\212\351P\275l\262\315\274i\211H=\272m\302\274\3737\327<$\004(=\275MI\274\331r\277\274\213,\203;\306\340\301<?\245\304<\362@@<d\202O=\325\355\002=\364\215\202</\0032\275\235\210\007\275Y\272\035\273\3629\315\273Jl\023\275\350\r\273<\034\3029\275\024\277\340<\373A\212<]8U=1\207\356\271\204\032\004=&\362\365\273\370x\'\275\331\275\215\274D\3463=\014\r\t=[\3625=\307{\327<\225\216><\333\307.=z\213=\274o\342\354\274\352\330\330<N\331Y<G\031\013\275\003\221\n=\354\034>\2754\006\313\274Q\326\021\274\203a;=\031\254\364;\022\322\320\274\315`3<\007\224\250\272)H0=w\025\321;\346I\355\273sI\000\275{\335\033\275\003\177\320<}\210g<\270\220\030\275wTU=\314/\033=L\213\250\274a\254\313<\247\243P\275\301|\020=Z\025o\274\374\275==\215\332\310<\256n2=\273\203~\273\264\335\315\274^M\004\275\377\330\033=\367\021\263\274\362\025W\275q\371\023=\217`\033=%^%\273\313\021\201\273\226\254\332<\333KD=m\311F\275\0377\030\274\263\374\332\273\203\331 =\030\264\300<Je\022=\260O\034\275\226\311\030=y\020\003=\222\037\227\274F\035\'\275\010\345G\274\315\3739=\354\223G=N\035\235\274m|#\274{\256\'=g\221}\2748CI=\207\332\265\274\200c\003=\022\320\312<\375w\005<vF\361\274:\240\300\273\345c,<\000\216-<Ec3\275)\273\027=\304\373\366\274\003,\276\273\254\321\327<&\303\254\274]\271H\275n\222\270\273\030TM\273QO\002\275\252\"\323\274\002\024?;\301$%=\017\033\r<\320:\376\274\241\233\021\275\014I =\252a$\275\0135\026=\330\3773=\216\266\305\274=\310\202\273~\225_\274D\377\216\273\2649\216\273zO,<\037\322\371<6\333*\275\330\017\020=ew$\275L]M=\032DL\275M\313\325\273~\221\316\274\227\330L\275\350++\275R\315*=p5v\274\213\251;=$c\233<\331S\275<\306f\326\2743\335-\273X9\325\274\252\247-=\313O)\274\035\335\357<|&\026=\307\236\333<,\265\247\274@\032A\275\":\306\274\037\0013\275\270\037M\275?\3720=\256_\026=P\216\377\273^:\210<\354U>=\315q\277<\273\264\276\274\315\333\204\274\267;\n\272\263\351\r;\251\026w<\032\303a\274\201\361\335\273\303\257\327;F\252\023=\221\305\310\274\376`\016=I6z\274\002\367\031<\270\'\321\274\014\235\355<\031\334F\275v\037m<\337\201\007=\312B\022\274\"\362\266<\344v\244\273\255l\n=F\023\"\275U,.\275z\005V=3\006\021<4\270L\275\330SV=\354f\014\275x-\217\274Z\223==\374V\023\273\212\341Q\275\356cF\275\365\366u<\342\353==7K\227\274\002\3158\275\023+\206\273\332T\023\275\177#.;\010`\n=a\311/\275\370\371\235<\013r\336\274\351\241\370<\234[M=\0210G\275V\310K=\235\351D\275\017\341\342\274\325\2304=\313\351\"=\255Va\273\267\ty\274\376)K\275X\324+=$\213\312\274\354\355\003\275\370;R\275\013}\233\274\202\214\034=\242.\352\271U}\261\274\027 \356\2747\300\033=\271\022$=\254\232\251<7\"\036=Ct\006=\212\020\363;\275\240\005\275\037\n]\274\247\021T\275\036\317\244<@\235\341\273Z\003?\275\231/`\274\356\030\016\275\317=W\275\275\300\365;`\217\326<Z{\016\275U\340)=5!\227<\010T9\275\337\024\252<Z\255\245<5\214\253<=\207\324<\270R\361\274#\227<\275\205\322\013\274>\342\206;a\227\036\274\323j\206\267\303\022,\275!\013#\275q\016\n\275\354o\010\275u\202\247<Y\t\371\273\n\302\r\275\261\355\035=\264{I\275C9\210\274\207Z,\275\245\227h\274\264\233\361<f\370\024=\314\014\247<G:\004\275\256\247\300\274#/2=\347\374R=\370\0302;\016\251G=uh3\275\241V\000\27586\000=\344+\335<f\344<=\334\244*\275\363VG\274e\373\326<6&\010<\226\337m\273\'A\005=e\177V=\372\225\261<>\211\333\274\344\316u\274\262\r\323<\030\263\235<\225m\222\274\321\323\346\274\340\376\221:\272@\343\274Cs\253;K=\007\275\017\323\244<\352\211\214<\031\332V\274\234\345\263<\225\341*=\225\007%=`\372?\274O\201+=A\352\364\274oc\326<(LQ;d\023\216\272\364X,\275\220\023B\274/3^<:7\261\271\234\033F<\243~%\275\271\351\\\274X\223S\2751(\243\274e_\267;\035\034\236\274|\247Z;0j?=\007\211\347;\317su\272\341\357\350<\307\360\324<\346\310M\275\325I\001\275\373\221\354<\247\274<\275\250I\025<:\354=\275\356\233-\275~6\017=t_0\275c\326\257<\027AR\275\307\317&=_\246+=\300\006\235<\370e\272:\r\"\227<\330\2658\275u\374|\274\007O\370<\273\274#\274Y\027\262<\247\335\367\273\250\255\200\274\230\2378\275\377\233\244;\324\\G<\2200L\275\335L\215\274e\230\352;O-\227\274\317q==?c\205:\307\274\374\274\342R)=\231\326\004=\213v\025<\304\202\344\274\267\274\277<\202\337)\275\217\003\251;\215p\007\275W8A=\221&2=\323m4\273\030\001\241\272F\346)\274Y\240=\274c*e<G9\346\274\355\223\212\273\037q4\275,p\013=\177\2622\275~h,=f\214!\275\030Y?=+\240\000=o\273\265\274w\005V\275wQ\'\275(h]<\037\026\021\275\363\2437\275\226\t\303\274\006o\317\274v\003\366\274\356\352\255;\332\314.<8_\226<\324\3759\275\243\272\035=\270\322\212\274\332\332\306<\267]\340<)\375\242\274I\225S=\231f?\275\025\t\026\274F*\017=\343\246n<{&?\275\t%@\275\241C6\275\306}\376<\202{F<\270\267\300<W\237I\274\377\240U=\326\314\370\274\232\305==\216I\n=y~@\275\243#\346<\234\257\017<_\321\265<\275\242<\275\364\326\336<\332\366_<\357\233\000<\324\305\022\273\033\347\210<\2269\377:\235\312I\275c|\364\272\353\332\226\273\221\245\330\274\346\274\213;gO\203<\345x-=\'\370\017=\241 \036\274_\3600\275\261S@\275\326*\037=\006` \275\331\370\317<%\375\233<\214\203U<\234\3561\275Z\330M=\304\260\007\275*G5=\2027\376<\223\024\360\274\316/\002;%\014\326\274\227\243N=\\\275h<\"\332\016\275\201A\333\273f\277\277<\'\253n\274<\206\272\274\235\262J=4\010@\275\314]j<i\324\202<d\213\344<\323\363&\274\215_G=T\024\307\272o\333\265\273\313\362\003=\350\253\034=\\\314>\275T\372\345<$\230\264\273\337\365#=Y.\"\275?\332?\275\314f\027=\210\276;=\'\342\310<\265ET\2751\244\237<4~\234<=oU\275\265\t\360;\317aS\275Y!*=\333\177\342:d\222V\275niN\273\333\302\r\275\347\250\207<YR0=\237\273C\2759\255L\275z\026\300;\217\273e<\202e\234<\254\342\214\274\004\233\221<\361\230\240\274L\\\317<a@d\273~\242\372<S\200\227<\010G:\275\014B\214\273\373t\242\274Tne:\2056\236<M;S\275\246\336\325\274\357\346#<\260\001\236<\210\254,\274`vP\275\246\014h;\316*,\275\365b\030<Z\334\336\274\343zG;\007\270G\275\212\2055=6S\326\274\267\211N=[\322\017\274\n\'C\275\000sM\275E\3640\275\014\232D\275T\365q\2741-\005\274\364I\010\275\274r>\275\266\332J\275\360\007\214\274\234\0271=\251\316\320;\006\277\201\274!\257K\275\037\020G\275\355\324T=\344[G\274\010\206\201\274\007\006\207<D*C=@\220\220;\353T\370\274\252\263\352<\356\314&=\330\356\027=jI\033=Y\301V\275j[\336<r0\366\272\006-3\275\240\266]\274\274ze\274i\026\020\275\322\366\304;\027Q\214<\035U\020\275\014\2568\275\240\237%\275\020\340\264;(\352L\275O9n\274bU{<\340\342G=\250\271\273\274\270\n,\275\336R\037\275=B\007=U\364\017\275V\225\345<rF\272<f\300K<\007\270\233<\240\304\340<\251\270\212<\025\246x<\000\256\254;B/8\275\016.\357:H,\275\274\261\201\300<\254\234\335\274w\353\207<w\354\370\274\356 \225\274\230\255F\275\3757>=\003\023\004\275G\270\027\275A-q\274\315\224\233<\025\205G\275\016f \274X\222\315\274\030\320\350\274\365a\t=\3378\017\271:\352n\273\366\337\332<\325\241/\275d\216\016\275\270\264\336<^\317H\275\265\266J\273\225\346!\275\245\333\365\274\212\345\256;P~\265;\312\0106<\245\346Q\273H\334\t\275\240\177\322<\nB\332<S\000\'\275f\210\347\273G\177\236<\330\330\233\273J\371\310;;\273\311<\372Z3=\007\201\323\274{\363\262\274\270\026*=P\333M=\006\177\014\274\244\3452:RGJ=[\004\024;\315\276M=\016-\021=!\225J\275#+\316::\340\032=\255\346\354<\377\243\007=\007\236:\275\213k\036=\224y\300\274\342&\016\275Y\007,=\345\220\003=\274\005B\274,\223\022\273\024\262\303\274\341P\006=\036\001\235<\274\360i<@q\034=-A\346\274LqB\275*b\033<\2056\352<\374\377\031\275\215P\002\275+#\214\274(gq\274w\234\007\275S\227\006\275\3522\250\274\022\2647\275\307#\226<\373p\212\274C\013\032\274\332[\263\273){\373<jQR=\370&\037=\347#-\275\006\304\344<\016\251\332<m=e\274\211\254\004<\264 *=\277\367\364<\247\361\027\274\202\312O\275\244:~\274\247_\201<\300\013\307\274cr:=t\'\034\275\217\275J\274\367N\032=\266[\t\275\343\363\233<\216\361#=\357\031N\275#w\201<\245I$=\023\254\222;\232\205\035=\212k\243<\372\345\373</;W=c\227\261\272?\266+\275O\300\254<\240jC=\247N\014\275\251[q\274\237\r\326<\301\255\033=N[\022=\321:\316<F^\264\2747\372\025<#v:=\203\0030\275\250\0073=yD1=\367p\031=Q{\357<\006+V=\207\320I\275\177h\014=\222m\037\275f,\002=m\005R\275Z\203\016\275\325a\362\274\353L\351<\3063\006=\234\304\201\274\215\025O<\362\341\013\275^\335\204\274\223Q\003\274\002\345\315:2Y\243<-\013L=\021oF=\326oV\275\035\327-=\014\345\032=\225\230\213\274\223pO=#\0011\274U\243\345\274\245\177*\275\300\022#=\357=\005=\231\342N\275xw];s/\254<7\000\014=m\266\330\274<U7\275\206\311\327\274\252\3157\274\311G[<x\233\275\273\373\034\337<k\316\024\275B\317\254\273\2313\037\275\261B9=\320\372\022\275Gb$\275\265\340#;u]?<\352\254b;r\211!;K\307\264<(\341\t\274\202\333\260\274\220\200K\275\336\023P==|%\275\251\245F=U{\023\275\005\2240<o\3571\274\366\302\207;\355k0\275\256U\366\274s\320\034\275\303\304\265<:\334G=\3574?=\000d)\275>\025\202<\253\206\222\273~\227\006\275\360\300n\2746\253\010\2746F\210\273\340\235\250<_J>=\001\301H<]\322\000\275\014H\270\274\001\351\270<1\200\003\275\266\227\000=N!\262<\014\341$\275\211&\372:\202)\350<\010\006\300\273\266f\022\275\3135B\275\323\234$=\345}\023<\243\005\370<>\224\357<\341T3=\233\036\034\275E|\t\275]\035+\274n\341\203\274\332\035B\274KeW\275u\312\304<\224\345<==\220 \275&\2356\275\305F*<m\037\306\274\200\005I=\333\232/=\207\340\217<\017\273\025\275fm\241<mi \275\010\363@\274\233\323\341;\177\337L9*4\246\274\td\316\274\304\300K<\005<\277;`\340#\272)\333\371\274.\217\352\274f\366\032\275x\346\217;/\2211=Z\200\330<\300\3525=am\261<\263\322\367\274^;J=\250\367)\275Q\0025=\210\273\314<v\251G\274e\232Z<\031\r\'=\201L\034\275\343\346/\274\006\033\306\274\242\234A\275\205\276.\275\320^\033\274\263\356\327;\222H\247<\326\245\030=\226\"/\275]\345\034=\374\2406\273r\321`;\273\3401<{0\033\275\204\037\237\274\345\241\362;\322\036M\275x\213\n=f\nC\275\277N\367\273\300=\250<<\364D\275;\226|<\006\304A\274$\331\271<gM4=~\367(=\025c{\274\244L\354<\252e\255\274[\254\n\275\267K\207\274\014\370.\275\256\365\002<\202\251\034\274\377\002)=\023\376-\273\207#\346\273f\235Q\275\243\357\355<\355\315\034=\243\250\034\275\317\255T<05==\371u\245\272\031\246T\275\247DM=<+\r<3\260Q\275\336\241\211\274\265IN\275\2220\226\274\207\300\247\274\335m\232<\203\213\202\274\024w\312\273\335\345\351;\375\n>=\335\0078\273\311_\310\272tL\003=\211\2217\275\362p1=j\375\'\275\360\032\'=\257q\346\273\321\321\006\274\033\225\221<\201\303Y\2740\023J\275>X\254:6\341\313\273\0102\003=d\214\351<\206?%\274\314\365{\273t\3539\275\001%@<f\261\217\274v\241<=\317?j<@\003\301\274\231\271\004=!\233\334;\226\240\343\274\316@@=\r\245T<\200\315\257;\023\2449\275=SF\275by\260\273\267f\t\275\305Z\032\275\237\254\013\275\026\325\032=\3166\250;\'\024_<\231W\023<\300T\251\272\255\274G=\275\361`\274\201(\002;\322I\017=dWA\275\312\275d\273\374\035V\275\275\tE\275E{\372\274\3006\204\274\001\014\362<\314,\361\274\241\243\020\275m\267\027<E\213V\275q#\271\274\331wU\274$\320.=2\265\343\274\362\371\214\272\310l\031\275\323\332\324<\027h\330\274\232\343\353\274g~\302<*\367\036=z-\003=!\341\030=\365\305I\275\233\250_\274\346\263\364<\342\201\256<\256X5\275z\360L;\277D4\275\226\343\270\272{.\300<{\240I=\263\024 <VV\340;\363\034\226<\n\357\003\275R_:\275\357M/\274\003|\345<]H\332;\035`\254\274`\3203=\302\251\360\274\333\263J<\325\373:=L}(=]\364>=\251\245\031;\262K\332<\n\315Q\275\021%l<\037\232\016;4\2735\275\253/7\275\361\267\320\272E\245I\275)\r\214\274\270\216\016\275\010\226\337\274\314}\327<\3519-\275\303\225\024\272\375\345\335\272\360\225\014\275\000OZ\274\303\0319=e\322\026=|\n\276<S\366Q=\177:\t\2741{<\275\003\254\252<\255\355\264\273\037H$=\361\203\272<\341[G<2\023\n\274\353\363\351\274\321\254\030=Q\2214\2750aE\275\204\307\3179{\343\251\273\306\314\367<\262\002E\275\345\r\264\274:\244\211<\03335\275\214\250,=\371\210\310\274\t\361\037\275\257[l\274\377\022\255\274\332\037\\:\236\264\313\274\322\342Q=\177y\224<\311\r\001=\016z\"<~\273\365<P\322\021=\301\372H\275\n]a<\315\253K=}\036\n=\270M\352\272}\237\025\275\357\355`\273\225\363O\274\227\023\224<\367\025\212;\267\3774=\323\245\020\275\277Ls<\215\201\372:)\255\n<\304k?\275\302J2<\220GH\274\207\227\371:3)k<\205`\204<\375|V\274-\360\030==\304\'\274\324\333{<CgE\274\372vp\273R\025\227\273\014\204\350\274xjR=\344\341\210<&\033\320<ANo\274_(%<\232\351\002<\013\225=<\215\031\263\273_\277,=\341z\327\274\032#S\275N5\214<]\326\217\274\355{\034;\224i\002=jyL\275w\353\266;\225m\260:\202\271\327\274\273I+\275\313r\031=\024\322O<>\307\007=-\004\006\275z#\353<\253B\215<\302>\200\274x\270\243<\211\354\201<\250_\027=D\342\233\272\262\274d<\255\336Q\275\326\214\216\274\301\327\244;OW\032\275\245\234\205<\312\020E\275\272\337\261\273\024\236U\275\014\227\255\274\311\311\000\275\004\306B\275\n\337\220\273[\306\354<\217\336\252<\256\212+\275\203\002\020\275x^K<\225\2114\275\010FV=SS7=\325\027\n=\356@-=\363\221p\274?m/=\327\312\r=\020\2073=\207\233F\275p\221\037\275\034?\027;2\r5=g\220\037=\357\267\317;kq\354<3m3\275k%5\275\024\273.\275\373\203\023=\321Y\300\274\231\tI<\343d\020\275a\250\373\272\306\334\002=\240t\234\274\231:\200< \303\"\275\200\251`\274\252\315\023<\035\332\244\273La/\275-I\202<\257\036\007=\217\006\227\274v\007\\\274\267\021\235\274\330\353\r=\n\325\356:\314\375\024\275\2420\347\273\341\\3;\010\342T\275\304\376\317<23G=\357tI\275\323]G</o\304\274\027*M\275FEt<\206\3356\275\313%M<\263=\327\274Fb\004=y\220|\274\021\025\352;\257\251+=\003\033\037\275&\215\302\274\363\204\020\274\031\265\007\275\014\010\237\273W\237\274\267r\346K\275\342\311\037\275.\036P\275\005\247\001\275B\367\210<\365\272D=\022\017\224\274\327R\364<\335\304\214;\303\024G<\016\244=\275\257\207\016\275FHV=\037\232B\273\035\3350<\022\372\322\274\324\217V\275\343\201\\;\326R\364;\027\255\007=\314\255\247\274e\341\203\273\003]\361<\271\367\341<|\333\203\274\2550\211;\220!(\274\226\301\005\275+::\275\002i\021\275Q4S=\"|\t=}\2200\274\264%*\275\202W\347<\303\354,=Y\313\206\274\211\2408\273\265\273\262;wR\027\275*_x\273\201\273\233\2745\0028=\333.\264;\336}J\274 \264\223:\r\225\377\274\ni.\2753\025B\2759\332\362<\256=\023\275\224w\035\273\260TD\275`\270\276\273\033\347j<\253)T\2752b3=\200G\360<\201Q:\275Xg=\2752C\303\274\215\005\033\273\014\372%\275\315\312w<\210\025)\275\363p\332\274\321>=\275y\372D\275\000=\332\274\251:\022=\351\224N\274\304\270%=\273i\371<:\010\"\275\277w\026=\326\031\211\274F\222\212\274\262\320<=\324\217\024=\306\207\216<v\375\014\275(\010E\275\273\372\351\273\202\305\242;H\344\243\273\204\325\252\274\024=\027=Y\014\371\274\274\n\027=s\250\333<\367m\222\274\302(O;\204p\006;\200\233Q\275\313B\212\274\277C\034\274\223\314\370<j)\005=p\215\022\274\030+0=\022\210\027=B\361C\275s\2734=\337\251\247<j(W\273\200N\260;\t\373p\274\376\274\365;\213\2377\272]T\026=IWb\274=\361\020=\374S^\274\005\253\"=Q\352N\275<\030\310<\31050=R\347K8\222U\027=\372\246\203:\365\371?=\0041\223<1\270N=~P\'\274\254\350S\275\237\006$\275N|\036=y\007J\275\217@O\275\366\341\262\274\014\031\305\274`\255\351\274\245H\177\274\230\371Q=\031\221\203;\273\0240\275R\375\t=2\253\356:\346MC\275j\324\374\274\272\317\343<\261\370\002\275\205\232\033=\276&E=\274\002\275\274\n\030\343\274\2512\354\2739\225L=aY\243\274\371\314<=\240\212$\275%\300\027=\033\354F=\217\026\233;|0\'\275X]\370<J+)\274\320\202\262<\226\001\025\275v\311$\274\357E\257<\372\0022=\025t\254\274`!>\275\363\tJ=W\316P<\257\237I\275\0268\364\273\002|\227\273\206\335<=\206\261\037<\000\320\210<\267\\\312\274\261\220f;\352x\321\274d\017\262<\006\231\352<3\326;\275\203: =Y3\210\274\316e\325<\177\027\030\274\032g.\275\262o\000<#*&\275\216\221\032\275\221\265C\273L\200\300\271\200)\006\274\004\214/=X,\373\2733!\257\274)\244\203\274\005\341\277:\0102)=\236\0138\275\365 H\275\266F\333\274\314T[<\246\332\214<Q\230G=\225\335\236<\302\325\223<\341\247\327\2734\327\370\274\215LC\274\340\237\236<\247\205\347<$&\211<\177(7\275LZ:\275^d\347<\335\226\'<z7\333\274\t@\322<\233pE\275s\315S=I\343@\275;jF=xW3<v/C=\027\252x;t\226\210\273\335\305\020</X\374;\313\263\375<\324\365@=\177)j\272\031\013\020\274\267\\\n=\362\213\270\274csQ=\202\352\244\272X\3703\275m[D<\277l?\275%\321S=\253\265(<[\2051=\204\304\246\274\201|\307<\033\233O\275\207\356\005\275\037\257\225<\213\370S\275\037\000x\274\217{)=\260\020\353\273XaW\275\303\250\267<\336c\336\274\230\363H=B\332\000\275\357\231I\275&\371\257\274rq\340<\177\036\034\275\247\375\026=C\260R=\\3P\275\231Z\263;\332\314\374<\235\037:\274\362\235J=\027\375P\275\'_\260<\355\231\035=\000W\310;\352\257\r=6\2648<\333|\037=\373\254\333\274k\220J\274K\202\260<G\213|\274\010\323\'\275\"\030[\274g\347J=\023\262\014\2737\315\031=\211\275\246\274\375\372G=0\022\335<O\177^\273\255\243\231\273\262,P=\276\302\236<L\341S\274-\013\205\274CA\334\2742\345!=K\334s<z\022\371\274iNW\274O\024\337<]\230\361<\274g\302\274reM\275v\2637\275\260Z\276<PH|\274\307\242\370<I\010\320<=,B\275\330\237\244\274!~\326\274\221tF\273{v\024=n\274\344\27483P=rI\014\274e,@\275\014\360\240;x\255Q=-,\001<\266\300\016=$h\203\273\261\375.\273.\213#\274\212\204\013=dd\036<\031On<\305\006\374<d\257L\274:\035\304<+QF\274\3747\232<,\203r\273\212\2156=\036x\300<h\240\036<\245\342B\275\370\':=k]\247<\273\231D=8\253 \275\031\221\324\274\350*\034<{\0274=8\263k\274G\223\237<Mi\252\272\r\234D=$\334%=t\236\344;\234\376w<\373\372\241\274\034\027d<\220\t\320\273\201\317C\275\300\263A<v\222\247\273B\2768=<*\336<\341Fr\274\370cU\275\375z\375\274\323\373E93h@\275t\343*=\010\332\334<&m\322<\003Z@=\026\177\361<\232\'\277\273\323\366\262\274\035B\335\274\357\016\225\274\371\'\005=\222h\302\274\306\007C=\214\007m<U\355C\274E\024C=+>{\273v3\345\274N\202\236<\360Y%=\231$\232\274\263V\256<\t\234\007=\331\007G=\226\005\254\274\022\230\034\275Y\001!<q\210\262;\322c\351\274\365\340#=n\347 =r\221\331<\314\006\005\275\006\353.\275\311\300\030=\223\232\312\274\243\203\253<\240\265V=&\375N\275\326\274U=\243\352U\275\225K)\275\364\022\344:\014j\270\274\355]+={nD=D\204\007\275\377W\234</\307\"<~39\275\2218 =\366a0=\363\265U=\\YK<\201\272\233\274\225}\027\275w\3025\275JW\014\274\201uA=;+\225:;\3406\2751\252\005=\376\005\227<L\325\006<\315\021N\275\206\347\353<\331`\222\274%\030\025=\365\323\305<\203\364\245\274\021o\261;P\362\t\274\262\001O\274\326^\273\274\344\000\3208\245\336I\275MM3;:\321\272<jh+=\373\346\237\274\227\034\n=\217\362\276\274e--\275\341\370\3278\241!\302<+\373\317<@x\371\274\307\210\305\273\270s<\275\200\231\266<\361,B=5\376\316<\260\324\265\274\312\000\030=\324\336\303<\264(I<)\337\025;W&\277<\305[B\275\244VH\275\250\320(=\331\2322=\310\021P<u(\372<\305\306\327<)\023==\023\231.\275d\036\016\275\003\216W\2743\261\014=$\"\352\274]\225%\274\021\336\247;\021`-\274\252\363I=t\332\235;\376\254\252\274\"\202>\275H\361\333<N\020\376;Z\320\264<\021\224%=)73\274\261\020\014\274n\247l\2747}\032\275w0\003\272g\035*\274\321c\356\274I\311;\275P\275\216\274\200(\323<\027v\232<@\352U<\026H#=2\352\251<\276\2219=C\363\n\275\277\005D\2757;$\27568\230;\331\335\361\274K\2628\275\226\020N8\035\341\200<\002\364%\275\376\307T=-\253\r=\017\332?=n\371\253<\246\317%\275\023\242\267\273\373\246\334\274\225p\374\274ml\340\274\342\006\271\273\372\204\376<\306@\201\274\242+A:\3358\346\274\234+G\275\023\217,\274\333\013\354<\177\307p\274\034\"\263;5\316,\275\265\216\037\275\001\201\r\275\210\315\370\273~\360\363\273\342Y\322;62A=zg\223<\307\2011=\214%\222\273\335[\003\275w\313\037\275\"H\004\275\353\330\243<\200RJ=\361Ch\274\nqs;p\273\327\274\232\037\343\27450B\2750{\007\275\031?1=\rHR\275A\357H\275\251\327&\274\2436\306\274\235#\007<\252\004^<x\nS\275\275E\300;j?\031\275{\375\366<\326\2679\274!0\014=\224\200\364\2745r\024\275\250M\013\274\316\362\275\274\2114\345<\344\024D=\201\346\351\2747\3326\275*#J=&\346\025;\024\367I=\340\2519\275DH\312\274H8\221\274*\250\023\275\206.\245<nq&=8\274\337<\234\224#=$\244>\275U\244G\275\353\335I\274\205\200\000\275G3\377<C\313\236\274s\023B\275\236\000\327\274\212j\013\275U\022P\275zr[;K\240F;\303\231\010\275\010q\313;\231D\177\273O3\007\275\265\307K=\270\326\031\275r\3522\275G\304\343\274&7\005\274\303RW=\2124\364\274O\255\321\274\203\315-=\335\3540\275\371O\033\275\304\332\"\274~\0103\275D\\\205\274hc\031=\315\332K\275\310\207E\275\026Q\277\274V/\374<MX\001=og\316\274\247\304F=\356\326\242\274\321\202M=\363\257\263\273)\2362\275\302\221\350\273a\\(:\"\3152\275b\354\276<\264\005\010;\302F\240<\223?\340<\340\2040=\036i==J\242\202\274d@\035=\211\n\367<T\314\227\274\365\372{\274\345 \003=\007]\221\274\343\020\203\274\232\223/<H\031\031=\2576\003\275U\304\000;_\221\243\274b\314\350<\373\345\357<\324L\267\274\032\260)\275CG\337;\037\354\273\274\006\245\234\274pr\024\274F\225g\274(\254\357<\361\311\014<\334\230\003\273\340\260H\275\013\340\350\274\353\301\026\274\277C3\275\231&P;\375A\n=\231\241\001=@L\007<A\200\377\274\30503<s\222C\275K\252\251<\241w\272\274\'\245\013\274=\027\245\274\221@\261<\007\345g\272\020\264*=V@\317\274\271\035\030=\272\200\305\274z\2157=f\2155=\260x\033\274t\311m<\253\333\035\275\313`f\274xK\246\274\025V\023\275wvG=\237IA=\226>J\275\356L@\274\265=\226\274\233\202[\274\252\235N\274=\221\007\275_\201\026\275\245\354\322<\347\376\216\274\260\204\017\275\340\266<\275\203\2433\273\252\367\365;\317\224D\275|\226#\275\030\377\357<\243s\202<\'\002\035\273\005U\260\274\232\357;\275\301\274\007\274\001\227\227<\342\313\374<\266\341\000\275\301\270\364<\314\212F<\334\306\330\274\024`5\275/\243\302<\204\345\024<X\266\326;\350\231\033\274\030E@=\302\345\024\275!\327\030\275\344a\277<[\017\002<1H$\274%WE\275\n\023t;\004\323\244<\331\005\377;29\233\274:\200\217\274\006\200\307\274+i\347<\230\244K:\337\317T=\3551\027\2750\nF=\313\274\332\274P\357\325<Jg\341\274\366\201F\2756{\217\274\341\312A=\204\016J=\304\375\265<!\023\211\274\243:P=\262\321\003\275\200\037\010<9|\246\274.\363P=\217\007#\275\344G\222<\014DE\273\322a\357;SCU<\320\366\332\274GC\023\275\250\275\034<\317\231A=\3732\246<\232\025K\274\254\r\373\274\003\312\021<\357\222K\275\276\034H=\357\366\020=\236\306Z\272\"\272\355\272\275s\334\274\221\255\t\275\367\215\013<\237\274P\275\220\027?\275\014\010><j\221\314<\326+y<\226\'\024\275\246\332\007=\322\257\007=\t+\203\274L\211(\275\240_0\274\032\230\272<9\320\237\274a\215\353;NP\260\274`_^;=\243\034=Bw\020\274\027\013\034\275\300\n\010=\\\304)=\246\277o\274!)_<\232\006\024\273\235\315\t\274\327\214%\275\306\022\373\274\311|\005\275\"\331O=\224o=\274w\025\t\275Mi\260\274vZ \275\260#T=\010\362\332\274L\005\221<5\231\014<\024-S\275\330\027L=a\013(\273\352\\\023\275\242\002_\2743\257\250\274t(\013\275pg9=\212\262U=U\240\231:=\201\252<\250\202F=d\027\204<n[^\274\377h\323\274\302\177 \275\004\217W\274\002^\033\275\234\301\340\273\344P\"\275\263lA\275\364eI\2758p\231\274\205\'\230:\251\327X:N=\301\274\3356\270<\026)\030=\312\334\275;\202\301\302\274\256\234P=\372a\255<\272\204Q<\003-\370<\342\345\355<\000\371\203<M\276#=?\352\262\274p\232\t\275\240\256\322<\033\023!\275T\367\336\274\206w.=\2218z\274\010\271\025\274_\324\363\274\273\316\'=rb+\275\246\200}<\002\323X;\347N\016=\214v\207\274K\267\202:\252\200\326<\3277o<J\355\306\273s\337\016\275\3318P\275uW\365;\310Y,\275n\313\272<cR\017\275\017\325\027\275\273 \373\274\205\264\322\274\245G\247\273\340E\306\274mf\013\275\257\346==\020&\326;Ih\203\273\261\220\255\274T\275T=K-\267<\002\310<=\260F\335;\261\205\354\274\007,,\275y%\325\274\260\034G\275\021\217i<W\306\244:o\2732\275u?\n=\226\022\231;7\014\342<\223(J\275\363\005\013\275-\\2\275\241\257\342\274\221Z\376\274\347\020\244\274\366\252\366<\242J\037=\245\250\335\274\225\022\004=\334z\307\273e\026\206<\224X\242\273\332X\031\275\271\242X;2W\332;\340}\006\274\344U=<\202\036\326<\346v\221<\"e\300\274\267\007\341<h\026*\275}\357\262\274\357\312R\274\272\244\002\275\014u\013=\304\233V=N\0133\275\013i\302\273\300u\327\273\231\217M<\001\315O\275\364\230D\275\3121\n\275\310\202T<I\207\271\274\265\324\325\273@n\364\274\267G`\274\256B)=\365\235\345<\267\026+\275\373\r\200\271(y\272\274\210\373\037=\370KQ<M\202\266\271\354-;=Ro\034\274\372\223\230<\211\367\235<\312\345\306\274\371\231\303<Zp\323\273\311\306T\273E<\003\275\321\"_<[E`\273\035\355F=r1\231\273\246\252\005\275\273\313<\275pv\300</J\r\275v,Q\275\020\223\365\274%\321\265;\\\006T=\346\270\355<\334\217y\274\242\367\244\274\002P3\275zu\351<\324\177x;~%,\275\035|P\275\027{p\274\277\026\245<\347\247\344\274\307\252\002\275\370\022\006\275\177\0278\275r\304\314<q\371\270<y\212K\275\034\367\323\274c\2274\275\010\207\002\273\301)\034=K\371#=\0371\000\275\262\r\024<\354\247\331\274UW%=hU\324\274\214%\'=\220\0317\275\306,S=\234\032\332\274\026B#\274\302m\267<J=\327<|\030.=\310\326\313;\255\377\250<l\210,\275_0N\275XKR\275$\271\215\2743a\037\275\362e\374<\266\277\213\273\230\230F\274}\347c;\031\371\222\274\205\200\t\275\225\2615=\340\261M=\266c\003\274\307\247\030\275\342\024\305<P\"=\2756\274&\275u\001\003;\251\265\001=Y\247\033\274R]\036\275(\000\357<\r 8<\t%\236\274m\366X\274\357\246,\275\214\327\252\274\354]-=\233B\276<D\363\017=\304\224H\275\021\366\344\274\353\265\037=\300_G=L\275H\275\365\244\013\275\365f\027=\001\301#=\210\253P\275\363\246H\272\017Y\354\274\272\252\253\273\265\003\221\274\256/J<\216\2373=\207\370\253<\304#P=\274e\355\274\000\345\246<Z\021\031;\271Z\234\274\225\027\035\275\n{\247\274u\'\265\274\256,\270\274@\365S\2757$1\275\336\374/\275i\305\362\273\301\036\210\274\275\211\023\275\345^\360\274\310\312\215<Ka\372\274\244_8\275\332\nQ=\000#-\274\'KI=\314\222K\275\324\377N\275t\345\301;2\345\n=\037\017\322;\224\252M\275D\036\255<\321\221\204<o\345\236<s\006\031=\333b\363\274\224\232\003==z\014\274C\001A=\177\037 \275\360\234m\274\371?6\2752\351\007<\204y\223\273\nj\033\275T\314\351<\244<\377\272\014\0309\275z\312\001\2753\370A=\265\032s;u\014\034=j\262L=\036\310\016=\325\260\264:1\030 =\222]F=\005\313!\275\240\202\000=\272Z\025=\255EO\275\002\214\342\274b\304\211<:\240&=\363.\023\275`%\251;F\354\232;NZ\251\274\217]\037=\3154\367\2735OC=+<B;sj!=J\365\203<9.\024\274\030\320\375\273\204\351\324;jrR\275\307\221I\274a?\340\272p\3308=\221J8\275\0324>\275+:c\274\021S{\274\251-:<\261E\362\274\345S\363\274z\356\004\275\337\016)=Z\'\231<\342=\032\274i\314`\274\301\2131\275K\003.\275\001\273\010\275\356\260\303\274\036\223\360\274\274\271_;\206bH\274\263E;\271\355\320(\275X\237\310<\000\347\225\274\341\370\332<\204>\301;$\373\\;\3710\250<\266/\225;Z\214\356\2744Z\266\274\311\214 \275\360\'\001=\322\002O\274\177D\336\272\325\031\205:\327\257\217<G \003=\033\0078=j\377\030= \257k;#c\234\274\261\251\021\274$\025\210<&cS<\351\302I=]\006\020\275\344.\024\274\342\333\001=W\3420\274\340\3568<P\003\266<F\330\351\274UQ \275~\216\004\275\376\320\331\274\217\333\232\2746K\261<\251j?<\346\361@\275\254\311\242\272\326u\013=\004\236\r\275~\210\247<\242\360u\274N/)\275\223] \275\251\343\254\274\322\177\014\274\222OC\2754\332\022\275Q?k\274\217\253\007\274\3068\355<\214\272\017\275z\357\271<\346Y\317<\312\317G=K\220t<\303dK=C\214\215;{\002\343\274U\2218=\314\257\220\274d\000P;_\'F\275H\3649=\351\374\320\274\030Dr<\227o\007=6\316^:[(\353\274\257\\\342<\225\340\016<\017*\326<\330\010:<\017\272\014<2\224\207<H;P=\337s\006\275.u\267\274J\310F<\332j5<\221\326\361\274\326\327h<\310G;=6I\030=\273#;\2757\271\307\273\0307\302;\356\027f\274h|\016\275U\t\025=% C\275(\217\033\275\344\033,<\253k,=\231&U=\205\235n<&<M\275\214<\224<f=!;=h\240<\357\337\033=\014\3500=\014\211\332<\352s&\275\032>\211\274pb\030\273&DY\274k\322*\275\002\376\037\275\356\372\037\275\373\320\025\275\324\376\273;CM\322<q~7\275\273S+\2755q\315:\227\326\317\274s\224\203<\260\250\r\275\202\215\013\275\021\341\302<\236\316\315\272\342\270U;\232\257B\275\001\361h\274\225\177\221\274\003\023\350\274J\230Q\275k\325)=;\tM\275@\257\233\273\305\3662<8\032\326\273\317\022\270\274\236\314/\273\356\266<\274R:\324<\\\362U=\351\304S=\325\016\036=\202*s\273\270\037\252<R\234M\275\024\206\'=\330{9<\007\215\205;\267\316K=2zD=\034\355\2539\035Q\262<\205,\025<\261\322\306\274\013\364\300\274\301WK=1ZY\274\253\322F\275\335*\024<<^\005\275\205\270\337<}[6=\347\337\237<\3535K=\362\210\251;\235\331\347\273\232\010\350<{$\374<\235\031\033\275\014U\027\275:\035\314;)\016=\274\201wa\274\331|H\274\315\341v<\035\204b<\243\366\005;\036^\251<?\037\035=\213~\021\274\356\354j\273)\036/\275\341\025W\275P\340\216<\374\251\255;ss|<Zz\000=$i\002\274\300B:\2742\307F<FH\264;\234\255\'=\267\257P\275Qo\027\275\302@\367;\'\224@<\3119\217;\372v\217\274\202\210\306\274g[\360<\330\234\234:T\3609\275t\323\306\274\307\216\026\275H!<\274\245\365\276\274\3616\352\274JA\377\274\004\345#=\025\'\343<\227.C=\271\235!\273}DP=|l\006=\262(\364\274\337\217-=\235\3359=/>\313<>\2412=\371\343K<F\021q\274\345\374I\274o\037\2779\216(\021\274\372i\371;\230W\t=\177X0<^\357\230<v\2109=u\022\276;\005U\265<A\321\014=\305\270\222<+\351\323<hV\247\273\263\270\017<Ao\225<\230\267\361::\332\332\272E\364\261\274\001\3649\274\230\203\361\274|\245%<\222\304\033\275\222\035\240\274h\226\036=\245\rO\275\261I\006=\'\360\247;\020b\t=Tu2<L\033\036=\347+T\275mv\273\273Q\330R\275[\260\007\275k\221<\275\361V\304<\213<N<\004F\020\273\331\277\014=\026\001\252<\r\227\320<\301n7\274\376c4<k\032,=\211\360\310\274+\016K\275\361\327\006\275\017\233\346\271\226\027.<\021\370\310<\030\270\022\2753~\253<\014~\006<\271\024\035=\270?\366\273i%\336\274\366\345\007=\27797<6\316+\275\233\007\212<a\205\266<#\'5\275\331bn<\321\303\031\275c\027\277<\370\314}<\2344\242<6\022\346\273L^};\337\225A=>\301H\273\221\365S\275Fi$==Fw<\245\350\337\274\312&\244<\305>L\275\301\022V=\250\365\017\275\356\200\036<\345/\267\274g\366\355:}\242\266<\253>\301;\334\270\330\273*X\026\274\202\0027=\226\316*=\234\306\311\274\357f\333\274\313\200\026<P\341^\274V\225\026=\326\230\267;\256H\313\274\211h\004\275\361eM=\232a\313;\207\246N\275\004\313D\275\3220!\275a\246\370\274\rF\257\273\330\202B\275\332\027+\275WY\353\274\353\252\372<\360\350\373<\003\3120=\236\t0\274\360\315\005\273:\245>=#\305\020\275=\223\020=\226S\262<\341\306\037<c\325#\275\354\275\321\274?5\345\271\311\220\314\274\266C+\275\245@\302\274\334\346\306;\272n\014=\264\264\030<\256\000&=:k\337<\375_\200\274g>\031=\016\240\337\273w\n$<\274\341\003=\235ES\275s\301\353\273I\360o<\261+\020=\320\003\027=\242K\265\273\r\345\215\273\345\262\032=\350\205\255:\021w\211\274\324\225*=/\003\216\274\303M\032=LDD<\250\3038\275\226j\254<!\356\323;\023\234\270<R\354\207<\342\210\007\2751l+\275\177Bf\274\335\2432\275\027\230\026\275l\021\223;3\343\307\274\235%\260;v\024(\275\347mX\274\023\202\220\274R\222\336\273\202~\256\274\002c\225\274\237\323v\273\226x(=XdR\275|]\207;\271k\351\274\036\026\036\275AO\025<\225\217\305\274\022\305\231;<\344\263<\231\364\263;E\335\353<\260\337\021\275{\244\300;@\364\375\273\313\017\007=\264\256\342\274\243\203\345;\244n3={Y\036=\032*W=G\245k\274\240\362\037\274l\230J=\267\004\274<\235\371\000=\341\250\365\274m\013\035=\213\231\022\274u\306\002=y\256\240;\336\031\320\274\017\343Q\274\343\326\305\274-\006\327;\253\212\254\273\312e\005\275%\211\332\274\010\215j\274FcC=}\035\361\274<TI\275\006\333O\275_\262\033\275\310\177\002\275T@5<H*C=J|c\274\370\261\344<N\0378\275g\013\031\274a\222p\274\033\217$\275\211>\031=\372\206H;\031\253\016\275-\247\263\274\326(\244<\372\\\001=\035\352r\274\232\300\001\2753\257T\275\313\253\002=\013Gk<\277\216E\275\241\373\212;\275\206\003\275\367M\266\273\373\262\366\273\345\337Q\275\021\202R\274{\375C<%\3569\275!\314x\274\003\217\256\274\375/\246;\260\362\231\274i\240\007\2753\370\200<\006\210 =!8\262\273\251 \376\274\303\356*\275G\332\313:\025(\220<[\253\330\274\336\326\013=\261_\025=\374\2619\275Z(\037=w\252l<\027P\002\275\0166F=\021iT\274!\3648<w;L\275\337\'?=\tC@=\360\211\000=\231O)=<\234P\275\331\030\323<\224\367\345\273\346\0031=5\315t\272\033\202\326\274\237fN=\2168\356<\262\345\312\274-\323\276\274\363\324\007\275S5!=\016\253\016\275E\205\311<XV\006=\313\226.=4\215@=|\310\375;\316\344\320\274\230\n\373\274m\2625=A\202\010<\242\2460\275U\r\247\274#{B\275\251q\016\275\211\035@<\321;W<\210\006\026=\234\215\314:\306`F=\315X6\271\335\356U\275\300\343K\275F<<\275\324h\247\273j\334\262<|+L= \322\202<\220\352M\275\363\275\224\274\004\331\t\275\264\347\216<\313\312\326\274\255\207\246<\325p-\275\2136<\275\354\276\037=\237\207\234\274\004\371\020\275\374\210\241\273elr\274\'\353\327\274\216y{;\244\377\261<\241$\007\275\332`8=\310\230\205<\247\027\221\274\325\254\350\274\t\016\354<8\272\023=\255\262\t<\244^\010\274vf>\274\275\376M;\341;\"=!d\315<pj\261;\322\320\226;\224{\350\274%\355w<`\262\267<\305UD\275=\2540=Tu \275XS,=M\374\333\273\020\257@\274vk%;Uz\023\275D\310\013\274\312\306\246\272\312\024\020\275+\277\364\274\327]\037\274\355\\,=\307[6\275w\036\036<\235\343\306\274\000\014(=A\205T\275\236\177\216\273K\005\276\274\202\365\273\274\354\3732\275\332^\362\274\201\320\275\274\'\227\n=EeU=\351\225\324;b_w<H\237?=\032-\215;n\\1\2759;p<o\237\034\275\35454\275\303W\004\275p\001\203\274\361\345U=N\022i\274\345\324R\275\214\321@\274\262\363\200<\325Y\350\273\231\366\352<\217<\252\274\314\267-\275\2222\365:{\031T\275\010\261T\275H\265V\275lXt<\230R\021=3\217\024\275B\356\251\274\0035\367;7\037\312<\326m\340<!2\017<{\216\225\274>C)=\311\323b<\357ZG\273\"\222\352\274Hi,\275u\344\344:\314P\031\274\373\373,=\374\211H\274|K\021<T\262g<E3\376<%\277Z<\026Md\274\214\363@=\311\020\307<r\3161\275\265\325\272<l@>:\244\202\030\272D\372,;\336 S\275\032r\223\2746\365\006\275\243\r1\273\370l\213;\374V\251\273\325\035\322<\315Q\225<\244\010#=\364z\327:q\246S=\255\350\241\273fr\235<\356\024\324<U\2403\275\315\026T\275&\211\325\274\234zR=Qx,=m\335K=\227\001)=\266\177\221\274\221\307z\274\243)\025=\221o\r=\010w\016\275\032\026\342\274\227\353\017\274\231\027\034\275\206\030\225\274V\267B\275l\303\222<\343G\260<\216\371P\275\224\000\202<r\007\025\274u\355)=\321\320<\273\276\354\366<\307X\003=\353\336)\274{>Y:\243\266\n\274K\370.\275c\246\323\273c\275G=9\276\310\274RpN\274h3\274\274\266h:\275\377\315%=/\357,=\330Q\001\275m\331P=\334\010\037=\250\021\361\273\032f\213<P\362#\274-\323\025\275)\034\267<gl\246\274\005\034\205\273>2\324\273\037-\327<j\035\335\274\244\267g<\341\2336=\250wF\275b\224+\275\250\0134\275\302\276\t\275\272\026@\274<P+\275\323\301[<\0229f<\213\357\031=O/\205\274`\262G\275\007A\203\274\226\267\371\274.7\023=\035Rn\2747\264\235\274\364A@\275\377\334\233<-\033\220\274\232\217m\273\250I\210\274\351\020\020=\201\376\304\274\235\351\'\275\331\363\315<Y{$=\257\\9\275\224\250\006\275\226\\\030\275\272\021I=\363X\000\275\237^\023=\367\017\002;\366gv<\254 $\2745+Q\275\262\305 \2756\"\211\274\305\373\020=e\371E\275/G(\274\275\347\004\275\200p\030\275u[%\275\312\265\022\275\251\2458\275G\276\3239\"hG=\035\360\r<}S>=\214q\003\275pk\254\273\022I\036=8\267T<\302\265Q=\342w\017\275\333\237\262\274 \340\221\274\276\362}<~7&\274,\355\306<\360=F<z\n\250\273\207\310\004\274\rA\263\274j\217\206\274\020\316\306<\240\003\036\275rd\004<\3256\212\274X\223V=\334_\376;T\016.=\230@+=\\\335\372\274\037)U\275\024\237N\275\022\342\375<J*\203\272\\\263?\275o\353\022=(#\344\273ttF<Er\315<\311I\377<C\260\224\273\256N>\275\2402[<\212o\374<\266\323R=y\215 \275*\256\017\275l\247\261\273\202I\313<\223\3166\275\025\260\356<\032].=\202g\354<X\240J=\022u,\275\203\274\377<\355\203\340<S\220\334<\327\250\021=1,\347<\231\0136\275O\005\000=.\340\342<\230\312\337\274\253~\312\272m@)=z\274B=\276\360(\274\203\371\215<\375\004\"=\275\242;=r\037\326\274\255\277K\275]\372\032\275%y\271;\037Q\253\274\311bi<\005\271\236\274\227\340\t\274\211\034\305<\346\330\320<\274\"\002:e)0=\251\"\253<%\230\322<\2635\023\275; \344\274\244\033|\271\3057\354<t\256\021={\215\302\274\t\245\252\274_\234#=\353n5=\273O\021=lu\255<\212\r\307\274\025;\310\274\002\364\027\275\245\001\332<\324<\351\274\262\2516=\203q\025\274\227!\370\274^\245&=\227[!=\262\313\210\274P\375@<r\260\352\274\204\003\252<\335A\377<$\251\220\274@\212\317<\366\362\216<\247v\240<v\303\321\274@\3062\274#e\217\274\267\253k<\341`\235\274\333<4=(\257H=\026\373U\275\346zj<l&\002\275\0312==q\213<=\n\202\331\274}\007\246<-\231\315\274\323M\026\275\270l\254<\270\010\276\274\336#H=M\307\265\274[\304<=R\224>\275\352\357\021=2d@\274\027Q\013<\003\030\274<\207@=\275\357{\022\2751\037\002\274\350\014\000;\010\177Q=R\004\r\275;\375\020\275\227\252\202;\363\3411=\314\026\362<\364*\266;u\200\314;@\337\n\275\212\223\342;\255\325\023=?\330L=u\036\335;\275aH\274<\2706=\340DC\275\323\026\221\274=\224\257\274\303\267$\275\002q\220\2739\255\354\274\260\316\013=u#\027=:\325\\;\206LW<\350:\243\274\361;P=\376\240\014\275\375\007\327;\241\013%=\n\022/=,#\010\275\322\006\311\274\005\347>\274\030`L;\3143Q\275\275\264\353<\035\326X<1\017P\275g\256\033=\253\377\r<\375\032D=V\340\203<\365\355\037\275\222\004O\275\256k\227<1\376\036\275\311$ \275]\357\2239\0069;=\337\3442<\354\017\004=\315}\034\275\267\336\036\275\261\356g<\241M\337<\342\240S<\r\303)\2750\\\036\274\310\267G\275\300\300C\274\237\260\316<Kw\330\274\340\033\022\275<f\340<\241\376l\274B\222\006=\026>I=\304&3\274\274\261\236<\316;\350<F\3453\275,G#=\016L\220;\317D\213<\001\0107<X\301\313\274&\230U\275\1775-\274\265\242Z<`\0233=\355\\\037\2751\350\253<F\236\245<\260\235\343\272\313a\025\275K\2057\275&\3736=|AI\274YR\021\274\3052?\275\371R4\275\\K\236\271}\334u<j\2078\275@\234!=\377H|\274\006\244\n\274\266\\\337<\0243\231<^\235\305;!\020\027\273+85\275\334\376\017\275\366z\371<\277\177\003=(\210\272:*\t\031\273\342\2342\275I\331\212\274P\363\255<\241\220\005\274S\305\005=\304g\254\273\201B\372<\307\216C=\365&P=#s\221:\352\247\003=C\n-9\220F\260\274\334\34079\330\360C\275\021#\272\274\302\367\311;\353\255\017\2759\263%<\256\316\t=\316\323 =;\300<\275\302\244\264\273X1\364\274\334H\202\272h\030R<\n\2562\275Z\221\353<\254)\007\275\346I\202\274\203\203\003=\276-\307<\004\241\003\275\321\224\260\274\372H\335<P\263\'\2758\226\001\275.\211Q<\260\253\346\274% _<h\n\036\2758\324\271\273\303\274!\273\216\367\231\273:\021*;\223-\033\275v\260H<\253\341\225<o\021|\273\0165\007=u\005\034\273>\276\001\275Ol\372<\030\230\232<\357D\216<\362\274\271<\220r\251\274b\006\315\274>\237\267;\\\306\323\274\033Q9\274q\024\336\274\214\214t\274\223\352~;\3653\301<{\260R=\3447\367<\327\211\275<\217$\337\274i\311H=\237\227\313\274\342\212!<\345.d\2741\2026=\364\250\235\2749*\320<\211\306\200<\0074\253\273)_\323<\351\265\334\274\340\000\035\275\312\244\214\274\036/\337\274\300ys<\037d\356<c\353\251<l\362\255\274\263\212\242<L^\035\272\357\201\222\271mR\360<\004t\366<\347qJ\275E\273\207\274\350\232\373\274\002\020\227\274h?\377<\224\220\010<{\256~;a\014\037\275\376/\274\274\315]\302\274\210\025\004=\324,\311;\320\310V\275\344\220\002=D\323\251\274\376\263V\275\035~L=\'v\215\274E\360(\275/%\265\274\346\034\267\272\030\351\322<O\007\215<g`0=O.\205<b@\363\274\372\t\364;q\376\346;\004p\336<\354H$=\246\025G\275\000\270\304<\025Y\003\275-&9\275\341\242\016=:\362\277;\253\223\346\274\334\216\315;\300`\367<\014g;=#\217\204\274!\333\375\273\021\250\270\274Ls\005=jA\006=\206!\317\274~\271\004\275A\301c;N\030\325\274\346B3=\t]!<\256\216N\274\370\340\005\275\014\214\"\273\345,\322\274\234\264\205\271\024\333L=\260\000\025\274\txf<D\333\010\2758\330\t\275\342\336\013\275\002\260L\275\312\\\357<\032\024\263<(=1=Q\t\333<t\257\204<\247\243D\275\240\327\210;?m\003\275Oy+<H\335@=~tF\275\'\255\345\274\230.2\275\3766<=\r\364\330<bn\301<\265\036\377<\310\275\216\274F\025,=\205\314\326<`\360\035\275\253\000\312<\213\3228=\253\362S<\n\202k\274\341\352\314<\212c\014<D\312\014;?\371\351;\325C\002=\335n\331<\227\307/\275\214\017\377;\234\250E=\227\'\301\274y\303\211<U\376\306\274\210TM\275\024\347\357\274\325|\266<\356l\321:\257\314U<.G1\275\030\333.\275\334\230\203\274\203I\311<\325\204\377\274\177HV\275N\030\367\274:1f;R+\356<\233~\025\274\230iW\275\035r\231:]S\037=nd\240\274gj:\275S\013\307<F\312\024<\222W7<\025\274Q=-\262\025\275J\361\002\275\321(G\275\023]:=:\036 <\343V\202<\251_\372<\375U:\2756\2030=X\331\354\274\2660\007=\020\360>=\025\000\205;*;\017\274OR~\274\341\325,=\033\267\373\274&0x<hn;\275ns\004\275\034<H=\215+\r\275v6\312\274\350\205Q;\256\267\276\274%1\262;:\262\027<\335\246\342\274\266\010\311<X\3412=\007\353\236;\350\326:=\275k9\275\351zA\275\005\0169=\213\260s<7c\352\274TSF;\032\207\256\273\267\317\023=\352~\350;\266m\027\275=X\326\273\232+\036=W\0374\275\030\304C\275\345=1\275\323v.:+\365x<\023\224\307:\323\223L=&\377c<\356\365\005<\2439\240\273^Iu<?b9\275\353,\222\274\263`\334\273\020\"\006\275l\362\333\2747N\023\275\333V\272<\002\010\000=>\312\021=s\300\310<f\t\035<\237\200d\274\271\356\367;\210|\343\273\034\261\021<|\314:\275\356W\006;\367,w\274R\225\331;W\220\274\2747\367P\275I\365u\274\367\353C=\206>\026=D\017,\275\033G\305:\005:\262;\026R\351<5X\336\274\r\232!=\277\223N\275\354\310\363\274\325C<\275d\304\030=\333\263\023<\373+\313\274T\337 =\217\315\033\274\314\nC\275\250\234\300\273\342\"*=Y\265\316<\360\206@\275k\'\235\274\305\343\227\274\276\361\220<]9\035=|(\370\274\377 &\275\332\265\036\275 0\224\274`60\275\270f\237\274\215\245\231\271k\375\'<\334o(\273\002B%\275\362K\314<\301\250\366<\347\232I=e\245\022\275\226O+=\340\221A\275\220a\034\275\036\006I=\332d0\275\253\337T=\252,#<J\310\346<JS\307;\r\311\337<\326\212\355\274\311\322\334\273^\257\035\275>\177\010\275\304\374$\275W\345C\275\265\372%<\245\037\353<\023\034\004=\342\341\325;\004\222\201<\314\230\235:\342IF\275\364\232q<\2244\253<\271\000\032=\367\320+=ESC=\333\"\353\274X\237?\274\202b\221\274\001Q\357<\3614#=\267^\"=Y\205\227<\240\225&\273\267\031\022\275w\r\355\274\353\213\026=\356c\313<\253\355)\275\272Z\371<\306\202G\275\225\225\207<1\023\002\275\277j4=\305<(\275 50<EF\232<\347\307\243<<\321z<W\210\224\274\304\241N=L\215\217\274z\270\n=\003\362S=\361\014)=A7/\275\370OZ<\260hn;\035\370\235<+\033\376;\303\202\207<\322V\023=\321X>\275\252\"\275<[\3266=\033\307\032\275F\022D\275\323C\023=\001\364\"=\315\001?=*\335\271<\223\300\371\273q\317+=\014\177\r\275\350W1\274\n\232\224\273\343\354\203\274\004v9=\370\302\340<\016\253L;\243m\214\274\245\303+<\370\200\036=\334\003]9\251\313\024=//\257<\264\0019\271Q;\315\274R\327==\003\306\330\274\210\323\347\274\360D\217\274\310\345Q\275\r\222)\275\215I\007=\303\032?<\336\246\360<\274\273E\275\315T\214\273\362\364\n\275^\\\262<0\312\256<{\2774\275\2308,\275\204\006\247< \335~\274\177\230\264<\372\317\251<\312D\230<k\315\014=\204\341\365\274\317\225\354\274\326A\001=\210\260\302<,\332a\274)u\215\274\225\203\261\274,\251|<\n\320N\273\324\235M\275\r\205\227\272+\033W\274\260\"\336;ov\273;\236\"Q\275\246\002C\275X\022\223\274c\344\221<\232\357*\275\212>\210<\363y\001=\201\337\345\274n\226\332\274\362l\007=576\274)2\370<s\214\265<\327\036=\275#\360\371\271\362y:<\004<#\275\3221\003=\016\3141\275\036\254\345<\261\316e\274\032\234<=\311\210\215<(\214m\274\321\263\237<C\027\221;\355-\317<\314\222\000<N\340\'=\317|\r=\3109\250<2,\314\274\261\376\245\274\360\273v:B\261\323\274)\r\241<\252z\022=\330p\230\274B\344-\275)\323\230<\003B\014=\312.\372<\216AT\275;[[:\276Z\037\275hAl\274\341\020$\275\002-\014=\361b:<\227\254\017=1<\370<\025#\265\274\031\3218=\330\3624=\037\205\276\273k\243\274\273+\022\001\275\020W\360\274\230J\205\274\035\353v</\0105=I\263\013<5;\251<\3051\326<L\372T<\271t!\275h4\337\272\221A;\275\221\t\n\274(\303&\275\240\232.<\327d3=!sY<f\254\246\274la\010=\341o\307<\360\005\003\275r=\253\274*g?\275\342\242\257;\336\017\002\275\344\330\223\274\261\365\036\274gsX<\261\324\'\275tc\034=\\\302\240<\264\376\360\274\373\216\014\275\006\254\"\274\274X\000\274\003\312&=\267&?\275}~D\275\235\312P=\372\314\'\275H_\225\274\331I\202<~\357\326<\177\355(\275\326B8\274\032\374\376\273-\3332\275\352\370\303<\006\2061\273\202\322\342<\003\177\222<qb+\275\354 \021\274%\360\265<%9\226<5h\223<\262\236h<*a\033\275/\031==\347\')\275\355\2561=Ii\253<\352\337\251;\"\361c:\230\005\024\275\357\360O\2756HV<\240aK\274SC\034:8\027G\275Sv\025=\255\350(\275\201\377J=\017\242\327\274q\027L=\010\305\220<2W\371\274\315\372\241<\226\273-=~e\020=pYS=l\253b\272[\234\006;\253\371@\275\274zK\275W\2451:\010!\255\273\232\254a\274\027s\376<\024r\212\274UH\220\274\327\265\343\274\375\303\371<)x\002\275\tr\024=u\001\034\275\177\225\033=1I<=\267\334\026=i\021f\274\355H\346<\3016/=\037\214\277\274\211\207!=P\013_\274\257^\245\274\210\025\230\274z\216|<\213\007U\272\205\342U=\0250c\274\213\266#=N\347\231\273\267\006U=K\nT\274(\017:\273\004\346\357<\023\342T<\353)V\275\256!:=\206\221\272<\r\363\031\275\014\330\024\275\252n\013;A\274(=@b\017<\227\235-=\346\\\207\274\311;0\275\215\307\240\274\323T\324<\030X\000;l\352\035\274\361\326\326<\2168@\275\335W\000\275nq)=\r\266\220<,:p\273\024\2150=A\332K\275\3054;\2753\212L\275,&\222\274Z\0256\275\030}\r\275k\t \274y\235/\275S\276\303<\351\'\022\275\030z_;\224H\257\274\261\352\033\274\356\"D\275\376\374P=Cr\036\275\"\334\233<8\337\364\274Tb\335\274Z\323\231\274\271\315\342\274\330\027\303<\253\3051=\320@\033\274\334\305&\275=\030\371\274\231\267\001=yK\205<\371\365\300\273_\342\326<4\322\317\274\202\373\n=\202\240=<bP\352;lx+\275*\207,\274%bQ=\226y\237\274\367\330\310;\346\316\035=\265\022~\274n\\\316<G\3427\274\236\300\034=P\2625\274\351`\024=\237\207#<uXY\274\342\357P=\232L\267\274\375\355K<\205KO\273\034\336\007\275\026\325}<lf1=K\347\333;gU\001\275P\033\000=x\2569\274\341z\023=\342[\353\274\227\275\021\275t\264R\275b\3424;q\335#\274k\314 \275\237\374\214\274\026(\335\274;T\210<\235\262P\275\022P\010=\034.E\274\3252\346<\364\322\355;\000\020\243<\221\031\002;-\3221<\022\271\375\274\242\014k<\204\374\243;\260\352A=\027\345\256:\263\323\226\274\333*S=\346\367\020\275]q\274\273\301\033L\275B2\302<\261\035Z\274$\350\375\274\300\263 \274HT\';\031\017D<X9J\275\301J\t\275\214;b<\243\022\036<\235\t\031=\256\244/<\232E\323<\275f\326\274Kp:<\343\214\277\274\342-:\275G\301Q\275\323\222<=\343\375J\273\314\000\331<\212D\002\275\264\027\275<\235y\217<D\243Q=J\270\r\274\024\273\215\274\265\210\010\275Ji\252;z0\2727}\232\225\274\010\236D\275\266h(= \313\001=\241\210\027\271u\325\027<\307\236P\274&\227M\274Q\367\306<2\023\375<\017:B=M\013\207<\247PR<\331\210\322\273\240\247\177\274\225\010\027=U\251\016\275\254D\225\273H\235\211;KP)\275\336@\016=\001\200U=\032\3046\274\203\354\276\274o\000D\274z?\313;\364\341\241;\365\304\035\275\302\275#\275\312\212.\275\204\207\343<\1771:\275\030\014\246\274\342\301\326\274N\332K\275\010\260H\275\274n\t=Z_H\275\321\343U=\235\253T=\333\244\036=\221\303-\275\265\'==h\352>=\210\335\260\274Q\307!=\256\346.=\350\327\365<\260GJ\275\344\326/=\326\t\3529\277\226y\274\'`\'=\365\321\275<\260\2325:I\334\357\272[\230\245<\307*\331\273\n\241+\275\355\266b<\257\003\316\274\252.N<\204\177/=\253^S=\003\321\317\274\027,\022\275@\023\035=\216)\317;\370\247\332\274\023Z4\275\241v\246;\014\237\312\273\265\323\305<\231\343\325\274\316\374P\275\334,&=\034\3400=\007\347\377<-sW:\306E\003\275\230\256\002;?\271&\275\266\026\263\273\277\333\362\273\256\222\273\273\361\371\r\275\250\325\001=\350,\034\275\240u\347<\027\301B\274]z\216\274\272\2754=\314*\003\275\027\353\000=\350W\223\274\353d\034=\264J\272<\330v\031\275\"g\315;\307\r\324\274\356\346.=\344\361\317;\354\273\207<\375G\005\2748\303\317\273~\232\242\274\357j =R\2617\275\350:\016\275>\276\361<\022\220\365\2730\353P\275\357\325\254\274s\336 \275\007\257\374\272:\217(\273\265cJ\274\345MH\274\005\270\033<#\221/<j\330#=\263\342\005\275\232\277\363;Z0\236<\007\374E\275\263DN=\023/\220<?\034%\274\211\302=\274\247E\023=\324\377.=\250\312\345<,\2667\275\302=T=}\333\030=I\327j\274F\016\214\274\206\n\024\275\037\266\254\274%\2154<\340\266\006=:\017\306\274\356\270\250<l\014A\275\362\033K\275\212\343\247<\252x\036\275\275g\006=d\025K\275)\024-<\3758\324\274c>P\275{\267z<\272\223\240<w\314R<\332=\270\274C\377;<\'\274\016=\304\251I=\273\274\370\274\260=\301\271\005M\036\275\326\202O\274\206\262T\275\362\3247\275\352\262\260<=]:=\377\000\010\275\021\310\n\275\260\3678=:\344:\275\020\373\014=OI\032\274@|\251<hc\t<&\263I=\263\345(=\303\036\001=\351@!=h/W\275\236W\275\274\207\210I\275r\307\035=\014\337\213<\203\314\357\274\344\315\220\274c\211\030\275{\253\273<\335\3370\275}\373\'=\213\3512=\332\375\360\274l8&\274\3039\027=2Q\300<\356\323a;`\334G\274{\370 =/\022\253\274\223\322\215;\236\334\031=\302\264H=\353QB\275\001\t1=\274\315\024\274\014`\351\274n@\023=\2042\251<\321\007\323\274\364X\366\2749\233\233\274?B\344\274\"\304\246<\301c\000=Q\344\371<9\335L\275[5\245<\225\337\357\273\037\235\005=g\250\235\274d\263\366<\261\300\266\274p\233E\275\373Z\316\274y\272S=\356\312\034\275{\031&=z]k\273U7\222\274q\274\242\274\270]\013\27502b\274\310\345\017=f\252\273<\203(5=\2022\2129BtK;\201\235S=o\352!\275\276\017\026\275&\014\351;\215\210\224;\234\211,=ut\'\275R\204;=\237q\225\273\'p3\275p1\376<\350\257P=\277&\370\274\317\313\'\274PC\034<\215\025&=\232\211\351\274\220\224\000<b\252\022\275\357\034~;|\0078\275}q\334\274\243U\350<\\:\357<\271\010\257<G\232\301<\325\245\316<\265C\325<\273>\206\274\211\232\373\274\232\331D=g\264\304\274X6\206\274\003N-<\362\007\313\274e\344\341;\034\207Y\273\003q\250<\224L\351\274U\302\272<\226\220d\274TC\277<\200\227\036<\364\3078\275\217\342==V\212(= \0275=2\371\227\2747\276P\275{\340\n<8\031\356<X\336\033\275\010}\343\274\235\351.<\000\006\246\2714.d<\223M9=\206^\255;\326\367\220<J#C=\261h\262\274\265>(=\201\036J=\020\245\002;@!5<\241o>=\216\361\032\275\273\002\271;\010\266\016\274\345\305 \275\002\231\362:\260\243r\274\343T\r=\273\220\320;|\010\361<\241\353\263<m\000B=\016y\001\275\362G\333<\211\266\350\274\177!W\275\275\250?\275\355\277\231<\373\252:\275\233\001G=0>\345;{\322*\275\237\303\030=\343\207I\274\205B\024\274V/\354\274\227\363\344\274\014Q\"\275\342@\365<H|>\275\217\321\261\274\310\033\034\272\n\3638;\004\370\237\273\032\204\374<}\265\010\273\031\233B\275\365\337\256\274\225\323\027\274\255\331\002;\371!\025=\215\177l\274\243^\374<~S\020\275\030\216\373<\237\200\201<\322?\263\274\321\000\027<\305\226<=\034\343\036=-\271A=,\327j<\260\301U=&Zw\274b\220\"=9\323\264\274\357w\033=\265y\220\274\030t\270\273\336\265\226\274\217/\234<\246\356V=U\271\024\275\n\220\005<JH\374<HU\010\275\310\271L\275\362\212\027\274;\2263\275+F#=\304\246\010=\337;S\275\336;\000\274 )G\275\316\250\255;\252B\032\275d\213F\275\272\364A\274M\300\212<]\301m\274\252K\n\275\214\211-=V\003\014\274P\250\371<e\372\242\273\033)\023=\227$\206\274\377\307\202;\3534!<\251\356\314\274\237cE=\221\353-\275>\303j\273\251\337\010\274\222._\274hh-\275\271M\320<\330\300\r=\246\2462=\263\314\004=\001\353H=\263\323\r=\213\222\243\2743];\275\310u\205<\245\0021=\0240\013=\022\324J\275\037!\022\275e-1\275W\276\260\274\367\377\325\274\260\237\332<\354c\211\273<\374\271\274\371PO=\246M\354\272\263p<\275}I\374;\361\214[<n\275\350\274\227\245:\275 f\n=\257\223\303\274U=*=\342o\016\274\220\336\333;cB\305<\261\233\365\274w\250J=\025\022:<Xo\212\274E\020\323<]\350A<`C\314<\251J>=o{#\275\271\234\240\273L2\\\272\023:\235;\275\267\313\274\301,\241\274P/\030=G\253\363\274\203>\330<\257\365\242<.\235K\275\322\260~\273\374\256\014\275Y\277\027=\315\260\006=\270\304\333\274l\021H<\t\333\252\274\230Wp\274\020\265b\273\003\302I=?OF\275\202\023\024\274Z\211\210\274S,J=\213\250\206<\273\353\206<\351\\\251<+R\330\274s\003\036;\017\342\313\274\322\023\332;\037\360i\274\246\360\003=V\022\262<\305U\002\274\207C\314<\245\275$\275~\0339\275U\004q\274\312\366\005\275\274\036\002\274>\372D=B.\233\274\345\032A\275\234\251@=\226\261\034<K\025>=\024hq\274\365P\262\274\352\236H=h\203D\275y\001\373\273Y}\255\274>\0271=\222|;=8\212G=\014`B\275=\332/\275\270N\036<\307\375\335<\225$\273\274\371\023\3039\267\340+<\366\355;=\217m\037\275\355v\371\274\213\334\207<\242\034\211\2745\n2\275\331@\002\275+E(\275ZD\004\275\237\264T=\365:\014\274\2702\335\274L1\366\274O\300Z\274\264\\\311<\274\370*=\277\252\342\2746\222D\273\377O(;C\256\354\273%\351\355\274\254\312\262<}3\225<\007\304z<\021x\300\274>\300\307\274\243.\241\274,C*=P\025O\275\262\372i;\031\215 \271ko\311\273\031\033\320\274\236\322\"\275\326\"$\274cI8\275\272\341&<_L\231<$)\024=e\375(=\304(O\275D7\004=\201E\026\275rF#\275\336\362\237\273\3624\010=\321\005\222;7\202\352\274|o\231<\326S\227<\231\0351\274\347\232\'\275\257\000\275\274\311\014\231<\'\323\001=g2G=\006\2536\275\200\213\017=\312F\"=!8\022\275\315\3473\275\274\255\005=\213\306\277\274O\003l;\276\301\317\274\363\313\300\274r\010\251<d\324\246\274\371\024\266\272J\346\036\275Yx\215<\024C\357<\310^D\275\312(1\274_\034\213\274\255\271\376\274E\336m<\273G!\274)QS=\354\366\226<\177)\273\274.\036\226<\337\330\000<\330\247\362<\242s\027=\\U\336<E\033(\275\266 \355<\014\253O=\0061G=\353Im<\344\304+=\214\014\312<\337\303\354\274\315\317\006=\025\225o\274\230\3746<\352\3707\274\340I+\272\276B\275;\342\300\022\275\021\2248\275\\/F=G\300\013<\244w\210<L\340f\274F\344\273<\250\241A=\366\331\306\274\\\307\252<.\212\245\274Jk\211<\007J\207\274\225\005\005\274\300\2418=\313\346\022=\222\334^:%\206+\2747Y\256\274\rS\031\275\235\231\003=\037zF\275\334E\233<\340\240\032<\023\257\335\2745\327\000=\315l^;Q\013\314\274\373\017\301\274*tK\2752\301\020\275\025e5=\000\212\034\275](\333;\264\367\t\275\025\303#\274b\236Y;\202\257\r\275\336Y\346<n\200\272;\370\214\023=\245\304o\274~?\201<\013\225z\2741\253\341<?e==\203ZL\275\354\300\322<\004\340\354<%\276\270<\366\331O=v\373\355\274c_\177<\377\241\206\274#0\316<\320\014\253<\177\275\024<\233\336\031=\037L\021=e\326y\274\327r\010\275@\307B=\027bH\275\017m\020\275\313\324,\275\257\362\314<v\021\205\274\317\341\364<\223\003\335\274:\202\246:5^-=<I\250<\357\2359\274\257\257\356\267.\3643\275\273\n\003\274\022\306\266\273\257\245\221:7j\247\274\253l\312\274\315\232\036=\r\216\221\273\241\004!=\010\346*=\344\2455\275\230<\035\275\003\nS<=\tT=u\257\366\274}I\023=6}\355;9\027\346<C\345\252\274\t\177\376\273y\235\'=1\367\002<\005\244,=]G\017\275\373\307\264\270,M\026<\211 1\275\364Y\n=\357\270\326\273R\312&=H+\221\274Hg\334<\234\244V=\244\025\310<2\345\027\273\3109\024;\263\260o\273\306\024D=\342gI\2758\332V=!\202\020\273\273\344T=\210\242\325;+\274h\274 \336\001=#G7=\252O\020\275\266\347\r\274\300i\032=\203\232\350\274\304A/=\324\020O\274\372\272\032=\t\313r;O\356C\274\307\373P:\021w\270\272t\035\220<<rI\274B#\371\274\343\030\203<\356\246J=&\017h\274\213%\276<<\223V=\37717=\217!\342\272\362\364\352\274\202n\001=U\321\335;\251\200E=)\002P<\026{&\275\270\273\327\274{3\326<\220P\245\274\21670=[=A=\231\007\344\273\371\325\362\273c~\032=O\306\230<\017O=\275\270Ac\274\230\'\374\274\244\205\333<\334N\233;6\2708\274P\nS=O\276\365\274n,\314\2742\264\342;\270* \275\3703)=\351\236&=x!\314\274\240\242\353\274\211\373\330\274\266\231\320<\337u#\273\255B\346;hP\030=\345\201!\275\022\235\000\275\227%\035=(\3539=D\340\000=\262\022\377\274\277x\203<\302P#=\341Vs\274i\'\002\275\205\364V=#\330\016=.{\000\275\rGR\275M\263\001<\271\207\016=\342\211@=\277n\037=\265\276\313<\314T\346<;\372\352<h\311\010=`\017\354\274P\210\252<\026\350$=r\237\241\274\225(\334\273K\3723\275\257\201\257<\204\340\200\274<\264\341<\376m\222\274\231\267\252\274\005/W<}\264\262<\211#\302<\232\366@=\020G\356\272\333^(\275\356Q\036\275@\362\222<\227\267\253<\312\250==\3271\314\273`]C<\377xC\274\355\253\325\274\007v.<\242\240\214\274@L\277\273\261g\232\273\2127\001;\002wh<\326\236P;\220\353W<\365\340%\274(\\;=\272\266\363\274\237\302C=lP\224\274ho\264\274\371\\&\275u\267P;\365\020\320<\254\320/\275#\n\000\275\215\221Z\273\030z\377<\212\030\316\274M\354\264<D\257\205\274\344\257\212\274\301\232\326\273\213\323$\275\007:\345\274\235|m\274G[\373<J\'-\275\235\177.\274p\323\242\274\242^\341\274K\240\322<\222@\264<\371U\331<6|\346\274*\200H\275Z\2075\275\311Q\357\274\334h]\274?V\226\274\352\226\027=\200\247\325<\224{\'\275\306\016@=\331\031\345\274\303\266@=\333\235K\275\214{\211<w\217\006=\234\272\332<A\311\032=\312m\t\274Q\247\334<\266hq<.S]<P\243)<,p\321;\025~T=\351\377G\274\370*\364\274\231\010\016\275\230|\356\274\322\\\343;\215\243\026=\270\022\221<\244\014\265<\"\225<=V\343\360\274\266P\037\275\251\345\205:E\341\\<\177\000,\275KDP<\257n\324;\2527&\275\326\2168=\213O\206\273k\360\225\274\014\016O<\334{\026\275 \332\003=\371\220\017\275\030\3727=(\214\177;\n\001\023<\233\"\010\275\237\376\317;%\022\351<M\003\230\274:\276{9\235PM=\032e\325<b P=J^\226\274\003\351t<tA\236<\033m1\275|\025\254;\272\367\244;\325\257\350\274]\222D\273ADJ=\256\245\215<\363f\377<pA9=o\262\247<P\244\335\274W\351\006=\0043\001<\252\337\203\272y>L\274Drc\273\311\241\030=\366\271\275<\031\001\330\274\303t\320<\034\2440=\030\244)\275Vs\220\2748\211\010\2752m\305;\270\017\n\275\242\002\311\274\353\204\333\274W/\323\273b\304\230<F\024\001\275\360E?\274Z\300\325\274\255\007\327\273\351\331\203<\275L\370\273\345:\013<\225\375\"\275\010\243\033\275\356\255\213:U\252\007\275D\370\024<+.\025=\261Vo\274\217k\022<\257\205\000\274\037\303\020\275\007\275K=y\3411<\260\236V\275s\\0\275\256\207%=\204,\006\275o)\360\273\002b\035:\262\220y<\213\210J<Ed&<\002\007\255<te2\275!\273\233\2745\024\374<aX6\275\267P!\275\205\3251=\342^4=D!\016=\237\3206\275\200\336\007=J3\030<\263z\265<\037v\365<\024\375T\273I\2140=y\351$\275\370\216\"=\244\205\035\275\020\226V\275\3770\326<DjN=a\255\275\274$\377F\275\226F\201<\000h\331\274N\265$<\243\317\035\275\313S2\275V\257%\275\ts\205\274%\021P\275V\361/\273_\322s;\224+7=\007\333\363\274$\231#\275\360 \276<\277\006\367\274\333\2719\275y\307\361<\0162\306\272\3464\306\274\200\345\324\273\250\250F\275y\3557\275h\232\276\274\326\216\023\275_\3613=\213a \275#\027]\274\26641=K\355d\273\367\200T=\321\025C=\322+%<\251\306S\273\263u\362<JJ\004\275h\350U\275\201\262M\275\246GL=5\237\003<\350\022\000\275B\002\362\274\372.\025=\027)E\2756\235\007=nk@\275\355q\020\275,\013>=\245\375`<\257;Q=\302\351p\273\000*H<C\005^<\213\324\313\274\276\211\'=\'\240==\'^\264<\331\t\263<\010\246\035\275;.\034=r\211\204\274\215z\336\274(\210@\275,q5\274;\246\036<\372\273\365<j57=\3620\306<t+\257;\323~\006=\316Y\310\274y\350\351<\177\201\246\274\332\022\371\274b@\333\272>\302K<\221\327\270<\336\345s\274\323\303&\275\272i\034=\365\356$;K\242\323\274\007\014J=\024\312%\275d\261%=\034\2017\275\236\252!=eU:<\001\344O<\270;(\273`3(\274Ob\365\274\305r*\275\273\030z\273\t\312D=\337/&\275y\376\336\274\270NE=4\333\316\274\256\321?={p:=Q\346c\274\265\310\364\2749\022\"=Vu\377\2732\204\004=\t9D\275\247;@\273!*\227<\360\' \275\227\201\211\273\210>8\275r\341\007=\241\231R=\372V2=\252\030.\275T+\233\274\376\350D<\320OR\275\264\352\204<\365\302\276<\334F\241<[\305\030=\223\321\330<\177\200\256<xou<\276A\013=\355\213\322\274~?\337;q\204&=V\016\235;sHD\274-\363\337\273\366<(\275ho\205<\305h\336;\214\250\314\274Y\214\344<\375C\017=G7n<b\016\017=\322\235\013=tk\273\274\\\'R=u\024\277\274uxG\275\023!\271<\\K\372<jZ\035=`\342\341\274r\373I\275\276\271.\275\n\037)\274\224(\241\273\211\231\275\274\231\247E\274\0163\n\275\377\243\211<x\272\024=K\300\022\275\205b\355\274\004\335>\274\362\254E\275\216\366\004\275\227\363\037\275\200\311L\274\017\262G=p\320\003=\225\277\016=Gf:;U\317\000\274\233M\217\274\227\277N<\020[\222<\262/\0179W\367D:\357\177\300<\321\311M<\223\245\203<\245\026\307\2744\353\265\274\244s\034;\360Z\025\275\n\346J<N\363C=\2749|\274ZE\013<^\2046=\357U\216<M\361c:4v==xP\007<\373\241\311\274O\2570=\203\204\230\274\016\370\253;\3514%\275\305)\365<N\027\266\273\220\205\342\274\302Zp\274\241 F\275c\367\221<\270^\026\275-\335\036\275\207X\263\274\364\314T\275\277;/=\333\227-=\330w#\275[\213\336;J]\002=\0265\031=\375\303\032\274\356\014Q<p\267\035\275\301{\216\274\332\250E\275\031\202\000<\304t\224<}\321{\273@\034\336;W\325\035\275\035@\346<\203@;\274x\023v\274\007PI\275\206\024p<\006\306\232<\033MK:\351\376\220<\246\342;<\206L\020\275s.\364<Y\272\365\273\005\373G=\233[M\275)\250,=\301\"/\275o\300\302;\346b\355<4\0330=+\244#=6\361 =\257\3118=^\330-\275G\231O\274\007m\020\274*\035C=\271\234\022\275os\325<\201y\353\274\322\227\337\274zj\257<.\367j<\330\344!\275\313\310\2549l\352;\275\021s.\275\273OS\275\265\334&\275\221s4\274\024B\346\273 \203\022\275f\000)\2748\264O\275u\343\205;D\201\215<_\317;\275\311\231&=\335\3256\275\000\235\203\274\305{\257\273!\023\n\275%\225\037=\271\216F=\307&5\274v\017\n\275Z($\275\274zf<\234{\002<b\376%=!\275\013\275\006\224\202\274\035.\204\274\247\243\375<26\025=\271\201\212\274r\356+=qY\316\274C\267;\275]\347\204\274m\017/\275\374\t#\275\2236\032\275\243g\010=\307Ue\274\0077\001\274\360\263\205;\364y9=\305O\331<\333\265\006=\037\2365\275\350p\017;5\3220<\375Gc\272\005`\r\274F\016\272<\231\006&\275\222P7=-C\002=sR\201;x}\000\274FB$\275Ze\017=gwi<y\241\327;(\234\020<\367\350\366\274\203\211\354\2741\207\275<\262\220\005=to)=\214\204\231\274\202s =\263\301\277\273\036\032\320\273\016\270n\274\336}\034=:-\253\273\220T\014\275\253\275J\274\304\013-\274\223\034E\275\252\277I=\271\027\342<U@\367<\265\370G\274\234zn<\005v\002\275\336\224\255;\203(\305<@\273\246\274\252W\032\275\365k\002;\256\215U=\356g\210\274@\272\321<9t\242<nP\343<\261S\330;\261\025>=\272\374$\275I\277\251:\210\335\245\274q\314\343\273\200\267#\275\256\332\212<*\307\330<F\006\000=$\311=\275Rt\336\274\323\302@\273~\223\356\274\213\326\344<\205i\315<y\343%\2759\222\264\274\242\024\354\274\037i\270<\'\t.;\302 6\275\233|\221<i\224l<\241\332\301\271\231\257\363<g\220==&v9\275\273n\361\274J\004:\275l?\323<\342=\374\274?\341\031\274\327\031F\275S\325\262\273\002\371\233<Gk\025=dw\244<\010\257\277\274d\243%=N\365$=\317\024\306\274\007\211w\274\3570J=cOO=\327,J\275\370\324\330;\353\033\331<\342\337\"=2U3=\211\316\232\274\212\037&\275U\013P\275\353\003a;\223\003\251\274\232\030\000\275oe2=W\2346\275\376l\212\273\217z\263\274c\323G\275E\312\002\275\021u\030\275gr\245<\247_R=\333\220\273\274\242\266\267\274\021\307#\275f\021W<R2W=\203\304<\274\372\347(=\303\312\270\274\270\300\355;\216%*\275\200\371\365\274\344f\013=(\232\261<\217P\035<\250\305\023\275\241\024\210\274\201<\335<\361\363\262;\\\344f<_<\264<K\377=\273\323\362\321<\013\256\017=\302p\004\275Q\037\347<\336_\240\274C\315S\274\243v5=\240\027 \275L\233I\275\312q(\275\237\313\347\273\230:\365<\235m\376<a\r\256<<\302\257\273\017\350B=G\320\006\275\r\327\343\273>W<\275\3026V\275&Y\017\275\261T\034;t\271\245<R\010\"\273\205\305\216<mW\230\274LvJ=B\274\374\274]\373J=\000AO\275\350\314#\275\233V\237\273\014e\037\275W\331&\275\265\321Y<\362\036S\275\361\351%\275\263b\364<}\332\261\273\026O\235<\254\216:=\026\2125\275F\367\n\275\022\222#\272\224\352.=\225\307\224<\222\343\333<\\\037\206<[\366S=\022\237)=\347\034\263;\313\366?\275@_\r=\265\314\367\274\251s\004\275\333?\221;\331\002.=/\335\363<K\362\032=9/6=\261B\265\274\336&s\274\342S\334\274t\350\346;\320\326k\273\335R\362<\377C\026=\000)J\272)\233\237<\3772\013=\021\256\027\275\377\316-=\303\266<\275\314\3129\275{\232\340\274\223\264\240\273\337\'\202;B\364\265\274\021\"2\275-\325\032\275\336\216\366\274\3146\023\275\373K\005\275\014\262\301<\032 O;\261S\362\273\274\236C\275\264\031\001\275T\342\020=V>I=sK@=i\242\260\274I\223E\272\203Z\\\273x\010o\274\242\357\236<\376h\236\273?\007\025=\350\211,<\024+\215<\255\343K\275\177\031D\274\0328K<V\"\002\275\223\303Q=\243\020\240<&\374C==\331\250\274\256\330\323\274\375\300\363\273\377\207\001<\210\212\265<{\2017\275\333\234\265;\317\207\317<n\367\224\274\252\036\305<\214\254\314;o%\r\275\017\327#\275\202\242\031<\"4\037<D\337\263<N\350\002\273s\021\320\273\315\032\332\274\227\221\304\274V\314\265:\237\t\307\274\354\306\244\274A\247\215\274M\005A\275\021\244V\275\351\221\232\272\270\226,=\203\3042=\256~\310<\321;L<3H,=\370\231\212<\342\010/=BK8\275\020\325\027=\225+-;\305\230\330\273\313r\232\274\316z\333<\037k\t\275x\331\245<\202y8=\017\244B=\300V\031=H\321\362\273\241\010/=\213\345\'\274\023D\265\274)\026/\275Uw2\275B\215\344\273\267\0037\275q\354\327<\035\374#=\335\235\'\272\340\344[8\304\323\216\274\204\300\365<\217\036\277<G\252L\273D&0\275\201\314k\274X\3707\275PA\3208+A\262\271\345e\203;jGQ\275>\277-\275\207\002\013=c7\343\2725\217\017=\024\0340\275\243\257\230;\361<\201\274F\3245=\n\t*\275\300\250\211\274\362\366\216<\244B\r\275q\364\272\273\324G\346\2742R\313\274A4\301<\314n\025=\360\257\303<\203\032\001=\2052\205<\032\000#=z\316\330\273\301l\260\274\335\265\224;\332\252>\275\020\r4<\207,d\274\033\352(\275\322\310V=\030\333!=\201\240\367<\240\346\274;\350&\013<$6\242\274\344a\037<\316\2104=D\246\370<\265y)\275q\352\210\273\313\347\006=\037?\373\274\024\2719=1R@<\005#5=\305\310F\275[|S=\364\227\353\274]k/=9:?\275\303\366\004\275\337\375 =\2248S\275;A\312\273\271\211.=Fa\226<\317\224G=r\364!<\333~\360<\036\226\'=j\026^\274iq\017=E1\335<0T\025=_\025F=\n\361\036=\026H\373<\255\271a<\361\367I=JG\247\274\3762\030\274\326o7<YiR\274\177\020\346:\316\336\001=\215x\026=\201\275S=Z\342\271<\354wB\275\247=\363<\214\252\016\275\310\301G\275\205\3131=/\267\021\275^G\003=\276d\313<\303O\222\273H\214\2459Uf\262\274%\304\027=\234(\315:\320\032?=7\340&\275\205z\373\274u\306\311\273/\263\350<\331\324\007\275\n(P=%\376[\272\034\324\025\275\231\250\300;\371\266\304\274.\207\375:0\005\037\275.\274\004\274\267=Q\275\367\251\222<\356`\013\275\243\375\367\274\214\037z\274\220\270]<\322L\030<\033 \r=\r\324\001=\"\207\021=\302n/=s\335\254\274\231X@\2753\353\013\275,\370L\275\222\271y\273\253i\014\275\235\200\256\273?\224a<\275e\242<\265\313\017\274\330\3215=\303lZ<\000\344#=\316\347\013=y\205\321<\355\333\305:\303\206\266<f\323V<\272\306\326\273M&\225<\357\177H\274\267\177\022<\370\013\374\274\220[\016\275\032b\177<jy\365\274\216d.\275(\357\353<\350Q\210<~\033\260<\324r,\275$\372\'\274\234>\036\274\370\313\272\274\353\227\t\273\2130\330;8\231#\275p\322\307;\331|\030\275\267\227\227<\206\220\230<A\035\342\274\351<\003\273\302\313\026;\277\360\000\275W\200\337\273\243\363\214\273\020\013\225<3\242\036=\032\327\036\275\206;#\275U\025|\272\357B\006\2739\327E=\226?\263\274\372K,\275\302u4=\002\367\306\274\323\243j\274}\377\242<B>\t\274*=\013\275\204\3646\275\\e\272\273qvl<\2122\177;*\202\230\274\264\313.\275\300\241/\274\n\330x\274\275\207\030=\327\262\260;:\351\340\274\215\216\354\274\312\316\017\275[u\352\274j\307&\275\030\201@=\030o\003\275\037\005+=ThW=\202J\024\274\211\307N=\316\033\317\274\351^==\243\377\330<\251\322\360\274|\205\340\274\nf\200<\207\n]\273`\255-\275\201 \204<\037\312^\274\364d\221\274D:\035=\371PV<P\2512=\231p\273\274\362\372<\275tI*<U\207\333<23\033\275dd\371<>\224v<%\222\035\275\342\004;=\372\336M\2739|\367\274\006\322\017;\353\313\000\275\230\206\275;\373nD\275m\001\013;?\226\362<\032\252\033<m\345h:\334\370\345\273\365\tU\274CnK\275Y\025C=:HB=\240\037\"\275c|}<\217-\200:G\266\332:\247\217\"\274\311\337\331<zQ\315\274\006DV\275\236\365\003=\377G)\275+\304I\275{\265\246<\257\322>=\204\243\031\275\301\017\013\275\257\257)=[\3276=w\021\343\274\025\246\325\273\375%\271;\357o4\275>\332N=i\344\001\274\262@!\274\007=\207<\006\306!<\210i\362\274Jp9=eN\022<[B\377\274\345\363\036\275\277\232\326\274Pd\350<\206\343@=\034\214:=\013\206\003\275Yr9=]\241\303<(\366\010\275\260\355\206<g\261\327<\370\226\360<\212^M<\000y.\275\321\353\363\272\312\333\202:\004\032\337\274\376&J<\220\322\201;(\3426\275>\324,< h@=\244\030\347<\006Z<\273\0042\240<Pw\r=H\300\216<\214X>\275\017\026q\274\3057\354<I=M=#o\353<\303\265\307\273\334\344\\;c!@\275ZI\360<$`[<\377\376\203;\257\203\247\273\216\364\303:+\220V=\307\006(=\275&=\274\306\343\'<\357\351\016=\247\245\033\275\374\271\006=\2353A=\355\373\256\274\251\334\354<\214/\'\275\016h|\272\017\2043=\312+;<n~\372\272Lr0=%\276\232<Y\241\336<\340_\334\274>U\255<\016\033\275<\253\024\027=E69=;(<\274\367\273\343<\264\014\277\274\r\2004\275%\024P=\247\004\237<\231qx\273\222 =\274\333C\003\275\213\353\022\275\205C\310\274\377o\022\275e\224\371\274#\301\212\274 +\021=\215\224R\275\010\315&\275\225\223<\275ZjD=\257\266T=K\324*<\205\026\352\274\240\256\034<z\274H\275\\LN\275\320\332G=\024r\364<\017\307\036\275\357\220\246\274\371c\004\275EG\347\273\313X\226\274`\307\332;*6Q=\027\367\322<\356!\221\274F\022\244<bZL\274\001x\234\272 \3402=R/\001=\330\037\225\273\227\216\013=\017\303\267<\353<:\275\010\365\016\274\235\2540\275\0042\224<\230N)\275\370:\020=\345y;\275\327\206)=\310\343\326<H\352M\275\032w\030\275\ns}<s\364\'=\200>\022\275\330\265i\274]\020]\274a\240\024=\236\302\370<\3302\344\274}b\217<\357\020\016\275\227\226\226\274\037\035G\275J\356\211<\365\201<\275\241\317\275:\374\021]\274\242\260@\275\372\353\032\275S\371&\274\215Nv<\356HU<f\210\257\273!G7<\033\332\340\274\n\376\t=u-\312\274\344/\016\274~k\217\274\0148@\275\\k\177\274\223\032 =Kp7;a\351\245<\177\264C\272\227\250\266\274\302\244\005\275\273\273\303<\335\005\220\274\010\027\003=+\263\017<\215M\360;]\357R\274\246\232\366\274\216\t]<wu\024\275\265\347l\274\214\2452\275?E\203\274\231\021\014\275lb5\275\247\263\026\275%\303\t\275\215\326\337<b\222\330\274\227:\364<-\3260<\340v\017\274\023\014\262;\037\304\034:\213\241q\274@\023\226\274\027\303\277<\202lL\275C\033\3509\331\021V\274\007\3331\275K\371\017=dy\346<S\311\200\274\273\365\036=C\030D\275\321\303\024=z\231\200\274An\333\273\214\023\000\275\241\304\231\274q\334\214\274[\251n<\262(\234\274q\375?<\277\250\352\274\255\254\231\273\255\316\200\273KO)<T\034<\275\304\005\016\273\226$\252\274\003m\237<\236\304&=\323?v\274-\255\252\274\244H#\273\270\267*\275_G6\275S\003&\273\364\322\363<\300\267\n=\274l\205<}\240\n\275 5!<FgC\275\017\247!=\273\3125\275\177\0207=\333\222F\274\036JA\275\231WP<\r\253\256\274\225t\367;A\261\356\274\032\334a<<*7\275]\321\234<0R\241<>\\\231\273\323*\356<\017|I=\031l\003=~\226\275\274\215\2625\273\363\200\342<\232\217\337<\316\203U\275\030-\2579\214_\217\274\027\342\"=S\352\024=8p\024=\335fK=v\232\225<a;\312\274\237\324\023\275\032\261\344<\2506\242\2746\364A=z\366\'<\366\350;\274\304\226J\274\255\233F\275\036t\246;\304\016\250<\225\\\315<\370\034<\275\333\3425=\311P0;gr\250\274\266oL<(B\372\273\236\031B=X\016\341;K\202d<B\031\r\275\347M%\274 (%=\362\247\004\275\276hG\274M\0079=\026\000\224;1\204\021\275\357\350@\275?v\332\274\026<\345\274\300\211\023\273\336\240\307<\213\227H=0\3277;(\"\270\274\252f\371<zD7=\230\273F=nc.\274$\261\032;\337\203\221<\361\232U\275\204\304D=]\323\"<\256\214V=~[\225<\266\371\302\274\346Q\013=\004\303\002=?d\200\274\322\n\'\275\364\035p;\222\334G=\215\357\013\2758\326\237\274\250\232\030=g\304\006\274\2258\270;t\363\033\274\203\202P=\326^D=|\313\325\273.\306\035\275bx\035;\277a\033\274\217A\'<\016,M=\365g\236\273\370\251\034<\033\352c\274\202\233L;q\207\213\274o\010\032=\313\366\273\274\370<M=\322\377\264\274\261+\221\274\212\212U\275\336xE=*\222\032=\"\177\334<\301\274\340\267U\324\202\274\250\014:=T\217\366\274s\356\350\274,#\t\275C\323\327\274\027{\346<As8=?\337\262\2733\006\005\275\261\0017\275\265:\025\275J\275,=Q|I\275\310\244\013\273\243E\371<:\330\367<\373\231\244<\366\031V\274\241*\336\274:\256I\274\252\311\013\274T\237\335;~\225\023\2753\356[<<\003I\275}\363\231\274\243\316\344\274\204\235\374<Q\030U\274O\223\305\274!!O\275k\361\221\274Z\213)\275\2408\260<\241\370\243\274\005\257\273<\270\332\371\272\300\304\004\275f\325\257\274\336\311\370\273\027\035\033\274Q8\374\273\317BA\275+\333\005\275R\230T=\210\323\343;\220\2634=4BX<\227\177\017\275\246\314P\274\375\241\321;\245\275;\275\333\341\037\275,dN<\215m\237\273\303\177I=\245\204\035\274\340\200\311<\340\003@=p\305\234\274\242\351\232\274\006\337R<+]\010=\357C5=\020\236\021\273!;P=\004\222!\274K\324\245<\376g\030\274\034v\312;Yd\232\273\335\t+<\342\347=\273\'\212\365;\004o\312\274\320r\022\275`\310<=\342\307\017\275!@D=gO\253<\377V\325<mrv\273\016\201&\275\2213\021\275\301+\261\273c\250\036\275\200:A=\234`\327\274G\340.\275\024Y\027\275\262\264g\273\030\022\303<\364\377B=\362\302!\272\237y\333\274Z\347\250\274\207\252\026=\233o\234<\211\357\231<\224XB\275\242-i\274\215\022E\275\226\017D\2753\266\314<~\034!=\315\203\311\274+\n\023=\356\217\312\274\003\206\200;\225\257\352\274l\375\034=wq\325\274\211\254\017=\212\016P\275\004q\356\274y\002\332<\334lL\275\211V\327\274\324_!\275X\311\267<\341P\020\274!\365I\271\301]\310<Gi\024\275\362\312\336\274\230\tF\273~\233\031\274A\322S\2749\335\025<\034\023\370\274\337KB=\\\371\276\274+\367x;\220\371\356<L\255\037;\032A;<\245is<\365\211\323\274\337\014_\274\003\256\010\273\241\353\324\274q\304\212<\305)\036\275,=S=\257\363;\275l\277\205\274.\032\"=\200\324\325\272(\334S\274\213\321\233\274\275%\362\2740\2766=\006Ey<\257\004\022\275\033\272\006=\025S\250\273\231\036&=tE\214<%\310\205<\267N\351\274K\200\340<\347\322\346;\036\261(\274\215c+=D\311?\275\274X\245<\014\214\021=\241\334\024<\274\247\215\274\257\002\203<;\350\024=dR\262;)\264\300<\372\0033=\260UH;\244\224\263<\262\353\321\274r\017\n\275y\251\r=\217\271.\273^_\372\273(\367\374<\021\242\000=\340\323V\275\271\247\022\275\362\3367\275W\235\201<\222\312\226\274\013\010\031\275\347{P\275d\253\020\275F\004_\274\327\343\224\274\263#G\275\260b\262<\216\245c<PjB\275\242\202\241<\236\341\024<\201o%=\234\266\013=n\000A\274=B\262\274\321m\347\274\357\006\377<\001\352\030=\236\020\r=|\000H\275\343\247\253\274p%\254\274C\325\231\2733+\020<\3432p;\3070\276<\242+\220<\350\020\313<\201H(\275\341\000J\274\355\034u<\201Oa\274\030\310K\275\312\007v\273\034J\372<\037\306)==w\031=\003\036\216<x\333O=t\260\271<FK\271\273/\026\027\275\345_\010=;\313\024\275\223\3476\275\272`\253\274\227w\365<\275\245)<\264\016\004\275\243\374\350<\220&O\275^M&=\366o+:\255)\270\2748\305&\274\372\276\342<\301\264\000=\244\342S\275\362I\341\273\250\3575=\023\323\032=&t\256\2738-I\275\t\303\337:\006\267\223;\ty\334\274\263a.<\242\217M\275?\366H=3\t\016=\314\231\004=/c\250<\333\220\312\274\341\n\306\274\032\241\026\2747\370N;\355o>=\367\177\001=?\353\275<NBA=\252\367I\275\233\323H\275<\312 \275Q\2623=\034+z;XS}<\002\356\352\2749\274.=3\216\022=\330L$\275;4\313\273+\326:=Y?\007\275\\n+\275\351;==\262)7=\323\244\031=\200i}\274\r\332\000=\267\332,=\361*$\275\351\305G\272\013\232l9\313\236\236<A\301.\274G\261\030\275\001b\341<\013\236\322;\t\231@\275_!\327<\375J\037=\211\361\021\275\307\343\264\274\013\202\334<Q<\350<\204=\274\274\271\354\005=/}\330\273\333\324\264\274\274\214\264\274\242\324\212;\177\336\032=\026\274#\275\310\357P=\177\2152=\264q\252<\254dQ\275\005\0170\275~)\225\272a\0311=\025\303`;\253\352\273\274\'\354\201\274J\007\241<\351RU:@\222\205\274\326x\n=!\356\332\273\373\315\023\275\031\2731=y\014f\274\260,>\275\033t\230\273\357\200\302\274\364&F=[\3047\275\344\010Q\275M)\205\274L~\215<{\017\330\274\202\360F<\264oB=p\027\031\275o\206\202<\344\216\270\274$\300\037\275\276\025W=*\237T\275B.:=C\275g<N\\#=\016;\320<\345\375$=\r\370\200\274Tr\377\274\237\355\232;\324wF=\305\244\325\273.\344V\275\324\024\274\2743{.:\007\337\'\275\233;\020=9\030\346\273;\362\200\273\301\333\326<qU\360;\t\226\325;\353{\230:\260\021\311<rg\317\274gV\215<\\\276m<\2519\254<\230y\017\274\310G\315\274\271\241\t\275\033\203\247<h*\212\274pwn\2741~Q=\037\302\243\274.V\017\275\216\303\305<Q\314\264<\3667\340\274\262\272\r=&\353\031=\235\007\367\273\2068V=B\037\031\275P\337P=\215T\036\275\322\261\227\272\231\nK=~\266@\275\355#\314\272)|\004=8\033A\275c\354\025<\261M\250<\244\300s\272b3\241\274F\352I=\245\363R\275\302\024\357\274o*\016\275#\254\014\275\033\361\031\274\371\r\026<\023\013Q\273\004\335\301<\254\036\t\274G\033V<\355T\023<\244\200R\275T;V=\316\3549\274p\312n\274\000I\260<&\"L\275\302\023\303\274\354\030\032;rK7=+\356\r=\'\257\330<\366R\377\274\r\247T\275\204;R=$\273\2179I\247\221<\351\231(=\212f\347<\356\316]<\031/\363<\307\241\226\274\036\356\331<\344\345\325\274\317S\331\271\020\344y;#8\244<+7*\275QA5\275Z\272\357\274\215\205;<\210\224\365\270bc[\274\275\003I=p\022\315<\271\337;<\000\3542=V\005\347<\265\357F\275B\024\374<Q\360O=\251\025\272<l\324!\275\264\n\r\274\210\001\226<a(J\275d3;\275\034e\035\275\'\214\260\274\307\004%=\030\3312\275\202\247;=\0278\026\275\2717T\275\006\270\223<3\016\235\273\262]\254<\201\341>\275\230\267%\275\241\215\001=Wg\331\274\333w6=T\276\244<Y\315N\275\213&5\275\021&\325\273\262Y\311;\007+\300<hw\365<\257\372\371<\347\356D=\336{\216<\0227\024\275\004)\375<\371n\314:\002\014%\274\303\312\027\275\'\237\315\274\367\177\277\274\177\376\031\274h\333\001\275\342l\341:\207$:=1\376\001<[\\\014\274j\225P=o\315\253<\251\250\363:\376\253z<w\310G=\272\\><\r\326E=8\034<;\256\361\346\274j#B\275\270\354\223<c\346\005=+\017J=\323_\244\274\221\220\264\274\236\326\251<\033\323\366<\027\032\226<\211\360\025\275\257\003*\275W\030\356<\263\250\030\275\010Lb8L51=<K&=g\025\237\274\n\032\035\275\366\267L=\201L\'=jzZ<\2021\032\2758\315\003=/\315Y<\265\254\223\274\03079\275\027\307d<\177C\t\275\326\215w<HP\350<\331\007\035<\302\221\002=\31396\275\0235b<\366AC=\004\317&;\244{6=\304\250\r=F\013V\275vo?<8t\007\274\346V\313\274\001\324\r\275c\017\217\274\326Qu\274\255\335\247\274\324DH<$\250\336\274\264\330\376\273\223\357(=\375\362\330<\026\031_<#J\"<C\344\013<\202\324-\275H\315G\275\341\243~\274!pm<\021\313\321<ub\334\273\312\240\316\274\006lD\275\230k\';\267\2020\274\221Q\361\273\317H\265;\205x\017\274\026\216\347<\232\221\371<\rrL\275\300\377!=\371\316\213\274[\3047=b\370N\275\211yK=C\026\335\274e<\031\275\237z\240\274\252$\320<|\267\033\275\242Ck\274\003\275 =m\311h<\223F\t<\257\000\217<QM\010\275=\376\224\274\002~Q\275\025\320\020\275\216\374\021\274[\231\301\274]\351\024\275\006d\306<\rN\006\275\273\230\027=#\376\227\273Qp\005=\234m\n\275\273N\346;c\023\260<\024\220\350<\014\276\332\274p\345\304\274\211\307\213<N(7=RT\r=\352\267\001\2758\002;\273\276\227\221<\370\343Y;\370\244\365<\337\265\340\274\257\200\366<\274\343.=\203g\272<\330dQ\275m=S<\245_0\274\236s\310\272\311\362\000=\220\227\016\275+k\253\274z?U\275\230r\374<\023d\300<T\327J\274Lp\372\274\253\275Q\275\315Y\324\273\240M\206\274\017\033\312<\306\374\001\273\324\264#<\337d\252\274\247>\026\275\272\234\014\275\212\177$<\234\344\231<\004`\034\275G\216U\275\315\256\020\275\252\302\355<\341`-\275\247\203/\275Y\202\210<\334\304K\275\203<\t=+6\031;\360\036Z9\233\316\315<\003k\031=r\034)\275\026\220!\275\211Y\213\274\3411\"=\341\335D=\247\365G=!+\243\274\032\312\314<\376\236;\275\020\360L=\247\357\206<\300\273\355<L\251\262<\312\022\273\273P\232\006\275\245\274F\274\004\236#\275\244\365;\275q\026\031=\246\243\304<\334\377\002<\031<\355\274\235Np\274\242\301\003=\357a.\274\3275\004=\233\000\261\274\245\261\3738#O\242\272\271\336\306;\371\307\363\274\204\031;\275)\205\002\275o@M=<\313\321<\004\035\300\274\335\322;\272?%7=\260\354\016=\177\314\346<n\027T\273\221\250\207\274\301\n\r\275\263\0147=\347D\031=\365\265\352\274W??=\314F/\274\241\221V=s{\315\274\264\355\234\274;\216\032\274\373q\265\274\201\275\"=\216u\202<\236L\311\274v\213\t=1nK\275X\'\005=j\220K=\'9\226\274\373\225;=\377\343#=\226(\305<\376\274\313\2748\276\261\274\333E\312\273\277y\031=\270\244\376\273\352<\023=\305T.<\005\270/<st\271<3>\267<<rR=\240\266\037=k\210k<\264e\030=\347\177o;\256\243\335\274\331/\234;\2770\032\275\0062+\275\366M-\275\324\234\262\273\374\025N\275\210\370\270;\215F\320;o\201\232;\364`\236<\024\270\247\273-\026\t\274(=\005=$i\351\274\3469\276\2741=\002\274oi\020=x\027C\274\310\242\243;\373c\347\274m\224\244<\227\223\030=\365\025T=|\374\265<\356Y\035\275m\020\225\273Vx\n\274\253\344C<]N\363\274b\000\333\274\267f\035=\202z?=\304\232\001\273S\325\316\274M\256==\313\302\313\273<\330@=\306\317:\274\343M\034=\277U\033\274\342\203\025=M\267B\275\275\232\271;\016Y<\275\300-\377<\202\370+\275{\313\274<\\\351\037\275\251\255\211\274\255\301K=A/\004<.U\355\273\242\323\322;\331\377\354<_\325\326\274\267\007;=\377\212/;\372\377@\275Cw\027\275\253y\223<\334\235;\275\\\204\264\274\221\356#<L_p;=\2744<\332\214j<\3649\236\274]3\014<;\203l\274,\347\253<d\320\n=\031CL=\225\213J\275G\376\027\274R\004\n=E\257>=}P*=\014\367\252<\271\250\241;\262\000\037=\364\231\317:\341\357\330\274\030\023i<\373\303\t\275.\217<=\037|\322<DD\355\2747\226\355<ua>\275\215\200E<\250\177\356<\227\022\372\273\231I\025\275\366gU\275mS\026=\177>\244\274\261\315I\274\nR\347\274\276\240\037\275I\203*=\241\276\300<\327\336\343<i\360/=\027\250\346\273\310\032\266<\346\217Q\2758\201Q=\311\206\016=\337(!<\020\3632=\375g\262\274\301\006\206<\014\235#\275\354\021!\275\215\204\'\275;\263\217\274\030&|9\303G\366\274K\230\201<\252\344\254\273\226bQ=\210w\021=\"\362\340\274S\223\211\274\177\253\020\274\231\317\226<\371;\356\273\244\246\253<\203\277%<\235\276-=\230\363\321;*{\356\270:+G\275\214\345Q=O.\307<9}\025= P\213\274\362\252\234<\352y\262;#\220\254;$\376\331<\316HD\275\301\024\017\275\002gN\2746\234\006=@\372\'\275\227W\240;\222\301F<E8\003\274\303%O\275\013u\330\274\256\335\006\275\305\324\323\274\r<\236\274\264\033\030=\216Y\005=\023\311%=\232\237F\2754:M\275\325\340\205\274\327\243\242\2742\213B\275\034\021\251\273\264\223\017\274\327\245!\275\247\031\367\274\321\330E\275?O\355<G~\004<\321<\025\275\261\363\350\274W\210\367\274\000\361\021\275\237\265\\\274\345\243\036\275m\357\315\274\367-4=\353\377\344<\361XH=\315 \246;sp\030=)\017/\275v\205\317\274\344\002\234\274\307\373\235<\241XE<\317n_</\237\000=\363\216F=f\033f<6\006\214\274\352\027\332<\322]T=\037\204\343\274\037@\374\274\017\233O\275\240\236.\275J+\200;-\3609<\357\327\267\274\031\037\3349\271U\020=\373\036q<\307\227(=<\232\371\273\264\260\222\274\020s9<\332%3=H\226\250<mNS=[\014\010<j\021\253\273\002^\216<S\222N\275F\256\031\274\256\3277=O\365\022\275\352\177S=\267H\313\274[9\304\274r$u\274\rL\217\274\035>\036\274\220{\r\275\210\255\234<SU\000\274\305\030\323\274s\351\004<\014\370J=\316a\201\274\227\332,\275\262\023\323\273\261\205\017\275\007,\020\273\026\016l\273M\305X<\275`\020\275.}\330\274\3253\033=\274M\267\274\n\235\t\274F\225\250<\024\331\274;\305\307\026\275\200\275\320\274B\257\017\275\222\0221\275n V<%\306w:\013xp\273\273C\"\275^\362\034=4E\367\274\010\222\035\275\305\353\006=\320\303\010\274\247\335&=p\216\236\274\t\311\275\271\221I\215<\376\270F\275\235\212\020\275\304R\271\273\276R\375\274\231\215I\2759X\266<sg\327<$\003\344<]\364\243<-\231+\2752FH\2752\035@\275p\257\371\274#T\003\275\232T@\275R,\210<#\002@=w\247\355<Bd:\2755\255\005<fh\252;5\237\"\275\352B\247\274\002)U=\352\020I\275\211{\222\274W\323\226<u%\256\274\336$\355;\253e\024=\323F\t\275\346\340\017\275\006\256\"\275G~\316<\352\314\225<f\3119\274\032Q\337\274\320\322\344\274G\270?<\331i,=\036\321\273\274\236\r\255\274aC%=\024\377A\275F9D=\2245[\273\373\267\022\274\210#o\274\021[W\274Y\355\026=\374\222\031\274\326\307\277<\302\276\364<\215\020\241:K\325\027\275\204\332\r\275_*\240<\022\231D\275k<(\273\353I>;\'\324G<o\004\252<\230)Y\274\377\315\275<\216\225\311\274\016\346%=\006\002;=y\261C\275\236\267T\275\344\'\272\274\225Y\265;/DB=\034\020(\275*r\265<\251\225K=\223\241\t=x#~\274t\364\r\2753\246 \274h\251\033\275\342AN=\357\035Q\274h\275|<F\367)=\037+\t\275KBi\274\315\334\027<q\341n;\014\315O\275!rJ\275A\362\364\274j\303\033=w\241\037\275\335\234\347\274\241%2=#X\220<u\013M\273%\352\"\275\231\244\n\275X\016\036\275\311\221V\275\317\212B=\031\260Q=\235B\233<\001\255<=q\323A=\207\331\265<[\013\312;\004\021\n\275\"/R=\030f\025\275\017z =\347\252T=\3539\272<w\262\246\274\315\256\333\274\371\345\032\275\335\334\024\274\032.,=\336/\232<\' \325\274\363\376\005\275\220N\255<\334r\036\275\300\311\014=\\\n\377\274\275$.\275\264\365\002\275\322*\227<\224\370\211\274\364[8=\327\003\223\274\210\034\263<r\0266<\314T\323<h\362w\274\301\343\260;\215E\262<\200X\273<\320\247M<!\332 \275\227`a\274\366\324\326:\351\020\320<\314\220\037\274\256<7=\304\373s\274)\232\213\274\375\002@<\272U\203\274&\222S<\000\237S\275\204\345\n=5\274-={\324&\275c\225(=\3633\226<\350]\"\274)\005\247<`\"\375\273o\235\373;\356\235#<\177\345\265<\n\253G=Q\220v<\\L)<\026>O=\331K\321\272!M\206<\211f\342\273[n\033\275\230\345\366<\220\311\033=\344l\252;;\177G=\223\226\037=\177B\227<\007\215\344;\\_\017=Ys\250\274Y\200\247<3>\021\275~\302\372<x$-=y\022D\275J\023D=\027ZI=\037\277:<\301\230\026;\233\0204\274\331\365\232\274\252\'\332<\006\202*=cR0=~8\214<\245}K=F\255a;0\247\215<\\]J\275\274y\374\274\363\365L\275y-\222<P\376$\275!X\005=\030\345g\274aW+=\200\317\010=\241\225\222\274z\222\000=U\316%\275\201\300^<\036\t\373<\361S\332<@\2529=\241uB\275\213!?\275V^(=d\276)\275\316\203C=\307U\225\273\307\247\"\275\257\303\014\275\331\337&\275\314\346I=F\000\264\274\252fC=~\263\220\273\373\024R\275g\3119:\231\300\350\274\374z3=\350!\"=\006\365\323<\337\325\025=\214\014\006\275l\375\254<\n\317t\2746\236\017\275w6/\275\013l\255<\215\266\271\274\032\333G\274\244k\270\273\262M\202</q*=\330\375O\275xE\305<\347y\036\275\0107\n=\002n =\220a$\274\016N\211\274\367\307\234\274V\317\330;#\301\213<-\224\030\27562j<m\310%=`\240\233<\310\365\231\274Qw\271;2\034\200\274N\355\300<g+2\275m\201E\275@\222\014\274\360\336\227;3@\276\274\002\374G\274R\031\374\274\200\036\202<\310\336/\274>-\370<\204E\365\274i\002O\275E\334F\275\243\262T\273,,\235:j\340\"=\035\334\301<\223%\023;M\241\013<0\362\311<\316\023u<H\3740\275\r\267\017=\255\315\027<\245y\316\274$i1\274B[\231<0\305\216\274Io6\275\020.a<s\2551\273\236\237\214\274e\362\032\275\003\027\356\274D\247\342<\257\337\272;\230\3366\274\336\262\253:\250w?\275C\227\351;\264B\010\275\253\037\032\272\342\256\306:{\343\000=$c\367<\324s(=c>-\275\252;\353:\000\214N=\376\2530<\252w\313\274\001\010\014=\2551\034\275\373\357\004=\260M~<\024T\337\274.PV\275\340O\221<\315\030&\275\030{\016=\030\333\002=O\031\214<L\247\347\274\005o)=\031\202\371\274\332\341\237\274\277\326\345<\211d\307\273\237\002K\275\302\000\342\274M\000\217\274\247HW\274\201O\346\274\325\204\033=X\210\317\274\214\343\255<\242\224C\275\364 \342<\023<\010=\321\245\235<\263\261\211<\027\365d\274(\347H=\'\375\335\274M\034\256\2730\251X:\256\034&\275\271\211N\275d\374\024\275\267jQ=\2529\246\274\373\020\300\274\342~\313\274\325 \256\274n\032\202<+u\374;&@\325\274I\220\261\274_j=<\202\251\346\274\026M\205\274\365\321\007=en\364\274\202\036\314<\034^,\275\354a\t\275\354l\272\274I\020\204\273\206\276\337\274\232h0\275\344@\250;\0320\232\274N\027\244<\r\2313=\342\256\014\275\270\0303=\321/\320\274\273\3001=\0335;<T?\335<\r~\365\273\377j/=\233\344B<\223y\370<\024\222N\274U\005\036=\275C@=\210$\317;Qt5\274\273\261\321\273\337\306\246<\360e\226\274\375\231\032\274\035\370o\274\3509\034\274\221\2375\275\025\272\034\275h^\177<\353\204\336\273\237y\021=\247\226\362\274?\275\016<a,H\275\266B\022=j\033,=\350\016<\275\351\352\353<\214@O=\364\276\327\274a\300\217<+kU=no[;H\000\031\275\250n\002\275~\3219\275k9\013=N\270\003\275\323\236\332\274\323-;=\346n\035<t\004L<9\"N=\206[\366\273\2159\233\274\300\370\023\273\363lO\275=\311`<\000\375\371\274J\366A=y\376\024=\261\366\214;\354c\265\274\021\364\001\275\314\233\254;\364\266H=\206\266D<\2215\021=\327\337-=Q\177\024\275\\;<\275L\251;\274\366\351\021\275\302\0336=\326C\014\271\026\310\360\2749\2021\275\351\270@\275f\344T=\177T\034<w\023}<)A\030=\312\014>=\030\325\255\274\337B/\275\347\314D\274\301\022\022\275z3E\274\207\207\335\274d\314\305<`\271\340\274\310\221#\275\316R\033=k\026\010<\253\346\036\275&o\203\273\367\014\346<\346\2777\275q\352J=\361\211\275\274\325\215\373\273\345\313k\274\200!{\273m\251\312\273i\024!\274\345\240\006<Y\376\021=.Q\031\274\264\276\356\272y\274\n;T\363\n\274g\226H<\'-\364<E-\237<\263\335L=W\013j;q\323o\273;\203\304\273_\371\255;\221\341\344<\005\362\210\273]\210\235<z\251\312\274\271Zr;\272\356\357<#Y\216<\206\232H\275-\233K=\n\212;\273m\005W\275\306\270D<\243\201P=\221\255B\275\'\354\343\274\350\227\223\272\240\356I=\037\334\334<\0332\205\274\025M\025\2751\0350\275\203a\027\275\031\213\244\274\344\361\262:)\340\274<\237\010*\273g\317\226<#A\037=\033qI=\013\t!=>\341\025\275\230\350\035\275\305U\374\273b@\211<61\303<g\024\345\274\352\301\240<\3649\262\273^5\223\273C\334#=\216\372\004\273\343\214\000\275\372B{\272\010X\255<\216\326v\274\230\220\345\274N\320\013=< H\275Z\274\315\273\213\036\340\274pB\254;\311\353\017\275\234\365\347\274l\346\033=\271[\"\275\217@+\275\224vo\274\200g\001=1\255\245:Z\323\270\274:\210-\275\334\346;<\242/\251\274\360\232H\275\001\347[\273\241Q\031\273\001f\014\275\210L\244:\306\315E\275\222\026\337<T\017\260\274#\305\036\275CW\307\273\220\206;=*\311+<\327\274\036<M\212A=\243\263j;\232\211\352\274\221P.=\217\374\330\274J4\005<<w\211\274\370\003\345<uI\r<]\222\257\274\213E\177\272\224+\277;A\003\027=\3548)\273\344~s;\227\254\312\274I>\036\275\324\035\034=\372\367?\275,\"\027\275\364J\277\272\030\253\361<s\320T<2\265\265<\337\243\350\274X\276\031\275\277\020\245\273IL\360\274)\222q9\333\331P\275Ff\350\274\270`$\275a)\365<\377\244\023\275\364iv\274.\243\022=\320\025G;!V\"\274u\204\027=\002\037D<\224l\324\274I\211.\275#\'\034\275F{\'=\31443;\235\000+<\274\020y\274\351\241><\345\2017=%\374?\275+\326S:\025\261Q\275\230=J\275\202!\005=\340\261\246<\207X\017\274\235  \275[\035\371<\266b\001=r\256_< \302\007\275\351v\332\273\017[)=\316\024\365\274\267\032\247\274\033\013E\275\342rK\274G\272\t=\'\215O=\347\327\037\275rQC=\321_\032\275\023\316\331<\210[\034\275\'\010\016=C\342\362\274\257k\t\275\322+\250:\210\0277=\221\245\343<F\302V\275\356\206\234\2729\251\234\273\017\333\017<\243\204C\275dpA\274\346\337\331\274I\370&=\220IR;os\231;\261\205/\275\367\316\234<o<\346<.*\345\274\21387\275ty\273\273\027\303\025=8\335N\275\007\331\031=@D\004=\235\014i\273\351p\030\275jI*\274]22<:z@=\003\336\n<w[@=\336\250\317\273\035\024\222;{h\236<OY\003\275\325\374\335<`\3708\274\253Rc<\320J\026=>\371\342\271\027\336==\020\240\017<\332\331O=\350\034\013=\014\004\227\274[n\202\2742o\'\274HC =\025\305\202<p\003\310\274\225\377\022=\342?\027:\355\326\254<\312\222\016\2742\373<=\'\312\006=%5\006=\361$\023\274\276\342\013\275p&#=\261\375\n=\201r\317\274\234(\017=\255,>\275\374\001\023=\354\205\316\274F\',\274tc\316<\245/\344\273\021&]<\311#L=wU\216\273Hb@=\010}\212\273\034\210T=\251\305@\275A\353C=1\362!\275\234U\307\273\316&4\273\346\376\311\274\377E/:w\335\035=\003\224\0238\004\253\303:\334\323\t\274\336\006C=n\270T\275b\204\001<rR\000\275\236\224\017=\272\310\003=\352A\007\27311\226;\277{\324<n\203\356\274\234\031\227;X\3404\275AZ\367\274\274\026:=\261P3\275\324fW<\203\007^\274R3\016\275n\306\320\273wi\232<\302\333\303<v\375\206\274\250\245\215<\263\324,\275\367\3449=.\336A=<\312\240\2746\034\246<\235X\013=V\364M=\277\271w\274\275\035\035=\233\341\355;e$\334<\0254\013\275\021\210\324<i\224\352;\316\320\007\275t\301?\275\022\2627=\272\303L\275\353\361L=Q\216\213\274i\307/\275\3703\222<\200\374\025\275\n\207m;3\201\265\274JJ\222<U\034.\271\251\363\013=M\276\010\275\343\250\270\274\337\231\230\274_\005\210<v\205&\275\376\201\230<Q\274\002\275\225\306\252<\236\'\020=\007,\030\274\017NL\275\343c\010=|\247\n\273\341\300\003;\tjM\275\312\211\263;\240\244\021\274\250\217T\275\313\005\357\271yr:\275Kq)\275+<\002\275\246\315\233\274\313e\367\273\224\326><\347C\007\2733N0<h\022T\275\366\336B\275\240W\352\274\332wl\2749i\304\274Q\025H\275\233~\351\272\223)\252\274\300<\031\275\247l?\275\2468@=]\004\306\274\000\246\321;H\367&\275\250\177\007\275\222|5=S\377\337:\235Y\211\274\272\010\034\275\262\202\'=\215w9<\312o@\275N\006\n\274PU\007=\000*J=\001\024\250\272\034\273\336\274\032\274\230;\311\002(=\300\371\"\275\203\242\001=t\277\017\275j+\020=#\260\224<\311\207\316\274-u4=\016r\377\274\301\014\277<\327\003\016<o\216\236\274\235M\025\275\317W\233<\332\205J=]\315\216;B\313U=\356\313:\272\242\247S\275\301b\255<\236FA=\227\230\222<\n\036,\273\224\224\307\274\271\014R\274\230\006\300\274\334\361;=\276\374\300\274\271\373?\275\254\006\370<\204\001\235;\273\021\'\272\364:O=U;\321\274\210\005\036\275/\263\224<\031&\022\275y\023\023\275\304\3665\275\r\177?\2749\304@=;\271\021\275[\025z<\004!\010=Y\023\271\274V\345\267\272\354\002\213\274\330[$\275\34079=qC\002\275\261C5=\240\001O\275\001\355\204\274l\"%=\365`\210<\270\261\025;\002\336M<\267\244`;\033\275\024<\302C\347:\005%\250<-~g\274p\351\226<\263%Q<\301\201B=\341\207\036\274r\213\260;\365\223\246<QR\032=\317_\252<\225\302\023<.\261\357<k\\n\273\215.\225\274\010\250,=\226\3653\274\272\020B\275{\020,\274F\260*\274\346ZG=\310\\6<{3&\275\256\245)\275n\207F\275J\2144:\275\235\227<\211\303\027\274y\270\350;\354\304\235\274R\222\320<\306\227\350<\370\320\244<\355\222\255<\027|p;\255\230\244<nC?=\005y8<f\325\010=\235*\010\274\237\350\037=\371\304\261<WG\213\274\327I\036\275\262l,=\263\340\031=>n\345\273j%P\275m(\026\275\207\270\204\273\317B\"=\254O\004<\361\235\032\275\363\222\036\2757(D;\210~\363\274<\265\036\274K\277\017=\016\327\254\274;\206\232\273\255\257\206:\365\363\001\274\262\243\031\275Y}5\275\373e\256\274Mf\241\274*\272\354\274\034d\311<C\211\332:#N\r\275t\3207=\310\235,\275\216\253\221<^Q\025=\262\256Q=\022\247A=J\020\253\273*\\\327\273h\231C=\002\3214=1^6\275E\342\210<Zq6\275\203\251\266<\213l\232<\035O\305<\357\221/\274\224D\235\274\300\345\377<-\3013\275\376z\n=u)\355\274\275`\333<wY\017=\224N\010\275#\331\203;o8C=A&\351<\343\330<=F>\'=b\300:\272\320\325z<u\001\013=\257\2078=\303\024\377\274\177\001\327\274,\233I=\013\r\322<$\322\321\274\315^==?\365\207\273M\0234=i\373%\274\226\263\275<\034j\303\274\226KL\275:\353\030\275\345\377\026<\320\000W\275\313,*\275ao\352\274\271\360\303\273|\013>\274\230\031\310;h\372\263\274\031<\204<\266d\006<\031[p\274TV\211\274\346\200E=\217WU=\017\211\243<\036h\002\275\016\354&\2759D\240<\252)\201\274\317\221\004\275\326\310H\275\034\314\253\2744\273>\275\223l&\275\020\353N\275\353\241%\275\321\354%\275\350\036\024=\273\327\200;\"\271(\274\350\305 \274\345\356\007\274W\302/\274\250D\350<\216q\277\274p\3725=\003\330C\275\303\320D\275_T%=\177\220*\275A~\375<\376\315F\275CA\366<\023\252P\275!\020B\274\n\010J\275\217w\227\274\027y\027\2740\205\014=\344\266I\275 \207 \275D\266\261;\367\005G:\274\034\205\274`\212\332\274\316\2257=\314\254>=\366\3346=\307\006\235\274{%}<\273\025\363\274`22;\257\212\243<\360Z\246<\\\302r<\250i \275\344\341?\275\210\230a<M\302A\275|z\235<\357\246\370<\204tS\274\256\256l<a\215K\275\332\311\217:\326\032 =\217c\026\274\365\341}<\030\036\002\275\323\217\332\273D@J=z\311/=\276\306I\2752\240W\274\302\201\347<\2770\031\275\n\214\014:\034\375+=a\340\027=^\214\255\2746\215\301\273\'[\362\274/\353\000<\004\364\324<\177\242\003=\021r\013=w:F\275\252\315\374\273\024*=\275Q\033]\274\330%\032\275\334\355\306\2742\361\301<\247k\025=\254\321\350\274\301?&\275V\307 <\233\300\322<~!\274\274&kE=7\300#\275\3003\363\274\265\3401\275\324\207s<\n\367\256<\361i\375\2734\223\352<#\303\211<\340\205x\274\260$\252<v!L=Y\204\237<\255\017;\275ok5\274\032\203\016=\233\217D\275\366\035\022\275\353h#\275\026S\212<\235L|\274\360\264\r\275\0361\265\274\3712\035\275\245\223\222\274\234\023:<+j`\274%\244\265\273\260q?\275\321.\206<D\251\304\274m\347*;\216uK\275\205\377\006<59\025\275\272A\313\274h\352}\274\377\'\007\275d\210d<I\251\301<I\333.\275vH?\275Y\272\010\275 ))\275\364\343\036=\255\321\004\275\302\203\035\275\220\311:=J\317\233\274J\362\363<\376\330\020=\224\231\211<z\006T<\004I\356\274\203t\276\274P,\325\274\tB8=K\031\230<\264,\207<\320JG<\223\334\216\274\343Fp<\312L1\272<:\207<@\370\026\275s\311\354<\335GF:\026!<\275:@W\275\361\373\231\274\244\3548\275\205\352\214\274#9\352\2746\3116\2753e\003=\212\247\206\274\337\'\254\2749\256\251\274Qk\301\274E\352\002\275D.!\275\275<\235\274\0209\255<\217RU\275\324\212\205\274\027\300\264\274g\211\261\274\276\026\035\275\350\351`<\276\374+=WM\271<\002\250I\275E|\013=\337\205\020=\n\337\275\274\260\024M=\326\023\352\274}\375(<\375X\252\273Z\235\026\275\0248M<R\330\025\275\017Q4\275\344\\\364\274\003\326\036\273qo?=!\364\'=\315SE=\3219\270\274\210S\322<d\213\206<\270\251\303\274\025\366\222\274U\377\332\273\213\272\312<n\341\331\274\242\267\033;\302o\014=G\277\003=\253DT=\334\352\331<\243\266\212\274\215F\374<\372T\222<\254}I=c\204\004\275r\333\325<~\260\324\274\352Y\363\273\260\002p<\344\"v<P\363.\2724]@=\001\366n<\311\230\223<?6=<\214\275\006=\020\247\346<1\253\353<\347\030\212<D\302\037=x\277Q\275\265X\003= \304\357\272t\242i<y\0046\2757\003\000\275>Y\027\273Fou<%\324\311\273\352\311\002\275\332\335\314<\244,;\275\031\0228=&\352\013=3=\300;4\016-\275\261 \247\274\345\264\224<\312w\035=8\351\235\274\257c\022=\210\2744=\335\023H<\223^\340<\231\331R=M\312\236\273\200<9=x\360\303<\255\260\353<Q\342.<:?\261;/[3=\353\037\324\274\331H\303<\270\254\004=m\037\323\274\301\275\372\274\330I\024<\332\377:\275\313\211\013=+\336O\275\337\300,=.!\021\274\304n\272\274\034{H\274]D\230<\t+\304<\314\305v;\007\245F;\332U\261\274\006t\373\274\250\267\324<\351\354M\273\355\264\223\274\266\307\003\275C\255\205<?\243\024=nI\204<R\277\207<\177\311\031\275\365\322\214\274\340\213\031\275\251\234G=\251\277K\274\305\3632\275\271\333@\275m!\373\272\327\255B=\000c\254;\211\346\004\275;\007\231<\017\275\234\273=\325\364<\347;\000=\023G\253<\325\365\366<\364$9=\202t\016=\222\216\212\274\352)\r\275\003[\223<\032sj\274\035\016\025<\\JW=a5\374\273\003V\372<k0\264\274&&\221<D4A=X)H\272\317HR=\001\253O=\321%\003=dy\037=v.\364\2731`W\275\215\265O<\316n\002\275\213\014\257<x\265\250;X\233\234\274_R\"\275\226\232$\275\220\0212\275\340w\203<N`j\274\31778\275_%\230\274\211\177A\274\321\216\031\275\024\203h<\271F\243:\265\233O\273}\334\240\274\217\274\354\274\222\303\000\275\n\232\010=\251\036\377\274(\247\306\272\013\3444=\314\374\216\274\204\244\006=\223W\026=\210\215\274:o\343\323\274=\r\037=P\236\344\271\'\357\357<\250\237m\273N\022c\274\000`\026\275\0309N=\224\326\275\274i\212\301;.\3156\272\022a\360:i-\004=\014\202\"\273\250?\006=\367\354\367<\237w\007<\240\036C\274\026\341\'\275\364RT<\035\210H=\022\214e<\231\343\007\275j\\\366<^}\210<\251#\211\274\263\354\344\273}\272\354\274\262\261C\275\255.\022\274\375\302\316<\322\357\2109\357\0173=\320\305?=\017Z,\274\201\023.\274\323\3631=6\301(=\216b}<E\357\027\274 ;\337\2741\203\211<eY5\275\30130\275\222\201R=\002\305\025=\032\365\335\274\313u\223<X\222 \274\316w\250\274\013\342\024=\205\211c\272A\222C\275T!\253<\310\254\224\274\014\316H=\212H\013=\212tA<\013X\013\275\374\320\357<b\026\226<,\221P\274\345\256\312\274\375\313\005=\243O\223\274_\255\027\275\247\"M=j\207\007=;\372\342\274n\210.=}O\013\275\306\335V\2757\220\020\275WI\2039\220DU\275\317\035#\271,\213,\275\306\007V<\231\211\271\273q\262\257<\007\373\024=\243\214P=\034\311?=?\336\355<\366\214/=\3071&\274\255x==\342if<\246\316\034\275{\032\'\275Wm7=\252\200\345:\361\362\303;\213]M=\262\237\265\274\010L+\275\372\006\335\273?\014\205\273\262)f\274\263\224\275\274\272\204\003=\3071*\275YO \272\313\311\002=\024\177\214\27496\315\273\210S\233<w\203\262;\265D(<xm\270;c\1770<\205VV\275\\\261B<\237=\311\274\263\251\032=\254\256\333<\344\'\031\274?\362J=\321\364\246\274\034D3<\246\034\244\274\"\307C\275\255\001K\275\014\360C\275~\005\037=\000d1\275\206e4\275k\307\220\274\322I\323<\232\243~<\\N!=I\201\213;\200\022\357<\022\344\366\274\357\340\337<\253\235;=dR\314<ra$==\371\343\274F\2457=5\210@=\206\303H=%\000\004=\331#!\274yII=\316\345\036\275/]\030\271\272\375\345<\224\253\371<k\r_<0R\025\275\357\030\022\275\356 \317<\034k8\274?B\231<\273O\204\274\264\"$=0l\000=\201\325\307\274P_1\275M\303D\275\177\353\t\275*\235\304\274\205\251\376;\335\317\306<#B\024\275\007m\025\275(&\245\274\026\3512=\253^G\275\006q\366\274+\361\037\27421\363\274\2519\'\275\223\010@=e\227=\275\274\324\232\273a-&=\206\263\031\273`\225\254\274\371\262\246\274\304\210F=\302\206\330<\345f\t=\330J\277\274\257\264\376\274WI\324\273M\317\362\274\366\217\356\274\014\004\273\274\310R+\275K6G\275\357\367L\275!\200\245\274l\255H<\374RH\275H\260v\274kM\301\273,\005*=B\334\'<\342\033 \275\266\314 <\324\331;=5\036\227\274|\366\241\274{(7\274.o\t\275\244\375\031<\272\352(\275E\326\333\274|\'\033=\017\375\307\274F\023\037\275\023\371\241<&L\327\273b\000v<\375}n\274\023\242!=m\342\'=\241%?=r\232\310\272\267gB=p\2130\275\016\332\347\274\261\010\332<\333+\271<\\\366S=\257\024m\274\002h\242\274wEU\275/\233G\275\r\256M=\236]\026=@\201%=^\376\351<]\257\247\274z\307\375<\234\301\034\273sD\370<UW\206;\030\"\034<U\0271\274\030\362f< \366\004;\231\337\013\275\320\316\266\274\2354\025=\273\260\272<2uO=c\2106=B\n\000=\270\334G=5\307\021\275\262\261\201<*\252N=\020\375K=(b7\275\377\3568=\216\344\021\275k\2750\275\024@\003\275Q\215\351<J\216E=\034\016\275<| \242\274L \376\274\262O\224:\031\204\034=\020\002\233<\330\371F\273\232\270\034\273\315\203\\\274\247\244L\275Dm+<\016\321!\275\254\274\324\274\276\256/\275\275`\262;\260$\357\274\260TT\275\301\335-<\326\356\332<P\274w<\357\367&\273\034\202\302<\304\306\031=\033-Q\275\365\017\213<S\332\246\274\200\023\264;\225\016\364\274\260\327\363<g\267\341<\370\324\324;D\357\337\274HI?\275~\353@=\305\223\257<`\004y\274b\2670:IuD=/+\261\274\356\263\021\273\3266M<\016\324-\274\261\306\375\274\310\022K\275\010%\240<\214qK=\013\232\032<\355_\350\273q\256\375\274\372\272\315\274\276Y\003=kjA=\177\001\201<v\301)=\004|;=\204\204\005\274T\205\203<\255\005\300\273]qZ\272F\336K=\034\010L=\037\0061\275\256nC8U\377,=\362\203\257<j\235\252\274\364\243/=\027\002\032<\004S\017\275X\237\351<xG\006=\212\225\026\275u\201T=\346\347\222\273\025\210\355\273\nq\010=X-W<\351\202\252<\037\246\223\273\2022\204\274\242\210\365<I\361\033\275D@\020=\265I\245\274\034\356\300<\201\020\210;n\314I=AC7=\263\025\317<\314;\220\274\366\250$\275\022\362D\275\323\271\255<\026\355\355<\253PK\274!9\022<]\377\221\274a\021\374\273\325o\267\274$:4<j\235K\275\271\320s<\301\025\322\274\364AP\274q\030\273\274\273\034/=yC\232;T\234?=\177\362D=^\333\r=\3111\250\274\004\3029\274m,\340\273\360\020\334<.\201\365;\251\220y\274@\r\217<\026e\352<\020/R\275{} \275\313Kd;?q\240\274uK\020=\2627j\273{\020\006;y\004\021\274bP\266;\360\037\227:1\204_\273G\031\364<\235\013$=\302\023\272<\234\377\013=\367R\305\2738\n_\274\005\326\032=\3550H\275\325\217\036\275*\242>\275\022zU=\037\266\025\275\025\254?<o\323\212\274\3156\225\274\264\"t\274\221\346\260<\021\031@\275\250\311\016=\025\321\206\274\257\3405=\342\010\251\274\302&P=\026\261/=\341B\023=0\366\001\275\204x+\275\301B\222\274\211\353\261\274\324X\022=\332\332$=\003\026o\274\377M\263<\263\352\033:\tBO;\364\310:\275\353\236\256\273\374\376\273;\234\005B=1s@=\234\301.\275\356EE\275\200\316\257\273\373D}<\353\262\215\274NS\177\273\376b\207\274\354-\306<\257M^\274\335\027\253\273g\262O<\2342\032=\225S\036<&q=\275[b\351\274\243\346S=\334\210\303<x\352U\275\'\276@=\267\346E=\346q\215\274\010y\260\274\007;\346<uA\017=\203\314%=\377\344&=];\273\274*\2756=(a\314\273\362\344\t\275\245\204\032\274?,I\275\247\240K=\307`\216\274\014Y\'\2749b9<\327\274\362\274g\372\217;P,K=~4\251\274\342\035H\275H\2644=\243vu\274^y\037\275\300\350@\275+\242\316\274@2\233\273M\361\014=m\335\020=\037\013\021=2%\214<\271K\034\275>\347N\275\347:\345;K\226==\231\213\014<\022\202\340<\205\230D\275WOd\273\223\214T\275\032\213\000\274-\007\026=\275\3618\275D\234\226\273\203\322\230;\" H\274d\262\032\275t5\313;\362\251\006=\342\242E\275\321\317\367\274\240\311N\275Y\247\224<\307\373F=\027/\305:\214\253$=k\362\350\274\347\264V<\216T=\275\200q-=\2418H=\334\0273=MQ\323<\357{,<M+\252\273\264\315M<z\256\236;\027F&=4{\260<\377!\366\274a\200\350<\277\016\253<\313\257\272<\t9o\274-6\010\274\300p\017=\346\276\252<R\333,=\3037\277\274\334\253?<f\346\370<\025\"T\275cb\020\275%\303\214\274\020\304@\274x\342O=\024\251\322<\3379-\275-\221;\274\304\310\'\274\270%\0078\263\257\241<\020L\250\274\203\013\253<+S\335\274\256\354r\274\350\365V=\213H\361:\246\323\035\273\346V0=\355\223\222\274\275\372/\275&Y\002\275\362d\035=m\001F\274\211\336/\275|\274\203;\360\255\331<\365\230\331\274\314\245\345\274\006\nb<:@\007\275\365\030B=\356n\'\275(W;\275K[\000\275/\306\212:\022. \2752\006)=P[8<\210\345\017=\252m\212\274\351\360\035\2723\207\310\273oz,\275\003\363\234\274\014\r\330\272\315\345\010\275\245oL\275T;0\274\305\377\206\272\223\215\266;\340]V=\360\341F<\365a\034=\007\233\235:\300\3551=\"\216\001\275Yl!\275v\223\024\274-\201\032\275\221\350!=V\317\t<\222)T<\302\3057=\303\033\021<\n(\237\274\035\234\3779\334i\370;\236\001\307\274\034\375\006\275\333d\333<m\316\010\273\016\357\016\275\026\250\275\274\324\250%:\343f\035\275u^B\275\322;\002\275\266\210>=\346\022\251<\231\217\021\275\342\032\363\274p\242\262<\237\272\217\274A\t\201\274\266\335\345\274dbI<\3601\336;\340\310\367;b\2139\275\000>,=U\013D=\366\rN=&\244\230\274\272\010R=N\314)=.03=\220\017 \275\265\033B<\030\223G\275\264\326$;DnD;\364,\025=\334\311\002\275#<x<\266-\200\273\227\312\361<i_\317\274\342&A\275H}1<\3534\003=SG\007\274\010\360\345</\213V<\245\361\366<\300\261\275<x\313\375<\363\335H=V\2024=O\213\366<\364#G=Q\307\222<\325K\207<\005V-\275\247?6\275\332\241D\274]94\274}1\031\275Qf2=\235$\032\275|\255\265\274Z\217\317<\374\204\276\274\217\350%\2755a\215\272\203\242\340\273`\017#=\277\227!<_\2673=`\306$\275fA{\274\352Z\274\274\204\342\037\275cp0=\205\244\231<\024\232 \275\356b8\275\r\006;=\225\022\213<e\027\307\274]\324\027\274\216$\277\2747\rJ\274\235F\032\275\237\360\323\271\247Gb\274\003\247P\275\337\n7=\244\360\017\273\223\204\303<\236\0024\275Op\257;\034\226>\274\360\375\010=\220\223\002=\213\216\t\275T\3718\275\2675-\275\224:\036=i\357\320\274\225\347\346<?\357\246\273\366\205\301;\362\203,\275\342\317\301\273\204\021w;\201\224E=\321\252\263\274\2105\370<\232\270\321;(\345\004\275G\332\"\275\2324\352\274N\205\214\273sM\000\275\211\245\004=\364yL=\312\327\275<{%\345<\375\r\023\274\210\204\213\274\007q\010\274\265P*=\037gH=-4\020=D\215\027\275\315/\004=*$9=\263\004\n=S\270\345\274\"\322!\275V2\250\274\270\222\336\274\350m&\275\3329U=\227F\334<\2514\311<I\'\002\275p-\007<z\361\017=\317\247\n=/x7\275\205\260\032=\317P1=\351V\336<\003zK\272\354\246\262<GcK<\025\3524\274ZP;=\267\005\035\274l\010M\275\256n|\274\375\033\312\274\000\373>=\377\277\376\274\332C\305\274Z\323\372<\276\031\375<Gu&<^\014B\275?\212-\274_\005;=OkC=\352\323o\273\335I\347:]\343\341;\"\3004=\364\230\"<\013d\033\275\221\340B<\013#V=i\016/=\360\026\207<\365~W\274\026\374,=%\250\320\273\233!\372;g\311\204<\300Y\232\274\000R\257<\241\3671\274\266\230.\275U\301\271<\272\213C\2746j2=6\374\032\275\257y\326\2727/\356<g\245U\275a\274l\274w \364\274\247\357C\275\3123\277\274~\177J\275\201\277\245<\252\354\303:zL9<\204\351><\363\322\n\275\273`;\275\245UW\275\2431\365\274\205QO=\227\212\270\273\355\216\335\274\t\301\221<O\266\201\274~\0222=\311Bm\273\302n\357<\210R>\275\362*[<\274<{\274\360\"\r;\345\205\273\274X}\035\275\275,\374\273\335t\236\274z\360$=\204E\333<N(!\275\231!\023=\022y\364:]K\001=\230v\n<\244\317\022=\tZ\351<\356\3130\275\3249\221<5i\032\275\314\363\030\272\n\021>\275\241\r\226\2741\013\266\274\027\351\002\275\231\240U=\230w\207\274\324\224\t=\031/O<\344]\352\274Ci%\275\246\225U\275\337;\315\274O\240\222;[\373\r=\356`\311<K\252\262\2748\226\222\274,\257\233\273F\374\2016Rk\363:\206\255\233\273\316\004\244\274\241\317\230\273\241;\325;R\256\016=r2A<\006N\"=V\232\316<\034\'9\275\371\310b<$\206\016\275*\0044\275\253\223\273\273\022\376\224<\276\262\034=\210\002\016\275\257h\340\274*\217(<Ls=={v\025\274\355\211O\275\254\0308=\275\265/\274@\342\315\274p\311\001\275\026\201\025=\242\332 \275\224K\257<\212\337<\272\\\030A=\272g\205<\037\'\335\274\262\234\003=sy\215<}\354.=\217\032\t=\300\201\034\275.!\372<s\311E\275\027\267\031\275\\Y\331\274\003\360\237\274\007\365;=?\373\361\274\\P\3359OR\032\275`;\006<&\311\240;6=\300;\342\r\377\274\262\214^\274\204\202L:\333\264\010\275\346\200H={\212.\274\200\026\025\275>YA=\204U\247<`\277\324\274\321\357\023\274\307\374:<i;\274<\317\377>=5Y\014\275\333\214\032=k\254@<L\203\014\273\021\022\266\273\'\327\226\274.t6<\256\213\\\274~\262A;Y\366\035\274\355WH;\220\376\027\275\020\037\362\274\273\016B=\021\234\\\274\035\321\307\274pR\025\275\205\024\001=\301\353\336<\\\2613=\300[\276\274r!)\275\233\'\235\274\024\323t\273,\326\235<\003\334\027=i\352*\274\217\013g\274\220\321\236\274}@\023=S\005$\275\"X\350\274\017&4\275\217F\336\274~\"\315<8\303\346<\263M7=\375N\301\274\200\3162<\312\377B=H1\352<ur\037\275\316hl\273\255\023==}g\034=\216\004C\274\277\371\254\273<\222\327:Y[\326<\026\3214\275\035\245\000\275\020\256\027\275\"\351L\275SI?\275\211\326E\275\226+\266<\246\2274\275^\246\346\274\300\274n;\314\230I=W\354V\2754R\363\274\177\217\371<\304Q\357<Q\327]\274R^\313\272\272\021J=\265\277X<\360\025j\274\336\3509=}M\230;\313\013\305\274\313\330\265\274\310\234R\275\365O\217<M\326\003=\026\274\315\274\023\227D=J\211\200<\236q\257<\204\234\226\274\300\263\025\275\277\200 =Y\347\027\275?\033\304\272,\210%;S\2079==\rv;\030_\024\274\357\030h<\374\005\022=\277\355\031<\2061\243<\356`!\2759B\277<)\245\242<\227\221\020\275\261\205\323\274\310\240\267\273\211k\273\274\310\326c<\033\204\004;\2267\325<XH_:S\032\337<I\351\013<\251Y;=\306\306\274\274Qq\'\275\232\036\237\274\031\313@=\226\270\010\275WA)<\'\234\352\274df\005\275F\247<=\2238\313;\304\301\313<^\275j<\364G\243<\200{i<\346\253\206\274\376\240;\274\2251%\275\355H\037\275\226\\$\275kZ\034=\206\224\202<\230-\336<[\361\'<\234\014\245\274\205\203\275\274\010\344\003=\264<N\275\267\033Q\275\215\257\203<\366;\347<D\213\365<Y\220F=p\237\364<M:\375;Ao\"\275\233\3466\275BJ\273\274\362\346M\275\345\227?\275\367\234\037\273MW\247<\273\323\213:\204\265\000=yW\362\274u\224\255\274\r\0251\2758\t\001=\217\363\330<;\0302=\2116@\275hgG\275\212\266\217\274\306\336\216<\241\316\257<[\270\265;\274b\026\274\272\361T=\216N!=\267J\003=Z\371.=i\371\312\274i\262/;\241\177+\275\345\323\253<\263\377|<\354\306\234<%U2\275L\351\336;\3764\305\274\024h\274\274\211\3718\275N\340\322;+\211J=\003\034\002=\327\345\002=\033\320\235\274\242\241\014\275t\255N\275\244\247E\275\333s\353<.\301\324<\377W?<\310&\331<S}\336<|\033!\274\227kI\275|\373\314\274\222BU<\2372\003\275&#P=z\n\214<\3273V=\260\343\322\274M\2427\273h\016\256\274c\335)\274\336\300);\336(\240<n\300\034;\373\246H\275\260\212\035\275\017\n\245\274\301\352)\275\324\014\247<\32096\275\030vW=\354}\030\275y\337F=\233\365\327;\267\314\261<\316\242\204\274T\013,;\t\240%<\263\373O\275,\205+\275C\321e\271d\021p;#\013\r=$\246\n=\2252><\365J\347\274\361\333\260<\366R\306<\223\203S\274> 4\275\372\355\005=`\304*=\226`T<h\262\005=P\374\234<\177\020\372\274\3505C\275W\3056\274\317[\215\273\261\310\004=_\206\274\274\211\025D\275\316A\001=b\347*=,\3653=h\267R=64\365<\217\317F=\237}\214:~\022\205<\003\372\024\275>:\3448\'\372?\2759\033\000=\310\245\370\274\306 \354\273~\276\261;0\014B=-\3216=\027\250\271\2748y\024\275MHV\275\r\307.=\361\345%=XO\232\274\020\345\025=q!\033\275\230\356\255<\232\224\337;g}\031\275vT\240;m\020><\222\215\232<\343\232\363<vj#\275\270\013\001=-\t\273<\006\206\307:\242\312\254\272\244\356\360<)\034\024=\037\177F=}>\016\274\331\n\037=\231\272\304\274\306\267>=\022\274\021\275%\037\341<\372_\370\274\341q#=[-E=X\257\353;\371\307\025=_\022\020=\275\305\207\274K\302\014<O\233K\275\272\205Z\272b\265\320\274\030\271M\274 \263:\274f\337\273\274x\371\005=\3604\264<M\375P<\210\300A\275\332\"7\275\317\007\007=\nJ\002=A\202\335\274I\364\250\274\273n\013\274.\373\305\2744\241Q\275\325\362\007=\251\255\253\2738\343\236<\210F~<Ie\271\274\341\374\030\275\000\r\324<b\027i<=\223\303\274.n\007\275za\327<}\317\022=!\302l:\362\374T\275\336\321V\275\030\276/<\363\306O\275,aJ=\372\211==\312e\232\274\347\313\327<\243\266x\274P\026\364;,^>\274\247\2214\274\022\023V\275W\226\223\274e\002\177:\302\361\005;\001\033\351<\311i\007=\300\343E\275M\017\005=\017\225;=\276\236V=A\363\030\275\271-\234\273\340\370:=\362\027\301\274\373:\331\274\346\267\205<\374E\004\275\331\376\037<uj\030=\221o\016<\227\263\021\275\337\207O=\022\354\261<\244\003\374\274\220\266L=@\227\226<,p\025=\0353M\275\255\002\032=\003\216\320\274\327\332\035\274D\241R<_\273\351\272\000\2020\274\236\035S=Lb\342<|\210\353\274\000]\032=\371\2145\275\013\232\026\275\203U\037\2759\310\367<:\320B\274\234\177\354\274\265- <\021j\360\274\337\370\222\274\005\3546\275GK\214\274\333K\006=7\215\305\273\265\005J\275{[=\275\3013U=q\333m\274V\231\263;\246\376\003=R\200\001\274\251\215\376<\200\374\236<\3114\331\274\361\035\004=\313\313<\275q\360D\275t\251M\275\236\246\005\274\344\235*:%\204\273\274\361Q\032=\266\n\217\274\311$\023\273\274\234Y\274\322\314\322\274L7\242\273\254\250\315:\030\246\032\273 (}<;v!=-U\260\272\307\320\330\274\001_\207\274:\352T\275\007\225 \275b\305\221<\225k\310\274\376\027<:Cz\216<\376\353\370<\227\352\362\274\005\006\225<x\300A\275XB\202<\026\3628=\n\261B=I\234N\274\211\235V\275\371\027?=\003\231V<\007X\n\274UkN<`\344\255<\201\332\001=3X:\275\2371V\273?g\375\274\036\027\034\274\001\014@\275\304\206\320;r1\220<\343\235\016\275\356\2422\274\221\334.=>\235\343\274\251\002\005\274\\\353>\275\200\301\374\273\262cS\275\013\006\320<\021\300D\275o\247\024\275\317mw;0\322e\271\027\342>=\311\177\326\273H\003V;o\263`<\300\311?<\236)\034=\033\"\306\274\364\031\321\274\2748==Oo\332;]\003\351<?\0017:%\256\253\274\001\315\332<a\273\000\275\027\030\022=\374\234\250<W\276E=\303\3024\275o}\360<\037\301\017;H\307\027=)\010\340\274\226\252\314\274\201h\001\275\353G\0339D\t\311\273\327\332\215\2744>\366;<\206\300\274\373\014\315\274\230s)\275v\245\325<lL\317<\352\242z<!j\032\273\260\323N<\342\242\002\275o\346\303<APM\275\304\371`\2733\344\007\275\230\302\360<r\205\365<9\260/=\013\233\r;g/?=#\336v;\260\353\374\273w\t\362\273lU\030\275Kt\341\274\261\007\037<\332\211\017=\261\252\r=i\362/=\007M\n=9\365\021=\313GQ=%\207f\274\217(\361\2743\335\325\274\263\243\'=\374\252\010=\253t\n=y\327\004\275\r\255I:\233\364\305\273+81<[\376\311;\256\017\343\274\364Qb;G\025\223\274\246H\013\275S\211!=\371c?\275\347\0366=/\351\032\275I\357\251<\3167\304\274\355z#\275\010\307\005\274\261\017\236<\231YG=0\370K\275\320\001\200<\321\331(=X\276\365;\006\320\240\273\256\265\001\275\322S\020\274\325\2068\275\241g5\275A+\340\274\221X\027\274\243\3373\273n\021\007\275\273\212\021\275\215\313=\274=\224\200\273\333\221\277<C\276L=F@\314<\247A\311\273y}\354\274\345j#\275r\220\002=\332yN\273`\005\312<\331\301%<?\323\216:\231cK\274\220\027W\274\024\321\273\274\022/7=~\273\3529\256\332\004\275\366\264\331\274}\336\2059\267\013\205\273\347\304\267;\021\367\367\274*\006><\221\366z<\002\323x\274T\342\014=\017=<\275\310\222g<\377\353\235\274\006w\360\274P\276P\273W\221\270;\0222i\273r3\034\275^\312\200<L\021\256\274\247\366\005=J\337*\275\025k/=;-\025\2751\367,\273e\2713\275\263,\312<3\344\307\273\317\270P\275g0\336\274\321\234\245\274\344\013H=\332\274\343\272Mn\220\274_ \232\274\302A3=,\342\255\274\013*\322;\376\031\013\275\037\200R\275\00616=\031\033\360\274R\2009=\341\032\031\275\311O\032=\253\335\373\274\310\355\213\273\331\207\033\275\272\365A\275\210\203\023=7\361\'\275Bq^\274r\030;\275\246\357L=\311\2127<x\036\'\274\256\357\006=\026\364\346;\322\276\234\270Q\215\362\274_Op\274 \336*\274\264i\n=\345\255\021\275[<C\275\241K\014\275\255\356:;\376\223\206\274RR\260<\351DQ<Zl<\273\267\245*=\362\354\201\273\370!-\275>\035Y\274\364I2\275\356\315\010\274\263\342%\275\366b\014\275\346\324?\275\311\370]\273\366:\331\273\375L \275L\362+\275\324\3010=\'\331\226<)|5=Z\355\331<\334\275h<m\201K=\000\'\013=:\254i\272\370\2130\275\035\323\204\274\200\370\t\274\245\0309=\345\325\353\274~\352\343;m\030\006=\261y\022\275\364\342+<s/\014=\316\331\335\274;\240T\275\364\0200\275\3163\241\274m\330G\275\302\364(=\301\215\261\274`87=\233h\211\274\236x\036\275\340O\010=;\316\027;\264\203\206\274E\230?\274\023}\201<#\304\216\273\326\306\033\275qJ\244\273\346&\223\272HLC\275\316\023\216\274\000\010\250<\255\213F\275B\200\376:\204w\024=b|\004=V\342j\274/\242\274<\224\241\030\275\\\276E\275\267K\307<\336vM<\317\'\214\274\350~\241\2745c\207<\360B\336\274\227S\356<\201P\262<}I\310\274\305a\332\274\313-8=\211\354\252\2744\200\254<J\264\263\274\363\220,=|\255U\274\247\374G=\257\266\035=\305\035\325\272\t\314S=\177a\265\272V\205\306;Pk\302<\356\nr:\360\345\037\275\237s\036\275\245#\323<%\177`\274y/\212\274\262\351+=\257\255E\274k\254h\274\366\345\233\274\037\203\'\275\255o\227\274\356#H\274\326\215\016\275Y\302\322<\256V\370<\331Y\"\275\376\334\347;\"\327\213\274\327f\217<\233X)=\234\205.\274\316\255\024<\243q\270;\013\243<\274\312|\022=\017v\266<\010\\\'\275\3620U<\247\247\000\275yGj<\330\304\332\274\010\274\262<fE\277<\017k\313\274,\013\"<\365\003\231\274\316\207\001<\230\302\033<\340\333\016\275\273\205\037\275L^0<\260@\006=\214\002\374;\027\2157<X\277!=\3436n\274B\217t\273\313Xj<\250\332Z<\363\240.\275V\324\223\274\346\273\207<\032\340\344\273\177\000\354<9\332H=\350\350\002;\377cV=B\247\227<\202\352\223<Id\345:\216\301:=D(\t=\372\r\253:\205\'\224\274~\253\010=\244\tj<\212\352U\275\345\335\377\273g\246\025;b\252\240\274b\327\013=Z\361\"\275\r\233\001=\204O\032\273\272d\307\273\260\215\226\274.{\351<\252\274F\275)[\271<\303\377\177<D\336%<m\026\347;\227\000^;\264\207B=\376\022\266\274>\273\035=\035\307\223\274\272T\234<\355\316\362<\336\201\027=\256\005\200\274:\335\021=\333\2454\2756\3776\275\263\325\314<\366yl\274\\\353;=Z\272\257\274\252}\235\274v\330-\275\275\371Y\272\270\231\326\274\345\251\336\274F\350\222<\002\036\306\274u\350\017\275\205\2347=F\223\202<\270\272\"\275\246\177\332<\272 \366\274J\276\372<\021}\251<\301L\"=EY\031=\"[\307<\2219^<\2373{<\027\251K=\035\247R:\033S*\275\265\365\215\274\345\033\023\275PE$=\227\261e\274\\.K=\272(\340;.\207\254\274E\320-\275\217\322\034\274\265\2047\275/\356\016=\02797<\253+2\275aB\234\274[\215\204;\370\354\314\271\275\375\035=\312\234\245\274\005\3223\275ovH=\007v\303\273\223\032\325<\275,\006\273\372\375\257\274\030\366+=\364\227\207\274\037\324\330<yP5<X\352\021\275\030g\n\274\321\031\337\274\230\361|\274\347\350^\274\305\374+=Z\240\271<\304`\330\274\036~\276:\327\270\211\2748\232\005\275\344\254G\275\314\311\260<N74\275\033\225:\275\241/\216;+\371/\275~\205N\275\302\027\322\273\021K\031\275.\002C=6\r\030=\262\347\205<\317\021\334;\260\"#\275P6\030=\344\324\003\275?;\021\2753(\312<G\231\230<\217I\361<8\234P=\223Q\371<\217\3100\275\360-\336\274\333\2434<\317\rU<\177x=\275\243\345\366<\317%\004=k\232\001=\266JO=\020\253\345\274\017\235~\274\237xN\275\257\345F=\032\335\017\275\021_\335\274S\014\234\274\022\350e<\017\356\n9\204\310\027=\007\354\303\274\204\177\033\274\364}\336\273\343\303\276<\3450\226<\344\274\227;\013\216\037=\345\006#\274Eu\240\274\246\362\313\274h\030\021\275\205\024/=z\214\245<\032tN\275`v\222<\316\253\353:\'\320\235\274y\3000=\321\335\224<\005\377S\275\023\217R\275>\244Q\274\2719\275;\010\207\241\273\001\330\032=\267W\303<#}\351\274\221r@\275\327\036-<z\206\212<\340\371E\275N\352\201<\320\376\355<\n\253\256\273I\017\302<\035\331\217\272\021\375\021=4{\267\274\222\330\316<\3260\003<\3260\025<-\355+\274\351\006<=\020\212\013:\013PR=\200dL=\014\255\023\275\313\230\212<zdQ=\r\225F<\342\002\351<\366H\t\274\211Dw\274V\361\'\275L\025%<\276m\364<v\3024;:GJ=\214i6\275i\307%\275e\272\370\273\233v\026=\312\353\021=:\215\024=U.6=?\301\032;8\2235\275a\026W=+dR=\311^\311\274\251c\217\274\314\344\361\274L4\316\274i?l<\024\005\200\274\364R\314<\377y?\275\022\211Q\275\237\206&=\221\013\032\275)^\305\274(\222!=\323\337K\275\235:\374;\273\316.=\265(D<\203\252B\275\347\203\252<\306\210\002\275NP\010\275\r\270\370<\2069\361\274<\\?=*\344/\275\271\3513<l\003R<\334$=\275\356q\360<G\232\330\274\327\275\032\275:\201\377<\363\225\203;\333\0010\274\230\213\307<\207\003\003\274\321\013\005\274\331\362\344\274\346\326\255\273=it<Q}\241\274\314\025\250<\233\037O;q\240e<\203\266\376<~%\337;]Y\007=H\022J\274F\030\033\275\316m8=\336R\205\273\347\236\031\274\236\336[<\002fI=<\316\342\274g\'D\275M&]:\004$\r=\331\363j\274\242\317s\274\006Q\250\2749\260\232\273\025\221\306\273Zl#\275\336\364;\274C\324\232\273\203\206\244\273\027\241\364\274\322\203\341<\027\330\273\274l\322\n\275\016\334\235<\212\371\243<\021\317\343\273\237\256\267\2735\n\374\274b\360\224\274\2674\010\275\254H\230<)O\023\275\235\347<\273\267\305S\274\212\363\320<\027^\277\274\317\235\242<\252\217p\274Q\341\234\274\200*\261<Dw==_\367\330\274\2032\3639\316a0=b\341\221;\203-0=\310\030\375\273+r\340;\035m\021=B\005\263\274Q\254\022=\033\224.=\273\320\337<\247\355\r=Z\206g<\320\226\010=\017\242\361\274\370}\342\274M\002\032\275\252\034\271<z\253-\275\327kQ\275\233\240\301<\223\220\240\274\367(\231<\031\"4\275\005]\024\275\200\021H\274hW\245<&;\256\273\3352\367<\000\364\267\274\266^L\274\203;\026=\030\263\235<\'\267\025<]\360\204\273;\235\017\275\350\234\277\274\271\265\253<\323\355\226;Bp\205\274e\"\020=\246\234S\275-\002\243\274\256 H\275K\260\263\274\0364\313<\343\242R\274\"E\347\274\223J\007\2752t<\275\302\355\312\271@^.\275e\252\237\274\242\347\001\275F\035M\275\31512\274wc\213\274\371\034\026\275#\313\346\273\373v\305\271\204\226\234\274\322\337\001=\241@\231<3\177\031=2\355(\275\337\r4\275\231?!\275\230R\n\275\250+\263\273(N\222;\\{L<\216\256\026=\207?\035=\222\020Q\275\266\304\004\275\236?-\274\353j\017\274\261ZE=\351}\222\272\002\3360=\312d{\274\224\332\253<t\332\247\274J\307\323<\2732*\275\210\026E=(9\327<-\364\326<\3407w\273m\356C\274Q\000%\275\000*\270\273\013x\275<%Ez<\3662\216<B\261 \275G\214\177;\215\007D=\363r.=|\326\032=*\343\r=\177<j<\205\352F=b\233\355<S7\247;+\270\027\275\305\340\n=k\0351=\207\274R=Ml\344<\363w\246\274T5\306\274\303\255\266\274\000\333\217\273\346+f\274\222q\000\275\371\274\003<\273\303G\275\344\200\004\274\303x\037=\267\027\017= \310\213<<F\036\275\3159\324<d$@=\206\321%\275\tO\373;\206r\354\271\322\023\036\275\234\225\313<\312\261A<A>^;l\277\201\272\23456\275\227d(\274\231\257~<\302YS=B@\343;\356\253\315\273\205\345\n=\202\376\036=\367\372;=\321s=<\351O\241\274\001\345N\275\353\014\223\274\007\250S\2757\272\024=\324\357;=\347\361L\274\000j\\\273Ls:\275\324\320\261;}\177\347<\254\210R=\276E\343<\000U\013<2\\|\274<\251\365\274\\\320\006\272\273\255\200<\256\007\027\275Hb\242;\220\2738\275\034\303\274;m\263&\274\2628\036=\261-\"=zB\313<\212\257(=)&\203;(\361-\275P\201g\274\030>3=\264a\270<\352R\251<\230\0047=%\024\336<\207\205K\275_\205\374\273r^P\275\271[\207\273R\003\023=~\302\032\274\017\016\225<\0010k\274\353\227F=L\313\305<\352\222\327<d\240R;\266\255$\274\303(R\273z\325\204<+\023\261<<\313\206\274aj\370\274:H[9\031\202)\274\017\001\367\272R\364\000;q\274(=dQ\374<\313\tJ\275cs=<\361\310\355\271\032r\034=\354\346$=\032P\014\2745)\322\274;\005k<\024\244\225<\327\023b<\246N\304\272\2761\300\271Q\376\210\273\004#\241\274M\031\250:\027;\322\273}\242\224;\253w\305\273\205h\007=Q\034\223\274\346\001\206\273[\3557\275\234U\360\274\276\"<\275\212\2703\274\363\215\032\275G\0265<\245\223}\274\305\374\205\273\307\361\362\273\341\265\021=V-\001=\264V\005=\024\355\332\274\262\023=\273\304K\320\274\320n\231<G\tb\274\003\361+=\236=\344\274\241\355\013\274\217\030:\275\'\254b<&\006\205<1+e\274\356\215B=\314\326\035\275\3646\362\274\320\352r<ItB=\'\021\272\274\357$(=\357tB=@o\345<\023\234\300\274\237\323+\274Q\310\300\274\253h =d;U\275\246\241\277\274\177H\361\274\022\3611=k\272\000\273X\t\000\275\023[J\275\026\344\363\2730/\"=\260\300\335<\236U\357\2730\352R:s\225\241<\004%\333<\020\236V<\345,\032\275z4a\274u\267\203;\347\223\355\274\356!{:-\250\217\274\371Wv\274\366g\342\274S\031\332<\342V+\273\0359\037\275\364\264\330<\371\2003=cJ?=\320fv;\255\232M\274\\\362\273\273\007\341\347<\360\270\001<\225\007\321;\224-\355\272\036\3655=w\377D=\004\315~:\366+\n=tc\014=g\264\352<\2142\216\273\307\300G\275\0143\324\271 \317\230\272\014\273\023=\364j\037\275\301T*=$\264\264<\205\2170;r\030\321\274\2420\234<\210\232\026;\330\207Z<L\366\332\273t7%\275\207\3653=Gw\325<qN\235<n\230\307\274\206&\271<\2232\272\274\365&\221:.`K=\201\266:\274\203\323-\274\006\320D=\347\337U=\242\220N=\223\210\265\274\321\316\323<\370\3676\275\200k\303<\360\312\362\273\371K:=\321p\262;\366\246\373;\217i\340<\262a\271<\374\177\017=\374t\216\274\212\014\314\274\021\002Q\275t\335\226\273U?\352;\0244\013\275\352,\033\274\"\317!\275\r+\376;\021\004[\274RX\'\275\347pB\275\3436,\275KC\272\274\351g\000=:\230\026\275&\024S\274\3140+\275\255\261\360<K1\220\2741g\310<_ia<\001\260\223\273\322\215\317<_\'\3348\224\202\334\274U\010\311\274\030\313\007=\315k\030<\316\0301\275\232\311\013\273\247\264G\274b0\327\274G\263;=\324\374\020\274\261w%\275H\373\237\273\020\207\376<\027|\010\275\326\'A=~\224\014\274B\320\214<N\333Q\275\001N\223<v\220A\275\342!\312<\201\0059=\201\344\246:\002:S;\357Z5=H\344t\274\271\3408=/h\007=J\320\261\274}R*=\034\275\255\274\250`/\273\02310\2746\304\203\273\270\216\035=-\234%\2752\322-\275\010^\003=\234U\264\274\331b\206\273P\254\216\274D\255\342\274\362\371\025=%\3773=\341\216\027\275<\311Y<nfS\274\353J\334<\352\316%=\267K\310<yBv\273(t\'=\310\264\373<a%/\272\223X\010\275Lc\231<e\335\321<\360\004F\275\201#\245\274\3557\263\273\351\314@=IN\344;\206\322\005=\005\001P\275\230\360>:\004/\331\274\313\022)\274\351\2522\275(\327\224\274\345n9\275G.\254<\227\3424<F\016!<\020\312\247<\220\304\370<\225g)\275\317\027\'\275q,5\275D\2650=\016\234u\274\267\265\372\274\202\024%=\027%\2159/+#=\311\214L\275\206s\214<\206\237\000=g\035\021\275cr\265;M\031&\274h\2519<;\376\265\273:0\027=\370\343X\274\324x0\273\374\017n\274C\\\234\274i\025\021\273/\207\3439}J\250<\225J\021=\2309U\274\351\246\364\274\"H;\275\240M\226<\241\304\306\274\221\033\000=\375\334\367\274\352)`\274\224\205\224\274}\272F\275\217\376\312<\326=?;\010\032Q\275\306\352\000\274\\]\276\274\025(\256\274\372\275F=r\345#\275@\030\330<\364\2138\275l\247P=\205\3714<k\244Q=V;\254\272DS\373\273\205\036L=s\317\223:\243^\236\274\014\240\305\2747\266S\275dE:=*\372u\274\265\2408\275\026\312\313;`\351M\274\010,\217\274y\3340<\273\027%=\252\004I=\343q\027\2758\037\312<\337\301\346;\026\205\202\274\201\201\014\2751\345l<\216\320\351<g4\014\274l\031\010\275\214\021\007\275\207>\323;\256\221T\275\016\242\030<\263\\\024=tH\253:\205O\230\274\365|\030<F\343\030\275\231^4\274\252\331G\275P`\276<\\\201?=5O\253<W\256(\275\350\330\343\273\230y/\275\205\213V=VC>:gN\367<\277)\246<\362$\211<\257Y\006=l\3368\275A\221!\275R\r\'\273\303/\246<@m&\275\004\270\177<\277k\271<\231\003\230<\357\373\376<\356y\362\274\341d(=\301--\274\217\361\312<\024\"\376\2747UL\275\354b\022<\235\013\"\275\031$\025\275m\032\003\272\003\023\202\274\361\353%<E\335`<\007\254\033:\227\021\376\274\345Q*=\366\361\275\274>+\272<\207\201F\274\r\210\307<\027.\006=\243\376\002=h\010i\274\233\345\021\275\263\302!=yF\035=\215\217N\274*>\342<<^8=\361\367<\274B::\275jU4\275K\322\037\275\347\267\224\274a\020\227\274\241\023\304<v\344\232\273\220\240G\275\021BW=\360\370\317\273*T\345\274\304\223\250\274\017lQ=\357\322\215\274\013\320]\274\213\007\036\275DRK\275\205\3727\275\376D\'\273e\t\000\273\306\237\033\274)Z\024\275cx\021\275\205W\220<\325(\361<\344|\363\272\300\022\252\273\336g\244;\244\357,\275L\345\350<\351E\t=?\0046<\272v\203\274S\0037\273\256\241\003=\362\032\025\275\311\252\006\275a8\002\275O?\t=\376\032(\275\302\356R=\022xg<\\2\220<\211g\204<\244\025\022=\201\031h<\246\027(=\177=\013\275\210\"\377\273\212\302\"\275\'\2027=x\'C<\223zS\275!!-=/\275*=\265\017J=V\343\335;J><\273\363\264\256:\371\2776=\242\354>=e\220\035\275.\002&;\351Ml:s\265;<\357)`\273\343\213\352\274Y\355\031=}\214\323\272\226\247d\273\377\250)\275l\023\000<\353\233L\275\271\357\246\273\177G\034=\022\023\005=\314\270;=\024\3432\275\201Op\272\016\204\002=m\222=<?`\220\274+\351\200\274\002\0314\275\305\236\027=\270\230\030=o\211\035\275\275\364F=\317\354B=\225\375\271;\347\214\307\274|\333n<\276UB=\303\021@\275\351f\362\274V\031\026\273\020\3040\275\354\347\327\274\374\310\000\274^ev<k\234R\274\246V\332<\rA\010\274\270\274P\274w\233\335\274\344\n\270\274!s\260<\r\2418\274\335\220\355<U`\245<\377\027q\274S\324?\275DT\355\274W\324\017\275x%\277\274\331\262\234\274C`\020\275\275\242\347;s\006G\275,T\030\275nK*=H\024\n<\375\'\022\275:\337\223\274\023c\247<\332@\027\274\341A\361\274\037\227S=\230\031\254\274\247\357\322<\247H\246<\237\033\363<3b\321\274\211K%=\351!\035\275\306V\010=\003\313\327\274\202o\023\275W*\223\274!MV\274*\330\032=\007zI<<\316>=\030h7=B\274\343<\216\276\000=\342E\243\274\271R*\275b\313;\275^\254M=U\034\271<\255\221k<F0b\273\036CP\275\350\201\n\275U\274\240\274,\245:\274\236I\363\273\0041\231\274\241\031\023\272R\306\265<]\335]\2741\320^<\356\245_<A`\261<)\345;\273\254\233\016=\005\324\013\275\032_e\274\017s\367<\263x(=\366\244\331<!\\6=\350\003\372;+}M=\206H\036\273\032\275\036\275\2338\002=\224\342\363<\231\260\360\274\217{N\275\257\350\320\274\262<\250\274\304@\325\274\374\225)=\373\231\030=h\2164\2742\000\337;\306%G\275\336\333S=zoq<\220\"\302<e\352\241<\313*\203<c/\007;z;\363<\270\0136\275\322\302\205;Z\005\314\274)`\322;,9d\274K\014\202\274\266\260d\2725\232\304<L\2067=\341\373\021=C\350\033=\211\240\250<`\242C\274\226o\302\274q\0267=vX\033=?\327s:\177\366\"\275>X\022\274\027\262C=n\020\223<\316\353?=\r\315V=\335\356\360\274\2113\016\275\213~\024=\255\035{<\260\240\374\274\362Y\301<\177\036+=\321\0330\2753&\232\274%\352\030\275\333\321\326<\362\'\n\274!\353`\274t\305\"\275\306\263\251<\207\257V\274>\364\213<\236\016\300<+\010)\275\200 \034\275\351\306\334\273>\2735=\006}A\274\217\333\227<K\313\203\274P\346\207<1\277h<\225\213\037=\377s\004\275}4A\2752\246\003\275\037$O\2755\320S=XiF=\351\376\257<iP<<f\003\246<\3204\'=4\037\336\273s\360 \275\257nF=c\232\"\275L\245\272<ld\357\273)\031\310<+\217G=vNE=\343?(\275\201v\245\272\330\246\302<\257\371(\273\024\332\r\275\313}3=\026%\236\274\311\357\206\274\3470\035=\341\232M\275k\275\002\275\220QQ\274\3168\251<\036T\n=,\356\341<\305R$=\017\217N=\356\200J=\253d7=\234\036\027=\363\222@=\033\252$=\274\211\003=\306\025C\275\250m\002\275\270$\337<\312\030=\273S\265\245\274A\315\345<\322\336\013\275\336\371\010\275\270p?\275u\017\237<\264\276L=\033{\373;\254z\352<\204i\034=g\206\025=\021W\214\274\303\000\035\274H\337\346\274\35565\275\0026\037\275\203\242\212\274\013\333R=,\313c\274r\274\317\273\301 \263\273\206\017\010=\241\232\005=\031\330W<\221\324\223<Q\003W\275\240K\370:\230wG\275\251mA=}K\224<3\013\232<\373\007\341;\307\010\374\274K\236\356\273Z\365E\275C\333\335<s\241B\275\327\016+\275\356\264\331<h\245T=2\246\347;Go\206\274\207\024\321<\2773\363\274\275\352*<\317=#\275T\245\024\274!\317\r\275\340\262\230\274?}W\274\270\030\032=\324\1777=}#4<:\312\345<G\222$\2746\353\213\274\n\264\330\273\3001V\275\260\003\333\273l\037\036=\356@\307<r\302;=t\277\356:&\316\212\2736yK\275\202p\007<\24682\275\254\211+=\315\035\235<0\201N<4\273\377<\213\032&=`\371\037=|\022\236<\360\204N<.\246\035\275D\362A=o\2308\275UaA=\027b\362<\370\216\224\274}\356\002<\211S>=n\231\343<\006\337\376\273\023\3028\275<\257F=d\010\240<\215\230\336<\024\333\214;\n\260\361<V1D<\233\2449\275\2164\023=\313\237*\2759\036S=]\227\367<3a\232<\223E\027=\2773\215\274\3419\365<\357\006-\274\331<m<0TQ\275J`B\275\374\0143\275\227\320*<\214\363J<\257#\023=\272\214\232\274\355n\345<x\310\215<\240\244\360<y\017\300;R\206\301\274\354\346\226<t\273\230\274\361\207\r\275S\\L=\025(#\275\2529\026=\027\254O=\"\022\362<&\201\024\2757\204\017=g\265G\275\004\257\274<\352$\313\272%b<\275\226\344N;)=\213<\254\036\322\274\227\230\003\275\361Y\370<\3128\007=\016\224\274<\033DC=\243f\377\274\216\222\"\275c\333\033<u*\034<\226\275\253;s\370\232\274*!S\275\213\275\337\273G7\265;?r\215\2721\264U<\006$J=\326qa\274F0\252\274A\2512=\303vR\275\355j\035<\203\357\271<|\177}\274\367\331E\275\373\032y<S\276=;\027\217\214<j5\022=\330\337?\275\3331\302<U\353T=\246q\215;h\003\035\275\260\200\023\275-\277(\2758(\262<\336\266\002=\201\241D<\247\271v\274\350\014+=\277e\373<\317T\241<\002\255\226<6\r\203<\347\2764\275\326\034U\272+U\230<\321hF=\361\253(=f\303\321;>vE\275\022\352\034\275\346\342\271\274(]D\274.\002\t\275N.\300<\311\326\017<\254*F=^!\027=\370k\331\274\014\222\253<\330{J=\027I\367<\361\264\001\274\241\314\304\274\203%\202\274R\363=\274\245\220J\274\235\212\027=\234\"\203<\033\373\304\272A\023\263:\236\010\014=kLr\274\327 \244\272\255c\014\272\010e\027<\354\'\232\273\301\207\236\274\007S\007\275\201\313\365\274\330!\002=B\352\032\275\261\221\275\274\013\335+=\3348\335\274P\023r<\372\312\223<\335\312\202;:\2464\275HF\001\275\227;7=60\364\273\350\364}\274\340\304\245<\2665`\274\376c\204\274\265O\035\275\225\333t\274\240dA=\270TT=\372\206\007=>\033=<t\251E\275\221B`<\365I\275\273C\333^\2741\204C=0\226\024\275\331y\023\275\237\371#=\306o\243<\321\034\'\274\272\2379=\001Y\321\274\'\177\257<\024\032_<\2769\304< \356s<\314\0274\274\201\241\350\274\244\317S\275\006S<=\003\254\031\275np\234<I\330\205\274\350\317!=F\3020\275\312E\014\275(\264\246\274\374\360\030\275*\255\371;\336\371\001<\031F\270\2743*N\275\007\325S;\374?\327;\347#\332\274-E\017=\275\275=\274f\327\352;\347\203\344<\211m\265<{\r\036\275\035w\t\2753\215\261\274Y\227\016<\335jb\274V\201\005\275\237\345\356\274\270k\243\274r\035\311<\234D\252<\226\321\312;]\240\351;\274\006$=&\303\242<\034z\200\271D\001k<T\225\247\271\024d\002<\255\213\274<\266I\007=5O_\274H\325*\275\216>\005=k\236>=\252\254\'\275g\030\034\275\330\034\213\274\316\016.=l\243\226<\366\003U=4BU=\330\220\007=\317\205\025=\265\206\261<*-2;]\013\301<}\267P=>\361\374;\223\220\017\275\025\256\377\274\024\376\373<\260\352L<\250\300\246\274$\364\301<=\255\200<\314\336V\275\223zJ=\275\2672;\001\000\305<\334}\276<\024\001m\274V\340B\275r\204$\275{X(;Q^`\273\212\376/=\321\345x\274\315\271\210:\347+*\275\t+\377<\210\232\314;\027\024x;\366\n\266<\320\0244\275\024Xe\271\031\202\335<@E\347<\037!*=[E#=&\350\272<\371\020\255<2\312\022<\240`E\275\367\274\316\274O\320\375\273/W\014=\364}~\272d\357\360\274dK\343\274\243\r.=h*\\\274u\257\345\273y\341\331<\260I\234<y\177\344\273o\331\315<\347\032\374<l\272\374\273\222e\014\275\266`\227\274\215\"\032=U\362M:S|?\275\321\322\331\274\364F\267\274\023a\017\275\371\262\371<\311\235\030\275q? \275n\'\270\274\026!\035\275Yg\370\274\034\326\t\275mHx\274\2016\013=;\311\026;\210\264\"=\006R\021\274\252\\2=\374\306\030\275\257\215\343\273\036I>=C/\034\2759\217\366<\006\320\264<\377B\033\275\272 \377:\245\331i\273\333\001\016=\331\213a<\377\304\030\275\263\001D=\006\366\333<1\335\003\275u7\'\275o\007C=\346\302\301<\324\035\265:\027}A=|,\256\274\022\344A\273\373q\251<FFT\2758\013A=\371\014\027<\271\321\035\274+x\300<\366\376p:\213M\312\274\354e\214\274\334\003-\275=\276]\274O%H=\243t\362<\265\'\377<\"b\010\275\t\344\013=\004\273\022=\265\310G\274\342\026:=m\t=\274\331cB=\252\2215\274\230{\211<\037\352\230\274\032t\267\274\001\253\000=%=\375<]\2622\275\256k0\274\260\362\276<K\002>=\005\014\034\2758\300Z<:v\244\2742w\344<}\322$=\035\217\211;\002<\010\274\315j\334\274\371\226\303<\030B1=\026\342C\274\343N\204<\313\3658=E\330O=\004\337\242\274\215\017#\275p\272?\274H=N\275\263j$=\265:\343\274\316\273\265\274\357\210%=\346\0249\275u\356\"\274\233R\350<\227\356K<E\004\315\274\355\343\004<\223\013\306\274\330`\\\274M|\035=bf\232\2742\207M\275\232\271\271\274\236{\365\2741\265\241\274\215\256\007=\315\014\240<-\233\026\275\205\222I\275\314\310\354\274\360\334X\274\010\223h<\006\237&\275J\214\230<\376w\236;\033\277:\275x\327\r=\310\335\376\274\367e\315\273\376@\236\274\0214\030\275T\210\246\274\210%\032:0\3239=\271\263\003=)7g<\327\223\361<!a$=\001\024;\275W\035\336<\202\303\033=1\254\325\274\026\372\010\275<\222\206<I\356!=Zc\316\274\260E*\275\363\007\336\273d<\005=7V:\274C.\n\274\0013\373<X\n\346\272]\272-=E\351n<\350\021<\275&F\024<$\305\007=r>\326\274\205B\260\273\374\212\353\274\031\375(\274y\371&=\320\225]\274\230}\223\274\216XL=\257[\306\274\266\333\363\273\372\207\231;Rb!\275\3011O=1\2548=\323\tu:\3449,\275\"\242;={)\331\274\213\006\237\274]\234\016\275\353\212\304\272\341\275\354\274\366\017\373\274\241\271\005=\245\"\313\274\246\307\256<\311n&\274T\371k<h\305s\274\251\371b<\t)\026\275I\207\371\274e\240\305<\206bL;3e\361<KQ\242\273\257l6=\377#\336;|;F\275M#\036=L\234\363\274x\256O\275_\356|\274W\3657\275\235\t\365\273z\361\035;\335\301\216<\177:\270<;c!\275\"\2735\273\330\010K=T\227M\275!\030\030\275\230\376\004\275\341/G\273\374\000#\275\352\236\351\2745=\250\274M\371&=\242\305\240\274\021n\205\274?\343\004\274Y\311\374\274\324\237\037=\2605\016\275wk\017\275B\360C\273\227\221\240<TPU=\316\357\006\275\263\037H\275\034\364\025\275]Z\017=;\252\026\275q)\021=&\235\304\274J.O=P\262\364<\324H\361<+\352%\274\323\023\261<8\232[<\2304{\273h\n*\275\030\251\326<\24791\2757\'N\274\277\340J\275\\\372Y;`\260\370<\344\244!\275\350A<=\266^G\275sS\362<\306D\270<\334\363`\273\263\3768\275n\356\013=\237S\250<\371Z\230\274\272\367\250\274\302\254\261\273\363\350\017\275V\213?\275\302-n<\333T4\275\371\024Q;\304\303\030=PB\336<R78\275s<\311\274Z\226\252\274m\206\031=\010\353\275<\036)V\275\326\317*=\276hF;\317\351\'=\006]==\221\243!\274G\3339;\3575\265<\"\231)=\013\371\254<;3\216\274\370\233\256<yj\013=\341\337;=\225\006(=\0002#<R\n\203<\265\356\t\275\243v\245\273\334#\013\273\225\375\332<\200{\021=&\234L=\332*q\274x\\\321\273:\304\216\274g\033\026\275\315r\216\274\373\373\225\274f\222\366<\315\026\232\274\202\030\354<\201_\336<\302iq\274[\332\023<\026\247,\275\206k\254\274\020|?<;)\002<\033\201\014\275 B\272\274\013o>\275\342k\322<N\210\334\273\275\375N\275\210 )\274\236\247\222;x\377u<`\266\251\274\3548>=\277\033\206<\211\315\t\275\322\215-=V;(\275k,\021=\230\327\350\274Pt\371<_\033P=1,\023=~0\006\274\231\212\355<\241\010\037\274%\322\377<+\0230;\377\3068=0\025\002;\330o$\275}\330\244\274\322WN=\342\241\020\275\341`\315:\237o\217\273\372L\201:\222n*\275H\3151\275C\304F\275*T\371\274\307@\'=s!\334\274\265\363N<\014\261\317<_\350\034\275z\232s<\363\367\003\275\342\203\000\272\356\367\210<\316U><\2779\263\2748\026I=\325<\030\274\341r\"\275\225\242\223<\264\262\253\2735\277?=uhV=\251\221P\275\266\030\234<\201\234\253\274\205M\265<\"\355\236\273\221\321\210<\254eK=\201)\003\274\246\274#=Z\315\220\274\020P\361\274w\036\277;\311\22578\377\265\304\274\276\323==\243\306\327<\004<\020\274W\234%=\233\003==\"\376\236\2740]M=\361\032#=t\326\232<C\324\276<\242\020\304\274w\017\233\273\233\244\210\273\240t\"=!\341\'\274\305\3626\274t\214\211\274F\320\031\275\372\273\037=\004\030-\275$h\303<\347|/\274>\330\371:uc\034\275\2521N\274\372{\201<u\213\222\270\225#\223\274\213\376\020;\224\377\331<I4S=\364[\236\274/d\027=\304\357\372\274\270\205 \273D\324\234<\361TU=V\001\002\275a2\027<JX\037\275\323\367\014\275q^K=\357\357@<>\341;=\244>)=\025\365|\272&\217F=8\2345=G\023\225;\310W\341\274s\321\271;\255\275M\275\234\234\272\274\016\255\272<\247S=<\342)\017\275\031\237\023<~\2574\275\266,\271\274&\351\360\273E\001\263\274\254v:\274\027U$\274\260G\346<\365s\035=C\034A<\211\307\263\274L\377\006=\032\3416<\300\272\004\275\256\216\027=\251 4=\0228\337<\305\037\252\273\335\007\276\274\242\026\351<\220KE\275#3<\2757\313\267\274\347R\246\274d\272&\275v\"\010\275\242\223\033<\204l\263\2740c\r<\035\275\204\274\353&==.&\327;\352\030P<\356B\276;\324\374\022=\202\323==\330\310*<\027l5=\370O\347:\263\035\366:\260\'\n\275\357>\276<$\223\023=\242M\325\274Y$ \274\013\2071=s\321\207\272\\\003\345;6~\034\275B\352\217<V\371(\274u.V\274\035\260=\275XW\000=*\343F<\014\217\205\274Q\277\362<\266\223\'=i\233\260<\323F/\274_\332?=\204\264U\272\267\277\243\274\325\357r\271\002\241/=\3559\363\273\204\267I\273<\217R=\350y\001\275\007\2327=\020\352P\275(\311M\274D\237\243\273\301W\271\2744\356(\275H\254,\275T\273\206<\347\363\037=\275\305\032<\364yU\275\200#\257<\024\003==\220\027\312;E\326\342\274\352\205\304\274;\361\031\274\270E\027\275CM\007\275\227\322\260<}=\332\273U\344T\275\300MQ= s\310< |\341;rV:\275:\010\315<\004\251\026\274\3230n\274df4=\203eB\274\372\233\027\275S\210\203\2741\375\323\274\275l\206\274\021\3613\275\007\205\270\274\322\261\372\274\256\3766\275L\267\246<Y\232 \275*\312<=44\037<z\253P=\264\326\032;E\274\231\274A\241\"=Y,\010\275\243X\337\274\3118M=\234\276O=\225l\263\274\177u\231\273\304\017=\274)\\/=\247ZJ\275a~\033\275W\343\3278e\345\331\274\255\'\205;%K\017\275\233E2\275y\314U\275\200L\026\274n\t\262;\273\247\315<_$\204\274*\357\307<|F\001\274\310~*\275\33627=,\234\362:\342\304\r\275\227w,<\254+\272<\210\325\002=Db\000=\230\304%<\332\006A\275\034fT<\203C\316\273\021\355\246<\333\363\306\274\260\255\034\275\311\351?=0\317\006<(\273\263\274si@=\"\037>:\262+\362\273\371\262\270<\351~I=\300?\212<G\200!=\322\237\003=\214n\n\275\004\231\350\274\216|(\272\026\311L=\217/\247<\344a\276<\272\350\314<\354\245J=\021\316\274\274iQ%\275\021\351B\275\237\033?\275\306\215\323;^\332\210\274u\257\022\274?M\205\274\314\331\377<\326{1\275k?\r\275f\350+\275\264\375|\274>]\316\274\235\2533\273\273U3=/8\367\273\250\301 ;_#\211<\253\030!=B\212\351\274\002\356\016\275\272!3=\345\254\247\273\373\333:\2758\3735=`\371\330\273\252\007\020<\360\033\005\274\273\2538\272\217\322\'<\'U+\275\231\233\303\274\232\006\000<Y\343\206<\201\274*=\022=#\273\031\306%;\366B/=\023\037\216<\004\266.\275\350kA\275\017\336\266\274\236 \032\275\002\230\204\2714\361\221\274n\2754\275\352\217\332<\025\362<\275}\007(=\322\205Z<A\3234=d\264\r\274\225\310\261:5 x<\235\222D<\214G\034\274/\237\275<8\234\001=Q\367\356\274\3250\017=x\210\025=\306:\353<\257l\341<\237\255\211:z\266\333\274\307\217M=\227Q\346\274\376\210c\274\361<\231<\031\201\360\273\242\2255=\202B\352<\251[)\274+\334\244\274\226|\001\275\271\343H\274\202\207\217<\360[V=\336v6=z\360\211<\251.\366\274NF\326<\236\237:<\351\205 ;c\242,<\243nU<\270\275\357\2744uH\274\223\325\023\274L\371\263<p\312\321<\310\331\231<\320<\362\274x\306\010<\n\311\311\274\254P0\274\262!\217<\350\016a\274\331\245\022\275\252i\276\274\214\230\n=<#/=\340\254\304\274oH,\275>\r\247<\361`@\275\031H?=\023*\277\273}\3031=\211\263\232<\306YU\2715\003\322<c\234\225<\274\375A:\355\337\315<\351\365\270\2722\206y\274\325:\314\274\301(\205<\355=\236\274*\335\257\274\3348\372<6\2263=SB4\275\230cK=\343\345K\274u\240\t\275O\302?\274)\216\n<\307,<\274\n8\033\274\250\360@\275W\2250\273E&K<X$6\274+Zt\273\253]M\275_C\226<\331\211+9(\246R=DD\236<\362;\246\273\203\313\221;\001\205\210\271l\252\210\274\003\231\220\273\024\376:=\003\323\034=\227**\275\225\317&\275\202y_<\353\350J\275w\372\360\274\251_,=\367\3137<\036\343%={^\016=\271B\263\274a\315h\274\334\036\177\274\007\027\300\274\224\346\024=\271\264\002\275\361\227\216\2743\035\375;\364\346#\275\344\330\344\273\330U\372\274\321\375^<\321C\227\274\000\036\332\274\3120\002\274\365Z\304<\251Y\317\274\220\254\'\274rIe<\235?\331<\236\334\030=uE\364\274<K\354\274\221\355)\275{2Q=\031\275\n\275Q\262.\275\210\256F=\371\027\327\274Z\337\354<\206\313\030=v\263\007=\330\271R=\203\032!\275\\UL\274\257\375\003\275\314\371&\275\014\201\342\274\210\317M=\022}\007=\252\222,<\333\257\260\274\372V\006\275\370\372\353<\225\"\350;\235\263\326\273\304\036\201\274\221\226\321<\211\275M=\253V\257<\321.w\274-A\336<v\276\212\274\224\365\326\273\021\236I\273[3\353\274\203\223#\274b\347\002\274\246@\313\273O\250U\275d\023}<\014\322W<\322n\033=r\177&;\347[U;\313\325\032=/\257-\275\241\320\016<[\263\312<\304H*=gO5\275\355\021%\275x\276\376<\032\342A=\253I\027\274\245\275!\275\271\314\242;\347x\226\274\\\203\301\273\232\276;=\010-\313\274\240\237-=\253\r\263\274\211\315\t=-\214\364<\250\245\235<\23708\275\274\223\333\274u V=\200\363K\273\242G\344;\227\250\023\275\032\020A=\370\221\266<\251\217\r=\013XN=\273W\323<n\3257=~-\366<_\266E\275\217\306 \275\247zw<\337\211\213\274\303\354f\274\025+H=\355w9=\320\223\211\274\256\303r<Z\206[\274\330,\023\274\202\211\316<\254K\227\274\322 \221<\222\023\275\274f\251N:\023Y)=\014\t\240\274\276\243\231\273\014s\205<`F\250<\220\221I\275\026\216\023\275\337\001\277\274KW ;\354`\355<\352T\013\274{\247\363<H\242\250<b\363\036\275\314\337\331<\275\347.\274L\335\366\274\267\034\023\275|\272\303<|\021k<zjL=\305?\014\274l\3516\274\355\301\242<\261\371\254\274Yv\366\274\246]\206\273\207f/\275LUS=\"\250\325<\032\377\253\273w\023M\2758\353/\275\337\263\017\271\037\206\270\274\274\323s<FR\010\275\217mS\273\333\214\r\275\356\262)=s\207M\275\312\236U\275\322\\a<d\242\243<\304\240>\274\223\255\002=\'\rz\274\203\352\343<\303\352\234<s\201-=t>\260\274\306V\026=DV\313\274Qp\275<\013\003&\275QCL\2754\256L=\020\314\214\272\341\261\037=\351\377\t=e\214\037=\027O\256<\370q\"\275\254\"\315<\346\317~\272\241h}<,\017\223<\312\221\307\274_I==\340\321!<\017f\n=*\016\007<\254\340\342\274\261\264G\275\337a\373\274\347\024\020=^\366\2707&\302D<\377\276\005=ZY\177\274uN\347\271^\240\266<\304\360\256\274\000\243~<M\r[\273\337\3665=\203K\032\275\010n)=\014\321F=d\252\300\274\326\200\240\274-\002\016\275\310q\021<R\0172=8sK=\000?\322;\014u\033<pl\230\274\255;@=T\032\303<\277u =\316M/=\212\352\342\274E\233\201<h\010\324\274\340%s\273(\0315\275\304\231\'\275a#\"<Pv>\275\036\362\357\274\026V4=\264cG<\\7\t\272dN)=\332\016\351;\270\010J=t\2465\275\027\313)=\3512,=t\357\024\274=\300d<\231O=\275 \035J=F\200\306<\247\267\326\274\311\360\004=4\331u<(\247V=6\207\225;8\007\010\274m\245\000\275c,7\275[|\216\274#\227\201\274H<\223<\347\035!\275\001sv<tt\357;\224O\245<\177\3756\274g\344\'=\357\222\020\275H\301\324<\207\200A\275\331\351\017\274\3378$\274\333\336\343<T8\327\273?J\246\274S\334\320\273\214\350^\274\234\034\306<\366\034\222<G>\035\274e\277\360\273VK0=\204a0=(\030{<\206\262\354<<\225\035=\314\324/\275\316\225\216<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\230E\020\275*\347\254;$\252\033=w|K<\326}@=\034\003\322;\227l\037=\370O\r\275f\344\244\2735\\4;\244\263\333\273N!\364<\025\355\036<f\003\255\274k\225\027=\270g;\275\243\230G;\303\265=\275\372\321\342<\314\014\031<\260\016\221\273\005\366F\274\231\331\261\274\337\031\n\275-rJ<\370\301\340\274q\226W\275\236q\363<\271\3730;\024B$\274\306aA<\232%\250\273/ \237<\034\272\030=q\003.=|^\360\274^=)=8\033\033\275M\351s\274\275\026\303\273\241\327\002\272\215\377X\274\374u\233\274\3549A=\347\225\370<--R=\2500\307\274\210\372\361\274\374K\r=\274.\276\274\313!2;o\267\246\274\360+D\275\271\215G=\262\007\374<\217\r\205;\3448\t\275uC\364<\225\221%\275w\247\360<\020\n:\275+\345?=\273\315\325<\253\313\277;S\202\315\273\203\306G\275\0024\002=@\0275;\336v.\275\002b3\2744\265\"\274\3415N\275JpU\275\316\256\021\275\322E7<\351\377\017=\221vV<\210\010*\274F\030\001\274\356\325\336<g\244$=\372^K;\332\304\205<\274\006\306<tu\336\274\275x\007=@\333\273<\222z\025=\212-\221\272\320\211G\274p\316:\275e\222\025=\373\303\006=\206\t:\275\375\021\000\275@\331\235\274\234\242M<\233\203:=\233\346\3469\366\304\000=\276\rC=\037\261?\275W\2551=\321\213&<Ci\332<\277\210\223;}\224t<E\017\302<\007\347\364\274\254\265 =\243\272\303\2743>\333\272\022s\n=\'\'\253<=\227\005=y\034Q=\371M\212<\010P\021\275\250\036)=\335\032T\275\210n$\274j\214\202<;37\275\265\301P<\234\226\027\275\253\005v<\323Y\017=K\034\244<\021\246\337\274/^\311\273\373\305F\275\306H\022=\235y\307\274\333nE=r\271V\275\200\256(<\377]J\273\263\262E=\017kC\274\213x\033\275\315\201\001;B\005V=\303\257.=xHB=\213h \274\220\260\365:\263=\364\273V\241\332\274\312\302C=d#/=\341~\233\274\203\211\211\272\260\343@=k\274\327<\006U=<\202&S<\033\301E=\321\205};<:,\275\313G\007=\353#)=\311\341\031<\360\006\t=\302\345\254\274\257\013\363\274~c\020\275nl#=\036\312\000\275\244t\254<\304\035$=1\272+=R\200y\274Du\005=\323\2548=\211f\005\275\261%\306\274\272\026\344\273\240\010\025=\213\000d<\244X\272<o\310\035=\325q;<\253k\t<\260\361e\273\312\374\224<@I\023=\010$\370<\242\2667=5\203F<\207\340\201\274\226I\021\274\311\033G;\206\024\310<\300l9<\335\353>\274\260&*=\003\013\004\275\010\2056=\2525S\275\177\225\025\275V,\336;\252\033\037\275\001\315A=\231\032B=@\210\310<\225\356\206\274\034\350\277<\322\260S\275\266{\255;P\270\'<\223\037]<\\\216;\275\023\264\264\274s\301\025\2755\372h\274=S\024<\207\241+\275\375\336\272\273}JV=\307ut\274\036\214N\275F\277\233\274\354\270\226\274JKD\275G0?=\324\212\375\2733\303\033\274\226O\016\275\033$\277\274\032`G=\260\351+<\266\0136\273\334\305\202;\211\365\030=b+\037\275S\350\264\274\355\013\344<\335\207\r\274Kb\014\275\206:\373\274\365\254\t<G\276(\275r\004\337\274\2636\237\271Xa\007=\345\3515=\033\000\'\275\000\327\255\274\2534\346\274/\202\322\273V\220\014=\035\360K\2753\353\342<\312\203@\275\250\332\203<<|\025=\250\002%\275\276\"=<\331\036\301\274\224\0028<\262\351\343;\340V\201\274\337|9\275\235<\244\273\232\370y\274#\362\350\273\211T\007\275\223\031\027=\320\355,=\346~,=\331Q\020=I\004_\273\306\324\333<V\201\357\274\270\215\220<\306\230Y\273\341zP\275p\233*\275\367\321\220\274\226\242\332\274\201*M<\371H!=&fU=\n\277\022\2758j\023=\257\247R=\350\032\030=\357\031\017\275\323@\242\274u\2117\275\\\005<\275\367\016\266;\330SI\275\254L\267<\210\210C\275H\273\366<\214I/<+\"\270<t\027\t=\234W \275\227\341\322\274\227\262R\274\220\324\276\274\177R\205\272\306\212M<\262\310G=\021\002S\2753j\344<\007\013I=P\222J=\005[5= (\027\275\313A4=k\3003=\262\224N\275\003\365\234\273\017\253\016\275\024\366h<6\320\036\275\237\000D=}C\352:I\350\371\274aO\373<\226s\003<\317L\323\2729)\033<=.\334\274\321\221h\274\253\325\266\273\233g\206<p\2342\275d\274\207\274\002\0147\275\322gS\274_\241C\275\215\211\025\2757\255\210<b\317K\275\210iN\275\037\376h\274\367\345\027=\270\004!\274\217G\320\274h\252\305\274\247\301\036\275\364e\367\274t\306\001=\'o\272\274n\344\331\274\224\023N=\332\265\276\274\231\211\206\274\003\377\265<\245#\214<:\2011\275*\027\022=\257\335\242<\022 p<\361%\374<\326\216\333<\370\211==\223\202\373<!]I\275\366at<\035GM\275\037\227\035<5\035\234;\371wF=\333\256\023=\356\241\037\275\353G\004\275tjW\275\252p\372<\253\273\264<\215=\313\274^wJ\275\311\236D\275\245\016d<\364\263\020<\373\274,<[>\024=\215\330,\275\303\307\235\274\234\262Y<p\313?=!j+=\300D?\273\027\223k\274_\223M\275X\302@\273\300@\311\274%\007\374\274\321\272E=\3126\025=\366\206\262<\247K\243\273\032\377\243<\252\000\030\273\320\035\007\275q\\\332\274G\243\307<\r\000-=\372n\224\272v\277\213<\010_\223<\221O\334\2745U\r<\326D\030<\320\'\361\274\243J\007\272*\327\311\274&i\"=&\000O=s\305\000\275\026\331\240\274\270\343\372<\364;\337\274\350\003\340<\306\322H\275\014r!\275-\356\024=X\212@\275\033\034\n\273\177\032*<\317\327\351<\264\222\311<\277v\002\275\321,*\274\305#)\275\367!-\275\270\335\333;\315\237\253\274g^\024<\254K6\275\225\377\314<\016\337J=\272\366\314<a\275T\275\2756\251<R\243\257\274,\214\327<\034\3615<\312z\301\274\232\252\263\274\240\372\356<\264\332\316;ij\323;\016k\364\274Dr\324<\341P\223;Q\205\205\274\016\200\003=~\277\241\274y\250%<\303\323|;\226~3<mv\033=\223f/\275.^\264\274\251\325\227\274\214\313n<\372E\334\273e\242\304<H\213\017\275\246\224}\274\310\234Z<ZK)=v\001\356<\\\317\322\2737\345\023=\034\214\"=\200Z\014\275?\347\264\274\003\222\307<]\316\200\274&\264\366<\220\345\004\274\303\263\371\274\212\303_<\320\n:\275\'\002\035=1\241\r\275\032\223\357\274\214((\275\002M\032\275]\3662=\236\371\232\274\346\326\"\2738\327\031=p\3143=\026L\244<\017\000\253<T\274\330\274\210\257T=\300\000&\274%]\000\274CD\202<\304\336\236\274\245\351\334\274zm\024\275\013[\305<r6\2739\365\314\226\274V\267\351\274\267\216\\\274a\267\005=\216\"\220<m?\272\274\306\332\261<\370nF\275v\376-;\305~\374\274\362\343\020\274\277l\217<\203t-<\205\231B;|\354D\275q\304\243\274\221\276\005=\222\253-;CG\344\274&\000T=w\202X\274/\306\257;1c~\273D\352\200\273A\243%=zC*\275\320m)\274|\000a<\324\200;\275\260\0130\275>\234U=v\177I\275\n\261C\273\316\342\305\274\351v\000=\3631.\273H\271\001\274\367\n ;R\021==0~\304;\360\221\025\275\036\033i<9\250E\2755(\377\274e:\322<\306\242 \274j[\034\274R\372<\275\224)\006\275\232`t\273\253\r^<\2574\305<W\315\336\273Dm\372;\177\022;\275;\265K\275xW\021<\357|V=\201\374!;\221d\254;)\270\227\273\005\013\245<\227\031\376<\353<J=\337\362M;\201\220\246;\350\013\014\275o\237u<\020\305S=\3444\036\275\214\252\244<X\212\340\273C%\000\275\301\257\010\275\324Y\352\274\022\3731=|{\352\274K\265\346\274 \013E=\265\225\275<\005^N\275\n\212\246\274\335\272(={Q\374\274\360\033e\274nI\026\275\030=u\274\313\332\337\274\342@j\274\231\374\351\274\010(\214\274^\342\034\274\224P\013\275\026=m:\000Z\233<\322\3010=\265C\247<aR\211<\240\245 =\236~v\274\352\302\241<\204\t\247\273\354\030)\275\022N\"<\377\013\261<\261\t\347\274\272\314\014\275o\2669\274\225N\312<\217\204\346\274\034NM\275\327a\240\274\244T\303\274\356\272.=X\244G=\377\370\220<\340\335\221\274\276\376\376<\326(\373\274\276S\272\274us{\270\216R;=\213=O=\271L\310\274F\217\336;ra0=G\346\363:\304\374\222<}3\017\274T4\353;\256)\016=\374\260\260\274G,\212<\334\345&=\\\346\023\275\014\033\302\273\247\367\362<\305\021\253\273Z\354\260<poO=\033u\005<AB2<\207K\342<_x\273<\301\\M=\370\323\270\274\351\332\306\272uc\205\274\251\2243\275\301\235\367<0\352<\274-\225\351\274DQ-\275\004<\323<$C&\275\272\245\363\274\371\2758\274g\256\367\273u\305`<\367J\007\275,+\303;U\210E=Y\356\311\274\"*Q\275aT\"<_\264\005\275\272R+<\242\230\210<\251\020\"\275\303\"O<U3\021\275a\323B=\321LP\274\262\361\352\274\307\336\334\274Z\2617=N2\006=\341\204\204\274\214\360N\274z\236\\<ev\234<}\025;<4\034I=\273(S\273\355\267\'\273X\267\256<\267\363\354\274\330\353\270\272\201A\310\274\342\347@=\246\332\273\274\271H\222\271\267\372\356\274\247\271\221;\017\2033=\3263\024<\332\016\331<\356\244\335\274\344\261\237\274\240\220\231<\225H\236\274#+\t\275\317\020U<\377\254&\272b\311?<>\364@=\271wC=\204M\233<9\257\314<\210\225&\275\354O\354\274#\017\300<\333\301\267<\023\305\375\274x3M<U\221S\274\3049\212<BF\217\273\210-\006\275\300\363\265\274\'\372\253\274\240\2338\275^I\215\274\365\335`<QH\241\273(8\006<}q\367<\207\nD\275x\')\275\221c\306<\213D&\2757\3426\275C\366)=F\215\231\274\224 !=\262\264\343<\313\252\276<gx<=\216R\001=T\245\250;\334\"\035\275\177\302Q\275\201\022\002=\004\236g:\302\211\200;\0220\203\274\221\255z\274\257\301I=\232\365O<\221\337\001=8\331\227<u\275X\274\273\314\r\274w\221_\273\353\"\204<@\376#\275}\340E=\333\024\246<x\364\270\274\375\371\313\271\311g\327\272\304\352\020=<\326D\274\233>\007\275a\270J=g\272\211<\344YU\273q+O=\260\213\010\275\317\354\255\274`\231\000\274\262\200/<\014l\206;\377q\356<\210CB\274\206V\347\274\221\302\247\274[\002\213<\303C\341<\3015\232;\017\273\256<\315\031\017=\214\022,\275v\371\267\271\r\220r<\177\325\032\274\274\010A\275\341\374\r\275A^\201\274t/\215;\227\242\317\274\223\"\242<\245\336;<JZ9<\264\026O<zz\n\275\025G\003=\357%\006=\224\320\230\273|V2<z\275&\274\261\332\257<da\002\274\360\304h\273\205B\352<\360\322\n=\r\254\207<\335\327\347\274\330\363\037\275x7\203;\267h\222\274\306\020\034<T.*\27466\363\274\352\312\010=>\212\262\274\274L\344<^F\364;\372[\271:\374\3320\274\214\2676<\221\377\r=feQ;O, \273\256\017\021=\207\202&\275\216)&=\n\365P<S\236?=P\321\236\274\010\267\204\274\363R\344\273yO\267\274\344+\270<\370\271\007=,\311\017\275\256E_<\271U\020\274LN\253<.\311f<E\365\363;>\025A\275k\343\032\275i\217\257\270\230\037W=\302ro<\006y\r\275\374!m;\"t\013=\270\361M\275\335\226,\275\225\372\263<Y\331!=\257\202\'\275\234\r\000:\033\311\002=\220\033\213\274G\273&\275\222\352\255<\362\303\357\274\177\211W\275\221.2\275%AD=05!\275\234\013\024\275\3243\244\273\002\350\202\274\352\2312<O\345\270;0\277\n\274\230b\263\273\363Q\370<\302\325\240\272\375\252M<\363\354/\275a\333\354;\372\375\026\275\354\356\223<\000~\027==\222P=j\274\271<uD_<\250)G=\277Ht<\246\305\344\274\262g\026\275\301>\365\274\354Vm;\366\341j<LU\363\273l\332!=\224m3=\005\335(=3\032\021=\243\016*=\304\'0\275\254l\230:H|P\275\361\331C\275\306[\036<\320\355\225<\217\322\034\275@JI=<\235/=X\235\272\274\272\300\363<\211\2417=\241~\004=h%\252;=+\370<\340\007\005\274J\313B=0ID=v\372\375\272\035*X<\345+C=\0262U\275m\222\035=q\221\016=\034\326\370\274\366\375<\275|\026\242\274x\263Y<\315\235\016\275Q\267\t=\030\200\367\273XS\326\272\253\316/\275\314\321\006=\315`\231<U/\010=p\017%=M\301;=\304\311 \275|\303I\275E8Z<\324\326\376<Kr-=\31585=6\211\037\272\255}\356<\344A\224\274\005\250\016\275\r}\357<bA\346\274\\v\315\273HV\310\272\027\324\353\273\340\177K=2\366\367\274\256L\201\2737oz<L\331\325\2746\335i\274\254\264\331;\216\300\215<\224\002\225;\t\255/=D\260\273<\342\302\341<U\327\354\274\251\033\310<\013\277\027\272D\273\264\274\317\234\022=\031\300?8\336h;\275\016\325T=[;\367<w\207\211\274\000\277\237\274_\342\236\274#\271\230<}\213\227<\314\270\204\274\335\t8= \303?\275\265p\344\274\002\301L=\302\036\010=(\3063\274zL\241\274P\205S\275\021U\213<\030\244H=fZ\004<9\333G=}\313\246\274R\307B=\223\322a<\000\254)=\241!\324<\210\325P=\262v\203<\330\210`<\202S\313;\261\030\374<\263\307(<\360\265?\275\234\335\000=\270T\032\275\305M\321\274\245\3054<\241\365\314:9m\207<\004\354\027:Q\241\025=`\307\202<\020\262\326<\244\336(\275\000\374\t=\264\376\373\274y\'\006\274\030yr<\n!\r=\036\377\342\274\030\325\336<qU\005\275\337\002\341<O\275P=4\355>\275>p\240;|E\320<\2652\030\275\177\314F\273\243\220L\271\360\027b:^\314\332<\335\016\207\274_\216\241<\222\204W<\345\017J=>8\361\274\256\322\331<\301\032\366\274L}\374<B^\014\275\036\007j<\330\002%= \326K=%\364\370<6\037\003\275\240\243\370<\277\246\317\274,\230\231\273\225\345y<\354-\035=\351<9\275\226\354\204\274\031\263\006=\352d4\275\237=\247:\3729S;\243=/\275\352/\375<\346\375U\274\357\343\372\274\247\233M=R\302\271\274\013\004\371\274\250M\036=\365\227\261\274s\200R\275dU!=cj\016\274\215\227\216\274\325_\322\274V\006?=/\312V<\016\352.=`\232|\271\027\021\303<W\256\001=-\276\004\275|\203\333:fG\260\274\364:A=\212 =;\335\203\267:r\374.<{\235\272\274\243\346\004<7x\303<\26684=\220G\035\275O\216\252<?\336!=Z\242m<\353>D<\305\321b\274\257J\263<\212\032\207\274\340\257\031\275WI\016\274p\211\027=\322e \275\004br\274v\335/\275!\344\327;0\032\277<A8\024\275QH\030\274{$==G\n6=\nV\200<+\335\344<\014\241\232\273lNb<@HQ<\327\276S=\222\240\030\275\271\224\'\275\377]\274\274\306_W\275\271\302\274\272\2545\022\275\335\2748=\002_C\275B\010\016\275\251PW<W\222A=\356j\360;c\341\267\274T\315\253\274\337|\316\274h\300*\275&\204v<\003\270H<Z\327\004;&\313\371\2743\341N<\026rL\275A\"<\275a\353A\275=\030\361\274\357\276/\273,\235S\274(\030\265<\3606\261;\235\304b;-\310\331<q\324\363\2744b\222\274V\270\356\274<\200>\274\252\305G=a\227\242\274\034!\242;\362\"\"=k\\\016\275}RA=\273\210(\274g(\366<\273(\262\273\220\225\217<\270\255\006\275\005\024-<\363{\036\275b\260\257<\0211\214\274~\257#<!A?=\002\024*\274\220]r\274\210\251\263\274C\002\343<\247\355,\275\225\371\354\274\225k#\275\300\223\331\274\207\325\025=ss6<F\203*==\364\035\274\002\253\000=\\\2404\275N\265$\275\177)A=lm\204;\304\310\327\273\033t\327;+\306N\275Gt\000=f\316\300<\034\'\256\274\033\357B\275\364\325\376<\305\324@\274c.\001=M\0011\274I!\364\273\\\031\000=H\205\026\275\302\\1\275\247,\335<\3064\240\274f@!\275\035,w\27442\n\274i\262\020\274\244\n\311<\266\235\006\273\316\315y\273\372\361\353\274\217<8<\244N\331\272\312AR=\307{S=\002\347\274<n\2254\275+\226\034\275.SP=\263\363\220<v\337\332\274\227\220:\275;\200\344\274 \310\006\275\316\034\375<\236\352\250\273f\3041\275\272M\376:F\023s\274\247R\227\273\343\363\035\2751\016>=_Q\035=5tt<\374\006B<\030dQ=LQ\357\272\247\322\314<\306\266\036\275_\250\267<\372\322\033\274g\224\037\275E\307%=\003\200\001\275\265>\320<\371v\272\273\332\237\355<\256\0041\275=h!=\260\214\017=l\266Y\274\337\216\t=n\361\254<v\324P=\357\242<\275?\240T\275M\343V<{\222&=\366\225\006=\332i\035=\r\"\235\274\222eD=\326,\"=\006 \244\273\004\305\231\274R*J\275\356fr<L\275\t\275D\365\032\275\304\235N=\014\2769=\201P\203\271\241&\222<]oT\274DY^\274@\357>\274r\271L\275\3345\311<\017\0227<\220\322-\274\036\216\304\274\354d\305<\0208\251<]\014\033=Vu\342\274\230&C<\254\326\006\275\033\366V=?\016\305;\013k\216\274?4$<\007\372b<8A/\275\314(5=w\307\277:b\005\007<\257\216\370;\2354\354\274$F\373\273\030o\231\274/\372V\275\036T\245\274U\371\001\275\371\337\226\274\250J)<\004\001\365\272q\235S=\366\337\324;b\364\250\274\'\377\236<IEm\274\374V\032=0\206\021=\036.B=\250\361 =\235\245\270\274\371\270\020=\366w\245\274k\2162=\023W\020\275\n\326\005\275s\254\235\274+\3717=\306\321@\274Q\026h<Z\030(=\320QN\275\013\375\317<\000\250\027=\020\033^<\263\022=\2753-8=\327H>\275\\<9=?y\236\273\377y\315\274\223\230B=d\3639=\320y\024=\221\265\231</)\344\274]?y;\252\304|<<F\013\275\t\224\t\275\301\266\242\274\310\334Q\275\025F\314\273\315W#\275\325\221\003=\3675Q=\277\320\2369\231\204:=I\372\357<GT\r;\334AR:s\261\006\275\027\363\240\274\207~\306\274\234\2077<\371\205|<\263\2221=\360\223?=x\037\227<\361\335I\275\267\023J\275\252=T=gk==\rC\004=\315q\005\275\nc\347\274\'\027\016=\006\372F\275TsD=\3060\347\274Z\270\014=\264K<={9\255<\206\005\327\274\341\243m<\202\204\006\275\037V\003\274\005m\300\274\016\010\372;L&\340\274\267/\t<$\345\"=\273\2213\274\314\027\375\274{\0160\274lV\376\274\004ts\274\235|\357<\221>\256<\223\366#=>N\2049\264\244\300<aV\010=\353\275\352<|\255I=54\032\275\265\226\366\274q/!\2758\272O=\305\2761=d\2258<\216\335\273<\251\354\206\274\344#\256\274\016\262\n\275*\3010\275q;\016=\202\363\016\273\27691\274\016s\371<3\233\365\274m:\037=\016\246\303\274\352\036\232<O})\275\214A\231\274\027\233\244\274\025j\034<r\323#\275\370c\234<\256x\210<Dp&=K0\267\2745\036\200;\377K\307\273\320q\262<\241?\331<\341^\224\274\330[\316\274VYB=\177r\213\274\311\220,=@\034\231\274\267x3=%\226E=\243L\361<\314\000?\275\026o%\273|\3076=Nh\367<\350\237\315<AH\317\274I\322\243\274\357\245\333<\214\267 <{P#\275>\302\366;\303-\215\274\345\311\363\274\317jQ\275\375\027J=\372A\307<%oT\275\330I\253<\252\257&\275e\000\351\274\3567-=]\230\030\275\273\316\033=\334\356V\275\036\232B=K+h\273\231\351?=\231\276\003=\345\026D=\307\310R=\273LV<\363\003\330<\005=D=\2270\301\274\233\200C\275U\262\377<\361\216\205\274\206\322\004\275\216uX\274\230\343\301<S\317\017=]\366\375;p\032K\275\206\237\213<7\327?<\335\311q<y\236\026<\023\326\321\274\312\311E=#o\227\274w\247?=7cD\275Z\376\021\274\262\237%\275\036\221}<sF9\275\331z\327\274\0101/;#\303\222<\213g*\275\364\377;;d\311Q\274\356\364J<\257\324\035\274\010\3311\275c\371\315\274\343\356\027=C\021\366\273h\300\022<\362*D\274\374\270\005=mzO\273\347m\261;\'\024p\274\250\006\226\274\265R\024<BL\026=\377\266\334\273\367&\372<\264\1775\275\316\364\361\273\202s|\274\216\310\005=\376\325E\275v\202!=\203IK\275\306F\200:\'\t\320\274P\324\007\275\204\314\006\275\267P+<\224\352\211\274\352\241\313\274_\001\023=F\342\005=\306\021M\275\251\203\337\274\235I\226\274\361M\027=\260\373:\275\320u\031=\034\363\004\275\020\202\034\275\301\3542=\216k\013=/\2037\273\352\313\025=\217\026\311\274\342;\252<\240\023\036\275\200\235\347:\271\240\010=\256&P<F\321\t\275\217\3772=m\252\234\273\310MR=\235\316\210\273\005\3210\275p\245\'\275\002D\224\273\273(,\272\206\316\323\274\251\"b\274\227T<\275\275\226P\274\016\036G=\275\0350<\217\241\032=D\235V\275\253\231\037=\277\021\004=+N&\275\260\307\336\273T\352\227\274\007f\006=ya\n\274:\226@\275\340.\207\273\r\026\024\275I\370\033<\035M&<\034\357\211\274v[\365<\016j\"=CF\335<\276\220\037=M\247\035=\351\2254=\221\321-\273\024\234,\275\302Jt\271\0231\001;[\344\351<\020\\\033\275\361\322\030=t\332R\275\234KC8sh\252\274\324A\251<\035\303M\274\221;\r\275\330\020\330<\007W\334<\274\010K=n\237S\2750\355<=~\271A\274\335(\232\274\370\351\360\274\361\321\275\273M\303\224<\316\321F= Y\017<\016L\323<\355\353\267\274\207lO\275\350\005X<\347\200?\275>\201,\275\334\213\334<\345[/\275v}\322<7\375\300\274\377\306\311<V\326M\275\263\203m\273\357\227\010=\033H\225<x\004]\274\032\217\032=Y\006\250\274\302{\032=\331\336\023=\334\212\274;zr \2756V2=\023\243^\273\346\313\000\275\022\033o\274oc#<um\365<\375M\353\273\216\334\032\274\032\023F\274y\306\221<\310\222\347\274\370\241\212<\306\236\371<\372Q\037=%\032\204;\021\3770\275\343\207\027\275\301\337\005\275)\2629=)\332U=\231\010\267<\003\255I=\317G=\274\304\005\016\275\354\227>:\230>1=\010\032\312<\222\244\225\273q\332\267\273\367o\326\274\250\362:\275\267\247y<\027#\000=\317\244\r=]d\"=b\335\021\275\344 \230\273\344\335w;94\212</\222\332<\317lW\275U\332\251<\275\217\033<\275\303\334\271h\3517\274\327\227\275\274\010T8=\264\"9=\363VG=\234\3647\274\313\216F\275\365\362\010\275\374ge\274\213\247\335\274;Q\331<\374##\275\010#\216\272\322!\344<\327*9\275-\216<=\0240\240<\034\253\303<O]-;\r\007\031\275\255\356\265<\010k\375<\223\213\n=\001\311\352<&\204\312\274m(H\275cRC;\321\316Z<\214L\203\274\212\010H=\334p1\275\306\340<\275\222\374\346<\322\351#=\215\300\306<\020\3761\275O5\370\273\200\217P\275}q\206<h7\375\274)\347\244<8\264\002\275\214\374\n=\013\3515\2754[\024\274\236Y\361<\337\306\337\274\371\205\303<\036\224\270<~\200r<^i?=\274:&=\300\334\350\274D\330\244\274\336\222\340<.\220\275\274\360\013\276<\375\306\027\275)\266\010<i\024!=\225X=\275\332\340Z<`.\r\275\021}*\274=\236\226\274g\322\013=\327Z\177<M|\230<\301L%=\226X\003=\201\334\203<-\362\203\274\303\007\031<W\177\026=i\016\333\274>\'$\275\272\001\206\274\274\t(=\2432\200<\223\200*\275\251\003C<\363\205\271\274\317*\022\274`T\036\275#hG=\317W1=\323\222\034=\263\275\332:m\367\376<\0264M\275\356!\"\275\025BD=\273\335\000<x\350\370\274\2161a<\303B<\275_\034\275\274_\347\010;G\334\356\274\264\'\253\272w\262\004\275G\233\237\274\034\300B\275\224\3419<S}\271\274mS\305\274\240q%\275m\334#=\'\341@=Q\274!\275\237y :\005\330\003=N`{\273N\322\376<\374C\300\274\302tC=D<\227\274\210p>\275=\340\320\274\210?\240\274B{\034=\221+\264\274\267\247\030=\2630\030\275\223\221\234\273\"\346\250\274\021\265\310<%\245%=\315\003\005\275m\024\301<\367Ci\274\007VN\275 c\307<h\\%\275\237V+\275\217\340\027=\220\237.=dlV\275\177]\371\274[E<\2740\343\007\275\334\261\310<d\212\253\274H\003\026\275W\017\234<\236\205V=\304\251\271\274;\375-\275/\010\301\273\262;\025\274c\344\257<dl5\2750\223\021\274\304\250Q\275d+\017\274\\\226\300<\0233\267\273\025\332u\274\034O\372\274\275\330\013\273\227\037\310<m\3033=\316\247\232\273\313\334]<\256)E;b\010\027\275\347\230n<Jt.=\200t\230<\247M\276\274\217\214.\275P\332\177\274\035\324$\274]!\263\274)}\364\274\266k\233\274\335V\337\274\354\260:\275\316P\036\275\253\276\013\275\203\236\013=^q\'=<\025\265\274\000#W\274\226R\032\275\234`\340\274P\355\212\274\337\360p\274n\033\251\2746]s\274\013E\205\273\351VE\275\246\2478\274\332\314\364<B\230t\274\006\231g<\275\353\034=\316m9=\374\230\"=\257\242\241<\340\232R\274\210m\300\274\005sK\274\267\240\230\273\0108S<\035\317\231\274X\265\013==vy<\250o6=\314S\263:\003\352\363\274\301\276\003\275\377\262\364<\340\313\273<`\3223\274\337\364\023=X\'><=L\246<\214\335\262<\211\325\366\273\375\226\346\274\217\036\224\274l;\233;2_\005=Q\373\347\274\267\331Q=\335\362\206<\010\216\317;\347\242O=\2403\030=\206\276\306\274\2578*=\233\273P=b7k<8\344X\274\036E\207\274\327/\306;\274\025\004=\250~\004=\255\274\020<\t\236\352;\037\205\264\274E\376\357\274h\247\247\274\275\217\t=`\236\260<\034\021\312\274D\021\264<j\215\007<\3430<\275s\233;\275\241\217+\272b\221\256;\300})=)\177\010\273c\305/<\033r?\275>4\'\275k\310\023=\023\252\333;M?\210\274<5:<\241 ,\275\326\332!\275\201D0=@\271\253\274\2430\377\273\nH\032\275p\257%\274^\337+\275\326y,\274/\244@\275\200(\353\273\305\340.;\353\363B=\t\250\264\274\270^\271<Z\t\262\274\236\337M=q<\014\274{\303U=\305\201b\274\345\341\315<dw@=\346G\032\275Zo\r\275-4\'\275W\243\344:\022\361\005<I\035\376<s\270\037\275\216;\3718y\210\215\274m\221\324<\364\215\300\274\300J\232<\235q\025=\3057\272<\215\036\005\275\261\254\217\274\005?E=\260\275\006\275gh\306\2749n@\274\257^\252\274\315<s\274\035\221\335\274D\233\014\274\367\216\025=\325?\027\275\353\202\325\274M8\263\274\332\212\376\274@F\333:\'$:\275\303t\206<\341\252\'\275\251v\010\275\242\214U=\250\356\010=\035\004\010\274@P\260<&3\221\273\310y\276\274\036F\331<\257`\257<p\201C\274\023\224\023\275\271\364\347\274I\304\251<\025\221\345\274=O\351<&9\027\275nb\223<*\311\023\275\350\365R=+A\246<\t\243\001\275\207G\002\2744\005\004==x8\275\"\022\356< \307\024\273\n\n\017=\270>\313\274tC\251\274\005\250\024\275\331\201\367\274I\2578\275\213\'|\273\277#N\274\226\357^<UC\021=mdn\274\236\010\277\274\366\317.<\305\000?\275w\036/= \n\336\2742\026\255<\270\200\021\275\376/E=\264\365\372\273/\351\203\274\005\257|\274\033YW\274N\206(=\345\210\"\275;\2162=o\206\031=\004\376\361\273\253\325\376\273\005\310\350\274\252\255\t=`\"\325\274\377\242.=\377\267 \275H\325\010=\314\223O=\314d\277\274\252\353M=\030\3237\275\017\365\004\275\300\016\356\274H\276\341:\367\336\017\275\017\271P=\373\375;=\262\203W=\213eY\273\331\013\000\275\022\026\003\274\354\205\n=\t\251\355\274\022\216\232\274e\240r<9\235\345\274\236y\004=7!\276\273\027\217W<5\226?=\221\3540;\254\315\371<696=\310\362\233;\340-\377\274\235\203G=\231c\257<\037\177\336:\246\205J\275\204G\206\274H\010S<S\233\024\275\310&\217<\270\350\356;1\366\227\272\361\2239=\364\'\001\275<\014\314\274\210D\203\274\210\307\261\274\346\345\024\275\351v.=\3332\341\274F\367%=\242\275\005<\236d\301<:\020\266\2743\317\032=<w\202\273\311\227\321<z\210\334\273\360\255I=\230@\334<\252\313:=\365I_\274\342z\332\274a]\031\274\353\326\016=\261\207G=9\314P=\317\252\031=\007S@=\322\027\327\274\272\006P\275\263\036\335<<L\375<T\346\254<b\324O\275s\014,\275\032z\375\274\376\330\274<\224\004)\275\232\367&=\361}?=\034\300$\275\260\025\343<^r\256\274\220\215\030;\256\2748=\177o\301\274\274\373D\275,X\353<s\305\275\274\221\327\207\274FjI\273\254\207-\275\\E\030\275\255\\.=\364V?<\237\026\374\273\252\344V\274\260\230v<\365AT\275\276\3544\275\271_+=ot\270<-\222\336<A\206\317\273,\372\004\275\267\257\021=\362\252S<\344\203U\275\366\376\257\274\267\177D\2736C\000\275\343<\360\273z5\002\275\320\304X\274.t\022=\3522\216<@\331\262<\024\310\014\274\027O$\275-\346\212;\364\252\251;\033\253v\274\371A\032=\253\034\"\272o\350J<\354\213,<\311q4< \302.\275\034\225\252;o\254\275:\304\006$=\266\3440=mT1=J\327\246<\210\025I=A\220\376<\312\245\346\273E\0222\275\017\030\316\274\014\202\033\275\362\240\032\275\035\245\342<\231w6=\222\203\327<\346s%\275\371\264\327\274\262\251\247;\201\357\005\275\037\000)\275,\tO=\031\266\312<>N&\275i\354\t\274\002\013\001=\320\376>\275\203\223m\274\'t\010\275\270\254\016\2757\033\304;\374\363\250\274\375B\264\274\223\211\317\273w~\360<*\345N\273\272\274\00381\275\234\273y\007\315<\347\315\020\275\303,+=\020\370I\274\326W\335\274\032\207\002\275\004\246\351<\323b#\275\327\373\336\274\216<W=\354\3032\274i\365\006=N\353\023\275\346\367J=\2400\345\274\271>\001\275\244oH\274\314\365\2349\315\317 \275\277\n%\275\246\350;=k\365$=\007_Q=\244\014\273\273\\\304\201\274\345\225\210\272\214\016\270\274\365\213\225;P\213>==\224\033\275\345\223%\275\312$\017\275\250a\t=\343C\272\274\234\243\024=Q[\222\273*\223==\312O\300<h\200\001=2\313/\275$\215\353\274i\325M=\201\240U\272\234\024%<{\r2<\325\206\217\274\2048.=\357i\020=\353/R\275\204`\266<tX+<s\r\354<\0271\262<\271\034\274\274\031\244\222\274\307EV=f\220\033\2750\341U\271\254\260\376\273)RC=\230\031V<\013\027N\275\372<\215<T\365\367\274#\251\027=Z\036\026=\304\200@=\344\217\336<e\010\004<sB\273<\211\327g\274G4\317\274\354\306\004:y\216\005=Fv\034=\246h\"=\253eU=\227\373\022=\017\334\274\274\257h5=\020_\274;\022;4;\367>F\273\367\316D<\253\177;=~\217W\275\0250\030=\203\317J=\235\376\325;g\347\244:\355\n\255;\231\255\347\274\373\270\306<\325\344?\275\237\360\373<\033\251T=\350p\255\274#\022o;\363\031.=\360L\033=\312\274j\274\362\240==\327Q[<G\321\237<\363!\347\274W\007U\275\210\216\307\274\317\004\341\272\t\354\275<\227\315D\275\274\364\037=?\226-\275\321[?=\317\316)=&\006\326\274\330\2521\275\226\241J=O\342K\275\313\023\236\272e\373\223<\335\212\354<\r\025\204<u\253B=$\320\237\274\2524\037\275\022\\,=\274\347\364\273G 4<k\251\373<\2653\'\275\310\033t;\263\304\220\270\314\001%\2756Z\353<Un\326<?\\\022\275\247\001\002\274\241\234\362;\277\345\020\275&\271Q\275ni\332<D5\t=\203\213R\274\250z\240;\210k\032=\036\365\226\273\360\024\204\272\302\024O\274\245^6\275I\224K=\372\360D\274\0339\017\275\035\366!:?t\211\272C\267D=\247+4\275\313\005\004=Kr\324<\262\035/\273\320\026A=\360+M=o\341,<\325 B=\235\3508=\232\001\373<\343\201\244\273\361KA;\007<\004=\371\312-=\331\242\007\275{\207\032=\r4\270\274\221\300\t\274\344\n?\275\317]\024<r\235\323\274\271\307u\274\3249+=\007a\352;\314&K=\211\350P=\264\035\037==\032\001=~\231\337<k_(<Kx\217\274FX@\275\276\377\262<\005p\265<\")I\275u\322(\275\352\274\202<\356f=\275\234\014\337\274`\234\246<\233\034K\275\355\362)=^\242\324\274E\326\001\275\363|\026=+\017?\273(\355Q\274\037F\005\275R\275)=\203r*=u\267P\275\\\202\274\274;S|\274A~==\200\242\225<y\366/=\215\2059;\2129G\274\001W\031=;}\t\275\331C\264<\236\353\350<.#\255:\306u\027=\274+\'\275\323?U\275\340\t\305<\003\256\366<\214\303O<X\234\016\274K\rG=\233\201\013=\346\200\324<\3046\031=NR\324\273P\2314=\235\344\003=U\021\024=\20316\275fuB< \242W\274\236\216\262<k2\260\274kH1\275\304\300\300\274^61\274\314)\252\274\030\340\213\273!\352\037\275_\010\324\272\035\301F\275\002\272\305<K\344&\2751E\026\275\004`\r\275\324\0013\275%\230\372<\035\311c\274\316>J=\374\222\310<\373\263A=K5\035=\234\001\342\273\t\035\002=\234\306^\274\210F\200;\304\257\227\274z\347\310<\3631\247\274\3362\300\271\311\223\362<4\251\332\273\303\254\t=6\300\007=\241\302P=2J\314\274\372+\365<\326Z\245<!|\364;d2S\275\344KF\275\356\265f<\204M\026=\303KM=\026\327\023;\343\210R=\224_\257<7e\344\274DpI\275\224U\252<\225VP<\314\322I=\247\245\025\274\324\336\231<V\366\003\275\002\272*\275u\312\372;v\342\037=N\361U\275\021\350\203\274\270\027\263\274\244\000.<W\370\234<\311[\242\274~\2447=:Y\235<\215\345\020\275/\tk\274\034\206\030\275DL\022\275\334\342\355<\224\'Q\273\215\334\304\274\r\2518;\235\305\330<\310\353\257<\372\356\n\274\235\343;;6\3235\275\246W\232<RE\245\274\204\024*\274w\234\350\274\302g\031\275\262\273\265\273\357l3\275\311=\207<\312\276\321\2746\376L\275v\330\023\275O\365\265<\216\220\323<\2524*=TF*\275\2454!\275\213\376\2578\224\3215;|)\371\274j\006\343;Q\324\376;}\240\002=\350\307*\275\023s\250:\350E4<\365\213\243;\204\365\251\274\221\356\326:0\320\000\275\266\310\013=\342V\030\275\244\374\256<\252>\017=\013jr<\360^\n<g=N\275\356\014\332;D#\t\275\327\002\367<s\264\031<\356Z/<$\034W=\226\234\024\274\003|\027\274|U\237<\367[7=\301\340\266\274O\325)=\017\0060=\341\004}\274\2779\034=\344FC\275So\227\274\200)\220\2745\303\255\274r\330\230\274\225\346<=\303\273\215\273+\n\024=\275\354\255<J\036\344\273\342\341\353<\304\300Q\275\351\025\313<T\371K\274\221\006\327\274!\314p\274\'\250\244\274$*\370\273x,\331<(\037\366<}\037\353\274\001\256\317\274I\250\334\274ti\016=s\361R\275F\330\210\274\204\266:=\250\313%\275\3400&=#\215\252\274=%,\275\363\272\266<\227\350M\2743#\336\274\207\346r\274Am\317<\305\361v\274\020\366\355;\332\'==v\231:\275\006M2\274\273\362\235\2740\371\255<e:\013\275\346\304\227;\303L\240<\235\312\005=\274\273)=\312\263\001\275\360\344\001=\245EP\275\250\343\002\275G\236E\274\362\220r<\377\350\366\274Y)\025=\242Q\227<Dgq<\374\214\001\275\233\365A=\245\255\263<\\\177\374\273\246\305f;]\224-=\237\317\032;\203\033\347<fT\302<+(\213\274l;|<6\356\331<([\246<>-\351<5L\n=\322!\375;A\273?=\342\234\217<\016M\005<\201-\217<\261\"}\274`\334v\274\327V\030=}\2118=\013\345\277<v\277\033=IL\240\274F\\9\275\362\347\312<\277\3731\274\244\013\251\273\320\213\253\274\205T;=\002\315G<\235D+\275\037\300\265\274\333Nc<\004\274\226<\276\2051\275\224\321\203\274\033?&\274U\347\367<n\340I:[\023\024\275\233\225\255\274\201>\267<c5\355\274\273\337\240<qS\325\274\265~\036=Z\306\037\275v\026\200\274\3761\236\274RkZ<\232z\260<\335O};\235\362=\273O\334\\\274Q)\016\275\364\365\353<\305\274\307\274\266\212\361\274\336b+:\305\363(\275>!\220\272\202\357T<$[y\274\022\227\251\274\315\016/<\274q\307\274\240=N=\240\'H=\342\324\366<\237&\034=\310\014N=X\265\363\274O\006q\274\227;N<\224\255\335<Ox+\275\335\222d\274xrR=2\010C\275\255\204\336\274\257\230\372<%\203J\275L~ =\357\311\007<\334#Q<\371<\371\274\213\265\324;W6\"\275f\235\200;\236\207\024=-\020\252\274\303~.\275\314\217\350<%\227n\274}\034\344\274gK\266<\002\020B=[\265\356\273J\3510<\311\355O\274w\0252=N(\323<\251l/=B\343\353<WW\224<7;>=\216ID=\215?\256\274\317U\344<U\005I=\031\223\017\275x\331Q<\2643\002=\010\324\221<,\r5=;\'W=(\276D\2759T\035\275\347\tH\275\340B \275B\244\000\274\016\223\334\274[\021\024=!\010\271\273\2567\017=\033\213e\274\226\255\241<@)\376\274F\231\004=!e\032=\263\255\323\273\013\243\276\274S\367L\275\242\321c\274\275\250\240<:\334\316<\254b\243\274\205h\224;\207_S\275w \261\274\264\\I<\200UJ=\360\314\371\274\"L\352:-\266=\275\226dF=r\023\t=\037\256\022=\241\276\320<\352\021\316\274\221\\q\274\272E1\275\274xf\274\321\240\240\274=\232\305\274\307\324B<\373\327\027=\311Z1=\243(U\275RA\n=\302\'V\274l\215\016\275\272\032\333:\n\204\337\273\355\026\255\274s\236\201;B\021\025=l\034<\274\326\336\322<w\234\331<W)(\275;\037\311\274\257\232\022\274\242#\266\274xbG;Q\367\242\272\020\033\356\274\306K$\275\374\216+=U\013*\275\021\202\224\274\374\242\273\273N\310\227<\226\002\317<]\247\337\274\243>L=\346\372\021\275\313\371\202\273\330\372\025\274\203\334==\232!>\274)\3303\275\233\\)\275\300y*<\322\210.;\205I==\262D\004=\226\035\025\275\233J\375<\364\3731=\202\tP\274\024>s\274\344\357\"\2733\2440=a#\000\2751Y\001=\305\332H=\201p\351;\\\244\207<\261\210\253\273\253\035z<\235P+\275\254h\n=\215\343I\274\020`L\275\374\256\272<&\226\223\273,\2371=$\234\260<\257\346\000=\3136\251;\306\006\n=\026f$=\310S;=\032k\n\274\277\220A=y\027\274\274\252\r\337;\216\2438\275L\332\324\274\352\201\355<#a\036\275Q\256\324\274\350\270&=\016\311R\275l\346^<9\277\337\274\310\'\267:\255\352\206<\321\031x\274\027KK;3O+\275g\355.=\232\272\264<O\377\336\273\346\240W<\n\227M=\262\"\375<\216\305Q<V!9\275,l\036\275\200o\035=\016\354g\274r\246\005\275c\263\235\274\355\216\265\274\243+\002\274yP\031=\010\216B=\037~\032=^U1=mP+\275B/\315;\301P7=&\2508\272\266rP=bQ\032<\r\340\007=\211\313\306<\332d\027\275\307\312\003<\262\343 =H$\'==m\337\274\257\334\022\274{\255\232<\'\213\343\274A\345\020\275F\343F=\243\213V\274d\310\013\275\312\370\357\274\304P_<\367\005\222<\'\2450\275l\344\374<\344\210^\274\341]\035=tOK\275U\274\r\275\256\002\277\274+f\263\274\271\311\013\275\252\233(\275b\325\340\274\354^\326<\372(\251<\303\276\013=\252\201-\275%\014\202\274\266\331\017={\2556\273\321u\351<-^>9\'\311R=\206n%<.y{<<\320\025\272\362v<=3\230\'\275A\260\360\274\364i\367\273\240EI\275x=D=apU=)\340\n\275uC-=6\345\364\272\032\336\273\273~\352\312<\324\241\027<\335\005<\275\031\330\024\275j8\241<\215\361\267;\376b\203:T\270\010\275P\031T=\263\315\005\275V[\244;\312\321\357;b8*=\351\017\027\275n\325#=\\\344P\275\375(\246<\276}<=\372\330\243\274\206r>\275\373\277\013=\302G\206<\2275\341<\216j\025=l\273\370\274\017\361\010=\2616\364\274\234\177 \275\3374A=J\243Z\274:r&=@\262)=\247,\254<[\366\353\274\325\033\000=%\330\266<$\352\037=\235\006I=pP\326\274\357\214f< \236\"=\232\252!\275.\245\016<\035;_\274*\313\262\273\313\243D;\027X\r\274\026\025\013=\233\210\t=\006GV=\031\364\033\275\262lM\273\315s3\275S~,=\371\322 \275\355t\017=\006\037\255\274\237\371N\272\346\336\356<\303l\022=\331k\332\274\325\354\216<\214\223#=\216R\201\274K\3604\275\333jE=\2711\271<\227\374\232\273\324$U=\025,\341\274_ p\274\365\177W<\033\347\276\274\232G\r\275F\356\203\274\363U\013\274W\367\367\274\265\324g;J\223\007\274\267\3378\275(\344\236<O\253_\273n\370\246\274\037\251+\275pX(=.\247\021=AV+\275\245\361\034=$x.=\352\355,=(\244\367;\007\247}\274\333\346\035<\277y\004\275\364\320\027=\026\327I<\274\031H\2753\002\002\274\254\274\004\275i\243x<\331J\222\273\232DB\275T\373\300\2734\222\303\274\362\323e<\351\2132<\237o\004=\225\276\036\275\202\010r;5\\\030=*A\270<b\210\315<\235\233.=\034q\024=\236#\235;\267\027\376\274fW\360;\002\2466=\236\274\336\274W\202\262\274,\r\353\272\217\301\030\275\2329@=\211\335\032=\3020U;\314y<=\t67\274HBo\273>\001\024\275\213&\t=\327Q\335<\215\344b\274z,*\275\224r\017\275S\262\272<\006\201$\275:\341|<c\305\017\275\321\235\251<\337W\257\273BSL<p\366\307\274\021\3449=\005\331*=3\253\274\273\311hi\274\321\327\310<\316Y\027\275\361@&= \r\231\274\000r7\272/\223\351\274\343(K=\000\r\332\274\337\236R9\343\370\226<t\3079\274L#P=\270!Q=\260)\365<u]\345\274j\231L\275\347\333\014\275\224\205S\275K\312O\274\323)t\274n\215\350\273\337\036M\275m(\033<T\3050<i\325\027=\214P\034<\266 !=(\211\007=\333\246C=^\241\241\274N%\304\273u)\355\273d\021\"<\335\206$=\320\357\311;x\267\034\275\3078\355<\231\332\034<[\027/\275\235IN=S4T=x|\355<\371S@=@\374\004\275\277\003\320<>J\004\275j\243\301\274\002\221\360\274\033\376\030<n\357\225;WC\260<\250\321U\275tZ:=\331\265\271\274\016\233\233;-VN<\325\010+=w)R\272\'m<\274\255\246 \275\370\3401\275\">\314\273j\2567\275|\212\202\273\035\277\201\272\343\352{:\240o\323\274\000.<\275\005\304|\274\264\005\000\275\336:>\275\305a\275\273\2064\007<P\372l\274Y\021\024<7\035\217\274>\210\365\27411%=F:\221<\266\3122=0\320\'\275l\'\\\2747(\335<\232\346\355;\032%\212\273Lh\024=\255\324\362;\353C\227<\277\024\323<\272\364*<\247\316:\275/\231\030=b\372\262\270\320S8\275$\337\031<D\2409\275\244\321%\275R\027\212<C(\025\274\253\247\002;w\301\034\274\"\024\277\274se\n\2755E\006=/\"\227\274\332F\242<\236\036\360\274\000\346\372<%\275\035\274\257F==V\t@=\367o;=\021EJ=\376\210Q\273\205r\256\274g\325Q=\177\307\013=\253fU=+\300\261\273m\315\337<S\324\252\274\210UR\273:\261\003\275\2202\027\275*\353\271\274 \020\335\274\277\224$=\314\367C<\311\013\r\275\374\362 <\006@D\275C\004;=\302z\r\275\246;@\275\327\000\336<\221\361\001\275\333\216S=\003\260N=k\3271=H\365\252<h-\377<\272\037\275<}^\273\274\243f\024\274\262\330\247<\342,\363<\300_R\274\327\262\316\274{\220\264<\313\355\303\274,?\023=\370\225r;e1:<K\223O=\300\310\033\275v\344A<\032m\007=^\3004\275\215\034V\275\335:$<f_(\275\024\320\221\274K\326A\275@\236>=\313P&=\241~\351<R\217V=n\344*\275\235\t\r\275\240k\266\274\014\013\020\275\\\336\274\271\213@9<\343{\321\274\004\337I\275\026G\000\274\243\006W==\322Q\275V\026\230\274\016\355\030\275\nb\347:,f\352\2741\357\005\274\257\024\374<\261{\200<\261\211#<ke<=\035\364\005\275\033\352\331\274\201\010\013=N\325\027=\215:\221:4\331P\275\264\003\257;>\244\003=W\343N\275\"\232\375<\"\024\016;\246l;\274\231f\022\273\376\222\243<\367\3524\275>\016\360\274\266]\337\273\027\207\341<9\247%\273\252B1\275a\302\014\275T\307P\275l\350\204\272\205\353==\231\017];S?\346<\3237&<\211\246u;\355\255\254\273Q_\357\273<!\014\274\210YD\275(\224\342\274\336\225\321\273\204\377I=\305\233V=X\3053\275\303\315\362<b?\024<\254\225/=\306\221\333;.\372\344<=\232\344<n\337$=\201\300\266\2747\017\300\274\277\201!\275+\257\362\274mn\336\274\232\245\370<F;*\274\256\347\345<\353\222\016<-\271t\2749,\221\274;>J=\357Ek\274\246\244\212\274]\366,\275\252c:<Q\\\206\273\031\244\216\274\251\347\001\275\366\206(=\314\017\030\275\342?\260<,\267\010=\312\331@=\003\344\217\274/7\022=\0229\013=\343%\014<\257*\203;x\351i\274pY\261<\374Q\334\274\3617\366<m\336\234<\240\372<=\024\002\026=\023\003\262<\025\276\344<\243\247I=\213X\031\275\267uJ=\230\2435<U\225T=g\010\246\274\276C\250\273\t\1779=\245D\334\273\332(-=\020\203\223<\257\231\001<\371Wj<B\344\317<\223\025\002<w0.\275\305\370\001=2l\337<w\253\364\274Ks =\266\355\337;\254\t\002\275\262>\241\273\370\315\210<{\223T\275Gz\316\274\005\2000;\310\025G\275\235n\233\274\344\365T\275\216\000/\273gJ-\275\212&\261\274o\371\033=\262\376%<\006aQ<)\241&\275c\323\326;\201\303\001\2756a\365\274\312\352\002=IK\321\274\243\373\003=m\253\317<\202hH<JCU\274\024\005 \275\222\244:<;\262G=\364\265\307<\010\370b<\036:\'=\274\207\365<:\035F\275*m\370<\343P\013=o\247\014=\305#;\271,q~<\314yG\275v\225\375\274\254I\'=)\324\022<K\307K=\310\250\351<0\367\204<\232\346\325<\254\203M=\2029\035\274\371\327\003=\300\227\256;\02061\275\275d\035=\273\217?=\326\233\n\275\257 #\2759U\211\273c[\030\274\212\005\301\273!\001v<\022\034.=\264\030><i`\262\274\3643\222<0\204\022<So\030=\331\307U;\275\333\210<!\3300=a\360\357\274\313\355\366;\003!>\274\234\372\002\273\350\274\261\273H(2\274\345\tI\275.\353\250<K3\356\274-\377\251<\270\233\032=\266\224$\274\355\360f<\237\002\253\2749\236\017\275\321\363\335<j\325,=<\262\355\2746-\001<?\216]\273\003]\215\274\274m,=5\356n<\341\337R=;\345\023=\206 \365\274U\243\246\274h\367Q\275{\312\257\274\243B{<wg\243\274=\310Q\275\310\254\177<\271:\005=\013\244\226\274\202\372\301\274I\"\034=\215g\200\274-w%\275\362g\321\274}2R\275\022K8=\246\304\002\275\0355\354\274\301\324\202<\357\206\361\274\222p3<\304\r,\275X\037\037=v\227:=\367\266\302<\310\343\257\274\227\313\312\274?_\013\275l\242!=\351\345<\275*\241\013=\253\327\021=9\345j<\276\023\232\274Q=\340<\222\333.\275\264o\340\273c1e\274\215^V\275\242\031\025=\232\016\220<\020-\310<cb\316;\000E}<Q\357\002=\271V \275b}F=\254ns\271o\245\310<\245r?\273\0022+=\216\030\246<\231\374\263\274\3077\236\273\265\310>\274\260\303\306\274\007\246\270<\357Fw<\010\022S\273\3642\034\275hh0\2756\331;=\310\373\024\275.W\247<}O$=\352\3325\274\026\205\324\273a\222\255;x`\325<\206\273\343<\231\t6=\363\337o\272}\256\207<W\202\306<\2646@\275I{\231\273\360\'\027\275\346rc<S\023\205<\020\354+<\264B\033\274\326\303\202\273Zs\036=\364\2741\275\230\r(\275\232\026\005\275\031\231\257\272O2\242<\0136\325</\227\232<\207\034~\274\030\177z9\305\316\324<\020u2;7k\003\275!\306\240\274V\224\254\274\322\364\222<\312\004\273\273\266[p<1\307\243\273\204f\301\274\210\006\242\274\340\260\033\274<\227\336<t\025%\275\\\260\030\274\363\274U\274\023\226==\241\205o<\325)\210\273\361\243K;Y\367\307\274\330//=\232\336\022\275\030\207\273\274t\266J=\236\274\016\275\240\024{<q\314\377\273.\307(9\332\352N\275\210G\337\273xF\355\274\363\364u\274\036\270\372\273Y,1\275\367\260\024=\316\014*\275V\"Q=\005?N\275U\354\227<\267[Z<#\2347=S\272\037\275\354z#=\356\272\252;\022\263\006=@\006K=\014D\317<\214\252\272<\252r\307;o\037\t\275\300<\376\274=\230B\274\340\301#\275M\215\032\275\373o%\274\026\332\n=\234W\004=\375\310\230\274@\320\272<f\305\010<\222\340M=\016\264\016=\240\331(\275s\025,\275\342R\300\273$ -\275\247\201\303<5m\023=\300\363W<\341}\205\274\255=\036=\230\022\273\274\001\206\337<\034.o\274\273\023Q\2759\004\354<\256\307\324<\270\350\217<h\301A\275\203B+=\301T\004\275gwN\2751\257U\275\244\036&=y\0355\275p\006\310\274K\363\271<%\241\023\275\256\333\326<\022\217\252\274\316\275\315\274@\017\027=\362\354\260<$\032\"\274r\264\213\274\257\377\003=@\237\0309\323\204>\273<6L\275\\\202\032=\265\004V<\341V:;\033\3403;6VI=\026\241\365<E\245\001=\256W\021\275g\212B=\214P\353\273\210\000M=\371\333Q<\337\352\325\274\237\035\330<9s9\275 ;\233\274\220?u;\252\250\242<H3\236\274hX@\275\rt\247\274\021\335\337\273\266\013\210\274\375m;=\243\302R<\262^\307<U\225/\2745]%\274Bv\033=M>N\275>\265\334<F\005(=\nA\033\275x^R=B\341\025\274\177y\357<\003\242L\275\177\214T\275\36725=\376\3202=\204\350\013\275\266\221\033\275\023\323\r;~gE\274\370&-= \365\243<\2300\251\273\0138=\275\254\261\"\275\022\321\010=O|\305\2743\234\031\275V\3525=\002\3015=\351e\035=*\363J=:\341\034=N\273(=\254\035y\274\274\006N<\201\273\016\275\302\345.\274`\252^\273\013\250;=\031\207\233;XnZ<N\341\254\274\034V\033<]\177c\274r\274\t<\016\240\216<\201\247\221\274\376;\325\273\023\325\370<\307j\244<\004\215\027<JV\031\275\364\330\r\275MO\301<\233\323\003\274\303\301\215\274)1S\275\264\002\264\274xF\271\274\263C\300<`\330V=\336\310\017\275O\037P=\236\364\331\274\265G?=\235d\300:\245\342\014=\024\007\035=6\345)=\023\030\364\274\315:\376<\2513%\275Vd\341\274bU\270:-dT\275{\331)\275IFg\274\333>\201\274\\\357\245\274i\2517\275d\026\214<\260$\037\2733\252,=&8\205<\347\3025;e\305\215\274}JN\275\022\276\021=\353R\327\274\365\277v\274G\226:\275\222\373\247\274\320\374\035\275\004\367e;\257Q\307\274\222\016\366\271\326\031Z:Iu\246\274\256\2026=\302\266\331<\327\273\313\274\006J4\275?\330\242<\333n\236</\314J\275\311\224\243\274\252\232\270<\177.\351\273d\365]\274\274\372\313<WO\321\274uxH=\272WT\272\036CN\275g\244\375<\217\344@\275\001eD\2756\302(=\353{9=\351\217\344;]\016\037=r\275?\274\037.\215\274_\rO\275\2263\032=\311\003\222<o\021\205\274\356j3\275\264\357\351;(>\037==\315\250<\364/\234<_}!\275\357w3\275\024v\232\274\034\020\273\274\276\357\376\274\352\247\207\274[R\026=j@\002<\014\303\021\274\001\254\022\275o.\030\275\371O$<\2263\237\274\'i\317<\257\234\267<\351\261\021=\334 K\274z\350\245</*T=\201\312\013\274\243\022\014\275\266\363\312;\351\3014\275\364\0332=B\216\"\274\336\313\341<\245\251\246\274\021\273+=-\237M\275\370`F\271\003\\6=\313\272\337\274\362\315*\275+P\306\274n\010\311\274\253\365\245;\033g\247<@\315p\274\253P\023\275qX\032=d\202D\274\214\364\003\275\233y^\274\021\277\017\275S\360\014\275\207af\274;l\r\272\337L%=\272\304\006\275-\222\031==8\335\274yp\355\274\005\301\201;\177\030\"=i=\304<Y\221U=\024+b\272\246\227\311\274\323O\247<h\304o<;\302+=11\371<<q,\275\000\375\243:a\005\352<\001x\321<\371\257k\274D\334\014=\214\304&=\331\260:\275\331\3625=r\213\023<\353o,\275z\265\245<n\020\344<\250!4=\000\350\357<\363\214\025\274\\\220\244;!Q9;T\023\326;\362i\355\274\033\262\034\275\247\306\366<\307p\010=\0360\372\273\277\302q\273\244sE\275\335\000\237\274\315\201\323\274,\000\033=\t;,\275\035\217!\275\320\003\225\273\253j\014=\247\036\372\274\322Hm\273\245DG\274>\033\252<\327\242E<\261\233\346\274ve\327<3\035\321<\241\362\323:\323y\316<\344\211\337;\362p\234\274\010\326\365<V\025\232\273\314\206\"\275:\030\"\275A\251;\273y@P<\201\315.=\253()\275\374\204\200<\264\300\t\275\307\2731=\262\255\035\275\275h\360<C\021S=\001\023\r=\220\273Y;[\313\005\2751\0178\275\255\272\324\272uq\340\273/\245\232\274r\2148\275\346D\303;\021^\"\275\317\276$=\004/2\275\222{?\275Y\337\226<~L\013<\265TL\274\024\315\005\2752|\352\273P\016L;\3221;\274/\240\031\275P\023J:\304\001\003=\023\371\013=X\261\331\274R\013!\272C\255\007=\275\\\325;l\301J\275\035\246\252<\221\016H=#\206;\273\260\001N=\341\314D<\225a#<N\351\347\274=?u;@\311\220\273\201\023\t\275\324\261\030<\221\030\022\274\333Y\335\274T-A\275\366\251\303\274\226s(\275\032\250Q\275\2739\003\275\277\023\314\274\340C\352<\010-\340<\222\324\010<\340\355F\275\020\320\'=p\2630=v\231\235;\223l2\274\327\367:<\0034B\275\312\305\360\274#\310,\274\006\254\017\275\201\336\211;]\304\025\274\371aP=\204\334\013\274\223\363\n\275\363\367-;+m\352:\317\321N\275DzP\2753_6\275\314\327\323;\320\377\343\274\352E\014=\330~5=<\036N\275\314\3305\274\014\344\315<\366PM=h/&\272w\003\037\2751^!=!\017!=<\n\022<\202\252\275\274\031K\003\273(\245\227<P\n\254<\352\202\310\274\300\324\302<\333m\t=\267:\276\274\277\271\027;\364\332\272<\200]\217<E\304+\275dm\362\274\177g\377\274\006\275!\275\352F\365\274\2571\310<\254N\277<\007\353\250<\364\341\244;\013t\314\272\357\331<=\263\304#=A\341!\275\023^z<\230\271\205<Wf\007\275p\222\215:7Q\242;\303\324$\275\233\350~\274\316:\036\275\203\017\014=\242\022\343<\251\362%\275\261\201V=l\252\240\274\272\247\302\273\231{\250<\021\333$\275d\035\252\274\031\363\345:\332\254N\275\001*7=\373\003M\275\335\024\342<\317\235\261<\377TO\275u@\255\274\274\371\221\274\001\351\014=!\325*<?Y\013\2752\001s\274\375\370\341</\025`<\205@\027;%\254\343<D\262\211;\332\025\375\274\357]\246<\244\232:\275\210\373\013\274\354\375\252\274\241\267u<\344\353\324<\2130\035\275\310\316\021\275\352\010\350< \034*=\377\335==\241U\364\274@>;<\255k\221\2741\276o\274\032\264\006\275\263UU=\351kL<\274\240\342\272?\034\r\274P}\366\273\261\336\020\275\035\3021\275_R5=E\236\306<\375\022W<e\316\332\274@n\'\274u\331I\275\351\304o\274[\254e\274\002.\310<\343a\353<m\202><\305\354~\274\336kI==\222#=\022\023N\275,\346\014\275\352J\356\274ru\375<X\007\357\274\341\210\001=/\207}<\374\037>\274\227\315B=s\001\221\274\262\010!=b\247/\275\t\374\233<\272\235N=\254\265\330;~\255\347<\030\t\257\274\002d\213\274N\221\365<\013^\337<\340\210\337\274\004\376`;_yO=\304w\271<\303\"G=hh\317\274\230\212\232\274?.\013=3\225?=\314\333}\274\305\243.\275\316\017\372<\217\306M=\017\371\030\273\0017\364\274\257;\340<ge%\273]{\201<y\203d\274\251\025[\274\207Q\232\271\207\3631\275$M4\275IQ\t\275-\000\302<\272\246\n=W\350\004<zg\224\274!\231\364<!q\252\274\366\333\373\274\333\330\315\274vv\244<\037zi<\327\326!\275\347\310\351\274;\021C=C\245@\275\025\216&\275\246\336\327<\276\314k\274L\252\341;\000MI\275,L\236;g\321\022\275\366\017K=\361\035(\275N\010\032=8j6<E\0362=@\374\037=\337\327\327<%\245(=\"\306\320;l=\017\275R\210\241\274\332J\334;\216\037\n=\334\321!=\244\334\276<\367\014\367<(\364\'=\007\245\023=\275\315\373\272\377\267\r\275Y$\213<oFD=WQ\334\274y\266 \275w\006\305\274\r\361M\275p\342\023=\236**\275$\206\355<\004M\353\274\"\222#\275\261\306\252\272^8\254<HS0\275^mL\275\1774\r=E_\017\275\3201<\275\345y/\274\303\206H\275\203N\371<\375\321Q\275\253\274E\275\345\211E=\254\363\005\273\315i\'=;:%=\375\220\3069?(+\275\220\213\272\274\371\353\270<\034\022\340<b\322\334<2;\271\274\005\031\353\274\266/\027<\273\246\223<\334\271$:\03576=\331)\205<\366#J\275\255\231\307\274\036\377s;Q<\335\274F\362 \275\'w\234<t=\352<\342\2729=r\310M\275\026\245\224<\221O:=\325\3773\275\316~\032\275\243D\214<\222\027\n<\360kC=\233\361\346\274\264\235F=<{z\273\325\271\024\275\267\324\216;\300)\025\275\210\360\330\274\215\307\225\274tBP=\303\3562\275w#$\275%\212$\275r\"\315\273\315\033\013\275B\331O\274\264%\224\272\\\0103\275w\024?\275\t\251G\275\351\244\271\274\340|N=\255\335\025;\231#\307\2742K\215\274\210R&=\006\024\311;\03630\275\274.\327<\263\334\364<\212\245U=\372\001\301\274\362\215\305\274!\341\333\2747\351F=\373\235\266<\n\374\313<\211\375G=|A\316\274\310<.<\356\312S\275\202\246\374\273)\345\303<\306\215\037<v\360\225<\024\205x\273\323J\300\274XW.\275\333\245I=\326\371\006=>\245I\275\372\323\014\275\031\362\010\275\\\2044=\021\351\r=\311\377\360;\361\375\037=\2347\251\274\315\373\350\274]\335\'\275\3065 =\006\005\006=,\247*=\260\206+\275\\\331\240<\310\r\325;\221\n\375<\344\331,=\254\017\017\275\237\276\000=L\317\234<d\372\335\274\251{U;\233gx;)8 =\272f\313<>\2537\275\367\240I<\315F\303\274\265\257\311;\357\304F=\000\214\212<G\3008=\260\001?\275\364p\374:`\367\016=\215l\031<\250\tI\274\017\337Q<z\2635=\3200\\<\267\317\310\274\241\354\335<z\3718=aM\214\274\331\377\216<\003O\036=l\3569<\321!\223\274{\254V\275\210l,=d04=\317\371\010\275\357\332\001\275\215g\213<TT<<g\024G;\213\006\224\274\205%\334<Z\342W\274z\261\225\274q\212\245<Ij\342\273-\272\177\274\324\254\373\274\205\033\004=\014\303s\274\257\027\332<`C\302<q;\364\274\231\350\024\275=Q\037\275e\000K\273J\025\327<\2758==\005\307J\2751I\226\274\277\200 \273GX9\274\000^/=\315\230\243<\024\026R\274^\300\034\275G\306\317\274zs\372;\344\\\242<\267R\275\274P(W\275\233\271V<@<*\275%\337\005=8;\361\274X\356e<\363\366\r=\217\344\014\2748(!=}\243d<V\233\003\275\2156\323<\\e\273\274>\030\013=\256\273\203\273\231Z\032=\331\222\375\274y?\240<8\234\006=H\314\n\275d\0149\275\235\361)=\353\253\276;\264\273L=V\2446=<\324\026=\240\031\233\274\200\301I\275i\217\263<^\t\001=\tB\330\2736\000)\275\365\333\'\275\220\032\2538\253\361\330;\336g\245<\366\360\244\274\3603\002;o\014\010\275\2006\367<\2438\001=2\351)<\027\r#=h\274U\275\217a\226<z.\003<{\247\340\274\271\343\270<[\337;=dI\303\274\\r\005\275\226\346\321<\225.5=Z[M=\277\2221=\350\241^\274\350fC=-\262\325;\021\247\263<\002\021\313<)G\001=\224\'&\274\257\222\320\274\335 H=\\\225S\275\301\263\325<h\355\226\274\311y\350<;?!\275?1\302<\010\310\366<\221$\201\274\005\275\276<g\332\346<<\305\023=\204\346f<\334\235;<.\307L\275k\376;=4\300L\275d\214$\275\363t{\274T\007\233<x\007$=\n\304O\275BO\222\274Aw\005=\312\323\002\275\343\3175\275\224\'\235\274\337&\260\274e\315\367\274,9B\274\212+\025=).\014<u0\212;d\335\273\273\365\211\250\274\021\330\371<\323\223*\275#\210\365;\241r`<\006g\205:\274E\003=\374\007:\275\256\340]<I(\363<\271\200\221\274\326\210V\275\243\010!=\235\026\255\274\267\'\362;\"\374\321\274\302\270M=M\001\310\273\266h\017=U\237N=\347\000\275;\014F8\275\350\021\264<\367k(=H-\270\274^\324\027\275\362\244\031\275\353\300\014\272\030\201\227<+W\332\274\340\236\206<\360`I\275\361{D=\000\312\023\275\020\366>=\337mO\274:\0171=e#\030\273*\026\300<\306j\261<\222\213\350;Y\031\255;\035--\275t7\023=\323\214Q\275\313\217\335<\3720\'=s[S<\366@\212<!\244\365\274\304D2\275\344Lt<=\321\013=\031\001\264\274\340\256\244\274\022v\355\274Gr\334<\021\376R=<$\203<\322\334S=\317\013r<\034\321@<n \024=\240\321s<&1\226:C\275\274\274e}+=:g\226;$\372?=\375\233\000<%\345\023\275\267\305\275\274?\222\n=\305c\230\274\346df<\240-\352\272\020\327\311<\313\220D\275\344\273\014\275\2241>\275\263\207\010=\374\327=\275^\242\000=[;(\275\000\205\373<\\B>=[\253|<\005\004\330;M\333>=\037N\316\274F\017\031=\254}\221<>J\264\273\243\276\323\274|\266\231\274\034\360\274\274\321\347\314;H\276\025<\310\264\032\274>\242\361<z\356\232<\376\202\221<{\236\350;\\\363W<\373\216F\275\331\211\037=\004)\277\274{\342\205<\262\210\006\275\3417N\275\007\214L\275\225;?=?A.=\376i\267\274\2067\330<^\206\'\275\342,(<\304\'!\274\205\216\177\273=\257.=\207\\\235<a\277\234;K\370\212\274\346Y\005\275\007j\217\274\322A\253<\347\230\027=Y\031\253\274\005\271\227<r\014\024\275\262\214\252\274\013\253\313\274\255\032\210<\332G\201\274\001G\037\275\264\271\337\273O\026#\275F\\E\275\223\364\327\274\202aH\275\277V0\275\340VF\275V\021\006=\307*\340\272\264\301w\273\275\351\036=qpG\275\277\322\033=y\nW=G@\343\272\r\374\003\275\364(T=K\362*\275W\301\220<\247\270\260;PB\343<.\353d<\311tL=\212\322J<\003\242\277:\r\203T=}w,\275\021\256\"\275\177a\025=\327\322\354<\346\210u<\267:\262<\3540\340\2748\026#=\260\353\262<\236CO<\245\276y<S\263\351;WmH=G\262\243\274\347\203\221\272a\315\234\274\234\220\222<Og\002<\206\342\037;\344\313\244\273C\330\034;\307\227+=\0349\204;\244\017S\275\230\003\315:p\034S\275t\025\357\274\375\325T=\350\031\224\274=}@=Kg6\275\224\235,=P<\'=\035$G\275\222\224\035\274M\316\243\274\\\264Z<7rR=\341\354\362\274\275\3629\275\235c\031=R\355\025=j\257\226\274~\323\016=\304\351\361<\013\273M\275y\227\002< \227\033=\237cU=\004\t\236\273\272\246\341\273\301\377\000<\003)5\275P\030,=j|\236<j\266\032<(\250&=\035\024\356\270\330\273\032=\371eI=\347H\257<wD\353\274\250\001\347<\245\264\363<\376+ \275\251\016\010=\355\322Z\274P>0\273\203!\005=\204\312\\\274=/*\274\316\342\024=\241\303\032=\364\202\233\274\247\320\307\274q);\275\267q\314\274\274?\035\274\350\247f\274K4:=\203\207#<\374@d\274\212\324Q\275\335PV\275E\021\311;K\334Q=\362\t\017=%\031\326\274\261Y\370\274AT\215<\034\036\370\274\352>\327\274[1S=\3262N=\017|\213\274\254E\004=\370g\223<g\250\260\274\322T\200<:\337S<\313\302M==\001\357\274\206H\010\275\212z9\275%\220J\275B\232:\275\245\026!=\326\034R\275\323p\371<\007\341\226\271\025`}<\320\232\n=\226\322\246<\244W\3739\201\001\311\274\214\023\213\274\013\330\037=K\366)\275a\021;\275\3120\355<\022O\216\274\263F\303\274\201\247\336<f]\262\274\014er<\335]c\274qf#\274rC\'=\341A)=Ui\337\274\276\202F\275\020\366\025\275\020\305\312<\310\254\003=\t\010\210\274X}x\274\005\261*\274\034\202\025\275\363v\331\2735\246\034\275\262\246\272:;p\001\275\240\221\324\273\037T8\275\236\005\325\273\224f\230<\242\2416\273c]I\275\336\202\020\2750\361/=\322>H\275\247\370\263<N3\016=\376\276\217\274\343]\261:x\035R\275h4<\275\263H\357\274\334\324\302<t\021\213\273\346\254\325<.\210\331<APi\274<\035\266;\322q+\273z@_; \270R=\334H\342\274~\317\n=J\325\360<\266u7=y\256m<n\267K\275\326o\016=\373\377*\275\317\254x;\222\020\252\273R\223&=/8\321\274\203\320\246<6\020!=\357T\014\275\035\224G=\033\202\260\274\265\205.=:\250e<\235\250\035=)\274)\275\346\341\204\273\353\350\016;\230QE\275\207\367<=\241\232\377<\307\371%\275\217\014I\275nOT=\253o\204<gy0=\302\345\235\273\n\336L=4U\245\273\204\277 <\327\223\002=\032\3265\275\302;G\275\233\336\000=e\277\333\274ah\r=\347\370\340\274\322\370\264\274\"\"9=2\3424\275\204\226\317\274#\0139=\254q\315\274\014\361\242<\000\217\303\274\335kO\275m\205\013=`\010a<=\004\242\274\022J\320;\037{.=i\313\361:\"\210\312\274\217j\032\275\315AS=\225\332\025\274\037o$=\020Zq\274\202\243\302<\371~\013<\264!7\275%|Q=\351\306\016=,\251\327<MH\217<u,\303\274\355\351\r\275\330R\t\275\375\243\'=|\334\234:\257\2006\274]\2215\275\022*9\274\345TH\275V\257\236\274m\240\341<\001\256\225\274\217C\n\275\354ST\274CD\"<\252-\223<\271\"a<`\234W=\220\001O=\222\323!\275X\233\240\274\"\345\230\274\346\021P\274Q+\335\274\224\265\004=\272:\031\275\244\340\372<\357w\'=;\324\254\272\313x\331\274w(\334\274L;\016=\354\216\201\274M\006\003\275\311\026/=\326:\323\273\350H\341\274\017hH=y\262\021\2752dB=\332\243\315:>r\267<\315<\034=\233\'\264<\014\324\351\274\360\236\314;\007\337T\273\303\356w<\355\\>\274E\265\r=Y\323K=\211q\301\274\257$U\275Ou\262<\2716D\275\204\212;\274&\207\200\273\'\311\026=\3020\033\274\234\205\301\274N\304\325<\030x\205<0z\306\274R\3306\274bZ!\275?\273x<v\006E\275?Bi\274TF\032\275\277\333\010\275\003\237h;\204\323\361\274\312t\240\274\224@I\275\265\366L=\304u\352\274Cji\274\031@M\275\222e\277\274\240d\354\274\010\241\306\274\310\267a<|\204\256\274\201\220\270\274\334c\271<\316j\327<\236\0337=\205\336;\275\317\275\365\273\255l\227\274\271\251\t<\311.\251\274\242\024)\275\215\250:=\352\256\275<}\235\240<\244{\220;\025\223\256\274\312\350\303<9\'\325\272\361\3232\275\331\313\037\275k\374\323\274\346\214\215\274\266\230\222\273G\351\241<c\\\230\274@\347;=\020\265$=\025\337\021\275\322D\274<\371\026\240<\2130\226:tMs<\242\274\006\275g\036\014\275v\271\275\273\360\202<\2744\356\033<r9\323\274#F3\275\034\245V=\3532\005\274^\366\202;t\344.<\016//=[\2328\275\220\013?\274\014\0104=\231G1=X\365\337\274 \300#\275\374\032\007=Z\205\005\275\220U\343<D\0025=\203\306n\274yOQ<\353\222\024\275\324\t\351<\031|\214\274\3416;\275|GA=\347\221>=\312rc<\362t\360:\355a\240<\236\020T\273\326\210R=\022\244R\275\327\267\2739\376\3020=Zs3<x\'\274\274\365\230[\274\222;\031<\333=\310\273V<\231\274v\337\317;\307\3554=~\225\300\274`\252\023=\247\321\032\275L\023\355<\206\037\357<\246\313\267<bO*=D\266\361<\357r\370<\246\031v\274\372\022p\274\361\260\324<P\331\027=\343\244\331;\205\355\246\274F\262\376\274r55=\353+\310<\0137\254<\277J\212<z\271\221<\221\003\242<\330lV=~\234\346<\236\353\010=\274\032\237\273\3062\334\274|\262;\275\306@\007\275\240\223G\275\201\014N\275\363)V\275\264AM=\215\304\257\274%\306\271\273\"\206\005\275!\341&\275T)6\274\211@C=e\265\365\274}\264\207\274\305\323\313;c\3468=Q\373t\274pI\276;\367\303\341\274;\322\024\275@\367\325<\253\017\"\275\277\317)<\205#\007<\274\325\005=\237k=\275#y\010<\202zi\274\273N!=\033\207\003=^xO\275A\235<\273\365\254A=M#\331\274\217\020\360<\347\352N=\002\272\032\275\370l\310\274\371Q>\274\231\206\003=\276\303\255;\366\366 =\322,\005<C,\014;.Y\264\274\207\303\354<\016\220C\275\255!.\274ki\302<\355a\363\274nCN\275\374d\255<\215\362\215\274\266qG=#\225\257\273\231\225\203<\205\276\230<\253\2029\274\374\354\251\274\243\373\314\274\275Y\345<b\376j<\327S@\275C;\247\274\222\327B=\210V4\275\376\244\257;\242\3714=\200t\302<]+\335\274\037\t\035\275\355.\354<\232\372\203<\276r \275TT\206\274\344\264M:I\0004\275E\260\264;\324\347F<\357\313\n\275\301\352\016=\2223=\275\251\024\341\274\200\246\334:Jw\t\275FQ\365;\267\276\330<\001\354\211<\256f\030=\245#D\275\355\367\356<\034\035\034\275w\252\211\273Q\360\377<p\211\211<9\351\032\275.\220\341\274W\277\007\275h\017@=F\264I\275\351\372\025=%-D\275\231\303+=\035{3=\233\017\263< \225\335<\336+\022\275\357\240/\274\351q\007=t5\007\275\013\"K\275\361\035\032=\201\222\004=a\246%\275\032,\340\274\241\254\001<Q\354\223<\334\222\345\274\"\217\242<\251\241&=M\207#\275\213w==\025(\370\273H!\353;\233\204V=\271\344\020=!\304@\275\307\300\316;\334D\361\274\315?8\275_\373\373\274\362\216==\321\212\007=.\375\257\274\200U =y,}<\336\362\310;\373|\367\274\206\232\324\274u\255\241\273\223\371\2778\376\272\377\274\373\314+=j\033)\275h\361\027=\376\261\346\274\230[h<\224\265\021=\356\211\037=P\223:\2752\217D=\3144\031\275\016\3766\275\361\271\344;(\211\343<;\222\000=\315\2522=\255\355D\275\353\335\026=\314\017\376<\331B]<\373-N\275\366e\267<\'{5\274\310\031\312<\231\037\242\274\266\260\360<\264\255(\275l\207\302<\363\246\004=\252\273\272\274\254\026?\275x\222\242<\026\273\030=8\242\300\274T}\030\274 \335D=z\016\224<Rt:=\263\\;=5\321e<\340\2528\274\006\t\222;\244V.\275\253\r%=\262\272I\274\315$\354<?\204\023\275ei2\2758\331g<\372\302\263\274\311eY<M\320\305\2747\307\017\275ny?\275\274\305\376<\027\3041=Y\206+<>\3273=\277\271\233\273p\256#<b\222O=\177\360\327\274\365\032\236\272\304\342\237<\364\001\316<\257\355\025=\226u\3369\324:\303;\251\361\332\274A\323\013=o\253\312;\337N\006=4\226\024\275\037L\316<,\312p<I\366\216\274,\266\271\274\205\201P\2759(\341<\325\016\020<\036`\231\273\025d~<J\230\035\274\001\341?\275\355GQ=p\\\n<\211\204\276\274\303\336Q\275&\336-<\342s\000\274\307\177\207\273\377+\3308\026\277\001\275\3418\254;ws\264\273n\266\277\274\234!:\275\016\317\201<0\356J\275YB\364\273\336\221\322<\356\226\014=\214\316B\275&\263C\273\364\013\272\273\330\234\262<6\300\004\274\323\261\253\274\034<v\273\321\374m<\214\014\003\2751\r\304<\305JT\274\362\206\001=\005\205\316<=\036\\<\351\205\001<<\345\310\274\"e\370<\266\310\212\274f\3236=\315\014\311\274\250\245\247\274\026\313$\275\266\224=\275\333\202\275\274\314i\317\274\217\350S\275Y\207\335\274\313E\024<\205\217\304;\213\305\r\275\211\322\037=/\216\010=\351m\257\272\356\204\247<\240\321e\274O\0023=\252\270\023=\337(#=&\2137=\343\256\025\275V\007W\275Mz\320\274\326\0104=`c\342<S\001D=\006\214\375<.\224\272\274\243c\216\274R\252\354\274\336\270M=\221\215O\275:\\\003\273\377Q\266<\005\351\3629\334<:\275\246\243>\273\255\336\355<O\205\316\274\221\342\364;\2076\255<-\253\210\272\273\373r;\251k\007\275\246\275L=\223\000\217<\334>\014\275\224\006\250<b\347\357<~\266\345<\300\331\022;\271\347\274<f\304\n\274?~\005=\263\021\225<\220\333\241<\337\355\236<9d\251<eb\320<Re5<\253\2320=\246j\327<\362\253N=\303\0261\27523\231;P\267\340:\321D\244<=49=\210ZD\275\277\231\354<Dd\033\275i19\275\037\337$\275v\262\222\274\211[\244\274\247\323}<\337\307\016\275n\206\342:}\276\266\274!`\216\273\013* =\244U\252\274\231-\016=.DR\274\364\352+\275\313\004\223\274\355Q\352\2749\034\005=\211\017M\275=\227L=\220\342R\274\351\341I=\301w4=\343w\265<\302\"\334\274oQ@\275\315W5=\235\t\246\273Q\337\242<\247\035\342<@p\270<\241x\243<S\315\240<\204]\273\273i\275\207<\245\202\221\274\321\331E\273J\223\245<\243w\260:$\272>=\0070\001\275D`\307<l\0132=7\344\362\274K\026\257\274\3259==b7\276\274b5\231<\311b2\274\212|\212\273\3713\002\275\236qZ;s\306\352\273@\355\250\273\367\'\236\274\246|*\275\017\r\354\274\316\243\301<\372\322\351<\010w\346\274\253\336\005<d\367)<-\214,=\023\227\024\275\250\241\254<\260\261\354<a\356\223<9E\267\274\310\247C=j\374\335;[\007\\;Es?\275|\340<=z\024\303; /=\275\331\351G=\273K\261<&\331\'=\212\377\247\274\357\274\356\274\303\240U<\341\370\366<\337\346R\275\374\'\025=\'d\226:\2558K\274\313\2572=\320\343\304;\0241\002=Z\275\304\274\265\274;<\035\323/=d\233\204:\315t\006=\034\035,\275\266\360\260\274\303\034\002=\371\224\346\274\222\271+=\221\366*\274\253\271d<\210\002-=\300%\032<\324\231\326\274\222\014\226\274\204\254\223;\216y\227\272b\200%\275\274\2002=>f\230;\202f\026<t\320\033\275\273\331(=\017\274J\275FF:<\216\'\233\274\027\326(\273\275:\3438\334\026\035\275Ae\203<[\210\033=<^<=\345.\021=\212N-\275\250`\314\271\256\304R=\325!\347\273\256>M\275\357{\000=\013\242A=\323\001\0269\037\332\000=c\316>\275\033\256\274\274T\347\035\275\240\\\205\274y\204,<\206\346+<>\360D<g\021(=\236a\'<\223F-\275_\024\274<\374\240\r\275_\376G\275_9+=\277.L;\025+\360\274W\361d\274}\t\254\274^\245\302;m\027\004=e\221\241\274\277\210U=\3630J\275\177\010-\275\320_.\275=\335\013=\306\0049\275\332b\337;O`\n=\331\205\256\274Y\034J\274\303\204h<\034\315\003\275\276ff\274[\354\256<\342\3668=\313\240\254<\023\272\024<\210\251!\275\343j\014=\251\023\217<A\356S\275\266\033\346\274\271Q\3749\035\351+\274I\322T<Ak\007\274v.\263;\217\366\246<\005\352\260;\256T;=\0147\031=\262@e\273\006\307\262\274OR\317<\311\240\034\275\227L\230\274\350?\001\275\254}\013=\313\364J<\277w+\275Vo\264;F\364\344<\'\363-\274\2279L\2750\274\324<:\3704\275Ch\247<\226U\237\274\004\014R=\244\211D=+\342\'\275\365\235\020\275\364\227\371\274\217P\344;\273#\004=R3*\275\226\032@\275\t\305\022<\250\357\253\272\227\274\207<3!\225;!G\351<u\005:=\205\177E=7\005I\275\\Xu<\205~\020=\242\277\214\272\026\263J\275\3107D\274\356KI=)\246\023\271#C\365\274\246/\234;=\255\324\27442,\274b\345\201\274\203\3766<\332EI\275\326\306\227<\361Z(\2754\234\322;\2355.;\024\244\267\274\323v\366\273\243\360\351\274!\034\034=i\211\354;\251\215t<\346[\306<-L\332<iLP\275\364\234T\273\017R\320\274J\330\210<\\\366\001\275\232/\335<\000]\340:\331\025\325\274\261\265\302<\221]\t\274)\365(\275g\220\267\273\035\3558\274M\016\247:t\nB=Q\236\003=\323\216\r=\033NF\275.<R:\003\305<\275\002g\232\274\327\215$\275\027\037/\275\277\001\355<\373\250\253\274\216l\256<\244\352!=l}\340<{$g<\260\213\340;\315\313H=\344\363-\275:\177\230\272\337\200:=\234c7\275}MK=\250\254\013=s\351\244\274,%5\274\317\023\211\274\234@U=Tu\r\275t\320?\275|\274\t\275\246\274\025\275-\337\340<c\331\371;\2166\357;\342\341\345\273k\014A\275u\337\022=\025\2567\275\214}0\275\275]\255<<\017P=7\304N=#\262\272\274Z@y\274\356Y\006\273\220g\373<\234\tp<=\2203\274\266\263\245<\220\\\326\274\366`\205<\223\377\356\274\253I\340\274\360\025H<w\274\022=W\210\245<\274\003&\275\202\3407\275\252\335\317\274\257\242\205<h\244B=l\005\037\270\231ba\272\014\200\005\275G \035=U\261\252\273\255\364 \275\304\271H=%%\363<\341\311\026<Q*\000\275<z\302<\361\372\276<\005\326\374<\353\306\370<j\265$\275\332Ad\274\036(\0078\241t\231<\265\034 =l\\\007=\321\263\267\274i\376\333\273\271\2028=\315\372W:\020$\002=\266\013~<\030\261\032\2750\205\232<\312\253\276<\265g\334\274\226\2659\275uq\020=\3550!\275\247\272\037\275\367#9<(\310\255\274\365\304\316;\2225\304\274\227\371-\274+\373\035=M\t?\275\026oH<\305e8=\303\211P\273\036`\335\274\006\3367\275\2321\205<7F,\275\325\240G\274\210\3168\275\033%\343<\346\364i\273\227s\321<\264\205\262<\346\t5\275\320\"\021\275CB\216<,s\024\275\341O\350<\030Wy\273K.\337\273\225\313\213<\372Z\n\275\033\001@\274\275\377J\273\256\331\272\273\035\317\327\274H\234\214\274\241m\312<\305\253@=\3112\035=\343\233!=\274\032\273<O\034\346<\243[P=\367\342B=)c\334\274\031F\254<<\322\231\273c}\240\274\231\375\307\274\250\262\223;\351\261Q=\225K\035\275K\031B=!\210$=\336\201\237<\024t2\275\244\360\223<4\214\355\27497\021=\314\200\001=\0263]<\352Q\t\275^\310J\275\030\361c\273\345\023\n=B\353\'=V\246\237\274\336\034\261\274\022\254\206\274|\312\322<\312\335 =\005\232\371\2742\204c;7\006`<\223\017,<r\033\021\275lx\256:\177l\n:3q\207<\245\312\224\273C>\370\274\362-\016\274\252$\254<7\246,=\270\333P<\215\223\236\273\224\212\033=\22349=d\231C=\256\301~\274\2260\336\274Mb\026\274v\214\017=\"1\364<\374\330\001<+Gq\274\013_\242<\243|$;\340n\230\274\245\225\022=\010\277\211<\3760i\273U.\364;\260\207\223\274\360\361G=\003\302\341:O\302K=\205\250H\275\242\205\372\274\r\270\337<\351s\240<2\364n<\366\310O\275\232\270\350\273R\221\327<Nm\344\274\\ \321<?>B\273-\271\206\274\247\225\022=\241\025*=_\032\r\275y}-\274\351\224s<\233Q\357\274\235\024Z<\324)\345\273\t\236T=p\356\363\274\272$\376\274\227\362\035\275}\204\362<\363\251N=\223N\320;\254\357\035\274\317\356\024\2737\362)=\214e\322\274\017\2765\275d\016\023\274}\210H\275a\343R\2756\323\253<\007\023L=\\e-=\336\232\006\275\375\244\036\275\"7\025=dj\212\274\343\372T=\303\371\037\275Z\242\271\274\rU\234\274\344\'D\275r,\001\275\360\377/\275\273\277\313\274w\261\357\274\002}=\275\344\335\211\274\301\347D\275\"}0=>\241<\274\374\262\023\275\235E\347\274d):=\034\373?<\313\250$=\2148-=\"\337\216\274+\357F==`%\275\264M\320;bz\336<k\216Q\275\364KJ\274\363y<\275\363\314\337\273\326h\212\274\300\032\013\275\241\211D=\364\034C=\004\371\324\274\0143,;j\020\300<\340\206\000\275\310\033\220<\007\252\265\274C:@\2755\253>=\222\033\247;o\364+\275a\205\263<Je\336\272]17=]:\270<\315\3559=\325v,<\356\221\005\275\003j\253\274UP\2069\315n\273;\320k!=|4\332<]\365\372:|X3\274\261\203x\274]\340)=\256\375\346<\221V\023\275\267\177\037\275\023cB=\235]\227\273\327\301;\275m-\220<b@=\275\365\023L=\257\362\016=\037\304S\275\311\365\356<\027\333\331\274*\350L=\222xS<\345B\352;\274=L=[\316\013=d\337\200\274\346\375\242;\351\347\017\274\347\021\331\2740\263\375<[\374\241\274\357XO\274\257\037\363\274\313\311\376\274\311\272\261\274\035\372\003=\352\346\260<3\264\350\274\001|\337\273\303\376\362\2749\347\225<\270\"H\275\026\020V=\025S&={ P=U\302\327<\336r\357\274%\241I=\333\344.;\321 }<&\272\272\273\201\311\036\275\201\377\201;k\265\001<\236\364M=A\347\000=[\336\356\274\373\342\003=\223\207\022\275<=\351\274U\326F=[G\235<Y|\233\274\377\027J<\">\370<\367\273I=K\372\346\274$Z\014<\241;B\275\022`B<#\207\026=\177\303\225\274G\361\306<\377\240==\305<S\275;\332\244\274\206\036c<`\345\316\274\031\327\351;\275\233\211\274\022I\361<\327\2444<=\"\004\275\20659\275\227c\321\274\211*\037=\227 \274\274\271W\026=\273\257\t\274\237Q\013=\005w\201<F\271\020\274\254\'\211\273\335\371K=\321\002\271\274\312a,=;/3\275\002\365\030\275\335\234L=Bo =~\354\r=9\321?\274\251\214?\275\314\300\341\274ns\010\274\363\355\334;\351\327\023\275\257!G\2756\277\245<\002_.=\263>i<l_N=\201],\275~A5=uz\017=\207k\030\275\341\220\244<a\304\206;\032!H=\246\024\r\2756\177\240\2731\360\267<\300m\235<:H*\275\005\314P=h0\014\275\365x*\275\020\217\033\275\311\210G=\242\342\021\2754#\272\274\014\362\314\274D\010L\273\370I$\275\204C\201\274\201\314L\273I\312R\275@0\221\274\033\3247\275E\2268<\313\375\374\274\370c\025\274\373\344\021=\326t\031<\301\2553\275S%!=\326e\306<I\260\377<\034a\270\274\375\234\263\274R\376\023=\341\245\026=\014\"\255\274\241\267\307<r4\t9\177\270\t\275\343\302\016\275}\371\375<N\014\267\274X\262\013=EE\276<0\211\260<\357\365\014\275\254f\263\274\021\262\277:~2\036=yx<=jv\374<\225\3635\275XWK\274|l$\275M\025\274<=\213\t\275\276w\245<z@n;\241t\257<(>\030\275\016\343\363<\334\315\005\275\373ew<\266/\007=\337\013\274\273\376\240J\2755\234\303\274\033\t\010\275E\351\247\274\017\370\241;p32\275f-,=\370\316\005\275(\270\203<2#\222<\336\236\201\274hv\245;\020E\224<\360k4=\330\355\013\275\373\343\223\274\224\3404\275Z\341\362\274\242x\003=\264\2475;\353\333A\2752\230\031=\260\330T\274L\270 =\336\036\305:\tp*=\335\225:=[\341\013\275c\265\027=p\273*;!\221\267\2740\025\362<\2015 \275^\250A=\036Y\t<\"\310\216<t\256K\271\255\337/=0\344\372\274\002\362%\271\230@9=\353-O<>\364a\274y\265R\275\322\327\265<\263\363%\275\333\034G\274}\344\332\274\032\316\254;\3110O={\352i<\020\227\322:\010\372\323<(\223(\275\251\232#=\035\245A\275x#P=\204\340\000\275\226\365\256\272\327\366\271\274\345\345\004\275Y\367\032=\t\217\314\273\323\007\r=\332eK=r\350\363<<\006$=\020\252\254\274\037C\n\275\203\021<\275}g1=A\301e<!\322\330<\264\240l\274\034\277-\275z\274\003\274G\233\321\274P\357\321\274\'\225\235\274\024hh\274\213/e\274v\311\351\273\306\305;\275\270\246\217<\000B@<EG\002=`m\263;\363@O=\300Gj:\334\3760=\355\343K\275\317\212\023=\005B\335\274\203\007\001=\340\024\247;\302\225S=$\265w\274\364\347!\275\205\325\255:T\313W\274?\337=\275{\3302\275T7~\274\314A(\275\2200%=\250*\267\274\253\017\223\2748\216\014\275Np\357<\352;A=\023U\314\274F\201\242<}P\274<\033\206.\275_\266\315\2735\315\036\275\202\356G\275\346\364,=c\320\367\273\007n\210<:\006\315\274R\353\224<\217\360t<\017Z\331<tM\026\275^\3422\275\032\334\"\275\362\000\331\274\240u\344;P\244\254\274\270\356\021\275Ek3\275AY\345\274\315\261\253;\330%\363\274\035\340\327:\3713\3648\370\367x;/k:\275+\315\374\2714\204\025\275]x\261\2735i\n\275\336L\027=O\262 ;\3543\216<u\372\250<\340\270\375\274y\336\010\275\005>&<\346\264\274\273\014r\216<\"\r\177\273\377\306\300\274\301:Q=]\201J=t\367\001\274\325gA\275\212\355K\275\241\360 =\002\200\305:!Tv\274a\356\036\275U?\230<\005\3158=^\335\310\274\377\343\316\273\250M\3409\343\024\302;\264\021\223\274\334\255\026=9\353\016=\300\324\366<\250A\036<\021\210@\275\031:\313\274o\264,=% (\275\201Z\347\274\251\343\037\2755\'\247<\212|\224<q\005v<\245O2=\243$\334<\277\333\035<\253\254\370<\372t\320<\r\2170\275\205\266E=y\330\007\275W\300\360\272\026\235\250<d\254\247\273<By\2744\311\310<&\001:\275\307\224\202\274\036\325\027=\354\311\020=D\230\010\275\363&0\275\303W+\274S^0<+\2072<H\373l<\304\371\233<\255\330\200\274\317\020\254\274F\212=\275N\007>=2\177\214\274\267\276\020\275\247\363\306\273r\0375=\307\0300\275ZcO\275\2570\270\273\207$G=\366\374\321\274\371\"K\275\247\020+\275\240\360\023=>W\007=@\326(=\230\025\001=r\317\272<S9#\275\327#;;\372D\303<\231p*\275\231\214\014;\361\365&=\246x\371\274=\365D=z\000O\275\345KU<p\020\367\274\224\211E\275\2114P=^\307\t\274\330\221\373\274_(\362<xZ\345<h\242\t\275\211\256N\275xP\257<K\243\025;c~\337;r\207i<+/6=\231$4\275\303\002V=\"<#\275\271\232\306\274;]G\275\256|~\274\356\207\000\275s\007\205\274\177\322\377<P\255-\275+\203\240<\341\2031=yi\271<)@\335\274\331\204\203\273%\256\355\273\357J&\275\027\326\324\274\002j\217\274\262\242\224<A\010\300\273\017\210\005<\356+\016\275\321\2152\275\254\321O\275\367\344\257;\301\300\210\274\316g\352<Nb!\275W\314\212<=gF=g\0147=\275od\273\263\014\377<\235=\272<v\273\367\274L\243\204\273eg\240<\313C,=\253J\026\275\335\2747=\036\246\255<\220\242\027=j\031G=\374\253\376<H\364O=\037\213D\275O>\321\271<d\307<\210\263\316\274\317\022\"=\034U\354<\327\302\317\274R\016\337\274\261gN\2749\3633=\247\331/\275\371\'U=\034a\010\275\031>V<\260\254\226<\241\232\324<\324?F\275\254\305 \275\006\262\026=;\364\"\274\274\3017=Y\273\017=-P\230;\014\241\213\274\\\221V=\250(\270;\310Y\333\274\315*#\275d\227O\275\341C\353<\230\3507\275M\270+\275\224tQ\272\263z\016=\356\316\332;\022\020;=\022\267\232<\221\243-\275\376:\007=*\307\016\2751\205\033\275\t\001\221:\326Q\006=\030\373\211\273:p3=\0363\371\2742a=\275\227\306u<=\002a<\371\377t\274\245\375\360;\301\t\002\275=\354+\274\rVC=uzD=)\3678\275H\323\333\274\030=\212<\225H\272<\r<*\275\256\215H=ii\027=\027\325\r\275\010\336\330\274P\254\017=3\022\027\275\032\223G\275r\377+=Q\201F=\327.\006=\013A\322\274\034\341X<\364\226\342<\201\020\016\275\367}J\275\373\277M<K\324I\275\371\354M\275\341\236\016\275\362\375/=b:-=|qM\275\271\255C<$\017\227\273xS.\275\205\204G\275V\325\377<\201%&\275\317\237X<$\354(\275\354\213\020\275\002J\272\274\371\277\013=\373e\361\274\262\277\022=\363\346\246<y\345\354\274\036l,=\277\025\357<L0\024\274\351<J\273\274\256f<\300\342/<8\325\272<q\000\342<\350?F=\217\220@<\261\213\362:dC\204\274\323\262\215\274\365gH=\372k\016\275JZ\014\275\177\010\314\274\334\261\r\275d3O\275\203\263\177\274\241\200\344<\302%H\274\343\353\252\273@G\313\274)\323H\273\016\320?=\027\037\301\274\032\272\355\274\327\371.\274\227\314\034=g\017>\275RC\204\274\2459R=\315\211\027\275\265!\226\274\355\326\244<RO\016=\n\200\006\275\201\363;\275wc\354<\253\371\311;#\177\027\275\231\214\222<\027T\313\274q\216\356\273w-\000\275&\3724\2755$\361\273\251\003a:~.6=\302\270\r\275\037\210%=(\214\264<\360\310\323;\272\316==\236\372\272<\360#-\274+\325L\272h\262\032<\036\232X\274)\306\206;\313\373*=)Tg\274\317\315\313;k\032\211<t\237\007=8/.\274C\'\007=K\344\016=&lD\275N\363\037\275d\337Q=y*\t=\204~\314<\024&\237\274<\364W\274sC\337\272\253\300G\275\274e<\274\024\2241=z\317\340\274\031\204-=\306\242K=\375E5\274\370\307N=\316*\206\274~\3020=\246a==\030\257\315\274Az\231\2745\241\202<\026A\3368?\006\253\274\370\013\022\274&\375(\275R9\366\274\177\343\205\274\nx7=\355o)\275\345\031a<\223\203\266\273\2177\377\273xLR\275\036OI=\206^@=\306F\t=:\016_;\025\201\357\274yW\221\274\221S\022=\323\344P=Y[E\275\217\202\230\273\020\261A\274D\217-<k\017\311\274\036H\031=w\206\323\274\234A\'<0\353\206:._\2029\205\342\014<P_\314\273\034\2034\275\321-/=\347\224\221<Rs\305<[/\372<\265\334\204\274Ln8=\333\3534<\001&0=\354\344j\274V\244\005\275d\033$=\237\243\006=[\214\007<+\314\261\274L\251M\2754\326%=\"\332\265<\345\324U\2755\3324<\352\233\031\275H\370;=\240R\317\274\007w\227<8\014\352;U4\267;E\0237=gfN<l\3041\275\262\370\"\275K.\004=?X\230<9=\025=\216g\335;\254[U\275\272<U\275\302d\272\274\363\375\231\274Q@\353\274\323\2745\275_\255\341\2742H\021\275\201\247B\275\321a\342<eY\232\274\225E\361<e\377\341\274\000\341:=\326\315\351\274\017\2529=\221\377R\275\316\354A\275~F*\274\230\326\023\275\005\363\316<\357k2\274\345\241=\275-\r>\274+\014@=h\227\3319}3\252\274Q\227!=\241\366-=\007\004\366<2\006\247\274u\265\206\274\016;O=\251\241.\275uB\203\267\003\221J\2734\007\022\275\003L\376\274\314\251\227\274\352u\301<c \307\273\'\237O=\317d\256\274\306\236\t\2753Zd\273\377\361\027<>\360\t;\302]\302\274l-\006=\321k\254<\225@U<\367C\020\275\206\357\230\272\324\226\302\2741E\002:\351\t\024=\366n\330<\366}\307\273\001yr\273\272}(<\221\375\332< \2147\275X\302\243\274\205\3751\275\001dJ\275\224\002D<\226\363o<\243jp;\301\203\231\274I\240\347\274+[\016=\215~?\275\314(\247\274\253W\034;\231\305\033\275\216\017!\2751\332M\275+\351\204\274\215x\345\274\375\031\320<#PG\275\334\241\270<\330\304\330<\337&\014\275\200\002y\274$H\010\274\354\016\253\274V\236;;\230\250\330\272\223\013\266<1C\377\274K\262\226\274\022\177\342\274\267\351\326;h\003\334\274\376\261)=\330\273\224<\254@\266<8\336\353\273\202WH\275\324W%=\014@\232\272cf\260<\317\217\004\275,\260Q=5\205>9\347\231\002\275\257\032\030\274\301\300\215\274\030:\036\275`\252\032=\233b\310<\320\322\336<\302\030\006=\022\245\025\275\225v8=~\233\316\273\0275\321<\317p[\274Cc\311\274\306\010D\275\rE\265<~}\035=\275\235\037\275\0278\266<\020=\372\273N\374\'=!\3354<\217\353$=\310\344,=(\223B\273\003#L8\351\236\355<+\263G\275\2300\227<\362\367%=\022}\231;\0104\017=Hr\241\272\347\352(\275\321\354C=\351\306\215\273\355#I=7\3428\275ZA\340<\225\267\327\274\264\332\037\275:\0373\275\306\037H=\002\2459\275\363\014D\275>\356\016\275e\013\275\274\027\003+\274\204\253#\275\006\021\260<\222\3543\275\356\310\346\272\016\372\355<0\310\310\274\273\376\033=\230\320\236\274\347\331\216\274\315\275\031\274\370g~\272\356n\215\274\227+\366<-\207(=\366\026\001=\317\307\363<\304e\226;\333\215\307<\021\254,=\005\323\202\274O\271\357\274\271\177@\275\027\2408\275Py@\275\t\230\261\274\362\250\000\275<\312$\275\221\210$<\262\311a\273W\"\264\274\025\225_<\364O\274\270\000\300\024\275n+3=\021R\250\273\372\250N=\003 M\275\334\323L<z^^<H7.\275\3271&=\307\2630\275\265\375*\275\341&\207<\244\2470=M\362\373\274}\001\363\2742\240,=\3054&=1\275D=\261SL=?\231B\275-\022\002\275\272B\"\275\327NO\275\336I\225\272~\370\202\274\376\335\007\275\2557\016<\254\361\336<3I\253\273\"\3621<\333\303i\274\303\233\343;|\215P=\331\353\341;7\326<=\016\320\312\274+h\033=i&s;\304\274a<\336To<\035\221\005\274\002\214\017\275\221u<<5\340\275<sp\233\274\235\371\256<\302\206H=\200\210P\275i)O=*n.<\351\355};\367\'1=\346\244\250<\2514\250<N\315\304\274\037\'p<2,\244<\256%E=*C\257;,\233\206<\326\376\022\275:\307F\275V\233\275<X\207z\274\201\335\240\273\257\365\367<\"O\246<\036_\217<\202]\257<\224r\000=\221\000G=\031\017U\275o\347\202\274Uz\341;4\031\342\273\262\351K=\253:\300\273\223h,\275\311\372L\275[\232\367\274\340\334\032\275\225\234\037\275%\257\017=\2471\204\273m%\364:`\201!\275\376\313\'\275\377K\315<9\037\002=^\275\000=q\301\026\275\220\027}\274\251s\375;6|\226<_*U\266\014\340D\275\374\342P=\005\202;=C\210U=\277\300!\274\321\357u<\232\2322;u\345\314<\027w\277\274\\q\325\274_\0147\273\023T5=<\251\240;\312\367;\275\027\272V\275?\347\211;\212\351K\275\034\233\275<\240\253\002= \222-\275\210\253(\275\253+\001<%\303\305<\222\347f<p\346\256;N}\013=3\324\267\274s\244\t=Or\025=W\351\353\274\377[;=\2314\310\273|K\216;B\232$<\327\004\007;\365\232\306\274L\022?\272\017\300\305\274?`\203\274\365\361G\275\324i6\275\330@8\275Bf\324;W\314\\\274\311\322\257\273*\0369=\014\324\t\275p\332$=\032~\300<\207&L=\303|_\274|Z&\275\0259K=\355O:=\223\353\016\275\332\271\363<3\277\265\273UbM=0!\303\274\346\251*=\266\340c\272\321\303\325<\260\274>=.s+\275\307\336\355\274{\315\203<\002x\234<\010\335\026\274\246\214\343<I,\344;\354\266\247\274gM\335<SGG\275tOE=\327\3463=S\236P=\312\373\346\274a\236\207\274P\202A\275\271\322\001\273\345I =$\254S\275\271\\\313<[\276\265\273\214j\207<\202\246\007=\354\001E=$4\n=)\333\340<\310%\004\275\251-\006=\313\354\353\273\346\326\203;vTT<kh\363;\017\265<<\271\264\001\2750wC\275\334\246-\275\301\325\026\275/\234\350:\304\247\204\274\3059O<{\255\225\2747<\300:xA\357\274\303!U=C\232\374\274\243*%=n\320\351<3\306P=\346\233)\275\231\232\n\275\321\314\373<<\021\037<\033Y)=\307bg<n\006\"=pH\256<\020\202\360\274F\262\262;a~/\275\3500\234<\256i\030\275\350j7=H\277C\275\241\267\327<\027_\275<iP\245\273\354\3566\274.q\n=\\\215\222<Q\220M<\020x\022<\336s6<0O2\275\331;@<\314\021\374;\240H\207\273 \300\343<\363\203\274<\334rM\275\265\264&\275Ge2=\362\363\215;\225\006F\275Nn\035=X\252j\274F\311\177<\200\366\360;\266\0272\275#uM\272hu`<\2610\010<\306\261\235<\004\3775\274\206\301\265;\201\340\240<\'\332<\275|Wn\274\327\362\017\275ub\311\273R\236G\273%X\326\274\233\231\201<\225\347\230<\013\360P\275U*\344\273j$I=\243\t\275\273.\354\272<\017\264\017<\'O\333\274\240\366\0248\246K8=\017/\243\274t\2304\275\006\251c\274,\257S=\037\\T\275\025C\241\274\021\237\360<\t\237s9\313\r\026\274\307\2553=\302kl:\020\211*\272\325\213\007\275\355W5\275 \276\027\275-_F\275\357]A=\006- =\263Ve\2749\362P\275p\257!=\327\262K=\022\261\216\274\316\tK=\320\231$\275F\317z\274\210\022\3749>X\265\274C\343\230\274\245\270\312\274]\274\302<B!-\275|\351\214\274\226^\035=\267V\216\274M\221;=\240r\341\274MV\355<X\342\003\275\327\267\223<\210\\B=tTe\274\026d\207\274\371\201\260<A\003\350\274t\206I=c\277\330\274\026\313&\275+p\n=\016\222\234\274\357\374P\274\t\247\204<\t>N\274N\013\351\273\247\"T\274~H\217<4\244\256<-i\260:\212\245\t=\013\220\331\273b\312\322\274\310\326H\2752\352\212\273{\021&=\217.N=S\261\363<\305\032k<\032\376C\275\272\017\027\275\0203\007\275g\222\303<\t\215\223<^\014\376;dp\315\274\226\002\027=\r\r\336<{\2577=\252\2475\274p\244\231\274\000\241\003=\301x\311\274\226\020\273;%\230\021=\034\321\'\2756rN=6\267\224<\353\004\263\274\2765#\275\346\311\211<n\213J\2758\246\024:\304\373\025\275\226\316\352<;B\351\274\270iW=\272f\244<\343\237\027\275\201i8;\310\213$\275\323\273==\363c\245\273\241\252\324:\243\273\230\274\205\275y\274Y\323E=\205^>\275\243\225!\275\267\177\363<b\034\023\275\224w\030\275\365\220A\275\326\\\332;\303\026;=T\023\350\272\021E\034\275zh\000=\310\375\335<H\261\250<\003\266\t\275\361U\254\274;\007\231\274\220\303)=c!6:\217\231\\<1b\022\275W\000\\\273C\026\022=\213\2461\275\320t\316\273Z\r\n=!3\206\2743\253\2708>\261\224\274\357\003\n=\360\312\004\274[\373\345\274/\202\206<U\005S=\304\004\023=\231|!\274\211\020O\275F$)<\014\351\021\275XQ\027=,\032\245\273_\223\007=e\345\363\2749\0353\274jV<\274\232\004\241<\227Z\036\273t\300\005=`\002\327\274\361\243\t<\241O\305<\266|S<L\3438\275\021_\223\272\247\206\030<\037}\302;\234DN<\333\225,;\306\364\t=\261L\005\275\332>,\275!#\340<s\271>\275\375\273M=\033z\027\274d\300\032=E\371\230\274\242F[<\033\203H\275Vno\274\032\256H\275\314\'\t=q\315\006=\025\235\022\275b\376\273<\334\005\241\274\241I\005\275\005\314\306\274R\3256\275<]\010\275\360$3=\325\262\022\275\352\247\225\274\305~\233<\340+\277<\030L)\275\370\332A=79\301<w\231\'=i\367\300<\220\241L<!\354\254<\014\3403= \013\363<\372\016\'\274f\225\002\275\256\226\007<K\302B\274\n\267\222\2748\010)\275\014wD=\027\311z<Oi\337<e\350+\275\270\271\305<\215!\374<\001\314\345\273\010\326\362:\322F\246;\016\357\344\274;\024Q=WEP\275\252\205@\274\374\353\362<\241\232\316\274\332,\017=\213\010(<g\367\017=\250\313+\275\311\245\217\2741\2152\275\240l%\275:V\252<\227\034\266<*vQ=\037\2608\275\241\031\300<IG7\275 2\364:\314\364T\275\314\001<\274X<\307<\332h`<\321|\007<!\224\303\274\301\302\231<j\334\336\274\247\370\307<\306U\010\275\352e\215\274\370 \257\274\335l\333<\304\026\237<\026\275Q=\362\346\001=p\317\323\274\377\003\245\274\324~\214\274\227U\267<\240\253K\275q\205\025\274S\035\257<\277\364\005\275\354\')\2759\220\330\273\364\333\021=\255m\333\274L\002\202<\036\202%\275,#;=\231y\026\275(J\006=\216\364N=n<\"\275\017\357\033=\234\201\271\274[A/=\356!\237<\210\243\322<\3519\210;gu\017\275\025\312\\<;\307\243\274u\217\030=\317o\204\273_t\024<\253`\010=\210\315P\275\306\267~;\311s\203\274\366-\'\275\330cP=\366\361U=\241\362A\274v5%=\r\253\013\274\3043\212<R!\226;\355s\316<A\327C<\344O\246<\020\270\213\274\367\014y;)O\020=\"\251\243<:\351t<{3\225\273t]\346;\252\006\200\274\227;\206\274\2756 =\304\204/\274m\275:\274\014\240O\275\'\303\345\274$\215\024=\307\217\223\274\324;\177<K\343\'=\033(7\275O\220\025\275\236\332\213;M\275\247\274\311w1={\004w<u\226\203<o\234\022\275\032JT=t\0347<\332\273\242\274\335\372\261\2739i\213\274\263vE\275\370\273\312<\304\361\"=\232\354\256<\336\001\023\275\374T\260\274\264Km<]\303\205\274*\260\324\274\353\350\027;)K\025\275\353w^<l\223\372\274\340\336\233\273\215\002P=\365S/=\241;\335\274\356\370\252<Xu\020<\306\t:=\210\315\250<$C \273\343O\220\274\241Nz\274\355\273\024\275\242MA=\201\000X\274T{\034\275\001\345\362<j\267\302\274`\376B\275\371\211\007=\004h+\274S\320F=\337?\327<\316\255\376;\000\240\312\274\353\346\227<\220\246\002\275\242\215#=\347(\006=7W\363<=\333\036\275\244\321&=\344{\364\2725s\317<\234\031\031<R\177\362\274\266H\014\275J^=\275\021\310\331\273\363\256\273<\035\225\006=e\220\005\275;\n\344\274\342,\037\275{R3=0}\300\274\370^\374\274N\035\342\274@\251V\275\2109\251<\336D!\275u\352\224\273w\217V=\022p\222<\034\373\244\274\336\207\023=Va5\275\247\2662=R\330\270\274x\306\351<\357\316\004:v{P\275\331-\221\274c|\035=\331\245\342\274\035+2\275|\337(\274\236\002\355\274gz\025=\275$\027=im\202\274\301\366\377\274\335)\024;j\235S\275\314f\036\275\026\265*=JO\370\274N\224a<\311\036<<\215[b\274\316\217A\274\330\r\001=\315FM\275#:N=.Q\243\274\223$\367<^\202\206\274+\2703=Y\032\271\272K\035\025=y|\036<\245\226\003\275Q\267\250<V\267\300\274\374?\231<SN\223;\256\334\255\274\000\326\025=\025V\343<\024\261L\275\032;5=\035k>\275\337\300\360;L\rb\274#H<=(\300\016\275\031E\340\273\027Z\001=XY\272<\222\033,\275\323\254\375<\317\2026=\350\252K\275\337fP\275>\360%\275\274\370O\275!07\275pE\371<n\351\307;\310\245@=\033\251\031\275\372L<\275\204\335\326\274\032\326M<\241~-<\357,\016\273\327EW\275\\&\221<\252\223\201<\350\200%\273\237\025\200\274O+I=M\307\005=l\262t\274<n\211\274\330{+<o\264\032\275\"k\251\273\253\014\302<lf\315<\343\331\301<0|\037=\033#D\275\300\276g\274q\221H\274\006\302\032=\000\324+\275i\261\244<\"qE<\220\367\024\275\004\324\222\273\346\213\001\2752\341\t;\377y/=g6:=\250\005\231\2745#\337<;h\325\274k1\017\274b\251\024\275\276\004I=4\177\037=\277\265\030=\035H\t\275\363\274\t=\211U\211\27471\007<m\303\034=)\332J\274\305\306,\274\302\364\253\274p\361\022\275\022\276S=\220\010\376<\034\022P=\001rC=yq=\275\372JN=\016\212T=y\245\201<\010\320#\275M\232\320\274\227\267\357\272x\340\004\275<e\200;4\203\371<d\206\231\274t\234\014\275\205\316\200\274\277\024\304<\311\240\274\274\311\357k\273\034\331\021\274\231S\005=\034\256G\275\337\344@<6\304\374\274\247gf\274\313^\000\275.\355.\274\245U\336\274\374I\326\272/\375\003=\233N\336<\264rH<\351 \275\2748\201E=\032LK;\305*q\274\265\032\326\274\003s\254\274\275\232\020=sp\266<)\323\367\2735\260&\275\351|\230\274\225%\377<7,\n:\236\363\027=\305a\023\275\225C\022\275\356 \267<\252\364+=\333\226)=\030\214V<\312\301A\275n\306\200\271\305z\r\275\347[B\275\342L\010<\200\267\002;\370\260\373\272\213\2237==\211><5W2=_?\263\274\014\001<\273\371\311\'\274\216k\031=v-\214<\245F\r=\226\232\376<49>=\353\317\235<\340\337\016\274\320\356B\275S^?\275\335\220/<\325\3300\275\363\260<\274\227\324\252<\000p\253<\254Np<F\366\331\273\304\222\007=\260=\312:\204\233\250\274\237!\345<\017 \007\275j\307%=\260\354\000\275\221\\#<_\375 \274\021\032(\275o.T=\351\367\n\275\033\036_;\010\354o\274\037l\023<]8;=t5\274\274\311F\222;I\024\326\274 \334\335\274A\263!=\223D\007\275\226\0236\274\231h\236\274\275\315\313<\303\336\347;L\033\"\275\020\257\026=\230\322\t<Y\315\335;\311e7\2752LJ\275\351\343\234<\273c\304\274\251B\347<2\262\226<\204\376\246\274Z\340\275<P\227)\275\036\372);\357q0=\336\274\006=<M\271\274N!6=\321\033V=\265\273:=\257\237=\273\n\\(\274J\277s<=\211\243;\312U\243\274\272X\n\275O\347\261<\226\241\307\274z9D\275\241Y6\275/\342\250<88\026=\000\204\354\274\217{p\274\356$\225<#\026\316\273\365\200\370;\244\344#\275\234\2672\275\276\304\263<\351\343\"=\006C-=h\212E<\371\020\356\272\277\302\002<Y\271,\273?\325\376\274\014\334\036=S\223\201\2746R(=\265\363\001\273V3$=;\023\342\274q\262T=\254\363\332<C\215P=\342\\\350\274\254\375E=8\324\265<\302X/\274\312\202\227;\200h\r=G|\362<9\312\370\274\277\252\000<)\300Q=\'Jr\274\007\3564=\305\277\301;\254\302+\274)\370F=\221\221+=\177\264\t\274X`\027=ED\300<\332\350\351\274\013\216!=Hc{\274\033\204\344<\370\002M=(yb\271\376~.=\230\272\272\272\022\266\020\275\000\301\210\274/#2=~V\265<&\270M\274X\250\310\274L\245@=;\352\347\274qu\314<o\003A\275\261\021\266<\035T\004\275\306\207\221\274\337wT\275#\2218=_\374#<\301\267\350\274\351j\032<\343dI\275\223\027\n\273N1@\274\362$\022=\367#\256<1\315\373<\316I\211\274\254\367\352\274c(\224\2746sy;\377\"\304<\232\033P=V\223\300<s\243\317\274\354/V\275\202\300\002;\204&\210\274Y\034+=\275\316\344<x\205\332\274C\320@=\033\306U=N\377\236<t\346\027\275\373qV\275\374#\356<B\3041\275\314f\022=*)\002\275h+\034\275C\036\343;\233\t\021=\212\233\310\271\312\201\266;?\205[\274T\216A\275:\271\024<2N\271<q\252\323\2747B\304\274:aU\274\353\373\371\274&kH=xk\374\274\370PK<\350\246\302;\003LU=\330[\035<FD\020\275\036\355:=\264\023\211<(J\022\2754\270\215\272\013}\272<\340\343\345\274\237\360\355\274\203>#\275rC\244\273\312\336\335<\346\232S\275\206\027a\273\222\345!\275\260> \275\021\314\033\275\276f\221;o$\017=\217\257+\275\256r\222;\205\2635=;\345\030=BD\016\275\237k\363\274\010\310\334\274\345E!;,\371\320\274\347/@=\331q\014= L:\275L\021\217\274\304\254\207<\030\246\024\275\027\276,;\360\250 =\301\t\027\275!\025\010\275\204\224R\274h\272\004=\237\211G=}\3269=D\212\033\275%d\372\274\344N\374<F\263M\275u\361\255\274\362+ \275l&;\274\315\261+\275]\251\314<+]\002=\244\214#\275/\221\260\273D\277\204<\037\374\007=\020\253\023=[\211\321<zb\317</T\360\274u\r\210<.\317\253\274D\313\301;\t`\253<Y\235\014;v\310;\274uj:=-\227\317<Yd)=\224\254\\<t\342\311\274j}\211;\'r1=\307~\371\2747\264\005\275g\3044\275\016\214B=\213\341#=\224\345\236<\272N\237\272\035y\266\273O\272\365<\235\033\267\274\277)\326\274\201\341|\274\220\376\033=Ds\345<B\016\361\274\344\223\036<\2413\205<K/\360\274^\223\236<\373$\263;\343\342F\274\321\312\033\275\360\212\366<E\023\321<\204:\036\274\357\345\326<\013\242R=\226`H\275\306\367\333\274n\327\263\274|\323H\275\225v\312\274\277\261\335<\315\341.\275\031ry:L\035Q=\374\302\354<\234\263\263\274\230\001\304<\020\234\357<\211t\373\273y\200\202\274\365S8=Yo\315\274\327\320+\275\333Q\306<J\310\363\274#\033\333\274\223:\257;7\357(=I\307z\274e\232 =%\302!=\356bB\275\006\310\037\275\377Y\302\274\247fO\275g\256\254\273<\023\014\275\343\336S\274\360~=\275`\\B\275\\\306\003\273\230\022\013=}\265V\275\273\273\253<\2331>\275\020y\220\274S\2301\275\342\364\300<*\016m\274S\023\306<]\356\243<\232\2212\275\235\230\240\274\034y\373<2\032\005\275\360\352)\275\201\003H\275\215\037\003=\301Y\277<\275s\216\273\327\365Q=\214\177\242\273\244\310#\275\010\005\010=H\324\021=+\307\\<5\2153\274!\301\364<\370\221+\275\243\021\251\274\301\362\310\274=\266\004\275\372\257\003\275Z[\344\274>\375\277<\226iC\275[\316G<9\007\351\274E#\274<\236\177?\2750\022\321\274\231\234j\274\217w\306\274\260A\346\274\257pF=\316\373<=\301\024C=\036\016\367<g9\204<\236T\340<>A1\274\236!\r<QKk;m9W=\033W\260:\207\377<\275\024t\367<~A\302\274\220\022\241\274\340\260R<\265\n>\274\360\0228\275L4\366\274q\177\204\274\302:T\275VX\243<\234\352\224<\034\212o\274\007\205+\275b6\272<\345\022\024\275\221\177\016=\217\372K\275\177Vy\274:\240\256\274\321y\206<\036c\032\275\375\276\220<\004%\017\275\027gU=\016\245\037\275\243/ \275\246\210\304\274\331\2767\274P\310r\274\371n\003\274\"A\345\274\356\232\253<V#\017=\2534\023<\266\0350\275.\242\331\274G\302R\275\372\335\230\274\251\006\010=\305)\002=\233}&\275\344\032\277<\247\335/\275\033\321a<\276\302N<\225\311\004=\233\025\344\274\306\337\217\274\207\222\223<\007I\026\275]\037\270<UR\277<\t\364\017\275\007K\007=\264\0345=\351\340\350<B+\013\275q\254V=\014\3420\275\367m-=\273X-\275*\256\351\274\263r\r\275\221I3\275\243\2649\275M@\323\273\312a\235<\307\021!\275\"[\366<\250\376%\275\326:\376\273P\247:=\231\265\225\274(\004\220\274G\261\265;\345\006I\274K\240\201;\374B\365;\016w@:\311\025M=(U\320\271\357\326\316<8-\232<bT~<u\204\006=p{\030=@\322\016=\273T\200<I0\013\275\313.)=%\332v<pVJ;\245\010I;\3072,<Q7\275\274\263\007\210;Jx\032=\377\275\256:\032\\\264\274Ig9<`\037P=`\335\035=\343\3159\275Jn<\275.\034\233\274d3\006=\200\254W;WT\345<\232h<\275\373\221\032\275#\236F:i\215\031=\320\'q\274\220\263\252\274\'\244\267<yYs:\312C-=\315\325\035=\025\002u\274\377o\316\274,\206Y\274bI\026\275t\233\344;\240\255\037\275\266Y\343<\225aR\274%\375\234\274\307m\302;Q5\032=>\355#==\343+\2757\253\343<n\225s\274NxB<\022\354\360\273\013F/;)(r<\222,\255<2\375^;F\307%=e\313\212;\034S\356<\032e+=\354\323\261<\023\3204=\377i\310<A%\303<\272e\270\274\321\321\334<\321\035\031=\211?\373\274\0375\332\272\361\346m\274\020n\n\275\307)>\275\360\346\036=,\216\260\273\333[\214\274\250\245Q=\234k\326;@T7<O\341\207<*l\230\274nu3=\227C|\274:\263G=\2359\365<\231\350,=\203\324#\274\032\024\223<O\205W\275;kY\274\354*T=\215]Z;\216\325\036=Fm\006\275\0149Q=\367\324\"<\362\324\344\274\320\261\315<\340\325\026=\337\336\321<\217\225\017\273\303\354\241\274\263\365\304;\232\3132\2757\260\"\275\370F\001\275\271#\014<\320f\032=/\264\340:KPO=\313cX\274,W\375\273\341\366.\275\227\356\364<H\230\025<=!1< \360\n\275\036\213\301\274 \226\274<f\330z\273\346\367I\274\352\247F=\031\026\316<\251\357\006\275\021\024\005<h\235\373<\017\332\005\2756r\020\275#O>\275A%\031\275\031\262\024\274\3309\021=\354\231\230\274>\027\\\274FEK\275\302\252\001\274i\307 \275V\374\004\275\027\213\213\274\364h\272<\336\0221;\246yV;\177+\005=\307\032\210<8n\'=\202\3360=n5!=\006\311\234\274tF<\275W\327\227\274\321G\311\274\314\035\004\275\204\244\232\274\243WA\275\203\325\n\275\006\242A<\332f\234\274i\301\316\274&\234\274<\014\200\264;\317X;<\246\245\000\275c\313\032<\226X\351\274\273;\3078\353k\342\2733\370\366\274\204`\364<\020\253\336<V\016\310;:*\027\275\265\325C=\327\003\264<Sc\255\272H\220\317\272\243xI\275X5\355\274\305,>=\271\3775< \354\213\274\0052\355\274\276?\251<\326F\274\274\370\233\025\275z@\024\273t!\307<\004\361\006\275qG$=\202\235\265<S\265K\275Z\2178<\333f\273\274\007\005\257\274s\322F=\035\213V=V\227\204\274\335\321Q=\203Z\377\274\243\372 =\026-H==\261\013\275\212\334\226<\n\024\371\272\351%\005\274%\347\034\275\005\325L\275\n>\266;\213\2239\275\032\277\374\274\t\300\230<^Q*=\232\345)\275\234}?=3V>=\254\277\201\274\373{\255<~\314\325<\241p\330\274\364\232R\274\360\343(=e6\010\275\320\326G\275aw\005=\264a\364\2748\204\"=M\327\205<[\2203\274\007\316\246\273\371i;=#7S=@\272\036=\275\227W=\214TG\275\256\205\274\274?` \275\240.\n=\232A\003=\"\026!<\030\345-\275\327c\360<\000\357\036\275\204rk\274\320\370\237<\214\353\001;\361\034S=7\320s\274#_\177\274\312`,=pN\204\272\216\256\215<\201\321\025\271\267\234\232;b\214P=\020\333\366;\200\026%=( \021\275\307\237\320\274s+\256;\236\030\r=\307\200U=\324\002\032=\2167\255<jK\034=vi\242<\312L\315<\362\024R\274\247ZA\275 \014J=\006\2352\275<\216\027\275\230h\037\2753B]\274\360\364A\267fdN\274\350\260\254\274j\337\346<\rF\316;=I%\274\215\025\227;\225FV=\\\3015=(\004o\2748O\251\274\252\256W<\343M\022\274|\322X\274\305\322t<\230/\304\274\215d\241\274`t\025=G\312\354<\217l&\275{\372/<\242\203*=\341$\201\273h\032f<e\"\005=\312\316b\274\206\213C=\331\032\237\274\024\205\r\275\365Ni\274\004\327(=XL\370\274\214\007W=\270\227\316\274S~!\275\201m\321<\235gB\273x\336\372<?h\214<u\023\373\274\240=\212\272\361\312,;Z\225R=\030\223\023<sr\243<\3157\313\274~P\010\275\343\371S=\204JI<\020\320\340\274\\\306\002=\004\002 <\026$\217<\250\343\'\275\004\305(\275\377\214\n\275\320\323\337<#G!\275\240G\265<\223\352\363;\363\370\236<04\277<n\373P\275G\203V\275\027\307L=Hw=\275\263P\'\2755\254[\274BB\004\275Z\332\245<\236o\307\273\025\277$\272\273\264\020=\004\201];\300G\321:\010K\323\274VN\014\275\177\221\356\274\035\276\277<\211u`\274\274\0346\275j%\254\274\022\252\237;\215YB<\210\\2=\304r\027\275\357\017\305<O\327\211<\350e_\2730\364\030=F\3639:\263\305\233\274\205\001\272\274\352\364\223\273\014\277\354<\374\364\372;\363\2633\275\034\270\273<U\327\t;\224\340\000;\003\021&\275\'\312\326\274\377i\375\274c\310L\273\2038\007<\350c=\274\236j\366;\010+ \275\027\300K\275`\260d\274F\305+\275U\202\2119\023\271\244\274\035\263\217\274\t\254\306\274\201Ky;pP+\273\343\333\265\274\221|\010\275\377\353\361<\334n\353<\345U\257<\373\333\020\275\244\204\364<\363\017\322\274\265#\242\274\301\204\026=\320\2676\275\302<G\273\342,#\275\354\035\337<\021[\304<\352z\004=\212\025\004=\232\320\214<R\352\004=5A\330\274\233\214\336<\3202%=\375\316\374\2740\304!\275\324\253\301<\312\347s<X\361\226<-R\231<\013\346\024=\371\310\021=[U\377<n_e\273\205\210\224\274\006s\025=Zm8\275\r\314\220<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
