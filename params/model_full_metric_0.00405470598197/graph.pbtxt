node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2020
          }
        }
        tensor_content: ";@5\272v\372\023=/\003Y=;\207\272\272\272>(\274\023\367\315\274\301\3515=j\263,=kJ[\275\013\314\177\273\211R\325<\260\216\022\275\235\225?<\250\360\251\273/\265\244\274|]A<\001V\014\275\2745|\274\356\207\006\274T\007\302<\374K8<\334\301\346\274`\375\036=\217`+\274&\026\034\275v\314%=\022s\302<s\024\035\275\233}\027\275\014}@=\377v\353<\341\033\310<\232T\"<\356\273\263<R\032\307\274\376\235\276\272\370-\003\2746Q(\275\220\345\245\273\020K\025=t\3130=\204\303[\275\017x\t\275\322\355T=\372-=\274\241H\352\274\376\"\326\274\214\357\023\275\261x\317\274\235>)\274\222\3016<5\231\206<\347CG=\237>K=8\373I\275\221Q`\274\320\343\265;C\306\022\27519m\274\217\221\n\274#\210I=t\246\360<\\\020\354\273\203eF\274\211\326\255<\235\016\006=\216\300\037=\360j$\275\030\321\310<\321\311\000=;\253\033\275\034\272D=: b\273\030\260\357<}\354 =\221\241\001=\344\340\005\275&,8\275\020\'7=*\rt\274\222\314\001\275\365\346\006\275\352O\n=\312]\010=\362\276F=\224-\220;\252\013\305\274|\3341\273\002\221\\\273\213\230e\274\203\231\370\274[\234d<\205\314\352\273\265O\021\275\335^+=\266|\027<\233\372d\274\311a\005=\274%S=\237%*=:\\\265<\337m\363<\021v\202\274\333\331\353;\220B\034=I\377\200\273 ?\333\274\007\332\016=\370.\264<6\0138\274\tg\233\2740FX=\033\034\263\274\330\212\024\2757\003N=\305\320T\2749\007\255\274\324l9=\342\241\025\275t\333\024\275\024\355\220<ks2\275\247\261\202\274iI\377\273\024+K\275H]\022\275\336\001\335\274\030\004\001=\204\2741<\002\223@\275YzU;c\001\000\275U\005\276<*S\214:\225\326\303<;\336\007=\356\202\024\275\357\205\263\274\260dD\274V@\003\274\270\367V<\210y\376<\243_\024\274\000\303\242\273\345[\367\274\024N]=\030A=\275\025\253q<\311\356D\275\217\267e<t,\016\275\276{A\275\374\315\360:\270oY\275\330c6\275\004\337K\275U\327\201\273q\006\224\2748\326%\274\177\247>\274\225f6=\341\233_\274\325\304D=\266\353\213\273\025yN<P\022.\275h\025\370\274\365\"D<\344\243T=\2222\241\274\360\205g\274\323qL=Bj\210;\267\213\337\274W\334\033\274\276\373F=*R\331\274\301W\027=-by\273\324\340Z\275\357\362\372<\365\026\014=\272#\006=\235\340V<\200\035G=\035)\034=1\270 =_\310\013<\2709\232;w.\346\274K\346;=\235\204,\275#\351\210<d\334`;H\177J\274\010\360\016\275\035|5\275|Q\013\275OXN<]\217\014\275\362\217R\275)\274\300<\204\177T=V\304\032=\010\342/\2737\307P=f\317%=a%Z\2736\307\t=\241\373\n=\023)N=\371HH\275\335\"\"=\312\2657=L\342\374:FnN\275\245\241\305<\240=*=\324\205)\273\346\207\016=\006\271^=\200+3=C!\221;\275\350C\275\271\333,\275qx\031=f\263\017\275\201M3\273T\263(<\367X\005=\207]\310<\301\023\311\274Ei\200\274\363m\007\275\005\021\325;\350\366M\273\251lV=\266\315\231;`\0266\275\306\031\277\274\321\306\250<e\2367=\005`P=\3156<=\246\2325=`&j;\212\321\314\274\203\007\276\273\031[\\=\030\207N=\254f\250<\254S\334;\022 \020<\243\022\212\274P\306\334<e\220\016=\027\217\010\275Y\021\237<\341\206\276\274_\227\303\273\371\3534=\341\344/\275T$\373<2\213d<\031w\035=\207\301></\255\014\275\261\243\026\272\316\230\311<2\240W\275\3227?;\360\017R\274\212\0355=-I\373\274\356\347Q\275\245\321/\275\"K\377;\375\355e<\342;\027=\006\245\321\273\374\216\014\275\314!\274<Xu,\275T\362\215\274\342\221B\273\357\216y\2720\2471=\023\313t<\204\252V\275\353\223:\274j\262\310<\237\236A=xD\202<<7\305\274S\304\312\274v\330\"\275\377\261\"=\025\373\226\274\326\206%<<\313\355<\375g\246\274\350\0104\275\265\"\313\2735%X\275\004\207\024=N\246+\275|\241\310\273\251YE<\007\033\357<\212\2527=\001t\020\275Y\2668=8\355\305<\342\205\n\275+\207\016=$\2623\275\327\3124<\365E!:O\003\374\274:\2730=3\264e\274\371&#=o\230Z\275\n\345M\275\217%\224;\257\342\367<\253O@:\355\010\370\272\304>?;\2620|<\036\006\210\274\255\203\037=\352N3=^\253\237<jz\334<\243\221\016\275~\376\006=\316\245\005\275\215\307@\274\336\r2=YCY\266\255a4=\224\236\241\274CR0\275\037\314\000=\223\2715=\365\023F=D\n%9E\211\022\275\017A\024\274\350eF=\024I\373\273D\300;\275;O\247\274B#U\273\246\205\241\274\244\2716=\240t\007\274\325\226\320<\030\321+=\266e#<<\312#\275\2144M=8i\346<d{s<*\220\301<\02007=\355{\225<l\274;=pGM\275\202\314?\275\270\225\002=\272\366 =\006\224A\275c\020\270\274\001\021\035\275\327\200\367\274\340\240\306<\005\3769\275\2168+\274f~\035\275\347cz;!\0364\275\004Fs<F\352\022<0\364\341\274k6\005=\304\257\030\274B\317+\275@\036\216\274\rMC\275\263\2400\275\256Q\340<\360\203=\275Ut\256\274\363\215\006\275\376\212\025\275\017\204U=\004]1=J\0109\275?\337T\275\224XU\274\322\304d<s\025\021<h\220;=\227\253\325<\310Y3\270!\232\343\274*\177\260<;6\017=\001\350\001\275\010\315\031\275\254\366x<\022\256\325;\236d\345\274\235\250\247;\234\264*=\223C\245<T\323\367<\255\0259\274]b\332<\257\314\017=\336\303[=I\201=\274\254\332\243\274\243\016.=X\200\341<\320\300\010<~\275\225<u\2260=_\026H=<\304I\275^eP<E\"\026=\024\246\266\274~\204\006={f\313\274\305\304X\275\253\357P\274B\213P\274g}8\2757\034&\275%\247\t\274\306s\362\274\234}\372<\212:0<<p\031\275\022\023\'\275\030\324\207;\006\245\240<E\034J\275\221\311\261\274\3362g\274\335\301D<}^\326\274\337c\204\274;\205\221\274\320}w\274w\2007=p\251M\275r\372\004=\333\331\261;,^\242<z\206S\275m\240\331\274u\243\001=/T\251<\000j5\275Z\372\237;\242\354\036\275\336d\314\274\316F\032=\313\367\202<A\010\252<\327\340\256\273\263\351y\274W\316\021=\026\035$<\233\2352\2752\247\347<#K#=\346\366\256<u\343\307\274\235\266+\275\025\031\007\275\246\031W=\000\371\241<\030\276X=g]K\275\320>\024<\206\255=\275\236>\227\274\246~\030=Z]\303;^\203`:\215\265\362\273-\213-\274\002W5\275+9`<L\337\205\274\205\342G=F\356\';\250J!=\270\0243=\365\244\2209\374\'\211\274\312\347\010\275n\212\026\275&\001\342\274\242\301\344<\337\201\251;\204uH\2752<\271<\360\300\312\274b\264T=\302\251\203<\\~:\275eoY\275\276\010\273<}\006\332\2740\275\334\274\240\250\355\2726\002\213<4zT\275\374mF=iE\212<\361#!=\205\223:\275`\013\'=9z(\275\366\375\031=\322Q\344<:kk\274\3458\312<\007A.\275\275!\017\273\273w\014=\r\001\245:\307R\363\274\207\007{\274\203\242,\275\375\002+=Q\222\362\274\017\313]=\215\2722\275\312\235&=\251\344\307\274+\034N=o\210Z=\235\'\316\2741M\226\274\352\241\307<!^\016=\236=\022\275\244\177:=\225\216\335<2\265X=\"\3150=\037\325Y<\362\030>=\243\203\036\275\316\260\024\275\261\311\032\273\002\201|\274\337\255\273\274m\324\255<\304\t\003==\227W=M=\021\275\367D\020=\337\231\224\274/_\304\274\301\3319=\236\273\\\275\215\222]\275j\207:<\006tm\274\'\232\245<\247\3767=\337\353\006=\210`\021=\241\256\013<\303\250\032\275\362\356L=\362i\004\275\215\272\021=\207U\001\273&Q\034\275x\322\246\274\362\342d\274M\014l\274\332\202\026=,\326$<6\276\305;\313V\300<\261#\"=\340c\372<\357\005\025=gp,=\335\254\323\274\"\346\000=\003cP=w\342\342<\262\273\001=\207\304\262\274s\263\370\273\272\261\010<\0030[<3 \257<\257\342\030=\314\312\234<Fz\363<\205\304\340<J\203+=Q\036\234<0\362&\275\326:w<\246~/\275h2\006< \2033\275\230d`\273\214\003J=\301\227I\275V\211/\275\342\010\2769$Y0=\200Y><`\240\032\275\250T\014\275\345\307\005=\350A\267\2742\022p\274\233\276\241:^]W\275N\227\327<`K\350\274\037\031S\275\376O1=\004\311E=\373\254\202;:\252\202\274\000\024J\275_\034;\275S\017/\275\0308\376\274\034\256.\275V\301V=|n>=\314\366\035=\261\320\\<\235\313Y\274s}5=\033\356\323\274!bH\275\234\005\224\274\337\216:=Z\234E=Q\033Z=D\216t;\222[R<\020\234v\274\007F==\253\030\227\274\212A\337<\017 K=\006F\324<\331\302\001\275K%$\275\320\257C\274n\213\271<+>^\275\\\317]\2758z-==\370 \274\026\345W<K!5=\232U\014<}\233+\274B$\027\275+\2041=4\212<\275\027F\232\273\361hK=\024\031\344\274\313g&<\313\263\311<!\300M=\210\263H\275!7\317\274Dl\023=ot\001=\231\355\206<}\237\026<1\300\322\274\251\250\317\274E\002b<\323g\315\274\031=K\275\341x.\275(7\004=B\2044\275\n\375\246<\247\021\274<A\362\301<=\2670=\307o\312<Z\033s\274\227\300\257\274\001\367\250\2723\335A;4J\251\273-\352\276\274\006\235\006=t\200\235<\277v%=\224 \021\275\351\271==h1o\274{\213\000\275\034\311\247<\264\371\311<\213\306\001\275\316\253\247;mC[\275\340X\033<;\212\026<\212G%<;z<\275N\360?=\266f\254\273\300\3342\274\357\2456\275\306\246^\275\367Y\212<\376i\207\273jE\346\274\345\313\367<\302\214\347\274\035\3467=\223\366\013\274\330\"\022\275\326~q\273b\221\013\275z\343Q=@\222\263<\324\355\273\274N8\014=\331F\275<\336\301\313\274$\3463\274`s\r=\340gC\274\375[[\275\346p\362<\362\020\320\274M\000\020\275\271\347\r=\203\231\312\273\343\257\354;\377\371\023\275\364\376P\275\r@\r=\251\2316=\034\350\255<u\3101\274\320\2037=!\223?<}k\205<\020\010\\\275\322\355\222\274]\306z\274\357\254V=\222P*\275#\351\213<\365\2652=\351|\335<a\256Q=B\027c<\360nC=\224\331@\275\253\354\006<\010Ib\274\006\2518\275$7\251:/\245<\275%\022(\275\357\337\033\275\344\004\311<d\311\336<\376:\217<C\n[=/\203Z=\271\265F\275\362+B=\355sf;\371\371[\275\342*J<\360\362\345\274\3456Z\2759# =\251\264\302\274\204m\006\274!\330R\274\334+\2718\005\344\331\274\354Z\240:{\213L\273\251\334\315\273\330\312\362< \2608=\340\2752\274\013r\260<\026\373\034\275\343I\016=\356\360\241\274\016\227E=\265\310#\2752?1\275Z\256(\274\364{\351;\356\374\021<z\326\320;7J}<\330\356D=\255\341\007\275x\2325\275%\347\367\274S\003\327;\244:K\275\001\2335=L\360Y\275\177}-<\244X\361:\010&\266\274\321\362R=?\201\347\273\363\276\323:\005%D\275\323\354\216<\315\267\020\275/\372K<\n:\353:\331\005\312<L\334\022\275an\226<\370\341\t\275%Sb<\216KJ=\204\361^\274%\024\365<\216\226\212<rv\301<\241>\300\272\221~\273\274h\037\200;L\321\261;\273\3075=2+\330<\006\233K\274\225\310\302\274.\0076=\270T\234\274\340)\335;\364#m<I\014\310< \327\352;\201l7<\207\236[\275f\226+=\2036i\273\035S\317\271\306\307\323\272\267\335X\275<\273\333\274U&\t\275\361\n\307\272\310\340B<\357\231\232;\253r\356\2715\352x\274\267\320\264<\342\023\347;\312\357s\274\201\346\327\274\377/I\275\266\362\244<m\353Z=6\025*\272-\225o<\006v\253<\317\374\251\274:\314\006=\301\261\376;Re\364\274a\237?\275\273\302\t=3\002\301\274\242if;\3220\342\274Nz6\275\321\273\253\273#\214S\275P\026\004\275)\272\037\275$\271U;`\2021\275h\255\231<\363um\273\336\361$\275\313\304\301<i\335\327;\006\247\245\274\314Fs\274\240-\356<l\210\033<x\334[=\254\201\323<ji\034=dzZ\274\362j(;x\017A=%\347W=\027h\302\274\177\230\024=T\353\002=\3208\215<\02431\275\335\034/\274a#\025<\340+9=\364s\211<O\\1=\217\365\307\274\312\271\300\274%^\300;N\201Z\275\023\005\335\274(\203\021=\267\217/=!?\r\2747\025\325<#\211>\273\2479\305\274Vy\222\2732\n\240\272o\255\217;\031\323\n\274\327\214\226:\326G\262;!u\333\274`\246\251;\351\211z\274\306R\205\274\243o:<}VV=~#3=\214H\320\274=\014[;\264\000\031\275\372N\256;V\265\301<.\202\340\274\257\374\231;\353a\005=\237\201\t\275\267\240%=\250\020?\275\277l\005\275\324\214N=\323\234\t=\372\237\355\274\370\260\035\274\r\010\017=\333h%;\030<2\275y\273\272:\024\230E\275\237\325V\275`\377\006\274\225\025\\=\037\237S<\302a\\=L)\270;\321\320\314\274\312YZ=\276W\n=\250`\227<Z\021E\273\016v9=K\217D\275\332\030\027=\261#\221<\3100^\275\233\341\367<\355\277\243<T\216\303<\356\304\236\274\324\327<=\230?6<\223\364N\274\330\342=\274\302D\000\275\326\217c<\264wG=\237\222\372\274\002\362\035=\025\366\031\275*\340\010<\300\350\360\272j\204V\275\253\352*\275\317N5\275\333\203J\274ei\r\275\235Fi<t\365\003=\377\300E=\302(\321\274\022Yq<V\313\261\273\026(\021=\3162C=n\203\'\275<\r<\275^\233G<[\314V=\230r\312;\301\2624=\010\321\216\274\333F\r\275\241A\207\273\033kK=\202+M\274\310\274\354\274\376\253$\2758S\033<\334a\223\274\304\315\303\274\257[3\275o\212E\275C\263\303\274\327y\2748\275\026\031\275\024Y\210;\003\020\013\275L\230B\275\365\265\016=\207\003I\275\241\256\025=*\346\314\274\236\007\275<}\251\014\275\207\341D<\3662V\275\232K\275<\235\300\252<\224\006\013=\201\235]=\003\"X<\232\255:\275\314[\035=\347X\240\274\272\225D=*\313:=\001\355F=w<\242\274\270\265\303;S\340\301\272#\243\r=W\375M<q\2042\273\332\310\036=\244\177\255\272\"D]=\362~\252<\265_\006\275:\004\354</VR\275\352\264\203<\207\207\273\274g\360\247<\204aV\275\377\250\014<u\360\273\271G\223\312<\373\214\343\273FQ\253;\250\373\304\274V\251\243<\310\021B\274\231:\355\273l\234\003\275-\355\016\273=lM=\307\014K\274\353mB\275\343\304\017\275S\003I;\031\005\334<\3528L\274\317a\322\273wI\272;\233\245P;x\267_\274\212\302&=\206\004\201\273\267\316\235\274\340^)\274\317\236\216<j\373\014=9P#\275\303\rD\274\255\177\211<\344\251\211;1\360r\274\247\255\200\273A\247]=\221{\213;\336\377\335\274\027c8\275\367\211\362\272\221\0271=F+\"\275\004\253\275\273\337\t\273<\267 \227\274\353\377\002\275S\332M<k\373\254<\263\257C=l\371W\275iY\375\273\267_P=k\014\030\275,\004\026\275\2050<\275\330\005M=\347\300\027<s\351\303<pH\026=\376k/\275\303f\373<\246\202Q=\350\305\022\275\017\ta<\273\021\310<V&O\275/\216D\273\257\273R\275\244\264\177\2742s\361<\031Tx<\276\306Y\275\276\257\211\274\'\370?\275t\203\200\274%\026\227;=Q=\275\335\232U\274?\257\202<\223/\314\274\346\360==\335q_\274\213\252\253\273\003\355d\274\265\000\026=\010/9\275\203\221%=(\244\031\275\200x\336:\215\207\362\2744\221\025\275\215N\022\275\3360.=\'\001\371\274W\265,\275\271\335Z=S\206\373\272V\005n\274\306\224\007\275\356}9=\243\321\013=\357\277(=\r\234-\275\350\224\245\274\307\266i<\306\371&=0\256\213<6JY\274\337tW=\334\273\013=j\337\373<\336x\230\272(\262?=\316\377Q=\304\3400\275p\305\212\274\236t\334;X\343\002\275\301\276\320\274\341\206\200\274t\201\303<8\340U=\027r[\275\031S\203<\237#\367\274dX:<\205\277\363<*\203\214<\211\214\370;\3668 \275\006\010M\275~;O=K\241a;^`+\275\030W\370;\373\027\000<\211\205);p\010\035\275C\t\036=g\271\214<\000\243!\273\317fz<V\t\270\273p5\020\275\302\211\201<dg\010\275\313\036]<\303\327\330\274\211v\341\272\2038W\274\360\215\031\275:Y\023=\302\261\006=Y\242\212;\210E\212<\231\344X:x\315y<d\376\000\274\246\366%;\233\353\324\274$l \273\354\305\311\274X\316\363\274d\007\013;27\021=\207<%\274\331\350\214\273\266\257\243\274\250Wu\272z\244\001\273\310\203\017;U}\010\275K\263\243<\266\303\322\274*\037K\275\360\006\217<s\244\344\272\371\226#=\177/*\275v\022\230;\230\216O\275NV\357<\370\307\336\274Q\327\323\274D3\277<\341\226\033\275/[\364\274\311\234\217\2748\"\205:i\261==\304I\265\274\025\332\225\274#\177h\274\353\235\257;\303\327(\273\025\020F\275B\007F=C\2773\275\354\255@=\222K*=\260\277t\274\244\205\321\274I\224&=\\}\'\275\300AO<\206\222\314\274\233\232\334;\274\247\221<!\300.\274\366D\317:\252\240V=\231-N=r\027\004\274\031\213\r=W\257C\275Io\367<\216\236&=\236f\225\274\340\260\257<@\375\"\275\356\347$=6\360*=\rx$=\002\037n\274\255\373\031\275y;\221\274\207\373\317;\0214\225<hR\000\275K\220F=\210\251/<;u)\275^\372\271\272\024\345\n=\0101.=\372f\212\274$\351U\273\236\372g\274 \240\206<\212\0024<\330s\033\275m)\'=\277\242\003\275\213\235\273<\"\355\327\273\347<1=\245p\n=\337\301\002\275\316\335i<?\0314\274oB\027=\234\261p\274V\250J\271\023c\306<\361\237\030=\255T\205<\2534Q\275\235\245\273\274\227S^=\263\'\351<Bt\321<\260&K<0\371\026\275J\344\274<\000\206:\275\334E\331<)\274?\275\361\343b\274\004@\035\274\220\362F=\247o5=\362\354\353\274_>4\275\377\353\246<\326\306Q\275\3501#=\271Y\276;\367uR<\2144\310\274 \014+<\333\374\'=\024\302\331\273\002\036$=\221&\342<q\022V=H\263u<*\374\275<\007T\034\275dX2<\351\353\024\274\263\362\030\275\357|\036\275\346\213@=\006G\226\274*\345\200<\304\360\230<\264P\222<vM\302\274\335\207\342;\0245;\275\343\\\326\273^v9=\361J\343<l\206\001\275C\020B=\244\035\224\274\026<\247<7\004==\370\245\310<\t\240V=)8\307<\030\260B=\001e\"=]8b<\371\314\370<+;\037\275\227\027\215\273x(\027=\345\356H\275\017[\022<\364\221K\275\2112\371\274\226:\024\275f\276\337<\236o\341\274\366\264\037\275\033\223\023;\230\341\364<\313w\232\274\034\266\233<\320\205U=\031\247P\275\r\355\325;\222\226\205<\357\362\213\274\003.\023<\202\331\325;\024TT\275\312J\212\274\223\345\362\274\220\024\003=\301}7\275\347}Z\275[\245\007=dL\325\274T\234\017\275\005\006\353\274d\0355=\312\236G\275\321w\036=)\025\017\275\273\207\350\274.\202\013\274\331\003L\275\306\260<\275\305\001p\274Z\272\004<\264\356\272;\274\003=<\363\360Y\275j\225\014\275\204\274\034=\266J\241<\315\025X<\307\330%=[\0204<\214\361\371<\215w\354\274\211\337\313\274\276\335\204<I\377M=\322\212Q<X\257=\274N:g\274\203J\003\273\203\024\225\274i\304+=\264\004\034=\355e\372<v\203\223<b\241R=\304\006\027;\037\220?\275\033\200N\275\2513f\274V\265\030\274r\223c<\030I\262\274\225\257\310\273\212\230\331\274hz\270\274\305\247\032\275\230\254\315\274#\247\'=\252\010\315\273>/P\2752\211\376\274N}2\275?\023\007=\357Y}\274\014@S=\343g3\275;=U=[\003\330\273*\033\275;\252\277\024\275\253\033\030\275\266\024B\274`T\034=#{i<_,\025=L+\214<z\256\302\274i}-\275\334\374\343<\234\2562=\365\222\006<Oo!=\207`\024=\251\352+<0\334+<6uU=\002\376\005\274d\322]\275\316\311!=\036\335,\274\272\224\025=Va\002=X\246)\275\260%\027\275\260w \275N\246O=\302\376o<\321\251\276<\373RD=\204\326\002=\245(>=rQ4\274\245$\t=\327\373\343;\313\256\004\275\036\354\314\273\304x+=\334\036M\274\367nL\274\325\200\325\274\023~U\275\014\014\"\275\277\0341\275\002P(\275\306\325\326</\330\274\274>\014\362<\222\217S=\363\217R\275*\n\267\272\006\033\215\274\372\200\030=\215do<i\366Q=q\037#=\311\304\231\274\275\370C<Y\203\227<\031\324\262\274\352\246\304;\022\246\330<\035\206\027<\363\020e\274\200\205P\274\306\353\254<\2137\024=\372\234\262;m\023x\274\'>\225\2732~\035\274h\343\254\274\003/\364;\245\336\253:D\230\r=u\326c<oy#\275\367 \221\273\227z\245\274\022\016>\275+>\357<\223\007\212<\030@\212<M\006\354<\315\201\302\274\0049\007=\272\355\355\274\304\266\344\274*\202\202<\260\323\257;\250\347v<\thF=>v\025=.\006\223\274RBw\274\246\214\210<\262i)\275\230\266P=o\242\316<h2\023<K\030\021\275\324m\027=u\226\356\274\367\246)=\327Ge<\r\234\'=Y\r==\017\274D\274\202\316!\275t\324]=\363{+\275\316\247\035=\365\227\227<a!.\274\273&Z\275\303\304Y=86w;\3170\241<\211\333\376\274\251\264\370;\255\254\233\274C\313\264\274\235g\000=m6\355<\374\333\330<>\215\371<R\254\001: \207\201<\223`\272\2732P\033<\245\2437=\'\226\021<O\311\177\274&O\332\274\266g\003\275z\235.\275\364\007-<\365\002L;\333#\034\274\335\203\203<\320V\n=\230~\026\275$\\]=\361\370\212\274J\257\004=\234\325_\273\274\304\223\274if\327<O\265\312<\360\006\263<\2204<=\000=\310<\355rs<\211w\024\273=N\260\274\036\301\031\275\013\262<=\354\3307\275\027\3049\274\224\241/<\326k\010=xO\252<9\275\033=3\0238\275\201\352\313\274j\020\374\274a\330\257\274\353n3\275D\252\314<I\256\352<%n>\275JJ0\275\235\206\037=\222\200\314<A\354\024\275\363\225\310;a\207=\275\031FP<\202\346E\275\224B\361<J\013\273<\250\346\351<\036s\026\275IM\265;f\275\\\275\212\227#\2747X\247;\331|\363<\005)\226;\2128\356\274\201\361^<\254\336<\275t\366\235;\004\306\025=\244?\371<\355S\"\275\'\023\\\272\354V9=\273\")\275\205\002\032\275\366\240w;\357}\350<\0361Y=\\\310\203;\346\227&\275\303\235\340;\t\212B=\031i\023=\000\206V=\031\303\354<\333c\373\273\301\214\304\274\360\3739=ko5\275\014*\037=\014\330J=\014O\320\274\347\324\323;\327\014\t\275N\244K\273r\327\236\273b\261>=6\3423=\002\312\005\274x\373\266\274\007BY\274\363\377\251\274&\321.\275\274F]=\024\211\004<\314\244#\275{\222%\275\322\341 \275A\000\337<\261tE\2747\303\326:\334\335\022\275\225\013q<XH\310\274\235\021!<\260\310-=F+4=A\275\332;\224s\026<b\362\344<\266\313B\275I\007/=T\\h<F\274\377\274e\371\025=\363\334\313\273\241r\332<g\324D\275!\262U\275v\327\253\274I\270\245\274=\331$=S;5\275+D9=\201\271.=\243\316\023=\237\034\245;\346N\026\273\377\253K:T\320\337<\276\2403\275\240\313\335;\2608\002\275.\255\347\274cW\253<\207.\017<\017\021\271< \332\016\274B\2642=\037\207\022=qKw<\214\021\027=p\024.=\326\025E\275l\007\267:.\0346=]\246\253<\244~\352\273^\352\001\275\354h~<\342\023A=\373\201:\274\244\261=\274\210\022,=)\002:=w@0\275\216\373\326;\017\221\250<H<\337\274\307\203 =\026\317\364\274u\241\321\273\366\212\027\275T\274\024\275\257m\232<\245(U\275\0306\007=\276\024\223<\252\2633=\277\356,\275A\251J\275\234\213C<)\315\030=@^\333\274\032\336\014\275R\256:=1\215I\275>L\266;R\227G\27527\252<h\360];\302J\222\272p]\003=\003\317\002\275\016\004\020;*\224.\275C;R\273\301)\316\274\002o\025=\301\317\343\274\202(\241\274\303\035:\275Wv\003=q\352C<\221:N\275\311\3275\275[\264\272\273\'< \273\344\n\3759\022+\271<\312\3127\274(T\367\274\201yS\275\264\010\030=\003\306^=\245\212\016<\347K\017\275\263\232\337\274\305\377\014;T\245\241\274*f =\230g\n;D\204\324\273,b\225;pT\215\274\024\355:<!}\361\273\224\032\002\275|\241\t\275n\326\027=\204r[==\337\244;e\362*;O\3725<\323\234e\2726\367|\274\023\340\004<0\314Z=\252\266*\275\342\226c<\030`\021\275\017\232\"=\355\304\027\275\363D7\274\220\323?<\367\t8=\020\007H\272\227\344r<\300\254\032\275\330kJ=\314r1\275\255\350\002=\233\364\261<S\313\251<>G\210;\302\023D\275\001 f<\213M\261:\376\234\233<,<\253\274+}g;\023\237\033\274G\325\357\2729d\'\275\342\'\320\274\324\035\020=\344s\220\274\373\340\230<,&\351\274\343\031\016=@\367\306\273\014\275\003\274\267\270\274;\276\226/=M\343\320<\306F\017;I\0232\274\203]N\275\n\0070\275\224y\373\274\316\001\005=\330\252S=\262A\201<>\247\272<\357+\344<E\350\026\275\333\242i<\313\303:\274\217_\310\27466\"\274c\353,=C\036$\275\001\3400\275q\033\320<\316\276\360\274\300\255(=\220\375\326\274\005E:\274\362\205*=\234\240#\274\234\300\032=\030\242\354\274\260>\353\274\252JJ\275\224\r\350<^\264\373;\034d\037=;\002@=\017\351#=p\352\252\274.\273\"\275\206\273\'\275z\t\340\274\260\344\347;\2551\335<\365\246!\275\001\210\261;)\277\325<\313\030\325\274PL\367\274\336\250\000\274\231\347\315\274\272?\347\274ayJ=ZY\007=\322\025\231<#\022?=\313@\317\273k \032=\206\257\200<a$c;\227.a\274\n\231\263\273\356X\207\274\2170C=H\3535<W7\313\274\025\216\246\274\024\362E\273\347\323P\275P\177\025==\261E\275\001`^<\234G\033=]\315\001=\'\375 =@\340\006<\273\0278\275\340\\\304<\255\234\240<0\350\262<L\237\002\275K\312\225\274\371m-\275V\023\343<>\344\024<\362\356\031\275Ya3=b:+=]K\312\274\203h\261:}\302!=W\343U\2757\326\r<Fu\241\274R\207\220<\351\326|<\323\367\342<\014\252\275<\374M7\275J\262S\27566S\273\273\376w\274\262O?\275\306\021\333\274S!\020=\t\357\206<x\3013;\275\262#\2758\332%\275\353/\302<\304z\263\274+\203^\275*a)=\247\211\000=\205&\361\274&\345\317\274\2742R<\333\261\002\275N\243\220\274\363{*\2757\rt\274l\215^<\021\205\372\274\264\310F<\253C\324;M$\317\272\260z\370\274?\030Z=\357DN\2757\366\016\275\310\002#=\216\373K\275\337g*=\314\322\026<\221\206:\275\216\362\370<f~\350<h\330[=2`D\275\202\006\256\274q\363+\274\251\307\247<Q\232\316;\035\315\"\275\016\244\033=\342\323\207<G\337=\275eV\206<s\326X=\271\216$\275\306\374\014=\211v\201<\221\240\377\272\375\020V=\003\371\332<b\016\t\275\255\306\250<\201~5\275\261R\004\275\326\345\010\275\303\024\037\275;e\305\273\305\230\236;{UA\275\255W\255\274\355\033\325\273KD\225<\0050\n\274T.@\275U\275\355\274\345U<\275NB:\275\332\364\020\275\201d\235<\254\210\250\274B)\272\274\260A>=\357\323\000\275\341\r\377\273\217E%=\021\257\370<}\371\"\274\370\233\242\274\r(.=la\022=\337\372i\274\235\303>=iC*\274*P\373:\376\331\037=l\340\002\271\036F~\274L\031\033=X\3761\275\321_d9A\006?<g\037(<h4\262\274\231R+\274,\334Q\275\326r\013\275\266\271\262\274\271~\216\274\201;K=\2646\r\274m\264_<\345J?=\246\332\276<\214z2\275\240\tr<4u\007\275\366~\n=\330\207\323\273\026\266\231<\275\351\t=Z\307\200\272\352\211<<\301\353\303<\004\326)=\320\332\341<\345\321\324\272x\301\027\275\307\271\325\274]\331\022\275h\\\227<\337\351\335\273\'1\337\274\032\004\004\274\210!\026;3r\230\274\025\007\014<1M\233;\216\351A<rY\222\274q\000\032\275\257\350\3429]\210X=\203>\206<\245\347X\275r\232k\272\313J)\274\200\317\364<\'=\233<\352\331\247\274-\243n\274-A2\274h\027I<r~+\275\033M\371<\316R\t\275T\235K\273U\270\365\274@\333O\274uQ\025\275{pX=\261M\331\274Z+\024=e\022\037=\310\276.=\217\341\"\275\250\2730=\326h\206<\366T\022\275+\334\227;\222\3406=\333wB\275\341\340\n\2754\251!\275 \035\267<aa\202\274\340O\350<2(\"\274e\0043:\243\241\\=\261\300A=\030\202\003=\332\207\001\275\345_1=]Y\014\274.\204\245<\353\021\206\274\tI\017=\332\025A\275\002`C\275M\360]\275\234\274W\2755\306\362<\263\022\221<\3017J=\222g$=\342\256\351;\254$U={\207 =\276W\010=\235\n\230\274\023\024]\275\335e\025<\030\324$\275\272\240\241:9\351\000\273\303\213\250\274\203#5\275Y\006;\275\222\275L=\224\2201\275f\313\324;Xd\310<r\025?\275\242k\014;\016i\327<n\031\336\274\222\220\367;.\327\334\274Te\025=P\340\336<i\2312=-\334\300\274f\350\376<\214\245\372\272h|M<\351\360\311<\327\355\010=L\357@=\363\243N\274\330\362B\275\236\352h<5\352\"\2753!W=\025fI\275K\341F\275!4]=\001\330\246\274\353\n\026=0\213\230\274\265\267\352\274\365\014\020\275\354\322\347<\306\266\n=:x\037=\367\323`\274g!\254\274\340\241h\267M\031\001\275]\003-\275Z\3045\275\252\276\t\274\256N\360\271\241 \330<\006*\311;+_(<\331E\023\275=d\031\275\026\002\302<D\331X= U\224\274rN\370<{\006\014\273\0272\277<\375\236;=o\202\036\275\223P\211;yL.=\302\245 \273\332\221\316\274\301#\265;\322\003\342<G\255M=\374A\201\274\200i\305\274\222\275\037=\236U\001=R\264Y\273\360\007\375\274\263-J=\330<F<\333n\310\273!w\274<\326\244T=5\037\365\274\232%\023<\344Z&;\314}\014\275\345\0027\275j\025Y\275f\206\263<\313\200==>\301C\275\322:\325<\004}V=\356\372$\275/\000|\272+\232\252<\250R\273;h\036\363<\243>>=\376\014\025\275r\001(=\210 #=K\223\363<e\216\230\274\t\201#\275\330\255\356\274$\325\324<\016\261:=z\024\261\274eC7\275\235\223;<\212\022\374<\221Y\316\273\307R\253<<U\272<3\301\217\274c\\c\274\330\253M\275\210\251@=\200!\316\274u\3350\275\"\177\006=\004\2660=*\370\334\274#\353T\275\024\345H<\344\260$\275\303\300\252<\236\355\240<g\265N\275\204?\021\274\242C,\275x\210\244<e\353\022=H6\034=\205u\034=k\370N\274\223\367\240\274\235\275\365\274\"<>=Y\213\'=U\210\201\274\311\203\277\274\316\341L=\257\243A=\351\314#\275\357!\t\274Kb<\275\346A\\=\250{\271<\355\243\317\2730\245\014=`\314\000<\363\031x<\276K)\275\253$\310<~\024\350<\005\2145\275^\261\253\272\233\276\375<!\2717=0\360(\275\207\360\034<\374T\256\274\370\313\215;\277\341 =,<[\275\231\016>=\253e:=\024\371\370<\250t\304<\301\377S=_\314\267<qY\003=\241\013\201\274\253\370\007=FH\316;\256\226\'\275\236qL\275 Y\201\274\366d\310\273\310\215\301\273o\251\375<\364=\325;4\367L=#\360\353<\307\n.=K=\024\275\377It::\312\331;\027\036\312\274\371i\266\274\225s\000\275\217&&\275R1\350<b\271\324\274\2337&=\250\007\013=x\0144\274\003\312E\275C\202\002=\250\2463=3\351\216\2747]\001=\025\330\262<U\361I\273\3459\245<\314{\357;\254\007D\275\311\016\300\274\231W\347<\266\007x\273=\"R\275\267\003+\275\\\205\030<Es\026\2754r3=\340nO=u\3068\273\214L\024\275\362\366b<\201\237\\<^\247\225<\223\362\275<\'\272*<\337]\354\272\260\313E\275v\344\312\273\346\343I\275BE\026\275[\343W\275:\356l<A\266\351<\315>9\2756\033U\275=\236Z\275g \372\274(\362\033\275_\370\006\275\322\235\026\275h\212V\272\377\030s\274:\0074\275\237\372\242\273\004\rJ\275\272{J=\370\365/\275\203\tO=\236\240\321\274Z\343G=\341\3527=\372\333+\275)z%=\030\256\004=W_Q=\244Y\233\274\236RI\274\223\246C\275\270\212\000=\321`\024\275\301K\204<\202\227\336;\266\221U=\327<\022\275\377\377)\275-\310\017\275^\323\246<\224x\331;U\215;<\202\351@=$o\202\274\324\211\205\274\206*^\275\206\247B\275\016P9\275\306\266\356<\026\n\214\274\272\344\263:\371\030\226\272\230_\336;\266\333\330\274\341V\200<\207\202@=\350\201\256\274N#(\274\370\326B\275\232\257u\274~\371\307<\344\013-=\236\240\031\275n\\6=\332\354T\275w>\372<\317\300\202\272\234\207\344\274\034:\256<\'\216\301<\361\2564\275\35313\275\260\261\006\275\272m\023\275\374\330\232<\207\325\026=W\373 =\250\317\356<\224\022L=\320S\352\274;\3729\272\302\335\241\274D\357\277\272\'7\322\273\204\261O=\345t\017=\363\260.=\266\036&\274!70=\035\213\222\274\226SS<KY\220<\032WZ=\254\230\022\275\223\243\307<`\347\263\274<\014\n\275\032\200(:z\004!\275\333\364\261\274Sy,\275\202\330E\275\260\005\243<!\326\302\2749\343\245\274\301\236?=i8\244<\225\271\023\275\030\2151=\312\305\306\272\272\270q\274:XY=Y\243\005\275\32739=0\330\022\274<\035^\275\356\022\202\274\252\345\300<\347\037@\275\266r\375<8\251\212\273lgT\275W\267\034=-\016\360;\340h\016\275A\321:\274\266\004D=\277d\025=\224\226M=\021q\214<\243-/\275\336T!\274\2606R\275\220\033)=\36172\274\r\177\247<h\257\016\275{$\030=#\361\374<z\'\277\274o<\"\274O\357V<\013\027\r\275\260\371\003=7[#=\366\355\016\273\216\224\223\273*t5=\013cC=`\353A\275\243\202\r\273\255\002\000=\374\342\262<\275I.\275q\2615\275\\bN\275\360\376(\275Bb\321\274\377\374\250\274\307\376/=\202\310/\275X\213\007<x\270)\275\220\260\276<J\023\242\274\205\360g<d\376A\274\250\034\244\274\371\2237=\005/\213;\302\220\363<\264<\365\2748%\306;\316b5=\360\252\254\274\356j\214<\264\243\324\274r_Q\275\217\305\337\274x\274J\275\016#\001\275\234S*=6|H=\370O8<{\314\374<\227|\333<\336\215\305\274\371\333>\275\345D(<\340\236\377\273}\347G\275[\302\205\273/{\201;f\307\214\274@F\027\273\333\315\234:\335\364W\275\037)\225\274f\343\032=&\035\257\273\035\004%\275\260\203\351<\016B4=\003\026)=\020\202N=\222\251\277:\355TF<&\336\017<\366\036\221\274w\220E\274\020\324\216\274_\n#=\332\356A\275\205\356\000=\273F7\275\275C\252\274\017\024,\275\036Vn<k\375\014\275\317\333I\275\224\037C=T\035\273\274_\375O=~\250\227:\234\263\231<\017\301\241<F9\363<\376\373\252<6e\201\273\367\035\025=\224+\033\275\\\301D\275\262\310\035\275\022\2202\2750IC=\374\2303\275\3130\0178\312R3<\023/\322\274j\"%=\346w\\=#\347j\274MH\252<.\031\001\275\277w:=4\2167\2743\304\033\274\375\260)\274\023\r1\274\223*\361\274\021N\326<\267G==\363\212\336<3\262\003=\312\240\375<\374SD=\035Y\225;k\374\\\275\311o\343\274|\272\351<\030\221\002\275\352\030\037\2751\356\004=}\036\266\273h\367\365<@\021F:\033\311Z=\312\326\032\274\024\310<=^\351\324\273A\002\030\275K\210\206;:\230\250;\\g;\275\357k\"=\231\021q<@J\347\273A\367)=7dR<\230\323\266\274\310\2721=M|\n\275\362OG\273T\t\272<\320]+=\315\177\300;\021n\033\274Ht\233<x\206\203\274\336I\303;\257O%\275\246\202;\275C\331\345<\364\215\267\274\266\232m<\215A\364<\"}\031=G\010\022\275\242D\224\2741\246\260<\024-\016=\326HQ=\202b$\275\326\310\005\274\274\352G\274\273\252\301<(\nF=\rA1\2757\236\261<\222\206V\274\0076\365<\034<<<\361\337>\275Z<\r\275\020\310C\275;\007U\274\027\rN<\227\"*\274\377m;\275\251O\005\274\340\303\364\274\306\325\031\275\010:\022\275\246.p:5\021\251\274hW\000=\231k|<\255\014\024\275\302\207\250\274\017O\373\273\206z\033;\373\376\222\273\244\344l\274\232[\027=\370\321r\274\226:(=\262\251\224<\350\305h<YB]=T\000\017\275\316\014 =\264\331\007=\367S\334\274\231X(\275\322\263D=x\261\330<\271D\025<G\241\006=\020\276\234;\233\272\343<Y\340\335<\337\213\340\274y\'\360\273\007\306@\274\211(.\275\207\326\3078`\007Q;\032\251\343<\252T2\275k,w<\243w\233<l:\026\274p\006\277;\277\356\014\275\376\254%\275$-6=\320\n1=Q\246 =g\035H=\236\0040=a(\217\274|^D\275\324\203\005\274\253\300\225\274\\PU=\\\216<\273|\256\351\274tM#=\246\322C=\351\016\201\274\334=]\275\333\034\215;\330\004\267;\265]X=\253^\033\275Dk&\275\320\254\020=\340\0302<\222m\326<C\267{\274\013\365\240<\006p\251\274d\014\270\274\036\354+\275\253\021#\275\335f8<\315\334\326\274\024q\350<\037I8\275V\362\360<\025\220\225;$Sl\274N\341\325\274\302\253\343;\215:\365<\334\014\r\275\256\347\376\274\"\352$\274h\004\302;\242:\203\273c\034\034=SxB\275\241\370\232<\311\302\030\275Z\204!\275\253\237\356\274\314\214\235\274\257\355\320\274\031\261\263;A\322\020=J\346\037<>\037%\275<\232J=\013\364\315<\2402+;\272\270W\275#;\037<X\340\027\275\035G-\274\273E\200\274\275\202\363<l\t\313\273\370\363\327<Df\021\274R\342.\275\341\320N\272\025S\001=\247\202\006=\002\254Z\275\2012i<9\345\032=Zh\350<q\314\r<\261\311\242<\271\257\334<\333N\'=\267\200o<C\362\005=4\242Z=0\231\360<?Z\014=\355\306e\274>\277+<q\233\003\275\272\231\252;X\340T\275\335\035\351\274\303>!\274\220\035\013=\211O2\274\376\341L\275\000`Z\275\264D\375<\006\375\002=E.\251<t`\033\275\017\315M\275MV\352;\260O\322\274eo\"\275\255\371\004=y\'G=\373,\213<\261\037R=\223\341\001\273\222\3354\274\334\013\220\274\333l\344;)2V=R1\200\274\204\255\240\274D\255\251\274\023:\031;\300\313C\274\277k3</\337\034\274\357\210,=Pz\225\274@3L<]t\307\274P\003N=\365\267A\275\026\004\251<\003p\363<\351\246X\274\207\227\232<\320Z\026=\305+\204<r\376\377\274\203\255|\274\350}\000=9*\002\274\356[)\275\026\035#\275\337\3245\275c\356\305<\253\342\350<\017{\324\274\223N\001\275\211\003\020\2758\260\276\274\004\336\000\275(ck\274\322\256K\274\311\'\236;\025^,=l\001j<\021\352\r\275\256\306\217\274Dl\337<\206\352E=b\263$=\327\3742=\3079Z<Xm\034<0)\000<\354\236\026\2758XL<k\274\246\274Oa\320\273\345\351P=\013\245U\275\240\213\233<\260\270\230\274\306o\275\274g\025\024\275E3\272<\323\216\027=\321\377i\2741\242\006=RH$=\214\275R\275:\0357<\223\001\207\273<\257\361\274\377\3131\275\024P2=<\027\240<\247\303&=\336i[\275U;J\275Y\266\306<#\224\231<\235Q\016\275\235\253\010=\302{Y\275U\313\277\271\365\363\263<\366.^\275\334oV\275\332\377\355<\331\312\014\275\302\261O\274\237N\017\275\t.\224;y\314\034=\233\2751\275\377\252 \275\300u?\274:\315(=\234\250I\275\222\216\307<\246\350V\275\205m\352<\217\362\375\274\313$i\274\242X\002=\014\2604;\344sR:s\0020=\377;7\275\340\254?=6#>=\242\3400;+b\223\274\331\247^\275\023B\024<\032J\210;ct\232:y\2747=\205\305\307<\361\215\006\274\240\027,\275;\241\207<\312@P=\024\363\031\274q\360\r=\004I\330\273\334\311H\275\200\271\2649=lZ\275\250\250\206<a:\335<@\343\r=y\007\022=)\n\251<yU-\275N\013\272\274\227\271b;\311\312\r=\306\343\335\273\221/L\275\031Jg\274\324L\342<\'\202\204<\370\254\014\274:p\340;\244\022-\275MR\345;t\347\253<\201\256\033\275RI\022\275K\260H\274\346<J\274\236.4=\276\273\301<\0140\"\275\2105>=\022A!\275\274:\001\275\340\035O=\360\003^\274\325\303\r=\262\3116\275\342\242\357<\224\033\000=\232\333\250<\367\3308\275\251\220\365<\2232\014=PkV\275\352<\275;\351\005\263\273\020\252\003\274\005\344\031=\037\253\030\274\231H.\275D\034{<xv+\272\207ND=\313\325\317<g\274W=\"_\260\274P\274\362\274\"\n\217\274C4\367<\026qV=gW\001\275\353A<=%\212\376<\354\243W\274\013\356\035<3\234\037\274\037ye<\273\277\331\273@>]\275f\230K=I\247\306\274^\250\0029)\232\376<\272\022X=~\262\275\274d\214\021\275\374\033\216<\300\275\n\273\033\210I=t\3541=\234\347R=\370\014\031<E\2053\274v\324\375<\277\250\313\274\352\230-=H\250\230<j#)\274T\326\010<\236-\217<\351\255\202\273\333\276\363\274u \256<\357\006\'\275D\306W\275\357r\214<\254A\030=\242k\005\275\201\"&=\350\334\005:*n\254<\036\"\352\274\002\220\326<\363?\355\273\r\2306=\220\317\030:EL\333\274\274,*\275\365\206C\274\376\245[\275B \265\274\370l\325\274\303\364\377\274@F\222<\017A\215<3\330:=\204V\252\274\265Q\014\275-\2470=\311gB\275\217\237\250:ic\002=\033aV\2757P+=\306\211E;\305xE\275\0370O=Y\206J=&S\272<3R\007\274\363\001\032\275\340\223\364<E\313Q=\312m\020\275\276\202\037=\357MB\275\337\330u\274\232#\256\274\301\277\323\274\342e7\2751l7\275F\241\210\274I\201\226<\331@S\275\223G\031\275\270*#<*\243\006\275\2344$=\013|A=\322\300G=\375\001\017\274N\017:\275SQK<Ci\200:\034H\244\274\214\263,=\245z;=\351\251\231\273\265\225\r\275}\321 =r\216\\=\372\2329\275\335\372>\275=+\006\275\t\373<=\375it\274\032\0351<\377\003\377<\227L\\=pd\306\274\210]5\2747SZ\275O8E\2743\320@=j\034\336\274\336\266\022=jK%=\341\333\235<\260}\020=H\222[\275?\274\356;\377]+<\024\217P\274\325~\246<\010q\242<7(\t\275\351L\026\275H\214K\275\335\225\235<\020\225\301<\203\016S\275\306\254<=\2575f<y\266?=\013\216K\274\371`\300\274\225\330l\273|\006\027=:\337\344;\007\316G=\261\323\037<\375\237F=,L\336<\025\331i\274]d\347\274\346u\272\274aq\307;\003\320\000<l\242\331\274\243\310K=B\037V\275\t\315(\275\177CG<\256\314S=\260SG=a\366<=p\274\013=u\375\030\275\324o\266<\372\306V\273\337\"s\273\312l\005=\372?&={\204p;r\266\205\274j7j<\377\320M\275\272\363!\275I\232\010=&\2052\274C\361\337<\341\227Z=\257\225\r\275\310\022\200<\tU)=\035H\\=J\006\346<B\357v<\266\021H=d^\004\275\226\222\t=q\241\356<\001\215\254\274BcF=\245I#\275\247\227\220\274\363g1<\316\226|\274\220\224\273<\262\316\363<\312\331\312\2746 >\274<wX\275\t\016\370<\306\340\355\273\245a\373\274\017\251\024=\207#@=K7\324\274b\217\026=p\350]=\257\2615=\037U\004\275)\3272</\241\257\274\332\245\307\274\275#\003\274(v\345<\013\222\315\274\346\036\024=\177J\217<\202\372\244\274\273X\022=\274\267\257<M\016\231<\016\350A\275\014;\361\273\324t\222\274>\343\016\275\260\324\021=x\221\207\273\276Q\022=\232\265\327\273\004\267\226\274\301\242I=\341\003\031=\224I\010=+\235\312\274\353\213\327<K\375\017\275\006\262\013\275\013\330\003\2749\220P\275j\023G;0*E=VnD\275rPy;\217\td<8\231\252<(d)\275\211\272\3777\356\257\340<9m\337<\034q\213\273\022X\307<\036\320g<\331\200\266<\3259\327<\270\272\340<\244v\037\275\3248S\275\207\334^\2735\303\301<)\3262\275\335\230\217\274\223\251\237\274\306E <\215i\025\274\200\337\021=9\032M\274*\007\013\273\321\221p<\331\250\256\274u\277\241\273\354\315\273<%P(=\222\270L\275\304\326\211<G\3226\275n\300J<o\027\342\274\326\034-<\237B[\275Y\316k\273R\330)\274\350\255K;\316O\227\274\200f\022<]q\375\274\272\343\372;\330\263\177<\250\306\255\270\263\336\303\273\370\207H\275\201v\302<\203\035\202<x\304T\274\036\204B\275\264\355\246<\005\306\311:;\232,\275\217\2613=\247:6;\254t\273\274\314<\204\274\3566\030\274\317\014\247\274\201\374\'\274\2058\237<\230a\007\275\224\253\351<\274\270\204\274Y\365\307\274\311\246\020=\303d\303\274oP\037=\251u\024\275\244\020\031=X\037\006=R\017;\275Hr\033\274w3#=\317\357;\275,OR\275\356\330\336\274\222\314\237\274eS\024\275\276\304\246<\024/\034=:\317\007\275\250\254\017=Zj\226<\000|.=\2122\367<\022\242#=s-2<~\267V\275\251h\270\274\033\177\025\2738\363P=\320\036V\275\336\231 \274\250\2650\275\364\305\357<\273tQ=\001\n(\274%xS\275\255\304\014\275\r\037\016=\220\007\036\273\2509\037\275X3\237\274cR\024=\235\016=\275\362\334\211\274\243w\266\274P\220\t=\201\000F\275\214\311\255\274f\024\342<X\217\362\271\316w\234<\017\276c\274\330 \266\274\316\302\030=\330t\001<\325T\010=m4\016=\257W\035\275=z\236<:\3603\275u\372\253;m\362\305\274\255c\206\274\344J\236<\023\300W=\356\2414\275d\361/=\002\244\243\274-\261\306\274S\303\330\274\315\375!\275\210V\n=2\316\361<\225\330l\270O\2107=\027\331Q<I\247\324;\277\374\006<\222\312\274\274\354R\232<\267Q\302\274\005\323O\275\0350\014=4f\337\273g,3\2740\256Z\275:\026\267<<\3101\275\24462=\221\263\016=\223\204\365\273\270\353\020=\007\373\033=\345\010V<\343C\005=\310c.\274?pQ\275mc\367\274MiH=\004\371D\275\234m\023=\203\202M<P\244\023=j?\004\274\246(\245<\332\250q<\362\250A=\004p ;\377\024\330\274\336\3474=s\310\017=\017\347B=\356C\224<Z\374\301<\271Q\023\275Q\316`;N6\317<=\2248\275\255H1:X\006!\273\0311P=\341\242\260\273T\317\024=KM\037=n\204\002\274\337\302O\274M!\n=\030\277\372\274\353\310(\275$\010F\275\363\361\371<P\027l\274\030\263G=E\3244\275\'\272Y\275\371\324\201:\303=\016\274\2072$=\243\202\240<\246L7<\210\360D<\'\203/\275\002\244\013\275A\254\020\275\357\302\341<|\200\031<\351q:\275\303\027E\275\206\215!<.\235f\273\037\266;\2742\302(\275\010\021\351\274[\325\362\274\034\230B\275d\3700=\326\"\362\274\262\t:=\031\313\234<\274\020L\2752\326\355<N?3\275\027\233\357\274R\3651\275[\217\250<\203\3564=s\007\356\274lq\006<\2733\r=\215\217O\273\302\277\334;\233.L=\225===CY\250\274\002\2747=\237\3737\275\234e#\275\3132\002\274\253E\031\275\356P[=e\010X=/e\r=\257\236\311\274V\020Z\275Ay4\2757\300\265<4\270\320:\376\031t\273Ls=<wq2\275-\233\360\274\210\254C<O\001A=\t<>=\325\261`<jvm<\1772\320\274\345\361}\274g\203\316\273\n\272\260;\203g:=p=@=\201\360\"\274v\'\'=m\351^;\347\273+=-r!\275P\007\003\275\376\344\304<\004\344\354<\205\344\277<3NC\275\250\257\371;q\234[=~?\033=$L\310\274\312\021\215\274V\264\242:e\022\032=\314L\237\274b\240\270\273tM\346<\231\264\037<\037\2711=\260fj<-\314$\275\340zq<\234c9=nm^\275\230\376\020\271\203\314W\273y\202\003\275\n\212\272\274\270\2149=/\206\375\274\232jh\273\315\t \275\226\025J\275J\207\376<\026\262\313<\333[\250\273\233\230Y=5+F\275R\263\031\275\225\241N=i0\351\274<\014\260<S\033\224;\330\256\277\274\346\321\264;\'\2114\275\3066d\274m\267+\275\350\244#\275[\271z<\307R\023=\220c\t\273S\347\221<\327\224\217\2739\302\302\274,F1=\206\201\255<y\027\342\273WwN=3\277F=\016*L\275\004\344L\275#\003\212\272\255-\260\274\214\361\305<Z\231L=\177^\355<>q\005\275\303\365e\274\033!G\275b\210\357<\226\256\253\274\206L\035:vQ\344\274\031\272#=a8\010\274po\000\275\300\030>=\342AU<]\322\031\275\265WG=\225\305M=_\274j\274\327\0251=W\362Y=j\220Q=3\372\221<\302\353\037=\372\206\212;\200~v<9l\303\274S\374\023\275\2430B=\202\"\233<\203\247\033\275\253\236!=/W@\275\250]\271;\033\000\227\274\025_S\275l\2655=\311G%;Y\337[;z:\331\274\021\200*\274\372U\r\275\005\177\n=\343l\035:\276\334\255\273\273\244\036\275\303$6\275<\\\240<\346?M\275\200qL\275h6\255\273,\331\010=\260\315\353\274\007\224\206\274\363\257\021\275\347\360\202<nBP;o\244\014=tS\345<\347\277Y=r\260\252\274\001\227\327\274\234|\221<\301:E\275\272(D\275\030Z\254\274\301:\376<\037)G=*\315\\<;;\021\273f\'\303\274\251\301C<\370\266O=5\250f:\17767\275H\327B\275\230\034\r\273\031=\252\274\360[A\275%0\304\274\253[\254<8\374\250;m\247X\275\222S$=9\231\327</\334]\274\212(\265\274\321\214\376<\030\257W\275\305P<\275\373r\363<,$\216<\23177\274\007\345K=\366\034\233;\221H5\274\267\002\372\274\215\242\215;g\035%:o)o<7\001=\274^.5=ks\013=\301\214\347\273\223=B=t\264\221\274\246\353\366<%\021\304\274\333S\027\275\360p\255<\017\271h\274 \021\370\273z!==\262\003\275<\344\321\032=c\260\321;M\376\257\274\223\231\005=\251\316(=[\033\002=WU\207\273\247VZ=\254~\224\274\357\311>=\221G\013<*3@\275F\335E=\271\344E\275\030\t-<\203_:\275M\335O<\225\372O\275w_B\275\200\335\241\273\261\354\037\275gs\305\274\220\027\261<7\240(=\000\335:\275\311g\362<\243&\031\275awD\274\340c\246\274bv\220<J\333\254\273\'\224\377\273z\0303\275\365WA=\225\201\234\274D\010w<\354]\214\272\220J.=\376{^=\242i\t\275u\376]\275\333\276\r<\037\'&\273\\F\353<\034_\377<A\275\367\274\027\3338=\300\0358=\255\332\346<\025c\033=\215t{<6\321\260\274i\347\251\2749\360\256;\353\312F\275\"\214K=\274\375]\275\252h\222<\r\250};Vb\270<0\263\271:z]\002=\233\251\236\274H\364\307\274\020=M<E6@\2751\330\211<\307#<\275P\254\335\273z\222*=\370!\337\274\206 k9\034XL=\"K\205\267\304q)\275\223\216\005=6\210\352<\006:\001;\023\260!\275\250Y\207<\3650\350\274\313Y\014\275\204:\032\275\210\376\372\273\370q\007\275:\275\001\275E\3631=\211\327\n\274.Z\036=j\275\234<5\262\n=\016 7\2737\216\247\274N.K\275x*\032\274s\360\033=\2313+\275\362\307\020\275T\214q\273\0368R\275\307r\341\274\372\352\276\2742&N\275v\254\314\274O\362\026<w\243\317\274\355\351\027\275M\"\021;`\212,\274L\321\017=v\263\337\272k( <f\275P=[\265\277<\340\363\217\272\347XY<\343a\362<7\312\007\275\'$\236<\2256T<\"#S=\244\347\331<\375X\036\275y4.\275\001W\037\275\242\0215\274\357xK<\007p:=\336\355T;\245\265\253; 5d<\340\365]=\375@#=.\222 <\301\375\025\275a\321\005=#%W\275\211K\224<\031\366\370\2743\017;=\244\264\257<G\177\311\274%\370\007\275\204\361\346<\020\222J=\035\005_<\030uL=\330;\310<\002|\310<l*E\274)\265\024=\375\020\365<@\017\010\274\250yU\275]\322B=\226@\005=T\346(\275\026\033M;\277\311Q=\345\353>\275\376:B=\370\360\276<b\244\024\2747\230\035=*q\270\272\353\023S=\260\254\302<\210\004\234\274,\217\313\274$:2\2746\366E<\325\0304\274?\017\'=f\340\344<|iP=]\020\233;J\'#=\003\270b:(.J\275~\276\302<\211\366\257\274\331E\027\275\353\333V\274\013dp<;\311\200<\252\341!<.)2\274\020\273A=D\305F=p 8=\314#i\274ET=\275L\227\270\274>\233\006\275\212\365Q\275\343\235Q\274\313zP\275\275\213\311\274M\3561<\314\215\354<\220\274&=g\374Q=\n\034\311:\243\2661\274\370\014O=\357?==\027\373\235<h\252\250\274\014\323*<\342HB\275\220\222\017=\232d\332;\272e!=w\3058;\021\317\205\273\270\374\004=\241\322X=L\230\224< \321\251\274\206\373\351\274\010}L\275\247y\037=\211\225S\275\003\270\006\275sN\232<\031t\206\272\256 \331<\2252\\={\315\264\274+\374\242\274\347\370\275:\024\271\037\275\313\246\331\272\327\377\001\275\367\333b<|Mf<\335\266\346;J\3745\275\231t\354\274R\235$=\216j =\255\2109\275Ln\005\274Te\310<-\223\372\273\324\337\334\274\026\t\317\274`\2725=\033\006\275<\307d\305<\324C&\274!\365T=\335\204\337\273\016\201\n\274\266\201\257<\206\317\351;a\224\037=\025\325 =\2749\377\274\354\2634<\354\240\354\274\222\254\244<\347\201\244<[\221\030\274xA\037\275\204,U\275\273\330\003\275&\240-=\203;\211<\320k\230<\0240&=\032=F\274\266&E\275rN\277<\363c\225\272,\251K\274@\234\023=2\342\302\274G\206\204<\2606\025\275\204\244{\274\210\334\177\274tU\277\274\336\234\244\274\310\340\020=\216\031\005=\245\302\024=\217\t<\275\211uR=x\255\235:5\224B=\007A\252\274\210\\\217<I.F=\247\033L=\005p\245<\335U[=j\331\027\274\302\023\327<\306\002\013=e\317#=\363\225\241\274dc&\275#\002?\275#|\363<\"o\016<\'\021\213<\t\336\367\274\030Hc<J\006Q\275\227\263\354\2740\253]<^#Y=\202a\037=E\315>\275\017  =\232\200\310\273\371\016\024=\357WH<\027S\210\273\310D\'\275\26182\2753L\353;\300rq<\352\213f<\372\006\036= 2?=\177\200\031=\364\233\275\273{\3665=\367\235m\274:w@\275\225\333\313<eAC=\032\261\026\275\362\270\000=\307\357\025\275c\274\216;z\234-=\244%\200\273[\024\201\273\014\307\365<59d;X\340\025\275\315\212 \274j\365\305\274B\257\243<Th4\274[\342/=\320Q\253\274\315\2443\273\361\374\000=\325wi<\271d>\275l\2333=\347Z\010;\026\000\210\274\035\244=<\205\355f;\006\3674\274\232I\204<\253S:=\341\230_\274+z\304<\342{.=]4\244\273\263=?=SN\316\273\334\322\334\274\306=\346<\225\036\005\274\230\306\260\273+\030\374\274\035\231S\274\335\334\025=%\333\373<\3010\217<\361 \265<\260>\223\274\036\337\311<\017L\231\273\246\037\t\275a>[\275\367\364\261<\322\226\251\274\345\361$\275\323\263%=\025\375\003\275|M\010\275\352\305\214<*\222\233<9I\311\274\322{D\275\250\025\034\275\321Y\244<=\227\013=N\0031\2749x\027\27505\027=\304\0377\275\350c\224<\246\004L\275\224\316\032=\026\213\302\274\242:\023\275S\205\006=\317\353\222<1a\032=\204\032\360:uR[=\215\377Z=\356\217\312<\275\373;=\233\303\251\274\330\t(=d\276(=\210\3414\275\216x\237\273\304\177 \275\371A/=HX\036<7\272q<\213<\r\275J\311\303<\\\372\002\275\036\275n\274\321v\233;\034\351T\275;d\333\274\314OQ\275\31167\274\021P\365\273\335_K=\352\302\251\274\253V^=#\036%\275\233C\020\275\350\2503\274\352\272V\274\240\215\253<\260\016\276<]\242#=mC\256\274f\220\021\273\023\205A\275\314\301\256\274OA\276<\3245*\275\263\0344\275\036\201$=\220})\2757\312V\274\025\311\275\274\224\207\361:\353<z<v\226\207<K5Q\275\335\0234\274tJ\317\274\373\323:=S\222K\275p# =\370aG\274\325%\325\274\312\2378\275\354\245\212<\355PC=\332\3129\275D\372\352\274C\3708=d\346.=FLQ=*\266\333<J\317\004=\237A\260<\2218\016\275\266*\371<Y q<\315\006\310\274)c\007<\024\"\306\274$\3178=g\"L\275\377_\n\275\231EQ\275\262\242\311\274\t\260\376\274\331X\371\272m\346E\275|\242\373\274,\344V\275<\251\002\275]\264\314\273X\005\375<mRO\275\2366\245<.\\\311\273N\221\335\273\332.V=\252\032\203<\206T\355\274-(T\275$\273\336;\037y\320\274&\\\360\274\"*\262;#\3252\275\314G\203<k\014\241<}\364+\274\216C\355<\236\236\314<\246\004\030\274\232Z\002\275\222\276\006=SNU=@\355P\275\247;A=4\275\013\274\343_E;\312\234<=\332XG<\315\270~:\241\"\205<\230\261,=8\034o\273\2444\354\274\001w\217\274N\354\376\274\267d\242<\364\325!<\025\350\356\274Y\3052=\n\221,\274\0255\346\274f\254\t<Fy\330\274}\372\265\274\220\005\303<Pu*=\231\257B\275\027\254-=\001\032+\275\371a6=\227\0021=\305yS<\250\025{\274i\354\014\275\235 \214;\376\325K=3ee\274\273\r\315\274\254`\034<\024\200C\275\327S5\274\246E-=32\316<Y\007\'=\265cU=\304\206\206\274`\273\255<\211\003\026<\322\203\304<|P\370<;\264\002=\270r#\275\240lS=U8\326<N\362\025=\361\275]\274\n\351\237<\2350W=q\035y\274x(V\275CFL=\230!\263;\226w\037\275K}\276\274\345/\002\275*\201*<\2549\314\274\316s0<\352\333\224\272V\3762\275\330\334h\273\023\251\344\274\367\':\275\341&3\275\363\277 \274\232\305\373<\004\001\322\273(W{\274\201\326\236\273\265\034\355\274\241-9\275\255\3170\274\212\242\021\275\332r\211\274dr\004\273\251L\016\274\035\316|:L\252\253;\347\322\002\275\324\362\006\275\2648\337\274\372j:\275\016\316$<Hg\332\273M`\260\274\257\222/=\217H\274:\232[\r\275_e\373\273r\211\000\273\357U\030\275-\307V\275\325\221=\273\356)\247\273\'@\014\275^\231\'\274~\037T<6\205O=\013:T\272a;O\274\334`J=\273-\332\274uh\254<\033\350\323;+R\277\274\323\223\002\275\353C\203\274\010\352\'\275\212p\341<\341\241\245</\271}\273\322p\241\274\364;\251\274\205S7\274T\003+\274\323K\246\274\030\360\213<\260\220\273\274\352\305\276<\306\374i<\241\266\255\274\277\363A\275\030\314M;\272\303;\275\263\256i<\303(\027\275\007SA<|\270\253\274<*m\274\033l\024\275\236\216\357<%\336\225\274\261\210N;\007\332\371<Cg/=-\262H\275g\2113;\266\360A\273 \033C\275\276VD\2756]Q\275qt\352;\004\016\370\274\341&M=D\350\025=o%8=\334\235\031:\256IJ=\366g\023=k?{<@NP=d\222\371<_\322\"=M\021I=\322\005u<\302\225\216<\004[\036\275\272\027X=\325\211<\273\202OR\274[\366Z\274\023\227\034<\016\3759<\037p\216<\243=\'\275s\344\007\275\371\366\356\274\351\345\247;\302\274\030=\006\217n<g\215\331\274\263\347\001=\3210\325<\350\016\221\274\275\2357=\255s\"=J\215\002=\206\211f\273\351\377\\=l\327?=\225F*=\226]V=\357\314`\274\214\325\034\275\365~)=\364Ux;Kr\010\275\272\340\272<\343oQ=\225\3158=\002\252\032=]\227+=w\025\260<\006S!\275\214\231\003=?c\037\274\220\315\016<\342\203I\275\262wH=qP\032\275\001[\"\275F\244%\275\206d\231<\374\023\337:\216X\3679\303tU\275\254\202\335<\334\200\204\274p0)=\215\031s<D\302\"\275\272+\347\274\336\017\367\274b\243A\274\235\335\306<7m0=\230\305v;\241\225J=\214\327#=Xrv\274+l=\275\032@\267:\205\177\227\273\000\243\222\273\000\023\222<\323{B=\224\340\r\275\345\253\026\275\230\352\024=)\270;\274\335\315[\2758\223\250<jg\005=\203\372R\275&KK=\237\225\265\273\231\307<\275\307h\033\275\232\265#:\354\242\256\274\334\355x<\3700B\275\272O\210<t\372\013<D\t\316\273g\337~<G\346\032\275x\034\302<T\227(\275u\035.<C\264.==>\034\275(e\025\275\027\230\037\275\033\002+=IJU=\233\204\030;!\3653=\346\377 ;\005\230Q=\241\022\206;\330\336\227<\340-\003\275\271\265\036\275\365\240\373\274\221i[\275\003\323\333<\326\300\030=\242\375\235;\313A\032=R\234E\275gO\331;\224\240\230\273\245\363#\273\301aH=\035J6=\025h\361;\245tU=>\230K=\241E\372<\362QT\275U2\367\274\357\314\355;f\205\016=\346k\023\274R|,=S\352\r<*\177\021\275ry\310;Oww<MF[<xF\003=qw\364\274\177w\022\275B/1\275bK\204\273Wb\007\275)\030\237:\265\000\244;\356\003\247\274e\237\351;\363\235G=\206GE\274\244KJ=\334\000E\274A\257\316\271\373i\000;\351\203\204<\322\341\234\274\201\207\270\274Wc\340;(3O\275\224\004(\274Yv\316<Vw\025\274\177\3411=\345\262(\275\370\025?\2741\353\r=\204\365V=\202Z-=<\034\035\274%|A=p\223\007=\3705\303<pS\354\272\251\036\010\275\310\272#\274\005\'\004\275f\214\003=w\366\026=\2128\006\275\214\220\353<\240ZZ\274g+\242\274\333\335[=\233\315\014=\312\376+=)m\002=\032\341\202\274\334\314a\274\030\267L\2753\251/=\322:(\274\376!9\274gJ\364;Z9\004=\214\007\177\273\274:\372<a\n|\274\\x\022=\'\003S\275\277\2156<t\371\253<WP4\2748\322\234;\016\2246\274\343\261\202<\037\223\360<\022\217\351</\t5\275\254\261,\274\006\354\272\274\217\232X=\376U\003\274\303;?\275m\002\025\275\340\271F\275jQ0\275D\322\337\274M\014\357<J\324\032\273\005\006\341\274\272\254\013=`q\001\275i\267\300<\313d\343\2735U\234<\032\276\342<b\017P\274\310\2117\275\335\002\261\274<\202^\275\006S\234:--\022\275\021Z\250\272\366\377\336\272k\tR\275\004JG=\235\337\327\274\207PE\275\200\201.=\364\006\223;w\201\215<\317_\207;Oi\340<\211\036]\275\376@\322<\023\301\006\275\226\006\241;\206\254y\274\nj\303\274\371}\266<\2614\342;v\216\327:yU\231<\250\361\247\274\310\325\260<3\034H=sJ\006=\242\317\313:S\223\343<\026\203#\274\3628;\274\245\270\302\274Cr\"<#\272!=a\372m<\314\234\024=\3043\026<\227\335\226\272\364LN=\016r\010=h-R\275U\250\356\274y\032\236<\001\213\r<\245Uy<\262\341\204\274T\027\023=-,\030\275wsU\272~\221\231\274\230\005\353\274\202_\303\273\333\271\025=\272\277\373\274\304`S=\337Q\032\275\1778\216\274\201U$=D\017I<Hq\331\274\334df\273u\307\345\274;md\273\267\333\020=\322\031\260\274+g==U\311)=\324Hf:\3113\337<\377\261\027\275]\3553\275y\276,;\276/\245<\350\332\274;\035\376K\275\307c\t=\260\355.\273\376\r!=\272\300\363<P\2500\274W\354\221<\325!\202\274{\2304\275c\232D\275k\235\\\275&\274\007=\245w\216<{}\n<9\310\377<\260\225\332:Z\232W\275\222@F\275\300S\306<\245D\355<\274\006#=N\221\026\275\345\000\3379\253v\343\273\"@#=\013\243\333\274\314\201]\273N\"\327\274Y\330\233;o\221\021=4-\024=\267\235\253<e\231\342\274@\315==\353 $\275\232\267\307\273\223\367\211\274\003V?<~+K\275=\260\362\274\317z(=\347\246\027\275\237\265C=\024\354\336\273\261\"\305<\355\220\203<\263\213 =cX\t=\036\300Y\275cq\007\275\271(\243<^\312\326:\363\325!=p4-<\221\210Q\275\342*\254<\3671\237;Y\266 =;\t^\274\232!\323\274\372V\213\274\017\221\023=\246,a<w[\027=\365b[\275j\363Y=\314\200V\275O\244\002\275\343F\\=\213o\271\273B\267=\275[\213.\275\366\006,=\303(\322\274\331\302\210<\207\3153\275\260C\027=\203\032\3267\376\327*<f6\217\274\234\np;Q2@\275yj\220\273\016\241\010\274\237\273\021\273#:?\275\024\247U;\277f\306<I\003\307<I\333\314;\346R/\275\204\262A\275\264\24338\231t$\275\370\316\232\274o\204X=\263\331Q\274\222\231\204<LhV\275\260cP=\024\225\231;a\225\301\273\322\370)\275\025c:=u|R\275\304\262\227\274\351\031%;L\230\211\274\246?\275;\354\312=<\276&\325;\240\022\216;\352\272\334\274g-\021=\345Mu\274L\252\215<\203\027\377\274%\2161=\231\372\007\275\306\035\375<\001\377A=\244\212Y\275\027Q\276\274\306\304\341\274\345)\224<\246\276I=Q\3422=$\216\246\273\261<\007=0\234\302;!\327\346\273T\327\034\275\375>\271<\364\363\263<\204%9=\214_\354<\334\r\020\274\031\366P<\r]\274\274\271+\275<\327 ;\274\310uN=\244\314\352;4\2362\275\332%1=\276\206\357;C\240/\275\225\265 <\035m\363\274\301K =\021\t,=m\037S\274\215M\373;nv\"9\342\204W\274x\307\024=\371D\002\275\365(\234\273?\225\035\275?\300)\275\332\222\001\273<dq\274\350*\261<\261\216\001\275\237\"<=A_/\275\216\274\016\274f?\236<\374\201\305<\354E\033\275v\334\220<\3140l\274\251\017\262<\177J+=\277\320\354<<\214\'=\320qo<~\177\246\274I\236Y=\343\032\351;\254\317\017=\033yB\275\\\207H=\262\201\200\273h\037\\\275Z>\"\275j\352\002=\322t\342\274\336Q\232<\256\336-<\030B\275\274\236\262J=\307A\001<\33656\2752-\302<!MS\2738\033X;\255yE\275\373(\337\274\367\304T=\350\236l<\034\275[=\211h\007=\320V^=cH\201\274\226\006T=[\\<=\220\332)\275V\003\004=\005\347)=X\304\234<\014~l;\357\263:\273+\204%<8^5\275O\007$<AO5\273\023\2573=\206z\247\274\013j\003\274\361\361\246<?\322\004\275\347\305\360;\367E\316\272s\276\360\274\230%!<F\276e\274a\004g<\260\337>\274\220[7=\255\334B\275\334\214\036=\327qA<\371f\353<\206\201Z=\262\360G\275\325d\365<\236\373J=\001\306\225\274t\032D<<\0167\275>\273<\275\032\327/\275U\315L=#\346P=\266\3745\275;\210\375\273\371W\037\275\310\224}<:{)=B\351\210<B\326\326<\351\213\332;\277;\022\273\013\206P=S\331\247\274-\336}<\233=\272;F)6<\240M\224\274\334\347\"=\367\324A\275\237\217g\274=\211\"\275\036\372<<\241\250\242\274\030\321U=gv?=\315\234M<\253\0217\275\005_<\275\222\022U\274\355c\032;\325Y1<\255\262T<\254\007\034\275?\2539\275~\346\027\275\373\205\315\274`\272\254\274\200\3432=\242\321\205\274U\244\237;\356W\203<\023\372?=9BU;\305Xb;O\3065=\254H2=%|\010=\345f\t\275T\355\304<GD2<\330%\330\274i\365O\275\232\023\357<H\251\253\274\035\2421\275w/*=zOQ=G)Y\275$\352\212;1\337\034;~\024\010=}i!=k\243>\275\2760\031\275~\273\261\274\027\236<\274\305\303J=Xv\340\274\316\306\013\275\305\234<\275<\025\034\275\300$?\2754\373}:\367\030\330;\343g\024:\2639U=\027\214b9*3P\273\347t>\275\010WR=\337\310\354<\205\267\276<\334\323\335\274t\017\216;\314S\242<\304\315H=\250\321\273\274\024H8\275\302BY;\246c\365\274\336\016@=\227}\356\273\357E:=k\256:\275?\315$=jsZ\275\260\266\231\274ca\247\274\346\346*\274e\227\321\274\246\360\307\273\350+;=\237\355\352\274\207|\272\273\305\341\364\274AG;=\244\355\030=c%:=\306$\343<O4>=n\304\323\271\313\356*=\202\265Z\275i\323\017=\330>\261\274\374\373\233<Q\326$\275\240\210M\275\345\273\357\274\233\312n\274\300i\347;\370\2674<\034\317\"<wC2;^\236\026\275\014\264\022=\302U\225\274@\271\037=\205=\330\2748K%\275U\366\313<U\227\234\273\367\305\022\275\345\214\334:q\337\212\274\313\217\001\275\225\215F\274\203\3728\274\361:1=\270\373=\275D\0321<\260\310\275<x\366\223\274\200\350\004\275\211\366\222<S\251\036\273!\230\236<Jz\231\274gg\356\274\004\324I\275Y\327\r\275\316ZJ=\332\277b<P\356\027=\215+\'<\237\203\031<{\312\307\273`\371\351\274\002B^\274\374d#\275\252\356\260\274au\203<\210:\262;-\004@;\252\025\275\274\274\264\034\275\004\375S=*.%<\360H\353<\242\217&\273\317\254\331\273\377\004;<oH\223;vx\036=\333q*\275$\026\341\274\225\0170\275\300\324\030=\221\335\230\274v\021\026=M@:\275\321\027\035=\227\224\274<\362\241B\274f\235\003\275$y\023=qL^=^\231\345;\221\214\237<\030\226x<\020\246\324\274y\t\000\275,\250\357:9\271Z\274\320\214\275<\332Y\2429\374B-\275m\256\263\2746TJ\275?\206\344;\376\364\245;Z\267@=r\3657<\335w\007\271\025\007\351<t\241\217\274\237\252+=\203\304\200\272\272\256\224;\220\375#\274E\352\016\272\340\021\376<A\245B<\214\343\305\274\3259\205:\275\222\226\274\256\272\031\275\216/\035=oAl<\246\364\305<\022\303\307<\216mm\273R\"\335\274\351\005T\275\371\267Y=\266\036\220;y\223==\274\207\256;\023:5=t\216\267\274\236 R\275\302\2072\275\372\2600\275\305\026\241<d\366*=J\301\014\274N\271\370\274\361[\325<G\375\232<\301\206&\275\301\010\017\275\316mU\275\217\221$\273\257\270M\275X\344\272\273\343\224\205\274M*R\275\203G\027=X\301\236\274\20415\274\007\307\331<\025\2176=\211@\203\274\245\177W=\276\247%=(\0350\275\263\246\334<\247\301\360<;\237\221;#\3421=\217\310\035<=\241\364\2746\325=\2744\366!=\017\324\010\275>,\017\275\212\374:=N\023\317;\310\035\215\274\003\356Q=\275\004(\275\374\263\023=\260\262\314\272\346\0312=\243G\303\274a\344\345<L\267\231<lV\356<\310s\\\274T\034\004=Q\360M=\316\337\017\275\206}\000\275\200\210`<\022r8<f\356[\274?\251y\274\377\305\267\274\312\316\031=\021i\t\275K\231\215;*\366x;(,\000\275\231\315\002=\233\254\027\274g\322\372\274\203\250?=u\027W\275q\"\024=A\245r<a\243V=Dg\244\273\272w\300;\265\201\020=Ox\021\275\317kn<q\257\347\274\276\014\003\275\006\375J=l\204\332<\255Q\205<\224\350\365\273s[X=\261\031n\274\027\027\325\271\375q\314\274\203\\\210\274 ac\274\344\372\207\274\211\377\255\274\333\330\010=\364\nT\275\205.\345<\3248\013\273\372\302i\274d@\333;5\253\242<vw-\275l#\344\274w9\036\274\227|<\274d\373q\274j\351V\275\365\325\013\275]\267N=P]R\274\004.\302\274;\2149<iy\010\275V\211\264<\265\262)=\260\377\215;\254\023&= \271\265<6\221\322:\207RB;\277j\306\273\332\2654\274\0033\007\275\365MY<\256W\037=\310\213A\275\2070\230<\333p\036\274\3644\312<\255\272\035:\202\265\334<\022\"\326\274q\035\253<Y\316*\275\307s[=s6z<\253\341>:\336!\332<;q\251\274#\271\005\274E*\246\274@Ca;r6u<\204>E\275\027,,=\371-[=cM\005\275\333\'\276<\3008\270;&\3528=k|)\275\254\210\3269\n\320\222;~\355\230\274\263,J=\326\000\n=\014\344\'=[\301\351\274\303w\210;\0375\242\274H\223\006\274\360\227N=\250C\367\274\026\270\246<m\307J\275\227w\031\275L\214+\275\300\365W\274\256/\007=\357\324 \275Z\311*=\221\000\340\274\211g\270\274(\361\207\274\321b%=\344\324\361\274\371%!\275\337o<=\021H\317\271d\223T\275\233)\032=\227\262\n\273\212\030X\275\363\353\336<\375]\360\274\207\267\246<Z\225\026\275\031\230]=\213e\032\275ac6\275I<\'=\252\342\002=\250\303/:\231\nE\275\362\342\017<\324\233M=\256Z\001=\331W\022=!\202\353\274\2167\010\273\225\246W\274\007m\025=`\3472\274/c\2149P\220\207\274\270n\020<\335\024\021=\311\253H=!\273\323<g\341\';g\253\006\275\232\025Y=\377\353\275\2734\352B\275\357\277@=#ZL=a\360T\275t\n\031=\317\242F=\2461\\=\265\tH\275\203\343\001=(\"\350\274\\?\024\275w\252f\273# F<\366l\215\273v &;\364\226\347\2738\242\347<\347\307\r\27462\347<\n\217O\275z5\001<\355-\300\273\t\350\361<\323\272\031\275\'\220\027\274CU\025=\256r\036=HyR=\315\3676\274&Mu\273\231[\377\274\005g4\274@\240\335\274\'X#;\216S\371<\372D\227;G\302\270\273\240P\311<\002)/=-2<<\223\300,\275$|>;f\243\343\274\354>\374<\227X\205\274m\365\260;\230\252\257\272\227\232\210;>2\307\274\'\373\020=O\251\310\2746\201\227;\262\257\020\274,\0045\274\004\037\004=\254\323\200<\305G\022\275}g9\275\256mK=\220|\013\275\242c\373<{\323\'\274#f\014=\0047\216\274\201sK\275%\270\251\274taU=\374a!=4%R:\251`\373<\233%U<\3030\344<\017.\215<GO\230<\201\010\350<5L\254\274\371\030\206<\031\317P\275\207\362\t=%:\032=;_1<7\027\274<\316\231\t\275\345E/\275g\010]=PGL\2751\374\027\275\003\032\363\274U\3373\274\343%\232;o-W\275\026\\4\275\300\246\013;\343\"\275\274\362\252\332\274c\\\272<r~\233\274\333;\013=X\324|\274\246\304\242\274\326T\325<\004J\352<w\305\217<\202\032\346\274\014m\333\273V\233\237\272\006\037\036=l\251S\275/\304\307<A\235k<\232]\010=\373\265>=;_N\275{>\000=PG7\275\360\001$=\212\260\014=5\021\002=w4\374\274\341\362A\275eD\037\274\312\262:=\337\"\353<\340i-\2741E\377:A\003\346\274Ji\342\274g\025\327:\005\230?\275\030\261\003=\306\023Y:[3\366<\230*==\260\030\273\273\354\327<;\253\004R=&\276\205:zg\010=\211 )\274%\201,=\276\3507=`O{\274\007\214-\275\311\362#<\346^\345<\205\375X=^zT<\334\335R=\213}N=\344%8=\3626-=(k\353<\322E\241\274\330~j\274\032\315\204\274Q\210\212\274\211\2755\2753b%\274gN\203\274=\003\201\272\247\177W\275*I\241<\033\347\307\274\374\241\206\2747\2039=\'[\214<\352\2256\275/\022C=\032\034\027=\263\233i<t\216\277<Z_\232\274\302kY\275\305\300\241\274\265\356\030\275\374\207.\275\031\017+\275\224*\310\273\2247\206\273J\362\306\274\357G \275\236\022\342\274\243J\017<;[\027\275\277\300A=(\\\236<\n\201\253:\340\236\036=\340\216A=ZM\0029 {\276;F^x\274\006\203\023=g\336\356\274\261\001N\275\312x\004<\204\320\035\275\006,h\274\377\321\t\274\264j\205\274]\272\220<\235\213\004\275Ph\301<\234S#<Z\213\222<\\!\021=\240(\201<\315\005\t=\312\224q<\346\225\006=\033\253\277<\301QX=P\037\326\274c\265\272\274\321\2304\274\350p\206<\013\250\345<\215\020\223\274X$\013=\2014\240\274\230\276U\275\302\343\206<K\325\'=Fy\"\275\374cD\275P\221s<\n7\n\275\275O\252\274\024\227I\275\304\275\274<[\257\227\274S\361\032\275\354\251\035<\243\2104\275*\374\251\272\344\376)=\320\331\"<~B5\273\340E\'<s\237R<\221Y^\275\006\267\r\274\306\255\343<k\211\367;\016{\210;\343\021_\274b\251\317;\227\231\332\274\361N\330\274\255N5\272\034\177\202\274\373\r\337\274\243H\024\275T\317\236\272\241-M\275v\021\004=\r,\'<:(\253<\324\353\307\274\341\212Y\275\':\025=\224J\324<<~)\275\336/\203\274\367\202a<}\253\244\274\006\245L\275*\004F\275\035\320\034\275\301\377?\275\0265\211\274\017S\376;\236\366,\274\234(N=\234\372\033\275J\316;=\254\tN=\247\303M\275\234(\022=\020\233\253\274\177z(\273\352\031\022=M\367\216:\375\373\035\273\305m(\275\204\023\345\274\030s\\<JY(=\031\3356=F\376\324<\250\372\217\274\003\202L=\006\251{<i\372?\275 \345!:s\000R=\022J+=\226}\234<\366G\327<\225 \200<\327\016)\275o\337\017=X\235\225<(P\263<\014b\344<\366{\232\274@(\234\274\241\333?\2750F$\274\253\207O\275\275\227\331<\232(\250\274k\r\032\275N\3760=t\027\361<u2[=\315\225\000\275V\332\274\274\332r\360\274\013\0374=594=\341RP\274*\205_<\205w\005\275\027\272\264<\212\263\247\274\346\335\\\275z\302\273<\335\013\237;]\314#=]`}\273\355\205$=\377\354\266<\256C\177<cU*=\374\365\244\273\234\362\206\274\303\006\311\274\306\332\254<i89=\265\321\034\273\350\2466=\217\217\301<\234\305\001\274\355\024\263;K\013\205<\r\260\030=I\007V=\177eD=b--\275\'>\017\275_\305\357;^\030\210<]\\\334<\022\0226\275e\356=\275\302\352\202\274\344O\206\274\242\352\'\275\230\026.=\325\361\363<\364Y\026=\014g\003<+\035\254\273)F\324<\232r;<\206~L\274\310y%=D\371%=\031\336L<\247J:\274L`\306<\257?\r\275Z\255H=\203\303\020;\235g\035\275\036\3110\275b\237M\274\235\334\375\273!\304\034\275d\037\006<\235C\336\274\222\321\354<\222\247G=\324\224\273\274\252{%\275\215\3675\275\245s6=\224\240\017\275\222!\032=^\000\306\274\256wW=\274\251\360\274\341\342B\275\260.\344\274\246\005\014=\363\221g<\347`\\\275\':y\274\271\037K=\304\326d\274\227u@<u2}<t\307\206\274\256\3659=&\313\306<\037\270A\275\263]\036;\265uH=B\203:\275v\375\003\275\234\001M=]\217\252<r\332\n\2753\365/=\213\314\200;\274\3703\275\362\177\202\273\225|\355<6CD\275c\371_<\0278-\275\016<D=\212\272\031\273g\315<=I\334;<H\344\362<;\000\223\274\034\360B\275\201g\322\274%\343\327<\026\272\\=\023\352\310\274\210\033\000\275\022q.\275y\245/\275\0138\324<c;E\275\300\265\357\274]\313B\275\035\0074:?}c<\252i,;\264\264\r\275,\014\263\274r\316\023\274 \301\2529*]\335;\364\216\223\273\206\351?\275\367\n\236:U}\'\275\252\330?<%.\030\275\274=X\273\025@\246<\024\312\207<\032\267\r\273\222\016\370;Y\213b<\214\276\030=\222\311\025<\221q\247\274\316\253\255\274\312L=\275\007\035A\275\316\305 =M\252W\275y\'F=Hy\016\275\211\210\300<\037\027{<o\0333=n\200\373<g\340\\\275\305\331\325\274\355\004\321\274\3201-<\224\265\005\275\177\211\307\273\337q\275\274*\211W\2757H$=6\364\002\275\265\036\205<\322px<}\217\030\275\224\027X\275\304\014\021\273\'?\'\274}\271O\275\237j9\274C/4=\004k\"=M\203\244\274$\341d\274\327\377\322<\251\222.\275\201\014\022<!\000]=\001!@\275\304y\013\275\217\237\212<\272\212\366<\313\241p\273j\375\027\274k\353M\275\236\251<=!-0=\341\326*\274Q\264A=\321q\220\274A\214\360\274\353\327\300\274f\304G=\014f\t<\2602\254\274\360\234\002\275\221\355Y=\036\'\373<c(\354\274[fK=\335\244H\275\361\021\271;\301R\300<X2\370<r\001\014\275s\t\021=\r~)\275\365\310\210<\3638A\2756\025%=w3\205:o\033Y\275,m&=[k\267<H\2365=\243\212\250;:d\372\273$\340\003\275\014e;\275\243\2030<\242G\244<a\344\255\274;\330\023\275h\206\022=]\332\036=`\247\211\273\r\320N\275I\352[\275\334\013<=Q\375?\274<\267\006=\363$8\275\005\216\263\274m\305A\274\257\3212\275Z8\025=J\037\205\274\2714\244<H\026\331<\306\242w\274\320!D=\366\206\331<\360\373n\274\342E\276\274\202\217,=[\216\001\275N\323\330:\353E\213<n\226[=M\276:\275\253\243\226;0$\221<\2674\001\275(x\"=\252O\321<\367S\302<\236|\227;\377\326\032\275\276\2133=M\325F\275m\263\220<\216\344\220:y\3756\275\343<\266;\002\220\206\273L\353\300<\370\275\r\274V\023\001=\236<\004=\311\277\375<1l\010\275\310\277\025<\374\325Y\275\241~\016=yq-\275G\213\030=\2533\262<\030_\311<V/\323\274e\002v\274\241\245Y=\213\003\361\274\033\355G\275\357_\377\274\025\352\376\274\037\3261=j\222\303\274xJ\021<\220\025\020=\334u*=\256\235\231<\355\350\316<\375\036\000\275N\344+;\02457=\024\3620\275+\237M=s|K=>\360!\275\n\222\311<Ic\251\274\212\326\207\274\004\262\234\274nH\307;zYX=\227\032\005<R\177P\275\246\243\026\275\372I\037=I\253\321<\026\316\022\275\003N\025\275\205\374\374\274+\225\003\2741\211\023=,\206\\\275\006r\017\274\231\204\037=E\nZ\274\000pA=\010\311\315\274\353\224\n\275\236\231\335<m\211V=\223\037\223<\025n{;\335\305&\275\347YI\274\325\371X=\024\010D\275c\324v<\035\026\004\275\203\211O=G<\007=\223zX=\317`\013\2759\025\231\2749\200\306\274wuR\2751\312\212;`KE<L\004U\274\023\301\357\274\306\366\356<\n\301]\275q\253\217\274]Q6=\330\372\307\274AX\010\275\267\377\023=\265\365\375\273\213Q)\275V\017G=\235Xt\274[\001\212\274\020U\027\275\364\210@=Z\274\221;\001\330\351\274\334\321\304<\264#d<\200\030\361<\364\267 =\010U\265\274\362\022\025\275\027\271T\275\245=\006\275l\023[\275\341\341r<r_\312;g\n\243\274\253\004\032\275\246\203\023\274\376\344\311\274\242\312C\2749\273\000\275S\014X\274C\024\037\275\211W\214:B\357\037=\305]\007\275\254\377\371\274Y\3233<\322\024\251\273\253{%<\362>\034\275\313)\273\274\242\270\301<K\257\223<\245\223\243\272\274\277 =%\\\'==\347\215\274\351\350\016=\323\345\315<\317\350A=\333\377\202\274?n\231\274p\3630\275d\225\032\275\305e\021;\354\371\312<\351\266\000\275\031\017\253<\226\305-=$\276\013=//\231<l*\306<\231M\343\2728\343\240<\273\211\033=\243 -\274MR>\275\276\214\177\274bE,=\351|\"\274bI-=I\030\245<a\231t< \034&\275EY4\275u9\006\275pu=\275\320\024\005=Z\271\267\274\374&2\275\230\326\260;fWL\273\\\346\351\274\221b>\275\377\316\016\275\332\222J={\277-\275V\030\006=g\005P:\367J`\274\234\301\362\2747(\';\261\230\034=\316j\247\274\311\253\236\274\005\344\256<\025[&=\331\3766<\205 B=\335\327\347<\301B\030=\006\224\206\274\032\327\251\274\266\366\030=3\005%=\370\335\214;2\330F=\230}\001\275ru\365<S<n\273n\235\264<g\223\227<\214mC=\246\345\\\275\300\r\332\2747}\374<\016J\327\274\177$\002=\"\035\260<\006\002w<?\026\344<B\352\007=\337B\031=\356zf\274\334\336L\2750\036c\274\003N\375\274V\r^=\213\212\204\274?\222\330<\355J\030\274\014\241\307\274}r\033;\264\341\277\274m\315*:\265\3167=QT\331\2733\001#\275\017\230@=\250@\234<\204r><\243,#=\260iT\275\273\325\003=I\017-=\314\233D=\237n\022\275\222tL=\347S\255<\220\216\036\275\322FA=\230>\237\274\034t\322;,\260S\275\311;a<e\026c\274\030e(=\346H\266:\0342E\275\361\006\"=]\376\377<\225\231\014\275/FR=\276\266F\272#f\217\274_h\375\274\311v\332<\323\223\013\275\250@\350\274\332\224$=w\300(=\344(\017\275\214\302\305\274\262\264\337<.b\257\273\250{T<(\243Z\274-\0306\274\347\213\017=\307,H\274]\301\367<\223&)\274\255\202\226<\252\311\r\274\010\027\365\274\305\361,\275\277[\275<W\3221\275\030x(\274\344\332\330;\255\3337\275\316\033\006=\303\306\324;\260\244\254<\373\275L=\222\017\212\274\255\373\002\275>n\356;U~1=\3073\026\275\214(\031<bh\263<v\003\004=0Y\316<\325\200><1&\017=\341\327l<\202\247\352:(\243\004\275H\r\216\274t\262\345<\371$\301\274\2467?=4\371O=u\316\266\274-#\016\2751\350\274\274B\020 \275\364\225 =\247k\022<\356]j<\017>\333\274\251\315<\275&p\325<\375a\024<\375\345\347\274<\243L\275&\3553=\315p.\274\260\210\221<\375\252\341\274EQ\020\273~j\001\273\221\207V\275\217v>=\3728^<%GS\275\214\264\320<\330N5=G\3127\275<\201\322<Cd\320;lg\230<\377Tu\274\324\266\035=$_\373\273]sT\2756`U<\300+\247\274\014\306\\=\215\306!\275UJ]\274\311[6\275\336Z\\\275C\034U\275[f\365\272)\356%=\022E(=G\212\214\274\213K\373\2746w\016<\357\342\n\275\016qZ\274\335\326h\2749;^=\215\'\226\273|[\244\272\215\277Z\275\231\255Z\274\264\341\230:\332\352A=\322\323\005=D\223N\275\267\035\216<\304\031@\275\202\362\371<5\266\251;\321\347<=\321^\253\273\242\2148=\217<)=%\267:=l\334\026\275\350\256\342;\271\240\253<\210\231\234\274\204\002J=\346\373T=\225\373\234<\366\267N\274\3304\022\2757\2203=\033\376#\275\252\237T=\267\357-=\004\342\022\275\241$\006\275\256\022C\275\201@;=p\361\214:\200\334`\274\315\r\267\274\034v\231;\203_\322\2743tj\274\320E$\275\366\262\211\273\335\202-<\313\205\270<\204\262\301\273\347\227H=\244\261M=UZ\014=\243IW<\222\016\325<\264c \275]\311\225<8#B\275\020\r\352\274o[l<\003\235T9\363\366\224\274\237\177,<\030\312\316\273\020\327\257;\352?E<7\226\234;\256X\345<Q\345\312\274\r\271*;T\217\377\274\031\336\277<\006\205\330\271\340\0223\275\001=\002=\302\312\336<[:3\275\203hM\275\312\021+=5b\305\274\036\3717\275\255\327\325<\017\032\003\275\365\311==\231\242#=\25329=\341<\007\274\324\002\210\274b\362[\275\320\324\003=\317\301-==\334$\274\354#\213<a[/<yzI\2737\234\314<|g\311<v\355\002=\307WA\275\325z\354<Q\317\023=\r\330\241\274\272\276\260< \356]\275\'I\037\275\332\357\231\274\340\275\'<\014\253\331;5hG\274\312=s\274\221?\033<\265wR<l$\214\273\250\333\306<\3046\231\274\270\250\357<\235pE<b\215|<d\363S\275rq>=\257K.=\240sz<\010JS=\350\3441\275\014\376\247\274\233\010W\273\260\240\314\274R\321\"=5E\251\2745\314\231<\\\245\312\274GM\340;\356TE=~\207\360;\267\273\020\273\201\010\030=\303\372\243\2748q#\275b9\002\275;\227#;#\255&=\'\3663\275\257\214\014\275u\002S\275\344eA\274\273)M\275\316\323)\275\331l\226\274I\375\375<\345c\277<\225\364\314\273\360\333\031=\336\000\010<d\264T\275\021\263\326<\315\010V=l\204D=<n\020\2751\nZ=\001\010c<\010)0<f\205K=\205\271\372;;\311L\275s\214\250;\177\000\204\274\342\353.\275\006X\010=u\315O\275]\256\367\274\247\332L\275\275\3071\275\020y\003=P*9=\037\240\205\274A\030\266\274w\267\037\275e\313\273<\344\351\225<\351\'N\275\256\312^=\361\231\301<-`\311\273_Z\353<\252\377/\275\nG\300\274\030\\;\275\212\317\361<\204,\205\274\344\031\216<!\253\261\274\301\211\177<\312?H\274\221\3457\275\264\345V\275Jk%\275\365\024\\=\227\025W\275\357\275\340\274\032\342\n\2756\350\217\274\224\200\342<\366\347\027\275If\275<\031\372\344\273(P\363\274\253\332\260\274\361M\376<\002a?=\234\2519\273\t\257Z<w\017{\272Q\220\220\274&_A=\370\232I=\216H\314\274\371XF=~\2219=\354\203\232<\3172\325\274\225\232\017\275\020\370\000\272\364u=\275\377\3443\274\252C/\275\316\305\003\275\030B\264\274s\354l;O\355\347<\210m6\275\020\311\367\2742\177\257<di%\275\255;\261\274\214$\344<\326Q[=2\360\360\274b\344==\354\321F\275\355\353\021=\247\224&=v\354\"\274b\374\226:\035\332V=\003^\245<\275b5\275\0028L<\326`\375\274\216\350\006=1\242\006\275\221\262\246\274\224\312\001=\307\360\265<lnD\274\263\205\301\274:\304\353\274\276\n\002=\332\324/\275j\014\343\274\303\003\376<\027q\215\273\255\327\370<@\3044\275\221\2535\275\335*A=\207\306\331<\276\270\001\274*\241C=\023\320\014=\331q\313<\265\225V;\030\320\033=?R>\275\233\214\247;\252\037z<%F.\274\004\226\275\274:ID=\n~\240\274H\357\351;\350d\263\272\371\3614\275\264)X=\347JQ\275~\362X\275\204# \275x\363\366\273\335\363T=\032\251\006\274\'^n\274x\201\231\274\215\202*=1\367\266\274E\247\313\274\010-B=\244\006A\275\203\224\212<th\030\275\2457_<W\340R<l\027\005<\363\275\253\272\251a\002\275\305w\256\274\314\272Y\2755\034l;e\231@\275_\027\233<\343k\235\274\027\030!\275)\016\307\274\346t\313\273$\320\t=@\275><\256\265\000\275O\345\355<\244\266\316\274\226\366\267\274\215\001\027=\321\340\327<\330\261\365\274r@\032\274\006\372\314<\277\220Z\275B\266\313\274\031\370K\275\003[\265<\254S\032=G\245\301\273\340\241\257<\177A\020=\215\366\260\274Y\230\274\274\265\204\003=\234\3328<\344S\023=\314\364\373\273<R\035:\304\022u\274a\373\346<t\003\034\275y\022\376\274\370RS\273g\323\033\275p6c;\223\022\362<\270\314E<\033\345\260\274\313|\313<\324\2163=\224\2737\275THm<\030\021\n=7\005\327<\266\007*<\020\200\367<\3565q\273\353\325\337<6\222\267\272\025\352\024\275\365\341\031;c?\t<f\320\222\273)O|\274\320\265/=\374>\010\275\362\255A\275\tf\220\273\007\365D\275\000\034\003\275\355\026\240\274\224\213\014\275\347yD<\004\206\022\274\324y\017=\022\337\312<^\034\262\274ZK\240<\037wB<\\\353H\2754d#\275*4\024=\211\027\341<\352\316T\275u:!=g\016\304<\252\177\333<\365`\370\274\372Y\330\273\306E\226\274\316j\023<\203\210/\275,;\310\274^\316\036\275.\2742=\346\214\020=\335\246\202<\313l\376\274\217\224\025\275\031oR=\236l?<\323\224K<p\033=<#\247\003\275\326\374\030=\227\2701\275\223\356@=\270j\036<\201\254\255\274\246\2560\275\022~$=\"X#\275\263Y\346\274,d\t\275\222J4\275\267\315\\\275\376\346\034=\002\335\353\274\322Y\227\274\355N\005\275o@\255<\"\217?\275A\313\024=3]\310;\256/\334\274\263\256&\275\201u\363<C\3532\274\223\2401\275\261\2719=\031\246\034=r\333\220\274\302\032B\275\300\353G\275\003q=<)\272\004=\335\230\231;\232\tW\275{\035w<r\316\203<\326\216\316<f\307\356\274\357\001\336\272W\006\264<\332>\342<\2138l\274\3373\343\274mZ\212\274\353o\016=\331\302+\275\213K0=\n8;=\211\022\237\274\2709\266<\215\014\276<\356MA\275\345\244\310<\223IY=\262GC=\376\372Q\274\37434\275fh>=q;I=\nZ\316<Y\376d<\371\332\303<\374B\032\275\337\006K\275{[\017\273\343?+\275g\3505\275\025\202G\275\017\207\360<\324\304@=\377\215\2358\344\277t\274R\311\276\274/zU\274\266\333\365;A\252{\274\035\343\006\275\254\346c9\361)@<`\025\n=^\374\321\274V\001i<{\215\231<\210l\'\274\022A\006=\230vB\275\363yG\274.\033^\275\206D\177\274\007\353\201\274\214\267#<\345QM\274s\364\203\273\352\n?=\274\256\004\275.^F=\303\373\375\274F>\371\274\302;\267<Byk<\033\346\235<`j\342\270N=\336\274\263g\207\274J\353\225<b\240N\275\262A\010<X\'G=\\\202\375<K\276L\275\252\245\343\274\374S\243\274\327\223\377\274\212\023\363\274\310t\372\274RA\\=f\222M<\300/\r\275t\315]\275R\216\025\275\272e#<\r\305\350\274\357\224\200\274\277\333J<\345\207R\275\277\0046\275\274\204\302\2744\217f\272j\344\006=t[\322;\350\224\307\274\312\211\347\274\213;\260\274\245c\366<\346Z\232\274\273eO=\317k\263\274~\215I\275e\2404<\000\212Q\275\341\374\340<Y\310\211\274\346\261\306<\212\224Z\275\332\261\336;\321\236\375<\"\032Y\275\351\272\025\275\001\020\224\270\202D:=\374\005\320\274\214{\032\275,\344/=h\031\305;-\026&\275O\021E\275\241U?=[:\033\274\263\303\017=;\026$\275\222#K\275r\233\371\274s\250F\275\270\230N=\350\013\025\275 \311\367\274\000\0041\275\030\222U=I\2703<\356\231\363<\223\227\335\274\177\200E=Ka\344<K@\354\274\217\2035\274\3350!<\262\235J=k\255\272\272:\337j;\215{C\275`\3307=;[Z=d\311\370\274\234(\231<q\317f\274D\203\310\273&\330D:\366\213\\=e\303\020=\277\221\350<\377\221\240\274.0\025=\322\361\357\2741\2731=o\245\005=-\300v;y\276_;\374\n\264<X\355\201\274\2712\226\272\267O?=\335\207\333\274d\3426\275C\211\020\275\303=\213\274\247\3679\275msZ=\3442\342<H\021\340<\360\006z\274\014b\023=\022\n\351<X\036/=Q\324#=;\273#=\331\204E\275\352\367n<\270\220\373<\225k\020=\350\353r9\377\331\213\274\024\303\025\275h\277\277\273\263gy<\235I4=&\2227=\032\3222\275\037:1=\177\376$<\343\342R;j\372\010\273\"\276.=@D\032\275\024 \013=\025\225,=J\345(=\305\224O\275\222\303\201\273\321\363\230\274>\262M\275S\270\345:)Xn<&\t\335\274\376\331\313<_\2637<\025\3033\275\377\260\'<\\EF\275\232(:=\031\037`<\000#$=uyW=\364\3538\2747\203\003\275\306\316 =\335\256;\275u\200L\275\364G=\274?\"F=\002\217\233<\006b\211<\227M?=\215\351G\275\270\254=\274(!\033<\352*\261\274&\352.=t.`97\335\216<\256\023$=\005\315\335\274k\377\235<\300\234\034=]\370\3719\217m4\275\254\255\235\274\014\272\006=N\344\353<%\362\274\272\210\226\337\274\ruX=\310\020E\275q\327\t\275VH6\275+\202\\<\034\220;\275\343O_<+U7\275\332\226\372\274;t\007=\247^:\273O\360\003<\031\217B\2747\342\031=.o]=\233\334\257;\224\365\205\274\257\026\260\274\267v\243<\352_k\273d\022F\275\214\020\374\273V5@\275<Zc\272\266o\016\275\"\244\335\274Y\265\342\273\207\3033\275\354\224\373\273\343\3100=\266F+<v\004?=6\357V=\013\252D\274\307:\021\274I9\317\273\266qD\275$E\204;\257 \010\275\222\262\t=\346\031\272<9\240-\273\033\332K\275\035\217\027\275I\273C\275C\3101\275\260\\\324<\"\0063\275\300\026\307<\271\rV=\264\274 =\306\206\235<ON\305\271\357P\376\274\034\266N=\376\356\034\274\373\301\"\275j\000a;}]\251\2747\326\244\273(\205\206<\010\325\357<bS\304<Y\241\260\274\257\3560\275^&%=\001\035\270<~\263\305<6\200\365\273\326\013\033\275\204\037]=\247\271\263\273\024kv<>\210c;\343\304\024\275\211\307\227<\210V#\272\234M\004=\222\005\326<\236](=\31664=j?\371\274\344\0038\275`\256R=*\347\024=\257MF=\355\023\030\275\257\316N<(\027#\275\310\247\272<\262\232\262<\353\260\307\273M\317>\275j\\\224;\227\3736<F\225\020\2751\330y;\314G\002=\254\032\'\275\217\263r\273\334\002\223\274\267\256R\275\350p;;\005\340\036\275\205O\315<\207\032\374\274U\270\010=\023O^\274\\\346\022\275a\256X=@\3031\274\252\023Y\275\333B\350\274\262\263\265<\312\3572=h\312\273<Y\0240\2756\207\036<A\351\020<\256Q\020=\332I\257\273\014\242\003=(\246H=.\247\3119VxE=\337\330R=\005\264\303\274\006\005?\275#\034~\274\307\233\n\275\2614\365\274g\354\202;\211\203:\275>&\017<2L\r;JK=\275\347\246\036<\3310\325<\203\255\037=\272\220\362<\n\252\345<y\312\374\274\267\234\267<\355T\025=\346\256\013=$\334L=wMH\274\274\017\032\274\263\363\3569:\355\317\271<{<\275\361\024\024:<\333\n<\311\324\246;\023\335\267<\330\277\005=\002\343\247\274\034y1\275=\343(\274\005\346\\<6\323\245<\343B\320\273\245\220\213\274\206\246^\275)\204\243\273\261s\026=\021\001J=/N\026=\025\243\221;J\364\231\274>@\\;\220\260\363<\r\231\001=\270Y\"\275\340\212\216\274AE\355<\322{\317<,\363\025\275\025\260)\272]\312\324;\0279F\275\346\303\356\273T\221\227\273,\2479=.r\244\274\217\304F=~Y\017\275\233pN\275\362\206\027\275\031\215\316<\251e9\275\024\367\213<\336.\033=\375A\016<\311\333\325\274\303C\252<\031\"\r=\322N[\275\351\027-\275\t\216\034=tDO\2756\025\201:4k\241\274@aq<\371\025;<\332\243\360<\021?=\275V\354\252\274\242`\300<\355\323\270<k\237)<\'\260\020\275(y\264\2739\363\025\274\002b\211<\221{7\275\263i\201\274w\177I=\341AW\275\221\230\224<g\206t<\251(Q<nW?\275\367%\'<\264\357\001=\362,3\275\252\203\022\275|\036p<p\357o\274\303\224/=<44\274\336\254,\275\354\036*\275\313\r,<l\370Y\275\236\371R\275\246\235\335\273\034\272^=o>\222\273\323n|;\336\277+\275q\356\343\274\207\333\316:P*h\274xW\374\273\304\025\307<[\251\013=\306\222\352<\360\305\323<V\201\261<x8h\274\024i\312\274h\361\'=\263\265\335\273\007L\2044\\\222F\275\246\210\312;\027dQ<\317\204\017<+\223V=\r\267Y<\2437\250;\331\356\022:\205\347\030=\327<P\275\363\303\300<n\'\013\275\245\372\034<\320\270-=Qr\355<\374@/<D\313\017=yh\326\274\365#\033\275N\037\370\272o\333\002=B\326*\275oe\024\275B\341>=:s\245\273d\271^\275\022\251D\275\372?\025\275\276\245\335\273BT\337\274=Q6=\n\236\225<\010fT=j@G\275\033c\231\273]-\032\275\353\332&=\034\262U<\230w\251\274;\tv\274\232\241\212<}f\017=\035 \237<\323\364B\275\221\274\035=\327\230\033\275\023PG\275;~\035\275@\001\335<\032\330Z\275\2564\336<0\321\357<\330\323\366<\020\017\300<\rkB=\022\217\225\274\347\034A\275\255\004N=\'\377\037\274\247\346\310;\376E\006\274t\026\326\274\334D\022<\356\020\277<H\014\014\274\365.3=Z\236\223\274\301\242\377\274z\230u\274\366R\230\274\034\373\232;\007\302q\274\375\244G=\372W==9az<\206\344\256<q\302n\274Fe\\\275\377p\022\275{U\212<\226\325+\275\006>\257\274\273\244Q=\276\305\277<\304\311@=\010WC\275\212\241<\274\265\036R\2757\256H\275\274n\037\275\216\331\351<\257\001E=\030\033%=J\312\t\275\305\303\010=s\376?=\226A4\2754\025\035\275\027\316\030\275\244*\003=6~/\275O\371\002\275\312*\373<\344\027\000=\235r\316\273\247\217^=\367\207V=I\021\203\273yy\030\274\373\253\201\274\347\202@\275[\335\340<(\273\203\274W\017\352\274F\025\336\274\337\261-=\344$\344\274\234\246\030=\000K\215\273\207\310\255<D\265\023\274\302\254\303\274y\014(\273?\334\353<\247\002f<\246\366\302<\007\247\225\273\267\217\024\275\265\223X=\341R\021\2747h\334<\034i\322\274\345\312Y\275\',\024=\342\362\247\273\336\027\020=\203pR<(\003y\274\014.\031\275\022\3645=\'\024\307\273\234\300D\274\002\002\036<\330M\226\274\316\326\204<\223k\032\275\n)\017=\033\357,=\343\250A\275\031\237[\275\021p\020\275I]\035=f,\326<d\250T\273H@\250\274\331@\350<\224\206.=(\017\207<9\222\215<T\001\030=\344>S\275/#\264<\244o\216<\035\216\310\274\272\205\003\275\367\001U\274\353kB\274U\037N<\221\240\317<\272\225\025=D\320X=\343\277\202\272\230\245\266\274\245\255\234;\355\005<=\021p\006\274\211\230\343<K\243\213<\221zS=\363\236\353\274\204\324\"\275\017r*=\267\244D\275\0012T\275\314\027\030\274y\275\0209\231\277\027=\371\246H\275&)\224\274\264\254\240<o\375C=\236\203\267;Fk\035\275\374\377\250;\2073\030=\372\266\252\274s<\031\275\247F\365<\222\347\307\274\370)\254<\203p\240<\365\315\013\275\330\030\022=\3139*\275\365v\346<(\3007\274\004~2=\347\212\342\274\367 4\275t\257I\275%4\020=<\021\247\274z\211\362;[j6\275=\351\201<\262\330\'\275\211L5<\2516?\275\303\002&\275?WM= ++\274e\214;\275\177\033$\275\025+\356\272\314n#\275\240\205\332<\260V9\274\340|\352\274\245\335,\275\341h\002\273-l]=9Ss\274\245\346\225\274\314]\305:\260;\033\275\333{N\275\262\032n;T\356\254\274\016\340\254\274\220\302\340<\233{c;\262n\020\274\021\247\244\273\206E\316\274$\010J\275\216\243*=\252\205\'=fKD<_l\243<R=\233\273s\317@\275rs5\275y\0077\274\361P\006\274\001\277\'=hc6;\275jQ=\027zV\2752\275\210\274h7p\274\245!\224\274\212s\201\274\357\350\241<\222\361e\274\336_(\2758\365H\275(\232.=\323\342\033=\225i9=\025[\033\275\207\004~<#*5<\203C,\275\317\215\026\275z\302\323\274\275\035W<\026\035\277<\366\0232\275\244\317*=\373\256\237<\347\206\204\274\227\014\224<\371\201\031\275\206\366\372;k1O\274\334\001S=\360W\334\274\021\232\r\275,\266Z<\335jO=hC\002=+H\377\274\226zJ\275\300w\346<ATY\275\315\312\\\2758\004\321\273\243i\031=\037;J:\033\t\274\273\326\334\3369\340|5=\367\2708\275\t\260\337<\245\222\223\274\275k\013<\263/W=\310\311\322<\373\264\246\274\303\027]\275\254\270\202\274{\020\025\275 \244\252<u\326}\274\300[1\275]\243~\274\331\327\"\274r\004Q=\014\243\007=\032\355J=\213\214\000\275T\311\215<\027\207\000\275D\256\310\274\332YU\273\347\311j\274\222}\234\274\323\273\030\275\363-\261<~s\250\273b\025\036=*\351\377<\201\313!=\003m\325<\235\032\'\274B\365\013=\325\347(=}4\203\2724\214\367<\232\201\007\275\257a\360\274\032\2277=D\213\240\272\341\026F=jG\026=Jw\033=\346\252\322<\013YL\275!\310\032\275dq\360<\177\"b\270/?\240\273u4\350\274\023c\241;_\367A\275\221\243 \275Bq\244<\246=Z\274;1Z\275 _\305\274\246\215\340<,\271\023=,T@\275\034\034\274:\3115\034<\013O5<\202.\270<\332\200\005\275\235\253\024\275\376\245\031=\203\313\001\275\277\333\314\274+X\373;\221/\217\273C\327\010\275\312G\003\275F\314P\274\325\322\375\274\362\346\035\274#\030\235<(\230(\275R\202w;^\231\253<\302\247\356\274\240\314\210<\242d$<\207ON\275\3544\000=\t/\373<+\237\014\273\337M\340\274}\351G=\260\312\361;\264\370\002;jN\231\274\224\306\035\275\023{\253<\254\264#\275\322Y =cS\025=i\324\327\274\204}J\274J\366\303\2742\313H\275\013\016\325<\326\211\025\275\032\206\312<\262;\213\274\250\316\236\273\034\3669=t\336\030\274\206M\024<\277V\365\273\274\363\374;\027\357\024\275\222&\004\274,\032R\275\333LS\274\315\220P\275\216(%=\355\'\347\274\312A\211<\317b\215;\241\352\2609e\222P<\034\360\030=\343\274$=H\277\347\274\205T\260\2742\036T\275&\262\225\274:\t\014=\271)\271<\036\220\216<\317\245\205<BrK\2744\304\374<O\n\305<\005\371H\275\277\204$\275w\272\321\274\251~\233<\264\363\332\274\367\363\026<I\316\230\274\2333\030<)\203\217\274\r\022J\275=q;=\003U\n=\\\300\236\274\241f<\273j\241\"\275Q\247Y=\204A==\235HA\275\n=\222\274\313\303\022\275\005\334\024=\016nx<i\305m\274-1\306<\204\234y\273\310\030q\274!\344\342;\265\263\205\274\305\n\021\275\014\365\350\274\210\321V\275q\252\276;\335@\000=$\200\256<\t\035\037\275\372K\254\273eB\255\274\373-\n\275\352\255\364<^\213\270\274\224\n\013\273\235h3=|\325V;V\314<=\320?\220<7ES\273\004q\250<\007\356K\275Zz+=1\325\352<\215\332\303\274\036T$=\036G\217\273\272\020\245<\300\300\2219\034\360Y=\336|#=\375\372\255\272_\227\017=\270\335\017\274\240EB=\204\207\336<;\316\r=\327!J\275\031RB=z\363\341\2743\264\241<\2164\207<\322N\241\274ZKE=\302\212\t=\331\342|\274|qW\275\313\207\312\2744\374\342;\211Q\\\275#\206\374\271~\026\261\273=\320\323\273B.W\275l\027\344\274d2a\2745\225z<\\\374\331:c\n&=7&\301\274\220\314\333\2741\204\023\274\232\314\303\274\347f7<=D5\273\001\347\t\275\321\200\241;9\345\301<\257\020\006:j\026\301<!\312\021=[6\213\272\010\274\341<\303i\014\275\226\003\212\274\366)\'\275\233t\031\275B\341\230:t\226\320\27485\302\274\204\263\337\273\374\343\366<6F2\273Y\031\231<*\2756\275\3702\353<\360%O=w\265@\274\013J\262<\346\305\364\274\200\250\r\275\t\025\035=r\352W\275\244\002o<\t\206\275<\024\334\003\275\276Y\215\273\3317\036\275G5\026\275\207\n,\275 w\361<\315\217\264\274!\242C=t\t\177\274\353\220\370<D\311\336\274\213\360Y\275\244lQ\275#=\004=\226\364*\275}\344\357<\325o\361\273=\356\206\274\316\207\220<\323#\334;\315\016\373\274\256\270Y\271\321\016\030:\330\324E\275\315KP\275\031\020D\275\253\376\363<\351\"\350<\355r\302<\246\031R=Er\344;\234\\L\275\313\307\363\274KE&\275\372\271\244\274\374\036\343<\332\216$\275\3714#=\014\315\032=a\202\276<\372\226\334<\371BG=\344\205^=kRG<\217\2161=\305k\225\273\336\302><\375<s<\346#b\274\200\231H< \257Z\274\324(\216<$\261\270\274Yi&=\222\212\351\274r\353\307\274\235\266G<\243\225\217\273S^^=\310\314\027\275\322\017\'\273\260\347\214\274\273\2360\2741\277\035\275\t\265\272<\2441\"=\001\327\035=0\352 =\200\344\302\271\256\2769;?\203\006\2757If<\346g\006\275\317Q2<\273\210P=\010\014\017=\234\306\022\274\265\376\024\275\263\315\261<q\306Z\275\007\030C\274L\306T\275\035\332U=\301QP=Rp\311\273+\201%\275\305<\032=\232I\202\274I\333T\275d\n\247\274\363u\014=U\262\033\274\320\010\363<(z]\275X\026\347<\016\273N\275e\345\001\275\271\260X=*\315\005\275@\211\322<\251[H\275\033\321\214;D\237t\274\312\242/=w\024M=\r2e\274m\3510=ic\t=\0073\362\273\257\220\350\274\210\320 =\233\243\023=\234JY=7AZ\275N\356Z\275`\254V;u\234\001\275mn\216\274\3017\'=yq\326<\231\357\001\275\233F\367<\005SI<)\254L<\211\246z<r\177F<\004\303\260\2747\360\016\275\010\213\255<i\037\262\274FqC=\333\024E\275}z7\274\366E\013=\303\024!\275\346JI\275\326FQ=1\253\325<\031\037\257<\263q)\275Qj\013\275gk5\275t\003)\275;\031\357\274i\010\270\273\365\002{<&SI\275\274l\204<6\221\034\275\266\327\014\275\215v\374\273\313:\257\274\023)\246<\352\0077\275nPL=oUT\275\005E7\275\356\232U\275\036><\2753\326\032\275\322\326\017\274L\345\277<\r\033\n\27572O<ClK\275\227\333\270<\364Q*<\027\030o<E*p;\346\246\234<\207\0250\275\364_\233\274-\230F\274\215q\224\274\213\236Q<I\230S\274\202\314\007\275\264[\300\2748\300!\275?\275\327;6\257\313\274@\366<=\'\323\275;\252\225\260\274\311SV\2752v\337\274TK\215\273ft;<\026\333,=\232\016\212\273\217\336\360\273L\313\264<\262=\327<\323T}\274\307\364\255\274\256\367R\275\333\207\240<\322\236\246\274\333R\027\275/\020*\275\315YH\275\225\304\3639\216\206\033\274\203\233\321\274\307\304\345\273\2240\345;\032\365\003\275\340\250\036\274\317\225\341\274\327P\220\2730t\315<WB\233\273XB?=e\366\257\274RA3\275\034\347\303\272\333\010\221<:9\037\275>/\010=~\355\003\275\337\014\275<_\325\244<)@\031\275\314p\363<\374\263\360\272\016F\360\274\246I\257;KjR\275[\367\370\274\356\253*\275\243tD\275$\335&<\224\374Y\275\014\037[\275\317\211\372\274A\002\236<\037\371\205;r\235\014=\254\315\007={\2232\275H[\334\273\317**\275\242LO\274\366\2119\275\t\226\257\274B\300N\275o\306\261\274\013\337\244\274?\025\326<M\303?\275A\3374\275\212\034\226<aO\201<a\0370\275\007i\n\275C\374\266\273b\333\033\275\220\347\253\274\230\240E\275\207\300m\274]\362\n\2754\241O=\350LW<\226\353v\273t\356\317<\345\206R<7\177b\273\313\302\301<\023\374V\275\254\342R\275\363\332\301\274x\2339\274\231\t\322\274\246_\262<1 \240<\3064\311<\026\013\014=\260\275\302<:w\261<=\277I\275\000\036\n\275\324\345\315<\261\\\342<G\206\240<\3527\324<J\004\003\275\210A\343\2744d\237;\376\372\275\274\322\336\273\274\321\317\030\275gl\002\275\336\231\227\273\267$\233\274\244@\005\275\327+\0368\234\362\240<\264\334\255<\315\362R\275\355\246U=@\207\240\274L\2710\275\251\302\025=\302([\275\243`\237<I4*\275\356\037*=ch\022\275iDT\275\320\270*=*~\001\275\317\231\334<-\003\370<\n\362\006\275\247\326\026\275\341\267\023=\201w\332<\034TR\275\301a\236<3L\200<\001\365*\275a\204\211\274\344G\352\274\'$H=\236xu<\273\267\t\275\260s\036\275\026\324\236<\222]\360<\245\002E\275>\306\007\275\036w\202\274p\034\024=\0170P=Y\207\036\2754\213\226<A\2335\275\026b*\274G\316\230<\232\3157\275.\374\\\275\315\371P\275\025\020\005\275\222\236 \275\336\323c<\315\276\023=\356\005x<\035k\r=<\\\027\275:\2255\275\250\010\005=\275\344\233<[D4\273\020\'|<(#\301<\367\307\204\274A\002\213<P\2411=?oO\274R\2712\275\241\226Y=Z\240U\274Rf\n<?(\"=\341s =\021\261\346\273\200|`\274\331\312><5\233J=\021\002\025\273\240\365X\275\321+\000=\365,G={\030\375\274\261\013\206\274\20097=~XA;R{P=\356A\353\274\350\246\017;2\372G=\365lR=\017\t\006\274B*,\275\364\rR\275\322!\001\275\355\3455=\266BN==\351\206<`\367\265<3H\374;\307\302\010\275\253I\241\274\320\027\244;|\335d\274\333g\320<\253\377s;\017U<\274a\303[\274[fW=\233\020\212<kQ4\274\320\322[\275\347\202 \275\273\r!=\322\356\222<Q\033\345<\"\362[=\302\033\006\274Mu%\275\333\315\205\274p:A\273Z:\303:Q\351\006==tQ\275\242\364\017\275DW\301\274\366H\302<1jj<8\355\003\275#\212\256\273 %/\275\027\324\214\273\\BB\275\245\344V\275\230\252\'\275\336\2748\274\230\222\013\275!\236[\274Z!\007=\275\247\007\275\032\327\265<? \222;*\271I\274yX(<\221+\270;\355wK\273\247\363\274<\336\310\005\275\347s*=\243\274\233\273\261\276\240\272L7\247\273`!\016\275s\342\r<\313\353%\275C?M=\001\310\353\274i\250\310<\302F\210\273\367%d<\316}\245\274t\241\355:Y\347!=k\336\336<k\226=\275\273\356\022=\001\2338=\325`C<\3604-;\247\277%\275\337\274\264\274\210`\225\274\264\021\265<\330\2254\275X>\r\275\253q\306\274\364\340\035=2\2162=B\316\350<9#\232\274,d-\275\344\206\311<\024\257\271;\232\254\335<\2646\245;uc\021\274\211\346\000\274{\263R\275\303\344\014\275[O\204\274\360\005\265\274[M\203\274\263\322K\275<:0<Z\255\027\272v\022\370\274K0E\274]\257-=\035\313\032\275S\023\362<:\3219=[/\004=\321Z\002\275 \262 =\2318a\274V.\277<\373|\227<\333\002\001\275\010*o<\351\220\033=@\310\306\273GM\217\274=\213\304\274\235\362=\275\323\2056\275px1<:\350U\274 \021\376\273;+\234\273<\033\315;\311J\373\273\247W\376\274\253iZ\275E\300\251\274!%\'=\336\032\007\275\250\240P=E\375\221;K\"C\275k\276`\274A7T<>\026\004=\315\305\247<\364\371w\274\0004<=\2345z\274\177\232<=/k\024=\323*\250<\306AT\274\001:O=\003t\244\274\347j\r=\263\301S\274\346\370\326\274\310\n[\275\212\352\033=\305|\316<&\254\004\275\031;\305<\332W\020\275\003\231 ;s\007\004=c\030T\275\210i\"=H-\033\274\014*\324\272=\372\233<\350v/\274G\027L\275\201\356\265<\301_\300<w\366\034=\207\212\253<\251\347\016\275n\304T\275\312\207\246;\232\320\261\274>\014\305\274\2503G\275\345KU=8\335\020=N}\017=\2418*\275\001K\271\274<_\020\274=D\357<Z\243]=\260\350\021=\3663\027\274\037\216\242\274}\007\266<\271\026X\275\207f\247<\330\204\003=:\003\177<\301s\316<\370\335\\<$\2468=\353\003\357<\000\214\3619F\023\264\274\352k\345<\2174\022<\261\323\203<\356\365\203\274,\364<\275\260\244\250<\341!\226<\265\312\030\274\356#C\275V\014\223<\260+J=\227\\w\273T~\264<CSt\274\206\310\351;\030\261?\275\227+\"\275\220\314\330:\336\251\370;\\1\274;\213r^\275\245\334\304<\r\261\262\274S\231*\275n\274\327\274\260\316\320<i\252*=e~\260<\n\322\030\275\261\267I=(\257\222\274%\363\024=M\310\204\273\332\242\311\274VH\256:\261\260\001\275\343<q\274\357\254I\275\007\037&=@\216\006\275\324\'W\275\311\230\034\275[?#=\343\314\351\274>[h\273\003DR\275?\3310\275i?\231\274\231\361\030=\351\000\240<\271\352\256<\245\357\025\275pB\032\274n>\272;\334e\317<f\003K<z@#=\240\363\371\273\376\003|\274s\227%\275!\203\220\274%\363\202;\307\\\377\274\003\315\216;\237K\004\275\211F\273\274k\372\025\275\311\264%=\376\032\354<\260L\342\274c\2346=\203\371\r\275\035\2067=\307\320\371<4s\241<\363p\363;\034\373\233<\0039J\275h\025==\r9!=\004\257\r;2\340\237<\251\301M\275}%\'=\025\234\010=\344Q\022\275\201\356\324;m\313\024=\304\302\007=\312\231:=\362%[=\357\236\265<\255\305\310\274L\350.=\014\335W=\242\033\204<*\236A=\340\216\031<\306\021O\275\017\334\223;\265C\356\274O7 =\362I\013<\020\224\200\274p\300\307\274\210\263\013=z\345\021=\342&s\273\361\245\022\274\036\341\212<\351\335/=z\226@\275T7\233<a\2566=\275\273\002\274\240\225\027=\003[\026=\312mP=\035wY\274\357\315\n\274\035\325d<\376I\035\275\252\347\335<\216,\202;_%\351<\224\266\207\274[q^=\0342\r\275\2653\330;<\2161<\210`\346<\rA<<T\335:\274V\251\254\274\245\341\032=\212\332\270\274P\t\030<\016\321\345\274\311\311\007=\007\323C=Xy==\313w\340<\200nh<\002\234\276\274\2069\026=X0\031=h\223P\274!\3560\275\274P\306\274\212(6=!\"O\275\033\233\316<\206@\264<M\356\214\274\240\002\177<\216\tY\275\334IX\275P\277T=u\225F=Z2\002\275\217\307\007\275L\333\000\275\306x2\275\202\033\021<(\351\023=5\361Q=S\213\323\274\336\2658\275\257\247E=\204x\016=]\014\001<f\246\333<-rn<Y\345=\275\031i+\275\2433\007<\277\306V=\353\262[=\247P\315<<8\226\274\233\033\217;\254g<=\201\034\361\274V\246\214\274\021\261==\321\201\023=\010\337\372;\321\302X=9rZ\273\257\002\"<\177\"\026\274\201\261\260<0X\373;\375\366\036\275\316G\016\275P\206\231\274$Y\252<>\342\033\275\261\317\023=\213\225\234<j?\271\273|?\000\275\25769\274\216\010+=,\262/=\'9==&TJ\275\365\231\031\275MX\373<\36051\275\275\213\373\273#N\037\275\270a&\272\220m\277<\223\3568<\022\370\001=\\\257O=?\"\032\275a88=\301\277\253<\365ZR\275\252\307-<\241f\032\275\355\004\203<t\343\t\275\373\275\365;\333)@\274\250\341\031\273g1$\275\363\255\302\274\324\315/\274\201\375D=5^\003\275&k\n=\305\004\022<\254\232U\274\246)\257<\326\343\212<\020>6=t\035\324\274{\362=<O\013\024\275\3623h;TB\221;\371\370\255\2741<\025\275S\315\303\274\317\000\014\273\337|\014<\266\032\n\275?\023\020\274A\211\322\271.\302\216;\374\357\357<c\304\243\271\247\260\313\274\336&\021\274}\013D\275p\340\370<H\270+\275E\334H<\351\315\"\2750\233\\=\215\262(<k\032G==(\300\273Z\240\\=*\014M=\017\005\003\275\345\324\371\273\3430\337\272lk^\274\263\361?\275A\217s<\311\230Z=\376\277W\274\251\265\232;\266\375\302\274\366:\356<]\013D\2751\342\t\275\335\260<\273h\306\036\275\276\212\004\275\331]V=<\221\275<\254g\"\274\035\231f<\201\260\024=\033\206\237\2749\315\002;,\244\002<Y\340%=^\377\023\274\373\347\225\274\240};=n{\224<`\"\204<\220\224>;\232\243$<k\373{<\350V\025=r=Z\273\333\013V<\360\353\306<\207)\026<4\362D=\016\363\217\273\354\215\026=L;v<A;\255<\373\t\230<\232d.=b\317\223;\254\t\t\275\235\276}<|]&\275\315\345\244<\215\007\351<\245\177\336<\355X><\005\366\206\273\0227\331\274\355\264\322;&6\214<\341\224\211<!z_\274\006f\340\274\020r\211\274\023\":=\267\213\006\275\014W0\274\374\207\n;\365\230\007<\300E\334<=\302\340\274\263\3728=j\301M\274_\270\270<\033!]\275\177Z\300\274\307\220\257<f\003.\275\300\204\266</\"\230\274\032`\373\274\367\327;\275\300\376\273\274!\222W\275\006 S\275\t\004\004\274\343\\Q<\364\307+=w<\303\274\007!\034\275(\340\237<\206\323C\275\370\nN\275\231\217A=M\320\322\274\027O\003\274\276U9\275bW\n\2758\211Y=\355n\023=Vs\024\275\271\277\032=\346\025(\274\233\025(<\004\365\030=G,\n<*)$= \340G\275\200s\302\274\351d\t<%ie\274\310]\330\274?\3652\275\270\360\003=\347\227.\275\276\337==\336\265>\275\320\300E=\2407\004=:\021$\2757\226I\275\3718\347<\225Y*=u\310\214\274\210\340\001=OqA:\034\354 \2750\3002=~6\341;\342\242\030=i\014\020=\206\3663\275jE\036\275\247\366\233<\371zZ=M\277\035\275\003q\205;}r\325\274\024]\316<h\334\244<3i\022=D\324Y<\246`\273<\353l\360\274\314\016\241\274\003~\247<\262\260]\275\245j&\275\207B\253<^\307\275;\202Ty<\033\240*=\0058\302\274\022\241G\275\370\2452=\255a\377:8\252\371\273\211\020&\275=\363\007\275\215\022\251\274\223\026!=%*\035<%\334,=$)Z\275\020\240W\273\362\016\010\274\237\277Y=\363JR\274\351k\215\274\003(\243\274\021h\205\274u\216\222<\277j\t=\201\2435\275w\254\007=\215G\336\274\300PE<C\207-\275%\377\213<\356v\340\274Y\213\006= \300\030\274h\344\303\274\014\201Z=T\234\363<g9\360<\235\274\014\275\036\243\006\275\347z@\275\230l==1\000\344\274\262\230\002\274\343\227\'\274w\273\t\275\201\215\033\274\250\311\311<r\035n\274\365xT=\331\204\004\275D\211G=H\326\336;\003\020e\274\347\337$\275\364\273C\275\037v\243<\351\363\213<\r\233\325;\215\021\325\273\304a\234\274d\002?\275\000\225b<w\210\213;\231\212\013\275\333\241\034\275.O6\275\357\266W=a\tQ\275+<\242<)\251Q=l\352\275\274zI\371\273tQ\227:\375y\222\273\314:\225<?\320\333<@\340\374\274\317\252K=>\034J\275\245}\226\273\3224~\272\243});s\001\346\274\211K\027\274\024\267\227<\367\212\336<\206\335B\275S\361?\274\321\307u\274\254\247^=\033\233\305\274qNE=\263\361\017\273\302\235\034\275\277&I<\204\215\002<\261\002\260;\370<\200\274\254c\320<\253\021\321<\225\341\207\274\"D\374<tg\236<\322\004\002\274\252>\204\273\317\254H=\256\236B=K\273\233\273I/1=\025VS=\234\311T\275\362\373I=\243\346\210\274\340&)=\214[V=)`\311\274c\316\236<U\004\017\274\357\246\366<\322.\357<\177\341\007=Qc\243<\321\031\302\274F\344L\275\010\265\'<T\016\212\274\305\272\022\275\n]\007\275\336\370\017\275\254\237\347\274\346S1=\260\322\221<*\207!=s\244\027\275\375<\025=\311\n\t<\371\255\003\2759\207;\275\300\035B\275l}\361\274E\';=\315F\232\274\271X\374\273/\337A<uLQ\275\304=\344<\270\303,\270\252\312\032=\246\353o\274\200\234<\275\353\366\366<\234\354\377\273\327Z\212<GL]\275\017\365\206\274\017\237B<\354)u<i\317x<&\033\217\274\306S4\275\323\351\267\274]\0222<\257N\321\274\230\333A=\023B*\275\227\314\036\274\323\226 \275\211\375\327<b\335\025=\031\303\'=\353-\245\274I\250\002=\t\321\034\275\025\243\222\274\356\255:\275\335\242\022\275\2733\006=\"D\346;l\365J\275q\002\210\274\214\026\203<\247\243N\273\025\023+=i%\340\273\266\2116=\3746\240\274\244\237\\\275\t\376\\\275\321\n8;\t\032\315<\211 \004=\353L\365<\311\177<=\303s\274\274\244\266U\275\nG<<\222J=\275d#\037=+\026\n=0\270.=\014\204\000\275\347\225\276\272\033\237\314<\021 !\275=\324\346<\225\235/=\315M\033\275q\372\373<i\305\272<\206\327\210\2747\250\016=4c\337<~]|\274\262\336W\274D\261\021=wHz<G\327\035\273\022\004n\274 \310\025\275\335`\306<n@\r=\342\235]\275\353G\204<\204\370\223<\264\'\003=\246>)<\356\271\213\273\325\344\\\275m\016N\275\025\300\223<\005\001\375<H\233y\272a\026;=\211\310\203<\344\226V\275\201\254[=7\347\245\273\026\323\210<\372J\201<\034\352U=\352T\311\273\252\001N=hN(\275\332\336\232\273\346\333\003\275\276{D=2j\304\274r\023\344\273e/\014\275P\237\034=\257i\365\273\2511\004\275kL,=\342\232\"=J{\020=d\312v\274<\255(=\324\357\276\274\243\325\023=\320\032s\274S\245Z=\016\224\037<n\270C\275\344Y\034\274_\rZ=\354b\351;\002\251\177\274\2024\216\274v\361Q;\313\321\344\273\314I\013\275\033\301\201\274\272\356\014=\263B:\275\335\017\324<7\016\236\274q/u<\013ex<\370\336,=\023\304\331;(\020W=\241\205\225<\377\262O\274\210\3018<z\242-\275\241\263)<\232\2771\275\313\237\020\275C\346\027\275\267\354\016=\027]\202<(\t\335\274\024\030\252<D\006\014<g\177\030\275\350\340\207\274\240\035\316<\331\037m\274\315\372\342<Xq\"\275\211\243\216;\004\256\367<7\305\\\274h[E=,hu<\262\026\277<S\226\346\274:~\374:\337\205\204\274p\367@=\24589=\"J =\340h3\275\361+\247\274*\302\033\275\'g\355:C{\022<\334\354\203<\324,\013\275\333C\244<\372\305&=\204\225\245\274\313HZ=\276\031\226\274\302\327Y=\206\234\256\274\221\235\252<\0244\027=3N\026<\257DM\275\025\000Z\273\014Z\321\273F\030$\273z\342f<\221\200J=\024&\226\274C\213a<\255;J\275\242\003\002\275\004_@\274+(,=\314\'S<Z\001\374:\307\364\"=\235\305%=\315\374\254:\244~\304<\305\271\263<ZZW=\347Q\265;\316\0368\275\256\207\"=`(O\275b\241\352<\3662\035<\016~X\274\212\024\246\274c\310\\\274\273\200\007\2750m\221:\250,M<N\354D=kI\214;\201\264 \273\'\333$\275\204\307$\275\314@\351<-R\364\274\243\311\316\274B\351\325\273mi\270<\000\245\216<\366\362\272<x\234R\275\004\020>\275\202ud\274M\006\323\274_1:\275\243\001[=o\373/\275e1\024=E\203\037\275\267\\\263\274\375O\234\274H)(\274x`%\275`M\025\275O.\274\274n}\344\2748w\n\275\311\300\337<\037\220\010=\326\355l<t\303\n\275\031\207M\275\333\335c\274B\211\017=LX\240<\020\210\371<Bh\353\274\374\023<\2759+\267\274g\371\226\274\343e-=\224\340\233\273\363\034\353;\366\226,=\214B\250;\273B?\275\355\250\016\274\t\017+<\271\330\006<\364\334\217<\302\0273=\255\343\026\275\344\010\264;\366\373N\275\243k\025\275b\362I<l\3145\275X\347\000=\266\2407\275\035\021\314\274(+N\275\302\367\021\275\325jD\275\'\217V=Y\037(=|\\\273\274\\\266/\275+\3237=\034\361C\275\201o\016\275p[&\273%\375J=z\310M=\006\"(=Ih4\275\377g\217<\261#\313\274\021\025\206\272\322\036U<\265\030*<\\F\227\273\215\330\016\275\312.\271<\201o\344<\320)g;\345>x<|\021\355\274\357\001O=\265\271\315<\002\026\332\273CTH\275d\'\330\274?\334\263<\254\027\260<\257-N\275N/\265\274\312c>\2754\266\020\275\254*\346\274\3328\361<#%G\2747\361B=\323\264\237<\354\013\206\273jJ\366;O\204\030\275\255\320\310<\373b\304<B\254\210\274\204P\177<\216\3659\275s\240_<\"P\330\274\234.\030\274\3759\364<\231\207\241<\035\370\251;\360\327S\275\247\357\277\274\203\325\365\273K2\257<\255f\360\274~\325\021\275A\3375\272\245\221\025\275\270h\010\275g|\214\274J\270\364\274\351\313\010=\3011;\275\350(\344\274B\265\352\273\347]\322<I\241V\2750\374!=8k=\275\014\224\306<\256*Q\274\030\365E=\341\030\361\274\257\332\270<\322s.=%\002\243;\304J<\273r\332\031\275_\226\005\275\204\\B=\361\031\352<\3777<=\020\372\362\274~^\254<\303V\026\275\31083\2755\263Y\275V\352\022\274\200\2134\275\316\006;=V\002\266\274\351\266O\274\273r\007\275\n\235\372<X\003Y\274_\237\274<\370\rJ\275\301\272#\275\303\0007;\025\275\364\274POM=\304vM\274\275\010\341\274\355\217\034\275\024\254\016=\034\220\317;\301\226\306;o\275<\275\353\232\000\2750{\244\274\252\332\327<\2071\037\275\267\\J=\220\243p\274\373k\205\274O=\265\274J\214\230\274k\362\202;\037\217\036=s\315\247<-NU\274\205\025\020\274\261~\326:\212\275\363<\215]\022\273\373\351\346<M\227\'\275M.\317<\232\213\372\274\2544\275<V4\035\275F\371\256\274_\033\360\274\247\304y<I\200\036\274\376\022\016<\224QV\275YfN=\200v\344\274\336\302%;\302\010\251<\346\242\031<\255\230\003\275\362\201\262;\346\2256\275Fp&=\245-U=n\\\356\274:($=\257\206\365<\031\024e<\306\325\020=g\207\214<{\026A<\020\246\032\275VZ\'=\307I:;\320\265\320\274\033`\362\274\241:&=U3@\274)gR\275\335\353\360\274_\323\r=\211\023\305<\031\255\356<}\267\261\273\345t\224\274\356\244[=\001\323%=\215^\001;^\266\'=cy\220\274;$8\274$]E<\037Q\002=:Fd\274\350\304\302<\032*\\\275\362l9\275O^\017<@\202\247\274\302\002E\275\301\3524=ec2<U\213+\275X\270F\275\177\215\210:~\223\322<\256\002W=f\340\250<\370\356\020=\223:B=lc\310;\025L\332<\251\016E=\207\2637\275n\235T=\270N><\317\213.\273\024\347Y=UKa<\375b=\275\226dC=\253^\373<i\013)\274ma\200<\0326\341\272\3234\221\274(\2758\275\230\351j\273\246\272F=x\0247=\225\303D=\264\033F\275;*\023\275\3451\355;\373\014%\274\250\032I\275>Z\311<\317\030\037\275X\026/=\240bC\275n\3139:\260\202,=\355\347B\275\376\034\001=E\306c\274S\264\375\274.\207,=;%,\275O\233\213\274\263\257Z;\221\035\000<\267\025\352\274\017\202\220\274R<R=\345J5=knT=- \225\2742\177\325<\026|@=m\335\255\273\226#\231\273\261\207\275\274\206T.\275:\ne\274\366===$B\304<\345\2564<[z&=\316x:<i+\311;\264\031-=V\375G\275\323W\000=\215\224N;Ap\271\272E\357}<\030=\204\274c\231.=\t\010\036=\274t\003\274\243f\264\274\344\"S\275<\327~<T\001\354<\363vY=~,\037\274\367\350\241\274\024F\314\273\313F`<\203\367+<=ZO\275!\314\346\274\223\304G=/\003\342;\377U\001\275\350U\001\275\022\0176\275\202\332V\275\014\233\216\274 A\326<7\200\266;\372\327\233<\305\373\351<\315\037/\275\326\305e\274d,:<\003\373\352\272\233\347\226<.P=\273\221k\227<^\366X\275+\001:=!\367!\275\232HF\274q\260\211\274\255\306E={%\330\273\370\016\2579\353U\371\273\016\224+\275\36333<\005V\223\274#\030\006<\026S<=`\374Z<\373@\317<k/\'\274\204\344T\275\004\373S\275K\210\235\274#\276L=\013y\271<\013\027\377\273^o\263\274=B\330<`r\250;>\256\265<pCk<V\217X<Z\347D\274\355\254\327\274_\371w\273\026\r\340;\356\004|<\355\202\034\275\262\022L=\361\262\n\273*\252\035=\322f\000\274\317\351\"\275^,\247\274\305\303\017=\026\275\246;\t\320\305;c\340v<d\313]<\267\004\221<\232\227\303<\276\353D<\211Q\242\273\005SW:\020GY=\372A\335\274\274\322~<\013\334?:\023d\370\274Zk==\366\233\335:\344H\007=ra\013=$\nH\275\324\242~<\177^\343<\001\017(\275\267r\272<\200\267\354\274;A\201<\335\330:=\202\367\023\275N\265\314\274\244wU=\266\367Z;\247j@=\312<\363<\222\374W\275(\316\332<&\347\354\2746Vp\274\321h\312\274`\241\375<\271\275\304<\374kJ\275\346\211E<=\235\t\273\004V\037\2757?^<u\034\005\275\263\275\020=\005\243<<[\315w<I\375\376:*h\006=&\333w<\326\235\320\274Z\376 =@\t\300\273\024\200\251<\264\037\262\273o\2041\274\005\354\206<\263\247\205\274\302\352\373<\265^\310\274\340\2713=\304D~<\302\342\305\274\005\307d:\376\317!=q,\223\274\211i\251\274\270\224)\275\214t\n=\353\204)\275P}\262;\361A\014=\371\n4<~\032&=\014?\000=vf\361<\235\363\233<\230\341\376<K\240\033\274\376\227\241<7\034<\275\213\345[\275n\235\343<\3053^\275\371N\357\274\215\020-= \026\240\274\020\204-\274\302Jv\274\332\205\220<\353\246\001<D\252?=\361\247\037<\034\307>=\211\327\002=\240\301$\2756\336@\273\026z\330\274\356\302\317<\233\231L\275)\303\235<\257+\344\274\200\322\343\273\272\"-=\034\026f\273\226K2\275\212\363\347<\000\224-=2\010\362<\221\020\024\275\355\242v;5g2\275\371Z;=z\323\274;\224\332\302;\246\302\376\274\033\003\263<\n\376\032<Y\316I\275G\257\231\2740\003B\275\323\325>\275|\376\211<9\017\332<(J\252< \321\247\274\260\021Y\275\276,\273<F\013\220<\271\\\271<v\235Z=i\223f<\371\375\307\274\224\235x\274\245\2567\275\373\341\206\270\364\305\305<d\272\010\275\342\036\007=\224\247\370\274\017\311\251\273;{\343\274\334Y\343;\356\"\021=\263J\031=\332\315[\275n\265`<[\233\n=\256s\221\272\347\360X;\324\242\007\275\357Q&=\360\306\221<\376\016A=\235\205Z=\270\260\335\274\346G\002=K\210\234<\322t\036<\335\241<=\371\243\311;9\3669=\036\313\371< \006L<\341\002A<\365t\320;p3Y\275\0160\325<\277\016\346<U\253\013=\276\354\226;\247\272\317\273a\203\030<\240\3104\275k\327R<c\006Q=\356\031,=\330Bo<Z\270\027=\214(\033=\236\226\311\274w\241\235\274).\270\274\260\0364={\216\017=\265\367Y=\232\351\211<\034\210Q=\034\300\266\274\205}!\274\367\333B\274\027\3056\273\245\332A\275\314\3548\275\2711\355<\206M#:\300\307K\275[<\314\274_?(\275+\000Y\275\376\242+\275\363\274M\275\275\376\220;E,R=]\035\336\274\237HC\274\013\0001\2742\216\036\274\207\263N\275\305g\024=\214\311\243<x\2405=\370\201\032\274\026\210\026\275\031\330D\275\242\307\014=\315\2761=\347y\205\274\373\210\307\274R4\033\275\370\224\000\275\017\2762<\242t\353<\3666N\274Y\227\024\274\366\305\250<\377\323\243\273r\322\340\274\343\376\231<\212Uh<0\306Q=\321\362\001\2758\355W<\2577<\274T\260\334\273\360\276y\274\271\364&\273\037-\231\273\n\020B=\340\004\321\274\257-A<\\\227\233\272\370\007\301\274YX\035\273l\263|<z6\026\275r\367`\274\202\221\225<==\273\274\260\266\004=\374\264\213\273o\210\037\274W\323\236\274%\313(=u\372\274<\005\206\004=s\241S=\243\2752\275\311\327J\275.?!\274\272\233\020=\340\370Q=\200f>=+\204\034\274$\261\240\274\001\374%\275g&Q\275\275\037\220<k\2078<\'Z\251<{86<v7H;\333\327\212<[\266j\273\241\337\250\274\260%.=,\262\243<.\243\016=\014\307^<J\313\r=\211\2072\274\364,#\275U\'\220;\252\377\346<w\255\007<!\213L=\376\025\233<\002\010.=\036M9\275\017\250\016<~RS\275\312\033\004=\242\nI=\233\'\026<Hx\253\274\nU!\275\201K\312<\3412\r=\206\013\006\275\330f\372<\033W\255<\\\'\312\274!\265\377\274E\272\362\274J\236)<\350\017\234<S\351\213\274\265F\'\274\256\001Y\275\272a\333<\375\250W=Mb(=\243\2309=\264p\031\275\246(\2628\342$#\275\321\330>\275u\377q\274{@N=\001\301\363<N6V\274\241q\362\274\321U\207<\247\317\020\275Sy,\275\271\213\230\274\210{\025\272\027\005W\275]\222N=\343\250\315\274\362\253\231<V\366\271<\201-\003\275=r\036=\201Va<:yG\275U\305\271<\242\036\261\274\251^D\275T\351\025={\200\373<\240:!\275b(X=<\036\000\273dX\007=>\263\035\275\rJ\314<\n3\223\274\014\032[;\216\303\000=\353^O=\301\\[<_i*=\357\326\257\274M7X=u,\254<\210&L\275\006\225\270\273?\205\307;;\207$=\316\362\\\275H\265\024\2751\331y<2b;\275\244\3673\275!\312\026\275.\256#=\200,\324<\351|\"\275\237\274Q<\325 \031=\367\235V\275R%=\275\201\325\251<R\215#=Oq\n=\203b\307\274\233\350\315<\364\026\336\273\371\205R=\371\344\346<)\221#\275\264]5=BN9={\035\035=Y\036T=\177\317\022\275\224\327J<.r\211\274q\2439\275\331p\017=\276E)\274\376\271I=\206\257\006\272~Ry\274\230\005g\274C\316\213\273\263O\344\274\nX\351\271tlY\275O7\241<\n\220U\274\233\314\016\272\raE\275\241/\203\273\227A\004\275\351\350C:\273aE\275v\002\244\274\010A\017\275\214\316\203\274RK\263\274\304\336[\275\250\316d<+\273\367\273F\331C\275\202\211\003\275e\2007=\004>\250<\224\307+\275\276\031\254\274\321\207O=#\305\376<\255K\003=\370\'/=\tSm\273u\242K\2713P\260<VE-\274)sp<\027\010\177\274:,K\271vc\234<\263y\234\274\231\005\361<N\370\304\274\306\360F=\271d\267\274\240\000H\275\340\321\036=\177O\203;\263\3244=<\251W=\374t\316\274\306u-\274C\027I<\320\377\273\273\243*\275\274\355\207?\275)\301\033<\257\000\252\273.\016\002=\004\367\323<qc\336\273\022E\330<Et\034=\315\2739\274\032c\230<\261ZA\275\215\226[\275\343\317\023=m7\344\273\\\341L\275 \036\021\273\373\314W\275\250,Q\273\027\333\237\274\315\"+\273\034fx\274\331\315\000=l\020/\275-\214g;[r\311\274\342[\226\274\020w\202\273\334\3300<\027\036|\271\363u\241\273\364y\373\274\333B.<\223f\302\274J\365;;\014\323\251<=s\214;\361~6;\256W9\273\314:&=\274\206N\275\361t\371;\357\223\231\273\'^N\273\2058/\274\202\234\363<\022oJ\275E\270\367<haP=D\366\331<\361\354V=\223\224,\275\022^\370\273g\261\035\275~9\245\274\272\264L=\357\177Z<j\006;\275\006\n]=\341q/=\363\014\245;{N\027\274\231\244(<\r\200M\275<\014\r:\377\\\320<\270?\027<\204\372\037=\013\036\301\274,\037@<Z\026\377\273\233J\t=\035\231\233\274Dbu:\353\325K\275Z\275\350\272\244\213\032=i\250]\274\002\206G=\244\tH\273r\332\316\274\216\007J=\252\3724\273\371-\265<\036\266\027\274\331b\360<enZ=C\355\022=\\t\217<\244I\270\274\207)\004\275\231\326p<G\311@=Zvo\274\021\316p<\371Q\360<}\276\226:\207\374\373<\223~\334<]\236U=w0\204;\0246[\275\361:\312\273\330n\002\275\374\326K\275B\200\255\274\007f\305\273\360\314\034\275\252\370\021\275\335\236=\274\244\243\030<\335D\026<\210\342\201\273\261p\367<mD\014<\312\334\243\274e\247G=\247mA\274\341\025\322;\306\177R\274c\316)\275c\365&\275\215\315\r\275\300eP\274\263TI\275\007\255F=\347dF=\337\277\233\273l\035$\275\'\372\333\273,\274\325\2746\324\000\274\264\034\021=\261\234\312<\212\336>=\013\314\025;u\327b<S\267\330\274\372\225r<\206\226\274\274\037\033\016\275:-0=\210\246i\274J\276\345<{\321<\275]\345\363<\335(G=\016\2700\275N\216\366<\031\253\351<\355\300\334\274\373E<\275?\316\362\274\204\345W\275\226\026\315\274\233\252\t=r\014\013;\241I\343\2749f\332\274\356\n\n=\356E\257\271\354g5=\230\'$=_p\037=i\315\342\274Tz@\275/\335\026=\311sS\274\243\240\305\272\251\3563\274R\3235=0$\317<x`\233\274p9\232\274j\231\014\275\013M\000\275\272Q\344<xzv\274#\332\262\274\342\354\025=\007\303\324<p\264\3269vp\245<BS,=\245\232\264\274j\265I<7\272(\275\003\027x<\234d]\273\376);=|\336\020=\245I%\275\224\334O\275\310\357\312\274 [\370<U\240\365<\t\250\"=\244K\320\274\246\233)\274\237\300z\274\344\314\030=m\026\272;\030Y\216<\212\025:\274\302\030\016\275^g\275<\261\230I\275\001r/=LM9\275\336\307\233;S0\245\274aL\234<\317\266\265<\177\321z;\345\375\006=\030\024\362<\03430\275\237,\n<\"\273\367\274\225\247~;i\362\031<\226\n%;\311r\376\274\3543R=\233Vx\273\255\024\020\273&e\312<Tv\324\274\317\331\026\275\343*\265<$N\032=\0101Y=\025}\254\274\325\370;=\374\003j<\215!\037\275\177E\321<q\003\037=(\004?\275 |\247<\205&7=\313\010\300<\222\201\024\275\200\346\205\274C\013\244<\312\021\036=\305\r\003\275\247fM=\311*\037=T\256\033\274\320\003\330\274\270\n\027=\376\207\372<\212\032#=L\205\004=\241I\261<\265\367\267\274\272A\311\273\036\274\352<\006\271\225\274\362.(\275Z}<\263,\267\307<^\306)\274&\323U\275\004\024\010=Jb\225<\016C)\274x\300u\274\344\3050\275G^x<\364\344\323;\357\027\022\275(\014\033\275\313\347\n=\024?\314<\264\313\032=\235\367X\275\267\'4<\022\352\034<\362\220@\275?\005_<\270A\327\272\356\205C\273\021L\035\275?v<\275\251E\333\274\373\360\036\275\221\355Q=\225\026\016\275Y)^\275\366\003E\274@G\256\274\235y\000=\007L(\274\210\034Z\275\351\243\225;L]X=\331\323]\275\0331R\275\367Z\020\275\r\375\346\274\372\013\007<8)7\275\017\275\021;\242p\355<\243\310\256\274\364\243\035;_\223\013\275\002-\021<\367!\'\275x\021\340\274\232\341d\274\365\251\016\274F\022\022\275j\000\n\274\310\345e\274(\232\322\274B}\346\274\r\236\206\273\322\250\307<\236w\005\275\247\032U=\263\216\001=\213<6=\370\270N=5\236\005=,v\257\274\217\346P\274\270\350;=\351\243$=\3622\215\274\347\306\031\274a\211\337\273\3637\343<\210\2438=\005tH\275\236\337\301;\277YH=\r\372\321\274\344\247\001<\371Y\204<\r\371t<6K^\275\334\236P\275\252d#=\242\3369\273x\301:\27549%=\017 \372;~\"0\275\016\3136\275.\226\240\274\250\031D=\205\r3=!9\363\274\252\365\303<\343m\031=\256h\371\273C\232\016\275\022&\353\274HC\004\275Q{\254\273\255\007\277<W\223F=\246\000\017=:\r\301<\332\234V\275\010p\215\274\3775-=]W\001\275\303\352\213<\241J1\274V\261b:`\2109\275\3607,\275\016\216\306;\030\035\227<\303\340\306\274\265\032\230\271]e\336<\203\356F<\007\034\031\275\326\312W=B;\"\275\340\257-\274M(4\275\320;\300<Q\037\345<,\354\354;9\202\264\273}\342J\275\313b\277\274\032\2576=?\243\032\275\230\343\233\274\312\233\351\274\370\265\255<S\344\241<M\201\\;\357\032\265<\037|\245\274\200v\014=\356\201\376<\177w\301\274\252E\256\273$\365$=\027\322\335;9E!=\215\334\336<\\\272\021=oa\010\275\006)t\274,-\027\273\264\340.=}6L9\370DE=yMZ\274z\201\221;ss\003=\342L\020=\207\365\316\273\220\237\'=eV\202\274\341\t =l\3751=<\250\322\273\247n\302<GW\267<\272\356\345\274\330\266\337\273\317 I=\3251\236\271\245x\213;\323\370@\274\\!p<\226\216\002\2757d\274;\330#\321<\023\213=\274\254\214\324;\216\277\001<\231P\225\272\340\214\242\274L\335\031<J6\243\274\"s\202\274\213\277\026=\321\303\347<\200\372\236<\362\255\010=\016u\032<R\227\376\274\224~J=\r*\335\272\340\347C\275T\250^=\2673\035=\253l\313<\270\251(\275mc~<\032L\033\275\227\373G\275\242LX\275A@-=}\341\232<h,Q\274f8\r=r\003\321\274;\211S=F\005n\273.1O<\350\313\032=\245/\033\275\322Z\364</\225>\2751\215\362<.P\211\274\020\375\324<8\221\325<\'%\313\274\352\223>\275\370j\310\274P\214L=M;C\275\253;\331<\t\031%=\206\372\245;\020\251&9cB_<\036\023P<\340JH=\003\342\037\274\t\373\207;\237\032\247\274\007\216\217<\025D\014\275\323\221\236\273\343{m\274\200?\263\274\304H0<{o\273\274_\212 =\252\233\351\274\212\004\353\274E\035O\275\024\273\032\2754\273\255<\375Zn\274>\370\315;NA)<\362\257\017\275\360\227)\274e\252\330\274w\273\235\273\336L\275\273cL\202\273Hy\317\274_A\245\274\276V\221;\377\225z\274Fbc\2740 \032<HsH\275R\244\222\273\031\224N=\226\332\341\274B\016\356\274\230aD<3\202\307\273\016\206\226;\035W\276<\335\302]=\331]G=F\017P\275\310\241P\275\267\336\023<\221O\222<;#5=\312\350\006=g\316]=\315\316\024=\324Q\231;\311\247\372<\220:>=\261\024\006\275\350A\010\275:\355\025\275\207\363\017=\250\357\347<l\231@=U])\274T\2504\274\316\030\222\274:\377\360<X\245O=\227\260S=\343\356\306<\270\352O\274\031\003\253<v&.=\376\270y<\213\337\013=>fD\274S\344O=R\300\021\275}\216\030\275\364\212\226<\256\212\032=\374Y\002=R\374\000\275a[\324\274PK_<\r\213\014\275\357\370N<`\262\354\274\317Z\254\274m\337\014\275\027 \266:\350&\213<\021.\215\273\004rB\275\376)Z\273.\353\236\274\360\245\245;\034\343\307\274\307\276]<\255\t\265\2744\013\177<\257\2442\275y=\347;\026\2110\273\346\205\377<?\034\'\275\t\t\323\2741o\242;k\231\310<\274\255\t\275\"\374A\275\244.\245\274\241\355\241\274\254\323%=V\007\262\274\030Z\006<\026\324\024\275\0210\246<\037\001*=$\304\267<\335\214\224\273\240\377\300\274\271l?\275\302\334\332<\342\306\352<?\305W\275\202\030\255\274\223\r3\275\227\021\246\274k\2725\275cpD=\347\354\006\275\232\243\031=\322eS\275\243\261\r\275\265\251\023=\204\373)\275\2722\311<vt,\275\r\342<;fCi\274+\306\275<\371\275\347<\014\331\370<\211y\017=\014c\030<!\350\237\274\347\253 \275Sx\t;%\360\206<\227\264\315<\326\223\247<\300:@<\205\330\300\274H\350\260\274Q\203V\275l\022\376\274\346+\366;;\234\013\275\214\300\303<\210\0306=\370\235D\274\333\264$<\304\255\236<{\037[\275\223a\217\274\230\221w\274\2344\277\273MVN\275JhR=\021\306;=\244\256\342<\020\006W=\313\034\245:\020\321\307\274\306G\271\274\320;A<\236\315\002\275\276\361E=\2241\017\275e8\032=\226\230\223\273.\337\313<\206\3456=\003\234\2038\263_J\275\330&]=\337\177P=\004\254V=.\025]\275\2234\000\275s\277E\275\n\032O=\332D\r\275\301Q\213\274\330\271]\275\315\233\226\274r\311c<t53\274\350\316\301\274\016i\333<\244\013\354<G%\300</\276`\273\3112(\275^\237\275;Px\271<%\342\031<D\202\032\275\352\376\017\275IjS=S)\224<\004=R<|\335\321\273\255\3320\274\320\3003=\362\206\010\275\240\340$\275\207\2571=\317mn\274S\036\200<\206\250#\275 n\310\274\374+1:\274jL;\350\0011=\n\300\023\275$^\376<`\004\005\275\273\303D=\263\033K=K\003\215</\366$\2751$^\273\rG\023\275\010\251\300<\261EE==\035\325<\014X8<S\3432=\212\343\362\2737\331[\275\330V\244<]\205\245\274_n]\275\017\2635\275\352\305^\275\330\207\374;\3525G=\223\024\014\275Eh\032\274\030\215\255<k\340%=,\271\252<\373\250\3029\254\204\007\275\316\373]\275Z\341\010=1\254:<V\344\014\274_o\267\274\327j#=\315\345R=\nKQ\275\363\275B=+T\221\274\371\342\340<\035\001\260<]\377\344\273\035\201\n\274\270k^<\205\325\t\274\220\323W\275\321\021\202<\007\026==\364\322\203;3\2157\275L-\364<\220\313 \275\270\350\252<Mi@\275\216\210I=\320\355A=\273n3\275*\\\354;]\020W=\177\220\014\275\000\271\204\274\334\245\364\274\016\262\213;T\0319\275fL\252\273\200B\007:\365!2=2z0<\227M\253\273\375J\206:\\\030\370<\337\301\201<r\002\023\275H\031\2469\327\257L=\325\021U=\3346[=\0231\003\275\304_\203\2742\266\204\274$M3<\204%\247\270N\373b<\255\024\027\275\2352\"\275\221\034/\274\351\254=\275\202I\032\275 \001^=\275\315\374\273\225\274\304\274\231f!=X\"2=mo*=\354\271O\275>\242l;\220\306\034\274\221\325\t=M!3=F\251%\275t[\355\274\250\323\014\275\220\000a\274\222L\225<8\213m<\225\365L=Q\331\246\274\346\233+=\007=-=\335\245\030<!\374&<\262jK\275a\377*\272\231\335\365\274\310\276N=SE\345\274p\213\302\274\026\260\311;k\030\213;\016I\210;$\035\000=%\203\221<\247\353\254<\250\343\002=\027\215\001\275\370u\275<\007e#\275\263\317\022=\221G\227\274\006\377Z\273\355\375M<\334\246\232:\022\205+;\227m =3\235\272\274\230\256\034\275k\306\"=\340\316\006\275\325YK=j\345\337\273\256`\204<\337\2356\275\200\215\016=[$\366\273\316\031\031\274Rf\310<\036\027(\274o\241f\274D\231\260\274\226\373\327<[\"0\275\252\005\223<\034x\364\274 \373\344\274{)\264<@\315M=\243P\306\274!j\236\273LyJ\275q\227\340<\002TR<1\277\325;\373\315<\274/\225\035=\210\351\t;E?D\274e\266=<\250\206i\274G\205\225\274;\314:<5l\314<%\275\016=\267`\010<\362q&\275\245l\240<\216A\025=mI\274\274\n\323\204\273\263{\350<\004\nD\275\337\253\234;j\177\000\273\035\342T;9\330\206\273\350$\262<\'(\001=\242\"\251<F\274\036\275\263(\017<\"{\366\274&\207/<cd\017=\247\330\300;!{\254<\177\256\246\271\331\236\304<2k\212<\301\034\025\275M\017\374\272\367\327)=\207\305\r\275H\264\320<\375\347T=\2679\230\2745\374m\274\227\036\366<\"?\007=\315~\315:\"\306s\274](H\273\265\376\372<\0055\022\275A\242\274\274\020\235J=\242#\213\274,r}\274\277\257\206\274{8\032=\275z\227;\002V\377<s3\036;p\270.\275\034\037;=!t\331\274\013,\025\275\225\362\t<\037\234\254<6a\250\274O\025\027=\341.\231<\022\201F=+z\006=,J(=\257\226\273<luN=\213z\345\273\301D\000=\236\2208=c\031,=\337\370[<(\022;=aA\367\2744\235V<\000\232\325\274T\027%\275\322~1\273\222\365\006=\330\336\254<\010+;<+\2173=`\344\n\275\\\306\027=\020\354\014=D\230?\275\2756\277<\206`><\'<\003\275\017\344\315<?\n\361\274\364\252s<\207$\004=\327^5=@EP=\"\354L\275$\304\314:v\343\316\273(\031\352\273\n\267\350<X\352[\273$g\274<$L?=\006\334\n<\354\210:\274YM$\2750\021B=KaL\275+\271\031\2750\t\210\274\372\005$\275[\301<\274\352D \275q\255B\275\252#\235\274O{/\275\346\023\006\275?(\246<\230\371L<\234\257\006=\334\324\000=|~\024=a\350\252<\276\340\216\272\255\352\235<\\\0004\274\235\260^\2758\325\371<\354\271\330\273\2036?\274\272\372/\275\013\351\213\273\230k\010\275\227o\014<7\200\266<|\242\021=\373w\273\274|\266H\274_\355\300<T\263\222<\033>\013=\323f0\275\335\017==:]\016\274\0201I\2752\260\010=\030d\021\270L5\314<\237oP=_\215\330\2735\326]\275~\014\020=\026\005\335\274\207\230\222\274\355\314\277<\220\264==\017-#\273\0027\215\273\376\t\014=g\'>\275\236\345/=vF9=\321y\025=\0168\365<.\336E=\0137\001=\372[\030<\001O\226<\025\002<\2752\215)\275\251\222?\275\317X\034<\275\231\373<m\222=\274l#\302\273(Z[\275\252.\320\274\251\022\240\274x\335\200\274\262v\256\274\350\241\311:\253-\375\274\375\243\314\274\017\005\021=$\021\r\275\036{\303:n\263&<H\237\203\273\001z\010\275/\226\323<\223\243 ;H\311\016=v\006\027=T\223I=\322]\267\274S\261\225\272^\215H=/o\002<\254$\261\274\310%\000=\226\221\\\275\207E\037=\035L\304;\277\365\344\273#\277!=\334\303\335\274J\212\366\274\007B;<\373\377\033\275\357\004\310;\377\261+<8\265\270;\023\360\377\273\365>\371\274\243\335\352<H\306W=\221P];\256\217O\275\001\024\022\274\237h3=\264\313\264\274\217\325\001=\257c\335;w\232\367\274\205\206\310;U{.\275\330\303\030=\007\033\341\273o\3639<\210\335W\274\241\264I=^\272\336<0\301I\274>\016\232;\303\350H=v\271\r\275(\241\216<\210\350J=W]\036=\217\025\352<\260\332\031=a\034\036=/M\211\2740((\275\242\2244=uhI<\315#Y\275\334\300\021\275\'\'\364<\r\255\321\274BE6=S\355}<Y/D=\310\222\254<\373\374&\274YK\235<\231EW\274\203\\\227\274\237\254\244<\3201\037<N\207\300<8`\345\274X\303\236\274\264\242Z=\300\"\304\274\002\317\002=\016\351\345\273\300\303\303;\360\277\336<B\302\035=\2349\'\275BI\004\275t\362\254\2730\246\375<3D\023\274i$\204<E\3653\275(\006\366;\275\354\361\274B6\035=g-[=\017\356\247\274y\t\253<\n\270*=1\330\353;\325&\307<O.Y<\322\272\345<O\354\272<\257\245M\275\217\322\014\275\301]\200<H\034\027\275\014~1\275;;\022::\010\037\274#z+=\364o\003=X\033\272<\304Y/\275\224`>=\354\3058\274\314\317O=\360\005L=\241\213\222<\360\245\026\275&\262\277< \370D=a\336r\272+=\317\274\376\"\200<\334b9=\327\006\351\273\377\326\352<#\364?<\214\205W<\251\342\020;\371\206\033\275\355\322\032<6\244\221\2746!\360\274\251~\345\274\025K@\275\026\001\364\272P\tU\274\235\301\323\274^\241F\275\242]Y<a\343?=`i\263;\364\227A<\344\010\002\274\327g\344<r\030\033\275\3671\203\274\202\246\2509;\000\343\273\273\210\372<F\2079\275\344\300\030=\323\261\342;\317N!\275\241\253W\275\324..<l\306\246\274\212\254\025\275\320`4=\\\246\353;}o\314<\237\344\210<$\007<=2]\033\275\025\372\002\275\201D8=\3416\021=J\327\t\275\254\017\004=\364\265W=\343E%\275\260 ,=7X,\2757\230\247\274\246r\210\274>\372\027<\257\321\024=i\3303\275\016\300]\275J%?\274/l\236;\273U\021=\324\tG=-\235\272\274.\212V=\226h\036=\336\017\221\274\032\\/\275\215V\347<\033\233\305\274(\366\315<$e\354\273\0042Q=\031\027\213\274\243\236?\275\032]\302\274\205\003\337\273\345\345\307<\347Z@=\343\362\224<\314\350c\274~\0174=\023\332R=\371\n\321<\013\225\200\274M\323\204\274\230\260\326<\241i\214<\006\027N\275\257\030S\275\310\277B<\257\273\243\273\3422\305\273\222\205\020=\324\025==\365\306\002=\311\377\265<I\235\r<^\367\357\274\227FD<\263\337\344;\251\277\030=\2458*=\212\247\250\274z\230\237\274j\215\306; \341\347<\250O\336<#bX=\243C \274\317u\306<\031,\277\274\265\307\375\2742\342D\274%\201*\275\202:^\272]\355\261<\302^\"\274\030C3=\316|F=!Z\005\275.\322\236<N\234$=C\234\225<\037Z <\333\272?\275E\004\006\275\324q\002\2749\307\372<\373`R\275k]\'=\001\360\230\274\316]\261<\277\244\210<\213\245P=\027)\355<\200\226*=\030\275B\274\200[\025\275\231yP<\355\370E=\355\232I<\311\275\205\274\3271\371\274\316\256I\275J\225F\274=\035\024\275\316\3765;\031\217\010\275h:\031=\325\016\305\273-\362\230<\006:\025=`\323{;]\250\031\275\247\263[\274\027\236\364\274U\373\231;)\330\205<(\253\021\274R*6\275\256\276\274\2730\366\246<\374\2159<\217a2\275\307\232\014<\365\t\205<`u\363<\305r\010\275\r\020(\274\312W\315<\377d\336;\033-\002\275\336/\336<{_;=/]\360\274\033\335(\275<\275\313\274Z\264\266<?>\013\274%\007\231\274\231K\002=\026\366\026=|\270-\275G\375\356\274\212T\005\275(\023(=\206A5=D4:\275\312~K\275\276\356\216<\352T\332\2741\036\304<\177\205\202\274RF\327<hX\003:\020`=\274\013\240\360\274\323S\270\274\\%\232\2731\017\342<\330\2258\275\373\006\275<\265\304\254\274\000O7\275\225m0=\374\320\207<\033:\351;\270A\036\275\377\306J=\201\332D=\362\327Z=\350\034\032\275\030\005B=\245\351E=\275F\257\274\340\346H;\307M\321<\363\030\350;p\251\002\275\370\005\215<\240N\361;\'nE\275\272@&=f\314\344\274\273\313\027=\341_\336\273!$\266\273A\000\333\273\237\227\354\274\355\363\331\274\220\316L\275I\027\'=\272\377C;\277\342\337<\217 \340<\023}\'\2757\364M=\307ZE</\372\326;\314)V=L\216^=\276\250{<H\275\246<\226\251\004=\272\234\276<\204u\324<\3042=\274)K\037<\371~*\275b\234S<;\224\217\274\212\367\264<E\361Q=.\267R=\224W+=|\225\371<\017\270[=I\315I\272\341\245\341<\022&\005=*\3125=\257\363l<\217\324\352\274\304\300\240;\336\216\030\2755i\225\273\223\322\250:\007\364\033\275\350\021P=q\"\004=\211\367\315;\177\017\235\273\266\273\253<\231\237\361\274\374\317\001=hS@;+`\220\274;i\004\275\261h\201\274\247F\t\275\274\250\245\272\337/\014\275\3336\002\2738\033T=\2603U\275S\031\347;\265\234\037=\032\335T=\320>\220\274\273\312:\275\3154H\275\340$\014=+@\307\274z\007\003\274\t\177#=Eb\220<\216\332*<\333@\332\274\362\375\276<\353\342-\275.\325F<{I\035=c\324#=mI\327<R/\254<\254_\356\274\360\317\025=\267\3004\275^l%<\211b\034<\202_*\275\250\360\n\272\345 \377\274Cd\005<\336^\210<\355\"\021\273,\024\006\275_q\370\274\245\321\005=\371\353\001=\335\305\030\275pYS=\317\254\320\273\342\312X\273=\372\362<t\214\253<n\232\276\274\247^\242\273\030\310\336\274\241\241\002\271\2475\207<g\253N=0P\016\275\024,u\274\004\371N\2752\021\037=1\234\275\274\234<C=/53\275\226o\032\274*\010P=\204\033T=]\212\007=1\0226=\033\365\031=\231\264\030\275\300\n\210\274\320\'\200\274\264|\037\275C\300l\274\350,\362\273\r\246\014<;\206\032\272\202m\031\275N\001X\274w\024\030<\202\234\352\274!\316*\275$\212\303<\334\010\260<FK\345\273\353\213.=/:\303\274\217\203\330<L\334\214\274\241\230\321<=\360p<\005\206\023=\262V\370\273i\3701\274\035\362\226<\244\202*\275U\305N\275\024c,\275\265\377\014\275\367!\370<C3?=\340GU\275\024\333\336<\r-\333:\245\273\035<\2127\322;\243\306\\\274\370\302.<O\264F==J\261\273q0B=Q\372\020\275\2739\026\275\240\312\231\273E\026D\275b\3767\275\261,\373<z\230\354\274PZ\304\274\277\200\265<\ns3\275\256\022\027=\177Bw\272\016\242\356<\360\267R\275\357\242\312</_9\275\021:\374\272\340\277F\275.\277\204<\270Cw<E\332\003=\310l\035\275\002\272\311\274\265h\017=Q\026\325\272d\365 =Z^I= \333\216;\023\217\314<\337[\305\274\2008J\275|\345\026\275\0161\270\274\"\003\237\274-\035z<s\262\023=[\267\353\274\267\355\373:\207\213\345\274\230+A<\0355L\275T\356`\273\303\333T\274$\262l\274\250\212\304<\266\275\"\275QD\016\275\310\261L<\340z\235\274\240\025\211;\230x)=Ue#\275\022\177\265\273\357\023\352\274\201`\017<\223\253\261<\253?2\2759\3748\274\016\371\022\274\2616\205\272\346g\007<\245.Y\275\316\231B\275\252\024)<\307JY\275\247Ag\272\2742%\275\303\005/=\024Y\246\274\222\3004\275\250\'\207<\274\327\267\274*\032\333\272j\323\036\275\3359\246<\362\225G\275\240Q\214\273\327\340\034;\264\375\304\274\346\365\367<\321\330\200\2749\344w<\'uX=\262\345\347<EN\302<\035\224:\274\340H8=\235\225H\275\344\265H\274v\222\226\274iqS\275\345\266Q=D\376\364<\024OT;\206>\202<\347#\374<\326t\035=\tW\327<\013\254R\275\266C9\274\202`9\275\260\211H=\217c\247<*\3469\2752\246O=\337\2736=\005\r\005==\272\027\274\352\271\032\275\313M\034=\365U\004=[\323U\274\373Z\222<\263\337O=\247\205Z\275~+\235\274\353\2406\275\314!\020=\222\215+=\'\273\005\275\177!%=:\351f<\222}\014=\235\341t;\221\226\021={\271j\274\256\"\005\275\302W(\275\323I\214\274^\324\034=\002&\035\2759\216\020\275\371\377J\275\034j\023<\367\252\211\273|6\003<;{\210<K\275[\275\222\330R\275\255k\022\275\260\001\'=xY\\=n\270}<\275-\014=\301\"(=*C\343\274\377_\037\275\336p\\\275\263\306\327\274\030s\302\274X\341\023={\341U=\014$\213\274\005\023\005;\022\365-\275\365\274\001\275\273Y7\274\345\204\317<*\375\325\274:=\022=\313x\265\274\023\361\237\274\376Y?\275\245\252\010=\02176\275\372\3164\274\324\313\332;$\353\272<\314\257\201<K\002\363\274\030},\275\347\264\320<\343\334m<\335\220\366\273\302b\016\273\033J\334\274\215oW=2\211\205<\370)\273\273\303[P=5\0015\275F,2=IN\316<\027\343\010=k\332H\274_\200F=\007|\001<\260\002X\275AQ,\275\356\2639=\033\241\016\275\303L\034<r\322\014=\327\356\024<\216R==w\224Z\275\225&\325\274\372wh\274(\'\222\274\226\3549\275\364~1\275\267W\262\2742$O\274~\004\001\275\215\310\n\275\037\247\033<k\272\235:\035\334\000=I\2278=Q\031)=\013\237\036\275\r\277\356<\377\2102=\320\265g\274\023\324\226\274H>\217\274v\250\261<\376\364L=\333n\003=\341#\027<\352\200\226\274\214\256\304<T\355\227:K\225\024=w\345\314<\026T\377\2735\001/\275\362\325\002=.a\240;YEc:\310{R\275\323\364\033;\027\342\017=Rf\322\274*\021\n\275\340\310$\275\365\237T=\353\211\345<IZ^=T\317\250<\215^\022<\222\305\365\273\315\027j;\242\033\313\274\022\276\244\272E\373\030=m\377\001<I\245\2259\003\312Z\274\317\276\035\274Yz\034=\372\026\240<\255\374\347\271\004\003G=\351\300\035=\243\0062\275\355\350 =\027\232\026=\357[r<c\266\013=\r\227F\272\323\n\007=\361\362Y<\261g5:/\3549\275\316\252\234<\'WD=|^T=s\351>\275\233d:\275\332\260>\274<\206\200<\271j+\275\225\327Z\275*P\036\274\236\243\005\275%\372\335<`\270\340<\023\010!=f\233S\275p7p\272\312P!=\224t\r;\026\325\037=\006}\220<\213\r\r\275\375\014$\275\232\312\373;Y\266\275<aoU\274H\220A\2738\267\342<\362\307\261\274T\305\026\275w\241U<\244\322\205\274wL(=\312_r<$\2033\275\276\336j\274\263\232\034=0R\020<MG\245\274\023\373k<\"\000\031=\352\261U\275\377\254=\275\270-\214\274_\314\233<\217m\004=\006\364\306;,ZE=\324/+\274\327\322\363<\252\347H\275i\253\037\274F\263;\275X\203\202\274\375/ =K\377\331\274\241\366i\273\262\321\364<6%\"\274E\221\013\275]\n\001\273\177\225\306\273SE\310<>!r;)\240Y=\261\202\274:f\246\033=\301\007(\274\270)\321\274\251v\233<\'\314\031=0dB\275\217\312=\275K\010\346;\013\325\010\275\307ER=7\254\t=\025\340G\275\007 \r\274\254g\221\267\226\014j;\300u`<\027\n\017=l\324\312\274\341\217\352\273\201T$\275l+\010=W\003\230<=[\260<\266\303X\270\371\200\311\273\302j/<\026\240+\274\272L\313\274\315\033V\275\314P\320\274Jj\227\274jj1\274\"B\033\275\025J\037\275Qh\226<\202\2466<)\0056<h0\317\274Y}&\275\262\024\341\270\342\305\036\275\213j\243<Y*\213\274\023\3253\275Zhn<\234\342\301<\266x\034=\347\211\367\274\000l\034=\243\035\303\274\032B)\274\330\273\264\274\342\3635<\tJE\275\227\024\331<\217\233e\274\004P\375<%!U=\312}\r=\\t;=\202`\220<\tt\214\274\233\235$\275\250\204\324\274\035\312Z=\312\364B=Gm\000=y\255\224\274g\353G<\252jW<\374q\270<\005\032;<\377M\036\274I\357\223<q_\014\275\010\360U=LS\321<\206\303.\274\3767\333:H\343g\273WRD\275\177n\200<\036\272{<,\221)<\354Dv<\027\3155=\262\226!\275\016\226]=\t\201\372\274A(M=R\024|;\312\357\223<@\330\315<\004\212{<\200\242\253<\361w\023\275\336HK\274a\342\314\274t\356\237\272A\301\023;\036\322\036\2757Sc\273\030K\321\274+\340@=\2350\304\274BA\207\274\342,A=I\242Q\275S0o\274R\204\205\274m\353h<\332\335\227<5AU=V\323\270\274\023x&=\200\235\032=\212\322\032=i\353/=\356\334\343\274\007\341?=K\371\327\274\326\323C;\336\203\025\275\006\005d<\006\247\225\272YKB\271\320\265{\274\210\316\033=\254\247\243<\257\036\265\273\352S!\274\310x\360<\202\033\240\274O\353D=\343\367A\275\243I\321\274\315s\303\274$I\021:\320W\025\275\325N-\275U\233\010=\\\022\021=\360\210\241\274|L\"\275\325\267\022;\206\321S\275TR\017\275)\025~;\255}x<p\242\202\274t\2602\275C^/\275\221\351\\\275L`\026\275H\243\207\273\350k\317\274\001\'H;\303\231\350<:\350J\275*\222\016=\352\365K<1\343\214\274\213\227\333<\345\212\177\274b\004E=\220-^<X)C<\271u$=\215\350j\274\030\223\033=\367\372J<e\243`\274\000J\310\274cYY=fTe\274\343b\033<+y\213<wO\"= l\037=\350\343M\273\217\273\237;\r\223\022=\217\322\346<\000\242]=\037}\247<\207AV=\035\374\226\274H\331A\275V\377=\2756\000\204;;\306\027\275-J1\275DIG\275\271\346\235\274\177K\202\273\223\327\353\271wxE\275\334\270Q\275\342\275\000<\377\247\226\274\014c?=\273T\350<t\0041\274\347\336\035=o\232\010=l\0346=\031\347\310\274\271\2567=\331\224<;\247=\010=\356#\230\272\316~4=\306hS\275\262\3127=\036\327\365<Z\0328\275\000\270\211<\342O7:\326<R\274\250\360\t=\235(\232<\t\256D\275\021\036W=\203\267K=\336\204G=\275!6\275\231\'\317<\006\246O\275\210#\014=\321n6=\020%(=B\000\006\272\322\014\224\274R\036^=\371\346-=\rZS=\025B(\275\222\002\030\275\274\305^=\354n\212\274\3372M\275\232\001\013\274\252\3230=`\2449=\226\254\366<\230^\014\275\355\2153=\230\310\213<%}Z=\2731\260<$\211H\274\030\362\232<_\314A<\023p9\270?{\237\274\013\212S\275\2454\377;\236\305\010</\033\006=T\343&=Y\321W=\310z(=JcO<\322\354,=\222\001\001=\204\253B\275\345Q\370\274\327\3001=\336\220\247<\346P@<RP-=Q`,\275\3172\006\275\211\265\026\275\033\345K\275\030U\027\275\256CT=\315\203O=H\260T;\273P-\275\345B\2219`4\336\274%}\275\274\350Uq\273iD\355\273K\261\343\274\376vS\275\233\247H\275\311\272\376<\366\313\275<\035\274K=s\370\244<\342<N=:\3149;\016\273\226\274\0225\272\272\254Q\315\274n\340N=\340\232S=\371\257\270\274#\367\224\273E.\335\274\2774K=\354\203?\275+]\310\274\237\025\330\274\342vQ\275\005\274&\275\206}(<\344h#\275\313\275\303<}a&=\341\237\263;{\365F\275\000\234\'\275\000h^=q\013.\2753\301\020=\206\2556=\211\272\272\274\267*/=K\252\375\273\371\325I\275\232\033\313\274SY\r\275LyN\274e\363\n\275\233ln;\264`s<11\354<6gR\275\230\320\307\274a\203\335\274\350\'\212<\'\302\027\275|\014\017=\"\354R\275i\236=\275\007\217D\274\027\010\323\272\375\315%=\244\273Y\274;\230\036\275N!P=\276\360[\275Z!2\274a\213Q\275\255\2027\275\277\275\321\274\362\001z<\236T\001\274\366\310\037\275k!\"\275\007W\244<\033\330\307<\301\310\000<5\331\2409\177\364@=\351\270\347;\272\316!<\nbM\270f\266\323<\230\014\313;6H9\275\240\370K=\307\020*\275\207\001\037\275\245\222\010\274\027f\003<\006\236\256\274\205\3424<\354\310\215<:\215\200<8\236\031\275\303\263\211\273i\026\202;V$&=\336\366\026=xY==^\323\204\274MoK=\320\373[=\261\216\022\274\350\301\'\275\205\210G=\263KM\275\316\233E=\322<F<\022\304\326\274\327G6\275\211\354X;uJ\004=0\336\332\273\371\216@\2745\014\224\274\253\303\267<`\207\222;;\320&=GZn<\002AZ=\372\177\006=\231\234\021\275WO\362<\231\006\032=?\247/\273l\211!\274\031\035(\274\274\241\004=\340\356\335\274W\322t<\363i\227\273{A1\274\265\342\317\2734\315\375:[\273\352;\224\356\266;\234\346+=\225\245\233;6\213\002=.\242\361\274\036\266\004=\322\032\246\274\326\252*\275\321\326\017<f\233\254\274\317\037\032=pp\305;_\010J=<5@\275\211\262O\274\237\006\227\273\024\270>=\365\362\344\274\021N\r\275\355\224\023=\350\247G\275\225\234\335;\371\204K;z\327\266:Wk\352<\206\315\366<\036\242\250\274\253\006)=:\215U\272\347\005\276;\236\"1\275\2653?=B\202\260\273\366\370T\275[\000\010=]\376=<\307=7\274\033\376\204\274\237?Z\275\264mF=Y\2454\275\212u\003\275\037\037\323\274=q\354\274i\367\034=rL\363\272t\364\367<\032\276\272<\255\321R\275p\310\005=\274\035\360\274\226\242\005<\233\332\2319\371\310B\275\240P\214;\352\224\211\274\231l\354<\022Ra\274m\177\213<\265\306\236<\3069k;\"\212\026:\021~\3149\272\342:=r\357\357<\327\352.\275\202\343\201<o\341\271\274=>r<\nt\232;\240\006!=\267\"\246;\t\243\007\274\017\0328<[\347E<\220\365\216\273\307\222\010\275\002\361%\275X`\036\274\201\236\210\274\342i\205<\277\336\016\275e\207P=]b1\274\037\220\313<d\332\216\274D8\244\274\236\026\247<\355\035?\275d\236)=\256\013\031\274\277W\221<]\031T=\342\017\000\275Q1j:\264\210\n\275\362\\R\274\337\375\212\273)\0339<t\354S\275\262,];\n\276G=\017D\323;\246<\333:]\245\341\2732\314\200\273\234gK\275\251\223\245;\360`\032\275zMQ<\200,\245\274 \312N\275\336>N\275^\204\023=\223\365\005=\377\023\036<\345H\013=#c\246\274\027 \005=\033.\023=]?S\274\302\316><|\252U=\224$\237\274\223s\206<.\310\204<\230\n\303<{\220=<X\360\267\274V\235\027\275\255\240\252;r\036\013\274\'\350\r\275\005\377*=\023\000*;l\321\351\274\231#\245\273\213Y\326\273\232\005\300\273b\022\346\274\014\336@=\272]\366\273\2320\243\274\321Q\025=o\n\262\274\243\263\003=\365\'D\275sA^\275\340\360@\273E\325\245<\271\320\207\274\336\300W<\264\\\\\2759\222>=?\250\325<\020\314\027=\274\340\325\274\240\251;=qc&=\346\3554\273{\260\n\275\253\347\246<EF\342<E\305B\274\005r\017\275\225/\264\274\037\013\037\275\331W\'\275p^\226\274X\000_<&\3729\275\253#,\275\341W\312\274\325dE=\343\310\033\275\230XH=T)\322<\"\021\202<\264\252\237<f\2256\275E}\231;h\224b;^g/\275c.j<\325\320\306<\272%p\274 w+=0dW\275\327\2656\274\314s\240\274<\271\201<g3r<@\232;<\2410\374<9\355==\375\023\222<\343J\005\275(C1\275\t\021H\275\344\242\021=\007\314\261\274\016\355\031=\277s\336<\257\340S\275\336\255\003\273]\204T\274\253\376!\275\305\341:\275t&\263\274z\t\023\275\303x&\275\325\200]\274}\237)\275\244\240\370<x\007\315<\244\006\274\274C\275\206\274\006ZA=\260N*=e~9\275z\2449;\210\331\033\275\324F\264\274\010\200`\274\265\224D=|\307\300<\345f\017\2757?/=/\225\031=\3508Z=\013\232\352\274.\325j\273fU\220\272Y\316.=h\361\322\273\251%\353\274\274p\"\274&\223H\275\"\2044=\235\233&=k\002\361;\315\023\316\273\262\257\202\273\334T%=\330\3225\275h\376\350\274\234[\200\274EU\036\272\3709\340\274\022\361\351\274L\177\314\274z+D=\026\352P<\333a\360<D\031\307;\303\363\003=\260#S\2754\351\020\275\312\"\252<~{>\275\006*~<\\\331\274\274P\2525=\351\266\221<l,\326\274\252f\377\274\261\250K=>\n\202\274t\267M;\250MJ\275}pG=\221\216\032<\257\177>=\325\315#=\201\273|\274,\272\355<\243\221\316\274F-\223\274\"\237U=\330\300O=_H>\275\306\213\275<\027\037\032\275\032\301\203<tn\232<\355\265\006\274\342\375\021\275Y\320(=\035?\005=\230V*\275z\3756\274-\034f<\002\236\261\2746\377\371\274f\0376\275D\352\312<\241E\2558\237Y\367</I\001<tvw<\tcV=\027\035\317\274A\356\356\274V\223\t\275\0225\036=\032)\207<5\257C\2750\220\037=E@F\275\350\035\372<\325\347\310\274\312\357\273<\362!\311\274\350,|\273\255|\333\274\357\220\324;\374\370\311\274\366_\273\274a\3167=\207_\024\275\376\230\314\274|\016\r\273\237\034z<\244\005\033\275\372X\026\275Y\373\323\274\345\211\273\273\312D\224<T\250\030<\352\343!\275\200\3728\275\314\210\'\274\342MX\275\342\026\321\274\037U*=m\225a<r-\261<\317\273\032<\004\356\332<\350\327\"=;I!\274O\322\252<!}A\275\0109\257\272\346$n;\223\257\332<\035\371\252\272<\347\206\274\327\210&\275\256?\342<\231\367\344<,\231\237\273\027\301N\274|C.=H0.\275\367\200\363\274\215\006\024=Ax\303;>\323\372<s%,\275\305i\244\273\256\310\260<\350\300?\275\220\253\330:p\233\022=\377\304\246\274\276w\016\274\246\327\013={\266\\\275\236X\304<\243\233+\275\314\372\325\274\245s\013<>\302\331\274\322e\030\275\336\'\343<\352x*=\177\321\354;\306\353I;3p\t\275\206\307\311\274\206\366\211\274\245\033g;A\212G\275\r\357\016\275\004\360\3049\3335h\274\267\2672\275b\213\036=u\305 \275\335\357\033\275\300{A=3\002)<\0136\n=\355\267T\275G$\362<<\330\314<\004q\211;F\0315=\224\313\207\273^~\223<\206\320R\274\231\355[\275\345\223\351<;l\274;\205\333(\275\371\305\275;\341k\253\274OU\254<\230^\202\273\202\277H\275\275\rA<\231\232\n\275\347\2172<!|V\275K\263\310<dFE\274X\234:=i\027\031\275]r\3128r\361H<q\177\217\273\225l\311<<\020N=BH-=}+F\275\024kG<j\313D\275Q\273\332<\t\341#=\362\005\252<\267@V=\245\276\003=`\335\253;\001\307\372<\211+\255\274\032s:\273!>*\275\372\'w<\225\002K=S]\031<\341\033\317\274\nE\021\275?\305e<\256.$=\312J\205\274\tC\214\274=\307\235\274\247\255\014\275N\214y\274\367\255\036\274\323\367T=E\232<<\003bP\274\270B\225\274L\"\276\274\332\266]=\014\246\3569\204\207<<\231\2029\275\361i\217\274\267\330h\273\2338[\275\251\307\362<Z\232\345\274V\274\t\275t\360\372;\211\322\252\271\313 \216\2748\206\331<\230\323\017\275\353e\230<r7\221\274o{,\274\235LX=*\024<\275\320\247\224\274\3740Y\274\347v\004<j\312\216\274m\207\364\274\204\337H=\314\372?=\361\326\210<4\013\337< }6\275\372\366\245\272\334FN=N)\241<\255\3031=R\225\332:\0248\337;8\216\001=\307\026\032\275{=O=U\354\212</\224Y:\315\r\353\274q\024\010\274\'\234\013=\317\352R<;\363B=s//\275P\372X=\233\364\264<\353\353\272<C\354\t\275\260|-\275D^\376\274\340U\361\274=H\201<_\324[\274\341\2579=@\032m:\344e\344:A\222\202<\370\357U\275\r>X\275F7\373<\032j\357\272C\243\305<\242\350/=\266\233==\336\004\266\274\004\244Q\275\332\374\001=N\337\022\274Jv\255\274i\271\\\275\253\000\003\275L\375\374<\355G\347<\206\324\320<\021\330\211<\026\177w<\200\233<=E\320\363\273\006\014\313<\306\034\037\275\303x\256<$4N=\317>\014\274\251\030.\275\247o$<n\0010=Ji\271<g\r\231\273V\037\\=\273\341L\274\363\244\217<\260\210\024=\250\303B\275\307\323s\273\202(\275<\006\244\302\274F\345K\275->\334<\"Z\025\275\327\245K<)\'?\275j\376\275<\027k\017\275\331\036\323\274\242\013\343;s3\354<\214\261\033=\317\301J=\027B\220<\005\2550=<5\000\274\371\312O\275\213\372\'<\254\020\\\275-&\334\272\004\2428<2L\261<\316\321\013\275\200\024R=\005;\270\274\314\202\342\274\212\000\224\270\366\350F<\270\025\347<\025p)<F\234\310:\230\365\332\274\342\333\307<\336z\354\273\273~\377\274\237\226t\274\001\374\331\273\307\326X\274\236I\311;\274\370\263:\3216\022=+\337\005\275`WB<;^H=,x\265<O\'\014\275\017\317\374\274<\002L<\265NP\275\203\006[<A\313\355\274u\355T\275\372\340&=H\343)\273\350e,\275-\\1\275\272\224\230\273\334\362I\274\020\346\350\273\306\304\263<\233\037\354<RPR<\336\034\223\272N\0377;\343\357\033\275\202\201\005=\237\254K\275i_*\275\024\"\375:A;F=\235K=\275\n\255\220\274\203y\343;V\235>\275\345\3262\275\\\005C=\225j{<\022\014,=\215\254M\275\306\020\261<\236\226\035=/\357\016\275\253D\312\274Y\375\213\274\216\003>\275r.,\272\250\257\361<V}N\274[:A=(\322\t<\247$L=\332\026\017\275\261^:<qs[\275\231\226F\2742\"G=c5n\273K\324\007\275\351\367\351<Z\3700;\336\356\354\274\177fy\272\024\351\034\275\337\265\345<#\334\334\274~;x\273A8\253<r\303\017\275\270\213\031=\356Kn<\340\313C\275\376\026(\275\242\273\317;2\3265\275\250B1\275C\376V\275\212\3037\274]x\027\275\033=r\274\355\023-=\\\267\025\275/VQ=\323\224P=E\306\371<j])\275\006\377G\275u\344\031\275\3354\375<$\316\021=\204\316\"=?\213\355\274\n;j<\354*\251<B\326:\275\263\213<=\261\310\352\274a\226\355<\026\301h<\257=\341<x\346\207<O)A\275H!\037\2758>\246\273\300.\245<\361\020_<y&V=\311\303\034=\360Ka;\037\343\246:\333\364:=\242\343\014=\223\370\n<\\~\350<\316?\264<i\005\265\274\032xB<\203u\245\274N&]=\222\003\255<?\004\007\274\010\330V\275\354\215R=1\205\321<\235\240\355<>\033\237\273P\262$\275a\331X=vh\307\2749j\275\274M\202\006=\371Q\214<J%\325<\274\223M=7\261(\2749\024\004=%A;\275\243\351\264\274.\205W<\214\344\377\274\350O\000\275\374\374P=\261\260\360\274V{\025<\216\315E:\024H\362;k\347\350\273{\034\302\273\023\201\351\274\371\242\202\274\372\375s<q\254U<\261\230o<A\255<<<\250\237\274?\240\330\274 d&<\232\223\321<<\256\210\273vs\300\274h\317\243\273\322\032\033=*\035G=p\'\222\273\3447\275\274\361\246\314\273\352\275C\275\023R\373<\353\036\031\275C3\354<\233\037\017\275\341d\225<\324k\r\2758p>\275\255<\350<@\010D=\243\223\010=F\0315=n\262\035=\322c\364\274\324\307<=p5\034\275dj\3028\014\316\210\274v\026\243\274\036@)=m\210\354<\364\203j<\2747\336<\350\n5=a\325O=\026k\031\275\361J\254\274\364Q\001=\217\276\020<s\310\'\275\034\337\353\274k\332C\275(\342\033=\305\313\277\274?\240\r\275\005\3714<\0364(=\\mD\275\376/\342\274#tV=j\251O\275\033+\036=\006\357\354<E\206\314\2736`\034\274\276\342$=\312%-\274b\241]=\016:1=jVZ\275\030!\022\275\3361\277\274f\221\010=<\345\332<\004W\266;B\325\264\273\345<\363<\237\017\326<\355\370\'\2731\366>\275l>%\275o\003D=\372\242\014\275\351+m<@m\025\275j\300\365<m\254\016\275\266\225\225<1\326\312\274\"\3673=\237\325J<e\320:=\303\363\235\274\323\216f<\204\2512=Z\277\374\273\244+e\274\006r;\275\246\022\255\274\222az\274\232n\224<\373\200\251<\326\227*\273r\030\003=\373\005]<\235+$\275\004KD\274\325\377\013\275\004\3725\274\317\255\231\274\3535\232\274\261)m\274\303Q1=n\374\033=\337j\032\275%\005\365<\370\255[\275\020!0\275;`&<n\001\007=\227\025$\275r\350\210\274\200\304\'=\332cU\274\213\242\313<H&8\275vqP\275s9$\275\254\257$;\221\246Z=\331\344 =\204HA\275\211y\002\274\025=\356\274\331(\020\275\364w2\274^\031\220<\301y\362\274\001%\264\274A\275\322<Q:\305\273p\2001\2746\0274\275\377]\237\274\235\317\014\275B\343\213<P66<<\317/\275\247\272\303<c\373O\2742\350\014=\030\350\005<\375g\005\275\247f\031=K\247\370<\345\200\r=\334\302\353;\257\t\315\274ul{\273\314e\204<\244\234\024\275\226U>=\223\363\t=\246\"\200<\344O\254\274\310t\n\275 \311\037=\256&D=R\273o\274\377\274(=\347$0=rC\324\274\032\341\302\274X\244\360\273\360P\027=\217\2306\275\276*\214;\001G \275\022\336\307<\016y9\275\345=\001<\025-L\275\334@H\275\026\206\020={\332\327\2742\024\007=\025\300x\273^\200\274<f\264%\275^<G\275\314l\325<e\000\\=\264\372\255\274\244\3453=\3235\304\274\204\232Y\275\255n\026=\273}\234\274q\231\024<\363\201\265;\366pw;\334\206G\275\026\2040\275\263\345\316\274@\025\256\273\3440\022<\0055\252< \316\372\274\350\3416\274\033x1=V\322O99\277\377<bJ\314\274I\320(=^\207\220\274as\023=\253P\247\274\254 \240\274\034\202\016:#c-=\304\207\023=(Q\335<\"\274}<\3634\225<T\030D\275<u\276\274\324\306\010=\2714\024\275]\263\030<i\254\366\272mB\033\273\347\000\370\273gL\353\274\337\330\322:\3613\313\274\371\352Y\271otF<.\260\"<k\2766=\252\207\032=U\201\314<)d`;\023\275W\274\237\017Q\275\356j\375\274\201\255`\272#B\336\274\220A\034\274\325\222\261<\273\365\037=\220]:=\322\341Y=D\3734=\014\205^<\203\260\204<7\220@=Q\314\000\275\200\260T=\230ue\273\205?d\273\365w^=\311\305\303<4\003\362\274VwB=\0314Q=\216#\223:x\033\335<r\252\003=/20<\310\'!\275\355\005\014<\374w\373\273\262\272\365<I\252F=V\264;=Y\300\243\271\314\226K<\205\270V\275\217t\232\274W\267!\275\230{\263<\222\216\t\275\223\255\350\274\206\373=\275\030V\034\272\036\262V\275d\344\275\274\254\000\317\274}\326\212<,M\020=\270\317\227\274 \027Q=\010N\026\275\035\032\273\274U|K=\034\271M\275\240\t\314\273j\235D\275p[\311\274\323#]<e/\304<L\340\021\274c\377\020\274\'a\333<\220\030\020=^4K\274\366\005Z\275)\014\274<\335\230`<\20652\274W\236^\275\207\377b<\026\350[\274\177\376\002\275\346W\335\273\305\246\221\274\253\372\200<\035\221\001\2744U\327<\230\256\255\274\2634\327<\317\204V=\350\277\375\274dq\361\274\024co<\234\2072=\211\202\r\275\320\261T\275lP\254<\252\243i<\204!\241\272\300\310%\275\245\260\263\274\351\220G\275\337\243N\275\345u\300<\207j[\275h:n\272\314\234>\275##g;yO\001<\347\261\201\274p\233M\275+\026W\275\343\216P=\013T\265\274\366zP<$\220\360<D=\033=\201\377[=\211\216O\275M\r=<p\353\037\274X\370\t\274\252\026\374<b-=\275\213\233\343<S\372L=\250\313\014=\331\337\377\274D\355\000\275\236\034\016\275&1\030=lW\243<R\344\304\274\300\007y\274\372\337\037=:4\017=\'f\364;{z\336\274z-d\274\372\027J\275\215\001\260<\315\275\r\275\3435\301\274\341\014[\275*c!=E\037\376\274\257\271\363\273\034\003K\275F\275\350\274\376\332\361\274\252\020\264\274\3548J\275\203\362|<P<X=\351\005\034\274\317\315V\275\025\201\341;R\232\235\273U\206\037=~\270&\273\014\3372\274\205\356\025=Ak\t=\342GH=]\031\225<\324B\031\275\026rM=\204\340O=6m\n\274\253\316:\275\260V\364\274\021\260\372\274c\303\312;m\233Z\275\272*$\275\253s\361\274.\354H<OB\336\274\331\301\231<\026q\347;\316F\020;\306\241\024=\265S\276\272\036};=\372\372\350\271\375\336\204:\351\202R<\363`\371\2743\322\236<Lo1=\251$\t\273\314iY\275\204\344\302\274l\217&=\324\r\232<\232\254r<\344i\000\274CL\026\275\231\214;<#\'5;\237\220\020<\306j\246<)\315\007\275\2711F=\030\031T=\330@\032=\2724S<\322f\347<Mq\300<S\327\207<\246%\022\275\376\262 \274\350?\321\273\352y\021\275\351\210\245\271\344\202\350<;\275 =\356\223\204\274\300\226\346\274$h\307\274,\222\356\274\217\016*=\225?*=\321\307y\274\220\177T:/\034\352<U\340[\275\235\335\271<\016\205*=\206J\211\274@\246A= \306\232;\252x\265<\352Y<=\341\317%=\003\001t\274\337Go\274#\314\230;g\241W=\033\'\225\274\003\316\022\275\274\340\000<(S~:Aj\320\2727\216\275<3?\252\274k\342R=\237\236*\275\025\333B<\351lB=\223\260X\275\032\324N=KL\375<\356J*\274\265\2335\275\n_5=\244\234w<\371\\\204<\354j\300<\363V\024\275\247v\240<\027\020\327\274\030\006\310<(\237\006\275\351\020\372;\010\235\313\274$\027\033=\221\234\363<w\215\247;\372FN\275\232\223\225<\203\2049\275\017 <=\316>\267<\345\321\322\273\301\356\335\274\366R\206<B\237d<\265\337);\366\255n\274\026\3254<\010\223S\275\034\307\t=\004m\372\274\325b\010=\230ZB\274\212\332o<\255\204\222<\031\210\215<\260\351\r=\265\236I=\264\034\262\274\212[\"\275M=z<\375\201n\274\343\231\037<!\007\035\275?\335\305<\000\000;=\322\377\\<lz\366\274\r\007/\273\366f\000<2\345\001\275\3256\334\273\331\220\374<C\001\300<\333\247@=\374\340A<K\254\200<\3436\035\2750\220\t=\374\271\260\273\031R?=\037g\217\274\007\321\246\274\000c\314<\231\215:\275@s\370\272\334\233g;!\233\326<\346\206a\274y V=o\036T\275\254\270>\275\243m3\275x\334\304<\010\222\305;\371r\021=\332\030\276\274\240\332\263\274\272\246;\275\255\035\026=\201\362\351\2745hY\272\314^\002\275>\355\241\274w\031B<\014\034\016;\304\352,=\251\212\016=\3336%\275,\363,=\337u\244;\201y\016=}\"\016<x\207\351<\215\300^\275Q\206/<\321y==\375\353C\275m\036\276<\t^\260<\235n\031<\3675T\275x\247\314<\321\253v<\273\251,=\221\2720<~\362V=\224\363\217<\340B\027=o|I\275h\236!<\247\232\037\275R]\277<\027\013\010=L\354\031\275\345fK\275D\201;\275(w\367\274JT6=\350\300\021;\240U =\261\202\\=p\317x\274\306\200.=\350\022\001<\232\025\t\275\231\375\222\274\210\246\312\274\373\2057\275}\222A<\266\260\253\274i\341\324<\\3:=\260\212\'\275!\337I=|\321\354<\323\250\306\274\206bu\273eN\006=\373\230&\2754l[<\363\342\336\274\343PU=\177\001*\275\235[5\275@D\217\274e\321\024=\275\220\n=\360\0169<\371\205\022=\260H\370\274\027\032\025\275\004\030\016=\0275K\275Xj\343:\254\3445<\250,\364\274Iy9=ao+\274\233w\304<\331V*\275}b:\275\305^==\377\312\034\275\207Nl<+\014/<\2761\363\274\373\3628=]\2221<K<(;\344\261\305\274\256X =9\017\023\275\030\245\241\274\177a\006\275\355S\212\273?S\017\274\020<\216\274(\303\266<\235d9=\003\004\261\274\356 !=J\353s;\335A\014\275\241<\254\274\022\251\034\275\017T\004\275 NP;1F\346<\330Mv<B\177[=vz\355\274G\204\030\274\303\033\031\274)kY\275\353}\037\275\265\350\004\274t\225\276\274,+L\275#\2525<\'\351I=z\014\245\272\021\351\376\274\032\336\316<q\211\307<\025\352?=\324\350K;{\370\277\274\267b/=\265\272\r\275l\357\036=\343\001+=\253bT\275\027\326l\273\353\305+=D\002R=\350\320\341<\341y\021=@\312)\275Fe\354\273a\215\'\275oP\304\274o\352\374<\311\211Y=mx:\275\004\027\3419\005\356\023=\316\352P=\003E+\275\2453\002\275\233\301\364\273u\002\253\274|T\344<\225K\013\275\245\2364=\265\242F\275\023\365\267\2739\311\263\274\t\2273=\231j\230<\214%\255\274\\\354A=\255\340\003\275/\372\273<\330\026\267<\302\364H=\315\314\341\274n\007\253\274\327k\r=<\314\212<k\340\r=\337\232\342<\272\024\231\274\340\215\036:)\306E=\316\316\265\271\026p@\275\307\301&=\003\244D=\260\325%\275`5S\275\3370\005=\344%Z=\3415F=\2439\354<xY0=\251\231)=\304z\331\274[_6;P\014\262<%\233\000\275&\236\366\274q;w\274\223h\000;\325\250\\=4[\310<\003\2549=M\365\000<\376\223]=\315\253\216<\252\340\226\274\316|\301<\n\260\263:36\302<\237\316&=\030\232/\272[\3608\275h3Z\274\331.\177<\363\217\017\275V\206\021\275\330\273\225\274\023\251%\275k\200.;\364\262\300<\022i\223\274Q\0304\274Z\230Y\275\002\204\323<\246O\256\272t\200\004\275\326\201\016\275/I\304<\236\211E\274\013\301P=\364\276\315\274\262\205O\274j\0062<\306_\010=3\337\023\275#\\\234<\223\262\"=\000\t\030=\224b%=\2623\374<\317i\254<\030\274\n<~T\322<\201\356\030=+M\372<\000\244A=0Cr<P\033\\=\023S\236<s\026\242<}\340\336\274/#V=\017\200\373;\326H\343<\373$M<\315\215\316\274bP\266\273\225\026\373\274bh*\274\023\246K\275\370\356\344\274\327\310\252\274\347\313\246<\302`\'=J]\302<T\216\032\275\314\220Q=\346\255\211\274\344l\302\273~\004\202\2739\2126=\336\223\005\275J\215\256\273\274\325\342\273\305PM\275\360\214#=\013\213\210<d\034\002=\313\256B<eq(=\266\345\276\273\271=F\273\025\322/\275\301f\n=\260\245>;\242\t\27799\364M<\241dD\274\374(\302\274\233\335\344<\351\010\254<`\017^\275\274wE<\372\260\200\274\303\003[=\2318%=\324q\310<\236\3008=\005e\';\303eM=\033\241\020<h\354i<6\257\014<_\357\230\274\225\257H\275\032H\255<\307v\245<\326\033\\<\354\337&<\266\2003<\262\242R\275\0022@\275u\320\3629\245\335\247<d\302\255<\026|Z\275\250]\312\274\312G\327\274\325,\000<\001\362\266:\007\236\327\274U\316\265\274\203\305 \275\313\310D\274\352\364{:+\234\252<\260\252L=x,f<\"?\366\274g?\025\275XT\354<\376\306\220;xw\235<f\336\203\273\rN\346;F.]<Iw\222<a3C=T\212\206<o\313\245\274\206\327\024\2755).;\307\273\372<|\002t<\352aT\274\031\231I\274\227%g<T2\230<\301\0025\275\367wU<B\020\002;Kn\'\275\237\247\356;\023\232\000\274\314^\341<\311\231(\274\227!\364<\206\236E=l-\022\275\003%\241<dh\354\274\033oR<\251[!\271T\211 \273S9\202<\264\r\322<\335p;=\351\207\306:\250|\025\275O\314 =B\323\2319^\217\005\275\301\3262\2756q\\\275\354\204\266<d}O=>\351\024\275k\213\306:\n\036\276<\026\225A\275\273\322\205\274o~;=Wz/=\235\276\005\275\376\357\231\274.q\n\2758\267\377\273\364\254\307;/\2603\275n<\034=W\2432\275\240\256\033=-\350-\2755\213\020\275\351lE\275iH_;\3138.\275OH\034=\003\3205<\250\346\326<O~\356\274\005\205O\275\354i\244<y\020\221<\344#@\274\002\211\257;\325\373%\275>x\3119\\\354,=_Fu\274-L\235\273\277\201E\275\243\270)\274\003\305\275;\354\275\205<\327\002\022\274\220b\244<\233}\267\274\246\345\014\275{\323\241\274^\212T\274\311*\306;T.J\275\276O>=[w\210\274\267\354\335<k\216\262<\266\371V\275\202\2511<\007&\n=\346h\314\273e]\344;f\322\240<Kk\007=_N\371<W\033\360\274\227=\026\275(F\222<\005Q\001=\302\335H\275\313\026H\275\031\311U=\371y\216<\221\302^=\256\020\340:\256\276W\275l ^<\342\035\003<d}E\273\3368\264\274\314e9\275oPD\275\224t1\274@\000\320:oL\224\274\207u\367<\243X\241<\301\343\006\275\022n\037\274\203\027J<\006\370|\274\2455V\275\377\257%=\217\036\300<\007<\030=J\206(\273\372m;=\347\020P\275\307k\037\275\357x\237\273B\217\\=\3475\225<h\212\366\273\r\236\214<V\020-\275\322\252O=P\370\260\274\275/ =\363\242\222\274\010x\006\273R\'\336<{+\030=\217W\017=\"\327\004<2\303\312<{\205\026\274\357\354\237\274\'\254\224\274E\207D\275\215\220^\275\344\2714\275\223l\024=J\376Y\275\321B\251<\247\214\222<4\251\334\273#\034\016;\233\333w:t\3336\275\\@\377<\200\371\353<\035D\031=\336\177\000=\312\t9<G\032\306;\256\204\004=\032\257l<\200\347L<O\315\346<L\271G=1D\334<\246\247\\=v\365M=\255+\217<W\361-=\354\013\276\273\244vP\275\\NE\275\331\360\304\274\037%\003=H\212\312<;\014\244<D\204\200\274;\345\202<\233?O\274,l0=\000<N<\311!\224\274\275\323\031;S\374~;\364M\311\272\031\355:<\353};=M`5\275hS\235\274\241 \003=\236\230\025=v\030\312\273\207\233m\274\241\3703<\017\t\n\2756@4\274LI7\275\306\205\276\273\321w\247<\302t\265<\336C\023=HJ\204\272\377\r-=\232\n\234:\321~\025\275}\023\360<\350\013/\274&\0204\274\215\311\200\274&tX\275K8L\275\037\014\036</\222\277\274f{$=\326\256\037\275\023\202\353\273\206\3323=\236t;\275\264\344\033\275\343\033C=\255N\017\275a=\263\2741\266\277\273~}\205;\2407\026\2757\2574=\\O\'\2757\222\251;~\257\237\273|\267$=uZP\275\240\264\004\275\003~.\275\341\034Y=61\322;L\362\025=[\377\374\2748\2102\275\253`\207;#\213{<\374\342<=`\200x\273\230\346\247<+@1=\302\255\333\274Y7\027\2746\2533=ok.\274\346\227H=\020\234;\275\346L\251\274\371\016\034\2754\362w<\032\354\354\273\363\214\022\275\331\332\211<\256\264\307\274\367\210\365<\247\312\367<\3422?<\332w\017\275rgA=\260\314B=d\3630\274\030X\031\274\263@\003\275@\222@<\326\210\340\274#\275V\275\367\327\224\272a4T\275\245\224\025=\034\353?\274\317\342K=,\370\'=CY\310;\"=\026=\021\033/\275@\006x<g\t\266\274\200\217\310<\202\277.\274\263d\371\274Th`\274k\226\364:3>2=[6Z\274\214w\353\273\356\336\330\274o\210H=OD\024=\301\035\351:\375\035K<\267\211]\275\235\243 \275j\3460=\232l[9>\304N=\221S3\275n\014\016=\306\022S=\374\371\243<v\017\237\274m\tD\275]\313\014<\200\376<\2758\205\234\274\020I\016\274\302\324^\274,*\352<\242\004\304\273\025\314\206;\323\002V<\233FJ=Y\034d<q\'@=\314\267\227\274\036\374\037\275\257\r\356\273j\001\203<L\344 <2/#=\002\205><\250\226\242<\021\003\201\274t\302\017\275\006\032\\\275l\3432\275\367\313T=\017D\266\274v$\246\274;\013\376\273\327\323X\275F5\244;\271\275\327\273\235\271\n\275\303\251V=\\\236\037<\235A\312<Q@\006\275\300\260E\274\270\264\336<\300\002.<\236*\r\275\335\312\357\274\034\021\374<\226\300T=\336O\212\273&\237(\275\260b\004\273_e\036<\037\301A=a\224\235\274\313\227$\275\346\342\277\273|\262:\274\251.\277; \364w\274\357d\300\274\213\034\031=\257\326\001;.\243L<!E\275\273\256\331\265<\323e?\275\272$m;\224Zc\274\0109\336\274/4\274<\026\030\224\274,\331E\275\342\267\'=\370\276>\275>\330\032=\2673?=\020pM=\331~\315<\352V\334;#\255(<wr-<f;\351\274\031\246T=\037\370\310\273\262\3750=)\246\027=E\215\214<\022\362\027\272\216\243\213\274IB+\275\214\313\\\274\177\373:\2757\300\353;\216\235S\275\234s\250<\370\367\033<\263.\3669\362\262?=\266:\217\274@\034\253\271\3607\032=J\311\334\273\267\354&\273\200\216\026\275\214\255\335\274\272\330\014=\225H\027\275\347\310\357\274\224\006\216<G\220-\275\205\024;=\205\001M\275\374i\026\275\202X<\275N\rx;\265U =.-0\275\"\2744=\230\317\"<7\2319=\330X}<\304\365\036=\357\314\035\274\204T\202\274\"#0\275\217\251x<\334\334Z\275!3p<\221\370\205\274\205F\242<\3327\354;\032%\250\273\202\251Z\274\374\033N\275-\201\037=\331~9=k\206\013=O\274\024=\000\2135\275\356S\003\275W\344\223<\230\020\263<\212[\307\274t\213\000\275I@c<\007I\203\274\374\224\016<\002\270H<\212\t\354<K\373\304<\342JL\275!\277G=ug\312\273\317\365\n=\364Z\247<E\3323\275\231\205\376\273\231\346\322<5i\t=\270\310\016=V\233M\275\037\234\311\274\242\253\026\275\274\226\352<\336\313\213<\001^\351\274\276\004U=~\356 =i^!\275\247R\364\274\241-\326\274X\265\375\2745\250\023\275\361\326\341\274\362\r\005=/tG=\377=\204\274\354\003\001\275\017]\340<\272g\014=\0203\017<\234\247\333;\205~\205\273)V\r\275\320\227D=\205\\&\274x\203M=!\301@\275\032y\215\274FN\002=\216\250\315\2744\304G=\204\346\020=\324\020\r\275\270AE=\303\037\006\275\247\305\010=\323\222\007=\036\277]=\244\024>=b\231\003\275\361VP\274n\257\251<\003\317)=\322r\024=\335\216\265\274\255\367\270\274RG}\271\226\331`<\027\344\247\273iN\n=\332\371[=J\207\217;\273\327j<\306\351M\275\224\225U=6\273L\2717T]\275#P\372\271\311\276u<3\270\276<\221\336R\275\034\332\037;\337N\207<\221\350\250\274\220;\234<Vd(=34\024=\006`\275</\0023=\2274J;0\277^\275Ff;\275\332\'Z<\303\247\030\275\333\243\005\275\270J\370<[\271#\275\326\207O;\353:\357\274_\231Y\275\264|@==\t\211\274\274\206I\275\355ys<\367\0274=\315WY\275=\367\343\274\255#\340\274\025\314\005\275w\000\346\274\r\247 =\323\3154\274\376Z\033<NBG=\303\3257\275Q\227\266<}\273h9d\231 \275e\277I\275l\245\343<\3663M\273\214V9=%\0357\275%\340\251<\336\335\031=\302\224\033:\277\366:\275\263\316\201\273k\365S<\n\007T\275G\201\000<\332\351\324\273\336\334\237:\234s\324\274\312\036H;\276\021\243<\202\346\347\274\t=\206<f[S\275\336\377b<\352\207y\273ZmF\274\370\312$=\373\324\335\273|\254y\274\025\262\\<}\362\343\274\230\242\225<<g\307\2742\307)\275]N\177\274i\202M\275\237\016\242<\003\302A<\304tN;\302l\034<o\267\357<\231\274I\274_\342\216:\323dK\275\030\365*=%\3013\275\215S\r=\001\004B=\036\3421\274D\030?=p\346\014\273\243\2136=\347\274\037\275A}6=\240\256J=C\267\n=\255b\352\274\377\310\267\273}\000\007\275i\265\240<\224\002\033\274\nkE\275\331\260 =\342]/<\371\362.<\232\2174\275\240E\"\275\370\016\344<v\nF=\250\370L=\347Q\033\275r\017^=p\306\216\274(\203==\312\177)\275xP\336\274\377*\342<\326\376f<[yS\275\255*X\275\221\222V=\235\327\023=\275[\032\273M\250\354\274c\355\020=<\335\266\273.]L\275\250\032\'\275\004\224V\274b-<=p\372\356\273\343\021\326\273\353\361\264<\364\226I=\006y\374\274\206\3040=\334Jf;\226w\377\274r\334\177<s\300\252\272N\276\334<&::=\220\020\247\274\250\2440\275\340ZJ\273\317\013\t\275\321Y\340\274\337\261\332;\204\345\027\274\007\377\354;)0\010\273p[\n\274\263\337A\275\226y\206\274\307N\235\273\367/\354<\263\320\t\275\224\223\313\273\335r\266<\320\313\241\273\365\303\376\273\312]\217\274\242\264)\275]\350\312<\241\206\257;N\323G=\010PW\275qu#\275\035\321\235;\342\350h\274+i\255;\354\007\024\2753lK=RbV\275\200\351L=\310)]\274\356\\8\274|\357\321<\372\266\014\273\220$O<dMO\2743e\362\274u+\n<&\372\002\275\034\330R\275aZ\216<L\237\017<w\2463\275\362V\226<CN\021\272v\375S=\3168?<\375\323,\274\304\006\327;;=.\275\016M%\275\222\344\214\274\315/W=\375\207\234<X\366?< {\237<>z\337\273\232\232!\275\271TI\274\030\347t<\213;1\275oW\306\272\221\275]=\250\321\343\274h\262\372<\371\035\356<Ff\024:l\030\273\274\360\355\017=\006\321g<*\325$=\360*\373\273Sfo\274\006\246\031\275ui==\003\2179\275\032.2\275\236U=\275yV(=\310/;=\035@\327\274\377\242&=%Q,=\352?\246\274ki\n=\025\205\303<;\357@\275\347c\364;\347\203\016\275\373\220-=\356\372S\275\tXI\275PS\205\273\225\205\266;L\302\247<\342\246\020=\335,3\275\020\036><\216\225\330<O\003\377;`?\245\274\362ZI\275\267K\346<\310\'\005=<\004Y\270%\007\360<s(\265:\037\221\337<\365\230/\275f`&\274\031?\260<\261kG\275\374)\t\274\330P3=k4\224<\236i\213\274ps\317\273\255\315\332<\234|\024\274\217,R=<\2374=\303t\227\274\267\\@<\311x\301\274\310}\013;u5\334<S>\260\274d\003^=\363u!\275\017\361$\275\204\256%\275\317LB=\336\233\016;\256=\177\274\305\331<<\347U\023\275\037P\002\275\323\206\200<\2311\035\275\276F\016\274\246\237\023=\236:U=N\252G\275BW8<RC;<\373\230\210<\244%+\275\231w.\2755\371B=\201\226\314<:C\240;\3726\315\274\240&\305<6\341T\275\313\340\n\275\035\324@<\271@\006\275\325\354;\275}$==Z3\365;?\326\356\274\014^L\275\322\356\352<\032\033K=,\205\355;\215\370\33587\334\312\273\323\326\001\275G8\373:\256p\\\274\366\\\245<\251Jo<cJ\355\273{\r\242\274\034\240\321;\371\373\n=yto<\351Bo\274]\364R=tN\207\273P\232\\=\t2=\2751\234\305\274\267\356\300\273[\365A=\311I\263\274\021\001\354\274\003\222A=.\010-\272U\220\256<\265\244\354\273\331\206\013\275\026\305\214\274\271\323Y\275\210q\007\274\356Y8<\030-Z=q\356(=[o:\275\320\032\327;\035\237\203\273c\036B<\332\337\021\275\210\301\360<\313\234\006;\353\255 \275ci\216;\017\023\217<\010J\016\27546\031=\031\250\200\2746wY\275Z^<=\311\017o\274v\261\017=\355\327\322<\217]p\274\000\324\031\275\370H\375\274;gY=\003\026Z=\205\351c;[YG\275\323\032\210\273S.)<\271\263\333\274 \245\357\274W }<C\343\304<W\265\322\273\270\rL\275\013\353\016=\263X\307\273k\007j\272\355o\035:\302\237R\275\223\367\030\275>U{\273\311\027\227<\222{\207;\241\221\210<qN@=\273^\211\274\'\270\365\273)tP\275\201b\361\273\236\002\370;*A\345\273\330;I=Z\003\257\274U4\356\274v\337]=\306S0=\007\276\027\275\213#$\275c\302\322\274\022~;\275^\177\002=\351\350+\275\316\247V<7\307R\275\267[\245\274\245\217\237<\236CZ\275\330BR=\365\321\244;\033g\355\274g\363a<\000u8=\227\255\323;V\016<=\355\010\020=F\230\313:\200\\\303:\251\335\037=\341\354\245\274\\5\260:\221\364J=\223\322M=\354> \2741\236\200\274cS\352<z\274N\275PR\007\274\035\\\345\274\222F%\275\276\302^\274\352I\210<\361\\W\275\335FL\275v\340{<N\271\024\275B\013C\275\317\253\024=\301\034\004=\266\n\377<fp\336\274\002\007\330<\277) =\037\033\023=\330\003.\274.\252\036\2755E\023:w(\343\274\257\315D\275\301[!=\3666J=!\214\353\274\320h9=\024\312\341\274\315\324}<z\tQ\275^\357Z=\326wA\274\242\256\324\274\"\246\010\275\306\014\226\274d\357\215\273FT\332\274)7\370\274S\353O<G\363\360\2742\013\001\275\306>\034<\304L\"=\227c`\274\264y\177\274\371\035N=\231\315*\275Q\325\'=\275HT=h\377\037\275\374|S\274\272\375\001=O\232\217<%l\241<\205\347L\272\236(\320<\177m\357\274\235\374w<\200\273\264<\230\315\257<\366\230,=\225\0134<^\006\005=Q\256\024=\303\276\017=\002)\314<\304\237\026=p\251\351\274\237\227\300<\225\227\223\274\3651\363\2740\240M=\271U\026=\365\376\017\274\337\214\014=)V\300<\247\231\233\274l\037V<\340\3367=\'(\274<\2638\266\274x\3756\275\203Xh\274V^\271<\216\266\247<\024\211\356\274O+\010=\266D\245<\'\307\226\274r_\031\275\304\374\236<&<&\274\330XM\275d\037\325<Mf\370<\020\244<=\27480\275I\226\020\275\370;F\275\202u\320;f\3035\274\366\245\330<\360\027\362\274k\377\302;\246\255[\275J9\311<.Q\016\274\331\371/\275\374q\350\274{\324\244<ho?=vY\024\275\201\204G=\232\374 \273\257k\263\274-\027A=\307\023\275<\204\353K=y\351e\274\226\311\n=\310\237\\\275\354\3145<=O\326<\372\323\256\274@<\333\274O\323S=\246~\235<\3671\373<\234C\354\274y\323K\275 \304J=\312\333)=\343\021\036=\354\202\273<\"\\\031<9\016c:\244(\327\274\373\240\024\275\227\220\032\274`\312C=\350\354\275<\032K\037=\342\242$=\272E)\273\225D\032\275\262d6\275\202\030\307\273\307\221\211;\004\261\223<t\240Q=\362$\317;\261\242>\275\010\302\320\272s\n\352\274\2570S\274\022\263\366\274\261\245\262<d\357\376\2747\374[\2750,9<OM\324\274\177V\001\275\035QI\275Xs\217\274\234P%\275\224\200\350\274\252\214=\275UnM\273\275eg:\270\202\342<\374lM\274\244\273\307\274!\356I=\317h\241;&\"\"\274(\036\326<\361\3527\275\316\373\204\274s6l\274Q\201\034\275X\314\367;7h\023=\337eG\275\023_U\274\251&\237\274}#\031\275\340}\\=6\275\356\273\016\267c\273.\323B\274$!A=\301W\377\274k\033>=\234t)\275\024\264,\275\207\242\252\273\245\356\265\274\374\334\213\274;H\'\275\007\360#\274\255\353\307<mT\n=c\233\305\274\263X\266<\027);\274\337\222\275\274\315-\035<F\325\005=\305\273\301<\305\341R\275\343T#=\213\233\001<y\341\306\274\255?\217\274U\223Q=\251\3645=\030\255.=\241\2564=N\203\340\274 \0318<~#\177\274\265\032;=\341C\331<\220G7=\365\224V=n\210\017=\273\237\264<\024\200y<#\314\"=\354D#=\257kp\274\035\220\346\274\206=\257;]\305\273\274\024X\t\275\032\353\202<\026e\027\275F\221\354\274\311$L=\220]\217\274\246}@=G\016\357\273\034q\332\274\240+X\275I\004d<\312}\035=%\225\355<\203]J\275\216\223)=N\250\266<,*$\275!\363E\275\005q5=\035=\226<v8t\274\201\206;\275\036\305J\275\242\264\314\273^\302\330\274\223\022\205\274k\310%=?\352\'\275\037\036\007\274%\241)=\344[\331\274\035\360@\275\351\373O\274\345\330\037\275\317\311\216<$\006\365<\312Q\316<\313\363\236<\215\343\025=c\257\311;\3325\223;\005\237.\274\311\357\267<|\243U=n\272\266\274w\303\271\274\037\013&=\026\002\241\274\242%\306\274\235z0\273\3564B=\275\221*=\360c\033\275N\351J\275i>7\2758Z\267<&F\021=\214F]\273kG\236\274}i\005=\271\206+\275=\006\032;\263\356\035<c\3615\275\206\213\'<\357\363J\275\262\300D=\004\377+\275\315\314\227\273\036\1772\275\331\270F\275<\2265=\243\302S=\215e\363<$yR=^+\330\274\2022\263\274\213t\354\274\212\334?\275\326\0372\275\253\023\035\275\340\034\353<\232\2162<\002\332 =\367%\002=\244\272-=\233\216\361<\201Yr\274\306Y\t=!\0218\275\346,\245\274j}+<\034%\037\274*\207B\275\003\025\245<\007\r\242<\275T\201\274P \013\274N\022/\275\312\033\361<A\356\372:\330&\357\274\350<f\274H\240\022\275\025[[\275\202-E\275\\\022\320\274\236`H\274\206\306\312<\010/%<\373\316[\275\226@\224<G\310\r=(\316:\275\000\242U\275\220)&=7\233\024=\014\356\007\273\375_$<G\034\245\274\013M\301<\024\323{<\307\227\222\274\366\273\032\275\273I\314<\0008%=\010\002\202\274\265S\206\274U\010P\275\310r\345\274\256i\2549\251%\224\274\002\212\027\275\'\234\346<\233}K=\336\245\305\271R\030\007\275\316B\267:n?\242\274E\257a\274\240\013P\275\312Wm<T\375_<\004\372#\274\320\314\006<\016\273\312<\362\365Q<\037\327[\275/\321Y\275\2113\362<\322\251\031=O\245Z\275\251r\033\274\363\276\023=\275^\024\274\357\024T\275LKT<\317\034c\274$\354\020\275\023\233\341\274%\2204\2751\005D<\307W\363<\313\360^<L\210L\275BC\271\274WK\237\274}\304\355<\357\253\332:\205\232C\272f\344-\274?\340A<\344\230P=\3039\234\273_\017\213\274g\271N=\226\223?=\277\3516\275\022\031\212<\"\315\330\274\347\025\364\274\326q:\275\000\222\213:\203S\351<\311\373\203;\340$\235<\025W\336\274\314\237\031\275\205\265\274<\246}\010\274;Y^\274M~\346\274\032\340\023\275\276\'\022\275\010\r\247<\035\266/<\345\003\005<A\355\003=\"\273\305\274\265\313\201<)\007\370\274/5P\275X\030S=\326\306+\273\375G\'=\374\301G=G\325%=\343\303\007\275\220\007\377;\252\272\316<\303\273\001<5H\241\274y\003\037\275\266\270\336\274\337\230\276<w\\\225<O\0333\273\205G\342\273\350m\363;\215\034\031=!0X=TC\033=\357\"X=\301\335#\275\231=\033\275\024i\343<\366\261\276\274l\271T\273_\214\215<\207\371M=G\037\300<\265\367e\274\024D%=\301-\224<\r\0017\274\226\\8<\365MS\275\003\022=\275h:o\274\031HO\273\\(k;\357\337X=\000\031\370\274\355\365Q\275\352\321\320\274\323\"5\2748\237\333<5^\321\274\362\277!\274JO\222\274Az\334\274M3\231<\355\014N\275\022\364\033\275\010\233\346\274\030\2400\275cKX<pV\357\274\365\025\256<\206+\002\275\'\272\273;\020\236\021\274q\261(\275\316\003Q\275\242<G=\200\244:\275&\311Z=\322z=\272\025b\022<\334\213Q=\356\225\332<\324\347E\275\007\333#=j\221\231\274\202\306\014=\364\330\000\275\251\242*=q^I\274\362\263\363;.\376\356;\371\363\275;\307SF=g\376-<\335\346G\274g\276\034\275cx\016<\311\306\323<\217\327\025=\333\341@\275\351\026\003\275Jt[=<\316\004\275]?\'=A\0235\274\035\356\212<i\013\027=\304*(=\346\306\356\274|\377~;\275\377\305\274 \327P<\267C\241<\0368\276\274\212\373N\275\024V\r\275\264\213R\275\236X\256\274S\274!\275\203\0228<Eg\272\274\007t\360<d\214\r=+\246\003=\265Z\'=\000\353\231;\347-r<@\264\016\275\353-\257\273\004\245R=\036\331Z\275\0251\311\274=\276\034=\023$\237\274 \264\013=\277\2726=\230\246\277\274EA\305;\017\027<\275C\017\024=\243\013\2409\267\303\346\274F\360C\275\311::\275\007\344\004=\236\323\314\274\302\362X\275]\351+\275q\247\244\274\013\325,\275\213\021\301;u\373/=\231\321.<\266\345\313\274\366\276\265<\214\'\226\274.|\023\274c8\262\274\0008\373\274\354c\347<%\220\033\275\246\215\271\274\315%+\275\324\235\026\274\315\"\344\272\340D\372\274\t*\t\275\\\3215;\254\217\251<\264\327g<iU\371\273u\270N=\005\036O\275\222\232\024\275\344N\330:\241w$\275\3272S=D>\037=\356\3023=o/\360;\255\277Y\274\225\t\257\274\200\206\317\274\'7\r=Dw0=\251\246\307<\260\304\000\275\200V\307<\202\242\247<\r(4=?X5=\246\321\235<\355\243\301\274\320\255\303<\353T\221\274\002\232\233<\340\304\030\274\')P\275\r5n\274/\330\370<\376\214\347\274\332-\331<e8,=\224\343e\274\265\3418\275\237\365\247\274\347\263N=0\333\001<\36034\274\245\206\327<#\240\300<\273\310!\275\217\333\020=M\034\271<w\335\035\273\362\3072\275\345\3159\275\263{\272<|m\024\275q\362\244<u\313J\273\004 \r=tC\312\274ph\353<\234*\003\274\270\352\336\274\272\250\"=\035*r\274\r:\035=\251j\000=Iw$=\213S1=-eC=yD\300:\263#\2069\025\311\236\274]f\202\274\256EC\275p\216-\275\261\021\010\274^\007\010\274\260X9<\316I\226<+\226\261<\010\354$=3\\\025=\327\236\016;\263RT=\275\367j\274{\r\037\275\204H\037=\2029\301\274I\031\202\274\261\204\n=\331\322\035\275GA\014=\364(\014\274\032\331=\275[\240\244<\362@7\273\332~\035=\267\343\265<\316\000\032\275\277_6=\240[D\275\020\314\033\275^\033C\275\275\355\225\274\r\255M=L\3642<+\354:\275\311#F\273^\022,\275\261\226\357\274&}J\275\'\320A\275RCU\275\262\223H\275\204G{<\246\244;\275\226-A=\360\341\355\274\031\361\226</q):\005\265\317<i\205+\273\345J\206<z\257\230\274/?\236\274\004\370\300\273\031\261?=\336\025\031;\325z\351<\001N\335<\305c><S\252\260<5\'<=\206\t\"=\304\376%\275\246\300\213\272\312\344L\275\260\221[=\266m\371<ux\365;6#\246<^Q7==\223\007\275\266b\350\273\240\025\216<S\307\367;\231\022.\273\236\276\200<\221.D=\207\rY=^\245\r\275\340w\371;5~\340<\322\2021\275\265!\215\274\203g\321\274\030\233,=j\225\005\275\360\363\370<\200\202\260;E\010\226<*\351Z<\376Z-\275\034;4\275\311Y\230<I_\273\274\237C[\275~\234\014=\350p\021=\313H\275\2748Q\321\274\026\033\035=\r\226L\274\032\027q\274rk+=O\244\365<\331o`\274\237\210\347<F\363$<\303%8=\257\266\361\274\270~\033\274\007R\027\274\311FR;\017\037\331\274)/\023=\036cF\273L\004K\275\322\215\033\275\255\302\035\275\363k\021\274@(%=\224^L\275rcY\275\313\'0;\272\243\\\275\265\202\007=(lF\275E\2672\275\352\342=\275\265U\314<1F%;!b\215\273\276\270h;\362\031,<\177uG=;\255\030\275m\326?\275\352\237\323<\241\270Z=\322t7=9\245\\\274\264\207@\275\014\346\204\274\026\211\312;\027\357\273<*\017\'=\2722\022\274g\3036;{\001p\274\315\032\301\274#\337!=\357\262V=#\274\237\2747\035F\275\260\377\005=:\331I=\003\215?\273%\212\034<\344i\377;\036}%=j\245O\274\333\325\366\274\3431E=Y\270Q\2748\244\032=\277\304\341<<\346\323\274w\342`:o\343\270\274\037\232Y<\355\225^\274\272[n\274\326\013\346<\"7\365\274DsP\274\253\250\252<sG0<B\302\367<k\276\260\273\014d~\274^\363\021<\250@\331\274\244\222\327;\325\2174=\363\305I:\307\224\337\273\001\317\307\274\321\2747\275\277\301\025=\375\263B\274\253{\374<pdC<tI\007;\346\315]\275\357\332/<@\227\302\2741s\356\274\374\354\267<g\306I=\320\234(\275+\222D=|\371\305<\3718=\275\353\334\230<\311\227\325\272\376\371|\274\303\311\277\274w\031-;\034\374\230<\352/\233\274\245h\014\274\220\206\001\275>nU=O!\030\275\257\266R< \022\025\275n\230y<\"o\327\274\336\206!\275\205\344\311\273\035\330\235\274J\203\'\275\213\367\026\275*K\270;\253{\365\274\323\265R\275p\022\261\274\220Y8=\352#R=\021\337\320<\322\003\236\272\014\272F<N\211V=^h)=\327\216:<c\200[<\316\262B\275\232\013\253<\261\313\024\274\207\321\031=\267\240\324<$%\003\275\346N\337<\206\271\324<\211A\376<p\034#\275\322\352\034\275=*%=\002\315p\274\336\345\036\275Q:8=\246=\341:\236\023\216\274\360\017X=\372\235\263\274 \240@=\016\230\020=2%B\275\023\257.=\324\\L\275\207Z\260:\233\'\353\274\322\376\004<kv\020=0\353Y<\225\377\032:\333\333G=m\2156\275m\030\241<\202\r\302<C+\001=\213\2723\275y[c<\252\225&=\365|\326\274\213\204^=\331RL=\276\034\216;\211\364\314<\274.\243<\001\241\017\275gx\357<F\022\264<J\300\177\274\177\262\315\274\013l|<\326L\233\274\245\273\376<\335A\267<+o<;\340\375\372\274\257\300(=\200\344\247\274\274h=\274\224\304\365\274\203\2256;\034\253#=\275\214o\274I\353\230<\232\356\\\275\250\244\203<\334M\377<\221Z\262\274YJ\006\273\031\352E\273\017\320#\2748\357\324<\033/ =\247\376\022\275G}_;\357\016\217<\003\357\016=l\252\242\274D\2311=\363\320\017=\325\365\242<\r\217P=\376\\\332\274|\355P\275\316\000~\274\265\227\001\275\240\336\022\274e\354\252<\332d\253\272U\363\177\274\270\304\006\275\333O\035\275\237: \275Z\003M\275\234YY\274\364\022/\275\351\222\026\275M\343\006\274\214\263\237\274\004\024;=\320<8\274T\227\266\272%\334\237<?\376\215<\023\275\035=Y\345\221<\004#]=\014\035\030=\\9]=EW\024=nm\016\275\000\302;\274\010\326\272\273\223\217\367\273\373\374\263<\351x9=y1B\275|\232\233\274\252\3706\275\227\244\237<\n:\214;\206\3374<Y\033\001\275\254QD=S\366\177<\035\3023\274{S\004=R\005\244<q\327\003\275\313`H=\371{\273<\3307b\2742.Z\275\327m\007<a\227:<\335\341\005=\013f\'=\007-\371<a\306=\275\362+/=~\026k\2740\332.=<\376\305<\362EP=\260\025\005\275rp\301\274\356A\022\275\006P:\274\013\212,\275\377\256\244;\330\310V\275\254\345P\274\33143\275\2128D\275L\t?\275\323\372X\275\221\210:=Z\310\031;\207S[\275\371`}\273\005\370\217:\270{\241<n\036\247<c\363\024\274\2506\307\274/&\240<\302|\036=\251\327\035=\236-\035\275^X(\275\332f\235\274\375\003.\275\260\032\264\274\315\222\216\273\202Z\320\273\315\004\034=Q\027\333\274\356\013$\275g,\010=\370\340\274<\334\361\210<!{\032=\274}C\275\355R\023=\216\206\257\273\3441W=\230\374\026\274\271,\275<-T\314\274`\251\351\274Q\003\004=\342\267(=X\375\t=W\270\327\271\253\337#\275\244g+\275\270\372\235<;\304\\=\304\354\204<\277\264R\275\254&\006=\224\271\036\275_\377\372<&L\n\275\007\313>\275H8^<\354\"\371;\244\030\270<\362t\316<\315\020\325<:\t\266;\312#\014\275d\277(\275\305V]<5\355R=\270(=\275\177x\345\274\2501$=\375\231\003=\221\244\023<\305\277\013=\344(E\275\227/\003=\306\360\013\275CC\371<\035\0060=7\300>\274\303\263\354:\001\270?\275\004C\313\273S\201\020\275YB\225<}\310\324<p\301T\274y\002%=\2463|\272`zH\274|\355)\275\342\211O\2750p-=\311\334B<N\203\031\274\231\261\222:1\3372\275\373t\r\275N\307\014\275\303\220(=\315\265\261<\032\301\033\275\022r\010=iPQ;\010\235\010=\366\210\361<\033-Y=c\211(\274-\366;<\t[J\275\366V\317\274-\221\273<\226\002\377\274\r\214\250\273O\266^\274!\207\207\273\373(\034=$\255\236\274\r1#<(\246\242\274\264#D\275\020zZ\275\002$\023\275+\034\332<_\263\002\274[\377\250<\261\371\376<\354\237\016\275\"IU\274\224\367F={\264\310<\276\220\206<\025\030D\275\036\301[=\204}!\275\333wU\274\364\322C<%\324\022=\253\037\225\274\022*\020\275\332E\267<\300\005\327\273\375\003X\275\327\327\t\273\240H\275<\207\267\037\275tF\002=\t&\365<\'\021L\275\341%5\274\311\374G\275\312Z\313<KK\034=f\001^<\377gR=\346S\235\274B:\373<\3035\025\275Kr\334\274\363gx<Wx\203\2741\237\326\274\327\266\017\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
          dim {
            size: 4
          }
        }
        tensor_content: "(]\027=SN\017=c\266}<\334+\225<?\216M\275\262\270A\275\204_\307\274\350\320\243\274r\252\010\275\300\032\007\275\026\301\033=^\263\030=\235(\210\274\330\334\325<\366#<\272~\231@\273Z\233$\275\261\275\206\274\037Y:=\"P\343<\301\3314\275>R{;\016J\273<\371\272\322;O)3\273\267\372L=\357\026\376<]\257\332<S\265O=<\336\211<k\266\345<\354\265\376\274n\2572\275n\367D\275\344\363\306\274T\225J=\\\3054\275\254\337\310<\331D\335\274\371\3309=c\212i\273\026\363\033=\253`\020=\347jF=b\376\300<l\035\205;R\344C;\"\364:\274.\237Z\275~F\n<\241\355m\274\211h\270<\020\316W\275l\300\207\274\255t\374\274\021i\003\275\217\344\224\273\013\372[\275\266\354G\274\004,x\274h\377\362\2672\217\313\274\324`\311<\357\026\315\274\000\355e;\356\313\032<lG1<\345n\341<H\317\'=VhF=\246\236\010;\272\340X\275g\324\037\2755J\002=?\266\254<\232\376;\275w\346\335<|5\032\275\264\334\334<g\001[=n\263\233<\234\276;\274a\265\265<\024\272\004=D\227\351\272o\206@\274ZO\213<\321\"5\274\rP\335\274\320_\232<Q\250\360:\320\231\013\275\221[\017=\253\243\212\273\331\211?\2745\342}\2745\3617=\200\312\257<\257N4\275\235\3337\2748^\242<\n>\007=\363\256^=\001\223\231\273\323\206\240\274\026\307G=Q\335\021\275\237\203\260\274w\335?\275\210\342\335;\355\363O=VB\005\274N]\017\275\332\351X<\006\311\214;\014(\237<N\260D<\t\013\266<\255\340~\274\300\344\343<\337\377!=\301\363\223\273\010\2353\275\331\357G=~\027?=p\025F=q\346\'\273)\026==\230\033\031\2752O*\274\r\003\300<L\340\006\275\177\023 \274\347\300\r\275\237\376\246<}3q\274\317\372\233\274\266\310\027=\000\234N=W\372\237\274\262CM\273\344\002\327\274\260\024\313<\260#\'\274\205y\310\274\365\357\375\273\023\006}<[V[\275\303\251\037\275\374I>=\347\230\307<nA\032\275\036\344X=R=\"=\235\017V\275\300\201\301\274\231&\321<O\311U\274\034\366\007=\232P\005\275\037\340\324<\214^\244<\307\255\357\2747\345\214<T[\252<8\331\246\274\2036R\275\377i\"=@L\354;\t\207\261<_\000+\275\366\300)=[\232\231\274\020z\3579$\275\242\274Y\364\003=\212\3040\275:G\016=9\260B=\270\205\354<\243[Y\275\251\214\035<\331\250\027=\016t\014\274.\312\022\275\027&g;\234\232\004<h@\342\274\256`\217<\307 \331\273\351\035\223<\205\346i;\307\3638\275SH\017=\377|\263<\331\231\023\275L\201\r\273Z\321\n=\321\3464<_A>=h\\}\274\321\361\037\273.\030I<\010A\027=\252\371*\275\356\227\217\273T\210s\274\326\221\0028CO>=C\371\231:\254K\234<G\274\245<d\242\217\273\252\323>\275\277\361\021\275\354\224\034\275\217\242\225\274\223\326.=\215_\031\274\217\030(=\210^\306\2744\247\247<\212\272/\274m\302\204\273\212\263\334\273@\336F\272\2634\251\274\3679?=\260 \264<u\033\270<LF\274<\262\206\232<\325X\202\274cx\021;\254\\\r=\233\2754\275\333CH\274\212d\030\275J\312f;\021m\232<\371\350\246\273\262\2528=\271G\203\274\334\273\002\273;\240\354;\000\303\206<\\(\361<\200\034\037\275=.\r\275\342\351\032\275u5\261\274a{M=!\001\006=0\353)\274\245}\205:\"\242\335<\233B\226<\020\205\216\274\235\361\035=\206\332\205<\233q!\274H\016W=\220\326X\275\373|\300<\004\211A\275\020\246\270\274\25634\275\021\023\232\274\n\210\3409\327\363\025\274e-\231<t\260\217\274\007B@\275\357\250\253\274\356\020L=\333\363\220<\n\"\001\275p/C=i\225T\272\366\251X=?4\320<\276\266\000;\271\326\360\272rTx<\365]\340;\244\316\000:\360{\000\275\261\274\327<jY\316\274\226\033)\274\345\037\365<\036X\257<H\023\260\274\310\211>\275\360\024&=>\331\310\274\344\241\026<\376\261\363\273{\202=\275\253>\006\274\244B)\274\222o\003\275\357*\247<\005\002\263\274#\244\257\274\013D<\275\016\035F\275WT\376\274\270\344\325;\320|\017<\364s\240<`\344Z=\321\020\336;b\362\215<-\013\331\274\237\212#=\342@\020;\241A\000\274Dn\"=~\350*=\020\341\024\275\263\276\024\275X\375f\273\265\201o\273\314\275C\275&B\230:\206k\032=\371\257T\275%\'G=8\364<=N\227\002\274)|Q=8P\013=\377\370\032\275}\031Y=\314\014~;\2505\\<\372\307W\274^\246\017<\031o\246\274H\372\033<}\230a<*\266\230\274\0163\251<\204\223\322\273\206\241\016=\177\243\356<\264\205\034=?B\016=.\017.\274\326H\371\274{\261)\275c\027?=\034\364 <\233\375\362<]g\357\273\007\2727<\371\241\263\274\332\006\3169n\364^=\304\242:<\274\211T\274k#\206\2741+u\274\250\264:\274\272OA\275\\\332\026\275\034\021\003\2754\235\232<\232\024\245\2741\317}\274E#\016;\241\234\004\275\336F\340\274gz\310\273TRI\275x\032\266;6#C\275;\300Z=\341\226\016<\010I\014\275r\206\224\274\3367\252\274]Ng\2742\217P\275\364\373j<\244\035\314<\256\004\261\274\342\310\013\275\306\361\035=\023\"\251\272(\311-\275\302\257\034\274\253U\263<\316\210]:\216\0305=\356\200 <\344\346\007=\354\235(\273\270\313V\275\236\341P\275\364\241\024=uY\006\275\265r(=\304\276W\275\233\303\277\274\276\316\367\274\006\260\351\274\021p6\275\343,/\275}\203\305\274\273b\272\274\247.\027<`F&\275\200C\003=\267Y\014\274\361\303\260\274\215\033>;\364\310\020\275\020v\010\275\310\205\275<\201?\266<\360\231\216\274\242v\376<\312\220\037\274\315\304\2608&\037`<\303\370\207;l%\265<\255\010&<\362\247.\275\022PI=+dG=\236\266\\=\272,2<\247\001W<m\332\035=\002Z\000\274&\037\007=\225\237\320\271\252\351\025;1\247\221<\344\227/=\201\325&\274\335\017\362\274\235\357;<z|\341\274\305\276\277<\327\353\n=\221\231\\=\375\025\345\273a\\4\27591>\275rD\205;\252\002G\275\263m\021=\203dm\273\037\272\t<\364\024 =\222\2331\275\207\257\244<}\211\013=\361\357\310<\016\244\026<xlF\275\001u\337\274\032[\032\275\314U\017=t\'@=*\256m\274)\222@=\240\302s\273\211`$\275\363\231!=\362\272\202\273\324\3765=)\204\363<\352V\017<\202\264w\274nb==\337\273\000\273\r\310\241\273\230\260\323\274\343\343\263\273\261\262U\275\251L\025\275\256\244\023<\304\3615<\275h\260\274\353\036 \275\272i(=u\243\345<4\321\002=wn\032=q\274\247;\273}Z\275%A\014=\256c>\275\233\207-\275d\004B=\262\306\221\274\247p\270<L\020\240\2747\374\235<2\246V\275\325.==\374\276\'\275M\206\246\273\330\315\177\274&\317\255\274\363O\247<eP4=\201\033:=\325\206\007=\2734\317<\020\300\244<\303\254\032\274\030\023:<f\215\036=\214X\216<\037\036\016=\233X,<`%\016=\350p!\275\270A\037\275\"z\\\275p\0064=\247\303[\275}\324\n\275\207\274\034\275R\230\037\273W\376)=\3146\356<y\271V\275,d\017\275 \226,<JT\215\273\260,\307\274?\347\200<\253f\t\275\177s\362;d\036\3329\324\211\272:\"\272\013=L\005\224;\373\271 =\tb\t\275\332\373n:-\364-<\365U.=m\350f\272\300.C<}\247\332<\003\005F\275\177\r\217:\034\3658=6\250\361\273\002\357\327<\312\220@=\363\3650\274\355\231$\275\204\266\020\275\346I\226\274SS#\275V\311\271;=.9\273\002K\035\275?/\013=\271_\260;\340sX\274\177J\234\274q\025d\274\205\336\021=\361C\271;\203\276+\275\313\240\253<\016\023\303<3\026\257;\3404\n<^^T=\034\374=\275\037\367O<\023\341L=\317Z\027=v\313\031<AwI\275t\013\367;\216\344\n\275x\270\263;\270P/:V\305\335\273\225\371\251<\030l\365<\224\361\200<Rl~\272\235\243N\274\211\271\267\273H\310\247<\246j\214<W)#=]\227\000<\301\367\272\274;\026\216<_\024U\275\214\2012=\035C\007\275\355\331E\275\002\263\304<3\177A\275\232\3216\274\"G\026=\255\253A\275V\013b<2\306[\275T\221.=\257y\373\274\223\363\021=\013\2670=\324 A\275\014\326d\274\276\272#\275)zn;\222\220\351<\214\336:<t\265\002=W\374\371<\261,\033\275\211\001\256\274\207\031B<\370\311^\275\312\356!\275\307N/\275\275\343\024\275k\245*\275\243\241\001\274\226\017Y;\001\3210\275\030\220\017=\364\343;\275\325\272\001=\031\331\332<\333&D\274\371\344,\272\341\331\003\275U\026-\275O\272\302<.8\007\275I\313\n\2757{\210;\331\3548\274\'\260G;\315\034\312\274\014M\331:O\252\376<\177p(\275\217\353\345<\257\002\001\275:\347D<sn\326\274U\256\245;\221f\243;7\310\365\273\300w \272SQh<\017g\255\274\33157\275\336\205\3349]\351=\275\303\017Q=\266\361\001\275kS\206\274\020*\255\273!\371\300;/\022y<\377\037L\274\214\275\026\274\231\376O\275\326\201\256\274m\020\256<bX\357\274\221\346L=\217\006\340\274\363\376\"\275\203P\013=P\213U=\313\356\210\274\017-\304<s\2279<\230\024n;\372\221H=\206\031\202<\207\201\002=\t\305\3358\'T\352;t4\r\275\214\204\225;l\027\366\274\311\337]={6\371\274\332\024\031<\350R^=\244\333Z=\300Q4\275\003\364\027=~\024\323\272\240>\r\275\314\311\'=\017\256\254\274\2771!=\\.\260\274\234\301\030\275\003\200\007=\221\"\343\274\247\206L\275\023\016q\274\255\035A<\213\216\320<\344\266Z=&\250\377<5y\347;\220T\243:\322\007\'\274C&\002=\347\231l\274yQS\273\232\251X=P4^<k\022\337<\236\205-=\n!b:W\231Z==T\034=\024\356\333\274:\344\202<&\370\203\274F\363K\275\275\327\237<\350^\216<h7\206\274\245\323M=\231\366\263\274<\313\337\273=\220I\275\240\353?=\256x\217<$d1\275\236P\340\273q\203%\275\010g0\275\207\333\353<\371C\016\275\3624\010<wX\256\274\023U\032<@\274^=\"P\006\275\302\226\344\274\231c/=l\275\377<7\034m;\362\032<\275q\2024\275\272\376&\274\242\265\275;\200\035@=M\3328=\306\027@=d\316\026\275n\307\256<\270\262B\275\225S\231<\325\332\\=?\203W=\270\354\337;\276\326\266<\305\n\345\274K\346M\275\031_P<\004~4=s\245\034\274\241\3470\274(\'\033\275\224\211e\274\013\377L=\236\002.\275y \355\274^u\221\274h\264R=&\214\023=<\354\014\274OV\310<\240E\376\274=];\275\031\244&=\311\320\230\274\003\276\020=}{\210;\213\213I\275\035\226\333\274\274t\266\274<H\032\275\227gJ\275\320\206\223:\351\256\007\275a\370\252\274\tu\034=\200\270^\275\306\033\345;\000L\246\274\342F\005<;E.\2751x^=Z{A\275\361\275\247<\310\005X\2752|E\275\275\021\0339pa\330<\355c\354<n\021c< \031\034\275i\360\311<L\377\377<,\352\037\274]\364\300<6!\251;s,q\274\013\226\210<|\227E;\t[\213\274I\311>\275@\205\243:\372\322\332\274/s\'\275\202\366\252\274\2233z\274N_Z\274e;I=\327\3653\275\347;\035=\207y\023=\310\335;\275u\036\032\275\007X\273<N\022B;\332&\260;3\354,=\210\022F<\035\341[=23U=\337\273 \275\'\313&=\257\036\035;\217Su\274j\030\"\275\037\236\005=\030L,\275\242\211&\275/F\245\274\334\034\014:C\236\222<\031\346G=\253\031\002\275\233\253\231\274\252aF\275\216O\376<\255\0009=\257PP<(\031\364<\\y\374\2744\240x<nu\346;Hq\t\274!kx<P\037\303;\325\333\233\273\331*\002<\240\351\247\274%\n\311\274\300BC=\356\256\020=\"X?=\210\0175=R\024<<>|\304;4\330\310\274h\t\204\274\317\023\266\274\326\230\026=\342\302H\275f\325;=\352?]=\314\030\333\273\360\022\352\273]\005\305\274K\0130;\325\345\201\2740p\\\275\177\210\215<\244\245\215<\362\3230<\021\225\r\275\377\3000\275K\340#\275\270n1\275\213\2117\274\025\323\310<6\3661<>\025\026\274a$$\275\235>\210<\"\276\373\274\216\246:\275\025\245\230<y18=\030\010\026\275\330_{<\212\'\333<fG\2339\226r\224;\334@\027\275+\374\'=\"6j\274\326\027.=\215\227\326\273\356\340\217\274|\230\'=-\3208=\307o\005=d\014\026=\306\274\262\274_k;\275\317\2544=q:\034\275\376f\213\274\235X%\274\006\202\\=/\266 =\377P\326:\263\256\310\274\360\036\264<J\333\014\275\320\033\'=&P/=`\206.\275Ec\005\275@\347\315<]\246%=\250\030O\275\t{2;qGp\274\t\321\024=\222{\024=\200\377$=5}\007=T^\354<\030x\026\275\265\0242\275\371M \273\306\341i\274\005w\333\274\247\026\313\274\t\024K\275\327\276\023\275\312\304-\275U\272\202<;\302j;{p\021\275)\330\262\273\037\234O<3\334\000<\2774*=7\233\002=\331\243J=t\026\346\274\367\0044\274\002\236U\275\201\214><[EL\275&\203%\275joX\275N!7\275Op\250<\256\377D;\315{\322\274m\230\020=ar\371<\355#\023=\225g\345<{-\t\275\302\271\336\274\307i\224\274\376\2368=\341\000\352:.\333C<\003\020\265<\216\264\227<[\3426=\236\376\325<\3577V=g6\374\273\254\251\025\275^\200\310;x\273$\275\262%\314\273\352\244\\\274Y\264{;u\256E\275\001\270\371\274\t\300\315\274\n\317\242<\207G\262<\003g\201<\273\230\036=Ov\265<z\242\370\274\364\345H\275\217\333\202<\375\302\315<=C:\275YN1;s\260S\275\232\245s\274\320VH=+\305:=\323\036X\273\244]W\275\370a\343;\2232+\275\336\0003<\370\002P\274\343$6\274\002:\260\274\257i\020\275\202\360\014\273\230^1\274\365\316\265<\037r\201\274B\265L\275\363\227\273\274\377\2566\274\2321W=!\373\250;\222\331\265<\271\254\235\272*\340\317;\002\263L;\375\302\224;q&\"\2759\251Z=\210D\224\274I\020\360\274 e\371\274-\210\000=A\261\003\275y$O\275\315m\247\274r\026\356<\354\367G=\004M\232\274\376\300\345<$\313T=t\007\341\274\243\034\217<\264\233\345\274&G\377<\377)K=2\'<;H\323<\274V\263r<\3563\036\275\037u\213\274D4\317\274\302m~; \304\000\275\375\306E\275\354\240-=A\034\037\274>GQ=?F\022=\321\311\301<A\222\371<\357c\303\274\001\257T\274\3575@=Gq[=\330O\230<k]\001\272}\215.=\303k\241\273\\\235\203\274+-J=\332\222\323<\332\362\344\273\014\306\211<\025\214X=\331\340\365\274\323\025==\241\231\361\274c\202\024\275\322]\037=z)l\274\260w\232<\360\031\031\271yX\332\274 \377u<c\307\'\275\350\321\255<\013\\\214\2748\267\265<\2634\245\273\261\0257\275zi\367\273_\201&\273\353z\372\274z\241\251<$\325W=Lf[\275\354n\204\274\005a\017=\314(_\274\336aV=\020\205\222:\242\336O\275\374.\364:\034\211E=}5]=V\367\034\275\000E8\275\33569=\252[\024=Kl\345\274\213C6\275\255:\225\274\3152\"=\235\025H\275\023\'\261;\310\311\247\274\223\016&=I\025J\274k\263\\\274\223\332}<\355:\310<\306.\025=:\200*=D\214\330\273\331c\022=i\225\"=\364D6=\201k\007\274\266ej\271\212\016N\275.\262>=7*\024\275t\216\016=\321\353\014\275\267J\t<\316\216\007=\233\257}\274#\332M=\327\204\331<P\253\310<\326%\271<I\354\371\274\214\375$=\2315\000;\270Z\341<\337-j<\246B1\275\362q\320\274\355\035\r=\241a\364:\230\217\\\275\205\262$=\316p\352\274k\232\037\275\370S*=6{\263\272\005D\002=6\255\313\274\351j\265\273\2428\310\274fu\270\274\226 *\275a\261@;\024\210\377<x\034\331\274\013\263\202<U}G:\321#\036\275\010\307*\275\344\'\311;:\005\313\274\376\205M=\3768\017\275o~7\274\371\251?\275\021\327>\275\362\215L=\320.C\274\034\016\272;\301i:\275}.\014=\306\035Z=Bjr<\254\377\\\275\236e\032\273k\300\265\274b\026\247<\252l)=\250\201<=\273\306\343\273U\032\353:Y\253\003\272X\317=\275\357\022\230;<\275\n\275\246\251-\275\321\023:=\311eG\275&\'\313\273\273\215\230<\376X\240\274\312M\035=\345\246\262\274F\322\265\274\323\245J<\2600*=\326\271\037=\315qR=\016C\320\273_\321?<\027`E=\264$\n\275aY\317\274\360\326\014\274\033\025\031=\350\241\364<a\226\020\275\213\254\010\275\004\222i\274(\350\222\274\337\033\253<L\215\027\275\301\\\365\274\305zW\274\351\221\232\271wzE\275\310\036\376;\"9\335\274\216d\271<\354iX\275\235\316\201\273\302\215\262;#oU\271\022\226\365\274\342e\010\275\365\273\202;e\346\263\273\034F\263\274\304\322\313\273\255\314\022\275\252\266\322\274\350\003\314\274 \033\310\274\206\326X=\376\232\220<h\264\000=\262D0\275\220\306\276\274j\204M\275\316:\227<*c\245\274\206l\310<\006\222\265\274\036Uk< \317\002;\276\016\231\274V\203\226\274\251.\024\274F(#\275\034 3=TI\302<\250\335V\275lv\027=\206s?=h\020\306<\017\332\367\274\267M\372\274\205OM\272k3\272<\366{W\275\231\276\017=[\313N=&\003\005=?\021V<~\032\006\275h\032N=\363\014\324\274e\027\236\274\373*}\274)\301n<\354OV=\307-D=\264\027Y\275\336\222+\275%\027I;;y\376\273r\334G=sbP\274b\315@\275I\006\\;\376:,\275\376!\354;\350\021\034=\257P:<\226;M=\010\013\373<\246\t2=\237\260!<\321\216\272;\366jH\274\355\267\372\272\224 \234\2741\237\322\273\013\3414=\010HD<\332\033\224\273B\302H=zH?\275!H\031\275P\251\356\274\300\224\366\274kI\311<c\261\310<\200y\215<o\246\244;\205\221\024\275>7\305\274v\321\001\275\375E\020\275\010R\014=D\013]=\303s\240\274a2k\266\363I\357\274B\324*=\326]\020<\032\242\013\275\272\275G=\324\240\017\275wH==\203\210\220\2742\264\270\273\226\247\345<f\221X=\024\241S\275w|9=\332\023\202<\346\356\225<\240\230\330\274\253\227Y\274\205\240\326<\251r\016=G\253\014=\237\315c;\353\277r<#\256h\274\320\301\373<\232\314\003\275V8z\271\026\217\356\274\276`8;(\340W\275\266\216\314<\335\214\327\274\232\022\374\274\035D\022\275\356\317\341;\207\232\341\274\352\254\\\275\'\232\014\275\034\035\232<\226l\376<\365\262\007<\242\374p;\364\0004\274\225\302\234\274\310\243\031\275\024\340\350<\254\233\342\273]\214M=J\017\366\274\233\036\330\274.\311\234\274X=P\275\340G\256\274=K\326;F\314\315\274s\026\247\273\342H\303<i\301X=\317-\277\274\211e\037\274\3076A<g.\003=7\331P\275\032X\207<f\370V=&vK=`\262R\275\036\225S=np\331<\330\221\203<\227\236)\275\200>]<_9Y=5V5\275WR =oJ\207\2741\220N<\037\003Y\275\301W\"\274\016\336\035\275\035\rf\273\352\204\264<!<M\275\027\205\320<\266\227\t=\2102\004\275\211\003J\274eR\230\274\305\017\343\274*\224\320<e\213\211<\315\317\361<\246]\t\275\017\r\364\274\361\345\001=X\247!\275\345\2618<\202B\326<\351\202c\274\232H\006\275O#\253\274\212\307\357\273\221t\244\274ly&=\266j\034=v\3020=\034\351\250:\223JQ\2750l\"\275\217\022\254\273\220\023N\275\267$\267;\230\002/\275\220\345\242\274\027\225\0139\220+@=|]U=t;1\274\224\220\307<\223\001\214<Y\t\017\275\222\002\002\275%\035X\275f\000P\274\033\237\341\2746u\324<\023\314D=\004\037\210\274e\026\212\274\374i-=|\240\301<\223j\\\275\002\2561\274\272\0245=\276\026P\275\241\335Q=\017\226\300;\256i\317<\257%\030=n\376\021\275n\356\361<\245\341\355\274r,5\275\3562\037\275\032\323o\273\274Y\305<6\221]=\2705\270\274\357\360\372<Uy:<v\257\035\274}\320\251;\321\212\006\275\350\326\016\274\033\315S=\314\247S=\020K\314\274\241\221F=\234[Y=\001\322\252;\302\323\013=\273\016\316\274*\225(\275E6\001\275\364\017%=\302\n\327\274\315v\031=\345\242?\275}tW=7ho\274\264\366/\275\334\353\372;\001/(=(\370\021\275\321\250\215<4T\376<\345\3232\274z\0067<\016\240\252\274\325U.;&sJ\274\231H\r<;C\370\271\310\352G\275E\336\324;\252\001\324\274Bs\235\272}\242`;q\215\023\274\004\260h\274\256\025\t=eF\372\274.I!\275\210\251]\275xj\307;\263\232L\275-\260~<,\273.=\371hS=L\306+=9H,< \223\004=\275\3255\274\205\336\343<\014?\334\273xM\357<\244\244\013;\206yD<\355\0000\273\333\267\033\275\014\n\225<S\274p<K~7\275\237l\237<\207XE=h\277\260\274)A\203;\002\243\363\274\332\000\033=\207~2\275IP\212<\2438<;\304\322m\274\321]=\275\256\375\022\275\'W\372\274;\266\340<\202\235U=\016\227$\275=\002\r\275\373c\010\275\311k(;\373|\355<\331\236\225<\014\342\326<\240K-\275\224\341\026\275\225\216\017<D\223I\275\237v\361<pX\262\274\326\000D\275!\t\333\274\",#=5<\021<\001\007\301<\032\323\020=\276\014\215\274r\332N\274\351\026\334\274\251\263W\275\323\325-\275\262\2440\275\325\036\331\274\221\302\357\274\352\365\274\274\0008\304<f\222\301\274\310\272?<3\'2\2753\027\301:\003AY=\017\366\331\274\312\336\036=\310\273?<\257\345\342\273%\001*=/\331\332\274\000\225\022=`WA\275\220[\014=\024\364\027\274\372\2054=,\2710=2\345\344\273\374\221\235<\033\3747\275\232\323E\274$\266E;\333,D=$iv\274KWH=y\222\233\273\337Y(\275=_\227<\020\252\360<c\267\016\274\314t;<\322\327G=\375\301\266\273\022\334\261\274\027\021\364\274!~,\275\363\316=<\227\035S\275\244\244\356<}\363\357\273\272fy\274\200\027\\\273\344\214B\275C\360\021=\334\000C;\306\244F\275y\340\356;\007\010\320<\350\2731=u[\333<\326U\020\275 \211\254\274u(\321\274#\261\221\274\350\201p\274\264\222\'=\370K\226\274.~\035=\374e\021=v\224\021\275\333\227\235\272\231\377W=\202\250\244<8\307;=u\016Z=1\262\373<0\224J\274\017\352\016\275\036\021\232<\337\235e;\255\020\025\275L\022\335<#.\217<;.\r\275bT\340\274\310\327S\274\021\n\034=\310\232\320\274l\210e\274\255`\220;\223\371[=SUK\275T\365*\274\312\264\305;\216\336\330\274^\242S= \241\247<m\224\020\275{\007\347\274O|W=\255@H=\251\271\035\275\265\r\227\274\365\202T\275\246N\204\274\220\nD\275\376\240\366\274v\304\270:\253+\034\275\006\002\347;\354l%\275\036\260\355<\225\271\027=\357l[\275,S\261\272\336l\357<\3338Q<\321C3\273\304\372\000\274\3551\014=\206\006\300\274\3057\t\275\013 \316<\315b\025;\177\364M\275\335\020&\275\215\236\226<\236\025\016<\374CN\274_,\022\275\'/,=\241_\341<\031\360#\2755{\314\274\"U8\275\373\320;\2759\333:<P\017z\274\304\027>\274-\033J=Q\360F\273h\215q\274\330s\256\274\315\372\343;zUP=\t\237\353\274?\2277\273\007b\214<\201}\021=\363\246\320\272\343\353O\275\260.;\274\326Q_<P\365J\275\246\236I=R7_<~\353J=\na!=@\022 \275)a\345<\361{4\274\327\320z\272\336\177\345\274\314!\024\275\327\2045= !\326<F\256\004\275Q\007\273;\225w\276\274j\032\350;\337A\026\275\254\376\374<\004\021\235\273\273|\212<\'&C\275\315\312\275\273Z\242\340;\002\000R=\001\336\013=\334\0138=\217\377\317;\203\205\026\274\253\370\310<\234\226\r=\247EM\274hk<\275\222*\017\273{_\024\2727\026i<\nl7=\271\373@=\203\315\346<\361\013\037\275\332\266\322\272\230`Y\275@\246\027=\362\250\262\272\200H\240<\315&\200\274\351\212\004\275\332\253&;\210BF<\260\377\337<\227[i\273\t\006\250;\231o\037=\367\0351=\336\344\r\275\347\177\017=\215\014Q=\301\250\226;\304)H=\373\237\301\272\352\200\021\275\022\340\t\275\2558*=\301\314\232<C\005w<\212A\031=f\256O\275\247q\340<!W\030\275w\336\247<4`\314\274\346\007/=\247\244\261\274\251\r\240\273\032)\023\275`\274\370;\234\234\n\273\264|\n\275\341*\245\272\341\275\355\273\325\207J=)+\034<\230\371\204<.\275\353<s\366\340\274\007\033\335\274O\037&=\255\301\010=~\215\027\275a_C=pT4=C@\022\275ww\3709 >R\274\\\037\277<\016P\026<)\231\301\274\361\254\006=\222\210G=\356\376\336<Z\241#=v%\025<\017\203\036=\005\257\256<\316\244\032\275\332\246G<\330\250d\273:n\017<;4;=v=%\275\273\013D=azJ\275U\331H=S1\016=A[8\274\340\2728=8{\006<\rI\342<^f\023\275\250\245X\275\273\344\220<\201\327\264\273\361\267\014\273R\350\247\274~H\335\274|\252\210;\013\371\r=5\224X\274Q\2617\275\325\261\364<`\3468\275F\350A\275\2730\027\275e\037D<\236\323%<\344\016S=\220\272\013=\3778l\273\255\350\014\275zC\377<\023e\r\275\177\260C\275\350\014Q\275&\204\351<|\366\\<6.\276;t\231[\275\002gF\275\264\201\016;\003\307D\274\371\343\206\274\226\0140\275\211\201\265<B+\\\275K\260\226;C\342\010\275\257\3067\274xG\003\275Ii\010\2748\300\333<\252\025.\275-\216\340\274\246*\313\273\207*\360\272\300\367\032\275\317n\204<2\306\325\274\374 \323\274\337\240\247\273\211\273E\275\372\234\304<\373A\253\273\331&\n\275 \222\211\274\023\341\r\275\000\354-\274G\204\276\273\340\272\356\274\353\221Q=\003\226\257\274\352\276\352\273\323\204\352<f=\325<E\265\315<\ru\337<\353\267O:v\374`\274%Si<\253\302\272<\233\373\322;z\364\n=\267\005X=i\377\257<\250%\005=\374?\024\275\206\314\211\274\270q\200\274{\345Q=\016^\301\274\330O\274<\327\260\'<&A\022=O\317\276<>+\201\274t\370\003\275\2362\037\275\271\251\032=\354\327\365<\216\000!=\374\000\272\274s\220R\275\0279?\2757\200\031=\332W\033\275l\210+=\225{K=(R\006=\242\010\206\274\312\331J=\001\341#\274L.\356<\204\037\261:\2772\360\2742.\004=\034_!=\356\361J\275\3105H\274\267~\032<^\325\344;@\273\264<\014Y?<\303}D=\207|?\275\266\340\t\275\362\230\263\274\233\356\\\275\002\230H\275:\001J\275V<(=*\250 =\251\310\242<J\341\305\273\312\366\241\274\207\021\311\2746\376\326\273\006\370\027\275)\242\306;\177%P=/#\226;~\275(\275oB\257<\274\301Q\275q6e<T\265\030=\271*V=k\001\261\274V\343\355<\211\037R= T<<\214\222\177\273S\354\007=\025\200\036=\347\2044=\221\311Q=\302N\215<\221j\002\275\337-\225\274 \245\215;\377\300:<\010&}<\013\260\005=\247\'\324<\"\235\200\274\304\244\020\275\276\260\375\273xj\306\274\010\226\"\275\032e\024\274ra\224\274\335\207\335\274\337\251\333\274\343\306\005=;\301\030\275jc\231<\027\301\252\273\211\0032\275\361\027\276<Z\313\220\274\t*\220\274M\034P=\364\300\202\274L\033n\274\374\356\227<w\334\322\274J\376n<rQ(=\327&\251\274\220\266\242\273^\031\"\272!\210\247\273b\021#=:\257\027=\267\377!;l\340\323;\333j\032=3\370w\274\2365I\275\343\336\250\274\327\372\247\2741\324\202\272oT!\275\\\261(\275\313\231@=\3717\\\275\036jR;\345v=\275\000\323:\274\272\362W\275\206\370\267\274\240\214b\273\264\302\t=\244\217\204;f\354Q=\224<\027\275B\241\331\274M\336\215<\236\277\271\2731\357\005<\302\036[\275\372\301\371<eQ\302;C\215L\275^Er<\330~\252\274\363?*\275\335\035\266\274\230\014\276\274`\206\003=G\266=\274G\260\027\275;\227\344\273\255\327\257<\330\031\306\274cC\241\274b^4\275\000Q\033=\335VP\275\"\302\006\274\211\226%\275\361\342N\274\210\304L\275\024\266J\275\027D\243\274z\244Z=\322\033>\275\273\303Y\2750\334/\275\300j_<\247u\264<\227\263\016\275\'\007\220;\236\2378\274\033\353\260\274|\250{<w\2746\275A\356W<\312k-=+M\311\274J\237\002=\267\004\020=\'\363v<\226\365I=\3164,\275\277-\024\275\031\177\370<\374)\357;\025\007\240:\3118V:\2167\347\274\022\206\253;\304\203B\273;a8\2752\3075\274\275a\221\274\375%Z=\363T%\275\017\240N=7\006\356<\254\302\301<mh\355\274\021\353A\274s\023\r\275\247OD=\024\312\031;\\\022I=ixT=>\276R\275\270\326C\275\222\\D<\3761\020=%x\037=\310\035\036\273|\027C\274\224)==\262\354\022\273\"\243\322\274\363g\340\274\277\2266\275\367\315(\275\370\026/=v\253\256\273\354=/=\337\210\330\273\2255O=\2641V<\027-\033\275;\320\241<\300\204Q=\326RL\275R\366\372<\017\n6=t\342.=?,\221;c-\013\275\213\t>\275O\002\020\274\223\202\031=f/\346<\375\364?<:\373\257\274\n\304,;B\213\375\274?\314\263\273!\355m<\t\362\377;\252\026*\275Pw5=\204\024\251;\367\033T\273(\233Z\275\267\252\013=(\212J=\237. \275\251\017\316\273[\361\013\275\374\016K=H\323\021<\315K8<\221;\017=\242\317a\273\361k\366\274m\305\035=\037\356\333\274\313\006Z\273\326\264(\274\335\251\022<\303G;=\227\013\013\272c\220\032\275w\232\314\274\030Q\346<\321\005;=\3760b<\246:\r\275Q\r\017=\nL\326\274LVE=J\3653\275S\007\243\274\315\230\002=\304i%=\017\316\303\274\221|Z\273\371\251\267\274?\307+<\370\241\034\275\177!x\274.\307\335;\312\275\374<\320\n\004\275ZH\310\273\212q\200\274UG\217\274Ek\352\274\017\2768\274\361y\254\274\334- =.\024+\275\r^\310;\214\267\020\275\2242\016\275\r\325\372\274\035Z\371\274\254\212\020\275\272wH\275\315\334\"=?\325`\274x\200\\=\255\006V\275U\237 =\224\255\325\272^\320\320\274_-\004<\325\255K=\361O\272\272\253\332\266\274\211\222\031<\253\211/\275/\344\026\275I\\\346\274\215\242x\273\014\235?=po\212\274\352_\225<C\342v<\245\217\367\274\030\0108\275y\250\350\274\377\"5\274\031\2754\275\334\317,8\300\255\202\273C\371(=\266\201\207\274n\215\236\274\250\032\n\275p\245\303\274\312\363\254\273\264\202\237\274\202r\325\2741{!=`\003<=Xy\t\274\243E\377<W\245W=\354\0211=-\320\360<\'4O\275\222\260\263<\037\217\212\274\345\316\251\272@\351R\275O|5=\315d\355;;i\036\275H\224\014<C9!<\350D\031\275\220%\026\275\272y)=\263\301X=\014\337\213<v\312Q\275\373sE=\325P)\275\222\217\204<\303\213\226\274W\0313\275$\263\304\274\343\342{:\344\310F\275N\323\005=\031\020\356<\267N@<\025\262[\275%\242.=\002\230L\275\360\'I=\010\236\036\274\360\371C=2\244S=\303\3132\275\317\321,\274%\016(\275\301\250#=\227\2513=\306\250\345<*\221A=\002:\300\274\000\222\357<C\2751<\002\016;\271\003\356\n=\365\252\031=\273\315\274;\272{=\274\273j\006\274o\313%\275T\201f\273\'\027\241\274\234`\240<0\016,=<\257\035=N\327:=\275\235\230\2743sL=.y\326\274a;V\273\316\363\"\275`=M=t\001\010=A\357E=\236k\032=\203+\345;PbH=\376\336\216\273\034\346\001\275Kft\274\253\251\332\274\346\264\323\274qUS=d\202\323<D\220T=4\205G<\212\336\006=\212VZ=r\334\345\274\364\223K\275q`{;\212\021\311\273o1\022=a\271\033=\376^\203<\3722E=6\215\360:\343J \273\017\'\021\274\177\207#<A\374\036\274\036\301&\274.\232u;\276\223\031\275\246\340\034=\213\337#\275\324\350\264</\2162\275\035\252C\275\253\334\004\275\007\217a<\036\225\014=\263\224\005\275zS\302\274]y1\275\006W\250<^\221O<\315\207\370\273\nv{<@\233\242<\323\326\307\273\023\353\260\274\010\204U\275\225\020]=2\017&\275\311\'\374<\234~\262:\346x\353<\322\362\313<j\300\224<<\032\024\275\266\251B\275\370\215\n=\2426\'<r\003H=#%\220<\356\204l\274\367\311V\275oFZ\275\250\226\016=\031\267\023<$\357p\274\006\013\214\273\t6\034\273\220\306/\275\360\331^\275\330.-=\325\245&\275\367\270:<\304\377\024\275\037e\335<\224\224`<\366\230\001=\t\344\231<|z\213\274Qb\t\274\376\315\216\274\030\352C\275\260\217\2069H%\035=0\352\273;\350\334*\274\254\\L\274c\372T\275\324\250R\275\377+:=\213\240W;*\000\010\275E\300;\275vv\035\275mz\016\275 H\302\274\014+\004=\241U<=\236\207\342\274B(\000\274\362\205$\275\214E\365<\341\252E=\245\200\356\273\206\262\267\274\033\002\302\274\247\374\360<\253\323\257;gb/\273\277)\262\274#\350\n<.q9\275@D(=\323\321\037\275s\016\313\274|\263\376<R<\221\274I\227\247<\030\014S=ApC\275\322\277E=\177\257\224:\317\372#:\026E\217<\333u(\275]\'?=UO\223;q?\016\274v:\315\273\233\375\206<!J\262\274\253\254\314<\032R7<l\363o\274n\230\003=}\372\233<\360\237E\275*\315T\275\275\343m<\206\250F\275\211|#\274_\257\034<IM*=\331\305C=P\337\257\274\221\224\376<\312\352\225\274\236*\330\273&\306\"=\\\023:\275`\004\211<\262s\005\274r\331\"<\246\233\001\275V\035?=l3\017=\206HR=\326\t \275\207P\004=\262\215\377\274\305,\032=\306\344\266<*\360R\275\314:U<\201\271\261\273\333\270\360<\373?M=[\363F\275\242\351\341\274\270\n\033\275\207\2004\275\256\212\311\272B]\\\274\362?<\275Sx\223<G\353@=\215\224\177\274\233\220\366\273Gm\275<\325U#\274=\026\345<\360\024\'<\210\362&<\315\264\266\274\240\030\352<\227q\357<\374,\254\273\340\303\326\274S\026\360;\201\304\241\274\024\252W<\274o\345\274\3558\241<\363d[;\023\246b<\312QN<l\205\351<\222\276\316<\231\254\245<\016l&\275EtV\275w\337/\275?\221\324<U:\233\274\003\234\305\274?\213\264\274\026\272\016\274h\301.=\177\2633\275\033c\2418\037\027\201\274\301\317!=\224\224\327<\364\002\343\274j\352\351\274\274\353w\273\365\305\022=l+\251;X\235}\273\274~N\2740\t\020=\367\261%=\266 :\275\013~L<\375\\\031<.\301\361;\037\262\037\275\266\321\253<\250w}\274\352P%\275\200\036;\273\003\224\303\274X\306\253\274\34136=\224\276*\274<\034\177\274U\003\241\273\332\277^<\332\004U=k\215S=\027C\272\271\362?Y\275\001\013/\275\033\345\036\275\371C\343\2744\360%\275;%\213\274\344-9\275\271\334\326<L\037\325;\334\236Q=\277a\207<\222\323\016\274?\351\"\275\t\365\203\274\212\220\\\274I(\330<\024IZ=C\317\005\275\352\320\361;\344\322\316\274M%6\274\004\354\221\274\035\301>\275\214\302H\275l\203\000=\305u\r\275\3667\023=\207\024\037\275\354P\'\2750Q\247\273\247\333:<\216\275\330\272p\3647=\211/\307<|\274\355\274\005>$\274\03517\275\206\351t\274\346eD=\244\301\t\275l\212\265\274k\025\316<\032n\204\274\227\276>\275z\244\250\274\r\306/\275\224\001\006:\010\260.=\n\250B\274\327\376\251\274\277a\026\275\031Yr\273\313\332@=\312\273\n\275\326&\036\275\017\302\323;F\253\345\274\354#2==\253!<\027z+=\330\007\312<\231`\\\275|\252\036\275p\351\341;\207.\317<Wf\275\274\214!J\275+\213\350;}\370Z=\003\211}\273p}\326\274\356\203?;\331C$\274\033\334\t\275kM\213<85*=\225J\017\274\000n\r=\226\226#\275\335<\376\273ow\247<\003\221\327;[E =\351\270,=\223\037\336<\246\346]\275\247\027\274\274w\001\257\274y\253\200\274\341`\005=8\315\222:\nC\n=\323\332\024\275\213.\254\2748\367\000\275\330\247-=U\374/=\013\230\027\275*h\217\274N\017\036=]\304\006=\275\t\253<\000u\235:\215\315\303\274]W\014=\211\005\"=,\261<=\350\234\244\274\253J#;\276\200\342\274Fh*=\265\206\013<\311\257\366\274\275#\337\274C\231v\274#\007\006\274\301?\336\274\220\347&=\361I\277<\315\2044\274\027*\270\274\014\020\037=m\0265\274\245\213\313<\303\361@=\237.\267<\236S>=\355\322\252\274\341\007\317<~g\334:\213\343\034=\316m\272\274\374\027[=\020gA\274\272\010\211\274\233\217\257\274\247jE=g\344\211\274xqv<\300\334{<\251\301\340\274\277Z\270; ,\314\274I#B<\211\304S\273\336G\306\272\022\007\363\273Y\n\"==\270\267\274\353,\213<\240\241\010\275\3072+\2749\334K=F>\271;\'D\237\273\267D)=u\224/=\335\244\034=\265.\003<\275\354\225<$u\373<KS&=0\303\272\274\243\311\302<\374N\016\275i\272\003\275\236|\034\275\363\3406\275\264\372\220\274\2723\330\274g\252\343\274J\'r<qz\353\274:\3314\275\\\207(=\001D\361<\270\000\315:\354\253\223<a\224\364\274\337\005\211\273r@\207\274\227oT\275\234\203\330<\256\222A\275\366[N\274\230\263B\275Y\321B\275\303L\234<\354\215\256:\2410\225<\363b7\275\2237\344;\315\263\206\273\361\343?=sj\372\274\372\0330\273\3638\225\274Z\037\343\274.\000M\273M\016\002=\262\256V=q~^=\254fV\275]\203<=\235/2\275\032iR=8W\325<\312\373L\275\325c*=\\\314\013\275\201\313P\275mC#=\334\317\277\272A\203>\274L\271\003\274\237y\20593\265\022\274\211\301\320\272$\376Z\275\276~\242<F\207L\275\032\356\226\273\255\0321=\310\007r<Y\001.\275\211\021\376;\034\\\031\275\252\001\\=\357\273\222<\'R\013\275\'\227K=\301\220\272\272\205I0;X\031V\275\0273Q\275\345\271d\273\242\007\216\274\300p*=\343\350\202\272\037{\035;Y\252\022\275\'\260.\275\217l\027<\374^\367\273Fx~<\360\032@=\377\266\316\274\211_\377\273z>W\274\201Q\014\274v\213\017\275R\362O=\244\014\331\274\257\\S<c>G=@\346N\275Y\002,=\345\006\225\273\343\002/=s\202\n\275\251\2703<^\3104\275\"\254\313<O\024\202\272\211\261\376\273A]#\274\221\372\377<\231\351\035\274\205e=\275L_\363\274\253:\303<3\004G<\210\202)\275l-\321\274\251Z*=\215\t\375\274a\035\030\275c\026:\275\252~\334<\210\'X\275v/\005\274\371.\352\273\306\352U=q:\222\274\232B-\275D\262\032\274a\364\014<\354\342\325<\262x\'=\220\037\212\273\313\262\236\274\35109=\237\276N\275\301E\t\275\036*\260<?\370*=\340\252\222\273t%\322\274\235Z\260;\326\301\037=\272\342$\274U)\016\275\355o\230;\314\371P\275\372@\265\274\032\177\375<\016\017\310\274\277{\263<8\265 \275\027\037\036\2748$\016\275\356#<=\362\253\252<{\177Y\275;4\026=*\326\205\274)\313L=+S\234\274\231\351\363\274qq\361<D\000\032=3U\020\275\007\007,=\224\017\352;i\305\t=\017>\030\275\275\353A=\233\212\035\275\370GK\275m04\2756\253T\275\"~H=\007\020\224<$\352\347\274J\373?=\221\372\025\275-\252\035=\275\310\353<\340p\302\273\351\225\343<\345\"\364:\206=\243\274\323\260\346<\321Q\030=\355:\332\271\225Q\267\274Q\277\211\274\215a\032\275 \r\006=\260.\022\275\264A\025=Z\233\222<Tq\032=94\022<8J\036\275>\366\326\274\205\333G=\373\262\"\274\020\265N=s\350\302<\307\254*=>\224B=\337\376g<\233\235\265<\355\367\020\274o\006\377\271\267_]=E\226==\201g\226<\212\317\251\274.\\\247\274\373\255)<\0025\'\275\243/\026=\023c\222\274\350\365\016\275\372i\343\274\334\372\323;e\320o\272\3632[\275~q\265<\333\304\032\2743V\022=\311\371J\275\333\002\003\275Hy\032=\013T%<\035/ \274o\360/=\022?\277<\nr\016<+\340[=Ee\177\274\340|\217<{\302\217<&\016\220;B\217\245;@\347\273\274\333jW=\271\274\236<0*\344\274\301H0=\034\'\005=U\024/\275\336\265\304\274\005\302;\275\211\207u<R*\342\274\335$\003;@wQ;\347\215\\\2756\354\234:\033o\340\274\311\210)=\2427H=\333@1\275S\200,\274T\021\235\273\257\020\342\274\314A\006\272\267\275K\275\234~\237\273\321\037\022\275\302\326\'=0uW\275\265\370#\275\177t\375\274\\\221\244<\262\270\036\275\td(=,\335#\275\341\313,\275\274\0345\275\320\314O\274r\363\247<\022\002\316\273\231\326\332\273\374J+\275\254\344\201\274\006\001\371<\256\r\211<\324\321\007\274\367$1<\370\032\006=J;\021=A\366,<\363a\326\274\242.\360<\313\257\321<\257\005J=\203\207B<\310\370\246\274\317e?\274\355B\t\273\364.W\275/L\025=D\345\300<0\205\\;\007\200\362<U\253\314\274[\3277\274\332\251\223<9\350\276\272=\340A\275\356v\325<aD!\275\263\301\316\273\207U5\274#\017\325;\234\025\257\274\375\357\212\274\001CR\275V\014\035\275\005\213X\275\343tQ\274+\2274=hh/\274\305\365)=\227\330\\=#S\\\275]\0033=\032N\'=\232\205\251;\335$\262<\325Q\311\272\366\205\204<ivc<\362\216I<e\251~:r\024\030\275$O\030=\306\310\275:\363\236\236\274\330\376R=\223\272?<\277$%\274\360\211X\275\034v\035=3\357\203<\203\036M\275}\202R<\177\325\347<\013\3678\275\254\256M=\273\036(=\363N\357;;\254\237\274\262\332]\274\033`\303\274\022\2727\275\033 S=7e\211<m\001\030\275k\376\251\274j~M=)\222C<\305\374d<\312\010\'\275x\277 =\336\031\351\274\032z\031\275\261^<\275\224\t\026\275\314\325\023=\004\320\202\274B\203\023<&\301\316\274\006\014\267<p\352\353<\304H\014=E\311\016=\2230\000\2757\354\217\274\211\307\316\274\275\020\021=,\351\230<\002\027\242\272\213@X<?u.<>e2=\032+?\275Y6\222<X\262N=\273\204\004=\267\016R\275G\361$=\016\203/\275G\313\010=I\356\034\275\333\026\r\274L&j<cN\314<y[\371\274\264\253\002=\266\037\004\275?K{\274IW\367<\366OJ\271,\030\304\274\201\001\303<\217\343?=\324\334<=\247a\213<\321\010T\275\001L\016\275t\241Q\275\261r6=\232W\376\274A\"\330\274\262\2310\275\340\006W<\324\2522\274\313\036J\274\250\305-=\277\241\302<F\024\030=\241\307\027=),$\275\306g\327\273\303\254[=/fd;\231@R=\265D\034\275\351\257\276\274\203\372\217\274\033/\007\275\207\\\034=\355M\351<*6V=I\211@=_\234;<\273W\276\272,\210X<\322\343Z\275$\263\327\274\027\"\260<\253\360I=\004\310\022\275o\177\375<q\2159\275N\n\351<\017\3045\275\230w\027=\2454\235\274_LI\275\330@\250<\017\320\236\272\034;\316\274\262\201\331:[?\305<\245\374\205<d\\\005\275\014K\362<\260\037B\275\n\305\351<w\217\261\273\321\3400\274\242(\334<\245\357\243\273\307AI=\324y3=u\220<=\234\t\014\274^\036\312\273S\261\353\274<\275\014\275>\264\302<\355\332\256:v,\037=\341F\236\274\232jK\274\034\354\033=\3601S\275\237\236U=\037f%\274\360#L=\313\372\t\274(>\t\275\260\3627=#1\024\272\335\322\300\274\010Uw;)I\"\275\312\376/=\255\035K\275*[\327;\003S%\275\353\303\000=E\'+\275\027\024\004\275\350\213\014\275z\020M\275\264\337\357\274,\223\002\275.\t<\273\375\037\273\274\006\006\"<C\244(\275\346\245f<\216\372\317\274\016\275\250:X\2669\275\242\325\\=\250\316\r\275, A\275H\237n\271\200v\363\274\345\200\224;m\217\247<\006\365\256<\234\316\200\274\353\033\206\273E\325\032\273KK\034\275;r\\=\363\032I\275\030\027)\275\022\271!;l\353\274<k\3648=\277,\365<\ri\206\274q53<\215\363\303<\204\316\035=\223N\023\275\246\345f<\265\302\375<\376\3279=\235\364W\275\363\310\016=\237\371I\275L\247 \275n\227\026\275\243\215\264\272g\025^\275\363\304\221\274\375\027T=5QA=B\340\021<a\216`<\244n\204<\361o\244:\267\367L=\334\213\\==\213]<\223?\014=\177\350=\275\251I\302<%\337\317\272\347|j\273\360\'I\275|\335\232\274\231\000\367<6\234\024\274?,\n\273[\315\237\274\323f\n;\206)Y<9\361W=W\034I;\366\344\004\275\236\325\337<\360\377H\275p\312G=\337Q\000\275\0131\201\273\240\307I\274\r\032[\274~-\005=\251p\366;\3406E\275\267`\305\274\315\364\347\274o\211/=\014\313\315\274\365\337\024<\303\205\356\274\254A\347\274\365\370B\275\0337\314\274\032\3073\275=?\354<\034$2<-\004\260\272s\010\233\274\020\332\010\275\010\232\321\274\354\275;\275\254G\034=V\275%=\327d\200\274^\315`\273~0\017<\004\353\302<\036\365\034\275\264\214\350\274\326|\354\274;R\034\275\220\3144=|)1\275:s1=\306\014#\275\214\322\033\275\354\224=\275t\372\370:\033\360\327<\203VF=\016}$\275$\022Z\275\366h.\275$\255\"\275\356&\244<\304\244\226\274Z\310\233<\277C\245\274\233\026\303<\005\271(;<\371\'\275\355\n\242<\327\363v\274\315\177^\275\353\0265=F\247U<\230\0130\274<\374\036\275\007\230\327\274d\201+\275\272\247\250\274)\364\315\274C\350\223\274~\332\001\274X?\017<\312\177W=&a\234<\267\016\372\274\343\342Y\273\235wm<Q&\265\274A;\347<BS&=\356\336\204\274\215\310 \275QL]=;A\355;\302j\036\275\213\nD\275\022&?\274JoA\275\220l\005\273\227&\337<$\253\027\275\021Y\372;\356UL=\300V\271\274:\222>\275\2504\031=\333\207\026\275\231\360\274<\221\262%=Qh\205<}\326:=\322TW=\316=^= \342\223<\no8\274\244\222\031\275\211\330\267<s\207\270\274\360V]\274\335;\275\274\333\370\013\275\261\235];M2L=\034\357\352\273R\247\036\275\016r\226<\240\221\271\274\300\002Z\275\222\364\004=~\235Z<\331wg\273\010\270;\274`F\335\274\211{Y\275\210\201\236\274z\225\234<\312\004 \275\356\013\323<N^?=?\326Z\275\267\037\370\274\262\246/=\260~\365<R9J\275Q\225\002=b\374\020\275a\222x<\247\204\"\275mq\027\275\210V\023\275\261\352\303\274\315\330Q\275_x\007\275\302R\315\274Y\365\314\274\334\356`\271\213\337\344\273\037-3\275\361R\275<\311\353\";\242\346\005=\n\035\327;l&\363<\203$\004=\024\t\206<j\357A=\177\030r\273\023H\215\273N\313\210\274<|]<1\3242=\007\307\234\274\257\2309\275\253>\275\273\277%z\274\212e\214;\327\000\014=\201\201\000\273\357\266\266;\232|\305<#\374\323\274g\201\330\274\025a\201\274\320\263H<l\212\334<\307\020\235\272/\307\037\275\340\245\316\274\372\244\"<k\037\220\274R9P=\361\254\022=3\253\352\274S\002\013=x\037\021=1\265C=\247\024\031<NB\225;\266\013\025\275\221\314.\275X\317\222<\212\271\t\275\035\354\013\273\002\252\327<\352\261\312<y\337I=\242\256>=F\033V=\001\241&=/\0239=\316b\244\274^4$\275\346\321)\275>\240r<\276\206\006\274\260\373\026=\240z\354\273\300\303&=.\211M=q\363\005\272\355\032Q\275\311VL\275[\241\005\275\252V9=1\230\003=\2340\n\274\001\332\337<\377M-=I\000\265<\265\204+\274iu\007=\221\2554=\235\025\263<W\351K=\235)\301;\037\013m\2740\032U=K\003\274;i\247\n=\251bM=yi5\275Q\3700=M\021\350\274\004\317k\274\265\355y<Pf\003\275Q\017\211<\267$\\\275:\274\032=\233@!\275r\322T\275\235c\206\274\341\237\313\274\317>\276\274\242\201\024=\252\3772\275\262\030\344<\006\351\273\2732=_:\372\271a<\"?\342<\323\224\265\273\315\330\000<\267\354|<\216\'\004\273\031\tI\275\251\211~\274\254\214\022=\351xa\274sR\004;\240L\236\274\342V\r\275\223\330Z=\t\020R=\177lB\273Xd&=Z\344R\275\266j\227\273\357\177\341<\201\354 \275S2M=\334\004\021=\272(\345<\"\364\366<\010\214I:w%\267;\2770[\275\266\356\226\272\3009Q<\037i\025=_\204*=m\373\204;\240\235B=\226IE\275\273f\330<\367\001\336:N\0022<\230^\032=\210d&=\232z\316\273\033\311E=@\203\243;\220\352\302;\314\032;\275\037\377\326<\374\031\320\273\3402\030\275\374\240\032\273\213d\r\274\271\200\370\273\276`\364<T\376)\275\363\377\317<7\n\016\274\375*\264\274\353\004\326<\032\276\021\275\372t\276\272\363P2<\3749\026<\362aH=v\2228\275\340\262+=b3N=\216\021O\273/\361\017\275\207\241\353<\020\235$\275w\210\\\275\275\037\222<5\3476=7\274\225<\350\247\016\275\332}E\275\260{\351<s\366\025\275\377p\346<\332\365\373\274)\250\276<\\\204\241\274\025E\007\275\"B\204<\226!\363\274\332\334\035\275MB!=\031\207\241\274nx\\\275E\234\037=\026.i\273\342f\306<,\350\277\274\224\255\t\275\332\347n\274\236\032\356\274B\335\240\274PcK=x&\373<8$V\275)\240\322\271\016gK\275\364\357\350\274=\340L\274\315[S=\244mH=\320\230\341<\217\013\273\272S\315=\275\266\336F\274\377|\313\273\307BW=g \350\2743\000H=\326\361;=M\303\n\275\331\202\003=w\314.<\234J\347<n\327\330\273\030\r\\=\0078@=\032\240\003=+\363\027<\210O\016=\346\334\221<*\242\005=\000\250\177;g\345\347\274.\376\372\274\264\321\035=R\221\010=\210\'\361<\376Z5\274\313\363D=\t\305\020\274\365\233\255\274\301\201\376\274\334\n\001=m|,\275\230\237[\275\r\332\240<>\211\223\274\3110)<\020\2735\274\231\310\323\274\316\241V<?\203M=\321\232F\275\030\207\000=\032\335\007\273\203\027I<\332B\314<\214\2614\275\345$\021\274B\222\377\274\203\313\n=@\022P\275\336\241\370\274\326J>\275uf\261\274\233\257S\275\240\223D\275\332Y\026\275Q \037\275n\032<\275\026\004\313\274\237\3633=;+=\275\023i\023\275\220\211\001\275U3\211\274\2452W9\361m\033\275\274\333\370\274\241\223\275<\336`M\274p\023\270\274J\217\037=\374n\240\274\360\344@=\2566%=\364P\215;%\025\255\274\223\2009\275VN:<%\026N\275\205U\210\274{C-\275=<(\275\221\251\306\274K\202\333\274ZUM\275\221\370\272<(\372\203\274\312\316\362<k\027o\274\263\020]\275\035$\235\274g\275\032=\212J\021\274\304 :=\034\3361<\3455E\274\241\031\327\2738\023\343<\032P\033=L#\351:\004\224\\<\331\007\036=4\3450<\031\364,\275\030)5=\006\263N\275\030\312\325<\263\233\004=\323\214\310<O?\244\273\230\210\351\274\270\370I;\270\036W=\223\230\376\273\310\377\005\275\341\277,<yH\227\274\2471\002=c\366\037=I\215$\271oIP\273r\341\023\275\331\217\216\274\356\341\005=b9)\274\304\n\204<\230G\234\274\341;\264:\000\375G=\221\365z\273\214\275\252<q\210\315<\221dD\275W]\227<1iD=\242\303\222\274\021A\n\274\225\213?=:q\027\275S\002\032\275\345\255*\274\032\3657\274\370\257\331\274Kq\010\275\210\330\206\274\277w?\274\203;\343<\245\355\265\273\267\252U=>\377-\275\022N<\275\332z\350:\362X2<:}\204<\222IX<G\3016\275\262Z\273<\236aG=\202\322\037\275\035\304\274;\262\"\223\274c\267\351<vQI\274F\">\275\373\263Q=\311O\351<\2307U\274q\025\027<^\202\357<\314\225%\275\321D\016\275\354?\300\273\331\001P\275-\031m\274\273P\'=\222(\003<\326\315\325<\314\222\026\275\222\370\024\275\311\201\277<\313)6=\215\213\002\275\275|@=\337\361\306;\353N&=\344EH=\365@C=\364#}<H\014/\275+\250B<2\nO\275\361\347\205<\260b\345;\227A\231\274\352D\201\274\354u\026\275\0302\357<\014=\036\275B\276\271\274\\\277\243;`S\267\274UX#\274\304\341\334<\360\312\007=\223\264\360\274c\300!\274\202\370\017=\375?*\275\354\300\022=6\002\013\275W\250\324\274a\010\030\275\216u\030=I>\357\274\375@#=\262x\320<\027\306\227\274\253\023\246\274\271(\310\274\202!\014\275\312\227\207\273\341\2652=\026\306\314\2744\215(=\357\003\372\274\203\270\006=\356\222\013\275\243m\013\275\'~\243<\256\037\313\274R\010\331\274\267\261%=\364p4=\267\220\024\275Cc8=G\3344=kd\313<\327\006A\273\337 \267\274\260\341\374;\343\024\246<\003J\345;\177\316\334\274\264.\304\274\256\211\"=\300\037\323\274\006\332i<\271\271\034\274u\245;<+\215\314\273\337\243H=v\031\347\274\000\221M=\220\331-\274\370$\371;p\016\305\272wy^=f\206\341\273\225OK\275\235kD=\274\r\016=\245\221\237<\255\215)\275\302\266F=\021\364x<\2169\036\275\205?\004\275\221\352\377<9\376\206<\320\205S=)\002\214\274\034\'\206\2740\002\3209J\322\002<1\307m<\300\201X\275q\320\322\274?\201\037=\215\220\032\274\274\032\022\275\247r\240\273\271\275\223<a\0179\275\343|\274<\324\231O<:\302O\275x\253o\274\202v\003\275\014\217H\274\003\272\n<b\202<=\023\037(\275= q\274\243\240-=|td\272\260d$=F\341I\275\346\261\214\272\357\202\036=\"_H\275\037\005s<\203\360.=\211\234\036\275\314\225\264\274q\372\317\274&\341\026=\232i\372<\357r\031=\327{\260\273\353\007.\275\233\237\214\274d4\312<\212x\r=\351/\332<\217\215:\274\313\337?\273>\222\375\274\027\205\022\275\300\177?=\300\243\201<\210\370\355\273\220?\215\273\317\212\315<YG\220\272V\361\303\274\312L^\275\334\322`<\237n\305\274/:L\275\356j>\275\253\353\221<\357T\245\274n\204\266\274\361P5=\225\320K\274\245d\r\273<\361\020\275%_[=(8\374</m\t\275&\364E\275\217\000S\275\032)\324\273U\026\247<m^d\273\221\205\270\274\264\365F\275N\267Z=\256\214-=\033u\200\2737\364\246\273\261\362V\275\267\227\251\274\tr\272\272\252~\314\274\331EZ=\037\271\007\275u$\251<S\371\026=\334B\365\274/\rI\275\271x\027\275H\252@\275\200\262\207\273\267i7\275\320y\355;\177\341\303\274\227\203A<u\332\315\274,\310\"\275\262\374#;\025qF=\315g\237;\300\266\213\272\317R\314\274TK\261\274\343f\337<\317\224N\275\254C =\247u$\275,\257\223\274\021~\320\273\'\225\270\273\004\032C=>\321H<r\242\035;\352\331^=\224q\217;\377w)\275\243\034Z<\304\363\221\274\306\232\323<\336f*=2\3318\274IMu\274+^\"=Z\207\230<\004iW\275yS^\275\250X\001\275\035\236\251:\"\016\030\275`d\022\275}\324\232<-\326\257<\000\246\370\274(\277\216\274J8G\275\032\"8\274\020\276%\275\343\275\320<\355\t\320\274+\365o\273(g\315\274\264\247G\274\237\027P\274\245\351\006\275Fj\263\2748K\247\274\337X#\275ns\251\274F\267\016\275\301\340\333<\2049U=\035\235\233\274I\017.\275\200\276<\275\200\177x< %\225<\033\313\025=Fe\n<\375e\317<!\332\332\274\001\370R=\204\0016\275{\nE\275\016|\005\275\177\234L\275\330\350\007\274\370ON;\013\276\325<\233\341\257<Wo\004\275\364\006\301\273\032\231\362<\266\320\360\273\3426\027\275PQ\020<\001\270\\\275!\356\261<\274\273H=\202\351\216\273\023 \030;\323\034\n\275\335\254)=\201\332\013;{\177{\273\355s\264;\005\341\225<Q\224R\275\247\376\221<o\313\221:\331\304\024<w<\032=\327\230\213\273.\376h<\330\234\010\275\n?4=_\214\304;\263\271\322<\320\373\034\275|\014]\275\n\3372\275\271\3544\2759\003\305\274\334\3009\273\366\231T\273\200\214\255\274\327\304\003=\021\216\\\275\355]\231\273\337-;\275\373N\003<a\036\034=\370\332!\275\211\202\275<u\265L<\247bH=\207\2630\275\355\036<\275\257\035\033\273\362:A=\340\005\n<H\354;\275\201\315\273\273\211\276J=\222G;=\246C\356\273\247$\213<t\270T<MI\025\275\341\340\023=\321)(=\375X\355\274Q\266\327\274j\356\007\2730\254o\272S6/\275\275\327D=/t\267\274!\006\\\275\216\244\236:\004`|;>\207\360\2745!\027\275\251k\026\275\273.,\2756\306\032\275\330\2710=\262Y\275<]Y\033\275\336=0;I\202\210\274\367\247\201\274(\306C\274+\335C\275\342\243\213<\350@\020\274\027~\354;\327w\000\275\271\207\243\273t\357\000;\253\302\007\275\036\013\201\272\231\032\250<\230\277\372\274\231\0023\275\231\237\003\275*\rQ=\373\324\030:o\"\250\274\344\217\253\274}\331\312\274\201\332\n;\035\241\305<\316\243F<x\245t\273\267\246\360\274\226\006\031\275\234\372[\275\014\\\025=ZXQ=@\027s;E\"4\275M\341\351\274ua\363\274\002\222\267<\275K\277\274zQE=\242\r\005;\201\223\037=\232\253A\275\252N\023\275\376[\206<~#<\275\t\373\013\273,=9=\270\0379\275W\251\035\275\213f\256;\027\004!\275\t\324\352<\276\371\255\274XQ\205\272\037\236M=\030S\327\274\270U\024=\017\364M\275\",\"\275\236\242\302\274\212PU<B\276\274<=Y5=\220]m\273\322\027J\275E\336\353\273\003N\r;\227:#=K\275\010=\244\302\024<Z\312\333\274\237\2260\275\270\364O=\302`\255\273\34560\2751\361\357\274\027\205#:G\3079\275\033\260!\275W\237+=\242g\026=\204\275\004\275\205\246\246<\036[K=\350\\\023=\273\215V=\332\240\024=\231L\003\274\305\344\037<\2744\317\273g/\013=G\245\261\273,\212\222<\335\303\031\275\342R\267\274\370\020y<\352X9=u;F\275\024\371==\235\222\246\274\374\240\035=(\301\027=\326/\236<J\210\231<O\312\340<\242\351\006=$\242c;!\002E=\236\361\331\2706\333\246\274\370\312\262\274\024\354W\2751\006\230<\'\202\221\273\223\2444=$\345-=j%\306\274\365\274\224<\371\305V<2\367J<\013\215\371<\354i\335\272\344\264\257<a\261K=\275k\035\275\r\361\363\274\2659\302<\232\3761\275\314\343\271\274\363\314\217\274\366.S\275\0334\354\273\225\022]\275\202\300o<o\263\030<V\000>=dOG\275R\375Q=z\2045\274\334\335u;g`\014<\366\243/\275^\235\311<.\312\020<\212\221\340\274\335\027\344\274\317\216\300<\177\363\017\275\302{]:\215\257\371\274\235C\035=\255([\275\242\005F=\275\347\310\274m\035X=U\031\277<lm2\275\030\3746=\275\206R=\235\226\345<\231\265A=\212=\214\274`\3038\274\243\334\257<\306\242\367\274>T\037\275\004\347)\275\244I\002=P\031)\275\204\243%=iK3=Nf \275x\252H\275+e\021\275\005|\265<h\014\217<\037[?\275\341]\033\274\247\260\341\274\223\033G<\025\211\316<*,\362\274\347U?=;\203\311\273\355\274\366<3\036\276\273\224\022\200\274L\225X\275\372\325\210<\036\203J=\016;\252:\267:\334:!|l\273j\277\277\274\361}R=a\314\023\275@\217K\275\331\241\215;b\253\036\275\0359\315\274\232QY=}T\236\273\332t\254<\244\220\342<}\346>\274%u\316<hK]\275P*7\275\255\263\211\274^0\352\274\220\335,\275\375\303a<8\302\241<J\246\324\274\237\220\206<8N\\\275,\262(=\032\275P\275 \307\003\275\240\255\367\274.UE=\363\350\304\273\276>8\275\303)\260\274\021\267L=U\224L\275b\364F=*\3171\275\311\2238\275l[\013=\035^$\274\013J:\275n+3\275l(\255\273\021\226\346\274\034\327L\275\242\301&\273\023\251\010=e\320E\275\221J\014=\375\236\305<\377`\346:\235Q\001\275<\337\215\274-\"A<\346\226V\275\233\271L\275\350\"\374<y\357G\275\310P\353\274\027\375\030=_\225\033;\375@8=2\340\314\274%\210<\275\036k\272\274(\260\253<\256\302S\273^\357\t=\231x\253\274\370oL={\\\276\274\274S\273:2\253\002=h/\305\274h\335\004\275\206\256\313<\313Y\345\274\320\2357\273\341\217P=\036V\'\275\346Y\\<O\335\301;\216\020\202<\256\\\027\275j`\004\275L\261$\275\222\342m<\230x\n=\363c\207<\300F\244<\211?u\274U\266/\274\265\346\200\274\324:,;f\3508=P+\241\2744\267\316< sE=\3466\021=\021\273\330<\202G\223\274\336p\366;\310\253Y=\223ST\275\037\000B<Z\243M<\355,\357\274\016\226==zOP\274\366Z\002<\365b\336\274\353U\360<\277c\306<\177|X\274\353\321\330\274\027\262o\274^\3334<\0061\025\275\2064\250\274SG\t\275\313\221\313<\006N\245<B\200\332:\204\021,=\014\247T<e\305\3009{)%<\036`\306\274\352T\026\274\261\207[<\357\350\325<\247O\350\274\250<Q=u\2735\275\002\204U\274\374\325\010<\"\2274;\020\2015=f\361\226\273.0\t=\245\246D=\323\002\217;\272\325\'\275?B\236\274\334b?=\177\261\257;\340\\@=s\316:\275=\025\333<M\327\225<\315d\236<\252\253\031\275\316\203\005\275\272\352L=3q,<\224\321\035:U\225%=\270\033\312<-\200\322<\263\300\251;\306F\020\275\324\3527=\032\232\037\274&\254\037\275\345h\237\274\022\367\226\274H0;=x*V\274E\010P=\002\367$=\241\321\210<B\255T=\'0\225<\026A\246\274r![=v#\332\273V\363\"\275\207\240\014=\004P\201\274\207+\335<\007G\274<[\362\374<M\376W=\305\224\224<\003#\036=\2236J=\300\004S=\377xS=i\n\355\273i\017:=\221H\364\272\226<]=\375\203x;\232c\000\275\222\376\307;\005F\002=\216,\345;\301/\226\274,-\304\274\224\255%\2752k =J\2773\275_`\'\274\376\246\210<\212\0164<_\230)=w\t><\226+S=/\220\374\274E\006+\275\306\256\353:h\201\000=\367\356\t;gp\331\274\000\214\261\274\304\'1\275\344\022\"\275\351\313N\275\267\311{\274\017D\3759>@?=\304\306\231\273\200\242\366\274\204\030\276\274$S\\=O\235\032=\307@\356<\236\'U\274\225\255,=\026\250\305\273;\257\034<4M\330<\244\200|\272Y\273G=\236\363Q=g@\206\274\000j\356\272\000f:=\023\"W=o\273\305<\335/^;|5\002\274F\340\013\275\025\237P=\021+U\275v\213\037\274\330J0\275M`\300\274\177K.\273E\373\006\275\245\212\325\274\376\036\027\275\375\232-\274\231L\341\274\272\377,\2758a\246<\211DC\275\364J\245\274\257\205\301\274\215\024\027=*G\350\274\223\260\202\273z`\205;Ju3\275\271\023\337\274\330O-\275z\317%=\240\216\024\275\257\235\263\274\377\315~\270R\200\220\274\233\026\323<\253\030\234<^\203\315\273\262(\024=\027t1=\246\201\207\270\254\362\263\274\377E\310<\306}@=\316\325\027\275v(\301\273\240\0206=\306\242Y\275\225%\204<\002?<\275\257\272\341<\207q7=Y\222,<`\252\\\275\370\225\200\274\325\341F=\321\377U=Y\005\001\274\234\320<\274\026\0243\275\342A\252\274\366\177\026;Z\033\032\275\026,\364\272N\370\336\274\0269\267\274\231+|<\363\r\333\274M\2007<\241\210K;\306-`\274Kl\013<\345\345\306<\373\243*=\340nP\275\320#\276\274\024\024}\274\325\302\373<\241G\264\273A\367/\274x\333\364<O\262X<\230/\274\2742>\204<\2243>\275d\200;\275\300?\257\274u\351\251;\017\034\034=\256\351\231<<\0003=\260\024@=#\2654\275\353\266H<\n\332\353\274\013\006\241;\256\242q;\3747\333\274\315q>=\3152]=\014\261\032=Y\235\257\274\203nI\275\243f\023\274\035\356\337;\033I3\274\252&\002\275q\301U\275\025=\253\274\014/)=P4A\275z\2114=\025\010Q=\320\223\243\274\032\000\325\274\200 \347<\331\321\032\275\221\333V=*\014D=o\253=\275\220o5=\025\017 =\334\341#\275\013\320\037=\351q\034=\264A\033\275\326d\337<\331\231==\003\026B=v\305\377<\264\206O\274!\"F<s\211\225\273-\314\271<7)\035=\343\267%\275\022\311\327<\221\301\002=\336$\250<b\220J=\237\233\032\275e/\021=\0175T=F\367<\275[^T=5\036\n\274\247\023\241\273\232\351\350\274X\211\230<\342#\n\274\374\036\340\273\207\262\022=\266\267\350<-&8\275D5\010\275\243\031W=W_\271\272\373\0200=\n.\222<\271xj\274\304\243\206<5z\202\274\237\010C\275\344\323Y\275\321\\\"=\004\032\321\2744\272;=\233\346O\274\371\336>=\347\210\025\275\362\341\257\274s\352\314<\360<J\275\220\372b\274d\022\306\274d\365\350\274\205\342\266\274\274\035C\274y\341=\274\352\262g<\360\311\267\271\344\270\272\274\035*\030=\374s\243\274\320n/\274\333MY\275\025\356@<\370Q\260;\001\350\340\274\265\260\206\274\217n\014\275P-\365\2741\264v\274\037\243X\275\363G\013\275\250\307j<g\261\001=e\365\024=\230\350\3059\335\356\025\274V\010\203</H\323\274\373\274I=\201\257S\274\243\275\311\272\332\251%\275F\373\350;\376\0209<\035w0\275\001\001&=\224}h\274\361Np\273\267\270=\275h\270\337\274\320\277\013=V*$=T\201\013;m>\276\274E\346_\274\352\223[<`\2763\275\025OB\275\377/\202\274\224\3451=X\351\266<\302\271\363\274}\267N\275~\005\004=\244\325\227<\010\033i;y\352U=\317q\036=@s\250<\204\331X=yvX\275KC\226<\005\314-=\200U\202\274\353\306\003:(\326\200\274/~\014\274\232\220\251<4\024C=\300s1=\304vu\274\254\016\373\273\0176\016=\250\240#\2755\341\250<\244\364>;\264XA\275\017B.=\263H\027=3|7=V\024\n=\350X\252\274\r\321\360<!X\207;`\353\346\273\002\3760\274T<\317<6\033\r=}\210\023=)\362\252:\203\216W=\374[A\275\312\352\216\274\350\217E=+\317\271<\3463T=/\374\021=\263!\312\270\271\326U\275\227R<=S\216\031\274\021\321\001=IDH=V\007\240<\370\003\312<}\010.=\304j,=W\010z:q%S=\276`K=4I3<\005\214\242<\276A)=\275eC;SsU=\0038\014=\362\270\231\272\032\3532\275\264\362\223\274\0169\033\274d\204\370<E\372\201\274\365f\270\274\255\204>\275Z\352H=I\r\365\274\316\354\352;i\211\006=qN==\243\336\010<\346#\217\274\002\300\360\274\3103\006\274\256\222\243<\3607\301<\214&\234\274\276O\013=\271G\350\274\227\325-\274\017\037\020=FjJ\275\225Tk\273\241\360\234\2749i\022<P\372\202\274\316\022\321;>\224\315\273&\314\222\274R\360\t<l\342\341\274\370J\306<\343^9\275\336\333\340\274z\361\010=\277\366\332\274(\353\347;\311\014Q<\223N\262\274l\021\322:\304\236\001\275\002\375!\273\25558\275\324\262\214\274Gt\2429o\020 =T.\255\274\353\026-=\322y\355\274SV\341<\345\301\332<st\030\275+\221\221<\236X4=\2055\023=\242\276F\274\342v\335\274A\r\225\274\304\002\210<\036\360Q=\332V?=4\253^=o=h<\360T\365\274Ji\271</\241\251\274\2021\353<$\033\003<\244\306D\275\030\267>=\325\222%\275\266\267\306;T]!=v\240\026\275\317\260\210\274\271KC\275e\353\223<\367\313Q=\235\037\317\274\211\306\020\275;\221!=\334 \354\274\243\2545=2\325\356;T\023\036=\270H\266<\334V\201<M\264^\275\230\247\016\275um\321<\026Hn\274m\220\353\274E(D\275\t2\324\2726\334O\275\014{ \275\251P2\273\307\237\323\274\364x<\275\363\247\210<\346\242\373\274a\212\002=\224\020\212\274\026\'S\275\026\256 \275v\310\307;\266/(<\021\202V=M\236;\275)\204\017<\213\255\301<|\020\324\274j\314%\275Z\306\345\274\352\356I\274kJQ=A6!\275\301\226*\274!}\026\275\"\317Q=\014\367\023<\016R\344<\312\244^\275\r\206H\275\370gS\275\262F]\275X$\247<\26707\275\003\310\021\275b\360\332<qr\010=\344C\315<\035\177K\275\204Z6=<E\307<\265\232\267\273z\3624=\2709&\275\352\234,\275\005\370\334<\274\001\240<\302\303?<\021\021V<&\002+=^\263\021;\316\216Q\275\350M+\275\021\234\265\274\214\010/\275)\325\t\274|3O\275\375Zc\273|\357\261\274;=c;\311\275\216<\252^\006=\245\203Z=\235\260\247;\342\320\n\275`8\002=\323\211\0318\210d1=\307e):\372>\207<\275\n7<Vt5;\203M\031<\213\006\327<\327`\010=\335\020\365\274sV@\275\033dK\275\317\002#=\000\366Z=\312\004I<\366Z\220\271B\230K\275\252\331\273\274|*U\2755\002\t\275\333\016\021=\357w\335:\344,3\274\327\326\316;R-9<\004Q\227\274\256Qj\274\200u\340<\214\320\203\273\375\300X< \375\217\274\253*#;\006\006&\275b\"\372<\242\032a\274\237\241)\275m\200H\275\334x\001\275A\027\002<\245\273\014\275f\341\342;\213>\006=\362\330\005\2750u\231\273\245\237O=\225oJ<\351\0248\275\227o*\275\342m\005=W#\211<\004\2738<Nb\340<\216\372I=\245\305)\275\365\247\350<1x6\275u-\374\274\355\006\025\275\r\213\231<\305\3403\274\333u\225\273\261\360F\275\201A]=\377E\002\274N\330B;0\305\026=a\346\243\273\326fO\275\237\213\226<\321|^\275\241\220?=\366Y0=\224w\026\273\353\030\037\273\202\375\367\274\002\274c:{\032D\274\341\226(;\336\306\032\274)F\335<\310\t*\275\037\014\010=\302\236\004=\372{\312\274\350v\002=\221\nL=\271&\354;[\255\362<\266\266P\274\262S\273<\337\036\270<q\267f\273:&2;\006O,\275\2121\014\275fo\020\275]\300\310;\250\2217\275\007\256\355\274F*\n\275\030\006\262\274\344\252\252\274\324\310\r<K\020\264<\027\3646\275f)\352<\270\201\"\2752\310\033\275\322\323\257\274\303\230[\275\373r\255<(\265\\=\242\033\260\274\335\246\214\274\032M>=[46\275<a\017\274\325\003\327\274\341L\347\274\256\376-<\373\363\017=\210\222\241\272M\365\342\274b(J=\240p]=Y\317+\275\257\026A\275%\227>=\032\244\215\274\246\313\033;\325\350\214<\010gG=\267jU=\223\263\n\2757\250X=u\360\310\272\313\254\004\275\203zD\275\360r\206<\207\2076\275\312\305_<\265\025\260<\362\372<\275\321\323J=\027\2373\274^\213\244<n\037@\275\033\3631\275\2221\234\274\222l\337<{,K\275\215\266\033\275\014\013%=\322\314K\275\260\375\246<\013yX<r\276/=\017\021?\274\223\266#=%\334Y\275&e\016<i\247?={\262y<\356\226+=\021\317\271;_\221\217<\272\025\200\274\032\021\3359zG\021=zw*=\240>\t\275\036\325W=r\336\216\273\245\262%\275\311d\362<\246U\013=:\236\243<W\2019\275^\200\030=&\202W=\335&x<\223\351\025\275:\206I<\035\240/=D\004M=\35604=t\310\006\275\t\212e\272\256\363<\274iu6\275N9U=\022\036\020\274%1\334\273\350\343\010\275\227\266\023\275\032\"\333<\035S\331;\2055\231<\320\2665\274\331}>\275\005\255\247<0\225\'\275\331m\203<\365\3047\274\274\2475=\3547S=\372u&\274$O,\275\365\tQ\275\034\025 \275\007\3535\275\354%\253\274\352e5=\354\365\026=O>D=\243|\001\275\177\251\260\274\322\312\035=\256\211*\275h\336c<\321\316\333\273>)D\275\220a2\2758?\306<\366\220\031\275Z\320{<\214!+=\022\264P\275\367\272\355;\317\036>\275\021\246W\275\237\355\370;\3475\340<\251j\355<\177/G\274\310\226\274<\3058\313<\347\333\212\274\300\253\001\275\2018\370<f\005\305;\004\366A<)\267B\275 \231X=\0331\257<\226A\317\274\371M8\275T\325==\005\373\207<\003\344\263<\310\244\311<t\023)\275\255\251\327<V\370\254<Wp\273\274R\024V\275\326\275&=<<\315\273\272\024S\275\032\262\014=av:=\330\007\030\274\205\226\215<\177\374Q<\347E\016\275\273Z\256\274\355\231$\275\307\255}<T\264R\274\210\323)=\374V\355\274\316\231\n\274\273+\237<D\204\236;\217\377\014<\335,\252\274- \017\275\215\3521=\263n\r=\364\206\035\275\276\253G\274\332E$\274\033\370\204;&\300^=\275\300E=|\371A\275\277\243q\274;\201J<\206\013\022=M&L=E\035\227\271\217\205\022=\373U\021\274c<R<\371G\344<\024&E\274\035\336\"=\222\334\303;\260\013\251\274\203\325\324\274qx+\275\350\314\3638x\265\336<L\376\032=\276N\033<\273\0026\275\222\212\001=\024\360\037\275\343\202Q\275\3547\007;k\240@\275\2165G\2756\346[\2756\034\007=x{\035\274aXp\274&\322\363<d\320\022=\336\\\273;\257m\323;\217\324\342<Hp:\275\360\2707<{\003e\274\315\237\361\272`\365\306<\203\232\331;\t\305\010\275p\257.<\204\305[\275\313 =\274U\3445\275\327\034\007=\360\346\246\274\345\013\274\274\022\027\206\274\005:\217\274|\275>\273S\261\305<X\351,\274\267\021V\275\303\344!=\t\325\253<\211\223\245\274\006\324p\274xi\016=\023\202\306\274\246\367R\275\362\353\341<\365t!=\376{$\275\261\3438=\245T%=Wyy<G\r\n\275\205\256\301;\234\223.\275\273\202\207:\274R\032=\003\225\223;?\305\n\275\356\267-\275K#\304\274\232\013\202<\210\261\377<5x>\274\020\313\243<\t\354\354<\367NO\274\036\310\177\273/\230\025=3\013L\274\315^\266<\341\376\323;\037O\"\275\260\235\324<\014\034\222<\205\351\226<1w\325\273\000\334\035\275\000\2665\275$\227&\275\343\205\274\274\347\360L\275\305\364C=\341\3265\275\2337<\274;\362\303<\252b\320<Emg<\257~\036\274w\016\267:\351xD;\266\\]\273:\273Y\275\014I\252</l>\275\375\247\222;\300\3236<\345b0=\001\373c\274\374\357\023\275$\220H\275\341\000\023=3\352\031:\312\374f:\250KQ=\212X \275\233#U\275\363\3317\273_W\251;\241j\017=|<\347\274\242\240\277<\217\212\266<\322\307\031\275};\007\275\315o\207\273\230\247\375<\236\024?=k\354\n\275\300\t\\:\246\245>\275<L/\275J\017\214<k<6=:\005w;D\251\030=_\303\013=\016\2424=em>\275\031\022\246<=\367L\275>\366\332<U\026\242\273L3\220\2740\035%\275w>\323<\005\236E=\214[{9A\276\030\275\353\2748<w!\017\275}i\033\275\347OB\275\265\360\031=u\346-=\014\016\272\274\241RR\275\334\002\323<@Fe\274\3302\006\275\375R\276\274\324\224+<\333\313U=\267\207==|\3449<\203\323\200<K\324\267<Gi\023=\264y&\275\362qC=\352I\000=\211\305\016\274\2407A\275\007\324\000<S\213\261<\341\001#;\235m1=]\335\320<\270}\026=\311k\270<\307\313%=X\321\366<\217\361\031\275sPQ=\033\274\216\274\313\340\253</\201\020\275\306\307\311<\377A,\274i\365\310<\025\377\020=%\374*=\355\201\303\274\002\360\244\274\346IL\275[\336R=x\026F\275)\023\317\274u\364\017\274o_M\275\212}x\274W\2349<r\366\356\274q\256\317\274\330\256\345\274r6>\275\204_7\2758\340\217<w\332:\275<!\242\274k\371z;\033\'\270<\377i(\275\006\262 =z\230\245;\214\326<\275\263\347\304<\0277\036\275A-\215\274\350-P\2756}a;@r\025\274\201\006]=\257\034L=\364\244\260<\224\363\\\274\353\272\036\275\021\214#\274k\333\373;TB\224<5\3446\275A\364\013\275j/3\274\262\002>=\220z*=J\0001=\3042\204;\032,\003=i\342\307<\340\212\026=]Q\007=)\345A\275\340\267\364<O`\231<\004\203\325;\266\200<<\267\237\201\274gb\036\275\335?\326<\264\310S\275<\330\340<\300\341\234:sW\351\274\034\270\020\275\356v}<o&}\2747\335H=\324[\301\274n3^=\345\0173=\006$N=m\246\341<%s\026\275\243L[=\3264\342\274n\351&\2751\240\032\275*TT\275\234\016\305\274b*6<\204\025\032=\355\3353\274\253y<\275\376|\023\275\261\255$\275\233\332\031=\214\317\244<{r\364\274u3\326\274a\331I\274T\326s<\345p\325\274\317\023\036=$\263\n\275k\360#=U1S=\262\316\222<\235\007\360<\254v4\275Xd\220<\230/2=\336@o<~\177\334;\305o\306<VL!\275\322\'d<\342\372]=G`\264\274u\302B=\266T(;[,\216<|s\227::q\364\274\3778=\273\2641\377\273bb:\275Z\263[;\212MH<v\2427=\335>\006\275\231\244X\275|B\203\274lPw<Q.\t\275\370\353\037\2743l\351\274\265g\037=\006\377\353<OLL\275\363/T=\217\010k:\031G\020\274j\263\263<\203\2577=\213\231#=\315;f<{\306*=\322\\)=\037\220]\275\321\217t\272`\024$\275\017h\247;\275\371\014=\362\"9\274\375\002\016=\004\2342:_\220\002\275\335\330*\274b\313<=)\337]=~\007\315:?yh:\3768\201<\315E\243\274R\3101\275\035\307K=^\024I=\0357\240:\2056\273\274\034mZ=lo\r\275\273\332P<Q`\273<\263$\354<\006\353\022\275u\264^\275\234\340,\275\371\004E<P\372\357<1\257\352\274\313\361\023\275\355\303\330<\265\336\006<:Q\202<#\352\010=\010{\035\275\311A\\\275\371IG=\016\305\320\274\327cI\275\241\205\340<\315\266B\275\205M\305<}\210\007=\225&n<\265\020/\275\367\003\305\273*\216\t=8\022\332<\232.;\275\357\"\277<Q\026\013\275p\017\360<\370\302H=\321\\.<\312\226*=\365\261\275<\371\216\'=\345@\201<\367\237\000\274\316\220\251<k\034:\275\256\2607\275\362\307\260<\010>\'\275\317\"\307;\212\327\027=v\302E=\354\304 <\r\215K;\036\003\274<cl&<\346c\353\27403\345\274\261D\035\275N\204\244\273\034Q1=\207j =\240\266\032\275-\353\326;*\353\332:\005[\211\274\227m4\274b\250\255\274F(o<\243\275o\274+e\261\273\3258J\275o\3747\275\033\254!=o\355\345<\313\250\'\274Z\3135\275\254\214(=\3134Y\275\033}\026\275M&\203\272\253\007\364\274(k\010\275\305\004\221<]+@=a\006\n\274qAZ=\352\253-=DZ\307\274\345x\270;\337O\035=\373^\302\274\262\302\314;\226\253\246;\004\376!\275\334v\333\274\010{\351\274\224\304\022=\250H8\275OI\001=~\t\013=\246\336)=1\017O=\326g\003\274\013\315\236<\230\205(=-\007R\275\356\023\216\274B\037\303;_hM=\311\324\350\274\344\220\251<\024\030L\275\262\370+;h\237\201<wI0=\013\322\t=B3T=\324!\236\273\347\303S=+:\217:6\213&\275x\036\371<\337\242@\275}\314F\275\023~\013\275\322S\177\274\365\375\000\275\206\210\021=\275\037T\275\r\344\367<-/5<\246]B\275D\2768\275G\216\312<\227.\361\274\"\277\271\274\024\257\031\275\2753\204<@\374\212;\375\'S\275W\\\336<\2512L\275x\363\316\274\240a\022=\224~\003=&\336t\274\306\021\\=\233\336\000<\224\024\345\274\233\345X=\377\274$;{wO\275\340\312\303\273\0046\032\275\360\202\315\274\r\\\006==\201\320<\237\364\257<\203A\342\274|\237*\275U\254\003=\374\341\t=\373\254K\2755WM\275\372?\t=\353\316\207\274\273\323>\275+\024+=q\"N=\265-\036:\305w*\275k\023\"\274B2,\275\202\215\037=\r\215-\275_RN\273^_\246\274!m\371:\300~^=\272\014>\274\206\365\262<\326\374\007\274\235i\272<\307\253\002\275\246\n7\274\277i \275X\330\031\275\263FX=:\352C\274 {\030\275\274\021\024\27532O\275\245VF\275S\226\236<4\244\001<x\263\347\2747\212\314\273\003\373\037\274\210\277O\275\031\233\002=\177\376>\274\222\342\240<\310~\216<\351\235\020\274\374\235\027=\235\312\024\275\257dd\274n\344\227\274\025\253\341\272\000\3571\275=\017-\274E\317N<\314q\r=\326\254\214\274$\373U<^$\312<]\365N<\017T \275\250\216\313\274C\207\213<sP\"\275(\243\032<\366\200>=\354\312$=%<H\274!\020\023\274\331y\037\274|\370\214\274\307\324]=SW/\273\370\212\001\275\353\327V\275J-@\275\210\236B\274c\203\314\274\377\301\274\274\017L0\275\215!\200\274[\322G=\366\2760=\316\363#\275{zG\275\"\025\211<\007)\236\273\032\316\373<S\203\314<\306\242\025\275\242j?=i\323|\274\212\371F=\355}H\275\363\',=\202p\374;\320J\t\273\245U\215\274*\"\026\275/\014\036=~\016\311<\327\010\005=\006\010\004=\225\225E\2753\223\362\274\026\220J\275\315s\311\274S?\357<\226L\311<\2354\004\270jK-\275\331\374l\272:\n\021\275\006\013P<_\004\027\275\256\000R\274\364(\324;\347\365\022\275\277]>=#\373\027\275(\226\275\273\027\320#\275\243\364\020=_\370%;\377\313\224\274\263\032g\274\223\366\217<&\251\037=H\321 \275\356\362\233\274\343\262\005\275\305\235\001=\365\037H=Q\307<=\317\377\004\274( F\274\335\372\361<0\276\354\274\351<;<\200\003B=s.\014\274\000\025\017\275\014\363\345\274\006\0358=r6\220<\367\262\'=\270\250>\275\036\242\273<\365\331!=\266\313\251\274\305[\270\274D\315a;\317\245/=\212\021\305<*\317\014=\242RZ\275\251D\317\274m\023\376<\215\323:=\274\273\017=CI3\275jPU\274\207\000M\2759\003+\275\225\253\345;\373\223\225\274f\007\372\274R\244;;\024\357\220\274b~Y<\004\245\213;&\335T=*\'\353\274_\367\331\272\372\232l\274\020\312\034<\230\324\266<\316m\225<E70\274?\3166\275b\217\236<\230\014~<\241h?=\'\347\362:2\207\343<T\r+=e\323\016\275\227\276\240\273\233\217-\2751\375Y<\234\364E\275\223s\203\274\244N\360;[\314\002:\273\261\221\274\302\317\014\275\344\357}\274\365\323\034;\313>\266\274G\325>=\250kj<\350\225\'\275\303{\333<4\200\377\274\227\030\014=\351^\221\273\030v\022=\366xb<\r\343O=\267\331\361<\316\210q\274\220yK\275\324\202%\274\233nu\274\014>\177<\226\374P\275\222\3372\275w\306\313<xsA=\262\217\232\274\245\223\230\2749\260\352\273B\333\327;\020\275\035=G\313\240:\325\363\367<\227`5<\373u\366\274\235*%\275\243\353\275\274\262#:<\234f@\275*Je\273\305\316*=:\306\230;/vU\274\024RL\275\330z\"=._\376<\366cN=38 \272\013\213@<u\203\352< \377\341\274\326\316\003\274\001X\265<a\003\262<\300f8\275\343(]\273c\374%\275\022^^=\024\277\215\273\027\357#=\302\342\242<\017c\342<\232GF\275Z-(\275A\023$=\250A\241\274\1772\006\274j\0171=\3231\325<<\211(<\343\212\201\274t:[<\027\2037\274,T@=\2150\272<\354\272\255<\006;!\275\005\276\014=-y\037\275\302\274\352\273\212\356W=\021\014\"\274Wq\223;}\307]\275\227J\353<o\264\311<Ls\261\274\274\265\001\275\262\r \275\211\271\005\274dNT\274 \3078=\250\372\336;\027\340M\275\340\212\t=p\0103<\361\266\007;\214kd;=?\002<y\250\246\274f\254\221\274\3620\002=\215\2063=\220=/<\026\022 =(\307+\274\027A\237<\264\001 =:U\006\274\322P\206<\3473\270<c*.=\360w\317<}\317\305\274#\030\022\275\246D\223\273\277\337T\275\023\364\216\273\301I]\2757r\262\274\007\252\022\275i\263\034\275\231\236M=\374\265\234:mR\367\274\325pH\275\322\314\315\274a\354U=\"\246\356<\254o\222<e\254\367\274\342\177\233<v.\235<\247d^\275\025\216!<=\371$=\005c\014\2756z\365<\277\244W=F\231\032:R\026f\274\235\345#\275\037F\206\274\215\022\254<\020Hc;a\306\322\274\034\026\t=\375\373\366;\257\307\332<\r\343\033\275\255|=\275\022\342\321<c\356\003=!\200\273<\226\254\342\274sks\2740\365\024\275\367\217\305\274\265\252\360<\216\322Y\275\002\031\203\274\016^7=le<=|[D=k\365\006\274\216\221T=)8\230;R\333\202<K\0360=@\324\036<\"\315@=\360\031\035\275z\3214=9\274\301\274\320S\004=\n\272J=\256\373\t;\304}\025<\020\331R\272\022\271/\272\0303U\275\353J\000=\036\345\255\274\010\357\324\273\374\224\206\273\244\225\000=T\230W\275\237^P<\247>\257\274w\311\321<\303C\275\274\224!\315;\261\364\274\274\223\375\261\274S8P=\245\262*\274\037\246J=w\356\247\274\020\215V\275\304\325C\275\3316\031\273\022~\\\274.\372\347<\321$^\275\n\204\325\274:\270\005\274YU>\275\214\332\232\2748\0174\275\340\032\244\274\302\2705=\024\335\020=!|\000\275\244\0348=\014\013\262\274R\033\363<\'F\203:b\237\022\275\323\235\032\275\242\337\231;*\232J=\247u!\273\265h\333\273\013\206U=\007n\375<\265\260\264<R\335v\273i\375\233;\034/Q=\3375U\275\203\327E;F\030l\274\372\247\262<\233\213V\275\";5\275O\271\255\274\366\3442=<H\352\273\034\254\230\272\247r!\274\273\214\214<\376G\204\273\236\027\331\274\231\335\374\273\215\325%\274\275\367\233\274G\022}\274\271\031E=Y7\363<\202\273\206<\2563\354\274\002\353\243\274X\0251\2753\301\217\274\356i\334<\036\0062= /\233<u\002/=\273\241\217<\347z\370;\253\022\274<qX\354\274G%H=\306\006j<\271H\002=\306\264\362\274\265GY=`\242\310\274\2634\202\274\225FX\275\214g\344\274.\004\010=\252\333N=\363|\201\271\322\354\374\274\243T\307\274e\204\017\275f#d\274Hw\001=\370\243\022==\220<\275\311\207\032=\002]\017=\'v\266\274\215\027\027\275\303\001_\275\3362^\275\006\325&=\033e\016\275\360J\022=\231Z\375</{\355<\005}\265;e\366D\274\024\202\323<\307w\376\274\303\226Y=\350\264\221<X\257\020;\322\211\317\271n\002\021<]yY\275i\023V=\360\315\220\274\366\003L\275\232~\016\274%\032\260\274Y:\n\275\024<\267:\256U\002\275W\364\216<Q\251\330\274\346\351\020\275\242\252\001=\243\201\020\275\3553~\274%\016[=G.\361\273b\274\244<\"\336w\274\265\307\271\274\374s\007\275\235\000\030\274g\250H\275ugr\2727\277%=\006\374\204;\275\271\035=\312}}\274\317+\036=tv\264\273\241$0=#\n]\274\255W\026\275\344q\300\274g\302D=\362\233\033=\211i\\=7\017K=\007M\r=l\307\353;\250\324\351<\207\330\001=\224\273\030;\\6A=?\211U=t\360\274\2745\222\"\275\3170]\274d\337k\274\025g\312\274\273@\030\275]ml:\301\034\355<\203\334\365<g=\324;\\\327==\242Y5\275o\364\223\273\356\036\362<{\376\"\275P0Z=\313\020%=\251\275\354;j\006\221\273,\035;\275P5x\274n\273\246\274\347\265\262\272f\036G=\363\0143\275cm5\275Uu\020=\232\314\004\275l\373\255;\020\023z<_\037\005\274\312\t}<\022\302V\274\207\237\345\274\231-\035=\306\353\002\275\3361\030=\350?[=\276t\347\2742\360\315\273\270\360\026=\227zK=\r\316I<\343\322\342\273\221\014\010\275\310\214\367\274\247\r\"\275ht\241<p&A\275\305\030\256\274\rG\307<Q\237+\275\3050\270\274\034>\037\274L\371@\275\371\244?<\2149&\275\205\255k\274\303\244\026\275G\332\260\274|\250\240<:\'\016=\306\242R\275\220\225\247<z\213\343<\301\035\370<r\0350\275\202\327V\275\210\037&<?\225\307;\357\345T=vSB\274\254\331\315\274\226\253\212;^p\275\274\306\')<L\351\017\275\356\252\275\274\r\3325\275\234\343\311<d;<<9\004\246\274Z\252\035\274\325\033\010\275\300\251\036\274]\340\030\274\216\242$\275\301\345K=\327\365\227\274#\024\353\274\037\222\026=~\221\234\274w+\366<\345\262\373\274\3160\022\275\322\346d;\035\273\\=\336&\253\274\306\025y<\305\010#\275`8b<\360\271[=\254\000I=q\241*\274\204\323\366\274\305\233\321<\365\3332\275\213\271Z\275\177t\021\275T\314\016=N2L\275NtQ\275\270\000<\275UUM\275\343j\241\274\'\231\344\273g\241e;\345\304\201\274 %\263<\367\232\256\274(\016W=\362\032\207<N\343\240\273+\271\257<\267I?=V\351V=\022\360\216<a\3509\275Q+\273:[2\227\272sg\351<oG#<\370\322\022\275\311\256\021\274\215i\\=\314\201\003=L\245G;\177\347g;\235;\024=\220\203\277\272p\016\032\275\034\362\300\274[S?\275\343\223=\274\027vw<\205\356\246\271\270R\276<S\362M\275\225\336%\275?\377\'\275\301\236\301\274\014?\032\275\371\005/=\214G\221<\021\2658\274#\250\\\275\234\003\226\274\353\242\311<\236\371\371<=\345m;\264\370\344<\260\250=\275\310<N\274\"\032\030=\\;<=\211\200\031\274\301\233\352\273w/\022\275x\256\034=\224\000@\275\315\346\330\272f\001\003=a\271\010<\233\214\345\274\0264O\275\265\356\010=\302\354\003=\273-q\274M\r\032\275\345\347\252:\0052\277\274\331\225Q<J*9=j)\250<\262O\253\274\027\203\n\2757l\362\274\337],\275E\030\360\273\013\373T\2755\033\342;\255N\213<\000\233\007=\326S;\275\322g<\2756\254\341<\006\303\334\274\306&\r\2741\332\331<\313\343n\274P_\001=\206f\321<m29\275M\022\231\274\334\226I\275(\354+\274\366\031\205<\256b#=;\220\344\274\360:\335\2710\230}\274\037RW=\323f2=&R\003\275\205F\306<\230\033\005\275\037\3415\275U\377\376<\004\271\246\273O,Y\274Sg!=\306\370F\274\273@\272\274\207\335\271\273\004\207\240\2744\336[=V\0215=\246\203\241;\334\300R=H`\314;\\\n\022\275Z\364]\275!\371H<>X~<7\207\001\275\234\234\274<\226gq\273\024i\377<\221\215L<)N\322<\202pI\275:!\023\275\013$\303\274\362\203[=\272x4\274Be><\232q\017=24\273<A\250\r\275\320A\220<\222\242#\275\300\005\\\274\367\022+\275\275\323\362\274\037_y\274Z[\'\274\341\r\353<\025\000%\275)O[\275\234\344H=Y\032\031;A|\377\273j\331\261<\304\273\005=\344\036\010\275\300\307+<\375t,\2744\324\024=Tt\346\274\226\260\351\274\240\272H=\3477q\274\370FF\275\354M0\275w\223/<s\222\364<\202\217\025\275\007\336Q=\3515\\<\264/\275<{\007\r\275\217\373\357<\302\365,\274@\326\364<\372\200\245<a0\030=\372\217\353<\22681\275,\335\354\273N~>=n\007E<\022\342\373\274\257@B\275\341*\325;\007xA=\270\335\341\274\320\267J=fe_\274\3637\322\273\324\031n<Z\225/=\317\365$\274\255\010^=\226\027\250\274U\250\000\275\ta\035=\256\262\001\275\273\"\304\274(\005J;\007W]\2747\370\351<8a\331\2741U\212\274:\216<=o\345\362\2739\221\220\274\273\262.=\246\0347\274t!+\274\001\345j;\006\372 ;\004\210\031=\3627\362\274\236\005\265\274\335\005+=\242\375)\274kMU\274\014\273\'\275r\276m\274\026\347\010\275^\005p<\026\260\201<\177\027\016\275TK2\275\033\'/\275g\272\222\274\"\215\244\272\274\0135=\006\346\"=\246SQ\274\365\255\345:\212\362N<\206\345I<zS\324\2748\241C=\021:Y\275\346d\306\2747b\345<T\264\373\274#\337\220<\240W\230;N\260\035<\3116\320<\024\247S=\375H\250<\242$\"\275\353B\266\274\234\272K=#\271\333<7\255L\266\337\014\337<\214\334q<\016#\265<M\261\264;+Sx;\016d\304\274R\356l\274\024\251\023\275\350\260\023=&_\215\274\022z>\275)\361\227\274S\243\361<S\240\034<!\034\316\274\204mS<\201>\353<\262\3246=(n1\275\324$(={)O\275\003\317\201:\355\311\314:\'\356\026\275Q\206\360<\215\356\034\275J\266\033=_\035R\275\3751\230\274\210~\277<^\027A\275\020\233\204<}V\025\275\343\204\005\275\221\220I<_@\002\275:*e\274\013I5<-\037\221<\223U\324\273\017\247%=f\342\334<\271\356\311\274\257\005V\275g\225\240\274C\026H\275q=-=\310\2616<\226`\030\275\214\3459\275\367l\002\275\n\331\247\274\265\2675\275_%\032\273\351,\027\273\263\375C<\262?M=\317\347\345\273\022\233\274<\264\211\024=R\0255=\267\251\'\274\024 \026\275Ip\244\27437\022=,c><w~=\275Fp\335\274\217\001\234<\023~O\275\317S\261<\252\330/=c\245\336<sYX;j\317%=3\202\013=\351\031\222<1\025\003=\363\231!\2752\370\333<\301\215\302<\"}\337<\336\225\226<\346\314D=\210\t\340\274\214\264\227<\342 c<1c\341\272_m\220<&D\010=\013\000\025=\3558\002\275\330\033\265\274\014\225/=\340N\233<\374\243\023=E\222O=\2413\014\275\231\0268=b\263\355;@E\010\274\335\313\231<\365\301\225<\335\tH=!\376\227;=\010B=\365\001A\275\313\262\223\274\335\r\242<\256\340\022\274\242\200\337\274J\316\"\275\025\335^\273]\007\335;\262\265\353:.mP\275M\204\t\275:\014\252\274\372\023\005\275p\0366\274\315\222E=S\372\342<x\300\234\274\\\260\364<\014\206\364<\005\351\033\275K\217\223<\032;9=h_\345\274m\205\t=\236mZ\275\252\014\257\274{\277\372<\r\253D=\272$y\273\314\201\243<\206\237\326\273r\265\200<I\205K\275:\362Z\273\244\347\306<\332\242\005\275E\302{\274\233\201N\275-\014\010=*@,\275\220J\202\274_\240.\275\250\3200=\302\037\023=7\302\356:\356m\r=j\210\341<\314\221E=Xp?\274%\361\251;[\204\024=;3\262<\225j\353<\256i\000\275\203B\010<\354\250\263<\244-\356<\220\355C\275Q\254,\275w\002S\275\026\331\010\272\207\303\367<N%\035=H\322&=\\\232\255\274)\274\374\274p\257\220\274z\0142=]`\202<P\246\341<\212^K\275JW\241<\3079\237\274\216\265\030=\221J\223\274\035\306\026\275\310\021.\273\034z\366<2kt<T\307;\275\222\233\362\272Xh)\274\350)\226<\274U\016=\235\226R\274\345q\336\272Q\355\032=x\030\362<\007E\000\274`l\017=[zS\274\344\252\247\274\362\021/\275\244\177\304\273E\216\376\274\003\367\021<\016i\022\274\214\345\310\274:P\205\274\'\022\340;0\260^;A\305\361\273\010\275\231<7\030,<\2532K\275\026\205S=\002\013B\275\337\366\312<\244\346\034\274<\234E\275\257\3236=\030\201\020=6y\204\274\301ce\272\223\\\034<\235\307\321\274Z\036P=\2350\261\272\241_#=\270\256,=g\206g\274\364\2004<F!\250<A\366R\275\020f2=\257\327\255\273\250\"\021=\214\031>=\315\")\275\332\376B=D9z\274Y\312\365\273\213\240+\274\336>;=\241\276\206\273p\253\341<\001\255\351\274\211)M\275\331\010\363<I\223\"=\033\2520=\340\246\245\274\nz.;\271\370\025\2755\216\013=3\'<\275\n4\332;\025l\037<\230w(\275\005\361V=n\304\033\275\251\303\024=\326\272\243;\"\231\007\272M\222%\275e\364N=\274\013\264\274?\010Y\275|\0341\275.\317\244;\264rD=\327\213L\275\366\347\353\273\026C]=\374\230N;\263\202\360\274;\033\237\274\210\335B;\366\277\245<\304\363\021=\354[k\273\264O6\274\031CJ\275\322\320\025\274\373\\\334<\355 \003\274\n:\354<%\320\323:c\0236=Z>R<\304#\023\275e\304*=\354\3474=\0014\022=\207c\257<3\306\340\274>\007\314\274\224\256\314\274\343\2001\275\250\366[=\257\023\006=\205\343\375<r\315]\275\240\0249<\267@\356<L<\'=\214\304\230<\2315L={\264U={\014\334<\350\024R\275\224\363!=^\034\307<-\014U=\021\312\302\273\201P\004\275\031\201t\274u\022\001\275$_\366\273\002T\357\274]\3140\275%\215\001=1l\010;\370\211\003=_\307$={\257\017\275\r\372\312\274\210x:\275Hnm<\303\007\325<\340\370\274\2745\t\221<H\370\334<\354?\030=\356i5\2749\014\300:\341\257\334\274U\212\036=7sy\274\255/x<h\253\330<#\241\033\275\373^\276<\336H\274<\363\030\200\273\017\327\253\2743\271\"\275%\275M=\340?\275\274\341\227G\275\352\277\245\274\215\217\302\274\236\274$\275\3502Z\274\313j\027=\306\263\023=\026\025\032\274\0036\300<\341\215\337<c\3714\273\010\345}\2675\007\006\275\232\306\241<\313\264\225\274\373r==\016/\235<q\333)\274L\202N=\305\317\226\274\314\362\325<Xo;=\3711\021=\224#\224<W\200]\275s8=\275QD\321\274s\341,\275H\253\023=\263^M=i\327P=\003\250^\275u\333\320<\225\202\246\274\216\336U=\340t\n=\347=O\275\212\207K;\367\200E<$G\016\273\241\251#\275\'\301\033=\232\2357=\336\177\240\273\272\321*\275\275#\330<\334 \236\274k\232\020=\301|\025\274I\0044=\225\034H\275j\261==\235\224<=\215\347:\275\003&x<qn\030\275\205l\275:`\207\027\275)#6:9\264\214<\030q\371\273:\247\t\2756\031<\274\315\0023<\2057\305\274/ZK=un\013\275\200;m;R`\202\2726\263+=\372\2733\274`\352#\274EfA\275J\255\321\274\357\326R\275\034\031#=\267\274\345<\250b^=\370n\202<k&\016=F@\027=\362\262c\274\220\223\201\2742FN=0\345\274<\2206\212<+\256\377\274\301\347U=\016\314\017=\371\237\306;w\344Q=\240\230\256\274\304\336:<[\321r\274\257&*\275\275\0231\275:>\001\275\033\021\021=\277_0\275\250\t:=\374[\345<q\350\\=\257\237\277\273\245\244\014\275\215p-\275o\246\217<\367\332\204<\"\3554\275t+\242\273\235k\365\274\343\357x\274\251C\003=pi3;\225\376\021\275\r\203\335<\264<\252<\005\347\031=\240\272\276<\320\t-<4\252\032=\326\350L;\324\r\224<;\333\364\273\204\364\222;\026{$=){\267\2747<\000\275\0074_\272\016\220\240\274pI\034\275\351\337\'\275r\344I=\211\3571\275\314z8\275\237\363\n\275\366\266%=\337\336\301<\0132\363\273\263\006\231\272RBH=8\2258<\035X\242\274g\031\022\275i\324)=v!M\275t+J=\314Z\n\275\243\212\235<\273\310\263<\325\346F\275\275\243\025=\263\307)\275\315\014\022=lDB=\336\376\024=n\242%;\274\270\223\273-\362]=\211\261^\275\3210[<+\3345\275?7(\275\350\006\031\275\223\255?\274\246?\341<\2426(\274j2E=\017\200\315<&\213\004=\246\250D\275\333\337N<5/\026\275\\\022\205\274AgY\275\261\312==[\020\320\273\2636;\275\202\351\331<\322\244S=\3635)=L0+=\317 \347\274\201M\375<\212\377\345<\222\020\257\273c\250\355<\360\0373=\277\312G\275\266\022+\275\352*]=\267\351G\2755\322\310\274b\006.<\353q\346\274$VA=\300X\340\273n\305\210<\276P\027=\024~\232<\343\2176<\350L\315<\277v2=\023\334I\275\3420\003\274\023|\213\274 X\023\275\035\2226\274\034!\266\274\274n7=\373\201N\272?\010\217\274X\035\236\273y\004\007\275\262*\r\275nh\234<\202-\\=\\\355\007=aw]=\325]\'\275\323?i\274b\215\367\272\030Y\006= \225\330<\221\177f;Y\233\035=\241\214\007=\345\307[;\016*\316\273\3250S=\370\373\347\274\302\207\t=\217\203\023=\226~8\275\300F\274<\013E\252\273\377\315\000\275\205\217\002=\026\004\021\275I\030\320\274\247/N\275p}3\275\346\257P=\230\254<\275\3651\204:\226R\305<\010\272R=:X\n=\243*\027=\204I*\275%\351{<\037i\004=\326\\\010\275D\nK\275\305\277\024:D\316\245<\213H\342\274\r\300\r\274n\317/=\234\353\261\272\005\2540\275\306\027\325<{\3409\275L\026\\8B\270\364<~\304\026=JA\256<\034\345B=\204Q\321<8H\031=\303]P\273\345\025\351<\3232 \274\314\202\362;<\037\366\272\310\277\025\275\350xD\275\005k\005<\250\377\255\274Vu\266\274C\006\024=\3729B\275\270\365@\275)\2766=I\n\275<\257\226\000\275Z0\020<Y5\024=\256x\025=\020!+\274&\\\024\274\302n^<1\003V=\020\230\325<\302v\367;\345Y\201\274\337\233S=sAY=\351`J=\257\0100\275\334.\327<\230\003\304\274.\324\017<\265\n\005\275\327\263*\275\2542%<\247a5\275\260\346(\275V/#=\304\216\241\273\200w(=\357/\205<\r\3235=K\360\223\274}\035\353\274,\2414\274\326\333|<\312\\\264;+R+=\364R\254\274m\342\350<\313\352\265<B\317L\275t\371\006\275\370\017U\275F\"&\273\"o\274\274Rg\330<\322\375)=S\276\206\274\350\022z<\213\337\\=\01723\275\243+\036\274x\357\021=pm\000=<\330\227\274\206:\232\2742\225;=\242\177\237\274\214\203\r\275\324\366C=\255\017R\275\236 x\274\306\224\207\274\022\265\236<\020\261I=\0147@<y\020\017=\335\020\262<\211BB<\240\257\n\275\002\344?\275\207 \364\274\317mS\275\252(F=\3556\231<\315\244\025< Z\006\275\226\002\022<T\225\212;\rx\343<\230\250F;\375!\233;E\266\233<N\227\217<\375\240w\274x\207\315\274\335\373?=H[\032=\344^\253\274\205\376#=\335}3=\323(\353<\371\235\021\275\314^\262;\330\363a\274\005n\313<^\022\304\273\362&8=\263t\003=\007OR\275\331\3644\275.\331\031\275\336\353\325<%\306\005=3\034\255<\004)#\275\006\234\t\275\001\217\215;[=\035=\030\276\237\273\373\245\025=o\033\274<\311z\013<\211w\202<%i\"=\211\311\351\273\362}Z\274\004\255\342\274;\337N\274=\'\014<\3464\024\275\330z,=\205C$\275\362\003\330\274B\307V\275\301!:\273\220\002h\273d\317\214\274F\317D<\320\366\036=s\027\215\274\0253H=\020\261\273<\017\3113<\307\220A\275\225o\031\275\000\250c\274\025\201\336<\261\267\t=\224\346\020\275y\342\246;\364 \022\274\r\356B<,e%=\007t0\274\361(\255\274*2\367;,#\363\274ve]\273\337\356?\274\377\005H=?\302\006=\t\356T\2759@I\2755Ee;\372\210\265<\317\344\233<)\363\312\274\305\365\353\274\005#z\273\275\001\031\275\322\216:\275\322y.\274y\343J=\314+/=/\340\265;\262J\224;\255\230Z=\240\225\027=\000\355\"\275\202\247\204<\355R\324:Cw\227\274\327R\214\274*\361(\275\001i\372\274\257\363=\274\022\032\226<\305\266\003\274\024\3123=\225k\"\275S\351 =tX\007\275\360\214\315\271\010&\036=\006T\021=\215:\323<\347\200\317\274\2159F\275}\024$=\217\220\245<\002\036V=\243\037\341\274`\227Q\275#\013\230\274s\224\263<~\311\016\275u\334\312<\273\025\032\275H\370\032\275\332f:\275\343\331\177\274\251\241\010\275\024Xt\274\365\307\340\274\365D!=\300\231\n\275\031\314\235\274\275\366\337\2741J\263\274\322m\037\275\307\234D\275\013i}\273\262\363\366\274\353\242j\273ey?;\026\201\n\274\237\245\344\274M\251V={\373\014\2747v\352<\355\207\013<\321(d;\222\216\364\274\363\'D=_\241\004=\027\306\r:@\335\221\273\275i =\351\266\370\274g@\'\275efQ\275\026p\357:\354Y^\275\357x.=\356a\371<\242\035\006\275u\215\210\273\225[\256\273\014\351?\275\253\237\367\274\004N\005\274\035g\013\275&\345\366;L\223\014=\370_\263<2@X=\344\364,<N\362\324<\326\330\315;U\033-\275\0015P=[\375\323<\240\305\371\274 \272)\275\354\032\243<\006e\035\275\001ro\274\370\206O\273L\2644=Z\346\354\274\245\345]\275\177\314\256\274\230\245|\274\201\301H;\307,\243<\317:)\275\321\354z<\016e\323;\346}\365\274\'x&=\257w\227\274\344\032,\275\330\\\014=`2\216<Z\2308\274w\263E\274_]Z\274\220\022\213\273o\265\356;\334\353_\274\235\210$=\302S\000\275u\256\010\275]T\t\275_f\024=\3148\014<\237\200-=\366|)\275\224\365P=\322\351\027\275\25116=\337\037T\275\241\236R=\345\3616<d\307\230<\364cM=\207\237\014\275\322\346m\274k\237Y=<_C\275v\344\373\274^\266;\275\257\311\276<\2661\014=\314\025\245\274w\364\302:\007\352\207;}AN\274\3745\010=\304\014\002\275\363c\016\275a\340);\255\241Y;EO#\275\247\313\r=x\343L\275,\004\345;\333\207d<8\000\026=\272\367R\274]\014\216<X\203\226<\1776\002=q\3662\275@\375]\275\223\354\215\274\332}\261<\336\033\344\274L\020*=m\277\375\273\320(\035\275M\342;=\"\332T<u\005%\275\016\355\366\274\005\260\312<\016*K=\013\n\376<\242\3012\275*\213G\275VP[<\021;0=\260\376\226;3 \315:\275)\014\273r\336]=[ \230<\220?8=\332\2579=\021:\224<\344/\303<\253\006k\273\364>\024\273U:?\274\362\r]\275@\377\017=y~U=\330\233T\275jR\310<\337\255\030\275/3\246<\331\211\035\275\n\231\314\273\353s\005<\204\226Z=\233N\277\274\340\216=<\276\013<\2756^A\275\201\257\276\274~\032\225\274\360\nN<\367\007:\275\230\213(=L\013\244\273\316\t\273\274\226\037\247<\037\017<=\247\336(\271\246xT\275\327;\t\275\2158\214\271H=T\275\2456$\274\"\213*=\327p\343<\225\0323\275\017R$=e\033\206<\265\336\233<jY[=\316\027\365\273\266\242\342\273yh,\275e\366Q;\030\220\241\274\021<\253\274\307\257\326<\266v\230\274r!#\275\277\007\235\274\332\313\365;\004\030,<}\240&\275\005\360\251\274\210\307F\274\222\205\2039\003\002\001=\334\335R\275\251J\272<\267G\024<n\222K\275\017\262\255<j\372\352;\202\327\277\274\024\177\010\274\200\255\026\275I\201O\275\306\232\376<\262C[\275k\021\250<\204w\033\275\022\277\264<w\3124\274Y\232\226;\272\324P\275\301\034+={\006V\275\215\202\214\274\343]\006<\270\310\375\274q\005\"=\023\212{\274i\370E;\200\232J=\230\340R\275rW\343<w8+=u\367\343<l\315\343\2740\232\250<p\205\331\274\357\375\021\275GBI=\316\361\000\275hJ\037=x\000\024=(v\034\275\nl\217<\2547I\275\254M\251\272/\241\007\2755\364\026\275\375\345\324<2w\037\275\313\310m<\025\216B<\004\364x<\343\025\037\275v\tW\274r\320\321<,\3341\274\255\263\035=\261\332\245\274XL\000=\302\031x<\200IZ\275\007\027U=\333\335\003\275}0\004\274i,\245\274\3526\003\273\323\371-=%l\365<\233q[\275\200\3050\274\216\014G=\324\335\377:\021\337\341<\357C\255\274\222\021\250<*\2210\275\211q =,\356+=\252PA=\255\366V=\331\333X\275d\255\021=-O\t=5\365\257\274\313\314[\274B\262=\274\231%\331<\262\201\220\274/IQ=g\313S\275\312\322\327<\300\272X\275<\327!<\032Q\021=\024\354\365<\302&\017=\237\002V;b1\026\275\'I\376;\214\351\001:5\3133<\004\2550\275*\254\025=\317\264Q\275\000\267\'\275\326l\020\273\002\320\2539\022\365\304<\214\022\315\274Nr\314\274\351\241\025=\301\316\207;*\334\007=q\217x<\274\302:\275^K\033\275\266+\261<\250\237\\\275\357XT\274\215\376\205;\"he;\241w\031\275<\351[;\326\301\253<bZ\371<\233\2259=\301\374v<&\217F\275\316B\252\274\224\231H=C\346\321<\270H\371\273\032\'S<u\005\322\274\014CM=}\302\332\274 \024<\275\267\345;=m\300\222\273yd\r\273\233\335`\274\375z\276\274\237C\021\275B\'\350<=\327n<\225\004\r=\224\260J=\301/x;x\276[=\020%\t\275\275\343b<\250C.=\250\006<\273\370\317\016\275Y\036\337<\262\244B=\300\223X=\3751\231\274\323V\354<?\321y:\234\202\273\274\241\373\024=\266\225\274<.oA\275\2038\311\273\316%\004\275\252UW\275\226\261&=\005\024)\275u\013\266\274\207.\251\274\255i^=\363,]\275b\264c;\206%@<\247-\201\274^\336t:\276\270r<N\304\037\273\276\373\277<+\2429\275\275jC\275\353\340?\275g\352X\274\002\314\357\273\330C%=@x\243\274\335\300\307\274 f\367<\032\350Z\275\2154J\275N#\034=/\336\'=\001\217\315\273\313\232\005=\025\254\010\275#\177\227\273\363q\247\274\322\222\320\274\034+\247\274\220*\005<\301\321\241<\331\342c<\361y*<W\264\230<\357\3513\275Z\226\361\274\254O\247\274\0340\003=\241d><\330\021C<\021\276\351<\206\233-\274\023MT<\303~W\2751\220:=\031o\336\273\223x\317\274\224\007\231\274J\335\033\275P\3206\275\372\215\231\272\027\303\351;2I6\274\003\304\006=\323\254\342\274\353v\013\275\2408\372<d\000I=\376\032S\274\372\177\340\2741\335\341;H\275$\274\350\n\354\274\277\266\t\274\237\221\342;\373\352E=h\333\'<\213\0270\273^bJ=\241\\G\274J\240\356\274\334\370.=R\226\243\274\355\324_\274\354\334$\274ocS\275\033\234\224<\205\2100=E\010\345<G\363 \275\264\2414\275\300T=\275f\205\307<\330\300^\273J\264\231\273\224\037Q=\270OS<\325.T\274\306\360e<\270Q\264\273\031.\036\274g\007\030=3?D=\017\376\025\275\356m3;\357\333E=LY\327\273\217\373d<\0220\034=5\tE=\333\334`\272,\366\347\274\255\337X<\227kL\275\300\022\227\273\003\251L=E\316>\275\024f\300\274\037\212\325;\024\273\223<\316\344\302\274\317\233\353\274Q\354\006=3B\036;\351B\346:"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
