node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2000
          }
        }
        tensor_content: "\3559<\275\340\314^\275\350\355\344\274\252\330\002\274/\346\320<\034\2001=-\316_=\310+*\275_\357k9\321\004+=\224]\304\273\317)N\275\' \272\272\263\n\247\274\020A)=\231\221\243<4\n^<\322\"Y=R>\263<\217\237\032\275\303r^;\3441\252<\257\372\361<\313\310\010\275-R$=\306\224\237;1\014&=\341\371Y=N\257M\274\"Q\362;P\216\026=Zl\360\274\037\354B=\225<\024\275\331\301\343\272C\241\275;\277\035,\275\362\252?=\331\366\337;NYh<\243P\225<\3140\322\274\255\367G=\242\020\255<\253{\002\275,\036\310;l\014\317<\020\2334<g\342$\275\361\340\346<\027\3761=\230\017,=\375\0244=\350\300:<\'nX\275\241\n\221<\222\233S\2758\300\305<\262B\035=\314\r\025=\n=r\274\235b\232\274\365u\340\274\033\262\024;\262\252\013=\0201\262;\247\324\355<\246\234\325<uO\366<\206\332\235<\352>\252\271\265y(\275i%$=\310\'O\275\334\324d\270\ti\376\274j\3536<\004\314S=^\305\004=\227\352S=\253\223\260<\207~L\275\351k{<\312\325\333<S=,\275|\263\020<\030\260!\275\246\246\024\275\313\317\036\2753TE=zi\277\274\006\315\030=\352)_=\225a\\\275\271T\261:~l%\275\014yG=\334\237\227\272t\237\225\273 \216Z=\303I\214\274\364$\022\274[\263\272\274\205\023\320<\273%6\275\341h\007=\231\254C\275\020\271\251<\033\230\270\273\316I+\275C\357\r<\231\251s\274\021\353\010<z<\017=}\337[\274\302\206:\275\3576\202;\006\032\001\275W\3433\275\301KA\275m\337\033\275\306\000\335\274u>\037=\373\221;\275\276U\304\2744\263#<E\2750\275\25144\275\346R_=\325\212\352<\253\240>\275\3100\'=e\3659\275\262\203\327\274\031\355\343\274\354)\276\2747^\365:\2327\004=\211Y\013\2751l\364\274.\314\000=\332\320m\274\262R\035=\'\316\335\274w\277O=\223Q\360\274\003lM=\\\224K=\320C\226<;\314\254\273?\230\263<\311w\030\275\372\201\324<m\033\255\274\331\200\014\275\202\266\340<\327\260\373<zU\023\274I\325\375\274\322\307\245<o\210_=\301\204\227\274\023.\t=\020\233%<\262\"\257<\266\356\214<\210\243\236\274D\357[<}\374\350\274D\026\232<\353}-=\307\354\\<\211\235\024<d\256\0278\322\314x\274\306\302\036\275\002^\322<L_G=I~y<\355\215\226<\r\315w\274\246\003\351<\272A\321\274\336\305Y=\233\231*\272\354\346W=\356{]\275\302l};\206\360L<S\035\"\275D\030\222\272\3514\034=\276\3369;\270\236\226\271\217\177\026\275\275\"\372\27425L\275\352p\266:9+\013:\033\302\020=\204\324W;\374\207-\275 (G=\030\364\233\274\223\240 \275\362\2729\275\010\251\232<\323<\351;&40\275\003\253/\275\274Y\035=\360/@=\306\360\002=[\224\n\275f\345y\273A\344W=^\232\177\274\370\377\214\273\303\327\310\274*!w\274\305\206\255\273\014c\030\2755t\335\274\237\010Q=\246\255\017=7\325\217<\370\352x\274\343n\024\275\232DZ\274I\035\365\274\302\227\332<\345\022(\274\267\233\244\274\026\304\002\275\352q\332\273l\246\367<\245\365%\273\321\3179\274\330\024\021\275\210\261P=\371H\006\275\262,\244<\013_+=\266\231F=\020\314R=\203\373\027\275\275B\027=\203\244\315<h\001F\275_A\262\273\022E2=t0\010=Y\231\245\274@\026#\275v\261\355\274\216\236\272\272j\306\007\275\250\265_=t\333\331\274\213\317&=\026\265\r\275:\243$=\314^%=\367\230\313<\217\246+\274\236\331;<\373\303\270\274&\311\334\274\371\'\226\274qs\262\274\2260\010\275\300\252\024<\263\212\243<~\373\014=\364\363\024;\340\2009\275\307\026\304;\363\274J=\233\013\001=\234\327\370;\347W\231<\007\211\202;x(\226:o\340n\273(\0222\275\215\033\014\275\003\3403=\306]V\275\237\227\262<\374\243[<\223X\n\274\211c\005\275\213-\205<_\306\225<=\334P={\020N\275\376%!\274\267\323Y\275\275\361\236<B\306\223\272\362\010\014<\025B@\275$0\205\272\263\020T\275\314V/\275\320\002O\274\004TE\275\376\374\014=\014zR\274\374q\267<\253\254\004=\006\310\326<Dg\324\274[\262\026=\335\3054<\004#\030=J<\035\275\t\316X\275\274\002\263\274\332\314?=D\375\206;9\204\232\273\025\205Q\275P\371W<\250\332\371\271\337\311b<\272\243\270\274?\347\332<=\215\333<\206\255\010\274\255@F<\256\333\315\273\350,\316\273\021\020\036\273\303kT=\270jV=tc\017=\233\302\003\272\331\203\337<&\243X=\356\343Q\272\030\206S\275[\177\354<\220\361\263\274x\265\026\274j4E=\020Ll\274\344J&\275\366\324\036=*\207\035=\2426S=\000\224Y\275\310D\367\274\247\242\314\274}\323\021\275\020\213N=\353\217\321\274\025aV=\254\342K\275\255\324\323\274a\252\004\275O\237\366\274\027H<=\306\316M=\257:\337<\323\361S=O\035\312<\264\0048=\217\304\336<\340pR=\332gB=\332\241\207<}\375h\274\362\337\003\275\231\315\304<\240(\207\274\233\221=\275\214\267\005;k6O=\335_W=#\016\306:\334\037\370\274\003\374\002\275\177\2114\274\260\020\242\273q\200^\275\334\227\014=\202FO=?,W\2755\215\305<\217\302\035\273\334\231\247<\322\274S\275\024qp\274\316\312\233<\250\234\234\274t\035\204<>\237\302;u\336\014\275\004\253\236<\312\032\331\274tP\262\274p(K=H\0167\275\237\226N\273\204d\024=\004\017\017;Lu\371<\373|\t=>#!\273\354RQ\275\233\202\n=\006\334\253<S\203\001=Hd\236\274\010K\220;\t\206\003\275\003W\331<\367\2317\274\366\301\210\274\020\313\335<\267xI\275\270J\261<f\251\013\275\351B\264\273\217\262<<\217q\022\275;\311\213\274-?\353<\033\236$=\246\3348\274\263\376V\275qo,\273\360,\021\273A\232\346<\032\366\313\273\236\335\213;D/9\272\r\3733=m\3274\275\211NC<L{\237<\226\007\247:\242dZ=\373D\211\274\327\250\001<\316&>=G\223\033=6`\026\27513\366<\255?\211<\224\306\353<0\277.\275\313\356\336\274{\002;=\344\000\023\275\373V\201\274yM\305<\315D\303<\232\214*\273\270Q\023\275\001L\253\274\036\341%\275\\&\332<\263\310\002\2755\323\311<\330\304\001<\032P\002=\242\327\210<\033\2103=\343\273\213\274\364\262\r\275\3306-\275\222\225\024\274T\275\027\275-\326Z\275\337\r\234\274\371nZ\275\246\003t\274\267\213G\274\215nN\275\343s\372\274 \034E=\252\026\"\275\025\035\340\274~\277\033\275\275CV\274\n\021\375\274D\t\025\275\217@\336<}\235\245<a\2461\274\271\340\373<\363\376P\274\016\310\0009om\305<\314\205\227\274K=\217;\336\344\201\274\363\004$=\2609_\275r\000\022=\273E\354\274\243\274\217\274d\030\240<\267\235\224\274\245\325>\274\375\242\316\274\222\322&={\032\305<&=\204;\023h\017<0\275)=\242f\0278\226\363\350:~\223E=\347\025^\275\352\264_=|\024\307<$s\343\274M\352\326<z\226\240<WU\267<I\262D=\2543\226\274\352\332G=S\307[=\305\271\212\274!A]\275\336!\003=\210\342\341;\230q\210\274UkD\275!^\243<Q\331\'\275\356\007.\275\300B-;\311\264\024\275\232\310\320<\274\207%\275\315\333\004=\336\322V\275\252[<=+\005\333\2721\377\273\274\377\250J<\336\201\003=\250\323;<r\027\203\272\033\352\024;?^4\273\226\303l\274\335XF:o\351\024<\214@%<@\277\312<V\215N\275~\201\332\274\0000\240<\335\347\251\273\374\001\032\275\252\263Z\275+\020\006\275\0042\332:J\200\331<Ea/<l\303\034\275\020\376\235\274\367\265\344;\340I\2129#\243\300;\360ND\274\336+2\275 \267/<\023\177!\275\327\177\017=\026\313\221\274\020\222\303\272D\3470\275\255\3451=-\016\300;|7\211<&\276!\275\307\363\'\275\362\234F\275\351J\025\274c\225\\\274X/4\275I\277\324\274\035n&\275\237P.=\030\374\033=\377jL\274\256\255\032=\213K[=\tRU\275L\326\026\2741\036\t=\264}\347\274$6!<\377\342\017=\001\214\350\274\357k\257<\230C\026\274FYK=\005\315\311<-\263V=x[\213<\207\200 =\222-F\275\010O\001=\024\224\262<\336h\234<V\303\337<\330\372q\2746F\031\274\202\372\354<\316\227\370\274w\2554=\237=\005=\003\320\033\275\260V>=\273\256N=y\341\327<t\316\236\274aWo<\034@O=\034\260\321<x\216i;X\223\240<\242\3523=\007\275#\274\033\376\351\274\352\367R\275W\307^=t\250)\275\325\003\006<\3049\260\274\205\324\345\273(\342S<A\233\003<\020\205\032\275\013\213)\275\325\336\021\275\232\260-;`\355\305<}PR=\323\246\027\275\2513D\275\301\330Z=FM*=iQ,\273\301t\347<\035i\023\274\"4P=\275\350\250<*\t\240\273\243KQ=\352\3104=\275\333\013\275V}\033=\00783\274#S\351<\243=\340<\261\3443\274\036\253u<\213\220\327;y\002\206<=f\020=v}\221\274\031\210\311\274[\312K=@\372W\275\034J\004=1\373\030=\t[@\275w#E\275=\200\337<\367\236@\274>\020U\274\212\260S\275\200\301\266<9b\'\274\000\303\220<r\271 \274\025\n?\275\005\344\031<\372\177\251\274H-\312<\312\232\213\274\'lL\275\262T\364<Z\037\304<e\\g<$\366O=-q!=\243\2645=9\303R;e\320\'=\207\312\341\274\224\366\215<\\,\021=j=\337\2741p\377\274\222\035\267:\336\245\345<A\347]\275\340\240(\275\227\317\300\273\273:\211\273m\254\000\274V\225T\275\026\034\007=\037\030^<\255\271=<\311#;<\316)\026\275&l\231\273\267\035Z\275\010\240A\275I\217T;d\304\311\274\310\311\025\275 \204\003\275\355\rE\274\344\022\210<\206\002\250<:\331\034\274\032>\000\273\004\\K=\022\354\022\275\273\314\350<\336\352\026=DO\303<,Js\274\252\324*\275\037,\374\274V\000\265\2736\000\354:\214\334>=\376O.=J1\262:\3543\230\274\341\213\t=\313\311\031<\257%[\275\234n\320\274Z\001\\=\354\302\373\274\224\354\030\275*3O\275\370\245\220\274\367\260\326<\345\024X=\204\362\370;n\2120=\306\3055\275\013\234\223\273B?\276<6\336\033=\2169[\275>\340\310<mq\013\275H\000\360<U[\264<\005X.\274\212\340\307\273\025\000\203\274@\257I\275\020\243\001=\253\300F\275\227U\323\273\263g\346<\027\214#=\203\345\003=\212\326\033=\327\275\"=0\025\017\275\354*\026\275\224R\310\273\317\005\003\275\332\177\306\274\263\240\364;U\266Y;\226\336\"=\3029\376\274\272$+\273\217\376\032=W\237\242\272F\277\202<U\023a\274q\005E=\364\3456<\230\032\366\273\270\263\370<\013\240\257<\305\333\371\273p\201\355\273`%\032\275@\2654<\273\361\016=s\225\345<\005\237\321\274\003N\277\273\356\303<=\307q\026\275)\"\005=\374\215\377<\207\215*\275\355\240\006=Xl\"\275\261\017b<\226\365\006\274$\372W=\003\211\\=\014\023\350\274\250^\257\274\010\267\022\2758\2753=,\014v<O\014\341\274%\nW\274\021&$=\352\341\370\274\213S\335<\315\262\212:\316X\020<-\240?=\3457W<\352;\315\274P-d\274&\252A=v\035_<\214\201\311\274\316\232\n=!\002\004<\374R\261;)\311-<Rx\335<\037\255\270\274#\347d<\260\034\202\273?R\000=6\304\003\275\224J\035=8m\004\275\361W;=\336a\016\275v\306\326\274V}\327\274\204ha\273C\244\264\274\212\034U<tS\202<i\3413\275\n\001\025\275\013!3\273\220\223\243\272\267\233W\274\224,\336<w\302T=\322\356S=\215\230\262<W\241 \2742\0076=\256\244\037\275\264\313\010<\325a_\271\355\3369\275r\214\367\274p\"w<\220Bv\273]\0214\275\247\224\023\274L[%=\225\203\t<L\030\206<+\354\364<\013`\000\275\262}g\274\340`\320<\244;\365:\316\3462=\244i\251<\004\221Q=\005\3266\275nOA=rS\244<\033\002T=\300\370P=\202\0011\275I\210\315<\037~1=\244\342\320<H\3307\275 \007\277\274}L9\274n\243\265\274v\307B\275\310\247\324;\010\t]=\251\230A=;\276X\2745(_\275\305\316\364<0!\234<\013\372\030=\321\310\207\274YXZ\275\261\337L\275\317bl\272\000\007t\274\340x\206:X`&\275:\316\2639\373\244\314\2748\341_;\226\264\016<@\206\027\271U\337\"\275\360\335\316\274Y\036\003\274\002_\267\272\0018 =:\206\361<I&\374<\260vG\275\203\t\211<y\234\303\274\251T\016=\364\263.={W\014\275\274:6\275\247\240>\275\351\211\330<\033Q \275\033\252==\266\006\371\274\027\310\021\275\177\302\367<\257\020\375\274\361\253<=\275u\r\275\003g\000\275\211\274\331;\020\256\t\274\356\211;=~\033\257<\245\312\251\272G\3422=\333\316\325<\311\271\001<+\205M\275\037T\306\274\351\322\375<?v\300<O\277S=\206\210F<\362\313\300;\022U\003\274\240\300\007=\356D\202<2\315\034=z\023\344<@.\022=\346e,\2742\n\253:\247\237@<\017\237z<\207s\003=\010\306\n=\026>\346;\260\024\206\274N\301*=D\311\262\274\275\024\006\274\022\266\017\274\240\356\033\274\213\203\350<%\017#\275d\177[\275vc\365\274F\331\340\274/:b\2740\375\346<\202u\302<t\315\223\273R\rr<\236\2429\275\021\016_=1\372\346\274\220]C=q!N<\304\275\270<\002\234U=@\331V<\007\241\272\274E!\210\274\245\371B=\217\251\376\274\005\335\267\2746\013\007=\204\365\027\274\204\362\"=@\177D\275,>\213<\212W=\274q:\023\275\026\3374=%\345\244\273\221\352\204<9l\254<\277&I<K\347\361\273\315(\r=\266>\275:y\367\226<S\346O=\342\324\356<\334\270Y\275\357\307D=\325\224q8\263N\376\273\212\250\365<\217\362*\275\302\374\021\275\261\313r\271\221\344\271\274\030[\'=\231\3339=M\212\276<\311\375\262\273\356}\300;\307\264==n\203C\275\021\255H\275\000\371\337< \330\337\274\206\245d\274vE&\275\007\241\214\273.y\022\275Jl\354:\323\305\203\273&\356\031<\316\226\346\273\252\377\323;J{\034\275\337\321\017\274\340\221I=\302\010\300\272J#i\274\345,\276<9\275\265\2745\204\336;*u\340\273\322\355\254;m\254\201\273\'\336\351<\200\006\277<y\224]=\352\223\002\275\346\220A\275\375m@=\320\\?\275zP\324\271\351\333e<\272A\326;i\003\005\275\222\323\2329%\304\315\274\274\313\334\274H@ =\241\205V<\2034(=\3345\253\274Y\262%=\345M\r=!\\4=]\177\377;\322)\264<\234O0\275\354\306\224<\022z\337\274k\264\002\275\002\200\260\274\323\376m<\270\036\260;\337\327\244<.\325\003\275\222\001\373\274~\3419\275\321\337\014=B\024\343<\256\224\375\274\005y$\275\021\366\376\274\364\017\242:N\304D=\233gN=\214\231L=e#\354\273\327\264;\275f/L=K\317\230<\350\213\211;\272\263x\2741\366i\274\234\254\023\274\271\305\036=_\264\013\274p\" \275\320r\'=\277\201\300<\252\224\024=M\361#\275z=\000\2750\017\214<x\266\265:\347\233E\275r*\027\275%\033;<Z\004\265<\323v\346\274\246\242\323\274\337\312Y\274\313\024\034=\344C\026\274\226\360\367<\277\221\307\274\010#\031=P\222\365\274\227\237C\274=\350\313\274\366\253@=8y\032=\276\203\232<\376\264\327\273\2037\\=\273R\002<\246\034\324<q\241\370\274\273\2738\274\0102\027=\251_9\273\350\2668\275\353>6=\246\3068\275\327\023\\={\247\003\275\307\2106\274\254\377\003=d\373\265\274\212\324a\274\352B=\27532V=\273 9\275T 6\275=\033\301<\007\246\232\273,5\263\274\374\304\264\274)\274\200<=\027\312<\326\347\232\272\360\3225\274\263\366\333<`\220O=\356\266.\2751\035\033\275\275\321\t\275AL{\274-\n :a;6\275;\366]<\324%m<\250<\356;\245\1778\275W\216\025<w\320\205<\341\344\356<?\222>=KEU\275\234\204\247\273/\037\205<\204\'\"\275\330\334J\274\204\270\221<\335uF=\321\006\004=\201i\271<3\221\005\274\027\373Q\274\256\343\256;\217V\003<\353\314-\275\214\353\030;]\232\272<\346W\210\274\232@\272<\240::=\350\335\021\274\350\"<\275`:\310\274\234w\246\273\342[d\274;f\205\274$\204!=x%\306\2737\000\r=^\rC\274%o\010\275\357\203\037=\017\312J=qnJ=u,O\275\006!G=aAC\273\234_u<\331SB<\250w[=\344o\333;\367\317\260<\367Hz:=\244a<\333\355O=\275\247\214<.$\'=6E\000\274j\313\326;I$\031=\325\251.\275\235\275\350<\215\306\'<\266\360\276\274\213D\010\275\037\244\253<I\274P=O\265(\275\312\3132\273\315P\303:\271\010<=\037\330g\274s\276\204;v\251 =\333\207Z\275\261\305\346<\252mU\275\304\352O\272\375 Y<K\2005<\346\377\264\274O^7=Z\0021<\351\367F=\374C\034\275@hN=TP\007\275\036\201\033\275\200MS\275\335\344\263\274\302\013-\275\253\245\240<\334\213\326<2\367\036=\304F^=\275\027H\274DJ\336\273\204\323\035=\370\013]=\243O\037=F\220?=#%\230\274\260\0146\275h\235\203<\241\2006=\265+\277<\257nb<\034\272\005;~W6=\226\261B\274\331\361%\275Rs\334\274~\"\001=\306(\304<B\212 <_\376R<\035h\345\273\240b\324<\226\363\177\273q\305J=\352V\036\275(\2358\275\275\272\262\274\371*\375\274\021J\"\275.%\376<\035\206\034=\352\341\347\274\331\014\240\274\206\376\311<\342Z\t=\232O\325<\204\244\302<\317\277F<\364(\"=\331\017\313;m\322\026\273v\356U\274\204\224\344\274gm\335:\263\3471=|\2007\275G\234/=\221\334K\275\225\275V=\355\252\272<\305!*=\320g1;>\270\236:\031<2\275\032\224\230<\373\253:=\256W\337\274\361wE\275,\007\\\275\254/\207<Il\332<\"LP=G\273\264\273\332\373z\274]\246\2149CG/=6\247\340\274\311{\270<X\304\204\274\330\322\367\274\001\350\335<\336%q\274\377\014\016=\233\366\352:\344\330,\275.\371\020=\354\265\014;\220\332S<j\025\022\275\333\005U\274\254\315A\275\335\237\021\274\351\333\315<\373\027\263<;\340\317\274\326_\244\274\'\2073\274C\245$=.-\031=-\237k\274\330\353\224<\267\256\003<\202\337\373;:4\005;\024H\335\274\272v\275\274\303\300\355\271\303\307\311<\003e\007=\375\263\277\274\"\0336<\002\204]\275\303v,\275\321\320K\274\221\220\016\275\273\2350\275\235OV\275\373\243\243\274\322\342N9\034\006\002=\034K\260<\274$:=e\031=\2754xX;Bm\353\272\312{{\273\177>\310<\327-2\275\353\316@=\001\340F=\nw\267;t\252\330\274\265+\013\275\320(\266;\336\016h\274\354\224\036<%\230$\274\234\222\004<o\000\356\274L\342\252<m\301L\274AB0=\002j\006=\205~\373<\024\362E\274\236\361\221;\236\274\215\274\264\241p<a8)<.Lg\273\230\234\230\274\356\370S\275\311\300\362<]l\244\272\023t\267\274\365\231G\275|\364\'\275-B\265\274\3046\376\274\213\3017\274\244\261z<\210b\202\2730\250\272;Cs\354<-\353\204<$vW=\317\212\'=\033\250)\275\302\325f<J\303\034\275\251<y<`k1\274\010\243\237\273\207\371\322;\331=\267\271A\213\r=\3303\017\273\005P\003\273s\\W=o\246\232\274\356fP=\025\334L=xE?=F\350\274<S\2504\274OZ\377<\r&}<f\301)=\277[\017\275\272\273\247\274\002]\323\274\304\352.=\\8:=\363\265\313\274F\361\027\275\356\220R\275\316`3=\356hA\275\377:\007=\026aK=\272\277\317\273>q\022\275\216\365\317<g\243\002=\250W\022\275\225kH\274m\t(=k\326<\275b\233\017\275\017M\274<\014}>\275\316\371\252\274\341m\262:\3032\177<\2421\212<\\8\257;\t\031n\274?\253U=\241\347\357<c\024+=z\024\346\274|\177Y=s\305\004\274\344N\270\274\215* \275*\247\\\275\224S\313<\027}\014=-\373\277\273\317\3061\275\272\004\354\274\350\231A\274\275\227\021=\031\214\235\274\377\374\334\274$k\005=\375M\035=\035\346\362\274\260\027\037\275\265\373(=\013#D\275e\302%=b\212\344<\nJ[=\025\017\004\275\341\r\244\273\020\357@=X\3312=8\312\034\275S\206\001=i\362u\272e\220!=fI5=\244*\013=\330D\361\274qOT\275\274\034\254\274\321I\303\274\360O\366\271:\t7\273\262>\213\274efE=\263\265X\274=O\300\274{ \303<\332\274\324<y\2407\275H\2522\274\301& \275\324\221\022\275\300\305J\275\342\305\034\275\025\377\005\274\354\3732<\352\245O\274\210<4\275\347@\024\275\022 =\275\200\222\026<ia\257<d\335\261\274]\377\214<\243\273<\275\177j\247\274\300\232#=\350\306B=\274\374G\275,\360)\274^\274\365\273\271\254M\275SC\'\275\013\241\017\274\311\220J=\202\262\356\274\024\265\005=\331\334\213\274\366oJ\275h\304\276<\233z$=&\023\014\275\333\027\r=\014\000\247;\226dz;i-\305;\247B \275A\237!<\361/\313<\024\326,=j\200\210\274\247\033;\274\0245\031=_\010#\274\003M\023=a\335\242<`o\023\275W\240\364;\\\203,\275\347\334\313<fp\274<\320A@<x\334D\274m\035\244\273\327\213/=\337W\343<|\034r<\375\241_\274\332h\013\275@\356\304\274w\236\205\274\321\210\251<\227e\356<\335\215Q\275\311\225\324;\006D\371<H\235\267;\315\3118<\254\n-=\223N\014\275\025\013\345\274\\\271\206<\365`\000\2752F\311<\036=]\275\030\005X\275\354\001\034\275\205\363&=.\307\016<\017\2264\275\272Qd<\323\344\333\274\025\317\374<\257\351\371\274\245L\343<\312\272\271\274\252\224(=\263\203\357\273\226\365\237<\351\026Z\274UG\027\275\301\r\256<\304f\226:1UZ=HT&\275\321\363\017=h\016\347\273\350\251J=6\217\212<\007k\220\272\276F\274<\225\263\000\275YX@=\325=P=\025R\206;|\n\370<\'\320\244\273L\246Z\2759\202\r\275+\\\310<\010L$=F\204x\2737\214\204<\024\003r\274\014\017b\274\350\017\226\274\365YQ=\024\377\325</\021\014;\030\222\345\272\354\322A\275\261\226W\275K\234\337\274\020\362\005=A\335\376\2725L\027\275\301\3177<\025\372\253<\003\340j\274`\240\264<\355)t<AKW\275\006\241\302<v~$\275\304\361H\275\220\006\\\275\257FS=/p\371\273\315R\010\275\341\014\350\274J\034\372<\225C\221<\212\221\023\275\320\366N\275\257Ij\273\242[\030=A\346\350<|\027\373<d\344\256<3\345\351<|\232U=6\235\355\274\275\333\350\274\223\377\024\274\303b\000=\272\356S;\251U\342\273NIW\275\n!\036\274\036\376\273<\004\332\265<\333\331\322\271\236#q\274\021>\337\274[}\305<\003:\257\274&\371\025\275\326Y\204\274\301\231\2469\253\217(\275\016F\014\275\275\204F\275@.\241<?K\353<\203\337\246\273\326j\020=fD+\274543\275\002\\\336\273\277\010\023=v|\031=l \313\274WE\254\273\274y0=\366\212\224<\002\017\030\275\334.\242<\215\3365=_\366\366\274\374j\237;c\271k\274\357\026\223\274\357M\n=\035\234\332<\264\212\367\272b*\021=\004\326\031\275\024\336\032\275\350C\026\275E\363\027=\263\340\303\274\333\365<\273\275\r<\275\243\333\333\274)e@\275w\240R=M\\B\275\027k\203\274,\2073\275>\3779=\r\324V\274\353\004\241\273v&\334\274!+\377<\021.\311\274\247\362Y\273\235\334\377<\323\0365<\355*5\274\211\033\007\275\350a*<\352}U=C0\324<Y\344\001\275\205\353e\274\034x\"\2759\332\007\275\0142\352\273\276p\323<\347\256\037<I\310X=e\",\275X\311V=\340\343=\275\261\333\201<\2233#\275\231\337\003\275\347\344@<\253\226g\274\346Bx;\177%B\275\313+\002=\331G\356<v\221 \275[\351j\274\362\325?=\220\224\331<\010\230-=J\026;\275\031\007\004:+=\321\273%:[\275\006\325&\274Gz\213\274E\364\203\274\r&\004\275)\262z<F\354:\273\261\364E<\335\251w<\215\032\022<h2\275\274\263\251+\2740\273U=\301!\367<\003\334\372\2746\276\032\275P\265H\274\025*\334<\t\264\217;`\255A=\032\027A=\304b\304<0\201Z=\276p\227\274\325\224\030;\261\356\303\274\341x\333\274\200h\010=\016\"\022=\207\331]=j@M\274C\3239=\205a\031\275\211+[=1\002\013\274\256\365W=\330\216\276<\345\272\353<V\336\035\274\370#\264<\230<\215<\t\257[\275\023b=<Wj!=\300\251\025\2732\365\2709\242\037\346\274\273F\332<n\331\336\274x\366I;\362\371\364\273\377\000\313\274\340\210\016=\204\206\317\274\323\257\023\275\340=\241\274\3023\326<y|\014=\332\021\262\274\274\3766=f3\326\274YnS\275\017\344\331<\te\213\273\001\327\264\274\323\207\020:\310)\347<\302\371\240\274@\363\024=>\231\347<\235$M\275\252M\t<\2346,=\265\224\005=>\261D=%\004\036\272\213\345W\275dn\232\272pS!\274v\261\272;pTz<N\035#=\014\033\300;#\277]\272\263\0015=zRC\275\362{@\273{0\202\274\224@.\275e\275|\274?\342I\274\227G\306\274uAe<\233n\252<%\330\313\2735\217H=<\221\322;\317\020\274<{@=<J\324\024=\0106\363\273\351\303S=\214\250(\274B\344O\275\272\315F=O4,\275\221]\334<\314\200/\274\3510\206\273\\A\353\273\006-\272\274\243qJ\275(\030\r\275`\230\211;f\305\\=\034\225\365\274!\220\027=\334\302%=\372\205\345\273\014[P=\264\013\347;ylR<\005\021.=\022b\026\273\317C=\275\273\221N=\352r\276\274\005\"\341\274\301\2255\273\001w_<;5\017<\351f\276\274\337C\004=[\216\210\274\301\327.\272\316\343\352\274\355`P=\221\327\3079+\266\207\2744$N;\000\',;\254Gy\274\321lC=3ln\274\334\203\200\274\266\201G=\2641\034=Y\376\001=7\034@\274\354)\211;\226@F\274\034gA\273@\345Y=\001\010\374<\252\370E=\022\035%\274d\014\306\2744\003\'<\036\0232=N\244*=\2158-\274\216\365\360<J\224E=\002A2\275\251Y\254<En\000\275D\206\251<G\"[=f\013Z=\2070\037\275P3\367\274EP\274\274\346\2677=\"\014\237;\tm\200<@l\276\272\227w(=\032\212\027=\010\311\034=>\205\020=\266-D\274\253p\243<\272\273\272\2738-\242<#\222\276<v\361\256\274\245S\003=3\324\322<Q\300\233<\326\364\243<\337\033_\275\026\3514<L8\014\275\021y\026\275dD\340<c\311\266<\213\237{<\366<\314\273\273|\232<\247Y|<\0232\262<%\'\014\275f\263\n\275sq\r=\261\317\010:\026\r\035\275\266\220(=lBV\275\007Q\221\273\342?q<\361\306\302<\035j\013=<\035\324\274\226/\001\275\243\030\226<3q\021=H\316\\\275.\274$;|u\023=O\336J\275\202\367\372<\201\017\004\274\376\025\314\273\007\261\211\274\347!\006\275C~w<\243\032\"\273\203\212\323<\275\246T=\233d\312\274\353\004f;b\347\013<>\274\234\273O}\261;\346,O\275\255\200d\274\276\2109<)\347\"\2753\240\037=.x\025<\313\377r;\352\027\006\275\035^;<j\027\222\273FdS\275\033\025\352\274\347\376\027\275f\241\235\274\322\317\177<\254R\375\274&\374D\275\372\336\211\273{6F=\261\205\"\275\252\255Y\275lZ0\274\026\341\021\275\200d\031\275\313t\246<\220\352i\274\005\207F\275\376JC=\242D&\275nP&\275\375\006r<c\337*=\036t@=\321`\325\273-v\020\275;\273^9\225q\255<D\033\014=\\\024-\274\347a\212;\263\217\001\275\342\017F\2752\246;\274\2741M=.\363L=\3312R=\360\315\347;\236\242\202\274\331e\005=\270\246\305\273BeD=\034\373<=\253\343\335\274\034\256\264:6D1\275\373u\225\273\244\363\251<?Y\217;zc\n\273\0078\022\275\25533=o8M\275\221\272H=\033r\320\274\232\275\312<8u\265\274R\301\'=\r\320\241\274\332\340\327<\314\033\367\274\222\177\313\274jg)\275b\025%=t\305|\274\036x\354\274\r\363V=\013\255\276\274g\251H=\020oZ<\323`\017<\375SU\273\266\226\024\275\347\366\235\272N\\\023\275\036\372\216\274\005\216\346\274\323\340\373\273\330\260*<\344/{;\"\350\000\275\037\370\035\275\021\347-=\305\022\r\274\t\327\340\272\366/Q=\263\361=\275J\374B\275\302\310\260<h\335[\275\tOM<d\277\004\275\021\314L\275\314\3636\275\230\371y<\234<)\275\367W\341<\251-\003\275\241\357M=\270q\340\274qM\360<$\223|\273\211\2016=\353\234\203\273\332p\303<L\212\025\275\243Y[\275zm>\275\374\2158\2756\235\351<A@\253\274\2474%=\020D\016\274m$\347\274g8\306\274\274\246\337\274H\013\224\274\354+U=Uu\002<(\036Z<Y`#\275!\2456\274Xm\375;\365\006\344;\235g\254<?\2142=\314A\344:\240\001\212<\206\346\361<=\214\025\275\346MO=s\366\224<G\3118\275\205\216X\274\t!&=U\347,\275oc\263\274\321\247\366\274~\322M\275\"\277\365\274\302\007\005\275\267\227\024\275\301\372T=\006Y\202\274\330,\031=\344\250\2639\317\357W=Q\337\220\273U\256\353<\244\007-\275\255)\277;\244s\210<[p\256;\254\372O\275\372\317\000\275\030\340k\274\234\333\244;\204\0173\273%\314O<\351\360=\2753\340\270<<D\371<i;O=\005\244\244\272\266\330\265\274\031+J\273\246\231\033\2752sW\275s\324$\275\221o\333<\005\333\345<+\023\030=\3370\025\275\207\1775=\372\330,;\231\326\255\274\333\022\246<\372;<=\232)F\274\231R.=\022\207P=\025KX=\336\330\337\273J\264\354<fW;=3.\264\274\270\340\237\274\000\373F<P\016S\275\250\244\246;\377\360\300\274\372\274\002\275\244}\212\273\261\010\020\275l\236\035\274\tET=v \307<\001)\272\272\000&F\275\010\210M\275\336f\007;f\346\322\274\200\2158\275F\013\220\274\225:W=\026\0015\274\253\374H\275\223\223t\2745\024\021=\375\033\032=\005\000\344<uD\t\275.\3339\275\317\372\347\274\376!\001=\307\256r\274\374\350Q=Kb\334\274(9\201<\262>\245;\005\264\026=\357\353\037=\005\327\013\275\223\002\021=\016\325\363<\262\002\216<\344N\235;\365\240\\\275%\033\002\274\263\346\223<\331&\325<\222\232\\\275\265\030\001<R\036\035<\016\363f\272\235\330\264:\342\232a\2746[\212<\033N\036\275\345\316K=`C@=\361\215\332;\033\213$\275J\207!\275\204s\213\274\315\360+\275M[Z\275\242\217\035\274KF\261<5\346%\275\227\200\220\274\272\023H\275\377\231\267\274\275\'\025\275\262\350I= \345\020\275\014^ \275\316?q<%\253\013\274\236\264\r\275m\271\r\274\337\241\263\274\327Y\207<s\364\003\274L\260\007\273\013\234\256<+\360\324\274\324\032\030\275V\352\035=i\347\033=\222\2040=v\302\353<\217\314Q=\200\244\203\274\276\310\343</\306\020\275Aj\014<=\260G=\352\000E=\260\024Y=;,2;\374\335\320;\220{\346\273\233!\203\274[\264\030\274\265\311\312<#\304\240\274S/\247\274g\202\311\274\267\035t\274e\006o:+\200\257<\363\230E=\326\321\037\275\270t\022<\334\030n9N\213O\275\001\3455\275P\026\023=\026\022\036\275w\203\232\274\035T3\275\375\014N\275\345\201>=E^!= \233\033\275\r\020\265<lD\020=\202}\357<\215\336\247<|\227y\274\362,N=j\227\352\274\022v\357<\261n\212<\351[\002=\327\310&\274\213\037\206\274C\224\r\275\243|G\274M\026\326<\370/\277\273&\034\335<\325\322\037<-\350P\275V\"\031\275Q|\016=\372w\277\272A\257G<\353\031\017=\257\335P\275\r+\260\274\326\235\257\274v\247Z<\000\003\372<\020\212X\275\004V[<\025\245\330<2\301/=\373\241\274\273\232V@=\227jn\274\223\031\301;H\032U=\006\231\024\275E\2217=\375\322\221<L\327\250<\355S\017=\210\323K</P\202<\202\265\266<\013\275\002=\327\325W=\027\302J<\24260\275\202\217\327\274\035GD\275\213\352f\274\266\325,\274\220S\000=\031X\220<N)\013\275\301\022\321<\346\356\022\274\367\037\013\275\303U:\275F\346Q=\311Z8\275\014]V=\200\235-<\233G\264\273i$\036=m\320\023\275\253\016\n=\226M <A\3148\275%\005\022\275\224b\255<qsM=\241\377:<\232E\220\274h\255\370\274\027\310\250\274\006\320\320\274\362\006Q\275\277\276\340\274@\3471=\037\031\020\274\364\314\237:>\322\320;\236\226$=9yY\275\242\344!\274/\002N\275m\'4=\325\272\202<\016\367\007\274\256v\020=\202W\230<\354lV<\254\3368\275i47\275pGZ\273\276}\224;\004\006\315<\215\013\004\275/\315k<\251\357V\275\036\235\356<\337BW\274\234\222\243\274\234\007\317\273\323|.;\366z\361\2728X\003\275o\357\'\275\356\035S=\200\347\3619\230\341\331\272\302\201\037<R\365`<Xg\317\273\235\262G<\354\004\'=\036q\202;5\3155=N\033c\273\362\320\t=\314VG=\202]\316:\300\366\345\274\245a\3448Sf\"\275\222\242\020<\364eL\275\264\014\027\275\365\273\222<Z\035\020=\257u\010;\332;E=<;\340\273T\2759=\371qD\275D\364T\275\315ZB=\r\016H=\243\023\024=L6;=4\225X\275H\007\033\274\007\2422=\344\010\350\273\000{?\275;q\254\274\027\277\331<\300\214\303:>\346_=V\002\022=\032=,\275Sv\023\275\344\343\341<\214\026y<\33157=\004\005\270<\000\3433=\276\334\307<.\236\312\274\266\303\334<\332\356\'=\364\273\016=\002\013\025\272\361*\203\274\227\262\215\274\241\207\'=#@\022\275\263\353\263\274z\376\003\275a\350\000\275(\302\233\274\021V\370<\325\201\316\274\372\234\201<\274\\\317<U\356\034=\311oH<\335\257W=\004\273\323\274\272!\016\275\260\3626\2757\027\206\274<\276\262\273S\000;\275\351EN\275\361\201\017\274h\270\002\275\030\202P=\200\215E;<\304\325\273j\3177\275\366\273\345<\364l\\=\257j\204\274\340`\001\275\206`\"=\203#\375<\'82<@\215\252:\226\010\311;\010a\324;\317>`;\025>\032=6\233\227\274OM2<-\270#\275L\370\241<Dt\235\273\232\022\370:\344\243N\275!\270>\2740\325\307\274]\233\006\275\034`\345<\314\222L\274\353\375\016\275\200\016Y=u\0326=\027/\241;\026\254V<\377g\226\274\335\325\035=J\332\222\273i\364F\274?\253}<\351\3135=Z\374_\274\3418I\275\346S\\\275\354\307\\=\310\207\247\274\356b\225\274\313\245H\275\344\004A\275\213\346\325\274\201\322P\275\205_\376\272\373\271!\2759\341\302\271m\322(\275\202^\036\275\231&\207<\346\300#=l \226\274\rc\277\274\276\262\365<ez\004\2755Ao\274\232\376\342\274\314\010x\274\201\256B\275\342\244\224<\220\315\366;\271bH=\231\200<\275\004\2532\275a\003*=4\331P=\361\331\345<\332\026=\275hU\212<\032p\222\274D\237\031\274\215\2713=\027\342\214\272\322O\332:f\"\035=\321\233C=k\352:<\325\335o<\021+4=S\262\307<\211d\007;\261\371\016\274D\030{\274a\310\314<\2519\010\275\031&R=\365\n-\273I8\307<UwI\275\251\273s\273\220\023\n\275\000\320\237<*-/=j\366\305\274L\213\337\274|\300\257<xf\257\274\334+)=\317\267\001=\372`\240\273\320\324\033:\344\335\215\274\255\225\234\274\221\215\215\2737\234\250;\310&(=#\224^\274UcW\275\363x\2669\367\210\311\273\204\037X\275-\316:\273vK-\275\222\326W=+\223\334\272\316\213\021=\274\372\305\274\n\003\026\275U<E\275\021\262]=\333s\001\275U\303\271<\213\312\330\273\233HF\274\350\262\r\275\276\036\317<\225!\312\274dj4\275\035\373\320\272J\315\316<\010^\013\2757\262\037\271X\356Z\275@2\310\273\247\345\017=5\300\203<\275\237\334<\352\340\321<\210\353\377\274\341\253\025\2754\355\004\275\255y\363\274\013\326\342\273\036.\327<\2623\253<\210\350\033=G\3433\275\276\301K=\017\005P\275\257\016\026\275\246\360\270:\002t\027\275,q\016\275\261\007\\=,\253N\274\210\326\370\274\325\3742\275?_\006\275~0@\273\371V\225<\367A\351<I~\236\272o\254\026\275P\311\023\275*[\034\275\274\352\352\274q-\033\275\243k\021\275us\006=p\007^=v\237\202\273\354\302\002\275\266U\366<\242{\022\275t:\243;]\002\367<\026\210#\275\372\364\370<\240\223<\273\021U9\274p0]\275\356\213\214;\236\325v\274\243x==G\235+\275\034\221:\275\212\226\304\274cg\002\274\361<T=\262\"\205<\257\365H\275\365\202\010=B@<<\346\357\021=]\363\001=S5U\275\3254\273\274\342\347@\275\257wT=%\253\020\274\nkW<\231g&\275\002\0139\275N\303\006=SEU=\267\341;\274\251\236\274<\2650\025\275\237MM<\363\316\026\275\227C\254\274\210\242H=\246\2712\274#h\003\275|\2431=\275n\206\273\004\361B=A \263\274\367\006;\275\206S\237;w\272-=:I=\274w\000\277<\372\345\260;o\305\333\274\030\234\267\274\345^|<\235\010\024\274\207~\334<\376\311\315\271\2640);\266v\233\274\313\270\203\274\006\327\030\275\205\373\304<;P\203<\030\245\034=\204M\201<\006\310H=\240\312%=\343\266\000\275\266\003\360<\301\373\323<V\3027\275.\237\377\274u\370\235\274=\2413=\244\344\245<\247\354H\275\212\261\013<>\313\003<\\\274N=pG \2751\267\007=z\266\211<\364\324\256\274\022.\235;\2239\260\273\023\205@=\205\nK=,\372.=t\313\320\274\330\'6<?\312\375<\333\2455=[1\257\274\274\266J=\342\035#\275\373\2737=~k\323;rZl\274\345\334\016=\235\002\"\274\253]\356\273\nl\271\274\002R\030\275\265\016\001<\005\354\315<c\370$<D\206\\\275Q\373A=\376\2108\275n\301\261\273\215x-\275\337\3223=\231\017\013\275m5\227\274\'\322L\275j\205\313\274UX\224\274\014s\330:(=/\275\361\2317\275>Hg;2M/=Yi\334\274|\317\337\274\365\0267=\373QJ\275\350\t\232<\247\344\251\274\2760\002=\020\265\370<\326\352k\274L\277G<\207\024\223<\335\373W;b\221\301\274\253E\342\274o],\275\3623U=7\305r;<$\236\2738\035\t\275\226\010J\2755\227\202\272\037\320\026=^\237,\275x\255d<\214\316?\275[\0018\275\313\205\312\274\342\260\033=\371\370\345\273\022\374+\2756\236#\275@\t\010\275\360/X<\234\202$\272\0018\371<O\312;\274O\340F=K\021N=\217\345_=qk+\275\260\"7\275\325l\001\274\212\277\324<\217\220\357\274\016\261\027\275\321gc<\363\007\354;\2662\315\274!\216M\275@\205/=\0235\025\275[7\021\275Y\335\312\274\307\310\002\275\253{5=\001\271\361\274\321x$\275\236\301i:x\343\335</%F\275`\331/\274\225\013\006\2755\372\372\272\025)4\275K\033h\274m\363\346\274n\334\n\275\205EX\275\253\016\021=\215\017\"\275\247\205.\275&FZ\275\254\361\017\275\373Z\014=\254\202^\275\346j7=\r\006v;\004VC\275\237\330E\275)\313\364\274[\304G<\361\223\217\274\221;#\274\336\2105=i\0001=/a\365\274\001Y\223\274]YW<U\200\354\274>\354\017\274\253\262\004=\232\"\034\273\347K\014=\006\205\037\273\322\277\023\275\2253\000\273\031\0053=\023\371 \275\311/\213\273T\242\037\275\005\030\026=4\3174\275^{\226<o\203\206<{\032\364\273iv\026\275g\210\346<\242?7=7\030\253\274\351\0219\275\014\3108\275\263\035\245;\264\304\014=\n\246O\275\033A\256\274\177\222U\2754\t\020\274\022oH=\330]\302\273\224\342\214<\322\360\036<\330\220\221<0%\335\274o\3513\275\340\244\037=\320\325X\275\361Q\241\274\352/\330<\255g/\275\227\032(=\311\274F\275\026\307\334<\263A+=6\226\352\274Sn\033\274m\261\352<\261|\036=9\300\261\274\376\245\000=:\365\303<\241\250\001\275*\377\247\274D\206\363\274\345\006\013\275\314z\261<\330\002F\275\360\352\001=\000\271@\275\336\245\250\274i\315@=\213\337\022\275\303\203\307;\326\315\003\275\257i\377<\274/\"=7\310T=\177\026\361\274\322\035\017=\204\200F=\374\376\274\274\034\237\344<\327\211\032=\224\252\013\275=\310\033<<7O=\036\365\006=\313\236r\272\332O\266\274\030\235&=u\330\232<\307\245\017=\277\'\\\275\314\371\376\274\220\305,=zSp<\200c\223<o\250G=\360\2548=\324Y\365<(*\272\274\321\017N\275\235u\r=~\341T\273\013\356\371<\271\251\221\2743\323O=\354|\331:\361\325\332;\007\240\024=\006\312G=M\367\367<\030\324a<\016\':=\370]\'=\037\205)\275\014\023I\2757+7=\354\003\350<\326\330&=RIX\275\330\325\243\274+V\325<\271\221J\275l\350\315\273PW:\275\273A*=\255\302\004=\231[\242\274\376{>\275\325[\262<\303m\007\275\251\007E=\372~n;\211\200a;}\313\013\274*q\215<\177\372$;x\233\256\274\252\371\305:l\027\334\274P\373M\275\313\245L=T(\031=v#\206<\273\376\"\275:\213-\274}z\'\275s#\211\274\000x\022<r\334\264\274\361L\211\273\026\005\317\274a|Z\274Mw\240;\327!\003\275\200\316\013\275g\300[\274u-\346\2744\366\350\274\377r\347\273\311\004\023\275\312x2<[q\300<\361\0266\274d\036b\273\022N_=4AY;\275\216\302\274\232\332\013\275\300)\333\274\216\367\320\274Z.\270;\372\240V\275\3459\212<\366\226\326<t{\246<i\362\347<\000\263\254<\006\254\021\275v%\255<\333O,=\022\0000\275\321\214\220<$\006.</\321\007\275\347\345^\274E\0067\274\203IM=\206\014\024\274\311\001\212\273\345\215[\275Y\257_\275}\250\024\274\326$\210\274}\033/=\231K\216<\3159\322;\237\010s\274\235\276V=hP\010\275\204\\\331\274\252> <UxC=\204\3657<s\237\302\274\321\037\235\274\324\370E\275\327e]\275\341\316(\274X\317\275\274BI\351\273\271>!=\232\276\001\275)\0174=\216\2219<\r\211\006=}\246P\274lc9=qK?\275\235\204T\275\346(\r\275 \315H<s\353Z=&@\315\273#T\000=_\224\335;\204)\306<\031U>=A\350\330\274\213\2319;\351\244E=\337\335r\273uXX:\372\257\324<\240\221\021\275\315\324\027\275\347!/=\024\352\333<\255\016N\2758\353\277<\3159=\275b\005C=\264\034Q\275$\037\000=r\213:=\002\340\244\274#M\020\275X\226\311<\016\203G\275\002\263>\275\246>8<A\013\325\271\357\245\025=\030\340\272;;>,=\362T\031=\325\034\033\275\345\350\037=\307h0=ia\233\274\030\377V\275M\352\033=\020\272\340\274\315\2746\275\t\3742\275\372e\031\275\364\325A\274y\020\247\274\210\373K=\272\215\001\274\252,<\275\343]Z=\340+2\275I7\267\274\356_\000;8sN\275\213\236\275\274%Q\304;\311\354(\275<sZ\275\035\324\327;v\1772\275\313\020\301\273\323\272\001\271\023l*=\234\201:=\264.(\274-_\242\2722F5\275?N\346</\212\017=Z\270U\274\202\211$\273g\240q<$I\005</|\023\275w\252\305<\366\004\013=\340\272\352<N&W=\036\010\027=\037G\302<\357\260\024\275\354\236\374<\006P\223:\000\2747\275\320\324\032;\205TH=\001Z\226\274\251\364c\274\324d(=\206W\t=\305\000\344<\r\263(\275\203\003^\275:\331\362\272\243\370C=\352\2210\275\277\r\027\274\214\266\030=\217` =I:\272\274\347\210%\275A\232\253\273\205\351<\275\303<9=\301{\225\274\004\231h\273 K\373:u\235\332\274~\245\037\2759\3026\275\372\225a<\315\034]=%-\027\275\225r\"=$)\325<\232f\345\267*\236Y=\226\211.\274W\365)=\360\177?<\263\002\265\273\177q\367<\030\206_\275d\3749\275i\233#=\252UA=\262\320\231\274\033x\351\273L\2159\275\354\210F\274\317\017c<\2324\261:\256\226\025\275k4\225\274\227R4\275g\2030=\321\215R=-\005\007=\237H\216\274\334\324\353<\212\'\256<\244\265\004\275\310\310\022=\214\221:\275\220\224\356<\320\177\'=A6[\275\232u\351<\337\352\'=O\026\375\274\245A2=\014\226]\275V:;=\274\036\001=\n\275U=\224\253\346\274\224\325\347\274\236\030\211<\270\222*\275\263X\3579\3624\217\274\277\344\375\274\306\370\251\273\240\236\372<Xy\016\275\234\360\3579\273%\037\275\303\257\033\275\352\202\031\2752\360\350<W\033L=FX\367\273\024\305\'\274\017@\031=n\351\203<\354\344\003\274l\305\317<\265\234;\273to=\275\332C\\\275\375\317\200<\242\022\n\275\252\036\212<\336\006\016\275cR\206\273\371\3068\275\340\254\303\272]\327\027\274\342ID=\276L\377<\"\000\204;\372\347,<\r~\242<\275\205F=\213\016?\275\226-\\\275\252\373\263;\255\333_=\255\001\356\273\307*(\275y\177\033=\204\036\200;\'C0\275\244\321\345\274\264\306F\275\024\341]=\265,N<\351B\307\273\367\345\021<z\337\210\271%\336O=\254\254\366\274f|2=\014n\324\274\211\232+\275\276\371\226<_o\017\275R\t\273\272\337\331i\274\014\2733\275\373T\205<?\240\210\274pw+\275\034\260\235\274x\304\004=&@V=\265\360;=\365\2614=\003\350\340;\216\302Y=B\220\222\274I2m;\331Pz9\361Z*=#gd<\037Q\036<?\r\020=\332\006\n\275c+\256\274TX\321\274\017\234\345\272\313\252.\274\267T_\274\252\274\265;\253\203K\275\n\214\032\274\252.B\275\345\244M=A\361\353<l\001\304\274\235x\265<\225\243@\274sn\273\274\224Dq\274\021\367!\274M\352\000\273\301\316\034=\003\332\250\274\005\261\007\274.\221\r\275\300\325?=|V\267\274\224a\272\272\207\3460=\337z\335\273\266,2=S^\003<,A\370;\357mH=WL@;\035\3207=G\226\035=\365\000\336<u\250\006\275\265V\n\275\225\373;<\300\177\352;\267\370\327\274\337r\r\273\2641!=\200\0173\275\264.\320;\374\006\236\274k\312F=i\0132<A\354\311<\000[\237\274\357\r\251<js\361\274\\`\366\274\221\353X\274\020\347,\275\311>\364\274-Yj\274\314\357\352<J^s:\260_\363\274x\211L<\313(\217<\001A\033\274\260\035 =+\320\031=\216\327\260<h\274,=\206\352\353<\347\211\304\274\020\023\371\274\305\203\026=\026)\357;\366\241D\275\364\253 =>)L=B&\\\274\273:Z<^\230T\274\347\337\202<_K\033\275P^H=\266\037_=L\311\271\273hz\320<\017\213.\275\327\014\003=\241F2\274\007\352\357;\351\335/=\032\277\\\274J\034\026\275\234\241\017=CD\302\274\267\335\232<\261&k\274-7\246\274\316\002Q\275\361\204\276<\261\376\237\273\013V#=\340\220\034;t\360\021\275\2313U\275N\336\016\275S\2223\275\257\240P;$\233\307;\273?X=zJn9\241\277=\275\rj0=d\014S=\210\346+=\351u+=\026\315\010=\357\250 =\213S\n=\326L\333\274b$4\274\3362)=\232\270\236<\364+==\273\275\352\274\032Z`<7I\216<\325\2563=\022\273\037\274\252\373+\2753\037\031=\275\320\342\274\024\341K=\027t\240\2734\221\000=w\2351=\205E\321\274s\002K=\230\362T\275\327{)\275\200 \214\273\\$\000=\261\021S\274\234\361\345\274\201\354\265\274\347g,=\313\322\032=2@\366\273\217L\025\275\265;\271\274\333\246\244\274\265/\232\274\364\243P=#w2\275\365\370\001<\027+\000\274h~\252\274\014n\313\274K>\250<\322A(=\021\2419\275,\326\370;\020\335\217\274\345\360\234<Q\325\377\274\272\017\376<\2115\027<\361HU\275+-\004\275\211(\352<\036\365\306<\0230\247;\"\234\226\272\214\027\241\273\236\226\n=\3061\270\274\322\210U\275>\323\250<\353\362\036\274\002\301\324<\341s\373<\233~\357\274\323\2447=\351\352<=x\277\"=\267\222F\275K\317\366\274\326*f<\360~\325\274\021\377D\275.\"\344\274\036\336\320;\276\201\377\274\376%\343<bw\247\274\321A\320\274p\356\002\275\017E\341\274Y8\303<\237\206\340\274\"4?\275+\305T={\315^\275P}\027=\014ca\274l)\017\275\362J\006<\314E\226\274@b]\275:!F;\026w\224<\351\3547\274\224\311\373<(\261\031\273\0015\304<\204\301]\275\006\265\361<\207*\304;\274\222\341<\276\324\233\273\"q\326\273(\272B=\030\221\203\274!,69\310\223\\=\300\177!\2746,\350<:7C\275\311>E=\274xl\274\252\212\211\274\033X\225<\346\226\365\274=O\254\274\307\215\330\272>\002\321\273\377\331\237<\243\035\307\274\270\256\226<0\320L\275n\371\251\274Z\312K\275<\204W=\353}\"\274\210Y\031\275\273\206\"=\315_&=\017CM=M(\n=PG=\275\346\003\007=\271n\234\274Q\222\016=\352\266\245;\016E\010=\274\351&\275\026;\351\274\314\303\360<\306\350\031\275V\362!\275z,\033\275\001G?=6H\237\273\375\361-=\302\363\333<\2233N\275\250\035\274\27442\003<\305[\220\274\3334\377<\231\214@\275\312_9\275\326\261\355;!\2660\274\374%(\274x\376:=\241MY=\275\360\\=\313gf;W\374\376<\366\204\375\274\366s\222<Z\220\205\274\235\321\310\274\275L(=\212\177\371;;\031:\274\313\021V=\021\357\362;\302BO\275\336\326.\275\t\331:=\333/\034<P\307\333\274\365\346-\2752\035\322\274;\271\013=\311\253\252<\331\361\035\274V^Z\275\260\325\217\274\013\352\341\274\357_X\275\2426\340\274bn7=tZ\024=\234\\\374<\247s9=\302\223[;\257\347\322\274\336\356V\275{[7\275s\3577\274\362Fe\274\253\025\234\273\273=\t=-Y\336\274\215\366\013=\321v(<G\252\221<\314\212\303<\020\342.=\260\247\017\275Z\261\000\274\315\204\213\274\0105K=\317{\001\273!M\232;\336$5=\250\252\225\272cX2\275Ld\035\275s)l;\257\371\225\274\337\013;<\207&8\275\253-\010\274\2325K\275\211fV=$]\301\274n\333S=\033GX=\276\313.=i\377?=\'P\352\273D\327\332;\222\003O<,7\244<\314>\'\275\363Y*\275s\335\275\274?\3434=a\n\333<\217\257\024\275\203\024\005\273y \204<\276P\365<\307B\003<\003\257L=\232\304\3519\217OZ\275\332\372\t=\357c \275\306]\027<7\212\r\274\333\274r\274\200\212\020=\221\311\205<U\0349=\373\021\014=\362\027\341<\313\002J<\240\210\373<;\220\214\274\236\216\374<\360\304{<\325\2046=\027\3653\274C\262T;d`==\215\256(\2745=\000=\251\241\016\274(\000,\272\016\031\241\274\212y|<!1\001=j\325\334< ]\364<]\375\260<\361(\207\274u\323\331<\\+.\275\355r\026= \'?=N\234\370\273\234.:\275X/B\275\341\010\'\275\320\335\311\274\252\201X\274\200\230J\275V\"\245;@;B\274\000~\243<\020\316\247<\312\rE\275\305\230J\275\335F\346;\331\3141=\375\r=\275\030\246\276<\312\331\305;/\375l\274\345\005\272<\023\001\232\274\356\035?\275&\321\336<\317\313+\275W\3245=[1\225<\217\221*\275\3462\207\274Y\266\334<\267\017\252\274*u\026\273d@\017\275\037\223\230\2733-K=\343\231\363\274B\024[\273\252FU<L=(\275\220k\277\274\227\224?=\005\235\035=4\037y\274~\016\027\274\037%\024=\272F*=\313\357\014=\t\253\372;q%R\27508\000\274\021\301\360\274Y\004\235\274\261\370\"\275\271e]\275\222\357V=\273\340\211<\3175\262\274K\362Q\275\261\366?\275\270\311\240\274\347-\245\274\271\347A\275\232\370?\275[9\265<6\217\324<y\366\026\275\254:[\275\0109\214<N\306i<\250\\!=\314?\364\274\247\215\243\274K\027\272\274\n\210\373<\306\373 =n\374\004\274\247b\375<\320\275\370\273R\210_\275\004\311\236<@\315\241;\367-\"\275M\2713\275\017\013\026<\375\005I=\346T\255<\335\262=\275+E\354<\371\242]=w\352\243<\331\313\001=\022KM\275\221Q2<[\251\016=\256Y\"\274\320\2665=~\336$\275c%\000\2752\224\250\274#\353\003=\250\344 =?E\225<v2\024=\236\035!<F\3246=\371\340\352;N\034^\27523\005=\265\323a<\251\021\325<J\211\224\273\333a\355\274F\236\214<\236\030\335\274\302\362E\274{1N=W\325\270<\347\354E\273\322PZ\275v\207U<\200\203\251\274\317j>=H\357M=L)U=\221\021*\273P\252B\2734\264\025\275tSM=\220\245\344\274e\003]=\242\272\254<\302\254\243<\211\263\374;B\244\006=\243\320\275\274\036\301\002\275\255+#=\246\213Y=\215\313Z=\252\r\310\274:\277*<B\266\311\273\305o\031\275a\036N\2754\220\026\275\033l\030\273L\273\"=\336\r\026\273\336\3754=\356a_\275T\034\330\271\346{U\275N\000\n\275\223\233\030\274\273\203\203\2747wo\274\342\2449\275\016]\266\274\014#\275\274\005(\003=kl\036=\255~\022\275jl\000=u]\326<\276C\265<\244\235\231<?\"[=^G\331<\261s\014=\031\206\365\272\347\231@<vs1\275\037\323P\275f\000h<\267\354/\273\327\016\n=\020o\t<\223A\024\275\357RH;E\325\202\274\367\241J\275\254\340Q\275)w@\275\035|:=?\352)=\3240(=\361zF\275\253\314\255\273\307\300&=y\302+=.\362\036=\231f%=\355B\177\274\362\213\021\275\273\345\331\274\225\331C\274\252x+=\355\036t<\266\001\020\275\210g\255\274\233/\212:\"\016\007\273\023\003\000=\217\2216=\21112=\265g\002\275\260\260\372\274\277\032W=\335e.=\260\272{<\0362p<\026\026==\211\214\311\272\253\'(\275#8?\274\"!B\275W\n\005<U.H\275\022\033\240<\211\021\244<T}\225\273\225\033U=\226s7\275\324\232?<\272L(\275\236\r5<\337\021T=\006\"\037=\340\313%=\245\364I=\340Z<\275\327\315\277</\264Q=l\311I\274\267\237Z\274\205\244\025=\002\244\252\274)\267\304\274\263\352C\275\000\030\324\274\304RP\275\330\223\005\275\220\'t<\004m+=re\231<\367L+\275L\373\'<\374=P\275\365\363\354\273\303\330\'\275\002\005\344<\234\r\354\2734aB\275\214\202\265;\020Z.\274\2357>=5\361R\274\033\3036\275\376P\227\274\006K~\274\310{\226;\350\247\305<\234\340\r=\376UX\274\302bQ\275\223\245Z\274W\341%=\224;A9V\340\032=\323p\342<\033\026D=\207\"\211<\202!\352<p\324!=\274R\377\274\0004,=\264\r\367\274\222T\264\274s\265\333<-bH\272\202\200\243\274\030\330\260\274\202\217\"8~\016\373\274+\361&\275\253\243S\275\252\320%<s\016\315<S}\356\274\265\nV\273,\217|<\340\352\010=\215\251^=\367g6\275Ao?\275\034\220\027\275\346\264K\275\030\227\031=|\006\374<x\236\r=\177\332N\272\021\276\216\274Zu[\274\342\031\306\274h\315\022=\212\257\350<\364)>\273\3315p<\3445\364\273>[e<%*\025\275\232\265:\274{\023\216;M\253,\275\3576\n=\367\220\375<X\213\r\275\222F\225\274nZ\250<[_\236\272\0048X\274\230\365\211\274\347\351\225\272\367\350B=\252\237\345<4\033\317<\341\027Z\275y(\022\275\376VG<)\234\375\2742\300@\275\227P\001<\242W\r<\235\327\216<\260Gc;)\335i\274\353\304\025=V\251\261\274\234\336\017\27421G<\214\264\362\274b3]=\035\263\004\274\333c1=r\213E=\213\3420\275z\332\236<\273t\025=\203\303\005\275d\"\253\272\203\276:=_\021:=\342\317\010\275\334{\365\274}m\332<\374\275\330<nJ\017<\212s\r\272\330\260\313\273&i\257\274V\010!=+\017[\271\217J!\275\031\371\217\273\331\177\033=\032\032R=\361`S\274\357\313%<\351\341\032=\364\003\271\274k\276\340<\'k:=$=:\275.\255\247\274\3452\304<\224\343F=\302\322k\274\3755\016\275\214XA=\210\001Q=\264\025\213\274\224\022\324<\246\263z\274\370\200\267\274\013\325\215\274+\233\034=I\0350=\204FD=\373^\014\274\321\267@\275\235\303\017\275\345\303\243\274\333\320!<_\265\000\275\362\376W=\033-\006=\013\177M<\033\364\216<\361\236Y\275Gvf\274kL\200\274\207\370\037<Z\007^<\03489\274\217\257A=/\314\003\2755\202@<F\016E=\315\310O<\030\276S\275\244\032\240\274\301\3320\275\034\000.=\222h\333\273\216@\335\273m?\354:\272Fe\274?\343\013\275\020\310\026\275N&\242\274uW^\273@\356\257<\242\2730=\247@\303<\311\030\370\274\223nX=%\241\220<@\275R=\330\273\t<\021\254.=\256\\\002\275\004\002\032=v1\010<@\3219=\025\325\242\274M\253\247\274V\250\020\275\032_\366\271\312\316\272;o\002\352<\220\\T\275\245\373\027=\031\265\274<\306\206H\274\355\250\000\2757\377\026\275\245`\021\275?\n>\274\202\256\r==\373\327\274\023\326\023\275]OW;\235\035C<o\375\302\274\321}I\275\036<B=\271Y\355<\020\350V\274W0\357<Z\020\032\275\346\3671=Ca\253\274\344a\210\273\"\260\"\275FQZ\275\246\'\264<|]\304\274_\006\014=?\013R\275Z\307\025=W4\360<\322\304\370<\273\005\254\273\235\374\205\272\303Q\304<Mq39\000\360\341<\004\3107\2755\255\n\275\363\013\231<\\\333\365<h\t\033=\266\003\237<1G\027=Ng\355\274\366#J=;DP<\257<\235<h.\307<\231H=\275\013\364}\272\234\007\006<\3325h:75,=A\2750=q\0131\275\361\214V\275\253\223\033<T\352U\275\013\031\\\274\230\256\016=\004\2600\275\245\202\237\274\342\350\234<X\367\350\274nb \275f\244\320\274\231\0355\275d\006\'=R~\262<\346\346Z;+\355]=z\263-=;\000]\274\341\341\025\275\341\001\377;j\306\t\275\334t!=l\371\224\273\25685=:\351\272\273|/V=\201\351\321\2724\177\241\274\036\323U\275#\305-=\3106\226\273\211i\321\2747v\020=\006\257\256\274E\326\235<\275\343P\275\303\344I;\204z\362\273\310A\340\274\356E@\275\312\312C\275_A\377\274\323{O\275\024\224\222<\356\234!=\026Y\244<v\340A\275\371+\3609\213\177S\275t\2275\275\234\003Q\275\366s\357\274\254\300\323\274\030\025p<+_\255\274\336\'\347<O$\366\274\276\025\"\275\360\374/=\232L\310\274{\246\361;W\227\000\275wgC\275\233>\020\275\372\351\317<\367u\030<g/4\275\n\270I=\307\275\023\273h\3358\275\261ur\274h\3064\275\023\300J=\200\260\264\274\273\0221=\301W<\2749\013\021\275]K\261\274\371\021\322\274\361M3=\321\024\252<\277D\273<\202\271\027;\367\204\213<N~;\275\363\305\354<\306O\303\274L\220l<<&\371\274\\*\245;w\301\272\274\3021A\275\244{\3659\021e*<\3106I\274]\346C=\t/\003\275\256\244\260<\363\345h\272\245|\267<\241\221\000=\203os\274*\314U\275\005\024B\275\267\211\307<\321W\010=1L\016=\t\t\375;~:\301\274\202\242\004\275\316\306\301\274\306\000/\275\342\213g\274\314S)\2744\346\002<\366\277\223\2744\nW<\247p\306<\367W\211\274\272Z9\275h&\376\273\250\363\301\274g*\276;Fa\"=\002\317\343\274\362\350\372;\215\262\265<\370\326\316\273j\034X\275B E\275E\027\270<*\350\260<2/\272\274\263o5=\351z\030\275\\\342G\275\323\310\033\275\2251H\272\342\317\'<\234\246\335\274\345\222\321<H_w\274c~)\275\016\2220=\321\223\277\273\r\000F=\\\365\014\275\260\322\034=x\224\035<\356\270\352\274\335\303\001\275\230\3553\275O~2<i\237\366<\244_Z=\221\315X\275(D\336\274;\351\215\274\373\233\t\275\311\375\267;\226\201R=:\312\331;h\202\254\274\0146>=\226\277\217\274jl\213\274\307\276\302:\302\261[=\035\360%\274\370\273\366<\242\372\031=BS\245<\352\244H\274J)\002<\262F\236\273\243\026\241<\371G\031=\320\\/=\363*\217\274Pd\353\274\321\310\312\274\342ZX=~\342\375<z\333\251\273\330O\311\274\322\257\221<\0169\004\273\023\360\344<\254,\332\2737 \357\274\257F7=\203\207\375\274\006l~\272\037\0178=X\'/\275\315\0356\273\036,.=Z^\234<\354\355\024=\242\372P\274\327\032\377:\232\236X=\274^\033=\017\214\017\275\312]2\275c\211)=0\347\241<]\030:=\347K\333<\325\373$<\014fn:g\210\223\273H[Z=l\177\253\274*P\311<D\227\037=\257F\n\275\226\031p<\377\262\014=5?+\273\343\317\272\273\221\036\214\274\215\314\322<\n\364\034\275/\330_\275\275\261\231\273\t\2134=g\333\355<\343/\351<`6U\275\242:\264<j\217l\274*|+=\234U\321< \243\025=\254:\317\274X\224\t\275\263h\344<ugR\275\265\344\226<\313\022\204\274\236\260\r=\017\244\304;\303@I8\245B@=\247y\266<=D\310:\337\250\263\274\304\355\024=\200\362\250\273\200\004D\275\317\025\270\274\205r\361\272y7S<\237\032\242<\264\336\031\275\032\014\240\274Y\316[=;x\001=\221\036\016\275a|U\273\315\272\304\274>\r/\275\tY\220<\224\342\004=\242\2675\275\027!\n\274`<\n=\262\370Q\275>5T\274<:\365\274\020\325I\275\010\005\374<v\300\002\275\001\032#=\270:\325;\311\313\326\274:\312,\275\325\214\025=E\241Y\274\237\241\270<\237\234\352\274\'X\306\273~>7=\343\343><l\263,=\217(\267<K\374\004<\016\333\226<\223\004[=p\237d<\365<\223\274\210\315\002\274 \224 \275\352\354b;$zQ=N\203\007\275;\317>=C\271\030\2746^\323\273F\226J=hMJ\275\256\200S=k\220\305<7\363\334\274\222\246\362\274\265\357\002=1\r\\=\366\371\242\274t\001\330<\2266\343\2748\217\274<\205{b<\r\210K\2752\030\013\275!r)=#\206s</3:=]\234\255<l^+=c\177\207\273|\377\231<|[\026=\206\210\333<U\341I<\262\251\256<\340\366\254\274z\246\320\273\332\300><KF\013<\33508=\352\203\324\274\352\235\002=\245\264\r=^{^=\024`\365;\312\305\003\274r\205\\<j\334)=0]F\275\353M\021\274\337&C\275\013\342V\274\302\242\334<kP\372;p\326\207\274\245/\\\275\265\"\350\274\353&9=6u\333\274<t\206\2744\032h;#$\314\273\277\361R<wQ\221\274;\310\210<\002s\026\274:H\"\275w9(\275P\277\240\273\213i\315\2747c\331<d\340\361;\020}(\275e I\274\001:^\275\01381<D\202\235\274\373HT=\020p\007\274\241\212\336\274$[\262\274\250@\352\273\303?\r\275\010\255\037\275f\243T=\357\346 \275\350a:=\316\027-<\303BD=\306\317)\275\253]\227\274g\206\030=\'R;=)\n\r<_\245\344<\244\322\007=\304\254\r\272A\364C<5O\321;4W\030=d\226\020\275\335;\367<c\203\350\274\025\340\375;\2168R\275O\315,=K\204\002\271&\226\241\270Jw\260\274C\213\004\275\003\0012\275\037+\037\275<(2=\242+V=|\316X=\327\255\361<\357X\344\274-<\016<i\376a\273\025\2755=\342Z\203<L\355\006\275\302@\t\274\212\365\023<\014a\305<\307J\217\274\217\2624<\264\342R\273\275\006\035=\037d\334<{\233\324\273i\242?<H\323\342<)\275^\275\221\372\361\274\361A\n<\256\272\315<>\006\030=\356T_<\276\364*<\232*\334<J?\\<\341\312\r\275\016\002\266<<\357\376<\241\213\310<\330\0056\275\034\265m;f\213\027\275\327\212\021<\021` \2754\252\274;\022\224S=\3571Y=\030\362\220\274(\002\327\27491\311;\311\247Y=\262\306^\275\'c[\275\324\312j<\005\0076\274v;0\275]\317@=\345B\021<\332\010\215\274\211\036\231;\267\260\321\274H\235 =\364\"\217\274\262\035\217;)\000\262<\024q\374<&\366\232\273g\024\r=\367)\036=\246\230\362<-\250\006<\304\214\262<\365\340\026\273\2358{\274\351\256N\275y\333(=y\025\226<!v\232\274[j[=\217G\253\274\347\255\023\275K\024J\275nA\304\274p\3757\275Un\277\272:p\037\274\036\272)=\\\232;\275}\307#=\223B]\275\306\214B<+\207J=\202\343\275<\0040\314\274#Z =\261}V\275|\220\325\274\340\005\003\275\276\323@\275\021i\377\274\251wO=\373\253\024\275I\271\357;\320\355\363\274\275\234.\275#D\333<y\206\251<\233a\217\272\274g\345<\250_\350<\201n\223<\262Z8=*\327E=\2749$=\304OF\275\261\017!\275E\0107=U\2565\275\034\234\221\274\n\357\025=\261{=;K2\230\274\277\245\001\275\245\251M\275\312\t\321;\217{*\274\2654\370\274u7^\275\037w\340:>\377\363\274\324z\030\275+\366\002\274\001\235\246<\352\241\020\275\006L\331<\222\236<\274\226\004\344<\024l1=\250\003\006<\335\334\177\274 \200\340;\353}%\274<\033\356<\266\253P=\230:3\275\367\231$\275\002\0316\274\031\333\030<\252\354Y\274\221m\315<\262.\004=\252\362;\275\177\330\307<v\307\352\274bv%\272\355d\371\274z\017\217;\230Y%=\334\366\264<\217\260\004=\235>\000\275#\322?=\364\301d<\275\313X\275\303\0328\275\303=/=\"\224\346<\303\230\217<K\244}<\304\261<=\020\255\002\273,\266&=\317\2274\275~\245\320\2738\026\306\274 u1\274\314\301\022\275\377\324\203\274Q\013\020:\034\026\264<(Y\332<\005\276\302<`b\214<\021m5\274\320\240\036\274\311\262\337<\014\256L\275%\360\007<4\247E\275/\032N\275\353\252\230;\')\320;*\026\022\275\222\313\r\275t\276m;LwP=\255\360\037=P\375U\275C\275\013=\367N\354;\264h\374\274W\037\265<\225\321\347\274\336\016\031\275\200\257\206<r\322\035\275~\264\037\274<\222\\<{\371\205\274[\251Q;\030\005\037\274k\017|<Q\244X=F\037\027\274L\325\213\273\200\375\004\275\316<\001=\32293;\'\354!=mZ!=T\023B=oBL<qW\325\272\264\356\027=\350\356t\272t\226y\274\000{\221\274\212\234\233\273g<N\275Z\3333=\250R\023<\336\203L=ho\006=\261\314\'\275\261\371`;\307U\270<\374<R\273\357\r\367\274\262w\200\274\275a\377\274\'\0274\275\312\271\302<f\3319=\372g`\274\004\207\023=B\2350=\315\221\000<\370\310&\274\336<\222;\330\025\341<S\204\260\274\317\232\330\273\227y\310\274P\002\332\274J\222\347\274\261yO\275\300\271q;\212\270B\275|f\207<T\261\333;\243h\262\274\241\357G\275\260B\275\274\323\256\362<Dee<\3429\267\272\330\236\263;\345\264W=\000\265\210\274r\026\375<:\202<<\256\0228=\262\2554\275K\030\357\274l\241 \274w\277\\\275\203&\322<\235-\202<\352\3645=\214L$\273\t\336I<\341I\312;]*:\274\035\334\t=\225\371B<\314H\032\274\032\316k<2\202F\274f\337\323\274\362\276Y\2751B!=\233\3520\275\017\306\241\274Lv$=\254U\037\275\234MM=\207f:<\031\001\346\273Z\350%=BS\004=\376\302\343\2740\032\324<1\n\327\274a\234\000=7\300\235\274\315\227\177<AkL\274\373\005\216<\211\342R=\216C\227<\257\004\244<\366`M=U\026\'\275,\002M;G\231D\274h\216\255<\316\333N\275\036]\207\274q37\275\262\204\035=N\345F=\364BQ\275<\273,=\273a\235\273\343\323(=\346H\251\273W\205\013\272\2019R\275\256\260\022\275\361.\n\270\317R/=:\236Y=c,\r=\303\036\203<\2432\302\273\300\231\255\273g\202H\275\330\031\035=\371\025\324\274\220b\253<\220|\350\273\212\022\247\274h\246\222\274@\317\004=b\0171=-Q-\275\232Oj<9j_=\003\364\031=\313\017\373\273D\3616<\023\227]<\337Ah:\261:d\274\355\030V\275\360\260\355<=\364\237<<\260Y=\367.<\275I^\345;\353\367U=\225=c<\030_\317:k\2005\275<\342\254<Y\272*\275*2\376\274\t#\n=\371\243R\275\014\376?=\217\353/=\275G\207<C(H\275\336k\017\275\005YG\274\003$\031\275\276\304=\275\217!\r=\325\215M=~\307A=\225\312\326\274g\212\260\274\r}Y\275S\241\\<X@\252;6b>\275\254\323\306<lI\365\272\\\306\024\274J\373\031\275\3460A\275\257HR=D\013Z\275\364\300+=@\311%\2749\243q<\021\332\344\273\364o9\274\370zX\275p\275\325\274\221\244\326\274%\340\322;[\342\224\274\213d\300:\377\301\275<\"\320\212\274y\341\"=\313\202$=\355\272\003=\277 \337\2745\037\246\274\203\017\206<\202\345\225\273Oe\265\272\201\272@\274\016\306;\2750\366C\275\224e\036\274\\\352_<^h\001=\366\375\301\274\024$P:U\0271\275\010\371\213<\007\"\251\274\364\275\004\275b;9=Y\252G\274\3350\260<^\351\030\275\326\243\356\274\357\370\305\274H\tD\275\252\275\252\274m\224P\275\331\007\251;\0267!\274\370j\023=\356\364\n=D\331\224<<\237\260<\261\373\252\274\220\373\257;\352kE\275\267\212@<\031\364F\2751f\202\274|k&\275\245F>\275\251\264Q\275\321\245\004\275:\257\013\275\276\211=\274\250\335\235\274\371\233\313\274N\266,=\360\003J=\266\247\257<s\361\210:\265\345/=\370\'\272<\\=g<\022u!\275\253\203\230\274\351\373\266<(\017`;\354\250\340:\337\223T\274\303\311\003=\022\213\363\274@\233$;w\013\035={Th\274\017_\247\274Z\035\310\274!}6=\022\307Y=D\334\023\2754W\260:1\346(=G\036\371:\315\324\267\273\007\263\036\274\252*\337\274\004\021\372<\320\316\234;J0\014;\014\263\364<\026\326\331<T\264\003\275q0\247\274\272\037\341<3\224\230\274\310X@\275s\020@=\334\037\007=\312\005\356<\325\256/=\210\343\004; \233\215<\252\340;=\237F\352<-p\017\275\363\003a<\263\351@<\247E\027\273\363\246\030=\212\361M=\0257\020=\273\037R\275!\210\\\275 \222\036\275+\\@\275\005\311\005=\222\037\034=\270+I=\260r\263\274\250\022\\\272[\207\254\274.\201\005\2751\252\226<bF\376<A\276\263\274\036\030\323\274\203\300$\275\2118@\275\377F =\256#n\274\n\005Y\275yy6\275-r\340<\255.\270\274v<\225<\t?\000=\314\243R\275\232TF\274\264\271>=l\254V\275\213dP\275\205\016\367;\360\tG\275\243\245B=\217\327\353\274kR\214\273q\'\370\274\023|<=\357\340\306<\244o.<`\237\307<\025\360\373<e\316\021=\307\033\347;`H9\275T\371-\275[\272*\275\270\334\370\274+\377N\275-\310\372:\267]\034\273C\234L<\261l\264\273\227\352T=\\\273\300<\226`\032=\253^\030\275\375J\311<\t\004\016\275\r/\236<\340\023\005\275~\263\305<K!\243<\362\373\223\274\206\013\254<)\240\216;\201\367\227<\217\252\003\274E\320\246<\224\226\306;\037\"-=\357V\006=\265\350\210<\305D\241\274\226\254\232<\317\005\'\275&\361\344<\036\277B=\270\336\213<\310\200==\260KF\275\332\315\247<\310(\363\274\366\207\361\273y\2513=\332\345\321\274t\333\310\274\264~\033\274\316\035\324<\215\225,=\366\010!=\215-\311<\266\250\223<\177$\267\274\373mB=b+\237<%\034\247<v\360\r=\226[I=E\0261\275\366\001S:\035\216^=^\375\031=\256sF\275\343\\C\275\310\252\025\275\236\013[=O\343\002\275H\027)\2754\300\034\275\034s\377\274\365\006\024\275\363\205\217\274!3\224<\222b)\275\374\005h<\250()={>9\274c\301E\275\022c\331\274\203\225]\275\236\326(=\030Q\204\274\245\201I=v\206\267\274P\222\005\275\314\256(=\3130<=\366\272\r\275\205\216\347\274\222A\217\272q\203\347<\271\022\021\275\322\324+=\342\324 =\324\263V<\3440\332<\261DF\275O\240\017=?\334W\275?\262_\275A\360\342<\017\305i;\030;\317\273\232\177\320\274\310#=\275P\322\004=,Ux\274Z\004H=\351\335;=8\231\320\27456\001=v\025\235;\332\266L=\327_\222\274\3316\363\274>\2157=l\250\014\275\230Dw;\200]\344\273\315\302\324\274|F7\275\227\306\"=\027\025\355:\364\016\207<c\270\210\274\2755\326;\363\343\010\274\237\347^\275x\226\002\275\215\014-\275n;\333<\017E\031<\340%\271\273\033\336\223<\271\214\235\272\035\034\331<J\270\324<\261P\232\274\\}V=0j\033\275 \004\251\273\256\004\253\274\027\335\353\274\300`\032\275\322\355\007=\313\253#\2759\270\332\273\037\354\365;\326\365\024=\210\230\034<-X\207<y\262T\275\327;\000\2753\236\310<\225K^=Kp8=\235%\343<52\326\274{\306\321;I\317&=\220\004L<&\204F=\225\037_=.h\021={\n\340<\311}\t\275\266\022)=\217\316\\<\221\275\216<_\214\271;\330\003]=\356J\211;tw$\275\261$\t<\316v\252\273\334\006\326<\017\256\003\275\001\327==3z\235;9\200\250\274\244v\307<\237\3335=B#)\271\201\250\025=\373W\266<\022\235$<\233\305\222\274nq4\275\372\266\367<\032\311\037=\224L\203\273\3718 \275\216\350\316<\356\256[\275\345\261#=\364P\025\275\013\365;\275Tt\352\274\337\320\020\275\361f\371<!\276\031\273\006\252\331<\233\025G\271\227\356b\273\234OW\275\322\326\340\273\233\320?\275\257V\025\275\370\253\n=\251\244\341\274\365\252W=\005k4<\220\302\332\274\367\363\210<\351\373\231<I\311t\274\336\353N\275X\021\203<\317\323P\275!\273\273<\014G\\=<\177T;)\360\001<\206\374\277<\303\352m\272\324\237[<\211\032\224<\204\245\"=t\276\261\274\230\237\376<\244\352\203<-\234\326\272_\312\325\274\2211\016\275\377\241\310<h\305\232<\356\021\370\274X\027P\274\031<\355\273\207*N\275\341\203<=\340\233\326<\257\264\302<$\210\003=\225\221\245\274s\'\213\274*=\007\275A\221%\274G\306#\2753O\022=\001\242\370\272\331b\224\272\000\211R=\336=\'=\264\001\267\274\372\3160\275\274\016|\274,\177C<\344\002s\274\306L<=OX\031\275\323\360\306\274\312\022\226\274\005\235\003\275\362\201\214<\023\347\341;#U=\275\253\246\017\275\243\247R<\000{\351\274\023\354\374<u3_=\2349\205\274x\2342=\031H\326\273\346\262[\274\266\0270=\205a\351;A\301\327\274\362\374&\275\230q\275\2749M\002=R@7=\350\033\352\274\r\324\251<)\010\\<\006V\205\274n\230\030=\336\006\013=\332\365\236\273\2557R=\300\336G=e\273\235\274\332\317\211\273\216\365]\275S\376\265\274\242\207,=\231\340\345\274\0172s:%\255\343;\001\325r\274s\313\342\273\370\315N=\027\202y;\"\313\\=\370f\366\274\220\0234=1*\007<\342D\320<\201\232\224\273\332<L=+\031S=f\267\002\2759\347\010=\222F\240<\032\212C\274\353vH\275\221\2431={\253\360<\234\261n\272.@\273\274@\005<=\252\260\331<\336\003/:\307\246+<rB\'\275\002\346*=$\030-\275\300\306\205<\230\332*<\')\372<\234\"+=\315\364%\275G\311\266\271ElI\274w\236\021=\222\267A<\307\276\222;\221\370S=\250\324+\274\250f[<\351\311\336<\213\3275\275\310\274\025<\371|/\274\253\264\226<\013\277#\275Q\326\r\274\024b<\275u\355F\275\235)\267\273c\204\206\272\312\334K\275x\327_\274\374\205\264\274w\300\271;{\320\245<\013y3\275\035&\"\274\377\305E\274\331\177N\275\3660r\272\271\210>\275\202\n\256<\257MB\275\327\204\352\274\236\200\323;\312<\242\273\360Q\013\273\314\371\212\274\224m\n=\tB\027=q\3319=A\0327=:U\322\272\204W\030\275\326\364R\275\275\020:\275\001\205J=\226\'`<\247gH=\005\215V\275\030{\267<\277\243+\275\251\300(=\014Q>\275\302D#\274\213\t\375;\222)\361\274\213U\267\274\205\276E=\005\017\030\275\030\217Z=z\270\227\274M\244P<\247\366C<\375\231\310\274d\2144=\342n\021\274\\!t<N\325U\275G\343\345\274L&\342\274\206\327\025\275\263z:=\374\036\005=\026\347T\2750\002\370\274n\245\232\274\036\010\235\274\3406<\275\236 \225\274D\237\003=|M\006\274b\252\311\274\2605\305<\3341V\275>\010\337<\223%y\274\2348Q\275e\245\203\273\267:\230\274\340b\034\275~\343H\275\034k\222;DB\235:\020\234\332<=K>=\214\303\304<\2635;=\002\215;\274\002\330\351\274\230\314#\275\201\335\335\274\265O#\275\n\254V=\010*\362<=HS\275\207\354\222\274\371\355\226\274\200\206m<\021c\036=\207\354\260\274\200\007\363\273`\013\030=\337\021\363\273\033\000\266<w9\200<\225\213.=\223*\003\275\200\324\014;{:\304<\204\330\267<\"\356\276\274\272\271R\275\022\033\342<\371\027\021\275Yq\231:V\351.\275;\246\005\273Q\004\247;F\"=<k\035\366\274\003\n\370\273\273\t\320\274\223\036\273;0\035%=(1\034:Y/\243\2744r\2669d\'\004=\265\001\315\273]}>\274X\372\311\274\344\225~\274\251c\331\273m\035h\274\245\216\357\274\270KF=\004\252\202;\357\250\025\275[\317C=\222:\202<Y\002\r<\237\215H;\302d\010=\241\307v;R\370*=\235GI=p\261*=\301.1<\205w\017=\277\030\010\273V]\362\274m\005\377<\256b\347\274u\260\233<\356\023\213\274N\033\356\274\376\304\223\274]\247\326\273\010\347\264\274SJ6=.\0237\274X*@\273~\r\240;\016\207\276:p\335!\274\016\201:\275\257\276\022<\365w@8\243\346==\214\334I\274@M\334\274\230\235\377<\207\352=\275m\206Q<`\337Z\275\"\362O;;Y\251;7P*\274x<\260\274F\242\001=.fK=\246\317B=}\031\357<\357D*=A\"\217\274\'\264X=\272\302/\2742;\265<\013\240\340<\312%X=\216u\313:\342\0353\275\273\220\025=*:$<\236>\036\275\326\341\350;*\355+=\346\3674=\365C\357\2736V\334<\274\331U<\243\021&\273\236\270W\275}]>\275\255\314\203<\312v)\272f\372^\273\013\034\234\274\262\346L=\036\216R=\034\336B\274\317\307{\274\352h\333\274{\306\273\274\037$3=\025I/=\304\204\205<\347*\002=\301\252l<\235=\374<O\t%\275x\261_<RJ\256\274\253B>=~\350[\275\344\311.\275\342\343,=\'R\214<^\177\037=\335\324\016=\017\377G=\320U\364<\374\247\236\274\225s8=o\270\"\273\030\373\204<\246N\013=A\320\023\274>\242P<=\033\377<m\331Y\275g)2=Ze\270\274\001\231W\275v\255\002=\366KR\275P7\335<7\227\004\274\302\272\352\274\364\237\023;\236!A\275D\201\313<\311X\227<\376m\324;\206f\024=\223\3660=N\262\004=\177pC\274k\217\003\275\270P\324;\317\327\"\274\271\225\272\273\336\366\202\274\244ZC=+H\001=\212t\235<\010\002\034\274\271<\251<k\355H\275\356b\377<\344\370w<X\307\265<\203\341\317\274\227\013\245\273\254\365\312<^X:\274|,B\274\264\254E<0\363O=\032\365\024\275\3018\261<\246G\370\274\221\224\220\273\220\267\026\275\020\031M\275\216e+\275\032\254\206\274W\261]=\225\013\347<\020\366\303<\254\013\007\274\006\213,<%\230k;+B\021\275\017D\362\273\302S\007=\004\241\337\274\303\222r\274\027\022\002=\t\307C\275\206\243\"\274\006\206\005\275\352\267\027=\371s\035<\346\310)\274B\374\n=\306\350\263\274\243\205\306<T\367&=\351\204&;Yl\222<\365*]\275\303\342\211<:\006-<\226O\r={\331d<\205\225C\274\010\313H\2751\017\232\274\257\365\222:9\244e\273\251\321\301\274Z\363\354<\201\371\340\274\277\361\277\274L\212\327;&\235\200<\251\312@\275~\220\200<\217\267_=2\270\014=\265_\362\273^\003u<>\276\027\275\300\004\375\273\2117\010\274y\033\027=FE\220<\224)\241\2743\334\036\275\304\215\375\274\377{F=z:\364;\n\037W\275\000\020\307;\206\215Y=\210\357\261\272\217\'-\275\340V\"\275V:\211<\360m\327\274\242{5\274\257\226\001\274\260\017\020\275\221\362\237\274\231n1=\345\020\312\274`\200O\2757\322\203\2745_M;\215\370\023\275e\216\255<W\001\016\275&2\023\275\346Z\t=\233\026\363\271\230\253\004=j_\261\274\t\225\013\274\235IZ=S\354\233<aO!\2751\020\021\275X\330\013<-\004\312<EZR\275\200G,=\321Ue\274|\203n<\232\037\342\274\002~$=\343\321\027\275^.T=\251A\235\274\206C\341<\274A7\275\270\342R\273]\236\035\2756\314\275\274%+L=:M1<\324\tP<y\305\205\274\375\365\260<J\304W=\315W\033\275\306\316+\275kN\322<T\263\010=\0253\374;)M\n\275\2579\365\274\034\311\025\275\t\256J\275\357\301\277<[2b\273\304<3\275\335\017\005=R\366\036<h\255;\275\317\303E=\025\177\362<C\3673\2758\376\377\274k@\257<r\222\233;\353w&=\273\320X\275\320B4\274R$.<\357jK\275\327P\301\274\201\032>\275;-\275<\343\214\222<T\013\017\275}\3364\273c\375\013=\262\017\021=\"G\206<\n\263\021<c\306\366\273w\215_\275e\320\307<|7\267<1L\035<\366aX=\352\321t;6W\026\274\212\222\224<\n\037\024\275\317\243\341;fhM=\253\201==\007Y.;\225\243[=14\227\273\362\020%=#\010\335<$\214M\274)\234\014\275S\234\303\274C\361\273\274\202\373\272\274!*\264\274y\"\000:\254W\256<\306j\312<\267D\246;\314<\270\274_\003\317\274\200\240\326\274r\353\027=S\323\026=\320h\212\274`\231\215<EiU\274\261\251\312<\271U_\274\230\346%<q(\037=\247\335T<\005\024V=$F6=\027\216\"\275\327\\\334\274\216\214R=\2747\242;P\331_=J~W<\265<\303\274\225\0008\275\025\030D=\026\346\342;\345b\323\274*>\027=!\341\232\274!|\007\272`\316\\\275`\016O\2755YO;,B5<\363%\226\274\200\032J\274\235C\234;3\355@=\321\3034\275\256\231\177\272\224A\005\275\275\352B<$\334\211\273\272k\374<\264\365\200<\353\026\365\274\362S\035\275\367\251I=F\200\302\274\365\342[=u\0109=\023\213#\275\333\357\n=EHP=l\036(=\033\037\r=]\351\030\272\216\371\212<>?\360;A\021V\275\235z\231<ev\255\274\263\273 \275\305\344z\274\332\326\037\275\204\305T=J\202E<d\242\271<(\276\003=4\256\026=\'\303\036\275\013\2770<A\200\035\275\343\271\034\275&\"L\275\311\301\000=\374R\203\274e\271\243\272\305\020/=SSM\275\354\347\026\275\211\205\377<~\3578\274\302;\303<-U\002\275\222\022\226\274\307 \333; \346U\275\214\215\230\274W\240m\274L\006/=\005\337\365\274\347\217\001=\010~<<.\332+=\022h\255<\224i!<U T<\310\001K=\"\302`\2747R4;\241\3215\275\017\245\\=\033\3224\275\361\337\337\274N\345\274<=\177\200\274u0F=\'\302.\275\343]\033=F\241\237;*\033F\275\032\035z;\020WG=\003\220\001\275\242\023\232<c\3667\275\251\000\224<\004.\345<\204\021-\275\034s\216\274\214l\362<\000\265[\274\331\325\262\273\r\033\200<\333\314\236</\021/=\026\343H=\263\324>=MzC=0~\311<\321f\320\273AZ<\275\323\273\331<\364\002!<\254(S\275\260\255\326\273\221l\266<\205\367%\274\364\355k<\361\273%\275\264\026\036=\t\335\342\273\305\373\254\274P\341\315<a\356\350<8\022\326\274\375#\032\275\030\"\371\274\206\033\335\273\201\311_\275\205x&\273\374EE=\361\021C=*\'\035=\337y\335<\276c\213<\320\237$\274;=^=\'\037\2179\354\201\377<~\361O=\357\315\205\274\300\034\026<\355\0247=f\\\212;?-W\274\231\\\276;!\017*\274$\206\021=\274\267);\272\230\033=;\347C<\276I^<7\317.\275\227\312U=\344\256\034\275\371\r\247\274\361\347$\273w\241Q< \217\\\275gx\255<R\373\"\275 \370\211\274w\3504\275\253x\312\273\310\260\'=\236\256\374\272\2265&=L\254^=\210\256\'<\331\"<\275h1\301<\3261\226<\300\340\374<\224\357\216\274\231\2565\275@X\370\274\252#1=j\362\031\275:B\003=\003\223\177<e\371/\274\352}\360<\342\3309\275\024\320\245;\333\300\220:\334\3158\2754\352\005\275\\\272(\274\311J\347;qL\323;]_\332<\t\265\212\274\201\304\264;|\201\321<\r\341T=?g\265<e\336\203;\242?\321\274\260\356d\273i\0029:5\255$=\331g\237<\225\263\224<V;\004\275\323{\"=\223\2448=\274\026;\275\341P#=4y\037<zh^\275BF\033\275\3020H=\375\t\212;B\276\\\273\226\004\020\275\270\236\377\274\252\227\r=\230\374\344;\322`x<\232\005\t\274N\341;\275\373\021\217<\272`\304<?&&\275\216\202<<[\010\225\274\362\236\"=\003Z\026=\267\036K\274\334\355\265<yo <v[\354<\n2<=\000\333L=\331\345[=i/%=\316|\322\274\2152\200<\035H\353\273\377\353,=P\370R=\311U\212\273\2218\027=k\251\023\2750\312\315<[:\357<2f\363<\2613\352<$8\355<b\023O=\241\212\300\274De\000=.:!=i?\336<+N\344\274_\001\216;{\310[\274\\ \321\274S\360\245\274K\3650\275;D@\274&\266\324<\336\241\364\274\323\233T=\321M(\275p\257C\2743:\237\274\253\241\003=\234L\221<\220_\274<&\364d\274}F\016<;\3128\275\034\277\277\274\273\255E\275F3\001=\010\333+\274\004l\343\274*\035_\274g\307\216<\326\322E=o \'=N\177\016=\033s\307\274\260\317\216\272\327\3723<\030;\n=\307G\022=\206S\'\275\354\372\246<\253\250*\275\272\253\000=a\220\016<\375\010\231\273\343\255|<\237d\241<b8\344\274\033\337<\272aM#\271\003}/\275T\273\022=z\261\221\274\211K\234\274K\265Z=~)\322<\252\004\354\2749rJ\275Z\215Q=\236\306\'=\305\354\331;\017\211\302:\326T\211\2737o\373;`\253\276\274\335 G<%\032\304;\333\221\342<J\376:=\243\002\237\272\340\266\325<\301L\376\274\232b\004=\352\002%\274b\246\246\273#\2431\275\036\031R\273\205a\370\273\255B\300\274\345\3776\275\264\266!=\t\372#=T\305|\273f\034Z=\264\\\330<\276\201\331<\001\332/\275D\214\275;\331\260\351<\320\324\366\2744\346\020\275\32064\273\264x\241;Z@/\275h\265Z=\273%>;\352\002\016\275\337\267\274\272aj\254<ek<\275\364\261(\275\321\345\203<%\017_\2751P4\275\302\302&\275\224\231!=\230\'+\275\010\276\001\275\006,\356\274\'\210U\275\030\353\016=.\322\024=\361z\240<\034\210\233\274\214@\t\275\\\230F\2756\036[\2750\316\013\275\254*#=\202\304%\275\264\305F=\355\013\262\273O\321\r=_#\237\273\032\246\374<V.5\275\034\300\202\274FI =\024\212\004=\344\350\004=*l_\275Z\274:\275\310\261[=\020F\275\274\313\022\021\275\373\234\031=]\221\246<\212])=bco<<\331\357;RJ =\013\236G\274\3101\t\275\315\202\026=i\310\"=\310\007\301<\357\376\317<\242X\352\274\312N\343\274\353e{\271\004\016\372\273|\3178\275\245\272\264\274\261\275I=1\017%\274nH\036=\340\025\346\273\225\t\004<0\355%<<\257^\274\213#\315\274\227#\254\273\215 2=u\016$\275\037\202\266<P\356S\275#OQ\275w\313k;\"\222\210<\243\005=\274\317R\264<A\023R\274\277\263\325;\252\370\326<\022\t\222\274yz\274\274\217Y\377\2744\262\005\275\210m\316\274\335\024\r=D\376\330\274S\255\237<\234\203\362\274\275\313\353\2749y\255<\352\335 =\235\347?=\310E\'\274F\212+;=~\345\274^\312\000<\375\223\250\274C\306\370\272\253\t\315<\311\326p\2732\017)\273\252\255\231\274\243<\022=\006\377\204<[dE=,\363/:\314\003\213:\211N\235\273\271h\004:\377\306\201;\222\203_\275\353X\217\274L\231P=~D\310<[\363\030;.m\306;$aQ=\224\232{\273\022X\364\274\226\203\225\274\017x\t;\177\310\265<\273\211_<#\010\034\275\324<\333\271\004fU\275\216\002+\275\342F\257<u\3100=<\317s<\332\312\235\274\213V\342<\376\255L\274i \240:\247\240<=g\r\255<\210\271\000=\0051\273<\225\034\007\274\327\344\353\274_\300\354\274\001(J=\002&y9\355\014\344\274\007^F=\346w\317\274f\211\366\274\241\364)\275V\226\023=pc\346\272\365\213\215<D\211^=\242r$\274\236\326G=B\202\t\275n?D=\270\347\206<p\3139\273\316!I\274v\375\'\275H[:\274HG\242\273+a\273<\227\007_=\350\317<\275\356\215\214\274=\370\344:tT\221<\024\376y\2741\316H\275\356>_;\3054\"\274\246\033\024\274/\nG=\323R\344;r\201\037=ma\237<\373W\267\274\211\t^<\022\032\030=\343\334U\275\r\241\025=\032\023\030=R\t\013=d\277A\275je\325\274.7\006\274\003,I=\274\024W\275eS\205<\345J\331:\265\267*\275\377^\335<\316\374\r=\006b\274\274\217%\274\271Ur\005\275H\244\013=\216a#<\366\2263<\016\3622=\030\270\363\274oQY\275\234//\274$H\200\274\351.\244\271\220\235%\275b2 =\354\2010\275\250\322N;\353\310M\274\023\253\017\274\034\3176\275\254j\363\274^.\211;\n\241\265\273\017\205^=\307\033\025<\347\274x<J\204^<-&\265;\340\203\326\274e\363\364\274\353\347\026;\373\334$=\250L!\275\000\366$=]\372\361\274\n[Q\273I\315]\275t-\234<\2229\014\275\021\375,=\237.2\274|+\254;$\206r<\335\010|<DEY\275QZ1\275\254\324J\274/\371F;\213\032\333\273`\236~<\312\334C;\335\250,<\321}P=\253\365\327<z\031\301\274^\333\266\274b\010\034=8\205\243\273\361\322\224\274R)\274<\010l\353<W\272);\002WX\274E\260\371<\350\234\266\273\217HM\275\246\261\032=\246\243\251\274_\'|<v~\306<\007Q\266\274\212\220\325<OYS<\003\334\334<\202\222$=F\273^=\321\2575\273b\246\246\274FD*=s\036>=O\235\375\272\313\366i<\373c\361\274v\247\r=a8Y=\251\206\r=\357\231\021\2753\021P\275\347\236\034=^-\234;\2573k<8\327m;/\262\001\275#a\3759\033\272\276<pU\024<\243\017\035\275\271\375\232<Z&\233\274ha\031\275d\035L=X\000\021=\027\271\326\274\255\262\336:\316D\t\275\262s\006;q\270\206\274^U\241\274\017\007-\275.t3\275\202Z\334\274e\270\026<\020\270\000\275\240\367 \275u\237\202\274;\256M\275\265fJ<j(U=Y\2438=\335\206%=\302\374\250\273\271\333I=\030_W\275\264\226R=3\027\244\274n\366n< k\032\275\206oK\275\314x<\275\010MV\275\237\007\021=p\332X\275\362v\013<e>[\274\234\332\335<\254\302/=\245\002\231<\032+\347\274\256PZ=yH\274\274\305\336\367\2749*\212<\t\330\326\274\345zH=\255\262\036\275\211\365?\275\343\256\"=\371\372\010=\004\010+\275\027\224\334<!\014\246\271\241\315(\275\345\304 \275\262\346#=k>>=\022q\377\273H\r\231\274\245\351\271\274x\030\210\274b!\274\271\007j\020:\005\343)=\357Z^=\242\345\031=V\266A=\034\205:<% \274\274\373\265*=^\305\312\274v\263[=\270\210.=\304\231\0229\003\211d<\300)A\274<F\273\274\356_\013=\216\347[\275\242\377`;\242\224\347\274\352\240X<q\014\033\275\301\363X=\300\371p<\210#G\275\304\267\247<O=?\275\371\307%9\364\036\323\272;l\252\274?L\024=\251\302A\275\213#I=\303:\375<kC<=\032\227K\275~\244\352<I\363E=\205\277\027\275\2721\203\274alU=+\321*=\'\241\322<\217\253\223<\325\035\017<\013\333*=\265\253\035<83H\275\271\262\317;\255\343?=A\3121\274\316M\355<\305(w\274\361\346\"=.\367W=\344{*=iq\244<NF7<\350@\315<\363I\225\274\014\234==JQ@:\345\371Q<\331\037=\274\240\300r\274\371\240\014=+-9=\376\2637\274.\257\341\2742\244*=Gy\010\275\353\311J=\305\270\363<x\357?=\310S\224<]\034\355\274\327\210\305\274\262\030\023<\321\207\372<\304J\354\274\272\236]\275\324@T=!\005D=\317\366\030=\270\204\257<\255\020_\275\027\341\214<\317\005(=\020\362A\275\022\037\010<\023\035\270;\340r-\275\313dY\275\226l+\275J\311\267\274\260\352\035;A\025\266\274\252+h:\023Z\'\275\014m\347\274\243`t<\256\312\355<\240\243\360;\222\377J\275}E\013=6$?=r#\263;\256\235\222\272UML\275#\362K=\254\3201=e\037>=>~c\274\034\004o\273e\234=\275\250=\262\274Su\r\275\250\036\376\274d\341\010=7P&;\345\030\336<N\1779<\254\000\206\274\202\253\233<A\372\274<\374\326,=a\264M\275G\224\323<\342<b\274\363\263\270\273{\250<\275\355\352\256\274\256\234\271<SnB=\261\272\205\274I:\333\274\320Z\035\275\374\000\334<\367\264\232\274\177\304\235;\225|\003\275\261\223\230<`p\302<\351\2075\275\350\376\322\274\260m\335;\250\310B=|\206H=\233\007B\275\333r\025=\277g\013\275\377\231Q:\033\242\\\275\244\237X<t&\010\274Kg\343\274\357\373\000=dL\001<O\233\226<U\375\325;\374\212.\275\023\305C=\222\377\241\273\262\227\r\275\313\321\266;\223p\323\2746\216I\275F\224A=\232SB\275R]H\275\307\271.\274\223\207\002=\023\2155\274\005\361N=z\345w<c\314@\275\254-k\274\242?\003\275|\272==\003\377\331;\014\2360=\271(\373\274\275U7=P\001J\274\254\030\004\275\352RF\275\377A\020\275+\035\035\275\013\207<==\267\300\274/\313R=\301\327E\275\002\t\217\273\036\241C\275K\254[<\247\232\030=\377\014\326<\317E\025\275<CY=Cc\037\275\343\021\224;dtG\273F\300\216\274\231b\366<9!\211<w\352\034\275\031,\'\275;\225\005=\016\005{:\2417\032\275Z\037\324\273\371\034\031\275\361\201Q\274\006\231\230<z\351\025\275\247rP\275+\257^=\256O4\275\352(\354:V\3040=\022\377\013\275V\3539=\255g\347\274\203\203Z=\316#(\275$\327R<\032\275W\275\345\215\341\273<\275\371\274[\200P\275b\351)\273\316v\034=\007\022_=\313\366]\275[\277\300<s\3613=\210h\032;o\245I\275Q4\022\275]\353$=\013\251E\274i\267^\275wx\365<{\232`\274\003.\026=6\266R=%\203E=\334\230\320\274+\301\215\274\035\273N=\357\016\021\273\026$%\275R\325\364\274\000\306\221\274\036\n_\274\237\001\362<\240Y \275u\025\"<\3665\t\275\272\240j<\351\312\330<J\253\355<\300\004\337<:E\240\274\016\026\311<\347\304\021\275\213\247\260<\014\363E=\3443\036=\326\254\013=\274\200\245\2743\010S=\0323\311<\032\301\244;\2330\'=8\035\013<\026\320\000\274\345C+\275\220z9\275\304}\001\275`A\034=\364+\230\273|$2=\227\032\003\275\256\251\272\274z\3021\275\025\3158\275\005\206\377<\245\326\035=\216?\250<\301\343X=\345\261\355;\257\312a8S9Z=\236\307N=0y\256\274\236\367\"=f\017\335<\240\022\007=\214+8=-yP=\243\217\350\274\346w\'=\375\327\003\275e\274\334<;\034:\275nD\343\272\245C\371<1\256S=\036-*=\220\317\031\275\250\270\231\274\375\306\353<\255\270\033<\2076F\275\226\361\206<X\021\367\274\217I\316<\241\270\210<W\253\n<\373\376^\275\001$\264<\260\323\245\2746g[\275\177\005\201;\265H\251<\235[\322\273YP\301<\257,R\274\347\302\007<9\372\344;\327e\014\275\016\365\343\274\351T\332\274\212c:=\330\032\033=>N\020<\261*\007=OHS=W\025C=f\034$\275\266\245\003\275?HO\275\314\215?=b\264\337\274\327\305T:\232\223\304\274\3634\250\274\177P\023\275\250YX=\010K\363\274k2\227<\262vT;z\334\226<\245\264J<\354u\273<\353L\254\274\243\032l<P\210\205\274\305\347$=\225\320\356<\0173\177\2713W\337\274\324\361\214<\300\341\316\274\330(L=\2768H\2713Y\017=\310\312#\273\335m\263<\271\314r<\2516Z\275<*m\274\000\276\035<xXK=3\352==\205\321*=?\367\005;E\301\211\274\005\341Y\275\016SB\275\tiI\274fNu\274\240\230\t\275\202\354\227;S\322\327;\303#0=\n\022\274:)\236\367<\345\326\220<\000\213(=.\016\305<>\374\376<\257\370I\275\204{G\275&\252\356\274\246\307M\275\243\370B\275\374W\000\274,\031\t=\245oL=\203\350\271<\353\216\025\275>\267\031\275<\032/\275k\365X<\t\313\202:s.%=\000\343\020\275\312\373\336\274\202w~<\271\201\332:y\"/<\211\204\260<\234\307\335<7\371@=\357\020$=\004F\217<$\271\355;M7\'\2757\002\350;\337\305&=\217\323h\274\330x\r=\336U\027=\022,\227\272\257\007\310<q\033\331;\233\010\331\274\\\220O\2759\345\033\275\217l\036\274\302\200n\273\364\332\323\274(P$=\362-5\275k\313C\275L\0136<6\225\202\274\306DL\275?5\021\275\013\003&=w\340O\275x0\233\274W^\002;\000\206A=]\325-\275v8M\275\325\374\001<6C\335<W\202C=\035\271\263\274\361W\177\274\220\312\027=\263\363\372<$\352\347<hTI\275\207\252\033=Zx\005\275\311\227\021\275\335\376\335<\221\345=\275\027v1;\241\326\314\274\252\252(<\211\221+=\276L\322\274\313\374\232\274\020\330\006<\373\302\020\275%f\351\274\351\014-\274\262\236\032=g\245\307<\372\023\005\275\356Z/<w\341&<\017~;\274i\356\006;\315\241&\274!\316\233<qA\330\274\351.B=\203\225\'=\236%\324\274 \214R=\312\342\000\275\303\376N=&\313U=\224\200M=?\0059\275\272\252\331<}\000\213\274G\022\365\274\231\013\255\273|\375\372;\232\337\215\274+{\214<\372\232\221<\264;\364<\017\221\200;Kz\010=\360;C\273\316\364@=|\206\371\274\362\205]=i\003\257<\033\341\034\275\233\010|\274\240\321%=\351\302S\275+\030\212\272~\"\022=\247\361+=\205s@=\327\200\017\275)\024\000\274\222\273\203\273\"\031\t=2\t(\272\302w\313<\\+\230<\336\032%=g\212\221\274\313n\347\274\277\305\020=\225\367\'=\014\346\320<c\210Q\275Z\362W=\324\206r<\270\252<=\320\316Z=\271\341\r=\242\2646\275\353\262\212<\260;\256\274d\262+\274x9\013\274\032\335\236\274\022\327\002=+| \273\332\271J=\236?\365\273\372\334\314\274\307\247\203\2741\025#\275v\371\247<6\321X=\306vA<s\3233<\244\207\031=#<\'=\315\224A=_\365\270<!\002\373\274j\333Z\273\017\036&\274\360\200\'\274\224\3227\275\371\363 \274\342]\362\274B\303\342\274\\\177\354;0\312\345\274\021kQ<\202\242E=\266^\214<t\033\035\275\0051&\275\205\321L\274\240\267%<\306\222#<\366(M\275\306\t\"\275]bP<\213\'\\<\355\366[\273\255~G=k\203w\274c\260\310<m\211\204\272\355/I\275\032V\020\273\376\334+=\3141\222\274\001\004\205;\2534\225;\205d5\275\\X\256\274Z\374Z\275\t\273X\275\377\232|\274L\366\376\274:B\037\275\270/\311\274\2138\002\275\036\267\032=\2078\245\273EC\\\275\240\250[\274\227I!;^\231\217;\367y\365\272\345\304i\272L\215\013=(\032\330<D\203\n=\004\234$\274dP\313<-\253\025=R\024\"\273\324\2529=\330\346\321\274;\013\r\275\336\263^\275\t\304\272\273\237\014\267<\352\222\"<\007l-\275\302\304\013\274\306\215&\274M\272\030<M\001)\275\365\247\256<\354\0269\275\321\003+\275\377F3\275\235\2620\274\234\337T=z\026\024=\0252T<x\346K\275M\341\243;G9\252\274`#T=\3355\034\275ll$\275\002:\240\270\250=\306\274\326\271(=\360\273:\275\0076\205\274YJ\221<\366\227^=\216\300\037=\337\220\312\274\235Ry:\035}\\\2751O\264<2\343\t=\244\3130\274\220^\030\275\241\353\316;l\264.\273\024 !\275T\215==\376\005\021\274\177\254\t\275\212\210-=\277z0\273\222\034\215\273\344\262\016\275\357\321\216\2747\211.=\027\266\220\274-6x\2722`\275\272\272\001\266\272\023z.\275\252;\215<\223\037\213\273\0246\274\274\376\222\"<u\250\271\274\014\032\211\274m\266Q=\007\257\341\274\217\255-=L\327|\274\347\336\2609Q8\364\274\252\341P=\232G\213;\007\370\034\275g\007q\274\n\202\030=X\334/\275C)W\273|\tN\2751\225W=\301\010\267\274\254\3723=^\0079\275\364xE=[\037^\275\340-\337\272\221\0256\275\211W\024\274\243?\352\274\224\007\240\274/\266P<\215\346b\274\301\365>=\024\1776\275i\001T\275w\340\233<p\274\212\274\275]\021<\215{9\273\353\200\007\275\216G,=5=G=W\214\372\274H\223\312\274zxl<\024\307\252<`\021\350;\257\212\000=\271&:=VJ\020;\362\021(=\254\251\247:\203C \274Y\305\030;\2342\255<)kM=H\3475\275\024o\327\274\001\257\232\2732U^=:\377\353<\032/$=\235\203\232<\242\320\272<q\377.=\000z[\275\241\0065\273\266+B\275|\237\316\273\007\320T;#7\253<G\036U=\363\312W;\022\325\363\274H\220\007\273\257\3216=\023J\r=Fr\213<\000\344q<\366\220\014\274\243\354\274<\r\256\332<2\223\323\274\310\026\022\275\334\240g\274-\250\250\274\303A\277\274\013\"\303<ms\201;X\246]=\006\035.\275\217\242I=\234X\355\274\203\0371\275\336lb\274~j\375\274\232\241\n=ptF=\230\327S<\246 \232<j|\374<.\245:\275)J\275<\263\310\"<`\1770\274\314\303\277<2a\207;\264\244?=\253+\014=\203:/\274\363\307\263<9K\343<\355G9\275\213&\006\275u\315\333:\016.2=\211\036{;\376o/=\2210,\275]T\201<\211\037\3129\361 +=~O;\275X\036\374;\224\000Y=&\310R\273\235\321\014\275\375\177\301;^|\314<\252\3323=\316\234\256<\355\263\365\274sT\264:\2059+:\251=\300<\021^B\275cs\\=\022\216/\275\350c\223;\3462.=U\005S=\007\000\200<\235v\373<\031u\025=\317\213==\233-\036=\324\343\234<k\031&\274\260\203\"\273\306\260\220;\003\365T=\366\341\013\275\226t4=\326\275u\274\317\313\232;g\250\223;\371\307\020\275\234\341\214<\300\n\032\275\342\276\322\274\2763\000=\'\360R\275DE\363<K#\376\273R\220?=|(\027<\030\364\002\275H)\n\275i~Y\275S\260]=\303Z\223\272\344z(=\025\031\"=\255(<=\3252_\275\271\017\n=<\371\3579\252\3703\275\361t\016\274\221\272\261\274!1\205\273\330\324_=-B\241\273\346\272y\273\t}\030\275I[\254\274\303S\002\2751W\373\274|\270></2\334<\366\332;\275mhi\272\355\377&\275\377\t\004\275\010\227\022\275\312\345j\274\254\225 =x\3357\275\311\345\202\274\'\374\000\273\240\213\246;\214\033\"=\253`t\274\316\342m\273\004\343-\275\200\224\243;/\216\026=@\243h\274dt\177<\3373\027=\000\'/=\016}r\273-YP\275F\036\226\274^y\334;\312h\351\2748\220\340\274\217\307\275;\325\030\342\274\240\264\"=\231\240Z<\240\304\350\274\222\233\t\275\026\243\267<\247\211N=1\346z<\253\0242=\027\375\323\274#\030\252<4TM\273\010\010\203\274r)\2179\375I\000\2757c\002=\316\214\017\275lt5=\026~\303\273\256gM\275@\265W\275\347\361\333;\327\260:\275x=Y\275\320U\"<3l\370\274\246L\375\274^9\\\275<,c\274f6h\272e\030\356\273\2138\245<\314`C=M\007\227<\225\365\037\275\007\300\016=\003\335Y=\314]\302\274\201v\025\275c\010\323<\205e\000=F4\341<\242\204\362<\256J\303\274o@<=\255\3554=\333\225\023\273!]\255<\231\332\035\274#P%<\350Q\327<\262+\3409\374\2450\274j\232\245<\274dA\275}U\214<\252\362?\275\376E\035=6\217\317<\227Q!\274\220qC\275\361I\237\274\275\352\240<\244\"\n;wf\003\274\352\251\025\275\270\210\023=\217sM=?\016\020=o\240\336\274).\200<\333H/\275~t\003=\336\302\201<&\005\211:\'\023v<\260?\376\274\023\035\346<$\'\254\273P\006\354\274=\233\363<\373\364\262;\213x\373\274zx\332<\360\2552\275\255\207\021=\340%\177\274\305\026Y=\233\234\307<*\2621=~x\001=\337\\\343\274\353!.=R\2739\274I\207\"<\205\326\233\274\226\352R=\221\002\016=\357\317\006=\"y\032\275\017A&=\177p\374<|\2338=\313\226\236\274\230\372\'\275B~D\275\303\0368=\3445\216\274\345\264+=\2476D\275\371\311\362;\037\n\207\273!\220\002<AY*<\271l\224\2741\360\335\274\313^N=v\303\t\275\354\002\003=\004\236+\2738\252a<X\305\367\274gi@\275\n\367M=\014\274\277;\334\204\360;4\032\215\273\306\262\010=\262\332\233<P\361(=E\201/\275\315\310g<l\023\366;J%\225\273#\317)=\216\215\"\275\323\267\023=\321ib<\013\341\326\274\r\213\270\273\205\214+=\202\327\256<61\032\275~P\013=\306\004\277;sA>\275!j\203;\014\330\316<\331\252V\275\217e\356\274\240\373S\275\n\220\347\274a\207X=\354\014\254;j>\254<DD\220<\'\317Y\274\025\232\037\274\001\200\020<\207V\336\273I+\203\2746YB\275\261c$\274\033a[=\0228\001=L\246\353<\337R\347;\34567=\241\014\365;\330\256\344<;\311\006\274\355`\250:\025\346\023\274\305\006\003\275\017\266w\274f\354\272\2747\034\037=A\355%=#(\340;\203/\231<)\255\223\273\346\036y\274\355\365o\274\t%E\275\035\355\036=Qg\363\271\305\257\007=\016\027D=\013\336\343\273\317)J=\035\315]\274\2139$\275\020\210)\274\236\322\372\274\222\337$\275\262\2375=B\311\"=\336jC\274q\r%=\010t|\272C\352\305;\331\211\274\274j)\300;q\211N\275>\203\037\275\007;\213<6%\367<\202Bd\274C\370\003=\303\310\"=\351\373\001\275:_b<5l\362\274\254\023\200\273\366\357\236<\032M\033\274\302\351\034<7fV\275\227%\212<\331\301u\273\030_\027<\026\262\026=J\371?\275\235\000a<\353j\253<\036\020E=\222\002=\275%Sv<\352\376\\\274\034Sm\274x\212\332\272\351\361==y\300\233\272;\277I\275\224\336L=F\305\315<\337\001,\2754\306\315\274\332\321\001<t\2775\275\365\257\215\274zk\005\2742\"L=\306\364 =\361\317\326\274\303\237\r=?\001Y;\332I\001\275\005uS\275!\022K=\017\364\t\274L\205\360\274\355\033\303\274\355^s<\244(\240;\004iA;\014S\"=,\233$\275\315\343\025\275\005\304\313<\257\023\225:\226\265\020\275\007k9<\022\330D=M\346\265<\276\001\237<\005\272\305\274\025\000!\275\363\307T\273z\372\023<\350\341\277<\253\021\027=\302;<<\276L\\\275\217\356\026=q\357\213\274\002\300[\275\017\336\324<IR\265\273\010\204\031\275\304{\241\273R\014\324\274\311|\027=\335\\\371<~\020\251\274h\223\224\274\344:\002\275F\307\270<\032@\024=\270\252==\303\320%\275Z\301\002\275\334\277l\274\032\277%\274\310\220H=_\233\264<\224\301\024=\207\254]=\035}[=\336\226\222<\'I^\275t\346\371<\241\260\016=\014\262\t\275\266\215\017=\023\021\027=dR1\275B \253\274:q\267\274\201\311\025\275\204\377\024=\\\3430\275\307.*\272\337\343\027\275]QZ=\27262\275\273\310\013\2751Bn<\332\334\262\274\336A3\274\232\351\273<\264\316\335<g\233[<\025d\037\275\361\247\242;N\275\005=X8\361\274\311\316U=\036I[\274N\0362=\204NC\2758\214@=\325d\365\274\316M\370;8\203+\275\276\323\276<\322\341\013\275\nV%<\344\336\3327@]t8O\270\254<\363\377m;\253U\215<[D\213\274\004!};\034\342\352\274/\325r;\\\340\013=\035\256_=\364\256\310<j\202\026\275;\325?\274\343\320L=\006\312\016=\261\334\026<\017\"H=K{!<Co.=]\230\347<5\262\301<\377\002S\275q\267\020=0\0212\275\007\355H\274T\335H\275\270\264\240\274\254\224@=5\376\025\275\244w\005\275\022\227,\275N\3650\275\247\003`<4\223\314<\321+\032\275\'U\1779\315\370\r=\331\360L=F\222J\275\303\244V=\212tO=\031=\216<\236\324\022=\257\3073<\004y\000=:8\004\2725\321\013;\'\"M=\211\366\345:U\373z\274\357\366\314< \331\004\275X\267\'\275\"\204J<\305\330\237\273\270\207\230;#[\370\274_\256/\275\006>?\275\207\\\215\2744\3759=}m\356<\336\023\'=\274DM\275\233\326H<\221\0029=T\237:<\377e\322<bR1=\203A\306;\365\024\002=@/\346<\nD,\275\243\370\205<\024\351O\274Kw\260<gR1=Kr\034=\\\312\254<\264X*\275\257\3043=3D\240\271\241\330\201\274\322S\005\275(\214O<M\2309=\304B\232\274\200c\313<@\325)\275\002\013\020<\320/Z=\3013X\275\324\366\234<\017\265&=\020\230R\275l\250L=\320&\252\274\351\252\n=%k\246\274<\216\226<R\346w<\376/\025=\001\263s\274*\261Z\275\031\033\206\274\371p1\275\367\210==\213l/=\017m\017\274\232c\003=\022\034\021=\212\240O=^\034\361;\333\260\273\274\346\263)\272\214\023\030\275\364\223\266<z\236\215<+\357\353\274nQ\032=n\003\252;H\254\345\274\314o\357;ph7=\007\325\235<\242\237M<\221h\243:\232\252\'=o$\001\275\276O[<\221\366l\273\213\217\235\274\014\317\234<\222\003$\2754E\234\274\367\241\002=h5K\275j\361\233<,\240O\275f{\\\274-\320Y\275\372;\3579\243\332g\274\006\340\377\274\247\203D<2q\322<\210\305!\275[\245=\275\207\252(=O\267\377;\023N\n:\006\345X\275X\014\037\275\302\000;=\254\006!=\020\216F\275\033\274\013=\366\372:=\232,\314<\004\325\213<,\356\334<\264{\276\274\275\313e\273\323\241X=5\330Z\274\326\006\020\275+\322P\275\304*\233\274Y\205\367\274\005\005H\2745\331\251<\027\311\362;\207\270\320:\365h\017;\226\037\000\275\332\347)\275\303\375\023=\2630[\275\212_\032\274\232\247 =I\017\322\274T\251D=m\304\212<\n\222\340\274\313\246%\274\024\364:\275\301]H\273\225\0364<\"B\t=\205Y\032\275\r\305\363\274]\357\334<\253]S=\327\225:=~\0319=\272/\316<\005\377T=\"\'\362\2749\256\202;|\311#\275\023\323\213\274\275\301Z\2759\364\361\273\220\207\022=^9\027=P\236\352<cmu\273%\253\250\274\2523E\275eb\273:\222\377.\275\374\364\225\274f\250,=\021VX=\342\244 =\253{\246<\236\200\375;t\246\035\274\245\256\220<\212\2145=\'\310\377<\342x\"\275j@\263\272\341\032:=\031\2657=\\$$\275\006 \027\275\3215+=\\\216K\275\203\203\002=\000\327p<h\312\372<\355,F=\265=W=\306\013\025\275\256+\347\2742\010\033=\332 \021\274\027B\021\275T:+=\271\0030\275m\364\033\274\'\200%=\200\372\000<\342\020\034\275f\237\254\274\240{)\275\327\204\327\274\270\365\022=V\035\351;g\376\342\273~\375\305\274\244Z\3449\351\026\031=\300$\253;\2329\367<l4\222\274Y%\250\273h\267n;\007*\034=_\273\304\273|\356\334<\275\317\\<\347\027\300<\237\206\335<\212\027\001=\370\344^\274\233\020@=?$\272;\265\303\035\275\345\007:=G\023\315<;\024\241\272\351\027l\274\213\373\016\275\313\333\303<\235\230/=\332!\363<\276\315\347<~N(<\212u\037<\177T]\273\255wT=\340\340M<\266\375\316\274y\374Y=\374\377\302<>t\r=\026\242\247\274\251J\376\271\315M3=\023+\203\274\264i\010\275\374?\025=s\305F\275tv\355<l\273\205\273\000\376\020=\r\270D\275\033\264\347\2744<\250\274\244D\n=\263\313\031=\263\275%\2759(\204\274\373,\010\275Kg\244\274\004=\003<\353\236r\273\010\0369\275\\n\277\274y\367S\275\221\267\276\274\314\336J\275\010KQ=`\246\227<\370p%\275\215\344\377\274\002\322\024=\311\035F=y\004\177\273\325\tZ\275\006\244M=^&+=A\036?\275\032\220\276\272\376\350\255\274\217\213&<@\253\001=f\333\225\274\026\366\300\274\252: =\200q\356<\014\177\301\274\030\\\236\274\267M*\275\351\350\303\274E\'\n\2759\205a\274\345\001\221;d\256R=-;A==\202\356\274\226\327q9~\207j<\207\203$\275\022=\375<\322\211\025\275?_ ==\014\004=\317\315\341\274\327\003H=m\017\'\275\332\037==\3274\007=\243\215\305\274o\205O=Y\235\031\275\373\347[<\237b\223<\350\033\327\274\'l\003=)]\263\274\362T\207;\2139D=QIM\275\306\2076<\370yk<\374Y\330\271\222FD;/j\332\2745\376\345\274\272H\321\273\333R\252\273\276\032T=U\236\205\274\231v\007;F\321\327\274[F[\275\372zF\273\025\266\337<\256%4=>\036A\274\320&\010=HCD\275W>*<!\355\032\2746\004)\274N\010\227\274\317\322\026<\322\336\347\273\342B\243\274\254\020\225\274|WF=\310:\232\274[\300\340<T\353\224<h\360\300<,\331\002=\0347E\275Z\037M\275\252\354\003<_%\364\274F#\020\275\256\033\343\274\337\276Q\274\316W3\275Z\332\327\274\017\002%\275\341\261\034\275_A\234\270\257\272\217<\220\344\370\274p\270X=hk%\275\217\204\024\274.\277\032=\210q\372\274\034\357\333;\276\234\032=\351\017)<\342\240\336;\346\361\366\27482T<\345\245\017;\354\327\227<\362_\003\275\262|\020=W38\273\354\006\254<\265\274\334\274\010\247\236\274v\033\355;#\266\335\273\236\372\t=\245\270\t<tb\247\274\324\026\r<\271\025\200\273\276\"W\275\255D\273<\207\374\000;\300\365\347<F\213\032\275\361B\223\274B\350\231\274+o\331<js\034\274\213\330\330\272\002\302\204\274O\340\022=\317\026\375\274_\344t<\t\252];2\177h\274\313\037\260\274p\370\222<E\330M;\036\336\021\275\305\005\201<\272X\007\275\013\254F=2\233\311\274\354u0<\335\324\376\274\326\177\263;\017CN<3\374\204\273\336\212L=\252\315T<6A%\275\244\322\r\275\330\254\365;\242\005\334<i`[\275\262\353B\275U\207-\275z\347\371<\317?\205;D\257f\274\313\\k<\230\0357=\265a[\274\233\355G\275\371\003O\275\277\356*\275\2315\202;epx;\037\262%=Z\274.\275\267?\013<H H;e\226\000=t\365\003\275\032\255K;=\372\006\274\006:Q\2746\226_;\2347#\275\277]?\272`7!\275\340\004\232\2748\245%\275MC\\=TQ$<\210\315\010\275Hf\300<B\315\246<\026wW=\025R\361<\037\202\025=^T\023\274l\332Y\274\007\264\311<\311\000\034\274\273\220\221\274\336\321\355<\016\256P\275\255\010\333<-\1779=T\352\373<\276\026\005\2745\353)\2753\332B=\355\343\3159e\2143=\273\207\266<T%\'\275r\216\243\274\257\351\371<\343\027\033=\301\314\360<\312\021\032=\250``<\333\376\226;&\027\201\274A\207Y=\347\207*\274a\2252\275x\333_=\252@\020\275\243\322\206;\036\347\366<\323\0170<\350\353\255\273[\332\035=8\372\033<\022\205\376\273\004\347\233\274\301\316\262\274\266MM\275\"3F=\242\261\371\274\230\217\321<9xS=qTX\275\307e(=\221O\003\275\332e\010=\030\320\\=>:\341\274\315\3749=\231j\021\275\004_\236;c\311\242<\214\206\035\275\030\364\215\274\312\332V=\331K\341<;\3548\275\323iQ\274\346l\227\2742\233\320\274JW\363<f\030\275\274+9\005\274\035x\326\273\242\005\017;~BY=\344\n4\275HZ\214<\360\305)\275\030\302\223;Oj\364\273>\221\021=\227\204\254\274v\354\335\274+&.<\362\213P=\\\230\351<\312\211h<\'\3041=\322EI=\373\372&\274\276Y\264\274\027oW\273\016\230\344<\212\256C=\240\3769=,SU\275\360\006\225<\034r\002=\303\323N=!\3055\2751\037\356\274\240bB=\313/\222:\030\261\025\275\001\272\212:\022W\315\274\326N\370<N\0230=\354\242!<\010\334\342<\206\244M\275\024\227V\273\036F\007\274\267\311\367<<\350#\273,\232L\275>\355\n=Y\212\356\274;\340\005\275iB\376; \032V\275\205\177\200\274\314z\364\274H\003\323\274U\316?\275_\221T=\000\227K<\343b\253;\206`\007;\022\265\227\272,\032\"\275t/Y=_+\336<\221\037}\274?k(=\216\301[=\007\362 \275\314\332r;\313~\212<\231\235\r\275\204\372K\275\347\326P\275\254k\332<E\247\326\274\240.\347\274ub\346\274QN\230<\016\266U=\333z\246\274r\212;=Z\242l<![\365;\231\320\004\275\26596=^\230C=\324\215\255<S\3774\275\366m\027=n\005\267<\3646\036<a\227\216<\030\250\005\2752\315\226<\242\264\033<\343!7=\275\036\225<\037\004\266\273\340\016\332\274\201M\017=fWW\275\006\253\346<\247\264!\275\305\235\212< \343V\275a\036\010\275\241\3012\274|\037\000\275\'\'V\2751\315\264;S\230E\274u>\032=\205_$\275\376q_\275\027\265*=\350\2444\275\217\254\202\271na\277\273\360\032(=cH\251;\245\277\212\274/\251M=\001\363\"<\271\031\245\274\344:\277\271\266\307\234<55\005=\216\337\314\274+\202\030\275\377\211_=V\245\256<}\342l<w\205V\275\364\274]\274\006\0146\275\375\323\301<R\331\030=\317\211\264\274 O\246\274U\026}\273\376N\032\275\223\336\027< \365\223\274AA\303;~p\036\2755\367\004=\337\366\006=\305\016\355<K\205\351<\374b8\275\024\300\t\275\277\257\020=\306:7<A7\211\274\324j\302\274\246\340\010=nw\237;Z\207E=\315/\375\274\272\0252\275J.\237:Ft\243\274\307\330\354\274\030\360>\275S\3572\274\321\334\335<\324\005#\275A6<=m\0338=L\235\274<\3331)\275a\337#\275&+C\275\261\247\346\274\335\351\263;o\036\267\273\205o\026<\366|D\275V\3038\275\241\'\241<\340.\347<\223J\025=\356 \235;4lQ\274W7U\275c\030(\274\367\252\232<\007\221\207<\302\273\327<A\246\340<`\237\210\274\244\203\243\274\316c\024=\027\375\371<\327\300\254\272\364r%\275m\301\347\273\215\022A\275\254\343+\275\370\2548=\224\035;=f\272e\274EL3\274G>\207\274\341@\343<u\310\200<\266\347&<\007\'&\275\375\000\"=d\337};?\001\236\274Wo\352<\303\372\006\275K\321\344;a\031\265:\316`\252\274\315w\007\275[\221\205:\\\327Z\275\247/\326\274\304a\214\273\270\364\232;\3112\241\274=\3006=\267G.=\207S\"=\240U\';\326^\027;\252\366\320\273Q\354^\275d\332@<\247\021Y=\014F\254\274\021\r\031\2746R\250\274\322\214D<\002\320,\275oH1\275(C\335\273*\362\270\273}\266\t=\272\037\310<\231\224\363\274\260\216\033=Q\250\002\275\002mE=\243d\374\273N0\020=\033\353\242\274\247\312\223<4\023\010=\206\251e;\371\255\221\274a\273\304<\354\257\270<\377g/=]X\324\274\343\206\204;\277\377\026\275J\312\375<q\017\336\271\277;-<\270\002\323\274-\316<=\244\247\376\274\242\370\244<\300\272\027\275\331\3739=\321\331J<g\245\362;\314\217/=+G6\275\311\336;<\026\343\023=\316CE<+I\323\274\222\357\355\274 \322\223\274J\264\370<\032\\\342<\017iv\274!BO<\036\322~\274\270#\207\274\270|\255<1\010d<\314O\311<\355U\007\275\366\201d\274\311\322\020\275u\035G\275`+\301\2741\231P==\223\206<\221\367O=\3645\255\273\226%I=\341\363\261<S\257\'<\213\364\034\275\rx\336\274J\274q\274\016\025/=\230\257\253<d\265\266\273\245n\003\275\211=\021<g\2643=?3\306\273\027\336A=G~\250\274\264!D\275\344fM\275J\246\326<\030];=\3600\376\274\260\234\232\274\335\022\002\271\t\340\322\274e=8=U\342\270\274\360@\311<\026\036\255<\313g\010=@:\217\274\247Fq\274\232mP</\006\023=s\376*<rz\021=\'\373\235:&-\312\274\202\030K\275_\351K<\371\243\035\275\212\302\264\274\230\210\337;\204\030I;\272Q\327\272\330e\335\274\013\006\251\274\234\363\322\274\273\031\002\275\301\216L==\247 \273\313\300\362\273N\026%\275\220\221\364\274\370\244\260\274\316\327;\275\356\3109=&\033(=\337\335\001\275\021\031\347\273&\2138\275v\366r<P9\336\272H\245:\273TZ\027\275\325\313\034=\030\216!\275\264\257b\266k\270!\275F\260\374\274\270\340.\274\247\\\206<\320\017\355\274EM\257<Jd\022\275[\033\005\2756\350\n=\356K\037=!#?<z\225\3139\271xq<r\373:=\364Y\322;\233\356\023\274P\236\r\275z\212\211<\344\252\202\274\270\204\277\274\217\225\017=\247\214\312<\370\025>;\241\207.=\202y#=\304\266!=\233d\t\273}\201I=\306\355\017=a\317E\275|\2121<U\325\247<\036Z\331\273A\"\215\274\330w\215;\257\211\253\274\032\2460=\037fN\2741\373`;\252\233N\275\206&P\275i\3130;\312r\010\275\027R/=[\253^\275T\271#\275\002\255\272\274\372\030\277<\350:O=\322\201\372\274\2738\331\273Fe\334<(\231A\275R\253!=\244\362\030\275\337\337\340;U\363\273\273\265 b<s\214\217<\352\221\236;\013\274\242\274\217`4\275#\375\037=v\227\025=\036\233\261\274\224\3143=;\037/=O\253o\2746Q\t=G5\323\274A;\373<\251\350\201;`S&=\021\354+<Y!\343\273\\\310\343;\024?\t\275\326\272\250\2736\245\213\274\274\271\025=\212\024Z\275\230\\E\275\262\335S\275\276JR\275\325h2=\276JW=\323\212\n\275T\2755=\013\316\276\274\031/\241<$\317\316\274\363f\274\273\321\250S=\232V\357<\340\265J\275H\005[=\263pg<`\365\024\275\\\350\246<\261E\244<N\324\354\274\277\322.=\327s=<\313\247\372\274\246\252\014\275`d\017=diV=f\211\345\273$\024\251\274}\321c\274\370\304\000=;\260\021\275{\2000=\347tZ=T\330U=\007\022z\272\233\376N=3\250\325<\213L\335\273\207\267\371<m,>\275j\251\367\271j\376\000=\312\313==\204\031%\275[\357\025\275gRj\273\316\3512=\036\336\301<\214\327\256\274\321\244\003=\337b\027=~\264A=\260@K;\312\363^\275\364o\253<\360\371\226\274\276\251\315:>\350\257<\t(\t=J\025\364<,t\362<\245S\24293Y\274\274E\217\303\274V,~\274\255\005?<\r\271\027=\275\'\203\274\274\211\364\274\341\222[=\340\2754=Q\347\377\274@\305\206<\277\002\024<U\306\022\275\025HQ=\306\315\324\274\006\234\337\273\023\203\010\275\366\251H\275U1\236<\277\001M;r\316\300;l~\215\274\325Vl<d\330\211<\305a\343<N\005/\275V\331\030\275\321:\241\274\325I\251<\205\3671\2756\347\320\273Z\313M\275;qI=m\027\\\275z:\326\274\321^\005\275\007S\263\273\270\331\311\272\305\347\325\274\331?\177;\211+\220<\\\243\031\275l\335\200</\335\225<\2161\305;\303\300\036=\336\311H=\374\351%=!t\"\275\246:%=\2368)\275\'\247R=\r\361\257<?[\202;\253\222\365<9\010\016=\306p\261<\t\320F\271u\"\234<5\361\037\275@\250J=%K\030\275(\374\226\274`x)=\023_D\275p\263`<_]\234\274I%\014\275:C\360<3\235\256\274;\372\262\274)\267\302<\343\336\255\274\336S\022\273\243b9=x]\005\275\367u\276<\235W:=\313\371`<\2675\302<T\213\363\273\265\235\\\275u@\361;\331\301O\273#\346O=\032\257K\275j\252\357\2747&\201\274~`\350\274\237\006\235;e\235\254<5\017\036\275\353JY=\355\333Z=\205\317\260<\307\310\341<\264\210\341\274\226U\022=\217K0=<t\203\274\014l\247:\327\341\000\271\233r\013=\002\262]<\240\2310<oi\216\274\345\362\316;\367o\010<\210\372\364:\357z\034<(\002&=\020\260\037<\225\317\013=\361\222=\2757=:=\327\301\223;5\031\341\274\022KT<dj\016=\234\240Q< \213;\275\364\327+\275w\276\010\275q\370\034\275\035{X=\007/\027\275\203\313\256<Y\322\026\275v\t\222\274N\312\005=\324\211V\275>\303\221\274 \036\217\274\341\230>\275.\262\210\274\370\253\222\274hD\022\274\330k\262<\310\005[=>t\241<\234\273\207\274fi\212\274hq)<@D\033=\235\212\023=\314\0324\274\302DI\275\241\236R\275( \373\274*;\027=\252\255c<Cs]\275\244es\273s\010~\274av\215\274\016.\037\273C\210\270<\213\253\\;\337\233=\275;J\250\271\016\017U=\013\200.\275\\\241%=^\005\013\275\034\201\342<i\027%=\227^\355;\353~\'\275*\0015\275\346|E\275\277\245\t\2750KZ\275\236\204\230\274QK\252\272=f`<&\216\205<Td\331\271/\206\202<\322vH\275\326E\322\273i\t\344\274\360\265m<6u\017=\310M\375\274\363\020Y\275\363\301\005\275\231\304\206\2747\326\256\274\255\307?\275Q\217%=\323\274\321<o\214\267<\013U\036\275\354c\256<\026\252\020=c\371\025\275\201\3228\275{D\n\275\346\234\253<\006\3076<\225\233=\275Ze\242\274;\222Y=k%J=\341_\014=\267\272\023\2753\375\037=\363}l<\265P\352\274\354*\372\274f\036/\275SA\272\274\207+\361<\346\241];\275\241S=Py\264<&@\013=V\363\207\273\021\236\266\272\315\266?=\200\264\013=]\372\333<\276+\001=\272O\r=\262\225\017\275\3055^=\230\025@\275\346\2243<\203\214\013=Bd\036=o\245Q\274\355I]\274\035m\376\274\0068p\272\373\025\031=\252\321V;7e<\275\3042\262\274\314U\001\275\335(V\275b\272\025<_\234\027\275a\354&=\345\246\242\274y*J=\226\207\022=\237>V\275\027\312\272<j+\r=\261q\024:\370\256\213;\206\221\237\274Q\250V\275\003\362\001<jg\340<\016\210\031=\357E;<\007;\351;\302\021X\275\205\316\357;/\023\003:\006\034\n=\371\215\226\274\343|\034\275\n\022Y\274t\243=\275\2058\351<\034\212\365\273\n]1\275A\266\016\275u\177\177\274\313&\005\275X\246)\275\371\240\004=F\031\336\274\330\271\205\274A\327\376;\347\342\010=\016}\001=5<N<\366\033\"=_\232O<\213\365\024<\271\227\003\275i\031\374\273\217N\366<\251\337\271<OK;\275gM\000\273\234d\t\274\260\001P<\205\251;\2759\240\341\273 \244\022\275[\313=\275\306\314\025=9\274H=\211F=<\025\254/=d\322]=@\225\0249Hs>=\203xs<n\322\203<\337N\014<,S6<\356\303*=\266\323]<\034w#\275\247\347B;\224\353]=\276n\367\274\364\237\013\271\232\305\242\274\307R\306\273?\301\200\274\276S\245\273\177\004\360:\2660[\275\347\343\376<\240\2274\275\256\177[=l\306^=\000\\K\275\0370\261\2748l\\\275~\363\n=\3516\250<0\352\343\274\253W\363\274>o\267\273W\276\252<\033\313\220;h\366]\275R\366\311<\'\200\021\274M\331\212\273\322m\264\274\2556\224;\272?\203\272\212\276\215\274!P\033\275\342\265Q<\2240\246\274\260\343\211< 0\023;\206\365 \275\304\223w<{\006.\275d\305\207\274XG\030=\3371,\2746\343N=S\357Q=\261\241\356<\336\n\343:>\001\223\273h\361s\2727\253&\274\'\330Z=\311\277\360<^0\206<\243\252\377\274\217XL\275\253\343\213<\241\3113=\347\333\031=K\254V<\304\331\345<c\332\250:\373\357\330<@\350\004= 5\276\274\r\204<=\027\206\236\272\010\254V;o\250\010<\266d\330;\211\205\212:wy\021\275DD)\275\252\003\305;Y~E<BO\002\275\006r*=\2738\033\275\3719\232\274\275\223r;\227\316\317<\244\r!\273B\302\372\273\3135\237\274\214\323\256\274w\nM=s\037\020\275\350WC\275\246N\261\274\201\262\236<?\235=\275\006\205\001<\314CD\273\016\333\271\271r=\243\274\272\267\317\274\271\304d\274\002yR=\372v\033\2754W\014\275^\200\"<\037\270\222\274\354R\372<\305I\274<w`T\275\006%\376\274A^\264<\333&$=\211\347\"=\003+.\275\261>\035\275\302\t\277<i{2\275\364\003U\274\213\355\370\273\235\313P<\225\314\367<\027\255H\275\336E\257\274\3302\341\272>\322\355\274\257\354Y<\261\261K\275\220]0;\270\261\276<\034{B\275\251\255\026;\264\204\343\274\014\263?=+v\275\274 \"G=\307\355\317:d=\254;\200}\301<Y\211\206\274\362\3669\275\0075\'\275\3605D=b\255\007=A\205\314< \215(\275\256\r\210\273\341-,=\371n^=dF\200:\334\025=<m\351\224;\021\001\370;J9A=\365K\354<\341,Z<Eq\324\274\033\214\004=\271e)=\327w\307:\037\330@<b\230j;\253d\304<sk\253<\263\277\000\275\003/\301\274\322\271\240\273%\307-\275\371e\033=\304\324\234\274\330\177\006=wu\n=\325\220\"\273\003\374\243;\234~%=38K\274\345g\273<\214j\330\274\270\303\344;p\342\005=1f\027= \264\340<\024\003\021=\'\335\027=\243\200\n\275\t]\344<I\001?<\264}5\275\017\233\327<\372\370B\275\\\3315\275\356\013W=J\335\261<\\1%\275\317\263\356\2743\273\321\274\301\"R\275R\3542=\301B\033\275\035\357\204<%\207\323;\025\232#:\347E$=h\276\266\274]\241\025\274\275\2137=\030\306.=o\r\377\271\313Dv\274\307\r\302<\361-,=<F\223\274{\037\'=Gx\207;\001\363V\275m\2704=j\314\030=\031kJ=\024H\033\275\005&A\275Z\216\267<9\352\031\275`HI=\241)\266\274\263\333\370<%\211\003=\374\357\031=\256\005M\275\246\366\020<%v*\275\031i5=\020\315\223;h\202)<\336\247\201\274=P\001=\343\254K<\254\202\370<*\037T=\260\350^=\206\266\252\274\357\345N\275\225\362\306<\210ky\274[M\265<\303\333\342\274\252{\224;Rz\272\274,#$\275\237\177A\275MY\204\274f\320]= \227\026\274\237\344\375\274\302\344\233<\265\374T=\372H\374\274\3333:=6\357\222<u\026\376;MuP=\326\260\371\272\325t\332<\270\213:\275@\336\036=\255\243s\273\233~9=\215\023*\275\031KA=\302|;\274?\274\314\274\374X0=\251~\202\274k\236\014\275\233\367\374<\277\345M\275n\023/\275\021\314\277\274\031\311\334<\214o4=w/\305<t\353J\275\314\217\006\275\351\213\251\274\352\034\016=\231:\t=\312\036\004=UO\232<\307bB\274\271#\200\274\373\301\021<\251\001E\275\3639A\275h\341\013\275\267i\232<\337\324\212<8F\323\274\223Dd<\304\245\013<t\216e<\312\271\006\274\t\032\333<.f\r\274\0072K\275Ku.=\315\002J\275\272\350Q=\221\374W\275\270\210w\274\354!R\274\205\353(\275\224\216!=\263\031\\\273\021\240d<\310\345(\272\367\322V\273\003\026J\275\342\351H=\250E\364<\373\030^\275\014\022\367<Z\363\017=\3337/=\"\253H\275=\301F=1\307\312;\356\235\370<`\n\023\275=P\016=][\301\274:FC<V\274[\275\307\212\021\275\017\021\025\274\377\302|<\375}\355<7E\031\2746\325\352<\345\356k\274\240\261\201\274\014\3608\275H\210\262\273\030\033\021=\225A\330<n@\007\275\364\365\206\272?\343P=bt9\275\"\037\262<\364\361\266:\034B\032=\014\275\331<\206\215\364\274\376,\n\275\3556F\275{\356\326\274m;>\275\335\267\035\275\221\260\316<\202\252_<\036\006R\275^\314R=\305\260+\274\207)-\274\243\013\032\274\221\225\225\274k0K\275\215\341\324<\376\316u9\375\364Z\275\273\000\365<\326\314>=4\270&\274z\034\031=\367fC=rN\022\275\315\032\003\274c\002\361\273\343O\252<}=\333\272 \261\274<\021{\354\274r\366 =N\237Q\275\010\030S\275t^\355:\273\244\021\275,&\030=>S\024=\262\310\375\274V\304\027\274\342U\205;E\341L<\365\273\033=\304p\304\274@\375\300<\235\342H=\257\\V=\302\301\227;\007\354\314\274<\366\010\274\247\312\252<;\2743= ~\373\273\307\234\273<\2219\034\275?\357\351<\"\006\263<\213\375P\274C\272;=X\320*\275w\343U<\271E\030=\017\323!=\261\241\203\274Y\271 \275\222(\231<\216)\344<\2018W\275\370\257\266<\007\301\262<\036\210\237\274\211\342{;\252\230\261\273\253\213C=\r\256\367<d!\331\273\232\266P\27516\265<\374H\221\274\256\323\004\275\317\364\372<g(\004<\341\2513\275\362~;\275\343%\002=g\3011=\245\277\034<J:s\274*\024\370<j\362/\275x\274&\273\257\310\224<\315\264\207:/R\031=\177\360\225<{u\234\274\331\027\347\274\214\3374=Jw\"\274\310,)\275v\340\000=\274m(=\3744T\275\3219\301;\251\277\035=\266\314\332;\266!\210\273n\351\225<K\242\314\273y\027\333\274\346\026\003\275p\270\033\275\322;\226<F\235(\275|\274\332\274\244\324\033\274\267\001:=\214\376\351\274\206W]\275 \362=\275\315\033\257\274\010\352S=\271\310\241\271$3\372<\241\265\220<\0322\n\275H\272H\2750\316\235\273\362\354\221<\362\224P=@\250\016\274\010\020\033\275\211\233,=UD@=\252\315E\274z\254{\273o\323C=\233\245\313\272\036?\345<a_\221<\262\304\332<\250\236\201<\246\320y;\263\336?=\301\352\024\275\270\322&\275\355\030B\275H9C=\313\213\306\273\347\322d<\205\177\026\275\177P\302<\035\274_\275\3658\277<\253\241n8\317\321\000=\364\266G:Q\204\030<$V\000;\026\207\"\275-\220\335\274\024\252\032\275C\266L\275y\030\014\275?q\034=\016@.\275\351Q\324;\307\236\356<\230\204\304;I\020\032=\267\334\223\274\3041\236<o\303\232<\365\267\316\274\250\222<=(s@\2755\202\000\275a\020\036=\227V3=x\252S\275\t?\033=\252\320\030<\r\254\331\273\366E\013<\214\305\367\274\"\342P=QM\352\274x\224:=\013~\000=\222-\235<U\227\242\274\337h^=\372\271l\273/\305 =:\241\243\270\212)-=\010\207^<\356\232\374\274\334}\320\274\343\234\370<\305Y\236\274N\304\026=)\225*=\207\031\304<\210S\002=f#\n\275\254\3202:\236r_\275\356s\202<pU\331<\307(\032=B\375\203;1\253\310\273\215\307\325<\302bU\274\375\2744=Q\035\234<\315\345E=\320\346%\274\031\014\024\275Xs+\275\362\355\030\275\233-U=\201K\016\275\361X\264\274\021_\003\275\276Rx\274G\245\314\274\327\241\351\274\300\261-=4x,<E<;=\320\002\035\274\317\324\016\275\017&k<\221\027\022=\274y0=\327\307\010=\212\214\203<\rj\334\274\221\235(\274\002\342\352\273~7t<\2177\314<F8\001=$H,\275\023\222&<w\264\251<\212\347\003\274cH8=\274\"\025\275\207\242\020\273\234j\364\273o.\014\274\005\341\010=\217\020Q=\366\017$<\253\250\356\274\023:N=\3416\025\275\310E\332\274\335,\263\274\336\340\005\275aq2=\224\247\210<\316\323-=\302u\356<\006\216\311;\200\244A\273\024\262\337<Z;\260<\212\301X;\000\265\353\274\374\354\315\274\001\270\222;\255\2133\275\356\227\231\273\221\020P=\000\233-\275\342lB\275/n`\274\342\256N=\005e\233\273\242vN==\021F<\\\2742=\367\025 =Th09\236\272}\274\370!6<\336\356\243\274A\343\337\273\206\341\263<\234d\207\274\226\262\022=I\211\345<\221\000\310\274\206P\3019\220\0041<\203\3712=}\222!\275v\315\027<\221\251\205<\230\243\034;>)\205<&L\\=\221\337<<9\3508\274v\rV\275Oo1\275\360\316>=\220%W<\272\"%:\232\002/=\241Z\271\274+\366\337<g\tC=\255V;=1C\346<\013r\001\274\324\264b\274\013\254\n\275\261\204$\275Pb\230;\231\037\3539i\375\274;\237\336Z\275\214\342\004=b{n\274\022\360\353\274\014\3232=m\271\010<\033p\030\275\246\nT=<\037\306<1\335\314<\270\200\231\274mwC=S\221\377<\203-\024\274\355\262M\274\240\243\002=Z\266\243\273vs]\274\222\nC=p\277\'=\376\201^=\367[\020\274\267\346\016\275\305\334\263\274\3542<=V\366\324\274\000\366:\275~\325\255\274\216\036\360\274|\267\311<\334\214\267\274!\0044<\227\354N\2753\336L=\r\333\230<8\323\233<1\351)=6 (=\365hh\274I\215\230<\374\264\302;\0045|<*\305\005\275[;*\275N\301\025\275\002\035\004\275\220\363\365\274\367\327\237<\037\247\335<\247\034\304\274\226jI=\351e[=\305\245\332<D\304\310\274jL!\275\224\023D=\261\036\260\274\217\262W\275\032\251\024<4l\000=o_J\274H\324\222\274\027\376\016\274K\321\274\274(\321\352<_\177\254\274\301rN\275[\365\223\274qoh;z\243#=K\257\010<\357\'\006<\224\227\264;\333$U\274\240\2241\275\275\000\037\274\014\216\035\275\375\334\214\273\3714\233\2748\2546=\203\255\021\275\0174\340<\261\257\206;\237\305\002\275\037\032\360\274\232<2=\367\374;=@\346\366\274\031EE\275cl6\275\314\264[;\214RV\275_\262*\274\\\001\003\275\354\306\207<\206\022C\275\215\037\026\275+s\005\275\026\007u<|\007-\2749\226\206\273R\305\'\275\271\001\331<\300|b\273\277\266@\275\346\240D=\241\310^\275V\227\034\275/d\210;\272#-\275\371\377\206;\201*;\275*=\337<\036k\025\274<\237\363\274\234\020\271<\023\332x\274\032~6\274\204\002~\274\277p\272\274\364\\\353<\345\017L=\035\001Y\275\022\305+\274\014\\\034\275\205n><\364\222\355<n <=\276< =\326\000A\275\200\014\277:[\310\016\275\3556\234;{\000=\275Q\227\t\274\326`0\274\343p*\274Nk\n<\363MM\275\365\270\350\273\326\016\332\274y\221\214\274\257 \265\274\256\342 \275\261bu<\006\023_=\027p\206\274\"N\t=3\017G=\355;\211<))\335<\236\336\203\274A\272\250<;j\333\274t\200\003\275f\361\037=\226\006\200<d\327\000\274\020(\002\275I\277\302<\250T!\274\240\250Q=\31623<\246,\374\267\303\014\307\274E\366\307<\2176M\273`\374\001=\211`\027=\352[]<J(\022<k\031\362\274\341\206X=\203\366\253<U\353:=\031\332\231\274\031|\355<H\356y\274\017\374\273;\330(:\275uw\271;z\033C=\233\207>\274\371\210\312;u\225\324\274b\343\036=\302\230\\=Am\\\275e0\320\274-\274\333\272\330wx<\222\3765=D\354Y=B3T<\214>\274<\032\242[=3h3=\364\337G\274\0232\277\274\335\317o\274\341\336\016\275\247-_;se\263\274\273/S=\202)\276\273\255\030X\274\274(\325<\251\224`\274\364\035\013<`M\244\274b\247~<v\340E=\322\337\357<\324\376\312<He8=\005\347\275<\203\300\315\274\257i#=e\237M\2750\230\321\273\317&\"\274\0142\'\275\223\220\'=\375\n\244\274\036\r\221\274bY\331<\302\240S\274\212*\310\274\267\037\304\274\311s\302;-\304\317<U\306u;\342k*<^e\355\274\274\244\\\275\005_\236<\024\370><\235\364\273<\271I^=\004Z!=c\376A=\027_z<\350\204\035=1}\247<\005j!\275\347B#\27510X\275\rW\352\27451\251<\034\305\215\274\215\210<;\023\t\024=l\210\264;\234\377N=\322\003\317<\206\034y\274<\374\252\274\241{9=C\036\363<\230\236\271;\304\316\036;\376Z\327< \213A=[\242\203\273\350/\234\271\335^\241\274w\242\333;Z\234\r=\272t\310<\247\331\330;\221\273Q<JF\022\275\025W:==\322%\275Z\255C=\275/\317\274iH\332\274\2514*=wJ\031<\205{/=\242\0349=\211#\360<\242h\237\274\300t\316;t\000M\275\022\305\221<\213\303:=\362\005?=0\334I\274l,\357<\256\301\017\275\352N\232:{\363)\274b\230\037\275\272\230\331:\313\270U\275\276\277\356\274>`A\274\317..\275\216\t]\275\341Is<\346\246\034\274<i\n;`\223\036=\016S\320\274\021vN\275\213\n\'\274\247\225?\275\314\236<<\267.\036=\314\rL=\213\201\315\274\303\353==X\245\343:\025\357Z=d\275\276\274_A_\274)\366\363\273b\272#=D$\007=.\253#\275\255|W\274!\340\365<\346\226\253<\233\207\030\274\273\260H=\225\372\351\273*\343\363\274\021\005[<a\r\214\274\244\303\314\272k\027\251\274\326\352B=$\3163=@\255\275\274>\373K\275\304v:\275I\363,\275\215\253\'\275\356\256\206<\240!2\275agG=\354\007_=S9\026\275\325\2020=\367L\312\273\024\005/\274pe6==D>\275\242)\204<^U^\275\331\2347\275\005\343\033=\013T\257<\252\364\306<\365\253\276\273X\023\230\273\305\370\367\274X\266\255<?\226\273<#\244\266\274e\220/=\\\3611\274\007\367\205\274\375\201\306<\312\326\216\274\0316\022=W\300\206<\t\201\360\274[\3429=@N\327\273\340\321\352<\311\211\224<U\362:\274:\264+<E\010\376;s\\\272\274\005\203\303\274\370\222\312\274j\020D\275\202g@<\310\004j<\304\2331\275\247\225\017=\233\316\202<8fE=\373\303\353<\255\235\024:\303k\206<4\314\207;\307\205\362<\025\020\r\274\331M\314\274#\271[\275Rp\315:\237\254\037\275a\014\033=\304\177\034=c\201\372;-q\031=\371\324\312\274\222\362\034=(\300#\275\376\337\036<\033t#=:\034F\275\2576&=!\017t<Ye7\275\241\206\n\273\274\331\315\274j\257\003\274M\303\327<\037\250E\275\257\342\321<Hs3=\340\\\253;\321\243\330\273\022d@<\254\377\307<\306\335:=\255o\252;B[M\275V\3121<\207Q+\275\217P\274\274\242\226\325\274%\377\253:a\n\000\2759y@\275\nh\363<775\275\231JG=$]_=\217\255\023=\257\340\300<\250;M\275!\244O=\330\323\235<(\342S=<Y\260;Mw \275\345\361\007\273y9f\274\211\020\275\274\r\3604=?J\240:E\245\306\274\221\273\020\275\230+\354\272\345M\345;\2227\033=\271\377j<q\327\r\274\016\007<\274TV\317<Pd\357\274\335\254H\275Fc/=6\353==\022\375\370<\"\212K\275o\224\356\274\037\235=\275\344o)\275H\3519\274\rA:\275O#\234<\343\2557\2752 \327\274\256NZ=\003\347C\275$0\262<y\3012\2753\207\263<h\343\272;\326\243\330<\250\337@\275\366n7=f\204\216<\177\305\305;\255\231\236\274\336i\030<h\002(\275\320\370H\275\"\357R<0l\224\272N*\024\273\366\305\301\2746\2633\273\nt)=y\n!=>\301\330\273!\363B\274\0357i;\025\355(=\207<Y\275\0261\013\275\304\254\300</u\014\272*\335\344\2744\022f<H\245W\275\014\265\013\274\215n\014\275\222\232.\275/\321\037\275\314,\200<\\\354A\275N\301m\272q\240\332<\244UZ=\225i\276<K\231\025\275\251A\305<\365\252\253\272\025\327\"<\236\243\363<\325o$\275\255\326\223\273=\246\271\273\3628\302\274\2526?\275\315E1=\'$\307<\317=\232\274\327\330\253<1\210\020=\007\030\313<\036\320K\275D\tJ\275b\240A\275\311T\354<\336]F\275\355\212\225;\367\323\013\275\260\340\034\275\252\203\232\274\375G4=4\235\r\2756\345\006=_\210/=O\"\204<\303\305\031\274eS\275\274\345\331,=\022\231\234;\373\247\'\274J`\303;\257\272\033\275j+G\275*\266\334<<3\'=c=\n\275e2\302\274~cH=\266\007\375\274:7\323<\274\304\216<\343\332p;\277\307P\275\267\365L=\366\250\236\274\004@\342\274\276\305\033==\360R\274\241+\033=\232\004\036=00\022=\024\250V\275D\312\"\274;}\005\275\327\254#\275\026[G\272\240\013\'\275\235\350\3318\025Z\216\274\300G\207<X\021\236<.+\270;\001\255\273<\032Z\315\274T]\\<\376\2106\273\331Y\251<C\316\243<\356mU=x\356\366<\262\344\335\273e\2738\275$$\224<\343\004\370<].\006\275B\315\014=@\371\361<s\300\364;^H\031=\332<\317\274\356\022F\275\226\260J=\022\315_=C\013:=\202(=\275+\n\231<U\030x<\232\242\003=\360D\331\273\216\t\341\274S\364Z;P\230\n\275\366|\265\273)o<=3\r\200<gP\375<\007Z\225:#\240\021=Z\337#=(D\324<\022\031\212</K\366<\332Z@=]h{\274\261\222C=\026\342f\274\177K\337<]\343N;\330S\005\275-4E\275\300\010=\275\364\247\330\274\245\357\311<@\033N\275\331\3471\275\316j\000<\233\n\020<3C\232<a\204\363;\2475\257\274\2733^=\340\316+\273\350\022\340<-\025 ;\366\347\203::#\363:43\343\274\3577\375<\374\215m<\323O\230\274\371K\365<\350M\002\2738oW=\027I\005=\334\273#\275\311\n\021<2I_<\\PJ\275O\357R=\340xQ\275h\211\257<\020\355\014=\307\334E<_H\r\275N\272\216<\264\356?<\203\023#=|OC\275;`\030=\237\017\033\275\252t\226\2748\035\370<&L\347<?\020\333;\tR\'\273\312oC=\311\327\021=1\343\311\274B\272\272<\026{\025\275\270\030=\274bv\037=\301\236\367\274S\255R=\025\376\331\2744\222#=\001c+=\231P$=Hw6\275\322_\243\274\002M\027=\211\241\320<\242\267\'\275H\266\306\274 \231\016=\n\034,\275\000\3748\275P_\004\275\n\"\004\273-\246Q=\200\022\266\273\336\336F=d2P\275\270\241\251\274\0054\361<HD\021=\312H-\275K\355\t=\354\260/\275e!\323<\370\323\022=\264\256z\274\321\320+=\362\016)\275\246\350W\275]\tG=\275I\032=_\276T<\317\265\2439)\225\032\275\373\035.\275\026\023\030<$\270K=\367;\016\2755\213\300<WO+;\222\035C\275\215\371M=\210\264>=tl_\275\033>*\275f\235\301\2745\247I\2759\030\026\275\316\226\030\275x\270\244\274\222\322C=a\317\262<\031$:\274\312\356\241\274\310\007\020=\356+9\275\027\236Q=\252m)\275q\214u\274\000\252[=]\212\002=.\231\000=\2101W\275\233.\251;\240\307\306\274\201m\013=\030\351\220;\213\0210\274\214\214\\\275zG\365<\251\221\366<\320r!\275NE\002\275\032\366\025=\320#I=\001*\r=\214\207\324<F\253\353\274 \371\351\274\245\260\031\275\t\367N\275\3438\035\274\"\223$=\216\371/=z/\025=,\201S<\371\306\023\275\333\363\r=\355x\364<\321\321\221\274\022DK=\353B\346:g\004\200\274\301\314):\325ZD=NW\277<)\211\032\2753\326\345<\214\366\203<\273\222I=K\024K\275\213\372%=\312\276\031\274\360\217\'<h!%=\037\023z\274\240\257\226\274V5\003\275\337JP\275$A\255\274 \253n<\314~W=|\005\304<\213\270\003=\323\340\260\274\020\260G;=\026\014<\325\313+;\005\352\260<\310%\262:\036\223\225\274\260\0076\275O\221_=)\254\021=\330\031\342\272U\276\323\273y\235\233:\t\227$=8vO<\273\203\216<\007\324\016=\323\025P=z\006\006\275\3469+;dM\023=w\314%=\233\257T=(\310\032=\357\247U=m\234\250\274\350\277\226<\346>\016<\367\3126\275\245\347\235<%\240\316\274j\267_\274\003^U=r\217\313\274D_\200\274\257L\302\274\010\021:=n\010\326;#oI\274\361\323;\275W\264*\275\317\241\023<j\202\344<\226%>\275W|\010\275#+P\275\21077\275\314\305\002\275\3230\241<3\252\260\271\016`\021=\222\026O<\255\224`\273\207\022\017\275\363)@\275\035S*\275\306\324Y\275\376\233\335\274g\305\261;\377\275\034:\241\n\211<\212\000\017\274\027G\r=\372n7<\210\303\034\274C\335M\275s_\307<\366Q\033=z<\250<\270\034\322\2748\221\242\274\235\'\231<\203\032\373\274\230\2603;\205\016\206\271\022\264\250<\370$\211\274\212k\034=\322\364A=\332\230\322</\240\236\274\024\232\352\2743\0042=\2359W<l\326-\275+\034(;\250@_\274\023\3164=\277\r\240;v\222\361;y\333`\274\026\\\373:b\232g<\027\206-\275%]\002=\250\373|;l\2373=\264\277Q\275\204\037X\275\237\354\352<\343\271\001=\343\230s\274\004\356F\275\312\0132=\013T*=\327E\021<\320\242\016;\245\226\231<\311Y|<`4\317<\315\3677\2743\326*\275\225\277\341<D\274\226<\267\007>\274\013N\323<G\274\214<\337\030\202\274\0245\332<\006\357\240<\374\363)<c\300\315\274\362S\356\274\267\214\363\274`\256>=\\-\025\275\001\334\223\273A\010_\274vd-\273\237>\203\274\211\n.=\244\223\022\275\326\n^\275H\304G<\3124\032\274w\221\331\274\242\021n<\216\031\r\273\276\026\021=U\031\303\274\216;g\274\230\335\222;3\235\000=\341\200O=\201\010\372;I\3038\272\324\027\261<.\345\321<e\367\t=\001\332\362<\022f7\272\227\226\004=\206\034J=\265\266O\275W\343\304;\'\300R\275\226\307Q=\263{\3549\310\241\016={\033\270\274\'0I={\313\233<\373\006\017=\366\353e<\367\032X:\353[\016=E\261Y<\254\365H\275\204#\232<\243\026J\275\313\332\257\274\214\253\215\274k.\234;\376\325^=@\307\226\274\242JD<Z\2201\275.\261+\275\002S\"\275\022]P=Hd\307\274=\005\345<\243\210\003\275s\332\330\274d\240\"=\231]\010=6\357!\275\230t\023=\242\232^=\'\021F\275MG3\275\370\0222=\375\361\034=\262\363;\275\016\247\372<\322\224\014=\300\0272\275\206\033\235<B\300A\275\0306\t<\245\234\342<\'L\260:\313\210\005\274a=\016\273\226t4\274\276\256B\275\226D\035\275\003\314\025\275\301\031\313\274\215\276\311<\230B{;\331\270\256<zt\005=wh\215:\365\257Z\275L\361\035=\037\177\327<\236A/\275\300\225\023=l\335<<y\203\364<\326Y\320\274\370\266\021=\3314\r\275,\351\314\274.RA\275\371\310\373\274D\305\327;\257\002\254<JX\025\275x\325,\275\227/k\274\322\031\021\275\035\240\007;\331\262*=\223\261K\275\311\366\025=\211\r\223\274\263W\010\274\372\344\037\275r\344R<R\204\273<7\306\021\275\"\306D<$\2361=\313Q(\275\263\204\320\273\340E-\274\267\3409\275\250}\237\274\307\305\222<V\251\356\274\356\221\334<Z\231W\275Jq\220\274\203\325h\274\027\303\213<\022\205\213\273\225\244\231\274<W$\275@T\350\274\000\313\'\273W\206\004\274\306/#\275\032, \275Ec\032=\022\214\n<\240\366\016<\nfB\275e<H\275\247%]\275|\202>\275Ck\010=\216\351J\274u\262?=\244\020\251;N\006\t=]\341\231<\017z;\275\017\002(=\347&\032\275r\325T\275Nu\007\273\204T?<\024\366\203\274~\273L=\t\264\004\275\255\256n\273\177p!=:NL=!\216-\275\377?G=\276\377\355\274\356WF<\360:\010\274(\337[=\250\233\231\274vC\033<\201\252\027=E\354\"\275\3530\330\273\023\000\301\274\254V2=\345`\\\275j\033B\274\235\t\"=\331\177-\275C\256y\274S>\303\274G\375];\375\023\316\274\000\003\303;q\367L\274\227\225T=3G\032=\031J~\274 I\232<\274>\013\273\0267\300;l\236R=\205@\252\274H <=\350b>\275\205PS\275\271\226\324\274\271\271C\274U\303\004\274m\\\343\273$(\245</V{\273Y\000V=Mw%;\326<B<4=\254\274\n{&\274\356\250]=\302\223?\274\231!^\274\024X\221<\336<^\275&\345\010\275\315\"\357<\n\331\224\273\331\357\351<\262\254\262\273\016\034\017<\\\334L=\031#\373;dj\336\274\'\035]<\202v\214\274A\343\356<\213\365\007\275xp\022=Q=\376<\332@\222\274*6\002=\313\035\356\274\225\342\006\275\327s\234\274\027\312\022=;\315\370<1y\014=\333\262\365<W\267>\275\231D\225;k\333s<W\276\215<Z1L\275k|K=\234\327\214\274kA!\275\226\215\307\274\247\205\006=W%D<\235#@=;\030\013\275\256\337[\275?\257\036\275`\345\365< \302\371<\272,#\273\3507\337\274\200\237\022\275\255\3372=\346[\035\275B\375 \2750SL=\353\323,\274-\364\372\273\003\271\032\275m\207+=b\356\347<\371\373Y=s|\332<\033\252\013=j\253\316\273\313\355\212<{+\376\274\010\004\301<\272\233h<]\025}<\016\354:\275\215\024_<k\301\232<\325\3470\275\311>3\275y\022\275\274\272\243\016\275\230o\313<#\267\340\274\033\320\246\274v\271\273\274\'B3=N\355\026\275\314\341o\274*\321\201\274W\273\232<8{P\275\321<\003<p\324\252;\364a(\275\266Z\300<\377\305t<O\275\345\273\227\341+\2757\030\334;K\330>\275\317I*=R\200F\274\241\356\222\272\300\374\230\274O\334\375\274\377\233\212;=S\375\274%,\033=\026\212\233<\310`\364<\231\340\027=D|\313\273\265\264\273\274W\230\221;S\362\021\275\016\354$\275\233\257\035=-\353\242<1L\017=\302\324\344;=\321\373\274r\357\025=K2E=E\325\354<\246\343\255\274\315}\363<w\323\326<Oi\000<\230\360`<\327\361H=\345SV=AW\253\274 \305\363<9\2512\274\214\205S=T\022\016\2745F\326\274\307I,8\005\331B=$\323:=\264\274\"\275/\267C<\022\3137=\206m\363<\236\023\227<s\310\252<\'2\020=\231\346V=\377\203z\274\224xv;\377\032G\275\214\323\021<\351Y\233\274\207\243\025=\"3E\273\346\340\021=Z\304C<\024\356\336\271\361\353\022\275\265F\023\275V\001S=\3327S=\032\270\346\274\276\027L=gd-\275\031\315\235\274\330pP=5\335O\275\001\365I\275\204 J=\212L\262;\000\263D\274Dlh\273\377\010F\275\025\316J\275\266\3727<\'\275#=8\375\327\274\221\260\211\274\363H\224<\352\225\004\275\221\n]\275\312G8<\033Y\236\274J_\201\273\264\347\330:\005R\252\274a !\275\"\357\004\275\312O[\275\023:\"=\004Z\\\275\227g\265\274G\260(\275\236\342 <\353\265]=-kE;\2311\000\275)c\036\275\256\t\030=\362\306\027\275\352\350\037\275jD\312<\332\377\261\274r\022!=\2441\365;\344\027\271<\033AB\275q/\"=G*?=M\347\362\274|WV\274P&)=\301\361\013=\322\237\346\274\252g1\274u\325;=\000\257\016=\265\262\312;\220\205\212\274\370j\005=\305\351-\275\315\363f\274\377l\320<\345\004\036\2756\021\016=\330\313\247\271\266\302\010\274>\205\272\2745\205\321<\307\2062=\327H\024=\267\005G<\351,G=?\314\341<\251\237\356<\324\301\032=\nq\3438\014\306\332\274#DF=-.Z=\341\017$\2750\300*\275\023\320Y=n\313\000\275\316\0241=*@\216<\352y:\275\014\321\364<&>4\273(\272\200\274Y\223>\275\240\217\201\274R\335\013\275\357\2571\275\t\232A=\240GM=\374\256\242\274\034B\365\274\200\276\221\274\002;H\274BZ\337; \0212=\337\333{\274\200\353)=b\033\276\274\350E\014=\205\221U=\323f\372\274T\\4\275\365a4\274KsP=\374\246\362\274\007X\024<\013{R:\271\032F\275FJ\347\274\024\254\006\274\022\242\207\272\201\240\244\273r\001b<U\202\260\274\264\201\273\274\375\215\021=\270\001?\27569\376<V\254\351<\374\336u\274\217g6\275n\014\300<\200\270\251\274\357<d\274\365\024\341<\177dA\275x\2624=\241\024\"=\316\265\355\274\273\214*<\016\226\3109y@A<\353f\354;\035\250\004\275a\023D<\354(\270;\271\273\005\275m\023\375\274`\3047\273u\263\220\274ca\346\274)\373A=\252$.=\321\331\306<\322\347A=\220M\324;D\247K;*\007\241\274\321\270\337\274\372\3149<^SA\273\252\315\224\274._/\275[\321\010\275\367\026D\275\000\355\343\274\226\330\t=\241&\3209\302\325\226\273\352\\\232<\017\2155\275\243\371/\275<>I=Uc\t\275\036\232:\275\322dC\275\n\210Q=<\021\271\272\005\217H\274\370\324\253\274?q\367<\277Rp<\362*\017\275G\005\365<\342\264\t=\274\014I\275M\240x;V\250\014\275\372\377\016;b\365\367\274\000C\374<\375/N\275U\036\026\275\250\004\270<\177\277\035\275\323\375x<\202\261\330\272\003\235\r=\316DX\274\367%8=E\246\216<\333\246E\275\325e\253<\330\314\225<*V\322<+\332\236<\177bb\274\245+\031\275)_\335\273\215\253\200<\2567\244<c\237\034\275\007./\275\333\t\220<\246\017\342\274 |\014=\247\354\342<x,\256\274\250>C=\324W@\274g\266B;68\212\2710x\350\272z|\302<\332]\343<\222\017\274\274@\265\025\275`y\372<\330\1771\275Z\262\034=\215\264\205\273\373_\004=\237\002\266\274z\317^\275\341D+=\014\2125<\250:\271\274j\234\325\274\034=[=|)\213<];\211<>uR\275\322&!\275\244+\2069B\235\304<P\251\337<iO\216\274o\027];U![\275\311\033[\275{\010\016=\243\214F<\"\247\033\275`[2=\206\t\334\273\261)I<^@5<\033)\363\273}\361\241\274*\277:\275`V\001<\024~\266<\013\211\344<\270py<\357P\021=\210\\2\275m\037\217\274\364\241\000<\325\332\317<Q\232\177<\034YN\273\375\255F\274\007\226\252<\216\000\310<\006a[=i\332\371<\220l\037=\036BI\275\360}D\275\273\201\354\273\230\n\314\274\310\037\245\273\251y9=N\250]\274\316\315\355\273\305]-=s\013\203\274\245\r\026\274\323\273Z\275\260K?=\305\266\303;.\310\251<\330\251_\275\016\022A=e\355j<qm\214<zF8=\342C\227<2\277j\274(\226\213\273@\227\034\275jk\243<M[\221<\347=t<\223\375\263<\242aQ=J\277\002\274\027?M\275-,^\275Mo\267;~\231\274\274\235\\\336\272c\003\035=\353\275\313;3\243.\275K\364G\274\203L7\275\320f\200<\022\211\033=\327\314\374\274\355\002\023<7\343\016\275=\233\272;we\003=rkE=\021]\204\273\324\312k\274V\031.\274\031\252C=4tT\274\305\r\344<\343\377\007\274\256\372[=\241\2042\275\006\320&=\256\337\r=\254c(=A\\h\274]\362s<n\315\214<_\020V=\216\300\203\274\234\212t<haW\275M\223 \274\276}\006\275s\303\255<L\337\016=\270\346\332\274\256\274%=QzS=\352|O=\257 \333<\263\267d<\261\026*=a\037\300:\203\235W<\324\310\230<p\251\256;\377\320\177\274q<\325<\224c^:\207\360/<\226\3272\274\240\364X=\222\252T=\232\226\224\274\207\254\243\273\345\244G=\305\\V\275\321\343\201\274\375\234W<\022\246\246<\375\222H\275X\365J\275\202\272W<#>\020\274<Z ;\335\024\024\275\316\025Y<\255\224\351\274\370\021\"\275P\307\265\274\200\325\273<\3408K\273E\002\034=6\353\214\274=\334.=Z{\303\274\370\362\270\274Ho\036=w\316\352:Wy\201<\261\304\306\2743\377\212;`m\307\272\026UP\275\304\001\n=g\323U=\261\025-\275\"\027\323<\241\027\332<N5<=;x\210<M%\213\274v\2064<y\225h\274\206\237\362;\241\202 =\317!\301<l\335\252</D\361\274\270\t\025<\345\3645=\"\357\035<\231\201\023\275\235\334\026=\230\255\027\2753\246n<M}8\275S\350\344\272\231\367\322<\313h\222;\317g\211<\314\371/;\346\312k\274]\276Q<\031<\343\274\354\036\r<j\372f\274W1\020=\314\377w\274\367\031+:\036}\020\275\204\225)=\016\326\341<\355oN\274\2110\036\275\304r\037\275\233\254\371<\350I\001=}U\010\275-$\306;:d\331\274\226\003\016\275j\316\377;\335\375\n\275u\236\327<\377\245W\275s\376\226\2747\222F=w\237\250<\361\200\364<Vk\301\274\315$\352\272\315\277\010=$L\271\274\214\360\377<\"\270;=b\365\216<\235\2475=F\203\320<\2162\007\273\212\226&\275\226\263?=\017H\275\274\351\202>\275f\216\323\274\000\265 \275g\036 =\"\213\025<r02\275^\345\206<\232Z\217<\371\3715=b^K<h\003k\274\274\271W<\237\224?\274\352\370A\275\373?\220\272\277&\212<S$_;\254b\010\275\003,4\275S\r]:\224QV\275\365kW\274\006\347\024\275`\253\002\275!\335X\275\222\262B=1\2004<o\246\276\274\263\352?\274r\327\244<\026\3414\275\2015\271<r\223\022</\233\020\273\023\241\344<\350\302\370\274\206H\206\274P\232\326\274\305v7=,\346\223<\004AR<F[H\275\030\260\377<\217\264H=Y<\024=\360\314\326<\000O\247\274\276\276\341\274\240v\022\275\250h\211\273qG?\275`=\227\274\010\336\000\275\277\321\025<\0330M=\006;G=\\f\353<\035\243\211\274i\221\337\274\306\213C\275\206\245\250<\314h\247\273\354\024\220\274\215\323+\275/;\234<\326GY\275\250\3657\274\362\327.=\222i\231<c\237\033=*,T=2\024\240\274\254\257\214\274\230\331\300<A\210M\275\037\0175=\332\204,\275[\304\236<\266\014C=\220\324\243<9W\001\275\216\027Z\275k7\265<Y\035\230<%\263\376\2734EN\275\345\245\245\274\0234\t\275\006M\0009|[\264\274\003\323@=\240\246\033\275\3416\025\275s\0024\275\323\212?\275\241~$\275\031\251\330<\342\335\370\274\247\222\336\272H\275\352\273\006\215(\275t\365Y=\244\274H\275*\377\370;\236BT;<\026\\\274\227\304\332;\247\221N=\3536-=t\372#\275U\205P\274\243t\256\274 i\364<\316\317\"\275\350}\004\275\357\022C\275#\032Q\274\"H\325;\310f)\275\322Q\305<\235\025\375<4\345\025\275U\271\016\275\337\241\n;f\245\022=\351%\370\272\315\021A\273\000\004\205\273\022\352d<\202>-;.\347-;\\!\001=L\234\263<u\302=\275\372g2\275\021\224\201<\r;\016\275\231*\372\274\355\201\253<n@\037\275B\262\005\2755\376p<9\361\033\275JJ\032\275\005\265\177\274\324+\237\273\373z#<\361\314\004=\010\357\253;\034\004\353\273\262|\255;S\374.\275\003\3222=\262\230\254<\353jF=\270\221)\275\021Ct<\347\334\312<\354P\222<\216\200\020==\246N\275\235v\325\274\357\037:\275\024\320X=\276I\344<\023\202\006\275\304}C\275j\217\026\275\340\203\303<\252\252;\275=\267\034=^t\371<\325)G=\2449%=}\013\001=\235\237\353\274\247\\\315\273\370\2470\275\260\304W=\031\313B\274\003M|\274\274\247\\\275\306$<<\271\037\034=\232\016V=\340\017\356<\313\317O<b\001J=m\226\203\274H\371?\275\014\263\013=\237\030\310<\212\203\n\275\205q\222<\216X\010\275\216L\306<\274e;=S\214M\275\014\274M<\330\261Y\275\253\005\221<^\246\350<\3757e<\037\343J\275\300\364\003\275\363\361\006=){\027<\202O\020\275\n\312W=\220\216\224<\367\023U\275\362\333\037=1\224\232;6\227\334<H\353\212\273J\204\313\274\2056\007\275\334\345\360\273\366\232\301<\306q\271<CF\226\274\361\345\320\273\377|\350<\243\312\005=\211\027\022=\323\355/\275_\3264=\037\025\377<\351s6=\024\003W=@\332.\275W!\036=am\206\274\rh\014\275\000\032@9}\366\325\274\350\333X=\226\201\032\274E\267\202<@\335\036\275\315\375O\275\365\344\003\275\316\226\227<\332\207\020=\200\002\275\273\3176!=\377\235\r=\263\027%\275\267PL=l\207\007=(\2479\273Z\2369\273\342\274!=\303\236\243<F\254A=\034\255A=\251\000\002\275\001\260\201\274EE\221\274\200\270;\275\274\355.\275\350Q\\\275M\270*\275i&r<\360x\275\274\274\376\302<\315J\261<[\347N=w\257\025\274T-\025<?\026\031\274\332w0=h\241\232\273~\277\303\273R\370\320\274NqN\275\344)\002\275#\373\010=\347\303\212\273v\352\222<\030G\247\274\255\025t\273\241\222\374<\002=8=o\365%<5^0=[\317T=\207\356\227<\324\320\316:\215\243,<z\024*\275J\241o\274s\354?\275\321>\034\275&\330\026\275\204x~\2743\000\367;\334\244\\<3\272\264\273\327+@\275\234\223\326<\r\265\022\275\224\022\022<\273\177\035=e\224F\275\250\246\'\275\213\203T=\177J\314\274d\3163\275r];<\227\n\220;s\256\223<\261\352\023=\302\205r\274\346\\@\273ZmN\275\256\251\017<\313\322\224\274\231\031F=\013\014\242\273\203\352\334\274\322\035z<\225*\241<\230\354Q\275d\247\014\275@|0=\353-\005\275\013=\001=\200h\372\273\177\242\211\274\356\024\235\274\000\255\\\275\310<s<\224a\014;\216\213\270\274e\341D\274=\205\340<jd\274\274\325\200\n\2748\371,=\244\244\241\274\022\303\301\274*(\346:\312\235\203<d\216C;B\202\204:\331cX\275\241\201R=p\371\014\2758X\3658\031#$=n\013?=ZSa\274\324\257\273\273@\031N=\340Q,\275\227\275\022\275\275\332\"\274{\242\305\273\001\006]\275\0077\254<\235\367\355:e\3407<\274bE<\265\037\371\274V\242\t=\342M\032=\347;\226\274cp\021=\335\370S=\2331\217\274\222l\255<\002 \237<?[\370<Vv\316\274\370\352E\275]\243?=\305\350F=\266\217P=o5m\273\'S\000\275=a\201;.\017\023\275\237\222m<w\333\353\2746%\005=\355\217\t\275f\013\372\274\361\314G=<\251&\275?\033\\=m\326\373<\207\211N<;\331S\273\000r\354\274xO1=*\364.\275[\023\n=\262\242\014\275\030Sr\274\342\335\250;*\303\353</\244 =\377\016\022=\001\333\316<:/\271<\t\321\244<\254.\236\274>\337M<\025\2560=\333\216\222;6x\307<n\226E\274\327&\033\275R\200*<\355\273\n=S.\024\274P\001C\275\270\320!\275\2758\246\27202\350<\323J\331\274\202\345\264\273\226U\320;:\025\t\275\275\353]\275\373\203:\275M\021\\\275\305`\253\274\202I]\274\026\010\253\274\2327\016=\034\252R\275\3064\271;\236\255\317\274\217(\342;i\020\350<\253\306U=\345\230\222\273X\335\321<\276cr\274\326\016-=\332F\032<}\273M=a\236\377\274W\344\267\274\345\030\001\275^\204\225<W\221\025=\267\311z\274\n5\243\274\236\202\313<\177\273\304<\312\211G\274\345\242\001=\230\030\307\274;n\022<\335\371\245\273\362\346C=A\344\316\274p\355*\275\336\203Z=\357%;=N\036\335;\353\214\217\274f2Y=\352\246\000\274Yd\t<k2\377<\211s7<\004\312*=\251F\211<8k\013\275Ov\022=\004\310\267<\3331a\274C\303\332\274\376*\356\273\243\3439\275\2644A=\232\'\321\274\027nO=\324\375E=FuG=\232\3622=}\270\316<G{\270\274W\377\014\273;\257.=\202q\022<O_0=\001+\302\274\014\275\232\271\315\306\300\274\245\326]<:\251=\272[\3117\272&\303\021\275\243h\250\274\226\335X\275\203r\016\275`V\323\274A\373Q=\3621\027=<!\371<\335%\256\272eJ\220\274\025\210\261\274E\277G=\'\356Q=c\004\354;\254\275R=y\2373=\233 \033\275\263k\330\2749\376\t<3\216j;*jZ<k-\246<\241\345\351\271\277\013\037\275&\315\001\275\tt\324<Pw\323\274\373\"\337;\307!Q=g_\327<.\026\026\275\321d\352\274\030o|\274\344O\r<#\230\005=\213\017+=V\221\366\274\230\267H=\313\030\200<:\\#=/\276\226\274\025\3349\275\303\247\"=\376\341\010\275Y\323|<:/\013=\\#\2706l\032\204;K\033\253\274\30707=r\3226\275\353\250\324<\341\276\023=\276\307\326\274Mc\023=\354>c<+\242\376\274\016l\005\275[\237\r\275\253\326\021\275(\2464\275o\3653=\214\t\267<\332\230\036\275\366M\003=c}7\275\274\266\036\275\261\014\020=\003B =y\305\347\273\217\342\373<\301\005Q\2754\036>\275f,Z=_h\016\274\302Z\264<\362\223\335<\035R+=\353\220\361<00:=\\\246f<f\002\377\274\367\316\327<\201\361\275<Y\376\025\275\rC4\275s\230\356:\337\345\310\274\233]\356<~\0214\273\372\037\324\274\021H\022\274\034:$\274\336`\026=(\333\315\274\326\274D=\013\240e\274\271/5\275\254\3175=\242\315\013=\327\035:=\177g\030\274\217\023\247;Wf\311\273b\215\304\272A\001T=\222U\350<\207\234q<\014q\350<\271L#\275\353o\334;\345\354\242;\210\306\237\274\247\r\016\2735^\371\273S\006\231<7\374?\275d\353<=O\311\243<\233\324(=g!\347\274\346\026\227<;\321_=0\3229=\rYH=o7)=u\277\025<\272\330J\275w\375R<\277\252\030\275\217\320,\275w\207\026\273\363L\274\274&\021\014:\302\221\210\274\030\331\235<7=\274\274\306\366]<\250\255\303\274\352!\230<mV6\274~\005[=\233\001\026\275\205\371i<\340\365J\275\036m\032=h\265\013\275\342y\022\275;\026\017=kk\250<6\345\255\274|\024(\274%R\004\275\363W\317<\236\245\024=\t\346\360<\262\005\037\275\361u?\274\356w\273<\235\230\370\274i\253]=\255\302\021<D\r\223<\024\272\001\274\253A/=gC\222\272S\006^=\211\343<=\244P\345\274\232xH\275\350\334\216\274I\307\221<\270\350\210\274\274\"\326<PQ\036=\024\236\220<\347F\361\274\345\324\250\273\026\236\230;\340\221+=O2N\275\2206\356;\243\0366\275r\252\312<bC]=\334A\177\274\331\036\006=}V\210<\366$\005\274\3669\246<\314\3763\274\013\337\032=q\334&=\276\304;=\246 \311<A\177\270\274\253\323T\275V\003\021=;W5\275%\253\223;`\240\255\274\034\014R\272\373_\037\275%\300E=\312lY\275\334E\\=\245c\353\274\301\304\212<\370E\007\275\261\240\356\274\004\242-\275\017w\331\274\272\036\207\274\220\274\031\273\263\277\366<\3760\030\275t\343\306<\326\311\277\274\022\3064\274wvt\271\000\234\024\275\204(<<\234\2538\275\223F\321<v\260\n\274&\200\221\274m\221\236<\014\000A=7\254\366\273|\336\004=\302B\032=\343\036E;<\035\030=\234i\034\275$\230\237<\013\365\365<\206\303\204\272\232\215`\274\001\354\310\274\226?\226<jP!\275\231R\251\274\245\247\014\275w\252S<q\215Y\274\320](\275G\373V=\361\t\027\275\373o\246\274E\253\224\274tQ\333\273\375jQ=\332\266\275<</j\272\271Gy:R\217)=\276s\222\271\324\207\213\273\234\253\326<\331q\32391{$=\345\214\223<\236\227\211<\244\376\323\274\365\304=\274\357\205\365\274o8s\274\2034\005\275d\003\262\274\'\007_\274\340\217T=\362+\005\275S\224\020\275\337WQ=l\025\273;\341\222Y\275\201\003P\275$SX\274\331n?=\336^7=\251\027n\274{w\311\274\337\"\204<-\307*\2757\342\377\273/\tZ\275\240Y:\275P\255\000=T\266\202\273W\360\333:/\321\224<`\241\226\274R \023=\231\003@=\322\247\036\275\205\235Z\275\341\212\302\272\247\370\n\274\350\272\007<\004\231&;0:\034=\234HO=Fn\322;\256\201^\275\312\006\002=\301|\003=\340\013V\274\374E\022\275\212\235\327<\037\nU\275\350\336\017=\223\352\273;\237\025\216<\215\002\226\274\034-\347\274\222\242\177\274\247p\323\273>\224\027=\357q;\275+\376.\275\333\271;=\037\264\001=\307B\374\272H\3748=5j)=W\215+\275\212!\224<\2479\331;\222\002)\275\364\264A=K-K=r\234*\275\215<\363<\216@P;\353K8;W\276\302\274\327\004^\2746\026\035\275\364\2476=\205\237\253\274\324\317\350\274\261\371I\275\232\024\"=(\312K=_\325U\275,\353S;W\373\017\275\177\262\032\275\254\273\276\2745\035\221\274,x\237<\335\262\366\273\0032\201\274\202\244\324;q\"\327\274+\030\361<X&\304\274;y\243<\321X6\275}\216\253<X\230\354\274\326+\010=\246\342\336;\247h+\275\035\003\264\274\316\242)=\275\322\n=\335\2609\273\374\303\234<\r\2160=\353\247\317\274n4\001\275\350M7=\314\215\337\2745\326\361<\325\247\017\274oh8=\023z\3519\036d\004=\"#\314<I\247(=%\2728=\016\370,<X\037y<\2539\350<.R\233<H\2374\275\313\234<\275]\034\021=\233c\010\275\345w\030\275\002#_=\371 \256\274\240d\023=\323\013\345\272\234\267\013=SXt<\013 A=4\031\027\275\266\373\310\272\335\022\333\274\206\212v;\362@-\273\026\375\254<\246&Z\272&\236\274;\004\024\200\274\237!\002=4\311\273\274\323\230I;&\223N=\233\023V\275%K\353\274\377u\340\273}V\r\274\004Y\312\274\023\003\334<\225\357\263\274z\210X=\226i>9\234\271>\273$\346\331\273\254^\332\274%\346F<\265\3423\275\035\260I=bqL<\356\3157\274\236\255\325<r\007;;\351(7\275mg:\275\322\343\251\274\030q\030\275n*v<\346\333T\275[6\037\275xG,\275\306\364\302\274\235\rK\275\236\217\025=\024\0336\275\007=\232<\323c$=\232\324\024\2746\230T=A\014:\275\271\312\3548^\232\372\274\177\247*=\360\333.\275W\3460\275I\357\366\274y\207Q=\264\361 \275\037\300b<d\371U\275\373\306/<\353qU\275\325\374P=\271\343\327\272\353/\260\274\210f\203<M\265I=\352\355\036\273v\027\027\275v/U=\357\246\325<\243a\025=\004\200\020=\204\010\260\274\316d\031\274\333V!\275{#\374\274\211\357\262<Ip\263;\310Z\035=\2438\003\274M\213(=\243\200\026\275\020O\000=\3339\336;\265+\320<\\\300$\275\013\271\003\2753\272\252\273M\035*\275\327\256);\303\212\266;\023\014\310\274\265\212\331\2748n\004=dY\020=b\211\031\275\227\323\233<\362\370\341<\310\215\333<=\032\216\274\201\317\034\2742\272\034\275XcY\274Ga\330\274=\t;\274#\225J\275}Wz\2709\276\332<\3727J=\016\373\373\273C\214\353\2743~\201\272\355\3310<\325m\370\273\374zI=A\032]<\002:o\274o\231\002=\005\0352\275\312\215\232\274\347\036V\275h\020\013\274\240\355\021\275\004\032\'=D\3653<\032\331H\275\241Ke\273\210\366n<\276\3360\274\355\323*\275P(\360\274\246\n\217\274\370U<\275O\377F;\033]\223\274\300K\322\274o\243\032=\002\241P=\316\002Y=Ed\315<7\220\025=\240\'\366<\244\217\345\274\316/\036\275pS\201\274[\004(=\017\032\363\274R\245\242<;\263~<T\343\350:K\\1\275\271d\216<\335\215\020\275^\031\316<\276\020\027=\373\314\027=ppC\274\337El\274\224\363\370\273S\t\275\274\311\353\336<\246\260L\2758:W\2753*\362\274\224\357;=A(\024\275}\031W=\320\266\206\274e\266^<\023\220<=\014\206<=\204\257\002\275\275p\027=w\361\257;\360\257$\273\346\347F={\002\030=\227z\365<~\026\244\273}\252\000\275\323\000Z\275\r\221\203\274\346\225,=e\345\311<g\020=\273\275r\000\275\210N\332\274\026\215$\274\003WR=*\373\033=rN\243\274r\305\233;\0146.\275\"<2\274>\017\262\274\013\304\354\273\254\265\021=\222\256\336\274\317\230J=\373.\013;\217/!\275\303\n\n<k\023Q\275M}\243\274V1\317<\357\250\t\274\367\3363\274\307\245\256<%P\353<\000\350m\273\251$\334<*\213^\274\035\033\013\274xq\307;\207\266$=h\3747={{$\275nf\037\275\r\204\237;\312\322\276\274v\351\201\273\375\273:\274\002\270?=2k\006=D\200\006=\371=5<cr\303<\305\006\206\274\321\003G<\026&\304\274\272b1=\264\271\356<\202\376\214\274\256\310\365<\364$O\275Q\342\232\274sB\252\274\020\310\227\274\023\235?=\377r%\275\204\361R\275\332\374+\275d;G\275\353\361\006\275\225\364;=fT2=\247=\354:\254\021\024\275h\005\010=*\347\242\274a\2222\275\254b\r\274\2563^=\3225\004\275X\312L\274?,\344\274X\216U\275\031\\ <W\026\t=\'\317\026\274\307B\353<\356\023V\275\246\030>=\260\322)=\2572\032\274\363\376\230;\240\014\023=h\271 =e\356+\275\30500\275?\340V=#\222Q\275\013\006?=\000\025Y\275\363\021G\275U\271\371<pU\257;\0328\244;\257\212\345;iK\250<]\312\034=P\005?\2758\237\026\275+\201\022\275\373.\036<\343\236\261\274\311\352\321\274\340\216\214:\233\272\366\274=\376X=\030\356 =\3749== \265\340\274f\355\030\275\262\\\023=[O\247<\311\345u\274\322l =o\256B\274\2052$=\014\'\025<6@i\274KC\346\274\2563\232<\022yZ=\267r\037\275\337\216\244\274\350\347\271\2749\343\277<\203\371p\274\240\0238\274\356\363\360\274\3548\376\274\202\3674\275\002oY=g\224\017<\315\326\315<,\232\343<\316-B\274a\250\3319\337\347.\275\201\354\032=d\232_\275\370\322H<\210\200\203<\266\273\374\274+vZ=\343\t\371<\026\226\004\274\222\034\001<?\r\364\272\203\344\243\274\367\036}\274\261\022:<\024+v<YY\033=V\250\307\274\271\257&\275\020\210H\275\363?\200<V\363\222\2737\377,\275\036`\207;\336\273\260\2743\003}\274ZF6=Q\336\211<!\263\376\271\342\357\014\275\366\242T\275@\303\377<l:\236\274\307\366(<mo\036\275\303}\034\273\214\230\007=^S\336<~\004#=9\3553\275\325l\273\274\254\330:\2747z\023\275\264\277\031\275\274\225\347\274\267\243\345\272\370\026\246<]\307\230;y\014&<\353gF\275\200j\037=\364\246\211<yl]\275\317\273]=\320%\003<\005(\034\275}\220\261\274\033\202\235\274\372T>\275[\177-\274\337, =c/\362\274\364[\307<\205\010/=\\_9\275\006\347J\275NC\304\273\017>\023;G\024\377<?\300\021=\324\371;=K\324(=LB\246\274#\270G=7\200@=\000\007\266<\nb\033\275Y\272\354<S\016\033=\316\206\377<\344\265\250;W\211\032\274f\2619\275\321r\013\2743\314@\275/_\315\273\021g\027\274\370\3409\275\361\2571\275\361\0376\275\037\351H=A\372\233<!\007\023\275\350\252\223<!\037m<h\270\224\274\307\267\272\274_\231\314\270s*\220;\255O\037=&\351\007=\016\022\340<\032\223i\274\3002*=\001\217>=\243\023\261<I\275\332\274\207\344{\274+\001C=;d\037=\260\2315\274\256\213S=6\314\370\274s\253\333\271\276\276\030\275\004\335\343:\031\236\016=\006k\310\274\246\3317\274}\376\265\274\200R\003\275\001\256\010;s\007\003\273?>,=s\373\342<[,\375:\334]\035=Q\322\327\274W{\270<\315\251\021\273h\347J\275\215\367L\275\357\004)=\356<4=\306\375\013=\321\366\326\273\001\354\337:\306\242\216\273\232\320<\275?\327\325\274\020m\337\274\241\372\035=\276\316\r\275\n\253\000=\\\326F\275\307\272\037\275\3226U<\367\256(\274\262\344f\274\3641\031;\231\255\375\274\355\2117\275\255_\237\274\354\265\214:\364\024N\275\204\022J=\2173\223:o\261V<\221\'\016=q=\264\274,\007\031=\237\203\010\275\205_K=\'\226K\275\236p6=\330k\206\274\254\342\375<\037\370\255\2748\3739=\271Z$\274\212\331\013\275\014\371T<\271Y\n=M\213\237<\357\263\265<\020\245\014\275lv\261\274J\2755\274\272\261\022=\217\232\364\273\263[*\275.\n4\275\014\355\364\274{\206\270;\331\365\253<\024\343W\275}\374\031\274*\002q\274#V9=o]\240\274\363\023\335<\020\362;<\024\354\016\275\307\256:\275\244(\331<\036\316S=*\tF\273\327\t^=\227\302\025=\356\013\210\274\247\225O\275\007q\320<\2536P\275_\213\026=E\346\317;\006\215W=\207\251\324;3\364\240\274\236\354\010\275\255w\304\274+m\020\275\226\255)=Bf/\275\033-Z\275<%\242\274-\374\265<\222\023.<7-\334\274\222I\030\275\333\023j<\350]\273\274N\305\225<}^\010=\251K\026=\003\3159=(\237\273<\234:C\275\274\326\030\272{2\215<\233u6\275_p\225\273\367\200\211<}X\241\274\357T\206\274PkR=\t\013\003=\376\374\274<\257\345*\275@\304G\274\021\024\367\274D\007/\275\212c\327\274\0275\235<\001\026\336\274\236\213V<E\216#\275\312\363K=\237\357}\272\366\261\320<c\223\021=u\331\342<,\361\225\274\210\266\020=&8\327<\234k\314:\257\'\222;\300\357A\275\020\350C=\rM\232<j\370\221<\307j^\275l\0242\275\316\002Y\275\371z\275<\235A\205<mLA\275u\254\002=\332S\"\275\215\256\277\273#\255\325<\224^1\275\204\256X=[\332\267;,q\214\274>C)\274\370\323\320<\'\250\215\274\217\336Y\273\n\212\204;j\211\017=\251\357P=,M\003\275;*\246\274h\3077=~\311#=\244O\330<\237\3529<\232/\260<\0275\253<\333\333\224\274\236\345\r\275\tX\310<,\266\314\274\300\254\221\272\350\320@\275\231$\201\273\231\n!=`3\266<\202?A=C\222T=\233\326\022<\304=\t<\302\346\003=\221\223\344<_\246\327\274\3246\207\274\353\210\301\274eS[\275\006j\027=y\206\275<x^\301\2710ZW=\235\364\314\273c\271\252<\363o\313<\255)%\275\000+\333<\336\200\310\274\250xw\274\016C\033\275\354\223#\275B\177\221\274\324t\230\274\322W;<\346.\363\274\032(?;\371K\216<\001\343\354<\0321\323\2744.\265\274\356\306\313<Q\023\310;V\234?\275S\373\234\274\271\375\217\274\250W^\275$/\354<Ol>\275\340~p\2749\355\256<\376\220\035=\277xW\275\351\026\351<\241\236\204\273\300;\007=0\217V\275\253\006T\275\247\337\014\275\375{.\275\rM\307\2748\275\362\274\317\210X=\350\257\200<\304\003\013\275\032<\001=@@\023=\3051[\275A\246\\=\307A\234\274\224\003\001\274c}\217<\225\367E<\002\317\006\275\275S\024\275\014#\006<\202\t^\275;qw\274\257\330\035<\322~\325\272WvP=\030\225\245\273p\363P=Db#=\027\206%\275>\226\234\273C4\007\275\232:^=obs<J\3751\275\256\271\026\274G\304-=\367x\025\275i\0370={O\033=\210u\251\272\210(\327<\r\035\014\274\347\263\\=^n\206<WPT\275^\200D=p\010\344<w\3656\275\363\224(=h\362\3719,\305.\275\310\022\200<\216&\005<\3735\354<\030\375Y<\231\342f<\2011\005\275\240cA<4\032\t\274q\253Z=\303\031\314\273jf\025\275\330[\\=rcu\274\236\004\004\275\337X\306<\254B\322;\202\034\220\274q\222\031\274\370\374\024=\326\242\237\272\356\2025\275N\364\366\274\201\362\226;\264{\320;\203a\021\274\333i\225<{\034Z\275\265\277\'=\366:$=\302C\026=,\245O=\201lK\275L\243\333:\201\003\307\272]O\371<K\033\203<K\302\004=+\325\016=\247\035U<^\376\307<\243B\"\275V\205\241<\333\3773=\337\200\236\273\274\300q\274\343\335\261\274\376!_\273v\356\324<\032ZJ\273\345\252\351<\021@ =\307M\033=s?\022\275nj\310<\213~k;\241\240H=\225\272\001=\010\344\004=\256\367\303\274)?\003=\340\207\003\275o\033E\275pU*=%Q\313\274\342\372\316\272\373\034C<\2719\242\274\322\277\341<\275\036\277\274/\232L\275\324\243X=\340E1=N>\230;\373\022Q\275w\016\360\274\214\t\031\275\253\253&\275\025\237\262\274\311\302\317<&\203\000=\000\375I=\223\315\273;Zh2=\"\010P\275\321\356\357\274G\001g\274\267\021\202;\336u\311\273\247a7\275\333\326V=S\222]:\365\3504\275\2540\370\273|a\027\275\210\2119\275\253\356?=%h\225<w\317K=\246e\313\274\247\315D=\357+,\275\313\341\224<\373\333A\275:\247(\275-\252\210\274k\307\026<\356\007\020\275\332\241:=\221\220;\274\266e>=(\217\320\274\363\2453\275\252\0143\275\357c?=jT \275\022\234S=P\205H=r\272:\274\216\262^=\262J\004<\006\203Z\274\342\n\235\274\314\033:=\030\244A\275D\3438\275\213\001\001\275\236eN<j\200J=}\355G\275\032Vw\274)6?=S\"2=\326w\336\271\254\262\037=\263f\"\2756%q\274I\001G=\021FX=n\031)\275\210\251\004\275K\3026=^_!\275^9\322<J\361\027\275\324L\255\274\n\253?<\377\004\356<\334\224\331\274]\261\030\272\3062Y\275\242G.\274\211]\010=\221|\304\273Bt\215<sf\201\274\267d\351<\263m\020\275\326\017\330\274\021\361<\274;s\331\274O\t\\=4\225\021\275\230\330\004\275eV0\275\246\313.=\251\2509\275Z\371\221\274@\002\274\274O\217\n=\"\202a;\020\3024=\344\310P=I\232X=\232I\362<\022\177G\275\tK\213\274Ig\375\274\227\202\327\274I\2518\274\202\210\345\274s&G=\322\3311\275I\'\341<\371e\327<\254\0200\275y1\202<\010\3733=<\241\323\273A\276\224<y7\324\274\267\353\263<\254\002\262;\370^-\274N\261Q\275\235\201^=$\0218=f\235\014\275M\210\037=_\007\237\274\264\3327=.!C\273g\211\016;\273*E=h8\036\275\274K3\274a\210.<\353\271\367\274\375eO=1E@<~\252\235<\004\367\001<- \n=\374\364\347<\305\006Z=\345\232*<y\006\327<\244\273\342<QDE=\025\301\302<\253\205%\275\213\305\022=5/\005\275M\233e\274\276Z\231\273\334v\027\275\215{D\275\307\311\246\274\246\205,<\373\303\"\274\364u\007=w\000\202\273-\025\006=F\312\272<\370\310&\275\270lV=s>^=\232\340\215<0\225;=\265\036?=\177\t\274<\016\243\206\273\236o\332<2\322\337\273tM!\275\021\344\032\275l\213\'=\325\336)\275\3066F\275\020W\000=8\226\004\274\305\320R\275\262K\232<\3572\021\275\370A_\275\363\352\032<z\354\311<\235c8\2754[\014=y1\232\274\026\036|\274\216\235\006=\nG\250<c\224S<\377\360I=\\\325Q\2757\237\232<l\021\020=\233\275\245<d\246b<<\214\354\274\344\331R=\276*J\275\233\236\027<s\347R\275\364\226\230<\372O\347<\203\336g<\036?\226<\t\365\211<&\003\020=\201\2319\275B%\017=\'\007\344;%)\264\274\256\335>=\0345\034=C\301?=*;-=\260\026\021=\201\316\215\274\323\350\277<\203\276\246\273E\351\006=e6r\274\324\317;\275\342\334\376\274\030z]:\3154\363\272\346\307}<\233{>=B\331\'<\033\357R=\013\352\354;\023=\014=\272\031$\275\r\357\\=\213G\374\274\004B\373;\223!,\275\323F$=\306\212\036=\317!r\273\267\206\374\274\301\177\224<d*\375;\261\225\227\274S\374U=\200\252D<\n\224\212\274\331\260\207<\006\335)= \246\000\2759\330\021=\272c\341<\\Y\332<+\215\226<Yq\356\274\203OR\275)\256f\274\311\364\233:\000\365\210\273O0\021\275\213\370\033\275c\024\337<\251-\013\275H\032\305<\320?f<\212\362S\275vz8=8\265T=\322:%=o\205\300\274q\266\307<if\271\273\334\037/\275\000l\032=-\232@\275J\232h\274m\232\353\2742\321\243\274\207\277\260;1\225S\275w\303\037;/rG=\021!\314<\374OP\275yUY=\270\206\276;J\0367=\006\217\032=w\036\003=<\272\325<\353\244\021=h\037\035\275c> \275\350\010\351;U$!\275\246\267!=\253\220\033<np\200<.\233\250\274\230\336l\273_m\004\2744\252K\2749\271\001\275\016\263\003\273\300\210\001=\363k(\275\302\356\r<\334\301\227\274\005<M\275\020=\340\2748\367H=C\"\212<s&\225<\327\027K\275Y\212!\274d\217\212\274l\"t<_\214\025\275Q\177\034\275\030Y\361<BE;=6\353\323:\336A\005\275\336\204]\275\033\005\343\274S\347\356:\334\365\255<U!\275\274\200\200\022<b\321]\275\354\356=\273\237\321+\275XuQ=\206\266\215<\366\254]\275(QX\275\332\334:=\237x\262\274\315K\351\2747a2\275\332\357\004\274\210m\032\275Y\223Z\275\014\244>=@<\222\274K%\343;T\245\033\275\322\302\316\274\313\3065\275\334\026Z<\205\010\036<o\"\344\272\375\274\016=\004a\301;#M\251\274\257\250\221<\010\374\275<\276,Y\274\231\372\347\274\2621\267<g\267<= P!\275\336Q\025\275\366\212\355\273^\007+\275<U1<\177|\313\274\330[\032\275\0140]\272\177\374\353<\263\2500\275\273\376>=\022X\365<\313\322\024\275\353`\334<\274\242\004=\347\353\207;&PS=9?[\275\177\246\317<;\325\370<\236\271V\275\305\262\036\27590L\275\371Y\031\2758t\221\274\205\365L\275\277\227\332\274N\373\367<\236/\357<\245\351\334<U\250(=\022\347\021\275\227\344N=\315z\375<\207\225&=\323\t\311\274\0248.=I\017\335\274\223\3774=q\034#=\247\003Y\275\274\311^=\205G\320<2C\247<Q\314c\273g\370\311<,\024\242\274\274i\272<\363\227\016\275\321=\036=nSS=\236H5=\021\242<;vo<<\226\220\005\275ns`\274\000\207\210<>d4=\200\247\351\274P\302\333;Ej$<\307\251\211\273\025HU\275\364\361\030\275\210\346\224<Xp\205<\216\245N=\213\351\376<\013\313R=\016\243\317\2749G?=U\314)=K\244P=\317\026V=\275\205-=\320\246\030\275\2515\317<iQ&=\320\034\342\274\344\257o\2746\237\227\274g\256\232\273U\376\010=\376\2366=q\033\020\275\200T\377\274\177]2=x\376\204<G\253\034\275,\312\307\272\024K\'\275z\350\024=+\234\366<\033\236\256\274_mJ=fK\274;^\230\312\271\307\205\346<\273\036\336\273\364gN=r\000H<8\277\306\274\256\"\032\274\315\312W\275\356\025\216<\366?Y=\327\325I<\353\302m<\276a\n\275\010HY\274\0332\337\274#\315(=vG]\275\001k\016<\330\351%\275\210\024\017<qv\370<\262;\232<\177\241\262<\356\377L=\377\251;\275\007\362!=\261\302S\275\n\254\026\275d\027\202\274\n\303\027\275\344\033/\275\2510%\275I\343A<\243\360\2276\201\230*\275\232\263\221<\233\333G=|\362y\274\340\245(\275\236\344]=\242\355\000\275\222\002\001;\346z\025=\204Z\026\275{\244\030\275\343\263\024\275\202a\006<\231\200\t=\220\267\035:g\307\260\273\206jP=\201\345\372<\231\234\245\273\r\031\001\275\343\326\025\275\236\330\0179#\034\013\275\007\257\016\275\331&+\275\302\201\034=\3330;=f\301>\275\315Y29\330\002\025\275(^\324<MN5\275\270qL\275\350\372Y\275JW\251\273X\261\010=\245\3726\275\013\203;\274*\363^\275\t\306\354\273g\213^\275I!\340<\315\224M\275\373R\312\274\332\267W\274\177\230&=\263\335P\273\312\212\002\275\346\217\020\275\275~\367:\311P\250\272N(\353\273\326\3772\275\343\267\340\274i\\\036\275\031H\230<E(\024\275;3=\275pe`\274-\277#\273O\0252;\211\250Y\274!,\202\273\345ZQ=\312\215\001\274/M\276\274O\375\336<\212\221\016=;T.=e#\367\274\003!\t\275\032\2333\275\"\354\310\273\226\251M=\323R\002=\266\370\207\274\025\311T=\\j\34696\376\227<]\246$=\364G\\=\014\"\253<\032\303\007\275\013>\000\275\2221\222<\264\215\375\274\211\354\351\274\"B\216<%\212\312\274X\274\031\275\'.\r\275\262-Q=\023\205\233<\233\353w<\314%Z=Bv:\275\322\375%<\355\334O<\202\377\177<\371\2632=\342\235&\275\302\370u;%\262\244<!\266\262\274\207\362\\\275\233B\242<\375\254\036=\020\264_=\216RP\275\000\225\007=1\334\371<\204I\331<O\256\233<\002\223\274\274\\\377\013=z\257C\273\302\251:\275\234m0\275,x\250<.\202\311\273\202\332\240\272W\022\271\274\365\225%:xE\267; 3\\=\277\013\302<b4\336<\206\024^=.\267A\275O\306\217\274}\275]=\204\345\215;\014\335\005\274\375!\223\274\215`\230\274\2522\023<C\r\276<,\017,\274\227\206\252<W\250$\275`\217S=\340\032-=\260&x<\233\221\256\274\242\303\036=\326\000\266<\021R.=(\366 \274\036\205D<\026r\222\273%\020X\275\265\r\233\274x\350\007\274H?-<\262\260<\275\231\036\366<\333\277S=M\014\336\274]5\036\275\223\027\342;\354\t\323\274@\205x\274\373\030\n\275\264\246\030=0\307*\275H\277\025\275\016\"z<Q\216\014\274\303d\216\274\336\366%\275\013U\246\273W\314d\274\3238\255\274\367\235O<\357\372~<yl\342\274\346\375\231\273\341\3007=\345\274\036\275\001H2<\220\243^\274\253\023&=I\314\250\274Ef\346\273f\230\020<\356V\221\274\0177\027\275\302\272\365;\202RW=q\007k<\233&\337<\324\257\213<\256\256\243\274\264d\n=\2576\032\275\2137V;)\364:<W4W;8?\355<\321IX\275S\312\266<\267z+<\246\376A\275l[\274\274\322^\262\274d\361\271<\267\366Z=PF\314\274V\010\256<X\257\360;\354\246I=\262\016\263\274\031\271B<\314!R\274g\344}\2743\276!\275\372\314B\275o\275\"\275\264g[\275>\025\203<3vS=\020MI\275\200n^\275P\341\237\271\325\234D=!\036\037=8)\213\274\273;+=\031\027Z\275\321\213Q\275LO\003\275\332\311\204\274\265Q\236<\226\265\030\275I\235%\275\'\313\021\275[\317;=\344\240:=Ft\007=5\344N={\217\302\273,\363\r<%\256\242;\256\252F\275>Q\025=\335\325E\274e\300x<\235\323\200\274z;\360<a\231\256\272\325\026\335<)t\342\274\337\267*\275)\024\277\274D\335Z=\341\216#=\347\216V\275\312=\371\273\030\n\365\273GPo<\246\231\004=\230\221.\274\3047\353\273\343N_\275\023\202\346\274P\241N=\345\325\027<D\307\360\274{F\035\275\034\246\311\274\205E\003<\244(F=\356O`\274={\275\274\325\264\037=\303\001Q=R\354\t=\307\016\025=)\265?<`X\303;\375\320\342<\307v \275\003\373\232\274\350\217\\\275\224?\303<\275\311\367\2743=B\2756\224\214\274\003\r\367<#\371\333<\326\026$=\237{\324<~8\035\275\305\351\277\274\026\277\236\274T\213\032<\314\210\371<\244\273}\274\205`C\274\264\303>\275\356\270v\274\265Ue\274\274p\276\274\211\263\217\274c`2=\t\353]\275\254\240\266<\031kY\275k\336I=S\270\352<6W@<R:\227\274\330eH\274\022th<~v|\274\212\267%=]\253 =(\237U\274\367\240\005\275\000~V\275\322\376B=\270\311\210\274t\261y\274\237xN={,V=z\2110<\006^\016=\206\017\307;1-9=t X=N\263\310<\360I\264\272\177y.\274T\020%=\356\006\315\274\334\252\267\274\2760V\273\377\264\237;\363\242\254<\211;\031\275\272\021\224\273\254\375I<\032T\010=\372]9\275\\\202\376\273.\n\364\274\263u\216\274\321\233>\275\375\016\306<\264\322\005=\251\207\315;\177(t;\272,\364;la6=u\351O\274\017\365\273<\360\361\014\274\263\324\003=\347\231U=\372\013\343\273\353\276\021\275\210u\017\274\362\227\227<\364\254\021<\324m\314\274;B\032;\251:#=i\367\310\274cC_\275\3211\223;T\216\000=\352g*\275rv\027=\317W\026\275\230\200;=yw\013\275\337K\340\274\235d\024\275b\333<\275\343v\252\274\373\367\237\274)\313\226\273|Q\340\274\223\300\224<*>K\275~m\3258\315\312\006=J\337\014\275\311\216\r=\361O\235\274\310\2425\275\220\300\300<d\257\000\275\271\361]\274DQ^\275\372\002\031=/\272E=\203f2=\304(\367\274;\034\017<\231\353\236\274\222Z\313;\333\201[=gx \275;b\265<N\326\327\274[W\010\275,c\n=\004\3178\275\220m^\275\246\377\273\274;M\207\274#\036X\274\036\"\374<\274\336\334\274@\352\032\274T\266\r<\014R\320\272\373\264\025\275\270\313-;\3158\232\274\033uA=U\370E=d&\013\275$\203\r=\307\257u<\262\024\356<y\343D<F\014><\341\276\322<c\210<\275\013\346\202<\217\272\023\274\356\226\361\273\336,3\275E\252L=\324\232.=\003\217\037\275s\302\034=\277t\361<\024\220<\275\223\216F<\315\304\236<\217\266\225\274y\330G:\302*\362\274\257\244\025=\372\236H=\330\354\344\274@\351\370<8\377*=~\010\021\275J9\020\274z(e\274\217aW=\256\025\'\275{LV<\232\357\002\275\302\356}\274\347\314\t=}\375\266\2748A\356\274C\333\270\273j\255\303;~/\024\275\312x2\275\245%\035=:\016q<\236\376\226\274\305\312\021=(9\"\275\237\245\334\273\345t<=\274\311E=#E2\272P\'\245;\263\313]=\264\351\257\2749Ce<\322IU\275;\222{<\346\231.\274\352\265\201\274\320\2113\275vF\226\274\006\3759=\371\254\027\275\032-F\275\336\372\331\274\257l;\275\',\224<\030\351\020\275;@@\275\217\344V<\\\251\026=nPQ\275\375\335q\274$B\021=\270\332\021\275r.\350\273y\031a;\216\004\267\274\214\315\037\274\'\347{\273\021?>\275a\\\345<O\313\022<;\234\022\274\347Q?\275\353\251?=\t(\342\274\311\267\271\274\036nC<\303\367\252<\345\224\230<N4\034\275|@T<\031\215\331\274n\201\204<+\341\003=\013\225[\275\222\2314;\237\271\337\274\2623/\275\242\001F\275\324\243K\275%b?\275S\006\013=\206\245\302<\207\316J=\352\304\356<\222\037\267;#\010\004\275U\320-\275\342\330\237<\360\223\203\274@\376\320\274l\220\371<5\224\017\275#d\024\275=$!=\007@\212\274\256\371\337;@\265\033\275\377L\000=Z\013\n\275m\007[\275\223\206\345\274\207\252*\275\370\001\252<\350a\224\274c\347\363\274\325\262?\275|\244\030=4\324\036\274\366G\317\274\013\244\004\275\275\267\033=I\324\033=\364\377\\=\'\321\311<(.\260<\327\251F=\007\244U\275n`Z\2749\317\222;J9\363<G\3308\275\032\022$\275\230\027Q\275:\343\004=m\320\352<8M\207<\022L\263<\304\006&<\277\301R=,03\274\256\335\263<@\332\255:>\n\235;\000?\037\272\336\324Q\275\360d\301;\324!\334\2748\262\377\273\275N\254\2745g\377<\230\307@\273\3179\355\274\215\213\034\274\333q\227\274\352(\355\274\256\243\201\273g*,\275\006\353N=\026KH\2750\204\231\274*\247\031\275\342\267\237<\320B\016;\341\275\333:8\2233\274\332\2643=Wf\005\275\333!\236<\323\001(\275\340A7\275\002I\023\275\206e\230;\000%\344<\222lY<\263\3454=\204#n<\362eO=\017\257\325</\245c<u\003\204;\300\010\025=/\0208=\335!*=R\225\r=\223\266\027<\320Y\026\274\221\027(\273\323]\231<r 2\2757C\006\2759a\300<\367l\235\274\004\316\303\274ZXZ=\3219S=\031\305\036=sv\341;zX\002=qRT=\221\210\'=/\034\302\274\250\177\"\275\315s%\275\330,\016= =:\274\007oW<\334T7=>-8\275\215\355\227\273q@\004=\032\314^\275\264|\013=i\227\250\274H\366R<\023\240<=\350KH\275d\264\355\274%\374*=\002p\351<\210\264\000\275\335\t\305<\002\336b\274\357\273C\275Q\271&\274\305\324\250\273\302\216X=,\232^\275\034\014V;>\375\204\274H6+=\315\361\364<\032\360(\275\206\000o\274\241]H\275\202)\206\274\232\203\016\275~\000\235<\316\361\254\2746o\004\275\004Z(\275\025N\006<1I\317<\002\177\274\274\214^3=\205z\330\274(rD<\361\353H\275h\333!\275\t\252W\275\017CR\275is\276\274\000@W\275W\236*\273\375\227\312\273\363\232C=Q\023\"\275\245\350,=z\306\237\273\375Z\027<\236\210\225<\344\3056=V\311t\274\360\270\324\274\337\303@<p;\017=\346\226%=\330rV=M\247\225\274f\236\226\273s$A<j\343\027\273\037\177\"\275\244\377\305\2742Wn;\351\324\014\275\225yB\274k\210\003\275@qW\275)\215\336\274\037o\027\274\304.\336;hm0=\276>\000<\200\2744<i\362\313\274\363}o\274m\3121=\244\346V\275C\021M=\253\344\255<8\033[=\264\255?\275\214{C;Ge\001=\302z\310\274x#O=d3B\275\tG\330\2742\346.\275#\250(\274\tRQ=!\350):\2472\263;\262\270\010\275\r\005\326\274\tS\231\271\355\232|\274\034\001{<\ni\235\274z\n0\272\355\017D;I\001\304:\265w\020=\344\001\220\273y\0312\275\373\312\301<B$!\275y\317\315\274\234\3577\275\270\372r\274\212\227\361\274\'\225@\275\002\032\363\274\2402K\275~>H\275\250\215\027\2747sB<\210e9=\236?I\2753\207\231\274\2236\021<\323\352\345:,\030><\367\025\312;\026\334\336<\215\265\372\274\025Z\202<\300=*=r\207\306\274o\320\235:\371\n\342\274\031R%\275g\334\233\274w\005\002\275\227s+=\323\2518=\017\202\036\274%\214^\2733#\000\275o\020\303\274\251h\254\274\253n\225\274\372\305\316\274\032s\361;i\241\326<\027\245\340<\000e.\275VE\025\275\002Q\265<\225\026\031\275P@ \271\265\031}<\210\001!\275]\351\006\272\004o\321\274_`\275\274\230l\\=[w\253\274lc\022=\023\335\373<\364x\036=\362\316J=N\201\353<\261\316\030\275\3629;\275\324\014\232<\373\356\242<\203\017\341<a\202\324\274\250\366\035\275\032\235\271\274\207n\222\273\030\355\020\275\231o\344<c\013A\275\235q\210<9\230S\274\313\301\245<T\373I=my\363\274?\306\n=\023w-=\274\036\004<\336o9=`\'\240\274Sv\367\273\211@><\321\316\313\270\216\333\n<Z\010\004\275UKG=\033\364 \275)\205\361\273w<]\274\016\243\030=\331\253[<\343\237\224;\224B\347\274v\314U=\366T4\275\376\271\020<\311\024\031\275O\300P\275\226\260\247\274\315\372\365<1\177\010\275Z\017W=]\201\333;S\347\n=\215b\033\275\360V\311\273\302\013\023<E\032\210\274\\\302\024\275\305\335\037=\370\263\307<\027R\302<\301yB\274\357\352Z=\316i\021<\260\340\312<ZF\014=\357V\022\272\207j,\275fP\222\272\372\256\030;y\267\027=\235\"\014\275\337i\002<O!\002\275WuW\272\353\\\027=\020\325\241\272\352V\234\274h\273J\275d\201O\2735\\@=\224s\232<W\346\\\275\222l\\=2\201H=\022\301\";\367\354\342\274k|8\275\233\200\177\273g\037\032=\334\305\\\273 4\034\275\2560\026\274 \022&\275X\246\343\273\321Ys<\361\221`\274<\273S\274\232\313<\274\303\002\255\273\026Q\001=1\256\341<{\237\026=K\235$\275\253#\272;\213\330\243<\026\275U=\036;\025=uc\274<x\014~;(\3239\275\341\021\361<r}l\2745\232%=\224\007^<#\254q<\356\264\303:T\'\254\274\357\277\263\274\214M\276\274o\224\310\274L\357\r=\323\330#=\361\323\024=\026\226,\275>\307\r=\000\316M\275\336\341\340<\201-7\275n\3647\2752\':\274\277\276=\271\017\305\334\274\263\371\010\275\334_\030\275\226U6\275\254,E\275\345P*\275k\213\372\273x\257W:m\354\005=\252Z\205\274Z\325!=*?\316<\274\003\022\274\212&Y\275K\005\032\275\372\3668=\365\231\210;\327\265\270\273\370\n\305<G\037\227\274%\247\301<|K\035<\232\004\373<6(4=`\335\273\274\334\024d<\256\017V=\371y\346<_\267\266\274\277f\027\275\212\005\036=3\376Q=|MH\275\222\350N\275\231 ^\275)\326\373<\352\016\005\275sR\017\275\315:\327\273:\002J<d\223\304<\210\327\301<\330X\200<\333\270\372<IN\253\274\232\317\202\274P\237\'<\242\027\246<\322\201\005\275\240\344\031\273-w\236<\032\366>\275\03014=)F@\275~&\200\270\030\242&\275\037\227\343<4\356\215\274\253\333\326<R\367\032\275 \240\177;\344\237\177\274\031\214\t\275\003\257\365\274\210=\010\275\317\271\304;\032aX;\301\274H\275\275\340f<\025p\010=qh\226\274\025\346 \275\246\373\367<\"\363#=\037\220=\275@\010\007;v\2442<@\326\005\275;\021\034=\212\364\"\275\260\361U=\225\215\017=\200\220\305;\254\177\301<\021\361\2149\263\027\317<3\316_\274GT+\275\222\312\003\275\357\240\003=Q\236B=]8\023=\261\341\016\275\214\244\251\272G\3120\275xa8\2758\023H=\377\344\224;\314\023\\\273\24187\273\031\317\023=u\023\001\275\001\325\220<\030\210\n\275\2023q\274\322\237O=\306\206O\275O\352\200\272\334@<\274hK\361\274b\n\250\273\265?[\274X\364\252;\345\252\001=\375J+\275\202\376\342\274\215\010\267<\022\3051\275{\022&\274\335\245\206\274(J\324\2745\022D\275\315\357\023=\375\002(=%\027\270<CU\'\275\303k\310<\255\327\325\274m6 \275\031\360\263\274F\351\014\275&?\317\274t\2670\275@j\325\274~[\207\274K\204\235\274f#5\275e\317\255<X\315j\274\001\014B=]\364\014=\244\257\016\275\261\335Q<\201(\263;;r\277\273\203\036\244<\'\337\034\275\270\2445\275\344\357\347<=\252\224<d\216\021\275\363]$\275F|\325\273\004\023\033=>\342\036=\266%\031:\253\"P\275\314\240\230\274\211\326==\375P\225<@\364;\275/\241{<\034&\025=D\266\356\274\3200\373\274\364\236\206<\335\352b\274\255\3040\275\025Y\003\274g\204n<L\234\377<\205\022!=\375\355\274\274\263Pv<(\304%\275\304\365\034\275&O\023\2759\177\003\275\200<\317\274\311^\342<\311\t\277<\272\305\234<x\365\224<\214eO\275t}\026\275\005\310a<\017\251/\274\253`\323;\201h\350<+\351\306<\332r0=\240m\2269#\"\344\274\034M\263\274.\000I=\016X\354<\206g\250<\345\030.=\034\030\244\274\034\262\305\274a\363\'=\020\226h<\245L!=\307\035\007=D\323\270\273\324\'\\=\236b\236<\335\177\250\274I12=\271\"\032=\032\364\216\274d\227\'\2752\334\n=\246e9\275d\250\335<LZ8<\372\255Z\275\210a\n\2755w_=\323\374\233\274<\r\022\275\351\335p<\'\"\203\274\"pA=\370wb\274\357pL=U\030R<\351!\027<p\314V=&\304!<m\017\242\274\367\0300\275\217\242\267<\027\356R\274\t\261\000<g\301\344\274dg5\275\265\1770=K\214&\275\221\262\223\274 l^\275\277\2557\275\223?3\275\3426~\274\261\357\016=\0211*<\237\2255\275/\326\035\275.\'t\273pXB<x\234D\275\354\231!\275\271\343C\274\321+\007\275;^[<\327X\023=\224\323\032=]\2139\275\343\311\320\274\260UR=\260\373\254<;m]\274\263)\032\275\371\262\272\274\320\256\031\2758\367J=\310\334\035\274\265\037\310<uaV=\224U!=\207\370C=\263*T=\203y\212\274\376\331\305<\310\010\024=P\243\221;4SJ\275\224sx\274\014\337F\274\006\3205\275\354p_=(oO\273\000\200\003<#\245\204<\362a\274;3\300\r=\311t~\274?\242\244\274$\317-<\216\321\307<\364T\024\275\303\254]=\341W\347\274\225\376\026\274\257S3\275}\275\377<\2632\345<\017\252\377\273\202^><H\277\004<4E}\274\0331\037=\027\325\212\274/0\325\274\270]L=\252_\\\275\263_\016\275\230\221\365\270\213Q\370\274\336\3165\275\216\t\265\274\205\203N:\232\330S\274\014\260\226\274\031\"\262<\316-\211<\353\257\353<\2711.=\2561==\007\267\004;\356\rv<\033D\"=\304\207|<\016ON=x\020\001=tPV\275#\365\267\274\360[\030\275\312\005O\275q\262\277\274\005\367\257\274\226\261\313\274\250I\"=\276\213%=\276\365\364\273p\020\214<\266\361\227\274\263\030>=%h(<\3300\247\274\217\036\202\274C\014M=@k\000\275=\257\376;=\335\030<\375]\211\274\2576\211\2742\025\027=\360\336\234\274\344\376B<\304\237\315<B\030~<\215\265\263\274\035\035\202\274R\274\377\274\344\317\356\274\005\024\315\274\344\2365<;k\374\273\3753\322:\323\270\240\274\201\340\\\274t 2=\013\2754\275\363\304\232\274\260\027\251;\241\021\'<(\336\342<3\030\037=\341%\201;\201\372\010\275\036\004\377;(\2123\275g\0317\275\216\352d<\344Y\n=\363\025P;\250\347\t\2756\312Q;\220\254\234\273_\233];\245\212+\275\260\311\203\274\024\313\004\275\001D\037\274\313d\'\275S\"\337<\001\213\261\272C\356\267\274*\216Z=\346,\325<\026=\005=\212\273Z<\311\306\250\273\031\036V;\317\316\276\273I{\372\273\201D\302\274\023m:;m\027\346;\273Wi\273\317\313Z\275|\">=\370\306\314<\215\245\316<\324L6=@P\031=\246>\246\2743=\037\275\243\241F=\255\3440\2736W4=\242l\006=\304T(\275\206nE\275\236\306+\275\253<\212\274\264\035\363\274^\235\020<\2073\357\274\370\225\272\274\246TM\275\355\316\206<4&\331<\235B\356\274\356\003G=\014\0053=(\001\230<\3260A=\311\346\206<\t\213\214\274E\300.\275\245{F=\374\n\354;k\3675=\013S\026=\265\326\217<\023\363\220\273^\2731\271\t\221a\273\350r\005=\352y\212\274Ii*\275}\215\366\274\003\207?\275\007\360\365\274\371J\245\274\275\327\030=;\210\230<s\003)<E\236v;\361\213C\275\205\357\334:\307M\017\274O\234G<(YD\275\211\372i\274\210\233\302<G\245\033\2756\240\210\274<5C=\357\002\310\2745N\006=1O\207;S\314\206\274\335\243&\275;\347\304\274\374K\250\274[\006\002\275:A\014\275\021\245V\275\303fD=\223\220\225\274y\036\324\274\013\037\r\275\254R,\275\306\342\020=\305&.\275\021{\210;\245<==-\307!<X\242\305\274\031\273\236<j\344\333;\304/G=\345\322\033\275_\004>\275\266K\\\275\223z\332<L\275\230<Z\275E<\376\227_\275A\252~<H#\"\275\242\217=\275\255\242^\275\363!\177<\201\370\000\275\315\n8=\017\377\t\275\036\344\"=\243\255F=eUG\275#\207\227<\037I\303<\374X\220<?7D=\362\322d<P#\\<ihS\274O\240\202<\332Z\375;Ki\034\274\372\324\'\275\341\265\220<\307\215\026<\005BW\275\025\212l<\277\207P=\315\344P\275\037\005C=*z\r\275\261)\325<K\265\036=%9\032=q\315E\273\003{\356<\224.\213\274\263oS=2\037\031\275qCQ=\311%-\275\024\243J\2758\370<=\352~.=\345\023?<\362w\034\274[\247A\274\343Y\013\275\346\260\270\270\247\262\370\2746f.=\217|\301\270\344K\323\274m17=v\r\361<(lB=<\314\"=\007\341\234<\027\222;\273\207\'\227\274\347\021\303\274\364M\365;+Zb\2720\320\346\274\375\260<=o\370&\275\304\326\207\274\217\027\342;\033\222M\275[\002\350<\37037\275\217\230Z=\254K\021\275\255KU=\261/\177\274\357\206\254\274\276\202\206;\331\241\026=\324d\213<yo\'=?\324q\274\365\324\331<\257\333\226\272Y\260\365\272GP\030\275S\236_\275-\241\021\275f\335M\275\223`K\275\367\367Q\275\306\273\031\273\327\377\036<yGM=\270\316\265\274\017%%=1D\221\274?Q\\\275\026\213\363<\241t\206\274\177K!\275\231\r\203;\352\013\030;\371@H\274\326g\352\273\224\271\272\273&\020\367\274\201K\377\274\353\275\234\274\024\256\037\275\235\275\300\274\023o\274\272\360=4=\034k\272\274\315\352\242\274d\271\020=?\003\020=cI\223<\233C\031=\234\213\375\274\267_o\274j_\225<\005\301\000\275\353\340$\275\264\007<\275\314\325\037=\376kS\275\244\276k\274\333)|;\266\247\340<~\026\"=\311\321\346<[\"\364\274\212\007\301\2745\r;\275\227C\332\274~\277\235\273\327\036\342\273?d\001=\006\216\"\275f\255\n<C\265e\272:34=\352d\003\275\002Q\231<\362s\375\272M:G<\245\352w<]\301;=e\341\231\274\014\326\334\274\032}T=A\216 \274M\301\t<\233\017\377<\237\350\272<9p\231\274\002\"\354<v\2405\275\316\2738<k\230\224\274D\014\313\274\236\r\261\273\337\361\217\273J\266y<y\261\227<Z\271\001\274\255\033T\275\222\324\027=\336n\023\275\204\027@\275\217+\221\274\211\215\017=\021\362\274\273\023\260C;B?\025=\254\320\005=\276T\373\274X\272\266<O\037@=\314\216j\271*4\270\271:,\025\274\037\351\037=O\030\276\273\311\247&\275\265\277|\274B\274,\275e\022\002=\014\t\004<ks\341<\251\213\000=\2025:\274\366\270\257\274\235@\252\274D\267\020=\306\276S\274\024_\265<\364\226\024=\272\'c\274\007\tK\275\313\341\010\274\032C\"\274\371]2\275\025\023!\275\315\201;\275\025\244\265;Lq\312<\267o\"\275\370\'S\2744\022\2428\223^\025\275D\222\214<l\254-\275B\301\270\274\035\0011\275\250\177\030=\311=&\275\215$\266<R\223v;\001\027@\2757\345\033\275\360 \262\274}\277}<\224\036\375<\265z\357\274q\342\021=\247\344\\=\377\\\330<.\324\226;9\273\000\275U\316L=\240y\301;$\312\t\275\364@X=\345f&=\022\267\225;\256*\027=\003\017\221<\275\335r<\353\355\363<%\221\177\274\332\250\212\274\376\024:=2\206\347<?\233\001\275K\335%=.\322!\275@=6\273\306J!<\204!\313<Hig\272\231\035F\2751\240\341\274\360\245\"\275\32105<\207\354\031\275L\025\035=`\021U\275\271\200=\275\270\t\216:.\1775\275\377J\266<\177\\\034=\240n\023=\031\344\206<)\026,<\352\272\362<\271\352\223\274Z\031C\275\307[\002<G&W\275^\256\000=\003\245?\275\347\034?\274\355O_<\354\037k<\252?\342\273JfE\274\200\003%\275\305:\366;?\027A\274\253\2531\275,\010=\275q\302\204\274c\213h\274\222\305t\274\177\022\311\273\004\310\022=L\206p\274.\010O\274\177\'\334\273S{\325<`q\340;\027\271\342:\272\022\t=\3305\355;|\r:=\270\264\001\275\307\003\237\274\255h\026=\001\323\316\2735\321\347<+\335\372\274\3600@=\253\253\n\275\373W3\275\372\377\265\273\335\344\260\273\037Z@\2750\273\350\274\257\3472=\377\303!\274\003\211\334\274\031\260\022\2757\001!<\236\344\243\274\036\321F=\225\376!;\031_\273\274)\204\321\274\016k\223\274%\352\004=a\370!<R\374\317;\314f\202</O@=St\\=\376\2078\275Vp\351\274 l5\274Ij\366:.\263\200\274\372\371B\275kg\037=\025\225T=\320\262\336\274\3142g\274\354\307\321<\220L\215<%3\261\274\260\334\322\2743\322\201\274\032\177\250\273\262~\325;\243\272K\275\025\316_=&\"\235\273\204\3520=\035\256\026\275\246|0=\036\253\250\274&\344\363<A`\024\2757\204\031\275k$Y=\"\260T=\362\355%\274W\253:=\230a\305;\271z\364<\027\364\275\274F\367\200\274\352Q =\354\027\034\275c\237\337<k\241\317<&\201\322<\r{Z=\255\021\317\274\344\r\372<4t\274\274,X\226\271Q\255/=\354\335+\275JgU=\001\352V=k\350+=\031C\330\274\000\266\242\273\222J\t\275 6[=s\177\237\274h\356\222\274\311\332i\274t\347\224<PI\231\274\341O\207\274L\353O\275s}\031=\034\206,<(\304\265\274\265.\216<!\253w\272-#\224\274?$\216;\220\226\276;f\243J=\034\346\217<\3616I=W\207\340\274\003\261s;\223\273,\275>\261?=\231\221\r; &c\274\"\377\241<\255c[<\310T\212;\004$\363\274\376\251\234<\231hB=o\0139;\014\367\'=\205\001\203<s\232\"\275\002\245\"\275\'\263\346\273\347[\031<\024\"\n=\365\330\255<E;\213\274Is\315<\311\250\025\275-\350\340\2745\017\237\274\2344*\275\267V\310<\342\034?\275e\215_=p\242)<\335a\365\273E\344\312<\325O\301\274\261\275#\275\016{G=\000\006\270<z\210+=\264KQ=\340\236\035=\351\026\"\275!\355F\275f\327\200\274\365w\r\275\315 _=\32209=\213\312\364\274I\325;=t\255\024=\202\346\241;\245\275K\275\333\'\257\274)\251\010=\t\371\023=G/&\275\350\210T=\241\036S\275\212\366@=\365A\010=J\303\007\2751t/\275v9\276\274\314\222%=\265~\233<\270H\034=\323@e;h\250\253:\202~\210<\355\347\t\274C5+=\363*\033=\322\355==h\224U\275\2506\"\275I\231\261\274\n\313C\275k\373N;O\032\210;\307\217Y\275N\001\027;\345\247B\275,\032\266<\016\203\235<\307+\317\274\370\003/\275e\203\207;\357\252c\274\370\225e\274\274w\005\275\214\261,\275\030E\324;\325c+=\345l\231<r\317\266\274\241\tK\275\212\277\205\272\274\351q\274k\207\035:\265$\n\275\326T\034\275]\275g;_\257N\275\026W\\;hW\325<\271\315\217<\371\034\266<\220\004\237\274\0323\223\270V\224\314<i\277%=Y\267 =\\\254^\275\373\021\335\274\004\025\306\273\026k\216<S\203\r\275\273tH=h\227\214\273e\242\272\274\t\213Z<U\366\217;\331\2207=NR\025=\363M\232\274\316\370\025<b0R\275f\023\321\274\340\003F=g\373\014;\357\3712=\005\260d\273\"W=\275L\223:\275=W\305\2749C\272<=T\007\275T+u;\217\221,<\247(I=\007\327\326\274a;9=\247-S\275\026h\024=\337\303\2019\323\257\010\275\t|8=\035R\024\275*\"\244<#\n <\267?-\275\204\343J=j\"\016\275t\010\277\274\330\206Q\275\021\025\272\274i\223\376\273\003\3229\275\206@f\273)\251\034\275\346\201\025=\220\007\217\274\345\312n\272\340\271\026\275oXG\275\326\017A\274\266\254\025\275\351=Z\275\014\203A=\271\240\365\274\300FE;\23761\275s\206?=}P\252<\313$\030\273\322\002\210\274\335\017\234<J\205A\274\275(\330\273is2\275g\032<=\230\303\'\275fG\033\275\363\263\242\274}\336\016\275Z\023\t\2745t\344<\232+\350<|o\343<z\345%=\303\213}\273\243P\337<\254\214B<\252\364Z\275\001\212{\274F\212_=\2259\207;\026\005\017\275\225\200\025=\211\372#\275\310m\233\273\014\006\362<\210\006Z\272\264R\335\274\005{]=\300w\334\274\032H%=.\372\240\274\234\207\025\275\n\320\027\273\203\255\231;~\340\t\275\232M\263\274<\366G\275H\236\006=\241>\023<\315\344\021\275\217\215I=T]\240<\235\006t;\257\"\023=\206f\300<p\310\332\274[\202\233<\013A+\275\004\034V=\025^\243\274\271V4\275\303TF=5\234\342<\315P\254\274\340\341*\275\207\324\302<\206c\037\275\361\206\316\274\307K\221\274\244\3348=$\3648=Dg\316\274\257\240\367<\257K\322\274\023\352\312\274\213\0043=\324\244K9m\213\n\273\234w\334\274\313\305\030\274\31653=\221u\372\273\276\024\023<\242\024\376;M\246\327\271\006\323\267;\254C6\2756\251\300;7\277\354;\242gj<c\361(\275}A\351<(,\316<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\242\302K\275\365\331\\<\003\273H=\2758/=N(o;\303)\370\274\366zK=\364\226\335\274\254_\242<{tg<H\027?=_\026,=\275t\326\274:\000\032\275\3025\223\274\343\211\033=\030\361\316<<\367\267\274\260\3706=\341\353Q\275\242\250\177\274Tj\002=\233\311\251\273D>#=\220\'M=\226\244\226\274\001\257;=\372\002\303<\222\343/<\236t\2778g\267\033\275\341\2276<\000\247\026<\240\315S\274\202|\004\274\030U\203\273\364~\010<\236U$;\222\240i\2743\222U=4\0075\275r\377\226\274@;\025<\211<]=\364\232.<\332\307\013=\371\203\320<\277@W\275\334\235\243<\013\005\240;\371\212\324\274\023\0031\274\000D\021\275nc|\274\357\004\232:\315\204Q=\323u\225\274@P#<3\377\257;U\2210=\274\036\3669\316\215\255\274Y\324\n=\347\2744=\037\324\330\274\333\315\352<\'\377}\274[\253B=\334\027\017\275)\273\361\274L\243\021<L\216\327\274\342\273\257\274\274\306>=8bO=\354R@\275\304\0107\275\036\223Y\275\220Z\023\274F\266\275\274\"w\216<j.\031\275\242\340\212<\377\177J\275\021 \037\275\321PW\275~L\331\274\'x4\275V\350O\275\256\033\276<\023\351\214<\025\363;;l\273\005\274\336\241\t=\235\3659;\037T\357\274JaR\275\375kO=\230\230\340<\337W\362\274\375!/=4\247<=\241\357:=!\317\215\274\017X/\274\246\323W\275j\273\360\274\372\342\304<\374\202\371<J\300\002<\245\014A\275\2356\021\2753ml<\276\324\332;\347,E\275\010\351\225\274\216a.\275\327e\345\273\200\246\r\275H\222\257\274\256B\"=v\t\014\275\240\275\302\274\317I\302\271\3111\035\275\254\341Q\275)f_\275N\025\256\274\230\307\035=\241\235\371<\375\337\347\274\266\362\034=X\177\260\274\023#0<\220\336X\275I\036\016\273\210\364\361<\203|7=\3731\376;\260\2355\275v\031^<\232\360\214\274X\004\372\274\351\331\235\274\3629\374\274\327=4\275$K&\275\260\211:=\375\355\354\274\2571><R\030\r=\304\230\327<\352N\226:\242\363\200<#\360N\275\321\251\367\274w\347\330\2737\335$<CC\000\275@N\315<\033\007G\275]L\244\274*\373O\274z\032\031\275Q?\244\274\263\"\021\273B\242\216;\355b\347\274\330\253,=\224\357D\274d}/\275jJ\014\275\322\021\244:\027\315\022\275\273o\350<M\022\213\272$t\353\274\230\373P\275I\000\007< {\352\274\030\205\026=g\363\034\275<-A\275_\353\206\274\267\231\274<\277\246\006\275\265s?=\235\361l;q\217\201\274\302\267\016=G\260\307\274\016\335\312\274\030\220=\275\353c\037=\320\200J=\214L\332\274\235\335\377\274\2439@=\220\302\010;\311\272\321<5\370\277<\2140X\275\312P\357\273\212\006\305:\344\244\244<\261L\032\275%\260R\275DH\036=\365\250\321<\033\212)=~\001A\275\335\0139= 0C=0\315\203<\2532F=\337\205\t=\224g\330<\236\272z;\372\t\361\273K{E=\r-\331<#\214|\273m2\263<\303RY;\2072\004\275\340\234==\373\377\201<\024\300\030\275K(\271:Sd]=\270r\024\275\270\263\214\274\236\354:=%@\000\275\233b\035;\324\036\311\2747\344#\273\242\263\360\274`\363S\275\355u\036\275B\363|\274@\2344=\222\370*=.i?<n\246W\274\317\242\210<\226\351\347\274=u\006=j\364\366;D\351#\275)\311\217\274zG/=\271\263B=\222\253\224\274\227\337\336<\t\247\243;\341\306\206\274\237\005\321\274,g\304<\006\002K<6\376\370\272|\352\025=w\004\303<\000\370\000\275\341~\330;\350\326\031\274k\235\201\274|\3707<\242>T\275\343V9\275\030\215\005\275s\207E\275\250y\317\274\255\203\035;Y/\\\275\316\345\n<\252YI\274\320rW=\2349==\273M!=\265\005F\275\261\3064\275\367\253\004=Q\373\206;N\212\322\274\220@*=\037r>\275\003\202$=\002\200\355<j\326\241\273m\362\\=\nJ=\2751m\033=\312\276\203;`\r\374\273\207\211-<\276F\210<\244\022\017\275\211\034%;\022\207\007\275(\241\177<\365\324\034=,a\322<OZ\377\273\263S\004=\341V\007\275CH\253\274I\374,<0\352\"\275F\361\013\275\234\331\032\275\255\t\020\275}\314A\275\034\323\251\273\225j\306:\036_\034\274\375\245\202\274\237\0063=I\212\374<,8\204\274Q\344\010<\'|F<\372rr\273\035h3=\253\214g\274-\311V\275\215\327[\275\353R\014=\234\022\356\274\300p%=\330\234\331<UWL\275\242?s\274\215\300S\274\222\3379=\205\326[=\365\357\366\274\001~\257\273\334\252V=9\0224\275\025\222\301<\210\227==e\237\013=\260\020\261<\0357\342:\307\343O\274\r\t/\275\302\247(;j\370H\275\370\'\010=\302zE<\250A\034=n\0131\275!$X\275\036a=\275\212\262T;\311`%=\246\2334\275o\321 =\312\224X=/\315\014=U\037\030\274Oo\264\274\357G \275\240e>:mf\272\272~\003`=d}\272\274!\223c<,mD\273\205\346\374<3\342\211\274H\306B\275\346\376\010\275\363l\334;\203\207\271;\245\261\310\274\275m\010\273q}\002\275\035\222Y=\035S2=\250\035\003\275\315J]=\265\325\345\274\007\333\346\274l\nD\275\020\262C=\262\260P\273\313\224\366\274\273f\026\274\203\031@=\270\017\177\273S\306W\2753\365\035\275dJ;=&T\266\274\203\3639=\010\235\362<vi\221<R\230.=\257\335\n\274\363}\304\273\214Z\316\274\230<,=\326_\003\275\034\367\350\274\031\266\016\275\362\300\243<r*%=\372\377\014\275\276~C\275k\340\010\275\355\3134=\242T\t\275\275\025G=-FQ=r!\274<\332\305\0148A*T=q\3456\275\357\365\251;8\000\324\274\372g(=\307\261G<\347{\266\274\204\221G\275\257\202&\274\266\\\272\2741\r\n\274!\235\345<\314\344\032=\'\311Y=[\247\'\275\202 4=\007l\257<\272\207\227<N9\253\274%\213\335\272\272\002\021<\327l\272\273\006\021\020\275f#\253\273<\023\350\273\200\212\254<Po\357\274\376\233+\275l9\320<\177\021:\275\331\203\364\274?\341\003\275\237\3319\275\321\031M=#\2174=\026\300\017=\246\276\222;\3236\027\275\"C\202\274\021\307\230<\236\2057=\322\\2\274\377\267\330\274\215\'(=C?\033=)\205D=\302\004\002={5A=\311\344\026<w\333\367<\'\256\021\275\307\352\330\274\255h\004\275\020\340S=_lk<\225\236\336<f,<=\036\034#=\313\371C\275\353\270\321\274a\203*<\306};\275\032\264\260<\373\033\361;\014\336<=\262\323\032\275\r\332\035\275\331mL\275\367(\004=s\271\013\275<\213\031=l\020\360;\230\236H=~x4=\t\016\310\272P\3662\274\331U\347<\253g:\275n\216Q\275\233\375\033\275\317\317\324<1\210\\\274*\356\t=F\323*=h\001\344\274G\235!\275S\316*\274\035\376\254\274A\321T\274l{\340\271g\031\271\274\370}\"=.\177\246\274P\016\307<\037\343^\275\357\311\017=\306\022!\275IU\r=\275\376\264\274\013\024$\275\245J\307<!\t\036\275Q\030\215<\232\351\351<\004\242\362<O\231=\275\333\371\216\273\255\3423\275\365\255^=\301\231%\273@\351\203\273\016k9\274x\207\203<\237W\'=K\336H\275\300\226\212<\031\025-=\203\315\005=\207\"6=\031\337S\2754>]\275\032\356==+\177><\025\007\034=\274\373\207\272+\332\341\272\314)n\274\374y~:\367\216\022\275_\301\021\275\340\325\315\274v\311~<i]2\274\224l\013\275\236s\351\274\227\207$\275O\216\r\275PR\212<\203\260\332\2739\377\362<,M\262\271\036\234\337\274b\177A;\231\265\333\273\343\213\243<\357\004\'=n@\356\272\200\036\002\274z\301\017=e\264F\274=\335>\275b\244\236<\263R\003=R</:0\310\\\275\026^]=\346\251\223<\374x\337<o\226\226<\020\226G=B\357\032\275&\003]\272\300Z\302<\030\341\352\274\302\027?\275\253K\016<\317\010\n\275\227>\024\275\237Q\006=\216L\t\2750.}<\'\3149=@\306\200\274\253aq;\310\253\306\274\221\0135\273\014\276A\2754P\250\274\005_\256\273\246\3008\275\245>\200<h\320\n=a\306\016=n.Q=\252\3440=\r\256\"\275@\014\000\275\275X\n=4\355G\274-4\\=@[\017\275\320\365@=\337\021\230<(P\014<\021\254<\275\242\336\330<F,\357\273kq8=\\o\234\274\270\360Q=MQB=\002jE;\241\032\255\273E0c\272\322\236O<\3569\327\274t\242P\275\314u?\275\321\304\220\274\340CA\275\034\3372=\177\374\202\274\2011Q=\024\010)\275\263\211\274\274\302a\263<\255^O=\351\230\260\274\207V.=\223\323\266;+\355\373<\303&)=\rt3=\373\312Y<:\037\354<h\225\r\275\372\007\'\275\373\262c\274aOB\275\365c\023\275=\202g;\023R\345;9\271\336\274\302(\032\275\376\315^\274\037-$=\013\010\236\2741\344\212\273\206\320\t=\301\202<\275w\006&\275\3710\315<&\215\214<\306+;\275\010e\233\274\326\375\267\274\203\252Q=ig&=\264\330\232\274\367wI=\254P\023\275\037\245#\275\223\215\'\274?nD=0\214\226<;\270\260\273\200\305\001\275g\0142=\253\255\337\274\362py<t\027v\272\343\251W\275\366\250\013\275GW\265<r\370]\274\025,R=\354\3166\275H\252\'\275\2523\n\275\230z\205<)P\003;lA\321<+\004D\275&}0<\220N\344\274\317\000\325\274L\321-\272\371&Q\275\256D\277\273\360p&=\237?\010<F\361\320\274}q\341\274\205S\337<bi\365\274)J\003\275\335<N\275\331\243\033\275|\322\002=97<=\341\3453=\n\255\034=\247kA\272\353\306]<\237\374\210<D\247\226<\027Q\354<\261?\265<+q{;\036.W=sX(=A\360\224< \274)<\001\315D=\316\200\t=1\223V\274\225\027#=\027\205\276\274\037P\\\275\177\357\304<`<\203\273\347\225Z\275\264m\342<\324y\361<\223\377U=\227\222\005\275\345v\025\275\360QN<\331}\026=\243\222\024\275\302\350\235\274\244\202\024<\177U\030=\'(\240;&\214\000\273\375(O=\350T\322\273-\322\333<\272,E;\310@\333<\337\307\017<\357;\206\273\357\341U\275X?\027\275\353W\003=<FP\274$\2357\275z\201!:L\315\004\275\277\232\307<-a\032=\014o\201<\036\330%<\341n3:-\3112<\311\372[<\264\303\333\274!\r?<\006\025\342<\237(\031\275\004\305X<\205\226\305\274\031\344\266<0\336\337<\006lC=\313\241L\275#e\365;\316\205]\274E\257\235\274K\217\023=\335\267\265\274$\226\264<\233\006q<\235\260\027\274xrG\275\364\0220=\375_\355\274\241\323\234<\221?\313<<\001\357:#\230\022:\262\233F\275q\032\016=`JX=\330\277R:\014%R\274\013(\016\275h\304]\274\242\240\365\274B\3044\275\302mD\275\2302\354\274\020\004\204<\362\306[=\272\n?\274\323\3318;S\232\251<\\\304H=\013\367%\275\322\300;\275\313$\004=\177su\274\210A\010\274l\372\354\274hvR\273\365t\021\274j;F=\210\327\211\273\347\323\202;\273\323\r=\310S5\275\220\311\250<,G@=\257\016\2749\027\234s\274mm\016=\224\312*<\031\025\331\273\230\231,<q:\261<%\326\r\275\276\020B=\205\315\247\274P\354\321\2740\272*=\327\250\216;\327\244\030\275i\363O=\217\250\315\273U]\370\274\327\022K<\357\311\222\273\037\211\261\274\233\314\'=\022XV=\254\324s\273\243g\230<5%\r\275?\3065<\354\2722=\354\2118\275\320\3057\275\315\037\356\274\005\004`\275\234\370S\274R\236Y=JXY=\313bH\275\212\2643<\334\265\264:\016\225 <\301\235\257\274\311\254\032=\234k[\275r;\245\274\274\303\260<A\371C\274\3379\005\275@\241\345\274+\350\330\274\374\320\r=\352Y5=\354+T=K =\2741X\206\274\372\241G\275_\262_\275Y\363\027\275\0053\t\274e4\223;Y\267\024\274\312\266/\275\377\337\365<DY\203\274\234FQ\274\352\340\347\274\330\373I;0\355\007\273c\331\340<\365\033\274;/\226\026=\257\2646<\023yf:%s\027<\335\307\334\274\005*\314\274\220\026\316<`\246\376<\272\031\n\275\010\344\207\274\rDS;(\373z<\374\373\214\274B\235\223<7_\321\273\266\273\027\275\275^\273\273z(\020\275\342\305N\275\254\213+=\300\376\007\275\360},\273\350\241\\\275<2\252\273\313\211\203<\264f\372\274\253\0254\275\276\343w\273k7$\275\303NS\274\235\013\350<\231\023L=x\354l:\305\035D=oA\247\273D\2039\275=\332H\275\363\276q\272\374u\031=t\225\206<[\323\236<\020c\376\274Hv\236<\336(H\275V\252.\275\013\307Y\275\361\340;=\t\223\3709\374\215\036\275\014eJ=\\\242\336<mb,=\313?\216\274\034\233\217\274,\336\r=\0132\216<\222S\025\274t\013%=\330K\006=ki\r\275\337\254\002<;\200\335\274\226N\216;\351\200\267:\251a\264\274j\3020\275\226\317\365:\300\006\202<\216\031\t<\246L\034;|\376,;&@\374\274\250,\030\275\320\267!\275X\035Q=b\256\204<\222\314\274\274o\373\263\274\214_C=Xg4\275\355\232\254<#\353I=Y\024\306\274s\226\373;\237\224\252<\356w\030<\216o\273\274b0C=\030%\014=\246\256\313\274\035\231M\275\356\314\230<h\345\245<\177\3346\274\333\265Q<\336\304(<\020\334+<\313d\037\275\373\351\240<\266x\254\274\242\326\313\274\3308,\273\006\271 =\221\360\024\275\337\255\351\272\243X\010=\220\366\261<\344\317\236<d\312\355\274\254 \224\274\275*^=\312\333\347\273\032\035$=\037\220A\274\374L9=j\277\\=\340\256\030=?\317!\274\0048\327<\210m\203\273o\3254=4J=<\361A\226<\020\241\371;\342$Z\275\342\304\364<\214%\r=\314\207\211\274\215\340{<\3646\006\275\226\240\020\275\266\025\000\273`\270]\275=\200N\275\343tm<K\013\225\274\177oD\275;\'\016\275\215\371\303\273\247\370w\274g\010\366\274\215\227\230<\331\303\001\275HS\316\272+\333\301<\300\276\371;\236\312\r\275#\322B=W7 =\324\353\217\274Y\031/<\355\2674\275\362]-\2754\343#\275\354Hg<h\232\230\274\254$E\274\212\326t<\335\002O\274\303\303B\275\\\374\204\274f\274\302\27473\352\273\n\265\032;W^2\274\336\347\332\274\206eN=\342\235\345<Fc\301;\013\376\354;\203\241N\274\361\277^=FQ}<\224,]=!\267!<\301p\n=[i\321\274x\006\311\274\251\300\360<<\305j<\344\327A\273\006\207F\275\267\025\000<\230\3671\275\027\340\203\274\314\210U<\221V\203<\375\035\025=[\232\356\274w\031\230\274\343a\035=\20341\275\301\200\316\274|\377W=\201\277\003<\266\245\300\272\363\257\311\274n\364\001=\214aK<\351mX\275\262\036\t\275\201\000\216\274Aoa;A*\214<\377\202\037=\323\0160\275\220:Z=\rEW=\024c\343\2748\030\234\274\005\031\335\272\215\372\275\274\007C6=S9\010=[\370\316\274\360\006%=~\035\303\2714)\026=\210\230\336\274\320\276\303<\310T\356<\366\262,\274\337G@<$\262Z=\rN\241\274\254\030\020=\255\374\331\274\203 G\275\305|\033\275\372\363\374\274\233\223\200\271\207\320$\275\224\352?=4\264\013<\273$\036<\326\320\224\274\227<;\275\2639\341\274\331\350E\275u\037K\275k\010\036\2746\301\211\274\021\227\n=o\t\274\274\365V+\273\250\254~\274\370\002%=\033\010\016\275m\332\017=\305@.\275\032\227J=\327\3348=\033\270\r=9%9=h\345\332<\334\316\016\275-\214\211\272!\030\351;+\0221\275/u%;(E\336\274\223\363P\275\355\220\013;Z\317U\275\202\027\'\274p\206_\275\212^\252\2741@\034\275\227\211@<\227\271]\274\251\210\220<\305\244F=\263\223\0228A\354\007\272\213\014\312\274]\345F\275\0030O\275\3460\263;j\354\276\274\215\227\263<\010\021Z=\273T\374<b_;\274\322\354\265<\337=\225:\246\247W\275\272p(=\375$.\273\364\216(=61\272<2\311x\273x\020\004\273\333mY\275\'-\006=3\214&\275\247p\262\274\275\243S\275\206x7\275\033v\010=\033\206j<9\335\306\274D&-\274W\255:\274\201N\275<\374f\366<\267\303p<\207\333N\275Cd\317\274N\031\016\275\211\031\220<Z)\006\275o\215\247\273\333Ky\274\"a[\275\304\212\207\274&\013\233<\352g)\275\340f\245\274\337f\006\275K\323\r\275\022\324\263\2744G\327<\230\335\337\274\310\370;\275e\277\010\274\331Nm<\263\306\253<\372HL=\241\350$\275\037\235@=s\n3\275\023x\332<\250\252{<1\000V\275X\317K\275\201\244\275:\371\001C\274:@\300<\031xU=\271gE\274\306#\225\273/.Y\274\230\203K=\000\253\272<\331\013:\274T\3156\275B\035\313;,X\355\274N\241\000\275\243\2740\275\307\232\327<\316\272\002\273\007R\002\275\332l\332<\334\\\375<\251\004N=\035\205\206<M[\221;\265w\303\274v\305\363\274\223\007\222\274U\250\314\274\014!\352\274\244\022\036=\366NY\275\252\363\361\274\007\007I\275\333\177\024=\301\374\343<\372\2263=<\273\251\273(N,\275\016\261@\275\036\263\002\275\256\233#\2756\212U=Rp\022\275\000\217\231\272\356\273\037=}dH\275wdG\275\336D\n\275y}\023\275\267C\\\2757n\230<K\347\303<\252t\332<\263g\026\275E`E\275\324!\305<\330\'\314<\346A\022\275\352[\231:h(\357\273\035e\014<\366\304@=\216?\344<\035d\311\274aD\333\274c\016\275<\212\322\212<\320G_\274\365\376Y<NK\010\2757m\030\274\216G\344<\354\334\020=\353\366\361\274*5W\275\330\323\357\274\0201\274\274\0306\002=\334\234\261\274\352\263\354<\355\255w\273\342}9\275z\376\374<`\346\357\273\245\021I<\005\350\345;7[V\275\307\003\356<j\335\367\274\272\342%\275\035\177\212;\344\327\";\003\221W\275\234P\342\2741\306\257\274\326\347?=\275\303\030=\023!\310\2746/|\274w\004\300\274\327\n\316\272\025\224\322\274\332m1\275\353\377\375;\277\001\n=\307\2017\273vK\"=e\2548\275\212\026\255\272\315c\204\274\374\371\252\273h$\277\273\273\341\t=\275?\255\274\370cp:5\240 \275\237l\363<\314}\004\275\300)\322<g\243\227<\206\260T\275`)\010=\037\322\005\275?\233\302<q\377\357\274\014\335Z\275\312q^\275nf\025=\234 \367<\002$\275\274\377N%\2755\231\267\274Ml\363< \254&\275o\0221=\300\2051\275\311(\303\273\312\021%\275H\224\356<4\030h<Ku1\275Bio<\033\354\203<\350\003\200<\345w\207;\014K\233\274\265\0338=?f\r\274\241\025\373\274p`\320\273\370\0338=\3640w<\351w<=\314\200[=V\322/\2751\300\364;\374\261l<\245\332%\273\247\364\"\274\004t\240;<f;\275z\224*=\302\237P\274\211\311\254\274T\205\001<\227\331\2469Z8\037\275o0\266<0)\351\273d\273\247\274\210\035\271\274k!Y=\221\307\'8G\330\034=\360\020\222;\346\257}<\035\347\027=k\217\324<\3168\023=2p\271<\356[M=;\311\024=K\216\034\275\031\345)\273$\na<\347QP\274\243m[\275\367\323\"\274\206\001\332<Ir\305\273\360\251\302\274\303\0174\275{\001\346\274\307\350\006\275\201\217\245\274\254\304\016\275\210\014 \274i$_\2751rI=\361[K=\375\2665;\3142E=n\355\244< ;\223<\322l\374\2749\312\263;\014\300\207\274\376.=\273\023\005\233<\331L;\275\373\2348\274\34472=\324\372\006=4\324\256\273\357X:\275\366!\371<\241\016!<\352\035\325<q\350\312<\253\202\301<\306\253M\275\363\024\003\275cyP\274\247\2635=D\276]=Q\247<\275\323w\266\274M\201\301<\371\241\345<\333\025\300\2749\303\000\275v\230\245\272\213d\362:p\267><i<X\273\336\033J\275\222*\022<\225\3744:a\231Z\275\022}\021=\\-)=H\306\025\275\222\'\347\274\036\2471\275\257pS\275n\335\270\273\036\223\023<YAI<vE\223\273\024T\364\274\r\210D\274\032\341\024\275\362\034%\275\301xU\275\"\014O\275\016\026\222<\014\325\344\274D\261\204\274\030W?\275\274\220l\274e\253\205<\374S\037<\303\010X=G\315(\275\361\224\034=\227\247\362\274r\226 =Q\371_\275\257\374.\274\373\332\323<\177\221m< @\034\273\256\2005=\025\322\317<\035\336\024<\2351]:\255\243\360\273C\037\363<\311\0103\275\330\250\276;\326\365\342\274\231\360\324\274\210\r4\275\321\017L=\266\330T\275v:\023\275\233\335S=\253\226\014=F\r`\275\022\226\306\274S8\027\275\030;\031\275\327j\272;\034\000\313<\373\336\020\275\344\014\n=\362\212\330\274\n\203\021\275g\223\t\275A\375\203<\346\005\364<k\246Q=\204\001T\275\315\246L\275\316@\304\274\214\254T\275\004A\000\274u=|\274I ,=6\306:\275\020jk\274\214\251\036\275{\212\370<z\022\033=\331\224\017=\311\222\022\274W\315]\275`\003\005={#\205\274t\274T=\244?*\273\362dm\272\313\334/=\371\030O=X\215\r=~\234<=a\353B\275\270T;=\252\264\337;C\267\330;\246\200\326\274M.\027\275IA6==(*\275z\276\365<y\223(;\226\376\341;\035\326\032=\355\363\016<\002\234O=\016\202,=\322\330S\275\345\374V<\324\2051=N\350\206<\244\311*\275/V\002=\351\2011\2745\375\357;\375^R\274\266\234R=\232\217\027\274/\035&=P\n\204\274_L\254\274F\324\006\275g\266\270\274\020>\'=\033f\316\274\3146\361<\240\366\270\274\242(\212\274D(8\275\036:\177:\241\375\010=\356:\370\274\353\205\302\274\324!$=|\304\020=\253o\225\274\355\002\021=\035\326R\275\364\224\016\275\235V\224\274\022\312.=\251G\325<\020\202H\275\366\005f\274\020\260G\275-\302\247<2\027I\275Jf\025=\246U\006\275[z;=\232\367\027\275\023\326S=5\352\275<.8\021\275Mx\322\272\344\020A\275\354\"\217\274/\211\007;6\213R=\313nZ<\201j\313\272C\355I\275I~\003=m\371\037=\272\276\005=\211~\374<\213\375\253\274l@\354<\247\237%\275}\034\304<:|Z\275c\230\351<E\372==\326\310\324<\"\265&=\357E\337\273eL)=\327\265\301<,GW=Wv\354\274\257Q\001\274\205\005K\275\\v\023\274\227K9\275\317\233F=v\305]=\026\255\216\274\035\260\302\274\346\245\\\273\026\247\230\2741R\025=\362~\227\273Q\330W\275I\321\017\274m\225\255<5\372\300<\2040\234<\314 \300\274u\001\353<\017\032\305<\343\326\322\274\030pX= \350L\273\3411\000\275J\253D<\366\036K\275\026\343\232<k\335\320<\003\037T\275\347d?\274\247\347\222<t2c<\t\204?\275\270\330B<\231\315C\274\244\021\355<C\305\004\275\ns\316<\014\311\"\273_\317\006=\2229==y\256J==\016\007\2758\366\210\274\356j\371\274q\032\244<\225\026\'\275\342\310\255\274\201\313\032\275\313/L=r\222`\273\320\373\014=\t\326\033=?t\315\274o=\222\274,~1=\003`q<\355\376\246\2742\"O=\206\0101=o\366\020=k\320\215\274}\2653=\361\021~\273b\373W=#\3225\275\320\252\220<\252Hz<\326U!\275}\225\024=\222\221\204<|5j\274\252\267\017:\016\025\r\274\367\231\313<\213~H\275\276\361;\275\262M\000=O\t\274\2747g1<\274\002B=f\306==\355Z\020\2744\343?;\313Fd<\025B<=\000\377\325\274\010k\230<)\322\031\275\017Vv<@W\201\274h\370U\275\332r%\275]\036}\274KB[=\217\272\366\2747\242\243\273\035\266-=\244p\264\274\223a/\275\272\307\367<h\0379=\224F\365\2746\252C=\252\337\246\274m2\271\274c\263X\275n\022\330<\353?\275\274\032\263j\274\333\365X\275\311V\311\274wi-\275\343\021:<\005\224V=#$(<\352\224\031\2744f\251<+\332\036=\026\302\302\274@~0\275{\257r< \336\264\274\201\360\033=NTR=\031U\245\274\220N\034\273\213j\242\273\341\212\246\274\026\366\243<C\3551\275\3658\235<\027\235X=\002\367\032=9\362\257<\0070\322\274~\025C\274H\231\235<\005\2411\274\'_\321\274tJ^=\217b\006\274\022Y\370;|\253H\2753H\024\275\240\226\005=\353\214\373<\016\345%\274L\334H=\306\360d\272\240\303?=\374h@<\364\243\270<\250\023\260<\361\'N\275\251\255\313\273#\345.=y*8\275\010\350\014=\356\010\005<\035\252A;$(0=pi\260<\201\323-=\227\331\014=\337\000\361\274\204\273,=\004\033\002\275\265\375\n\275\321i\330;2\371\261<\277E8\275\0366\t\273G\226\252<\010\235\276<\323\223\300\274\355\224o\273\\(\342\274\347%\207\274\013x|\274\\4\375\274&\200&={w\030\275\363\320X\275\034\320\373<\025\254O\275oL\355;\314\207\237\274\000+e<\r\311*\275\035E)=\227\000\372<>,k<!\036U\275\221\351w<\236(\347:\341\342s<0\322I=\361\201\035\275\003\330\t=\310Q\216<\237\014\215<\244\262\021<\316\202\014\275\206 \306<\210\0055<\2001\331\274\354\362\024\275\205\312T;r\210)\274\300\022\367\272\021!\013\275,\303A\275\260\211\025\275\030\014W\275\203\327\005\274\270\331\274<{\240\271\274x%\237\274\245v\370;\323h\337<1\3613=_\340)<\335\332P\275\034U\005\275l4L\275G\374\373<\350B\300\274hu\\<\t\325\223< z\340<\261\326\253\274\312i\001=E\362\005=\024@\001=\217T\200\274L\273\370\274\240A\":\320\005\250<XB\366\274\316]N\275\332\251I<\205\254N\274C\252\250<_z\035\275\370b\021=\304]+\275\220\303\274\274\260\370\026\275\372\027\250\274T\037\346\272\306U\240\274q\023\305\274\256\2766\2750\325\032\275\016\334\370:\236|\353\274\264N\264<\314~\200;\255\351\212\274\301\240_<z\324\013<x\034\255\274_d\326\274\357\020\2439\344\3519=g\200A=\3133\253\273?\024\213<\276\231\003=\303\365\n\275\251\350C=\237\014\250<mN4\275\036\022 <\310\312\360<\324v\240<\276\360%\275\350s\365<\036\315\025\275\313\324\251<t\220\311\274\334\255\337\274\001\351>\275\212\204\347\273\177{\270\274G\000\363\271\342C\001\275w\303/\275\002\375\221\272\302\007\027\275\004\243/=(f\363\274\315\221I=z\223\034\274*\303\205<\240\'e\274_\304\262\274[d\000=\246#\300:w\365\022=:ij\2748I\026<\033\221\025=\236D\324\274\2251\361<\220\t\241\274U\217Q\274\356\363:=\206[\313\274\330\371\320;\323e\306<z\004\030=Q\221\247\274\216\315\264\274$\365K\275\303(\025\275;&$\273\365\002i\274\026\013\037\274\027\231?\275\212@\027=}?_=b\312\201;\342\365,\273GE\034\275\232\005\374\274\200\031\233<\234\2720:\341\3402=\033\002^\274\274\310\025\274V\257\025=r\0339=\244hU\274\3633N=r\277@=`\253\375\274\273\212\014\275Z\223:=c\316\204\273\374\2674\275\234s\347;\202%\301:\375\3000\275\356\037\305\274R/X=\305\206Y\275F\263\'\275q\364\222<\321}\'<S\tF=`N)=*\243Y\275\376N\025\2751EH=v\237\217<\372v\202<\340\024\025=@\223\024:\230\026Y=\233\021$<`\033\344<Y\213 =\232Y\017\275\003\035\333\273e)\260\274\355\366\002\275 -\251\274C\032\333\273\035\357G=\330\256-=\274\024\324;PC\214<\036\245#=\227\207Y\275k/L\275\227q\002\275u.\021=k\340\257<y\352%\275\007\214\002=t\357K=\264\317\030\275#t2<\212\342\340<\3771\004=\224\267\030\274\206m[\275|\311\022<\002tY=N+\341\274\224\251q<\273\206_\274\303\344\251<bQ\321<\224\343H<\016WQ\275s\271\346\273\342\325\240;\001\240\r\274>\224\007\275[\202\267<@\205\273\272\263\256Y\275y\237\034=\264mO<g\342\"\274\310\242,={\206\265<\345\277A=\023\353I=\246\211\"=\001q2=x\231\261;>\344N\274\340\200%=\007\242\342\274g\351\241\274Yau<j\305\007\275\341\304\027\275\264\314\211<X3\346<\322\341\n\275\211\013\255<Ak\336<\014\370\200\273\200\276.\275 6\202\2740\327j\274\367\032N\274t\204C\275\177q\033\273\300.y\273\370a\020\274\364\026y\274I\374,\275t\346\200\274\030\371\354<\200\351\\<\025?\237\274\254H\007=\255\221\034\275~\1775=}\006\030\267\034t\256<\001\263(=\213\004q<\225D0=\276\\5\275Fg\331\2748\234\357\273\264{\356<\335\251`\274\024J\347<\324.\014=\020\345%\275z\007J\275f\025\330<\347\025\036\275\350\203\274\274\256Q\317<4HR\275\242\243\036<\371\204\220<c%\003\275\304\324\230;\373sB=l\366\254<\362\236\351:\230\304P=\316c\"<\225)V=\027\226\363:\t\327B\275\371\253#=M\327\017\275\2520V=\007 \316<\007\255C=\212\330\345\274\325\335\270\273\236\356\232\273\334\017T\274\305y?=dp\373\274\t\337 \275\002`\252\273Q\310R=\345\231\272\274\341\272\321\274}a!;\260\230\271\274\323\270\r=&\222-\275G\334\320\274\217\'\004\275\304\336\366\274yN\336:\277:L=/\257\371;bS\371<\327\003S=,\244\022\275h\3105=_\014\356<v\206\247\273\2464D=\275\n\366:\311\260)\275\367\014\010\275\222\"\347<v\013s<]\035\331<T\276\342\274.\214\305<\002\026\026\275\332y2=\003\234\215\274\267\001\320\273f\006<=3\366\233\274\343\372\t=&}@\275\264]H\275\017\tL=~z\027\275\326\332=;\365?\r\275`\275~<K`Y\275\274\2444\275\276\\\212\274\261l[<\204IK\274\361\n\033\275\027E6<\265\333\253\274\".\273\274\020\010\274\274f7/\275\227\2641=h\032\004=\312\337&=!c<=ATj<\343\3036=\241jM=\242-\251<\3173\261<\265\242\002<Wb&=\245\220\353\274\256X\362:O\217\323<\217\227i\274\352l\213\273\247\246\"=\327\337X\274\005d(<\034l\232<\260e\361\274\326\202\t<\232\321\\=\262\323B\274\246\342\021\275\224_1\275d\226V=\237~\014\274S\033S<\301\373==eMy\274*F\376<X\217\210<M\223[\275\027\346N\275_$\r\274[\313\032\275\014@W=\347:\326<\013\350\"=\243\241\013=.\221S\275\031\036\003=p_\215;\026\335\031=\310\200T\274\333/\003<\244\3673=\322\r\335\274\330\275\310\273\302\245?\275\351\253\227<d\372+;JU:=\231\214\301<Q\203A\275\303\204\002\275\240\252\364;\300\341\213\274\2625\001\275^C\203\273\336\347x<\"\223D\274[=\027\275\254\301\212;\353\177\250<(\374\221\273vM\r=\213&\351\273A\325\027\275>Q\025=>\032\340\274^-\306\274$\351F<N\014\272\274G+\334\274\201\304}\274\246\211_\274\352\213\275<d\335\353\273}\017\363<\022y6=l\223\325<\023\321\"\275\345\007h<\236\314\021=\210\313\372;1{\005\275\020\227+=\302\203\036=W.\276<\010T9=\321kR=\263\207\207<C\004\345<\256$\231<\330jC=\\7\027\275\357\206E<\341\207\032<P3\210\274\365\321H<&\237~\273\325\223\322<a1T\275\n~_\275\327\206\'\274M\261\230<\221\225\276<\267\360J<\347>\270<\002S>=N3\364<\020\337d<\262J?=\033\035\026;\002]b<g\026&=*\325\307\273\322\243\024\275\324\304\316;\224\265\327<\251\030\032\275H\236Y=)D\373<jz\r\275;\030\002\275\"G\373<\344\306:=\236 \367<\377|\234\274\252\021\330\274b`\333\274)m\325<\255fX=\037L\273\274\037r\010=\261\325\023\275Ev\271</)1\275\356{\221<m$W\275\310\0224\274\276\315\363\274C\374)\273\013\376\312<:\363\274<\034\005C\275D\230\360\274U\023\005\275\276\215\016;\214\006Y\275\203\306\237\274X0Q\275\230)\213\273\234\0137\274\020P!=g\032\205\274\257v\275<\220Y\000=\337\274<\275,R8\275-\n\274\273\nwC=\237\273S<\205\370\331\272}zI<K92\275f\336\236<\370]b\273\177\001H\2743#\337\274\236#\310\274\200\267\027\275O\361P=\376E\254;~^\344\271@)\367<=\244\002=E\255B=^\217,\275I\nT;pV\036=\211\230\240\274\0213\030=\033P$=\345\303\'<(!\326<\263\002\215\273\277j5\275\n\207,\274\334\323\231<\027v\231\273\031\222\230\2749P\314:\302\035\311\274\t!\253;\005f\221<8\365\344<i\271\271\274\214k^\273\022o\210\274\025\221)\272pY\207<n#\'\275\022a\201\274@`e\274\340\005(\275\200\257\361\274\312\272>=/ *\274\256\217\333\274\317HM\275i\213\022=\350\265\003=\231\220\013\275\206\250\277<\274t\262\274\006\245\004\275V\215\017\275,\362\276\273\226\377C\275\201\3375\274\025\013S=\216\177\253<\030\323\223<\3176\302<\037u\204\274E\255\001\275\304\366B\275\\\264+<\202\245\275\274Q\325\365\274$3\014\273\236\367U\274\347\020F\274\221s\315;\2064I=\013\023\360\273\222\300\226:\n\254\031;T}/<$U\222<\0315<\274\267\004\032=\247d[\275\250\036\031\274H0E\275E\016P:@\016F=\267<\362<\306\002X\275|6\275\274\275?0=\016\3216=Y\234G=\026\201\266<,\030*\275\036y\025=\367\021\301;)\370f<k-\213<7\306\365\272a\254\017<\031\004<=\270\"J=6u\240\272/.\340\274.\262k\274\tm\360<\307V\256<E`\200<\306\326\235<\203K\251;\215\ra\274\366.J=\252\242\231<|\326J\275\327+7\275\202\320\230\274\303Y#\275\334#\026=\t\265\262<\231g\257\274\036~\n=9\027\222\274\240\270\263\274j\320I\275k\264\261\274?\354\350<K\323\037\274.\034`\275\266\005L\275\300\000\037<\353\005`=\236`\271\274\200PU=\310\035G\274\3621J\272F+\211<\27785=\032^\254\273RoJ\275\245)\005\275\2318\342<\006\257;;%\272 <\316\201O\275\244\264\245\274\334\272\006=\026\351\021\273\345\002\235\274P\234\340\273}\217\263\274d\036\226<\026\226\253\2748a\336\274A=@\272\347\002]\275\207^I\275\007\235\221\274\003\014/<\210-\353\274\363\022\024=\207\245\247<\021\177\343\274z\364\030\275\317_\305\274\241\247u\274y\\\324<\262\006\201\274\006\177\002<\347+\3609\265F5\275\025R\214\274U\235\212:`\370;\275\013\020\360;\341m\020=\357\274\206<Z\r\242\273[\220<:9I\270\274+\315U<\202\036\337\264\222\364\255:\306\200^\274\222p6\275$U\240<\025\355\241\274\323-\263;T\002\315<\213\207\005\275\223J\020\275\274]\035=D\356\004\275\221P\034\274\000@A\275\032[\244<\314~\017\275\371\222\367<:F7=\024\013N\274\221v\300<%\305\312;\"\177L=\004y+=\217\006\n\275%\263}<\221\2568=\221\232\367;n\260\256<w\257\255<\017B.\275\317kU\274\330\252L=\352\256\035<\356f\312<\354\t8\275\337\233\261<\335\321\366\274[\230\275\271,9D<nG\021=\352\343\277<\360\222\311\273l\343;=\312\333U=W\'I\275\326\204|\274\033=<=\345\352\326\273T\254(\275\301m\344\2740\326\270;\244Z\033\275\376\001\206;?\226\333<\363.\026\274\215\302\330<Xi\315<N\234Q<\365o\320<Y\305\264<\205\366\251\273\032\204%\275Jt\r\275E\2437\275G\014\216\274A7\025\275[1\t\274Z\312X\275\177(\366;\371U8\273\005\226\236\273`\313\374<R\301\035;\274\235\202<\272\205\251;\347\300\005\274p\222\204<4r\266\274Q\340*\275\313\275j<4t\023\275\035E\0079\244\335\'\275mS!<W9\303:9\345*;\035\327\230\274\245\032\004\275\255\254\036=b\311\351\274\177\362Y\273\247\310{<\2723\225\274\275\3434=\326\256\316;\352%0=\274XS\274&-3=\227B/\273\262\3458\274\341\350\213<\231\'\243\274\036\031\037=\313\035)\274\031,\024=\227S\335<V\205\231\274\372\256)=\250\316&\274\212\227;<\211\314\320<ecJ\274\004D\256<\007\260,=\013:\275;\336\000\033=\0324\n<\247\275=<\212\n\311<\266O\033\274\205\220P\274;0\300\274\177\363L<0m\272\273\371\340!=]\375|\274\356\326\364\274 \251\005=\306<\356<B[C=L\230\010<\316\2767<$\3446\275\006r\036=\236[@=\245\322\211\274\3718_=\234;\250<e\264>\275\314-\004\275T\020+\275\n\037\277<\345\204\227<\225\213\346\273\271q\303\274\3568\016\275\221\302]<\345NQ=\205\302\n\275W\274\325<\334\010\272\274A\356\n=\201\\\225<\300u\346<L [\274\266]\025=n\262]\274\'\033m\274U\251\034\275\337m\020<\340\230,=\304?E\274\013\325\014=\243Z\233;W\206\231<\362\314\261\274qx<<\r5B\274\014\\\017\275\314\007\306\274g\260\310\274\022\254S;\021*\037=Y\220\274\274$\256\030<\353\314\304\272%J=\274\nD+<\234(\350\274Z_\326<\367\323\034= m\211;\004\336J;\023\214k<R\3445=\304\301e<l\346\322\274\316> \275\310\213A\274\217\215\004=\\;]\274\255\004\037=\241\272\022=X\036\003\274`}\'=\224+6;X\370\002\275\240|\201<\360W\243;\032=\007<\036\302N<\370\201\212\274\325\242\273\274\213y=<\307\270\335<\234\265\216\274f\020H;\312\022J=\376\277\020=T\361\026\2752\340\321<\254\036\200<\254\351\213<\225F\007<E\270\235\273\377\t\r<\004e$=\350\\]=\366\3626\275\220\346D\275\243\242\206\2748X\204;H-\\=\020\212\025\274\236G<\273&\025\322\274?\2730=:>\300\2731\0073\275pf\201<\' \013\275\2634\027\275X\257\n\275%m\035\274n*D=\277\303\026<\347\336d<\374\013\332\274\231\373\000=\377Iy<,\021\034\275\010\303@=\272\350\211;\'\365P=\007\027D\275=\264\214\271}S]\275\0326S\273B\365N<\244\322>=\240\247\302\273QS\025=N\257^\275\224x\323<\336a^<eN.=v\022\345\274\232%\337\273\033Y\020\275\354\331\273<\210EQ\274\353E\t\273p\204\177<(>,<n\031\250\274.\313\372:_\270\025\274\007\3265=.\264\013=?=Q\275\357\313\005\275\301\016\255\274\255}M\275\204\235\342:f\246\254;\311\234\373\274\341\233\022=\301[\242<R\001\356\271\007\344\356\274sv2\275\244\266\014\275[\211O\275\225\304\256\274\007Y\323<R\022\230\273\3476\334;\230\035/\275\030\327B\275E^Z\275{\031@=^\374:<\321\367\244<\'6\326<\3744\242\274\370\201\343\274jW\006<\205\216S<\n\363\301\273\257/\200\274\003NL=\233\260\257\273R\217\325:\336\231\017\275\272\204\230\274\334WT</q\327\274\"\202\007\274\271)Y=R\354\022=\335.\336<\256\344?\275\026\332\010=\250\221R=\221\257(=0\261\252\2744\274U\274\341\260\240</O/=\004\030\251<\213!\371<E3\022\275\201\205K=\337`!=\345G\020\275\000\204B\275\260P6\275\300\333^\2757\355{\274\004E\257\274\242\010\316<\247\217V<\267\374\32594\317;=\232J9\274\375\263[\275\371H\t\274-\001\002=\302\267)=\317\030\036=\240\257\352<\242\260\001=\233k\000\275\341\004*\274A\246\217<d\324\002=T\365\366\274\016\200\225:\233.\010<\255\341T<\331\356\026\275\342Z\334;\246\274S\275;J\347<+h7\273\t#\004\275\337\233\003=\311N%\275t\301a<\021J\237\274Z\270\272\274\3615\035<\020\367\205<)\034U;\251\253\254\274\r\312A=O\226\353;\363\006\r=\326\202\034=j\332I=\271\207\342<\310N\330\271>it<:\226\031=0%\003\275D\326\n=\257\027\003\275F\202#=\027W\241<fdW=\216\016$\275\361^\215\274\320\325\320\274\215\tM=F\223\024=\260\221\317:\335\307e\274j)\205\274\226\267\311\273,~\024\274\001\004\016\275\304\376@=8\337\225<\013\353\003=\216\0003;-m\316<\004\217\000\274\341\243\343;\253\003\004=\361\217&\275~\315\331<\351|\366\273\257\270\013\275\360L7\275\010\333\344\274\356\006\220\273a\226\033\275i\2306=r-\326<\026~<=qnL\274\221r\217<\361\007%=\321\300\251\274)\030\024=[\004\033=0\320E=\326\220\"\274#B\323<\240*)\275\336\205\230<W\305i\273\345Q\315<<\2720\275gp\003=\0253\357<\341\211\374\274\247\320\213\273\206\336==j\335B=\233\020=;\014\336\374\274\213\337\306<*\'L<\240!8\275\017\312$\275[\336\244;\320CH<\034^\022\275c!\322<\3007U=\352\031`<V\345Z\275_\235\273\273\202\006\266;\265\277\266:\336~<<\203\337K\275$\223I\2730\330\324\274\r\230\243\273\356}>\275\346fr<F=T<X#\354<\230z\331<2x<\275y\325-=\245\216\006\275G\206\302<5\356\004<I\312Z=\215\347\227\273\n\024\n=R\033\236;\377\2463=\201\023[=\275\214\354<\256\2000\274\022\211\306;\232R8\274\200\257\016\275\360\3069=\273\243\364<\006\361B\275\361\020G;\212\315\341\274\367S\330<>\305J\275)y\276<e\027\r\275G\334\331\274\347\2475<\365\355\376;\232u\001\275\"\010-\275|\277\'\275\222~\357<@\n\005<\216\315W\275\224\364=\275\362\346\321\273x\346\271\273\017\004B\274M\2059\275\322\355\035\274\207\'L=d\327(<\325 !\2757K\020\275Z\277\027\275\177]\255;\324\002\235\274$\376\033\275\356}\346\274q\3060\275S\267\300;`L\276<\022:x<\275&\330<U\223\301\274\335\222\027\275\350wX\275\352\005\323\274\334\035-\275KY\357<R\017S=\277\256\033\275\357\314\340\273V\240s\274c\016\037<\371\320?\275\3008\014\274\305\276\010\273E\366\247;y\2457\275\"\331$=\202(\320\274I\307&\274\001\006D\275_\r\020=\236\372\336\274\276m\010=\353\311);OV>\275XF\375<\314\230\233\273P\220\374<\201#x\274\356\204\253\273-k\032=e\225\223:\340\233=\275XTA\274\001o\'\274\004.-\275\253\275_=X\010K< \323W=WL.\275\r\202];e\231\304<v\220\251<\344:V\274d\177&\275\027\016\334\274AWF\275O\211*\274\350\363\300\274\347\253\000\275 5\364\274C\345@=\206\363\264<\006\026G=\264tU\274\330hA=\016\264\203:\026\333=<\257%^\275\n\355\225<|\312\206\274|\346\025\273I\227\350\274\305\265{\274\034\307\020\275`\211,=-K{<m\371\370\273\376\366%\275u\265O\275\rm\025=\217\004I\275\'\010l:\274\341\305<6P\034\274.)\020=\035Q@\275(\202\336\273\342|\252\273\207K%\275\277H\202<:\316[\275I\306L=s\331\264<-*\006=\003@x<\235\312J\275j\250X=\354+5=\301{0\275\214\270S\275\241\313\270<\353`T=i\017X=KH\311\274\204\344\023\274\315\312\032\275\254k\214\272\211o\330\274\340m=\275\261\336=\275R\211\036=q\271<=\025C\273\2733\374\354<\035\353$=\334\224\274\274\177\247Z\275\2657\256<=\002I\275=\330\244\274\236\342k<FrS\274Fg\313<xpP\275\364\027\260<\036\301\021=Hx$\275g\265\326\274\215[\260<\271T\336\273\302\261\003=k\332\032\275\321e\245\274\276\234_\275\371\253[=\315l\007<\267\305I\274\010k\240<y\214-\275+|5=\266\203\363<\306\364\037\275\362\326\226;\307\002\251<\240\266U=\001\357\010\2756dt<\251\037\357\273F\222\034\274dD\307\274\303\3112<p\213\004\275\"\312\356<\302\205\203;\034k5\275\225\235G=n\202\371<\227>\\=\217\227m<\000\357A<\330\005\004\275\010\007:=%g\034=f\270\004\275@\001\262\273\036;_=_\353\\\275o\371\217<\3545\024<\2025\014<O\026\345<.\336\300\274\313z\336<\037\314\267<\252\306\316<\247\271\375<\305K\246\274\367\031D\275\220\037\035=\031\255\207<\214 l\274\340\263\374\274t>\024=|\036F<)\324\276<I\304D=.`#\275\251\3405\273mP\026=\3323\225\274@\3768=\267\002-<\202QL=\031$\365\272t\020?\275\3169T\275BX\231\273\261[\375<\221\232\005=K\327\250\274\376<u<\027\2040=\217\362\025\275\314\017\335<(%\027\275\017\364\330;m<1<t6\361<\304\247U<|\232\006\275\215C\226<\267\311;=\244\251\262<\254@y;\034\367\311<\215\365N=&\2715=\305\\%\274\302O\"\275u6W=<:U\275\210d\035\275\314F}\274#\317\346\274;\017\000\275\375\333\306\274\275\364\037\275\203\034\206\274\273\017\r=\t@\006=#7\365<]\233p<\317\346\366\2743\3071=3\3334\274B\0041=\025\236+\275\036\213\210\274\230\263\262\273\266yH=\005\017\3119\017`\304\274\000\210\362\274\244\313\344<\232GP<\254\351\014=P\263\341\274t\004\353\274\217\344\016=\017^*<\216\341~<{l\017=sM\024=\367\346.\275\201\204\035\275\307\031\255\274A\342n\274\016/&=\357\3114\275\201NO:\372\305\247\273\316-\2369\023\303\361\273\256\325\340\274\302\345\t=\250\245Q=\023dI=\253\251\277\274\331\255F\275\231f\313;\264\303\005\275]E\240\274;$\200\271Y\317L<\365/x\274\022\272\370\274t\312\341\274\274\343\362<T\247\004=[\r\351\274!\327\237<\230\362K<\341s\305<\237\231H==\363E\274f\027\020=\352\323d\274\200\006\227;\315\244!\275Rm\302\274\365\024\034=\310<\005\275\2216\177\274`\227\023=\340\3466\2757\253n<\206\336\375\273\\+\216<h\222\001\275 &8<m\032\002<M\325J\275\231p\270\274Ff\030=Z\274K\275\027\321\334<\365\253)\275T\212\270<\362Y};X\024Y=\022\010\027\275\001\235\360\274\210\303\234\274\2539\303<P\010\030<\037\213H\275\reI\274\2751m<Ffa<-\223\006\274+U\262<\025\301I=|\241\244\274t\3009=Xv\275<\221\017\033:\344{\341\274\032\206b;\027\331\275<\364\303\206;p\242\037\274_\237\333<9cH<\337\221\305<>\264?\275_\321u<by\r\275\006S\324\273s\317\021\274o\2313<\201-\301<\340\330\321<>\366\241\273!U\336:D\223\340<4\223J\275N\013\271<`\2706\275\356I\374<\236\027#=i\3623\275\236\245,=\350T\"=\\]\271<\264y\2476E\224r<\340\010\266\274 \355\032\275\276\235\374\274tV\001=\223<\242;}g\205\273A\230\377<\334\352T\275\305#\331<_uY=\024\033\010\275\0102\204\274\330)\023\275\315\'\243<t\037\334<\255j\002=dP\223;U\361h;\275-\002\274V\245T\274;\273\222<I\007\264\274\"\323H\275J\227\030\275\276?+=\006\023\006\274$K\243<r\330A=,\311\236\274\034z+:\027\266=\275\355$\022=Z\036\022\275\205\306\034=\357\252I<\322i\030<\345\036P\275\363\210\352\273\242\372\325<U\304\035<\337\347\325\274 f\257<$O\363;\0034\034\275g\235S\274H\337\231<\030\261k\274\367\247\341\274\3029C=\354,\004\275A\320\256<IB=\273\353+T\275!\037\372<\202\301C=\223\021\356\273\334\364S=\023\220\370\274\354Y\327\274\026\367&=^\300.=!\202[=b\223\t\275\220\022G\274\021~\225\273@&4\275\220\245\241<Dx\371\274\330\266^\275\203\016Q\275\027L/\275\222\322\034=\240\014\010\275c{\266\274S\001_<\031J\351\2743s&=>\241\332\274\n\320\013=\2604\'=\333\334\234\2748C\030=@/\003\275\347R\353<\202\317\345\271i\0337=\'\3559\274\304\342 =\000\244\266<4\345V\275e*V\275&\363(=\366\025\303\273\316\270\037=\2723X\275\204\341\204\274\265\000\367:\230\031H\274g\177.=m\226R=\033\307B\275m\355\302<\n\243S<\377\007\322;\234\346\257\273fyf\274\215\010\002\275\266\271@\275\016\275\257<\313\330\200;C~\211\274\275\025S;=\216n;-\177e<wR\2429@;+<p\0319=\002\242H\275\243\227n<\321I\321<m^\201\274\034\262H\275\260\265;=W\rQ=<\357U=\200\026n\273\303\263\002<\204eY\275C\325\355\274\263\010\355\274\264c\361\273\376\"\317\274F:(\275\265j\250\272\031\347\340<\256\230%=\3544\346\274\315\241\304\273\3324\253<\321g;;\006\361J\275p\325\240\274\217I\246\274\262JI=b@\214\274\017\355@=\004\345\033;O\245\n;\322~\246<&Iu\274e\301\261\273\027\265\251<^E\037=\263\224\203;p\257\370<1u{\274\344\022\022\273\270\'\326<\225\027\255;Z$\202<\t\277y<\276\022\003\275\036\325\344<g\017]=\325*\367;\311ej\274g\347\200\273\243\251\253\274\323\245\245<`\005\035=:a\332<n\024\031\275\265\273\032=\341\353\033\275(\246\273\274\377\376\025=\352\315S\275\235\277\377<\242kQ=i;\216\273\314Y\023\275\030\tG\275\314\247\204\274\210\030Y\275\243\2131=\025.%\274-\030s<\351M\006\275\347S \275\363\255\365<\310Y\306;j(4\275\325\243\356\2742<\003\275xD>\275\360\016\240<\310f\271;q#Y=\017j,\275\344f0=\024\365\264\274\351\001\033=e\312\351\274I\025\003\273\243\\\247;4\224\232\274rw\316<\327\271\324<M\257D=q\207U\275\037\t(<.\362;=\003\250a\274\215bY\275\335\353\017\274+\210\250<W\354\337;QA<\275Q\302\243<\325}@\275\270_\010\274T\t\352<\025\250\277\274\321VI\275\025\3612=\022\343 \274`1\253\274\317\267\021<\324\270\\\275\005\361\021\274\'WK=,K\000=[\211\367<-z\241<\353\324\027=\217\260V\274\007\346,=3#Q=bW\317\274B\202^\275\3101_\275\352\014Q\275\3258\364\274\014Z\207\274y\201\325;\340\033.\275e\251\'\274\345\017>=\213\275U=AVV=\267\341\010=X\345\217<\000:\222<!\314\007\275\275B)\275\363D\245\274\232\3707\275\275\202/\272S\262z\271+*\007=\030\271\243\274\252 \203\273f\333\271<\211\372\336<\313\200V;\304 \303<V|%\275K\217\240\274\250\016\210<\013{l<\2423S\274(\334\265\274q\265\206:@\327\263<\024i\213;\2539\004=\244\364\330\274\350\322|\274\365\200\270\274\351\257U\275\333\014\351\274E\016\017\275\343\366M=\022\320B\274.\\/\273\245\225S=E\323:\2759<\316\273,\305*<\025\201-\274\307\231\354</QZ=\314Z\025=\204\224\323\274\347\331\203<#\240\267<\367\277\311\274\376\t\216;\\-D=g\256V\275w\376\360<T\303y\274\356\331\032\275\371\365#\275\320\243]<\263\304\r<\273\351\005=\035\210C=l\205\236\272\342\313l;\353\3071\275\231m\026\275\033>/=/@%=\264\0241=\234\005\350\274\350\013\033\273\345\360\375\274\240r\226\274w I\274\250\375\321:\016\334N\275\242hB\275u\241\274<\220E\013<J\275\260\274\211Q\300\274\216?D\275/$r;u\270o\274\264IZ=(\331N\275\006)A\275\003VV\275\232\210\013\275/\026\032\275}\337\274\273\204~X=F\310\276<\277k.\275\007\0314=\261f:\275\355\200V<\205\334\301:*8\327\2738\275\013<f\361Z=\341\013\240;\025xZ\275\000\211Z\275;\3046=+\316\"<\254,\377:\221\016\t=Q/9\274v\374G=\371\203\023=\367\333\315<\037\036D\275$\035D=\374\243r<\356\037\302\274\004Y\352<\3761h\274~XS=q:\250<8\214\t=\212/\274<\307\242\242\273\241L2=\353`\334\274\233o_\275>\020$\275\221\274l\274\322\034]=1Z\333\273\357\0055=\367\335\313<V\272\305<\202+\317<\254\351\023\275\033G]=\276^\253<o\264\325<po\351;\207\234\007\275\314\247\005=\330\332A\274\316Z\244<\277\244\202\273\273\360\245\274QFX=\345\r\023\275\361\264\307:E]\030=y\250N\275\036\213\312\274\345\035\321\274R\017\303\274\002\000\036\275\325\010\016=\246+(\275\323\253L\275\376\2042\273\315\372\232;\244\300[\2753\340i<6>\362\274\232X\210986%=w \000\275\t\303\372\274\204\205\211<\007EB\274\241\022N\2752\356(\275\214\3436\275\002u\315;\020O =\021\271\362<\353\275\314\274\037\022\032\274\025\365\004\275\224Z\"\275!tG=\256jI=\330\002\001=\375\257X=\274\226_\275\307JR=\277\353`\274\201Il\274\200\374&=\264I\236<\222=H=\325eR=\226;]=b\317B=\001\340\017\275*\017\325<\001\247\233\274\226\"J=\014\243\257<\372\036\023\275\256\265\013\275\310\203\317<nF\245<\nH2\275G\377>=NOC=,\\Y\2752\376\260<3\310\265\273\214\226A=\374\027_\275\306\231)\275\244\363\034\275R\221R\275VU0=\021\277\273<\272\0268\275\035\304T\275GQ_\275g\322\305<\241\271\206\274\315\360T\275O\267\242<\233\270\004\273\250\327\225<Y\233\324\274W9^\275O\220V\275,\236\036\275\205{\026=\322{\324<\221\t\321<=(\331\272\tP\343<\222\231\273\274\2115 \275\213\"\265\274\270m\246\274u\3209<\367\357*=\007\037\266<}\273\212<q\325\263<\317\246\235<\245\327\247<\001]\260\274[|,=.</=\222\212\266\273\235\215\202\274P\375\016=.o\246<7\344\026=\375iK\2748\013\332\274\237\233\001=E\263\010\275y-\214<\005\346\032\275\314\244I=\235^\223;\r8[;\200w\303;\003\356\254;\340\262\323\271\300\270\320\273\004!*\275\2046%=Y\334I\275\217\020\356\274\372\302\'=R\000\366\274\345\222\024=\177\334l;\353;\313\274\2421\306\274Z\253\372<\312\0206=\034\357\252<\264\317\355<\221\013s\274\247\0035=\336Yh<\340\007\014\275{\352\024\275{\222\000=\321\0223\275\244\021\033\275\2217P\275\202@\226<\325\216\300<\333 \342\274z\030L=\216\030d<\315Q\033=\'k\203<C\025P\2754\203\255<\334\rU=\254C\t\275\356\021\262<U\226:=\361\267\004=\326*%\275\222\025_<q<_=(h\235<$\034\365<\271G\363<\365\"@\275\022\271\024=\340\234P\275e\365\376\274\370\240\251<4`O\272M\253A=\357\266:\275VMJ=\032\337N=\3373\236\274\333v\n\275\236O\253<\255\247\004<\014\310\205\274w\330I=x\326\032<\246\317J=\210{\231<\001\362\001\275\360U\205\274\262Bh<\220\003B\275\366\022$=\240\344\351<\227\024}<\021\323B\274\2070(=BKw\274\032$\305<\243\203[=$z\251<\377\333\347\274r\335=\272\243\343\351;^\240*=s=\344<v\377_=\302\240\"\275\265\006L\275m9#=\323\004-\275\3074\377;\266`I<\355\306\236\274L\2379\275Q\312\260\273tHS=\000\2455=\244}.=\317\247H=[\245\016=\267\227\027\275r\370\030\274\334\004!\275\233cN=\364nF=\014\365{<r#@\275\342\275\025\275\036\022J\273Q\361\\<\007\215\n=\361P\253\274\373\035\271\274\365\007\231\274$d[=\226$J\274\376,j\273a\201\224\274\361\000\210;\3718\211;W\245\030=\030\027\222<qSY\274\303\033P\275\205?6\275\325N(=78.\275\021\374\301\274h\023\324\274C\270L<\214\204S\274\275\0304\275\020\275\006\275\302F(\275\266$I\275\217%t;\216O\332<zaD\2750\000}\274\0146W=A\241]\274\3609N;q\374\003=\036\022T\275\325\3615=\232f\356\274m\334\005=\215\213Y=\037\225\370\274\000o\327<\033\260\366\274#\2237\275\371\261\360<D]P=\224\253.\275|\374\241\274\357\302B=\212\251\235;\344c\343<\342\2452=az\326\274\260t\216<\221#N\275\255m\262;\245\027Y<\302Y\341<0M\"\274_\217\266<\202\231G=0\201\212\274\320pn\274\226\226)=3\216\374\273b\352\305<>\231\323\274\037*\034=\026\363\t=\273\211\271\274\030=\365<\003u\000=\273\244n\272\03524\274\301\233K=\ns\333<E\021$=\362\203\030=A\206\237\274\315\232-\275n!\034<?\311\006\274pi\307\274\016\3016\275\327\315N=\302m\260<\344\213\345\274n\211\233<\253\2265<F\213\205\274\310-\357\272\253\230 \275\262J\375<\321\315J\274\323a9=\354\3209\275\376s\n=7TL=6\321\307\274\307\243\335\2745_E\274\017\307Q\275\026\023R<\315 \313<\253\374O=\220\323\377<#\246\006=X!!=\226z#<\204\001\207<F\306\027=\360+\330\274\027#\236<\371\354\004<\262\217\236\274\\\3549\275\316\314\257<\226\377\343;v2\211<,5\\\275Y~\032\274VF\213\273?d0=\260\307S\275:\250\333\274\016\363B\275HW\237<\206\017<\275\357p==\350\231\033=c\211\021=\001\2109\275\273\227\021\275\202Mo;\254)>=\240\337\374\274\254nh\274\002\235e\274\212\353\341\274\017v\\=q\023 \275\221\327\321;\033\343\317\274\226\226\021=2n\026\275\202\344\305<\215L\375\273\207R.\275\254\336<\275\356\221)=\234\005\177<\335\252\006=\302>;\275N\220&=\004\2254<Z\017\034=\372%\233\274\340\357x\273\036\323\254\273\364\372$\273\232\376\'=z\350_\275\333d#\275f\t]=\3473~<\237\tC=|\032\027=\217\234\005\275\007\337\226\273\330\372\036=\006\355\037\275[S$\275\362z\211\272N\002@\275\350h\033=\000\245)\275\036K8=\312\271\225\274n1$=~\274\201\274\242\342_\275z\270\252<\017\334\261\274a}\001=)\037\022=\322\'U=\303\020W<\024\326\033=E\036\361\274\332\010\207\274PD\247\274(\3241\2752\017\240\274\341\345\326\274\r\236\322<\275\337*=\276H\327\274i\265D=h\367m\274\246\006\306\274\221c\237<\247m\370<\'_\265\274\325PN;9i@\275\303*\026=E\025<<u\3072={\310&=\tMF=Ke\025<\373h\032\274\013\333_\275r\r\332\274P\206.\274o\215\326<8\027V\275\036?~\274\004-\254<v,\226\274b\254\261\274c-T\275u{\216<\\\213[\275\231)P<\235N\366\274\266\377\366\274|l.<\323t\3448\013\202<\275L\017\227\273\212h\023:n[U\275\331\3405\272U\361\\<c\371<\275\2130L<\327G!\275NYe<6L\034=\2461\016=\234ny;\241\340\376\274\346I\013=\017\023\231\272~\374\017\273\352P\007<,\022\273\273(\333c\274\211\261R=\245\202%=\200lz<\236\360^\275\311&\341\272\030\216u\274\276\340\200\274k,[\275|(F=\026\231f<\355\322X\275\277}X\274\020\237\205<\305\366\346\273\007\317\346;x\212\346<#\r\034<m\261V\275\335\223\233\273%\200\006=C\030!=a\236\216<9\270\036;\202\240\267\274\006\3223=3\325\037\275-\236\016\273\254\347A=W$\016\2757l\370;e\223\n\275\303\254\000\275\317J>\275\0050\347<&\004\"\275\036[\026\275(\034(:\372\337\274<\010f\002\274$\002\200<S\232\211<\266\006\362;OhZ\274\361T\304\274f:2=\360#\004<zY\201\274\022\262H\275f\2621= HY\275\307\340?<,M\300<\350?\307\274\3450\025\275\354\336\303<\006\240D\275\246TO\275\027\321\240\273\356k\351\273\341\351\211<\372\035/=\275.K=\335t\253<\224\216\017\275,\2064:i\366\332\274\210\257\277<\223!$\275\327\335&\2742\250\277<F\374F=i\233\374\273o\327\344<\227\300<=!|\001=\335\"\377\274\341\323\331<\230cg\271\261b\026=\231\360I<\310\207\277<\177\r\332\274&~n:\224\335\216<\345\227\334;\302\370\214<\356\360S\275(\3133=RU\\\275NH3\275\025\306j\273\031\002\001<PJ(\274\240gj<@\205/<\034a\337\274a\362\221\274\357\334\307<\372\314!=\004\036T=\333\240\016<\207\307\235\274\367\342f\273\343k\021=\037o\203\273D\223\363\274\374\3262;h\225\007\274RM+=8r6=\357\247\036\274\370+\216<\032I\022\2749-\237;vS\020\275\243\336\263\274\032\336\010={\3742\274$~\222<@\225\272\274\206\313\324\274\312\2376=w\023\301<WD%\275j\331\327\273\002<Q;)\217\253\2745\243W\275\030W6\275\211\330C=?\213\314<\034\263\331\273\024\334\025=t\210;=\271\244\004\275\222\343_\275t%\256\273\360\3614=\210\357\305<c\030\272<\372\326\362\274\002\320\030\273\327\304\226\274\337\327M\275\210\274\362<\017\221\037=\230/4\275PJ\000\274\370V\003=\236\354\327<\003/\333\274\227\355(=y\0343=\003\336\321\274?\303\r\275\360\245*\273}\027\'=S\375O\275\312k\351\274\364\345?\275\243\263\261\274~tT=\243\036\022=\344\207Q\275\202\037\373<\022]0\275\024*\016\275oDM\275\331D\024\275\255B\204;\201\203\223<\022p&\275r\364\022\275N\026\241<5\331U\275]\345C\275\023H\007<z,6\275\343MZ=\310\211\017=\274\033&=\016c\016\275\221\216\001=\253\243\264\2739N\034=<\315O=\221ws<O\021`\275\013\235\371<\261C\344\2733\177\002\275\376\231\374<&?\035=m\375A=9\271L=]\266\377\274\264\023\335\274\217\026;\275\302\351\372\274\"\\\343<\3206\3059\003N\260<H\363\017=\261\\X\275\003\360(\275hi\252\274\304\211%\275\365\351;=\010\273\344;t\206\"=\004;$=\374\030%\274\250\302\320<\333\357\276<\340gL;]\217\002\274ey\344<\\\322\006\275\211\214\032\2758\351X<\016h \275\227\033\352<\215\177$;\221=X=\202ig\274\202D\024=\005\335\273\274\r{\004\275Jd\017\275\r\231_\273\246\233M\274f\241\324\274]\304\221\274\024\252\206\274\242Y0<\300\013\356\274S\220T\275m(\360<1\376n\274\342\310\220\274\303\177Q=3\375\215\274q\375\245<\321FY=\237\225\"<\334=1\275\324R\217\274\024\315\223\274\355\217\241\274J\272\336;\326\320I=zEE=S\244X\27560S\275\215$\025=>Do\274\237\374F\275\274\334\030<X\002\030\275/\263\025=w\2211\275\207x\270\274\2174\366<\004\234\031\275\240g?:\214f,=\307\246\337<\267\3370=\342\020\232<\016q8\275h\342\325;-\224&\274L\354\023=t\371\"=\337\303\210<\303\'\224<\351\255\377\274\3761\203\274R\233_=(\255-=<:\214\274Q\314@=!7\322\274\326\302\r\2759\315\021\275\215z0\273#my<\246!\336\274\264\346\304;\005\217\033=\326P\030\275\220\265\'=6{\231<\255\275\034\275\341\024\236\274F2}\274\241A\233<0Qi<\347\356\242<\227\373\340\274\013\261t\274\321o\000=\345\227\255\274uN\234<\252\004\213\273K\2571\275\241\013u<?M\025<\023\345\231<\367\303\017<\364\364\345\273\254\374\236<\032\315\000\275\254\034\224<N\025#\274`\322\204<DIB=\265zW\275\365\237T\275+Y\203\274\205\265E\275*R<\275\362\276$\275\303\372\374\274-\017:<\200\225\236\273T\277\027\273\n()\274\257\002\306\2748b7\274\034\'\023\275\304\031v\271\375\317\r=\307\244\350;\336\322\004\274\325\202W=.\341;\274\304\267\344\2742\257+\275\016\224J;mj\016=&.\n=\025\274I=\262iG=5\245\201<\265,\010;\315\014\265<;\377\315\274\273(\274<Z\357\215<i\'&==\330\372\274\374c\370\274\226[:\275*\374X\2751=\206\274\036\301\343<\234SS\2745\373_;\356\345D=L\320N\275\341O\213<\021\353\004<\366Y\353\273\272m\031=\243\207\017\275\362_\320<\322.\222\274v\302\311<Y.\033<\nG\341<\207%C=\227\r\022<\257\000\202<\000\347\031=L\217\303\274\372kL=\325n%=w\300\363<\033\314\036\275\334Y\223<\217\tj<\204_\262<\321mR=\002\305<\274w*5\274{\373\"\274^\006#\275\200q^\274\254\025g\274\3647\221<\314\226H=e\331\025\275\333<\350\274{\243.=_\335\007\274\353\3724=\363\245\022\275\317D\365\273\222\0367=[f|<\372\002\304<E\n\350<5\222\326<\226\235\n\275!\227\366\274g\376B<\0068\300<n\032\024\275\367U,=\016\016X\274H\326\352\274\227\035Y=\033\3776=\274\023I\275\302\005\215\274\236\017)\274fq\027=1\324`\274\360\230\025=\275!><\365\214\\=`\243P\275\3253\320\272\376\022q;@\002\361\274\222M\022<\326M:\275\307\352\340\274^\025)=G\232\"\2750C\357<\254\231x\274x\371\257\274\017\365\210<\312\324\241\273\035\0035\274o\321F=\r\234\300\274\203x\033\275P\317\337;\244\306\265< \021\005\275\210\177\340<\377\320U=\252\370[\275\333VV=\033T\220\273\013\254!=Y&\350\272wB.=\243\373F\275f\225\266<\271\360\374<\361d\264;\316\230\022\275\264\035\007\275\335\311/=\217\211X\275e\263\016<\322O\323<bqC=\033\031V=\207{\250\274\225\257)\275%\235\325\273N\277p\273R\331\025=\246\210\020<9r\036<\003\331N=\206>\347\274\367E*=\333\207\005\275\317\036\336<\225\021\326<(\314X;q\037+=c@\013\275\020\232S\274\357\221\347\272q\025\244<\275\035I\274\300H\\=L\355\006\275\334_\027\275\206\367\272;\343R\257:\257>P\274%*\006\275\340!\002:\3316\004\275\361\367\013=\021XJ=\366\361\311\274J\362\266<\260\270\374<\253\002\027=\213\022\n=\t\217\364\274\177\371\253\272\311\227M\275\"\203\212\274\027\001\005<\233\377\215\2745\204\001\2754\361\354;$\253/=}\345M\273\223\000(\275}\236\304<\025\034\\\275\367C\030\275\215\331\r=\306;^<b\200Z\275b]\264\274\005\370G=\213\276L<0:\317;9\322\010\274\321\241\317\274:gf;\267>\331<D\203\244\273\270m/=I\256\240<Eb\023=\001\265\311\274W\310}\274dZ+=\311\3147<\366=0=%\336\017=\263I\\\275\256\334\211\273m\224:\275\321?D=\003\213J\275\347\235L;0I%\275+\200K\275\330\224\313\274\321\356o\274\363\245^\275\3107\031=\177 m\274\223\326\232\274\316\327\037\275o<G\275\360\252<;\030\235\000\275\261\\\017=eC\327\273M\376\370\274\374\376@=\'<Z<\210\327\361\274\032[4=1\001[=|\322 \274\220\314\367\273\177?%=W:\343<c\345%=\336\273W\275\023\360\004\275\017\220\r\275S\336\274<\3717j\273\247`I=\026\212\036=W\341\266<p\372\361\274\27273\275]\302\017\275\347sZ:}I\304\274\245\357\322<\342?\026\275\213\315\244\274;y\034\275\016\n^\275\360%Q=\355\223\010\275\217f\213;\260@\310<\227\001B\275\230\337\246\273\210\313x<~wR=g0\337<E\300\361\273j\033[\275v\342\222\274W\240\347\274\2547Q\275\322C\241\273\311\253.=\312\260\031\275e1V=\2353\332\273\370\370\021\275\027k\023=*\370\030\274AQ1\273\317\n\354<\347+Q=\027\301Z\274\366\275\275<\307\224:\274.#\367<2\300\344\274\316F\242<&K\250<78&\274>\230\301<\372\337\276\274\314jJ\274\361\211\273\274\204\327\300<\356@\257\274E\010\313\274\r\324\001\274\345B\257<\013\337,\274\231c\204<\315{\324<\243\343\006=]\265\323\274\306\252S\275Y\241\021\275\350\273\371:G\347\345\274\201\016\300<\241\3655\275+\371\000\275\237\236\371\274\222\377K\275\326\010\364\274\226\222\313\274\r\304Z=\344\022\265<\016\\)<\345=\021\273\274\250\346\274\004\226\267\274/\2721=a=H\275\036t\"\274\t\300\374\273M\375`<<\262\350\274\315x\312:\346\212\350<\007\326\342;H81\275\003\253\311\273%\002\241<\221ZP\275\311\022\376<{\206\254\274.\304\342<\333&\204<\310E\332;\364\251\177\273/\347\'<\231(!\275Oc\023=\"\243/\275\224\375\326\274\320\317\266\274\356\232\205;\352\352\314<\347~B\275u&\025=\036\r\030=\325X\372;9\306\321\273\355\321\265<F\253\241<\003`I=&\2075=x\222G<\314\260\030=\375\245\021=\324\340\363\274\224\257A\275\372\300_\274\004\001\t\275XM\022<\257w\006=\217\344T\2748g\237<e\264#\275SN\n\275\330Am;\n\327\004\2754\306\022=\027\253\036=\307\314#<M\202&;\204\325\022=cc\370\274\306C\370;\261)\241\274\346\344\245: \036\266<]\227O\272\367h\344\273\322\036\341\2721U\243<\250[T\275I\200_\275p\2410=c\365\367\273\220\2348\275\206#\301<\252JZ\275\377\342R\275!\177%=^\230\024=\340m%=\254\211A\275g_#\275\240k\031=\322\355\\=f- \275W\326\271\274\204BR\275\376\314\346<\t\\\177\273\226\276/\275\376\271U=\266gZ\275\021\2073=F0N\275\350\235/=:\034\240<t\224n\274\027s\266<\230\"\326\273\206\304!\275u\006\r\275^\0213=p<K=*\n\350\274\376\030@<\224\\\024\275zc\021=\312\2541\275\001Z\006=G\224s<\035\364*=;-\245\274@\220W\275\301\000\244<+s\214\274\'a\360\274\306\227\326<[B\247\272\332<\262<\016#&=\252\027H\275\001T\\<\3342\237<\372u\264<\330z\"<\371\225\\\2739\256\030\275\277\334\025\275\226R#\273\361\265\240<\257\033\265\273\317s5\274\321aI\275\214\220N<^\367\313<\247\027\242<V\256\027\274\217,\271<7.\212;\333\341G\275\326\263B;[\217%=_3\216<Yc\002\275+c\330:~\344\260\273\217\266\245\274\246\262\274<\350h9\275\220^\252\274\331H@=\265\3061=~`J=\337`\347<\026?\024\275\313\250\241<\236\302_\273\336\277\312\274\372\325G=o.\005\275\031\310\371\273j~G\275\257?L=\241\367\026\275Z\211\215\274\3275\037=\363\355\313\274>?\177\274\3364\310<\236\033E\275\322\026\010\275\324\214]\2758\223\017\275:\246\037;\355iX<\363\342\276;@f/\275\217\310[=\350\006\246\274\010\255\024=2\263\277;\372+7=\r\337\360\274`M\\=\323P\274\274w\240K\274\306G\323\274t\355\314:\241\262/\275!7\223\274\260\245\030=\005\027\337\274(F@\275i\216\200\274+a;=\n\210D;\305o/\275}\331L\275\2413E=;\377Y\275\236\302\000=y\034B\275,\304\234<i\272\264\273<\013\310;u.\240<\303}V\275z\3431;\345C\272\272\352\377*\275\035\256C;\177\026-\275\r\225\300\274\306\2173=w\340\343\274\261\361F\275\370L\331\274\033H$\275\010\325O<S\227\230\274\370pG=\005\2079\275\036\264A\275\302\3541\275\220\030I\275\263t\\<\037a\035;\3340\031\2750f\310<\212{P=\334w\256\274>N4=a&\266;N\235R=\355h8\275\254\223\214\273\342\323F\274$\262\t\275Tp\013=\377\\==\323\376\026=rNX=\221\2779=o\035\333<\241\304\312<\257\256\2419\377\273\023=\276\035a<\2251W=\256\253\013=\237#\336\274y\331\265<\327\2418\275\3444^\274\022\277J=\220\371\234:=AE\275\266\210\r\275\357!\233\274\375\346X\275\363\377\335<@S3\275Hh\207<\200`\020\274\251Y\277<\024\026F\274\030\351\266\274\202\351i\274b\262\350\274\314t\214\274\311%\227\273u\032F=Iv@\275\364\224:<\314(\017\275\032\303<\275\023\037-;\303\3706\274\016\005\023\274>\264\"<\242\341\261\274q\265\237\274_\235\343;\261\311N\275w\242\360\274\010D\203\274\275\243\271\274\202//=\2259!=\r\364+<S\016`=\366,W\275\225A5\275\320\005\370\274~\334\227:PlX\275_n_\275C^i<\347\243\204\274\306=\2139\036\351\253\274\224\003)=I\317M=\025\005\271\274\323\276\032\275\005Q1\275J\006\033\275\303`\300<\274\313\377\274\212\322D\275\373\270\340;Y\0131=,\304\034=\377\263\213\274\2465\006\275) &\274\302V/=\343\265R=\350_I=\306Q\014=5\341R\274\315\233\247\274\360\t\257<_\305\356\272\244k\223<\252\016\257\274go4=\n\231\234<r\253M=\242C\330\273\270<6;7\377h\273\301\342\342<\325xm<\353\004\033=\365t==c<\024\274\330\201Z=\272d[=\350\341*\275l\026\025=\\w\375\274\230\371*=\310@\003\275\267\312:=<\002 =\022I;=\266\201g\274N\3111;(N8\274`\236\344<\376\221@\275<q,=\304\357\225<\246R\177<v\217\326\274\271\373\372<\226\002\013\275\271\013>\275\362\257T\273x\365\003;\260a\262<\314\356\244\274W\254!\274\276\024\013\275\206\3501\274%^\201<\242\004\373\274:\276.<\020\262\037<\236\345\323;F\277\373\274w.\362\274\235\320\275;\342e\224\274\027fP=ioY\275p\246.\275\351\220E=\022\233\002\275\016@O\274\261\373\034=z\033\252<\364~c\273N\232l\274.&\204<\265\321!\275/\360E=\374k9=\231/\003=\357=\330<\346\317I\275\202\303\350\272\354\201S=\360\226.;\022\371\323<9p\345<\213n\031\275\240\0316\275\002\007\362\272\361\2551\275\020e\017=\237\004U\275\307\347\023<\317JI=\206Z\260;\244G\253<\306J\026\274\361\252\273\274a\234U\273\360.\265\273\017 `\274\031\253\250\274#\374\'\275\007[P=f\n8\275R)\205<\020q\027=h\212Y\275\016\234C\275\235\264\345\274R\364\337<2\242\360\274\346]J=#r\375<\025\214\236\274\313\345\225\273U\233{\271(\206n<\315\366,=\221\227\366\274l\036]=F\2275<+\367>=Y\303f<\227\373\006=\276-\016=\021\342\322\272\267a\320\274\213\r9\275\352\357\355:V\377\341;\333_\331\274[\314\026=\325\373\307<]\201\003\275\007(\036<\345\n\024=+O\022\275\232\257\025\275Ot6\275\310\316F\275\024\217\201<\261\315\274\2740\371\361;^\253\223<DI\302<Tp\227<\006\004I\275\005!/\275\332X-=\037\273P\275\373\307 \2754]\264\274\316\324S<\327b>=\270b\330\274\217 U<]|?=\025\250\211\272\005w)\275\311\r\037=EQ\366<%\304\342<j\2548=8\030\344\274\311\000>=\364\302\330\274\374\221$=\232\2274\274\216br\274$\010\273\274z\244N\275+MW\275\255\033\227\274W\225\344<WbE=\234\'\202\274\270{H\275Kd\236\272\340-\334;Q\251\344\274\005s?=\255\265\260\274\343\313z\274\024\362\t=U\0176<\2061\222<\347\252_\275\001=\250\273 \373\260<\360|Q\275\230\301\034=\t?\264\274\344\000\256\274\214\237\330<UL\274<\300\374U\275xd\007=\337e[=160=\343{\257<\223|\240<\305\201\206\274\334a2=\025\322\003=\271\355\033\2758;\341<\210\226!\274A\345\022\275=\025V;\221bN=\367.?=\360\223\246\274\220\'\001=\236\271\207<\244\367\034\275\266xC\274\346\2503\275\317\201`<g\375[=\006\357.\275\'\376W\274;\346T\275\275mu\273\216\365}\274I\'\016\275Wm1\275j\211\333<#5u\274\233\271\223\274J\204B\275p\215\351<\2168\022\275\225\214,=+NX:\242k\004\275\'<y\274\211@\355\274\001I\220<\2045W\275B\244\r\273\3224\307\273(\207\021\275\t\222\014=\310\321\033\275\375\270Q=\2153\030=?w ={NT\275>t\000\275g\214,\275\331:\320\274\316\334(\275|\364\025\274\255\210!\274c1\'=\304\277\000\274\272+\t\275\027B_\275\343 \327\274\024\021\332;\010\273\006\275.\273Z\274\231\260\321;(\272\006=\323\273\020\275\344\253 \275\005\213\025<\230*\330\274\302\310)=v5\242<\230x\267\274j\022^\275T$D\275s\310\260\273e`k<\026P\271;\225<\034\275\250_G\275\364\337\232\274\017\t\272;X\363\217<?\034F=@q\236\273uf\301\274\254\236\016\275\3728M=\231\303P=\223\214&=\347\262\256\274D\033\021=\335I\253\274^\252\257<G\265\201\274C\371\n=F\313I9\350\333\376<\017\277\216<\006\235==\336\2261==_!=\"bQ<\350\034Y<\324j.=>\034K\275`\024\323\273\270\367m<\326\344\227\274o\212c\274\255\025\223\274\036\263\220\274\212(\357\2726\014&=\033\261\304\273S\261!\275\214\224\256\274W\327\373<Y\271\n=3\243I\275\2036\370\274\rN\027\275\216\272<\275}\375\006\275\261\245\325<\372\360\306\274\220\361\262\273\022\333_\275\215\340^\275\333\207\240<!\001\264\274S\323^\275F\243\031<\332\001\014;\306<\354\274\343\266H\274\262\000(\275\337bV\275X\"D=\320\364D=\367\240==\342\240\002<\203\251A<u\337\351\273\rA\"<\362m\334\274ex>\273\344LR=\333\301\351<\253\017\360<\310R\345<\367Y\352<,\002\214<Y\216L\275\340PH=Y\251\374\274r\322\215<\005\263>=\017L\023\275\307A\374\274Q\373q;\013\304\270;\211\017u\274[&\363<\327\304_\275\024E\272<`\244\"=\206\270\344\274\345\023\360<\211\377\024\275\033\032\010=\240\230\323;\010\374m\274AXA\274?\3164\275\215\031C<d\024\025\275%\352\323<\263\032W=\3028y\2741O\212<D\270\036\275\017\003n\273\2661\033\275\260H\240;\006\211\032=\"\273\010\272\237\003C=\233\234\300<\354@*=j\223\035:y\222\201<<\367\337\274\275y_\275\253%I\275M\277\003=p\0032\275\361\324<=\325,G\275\366\245D<glm\274\rT\214<\302\361:\272\331\245\342;B\247L=\226\327\036=tx\010<\257H\t\275\231\235\2109\332\273.<1\360\240\273\307\213<<\301\376\010\274\272\037#=p\277\014\274\'\"l<+\342C\275(\316\260:\361\332&=Z\207\215\274\340\327\244\273\237d[=\016\316\251\274?\330\357;)\245x<H\206g<\273\267\233<%\240D\275\213\017\305\273\250D\307<\227~\322;\351&\360<\206\277\'<x\"\017\275\372n9\275\261\231/\275\260\234v;o\236\347\274L\307q<\216eR\275\330\212\210<\225+>\275\312\177\207<u\027\035=\360\314\034\274\326\034\232<\'3\324\274\005_\017\275\n\354A=r:Y\275\377\017M\275c\202/=\331\204\302<z\274W\275Q/2;M$9<\271\332\n=\243\247\243;\204D7\275o\354\014<A\177X= \201\377<\261:2\275\251B\237\273\nnA=\341\361B=\037\301k<j7\017=\246f\317;\334\362\355\274\320\322\217;\330eJ\275t\321:<\333=\367\274\376/\014\274\242(\270:PK\n;\311\361\032\275(\204\243:\316\236\336\274\356\301 =\342!\204<x~J\274/v\356<IB\234\274\014}\333\274\343#5=\177\343\026\272\312\225\365\274\217\341\t\275\254E\"\275,\223Z\275\350\273\010<B\211&\274\274\255$<\371:\333<\3536*<\210\370\007=\010q\221\274\272\371\026\274_\242O;\032\256D\274\226&9=\033\032#\275HV\332\274\337\307\210<\243\372\026=\020l\023\275\346\370\t\275\237\3774<\033Z+<p\036\216\274\302+\224\274\310=\346\274\003\241Y=k\245\205<\254\017@\274\311\333\373\274\357\200=\275{T\230\274\353\347\356\273\353\247B=\353\037H\275!Lk<\027W\206\274\276\014O\275_\022\232\274&\254Q=i\013\200\274\020h=<\206y|\273\347f\033=q\251H=\223D \275j\372\036\275\327\246+\275oq\r\274\001\3168;\241\216Y\2746\271\260;;\263\276<8!^\275\022\312\353\2745tS\2752\203\320\272\256\2419;Q\255\277<\221\327\342\274\210\031+\275\207_I\275c\013T<\256\027\225;\245#9\275b\363\005\2759\3248\275\220\002w\274Q\r\036\2754\004\'\275sL\316\274\245\014\345<\332\362\255\274\270\250=<\350w\232;\200FJ\275\235\361]=\201\310\001\275w\372\241;\211F\375<\032\010\367<\354\241\025=\377_\302<\373Pf\274\255\322i\274\364\300G\274\027\2736=\221\334\305<:\207\002=\326\275\022\275\227\035\364<Y\326H<\236\243,<$\204\352\2744&t\274bC\230:`;\362\270qj[\275\365\314\250<`\266\306<z/4=T\221\237\273\250\253\214\274\214\277\033=\234YX\275\203\336\037\275\323\025\225;\310\330\004=\226\351\266\274\315\274<\275k\254\034=\221r\035\275\207\2022\275\331\300\n\275zt\247\274\327UR=\035\2533\274\225\200\312\274\006\364@=\321u\324<aOC=5\313\252<\022\\h\274\355\t8=4\321\276\274\017G\372\274\244\r]\275\010\\A=\356\246\226<.:\374<\263\235C\275z\327\212\272\266\342\231;H\274\235<\014A\2159\346R\330;=MX<kE\253\274\377\340I=\311\271\232\274\313<=\274|\232\370<\304_\333<G\3075\2753\3472=&& =\341\304\r\275oV\204\274h\376\233<\327\247B<\227\207\005=k\0027=\300\243o:<\257\001=fnD\275E/\023\275\277{\204\2740-\035\275\321\304\276:a\340M\275[o\031=\275y\223<2\264,=\336\374\232<|v\312<_\276f;&\310\022<Lj.=\221\0168=\371\213Q\275\t\010U\275\027c\215;\017\224\026=\362\327*\275\244\2647=1\267U\275=\005\364\273/\037\320:th\n<l\253\202\273u\2334\275=\361A=\"\216\351<p2#\275\334\3505<\217\326\314<\036\261\235\274\001\305\357<\360\003\034\275\341B==\265\272R<\376\356S=&\313\226<\317\235J<D\376.\275\274\313\005=R\016\217<8\326\010<Y1\326\274|\364\207<\306RC\275\362\262\r\275\025\244l\274K\303\350;H\314\362\273\267O8\275\302\202\317\273\366\232\312\274\325gh<\236\253]\274WBY\275\201+|\274\372\177\020\275\3019\023\275_\031\331;\206\246F\275^R\303<\022a\366<\nL%\274\337G\007=\333\310\t\275N+\200<\326\024\255<\222A|<\263\177[=\370T\002=k\006z\272\206\335T=c\271=\274\022\212\037<\3123;<\0277\360<\340|*;@W\212\274\221\356S\275\321\016x;X\035=\275\357{\332\274\277\r\t=\252a\375\273M\2058<c}.<\202^=\275\225\342\010\274\237\211\033=\256JW=\030\001\r=\212VB\275M\302j\273\205\374*\275\215\312Z\275\032p\340;=\377\025=\350\2267=j\263\372<\307\035I<\255\024\265<\321?E=k\000\220;\\t<<!t7\275\344\275Y\274L\305%\274\247\376\032\275\323\343\014=J\346\026\275\272\2070\275E\360\371<\010=[<\307\343\322\274<\037U\275\343X4=\322\210X\275\303\232\260;\367\t\303;\0175\010=+\237w\274\3647\313\2743x|\2742\260\351\274AL\223\274<&}\274\022\210H=\002vC\275S\316\212\2741\003T=-Q/=Q\314\305<\253\207\022=F\276S\275a\342\007\274M\243K<\\\345\230;n\333\317<\272\344\016\275\252\246\016\275b\320\301<\034\345\305<7f%\275\327\344 \275\227\321\301<\361\000\026<\353\177\372\274,\372N\274\332\266Z\275\021\335^<\317\324\'=\276\257\247;\310\'\027\275\027\222Z\275cE\343<\014\'\333\273\372f)=\211\177\312<`M\022\275\336\370K\275\3017\375\273\270V\370<\001(\007;\254q\035\275\336f\312<!\212\242\274W+#\2755Q\305\273E\271\210\274\037\360\377\273b\001\231\274\275RU=pT0=FY\211\272@\370\233\274\213\213M=\204$\207<\263m>\275\351\364\004=\340\025\037\275\017\373\250<G\241,<\306tB\274u\2739=\0336\200\272l\210\356<D\342K\275WT\013=\ryM\275<\310J=\277\222\014=|\005[=\334 \"\275]\2168<\034\373U\274\005\027\037\275\024n\373\274R\370\202;,\207\"\275\323\323i\273\275\226[\275\203\336\361\274\004#\271\274\206\324\004<\010o\035=\226\002B=c\241\000=\022\035\230\271_\323\374<\200\020\331\274\347\004\010\275\356\243\200\274/\222\231\2747\332\351<5\013Z\275\350G\034=\345\030\003\273\216v\004<\365t\021\2756\312\353<;D\200<\032\324)\274\345^9\275\006\212\274\273\371\234\227\274\'$s\274\207z2\275\2002@=\030\220R=\234n5=a\215o<\211\305w\274\226\205=\273\331\243\226\273\353\335\031=\273\320\243\273\244q\033\2753\330\345<S\244\037\275\004_\331<\306\024\377\274\233\\S=\024\344\204<mdr\274An\033\275_\312\346<\252#\021\275\347(F\2751\241==}Eh\273\010Z!=\316\035\034<\035p\324<\316\016\315<\006\3260\275d(V\2754\357\330;U\253\315<\344<<=\341V\023\275>\323_=K\201\253\274\277\211k<\360*\004\275R\221\343\274\202\271\261\274\375\334_=\277\255\345<\353\343\222<\"\037\216;\372\323Q\275\235\004W=\320\032\367\274\007#\222<\275#G= \226A=\300\320\024\274\305O\240\274\203\234\375<=\324\300\274&\341\321<\021\370H<\300\234\230<\004K\223\274z\0304\275\363=\321\274/\260\337\2732\323\241\274\377\344&\274\335{*\275\321\020\036=\237\216\324;\277S)=\250L\310\272\032,N\275:\265Y\274tfJ\275\213\033L\274\370\252x\274\031\346\016\275V31=\322\010I<\315\177\351\274Id\t=\342\'\\\275\236\237-=\017\344\036=b\242U\274\270)i\273\010\361\266\273\316\316\031\275N-:\275j|j\274\234\037\340\273\266\337;=6\002*\275\201\326(\272\324;Y<\tU\036=3;\263<\3448V\275\277\010\"<\362\n\014\273\3760\247<#6:\275\225*\006=\022\316\240\274\265\033|<\237\261\r=\004o\250<\263\347\327<se\220<\001O\032<\023U6\275\252>\246<U;G\274\256\263\267<\245\200\201;9\250\263<\271\310I\275\210\242\343<\340\365\014=\252\310\007=\010\nz<\'([=%\335\215\274>\227>\274j\3347=\021\216\202<*\206\372<s\233\355<\233k\003\275\'\377\253\273\t\312W=:`\321<\372\322\372<\002)!\275@d\203:.G\001=\003\3622\275H\255\000=\226mI\273\207\301\222\274`p\010=\211\2733=*KO\275t\004J\2747\006\005==\346\374<\013E]<M\213Z=8\303T\275\363tX=x\325w<\036\355:\275~\004<=\220*\025\275\344.\036\275\212V\374\273\342\203\366\271\232\266\017=\214=\025=\340\272P\275M\002~<F\023\255<\004>\022\275\010J\300<E[\325<&\256Q\274\277\033S\275\244UE<\331:!=.\232\025\275b\302\007\272h\213\256\272\333\327\317<6\031i\274|\267==\260\204\365;=A&\275\007\031\014\274\321>\021\275\310x!\274X<\364;\363\373\000\274\232\t\264\274\'\342\027;uF\326\273\311y\347\272,e^\275}\331\267\273\311\227\t=\370A+\275\357E%\275\241Y\021\275\210\300\302\274\377\230\360<\262\020\371\274\021\3761=\2764,=h\363\005\274\021|\335<\3663\205<!\215\274<\355{D\275\352,\246<\213P\002=\335t\314\271\347T8=\340\243\274\274\375<#\275<\241?=d\245i\274^\263\343\273w\014A<\360N\207:\340\352\335<`k\016\275\007\204+\275\035\366\210<Y\231\017=`\351\215\274\352\342\333\273\n\2413=\266\341Q\275\002\272\317<V\006{<\033N3=c5\031\275a\304\323;r\010\237;\203\243\001=\026\211\330;BWX\275=g\272\274\213\013\306<imA=\222\277\267\274)H\245\274\312\310\332\273KnX=J,y<\226\312\203<\n-\265\274!\303\311<\226%j;\316\374\213<\304\263\273<\323\274P\273\365\225\340\274\265 V\275\276\324f\274\225\216\017\275\352E\224<\204\nl<\357{4\275\313/R<\215)\025\275&\031I\275\027\326\030\274\2472+\275)\347\277<c\2630\274\273\320I=a\305\201\273m\217b\274\nD@\275\030D*\275E\221\026\275\035\"C<\351Hb;85\207<C6\361;\306KA=.=.=BX\354<D\240{\274\020\333J=\305M\337\274-\237w;\257\233$\275\312e\031\273\317\300\373<\227\024\256<:\361A=\266\034\375;\211\312\t=;\300[\274\234\337\322\272}\363\365</\205\210\274\'\032\313;_\222(\275Z\216n;\302\022@=\004\307\014=\2156Q=\037_(\272\355\005B=\230\307\027\274\257\344 \275\232/\306\274\224\255\314<\370\200[=\340\320W\275{\006\327\274\355C\034=\215\2138\275\242\241\362\274\224\271\336\274\317G>;\306\344\354<\220\245\274<\350\361\254\274Y\232\016=\322\0266\275\303\264$=X\263X\275\266\3224=\205*6=\r\334K\275\366\224\010=\245\017\213\274Z;j<\203\232\315\274\243\260\214<\004\261\375\274\354\273\233\274\303\211R\275\346\242X\275\365c:=\010\020\003\275\257a\206<;h\207<*_]\274\341$\347;\342\312D=\363_\356\274\207\257?\275\315\354\270\273\362\262\221\274\272\350!\275\254\275\256<\327\000E\275\274\325\226\274GX\301<\273h\325;\301\315\"\274\221\023\370;[2J=\343\034-\275\304\3269=\264\016a\274Q\243\216\274\2144\276<\271\323\036;tv+\275~XU;rZ\004\275n\202\227<\034\372[<\026\204\256:\371\252\351\273\325\007\020=\234\312E\275v\235\032\275\216\273\333\274\016\303\324<\277J\335<\226\237\223;\212G)\275W13\274\323\370\'=\031J\033\275\325\035\270\273\232h\340<\334\370\374<\371\267\010\275\347\020`=\371~u<\340G\n<o\035\036=\321\210]<.\345<\275\021\366\n\275D\352\020\274\261\334\023\274\272\255S<S\203J\274tq?=S\220\033\275d\246\270\274\240A\262\274\\\236\345<?\214\241<\317\302\313<%r\251\271\214s\216\273\353B\017=\223{4\274=\216\370\274\371o\355:\337\'\324\273c\237\005=P\331\262:~\357E\275\336#\034<J\215\323:Y\344E\275\341$\343<\233\217\343;a\t^=\347\035\353\274\221F\217;X\270R\273\371\n_\2754rS=|\001#\275\331\224\330<&\246[\275\201\276\202\274N\355\213<c(\313\273\270v\033\273\307z\275\274\247\354\335;\310\334E\275\346f\374;\246\210-=\202\362\350\274\301\3006\275\037\351\002\275\013E\251<\370\205\r\275MT\307;\377^:\275\273\226\027\274{\276U\275M0\200;\367w\260<\257ZU\275\347\225C9Se\307<p\256<\275\320\020I=\006,O\275\245c\t=\036\337\310\273\001\331\034\275#\372\374\274#C\372<%\352\001=\306V<=w{\003=\233\016/<\200\2006= \001\201<X\305\271\274\306\374&\273\327\240\304\274\\)\321\274\035\302I=n\355\031\274\210\3648\275\336\013_=\370\036\032=\326/\026\275d\363\317\274\271\030\253\272c)\270<\252T\004\275\253l6\275\362\023\031=@\367\312\274\361^\203\274F\260\237<\177\326X\275\24768\273\311V\000;\236O(\274\010CB=\260_#\274\376\3369=\243@*\275\022\300\276\274K%\242\274\3650\004=\235\347\337<\252\000(\275\377\253\022=\262sC\275\345f\010<E&\271\272\276\301\3328,^\276\274\267\322\216;0\256Y<W\261\r\275O\357\0359p\303\002=S===\314\013\317<\361\261:<\227ny<T\004\035\274\371;\t=8\260x\274\362\276\350\274c\364\033\275F\356\246:-\'A\275\037\004O\275s$\250<\302\211U<D\207\230<\215fo<\273CH=\3219\362:\343p@;\352\206\273<\261\322\313;\237\370$<\rT\270<\304B\335\274\363\266\201<\267\232\235\274\205\333\022<)\225\364\274d\214Z<j>\313\274a\207\"\275\311\240\250;\r\370\256;\260\343\336\274\n\375(=\337\034\013\275\371:\t=\223\203\274\274s5\204\274\210\346\305\274\360\215\024\274m\363\267<\326\222\254<\331\315+\274\317O;=\306y\242\274\331\003E\275\324,\313<\014\243$\275\036%7=R}#\275\223\361H=\256zX\275f\013\263<O{2<\326-\326<\231\356N\275R!\331:\321BU=\021\223\376<=\200\300\2744\234\207;N\373&\275\214\237\003=\363rd\273\2475\000=\215\345r;\034\260<=1W{<P\314N\275\271\346C=\330\177\037=CV\361\274\315\306D\275\343\270Q\275\301^4\275\206\223\266:\237\005C\275\307I$\275\364O\316\274\267zW=q\310H<2j\236\273\303\302\325\274\233\353\016=\361\036X=\353g\354\274\311\371\321\273\353!U<[\350\022=R\254\332;\331\260\310<\353\320M=\250\344=\275\261q\022=N\002\305<k\270\325\274-{\013=\026\234^\275\220\370^\275\305.\020\273\247\352)=DaO<\313\033@=)%\034=\"\314p\274\354\344y<cP\264\274\3430\306\274_\025_\275\355\340p<\250\224\023\275\257\231\215\274x\341X\275_\200\260<L\025\005=JkD=(TM\275\375\354\315<\341\030\315\2738\302:<\021\020\302<{\333\014=\276\343\007\273\340XZ=\245\026\037<B\316\213\274\274\352\356<\200O\243<\227mJ\275\265\275+\274\311~\234<Wq\"\275\342\271X=\305\024j\274\037m\033<\223S\367\274\375\3534:\233\337%\273\326\253^\275\371\021\177\274\221\3618\274\226Qm<\020?P=\235\357U\275\377\007|<h\323)\274\300xJ=\322\320\365\274\367\300\036<Wn\270<\242\020&=h\007\036=\262\215\260<\364\017O\275r\276\204\274\"K\251\274?\\\343\272\202\361><n\254\226\272\353\014\325<\371\354\340\274\367\377n\273Ea\202\274\331\343\313\274\304Gi<\020\333\366\274\r\353\311<\304\033\035\275\036\344[<\330d\n\275\312\252C=}\0006=\352\300\225\273\227\227N=\337\303\316\273\275f!\275\200\030\255\274Qb3\275\213\2734\275\036\306\023\275z\205U\275\366\313(=\202\220\321\273\336~\227;\346\361w;\250\233\003\275\210<\t\273\256OX=\373\362\223\274WF\026=Q\253A\275g\337};\233H,=\351\037\331\274\377\372\332\274\254b>=\027\'\341<\222\327>=T\246\024\273W\222\367<\005\226(\2757\221P= E\316\274>\007W=\005\217\312<\363\242\314<\273\365\001=\335\266\333\274\000TV=\351>G=eo\007\275\033\3631=\024#N\275\226L*\275(NM\275\236\256 =\272\223\030=\272\353\361<\014\306N\275*\2778\275HX\034\275\200<\023\275V\034Z=\201\221\016=b\201\020=^\306>;&\252\007=\1778\347\273\232\342s\274{\361\006\275_9P\275\317\370\206\274\274F\321<\037\n\031=\023\023\025\275\206\260\201;\372ib<\n\024O\274V\216\320;\200\276L<\353\\\\\275\223N\r\274\270\357\030\274r\372\270\2744|\347\274\300@*=\037\210\272\274\036\"\302\274\211\313\347\274;\345\r=\'\001W=!\3728<-\026\223\274&R\\\275\3331F<\343\203\341<\024\034\370\274\2074(\275\007\310\257\274\304\270 \274YR\025\275\264\254\231;E)Z=q\321%<])\247<b\232\n\275\rb\224<S\025Y<\256D\\=\351u\030\275\212K\224<\267@\t=O\204\347\274\272\323W\275\227G\031\275\330\372:=ld#=\233p9;B\212\010\275<,\213:7\252\313<s\345[\275\257 H\274_\t\354\274\355M8=\345\325\321\274\013\320C\275\203\201\032\274w\207\326<\265\214\300\272U\031\031\275\345\0108\275\002\251\037\275\272\3068=\240\243\244<\327\246N=\303\335\207<\276\257_\273\334S\232\274Q\202N\275H\317\002=\265),\275l\273\363\274\252\2736\275\212\004C=M\332R\275\235\267M=\\\335\301\274P\353A=\3271\371<\005\"o<\'\tU=\033\3565\273M*\377<\341m\033=:\304\031\275\235\335\263<\340\246\256<Q>\365\2745\376M<\264\275\005\275\273\030,\275!\034\010\275R\324/=\026\363\341\273\271\205\236\274\373(;<\327\224\020=\234~\267\274\314\323:\274(/+\275,Z3=\261\201\333<v\365-\274\363\0000\275g\216\3628\253nO<\021MM\275\"2\000=\356\357\356\274\270\304\020=\347s-=\017\302\002<\373c\376:\336\266\360\2732\316\256\274\266\373\342\274\246\212a\274\235\224\002\2750\2710\275Eq\361\274o\350W=&-\030\275\241\366=\270\22227=]\300\371\274}\007\266\274b\\+\275$G&=\017\307-=\013\033J=\033\221\365;\2475\332<7\324P\275\002\224W\274\003B\321<\244\026\003<gb5\275\323,\343;\211~I\275X\372@\275m8\224\274\206b7=\234\333\223\274\344,4\275\361E>\275\341\214!=ap\331\274\240\301-\274\315R\003\275L\227\251<P\t\030\275\271D*\275d\000\374\274\223\224\324<%o\273<!\261W=N[\257\274\346\334*;S\350\033\275_X\363\274Vl_\275+\014\205\274=\302\214\274S\323\020<\230\016\331<\335\001\373\273\331\033\272<2\234\n\275^\327\016\275_\365\r\275_\022E<\036z`\274\000\320\372\274\312\010 =-\335\036<o\2728\275Z\030\302\274\342\r\025\275!\350\002\2744d,=mK\343\274\361\213\221<\353\226\262:\200\262\255<(\210&\275\266jZ=y\207==\317\323*=\342&\373\274R\005h<\020\225\312\274\216\357A\275\314#^<\310\026\237:\342\351@\275\003=\302<\217\221(\275uK\313;\342\327==\351\257.=\317g\261<\300\343\353\273\332\351&=(\024\376<a\262>\275\265\374\275:\007>\300\274nu\007=yeB=Bu\035\275\264\226E=\333\261\360<^n\017=FRI\275\234\304\373\274+\035\352\274\205\010\325<\304\371B\275\375;.=\\\t\007\274\207\246\225\274[W5\275t\010Z=\301\324N\275:%\221;\235TT\275\240b?\274\327q\035=`M\277\274\354D\233<\227\313\017\275\330d\024=\374I\035=\036};<\373\346\305\274P\332\373\274\244\020\221<\377\362\016=\030%^=\005Dq\274\035\001<=8*\255\274\224\214I=\355\356\363;\257\264(=|\321B=bn\327\274\352M\361\273\221\240\n\275nrD\275\013%>\275[\323\227\274#\331\330<Q\255\371<\267\235\241<\274\374\204<_m5;0\277\265<\203\023?\275\350\225\255<\375\354\341<aq\027\275\024\363\305\274\037\307\274<\357\216(<0\347\334<7E6\275\030\350[\274J;T\275\2641\215\273\035UV=\231\010|<\035W(;t\367\370\274\246-\002\275\030z,=(5I=\322\001\013\275\334\207\267;\007=\270<l\317<=2\234K\275\220}?=\335_\212\274\201\361\\\275\241\347Z\275\025\336\350\274v\311\n<7^9=\247\321\2079\002\341\227<\217\262\226\2743\3676\275\263\261\030\274\233\014a\274$s;=\246\226\231<93\313<\205\264U=\251`:<\234\271\013\275\207\345<\275\237\3466=\222\274L\275\217\024\236<b\301\225\274\363\257Y=\262>T=\364c\355<\"N\034=\200}/\275\261\227N=\363e\014=p\371Y\275$N\367\274\367\242#\274\375\306\234<\352\3408\2752\206\023=\200q\272<b4\323<`\305\017={\217\262<\230\304\'=\256\021K\273\306\203\262<\267\260P\275h%m\274\247o\020\275\373r\261\274\343\030-\275\324\210\332\273\356\002\216\272mQ\204\272y\341\264<\020/\327\274\272\270\335<\033\371\211<\356\232\014<\353\330\350\2747\372\207<z:\256\274/X&\273\227\024H=Oh\215\272\201\313\332\273Lw\256\273+\233/=\276PJ=\0105\'\275\346\273\353\274\000U\243<\362\317\361<\211\341\t<\233\272\352\274\252\347I=\213\211\031=\177\035\r=\271\274)\275\361\307Y=\251\001\355\274\214r\351;{ \005=k\304\376<\205\317\222<\005\306\371\274\253\325\340\274_{Y\275K\320\247<\334\240R<\333\3273\275{uG=\nk\007\275\213\367\365\274\314\235x\274\230C\270\273W\003Y=,\201Z\275\372=X\275\030\037\030\275\022\006\022\275\352\024\225\274\275<\006\275\2755\344\274)\030\311<\200c\257\274\360G\007\274T\010\377<e\307!;\212\226\246<\216\304M=\002=\006\275\324~\021=1\274\035\275io\310\274\305\223\036=c8M=l\261H\275\253\366#=\247\371,\275!;\232\274b\2607\273\352E\301\274\0323>=\212aA\274\217O\246<LC\376\274H8>=1\204\332<\330c]\275\236\266.=\017P\240\273\246\320P\275p\346@\275\327\313\367\274\3463A<\244\026\024\2742\313\207<\354\342/\274\326\312z<\266\232)=\240& \275\352\026A=<V\361<\310rr<\356\305\265\274\220\250\004=\315\320%\275,\231\034\275\365\252==\030\352Q\273*\303J\275\275nY\275\235\014\271<\246\264:\275\\)<=\214\342\256<\006\311\307\272P\\\361<\000\035\252<\301\372\247<\234\336Q=\300\2314\275\202\263\261:\2177z<T\375\363\274\003\245o\274sD,\274\010B*=\370\t\337\274\341\256/\275L\354!=\2436\236<g\322\325<\222\2429\275\214\234X\274\221U}<\267F\\=\203\364\027=s\353\320<\217\200\033=\320\350,\275\331\230\216<\"\243[\274/E\260;\241|\276\273\006\245\267<\271\336n\272s\344D=%\340_\275\375\206$\275I\024\006;\356x\310;\345\251\311\274\340\250\203:B\324J\275\247t\241<e\204\323<&\013\314\274\264g\\\275\032FQ\275\365\002\344\274\014\217\013\275\300i\376;\320\242\336<\246[\333<l\374S=q\372\033\275g\271\203<\341\233\342<\205;\266<B\024\021=\316\345*\273\021\004\355<\340\243\365\274PD\340\271\320\207Y\275\300c\354<p\033R=v\020J\2751s\"=\033\272\377<K7;\275\037@J=5\'2\275$\365\246\274\234\327\333\274\344\252\217<\235\316X<z4L=~2*=\n:\274<4B+=T\375\223<)T\246;\373\237\255<\372\232\227<$F\347\274\372[\354\274\227\315Q=@\212\267<\347\334\013<e\344\373<s\323\334;\031\374M\275\034\200\n;\305\270\213<8\225@\275|\311\247\274\023\366\227<\301\376&\275z\337\242<V\r\014=PC\357<\000\376A\275\257\330\361<r_`<\342\235\013\275\252\207\366<\25469=\271\357\267<\230\212\326;\311t;=\264\224\001=\306\000Q\275\234\375\240\274/U)\275\312\022U<\026\245S=3Z\247\274\251\304\003\275i\037O\275\005{\022=\302\341\006\275\211\333};\360\364:=p\357P\275O\206\035=3\0026\273=\336\257<\236\266I=\257\217\017;2\031\220;\271\002\240;1S6=\211\0357=\246\026\004=Y\202*\275\323\252\r\275\203v\264\273\020\204!=\017\316\000=`M1\275\234\0050\274\322\2451=9\0060\275\224\263\230<\202K\343\274\222_\351\274|a\237<\212\247+\275;\036W=\221\223\222\274\301@!\274\322\032\250<\365I]\275M\024\236;\031\247\355\274\205\3455=\023\300\261\274E\344\360\274\203\356\217;\200X\226\274<\264[\275\246\261\005\275G.\030\275\006-0=:\213M\275\027J7;\317\306\013=g\367\216\274\302L6=\374!Z=\244\020\300\2749\022N\274\032\254P=\315+*\275078\275\266h\220<\236\207K\275\361\223F\275\236\235\310\274b\235\275<\323\002\212\274\026`_\274d\352\335\274\346iX\275\340\021,\275\322;\364<\305\251\210\274\231J\027=~\331\272<P`K=JJ\244\274\373\326b\274\235\255;\275\306~4\275\214k\035;+=\236\274\245\303\203\274n\245\034<_\262Y=\371R1\275\211\243\r<\035\324\023=\376\000\211;z\330\347\274\362\274(\275\272\376\335;\300\206\367<+Q\305\273b{5\275\"\203\356<\031\3560\275\254\232\\\275?\267\010=\356\354\367<\222\206\201\274\354\037G=\\O\021\275p\355\277\274\026c4=F\\\347<\017t\030\275{4\264<D\010Z=W\375\303<\356\026\306\274\004\313\365\274`\335M<!=0=7\342\236\274I\025\r=\332\274\205\274\320\200\016\275\271c\036=k\201\351:\207g,=-\007\272\274\337[K=\301n@=\375\310\243\274\345\366\244\273\023=3\275{\331\023\274|\210==\356\261\"\275\271z$=H\207\022\274\\\200\366\274\036\005:=+}\n\275\211\344\363\274h\212);^W<=\323Z\250\274\325\227\321\271?\361\207\272\230\340>\275i\233\215\274l0%\275\034\276\323\274z[ \274Y\022R\275h\003M<\322\351\275<\307\036!\275\177\030a<\013\3123<\027\240#\274\277\374\311;b\3205=\334\353\372\274f\211\347<\205\001~<\231k6\274}\262\025\275]\036\370\273\271\361\226<\372\254\261<\003\244h\273\003+\"=\004\373D:\274\250.\275==\322<\266*\014=-\237X\275\373\013\263<\354\305\247\274\377\314:\2751\222\312\274~\202V=\325\034A\274\261\333,\275\304\276!=l\207F=j\022V;\232\211?\275v\202\007=\235}\"\275Eu:=o!\025\275\360\316\341\274%\340\026\274R\256^\275m\227\362<\036\217\023\275\322s\254\272\353\214\"\275T\332Q\274}8\320\274B\rN\275D\300>=K\234\303\273\250\014]<\207O\252\271\3038\003\275-e\243<\324\351*\275\306\332\305<\341\265\\<\"K/=\014\007\217\274\271\023*\275A1\237\271R\350\346;z\024\206<\030\236J=v(\200\274\205h#=\336cW=A\211b<A\366\025=\266P\014=9\022\256;E\t\357\274\325\222_\2749\351\313\274\325;\003=\223\257\366<\225FO=\246,U=\037;\373\274\240P\367;E\3126\275\261-\303<\270)\234\274\312(\247<\351\253\270;\013W&=\r<\354<\347\241&\274tM[\275t\2002\275\273\376 \275d\0354\275y\322\025=\224\2076=e\331Z\275\374\014\264\2741\315\262\274\331\2534\275\332zK=\325\370\"\275\326\014R\274<\253$\275\242\203\376\274\t\306\021\275\305pF\275\317S@=`\004-\273\324\337\354;\226#\300<V\375t<\277y\332\274\370\343\032\275gQV<\212\206#=\027\220:\274\037u\033=\242\205\215\274\001\300\021\275<(\033<\367\245\016=\256\373\213\2749bH\274p\233 =\002\342\222\274\270\200t\274\267\220I\275@\200\331<d\362A=a=\351<\344E\374;\014\241V\274\003O\277<\032\001\261<\271\345E\275\230\246\205<\323G\237\274<\251\021;_dP\275\316:\317<\"\302\372<\367\273\311<\016\351\217<*\357\370\274\223 u\274\272\205\354<\255\tF\2743U\013\274\243vF<\332\374\346<\t\235G=\250\034\345\274\232\341V\275\250#g<\273\326\000=\334\347\257\274\222p\272;\212\221\016<\201s%=.a\002\275;\301\027\274 \232\250\273,s\211\274@\331\020<qV\217<\240\177y\274\356\366y\274\035\335\211\274\266R\225\274}\277\216\274\243\204\243<\224\324\027=\243E?<xP^=c\332!\274\233\005)<\222-L\275\033z\212;\r<W=+(A;\307C\221<\312bC\273\347#\376</\256\264\2736\305\036\275\221\033<;d\032X=\271~^\2756\324\340<QN\323\274\233\'T=HRZ<\256\301\021\275C\352V\275\262+X=\266\014S\274\256\0057=\rc2\275uX-=\273FA\275\207^\316<u\326\360<t\t\225\273?\037\036\274m\nc\274\267\340<=\370\310\253\274\205\257Q\275}\021C=\203\203\"\274n7\205\274\221\247\203\274\372\360 \273\342\337\267\274JH\320<8\3262=\255\304.\275\254\357E\275\301g\247\274\321\002\315;9x\215\274\027\244\262\274\013!A\275\311\320\352\274\344\006G=\330\271\254\274\0310Z\272\247\365\r\2744\036\025<\311\274`\274\322\346\017=[{\310\274N\216\'\275\327\207\200<[\370\260<\346\225\n=\230[)=\231\252\035\274\363D6\275\246\235\232<\336\366?<l\365_\274X\032\366<wI\345<\320b\271\273<\375\203\273k\204V\275\tB[=\202\000\231;a\304\240\272\n\332\237\273\356I\215\274\367%\351\272\317L+\275*\001u\2743\207f\274\257\301i<\003\367g:?\361\223\274\256\027O\275\267\352w;8\344\315\273\343\3605\275\240\232\026\275e\210\233\274\3316\225<\227L;\275\027\331W\275x\245/=\253:,=\021\372\032={\244\033\274\302\021k\273\272\007\036\275\332\002\001=y\240;<!\3762\275TEP\275\270\374\035\275\032\3001<\'\227\034\275\013\013G\275a\364M<\251[\244\273\341\230\233\273\220W\342<\357\247E\274o\002\377<\212\363C=\2129\265\274\340\312\023\274\241\351_;\301#n\273\013QQ\275e#4\275/3\"<\261\324W\275\222\006\255\273+F\265\273\023P\311<wzF=<\304t<\247|\314\274Q\r\325<\252b_\275m\355C=\357\362W\275\013d\264<zH\021\275\263P1\274\003\375\302;l\327\307<\'?\227\274A\202\343\274\331M`\274\366&\017=|\231\223\273\215-\n\274\367\021&=$\332\026;\331!W;w\225~<\001x\214<\214\265L9V\013#=\206\314W=x\367.\275h\257Y\275\3605\026\275\331_\027<{\226\210\273\344\246!\274\274\001R\275\245<\013\273\312\321^=\336D\025\275\264r29,\342.\275\205h\002=\002\307\021=\025\003<\275\305\027Q\274\264\0244\275\234*J\275G^\000\275\263\004\025\275\365\304\205\274l\027\216<\357gS=H}/=\005\331\377\274\216]\362<#r\020=o\272\231<\'sK\272\240\233G=\241\373K=\227\0039=\016\333\021\275\316\373\221;\346\274\030\2752\246\330<$\357\244<\216\232\361<\252\243\206<\247y_=\215{L=\263\243\216<3G\333<a\034\351<\022\0363\275\003\334\226\274\001[9\275\356w\221<~\246\245<\"f&=\344VI\275\016\371\201:\247}<=\022\304Y\275}\255G=\'\217\002=\357}\225\274(\031\020=\177\026\277<\231v\262\274].\207<*\331O<\273\034\303<\313\004\236<\272\207\\\275\020\007\023=\033\2542\275\3659\222\273\331:\251<\307\370\331<!\215&\275\344\207J\274~\214 :\217\323\237\274\207P<\2753\263\326<\276\210\342<\037\n\245<\323r\257\273\356eS\274\266\242\033<\211I#\275\205\353\253<\260-\247<\347\203_\275,\330\226<\261\316\373\274\r\274B\274\226\372\376<P\361B\275H\034\274\273\306\3574\274s\360\225\274U\364?=\277\373\026\275\320\3620=\255G\344\274y3j\274EN\032\275\222\246#<\214i\032\275\343w\013=\006z\250<\275\204\326\274>g\032\275\217\367&\275\005\314@;\305\213]=0\373\212<Av\010=K\327\010=\302\3741<\265\3572=\311\377J=\265\340$\275\022&1;\326\315N\275\353\307%<\254B\323<9\347J\275\031\3418=\337\306(<7\372\t\275\221\312\\\273\345\024\021=@\272L=\306\352\343<<\362\014\275\274\304\002:\375\237\r\275\201\2516\275\035&P\275V\256{\273>\205\013\275\257\330)\275\017mI<6K\275\273\032i\337<\237\201\347;\301\032\033\275Y\n0\275\217\323/\275\211f\373<\315\201X<\016\002\235\274i\007#\275\220\227\221<\326\\0<\251\367\033\274G\020F\274*\\\341\274\227\245&=\202\2150\275s\213^\275\337\375B\275\243L\205<\250\206k<\275Y0=\356R0\275\2263\217\274\365\366\360\274\373\201\217<x(s;\234i\\=\263M\'=\224\031\313\272\240=X<\204=T=\017f\342\273\341-\344;A\3319\2753\276B<\215k\236\274\233\314 \275\272\001\357;\216\312\316;\357\352\215\274\365\304\305\274\231\3579\275\231\276*\275Z\326\227\273\001\364\244\274\346w\237\274!\224A\273\373\227K\274R\034\021=o[ <\2127U\275\324}A\275\201\004e\274\331P\340\274"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
