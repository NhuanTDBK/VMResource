node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2140
          }
        }
        tensor_content: "M\207\262\274(\271\354<z-\344\2744i\037\275\361\321/\275\317/n\273z\370\374\274?\036\022\275\232\2441=X\030\277<fp\233\274\317\026,=6\334\033\275t\251.\275\274%\352\272\213X\006\274\322d%\275\352\354\027\275\032\025\272\274a\0257\274.\3732=#;1=5\237\277\274\010\204\326\274\324\355\2079b\273A\275\206o\323<\3406,=S\023\334\274j\247A=\3263-\274\360\343\"\274lT!\274\367i*\275\350\010z<gL\356;v\r\275<\210J\010=\240T\270\274N\351\212<.c\245\274\314\315\200;\371\230\204\274\372\027\351<\020\332\325\274\037\203#=\3416\366\274R\336\235<\225\001\334<T>{<\261\300\257\272vO\2129F4\315\274\366\274\307<\275\347\202\265\177\372\372<\260\362\021\275\r\227\023=l\222\366\273\311\371\262<\335\227k\273\210\033\353<\367^\370<\305\344\362<\024F\237<\333\013\302;\215f\271\274lo\341\2733s\302\273\245tS<Uo\305<\306e\023\275\022\017;\275\376\306U=\3058\003\275X8\016=\265\370\213\274\021\037\346<\306_#=!#\267<\321bq\273\272G&=GT;\274\222\354\324<g\000\"\275\240\016W=k\317\334<\333\256\277\274J\030\201\274\332\236\327\274\240`O=\311\311\023=\234\026(=\364c5=/\266R= \2228=\305w\032\275\375\037\263<\002\201\031\275\232e;\274$G\007=\257\320\361<\\\260\270;b\0054=\362z\352;\317R\220\274WK\007\275\200\377<=%\3446<\240,\350\274\351\236.=*\3153=\'\024\023=6\221\303<\341\333\343:\264\005;=\007\373\036\274\'L\036<\332\245;\2758\210\351<I\205\205\274)\'\246<\013\023\255\272\201\3150=5\345>=\037\254\305\272Q,\013<\225\373\343\274F\271\035<\001\245T\275;\323\205\274:@\275<\241,3=\n\361\201<\253l=\275\214\277O\275\302r \275\2170\353<\276\343\023\275\n\tt\274C\340\221:l\250\022=\0338\223\273=d\240\274\325\250*\275:\330\364\274\3610\361\274\365[\024\275\345\202&=\241?B=\303\311\033\274\004\226\323<\350\036\215\273Q\005\003\275\r\313\214<B<\352<\230\362\223\274(\020\254<\260\r\367<\300\324\326\274\323\t\223\273J\030\246\274\317\231\000=ZJw\274\013\346\333\274E}\216\273\177\374\314<i\002\236\272\300\257\t\273D\\-\275\336\220\031\275|\331\033=\322\0262\275W\346O=\356Q\260;\273\200\314\274\367\021C\275\372I\365\274\2608\373\273\256\324N\275.\346\023\275\rM\227<N\260\201:LV\237<\332\227\210\274\3608\260\273l\323\241\274\347\232\037\275#\206m<\263\221T\275\250\032?=5\310%\275o\310\035=\024\326\242<\300`\377<\233\226\343\274K\203\031=X\244\014<\214uP\275\242\226U=\355\223\363;@H\367\274\202\311+\275f\307P=2=\2129EXi<\325\310t<A\317\256\274\233\322Q=\0046\032=\023y\037\274\224\267\217\274b\353\035\275 \003\n\275g9\n\275\013\304_<\363\236T<\361\327\301<\231q\251\272\240*\222\271\257\022+=w\376\226\274`\367\"=#\014\230<\362j,\275&2!\275Y\221\237\274,\230\236\274\035\031\346\274\326zx<8\320\t=u\273B=\001\335\343\274\026\\5=,\201E\275\342\322?;\201\266-\275\211\250T\274\347\207\305<b\004!=\245\3549\275\234R$<\233\177\003<P6\377\274\023\211\026\275\371\275v\274,yE\274\333\037(=c\204\311;\221\305(=6\203\310\273\016\261E=2b\244<t\306\n=5-\256<\207\006\245</i\005;\23320=\375\264\t=\032v\311\273\000I2=}Z\237<\330\220\004\275\232\230\221<\302\356\266\274 \347\010=\254tQ\275t\221,\275Z\270T\275\374\245\276;\346\365\360\274\336\371\276\274`\247\235\273\230\001\255<\332Vn;JS\265\271\225\354w\274O\237\006\275b\254\362\272\246\375\013\274nB\333;\035Hm<U\017T\275N\361_\274\003O =J\272u:\001Q\033\273\014\200T=:\3616\275\263\250\244<p`<=\332\240w<\007\362\222\274\243\351\261\274(6\352\274\210\323\000<o\004S\274:\207\321\274\357V\036=_a\001\275\240G(\275M\003\017;\310U\033\275\257\000\013<\324\n\315<\345Z\021<\207\003\207<\227y\205\274\223\3112;\001\352\020=\203{#<\r=:;\032|J<\270\345;\275k\210\025\275k\362\033<\223:\211\274\340\000\017\274c4N=:\205?\275\370\021?\274\203\241\224<\352[\025\275.G1=\346\001T\275B\3274=X\340\013=\017jq<E\0247\275\016IP\275S\357%=\230A\207<\327\216=\275\351s\030\275\332\227n<`\313\034=f\032V=\000 $\275\333WR\273\207\030\016\273\304g\014\274\010l&\274(E\035\273\364(R\273\242\273+\274\264-\001=\310\266\016\275\3045:\275\214\332&=o\0004=\262\231)\275)D\033<\252\nW\275\212\026E=CKA\275N8\034\275\254DR\274\202y\346\274s\343\005\275\355\247\r<\t:\r\275=A!\274\356k\260\274\316\257\245<\211\r\010\274\033\355\024\275Kg?;\377\\<\274N\320 \2752\270^;E0H=\177\025-\275af.=\367\257S\275\230\231\356\272\247\316\340:\347\230O=\323\302~\273>\007\204;\235\375\003<\237\346\330\274\223r>\275\342|\3729\322\271{<p\217\341\274\3647\021\275\236z\025=\323\277\016=\262\206[<pH<\275\'m\271\272\272\303\335<\365j\200\274\206\312=<\247\002O\275\373\322I\275Lz2\275&\342\303\274*\033\t\274}\225-\275,\020\022\275\r\033\334\273\'\271\n=}\001@=\326\343\325\274\376\264\325\274\016\254z\274]a+\275\0277\240\274\025\323\345\274\024\246I\275\035YD<\340\333.=\271\r\363<e\373W=8$\322\274\244\034\342\274\342\200\374<\030\254F=\367\231\236\272\271=5=\206F@\275\r\027<;@\377\302;?\225\035<n\237\263;~\205\026=\256l\232\274\034\320F=;q5\274d\214\250<mH\232\274\376A\036\274Gc6\274r(\367\274\374\305\024=\324ZC<\326\344\006=\363\232G=\030\300\260\274\243\311\274\273M\035\262<x\342@\275\017\t\364\273\227\320\003\275\002\010\006\274\200\310\306\274\255Q.=`1\000\275\037\322E;\271\010\346\274\272b\303\274\224\327\303\274\014\"\377\274?\225I\275\244A5\275|\273\242\274\225\201P<M\266\201<@\251&\275\253\355>\275\223\t\242<K\272\330;[-#\275\t\227n\274\225\224Q=1\021\360\274\355\t\352\272l\247$=\356`\362<w\342.\275\202\244\r\274\230\334\221<\022Y9\274H\005/=\206\215\335\274i}\002<7\311G\275%\240\200<\230\217@\275^\257_<K\357I\275Kp|\274\376\214\231\272M\253\367\273?\3646\275a\3138\275\201d\030=a/I=\346OA\275) 6<R\250_;\340\2705\275\'7\201\274P\035\023\273@2\033=AiL=\272\371p\274\363H\203<H\365@<\373.\t=}v\020\275$\004\346:9\232\347<\376\200+=I\343\313<\275\343-<K_\005=b1\276\274\342p\311<\311B\021=\250\001\233\273\"\350$=\321\210\344<\252h?\275:7\227\273\001\302\3459\355>!\275\010\024\020\275\235B\372;\221iK\274\\UR\275\365C\330<\301:\340\274\373\231\217;\2165\253<\237\203\007=\217/Q=\204H\2069\212\315+\274\252W\034=\371\377R\275\ro\336<=\315\203\274\350\027\014\274\017e\317\274\237&M\275+cJ\275\2631_\274\032\333\022=T\034\"\275\223\363#=\256\025!;gK@\275\016\351J\275\255\376+\275}\310\311\274\354\234\270\274\34739\274\022\322\362;\n\375\022;\026\206\376;\246\214\026\275\036R\332<\211\\\032\275{\216\014=8\265.=\345\216\003=\002\232;\274\242\243<\275\001)\252<\2405\327<o\254p\274\350?\245<\377\237U\272\212\212\260<\212sY<G~\227:\337\360\344<\334i}:\330\241=\275fh\246<[\224\333<\372\273\025\275\354\337$\275@\365/=\362R\306;\000\371\260\274\370\317\260;\261\354\034=\r\005\363\272\333\263\241<8\250\"=7m1=\345\364\\<xb\026\275\304\376O\275!Bj\274\3251)\274\177\352\261\273\\pZ<\225\'\007<\031\343>\275\2407\341\274\266v\347\274\326\350B=>b\322<\2758\303\273\2301\025\275]\025N=*\000\025\275:i\";B\251S\275\255\242\033\274~+\007=fZ\362;\306\027O\275\226\0033=f\310K=\340\356\036=3a%<%~\357<#\365B\275%\304\244\274\373\327\"=\351\255\354<\353\021\r=\010\t\204\2749\243\020<^\244\325\2741\215\215\273\344H\256\274\002\023H\275u\034\231\274\2569\005\275\301Yr<l\322\021\275\215A\356<\212 \312< k\203\274U\314=\275\213\316\026\275\022\234\375\272l_\001=\226\376\274\273\305\313\003=.\350\034=[\267E\275\2118-=g$K\275\363\037\252\274\321_\231<\301\t\336\273\263\262\013;.Z\264\273y\210\221<\270\255\001\274\220\\\217<\002\275\030<_\\6\275}\0171\275\'-\016=\236dF\275\n\254\314<E,\031\275 \233\024=\000dA<\246\340\236<\376oP=\256\243z:\002\351\000\273d\326\334<\244\330L=\355\255\307<\031A\366\274S:\300;\230\321L\275\273\223\252\274-\366\326\274\027G\351\274\2039+=zP\027=\232,A=2s:=\333z\253;\364Z\207\274~|\222\274\213\302\r=\342\3577\275\372\326 \275\'\232\337\274\217J\211\274iN\251<\214\002\323\273\337\342U\275\235\262\325\274\221b\034\275\200\340\016\27567\334<\251\346\200\272\021&\020<\340\'\250<:H\002\275\303\034\r=:Q;\274(IS:\017\nA\274g}\023\2757%\376\274\350\315C=\232\262C\275 :\300;K\305I\275<\272G=\275\264\325;d\344B\275\210k\013\275\265\277\277<\010\t\251<\036\357D\275\204\244`<q\233@\275\241T\317:\031>N=2j\270\274Oo3=\300\250\336\274\223.\374\273\371B8<b\025C=\215%\005=\266=\215\274\337\302J\275\317\251\207<eD \275\200\264%\275F\230\022\274I\242\032=\365$T<\315kB=wi\030=tw\220\274\031\244*=I\307\265\274#w\356\274\201p:=,1S\275v\341Y9\361dH=\252e:<L\262\277\273\234\355\226\274\353@O=<9\251\271-91\275\256\314\037\275\271yD=\221xL=\256#T\275\272d+\2755\336R\275]h\006=v\027\264\272ukj\274<$k\273]\322\357\274\263\243\353<u\'\230<\306\346\341\273|\2362\274S\220U\275\322U\023\274\315a\237<\034R@\275\300[\013=:\"\003<\356\327\007<\272\203\354\274@\033\002;\317\245:=[\2209=\343\027\230\273\021\334\221\274B~\333<\235\203$=\272\260.\275a\355;=\353\010B=I\242 =\000\265\344:d\245\207\273y\373T\275\005\035\020\275\335><\275U\261\344<\360\304\037=\347~:=\302\237\231<\225\t\234\274\205\027\230\274C;\332<\236\025\027=C\212\260\274\\\266\242<S\325\310\274\332(L=\2557\247\2747\267\347\274\266\241\210\274 !\301<\344^\325<\023C+=R3N=a\331\341<5\211R<9\005X\275w\265\335\274\177`\207<\365\357$\275\311c\347<g\317\020\274Y\232\033=\215\260\036\274\303\224\277<r\243\345\274\365b?\274\344\n9\274\026\366\031<DG\000=-FN;\260\220\266\274Z)W\275\244\310J\274\262\377 <\247i3\275\017ON\275~<(;\334P>\275\265\3358= \230\030\273\351`\006\2759\331\277\274\305\233A;8\316N\275\037\223\327<\251\030\023=\344.U=\037\222\"\275\021\351\"=\305D\214<\331p\302\274c6\313\273\001\010D=\027V\340;\\EN\275\027x-<\240\346\236<\246\336\003=\367\203\"\275\014\\\205\274z\025\023=\310P\016=\231\242\261<\352\207\323<\261\277\013\273\r\202L<\340Q\355;\3332\376:\322\016Q\274\343#\031\274q\345\034\275j\014\023=\204\244b;D\021\217<\013\335\t\275\001\3076\275#\016\251\274\277\255\255<\217\332I<\223\232K=\004\0165=\027\257\326\274\240\037\372\2748\3319=P\014\356<\0371F=\251\3716\275J\237J:r\223O=\273\245\275<S\000\330;\2109\374<\223\3447=\317\3130\274\362C\034=N\276=\275Dq\205\273:\3752=\222\331D\274\323\255\014=\017J\377\272Y\240\027\275Z\316X\274}\231>=\313\2305<\032\260\004=\014\322@\275@$3\275]\025)=\200\352*\273\213\202\003=\334|\215<\270d==\027PP\275K\220O=\311\316\246\274\3704H\275f\273\372<\347,\227<\033\242\r\275\032^C\274\361\230\034=\016\235\230<|\375\007\274\216m?\275&\307\032=\361\266]\274\340A\001=f\002N\275\300u\245\274+\352.<\ne\354<v\237\212<\340\321\000=>\231\373<3\266\004\273?\375?\275z\005\307\274]\027\n\274\227\265\030=\264\3033=/\322\r=\346i\016\272Xs\030\273v\301\021= \375{<\226\362\362<g\300\014<2p\035=N\270J=!\366\325\274~\360\003\275!7\232<$\035\330;S\022u\274w\300\223<\322) \275\275\312(=\221*\374\273\366\273(\275\374\013\017=\265L\257\274#0j<\326\355\216<5d\034==\241\210;i\337\2418\237\024L=J\324k\272\224\330\321\274\213H\215\272\347P\n\275\222\206\302<\355\311\356\274\244\260\010\275\250K\310\274F\231\034\275a\201\'\275\206M9=\301gt\274\2737\017\275`L{<Y\232\035\275\246\364m<+\212\300\274\013\377\032\275\224QC\274\034c\017<\236\360\364\273ahr\273\360\361\006=p8\016\275\006\027\273<\206QX=\356\363\216\274\2346\223<<\177\373<\376&\230\274)\002?\275\231\234\007=\216I\004\275C\301\003\275\027\2234:\004c\006\275\006\252!=\220\334\035\274\217\302\213\274\373\377\273\274\337F\246\2749\316\265\274\375e\264\274je\277<$\234\203\274\013\256\324\274\000\220b\2742M\010\274\014\'\030\275E\357o;42\257<\330\304N=\345W\032=2i\305\274\264\320\266<\367\206R=<k\266:\005\303\032\275\360d\031=\217\246\232<\021\272,\275qP\343<n\202\227<\304\231\307<\203QA\275\0362\224<:w\013\275?\257(=\257\330N\275\32106=\324@\233\2732T0\275K\242\013\275\t\021\032\275\023\276\034=%0\353\273\327I=\275\377\253\034\275\262\332\351<\263Z\020\275\'O\n<m\261]<$\240\024\274 \233\016=W|/=\276\237\004=\240NN=\000\004C=\000\272\212<\226uc\274\211\267O\275 \031\000\275\204\013\341\273{iT;5\2218\275s53\274/\177!=`A\031\274(\331\033\275)\362\241<\227\205\016\273F\212\271:\t\237\317<^\345\371<\242^X=}I\335<\265\000?=\341+\027\275\312\276\212\274\020\257\336\274\333e\250\274\331\2600=8\333$<\030\3031\274N\030\036\273\354\337\022=\265\354~<\rnF=[\036C\27518\253<\036;4\275\271\221\230\274g\327N={)d;\303\212\322\274U\237b\273$/\002=\265`\t\275\2670\301<I-u<Z4\242<\327\332&=\005\t#=@\251\263<#\216\311\274(F\324<\200R\r\274gM\315\273]\312>=8\200\n\275\355\363\205\274^\020g\274P\204\006\275G\215A=t\025\226<\265\330\264<\366\321\261\274b\037F=\027\344$\275|1\r=\263\007L;4\317i8\301e\200<*\240T\275\032\200\315<\317\211\314\2747\331\002\275\0347Z\274\206\315C\275\250B\224\274\277\000F\274\021\312<\273\017\342\246\274\001B=;\226>\010\275E^\3049o\3779<+|3=\3551]\274\022\t\025=Ex-<\332$J=\212\261\304<\327\033\r=\006\014\374\273\233\333\320\274\316\305\353;\243\370\273\272\323\333\345<@\243\223<\234v\264\274\256\315\256\271R\010\301\274vd\300\274\231\346J\275\252\336\211<nV\235<,O\010<=\243\265\274\001\275\007=!v\034=i\256*<\225+,=\214s8\275\0363\036=\327\351V=\r\354\370<.\240\013=dP\002=\027\223X\2741\311\200<\r@%=\346\225\006\275\356\360B\275\347\204\020\275n\307(\275\213\362\352<|\225?\275\010#\355<\255\262\031\275\266\355\034:\372\256*=\307}i\272\235^\033=\000D\270<\264e\025\2754\003\336\273\313\253\226\2733>l\274\347&S\275X\351\"=0\364\033=g\315\035\274PAU<\030\210\027\275\335M\207;Df\'<\364IA\275\320\356#\275n\211i<\'\231\305<|\366 <~\372\236\274hQ~<\3603\323<l\242\001\274S\264L=\\\254\200<\200\034.\275\021\222\007<\226*\224\274\264\346\275\274\340\rX\275\276\275\327\274\241\346d<&w$\275f\367\265<\216n\017=i\315\200<\223\340\003=\235\3617\2741\267\365\273\252Q3\275t\001C=w\001\275<\267\322\215<8\255\355<\2209\373\274\313\026G\275\321s1\275\304\375 <!\322>=+\347\316<\027\376\035\275\245a\205<;\336\035;0Q\030\2753\235\314<\214\347\351;j\331p\274\352\362\324\274g^\243<\350.\340\274Qh\003=s> \274\3264\203\274T\001\262<5\223\222;w\2748\274\376\344\344\274\316\2771=\375L}\273\327WB=`\033\030=\357\200D=\244\031\201;F\365W\275>\037S\275\375*\032\275QjL=\210\037?=\267\377\313<7I\025\274\234}@\274\370\217\375\273LX\324<\370\345\253<j\311U\275\023\221\204\274L\350\016=K%\327\274\354{)=Do)\273\253 ?\275N\332\232\274\237\241d;\315\236*=n\340\260;\365\365\225\2736\210\375<6\230\207<\236\241\253\273\214\333C=\266)}\274\224\010\255\274l\201L= \3734=Q\335u\273U>\3469\330^\035\275\010d0\275\275\254\030=j\3200\275\346K\340;\312=X=\256HE=\006\333\261\271\225\006\374<x\350y\274\022\024.\275cY\031=\244\372\367<\255|Q\274\021\353\366\274\004\221\001;\346\024\n=>\277\203<R\316\000\275\233k\'=\311q\"\275\312H\376\274\231j\027=0P4<\017p.=\221\\l;F\303\274<v\214:\275|\363D=\225\342\024=h\315\345<\316\312\200<(\210\213\274!\365\243\274\273\370\220\274\236OV;>\3172=$\360\363\274\327\232\032\275}(>\274\223\247,<\237\3331\275\'\302\370\274\254\252\333:@-H=\242\251\227\274\027\204\317<\003\262\027\275]\231/\275\301|\005\275\0011\n;\245\354L=\0109A\275\311\217\005=\r\244\222\274\206\203E\275\251\335P=ah/= \tN<d\305\022<\001.Y\274A\327=\275\t\371\361\274\232\224\360\274x\355!\275\357\313\003\275\220\274d\274E\354\026=\325\264<\273J\220$\275U/M\275\313\363\013\274\031\241\265;\255\021\361<P\341;\27547\014=\322X\021<\306\242\301\274J\'\025\275\256\0309\274\371\314H;z\205]\274\267x<=\355\250\032\275\357\237I\275$\353-=ITG\274\245\020C\275l\327\342;Q\n\010\275\241\346I\2754W\213\274\2115\007=\263\3627<\302\373\023=/\247\375\274\210`x<\035\257:\274\353\362C<Y\261x\273\304\245}<\rW;<\005\231\302;z\256\240<\036\234z;\"\322\275;\r$\371\274\003\262\370<\222M\031<\222\025\323<\353\254\003=\360\003f<^\255\354\274\235q$=\230:J=\026\221\036\275\032u\233<\270\336\010=\014\026M=\037\0138\275Z\2609=zx\213<7o\010\275\304\261-=\351o`\274\301k\356;\311i\361<\273`\037<\304\336\215;\364\217\002<F\360\017\275#\347\313\274y=\317\274%\357\210\274\364#\317\274\334\305C=0\263\355\274/\206\022=\361\232>\275\372\305\010<\227[\357\273\371\204S\275Q\214\232<.\3547<\031\322\261\274\002\303\276<\3205\'<8\354 =@\220X<\263\305\222\274)\020J<M\\\276<\201\2339=\303\273\022=\027)\251<V$\016\275\n\242m<j\242\365\274\221\357C=oa*\275\245\033\'<\331!\345<\014T\t=\035\211.=6\030l\274\345\262\241\272\267\353M\275\353\022?\275\344\256\304<\361BP<\343\031p<\325\034P=\017\324\275\274\360y\203<\362\273\315\274\274\204\347\274\303$#=C\003\361;h\350\027\275\225\305\017\275\374o\253; \033\022\275z\344\316\273\361\253\013\274\017\021\001<<\200\305<\002`\251<O\371P=\322\371c\274P\022\260<r\031\032<NU&=\344\360\223<.\022\265\273\360\231 =\324^>=P;+\275u\337\032=\017@\272<,F\023\274*\006\010=\316f\234\274\005\361\203\273@.\266<a]\022<\266\017\n\275\371a\226\273O\003$\275\225c\201;\000\034\037\275\n=d\274\354\353+=\267\n\224<M\000W<D\375\n\275VRK\274\351T\241\2738U\324;\375\360L=\343I\340<0\311l\274\246\324\001=\350\341=<8@1\275\231\257\027<x\305\306\274\007\024J=\260\302P=/y\301<\014I\214\273\273\360\3219\202\014\274<\334\305e<\261\204\363\274k\023\013\273{\223\253\274\215PI=\200\360\357;\000\270\226\274d1*=\202\353U\275\353\307\366<\361$\004\274\003\023\275;\226jQ\2752\353\363\273=\177\023==At\274}\307d;\3210\341<\303\r\255<\r\367\324\274\333\246\360;\014\275\000\274\277d \275\023v\213<\230<A<\213Z\014<1\356\025<\346\037\005=d%*<\274_\221<\202x\215<\002\267>=\222\177\333\274gNd\274\200\211\373\274\273\324V\275\272\377\007=\342\000[<\200\250/<cm\221\274\266\276\005={\356\016<\342EP\275\025JC\275U\210\336<\037\245\204\274$X$=\307\342\026\275f\n\231<^\340\343\274\236\3317\275\254\314\366<\323\002\256:\370\351\r<\\(0\275\241\244\275<_\235Q=\n+\264\274m^O<\306\203\363\273\302\023\255\274\317)M=\225\2248=\361%X=\340\352\r\275\003T\037=\267\025\267<X\322\224\274\365\r0=\034\016)<h\332G\275R\213\223<:\004\037=\252\321\006\275\033x%\275\330K\013=@G\261;\326HM\275\024\314\214\274\024l\326<\n\233\216:\361d6\275`7 <\024\330\030\275\372\\\027=\244\264\017\275Dp\002\275N\266\311<\033\327\177\273\247\302\376<\273wJ=\031\370f;\035_\020\275\300a(;t\307\332\274]\325\020\275Q|\006=\021\251_<(\361\030<2\001\220<[\246L=\361}W\275\031\331\267<\262\276\217\274\0260v7L+4=;\315\363;j]\271\274\306\332O\275\232\255\324;+\216\360<M=\020=C\313\364<\233\3122\274\377\213+\274\033B\335\274~Zu;\213M\n=\3238\022\274q#G=O\316\014=\031,!= \365Q\275E\3626\275\363\231T=\222\347B\274\017~\023\274\326{!\275\206\033\304<,Wg\273\206\373\353\274\177e\332\274\370\333\t\275a\305\371;\372\236\244<n\303\377;_\275F\275\325\367\263;*\202\220<x;e\274\017\260-=N\016\320<\317h@=\314\027\000\275Po\226\274\001z\336;\245\353-\275]\200\205<a\263\224<\252\326\r\274\301!\013\273\020\240S=\327\321\323\274\251:\363<5=G\275x\002T\275S\356\317\274\010\332F\275\357{==W\016K\274^\360\236<\216\223\0268\021\371\315\274\200X9=\033\343\020<]\374\031=\365D\344\273\026\377.=s_\031=\262\3016=\345\332\315<b{r;\367oZ<g\371-<\033\n/\275C3\351<~\206\216;l\201F=2\307\325;\253\310\344\274\330\230=\275w4\372<\331\r7\274\331\231\353\274\361\260\243\274\217\357\350\274\263\216\217<S\374\200<2N\326\274\244r9=j\341\376<\\\373\243\272\276\006\020=\275<$\275(]N\275\340W\271\274\232\267.\274\t\3046=\234\002F\275n\004\360<\016y\033\275\346>\034=s{\233<\301u\'<\345)\026<\214\215\311\274\243s\336<\305\276\364<y\206\322<\352\327_<3\246\213;\337z/\274B^\010=G3\022\274/y\032\2705\232\t=\004\177\303;F\300\322<9\014\243\274a\335$=\354GO\275\021\010\377<Y\360\034=\223_?=\267\274*\275@\225E\275\334\026;\275\\\034L\275\344{H\275U\207F\275\370\006\352<\315DV=\221\304\005\275\213\374\276<\271Z*\2733WF\275\244\376\326<\262VO=.+<\274&\333\206\274\223Y\004\273\341\340O=\310\324\007=\357T\246\273\022\301B\275\237%\016=3\235\310\274Z\330\255\274\3659D=:\007\206<J\322\315<\326\374G=\361c\351\274D\226\341<G/P\275\027Q =D\322\250\274\027n\230;m\026$<&\000}<\312\353\335<\207\0002=\023\260\023\2746\177d\274\233\237\244<\230\325\025<P+\343\274\354\335\224\273\010M\021=\250\273`;\211\312\021\275:\273\033\275\237\267\005=i\022\023\275 \244A=\225\241&=CG.\275\314I\000\275\260\254\r\275\256\334+\275\214TE<\343\273\275<\273\022K=\262?\325<:5\n=/\274\376<?\310\255<\262\016P\274\351bp\274j\214?=\'fE\2744\222\005\275\242\370\327\272\006L\037\275e\3348=\007f\022<\263-\034<\r\333\023\275.4\275\274\234d#\275\036\247\006=|I\321\274e(\232<\231\260\031=>\267\351\274p\r\245;\211\346#<\317-Q=\330\0067<]-\r\275\220,O<\337\312\202:\344\0068\275B\257B<XtR\275Y/\025=\275\375A\2748\005)\275E\350\232;\274\346\013\275}H\035=\246\272\r\275\325/<\275;\323\363<\211\344<=\335\2658\275\207i\007=\241\357\347;\262\312V=\314Z\271;\273}1\275\0320&=d\257\240<]\255C= _\201<\266\337\255;\314\226a<m\257\241<p\354\271\274$&%<\363\365\313<k\344\032=\334d\014\275\331V\003=\005F\343\274\266y\323\274\221\231S=\027\240\020=CSW=[\376\r=z\335\035=\323\"\216<\320w\234;\300\317\212\274I\006\001=|S\216\274<Y\204\274\200\321\351;7F\007\274\340\221\353\274\203\361=\275\224\177\"\275\013\347\001\275\006\3615;\3260\014\275J\245L=\364{O=\301\337G=\006\241\234\273>~P<1\214\233<sM\367\273\255L\322<\207\321\023=(\334,;\274G\234<\242\030Z\274M\014.;\276Fq\274\205\225T\275e\230e\274P>\006\271\235-\032=\267\327\342<\265\243\311\274\332X7;{\377/\274a3\273\274\236\327-\275\020\362\265<o\224(\275\241\264\311:\357\261\006=\313\013<\275\336\232\'\275yq\212\274\373\343U=f\205;\275\331S\222\274\307\224\223\271\220\034\005=\" \031\275\"$<\273=p\206<6\'\336<\237\177\325\274O\272)\2745\343:\275\376\005\001=q\264\024=\252Q!=\007\327\253<\030?@=\001h\253\274A\354\377;\033\216\310\274\366\325\346\274\275\3064=hr\236<\346\277\023=s\245\262<\376\023\242<\022\210\034\275\013\023\260\274\356\3559<\331\332\313\2746\377&\275M\001y<\225\320\366<\322\032\221<]\327\210\274\214\262\323\273o\313\033\275\321iH=E?;\273*[\321<\331\342\006<f\016\372<\245\331$=\223\026\016=\264\333I\274\003s\246\273\"\370,\273\014\264\224\2742Z><c\333\003<\257\356-\275\216e\3449\213\021\n\274dF\275\274\312e\376\274j\034\225;\276V-=\304\274\025=2U2\275\220\330J\275\3716B\275\375+\007\275\314\242!\275^J\352;G\250\306\274\014\004\354<\222\260\231<\315\344\222<*\211\016\275 \323?=~\344~;\331\354Q\275\340\356\024=\020]3;k\371\276<\306]\376<U\207e<\235\205\021\275##\253<\006\352\315;\207\311L\27581q\273\334\230\001=\374\315\220\274\366\302\366\274\037+9\275x\313\027\275i\243\003=R\221\230;\330\315.;\307qV=\346\260\021=\302A\273\274\332\327N\2755\360W\275n9\335;\273\362B=\n\252\032=?>\257\274iVV=\342/N=\0221&\275\246\363\036\275d\327.\275\322\353B=\014\017\261\271\333y\322;\326\266\204<\345\0028\275I%&<mL\037=\323\310\033<\003A;=\017\227\275<\203R\220<z\0169\271\242\030\220\274z\332\303\274\2423\324\274\000\304\300\272\246X\t<\337\256\022=\264\017h\274\213B\\\273\273*\037<~:\300\274\310\n\231<\\+\n=\203\'=\275\210\361,\2758\211\212<\305\301\255\274\327j\023=\317v!=f\023\364\273t\244t\274\211Z \275\030d$\2754\247\306;u\214$\273\\\2279\275Y\205R=\315\030\r\275\211-\t<\0101\234\273\342\216\006;\002\244\010\274M\002\250<\261\275\201\274\357\017\r<\335\330*=\252./\274\235l(=z\200^\274<\350\n\274\210\337\370<\246\370\252\274#\353\200<\361\251\275;\231r\323\274\273q\016=\007\004N\274(\327\304<V\251?<\210;)=\2366&\275\261\245\'\274\253{\032<L=\246\274\364\003\264\272\341\350.<\3644\375\274\254\223G\275VL\010=^^%<\213\310\024\275\247\240\023=\221\336K\275\363\233\032\275fu@=Z\265\001=\275f\033=\231\275E=\317\232\014\275\034\210N\275\310LS\275\3422@\274.\0246=g\205\310<\235\007\243<\304\006W\274\025\010*\275\024\303\233\274\335\271#\275\213\262\227;\270t.\275o\220\021=`\247\032=\271-4=\264i\025\275\265\241\236<\322N\253\273\361OE=O\216\253<\275\367\t\275\242z\236\274\210\355,\275\333\336\010\275\\\010\037<\te]<\311DL\275\322>\222<\247{\021\274\274w\211\272\367)*\275\247\002\000\274$C;\275\316\360\305<\215\364@<\311#)=\305\272N=@I\013=n\2651\2757\244*=\372\236\013\275C\325\206\274\312\017.\275J=\n=\037O\027=\365\263\353\274\3745r\273[\225\373<\327<\302<\326ZH=F\342.\275S\0161\275/\376\023\274\332cE=\266~S<\310\352\216<c\362\035\275]\273&=\275\2450=H\364\203\274\3409\023\275\024\3072\274\332\203\025\2758\021\025\275\337\2537=\323_\247\274\004|\257\274\315\344Q<R\375\260\274\332\376\214\273\306\2617=\305\362\307\2742\356\365\273\007\264\301;\250\375U\275\r\013\001\275L08=f\005,=\202\313*=y\0173\275S\342D<\230\037\363<,\325\361\273t\031\224<\374\237\351\274Q85\2757\271R=e\261x\273\255\335V\275\300@9<\303\206S<\244\024\245\274T\276\030=\355\351%\274L\253;<x\027\354<1\216\260<\236\026(\274\326_L\274\353\362\r=\007\306\242<\241m\010\275\227\3664\275Y\265:\275Oz\241\274\227\363\034\275\005\214+=@\315\211\273r\024\203:<\332*=\267\0065;\202/\232;\37762\274\n\350\266\274\r\273)\275#8\207\274\310F \274\353@H=\252\330T=\210R\2509\240\310\033=\356w \275\3079\327<\020\206\n\275\375\217\\\274<\367G<\372\311\315<o4?=jzx\274u\327\010\275\026\222\310\274*\017\334<B\275-\275\376X?=?\270V=y\212I=\243D\252<o\315\301\273/wQ=Z\002\020\275\013\323\272\273VL\306<\344\202\237;t\206\315:E\323\010\275wJ\331\274$`q\274G\345-\273\033~D=\304N\373<H\313\002<\366\373W<J\377\177<\201\000%\275\250\244T=\201E\243\274\335\316\023\275\r\271H=\217\325;\274\226\276$=\242\177)\275`4,=\206e\345<fC\217\274\341\006%\275s\233\035\275\035m\214\273Y\261W=\226D\322\274\036I\244\273\005\005\236\274\024\352\002=\255\212\025<\224\232K=\002\2373=&%\253\274\036\230\006=4\261\016=\327\335[<\215I&<\0058\312<\311\324\013=\022\332\336\272\206W\274;\242E <\232\246\215<\370\272.\275\222\242l<\305G\021\274Z\"\360\271y\324\321\274\237\213\002=\242\177D\275\036\214\357<\266\002G\275\274\270\003=$\2614\275$N\320\274\026d\023=\3773Q=J\302\025\275\362(\001;\034Q<\275\235\317M=\2309\'=\0370J=V\372-=1>P;2\264(\275\264\311\025\275\252\212\005=\362\020.=Kp\362\274G\250\245<\313\240\312\273A\240\032=\312\371!=J\307\331<|\304\002\274j4\377\274\327\324\202\274\347(\342\274\325\345\037\275\013\360\"<\357\300\020\275\276\325\257\274\007\022\364\274\214z\024=\000\034\215<t2:\275\305m\245\274l\360\264\274\257N\r=?\350X\274|J\006\2756\300\244\274qt\014\274\202\260\036=\010\331\357\274v+\273\273\035n9=\375\254,\275\263\333Q=\221\244\020=[\r\335\2746VT\275\215\3517\274!BO=\032\275\375;\002\237\265\274\237EE\275E\362\256\274\265\250\300<\266\034\343\272y,\035\274p\311\273<\330\264S\275\3321 =\2526\3449\244\023\257<4\350\315\274\272b\317\274\024\312\304\273\323\325><\025\264\025=DK&\274r\316\330<TiG\275\033\267\325<T\223\025=\244}W\275\352M\352<m\205\225<\006Vl:\3158\321\274V\274\364\274\245\001\024\275\277d\306<\003\026\t\275r\360\006:\205\212\n=\216\321\025\275LU\222\274\007\261\256\274Q\260\210;\254\002\327\274~\301\'\275\335\242G\275\3245\220<Mk\267<\000\004\004=\006\"D\275\024M\014:\3201d\273B]\320<w6D=x\027@\275\242,\005\275\340\241\177\273\006M#=^\"\"\275\2122\256<I\\\236\273\241p\343<\333Y\030<\275e\362<cX<\275\327\251\224\272\3142`<\334u\262;\253\377-\275\233H\304<@!\241<\tI\223;\027X\003\275\005\300\035\275\347\252:=G\307><@\032\362<\330\246\276\274mx0\274m(Y\274\nH\234<DN\311<\241@9\275{\340\024\2755\007\244\2741\244\004\275\231?+\275\'\360\217\274\3178\t<\320rM\275\243^=\2754W\274\273gA3=\r~C=\226zL=)\261@\275\240BG=\253\373\025<\323\023Q\275\334`7=\264\tt\274\341\255\307<\\FH\275P\224\032\273\3209\367<\211\217M=\177\2177=\272E\223;\206\021\023\275\261\225\224\274[\204\233<}\234,=\273|>=z\3578\273\274\372P\275\331\263\277\274w_S\275\023]\334\274\025\033\240<C\203\372;\354\004\033=\3202N=2\014\242<\r\272\332\274>\346\277<\257\257<=6\210/\275/lO\275Q\374\010;\223\361\031=\250\220:\275\332\261\346;.\235>=<x\246\273!r:\275Az\226;&\n\232<\340\337\305<8q\027=\367\224\356:k\276\213\274Gq\235<1l =$\323\006\275\271\004\351<\346\217\341<~\366\213\274\366\341\036=\351\024\311<\317\366\210\274\332\320\344<\376\037\031=\311\266K\275}\002F=\215|\305<\277\'\002=\014O\307<P\305\'<\356cN<\363T\032=;\366\265\274M/\0039\225\032\273\274u\323+\274R\230\025=q\262u:\0334\245\2748\207V\274(\010\325<F\302+\275\233\315L;\300\317\307\274\337\037|<\357\330D\2755\263\341\2744\300e<\227+\341<\350\306\374\273\212\236\341\274\211\230W=\215\262\206\274\001j\202<\246\302\350\274\025\343\000\275\212\n\036=z\031\326\274p\271\037=\036\314K\274\301aj<\346`S\275\\\306Q\275\3007\377\2724P\222<\232\212\234\2729\375F\275\260\004\304\274\031\302\344<\351\200\033\271\375+\363\273G\363\336\274\206\2049\275;&X=\226\263\031\275\240\255\377\274\251\300\370<c2\271<\257\306U\275\'0\232\274=\3440=^\374=\275Dn\"\270\3618A\275\014\032\347\274\300!\260<\246\361\000=C@\300\274\336\010j\273\307g\024\275\036/7\275\354\276X\274\204\205\013\275=(!=\363\013J\275\3102y\274\236\252+=\"\374\275<@C\333<\0215\264\274|.\020\274\212\177H\272n\026\001\275@ !\273\315\314D\273\221\346)\275\312^\354<\205\212\204;\031\253+=kX\337\274\256\237Z<\357\020\000=p\366>=,BE\275\366\314==\030\201I\274qSF\275\267U,=\356A\001=\355\230\352\274\245\1770\275\223\245#\275\332\314(\274YE@\275\242\222\301<+\035b\274\217\213R\275\232\3063\275BZ\211\274\226T\005\275B\200\022=z9\260\274$}\t\275\340\267\250<\261\231\237\274\247\345L<\355\223*\274dKT\275\3354\007\274{\320/=\0249\372\274\307i{\274\223\335}<\225d\016;C\227\240\274d\2703<\234\241W\275\3149.=\232\233\260<\307\344\255\274 \262\320<\277\030\004\275\273o\307<t-\247<\224K\232\274\310\317\030\274Sk;\275\020\322\344<\255C\307<J\304\356\274R\021==~\347\311<H\356\037=\336Q\241\2745.\221<\201V\321<\375\034\005=<\t\263\274g&\321\273\3403\271\274S?\016\275\207\002\245\274m\";\275\342`A\275\373\355\374\274\215\327v\274n\3014=\223\224h\274B\177S=\335\320\217\272\312\363\023\275\203\217K=\202hR\274\343\212j\274\014\230M\275\037\253\303\274]ba<\226v\004=\303\346G\275e\240i\274\331\372\020=V\"_\273\030\177\226<f\217\026\275\276\231\251\274l\314J=\271Q9=v^\236\274\177bU\275\320\313m<\276+\020\2758Z\256<\016\345P\274\332QQ=\310\314\206\274\314k\213<L\r\235<\336\254\333;\255r\236<\252/\230\274IR7=\260\371&=9\307q\274\226\374==\031\346\340\273\022X~;\240\363\364\274\032?#=\000\3533<\n\221\027\275o\231n\274A\310\005\275\022\336\365<b\2677\2755\311J\275\020\364\324\274\320\321\334\274\275`\371\274\024t\244\274\254K=\2759\032\221\274y\230\025\275\230\332\216\273I\034\210\273\"\2329=\360\332\327\274\031\2708=\256\255`<\252A\257\274\023N\035<\345\t\004=\016t\265<\305\317\221\274!\224z<\361\004(\275\262\216\035=8\355\017\274\305\'\226\274\005\224!=\346V0<O\014\n=\243\301)\275\334\362\215\274\233\354V\274\316rp\274\366\300\217\274\005]\373<\375E\360;\355\035\004\275w\375\202<\332\037\020\274X\264:\275ot\203<ge\t<n\242P<\027fH=\273\273\271<mT\254<\201\256\324<\365*\005=\301\323\022\275\032\215\274\274^o\017<>\333\352<\200\347\023\275IOC=\201\nu\274JX\270\274\033\227\255<z\215\026=\336U\222<\005\0063\275\364\307\254<r\266\274\273A\260M\275\250\362\372\274\300\305V\275\273B\350<O\213\325\274\014\n!\274\021\002;<AND\275a\371H=;\273;<\274\247O<\341\024\n=5\212\024<(hO\275\351\260\263<\330B\333\274\363\330\353\274O\355\001\275\'\305\325:\0069+=\367\321\373<\030\362\236\274\226e1=1\3419\274\373\260\271:j\215>=3;\010\275GU\313<\0063\320<\010\366\317\271df3<\323<`<\202\200H=\034*j\274\r\013U=\245\344\022\275\014\234&<:\3305=\244m\376\274K\247\270<\2619\016\275\3679D\275\371V\324\273\007\2511\274W\340\021\275w\356\231<\222 \314\274G\322\370<\207rP=\013}\311\274j\235`<\020G\346<\272s\353\272\235P==\240\027\244<\016\026\361\273\001\354,<\324$\315;dL2=ajT\275\325\031\311\274\2536m\274aVF=\036\206/<q\205\346\274\017\347W<$\'\347\274\355\213\n\274t\236J\275\216\036@\275\340\345\2179\367\241\276<3aL\275;<\346\274\005\272,=\246\232\032\274\233\036M=\031\026\326\274\346(\023\275 \356\237\273T\0067\274v\265(\275(\034\357\274\350\3256\275\016&F\275,\226\275\274\232\366p<L\333\330<\357\321?\275*9f<\355\224\311\273\334\314\342\274\365*\036=\31286=]\000\201\274Xe+=\316\202\334\274\375\275\214\274!D4\275@\262\350\274\177Q9\275\355hN=<\312\241\274\345\241M=\320\361\010\274\350\346\355<D\007u\274A\327:\273)u6<\234\r,\275T\3527<\271\337M=\304\343&\275\3255\240\274\"\243\000\275\\\272\376\274\272\252\321\274\227\310\221\274\233u1=\027\221U\275\351\313\034=Y\235S\275H\014\304<\351H\332\274\350\2231\275\010\266 \275r\304-\275\306\022\030=\326\222\r=\306 0\275\241\333,\274\326$X=!\010\000=\345\267\357<{\370@\275\366\252[\274j/\301\274ti\024=\372\357\r\274\353\234-=l.\006\275kJ?\275\255\035A<\303\365#\274y\0161\275\372j/=\346\005\355\274\266` =\312`\313\272\374{\t=\333\274q<\341\256\016\275\322\3136\275\250\216\271\274\257we\274\001\276\014\2755\2557=\n[\344<\330\002h\274\373\346\303\274\243\276\306;\375\330G\275@\250\234\273\000x!\275\325\216\270<\033e\224\274\243\033\035\274;T1=v\327o<\344\353\352<\034\177\325\274QP\010\275v\266\335<\032R\355\274\'\3206<\324\203\005\275(6\032=\206kG=?\024+\274\216*\370\274\343\364\276\274(\211<\275\341wS<\\\032\335<\206\371a\274\347c\027<\314\r*\275\007\225\272<A\\\225\272\226\365\007\273\301\234*\275D\237\262\273e\321\023\275\311\344\347\273\265\276o<\024\031\002=\350v,\275\266\216g<\263\0231=\030\312\355<\311\306\232\273\200\3407=y.7=\250\243\364;\023O\307<\017\211\200\274\214j\350\273\252\373\376\274\255+\200<3\031G=2\357/=\204\376\322;\332\317G=\257c\030\274\277=$=\023\275<=\243]\212< \240\211\274\\\346\202;4\2622=\306Ih\274\336\240-\275\'\304\030=/\033e;4\215w<\004w\025=\347\320\310;d\371\001=\224\332>=\240\004\370<[\341}\274\343L\347\274-\315\033\275\365\275\207\274i\020T\274\346\3274\275\350\207\003\275\3426\236\274b\'W\275|\024%\275Y\247\036=\027U(\275\307\272\277\274$D\275:\300k\374\274\322\333!<\217,%==f\276<F\026\027=\312\332\235<U\361\214<\034\245\032\275\276B\307\273\nfv\274h\006\321;isE=t\220\363\274r\200\215<k\\!\275\324\357+\275;H,\275\n:><\036FN\275\200 \036\275$\001\313\272H3\007=M\351\320\273\010\346\206<\361\265\r;\026\276+\272$\'\023<3}O\275u\342\305<\026\212\233<\322\033\310<o\3164=\315\005\217<\365\242\340<\210<\017\275\374h\324\274\260pO\275\026\235\304\274Z~\326\274\350q\250<t2 <\3372\362;\331w\317<|\317\335\271I\354\316\274\374?\301<8\3771==C\324\274\323)\343<\322{\320<\2530S=ES(=\336\2021\275\324R\037\275^\365\327\274\264\352\354<\231\212\032\275A\352\206<\203\036\301\274\330\021\356\272\352\273O\274\326\021\347<\245\005#=\201H!=T\3665\275\"\367H=$*D\275M\002\202;nb\233\274}\231!=\324\313\020<\376\275\253\274Xa\206\273\353,>\274\0066\310\274\254\020;=\024\023J<\016}\216<\3275\324<*BD\275\223\313=\275\337G.\275^$\306\274\306\274$=\034\335\r=\205<>\2756K\016=\333Z\274\2739e_\274\356\377\333\274n\336\001\275\035KC=p\222\363;~\356\245:\376\202;\275\261\020V\275\024\257\010\273k\205\342<\344\360\233\273\376\212M\275\022W)<\312\304\301<[\306\230:\036+I\275\262\304\272<\264\037\3418\235\377\244<\246w\024=\274\342N=?E2=g\207\361\274\0348/\275\350p\004=\246\260J\275,cR\275\245\002T;hd\351<\037\2154=\376t,\275\313\315S\275\177\257(=\217e?\275x\t[:BEt<\026\n$\275U{8;6\206\007\275\306\362\306<\215\331\375<\307\260\010\275\244\231(=\337t\032=B/\032\274\215\225\214\274\332W+\275\377\221M=\272L:<\370g:=|!n<-\221*\275\026M[;\274\034@=g\\\227<\220\203\027\274\2165\001=t1\356\273\026j\247<^I5\275\332\240\351<KK\024=\301\334,\275\346?q;x/\302\274a\236:\275I\276i<\226\234\036=6\356\004\273\302S\322\2748\235\224\274\036\024\327<\010\227\270;ei\353<\333\367\330\274\277\375\024<\226\246\360:\332\327\320<\211\320\233<\273x\t=\316f/=_\321\024=1\356\364<\235\004A=\306b\214<\034\242H\275v\3032\275x\007>\275t\315\347\274A\326Q=m\021\023<\036P\001=\207I\357;^vZ;\265S\364\274p\305\031<\217\026\264\274\204\030\345\274\335S\230<P\211K\274\251\307\310\274\341tE=?\352 =\017\005\374<6+ \275\374T\210\274\330\234U<f\351\034=\272^\260;.\004Q\275\306\023&\275m\004\006\2756`7\275r\245\351<\005\302\032=86\342\274t\024!;\224\211\034\275\301eX=A\034v<j\300\244;a\266\014\275\006\362?=\310dO=\177\242{\274\025\312\331\274\300+\250\274_\2272\275\0164\"=3E\013=\345\213\305<\333\312w<1O\033\274\017\213\340\274N\363\014=:\372J\275\274\021,\275\316\rF=(\312\272\273\362tA\275\230\215\325;n8\023\275=M\241\273\013\346O=\264\373\263<5&\326;\204\262\325<\302r\001=\016\354U\274\203\3371<T-\014\274o]\306<\020\331\313\273\307Y\232\274\343\3356\275?g\270\274\214\214B=\357\334\376\273A\0239=3\231H={2\021\275\363\303\320<\2461\243\274G\332\'\275\0318\027\273/\346&<\367\005\373\274.QB=\002A\"=4\273\211;\310\255\223<\370\2618=\377(?<\222\361i\273\306\016\214<\222#t\272n\242\337<u\246~<\244a\253\274\343\352\027=\335\t\014=\'\373X\274\207\0208=d\323D\274*\014\017\275?f8\275Wj\r<\003,\027=\"\212\270\274\347\301\301<~\036r\274\0268T=\366\014\223<\302H18C\350\344<8\0075\273\356\307\243<\373\001S<rO\013\275\242\023 \275\006\007\354\274\307\255H\275\320\207p:NA\352;\267\303+<\216\231\255\274\307\203\221\274\246V\003\275\236c79\326\322#\275\345\255\017=.\271\314<p\007)\275\337L\314\274\247\376-\274q\261\375\274\231\301\267<\320\303\004=T\301\223<\264\305T\275\\\003\r<Q\260\002=\340\336\334\274a[\375\274\246\334\016\273\255)\252<\300RI\275\311]\334<\345\357\036\274;\365\205<\372\0223\275\374\242.=\235m\004\275\330\243\233<\002f\360\274B\371\3648\362\315E\275/mI=E\257+=W\345?<8\000\t\275;\245\006<\002\246\036<\014@\031\275S`\311<\'\220^;\361\177\026\275Ug\324:\0355\014\275\366<-\275\336\300\324;\260\303\t\275\\?\022<#M\004=\246\210\347<8CC=a\037T=\343\222\033<\"k#\275\230\344<\274\n>2\275\025M\355\274|\340S\275\256\2653=\226\2505\273@\037V\274\030F\223<\303\007\365\274r|U<\373\022O\2758\211\343<\356s-\275\343\3779<z\027\023=\016\024\336;\235  \274\204\367>\274\241g \275;DX\271\223\270\246<\333\035\256<\221\351j<\264\271w<\r%\266<\005\372\010=\321\214d<>u.=\333\354O\275z\304\253\274\336\327y\274\250o\231\274\240\224\211<\000\336\002\275<u\326\273YP\020\275\n\231:\275jA\303\274R\315\360<\277\330==\373ed<b\244L\274\001]\347\274>;Y:Z\321\304\274\216IK;\252\027\334<\347\035\274\274l\344\265;\003v\030<\376\334\321<\276\305\335\274\333\216\315<D\035\272\274\351\022\034=<\361$\275\334?L<]\\+\275,\205y;E\r1\275tA\352;\003\317\350\274X\034N=\376\376\301<\326XH<f!\260\274\342\247\257<\336\267\267<\222[\001\275\033\317\004\275\223\226)<\352\334&\275L\010>=\323\240\221\274y\376\224\274\'\264\003\275\033\222W\275M\351 =,\205\237\274\0303\\<\334\250U=\374\006W\275\301\213*\273\016\3730;Q)K\275A\313\323<R\300&=\273\313\326<\202t\004\274\n\350\254;\031\367S\275\017\225\n;\344*V<\367\025E\275;\237\250;\331\214\356<>S\013\275\013\334\205\274\324\333\r\275\305\225==\r\004>=\2177!\275\001\276D\2757~\001=\024.\t=\347~\314\274i\376\313;\363/O\275\374\006&=\256\005\273<\276\010U\275m\023\000\275!,\002=\223\350\304\274QK\332\273b\250q\274\001\023J<\316s\005=\341\037\004\275\263\265\006;\264\377\314\274\211*\357\272\212)\005=\321c\311<\376\\I\275,\331@=dv\356\274\213G\033\275\217\273R=!\244\374<<\177a\274<:D\275\007\371\014<\267\215\027=\234X?\275\217o\353<\331\220\033=\031\271\002=\021\3713\275\252\013\305<\336\357u<\206@\317<JW!=qHM\275`\361\241<$%x<b\304w<\306|\246\273\247r\302<\356\364\034\275\\\235\315<\031\037\314\274_\2752=\300\375\353;\002\241\305<\334T$=)\362\354<b\306\331<\313\255H=\303\340\247\274\365\305W=1\307\036<[\346\306\274\267\277\n=\2023\356<l\302J\274\316\022C=\t\300\373<\310\245\240<\336\250~<\334\005\360\272\204\270o\273H\350Q=\241\036\316\274\340\263\004\274\336H\353;oS\335<q\034$\275\252{\036\274\376\245\003\274\r\250\277\272\220\263\036<b\214~;\037\237L=Y\0035=g\252\344<X\233$\275\021}I=\007\255\311\274\233\2311=:\372\022=\016\177\337\274U\032\010;\315\260\337<;\207P\275\2249N=7r\026\273\374\013\242\274s\255@\275-\"\007\275\332\245\r=1\206\034=\344\331F\275\316\212\244\273s|\232\274\252|\250<\377\215|\273\355\372\316\2739\323\000\262v\226}:~\030\331\274\256j\244\273\315h\r\275q\016U\275\177.\365<\277\013;\275\330o\221<\251\244\035\275\272pX\275\252\250H\275\311\231,=z\343F\275N\032,;\377\231M=y}\231\273\034Y\226<F\363\251<\276p9<\275\240#<<~C\275!\242\031=\030r#<\272!\027=\314\014\007\275\225\374\211;\034\224P\275\344\246\321<\220\320-\275\n\277t\273\032m\346\274.b\200<y\253+\275\305\306\024=\200\240y\273K\222\261\274\037q\340\274\237\253\320<\221\251J=\021\340\t\275\376\245\027\275\3318\030\275L\224\240\274\351\344\022\274N\267\007<\235\213V\275\001\230\215<\270)U\275@\001E\273\301&7;\246,\226\274\234\035#\274WG\275;\325b\004\275\226\3455\274\320\216\376<X\236m<\272u\300\274\032\2135\275*\371\033=\224\007+=\036I\033=\215\217\031=\036\375?=\006)*:-D9\274S\006\305<\361w\242\273\227}@=1\333G\275\r\357\027=\326\256\30697\355I=evG\275\037K\026<X\r\223\273\240\355\027=\266\3047\275\222b5=\307N-\274EYU\274\260\031.=9\353\215<\3479\354\274q\1778\275\006L9\275\207\330\211\274I\353!\274\362\273\r\275|\016\235<\341\261\243\273\372\375\035\275\3613\343<\361.g\274\306\0368<S\003\037;l\266l8\237\010(=bx,=\244\031\353;s~\325\274\001\004\356\273h\372\276<\222G\235\273\003)M=\206\022\031=\200v\301<\356x|<\3219X=\352\346\020\275\220\321\014\275v\325.=->%<\350\303\t\275g\357\315;an\007\275o\363#=3\016=\274\346\0077\275\200\3452<\214+o\273U\235\214\274\313\223\332<\327\342.\273\215\030:\275t\357\002\274\346\214\031=*\256\220\274\337\367O=1\250\255\274G&C\275\324X2\275\321M@=\275\0048\275\216\322\233<\232\312\267\274\334\241\264<\236).=\212\322\317<:\364\307\272\353r\034=]\004e\274D\r\242<w\340\003\275\217i6\275e\325\016=H\004\371\273\236\310\027=(\262W<\264Y\241<)\266\t=\366\000\034<\300\343\235\272\205\r9\275[FJ=>\311Q=\037v\004=\325\241Y\274\250\004\337<\005\264F\275 \2516=\250\0327\275\317C\013\275\377,\007=J\013\027\275\201}u\274\220\360\340<V:\250<\347B0=3s\270<R\321\027\275A]\017\2753\357<;\206\320Q=\003\317T=a\235\361;7\314\203<*{\n\274V\342\272\274\010q\030\275\262h\r=\034=\203<oe?\275\221\232\375\274\273\257\276<Xq\342<\033;\234\274\346\332\247<\036\3609=%\004\344\2740\267\017\274VN0\274\265c\251<\311-P<\222&Z<|\026E=\235\240/\275\324\211$=\2265\236\273\272\345U\274\026\354\024\275$\367\"\274\212\331\210;\344c\004=\213{\366<\200\377o\274\364\0328=\243\350Q:\212n9\275\310`\271\274\252\375\376\274O\371\262<\312\013\007\275\353Z\266\274poQ=#\014-=\340\2324<Sh\026=2X\002\275R\350/\275\215\234\r=2\361\236\274\252\261\263<_\223\t=c\343\317<\272\255\334\274P\275\2649\005\274\023\273(\t\245\274\247\315\357\274\313\023W<\330K\357\273\326\271\226;\342\215\245\274\206\3001=\224\2756\275\tq\273<31)\275\\\213\'\275\342,\335<N\014+\274\00376\275\301\344\000\274\005\202\023;m\352N\275\\P\000\274Ls):%\251)=\230\353\303\273G^P=\n\254J\274\257\236\323\274U\r(=@-\347\274]\267\014=n\304$\274\370a\210\274%\302\014=\010`*\275\255\204\345\274\367\307\021=p\300%=\007\215Y\273swB\275\374X\242;\216\2773\275wE\265;X\335K=\335R\333\274\214V\002=\311dk<.\226~\2746\244\204\274jI\031=\324\255\337\274\274\345U<\331\347\355\274:\374\306<\2613\026\275\230\010\'=\031QE\275;x\217<\021\243\216<\014\032\013\275\3373/\275B\375\274\274\2065\204\274\270\234\031<\301P)=\353\177\n\274VDR\273\021\367b;\227UK=\"_@\274!\0250\274*\250\230\274B\2113\275\037\276\276<\204\375+<3\374\263\274<\3506\275\327\237\377\274\213\261s\274\332\321\004=\247\036T=\021\303\247\273\237\363\007\274\236\221\311\274\355\354\310<\303V\253<9EF=K\350P\275<\213\n=\306e\260\274&\254\002=z\375U=\242\\V\275U\366\330\274\275\377\325<x\365G<\005\250\370;\2178\n=+U\220\274M\374\005=\'_\212\274_\013\331<\220E2\275\377Y\355<\314\236\377<\231\350P=$\272\324\274\"mO\275\032AX\275\374\032.<V<;\274\330\224\346<zS\013\275\007OX\275\0361j\274\027a\263\274c\241,\275\260W\305\273\t\374\344\274MQn\273t<)\274\352h\243:\014\rK=<]\350<Qp\034=\201\020T=\254M\316<e5\245;*\255\322<5\377S\275\211\360\324<\177\024\305<\005\034\231\274\233rG=\353o\010\275\307\365\000\275}\342\372\274\364\037?=\371\300K\275\033\311\255\274r\350y<\\\317\317;bz\324<\270\264k<\236WX=^;\031=\362\270\346\274\204\366 \275\211\002E=\321\231x<\351\252n<L\2602=$\250\024\275\242c\246;\246o\361;\026\310M\275\315\007\n<l%h\274\022\246>\275\335\273\014=\017#\371\274\377\211\373\274\267a3=O\3222=[\225\265\274\014\336D\275\266OT\275R\335\010<\\\233\315<\3738u\274\317{q\274\\\272C=\022#\t\274\303\273%=\026\227K=,\372\032\274\262\340\016=\272\250\351<\325s\353<m\260\316\274\302s\20591\021]:\242\270\315<\247p!<\231\302\335<\225\3246\275T\321\217<{\237\371\274;Y\307<C0<\274\237\324&=|\346\207\272\004\265\242<U\'\256\274)#\031<\217Ol<o\253;=\014\034\037<F\025\217<Y\007,:\312\243;\274U\2771\275+\037=<\256\360D=\t* \275i\\\357<8\'\365<\024\363-\275\000;\202\272\013\240\377\272!\013\020=<r\265\274\245M\n<=Q\037\274\024\221\274<\030\002\034\274\220h0=k\3445=\357\374@<\246\020\000<_{\007=g\007\031\275\032\001M=#u\337;{a;\275\253K\032\275\207\347\003<\357\204&<\252:\210\274\354\2527\273|\275/\274\\\202&=U\355\263\274P\327\214;\211\203\254\274\033\014\320<\205\301\265<\354\247D\275\277\371\323<uX?=x\2228=?\205$=\272@/=\346\253(=\r~\270<\225\361@;\326\342\013=}\321$\274\371U$\274\375\320Q\275\302Z\327\274c\360o\274Dm\345\274M@\"\275\221\274\001<\007\253\263<=X==\233lM<#\273\236\274\307\361D\275\327\263\006=+\273\343</\017\201\274\220\340u\274\334\033F\2756:\375\274\005DK\275{\375%=;/\006<\210V)=E\233\037=\326\031W<-\225\352\274\034RR\275\032\330\030\275-\223\341\272G\233L\275?\202\362\274-\341\234<\'\357\264\274\2448V;i\334i\274\255sX\275\205AA<\0033\000<f%\300<\366\321\201\274\241BG\275\202\310\215;q\213\013=\364\232\310;1\014\324\274\261\033!=1\334\372:\244\273G=b\375\254<H\222\020\275\256\351M\275\223V\326\274\005\003\333\273s\340>=@ S\275\245CC\275)\222\r\275V\026\345\274\263+\252\274\346s\340\274L\001\251\274/\241\017\275H\270\336<\302+\340\274R\273S=<@N=Fu\'\275\033\243\036=\204\317\200<B\322\261\274z\\O=\342\315(\2758NH\275\266\222\201\274\347\315E=\233i\t\275\013\0056=Rk\364<B\257\315\274\337|\317\274\216\\\207\274L\303\372\273\271\242\"=T!\004=\322\241\231<\004\005\340<D\2375=\233\030|\274n\n\036\274\227\363\013\274\272\254\316\274_\271*=N\024\364<\240&\022=$\314B<>\326\035<\326\312\016<k\224\014\275\333\\\277\2746<P<\355\264P\275\376\3646\275eB\344<\317\2724=\250\2148\275\234\365\007\274^Tv<X\360\333<\266\010R\275\341\301\r=\301\0351=\321\364\021\275\264\032\022=]\2364=\024\242\326:\033P\341;\221G\304\273N\273\242\274\215:\331;\236y\312\273g\333\277\273\356D\001=\200\014J=\247\177\026\275m\221\014\275#kh;\327\334\032\275\204\016X=]>:<-G&\275#\233\003<}L/\274\312E2=\273{P=\226Z\027\275\372^\006;y@X\275<\034\357\274!\364\220\274\\\213\346\272C\200\272\272O\264:<1\317J\273\303\362\005\274\342\2340<\374\240\353\274M\254\254<2\246%\275e\304\203;7\331\\<+\207i<\221\245\251<\014\214\267<^\027<\2751\034$\275\236\220\026=\202\345>\275BG\022\275\344\303\002<)@\333<\"w7\275\313\362+=\370\232\346\274\033\334\246\273zc\007=\232\254@\275\303\241\350<0q\226<\343\t\366\2733\007\337;\274\303B=#\2014\275\251\035\352<\246o\007\275\246P\335\274\211\276D\274\232\332\016\275\\\314\237\274\337\3362\275\354f\202\274G\244\3709\361AJ\275\21216<@\253\000\275<\035?\275I:\335<\333KU\274\371\204\002\275{=z\274T\002\006=k\271\316;.Y\033;}\255\306\274\212\212C=\010\312W<\025\356,=sB\366\274\325\374\035==,\300;\314\224\006\275\030\323\023=\031\2171\274\341\300\271\274%@\216<\343\006\034\275t\273\023\275\361Q4=\364{&<\302\367\226\270\327\201\336\274z\250;=\205$3;\037\226\304<L!\213\274J\200\322<\226\215\264<B\031\246<8)\001\274\345\234\023=\217\265\363\274\311\263/\275d\201\311\2743\"\276;m\263\361;\304?\333<iRJ=\333\025J:\312U\257<3`\026=e\230\020\274;57=\245y\347<\354|<=\211\3059=0\352\352;f\331Z:\262\371\033=un\315\274 .\r\275\2725\323\274?\0328\275j\356\t\274\242\3331;\355\275\225;\370\337?:\267\232L\275\236\232I=\020\300U<\375\301R<\222\206U\275\277N\014\275\320\210\006\275]\227\026\275Z\362\320<a\3727\275\254\014\202<\200D-\275Y\235N=\253\301R=\321\244\224<Z\2019=1\023\\\274,\330\306<\216\036_<8\'\003\275\222P\334<\310\351\361<\311\241\017\275>h\300\274\"\365;\275j\255U<O\365\356<\300\354\330<\210\252\020<\373\013\375<|\217#=0L\002\275\027\020\201\272)|#\275\345\3048\275\232A/=i\372I\275D\300\341<J\315M\275\206O\3679\362\303\335<O\237\326\274&\310\316<J\360\230\273\310\251\300\274\023-I=H\306\351<\342z\213\274\016\334\227\273l\225S=w\223(=\365\007\232<\013\311\203\273\246\037\034=\326\202==\246*\016=\010}Q\275\237N\002\275\361N\320<\244\262K;\337\224*\275\3475\021\275\220C\035\275\322N\330<S\3561\275\371\323\006;\356\2717=\274\305/\275\361\324$=\375\2531=\267\247\033=X\351\027\275B\003\026=)\013\002=\000\003\314<\362F)\275\221\006\002;\005x\324<\371=\232\274\300C\330<\030[*\274\313\000\024<\231\211q<{\344=<\004R\030\275\\S\033\275\376u\377\274\200\213\035=\202r\224\272a\000\010=2\213C;\016/w\274X\265%<\361\200\236\2740k#<\211D\264\274\236\357\264\273\002w?\275\342\337\210\273d\0228\275\204+\022\275i\325\005\2754\211\013\275\373Y3<;\004\234\272\322\006\375;R\006\024\275\\HC\275\\Y\003\273\021\255\246<\261\031\360<\242t\034\275\361oN\274K\025H\275\344\344\340\274\262\177\006=?|\341<\324\021\004=\247\357\002=\247\2503=\333R\004\275\000\344\031\274\355\017\354\274\2329\031=\303\332+<\347TF;\211s\036\275\315\236\000<\377\336\'\275t\014=<(\245\243\274At\033=\017\021\002=\207MS\275\256.\024\2750\0334=Q\374\021\275\022#\263\274\200\271\000\274\343J2=\003?\n\275\\GE=\231\303\033=\262\006\037=\231R,=9\2437=\340?\264\274\365\315\247<\371\306S\275\021F\361<\237R\202\274\004\245\032\273@\017^\274\333\214+\275\235\370\002=\354{\324<&\341\374;\305\351P\275#\303H\275+0\310<\331\022>\274H\027\004\275O\313o\274\345#\025=Fj\311\274i\313\305\272\347\177\366;\033\3604\274=/W\275\215\2162=\010\341\261<\213!I\274\355\2349\274\335\032\025=rv\352\273\266\217\257\273\332l\3149\277\327\304<\004\331\313\2744\377\345\274Q\033L:r\017X\275J\252\035=\375\305\252\274\361\272\235\274\'\351;\275\227-\335<\344\222\345\273\225\020G=]/E:^\223H=\004tG\275\316\352%\272\013\272\204<G\236\217\273]\345\262<\023bK\275\372\352\340\274\024m9=\245\370$\275\333,\n\273\025.w\274\256\226\351</\214\307\274\002M\340\274\310m\021=\351\024\3569\242\276\3349?\310\034\275m\261\036<\2654\322;4\223B=Z\252\247\274\313\2063<\023\005\270\274U\371\'\273\333\200\376;\315\253`\274.\214\220<\327\363\032\275\201i0=\013\266\r\275\247\247F\275\261\217\027=\00517=f\367\363\274(\207I=>\275\227\274\206\030\217<]$\372<|\316\035=UoN\275\361\276&=\273\r\344\273\215\254(= \017\231\272\367\241\243\274&\306;\275\303\005\254\274\257\n,=\246\373\301\274&\265\255\274{u\013=\272u\212\274\241\370d\274I\364\202<\301\204\237\273MB\323\273\203\371#=I.\021\275i\3662\275\033I/\275\3273=\275Nt\342\273]\374<\275\023\010\017</\314\013=\336\203\016=\241\007\353<\240%\'\275\022\022T\274\303\370!=ek\301\274\231\234&\275E\202\370<\203\2631\275;\320\035=\032\237\265;\032\270\260\274=7\221<-c\033<D1\223<\242il\274w\251\023\275\023fl\274x\3268\275\261\202\032=\rw\253\274\035*\215\271\014\302\230;\351\032r<\355\337L=\016\356/\275\3268\275\274\304K\206<\026\377W\275Z\2761\275|l\022=lo\034<\225\222\301\274\000\3005=qT\r\275DD[<\\\"\013=/t\037=\032s\306<\367a\303\274.AB=\371\001\224\27354\r\275\027\220\256\274\334\267\264\274\033@\207\273\243-V=\320\235\221:\"K \275Y\314\241<\220M\260\274\177\223\225<\217\374\302\273T\232O<\203\302\016=\t\276\255;\323yQ\275\024\233\275<\007\315\003=k&-=ErQ\275\026\215\310\274\014QM=\005\001\324<\010\n8\275\344\372u<%\373J=\325H\335;\204v@<p\366\034\272\322t\274<\352d\026\275\320\3777=\361\224V\275\364n\356<\357\016(=2\277\234\274*\306L=\016\006\273\274[W\n\275\256\346\332\274\301\235\256\274wO\316\274\255\354o\274\2568K<Z\341R\274X\261\003\275\346 \371:\307f\002\275\005,\001=\226\253\013=\302*6\275\256\313\322\272\235\356N=\0206\301\273_NF<\306\373:\275x_ \275cG\'=\341v\026\274\363G\340<^\364\204:~\037\r=\004\032\330\274.HH\274\357\005?\275\370\357T=\351\272\260\274\036\213\233\274\355\375<\275%\202\307\274\177\217\264\274\371Y4<cDH\275\304Z\275\272lP\245<.\272D=t\034\233\273y\336\360\274\n\240\t\275\20103<3\265\224\274\201\352<=i\360>=G\227\245\273\222\330\002=\366\370F=\232\036\272\274q\377\226<l\023\277\274\354\215=\275\014\320:=t;\371<\257\0213=/\304\336\274\243\325\366<\346\371\263\274\\E\035=Z \001=\037\243\'=|E\023=\010x\313\274\025c\332<\2405\030\275i\326A=\342\370\002\275/\352\276<.\311\307\274\301\334\010\275\014\262\321;\244\002)\274\005\370\212\274\341\273\204\274*q\275<\202\361H=YS\243<&w\226<\325\3027\275\363\026\335<f\354o;0Q\333\274\034\221\340<\013\t\004\275\022\250\005=\227&:\275\"&\247\274\000\255-\275q\261\236<-6\n<\270=\333;(\006\251\273\336Sw\274\234)\200\274\246\212(<\374\026P\275\320X\252<f\3073\275\322\241\273<\247F\206\273\037\027\337<T\037\356<\234W\337\273I\036\001\273;S\026\275Y\260(\274\010v\365\274PG?<z\036\253<_\205\006\274\262\224,\274\372S\210<\304\250\037\274=\363G\275\275\006D=\001\003\354\274;+2=k\275_<\304T\267;\031\342%\275\236\2547\273\005K\225</:\036=\321\271\337\272\0014\256<\225\t<\275\325kk<R\307\374<kfT\275q)\312\274CH`\274Q\226\255\274\373U\010\275\222+\010=H\022\017\275\005\277\017=\303b(\275\033\241\376\274\323-\016<\005\nm<\306\024\014\274^c\r<e\240\007\274\3315\314<\3432%\274WRP\2751\270\243\274\206\"U=\327\260\005=\220\254\003<\306h{9:C\\\274\266\2479\274\347\335\323\272\255{\004=\032\334A\274\034i3\275k\267*==\2114=\375W@\275\352%\337<W\014/\2755\2503=\352Y.\275\355\345\207\2746\333)\275\372\201\307\274\271\213\324\274\353;\316\273\354\314 :x\354P\275y\2708=KXN=\3739\222\274h\357\271;\332\301J\275=\020(\275\2750)=jzO\275=CR=\344\"\223\274(gU\275n\377/=_\310\271\274T\014\013=\020\026\325<e$\007\275\213f\034=\3427\362;C\n.\275\267\344F=\220)q<\313\034\221\274)\321\311\273\367j\026\275\357}6=\004\2707<M\303\331\274\333ZN=\325\244O=sBG\273C\020\257<\256\003I\274vn/=e\217\377\274\277\005\026\275\350\242\234<\340T[:\241\277\036=[\226J\275\317\3648\275\251Q-\275\017\356\275<\016\216T<{H\335\273,\377\007\275\370\332$\275_S\237\274\006\273\271\273,E\311\274\2764(\2750\267\365<t\253,\274Pq\016=r?\200\274J\211\025\275\332\213>=pW\246\2741MR=\177]\010=TzX\275c\r*<\306\342X;\317A\013\275Q4-=\030n!=,?3=\353\333:\274#\022\n\275\220\345E=n~\365<q<\005=\352\004\222<q\205\215\272V[\367\272x{ <\216\320\212<[kt<\244\307M=,\226N=y\026\235<o[\320\274~\035t<\253\375.\275\2011;9\004I\343\274!\211\364;\217\312\257<\307\220\026\275\354\366@=#\034\243\273\034\236\007=\3162N=( T=\370\244O\275\366\3035=j\221;\275#\344\021=}\3203=\304g/=|[\236\274\020S6=\361\207\031=\341[Y<\362;\242\271\202\325\365<#+\004=\035VO=4\206\323\274{\270&;\227\030\356\274\r\000\377<\2435\"<j\303M\275\353\244O\275\353\t\255<Jk$\272\376\244\230<\330\316\271<\346\301D\271\n\302A=\272\003\010;\2153@\275\324v\024;\204\031m\273\330\340F=DBO;\275\303\340\2749\352\270<\347\262f<UPS\275\021\235\262\274>z\n=\027^2=)\257\255\274\370\347><\\\214W<\020s\377\273\177\304\006\275\237T\215<\343t\357<.Gd<\313\312N<[\320-\275\220p\26396h\257\274\0043\343\274\016\334\3369\337v\334:\362\303\'\275\243\345.\274\245\275P=,\310:\275\301\242\336\273\257.\344;\257\205S<\235i\316<o\002>\275@\356B\274\313\241\232:\340\021X;p\023\334\274\277]\242\274$\2125\275j\341L\275\"p\327\274\217rW=5k6\275Xg|\274\204\333!\275\260CK\275ihT:\241i\310<\344\377\274<\350\213Z\273M8;=\317\\3\275\316f\253\274s\343\"<:\010\013\274\266\\w;\360\017I<\035\241\007\275\225\t6\274-^\350;\336\305%\274\032H+=1\0211=C\253\366\272\276\373\360\2746GH\274\007\355\244;\263\246\266\274\337BB\275c3\215<\363\376\007\275\336\3271\275\332\211\304\272\266\003\204\274\035\273J=5\247\264<\001aW\275\325\332\327;\t`\261\274@\326\356\274L\234\353<\271F\276\274U\300\247\274x\252\240\273\277\343\366\274\332\345\315;e\026\013<\225|\237<\374\375\'\275\365\250I\275\213\317+=_\022\244\273\225r\003=\345\217\275\274cC\201\274\212\321O=\247\243E<\220\203\344;\350)\376<\n\310-\275\207\3348=4\"/\275\330Z\311<\246\357/\274\006\213\365\274\010\177R<\304\024\003=e\265(\275Y\271p<\216\222V\275\004w>=\266\202\035\273\215\223Q=\233\321\274;C\242\202\273\351\023(=\205\357 =\374\262\255;\2421T=\365\014\026=\023\234\007\275\234_O\275\n\377\r\275\335\365I\275p\341\007\275\251<%;\317\337/=[\361\'=Z\266*\274g\355\273\274\353h\010=\322\241W\275\273\351\001=\316\241\223\274G\343\320;\014E\244<\036\355h<p\212\221<5\034\031\275\310V\265<ZL\233\273\266\237\330<Mu\304\274g22=\371\352\013\275\252y,\2751]!=\305\271\331\274US@\275\215e\2519\"\2135=\317\371\206\274\246u\025=\312n#=\374\3365\275 \233\272\273\004\252\377\274q!\212<=\355\230\274ma\272<\265l\2169=\366D\275\354\277\330\274^_G\275>\240\301<\223s\202<{9\354<\021\2402\274\306`\r<\232\322;\2758\"\254<\255\021j\274:jP\275K\334F\275\213\360\342<ST\346<\2744,=\007\2743\275\365\022\023\274\212\235\004\275r\2523\275\207Q\240\274\025^\263;\267RR\274\205\312\025\275\177\273y\274^\353\031=\212\330\226<KX\315\273>l\221\274\364\370\375;F\372X<\371i\025\275\327\331<\275\263\230\256<\t\366\025\275\223B\256\274\002\005\007\275~\332\022\275\025uL<k\264\306;X\036\360;^#W\275\326\350r<\266\250+=W\211\375<\274Y\014\275\036\321\331<\363_\360\274\317\026\013\274e\333\337<\313\3562\275\353\307\'\275\320\3276=dwS\275UC\006\275\330\325\2779\253C\013\274\274!\000<l\022\257\270_\tG<\027:\346\274Y\375;\275i\327\213\274\370\234<\275z$3<\215\340\004\2753q\025;\322e&\275 \220\376\274\241:T=\203\021\324<e\353}<\025\306\002\275\313\364\021=\271\177j<\355\256\016=\024<\001\275\3556u<\210\023\037\275\004\2050=vx\334\274y\3223\274u\375J=\243:[<l\251\030\275\375\201F\275\327}\315\274]\307S=\026v\301<K\365\275<2\034@=\311\224\232\273E@\333<,\202\004\275D4\210<\033O\325<;F\212\274\312-\352<xr\206\2742\032\306<\200@\036\2752:9\275\323P\004=\373W\345<\354\265\336\274>\353\267<+J4\275\242\246\017\275\255R\277\274n^\361\2713\230\030<\267z\020=\267\177#\275\300\361\301\274\360*\222<u\355\001<\273\272<\2751Y\361\274\254\322\337\274N\204\016=5)\033=\253\316e;\210\234V=)*\203<\364\303\254<\331\270$=Q\250\031\275\006\326\023\275Y\265\345;m\306\316\274\025\221u\274[lP=IP(=\022\312?\275\200K!=\006#\321\274\206A\331\274\274j@\275\257\352\000=\250?\023\272\000\334\375\273Q\251Q<8\"==;\027}\274\260xV\275\256\372\375<\032\013\373\274vW\214\274\007\225\237\274F4\215<\261\017i<}\316\335\274\363\214\264\274\271\333\035\275\256\202e\274\n&A\275G\2118<\374\024\376<g|\326\274n@\256<\263k7\275\000h\300\274\372mb;Y\306\251;FE\227\273\033[\010=\313\212\021\2721\342\034\275\\\212n\273PP@\275\325\027\311\274\307\253\021\274\257\275\014\275\272\010\276\273\365\264;=2\347\337;~\022\327\274w\223\246\274h\017\207\271?P&\273p$\025<I\276\225\274\2466\211<v0\023\275\036\214U<v\207 \275`\347\367\274\236\315I\275\236\303==\035:\'\273P\215\032\275e\311\336\273\315n\014\275I\217\037=A 4=F\344\014=\330\357\330<2\200R<\316\316-=\356\375\234\274\026\276\337\274\341G\005<\031@\"\275\266\374\016\274\000W\257;~\223y\2746>\226<%7\277\2747\220/=\301\220\224;\373\025\024\275\202\006G\275\370\0133\275\257\005\242\274O\"L\275\365\336\312<^v\266\274\330\374\000\273\323\261\367\274\200%\025\275\370t%=\264p\361\274\322jF=\003sN\275\2463&==\037\022\274\223}\004\275\217\n\277\274\234\234\t\275\224\330:=fo\354<\200\272\214<A\346T<\352Y\263<\355\314\027<:\232K=\337\311\364;\213,\307<x\337\005\275\264,D=\261\002<\275h]j\274\342B\303<\245H$=\363;7=\225\033\024=v\001h\274\302p\275<d\032\025\274\331-\235\273\207\003\237<\351\002\032<}h!\275\2009\032\274_8<=X\210M\275oe\210;\364\020\203<\330\212\242\273!94<\236zG\275\256\3023\275\2665\254;\007\345\303<\251^T9j\264:=\220\214R=v\377\332\274\363?I<\24559\2730\020\213<\373\254\"<\252_\034\2750\177\346\271\321\205\315\274\024\355F\275\225&M=+\242L=\3265\t=\312H+\273X\017\200<_X\n=\361\343I\272!\253\266<\340\371H\274\226\311\222<@\357P=a\036r<\214\325\373\272\217\277N\273A\"z;\3601\255;V\266H=\213\037G=\315a\277\274\220\214&\275\022\210J\275\374@3=\360\215\037=\344\315\252\274\213\003)\2741\r\335<x\001\036\275\307[\036=B\016\314\274\216\2033\275r\2358\275\341\330\274\274\t\325\252:\370\005!\274\346O%=\024+\350<\252\036*\274\320\016\214<\030\263%=\274\360U=\036sB\275.\356\205<\362`\265\274\346\271\r\275\370T\336<|\344{\274\320V8<\253\221\340\273\253\267U=\3721J=\374\342$<x\014\344<1\222\341<\217\202\216;\253{\250\274\306J:=\005\374\r<_\334x\274cEP=\265[\r\275\200\302\023=_\033\001==YM\275\317\022-\2755r;=\034\225\340\270P\212\336;q{\325<\025\031\304<+\325Q=\222\376=\275<8\003\275\034K|<sXV=T\275\231\274\356s\316\274r\237Z\274\001\373\305\274U\310\224<F\205\231:\336\265,=\030\304\215<\006\000$\2755\236&=\010\271\324<p\234T\274\315\215\371\274\017\024b:rmW\275bGX\275\241\335 \275\244\303!=\3378c<\352%H=\037\200\315\274\275@\313<?\313\254<J%T=:\251\305\273u!\331<k\363\025<\262\000\022=)\230.\275|w\n\275T\016\013\274\311\212\031\274\001LG\274\236hx\274\332P\037\275\371\351\246;\025\336T=\243\371\235\2740`*<\310\3317\274\222\032\205<\270\350\"\275\354\2346=\030\355$=\326\222\342\2742\332O\2756\233~;3\0322<P\330x\274/VQ\275 \267\036=\353\231\211\274\016\2426\274\370\221#\275\372\002r\274\242\014;\275\306\211\243<\366\026\016\274\344q\364<u\221\245\274\034\214\014=\201`\356\274<\n5\275\2378\350<\320\314 \275\365=\014=\333\244\221\274\345C\245;Y!\234\274\317\027\017\275\2451&\2755\240N=\221\375\r\273\017XC=\221NJ=)P\014\275\246\224e\274,+\211;\274})<\206\033\t<\023S\265<\023\023\007\275\022>\241:.\300\032\275/\236I\275$v\020\274O^y\274\375\335\306\273HO.=>q&\275r\375\036<\031A\365<C\201\344\274\310\221R\275\213~\010\275\317\237\246\273d\332\333\274]\270h;X\271>=\004\177\246<\353U\027\275\367\304y<\365\323\005\274\257\010\007\274\247\017\220\273\377]\377\274\271\366\355\274\2562U\275\342\026\233<\216P\302\274IE\017<\017S\r=\2005\217\274\333\222\355<\201\277\210\273\324\031N\275\224\021\210\274\013\033\342;T\302\317\273:\331 =k,\032\275=c=\275mDX\273\235\317\037\275W\2503\275\314\203\"\275\r\225+\275\346-$<\275$\007<\363\212\366\274\325\341\010\275\204q\'<\274\351\211\274M\251$\275\350wI\274\021\rG\275\350\026M\275\004\231\031=&\034\205;\030N\215;U\251A\275\305V\025=\304\220\026=\023\330\242\273\270++\275\"\245\001\275\255\336\013=\314\233\266;zF\024\275`|\265<\016\264\013\275\2548\241<\"\034\250<\252\002\031=\270\277?\275#\330:<h\023\027\275\232\3305\275\215\245\261\274\326\2305=\313\244\021\275\177Gr<N#\215\274\332\324B\275\177_z<t\301}<,H\356<\324\237\214\274\366^\274\273\022*68\231z;\275,\005\277\274\2242\010\273\214\357@=&\274\212<\325%\030<\212\014\367;j.Q<\016O6\275\2010!\275\370\311\215\274f\320\313\274\355\010\346<\375\0062;\367N\243\273\337V\3429\013$\344<j\035\301\274\214\312\327\273#\362M=\273\032\031\275\200a\342\274\303l\242\274\242\202\342\274{U\314<\200@\003\275(\266C=\310\210\303<\255\374\260<\314\370\"=ju\237\274\371\334\337<\240\327\016<\207\205)\275\320)\002\2754&\036=\367\251?\275\345\316Q\275G\216\237<T\037 \275\326\271\021\275\372/+=\364\002\253\274*\037\010=\347~\332\274M\347\250;B=><T\264=\2751\364\327<\027\342\353<\262\023,=\313\224L=Q.\354\274*9\363<,R\220\273\352\356R=S\304\317\274E\200\207;)\337\371;X\005\017\275Fg\323\274\320\372K\275&\240\006\275E\242O=\233,\311\274t\317 \273\001\221\363<\366=\241\273\rK8=A\013\022\273\273OR<\264\312M=j\275D=\353\216\303\274\001q\335\2742\003J\2756\261\"=W\371\007\275\256\200J=n\357\033=\336\334\000\274\362\324\035<\250gQ=c\312U;\002f\021\275m\020\026\275\227r#\275\350\342\272<\361d\217\274\266>\231<\210]K<\2651T\275\261\211\344<\321\026\022\275\305\226\037;\357\344\247\274.\001W\275u\327\377\273\326(\010=\275\356\217<\302\005g\274<\353\361\274\370Rs<+\336\377<#%E\275\272\2413=\337\250Y<k\237K=y\331\016<B\213\275\274\215[D\275`\370\021=\354\025\322\271Q\325\t=*\016l\274\361a\032=\317\022\254\274\024\3407\274\225\023\244<R\251\006;\341\0141=\306b*=\202\023\037\274\254\252\371<\357\301?\275\336>\234\274\330{\212;\006\rM\275O\357L\273\367\002\340\273R\260\r\274|\000R\2756g\345<\254\206\025\2750\211\306<$,H\275\2251\201\273\345>\345<\347\341\226<\271rN=2\363\013\274\276\350\214\2747\026\364<\305\215\004\275\211cL\275\263\2048\275\3700\226\274\241\336\260<\364\236\035=\321\023\262\274+\0278\275MK\030<r\026\336\274\344\002\271<\035\027S\275yj\215\274G\372\177\274k\246\316:\345\237\210\272\376N~\274\216\363\266;6z\215\274w4N\274chC\275\267J\233<\253\227%\275E\331\366<\261\2527\275*B\273\274\376;*=\"\211\342<DcR\275\005\324\032=Sc/\275\247\030\376\274\345\232m\274\'\331\006\275\024\0228=\n\261m<B\240\025\275\035\250\213<\243L\226\274\233/\314;k\356>\275\304\214+=\2269)\275\311\256\274<\353\303\351<\233\247\277<\367s\212\274\036aZ\274\353]j<1\310\271<\244y\n\275\274\030M=\352\035+\275B*\253\2743\345\246\274J\270\036\275\325+\035\275\3733\357\274\017\2113\275\210[\315:d\342\000\275u0\247\2747\272\014\274\322\360\303\273E5\343\274\334\300F=\333\024\035\275s\311\031\274\022\245\316<l\262O\275\177\177\356<t\304\351<\253\256\227\274\327\2227;3\352n\273o\202:=\014\0063:g\2402\275\374\320\004\275\024t\010=G\001\272<iw<\274/\320\202<\223\226\023=\274\377=\275\336y-<\321\345\030\275\375\373x<\215\236(\275\244\232\021=\203\335\025=g\334Q=\317\341\344\274\030\360\275;\364(\221\274\246\200S\273\300\014\211;>\035\024;\277\304\376\274\0239Q<\354\232\335;\266,\006\275C\243\226<\207\367\231<\035g>=\260\224\004\273\353\357\214<\350\361 \275\240\301\265<\343\363\035=9\256\032\275\206\205\n\275wpK=\254\260\'=\312\306+=\362IS\273\335\2445\275\361*\035=\330\037\021=f\257\200\272\3509=\275C=\t\273\262\346\326\2740\235\026\275\256\330;\274\037\275\301\274\016}\337\274\365\2272\275z[<\275\265\246&\275\202a\037\273\340\352\222\274\025iI\275\301\032\330\273j\021(\274\205\372\270<O\003\251\274\336j:=\026\255h\273\036\244\262<wZ\255\2732s\024\273\024|\300\273\020\252\276\274P\272$=\361\372F<\353\274.\275\335\3425=:\201\315<|aP\275\002\021\004=\227\302\234<\217\007>\275\'\254\203\274\277\221\272:Kk\254\274a\272\244\273 \371\307<\223?\264<\363\336\306\274\333\232\334;\022\303\206\273\003IH\273B\372\300<\221\324\014=\267\322\021=|\216\006=d\310l<p\363O\274\314\354B=\013\"\325\273,\341\315<\255$\010=\352\3747=\264XG\275\021qJ=I\037\266\274\312e <\322\267\013=R\257\037<\350\027\t\275A\211f<\n\336\016\275\220?\035<H-A=\262\200W\275l\202\241<+Q\365\274z0\264\274B\014\010\274t*\360\273\036\206\177<#\361P=Z\003@=\3112\'=\013\357\313<\347l\363\274z\323\006\275\n\336V\275\262\316\017<V\210\305\274\250<\260\274\237\203x\271 \250T\275@T\342\274\203w\371\273\306\351N<\306{!\275\227\233q;\032\004\005\275\356\3748=,3\321<7c\371\274\032LP\275@\2069\275\353w\020<\234e0=\245\005\207<S\325\'\274>\036\251<\271W\304<\034\340\025=\237,<\2745\271\330\274\212\2020\275\233\t\325\274O\300\217\274\365\376\220<\346\232\370\274\224xa<x\343\201\274\254AG\274\203\310M\275\014\310\'\275jP\024\274\201#\373\2742\r\010\275\232\273\026=\354\242\014\275o\315\352\274\352`\325<V\311\r\274\022\316\003\275*\276,\275\034\330\276\273p?\246\273\016\227\210\274\277\200O<\373\314\013\275\37299=\223\021\270\274]`\001\275\305\350\000<iY/\274\177\305;\273\006(\032=\324\355M=\256\254E\275\342t\342\272\362\342\275;\001\210\350\274\373\2718=\nT]\274w\230%\274\231\242\266<\365&\354\272\235<\355<\232@X=\215\253\021\273\365\251\362\274\344Y\202;\324\t9=[\245V\274\267\3310\275D\364\231<%\3557\2754!\033\275\005H3=\000<%\274M#\'\275\263\306\321<\222d\372\274Y]V=\2506\'<\034\263\254\274\336s@<\336\2661=:\216\321\274y\255H\275\316O4=\257|\225<\331\3420<\266\211\254\274\262\2615\275\002W\375\272\301\2062=\3257\245<\010\306O\275\033\023\232<g\335\023=\306dE=s\234|<\230\351\203<\340\304 \273\022\025M=\213\033\004\274\2464\027\272\"\004j:\327\332@<\\\246J=.)\316\274\216\271&<\257\0312\275\230\253\017=4\002\205\274\230\375\371<\374\346I\275\215\322\036=\351\303\261\274\250S#\275FB\353\274Co\245<\310\355\027=ggO\275\322\'\211<\354t\035=t\201E=\314T\037=6\215\334<\017\323\003=\037\332\010<\014\315.\274\302\335d<\\\025\033\275\r\331\252\274@\205\235\273[7\264\271\322\022J\274\222=0=\227\256\014=\014\204\020\274\334\'C=z\304Q\275g\3050=w\022\252\274\367\0319<\315\233\224\274\231\001B=\255\306N\275\343\276\231<\205\220b9\014\363?\275B\n\230<\3478\240\274C\236R=<\262\026\275\340\005\226:p\345\331<\027r\261<\001[4=\353\223\361\274.\317P=[\346/\275\301g\023;\300wR\273$\3541\275\235\267\271\274\346\331\270<\014|:=\245\020\221:)s0=\302\262-=\037sE\275\304$\352\274V\303%\275\003\271\023\275;2\321<\330\007$<\335\213J\275\240N\n\275 \344\331<x\334\\\274\004\034\311\274{\315\010=\035\370(;\317]\215\274\20336<\315\243\350\274\243\252G\275\254q\350:\242Ke<\335\033\357<\n@\361\273{\314\260<\n\373S\274\005\242,<Q^\344<`\245.=\336\343%\275\302\236\331;\364\036\213\274`\016\002\275\030d\006\275p\374+<\360\246\r=-\2528\275\351\202K=\027y\253:\300;v;\004\032\236<\304k\005\273\311yN=k\247.<\206%&=I\253==XR\207\273\276J\337\2742=\010=d3z\274\022P\314\274_$\254\2743Y\214\2721\002\301\273\310#4<\214\003B<\0205\337;NU%=\207\370\323\2740\337\000\274\266|\316<\241U\301<\356\301x\2738\026\247<\251\035-\275\357\377\n\274[\222\307\274\210[M=\"\345>\275\274\230\027\274\200\276:\275\002\243:=\n3.\275\272x2\275\304`\200<|g>\275ec\252<k\234\004\275\251\352\246<6\207y\274\332\3344\275\265\004\261\274\266\016w<C~*=\207e8;\244\3702\274i\205\231\274sO\014=\212\255.=a\312\035\275\320K\000=[\316\031\275\256dI\2745ty<BF\273<8\223%\275\251R\004\275\354\005\205<\355\352\303\273(\231\232\273\366\002\305<0\225\254:\217\322Z\2744\010\211\274\256\024\360<\322\356\'<\001\017\321<\260\tJ=\201\231S=Ff?\274\233\345E=3\207\034=\223\214\014=\245\366\004=\330Z\334\2745m\316\273@\324?=\300\362\303\274\325\373\001\272\r\213\361\274h]\202\274.\377\247<:\253\301\274\341>K\275\022\3253=\346\227\035\275T,(=\220\360\323;\360g0\275f\203\245\273\253\327I\275/\020\002\274q\311\376<\227a/\275\314\037\226\274\\\316L\275\363\241\006\275w?\323<\332\331\013<\307\246\251<\241}=<\001\027U=\373\350\255\274\002\2111=\377d\362\274a\2317\275\021q\"\275\236.\264<\311)\365\274\220S\022\275\221W\004=w7#=\001\365\307\2734K==\311a\375\274K\351\203</\310(\273xO\200\273\355\374/\275)\017\345\2739\327\266;\"\351*\275\301x\004\275\207\036\000\275\275\033(=<c/\274\026>:\275\363\332\345\273-\004\020<\342\233U\275)\252\313\274\222q[<\205\214\302\273kR5=\310\036\006=\022\377\277\274\177)\007\275_\324\237<\355\354?\275\337-\374<\304SX=gc\301\274\234\244*=\3320\204<\351\010R=\364r\332<\321\031\026=Q\340\225<s\027\277\274\363\302#=R\222\347\274\245\355\014=g\232L\275+?\200<\224\212\214<\032\026\232\274m+i<\3207\035\275\232\236H\273\032\3357\275\373\002\255\274\311f\354\273\340p\371\274M\305\274\2734\224V\274\307<\216\274b,\032\275\234~\021\275\272\274\020=0\236\t\275\345\262L\274e\r\241\274o\323\370\274\235\375]\274c,\005=\245o^:\327\312)=b\301]<i\271\032\273\351\327 =\256\231\256<\010\035\360\2743\275>\275]W\363\274\014q\003\275\307\335-\275\372\274\312<r\306\376\274w\244\362<6g@\275\246aR= NF\275\251\351\340\2742\260\345<QU%\2751\250\025\275\376`C\275dg\227:\262[\374\274\234T@=\256\231\n\275\351\300\022\274\317\344\232<=\221w;*\025\210\274\001SH=\373o7=T\352X\274\320\r \274\032\223\037=9\220\261;R\300\204<\370\223F=+\264k<\036\322\016\275\330< =\225\221*\275\342l\365<\243\021=<\205\334\002=\317\252d\274<\337\214\274\363\241\207<*w\203<\302\234.;W\336\314<\311+>\274\237e\252\274gl,<\035\307\020=\264\353D\275u\177:=\032y\225<\365^\307\274\264\346~<\023U\023\275\367O\034\274\\h\327<\306\300\210\273\216]\032\275\2737\244\274\243\277\274:\226\365\214\274q\216H\275\321\017T\2746\3360=\376\351j:\306\000e;\237\204\245\273/p\030\275\216P\227;\026KR=o\331\002\275\372~\251<\252I\343<\324\2630\275E\213S=\222i\034\275\353b\023=\025kT\274\2016\373\274D\0312\275\362\240\365<\224U\237\274\256\207\270<\236 (\275u\005\010=\342o\020\275\034\010>\2759QQ\275\216\374\376\274G\265K=\377\034\001=\344\222\253<\204\231\276<\374\035\327<\017\263?<p\3046\274H9C\273\004\342:=n\265\026=N\335\"=_z\323\274\215\243\340<\022\366\014=\244\212$\275\243\006\223\272\305\365\340;\243\337\215\274\267\224 \275W0\213<5p/=\3164\033<Y\274\275\273t\254\032\275\313\340\017=\307U5=Q\240\006\274v\2117=\324s5\275\225\262\023=\\\257\030\275\341\027!\275\341\351\234\273\231\375/=U\301R\275-0\213<\254*,=\223\373\240\274\3024\016\273\375\007W\275\277OI\275p\324\224<\341\3702\274x\341k\274T}X<\207\367\334\274\347\263.\2757\3618\275\002\276\375<\256\202\365\274\306>\224\274O\211\271<\231\223\327\274\005\364\241\274g*#=\227\265\354\273\306\210\241;\221R\347\273|\317\330<[\225\037=\344\352\333;.\336A\274)\014\027=\315\363$\275\324\3563\275z\375%=N\023\305\273 J\354;Ke1=z\265\022<E\366\237<\254\330+=\"}\215\272\022F\351\274\373\335M\274\301o\010\275\217\366\223<\270\363&\275\033\001+=\301\036\260<\010\316\230\2721\355\361<\003\340\272\272\347\332T\2750\215@\275\256)J=2\334\354\274a>:\275\353\177\202\274l5)\275\276\026V\275\256\207\353\273\021\361-\275\310\243\027=\256(\375\274t\233X;\255K@=\337-\001=\224G\021=\253\031\353<;mE=\331\370.\274P\263\233\274M-\354\274:\332\216;\320\330#=\2352\217\274\035\004S=\202\242=;\307\241\002\275_N\t\275\216\002\215\274\305=\000\275\'\007v\274\335\277\354\274\320+S=\362H)\274\242\355p\274@V\356\271f.\275\274\3678\002\275\016\206];}\030Z\274\021\320\035=\335q \275\233\230\007\274\302\2137=\"\306\221\273r \244\274k\374\255\274\256E\244\273\317\344\204;\032\226\003=\330f\335\274\371\211_\274;\017\211;68\214\274za\010<\227]\321<\345\202\257\274W\351,<\\\274\371\274\241p\036\275\240\313\332;o\026\031=c\362:\275\277\367\256\274}\325\314\274u\027\235;\325\0019<\337\353\371<_\314\315\274y\353\352\274Q\002\301\273n\332%\275\253^%\275{\200 \2755\033\271\274w\235\037\274`\\\337\274\336\361\360<\004\315\204\274\240OI\274c\224N\273\014\210\000\275\310\026\372<\313\201\034\275w\366\026=;`\016=\261\372@\275\230\2674;\226\275\336<\030\241\207\274r\360\010\275=\213\"=\233\324n:\341\355K\275\220\207\245<\3027\234<\026<\212\273%\333\212<\302n\356<\301EO=\226~!<hVI\272\251:\332<\232\346U=\214\366\033\273\235B\001\275\337u\265<\216^e<\307\205\356<~m\303\273\235\030\326<\264\022S\275\365w\016\275\347\343;\274I\273(\275[]\304\274$\2215\275\314\004\351\274K\343\353\27411\371;\240\344/\275\342\255\030=\366F\315\273\037a\261;\003:\027\275&\t1=\036&7\275\333\262\316<5\034\267;\2676S=\256{\024\275\221\020S=%\371\356<\312nD\274\276\375\n=\374\307\274\274j/\344;6\005A\274?P@\274;7\271<\\:m<\r\212\027\275T\217>=\267T\246;\257\026\032=Y\315\337\274\033\272\377\274\322\362\021=\225\273\367\273\342\302&=\310\017>\275;Q2\275\010D\256<\331;\372\274\257o\223\272\323+\351\274\324\177L=\2057S\275\026B\307\274\274\253\207;\212\276f\274\260?C=\274\214\211\274\213\307\323:\332\261I\275d\033K\275\236\326T\275\202@\355\2745M\223\272\344\376\274<\303\310B=\020v\203\274\376#5<\371\361.\275\262\257\030\275\363\002\332\274g\3078\274\266\320\336\274\241\357\213\273>&/<xb8\274!\335\214\274\006_P\275\004}\205<\366\230\'=O\370\210\274$\312\263;\034\245\314\274\370\367\204\274;\276\"\275\362\342\242\274d`Q\275\311\226\267<x\321\340\274sfS\274\274q\"=I\263\272<\370\337\337\274\376\305(\275L\257\206<\331\242\265<\342s\235:\253\013\035\274\177\033\313\274f\327b<\357\214\325:~\215\313;\373\346 \275\330:O=\244\202f\2738\370\235\274\301\262\306\273\360l\305\273\343n\r<M\n\265<\276\234\356<\272\263f\2742\3020\275\003\262V\275\302\265\272;3\365\017\275\273\213\030=\233i\n<AN\252<~\303\n\275\003\337*=N\003\036\274K#D\275\323\347M=\"\306\033=#\250\002<\035\231\t\274\365LX\273],m\272.\222\331\272\'\030%=K\251\372;\253\267W=\33682\271\364hD=w\247)\275\312\217\023=\025ck\273\257\314\006\275F\367#\275\256\033\240\273s\311&\275\203F0=`6\000\275\271V\344<`\207\357\273\024\260(\273\254\201\243<\230\001\237;\320\002\240<7\376:\275aT\237\274Ix\276\273O\234=<\251\374%=\370\241S=|\027\276\274\273\2004\275\"y\244:a\020>=\241\375.=pG\227\274?\207\025\275\234\207W=\235+4\275\315%C<\276=\251\274+\341f\274 \223><a\023\212<\347]\357\273\271\271P<\256\223\026=E{\233<F\034\234\274\010\204A=w\300!\275$zR\275\367\2617=\3336\021\275p.\336<\032k\353;n?\225<T|V\273\260LX\274\246j;\274F\357h\274\007\212\265;U\375\024\275v\210/=N\246v;%\202\347:\037\216\003\275\330L\205\274\354E_\274\272\025\325<\177!T\275\017\222(<N|\200<\370KC\275\320j\005=\243\274\033\275OT\236\274\014A\036=\354\\$\274\300\233\t=\217\000\023=\005]X=\277\337\037=:\213\231\274\023C\344<\215[V\275\201\341\025\275\253\236*\275\200R\3519\324\010I=\345\267\376<\261^ \275w\314Z\274\264U*=7\354\322\273!*2=\240\310\312\274\361\256\350<\200[+=\032\347\035=`A\353\2745\367\025=Y\263\264\274~Xd\274\271\"\310\274\364:9\275\337\224\351<|\244\372:\275\361\016=\347\230.\275\317\365\343<\214\261\242\273\261\335\037=5\253\270\274J\305R=\314\240b<\200\212\373\2745\244U\275\213>\033=\203\000{\274m\317{\274?\332\276\274Q\1776\274S<%<P\335\031\273\212\000]\273`])\275\314\277B=/\266>\275s\224%\275?[\255\274$\252\211:\273\263\244\274\007\201-<D\034\000\274&v\345\274\375\371\323<$:P\273\262\211\001=\246\202\356\274\375\206\311\274\362\210\332\274\260;\201;\335\rT<ClD\275\324B\307:w\266\"\275\3666&\275\344\324\023\275\316\363\217\273BZO\275\270^\326<\332\271\001\275\271\266.=Px\365<E\217\001\274\236\363\t\275\357\227@=\225\206\030=\303H5=\004H\276<\220>\006\274i*\306\273\226\271?\275.\226M\274J/\006\275=.\017=5\366\207\273?7N\275\236\345\332;\335\240\332\274\374wZ\274\010B@=\313\362\246\274nm \274J\262/\275\033\n\005=Q\246\030=\305\264j\274\224\264\354<\236\225\007=\211\032\253;b3w\274\362L\215\2740\004\270\274\260\026\370<\241s\277<z4H\275c\206\031\271\025\300R<\225\231%9\233\226\n=\030y@=\021tk\274,(V=\236\024\257\273\201l\300\273\215X\315<\214?>=\001\271\026\275\2461\224\274\224j7\275.\032\203;\327y\256<\224\314|\273\365\022\252<7~\354\274\3403\326\274A\200\353\274\306\262\021\2741z\342\273\300\034\003<U\"@<uGO=\240&\213<\212\333e;\353\354!\275_W\250\2730\237\252;\316\014\231<\342\276\274<J$]\273\026\372\310;V\341\013=\360z\253\274\031bg<\312#\323\274\212m\235\274\353\r\376<d{\227\274\320\342W=\227\224\024=4q\266<\370\301/=\301\325\223<\243\3766=\205\254o;\344\355\304\274\201\273\254<\021\"=\273\201\323\362\274B\003x\274\327\005\2518E\204O\274`\364F\275p^S=\347\246!\275\212K\275<\020h;\275!\220\200<D\003X=\356\032\372:f\304{\274\017\353\314<bH)\275\325[p\274\021U\353<\027z\220\271\"?\205\274\2032m\271\2358\262\274\210;C<\324\301n\274&\032\324\274<\2278=\377\262\317\274\221\360\213;\003R\256<M\353\233<\340B\010<ibI\275\016\374\253<1\373<<\264\376\033=y\345\001<\314>;\275Yh#\275\371\227\030\274BK&<\232L\030\274\023\031\221\274\361e\257;\307\203\020\275\0255\034<N\017\t\275\272\013\025<\350\0253\275\312K\247<\342\"+=G\007\002=%u\342\274\206\336\311<P\002\366\273pE\311:`\005R\274\215d8=\336\272\332;]q6\275\244\013\325\274\224o\016=0\301\247:\037\227a\274\t\251v<>\271\006=\020\341\230<3Nv\274\317\377\014=0Yq<\350\364\331\274\367\360\022=\326\247\034=<\031<=\000pB\275+\2360\275C\340\014\275\005\224\316\274\003\200\314<b\2554=\251DB:\273\322,\275z\260\242;+\365%\275\002\0010\275;\020Q=\330\213Q\275\030\013C=k\027A\275e\300\035;\031\367\004\275\335\327\306<\300CU=\211\350N;c}\236<N\027\215<\376\307\t=\222$T\275\225\301\236\273\004W\241<\310\314V\275\225\212\005=!\222\222\274\302\334W\273$8U\274j\341*=7|\014\275\352\223\"\275M\2162<\374\363\361<M\177\005:\007g\354\274\325MF\275\007\344P=\010^\003\275mE\361\274/\222&\275\363\277\313\274\262\373\005=\334\230\304<\340oO<\347\224\357\274T\222(\275\035\251m\274_*\370\273!m\022<\364I\267<\320\n\205\273%\232G\274um\250<g\013\221<\207\326I\275`\030\371\274\033\004\006=\017G\2239\006R\005<\330\216H\275\314\0106=\272\037)=/\251\304\274\251Z0=s\324\247<\220\356\313<\027\201\037\275\303&\373\2749\007c\274\265\027c\273\2401\251\274Q\210\233<\302\027q<\010[\224;H\330\260\274\366w\326\274\231D\332\274\215\370\005\275\300\260%\274\010\327\302<\207\327\270<U\023!=\327\254\352\274\246&\335<\013\033\020\274+\353\004=\\\266P\275\325cz<]\371V=\324\234f;)\234\007;/\177\372<\010\3540\275k\201\246<\215\332K<c|\370\274ow*=\310X7==\006>\274\357\300|\274\261\206\014\275\253\316D\274\316\226\365\271Z.\036\274\327*\344<\365uK;IR\016=1\360E\275\241O\353<\026\217\342\274\352\337\245\274\010\342\004\275\r\027\014\273yX2=\330\025/;\375\"\326<\202\215\330\274in\331\274\243\206q<F\206\226\2742\242m<\227Gf;eG\342;\023\313]\273\374L\032<<\267\351<\356\312\351<h\216\360<\255\324\315\274P\033\324\274RJ\305;\231\n\241\274\263\344\337<\022\177f<\266G\r=\370\267/\275\013\273\026<I\3713=,\246G\274\'\202\232<\247!\225<\036*I=\207\230\027\275\237\312\330<\246UI\275\373]\202<d^H\275\260\362\003=\315qD\275\367\266N=\332\0249<\265\237N=s\250f\274\364\273\312\274R@1=x\301\230\274\310\307\245\272_\343\205<\177\222E\275\216\216\t<\321\260\300\274\343\007\'=\255 E=^\243\213\274\250gE\274\227;H\273Q;>\275\355\237\t\274\312\304i\274\345\331\304<>\351\270\274\277\233\004=\311>\026\275\023U\236\274p^!<j\215?<\335\t;\275\367P\252<\243(\342<+#(\275!{T\275K\245\312\274\025\252\343\274,\301\266\274\376Y`<\334\323P=\225\000I\274\264\321\214<$-\337<gDz<\330o\205\274\2609\032=\304$\'=+(\201\274\33516\275\025\000C\275\032\340\317\274\227\275\217<\272\034J\274\027\037\365\274\215\205\320<!\2655\275\372!/\275:\251\347\274\300\216*=E\312V=xg\312\274\302(\013=\304\031\271\274lqG\275\257\223\032<*\r\254<K_$\275\346\327\'=]%G=\320\000.=\0308$=\212\214\t=\n\267A=5=\305<x\002\275\273\034\205e<yF\377<\241\322/\275\227-\325<\274\212\007=\237E)\275\366p\373<-\333\315<fH\230;\355\236<<2E5=H!\350\273\013a\\\274\026\204U=dK$=\025\256 =\026\270\007=\t9\231<r4K=\232w7=L:x<\276\210\021\275\036\"l<\3276\352\274^.z\274\274\222\277\272n!\375<Te\337<\347\361N=]\370E\272\272\\\270\273\2716D\274\367u+\275V\324\025=\260\271\014\275\347\327\244<\231\no:u\030\242\274H\002\034\275H\032S7\327\"\305<\037\017q\274Y=\030=@7\016\275\230\251\315<j\304H\275#o\215\273\214V/=\017\314V\273\301|\373<?\"\014;\272g\336\273=g\346\274\226\317\305\274\351Z\204\274\327W\336\274L\227I\275K\013\023=\355\337<\275\262\357\002\275S\326\034=\207\005\332\274\350\016\233\274=t\005=\253-3=|\201\034<\323{9<#\264\024=|W\013\275R\3426=\371\257Q\275+\227N=\300\202Q=\304\010d\274\326\247\235<w\000\372\274S\356W\275\306\332U=\347\214\230\274\177\\Y\273l\244M<Y\370\327\274V\342\002\274\0353T\275\210\334\002=4\357$\2756\212?<E\346\214\274\350<\347\274\212X\026=\366\222\362\274\354I:=g\177\267\274\237\372\207;\320O\372\274\000\355\032\275\tY\204\274\250\001\001=P\240\037=).\257\273\361bE=\\V.\274\307&3:\213>\324\274\210\2160\275\367\222#\275\006\264+\275\024X\006=\360\271\276<\025i?=\245\356\255<V\242\227;\230\317\236\274c\232\350;\247\'\237<8\016\331\273\007\267H:5\0103\275\321\334A\275\317\217$<\241\336\362<\207L\377<v\037g\274\277xC\275g\363\016\275T\3406\275\332\222\034\275K\322\372\274FP\010\275\t\247\306<\241\3456\2755\217(=\312\325R=\007\343S\275\004\245\245\274Hl\366<\030j\375<\035#\325\274\264\214\377<G\033\324\274\257\214\024\274\322\235\301\274:\244\334;\244\001Q=\373\366R\275*\361\236\274\277\274:=B\234<\275\304\227D\275\370\241\312\273\345{\305\274\367\312,=\210[\244\274\343\252\340<\305\006>\273\215\327@=\347w\025\275\342l,=\221\374p\274\037\236\217<\300\330W\275\207\3028\274@O\254\273w\306%\274\356\324\332\274\370\007\373\274\210\n$<\351\367\007=\214\341V\275\325\377&=U$T\273g\356O=X\366\006\275\357\316B=\262a =\366&%=\226\020\006\275\244\360\345<z\363D\275\276\013o<\225\212\336\274\375\0146\275 n\016\275zt\233:\'\326R\275\353\307\207;7\271\257\274\316\373\020\274.i\252<\203\334\265\274\210\372\017<\217\014\330<\013\344\347<X\3613=\177_\n\275\206&\234\274d\313R\275D\372\351\274\362\215\030=i\014\233\274\223\004\005\273\373\020 =\306\0019=\"\264w\274\361\222\270<\223\260==0\251\325<\270\301\300\274\240!\3419\365\316\362\274\333\226\216\274\255\226;\274\035t\212<\234i\245<8\334D=\004@u\274\205\214D=\021\027W\273\\\\\370<\316d$\275$%\316\274\203\356p<\230\343]\274\347\263\032\275\311\302\031=\002Y\235;\315H3\275\262\004\t\275Y\363\013=\250\346L=l9S\275\365\256\020=\016b\345:LDV\273\207\355\212<\310\220\007\273T\037\002=\272c\321:\373\344\302;{\366\n=A\032L=Dl\030\275?I\001=\306\177\000=\024\036\236<\002\004\027=\033\361*=\022\256\355\274\372\222\000=\233Vr<&\215\342<^\312\033\275\006B\341\274\376J\001\275vJ9=a \t\274\325\004\377:\325k\003\275\376\357C=\265\303\004\275\271\002\r\275\215\371,=\242\261\023\274\357 \031=\004\240I=w\363\373\274r\367\n<\037}\217<\372\2232=\034V\237\273\373\275.\275\310\303N=\302\361\010=\1778K=m\335\266<X\233\324<8\277\315<\347\"\314:Xk\026\274\3116\252:\340\0308\275\266/\215\273&)\005=y\tE=Bi\213\274\362g\321\273\276!\225\274\272\370\324<:*\026\275\024\177\273\274\260\304\204\274\250\351-\275b\206D<\017= =\247\217\367\274\375\336\244\274S\255\326<;\000>=\235\r\256\274c\033@=3/N<9\257\225<*w\374\274\027p\213\274\232w\326\274\212)\316\274f4\235\274_&5\275\r6P\273\203\347B\275\200\2025=\217\347\364<\257q\356;\354\340\021\275\024\344/=\2260+\275\346\305\035\275\236\216I=J\204\017\274[`_\274\335p\241<*\025\344\274\204R\006=\223\363/\273\314\266\310\272\215\2139=\207\361\350\274\377\314\022=U`?<q1\230<\322\220,<\266k\356<\333\242D\275\030\277\"\275\240\207\215\274\344H==\305\017\016=\221\310\335<\006\\\332\273.\276<\275\232o\022<c\272\260\274\2648k<\271d\017<E\354\313<\345/7\275\205&\326\274\254\311\242<\334\337\231\274\223\366\017<`U*\2753k\365\274\241\345\013=\336\\O\275\311\234\020=\033i7=a\307\271<\362F\366\273\215\353\030=\037v?\275I\347\022\275\006\252\262\274\350\352\307\274\200\247B\274\204\354\'<\2268\260< \313\336<\211\246R\274a&\036\274I\314R=B\217\027=\nA\201;q\2507=\206\314l\273{{\273<\363\260O\274\323Wu<I\341\320\273!\201?\275\372\235y<+y\236;Z\341J=\355p8\273}\377\031=\364I\314\274\262d`\272\021\352\r\275\310\211\323<,\362\250<\026nW=JOc<\276U+=v\343\004<<\024K\275\001\035\221\274\277mT\275\273D$<\337\017(\275\363Gt<R@F\274\010\265\256\274\'\003\356<\223\316S=\323\010\312<\251\341\363<\335\220R\275\263X!\273\300q\205;\355\345>\275\366\244\007=p\000\261\272\312\372\000\274\355\212,=\216\\\000\275\341[\033=\215@$\275\366\365R\274\252+j<G\221\016=D\367\014\275y_\320\274\303\022@\275l?1=;w\255<\316;h<K\320\221\274`\214F\275F@\203\274\365\365B\274\320\225\362\273\332*T=e\020$\275c\356\361;5\353\352<\014\037\370<a\222\013=\032\'\260\274\341.\207\274\357$8=\302l!\275\224\344\244\274x\307(=\211#(\275\214\215\234\274\257\301\n\274\240tO\2751\270\177<\303\233\020=8\243\266\274x\233\r\275=\365);\275/W\275\321\337\376<\361W\234<\225\231\032=\017\r+\275\315a7=,6 \275\324\255\031=u4\r\275\267TF\275U*\030\275k\303\225<GJ*\275\247\236!=\207\2020=R\0352;\266\320:=\361a\021\274\324\302\024\275\"\307\017\275\332\227\021\275V#\320<M;P\275\244!M\275\377\3329=\037\024\236;7\303\217<\"\355\302<\331_\352\274\305\251\305\274\024\033\247\274fn\271<#\217\243\274l\244><\235`{;;\215\236\274\032\022#<\033R\"=v\221S=N\005\024=\001\331K\275\204K>\275\371\373O\275~S;=\003\001\314\274\375\260J=A\315W=G\223\321\274H\202i<\277\n8=\341\364K\275\021\201\360\274\257\215\216\2735T\244\273$\001?;g\221D;\024\354\213\273+P:<P\353\027\275+\374\001=\177\266-=\275\032O<n\3401=\\\214\312\274\312\307\013\273\021\0301=\002O6=D2\266;\236\366\337\273\204\223\204\273 \006P=\335b6=[\242\035\275\201:\037\275k\3648=rd\r;m\377\361\274\267\031\334\274\t\267\006\275\203\314?\275\315+\226<$\216z<\350W\261<\332\275O\275\351b\331<\213Q.=\372\304\004<_|\274<\375\227\002\275\360G-=rK\006\271=\201\257;\252\255\332<\035QT\275\203{ =\346\354\215;\242J==\276\326o\2737/\014\274\203\2205\275A\352>\275\005\314C:\237\2357=9\364\335\273r0\220<}\201\301\273\323B::\331\337\336<i\264\373\274\037h9\275i]\220\272\277\306e<sV\260\274\031\222\265\274\350i\334<@\364+<\226\"G\275m\017M\273R\321\217<\270\214 =!M\232<\006c\037\275\231\005\010\274t&\206;\207!&9B\322\201;\314\345\177<5\330\340<\330\312\341\272%\221o\273\301\202V<\346p\177\274@\270\004\275\313\207Y<\226\316\261\274\005\254\227<`}7\273,z6\274\016\005\232\274\316M\223\274A\240\374\274\237\032G=U\233V\275\246\272\310<#q\016\274\323/<\275\246\013\307<\315\316\353<\253\"\004\275\333}$\275\324\247W<\333\324\262<[\330\225;a\277*\273C\316\"=zu\350\274e\217\325\274^\014Q;\2003+=aj\023\273=7M\273\027\3607\275\351_\032=\272\223\032\274\264\302\002\275\336<[<\2721\230\274\342r\243<\232n\024\275\203\3421\274\275z_<\325U\210\274K\235\025=\206;\253\273\214\320\367;&\227c<\0001T=\3379\021=a\212l8\034D\034=\234\n\333\274@\214\214;\243O\367<\005\320\001\275\304\270[\274e\301\302\274O\247\245\274Vv\034\275\360~1\275\2540W=\331\023\022\275\306\300J\275A\361R=w]\242<,\240U=v\346\354<\333\256==\320y\210<\033\203M=\227L\r=\346\2778=\005\377\364;\325U#\275\310\000\'<6\241\203\2740\250!\274P\330\211<\227\255F=\017X`<\277\262\312\274\315,>=w%\225\274\241;H=\277m\206<$\001`\274Y\'\177\274\267\316\365\273\010eG\275\017F2\273\240\034\270<0\2278=r\031\020=YF*\275&]\235\274\364\227\336\274o\2110=\330\304\n\274zi\032=\030\2010=\233\364\244\273\254\267?\275\277\226;\275Q\322\001\275q\037M\2758M2\274\224;\035\274\002M7=P`6\275`K\373\274\224\230<;\247\305)\275\341\025\354\273`\331E\275X\337\002<\330A\031\274\3203j\274\331m\203\274\245)\267<*+D=Q\017G<q\002\354\272\037\205R\275O\246\363\274\353Ay<t\254\374\274\365\271.<\253\233\004\275d\334!\275\354Y\210<s \245\274\335\021\225<\321#\260\274\206/\260;c28\275)\334?\274O\332\"\275\315\323\333<\232\274\355\274(q\262<\322\325\270\274bgN\275]\023+=\367\252\321\274n\365\007\274\002\305\376<Y\243\313<<\006G\275w\222\273;6\235\216<]oR=#\2730<P\361\214\272\250\3067\275\004\337\253\273\376\2476\274\241\273A\275\307u\324<\264C\320<4w\'\275\206\336\256\274g\322\217\274\251\036r\274Z\276\016\275\246\301;\275\022\353\\\274\036\253&=\232\330\227;\006W_<q~ \275Z\256\341\274!\"\236;\023\261\216<\242\360\360<\035\032\013=\361\233E\273E}\265\273\033h@\274\224\253\365\274T\312P=p\322S=\\b\016\274T\337 \275)u=\275\202:\t=\263\261C\275\227\202\363<\t]\017\274\335\006\007=[\306\372\274\003\002M\275\237\366\023\275R\253\343\274\000\252\266<\236\320\224<\247\261V=\302\325R=\253\2260=>\177S<\022;L\275G\3758\275\3709\225\274\223\021\326;\245[\206\273X\301I<\200\207\374<\244*)=\016Oj\274\315\233\224<\300,\273\274\036{\330<\373M\026=\243\347F\275]\3346=ps@=\nR\033=\355\242A<\240\301L\274\266\230H\275\374\210\000\273~\272\370<z\265\213\274\371O\356\274]\032);\013\324\300\273}b\226\273\014\375B\275\027\237\314\274\"\257\035=)\251F\274\324\305|<7\014$=I/\373<8\377\234;\'r\021\275Y@\364<\036\000\314\273k\'6=VI@=\275\361\326\274\017\326\307<\374\316B\275\207\250\020=\326\026H\275-\226\034\275\375\330\250\273\247`\222:]\306\030\274\272gL=G\374\343\274d\032\352\273\344\341\n\274\213*\026=\013M\021\273-X8\275oEI\275\\p\000=f\201\036=\347\323#=\330\240!=\001\377\370\273\300\0203\275x\360h\274!\037B\275\360\350;<\036\270\013==W9;\301Z\t\275\330\226\033\275\036\336L\274\316\005,\275$;\252<\370\321w\272>HA\275\313\254m<xs\206\272\306_T<l\303\224<\351\312P;\004\216\315\274\313\323\034=\007\021P=\213\016\037\275\352\303\004=\037k\014\275\232V\304\274\255\336x\274`\202\345<\252\037!\274\324F\010=\253\307<\274Mv@=\3459)\275\034\334|<\007\337F\275\313\254\262<<\353\016<\344h\356;\207Cz<\223m\365<\334\n\273<\236q\037;\2642\354<\361\004\007;\002N\r\274S\004i\272\032\\\025\275\3570\232\274\267\257\r\275rM\';3/(\275Av@\275i\354r<\31272\275\353\301\311<tJ8<\201\242E\273\02139=\024Z\205<\026\274\211\274\000h\352<\263\233\031\275\264\361I\275\326\336S=310=\316\370!\275f\322W\273\235\304\367<1\027\213<\243\333\343\274R\"\200\274\\\261\026=]f\304<\215\277\r\275\271\017\001=;d\270\274\027\030\010\275uJ\217\274\260-4\273H\240\333\274\211\375K=\267^\234\273v\025\030=\313\306\014\275G\2168\275X7\223\274W\000\030\275\036\225*\275l\026\013=b\332\023=\315\020\271<\324\331X<Z\323s<\310\253|\274zYJ<\025\302\301;T\326\025\275e\235\030<:T\217<\341\224i:\033\211#\273\366\267K=\373 C=\001\230\275\273\033\205>\275B{\307<\234\251L=\231\342\024=\337\313\364\274\322\356\263\274zA\337<<\303\301\274\365\031%=\374\317\030\275j\270\r=\354pH\275\202\262\316\272\364n\355<\340\001<\275\216\217\\\274;<\016\275\21361=\206\327\271<\226\323-\275\241\300\343\274\036:\270\274\273\240\335<\025\375\"\274i\366\362<\237\365\017<^B\177\274\233\353L=9\027a\274\270?#=\'\022\326<\243\n\236\274`\031\366\273KP\320\273p\032\364<\333\177\t\275\t\277\033\274\262FT\275d\0319=\254\250\274\273\360\346M\275P\3617\275ncy<\247%\372<\361S\361\274\356\027\272<\320ZT=\177\017V<\363>\323\274Y*\256<\014oA=\016QD=\004\234\231\273l\007\271<\354\2112=\252\305\004\275\354\261\030\2748JR=~\332\275;\317j\244;6}\003=(\004!<\016R\255\274\036G\201\274.U0=\2031\335\273\346;A\275S\316.\275\366\253\024\275\337\276C\275\327\253\376<\2461\004\275%\271!;`(\350\274\307\241\222\273\276\225.=m$\247\274x\335W\275\311\216\211<\315\035A=\014\3378\275\003\0026\275\316\017\356\274\204\245\027\275-\007\303\274\333\221\017=\003<\362<\334\212$\273\nj\010=\303\024^<\2535\241\274\204\331\367\274q\312\230\274\315\230/\275!G\272;b\255\020=I\270P\273\216F\213\273\007\"\010\274-\306\241<\240w\301<\023\254\020\275\261\336\017\274\212^\246;\276L\316;\0232\227\274\006\303\335<\373\003{\27430\334<\332\0239\274\027\200\211\274\253\271\021\275\\\204Y<\0347\023\275\212\225\310;E\036\003;H\275\265\274\317>\001\275@\234\024=m\233\227\274\2456\223<\216Q\027\274w\211\340<[r\234<:\364u<\372\212\'=\245\007\004\275\177\272G\275mER=\232\254\236<\017\202\216<\035\220\370\274\216\325\3059\360#4\275\245\240G\274kG\310\2721U3=\270\222W=\350\351\336\274f\246$\275\023I\207<\001\324\301;\234\201\017\275\307\362S\275\255\275\355\274\036\355&\275\303\253\244<:\023\303\274\211Q4\2755\304\303<3<!\275\320,\025<\021W\034<9\252%=\010\300H\275\232\014\304\274\001*\t\275\273\377F\275\003\020@\275\334\374,\273\360\005%\275q\203<\275\3172\245\274\266S0\274\342<\261\274\211\312\'\275\357\026\315<\001(\267\274\026\367Z<\3404\345\274\271\317\005=\202\003s\274\331H\231<P\245V\274\034\244%\274\303q\356;\355-W=\311\202\"\275\260{G\275 \277\240<\220\323\244<HF,=IX\240\274\323jc\274E\005O\2741\247\034;\220\313\243<\266m<=\3119\303\274=>\215<\013\212P\275\243\2256\275\236\024\206\274\tx\210\274c\321\t<\315s\003:\376\263\";\035\373\305\274\030T\031\275`\352\204<)< :\3632J<x\302H<E\372\023\275\367\236M=\004\'1\274\000\246j\274\240\032G<~\260y<\252\027\300\274\212\024\207<\021\364\257\274\233\000\022\275(KT=7\004~<H-I=\363\3167\275\206y7=\3606V\274]\226.<\251\340\013=\271\266K\275\246E[\273\3279\024\275\266j6\274Z\\\332<F\013\373;@.N=\n;\346\274\340\233\000=c?\255\274c9\340\274\035\246\031=\003\367\"\275 \251:=\272s\252\273\014|\365</\002\351<\027oO=\212\007\254<\351N9=\017\364\r=\304\2036\275\322\355p\274N\324\'=\273\352W\273\r\0304\275|\221I=\001\371V\275\271?\t\2750v\253\274\357\303\334<\357\270-=\215\005\363<|lI\274p\367x;\025&&=.\357\362<\241\343\017\275\341\317\203\273\262\253\327\274\336`A\275\006}9\275x\340R=.=(\275\366v\037\275E\3131<\266\212\211<\263D\241\274\335OU\275\032\024\350<\321\314(<\371\222^\274{\007]<\320\205n\274\343J\222\274\207\302\234<|\327\251<\367t\024\275s\237\370\273Q\247[\274\361\005\034=\313w(\275\275\260m\274e\216\260<V\343#=\023\033@=\006+W\275\014y,\272aH\246\274]\256\324;\222\204J=\364h\246<\205@\334\274(\315-\275\347\304\330<\275\305\010<G\350\255<\266\212\013=z\265\246\273\355\376\202<\262\211\321\274\223\344{;\3079K=\310\267J\273\252\tR\2757\357\315<:I\256;\333\376\351\273\241%\321<\202\321\032\274\242\244\030=\264\304\250\274\324\227C=\376\034\332;sq\177<\211\000\311\274H2P=$\336\205\274\337L\007\275\202\024\343\274[k\352\273<jV=\226D\377<\303\205<=\220)^\274i\2301\275\353\034\r<K\370j<9\315\344\274l\206\303;\317z0\2751B\261\274\224\371\021\275\276\201\306\273qK\352<\020\205\010=\027o\304<\345\374N\275\336\026U\275\234\211\237\273zX\331<\2535#=\243\312\322<\370\251$\275\013)];t4\r<\237\300\r\275L\203K=|AP=\340\222\321\274\2055\273<\314mR\275\330\334\302<\254QA\274\007\203\020\275\216\226\346;\231X\027<\310G\312<\225\001\225\274^\014 =\221w\200\274\313,g\274\214\005\222\273t9==M\244<\275\241\215\261;\\\022\251\274\026\0340=\340V\236<$\'5\2754m\227<~\177M<\314\246\322\273\227}\244\274E\321\355\274\201\002\"<\024\345\300\274r\032\323\274\345\235\254;V\272(=\367\016\351\273\240\203\017<<D\332:\211\032.=,\000\002\275!\360X<Tl\352\274\247\367;\273\'$\342\274y\341\242;\220/H\274\311\266\014\275\242\025\256\274l\340\001\275\271\315U\275\364\355\274;C\033\034=*\207s<\237*\336<\376\314\210\274\\\230#=\3437\033=\314\006\030\275\233\364\243\274\014r\337\274\202g.\275\014\005W=\313>Z\274\314\247D\274\027\023\006=\322\246\270\274$NW<_;>\275\255\307V\275\010%:\275\2147\n<4D;\275\001\223L\275!\233\002=\265t;\275\252\000\200\274\231\254==\241 \350;u\334\200<n:\276\274gN\321;\303\304K\275\273\350R\275\350\360\201<h\320\n\275\231\"Q=\255\362)\275\336\2759\274c\246\202<\332\336\326<\346W6=D\237\007\275C\274\212<\355\214&<n\273R\275\213\235#\275\303\363\213\274\243\362&=\260~c\274.\331\032=\320\r\346\274\034\211\221\274U\225\005<:\021\304<\2011\304<\n\213-=\371l\310\274^\201\007\275\014\222\006=\306]\374\274\245\277\263\274\302\337\326<\234<3\2759(\350;\rx\244\274\024S==O\002T\273\201\313S=\306\014\263<\365}Q=\324\341\251\274FM\207\274\010\205\373:t\310\020=\354\273\206<G\363 \275\212h\030\274\276UD\275-i\307\274\026j\023\275\305\373\027<J-\265\274\352\013\200<j\2120\275U\271\026\273\223\017;=\246\321S\275\337\361R\275W\237\361\274\035I]<x(1\275yWU\275X\007\014:\265\033\372\274\314\024\t\275\025\312\217<\361\246\n=3\232\025\275IY\021=\370M=\274\002\222\257\273\017u\031=R\3263\275\000\204\345\274.\313I\274\310\352R\275d\003\254:nf>\275\317\235X<5\246;\275\322y\t</\3570=\207\314\010=~HV=\267\320\303<\277\341\305<\322\3309\275\2327\371<\254;-\275Z\2277=R\367\322<5}6\275\230\353\334<\021\3369<\020\366<\274b(\247<\252E\236\274\217A2=d\3031\275\026\214\272<2[R=\321QS\275p\261\024\274Q\276 \275\335I.=\306L\303<\257\017\376<\237\232\220;\206\2169=\372\216\034\275\323\177\360\274\261\276A=\024q\206\274\327\3672\275\321j\034<\004\303\033\275\363\312\"\275$A|<\232|\356\274;V\373;M\240\247<\365\312\026\275e\004K\275..\327\274\211\232\036\275}O\000=\272\345\277\274,oK\275p11<^R\017\275\003`\033=\321\013K\275\322\366\264\274\376R:<\006\250\212<\356\301G\274\237\3346=\300\016~\274z\250\315\274\323\333!<(\265\267;\213\231\372\274&\311\231;\251\237\215<A9 =\352\016\t<\340\027\363\274\254\364\033=\2748\342\273#(\034<5\364D\273\237\3200\274\253\0267=\204\341\022=\2365\210<]\312\001<\030)\323\273\216?\017=\330fQ=v\221\013=\020\240\32192\343\265<\302\354\210<}\254#=uc\334\272LN\"\275ZD\273;*+\203\274\374\250,\274\222\356B=e\033\216\274-\207{;q\366$=\310\360\r:\200-\204<\215::\275q\3459\275\367q)\275\305G:\275\217\n\031=\342\344K=,\027r\273\345\213\360<~\035\037=\033\321\t=<\t\277\271k\346\236<\363?\002\275>\005\025:xX,\275U\364\361:\255\323\260\274\203\346\211;\336\360\324\274\016\356\215\274J\2169\275_\354=\275<\203\257\273\355]\266<E\0030=g\267n;\001\355\250<\275\010\327:\217\331\n=\364y5\275b\311 \275\323\236\021=\345v\360<\023\365v\271\036\300j\274\217]|\274\033pV=0\322\225<\0059d\274I\035\257<R\022k\2744 \247\274\326\277\206<\343\034\356\274\270{\026\275\357\274\025\275\245\212\n=\307\033\031=\266\215\314<\305c\316;jN\270\274-\006\237\274=\373\331;D\350-\274%?O\275\nT\032\274\333\237\005\275\332\256M=\257\270\013\274\264)\336\274x\353\034\275B\255\021<f\3453\274\275\251\311\273\304\255\316<Y\341\304<\216h(=b\000\331\274\276\316\307\274\270}\207\274\365]6\275:c\312<o\034N;\035\276\027\275\242\346\r\275\203m/=\241U<=?*T=\3074X\275\032\364R\275\\\362\222\273]\375S\275\214w\025;-\353\024=~9\r\272\207\214J\275N\360\356\274\226\254\315<\201^\"\274\310\034\331\274\237`;=\357\327\223<\260\331\035<\342\346\036\275\3626\264<\277\276\326\273h\026\301<\304 \276<-\311<=\354\342%\274\016\377=\275\225l<\2751\3606\274H\257\272\274\327XW=8\226U\274\036(;=O\370\316<\257\2168=\243\304\220<Q\230\227\274\2459*=>\222\336\274\t,\034\275\232(\025\275\237\306(\275l\365K\275\031K\301<\212@\004=B\315\003=\214\360\016\275\022L\026\270\037\353\031\275\231\341 =\255\242\304\273q#Y<\331\317.<|\351\351\273\265\371\\\274\256\362G=\245\322\322\274T\264G=[\306\003<\352\224\275\274]\262?=\016\367\251;r\255\n\275\025\206\025\274\340\010<=\365\355\252\274\230\032S\275&\322\262<\276}\207\273{\t\316\273+\016G\275\207\305:=\335\233\003=\321w\225;\264\307K\275\245\215\004\275\217\030\002\274\033\256\272\274\201-\003\274\262\225\220\273\370Mg\273C\t\347;\264\213\035\275\323\220\277<\007\336\013\275\255V\000=\346\020\372;\273\"C\275\362!\311\274\253k;=\006\220\343\274s\341\'=\tj_<\023I\261\274hcE=\362=\246\271\3354=\275\331N,=.\213@\273\220\341\254<\271\331\342\272\260\240>=\000\201\034\275<\307\360\273\237\"\007=!\005\254<C\216\203<\203\230Q<d\002\240\273\026\311\020\275)\306F=D\376\350:\347\010\t\275F\233\275<\371-O=L\304R\275\300\324\342\274\222I\237:lZd\274,\304T<u\3616\275P\224\026\275^\261\306;\2007\364<\203|\003\2759\262\n<IN\311\273\217c\010=\363f8=8\247&\275\211A\312\274\030\231\016=\332\327\337<\212\000>\273\312\231\223<\220K\316\274\036\206\001<\316h1\275y\235\001\275\202f\030\274\224\3653<\203O\310<O\260w\274\232J\211\274\026\344\225;\177^\240\273S\2326=q\177\005\275a\376e\274\"\216\246</\201\'\275\241\352/=\007\325g\273\301\347\014\275\215!\337\274\202\350\253<o\217\007<9\002\273\273*\377\367\2749\372\354<\037\316\332<\313.R=$4};\022\247\032<\270\260\326\274\216\311\":[\265\003\275\034\020\326;\365\324\t<\266\276\027=\332\364\221<\371\336K\275$\307\301<uMK\2759\322)\275\227\310M\274\373<F=\026\362\210<\376}+<\362W\360<\323\347\214<f\256\327<\010aY<U\262-=q\301\322<^=8\275\203\177\203<Y\222\033\275\370\243\032\274\017\235r:\233\262\366\274#\324\345<\227K@=;\227F\275\342!\316:u\r\267:Y\0334\275\326\300\252<\253,\237\274D\3671:\356\224\372\274.T\036\274\023\\\023=qe>=\253\300\016\275\033\3271=\352\216.\274\206\277P<\202R\024\275\302\024D=l>\360;^\346\253\274\223\2648=\250\242:=y\361]<1\3630=@\026\020\275\356\354\004=\276\021\017<l\nJ\2751iW=\'u\367<\365-~<\361\033>=AM\344;[G/=\311\336\016\271&\030\202<\247\367\315\274\2526\243<\024\260\235<\020Pu\2742>\370<\022\224\246\273`\004\254\274\214sH=\"\227\317<\033\035\005\275\246\347\317<\204\\\024=\265\370r\274[IA=m\271\332<\223\030\306\273IM\324;\320;\303</\347V=\360\020\037\275\365\3030=\316\220u:Hm\031\275Wu\333\273\325i\330\274\031\204L\275:\365\363\274|\360\355<n\307\322<z\\\035\275\211t\311<M\022M\275{\006E\273\035\365\200<\232/\001<\276>\231<\234\006O<\024\241\354\273\240\303R=h=1=$\247\033=\351\244\341\274\305\255x<\210\303:<\315\262\231\274\007\265d\274#\353@=<\"\375\273\030\321T<\020\200A=\325\227\323<\223\217\330<\211 \022\275\315/\233\274\371\353\211;\314\252R\273\"A;<h]\270<\221\001(=)\031\010=\337E\304\272&)^<\201\336\255<\207\0375=\212aW\275\350\017V\275TU\341<\024sM\275\305\275C\274\235A\013\273`Q\225\274\305@\030=\246\345\022\275\205\353F\275n-\200<n\217r\273o\267\345\273H\356!\275B-=\275B\252\270\273<\r=\275E\205\303<a\2559=\345K=<\312O\'=\202{\002=\242\332\370\273\254\227\353<M*#\275A\330\215<5o)=\237\220\024=F\206\004\275\324\213\217<-\270><\275rL\275\266\212\311\274-\210T=\356\242,=\344\335E=\220\356\027\275\260WW=\247\220\335<\314\372\271\274\035\373<=\n\273D=\375\235\272\273\225~h<\246\000\003\275\003m\032=\032m\023\275K\270\210\274|\220\324<w\272\220\274\377\335&<\227\352\334<R\255\001=\261\331\035=D\324A\275\354\203,\274\200\035\234<\300\337\315\274G~\033\275\260\365*=\265\3403=\354\300\027=\327s<<~\273\362\274\364\377\025=F\366\206\274C\0305\274\220\212X\274:\005C\275\306n\243\274v\031\375\274\347\035\001\275\303\020@\275\034\300s\273\223\326\224\272\300\335\363<\375w\324<\214\247\016=\214=y<\254A\036\275\357\352\017=\026\3728=\242\003\267\2748u9\274\317\214\202<\257\350\352\274\034\017\343\274\276\371\221\274g\014\254\274\253\234\213\273\027\326\302<F\220\004=\207\263 \275I\203\274\274J\030\007=@\242\014=\201\204 \275\002<\271\274\016\256O=Z\302\321<7\246\272\274\010\377!\275Nh\212<\353|\367<4\tc<\272\026I<o\253=\275\016-\311<\262\n\314<\014R\220<1\370\243<ex\344\274\237\332\324\273J\312\031\275\020\016>\274\320\263\201\274\205\203\205<X\322.\275\037M\237<]\300\211\274\263q4=\032\206U\275=A\340:\336\320\004=i8\267\273\213#7=,F0;\240\204\027<w\0305;b\2510=/&l<\326\261f\274\300V\327\273\244N\203\274\335Q\026=\255\243:\275\217\1773\275\213\355\024=\004\277\016<\245\3423=,l\220\274\240$\343<\226*\n<\t\227\000=\016!\253;\274\0068=\277\200\206;M\245\314\274\nF\"\275;\230\251;\365\027G=\006\336\206\273:8)<\214\007|<\345T\277\273P\214\311\273\224\265Y\274\332\225*\275\301\231=;\347\300\016<\262i\355<3\2662\273\3138\021\275\010\272J<\336\3565=\355>\365\274\014\034\366\274\316t\327<p\034\271;f\305L\274yT1\275D\221;\275\025\250)\275\035|\205\273\256C\272;\326\223\247\274:A\330<\022>\301<x\370X\273$G\033\275g\245\025=y\362#\275\355Z\322<\210\254 \275 \2134=\324y\037=\025\254\254\274\036\307H<\346\303\031\275\275\257!\275\226\310\344\273\272\213M\275\3610\222\274\355y\356;*\005L=Mf\016\274\241\0061\275Lv0\275\316\252\001=itK\275\206\356\375<\033\305\243\273\373\226\303\273\224\325\302\274\374\207#\275A;\205\274\333\2032=#\252\374\274>OH<\2201\"\274\375!\004\275\331\246\005\275\255\324W=\212>D\270/\304\337\274\227S\210\273\342\311\365;TXC<\245m\343\274\372\231\373\274h}\024\275\033\036\377;\031b\n\275n\354\221<\262\001\332\2749\227f\274\246\374\017\274(X\337\274?\001\227\274\347#D\275\237}P\275\031\002\335:\273\321\203<E\236*=\263:\305:\333J\034=\302*>\274\260\273E=<?\263<\264\221\r\275\263\304G\274}ZB=2\373==\\\254*\275#\"*\273B*\215<\247kE\275\330Q\233\274,2F;N\317\201\274\005\026\242\274\356\322\255\274&n\301\274\3464\006\275\227\262\032=\177\004X\275\203\376\000\275\271\010\240;\315\000q;\302\t\220\274\343\274\204\274\034\341d<\330\252;\274\240\300&\275\001\367\200\274\001|\260<\362l\211\273\376\251\027\275=\252\227<IvX=\221!\334\274\304n\245<\362qJ<x\265(=rX\251<\225=o\273\214%\305\274ip\n=\272\305P\275\343\356\365<\373\335\217\274N\317\005\275\363\233\306\273\246<l\272\021\036C<\240GH=&\247\317<d\357\364\274\206\000\221;\321f\226<\312\252\006\275\223\263\316\274<\007\035\275t\230L=\266\202\023\275}\013\304<\304`\312\273~T\r<Y\3746=\375M<\2755\366|\274\341\364\300\274\313\001\365<\227\377\274;\214w\305<\n}u<\376\200\215<7\017\355\274\001\271\207\274\2023i<\006\334\002\275IA\270\274\342q\023=^\357M=njH\275\254\nJ<\t\215M\275\225\234\t;H\2334\275Q\242i\274\316w\357\274\325u\'=\"\370@=c\240i\274\033\034\246\274\326\275G=%\277W\274s\235\332;QaM<\226\211w\274+\022\201\2740u)=\253\300\"\275\247\320Q\275u\272\013\275sB\352<\222J@=X\365\356<\001S7\274\350\363\017<y,I\275\365@<\275\216Sy\274(\345A\275z\246\227\274\032Z2;\364{B=\315\2113\275a\\\305\2739\2627=\341\240\331:.\252\020\275u`C\275N\337\002\275]\207\232\274\230;\003=\366\"3\275B\276\034\274\030\217U\275\001a\241<\344\2737\275u\307C<\310h\007=]\266r<\241\n\366<\010C\t\2755\245\371\274\\\326?\275\201+J\274\255\242O\275\330\025\020<\232\365\036\275\273\002\205:\354\'\2219\245A\"\275^\223S\275*\025,=r\244\217\274\tbr\274\317D\207\273\272\035D<+\350\336\274\266\252\250\273\201\236G\275\345=\326\274\323\211\016\275\343|\001\275\226\020\350<\032\344\000\275)\021 \275\351\257\n=\247\030\023\275\353\027T;E\265\027=\256\026L\275\0250 \273\3772\253\274\310\362\336</\211\241\273(\336\333<rP\222<\316r\303\274\350\026G=\301\323\367\274D\301&<\322\272-\274\210\316L=Bi\353\274\311\260\345\272\337HL\275\343\323&=E\313\250;\261V\010=\314\254\232;+\253*=\010\3031=dH\224\274\324=a<\233MM\275\3074\010=\204\362n<\355\2049\271\220yJ<k`\205\274\245i%\275\013_C\275\375\3313=\3504H\274\033\232/\275\322Y\220\274\321Q@\275\322\0367\274\313\274@\275\333\203\260<\n\252\361\274c\376\212\274\333S\256\274\332\203\021=[\207\023=\244\023\035\275\266\265H=\345\330\314<v02=\251 \'\275Q3\346<\241\332U<\272\217#<\000\262:=\344\022\003\275s7\220\274\344.\305\274\312y\363\274@\254\321;\273\243&=\02726\275\345\217\361<\251J\241<\234\274S\275$\214B\274\026q\031=\210\330\202\274\226E\305\273h8L=\3136\010\275\020p\276<s\343\"\275\223\023\356\273VY\234;\321\306\236;2\017\007\2754\271p<\246\373L\275B\375\003=+\252\005\275\376xJ\275\236\251B\275}\277I9im\003<7:!<=a\3269\3643\004=\335\237m\274#L\000<\347C\014=\343\221m\274\337*F\275\0279\"\275_\233\323\2748]\261\274e\026G\275\024jN=\005\361\237\273A\211\322;z\025\253<y\030*=\032O\243<\246\372><\220#S\275\210\332\226:\217\227\027\275Z\217(\2756\272B\275\353\316\365;t\265X\274\224k(\275\003k\"\275V\317!=\353\246\215;\247x$\275\327N\321\274\234k#=\373\211\331\274\340\325>=\221\243D=J?3\275B\036#\275\302\277\001\275$+\276\274\272\374_<\320m\004\275\256\313\317\273\230\301>\275N,L\275\342\215\275\2744\302\017\275C\353\n\275=\306\013<\204h\250<M\306N\274\362\210\026=\351#W\275\320\204\244\274C@d:\310[\205\274\322\035=\275\211t5\275\227qX\275\020\255B=5W \274U\305\001\272\336qD=\264iQ\275$\327\275\274\205\005\270\272\347\323\030\275~1\375\274K\333/=\343\255e<\021p\t=6%T=\243y\245\273\221\374(\275\030\2200\275\273\323\003=<\023E\274\345L\362;o\324><v{\"\275\244Z0\274.\177\014\275\334\322U<_\201\005=\303\355\'=\232\001\013\275\256\237O\275P?\330\273y\t\023=Mp\250\274\341\266\312\273H\2450\275:\t8\274\'\351;=\216\371\354<r\227\363<,+\363\274J\204\330<l\353P\273\345\2308=\n\270Q=\364\032:<!\0329\273\355\275\377\273\247@B=\263\010\306;\222I\362\274cS\007=\324\234\025=\346L\017<\275\330\217\274k\351\311<A>\025\275\302\262\361\274\231\3415\275&3\265\273E\013\317\271\354:\001\275PL\352<\\H\262\274T\325\240<\300\253\235;\315F\253;\354\325#=B-\242;j\322\027\275$^F=[x\031\275z\215\t=\336*L=v\332\n=\021\002\243\274\256\334#=\321\261\260<\036\314\252\273f\334\221<\306\331c<7A\r\275\233\366\223<\353j\202\273\001\212\003\275\263\260\235<\264\321f\273P\230\245\272\335m\237<\002<\201\274\024\232\335<A\2653\274\361\207\021=4\363\317<\252\374\272\274\226\204;\275\217\212\326\274\321A\342\274p\n\335\274e\r\337<\006\033\340\274\016\303\036=k\rI=g\363\354<\005e0=[\027\237\274\266\376\201\274\035\2234=\363\000)=oz\"\275\234)\367<L0\301\274z*=\275z\265\371\273\031.\375;\231+\010=^Q/=!\351E<,\374J<\243\r\004\275G\013\t=\334\331\207;\323\3233=\207!$\275+\212@\275\261\210R=0Ny<\224\305\370\274/\366\341\2741\275\035\275\325c\313\273\274\000M=\214C\310\274kM\306\274\315\225\020=\263\317\'\2753\3054\275\321v\005=5\213\365\274\256\311I\275\254\000\314<b\033\322\273\272\002\332<C\222H=k\344\247\274\023p\342\273\241\263\305<Z}\n;\313V\232\274B\341Z;\273C\342<\003}\305<\325\0271\274\203?=\274\001\".\274\366\374\206\274~\225\001\275\325Y\264\274\325\245\306<\246\351\361;?\032\304<\320\313\337\272\374cO=xs\032\275w\201\r\275\230}\355\273\177\266\021\272\303<\234<r\265\211\274\372TM\275\241\252\t\273\000\222g\273\205\236\257\274<\232@=\201M6=Q\230\267<\327\370\204\274=O!\275@\034;<d\271/\2757\377\231;x\t\027\2740A(=ztV\275\362\3651=\002\345\344;\371W\341<\0138.\275B\263`\274\323y\331<{a\000=\243\377\300\274\270\0019\275\225\027\300<\217Vo<\303\244:\274W;>\275\205\271\367\274P\202b\274\234\222T=\206\240\355;OZ\005=N\317\211\274!\202%\275\322\033(\273\036x\330;\346\025\037=C\265\030=g+\026=6\255V\275}[K\275N\3555<\357h\323\274Y+\255:\343\247\n\274W\021\302\274\213(\277<[;\023\275NV(<qt>\275P\366\276<\200T\026\275\212\325\262<\\*\n<\340\255\260\272E\361@\275\276\203\307;\016\211V<\326;4=\210w\236<%#H\275\217\331\365<\303\036\225;\350[\360<%\235\312\274\347\345\225;\370\240N\273\356d\217<\271m\327<{Z/\275h\003 <\232\270i\274F\315k;\300\233\027\275\305P\222<.\300.\275\326\357>\274\210\257\"\274\202\'O=\334\3634\275\220\2330<\305\273\260\274\320S\257<HF\277<B\357D\275&\340\206<\343\262$=\270\206\013=/\303\373<\202u\254<V4\020=zl\277\274\3579R\275\232W\371<\002\022\020\275C\'/=^e\007\275\246\303\302;*\206\023\275\027C\247<\244\3034=\336\350.=\244\004\233<UJ[:5\216O=\360U~\274`\037Q\275&\334\007=%\371C=7\375\277\274\317\253\026\275gcU\275\004CM=\315\322+\27534;=|E5\275\013\027\340\274\3210\361;\322M\013\274\202,5\275GH\017;\246y\004=\257\345G\275G\0048=\371\363\034<\332\256\215<H\023\000\274`%\254\274\372j\0148\244D#=/\3214=\373\\<=\374\213\321<\263\356K\274\361\005\201<\275P\001\275\265\357w<O\317\000=\351\321\024=\262\370:<z\014==\321\005Q\275\016\345L=\301\361<=b(|\274\010\276\034<:\244;\275\365\255\r=\373\025R\275\336\347\021\275\313\2343\273\304\2251\274Q\021\302\274\315\237\370\274\215a\254;I\001\337\274G\226\333<\303V\023\275d\236\n\275\315$.\275I\242\265\273\254\207\203\274\237`\260;\352\345\355\274\022\'\037=\004.==\326\3743\275L\223@\274\271\271y\274:#\356<.\3264\275\272f\'=y\020%\275\305\\\205<\310\333\372\274\272\307V=\323{\341\274#\261\217<\277\250\317:<e\023=F\342\034=m\254+\275\035\025)\274\270(\205\274A\342\t=F[\234\273\246\307*;\310\300\205<^\216\315\274\222\204\031\2752\217\033\275\237N\033\274\027\302\201\273\270\261\026<\345\306/\274PF\t\275R\210\360<y\335(\275 \214\016<\006Y#=\020{\215<\253\210\246;\377`19%\024\233\274\377\332\273<\313NU=\262\216T\275\255\337\372:\262\203\026\275|p\324\272Z\215\220<\253\362Q=\211\323;<[\023?\275\273\322\341<\364y\254\274\364ko\274\230\315N=\353k\360;]yC=%\244\335<x\006\233\274`\003.=V\331&\275_88=\010\004\232<\230\2511\272\001\006\363\274\037?\203\274%%\362<\266BH\275w_\233\274\301\224U=\000\204;\274D\236U=\nv%=\t\221$=\025a\370;6\302s\271\200{\n\275@d\322\267\265e\r\275\314\227&\275\352\"$\273\236\262\023=\344\216<<\003\366\037\275D*R=\200\"\352<u%\220\273\027\321b<\261g\234<\232\031\255\274$i\231;\372\377\356<\356\tE\275{H\027=\237\302\030\275\254\352\244<\013\0321=Ejc\273\241\225M\275RX\243\273hk\244:\313w2=\311\t\314\273\2173\241\274E\032e\274W&\304\274c\2214=\267-);xd8=\3124B=\337\225\251\273\327\306\322\274#\250\216<d\314\232\273n\275\334\274\326\203\324<m]\207\274yt\362\2748X\'<\357\214\013=\216YI=\206\022\023=\373\226I\275f\004\244;b\027\225\274g\3415\275\010\254\016\274\022O\361\274\357\260O=0\335\003\275e\360\245\273\036J\030\275\221VC=\013]\007\275\010\035A\275\321\346\251<\000\267\362<\230\324\263<2\215V\274^\001V=p/\031=\247.-=5\362\017=\260\200\236\273\201\037\335\274i\355\016\275|\002\362:\220\371\303\274\354\320\355\273\333<o<\202kZ;\236\365I\274.!\000\275(\277\323;C\327\027=iD7\275Mq\224\273\374\207\r=\372E\260\274R9Q=L\374\350\274L\226\013\275R\327 <@\373?=\017+\333<\020\001\031=\353\004\326\272\247o\031\274[$\203;\024\373P<C\257$<\321lB\274\264T\177\274\327\356\272<\341.\307\271?\263M\275\374 D9\267\325\313;\321\271\347\274Fp\007=)S\204\274\014\325\016\275;\017\n\274\267\230\255\274k\243L\274\024\030\357\274\377\363\275<\004H\345<\277\315\037\274q\335\347\274\214\200\006=\274B\020\275\223\356S\275\262\274U\274\366\335\326\274\006\313\360<\316\372\235;Dj\243\274\314\213\002:/!\036=/\233\007=\200\213\253\274c,@<b\374\n<\214eK<S\227\314\274X\357\207\273%\370:=\377\300\337;\262\245V=e\206\336\274\377\350#=o~C\274\260\r+=\317\3566=TB\272\274\2522\010\275n\220J=\253\243\037\274\224O\321\274\3045\000\2749\336\n=\314\031\304\274\342\245\016\2755\361C=r\330\005\2734\036?\275\276\3365\275u\242\350<fT\026=\262\340\203\274EU\245\274\007\331\017=\317\351\204\274\256\343\234\274A\300\363<\000\036\305\274T\354\241\274\307~\250\274k\023\032=V\020U\275\225\234/\274\036\302S\275\252\370\027\275\003\020\001=\0101\212\274^8\021<\\\010\235\272yR9\275\027\360\356;\230\241\354\274\325~\265\273;\312\022\274h\373\224\274\357\255N\275\303\301\275<5\276\007=\214:\t\274\373.\212\273\3269\271<\3269\215\274\nD\034<\002<Y\274Mlq;P\263G\273\0046\202<\275\256P\275U\243O=ou\000\274\033\221==\000\214\243\274k\010\366<\241\264T=&\266\345\274\252\2642\2758\tm<$\001):\333\2641\273\024\237&\275\356\357-=i+\323\274\000_\030\273\n\343\373:9e\003\275\224\203\246<\030\323M\275vK+=\222\315v;\353##=E\304=<\006WF\274Mg\361\274t\344\312<m\245X\274T:8=\273\034\314\273V\025\305;\'\200\017\273\372\213:=\350\220\017=\326\373!\275\301]?\275gG\256<\035qg<\177II=S\255\035\275W\347\006\275\250\206%=\244\327\257\274K\371\024=k\346\266<\231\264\213\274\030\035\345\274\306\000\335\274\251\372U=a/\007\275\3013&\275\027 \027=\332\340\274\274Qb\350<\255\r(<5\245\260<\212Xe<u\\\334\273\204\261\320<\305\262?\275.\375=\275#q\243\274\r)\027<\n\224\026<\203\266.\275\211\227M=\206\200\010=\007\004#\275\221\373\223\273/\207%\275)\377C<%b\273;\215\316D\275\362\300\035\275\355\233\003<\203\003\373<f\255h\273\021\024\017\275yi*\275\251\225\3579.Z\000;\375V\324<s.<=\212\231\300\274\026\301j<\304\233\270\273\232\207m<\362K\025=\221\276*\273@\256\3609\334\213\030\275\256\366\307<\322\177\221<\340\333/<J\245S\274,\213\260\274\277\033Q\275\225\326\027=\363ZC=\212aS\275OmU\275S\254X\273!?\002\275\354\0378\275\366\340\205;\337U>\275^\356?=\305?\024=\312\322\314<8\333\370\273\240\377\316<9P\307\274\333r\247;x\272C=\031\240R\275?\352\020\275\240\241\020<\370\001<=\216\337\211:\204\335\222<$\2775\275B\347B\275\3645\250\274\331\350\343\274z\210L==\r\255\274.\372\323<\241\020\321\274o!\246\2744N\221;e\360Q=\001\2070=\274\350S\275\371\345\376; \013\202\273q\372\024\275t\346\310<B\207\n=\247V5\275\003\026\376\274,\244G\275\260\031;\275\002\253(\275Q\242\000=\375\3479\275\214\n\037\274i\200!\274E\036\021;\2574\224\274F\235\300<1t\007=|\274\352<j\251\362\274\242\0036:\356\320\370\274\355\344\366\272\222\265\314\274\245\202\355\274A\277S=\307L\003=VT\205\274\367Vo\274\336\260\243\274\002\367\023=Xaw\274\353X\004\2752\242H=N\266\027\275p\231\310\274\365\033/<\033P+=d[\030\274\376Uv\274\007\254<\275\334\327\033<\341f\031\274\202\347R=\313+7\275\336\321M\270\367\254\363<%\276E<\301t\001\275\005\2674\275\350\354\317<\364\373\240\274\017\220\264\274\206\024#\275@]\r=ke\245<\341=\241\273\215yZ<^\352\210\274\357XO;\327\000\207\274\t\360\256<\342\032r\274 \335\353\274\006\177\212;\210\2532\275\355\242Q=\265\036\327<r\300\333<\235x\324\274\231\t+\275\031;\020=\263\221\203\274s\227\374<\226a*\275%p$=\324\352\276\273\270\215/=\022\342\350\274\205\032\034<S3\312<\251\302\"=\217X\310\274\000\357V\275\245\354\006=\343\333v<h\363\031=E\356N=7\031\362;\nR#=l\312\034=\205W\237\273\215\357D\273\005\235\220\274\t\367\031=\330\356 <\005\316G\274\342G\215<\315E\001={\354\333\274@sV\275\200\027\036=\265\373A=\000\215J<\324\367S\274G\032\210\274#>I\274:\335\235:t\3009\2750+\247<h)v\274\355\345P\275\024p\031\275\000\211\031=\270>\247;X\t\313<\332\260(=\333\214*=b\246;=\254; \274pZ3<W\357;=t\020W<\311\010\325\274\'\0369\2756\r\247\274\271\223\357\274\206x\264\274&zU\275\001\240\033=\241T\'\274\343\221;\275@\315\237\274\237.\276<\243\nD\275\326\213\005=\227?/=+\213\"\275\235i\371<#>\374;M\260\030\275s\244\242<\327H\262\274\036\325\236<\272\303\032=\222\0161=\21534;K\362\333<s \252\2743\277\340<\361\230\020=\2749\333\274o%\022\275C\337\300\274\246\003\375\274\310`B<7t\003<\315\n(\275\337C\027\275\017\370\017=\245\360\233<y\327\276\274\013\356\215\274\347BS<\3679\020\275\026%\320\274y\300\301\2749\306\314<\360,\221\274L$\021=\231\\\030\275\337G\254<\277N1\275C\223D;j\263\233\274\263[==\260\200*=\277T\311<\026\006W\274\rP\355<\350&\322\274\307d\275<\211\224\022<\036|L=*\215\355\274g\375L\275\177\300\246\274\251\264w<@\240\024\2745\237\315\2709\255!<\212\314O\275\366\006E\275\321\304\364;Fs\234<gYR=\247p\t=\371\3764<I\t\006\275\252;T\2756I%=\214w\034=\344m\224<sl/\275\223\001v<\315B2=h|\342;\300\271\022\274\036\221\003\275\3742\\\274\256\307\343<\277\023\002;\344\260\370<\242\220\202<\n\271\323;\324\221,\274\223B\031=\013\351<\275E\\\305<u,\211<^\314\365<.\0174=i\321|\274\264!,=J\3423=\366\260C=Q>\326<vN\257<\232\025\367\274\343\241\214\274 \203-=\202\331E\274W0n\274\r\376\n\275R\322R\275\247\322w\274\341\347\347\274\301\300E\275<\255\266:si0<\016\007\017=\r\230\003\275\256j\371;u\2100=\364#\305\274\2653\014=3\316\374\274v\360\306\273\364A(\272*O\264\274}I\250\274jjz\274\230$\'=\367\360\005\275\275\346\037<\301:V\274\035\210U=\323\rF\275^\257\001=\rVD=\310#\332<s\2722\275\222rq\273\204\232\316\273\275\276\312\274\004\202\014=KV\210<\232z\204;\022\374\206\274\020\303G\275z\202\335\274A\227\360<\3477P\275\201\005\375\274\317\335\263<X\002k<\315/\017=AS$=\244\343\367;\004\321\255<3\307\341\274\371\263e<\2623\360\274\334!9=e\304\n=\357u\276\274\035J\244<\005HC=\267\rI=\23152=>bQ=>\351#=m\324U9z\316\000\275s\022\250\2740\231=\273\371\276!\275\327\230U\275j\203/=\022\302\264\274\260\350\017\274\264\274\r=\305\351\375;\017\327!=i`]<L\320\303<\273\374\205<ED\312\273mV\002\275\272DK\275\362^\021=\213\250\365;\316U\007=\177}\227<\321\'L=\014\315O=<\253(\275[\007\026=\337\036,=F\360\342\274^\310P\275\322\212\365<\032\366?\275\3638\000=?\215\226\274\314\300>=^b\346<\234{\313\274\030\360\004=\277\325=\275t\342Y\274\213\206\004\275\346\"\010=\200\332\215<\336\327\023\274O\273\262\273\205#~\274\017\332d\274\224\315\210<qn1\275o\201\266<\003\237\221<@\251w<\367\206C=m<N\274h\314\300\271\202C\000\275\236c\001\2758G\026\275\273E\260<\335\324\232\274\360\252q\273\033Z\014=z\365\226\272\317P\302<Vh?\274\014\240T\275\253\3741<r\020\014\274\323%\026=:n\307\274An\030=\327$\031\275\002\271\310;IH%<\010\213C<H\334\021\274\333g)\275\356\3654\275\327M\002\274@<\032=\333\373\256<\360\t==\367\3606=\327\335&\275\"\204\311\273\022\372<=>ZD\274|}\'\272\247X\014\272S\370\022=]\3264\275\3504\205<\263j+\275\027\300E=DY\327\274\245\030\341\2735\213/\273C\2621\274\322\213\036=\356P\307<\2128\022\274\320l\200<\211F,=\316\370\234<P\253\'=\370\211D=?\202\263\273\023\267\003\275\3176\034=z)2=\326\036\035=\257K\314<\304\017\371\274l\000\367\2741\351D=9i\205\274\253\244<=\320\224\317\274}]\244\274X\215\240\273\216\r\237:\330\366\367\274\313\331\005\275\336\341B\275\001\256\274;{lW\275\177s/=z6\025=\231B\335\273E\263\006=\004\223\227<0\267\253;]\335\025=\370p)\274\342\317\035=w\231\312\273\251\2019=r;\021\274\230\335\203<T\000)=\006\026\354<\033\247\341\274Y\035\351\274\350\253\3408\332\317\202<O\341\267\274\334` \275\t?\252<\315\333+\273_ee\274F\364w\274@\302\251<F\006\373<\323\rR\274\004R<<Q\021)\275\214?\254\274\277\324}\273F\000\032\274\312[\022\275\342\342\357<\205A\275<\224\005\032=OCB\275\270\2633\275\265M\371\274/\342\367\2736\346)\271\313u\023\275\333T\256<\243\"\330<\206\267\371\274^QV=\326P/\275\225\365\303<W\214K=u\235\023\275\253\366U\275\355\254\350\274:\304\311;\033]f\274~\010*\275=\177A\274\252m\313\274\2039\241<\334\356\316\274N\345\356<a\236\022<\216F\335\274h\371\272\274\375\030\010\274=\250\206;\204\224\034\275\3243O\275R\232\010<*\016F\275\254a\004\275\251B\337\274;j\266\274}A\177<`\355\2379\361\300V=\313n\003\274\333\"&=\006k0\272\327\216\235<\0074G\275\375$\005\275(\366\331<\374,N=Al\321\274\377\020P\275\236E\014\275\371\025\t=\261\345x<\274\240\270:\267?\335\274S\347\036\275k\210\324<\277}~\274\302WP=\362\352\r\275\256h\037\275\276n*=\252|\247\273z[\276<%\340\234\274Q\312J\2737\231\270\272\\a\270;\207W8=^S\227\273zb\020\275\340\262\321\274\220\354\242<\226\022O\274t\370\321;{\201|<\300\216\300\274\307)\003\275\374\004H=\333\255\216<g\200\014\275\353\374\031=\315k&=?x\303<Y\242@\275\265\204~;`\320==\314\241\236\274K\205#=H\3438\275t\034\001<=]\013=.\350\345<\273H5\275R<V=\021\212\205\274\336vd<K\r\344<\312\001\364\274\013!2\2751\221D\275\205B\034\275\000\362\"\275\372\375\373\273\271CT\275\372\245\016\274\370\217v<\352B =\033\264\"\275Uf\257;:\204\016\275\305\265S\275\323\221:;\361\251\356\274\254w\205\273\273\3003\27553i<&\364\316\274n-\260\274DS\025\275\014\375j8\031\356\245<\245\372/\275\345\220\2769c\277\025=\327\260G\273\267\327L<\3713\027\275\243\320\330<\034\"\346<\237&B=\224\342\301\274\177\233I\275\366 !\275\361Z%\275]\3112\275\377h\360\274\337\377D\274F\005H\275\354\345\311<W\372F=t\240C=Y\263N=\030\3622\275\357\010y<tcS\275N\326w<\326\217\222\274\273\2223;\332UT=$\324\016=;\3365\275\356\253 ;\230M\022\275\301\005\301;\306\r?\275\316\326L\273+\2248\275\333-\220\274\334D?=\205\233b<\306\233\251\274)\361P<\307\000\021\275Ge8=\235\3104\275A\t\006<\271/\244\274(\334@\275\203\361\000<{\035\026\275\315\037\037\275\2203M\275[bA=[u\026=4\304[\274g\307T\274N\031\034=\341\354%=Y\255A;o1<=\231\n/\275%6c;>\250\375<Zr\305<\356\343E<\\\267\032=Qa\211\273\251a\036\275\2138S\275!(\210<\334\2111=\034}\271<a\275\247;4t\307\274+>\026\275b\223\206\273\251\242\003=\277\223*=:S\210\274\354\016\212:\364\213\027;\301\262D\274\335MV=\226h\021<H\212\037\275\243c\370\273 \331\204:\361\266\031=[\327\006=\035(\225;\347p\026=\247\027K\275\032\374\233\274\233\000\304<\017\244w\274\3322\214\274\1774C\275\376\320X<o\3507=\241\312\335\273\277p*<\240\3602=\362\271\243<YX9\2751\270?\275\233\365V=o\333\301<F\247\241\272Rvh<\247\267\237\274\001\310\342\274\367&F\275\251R\r=\202\247\024\275\003\177\266<>%\004=\315\317\001=i\247\035<J\031\340\2736\272\341\273\330\222\016=?Ub\274xa`\274\330\356\025=\263y(=f>L=\301C)<\220\211\201<\002\341\034=\251\215(=\305\020==\310_\246\274]J\332<\236\'\016\275\024\273O\275\262\266\006\274\220\240\263\273\001\205\241<\227\215\037\275\346\233/\275&\312c\274{\267C\275\277\300\306\273>}\342\274\"@9\274\002\341G:\"\243\001\275\264\n\377\274\231g\021=\314#\n\275\r\227\326;O8%\275\323\333Y<\0218U=??\347<\217\005\252\274U\n6=TT1=0\220\005<\317\313\232;\267)\200<l\224\347\273\333FG\274\365\n<=\021B\277;~\216z\2735L\263\274\304v\n=\312^\236;|\022\037:\331\207\242<?_(<\325\217/=\357=\016=/\244C\275\010\257+=uB \275\202\366\t\272\207\024)\274;hN\2757;*\274V\000<=gYO=\277\033\237<U\265\234<\365D\340<\253\337\256\274\035\226@=\347\006\224;2\024\210\274{\010T:no\323\274k\357\365\272\374M\223<\273\335\002;\235x/=\375PN\273+0p<\342\320t\274\245\305\377<\366-\225<b\'\254\274\331\"\264\274\002$\345<^\344\033=\333\210\000\275\004\207?\274$\255\311\274\311B <2eA\274\304\003+<R\310E\275\247\222\360\274BH\n\275\244\347C=\374KB\275\202\312\353<\351W\246\273\020\214L=\251\n\001=\276z)<\375\3351\275\352\026M=s<J=\320\214\356<j\025\215\274\256\343)\275\233M\236<\336F9;1\353R\2757\271[\272_\356,;\203\010\021\275\257W\205;\215.\021=\327\234Q=B\023\020\275\236s\005\274\225\342\220\274J\261W;\237Z\362\273$O\234<\376\332\022\275V\004W=\317\2027\274\244o \275\352e \273\232a\235\274\376\005D<Is\006=pU/\275\027\323\360\274\031\310P\275\355_ <\250u\340\274\tU\314<\347\200\002\274\262\013!\275\353\2119;\025\210\004\275\372m\364\274\216\022q;\022\222\304\274\212]\021\275\225\030M=\\ \224<{\013e<\\\022\246<\2026\334;\372XU\275\257\016\225<\002\004\311\272\036\"\342:\006\327\202;\234\360\367\273\"\263\025\275\321:(\274S\256\210\274\010i\003\275\215yV<vQ\203<\252\333L\274hW\032\2756C%\275\372\366C=\371\231$\275\345!\014<`K\336\274\225#\031\275\225qX\274\342\013\033\275\026\255W\275\246B\034=\006\337\013=c\034\234;\326\017\376\274d8C=\3213\t=)\343\202\274`]!=+\360\336\274Vo2=[!\021\272\023\333P\275\351\331U\274\215\035\004\2742\350O<\016>\370\273#L\273<\"\231\271;\373\311Q\274r\\\177\274\304\202&:{8\231\274F\347\243<\302A3\273\316\031P\275g\0322\274\336\260\214\274\311\001\030\274\331\305C\275V\364;=\365\033E<\n\340O\275IA\211;\274lP\275\230\274S\274\343\273\274<\374\253z<\300\220\363<\2137\002\274\213\321\237<aL\034=\224n\"\274zI\262<\364\023\032\274\356L\025=\356u\202\273[\036\010<\200\r\005=\252\332\367<H\014\254\274\331!\225<o\212\t<\2158$=U\3273=\344F+=2g!\275\357\211T=\363Gw;\230\355\217<\330[5;T(\322;t\202\245<\017\205T\275\357\221c<\331\231\322<v\363\331\274\375M\t\275\375\256\323\274\321\277\022=\242\016T\274z\340\021:3B\367\274\232\201\307;\266\037\002\273]\320o<9\226\354\274\271\231\027<\351\257\000\275\251\270\311<Z\311\265\274i\322\335\274\"\005\267\273\242\354\306\273m\205\227<\024ff<\211\244\206<#\375K\274R\253G\274\244\177\362\274Y\0302\275+\356\020\275{j\031=\213\365H\275wAF=y-8<\000\212\367\274L\243$=b\024\222\274\253\360\226<(\032\275\273\211\014\"\275\340`\026=\225\2777\271\354\302z<\254\321\325\274\322rD:z\342-<\267\270\340<\331\250\023=\354\332.=\275fm\274@\314\034=\277\3666\275y\267:<\3671O\275\t\230\013=\200\001\323\274\237b\002\275\326br\274\021\254\263<M\221<=\354D\017\275\273=R=g\016-\275\315\220L\275\240\223\353\272q\324\225\272\200\344\242<\261\267\027<\\x\346<\366\361\205\273\376\003<\275\224\260\233<\363.\031=\226\346\017=Nr\204\273$\226\245<6S\010\274\344\0055\275\261d\002=>9\254\272\2650w\274\215}\033=QE\320<u\004K\275l\r\316;\014\334A\274OV\016\274]\216!=\252\317L=\360D\315<SL\371\274\225\0255=\255\311R\274\360=\270\273\215\003\307\274\231\347\345\274\242\364B<\033\312\036\275\235\214(\274\221X~<t\255\365\273\332L\n=By.\274\240{;8\\\0013\275\2674\333\274]\260K=k\000\017\274k\320\237<eY\024=?e\217\274>\303\317<gF\227<\341\342\032\275\025PN\275mO\262\274\373=\003\273\"\377h;\310hI=\300\232\334\273\017\225\354<e\372\360\274\325\207\031\275\241/+\275\247\314\036\275\224~\322\274\275,7\275\031\266\030\275hG\25395\312\025\275\276@\345<E\235\344\274\301\2369=\325\235\357;\241C\310\274T\2773\2731\353\020\275\021C4\274T\326 \275\304\354\275\274\212R5\275\013\212\367\274`\020\225<\014\200\250<\255\253u\274\262\331?==\312R\275q\202\310\274\237\245\222<\377\'/\275MdT=\350\032\266<\243\2740<-\235\342<\003X\007\275\014OS\275\322\306?=\243\341\327;/S\004\275\022$\363\274\274\371\023=(\274t\274$,\351\274\004\200S=\254.\021\275\201\344\033<\262/\252\274\231e\232\274]oO\274=2\021\275\326q\t\275\034y\t\275\007\017\261<\203\334\206\274=\346;=B\253\351\273\323,*\275\207\336\017=\312\277\355\274\246,\334<\331\330\t\275:\357\374<\006(M\275O\315\035=I\025\226;/T\034=\264\235#\275?|G\275\241\250\236;*\347\027=\001s\362\274\303\020&=\254\3766<\213@\263<\016\351G\275\345\230\315\274\307.\225<\365\007\311\274]\245\366<j\036\266<Z\320|<\321t\237\274\006\3718=\022 \027=\312 \247;\024\365+\274T &\275\356\263h<\274\204\n\275\177!&=^!\220<?~=\275\200Vs\273\356\201\241\273\2477\240\274\223\277\266<]\274n\274H\267;=\214\207\375<2\262T\2734[\035\274\226\026N\275\315\272\313:\272\256\230\2745\3776;\253O\034\275\247$\232<\364[&\275\323\365\375;\241\277\034\275\031m\272\274\253\3113\275\347\274\007<v\3122\275\2014\340\274\302_\340\274\"\320\364<-\363\357\274Q\304K=\356pp<\245M\005<\025M\376<;\375R<\253N.\274%\331\376;\265+\025<\314\314\357;Uk.\275\202\333\204\274\264\222\226\274\026\301\034=u\223\215<\332dt<\3272\236\274\230D\264<\363\244*<\206fA\275S\230L<)\016\374\274\242<\t<G1\023=\023\3348=\262\250\024\275\373S\236\273I\006L;,2\342\273\031\302\033=3\261\375<\000 \267;\305\334\334;\017\263\'\274\277p%\275xX8=\024\017\n\275\005Y\373<F\316S\275h\213\373\274yQ\215;\242\362&\275\016P=\275\022\t\017=\266Y\315<0\236\327\274J\235 =\327\276*=\345\243\007<\344\3209;hI =1,\261\273\364\262#=C\371\263<\220\366\235\274\215\025H<\335X~\274h\351Q=\361\336\261<j\3724\275\337\316\372\2741\263\031\273\324\306S\275?\355\002\275\260\030X;\231\n}<\320\321\341<\225\362\010=\004@(=\270)3\274\020\300\262\272\312\237\3139`x\002=\267\246\237\273\303B4\275\212\035\305:\206i\037=\340\005\317\272\226j\010=&\003\235<)F\026\2750=:\275mm\017=6\375\250<\353g\263\274e\022Q=\363\317\034\275\253\263\266;H\310V\275@\267a\274\377g\336;\217\026\240<\243#}\274\030\033;=4\016\t\275\353y!==\205V=!\332L=\271\224)=\335\035=<\314\261\r=S\324==\202\004\363\274m\266\341\274W\355\022\274\206x\005=0\177q<\036\354\002\274N\251\254<D\243)\275\350\253\355\274\007\354M=\362\013z<OXO\274\223\006\025\274\027\017p\274!\375\355<\2779\217\274wR\313\273\365\017\266;\004\253.\275=\255\307<\357\356\371<\001\355\366\274\2427\332<7y\255\274\027m?\274\205W\322;S\312\017=\"\235\342<\376\027F;\014\016\230\274\352l\232\273\034\365H\275up\204<\014\312\211\273\003R\331\274u\230\277\274\017\242,=;\252\222\273;<6=\367\2764\275\340\315\200<zs\376\2733\330W=;\006\037\274\263\014\267<\353\030\t\275Q\342\025<\247\257\211<\3675F\275`\312\346\274\305\255\n\274\250\361U\275\037\031\010=\014j=\275\231\353P=d\266.=\311\302\033\274_\264u\274\336\323\235\274\\\334\034<\356\366$=\001\266I\274@\023\272<\342\321\"\273\376\322L=\005\315I\275fX\006=*\234\002\274\003]\363\274\027\217\254<\326\362\274<\267WH\275\014\013\241<\365h\234\272Q\244h<\256s\365\274SY\"=\371\235==\366\227U\275\367\341\027\275d(7\273ea0\2759\216\023\275!\004N\274X\0169=]\376=\2750\336\242\273X|+=\001B/\275yq\030=W\003\000\274+\301\265\274\3172\\;}\224\212\274\034\246\006<F\304\007=\246\242F\275TlJ\275\377\370\002\275\005\326\347<\275\332\025<~h\241<:\265N\275\265\017d;\342?\r=\307\273\001\274\214\317\024\275\332^G\274t\000>\275\362\335e</\223 =M\346#\274B\330\251\274\027\010\231\274yr$\275\263*%=\241\2138=\247xP=\007\335\231<\2601\"\275\250\241\226\273\240\014\302<8R\245\274U\373\n\275\233E\r\275\371\371n<)\007\363\274\247\004\260\273\036h7=\021\034\246<1\336D\275\374\220\343<\342\267\365\274\373\240\200\274\003\201\355\274\304\177\016\275/6\263<\017\350a<\026!X\270aB\214\274\254\374\226\274\tn\020<@k*\275\221\226@\275\373\335\320<\253\325~\273\022\340\232:\224vF<#\277\023=\\S\376\274D\245*\275\201\243M=z]6=\0075\020\275\n[\311;\311\260a\274G\314\223\273\347\313;\275s\251Q=\325AT=\2309\205<\365LP\275\321\217\320\273\r\252\345\272\035\200\255\274\021\236\023\2756\2339=\210\354\331<0\304\027=\035\333\354\274\240.o\273\341\351\034\274#\310\005=\n\030-=7\035:;6\312S\275\006g\254<\262\373\310<\320>\327:\310.\226;\0308\200\274u\256\362<\305\021\013=&\313\341\273h\350\306<\242\224\271\272o\276\321\274)w\013\275\027o\025\2750y\264\274|\243\n=\251\224\323<\017\256<=\271t$=\254\365M\275i\315\\\273\254\203\372;\311\223\022\275:\274\266\274\247A\235;`\212\242<\206s\004=b\027I\275K\306\030\275\207T\244<\267O\017=\242\236\242\274\273\"\374<\322\354\014=\213\355\034<\256\313\234<\322\362\331\273\'Y=\274\255\n\177\273fL\361\274\257\333\252<\023C\353\274\376\020\021=\0243\030=\236^\276<\025\3607\2753\235\312<N\217\362\273\324\252\254<y\014\020=n\236y<\264\262Q\274!\204X<K\331}\273\302>\021\2741\233\370\2736\316\017=\250\227\265<s\000\222\274<\274\362\2741\225.<\013\314\006\274\347`x\274\255M\366\274\0301(\2754\275)=\241L\330<[\242t\274\2605,\275&\271\222\273f\2629;i\3213\274\201\343\341\273\200PN\275!\202\314\273\300\256\"\274<9A\275\240\322\363\273\030\332\003\275\215\346\330<M\240=\275\345\211\005=\362\'\031\274RD\321\274\22711\275ti4=\247\311\005=\272\360S\275\203?\244;y\307e<G\365\242\274\204`\311\274\263h\212\274\222.>\275\324(\030\275\021\373\242\274)U@\275\353b(=\271TD=\316\256\003\2757\027$\275I\373\316\274\341A\371\274\2740\300\2747<\246<\276\033(\275\000\240\227\274\373\237;\274ci\347\274}\334\236\274\032\026\030=\376\237\342<\347\303p\274\315\201I<\354\021\234<xlk<\341\\>=\2732\222\274\201\354\237:?\325\214\274\251T\301\274\017X7=@&I=\006\363v<\275(q\274\253U\254<\233\342\023=\371\240\262<\024\217k<QC\032\275!\330T=\377\340\031\275b\304\306<[\035\235<\216#==r\243\257:Me\031\275\265\215 \275R\231\025=F\350@\275\376\'\371;\265\270\223\271\340\260I=\010\321\017\275\244\367\033=\217\277N\275l\033i<b\302\031<Qr\031\275\337\323f\274\2664\216;\362d/\274s_\037=D\013;\275\352\204N;\022\342\202<\017Y\013=\305w\363<b~\261\274Y\2645\275\310j\t\274k\264Z<\274\317\315\274\262\205\037\275\377<\022\275\206AI\275\307>\023=\323g(=]\005O\275\336\313\231\274\273D\301;\243\216N=\024\211\274<\036W\023=\024D\304<<\241/\275-v\020\275O\351W=Tq\270\274F\312\203\271\202\375\003\275\254\373\035=\367\r\302<n\037\'=\364()9\207\366/\275{\375i;@\223\016\275\204\272}<SMF<2\305G\275y$\003=\336\0352;W^\327<\367\275\267\274\273[\217;/\226\"\275\377\007\010=W\312\034\275\360H\303;\357\242\034\274Ut\227\274j\234+\275\227\203\034<1\006\021=\363>\r=<\266\362<\363\257\310\273\023@\031;\226\271\014<l`==\177H\032\275\311\"\341\274\352\357\205\274\024\255\r=\357\010\244\273\267x\010\275*s\270\273J\3267=\r\212\227;#\326\256\274\353\215\231<\241\036\023\275\337\003\342<\n&T\274a/\006\275\330\017\r\2758E\223\274\306\361\335;6\226\366<\330[-\275\251[\"\274\\\221\252\273\224}\003\275\002\340\353<\305\177\246\274v\223>\275\024[\022\275\301U\374\274\362\266\010\274\230;?\274\\\2259\275\325\247\221\274\327\310\306<\251\271\205\274TV$=\234\307\033=;\274\275\274\240\334\253<\177<\000=,\277q\272\263\326=\275\016I\356\274\201\235\377\274\370\365\261<\251\337\337\274\220\320\326\273\321\007\314<\264\340K\275N\tM=\365\030\000=\253\023\001\274\202\362A\275\371^\233;\367\010\226\274\004\315O=\\2O<\010\267\267< U4=@\027s<\225\302R=\367\376\330\2720\243@=\202\260\275<^\000 \275\001J\016=\315\225B\275`\362\\\273\002i<=\376\325\036=j@U=\200\311L\275\315X\351\274\207\004t;s\230\201\274\3112u<\222\330P\274\353W[<\000x\242:\204\020|\274\035\234\274\273;n\327\273eH\366;D\331\233<]y\3739R\353\345;jXF=5G\314\274\275(\030=m\215\264;=@=\275\203\267}<\307XA\273\303\276\'\273\327\002\305\274N\362&\275;-\177<\242\324B=\334:\002\275e\017&\274\365mQ=Pa\320<\225\266-\275\220-C=Y\343\323\274;\3118\275u\206$\275\231\2311=\305\016\007=\022\251^<\207c{;-\212C\275\272\334R<\335\3632=E\331-=\364;\265<\005\251/=\263\177\016=\224@\030=\205\017O=\212\225S=`\356I=\264\265\340\274u\025(\275pn(=\250H\001<\264H[;`B\314\274\270\030\204\274\222\305@\275\353\354%\275\014\221\253\274\352\332)=l\305\004\275l\3110\274T\235$=a,T\275\207F\371<\001\361r\273z\241\031\275=\360\216;\207\266\245;\217x\230\274=P=\275\257_\215;\027\252\301<\320H1\273> \247\273\246q\330\274\365F>\274\221X <\224\334\300<\336wK\275\221! \275\345\314\006;\202\204\332:\302hv\274S>,=D\333\000\275\262\022m<1x\337\274\350\206\200\274h\020\023=<:1=YvX=\275\001\315<<_\207\274\266F\373\273^(y\274\255XV\274{\345\'=\340pJ=\235\025\267\274\n\242\215\274\200\354\310<\312\267\024\275\305^A\274\001m1\275\207\374;;\353\037>;2\025T=\010\370\347<\270-\033\275\215p\t=\352@\351<\341Q\353\274\362\245D\274A%\"\275\344\313\032\274n\2437=\314\324S\275\027\021==6i\365<~\304\265<,\220u\274\031\370\017\275#\366F=\217\264\";c^\036=e\\.\275\304\252*:\362\255\373\274[\032\376:\324\003\200<o\255\002:\305\237V=\377\352J\275\005U\301:\231\354W\275\030\017;=\260\026\250<\207=\263<\032#\365<\377\305\311<\234\250H\275\177\263P\275<3\025\275P\005]<r\341\017=\330t+\274\236s\333<0\2375\272\337\241\320\274\322Q+\275\235\301\374\274\036\221z\274\243\261\'\275;6N\275+\215\370\274\366\\3\275G\\&\273\242\214$=\242AW\2753\2168\275P8X\275W\233\"=}\345<=\210\253;\275\347\322\023=\333\240J\275\336\367\220:\222\320\371<\331\271\303\272\327=<\275(;\'<\250\373\374\2720\263K<Zz\261<I\201\034<\210\026\303<\202\226\n=\240\324,<d\256\027\275>P7\274v\364:\275\265\202\331<\010\222\315\274\275\035\354<\233CE\275\033\332#=\212\231U=\035N\241<\002\326$\273\332-F=\n\244.=al\276\272A\275N\275\r\266\017\275\246\275\312;\313\207H\274g\332\'<\246\243\020=\241\252B=\211P\257\274Q\327f<\266+M\275\267ir\274\300?\303\274\033lM=\343\014$\275\2621\342<\262\220\376<\001\324\340<FgF\275~$\231\274\231\210\346<\247IA=\313l\271\274\030\002\t\273\226#\013=Ee\242<LV\216\274\373\3419\275\213\325\274\274\203:\014=w\031\200\274\t/+\275\352k\014\275\004\340P=\261\273}<\307G2<\320,a\2747\327\204\274bI\227\274\tB\254\274\342\346\2719\240l\224<\037\237<\274\3769\232\274\t\327M<X\367U\275\237\253/=\035\266\347<\026!\335:V\253(\275%\t\023\274\347c&<\242\036\375\274\302\374\014=\273\003\305<\000b\215;\202f$=\353(\314;\022\225\237<\370\273\250\274t\003\300;\313\203\271\2743p\320<XD\334\2745O\030\275,\276m<$ \213<;h\"\274bd\002\275\247\320\215\274O\266!\275\336\235g<5\243(=\r\207\332\274\237\222C\275\017k1=\004$\"\275\252`U=\3671 \274\225\330\232<\016\007\000\275\327\221\204\274v\017?=\372\232@\274k\234\310<\037@\t\275\376\")<k74=\021\3670\275@\037\3059\3576!<;\257V\275\342Z\"==+\034\273P75\275\276\2328\275\312U\305<\"\204\346:\177\352M\273x\216\325;\220\346\364\274A\271\270<\324\2325\275Sf\344<X\325\002\275\025\235\321\274\360\355\233\274\017fF=\222\2116\275\266\356\030<\370\356\211\274\326V\001\275\367\350\202<\25620\275\354\241\226<5l\275\273\003K\025\275\230\355\037=3\035\334<\002\240l\274\254hz<A\244\321<\035\377\017<\257AW=\r\346=<4\254\035=,\210~;>\200\272\274\322\244\265<\013\2049\2754\3161\275?\275\300\273\336Cp;S\304b\271j\201\333\274l\274\"\274\365&6\275\025`e\274\233\363T\275\340\313\034=\377} =@V\n\275*\222\013\275\233\315?\275\261q7\273-&\365\274\352\222F=|\355\345\274\373\372\017\274j\3335\275M\3526=\245\253\364\274$\263\233\274N\027F\274\024\216\376<\330\340\251;\316hF\275\341\333\037\275g\231\t=\240\357\007=\320tK<\333\026\300\273i!\273\274\001\263\216<\303l\351<\177_\007=\313\317\002=\005\267\320\272\224\364[<\334\004\251<\331\024\262\274\342\335\215\274\226\333O\275\004\346\314<\332\250z<1\241\231<[1\266\274b\276\243<F\'==*j\376<\022\346\224<\325\223\013\275\372\306X<hT\361\273`\020\317\274\264zO=_\220\226\274\2752A\275\362\324N\275\377\010\275<\035\303\344\274\367\353\025=-\"\207<\255/\017=\352\204O=(\020\021\273\206O@=\344\316\025<nJd\274\267\316\370\274\267\037];\022TP\275\214\034\356\273\357\223\025\274\307\314\t\275Z\235\025\275\317\243*=\006\017\205<\376p0=\034\244&\27508\023<\373\276N=\023\362P=\334\364\r=KP\\\271H\253\333:P\223\373<\325{\323\274\023E\216<{\201\\<\271o\240\274\262a4\273\347\262+=D\2026=,\256\"=\002\016\234;\035\273G\275\212!\233<\026\347\247\274\200\304%\274\355!\300<\201\322\033\275\000\265\025\275\273\'\024=\342\314\376;\361\'\026\275\034p\030\275t .=\025\315\035=\245H\264\273l\255\3109\277;\255\274c\322T\275\312\313$\275\276-1\275K\257\325\273s\227\326\274\"0+\2755`6\275\354\007\306<\207\215~<\307`[\272e`H=>\243x\274\251z\326\274O\232\007\275N\255l<\211\342W\2740\256S=8\022w<\267o<\275\234c\300;#\305\242\274A\014F\275\230\321\035<\022I>\275a\235\202\272\320\243\033=\027\373N\275v\026\257\274\344%X=6\223\023=\352\365\247;\000\214<\275\364\237\235\274M\024\275\274\315\332D\275\356\252\205<\353q8\273\004\303\'\275|\255z<P\227/\275u1I\275\3151\000\275^\236$\275\0038M\275\227\215\322\274A\331\354\272\276}\007=\267q\022\275\257\325\334\274bt =\300\337\000<\017\2512=\236\231\010\275\202\254H\275^\3657</\225\267\274\367*\'=n[\236\273\325\252\007\275-o\302<\371E%\275\375\2130=\223\374\020\275\301X/=$\351\007=\211\322G=\211\036\016=03&<x\353\233<\355yH=\010d4=\367\037R\274\214\346\006\275\302Z1=\322S,\275<f\214\273\020$ \275\274e(\2751\032\006\2756\235\220\274\227\272\234\274\251\365I\274\376`.=\244\3677<\302\260:\275~~\004\275\236O$=3\320\262\274JB5<\230\252\245\274\002\r#=\024\017a<n\331*\275-\013\255<\264\301E=\014\025C\275\\\nN\275\002\021-\2753\307L;VL\274\274m\353\"=[h\224<\343\013\227\273\245AL=\021\206\257<\312j\241<\035\257-=\005\376\007\275\312\233A\275\315\211\301<B\007Q\275M\227\312<\np\030\274\362K\022\275\202/@=\004\354\037=\337\202\022:iB\203\274\375\2157=7B8=\214\014\274\274q^\356\274H\313\200\274\334;\306\2743%@\275\n-\250\274\021\275V=}s\007\275O\375\'\275Q\247\234\273h\026\023\275k\260\037\275\333B\003\275\004\347.\275\376\221\245<\306l\n\275j\376,\275q\317\030=\035Fq<\210\337\304<rg\021\274@\341\316;\022\343$=\271T\013\275\267\004\212<\366y\022\275-\354p<\303\020,=b\231\341<\302u\246\274\336\377\314<?\277\365\274\217\303\255\272\274\307O=8\270O\275J\235Q=\205}\034\275e\323/=\271&E\274\273-!=\r\324*\275\245]\245\274\026\304B\273^\321#\275\0224\261<\202\322P=\360x!=\321\322\004=z\223;=`5\020\275Y\264\273\274\023S \273\342mK\275!\364>=\371\222`<\203s\254\270\226k\024\275\354\272\\:,F:=X\362\277;\210\007\277\274):n\273\340Q\377<\220\014\315\274[c\006\275{\251V=\265\003\007\275\374C\317\272R\025\221\272l\263\344<7^\374<\324\355\224<\336\020H\275\244\253\371\274\334Q\355;a\372=\274l\010\001\275\267\372\317<\200\253\375\274(y<\273\315Y(\275\014\263M\275rt\341\274\303\277\342:\321\003\274;_1\001<\037\035\247\274\305)!\275\317nU\275vx\275\272\273\027\034=\332\361\034=Z&\245\274\244\000\004\275b\222\037=\"\2467\275\313\311\010\275\002\216\377\273\031\327O=JCH\275\300\362 =S{\033=|\214=\274\202?\000\275\334{\000\275*\245\036\275\207\373 =z\033\037\275{\004\272\274\275\014\265<X\327\031\275\220\262\204<A4\346<\362m#\275[\025\002=\214\354C=\351w\223;\267\2768\275\027\226\273<\356N\201\273\246d\375\273\253^\370<\233\304\343\273\\\304\024<\262\205@:M\232\213<J\036\217\2727\320\333\273e\216S\275\2219\007\275\351>\306;\261Q\025\275{hS\275k\360:\274H\374\233\273-\270\300\273\305\314N\273\227\260\346</\353\322<2hK\2742{<=\372\362\326;o\302\r;\016\314\001\275,\223\256<\375\245\215\2741\331\016=\233EZ\274x!\t\275\031\250\020\275s\307%\275\276\363\222\274\273.\004<\274\315\242<\310d\"=\205OT\275\367`\277;_\2357\275\036i\r\275!)\320<\271v\353<\204z\300<#D\036\275K#\372<\356(G\275\036\3773<\273k\323\273\037B\371\274\223\330{<m,+\275m\270\350;\237\343\242\272y\230E=\345\302)\275\342&6\275\253\242\030\275\213\372\014\275\375\241\303\272\255\246\214<\320\006\256<\376\017\247\274\321\350\024\275\034\002H=\240d\304;\322\307\326<9+\331:X\203P\275\220\342p<\377\177\354\274\354\341Q\275]\335\270<\375\334!<\246 Y<\201A#\275\036D\247\274\306\361_\274\321\307\207\273\266\227*\275Q|^<$F\215\274\"i\352\274\344JQ\275+\003<=Y\247P\275\364q.<\320\256\225;P\353/=\333\270\356;\310o\005\275\001-\006=d\021C=M?\273\273?\323(=\224\277\037=\233\327s\274\363T?:\331k\003=\252P\354\273El\364;\226=\254;\223\006\036=v\243\313\274\"91=&\362T=n\3441<\266\271\333;-]\367\2743WW\275l\3170\275\'K?=*\277\274<3\365>\275P\322-\275\342\226\370<<\352\014=\326\021\224\274M\005\253\274\221\013\023\275\025\354\357\274m\233\267:\324E\032<Tu\300;\313\210\232<\223V\304\274y\215)\275i\2137=:\324\010=\r\177\375\273\234g\376<\353\366\021\275 \rM\275\035W4=\330\305\261;\220\373\031\275\356A\177\274\027Q9=\037<A=I\303\251<2\361\325\274\033`r9\251+\223<.+\004=<\265\327;\203o=\275\336\247\366;\336\2568=\217\356\230;C\001&\275\020rc;\254L\256;\207\'P=\272\027\225<\2220\010\274@\007\241<_\000\357;\034\014F;Z\205\033=P\002\032\275\020K\000=\302En<\021EG<\037\351\242;@\360R=\004\"\247\274b$\014\275_\306Q=\216x\322\274\001G\350\274\344\246+\275u\230\025=|\213>=\004\242Y<\257t\004\274eeT<\360d\265<Cg\024=CQ\321<\210\245P\275\021\335/\273\217\310\231\273\243\311\346\274$a\255<\205\265e\274\034e\310\274Pl\302\273P\266\335<\305\024\021<^\024\372;jW\306<\no\314<\203@\204\273\350\204L;\365_!\275\367\201\315<\224\305\316<Q\257$\275d\310\006=\217\246\"=3\364M=\333\275\303\274m\314\375<\t\220\014<\252\217?=v\343\023\275\220>\027\273M\330\030\275\006\206:\275U\031\234\272\202\235\035=\257\326G=\213=\260:\372\013\371<o\n\026:Cu\242\274\037\266\314;zLP\275*Y-\275\233\241\265\274\223\202\310\273\0237\030=]JE\274\323W\205<\341\304\240\274\320G\037<F\'\210<\223\007\216\274A1v\274\202\342K=+\344\213<L@\307\274\215X\n\274\262kf\272\006\232\016\274L\376L=eHA\274\336\332P=>?M<\332#\354<y0Y\274\367Y\344;;\016G=C\312\305<\220\361:=\275!\030\275\253\254\376<\200Z\207<\376L2<\254\345!=\001\270v\273t\330/\275N\221\340<\323kI\275\331\023\321;\033\274\277\272\211\367\276<<\214\372\274\246\315R=\000U*=/\n9\274`\010\'<:g\025\275\337pU\2745\354\200:\'.\376\274\024b)<?\013\360\274`\362\315\274\200\2637\274!,4<D;\036\275YC\032=\354\013\'\275\354\213\360\274\222\353\270;\006\212\026=\345\314K;\351\326J\275<D(=\027|\272\274\256\245t;^S\264;\267\250\320<[\2448=\275\240H=\242!\213\274\3450\277<\310n\250;\366\235\362\274T\234)=\361\220\n\274\347W!\275\263XA\275uu%=\235CE<\225\021\007=}\261\316<\241\026U=\341yA\275E\271\267\274hY\031\275\230\312\202<\242\213D\275\002\022\017<\013\356\027\274-\0251\275\342}\035=6\366\360:V\237\201\272^4D\275\345r\263<\317\034\354;\311\302\245\273\006\276\030\275\333\225\260;\322/+<\035\026\344\274`L\262\274\245R\031\275n\213g<,\227\300:}uM\274\220}\n<l\235\"<Wo+\275N\257#=\234h$=a\023\003\275t2\376<R\253\375<@M\370\272\342\326\203\272\261p\023\275\205N\375\274Zx\'=\315\203\222<\374\0016\275\226\253\251\274}\200\200\274z\342\210\273k<\014\275~\335\243<<zO\275f\273\340\274}O\225\274\241\230@=n\016\235\274ns\013=D]T\274:fK\275z\227a;\177\030\367<\316.@=\225\t\007\275{GF<b\331\342\274\030\247\242<Q\337\014\275\342B\306\274X\201T:T\266D=\035\017\005\274\257&\027\274\352\276\002\274&\3716< MI=\256\036\305\274\347\0000=\014N =\256L0\273\247\230\220<G\376\205<\267I\233\273\225\267\312\274Y\347\272<n\352w<[\036\305<\273\000\017<\323\016\261\274\022\371\253\274\376\rA\275f\027\266<\274r\021<Z\245\215\274F\322\243\274\254\342\276<\250K\303\274\367\361\317<\342\346\000\275\376\007\013\275\271>><\247\031\345<\225\213%=/\376\232;\210\t\316\274\2740\353\274VM\002\275\225\241O=u$N=B\376\020=\354s\354<\3670?=\215\222\230<`\001\n\275p\007\205<\200U\016\275c\026\022<\270QN\275(\372\321\274\203&V\275\237\323\275\273_\nX=\250\344\n=\024W*;7\2268=\203\256\340\273\003\236\233\273\313\317:\275I\034\377<\210Bo\274\211\303S=C\326\037=\037Y1\275\022U\023;v\251\310\274\217j\273\272j\306\222\274\346.\311<\007\206\013=+.\265<n\210\230<{(6\275\214%\022;p\243\271\274\n\265j\273\302\215\024\275\342\346\267<\244\275\004=\203\372.\274\343&\'=\370/V\275[\227N=\0333\003\275\373l\352\270W\"\262;GtN\275\r.\"\274;\004\210<\245Z\227\273\2402\273<\327rW=&\351\250\273\212\365B=\t\315\027=\002\340J=\025 \030\275\000\340v\274=\226\264<\021_V\275\'\030\323\274n\212v;[\364(\275\203^\t=C\205\r\275\253\\\342\274:jT<viQ=\207\332\"\275\313\305\217\274\001\220\031<8\356;=\325\1776\274\226\034\003\275\203 \377\274\243\272\244<l\321\343\274B\275^\274y\201~\270`\345\337\274\006(\266\271\213\3227=\303\367\013\2739d\030=.g\006=\034\352N=E\263\177<%\323\360\274E\255B=\342\n\205<u\\$\275J\351\021\274\270\275\207:^tI\275\307N\032\275E\326B\275I\375\033=lTM<\363\037X\274\227\356\027<\350\233\r<\275\013W\270\'\\\265\273&\016.=zi\016\275\302}\244<A\232\217<\207\265r<\263\013\001<\234\220L\272N\035V\275\327\327y;\251|\"\275=\3724=\323\346\231\273\322\364\t=\233\031\307\274\321\261\206\274\322\316\n\275e&\027\275\276}*=j(D\275\020\207\020\272DF=\275\365<\030=\031\350S;\217R\027\275\006c\245\274\347\327\250\274\030RD\275fOZ;\331\253C\275\260.\235\274\276\n|\273\221\024\000=\354\037\353<\373\367?;\334[\220;%\324;\2750\035\223:\361\214\016=\3333\037=\315\332\003\275y\213\370<\344\337\257\2731\221U\275Vc\251;\001\253;\275\252\\j<;N\226<4ad\271\003l\324\274\225\\R=\332\327\327\274\000\313\205<\362\030\035=\010]S\274\264J\372\274\227]\211<-+!\275\0013x\273\275\013?;\000\223\253\271PT]<\344\231:=A\341 \275\022\374\3568L\024H\273\034i.\275\342\017\000\275\216>Q\275\332\tD\275\203\321\003=\227\265\226\273\030].=\304\211)\274\224jQ\275#k\005<\312\352\250\274}\305@=\334B\307<\341?>\275\251\376\350<\036aB\274\365\312J\274\330\272\036=z\004\334\273\331\242H\275\330\356|<\333%\265\274\005\336,\275_Kn\274\265\255\261<|qC=\367\230\031;\357[\226\273\224\372\002<P\240\316\274\330\334O\275F\363==6V\001\275\nn_\274\021\001A\275}h\246<\274\036\003=\"\370<=IP\000\273\013\234\372;\201\035\253<ju3=63L<\223\254)\275F\236\322<\"\016\324\273:\243.\273 \323\326<q(t\273\207vr\274qP\346;4\267\013\275An\346<2q\364:\303\227H<\273PP=\025\233\267\273\333[\n\275\001T\003=\257\373,\275|\371,\275\305X[\273\230].\274pZ\027=W\314\242<\356\325\253<\030\312\223\274 H\313<s&\004=\021\026\324<\000\tD\274H\314\247\274\242\\R<\276F\220\274!Y\313\273*/\345\274A \027\275@\256\005=\273\242\'\274\254>\231<\010i\321\274\000B{\274\265\216\262<\002\035\253<\230\372\033\275\007\0012=-o\032\275\274\304\017=\'\311.\275\250\255\n=\271G\025\275\273\017&=B\0253<\354;\003=\353WA\2751K\205<*\033<\275\021\230\220<0\252\247\274\346v\341<\t\253\366\273\201\024?=B\276\022\275k\265\010=\200\2404\274\007\202C\275\267\270\317\274\261\006&=O\036\340\274=\376\010=\253\013\034\275\244\221\244\274\214\344Y\274Ry\277\272\242\320\007=\366\373\347<\241\335Q\2757\270O=X\034\343<\356\226\315\273\371\002\003\275\375\r9\275K\007R=\352\026;\275\243t\326\274\002v+=\216\363\004=Hp<\275\367\216\334<2\027\033=\244\247\3308e\350\346<^6\255<d\332&\275g\366\"\2752y\213<\277\227\360<[p\345\274\2779\033\275f\244\305;\022\272\000\275\nd\325<]\361\005=@0(\275\013\274\004=hn\313\274~\212\316<\217gB\274fv==w\3616<;]8\275\265Q\374\274\030|\377<.\341T\275\262\220 =\0325\242;\337!\200\273\200\271=;z\260\312\274\221\177\316<X\376\024\273\265_\232<e\3502\274\236\377B=\371:P\275\376\357#=\264\003S\275\315\027\312\274\232o\020=-\r#<ik\362\274\275i\264<i\231`<\265I\216\274T\364V\275\004\311W<_\220}\274\316^D\275\000Y\005=\301\353\207;E\265\016<\377\211\023=\206\266]<\261\350\232\272\246\226\010=\236\327H=\300x|\274uXA<\343t-=\341\033/=\337fe\274\025.\343\273\326)V=\324R\025\274\227\025\361\273;q\276<=\217\202<\203~`</C\366<\003\262\203<;\251\273\272P\226\264\273j@V\275rm\266\274c8\"\275\030\300\035\274\007\312\275<X^/=\336\243\235<w\n\037=\257O\316<H\201P=K\335\030\275\321\246\222;\306l\242\274(\203\007\275\t\273\025\275\250\315!<\236\202\010\275C?}<\307\272\n<\013\004%<\343:\345<\353\2058={]w\274\325\177s\273\201\244\267\274\247\"\n\273\272\026\202\274 \334G<\254\036L=\330$4\275\362)\032=\233\013\344<\214]#=u\372J=\266}\366\274LCA\275\364a\310<\230\335\300\274y\324\004=t6\265<\016\027B:j\252\246<Yo\224\273\347g\200\274\254X\351<\232<y<\227\320\010=\330s\234;\344\'S=*^\362\271\221\242-\275\322\013\201\274\240\372A< \2544\275\032\243\335\2746\374J\274\275\344\226\271\253\222U:Ac\200\274\355\313L\275\356\004\373<\317$4=[\2736=\200M\272<l\307\"=F\251%\275\350\r\020<&Q3={\027\333\273}\217\032=\342\320\032=\007\345?\275\244\033\202\274\006\345\014=\342\002\265;)\376\360\274\376b\352<\221BF=\230\264\205<\302yF<\031\233\302\274\307\257\222<%\334(\273\276\\\007<%\203&<\030\206\255:\257a\327<\222LB\275\203\337\024\275C\342\034=n\021\371\274\tt\210\274^7\321<\313\177!\274\\JV\275\313\331\323<\205d?\275\360i\324< oV<\037\363.=*\211\312\274\230\202\330\274;\022\204\273\2202\224\274\203\265P\275x\236O=\340\232@\275\360I>;+7\205\274Q\373A<\305\263\031\274\014J\241\273\002\377<\274/\376\211;\314\353\017=\373\311W=\275\377\222<\004\247b<\305,K\275\322,\033=\335\014\004:\024\211$\275K\337$\275\256\337;<\374\215\345<\240cK=\016(&=3Zi<\314\004\004=\005o\014\274\036\330\031\274@n\247<\211s\325\273\353\353E=\016\331U\275\016\3502\275p\344\304\273Q\244\000;\204i\274\274>\336\255<nb:=%E\r=\255\266\212\273\222%\366\274\033\027 =K\217\326\274r\001\2678\177\367H\274\000\317>\274a\332\267<\023W\n<J\004\010<-\002J=|O7=\345\005S=j\366\000\275\2411C\275\373\035\371<y\n)=\260!\"\274J\360S=\003\340\354\274|\243d<\340\263\003\274\327Y\023;\334i\245;\027~\013=\337\333\271\274\273\332\'\275\035>\235;\357\201B=\010GL\275\376\201T;R\035\217\274\333m\n;\014\365\036\275\235\363\204\274\242\351\274<\321L4\275\351)\"=j\006K=+\222\256<\365\025\277;L\201@\275\026\230&\275\343\225\377\274\273\300e\273\327kV\275\347\375\371:\010s\350<\362vN=\363\213-\275\255\n\307\274w\275\222<\356=,\275K\226\004\275\236\361T\275\246\266\353\274\"\356==\006\247L=`\004\244<XV\230:\227\2071\275\312\034\324\274/\362\263\274\027\215\357<\233\362V=k{\355<r@\351;E72\275\016a/=Y6\313<o\324P\275\010\215\036=\241\366@\275\243\352\030=9L\353<)\211\004\275 :R=n\217\372\274\371r\037\275\276\213?\275.\341\315\274\205\021\373<z\341 \275\213U\030\275\017\351\031\275\260\025\366<\23069=\354\365\301<\364\363\004<\202\365\036\275}A\376\274l\3166\2754\353T\275H\201{;ae\033\275r\244W\274.\325\002=\rc\265;uVX<m\214<=s\303G<\355\327%\273\342f\252<^\243z<\224\261@\275\n\367\003<Lw1\274\370\362\n\275+\257\010\275\241\022)\2755\021\027=\203\016G:\205q\034\275\031x\374\274\034\206\344;\213\032X\274\266\304M\2751S1=\361=>\2756\264\350<\n\242\367<\321\017\257\274E\306L=\221\350\017<<\300\330<x}\021<\252\007\363<R\225\344<\267w/\275\t\326\274\274Z\271\267\274\016\362\'=5\316D=\273\2249\2758\324\335< \0379=\'\265}<\014c\007=_\034\"\275\262\351\036\274\353\t\001<3\217\350\274SqM<Ft\327;O\275\304:5\301E=\245l\277\274\014\217?=I^S<(\240\223<\257\343\236\274\277.7=\001zr\274\3303)\275\204\n\370<\226l-=\247\035\241\274:\036\026=\004\370\r=X\226G=\201|+=K\3449;\003;6=\365\315\365<\227\237a\274\241\220\360\274F\027\006\274\202\n3<\250\203\022\275\'?\347\2747\320\200;\314\364\345\274\013\372x<\203_\340\274\220?Y\274c\236Q\275<\365M=(\204\026=\311\257\310;\314r\006=\367\2736\275\261Xa\274:j@=\004\241\221\274\300\205\005\275\200p\346\274\277}M\275%\305\017=\027\206\201\274y]\037\274\365h\326;\r\2400\275H\022\023=\213o\276\274\001K\375\274\t\324,\275{\257\014\275\225\260\021\275T\207\003=^\035,\275-\230\331\273\207d\226:\0101\000\275\036\206\316<\235\022W\275\236\251\350<\213\301\211\272+fH\275\275\356\030\275\335\320\037=\004\016\010\275w\345v<g\001\035\275\245\311(\275\3356\230;m\253\"=\"c|;N.\243:f\326\251<\202\017x<v\203\203\273\227\020\222\274\027\222\014\274\251\264\030=5\264`\274\036\271M=\301\237n\274\357=\036;rS\034\274\3174\025<}1C\275\307\277\300<\2520\200\274\0265z<\202\226\021\275\037\262\303:\203lB=\225\260\346\273\025\214D\275\r>\206;]E\273\274,WF\275]_R=\375\327\361<\274\356\267\273\tw\023<\357wH\275\227\036K=n+\020=+E\236<\273\206:\274\325\200i\273D@\"=\206Cw:5Q\001\275\254\377#\275\307x\224<\2403\277<\345\261\257<\270W\332<)\207\377\274v\273C\275\213K=\2754\023\231<f1U\274\360\000h\274\215sJ\275\200\347P\2756e\213<a\347\224<S$\334\273\373\347\221<\227R:\275rr\213\274\316\0207=\242J\005\275\264\021\'\275\200v\252\273\305A\014\275\324\356:=\335s\350\273?\362o:\022\250M\275\302U==\236,\226\273\316$O=r\3104\273\030\355H<\r\311\"\275\003}\323\273\3048\017=\264\365;\274\347\201\303\274\024\3214\275\'\025a\274\370\340\032=q:\274</ad:p\300\374<\021M\017<\215\032\007\275OGJ<\236\007\343\271(\275\001\275\230\207\357\274\251\302\327\272\005;\336\274\212;\252;\264\026\236<\020\353m;^xq\2747\233T\275K\010\006=X{S\2749\356\254<A\247\222\274\204\035\253\274\366$\263\272d\336\010\275\341\307\352\274\037\260;=CtI\2753\207\214<\372\246\255<q\002@\275i\334\345<rw\320<\370\027\'\275\233\276\275\274\364\265\374:@\007\347\271\224\272\032=)\270\367;\"\224\240\273\202\303A<\234\356\303;\371\254.<\346OB=#\241\036=n\234\371\274\013\225\030=\303\315K\275<\0210=]\275A=\254\274\020\275J\371J\275\372\3060=ZY==\226\244\325\273\261P\010=H\340@=\010\230\036\274e\3256=\266\207\026\274\367r\215\274\0010\231\274M\371\032=*w3\275\033\002\203\274\036\303:=\304\301\253<g\333\207\272\030R\270<\316\224p\274\265\001\323<\343\0366=&-\021;\243S\206\274\330\320M=\353cw\274\036\214B\275\2005\307\273\003}\032\275\351\300\347\274\374<\275\274\326 1=3\320\216<sKN\275n6^<\221\237\321\274\371m\346<5\2364=\263\215?\275\205Y\243<$(A\275\377\335\302\272\315\r\223:$\036\017=W\370\256\274\222\214&=\353r\002=\325\350\232<\216I\266;\365\242\216\273;\3243\275B\217\030<\264p{<\202\361\263\272O\222\361\274\351]&=f\006\350<\305\332\215\274nF7\274\010\r\274\273 V*=\356\332-\275!m\023=\0323A\275o\362\351\274\032\247\023=\363\277\t\275,\335\235<\353\375 =q\027\355<\334_\235\274*\246\335\274\337\241\272\273\005\267\023=.|T=\306\200\201<\347\244\024\275\302L\236\274\312\240\244\273o\336\216<\255\201\n=\013\3749\275\244\277\225<\236\241D\275\256\314G\275A\351j<<r\373\274\177g}<\325\266\217\273\362\322\352<\371\357c<\336=\242<\221\256o\274<\232\352\274I6B<`.\"\275Jy,=\034\244\353\270\376\374\301:\225\357\270<\323t\246<V\354+<K\317\263\27432\225\274\327\303;=f\322\247<\364\325!\275\336i\016\274\004:\021<\001\231\353\274\372x\022=@@)=y\203\265<\334\002;\275\n\273\020\274\254\360\330;\242\360};V\256\211<\224\367f\274\024`\306<n=\022\275\236\021\025\275\37219<\227\304C<\016>?=&\016\034\275b5\026=E\206\355<\303\274Q:\214\031\010=v\301.=\244\275\323\272\n\330\341<\350\377\251\274k\367\311\274!`\323<n\320\r\275\236\214L\275\352\037\263<\240\233)\275]L\367;\023\354\351<\277\262\354<\243\335\020\275-\244W=\355\013\207<\376\337\204\274\257\001\276\272m\027\267<A\264\373;\020\350\275:&\257+\274A$\236\274\300q\274:A\327U\275R\261%\275;y\301\271R_\365\273\362\351\311\274MO\033\275\362s\313<\362{Q<\310\302i<\017\370\036\275|\210\006\275\261\345\222\274o\342-<>\276J\275a\3510\275\242QP\275K$\010=\317\345u<\264\221\214\274gf\n=jj\327:\023JI\2749\t\302;\274\311\227<\305a7\2752\"\214\274\331K@=\316+)\275u41=\344\374\326;\221\r \275\350\026=\272\244H\304\274g\370\003=\004\277w;K\316#=\r\t\277\274T\327\257<\021YO=\026#\252<X\326\024;\206\004W\275G\314\313\274\017bU\275\251\377X\274\211Xf<\n\037\326\274\013m\356\273\331g};K\352\244\2747\333x\274?\025\273\274\230\354\205\274|C\273\273\027\321L\274\262h\204\2735td\274\223fW<C\377\020=\023\353\362\274Fe\225<YN\006=Gh\002=\366\365\256\274\245\346\352\273\016\250\277\274\360\305\211<\350\322#\275F\3210=\315\226\020\275\205\0007\272\310\255\312\274\007]\202<\022\224)=w^\274<\021\314\225:&\322\t\275#.1\275\352\260\303<\020^ \275\356\273\273\274\035aW=\344^\353<\374\341\036\275`z4\275\3428-\275\033\327\255\274s{(\274\264#\027=\232\316\236<r\223\215\273\242dB\275R\347L=7\343\276\273\354\242&\275\370`X\275y\223\273<`)\037\275%\375\303<\016Q\025\275x\0356<\325\037\005;\255\371\t\274I\334\004\275\314,\030\27581\030\275\362\243a;\235\037\305<W\310\003\275\207\020A=\014\255\036\275\360Y\007\275\270\n\257\274C\326\236\274\304\225:\274\217Ww<\344\211J=\354\264M\274\\\373;=\217\256\305\274\037X\327<\333\272A\275G\240&=\273\3665;\200p\322<S\263\037\275\310 ==\314EN\275l\217\340;W5\340\273\256E\000\273\265#5<\331f\020\275\232T\t\275\237|\272\274,\3138\275\241\344N=!\237+\275\337\361\202<\000p\357\273\356\351%=\312@\372;\346\322%=\212\202\314;j9\304;\020)\251\274\r\374,\275\364cH\275\200\3061=\264e\320\274\210\2532\275\025\006?\275\304\261\004=)\035\021\274\270&\365\274y,\0219\024\361\315\272\004\242\254\274A7\003\274\236u\225:JZ\3438:\340\354\274\251\225)\275\311Sd\274$ \260\274\270\235\223\271o4\005\275\211\303\032<\360Z\250\274\317\036I\275\276\260\036\275qO\010=\242\2005\274pj\006=\005\324(=\215\377>\275Kd\t\275\024\347\303:\2466\302\273\206\256\014=\222\235\302\274\342\024E\275\351Uc;\356~N=i\370\240;\23291;\004\3132\275\310.==\315\342i\272+\357\315\273c\341\267\273\254L\022=\037\265B<\025\343x\274\204\325\010=\262fA\275\013\000e\273\206?r\272\220c\021<\020\267$\275\226T\021=\336A\306<\331\307\017\275\014\327@=\252[%=*\006\231<oE\"=\375\223U\275\212\211\205\274\271\2406\275\030\033=\275\024;\364<\350C;<\002\360R\275:U\r\275tI\337\274w$,\275\036\263\025\275\373\203\341\274\304\3437<\033\204\211;\234S\310\274\n@\210\274I\001\322<\356\210\n=O\225\n\27455\355\274\242\036\006\275\222R\263<\"\022]<\307\311\\<\275\334\321\274\n\355\253<\370\354N\2744\023\361\274\253\303C\275\332\021\307\274S\203\220<+\244\257<\275\276\273\274bX\303\274\337?\372\274y\337!<\215\3630=\323[\327<2\216\250\274+i\027=\366\301\370\273\244N\373<:t\262<\\}4=p\"Z;\035}W=\232|\214;U\013\227\272\351\223\204<}\224:=4\235\370<E\2153=\320\332\372<\306x\370<\371\343\351\274\215\013\214\274X\354\302;\200VS\275\372\242\231\273\345\272)=\275*\201<\225\231\245<\244@%=\02607=\301\226U\275\00544\275\030\031,;\373*\364\273\333\0174=\326R\\\274\270\347U\275\266\362\344<W[\327<\340\357)=P&\305<\351\000\365\2740G\t<au\276<\\\215>=\310L?=\314\037F=/D\013=\244F*\2757?\032=\203\345\307<\006\2429\275\347\266\233<\377B@\275_f\377<\253\233\222<\340\252D<9\314>;\005\321)\275\300q\340\272\354m\262<u\325-;\246\205z;\215rE\275D\250\326\273\013<\3709bv\305<\365\301K\274\n\331\204<k\316;=#1\314\274$\356\203<\235\027\017<\231\261\035=\361\252\020=5^\307\274\354\036I\275\325\306\375<\336\312\227\272\017\t\036=\271\356%<j\035-=\022\n\374\274\356I\274<\326R\373\274\207+I=\333\250\010=d\257{\274\347\363[\274;\223\325\273E\021/\274\330\234\306\2748\341\203<w_7=\306\325\265\2745f/\275\026.\312<\213G\231;\343v\005\274)W\375<O\332y<\333k\307\274L\001\301<\\0\361\274\376]\263\274\270\326\026=]\337\031=L\232S=&\267\'\275i\322\357<UXK\275\346\232\003\274\236\177\202<\336v\216<c%\262;\016\364<==[\276<@\021\244<\337\240\036=a=\022<#\226\377<-t\347<\351\222\212\274\242\260\007=\263\313\324<\014CC\2754\027\306<\003\336\377<U\236#\275\313z0\2730e\230<\263@-=PaT\275\264\220\254<E\235\344:mF\006=\301\263\030=e\267a\274\267\227g<k=\223<\247\005\013=\200\000\223<\236J?\275R\215\317\274\234\312E\275;\234 =\201U\345\274=s\356<^\tI=M\337\035\275i\271\272\274q\033><\021\324-=\030rS\2758\033\023\274\007\223\214\274\350\207\351\274\335\024\370;\t\246\007=+d\351<\220c5\275\272\235\024<\323\374\327<\335j:=\242h\301\274\031\334\352<\004&\322;\335\024X=\262\273\264<4g\265\273\263\030F=\376\362\376\274\274\031s<\312kN=\333\254\221\274\023.\002<\373ZP\275pS%=\236\333F=\"}\347\274\344\306\357\273\273\352\302\273\356\331?<\323\323R=c)\362\273J|\312\274\326\357M=R\301\006=\316\324$\275HQP=\217C1\275pfL<8\310\233<\317N\252<X*\032\275E\262];\350\362\254<\324\326\251<\266\010\236\274\216\352\215\2745<=\2757\003$\275\312LW=\351$\376\273\024\376\020\273Bd9\272\013\205\233\274\316AP\275\377\t:=\376\201;\275\r\\D\274\232\306;<\311\316S\275\213w\300\274X\343\275<y;e<\346\331\347<kXw\274@(N\275\355\326\325\274\223\331-=\246\215T=ZU?=\211jO=~\030 \274h\237)\274\341\354\354\274\317u\336;\023q!<\322q\224<a\223J<\327\212\365:\326\2543=\314\031\022=\205q\226<\313\201S=m\034\302<u2\244<\234.\177<\350\003i<\177Z\034\275\275mB\275\036\360\004\275\005=\273<\353\242G=\327\244\207\274\326\204,<\255ZW=\260\3303\274\310\265=\275a\273\263<\351\263\224\274l\353O\275+\264\003=3\341P\275\341\3034\274\261\216\355\274c\033R=8\035\363\274\223J\222<cz\335<\306\217\034=\000\205\336\274\255u\322<X\363\'\275b\007.<{\307\373\274\226\235F\275\207\213\'<\n)\255;\021\1773<?x=:s\315/\275\236\021\310\273\333\331\335:vOW=\024\214\327<.\335\016=\224C\226<\273s\303\274v\235,\275#\237\314<\277-\033\271uFX=\231(\031<\343X\013=\327D?\275Q\315\350\274A\225\234\274^\207$;\333\201\271\274\035\326Y\272\233\234\255<\237\216\275<w\254\344<\302\264&\275\241\r\377\274K\021E\275\204\277$\2727F\272\274kh\226\271\177.\017=m\026*\275\313-8\275m\277\004\275v\320\310;\016a{:V\022$=\205Z\001<q=\206;I\342\001\275\211VU\275\030\332\000\275\356|\024<\034W\036\275\206\227\033;\037\2119\275\301\022\222\273\326\263\220<_T\203\272\245\324\214\273Z\316\353\274\377\230\204<\316\250;=@\366+\273\231\315O\275\212\307G\274\003\357\224;\216\266\255<J\205 \274V\276\303\274D\373\037=\321\227\204\274\224\177\375\273\205\214P\275\347$)<\256?\367<D!\274\274\223\\O<\\\211?=\275\213\277\274\372\263\330\274P\272\025=4\374%<\030\316\013=\230\221\317\274\177\263s\273h\3765\275\222\n\034\274\237\337K\274\027\257\343\273QVU\275R\255\207<`\020\222\274\375\253\223:U\202\350<h\235G=\337\336t\273\227\311\016=S7\347<\0173\023=i\003\243\273 \022K\274\300\301\266<V\017\215\274\215\004\271\274Q6p<\312\214H=N\373\016<H\227U\275\317\215\330\274\200I\221\274\261\212\231<\366\333\310<TKP\275nz7=\315\2200=k\225\035\275\344\241\254\274\361\251G\274\331\201\251;\356\n\022=\02221=\\V2\274\030\r}<\\]\331<\233\347\205\274\374\313\246\274\251\377\230\274\211\225\257;\343\266R\274Pd\036\274\351\2462\274\024&\305\274Z\223\325\274II\271<\376~\200<\357f\312<U\257\321<\2124)\274\370\267=<\230\205\262\274\024\252S\275\301\2016=UV\305<\215\034>\275\201\3239\275\212\237$\275Y\227\331\272\212\300V\275\031\354\262<\363YF\275\276\024W<`V%<\244\377\322\2741\3529=!z\016\275\226\2155\271\226\233\214<\361\307n\273k\017\212\274\331\315 =\254\330M\275\300<\251\274\210\333_\274\2037\035=Z*P=+*,\2756\264\201\274G\273\n=\001\371W=F\275!\275\325P\227\273\311$5\275\353=\"\275d\324:=\235F\204;f!\233\273\271\325\323<N\216E=eF\240\274\033\330K;\000\020\332;f\367p9\316\205\372<k\014\037\275x\t\363<\257\370B=<\315x<5X\017;\016\251(:\\\320\206\274\210\242\370<[\274\034<a\233)\275Qr\002<%B\'\274\206\t\307;\203\244\231<\333x1<\265\275\267<\026\350P<E\212\271<\017\003n<X2\233;\367\037\212\274\234\235\233<M`\270\274\003\271\262<-wK=\303\242\221\274\337\374\256\274d\314\272<p5\253;h\366\023=,\222\000=8K\024\274\263\256\036=^$\022\274\357\244\336;\341\374Y\274)\265\313\274\014%s;\333r\375\274LK\361<B\363\n\275-MG=\256\234_<\023\240\267<\272\247\022\275\177\006\353<\346\264)=]\271\036\274W\036J=>[f\274\222\"\347\274\362\006\322\274\3640\235:\301\367;\275\365\2651\275)\265E=\315\003F\273\251v\245\271\350u\024=5\031F\275/\002I\275\016\275I<\376\006\000\275dN\204\273c\206\003\275\234\031\274\274^{S=\376\221\334<\022U4=\2203C={\272$=\356\225\374<N\300a\274g(\216\274\362$+\275H\000\336<\032Z\247;\345rj<\340\375J<6\274\357;\032\3561==\271\354:~\305\021=\365\3258\274\334\355P=\275\206\326;\026\332\302<\314$\333<G2+=^\265\332\274\336<\'\275i$.\273\002\215w<(\005\327\274\231\305&=\375\301\211<\\z#=\351\246$\275\2738J<xA\025<\243+\323\274\202\357?<-\325\2549\372\010\017\274)\341\261<4Q\366\274\255\032U\275\240[A=\333\362\263<\203\2125\275\333\273\024\275V\311\366<\327\325%\275\303_A\275b2\250\274*\021\240\274\036\211\273<S\t%\273\"*\304\274\035a\365\274\365\301\214<\265\334\006\275\001$\364<\336\177%\275\022\363\223\274\312\320\022\275\220\035\264\274\tf\274\274\200\203*\275\266su\272k\032\020\273\2762\253\274\310CQ\273h\2232=\337\216\326<\360V\031\275\n\302p\2722%\020=\335[\203<\3632\006=\330K\361\274\300\315\"\275\360\3034\275@\037{;\252\327\377<\356\034,=j\230\037=\322\343:\275nm\0049qHJ<\234\376\217\274\343u\242<\017D\345\273;\276\350<I\276+=\341p0\273\236,\366<-y\354<\253\005\324\274\342[E\275\263\304\"\275r\316\257\272=2H\274\247\007\260<\273\276\303\274^Q\230<s\262\030=|\037\034=\013\335\022\274\005\263\347\273\367\321\332<\270fN=\\\324\214\274\366RR=\243\3550=2\000\325<\306\266\264\272\234\364\005=\337\303O\273\304\315\337\272\337\005\037\275fV+\275\310s\347\273\233\271\246;\260WB=P\267\255<\343K\370:\254\232M\274\324rP<\326\356\245\274\341<-\275|*\000=\265\0361\274 \021@;\215I&\275\031R\275\274\215\201\204\273{Y\251<\3408\226;\303&\351\274`\314\005<\221\367\233\274\326Z:\274\3732\366\273n\236\026=nU\014=\262Y\036\274\220\361V<Z\317\352<\252\202Z<\n\020J\275\361\202\034\275\343\232R=\001.Q=\337\241\263\274{\254+=eg\017\275\275\223A=@\026\257\274\253\254\325\274\261\377=9j%\274<v\225\013=M\273\230\274\201\010\010=\230\007\017\274A\2730\275?\230/=\327\2020;+/\272<\371\220\371;5-\017\275\274o\322\274\3477M\275E\214\367<9\226\227\273\244O\237\274\317\247)\272\356\207\260\273\357\312\001=/\026\232\273lqL\274s\360\017<\222\243|<\254X\352<\257\253\357;\335\205\305\274\\u\274<\010D\001\275\233\374Q\275\375\215U=\205\006\027=5\234\205;\356\213\255:\300EO=\344v\356\274\365\327\035\275\344\037\036\273v=l\274\242>?=`k\031\275\332H\033=X \037=\300\211t;a\307\n<\250\331>\271\261\230\'=x\223\205<\263r\031\275\n\234\006\275o\251\260\274VG\306\274\244\271\030\275\360\3642\273V\277\2549\355o!=\205\360*=5=+=\252\373#\275\375\n(\274\3710\227\274\271\370\205\274\240~\236\273\324\226=\275\367\250\271\274\346;/\275<\215\007=\335b\206:5\375W=AJ\365\274|\355\233<\237\030V=\341W\004=\307\256E\275\023\254\276<\262[\376\274\226&B<\204Z%=\337]\265\272=?\r\273\036\251?=M\235\271<Ha<\275o\320)<\237\365\377<\'\256\252\274\264\010\360\274w\371\003=\363\014/=\262]\017=\275\376-=\244\026\026\275@\263\350\274\254\354x<\303\217\021\274+\350\342\274\274+\273<2\251-<N\277<\275\202\314\000<\311~\t=\251\223\230\273\336\025\267\274B\007.=6)K=;\376\307\272i\351\026=\230\243)\274\317_\357\274\037\024=\274~\302\203<\2616\234<c\312I\275\307\333\377\274\3667:\273\205-$\274\207\213J<F\237\037\275\342n\022\274\037\210c<\202\354M\274\374-\023\275*\'\350<:\364\207;\354.0=\213U\317<V\364\315;\031=<\275i\3114=\023S\016\274\216\223B=\021\230\003=\326\333 \275\004\254\201<\310\r<\274\324m\221<\270\207M\274l{R=\225H\227\274\366\0132<\263\267#=iK\032\275K\200U=\370\341\256<\022\023V\275\206\033g\273B\331\002=W\261\342\274\006\223K\275][\r=\374\3206\275j}/=\362\310!=I\021\037\274 ~;=\2007K=\327\330\013=TM\005\275\\\245\274\273C\245J=\264\302\264<R6\241<\234^\032\275\240\026\314\274\255\210\276<K\323/={\315\"\275&V/<c4;=\'\021A=R_\"=\351\307\356:IZ2=\312F\003=\2056\021\275?\354\224\274)\316B\274l\217\003=\317\350!\275\330\335\006=mV\031\275\260\222;\275/!\035=\335\260@\275\2312\027\275\356\330P\2757p)=T\211K\2754~\212< o\261\274hI:=?\002H\275Y\355\351<\373[C=M\217B\275\027-\347;\262h\340\274\264h\314<j\243=\275\320\352P=\303\201\036\275\023\243\203< \207\365\274\237\321\330<\304+\026=\312n\333\274\304{\231\274\364\276O<\026\302\375<\231\254!\273\305AF<\313v\034\275e\305\367\274\357\240\216<|\002\034=;\357\030\275F\355\017=\365\204\004\275X\2576=\224\340\203<\245\245\353\274\301\257\220:Y\003\023=\210)\273\273\267!/\275\005\310\300<.D\260<\316-3\273\353^\351;\252\010A=^\200!\274}\230\236<\217\226\016;\005\2552<I\241-\275\270c&=\252\245I<\307\335(=\265\025\021=\302\364\227\274\277$!\275\356\234\303<\272\345\362<\341\275\006\274(\267\2678\033\310\204\274\240J\227<(>R=\177G\303<\tI\361\274\334)F\275\243t.<\222k\375<o\212\271\274b\243\005<\"a\004:\234\304\005=\226.\014<\310\216\254\274\255\373\332\274\213\032\221\274\266U\232\273\033\357#<4%F\275|\3311\275\273\227\331<D\364\316\273\230n\320<.\0347\275\250\230G=+\221\016;\'\363d\273z\301?\275\302gA=h\n===,\276;5\300\255\274[@\313\274\201bl<\350R\241\274\016\247n;\021\003M\274\237\306\242\273\014\210C\275$\276\366\274I\241\231<\226?\207<J\207\325\274,\362\364\274S\246\026\275w\232*\275N\272\2748\255Z\036\2755H\253\274\231R \275\3210\230\273\\i\366\273\302\010@<\032\010\215<R\2724=\224V6=\321\035\262\274\275n\351\274\210\360\306\273F\024\364\274\350\2465=\221\006\010=Y\374\022=7\037K=\0347\022=\327\317\246<\343\'\347;}\355\231<Z\375{<\265\315\252\273\307U\203<\'h\263<+\330\330;\310\354\354:e\244\037<\344\211=\275B\343\364\274\277\344\330<\317]\232\274\353\0078\275T\357\231\274\205\312\227;\022\274~<\243\340!\275n*F\275\021\371R<\\\362\013=0\212\371;\377\"\r=\377\025==\264:\302\274\351\376\025\275o\273\372\272\266v\033\274\004m4<P\017\216;\371O\322<\327\020\324<w\327?=G\344\227\27446\300<\334.==\264\267\033\275\375-Q\275\250\325\264\274O\3232\275&^\265\274 +7\275\274\352O\275\340\350\241<X\216\361<:\251\037\275\343\272C\275Im\310<\225/&=O\203\335\274wJ\002\274\211T\014\274\325H2=\271\273]\274\261\203\243:\236\337\377\274\351Z\237<u$\035<Q\034I=\337\366\237\274.\231\230\274\343Q!=\177\273\207<\345z\310\274\223\251>\275\373\230\251:\322Q^<\251\201x:o\022G<\213\272Z\272\260\332\023\275]:5\275\326A\002=J,.\275^\223\316<\303\007?\275\037\262B=\345\234\3069<\241\224\274\305\364\027\274\310rX\275\373/\023=\2341<\275\236\265\030\275S*D\275\223\230\021=\340\2539\275\371\377\017\275\367;\273\273\320\211\'=L\222\310\274\2450\t\275\372\257\274<B\313k\274\221.\t\2754}%\275x\265S=\034\262\276<>!M=\264\363\024=\243l\022\275\243\233\217<\202d\"=\301g\247<e)\256\273\014\326A\273a#\225;\036\nW\275j\364e;j\310U=z\002A\275\033\232\t;<#\237\274D\312-=\0318w<(X\320<\216\177\022=\301\2548\275\376@|<~y\236;\207\245K=\322kV=\010s\275\274hl\356\273Z\261B\275W\223\013\275m\261\244\274\377A\347\274\202\306\206\274\245}\010=\335\206H=\023\006\030=\004\232\356\274X\212&=\342\273\264\274\330\210z<\362\376\243<\345\'\317\274\037\252\362<\373\376\344<\270J\023=j\254#=\272\324\201<\257d\'=\331{I\273\221eS\275b\030\316\274\200\342f\274\010F\010\275+\230\230<Vy\215\273\030a{<\007\2556=m,K\275\034\'\202\274\006z+=\311\2467=\"\354\236<J\207\312<\322V\342<\332\226\021\274\363\335\252\2739\344\367<\324\353\034\275\335\204\014<&\005\022<\226ZW=\225\277{<O\257<\274R\322F\275h}\324;\253\303\031\275\311\'\221\274\316A\021<\234\304<\275\036\344\'\275\3537<\274\310\231\032=*w\264\274\3436\035\275R\326\213\274\315\221O\275\2759\266<_\254-\275\355+-=\030\232:\275\313\344\013=\n\376\207;\177\016\265\273\256\3657=\372r\212<5\2633\275\322XH={\227\267\274\220]\021\273\363Z\t\275\027\373\027\274\2772J\275{T~<\302\014A\272\240\007)\275\362\013\033\275\370\243\310\274\256Y\233<\271\212\335<\303\341\022\273\027\235\005=im\321:\032\250\224\274d\001B\275\033\367\231\274g|s<\252\0339=JU\227<\301B\353<wk\336\271l\017I\275\260@\020<\324\032\235;\363\206\210\274z\207#<&<\353\274yN?<\230\377\303\274^\177,\275\315X\202<\177\322J\275T\224 ;L\254\303<\245.L\274\270\334B\275A\351\270\273U\326K\275A\2224\273\226=\036=`\353\003=gy\023= $\031\274\272\022\347;p\3562=1$\217<\206\376?<\334ru\274+\357M\275\240R\204\274\233}=\275\245>|;\254H\r=[+\035\275\2342\021=Z\037\330\274\356\273\206\274$\341\'\275\010\030\021<\005\205A=\273m\357\274L\335\032=\327\274:;\356\376\370<\245b==\00031\2732\375\001\274\231\317)\275|^\272<\325\265-\275(\314O\274\362\325\r\275A]\017=\233)\037=\224\310S;~\333\004=\270\\\230<\031*<\274\023\360\021\274Ru\377\273\326\362\201\273\342l\336\2749\204:\275\270\367\202\274\311\\2<\262Q\032\275\221\203\000=\3338A=@_\234<\342\205\220\274\373m@\275fZ.\275n\223!<(\021\212\274\303\253D=\303\250I=}B\256<\000mU=\315\211!\275\371\024~;+,(=\327\242\203\274\326\004N\275=DD\275\242/\026<-\343o\274@\'\366<\350\330L;\\\026\233<\334\3034=\256\334\375\274\030\212\362\274\347\302\003\275\340z\033\275$$>\275\017\024S=\310\222\213<\233.*\275|\211R=\3014\237\274]\211L\275x\264<=Xz\263\274x\255\016=N\303.\275\305\273\340\274r\007\035=}mR=%\213$\275R\262C=\334\374\226<\3704\303\274\372\224?=\253\370\343<Yi\227\274i\002)\275\304\247\243\274\272(\202\274\311\265\021\275\256a\345:\325\243W\274\320\264\2279Y\235\004=\202d\326<\242=H\2751\371S\272\301\225\242\272\303d;\275\024\006F\275ZU\261\274e\213\321\274\206\265\204<R\034F\275\266\341s\2748\005G=\234\334I=\036\264N\275\253\301\201\274>\316u\274\036\216A\275\345>\327\274\302j\261<\\\376\313:\306\226\365\274\010\335t<t\256\t\275\302\357\202\274\335\200\2148\331R-\275(\317E\275j\252\360;7\252\230\274\236\244!\273\274\317E\275B\226z;O\021\343\272\025\326\034\275\204\223\262\273\021\2140=\300\000&\274\301v\005\275\266\306%\275.V\221<o\341\372:\332);=\t\233\020<\245m\250<\210\t\030\275\252,N=\"\016\343\274\350\010\006;\023%\357\274\026\314C;1p\254\274\362\252n\274-\236\227:&\201\002=\276^\222\273/:L=55Y\274\n\267W\275#\331G=\275\366\013=\351\244\003=\352\333\007\275\317\376\215;\360\224\230\274\343I\021\274\215\035\002=\231\007\3069B\3306\275\344B\347<\373\340\017=\253\371_\274\226\212\035=\237\360:=\226h\030;\240\2769=\213\335\325\274\263\261\322<>\265#\2749\242\360<l\177\001\275\222\361\010\274\351\3418=\306ZU\275A\270.\275\330\017\242;\224\024H\275\025\263\341:\232\204K\275\314\343\'\273\367\253\020\275\3458\346<`\2468=\022\312\277\274?\306,\275\243i\264\274\0235\235<\220bD\275,\020\004\274\000\305#\272\307\370+\275\231\226v\2742\226\014\275\214\260\241\274\333\002\035<\365U\302\272NZ\320\274\312k.=\334(\n=\010P\204<[\207!\274\276\231\036<\304\210\022=\232\252@<7\240\'\275\3300\376<\241w\223;\377\351\316;a\177\030=\366W\217\274x\354$\275\007w\364\274z7\224<\263\377K=F\237\035\275\277mS;7{8\275\027\324\354;\020\260\022\274\n\000\331\2740k\355\274\272\320\356\274\372\230\255\274\212\236\261<o\246\306\274\310\334\374\274z\213\020=6G =O\231\362\274s\323\376\274u5\237\274\255)\013<\013\213\322\2742\236\003=K\326\021\275\363\213\303<^\254\243<\344jW\273\346o\031\275\215\t\320<\365\254\006<\301\026\001=d\302D<]g\006\275\354\221f\2730\231\213\274Q\026d\274\362\202\270<4\333N<\205\177\236\274\006\301-\275\r=&\274U5\025=\331}\r\275I\271\327;\300\204\250<c\314\242<\212\365@=X\252\033\274\373\267\320<\353q3=OlS\275w\014X=^\212W\274?&\177<\355\374\036\275\342+\343\274\024\266\257\274\314\036R\275\270!\255<\233\013>\2744]\007=\000\t\035=\'r<=\220c\005=\332\214>\275{\334I=\276y\363\273\014\276\231:l \r<\327$$\275\261o\353\274\221:\261\273\256\244\273<\335\270/\275$\240\006=!\311+\275\245Bh<\307_\373\274-y+\275\372M\266;\341\365\270\274g\317\213\274\3527X\275a\201W=Cq\033=~\244\221\274\037\225\316<z+\036=\021\nG\274YQ\345\2742\262P\274\327C\202:C\341\n\274\336\372e\274\020N\312;\330\317S\274\243\305m<\027\235\226\273\324z\336\273\336\203\353<c\200\366\2742\267\r\275G\260J=\022\001\t=\261\367S\273\207%\003=\222=\027;\251KP=\255\340\023=9\301\333<\265`\371<\335M$<\367.\266<\237\273\212\274\242xw:\206&\340<\223\272\205<\000x<\274x\226\013\275\2331\024\275\351\222\017\274\333\004U\275\323\243\322<\003}/=\211)N\275\214\230s\274\234\271\004\275\312\331i\274\310\235E<I\366\353<\362\304\335:y\243\014\275\336\256M\275A\330\224\2745\'K\275a\007\013\274C\255&\275\271\025\010\275\342a\273<\000\2524=6\2017\275\354\005\207\274\2300\346<N\245D=k\\7\2753\357\270<\021\256\025\275oTN=\230\255\034\274\034\214A=o\206\"=\366\336\224\274\223\t4\273\360\234\202\274\2748M=g\323z\273\" 5=\277\326\325<\312X0\275\214j\353<T<8\275(_\271<s\242\305;f\304\275\273\n\250\246\273L\213Q<\321\210\'\274nO\314<\340\035=\274\013\345z<\224\342\013\275\227\306\302:\251\3335=\337_\341<\230\2558=\367\032F\275H\'\032=W\352Z<\236\365\315<\017\313\314\274g`:\275L|\345\274\247,\301;\277\306\232\274\214\231\345<\022\252\021=\331\235\206\274\312\270\035\275\267w-==\237\245<jd0\275P1\253<\263\\%\273\347\337\t\275\001\250\006\275\020\255\351;\376\254\351<\004s\031=M\247\004\275\236\313\n=g\260\210<9SV\275\310\357\021\275\316\2270\275\234\034\032=\374f\302\274\316h!=T\025\217<}\346\036\274\035]\265<\326\\ \275\252\230\216<l7\033\275\273\2732=b\377q\274\317@7=\330\250W\274\351\257\014=D\366K=\027(\001=n\237&=\024\n\213\274\374d\333<\256\256\337\272\214}:\275G\362^<\330~o<R\202\222<\032\371\206<\020\266\034\273\267\033B=\270zV\275\264\376\006=\364g;<\376C\314\274\004e\303<\205\275.\275\330U\'=\240,_<\306\253r<\374x4\275\273,-\275\003\035\213\273<\362b;\303\357!\275E\256\000\274s\005\270\274\252\014j\274\324\326#\275\263\367\361\274\344&*=\010\256\354;\177\226\337\274\256KU=Q)\271\274\354\336\225\274\373\375\234<\337\035?<\243\237\240\2733R\322<\007\3315=+S\346\273\342\260\235<\373\330+\275\032{\032=\2235\341<Zc\027<B\363\241\274r\310l\273\234+\323\274/\2138\274P\032\371<\323\0348<\246\347\374\274\2252\362\274p\300J=\332\321\305<\305\205M=%4\n=\231b\004\274\367X\242\274\031\337J=[\3135<j\325\014\275\273GA=\320)\234<\017\222\032=\306\214\301<]\376D=\023g\032=\000\371\337\274K1\313\274~\330\026=\367D\232\273\333\264\007\275M.\365\274\022Q\021\275\306o\265<\2273\220<\262\306N\275\303\354\217\274U\251S=\236\017G=F\270\353<q\017>=\347\035S\275\223\207\"\274e\335\021\275\'-Q=C2/<\312\030<<\nj$\274u\215\373;\356\221\305<\221\036b<\315\021K\2751\225\322<Nm\356\274\260i\320<\232N\252\273\"\337t:\247\013\343:\335\276\323\274\301\322\001=O2\363;\324]\307;n\342\027=.s$=\307Y\302:\004\177\005\275\220\206\212<\212\236\324\274\321\222\251<F\025\n=|\367\035\275*\2413\275Z4L\275\271D\352<\274\314#=o\3633=u\275\340<\231\364U=2|\n=\307\263\251<a\255 =H7\314\274\013\244\005=\304\261\r=6\034S\275\251\321\352\274\255\245\014=\n\020\t;+\210R=\333jI<8\336\000\274\031\340\235;\025b%<\315\230y<\320\000\025\274\375\232\323<\272o\366\274~\r6=\243jj:\342\217\334\274\317\3404\275KAI\274\346\323\215\274\271\010\267<`AB=\231\365,\275\234F\344\274S\236\320<X(=\274R\201\256;[06\275\200{\230<\356\264\301\273Oi\006=\311\370\346\274q\210V\275\355\314\363\274V\033\271:\357\312\251\274)\257^<\351\203#\275\332\2344=|J\r=\034\274&=\213k\023\275Eo\017\275g[V\275/\014\233<O>\036\275\3507)=\340\230\300\274\025\334\010=\326\202\375<\177\244\\<Ka\001=\327\306\232\274\221\314\320\274/W\300\274\356\317=\275\017+\312\274H\203u\274@\000\030=6\2360\275\200\244\360\274\026\212\273:\020\333+\275)RD=\331%\314<0.f<\337\266\343\274>7\"\275\321\327t;`Y!<\242H=\275\360th<<y\326;\332\303\010\275\275P\200\274\270)\013=<\334\311\274\260\213\245\274\336\306\002\275\261\310\033\274\351\250\223\273\201\336K\274g\254\273\273\000@=\271\t`*<\342\232\306\272\302\007T\275\330\351\006=\251.\264:%\n\024\275\275x\027\275wQ<=\231\357\233\274\315\271S=${\301\273\007\371\370</\352\030=\357B\364<\247|\367\274\032\273#\2750\2032\275\377\222\202\274\334GF\275\005g\315<~\3421\274Of2\273\016E\332\273{hH=\377\005A<\214\222\032=g\224\277\274?]3=\313T<\275\035^\256;\302t\267<\363H\021\274;\336\003\274\377|F\275\244d\262;\217?\334\274\350\315F\275\240\013(=\022\234*;^9\333<yl\036=\256\032\250\274\010t2\275c\242~:i\016@=\347\225\r\273\270\305\232<27\007\275h\351\030=\214!\004<-E\014;`\234\323\273\302y=<\310\'<\275\350\014>=\204\332N\275kx\212\272\203\022E=\233&G;\020H\251<\3479e\2740\247\251\274\034\217%\275F\005\036\275\345\217/\273%\3264\2750\2519\275\351C4\275\260\254\350< 0\254<!\310\314<\273v3=\347\013\345<\n\001S=\257\305\241;1\360\005\275\214\313G\273\247PD=\022o\226<\010\335\006=K T=\350\370\014\275\217(\n\275\352.\355<\245\314\363<\214\004\275\272\217<\241\272\212<T\275:\210W<\3623\032=\224\340\327<\304\334r\2743|\360\274\201\237K=b x\274}q\034\275]%M=y\230\t=6\216@=B*\021=\345\334\226<\006\317l;\003q\027\2750A\236<\027\212\236<pd\260<\376\"5=\331\2322\275\036\326@\275\037U\216<\272Ve\273\361\372\226<\353s\034=\005+\034\275\366K\026\275d\225\315\274\n\020\372:\010\332\"=\235+\001<\324\010\367\274\2649U=\327\033F\275\310\234\244;\033I\346\274\301\'\351;\242\307\247<\305g\005=\214\262\265<\031\031,=\005\031.\273\220\235\177;CK\224<\325\377\303\274\377~\373\273\365\306\021=\001\3269=\356\201\016\275\321b*=\2706\202;\301\314\266\274\002;\223<\345\261\021=\321];\275\337\010\331<\243yW=\221\235\237\274\246\200\242\273\374\255\033=\226jE\275\201\233];\372\231\364\274\251\343\257;\312\265\226\274a\315\036\2750]1=\200\262\030<,b\010=\026\330\343\274\374\'[<\273L\030=0ET=\021\371#\275\346\001O\275K\335\010=\356\017^\274\rG\245;\236\205?\2751F\323<W\n[\273\335\364\304\274\335\344\026\273P\200G\274?\326\322<\352\266v\274\260\271\022=3\030\036=\320\323j<\002=D\275\nZ(=\341/\367\274\264X\304\274=\307i\274\255\204\270<\032\332\021=n\022\255\274\236[\205<I\306\300\272!\2346\27462\264<|;\374\274n\370V\275\r\343\014=:J9=\251\026H\274\342\026\262\273\030\277K=rX-\274]\331\004\274cu\n\275j\2470=\237\311\200\274\213Y\032=\002F\n\275\2341\272<R\007\341<\006\306\235<\314\202$\275[{M\275\315\025\276<\2276(\274z=Q=\033\367\312<A\370C;\004X\t=\354\375d\274,\233\205\274\346\277\325<Ga\r\275\320\027?\275\007\032\265<\335\000:=\365\031\005\274\26650=Bx\321<\177\003}<,\207U\275\237\214\027\275\215\034\026\275Fp-<}\337\241<d\323t\273\027\230\024=\243\035\302<<{\213;\315\334B=\204\337\376\274Z\376\031=\257\264\222\273\024\221G\275\220\275x<^\264:\275\210\203s;)\231i\274\367\3377=\'3\276:\233M\032=\346\3052;M\227\240\274\277\211z\272\030\307\315\274\310|,<\305ak\274\211\321\021\275EU\203<O\307\354\274\'B\352\274\327\024:=LM0=&\024;=\007\307\351<\262\337*\273\365YT=\357\245\375\274\'K\311\274W\021\"=Yn\304<P\376,=8\005\n=\2461\273\273Ub\373<\024b\370<\246\273R\275\235\242(=)\016(=\013\354\t=\357;\031\275sN\217<\222u\000=\273sQ=,-\021=\252\010\\\274\226\357\255\271K\353\257\2740A\212\273\035\215\004\274\310\325B\275k}\347<\232\211\216\274\267\027\013\275\003\227\347;\024I\242<\313\376\236<\324\022D=l\021\375\274\244\352\275\273\260=\010<}\255\001\275\244\350W\274\226O\226\274KP\016=I\247&<|\274\243\274\354\257\300\272\000N\365:w,|\274Rk\026=O.\024\274u\370Y;l\266\006<\370O,\275\\0W\275\003\334k<J\005\262<\330\n5=\032\207\352<vG:\275\021\301P\275\233~\241<t\204v<\332(\315\274\277\030+\274\024\320\355<\231\235R=\333\346\333<-\320\216;,|\017=N\232B\275\305O\272<\005\214\355\274\274\317\256<\266\035A=M\027\004\272\267 ?\275\317\030\223<\324d\252<\031\351\232\274<s\337<\'D*\274\265x\277\274\353\242\246<\261o$\275\204\261\005=\342\331?\274c\231K=+U\324<\333=E:\276jL\275\000\266@\275=\316W<[\245Y<\346\220\312\274\021\326i\274\307I\361\274C\340\307\274\303\330\037\275\335.Q\2756\261\020\272\"\257V<\214\274\330<\371\255\240<\207\321\002\275\036\321>\274\307i\371\274\"\256\330\274\007\346A\275\003\330\030=*\026\256<O\233w\274\3104\023\274>+\222<3n\271<Z\013O=\000[\312<\243_q<{\200\343;_\361\303<S\305O\275:\247\r\275\276\006\276:\322&%\275\237\244:\274F\005\3639\254A\344\274aN\024=\334\203\372\273?!\023==\266\021\275\212^\365<\030\305\023\275c\307\021=\326a\264<\307Bc<\004uw\274&4I\275\305[\365\274\322\356\204<\276\372\022=\231\355\234\274\006\017\007\275y{\256\274\326\004#<\350\230B<^\356W=\331\335H\275\325T\306;\0331\037\275\005K\222<\223=\006\275z\341\267\274Y\213\220\274\345\226\"=m9\242<i%\361\273\3203\377<a\331L=\332\254V=a\004\260<\207\306&=\236\346 \275\224\016\304\274\245\r,\275\204\234G=\251\210\213\274\360\364J;Kl\354<\374\032\371\274\226\027R=\3619:=\030r\023\273na\327\274\362\326\316\274\033;\333\274^2\334\274e\231\336\274k\3068=\354\300i\272\257\'\032=\000B:=F\342\007=\241\374T\275n\212\367\274\317/J\275\232\241\023=-&$=\272S\030\275\026\031\252\274a\202\240\273*\001\370<\333\344\010\275b\014\262\274\0178\203\274\303k\243\274\010t\330<\276\332\021=\370z\003=\334FF=\215\202e<\2316\224\272y\226/=\355\333\377\274\330tQ<f#D\275K\315_\274\345\205\n<\3332Q\275C\343g\274\224rp\273c7\300\274\034lP<\237\260\347;\307+\334\273\010IJ;\234\247\000\275\203\253x<z\346\271\272\022`\305<e\337\016=\314\277\023=\214\001\240\273\177M\033=\271\267V\274\251\360\234\273\352E\022=\330e\353:T\213L=\256\023\377\274#O\345\274s\032K;;\302 <\2533V=\376\246\215;0\230\215<C\'\022\2754\2310=\307(\353<\224\236\014=\213\247V=s\020\017\275!5$\274\370k\216<\223\321c<\311\212R=x\256\r=i]/=\375\3614=\377\021\374\274\232\2329\275$\2168\275\212\037\031=\312\314\262<\316\r\215\272\037\300(=>\311\370\274:Nu\274sy\207<\027\227.;,\267\373<\322\031\372<\025\362\002\275\354\372\"=\0272\261\2744x\243\273/7B=\3031\r\275U\2024\273\373\273\342<^s\205<Z\322\021\27507#\275@YS\273\253\t\212<E\202~;\177C\004=5\0279\2735\264\246\272\255\3402=\332\347\247\274\345\3766\275@\216\334<\027\363\255\274|\206\023=>\265K=\225o,\275\'\236(\273A\2556\2751\242\222:\n\343\t\274\263\303\200<c\">=\333--\275e\211\364\274l\331s\274r+\361<K\204k9W\027&=?\t\333<\313\373\361\274\217\211\035=\003\212\241\274\237\201\345\274/\376\332<\242\266\000=f7@\275M\354L=\014o\213<Fl\360\273\3169\343\274N.\264\273\367\334\344<\271ss\273\303/F\275x\020\367<\266\316\246\2735N\341:.c;=\222\034|\274\222r\'=d\230\"=\260Ln<\236b\034\275\304*\302\274taG==\242&<\204\210%=\347q\257\274b\220y<\233@:=\255\202#\275\0036\202\273Q\013%=&\223\303\274t*G\275k\310\022\275\332\031\214<\367\325A\275\263\260\"\273\361\033%\275\276\315\214\273\204\250\314\274\212\314Q=\245\310\010\273\217\350\211<m\225(=o\330\343\272<H\376<\004\211\023\275\334\264\212\273\303U\245<\302\356{\27420\021=)\1774=\"\216\220\274\035Z\223<\325ZJ\275N\004\022\274\204b\r=\241\033Y<\003\211\036=\033.\376\273\035\021V\275\ra\320\274\371\213\230<\234\203\306\273n\317\310;W\311A\273\032\356K\275\370\022@\275\331\361==Y\307\205<\304\317\263<\267bD\275N+D=\350n\201<\021/\255\274\0316\034=\235\256\355\271F\372\021;x\2431\275\004\322\362\274\327\303==\315\253!\275\326\241\243<!\023[<\377 7\275\320c\344<\3454\243<\234\026;\274\373\214\031<|\202H=z\222\343;7-1=C\250\372\274\304\020\005=\013p+;\333\242\351\271\373\267\026\2759\360\200<\221\242e\2740g\336<\001\302&\275\022\227\213<4\005\013\275\254\370\"\272 E6\275~\213\032=@\321=<\371x\225;e3\257<j\327\212\273\360\026\";\244RT=\322c\256<\022\244\200<i\223\002=A\3750\275STP=PC\021\275\224\000Q<\351\345\330\274\'p\n=\316\217\007\275\345U%=\354\021\007\275\247l\215;!\211\301;%\313\000=\237\n|\274pHh\274\236\230W\273\336\312I;\276\231=\275\0006M=\222\177s\274e\300\253\274\021\307\017;\335\254\037\275zG\000=|\0328\275\217\252=\275\203\020\037=\256\273z<\036\370\352<+PI=nH1\275jb\005\275o\270\252\274i\336\213<\325`[<\017\0236=\030\207\307;5\352F\275\202\230A;H\001\200\274\334\351\001<\276`\036\274F\355J\275\034\020\252\274\214\324\034=b\350{<2\372\020\275,\262\370\274xSD\275K\316S\275\005e@=\005\025M=\361o\374:{r\345\274Gc\367<A\341v<\005}\007=\373\n`\274_Z\260\274XCU;\022\236.\275\350x$=wZD\275\373TL\275\020:f<\223\355U\275\342\267\"=\322\230\334<\245CJ\275-\311\226<;\320\266\274\363\r\226<\233\327\005\273\276\376\316<:\307\022\275\303\267G=\264&3=\345\rI\275\213\036\002=\277\345\341;\274\201\230;>\230\222\274Q\251t\274\001>\006<eP\254<R!\005=\367rJ\274wj\236<AP\204<\010\240\016<?R.=\035\244\306<\n\272\204\272\373\362\005=\370\211(=\036!\217\274k\345\035\275\263~\304\273\362\334\257<Nt\360\274\261B?\275_\321\235<\3449\313<\342A\275<b\263\243\274\220\1771=\216\310x<\344\2375=\363\313%\275`t==u\231\t\274\372\006\300<\007\317E=\262~r<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\001\346)\274Ee\215<\314\2110\274\24351\275\200\267\031=\023\252-;\214!1<\333w\322\274\354*\275\274\222\232\272\274L\370\211<\372(:=\377Z\021\272\270\006\327<\033\372\010=\267\366\267\274\270\355\020\275GW2\275\214Y\317\274G]!=\256\264\225\274{\315A=\217\311\324\273\037U\356;\336\003\337;\022\336\035\275P\321\013=t\203X=\014\006\200\274p\363(=`\016\365<[\357$=\\\252r<e\254\252\274\254\023\017<\322\376,\275\320c\317<\002\225\016=\256e\366;@\246<=G\374<\275\330\267F=rK\270\273\242#;\275)Q=\275I\352\225<\362I3=<\323\031=R\200\344\274\371\025\033=h_\354\2742\273\036=,\231!\275\004\030\000=\254\031J\275\000\341#\275\236\250\316<\226$ \275\214\332+\275oZ\301\274\024Nf\274A~\036<\303>S=N\354N\274\025\265\256;9\376\014<\317\031\347\274f\236G=\337O\360\274\222$\007\275h\037E\272\017\355\226\274\247\235\250\274\303[+\274\230-\334;NN\371<W\216\325\274\335\021\252<\301\3233=\nj \274Z[\333\273\255&\007\275\010J\342\273\003\325y\274n \r=M\263\220\273\265Z\207\274\270\016\032\275}\037K=\242c%=\223\366G\275\035\330`\274\226\026M\275!cJ;\034l\271<\301\3562=\034\316O\274U\240\265<\306\031\347<?-W\275\213;\304\274;-\267\274g\267!\275\010\\:=\225\356 =8\341\350\273\301\2346=\007,\223\274-\354\035\275\332V9\275\353\300V\275\324\333W=\204\3521\275^N\347\274\206,<\275H\002\222\274KDV\275\266;W\274\353\230\311;\023\274\023=]\214\334<\224\253\316\2746e\335<7\344\345<p[\005=8\024\020\275x2\343<e]\363\274\3031\r\275\321P\250<A5a\274\303r\356<\2530\016\274\222\271\034\275E\211*\275\372\317\036=\037A\276<\341)1\275\240\363,=\376\212W=\322\353\312\274\341.\236\273\345*\214<0\251a<)T-\274\246\372\242<\354\220\344;\007%\260\274\375\302I=\337\004s<\001X\006=\306\326I\275x\026Q<\004G;\275w\005\365:\271\252\337\274\2326\320<\324\255+=\304\2063\274R\353G\275\331h\342\274\342L6\275D\245\014\275\222N\215<\274\000\013=\361\3361=\017q$\273\000\010\033=\312\325/<)\214\271\274\333\256\301;\n6E<\367F\377\274\023\335\370\273Dn8=l\315\226<\244^S<\373,\221<\332\201\260;\366\260\032=\177\303\035=\027\207h\274\372)\261<\236\313I\275\362\244\020\275\226\337\315;\336\2759\275\371\007V<\363\341\2419Ih\273\274\272\3056\2751\223\204<\272|z<\304\363A<mo\302<+\013\315\273N?#=?\271\234<\266\3613\275\024u\247\274\305\205\034=A\021\207<\n\034I=&\271\333\274\226\2322\275lw\262\274S\035j<\374i\310<\203)9<zBX\274~\321\330\274\201\215T=\255\317\232<\353\177\213<\223\221R\275\351\235\352\274\353\036\240<2\002 ;\211_\'\2747\020\036=\026BW=\307\376}<\344\3207\275\n_+<y\226\240\274;-C\273A;\023;:R\330<`\007\376;Ve\265\274\202_\314\274n\031-=\375HV=S|\244\274RW2\275\203\321:\275x\324\035=\336h\223\274\376\236D=\331\000-\274\377\333\365<\353\237\277\274\340\222\n\275\321k(=~x\302:\374W\210\274\324\300.\274\021\226t\274\345z\3429\240\206V=\254lR\275\t\363\350\274;\347;=O\3162\274Kd,=\257.)=)\371)=\330\337\261:sZK\274\362\300\037=g\224\323;v\231\362<\251\226\202\274\304^\243<\257\372 <Q\217\010\275S\033\001=\005\001\'\275\213#\302<\351\234-\275*Z\361<\314~\001\273q\241 \275\237_\376<\367rV\274n\330\336<le\021\275l\361J\275\257\272\315\274\2401\273\274\013\315\240<W\343n<\r\2374=\007p\023=E\223\216\273\234s\361<\325\306:\275\233\333g\2741Yj<\220e&=\034KU\274\274av<\250\267\272\271\031\215\243;\375\346\322;\263|\262;\261`A=\3546\377\274k\302!=\265\352\215\273\023$\244\271@\026\032=j \004\275g\364x<\255\353\025=h\255F=\245\203\222\273\262\220`\274Cj\255\274F-U<=\367F\275\304V\315;I\314\207<\010\335`\274\023\235\336;\362FD\275\036\215I\275A[\251<yS6=\314Z\241\274\021\253A\275\352\023\252\273\223\340\030=\211p\r<f6\246<\244\033\274<RZ\204<\'\357\364<\370\346,=\022\366O\275\227w\024\275\332\250/\275ZbS=\010\344~<\023\350\032\274FD \274\322\353\013\275\000R\032=\372\304\341<\226$\247\274\\\177\"\275\314\\\26596T>=\304{\r\275\t\035><W\223\274<\317\200\315\2741\305\014=wHA=$}\372;bYN\275\375\213\312<\233\267\212<\231\032\260\272d\371\203\274V\0314\275\016w\350<R\325m\274\326C\273\274\334\223\360\274(\3639=E%\243<0\2074=X\201\203;\241uM=\244\324\273\272\017\214\004=CF\264\274\t\207\326<\031\267\357<\311\036\341\274Y\3365<Z\356\032\275\341\202\314<\243sf<\247?\002\275\360j8=d\350\364\272\356\013\034\275\0171\217:\376\3763=Gf0\275]\363\3259G\243P=\301 2<*D\003=\327\353\257<\210\021J=+\357\"\275\322\000\341<\\\243\020<\226)y\274A#\255\274\277(\371\274\023K\024=\237\355\263\272\340|\256\273\341\305\362<!\337\t=_\231R=`~D\275-\337\221<\331\352?\274cH\003\273\311\367*=\371\013A;rJ\220\274$hI=\024\331H\275k\371T<u\371\034\275-\257\352\274a\277(\275W\023F\275a\216\023=|\255V=3\020\255<{n\035\275\njh:Oo\327<\231\371\314\274\271\305:<\243\310@=O\\+;\"\257\013<\247\237\004<T\272}\274\373\r\261\274GA\377\274\221I\250;\306`\020\275\252bI\275\316\362\362\274\004OI<\230\003}<\326\002I=Gr\360\273PwK\275\006\227I\274\342n\003\275\016d;\272\356e\006\273\3349\361;\206\235.=\350w)\275\"\230\252\274?6\027\274\252\035C\275E\037\\\274\241\225\244\274#\343P\275\367c<=g;\316<\353\215\217<\r\373\365:\301\333\001\275\225:\025<\244\235\032={\0358=Ql\\<\310d\027\275\313\266O=y\016&=\261\2133=\027\033\005\275n\260-=\020k\001=\204a\264<\r\345+\275\330\010\033=\226\221\240<\233\233\232<0\273J\275\250\342R=r\306\001\275\024\027\222:\267\253A\275\003^\340\274\212\3024=\022\203\245\274\016\357\266\274\306\035\206;\200\341?\275Y\277\313\274\360\2523=\014T\313\274\013u\344\274\226\200\003\275(\372\215\273\263\363Q=\364\312F=S\353I=*\224E\274_qK=\307?n\2749\200\275\271Ps\016\275\367\206=\275(nP=!7l\274uu\246<\361\315f<W\270\014\275\305\222\035=&x\020\275\347\377\323\274E&\002\275 \337\031=|9+\275\342\314,=@\233\336\273+\033a\272NMO\275\0368\370\274\'kE\275\021\216*=\256\n\'=Q\312\"\275\256\037\006\275\242F\n=D!\203<\361\322\260\274\257\205\370\274\0257;=\033\332V\274\277R\364;\310$C\275\221\031U\275+A =\265M\221\274\004\004\n\275\013|9\275W0\217<\231sB=\255BS=\337cL=e\3207\273\341\034W=]H6\275\245VX\275\234g\234\274c\027v\273\257\201\305\274\310\226n<\202\303\031=s\374\036\275|\311\255\274\275\016\036\275\257W2=\373>.<\241D\213\274\336%W<\013\006\246\274V\363\261\274\214)\346\272\212\341\000=\027\242\256;\302\366\026=\"\313\303\274N]\022=\255\273\264\274\342\n\023\275\202-\342\274(G~\273\256\032G<\206\361\014\275\337\3006\2753e\035=\024\374Y\273\234\036\006\274~\006 \275u\247f\274\354I\266<}-\222\274\360l\026=W\201D\275\2050\003\274\304\007$=\035\366\002=\212\224K<\036\310\332\274\274\334G;\"G\253;\246\207\r\275\026\303?=k\352\331<\000\370\232<sO\014=\235\214\275\274\326\243\037\275X\202J\274D\230\272<:\021w\274\271*\033\275P\272\267\274\312\345\n=\244\317I<\357|\235;\257Y\360\274k[\221<N(,\275\335`4=\366\026\002\275\277\324D\274\306\3431\275J\247I=t\234>\274\220$c;\n\251E\275tl\302\273/\273*=\234\305\237<qGy\274\267\303\272\274\002\265\034\275\334\351^\274\321\205F=P\300$;+\343\027<\376\371\000\275;nR\2756A\263\273KLj<q\214\255\274\305\350B\275?-\026\2748\311\370;\272DR\274\243C\235;AoL\272\010[F<\202\206/:{\r\223;^\230~\274\333\022\260<\216\3678\275\021\240\014=\337^6\275\"-\027=3<\007\275?\2675\275\361\001/=s}\330<g\351\r=A\316\371<\205\202)<\361\1775\273;\2314=\216&\240<\206\033\255<\261\3425\274;]\324<\202\010>=\021\351\007<4\206T=:6\344\274\221\306\\\274Hf3=\024\226\n=s\036\275<\217\312?=\010\312\317:]tQ=T\215\t=\254\263?;\276@\275\273\313z\017\274I\253\226\274#>\261\273uQA\274\314\254\206\274\035\251%\274?\217\334<g\3364\275|\340\022\275\212\307\001\275\232\302\022=\334\364\001<\206\264\"<J\224\013;\254\005>\275\014\016+\275\317\2120\271\201\244\203<\304\022%=*\276:=\017\264\251<\364{\032=\322\232#\275\373R\267<\325\247\026=\244\313\t\275\333\372\025=\223\337\263\273X\274\307\274\335R&=\317\342\204<\366\311\352\274\006\034\247<B\271\207\274\201\243\214\274\350\022\017=\\l\001\275\022\344\333\274\222\227\234\274kg\261<\301~\352<&\360$<\213\0018=C`\357\274`(a<U\213)=l\021/=\202f=\275\240\235,=H@,\275YsK=9\351F\274z7\014\275\250HR\275\334c\002\274\010\2316\2753\373(\275\330\314\252;\3346l\2743>\352\274\267`V\274\251\036\017\275xb\014=\262\206\001\275\317i:=\000\222\331\274\211\321D=\247\377f;\220f\022;\314\355\323<\324\335!\275\224\266\200\274\354\277\000=\226\210\210;\370\307\273\274\036\024\351;\031\203,\275\034N\003\275(\2213\275,\022\"=\353!F\275\2533\274;\203\332\035\274\311F\020\275\230\r3=%\322\312<\221\316\347\273\377\244\035\274\376\262\025\275B\014R\275\302\247[\273+\263\236\274S\363\266\274\005M\333<\323f\025\275\021\234H=g\271-\275\035PH<6\021W\275\246\332\342<\317\211L\275V4\222<\312\232\022\275\215\324L\275\326\023\305\273[\336\031=\211\304\020\275\310z\212\274s\261Q\275\023]G\274\002kD=\315X\333\273\253\242\026=:\202D\275j\205\311<\031L\331\274\356\036\232\274\367`\355\273\377\315c;\235v\014<\246Kh\274\260\322V<\002\022\300\274q\307\376\274\271v\334<\364;W<\030\2520;o\251\325<n\341u<\277\346\002=\322H\003=\021\316\373\274\014\272)=]^?<O\002;\274\030\026\352<t\372\031\274L\231\013=\345\013\222\271\2757S\275\007\256\220\274\362<\346:\305\244\257<\204\376;\274\033\326\024\274nzC:\013\364S<\2665p<V\007\354\274\033B\200<1\267W=`\3167=\201\003\216\274\306\265\023=\r\265,\275\276\021\305<U\2337=8\222+\275\335\326=\275\272v\213<E\201\030=\223yD\275\020F =v\262\256\274\334\321\277\273\024\207\002< \376\260\274\256\222P=\230\366(:gIG\275\300=L\275M\363\275\273A\223\026<V\262\327\274M|\360<5\345G\2753\225\355\274*(U=X8\241\2744\027\014\275\"\0105\275\255\026\027=\336\352!\275\244d\275<p\276\345\272\321|\267:!\025\242\273D\247\216\274_*\313\272\303|\244<?\371J<\033\307\364<\307\'\316\274]\335D\275\020\314\023;\353R\225;D\302\373<r\271\031\275\312\376X<\275dW=\350\2648\275\207V\017\275@\373\025\275\3308P\274\273kI\275\241I\370\273\217e*\275z\352\262\274hh\362\2735W\005\273hz\035=\312n\253;\227\022:\273\234v\330<\003wQ\2747\"\030=-\2166=\335?P\274\300\241\005=\366]\036=\020\347\315;\214\373S\275\343R\316<EU\205<T\026\313<\3527N\2746\2316=s\031\r\274\262\331\224\274\332\002\240<1\242H<\327\266\026\275\032Z\237\274\221=\216\274\344\244$=\232\355\277<\263E`<!\325\310<,;/=\013\376\265<\232\206\215;\310E?\275\324\252\013\275\300\303\002\275\324(\020=\204\003\301\274K\325\247;\250m\331\272$U\372\274!\335\304;\340\335\031;_t\321\274pM\301<\'+\301\273d\370\014\275p\207,=\rs\376\274;;\252;?~\020\275\303\260\177;D\303N\275\\\264\371<\232Y\354\273\036\0006=\032c+\275s\207P\274@\370L\275\344H\001\275\325\314.=\031\342\301<\206n\337\274\264\031\323\274\2147\240<1\0004=\006\375\010=\266#g<\317\361J\275\376\3175=\343j@\275o\3553\275o\356Y\272fQ\362\274\340s-=\245\tR\275\204\331\027=\036A\343<\207\306*\275\034\177\231\274}\223!=\327\3717<\267\020R\275+\225\014;C*\337;\277d\325\274\263\354v\274\216\032=\275\264\327\200<\210\371(=\251\360g\273a\252\021\275\005\352M<\303)\030\275\262\213O=\027\375\255<\271\2652=\277\260\035\275\036\243\315\274?\037\245<N9M\275DP!\275\005J\010\273\313>\207< \001\351<\350\263*=Gf\212;|\377\022<\'J\000<\3224\333\274\036\241S;\326\005V=<\246\257<Hi\300\274dY\331<\263\336S=\327\210\210\274cy7<RW3=\303\207r\274\301\312Q=\221\326=\275.m\177\274\010\230z<xg\004=\301\005\255<\31499\274\030\334\265<\216\013\n=[N\256<8\375\313\274\256_\237<\273\032J=}VX=\231\030\223<\224\251\366<fA\342;\234\013&=\036t,=\275\204 =KV==e\3308\275#\265\005;E\246\002=\035P\324\274(G\r\275\275\'\245<\025n.\275la\352\274\226\254\357\271\257hR=\251\334\240\273A\376\255<XX\001<\253\'.\275\331T\r\275\215\365\364\274\031\351\353<\270V\033\274\304ZM=\335|o<!Y\200\274\356|\365\274\"7,=c(5=\354*=\275\271\315\305;A\3456\275\330\333)\275\240jo<,)\034=i>B\275\265-!\275\006\033\313\274\270\020\340<|\232\324;zo\215<\017\351H\272\030\033\034\274\342\022.=w\327\301\274\030@0\275!\360;\274\225\'\032\275\310\367==8D\021=\031\246\207:/\262#\275\367\246%<`s8\275\001\310\222<\017\310\233\273\330CD\275^M<\275\366\365\321\274\362\220\365<\371\303\231<\314U%=\236\376\366<\312\027\350\274\013\334\n\275\376w\360\274\276\324\343\274\333\243S=\356?-=\034\234\022\274K\355\"=\374w\216\273V\212\347\274L\214\265\274h`-\275\316\036y<\221\215n\273_\027\313<\206\233\216\274\250\277r\273\223SI<$3-\274\273\003\016:\310\216\324\274\001<\372\274\332\244\021=9\371I=\302m\361\274*\277\302<\267\246\331\274\3054\305<c\3638=\001\354\271\274S\376\014\274\371\342\212<\356!\271;\345W\243\274\227\227L<\314\354\374\274\345K\001<\206\003\025<A\252\320\274{\343\216\270\270\216P\274\322\370\032=\327t\244\274\374n\325\274W\325U=\315\370\252<\373\023\n=N\317+\275v\314N=\223\252\232\274\372\221P=\343u\010\274\220\026\306\274K\334I\274\267\254\360\274\177Yg\274\212ZI\274\230\365\034=9%\373\272[\327\014\275^\013\006=\326\\4;\nO-\274\3501\222;\322\320L=Q\026?=n\013u:(\275I=@\000\331<\256\\5=\330C\263\274~;@\275K\313\256;V\203V=\365^A\275\374\244\033\275i=\241:_\006y<\241\233\301\274\247\310\000=\000\212\226\274\224Z\"<2\365g;\357bx\274D\177\364<x/\036=\024k\020\274.\334&\275\211vR\275\3274\025\275\236<\274<\016\316f;\220K\'<9\205\204;F\020\371\274\251%\343<\014\311\335<u\234\252\274\272\025\n\275\020\262\300<_\245v<_\221\027=\'\021*\275\314G>\274\027\036\n=\017t\372;\023\207S\275\0048m\2748?(\274\224>\374<\257\270\022=\036\024O=\317\014\031;8\357?=I\027<<l:\266<\230\251\302<u\342\'\274_\242\342<V\266\303\274\226A\033\275!\203b<|\013\223<X9\206\274\002\036\031\275e|\322\274\356\026&=*\267\306;\335\036\245\274\203j(\275\366E\353;\351l\013=_f\016\275\340>\275;\\\340\232\273}\342\346<j\004\331;\247*\225\2741s\035=\272\014\200\273D|O<U\254\352;\326m\010\2754\177\240;\213\006/=\322\352\232;%\354\352<N\352\311<y\004T\275\006\365\232<,/\227<\013\333%\275\334.\354:\305S8;\200m4\275\234aa\274\267\355\263\273\257v\330<\332\345l\274\036=\211\274w\325\230\274\300;\373<\213\321.=V^!=<\257/=\352\001\007\275\006\014\316<\300\352\226<H\375\377<\023\224\246;i\247\273<\027\246\004=3PF<\366\250\340<\314pH\275_y6=x\001\002\274\306\272\276\273`\016\310\273\305\0301\275\n\036]\2743g\265\274+\274R=\233===\330\007 =`>8\275\217#\242\274\224\037\361\274\373s&=\177\re<XrV<\216rh\273\032\216\362;\020F\307\274>\017\207;hh\342<\305^)=\361!\t=+1u<\205\3264=)\000T;_VR\275\333\373\371\272s\337\310\273\305\246\014\274\177\022\037\275\024\210\222\271\023\271J\275\253g\026<\375\365\256\273\026\315F=\016\3267\275\013\3460\274\215\331\255<:\362n<\206\212\003\275\232\215W\273\334\322;=\007\356\325\2745\317\271<\235\357\214<\013>*\274\320\2244=N\032\001\275\262H\235<\334\273&=Z\274\002\275`\351\n=\260\n\367\272C\274\005<~u8=\207\2144=FtA\274\234\241?\275ul\364\274~`i\271\226U<\275C\333\337<m!C\274e\365\0169\371\324\225<7\215\265\274\002\362\323\274o`\013\275\256c\271\273\216\027U=k\366\032\275\\\253\002\275\270\332\366:M\312\035=\005S\006=\322\320L\273/\2056=`\315O=\346\240{\274\nIN\275\374\354\221<\310=\003=\234\233k<\232u\345\274R\332\007=\275\024\007\2750\021\220<\220\266\014\275S{\r=2\210\306<\225h\277\2741\204H\273c\362%\275\3269\310<+YN:\342o\306\274S>?\275\345\367M\274}\177\026=\030\202\223\274\203\317\201;k\023\036\275\235\177i;\270Z\003<`&\330<\374L\367;\303\335\336\274\205\025\355\273\326\234\200;\006\r\331\274\003\017\374<%\352\251\273p\375\364<\337g><\250\2074=\354~\005\275\017\264R\274\247m\337\274\242\032\205\273\350O\320;\226-\266\271`3T;k\222\021\275I\237\321\273\240\222\346<t\364\323\274\\xT\275\214\177\374<\247\235m\274\"8\311\274`w5<\351^\\<\356>\363;\202E\343<r\030\247<\037\277v<\342\033\331<\211\212n\274<\255\010=\374\'G\275\267\rM\275\217f\024=\264q\224<\236\342H\275tB\001=\006\304=;\234\311\010\275zk\016=`\373\006\275\014\003$<\"\304\021<\377\330\206<\021@\000\275\005\327J=I\203\252\274\267\331d9!\361Z<\345t\336\274\253\245\266\273\033r\353\274x\034\205\272\346\227\016\274\\\272\006\2749o\302<W\001\354;\311\242V\275V\2677\275\256a\331\274\024_\361\274\024v6\275:\341\002<\371!1<Jo\236;\314\354\020=y51<\263{/=\370n0=\245\3157<u\344\030=\206\256\r:\224k\003\275\222\370\363\274\036V\222<\025\210\231\274\341\260-=\200\206U\275\251\177D=\202>\310\272=\211\271\273\230\030\334<\263\274\n\275\333\023V\275>z\034=\216\262.\275\256\334/\275\3737\221<\262vM;\'7\233\274\365{\363;\013\341\244\274\n\206\227\274\001\366D\275_\340+\273H[\030\275\200x*\275\322\204y:\357\t\316\274\311oN\275\2720Q;_\346{<\016\252\031\275+\021O=\212at\272IxN\274*.\021=\306\303\035=\"\232\243;\360:\014=T\3414\274ig1\275\265*;<\210:X\275\240\020\024=\300\363\016\273\013x\326;Q7X\275P\214K=%\340\265<\252\030\311\274r\2059=\225\257\222\274\306O\214<\340t\251\273\306\037\004\273-m\253\273\023Z;\275\265:D\2754DU\275]\362\325\274>\245\374<%\020&<o=\032\275Y\nO\2753\326\262<4\361\005=U\2413<(\2204\275\367Y\341<K\324\336\273\305\302J\275\377h\316\274\232o\226<+\001\001=\022\244\024\275\005O!\275\311\212\002=K\022\307<\036\252\226\274\013P\314\274\020\277\001\275\2772\306<\n\356\313\274A=\t=\210M\330<\224\234\312\274$k\223<xh\265\274\211\373%\275\201%\334<b\267?\275\355\177\231\274B\210\031\275\007\263L\275\311H\232;\345\322\356\274!\355-=\007!5\275BCW=\216,\205\274\311\235\033=\004\230\323<\3120P\274\310\352\337<\365%\335<\232\027\251\274\207a\345\274\315!G=\317t\231\274\030\202I=\367#\023\275\222\\\255\274\203\210\\<\222`?\275]\2329\275/<N\274}\333A<\3234?\274\037\235\260\273Vt2\2755\267\376\273\032l\'\275\327\327e\273\014\207\'\275\002\202\370;\330\205\336<<%\n\275X\"\374<\354\244r:\n\201\017\275\362\221\237\274\252L\004\275\351\372\023=}\257\331\274\330\217)\275\351\224\036\275\000\255\016\275\013\030;\274f\214B\275\320\023P\274\037\242\233<\340\353\261\274\020\t\020=\031\013\032\274\202k=\275j\210;=\265\306q;>\301\322<`WO\273fU.=\201\226W<\201I\331<\033\323V\273\324\325\253;\376\254)=\020#N<\243\345\302<\\<\005={\030l<\2005\024=\375\027B<\035\371%\275\202\000*\275\342\rg<\350\016\037\273\366hm\274\302\226E=\021j?\275\257[\031<)\366\306\274\216Z\340\274\276&0\275v`\316<-\227P\275\033W \273dO|\274|\377A<9\220\310\2734G%\275\274\350\315\274\330e\333\274\177\323)=?\372\240<\321\257f<\365\242\303:\024\005?=\350\265\315<\233\322\236\274.q\312<\316\271\260<{\334~\274\270\217*=\374\275\347<q\252(=o\225\333<i\230\311;|\037\005\275y\214\213\274\344\344:\275\266\366T\273uk\317;\335\231\003<\371O\307\274\262\177\233\274\036\010N\274q\013K=g\201\354<\241\233\017\275\267\237.\274\0148I=<\341\343\2745\300\223<\211C\005\275V0\006=\216\377\025=\256!-=J\\ =\2577\260\274|\237&=\226\242\314<\370\213\247\274\013\346T<\343\232K\275\032:\2549dn\247:\265zB\275\037\210O=f}\322<\256Y\270;0\214\014=\202C\373;!\211\006\274\316\255Z\273\345\222\026\275_P\020<\032\307\233<\314\234^<\363\374\266\274\360\214C=4j\000=\216\273\377\274<z\002<2p\007\275\240\303!=`\331|<\275\226R=KJ2={$G=\3472\026=\215\261\316\2741j-=b\216\345\274@5\221\272\241X\317\273U\222\256<\340\345\007=v\351k\274]\240S\272m\312\013\275\271\357\027=\\\2171=\313.*\275\002O\260\272\305\2675=\201\201\006\275(\260\207\274G\022\003\274\363\244-=\327H\302\2734r\263;nq1\275(\224\271<{3/\275\346\030G\275\200\371>=\356\356K=\367& \275\235\373\311<\272$&\275\324\246\036=&\017\251<\247o\013<\360\003\264<\315+$\275\223U\201;\220\351\313\274>+\257\274\305X\035=$\'$\275\345\303E=\246\233\326<\273\200\034\275\000W\357\274\345\023\266<\020\244/=Hk\002\275\206qT\274\274\314:;D!\005=\224\305\314;\346\2117;*\202\200;\024\030\357\274\232z\004\275\2136=\275\274-\347\273Q\251\200\274\257\322\276<D\306>\272\231\213\034==S\r\274S2S=F\022\035=\014\024s<2\270\352<\232]O=\326\010\026=\334\250\311\274\305w\020<\3421J\2752\277\347<\370\177\231;\357\235\254\274\332\370\317\274\232\220q\272]\222\3509?\204\325\274\350u\013\275\371!\3359\350\0215=\276\255%\275\273j\331<\'\327\303<\355\021D;U&\201<\201\336L=\014\3504\275\353\251\260;Fs\342\273\035\035\215\274\235=.\275 Y\010\275\177\360R=i\002\323<\021|\224\274\377\251\304\272\336\310,=%\013,=\306x5=f\021\303\274\275\264M=k&\016\275\353t\306;%8\224<Vn\275<\327\211\356<`\330~\274\212\370\006<G\215J\275=\326M=G\246\247\274,\271F=\027\267K\272\311\232\037;\340\224\022\275g\202\245\274\027\244\356<0\3322\275\021\215\215<{\213\007=,\'B=\200\334m<k5V\275\rCL\275\305\245\036=\202C\304<\030\316\014\274\215\337\021=B\2320\274u$\003\274h!\017\275\006\333V\274\351\355)=X\207|:\346/\375\274\311\213u;n\322\010;\0054\013=\315\021K=\207\323\017=\273!\007\275\322\243J\275\320\207\307<l\254\303<1\272/=\374\305F\275\345\031\001\275\360\n8=\313\3734=\221%S=CC&\275\002^\024\275@YH\275\273\3718=\334\225N=\354c\222<1\213%=);V\275\027\224\200\274\376\314\213\274\244\206\347<k\234/\275\340f\000\275\314\302\271\274jP\334\274>H\336;\333\020\233<9&5\275\375\217\032<\271F\372<h\004\343<8^<\275\214\016\343\274-:\237\274\030\025\004=g\274\010=\345Q6\274G\014t<\030\2047<;\356I=\331\274,\275\332un;\350\014\033=\033\227-=\227\320\024\275\006\204{<>\034\004=\253TC\275\'?\001=2\025\277<J\363=\275\337\375\211\273]\216\266\2747.\023\275^\221/\275o\264*\2751o9=\023G=\275N\326\332\274~\233\013\275;\353\312\274{h\210\2726;\226\274\224\2009\275l@\335\274\243Q\270\274\3136\222\273\331\306\266\274L\212!\275\331_\273<V\241\244<+\221\r;\035\247\324\274F\314\005<\013\256\241<\227~\223<$\333W\274\"\324\335\274%i!=\370s\004<\234}\350<e\265\034=-\335t:\010\361\020=\202\312\277\274U\033\241\274\213S#=\371\206=\275\366R\357\274\205l\264<\225Q9\274+\211\020\274\350TE\275O\343\034<n\304\003\275\201\t\375<\212\236\261<h\t\000\274\264\233\256\274\260\0233\275\242\236\267<\013\270X;\373\224+=eP)\275\355\247\004=\2342\000=\221z\211<\321\235L=\035+.\2744\365\310;\225\367\"\274\275\\P\273\227m\371<W\002\357<[g0<\212\340D\275R*\313<qe\330\273\247\022O\275I\212\"=CI\n=)\276R<\231\257\332<\310F\266;\271\377<\275)\345$\275\212\344\023\275\010\300\000\275\3509\004=\334\3411=+\016\277\274\252L\000\2757\311E\275\352\234\242\274I\301\360\274\265\272\253<\361\014}<8\221<\275\317\2370=\215H\210\273/Q\006=V\246\317<\363\361\324\274\216\247\031=\3705\037\274\371\336Y\273\201\237P=\362\242A\275\223_K<J\037\'\275\277\371F\275;\373\003\275\351*3\275 \264\204:/J+\275\317\005\367<5\374?\273\313\224\016=\275\245\030\275\220)K\275\330t\306\274\275\320;=\276\026X\275+\345<\274-P\233\274\311T\213\273C\222X<\020NQ\274;\\\000=?@\025\275hyX\274\300\355\001=\330e\002<&F\361<{=-\273~\331\006=\343I9\275\323\027\026\275\222\250\362\274\004\214L=\037+\007=Q\263\365\274f\240C\275\251\262><\030g-\275\032\306==\344\367\331\274\221\213\354\274\322\344\353\273\257\371%=\234\347)\275\002\3463\275d\214\027=\325\263\005=\307{%\2751\374\000<1\000\003=\340\006\342\274`ak<b\223\r\275\r\346\255\2742V\004\275\"T\033=G\277\032<\027\372\274<\244T\327\274Z\313-\275\304\256==\306\316\327<m-\017\275\265B\272\274>\201\203<1\356\2319\206\243\267;{\t\017=\352\026\370;\027\024\377\274~{T=\027\246\354<\313\360\360\274\026\336\331\274Q\372\034\275\272\327\017\275W{-<\024\204\376\274\363f>\275^@\237\274\270\213\210;\201\264\350<\244\235\317<\257j\350<\363W\t=^\330\001=4\250\214<\321\007\204\274~\203?\275\272zP=*\265;=f8\225;\236\021\036\275!Z\351\274!\340N=\332\2131\275:\274\r\274\360P\020=\213>Z\274\260Q5<u\370\325<\372_\317<K\004V=85L\275Zr\230\274nO\006=\335\377\316\272\246\n\014\275\315\364_\272\0171\t=+\016\373<;\364\361<\331\226R=\020\2240\275m\306k<\313\330\033<\t?\'\275\235\321\037<&\220\004=SM\271<\246 K\275W0\235<\311\333\005\275\312\332\224;\326\340\335;\031\375\205\274\235\361\000\275\002R\031=\002PF\275e\367\003\275\351\367 \275\347\020\211\274\037!\025\275^B5\275\023\026V=2v\t=\317\257\252<\014f\022\274\234\333S\275*\226\325\274\010\221\241<,\226<\275\3152\307<\360+\255\274A\344\020\275+*B=t\206\200\274\245fR=\332\235\257\273\370H\007<\255O\004\275* \346;K\335I<@,\317\274\245\275\000\275\250\250\332<7$o\272\343\267,=-\205\336<\371\3576\275&\231\350<\373^(\275\261f\202\274\233a\240\274\253Q?\274\346\315\366:\\\247\026\275\327\347J\275n\267f\274*\312G=\300\235\271\274\332i\270<\214D/\275\215\337\013\275\005\'J\275\354Y\026=\272\364\036=BF\224\273\276\362\371\274\246\233\267\273\315*\017=O7Q\275X\034\236<\314\333\271\274\374j\313\273\003\350\224\274\017\215-\275{t\024=\031\247\377\2749x\372\274\027\232\364\274\225\376\225\274\346\031\022;\231\331G=\301\210\033=B\3221=.\257\366<YP\276\274\326\321\204\274.\245\016=i\313\204<.\177*\275\364\217\240\274a\313\265\274\274*\031\2753W6\275\350j\t=\213\033T\275\276N!<\232\233\036<\371\2331=.\230\367\274\026\341\340<L\3576\275\366\325$=5\374K\274\200l\347\274\347\231\263\274\036k\013\272\321\000-<7&\332\274r,\243<\330\265\232<\236\216\026\275`\305\262<Um8\275\346_\213\273\016|\022=o\033q\274\251\2659=m\0300\273\016\222m;q\215\250<\013\004\001\275\373\255)=\002\370{<\371bT;\240)\005=\305\202 =\220\003\003\275\'pL\275\003\223*=:\036C=m\266C\275\'\331\376\274Z\264\"\274\333\3723\273\377)\001=\250\230&=\350x\241<,\312\030\2753\327\241<p\037<\275<]S\274\265\356N\275g_\327;\320\302<\275RA\310<~\234r<\346\223\020=\276\332\200;\177\350\n;\227\023\364<\202\375!=1\263%=\201\264\256<\243\301\t<\005\177\030\275%\023\233<\310\3154\275Lz*<\307\314p<\242\370\324\273\331Bb\274S>\320\274\031\3633=\274,\332<\025\003\010=\270\r\n=29R<\232G\213<f\203\005<\333\312M\275\322\252P\275\267\243J\275&\261\243\274]\264\314\273}\222*\274\nD1;\362\261\302<O\371\254<j\206\003=\347\357\t\274\326\006M=\334\313F=\032)\330\274k\317N\274\347\202\202<\257bB\275v\'\366<\345zi\2740/\030=\217]\"=\221\265\247<\262\343\007=;\201\236\2745\354W=0\243\027\275\217S\021={\212W\275\001\n\202\273q@\346\273\364\330\r;\340\356O\274w\006\023=\364\316\353\273\244\333\014\275\335\266\341\274\363\343\037=Ap\214;\307\376\"\275HE\000=\323q\303\274\265kX=\036\026l\274\313\213U=~\247\210\274w\246\245<\230\364\350\274\226t\223\274~D\027=f\016Q=\357\'\033\275*\271X\274\254T/\275\030\325\374<\313z\222\274\374\2625=\234\232\364<\371\027\326<\334\014B=\227\342\t\275\344:\350;\031\235\277;\031\377\337\273^\271\201<(%\023=o\326\237:\241\235A<\3277j<41\025=oU?\275\276\205\302<q\306\222\274\262H\026=\235/\037<\337\016#\274\004\343H\274\005\373-=\232P\276<\333\220\267\274N4\224<Z\273\000<\322\330\010=b\261\374\274\250N\263<p7==D\005\307;\245\024A=\036{\260<\022\n\300\274\236f2=\250\275\234<*\261?\275\013\3048\275I\312==\222\030x<g<\311<\235\035\377\274\005T\261\273v\346\277\274W]\004\275\216sH=I\222\224\274\3724\312<\312\n \275 \324\267\274\340\030\351<-\013\350\272\025\376M=sP\002\275H\256H=\002\2615\275\010\346L\273V+\247\274\361\236\335<\333{\341\274\355=\036\275\244\206X\275K*\217\274F|\234\274?\021\356\274\346m6<\366X7\275\001i\360\274B\037\013<J\007\304<\324=,\272\364v0\275\013\366J\2742\006{\274\216\376Z\274\355\255\206<>T#\275\r\263\210\274\263\373 \275 \032-\275\3271\020\275\240O\033\275\324\334Q\275\247\257\352\274T\321\221\2743\344\336<x>\200<4L\000=G\033@=fA\032=\260Z\003=\303\231s\271\266\236\032\275\3213\343<\036\203\000=0}\031=\206m\334\274\341E\257;\321\276\355<\326\\o<\356\232\302<^p?\275L\273\216<\310\236F=B\270_;#l\222<\227\202\235<\321\272R\275)\370\024\275\251\360\207<\266~\265<\230F\203<\272>\236<\213\275\224\274\371\364<\2751\323\327<6T\315<\003\352\245;`\276\210\274{\334p<\306\300\377<=\335\261\273\252\210-=)\305\000\275\326\212\202<@\267\031:ZR\207<W|\006=\264\r?=ki\306<\254A_\271]\220\375<\324\235M=\242\037\034=j\3144\275-.\033\275\002\220T\275\225W <\355Z\336\274I\336\035\275^\021\301\274D\364\260<V\352\377<J+\022\275\317\205\250\274+\274$\274\t\002\254\274D<\016=\365\245\341;\017\246\024\275\2605/=$\327O\274\360\207\365<u?\365<\\(\002\275\324\021A\273\017\324\277<y<E\275\327\273\'\275\30066<\034C\023=-\017.=\206\265\376< \211>\274|\364j<Z\'\273<\214\211\2339\003\231\265\273\035\033C=j\177D=\023k\223\274\'+\004\274\215\006/=\315\255\016\274(\242\246\274\240\255Q\2750}\233\274z\355>=R\202(<\351\361\r=\211\010\000=}\221W<\377\327s<\255L#\275S\236\004<\243\034\315\274\025\014\351<\234\261\304\274\214\362I=R\341I\275lC+=\243\010\347\274c\357\337<\242I,=\317\354\213<\270\3154\275\035U/<[U\001\275e\265\230<\243%-=\262Z\001=L\221\377\274\206q\017\275\236\322\241<\000o\227;\245|\357<8\363\370<\302\226R=L^\323\274\010*\340\274\016\035\216<`\317\001=\023\351\033\275Qy\351<\033\202C<\346\205/\275\251T\334<\337+\035\275a\350T\274q\264\342<\023\002\343<\243H$=\246\373\224\274q\221\"\275\253A\034=2\345\317\273\212\376\023\274\305\260M=\020m?=j\257#\275>\215*\275\3169%\274\304\332%\274\001VG\275\222\220\014:\003 \223\274\232\372<<\305\005\317<w@\316;\323r.=\357`\226<\212\013\024=TB\022=\263\264N=\326\332\037\275o\304f\274\013\224^<\251)\331;\352[9\275k\3472=\033z\"\275\257\372w<+\316\334\273\217\010P\275\371\206^<\334%\023=\316\235\t\275r\2518\275x\335)\275{\025\352\274I\3270\274\342\251P\2756\016\r<\201<\211<W\037\301<7\1776<q-2;#Y\234\272\221`/={~\001\275+\340\210:\302}\360<=\324\020=\256\035&=\313\342\314<\016\361*;9\221*=Q\032\300\274\373\0073\275\326R{;\251G\363<&\245\t\275K1\036=\234s\237\274F\325/\275%\207\320<\317W\367<@\205\347\274\005j\225;R\202\373\274\345\"8\275\022.\314<\326\212^\272\363\251T\275\001gP=r\371\340\274\302\000\212<r\274\010\275`?\215\274w\362%\275\257N\324<jP\312<>1\271\273\013m\325\274L\306\t\275d\0368<u\3439\275~`\363\274\320\330\022\275\364\365c;\223\266-\275\203\262\240\274\276i==yZn\273\302U\226<\206]\027\275\250\342\230\274dn%;3\346\225\274C\300\232\274aP\217\272\344\201U<a\216\033\275\301`\305<\3533W; \3468=\246\301\257\274\200yM\275*\231Q\275Lk%=\255S\032\275\243\364$\273\316\346\372<\327\264\036<\351\366R=\327/\"=\214F\025<\316&\332\274\3274I\275\313\206\031\274C\023\314;5\237:\275?X\317\274\347\315\346<\242r\002\275\026\315\007\275\325j\316\274?)\323;\230\212\245<\311T\346:\330\236%\275\345\325\n\275\270*\270\274\211\354\321;&\023\270\273\374\251R\275\027{\021\275\250\326\310\274a6):\005\035@=\273\212\321:1\026N=8\337\001:\230Se\274uiU\275\211W\010<\250\226%=\"{7\275!\3728\275\214\350\326\274En\210\274.OW=\032\3771\275k\006\320<\037]\254<H%M=\255(0=\216s\027=\374\275\016\274\330\261\324\274\272\316\314;\300\3212\2733\n\201\274\351\036\204:\240/\360\270u\001\024;s\236D\275+\341\337<\300\3565\274\306\214\304\272f\020\351<\330\243\311\274\361\022\212<\352\033\003=\324\016H\275O\021z<g\243a<\374fQ<\211\3674\275x\353V\274@\2430\274Tw\025=\343\241U\275p;P=\033\212C\272\247\311\225<\005\365G=\027X\212\274g|S=\224\336r\273\350#l\274t\271C\275\320m\006\275e\277\004=\367\205<\274q\2076;\343x\026\275\370HA\275\366k\215;\rc0\275\236\364Q\274l\372\003\275\326\352\n\275\221J8\275\232\236R\275\023\255;=\'+5=-\275M\2757\250C=F\0318\275L\323\300\274g\026R=\246E\035=\304\211J\275\357S>\2757\375\301<yo/=\316.\216\274MHe<\326\327\253;\346^w<\346\243\344\274\260W\033=\275e\370<7\206\014=\207{\013:\362\030\222<\222\022\010\275q\010\"=H\221\275:E}*=\357\276/\275\262\034\254<\244\300\n\274\010\274\266<\nm\'<\t\314/\275b\257u\273\335\363\035<\224Z\032=#BH\2756\332N=\257\260>=\337\345\205\274\250`\275\274\277\2610\275u\037&\275\215\215\203<\335\256\241;\2358T\274\246\210Q\275iU\273<\2552\023=\244O\241\274\373Z\213\274=g\362<\000\356X<m=E\275\000\267\n\273z\027\230<\257\3118=&\032-<\236X\327\274\351SI\275r[\r\275\r?\317\273C8\306\2746\263\006=n\241E\275\004\204\t=r_T\275x\227B\275\'\225\026\275rL\377\274\372\262e\273\002\357j<\222r2=\352\3144=\326&\035=v!\320\274_]\037=f\3531\275\237\373Q=\240\002\n=:\016\273\274\025\370<\275\305\337\303<\204?4\275[\323\240<]\321<;\213\210\324\274\371o\304<\204\207\004\274>\002&=\236}\323;+\237\230<\024]\343;\021\333\010=Yp\217<o\247\246:\000\334Z\2726\263W=\265+\350<\3505\003\275\036\037\003\275\274\233\271<\347O==\263\206 \274\320=\001=p\252F=\274\363\030=\363\r\223<\222\322\245<\352\312\027\275[\270\000=\321\205\224\274=\226\315<\000\227V\273GEV\273\37233\275\204\231\202\274!\372Q\275_\213\261\274G\0104=E\271o<\264G.=UG\3719\277L\236;w\007\346<_\037*=\321\0061\275\337$\305< zB\274O\2409\275 \321\031=\24423\274q\304#=\023\361\266\274%\207\271<\344\214\204\274\230qL=W\271\334<>\321\t\273\256\223\355\274\035\000V\2745\3768= \310\263\274\255v\352<\211\232 =6\344\350\2745\355\034=\310\032\033;\250\375\243:2\232\303<{S\014\275\241c\347<+\037\312\273\325\325V=A\256C=\204\002\002=Z\3064\274\035\202I\275atV=\014e\336;\351V\257<t=>=b\032:=\315~\240\274\016\240\201\274\252\275\021\273\215@3=\325\205\277<\205\034\001=\375C\346\274\306\025\336\274\202K\266<\360.A\274,q\211\274O\307\326\273\331\377\216\274\273.\377<\224{\307\274@\206\026;\252\301W=\311\177/=\030\363A\275{\273/=\200z\202<9\202\234;\3049\307\274\334E\r=_n\315<\213\325\030<\347[+\275\310\026\344\274\331\030\323\273\220\216J=\rC\333<\352\t\'=\016\023T\275@\306S\275B4\"=z\301\261\274\223\365#\273\336q\320\273.\331\027\275\014c/\275\220\266\202\274a\235\244<C\005T=\305\207\300<\271\222\000<\374\005!<\252\'H\275\300\227M\275xY?=\013\177R\274{\357\000=J_\203<\342\370\227<\301\222V=\261 c\274\214\345E\275N\253r\273\270\344\230\273\251H\227<\r\217\r\274\330\000\306<\217\"P=\000ZW=\235\272U\275\250@a;|\013u\274\267\014\002\274\032\334\365\274j m\274\357C\001\274\217\000\342;dt-\275\341\215\001=g*.\275/\023\'\275;\'\272::\023\020\275\005\246\035=m\220\233\274\032u\271<\022\233\005=\255M\032=|`$=E\272\335<|\177\346\274\257\310\351\274\002\365\007=\017\310I=\"-\272<\256\325\021\275\227\030>\275\241\317\311\272O\001\026\275\036\265\303<\004p6\275\322bV\275\323\272\2569\010\242\305\274 \274U\275\256\350\024<\267\235\256<\034x\204<\343\314\t\275\206\304\n\275\344\3440=S_8;\242j\001\274\031\3017\275A\206\344<.\301\373\274\007\315\002=\\p\374\272\006\263|<\233\376=<\215$\254\273\207<\010\275\005\302R=j\265Q=\224\303\021=G\265\017\275\000\253J\275\315\250\240\274MI\000<\203\372\226<\325\340:=0I\236\274\022\234+\275\365\017\370<\313s\021\275<4,=\332\002\000=\307*\240\274\252Y\003;L\371\373\273\342=-<O\256\002\275\334MB=\246\354@\275\361\311}\272\271x\223<^t!=\303\342\223\274\024c\370\274\246\266\027=_\370]\274\r\022\210<\213\007)\275>\210@={\276C=h\351\207\274N\244\345<\236\030\340;\226#\033\274\260\2421=\347\235|<\257\307w\274\357\316\316<\255\222\331\274\371\265f<\337\032B\275n\025\215\274\215\217\361\274w\376\366<co\377\273\242-\246;\240\367?<n\276Q\275/\226T;x\301f<f\200f;\234\370\215\273\037/l\274n#\'\275N \021;GR\376;1\2577\275\317\350\260\274\230\261\316<\375\355I=J\303#=\344\004?\275xG\220\274\242\313N=\024\004b;[\217\357\274\211\2467<\340\241?\275!\240\002\275d\361\373\274\371\222m\274\315yS\275\302e\377<\023\222B\275\305-)\275d\0149=\337TB=\023\374\225<\307\3476\274\247\336(==\327\034\275\007X\343;RP\336\274\354\333\302\273\231\007\"\273\234\021\274\273z\254K<\322_4=\373\"#=\243\256\331;\014*Q\275\310SD<\204\031\r=\017Ul<\350\t(=\264\221p<,\325O=\031.\327\274\314R\371<*WV\275\n*\217<(\306\257\274\307j\331;\230\251\025\274e\001D\275\333\254*=\264q\202<\n{/=pe\246\274\360\010\256\273\341\016\361<\"\362C\275\362\203\006\275\344\307\033\275\363G\303<\316Y[\274\254{B\275\017\037\205<\256\357\272\274\362@<\274\243\325\314\274\014\202\313\274\205J\036\275X\244\302\273Pr?=\032\324\333\274_\355\353<\311Y\n\275\375\0326=^\370\020\274\361)?=!\024:=\213\260\023=G\305\327;\230\344\375<U\322\274<q\340\316<\222\351O=M\352\354<b\335\320\274\230\2445\275\267\325C=a\223\017\275N\022;=+\236\223\272\r\357\022\275\306\025,=\201!\350<!\207_<\244V3\275\337\306\030=\3760\247\274\266;B=\223\351\316\274\227H4=H\034\326<3E\322\273)C\010<\201\236}\274d\246\270<\260P\357<3\246/\275\210\341\246\274\325\232\310:vJ\262\274%\311\'\275\305n\235\272Y\035\225\274\002\234\023\275(\231P\274\247\246\341\274\026\256\022=z\201\213\274!i\234\274m\221\251\273\301~K=\264\023\321\274\275rZ\274\306q\031\275@\365P=.\334^<UV\233\274\303\223\006\2741\345\337\274\257\377?=\231l\232\274\273\030X\275#~\023\274\212e?==$\251<\3641\t<F~\363\274\241\244:=\034\334+\272\037\010\'\274d\303T\275\201w\356\273\366\356I\275\322\032$=\343R\342<\322\r(=n\333\333\274\277\253\016=\265\032\005\275\227t\307<\r\2635\275\204, \273\025!\361<[\374K<\311\212\361\274\331\227\220<3h.\275\035\033&\275\363!A=.\252\027\274\345>\014=\244u%<K\031&\275\377\001H;>\312I\275W\264\313<\261\303\336<\351M\013=\2040\005=]?E\275\rs\242<\242\211\261\274\311A\346<T\0246=NZ\344<\342\316\256<\n\366A\274\250\230\236\274\316\340\020=~^\016\275\203y\373\274(1\231<\\=#\275`\230T\275\354\3013=6:\026\273\347F\241<\267\t\235<0\207\003\275\230e\014\275\313\036\306\274\005\345\332\273\334\265\343<\360}A=\314\365\324\274\220(\020\275n\274\332<\350\2427\275\177\244\n=B\273\027\272\017\'\356\274\234\007\215;\316\304\\<\362C\000<\300\316\356<W\333\254<\243\266N\275+\351\200\273\257\221?\273\313\347\2408\235\'U=\2159\340<\354\037\037=\262kA\275W\2529<42C\275\325\020N\275\004\341-\275]5\350<We\364\274\342\223\211<G@\276\274\221\016\025\275i\342F\2751\023\014<0\213\033=\353\3714\275\325]S=\034\323C=\364L\254\273\3213\216\273\247\347@\274h\201\311\274f\266\217<\211\263\276:\035\024*\274\3010\237\274R\3730=\253\250\024\274\260\n\330<\325E\203<\036t\324<ICJ=\336\375L\2751\225\207\274\273\325S\275B\224u\274\315\233\233<\035?n\271\025\336\"\275\272\020<=\215RM=-\365\036=\360\357\"=\273+H=\231BL=Kp\014=\225J\370\274\257\310\n\275\376\361S\274\354d>=\210\301e<S\367\020=Z\014\335\274\220\304\254;>\027\370;\252\013\276<\210\204\207<\335b\235\273-\312\344<\034f,\274\'#\013\275\206{.\275x\236@=\221\035\264<|\261 \275\352H\342\274\007\0100=\035ZI=\222\0249=\205}r\274\360\030U<k2\'<h\277\033\275\233\262\204<\301\330\031\275\302\370\n=TkJ\274\370\252]<\300\\_<\273o$\275\255\2007=\352y\372\273K*\274<S{\247\274L\002\227\274;X1\275\027\245\2419\211\333g\274\355G\274<e\267\364\274u\262K:olW\275nI\312<\0276\311<&G3=\315\267;;u\r\272\273\n\t!\275\263\303\322\274\0347\007\275\371`\234\274\222\302\267\274AGO\275\312P-=9q\002<\031\3666=\177}M<\273q\303<]C\002\275\303MN<\014\312\222\274\335\031\037=|.9=\345\301\030<\260\177I\275QN\370<\340\360(=\343\3710=\201\235\331<\002i\020\274vj\373;\314\247\255\2746\2240\275|%4\274\307&\033=\316\3504=\271t\313\273l\360H\2758\002\004\274u\000j\274\267\351%\273\261\312V=S\303\306<\213\006#\275\205\260\340\272\366\034\334\274\253V\226<\260\324\331\274\262.Q=\023m\245<\014\177\036=_G\206\274\2371&\274r\367\372;v\236\275;\254A\023=\263 #\275\214K\032<\356\372\335<x2\003=\255\213A\2751q\n=\236 \366\274B\303%\274\372\363\247<\216\\\251\273\342\006T\274\254[P=\205\307P=Sr\374\274\300\207&=R\272\255\271D\213\241\274\344\247\034\275\252\370\020=\032\271\246\273\234\356\000=.\311\334\273\327-Q\274\t\2040=\323\256}<\254\215\026=\276\211\016\275\211\027[\274=\201>\273\300l\021\2745\254\033\275uA\027=R\341\014<v\021\337<I=\334<Sa\027\275Q\235\276<\201(<=Dl#=\232\374\302<\026\375\260\273\241j4=B:\037\275Oj\256<\\\241w<[\224\007;\016\023C\275\277\201\005\275\225\212F=\257\254==/\372\253<\372\305\010\275\020\020\"=%\2541=oV!=\3257X\275M\362\241<\034\001\014\274\313\314!\275\t\2351<\274I9=\241\026\257\274D.\216\273\0268I\275\372\203!=\023,H=\206\235?=Rc\220<\\d\330<\331\2108<\274\025E\274\250\235\243\274\335sP\275z\3241\275\224\021&\275\361c*\275>\333\007\275\246\264\247;\007\363\360\274\340<\316\274\374\242\365\274\376(\003\275\320;\340\274WC.\27537&=\2234p\2743\260N=#\263\007\275\304~\317:wC\200<\217\034\263<O+(=E<S\275\342wY\274\227\027\270<2\357\034\274|\335\227\2742ND<\254a\272;\200ZU=\330\240\260<\302\300\301\273\365\226\004\274qm&\275V\'\230\2735\007.\275\244@G\275\232\312\310\274\275\274\227<\25563=\214*\322<\251H\371\273\3007\005\275\337\030\026\274\006\320\342\273\236\327\003=\032\200\020==,\t=b/\251;\'\374E\274\366\236\002\275\017\210%=\377\310\005=X)\274<|\343\272\274\204\220\257\274*\304S<\271-H\274\302\212%\275\343G9=`\344\250\274)\372V=\263%\024\275\330\212\3269(\241\351\274\265\345U=\303\2034=\303>Z<73\032\275\313\3108\275\267\371\007\275\200S\216:\370\241\014=\362?\360\274\2413\334\274\231\334\033=c\3251\275\033\372\303\274$3\301<\327>\261<\203;\007<\365\370$=\336\244#\274\rB\005<\221\3773<\220D-\275\212\246:\275\'\255-=\265Z\232\274M\262Z<\031\216\366\274a\267j<\231?\205\274\350\210\005\275\001\1777\275\204\322\'\275\215\305\004\275\364\020\257\274\323\272\270<+1\361<\020\241\272\274>\271!\275\\\025\000\275\232|\023<\357\276\244\274=P\202<mZ\036=\017\242J=\211\250C\2742\304\365<U\233\317<\014H#==t\237\274=CJ\275\307~\306<\216D5\274|\341I\275\327w\033=s\241\374\2743S\004\274\030\255\330<\020d\t\275\276\346\311<\023\344h\274\254\342\204\274=\2525\273\275\332I\275\037\020\364:\346\361(=\034\244\272\274\360#\037=\027\260\212\274\343\3606=\204\035[\266\217\375<=\307\2353\274\325j\327\273N\" =0\303\246<\211\226\347\274\361\313\004=RP!=\202\245\225\273X\\&\275#}\334;\036\006\262\274!\3357\274(\331W=\027k\031=\302\346\227<HF,=\244\004x<\223sS;Nb\013=.\201\245\273!\275\232\274\270\0370\274\330\r\205\274j X=\210\273I:\301O}\273\353I\027\275\021[\200<\217\221\266<F\211\'=\017\344*=!\005)=\rC<\275Q^\314<\355\2514<\340\251\353\274,-\242<\335pN\275\214u$=\317\037\371<\323\267\315\274uj\370\274Z\237\214<tE\013\271\333C\312<\3737;=\342\231\030=\035r\275<\260*\r=\360\273>\274\036\246K=\345&\272<D\201\330\273s\232\341\274~\225\035<\024\247:=\024\232#\275\217G\037\275\002\202;\275\340\3201\275\027\016\214\274]\0279\275\023\025>\2754\254\257\274\024\025\n\274\215\300\032\275\007\3009\275\374\204(=\000\213.=\2647\256\274\250\246\344<~\210N\275\010\237W\2740[`<\267\273\277\274e\230\007\275\216\333&=\362\022\367<\330I\025=\0104}\274\207\307T=\214u\276<<\025\250;LFE=\264\267;=\352\361\305:\3500\241\274j\346::\245\232:\275sd[\2746\210\315<\322\234G=\264\273\330<$\351K<f4\013<a\265\004=\032nF\275\023\240\223<\364p\001=\335\214\027<\347E\213\274yi\'\275\0003\227\270$\020\321\274\027e`\273g\247\024=\327|K\275^#R\275\252K\017=\037\260\025\275m<\342\274=\265\035\275\310\266\001\275\351\246\341\273\250\317\n=&%\243<\n(\037\275\300\324!\275t\375!;Q\231\237<\220B\013:^lO\2755\251I=\375\231=\275\007E\306<*\331\345\274\027\2019=\005\217W<\n\2453=\020\267 =f\177\235;\342\371.;\232\267$=\232`\204\274\016W\014<9\306\002=\n\201|<\213\241@=\236\265,<\344\221\330\273dp\355\273\234<E\274,\001Y<\033\336\352\274oWK<\361B\000\275\371\255\232<\366T\254;\005\330\202<\366\\B\275\016\214E=\006\027\346\273\301ZJ<\315\261\276\274\347\334\255<\325/?=,#\360\272 YT\275\'\032B\273WLE<a\263\024=\023\314\020=\232\250\362;\257\313\020=\354\220\000\274\214\1779\275_\335y\274C\377\023=\341\356\003\275\230\031\212\274\357\246\361\274\330\252\363\273\330\034\213\274:\244c\274AQ\247<O\014\307<:\376=\275N\330\305\274\220\271=9@\371\007\274\345_$\273\301P\371<\177x\243<\357\r\030\275e\037m\274\203\010\316<x9\032=~m.=\t\336\000<ZZH<\003\240\005\2740\264\305<\316w\n<K\024\337\274\211\337\316\274\355\352\024=\322^:\275\025PF=N%\371<\365\'R;\332\021!<\201r\001\275\253\3321;y(R\275\021\361&<Q~ <\306S%=\253v\356<\353\231\270\274\207\346\r\274\347\266\310<Z\361\271<\313&\373<5\217\017\275$%\030\274\010\304\256\274\263C8;`\372A=c\304\273<[\030\243\273\346 \324<\333d\227\274\250\021\331<#A\322\274\366\277\205<\t\242M\275P\230?=@\212*=\320\207\005\275h\254&<9\220T=)\035E\275\004\251j<{D\014\275j\307u<v\366\034=J\026\200\272\302\034\330\274c\264;=\274I\026\275\231\225\000=mE!=G\355\020\275\265\363%\275\332\217\277<\340\017\261\274\373\205\324\274\335\212\001\275\332\266<\274\212\316>\274]{E\275\306\r\r<\276\3342\274^4r\274<\023*\275\226=\225\274\002\036\245<;I\223<1\002\037=\223\220)=wHP<]w\345<:\222\247<}* \2750\344+\275\267<E\273\253\003w\274Y\317\364<\252#F\274\026\243\231;\037\004&=\n\213A\275L\313F=Q\340\324<\236\036\217\2744}O=V\355\007\274\r\204#=9Py\274\005\327\303<\316\273\216\274\177:F=i>Y<_*\002\275z\2174:\362\377\341\273\300I@\274{\343+\275YY\335;\210\311f<p7C\275#\324\230\274\340\270I\275\263\333\211\274\262u\354\274\376\265\"=\252\010\360<]\245\250\273O\267y\274k\305\326<\370y3=\354\037K\274B\2125\275\201|\221<\322\334;=\253UF=\223Y7\273Cn\236\272\232\337\027=.\271\014\275\340\007\"\275P\217z\274R\3001=}\343\037=\020\021\226\274\333\256\336;\214\256#=\017\375O=\321\377\261<\346\306\361\273\223\306\013=\275\373\024=\247\rV=T\376l<\014L\026\275\242k\231\274\036\330/=\325\240!\275\203\025\301\274\304\352!\275tR\010=\323-\004\275\332\2652\275\336\2611=\003\261z\274\250G)\275f\257\265<6*\371\274\366oM\275\213\264\311</0\022\275\010/\202\274\024M?\275\312\033\356\274\256\352G<\307\253\034<\254\017%\2756Y\311\274\3718\305\272\330_\245\2746\002(=@\213!\275_\374\213\272\025\203P<\205\356P=q3\252\2740\257\354<d+\"\275j\314K=\364e\261<\3258\265\274\364lC<\340#\037\275\256\330\004\275\365,\354;db\300\274W\340\203\274\343\265A\275\377\323\024\275\034\"\005=\360\332\376\273\226\0253<;Z\347\274$\321\377\274\307\203\352\274J\335>\275,\3437<\206\"\202\274\357\031\336\274xW\002\275Zf\270<P\227\033=i\026W\275\001\331\026=\003\326K=\334\350\022=\026\245\343<\253\202\377\272\321\256\004\275\001\327B=G0\270\274\031\"\024<\245H5=\303\2109=\213\004\n\275G\276\230<M\225\222\274\314*\343\274L\366\331\274\005\230&=\377LV=0\263\005\275`/\020\275\277\342\337\274\n\346s\274\016\332\233\273N\r\237\274~\210\236\274\252c\020\275\r\313\016\275\013\033\035\275\363\335\035=bO]\274\222\035\037\275\206\3561<j\n>=\252?\004\275F\204\035\275\352\346\000\275\274R\202<+9\374\274(\312\321\274\006\253P=\327\2474\275$\273\337\274\366\355L\275P=6\275w\216\346<J\336S=z\227z<\347^F\275Z;<\275\225$\014\275t\345\363\274C\207W\274\307Ye<\367\241\261\274/J\322\274\224\302\013\275\016\321\246<\020\255t;4a;=z\022I\273\323\232\344\273\316\370\241<\035\0330=\001\016$\273\214\027\003\275\221\340\003=\357\000a<\243\037\251\273\206\266`\274\231@\262\2742j\014\275s\364\006\275\2160#\275\370j*\274\202\354\350\273\0074\276\272\254\321\240\274\325\236-\275\221y\000\275\360R\334<j\315S\274\367\201(\275R64\275>Y\261\274\240\266f\274\266\n5=\'\010\231\274Gl\"=tc\022\274\364)\350\273\3326Y<\303\256u\274\223!\\;\237\235p<\007\237\374;\301\254\201\274b\302\230\273\325\r\325<\360\261]<\265\351O\275-\255\221\274P\231M=A\341\216<wk\025<\336\2757\275Y\375\'<g2\223:\363\235\216\274\010\307\001\274\245\316h<)\342\240<\305*\003\275\355I\246\273\306\211R\272:6\355\274\24162\274U\272\254\273\t\343\007=\272Q0=\037\226\246\274d\"\321<@9\016=\371\261;\274\335\223\006=`\336A\275\025r\367<Y;\033\275\364\017\325<\367\266\262<g\316\245;H\330\342;\327\010\005\275)\260|<2U\267;\2506@=\225\312\367;`,\037=\016y\026=\210\372`:\245\3438=\335\234\t=w\372?\274B\277\020\275\267\371\006\275m\375?\275\2316 \275\256H\t\2755}6=\260,\033\275\341\214\036\275\210\030\311;\'\276\340<y\372F=/\035\214\273\003Y)<p\324/;\373gL\275\236K(\272\t\036\004\272 \0066=1_K=\244M\247\274\274\273n\273MU\305\274\310s\'\275\273\\\315<\243\375\256;\231l\007=\363G\223\274%x\230\273.\202H=\361\314\312<]gM=\247\304+\271\252\317\371\270\334\221M\275\216k\007=\030b\217\272km<=|\002\235\274\337\016\022=V\214\020\275t\227\231\274t9\031\275\337\304\177<\300[4=N~\033\274\357%\026\275\203{\311:\231\366\224;\263\244D\275\300]\326;\231\212h<-MT=\307\2018=\215\337\375\274;\005\005=X\254\000=L\023\010=\001M\227\274\240\260\343\274x\353\001\275\226\027\016\275\356\370@\275\3376\032\275\\\272\037=\337oU=\325\003\010=\253\313\221;\353U\224<jC0=\'_b<P\332=\274q\261\001\273S\252\300\274\215\326K=\025\254\207<L\300\022=xR\307\274\265P\230<T\2604\275\037\373\022\273\331\032\341\273\3331\256:\337)\003\275\350\360\256\274l-M\275Z\037\363;7n\013\275#\324o<,\330U\275\307\010\024\275\226*\367\274~?\002\275 /\020\275\265?)<S\203\346:\242\363w; \330K\2754(\"=\246\334w\270\001\307!=\014\3776=\355H\n\275*\227\351<_b\275\274\317>\354\274\276)1<R9\277<xSM=u\256\022;M\3443=\006\376\021=(\352/;\307\275I=s\243G\275\006\244L\275f\357\241\273\334\010\223\274(\351.=ax\313<\323R>=6p\001\274\202\201$\275\267\250u;\365\030G=0j\317\273\362\2134\275%\002\035\275\303\251P:\3268\344<\032\230\354<]R;=\263j\341\274\255\352\027=n\350\240\273\323.\201;\027{\324<\275X0\274\032\243\006\275l_V=\356D\335\274\355\273\343;\177~ \275<s\"\275\214\250\275\274U\263\272<\324Y\n=Y\2420\275\007\366J\275\376\306\"<\205y7\275\361\203\273<f\374\014\275\211p\016\275Qt\233<\330\303\225<\035:(=\261g\003=-5\341;\010\361;=>\225U=\212\267=\273\331\217\013=.\2141=\307!B\273X[<=!\251\307<\371\232\303<\002\212\002=\000\246\332;\330\277\000=j9W=\'\242J\275\274-\344\274\314\367\034=\320\250\004\272\362\254\355\271iS\251\274\356\342\357<\352\t&=\312\324\215\272(\361\005=\037P\314<6\327\t\275\306\340%\275\304.y<\241\212Q=\036\3451\275\336:\366\274Il@\275\006\250\220\274\3169i\2740\340l<y\035V=\373~\236\274C\342R;\026\030\360\274s\221@=\355\320\037=\366\364\262<\345\255\024\275_4\375;\314\267\213<h\344r\274]\r\205\272\204i\315\274tjW\275\213a(\274\237j\275<z\200c\274\n\366+\275|J3\275hm\337<\317v\351<\033N\027\274\267z\301\274\222v\341\274[\225&\275\351z\340<\330\313\253\274\207\355\231;K\006\337\274\224\301\363<Xz\313\274\317\225=\274U\253\256<5s6<c\317\002<\202\273<=\371\033\017=\356jM=W\242;\274]\341|\274\376\224I=\305\033X\275G\330\027=9J\003\275\361&\226\273\202\277\362\274\362\006,\275i\3046\275nL\375<\254\263\035=\210\247!\275\0272i;\27423\275F@%=&z\336<\240`\235;\312h\254\274\207\201J<\206\201w;\2775 \275\201M\320\274\341\024@\2723\2430\275\035rS\275:\330\267;<<\362<\301..<D\235L\275\273\266\310\274\340x\3009\367\nW=\030\245\320;6\034==\354\261k\274t\002\037=\331%\337\274b0X=\223\270\021\275o\225,\275\325\276#=\362\013\312;Mb\314;$\rO\274\307Ob\273\014\335\005\275\370\037S=Z\304u<\344\322t<b\373\006\273\321\316\364\274\316\266\004<C]\335\273\'\227\305<\002\r\254<b+\213<\034\310<<\360}<=\322\031\356<\272\355\210;E\023\252\274\256fO=\2645V\275\3753\330;\2061\221\274\2075}<A\241\251<\343\231\014=J.\000=V\036\216\272v\254E=\341\0130=\325\202A=\020\233%=\232:\215<\243e\323\274/\224S=\355\027\3237\312L#\275xz\264<\312\332r<\213\3515\275t{ \275r\351\005=\353\374$=8\255\225\274\n\335\251\274\222\262\003<\310\353\023\275\360\3444\274\274\310\303<3\203\036\274\"g\330<\3150\004\275_\227\016=\223Q\027\275\014z\363\274\031M\'<o\377\222<\315\317\006\275\025S\207<\321f\352;\225\326\214\274\300J\276\274m\033\006=d\256\002\275U\275\327<\243\341\"\275\362\"\220<\333i%\2754\305\252\274\037~\220;\252\305q\274\222\000\257\273\262!\033=\036\312;\275\202\234\342<E\354\271\274\240\216B\274t\360\034<\365=\376\274I \374\273\377\303C\275\332v\006=D\311D\275\252\203;\274j\277\203\274\260\2643=\275kL\274\367\302\000\273\356Q\225\274]\275;=C@\001\275\345\334\010=R\250\366\273\024\026\263\274\252\005\003\275*\251\212\274\035\247\220<\334\254\013\275)\366=\275\235&=\273\0365\3229\314\206\331<\022$T=\375\016D=\tk\337\274\246\004\013\274eP\210\274\201\245\004;,\352&=x\027\352\274\372\256\241\274\033\230\313<\345\337\311;pV\366\274\311\310;=h\207Q\275\377\260h\274\362\356\335\274\204\313\201\274n\202Q=\375\221\252<\277\3155\274\342\265\315<\032\344l\274\336\354S\275i\247\366<\305)O\275\220\023\013\273\t\2350\275@\252\013<\312\234s\2741\203\266\274w\274\031\275Y\363\317\2742\340\311\274\221\236\003<~\217\006=W\264\343<`-\220<\367\244\346<\253\016\352\274\"\255\\<3=F=\013\316\275\274P\305\224<hH!< \211\372<\305\265\251\273c0\204\273\202E\r=\316\315\341\2720\215\005;\014\301\023\275\212L=;\250\364\312<\336<%\274E/z;\345\203A\275\331\363]\273\212\255\352\274\374\235\032=\207\214\300<\nx\017=\267\365\007\275\201\2728=d\244\016=\334\253!=\027\335\375\273\364\000\026\272#\016\311\274\323>(\275Ou\027=\210\021\267\273\n}U<#9\207< X\321\274\373\014\024<\376S!=C!\013\275\272\267~;EY\271\274\212\3059=i4 \275\353T\371<\204\212\205\274r\357M=\260mI\275\264^C=\006vK\274\360\201\272<it7\274\217\237\002=\257j\336<I\032\317<\354\377\360<g\272\344\273\317\022\221\274M\343\244\274\366\330\340\273:\250.=\357\036\303;@\235\245\273j\371\313\272\333\327F<\206\342O<<u\037\275X\001-<U\000X\275\\\270\370<D4\000\275\313\340\205<\216\315\212<\356\362&\275R>{\274\372\270\326\273\221\024\207\274Q\266N\274\3619\262\274\021\351 =g\3104=\234\365W=\242\367L=1\212\317<C\250\177<\024\272\272<t\035O\275# %\275\332\272\016\272\271K\t\275\265\224 \275/)\247<\2503D<\342\205\253<\267r\035\275\025L\037\275\261\242\n=h\023\370\274\2031N=\177\276\\\274\227 \240<V2\363\274\312\336n<\254\313U= \t\313\274\302w\021<\205\033<=\226l\325\274\37418<?k\242\274\255[@\275o\250k\274T{\3609\271+;=\335\272\242<\315[\306\274\3764\027=\006(\267<h8\021;Bx\013=\222&\237\274\214\355\031=\200\314\264\274u\240&\274C\271\337\273Z_\320<\036-\235\274\255\030\365\273\203\252R=\333\353T=\031!\002=I9\204;\260\370\272\274T\322\360\274&\364\"=\326\265\n\275\246\0358=\232\202\302<\225\030Q=\274\363;=\035\336.=\314E\313\274l$`<\202\232V=\241a\021=e\364\357<b\302\033=\276\345\312<N\373P\275/\027W<?c\212\274QI\351\274\002@\307;z\023W<\014\334\314<\022\330\225\274QlL\275Y\300>\275&\306P\2753\370\276\271|BL<\350\270\005\274g4\037=\021\361\305<\201\035\023=\257>=\275\337Z\223\274\010.\216\274!2\352<s|==\244X\035=Fn\177\273\177\331\246<\301fW;\326\210C\275\262\316\020\2749\\#\275\256\254\'=\036\351\035<\236zB\275\013\230\004;\267\310\347<\035l3\275\371Hi<\373\215\354\271\031\006\336<\354d\233\274_\2110\273\323);=FC\230<v*S=\002T\310\267\3153N=\257\2046\274\307C)\273\300o\035\275\333wQ=,\277\"<\3654p\274*\231\356<\234\002\271<\306\0279=\005q\010=\270\353\243<\256\2073\275\005\364\002=n\372\037=7V1\275Y\214\336<\030\247;\2759\325:<<5\247\273\321x&\275*\261\276\274<*\r=\201=\305\274\304!7\275\227\341P\275\360n\317;\276\220\003=D&)<-X\341<pU\252\274W\313(<\255\350d<\311pf<\'\003C=\317\310\r\275\"!\306\274\333\304\224<x\006)\275\357d \275\207[\350;o\3751\2757[\223<0\t\321;T$Q=\002NT\275\221^%=&\035\354<\267\305\021\275\035\247\203<\336\251,=\270\013$\274[\226\307\2727e\010=\272D\242<7\320\321\274\310:!=\227\276F=\014\360;\273\'\030l<\222\rM\275\255\276\211<\247q\250\274?\374F=0\341\203<:4\005\275]\026(\275[\206\022;+r\035:\023\2213\275\3041\t\274\016\243\211<m\305\020=~\220\001\275.\347l\274F~\215\274=\363H<\'\270!=d\335\036\275\373\265\325\274(\177\027\274\206:\371<\341\243\235\274\201\"\037\275d#\036\275\0239\251\274\214\324N<(\'!\275lYS=\331\356\006=\334\027D\275y\036\030=\224hN\275\307\2018<\216\332\323;\231\267\321<\206%\273\274\232.\014\275\242\361\363<f\346\262\274\217Q\020\275Pu\020=b5-=Jx\032=U\376\006\275\007\266\261<:\036\205\274\346I\344\274\211\201\034\275\240\252@<6\206\370\274]\252(<\331E\006<\323\354\022\273\330TD=k(W<\032\341\330\274\304D\004=\265^\034\274}%\321\274\212\213#\275ve\000\275\340;\373\2747(\320\274f\316\323<\234\013\206\274\254\221\r=\362\2374=q\326\262\274S\266\310<\313:\206<\232UN\275t|+;C\307\n=\023\303\353\274AQ\021\273d\301\306<\323Z\n=A\371\367\273`\252\';\364U\027=\255\3152=\004\350\006=x\024\361<\276\275\301<\216+\030=\203\312\006=\362$,=\267\345\234<x\250T=|\312<\275U\327\363:\305\345\017=\220\375.\273\243\210\220;OKJ=\230\0174\275z-%=\021!\032=\242l\364\274.\026\260\274\261@E\275\253(N=\256\237\234\274\025\260\032=\330\026\230:\347\2329\274\310/Z<\367a\346\274+\204C\275\031\010H=G\265\351;\335Q\000=\333\256\236\274A\264O\275=\331\214\274\371\275k<\302\206\016<g\'\312\2748\200m<:\275\026\275\2139H=zd\030<\366\376\030=\230\335\243<\330l\025\275\334\240X=\305~O\2755\220\347\273q\014V\275\217\365\225\274S\207<=-\227\203\267bo\013=-\222\272;\322\027\337\273&\220\225\274\234l;=$\373\307:j\2347=&\342\016=P&\233<O\313T=W\212+\275y@\005\275\246P\351<\201b\363\274Z\210\373: 6\271\274,\355 =\364#@\274\007\271\353<\2079+=\342\2137=\255\'Y\274\022\3613\275y\037\240:!\312\013\275\316\304L<~{]<\301\255\230<\344c/=\321)+<\315\313\007\275\271n\316<C\307\367<^\222\272\274\037\262\271<^\"%\275m\224/\275\226\027j\273F\247.\275\033>.\275\255z)\275\347\223\305<\324?\'=\006\211\274<HT8=\234\316\351\273\351\3207;\347\250R\275\254\244\353<|`?\275\007vV=\317t\375\272z\333\3779\037us<\371\220\324\274\252^\341<V\372\227\274\341@R\274\361I+\275\001\243\265\270\236\240H=\362\214\205\274NbF\275\236y\311:\227@;\275+\006\023\275\313O\364:\206\312\300\274\317\251(\2752a\203<\362O)<\034\264 =D\010\024\275\n{\037\274%\037\213\2743\306\032\275\337\226\372\274\353\335*\274-\241\202<d97=K\3630=\206\007O=\024\037U=\n\337O<Qb%=\366a\257<\261\325\'\275\245\014\262<I \322<)\022\364<\036\\\022=\026\001\026\2759|L\275i\262\255;\242\326J<\024\373\032<\265\235\245<\355\200\336<\367(\246\274\207\344q\274\260_5\275\333\327\336\274\376a\r\275N\322V\275\336X\345\274\222\231\320\274\253\211\227\274j=\331\273\005i8\275\006O\033\275=\034\277\274\376_\016\274,~9\274L`\212;\335<\341\274\332Vx\274\206\2312\274K\352@=\2534;\275\306\211\024=u\272\273<w\331\016\275\251\3055=\327\375\010<lr\227;\331\210\n\272y1\204<\005\230\033\275\250\373T=\n\006\223<HI\032\275\004C&\275\211\t\020\275\301\3110<b\217\031=3\276\342\274\222\032\350<\236\254\347;\262\274\227<C\344V\275\374@?=U\017\317;\256Oi\272\274\005>\275\224ZK\275zp4\275(\3451\275\340\304/\275\364\333\007\275\031\260\260\274\243\021\230<\221Lk<\366\224\306\272\317\250\252<\274R+=\210~\354\274\"\371\021=\273L?\274\232\215\354;q\201T\275\261\000\274<\363G+=\372\000\216\274C\343\250<\207\370\260\274Y\017Q=\317B\031\275xN\337:_\233L\275\217[\210<\001\177\024\275\nQ$=/<\036\275j\315\354\274\275|\235<\2776&\274\201\203\031<\022\310\000=m\022\020=\253\030\344\274\001\200S\274\215\\\250\274k\324N<\027.\244\272\327\264\225<\307F.\275v\207\211\273\327Z\266<t;N=\31046\2755\240C\275\246\221\261\273\374\311\003<\3025?\275\332\357\006<v.\354\272\003\303:\275@\020\305\273\330\242\326\273I\357V\275D\206\203\274\366\277\314\273\230-Y\274?\302W=\335\267\316\274\243g\007\275g\257\006=,\023t;\342\001&={\217\002\274\320\364\337\274\311J%\275.\327\010=\021\004\224<\304\207U=\261\017^\274\343\002\003=\031\241\211<\341\000\335\273)\227\355\274\351n\315<\303\367\311\274@\007\002\275\212U5\275t[.\275\226\264\357\274V</\274o\224\032\2746\244\377<\315T?\2749\323\023=}\252\010=\261\363.=l\024\334<\022\270\013\275\225\361E\275\352\207\007=\337\307\211<\202\353\037\273\3277\217<\301(\377;&\300=<\341\365A=\245\317\220\274\215`u\274\274\017P=\034\221\024:\374\336\243<\343\262\250<\344m\r\275\006\220\r\275\314u\005=k1\371;F\366I=4j\037\275j$\276\274\331\246\331\273\374N\323;\231\320I\275{g\255\274\233=\234:\033C6=T\3202=\236\036x<\246\202\000=y\233\264\273\373\361$=C\267\350:\2303\277<\376\010>\274^\2306\275\257\231\"=:\231\224;\376\246n;\213\215\030\2743;\243\274\337X\200\274\'\362\031\271\362<\333\274\032\3563<\264\344\306\274sY\333<ZD =\024{3\275Q&\276\272\243\253\022=\340BH\2742c:\274\226\205\005=\235\263\001=\3251\313;\202i\323\274G\030\302\274\350~\261<\330P;\275\215\010\363\274\033\364\002=\245\372,=\324\310G=\370\223(\274\225;A\274\355\320\r\273m\2526=\013\221~;\341t@<\006O\332\274\326\304\336\274\243\325\305\274\3136\033\275\226\306\227<6-\227;\362O\374\274\375?\270<x\350\314;\3556,\275\361\323\342\274K=N=@\320\307<O\260\313<\360\005\267<L^\n\2757t\035=m\234\257\274\351\221-\274Z%o\274\034]A=\272\350U=\367W\372<\201\222\215;\033\323\266\274j\2060\275\347\256\001\275<\3438<K\260\177\273g\352\274;\021\033\332<\203JP=ccQ=\177\016\260;\247N8<~\353N\274\213\377\024=\022\275\340<\177\212\230\274\002\020\302\274\321\212\317\273\275\007\215;g\332\204<9{\017= \374/\275\023\247c;h\246Q\275\016\364&<X\214P\2753\373\353\274\237~\310\273s\322\277\274C\362G\275id\022\275\326\221B=\333\262==v\327\306;.c\211\274\301vG\2751(e<z9o\274\221\275\374<\333\253\007=<7\353\274\024\t&:\'\370\031\275\310\016\216\273\245\332-\275\331\334p\272\212\202\273\273\342\302,<\336\367\r\274$\203\025=n\2041=\2313\233\274\2047\343<\361\204\234<\221R;=\302\354@=`Vt<<\345,\275\340\354\203\274\\\225L=\017\007;\275\315\200\254\274\025\274L<\032\353)<\255\333\373<__t\274,\026\353;\230s\035\274\357\364\035<\200\330\032=Np-=e\375\035\274 CP;\266\370D;\024\270\202\274\322\340\330<\336\362<\275\306\355\307\274\322\2606\275\023\344\265<v\207\343<\031\376\204\2733\315Q=\305\303\251<#O\347\274\361\323\266<\372\005\362<\367\205C<\220\251\014=\317\n\256\274\302\236\027<I\354H\275\250\314\013=g59=\274Q1\275PD\200\274.qW\275\2643\227\274\233\321F\275\256\201V=\240\205)<\212\376\255\274\244\375\212\274\234S8\274\346~\032\274\221\'W\275e\227)\275\202N\210\274R3X\275\211\022\260\274|\312;=\317\264\326;\033[3=&\355\313\274R\363O\275\265\240S\275Wf\010=\177\252\321<\276h*\275\367C~;;\271\003;\265\032\236:L!S=\270K\250<\3541\317<[\312<\275B\263\0048!\003f\274I\230\033=\264\213\257<\305\320(\275\323\017\365\273\364`\305:BY\235<\245S\027\275\376\354\233<!\201\256;\343:F=\n\212\205<~u\202<\375\254*=M7$=\364\362\'=?p\001\274\035D\304\274\261DG=\225\212\261\274\271\224\005<g.B=/DQ<B\365$\275\331\213\306\2749\213\352:k\362\245\274\230K\331;\376\305\036=gk\317\274.n\002\275\270CZ\274P\263@=\023\226\371\274\232|\340\274\317\374\226\274\023\217\250<\206\345Z6\204\245X\274\352\256!\275G\n)\275\203[\275\274\313\224\026=v\240\233\274J\2671\275\225\341\001\275t\313>\275\016\331\254\273\0259\216;\272\006\037;\032\372\"=\224\026(=\364\232\000\275\246\317\255<\25622\275k\270R\275\326-\341\274p4!=\330\272\001==fQ=\023\343\037=\230\254\346<\3247E=\213\271b<\224\300\031\275\216\005\313\274~\334\320\272\031\221\252\272\343\376\"=\004\332\036=a\320\362\274\3604\237\273\253\354m\274&\353\'=\320\225\036\275\000o1\275\034\005\031<\317-\253\274\243X\351<z\326#=;\005\003\275@\247\n\275\302\010\033\275\255\2766=\317\3708\274\037\311\272\274|\260\274\274\365\373A=\010l\230<\013!O=W\337?=\253bV\275{U9;\351NO\275E\307\232\273/\002\222<o\3233=\243@\275<\222eC\275I9;:\300\337\007\275MzK<cT\353\274C\325V;\341\266\227\273\020\326$=:V\254\274\030{\017=\325V\r\275\311\246\200<\2536\017\274\332]E=\310\222\324\274\376\3344\275.\010\364\274\003\237<\275\335&+\275}\\M\274\250\014\020\275\362\276L=\301$\322\274$p\334<\340\2464\275\363\037\343<\216\231S\275[7\026\275\373\273\250\274\0231\244\274\216\2056\275\343F\332\274CM?\275\371f\330<\010\201@<,.\232\2732\346\017\273T\337\345;\216W\355\271R\005\"\275\277\254\313\274c\017\016=[4\030<^S\215\272~\204\376<\n\3060=Z\270\336;\342\304\207\274\2752h:\315a\244\273\027\031\356\274\3115~\274b\232\031<\021T\r<m\001\362<\3622T\274\203\340I<\312O\205<\t37=c\3645=z\313<\274<\242>={\237(=\230l\372\274\313\312;<\371\234 =\2154R\275\000\330\240<P\307T=\327\302\362\274G\275\017<>)\245\273\223\277\"\275\025\007\000=\2377=<pP=\275\033\377\000\275\006C\t<\"\005-\275&\305\200\274\364(4=\034\351\360\274\312\274\325<\321\355W=M15\275\205\036C\275{\331\241\274\002\366S<\233)\016<&T5=8Y\006\275\032(i\274||U=\004\375\007<e\032\237\274\240\336M\274P\336 =\014K\300<Fz\257;6\346\225\274\246\251\341<_\364\036\274\017u\333<Zh\246\274\3443\341<0\200\377\274\230\027\327\274\222L\'=\202p8\275J\\>\275#\234\014=&\324?\275B\314:=+\020\035\275\314\251\275<\212\364\3549\311\371\025\274\031^>\275\362\276Y;04F=\235\353\005\273\352\224\r<\001+B\275\243uQ;\361\n\'\275y\340\312\2742J\257\2740M\023\275\034\233T<\226\036\302\274A.\262\274\206\003B\274\213\030\032=n\003\260\274\357\207\325\274\332\345\031\275\361%0\275\246\"`\274.\220\333<\221\210\343;\204\014\362<\036\262A\275\245V9\274>\217R=\255l\362<{\326\256\274\263m\213\274y\212\245\2737\207\300\274\244\343\250<\024w\224\274\270\330\243<\t\232:=\037?\2458\007\3374\275\031\271\234\274t\367P\274\342\2316<V\336x\274\240\357[<\t}\262\273RoD=\201\376O=\322\n<\275V\260\345\271\211I\027\275r\303\204<F\030\371\273ytf;\311B\t=\263\316*\275\334XD=)\330\336<u\3659=0\217\264<\226\276N=\270\337S\275$\237{\274\236\265\367\274\262\007\255<dFT\274\2740j\2745\227\305\2740\254h\274\353_\255<u\375\346\273C\007\r\274\277X\324<\300\017h\273\302\333N\275\016B\006\275\377\3243<\307\237\r\275\n\216W\275\245\376\215\273E\226W\275\300\377\031<\021\357H\275$&K\275\360\034\231\274\240\332\033\275 \022\023\275\242\\\313<\2742\306<\277\263\016=\177\334\375\274>\325\021=J@\357\274!\027\242:W\rH<\351\207\016\275J\233\035=\376\004\215\272(\030\213<\343\340U=\372\376B<\224\322\025\275fW\n=|\240$=I\265\353\274\305\216\337\2730l\000\275\037Z7\275\2318.\275l\036y<\376\354J\273\013N\370\274\271c\006\275kBL\274\210\3766\273\021\257\260<.\033\275<e\306\035<\352e)=r\234\352\273\301\014\022<\013=*\275\001\001\031=\017\200M\275:~\031\275\'\254\3369\311\2440=\230\257\335<\343\034\026\275\333j\242\274C\370>=\3706#\275a\0376;r^\224\274Eo \275\331\004U<\226Y\316\274\325\211\033\275\341c5=H\037\022=4C\241\273kBN=m\2204=\037\340\303<\355\210<\275\255\233$\275O-6=$\300\t<\014\247\246<\247P\276;\312A>\275Y\277\002=\001\362\006=\204\245\213\273Eh\342\2749\326\362\274\t\007\217<9\000,=[\014*\271\254I\267\2741X$=\\e$=&\233\022\2757*\n\275@B\326<b7\307;c\225\327\274r\301v\273\321\273\224<\333\r}<\235\'\316;\232&\020=\367\251\371<a\360\362\274C\000\035\275\216z\210\274\216#G=\323>\277;v\230\345<qK\246<j\021\244<F\255\202\272A\304\276\274\023\0067=\256\346.;\252\202s\274k\375\035\275 \362!==rN=1\030\t<\325\003\'\274\001\221)=\316\206\233;\021\020!\275b\210\034=\331\263\302<\333h(=\t\361P=\224\352\373<\200M\220\273t\031\003\275\225\0058\275\017\347\026\275(\014\020\273\3639F\2752W\247<8\317\222<\327p\003\275\254\203\372<Y\274\006=\0031\033\274\325\224\302<\254\3331\275\257\314\255<\312\246\031<\"\2166=\352\257\207\273d`\302<\316\"\315<\217\360\351<\034T\021\275\244\363m\274\351\203H\274\365\277\";\276\370\372<\020g\033\275\226\3324\273\322\353\t=z\227\371\274\027\205$\275\375n\373\274gF\225\273\356`D\273R\326\252<\2772R=%\247\342<\211\352E\275\204\227B=\230\302O\275\317V\202\274\342\203\310\273\035U0\275\330?\206\273\270?\350<\355\303\032=\214\376Q\274\337\257j<\355F\243<A\005\372\274\240\0270\275\216!\266\274\323+\220\274\202\225\374<\333\350\376<JsO\274\027\033\335<m#\364<\372{\203\274G\261\352<>\245B\274\306G\207<4=\\;\303z4\275I\231\010=\025K\262\273\234\363D=\2720\315\273\025^\326<N\030\347\2747{\253\274M\312H\275\276C#<eS\316\274@c\347\274\220\366\001=\251\337\020\275\252\210\030=\201\3749=\314-L\273\305D,\275\361*2=d,\304\274\004u\037\275\254\240\024<L\"+=\330}\247\2734c\276<\372I\004\2753\365\204<c2#<:xS\275k}5=D \372:\310\255%\275\311\312C=\267M <v\367.\2736\300\262;7d4=V\371\374<\032\252\221<0/\014=\303H\321\274\214n%\275\0349M\275\225\237\351<\321M\276\274\034\220\250<\230t\244;\323M-\274\261\237L;;\221\025=\014\245,<|\310\275<8\254S\2747Z\365\274\361\317\003\275\3230\302\274\035\3744<\016\337\016\274t\355\370\274&\254[<\022\345\350\273\242\327\312<\307\333\263<*\366\207\274\005O\205<\342w0\274\300Z\304;\027*\t=\236\244\313\273U/\007=|W\037\274XK\035<v\214\032<\374 \363\274\270\016:\275\370J\225\274\244\365!=\210\220)\275\0212\312\273\356=M\275\373n\314\274\333\363P=\007\376\010\275\275H\261<j\361\021\275\326\3248=\374\256\"=\225\n\006=l\325\001\275\325\250\020\273\253;\026\275\304\210\227<`\217\3628Oz*\275\323\337\226\274)\"\023=\335\315\003\275\377\255\017\274\034\355\037\2755\271\316;\020\262\253;s\316S=z\247\036=4\370\210<\312M\217\274\2147\321;\213\367\304\274!\266\010<\314F\370\274\276\360\320<\275\030\026=\032\214\266<}\0246\275\227H\324\273,4\n=\216\3525=\326\275\356\273\223\363#<\340\031&=\310\373N=f&\330<v\366\204\274\202\006\003\275\t8\260\274X-j<\371pR\275H\344-\274\263\224\272<v\220\370\274\30455\275+\362\372\273\241\304\361\274\257\376-\275\345\3243=\215\331\002=\340Bb<\212\257\346<\023\3354=J\225$\275eEB=\371\3349=\301\2072\2758\320\033\273B\035 \275\362\032\365:\224\025$\275\324I\017=\274\213\035\2755*:=\272T;\275)\037\224\274t\005#=\350wR\273U\222\244:v\3113\275\265\356\373\272\363\367\314<\264\273\255\273\354]\'<\365\213\277;\260\004\202<\322\n,=\357\212\034=o\007\016=4\014,=\265=+\275Z\325\203<,V\016\275Df\265<\340\221\231\274Jp\036=%\006?\274Dp\347\274\271k\356\274\313q7=\306\374\260\274/\\U\273\374^\203\274{i\032\275\264\263\301;&r\207\273b\215\371\274\304Q\034=\177n\027\275\034\035\006\275@KZ\274\rp\023\2752W\004=\205\303;\273\351\316\013=\230\031\324<`\262\030=V)E=\rt\327\274n\037:=\216\332:\274\320\267\263<\243OM\274.\355\241<\201C\374\272\242\261\236\273\030\232(\275\305ST=C4\007=\000U&\275\331=\303\273V\241\316\273\350\014\030=\330\0230\275\340\326S=l]\300\274\343\201\032\2751\302\252\274\344kG\275A\271\264<n\264\303<V\227N=8\254\222\274#~\030<\236-\035\275\326vU=\302\365\033=\210F\013\275\352\224\005\2757\365\302\274\365\3355=\024 \"=\353c\005\2748^T\275-c:\275\255\271\002\275\021\275R\275\245\032\"\275\242[\031\275?\t\005\275p\216\364\274\352mH\271\344\326\371:\350j\203\273\037\"U\275\316,B=b\272\033=B\220Q\275\243\346W\275t\305R\275}\262)\275\273\363\276\272\226\342\256<\305\363\031\275\2046,=\006jU\274\253-6\275u[\336\274\257\256)=\316jB<9\236\332\274\r_%=)\231\245\274E\210%\275Lt%\275\314\035\002=\306\250\267<\236\311I=\352\207-<\313\351F\275\272\237D\275\200\235\267<Sc\223<v\244-<T\016^<\247}-\273<\350\337<(\324\004\2757\246\351;s}\227\274w\334D<C\301-=:8:=\035\362f\274?\020\304;\211\351>=\305\r{\274\035./;\272;\002;\242j\266\274\335\213%\2755\314\360<451=\234\335\031\275eE=<T\205\254<?\236\320<\004\rO=\235\003X=\021\205\236\274\376EB;\216bB=(\361!<\\J\227\274A\313\223\274#\272\251<\271Wb<\270N\013\275Y\346\'\275\274\264-=\273j\237<G\013S\272\007\002\323\274X^8\274\304\370\n=wB\006=\222N\365;\332p\354\274\005\033\342<\371n\026=jB\024=\014\203T=\362\301\021\275\023\270H\275\205x1\275\232\010k\274\343\020R\275*\025\373<\\P\305;\253\006\354<D|,\275\226S\013\273\035S\340<*\177X=\203\004\277<\323E\006=\270\312\202<-\332\342<\331DG<\037v\370<\230c=\275=\213\001\275L\260\211<\265\030\340<\212}\024\275\267C&\274k\013-<)\013\303\274\342;\340<Z\317G\275Xq\237\273\345\344\231:2\322\337<m\364J\275\273\255W=g\327\001\275-\230\317\274)DV\275-\217R<\365\235\022=8\032:\275\221\030\327\274\336\027\323<n\240\375<.6\013\275\306H\014\275\327\360\206<\314\207\376<\'2\000\275\032\337==\376\026\210\274\337\340\362\2748\016\020=cAV\275|8U\275*\235d<\265\270\354<_@ \273\324\3720=6\277G\274\225/\341<\266r\020=\340\337\263;@\'@=k7\202\273\242<\325<\240\3228=\241\023D<\272\344\276<\324F\016=f`.=0>\006=\235\250@=\007\006\025=\032\202G=\271\215B<\032\272\022<hr\211\274?\273\251\274\007T\030<\304\224\003\275O\350\'\275fU\022=\231+F\274\376\022N\274\275\3040<\026\223:=\303\337\017<\371z\253\274\351\277(\275\374\001\034\275\373\231D;.\027J=O\2205\275>\245\036=\3213\235\274^\233\375;\003\262\220<k\307\001<Kr\020\275\241\305)=\274\020.\275\263\302\232\274\031L\016=\225\314)=\236\261\341\274miE=\312\304\037;\026\352\032\275\320X\241<\261^\030=\027\3239\2755\325\016=~\217\207\274<at\274df\317\274\037\345\206\274\377t1\275\t\205\003=H\314\204<\024 \311<\334h\332\2749\234\331<\000\367\305\274\030\013\231<\376\227l\274%\311!=\035\350S=\371|Q=P\352\313<\254\207B<\357w\362\274H%\336<\336\022\352<WH\370;1\256 \275?\352\370<\230\213\000\273.\346)<\351\337\031=\300\254Q\275n\355\200\274\351\264X\272r\276$=L\031\316<!iE=yV\300;\364\264\223<\2039Y\274\346g\251<\037\224\211\274\311u\213\274\371\003\000=\212\222\017=\360\005L\275v]\357;.9I\274P\312C=\367C\355<m\332\373<\326\034M<\313o\'<\356\023w;\225\225\220:^\t\335\273\306\013\021=\017E\206<\355WU=\223\027\341;\'h\"\275bd\002=J\357\212:\365\2160\275\313\232s<_\2271;\356\0016=\336\331\336;\316c\032\275u\2455=x(Q=\204+\357\273\230\277\241\273\357$~\274<c\31595$\203<v\341\234\272\3341 \275M\023\n\275y\0176;\214\257\212\274q\344w\274\037\376@\275\314\346P\275\220\020\233\272\377\n\315:X\007b<\000&%=\356\206?\275\251\354\'\273H\020\005=]\224\347\274Q_N=<L\025=\356\200\365<\343\032d<\374u\'\275\217\360\031\274\266\356\032\275\225\244X=5vT=)Y\262<|\212V\274\241%\226<+\033\220;K\363*\275\005|\035=\316AV<\223\321\222\274\351\004\013\275p\260\004=/\222\356\274\372\337\314\274y\304\232<K\340\212<T\0228\274\256\326)=\215vb<\265\272\227\274\017\005\273<m\274K\275\023-,\274\244\251M\275\031L\022=\327n@=V\355c<rm\232<~)\231\2743\315\036=\023{H=\262\223\304<|\263\310<H\333\001<j\312\001=sCP=\266L\"=\305\r\021\275\376\224q\274\263\261t9\236\001.=\264g=<\2615\017\275y\360\022=Z\231U;\3740\364;\006\246\n\272\224s\351<c\232\326<+\220\031\275\302\267\224<+\271l;\020\215 \275\225\254\037=<\340T=\004\004d;\305\342\007\274?la9+vK\275j\343\017<\353\332\t\275BK\356<\272]\266</\377\305\274\000k$\275\342\335\035=v\305\035=\324\201v\274\214/\222\272\326\014\240\274\202F1=\303VO=\347\221\304<\255\343\343<\033\371\007;\333\227\251\274\252\316\264\274\213\202\264\272=e\010=E<H\275A!\241<<\227\324\274\322NW=\247\226N<.\341\244<\204\336\253;\253)\030=\244\002{<j\247u<\026\2410=\233H\374<\335 \312\274)\327\021=Ss\002=\233\315\000= \334\234\2749D\327<\363\244y\274\374\3327\275\017\320W\275\3502C<\342ro<\032\3113=<z1=\213\035!;\255\022\246;\233\303\341;\362H4=\214D\"=\321\204~\274V\261\203\273\014\352\304\274K\215\335\2735\365\334\273\034`%=\2705\315<\000/\237\274%pH\275\333\3424=\036\024\242<\266\265I=\276.\315<\303\331\010\275N\356\301<XM-\27570\233;p9J;\003V\244;h\273\275<N\"P<\000\'R\275\255\3571\275}j\227<<\311\256\273\030]\237<\360p\024=!Q\026\275\320\225R\274\250\034,=\205\2752<\026\341\032\275\341\247\007\275\000\020\202\273\235\254U=\350\3376\275\355$2<}\254\274\274@\236o<\336\237\354<A5:\275\237\036T\275\177G\200\274a\307\021\275\032\247\r\275C\301\251\274m|M=\354\035\304<\365c+\274#\304F=\205?\274\274\277\226\204\274\360\005\322\274\230\014\n\275 g&=\220\346\305<~C\301;\345\312\231<\n+\272<\365\031\336\274c\037\321<O1\017\275:\347\352\274\003\t\217<\330\363T\274\220i*\275S\013\037\275\002\263R\275\261&<\272P\313)\275\336~\263;v\001#=\236yP=\002\324|<\177KM\274\307\367L\274\367h\331<\223\337\323\274q\352\244<\376\270\036\275B\263\247<\226 \000=w&\224;2\010\014=\035\341\320<Q6\320\272\251\367H=\211\033\036\274<)\026=\305\264R\273yN\376\274\350\367\256\274UV\326\271\325\233\371:\230\227L\275C\000\221\274\324{K\274\001\202\317\271\005\351g\274\214\377<\275\247Q\302\273\346\016\330;\035?\027\275tYM=\352\317\253\274t_@\275\321\310A=\250}4<\275\367\214\274N(3;\034\221<\275\363\2042\275\231\316\360<(\207{\274\372\210\226\274m\224\n\274\375TU\275i\266U=3\344@\275\017\204F=-\235\233<\234\264\005=\003\206\254\274\352M^<\014\354\226\274\027\316T\274l\374\363\274p\242\203\274\002\352d;\341\237\006\275W\004\347;\212\367O\273ES\207\273l\360\364\274\234(\000\275\207\313\002\275r\r7: {\260\274\363\307\215\273\374\337\260\274\222\322\375\273\2058\206\274\2608\256\274\354\004\013=4\212\342\274&\331$\275s\317\231\274G\371\266<\224W1=\276?\242<\244\321\255\274o\375k<\253\t\021=\265\247\006\275M\271\217<\024a\"=\214k\007=\026\361\"\275\251Q\223\274\223\333S\275\014\364*\275\245h\300\274\333.\254<\333%\'=\252\006\023\274&=\306:{\006\317\274:\216\'=\\\245M\273\224*I\275\306\020\213\274\305\321A=l\025\373;a\240>=\312|-;_\234\356<\371\227S\275\322\206\270<|\3310=\021x\344\274\216kC\275\272\352\311<P\261\357<\301\3549\275U\003\033=\305\3013=\255\356?=\010z\330<\266\265\362\2743\354\232<\355+\035\275\234sB=\255\355$<\014\321\330<\230\332\375<:j\202;/\001#\2755\005 :\334\270\373\274\336\265-<+,R=d\227\225<\352\036><\243e\302\273\261\267\213\2743!\017;\353\014j\274Yj\373\273\214\200\314\274\275\006\\;5\306C\274\363\236\n=\026\242j\274,\023H\275W\224\303\274\313>\246<\370\220\006<S\273t<3\030n;3\233\263;\275n\037<\037\340\030=If)\274H\205\223\274\322\366\233\273}G7=l\223\257<w\313\031=&\210\342\274+\314\264;\362\364*=\337\265:<I\204\232;\232}\276;\001j\014<\240\242\257\274\310\364\"=9\020r;K\210U\2752\232K\275.\351\346\273\314%?\275=\227\353\274\373\013\\<\312\211\310<\267\003I\274/r\360<\261(%\274\r\030\036\275\351T\261<\304|\340\274\031^0=3\364S\274\233B\325\274q*Q\273\211d\300\274\007\270\361<\226\2668=@_\206\273\226\016?;Gr\362\274hL\310\274VO\365;#\310\372<\235\355\212<\376\'\033<\213z\n\275\220k0\274\017\256o;\265?<=*\345f\273&\363\314<\002\024\320;\314fJ=\017\216\274\273Uz\371<\3151%5\026S@; \236\326<g\226\021=L\212\202\274n\0000\275t\\n<\213\002\253\274{\263\331<\357\255:\275q\373\225\274GoU=\362I\353<q\243\000\275\334xQ=\205\257\032\275\313\301\231<\267\236\246\274\333\307\326<!\211\002\275_E)\275Geg\274\372\223L<G9\233<\347K\362\274?\234\n\275\240y2\275\357Z \275\253\235\254;\315\206#\274\307\256G\275\0017\216\273\351\035\004\275\207\360F=\266\224\277;~\253I=\377\374\262\274\257S\001\275\'u\n\274\357\364\332\274\272\300\322<\nv\253\273\345e\356\274\232\212\037=\272\376\020=U\365>;\306pV\275\323\255\347\273\235\306=\274\r\220\016\272K\212\321\274,\221\027=moK<\'\'*=tMI=K\347O=\365\345\022\275\276\303!\275\212\260\031<ub`\2739\205K\275\003o$<q%\273;\235\325\r\275\243\200\346<L\263\345\274\204o\265\274\377\366\214<\3018\374\274\3118\317\273~y\210\273\000\013N=\330d\025=\013\276M\275=\375-\275\002\314\317\274C\275\361<J\353\241<T\204s<\203\256\251\274Mz\230<\255\257S=\332\220)=\231\226\206<A\332\351\273\355Z;=\265\213\004=\000|\300<\347\330\277<\332\205=:\367\2703\275\232\375\263\272\320\254\367;\0272#\274\341\317\313<\254Y\320\274\324f\006=\363\031@=\234<e<\321,\034=,\321\"\275\"\263\377\274\363T\304\274|\000\353<\355x\033=\3306~\274x\207\232<\2032\330;\226\365\233\274F\022-\274\000hW=\200MX=6\017E=\024\360\014\275\256\223L=JuF=;d.\274a\356+\274\201\227m;\024\3272\275K\254\201\2747k\205<\240\320\224<Gr*\275\343\264\024\272\343\023+\275\177\354T\275\342\217\022\275\032\377\320<\375J\303\274m\t\350\274u\323 \275`\3167\274^L\010<\216;\024\275O\2779<\365lS<\272<\233<\215\364\230:Ap.=\341\336\223<\003k\345<\310m-\275\202\335\227\273K\317\340\274s\371\177<\364\232\246<\234\374\364\274\022\020\301<\363n-=i8;=\226\022O\2755\207\341<\223\276\207<R\240\371:\213\237$;\357\205\254\2738\357\010=\030\025\303<\230\006E\275\202<\236\274\256\316)\274\333-\224\273}\014\017\275l\010B=\202\303\237\274\372\212\036\275\\x;\275\200Q\321<\262\270\274<z~\014\275\365\341\234;*\221@\275\273\342\013=\373\3242=\367\265\017\275\373\320\'\273\301&\034\275a\212\224<\352\272\003<\030HV=?\327\376\274\024A\240\273\024\273*\275N\312\200\274\024\320\022=\307\206\370\274\307u\257<s\255&=\354\201\370\274\242\3557\275\377(\000\275\305\3200\275P\362\225<\211\021\366:u\032\260\274\207\007\377<\202(\321<(\242\361<\231%y;\205\241\213\274\027\224\036<=\031\231;Z\310@\275|\365\213\274\207Mb\274\0349\021\275\205\306m\273$\216\336<ZT\006\271\257\"\200<B\266V<\223\323\312<\237\320\3509\"\311\035\271j\020>=\312rP;B\247\253\273\001\0163=C\372\211\273\265\2639=\250\035\227<\023\315\265\274Qn\263\274\001\316V=)\353\241;\367iT\274\2556\320<\233\346\004\273\234/\006\274\277h\267\273\331\023\312;h\026\251<m{6\275\257E&=\261\2675=r\324\025<\375\375\366<\r@\000<\277\311\025=F\335\370\274\250YL\274\205\344\016\275\223>\345<\266c5=a\021\033\274\264\262\360\2736Y\032\275\213\377\003<\343\356\360<R\221\357\273B\251\367\274\233\306\260\274\030\323\303<\276\204J<e\001 =\304S\331\273J\307\376\273\003\206,<\201ro\274\323\016\027\273i\365/\275\232\2413=\337\205q\274\326h\002<M\352\001<\212\331\'\275\247\200R\273\321u\374<w\003\247\274\216\024\321\274\304\356\013\274p\363\003=\311>\230<z\350\200\273\037\336.\275\211d\331<\332\017\2259\307%.<STi<\\\236\017\275C\\\035=]1\003\2752\244\236<=\200\300<\r\211.\275\327\370\021<\233\3309\275~h1\274\205\344\335\274U\301\t;r\017=\275\247\277:9-I\035<\342 g<v\373S\275}`\252\274\230\2054;S\254\004<\311\236\202\274x\323V<\020`\335\274jU\255\274$\240\352\274\332\0204=\235a\002=\315\262O\275\327}o\274!\341\355\274T\234#<\337\243\247;3\311!\274\350\362H\275\007\214\225\274\232R\031=Xt\353\2730\372A\275\345!F<\313\020H=\272\274\215\273\346\2164=#\\\031\275v\240D=]:R\275\371(V=\273Z3\275_D2\274\341\272\026\275\300\207\026=!\306!\275\2351\t\275\246o\332\274b\255\346<\341r\031=\033\233B=\213s\247;#\251\324\2740\200R<\324<\363<\233\234\367\274\234?\356;\221\343=\274\357\0351\275\017;\316\274ufJ\275\254\024/\275\014\033\244<WW\261<E\000\344\274\312@\002=\214Tp<\027m\263\272\273\002L=x\2219=\367\276$\275\302\203K\275\013\351\016={\234(<\254\354\335\274_G#\273^G*=\337\025\347<\316\230\354\273\0214\261:\031_\340<\026\032\264<\245\023\030\274\200\365\336<*O\025\2754F\027<2\306N\275P#\004=\220Q\210<R\361\027\273\245\370\016=\365S\030=\357^\276\274\n\t\263<\366n&=X\335;\275|3I\275\367\234\331<\336oF\275D\202\002=\345H\275<\204\230\037=\3563\027\275$\330D\275*\t\267\274\356\224M=\270\203W=\r-\355<\227\007<\275\351\264\324<\030\250w<[\375\340<\236P^\273\361\245\276\274\034]S=\312\006X=\310|\020=u\350\n=0\326p<Y\266\377<\313\214\237\273\275Q<\274\r|\273\274\026X\330<\371V\373;\343\276$\275\253&\\\274\307\332\032\273\275I\365\273\316i\032=\000\276U\275\272\\w\274g\247l\274\344\240G\273\271\205\331\274NI.\275\373\236e\273\257\375A\275K\312\352\273\363\027\343;\313\2073=\276\005U=\314\232\274\2739F1<\r~9\275\003\376\013\275\235z\214\274k\263\347\273~\320%\275,\231\332\274\317\370]\274`\263\002\273\330S{\274\200\223\035\2752\027\030\275\365\265\341<dS\325<\203D\023=\373s\205\273z\341M=.\300B\275}.\346\273\037\344\343<\346\020\314\274J\355m\273\236\244G\275\247L\232<\265\333\307<5Cl\274\344a\027\275\n\233\'=\276\251\314<\323\215\304;\177<3\275\325\276x\274\010)I\275\332\201\336\274\340\311(;4.\326\274\t=\241<\t\271#=\210\177J\275@;)\2756\247\212<U\032@\275\t\001 \274)\264<\274\017h\366\274\262\364M\274}\n\257\274\326\326%\2751\204T=\306\365\314<Z+E=9R\3568\342\0164=\376-\023\275B\026\224\274\271r\350<\222\026\225:\204Z\027=\002\253\221<\261\335\262<S\222\277<\355<M<\032u\271\274\\\213\037\273x\327+\274\r\233\342<\226\264(\275\340\303E\275s>\020=\275\307\304\274/\276\r=\340: =x\0148\275\016\005\030=|\032\037=\251(6\275\327\200!\274\273?&=Y(\034<\312q\034=\311|\301\274\274V\314\274\023hO\275?\027\356<\243\245F\275\215C0\274\'\330\321<7\326>:\235\220I<sz\266<\255N\024=\224\250\315<)NJ\275O\355\315<\325\205\023=g ]:\316\311\033\2753\027\027\275\305\267\356\274c\023\213\274\257M\037\275C\'1\275\027\313\007=\3139\r\275K\311O=\310\2009=\231B\350<p\030\245\274s\352\317<\343V|;\264\334!\275\332`\320\274\273W8=\023IP\275\022\343(\275\216e\021\275{\226\346\274\017\037\361<\313\362@=\031\310\207<\003\010\205\274,T\245<\306q\360\273\310$9<\024\271X\273\262~\250<\311\024\t\273\025\212\357\274\371J\026=AiC=T\002>\2755\310:\274\233\0325=\237Xz\274\234\243\261\274Bt\201<\250\276\234\274\221\001\024\274rq\352\274]\320+=)R\330:VP\013\274\204T\225\274h_\255:\021\243\027<\344\354*=\307 ?\2735N\264<\\2C=]\360-\275\333\241\213\274\366\017T\274\373]i<\030A^;\312\017\343<^{V\275 \3409\273\244\227U\275\017B\"=\235B\323;\035\016\345\274\026\304F=\036j\n\275\221\2548<&\263\020=\202\322\177\274\362\231\n; i#\275\275\275\371<\341\215\334\274s\320\000=\001\021\177\274\307\3117\275Vw\245\274\006\351\007=\034\277g\272i\242\3528\326\275M=\236\005\231\274A\'G=\242\'/\274q\365\362\274`\272*\275~C\326;\367\210\014\271\026\250\205\272\372K+=\241\256:\275\336\311\214\274%\332V=r;.<\206nB\275\025d\020=o\016\343\274\353\244\036\275u]\265\274\177^:\275Q\030\324\273\203!<\275\272\350\037=\213\376`<$D\261:5\312\003\271l\010\000=\374\226\202<\322\'\037\275\226\206W\275J4H<0\t\004=\021\330\310\274$\227\005=\310\352\037=\261\024\242\274j -=_\320\004\275\310\257\336;\303\257\t\274\224n\020\275s\030\317<\343C\347\266\333\321\336<\233N\001\273|S\250<+d+=\025\365\026\275Q\272\036\273\216\324\352\272i\016\240\270\032\315\006;\214`X=\206\r\002=u\257\311<Q1\375\273u\355\013=c\004\2369Wr\215;\302\242\336\274o\263M=V\010\370<\210\244D\275\224y\235\274\314\r\307<a\323@<dz\331<\235\321,=\001\253I=\240\310\240<\"\352\255<\235\3131=\200\233\024\274^=F<=\007#\275g\326\003\275\n:H\275\227)\252\274\377\3221<\334a\037\275\020?c\273\317r\223\274\320{H=\366\326,=\'\336\244\2726\315\006\275|h/\275\213K\331\274\350t\\<\311;N=\322/A\275\\\276H<\211\3662=\022\247*\275)D\t=\303\335\347\2745Lw\274z%*\275\353\027\251<\270iT=\3741M=\372\270\371<\302\361\341<\377\235p\274)r\233\274\343\251\351\274\275,\353<\206sG\274q\0323\273\031P$\274}\325 =f\330\032<|\004\370\274\252\362\356\274\302\215I\274\210I8\275\375\324\304\273\026\344\321\274\365\031\336<j\346f\272\010\n#=\300\236Q\273\336)\342<\344\361\262<\224\303&\275\267\250\014;G\237P\274\315\357\036\275Kx\223\274;\t\352<P\332$= \226\324\274\261\260K\273\210k\242\274\310{\363<\013\005\305\274\3440>\275>\203%\275\321e\341\274\250\343t\274\003f\305;\364\031\333<\256\026\216<\300\201\275\274\360\260+=2\275\033=\373\332M=\022\3568=\";\272<K\004\331\274\n\237\274\274}\0311=\363V]<\033\314`\274\204[\324<\200\234\";\215\257\230</\323^<\222sQ=;\017T\275H\346i:I\025\'<\211\337.\275J\247\357<\360\264P\275\324\345\026=\344\n\026<\321\026\326<\231\336\217\274\334\312+=I\341#\275\302\313N\274\335V\034<\261\r\022=aA\r\275\362\240x\274\344\337\227<\264\240<=F\315\361;Y\217\374\274\214N,=W\230>\274\225c\342\274\242\330!\275\364@\216<\205\315\326;\r\204:\274\303vU\275\357\375\364<\300\373\263<bR;\275e\322(\275\356\030\274\274.\204\277:\314\377\333<\022\275\031\275k\213z;\3674\342;6\232G=\364\nm;b\013\007=*(\036=K2$\275\316S&<\241\376Q=b\302*=\026T-\275\246b\302\273k2\350<\326HB\273\341\3159=\217\342M\275!\"\372;\200\241\251<,\\\021\275\241,\265<\347\004\306\274\343?\021=\252G\360\274|\352\017\275\370\343\013=me\300\274\245\302\244<t\337r<2&:<e\227\016=N\2378=\271*;\274\006\353;\275\352v\365<G\317D=\242\027\031\275\024\010\002<m\341\304<Li\262:N\261\025\275j\000\007\275\372pr<\252J\n=`x\271<>\\$=\037\250\304\273\021\033\031\275\236[%\275^s\303\274F#*;\324\306\001\275\266\302A\274m\213\342<;\316\022\275\377\303!=\256\005%\275U\010\207<\261\\\232<\271<\240<6\346\262\274D?.=9U\205<\000A/\275H\177\003\275\251\220C=#&\253;l\241\254\272\261m#\274\327U\000=\371\035%=b\364G;\235\001\330<\336\030\252\273H\236\000\274\256q;\275\016\314C=\205&D<{8\342\274\204\326\025\275\266\023V\274\233\004\311;b\013H=\322\336V=\244\350M\275\334\377\260\274\217\215\007\275\242Q\032\275\272\367\030=\253\214\376\274\227\214\002\275\364\013.=o\014\325<{\374\207;\353\355?\275\025Q\327\274i\376\202\274\275\2249=\306\",\275\322\260\024\275\205\263\006\274\221\372%=*\226\002\275]\323\323\274d\n\037\275\0343\257\274\244_K=H\"&=\007\275\360<\200\254\r<Y\215\207\274.\343\307\274\'\2079\275\345\372\313\274\037\'\014\2759;\305\274(>\327\274FZ\021=Y\260\030=~l/\275\220:\371<1\271\252\274\260^9=\367\2048=F\303[;\031]5\274\304\3638\275\271\033 =e\023#=\221\365.<\\\354\376<&\376)\2743\323\351<W\305\371<\246\354C=2\273\345<\235\355\327<\005q\311<$\243\360<\022wJ=\333$\274<\222\033M<M\352\304\272\250\336\n;\030\315:;\204\005\261\274\267Y\222\274\277\217\014=\312\rg:\022\231A<\342\362\231<\203v\247\274nT7<\232vr\274\023\251\266\274\311A\023\273\366\374-\2756\237\275<\026\200\037=\256\217\311<\234\256\023=\265\023\271<\346\003T\275\301\223\022\274\341H)=`\377\272<a\242\016==\024\353\274\334\227\251\274\312#T=01\032\275\376X\260\274\346\341\010\275WD\024\275\363\007J=\267\235\035=\003\226\211<&\255\323\274O\347\367\274:**\275g)O<\315\326W<p{V\275*\2503<\214\210R=\305)u\274\023\204\353\274Y@J<N\277\353\274\026]\315\274\216\323=\274B\325V\275\036\345\347<\022\216\327<\354\331\330\273k\247\224;\342\223\233\274Cd\031=v\276,;\301`B<$\377\210;\226[-\275 \023\370<\026B\203\271\344\251\003=-\260\276<A\246\014\273Z16\274\377\034\343\274\221\003\007=\205P\301<E\222\360\274M\036U<I\316\372<\037\203\261\274\240\352V\275\304\016\351<\354\210\021=\341\313\353<#\357\312\273\216\317\210\274\305\rQ=\347\225P\275\002J\212<iO\275\273\276\247$=n\021O<\377\242\255;x43\275\221\274>\275\355=X=\360\0311\272\013o\373;\237\242\336:Z\021\213\272\023N\024\275A\343\274\274\336]\027=e:\350\272\335\211 =\222\331J=\005\256\363\274\361\261\247<\275\210\231<R\2215\274\244G!=\222^R<#\233\030<M\215\324<\034/\030=\301\013\343<tbT<$\306A<E0\005\275\366\352A\275\034\366C\275\217\270\233<q\264d\274\037\323\311;GJ\206\274\031\255C=E\025(\275\014\244\010\275\316T\204<\226\355\025\275\206.\036\274\r\021J\275\006a\025\275\255\202\033\275\177\006%=\352\341\307\273\335\2560=\225h<\274\227d\325\274\261e\033\275h\177\373<eyI=\0002\372<\017\006\'=\370\321)=n\364\002=vA\006\275\313z\235\274FW\236<\210\217\324\274h\2414\275\234%\204<L\016Q=\304\205!=\265\211\362\274\225?\036\275*\367\313<F\340\261<\t\0234\275\222r\347<\304\020\017=\254\214G=\264y\326\274$\201e<\327\307\025\275J\\G=\025y\355\273JKU=\244\376\021\275\325Ho\272\"\375\303<1\345W\274t2*\275[q7=\206\'\027\275]\263\250\273`2\315\274|\373y\274smu\274t\364J=\315$H\274~\246>=\3469\'=eG#\275\325\240C\275\261$E=\024\276@\274r\311j\274^UU=\326\006\315<\200\307\001<C\007\262;M\226\356\274\242\317\016=\032BJ\275g\327\267\274X\217\221\2745L\027=\323\215\017<_]\251<I\036\370\274Z\212H=\377\226\000\275r\355\003\275\373\366\177\274[I\266<\237/-=\377\2534=\3756\001=\023B[<\202\347@<\255y_<\351s-=\225\027\215\274\013\345\220;}\'\211\274\325\221\257\274\330\233\370\273\370u9\275-\217\315;I\255\016=\332+W<\243a4\275\217\265\014\274\273>\245\273O\372\251\273\017$\025\275\371\353\373\274\333\210\022\274\014\232\3628;\342\373<5h\242\274Y\331\026\274\336M\333\273\232~\233<\021\024;=^\213\023\2758qP\274\275\3721=\007T%=\324\241\214:\033\370;\275I\201(<?CA=\362\341\264\274\353x,\273\351\232\237<\234\337\265\274 \363.\275\\n\334\274{\250\314<I&\215<\220\260*\275\364\022G=^\204Q=\2236{<\305\030 =!;\036\275J\243\000=z\217\273<\243L\001\274\325\037\217<a\207\353\274a(\366\274Q3\020=\251~\014=\342\033\311<\226\n\267<A\265\022\273\000\324F\275\224\354\022\275+\322H\275\236]U\274\204d\005=G<\330\274\256-\351\274\342\001\007=W\315]\273M\032v:?\007\202<\034\224\310\274\001\257\214\273x\005==\351D7\275\356\202\"<$\345\204\274\331\376@\275\327\221\323<\206\372(\274\244\246\036=#\213\010=\231.E\275\237\024\214<ny\024=\316q\002\275ht\021=F\002\252\272\3546n;Q\246P\275\345\347#=\375p\004\275\200KO\275F\3249\275Mo\000\275\375\372\236\274\336\305<\275\216\354\010=*c\224<2\r\324<0uA=\371|:=\253\355\014=\350(R\274y#\027=\366o\016=\\\365F=<\'\237<\030\202?=\206YZ;\021@\371;\367;&\275[\3636\274\336\343\227\274/l0\275\2077J\275\217\212+=\201\212(\274n\276H\274J\242\341\274l\316\003=F\366\314;RP==\032M9\275\247\2317;\334X6<;.\010\275\322\233,\274\265\266\351\274\251\036\343<\257z\t=\376\274\301<\267\3575\275Y\356\333<\312\223\316\273\t\324\303\274H\265\225\274\225\'\233<\010\275\347\274j\352\023\274Q\3568\275\342\347\032\275\363\246\276;\371\213\024\275ex\322\274X\375\227\2742\003\235\2742;_:{\215P=\213(1\275\340&\223\274|>\310\274\025\376\210\274y\327\034<+\316\302<\263\000C\275\225\010\002=\3348Q<\023\253\306<\231\270\325\274\373\033\246<56g\274\331\177\366<0\327S\275\240V\350\273\261\203\276\274be\010\273\3751\027=\t\237\207\274l\340)=\233)N<\222\020\033\275m\021\037\273q\371*:\257\031I\274\260\262%\275\'\352G\274sL\224<\361\010\004\275\005q]<\331Z\374\273\027\325\266\274H\005\276\2743%\247<\243\350$;\330\206Z<%\305\2039?/\267\274}WW;7\006\027=\253+\t\274\304\372U\275<:.\2758T\315<)\357\017\275\'\275\336<\316B\305\273$\022\031=\307\334+\275\265]\366<rLD\275G\027U=\000O\236<\346\334(=\17796\274A\"\235\274\357\t\265<du\037\275Y\371\220<\350\201D=|\335\271\273\356\217\t\275!\214#=Q\321\r=\003\006\247\274\201\326\226;JO\252\274\022\214\326<[\203\272<\373\356\222<I`\010=\002&E\275\202.$=\202\210*=\022\232\003\275\022\256k<9\3161=L?7\275\034C3\275\207\342.=\314\352\342<\355\360J\275\2118Q<#?\252:FX\310<$\201==\367\035\320<\356\335K\275\006\275\261<O\344&<\027\361\217:\354\016\252\274\203\213><\307bB=\266\300\251<X\343\025=\"\0135\275\204\252\033\275\312\310m\273A\007\001\275\014@\3009\377\302\314\274k\000\004\274\201\007\036=#/\024\274T\200_<O\241\004\274\005\351\377<<`\t=\021\200T=\002\360R\273x)/\275\3240X=o\226\020\275\0224\312\274i\3303=a\003*\2751X8\273{C3=RY\030\27532\277<\2508\027\273\345\305\r=\004\034:\274{{<\274\331\203\330<\372\r\200;%\374\013\274\225\362\222\274\036E\311<\351\340\023\274\252\320\341\272\0310\251<\362\343\304<\247?&\275O\351G\275\224\253X\275\214\022\233<\320g\277;\226\313\241<\270\022\342\273w\0035<\262\272\031\272\340|\002=\265S\025\275\367@K:w~u:WM\226<\217\206\204;\362\314\004\275\204}\021\275C{X=\220\254\277\274\317\241\022=e\244\330< \256\252<\330-\204\272\267at<\375c\n\275qkR\275t~Q\273\373d\032<\300P\342\274z\320\272\274\271\023\r\275\037\324\035\275T@-\275\005I\016\275\004\0107=t4\253<\026\351>=#\324I\275\030\037\247\271@J\013=\354\251)=\273\013\007=\004\331\326\274C\216\"=}L`\274\321\257\362\274z\312#\275\321\035C\275\342\325\301;%3>=\363\267-\275\254\3766=i\023\227<\370g\025<\271\352O=\215t\034<\366\224\013\275\322\336\363<\366\204\017<\325\316\000\274\201\242\'=^\201\333\274V\321B\275\241\246\214<\255\253\343\274\305\227\026<\335\330\014\274\310\344\035<\251\365\226<?6l<\203\327r\273\206\373N\275\366z\253;G\221\273\274\025\271&\275\274\222U=\025g\"\275m-.;Y\242\006=<\267\240\274\352@z\273N\300\257<2\202B=\316\375!=\243\255:<\301r/\274\312\275\277<,\217\306:\320\303\202\274_y\001\274\325-7\275muA=\"\032\033\274d\267\244\274\210\2470\275q\302\033\275\364w#<yI\233<\256=\214\274\'\333\031\274O;\243\273\2505n\274\320\210B\275\234sK=\023\311\236;.\023\264<\365\305\2409c\324Y<\214\225\027\275*\307.=\243\0359\275\"\027\322<\000\016\324\274\222\211\372<\006g\023\274\257\200\013\2741\353:\272\022}\026=\037\\\260\274.M*\275d\277\303;M?\331;\n.\313\274K\273\363\274-\0325;+\242\014=\272\363:\275\3160\272<\335\016\300<%0b\2732\\\360<\001n\314\273\216g\025\274!\377?\275\351\030\313<%\316K=\376iR\275\206\273\224<\017_S\275\013\336\246<\313\271\026=\020\317Q\274\317iN\275\356\270 <\206@\031=^\255\253:Z\2424\275\224R\006<:\300\010\274\343\273s<\032 7\274\\M\244<\345\360\242\274\372\003Q=\245_\362\274\202\205\020=\364\032\374\273*89\275&\031?<2\322E=\202\033\322\274+\200\313;\306\205L\275jB\200<\315\312\025\275\375\370\337\274\366\366\033\275\250r\260\274\313\036\022\275U\216\265\274\231aZ<I\"\260\274\235\302\321<\1773\006\274ei\004=\"R*=\226#\325<\211\237\202\274\006J9\275(%\247<c\022.\275\214\235\241\274\225r\215\274\254\227\267\274j\314/\275x\366P=\336\2259=\354\374\003=_$\207<,\202\032=]\024^;;x@=\207\353\241\274\272\340\363:\245\314w:\253y\307\274\234H\301\274\332\224j<\305\270C=N\326E\275\370\010C\274\247G\237<bkD=\214\000\031=\345\254\375\274\007\223\222<\322\004>\275\200\301\002=6E\314\2747\271B=\354\312*\275)\r\225;_vV\275\227}\340\274\254\202\231\274\022S\022=F\200\307\274~W\246\274CW1=\246\2771=\310\307\220<X\n\370<\376\214\371\270\360\034\304\274M\350\352\274\204l\t\274\007\247\346\273\031\262f\274\251\254\002\2737\360!=l\363k\272\320\251\242;\311w?=\003\372\334\274\2547@\275\\6u\274^z>\274\007\360\021=\030\311$=\033g2=\337\204H\275\262c\017=\217Z9\274-.\273\273n<\006=C\225\300\2731\362\262\274\326o\227<\206x\t\275\017\220\316<\024\'H\275\370\031\233\274\351\251\363\274\035C\261<v~-<S\242\302\274\220\033\307\273\363s\364\274\014\237\246;\225\337\004\2756\022r<\031\024\234\274\200\336\r\272\340\237\235;\262J\257\274\004\321A=\342\001\273\273Z\322W\274.\340\002\275\233\350\024<0;Y9\2660\357\274\273)\374\274\365\002\013\275\3037\202\274\353XI\274\244\\\007=t\270\2329<g\010\275\273\207\255<cr\371\274\255K\253<\366A5=\341\'B=\354\000!\275\254\010\002;\212iJ=\013n\255\273ON!=/\303\036\275\nN\026\275kO?=\334\301#\274\275$\227\273\312\357\271\274T\016R\274\324\317e\274\330\0233=\377[\334\273(\355\210<\307Y\344<%\3542=\023\325<=\357\223*=\255\346l\274\206\375\014=\264\031%=\245u\022\273\032\221&<\302-\272\274\250O`\273\265\253\326<\355\340\337\274\035\240\224<grC\274\'\351\210\273\251\0145=\352\3039\275\220\300\r\275\307N\016=\253m\356\274\t\351\263<\002\242\026=\314\247\224\274\210\351\007=\377\236\242\273\223\262\033<\373\234\306<\"k2\274P\256\034=T\207\367\274\341\342\025=\200Y:=K2\351<\246/*\275\3345U\275\371cI\274qZ]\274\231;S=\224T\017=\026\335\275<\251q%=\241\022\237\274\243\210\215\274\025\211Q=9\023\026\275%\330\334\274\354\376\207<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
