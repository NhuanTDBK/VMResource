node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2090
          }
        }
        tensor_content: "\376b\030=W;s\271Q\247\001\275\373\010\335<{Ce<?\033B\275\342NH\275[6\014\274d`U=Qz3\275\377\215%\275?C\213;\376U\000=!\352G\274$\032\227\274g\016H\275\240p\215\274\204G\227;\262,\271;\0132\276<\242\027\341;\013o-<\307\025\374<\313\207\037=\311\220\005=\340\230\316\274R\306\t<\347\203\037\275[\256\003<\243UH\275U\201\t=\236P\273\274g\310C=\'\314\016=6\211H\275Z\2778\274t\264\252\274\221v\352<\300\3328\275\332\214\232\267\203P\023\274\033\302\275<\241K\206<\013\215\217\274\366\246\210\274qp\333\274\224\235x;\337\247d<J\t\377\274\345k%\275\224\264\005;l\312+\275\333\371\032=\344\3211\275z$\343\274\210(\343<\000WK;ME(\275>\275-\275\220l><2\2206<\024\355\257\274,R\354<\260^0=\243\031\277:=\313\277<\345lY\275\276V\234\274\324:Z\275{\371+\275\255<\020\275X\010\035\275\016\362\254<|u\035\275\332\2420\275\001&;=\364\332\231\2730\033a;\344\211Z=S4\034\275\332\365X\275\351\210\305<\024\277X\274\361\t\220\274\263\023\247<e\236\'\275V\305\374\274:=:=\242(\005\275\324B\030=N:<<0:1=Q\332V=\037\371\376<\370\357\032=\365[;=\362FF=\226\'5={\031\251<O\306J=\330\234\243<\006\324\316\273\241Q\321\273\005Gs<\246\375\033\275-^>\275\377\252\032=\377\036=\275\302\021a<}\325\310\274.# \274\353\314O=\342\350\246;&\356}\274\223\275\277;\247)P<\355J4\274(\320*\275O\217\"\274\034\0256=\326\300\256\274g\321};\326U\010<\020\275\341<\215D\034\275q\367\224\274\270\277\357\274A\2334=\237C\n\274}\346\325\274\307\256(\272\207\361(\275\213\025\264\274\000z\361<0\205\036=\020\265(\275\022|\305\274\223\335G=\ry\376\274\004Y\032=@\371\203\274\007\312S\275\235\337\021=\306\037U\274\265\201\026\275]\333s<\374y3=\355\343\004=\0141\331\274\002,)\274\216&\3419H\306F\274)\277|\274\247\r\237<\307\275J=\343v\305\274\326s\251;\236:\241;\253\304\223\273\25471=*\307\324<\337\205\004=Q\251F\275\013\212\357\274\374\357\346\274\363\376.;bK3\274\336\250\r<L\213\271\274 oJ=\324J\037\275\344\nh\274\010(\364;0\355\275<u\276\244<)\302\346:|\250\013\275\331\262%\275\3028\021=:\203\262;,\355\305<v\3413={\201\"\2758\367\225\274m\242\227;\320\t%;!\224\255\2749\3713\275n\275\010=F\210y<o~;\274m\302\347\274 \205\272\274\341\020\362\2733\326\235\274|\366 \274\336{\265\272\264X\033\275\223=$<P\210\342\274C\n:\270U\025\010\275\254\327\276<\007z\024\2754\357\034=\245\376\021\275\220\n!=\346X&\275\362\020\325<h\331\003\2748t\036:\315\325\263<N`U=\3577?\275\241\345\213\274\320\035@=\233=\033=\006\276\016=\212#\024\275X\230J\275\307\221\035=\234l\025\274\254\234$\275\006m\253\274\227z\354\274)\307\267\274Z$\017\2734\302\202<y!#\275\301m:<&\3063=\341\273\004=1\001\337<H\304\352<\326\214<=\204\014~\274\355\250!\275_\2046\275X\207\001\275\331\362\360:\231\334\374<\2242\314<[\023X\273)\375|<g\342\031\274o\037\264\274\310\211\020=\346\214#\2755\321I\275Y\372\241\274\202\000V<\213`\021<\006W\214\274w\362I=^v\014\274\262\232\001\275?u:=\034\013S<<\222\362\273:\032\003=[\330\212\273\241\362%=x\301>;hV\340\274\032\276\342<\360\263\001\275\000\327\017<]9\352\274\301\3314=b\264\014=\216 \306<\271\2300;Wt&=LsV\275\032|\"=\223\322\302<\007\353\370<5Bi<\373\231K\275D\0337:he\237\272\324\307\215\273z\302?=/\257,\275\334\225$<\211\370\250<\313`\357<\301vY\273e\312,\275\245\216\273;\263\221C=\373\371\244<%\233\334<\210\232\257:\210\272\327\274\343\234\315\273E\261W\275\014\230\204<\223\006\022\275\222\021\256\274\363\217Y=\316\326H\275\227\355\316\274\264\217\305\274x\014N=_\233\033=\006\016\312;aO\310<\022\307\304\274\271\327\370<\214\306\035<\251-\313\274\222\013\324\273\3143J\274\346%~</\240\320\274\356\355)\275\242\246\340;D3\242<\335\247\310;\270\351\240\274\026\2657=NH5=\214\275s<\320_\304\274\346\2334\275\335\375\177\274eBe<\371r==\332\371\336\274\002yt\274\333Z+=\355\250\025=\210AL\274\177\322O=^\251\361<e\252\035=\302x\'= =\254<AqN=\347\235\204<\333\212O\275\235\307\204:\320\177\357\274\033hs<\343\353\032=\273T@<Q\361\323<\020\301;\275\001\342/\275\024\252A\275\037\201$\275:tA\274\025\3067\273\310\016\'\275\343\0264\273\\\n9=A\036\022\275\276\037\366\274\213\024\017=,\030\t\275[R\324<\203&3\275\002U\304<\350+\007=\2477r\274\341\215\340<&\2151\275\223Mb<F\3163<\020E\307\274\360\203$=4G\030\275k\310P=\337\247P=\237;\205;\340\252\323\274\024*:<L(!;na\245<$\257\275;8\033H=\345*\322<\243EK=\025\371\010=\332\030\351\274\270L>=\372\370\025\274M\251(\274.\315\227\274fE\007=P,w\274x\034\"\275\313\346Z\275CX\003=\221\241\355\274E:\251\273z,\032\275V\257\276<8\031A=N\0107\275h\335.\275\232\354/\275\027\2236\2754\300C\274\026\325\306\272\024\261\364\274\022W\017=\016\3567\275\014\207y<\023\261\034=n!E\275\360:\026\275!\001>\274u\3111=f\251#\271@\263\371<\n$\322<S0\010\275\331m\330<@\254V\274:3\257\274qX\313\274S&\024\275\021%)<c\232T\275\330\307\217<S\257J=\300\317\213\274\215c:<P{^\274\210\200\023=\211\340\037\275\236\367\360;\216\240\031=o\324\327<X\302\356\273\210\217\311\274\265\303\241\274v\307W=W\2134<\365\202\246<a\226\341\274\332\262L=,\301\010<+?\301\274\345\332\232\274\267\225\216\274\000e.\273R\214\264<\260)\007=\332f \274\365^\306\274\023\361\020\274*1\205<X\317\370\274\303\313\334\274@\332/\275\331\r\020=A\233\375<\314\256\233<,\201S\275\331\'\244\274\210\373\005\275\001\002g\273\371\241O<\005qC=\354\356\351<\227\'\263;\002w\212\274\244\tZ<sx\006<\"&\037=Ai/<w\344%=DR\023=\240\022\322\273\245\345Z=e\013S=\317\340\213\274\013x0\275\206\265\035==\023^<\322SH=\004\230\254<\267I\257:W\213\315<V\311\212\274\314\2320=\2666\034<@I8=x<\260<\275x\361<\000$q;\036\214\346:\334\035\202\274\204\266\351<\360\031\2458(&\242<G\034\271<^/T<\236\230\r=l^\006=T\374w<b\2660;\036\224\300<\213\200\026=\330\255\360;\327g\273<~\354\272<\214K#\275\340\236s\273\032\323U=\347\226D=\374\246\266\274\311\022\344<\301\270A\275u\245\017<\315lJ\275\373\342#\274\312\004=:^\031\375<\312\024\205<S\247S\275n\020\307;\243\362J<\255\312\323<y\220\312<|L(\275\0373\016\275\300\t\343\272 |\341<\335\352Y<\210Q0=n\223\350\274\266\3744\275~^\r\274\317\243\006=FyQ\274 \200\r=\350h\337<\204H(9\344w\301<\220\235)=M\335/\275\024i\373\274\350\373\345\274\017o&=\245\030\023=\247\301\010\2755\257U=\273\325%<;\313\344<\351\033Q=\261\027N=\027\n\230;!t\024\275\005\264F\274\303~\306<\256/\232<\377\007\312<^]=\275(5=\2743\0024\275\275\031\027=\023\270\255\274\260\245V=&\303I\275z\323\257\274{\317\270<~\005(\275\2500X\273\326\302\277\273\225l+=\270(w;E\235Q\274,|\035\273\030\272\t<<\277)\274\223\312\n\275FUW=\337\007I\272\2073-\275e\017\320<tvS\274\252\233\355\274\317\374\026=w\036\200<\226\343\003=G4\371\274\031\310\017=\201>\025\275f\213E=\367\366W\275\304\217\264\274\362}\337\274\024\314\030\275\257\023\313\274\230\3743;v\023\252<\252j\r\275\2010\034\275C\216+\275\353\311@\275}\353i<\300\034\022=\017~\320<\024y\221<\265:\002<O\252\247;#\260\204<\274o\215\274\373i\t={Z8=\271\252\232\274\360N\264\274\215G1<\277>\000\275\023\320\362\274\350\247\301<\377\273\037\274\317\364Y={\353.=\'\254/=\245\2046<=\021y\274\335\346\274<4\370\367;\002\245\320<!\3246\275ra\021\275\343\233\311\274\261\n\036=\2029\017\275\007\210\202\274oQ$=\275\276>=@\212\276\274\034\320\311\270\0043\353;f.\001\273\035i\347\273\270Gh\274}\220M\275\345\224\303<\0162O=\277\010\314\274\310\017\355<S\233,\275\"\244.<\250@\246\272\200\"\004=\375\326\275;5\205\374<\250\"\376<^\310\003\275x\355\321\274\033\330\005\275\343\310\027\275\356\311\262<\331\'\"=s\276\257<vv\257\274\022\226\025\275p\277F=\002x\001\274N+\372\274\274A\306\274\2110\014;\233.6<5\367\355\274\213\t\013<!\0059;\313-F\275\014\300)\275zQ\t\275\212^\247<\026\350\021\274\214\023==\245y\001<\232\361?\275M\2035\275\253\\1\275h\035\'=\255B\030\275\213>\245<\032\236\257\272}\276\"=O\303&\275\312\007\024<!h\000\275\207(-\273\201\264P\275\2625\024;\232\3021\275V\241\'=\220\215(=\364\226\022\275\224\371O=\247\263\025;\020|D=G\211H\275\256\003\234\274\"}\347\274D\377\344<\250\267\017\274Z,\333\274\361?$\275\203\323\241\274H\016&\275\331\037K=}\356\020=\361\017\224<R\234\374:\346\3510=\246\227\276\274\367\353\306;r\376\014\275d\301\371:\216\2017<\365~\300\274\335\221<\275%\"<;\217\370.\275\334\276\266<U\013\n=Q\006b\274\272\342.=\3631\260<\013\262\007\275\351\300\023\274pdC=wT)=\310E\267<\236\273\n<\031#\254<\224B\355\274\220 \322<?\315\002\275\275\331\320;\351+Z< t\231<X\246\016\275\222\375U\275Q\342\351\274\351\211E\274\"\265\t=@\036\341<\270\340\023\275\244\336?=\334\202==\023\263\304\274\364\345\221<\262\225T=Q=p\274\036@5\275\255\370\032=\376\326\033< x\206\274%5\010\275\206\037\345\273B-\363\274,\355T\275\361H;=h\302\333<\222p\277<\357\365l<{\276\333<\246\235S\275\3261\211\274\203\023\225<t\2232=\246xC=b\362\252<\035\260\347\274\362\021\020\275]\200\r<_0\037\275\245TQ\275m\0306=?6\035=+\317J=\312\253b<~\246\250<\266\005\014=\246\247\261<\336d6\275z\267P=d\201=\274@\364\327\274\257\302\274<\341\t\001\275W\n\004\275\305\024t<\320H\013=\023\276\206\274\300\370\"\275\210+>\275\272\021\034\275\266,9=\320\275S\275\017K\366<\'\242)\275z\257\273\2749\323\221\274b\212$\275\250\327\004=\035\032\021\275e\036\263\274\376\"\025;\3340E=\266\367\244;\240d\367<\014\177\003<\340?k\274\3203\017=\010%\202<w_\247;0\231\246<@\200\233\274\202\321V\275\32289\275N\350\360;`\231\211\274\016\003,\274\301`\201<\245\310\026\275\016\036@\275\244\007Y\275\270>\032\275\204f\t\275R\362\217;\227\344$\275\002\343\221;\003C\000\275\216]X\275\024\367P;\234D\002=.\257\244\274\341\334d<\271\025\251\274i\2174\275]\277\226:\322*\227<Sy\211<\347\300\212<\345\3125=\347\301?=\245\233\332\274\354\t\006\275)\000S=\315A\210\274\274\320\237<Hs\316;\001\025I<\221oO=N\360B\274\275\013\343\272\231\010\022\275\315\2100\273\0178\n\274\037>?\275\250\226%\275\265;\371<\020<\300<\315I\033\275\2549L\275nF$\275\236n)=\310\024\376\273\034\244\235\273\'D\361<:\2727\275Z,\023\275|K\031=\236h\320<\213\004\350<&\245\257<\221$\337<\362\027\025=4\"\304\274\244uO\275\251Q\254\274 \360\r=c\345\000<C\234|\273b\373\327\274,\312\010\274,\231\035;F\216/;\032\010\264\274\303N\023=%\034\'=\241\0273\275>\277g<A\320\240\273\344~\024\275\352\341\n<f\314x\274\323\216\256<{\223\256;_i\316<\004\300,=\221\345\'\274/\2456=+\017\275<-\315#\275\377\027\331;\021F\213\273\\\214\030<7\211\244\273\221\251\222\2740g\201\273G\315\373\274B\334:\274\326t@=L\252}\274\331\322\226;=\213\237<\202V*=\035\320\341\273\007\271\310<\263\034~<{\351O<*{\273<c8F=`\305R\274\230\024\372\274k-T\275\327\002\265\2747\270\t\275\027R\204\274E2B\273J\000\273<k\312c\274\312\246\304<e;0=\254<\256:R}T\275\002K\237\273\267r\t\275\231\213\220;\006\253A\275l#\003=\313\375\033\275\246,\334<\216\215\202<\214{\000\275\263\350\023\275\233\236\350\272\265\320o\274k\203\214\273hN\215<\230y\317\274g\211\025=\232\346\263\274\2034\370;\247\262\325\272\036\347\017<C\344\024\273\353:\346\273\376\261 \275e\251\017\275\237\327U\275%\222\023\275\336\3442\275 \031\037=\322>\330\274\276\023\003\275EUM\275$!\272\273/\tF<A\260\032:\010O\026\275i\366\023\273,\224\216\274\222\237\241<\260Ll<\273\266G\275\212\305\227;\321L#=\341\256|<;\347\017=\303|\273\273]W\326<\001\355\370\274\323\332\036<t\016\213\274AG\204\274d5d\274bq\244\274\"\244\202\274\020\342\276<A\373d<o\013\013\275\320\020\031=\036\002\'\274>\306\350\274\213\'\002<%\267\001<\335\353\225\274i\232t<h\310\022=B\377\022\275>\274M\275\377pC\275\026\307+=GS\354\274\373\233\356\2748\376\212\274\014\225K\275-\226\370\273\201\334(\2750\301-\275\363\375\256<F\344g<M8/=\230\0107<}\203Y=<\034\226;..\236;(gL=\3560 \275\332\237T\275\377\"J\275\311\303Q\275W\253\224\274\314Mv\274XS\025=\327\206\263<7\260\"\273*X\337<\'\204\201\274\302\235\r<\313\300\013=&4\t=\371\025u\274\224\317\374\274\032\347==\206\274\002\275\201\203\030=1l(\275\306\342_;\270\354C\275\222H\253<\373\276N=\346\006\034<\264\035!\275\332\364\273\274\007\006\330\274\2018Z<\2572\022<\007\2009;E.W\275P$)\274\307X$\274\272\230\033=\342\243#=~\233\272<\345v\026=\322v\340<\257\337\247\274\333I\317<!\223J\274\264m\351\274\343\371;\275\253K\034\274\022\211\215\274e\334$=Fa\343\274\246\t\346\274W\221\004=\212\303@\275\364\331\231\273\031\235\000\275\037\376F=\246\037\323\274\251\023y<\255F\372\272\033\224\237<Ke@\275\005\014\236\274\374\030H=\341>F=0\246\r\275I\375\337\274v\2221\275\317{\322\274~\351\326\274tD\010\275\232A\375<\340\256\014\275\232`1\275\001\305\031\274\023Z\034\275\001X\256\273\240\242\201\274<:\301<\266H\022\273\257?N\275\035\264\027=C\271\037\274\272\310l\274_&Q\275\232\241\212<\\l\026\275\336\t\254\27305:<[H\020=\237,\324\2741~\220;9\022-=\024j/=\330\341\211\274\332\315;\275\"\024\'\2753\265\033\275\216\240\223;\301z\014\275\250\030\037=\242\263Q\275z/0\274\023S\030=\336Fb\271\226\377-=rY\020=T\237S=\200K\274;\361\205\031=N-\031\275\224\005\340<\311\217K\275[\263J\274\302P\002\275\337\2531=\300\230\002\273\027\"\033\275a\315\222\274&\036\332<\203\215\034\275<\214\234<\304\324\030=\372C\351<\320<\214\274c7*\275S\205\020<\301\3720\275j\366e<^!\031\273%\r\r:\226\022A\275\260\3166=m\217\257<\207WS=&\350\000\275\215\200\020;X\263\257<\317\031\244\274{L}\274,\266\323<\210\3163=\361\027(\2750{\313<\363V}\273\273\365\013\275\321\236\355\274\010>\006;\270E!:\265\260B=\t\247\373<\303\232u<\362\260\362\273\227\231\014\275\266\022\017=j\317N=\000\375\211\274W\377\214\274\016\355\001=0R\355\273\217,\247\273K1:=\307\265\203\274\225\360\375<\274\331(<\232\273\317<\255\372\006=q\235\314\274XR\023\275\263\030\033\275M\374i\274\256\353\013=\230\244\277<\'H]\272\342\355\"\275\207\231\324\274\320\006\001=\016\330O<\022F!=\307o\255<\\\304%=\211\"\030=\346\201\023\275m\274\300<\260\264D=0\026\264<\235\\\375<C\233 9L\027&\275\332~\017\275D\224\033\275\234\203T\275)\243\376;\013[?\273(\317\030\275\332\375\014\275\245\304\363<R\3542=\\\215\342\273\233|%=\242_\220<\313t.=@\206\370;W\3335\275\035\317+=\255\'\361<\214\203\006=Vx\373\273\005\333\227\274\273\320P\2750\336E<\2449\035\275x\344\247<C+J\274\2737\260\270R\334\240\274\010\235m<\263?Q\275\260\335\222<\014cA=\341KX\273\030HH<vtZ\274=\245\270<\331&\216<\235\231\277<\t\356\365\273\'\327\246;\323\217\010=\334\301\376<&\313\000\275J\242\304\274+\356\376\274~u\036\275\007\336W<\025\004\031=\2010a<V\034k;\325@\022\274\n68\275}\357\323\273\335`\033\275\23550=4\016B={\252P\275\004\007N=\225%\004=\342\263\032<\275\315\211\274\311\232;\275\031\352w\274d\272N\275\243}\031=\27577=[5\247<E\017\340<b\320\361<XWX<\000\224\002\275\031p3\273\275%<<\301[\010\275a\233\004\274\335\334N\274\355\203\275\2744\037\354\274:\303\361\274\234\244\022;\222\311\337<qs\014\275^\201J=!;\007<\033=\224\274\036NL=\305c%\275\367\021\034\275E\304&=G]8\275\34332\275\254\021 =\204J\014<\365\211,=\3148,=\244\026\037\275\227\327S=\025\235#=\341GT\275\377y,=\356r5\275Xt\026\275\231\026\307<N\321?\2756\230\017=|\241\013=N\210\274\274\333\364\214\274\315u-=\224\273\367<\243\363\"=\263\254:\275F\224!=\242\212-\274\371*\022<+\3100=\327M\210\274\213\226D\275\344\036P\273z*\301\274\341\200\314<\305k\021\273 \272Z\275D\360<\2752\276?<cK\t\273\300\'/=\267\253I<P7\336;-\332==w}\251\274\252G\000\275\254_\240\272\006\244\n=\322\3042=k1+\275s\335\271<mY7\275\321>\013=)\3146=\314<G\275\254\210\237\274t\205Q\2750\262C=\352\333\031<=gU\275\344\232\210<\343Q@\275\232g\305\274\024\254<\273\347u\326<lh\370<\217\262\206\274\'\372 \275\373\263\027\273\031\265\222\273\374\212\365\274IL&\275E\3528\275\25653=1Q=\2749k\002\275\342\006\274\273y\372\014=!\254\323\274.yP= \216\005=\\0P<\r\247\277\273\220\003r<\364?9\275\022\372V\275\342j\005\275\204^\271<\256$\032\275\323c\301\274\220\207K\275\357n4\275$\234C<!\270\274\273\tlX=\364\374\277<z\256\\<U\233\370<\264\201\361\273\343\251\014<\"ph\274.\226\036;\301\347\266\272\017;:=\361\'\260\274\302\0242\275\345\017\"\273\r\322\234<K W=x\242\303\272\307\035\376\274H\2704\275l\000<=\307[)=Gs\267<\337\344!\275\326@X=?\341D\275\364u2=\341mn\274*\314\371:\335\211\225\274\327(\215<l\017\371\274u\027\206<\262V\010\275\351\356\377<\240\365\265\274\365\332\024\275\233\377\347<\357\324\363\270m>==Y\n\363<\250O\t=\027\2200<\263\237\001;\271\2727\275\3745,=\"\330\305\274$\336\035\274\032\201==\266B\n\275z\025\002\275;\264T\275\361\207\033=\347\371\256\274\207\246X\275\374\204\005=\326Vo\274\246\270\300\274\235\222\366\274\354%\022\2752\267\324\274\267\370e;{\030\210\273~\316==\236]5=zz\026=0\316\272<\312\242\021;\354\000T\274\311}\351\272\025\3308=\353\203?\275\300\331\243\273\3405\204<\000\001\3028\215\370\245<\354t\014\274}\2037=\205\3335\275\226\247\215:\2021\344<\342\206\204<\200]\022<\023\301\252\273\276\'\'=/2g<\350\003\001;?\266\016\275$\nS\275\345\032|<\317\243\341\274\2574\001\275\253wR=z7C\275\321(D\274\247\362\007=\205\222r\274\362GZ=j\346\374\274.\257N=\257\336S=&U(\273\310\371\202<\335\014Y=\016\210\"\27375.=\327\201\024=\342\234E\275\230\'\017=_z\001=\rz$\275\224\351/=\023(\005<\307\315\253<%=\331\274\002\354.;{\242C=\005\265\030\275R\231\240;\177\364\306<f\245v\274\333\324\255\274!\277\036=~\027L\275\264\310\"=4\337\300\2744Ke<\305\2604=\027\272A;\353\325\366\273\323\253\250\274\305\256\034\275\363\266\370<\320\t\242<f\026\r=-E\323\274\305\2553\275^l\223<\3008\247\273\326\262\216<\323\337U<E\360Z=\245\333+\275wpn\274\035\242\203<\3754\013=\276\254\276<n\033 \275{\t\017=mh,==5\037=u\244.\275\022(F\274\244\0306=Z@ \275Y\024\022\275\210BK=\356-\211<\325\263\033=S\3428<k\223B\275[d\310<?\325J\274\266\246\336<\201S\032=j\247\300\273X\374$\275\225\361U\275\036<\221<\202\245Z\275 9C\275I\0271=5\221\001\273pF\001\274{;-\274\227\220\342<\037\333+\275Hy\000=\023\034\342<j>!\275g\t\000\273\305\371\273\273\177\3033\275\377\243\355\274*%l\274)-B=\321\322\335\274-|H=s\233O=\332\364\365<\371\000\346\274`\320\214\274\212\243\013\275\266`P\275\262U\003\275\260kL\275\341\245\362\274\323\272\037=cI\303<?\243\236\274\210\273\017=j\004\230<@\344\030\274\257n =\245\303\311;\227j\256\274\016\252N=\027h\236<..\317<\315\323Y=\244M\'<\222a\355\274\351\007\250\274;\232e\274\315F =\225\2406=\03322=\274\2419=\261\3254\275\026#\2519\256\245\020=Q\231\252<\001N\352\274\277\257\325\274N7\'=\224\031;=>\000\264\274@7\t\275ob\223<3\037\276<s~<\275\002\241\r\272|\201B=\220\346\010\275\020\247C=\347\257\236<w\022E=\020\203\374\274\206\007H\275\324\326G\275\267B\037<7\n\233<\3666\365;\344_\006<\017`2\275\010\343W=_\3604<\342T\022=w3p\274\211\356\373\273\314nD=y\014\001\272o\305\214\273\262\354\343:\304\244\n=\304f\303<\250O^<c\273\256<\270\264h<\022\231\032<\334\314\020\274\351\261\254\274\250?\367<\306]\006=\312\022)=\364\305\020\273\220\036;=\244g\306\272kPq;\335\352<=E\244V\275\253u,\274\260\337(=\255]\005=\230\314a<\312\022\316\273\236>I=\034%o\274w\346\357\2740?*=1\013\356:\023\307\343<\264\235N\275\353%X\273WJA\275z\266\311\272u\216N=\237\231\232:\032AT\275hQ\265;\211\217G=AAx<c\307S=h\230\022\275\233\237\016\274hjC\272\005)\247< zC\275f\330=\275$mR\275\310\246P=\021W\301<\274o/=9P\345\273:\037\217\272\223\031\266\274\244\004\345\274C\276U=\254\237!\275\260\261/\275\267\030\366<a\354V<\216u.\275\'\345\t<\025%\212\274\013\220&\275\217=\002\275\351\360X\275\323\375/=\2578\367\273\272}\333;\217y\360<\367\273\336<\363\320>=:\020\005=~\323:\273.$l<3]\035\275<\325*<B\317\223\274F\310!<bV\237<lU7=\233b\013<pO\265<h\342\240\274\275(\265\273M\007\"=\216\210\230<\332\235\335\274\035\356\211\274}\200x\274\266\207\035:\010\221r<\345H\347<(\335\260< a\305\274\263|\372;P\230C=\215f\300\274\347\362i\2731H\'=\201VS=\313X\310<\3278*\275K\313\236<\305\314\260\272\022\023\360;pN(=\215\267\363\273h\321$=\376\237\013<#\005\335\274\316\321Q\273\226\321>=\022\021\206<\035\336\201;\354L\020\275\246\016\013\2755\303\371<\0238\201<\026PE\275\337\363A\272\211\210C=\372\000\370<\357\224\026=\032zA\275\215o=\2755\275\020=7\272\215\273-2k\274O\027D=\027l\302\274=a\227<\036\340\232\273\251\216\312<\202`A=\351{3\275\016{5=\361\023 \274\226\247\007=\357b\347;\3318\263<7\212\223\274T\016\017\274\240\217y\274\362\333\336\274\337\302,\274\"\206q\274$v(=\215f/\275\177\202\376\274\027\351\002\275:\203\213<s\030\327<{\033U=\364\3253<\253\333\004<=\345\233\274mI\244:\263\247\363<\177j\210\274\333\256\023\275\243\367\276\274\373\351%<\265!\202\274\375\025\302<c\221\246\2748\267\351<d\343\267\273\\\2111=\371\373\305<\240lJ=\374\373Z\275\242\316\002=\234\325W;\244\211\002<q\014\256<\323\256\037\275\2736\302\274_\334\024\275\222\341#\274\237\337S\275+\225:\275\023k\024=\375>-=\237\216\031<\365d!=\006YG\275\037#\253\274)\201\004\274/!0=\251\256\213<\326]X\275\275/\217\273\240~\213<\025\0143=\202\253C=\262^\220\273\017\320\355\274\245\006\376\274G\301\007=\275[M\274|\337p\274\312\361N\275\231\313\021\274\345\017\007=\360\0371=2\013~\2743\224k<@\026\203\274\365\265B\275V\225N=\327I\034={<\016\274\340`\356\273\222\250\300\272\332\371\372<\025\010G=Y\227\013=\346\325H=\364\225\003<4qm<5q\376\274\016\373\010\274\376\030\004\275\023\325H\275Q\001Y\275m\330%=\226h =\255\"\373<\236\362\274<*\376\312\274\352\364X<\t\350\024\275\334\311\203;\206\216H\275\303\203\371;\235@L\275\376\322/\275d\321\225;l\312\353\274\241\266/\275\'/5=\036\360J\275\262\3064=u\270\032\275\013/\036;\375\360 \275\236\267D=-\234.\275\226\2119=\n\303?=7\224\271\274\343\206\"\273^\317/=\266\230\373<\272$\246\273\244G-\275m\315Z<\301d\250:\353}7=\027\315\027=?p\251<\213L\203\274\202\374\226\274\374\251a<y\320\301<\242\247\216:\203\303B\275w_H=\202\314S=hqB=<\207\024=[|\023\271\212\203\214;\311\014\307\274\224\270\033= \362K\275H\tK\275t\235`<\013\263\360<\315d\177\274Ch\021\275\226\032\214\2749F\377;Y4\370;\206\331\216<\310vy;\220m\231\274\321B\231\274&mM=\301\341@\274@\262I<\212EP\275o\357\354<\316\310\352\274X\177\261\274\234\327\001=9\305\344<-c\270\274\2177V=\027\201\004\275\006\'\241<a!\020\274V\307\240<\367~\262;3<\344\274\2638\326<arB\2749\3047<<\262\023<\266Q\313\274\266u\017=\256M\265<\312\237\"=\314\303O=\201:>=\2256\n=I\232*\275\324\327)\2748K\"\275\307#\267\274R\037G=\211\323\346;\362\236\323<<\355I\275\344\000\263\274\270\n\324<\222v\025\275\355\0376\275\245\244/=tXb;\363\231!=\025W\233\274\311\341\035<\234\'G\275\336w~\274\205\210)=\246\242\325\274\010+\022\275\304\261P\275\201if\274\222\3347\275k\010D=\346\343\323\274#~\034\275\277\356\357:6\341e<\202\225\263\274\215[\022\273\366\263\027=\360\233\220<^,K;\356/I=2?O\275\374#U\275\233\356\030\275O\321\024\275\210\027\014\275\254\306<\275j\211|<H\320)\274v\310l\274\354*?\275z;\000\275X3\335<c9\244\2740\2518=P\374@=\223F\320:\344\360\237<\207kW\275\377\n\357:\321kQ=\214\214\224<\004\342)<F\3706<\3771\372<\01752=\232\224\377\274w#F\275p3\"=\231\025\006=\202\251\230\273\301|\303\273\353\376$\274\006\024\273<\316\002\373\274m\330\350\267\241\224\021\275@\335\021\275\254\223\230\274\252\227H=\334;1<\220\210\350<\242\260D\275\026h\036\275\365\261\375<\342\367\317<K\375W=\350\260\331\274\005^\201<\250?\347;-\266\n\275K\3031=Z`\236\274\330\017\210\272\225\257@\275\367\367\350\273\004\371`\274\226\277\361;\363\314\311\273n\273\"=0\305&\275\013\307\277<wu\270\274\337\341W=\251\032,\275=s\276;\226\021\026\274\345|D=\330\364\211\273tKr<6\243\364<\365\032.=\327\034I\274\272\342\020\274lU1=1\2733\275\365g\357;\366AX;cv\001\275*G\010\275\377\221<=O1\025\275{iL\275\2149\021\275Iu==\336J?=\003\324<=L$:\275!\035\204<\262p \275\325kg;=\2368=\311>\0177X\034\006\274,\254\014;]AV\275\031MU=\266<\275<\223\2632\274\336\014\312\274M\275\255\274\275\314L=\331\362\020=1\254\357<[\210L=i\356\221\274\'R\032=\"\356\245;\333\037\016<8\032\'=3\3775=\"\262&\275d_S\273L\325\301\274\000\346\020=h\026{\274\003\323\200<5\311\035\275\006n\235<D\330c<)K\367\274\222*\272;\337\202\"=\306\220\016\274NEX\274@Z\200\274\236\213.\275F\221,\274m\216\214\273\003\354#\273\240\316\200<\361\212\363<\2101\003\275\242\330Q\274\'\346\311;\330\010\314:\357\251\364\274\237\356\224\274\001\320\244\273\311\354@\274\333_O=V\024\346<\322\366\223<\361<\373<R\350L=\320\222Q\275\022\032\027=\331h\020\274\203\304\345\274\202\341\341\274\224\267\300\274\265\021\242\274\326\203<\275^\364O\275\002\334\003\273\001\362P\273\353\316\017\275\237\237G=l.\'=\236\3071\275\312\035^<=\246\363;$59=\333e\242\27377\014\274\264\354=<OZ\234\274\205\254U\275/\263:\275\303\243\017\274\225\373A=\241\204\267\274F1\327<\361o1=\352,\366<\\\361/\273\343\273\205<\007\2644\275M$>=3\362\372\273\371\337-=\253\277J=\236\017;=:\001\020=\006>\371<\242a0<\321\002\035=\325\023\347\274s\371\356\274\201\341\025\275:\270\204\274\306\243\356<N\t\036\273\'\355\024=\301\247\342;B\226\264\274\331D\337<\244\336\375<\256Z4=\020\0266\274P\225\242;\030BK=\333\341\270<e5C\275\276uQ\275\030\343S=M\360\236<\267\205\367<IDM\275\354\2209=7b\226\274<Sw\274\211\027\340<\312\360\260\273\177\324\025=\315 \307\274\355\266\362\274cwh<\022\013\027\275\237\027\003\275\334p\000=\270\007T\274\352\331\326\274\310A\325<P.H\275C%S<\207\026\005\275\333,(7\n\232\345\274\276\231\224\274\274\270D\275\200C#=y\252\276\273\376\224U=\242\242\271\274&\265\000\275\325\202\257\274\200%\020\274`\276\027=\260\237|<\317\217K\275m\320A=\314wJ<\177\367\200\273\346\227\364\274\037\031p</\202$\275F\377\004\275\350w\337\274\n\222\256<\371w\201<5\000\023<\266\272\007\275\316\276\025\275$\211t\274W\007\010\275\007\377\002\275#9\254\274{48\275+36\275m~O\275\246\344/\275\026\001\013=(\225\003\275`\323(=\267\016\\\274\\\374\237;;8\223<\013\031\313<\274\032q\274(\370\303\274\226\256\226\274,Xi\273}\354\244<w\007\207\271I\204\240<q\001\357\274\216\022\204<\350|K=\271(\332\274\347\036?\275qA#=\241\222\245\274\234O\003\274@\325\006\275\373h8\2754\217\003\275\244\244t\274\231z\353<<\206\223<\372)2=\250r)=\3206*\275\224O\013<\227/$=\366;\013\275\025<\010\275C\201\324<\311\005\n\274\027N\321\274\301\014\376\274!\233\254<\224\257\201\274Ms8\275o\253F<\220p\036=vlo<\243\260e\274\370\264\201\274\344\027=<\275+Q\275\303\031\252\272\355\314n\272@g\016\275X>/<k\214e<\264\267\355<(\356\305<.\224G\275\036\314\223\273hL/=\302\231\034=\346\253\270\274&j\035\275\360\215n\273G\301\334\274\201\022\n\275\316\246)\273\310\303\311\274N\250\313\270W\251\304<\276\346]\273\227\326?=R{)<\025\2311\275\237\277:\275\270F\245<3)\033\275\265/\353<\361\026\225<\375\002Q=\335\231N=\024\304+=\354.\020=\003\0373<)\r\346\274\226\311E=\342\362\325\274b\244\321\273\261\267&\275\364b\340\274\310YJ=\233\327B<K\310\306<\311\341<=\3479%\275\347\3445=/\217[<[{\260\273uy\324\273,\000\355:\230\311L=D\366\242<\013\372\036\274\300Z\022\275\214\327J\274\367\006\t=\027\2372\274y\337\014<`\264\302<\250sE=\002\323I=\313}\005=V\000\006\275\305\251\201<\342}\343<\227\356\217\274\205\372;=\021\3703\275\177\005c\274L\003*=I%.=\2177U<\303\236\371\273\300\\\336;\271\261\212;FR\364;P\325\004=d@\301\274\327ph\274\275TP=B\2034\275\266\235=\275\276\022\320\274\235\325\265<*\374\277\274O\303Y=\245\026\261\274(j\036\274\222\0327\275\300\210\330\274\222\007t\274\031\205\371<\304\274p\274T\234\376\274j\223\030\275\307><=\031\230\347<\321M\013\275\205\361Q=y\376(\273(\t\002\274\222\365><`\265\255\273*\252\320;\266+\003<k\345Y<\244\251\026\274\272\201x<\276\272F=\251\302\025;\211\362\255<\306\376P<\322\306\027<j/\001\275\206\252P\275\014\030\256;\030\335\006=L\023\303<>\252,=\2162\314<W\027F=\206b\325\272\346\0046;`\3720<]\314\274<W\314\352\274%\370$\275\210U7\274ph\035=\244\tR=\213\266\345<\337\020$9\345\343&=\352e\003<\031\260\000;\033SO<\000\2152<\226\276\024\275\027\337\274<\344\200K\275 \250\225\273p\203>\275a\002\2719\311\233\016\275\3517T=\371\360I\274\221^\344\274\273\363\374<\375$Z\275\275\362\026\274_\316j\274\202M\'=<y\271\2748\303\270\274JE\013=\271@H\273\3673\333\274H\3119<\343A\303<D#%=Y\2351=6\377X\275f\373\021\275\231\355\264<U|\027\274\231\350\365<\347g8\275\322\372\002\274e\315\'\2750\354\226\274GG!\275\005\357\303<\270\247C\272Lc\014<\004n\237<\016l!\275\374\357I=Ges<c\022\006=\315\255\270<j!,<\256\375=\275!+\332<\316\005\006=G\036C\275x\003\224\273Y\255\240<\223T\275\274/\333\372\274\n-\300\274\257\014>=R\367^<\240\004/\275\201\343\026=\357\0240\275\001\271\233<\371\3761=\220CP\274\357J\222\274\300\204\001\275\302\246\315;\336\205\367\274\024\221\252\274\273\372\251<\313 Y\275\310\226J=\0048\216\274Nm\250;N\217\262\273\022#\264\274y\341\253;J\030X=P\n\002<D\234)\275\373\237\020=\270\372 \275\'\000\350<\n\246\036\275*\351\205\274\037\203<;\001\3442<\271_I\274#\234\206<\036!\031\275\271tm;\306\013\366\273\317EK\275\316\314\033=poZ=k\253\r\275\320\353R=\035\325\216<\251\355\220<G\266$=\253p\031\275h\200\002\275D\216\024\275_\230)\275XaI=\250H$=\200\267\024\275\266\261\274\274V7(=\374M\341\274_/%\275\026X4<\227C\003<[Z5\274\032\273\023\275/\343\226<A5B=b\215\216;\211C\214<c\312\001<9$.=&\213?=\253BM\275a\212\177;_\242\"\275\030\005\001=\311\206:=\3359\264\274\323U\263\273#\026S\275\274\243\035\275\377\216\201\274\367`\000=\315 \230<P$\261\273xu\236;\323\341\313<\200\304^\271\007\027P\275\202n\026:\020OW\275\354NY=\317\214=\275\316\033\022\275`\274\022\272\305\027S=0&\304\273U\244\341\274\332\333\327:\017:T\275O\3007\275\3510E=\000\205<=\3764\013\275\\c*\275\375\325<\274\354Ok<\306\227\365\273K\203\357<?\303\000\275S\267.=`\274C\275\237\355M=\251F\032\274q\374M=IX\272\274\322\321E\274\363\244\037\275\201>$=_\t==\t\213\016\274\tL\232\273\213\023[;G\037\275;\022\023\206<\277\310P=\"\302\257<\022\2533\275k9\347\274\216\242z\274\"2\221;\222\235Y=\t]\274<\267\265D=-\2066\2759K\342\274\341\306b\274\375\000\"=\322\307P=\207L\204\273\r\\\376<Z\370\003\273HJ\032\275\232\364\010=\'\223X=\202.\220<g\333\020=\260d@\274\334\365\323<<U\366\274\206(*\275\201\004d\274\031\005\204<\223\227\267<\346\312\266<\306J7\275\223\354\000=\374\236\363:\034\214\356<4\215F\275E\275\005=;\025\211<\362\277j\272\373\022\035\275\356He\274HA\327<\314\320S<\016\344z\273\226\236\374<\243X\017=5\375\353\274\336\nV<\211\347?\275j\223\323\273\215\335(\275c86\275\351\376\344<D\"\010=\206\305\207<F\344\201\274\017\213V\275y%H\275O\357\036\275\212\362Y=p\022\237;\227\n\007\275n\220D\274L-\202;\255\321\341<\243\005S:\340\312S\275\021[c;\362Y>=\264\203\327<p\324>\274x>\371<\364\330\352\273`:*=\243\005\001\275\366y\017=/\210+\273\256\350\324<\001q\205\273s<r\274\"\341\232<%\265\013=\r\366\220<\234\231\266<\242\021\362\273e=\272\274\002?\030=\241\356\314<d\317\261\274O\'\000=\347\023\340\274\243\337\n\275\034^0\274\351\363\027\274\316\255\006<\264\254>\272\020\374\025=\334p\202\274\237\347\261<\264\243\364<j\334\306\274r\314\016\275<\363\256;\004\222\310\274|J\002=S`\220\274Y\205S\274\031(\005=\240\n\242<\311\0256\275\233\303&\275Fd\240\274\263L\363\274\366\260\345<\233\3059\275\334\215:\275\036\253\370\2733\222\t=\020S\251\274\330BL\275q&i;\2771\267<pi\323<\000ER=\032L?=\\\200I=\251\366G\275\024\336U\274\314+\306<Gv\357\274+\035O\274<$T=2V\343\274UD\341<hc\000\275\273\0103=4\236\237<Q\251\353<\237\334?\273\2752\362;\316C\023=\001\0346=\271\361G=\\\302P\275\300\"\210\273\371\211\217\274\344`\007\275\024\256\344\274\342\234/\275\216a\267<\321`\335\274C\3576\275\214O\223<\353\346R\275\032I\026\275Q\027Z\275,\321\367<\27563\275g\227\244<Z\315\024\275\245TO\275\275\320\365<\216\267\006=\020Z\022\274\343D\t\275V\253%\275\td\275\272b\000\373\274bv\276;E\247\325<\245\351v<\254\2035=\360r\207\2747T\265<\277+\250<Li\354<dd\375<\n\360\010\275+\350\225\274\373\324Y\275\3532U<\3331[<=p?\273\343\305\005\275zhN=\035\005/<\021;\021=\342\277\201\273_c$\273*\270G;\217\304z\274\030r\003\275\363\310\356\274(L3=2\010\246<\350.5\275$\231\024\275Ru@=xC\230<\344\263\037\275M\325%=\201\362\324\273\343\033\273<5>\316;>7\034<O7&=\266\3100\274\034{w\273\225\177K\274!E8\275\323PW\275\250h\253<\002\024=<\306\354\364\274\274\314\001\272\322\027\234\274\241\220\027\275+\201\221<\253\376S=\000n\367\274\243\0234\275\364\253\334<R\354Z=\240/N\275~\024\252<\010$\013\275\264\255\233<\032!\350;\346\233\360\273\323\031\014\275\327\246\007=\205\"m<|>\374<\036\035I\275\301~s<\370}\013\274{\310N=\373\354/\275\0132\'\275\302[:=2AL=\242\032H=\302\355\261<\242\253f\274\303\033R\275j;\036\275\2678\301\273\010\273\325<\036\030\344<\236 \314<\0233 =\235\2062\275\033DE\275\302\200\261<\254\'K\275\320\023\222\274\337_\217\274!g\367<bvX\275\270\253\345<3\372\321<{?\032\275\345\305Y<\3117H\275J\343\031;\263n\277\274^\215A<\3442!\275f\376\256<: \230<\272\330\031=\362_\240\273\006|U\275ly\205<\032\364=<\200\377\344<\316Q6=x\215?=\333\337L=\246B9=\3711!;\037\3643;\222\315\353<\230Z\263;@\256\304\272W\312\353\274*sB\275\243\360x\274\243X\017\275\t\344u\273b\020\353<`\367\014=\360hX<P\251,\275\217\021)\274\320y8=\366jA=\342?\265<\013\342C\2725\003F;\232S\024=\250\324 =\310\342\370\274\302\035\034=\000\267f<>\324>=\377\227-<N\256`\274\303Z\365\274Er\177;_\3604\275\001\231\315<\213W\351\272\300\036s\274 \027\336;\0147\327; \014\350<u\251-\274\014cF=\"\3574\275\263l^<\200\022\204\274\267\"\r=\375~ \275\357\007!<\022Z\n\275k\001\244\274\245z;\275\0328\033=g\035\024=E\355\201<\353^-\274\353?\216\274\207\226\014\275h\354S=\235`\352\274o\344\350\274\233-*=\256\324O\275\306\207\305;\333=\343\274\037\023)\275\340\255\324\274\212\357\254;\261\361Y;\0246\335<\325\222\027<|b*\275\325\365\236<\256]\206<?\230\"\275\004\3270=\013\324<\274\r\257\317\274\2225*=S\272\003\275\2755\'\275\032\211H=&\035\247<S$<\275\214\036>=\260u\r\275E<\001\275\271a\227\274D\200T\275\214\032k\274\001\203\000=R\352J\275\317\250\002\275\252{\016=\'\327\201\274\027y\007\275[(A<,?8\275\3303.\275p\255/\275\342\250n<2\347\275<\037\'\326\274z\332L\275\246\234\"\274hI\312\274\030\n[=\255~\275<\327\351\017=oF\204\274\006\023T\275$\315\224;\332\261\024<\247\273K=\317\350Y=\013J\n<\263\274I\275Uh\215\272\317\306\n\275\262\033>\274BO\205\274\221A\366<\216\273\223<\335\213\177< \301\316\273\337\246.\275\3673\340;\257\236==\345\035>=\207\201\301\274\365T\310<\311\274\365\271\023\351_<%X\307<\370r\356<\275D\304\274\323\027\026=\t\264)\275X\2713=\372+\276<&(\001=\315\301\244\273\316\001\'=\234S\232<?$\250\272&d\024=\2238\222<1\350E=\315\362(=\270\355\306\2734mf\274S\265\201<\206\023\310;3F\255\274\227\224(=N+\216<\313J&\274\021\007\377<\254\335]<S*\034\2739\024\'\275\036\021\'=\351WU\275j\202,:\231|N\275{R\016<S\000\217<\354\204,;\317sR=v\311\030\275Q\227B<\034\223\306\274\235F\370<\353m\004=\302W\014\275\336\351\017=\300t\364\273F#B\275N\242\266\274\030\207v<\341\240\254<\216}\252\272\253\000\220\273\2747\034\274\265\272\321<\273\013\300<y\277\234\273\003\373T=\331\346F=\256\'\354;\336I\036\275*\331\031=\013\325A=\330\310\247\273\236\212E\275\256\300\213\274\210M\020;\336\234\033\275g\266\326;\035+E;\376\024W\275\010\037\371<|6\277<\377\007(=\322\200\t\275\373\031\326\274\"\260Y\275\221\345\266<\203\177@=\223\227\020<?2u\273\331\250\216\273h!\274<\211/\342\274+\024N;\2534\000;\302\210t<\315\374,=\235\003\301\274\243~\375\272\264\241\020\275\253\\\266<jv\035;\341k\261<\343\316\317<\275\340\006=%\001\255<\303\004\005\2747\301\260\273\356\334A\275\347\271;\275\317/\351\274\n\311z;>\364\317:\255\256\314\274g\2747\274A#H\275=\r\223\273n\021{<\2137\\\274\002\246\254<\032\362&\275\350@g<\367\233R=2\036=<gT\007\275*UO\275\005Z\262\274\361\257s<\357\374\203:603\275\301\023g\274N M\274}\r\247<zx\007=\355\0203\275hX\024=\346n`\274\250\3039\275\002\002\327:i -<7\024\026\275+\314\307<\246&\225\274\363\0130=$\360\007\274\362e\227:f5\276<\026\020_<\276\324\357\274\034\216\n=\021K\244<\315\013S\275I\250\r\275\277\340\271\273\345\300\212<\374m\344<j\201$=u\263\006<\n70\272\016\275@=\250\241.\275\307VK=sMO\275\315\223\375<\372\204;\275\305\311\275;M\023C\275\002\243\000<\031\017;\275vz!\274\033\r\037<.[g<\242\305\033\274\250\374\273<ZT\373\273\342x\363<p\363\275<\213\351\005=\227\341\366\274Lq\236\273&\016\000=\"\300\032\275\253&\006=\355z\'\275\376\026\357\274\363\372\242;\177\244\261\274\005\210d\274t&\017\275qs.\2750\014\223\274\223(@\273s+*==\3425\275\303~\t\275\261\226\032\275$\274F\274\027w\231\274\"7U<\026\2022\275\262\304\301\27438\025\275\3619\343\274`\353\257<\353\216b\274\026pt\274\376@\242<\221Y\034=\010\331\006\275\332\223\264\2744\301\377\274aL\321<\36708<\272\205\023=\357\206W\275\242\343\024\273\271\323F=\272\024B=1\323\203\272\33307\275<\002\342\274/\337\355\274\t\210\263\274\301\276\001\275\271\202\337;\342]\344<\010\262\241\274\265\341\366\273a\2704=\271*t:\300m\003\275\n\241\034\274\333\030\215<\346\372\021=\001eK=6r\304\273d\350\335;\257\364T=\342\245y\274\231\353B\275&\271\262\273\333\353\005=W\004*=0\236*\275\335I!\27555?<\257v7\274\030O4=\245\342\032\2758\225\303\274\243cK\274\013\331\303<\234\021\337\274\272\204\226\267W\324\206<X\314I\275\342\250\004\275\233sF<M\375\017=\206\262\2519V=S=\370\"?;\203\006*=d\377%=U\355\020\275\025\005;<I\235\335\274\345\331*\275\267\311\212;\r\373.\275\013\247|9\254\225\r\274\221\007\254;\010\334/\275\252X\'<f4G<+<^\274\013k\250\273\361\262\360\274M\266\032=\247\300\276<\246K\036=K\375%\275\025\016k\274\364\353:\275\271\262\342\274\217\265R\274\rU\374\274\370\363\000\275\337\276&=a\250\273\274?\034\356;\250\232`<\026$\331\273(\242\"<b\202B=C\246\252<\365\270\367\274b\006C\275:Q\301<\016\372\032=\006++\275\213\n.\275SrB=ZNX<)\371_\274lY\307\274.h8\275\302\215?\274\256\004^\274\024\033\001=\"\242\240<\304\302C\275hd9\275\373\263P;\032\253\316\2743\327\000\275\340:\240\273G\306\224\274\2004\366\274_\327.=\243g\026<\376\232\034\275\220%\"\272\363\n\360\274\352\202Y\275\266\221e\274\237\247S\275\364\221\"\275\377\214\355\273\356\240\222<4<\210;\321\242\351;\322^D=~W\365\274\350[N\275\317\355$\275Q\305\000<\313>\003\275\t2\375\274&5\034;E\334\260<e\230e\274\326\030\013=W\r\016\275\372{=\275\3163K\275\017y2=\211\366\036\275S\246B=t\356\313<\337l\335\274\034\227\337<z\357\332;\0327\320<\215\3440;\n\253 \275\305\377&=7\242\332\274<\301I\275S\223\347</N\255\274\342\261K\274\343\270\000\275\005=S\275hO5\275\376C\344<\251\006\363\274yD\250<\331\232\341<\224\274\245\274\271\340\207\274vX\035<S\226^\274\346,\037\275t\261\216\274\366\350Y=\372][\270$\010\272<\3045)\2742\177\260:\272\2378\275\313\270\\;\371\240R:\"\203<=x\260:\275\254\316Z=hi\027=\230\021P\274\0014\032<<\337\374\274\326\337U\275\327\031G\275\241\027\337;\252\203k<Q\342\337\274\236\2328=\3528\224;\367%-=8\037!=B\360\306\274\353!=\274+\275&\275\232\306L\275\255s\367<\320$A\275\257hQ=\004\322\367\274\300\231_\271-\332\317\274jw\325\274\232\257F\275\360w\373;\203\014\307;Z\r@\274\0131\316\274\237\3258=b\372\006=\334ll;p\233X\275#\r5<\201\2013\275\353w\357<\306\246\312<\202A\363\274\033v\365;\326\3231\275\254$\036\275V\372\251\274\006\037\010<\202\232K<\364l\026=\240GY\274\016\231\206\273\201t\037\275\335\374\307<\265MB=\354\263+=\354\035(\275K\360\003\275ib#=bv\035\274\002\006\021<\305\"\243\273\236\356\244\274F\003V\275\206+==\377{\205\274+\346\204< 57\2747OZ<,{!\275\264\027B\275\341\325]<\363o$\274\027\016J\275C\315\241<J%\212<\205\336\027\274;\3750==.\206\274\314\245\213\273\313\362\005\275y\206\304<\354B \274(~\327<\371\"\002\275\\f\017=2\227\333<\271G\215\274\203\0208=\002\215\204\274\373\350\030=\236\005\020=\302\026\037\275c\360\332<\025\316\257\274\254~L\274|\006\246\274\345z=\274\363`\007=>\346\220\274\305\313F=\360\210\010\275z\366O:\037\333\242\2743\240\031=\372\3661\272\322 O\275#n\202;4\021\265\274\371\275\306;69L\274d\320Y=\277\2170=\340\003J;\364~\375\274k\024\013\275e\030\006=`\310\344<\214\346\006=\014\331X\275\221\355%=\305\272\374<\030\277*\275\033\313\206\274\273\254\t=U\330&=K\211R\275\321\215\351\274UX\007\275\251\365\322;\270\351>=\353\331\027\271pK\026<8\224\312:\325p\'=\270_W\273\235\243\336<\264\244\362\274\246ZZ<\237\034\253<\344^\"\275iuL\274\\\256\005\2758(\037\275\001\014\276\274b\3533<\3373)=\220f\210\274\322\323\037\275w0\013\275}05\275t\374\332<\303\302C=\257\322J=8\322\004=\034\321\347<\267\3404=)j\010=\261\220\t\275\202x\331\274\235F\005=q*9\275m\361X=&(\267\274\216\016\225<\375\013\t\274\356eB=A:\240<\305H@\275$\007\035=\001\353b<j\n\023\275\316\3448=\341R\361\274\235|\020=\367\002\035=c\260\236<\320`\213<\005\022Z\275h\327m;<eY\275EEV\274\001\211\375\273\274X\016=t\304*\273\313\201Q\275\035\255V\275\375\305\026\274\252\\f\274^c\356\274\327\\\374\274e\373%=\311y\002\275LQ4\275\247?3\275#}?\275\275\347\273<\370\272\234\274U\225\303\274>E\321<\n\324,\275J\317\017\275\t\243\006<\2646\034\274E\335\037\274(\272!=K\365\312\274\215<P=\241\207F=\366@3\275:\003\240;/IX=C\377K\274\267\274\326<\342\321\027=\254\322\000=0Q\251\274\031C\020<\205>D=\363\326\352\274\315\r\017\275~\351\263\274!\376G<\227WV=:;q\274w\221b;1i\010<\361\347Z<\000:\362\274\226E\337<\370\244K=f\366\230<\346W?\274_\310\t=\354\246\014=d\275\005\275\370Hl\274Q\360\003\275\225\002V=)nS<Ly\360<\330\201\"\275\020\353L\275\277+\204\274\t\266\236\274.ny<\216tZ=\374Z\003=\220\266\002\274\341\013\027=\320\\\243<\304z\372<4\3735\275\242\275\010\275mq\313\273u\301-\275j\255\244\274[\2217\275f\257O\274\210\307\203<\242D\343\274\303\264\r\275\"A\343<#\320\343<\300\006\314\273\363\365<\274\260\310\031\275V|\325;\006\242\001\275\272\301,<\336\372{<\344O\206\274\237\364 \275\335\234\302\274\255x \275\336\353\025=\363\203\025=/\325\334\274\020P\360\274\310t&<\257-H\275L\272\036=a\321\261<rR\237\273C\341\221<\036sU=\327>\265\274-\340\314\274{\2627=\216\370\231\274\204T\237\274\246\276)=\213\266\030\275\355\310\211\274\336O\031<3K@\275\265\304\036\275f]o:\337\275Q\273\273\320\017\274\264\021\024=0L\013=M\356\260<^\371\r=\275\371!\275x\235\355\274^\202\026=h\345\"=\337\212\024\275\270N@\275%\336\256\274\013N<\275\221x\210\274\242\\\313<\343RO\275\034?\321\273\235\254\361\274\262\343#=q\022\033=\005\302\300;/)\251;\353:P\275.=\255\274\r?\017=\275\r\252\274\017\336U\274}\357\367\274O\034E\273\246v\341<1\253\030\275\330jC=\251i\010=zjD=Vv6=$\0169=\236\025\021=L\210\037\275\236\002\302\274\332\273\257\274n\351D=@\330\233;\030\272}\273\r\022{\274\230]n<\344\027U;]|\252;\366\266\032\275\250$\017\275|\230\213\274\227\0026\275\034\262Z<\032L\033=\214\256\007\275\224\247S=*\326\307<\016\322\'\275\016\321\223:\224\324Z=\0170\316\274\2048\006=3H\252<\030E\227\273\364\017\361<#6\216<z2\023\275\213\313\025\274[\302\352\274\205\270\376<\270\351\362<\343\257\250\274G\277\017\2754O\004=\334K\243<\351\341\354\273\307\340\304:\220\037:\275\014\322\264<y\365\331\274\177GK\274\031[\221<1\016:=V\376&<O\020\036=\364\'~<9U\302\274\014\342`<A\271\025\274\322\313\206\274n\310\n\275\325\266\314\274\010\017/=\220\354G<\177PF=\033\024&\275 <\310<\244$\017\274v\261\312;\372\220\300\274a\001/\275\371\025/=\024\024\027=o(%=\n\366\370<\3475:\275\375H\322<\003\211\377<\207K\276<,\345C=(t\025=lx\206;7o\341<\346\307\265<\340\311\203\274_\266\032\275\177\254\023<\316(\030=\271>\335<^i\254<\006`/=\225*\334<\357C\210\274\026\363\275;\252I\211\274\303@g<$\224\000\275\251\223;\275\204\357\005\275\342c\274;\354T\312\274\3258|\274\365\023\014=\235\214\311\274\252\013\260\274j\203k\274o\031k<\200\2300=\257\216V=\337Bj;J>Z=U\345\031\275\245\230\027=\337\177\"\275%\017\347\2741\303]\274\3205\315\274a\027\004=\350\212H=}\023B\274\316\342<\275,\001\001=\034\361\340\274\355,\014=\376H>\275\270\022\034\274\332\336\324\274#\266E=^*Q=dk\314;-\205+=\243m\207<\177\nA=\211\363\333\274\355\341\254<\321\216\246\274\260\275\273<\310\342\365\274\374\310\030\275\007\366\344<\245\214\227<\237\006\342\273\215X\375\274h\342a\274\224\207\246\274q1!\275\252U\371\273]\245\005\2747o%\275\323\017:\275\365A\000\2753\274-=\026\375\000<\225\327F<\346\326\326;\020\243\033=mf&=\004\261\303<\225/\007=\027\003I=@o\344<M\374\346<\253\323\t\275\t\007\345<\275\214\032\275\n\216\036=\374\036\225\272=6O\2753j!=\345M>\273Z(\224\274K\':=*\221%\274Z\216\021=\267\373Y=\267\023\367;=\222\036\275\342\275W\275\206s\271\274[\276C=}-\021\274\021F\332\274\005\020\272\274\300z\227;\232\232\2029G##;zBS=\244\345\322\274d\250+\275\026B\347<;\236\217\274\016\0148\275\313g\264;\213\0143=\274Cq\273\343\013\022\2750D\263\274\212\010]\274\'\376\354<\377\351\022\275S\024\t\275Jie\274\345\361!\274\246\242C\275\206\355\311<\014;^\273=\013K<\020-6\275\261TX\275[\215\265<\317\033\034\275\322\266\210<\034^\204\274\270\321\202\274\327\014F=\205\004\372\274\362\350\030\275\n\306W=$\263-=\021\215\003\275\243\275\033\275]\275\247<\202\0136\275\315\353O\275\335\020\005\2745dE\274\242C%\275\3669U=\035\237\264<{\017$\275\232O\250\273.\200\200<\276\006\375\274\316\263\036\274\232;\016\274\304\202/\274\321\214\214\274\215\354i\274\221)\006\275\322\225\305\273\'<\007=H\350\271\274P\231\373\273\257\251\025\275\315\271\006=\203\003Q\275\r\244-\275\316,F\275\016\262J\273\211\014\212<\261\343U=g\003%<\020\2543=\014\rp<?\212\"\275\272lI<\231oO=\357\305e\274y\367\356;1\005)\275\342\334%\2758\356K\274\321\257\377<6\314\003=\'\202\t=\177\301U\275\326\365:=\207\310 \275\222\024\254\274.\235\327\274\332\032\374\274Q\220\222\274\"p)=V\007J\274\241\036x\274\270\2074=&`K<\341\020\020=\200\221\022\275\230\233\025\275\230\037Q\275\256\2612\275\360\367N=\300\206\314<j/\273<\350\262\251\274\005F\277\274P\260B\275\006P\006\275\r\232\251\273d\313\253<8\315\222<\222\242Z=j\025\225<\372\2211=_\203\274\272\312\031%=\037r\013=P\311\031\275\350A\021\2752\352\020=\r\333h\273H\356\343;\265\023%\275\023\2505=\232\327\031\274)O\273<+|`<\316\200\214<\362T\003=\256\315\006=\354-\200<\010\235E\275\226\342F\275\000A\222\274[\232\r;\270DW=\356ZJ=\213Z*\274\203!\251\273m\377C<|\234\242\271\205#\253\274\322\002\016=\267\016Y\275>\371\342;\2678\000\275\351\251\'\275N\262\353<\214\367S\275\260\002N\275\013\234D<\216\266\346<s[Y\274\3675\327<\022qm;\366%6\275\306\311\301\274\335\356\326\274\332\014t\274\350\377J\275\225\021\316\274#\035\344\273\266\310\322<O2H;kt\300<\265WB\275uoA\275\'\273!\274&$\246\274\017a\013=\323\312\356<\340\326\003\275\035]#\275C\372\251\273\240\242\313<\357\306\340\274\n\306\223<\355\'=\275b\'\n\275\005J\001\272\201\007\320\274\023\0379<\350,$\273\021\355g\274\002\020\330\272$^\013\275g\367;=y\235G=\"\303\322\274\"\226\324\274\250\3449=\233\242\021=M\3207=\330\334\315\27409\266<\004NB<\354\341M=?H\336<\002?\253<\3434\000\274z\347\220\274\352\001\300\274U\312\004={\253\242\274\230\202\353\274\035\243\004=.\212\037=R\340\334<\022\313\377\273\237\017;=_\2568\275\n\276\207<\034Z\003<\016Y\025=\217\250\023\274?\240\032=\345\320S=\374z\340\274(\364/\274\007}<\275\237\212\306\273D\202-<X\374A\2754b\001\275Y\005Z\275\241\237\255\273\r*3\272\017\365\242;\333\214/;\266Q\347\274\331\272G=\225S\366\274\377\262\024\275\202\356>=k\251*=\346X\033\275\202\\\361;\326S\254<3\327\024\274\215\236<;k\377H\275\207\356\367\274\273\214\312<R*\205<\227\262P\275\341\367\333<\030\337~<\211\351\327<<\207+=\207\371\004=\312\254\204\274\324\017\371<J\3400=\251[\003=<Y\256:\n\374U\275\002\234s\274\231\247D\275\222\032T\274\271\006}<nk\020\275\313\014\233:\005\354\t=\324\316M\275\265.\251\274\302>\251<\263\0134\275\\\307x<e52<\001R\216\274\304\334\032\275B1\320<\204\304%<=\267\037=\2437\301;\021\227J\275\372M\375\273*uS=\365X\025=\220\264U=\274\032\306<F\223C=\376\242o\274\026>r\274\366\347\270<\034\333 \275\374\"\t\275\245\027b\274\274\301\000\275\016\247\242\274o^=\275\330\031T=\242\3633\273\010\261\377<P3\005\275\337\014\271<y\231\243<\361\352%\274\311W0<\376\014N\275f\377\232\273\323#L=(g\223\274\250:\030\275a\"\210;\310[E=\264P\355\274\030wo<z\010Z\274@]p<\356\276I\275x\264\223<EB\354\272\217\275x<\365\223$\275\221|\033\274\027\245I=)\324\036=q\206\t<>\320K=\235\233\277\274\361\220\003<$\272 \273\210\312\343\274\027\202\"\275\243\367~\273\'\027\214\274\233\325\332\274\377\230\210\274}{\2719\261ZS;\023\333#\274#^\017<\374\230\364<\254\310m<\224\305\230\274\204iA<{\214v\2741\037O=y0\345\274\032\3163\275\2128\246\274N\351\355<\010\307\016\274\002\350W<nE\t\275*\225P\275]6\246\274#\021\031=\243\335\010\275\317\203\346<\305\215\302\274h\243\360\274\337\241\240;\334\203\003\274\217\231\377\274\331\300!\275\365{1\275\213\250I=c}\014<>\333E\275\376\223\327\273\243\014\003=\310\026\351<+\255/=\312\033^;\351\351+=\033\267\340\273V\323\026\275\221(\003\275\371\225\236\2746Y\276\274\250Y\001\275\225\267;={\273W=k&\016=\233\2169\275\273\3732\275\216o\001\275?\\C=\321\200\021\275Dz\010\274\353\030f<m%\037=\221+\246\274\034\205\007=\340\277\362\274\177\310\255\273\021H5\275g\261\000=\031\312$\275T\256o\273u\316\240\274\2170\t\275\312z\024=f\020\347<T\367\226<\020\366,=\311\2401=?\346w\2748\211z;\004D\003\273}\367\023<\225\330\236<\274/\262;p\002y\274bs\017=\033;\267\273\252J\001=\002G\002=^\2548\275\371\231\325<3C\326<\356\270\324\274K\277B\275\315\371a<]i\021\275\036\276(\275\213e\274<%\222;=\325\013@\2740\271/\274q\362M\275q\025_\274+\003Q\2752.\360;\256\231S\275\'\272\353\274\361\005\262\272\320\235H<\365j\260<r\261\252\273O\265L=\302\376\202<\233\376Q=Y\260><\204VO=,\300\036<y\242\267\274\200\001\032\275\031\022\027\275_\303\007=\200\323R\275\222\375+=\246\000\r\275\336\200\254\274Ha\207<P\245\354< \315\313<\231\205A\275\004\245$=]w\205\274\363\374{<\246a0=\245\372(\275\325\346\224<c\232Y=\017\337\252<\220RK\275\244\'\'\275\360\\\000\273&{\031<\025i-=D?\031\274t\217B=u\254g<\235\260)\274\027\303\350<\2526#\274\2228\021=P\343\034\274\335v%=\305\340\262<~\231\337\273\tM\344<4\277Z\274e\376N\2753\231\036\275\004LZ\275\315j\330<\372 \035\275\253\007\350<_6\227;\367\"\312<_\024\r=\250;\377<\345JS\274\032c<\274\214\254\332\274\035<\316<8\272#<\272\032\246\274\005h\311<S\334\013=*(#\275\251\372!=I\202*=\223L\020=4d\270;:\327C\275\374\272\036=\036y\000\275\244\3342\275\204wV<nv\240\274\317-U\275\367\364?\275\345\361\250<\326\0146=\022&\304<\226O\211<\324Z2\275\241@\030=w\027\013<f\216P\275\242\343\235<\261\200f\2730\343C\275>\236F\275\017\251\303<_\0323<\022\026\005\270\274_\263\271!\247\010\274K\007\265<\030\277P=k\327\340<\n\014\312\273\364(\004=\357u\010\275$\336(\275\366\251\305:\005\363\257\274\n.\223<3\200J=QOK\274\270\r@=t\306\344<\277N(\274\004B\017=\223LF\274s\354\302\273\006Y!\275\255\2076\275\250\234\006\275n\316\301<\022R\367\273\245\361}:x\326T\275\257w\220\274\327\223D=F\263\033\275L\241`\271>Q\271<\367\220\223\274\306\250\013=p 2\275\366U\032=d\356\025:\306\333\264\274N>\002\275/x\226<\275\253\344;\362\323)<\206\336\"=*w \275\250\224\013\275!\202\201\274\365\271&\273w\352\263\2747\0137\275|O\250;\004\302\366\273\357\233\236<\003uY=\3246>\275\303 \312\274\252\320,\275\304\333*=\376\321\006=\354\223)\275\253\t<=F\325J\275\365\215\031=\212\335)\275\241 \216<\\\365\021\275\354\t\314\274\353\262\277\274\212\261\344;\202mo\274N5\327\273Mc\367<1\324\204<\332\247\275<\232\376\243<rx\001=b\261\021\275\273\014\033\275\r\001@\274\'\n\r=\240\217\243<\002\304B\273\247\347\254;\265\372\266\274\365u\221<\233\371\244\274\324\317L\2755\3510<G\266\376\274\370\036c\274\\\311o\273\031~\321\274\032\006\034\275\263\243\322\274\312\265\223\274\225\010C\275\221e\231;\301\344\353<\026\216-\2759\372\'\275\006\t\326<\3133:=\253\271F=\357@\222;\032\177\337\274%\332\004=b\376\351\274n+\317<\323\302\030=\243\247@\275\"K\005=\007Z\315<L\332\347\274\343=-=v$\t\275\334\320\001=\264\377\375\274k\216,=\352\274$=Ka-=\264\272\313<.\275(=\337\227\227\274\264\361\273\274\035\347\305<V=\035\275C\326\026:\245\373\361<\365\225X\275\267\013\230\274\351I:\275\265\237\223\272L\023\212<\007YS=\262\"\332\274\203W\201;\340\025!\275\030\207\005=\002#\222\274\312\203\247\274l\334 \275`\004W=\0057\005\275h\210X=\246@==\306\325\307<r\243\357<W\356\261\273J\365\322\274\177\266\352<\302\255\376\274\254\300\014=\016%\033=\244\214\346\274\336\032@<\276\023K=C\022,\275\210\266Z=\307Q2<\211F\016=}\013\023\275+$P=S<L=\357\303\036\274]\\F\275uE\036=\370\320B\275uq\363<v\177\004=\247\313=\275\023\272*\275;\356\345<E\306\337\273\372\262\t\275\016\236\022\274)\030V=.:\026\275|T\211\274\275\320\370<\027\357U\274\271\334L<0\314<\275I,\342<\\\3250=\363mG\275\303\322<=\350\250\033\275\037\275U\275Z\230\025\275\203\276\277\274\225\331\346:\245^C<\247\3101\275\024\230Q\275\220\327\017=?\030U\275\266%G=\257?\344:\016\357[\2748\273I=V:d<\035\261\231<2\334\032\275\333\257\304\274\267\260\t\275\223G\r\2754\031\351<`\245C<\242*)=p\202\221;j\231\336<\234\324*\275\325\010\032\275\377\346)\275\275N\357\274\255\362$\274r\332I\275\01678\275U\315\001=\321zA\275\206\232N<S\351\202<\207\223\321\274\n\345\333\274\374\330E=m\350\006\275\335$?=\236\263\256\274\237Y\270;\251\231\270<s\237\014;\202\025G;\212C\r\2749;N=Z\234?=\343q,=\371W~<\304\237R=r0K=\025\346s<\365\2118\275\375iV<RX\007=\321s&\273F\252\202\274\253|$\275\203wg;\306\2415\274c\224\024=\355\245[\273yR\020<q\007\025\275\025\013\312<\356=.=\214\033)=\341\3355=\377\334\013=\373\206\006\275\321TE\275\222rR=\270\371@=\274@#\275\327k}<\026\364\237<\3106\374\274\354*>\2757n\003\275}t\234<\034\346\242\272\202\270=\275\311Z\030=H\241\312:S\353\343\274\316Y0\275\030DB\275+vO\275\014\310\022\274\360K8\275\210\261r<\376 \327\274\221\201\022=b\262\331\274\221X,\2751\301%\275>T\031=\204M\231<\303\033\242<\030\005?\275`\363J\275\260q8=\36366\275\t\207\353<o:B=\0109\177<&rB=\321ln\274>\271\033\275!\024\013=\337z\300\272Y/\022\275\332s\343<\002\232G=\240\307.\274>\306\"=\267\317\200\274nt\n\274T\320\275\274\0339\206\274\230\027 \275\350\361C<\214\t\t\274\205\304Z=\371\312?\275Ay\227<\217\253\023\273\341\356\326\274\252\217\020=\353\360\232<\014\010R<\026\344G\275\302A\275<\024\240H\275\333\357\350<\236:+\275\356\\\370\274\266\325M\275\370\260|\274\224\317\266\274\014HA<My\245;\316T\023\275_\225\242<N\354\254<\365q\262\272\272\034\004=\267\303><\331L3;s\271\230\274\212!\363<dx\322\274\354\316\231<3\270$\2755\340\313\274\350\360(\275\002\025\235;D\214.\275!\\Z<\342/\353\274\234\352\220<\275E\360\272#\3037=\307\007%\275\320\242\000\275\216\256H=!O\227\274\324\377\017=\342\312\322\273\020\270\366\273y\\\330;\3654\003\274\327\301\037\275\000Y\375<\264\032\273\271e\336\n\271\203\235\240\274\026\234(=\361\003\036\274\326\2504\275\355\230\330\274\022\257\300<&\025\t\275C\272J<O\017s<\377(8\274\261\033\311;\003\2579=\275\367\027<\204\245@\275\025\270\307\274\\<\236\274E\245\022\275\240bK\275\316\225\354<\365\350\204\274\351\335p\274q\005\013\275\362\324\301;\027\3761\275I\003\263<_\2542\275\335b\001\275\020\311\310\272\010\'\370\273A1\267<c\236)\275\304\274\033\275rG\243\274\201\232\204<k\221K=n\253\362\274\251\335_<\276\236\323;I\216B\275s\235\207;4c\200<\312\300/=V\031\277<\000\276\316;s\343\004=k\037P=m\345P=\363\r\326<\245\013\177\274W\343\025=(dO\275\325h\034\275\210\346\023\274Q\206\021\275\235\200\020;\377\004\310<*\2538<\220M\220<\336\242\226\274\321\354\t=((\213<\303$\005<\311\360:\274\335\250!=\020\341\331;\344\363\202<\007\346\206\274\245m\340\2741\326\001=\331PF\275\3769(\275\2259\355:$U\021=\335\301\026=V\223S=-_\033\275d\237\263\274\355\272\200:{\355\305;\357\350L\275\231R\"<t,E=\245>7\275\215\363\006=\017 \326;\374JM<\023n@\275Q\003\366\274+\005<=v\200S=\315\362\260\273\"e@\2752m\003\275\0027\017=\006\342P<3\304\035=&\1777\275`\r\321\274p\342/<H\3255=\330\213.\274s\227Y=\333\017\222\273\331n\010\275\370\026\266\274cSV<,\246c<>7W\275\316`\002\275\2452\032\275\352;J=[\030\325;\214\002\030=\302\202\225\274\220\177\276\273\272\3455\275\224\325\025=d$N\275\202\316*\275\344\235\236<r\233\301;\3105D\275\271\230\022=*\362Y\275q\350\005\274\014z\010=\371d/\274\210\363\302\274s\216\206\274M\257^:\322\372\034=_\203_\274\021\304?\275+\"E=\301L\211<\223J\317<\253$%\274\346I:\275\324\322\271\274JB\210<\263\260\033\275\356\346\023\275\247\235\326\274\355z\221<tU2\272,^\254;1\300(\275\236i\364\274p\225\023\275\323\346\013<\323pN= \2177\275F><=\317\342@\274Q\240\017\275a\364\017\275\243\355.\275G8\226\274U\226\032=\264UA=\262\364\333\274\251h\226\274<3\346\274\250\023\207<\177\023\353\274G\211\355\274H\250:<\004\366\022=\242\364\025\274\021\361\030=p\247k\2722S4\274`\257\336\273C\225\320\274\250\306\023:\315p\217<\344zG=?\r\326\273\226\001\"\274\004\312\222\274\324\3523=\236JE\275\232`)=\337\256\003\275&\357\246<\3154r\274\361\020i;\'7\244<\307T\304\274\366`\032<\265\342\372<\347\022\220\273\254\000\224\274\364\026W=`\034B<\304\306\000=g!:<\261a(=X\347\225<\237j|<7K%\275Oon\274\342\322\006<7\026f<\252\033\322<\355\360\205\274\202\312\243<\201\312%\275f\217\215<2\231\017=\335\004\273\274\217\177\007=_\313C\274x\306\221\274@V\300<\026\235\346<i\260\261<\330Z\026\275\256\255\037<)#1\273\370_\311;\2543\347;\021\246\362\272\313W\233;g\254\323\274Uu\355\274\001V\222<\263\377\026=\321\236\336<\025FW=\371\2669\275\365\0318<(\317\334<\245\023T=\331\327@=\020\2025=O\327\016=,*\354\274\223\336`\274\'$<\275\325\2006\274\351.2=\354Y\r\274\253(\030\275-%\200<\032\2112=F\333]\274\031&>\275\332\033\352<\234\265\334\274\240\2538\275\212\323\"<\361NN=,\335\212;\253_\013\275\3140s\274\205\\o\273\226!\220<\271\0251=X\352\256<i\3246\275\204\310\235<\307,B\275\242\305N=\231g\007=>\317\014=\242\252\325<\177\370\330\274R=#=\223w\217\274\255\007\216\274\343^\322\273\tX\313<\312\372\205\273\350\363Y=iU\326\274\206\010\310<\024MZ=`\261\312<R\313\361<\273\031\243<\376\2513\275r\241\013\275#\303\315\273\002\177\203\274u\205\213<|\354j\274\307\357\323\274\373\r!<!h%=\343\022\235\272xgX\274\245\271\267\274>\2312<\374\240\314<\037\003\246<\205\016!=^x\021\275\254\032\034=\314\204\306<f\341G<vN,\275\240\332\365<.\254\370;&z\027\274\215\034\275\274;\'5\274\026\035\255;\\\2410\275\003c5<73\220;U\204>\275\014\t\037\275p\017\255\274\372\211\265\274\245\267k\2743}\277\2745\370\030\274y\334=\275\255\215W\275p\344V\274\031\274\333<\365\254\004\274\0363\221\274\201\210#=XKi\271\037S\251\274\005\366\020\273v\212F<hh\023\275\242\225\234;\337\263\263<\377%\344<_\207\276;\275\370/=\027\273\"\274\237\021\025\275\236\016J\275\271\370\303\273B\372K\275F\\L\275\025K\347<%\232B=\307\273\033=\037\344K=\252PB\275M\021\n\275\r\035\007\275$\213N\275\210(\216<\372<\247;\326v\017\275v\025\022<3\0061<vYq<\340n\243<T\355\353<\017\203\227;\365\027\370<\204\343)\273\335Z\370<(\332\016=-\310\227<n=\235<\203\3221\275\2125\201\271\037\313\324\274\320eT=\377\304\203<\363,\035=\023\032\013\275h\0108=\361hY\275}dP<\317/\233<\024(\375\274z<\253\274\037q9=Z\277\343<\215\205$:\021\224\031==\256D\274N\177@\275V\336\010=\222\360/\273\265\255X=2\336B=\361\312d\274\371\365\000=\242\235!\275\363\205\230<\211\331;=\337\345\217\274\021K\337<2k\334\2745\036\351\274*X\304\273\350f\271<3\366I\275\035\270\004=\365,\352\271\357\223\217;\372\002\025<c=!=\354\027s\274\242\320G<2BY\275\030\034\326<s.9\275\260\343\350\273\303\237R=d\240+\275\246\n(\275\211\307\261\272nK\254\274\213\240,=\035\243\016\27554\334\274\311\010\027<\376\325\034=\242\010\025=\250,,=\372\330\225\273\325U\314\274qe\022=*\341\365\274@z\310\274\255\354\014\274aGF=\014O\370<7\344\315<\374A\277\273r\326\010\274 \256\022\275\244t%\274\005\366\217\273N\357\t\274\323\332A\275\361\327\361\273\3174M=c\361\245;6\0017=\321#\377<\345Y\036\274#\253\264\274\330\204\302<\316\221\306\274\013<J<\375g9\275\326\206\014<\335\215\264;\032\003\303<\3642\225\274\326\0168<\325\036\032\274\000\270\273<\336\234\207\274D\276\242\274m\362\203<\357LW\275s=\031\274\2515\005=D\300\356<\356\355\302\273`\022d\274\3746\270<\337\221\t\275\000\320\377<\r\354&=\356/\321\274\241\300(\275\341*\261\274\2640\244\273\276\007\340<vP\036\275q\234\t\275\235\002\016=EQ\364:\233\007\344<\351\030\232\273\247\\-=\353\022\026=u\260\316<\254\206c<\035\221G\275\0009M\275I\312\005=\237\214\205\274\005\244\262<\322\360\272<\014\240\001\275\214\337\327;-r\343\274v*\315;,JY=\2629\362\274z\204\310\274/\257\014\275YZ\n\275\2648;=\302\213%\274W9R\274\275H%=\242\302F\2759m\240\272&W*:\341;\265<\255I\345\274\241Y\020<\305\231\206<\006\336\310\274`*P\275N\t=\275\341\262\214<\031\230I<rA\214\274y}\325<lc\006\275\027\234>=ioN=\235\313\320<o{\006=\033+V\275\335\210\364<\221\300\010\271\207\016t\273\357\237c;\006\273\036\275Q\301\352<Na:=\203\374\323<$\271O\275M\202k;\260\t\353;Eeb\274\010t\317<\322t\233;seg;\240\244\250;\213\276\250\272\246K\327\274*\277\335\274\313Z\034\275\221\242\216\273\002\372I\275\"1Y\275\270\321\027\275\215\014\t\275\263J\033\275\224A!=\375\275\341\274\335Mq<\266\335}<@\027\350<\204\346\254<\374\002\032=\201g\221<\320\313\010<\364\331>\274\037\317M<\033*\363\274\377T\371<\215F\033=\226\004\022\274Ty\033\275\225{/=6p8\275\370\201\233<\375#4\275\3439\320;\372\343\314\274\033\010\003=&\347\017\275\265+O=\214\201d;\275I\347\271Q\t\034\274y\320\222;\330^\344\274}\303\232\274\362\356M\273S;y<\325\256+\275q\220\r=\034FR\273{M\240\274P\270\t\275\001\360$=}O%=,\252\224\274\255(\026=\3630Z\274\016\314\010\275\025\244f<\312Bz<\024$(\275\364\003<\274\274\366\216;\355\352\025\275\254#*<\213_\204\274p\274Z<=l/\275zE\230\274i\'0\275\355\264\264\274?pY<\2340\034\274\001\315\375\274\373*2\275.*5\275\262\200N=\241J\r=ft\022\273S8\346<\251pN=\312m6\274\322\206\325:`\031\251<F\224\345;0L\372\274,\200\365\274\214\234U<GF\021\275\314,\n=\212\311E\275\375\343\t\275\361\311\010=\304\2046=\016Z%\275b\221\243;L\033\026=j\007T;\301*\335\273\001O*\271\305\217\347\274{R\265\272\335\306;=\230~H=R\223J\275;k\360<5\354\t=?\247i<\345b\2669\331[N=\204\263\232\273gkV\275G\251D\275\177\0341\275=\321\246<\302h\031\273{\247\315\273\337b\005=a\017V\275\252\245\212\272\'@\034<d\227;\275^M-<\033_\025<\210\t\023=]\247\360\274\233J\357\2736\276\002\275\002&A=R\3572\275\'\001\004\275xp\376<y\023/\275\353\3324=\036\205\257<\357\377\232:\'&\237<0.\310\274\242\033\r\275\3608\007\274o\375\005=\272<\260\274\341\267-\275\213\364\032\275K\014N\274k\n\314<i\\\317\274\246\242\016\275\200\371\373;\302\256\302\274\227C\362;&\316\270\274\364\037\360;\340 \213\273K1\343:z\030t\272\r/\357\272\302JC=2\220\270<\333#\022=yz\366\273\352p~\274\260\343/\275\223R\005\275Xs\370\272\247\001E\274#\3525=.,\335\273\260d\217\274\032\215\267\274\201I\247\274\265\316\320\273#}\262<\037;\322<\336\220\016<\347\325\204\274\005\365L\275\372<\021=\213\251==\325XI=9OQ\274=\024\022\274\260\022;=[S\036=\274\270\336\274c\264\255;\2531\004=\360\330s\274\362\210\235\274\022l\030=\202\314M\274:\267\r=\241\230K\275H\343\035\273~\226%\274U>\036=C\246\317\274`\335B\275`\2075=\271\276\246<\356\325\267\274\250\203.\275\033\343\013\275w)C\274{\270\217\274]\301 \275+Z$\275\261\214,\275\373\275\310;j^\313<z\206u\274\333\033\021<\216\364\037=\214`2=\347Z\271\274\222\232!=V\371\261<\214\201\225\274\327\360\030\2759\340\031;\364)=\275\271+\275\2749\000\371;\223\0076\275Z\3613=\303\257\261<\242\\O\275:\212\022\273\222\022\222<x\004\217\274\355%T\275JV\034=H>\017:\247;L\2748\347R\275-\372B\275\211\014N\275\344\346\365<\203QO\2755\035\026=\250#\330:\362r\013\275Fg\271\274\342\035(\275w;u<\371\277H\275\035\207F\275\235:\325\274\332i\312\274\227D\035=\214\234\010=L\343.=\365~K\272\342\320\251<r\355\226\274\375\007\332:\022\327\374;\rG\236<\212\214\330;\307/\241<@\346\265<r\241-\274\356\360\314\273\324)&\275\373$F=\224v\213<O0{\274\307T \274$\3747\275\226z\304\273E\331\022=\346\250\353\274\004u\341<\257K\325:v\251\"\275z\327\374<\244P\356\274\377\251\376:\241\374\006=#K\334\2741C6\275t\251\323\274\314\364J=\321\316\301\274_\325A\274m~\242\274\320@\303<\313\253W=\222\343\270\274\315\335X\275\352\316\031\275{\312\321<\340Q\026=:@\t;y&\033\275\024\030R\274\261VB\275\271\246\240;X\035,=\236U<\275\003\004C\274w8\222:\002\236:<\031(\325\274C}P\275\334\037@\274\1775z<\361v\300\2749\372\356\274]\361L=)dA<\013g\r=i=P\275\002\n!\2756FI=\033\334^\274\250\036D\275?\261\335<\243\222\312<\233\277&=/\351 \2754r\231\274D\271\210\274r\022\347\2746\317/=!;\266<\003\210\024=I\236\326<W\251\313\274\306\260\350\274\270\277`\274\227A\324<\0216\025\274\317l\323;\251.\005\275 {N=\314\364;\275\216\233\331</\212i<\335\027M<\204L\315<\003!\321\271\221\206\'\275\"y\245\274N\325E\274\354OU\275\266\260\337\274\354\030\270<\351\260\245<\203\366\007;\027=\022=0\310!\275i\213\020\275uq1\275`9\251\273\035\201\371\274\254\271\302<\202\311\031<\312\215\226;\311\223R\275\310\274\364\273\232\3258\2748\031\013\275\275E|\272.!\033=]GW<\3214{\274I\252F=Z\345\r=@\233O=\014PL=\355\325}<\243\2708\275R\217\r=\360\376\271<rv\023=\305\337\016=V\312\035\275\312\347?\275D\274\355\274\316\010\207\274\361\317.\275\'\272\217<bdJ<\223\243\314<\377\\\303\272\260\264\232<\256\353D\275\022\214\273\274mh\337<\354\247\350\272\355C\013=\217\322\221\274@\357\304\274*\016\255<\264)p;+\367\273\273\320j\364<\013\341\034=\334\275\001=_\357\237<\365\301\355<\312\305\321\273L\276L\275\230\320>\275=\357\242;\370\022\254\272\035\034#\275A\240\241<\340\nH\275\010\200\372\273\222\245V=\302\340B=\3111\242\274\273\003\320<\245\255\r=u\201\335\273\206\335\315<\002\335K=\n\325J=K\027\006=d\322\231\274PP(\275\255My<\331<!\275\316\344\247<\341\351V\275\004\014I=\031\266Q=6\352\264\274\346a+\2751\347\020=\266\366\377\2747\376\332\273\251\2110\2757Hx<\330\014*=\3106L<q\034\364<\"\005\001=\202\255\272\2748\264\021=\323S\350<\357\277\236<\361}C\275\245\254\204;l\3743\275\034F!\275\212\"L\275\343\007D\274\272\261(=\\\311I\275\352\376#=\'-\307\274\271!\252<\214h\337\274o\0308=\303\000o<\310\260L=\002\n\267<\344>C;p\302\366\274\226\2250\275\353\316D\275\006YY\275\342\341q9\331JZ=\244rN=\036/B=7\2733\275\363\tL\275\305\317\304\274\356@\001\275\260x\025\274\215i.\275\253\373\001;\372\207\n\275\333\315q\274\224Sv;\344WC=\347F6\275X\027P\275\366f\020\275]\327\327<\266\265\373\274\377n0\274\324\372\003\274\217\t3\275\354\016\241<\225@\224\273\252\2203\275\262\0160=\375\210\275\274\017\325;=F\'\001\275\232\022\333\274\313M;=K\232H\274C\314\340<\004\364.=\371*\230\273\221\006\242\274>\323\017\275SL\020=/\352#\275\325\253\022\274o\333\263\273G/\037\275\324\210\327\274<8\342;\341=\205<\"\317Q\275K|!=g\352\244\274Z\274X<\200\001\371\274&s\207\274{\246\031\275\357\265\325;f\325\204\272<~\210\272\226\361\031\275\034\007\027\274U\201\033=\\\304\002\275\356\206\311\274OHV=IoB\275\355\361<\273\343\260q\274\346nT=\354~\343\274\226\207-\275H\345\346\274\024\203l\274\304X\336\274/\2018=]\2649=\264c$\275\252\236\304<\0135+=\304\226\263<B\2555\275\211\210\'\275\014\263P\275R\375\r=\031\002i\274@\231\255\274%IC\274\244\001\3058\311 #=o\3050=\210\254\237<b\262:\274\350\034!\275\002\0008<K\227\027\275kT\267\274C\221\235\274\016\270\013=\376\024\351<\222\354\215<e\032U\273\274\363\357\274;\"\331\273xX:\275\270\"\256<[y%=kc\032\275\323O:\275\345\367\345\273\302\330\033\275-\377`\274D\340\037;|\\1\275]&M\275\241\315W\2759\365\016<g\340&=\216\226\034=\254(2=\233\305\035\275\307\217\020;\252\224_<\0320C<\302\347\214<\3456\033<\226C\314\274+7G\275\243\377/=f\014\027=\206.L=AI\007=\003+7=NG\340\274\233\250\363<\262\203+\273tR\002\275Le\005<\343\017\200<qED=J\032\026\274\235o\023<\213\306Q<350=\364{\005\275aF\374\274\333\203\237\274\354Y\024=\016\241\335<\004h\317\274\357\331;=y\244\n:\023\352\036\271v\"\334<\375PN=y\303\317:\020]%=U\324\312<\016\tP\275\265y\264;\374\352\226\273\355,?\274{\225\n\275\260\320\242\274\007W\265\274\303BK=\242\310\352\274\313\277O\275+\006\261;h\367\312\272\361\310%\275{/)=\237v\'<5\242\306\274\005\307[\274\2231\345\274\274\224.=w\362e9>\340C\275u\367\334\273`\034K=\222\022\366\273\207\346Y\275\242A\266\274\221\364\007=\233\033,\275\022\301\353<\220\216*<\377r\371\274\022\350A\275\257\177\305\273\314\351\'\275\037@\316<\026\001\004\275\252j/\275^P\265<\222\262&=E\017\324\273\215\374B;\236\242\235\274\252\336M\275\021\214F=(\260o<+Z\n=X\264\010;\n\206\003=\336tP\275\r+\021=\330^\021\275\310f#;\376#\264\273G\244E\275\027\200R<\376*\031\275\320\201\264<\234\377k:S\003\272\274 \264z<o\241\003<V\331\236<l\004\006=)\353\004\275\363\351y\274GF\341\273Ub\006\275\2543\230<\202\236\r=\363\231\312<\365]\251<\310K\371<p{5<\253\340T\273\264X\234<q%S\275\007\323\001=\315b%\275\306\366\272\273\233\306\226<\237\232(\275\306&\311<\r\2005\275!\263(\275\t\315n\274\226D\r\274\t\305v\272\277\027\036=\355}\224<\263b\360\274\375p\006=R\257\221<\201\320\204<\351\033\032\275\217=U=\"M\251<\r\271A\273\307\016\005=7\253\t=\240\221N=\370L4\275\250\303+\275\th$\2757P%\274m\201O=\331a <\223\027\227\274~d\356<K\005\324\274\274g\337\274\321\005T\274\037&\367\274\262\r~\274A7@=%\353\007\271\004\256\231<\365_\234<8\276V=\022\273 \275\300\211K\275]\022@=\330W\017=\317\r`<\226\234\005\275EgK\275\351\013\315:\361\271\274\274/\232\032\275\016\361\377\274>8#\275\337\334\200<9\r\241<\347\216\236<\314\211 =ws\315<\005`\013<?\020,=-\201+=\272\327v\272\342\3250\275:\231M\275\364VY=\017o\001=\305v\352\274 K)=\355\377\200<\\U\350\274\340\006\022=\275\250.\275x\210\006=\016\3260\275\220\017\320<\206\213\332\274\356\372\002=\317d\026=\004%!\275\177`\363<\237\205\310\274\262 i<\267\354\313;\357\300+\274\330)s\274\034d:<\201\013\271\273\275\256\237<R\305\036\275X<\327<\345\273S\273%\007\005=\034M\372:\205\351\004=\241\037\324\274\'F\016\275\3417S=m\3075\275\257Q\240\273\261&\330\274\'\206\276;Pz&=\000<\333<\221\214\274<\304\026E\2744\031M\275$)\237<3\022\013<\344-\227\274j\244*\275}YG\275\247\274w<\353]\271<\370|7\275\0372b<B--\275Ua\020<|\0351=\321\353\354<?[?=2\354\030=\221\312L=\200\025\t\275\037\345\235<:\307O=\324\031\362\274\327=@\274\365\357\314\273\245\363e<9o\273\274\007\025\364\274\242\032\307<\354z#\275\230rK\275L\242:=+\334@\275^l3\275.\216\233<#dW\275\327\366Q<\352\266L\273ok\274\274V\225h<\245&E;\036\025C\27588/\275>WY=\376\330\036=\236\000\010\275\371N\200<\275\2720\275\343_\010\275we\220<\316\340\310;\362\201$=o\"\005=\345\315L\274:cJ\275\000\231)=\211|\315<s\001&=\211\223\016=\336\305\013\275E\327x\274\366o\024<m*?\274\342\275\210<\013\327s<\312\023Q=\'\223\264\274\247\277-\273\264\373\002=y\374\344;{}\322\274\327O\177\274\355X\301\274s\t\206<h>\306\274\n\244B<\363T\177<\022\205\024\275E\202\354\273s$#\274\336\rM=\271\277W\275\275i:\272\375\221\376\274\030\253\370\273\3358\246\274\363\005\377\274\357\t%=\242_\265\272\362\221+\274o\270B<\034\260\017=\236\306\333<\354OD:[\276\224\274\324(\006\275\241\"\203<\367\2310=\250\0322\275\362r\372<b2\031\274\306\364\232\274\310)\033=\227\363H\274cIw<\030@7\274\253(\361\274\331F1=\022B\005=\347\"\016<\357<\002\275\002A =\307\303\332\274\333\034$<;\037\330;\2364I\273\001$\322\267/\357\233<\230\177\025=\377{4=[k\010=\207\263\337;\"\257G\275Q/\032\275\006\3515=\270CD=\267E\346\273fP\201\273^3\210:\376\330C<\341%\375\274\231\036\"=\034\333\022=\2246L\275\203\003\204<%*\350\2744v<\275l\"\370\274(~%\275\236?.\274b\026\377\2748oD:\200!\022=\234t:=R\246=<\233_\202;\014\030\360\274\376Z:=\250\242\206\273\002\0005\274m\202\317<\003\373\013\275xZ,\273W\352\226<\313`\342<4\264\346\273\360\324\331\274\3353\352<+\260\014=\354z\336\273%\251\037\2750\017M=\003\013\316<-e\274<\241\177\001\275\253\231W\275G\377\'<\250M\027=~g\254<\242\254\342<_\254\355\273\210i\t\275\301\312\260<\302,\316\274l_s<\301KP=5\371\017\275\246\021u<c\370\231\273t\306E=\346W\010\274\347q\377\274\325\370\023<\272BR\275-\311F=Y\215*<4\031S=*\024H\275\264K\312;\262\266f\274Y\020!\274\222C\242<\305\274D=\345\213\354\274\364\354G<K\372\006\275\311u\213\274\004:\376\273\3551L<6`\300<S12=L%+<\220c\222<\n\310\340\274\035\023\230;\225,N\275cg\260\274\030\3640=t\022\354<\347q\302\274UUq\274\t\353I\275R<\255\273fh\310\273\361\2353<\223\374\236<\013_4\275\363\266\335;,\005\335<\352\343\n\272S\362S=?S\211<\010}\350<*\344x\274\220*\035=C@m\272\233ib;\361\327\367<[\t\230<\334\t\323;6\2740\275\252\370\'\275\017\344\302<\306\3248=5\3255\2747\364\275\274\'O_;6 \276<\370(\204\273\261\331K\274\343\023\277\273\374i\361;\311c\311\274D\361\377<}3Q=\262\260\377;\275\366\217;\332\374\027\275M\207\"\275F\343B<\027X\013\275\034v>;~\033K=\313\3507\274\216}I=U\361\357<\364\234\272<\200t7\273?\225\245\270\253\236\257\274\265\305E<4\020\021=\220\030*\275^ \357<\204p\025=BR*=\353+&=\ns2<\2341\024\275\361c\032=\177HI<W\0263=\335\255\222\273-\221O<;\234\"\275\237\272\034\275d\022V=Ulc<\016\262\277\274\330\361\037\275\337\235]\273\357\021\275\274C\323\333\2731\324\310\271e\232\321\274\323I\261\274\310P\364<\322\236&=\241\266\254;\'?\013\275\302\344<<\007A\320<_C\016=\264,\360;\177\2337\275\307\365\321:\373{\016\275\357P\325\274\220\014n\274PC\301;Ez\331\273\231v1\275X\310\021\275^\004\205\274}\246\336\270\314\214x<\3743\214<\235[\271<\033\n\022=\335\024\034=1\217\352\274_\2053<\204\365C=\314\340\204;\243\277\032\275^\240B=:Y\216<\t0\276;\322\211\316;\261S2\275\262l\372\274\316\020\340\274\315\321\000=\372q\263\274\206\256/\275\221\257\006=\031\033*<\032\350\030\275\345\321\242\274\257rK\275\321\345\360;\230\331\014<\"\360\275\274\270\367&=\312\241\035\274\377x\215\274\235Ab\274\232\332\353<\241\344\256<\345\010\313\274\352\360\002=<\216\224;2\224\366<\263^P\275\266\266\021=y^2=\3413T=l\323\311\273\321C\302\273\244\372\026\275)\323\362<N\234\252\274\210n\342;\311\3317\275/\336\036<\226\240(\275\253\315\216<\303tP=\200)@\275e\304\323\273C\310\330\273\204  \274\217\030(\275?\023>\275\234\3114=\233\344\356\274|\204P=\262\021\206;y\210\004=m\253\000\275\001\354j\273\032\241+=\302\253\013\2740\'\033\274\225\240\021\273\332|T=\352\233\252\274X+\001\275\352wQ=\365\201*9\256#Y=M;7\275\371\003\354;\312\340\261<\240\327\221\274_\324\356<\256\321;=-\371\'=9)\333<\366}!\275\344\345\240\274\326x\010\275\217\311\"\275U\025\017=\213\303\274\274\243\\\213\274qa&\275\235>\305<\016\227A=\237\0057=&\3702\275\305\272\222<t\342>=\251\261)\275Q\233\r=\250\241\353\274\215T\226<U\353\365\274T\242\240<\321\353\020\275\233\t\257\274k\275K=S\207<=\016\2116=l\334\033\275z\256\216\274b8\255<)+\267\272\335\004i\274\347\206\317\2748s%\275\265\030V<\347\2463\275\211\0312<\014\207S\275d\364\335<gI\r\275\302\356\315<\231\372\035=\272\3540\275I^\202;\212\357D:\363\331%\274\254\350{<\303\340\263\274\256\300^\274\023\255\360\274E\022$=\206=\014\275\244\315\010=\361\014\225<\261$\326;\243\034X\275^\003\004=\374\274N=\370p!\273(\204\240<\262\325\357\274\264\376\\\273\301A\031<\341\032\275\274\272\306\225\274\212\271Z=\264\377\271\274\255 \025=\344\251\"\275\306\330\307;\326 /\274\226\344\030=\224\\\r<\312\375\256\274\001\202&;E\005\270\274\002%\021\274\216\301\272\274\246Pw<K\333O\275\035\345\312;\0173\014\275\2056\301;\303t\240<}\037*=\r\225\"<BAS=;O\302;)\276\375<?\2221\275\222\232\033<\246\220M;{\370P\275\311w}\273\312U\277<\264w\203\274\217{\007<\257\332\'\275\276~\033<\260\246\360<\000$\254\273\333\2115;\t\246X\275\313\316D<J\2575<e\313\243<\013\353\373\273\256+<\275\337\361y<\346\207<\273\246R7=#\217C\275\334\241\371<Z\250<=\315\267n<\242\314S\275\315\301\r;\310\340\271\274\362\207\364\273\2773V\274\223\355L=\3530!<M\277\r<\207\322\033=\217\336G\275\246\207\030=d\n\262;\221\341\362\274\264F$\275\342{\370<\263\346L=Q\230\'=\240e\277\274\321\335\204;+\207T\275\025\216p\274J\027B=\312\263\305\274\275\317\263<\037VS\274N\361O\275\277*;\275c\345\361;\314a\326\274\317\251\271\274.\'\343;w\322R\275L\002S=\355\3048\275\221\0169={\376\362\274|c\020=9\203V\271J\204E=\030\276}<6\234\210<\177\323\215\274L/}\274\376\306+=7\303X=F\030\223\273uZ\t\274\276\324\363\274N\355\231<\372\026\324<\030\n\374<\362G\321\271\377\347\253<\302\366\004\274\225\236E=U\026y<\2002\217\273\024\331\216<\375\376\272<\275E2=\242z\325<\026\253\345\274{P>\275E\'2=c\027\304\274Z|\362<\"\353\n=\240\312\032\274H\233\334\272\272\022\304<:\224H=f\355\262<\222D3=,m\031=\330FO\275_\227\333\274\367\217<\275*6\250\272\270V\t\275\356#\246\274\247z\r=\2614\231;q\021\'\275@0\260;\010=\"\275\013\030\020\275\343\272\305<\361j\027\275\362j\373\274\373\201Q\275[\005O=\330S2\275\325<\272<\013\206\262\2749\321\224\274\257\307\245<\366y\266<\346\217\202\274o\206\001\275\204\211\017\275\204\370K\273\262\367\007=\"\016s\274\000V\226<\370\345\212;\215\234\245\274]\225:=eW\315\274~G\016\275\340\032\305\274\264$n\274c\273Q=2D\016\275\3123\234<\327\rL=.C\336<\350~\263\274\201\0202<\257X\276\2746EF\275`\335\366\273\227b\274<\336\362?;?\361\265<%^\n<\353\346=\275\224\224\365\274c\353\343<\007\3678\275\375\352\364<o\003K\275\024A\270<\312\200M=\347\203\240\274d\252\225\274\272\246\247<\010\352=\275T\350\333\274t\007\274\270\212\353\270;\303V,\274z|#<]\211\'\275`\257\014\275O\276\273\273 \323S=\260.\007=\016\312\001=ztu\271v\265 =\345\372>\275\371\256\361;x\340A\275o\241\273\273\345CB=\353\2127<[3?\275\355\311\373\274\014C\316<\337\004M=\030\317\270\274:T\t\275XZ\000\275\203\331*\275\035\376\350<\220\231\337<z\024H<\227\010A\275\3639W\275\\\376#=R\364\n;\0223)\275\262\335\262<D\007B\275\006\370\326<\326\342\306<\rC\216\274F5\235\274\273he\274\346\301\020\274X\233\346<y8\307<\206l\017=\227\233\000;G\343\210<\333jv</\221?\275\033\256\367\274\201\241\033=p\251)\274Y\030\206\274\374\212\231\274\212\376\265\274L\2453\273\340lH=\370\3466=BK\320<\177\253\313<t\031\361;=\252;=\257vL<M^\352\273n\221\366\274\025\230\010\274\310S/\275\014\360>\275V\371\037\275}\226\034\275d\177\177\274G\030\322\2738{\265\274j\330?=\213\177\022<\221\255\021\275\362\230\'<\0231\001<\231\367I\275^\240\235<\240{\230<.=9=\345w\250\271\001\260\226\273~&\303\274\277\300E\275\347)#=\234\027\217\274\365\332\342\2741\237?\274\013BM\275NL\016\275\334|\326<}\2778\275\370U\311<9D\330\274\026*\350<\tb\375<\036fV=\334 \202\274a\242\261;$\2541;\313<\227;(\204j\274\020<\017\275\034Sx\273\"\347\354\274*\320K\275\203\242P=\225\376\005\275(\207\t=\033\231\024\275\203E\034=C\234\371\274\326\273\350<\t\374\007\275\352\252\n=qY\337\274a\273\236\272\025A\031\275\234K\014\275?yF=\314\n\261\274\214L\007\274\237\3204<N\0208=H\021\'=\270.\251\274[\327\265;\223m5\275\321\024\243<\'/\225\274\246\n\304\274\034G\031=\372\370\306\274\000zY=\252P\034=\004?,\2754g-\275m\205#;\254\365\255<\002\206,=\260Q\032=\303\357\003=\341A\025\275\023\243@\275F\034\307<\364\365\271\274\215\263\254<V\320\301\272\024\360\326\274h^e\273\227\224\231\274f\rS\274h\n[\275\256\016\274<\256\260J\275\207\302+\275@\264\325<o\032\265\274\223\317\r\274V\2712\275\331\030F\275\350\265O\275X\255 \275\330\221J9W\027R=\246~\237\273T\035\233<\350\230\221<\340h\260<6\2757\275\217\216L\275\036\034\372<j\030\341<\357\360\305\274\r\256\200;dz\252<\254\257\003=\'\345\232;\370\210(\2751\343E\275\036\305\231\2743H1=B\247\243\274\251\022&=`N\007;{\276\007=jP\001<7\262/<\226\244);\2202\375<\033D\014=\352H\270<w\247\323;\372\207V\275\036\203\343\273\\y\n\275\250v+=`\004\027<n}\032=\254\217\256\274Z\267\222\274\370,T=\277\034\026\274\267\351<=\254*\n\275\277\t@<\253\202A\272\330T\330<V\214\356\273\347\366w<\224qR\275v\246\322\274\027\267\230\274\203W=={,\004\274\234&\314\274bj \275\017\251\010\275\240\n\356<\355\311\327\273\3476B\274\364V\005\270\262z\374\2736\306\365<\370\224\035=N\317\240<\363\233\177<O\333\014\274\020\353\343\274\331\317\031<\242+\023\275\303x.\2756\334*\275\002\010\004\275\327m\033<\212:\314\274S\265\262\274g\264w;\376\257\355\274\263\2649\275\222\242!\275\316\307\342<\242\023\313\274\004\244k<\340\207P=\220\"\036\275NQe\273\252\026;\274\341\t\202<a\3163\275\371\201\340<1\217\337<\252\231j<\024\0242\275\313\345==S\233\360\274E\252\t=\341\377\373\273?\367\001\275\252\211\316<\330r\357<\343*6\275\237v\244<j\314^\273\270*\217<|\024V=bJ\235<\'\321\032\275\002i\344\2746\031;\274e\353\334\274-=.\275G\242\t=/\260=\273\265\2237\2749\342\310<^DT=\023\033$\275\315<\247;\221\240\331\274\"\033\200<\311\014\212<Q;\247\274]g\034\275\3340Y=\035\245\005\275\370S\337<\\\245\006\275\350\200\033\275\357!R\2755W%=\0010\305<_\206\025=\243\0218=V3\250\2731\035\001\275\311\361\211<\237\266\334<\304\000\305<\230\310\303\274\373\226\236\272\310{c<\301:\343:\034\274\243\274\305fI\275\017\016\001=\007\235!=\257\266\272:\341)/<\302G%=\350\260\312<\014(h;\005.\266\274@\315\335\274j\340\235\274/\362=\275\311\020S=\311\204\014\275XtR\274\277\277&=Eh\021;\241\023\311\274\236aE\275\366\260\265<\323S\016=\327\305\207<{rk<))\242;\376<F\275\375\315\014=\315\024\n\275T\021\000\274X\345\236\274\242s\000=\004\021\002\275.5\227;\002m\210\274\223\232n\274\n\014t\274\243\255\000;\'\001*\275\024zN\274\273e0=\003\355/=]\2723\275>\370\003\274\220\r\334<\364\254\367\274b|\370\274aG\346;4]\216\274{!\330<\361=\007=+\234&\274\364\346\310<e\235D\275\311\275\020\275Mw\330;F`]<\237\351O=\275S\263\273w\231x\274F\345\010=\213|Z\275]$8=\035\312#96\000*\275 \372;=\355\321\026\275\205\237S=\360\364\021=\232\271E\273\342\263V=\273B\272\274Q\353:=~\252\353\274S\023>\274\214\310\232\274Nd8\275\035\223\026=\025\357A<\226\326\251<\213\316\\<\363\030+\275=\004E=a,\006\274\'^\037\275L}\017\275\271yj\274Z\242\027=V\262\264<\014\226)=sw\002\275\244#d\274\\\266\031=\030\253z<?\340\033<\206\031\303;\007\020;=|\302\"\274\352\030R<&\311\242\273\215\223 =6z\024\275\2546\336<\025P9=8\234\346<\222\347&=?\227\n;\314\331G<4d#=\353\330*=;h\255\274 \354\275<\032\325h\271T\211X\274\234\3632\275\324|\r\275\340\314\354\274l20=\303r\033=\301c\232<S\220`\273\350\274\'<\365x\352\274$5\230<\217E\203<9\315\273<\271\327[\274\010\336\035=\'JU<\336\344\'=\367\374/\275X\2450;\237\263\003\275\270\317\252\273\353v2\274\347\265z\274&;\371\274x\227\357\273H\365\204\274\rq\325<\261\337\030<\370\365B=Z\0218\275P\302\003=B0\002=|\3510\274\311\377\330<b=%\275\2208\377<C\306\265;\347\207\264\274\342\374=\275[\3178=\322\"A=\346GC=\207G\2738\311!\034;\014U\2359\327\270\203<\321\034\013\275\005Y\245<\021\377\021<\374\215?\275C\227R\275\215\363N\275><7=\263\002\304\274s/\270\273\205\317\010=s\025=\275S\313\233\274]%G<\232\254\032\275r\306\234\274\353\3509\275\370+\310<\221\210r<V. =[\271\337:0}X\275\200\360\267:\033U\257\274\210\313\204\274Dk\037<\002s\326<\022\341E=\347\230\206\274\361\340\036=\030}3=aG\266\274\312\177\306<\334t\314<\026\252\320<\014.O\275\2060\255<\220\212\007=\n\313\035=\275\364\005<\251\010Q\273\251I\241\274m\3045=:\006\315\272\331=\207<\274 )\274\314\263\035\275}\036\301<O\313O\274\340\263\014=\371\336\017=-<\321\274\315\351\032\273+\317\t\275p<#=\\\231\213<\364\223z\273T\341\373\273L\3733;f].=\254\245\375\274M\025\000=\276#P\275\337\"N\275\272\334\241\274L\2147\275[c#<\3679\257;\202#\007=h\n8=5\025\027=r\275\031=\236\312\027< \373?\275M\227\013\275`M\035\275\353$\322\273\315\335E<qio\274d]\200\274\036g\017<\250\024\034\275\201w]\274F\370\032=\\d\022<\356\022\205<\372\213\223\274\223K\017\272W\206\271<\005\246)\273\221\264\013=\253\205\036=\0235>=\254\364.=\366\371)\275\223S\016<\234,\023\275|\000\031;\177\362I\275\274?\207\271\376\311M;\255\272\217\273P\350\253\274\346\221\000=\202\3761<\213\331/9\360\230\271\274\206;R\275\373D\216\274\305n\327<=\263N\275g\323\204\274\201\353\034\275\023\\\205<\340\340\213<\272s\025<\301\252\251\274\273\rY\274&\235?\275\375a\320;h\'F=\347\333\303:gB8\270\247\0315\275\317\366\031<>\305\010\275<=\034\273\262\216U<\t\022\222\274\375\345\342;\234\217\377\274\360:B=\006\251Z=sK\371;$`\366<\207\310W\275\032\367\215<\323\257\353\273Z\020@\275(\0072\272o\300$=\226\250u\274\363\\d\272\250>\260\273+<\327<\037\323\230\274DtL<fM\330\274\230\245\344;\374mM=\200M\355\273\230P>=\263\013\000<\325\267h\272T\014\020=\222\265\355<Q\n\330<\204\304\373\2738\375\'\275\333\030K\275\312\276F\275\013@|<$\212\235\274E\301\023=\375\211A\275\331\002~\274\343\032\204\273=\372\344;D>\333\274d\237\341<fa\014\273\207o\262\273&\236\345<\345\245\241</\002\322<^\216\031\275#\246L\275\200U\305<\030g:\275Zr\322<\362\026\"\275tKT=\306uS=\367+J;l\273+=\2110z\274\r\322K\275\003\357\341<\203\223\035=\253\317\007=\016Q\257<\263\316\025=\213m\036\275t\316\362\273\263\305\023\275\334B\235<\365\303\030\275\215N4=Y6\360;\325\226\353\274\261\021f<g\370#\275\3157\030<\272ZZ\275\244\237\327<\363\337A=\331S\346\274\340pX<\251\314\016\274\330\203\\\274xT,\275\206\002*=\252\036\030=RFB=-]\345\274\261\255T\275\376\351A=\206\260\244\273\313\210\360<\367\274K=uFG;\257LB\275\317Y\007\275\252\315P=\203U\356;\256\002U=\315\305\001=\332\014\335<\261\"6\274\243\374\2329`y~<3\213\032=\035\265\234;\031\027\371<\212m\033<H\007\211\274\267\342\207<\267, =H\255\021=F\037\343<\2174\223<`0\t\273\310\257\236<4!\021=\n#U<\236Q\036\274\036\244\026<K\350\001<v5\332<\203\274e\274\37526\274\212\253\t\273$\201\227\274<F\034\272\3525\353:\252P\"\275\355\2133\274\227\0253<\235j3\275]\004\377\274i\343\024\275rD\367\2743:\343<1\210,\275\305\255K\275\230\370:\275\216\265\217\274\206\366\340<\034\r\327<\332\034\306<\352lA=Bs\n=\202!\353\274*=Z\275D\030=\273\026\304\362\274\r\3206\274i08\275\205\306$\275\222\320}<\226\247\004\275b#6\274\2067\027\275\004\335\241<\016=8=\323\216\246;\233VO=j&\227<i\222\360\274\311\316\247;/\";=<\360\037=\016\027\260<\003\254\032=\207+H=\373l\314<\021H0\275\177\337\313;\202`\252\274\362R~\274\307+X\275#\300\317<_\343?=\303\261\235\270\243\252\257\274\307\016\r= /\205<r\246\020\275\350\242\362<h\277%;\017Ag<\007\214-\274W\213\201\274\036FK=eA\312;\273\3315\275\232\207\035<f\374\177<?\263\276;(lU=\357zL\275\351\306T<4\205k\274\322\212}\274\254\341\001\275\232\303 \274GS]\274D\021\213\274\213\375\240:\233\003\266\274\363\364)\274\262T\317<A\265\255\274\213\000\'\275g\376<=\310\323\211\273\331j\300\274\213\222G=\356\021\007\275\234\344\003\275\026ie;;8\225\274A\3516=\370\220\325<_\n\24495.\246<\007\251@\275\013w\033\275\371\032:=\243\t\232\274w\200\324\274\005\205\303\273\311\264:\274\000\316\033=\321A$<PD\345\274\357\335\235<\233K\006\275=}.\274\342\222\257\274\317\217\364\274y\346\240\274\306\315\2539\367\221u\274\364\344\262;\367\335\036=\004\250M=\341\371\005\275\257\231&<\240?\365\274\034\233\226\274\006\365\262<~F$=\025?S=#\333J\275\243_~\2732Y\362\274\350F-\275\250L\322;\337\245\n=]#\365\273\035\331\324<\200{\376\274\342\331$=^\263\014\275_\347\320<\215\352\033\274\327\342\273\273\014\006\220<[\273F\2755\354\"\275\013\216\003\275\326\252F=\240.\341\274\002\241\342\274`\315\006;\213\025\326<8\022&\275~\375<=\t\270\004=KD)=\225\345\034=.-\004\274K\355\026=\006\363\227\274=\204\020\275\270\212\376;P\204\310;W\214\231\274\262\2256<ij\025<g\tH=P\350/\275\007\374?<\266J\253<8\332\210\274\3673X=5\2604\275\302\006\010<\357\342\327<\034\311\361<\324\377N\275!\240\277<\273du\274\347\363%\272\250\3258\275z\370\310\274\332\373]\274\317\017\001\275\364\326\021<b\366\036<y(\355\274\233}\304\274\350D9=\345\237\333:\263~\t\275\007\355q\2739AP=O\240\257;\346\004?=\241:\356\274\343*\355\274\345f>\275\224\324\020;\312\232\314\273\317[\235\274\026\014-=\010uW=\217]\006\275w[\263\273\362\006H\275\357\267\306\274?\264B\275\2365\226\274\177Y\206\274\313/\t=\360X\204\274\210dp\274\245\377\354\273\360\331C\275\010c\257\274T\3121\275\\8\'\275\230p8<\"xZ=\025,\267<\203\231\n<F\263\321\272\335\256\267<\206\031\341<\216\244\342\273\376\276&\275\306\341 \275\214V<=\364\217,\275vm\013\275:\334#=x\314\337<\241\3071\275\366\331o<\232\2545=v\316\264\274\230\030\330\274\343K\323<P2\303<\337`1=M\352&=\003C\232<\010]7=\376\260\220\274\253S\330;\334\366\006=\021g\250\274\301 \034\273\311\322Z=\315<\247;\261N\030\275\351Y\034<\303\274F\273\221KO=c\347>\275\33296\274K.\331\274\202\224\245<V2\025\274\233&==?\270\371\274\362\250$<\374\331\004=gPE\274\213\031\210;\275\002\020=2\334\002\274\376\314?\275H\211\375\274\361\254S\275\341\323\"<(\003X\274F\206\302;\034\373\267\274\322_\026<]\241\210;\'\352\007\275AaE;\304\002\344<\207n<\275\035u\244<\224\326\310\274\370@\304<\212}\334\274t_\273\274[\351\034=\360\3017\2755\354\343;\350oB\273\235h\347<\274\035\001\275\313X\003\275\321}{;\302\205L=\000\t\342;I\226*\273?\254R\274\023t\023=\255\025O\275\366w\036=\306\240\017=l\2356\275\220\300+=\036\233\034\275\231\362\214\274\265D1\274\202\220\205\273\311\205@=\242\340\373\273(Fn<\206Q\211<B\006\t<\030=\021=\330\231d\273\3574C\275\372-\250:\240\\\002=!\003+=\200\256=\274\003\217\023=[\320?\275\000\376H\275\271\204\213\274\262m\304\274p0\027=\276[O\275\022\323\022\275_\346$\275:\206\216<\335\356\216\274\374\216\336\274L\351\014\275\366\231X\275\243\340l\274\355dq<\006\377\\\274\337\250F\267\345a\376\273\273iv<@\226y\274\214`#=<\2610\275\241kX\274\306\375A=\225\261\265;L \024=:\010\000=A\201\272<8\313#\274\360C\021=<@\r\274\354\0210\275-*\371\274z\351\335\274j\233\370\273\241\351\201<G\2508\274Z\016\347\273\226\247\254<\256\277\361<}\260\244\274m\305\335\2722\362\251\274V\274\021=\2063\374<\216k\257\2743\223U\275\3770\372<\320\345\006\275\342\020\270<x\033\242<--\223\273\260c\000;c\005\027\275\346\024K\275j\376\351\274y\276F;\027\360\257<\303\332<\272\231J8=\033\377P=\022\223\326\274\24768\274B_\231:\331\363\207<\277\236\026\275\026(\007=\363\027$=\203YR\275\341k\332\274\0357\323\273\326\2466=\221[\204\274\271\321U\275\240W\317<\315\266\017\275\246\226\232\272e\021\310\274\263\220\320;6\265<\275S\363\340;6\014)=\373\265\016=\355\275o<\336AS=|\025\"\275\017 _<E\270f<\277\344\023\273;<!\275\336n\"<\312\317\025\2755\\\307\274\262qf\274\200\254)<\316\305T<\006&\345<\037\306\347<\021!\027=\0372\242<!\335;=f_\006<[\337E\274\264\002\026\275V\3530;\315&7\275\274\235\302\274\272qF\275\210\271b<\220\002d\2749\263N=6 \226<%r\256;\377_*<D\206\003\275\324\362M\274YON=\376\020(\275VNA=\320\347\361<8\030\221\274\202\336\016<\304\261\207\274\333\255;<\031mU=.\024\311<:\007-\275\327\321\312\274I\322\250\274\326Z?<:\014R=)\342\017=\267\017!\275\354\023\300\274\234Z)\275\247\236\212<q\014@=\370\022F=\200\014F<\337F\236<\256BX<\022\376\275\273\337\336$<\252,\016=%^\366\274\320\2666<Z\213\304\274\322$2=\367\271\217<\"BS\275\033Z\340<\360\3029<yNP=\264\033\217;\003\237\206<\013\030\034=\342v\'=\270\236\265\274\tZ)<\317mD=f\350\342;\030\316\274:\244\033n\274\036\222\276\274T\243K;\275:\344\274\025l\273<+\314=\273\206\267\206\274\215C\322;\002)<\273P\225\373\274-\204&\275g?\261\272\020t\270\274\030\357R:W\320\356<#\242T=-u\024\274\205\264(=\225\276\245\274\217&\006\275\300+\341\273\303\032\376\274\224\031\017\275\230\315U=\017\022>\275K_\344<\355\372\016\275\246\204\026=\354l\316<\023\030\211<I\271\326<o6\316\273\240\256\302\274\r\313&=\350\022\245:2#\346\274\370\350\004=\344\314Z\274\345#4=M\311\261\274w[\312;:X,=\213v)9\r\347\320\274(\2133\275\274w\243<\222\005\017=\334*\260\274\213c\277<\234\202\225<\"\213H<\000\260\030=\263\354D\275.\266\024=F\000R=\364\006\345<\230\362\216\274{BQ=?\334\270<\244\317\267\274\2406\223\274Ec\376<JZL=\242\307\005=v\344\034\275j\207>\275\r\227\270\274\326\253K<\303Tl<\302!J<\211\005\352\274\001Q0=\274\222\275;pZ\310<\300WS<TC\247\274Y\232\336\274Y\200\307\274\342\354C=\201\006\307<\356\367\026=\305\354\333<\374\037\255<\345\033\263\274\242cK\275\367;\336\273\222\360\223<\302\025\343<\304\035\263;\236\330\305\273\340\272T=\177KX\275k7\217\273\275\004H\275\230} =f\305\020=}C\305<6\223\024=\332\323Z\273\010\000v\274\232I\362\274\373XO=\213\026\337<\212\205:=\377\204Z=\032R,\275g|?=V\026\024\273f%\r<\353D6=4\350R=\361\344Y=\0325B=\200\2738\275?\364\033\275,+\342\273\032\351\375\274f,C=,Mt\274\262\252\365<\305\337\017\274CM4=\210bE<\347\215\202\274\274b\243<z\335\342:\267`\014=W\364\227<\333\251\240<\213\013\275<i\324\222\274\2608F=\225\273\035=\312\201\027\275}*\022=\336U>\275@\313\002<1N\216;\345>\277\2741\037\035=\361\273$\275f\243L=\312\335H\275\267m\315<\000\211&=,\230[\274\232\323\362<\227x\254\274\356\037\377\274\324\343Y=\272^\307<_1\302:\207(\203<\271\210\337<\370\213\202\273&\031\212\273\367\001\025\275mP:\275\246#.=\263\021F\275m\341u\274\204\0078\275\300\2455<\025\022\326\274\347\031T\275L\207\034\275\307]\235\274d\336\032\275`s\335\273/r\030\275\262\354\276\274hI\022=\335\367\2749\377\r\357;\216<\034<SD\275\274u\306\217<\272\365\007<A\215=;@\312)=\3109\277\273t\264,\275W\325\005=\2004(=\370\026\273\274!\246\002=\366s\337\272\177\366Q<\010\353\323\272x\211\016\274\235\371[<c\037I\273\377\352\027\275\373\331\315<\245Y\036;$\327\333\273\013P\245<H\363\030\275e\210B<j\0213=\267Q\246<\223Y\255<X\275\353\270\344a\031=\340\367\026=@_1<\331\006\236:;r:\275\021j3\275|\230\367\273Dg\266<\343\344$=z\375B\275\272.m<H\374\036\274\036t\206\274\371\005c;\037\3474=\327\003(\275+@D=5\362(=\226\245\271<\3268;\275\001x\213\274\257\317\035\274\317(%;toR\275-\322<=\301u:=\317\n\202\274b\203\026=\303\340\361<m\"R\275&\277\213\274v@+<\305\240\244\274\336\204\225<\274&\353<\232K\307<SmU\275\034\241\200\2741\323h\274AuJ<\274|\027\274cV+=\317\346\020=\2718\261<*\207\206;r8\374;)\360K\274\343\035b<\347\267\370\274^,.=\324\002\037\275\217\027~:v\014N=(\026\017=\363\236\020\274*\003\n\275\205\003\230\274\014\377H=\364f\320\274\312\222C=$\032\320\274\215\207?\275\307f>\275\343\225@\275\314\022\277\274k\001\020\274u+\017\275pZG\274\256,:<\222\343L=\366d\332<\237\025+\275\362\025\250<\003D\374\274\204$\272<\251\345\377\274\332\034_8\252#\306<\214\262\376\274\230M\273\274RI\375\273)\024F\275\301i4\275\377\025\305<\236L\037<\027\347\022\275\214\376\024=1\301\022\273\332\2747\275\221\233\025=k\177\017\275a\006W\272\262\330\320\274%\t&<\310\237\315\273l\334p\274\253I\002<\261yX\2731\334\251<E\343\007=\240\2142\275\203\231\237<4\264F=\n\002\321<\016\226>=\376#\013\275\271\372\001\275\350\263\375\274\032ra<\263\367\036=VG\307<\337l\345;R\272\267<\234\331\361\273\222E\367\274\236\263\206\274*\363\025\275\031\203\344\274-`!=\202mo\274\312\241&<\005?\031=\250\274\027=8\013!=S:\346\274\336\324\203\274\036\332\324:\014\237\341;\034 O\275\244\347U\273\003\312~\274\202\236&\275\237\331\356\274$\361\205<\330[W\275\314\221\'<N\265\031=\2419.=\245\334\234\273\346\266\277\273\235T\253<O\022\225\274VA\336\274\274|<;6a\007\275ji\263<G\0073\275cp\265<\013IP\275;\232N\275\214,\031=\335D\271;+\235J\275\256[U\275S\013E\273\362\213\223\273\335\004)=9\376\257<\014\225|\272\374\243\314<Q\324C\275\366q\346<\336S\002\275-[\245;Zp\035=\324*c<>\r\251\274\275\224\'\275Y\331\372\273\254\302G\275\020O>\274\023\336Z=\2103\351\274dDR\275+\337\037=`fB\2759\003\";\032\300\272<9\373\372<mt\031\275\354y)\275\341\007\325<bN\213<\315j==g\313 =\006O\207<7r\310<\263\347\031=\245\347>\275\031Z|\273\252[\017<\002\367e\273\026\303\343<\277\273\n\275\301\032\004=\265h\023=\362(o;\322w\347\274\370\025\'\275N53=\346\2307\275\004F\030\275n\255R=TE\302<z\316\265\274\237\007\355<*`V\275W\205\367\274K\017\003\275\336\202\026\275VS\324\273OY\376;s\202<\274\376!G\275^\010+\275y\354\245\274d\207\033\275\324\243e\272\353\303\037<n5\374\274\271C\334<\340G\003\2759\264\002<Ed\341;(n\256<\214/<\275\034\3017\275\332R\027\275\320w\307\274\346\355\323;\2218\344<,\357\320<\216#+;\217\341\263<\355\371&=zT\344\274CW\200<j\247%=\"\233\'\275\316%F=5\nS=\006\031K<\353\214\230\274$\"\021\274\270B\267<\032<6=3\365\251\274Z\214\365\274\034h/=F\2309=\363\323\374<\027~%\275\271N\250<}\217\317\274\207/\364;\017n\367<\025\267j;\270|\001\274zv\336\274\360~R=O\215M\274\n\004\025\275\017\2461=O\323\013<]\220\272\2748<\377<\026+\221\274\317\007!=\036\256U\275/\014\374<\3603\311:\307\212\310\274\236\333L\275\302r\014={n\355<\0340\310\274\232\352\363;GL\007=\247\002\206;\223\037\354\274\217W\216<O\3743\275&\263\274\274\375~\355\273\027\370\361\274\266+Q=\036$O\275\314C;\275[=\003=\223\325W\272\002\313:=\\\274\301\274\276\227\036=\030\245\016\275\254\3103=\242Z==;\360\220\273\307\203\312<\014x\274<.V\255<Z\237\304<%`$=\212G\007\2751_ =\240-v<\\Ak\274\247\344\273\274\3638\022=\255\363\202\274hw\254\274(-J=\233\353\223;\3425T\275\210\375.\275\311\022F\275K\002;=\2062\260:\330j?<\227\306$=\330R\314\273=8<==\235\231<\370|\313:\376\2123=\323Z0=xk\317<#\017\371\274Ak\345;\257\326G<-\2202\275B0M\275\310\206@=R\222\300\274\372\006\230\274\304\t4\275\300pK<\313H#=\'F\031=\330\277\255\274\005\245\313\274\246t\334<\367\206\366\274\233/.\274\344\206\014\274=\226S\275\232\333\262<\322\200&=^\3049=\257\356\216\274\263=\340\273\272W\014=j1/\274`sY=1\203q;\tw\225\274\244\340\007\274\340\360\010\275\034\275\314\274#\241\023\275\327g@\275\352E\257<\250C\004=\204h\274<W\322X=\242\302O\274\245^\306<\0007\002\275\tA0<\002\002B\2749\306\250\273\303\234\023=\244\025\366<9;\313\274)\367X=1|\263<\357n\270<Y)O\275\342\255\014=C\305\256\274\206\364\225<\005\3420=\177\2316<\274\347\352\274\235WR\275ux\334<\237j1=k\322B\275\020\343\236\273\303>\240<5.\206\274h\317\n\275\256S\202<\247D[\274\377\335a\274G\303X\275\322\002\342\274\244\320V\274\014=\033\275\326\242\274\274\005\013\214\274\327\326@\275V\264n\274o\177\036<\2656g\274\201\3418=\313~\250;\214fy\274\3042\r\273\031a\004\275\241+\017\275B\270\024=\345\033\021\275\200\001\003\275\344X \275\266\275H\275\377\355T=\222}W\274\201\321#<\244E\005\275\323[\t=\242\260Q\275\020\374\034\275\367\177\352\273U\337\336\274\233Mz<r\n\'=\362\020\013=j,4\275\307\254:<\271\346\241\274K\215\317<\351J\371<i0\005=\007\032\264\273\360\222\205\2741\2432=\275R\353\274\357,\202\274V\222\200\274\366\265\304\274\3617\341<a\263\301\272\331\364\277\274\013\324P\273\256\177\001=\252\304\272\273\022\324\356\272{V+\275\355b\344<\021+\246\274:\203\007\275dW[\274\214\356\270<\371\246\036\274hWp<\354m\036\275G\033V\275BcC\274@\305T<{\303\374<\213\311\322<\000\004\276<rK\036\275\305\023\227\274\205\343?=\221\312\330<s\374\326\2741\366\006\2756\003\020\275\300\007\034=\201\353Z=\3550\231\272j?O\275\200\221\344\274\204uP\275|.><\245E\327\273}\231[\273\020j <D\022\337<$\027\005=\340?\270<Z\220\257;\n9\035\275\361\222\353<\364\230\006=\346\324$\275\367\254\037=n\371I\275569\275H\260\315\273\211/;\275\004\262\024\275d$.=\3647\344<\022U\304\274<\267\"=lS0\275\217\004\013\275@P\003\275\020r!\274\221\022\204\274\3477\025=\322\335\025=\016\231\345\274\037d\022=i\325\374<\263\336\\\274\024\251\022=\016\3045\274U\220\246<\211\315>;c\303\032=c\205\300\274\002\327P<\032\033N\2747\345k\273\223\026G\275\346\327\351\274\373I\203<\244\210*\275\005\001\324\273\201\021\035\275\016\331S;\331\226\230\274%\\\005\2754gY;\242\212\350\274\3243\217\274\334VL<\301v6<\370\317O\274\354\\\346<\206\330\343\273\321\3246\275\177\321M=\335\272\234<\301\344Z=\002>\'=\300\370O;\010R\367<\275\324l\270\341\214\343<\374\302\237\274\214aR\275\217P\001=V\356\022\274y\035\332;l\037\212\274\266\202#\274~J\026\275\316 \206\274\252\356\036=\277A\244\273\240K\330<tB`;\226T\360;\231\300\261<\227\233\272<4s\"\275\024U:=\264~%=\235\243\000\274\227u\023\275\255\014.\275+\265\013=:\212 \275\017\013\310<t \025=#\214\r\275\327]\010\275\310\364\253\273@\234\235<\354~E=\365H(\274r\0054=\367\214\036\275\333\3654=\025\210\027=\323\232J\274\r5\014=\003\003\352\273\377`)\275H\334/\274ob3\275E\210\215:\245\264O:\333a\343<)wl<w\366\247\273\301L\034=\033\354y\274\3454r\274nL3;.\002\224<\"\273\271\274\001\233\'=\233Fl\274\244\215v<\016\006\2469\307\263u<,p]<x&\244\274\271:\251;p\367\260\274\246\202!=\276\302\363:+\031\216\272S\265\315:\247~\330\272^\331\263\274\242\'\005=\337\257\001<|g~\274D\246|\273(\233\036\275\312\222?=rC:\273^\303\217\274\223UJ\275 $\004=\257\216;=N\314\200\272\220\367\030\274\260\242\210<,X\003<]\235\231\274\330\274\215\273\375\374&\275\241 q<\020\nT\275j\035\223<\260\365+=\275p\035={ -<C\320\303<\353b$=\014\313\016=\346\202\014\274\024\221\233\274\004\030$\274\026tT\275i\356@\275\002|\363\274\301\240\007\274T\2766=s\227\331\274\341\031u\274\352\202\351<k\211\302<\027\344$\2753\277#=\026pN=\362A(<F\270Y<C\243;\275\313\302\271<;DI\275.\323\013\2756\356\026=\2148\306<\333l\353<tq\033\274\363q*=\306\030\022<\035w\032=:\177Z=)p\314<T\236+=\365\205/=R\261\004\275X\254i<a@\270\273\275\275%\274.\236\006\275N\251N:m\355\r\273\274\340S\275\272\234\031=\001r:=\207\321\375<;\211R=\273\347\232\274\t\3732=\312\357\211\274\363\n\366<x\215\032= ^\006;\315\234\344\273\004\2477\275\332\335)\275&\034\360\273\211t\344<\344\261\026\275\330\002\344\271\262g;\275z\251\036\275\302{E\275=\215,\275\r\\\004=\336#\277<\376GD=\200\310~<o\257.=\352>\035=e\277\201\274\324C\316<\324\200\004\275+\353\327\274\211\343\017\273r]\251<\036\354\227<\375\320\312<\200l\273\273\311q=\275\253\354\"\275\304\242D<\332q6\275\\\022_\274\224\0334=\324\334\351\274\344\005@\275\323\321\027=\223\370Q=\336a\003\274\036\243\t=9Y\020\275ePW=\177\200L=\236w\036=\244\370I\275a\021\342\274\222s\251<\271\r\032\275\346\265\026\275\362\342\023;\024\360\342\274\335\325\313\274\004\227\314\274\\\004!\275&\207\003\275W\246\251<(\373h\274\016\330\220\273\357YO=#\003I\275\016\313\232\273\022\272Q=e81\275Ch\301\274O\237\204\274\21559=k\020\n=F\226\002\275iuN\275p\231\361\274O]/\275\376c\021=\360\251T;\002\005s<8M@=\030\336#\275\240MI=\314\0375=\370\0359=\265\2239=\300\361\035\275\257\267;\275\256\226B=}p\001=_\004\251\274a+Z\273:k\313;\370\310\277<\027\365\256\273ZW8\275|\332\337\274\275\335r\273*vl\274\331\030\323\273\202\302I\273\352\306\265<:\004\236<\267\252\343\274\0314\351<jP\033=\220`1<^\0223=3\002t\274\334%\241\274:CV\275\324\312t\274i(Q\275\0009\340<\260\307\265<\355\220\n\275\310?\004=3\216\354<\032SD<\'L\023\275\360\350\'=\277\347\337\274a\351\335<\000\337T=d\322\013\273\362\\-\275;6*\275\347\0140=h\034\233\2745;\026=(\323\366\273.\002\010\275r\033L\274\344\224\253<\371\262+=9C\221\273 \305\335<b\360\254\274\025\2574=\235\036\231<B\333\302\274l\2042\275\347\'\003\275\345\220J=\336[\214;38\013=\306\3317=\342\275\034\2748AM\275\033}\327<\352\347 =X0l\274\306\367H\274\023\204\016=\357\257R\273\026\213\357\273\006q\017\273\310\3269\275\254\200\235\274\331\221\037\275hQ:=Mx/=\301\r\237\273\313 0=>\225\244;9bE\275\255\372\027=\352\345\214\274\267`\274<\333\t\275<\221n\t\275\337\334\236\273\007IC=\205\224\030\275\037\3312=\033\323\365;\321OP=\036\177\000=\\\246\242\274\244\346\332\274\2320\214<T\020\204<;v\241\273-_\"\275*F\'=r8[<)s\022;;A\320\274,Xr<\304\345Z\275\302\234W;\003f\353\2742r\302<\277\373\352\274\030\342\364;*=\233<\370e\325\2745\344;\275\\\024\343<$\342;\275\344\273S\274\244\\\017=\357jG\2750\265L\275\rK\361;\371\324\361:\033\245\035\275\366c0\2755\031\373\274\326G\017\275\315\354<=\323n!<t\177\010\274\'\201@=\371\r\"=\231\377\010=(\202u\274U\211]<\274\343\030=\242\017\025<\2761G;\016\277\020=l\2542\275\214\004\003=\326\322(<\223Lo<G\003m<\250\376\034=\331V3<%\231\205\273\222fN\275\214\036\r\275\267A\353<\345%\204\274\304\001^<$\364\314\2747\376\005\274\006-\030\275R\2166=\360\261\000\274+\361\352\274\035\255\305\274Wl\t\273\276x\340\274\315\372\n\275x%i\274\020P\024\274U\263%<\003\251\037\275\317\242-\275\342\236\371<\\\374\005\274\317\022\353\273\000\270\000\275\242\275J=:V\031=\331\332#\275\336P9\275n\374\020\274i?B<<<\202<b\341\027\275\367)\r\2758\232\330<-b8\274T\024R\275\225\230-=2wK\275r*c\274\233&)=\212h\016<J\333P<{\222\341<T\202\264\273+\366\017\275\321\261w\2744;+\275MD)\275#\3169=\223\316\343<h\224\240\274\300\250X=\314\321W\275f4\304\274\312\256X=\010\023\305\274\236\2400\275JD\213\274m\177\355\274\264\223\r=\253\0326=\306x\372\274\203>S\275\223N\342\274\327xX\275\326\335N=\350\0349=\346c\351<NW+=aWF\273\033\361\260;\230\0160=\201\373\n\275\222<\003=\235\244\206\274k7\240<\270\324\316\274l&{:\273,C=\026\335\210<\337\372\234<\221!3;r\335\030;\217z\205<pm\231\274nY\250\274\013/\022\275\010n.;\246\260\r\275t\201,=L\373\315<\203d\r=\t\303\317\273\026\337-\275n\256\271\274b\366\r\274\324FM\275\244\237\201\274\326\252\320\274\227+Z\273\213\035\n\275\360\022M;g\037P<\225\273$<\004\037\206\274\354(6=\275?\275<M%>=\345j\"=ttL=\302\034\035<\347\032O\275\240YG\275<\363w\273{/\213<\003cu\274\334\036\330<gc6\275U\020 <\344\351\224\274\\D\017<MgQ=R\033\250\273\027\233T\274j\374&<&\364\265;\266\037O=ub\201<1\221\304<K\251\310<;\000(=}\3668\275\377\030\267;HRN\273C_\376;\001\237\317\274\220\240\334\273\330\245\331<\211KC\274?=\027=\325%\307;`1Z\275\324\177\307\274T\026y\272V\375\022=d\013W\275H\013\t\275\003w\004;\300\277\r=\006V\272< \340X\275C`\372\274\204\034U=\213YU=<\032&=\225\313\245\274\222\004\016=\254\276+=\241^\033\275\276\367e\274\372\025n\274\020u\014=\363,K=\266\217-\275\001`\r\275\267%O\275\344/\250\274B5\273\273\321\023\023\275\310\317\001\274\226\310!\274NLJ=\236hW=\261\004<;\365\253I\273\352\265V\275\342\221N;Y\037\023\274\216\276W\275\033\262#\275\346\333\370<a {<\270z/\275\203\204d<\373\n\017=(\331\353<N\2303\275\226\311V<rS\340<\250\325\362\274\016\036\023=w\267\306:\361\266\036\275\225&>=\355E\"\275\361\263\005=XA\021\275\221\263\374\273\330b\277\274@\357I\275\321\361\216<t\222$\275+|\311<\355 6=\223\367\335\274\321\246E\275\262\332\257\274\256O\035\275r\r?\275\325P<=\356c|\274P\014\244\274\325A\343;OL\034\275\205\225x\274\361\033\031\275_\270E=\311Q(=\023G9\275\025\332\337;=qi\274\032\302K=\224`\224<\037\0262\273\'\246R=\225\371\217<\313bY=Z*\014=\021\032\350\271_`\266\274J=>=}\210\t\275\276e\002\275L\207A\275\333~\346\271V\3061=\003W\014=\341M:\275#z\370<x\365\355\274\221\210\007=a\205\253\274n\037\037\275\256\343\036=B\237\226<^\017\216<\327K\244:\315\267J\275R\262\036=\242\2139=A\333\031=9A\t<\177B\203;\235\3032\275\322\026/\273\332\251\3439e\273\344\274^z\377;\212\205\260\274uD\256\274\306y\223\273\213\322\226;\024\364\257\274\005\276\244<m\326c<\026A\307<Fg\234\274\350$7=\'K\005\275\211\246\032\275\202:H=e\265\037=\3171\274\274\320\365\322<\227\360G=~X\234<\300|\326\274m{\022=\256g\363;\373\313O\275W\333\006=\270\013\006=\270\317\037=r\307\027;\271m\222<\326Vi\274\\\035\001\275\013\273\361\272\344tO\2757\375\243<\335\214\241\274\233\332u\274\344\300\306<\225\241\021\275F\017\332<)Pd\274\313\247\233<\233h\013\275u\0003=\313\367\007\272\240\376!\274\350!6<\365\025\t<*\317\323\274\202\216\333;F\271\366\274\320\227/=\2113\300;\0007\365<\246\031\021\275s\371,=H\360\r\274\242\203%\275\266pe;\243\343\300<~%\003\274\014\364\200<\375t<\275\260\023?=\304xI\275T\034\254\274\365{\302\274\033\202\370\274\236\3324\274s{\026\274\231D\211<x\027\304\274H\0170=\234\3142\275k\260\243\274\347\377E=\375\353\"\274\0276\302\274\377a\304\2732\263\257<D7\377;\222d\370<]\253\240\273O&4\275\257\326\250:%\226\331<\031\271Q\274\203d\017=_\342\014\274o\300x\274\312\3450=\252H\366;\242.B<\352\321\313\274\362f\237<0\212z\274\262\352\262<$\212\r\275\243\306\007=\321\254B\275\310\324\336<\244\363\265\274}\230\262\273\016\034!=c\227\030\274lv\212<\023\3479\275\327N3<\375\037\346\272\016\022\345\274\203z\251<\2374\334<$\272\363\274\250N*\274\177\005\333\274\025\0368\275bW)=\303\334\023\274\177MS=\331.\337\274\304)H<u\263\r\275X\251\245\274c\363\000<\355m\303\274\010\242\017=X+(=`WS=\216\261V=\007/\035=\330\262\030\275\007}H\275\334_\n=\315\345\237\273o\243i\274\353\035Z=X\307S\275\017\341:\275\370i\005=Wa\002=\003\213,\275u\266$\275\031\244C<\252\307\223\274\257\035X=\221\000\217<=B\335\274|MF\275\021\2517=\256g!=x:\225\274,T\351<bB<=FC\370\273\276\211\326<\346\336\373\274\230A(=\024\375N<\317\0201\275\330\026\310<|T)\275(\210\341\274^\236\267\273a\242\375\274\002\025(=:\210R\275\266\021T\2723~7\275F/w<r\007\242<b\020.\273\267Zp<\014=\007\275\356:Z=\300\271$=5\3717=\271L\262\273\217(\212\274\006^\352<\254q@=\321\222X\274\372!C\275O\3101\275Y\247#\275P:R\273F\177\035\275F\372@\275\314\365\273\273\341\273\003\275\276m\n\275T\336U=\235\223?\275\353\343\252<\001\032A\275\031\006\004\275J\225\010\275\304*g\2738\361\232<\\k\255<\035o\363:=\240g;\331\315\310\274\204\377-=!\"><.\0144<\204\022\034\275J\241j<Lt\000\275M\311Y<\322\274\267\270\326\233\375\274\372\265m\274b7\020=\212Q\357\274\'\360\344<\234\270,\275\257AB\274\221_X=\202\241:=\254.\230\274\364`R=\224\356$\275\020\363\007=D\031\277\274\220\327C\275h\221\330\273\002y\027=\235\205\036<r\200\214<\353\311V=\265\212\234\272\363>\226\274& \"\275\331\'V=oV\246\274\364\2250=>\314S<\315=B;\216\026\t=\347\032\337<\2727+;PP\022\274\324l\224;\277\203\037=\341\320\324<\202\367@\275j\307q<;\247\246<z\322>\275\030]\347<\260\227\336\274\224\020:\274\252/\267<\254\355W\275\2356\037\2756?\211\274\355\356\240<\025\025\220<\331\033\304<\275\326\316\274\232\n\020\274ti\t\275D\017\235<jG\236<\003\023\244<[.N=\020\216\004\275\321\335B\275\3359\227\273\023H/\275\236\335\347\274\006\240\343;\250\222\020=d\261@=\326\262\314;\374\'\034=<\331\231\271N-\013=)g\341<W\312Z\272\302\373=\273\217f\302\274\352\364A\2753vN=AN\024\275MJ\224\274;X\006<OYN<\027\340\226\274\322\317w<f\202P<\033\320\355<3\340*=\366\366\014\275\325\314\217\274\370(\033=\024\023~\274\311\221\n\275t(\265<C\364\311\274\337%\000<\357_W\273\301\032&\275\032\237J\274\021\236\351<z\266\036\275u\3550=\233\335\211<u\370\227<\035\233y<\013\302\351\274\271\210\016=\341\231\037\275i\313\020\275\350{I=\307N\276:\217\020\002\275\373y\276\273\347\276\260<\337Y\033\275}rJ\274\013\376\000\275L\374C\275\256\231Y\274\031\226:\274\250\000%<N\177\t\274\356!\234:\322\005\254\272d\t\273\272a9M<@q\250\274\314V\016=\204X\037=\342\372\024\275\032QZ<\310\3145=vN\244\274\327v\313\274\323d8\275\372\333\371<n\271F==\026&=\234\340l\274\257(M=.\300\271\2745\304W=\232PI<`O\n<\260k\317\274\3313\321\274\203\260\251;\r(b<\223\214\025\275\2401\001\2759\247\360<\2543\032=\222\353\034<\n\266/=W,\006<\341_\273<\326\260\034\275\374\373\007=\242\025L=\305\262\037\274bJ;=\265\310\200\274\256E\377<\361\023\034=c\345\032\2759\342(\275\007\311\250\274\200s\311\274\026\261:\275oic\274\250\236&=\270\003\t=R\311\316\274\360F#\274\0202\226:\302\214\267\2735 \256\274\375-\006\275\377\342;\2754\020\312\274\346\\\372<\033\233\255<\254\324m\274\251Z\r\274]V$=\2207H\275\3432\253<F\340\033\275\022\231\254\274_\363?<\327\377+:+\326>\275\266j\346\274[\217#\2747\224\007\275=7\t=\363\201\354\274\250[\362\274\215\221\337\273 ^\313\274\355\027\035=)\321}<\357\013 \274W\336T<N=$=G\273\032=} %\275\252\345\263\274t\205$=rTq;>ux;\320\321\236<}\005:\275\370\247=<\245\226\037\2759\3522=\037\275X=\326\013\357<{t!\275+\014?=\267_\252<\247\333\232<\327\362H\275\302-\037<}<\251<#2)=*N\312\274\245\320\237<@\314\326<y7\271\274Z@[\274\006\345\016<q()\2755O\337<A\031\250\274\365?\"=c\nI\2746\364P=\242-\010=[\203p<@tW=z\225M\275\207\227\304\274\220\345L=\376\000\021\274\"\343\351\274\215_Q<\224<\212\273\226P\344\274\375z\214\273\246&7<\3709\355\274\242@\275;I%*\275_\224T=\326j3=\341J\333<\341\t\264\273Qb\227\273\003\227\013\275\205\032J<,\252j<\340\350\371\274P\322Y\274\235\033\241\274\231Q\377\274\"\222\203\274r\335\265\274/D:\274&\361\323\273\2742\014\275XN\017=\270\r\243\273\231^\002\275z\016\336\274\305\016\331\274g\362r;\036w5\274f\001\261<\266\204\256<q\343-\275\212#\021=\306\271;=\013-\027\275\303q\277\274 \207\210:\301\301G=\r\027:;\377\342\010=J\tY<}\005\216\273 \222\177<\345*\026=0\225\016\275X\215\364\274\036\202c\274\346l\275<^\237:=?\272@=S\303\301<x\0053=\254iG=\314\366\340\274\300\370O\275\231\003N=Kt\217<L\356\236\274\227\004\224<\224\207\037\275\215\304\0079K.\346\274*)\376;!M\353\274k#\227;\217\375>=z%\312<\312\324\270<\026\0260=]\\\020\275\246\010\205<\351\2603\275\0327\033=\005\035\221\274d\277/:Z\325\"\275\372\306\024\275\037NZ=\302u\027\275\202\227\332\274;\203\326;\003)\017\274\256\273\204\273u\332*=\'\247E\275\025\3614\275\266e%\275\262\336\034\275\311\t\332<\370\3268\275(\345\266\274\344\3701\275\206/\215<\213YD=\0176\271\274\352\311S\275\321\305?\275d<Y\274\354\340\352\273\252{\235<\345~$\275\356\350\"=9Q\312<\236\217%\275\002\310R\275\261\036\333\274\270\237\373<B\243\013=\310\312\005<\206{\354\273{\345W=\377f\013=\022\256\365;\221\334\205\273\305Db;;\364\021=\331\006K\275\034mu\274\230\221b<\346\"\\<n\240 ;\023&\177;w\366{<]\223\"\275,\370\361\274\217\302\250<X\255Y=7j\024\275\275!9\275zN/\275\224u\001\275\323\016#=\253\0148=\310\035\n\275\035:?=\252\310\036<e[p<KF}\274\324\235\276\274\300U\3539\251\372\224\273\323\'-=\036\320 \275{M\033\275\336qP<\263\210\366\274\262\353\232<\245\372\301\274\n\367\233<Q2U=k\311?\274J/K\275\244\256\332<\272\202\335;\203W\007\275RU,=\304\'\205\274U\353\001\275\364\327\262;\000\221\324:o\243W<\013\236\002\275\307z\037=d,\316\274\310H*\275\250-?\275\363\374\335\271l\350.\275r!\246\2744\215%\274\t\265\247<o\245X\275a\004X\275\365\0134=\013\031I\275\3756M<\356\r8\275\004\274\322\274\222T\017=s\364\021\275H\206*=\037\307\225\274Z\204\357<7\3401<\036\350c<)p/\275\243\215r\2740\272\347\274pH\324<\363\322T\274\326\335\364;\231X\247\274\213T\264;\325\2335<vj\217\274\373\025\022\275H\004\n\274w\337\t\275\027\303\322\2730RB\275\351\213L\273\256j\363\274\340\343\230<\234\024X<x\000\263\274\'p-\274\265\323\027\275\026\341\030=ls\031\275\177\273E=\337\300\024\275\241\226?\275\207\377\250\274\360-\305\274\352fL\273b\226\313<x\016\t\274\001\n\002\275wDZ\274\210\271Z=\337\235:\275C\336*\275\265\275V=kr\226\274\036-H=/\235\201\274[\251\246\274\204\035\304\274\324=\372\274\271\034\337\274Y*\371\274hO\353<\307\260\345<\021\032I=5\336\362;\230z\216\274\203p\377;\314y\337\274\272\336+\275VoV\275\260\275\r=\367|Z\275\227\037\025=\333vX\275\314\216\035=\271\331\007<\354\257\371\274*\301==.-4\275\304^\366\274\267\361\221<J\215\004\275\326k==\325Q!=\251\354\275\274\324\031\360;\267&/=H\313+\275\330?\252<\327JE=\216\374\327<\343\334\035=\307^C=\257?G=\003\247\314\274\366\241\370\274S\035\335<O\350\257\274\204_r\273.\032U\275\243\026\203<jK\274\274\277\363R\275\265\020\234\274\252\001\370\272\257\222J=\352Qh\274\226\3325\275w\252\360<\n}\322\273+\257-=g\2369\274\034!\366\274Cc\222\274V\263U=\030y\225\274*\304\033\275\344a&\275\032\241\276\273\330P\207;5\001\023=s\367\212;\037\370;\274|\n/\275\313\233\272\2740\035\025;\303K\255\274\n1n<\263\354Z\275D\030!\275\026X\223\2744\344\013=\364\201\005<,9\360\274\270\235\355\273\351\177\214\274\263\246\2318x\314\344\274\202\\\205\2739\222\233<?}C\275\207\"B=l\360\024<w\274\177<?\311*<\032\356+\275\331\304O=\310b\206<\226\251M<\375\267\257\274V\336N\275\275\342\006\2758,\032=\020\240\027<V\217O=w\221t<\352s$\274\323rP\2750,`\274\215\334\200\274\355)W\275)\272\322\274\315\340\014=\006D\261<\026\330V=M\276J=A\213&<\020\237T=\202\035#\275\261S\212\273\301{M=\217\3655<;\271\344\274\321\\\365\274\3148\335\274\013\316<<\177\202$\275=\316\236\274\221\244\345\274@>\220\274^1;\275\001\036\316;[\242\"=\277&K=\342h\020=\t\243Q\275\374:\240\273\372\370\016\275j\032\034\275\274\243\004\274\206\325F\275\270\337F=\036\260#\275\344\r6\273w\357\002\2750\035\214\272\335\310\317\274\372\301\306<\320LS\275\023\002\010\275\367\235m<\337\305\033=\272,\374\2741e/\275\031\360-\275\276\024D\274\033\035Z;8r\245\274\214}\344:\306K\326<^\252w<Y9\372<I7\210\274@\212\226;\216\354\252<x\272\025\275\204\r\374<!\341(=\023\014D=\263m\024=x3h\274sXM<4\354;=R\377\026\275\\\2074\274\313\316@=\362n\274;\020F\364<\322w\025\275\351\341\027=\351\274\250<\261\3774=\304\354Q=\002\202\002=~>8\275j\250\217<\376\314\031=-\276_<\007\226\237\273\010\230\260;6\231K=\267\355\031\275\223h?\275\026\0032\275\201\220N\274r\3126<8\310\356;\214\335U=\254\330\177\274\304\374\237<\331\235T\275\303\262D;\221\2675\275\264\331Z=?V\030\275\266\345\021\2756\205\224<k\305\335\274ze\005<\261\005\361<_.\036\275}\006\007\275\343\246\274<\"{\005=\003n\305\273U\2539;sI\247\274\344\0329=kp\r\275y\206H\274\n\2772=\257?\022<\200\346\260;-\310\030\272\272\312%\275=\323\t\275.Q\330<\204z\217<\336P7\275\214\211\017\273p\207\316\274f\251\037=eO\354<\310\344:\275\211\304\331<\3703)\274\342pm\273\345\3230\275\345\271\246<\025\016\312<O\350\r=\367\362\026=x$\001\275\262P\271\274\224>A=oDK\275\206\034\254\274\257\307#\275\212\377\204\274\036N\332;\350\\R\275\330\364\037=zcF=\251\325\276<r\305\227<\232\252:=\213\310o\274K\346\030\275\227\366=\274\026\023\277\274\243\335V\275\275W8\275\330\203\354<\320\025*=\371\310\335\274\024\371\270<T\230\324\273>J\332\274aXG:\303&R=\361\006\021\275\223\223,=\177\\\322<\346\243J\275\2622\"\273\274\327F\275}\245B=\205\312/\275\261\2521\275m\215K=Z\014\020\275\246\224Q=B\362\201<\245\\\340\2741CI=\314H\354<\373\023J=,{\375\274[&\365<\253\025\206\274\372\267\254;N\310\240\274\010w\017\275\204g\005=\0300\364<;\316F\275\346_\000=\376\n\246\274\317\352\315\274_\251\201\274-\313.\275\215\330\267<\306aA=5\204\004=\221V\277<AK\020\274\252\252\037=<\214\022=\234\261\355;\334\303\244;D\213S=,\270\372<\2121t<|\235Z\274\035\'1=f\032B=t\323T\275\336\321\034\2731K4\275\245\326N\274\312=\017\27551\312\267\332\372\374;V$O=hh\214\274Qe8=\234td\274\312\'\250<cT\236;|6\265\274\002\207\377;\360\3172\275\326\337\024=R\316\230\274.\3572=\350&\302\274ys,=\016\302\220\274\343*\024\275\026\203\001=\210\341\241<\351\333\r\275\030E\352;aX\t=\350\222,<\241<,\275^E\262<3\017\'<~\002>\275\334\222z\273|\005\205;W\341\037=\231\\\275<N\013\005=\373\214\355;\307\227\264\274\324\222\226\274!\372\243\274utG<\204\257\344<\312Vb<qf\271<y\nn\271Z)\241\274=\324\035=\005\3348\275\311\306T\274\276\330\010<j\007J=\020\216P=2\235$\275\230!G=\376kH\275\0229\244\272}4\004=Os\232\274\351\336\246\273\233\334\261<Z\241w<\260\266\027;*\r\025=\005\372\210<\232\277\006=&\275\336<\331\006&\2748FR\275\006\032\233\274\333q)\275>$\375<\017\373y<\267\341\032=4\352V=\375\320\037;\241\242o9\271\206U\275{T\272;\r\364\'\274\036\267J=\307 $\275z\275\273\274\231\312>\275m6F=:\341\021\275~\273Z<\254S!=\352Vw<\271\200\t\275A\300\271\273\004T\372\273\247\364\257<\377m\236<3\213\"\275\n\324$\275\311\342\017=-\3021\274\242\344\005\274:\354\273<\270/\325\273>cD= \3053\274\211\030X\275\004],\275_\017I\275\003\366*=\252\335L\273\371\306\364<\255v\366<\365\001\021\275\205\236\234<\203\274r<\364\342\031\275\354\016\024=~\000\304<\357\224#\275q.\346\2741\tZ\273\350\335\205<\310%\301\272\302q\032\275`\215T<\300+2=\224cN<2\177O<]&:<\374\277\256</\366==-B(=1\024\207<8\375\205<%.\036\275t\306\003\275?\3433<\215\3275=\370r\'=\002\321\302;g\372D=[\235\336<\021\265;=\232i\371<\223DE\273`\302\342\274I\2477\275\030<C\275\372\013?\274Y3\001\2754u7<\360\365\324\274d\371\262;$\362\033\275)\362\271<w\005\001\275\232\356\327;{\345+=\003-\271;1\351\023\275Q\343H;y\356\321\273{\330\310\274\374\257\026\275\254\274\001\274\264<\021=F\203\315<\320+T\275\234rv<\253&\n=S4\272<\237\202\033\275\205D\t=\262\3605\275f\"Y=: \002=D \340\274T\243\210<\225\216\364;}\215s\274^\270\003=\nn\035\275\257\313\202<\n(P<\324x\246\274\376\000\013=\271\255\326\271\"\364;\275\200\224E\275\260\327@\275{\027\313\273\t\264\302\274\036\233.=X\207\345<t\360+\275S\004\005\275I\026\365<\233\267\014=\001tL<\222\213,\275/\022\033=\344\0343\274c\376Q\275E\227\261<\020=\337<=\345\262\273\236\216E<\211\023\314<oSZ\274\262V8=\316\237P\274\013\355N=\316\237E\275\366\030W=0T\315\270\007\005\006\275\321\341<=QQ\360<\336H/\275\"\n\366\274\306\303\310:\335\336Y=\231\034\250\274\341oN=\357\010\014=G\010\253:\350\003(\275\311I7\275l\3462\274\205D\030\275e\246\361<iMA=\n\350F\274\025\270\300<\327#\262\274\267\212\311\274*\206T\275\332TI\275\301\222\201\273\205z\014<\274\324\001\274\r/\021=Tj\354\274\345_u<\304\245$\274\350\225\244:\301\270\023=\353bG=\241\005)<\\1U=\236\311\037<\343K\231\274\262\337?=\360_\322\274\230\210K=dRE\275#B\017\274\014T!\2746\007%=!\255\313</y\025=X\313\345<\306u\226\273 1\265<H\270%=k\267\343\274\231>\300<w\2701\275\321\250C=\331\325D\274Q\014\301<\036P)\275\243Y\013\275M\302\266\2738\244\222\274i\222\000\275\345C\007\275\353\346\014\273\271\343\215<\232\256\251\274\303R\"\275\236\251\326<\352vn<n\261?=M\206\335;\321\242O<\213t\203\274?i\326\274\005\372\014<\'\240\347\273\004\346\014=\343:\033<\364\374\312<\267\273\266\274\353\321\320\272k\231\337\274f\3002=\010KC\275\251\337\026=\265\371\003\275\364\270\224\274\331\3207\274h\315\027=F\216\n<,L\315\273\251\214\240\274\245_\350<\336\262U=\275\302\200\274\325%\003\275\370\212V<\323\220\177\274\303\322\326<_\222\216<\362a\216;\\\364C\275\250OE=\241\322@\274c\337t<\277\2208\275\247\322<\275\272\345\323<\301|I=\356\204\317\272\312!\207\274\377\211Q<\314\354P\275c}\036\273&\372-\275\2124(<3\310\031\275H\352\224\274\035\264\244<\021\024\261\274\361E\023\274\3357\232<\021a\304<\245\345\037<\220\252\002\275)\005b\270\327\360\237\274\'\261\032\27558Y\275\262\321Q\275\341\212$\272\356\214\254\274\276S\t=\320\363\355\274x*A\274\373\312\353\274\267\277#=X?V\275.\272\021\275;\272K=\003\351\205<\202a-\274\305\317\275\274\265|\234\273\257\374P=8\276-\274\345{)=Tg\016\275p\307\031\275\016\317#=\337%\271<}r\014\2758;Y=\231\240\357\274G\037&<\303\277\370\274\341T\360<\246\2435\275\223\3509\275\330f\215\2731\200P\275\366\245\013=\340c\326\274\212\212\032\275\006g(=\337\016N\274\207\347[\274\353|V\273.\256U:\036\367\325<\025%\026\275\330\002\311<\340L3\274\236D\337;\367\312;=\340\3027=\320\233\016\275\321\252Y\275\361q\023=!%\356\274K\2150\275\036\235L<\337\374\026;\350\343*=\267\271\352;\270\304\235\274\030L\277\274$\275\307\274fyC=\264\213R=\301\010\017\275H\276P=\271b!=\n\205\254\274P\177\'=\3144U\275\366g\021=^p\316\274g^\031=\323S\330\274\013(P<\231l\013=\032q*<\246X\001<\223U\031\273\362\357\225;\310!S=s\313\206\274\001\205\027\275\222\'\344<\215\007.\275U\333\025\271&mU=5\217S\274\242\346\016=\372\032P\275\374`1\272\254\200\031=9\202\007\275\310\362\032<\234\031\036=5L\000<\002\210\n\274Y4:;\345\347>\274H\267@<\232!\377\273\364\245\t=\332L\277\274\036\000T<?}\327\274\236\262\314\274\035-\"=\353d)\275\341\027L=U\244\326<\324\210B=\203L\2229vw\005=y\337\247\272\230k\273<@\356C<r\033%\274\301\321\010=\004X.=\336M\025\2757.\275\273\267\207F\275\226\230\353<t\37428=o?=$\023\"<\302\241%\275f\177\030\275\365\337(=~\372\274;\212\3609\274\364\312Y;\304M\273\274\006\351M=-*Z=\037<#=b\255\344\274\307\200 \2744:\021<r\314\000<\263N\233:\375N\001\273L\264\341\274\347\251L\2755L\026\275\272\371\017;\'%\363<\204\"r<u\350\372\274X\\M\275=\274\357\274o0\013\274\247\252\'<i\032\001\275BJ\323\273b\355\"=\204\016\337\274\2103H=4\016K\275\013?V\2741T\r;pu&=\352\017E\275\267\312\267\274\026G\r=Ov\t=\265>\254<\240\334\031<\242R\017=\177\311\n=\033\027H=Z\0231\275\201\256Q=\325a\013=\237\003\361<J\365\026=X4\352<\341\234\023<\253\367\250<M\\ =\273@1<\tx+\275\023E4=\336\2112=\214\024\001\275\022@\240<\007\315[\274OM6\275\371\231V=\307\2261\274}>\205\271\257y@\275B\350\324;\220\257\345<\210\330G=\376\317\007\275\347\215\216<?\343\274\274\232\2573=\255{\355\271\024\034\325\274\300\030\005=\220\365,=\020\020\375;\027/\002=\352\r\344<\340\n\022\275\367\336B=\256q\022\275\007!D=\004\333\010\274\312\366V\274\336\210\315\274\240\246\343;\262\227T\275c\335a<|<\205<\2120\313\274\305\201\235\274\214\267\\<\253\200\273\266Z\256\223<\364\253\222\274\313\301 =\355\366\323< \237H\273\033\007\201;\373\250\352<\245\247\271\273\006\226\026\275CW\363;\302\370<\275\335\310/=LC\021=.\304\251<L\344\216\274&\256A=\313!\357\274\201\236\271;WT\324\273\350q\005<Sj\201<\030~@=!.\303<\321l\005\275\374\252?=\202\306\221;\316\203W\275ZCE\275\006\265\372\273\36607<@[\222;k\214\237<\307S\227\2740\2066=\305#Q\275\336\311,:\021aB\274\n/\014<p[7=\217\014%=\277\371V=\201\016\377\274\315h\331;BR\t\275PV5=T\203\237\274:2\357<\204z\034<3+T\275\321\331u;S\245\351\273UR+\275\235t5\274B\374\315\272xh\300\274i\0139=[\330?\275k$\274\274|$\020<\250\224Z\275~\202\022\275\376l\r=jL\013<\024\277\270\274\341\204J=\362\374\265\274\211\345\236\274\236\256\317\273\267=\\<\333e\313<\236E\217\274\277e\032=7\365\202<K!Z\274\253\t\275\273:<\377\274\207\020U\275\236\316G\274\251.<<\034\376\001=\240\362Z\273\245\376\352<_g\033\275\376v\031\275\237e\362\273\204Z\344<hu#=cFL=U\014\324\274N\363-\275T\225\023=\n\232E;\376\371\223\274\262\302\357;\367\013\020\275\316\307\314\274\223\262:\275B\274\"=yF\376<\217\346\021<\006\177.\27504\n<\305\311S\275u\261R\275#w\236<\353+Y\275<\016\306\274\370\240\244<W\251\210\272\206\010+\275wu3=j\333\351<\243\363A=\213&\324;~e\322\274\n\323\021\275\022\334\331;\026\3500\275\007\307\324<V\013F\275\271\365\311;\240\376$=)\316\311<5!\030\275\177\025U\274p\361?\275\340q\363\273*\004A=\337P\024=\177\220\355\273\341\377-\275\226\3365=\224\375\220\2745\'\233\274p\370@\2750\2721\275o\220d;n\016;\275\351\036\363<*\264==\237k\266<SJ\t\275^\266\254<\326 \316\274\310\301\314\274\344\220Z\275\013p\210<\234\202\301;\255\275\323<d\000M= -\306<h7W\274\211\323\352<\302\355\037\275\236\357\353:4\005\274\274\206xJ\275\310G/=az\234\273\005\002;<\\\364\345<\217<\321\274iP\036=+\" <\247OD\275i\300;\275\'\020P<\235\323\371<B`\374\274\355\261J=\205\272\332<v\342Z\274\211=v\274~\335\022=\212X\372<s\004!=\\\335*\275\202\301Y=\032P\251<\324{\003\275\362*\240<j\340w\274a\030\005=\331\372\202<z\337(\275\024\3167=\306\265\360<\010\035\321<\340\234?=L/\033\272Y\240B\275\216\320f\2747\245\375<\365/U=Y8\354;\231\000W=c\234\236;7\321\336\273\223\234\204\273\301PW=\254\231\266\274\233\210V\275\2520A=I8\353<d\002(=\353\325Y=&\t\324<D\304\213:S\210O\275*R+<\376v\001\275\031\304!\275\367\273\302\274\021\000F\274|\365\323<\t\1778<\322\276\3359)\227}\274\216\004\"=Uz\323\274m\321\235\274\325\331\203\274\216\3227<8N\350<\001\001\001=\204\360I=S\273\206:\312\347\264\274\372\024!=\325\227-<\212\327\222\273\203\036\030=\310\304j<)\225\325<\315\202A\275f\315\304\273#\312\000=\007o\331\274 0\007\275\214\3207=\000|?=\021U\240\274\322E\244\274\360\2242<\014M\201\274\311\007\375<#n\007=\326\350\361\274\337\362E\275>\306F<\022\252\275<\272H\274<\030\tG\275J\256\317\274\2072]<\224\254\207;>s\213;\262\265<=:\236X=\215\314X=\315\377\342;k\325Q\275\346\021\027=\331\375\351\272t\267Q\275}\277\'\275x\332K\275a\263\200<\204\n\'=?\006K;\226\"Z=\364:\254<L\214b<y\233H\275gL\236\2741\251M\275E\272\270\274?\210\"=\232\337T\274\317\247\035\275/\274\315\274\262M\3727\226o\000\275\353\315\332\273\323\013F\275w\010.=\244\224\007=XD\322:\342\377\"\275\361Hv\2746`\207\274\342\r+\274B\2333\275\277\350\"\274\006\307#\275h\361\014<N\321/<\313\337\251<\200\2329\274\367\023>=\022\303\002\275\301t\014\275\342>*=\272\255\364<\230*\330\274\031\261\301\273\347;}<\220\271%=m]#=\tUR\274a\353;=_\275\013=\254\"\010=J/\034=\343s\361\274\211\277\007\275\236\260Z=L\t\037<\272MN\273K\271\022\275\3376\342\274nD\360\274^\333+;\005\220<\275\361=@\275\027l\327\274\337O8=)\266\020<\235\2219\275\026\202\001=\230\347\365<\325\311#\275\337\026\370<\336\021\016=h\255J<\217Q<\273W\244V=\034\255\007=\331\212\004\275\216\206\016\275+\341\207<\235\275\224\274iC\023\275\256\0254=\206\3430\273/\234T\275\257\336N=\227\233*\274+DO=\240f\334<\262Xt\274\323\225\360\274\204#;=O\235\336;A\334\006\274\220z\310<\275W\303\274\260y\240<\3134\010\275\2770\001=\341YZ=\335\017e<X\241\037\275ck\316<\362\302\277\274\026\356\026\275\r\237\003=\300\207\215\274\352\342\243\2746`V\274-\346\314<E\016<=(\357&=4\225\300\274\351K\003<:\355\005<\235e\311<9\366R\275\212{\266<\304\351\020=\214\177?=\345n6\275\264\177\021\275\014/\324<\354\201\033<\242=J;M\333\005\275\353\216c\273<Q\360\274\242\014\037\275\202NC\275\234\3452=\353AI=V\234\'\275\332F\027\275\350\341\031:\032\303\013\275)6\244\274b\230\000=\356\325\022<\n(N=Mk\262\274;\316!\274>\364\246\273[\376+\275\234\250B\275pn>\2755\322g\274\272\0050=\005\343R\275?\333\362\271\373\371!=\367R\265\274\243(\260\274K\355W=\036\341\354<\025\025\010\275.\205\3137\233gZ\275\252k\301<)\211\350\274Zyn\274\330$\242;#\002_\274\257-)\275\372\323\256\274TpQ\275\316\300\300\274\361lZ\275wX\020<`\340\017=)c7\275\253\306\310\274h\211\006\275U\006\356<\317\327\240;\204!\332\272\360\334Q\275}#\022\274\266\\\266<\340\333\322<\340\346/<%\274)=\225bI\274k\2159\274\030\001=<so\031\274\334\277\n=\017n\022;\363\t\265\273$\005I<\031\324i<\022\311E=\020\330h\273\276\234\322<\376Y\362<S\267==T\245?\274%\022\036<\325\222T:\240XR=b^B\275\251 \232\273\324\225\016\275\373\241\217<?\303\324<\253\336!=\341\351\324<w(\004=\320\202\207\270ox\207\274|\334\n=\212@Q=\375L\014<\264\362:\275\363\307\376\274A\242\373:\232\362\255\273\302\202>=\310\036P=p\253\000<:\007\365\274]\216\035=\010\035\213<As\316:\250\236\027\274\22411\275\323\346\361\274\004\334O\271I\303.;\003\3316=7\264+=\342\303\001\274,P6=\256\273z\274\310\344F\274\360\201,=\314x2<OzO\275\336\264\024\274\"\3555\274,6\366\272\270|\300<\237\344\261\274\364f(=\347&\326\274g\260\004\275\343`\036\274FP\242<6r\267<\371=c<\240\r\205\274\225\345\206<\353%\032\275\277\361\374<\202\365\227\274hZ0=\3130\333;nYZ<,\236\335<\206a\"\275\274\225b;\033BB=2\311Q\274\372~\021<\'\235\340<\267fV=192\275p\332\'\275\320\325.=\304)N=\270p\301<E\243\204;}T9\275\2467\020\274Q\365w\274`\r\010\275\340FP\273\265\020\025\275\225\233\361\273\316*\r\275\230\322\201<S6\0009\232\205\246\2740l\244\274\210\017B=g\341\343;\266\241\332\274*i7\274\255\031\030=\356\260P;c\254@\275\243\004\262\273y\014\022=na@\275\266\310\000<\265\251\315\274\212\200\010;gH\305\274\277;>=\014\335\254\274\313kA<\313\234\205\274\227\364\345\273o&\357:\353\232\004\275\220nF<I\212S<\206\314\347<\340\364\251<\205\303\007\275\236\345\327;\374SK=y\356\230<\262A\023=;\307\t\275n\251/\273!+\020\275\342W\260<;\202\256\273\321*\231<\235\347\274<\332\225@=\225\273\231\273\222\254\005\275\373\302\010=\372\207\307\274\260\305\n=m\334>=\3234\324\274\225\2624=P8\020\275,\013\201\274\347_\336\274\270\302$\275\002Z\214<\rB0\275m}]<%\206\006=\003E\034=\341\226\013<hl\366\274\t\241\017</&\332<s\2565\272\031w\007=\212\273\340<\206\255T=\017\231\234<\364H?=\257b\261<\340\365N=\260\347\304<\233\233h<\254#\313\272+.V<|[-\275\215H\027\275\304\005\004<\020z\035\275-\315Y\275+\311\322\274\265gB\274\336`\352<\261\356)<i,\020\2755\223\302\274\230\021<=\363\003\000;Q`W\275k\317\177\274\004\375\224\272\206\241$=.~J\275\030M\221<\342\3047\275{\231\265\273S\310=\275\3000\001\275\355y\033=\375d\351\274\364E\343\274$$O<\240\366\001=\005*\377<H]\346\274\336\305\273;\227o\t\275u2&\275C\2718\2758\030\245<\267\375\331<\025\271Y\273\354\026D\275\242W\333<`\033\377<k\231.\273CM\236<\017[\030=>\267\036\275\376\026Y\274\025FD\274\223\323\371\273\177\036\270\274\006\270\235<\352\360\035\275\032\373\033\275\270\3507\273&\214`9\353=\347;\206\201\275\274XL\000\275M-+=L\247\035=\371\270F\274u\305\000<G\265\212\274np5;\201\355\t\275\3342L=eE\350\274w\231\206<7\236\351\274/\035\266\274\214\311(\275\021$3=\324\034\274\271\\?\320\273\304\013\t=\227\313a<\355\204\"=%\246\260\274Em6=\276U\035\275\331\224\315<\002\362\324;\'\3228=\254t\203\274\244\250\353<E\006J<=\206I=&\225\316<\005\340\330<\356\010\013\274\305! \275Ik\001\275\336\353\256:`\274\265:\336hV;\363\336\025\274\265b);\347\2326=\365\030\236\274\374\354h<\3759\225\274\001\262S\273\221}\342<Xx@\275W\307?\275o[E=\200\245B=\263\366L\275wY#\274\250\302\204\273\030\246\233;\307)T=ci\346\272A\335\344<\354~\035\275\024\350\350\273t\337z\274\026\3247\275q\361\303\273\242\204\251\274\344TP\275\240l\354\273\\\"\263\274\244\375\245\274\246\233\221;\324yv\272\0012+=%z\003=l\351(=\252Q\232<y&\352\273\367\004R\275\024\335Y;`\035\355<|)\330\274\361&/\275\"\272\006=\031h\247\274\3556\215\2745\\\217\274\321\204^\274\316\037B=Y\\\200\274\260\203\316\274\004\t\013\275\352\025\220\274{U\033\275\236\234\322\274\233\325\\\274\201~\333\274u\265C<\035@l<&\nU\275\364\t6=\244\'k;\261*\021\275K\256\010\275\363\202\377<\303\\#<\342~\213<\243^.\275 \260\260<X\3068\275S\022D<5\211\342<\017r\225\273b\376\246\274F\213\245<\311\313\331;\177>\362\274\311U]<R\031O\275\346\365&<[\211\006<\311\004\304<5^\361<\373K\306\274\330\363\237\274\212\271\305<\2079\276<*\256&<\257\366\030\275\3736U\275D\306\245<\273\214N<\036PJ\275\316V\013\275Ta\202\274\225\363O=\001\312D\275\320\200F=\300d?=\350k\363<~\337K\274\230\376\026=R\221\250\274i\273\360<H\333\365<\026\031\025=\362lp<r0Z<\005\004\001;\010$\333\274\0329\t=Qm)<&\3520\272U\253J<\303\n1=\2449\370:9]\000=\275=\021=\253\305<\275]R-=\337\316\037=O\250&\275\222\326\035\274\\\007\267\273\224_\313;~\233&=K\0212\274\346\026\327<J?\373\274\356}\200\274^\264\300\272!\200\352\274\321:W=K\221\307\274\347\333#=\\\356\213<\301\3041\275\252\365!=\325\243\362\274\0176\371\273\020\346\317\273\023\210\t<m\2163=x,\024\275p\037\306\273\024[\323\274\361\366%\275\262nY\274;\217\213\274>UD=\306|\002\275\035\2273=\000v\013\275SK1=\371\221U=O\225Q\275a\300\354;\'\037\356<g\370Y\275\013\001i\274\r\034\202;\254\315X\275\220\224O\2759\201O=2\350L\273\202\265\362<\347\tQ=o\020T\275\247F\026\273\204\232\254<,\212L\2750!1\275\376\315\351<\007\336&=e..\274\202\237-<\3548\\<:\225P=\371\016T;>mM\275U\300\035\2749\304\r\275\247\303\237<\300>j<\352P*<\230`\341\274\311M\320<\322m \275\360\215\010\275N\330\227<IB%<\021\321A\275R\022\267;\237\234L=\220\231?\274:\324\026\275Q7\017\275\005z\273\273l^\317\274\243\275\300<\361\"\277\274h\226\363\274\206\016+<\027\022\304<\227\305X\274\300\250\244<\324\211a\274\177\007\037<(\264U=|b\221\274\240\021W=t\232\032<\262\321Z\275\246\\\257\272\t\353\025=\014\004H\274\2461/=i\332\022=:\361\371\273\034\323/\275.\3155=\322|G\274|\364=:06k\274\222\360-=\006\252\346\274\210oE<\3665\034=t\216?==\316\300<\023\251N=Z\217O=u1\350<bZ\373\274\314\266Q<\034\306\335<s\204\312<Z\201Y\275\202\306\277\274Lwz\273\302R\330;3\347b<\377V8\275\347\3750\275K\035Y=\301[\306\274\273\312\275<\034/\241\274\351\0012=\250\227\363\274\220\345X=\270\322\224<\340\321B=\\e9\275\267\254y\2741\341\035=\315;\214;^[:=\230\2428\274\2236\005:\310\020%\275\023\355\206<\333\232\'\274JYz<j%.\275i\355$=\247\201\014\275\244\277}<JBB\275\030\331\352<3.\374<\031\312\316<v\354\250\274\236rW<\016+\201<\0337\242:Rn4=\201\3643\275c\350\340\273\234\023N=\307\306\n;\214X\243<\212\001):!9\036\275\246\035\007=f\010\035<\\\324\307\274\331\t\254;\325d8=\001t-=O,\212<Dsl\273\374\320\257\273\222@ =X\265\376<\034t\035=\006\222\024\275 \366\217<\270\236\302;\254b\376\274\211\261\2139\266\206\325<\240\247\344\274)\257\300<\205fD\275K\356\251\274\231\034\301\274\3440\016;\314\"\310\274\336D\023\275\277\204\221\274m@\016=\217^\255\274\2345B\275\0220?=\354\205\365\2745\376\206<>]\001=K\207Z=\">R\275\322w\035<\021i\017<\307\346\t=\017r.=y\2557\275i\376\002<\263\305\034\275\216:8=\331\302\253\274\306\363!\274j\342X\275\373w\350\273b\335\254;\251_\236\274\366\237\223\274\221U\357\274\353\007\217\274\211e\231\274w\242\003<^\315\r\275\"\021B=\326\243\007=p\006\220<\260\214\353\274a\362\207\274\277L \275t\222+\275]\271\344\274P9\233\274\325\247\271<\347*\372\274\351\200\333<\236\026\276<\\\027^\274\301\252\352<\263\347C:\217\327\326<\372V>=\267\332\"\275a\274n;^\267\314\274\274uC\275_\'<=\303\305\014=*FF=\025\274\342\274\273a&=\342K\255<\004z\265<\377\220,\274\213\327\201<\037\005\200<P\3515<\201\332:=\326\035\325\274\034\025.=\274\364H\275\317\247y\274!\310\023\275S\211Q\273\254+\336<\007\335\020\275\244C7\275\316`\363<\033\217X\275l>\317<rv\203:!\026\010=\026\357R\275\307\010\037=\242X\211\273\336\245\336<\305\322I\275[\357\310\274:\217C=\257\323W\275\206\002\2539\2047\327<\271Q\346\274\313\277\304\274\321T\311<\016@L=S##=V\014R\274\351W@=\177[i\274\257\014\360\274\013\322\000\275w\375\007=%\201\354;\343}\234;I&\034=VJb<$:X=c\366F<\321\302\343\274\"\221\201<\016\225\212<\203FU\275f\016Y\275VI\"=\265j\224\274\213\233\312<3\273U\274$\370\300<\303G\254<7*&=\233\003F<\254\000b\273,\354\323\274H\345\t=*d,=j\3326=8\333\377\274\314t\341\274W\307\237<\'q\204<C$\023\275?\372@=\211\324 \273\250\027\201\2744f\225<S\2719\275O\221\326\274R\031~\274\202\245\210\272\037\022\350<\253&\325\274\016n\233\274\373>\355\274\363\2355;\207\324\326;\\\373\006\275\253/7\275\221\371?\275\356\034V\275\254E =\274\276\302;\226\267\203<\005\203!<4BU=\010`\364\274\007\361\350\274|?\213\274\227\306w<R\026\245<\330\367\207\274\355]Y\275\221\020\240<\3631<\275\206\377\220<\353-Q=\301!:;\323\017G=pz\023<P\326\013<\312\273B\274\326\371B\274-N\007=\337\023\'\275\265\034E\275\240\352&=\204\000\305\274\244\314+\275\275v\374\272\320,\276<\244\361z\274/\025\004=\221b\000\273\355mL\272\\\247\246\274@\211S\274\316\007\"=\273\034\241<)\224\035\274b\227\022;f\223q<\007\017\006\275\352\3765=\033,\007=sb\035\273\210\205\311<)`H=\276\024X\275\201-\367\274\010\213\254\273\025\327z<\201=%=\367\252\217\273\267[\372<\205pv<\317`\362\274]\320:\275T\237\347\274*\"?=h\346V<\374\273\327\2742\340\034=\373T4\275H;,<\351\331\356<\231\341I=\2167\020:\310Ly<\220q/\275<ZB\274%\037\306<\224\346\346\274\037d\266\274<\'\237\274Y\307\213\274\026\007M<\346\357\010\275n\377\010=\233h\352<\200\245\017\274\233\366\363\274F&\325<\247\3709\275\034\2675;`\220\034\274\224\001\r<\356n\021\275c\002\021<\322\220\375<_\340\360\2749\0106=\330\253\\\273n\313\335<;\0353\275\336\300@=z]\311\274\201\363\023\275f\243!=\361\366@=\256\3527=\244\360\007=\232 4\275\334\237\016=1\377\023=l\315\211<%w!\275U7\214<\032v!=)O9\274\273j\316\274ZL\224\274\007\001>=(\356\033<\"\241\343\274$\205\t\275J\023R\275\023\302\006\275uk\n<\240\243\025=\010\224R=\250%\007=\033h:=\352\220\307<&N\034\275\225D\031\275\230ia<\\V\030=\224\203\033\272\206\221\023\274\350A*\275\0267\354\274\332\365\350\274\203\275\236\272\200\"\276\2740T\202\274\251\315\324<\277\237*=\226EM=bFG\275\223T{\274p\320:\275\242\204B;\310\372\325<\314a\335\274\\\022]\274\312#\270<\223\315\263<}\034\371<\250\222\247\274\307GR\274\206\257\205\274\371\320\300\273/h\321<\310VR\275q8?\275\324\374)=\302\357\310:q\261/=\314\314\205\274D\300\221\273V\265\004\274*\035-\275Z\231&\275l\030\207\274\2313\356\2743\200O\2753\277L=\316\355\215<UK\270\274\177\003\035\274u\236\r=\232\013\035=\225\241\246\273:\211u<\243\230,\275u[\355\274K\211\010=\201n \275\210\023\331\272\2626\346;W\325S\275\367G\023=\236\2540=\362\275+\275\230\213=\274v.\303<\304u5\275#\210\374\272\237\014\025\275\272O0\275\310\341\206;in(\275\202\337\001<\031\256\326<|\244/\275\315XW=\213q\024\275\353\215\322\274\375\320M\275\303\010P=h\203\220\274]\322S=\354Ux\273n\223\020=\245\364\246<\365c\261<\265\0256=\346\343\007=~\350G\2755\"W=o\254\325\2747\363+\275\204s\211\274\n\241*\275\030\273\006=baF\275\030p\302\274U\013\363<c5j\272\316H\345\274\313\315A\274\005\376M\2756a?=\215\245A=\372X\267;\004DL\275\363\275\000\275\255\351\352\274M\367\177\2733\032\347<\272,\375\274QCY<\020!\240\273\342+\003\275\350&\026\275\027\002\364\274\261\323\244;\320D.\275|1\n\274K\013\352<Gj\344:\227\212G\275bw\002<6\370d<\2029\204<\210\235\001=\206\nn\274\252TN=\275\275K:\266`\025\275SG\250\274L\215.\275X\'\316\273>\373L<\211\375\025\274qe<\275\303\350Q=\267\3227=\204\030#=\313\247\332<a\347\016\275S\340\"=\356\017>=\215\032?\275\212#\021\275\255R =\232\030\222<\253\340\"=S\366\324\274\335\027\265\273&\227|\274\267\304\323:\177\220,\275\375$#\275\336\330;=\024\325C\275N\327\004=[*+=\201l\030=\033\315)\275\271J\355\274A\215==\201X\326\274\211S=={<==\244\007\366<5\253<=k\324\021=sV\302<\365\t\033=\377\013\360<\276\306\243\274pEE=\243d?<\304\265~:\017\314\277<\336\005\214<\252\017\233;\375\260\343\272\253j\"\275L\300\215<\237\301E\275\274\"\201\274/l\220<\300<\017\274\254\232v\274\036\363\230<\362\307\030<e\230L;5%N\275\025Z\362\273\355\311\330<\252K\257\274\356#\322<!\320(\274\331s\353<\375\r\375;\201\236\037\273\013n\254\274\252\322\267\274\260/G\275Z6\206;r\016\374\273\225P\023\275M\362\345\274-\025\251<\027\226\031=|`\220<\306\252\017=Z\365\005<V\353\373<\344\322\235<\023\242\331<\26634=;c2;\023\276\027=\335.g<o\250\211\274\272\207A=#\177\031\274\207\250*\275\361Q\323<\215s1\274\316\327\237;\257\301\022=W\336\024\275_\371\201\274\254j\020<T\002\372;\335Q\252<\3312-\275{\025\322;?&\002:n\243\n=n\262%=\236\324\245\274\313\246\006<\362\274\301<\251\354\250\274W&\372\2746\243K\275:\215C\275 \204\327;ay\016\275tx\231<sA|\2744\263\"=V?\360<XF,=\364\220\010=0y\034\2758+\353<\271M\001\273\336K\266<LM(=E\351K=\343_+=\340+Y\275Rz0\275V\233L\275\267\320\263<\016U\021\275\005\254\214\274\217&\232\274\214k\031\274\271\347X=\261:\013\275#\274 \274\236W\233<i\332J<!;@=le3\275JoF\274\372\306I<g\267&=\331\267M\275\351tP=d(,=\372y\353\274} (\274\351\3628\275\223\313!=\247\020\332;,\246#<\276\207\031==)\332;\276\002\213\272\"rj\274\351\013\306<XA\220<+\202\204;\'|a\274\006\213\353\274N\024\310\274\0058W=\340\024t<\236\013#\274{\337Z\275~\361\001\275\024\310o<B\206M\275\\\323\201<7q\370<2XO\275\264\367@\275\250F\335<\354j#\275\270\315\356<\031\215q<\r\007\031=\231\030\375\274\241?X\275l\0252\273\234\026\341<x\366N=}\0062<aM\016=8v$<c\211\360\274X6k\274.\0376=\026\351\017\275\254\241\275<\325\234G=\333?\256<\035\326?\274\"\0073=\2452!\273\026\276(=\317\0360=\272\341\021;\321P\355\274\001\313\032\274\373w\353\274#T\252\274\311uF\275\\2#<AXE=\205\205\002=\371\304X\275\260#\303\274\352\304\304:@\333\277:\302\325G\275\003\257\354</\341@=E\257\324;\252\246`:\222\251A\275\301w.=\373]\247\272\372\222\234<\253\216\242\274w\362\t\274,E/\275\335]\355\274?G\305\274?\375-\275g\322G=\025I%\275\001\304\224<\002i&\274\3230\260\272g\002\027\275\223;\325\274\216\276\264<\266\337\351;3\210\206;\303\006 =\220\342/\275\212\320\005=x\"&\275\331\211&\275\274\300V={\352P=\255 F=GSO=0l\242\274X\334\177\274\366(\312;\200\245D=,1B=\210\026\343\274\222\276\334<\220\341\336\273\247\347\251\274\2130\n\275\201\263E\275cM\207\271m\355\345\274\215\230\323\274\302\271\213<\007\224&=\365\314\031\275\315\035\251\274\260k\3279]{\274\273m\315O\275\':7\275azF=\027!\037\273\345$1\274G[\034\274\365\206\251<JeE=~\262@\275\337\315Y=\3529\270\271\317\324\020=\352\311M\274)\272\201<\342\022\023\275\226\037T\273[\272\310<\226\245_\274\324\\9\275\205\023\253\274!K\251\273\227b\365<\231|\010=\226\033\002;\257\356\362<\265\355\244\274\302\343\371\274\266\350\226;\336g\031=\017>\r\274\333\373\004\2753C\244\274\327\371\242<\273m\000;Dr\226<k\307\341\274\375\343)=\214%\334<\001\244V\275\314\330\037=\000,7\275\345\332\224<\216\211\302\274G2\242:\264\256T\275\276\334T\275\354\221\017=\277\350N=Bf\274<\033b\231<T\244d\274j|\315\274\225\372d\274\351\371\327\274)vu<\357F\025\275\240z\037<\216f\237\274\315\252\372\274nh(\275w\205U=\210\353\360\274\267\302V=\256\202\252\274/R&\275\333X =\337C\366\273\241D\345\274\'f\030=q\225\372\2748`\013\275\232xR=\320\013\275\274w\300\025\271\333&\336;\'\226\341<\266\022\275\273\235\0049\272}\3177;\032A\243\273F\037%=c\227\354\274k\225\327\272k^)=\363\022\024=\230\035\264;\300\240\230\273\201\3740\275\262Z\033=\025\376\035\275Pv:\274\004\324X<\257uA\275\023\345\004=\313\014P\2757m\025=\3233\306<\354\337\217<I\236\274\274\236e\226\274\017\005\331\274\315y\255<\276(4=\207*F\275^\370\375<\353\270\024\275\230\261w\274\254\314\256\274\274F\373\274\310\303X=\331TA=n\353-\275\360\247(\2752\337\242\274\3167\001\273I\277J\274\213\342\215<\337\020 =\263\242Y\275X\006K\274H\232\346<J\202\030=\027\rZ=\357&\346<vY\352\274\353\315\243\274Q\002\032\275\304Q;\275\003\272\202<3k\253\272 e\273\273\241\321/\275l*\205<\362\263L\275oF\251<U\267\256;\036\221\027\275\013\2110=\375\250F=B\303D\274\270\345\242<z\010\377<\217S\264<J\347;\275\310&\026=\034\367\032\275\271\234\371<\027\332\014\275\211\211\250<1\343\235\273\014&M=\320e\226<\344\207\031\2710q:=\333\257\026\275\240L,=\002\227\200\272\236\264D=\247i\265<\254\250\302\273\224\001\020\275d\r\342<\255\010\016<\001\033\256\274\346\2478=\316l\006\275\210U%\275\021+3\274\271=\276<\030b\220\274\304\217\005=\217AX\275S\216\343\270\001\253C\275\310\262\214<R(8=~\206;=\315xJ\275\022\364\220;+`\276;\333\346\273<V\353\033\275mu2\275\206\006v;\343\371@=\002\310\224;\367\232\021\274\266\303\212\274\305\273\256\274\220\317\214<ut\207<}\201\0179E\274V=\303\204\024;\261\0266=w\355 =\006\345S\274\3057\225;W\371O\275\2206^\273\232\264\277;\333\343\031=2\210W=\341\313\201\274\377@\360\274\0325E\275\325\243\265\274\014\301-=\3052\313<+\'\305;\374\340\"\275\tL\351\273\355\212\372\274\370\363R=\244\367\322<\314\005\274<i\337X\275\374t\014=(\016\2639\250\\\274\273\324\250t\274\220\205C\274\365&\236\274\3217/\275\256\2220\275Z\010\367\273]\203\020\275s\327(\275\334\210<=!\310)\271<\177s<\'\346M=\300W\t<hn;;\027\233\000\274\321Q\233\274\'\0308=<i\300\274\201\257\247<\266\217\t\275C\016\310<\023$\256<!&\013=lN\004\275\324\002\377\273\227\"0\275\313\206\364<\221u\263<\271FY=\016\377\035\275\331\2518<\201\010\212\273\376\0360=\251]\\<\2176E\275\034\323\302\273\365\224\342;\226\347Q\275W\013\316\273\260\010/\275V\267\341<{Z7=\224\330\267<\271O\265\274\345\376H=\026R\025\2750.\265;`\362\005=7\303\006=\224\301T;e\272\255\274\337\233\262;\263-\004\275K\373f\274\002r\032\275Q\252\247<uH\340;:\377\031=\227\303@\275\030\210\373\274\206\276\037=\006\277V<\305i\313\274m\264\303\273\017\344N=!\316\342<]\034@\275\222;>\275\357\013\201\274\374o%=P\233\021\274=\344/\273\272\275$\275&\236A=\303&\311:\364z\305\273{\213\324<W\333\367\274\233\311N=E\253\014\274\231\222\0278d\257\003=\353\315;<b\347#\274\221\344#=j\t\030\275\323\203::IQ;\274L\240\200<\247\204\035\274\207t%\275}\206)=\274wf\274\013\273\001=s\362A<\216\250|<\334\216\314\273\351\246\377\274s\372\356\274rl.\275%\313\265\273\333\352\243\273&\266\037<\226l\343\274\271\202==\322\350\311:\253\275,\275r\262W=u^\034\274.\356\341<C\210\375;T\025\213\272Rb\215<\241\305B=\225OE=\371;*=\216\257\252;\203/7=\206\250Z=d[h<\031O$<\031\'2=w!\'\275\203\273*=1\243N\275\2701\322\274\310\310)=\230~w<t\006&\275\177\306\371<J\020>=\302\342\340\274\264\005\020<\274\236\016\275\213\207\341\274p\236\022\275-\224\257\274\377\336K\275\234\210\321\274\240\336\300\272\326\257\016\275z{\207<]\242e<e\374==9\3257<\263\3343\275d\031\335\274\345\300Y\275u\373\217\274\035\314.=%h\234\274\225\3422=1\016X<7\334\217<&\215f\274\356!\305<\272Q\033=\302\267t\273l6\261;s;\205\274S\333k\274ea8\274\020\2114\274I\271Y=\207.\255\274jC\365<Z\351\022\275zM(\275\005Y\227\2702\244#=_\314\371\274\200S\241<\301\306U<\332L\026\275\3770\004\274\000{\365\274|/\220\2744*\242<\374!W\273\322\334\244\274k\314\310<\324lH\275\201l\352\274\016\354\342<\264\234?\275\376~\275\274:\027\205\274\2021\207<\262\t\"\274\301\016\350\274\362\032)=JF\230<\372{\005=\251b\242\274`\326V=\2335a<C\254\341\274I\300\311\274z\274\033=L\2417\275D\236E\275\021T\030=\033\315[\274s_\205<hl{<\035;*=\02184<p\263\302\274(@\277<\324\203\n<t\022\274<\037\364@;\224\310/=Iy#\274YV*\275(a\322\274\354\027\n=A\374\021\275\\\351\253\274J\016\323\272\020\240L\274\2015W\275]\236\207<\274\000\247<Y\300\377\273J\311Z=\264\271\032\274\244\260\024\273T\344\306\273\342\334\212\274\372\023\016=q\223\021=?)\035=H\312\023<\346\360\327\274Q=:\2756I\236<\222\335\025\275\224\220k\273\200i\207\272\242g\010=]\003\034\274\267[\254\274\203G\t=H\376\321\274\273\247U<B\014\005=|_\025=@\030\355<\311\277\355\274h\375\023\275?8X\275\036\332==\370ST<EQ\017\275\210\316\027\275\212\215R\275=\021\'\275w\220/\270[EM\275iAG\275+\223\205<\372z\315<\351&\312<Q$\353\274`=\321\274\236\232\372:X\202/\275>FC\275\307\n\213\274X\216}\2747\003G\275mj\246\274\024\235@\274\276\217\001\275\325\2249<\321\351e\273\242\005\002\2758\367\357;\205.J\275#\3141\275L\267#;\212P\242\273a\260(=\345l\341\274B\376\224\274vr\337\274\025y.<e\025\247;`\325\207<\322y\256\274o+k<\257Vh<\001\251\315<0\222\277\273\350\325\014\272,\035\373\274\225~4=\345\n\'\275f\232\254\274\315\212\377<\244\223\026\275\341V\236\273\006\002J=n\274\217<\033\016\250<*\036\007=\317\327\257<\260\275\346<\232;\'=\033_!\275\227\352G=g\235\317;\372R\225\274\225AC<\320\261\327<\002\020\235\274\342a\263\274n\216\214<\017\353\031\275\257~\370;\303\023\013\275?\374\324\272\332\246\362\274\325\312\360<\357b\034=\350\005T\275\216\301#\275\362+\276\274\tGS=5\215#==\\\310\274\350\306\234<\202zP\275\206\302\325\274\203\237\316\274*\021Y\275\033;\204;jF\237\273\006\035S\275\000(\030=\204\035T=\251\330w<\345\342\354\274\333)\200\272\354*7=\007\330\365<\311\333?\275w\370\332<\354~\251<d\032\007\275f%U=u\323\236\274\240g8\273#\351x\273\022\270O=\330P\020=}\263\220\274\275\3318\275Z\"\321:^\017Z\275\267\033_;!9n<f*\215\274\276+\034\274Ny\252\274\301\316\362<\245h\013\274\230u\370\274\347?\032\275t\257\310<\267}\204\274(\0274=\334M\204\273\237d\306<T\206Y=\306q\024\2744\266\n=V\025+\275\004\3160=\310\202\376<\231qS\274U>\004=V\252*\275\030\371\004=\376)\014\275\270\360V\274\210\023\251\274\313\371\341\273t\350\036\275\246T&=&\003S\275@\362\301\274\350\377\023=\317\335G=UC#;\007\322\353\272\027\345\266\274J\037#=\212}C\275\331\363\317<\367n\311<\244jO\275\301\025v<\333\332\"=D{\030\275\245HL=!\017Y\275\3517\005=\"t8\274\302e-\275\201l\270<p4\374<\270o-\275\313w\263:\263mF;\232\371\261;\251\276\304<l\234\243<\350T\345<\2378A=\2574#\274b\302Q\275x\243\243\274\361\3570=\2203\007=-\377X=\211\3039\275\220%&\274W\036Z=\"6}\274\200\214\322<\241\2563=\356\307\004;\273\201\204\2738]\n\275\336T\317\273\235\335\027\275\013%J=\251G\304\274`\224\001=\365H\'=\005\255\205\274\263k\025=\034\356|\274\026\001\315\274?\224\334;\004\356\330<5=\001=\316\343\272\274\256S\205\274\261\317\033\275\t\335\305<\260\222G\275=\025\367<\004HI=7\273?;/\367\022<\2428R\275\tV\345<}\317M=|\303O=V\300\224\273\374\210\031\2737\037\310<~\207I;\276\230\216\274\\X\232\274_g\036\275m:\256<\261\266\004<\311\004\027=\313F\2709\003c\352\274\217z\367;\253\025\033=\235\311\001\275@\010\037\2749\320U\275\363\276\010<1\027|;!\267D\275\301\3400\275\242\370\013=\004\320S\275\364O\272\274\320\007%<\362\2423\275\347zE\274?\210M=xL\034=?\010\372\274\302\255\272<\345d:\2742mh\273$\267@<\203+\260\274\361\224\320\273\216\250\253<\215&0\275\253~C\273\217\243\377\274$\035Q\275\032\202\362<:y@\275r\364\364\274\035>G<\036g\353<f,\352\274\376\314\340\274\320\306\242\274\252r\252<7\366\010\274\034\327\007\275\ty\254<\361\307F=\246\345 =>o\030\275\240^2=b\364K=H\0007<\231\007\177;\331\305C9H\247X\275\200\377\236\274\340e\027\275\262*J=\257\001?=Zd\234;\230\350\320<\202.\\<\304\356#\275\013\275\315\274K\305/<\023\003\360<$>\013=Or\"\275\306\335\255<\016\2146\275\345\302#=z52;\230{&\275\021b\335\2742\252E=m\031\'\275\276\265\206\274&UX\274C\361\'\275\24447= \305;\275\344\221\r=\277\250\245;P\373c;v\355S\275\322\356\272<\2058\245\273\362\336e\274\352\010\271\274\264\341\330<\364\312\n<\266\341\346\272\271\373,\275P\313\362<\265\260Q\274\3039L\275%\323~\274\277Y\365<*\375\327\274\267A\262;4&\033=\364\270-=\225;[\274k\324K=MJ\265\274\001#7\275\330\300\262\274\252\272\013=U\',\275;\253=\275\265\223\257<q\217_;\267\307N=\2269\334\274H\336\345<\340\200\300<\005\211\027\275UM\026\275\242}\375\274rB^<\004!\033=Y\260\305\273%\316!\2752\257\321<1\3051\275y\304m;z\250W\275\220I\005\275\215\313\031\275$\242\257<-(\031\274\013N\203<\364\364Z\275\325iP\275\353\367*\275\304z\021\2748\323%=\374\234\277<2\031\240<\360\337\007<S\201!<\221\224(=\254\370<\275\374\303\346\274\270|\361<V\344\250<\251\260N=O\001\036<=\003\005={e4<\203lB=\201\201C\275\340\221C=\010<\351<-\376\013=\r\225\372< p\020=\266H\313\274\206\272 =\321\274\205;0#d<NPB<\234<K=\265l\024=\233MZ=\361ic\274eD\372\274h\210\345\273\\\212\237<\336\304\316\273o\250:\273\177Y\275<\207\010\013\275!\255\332;\260\203M\275DVH9d\031\010=Q\237\327<\260\3428=\002V\033\275\235\316\025\274\034D\213\274\367_\366\274\342\346\n=,pV\275\331\n)\274\233\332Q;\037\2116=\323\020\271\274i\212\334<\362\033\033;\223\000F=!\205\234\274\2074K\275\276R\376<xIR=\323\255\020=\322,.=\177\335\272<\254\267I\273\376\2243\274\2066f\273\304\316:= \316P<\311\357W\2753r\357\274p\326\266;m\363\266\274\006\245\000<\032\306j<\327\327*=\366r\037\275\315\311\247\274\231\333\345;^ag<\320D\270<\375\344\255\274\362W\202\274\271\360/\275X\344\004=\351\314\017=\310\353\t\275_\325\316;\362\345\277\274\255\010H\275\331oS\274\234\3143=\017\335\202\274\241\264\271\27475\316\273\372\274\222<\262\364\275<\031\332\263<r\301\002=\304_\340<B\004\211<\230}\n=\333\237,<\006\215\"=\213\206\225<A\310\253\274\004B\312;\251\006X=\370\225\374;\263\2634=T\361\020=\017\365\225\274{\346,\275qs\302;\014Q\016=N\376e<#\007\035\275\313a\302<|\271R\275&\026\365;\361\331Y=\302sE\275&\206U=\231\305\030\275\01629\275\225\030@=_K\'\274\326p\026=\273\223\030\275)\010S=\020E1\275x.B\275cod\274\316{\244<\205\014\022<\237\310\307\274s\330v<\200\236:\275\355d\"\275S\246\322<1\363\025\275\337\365S=K\370\253\2740\243\365<\251q\305<<EK\274IB\370<\214&\313<\005\354\017\274\'T*\274\234\343Z=\327uL\275`Y\252<{#\240<\027\207\230\274\232!\331\274WL\234<\017\201\030=_\334\033=(\365*\274\215u%<Y\265\326\274\245\251\226<l\222\320\274K\244\344<J@\007=\005uh\273\262,\301<F\343\260<\234\354,=\325&V\275\377\307Y\273\037\3305\275\225\016>\275\004nc\273E\031\363<\3511Z=\005\363\r=b\301@\275\364\343~\271\264\020\376\274\346s-\275\375\270\";\0033\266\274\006\r\362\271wr\360<=\017G\275\220\360M=\354\022\t\275\224\010w<\212\204\357\274\000\343+=\310\246\236\273\212\r\214<\245\2173\275\004\203m<\300[\227<\356\337\017<1\373\364<\355\270\342\274y\243A<E\264Q=\3609A\275T\337\223;q\233C\275?`,=Z\276\270<\'\230m\274[Z3<% 5\275\311D\243;\267\360\020=\237\313\270\274nf\033=\254\274\256<\356\254R\275g\277+\274]\332Z=5\321\n\275\236\233\214:|<\240;\"/\371<\217\252}<g\214k\274\206\200\225\274S\232)\275\340\212\024\275t\345\010\274\021\267\304\274|\026\226\274s\227\204;\022y)\275\343\362V\275\340\005V\275S\304J=VH\217<\256\307\344<\021\023\026\275C?$=q\2165=\n\322&\274\223\337|<\027\233T=\336\014&=\203<\220\274\341\\\2009O\026\326;?\013\001\275\337\366?\275@\247\317\274Z\365\347;o\323\344;3)=\275\377}I\274\215H\323\274\226\302\377;\336\273\002\275!\034\226<\344\350E;\330\342S\275&\307H\275\247\321T=\360\247\227\274\270E\025=\250(\r=\010:;\274\327\240\360\274\347|\022\275;\275>\274<\323\035\273\246S\023\275\310\006\370\2741\327\333;\'\202#=\355+@=\200\221C\275_\203!=\2431K<l\220\372\274P\220t:\272\322\226\274\211\374\005=|\034#\274/\030\224\273\320\2704=\305\014\017\275\2064\"=\220\256\007\275D\367y<;5,={#H=7\003\346\274(\003\017=B\321\033<og\"=\277\264H\275\026\251k;B\263\311\274\245\224*=+W/=-\342B=\033\273\001=\355!P=\306U\232<\364T\000\275{\366\253;\3166\217\274\362ZO=\330W:\275Y\261\306\273\343\005W\275\306b\271<\307t\344\274ky\003\275kEU=s{\307\274\252\212\342\274\245*\024=Lw\252<\274t\001\275\211\\\035<Y\330N\274/Q\237;h\rF=\202\203.\275>S\362\2735\267*\273\341B\366\274P\326V\2756r\210<\201\376V=\r\273\204<\350-o<0i\265;\333wJ\275Z|(=\315\001\034\274F\025x8v\207\354<\222EH=\253|\277<\210\263\360\274r\377\035\275ZZ\257\273r\254\324<.o\262;\307\'\034=^\370\263\274/\204<=\213\007W=^\244>\275l\3452=\346\024\251<G\352\333\274\270_\207\274\177_4\275E\234<\275\364\315\025\275\373\207\025<\334\005\371<U\354\340\274\036\037W=V+\235<[\306,=\036\376\241<C\256>:-\213\232<%m\345<\002\253\313\274?\246\2479\366:\'<5\2178<M\351\351;\207E\313;0\357\250<\001\342\000\275v\002.<\234\233\016\275\374\376X=\317\200E\275\346\001\302<^\256;=\004\361F=\250\265\320\274\362\3216=\\\3667\275\225\321\264\274\327\2406\275i;\000\274\001B\016=\r\330\223<\035\327;=^\310\026\275\262>\321<\223\316\034\275&\341\336\274\022\367\021=\031\020\224\274\365:=\275\037\330K<\275\003\307:\261&\342<\303\251%\275`\003\003=\243\272\274<\245 ==\322\244\242;\374\235\376<C\017\006\275_I?<M\016\211<\337\201\262\273\216\355=\273\004F\240<\237?V\275\007(B<\210%G\275EK6=\345~\350\273\n;5\275\\\353\"=\034\273\024<p\0079=w5(=4\257\325\274t\327\266\273\236Q<\275\004\367,=P\310(=\021\226\210<\244*\372<\227\023\034=\325s\372<\r\2609\274\361K\307\273\227<B\275\022\014_<K\370\020\274\327J\246\274\246\246\312<*)F=\034\345\021=\222\346\t\273\236:\017\275hl\313\274\003\3142\275\245\212\366<Y_,\275|\332\370\274\304\271\013\2758\002\007=\003~\304;jFA=Y\270\020=\313\354\332<\374\217O\275p\205\232\274\303\223#=\340\020\210<a\362\264\273\230P\n=\014\301\n=\337\343\020=\370\242R\274\223z\213\274Q\212r\274\362s\320<X\231R\275\303S\230<\260\027\273<\223x<=!\021\033=\333\343\214<f\217\353<\332\302\304<1\353\020<r\220\';\210\345-<\301\325\365\274\354\235\017=_\226\273\274\206\030,\275\224\r\312<i\352\352<=*i:\277~\357<?\270\323<\376\362*<}%7=X\025\'\274:\253\014=\234\r\t=\367}\026=uEH\275\014\265(<\251\n\312<%\336\006\275\256\204<=\002\264\220\271\332K\031=\266\207\t\275\275\354h<\227T.<u\033\354\274\033\366\331\274JIL=f\311\333\274;\247f<\003\361&=^\310\006\275\261;\234\274}\273!\275\362\302-=\001\014R\275\205\272\375\274\230\225\257\274N\322\365\274t\262\000<J\311\002\275\236\023t\274\312\352d:_\\\367<\221,\324\274aTT=\3162\335\274y\2419\274\325\274-;di\025\274\350`k\274\025\201\347<\234$\036\275\352+$\275\275\267\216\274\222$\036\275\366j\032\275o\236\177\274)\272\020\274E\370\321\273\265\357y9}\274\237\274k\210;\275N\265\032=La\362\274\214\034\315\274[\031\004\275.\027?=\"\206U<]YV=\350\214O\275\351\t\321<\221\2514\275\376\243\370<1\0044\274O\214U=2Z6=5\017\031=G}\016=d\021\345;\346\002\234<\210\222.\274\246\224\207<\314\236\324\274$\356\375\274\323\362L\275<\247-<\272\307<={\302\311<\366!;<\246\352\201\274q\227\234;l\342B;|\\\021\274\025\334Q\275\306\227\276\274\346%J\275\312u\235<\210\347\254;}\0275\274E\203\022=\323e\245\274\221>$\275{\265\377\274\314\026\321\274\226\027P=;\260\210\273\023\010J\274\334\035\347\272V\201\266<\000>J=\245\347c\273\255\3737\274\3062\361\274F\340#\275\211\3378\275\026v2\274}\247\005:F\034\332\274\241\274\345\272\350\002\304<\342_\273\274\212i\346<V\231D=\350#\226<\226\314\335\274\320)\267\274\036\032:\275_\351\202<\2459<\275th\346\272\023f4\275\345\002\001<\301\002\357;\035\320\314\273\007\240\370\274\253j\014<\016B\256<\314\273A=7\2659=\353\2563=\267\252F\275\373\270\032=B\360G=\213\366\353\274\330\247N=+\232><\230n\024\275\235\3201\275h\310\'=`\304\360\274r\200(=\306\324\352<\274\240$<!\321\030<\322\356,\275_\2603\271U+9=]\204Q<\273\203!\275\013\331j<\013\2008=Q\313e<q\364&\275\030W\021\275\203\333;\273\300\025\330\274\3206\364:hP3\275\"\254\335<\213\027\277\273\027\245\335<n\"\024\275\231\007\004\275\022\250\327\274\025\254\356<[\337\027\2753\332\301\274\335\261\t\274\352\357\177\272\365\213<\275\260\225<\275J\232$=kv\240<\004\300\000=\272)O\274E\032\202\274\321a2\275?wX\272 \202\007\273\342s\217\274@\265B\275C\236J=4\036_\274\005MS\274\226\\C\275\212\351\217\274\210\006?\274+\301\024=6\263Y\2736\352*\275;\326\237\274\362\005\312<\244\275\006\274%rM=\327o7=L\265\032\272_\237\003=9*-=eH\224<\314x\257\274\022\377\353\274\363\265\340\274\237%\307<\246Z\017=\315\026\345\2746q\360<\334;N\275\021\370Y<1\210Z=\374\221\r=\333\371W\275\"\315\024=\032\377L\275;\216\330\274\350\307\212:\010\276\316\274?\016\275<\rM\376:9MY\275\217)\033=\204\005\020\274H\374\373<Qe\007=\275\315\307<\tY\002\275\030zZ\274\025O\t\275\317_\220<\033\311\304\274\265b\235;\223`:\2745\362+\275tH\367<b\360\2029\025\362\030\275s\225:\274\246\273\221\274\332JB=C\017l:\003|\206\274\226\356;\275\302\3502;\032\006\027\275\201T+\275\021\272\313\274\217\343I=a\240\304<x\255#\275\030#Q<^\0036=\260?\306<o$B=\3179O;\225X\024\274\372\333\324\274\257\334j\274\364C\217<<\210\245<\037\"\233:\346o\200\274\211g\236\274{\205\234\274\027\245\n;\274\374\256:W.\257\272\204N\035= >\236<{R\r\275\204\232,=g(\303<\004\325\032<S\177\010\275\362\314\210<?\244\323<l\261\370<\033\371\037\274Q\361\030\274\236\211\263<\032\236&=O\002<=\312\214(=\205\220<=H\202\035=\317z\035\274\211\336\022\273\342\276Y\274\361\207M=tj1\272`\'\025=s7H=Ls7=\016\354\032\275\325b\365:\277\375\2359@\007/=\365)\342<SS\302<a\345#\2756\037U=t\205L\275\026\245\3118\177(U\275P\343Z\275(^\372:@\334&\275f\2545\275\223\335\320\273N6\035\27582\335<c\177\002=\236\313\236;\003zO=\000\3120\274\263\234(=\005\244V\274 06\274\013\3411=8\024\216\274hV\230<\340j,=\366\3172=\235\247\263\274\350\025\256\274\312}\310<`\370\003=\206xM\275k\303\313\274\227\033f\274a\3666=\t\240r\273\363!C\275W\210\251\273\347\247\r=\310\345\246<\203\251%=\007V$=\335\277\233\274&\340\377\273p\005\035=Rz\004=\031.q<_\377\'=\246C\311\273\213\257:=\375\2673=\025a\r\273\300\030\256\274\317w\321:\246\251)=\016u\030\273[!\350:\224pV\274\357\360\354<\250\225\311\273\216\307\036=\004\321P=)\222\000\275\205\\\267<\373\221\034\274?\1770\274\013\317C\275f\343\223\274\373\270E\2758\272\036\275\024N\034\275\373\303\356<\365\026\000\274S\353\014\275\205dm\274\'\267\377<\255:\376<\017{*=\313+\032=l9\200<\005zS<]9&\275\366A\014\274f;\017\275x\323\003\275\224d.=\241^\303<uN\361\274\207\263\364<\355\001\2679\356*4=\340k\010\275\357\335&:\361=\325\274\333tM=\211\267\027=2\272-=\241:J=\361\236G\275\274\324\006<\363~\270\272t\355\226:A\026\224<\\MK\273\232_\337<\034k\376\274\266\230\377<V\'\001=<\343H;\030\355a:4eJ\275\325J\016\275+\331Q=m\373\000=\300\207#=\214\rN\275(\201|\273\000}-\274\337s\234<\313&\356<^x\"\2733\354Z\273\247\035\n=`\025\013\274\207\324\353\274W\032J\274\2754\'=\342\352\004\275[=j<\253\245\302<\305\351\345<\374\217==%\316\227<:.}\274}k\232\274H\006\022\274\255\204\344\274\301\265p<\302\007\002<\345\1774\275RM\337<\023F4\274\252\245\240<3`\354<\342\327A=?\034\231<\275\270R\274V\275\023=\365\023\022<\270\017\234<\361\030I=\204\340\007<os\324</\220\337\273\354\376U\275\201C/\275=xS\275\365L9\275\232\322\252<\225t\203\273\2247V=\326\277E\274j\361&\275\327\252\316\274\n\240L\275;\346A\275\236\r\033\275\220\245\257\274b\030\267\274@\312V\275\214\013\010\274\314\270\327\274\034\222O=\361>\030=\221v\302\273\376u\332\274\357\261\210\273\036\276O\275\366\353N\275\222\340W<\035\313H\274Q\0372\275\367WY\275\305\255\304\2735\330\235<\326\031R\275:\037\004<q\034Y\275\342\232Y\275\237\211=\275\351R9=TU\314\274I\3076=!\303\377\274\360\3760=\316\256<\2756|\026<*/\257<^2\332\274~w,\275\307\367#=\233\237\305<i\004)=\312\177h\273I-\261<K\022\320\2742\317\310;\351,\260<3\325\347\274M\275\246\274,\037d<\2176\361\274\000\2469=w\234\227\274\2303&=\223\271J<\225K\016\275\n\t\361<\332\263\232<.\333\315:\244\"\360\273\356\3063<\336d\371<\362\032Q\273\316\230\212\274\305\342\372\273\274x\025\275W\rB=\326\332\036\275\232\204\025<\004{M\275]\207\'<\255l\261<\372\211\"\275\316\260?\273\n6\023=\023\344\275\274\256\215\017\2751\213{\274\357RZ<6]\221\273\231\276u\274u\002\014\275\326\370\302\274x\227\003=\224\340S\275N0\346\274\371\016\033=\214\2474<l\337\230<\216:.=\262\232N\273\323e$\275\206.K\275\220\234B<\204K\036\275=\336\350<\357\036e\272\332\364/\275t\250\'=\010>\305\273\300\304\246\274\310\022\035=\215\346\022\275\256K\324;\252;\026;u?\021\275o\026@<h:\203<\376\277\"<\251\217\353\273h\237\310;\251\305\310<p2\025==o\037\275\201\3048\275\276\023\005\275\325\3364=\217\331$<\002c\314\274\250\222N\275\322\305F\275\271PQ=\300?\221\274\335?\340\274\311N\207\273\315\247\235\274\026\315!=\362\367\\\274\214\262\"\275\013H\225:\222\263E<\306\255\253\274G8X\274\221\312\365\273\002\007\221<\370\267\340\272\223Q\001\275D\370\374<\222fX=C@\265<\234NW=a\013u<pO8\275}\273\347<\375TC\275>\002G\275\276,?<\355\315\304<\001\026\003\274\217\'\257\274\206\013\201\273V1\202;\350\221\'\275\276)/=\003\017\005\275\234\247\220<\033NM=\\Ec\274\242\023\"\275A\231\024=\207\325\323:\013\303Y<\020\331!\275sM\240\274\332\355:=\222\266\037=\302\272\246<\224\356@=\356\n\345<g]%=\026\267\213<)\0224\275\274\016\014=|\322O\275=\242%<\361\305z<=.!=\346\336\007=\2756\337\274iTp\273\221T\357<v\205\300<\213P\333<#\205\000\275l\257\026=\306\nX=\010\3449=\340\3121<\033x\240;\206\207\322<`+\031\275?\2670\275\030ZP=\374\201\210<\030\2137\275\364\226\267\273..\026=w>\244\274\357\370V\275S\341\201<\301$<\275\377\303U\275\271A4\273\331\256\237<\245\231\017=_\365\233<\003\224\275<n\310\035\2752j\374<V\240(=cs\003<\322\305\374<\210\233 \275\362F\307<\245\324\355\274\337\360\024;  K=\232)\243\274\021\2211=dl\225\274\027\004:\274\210\357\025=\222\2022\274\306|\372\273z\3519=cC\030=\261I\326<\212e!\274BB\325\274\323\326W\274\007\262\356\274\234\236\273<\2215\203\274\325\246k\274\021}B;s\367J<\377k\245<\264v\263<\235!8=\024%\311\274H\273\003=\213\344\037\275\271\203\242\274:\230\376\274\235\216\005<\221<\270\273\330tP=Lw\306<\035\241\'=\237\375\033\274av\033\274\277\311\365\274>\023\033\275b\300\213;\257\257\r\272\334\035\256\274b\031\352<\021.\014=\\\376\000=\373\272\202\274\343\271\312\273\2110\263\274\"L\264<\271\342\205<\222\353G<O\211\262\273\224\252_\273\370\001\357<\202\206\365\274t\262\007=D\245\016=\330\243\261\274\250\217R\275\000\374t\274\215LQ\275Ap\307\274\217\1777=\361`\014\275\311TT=\010\231\242;\357](<\027\370I<.\301\355;\t\221@=\207\355$\274\376\\S\275G\223\313<\236\332\204;\220\030P=;\200\370\274)`(\275\007\007\252\274\325K\232<\365\272+\274\257tF=\026\221W=p\320\177<\3659;=\001\210{<\304\354,\275\301cV\275\225\322\016<F\'\223;\036@\247\273\256\344)\275\315\002X:\336\362\001\275\221\346\267<\343\0137<\3623\010<\'\353\312\274\014u*\275T\340\005<u#7\275\215\010\212<\234\007\"=Ft\304\272eGG=&\204#<=\216\017\275~n\320<\017\307P\272\311-\'\275\205\322;\275\357\016I\275&M\254\274\211nM\274\275]\357<v_\002=\302\251\005\2732\370\026\275:\030\221<\331cR=\212\201\251\274\025\322`<\252u\005\274/\350\001\272\223~1\275\233i\276:\376\355@\275\206\223T\275@\233\022\275\001\267>=\346\312\240<6\254\213\273W\312\372\273\303I@=\022\'G\275\327\035\267<\333#\227<Rvh;j\034\034\274.\0246\274\310\360\362<\345\"\312\274\350\276C=Z\224\332\274`\371\020=\305\276Y\2752\314)=\333E\260<\n\367\030=K+\254<\256ZP=C*V\275?E\336\274\277<6\275\226\211\332<4\341\t=\315\313\313<7S\002<\200\007!\275Q\337X<\220d\005<\\=Q=\265\321\t\275-\245R<\214@\031=\000;\276<\002\to\274\331\207\366<e\253?<\032\345C=\023\222\025\274\201>\036=\014\351\311\274\342\302_<\252\247\006\275M\377\317<3\345A=\020\2409=\326\332e<\251b)\275\027\321\237<\267=O\275\346\2416\274\271\025\033\274\0378\346\274<\273K\273\253T2\274~\252\021\274Cn3\275\033\360\233<3\000\270\273\356G\302<\367}\000\275\225\034\033=\332\023\031\275\271\331\265\272\037y\267<\035\322>\275\366FJ<\245#\355<\032X\000\275\330\274!\275\372]\374:\202\277(\275\235\227\023\273_\214\207<\r\203;=\236\231\357\274\037\200K<\363\242\006\275-\231>\274\376\230\255<\004`\260;yK\306\274C^\335\272\314\357\245<\003\367G=\220X\367\273Tb\325<i\242\"=OQ\201;\267l\202\273k\032\n=\330\036\033=?\266\260\274\301!-=\367l;=\032%\033\275\030v\266\274\007\027\022\273\267\'\017\274\367\347\003=\306\255\314\274dT\245\274\'\240k;7\276>\275%\"\300<\235\2423\273\262\322R=\225O\032=*`\275\274ZV\252<\262`J\275\270\315?\274\367\375\027=\033\337\340\273J=E\275\262f5\273u\006\014\275\247>\326\274^\022-<\244\001#\275\352\255\337<E3\036\2733|\361;\272.\031\275\272h\r\275\300C.\275\342\202\376<\352\272=\275$\262S\275\323\320\002<:\255=\275\310g\021\2732z\005\273\002\026f:F{\274\274\033\366-:\330[\257\273\200\'0=\245{6=\311\033\335\274\nnI\275\221\253V\275\"\254s9\245\256\213\273\256J\352:w\274+\275\342&)\275*\201<=\374\306X=\374\3756\275\277\357\357<w\237T=\343\227\352<U\260K=\361VS<m\204\000\275=BU\275\327\340\334;u\215\030\275\321\202Z\275o\347\277;\241@\314<c\270t\274\036!\035\275\223\230\254\274\017I\360<\004\014\325;\026\352B=n\377\252<PKQ;\257\243/=\014\226\034=\352\251Y<\021\322A\274G?+=\211\335\313\274\307\217W=\202\275\217;\264\257\267<]\002\254;\007u\206\274K\220O;v\241\225\274\353\027\017\275[\017\303<2f!=\247\313\177:XR\020\273\270v\210\274\037\325\r=|y\227<2\211\035<HZ\205<\335d\366\274f\251\213\274.\346\351<\212\243\274<\205K\371\273\365\214m\274\330\222\352<0\3322\274\234\343F<\302\3229=Y;O\273\211\010\036=X\226X\2747\014\340<*\307Q=\000\302\374\274\371\237\230<e\262\317<8\000\340;\361>\024=Wo\033=*\322\305<\210M\261<9\357(<(z\302;f\323#=nq\316\274\202\035\226<\304^H=\273\332V<\376\277\375\273\\\346\"<\315\027\025\274~\006n\274f\263\363<\331\341(\275\316\034\374\274X\245\222\2734\177\032\274\354\337\030=bQ]<P\232\377<\217v\332\273AoC\275\240\343\010\274\260\365\340<z\244;\275\206\022\275\273\255\274\356\274\265\210\t=\346\254v<\"\030\303\274C\370V\275\340\3445\274\010Gw;\033\270Q\275 \367\343\274\367\262\303\274\235\267\327<\306\314B=\234\317:\274O\324\014\275\032\256\342\274\230\327*=;\351!<{}\014\272\332w\311\274\022\232\356\274\t\0374=A\232@\275\024\0320\275\033\377\325\274\370\207\005\275\376{H\274\361\032\035=\235\301\376;.\364\251\274m>A;\346W =\022\374\333<\205\236\276<\245\t\244<\303\253\027\275\020\263\316\274h\376\314;\241\203\210\272~\214\275\274[\224t<<\026\036=\317\217\034=\316u\341<\235\3454<\273\237X=\016zG=2\256\025<\304\003\022=\225\264s<\233T/=\215\270?\275.i\341<\017\nt\274])<\275\010\217\377;\362\271O=\222c3\275\t[H=\245\216L=\"\272Q\273?\220E=L,\235;s|0\275\321\202\256\274^e\035\275>L\372\274k[\014=\034\361-<F-\016\2751F\271<\266\2413=L\243\023\272\266\2775\275\265\376$\274\025\354\010\275\313\224P\275\230\036\331\272\013p\263\274\274\222\307<\014\345\243:+\002\231\274\351\276\270\274\336\205Z=\360\362\327<\232\207!=\205\332#\274xf\027\275\"\017\312<\204\310D\275\223NB\275\345\\\023<\265z\200\274wpF;\273\326\305\274\027\274$\272H\211\"=\007?\345<CJ\310\274\371\023/=\260\t?=\343\215\356;\367\315\310;<+\247;\363\250\r\274\217\315\206<\362u\321\273\031\203\017<\005\275\225;\377\254\211;\235\356\251<\226\200\001=\370\267.<\240:\344<\320\327q\274\252\240U\275\241\035\353\274\310&\330\274\002\321z<#Y\037\275\010\324&\275Y\322)\275\322\240\213<\246\321.\275\363\234\357<d\310\023=:\215\024\275q8\256\2746\353f\274\251C\003\273\002,3\275\305\331\234\274\317y9\274e\330\000<\2640\335\273\010f\274\271k F\275\332\231\372;\273H\003<\201\275\312<X\265\212\274?\230\362\274\245\033P=V54\275\232\353\335\272\324\3306\2757>\340<\234`\330\274\354\312\234\274G`n\274\006\321 =\260lf;\340:\213;*5\371<6F\361\274\224\257\215\274Z\246\367<s\013H\274Z\304\220\274\231\214\245:\257\305\026\275\254O\362\274\247i\256\274\257\340\036=f\333n\274:\237(=\211\3160=\306G\270;\373\275\200<\360\">=\"\262\022\274\034\272Q=\334@\004=\024\373\021\275\303\216\026<:\230V=\352\260\350\274lB\r\275M\241\004;y]\360;\221\251\220<`8\266\274\nk\205<_]\302\274\320c\';\"|\303\274u=\017\275w\"S=b!\'=\377\223\253<#\277A=\252\371\261\273LB\275\274[Lx\274\256\316\006\275\303\220\344<\323\026?<\330\256t\274\305\347\317;WJ\266\274%\2673=\334X\256<0?\373<\203\014%\275\353>T=\303*\033=w\321\032\273y\"\342\274\211\333:\275\331u\220\273NEA;/`\371<\364\225N\275,\200\255\274J\315\315\273\035uG={\304T\274\037\007$;\373\321\257\274\'F\251\274@\030\224<\375~\251<\204\237+=\250@\010=i\214\022\275\"\363\354\274Z#%=\366\014B=\262\235\235\274\020\343\312\274(\373\023<\036w==\000p:<\2113\3309\345\250\001=\241%\224\274\276 \356\272\321\310\007\275H\346\372\274\365\325\"=3\317Z=\2468\031=d\010;=9^I=On\334\273\036\360O\275`7\374<\377\233_\274e\217\177\274\250\202&\274\217\273\233;vo\257<\310\016\333\274\020\347\207<\342PK\275\206\336\354\274\240\025\005=I\225G=\3773\000\275a\307 \275\263\331\325\274\035ZZ\275Ia+\275r\201H\274\216]\237\273\246\353*\275\326\343\360\274N$\343:\220\374\021=\010\246\370<:e\024\275\375L(=NEf\274t\303\267\274H\004\026\275\361\274M\273\n\317$=P}8=\224\223\372\2748p\200\274\270\223\004\275\032-/=\342\240U<\032\002\271\274=\032$<\373x\037\275\376_\036=\027\'\351<\235\377<\275m1\237<\222\203\r\275yA\356\2742\321>;n<\004=\211\177Y=\366\272\277\274/\216\303;\310k\036=N\233\331\273\225~\365\274\251\211\305;\237^K=r\020\231<:\nA<n\370\373\274\001\370\204;\017s\313\274\322p-=\237\305\201;\363-\255<\373\014\005=\326]\004=\3746\031=\211J*=\324\274N=m5\261<\260\272\253<\253\3570=\210S\301\274\034{\203<\230\\7\275\204S\334\271\210`\366<\007\312@=\231\201#<;kS=\352|\266\271f\375\241<)3\002\275\352pW=,k:\275\033\2025\273\321\004\001=\336\254_\274\232\260X\275\033=\024=j9\230\272\'+,\273\207P\226\274\365^\312\274\nH\"\273CZ\007=\275(\231<\2462V=<g\235\274\030\020~\274j\265,\275\031\216\036=G\016\343\274\027\326\315;a\007\020=\251\001+\274p\202\356<\000*\267\274C\017\224<c\346\361<}\314\013<\357u\221<4\364\r=\326\245\014=\021\271q\272\007[l\274\r\034w<zn)\275\253\253\272\273e\037*\275\2570@\274\263\206\000=S\241\273<_\025!\275;\010\343:\234\324\301:\2507\326\273x9V\275Y\254(=\316+\006=\236\262Q=o3N\275\254Y\313<\245PJ\273d\242\255\274\016\3307\274)c\235\274\003\311\276\274\311N\246< A\250\273\370\226V\275\243\t\227\274\215NE<6\252\036\274lX7=XM0\275\272\" =\265OK=\022\202\006;\262\231)\275\245\273\261<\272\270\305\274A\267\000\275L\016\266\274\225\235\244<\2418R=UsF=\202\306;=\301\362\375<\2348\002\274\374\226 \275\355S\037\275\206\274#8>=/=\024\346L\275p\335\247\273\026\265(\275b.\r\275G\235\226\274\265\017\205<j\306U=:\264C=\235\331\365\274Q66=\035N\037;\326\211>=\007\230\010\275\265<\226\274\327b\322\274\247\214<\273,\3472\275r&W=\264dO\275_\226i9\223\302\222<\\\333\020;^\205\331<=\274\341\274\324\0200=\022\034\222\273z\023\032<\200\n\t=\025l\214<\216[\016<\370A\271<\330\251V=\\\016C\275\313\006\275;5h\316\274\315\330)=+r\276\274\216\302\247<;\374\223<\224\004r;\366>M\274\3745\037\275cO\242\273\037\240\034=cH\340<#v\364<\260\201.<\356\223@=\360\333Y\275\213\364I=\033\036\017\274\275\213\211<\231L=\273O\271\027\275\270\264\000\274\236\240<=\032\354Y=\013\344\034\2739\251\021<\343x\010\275\267\3616\274W\211\005=\305\300>\275j\014\026\275\230t\222\273\320\204\367;\244XG=\207\223\013\275\321=+<!\335\251<\266\366K=\312\214\265;\230\2505\275\315uI\2752\352\032<RGD\275\003\373\230<\177\"\207\274\323\272D=\213\342\245\274\n\'\020=\232\235\356<\014pM\275\317\271\235<\355\231\373\274\025\333\244\274\305\177\003\275yf\321\274S\261\013=\177%\321;E\343(=\346\323\344\271\324\225)\275\035m\325;^/?=\002\320N\275\255\031\301<t\t\253\274\002\235\247<|\025\270;\\*\024\274\033d\341<IY\247\273\273i\261\274\266z\334\274\271\370\211\274\"\341:;\311|\017=F =\275\275|\231\274\304 H;\375Q\246\274\"\256\367<A\t\261<\n\033\306\273t\262X\275\002\023\244\274\021\322!\275n\316\267<X\3474\271K\364\211\274\207m\302\274`l\356<g\322\255\274\177Q3;\376-J\275\004\025R<\037\3446=d\003\017=:\025\037\274\210l\014=\014s\313<,\r\306\273\335\320y;\032\352\271<\332\217\032\275\022\022\005=}1\034\275\277;\214\273\222\365\036=\024\374\207<\017\346\230\274\377\330P=\244\360\177;\374&\025\274`\334\376<\207\223\031\275@\217j\274$\356Y=V\316L=k5\236\274\320e==\037d\323<\371\'\210<\234Y9<|[\323<:\231\320<\301\263T\275Qx2\273mj\254<\327\022o\274\262\234\222\274Qh5=\340\330;\275\266\024D\275p)\370\273\226=\304\274y\312\300<\3107\340<Z\216\010\275\300\0276\275IaS<\277\361\257<\304j\357\274$\")=f\210\035\274)G,\275\001!\323\274\'\033\'\274DVp<\230K\266:,h\325;\261\230\034=g\236\332\274\027\262\"=\032\325\250\274G\310>\273\376V\310<`j:=\351\271s;\235\n\300\273iTu\274i\\\376;\005&2\275\326\314U=\212\336V=\351\240\322;\245\332E\275@\027\026=!\266\264\273\031/W\274\223g\\;\235k\304;+\250\211<Q\333X\275\307#\272\274\202\254\327<\nA\312\273\347\034\023=_\371\237\272\343\2572\275sg\220\274B\201\326<\211\276\212\273Y\234\210;\241\324|:\303o\266\274\327[\r=\344\352\244<\021}7\275M/\365\274\300=\201<,KU<\345L\322\274.\376\n\275\013\371Y=l\016f\274y\2130\275 \"\237<B\2539\274\003\211J<j_W=\272\346[<\334\2248\275~\317\002=\201\016I=:\n\376\274\005\332\320<L\373B=\206\330\341:\035nB\273\310[+\275\230\326\032=\215\251\001=)\345\n\274w\210V=\277\037\204<\033bD\275\241l\001=\271\322\336<2\352<\275c\331K\274M<W\275\222y\233<\204&\266<\354\3701=Ia\025\275\323\037\230\274D\255\277\274\375(\276\274\270\223\337\274\277\\\016\275\233\246$\275\375I\310\274hn:={\'I\275\233O$=`{\322\274\201\351\372\274\320\370j<J\3562=\014\246\316\274\350w\025\274 \027\334;7\'\201\274\226\236\207\274\034TR<\325\303\322\274\026:\017\275\335\356\336\272J\351.\275\216\000\251;\346J(=I\216\005\275\262\312\377\273\375\031\250;s\263\243;:=\025\275\370\252\227\274\336\016\021\275\365\001*=2L\351<\225\216\t=\022m\006\275\177\2037\275\364s\017\274\216\273\251<\304FO<!\217\033=%\364T\274\311A\030=R;#\275\216\n\025=\014\266)\275\344\233\345<.\016\260<\372\237\021=\374\301\215<s\251/=\362\2478=\030\177\205\274\206~*<\314v\271\274\232\301:=\331\340\230<J\320W\275\033\336\017=J\016\222:\034\232&=\300W/<\215O`\274y\330\227:\350\344G<jo\247<\nZ\033\275\370\021\027=h\001\232<i\351\016=X\020`<\324\220\024=\270\300\217\274\327a,\275P\010\342\274Fs.\273\260.{\273L\001(\275+\352\026\275\242\032\241\274\225\017\305\273z\022\247\274\324\276\342\274\345\204\251\2744\001.=0\024k\272\n\037\002\275\231)(=\345\211\003=B\361\332;\205\311\334\274YKC;&\224\027\275\2112e\273\333\r><j\210\376<\347\236\350<\253\010\300\274\331\223\342\274\350\361(\274\271\322|\274\253\"\031\275\343\255k\274C\031\253\270\212oD<\265\333\217<\306gF\275P\310%=((u\274\347\250,=\357\345\271\274\362\335\201<\034\300\002=\376i\026=c\275=\274\025\321S\273}o\321:\246Y\351<\305r<=\263\352\003=X\3404=1_\322\274\330R\371\274\261\n\375<l\016\337<\267N9\275\231\322\201<j)K\273\177,\213\274\017\346K=c\336\347<e\227k;\213\3640<\304Y\262<\250`I\275{\311\230\274\034Q\201<\010:#<W\006\374<\032+P<\321;F\275p\317\351<\365Z\007=\323\235W\275:\276\233\274\212\210\033=\177(\272\273\225\311,=\372:Z\275S\3507\2740\362\021=\344\r\331\274\317oQ\275\n/.=\361\304)=g\345$\274\034\001\361<\365\022\305;6\014\031\275\355a\271:\2239\346:\272\307c\274\'YE\275FF%\275z#\353\273\274_\305</\205\266<\354\003 \275\371\213\324:#\234\265<\210\352C\274\255\203\277<\265D\304;o\316\n\274<\3652\275:\333\255<\225FQ<\3653\247\272\036yD\275\033\336M<#j]\274EIE=\265\316\252\274\3009G\275\2712\265:\201\346=<G\244\205\274pm<\275\212\365\330;R&\270<{\233\340\274X\220\025=\314\013\014=Fk\206\274N-X=\266\037\025=\201\200>=f\037\r<\312#3=\203\032\027=\205\r\315\273\365\221\352\274\r\003\257\2742\001\262\274f\275\252<\270\300\025=\032:Y=J\347\276<A\375\237\274O\251M\275\305`\212\274tI\006\275\330\\T\275\225V(=f\271\020\275\0029\212\2742\254Z<\014\377\301<\257\371\022=\232\004\005=S\035\306<-\307\203\274\234\332\004\275k\277R\275\373\266\002\275\354p@\275\024\002\377<\374R\035\275\207;\036\273E\352\236;\200\007,=_\214\217;^_@=\336G.\275\3018\320\274\321\024\000\274^i\344<\357\313\002={\312\023\275\343\256\360<\366?)=S\225\263\274>\300\344<_\3759=\266@\375<\022\226\037\274\215\315\376\273^\006\027\275\3236\005\274\375\031\205\273\241,\246\274\276\027\241:;G\022\275\222\326\030\275\324?3\275\310\347G\274\335\275K\275\242\333\360\274q!\"\275\000\250C\273_V\343\274\307\342\354;$\340\r\275X\033\331\273\335\377\022\275C\212H\273\210}\007=\360\002<;\336x\032\275\216\345\013=\333X\337\274\257\340:\275\022\206\030\275\273\263\337\274\325\332\005\273\321\253*=\367\0362\275@\0104=\353z8\274\242%\237<\207\206\230<\026\267\n=\337\366;=\353\347A\275c\245\216\272\221Q.=@\344\210:\32680\275\205\030\354:(\211@=\247\215\200<\241+\241\273\337\353D==\366\004;n\2619\275\357\307\233\274D+\351\274\367\n\352\274\216-\250\274_\013\272\274w22<\337\376[\274\'\275\014=\335\244O\275\207\216\225<\t\244\002=\000\337\333<\271R = \001P\275\344\n\036=i\266\245\273\324\252<=\006\315\344<U\306\237<a\304\334<I\351\371\274\206\346\336\274\234\371\361\274\202\202\215<\214\0161;DS\016\274\002<==T,\254\274\3673\260\271\327\317\265<\374\335\323\274\322\364\014=[\351W=\311\367\336;\274\\\264\274\t\327\333\274\233\216K\275E\370\037\274\"~\332<px]\274\\\322\307<sT\305\274\010\3250;\375\357\007=H\020\237<\367\200\240<g\304@\275\357/V=\247\377E=\313\246T=Ogi;,\025/\274\0317\t=cJ\025\275\343Ek;\032-\266\274/\034\t=\2714I\273\306\265A\274\365W\"\275T\374.\274#5\020\274B(-\275\330\330\226; \227\217;\230\302I\275\235$j\274\321\212\021<B\235\375\274\254\3349=\345\316\312\274@`x;!P\352\274^)\366<\036\005\010=\327\307&=\357\202\363\274}\255\357<J\247\034=\022\361\342<S3\022<\334\234B\275\324oz<\235\226\016;\265\351\006<1\373\210\274\"a\363\274\372\227:\275\2252\007\274\212\032v\274\033w\005\275\217\276\343<\013\005\345<e\023Z=\317K?\274\03451=\327\324\237<Y\006\266\273I+\026=\252d\321;[\n\333:\242\244\216<\2533!=mj\013\275\370\326\356<T\357\322\274\302\007u\273\254(H\275E\371\272\273\376\350\203\274\344\204\245<,\037\353\274\374\001G\2753\361I=fx\314<R\223L=\230`A\275\200\311\276<\n\200\036=\276|\032=q\020\320\274\3403i\274\273B<=\261%\201\274\337\007\347<]\243\376\274\362\341\013\275\354\333\373:\021\005/<9\222I=W\356/;\032*\016\275U\tG\275\316\346J=?T\t=\321\036\034=$\306\006<\004<\016\275\366\006\006\273QB\313\274yZ\310<\261?\"\275\375\253(\275\313h\360;\315?H\2757\257\360;\343\240\022=a\322==|K\n==\036\350\273.\267\216<\342~\023\274\201\224\237;j\316\202\274\357aW\275\211\260\361<\347\314\273;\007\204@=\213_\275<l\306\241<\233\201\261\2749\035<=\252)\341<\345M8\275Wi\000\275M\004\032\275dL\027=\264\030+\27568\344<f\341\354\274T\2716\273$A\004;\251\026\004\275\302\210\253<\013\253\256\274\270y\227<\2455\005=~-&\275M\323,\275x\265\332\274\203IJ<\275\237\372<0\010U\275\205S4=xV\014\275cC+\275G\344H\275J\261<\275B\213\334<\021p<=\202\306M=\265\272\370\273\242\010E\275\202\271\271<u3\246<s\357>\275\364\357\013\272\213C\312<\360YA\275\013\220\365;|\2160:\252\350\013=\310\276\334\274\375\366\255\273_N\003\274]\023S==\322\022\275\217+\352<\023]\366<\024\371\212\274\367\304\356\273\205\266H\275O\361\020\275\350k\221\274[D;\275\023Y\332\273\347h\r=k\330*\275\263\036\006\275\201\305T\275\373\226\331<U!\323\273x\013\315\274t\253\354\274f~G=%\326\017\275\277\3451\274MS\264;\320y\216;\302\000\032<\033@b<\310\0071=\247\205\233<wr7\275\0131\006<\016\341\367<\371\360=\274+ZU\275*\032\211;e\3409=#\225*\274|=H\275\256\223X\274\322\320\n\275\231)a<\346R\022=\266\326\334\273\231\270\223<w$\364\274!\t\322\274\347\033e\273\275\215O\2737\267\364<\364\225|<\242\321I<\366}_<\001\305,<\263\000\023\275N\023\303<J\2059=\363\274x<&\336\003=\022._\274\200\261J\275\334\033\020\274\330l\366<50b\273a\342e\274\345o\366\274t+\264<UCH=\374\360\222;\206\230\353;[\0020\275\301H<\274\024\321\003\275\332\370\270\272f%\006\273e\221?\275\220V\233<)\335\250<\030B\r=%>\201\274\341\230\022\274\355[]< \375\033=B4\204<\376NE\274\374\204|\274S,\244<\030u9=f\357@\275\356\250\253<\350\315\347<:[\303;\000\021P\273-\225\022<I\025#=\013\032~<E\013\270\274!\212\003\275\217C?=\234a+\275z\023\036\275\377\r\036=!.A=\024\271\345<\037\274\266\273[J\037\275\267\010F\275\360\324X\275\225\267\265\272vp\335<(\274\352\274&D\'\272\243\347\'=\351B\271<2\201\013=\013\353\r=\301\247\357;S\256%\275fNA=\361\000/\275\342\326\037\275\263\236\027<\221:P=\272\201\366\2718S\324\274~a\n<m\207\273\274Tl\260\274\201\332x\274k\023J\274\371\262=\275B\253\027\272\232\323\343\274*eH\275\363\200\322\274\272{p\274\207\372H\275Ar\347\274?&W=\351\021O\275\024\031\212\274\275\224\221\2737\243\035\275\337\014\213<\201\367+=\235O;\275\222D\346<\02757=_\273z<{0\275\274\322\201\003=Yg\010=$\376\007\275\342\214\217;\261S\265<\350A2\275j\037&<s\275\020\274=(0\275\301\033\324\274\201;g8\t\237/\274R\261\010\275\324vJ=\037\002\261\274y%\343<\226\303C=\037\2105=\206e\033\275M\035R\275^\005\360\274R\355^<\312\027\333<nIO=\370\312\306;\'H\237\274\204X\350<\255\034!\275\250\233_<\234\267\020\275\207)7=\340(\205<g\217\311<\317\271\352<.%%\274\0202\002\275\304\321\213\272.\362=\275\335\201 =\271,i\273\336\245%\274\253\264\336;\343\205I=\007\273\376:\266\036\372\274\346\201\034=k\276\310<k\341P=\333N\007=\234@\363\273J\2378=\275\370\212\274}\021\222<\005\017S\275\363\213\365:9\327`<bb$\275;\377A=\361\014S\275\372\364\"=\372\177C\275\314_F=\212\t\254<C\234?=\332\201-<kr\013<\331\336\023=\351!\274\274\215y\343;jP\304\274\311\376\355\273\302\243\233;Ih\\;CT\236\274\010\236\010\275\321\345==\275\210\225<\274V\013\275\037\317\001<f\370\000\275h\260\341<s\307\361\274\234\262\222\273*_\345;\001\343U<:B\017\274\351\n\\<\320-N\275\036\262\345\274`\355Q\274\367\224\021=\365\323\353\273X\253\365<e\227\303<yD?<\346\276F=\2521\201<*\300+\2753\332\000\275Wb\251\273\316F\033=\"\020g\274\2256\265\273\002\203\177\274WT\021\274`\006\365<\252t\r\273P\006S=\206\240#\275f\245-=Z\2744\275l\273\006\275#(\346\274\330\337\032\274\210\0040=\2540\335\274\230\024\035=B\324/\275\370\n\251<\n\235><%YW=\332\312\250;\025\235h7\321\240\233\274\235\236:\275E\265C\275\372y\254;\313\263?=m\372&\275\006Q\027\275\341^B=\351\345%\274\211y\314\274Nk)=\232S\021<\335p1\275s\2120\274F>\300\274\231\3574\275\362 -\275~\247E=c\r/<\344\236\020=\013`e\274)\376\353\274\237\236L=\030b;=u<\352<\003\307\245:\277eM=g\214\010\275\346JP\275D\276\355<\327\367\260\274K\010\006:\371\371\r:3\036\030=\331y\210;\370\361!==Z3\275\337@\301\274\271\250\377<\210h\027=J\347\006\275\313S\013;\263)*=\324\024\300\274\2465L=\367\343\205;\022\273\232<\352e\204\274\237\206$\275$\246\266\274D@\303\274\317Y\334<j\245\336\274\022\211\260<\350\205\273<\003\371\326;ds\004\275\234\217(=\202\007T\275M\214A\275\325\002;=\357\016R\273\037\201\005\275\277F\233;\237\030\002=\360O\014={\371F=\357h\001=\002\343M\274\177M?=\342\232\344\274\037T\237<\027\003\277<\351<K\275\265I\243\274?g\007\274\312\344B=yY\303<\322\003\374\274\255\027\016=w4\350<\347\234\225\274\2462\267<\366-?<\"yG\275\237\221\212:C\334\003\275\230\2309=(f\'\275\'\000\004\2741I\037=W`\365</\354\025=\374\243\026=;F\316;\320\353\305<h43\275\263\330a\271\300\215<;\260\357\317<\373\005\'=\377\370\"=F\034Q\275\257\211\013\2754\232!=\010\031\005=9\230$=\177\340\241\274\250a\023=m\363\363<JHh\273\"/5=Q\362\230<\234\312\350:dn&\273k\001\235\274~\210\201\273\"*\252;\325*\255<\200\253a<\265nM\275\013\362\257\274\251\223\202<\361k\264\274\037l\336<>xE\272wT:\275\334?\002\275\251\220\021;~ga<\002p\'=\3711\217\274\237\221H\275\312\020\340\273\244\373S\275\n\345\"\275\000\375>=\376i\022\274\242\001\377<\311\312\204\274(K\023<\334\345\335\274i\376\375;\004\010B\275\233\260F\275c9\002\275\330\375\323;\342P\304<\221\267R\275\353\\\223\274&\245\316\274^\030M\275\t\204\360\274\237\302\356<\026\317\365\273\372\033\017\275T\\\014=\233\367b\274\214=\017=@\005\301\274\264\266\022<\306\375V\275#Y\323\274\031\236\037<\247\356>\274\351v\333<\005\341\301:2\3318=\246;*=w\3755=K\317O\275\373\366=\275\354\010\276\274{\257~<\270\347\347<\215\357\232\274\031\032*\275\356x%=\323\250\020=\006Z\023\275\226\311\300\274u\372\007\275\265[_\274\215\3738\275`\345\307\273\000\330\362\273`f\017\275\177\335\"=\234\366Z\275\262n\277;R{*:\344YY=9o\366\273J\264\270<\373\253V=\336\210Z=\002\3254=4{5=\233\367\260<s\345\307;\363\345M=\002\231\023=\031F\005\274\304\222\007=jC\277\272R\206\275\272\213NR=\365\334K\275K\200\200\274\321\000\340\274&\226\372<\311\317\227\274@\265\230\274\213\2460\275\311Em\271\326\000\205\274b\201\375\273\2259:\274\331\254\024\274\347\310\277;\003\031\261<\270\204\036=\344}R=Mb\245<\204\027i<\037]\247<+\250.=\336-2=)W6\275\205\350\316<El\332<|\211\243\273\275\275G\275\344)N=LE.;\302d\331\273l\204,\275NpZ=\331/\332\273\243\366(\275\017\210\000=\210N\037\275\376\260\'=U\355\007<\313\022\252<\216\261\274<\331\2067\275C\005\220<\332A\000=\026.2\274\220xI\275\351]C<\342\234\022=Sl\017\275c@I=\242\261\350<\000L\2279\237\2627=\210\260O\275u\300\022=+\316\207\274C\326\260;V\300C=\303\302\033\275\030^\016\273b\327O\275WW\034=4|\210\274\2743\034\275(r\320\274O&\256\2748/;=g\340\224\274\026\236s\274\223\253\275<\324+\323<\366\242\023\275\376\313s\274\347\313\215<}\247Z<\363\214\034=$C\033=\rN\365<\215\327F\274\322\315%\275\306\032\265<\221\'&=\212W~\274\0255\221\274\207n\341;@\252R\275\343c\030=\360r\024=K\245)=l\004\304<dp=\275z>\002=\330A\262<}?B=\231\300\253<\223\246!\275\260i\005\275Q\307\004\275J\211\324\274@\374\306;\223\311\n<H\026j\274y\370X=\037J\273\274@\324\270<\036\347\320\274\210\216\'=\316\316a<\002\205\023=_=\272\273\'\337D<\340n\001\275\200>\263<\303\034,\275\206\327Q\273g\223\211\274\r\240\261<\'\337\024=\345L\211\274\trv<\244tV=\361\0232\275\264\356\014=\304N==\322\301\006=VT6=\033\311\017<\322N\262\274\0023~<\007\026\253<\265R\246<\212F\257<\037\300\250\272\334P$\275\360\321+\275\244\203\315<g\353C;\266\335\177<^\2043=\301\2718\275\261\355Z=\364iF=o\241H\273\344*A=\233\221A\274\373P\211\274^\222\262\274\231\311\240\271i\203\373<\233\265?\273\351:\203\274NX\327\273\232\n*<\002\300\"<\276\244\366\274\240\007\"= \322!\274SM\336<\266\313\343\273~\246q<\312FR<\241\371\360\272\212R\005<\356\321I=\315\300Y\275\002\201Q\275\201\3530=\303\3432\275\2156\270<\250\330\270\274\311\002\202<\243\023.\275\233\363:=z`\013\272O\263#\275\356\3016;?A\215<O\3564\275\361s\326\2749\372P\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
          dim {
            size: 4
          }
        }
        tensor_content: "S\3619=\301\006\026\275%\345 =\263Y6\275\356\014\001<\000>\277\274\347\276\325\274~r\340; \270\365\274\275W\202<\325\024`<T\'\034\274$\361*\274\243\325\256\273\250Z\351\274/Y \275%V-\275\376\200=\273\261T)\275\335\243\273\274\365N\024={\017\243\274$\3039\275\251J\354<\231C\324\274\323~>=\351\023\007=!k\220\274\375\323r\272\235*\363\274X\251\346\273zE}<\000}J=\330C\324\273\027\215\325\273\337\366u<\271%5=\247\251\304;\271\272x;\252\014\307\273\222>\036\275\314\352>=f\301q<\'OE=\0302\244\273PTB\274\366\202I<\374\301\226<\214\027\347<$S\246\274V\221\264\274\310a\003\275\032\314\274\274\376\372\256<\256s9=ym\213\2749\270\257<DDv<\325nH\275\177v\323<\230QR\275\235\301\010=\363I\276\274o\220\333\273\\\226<=\331\212\222;f\2370=:\005>\274\227\234$<+\250-=\320]\024\275\t\305\007=\362\217\t\275Z\227j<7\230\305:\267-\310<\351\216J\275Xs4=R{\355<.nI=\335\241\357\274A\273\232<\255\035x\274DP\320\274%\004<\274\300s\341<!pC\274Z;6=\352|e<\014>X=\355s\303<\246\t\n\273$\211\361\274d\304\212<\017\254\r<qK\034<\265C\025\275#\272\003=\236\024R<\025\271\036=A\003\035\275\271\231\234;\"$m\274+x\213;\322v\313\274l\220\356<4q)=R\201V\275\005@\256\274\357\024M\275\267\266\364\274\3403\327\274\004\023O\275Z\"\310\274:+\274;\007\013\345\274hN\241;\304\345\361\274\246_\211<}\000\002=\346\216Y=P\265q<\355\322>=\3468\376<\307\304\031=w\2178\275\013Q\203;!\252\243<\252~\262\273\266F?=\307\261\201<\014\351)\275G\n\t=(i\265;(B;=\227\200\200<\207\274L<@\254E\275\000I&\274=\273\276\273X\013\354;\373\332\020\275N%\030\272\2171\340<\313\230\305<\310\323\354\274X\205\006;\243a\036<\310`\206\274XR\365;[\2718=\272H\346\274\370E\234<=\220u<\r\350*=tI\243\272\257M\014\274\241(?\273\320\347\360\274\340D\226\273e\247)= \336D\273r\016\215\274\216\344\034\275\276\264.==\303\332\274\201\254\274<\350h\024=x0\023<\340\014c<h\255\006\275uS\023\275\346\256#\275\236\260Z=\337\241\275\274.j\337:Vi\010\275\227\337\306<WDD=\242\036\032=N\271\370<n\305\375\274U\274\305<%\362\033\275s\374\031\275+=\007=\276\234<=\354\347?==|\207\274sIF\274\322zX\275Tq\247;\000\267\365;\023N\354<\252\244:\275\300Z\355\274\277\3120=<7\311\274\311.\010\275\032\232D<O\224!\274\272hw<:\343D=z\254\340\2743:\247\2732\221\272<{W-=q\224=\275\366\264}\274t\206\344<\263\221\300\273\266r\366<})\370\274\237\265`\274aB\231<\241\240C<\313\373U=\220\313\234\272P*\010=\2103,=8\357\006=\030\337\220\274\2429\n<j\277\365\274\024\037\371:\375\362\311<g\307\214\274\r`C\275\007\2767\275,\370\022\275\360\002\036=\227\341\024=/\310V=w\006\330;\224\262\276\274]\347e\274\250,\030=\226s\255<N\210\"\275\255\217\314\273\375]\340<M\024?\2754m\201\274p\022\027\275r\272\230<\016!E=\271\204\344\274\330\322U\274\005\205\010\275;\237\325<W,E\274\373\010\246<\"\033\337<\324M\024=\315\010\\\274\315\274^\274\245\203E\275\006xJ=\245U\367<\026q\374\274\317\322\373;\346\354:=\343\321\274:`\2325=\027\003T\275\272\'\237\273\222\366=\272V\245\342<\377\207\213\273g\231\2359\301\256(=I\277\025\275\213\354\251\274\006\014\035=\275\013N=\231q\336\274\343\344\002\275@\3204=g\rX\2751\276}\274\031l\017=\365!F=_\242\232\274\021\246\n\275\371\212\215;\251/T\275N\315G=u\332m;R\377\027\275\225\316|<\345iz<\004\322\n\275.\3752=\233\033P\274T\222\000<s\024\263\274\026\001[\275\r\373\307<\270\252E=)!\351\274\201>\204<\237\263\273<\301\350\037\275\225\230J\275\266\252\031=-\270\007\273\237Q\030\274\270\364\025\275B9\264\274R\234\323<\242/Y\275\324\001\002=\\e5\275U\274\345;YH\200\274)\267\026\2750C\227:&\036\001\275\371\023(\275x5\3529\204\331\304\274\300\353\350\272=D\210\274\021\t\320\274\276\201\336\274\201#\020=\000|\027=N\244\315\273\325\225\224<]\300\026=\334\016\374;\200\332H\275\250\"\357<\006\273.\275&j\016\275\241h\036=\263U$\273\333\223(;\360\023-\275\017\0334<\254\307\010=\343\244\275<\205\305\301\273E/\025\275\201\223\n\275\341HL\275@ND\275\277\255\235<p1\302<\362\360\016<=#0\273~\373\302<\344g\236<4m>\274\351{\364<\024b/\274\'\315K=\214z\252<\277\357\016=\025)\033\275\351\3207=\336G\204\2740\316#=\202\226\010=\345U\334<l\275\006\2756\372I\275\325\310(\275~\363S\275Y\347\025=w\243\361<\t\342*\275\216\006\013=\253U\265<\371\256\364\274\342\350\002\274\2632\206<j\2355\275K\266\210<\307%q<Vq\312\274\200d\026=22P=\266\335\316;-\234\'=\'\245\223<\344q<=\356\331\016=;\021\355<\311)\272<\026\336\207\272\035N\221<\252(\357;\355v\234<bR\003\275\360f\033\275\203\321\330\274~\252\354<\2014A\274\241\343G\275\311l\006=\252\r\256\274|\021\356<\"\'U=;}f\273\":1\274\342i\211\2746Y1\2746\204\371\274\244\010F=\262\234\324;A8\322<\ryW\275\324\001\233<A\312\214\274\265\n\275\274\276\260\240\274UTE=7\363\300<:\2541\2759{S<x\246}<O\376P\275\354\215\230\274\347\250\364:\270\313\320:\2751\034<\350\013+\275\251\017\327\274J\3272<\340\351\n<\253\265\036\275\255D\277\274-NV\275b8\003;\\\273\212<\213\311M=\007\302Q\275G\277\342\274\300\235\020\275\377v\032<F\311\333;\213X\235:\370\367\024\275<\326\331<\356\233\276\274~\215P=\017\244\200\274\211F\005\275!\271!\274T\355\211\273H}\030\274\222h,\275\325\214)=\204S\002=\27365=\270M\\:\336\005*\275\255\315\221\274\304\277\026\275\272V\276<\361nF\275\006\343\'\275K\327\027;\373\337};\340\215\023=@\3611;\216}~\274\353\025I\274\'x\356\274\265\247\230:\357K\265<\230\007A\2754?@=`\352\301<\004\3034\274\021]N<*\345Z<\000A\027\275\177\234\020=\025\001\357\273,?\201\274e\362\"=\212+\237<\234\'\025\274T\004M\275\235V.<\265\321\003\2759\355J\274\222\034\215\274\316\035\265<\003Z\212\2745\276R\275f6\322\273\230\303C\275zPT\275\002\237\220\274:1J\275\032\n\204<\251(\"=\227\035\300\274\363\243\206<k\227\277\274\302\022\022=o\220\345<\342\3734\275\375\"\231\273\256\206\312\272\316\317f<?\231$=\215\204<=C\336U;\317\270\310\274PG\312;\276&\"=F.:\275L\232K<\322\342\024=Z\017\214\274\370\357\250\274}\322\373\2740\tR\275\321\337\360\273\2234S\275A\025\027=\256B\017<\355\243N\275\365\312\330<m%/;\004\263\252<i\354\2469a\372\250\273&\316\302<\241\212\000\274\225\032\205<\324\372R\274\337\364E\275v\037\370\274W\302\210<~\023\272<\022\242\003=\270\304\327\274\320\225\365\274\335]\373<n\t\t\275\023\357\251<Zl\214<\336\355\204<\310\020\253\274\216\361L\2751\272`\2739\330\310<\035\205\231\274\327l\017=\324#?\274\004\271+=S\035\223;OW\332<\341\241\330\274\005\343=\275\304\344\227:(Q\323\274\254\333\005\275\"W1<\366\022\203\272\214\025\222<Q\353#=N+\030=\321\255&=\211\3147=\023~N=\226\2444\2756\355\373\2741o\024=:J?=\'J\025\275\315i\246\274nA\301\274~#\212<M\363\036\275\226\031\246\273\274J\246\274\236Y\226\274<\035H=\233,\004\275\274\350[<\242F\n\275\245\211\341\274U\025\250:\020P\257\274\203\302\017=\034\244\316\274E\023\360\274\265\224N\275(6\207<\260\364G=qR\215<\341\261F\275\260w\203<6\234\351\274\315q\354<\320\226\3619\240q=\275\301qX=&\322\236\274\336\006\372\274\337GH\275\227\357\013=\353\027\n=\'\213E\275.\244G=\372\252\302;\266\352\266<\025\326\274<\270\005\302\273\334\256\243\272\334\373v\274Z\367+\275\200\310\245\274\001\005\274\274\350\3539\275\014\2155\273\026\006\316<\370\3761\275\020\325\235<\202\371\215\274P\255\010\273\351\224A\275\253\315\331<\312\272\023=\032lS\274\346\001\271<\216(K<J\033X=\177\374\263<k\354\313<\036p\224<\020\373\311<\020*V=Z`;;2f8\275\222\2119=Z\035N=\306\027\036=\320\204\023=\265\206\244<n*2=\241\016\206\274\365q2\275\377\020h\274\024\342\210\274\371mD=P\206\253\274\263i\262\27428b<.U\344<\330\026\031;\271\362&\275\257<\241\274\310\323\021<\242A/\274\274\0215\2758\313\246\273G\002\000\275\016V$\274Q\276D\275\330\2609=\017n\366\273Z\264\272\274yq\337\274\221\003==@\367\362<\213\005\333;\2668L\2748*\217<\327\343\303\272\211$\036=Z\023?<b\017\301;2\200\345<\224xP\275\337\362\333\272#.\333\274E\235\271<\242\3101=\335\025\363\274.v\346<\205eO<\301\342A=\335\215\225\272\223\316\311<\3451\001=\346s\373\274\001\327\250<\2104\t\273(\310-=7\225\030<\360\004\365;\314Kw;X\210\217\274\035\240\236\273\255f/\275}ot<\210\357\277;K\r\226<\244\310\004\275\023U\n=\327\2442\274\030G\033=\271eB:.\274\000\275\241\247\010;\340\341\026\274t3\320\274\343]\353\274\323j\004=\233\206R=\027\037P\275\212\022A=\344\300\035;n0\210\274\253\360#\275K\202\224<8\304\033<\303\234\036\275\265\253\000\275\352\274\024=\031\003B<\201\036#\275\200\220\270<\262>>=!\371\025\275\t\230\314;\344f\230:G\304E\275\2437Z\274o\256\\\273\257\355\036\275\t\267\277\274\323\276V\275\034X\014\275QP\210<\016\340\357\273\200y =A\326S<\253\301\314;\275uG=nO\357<b\361\315<%T\"\275\273h@<\310\300\315<6Gl<\370\252\006<\272\255\010<\364?\206<\270\252h<\260BA=\201\237T\274\256\323\312<\2175\356<pG\255\272\233{\034=\202R\030=\245\3517\274\201%X=\226\242\331<#\310\311<\233h\231<c\241\262\274\377\240\034\275\261\315\006=\016\037\267<N\263\261\274\375\375)<\323\377\"\275\331\034G\275\232\360\030\275\035c\312\274\355Y2\275\267\020\272<W\000(\273t\362E<\270\214\262<\324\236K\275\204\334,\275^\0031\275@\030\342\272\tJ\021=\355H\342;^\3245<\253h\301\274\235S8\275\225\022\n=3[\247<m\263L\273\'\035@\275\342\313\354\274\267\310D\275\233\222\377;\203\r\023<\0143R\275|\034H\274rG\024\275\006>5<X\245-\275\224\267\241\274k\360\252\272\345\321\020=\352\227\016\274\267R\344<d\214H\274\303\213\255<\243\001\220\274\355$\244<\337\223>=\347;\256;m\325\235<\310\240Z\275\372\005\'\275n\253\037<\262$\206\274d1\305\274[\362\260<\035DE=HZ\000=K\354\t=\330\245\333<\306\221G\275l\362<=\304\311\204\274\231=\200\274Y\305\257\274\2269\t\275T\354\371\273O)\276<\016\030=\275M\301=\275\221\260Y=D\366\033\275l\353\340\274\t\2456=\357\362\035=\003\367\200<\275\376\020=\377>\024\274/\355\352\274\270\375\003\275\203q\033=\271\363\251\274kL-=j\357\306<4\313\021=o\245\026\275J\236\342<\242\001\017\275+\324\022\275T\231!\275\345]\026\275\216,\264<\177\275\230\274\355NU\275\376e\311;\234\3470<\317.\334\272\226\275D=\014\342\367<k\274\202:\260S9\274z\332\266\274\035\372\n\275\376\215\277\274@{N=\325\253\'=x)Y=_\327T\275\3143\320\274AA\331\274\207\024!<\260\367\202<\323\230><\341j\036=\305\273\362<\376QA= \022\331<\3023\013=\034\200Z=\237\000<<\232\350\363<\236\365\207\2740\356\013\274\023=\212\273I\235\241\274;5\342\274\325\265k<\372LR=\024\t\035=S\227>=\024E\201\274n\013\355:g\320\232\2748\254U<\031\304Y\275\3535o\274\252\2005\275IR\344\274\323\303C=\'f\003=\340\306\224\273\354J\301<d\203E\27561@=\330d6=\322\252\002\275\3234\324\273\264\001><\371\331\333<\201\335\014=\234\250.=\365\006F=\360\331\317;\002\030\037<\336<\356\274\220\233\331<h;\025=~r\021=\244\276);T\227\357\274\372.\302<7\255\010\275\303\355\314\274 \n\010\275\231\347\037\275\334\311$;\324\236k<I\"0=\375\033\303<\307XK\274\ry\022\275\313\340M\275\214\343\2266\305\274N<x\256?\275\347}&=!\301\305\274\017\353Z\275\341)\216<\376$\023<\345\204-=\335\022H\275\'\264}\274\213\267\025;\216<7\275|\324\004\275\341\000\331\274{8H\275\300=\217\274\347z3=\223R\035\275\'\023\307<\r~P=\034\2463=\316\214\311<\236\362X\275H\001N\273o3\006=\245lF=\014\273\214;*$U\273A\262\233\274\r\222)<\261y\247\273\3751\337<\227At<\313\213G<\367\0362\275|q\355\274\347\032\004\275\320\234&=\322c\207<R\216G\274\022\3367;\371\327\306\274sz):\273\005Z=)\'\327\274\202a\321<\212\232\223\274GN\250\273nQC\275\351\315x<\347|\244\274\356\'i;T\341\314<\240\312)<\247\207\241\274F\332Y\275~^\t=\263\030M<\336\326\275<W\n\314\273\321\221\200\274~N\350\274\314U\346\274\017\025\353<Fd\273<\027\355J\274Q\302\232<q?\026\275;\374\311<V>I=\006_:=\226\033\207<\343\334U=\370#\327;i\323\";\245\317Y\275|\006\277\274\277$\217<\226],\275\354\323\001\274 \235\023=\301 Y\2756\022*\275Y{\321<\007\306;=7J\020\275\322\340&=z\257\343\274\353\271+\275\234\3323=\253}$\274\306\326k<\210\300\253\274\322<\211\272\221\340\004\274\035\305\311<\274\n\232<L\020\376\274\017\323\003=@\337R\275\275In\271^4S\275,!N\275\030p\n=xb`\274j\304\276<HVZ\275\242B\230\274\300QJ=2*Y\274\274\007%<\377\371\016<3]\347\274\207\231\003=\323\376\245;\\Y\016=\367V2=\303\253\303\272*O\030\275\033\275H=\270\221\231:w\332$\275= \204\274\372\325\034=;\220x\274\017\022P\275 \233K=6\270\003=\366\330\024\274=\212\374<\262\220\017=?\360\031<{\311+=\326\034H\274{\303Z=\2160%\275\242\236\330<;\221\363<\326HP<\270\234E=\"\256\217\274\210<\013\275\332\264\313\274l##\275\033,U=\216{\375;\270\2239=\250\r\005\275\020|F<Jp\033=y\0267=#\377\353<\010\034 \275o\366\353\273K:\026=\322\242\374\274\270\323\317\274\036j_\274\017\244\017=\314r\353\272.\005:=\321\262\261<+\004\242;Ro \275\206\334\240<\213\301*=Rc*;\246\024I\275\321\320\007\275\366_h\274\223A\231;U\265\t\275\020\362\225;Mv\216\274g\'y\274+\243-\275a\273l<\317un<;\265\034<\372\274\230\274b3\241\274\344\003\022;\316\2357<\273\220\247\274B\270\263<\333H\340<\337(\260<\234\224A<\037\352\243\274\307a$;u\333\004\275\212\203\245\274\326\346\251<\255\330!=m\216\261\273\344\305\301;\001\363L=\361\361}<Hb\375<\234C@\275X\021\365\274\360w,\275\030\304\335\274Vl\251<S\022\325:\036\345 =\233\031\217\274a\326\324\274\20175\274i\005\'\275\207\301\260\272\352\333\244\274\321VG=\370B\r\275\023\355\315\274\373(6\275\365\360Z\273c\341U\275]\264\226<9}\346\273\355;\334;#\242\223\274\322K\334<Nd@=)\362\273<\355\rq\274\223\306\322<\010f6=\227+\215\274y\177\235\273`\031\377<\013\311P\275\25601=\033|5=\251jh<oaW=&\276\237< a\355<\276\342\007\275\261L*=g\206\017=6\"\342<\021E\266\274\356\346\367;\362O)\275\261\273\256</M8<\r\200\r<\230\3327\274\353\221F;\031\257+=n\307\337<\367\212\023==\235\224<\243\343!\275\250k\323<\"w\202\2736$\344\274\026R\336<\211\241\212<\005:\006<g\006\326<f\010\231<\205\265m\272\205~\017=-<:\274\332^)\275w\214I\2751\242\321\274V\325\317\274\324\020\002<L\260Z\274\202\333\003=_M\241\274\303\037\325<b\r\025\275\033|-\275\\\337\002=\364\203\016\274\317\261R=\263IC\275\256\302 =R$\017=\312\367\016\275H\202$\274\374\267\016=\335}\024=\345\005I=\326\014;=\256\331%=\306#\244\274%\310\001=n\263\030\275\025C\035\275\347\363\314<\325\227\275<\230\n*\275bR\014\275\2705\373;J\241\212;\014\306(=mF\013;\305B\354<\r\2244=`#\t=\271\031.=\212\241\255<03\270\274\2346\031\272\013\307\r\275r\203\304\271\230\007:=3\r\013\275\213\221>=Y\322\033\274\231\014~<\376\203\276\273\200F7\275=\230\310<K\200\366\273\"+9<b\031T=\256\345\313<\234\301B\275seg\273\361*\000\275\242\216~\274\034\240\334;\221\2419\275\016\373\t=\334B\222\273D\347l< \267\244\272H\n<\275Y(\224<\177;(\275\017\324\260<\264V3\2752\220\357;\342g\216<K\372\300\274\313\315,\275E\246\004\275\3709[\275\352\226R\2758\326\233\274\355\203\025=MT\025\274JRL\275\003\330\354\273\304\037\326\274\241\377==Gi\375\273\2426\n=\033\rb\274y\310\304<[l\035=\\\361F\275rz3=\306\327\023=PO)\2736\203\235<\261g\036=\214\304\244;\207\251u\274l\341\342\271]\006D<\357\021G\275\'\347:\275\362\373\001\272}\034\000\275\3362C\275\363\212\026=\256\2423<\004\374\366\2734\\\342<\3417\266<Y\325!\275GJ\220<z\006\272\274~\314\330<\211\035\030\275K\370R<\304\377\304\2743V\225\274vc\004\275\031b\014\275B\277G=\252\226\024\275\265\213\037\271\313_\335<V:\324\273N\316\362<\014\232\034\274+\\\025:\3358T=$\250T<\276/\214\274PT)\275\231\270\237<\307\206\341\274\0215\343\274\374T)\275\205\351\032= \246\005\275XkL=\327\031\037=S\302\331<\006\334\223\274\230\026?=\361\024h< \304u;\240\307!\275\217\352\350<\333\234\022=\315\002/=kBN=\357c,=c\247\'\275\217\241\353\272\265\003\'=\272\213\340<\317m\355\274\035\375*\275\253\247\000=\250W(\275\324\322\337\274lF\022=2;\230\274gm\353\274`\300w<4\226;=\213\366\265;\204\223\335<\265|V\275\037\263E\274\302\321\357<\223\027\235<\321,\263<}\216\333;\365\032\212;\350H\335\274\306/[\275Ku\037\275\2465\353<c\311I\275\251\230\023\274\'A\017\275L\264>;,\223\211\274\353\223\213<\303\330M\275\'\020\020=\345\277\231\274\273Y\024=\014\354\326\2748\360\007= \200\336<\373\n\325<\332\246\000=M\024H=h\310T=XW\227\273\020\313\370\274\032\350\254:\207]\"\275k#\206\274\361\035.\275\315E:\275\261\316\211<\273`\373<\354\277\235<\245\235\333\273F\320\035=\277^<=\367U\014=\220\312 \275\272\207*\275w\212\034=-\253 \274\374\252\227\274\3701.=\366\237\206<i\033\370\274\010\377\023=X\261\375<\266\025\202;\324\2214=\263\364V=\010\264;\275\252\017-=%\023\024=fc\353\274\262\223\360<2\260\010:+\321:\275\025\334\250\274\307\322\345;\262\332\025=\033\277O=\036\227\337<\347P\374\271=a<\275\312\266w\274\371\237\326;w\030\220<\031\264\'\274\375\311\233\274\312\331,\275\257\tF=#\311/\275\001Y\210<\317\377\210<\3237Y=hL\372<]\315\260<\004tX=\010o\227\274U\345\r\275\0001\354<J#\3638N\216\344<s\221\030\2741\273\247<\271\343\021\275P\200\377<\262\020H\275?j\027\275\261\300V=\032\315\233<2(\022=\031L\313\274\217\0172\275e\321H\275\023z=\275\240\361\023\272\223\030\333<\\g\034=\330\025\021=\n\267\374<\021\363-\275t\232U\275\n\363X\2754\3501\275MO\236<\272Dd\2743\263P\275\373\252\013\275!\273\021\274\207f\300;\200\266\226\274\270\301\354\273pl8=qZ\037<\\\240}<\321\356\212;\376\310\003=#\335g\274Lv2=\2359\361<\333\rW;\361^\321;\375\375\004\275\373\336Z\275\373\342&<\351\177\330\274%\365\333<>C\025\275\326d\014=\250\177\023<\177&(\275;,\353<N,\022<p\032?\274\246qA\275\237\223O\275\211\300\307<w%.\275m\331\023\275\215Ua;\274\326\017\275E\307\001\275\026\240\021=5\250\253\273\002\037o\272\256HR=\242\352S\275\206|9=>\000\177\273\214h\224<\345\214I\275\210\353\275<\374\375\312;\027\222\006\275\034\200\307\274p\247\003<\314X\221<q\267\245<\030\023?\275\333\004)\275\002\325\251\274A\342 \275\221\2066\275v\300K=\365W\013=\271\222\225<=\357V\275b\016\327\274\226\3248=H\253/\275\'\2753\274c\341#=[U\243<\211\347c\274\214\263\017=\033\275\021=\266x\006\274\256\217>\275\206\314E\275R\335)=\177>\210\274t\324\303<\300\236\304<wg\255\274\313\345(\275\304\301f\274\242\003\312<M\375\266\272/\327\300;\210g\266\274I\035\221\274\24340\275N\217\265<.\247\236<9\350\216\274\277\331\r\275\3655\010\275#\rL=\0055%;\311\346\310\273;\356\'\275%\017\3469\336\355z\274\310\220\357\274(\320\032=\211m,\275\244Y\240< b\023\27599@=\024\375\311;\220b\214\274\324\372n\271\267s\032\274\343\321\363\274TpK<\211\255*\275\222n\302<\330\202\300\274Q\217\022\275\277\t\031\275iWV<}\004i;0\373\373\272\221T#\275A\2110=\312b\r\275\033\023\236;<-O\274>T\260;^\214\356\273\251\377\274\273\346m\240\274+\177?=\346?\244\273\211q\336\274-@\210<}m\005\275\366A7<L\332G<\277\341\242<7\032f<\267\351y;\317\271F<u\265;\275\247\315\000<\321\312I=3\024\t\274+\307\003=\r\366\026\275\004\260\256;X\377R\2751K\006<B\022_\274\315\177\361<\025\007+\2757\361\230\273\353xQ<\352\214\031=\310\332C\275\036x\266;dX@=\366h6\274\302\"V=\356\034o<\324\014V\275\201\006;=\376\027\323\274\265\204\304;\226\374\371\274,\3412=~5\034<\376\267\210\274\030\007\313;\332\303\177<b\037\232<\004\006A=\345\031\367<]\360O=\331\203*\275\236R\347<A\311\272\274\252\377\000=t\235\273<M\246\035\275\205\351\204<S\255\333<Y\361\241<\330J*=\035\227I<\240\260\201\273\333\177\006\274w%\337<4\330\316\273?\333\336\274\244J\032<[\243Z\2754\005\020:u\363\333\274X?u\274\340\246K=\374\271\202<N\347\207\274\307k\362<\303s\244\274@@\360<\304\020\036\275M\332\337:\220\227\035;z,\354<\220\247\260<Z\272c<\354\237\010=\275I0=\021\363];P\220\315<\307/\320\274,\323\276\273K\267D;\251\n7<P\322k;\357 \375\274,\332\236;\266=\025\274\356?5\275\246*\260\274\004p\014=\254\313/=j[?<\241J\035=h\207\353<U\232O=RH\027=^D\030\275\363\nM\275\317\235\364<(\025\000\275(\2065\275b\275M\275\265\034\275\274D\240\001=\241|\264\274V\322/\266\257\274-\275\332\252\241<\221\223?\275\325\233S\275\305u]\274k\257\212<\247\3063\275)\376O=\305\036\013\275\021$\256\274\3435\203\274\254\032\211\274\022R\323<\025\326w;\302_\244<\336E\276\274_\372\247<te\231\273i\2776=j+A<\322e\025\275h\001\210\274\260\202\207\274\360\354/\275=\276.=\007\2333;\366&\363\2745\361\211\274\357;T=v.\n\274ya\014\275\222\315\331;v\305\366\274\305\2159=\0346\266<}x\031\273\310\256\022=\206>\354\274\367\273C=>d$\275b\321\234<o\353\365\274\253\252D=`\344\354\274\331c\034\275+\275\010;\032\020\275;\314\201E\271$\374\332\274\244\027\260\274\360m\026\274^\216,=\314\206\217<\330\036\240<\030\343I\275\007,\3119\377\345\020=\275\370\342\274\3018-\275f\256\002<U\302(=&\2112=\245\344\005\274#pW=\206\314\276;\323\350+\275Q\t\217\274\004\320.\275\202\367\326:\324\325C=i(\276\273\200%\356<\226\003\246\274\220\215\250<k\0236<a\301,\275\251\270O<\037]<\275?K$=S\375:\274\252D\022<_A\375\274On\005<\241A\355\274/U\330\273\206\253\333\271\376\261H<\244\2412=\207\333\021\274\210\227\005\275\035\272C\275\345\360\220\273\376tK\275\367\321\314<\362\351\002=\240O\374<\364\r\026\275\323\224\310<\274?\266<\016?\'=\3273\245\274\001L\003=\210!\261\274\321\240\017=)\230\016\275fE#\274E\340]<\0039Z\273h\373!;\007\004B\274\342Q6=\206\300\010<T\377-=e+]\274\240\274\333<\',\006\275\202\363\272<9:\335\274RD\007\275OI\036=\270\256<\275T7%\275\250=\234<n\007D\275-i\n;K\270\004\275\334]6=Iz\006=\227\345\221;\257\221\253\274\225<Q={\221.\275\236\023\242<\021_\003\274?|0<-\305C\275\3376\262<\177\232!=\337\265\031=\017\235\362\274\024\016T=\276\371\344<[\355\036\275\231\273c<\224!\222;L\261~\274\346\365\310<\337a\016\272\242\0276\273\242\251\303;K{\312\274BkB\273GfC=\000\205O\275\370\315I\274Qw\366<^\325\034=\t]\221<\336\350\030=\213 \262<%\212\310\273]\211\233\274\212\246&=Pf\364\274r\336\336\273\300\234$\2757#5\275gH\032\275\232\320C\275\204\010)=\306\234.=Ul\t\2731s\027=\315\336\026\274\275\370\010\275:3\245<tE\233\274x\272 <GW\022=b\314\003=6\030\304<\303\233F=\243\220\256\274\005\243\t=\332\033\356\274\334\r\037=Y\340\031=\233\315l\274\n$P=>9\004\275\361\274\353<}\236t<\243\211}\273\245\232g<\230\364\345\274\035\024<\275\374\3042=-\212A\274\217\024\216<?\227U\2754H\343<\326\205N=b\2117=\004\342\037\275d\216J<4J\351<XxF\275\363\214F\275Y\230\006=\363=\303\274\263?\257<\307\033O\275\205\2235=\253\023\037\275\275\357M\273\032\244\246;\226EH=G&\212<\373y7\275\213\313\357<\301t\030\275gA\n\275\274u\265\274\246\203\222<\274\'\205\274U2\021\275g\334\023<\305\000N\275\034\027O=R\246S=\3419^\274\016>.=L\362A<B\033\017=\363\376\377;\026\325V\275\312\226\205\273Kq==-q<=\341\3763<oZ5\275\330\3339\275\227\2677\275\374\"W\275\0328!=aFU\275Q\252c;\221\023\275:\257?\273<\320\025\372\274\377\320N;\345\013+=C\\.=\322A\016<#\027\"\275u\333I=\235\305\024=\263P.\275GjD\275\264\270\006=\331\356\032<\324m\206\273H\372\233<\270TH=G_\001=\306?:=n\335\351\274^\007-\275\330\331\"=Y\031;\274\275\334\342\274\036\366\232\274\376B\\<A\177?\275!N\204<\357B}<\234\270N=\373|\254\274\331\316\227\2740\024>=\234\333-\274\005J\216\274\216\370\033\275[7\020=\016\213\232;\223\313,\275\016K\203<{\031\261\274\'\241d<\230\276%=Ah\327\274@O#=\022\377\007\275f\177J=\023\234\242\2739HP=f\371\230\274\022\321\013=\000\233\030=\210+[=\2225\335\274;\244Q=\377\\(\275\253\266\024\274\202\"\265\274\301\257T\275T\342Y\275\200\'\222\274s)\204\274\257|\216;\254\310\002\274\033\276\033<\213\242\001\275\316\212\244<\025fB=\377\224\037\275Z\006X\2757\245Z\275\273zf9\252\026\351<R\224\334<zd\177\272o,6=H\266\031\2754\360\326<\344US=\326\000[=^\265\002\275YxB\275\341\362]\273ff\270\274\230\203W=jU\325\274\252\356\021\275Qu\231\274\344Qc\274\362\266\220<\335YD\275\247\257\360; \0362=}\025\030=@\247\332\274M1\345;Sb\361<\331\334\025=\237\r\243\274\260\344\255<\251w2\275@\354<=\307\333\301\274.\206\323<\237\207Y\275\272f-\275\002\322H\274\330\373\377<\200\'K=U\031\002=\302?\205<\267l\013\275.&\337;\326\363\201\274\033\035\214<6}8\275\363j1=a\t\031<\002.\363\274\'\346\r=\277\373\003\275\354\331?\275R\217\017\275\022_0\274&OK\275\n\343\231\273Y4\245<,,\006\275~\036\221<$5H=\220Cz\273\n:P\2754|\000=\370p\371\274W\365\274\274\213C.\275P\303\315<\264\262\013;\271\264\333\274Y\377\017\275\001Q\234\274\365o\245<\027Z\004\274\353\352/\2752\2642;\373\0328\274\206\025\003=Nq\2238\2424\024\275\222\255\276\267@\016\314;y\373Q=\347>\212\2738\206\377<\214\206\004\275#\203G\275Uc5=\177AV\274\324\316\305<\252\217L=\250\240\034\275\032P\262\274\274g\356<\002\352!\275\3716B\275\365\231,\275[\216g\2742\003C\275(GW=\201\230y<\335=A=\366M\314<eS\n\275{2\033\2755\356\271\274B\016-\275\237.\263\274\225+V\275\317\3221=\021\330\266<G\000@\275\343\2372\275}\256V\275\303\205\241<`x\031=\013y\204\274\273#x<\262l\026=\035\254\302<\335\201\017\275\326w\010=\363\304F\275\037\214\362\273\244\234X\273\275 H;\2618\2569\337\243\374<\230\374\004=\262o\354<\207{\375\271-\020\257:4c\034=\242\202\340<\213l*\275\371C\355<\307\315#\274+\264\226<_\r\231\274l\277\335<A\3764<Eq\364<\356\300\271\274D\304\364<\264\0315\274\002\336\375\274i\320\360<\255{\214\274\307]\036\275\237bE\275n]T;\312\3204\275X\240\371<\320l\002=;\207\026=\262V\262<\273\274\311\274\024n7=\224\204+=\254\234\036=Q\250?\275\031\202\016=\364\262\276\274\243b\003\275#\355\217<\364\227\014\275\216\247j\274\214+#=\325\2446\275\204\017\201<\013\350G=n\3261\274\014\244==\2257\205\2741\237\034\274\242\375R=\264t\305\274\316@\267<]\235H<\371\367\206\274\221\372\360<?l/=h\302\363<7!Q\274\'\275V\275\251\356\332\274q\277F<w\216\t=\021\260\341\274V\r\273\2749\272\013\275\371\371\356\274\251\210\361\274\017\306\214\272\020\\1=\006o\016\274a\264\302\272-!!\275\363#\270<tA2\275\220fB\275\235\256B=\020\210a\272\316\0319\275(\244\215\274\275X\016\275my\275<\347\352\016;\007\325\027=\257\317\320<:\322\261:\027\3500=f\341X<\302\253S<*Z\365<7\325\035=\212\207\336\274Q\373!\275\2602C=\034\032\313<q@\t\275\204\nC\275\211!)\274u\311\033<\331H\366\274\220\200\221<\244w\342;\233\024\033\275\366e\006=\330\245=;\267L\224<|\210\035=/\236\233\274\221\006 \274/z\332<\260\230\374\2748{M=78\205<\201\337\362<\372VI;\201$==E\357==\304\014\236<\2740E=\356\255\371\274\265,\037<\203\315<=\242\320#=\347\313O=*\254\236\274O*\205<\240f\000=My\365\272\237\272\323\274P\323\320\274\362\305\032\273\252<\322<\317\302\265;\220\366M<\254\364\313\274\256s\252\273\331\317{\274\227\216O=jn\303<\375<\024=\324(L\274\310\262Z=\233\256\322;da\203\273\322^\010=\027\264\002\274\357\031S=\246\\\343\274\352\020\216<\313V\n=\307W;\275\005Cw\273U.M\275CsI\275\256?\021<\001\217Z=K\372q\274\303\345\277<Y\266\273\274n)4<(\205\337\2744\354\234;b\307\300\274\330\316-\275\371\002\271;\005Qj\274-\355\331\274\227k\030=*a\213<\322\322\370<\372:O\275\227\374\n\275?Y\010=mO=\272`\332\253<^\363V\275\264@\036\275x\371\220\273\200\244\000\274\350\'\222\274\302\303\005= \024\334\274\032\235\237\274!\267\202\272\005\203\002\275j\345?=\010\211\350\274\027\3162=\230\013W=?\334\003=J\271\000\2743}\375\271(\\\261\274\224\245G=\355\210\264\2749\014\366<w\331u<\222T2\2733\367\273\274|\005\017\274On\233<\337\023\036=\301t\203\274\366\025\215\274\221\0008\275\224<\363\274\315;6\275F\204\017\275rI%=\266\253W\2745_\317:\377\237!\275Q<0\275L\235K=\027\344\301<9\013+=\356\2668\275G\001\017\275\0379\000\275KM\032=\356p\312<A\231\007\275ntN\275:\342O\274w\257\366<\276\314\205<g\256\365<7\004U\275@\207\277;\272\227\211;9c\246\273\024D-=\361\017\223\274\005.<\275^\2772\275\222\260\023\275\310L:=\216\321W=q[\033\275q\276&\275(tN=\3176?\275\0165\252\274\356\271=<\245\3538\274\324\221\233;\177\334N\275\2523\260\273Sm\003\275\330\324\025=\004qO=\206\001\310\273:\024\"\274\237Q$<\037\314\344\272\327\304\025=l\211\356<\351\353\312\274\345\231\202;\233\367\366\272&\354\020\273\324\223U\275\352y\021<\363\220\275\273\233;\004\274\323\237\005\275\247W\326<\nCV\275.\363K=Y$Z=\030\351>\275\215\215\331<\005\024E<\365\0073\275l\2747\274 .;=Y\332\374\274\232\330 \275\310\266\223\274lTZ=\345\303;\275nq\023\2751\357\344<WF\352<\003AV\275\"\\\270\274L\201A\275\007\017\267<\375F\031\275cg\031\275=\3477\275\222&\216\274!\215\006;#\2564=\255\244\241:^\3634\275\235\021\300\274&\345\210\274n\331*\275\232\344\256\273Xq\020\275\271\361\203\274P|W\275rjR\275\236\342D\275\031\253+=\267\202\306\274\336\033\020=\365\247f\272\303\021\233<\014\007\215\273\353\312\376\274\317\337\033\275\370\337\026\2752\255M=\310]t<\233\3634=\016\361\361<\rSV\275lE\310;#X\006\275\277\212\022=\"AL\275\206\365\037=h\302\202<C\244\325\2746l\335\274\035\004d<\210\375=\275R\020\016\275\242\245.=k\333K\275&\315P\275\203\213D\275\202\222A\275\251o\010=\346\266\014=\027\333\000=\313?\352\273\n;k\274\213\311\264\274!\355\234;a\200C=i\343\223<\t\272%\275)\237\257\273\006\355\271\274S\306\377<\346\312\r\275\204\214\035\275\342\337\360\273w2\014\274\276))\274S\306\252<\301\303\"\275\214n4=\037H\025;\n\3328=!\002\272<o,\373;\304\216)\275\'K\036\272?t\323\273H\037`\274,\265\214;\272\214S=\206\225K=\363O\000\275w6\261<3TT=\373\243~9-13\274\322\007\023<a\217\370\274\006\365\244<\3552\211<\200`>\275\324bS<\013+6=\312\356\337;\257\263L\275\245(,8\306\201H=\325\315\020\274\034T\026=\312nZ=\374_\037=\202\247\362<>%\240\2747\035\347\274\354\270\266\274\315\224N\274\302\321\016\275V\000[\275\010\373}\274\210\275\272<\307\310C\275\t-\252<?0\010=\243\267A\275\373\311P=\n\332N<O\364\245\274\330\265\014\275T\347\362<\314[\337\274\216\035\245;\354\032~<\241w\023\275x\014\227<.~\356\274\365\312)\2754I8\275Dw(=\036p\025\275\013\037\002<\344\306\275<\211\\\n=\275\326\023\274$\352\237\274\371&\000\274?\205/=\263F\020=\210\331,\275\347\001\021\275\010\236$=!\246\353\273Z\254\261\273I\344Z\275\247\n\244\274\316\006\022\275%\262\014<\315\362\237<\302\177\270\273\017\021\366<[\214\310; \024\267\274\177\225\376;\241\305G=\263\216\263\272\352\307\244<\30604\275B/\031=\030\351A=\377\205\312\274\304T\303<\251\367t\274\317\366J=\013\260\236;)=G\275\267\024\325<\365\237\037=\224\265:\274\337>\362\274J\216\202\274\231\255\t\275$R6=l5\n\275\234\344\327<= \016\275\003%\n=\232\264\026=\344\007U;\304\337R<\232\372\331\273\312w-=\371R\355;\347\303\021\275\372\316V<U\'W\275(\253V\272\366z\027=Mj \274\377\355\342<\212\347\353\274\364\256\003\275\230\001\224\274i%2=6\3502<@-%\273\272P7\275\351\036,\275\3677L=\226\335\324<\363\254\214<c\024P=\t\213\027=F\371\346<\262\014\276\272\212\026\003=\352]\222\274\177\213u\273\264\250\356\274\310g?\275Wi\210<`\004\230<g\325a\274\014z\347\274\031\372\256<Z8N\2752:I=\374\003H=\014\320y<^\336S=W\302\027=~\212\024=\277\030\273<M-\327<\262qD\275)\276j\274\370f\211<\262\353\257<\367\342\360\274\215t\351;=\336w\274{\213P;\337\255#\275\361#);n\371Z;v\226A\275\350\177I=\235!&\274\222\324 \275n\237U=@\244p<\335\232\035=\254\357\274;\221B\250<\362x\366<IZ\003\275\"<N\275%(\304<\201R\344\274,\030-=Y-\r\275\3104\016\275\366\325%=\250)\005\275B\2615=A1Z=\272\307\034;`\354H=\241%T=:\\\373\274\007|\246<\231\214\257<\032|\264\274{}\030<\316BK\275V\357\010\275\021\262\331<E|\023=\366\332-\275\002%\340<s\\\024\275jI\244<\310\2345=\204\327\005\274\240v\032\275\263\201\n\273Y\r\342<\347\375\300<\342\022Y\275Y\202\030\274\334\326\311\273\212\313Q=\022\n?\275\313\035\257<\326}/=N\262\366;\025\200S\275B@W=\\\373L=\274\233\333\273r\026\025=\203b\021\275=\340\315\274\207\364\271<a\222\240\273\001^\335;f\2123;\'\247\'\275\014D\360\2743\204\017=\\l\013\273\250\013\327<\3129=\275(\301w:\304\341U\275jX\204\274m\217-\2757\027\370\273\345\307\036=\336\3107=\302\264\331<s\341\205<5\372\255<\333\006\227\270\257\036b\274\024.3=\372^\326\274wA\267<\230\'9=\326\237\031=}\363I\275\n\203\300<\324Z\223\274\272\027\264\274\323&*\274\307\013*:\273~\216\274\021\352\272<\313\306\014=UL&\275\322\264\235<@\014\246<\t\017\376\274_\272\345<\232E\353<3\030\243\274\305\3079\275mLH\275\177k\302<v,\276<\220\257\226\273$\014\321\274H5\032=\254\236\326<\2372\215\273\317\323\026\275\200\210\007\274\203\346P\275\327{Q=\365\013\310\274\t\002\034=k\322!=qo\230;\254j\032\275X\\2=\366\257\022\274?\363G\275m\316#;\315\014\344\272\342\223\241<Yf[\274N\260\027\275P$\345\274\212)I=\273tD\275Q\013\375\273c\301\225\274lFF=\342\\U=Q\023*\275^\356>=8\376A<\'L\366<\324)\340\271\017s0=\177\316\325:\3107\004\275\264,R\275*\246\247\274\220Fn<\373\001\254<\037\360\315\2742\020\203\274\203\377P;x\337/\274-\304\344\274^$\226\273\352\344H\275\213e\352<\277WS\275\235\002\227;aqL=\007\016\020\275Z\302N\275\335x\304\274\246\327\252\273\247\327\242\274\344\374o\274\025\\\360\274\370\354\314\274@\373\354\274,{\366\274\300\230%=\024c\267\274\330\347\256<`\325\010\275\302TF\272\003\303\'<D\252\272\274V\026\022=Y)N\275\335m$\274\345f+=\321\242\346<M7\027=w\260\036\275\205\206\306<\335r\313\274\023\202\366\274\010\276\235;C\201$=e\251\334\274\020_U\275\344\227Q<\377\2215=\354i\372\274\036\210\202\274\2379/=\224\356\017\275i\316J<!\226H\2756\343E\275l\205r<\255yV\271y \256\274Z<4\275\t\215\031=5\345.\274\376\304==\347E\305\274\n08\273a\257E\2755h\004= \220V=s\325K=\000\351w;\276\033Z\275rC\305;\242\020\017\275gy\367<\222v\003=\006\3705<\356\006\033\274\033\337R=7|7\275\375\335\030<\030\232\320<\273\220\017\275Y?H\275\267U\236;\177I\322<\204t\246\274\005\275\242\274?\004Y;\024\316\303\274\234\022\270<\002\220M\275\230\300\037\275\371\r!\275\271\353\221\274\303\t\204\274\213E/=\020\013\017\273_\220G\274\213]J=\372\026\202\273\210T\314;U\rT=\364s\232\274\213w\001=A\361\353<\236`M=[\264k\274 \350\317;n\275\n\275G\260\377<\032n,\272\302\215\265\273\263\017+=\357w\377\274\212\004\262\274\222\320\302\274|2B<:7>\275g\211\004\2672\264\r\275\004\331 \275s\302\307<3LX<Zx$=\254\334\240\274\275\255U\274\222\010{\274\323S\216<\331MI=\366o7\275\214\251\317<\244\2471<\332\037\035\272x35\275\"\032C<vIG=q\036\352\274g\006\\<\347\325\342\274\354\234L=\0164\001=V\267\020=\264*\370<;\356\260<\274\350\236<\361A\342\274e\\\306\274\224.\302<\267\006\026\273\256*:=1\240 =\265\230?=Y0\244\274\275G\312<\376\'\024\275\001\262\305<\021W\207;\266\327\032<3\325\353\274g\017\026\275U\211P\275\035]S=\252\227x<U\2220\275\252\2334\275\272l\340<\347\330\000=G\327\000\275H\333\274<\344\270V\275\024\036.\275\006\271)=\343\234\"=\n\265\003\274\t\367\305\273\332\275\276<\004\027,=\213u\257<\356\244;=\n\016\014\275\336\030\'\275S\261\376\274\014\371\376\274+\276%=\2230$\273\017\223C=\307:\340\274\"\340\347<\367\327Q\2750J\225;`\231\325\274\354UC\275) \225<\000\354*\275\357P5=lJ,=0\346\020\275\007\362\014=\\\270,=sg\r\275\373^\n\275\211\025\237<\230\212\244\274^\356\226<HB\247<NHQ=5TG\274\263\307O\272\325\367\026\275\276sG\273\350\3126=H:\304\274f\332@\275\0033(\2752\256O=Z\330\031\275\337j\031\273\025\254\312<Zs\021=\330\231\223;\313w\207\274\203.&=\347{T\274\212\301\304\274\333\365\353\274\277Z\302<},\031=\r\332\002=\305b\007=66\331\274\037\371\010=\216\377\374\274\230nZ\274?\2111\275.\000\035=\247#\207<~wy<\354l*\275\302\350\003=\002|.;\377\320\224\274\212\'K\274B\\\202<\215\2340\274\'\003\276\274\342\225J\275\251\320Q\275\301\306\022\275\253\320!\275J\2313\275\243\222\375<3\002@=M\t\326\274N}0\275\036\0241\274\364\177\221<\272\244E=\"@\355\274\226\315\026\274.?M=.~M<Oh\013\275\3142\205<W\251\356<\277\312R\275\365\266X\275#\202O\275*\274\302\274\231^\036\275n\035\350\273\360\301\312\274T\350\022\2743\305X=\323,\037\274\'~\234<\261\013\326\274\246\017\030=Q\246E<v\365H=]\2656<\033\341\264<\260\255#=\201\350P\275\227|\327<\236V\345\273\217N\026\275+8X\275Xy\213\274\330L6\275\217\3211\274`\360\345\274h\014\244\274\207\314w\273\n\\\304;\272\'\250\273o\005L=\330j\337\274\341\246\001=\365\2007<\211\021B=\323\261\037\275\300\0279=\355+P\275O\372g\273\226fD=i]8=W\302*;\217\262\243<\234/%\275n\271 \275\033\332\022\273G\260\344\274\021,\024=\353\246/=\000=5\275\350\304\321\274-\377\020=\023FC;\245\346;\275-\3771:\267S\022:\014\326\242<G}\265\274\014\2671\275K=V\275F\347\251;\235\237\361<\370\316L=\037\203\027\275A\371)\275h#\377;\t\000K\275\200F\272<[U9=\252\020\363:\375O\301\274\314\370\';\207\350E=\227&?<q\256\255\273t\2609;\335\365\004\274\224.,9\256~B\275-,\275<\334\003\037<[m\245\272|G\330\274=k\031\275q\356\017\273\231\032\t<IO\261;*\330\201<\342\034O\274d\274\027\275z\376\210<>\212%=\010Y\365\273Lk6<0[ \275+\252G;\314\005P\275~\302\024\275\354\036v<\032\216\004\275\343\315#\275\222\341K= r\302<\221\346\216<g\2118=P\242Q\275On\344\274gH!\275\326\273r<\245s?=\326\272\023=5T\204<x`@=8aJ;n\232\'\274\220A\221<\227J\344\274\210\202\325\274l\314\332<\340T\273<VM\371\274\203\320\226\274m\360\337\274\030\014\022\275\365\345\202<Y\217\027\275\034\271B=b\235\000\275=;\234\273&\027\217\273\257n\334;\316\246\336\274\362\365]<\343\351\236<-\215\243\2729\002+\275L\250\266<ir\234<\252P\241\274\220\250(\275\231\021g\274 \345Q=K\022Y\275\207K_<|\323-\275\343\307]<\334\331\303\273\032~8\275\001\312e<\0029\033\275\237\206Z\275\2522\317<\362\224\262<0B\371<\312\311\027=\363\261!=W2e<i\345U\275\303<\037<\2277\270\274W\275g<\371sU\275\271&\253\274a.O<\000D\205<\022%\364<\376\316\013=\216\330R\274\023\236S\2757=R\275b%C\275\322\257\021=\360\226{<i%\212\274\n;\245\274A\257\376\274\222\017\252\274\367\231\244;\277\230\321\273\014\212\013\275\310\034A=\276\366Q\275\3766\002\275\02302=\201 A=\022:P\275\267\353\265\274\177\247\243\273\325\254p\273\224\270\007=\016\3571\275C\331\306<\322e\371\2749\337\334\273\001\020l\274W5\236<\233q\247\273\363F\001\273r\033X=k\200@\275\355-\034\274\342\300p\274\356=/\275\351B\022<K\252%=x\333.;\331\037\'<\332N\016<\214\321H<E\264\205<\321$\202\274\013|B\275\240\nN=\231U\006\275*^\252\274\260\330\325:\010\242O=FR\355<\353[H=\375\357\240\271>VB=\343N\003<\361\315E=im\354<\323B\022\275\344\036P<\2763\221<\013}\320\274&1\t\275\207)\"\275o?\020=\037\363=<b\213\010<~\200\"\275\306\017I=;\020S=\227\037\014=\206~\355\274\250\003\257\274\314\242\304\274x\335&=2\257\257<\367\214\241;\250\213\333\273OR\030\273K\262 <\350\360\214\2743u\266<Y\262\023=\310\010)=\004#\001\275F\260\017\275\363\357\347;\332`\036=\210A:\275\335\271\307\274\301|\007=@u)=\347iV=\257\217V=\355\004\361\274\242\211\305\273\216K\340\274\002bU=\253\340\324\274\376\311\246;\356\372-=<\340\262\274\357\304\030;)$\334\274x\001\324<\326\245;=\n=r\274\007C\326<aA\361\274\215\306\277\274N\021D\274\2322\254<\254\347\301\274\304\235\307;N\'\343\273\351\230P\275?g\363\274\370\222\356\274\263\355D\275\274;\243\274\325w5\274\356#\222<\r,\\\274\301\243\024=\277\013R\275\2412\n\274\230\353\354\274\311\203\267\274\325\304 =H=%\275\310NZ<|U.=s\324\207<\361\352M<vQ\'\275\036\272J=fQ\023\275\334\r\202:VBg;\251\206 \274\306kU=g\001\017\275\322N\005=e>\333\274y\205\320\274F\357v\274\360U`;\366\t\246\274\206\n\210<\340\232\242;\271Nh\2738\361\344\273\224j/\275dO]\274fsv\274H%\320\274\275\271\326;\r\235J\275*WS=\334\245\335\274\225\022\323<\333!(;\341\r\032=\1778W\275\234\261\335\274j\344\235\274s\325;=\367\007V=\302\201(=6@\000<*f\030\275\307\315%=3f)\275C\274\271\272\204\336\020\275e\342\010\275{\2606=\260B(=\032\2455\274+\256\374\273/I\333\2737\204P=\340\301\334\274{\0043;\326!X=\312\223\316<\243\250\375<4T\024\274ym3\275\272\370\005\273\306\270\300\274\327\345\177<\260\036\371<l_\023<\344OO\275\361T\014=\205uE=\300\240\331<\356{O\275\244\332o\274q\216w:E}\035=s\031\203\274\326\320O<\032K\036=\335\020\356\273<:\365\274\305N\014\275\"\000\032<\270\304\275\274k\033n<\212\231\227<fN-=\300\225\276\274\333\307\265\274N\203\345\272\310\343\017=\204t/=\206\332*;\252\034\013\275\025\274\\<\321\243@\265\351\334\010\275\006\004\022=B^\315<Z;6;\030\377\335\274\333\005\004=\320Eg<\345;\025=\023o\016<\353\036\366\274\252\002Y<s\314Y\273\254\005\026=f\275\202\273\335\345\002=\177\351W\275\200\364\375<\207\372\336<t8G\275U!\r=\274V(=8-\000=\261q\301\274\364&\001<M\3338\275\350A\035\275\212L\023<8\017\001=\321\000[\275\347\212\212<\345wJ<<\312\222<\336\314@=\250\267\260<\3545\263\2745n\211<\2415\305;5\177\2229\331\021T=X\360Y=\377\017L=\331\247\014\273\006\301S\275!]\252;\301t\275<v\007\334\274L\330\025\275\335h\030=\247\032\004\275\242x\314\274\253AA=\322d\352\274\3370\031\275\216\362\\<\207\020D\275\234\262\t;6\273j<8\217\006\275k!\024\275S\206T\275\025\344\2229\200\342\207<~\213\256<\260\013\221<\240\031[\2752\273\014\275\235\335W\274\255j%;\210O\360<6\020Y=bH\'\275\034\227\022\275\017TC=ceS<\023\353\306<\325\276E=\000MA=\274\363X<\214y\024\274\020D\377;\232\307X=\363k!=|\252\337:\317\232\320<\217YV\275\322\003Z\273\205XW=@\006\242\274\356xX\275E_\320<\t\003\031<\274\231?\272\220f(:\t\030\254\274\266\034\265\274\214\374l;\000\034\017\275T<B<\370Z\201<L\352\352\274\360\364><\r,\275<5\3305=\2566;=e\350/\275\342\331D\275V\302\250<\023\025i9\242\351\241<!l\337\273\017\336\247\273\337\346\314<\"2\002=\373\213:=\2772\260<\243K\322\274^\264\023;\356\371?\275R\024\313<\267\331\036=\214\260\":\223\221\211\274V\245V<+\025]<t\341\006=;\300\234\274\307\0360\275c$L=\"\026\340;\235\333 =\372\216\232<]\323y<\217\004Z<\270\213\212<\332\341\'\274\203B\321<\220\006\357<\024\243\027=\350)\242<}w\266<\314\316*<\204; =7\021\3229y\330\251\274t\216\261\274S\266+=S\224/\275\226\'2=\230\2619=\270\3564\275\244Q\250<\377\310.=\326\333R\275h.\000\275x0\233<]|@=\223\365\r\275\223y\200<`]g\274b\231\367;\324yC\2753+5\275\300w\t\274\002\005;\275\326N\004=\237LV\274y\245\366\272TE\375<\226\212\022\275\343\035W\2753\030J\275\377y\000\274\3761\024\275\235\265\361\274p\021\367\274\210\001\300<\021`\"=7m\316<6\240 \275\025\344\342:\267\375\350\274\327w3=\317\026_\273<\274\266<\323l:=)\3004\275\302/;=\031w\375\274\305\236\236;yJ\252<\r\257O\274\303N\251\274_\313~;\205\246\302<\'\321\031\274\034?\303\274P\036\204\274]S\210<\332L\007\2753hY\275;\257\022\275I\377\267\274W\260\321\274\332\021\332<\223\321\360\274rC\000=\023CD=\345\367\271<\022\352\201\274\246\352\036\275\306w\313<\231]?\275<\365:=\031\002\367\273e^\377\273\212\240\210;m\207^\274\317\003W\275\275\367G\275\274m\266<\370z\243<^\177\026=A\234\200<\200\265\r=\374\320\351\274\230\243\226\274\341\355\233\274\305\236\242<\346\227+\275~\272\303<\262$I\275\236\202\262\274\206\302\354<\321\246\307;<\243\001=2\372#=2\324\033<b\017\334<\321\241\276\274\373\215.\275\333Nv\274\003\374\035\275\023\377\027=\t\350\365\274\375\375\354\274E\014\355\273m\332\004<\353*\023\2755W\362\274\251_\210<`\357\"=@\000<\272\010\001?\274(\225#=\255\033$=\2350\2439\270\007H\275D\262\201<L|\013\275\317\002\023\275\235\330\257\273\341\0004\275\246\331\377<f\031\334<\234,\037\274\25546=y\2459\275[%\262\274\244\345\004=\362\376\267\274\266R\n=Z\234C=\257\004\205<\376\342*\275]\302\247\274)\321@=D\'\261:\217.3=|\224\353\274e\373d<\204\2020\275\375M\025=\346\252\001\275\202\3117=\n\201<<\2628\260\274\266\326\037=\332\003\201\274\345\371\005=;\374=\275\327\010\017\275\252\\\236\274\362DH\275-\003\0339\207\227U=\332\235\356;\201\230\200<\376\266b\274\247\013\267\274\333\276j\274\204\353\325\274\024\036\014=\222\246\004=\351\271\031=\373\333\226<\342ja<7\250h\273\263)\215\274\251\225L\275\324h\225\274\217\211\217\274P\3263=\037\372i;\177\225+=\222\343\336<xk@\275`\t\252;\365\032)\275I{\031\275{\336\001<\022\261\n\275\226\014L\275\257D1\2749s\305<\037n\035=\342[\001\275\036\337\323<,\266\234;\374\002\317<\277\234(=B\373$\275\221j\321<\240s8\274A\217H\275\035\263\027=\264\314{<Bz\233\274\005\376`;\366%\n\275jE\021=\254*P\274\264-\346\2749|$;\207\275\t\274\324Z3=\275\376H=:\014\233<[u\332;zi\342\274\235\365-<\3475\343\274N2w<\007BI=\367\244U=g\273R\275\rC\377\273\366\215$<\013=\352<\374?\347<\206\021\246<\034\210X\275\331\367.=\337U\266<\300I\224\274U\373\035<\304T\370<\326\276X=\030\277\014=v\223\335<\333e\360<\214}\220<\001\257-<5\261&<\325{\024=\275\002*;\306\275\221<\3741\313\274\031d\302<\331\334\265\274\262\"Z=\367\356J=\377\033\374<[o\203<a\312:=@VH\275%\263\212;\213\300\005=73\310<\2525\022=H\271,\275\256N\003:\215\230\314\273/\305\274<\321;\032\275*\217O=\210\362\n=\245\312P\274\035b\030\274\213\204\226;\363EO=\n\300\275\274\276\"\237<m5&\275tU\301<+bY=\331\006J=\330g\325;\013\237\213<\261\234Z=\253\366\324<\323\221.=\274 \243<\373\273,\272\344K\017=\304\203\231\274M\r\010;\251O\303;\305NN\275H`\274\274\000J\022=).\337<\353lZ\275^\254S\273\254?\361<\313\023N\274G\232\226\274\267\226\237<(Q)=\374\262F\275\346\267\037\275\220\347\017=mER\275)\207\004=\375\247X\274/}\367\274z{\251<W\361\231<g\361a\274\234~\375<U\212\213\274\377B\257<n\230\350\274\\+J\275\260\003\345;9\274\350<\213\254c<\255\276.=\3018\360<\n\371\204;\314B\014\275\336m>\274hB\304\274\177\246V<\216d\372;\017M\n\275\242\267\013\275\327b;=n\342\251\274\313\247\276;F\231w<\247\377W\275H\316(=Br^;,\005\246:i&W\275{\371P\275\326\2642\275\020\260\000\275\240\223\t<\311\202\307;F(\001=\355\312\251<\030\244p<\364\353I\274\365\021 =\367\331i<\033\366\272\273{\207\306;\342M\361\274\037\221\031<,@\366\274%~#<V|-=\221rO\275\211\2048=\265\305\226<>z\034\275M\317X=\301\2344=\242\271R=\354\305O\275=8\276\273\302\266.\275AP\222\274\326$\325\273Y\247\035=\0038\356\274\210,\326<M\007\227<f*f<\303\341\341\274\274\354\321\273\260\306\224\274\207\207\256<\327\347\036\275=\226\312:\261\326\212<\3479\231<K\354\270\274+\223B=\202\024N=\315=\377\273\200P\005=\234\337K\275t\2336\275\037S\206\274>}v\272\251R\374\274\333\216Y\275v\t7\274\270\363\024=v\307A\274\3775<\275Oz\304;j\345\035\275\037B\306<?\353A=Tz\355\274\304\205\035\275\265.%<\202:\006=F\270)=?vc\274\037XB=t C=\262\344\320<5\213K=\305\205\035=\214\002T<\213\324>\275\000\014.=\272\177L\273\301\203\001\275Y\253W=(\354%=\rp\326\274\357d8=\304\260\331\273\361\032\r\274\274/\321\274\240\215\331:\252\2303=\030\323\n=\367\210>=5]\270<;\013(=\332a\005=E\334\311\274\312I\024\275\207\251\350\274\323\260\225\2742\253\344\273C\261\210<\255\260%\275\274]\327<\326\357Q<\230j\235\274\272X\017\275\276;Y=\374\303\033\275\254\202\023=?e\025=\311`!=\201O\274\274~\325v\273\3042\276\274!I\003<\337\272\360:\236k\224;gH\305\274\323\363\341\274\322v\014\274\230I\036\275\333rM\274\326Bl<\273\025\220<\347\035Z\275\255\347\254\274\343\254\3329\365\003\220\274-\004\267<\016g/=l@\323<57\021<x\207Y\275F\2712=\250\177\340\274\302[\031\272\275i\010=\310\336$\275\212\213\017\275\320\327\177<j\376\376<`\341\207<\210\320\256\274|\257\200\274\353\354Y:\032\242&=\263\273\263<\236\2425=l\001\353<\333\367\274\274\354`*=rz\356<%,\n=\003\365\274;\270%M\275\336v\215<^\250X=\231.\315<\214\205\342\273\317\214\017=\017\350\034:6\335?\274\r\375,\275o \002;\376 \266\273\'v$\274\335v\343\274\250\024\276<\305\003\311<,z\013\274\335\343\r\272\226\243O=\224\350\331\274\353v\020\275P\254R=\206\005\320<b\023\034= \032\211<gS#=\277\247z9\375\023u\272-m\332;%\267\347\274\246n\027\275K\211\237<L9\026\274r\016\025\275\353]k<v\303\272\274\272\213\200<d\214\320\274(\220D=\341g\023<#\013\024\274\010\357\223\274\311w\322\273\250EK\275Ru\t<\354yY\273\031^%\274\220P\010\275.\275\002=1`\003;*\200>=\337\306A=a\266\307<\317b\356\274vj\257\274?Q\362\274\206\325\\<c\341!\275\027S\365\274\211\302\032\275\217\240T=\006BG\275\010O\023\275\262\030\222\274\005\3134<%\242\004=\275\351\013\274!\347\003=\013u\026\275Q\201\037<\234_\233<\363{\236\274\223+\311<\311\007x<|\234L\2759\220\265;\225\004\301\272b\306\024=\215\355Z\274;M\033<\344\021\243<h+\001=\350w\022\274\224q.=\345\3323=\355\264\324<\2212\241<F\356\346<\343*\006=o\375\367\272\r\035\022=\035\263\033\2753\365\002=\227q\007\275\3071\001\275\232\363#\275\017\222\032=f^/\273\326\233\244<\207\316\224<\025a\372<%W\316\273b)\014\275\343\207\321<\243\037%\275\3434\234\274\rH\031\275\375\362S=\234\204\330<+\242X\275r\303\334<^\320\000\275\217\033\033\274Xl\274<\275\014\025=\216]\001\275(\371\317\274\014D\024=\272\357Z=\215O\"\275\272_H\275F\367\025=\345\313\355<jj\001\274\025\024\235<\273\016\200\274\351K\365\274N&\347<W\226\251;R\367A\273|?\256\2742\330\374<\242,\230\274\3372\323\274/b2=\243S\373;p\220\006\275\333\001j:\230~\031=\371\370>=\216\220\254\271\023(\202<\344\215\016=\"1J\275s\1771=\334\247\354<\230{\250;{\034\262<\302\331\037;K2\003\275\033`T\275ib7\274\217\007\033=\306^(=Q\017\361\2723\205C=I\230\303\274\241\333\365\274\007v>=#1\251;\232(\013=\313.\026=\316\271Y=\363\202\213\273\231\213A=\355PR\275\250\263X=\032\025\250\274:?H=\n\224\022=\177\226\237\274,\315\263;\3368\030=;n%=\327:g\273\236\265\274\273\264\313\235\274p\177\016=\273r4\272W\365\315\273lu\242<\346\242_<\263u\016\275\231Da\274\314;\024=X\312\313\274\236\360T=\334\200\346<\215\2027=!\025\001\274\303\033$\275\3366\214\274q\366-\2759/\3446i\366\022=\300y#\275\034\334\223\2745\232y;\025\260\330\274\227Z\330\274\350\327r\274\020=\302<\220\014J\275\372\351\343<\20340=>\026T\275\005\247\267\274\261\367\353<\023m\014\275Q4\364\274F\"[\275\002\374\211\274\354\240S;;[-\275\035\370J\274PID\275\255+?=\271\324K<\227Y\372\274k\323\021<\351z\014\275%\204\271\274\205\200\022\275\352\245D\275}\340\345<\251\024X\274wO\027=t\376W=C\331\'={\205\024\275\313m\004=\203N\n\275\037\273\037=\211\336\270\273q\252\365\273\237\235\026=\3606\214<\256)\002=R\275\037<\327\210P<\026G\2259?e\300\274:\352N\275\276\244\r\275\3519\327\274\t\001\201<\226\301E<\377\003h\274\2277\342\274\370\253\n=\344\366\226\274\031\360*<\240\331T=\310\322-\271\037\205M\275\245%\272\274\330\233\256\274w\271\335\272\310\215\300<\211\n\0169 \222\034\274i2\034\275=\214\001<\366\256*\275\244\020\347<\201\202R\275\260\004\023=\025\367j93\004G=\002.W=\205\223\005=\305X\313<\304#\305\273v\276\315\272u\263I\275\343\253\265\274&(?=\325\021\207\274d]\316\274\177\220\220<\267\305\017\275\322a8\275\227j\346;\314o\003\274\004r5\275\255\331?=\260I.\275\356\347;\275uN\326\273\210\350\202\274[j)\275E\355\253<\215(\215\273\351!\362<\030\343\230<F=\256\274!J\035\275d\244\251<oh\335\274\202\305I=\203\263\306<c%\000=\337\033c;\236]\360\274\240\225\023=]+\231<c,3\275\307.\260;\240\'S\275-\304%\275W\215\027\2740\277\254\273Z~\021=\240)\220<\2549.=\021O#=\251Q\010=*\003\354<\352f7\274\003!\205<\251\272\344\272pe\253\274\274{7\275\345}C=\001\340\022<\344\rQ\273\206\204\200<\207\243B=\226)9;\322\360\277<\234\007\221\274\315H\263\274\271\000\274\274\366\325\337\273w\303=\275\204\225)=/P4\275q\216\002\275\246D\'=R\210$<\261I\255<H\314\344\274\"\035U\275\213i\237<\351\365\t=\327c\003<\343\363\361<\001\005Z\275!\225\321<\255\273c;\211\022\'\275\"\215\034\275<\"\344<D\007\336\2741\374\260<{+\014\274q\325\003\275? r\27471\260\273y\242\212\274Gx\021\275D\014\021=\203\206{<\342)\224<\031\206\362\274\017\376\306\274\021\250\031\275V\337\032\275]\345\030\275\306\254\214\274O\236\232<\017\263\243\274\213e>=\241G\000\275\220\317\240\274\227i\032=\320I@=\260\345)\275\323Q<\275\211\004T=\211\000\030=\"4\013=\253\273\022<\337:!\275tZ\261<\031\201D\275\325K\336<\340=0\275v\340\374:>\246\313<\230\177\322\274\360C\024=!\314\266\274\343\240\216<\335\201\010;\2437\220;\301\023\026\275\205\206\032\275\231\220\271\274}8\344\274\206V8\275\020\n=<B\335\232<\010\331\246\2743\200\330<_-\202\274\336\3246<M#\020=\223\202X\273?\250Z\275X\203X\274\237D\374\274\334Z\031=\013\006\224\273\265\202>\275\240Q8\275\203\325M;\242r\216\274\201\"\335\274\215\233S\275k\225\366\2740o\343\274\023\000\002\275\350T\304\274C\310\202\274V\203\373\273\257<;\275,\213\257<\2320d<]\3559=L\n\233<\303\223\343;\263\010D=eoS;\264OX=<\332B=\223J\027=\272\025\007=\364\031\241\274K!\316<k[\234<\262\356\023\275\035\032\371\274!ZR\275~\240\344\274\004\203I=3b);h\207u;\332\361\006\275\003\327-\275\342\026#=\333\022\003\275\336\313F<U\234\035=\'\310&;~\226\367\274\016J:\2755Xo\274\007\326u<q\366\372\274\032\277\304\273\346\250\237<\322]\235<\177j\021;FSJ=V\016\302\274\027\222\014=\204\346C\275\264k \275*4\276<\337\270\326<N\342X=\312\"I=\312\002\024\275\255\220-=\007\273\006\275,\256\033=\345\277\032=g\r\025\275\263\236@<.\366\022<\253\277\230\274\366\203Z<\034\271,;\355\214,\275$\304\265<\264?8=\230\000(\275\237bR=\255\205 =\036\321\303<\311\336\265\270\252\215\377<?\200\255\274\210\247\005=\264Z\036<\016t\t=r42<\271Xz<\223\307L\275\263\305\332\274?P\353;\032\234\240<_P\360\274r?P<\271\013)=X$@<\324+\232\273i\347\013\275b\264\031\275\240\215\014\275\272\334\312<\322\300G<H\300:=S_\263\274&[<=\363Q\024\275\373\001!\274G\267\252<.\324\351\274\243.p\274\370\362\352<\213\347W<\377\332G\275\371\341\036=\037qq<DOI=\007\331\r=T\016U=\272^\032\275\233*9\275c\202\007\275\235\320\016<\027)\267\274\304\223\024=\306\271*=\342V\004\274\262y\355<\'\345K\275\276\025\307\274~\261V=\245$b<|12=\020_|<\363H(=\221\222\367\274O\001@\274\235(\r=:n+=W\332\300<j\0222=\322r?=\365:@=\"wR\275\027\224\037=s\204G\275cF\306\273>\034\235<\177\326H\275\016]O\275L?\'\273\377\370\252<\304\2526\2754I\223\274\227\213$=\031\204\213\274N\243\370\274j\222\032=S\276\370<\t\025\216<^C;=\301\256\007=\351\302\260\274N\201\000<\272\311a\274>\023K\273\371\206\244\274\256\027\r=\305yI\275>\021\026=\343\024\207;\307\023*\275F]{<\213\313\256\274 \240\302\274\223<-=`\314\341<7p)=\254\356\006\275\260\300\005=-\321H\275\010\332[<gHW\274\337\333\306<M`7\275\274\2576\274\347\300%<\204F\351\274\240\216\223<g<O\275\221\260\214<q\263\025=\262\205K\275Y\312\037<\371\n\220\274H\335\332<\352=\224<\325MN<\207j>=\000>\341\274\200\356,=iT\351\274\333\032H\275\312\222#=\214\325?=-\014\227\274\247QV\274\3363$<\247:,\275\t\004\200<\003|\314\274\322\233\"\275\327\324\003\274[\323P\275\302,{\274=\034\343;\234\224\n\275\306\002\330\274\177\246\252\274\275C\t=>\265O=r\221\004\275\216\251\017=u\206d\274r\341\023=j\177R\275\0372\n\273lU^<\027F\242<\271\202\354\274JR*=\332m\260<\0377j<V\351/\275\032\323\301;&\331Z=\374a\031\275XHK\275\216\221F\275S\262\277<}k\331\274\213\361 \275\242\250\213\273-\266\333\273}W\r=^\302\037\275\340\370\004<B!9\273\0248\022\275D\023\001\275\277U\024\275\344\313\020<,pK=1\344\030\275\252\024P\275\376\361I\275\352S\226\274\222A\240\274\010H\260\273\237b\376\274[\354F\275F\240P=\360\375\300\273\276/\275\273yj\330\273!H\244\274j\005\001\275B\214\217\273z\236\n\275Doh\274\236\272\022\274\236\271\234\274\370\247Y=\340\2131\275\007\007K=~\332\001;\213\245I\275HK(\273\315\026(\272\365\004\335\274$\354\201\274\262\377\224\274\210\2746\275\262\\\376\274\314`\260<!\204\";\366\234b;\330\216<\2745=Y=\236\361#\272\214\010\201\274\245T <\252\240Y\275D\237\262\274\203\212\242\274\237\256n\274Q1\352<n\232N=pg\374\274\340\242\036\275\354\033\317<\201\332\277\274\250c\237<l~P\275|\247\327;\232\033\205;\344\215\027<og\365;-\372M=S\264Q\274$\365\r=\307\257\024\275u\337\003=Z]\356<\343;U\275@@\272\274\377\306\346\274\372\363\206\273\357\211\361\274\341\345\022=\017g\206\274\"\356\377<\032\333\374<I|\033=\256\365\362\274\3011\034\275L\024B\273T`\332<\\\367\257<\032\2400<^\000\300\274\030\3618\274\237\2327\274\224\024\264<\361\224\267\274O\242\014=\210\035!=D\266h<\223\212\207<\314\257\037\274(\027\031=\323\266\000=\340!\240\274\217\367>=x?5:\245l0=\222e\032:\237V8\274\204H\001=\253i;\274\326\364\313\274`j*\275\210|Z\275V\rV\274e\235\231\274\010\255V\275\314@\220\274\262\206\215\274k\261P<:i\362;\030f7=\242\351\352<\307ty<\345\n\353\274rz\023=\234kS=\\o\201<[\247*\275\2746\353:j\243\375\274\225\265\266\274\265#.=\022|\036\275\0207\251;\325\277\035=*y\250\274\212J\311\272\224\264\270<\347\350\025<\350\332\261\274\001\326\214<\275\302o\274\353\213\t\275a]\177<\337\020\032=\327y>=#\024%\275O*L=v,I=>\215D=pW\017=\013 \362\274c\025\000\275\030\010S<\261\004R\275\330\265\320;\244\232@=\020D\273<\307\030\203\274VP!\275\023\340\020\274\223`,\275\300`\213\273\335*\336<\252\351\016=V:\347\274D\000\036\274f=6\275\331\371\377<7\017\010\275\002-\272\274\030\355%\275U\001\\<\323=\001\275\321\206\204\274-XI=\004\305#\275.\352W\275\nD\244\274\257\336\302\274\263\310\324\273\236\205!;\304\"(=\377&\316\274\303r\236;\242]\222;\\\272\024\275n?\333<\"e =l\266\360<\313\205\320<[\006\237<\2124:\275\026\374\314<6\321\206\274r\335 \275\000\031[\275;\262;\275\004\343\006<,\215U=\253\371Z= CL\273\227\2500=~H\333\273;\232\002=\331\363\265\2742-\2439\223\036\242<\214v9=\340[\036\275\351\320B=\035aF=9\275\366\274\337\343\272<\"\275\266<\214\017\004\275\273\370\006\275\213\227T=\022\371\020\274\016\2719<\210\016\206;,$C=R\247\252<:\362t<\261\304Z\275\304\226\363<\023\204\001\275\350\302\027<A\354\232\274gq\272;B\342\317\274\250w\033\275\235\331\027\2750\357D=\224U\306<\351\213\324\274\006O)\274\345`\226<\357\337\372\274\327\026\'9\330kC=\002\243#=\343\267:\275\030U\213;\245\361\022\275~3\366\274\265xH=8\235J<\343\351\033=>\366\214<\001U\271\274\261v\n\275\261\300e;6\3210=\337P\363<\3503|\274l\233\302\274\034q\374\274\3656Z=\t\332H\274\317\311\217\274\353rj;\035\315\242\274\334\226\245\274:?\t= ,\017\275\000p\000=I\216\355<\356\005\252\274=\303\036<3#\017\275p,\342\273L\266 \272\227\004=\275\223\306\242;\005\215\334<bU\204:\3023]\274s\344\302<Nu\030=g\340\255<n\256X\2757\207/\275\325\245\240;A[O=\262\205\013=b\330\016\274\200\255n<H\376U={\361,\275\004g\260\273\236\\V<\325\317\253\273r\311\201<.\342\207<H\211\026=\320I\362\274l\267X=\035\200\327\274\342\013\201\273#k\177\273N\215E\274\272\230\271\274\270V\004\275\250\027\010=\304\022\304<v\255\262;\315GI\274%V\314<\035P\037:\216<\210<P\3020\274e9<=\177\233\337\274\267\234\217<\201\324\277\274\220c\261\274a\217=\275he\327<(\213&\274\213\374\031=H\252K<Ad-\275\223\3067=AX5<\261\216\376<GT0\275\243\207\303:\340\364\241\273/L,\275/\321\003=\364\023\353\274\002\346A=\017E\010\275\032+\360\274c\320E\275\336\024\036=\225r\212\273\334\326>\275\327=U\275\340F\316\273\036\210D=\023|#\275\002\233\267<\221J\231\271l\255\004<\0232U\275\231NW=\307\035\366\2732e\373\274\2402.<\303N\263<<\3524=2\312?\275\3779\265\274j\2356\273\346\213 \274\262\355\201;\372x5=~\362\n\275\3160D\275\376\315\201\274&v\230\273\021iK<\260\323\377;\365}o;\035\"g\273\004A\016=\261!\"=\212\360\344\274\333\213=\274\017X\005\275\230\203\245<\220\317\023\272\246\004.\275\017\275;=\002qT=\225%\307<z6\351;.V\220<\312\314)<\027\366\210<YN\223\274,Q(\275\177\237\336\274\240\311\301\274HU\003<\262\'\200<\200\347\357<ri\231<(8Y\275M+\004\275\240?1\275!{v\274\275x\367\274X\257T<\177\351\225<2\267Q=I\352\007\275\014\022\013\275\003/\354<7\271:\2750\0350=Z\322\330\274\373\347\214<\250\256F=\021\262+\275>\253\367:\230\000\311<v\323\365<\212\314$\275\213/(=tCI<\315\374\235<cS}<\375w\004\275\000\022p\274\037\306-\275z\300\t=\334!G=*\031\330<\336\006\350\273\356\304\024\275\200\3214<\031\033W<:\332\"=.\244S\275U\333^:\304\223Z=\r\032\303<C\350\001\272\240\206=\274l\306!=H\262d<\241P\206;\340\017\303\274\336\022\034\275\305A\327\273\215\340\014\275&5C=\316\014\245\2743\026\224<\307\346\360\271\036;\361\274.0-=\211)\205<3\355\000=r\262\376<\365@\006=\320<8=om\353\274}xC=]\362R<\375`\245\273j\025Y=\335\227\335\274\203=X=\t` \275\241\"\335<`\275\370<|zO=\375\017\034=\0057c\273-\2425=\004\216\303<Rn\006=\261yO=r\225\223\272\326\331+=\324\225\313:\033\004F\275A\263\r\275+\322\035\275\304\016i\274\366\344\224\274\214a\002=\tD\202\274\246\222\225<\rs\245\274\346I.\275\001l\235\274\311\322\232\272X\354>;\026\354\003\274\274,H=\252\201N=\221~U=\212\346\252\274B\\\321\274(\353\255\274\373\226\361;\241W\336\274\371&\254\274\302\3306=\223tv\274\221\377!=\334]Q=p>9\275\227+\037=\342x-\275(\001H=\262\317\310<\335\310t\274\241\305\366;\350\274{\273\223-\363<\331\213\007\275^J\301\273\274D\320<\266;\031\275l\356\213\274S\377*=7\323\001=esE\2754\2423=\257\206}<\312#\260<\0210\222<!a!=U26\275-}\325\274\210\205\241<\362\2305\275\013\363\331<#\025\300\274,\254\330<\372\214R=\304p\332;\3603\226<>\304X\275\317\364\025=\331\370\375\273\273:\002<7\203\032=Cf\320\274y\036Y=\203\214O\275\274\274O=\256t\302\274O\356\004==.\006\275\231\232\256<\203\033@=W\373-<l\250?\273Tr$\275~$[\275rvJ=0D\314<\006\321$\275\220\220\025\275Y\214\032\274\327\021\n8N\226\223\273\341P\325\274m\364\342\274\020IO<\246\217Q;\235u\333<75\002\275\335\202\312\274\0068\322\274u.V\275\037\332\345\274h\037Y\2759|\025\275d\370\222<\034\325!<\256fx<p\030Z<<K\007\275Q\356\216<\251\340.<\372\254\002=bc;\274\'\203\223;\342\336\251<\236:\264\274\222\014\017\275\006J\013\275\303\022H=\251t|<\335\033\300;\037\317\206<-\357\251<\343\3041<\251v =3?\350\273JX\026=\003s\"\275\320S\205<$U\276<m\275\016\275\224 \016\275AJ\030=\263\312\220:\037\327;\275\321\252Q\275JUN\274\210\034C=\321`0\2755\373\236<Lm\354\273m\342<<\304\252A\275\037\3472=V>\201:qA\211\273\242\355b<\273\266\213\2744\341I\272\315\3534=\354.\037=(\215o<~_\273<\276\340a<]\257\343<_\036\202</rR\275W\n\362<\334VH\275\206\344\017<\323\226!\275\204n\231\274.}\353:.\243\256<\350\026!;\207\033\236\273C-Q=\225\275\301<\265T\214\274\226\023}\274\263\227\023=H\241\'<\317tt<\356L\375<\366{<\275\312&\313\274\347\234\016\275\206Z\305\274>jE=\232T<\275\204\250\014\275\343#F=\000\351\317\274\345I<\275\312\316\033<\230\005T=\224\202.<\014\370q\273\te.=u?\'=&\257\237<.j)=\240\314\370<\276\005\236;*\230\033=\014\305\377\274\304\r\033=\030 j<\373\321\273\274U\206\031\274O\237T=\023q\252;\313\205\227\274\340U\223<\273_\210\274\372]\305;\341\2136\275\221\377\315<*\3217\275\317\346\264\274\263\353P==\0076\275U\304\036\274\0334@=\'\311\346<i\205\004<\213\020\373;\371\225\'\275\200\010\033\275\374iC=\210a\366\273\326\317\351\274\013v\220<ej\035=\220\020*\275P\3778\275\361\335a;I\267\t\274\271\252\355\273\342\201\033\274\2225\023<\254\310\236<qN#=\013\355\246\274\242\262\366\274Z;\t\275w\r\211<A\354E=\007\264\000\273!\323\247<I\007\327\273@C\361<\347\032X=\035\212w:H\000V\275|L\037<\200!*<T\226y<\326\2453=\365\203\274\274W\222\t=Gw\312;JtL=S5\264\273\231\001\211\274\032\005S=)\350\014\275\325t\025\275\203v\002\275\206\3641=\250\267\243<f\3768\275\2123\357\274\r\220U=\204\206\222<\347\207F<\232b\027\275\000lV\275\260\243\326<\205%\001=F\256\000\275(\366\367\274\321\233\006\274=%==\265-\014\275~\245\033\275\316F\221<V\375\355\273\r\036i<c\207M\274\306a?=\216G\r=<\211\020<\004*\261<\275(\031=u\260\361<X5\203;\244\353\266\274\312=>\275\215\200>=\260\376\230<\342m\027=a\302\226\274#7?=N\320\312\27339:=s\370*=\320\2375\275\224\343\265\274Z\360Z\275\330\'\350;\024\0024=\371\272\330<\014\321\021\275tdI\275\343\037F=\224\035O<\3142\246\2742\004D\275I\"@=tq\017\275\304\031\265<\203\024\365\274\306\014\213<o\265Z=\030<$\274r\223\002=\205\326\333<\240?\251<<K\235<\373\010\t=\350\230N\273R\247,\274\200Q}<\315\325K=\n \203\273:\264D\2751\347;\275\021\344\036\275\356\0323=+\311\353<\350E\331<\347\302\004=\203\374\316\274\341\014\303<\263\206\274\274\360\307]\274\332\312\251<Kr =\036D\223<\2304\334;}Y\230\274\317\246v<\274\332\373<\227\210&\275(0\024\2730\361X\275b\235R\274\017*\350\274l\006\340\272c\267K\274\013n\023\274A\256\360<\007X\333;r\363R\275w8\237<\032yD<\245\251\374\274\370\253\354<\3439Z=\240\232\035=\261\221Z=\271\277\202\274\022\305\366\274\023n<=v\246\266\274\211\177<\274\247\312\245;\233z\002=\227\353\273<^\356/<\347j\023<\362\213-\274\202\377\353<4b\003<\202)$=\224WY=\260b\250<\022m\003\274\310\265\007\275e!\265\274\321\351\003\275%\207\032=\330\375\016=\351\325?\273\017G\274<1\263\235\272!nW=\254\016<=\232\351I\275\202\372M<\035\t\315\274\355\005\247\274Y\010\254\274%\3307=\033\0055;\227;\211\272\217\372B\275\037\362\261\274\227\000;\275\275Z5\275\300\212\311\274`x\366\274x\311\327<\210\005_\274-;2=\240 \256<\3128\325\274>\024\310\273Z6B=\234\371Q\275\231\215\037\272\325\347\026=d\247\036=\034\300\221\274\304rX=\355\r\304<\331\344;=\003 Y\275\026Q\323<\365\020\027\275{NF\275#\332R<\330\036\210;\226\032T=\214\030\276<\352%)=\031\016\244\274/\211\'\275|c\207\274\376\320\237<\377\266{<\247\343\312<hX\357\274\205+*\275\3727\352\274\212\002\352<\356AH<\236\023\000<~9$<\344,\013\274\022\204\304\273WC\006=\302\302S\275\t\376a\274\217\n\016=\340-\372<\331q\265;\t\204\001=s0\247\274()\302\274B\277\314<hK\206<P4\232\274<\344\t=ZQl;m\333S\275\023\204\224;\263\236\365<*X\025\275}\027C\275\341\204.\275&\302Z\275\320pQ\275%\210\366<\271UU=h\342\336\274%sY=;\310/\275j\030\307\274\266\326\201\274)\312O\274\033(h\273j\362r<I2+=\257\300\n\275\271\303l<\010&2=TP3\2754\022\004=YF\236\274\370\253L\273\022s\272\272\306\024\032\275\3521<\273\224\251J=g\270O<\201\215J\275\222\013S\275\010(%=`FQ=\325;2\274%>\010=\315\277\251<\017V\035\275>$A=\325\314\212\274M\005\232\273?\242\333\273\313Z\315\2746\nD=#dJ\275\202\313<\274\364\243\177\274\177Y\002=\314U#;\302A\373\274i\242U=\336\247\'=/^\315\2741\314\307\274J\364\000\275E|\t<w\231\347:\372\014-=\336\267\027=GbW\274La\020\275\251\005\262\274\340\020P\275\307\3437=\375\006S<9H\237<\016\036\262<?W\345\273\323\215\324;#\333\225\274\337j\341\274d \013\274\250\016\330\273y4\007\275\261\3033=\372\021\212<,\345\217<\373\244\207\274\335\265\327<\206\247\204;\354\233`\274s\306#\274\326e\367;\023,\023<eB+\275j\324\264\274$T;=\342q\320\274p\300X=\253\372B=\354\321\267\274\325\r\005=\352\302\302<>\347\227<\322\276\253\273y\032s\274G\212\344\274\201\303\035\275\272\347M=\373\336\005=:\314\020\275g\312\r\275\3753,=\225\035\n=;\211\275<\344\227&\2745\361\035=:\256\025=\013\266\310\274\006B.\274l><=\372%b\274\231\227\036\274\314\202U\271\317\252\027=:UV\275\233k\317\274b\217\265\274\264\006\277\272\25217=\002\324O=Z\271S=w\214e\274,<\362<\326s\037=\314_\374\274n\345\331\274\250\256\201<\336\233S\274\2367Q<B\273\n\275E\335=\275\270\374P<\025\332\336;R&+=\363\2467\275\3755\334;iD%\275E \246<\310\311:\275[\027#\275\226\225\'\275\202\213\207<|\253Z\275\230\240R=G\261\376;\246|\330<>l\323\273\315\320\037<1\037\000\275\273|\360<\343\377\"=m\377\337<3\336A=\200}:\275\326\225\010\274\213/B<oY\007\274\025D\370<%\212\207;\240(6\274\034\030\200\272F$\n=\017\362\251;/>\261;\266\024\026\275\032+\021=\252\364Z\275\272\370{\274\202s8\274\267\205\021=\202\250\025=;\272\230<\360]I=#~\375\274\2067\345<+%G\275\267\321r;~y\030<{\316{\266,\225\026=PF\316\274V\211f<\004\225\227\274A#\037=\330t\032\275\370\315\372<\332\\\250\273\t\2133=\266\261#<\317\241t\2744\n\351\274F\037\r\274\026\241\372<]_\344<\335\037J\274q\250\261<\331_/\275k8\327\274Z\363C=e\3066=k\247.\273\201\267E=\223\327B\275X\271\014\275\000\303\332<\263m$\275\326;%\2744\265I=\002\255\207<g\362\221<Q\035[=4\200+\273\020\232N=\224\335\335\273\323-L\275\215@\2059\2211\330<\237\346\235\273\014\305&\273\241\005)\275\346\220Q=gx\020=\334\322\273<\033J\366\274_+\007\274]J\335\274\322m\202\274\232\332\007\275\010\246%\275a\376\024=j-\335;\237\017Q=\334\351\r\275\022A\213<8\034\265\273\357\354\035\273\270g\031\274\014\262\020\274\036\320F=\036\2051\275\253:\213<\252/\270\274\316\311\215<=\2439=\310\220\363\274\277\rS;?t\004<\r\375\036\275_\274\036\274\031A9\273T\266\031=\343\325m\274\n3\021=\013 \n\275\3075\265<\r\306\236<\357\2632\275\311\231\237\274\345Q\013<6\355/\275\n\255\002\275j\251\272\274\243\252z<\225!\311\274S\301\262<\261\3443<\030\250\024\274\336\004O=\030=\n\275f\212\253\272\333\033\204\274\004\311\204;\271d\n\275f\000G\274e\375\255<*\275+=\021\312\332\274s\320\031=\373\376\306\274\272\302A=\354\343W\275\316\317\363<\356\305\320<\324\240\355<\2712\t\275\342_\266\273Ps\036=\264\263\327\274q^C\272\013\n\017<6\264\272;\324\036\216\2743LB=V\331\"=\372e:\275\346\206M\275<\030\026\275J\301\003\273\206g\270\274+*\261\274,I+\274\"\344d\274\301-\026\275$\336@\275\002\251j\2746\3051=<\276\360<\305\215\220\274\016\2619\275x\365\033=\233\3238<\026rO<\306%/<p1\010=\223>,=\356I\020=\027\364\331\272\257\346\264;r\221U\275\370\265\340;\003\261\013\275\363\377\026=k\004\236<f@!\2748\2212\275\232\203\014<vw\255<\305\240\376<\037\332I=\345\316W\275P5\361<B\312\031\275\210\322\004\275\270\326\006\275\263\252\350\274\374\006L=T\255\271\274\3271\366\274\314<\236<M\225\024=\256\360A=\332\246\314<\357\272\220;*d\372<\376\360\313\274g\375\267<\351\352A\274z\246\350\274\013W\254\274\377\200\363\274\221\324$<s\030.\274:\210/\275\312Z\277\273[7S\274\007X\200\273;\017\341;-\n\037=?N\"=6#\361\274\256\314S\275\231\2740\275\242/A=\306\352!\275\215M\362;\316g\016\275\262\231\215\274(\177<\275\021\304\t\2759\346\230;u\264:\273\366\355\257\274\201\024\024\275\320\346(8\334\242\017=r\375\330\273\345\263\005\275\261\354\375<\356\207{\2741\373\261;>\264\177\273_\210\014\274X\333\003\275\026\035;\274\240Tx\2740x\201<\327-\001\274S\2624\272F^\333<\371\020m<\252\026:\275\216\216|<\347(\003\275\2506\235<p4\360<s\205\021\275\307x\224\274^j\203<t]Z\275\232g\007\273t\271\340<\341\2039\275\340\344 =\215\333.\275\344\3573=MGE\274;\311\220\273E3\217<\260\357\001\275\366&3=\3678\032=\251VW<\371R\016\275Y\255\327<\006\375\215;\246\315W\274Q\030X\275h\361\250<yF\032\275\271\220;=9p>\275,}\327\274\2540\\<\033\356\321<\235\354\023:\256\254$\274\00629=\341\3324=\263\3150\275\254`\341\274\216S\233\274\377\013\032=N\232!\273\231\203\205<_\233\016\275i\003O=,K\302\273\370\3600=\346\360\177:\262|?\275\301{\277<\304\247\016\275\315\305\265<\213d\005<\"\037%\274\213tH\275\265\231\377\274Mz\014=z}\007=1\336\314\274\355B\004<}\375\007\275\256*=\275k\202M\275\260\005u<i\334R\275\214\357\020=\251\313\002\275\237]\033=r\226R=Ii\267<ag\202<\210\267$=\2724\n\275\376\246Z=cb\220<f\306\232\274\234 \010\275}\250T\275\244?\374\274\024\202I\273\324J\203<\353\307{<&\217B=c\001W=\276|M\275B\355Q\275\256N\364\274y\202\007\2752\250\221;=\262\360\273\243g\r\274\270\223\235<\261\250\322\272qZO=u/\"\275\304\200-=7\212\032=qPI=h\363I\275O<,\274\3313\000\275Uk0=\016\324\341<\263\213\036=\362\031k<\244wI\275\023\2768\275\021Q\264\274.5\364;\240\200\003=\320\374\353<\300&V\275]eW70\230e<\007\327,=\031\314\017\275\226C\022\275\204\357\031=\013+\334<u3&\275\257Zv\274\005\365\216<<[\023\275\243\234\010\275f&\206\272\220\245\240<\035\377\335\274\"\3641</k\024\273\2208\027=/\256\014\275\216\234\245\273\344i\212<\261\222N<\n\342\246\274\220\010\037=\362o\275\274\375;3\275vi\027=\3678\266<\252%T<?\305\275\273\276\013\377\274k\337\254<\276\021\337<\332\034D\275\006\022\273<\225\274\234<F\212\010=U\024[\275#D\002=\016\240G\275\013?6\273\344Q\312;4\351\352<\230=\263\274)Q\245\274\253-0=)x\247;SJ\n\275\303\242\272\274\017N\303<\003\nN=\224\256\234<\t\344\325<\270S\355<\317\3517=L\367\007=\262\320\033=\244\334\024\275\207\274\331<\201\373*\275\333k\020\275\361h\267\273\262\307\204\274\364&\037=j\010/\275K,E=\272\335\231\274g\006\212\274\001\242A\275\376\315>=\000\201\034=-\236\364;)\212\t=\3053J\275H\330\256\272y\017)=zx\035\274$i\212\274\331\036\201<\236\300\025\274\312&\023=\201\210X=\307\350\357<8\304\363\273\014WP<v\256}\274\310\326\005=\277\\\010\27571\215\272\375a$=[\016#\275<\301Y\274\021C\330<\222\256\214\274#\000\227\273\370\251\203<4\261Z=\"\344\263<\357\315\257\274M\032\237\274\r\221\031=/\224\337\274\225\273\334<\222\351\231<u\345\007\275\254\022\031=\345i\351\273\301go<\351\341\t\275\2426K\275\304\345\233<\355\026\204\274n\261\306\274w\267 \275j\225\252<\365*\2668P\001\016=\023L,=<\274\244;^\257\232<\342L\376<oVM=\304N2\275\026x0<,\344\214\274\220<\326<\236\355)\275\235\271V\275\332\3263\275\031\010!;y\365N=k\271\374<\336\264\356;\000\353\333\274\004D=\275\264\026#\275\206P\217<$\242\354<-\342L=Pb;=.{%<U\037\316;s}\370\273\276\211\005\275\357\017\207\274\0226\000=\225\375\r\274\266\237:<\3376\232;\271\332<\275\'\243\245\273\321\326\226\274S\033\242\274\305\274\354\274x\266\027=\253U\273\274\220\037D=!`\261\273\275r0=\214\026\020\272\306Z\217\274\201\360\002\2753\363\002=+\\<;M\327\376;\357\230Z\275R\n\315\274F\247\224:Fs\t\275\252\355\347\274H\206&\275\256\325\225<\255Ir\273\211!\020=z\212#\275\215\377-=\006\341\214<\363\233\005\275\200Uj\274\250xC=\026\035\363\274\375a\355\274\361\316\034=g\251V=\302\000\234\273-\313\310<\000\365\236<\371\033>\275c\256\331<\217\314\233<Z\r=\274sy\321\274v\314\326<\246p\003=S\237\263\274\363\253\031\275_\234S\275\232\205\304\2749p\220\274dH\027<\n\352]\274\203\324V\275\312\216d8\310\205\376<\240\323.=\243g\"<\370\222\226\27407\007\275#a\366\274\241\246(\275\277\373\032=\254Z\364<\241\356+\275\352\374[<\345,#\273z\242G<<\032F\275\301\350\n\275\317\226 \274\321o\217<\240\233g\274\320\023\001;\237\2128=\022\303\372\274\255\262*\275\321{\362<\275\207D\274\233>\000=\322G\271<\365\306m<\321!k<\263jB\273\303\251\005=\306\252|;e\377\222\273C\237\n<\375\2552<\337\301\177<\347\256\306<\024\226\030\275vz$\275f\275Z=\331\320\336\274%\276\030<f\370\316;4\346\260\274<\007\310<\2172\324\274\341\177\267<\240\303\324\274b\252\236\274x|\357\274\214\310\243\274\250\r\227<\026&\256\274\240\243\223\270P`\272<z\013(\275B\347F=8\271\006<!PB\275(=7\275&\310\213\274\321\303\004\275\2412S=\016\007\014<\220#\251:]q\311\273\355h\310<\264\223\201<\307\340\025=\000Ua\273\230\303\005=!\376\374\274\024S\023=i/\264\274D\202x\274\212N\020=\327\274$=\317\205b<26\244\274\265\214@=\25042<)\215\002=\367\337Z\275|\030n\274\200t\330<\333S\022<\250\022\335\274,&<\275TMJ=\220\246\n<\004\\\033\275(E\032=4!\267<\370VN\275\341|\373<v\231\222\272,O.\275\016H\217\274\332\013\022=\233\277L\275\3020\243<\242B\207\274\006n\307:\300\220\316<:\352\034\275\010\303U=B\213\261\274\321\207\235;\372\323\226\274\230\240\036=\314\032+=\233X\227\274\324\313\\\273\216UC;\025\201\005\275g\251\024=;b\222\271o\340j<x\3339\274m\231[\274\324O\337<\023\tV\274\330N\034\275\310\003P=\317\037\241\274\207\222F\274\330\200\026=\264F\201<~\004w\274#\265\252\274YW?\274\222\277{\273,\202\327<\351\r\352;\262\253\354<]:\"\2754\303S\274P\331\003\275f\337\335\2735G\246<\362\2045=\353E\351<\222\367\322<(\265\004=\026tZ\275\007\204/\275\234\261\246<\344\333\030=\276\3471\2752\023B=\353H\241<\370:5\274}m;=\335\252+=\261\364\020\2750\234\005\275\352mE=\371\223\023\275\254\234\200<\247\333c<\214\331a<\026`\330\273\220_\006=\244\325K=\006\264\372<o\2623\274\317\004\261<Hf\223\274\010\275\'\274\236T\032\275Y\325\261\273\367p\007\275b\2176\274\336\275$\275;\361\210\274\2241\334\274\000\272<\275AK*\275\234M =)\216G\2753\035X=\3721;\275\301\032\336<\213C\230<\027\366\311<.\256\n\275\036\032\254<\213!\034\275}\027\260:S\033\264<l\3402=[\3704<\263\005\371\274\325\007Y\275\357\373/\275Q\301\3238\020\245O=\364\025x;c\346O<\300\2236\275\233i\002<\320\006\'\275\315<\333\273\227\232\223\274\374\363\372\274\332\3421\2750\2531<\312\360L<l\0336<>Q\223\273\335[O\275&\024?=ZM\273\274\265\216\264;}`\302\273\337\265\266\274r\024G\275\206\303M\2756a7\275\337\031\333\274\236\227\321<.\376\'\275&<\003=\027\033\002=x\203\254\274\350\177B\2751\034\276\274\276_\333\272\235\272L\274n\323\010\275^\345\234<\255\353-\275\367z1\275j\260\037=\312\341Z<%Qh\273\262\n\276\274\0170:\274\247\367\017=p\362\232;\370\004\221\274\221l\336\273\035\332\262;\316\375\006=\013\272:=J<k\273W\002\351;\022\355y;b43=Qf\374<;\335\212\274z\023\260\274*3\201\274\275N\320\273\325\216h<\345c\221\274_{E</\224\355\274\321\'z\273\022\320\014\275u\322E=13U\275:\337\020\275\210\301\277<Q\3659=n\246\360<\377\273\211<\275L\367\274\323T\344\274\276{\276\273\353(\220\272\037289\214\333\010\275s\t\004=\265\346*\275\334\357(=\036i\256;\344\n\024\275d\231!=\211\034W\274\3337K<x1f\274\245\240\336\274P\305C<\255\360F=\354\036&=%\002\226\274\362\'\273;\301\233\021\275\026\347\223\274\312\364\233<{Q\206\272,z\013\275\320\255\006=\017p\253<\355\372\225\274\335A\215\274>\250$\275\334T,=\025\033\257\274\341\201@\275\317\365\244;\277n\n=\331\024\253<{\310A<\341\207;\274t\322\304<\244\337:\275Cz\016=\020\336\036<\230\030\315\273G\326:=\212\022==\002\352\361\274\3055<<\324\357\320<\034\322\323\270\344A\346<\271\350\026=R^\302\273}\305&<\264\221Z<\220\212U\275)\002\\\274\205\327\277\274T\316\3269\215X\325\2743\341\227\274zC\371<4\301D\274>DS<S\206!=0(\354;9|\245<\235\017\326<B\032\266\274B\003\014\275\26155=\017?+\275\033\nX\274\255\312\021\275\220\247W=\317\n\266\274^2\'\275\315?\326<\311>B=8H\007\275\313\325$\274\252\2558\275/\263U=\243\320\374;\350\376A=\230\254\267<|\267Q<E\205\'\275c\352\225\274\033\'w\2744C\207\271\365\302?\275c\365[9\340\273\'=\257\335$\275B/\005\274\263\006\302<\307\014I=\347\334\356<\030\205\005\275\020\256|<\305\212\276\274Y\364\374:X\n\'=My\361\274\211\025Q\275\0046$\275\342\034\365<\227W#\275\005\001\261<hY\025\275\374\243\256<<\341\024\275\'\214\330<\010\315\033=@\220\213<\255=\271<\371\366\271<\347wH:\270\371#\275\216\320T\275\313z\013=sb\"=\374\361\314\274\2022\223;\301>N=\367\r\304\274I0(=\246.\027\275\246^\206<{\333\034\275\275\004g<bC\251<\014oL=\253tu;\221\\\004<\206N\002=A\245\271\274\347\244\215\273V]\325\274\256\344\277;?\346\016\275\253\235\263\272\216\316\037=S\371M=\032\247\223\272xn\317:U\347)=\201\004\306<9\374\264\274\217\241*\274\251\274\213\274\322\357\213\274\226\211W=\215\034\001=\"\274\256\271\315\201O\275\342\373\014\275\030\266 <W\002#\274\316\263\021\275\250\027%\275\211\325\272<\332\213A=\303v\377<\324\306\370<\230\264\341<\234\334\201\274\244\3700\275\177|\327<\374\244\246<\36199<\276\313\350<p\020\264<e\214\3758\3219\220;\355\264\245<\nf\376:I\210\261\274d\360d<\274\252\036\275R\235\006\274]\010\232\274\007\205|\274\234\373\340<\327\312V\275\302\366\013=\2155z\274\247>=\274r$\274<\222\215\257\274\006\327V\2748\271\304\274[\233\006\275\213\252A\274\257\264M\275\335C \275T\252\032\274\272\304\010\275\'2\231\274\027\3206=\323\375\023=\274\3426\275\202\007==<Q2\275i\303G\274q\375\037=\221jM\275\035b\021=\276\227\211<\232\310\013\275\031\353\006<\304\3434=hY6\275\322Z%=\006\273\247<\277g\256\273\372\031\017;T\366\250:2>\373<,\233\034\275\006\367\252<v\223\014=5J5\2758\351\246\274\313\237\335<\036\237V\274\031\231\367<\003\036\363;D\365\240\274P;T\275\211Q\r<\353\310\201;\231u\273\273\336_\006=\350\244z\274\231\270>\275\260\362\035\272rI\376\274\336\006 \273\311q\237;|\331\307\274\252\025\344\273\t\235\265<bgF\275s\026Z\275\351|\376\272\357\342\276\273\"\"g<g\204#=\216\235\231;\016\347\240<-\034]<\303\3419=qO\230<\261\273\t\275_\354\227<\243\203O=%\221\216<\017\255C\275\266=p<b>\024\275\220\236\334<\325\371Y;\020Iz\274v\025\037=\270C\"=\225\253\026=G\241.\275\265\2560\275\232\276?\275q\240\244\273\247\322\212<9\373\305\273\254\302M=\221\232\026;\234L\023=\215\r\327\274\350\252p\274\273\026\255</d$\275W4\'\274\370-\244\274\355\322\007:\202\313\313\274[d\010\275\317%8=:\322\017;,\201\035\273\314f;\275l2(<U\372\275<\334\0165=\342\020\254\273\254\276-=\333\277\375<\365\320i\274\313MW=\031\013\023\275\305P\\;\315\3517=\\\353\364\274\005\214\320\274\324(\213;\025\242\356<\310\363\002;\3016=\275f\034\327\273s7U=\276\354\217\274\272\251.<\257f=<H\243\356\274\020o\223\273M=\373\274\232\341M\275iK&<\000B\312\274\317\254\016=A\343\007\275,S@=\354>\026\275\221\310\233<\225\006\320\274\360M\307\273\020A\341<m\316*\275\205W(\274!*\033=\263\333O=\3656\357<\251\353M\275:\006\354\274\237\005\357;\263s(=\000\263\260\274\351$0<\231\004\344<\274\3307\274\204a\025=L\211\037\275~$@=I\024\006:WC\342<\352\311\242;\307\332\022\275\207\004\276\274wd1=\"\372\200<PX\251\274\257]\275<R\003I\274\322\331W\275\335\312\027\275\020\356\002=<AM\275&4\035=V\316M\273d\365P\275\254C\353\273\372S,\275\022\306\335\274\356\031c<iU\265;\341\002\303<=G>\275&\2214\275IG\350\274\234\002\210\274\277\315\363<\304\037\205\274\300\337\364\274\277>\372\273\234\235\306:z\337\362\273J\022\205\274*L\246<Gj\2509\337\252\244\274p\321\010=L\344\035=\277\002\025\274\\dI=x[\363\274L\033J\275\022\377\340\273\343\264\037=\301S3;\313y\023\275\255;\024<{\244%\275\206^\216\273\243\341\265\274qP\277\274\r\273I=\001\240\220<~\"6\274\227\004P\275$]\232\274\360\232*=\332\241%=\350p\216\274\032\206\231;\177-\323<\003/\254<\277\272.\273\347\247\257\274\320\010X\275Q2)<\224L==\322dO\275^\345*\275\337\376\365\270\312\310&\275\2344l\273\213\2316=\217\312\267<~6)\275\200\'\367<\237\237\360<%}K\275v\267\236<WS\330\271\031\036\224\274\252Y\247<<q\310;\364)\020\275\347\224\307\274\367\364V\275{\032\202\274\034\217\243\274\336l\247;\367wB\275\023\267S=\233\3002\275\211&D\275\345pt:\366\014\n\275\333\374)=\272\203\037\274\204\003\325\273\033\'3;\331\005\271<+\363\352:\022w\014=7+\363\273\202\357A\271\340\\\037\275r\036$\275\242\336#=\005\037v\274\3554=\273\252\371~\274\325\016K\275H\233s\273w\262\027\275\204ht;\030\232$\275\033\2417\275\336\315\232<\312\004\024=\301u<=\263\\\242<zO\316<n\321\007<\325y\022\275\030\253&=\nD\005=\201\2759\275*\355\317<\222K$=\310\376\217\273D\223\037=\353\275\034\275\353@\237\274\341\026\214\274sg\304\274\036\235\305\274U6:\274\223\315\206<\3072\031\275\t\340.=\356\243,\275FU\031\275\377b7\275\351\351\t=b\023,\273U\356u\274\252gF\275\014\237G=I\304-=n\357\301\273\362D\255\274\3419N\275\302\362\240<\234r*\275\221V\'\273\025SF\275\304\330\304<\346\275G\275;Y)\274e\262\350\274\r\373\271\274\314\330Z=\205\3606\275\314\254Q\275\006\262?=Y\006Q\274LM\356<\017a\020\275\242\222\351\274\275\254\260\272\307\276\313\2746e\003=y\236\030\275\326\200?<\024H\305<\373r\265;\202\366:\274\375\251t\274\362\371\344;\354U\241;\"\302\200<\212\374M<\250\372\267<\322(\215<\200\n\016=\005,E<\230$\260;\020\321.=;\305\037=\200(c\273\362\250\307:\333\321\016=\346\376\322\274\026A2=o\371$=\361)\322\273O\206\316\274s\310\256;O6G\275\370\270/\274 \332\t\274\253\035\236:\253\035U\275L\006C\275\357\250\251\273@\201\303<\031\254H\275A\377<=\257\020;=t1y\274\341\263\330<\227\355)\275\236A+<\231\317n;\371\271>=\224\t\262<\207\247\355<O\2735\275Q\335\362<q4\022=\320\n<\275\'|L\275\347nB=\231\361\033=ym\023\2758<\020\274\n\301@=c\371\031=E\262H\271\006\000F\275(\244\243<7\326\267\273v|\331<\250=\314<\241\026E\274\010\276\342\274*:T<\244r\362\273\324\266@\275~\266U=\327\0243\275\220\311\254;\325%L\274`\220-\275>\0076=u!\373\274c\267G=\332\220a\27480o\274\341\031\263<\341\215\327\2725\275\202\274\202\025\263;D\204\n\275\257\232\303<\214\333\003\275N\222\'\275\216\212\t\275yd=\275P\214\215\2743f\004=+\375;=\330&\361;\302\351\321\274(oD\275\300`E<}g\005;\003\305\316\273\001\247W=\\\255\372\274\331\264\034=\210\257\023=\333X\323;.\006\004\275G\007\242\274i<<=\273 \035\274\3737c<(\367\367:\032\265\311\273\317\353\232:\005\363-\274\002\252\344\27427b<\342\324\000\275\345\022O=\357\231S\275\001\220\002\275r\361:<\376\316\315\273+\362\203\274\377a2\275\332\2123<l\022\025\271L\235S=\226\362\240\274\320\232\004;\376\364\032=\230\013H<[\265\367\274\247\232X=\333^s\274c\227\304\274NC\266\274$\000\372<\212\017\316;\234\265\006=\227\240H\274\374\343\033\275\360\300\036=\351\246\271;\024\2637=\014}\013\275\023_Q\275\326\216K\275\021HH\275\241\312\000<\007P\000\275\332\354&<\374K\r\275\014\273?=+\211\246\274\222)\000\274\016\035\363\274\233\212\201<\341\3470=\374\330\037<i\343\332<&C\306\273\245\254\002=M\266\032=\262\205\024=\241-*=\260\333B\275>\335\253\273\324w5=\375X\323\274\266V\306\274*\te9>0\332\273C\245\211<\021\307\322<\241\223\017\275\320e2\2757\271o<\005NI=\272\273\240\274\251.3\275\244b0\275\272\3509=Z\357O\275\336B9\275XhP\275\245\356\t\275cv\212<\377\344\026\275\222\204\023=\006\313\263\274\261\352Y=\314\315\\\274\242\226\262\274g\234I\2747\363R=\321g\344\2740s\017;\031,A\274\214LS\275Lq\\\274\311_\001\275\001\254D={{r<\306\326*=\335)\254<)j\005<\241\245\020=\351\365w\274\361|\312<F\315\250<!\274\277\273\237\232\255<\000T\307<w\027S\275\241?,\275\270\344\247\274q\0024=W\\\034\274\217\207Z\275\371H\260<_\341;\275\327x4=S\025\007;\030#\357\274J\204+\275#OO=j\200.=\033BR=\367\006\006=\251\255\253<\211B\010\275\266\206$=\241^O\275$\036\331\273;u\024\274\254\325B\275\320`C\274\20279\275\240\264\217\271\004:\357<\221\240\262;\207m\360\274J\2565\274\367\000\333<\365\243\030<\347\206\211<5fD<\'<r<\351PK=Q\273&\2744dX\275{\302\024\274^\200\032\275avU\275h\376$\275{\350?\273L\230>=\257\223S\275\304\322\344<\352=\'\274n^\325<\334\031\301;\2217\204\273X\017\3478h\231O=w\006\004\275\304\370\305\274\224{E=\3377)==\363\336\274\311\'\334<c\001\301<\302C\031\274T\230\304\274H#;=\365a/\275O\026\030\275\366\262\256\273\247\347\316\274\031\331\337<K\376C\274\231\250,=\245\346&=\036\351\346<\215\354V\275Y[\375<\313\026%=uT!\275F\205\253\274*6\231<\371M\211\273\325\3478\275\366}\223<E\037\274<D\000\247\274\220\022}\274\333\336\n=[\276d\274\307\014D\275\000q=<\302\243\034=\260.[\275<&L\275\233\0169=]=1\274r\016\222<\252\266\331<zE\036<\002\344O\275\270\216\003<?m\025=l\334E\274F\350U=[_\004=\241#\010=\020\005\210<\235\237\241\273&\322,=\207\013!\275\213\003\203<\027\203$\275\261\340.<\377(\213<\217~\020\275\203!?;\325\035\020\275\337\034\300\274\365\nS=\221\371\365\274\031/\316\274\255\346J=V\304\307\274u\276\375\274L\330^\274\274\350\013\275n\036<\275$d\375\274\013\341\024=;i\033\274rb\261\273\355\236\010<\252\325\361\274\210\300*=\323\277\264\274\275\275/=\225\0146=\305\211\031=\235g\242<Y3\206;\347YF\275\260\266\267\274\360\002\r\274\262\277?\275pn-=\023\364S\275H\373\036=>\010\361<E\032L\275\003t\002\275\267\236\217\274\322~+\275_\366%=\230fC<\233-\257<f\006\000=\264\272\031=0\277\004=\027\037\274\274#p\335;\030\270\241<y\"`\274\3316\240<\006\370I=I\202\227<C\373\256<BrU=8Km\273\343\036\013\274\266&\3559\n\215?\273=K\371<So\006\2704\235>\275\'\313\025=!\271\024<\253\310D=\033L\210\274<\304\"=\036\216\211\274\016\242\322<t\203\2369\274\261\322\274\3473\222\273N\006\004=\001:\274<\212T\177<\324\004<=\322M.=\013~E\275\373\027Y=\253\343L<\371\033;=G\034Y\274\205\250T<Z\243b\274S\253\001<&\211\262\274\356n\323\274mG\321;(|3=C\016\264<\207E>=\323\211\377\274\rh\313<\313\325\003\274\250\310B=_\363\037=&\177\017\275\210\336\010=\360=h\274Z\335V=\277\275F=\036\335\"=Y`\332\273N8\223<j\354\014\274\023\0068={\006\272\274\023\373D\275N\334U=\331Q\332\273\340k\"\275\004p\233<20\304;\347\252\270\274\272d\017\275\316&\243\274\377_\"\274\211\230\221<X\370\004\275\216\032M=\366\022\022\275\275\030\036=\276\335\365<\222\247%=9Z*\275\240G)=V\206\330\274D?\324\273}\314\022\274\267\253\302\274\021r\234:`\223H=\230\365 \275Y\032\000=>\337\250\274w\2375=\360\231\t=\304\212\205<Y\336L\274j\370\302\274;\2759=c\352\236\274RU\256;B\314\217<\2108\276\274\317\230(=\207I,=\231\330\026\275Y\\\346<\035\371\373;-qr<o\024e<\306\305Y=\222\020,<\243\255X=\004[g\274r\034O\275)\347\303;\t`s\274K\365\210\274\201.\006\274\303\004\307<\"\303\330<\336b\363\274\013B\305\273|\377>\274\235+\033\275\331\345\022=\374,s;\263lJ\275\372\252\007=\365,\030\275\257\202\223<j\003\010=\221(\230\274\233V1\275\0039\017\274\204\300\235<_\215\034=o\302\367\273J\2331\275\305JH\274\211e\035\275\336\356\034\273\305cG\272\177\266\203<\030\006\325<C\376\'\275\2752W=\347\253H\275p\224\276\2741\362\200\273\3633\005=jxQ\275\356\204)\2754\216c\273\037\026\022=\215\2573=\245\337E\274a\033\361\2745d\242<\321\315\017\275\264\235\315<a.i<^MY\274\3444+=\023K\243;\023_\203<2R\033\275\036\177:=\371|\277;\301Y\024\275Qx}<\241\243\332<\213%\024\2740\013(\275\277\255\007\275\004\327n\274\017P\025=]\0136=\367[!=\331#\230<\000\305\001\275\320\336\222\274i\247\363<\024jG\274\232\355\331\274\343\370\302<u\017\027=\0313\303<\0050R\275\006_\246;T!\250<!\253\330<4\2014=\325\317\200<\037K\224<\300\335Y\275\343\2255\275&\321\274<<m\020\274\335\007\'\275/\000\232\273\032\222\207\274\365[A<\352\257\342\274\037 \367\273o\327_<\354v\261<\300\320X\275\363@|<\321\210#=F\020\010\275\177\261\013\274\037\'\000=\227a#=\211));t\345H\275\036\372\313\274Lo\027<\207\3749\275\375\211H\275j\274s<O\357\327\274lo\252\274\377{5=\277\254.=D\"\026\275-\257\234\273\205S]\274<\020(\274\213\221p\274\362\256\020\275Pa2\274of<=\247\266&;! E=0J\277<nRx;\312J<\274\206\2137<\244\371f\273\325\235\314\274\267\345\234<>w\026\275\303eB=\321y\351\274\035<$=)\\\225\274\332\277\361<\0021z\274\226\010E=\021\240 \275\341\032\007\275\0366P\274\223\333\223<2cS=\214\242#\275\230\232@:\251\315\340\274JyI\274*(-=\322\216\304\273\3541\360<\216%^\274\207\026\262\273;\273\211\274\263{8\275\004\323\304<\332jP\275\317\323\241\274$\'\227\272\364\204G=\363\274 =\221\014\016=\224\336\024\274\243\2770\274\336ie\274\304\2406\275\342\341\'\275\221XZ\272\236\305.=\261\2463=^\375\016=`\005.\274\257\314%=\306\003\006\275b\255\260\274u?@=*\034\335\274\346\261\270\273\254\253\235\274G\343\222<\313\247\366\273\275\241\031=\235\023\247;:w\032\275\353\337c\274e\306\024=\223\336\020\275\"\327=\273R\2743\274\212\203\355\274\211\244.\275\\\223;=1.\007\275\350\357\025\273\274\202 <\347P/\274\303\177\353<\317\3221=\t\300\366<\364\207\270\274~5\030=\261\005\007=(,\334\272J\024&=:=$=6\272\023\273\340e\323\273\255\353*=3\272\r<\001\316\226:X\333\022\275a\257\025\275i\247\356\274,\337\030\275\"|H\275\014\033\331\274\"\232S<\006\007,\275\014\225g\272i\216\206<WE\017\274h\nP=\001\216\031=\r\013M=\'\371\337\274w\365\253<\365\370\304\274\350\375\275<\316Q\253<\376\322@;\022\023_\274\246\352\014\275D\350P\275\366\363B\275h]J=\003\265\026=\001\024\303\274\020\241\317\274ss\006=w\260\323<{\262@\273\303\322\224<\346\336\300\274\311\304\327<\003\331&\275l\203\266\274#\230\016=\200\210\013=\3513\331\273\217\017\364\274i\323B<\240\013\261\273\3370\215;3\235\003\272\237)w<\004h\211<\200\203\335<rp\366\2745\2012\275\375\211V\273\273v\354;F\265\246;\\\030A;:\2270<O!K=x\317O\275\201[\315\274\216\251\301<^\276%=\345\033F;\313\334@=\371~\305\2728\212N<\374\021\027\274\"\006\331\274\223\321\230\274<Z><GH\002<\221\356\322<\300\363);j \263<)\016\240<n\3262=\017\301\026\275\254\n\326\274>\360X=\203\037\336;\351iK\274\026\250\200<~\343U\275\310d6\275\317H\207<i\350\235;\200\231\263\273\352\345\366;\003E&=\305\035;\273\340\261\353\274\264-\013:z@\013=\'xJ\275\336\330\013=\305\002\277\274\217B\023\274A\024\254<r0\024\274\013+/=\014\321\035<kE\031=\233\200\245\274\noL\275\316\223\002\275\247\247>=||\332\273\255\266\334\273\025\337N=@t\313<\346E\227\274=TP\275<o!=\322\233F\275\3049\224:\020\377\010\274\217\266N\275\275\"\2419\017}\353<\013)\203<\3245\203\274\235\273\321\274\333\241\360\274\371C\355\273\003\313\'<2,\014\275Je2\275\tY\031=.xB\275\307}\231;\366]\250\273\347TV=p\rW=\021\345\265<\006\314!\275\204\235/\275R\300\277\272,CO=\236\260s\273Y\200\025\275\207\312\206\274\354\006E=\022g\374;\264Cu<\020!S\274\325\303\267\274\212R\034=\031\013\353<X\340Q\275\023l\214\274\357&\266\274\366\2131=!\"F=O\035\373;\262Z@\275\215\0348\275\355`\373<\254\204 \275i\337b\274\217\013B=\375kB\275\225\211\356<\004uZ\275\\B\t=\"\242(=`\222\316\274cu\375;:\344\301<Hx\250\274u\237\217<R\367\321<\243\212\017<(\010\027=\245\302i<\271\355*=\300\3164=\337/\242;%(?=\323y,\275\335|\036=\233\260\207\273Z/)\274\306t1=8pS\274\357iK=\300\347U=\340y\253<g\216\017\275\335\3179\275\321\344V=\035\320\022<{\332\000\275\334\222`<\341\255I=U\371\226<\223^\226\274\321/\212\274B\022\215\274\276\317\320<\376\371\327<\301\272\036\275\276\261\020\274E\267Z<\375\2375\275\306J==\326\254%=\002\337&\275\222\236\225<[\343\357\274\343\367\234\274\210G\212<C\t\372\274\324\217\'\275\314w>\275\233\n1=\301\007\272<R\372\302;Y@#\2751\212L=Y\266;\275\t\317\304<\367|7=\230^\034\275q\225F<\031\260\324\274\\\023\207\274\243\035\370\274\371\220\212\273[)\331\274\244*R\274\010\266Z\275\242\347\023\275#\352\257:)>I<\363\273\033\275\276\304\337<\227D\033\275\320FA<\242\241\333\274\030R\250<\030\273\'<\270\225\r=\237jN<\000X\000\2756@\003=\344\337\006<\243/\031=\347\306\017=\2074@\274\nm\000=y\3121=\213\265\270\274\003\214G<\245Q\200\273\302b\'<5H\036\275\305\031\025=)\264,\272\343yL\275\231\305J\275>?<\275p\277\330\274;\337\273<\357\350B<o\2500<\334\360\327<\035\265!\275\227\233R=\032\365*\272\010\3548=u\325\211<\236\335.\275B\304\343\271\270*G:\363QY\275\r\274Y=,#\256<\203\374\223<\034\231\324;\331,\204<\351\350F=\345\310\022<\203EH\275\000\006\242\273H\346\021=\211\341+<\320\276K\275\206\001O=\355|\335\274\230\205\274\274\375\345.\275\252\317\311\274\356\t\231<\275)E\275\224m\312\274\350\020\251<\010\303:\275\347\000k<\333\366\301\274f\033\225<\3607\t=\327\234\021=wO\031\275J\336\201<\314y\213\274\364\001\354\274\345\034\275\274\007>i<y\375+=\014N\342;|\314(=\003lF\274\273\341\r\275\312\2018\273\322\263\177<E?\034=\002S\025\274\031:9=^\017\014<\266~\233\274c\301\225:A\0135<?e\316\274\246)]\274\341S-<tc\326\274\3710\255<R\251\216;\357[!\275\276w\376:\363\222R=1\017y<\216\207\360<\333\000\013\274;\3239\275\225\324\231\274\246\373\340\274Z\304Z\275\215\004\010\275*\375\034=\0348\035\275\025J!<{\0211=\205\376\366<b-C<\000\304\271<\223X\376<c\351$\275\204\236J\275\254\215\000\275\345|\025\2745V\026\274C\2071\275\003\346\222:\312\344\307;Hj\334\274\231\205\013;8LW\275\323p\244;\021\n\272<\340\004\302<\"o@\272z\211\314:|h\256\274ks\004=D\342$=\347\325\342\2741\010\t=\344\346b\272\020\231\356<k\216Q\274j\316J\272\037\315\341\272Y\232\n=\242\327\320<Kd\034\275\274\326K\275\003\217\206\272i\227\005=i%\222<]\232\016=\310\021\220<\027z\317;f\t\250\274Y\3059\275KP\222;\321\331-\275\257\363\014=t\251\377<\350,\235<\307\351\305<\271\201\017\275\327a\247\274S\301\337\274]\350\257<\337\030\030\274u\341\370\274:\233\305<~\354\323;\236\377X\275\305\277;\275\244\231A\274\220>\312<\356\256\027=\206Z\026\275S\017\226:\r\3656\274#\3174\275\240\226d\272\347\350\022\275\255\007\r\275\013A\025=\375\271\021=lg\034;[\267\335\274s\370\270\2748\313\372\274n\207\317\273\007\006K\275~BP\275\356m_\274R0\353<\37735=\266\210\n\274\332 T=\n\3657\275[\3072\275K\371\221<xA;=\002\001,\275#g\262\2747lM\272O\032\327\274\337\364\023\275\352\2374=\255\240\302\274\317\315\324<\3548\342\273\3511\203\273\215\310\336\274@\tA<\320X\252<\340\331\337<S\323\"<\325\340\326<\334\373\217;\376e\014=\240b\264;b=\235\274\272\326\022<4D\324;\344\334$=x\260\251<\376\006\222<\332\361\226;b\224\007=\216u\027=\250\355\010\274\"*<=\240\314\016=\020/\031\273a\013\253\274\316\311k\274\351\311D\275>\231\227<f@\270\273\272WB\275A\372\003=\340\257T\274\362\010\314\274\363\240\306\273KQV<\025\314~<\331IR=\260\260\315\274\201_\304\274\006\200\r=\337\021Y<\002M\034\275\023\273\013\275\300\351\t=\nY\303\274\035\315\005=\307\354\033<\224\345\024\275\177\362\362\274C5G=\252J:\275\372K\262<\310K\036\275\234\263{;\353y\030=B\202\266\273\246U\242<DY\246\274_7\244\274\234\276\n\275\275\260,\275^\357\330\274\342\364\030=<\261\312;i\3420\275\277;T\275\225\037\t=\245\250V=\243\3206\275\332Cd\274)\231\214\274 ` =\370p\026=3\243\027\275R\332\327\274\037\202\034=\253\342\031=\004\026o\273:\354\231<X\030\037\275\001{O\274\243\354\350\273mL\002:y\037V<\331\232\325\274\214\177\r=\'\262\n\274\007\002/=;P=<\265cI=, \364\272\356Y\365<\317\3457\274\257\375H=\272!\214<.0\n\275\2173H\275\302\223\023\275"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
