node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2070
          }
        }
        tensor_content: "(nL\275\3601\366<\207o\243<bE\376\274\345o\343\274\362\246C=`\376\025\274\317\375\327<\350\000!\275\013\242\006\274\272\372\272\273X8#=\216\032\232:\217>\213\274\244\034\263\274\346Q\004=Q\355\225<\335Y.\275B\022\013\273\006\304\333<A\036\261<i\023\362;u5\265<\342VE<\032\376L=\ti\246\273\000\252R=9\241\234<\254\357[=6\252,<\204\202\004\275)\2221\275!7\362\274]\211D<\277\271`<\007t\322\274v\322\275<\001*&\275\343\364\357\274\354F\007=\255-\267\274>T\247\274Oy\207<\264\265\235<\224F,\275~\207[\275\036/u\2742\212\020=\376.\336\274\204\303\222<\372\251\016=\301\'D<Cq\300\274\033\266\261\274\331%+\274\211@\331\2740\201\274;=\n\035=\325\304\036=S\275\357\271E\233\345<\376\177+=\364\300I=_\200N\275\325Na<\003\2348\2752\n\266<\367\247\002;\234\3424\275o\202\232\273\377\220\206<m\333n\274^\266<=\350$N=X\312\365<r \340\273 m2=\027\310\370;\3318\\\274\254z\n=\255\313\325<]\000\350<I\236\206\274\331\003\n<nU\331<}\342\026=\003\362\375<\344\221+\275\247\033\337<v\265\332\2726C~\274\305g\222;\010\373\324\274\354\377C:\352\036\013\275\000\014E;*0\331<p\256\342\274\2409\000\275x\375\270<\372\024\216<\355\211\037=\365\033\345\274\247\325\"\275\375-\004\275\276VK\274\221\0002\275\307\257\340;f\376\033\274\242\261\214<1\352\263\274w\326L=&\255\002\275\016O?\272\341\\\340<\331\244:<\274\"7=e\344\212\273{}\375;T\377\005\275\232\026\n\275O\224\275\272\275\373=<\276GY=%RF\275}=0=NW?=\006\277%=\266i\026\275\314GH=^\243\030\275\010A\211<\023\207\030=\316\362\373<\343\322O\275Aj\r\275\365/\236<-\234\370<\222\021\025<B~\342\272+kT\275\320\t\374\274\341\372\376\274\353\343\016\275tQ\t=\3445K=9\350\234\274\343%(\275?Y\204<\276\370J=:CG8CK\313\274\362{\035=\306\365Q\275\203\215\016=.T\220<\2445\260<03!<\256\006\013<\312_\375\273\177\204@\275\317\370\211<\262x\337\274FM\005\275\332\220\027\274\240\323(\275k\250\376\274\026\336E\275\200\300==J\227\007\275\266\206\'=\336\234\000\274p\222b<\204a&\274\273\0209\275\221_\236<\367\203g\274\025$\t\275\236\351\021\275\340@\304<\342n\n=\002\326P\2755\322\251\274\302O[\275\372%t\274\230.\376<\261\242\375\273\037\030O\275\2173H\274\276\027\024=\365~\234<o>\363\2740\2431=6\246\226<(\224)=\232h-<\354\036\'\275V\357\025\274\346iM=\230\235\256<Y\303c<\261m\034=\261z\262;D\224%=i\217\004\275H$\276\274\305r\001=\251\246\205\2735M\332\273\243\215\321\274\331\331\370<m?&\275\330\346\240\274\340\rE=\264\260\004\275\365(\276\274\304Y\345<U6[=\277f\257\273\355\207D\275#KP\275?\177?<u\364\000=\204\245\205\274#\237\014\275\020\201t<h\353\350<\017\255?=\177EP=y\367\304\272\356-\202\274\322\374H\275\331\216\223\274\215\360\203:\325\007,\275\231\021D=\242\257/\275J\317N\275\'yI\275\347\363w<x\352\332<\303\373#\2758\312\014=t3M\275\341\365b\273\313N)=\021|<=\205|\321\274\205\tE\275\252</<\314\245\346<\375\250\326\273\375\202\212<~\005\013\275\372>I\275\346\\\374\273~U\"\275)|I\275g\223\027\275\230\326@=}\201E=\302\311\216<\307<\010=IT\257<E\"\244<7RI\27552\331\273\305\030\014=,\2372=\036W*;\025\277\341<\230\376\037\275\2447X\275\251#\305\273\337g\031\275M\356#<\224\232\034;J\376\023\275\352\260\200<\003\337+\275\340\375\211\274\2403R=\232\333l\274y]6=h\2075=\326\3107\271\\uz\273+\263Y=D\357B=\254!\235<\363\037\017\275\236hO=\005o\360\274\271\3012=\255|Y<N!\264<\003\r?<\363\266\021\275\005|\253\274\330\372\035\275\361\007J\275\321\" =f\242P=3eM=\353I\317\274\377\323M\273\235\013\032\275\345\351Q\275\322z\263\274\215Ws<\277\354\216<)\333\253\273W`\223\274y\364\275:b\264\350\274P\266\333\274\341\242\372\274_\341\031\275\312ZV\274\354\347T=\025wO=\035\361L\275\271aR\275\316fH;\240zK\275\231B\307\273\274\340\347<\276\330\324\274`B\225;-\370Z\275\000X\030\274\r\367\345\273\177\006\221<\204\314>\275\341\355)\274\207&\222\274\346K\007\2757^\022\275g\344O=\371=\016\275k\366E=9\335-=\273\230)\275C\002V=m\356Y\275\233\267\207\274\220m\233\274\242\307\014\275C\226\023\275(*\217</?\262\274\260\2764=\202\247$=\377\233\357\274M\316\"\275N\003j\274x\344$\275G\356\305<\004r\240\274\311\265\002=\222\327\351<\337\275\033\2753$/=\305\331,=\361z\361;\240??\275}\345\006\275,c\005\275\257\0218\275#\272\262\274_\250\035<y\216\304<\306\222[=et]<FBU\2759`M\275\341\210\366<\035B\322\274j\377@<N\236\330<{\2132=\031\374\246\272\313t\367;/?\265\274n\222Z\275\352\304\254<\310\300\272\274+[\274\272<\361\264<3Y\003\275\356U\231<\336`\353<s\272)7\275t\024\275\007\210\366\274\010~\255\274\373\023\200<v6\371<h\254\017=\001\200\016=& \302\273\212\225\231\274\313\315\027:\2024\352<\232\"$\275\322\203\017\275EGd;\263\215\\\273\375F\316\274\'\007\324<\370\331\004=\301\234\037=\353\252\032\275>sQ\275m\365\005\275\342\024\177\273\367\225 \274\032\0002\275\324\310(=\371\230-;\232uX\275\346n\264\274N\373\"=\321\375\000\275\350\"\267\274i\302\034=\236\2152=\376\256=\275\370;\037;|\324\226< \335\241<\260\361\221<\264.\244\273^\242;\275ikF\275\372\255\273\274\255?V=@\263.=>\262\n=\337\006#\275D{Z=y\216\036<\344\314\025=\005\310\315\273\240\t\336\274\254`2=\244O\002\274\203\265\371\274\365\255\252<\274[U\275v(-=\324\220\343\274\240T\332:\016\323\207<\331b\023\275/\273\327<\317/,=\204m\001=\373\234L\275\347B\327<\315S\207<#MT\273\240\315\371<Ff\240\274/W%\274\0258\202<\262p\323<\213o\363<\373\224\334<\201\264\275<\000\203\r;\210\311H\274\361\243\333;\207a\315<RtI<D\200\335\274\302DP\275\014\321\357<\017\366\241<a\356T\275<\033x<\005\032\362\2746d\316\2734\3528=w\245P\275*\312\025<\223s\223<\337\264\037\275R[\302<\022f\014\274,\311\251\274\022\272s\274\322\300\016\275\361\357\037<\341~\252\274z\372\261<^\301\025=CB\024=1@\327\273\004\247M=\013gM=\235\303\"=N@N\2750\277t<p\311\304\274N\034A\275~!\245\2749\356\375\274G\250B=0\357\231\274\300e\203\274\rV\312<O\356L=p\350\277\274v\276\210\274@\206\"\275\252\031 \274,\247Z\274\013\330)=%\376\004:\026W\270\274\276\324\336;h\334g<\253k\365\274\262\376\2639\363\2074<g\353\250\274\313\247\021\274d\261\333<]8\347\274\250\251\304<4L\223<\007B5\273\351H\r\275\337?\274\274r\364\013\274T\302\357\274\303\236\000;5\202\n\275 \336\035\275r\034\030\275<\244\372\274\037\311\204\273\201K\333<\026\3339\275\314bl<\204\207\377\274\222\270+\275\273\322\025\275/\026\232\273\365\264/\273$s\"\274qt\026\273\027\352\361\274^\366\301:E\216\373:/\177\314<\307\240=<\007\265\254\274Z\365\312\274\313\270L\274\351\020\365\274s\342\323<\024\223\362;\255\006\225\274G\t\034<1\302\326<F\274;=\346\346!\273\004Q\034\275\r\314\261<\014\233,\275\316g\024=\271\214\034\273\025qL\274\360\3267<:Fl<\036O\271\274\304H\331<\226\356\300<%dK\275\332\377U=\244wB<\200\252u\274\302r9\275\377\3358<\225\262\251<l\377\221\274\177\347l<\200\311=<\'l0=\340\270)<~RS\274[\2650\275\325\014C=\342\210\227<\244O\246<{\231!\275\223\217\342<\212\036[\275!|\033<\272\037\013=\010#\360\274x\314 \275\234\202\002=c\304N<\326\230\257\273\200\270S\274L\357\020=L\316\025:\365\177\251<\303^P=5*[=\210\212K\275WY)=\033l4\273\014\002\036=l)[=\227\257f;DnN\275\303\303)\275\371\271 =\336\236\264\274P^\r\275tN\274<o\226\217\274\214E/=\243i\302<F:\356\274\027\302\232\274\021\314\t<\250\006v\272\321\252P=&hV=\242\\S\275\255\242\337\274\251<\311<\346{\023\274\271(%\273\245\263\317\274\345]6\275\207I\307;\014\332\343\272C\'\365<\303\2373=H\307 =j\225\016\275X\027\321:\252$N=\203\234\2269\002\325\022\275\032\312\201;\262\025U=\326\231\214\272\375\037\007=\035\277\005=w\241\301\272\306\273)\275?\267\023=\203\274\036\275\371\2007\275X9\024=o\361g\274\234,\305<\332\352,\270\025W\213<r\252\025\275\306\017\345\274\325\301\220<X\333(<\254N+\275\355\240\t=d\252\203\274\257=%<\004\2650=\001\340P=#\203\032=!,\221\2746\352\333\274!dT=\201T\n=\223\316\027\275b\352\266<\207\255E\274\252\033\033={\250\371\274\t_%\2758`@\274\223\2718\275(.9=r\230|<6\240\013\2758^\205\273\223\274\245\274\244\276\006\275U:\035\274\021\036\003\275\341\256\n\275#Q?;\013\266%\275\200\014\023=\375\022\344;\235$\004=U^7=hY\027=Tv\354<\357\303\037;\255\234\004=U\204\250\274\203\272\251<\356i|<\334\263\202<\204\n\256<Y\341O\275\026\2708\275\205\235\001<M\005\341<\326\314\016\275I\344\266\274Z\177\037<\225\031\245;\266DC=V\354\244:2N\373\274,\301\005\273\377\003\343;\231\355\366\274\370\204\232:\230\337\027\275V>\217<R4\315\274\310\027\376\274vU3=\303`{\274\356s\261<\230\320B=3x\000=\\\023N\275\"a\347\271h\3328=\213\320*=\364\230\353<\235\177\373;\210\024\321\274\004R#=\213\301A\275\352\272\334<L\305\372\274NY\376<L\236\037=\207c\223\273D\370j<+\352\372;\215\2366=\302\357\002\275\322I\016\275RYL\275\256^\2379\342\335\2309\275G\347\274\274\267\226<\354\\\005\275|I\006=\277\300\r\275\216\024&=\370\220\205<\033\347)=\206\361\331<\254\3126\274\360\340\220<\010\030\235<q\002\261\274a\205\372<9\256\016<\\^N=\305F\003\275\375`\215<0su\271\252\337/\275\226\235_<\023\273\024=j\2212\274\036\231\354<5\212\377:F\366\312<\013\316\003\273PR\222\271\350d\010=\215\325+=\335[\316\274\035\3556\274\343`Y=\035\346.\274&\332\030=\024\001\223\274f\316-=\333\310\273\272]\327\016\275\346\246\026\275\364\020v<O\370-=\332\340,<\240\247H=\203\341M=\354\210+=O\000W=\030\343N\273\276\2439\275_e\007\275B\034\265<be+\274>%\177\274Gk:=\247\323\005=\267\266\010\275\226Nc<\212&\032\275\222yR\274E\214<<\352sp\273\3578\271\274\206\376\034\275!\031\317\273\232\327\247<kP\037\274vF\003=\020\375\233<2s\311\274(\342?=\316\216j<[\224\201\274\353\236\034<\r\243\262\274\320\354\216\274,!\031\275\335\366\317<\337\307M=\275i7\275\276\2729=MI\316<\014\000_\274\250\243\2229a,\031<\241\314\216\274\336!O\274\027y\016=*\"\332<\027\030\340<\371\350\377<\336\267=\275\372\230\007\275\026A\237\274*\242\337<\301^\001=q\t\035\273f\377W=\256#Y=4&(\275\305\234/\275\350\037\246\273|\022\330\274R\023\200\271\300 \361\274~\370\301\273,\021\222\273\374`\007\275%\3140=\321@\203<\231\2723=\266\232\370\274\037\345\020\275\206\376\033=\271\360(=\177\246\356\274xT2\2751\311@\274\366\372,:H\235\244\274\335g\002=2B\025\275\007\304N=\3719@=\327\335\262<\002\225\307<\302\217\013=\215\360-\275\250\230\026=\275\214,=\033\245\031<\007F\332\2749\223\016\275\207\356\'9-\277,=\217\312Z\275+S\021\2756V\357\273\017rY=\312$\237\2745y?\275\240\233\245<\004S\013\275\033f%=\333aH\275\247\0109=\332\2764\274\0149\032\275\032\345]\274\244-\001\274\237\371\004=\375\351\'=\002\013F;z\r\036\275\225\207\r<\352b\022;\226Y\026\275\206\005\372;\214\332\032=O\007\000\274N=N\274\260\336G\273\261\242m\274\271WX=\003\230\353;\035\356%=\373\245\357\274\303\253A=\371\225\356\274g\306w\274\202\205\006\275\201\341\356\273 }\031=2\302P=\323\260\276<s\332B=-\235\215\273\3053$=\353=O=\030\310 \274\310\275\353\273.$1=\265\200Y\273\264N\226<\275\211x<\305\205<\275-\224;\275R\032==\333%\037=x\260;\275\374|\211\274O\021\020;P\377\t\275\243\227}\274\267\313\205;\252\260W=r\030\013\274\330\317\010\273\016mP<t\002O;\021q>=\327\345=\275k\202\345<\244\321$\275\377\250\274<\\\336\264<\325\367R=\305`%\275\316s\n\275\311\314\350<\344\300\261<\371h\235\270Yf)\275\306\177\252<\036\340\013\275X\314\353\273z\354\000\275\312V\004=\370\3360=@d2\275\212m\315<7\004\035=\261\200\033\275xi#=\230\345\261<\214@8=\226}N\275\350P+\275\245\002@=\t\302Q\275\322\307\310\274g9\004\2753\322\031\275a\375\354\273\224\241\251\274\347\017\334<\314\233W\275H\036\345</;\367<\211\300>=`\364\235<\3678\324\274\276p\345<\025O\0258\tk\266\272p\275\r\271\217\021\221<G\370\270;\004}9=n.0\275V\025\271\274\324\316\344\274xO\016<\032\373\303\274\213\263\005\273\262v\213;c\007\333\274\351nK\27521U\274w\373\2719 \2738\275\375\330\n;\3666\363<\252S0\275\004+\205<5L\257\2749\013\002=G\217\036\272\231\327&\275\024v\240\274|W\021\275l\232-\275\\\243I=\3441z\274\313\226U=|k\274\274Z/3\275h5O<4Z\315\274\254\225U=y\340\005\275\005y3=\016R4=oQ:=\000\206\024=\243\211\"\275\022\203\t=\\\306\365;\2757\217;\237=&\274\212\254\357\274|\354\203;#\371\021=#\356-\275\231\320\330<\266\2163\275\235\207(<*vZ\27584\342\273\305\247\332<\224\306\205:v\024\000\275XB\255:\352f7=\334\325\261\274d\306\'<\215\377\373<,\312\003\275\216f\020=y\314T\275\223+=\275\347\022\240<tv\034=\000\340Z\275\246\370z<\037E)\272:T\250\274\237\356S=\231\001O=\234\240\225<\213\001)\275K\343\021=;r\214;\212e\353\274Z\357\025=\345\205\314<\004\254\343\274\337\354\372\274\300\341\"\274x`J=\347I\256\274\275\206\372\274\307W\023<ou\360<\206\345\013\275\003R9\275\251\372\205<\367\324\\\274\027i\223\274Dn\355<1\"\003\275r\032\312\274d\321\t=z\227-<.\265-\274L\315\312<_6f\274n*\"<\332\360\232;I\246\022\275x\321\267\274\024A\204<q\360+<)Z\272\274)\216)\275\311\000Z\275j[2\275\225\332\352\274\302m\315\274eI\301\274}<.=?yO\275\357g\005\275\311\203\275<\220\354H=\2663\331<\264\354\337<\274\354\002;\006\240(\2742\346L\275%\247\314\274\360\007\002<\245e\353<\217c\345;\004\300%=\031\\\214;m\1771\275<\313\270\273\214\342N\275\340\323\n\275\353\226&<5X\247\274\026\352?\275\017cy<\336\353F\275\2771\034\274[\212\005=\003DU=\354v5\275f\034_;Z\241X\275\234\333\214:\265\004/=\366)n\273\203\001\326;\2303\n\275\237\315\351;A\0231\275\2356Y\275B\372\034=\310?\203<\025\323\260<4I\034\275\205\016\251\274\017\213\010=\361u\233<FU2=5\277E\2735\3214=\245[;\275\245|\234<\203p\021\275\223\033S\275\353\305<=3\033\005=~X\331\274\265H<=\273\003\303<Q\375\216\274\321I\350\274xL\025\275\373\371V\275\nh\020\275H\366?:B\363\035<\332\323B\274\312\221\331<\2261\362<3\330\343\274\315\335%\275D\357A:\r\371\322\274\317\244\034=,Qu;\304\3753=\333\221\367\273\177\2304\275\013#\365<-\254\240;\3262\265<\302u(=\n]J\275S\346^<3\367Y=-\nE\275\242\326\327<P\213t\274\277<R\274\261xY=\272\3273\274\202j\243\274\257\234\256<\275\210\027\275\3742X\2748B\316\274-B`\272\216P\000=\2452L=M:+\275\235\026,<%*\031\275\240\352\375\274\216IE\275W\211\014=\307~\024\275\305\377y;\340[\200\274\\d\036=\256\374\210\274j\211\355<\003\010L<{\'\253<\344\337\r\275\"\272\005<\344\200\t=\300p\007=\346| \275\251\3028=vY#\275\375N\020\275\002^\357\274\234c^\274\340Z\014=q\007\023\275\314\343P\275!B\245<\n\215\260<\246\214\243\274\255GH\275\275\254\272<\247}\351</u\014<\313\323\262;\314\342P=UJ<\275hO\n=\034\335\025\275\270\322M\274\363\244\"<\247}\363<\241GU=\247EX\275y\332:=ayW=\237,2\275\253mz<\224\256\336<\346\202\203<\335\224\265\274\371e\027\275\205\375\300\274\346s\204;\"\2555<0~P\275\222\331Z=\2569\367<\307m\356\274\004:/\275y\224\205<\221\331F=\217\324\201<r\232q\274\314\323z\274\n\001\341\273\265,\034=7\230\341<H\001\t\274f\3630\275mO\251\274\242V\003<D|-\275\225\343\362<\0045\221\274\2149o\274\267\221o<\266\326A\275\275C1:\210\242W=\014.\320<\312?\241<\351k\014\274\231\300\262<\027@\261\274eA\016\275IH\000\272\364\226\336\274^\240,\275~\353\203<\241(\310\274\272\204\r=\354\305(=\006q\337\274>\200+=?U\343<\316_\254<6h\356<\001v\034\275\036\243\033\2755\351S\275\262\262X\275\300\245\270<\267\017=\275\336\313\323\274\037\3767\275NL\221\274\007\277\036\2757\027\253<\0163\'\275\331qK\274\307\345\r\275mP\013\274g\340\006<\3261\362<BR\305\274\003\311W\275\265\377\230<F\260\t=|I\216\274\356S&\275\336\253*<\207\352.=\310\356\021\275\005/\264\274:\311C\275C-\005=H\261Y=\251@\230<\270k\204;>\211#\275\207\032\000\275LK\330\274\000lH\275\267qJ\275\243\027Q\275\232XF=\367=\372\273\355\310\257<Y\327S\275Q\272J\275\263\227\017\275\323\'D=5\231%\275\232\246\025\275\255\276\232\273\n\230\227\274\3410\352<ls\264<\236\363\375\274\016\200Q=\276I\303:)\307\344\273 \212(\275\332^)<>\0164<\373(Q\275v\350\303\274\267\357F=\002\224|\272\364\343\232\274|\323\345<\031+\330<\307T\027=\277F+\275\300\231\n\275\251\270\016<V\001\030\275\021\315\"\274\343\215D\275j\271\254\273\360\335\"\274\005![=\305\030\246<gj\013=L\3014\275\373\352<=te\307\273\230\253\367\273\337\025/\275\002\014\367<Et\031\275[\216R;\242\344D=9\200X\275$\220\036=\366\220/<j\002\311<\206\375\014\275)O.\275\227?%=s\366\003=b))<\336\377+=v\237K;\275Np\272\t\036\320\272n\312F=\025\275W=\234\001:\275\316\265\020=\200\345\017<\031\325S=\335t\306<A\356\230<\223\301\341<c\317\371<\344\2612=\'>\263\274\374\020\026\275t\207<=\244\017\324\274\202\221E\275\261\2369=O\370L=\027\260\322<\010\242\210;\300\205\315<\231\027\202\274\037\361\032<\215\212\003\275\346\022\311\272vA==\345\312q\273\362\\\"\274wvP\275u\301S=T\3354\275C\177W=UW[=\237\247\335<\021\177/=\304$:\275!\2604\275\276E*=\224\3747=Vh%=\350g\317<\002\325&<\216$\034=\007\354\"\275\025\203\332;a\023\330\2736\025\345<\264\345(\275-L\007=\203;\274\273\221\224E<\215*\322\274\030\255\201<h\254\236\274:P%<\372 :;&\002\200;y,\363;\030\332.<\257z\033\275\261\331\251<\3765\374<\247AA=\205\311H=`\304\244\274E\035L\275\024\272\326\274y\021\326\274\275\343\000\272\355\215\330\273EH\257\2730\033\017=}\266D\275b\334k\273\351\344\333\274UG*=C\357\217<\3656\222\273\337\255\213\273\307\2329\275\264\336H=q\361>\275\234\340\377\274\207\217\013=\370\004\226;I`\332\274\230M1=+\301\304<\271\241\032=\241\007E=\327$[\275\202\225\\<\271\206\353;\352S\014\2751\r\002;\344\022\025\275\036W\016\275\030\221\224<\240\010\207\274\304a#\274\371\233\245\274\032$\035<K\223\010=\241C\247<bY\005\275\353X\017\275B\0136\275-\200\010\274\032\025\342\274\346\300}<\322\000\311<M4\250\272l$a9\202\030}<\311\365Y==\203\345\272\245\251\361<\237z\256\271&Xm<\004\273\341\274\325\301%\275\265\010U=\271]\250\273\001\025\275<\263\341\002\275L}\370<{S\265<\225^\352:\244\233\003\275\256G-;\370\026Y<\335)i<\006\207\037=\250z\361<EM\236<\356z\375\274Q\243\216\274\361\';\275v\3274\275\206\327\300\274\361\244\005= \357\"=^\373\'\274Or\014=3\265\030\275Rp\321<#`\233:\025\254\363<+$\265<\201\312\372<\271S+\275I\331\354\274\222^\004=\350\315\236\274\003xs<\242p\214\2746\277\376;h\361\003\275rjJ\274\214\014\2109\010A\021=\332_\321<\350\033\203\274\273\202\351:/i\202<`U\010<\370\367S\275\177\3558\274\321*)\2753p~\273B^\367\274\361\350\004=\213t3<j20\275B\373\321\272\240!\001\275\271!x\274\312p\004\275\305\301\362;0a\006=\215\365\306<C\351\374\274\032\037\233;}\2565\275\320\356>\274$\305\345<1\017|<\014\314\307\274E\314\031=Y\262\n\275t=k:/\r[=\271\217\315:&!1\275\372p\321<\333\016\256<q\1775\275_0P<\236\260/\273C\275\375\273\272\323/\275\214\231\016\274\261\354\377<\001\333\364\274|l\350\274\221\3454=\226\211\003\275\310\032\307<\252\032&\275\272p\211\274\030@B=\376\354Z\275\013\250\317<\256\305\003\275i\021\325<Ct\323;pR\363\274;D\215\274\345u\302\274\322\245X\275\316<\020\274\262\266\367;\005\302S=\'\347C=G\201\3119\326\373!=P\275\034\275\210$\220\274y\t\334\273K]?8L\001\r\275\236\362\236<\352\304\333<\237\250>\274\000\n\022=e5\247;\t\022\025\275-\365\304;F\007-=,\334\331\274=9\365\274b9\372\274\267\273\327\273\224;z\274:H\005\275\242\\/\275\330r\353<\270\\\301\274\365?\253<\215C\357\274\212\313\335<\205 \243<\033\213\026\275\202\200\000=\216\344\334\274\223|3<\007\224\005=\201\264\252\274(\240\215\274~\207S\275u\2101=w\006[<y\373\273\274\362\226\343\271\302\006\"=\363!M=\373k\255\2730O\314;\202{\203<\254\2610=\261\000\360<8\255O\273\370\264\305<\314\203\301<d\3534\274\337+\311\274\307.\023=8\347\000=\206K-<\333\244\034=`\305\002\275\315\371\005\275m\007W<\352\353#=\260\nV=\372\274\260\274\314\006v\274\006\016\361\274\242\003\257\274%g\010\275\223\342N;@96\275\255\225\20699H\020\274#\330*=6\354\200:\270\0262=f\345D\274\007cS\275\250!\226\274\200\023*=(\374\322\274\206\324\014<\000\021==\273\236\213\274\021\203I\274(\177\335<\213\232\377\273\nn\201<@Mp<\340$\032\274\322\223\023\275\033)\323\274\344\313\246<r1I=\377R\325<\314\215\267<\370\t\367:\203\tt\274\233\3076\272\352:\222<{\007\346\2733\027\274;O\377\007\275\224\276!=]\342\036\275\337U\026=\271\320\021=\335\367\372<\317Z\303\274<h\342\273\252C-\275@_+\275\231M\010\274\230\262\333:\270\376\247<\305l@=i!\245\274\232\033 \275\013\014J=\344\353\267;S4\t\275C\001O=\265\0354\275\231)\345:\032dV=\345\3151\275\243D\036=\242\214\223<\033\263<\275s\213\005=\274G\241\274\337\263\351\273)\266\341<\367\234\357<\216\227\244\274\034l\260<\r\265\025<Y\253,=%p\211<\236\"\264<\340SY\274\2249\020\275\273\t\027=\\\376\025<\377\036\030<-L(\275\010\221\204<\202_\021\275W\275\360\274\313\210=<5[\322\2741i\024\274\324\225\014\275\211\325!<n\230Q\275\031,9\275)\244\352;`YO=_\266\225\274\217\'m\274;\352\014\274t\262M\275$a\237<*(\344\274\0216|\274\210f\342\274\356\206\211;\300\013%=\'C+;\3450L\2742\336K=\016ZF=\343\310%=#v2\275P\232\017=\260l\244<\024!\334\272G\304@\275\212\354/=\241\\\257\274%\320\221\274y\366\307<\313\0069=\271\362\320<\222\304\032\274\205I.\275\244\003E\275Q\"\240\274\'J\233<nv\204:u\372\336\272{\001\021\275f\002@\275\366\220\335<R\013+=\r\335\213\274\253n\311\273#\242\303\274\216\034\024\275\254\301\246\274\037[J=\017\266\022\275\254\224\254<\001\016\267\273rum\273{\370\002\275\212h2\275\352\214\236\272\324<R\274\313\312\314;\000C\031=Dy%=\324\345\357<<\270\265\274\344!h;\202\214\231<\t\315-=\237&\305\2732f\036=R\2121=f\341\373<&\345F\275\rgH=[\357\021=\216=\371<\374\276K\275\340gw;hg\001=\247$\005\275\326Q\243\274\351\t\235<\360\252\345\274-kS\274\206\202Z=\035\201\265<\0000\006\275\341U9=\240\300H<=\021><\221\224\260\273\332\022\024\275\214lG=\212\266-\274\235q\3767\3514\265<\"c\323\274f\177\322\274x\361Q\275\204\310@\275-\342+=[\355\201\273\211\nt<\337aa<N\240\027:@B;=I\357\021\275\330A\213<oHC=D9\034=\234\237X=u\201\231\274\002\254\016=\352\032)\275\277.\335<97\256;\263BH\274S\302$=.\3033\275\273TX\274zOW=\244\005\247<&:3=g\246\037\275VP\005\275\306\313==(z\023=y\227R;Z,\257<n\264\006=\372\331M\275\2205O\275)\256\007=8\261\352<\316\334\014=\272R\200\274(\337U\275\303z\026\275w5\364\274\373\250\006=\215b\330\273\204\356\310<\232WC=]\205S=\3745\257<\214p;=\316\333\"=\320\034D=\013(\037\275O\344\204<\243\346\212\2725\235h\274i\315\002\275\241\261\013\275y\321\225\274\332X\323\274\036\201\316\274\361b7:v6\027=0T\325\274Z~\230\273\216\253\353<\347}\310\274\',I=\321\265\003=\310f\000\273\253\236\002\2757\256\316\273\035\247/=\026v!<\372\021\301\272\351\321\254\274\216-2<T\017?\275\222\303\003=\345\201\034\275\\Z\332\274\035\227\010<\034\234\017=\332\245\306\273+k0;y\273\277<\314.\020\275\341zO=\365L6=g\230\004=\205\344~<\013\033\013\275\000{\347\274\033C\273\273\275)\277\274\211`P=\227\374u\274F\370\024\273\263\034\034\275u].<\035\351V\275\334\r\235<\246\033\322<\031MV<\221f\206<\260T|\273\254\230W\275\372\342\032\275\01449\2757~\343;\242N\257<\327m%\275\34796\275\342$\252\2747`\357\273dbw;\240}F=\274\374B==\375,=7.0\275\214\322\330\274\376zW=9\265,\275Q\204\250<\360B.\275\336a\261\274-\332\r\275\350\3569\2745<\344\273h\277\210\274\"\3272=\245y\323<\211\263\231\274\375\223\016=\350\244\364;\037\366C\2748\334\037\275\316\"2\275\223-\030=\327\341\017=\265KU=\311`\007\275C\230\366<\001]\365\274\330\270\260\274\034\260\257<\037\006P\275\371N\036=\275\217L=\021\376\004\275L\273\004\275}$:<k\362M=^\302\033=\272\200v;\014L[\275u#L\275+\355\314\2741\220-\2758f\342<\026\334\214\274\315\277@\275d\300\360;C\317\222<\321D%=}G\277;\354\254\037\275\242\332U=4\343&\274\030`P\275m\2319\275\220\357A\274\316\223\362;\006?:=\240!\246<\031<\355\274\272\370\271<\234d\004\275jR\365\274\362\025\337\274\303>g\274o\324F=\315\315\305<Tr\305;\000\271\010=+\364\002\275TN\315\274\200\3522<3\330\347;\014A\271\274S\353\032<n\360*\274\333\273\216:\362*\242\274\264\002\022\274\262\373Z=r\360\t;R\020\024\273}\345\353<\036b1\275FS}<=\377\007\275\221\274S\275j\340H\274\234\270\'\275\005\251#\275\370\306?=\352\361&<\353\223\335<\022\253P<\230\t$\2753\351\310\271\303\363@=2\276B=5W\321<\344\'\021=\333\315\340<t\307M\2757\003\027<~\332\250\2733\354M=\tI\313\274\326\317{<\362k\321<\n\354\376\274\036\3727<\211\254\322\273,P\"\274\237\245<=\303\0264=\221|Y\274\310\222\006<@\030\203\273\250\025\020\275++#\275\036 \223<\024i\337\274\361\352\262\274\344>\022=f-|\274(=\364\274\356!v\274\312\302\236\274\354\277\272;r\233\310<t\'q;z\313\026\274\302\326,=\224\0171=J`\351<\350\242G=Qa\347<.\340\341;r:\343\274\221\300\270\274]\355r\274]u\347<=,\310<\204WW\275\232\021\024\274\245;\2668\320\241r<\2771]\274\361O\"=\204c%=d\261B<oT!=dE\315\274\241\007\356\274Z\326;\2756\365\034\2753K\005\275\024%Z\275\241:W\275\223\3158\275m\030\\=\233q\231<w\263\250<\037\351\325\273\323J\307\274[\'5;\342\"\034<\033\266\021\275uOE\275(E\225\274\303z)\275W\350\240;\002\t\317;\tD*\274\271\254\347\272\263\272K\275\3736\244<\231\346\307<\350\203\010=\031$\026;\t\020\010\274H\350\003\275\307\017\207\273Yo\362<l\020\320\274M\201\335;\200\201\324<\340\200h\272\303z\016\275m&\346\274\220>,\275g\277L=\261\226R\273\366y\340<\360\216;\275\302\3544=\325\034\036\274}\203P\274\020\037\304\273d\357\027\275\364cF\275\362K\332<\336ST<\336\'\205<P9\330<\311\216==k\257\310\274\020\373<\275\370\3321\275m\344\334<\206\037t<\022=E=qo\024\275\226\236\234\274\016\231\364;\326\345\\\273\036\007\351<0$\325\274\353\016\200\274\026\260\013\273 \211(\275\230yX<MxF=\240\207#\275Z\'\257;\016\217*\273=\355\021=\204\356M\275.\333\243\274U>\332\274\344\364n<\367%.=\324\001\006\275H/\215\274\352.%=s\361(\273.G\332<s\"T=\021t\267<\332\020\030\275\220p\325\274F\270)=\307\254E\275?\264\005\275\364t7=\237\371\350\274\221\017!=M\266@\274\234O\017\275\r\245\265\273n\316\342;\207\334@=\372\236\364<5\365\"\273\250\374\004=\311\030\023\275\312\265\024=\222\340\235\274\004\224\002<t\376\337;\245~R\271*ZJ\275\337\217\353<\214:z\274\246A\265\274\022oj;\226\\\013=\337\336\000<\341:\213<\345p\306\274NL\001=\363\225|<86%\275\315*\017\275c\035\300<SK\362<hl\'\275\2671\214<-vT=L\035\227;r\204\020<\316\226\210<\375\235{\274\247\343\354;\007kB<xq\000;\t\3448<%yk\274Y\"\307\274MB\"=\'\'!\275\036\355\241<\365{(\275\324n\007:\005\366+=\230\233>\275\315\366==D\300N<\220\240O\275\303\2440\275q\002@=e3\307\274\007G\020<_ \302\274p3\021<\374(\333<m\326\'\275\276\345\033=\337\3001\273\231\314\033=q\271\344<\377\006\252\274<\325\177\272r\206M<*\300*\275Ll\000\275LQ8\274\034Sj;8l\216<\321\200\037=%C\377<\0322\034=;\034T=\213\256\024\275a\312\022\2743)(=\337\340\361\274\376N\024=z\246\365\273\006\312g;`\002\322\272\031)*\273MWE<n\2774=\201z1=za\007\275[3\031<x\314E=f\271\213<\\\304\033=\261,\250\274!#U\275\374\323E<]7*\275v?\374\273\266Q\340<h\301\000\275\260\245+\274\305\'\201:+\307S<\313A\372<\232O[\275\260PB;\320cN=\356\024\344\274\003W\230\274(\317t\274]\036\236<4\020\342\274n%+=U7\225\272.\251\274;\307*\311\274\306y\017=v\206*=+\0336\274\276\236\234\274\21393=\035\006&\275C2\313<\336\341\311<\250a-\273\222\267\030\275\312 O\275v\235\002=N$<<\332\227!\275xc\323<\365T\305\272\256\217\346<7\373\026=\250\346\221\274\277u|<\363HD;x\277<=\301\231d\274\333v\357\274\371a!\274\2258\013;\344#\001<\252\372\305\274u\336h;\350\307\345;\004\037\270:\201\033\254<\001aU<\265\023\000<\000\333X\274\267)\217<\\\375\237\274\337\221\272:\365\027_\273]\006w\274Q\211\021=\031e\010\275_h\376\273q\016\256;\222\301H=j\243\330<\037\0141=\037=\014\275\326\254\267<x\266c<\271QK=\t\363\000=\200D\307\274sQ\242<\345q[=\302v\267\274\010\267\275\274n\216\332<K\270\035=m]\030=\372\360N\275\263u\003=\225SG\275\037\022\014=\274\n6\274\374\263];D\2621<\260\305\264\274\266\353S=\333\276\375\2747\315 \275\326\227\237\272>M[\275c\247\002\274\267\316\234\273}\321\301<\235\330U\275s\327\021=\035\321:=Ao\361<\005\235$\275y\336O\275/\236\317<\313\344\376<=\3757<\025$d\274h\262\003=\243\0177\275a]w<\335\tH=\000Aj\272b\216\010=\033?\007\275\227}\003\273*\355Y=i\033\032=g+\017=\316\205\010\275I\3529=\027S\307<\026\303\371<\222\326\322<\017\321\021=X_e\273\305\021>\274\341\r\000\275\242A0<\302[\363\274Q\310\177<[-X<^\233\340\273\272\376\330<:n5=\023R\353<O\227B\274s\237\003\275!\310\342\273\354\300\037<<\223y:\264\360R\275h\236#\275\365\266\201\274\247\275q<,W\036<\324\264<\274\271-p\272\232w\231\274\332\262\245<\0255\264\274\250\304\273\274FkT\275`\376>=\267E\251\274\370\232f\273\242\216\'=\004\023H\274!d\010\275@\303\020\274@?\341;\267\331X\275?\0075\274\204Q\333;\231m\220\273\006\327V=;\222\277\273Q\247\022\274\005\340U\275\031\204\017\275~|\370<W\346:\274\254\366\033\2751\353\276\274\357Z\242\274\234\031\013=\354\232\026\275[1D<\344>A=\037\255\371\273\365\300\210\273\\\326\022<.e&\275\2318 \275\324\204\317<\310\344g<6\353\033\275\350c\022=pj\324\274\016\337Y\275\231\213#=D\275\002\275\332g5\275Z\260\243<\225S\007;\036$I=^G6=\270\024x\2744\270\236;:(\375<\320\234.\2753p$=q\331\321\274V \306\273.\0342=\230RV<\277\014-=\361\344\331<\243\245$\275\266i\335\274KOX=\333\220D\275gj>\275\353\364\350\274\274\241a<!\340\331;\353\266\324;[R\355;\365\366\243<\354j\235<\325\025\325<\023\310A=u\356\006=\225\023,\275\n\235@\275+^\007=\371\232$=\177c\225\274=\275\215\273\264\302n<\270\016\013\275\223\334H;AQ\256<\250\2431=\0051\021\273J84\2752:u\274\025\023W=\355r\003\273r\021\'=\242\310\021\274\227\310z\273\373-\270;w\014#=\\j4=\26314<\013\212;=\024%>\275\00040<\327:J=\262\3428\275\022\234z\274\027\316\312;\t\333T\275u\020\221\274:\316\342\273\225\372T<5\215\376<&\245\021\275\305\354\341\274,\224?=9\216=\275,\210k<\215\022o<#b\255:\302^v<^\300\307\274 \223\206;\013$\330<\222\360\345\274g\216\271<\027@6\275\2446\024=\360j\021=\343\177$\275\345\214T:\352Y$<\2326\375\274\344n\t=u+\177\274\203\\\247\274\000\000\\<\203\035Y\275\373V0\275?\264Z\275^\303\205<\200\010\241<\3554\367\274\034\271[=Pq\260<GB\242\274\260\306,\275\002\376n<\277\340\033\275$\243-\275 \027i\273\253+b\274\205\000G=\223\325\002=\235\025\305<\241\375\235<\355\003A\275V$D\275r\2175\274\240\334?\274T\031\007<Q3\266\274\033\327\'=\217\"6=\036\245\216<\234\277\241\274\016\314\344\273L\211@\275\216\344V=\373\3515=\303L\010\275Q\017:\275\273Y\203<}~\016\275\254@7=\262\204A=\272H%=\320\252\323<\333\035\n\275\261v3=\253:\035=\"NO\275\315|%=\316\r\364\274\233r.<w\'\261<\004O$\275\'\363\346\274Z\361\000\275\300\252[\275\233\371I\275m\272\030\275hT?\273\215d\254\274\200T\307\274#$\033<0\321\374;b\233\251\274\223\223O<\213#c;*\252\002\274Hr\"=x\226\013=7v\347\273\276\027\221<{\370\026;\253Y\215\274\"\323\023\275\251\337\366\273\020\035U\275\331\2113\275\330\266\310\272\325\235c\274\307H\235\2744\224<\2757\010\372<g\3100\275\330\307L=\247\244\013=T\000\222;\0104W<\336\256\273;\267\244*\275N\360Q\275:\2052=\223\374B=VW\320\274\203\205\024\275@\006S\275\314\356\027=\n\320\375\274\363N\033\275k\316Z\273\313\206-\275\312\240\002=\213\323\206\274\031@\350<\374\2005\273\357pM=\377\r\277\274:k/;\002\252\026:\216$\033\275\355\265\305\274}\252>\275N\034\r=\305\330M;\014\275 \2757\215\036=\302!\206\274G0\036=\214x\025=\302\r\362<\256x\253\2749\220\301<\014\250\210<\272\335\304;\301\254\273<}\361\363<\340\324\016\275\301O\003=\261\341\202\274\033\204/\275\010/T=H\343\263\274\253x;=b\312\243;p\226,\275\204\225\253<\330\324o<h\262C=\250j\370:a\314\317\274\300\257>\275B\353\375\274\221\260\266\273\325W\036=\247\rU\275f\305\006={LG\275\376q+\274-|\002\275\210J\304\274\331f\031\275Gc4\275\340 ?\275\317\203\033\275[\326\362<\003kt\274\324\367k\274\277p\344\274\r\266J=\260\031\230<\177>\326;\203\372$\275\351\nH=\356;E;\303\'\006\275 GU=\235\273I=;\266\0057kP\224\274\371\363J=f\356\276;\\Z\002< \216\r\275[R\313\274\255{W\275*[\022\274\251\374 \274.5\010=\023\210\013=\242\251\000\274\032\265/\274^{%;E\246\031=\235Xw;\333\244,\275\001H\265<\320m\334\274\207n\265\274\302\267\374\274\343\315==\320\202\025=F\177\241\274\325\0246=\215\020r8&\213\265;D\241\014<8\022U\275\332v0=\216U\250<M\242,=\025\334(\275\217\027\310<\t\345\343<\257\363\033\275K\271.=\006\327,\274\212R\n\275\246)B<\376\233$\275\037\353 \275\013L#=/\314\267\274,>\261<\306\340\000\275\221X=\275\037\237\223\274m4\256\274L\322H\275\242\222Y</@f\273\034\373B\275\027\2655=f9M\273\024m\255;L\376\024\275\270BC\275\200\321R=\273c\223\274\230`\227<\035\244\376\274\360O\007<xB.\275<y:\275o\367\343<\363\262\354;]\353\332:{\343R\275\304\0331=>;\304;(\302\247<\373\366A=\307\345 =\342vP=\263\"^:Q}S\2750B\325\274\305\r8\2757\256T=\354\352\241\274\376\231I\274\t\206\003;\261\245\324<\261\347\033\274.$\342\274B\222B\275\241 U\274Z\235\n=\300KT=SQ\364<7^\315\274%\332F=w\232\221\273\202\357N=o\233V\275\262\335\037\275\237\262+<\212\344\213<\344\223D=\364\373E=\343]b\273\374\263\031\274o}\374\274\207\251\037\275*\367+=\333,F\275CN\212\274\'\347\033\275\206\325\037=y\216\332\274\204\367\244<\323\316\010\275;h\333\274e\361C=\203\273\362<\207\367\014=\241G(=\370\231\233;JA4\271$\354A=usX\274_\265\200\273H\263(=-J$=+\220\344<\306\343\240;\371\254F\274%\315)=\341\033\321<\033\321G\275\005\002A\275\233\276\245\274\004\202\371\274\244j\033\274\325\305>\273s\362#\275\335:\017=\366!\006\275\200\344\354\274\343\225J=\307\320X\274\n\277\323<g\"\226<\256\364\032=\241\374\276<\237n=\275KB\325\274.\226\027\274\255\346\006\275\212pN\275\350\361;:h*\270\272\343\016H\275\321\234\344\274*4\342\274\317\3659<\241+X=N\2524\275\273e\333<\203\3074=\007w\003\275\232\357<={\261\031\275\205\222\350\274)U\321\274\374\372\037=\032\321\355<\025\333\303:J\371\300\273\235\303\324<\331\326\225<h \032=\217\261\354<u\203\014=\266\033\230<\007r\246<d\201\205\273\230b\220\274/G\343<\347\262\356<\267(M=\307\3437=\377V\304<X\245Q\274\207/\n\275\330\342\202<KP\035\275\310\3304=\341e\344\274\267\022B\275\035O\010\2748y>=\0337K=#\233G\274\265\371\371\273\272\270\002=\375\230\264\274p,k;\2754\004\275\014\254\013=@\365\224<Of\010\275}L0=1Q\357\274\270\233I\274\366\"\321\274\350\262S\275\231w\005\272\346iU=Q\273@=\014\231\231<\212P$=\222\2456=g\276Y\275\020\036\033\275z\345\'=uY(<u\266<;\210U\030\275N\010N\275\257\313\207\274\210\\T\274\234\221\007=sn\261\273F\253X\275\216IW\275\214\025\353;\026\203\300\273\207\326\354<\327\363\217\274\323@\270:\022\023\216<P\272S=r\257\276\274\270\007\003\273k\360\017<\312\300\030<\033(f<\025\356F\273\357\351\022=pL\010\275\3509\000=w\"\254;|\257\"<\240\305!\275\231\216\365\273\374\024\210\274\327Z0=\321.n<\366\324\002=\245\025<={\224\332<z\366S=\360\317\244\274\201\236\340\274kn\t=\303\344\016=\362QT=4x\324\274b\310#=\270\241\267\274\335\221O=\305\204\375\274\373\336\313<\213WI=\034\242\230\272x\316\025=oO\253<7\224.<\305\022{\274\0020o;0#\2439.\2063=88<\274\270~\361;\257\030\246<\023oA\274H\373U\275\253{\261\274\363\344t\274\310\036R=\244bF<\217\305\007=\307\330I=\224\207@\274\001D\037=\301\323\225<\363\367-=\372&\023=\242\334\257:\370}\320<\033\300\227<\200\345\211\274\'%D\275\232h\001\275\243\n\360<\357\300>\274\005o\'\275\370\366A\275\021\014U\275\224\343e\274\\v\332<\222\001\010\272\375i\207<+\337*\275\341\003\010\275\377\247\375\274\312d\244:-\317\310<\2220\323<\247\362C\275\377\334\214\274\356\236\033=O\246\335<W\310\230;x\355\333\274N\037\204\274\370\340\022=\242\373\017\275\341\033-=\243\310\003=\360\265+=\3405 =a8\'=\005\355\004=\276\302\205\274pv\t\275\337\320\022\275\35414=\322~\241<&\263\304<:w[\274*\0040\275E\004\027\275\025\3655\275-y\327\274\233]\261<^\257\n\2757J\030\275Q/\256;}-3=\320\r\362<H\317\010<\'\362(=4\2654;&I>=\226\271\305\273\227\211\327<E\311E\274\277\315\250<v17=J}\250\274|}\005=\023\357\n<\rs\350<\261\323(=\316c\010\275\230?\254;\274\0224\274\256\364A\275)$A<\337H3\275\203cA\275\221\211\274;\024\352\206\274\312.\203<\014zZ\275\334\306:\275Q?\252<\262\327\214\274\2434\031=01\304;\204n\034\275Dhr;\220\311\220<j\261\321<\3700T\273\016S[\275&X\027\275&\300j:\317|Z\275w\200\035\275\200\023I\274\022\355\025\275\2678\006=\367\213\333\273U\365D\275\331wp;\213\017\346\273\n\363\274:\307WC=\013\2607=KZ\325\274\331\354\000\275\345\323T=:B.<\375\376\000=\267~\301<\342[\010<\005\364,=\034\337\220\274\257\336\366\274\r\237E<\013\241\020<\tJ7\274\310\271A=Ot\247<.\013\017=\3475\340<Y)m<\371\206\275<\3544\266\274!\262\n\275\354\211=:\315\260\377\2740\302S\275\'k\036\274\241\027\363;\361\315\367<\211\247X=\335G\224\274\224\326\226<\341p\225<\224Ub<\304\221\022\275\334m\220<\"`\'\275\364\333\226<\217\004^;\361\2542=C\364\026<\316\2258\275|\265\210\274\210\274\036=\352:\260\271\267\010M\275\260\325C\275\315\364\022<,z\020\275\033\010\327\274\257\231\n\2755}\272<\324\352*\275\027\322\223;f\343\274<\006s~<\345\t\265<\242\243\331<\304\030\301;\221\251L\275\372\345T\2742\217\366<)\227\313\274\350z\r\275v\335\303<\353dO\2746\367\246\274\312@O=\035 \016\275\225e\361<\236\273u\274\\\370>\274XY\213\274t\306\251\273V\210\377\271\210\024\262\274\2365=\275\214#L=\311qN\275:_\344<\264\310Z\275P\016&=V\315-\275\321$1=\315\025D\275\334Y\261<\225\001\367\274\322\327g<i\"\035<P\322\363<\037\373:=\217\0252\275\3414\252<\323g!=;\361>=\301\300O;\"_\353\273:\341\036\275\004PA<\200\374&\275\314m\273\274\365\265\n\273\256\373$\275$\220\261<a\016%=\224\001%=\212_9=\356\303\007\272\327$\251\274Qo&=\001\351\342\274\0213c\274\014\201\000\275U\025S\275\014\223-\275\004\306\014\275aN\210<\255\224$;\224\237G\275\240\236J\275\375\247S\275\210|\277<2\t!\273\210\300\005=\330$\257<\177\320\211;\016\027\034=\357J\351<\226xA\274NO\'\275\353A8=c\273\032\275j\311\353\274\202(\r\274\270N\026=\301\027\247\274\242\023+\275\017=\345<\262\272\003\275#_\274\273\353\344\271\272\027\304\367<N:m<\3658\024=\020\225\020\275\010c*\274x\255+=\200\275\347;\263O5;\254\217d<\230*=\275Z\3141\274\311\337\337;\264\276\033\275\351\367$\275\277\224.\275\353`<=P\366\320\2740\207\016\275\210r1:8\347\227\273\220\214=\275\303v\354\273\373\345\306\272VQ\013\275\204\263\002\275\256\207\000=Du\320<\262v\314<\311 \253\274\266?\242\274\332\301\316\274\013*\025\2758\323\326\274\343\017U\274\210\253\275\274\230iq\274\320_Z\275\312\354(\275\343\273#=\202t2\2756,k\274\374\341u<\277E\267<\244\341\232\273\350\236H=W\320\214<\013\203o<\232&U=\363\273\206\2727\334G;V9\373<\002\215\301\273\346\327\246\274\205cm\274\250\3169\275\242\003h\274\366Y\300<\327\220\014;\3235&=\316\313\022\275\t\213D\273\262^\312\274\037\256>=s\277\337<\333\245M=#\317,\2755\200\026=/\022\004\275\254\270\317\273\234\235^<\356\263$=\213A\005<\355\275>\275\307(|<Q\035Y\275\250/\375<\356\331\014;\003\303\277\274\031m\234<4\t8=\344~\020=\261\377\215<\"\016\276:\000\037\007=\224\211\200<,\301\305:\312\233\003\275\330\t\264\274:\032Z\275\'\tT=6\255\376<\341f\341<\363\255\226\274\223\223\272\271_\2071\274\3706\221<;m\224<Q/.\275FeI\275\035\337K<U\005N\275S6/=i\237V\275\300mt<TV6\275&\301L\275\014\306\000=Tg\006=\337*D\2753\025\314<\317J\255<\"\317\t\273\307\370\257\273~\320O\275\346\246\274<\202\272\255;\353\314E=\2212I\275Z\030^<\037c\002=\013?\035=\303p\t=\223Oh\274\260\203\343<\344\235U<&8\324\274\220\366\216\274\r=\004\2750\354\033\275\203\356\373<\356\005 \275\370\223\221;\323\201C\271o3_<\335vC=\203\261J\275M\304\376;;\217\272<y\246K< \027\346<\264K\353\274\253\334\302\274U*\"={\215.<;\350\343<\327\221\236\273\366U\007\275\341\276f\274!\\1\275\251\0255=U \273\274\036S8=\020\316\026=Q\3134\275\347\002J<hT\261<0\321M<\227\303\377;\254~\002\275\016\373%\275[\032\002=\356\353\'=9e\254<\253\221H=DH!\275\000dV=N\314l<\264\222C=73\201\274\301Q\275<\256\337\246\273\375U\002\275B5\261\274d=M\273E\362\032\273\0175E={B\347<m\323\035=\320uA=%\363\366\2743\275\373\274\327B\226\274G\324\027=\010K\301<\212\353H=L.\364<\016\351\347<\221V\032\275<\244>\275(x2;\032\234\340;\253k\033\275\211\3602=\'P\035\275M\201\266\274\371\217\247\273Y\334\277<\374CS\275s9\334\274\035\314%\275\333l\333\274\2166\327;\245h5\275\265\005\225<\202?\004=\247\'\001=\350f\234;Qy\237\274>\322[\274\261UX;n!\356<\212\226Z\275t1\343\271\261\264\370<\026\320\033\274\321(\025\274\230\027\034=\247\2271\274\240\334\036\275\310U\325<\240j@=A\343\036=\242\232*=#\024\334\274p\3319\274\033\234\214\274/\346\324\271\022\364\340\274h\000\276;ZY\225\273\020\276\252<\300\343\006\275*\321\252<\036\314\002\275\250\201\245\274(Q\224<{l\025\275\t\343&\275\235\350\r=da\337<~p7\274\340\037K\275\320FC=\354Q\013=\244\213\036\274VpY\275%^\000\273\321\225\253<8\233\236\274\346\031><\255\251\022<U\3762\275{\314\273\274\342M\014=\325\016\345<5\025\006<\032\t\264<\261\250\203<=\005F;\220f\031\275^\177\256\274\350\3179=;N\n\275\nnV=\373\313\037<R\333I\275\006\254Y\274\344\253\304<;\324\255<\214\313H\275@\272\351\274\332C7\275\304\242Q\275\004B)<\207^P=\343U\347<\006q\243\274\214<\365<\367\247\320\274s\231\370\273J\271\031\275\215\036\373\274G\326\343\274\342:\217<*\302\256\273\240\032\260;\t\2760\275.:/=\376\233\010=\373\251\201\273\241\000\361<\032\250@\274\3113\216<\335\334\374<Yv\n\275\377!?=\347\310\344\274\177\013\312\274\263\330\'\2755\241\244\274\330\216\350<\205\3171=e\247\271<\313;*;\215\0223=F~n\274uV\316\274\316H\033\275\364o\006=\243S\033<\377;!\275\214b9=g\223q;\326\306G\275\316\037\000\275\275\240==\216\257\030\275\246\035\336\274V\337\355\274\353\362R<\3416\312<\326\234\251\274.\2622=\235\255S\275f\017\247;$\307\006=\373E\215\274\266\322M\275\222\214\276;\217\031V<L\240 <@,\315\274\341\214A\275\267\204$\275\223h\033\274\nq[<\251@\323<\2518Q\275\314\335\032=\261\324\037\275\221\275,=\315\234*=\200\321}\273\357\252;=\203^J=\270C\021;M\363\024\275\213\007Y=\345\0069\274\303\217\271:\266\037\306<I3\t\274\226\3057\275\024\367\263\274M\336\t=\375=Y\275\236\323\271<\3451\233;\010\373(=\000\352\r=\330\355\253\274@\374\216\274\177\260/=\035\325\230<\275\\M\275m\371\177\274`P@\274\341\304\006=\201\020\363\274,\232\032=p\026S=\370\325\201;\240\031E=\031\330L=h\326\256;\342U\014\275\367B\243<\366R\356<\024\325\027=\220#k\274q\375<=\003\247\177<m/3=@\\!=\237\233\223<\235\314\330;\247\017>\275\000\202_\274\240\210\274<B0V=\243\026\366<\276\375F;\031\312\264<AL\366<\327\267\310\273\233\242\242;}6\031\275Q\024\t<\037bB\275\324[K\275\343\272*\275\211h\200</\232<\2744c\362<\0139`<[|\254\274\240\256L=\201hm<=\232\025\275=\240\021\275e_%<\300\257\377\274\235\3201\275\313mC\273\307[\022:\337\005\210\273\247p\220<r\345\261\274\214\2118=G\346\324:&\216\t<\367\303Z=\220\252&\275g\n(=\256P\216\273\026\215\365\273f\306R=\257C\016=_N\016=\035\316\014\275`\216C\275!\311V\275\243\375@\275\355\031\000=\r~\260;\370x\252\274Y`\350\274\273\372\306<\014\033\307<\311\000!=\177U\2079\332\2774;\255^\032\275i\230Z<\254\333\033\274\336\200/\274\000\211K={b(\272K\022D;\270#\324;\232\3451=!\016\226<\300\003\337\274\"\211\017=\022)G\274t6T\2758\240\031=F\021\226\274\036\261\000\275l\363\362;\242\354\034\274\207M\036=\276\000\267\273\020>\334\274\031\201M<t1\007=\005\315\352\274\371\340b\273\225\301\n\275\205\247];\202\245t:\276iL=\361T\026\275\301\301\317<\204\361S=vMy\273\260\034\360\274\213\332K=\255\037\024\275\244\302\037=\325\237\024\275\"1\021<\265\0171\274\nH\334\274\327\3429=\361l\211;\264\246\237\274\027\315\025\275WV4\275\224-\226\274I/F\275\010\024\t=\333\002\033<Y\032\330<2\367(\275|\363\020=|\372\000\275\'\000\010=\2267\204<\357\372\234<\006\236f<}\377d<N\322L<\254B\320<\254!\022=\326d,\272\310%\004=\241&#=\020\025\256\272\002\344\t<Z\314\324\274\260&\313\273\372\\\252;Q\274z\274\3351D\274\250\302\251<\206\n\005=\374t\344<\231\2474=\307N\005=\322K<\275\374]\027\275\256M\025=\351f$=g\272P;FjZ\275{m\227<\313*\'\274\340\216n\274\203\341D=\256\343\t<b\202B\275\205\r[=\253\243\265<\311\317\026=\260\303\264\274\252\255\010=\007\302A;\262\217<=qc\320\272\037\232\t\275\376\013\034=g\311\310;\n!P\275\020)\'=9\327\320;\363\246\321<\0010\037\274\221\r5\275U.\223\274\210#\376\274\273v\002\274\303\021\237<W\226Q\275~!*\275\321\340\004=\232\311\016\275\344kZ\275\307\016E\275x\253\320;\027\226\360<\357\321\324\274\032\032\000\274\375\301$\275\334\nm<\317\\\211\272t\323\340\274\'f3=\201!\311\274\355W\310\274\375\n\321<\206K\332:\3405\241\274\003m:\275\021\254\217\274\245\245J=\225^\364;9\277\337<3\341Y\275\236^ =q\242\227\273p\304\223;;\357\330<N\245B\275\003\005\263<\005\341$\274)\355\360<b)\n\274\007\2005\275*!\000\275\033\252\n=q\361\376<\250\000C\275y\202_\273\223jE\275\251:?=s\277\032;TR\226<\tF1=\"\320\215<|\327\205\274\225\020\270\274^pW\275e\220\027=W\232\376\274!\250\230<\303\230\020=\251\204\037=z\257><\211\270\307\274\212\307\023=b\013\376;t\315\033\275t\324)=$>F=\231\2760\274\335X\247\274\306\221$\2754\232\315\274!\003\333;\237v6\275\206O\242\273:%\220<\005\347\362;\245\327\270<\361i\242<\360\260\217<\033\253;\275E&O\275\251\367\374<\007\367\342<\226\023\023=\361OY<pfL\275\230\020I\275\313\\\325<}\243\031=\230\366F\274`z\031\274\370\376\016=\355\271+\274y\036\353<\177l\301\274\0366\032=\007\204$<\354O\"=\272u9<\271\240F\275\004\026\302;m\rE\275\265\2552\275\216hG\2746\3453<vP-\274]f<\275\361\010P\274?\227\271<\357\276\327;\201#y<\353k%\275K\377T\275\036xA=p!e\274F\025!=\243\313\206<\374\037\246\273w\306Z=\226\334\341<\356R\366\274\324\353\242\274\025\020L;au@=?H\"\275\320\024C=\347sJ\275\306\207\253<\2674%\275q\016F<\202\000\014\273MA\211\274\344w\001<\274q/\274\265\t)=\023]\035\275\363\035\275<8\326G=y\345\373\274\003\371O\275\304\306Z\275f\217H\274\252\212L=\364\224F\274?a\213\274\223\357Q=\261:\337<\021PB<{\177\213<\331\025B=\007\237F\275\374\335\256\273\221\307,=h\304\n<\315\277D<\227\3522\275\\\245/\274-\007\207\273\344\"\'\275\257\323\313\274L*I==\373\360\274\227Ft<\201\233F=\260E\303<h\237\217\272\242\0218\274\010\342M\2752\2067\275~;:=Z\267\352\273I\243\370<\314\351<=\347(\335<\3645Z\274\\\331\007=u\300Y\275\022\340E\275p\334\322<t\315!=\"X\237\274wG\004=DZ\256\273r\311\302<\361<\035\275\265\241\013\273\347\320\267\273\0268\347\274^\277\007\2750=\313\274\250\241_;\031\374\236<=\3274\275OI\261<\344\247\266<\222\336\000=\310n\317\274Q\027@<P\334;\275C\017\345\274\271\0332;\3050%<Y\253\024\274\311\340\277\274\217\023\025\275|\227X\275Z\225Q\271\0226Q=\336\214(=\333UC<Db\304\273\361\251[<h\003I\274\035c\n=I\025\370\274\370\2156=\364\332\025\275\027Zk\274p\200\251<:\004\035=\245e\257\274\021d\235<9?\004\275gc\305\274\252\247w\274H\013\233<\335\202\350\274_\3267\275\310\313\216;\361\271\314\274\221\245i\273\344\251%\2755\333\\\274?\270J=TzM=\016\3670\275\313<\017=8?\\\274\223\377\001=\243`\035\272mYK=P\265\255\274\310\335(\275?\345\321;\022\206w\273S\376~\274h\277H\275\242\000\323<\205|\230<\306.6=\317\255\260<\366JD<\206\316\207<\034\031Z\273Y\204\226\273*\325\333<1\3024\275\375M\377<\250s?=\r\217\221<r\3417:X/\363;\367q?\275MiL\274Y\177(\275@\272J=\211\\\024\275h\254\252\274\'\207\035\274\010\206\026\275\317\315\220<\241\356\034\274\266\023\206\273\'\205\243\274\363\203\253;\350\302\025=\327\302(\275\r1$\274\333\037\263<b}\373;/$N\275\360\350U=\373\361\255<(\034\325\274_\365s<u\020\201\271\254\310<=\360;8\274\260a\323\273\336dX=`H\320<\345\263\013<\344H\025<\354\1776=G\303\253\2741\235S\274\013\306\001=\243\263\203;\017\034\220\274\3262\341\274\2724\355<&\366#=u\027P\275\t\237\000<\261\333\004=\001\230A\273\031wQ\275\3378\303<\361\270\313\274\356~\263\274wJI\275:\335\345<\234r;\275\210\274T=\203P\027\274\314u\007=\376 s\274crK\274\004~\006\275\312{\030=!/#<\344\324\177<\273\263Z=[EG=C\302\227\274\325=\014\275Y\241\037=\013M\211\274\220\261\326\274\207=6\275\233Lv\274K6\010=<9\t<\207\031\236\274JfQ\275\030v\245<D\327H\275\212\230\014=\017\362\244<\350\335\276<,\341\266<\033A^\2732\330\003<\255\367\024<\231t\226\274\312\377W\274\3418\\<N&\017\275\370p\013\274\003~%=n\014\211<i\200\300<\017\311A=Ta\"\274\313\010\360:\315\315\364\273\177\262\357\273\033\272\030=\274_=\274\002\361\246<6\352\036\275\240,\372\274\276m\232\273\327QV\275\00015\274\252H<=&+\331\2744|\036\275\363\271\372\274\221\200D\275>\nX=\004\334<\275~\242\261<i\220\t\275\004\330\256\274\337\035\023\275\241\307$=\267W3\275V\212\310<#\013I\275\022\312\326\274cuL\275\026\352V\275]\374\271\274n\375\233<\017R\243\27452\031=\335+\367\274\356\345\031=\311\244\340<\3732\314:\333b\303\274nWU=\214\203\363\274\306\215\r\275\3414\013=\205Q\027=\211\340\202<\350rq<~:p<\344/S\275\213\351V=\337\r\275<\2108D\275*\023\274<\245\327!\275B\357A<3\240\031\275\035\004\213;ylz<\275\247\035\275@\217\'\275\231\341$\275P\030\261\273\274SW\275\367`\233\273wt\337\274\273\262\20182\351\273;\321\206\372\274A\031d\274\034\034H=\237_\035=\324\333+=V\320#=-5L=\277VN\274\331)\'\275\343qZ\275\335qX=\004\372\354</\237\317<\341;\216<\361\363:=\3230\t\275|\025\357\274@\301\320\273\3319\030</\n\r=\213\226\225\273E[ =@\333N\273\002\374<=sUI=\270\315\314\274J2\312<\033\021\n\275\2276\'=\016\253q<\335\214\017=\341G\307\274b\330\253<o\3702=9\t\332\271\360\235J\273\0022\270\274J\265*=\326O;\275)\217\275\274\375\005\\=fB0=\366A\021\274\317\022\317\274Z\2214=CQ\245<\333\324\233;\304\275\035<\201\303?=a\320\002=\246:\017\275,\007>\274c\362;=t\241\222\273G\211\304;\275\200\357\273<\177M=\357\336E=RF8\275\030\\\324<-%%=\365T\237\274\326\036\'\275\252\235\005\275\365S}\274\024\306\340\2748\233\272<%%\037=E\013?\275\344\240\315<B$\305<\032~\231<\215\232\024=s\253D=\274NB\274\272\177\214<\226+\306<\325\265\000<\271\364\337;\237\360%\275\t6\231<w\364O=\374\206\202\274J#\032\275\2622j<97\016\273]{\341<\362\004\232\273\334MT=\300\274\346\274\262\355\327\274\306^5\275\346\205*\275\263\326\217\274\004\216N=,\223\243\273)\332\375\274Rw =\235=><\021\344D\275\237\242<\275\324\231&;\226_\315<\226x\351<\030\265Z\275\273d\252\274\326)\333\274\365\016\\\275\034\267\323<d6\030<|\205\r=u(A\275\025C\365\274\236\2074=\0012(\275H\376\267\271i)W=\300\260R=\241\321\304<\n\257:=\251w5= \360\340<_%Z\275\026u\354\274\346\220\021=oN@\275{\036\035=h\270\356<=\273(=\207k\314\274\320\303\222<\336s!<%\307\205\274^g\023=\205\316Y=/`!\275\307d3=\367AF<+\216\333\272#\327\004<\220WZ\275\336\270?\275\\\216\312<\335\353=\275t\367+={\240\241<\313I]\274~\3161\275l\371\020\273Q\207\205<\251\234\351<\346e\312<\215\013\213<\310\265%\275\232\2575=n\206\315\274!\013\254;\201\217\330\274\203\257\010\274t\254\345\274\242\243\260<\026D\244\273\203\335B=\244\"c\274_\367_\273\010\210P<~JB\275C\300\002=,\n\013=\224^%\275\332%\341<\020\311\013\275\313\nI=\220\257\032=ho\263<\021\332\351<\323>\017\274}c\365<\272\304\006<\177V\021=c/&=\340\032\217<8\374\242;^\2226\275j\221\342\274\237\215+\274\266\273\006=?\257/\275\020\3511=\314\234Z=@\355)<\246\223\211\274jz\032\275[\251\021;:\034\223<|\007\351<\217$\030=Z\024S=\210\252+=o.O\275\006\231\273;\345d\004\275\270=7=\'\030\020=s8\'\273y-\240<\307A \275\020\343&<\"\2457\275\333Q8=G\266\241<\253:\027=L\334V=\353\236\322<\264S4\275V \203<w\372\242\273{\344\274\274\226P\004=b\355\311\274\214\345N\274P\243\277\274\213c:=\315\006p;\367A><li\237<\374<\350\274\274j)=\022kS=\315\332)\275\260\002\342\274*\363\020;e\340\036=P3\353<.\357\r\275?\334\014;\316|A\275\n\311\010\275\023\n+\275\312\245\037\275\301Q\230<;\261\304\272\2304G\275_\300\224\274\035\237M=\366\225\301<\247k\304<\207\203\225<+X\032=?\021>\275{L8\275U\020Q=,\234\r=0\277\032=]\035\260\274P\n\343<2t\352<\243\027&=J\253?=\332\206S<Xa\230\274\256\\\036\275\336\357.\275\331\374U\275CMA\275\r*\240\273\255\235G=\201\2548<\204c\365<C\361N\275\301)\036<\202\370k<\266!F\275\337&%\274\306\376\013\275\032\370K=9\207@\275O\270\231\273O\265\215<a=l<\377[\246\272\311\2446\275\367CZ=)\211\026=\300\000\365:\201\374 :\342\016.;\234\250,\275\233C\032=\332\326\273<Y\364\035\275|w\022=\303a#=\271\316\357\274v\'U\275I\272\202\274=\035f9\347\335\354\274\277]%<\217\252C<\372C\213\272&\206C=\236p<\275_\367\230\274kV\314\274W\225\222<!\331R=\204@\215<\3031$=\244\231\243\274\250\235\031\273\027Z\305\274j\202\370<\336s$\275\024\000\240<\221\360Z=\264-\307<M\'\027\275&\002\032=\3779\247\274+\206>=\253\332\030=\207y\035=+\004\352;\303\025$\275MmW=.\357\016\272m@\276\274\026X\354\274\005{\021:_\220\020\2746\235\0349_|\306\274\316\247`\2745\031$=4w\225<S\261\261\274\370\274I=\311\270\'=\2247\325\273/\3225<]\025==[\312\025\274~\r\017\275j\034\224;t\333.<[\367\277:\265\222\'\274\300XX\275\300\251\262\274\260\001\363<\256x\314\274M\334E\273\307\230N=\244\365\000=\203\3559=z\320\233<\352T\203<\177\352%=\267M*\275\337AY=\350\314\300\274(\260?\275\232|I=\032\003?:\234\333\226\273\272\257\022\275\244\035\014=Z\307\020=n\203\030=\352\263;=_b\225\274\3349\302\274\001\',=s\242\026\275;\327\221\273\001e;\273\303\344\366\274\'\004\t=hdH\274+\230B\273V&\n<\322\333\237\274Q\323\232\274\222\334P<5\021\200<\246a\026\274\3249p\274\265\310\001\273]O5=\202\206\220\274\201\365\032\275i4M\275uN\303<\263\236\003=\337c\030=\212\277 \275J\025\021\275\243\300X\275>t\322\274\255q\363\274\336\236,=\224%\"=*s\357;\223\\\365\274\332=\303<?\\\257\274\323|Y=\332*><\222\356\327;i\321\205;\345\024\373<\254\235G\275\322L\310<\026\367\235\2749{\364\274\225\370\221\2740p\331\274J\241\200\273\250\276\305<\344[\002=\260I3=<H[=\354>\250\274s\377\032=\272>\375;\305\020\252<{\355\245<\220=\266\273q\240\032\275\005\251\345\273\'\321\036<\356s\274\274\342\220%=i\037\\<\211?\322;\265\315%=8I{<\255`\376<\266\277\374<&\205\022\274LyG=\022\221\027\274\245\366\223<\222\222\034\275\216\3145=\251\325l\274\010b3;r1S=T\\\233:\313\354*=J=h<\302\232n\274\021\314\347;\\\352:<9!W=qe\013\275\345\201\245\2747\316\2528RD?=\213\t\002\275]\236I\275X\211\254<\272\346\203<\315\245\351\274\205k\211\274\205\271M\275\355\364I<\226\n\341<\010\027\031\274\265\214\317\272\250\277\037\275\002\022G<?\311\035<\311tE\275\345\215==\306,\"\275\014H,\275\231K=\275\316\3633\274\362\252V\275\365\307\373;\276\345(=\032d&;\322{\252\273t2M\275\016\322%=*\025\331\273\0374\177\274\246\310\366\274\212\352\255;y\037&\275\342\271\240<\343\374\317;\337\265Z\274fB\207<9\302G\275\204\336\304\274\265\271\027\275=/X=\307\376\000\275\'\337&\2753\033\031\2754\303\367\274\355\267\025\275\001\373v\274\351\237\225\274\377\232\322<@\274\034\274\243\037\330<\222\267\006\275\274t\"\275\0316\003\275\347\223F\275\215\260G=\020\243,\275\\\2641=M\357`<YMP\275\367\206\306\2731JU\275\260C\027\275\037\240\033\275\2640$\275Gq\251\274\234\003&\275\327\371X=\250\355(\275h\267/\274\000\244@<dXG\274^\177\245\274\246\226\024\275\177$\204<\336\245f<\024\352\217<\230\336)=S\016\005=fB\002=\377U\212\274x\331\024=o\2234<<PF\275\310\265\017\274\271\305\035\275\001\275Z<\330\257\005=S\017\036=\023\331\033=\263\030\202<\314X)=B\n\000=g\277}\273\264z\034=\215~\014<\030\203?\274:\343V=0\2517\275w\261[\275{^J=\254!\025=iy\232\274\376\220*\2751\276\022\275\022+\244<\255\255\014<SR1=|\266\031<\302`Y\275\201>U=tGB\275\301KO;W\006\237\274g\325\333\2742\177\310<\307m\376\274hr\233\274\214h];\304\204l\273\342y/\273+\313\221<.\224>\273\235\336\234\274u\010\345<\344n$=\3477r\273\026\216\362<_oS\275\270~\341\274VxF=\021\242[=\026\246&\275\010B\264<}mm<\253\035r\273-1`<\007\335\353\274\251\353\247\273\335\213F=\353\275\370<@\314\005\275\364\252\334;\2142 =\3041\234\272\247\366\214;)\365\033=\256 \007\275\353J\035;+\367j\274\3522\n=\217?l\274y]\n\275l\330\221\274\001\242\275\274t\347\334<8\340\361\274\033\363\215\272\335\'M\274ni\371;\365\330B<2%O=z%C=~\347==.\276\201\274t\354\313;\035!K=\355jX\274#C5=\366F\334<\311\017V\274\333\031\200:\006f\206\274\205\242\234<\342\300\212<\301\'\256<\220e\331<r\232\323;R\273\216\274\212\342P=\243u\014<\325z\325;*H\177<\021\r\301\274G\3452=\233\346q<\032\306A\275p\'\222\274\225\343\363\274\244\277\323\273_G\373\274\241\312\027\275-@\t=\374\244.=\002\306\310\274\206>\317<\343Q\254<\354\217$\274\262\302\324<\226\234\206<\226f3=C\273\025=jz\331<\360\333N\275J\335\'\274PP3=\375\035\003\275fA\025\275NJ\004<a ,=\342\\U=\3171\313\273O\364N=\024\306\357\273\203\236\003=\332>\271<\304\017\210\273\260q\233\274\032\271\344<\305&\344\274\014\223\316<\342e\036=\037Z\306<\213\232\373:~\027\037<\\\302O\275#\272X\275\203w;=o\3675=\332\251O\275\242X\362<\302<#\275\260:G=\030\225\001=\025\300\270<\216\312\367<\232\225\003\275\243\371X=\r\301\022=\237o\323\274\351YF\275OW\006=\002-\003=V\246\r=\312O/=\007\310\004=.\020Y=\321\200\001=\366 \n\275P\314\010\275\341t\304:\276\014.<x\203\351\274\213\020\034\273\313J/<S\023\017\275\234\200~\273\345\331\360;\305\2727=r(_\272\353\355(=!\205\335\274\213+\'\275\037&`\274\231`.<\267IJ\275\240\367C\275j\006\266<\220\226\354;\302\216U\275\327\327T\275\253/\313\273\2064F=\010\3221\275\323\253\326<\303\342A=\233\257M\275KZ\363\273\302\240S=\377\275\375\274\"n\242<\310G(\274\365\240\226\274\324\235\340:\270\2308=|K\330\274\177\372\237<\375\037U\275\244QP\275\254(\274\274\224\351\361\274q\241\020\274\364\267>=\274Ng\274\341\216-\275\246r)\274\312I\340<\036\225\006\275\222\353\336\274\307\224x<\251]\025\275\377\320\370\274\302\311\357\274O\345\375<\201\372\354\274\3559-=\373p\260\274ss,<\376\302\013=\025\344\014=\335\233\341\274\234c\234\273\223\244K\275\223\211\036\274\257Y?\274\310\245\321\273\300\245)\273-\024I\275\247i\010=<\226\002\2751\347\367:\250\257\230\274a\231L\275\346YN\275\303\254\366<\221s\277\274.\277N;\341\320[:\301\2564=\362!\031=\362};=\265\221\361<\201\310+\2757a\002\274\342\324\007<q\332\263\274\225\311J=A\371\022\275\305v\010\275\t\345\201\273\003\251\257;\212HP\274\000\333\224\274\346DY\274w\344\302<\303\206\226\273`=\r\275)\r\276<\336\342\301;\017\361t<\210T%;d\017\247\274\210\200\030\275t\217\261\274yn\375<\375\336\217;\267\215_\274\304\210\305\273\325\t\221<\273\003\352;\323)\264<\346su:?q\031=\231\\\353<\210\214\235<\213^\314<\003\275\255<\340\241&\275\3702\031\275\242\254E=\262\223&\275\240\2719=\363\233\000;K\266S\274\036\201\036\275\177A\024=nr5\275ql\255\274V\321\031<(\206\352;\234<I=U%\351\274\247s\004=\311\367E\274\313f8\275\322\225\030\275&\271\211\274\267|&<\221\351\230<\375;I=isw\272\332\340\210\274\203\2153=,\2411=\310/G\275{\006:=\024N\266<\262y\027<G\230\264\274u(@=\333qR=\350\007\247<\206\026\000\275)7e\274\242H\200\273Uo\023\274\307\217\232\274Z\254\026=\221G5<\322\nC\274f41=z-\316<\030\nT\267\310\322\013\275pE:=\\\256\315\274.\330\332\274\312A\030\274\225c@\275\376\332\000\275\211\234\326\274\027C\207;\207. \274M\207C\275_\216\362\274;\033\254;\004\261E\273\241\2271\275\232\252\274<o\244Q=r\2343\275o\034\377\274n\346\245<\342\207\367;K\311\360;\020\325\302\2723\371\247\274\272]e<\337\031\013=\003\357\022=\202?\353<|\210\371:y\314\242<l\261\370\274\036\316\010\275\205\321@\275\016Jo\274\243\202*\275M\370\'\2752\327\033=\307\320\372<\326=\302;\006\326\017=Z2\014=7\t`\272\274\373\270\274\322n\300<\276i\326;w\234\360\274\221\217\332\274\371\274\354\272{\025\'=h&\005\275\373\001 =\'_\262;\332z2=\307\2376\273,]\243\274\245\251\010:\037\350\221\272\']N=t\311T=O\211\317\274\301z*=\324(-\275+\265.\273\274\321\314<)IY\275\364\237\346<\027b*\275x@\036=^\366\025=r)F=X\327\030=u\314/\275&\231\221<\216\206f\2748\217C\275(\322T\273\210\352e<\3474\275<\353t\002=\205\230\263;l\3119=G\346\202\274\232\307\017=\275\277\003<\227\267\273<F\343\212\274\366C\320<^\n\273<\361\335\'=;\023\"=\250\241\321\272\240\020\212<\202\377\037\275q\367\026=\267\313\034=\316k\262<\243\347\000<:\247\326\274\006\023:<t\365H\275\326\320\000\275/\261\216<\266\273\300<\351\207m<gj\031\274\275[\344\274\353\204\n=\215Z \274G\022P=\237-\333\274{0T\275m\314\260\274\261`9\275P\234)=C\371\306\274\212\214!=\344\215R\275y\314\000=Ur\324;\246\262\013=)\377\217;$\3646\275\024\261,\273Z\007k\274\205\354-\275\017\3139\274\347\177j\274E\210\264<;\354\316\274l\243E\274\350\234*;\377\2336=\245\355\366\274\032\271\353\274\233\374H\275\221\257\237\274\010\276D\274\364\215\261<F\250R\275:\234J\275k3\347\274\021\242\340;\344\205n\273\351\342L\274\266\242\005\275^[H<[4\361;\356\213\251\274B\2241\275]+\257\274\225\260\006=\327\334\210;!f\332<\010\356\340\274 ]\t\275\035c\310\272\237m6\275*\223M=\345\036\370\272=*\335\274~\000I\275\3266\371\272\224\272D\275\223\353\027\274\3234\020\275\376v\307<\007Y\216<\200X>=\031\274K<Q\225 \274\322\245\320;\367\324\201\274,u)\275UvX=\n\3141<\303\270\022\275\240\347\010=\rc\351\271U\3000=\373XH\275\343\225*=\303\263\274<\210\371Z\275\347\314\022=\0079\357:\025\263^\274\016\242\353<\233\263\310<\213\'\351\274\020\250\016\275\257\305\262<X\317\026=\370\213?<\014\331m<D\3142=\346`e\274\371.\034=\234\226\266\273\326\2624\275\356\255j\273-\350?\274\227\372<\275\335lC\2749oX\275\350\270!\275\374tI=\004\010\231\274#\261\\<,9\306<k$d\273\360^\022\275\244\020U=\274\352V=\351g\347<\274\254<=\256\276Q=\366\254\342\274a\326\275<\177\252D<\177\324\002\275y\212Y<\334\207\300:T$\256\273\216\035=\274\tz{\274:\023G\275h\362\024\275\322\237K\275\341\335?=]4\"<9\010\346<\321\272\247\274\332uW=Y\251\215;e\344\006<})\312<\244W\003;\220\274\267<~9\335<\346\033\263\274\366\3104\275\205\024L\275\276{\031=\261!\372\274\274i\326\273\251\022\222\274\212\324U=\241\2679=\304-\345\274MX\253\274Eo\326\274CC0\275\000\307O<\322\230+\275\314\257\230\274\272k\322\274\010\215\362\2741\375\265\274\320\364\027\275\023l\243\271\324\333E<M\304C=w\215\257\273\217\353\317<x\252==\375>\365<p/0\274\356\325\240<\016FX\275,\323N\273\351\366\224<+h\220\274^\261\247<\\\'\016\275\300pH<\334\340\022\275\221\377\341\274\223\306\237\274LG\227<\2779\335\273\256\237D\274\361\241\002\275s\025I=CJ\036=\343fE\275a\006\324\2749\232P;t\002Q\274H\337q\273a=\016=dE.\275\375\277\316\274F>\\\274\245\337\036\275\"\177\000=\337\350|;\344iJ\275\305\017W\271\316\367\213\273\r\026{\274\003\370\345<\323\351\031<{Ce\274\346\331\253\274\361\235I\274\222\355\343\274\363xJ\275\007\236#<\222\3512\275s\374\231\274\303\2631=\222\020\332<1\251\r<.\326\003=\014\3673\275EF\346<\330y\014=\352\263h<PG\366\274\031\\\034\275\347n\310<F\317\027\275\216\300\007\275c\213F\2750X7=\333\266=<\031%\232\274\013T\236\274\221\204\033\2755\355\360\274\265\337\353\274\346\321\243<k\ry\274\nST<-\030\337\274]\232\202<\t@\375<\031\321D=\035\377\023\274\320\002\331\274\246\347q\273\247\364\252\274\326QA\275.\013\305\274\271b~\273\024\023\021\275\215\272\256<x\002\327<\351\372E\275m\361\203\274\003jE\275\213\256\314\274\212[\264<)\251t;\037]\031\275\324\363\264;ip\306<\227\3427=\014T\344\274\223\347\373\273uN\202\274K\314x\274-\202\265\274E\222\035\274\247\231\361<\342\344H\275\212\023:\275\353\017A=\222\275\267\274\317\346H=%\030\272\274c#\341\274\347a\323\273V58\275]\2553=\366\242@=\273|\016\275\3436&<`\372\020=W\305\037=\026\023\315\273\226MR=\n\014w\274Pn$\275\360pD=\265O@\273)1\246\274\001p?=\226\322+\275\005W\016\274W9\322<Q\021\322\273\026o\257<F\207\010\275\222\237)\274\273\202t;\250\250\366\274.G)\275\212,=\275-\364\020<_\220\340<\300\263\242\274\n\010.\275\305\022\024=\354\357?\275\225\243\260<Q(\357\272\037\367\214\274F\033@\271\246\231\274<,gS\275\023\317\234;{^\207\274\210U!=\314@\363<H\364\232\274\256p\017=\205\034\204<\263\337\026\275{\275\246<\0062\031\275g\364_\274\005\315);\207\304\022\275\3054%\274\343*\000\275K\255/\275N\266\363\274\303\220F=\254J\003\2755\026#<.\226\236\273\2625\236<s\212\026=\271D\322\274\302bQ\275\222<\233;\220UM=:\230(=I\371\217\274$\244\022=1\377/\275\354@C\274p\033R=\024\343,=h6\010\274\003\027y\274>k\260<g\214H\2742x2\273\034\272\004\275-\254\014=\252\231\027<!\330\256<\353~\206;N\232\030\275\026\3356=t\333\253\273\016\314\342\274%\277W\2748\237\263<\031\'\006=\376\263\350<\\H6\274\022\177\246\274W\"\232\274\342\271\267\274\275-\020=\324\313\004\273\247S\023\275\337aq<:\222{\274wS\033\273\373\303\324<\305\275V=\227m\021\274\326\250\030=\032G\222<{\017:\275\352Nb\272/\205\330\274GQ8\275NLL<2\244\t\275\332\010.\274\261\305\025\275~\305,\275?\324\340\274\300\226\311<\3374T\274g\215P=N\224\232<rK\347;\366x\003\275\202\313>\275I\323\240<\035\315\273<\263\202N\275\230Lz\274\262\223\261\274\345\300@\275\356\215\016\275R\377-=\260\335\031<l.[=\346Qj\274\263I,\2754\275\014=W\251\375:\3031\322<\225\033N\274);Q=\306\327\301\273|Q\246<\346\2617\275\'4N\275`\030\367\274\322\341\345<1\363\007<-~\235\266\235\023\246\274\245\326\325\274?\2766\274=\037>=\354#\314<n E=%\356\247<5\373+\274q\231e<\271\326\315\274\001[,\275\036f\007\275\364u\353\272\nTD\2753M =\215\000G<7\213\242\274\356$\005=\273\025c<\031W\204\274\301\0327<6$A=\363 \243\274\2253\245:=\327h<\377\223\034=H\377\233<\363C\302<R1{<[\320L=\001F\222<v\220\t=\031\220\377<X\3122\2759@\037=N\273\265<\236<\244\274>\032\033=1\005\371\274!\300&;\311\'\207<i\265&=\204z\230<\373\226\315\274\210\336\212<\003\232\005=L\t,=\360\236E\275.\231[\275s\236\317<sR\336<s\037\207;\267\337\023=\331!\002\274\307\317(\275i\311\025\275\332\366Q=W\363Q\275\r:\r\275\231\2377<Z\3468\275\234\272$\274~\004$=\t\024V<\r\313V=_7\"=\223\247-\274\310\340\357\274\270w0=\355\303\033\275\001t\001;\0326@\275\235\353\030<\3056P<Z[x:\036\231\220;.\263\365<\027\005\002;n\013J=b$D\275\240w\"\275\230\262<\275\262\314\244\272\023^\207;FJC\275\221\376\236<C\221X\275\375\020\037=sa><\236\353t\273=1\\\274Rm\373<\261\340\233\273\016\321E\274ZB1\275\225\340\021\275\3137\301\274\327\020W<\256\254\036\275\253n\310<\222\310\256\273\013\034D=\024\022Q=\243&\021=\211\353I\275\361O\017\275\371\237\363\274\327\024\022\275K\347s\274I\347G\275o\320#=\324\237U=0.\357\2744\3669=q\334\327<{\322\021\275\317\010\276<\200\374q<\300\356T\275w0\362\274\224\320\366\274\031\236,\274dY\234\274\010-P=\232q\003=,_\232;\301LB=+72;\020oE\274\254\367J=\027;\001\275\244\342:\275\262\"1=\265\234\247;\260t \275\0208A=\3657\005=\007\315t\274#D;\2756\322-\275\217\236\224<\r\031\356\2749\204\321<\374\363C=\264\330\n=t0\325\274\013E\326<{\036\335<\266\177\360<\3469\033\275Qj\365<\332\2454=\213C\210<*x\003<w\313+=. .=\343\r\335<\036y\257\2743\346Z\274\217\2659<\020\033\302<\t\253\324<\200\254\t\274V\376\002=\030q\314\274\200\0074=\213\214\350\274\260\373\014\275\025;O=\322\225\354\274^\001J\273\350\243\353<\335\316J=/\355\262<\234\372\010;\356\227\233\274\204[\355<\200`J;\327/\014<\310F\033\275\"RK\275\216\331Z\275rH\223\274?\3213\275\305\205\340\273TR\210<Dg\370\273\032*X<\t;L<\233`,\274!\327\253\274\265\275\234\274N\210\r<\275^\030\275\217\260\004=4\225\243;\370ou\274As\206<x\\\020=\221\276\001<k+U=\323\277p<\370|C\275\343\003q<FJN\275\336\351\223;\\\203\002<\004@D=I\224\331<\362\307*=\304\217>\275E\370y\274\3602W\274\261M2=\002\254\205<\341*\255<\2252\266\274\257\"Z=\205\206]\274PQ\203<\245\241\351\273y\264S\275\306\022Z<\177\034\353<g\231 \275%^T;\272\255D=*\276G;\367\026\\\275\345\371U\2758\2202\275bX\234\274\273\025\370<\353\2270:\211{-\273\245\004,\274Q\214\023\274\246\231Z<-L%\275\226\272]\273\256\352\321\274{\212 =\344\037\376<\250\300\307\274[\271\354\274\303kO\274\321\231\275<\274\206\001<\000\316\362\274k\004 =\250iK=\247\344\357;Q_#=\216Q(\274>\3772=\027\314\316<p\203\217<x\243\232<_|$\275BEv\274\013\177$\274\032\312\272<\002\332\037=%\334\224\274\001X\031=\370$\363\274\307\332\354\274@\017\031\275G\220Q\275\351\016D<\304\364\'\275\342\231o\274\001}%<\004\306\030\275\020\205:\275znb<\244\236\312\274\266\203\222<\314\355\004\27366\007=\\p\204\273\310\210<\275\203\244d\274\350\3736\275\242D>=\3414\204\273\"\312\356\274q\322S<\315\375\272\274I/\030\275\262ez\274B\272\326\274_l\316\273\017\203\321<\267\231%\275\006\213\371;\301\221)\275\227\003\372\274!BZ=\261\200\004=\nt2=Wa\376<r\202l\274\202\361\367\274\030\273;=j<\230\274UM<\273\004\221@;=\200\235\274\354>\007=lE#<\313H\264\274\366\243#=\254\303\236;\310\302\276;r&\317<x.\'=Nu\235<\231\323\350\274\030\371\034=.[G<Z\331\013=YUQ=\322\365\035\274\363\365\271\274o\260\321;,\030\343<\242\034\016\275\2172!=\007r\177\271B\270\315\274\356v\371<\337[\"\275\036\356\'<\t\347\377<\213x\003=\310\230\346<$\346\002\275s\262!\2756N\313\274\375\350\201\2748BU=\"\360\311\274\233\261-=\013\343?=\263[\301\272e\306E;\023\336*\275\032\231\356<\235\203\271\274\003mN=\214@\355\274-\2010=\177\336E<Uz\t<\210\257:\275Y\274\026\274\267\274[=[\255\326<k\347;\273*2\370<\375\364:<0\'\034\275\023\267*\275h\260\245<\312\357\037\274\306\277Z\275\356w\264\274\246\361\334\274Z\031i\274y\304Q=&\320\221<\3539\223<\000\271\312<\273=d\274\225G\004=\203K\302\274CI\225<\276#\024=\026\223H\275J#9\274;\300H\275\353U\224\274\007}\275\271\373\316W\27555\251;\3630\013=b\014\245<$\243\342<\370\201\r=\00763\275Z9J\273\303\374G\2758\025\206<\263\375*=%,#=\332\006\026\274wr\324<\255![\275y\350\366;B\001\267\274#\333\340\274\316\375\033\275\307Y\260\274N\266;\273R\241?=>\307\366\273\370=\310\274\230Q\024\275\341\003u9\316\007\t\275g\026<=n5\221\274d\233S\274R\221\303<\371\3001\275]Z6\275\306\272\245\273G\344q<\373\236\314<\3634\307<A\225K;h;\252<\202\212\373<\267[\267;\033\276\003\275\2231\027<52\307\274\241\201\362<\330\273a<xP\347<\312(3\275\265<\216\274\217\365!\275\317i\r=m`9=\317\307\r\275\336\017K=jN=\275\310\224I<\201S\264\274\020vY\274\316\245\270\274\005;\020\275H\035\036\275B\257v\274[\020\274<\374=\'=xcD=\247~\007\274\262\341\262<\244l\020\275o\345\350\274\237\374H;#\266\326;\r\010\251;q\003~\274\245\374\021=\304?\261\274\316P\303\273\241q\005\275h\231\r=z\243\342<\252\345\302\274+\000(;Q\212\000\273\020I0\275\031\022\210;\223\230l\274\302\263\233\274%A\233\273\'\322\030=\337\270l;\3115\216\2741\277\342\274l\344\263\274\022\2726\275\271\301\211\274\344\264r<H\026D\275\212\237V\275\244#\200\274\2337\372<E\216M<\214~X=H\362\031=I\242o<\"x\337<cZ1=\236^@<p\375>=\230z1=\024\353\251;f\2301=\360\255N\275\260\223\026=\360&\207<a\260\210<\311>K=\373\314\034\275\337\321\344:P$+= J@<\356\275\217\274\361\216\227\2742\364\352<Y\025\031=\250BE\275f\265e\274ZR$\274\315\002\253\274|Z==\353\t,<\'\t\010<N\0049<\310\237\016=v\364\t\275\223\223\334\274\211\317D:\030\321\372<J\000\016\273\003A\343<\016\3224;*\030\222\273\313\034\204\273N\025\243\274\210\032\\\274U\363\037=\326n$\2750\3642;hy\017=\236\210#=\3656u\274b\2212\275\367\277+=\365\314D<\212\252\007=\363\324\371<\313w\244;v\241/\274N\003I\275^\342R\275\037\277\235<\234\233\270:\252O[=C\203\276<\006\372\351:\036<\242\274\004\2115=(\374\260\273\237j\017\275\304\323.=\3173\004=1/\255\274^\261S=H\266\267<\014\364N=u\373\317\274\351\2527\275$\353 \274\031\336\303\274\216\235\200<h\342\342<u\304C\275\325*l<\223X}<\357\323\213\274T\374!\275R\374V\275\3206o\274\211\217T=\326\244\301\274k|1=\335\'\321\274+V\276\274\022\201\272<\037\356\217\274\036\223K;\222\203\003=\240\3474=\224l\002=\240\201\206<T\355,\275\004\346\314\274\340\020\005\275G\244H\274`\362\306<\017\314+=\033\334\255<x\225%=A\227\010=\267\007\240;?\270\375\274\332\371\274<j\270\023=\020\234\374;*\"P\275\267\033$\267\206\3329=\013;C\275\345CF\275\345h\242<\364\352\356\274\225)U\2754\333<=VKI=\260\246\357<\021Z\243;V\241\215\274\013\344\220<\230\177e<\320j1<\273n3\273\340\024\020\275\3139\307\274m\3334\275d\245\223\274\203\337\002\275q\007/\273\0201\006=2-\247\273\272\226T;\324\313\214\274i\343\204\2731\216\037=g\327W\275u\272\004\275[l;\275\310#\226;\272\246\202\274w\227*\275\316\350\r\275G\300\232\274\316\310\340;\307*t<\241\2471\275n\275(=\002Y\007\275\231_P=\014l\002\275\374G\007\275\246\355&=z\010#\275\350\340\305\274\313\241\310<~/\024;\032;\341\272\365iW\274\332\231&=\211V\322<awY\275\000\256Z=]\\I\275\321\250\027=\332\3448\274\024\234.=\204\334\035\275n\244\000=J\237\300\274\232\341\246<\266f\305;\342\257I< \2714<$\177Y\2759\'\353\2744,\271<\036\034\363<\240\204\215\274\024\221a<a\254\223<s\n5<\363(\343\274\017\n4=\257\313\271<\240\036\276\273B\266@\275#)\333<\360\267:\275w\003V\274\226\302\026=fDW\275\030\037\376\272\223\315\r\275:c6\275\310\316G\275\240\335%\274R\342\033<\236r\215<\327\361-\274K\022y\274L\231m\272\371\204\026=\0333\026\274gx9=p%T=\200zS\275^\213\320\274K\254+=c\205?\275w\246@=\212\305!\275!\374\324\274\035\217K\275\302#\337<\246\r5\275\351JS\275\217\224\207;l\\%=\337eT\275} \3279\010\276\010=\000\375s<KM\024<\352\266+=\227\205V\275297\274\231\202\334\274#M\023\275,\014V=*\260\324\274,\215\221\274\200s)<\261Q\021\275\257n~< ~\214<l\245\371\2741\274\007\275\0252\264\274ev%\275\030\267F\274\362\207K<`\316\336<2uJ<AO$\275\240\252Y\275\373\366\177\274aC!;\375\3031\274\033\332Q\275H\236E\274Q\274\255\273\334\013\016=\251\225\357\274\020\256W\274$\371a<EQS\274\207\001\317<\254xV=\327\264H\275\373cy<0\327\031=\255\345\000\274F\2322<\214\314A\275\274(\231<2C\010\274\330%\265\274\236\370\343<^\2006\274\361k3\274\013\004R\275\003j\326<S\266\347\274\232\\\210\274\025\034\023\275\305\277f:\330\326\"=\244\257\005=\255kT\274\203\016B=<F\277:8\2753<\rV*\274\006\237q\274\261\337\271<\241\322;\274\231\017\265\274\252\0379=R\300\211\274\266\276\037\275\273\342\305:\n\367\315<\376\357Q=\220\374\023=n\356B=\245G1\274\234fU=1 \225\274\332\256\021\275\351B\024<\031\311U\275\210O\r<\304\257\000=&\376M<\350\022\372;\r\255\232<\277\352\210<\"\256\n\275\231\223\022\2753\004E=x\014 \275\364u+<\331\221\233<\006\323\024<\322\205\311<\251\305;=\3241\256<U\355\342<\353\355\217<\232/8=\331\357S\274\227\310\026=\027\362(=\363kp9r\0170\275\354\006F\275S<\324\273g\265\204\274x\274\306\2748{\250\274\r\211K\2736\254\377<\342\245R=5\n\024\274\327r\300\272\343>4\275\270\254\351<YR\364<\354))\275\277Z|\273\275\337:\275u\016\010\275y\3742=\023y-=8~\270<\357B\356<\364\007,7i !=A\252\020\275\343!v\274\277\354\235\271\360{\256<\252\225r;\374\357#=\230\323\217<\210/\033\275Y\242M=\026\327\277\274b\024\253\274c\223\017=\241#\220<\347\206!<3W\025=\203\337\207<HY\370\274\370\241\223<Z\374\003=\274r-\274\375C\030=\264\343\227\274Pj5\275{\2477=\313\\\312:\300_\370\273\212P\345\273\225+T;\214z\354<<6\031\275\032\\\347<6\200+\275\020\274\"=f$\"<\366S\235\274\254%J\275WX\373<\360\016_\274\321\022\000\275\203\255\014=\t\327\376\274@~\026=\200\375t<\330\022?=;\232\353\274\254HV=]eQ\275$\262\360\274\254\256\356<\311\315\007=\225\321\353<\345\004\366\274P\"\312<\016*\327\272^\323V\275\026\0070\275r\200\266\273\245q\205<\364\237d\273\264<V=\262\337\036=G!\264;\241\331\345<mm\200\274\306\244n\274\374\311 =\203\002\276\274\177\251P=E\247\321\272\357\243\254\274\305\303\332\274\"\0067\275;~\317\273%\237A\275\013p+=\001jz;F<\365\273<\024\277\274\206\200A\275z\354A\275\363\311\376\274\377\352\014=@\325\243:lo\355\273\022[S<\375.+=\276\241\312\274\"\201\021==x\261\270\226\r\215:\301WI\274^\202\024\274A\321\014\275F\016\205\274C\274\340\274\2259\327<\211\006\357<!(\331<\265\027\022=\255\206C\275\215\0348=[\256\360\272J\014\317<\027J\226\274\327\232w<>I\311<\210\277\232<\261r\332\274\334]9\275\273&\016=\275\200;=\014\367\346<q\t\204\273RD\305<dw\034<>T\272<\024\226\034=\241\357J=\362\341%\275\227\334\263\274\332_O\275\303HB\275\373M\337<`\2162=\340\344\203\274\312\324\374\274\2465\006=H\373L=\345\0374=r?/=\264\366\227<\r,\275<\240\256/\275vv\206<\252O\344<\213\222\037\275\3421\202\274\343\005<\275\374j)=\220/\022=\207|\021=\271\207\374\274\266\002C\275]]\014=\265\220\263\274\020F\367\274r\t\236\274\314N\266<\210\\&;\344\211\023=\224\2312=\340r\204<\234\214M=5\263\024\275\373\356\036<\302y\033\2740\001s<\032\270\023\275UbR\275\007\246T<\304\346\301<\267\217\263\274\206\341R\275\224[\252\274\335m\200<r\215$;\017\271S\274Z\277/\275&\257\017\275\007=K=\307\200M\273>\016\242<\251\277\231<\313\254\314\274\325\246\323<\364uA\275\031f\270<\266f0=\367\335\345\274yd\321\274\3653H\274\244\277\005=\213\303\025\275\275\375\330<\267\354#\275\257\356\240<~l4=-E\022\274?\355\036\275u\260S\274`\006\252;\212z\324<\225/+=\351\013\224;\324\326\314<\022\3704<4g\004\274j\006\376<\215\260\013=tZ)\275\303\n>=Cs\023=7\363z<\316-X\274\016\211X=\310\375B\275\000\357\t\275\274\312\016=K8\233;\324Tn\274P*\310;?c\236\273\226\210\366<\262B\201\273\306\375\307<qW\006=\005W\266<;d\202<\377=\364\274\376\327B=cG4=\346\204\017\275=\246\013\275\315\270Q\275\2229\003;q\212\2239S\272.=w\264\237\274\372\030a\274\'\355\306\274b\350\253\274\331%V\275\316OR\275-n\213<\267\007V\274\374\3745\275\361\235W=i\224\223\273V\212\206;\267A\017\275\346\242W\275\255\250)\270\252\274\030\275\232{\226\273\327\3627<I^\017=\324(&=\347-\202\274\323\333M\275\354\217\022=\320[\347\274\273\034\007=\320\2147=\300\033\026\275\266\177\364<\035\300\002\275\272\341!\274\003\333*\274\303^ =$!H\275\362a\026\275\217i\3739X\366A\275x\214\231\273\235\323\010\2752(1=\251\354\221<\353A0=\255/!\274\205\337\360<\024\231\002\275\323>\257<\202p/\275\211 \024\275\221^6=\301~\010\275\356\215\010<H*\277;(\326M=y\226/=@\257!\274b\305\377:\177\203\013=\271\253f<YJ$\275\277}\275\273v\236T=\204L\244<A\016/\274\314\333\377\274\036\236\014\274\363\t\007=\2779O<C#4\272\363\356\232<\242\225\014\275)\276=\274\355*\027=\224<\'=\036\322@\2756@[\275{\276\306\273\250C\033=\222\351\314;b$\362<\311\246\030=\000#:<\323\344\025\275\363\202\230\274\037)\005=\251\002\r=w7\n\273#\343\303<\257\221W\274\212W\213<U\244\376<>\325\347\273\241\331\374\274\036\007\256;U\337\007=Sg\035=O)\355;\320\237\243\274\2270\025\275\315*b<)\"\255<C\305\340<Z\3402\275k\207\226\274J\202\004=./4=\240\226A\275\307\353\025=I\341\250<\226{\253;\023\221\034\274U\'\010\2753X\031=)V/<\306\3753\274\261\341n<X\207\037\273\005\035=\275\357\277\'=c\0339\275\326\367\352\274l\354\374\274\264\220\240\274_jw<z\307\026=\014\000\274\274\232\366U\275\267\335<=\327\000D\275oH\030=\301\203\306\274\244=K;j%\025=A\303\002\274\307$\343<\026\017c<o\305\324\274^\"\255\274\3742\020<0\361,\275\366\002\t<\265nA\275Hj\000\275_\277g\274\217+%<\277\321\327\274X(\216<\031h\201:2\234\214\274P|6=\001S\024\275l\214m<\265\233H=\256EH\275N\230!\275\370I\362\274\020\212\3339\350\366O=\232\367\221<\317\246K\275\374\236\224<\355\275\202\274\225Ps<y\360.=J\r\360<\031\365Y=gv\223<\350\353\301<\214\361J\274\321\354\272:4t?\272Ea\027\275ax\326<p[3\275t\267\001\275\200`\032\275\277d\013\275\367\313\324<\313\217W\274\026\025\345\274(h\355;+/\016\275\202\327U;\356\362\355;/\376/\275b\355\006\275tNs<1\276\023;0.A\275\267}Y\275\210\322b<\341\\\226\274\336l2\275\225nR\275\370\014m\274\036\374,\275\007\213\327<\n\304\275\274\321\257>\275\006o\277;P\005o<\000\330\372\274\264E\025=\020\213\214\274\026\223\344\272\3503\003=\310\251\335\271\241\364Y=G<\223<\326\016\272\273\222\212\252<{\340\227;\200\317I\273\036\361\260<H\3545=,\024\241\274\337t\350\273\010w+=\257*\017\275\235\352\014\275\346\233\236<S\254\030\275\223\2607=\\\214\332;\226\005V=\376!\303\273\363e\255\274xK\004\275\317\367\302\274w\025H\275\202# \275\351|\332\2734\274\264:\342\247\362;H\342\"=\354\341X=\016\317N\275\371\254x<x\353?=c\370\024\275\343N\034=\264=\267<Y\232\221<\372$\036\274[\231~\274zY2\274H\237\002=\273\207K=u\330N\275\265\025+\275\235 \245\274\000%-\274\276@B\275\203\256W\275B\354\336\274\252\236Q:`?\017<\210\r\311\273\301\231\016;Fa\244<u+\324<\251\251\301<\243\307\310<\203\\\301\274\250\210\001\275~\024\321\274Nb\031\275\024\024\243<Z\271 <\ny\322\2746k>;\277\361\200<\212\3343\275\372\250\334\274\360k\265\2741U\254\274.o\032=\230\372\t<\232\310\353<\225\331!\275Yz\313\274WO\365<o\200\356;go\316<\320\277\022<v\347O=\365\237\031=R9\257<\325\373+<\324\331V<H\222\351<x\331\026\275\2133\007\275\270\212@\274\255\235=\275>\327\306<\325g\'\275qS\027=BV+=\371a6\274\224\316\352;-\0012\275j\034\264\273i!\014=$\'\016\274Hx\375\274}\337Q=Z\354\337\273D\232\361<Y\275\001\274!\341\t\275\3019\265<\361\275[<5:\200<[R\031=z\2752=#\036\377<\361\252Y<\360\251\"\275H\210\376;|HO\275\326\276G=g\"\220\273(J!\275\305O3=\034\020A\275B\032\003\275\034\'\217\273%\346\207\274;d\271\273\306\275a<\232eQ\275\223\346\260\273\210;%=8\243V=T\235\327<\342\2625\2727c\'\275;`0\275X\264\315<\360\361\004\275\366\n*=\303\005P\274V\2523\275\234\n\220\274}\371\226\274m G\275y\350\342\274\347\016\233\274\'>\340;\007zK\275Q\016(\275\376\350\024\274\366\225\263<\320\2054=02\373\27370\213<\255:H\275\261\217,\270l\207\r=\267\322\0068\262\266\263\274A\375)\275^P,;\335\212\006\275\204\2161\275\364\3561<\367\313\004=\327~\254\274U\346,\275\323x9\275E\323\261<\017,5<\251\331K=\357\027\350\274\243K>\275|\227\324<\022n\210<g\363#\275+Y\327\274\273+\314<\343\016\325\274F!)<f\3514\275\224e\n\274v\342\212;\\n\"\275\242A\206\274\230C\301<fB\016\275\003\213\014=l\035\367<F\233\314;\277\344\320<\275K\323\274\020\340\332<\350\330>\275\364\235[<\3638\207\273;V\376<!/)\275:\314o<f\\I=x\010\305<$|\343<T\030K\275\r\004\340<\033\202#=\324\035\020<\013\n*\275\274\305P=y\217,=\2262n<\230\242\271;[u6=#\331\352\274\021\362\023\275N\344\010\274\334\202\201<{\300\316\274\320\025V=\216\244\205\2724R\302<\350\265Z=\345\244\016=\332\023\240<\231|\240<\304TD<pH\342<V\246\017=\003\336\007<\202:\022=\243\272\036=\350\217=\275\305&\034=`\207\224\274\352\036\"\273#\245\361;\223\366\343\274\343C}\274\277E\275<O\001\201\274\003\373\032\275\363x\310<\237\216\255<K\0319\275(|\305<\276\301\307<X\030\025=\210\376\277\274\371\002\013;\325\252X\275e\374\032\275M\3714=\321\274L=\207\261\007\275q\375\272;\177\373J=\277\373\036\274D$8\275\252\215Z\275\300\332\336\274\026\324\003\275\016^|\2747\257\037\275\331d\354<B\226\277\274L8\030\275V\210\253\274Kd\205\274\006\310\327\274\253\352@;^\022\372<T>\'=4\204\311<WX\215;\"\030\367\274\243OJ=&\274#=\201\366r<\254;\233\273~\274%\274\020\265\240\274\260%\337<M\350\r<\333\204\t\275\0003\313\274\025J\347<\357\202\310<\003\204m<z\2312\2732Y\273;Pf\036\275\005\340\227\274\016\262\270\274\313G\205<\335\357\366\274\265M\321<\226\262\"\2746\2471=H\212q;\204\252,=\365\'\206<J\356)=6\013\356\274\317\021\331<\340\336B=\205\036\374\274Q\020Z\275$q\302\274\367#[\275\301\334O<\226\210)=\235\330\261<\301\256\351<gS\321\274\261t\347\274h\225\203\274\235\256\242<\024(D<\022\257\275<L\3557\275d)>\275a\304\355\274k+\226\274|\215<\275+7X\275Y\206D\275\365\254\314\274\324\344$\275\036*4\275h\376I=[\004\223\274\034\3453\275\350\274T=\320|\363\274\257\316\234\274c\221B\275\374\241\001<\307G\037\275S\3024\275\232\'\202<q2J\275\366\214=\275\360\377\017=\336\373\027=D}\200\273\301\316\'=\224Z\350\274\330\311\"\275\337\344\023=\2239\243<\200tS=\313\016\037\275\333Y\323\273P\245)<\006;\246;\2742\033\275#\334\340\274u\341Y\275%\004\367<ey\375<c\\\206;\3274\025\275\206\2662=e\354\252<!M}\274OC\330\274\365[\037\275\254\267\326\274\313`\310\274\0141\246<\025\223\236\274\273\347R\273K)&=\243\333\324<\032\2143=8\357\033=\364\020n\271\274Q\274<\216\274\001\275\004\276\224<\313I\311<\343\220\313;\240#i;\2375\343\273v\373<\275\304_@\274\2160\037\275DvV\275`\246\014\2746\236\250\274\215^0\275d\243\005\274\262\240#\2755\221\322\274R\251\r=\010E\255\274\367;\377<Z|\320<\243\315:=D\017l\272\341\305\247\274\2665C=\'\260\355\274g\024Y=\374*\243\274\004C\215\274X\224\030\275\310\006R\275\\\005\223\273\022x\005\274\331j|<\000QA\275\224\307S\275Y\235\020=\300d\035\274\032\370W\275\311\216$\275N=\314\274\021\203\376\274\375\377<<)\013\327\274F\220\373;BL\350\274\303\311K=G\357\016\275\304\r\246\273\211y\232<\374W\270< L\005\275\227\330\026\275f\0308=\362uC\275\213\235 =\306\3466=\262T\363<Nj.=\351\247\300\274,\024\025=@\223\354;\334\367\275\273;\316\247\273\n\243\250\274k\252H\275\013\037@\275\352\263\027=\306\237\210\274\307\246\347<\250n\001<;p\321<`4>\271\224rT\274w(\006\274~\2632=3\214\365:X\032\225<\312\257D\275\331\264\365<\233\025\235\273:\335K;\025\030\r\275\351\201 \274\240;\274\274$]\256:\207\0174<\332&3\275C\0351\275\314]\340<\224\215\213<\371\244\024<\212\266\177\274kH\377\274\3700\022=\341g2=q\021\307\274E*5\275\267\020\025=Q\270\302\274b\205\023<\021\341&\275=\354\016<\336\261\252\274\024\341\347\273J\2332=\256\371\322\274\264\272\367<\263\025\261<\265\030,\275\301h\252;$y.=\003\233S\275\220\252\233\273\315\007\265<\323K\326<\034\255\000=I\3123\275\270P\353<\037o\265<G\3601=\341\031\311\274\227\"\235\274\032\337\035\273T\313Z<f\3253=\244\216.\274\355_\003\274p\320\270:\304\356\276\274\005(\"\274\367}\222;%\350\305\274\367\341\342<X\"\021\275vuI\274\3165\025\275\362\035\024=\2512\212<}*X=gO\344<\256\374\037\275;\273\332<\217\305\r=\250\033\013\274K\3630=\243\337\263\273\201\367H\275 \2410=j\020$=\221[M\275\034;Q=\340\203\311\274\204\325B=\302\376Z=\221\220\036<\034~?\274\n\2123=-\177X\275\251;\260\273\327 E\275KM`\274\263\r~\274\2264\025=A\3556=!\364\t\275\025aQ=\202\353\276<\tj\274<(\242\226;D;P\275\272\004\021\275\336\r\034\274\024\r\005\275\016\325\340\274\205\310\315;\310Q\027\275\316\016\257:\300\205\260\274\354\356Z<\343\326\032<#\304T=d\2147=\326&\030=\272\"\016=8l\357\273\277\302J=hr\t\275\357\211\261\274\271f\253\274\317uh\274\315 ^\274\223bM\275\257m\241\274C\"C\273Ak\\<\256\321\020;\217\037f<S7\'=;\'4\2755\030\335:\304x:=3YI;0YF\275\001\315\357\274\362\274\365<i\211o\274\332t#\275\251}H=\306\035&\274\316\233X=x_\347\273G\322b\274l\224*<\027\330C\275U\351\257<\016\266\267<d\332$\274]\370T\275\357\020:\275\021\031\321<V\t\027=\177dd\274\003\301A\275\3517\'\275\330y/=\330\376X\275F\353\276\274\235u<=M\003i\274\002Z\323\274{,\331\274\034\007\357\274\317m\326<\351\304\315<2(\262\274\246\267N\275\25093\275iRq<\254\255L=\272}\330\2745\361T=\235\362K\275\026\201W\275\300DB\275}\337\305\274\306I\266\274\366\036M<\375\n\270\274\231\345\362<(BI<\007\362\'<\205\377W\275f\243\367\274k0:\275\261\"\254<mh\026\275\362R\344\274B\376-=7\322><|\034\257<{\276F;\253\314\310\271AE:<f\003\331;\245\363\270:\002\211\226\274\320\001J=\321Bo\274\221\353,\275\267j\026<\256\231\366<\272\273M\275UI\353\274\302\357\"\275\"\354\013= b\235<\201\034\316\274\333}\332\274\177\202-=\026\220\335<H\027E\271J\275\267\273\305E*;\0038>=\313\352.<\rdB=&\214\t=\205\252V:\245\274I\274\212u\344<\241\2616<\347z\007\275\370\225\033=)\271\371<]v\r=\220\346\014\274\234x\0229\017\351\341\273\000q\354<$j:\275\n\353\202\274\355F\330\273\253\335\260<\336G\n<v\367\220\274\366\2068\275\006\324\240<+\364\034<\256\017\000\275\226A,=\207\377\001\275 \223X\2757b>\274\\A\034\275\212\022\205\274\031\356l\274\254\276\014=\214wE\275{\2406=\022\t6\274\217%\352:@l<=\236\371A=\265F\221\2745\371\267\274X\037\206\274.\027\252;\302\345,\275\232`\320\273\013\334\327;ru\005\275\344\000;=\343\244\005=\315\270\017=\230Z\030\275\020mL\274\013+\021\275v\327\361\274\222+c<P)\365<k\014W=R\027\263<\270\202\323\274:\213\217\272\300\211\036<f\014\224<\007\200\342\274[NN=\" \031\275\013\301\237\274\\\014Q=\\\036\013;6!+=\2259S<\230;V=s-\032\274\337>L\275mhM\273\300\202\247:\233\020\356:\345\211\016\275\006\003\320<\2762\267<\036\231C\272M\"0\273z~E\275*\343S\274\216\222J=\323\370\263;\335K\263<r#\3648\034\314\336\274Cc\357\274~\027i;k\254H\275\363\0348=\020\220\003\275\322\260w<\331\310\\<\236M9\275i=\r\2754nY=++\303\2747\rE;\230|Z\275w\265\301<\333\271\025<D\334\021\275p\2238\275\025.};\371b\373\273!\366\264\274A\375\266<\303\362\244<\37389=-\035)\275\311\343X\275BY\301\274\301I\032<{\256Y=xGV=\241\354>\275\226x(=\367c\002\275\307\022\302<\360{\311\274\233\373M\274\027\342\337<z\241U=\360D\2159D\306r<Q\346D\275d\204\'=F\317\253\274\303sK\272V\027s\272\222\377N\2717\031\200\274\346\025t\274HAy\274\211J\323<\304\272[=\336\331\2168\340Q\263\274U\021\253;n\0065\275jr(\274\000\221S\275\3269\306<\257\020\340<\241\214\"\275\376\322H<$iQ<X\243\006\275\010\020\337;\352\341g;\023\276\t=\224;R=\314\305 =\353o#\275\266\232\200\274F;G\275\332\253L=B\373\326<<A\031\275\227\276\300\274\202S\247<\323\304\021\274\177\036\034<a}\027\275\336\227\215\273\354\226$=p\363==\030d?=\017\332\375:<\304\224\274\232\025Z\275j\253\327\274p\t.\275\270\307\003\275\014i\367\273\243\271\002=\242\327\310;2OK=z\003\317<u\327B=\263<J\275&\256O<\013#\377\273m\370\031\275WaQ=\006X\374\274\26046<\354\337@\275+\307>=\232T4=\237v\203<Kpj\274\276\310\024\275J?\225\273\350\212)\274$l(\275r\357\007\275b=r\274\247V2\275\274u\261<\326\016l\274\211=\017\275\310\377\024\274]\367\336\274\025\320.\275\275\243\226<\211\374\376<\207\215O<&\375W\275\212\356A\275S\335&=\220\017)<\004f\327\273\2629\r=\243\354\n=\021\007\263<9\316.\274\263\264)=\036\2275=r\257E\275\030\315\030=\223\315O=\266\270%\275\0248%<\372\325\272<\235\"L\275P\343\002\275iG\344\274\213\010T\275\240\004_\274\0100W<\255\013t;\235\241\302\273\262{%=R\216\320<\277\320R\275\372\323[=\302\0107=\302L\330\274\315\321@\275\274\003O\275\243\322\006\2755\260\031=\223\255\005\275\361\024,:\316\301A=\356[6\275\262\255\215\274\242\335\227\274\215DY9\323\231\302\274\261\'\036\275\310\350\260\274 R\221\273\034\"&=}v\251\273\202\301\313<\210\327\021=_\347/\275\356\336\203\274s\351\036=\221:.\275\371:\001\275\333\2756=\026\316\026\275\212yB\275\222a9\274\212q9=\n\034\262\274\350\2323=\242\014\376;\nF\020\275N`\003\275\020\371@\274\202\327h\274Lp\256<\027\243F=5\370\321<2\nh\272\272\034|<\020\024\005\275w\3547\274#\025\370<\177\006Q\275\204\024.=\215\205\312\273\373\250\327\274K\221\273;\237J\214\273\221\277/<}\223\n\274R\016X\275z4\003\274\273\374\362\274Jc\030\273\264j,=\030\224\370<Y/t\274/\240\024\275\272\334\254\274\301\377\027\275\016\236\"\275\000g\233<\305}\200\274\352\323\343<\317?\373\274X8\356\274=NP=\347)\000\275\202\215\016\274\223\n\211\274\211\305\322<\346\027\024\274\250A%\275\201\354R\275\2402\000\274\271N\210\274R\370\276\272\232\214\314\271YH,\274[:\225\273\363\334`<\005\370\271\273\r\374a\274\272\310\260\274\361\202\256<\022i?=^a\333\273\222<\035=gO\202<M\203\260<\177\360\220<\241X%\275\006\207M=\357\210D=\304\346z\274e\033\013\275\036\t\247:\373<\372;\376|\276:\364o\333\273\375=\316<\302\3507=\2318\204\274s\227T\274]\301\256\273\030\203\013<\2166\340\274\304[\351:\273\004\025=\007\332G\275\325\210\022\275\310\367\230\272@\2724\275\242@%\274\351\020\021\275\222@\026\275\033\362\204<\323\366(<iC\001\275\027\234E=B$\266\271\237\343:=\033\3226\275\361<\337<\242\352W=\357\200\256\274;\351\333:\237\335\303\274\250R#\275\223.\333\274\212\277@\275\361C\336<\2607-\274\275\222@\273\347u\321\273\356\022\234<3\366\273<M\020\332\274:\262O;\303K\"=\004&=\275\362\232&\275Io@\275\n\362Y=W\205\373;\254\235e\274\216\225\035\275\\\n\\=\377\325\226\273\2002/\275D\224T\275\243\301\261<O\267\301:\251y\020\274\013\263j\273?\002\030\275\234\277\"\274i\010\261\274c\254\353;!\375A=*\346\267\274zDW<g1\"=\371N\014\275\'~*\275\335\246Q\275\233\362\230\274q\334\321;\357\002?<\007\037\201<\n\036\371<\264\260\354\273\364Y\362\274\203k\336;6\336\363\274X\275\002=\272\253!=\036\210\334<\321\034\341<d0;\275*_Q\273:\360\371<\366\213\"\275\264q\272<RG\002\275\031:P=k\330\007\275\006\273\000=\304\234\220\274s\\/=x\317\337<De\236<\320\304\374\274\337R\017=x\250@\275R\260\037\273\2415\350;m\233\253;\207t1\2751+\352\274\256\313\206<\367\360\374\273Sl\036\275\202\241$\275Qi\205<@J\004\275\211\203\327\273\253\236\211:\316\355\356\274\244s\254\274\3470\257\272|\351.=\346\n\245\274\337\245>=>\270\003=\257\272\372<Oa\006\275w\337\300<\370e\344\274\261\026X=\033|\"=K\330s<z\201B\275\304\023):\334L\265\273\273\304\020=\002\264\360;\304\256O=\233@\363\274\220\312S=\tW\026=\032\'P<\210W\245\274<%V\275\361?\226\274n\353\007\275\020\256\354\273F\226Y\275\360\255$<q\311)=\365\241\267\274\344_\032<8\233\240<\366}=\275#WR\273\355<\026\273\355\037\236<\226:\271<\375\025\300;\214~\n= \257W\275\020\001\002=\"\366I=Y)/<\036\252\336\274\367B\361:\030j\275;\316\373\203\274\017\020\237\274\225\252\327\274\025\374\213<\233\372.\275\024K\317<=\026i<T\342.=P\246\031=\304\023d\274s=\234\274.s,<\301\312k;\007x\002=@\353\203\274\025g\303<\347\205U=\253\223\311\274\250\254\273<\301\313\233<}\345y\273\311\200/=\025\366\351<i\263\367\274*\232\020=\367}`\274\343\346\266\2743\022\233\274F\320O<\304\010(\275\307X\021=\020\361\020\275d\356\344;\263.\240\274\334\372\022\275\242\355)\275C8\353\274OE\027=\203\023\361<\363|<\275\335\334:=MX\247<\031\264\006\275z\002\232<\350\026\033\273\025\241\247<1\363\'=\311X\303\2741\244\275<\363\322\006<\022C\246<\367\234\312<\240\177\021\275\354\222\261\273\300)\3419m\005>=\2622p;\366\037J\275\003W\022=\003\007\301<\037\034\000\275\350JT\275\312\255l\274\317\250(\275q\022\242;\264\212O\275^F\017\275_~\025\275%\003W=k\324*<\036$\356\274-\271\002=\323\360_\274 \321\236\274\006\304\235;\230\320\024\275uVO\275\205\n\377\272\300\350\r=\314\2118\2721\263A<\225kF\275\001\037W=\301\331\024\275\354[\227<\205\364^<\344\204#\275\306\023T\2755h!:\257\036\357\274\221k\325<L\016\017\275\216o/\275]\217\020=c\276\327;\245-;=\256YK\274\013\210\033=\351\225\363\274(\302>\2759\221\261\274\324\207\230< \010$\274\203\025\227\274 \376\337\273\370\333>\274/\274\023\275\003\262\362\274HD\343;v\351\373<F\317\023\274[\366V=3d>=T\315O=\024\206\352<\211\365:=!\246N<\340s\356<\020\361Z\275\300EX=\363/\007\275\366\014\013=\344^k\273\247\022\255:C\323\214<{t\261\274\005*\276<\315KX<|\245\332<\313m\212<\022\300\202\274)ZZ:\037U7=XR\213\274\361\302\310\274\274\311b<\213\324\022;4\261\244<>\241%\275`\313\310\273\177#,\275\307\325C\275\210-\017<\266fX=\253\300D<k\206\000=\037\302\005\275c\002`<\206\307\030\275\200\\T=\257 2=\344\322d\274\220R \275\345/\r=\320M\317<\023\370\222<\r\315*=\203\231\217<\376p3\275K\310?=\'7\354<I\270\'=l\2364\275v`\023\275\214o,\275&A\304\274\247\024\362\274\202M8<\013\202e\274\374\2245\275WTK\273\035\207G\275\315\312\000=\030\013B=\340l\206<lQ \275\017\354p<\354\246\332;\363\327\006\275\030U\017\275~\350\313<l\212\262:\253\315\322\272F\001\232\272\n<M=\375v\237\274\255\002\325\273\275\306w\271G\237=<\251^\352<|\372Q=\230\317(=f\301\261<6\007\227\274%\033\352\273[2\214<\301/\327<#\010J\275\310\033X=\372\273\206\274\267]\216\274\007\361W\275>&\267\274\">\r<:\362\021\275]\331\363\274\237\272\263<\300\254\331:\267\"X=\225\374*\275\372\234\236;\243\374B=\016\275M\275I\306==\nFR=\034\002p\274\352\326 \275\224PM=\272\233\026\274k\215\"\275R\030{\274C\"c<\251\363\356\271\352\020\326\272/i\232\273\2774\n;\250\343\307\274:\224M=\"]\342\274x[\265\274F\035\032<$\271\322<\2162D\273WI\317<\320\344\014<\004\2012\274ct\234<j\360P=\223\326\030\275\"k\002<\014\n\345\274\314\326C\275\001*\261\272\036\365o\274-\2563\274\207\377\346<\264C>\275j\031>=\305U\233<\234p\2409\305\301&\275\315`\202;\026b\352<3QO\274r\302\250<\003\225M\273G\022\351;\362\213\251<\255\235\207\274\264\306\351\274\364NP\273a\224(\274\267=@=\010)c\274\244xM=\315\227&=\020P\026\275\"\377\246<\352$\230<\344?\244\274.-\t;\275\372\375<7\330V\275\3129[\275\343\272g<\006\277\240\274\223\317\222<j\216\226\274\374\004\023=\036\214/\274jP\n\275\324\375I=w\241\014\275\276\3275\275\"C\220\274\257\306;==)\322<\n\213\204;\274\017\261<\335\253G\275\220&\"\275\340\203\t=\234\363@\275\310\306\264\274l\323\361<\232ON=\243\235k\274,\325L=\036GD\273\nL9\273\377\315\356:\320\300^<%\262[=o\275S\275^Y\354\274\273\020=\275g\260\223<\337\\R<\345:\177<\336\223\332<v\272\026\275+VI<\233Va\274Y\240\343\274\"\2633=\031\204\200;\037\272r\274\023T\370\273-\317\341\274^\021\014=\220EK=\306\213\302\274g\211~\274\227YE=\235\265(\275\234\357[=\227^#=7\204F=E\020\234<\203\005I\272\000\314B\274*\006\234\273\237\223\324;\3604\211<\242\001n\274OQ[;\325\277/\275\300\202\004\275B\016\014\275`\370N=`\255\322<\241\344R:\206n;<\013\010\020=\311\022\350<\332+1=\315\336[\2744x\034:\301\317i<\204\352\023<\025V7=\224kB=\315\026\222\274\362\252C\275q\246\022\275F\350<\275\205\350\247\274 t\227<R\375*<A\363\364<7\276L\275\325\325H=\030E \275\304\322?\275\016W\027\2753\021\002\2755\224\205<s\235Y\275J\343\036=@\361U\275\014]Y=k\\M=@\'\230<\372\256K\275dd\345<=lS\275PE\250<oD\231;\316\350\3258\343>Q\274!\177\003=t\253\211\272\224\2160\273CNV\275\262X\r=?\014\352\272h\240F\274D@\n\274nD6<\2668\016\273=\330\332<(\261\005=\372\ny;HZ%\275\345\337v<\315\236\360\273\304\325\037\274\035;\021\275b5\360\274\017\307\037=\213kC=\002\345Q=`!L\275\263\2274<\367\312\002=\344\214\330\274\003N*\275\315v\337<\363\231\347\274\304\267\035\275h\026W<\375\241\013=\020\367:=\317o\305\274\206B2\274\332\251\013\275q\353/\275\207\346\221<\207\025\n\274\257s\363\272\001\3507=\210\306%\275\245\256\001\275M#\371;\013\257>=`P \275\273\373,<]\272\035\274\002D\000\275`\006\363<\357_\201:\371\301X\275\362\247;\275w\206]\274d\272:\275F\033$\275\366\372Y\274\001\221\222\274\376\"\250\274;\372 =\372\206\347\274\353\243\344\274\300\306,=Q1\002<l\0376=\222\207<<\216\314\013\275\034=\242<\364\324\217\274\340\260!\272+Z\017\275G5\317<\213\272\024\275\372}z\2740|\256\273r\333\003\274\"\243\n=\236\314\207;i{\235\273nA\005<`F\034\275\233\323\214\274@\235\n<\037\266\'=\366\350\206\274\022\265k\274x\341\n\275\214\3443\275^e\242\274\024u\336\274\241MC\275\220\037\004\275kN\340\274\252\004\224\274 8J\275tu\036=tz:=^Q\336<\271\262\307\274\031\211\261\274M\205A=\000\332\211\274eB\003=PT^<\257\232c;\220\021\240\274\354\352\244\273\250q\000=\375\026N=\366h\'=@\261K=\303\001Z=\365v2<`\220\337\274\177Z\010\275\270u\357\274\347\336J\275\325N9=\305\327\000=\0025%<\223!\350<\2133\375;\325\201\316;\352\257@\275DHB=\373\327x<N\315\006=\371GE<\335\240\340<\200\022$=\256\242\026\273\341\346-=\010\005 =k\211.<\032\240\025\274a\246c\273\275\312\257:\210U\326\273\017\003\244<\256XO\273\213\232\337\274\201\022V=\017-d9\222\300\215\274`\202$=\343m\361<:QF=\"\006\211\274NL\022\274\007\004\254\274\302\325\004\275\027\210\374<C\356L=0\277\026\274\264$\332\273*\230B=\005Z/\275\310j\224<\026H\361;Y@\\\274\331\376\030\275\017\323\003=u\332\010\275\336|\376\272\202k$=\243Y!=\250u\035=\275 A=\317\311\035=4?\251\273F+Z=~\202\257<\217\354G\275\005[\213<\252\370)=8\373E\275V3D=\2770j\273\337\323\n=rKN\2740)c\274\002\027\244\274\0241\001=\323\010\316\274\375\260\336\274Pn@\274J\037\014\274\311F\366\266\321\023\272<]\033\004\275\211\327=\275E\276\003=\0026E=c\304\377<\237LV=\323\342\013\275\314C\246<\266\357;;\rX\023\275!\225\217\274\022\340\370\274?\354\n\275\353\363\307\274\361\335/=\025\275\231\2744s:\275\022\333\200<\277\013G=\031g\204\274\234\374\207<\314\260\2609m\346\007\275\254\220\353\274\023S\310\273\316\255h;\202k2\275\276EN\275H5s\274\222\030\333<t\3125\272\371\036\020<(\000\312\274\013\315\256\2742\327)=\341&\037=T\340\"=\360\257\311\274XF\344\274o\331D=\267\354\";Q\273\002<n\341\265<\305\253$=\3021\206<\006\232\006=\321d\035\275\314\005&=\273\255@<S\360\343<\330\253K=\370\270/=b\220b\273e\002\332<O\005r:*\360\304\274\357\024\036\275\205t\262<4^&=%\277\031=\317Q\004=Q\245\n=\352/\324\274\266K\350<\2760F6\322\035\037\275\337\3354\275\374\227\245\274v\3167\275\372\0132\275\331D\343\2748&z\274\236\311(\275\211p\335\274\354\245\231\274\352\337[\274\336\201R\275.\274\014\275N\367\367<\351/[\275\031L\232\271\371\243T\275\355\347R<a(\225\274\333\253!=\321T%<\263g\205\273a1\024\275.\336?\275(\3112=+;\256<\303qH\275\222\355T\275\242S\007\274c4\274\273\t\256\241\274\344\010\336\274n\025>\275\215\360\023\275z@L=\270B =l\020\274\274\263\223\002=\361\3709\275\215Z\014=\0057o\273\026n\020=\221\365\021\275\302\353\007=\304\262\231\274\233\r\005\273GZ\370<Bg\333\274>r\"\274\345`\"\275\326~D<\212\217\t\275\3363+\275\373+X<X\001\231\274.AH\275\214\236+\273\021\211\236<\363\2569=^6\375<h\213H=\310\236\331\273\033;6\272b\223=\275\332=\261:g\275\236<\310\264N\275\222PJ<\244\333/\275?\003\207\274$6Y\275\231\030\350<[\026\201\274\231\t\001=\3450@=\215\030q\273\027\343s\274\314\364\025=\370\217\313<\264\222\345;Ov\007=\243\002\263;J\037\347<\200\366\206\274\224+\005=\255&\364<\357S\020=1\214:=P\360\031\274\001Ak;A\257K\274\306\216y\274\374\226\003\275I=V=t\013\033\275\251\177J<\026\021\033=\227\335\256<\n\364+\275\230\372\033=P\341\315<\020\216 =,\202\020=I\327\177;\276\200\215\274.r\245\274{\'\025=mS\301<\005\027\211\273\274\210\"\274\356\3347\274\031\026\356\274\363H\\\274\273\350\344<\334T\247<\254W\225<!\351\230<\"Y:\273\344\340\006\275`\0021=U\232I;\304\2601\275\372@\256<\'\250\363<r8\005=\322?\202\273J#\370\274\006\305D=\n\264\013\275k>\202\274\024\354\025=\226Y\202\273$\206\271<\347G<\275\373/5;\210\2026\275a_\264<\224D\013=g\264\021\275\025U&\275\225\312A\275\370K\271\274\327\270\236\274\214\366-=\271\233\217\274\223\255\323\273p\001\230\274\240v\3329\007w%\275\217\274&\275\333SA=a\010\304\274\237\366\014\275\346\222\204\274_\320\001=\371\323H\275l\271\311\273;\244/\275C\367\'=\352\367j<B\303K\275\3676\210\274\020:U\275?\212\033\275r:x\274\210c!\275\025l\301<Im9\275\272CW=\200 \372<D\350\313<E5\327<\000z\027=F\314D=Q2R\275\354\351\210<\364Q\022=\312f\205<I\363\'<%\275+<\023\255T;\234\003\004\275\3016\014\274\306\257\006\274\364\202\250<<\r\003=meH\275\206FU=\0018G\274\242\027<=\356[7\275a\364\025\274\250hD:\013q\002=\200H\010\273\235\372\225<\325\246\032\275\317\252@=\323x\343\274<\036\020\275\364\245\326\274\364\363\210<\225\241\202<\272j\250\274\"\221\030<T\212\003\275\031\\N\275\270a\002\275\006\"5=\251p\244<E\277W\275!`\313\274\222P\355<\017\253\334\274>|V\275\202~;=\251f&<\362\273\316\274\251\031<=\272\364\273\274CTv<\225\202\003\275gR9=S\222\232\274\237h\351<g\240\347;\025AH\275\231iR\275\366\220\023=O /=\\\233\257<\213\3639\274\3256\033\274\340\3229;?^\013<\0145\253\274d\357 \275\340f\217\273!\207\376\274FV\247\273Sp\002\275\310i\\\274$\232\315\273%\234\232<j\213J\275r\t\354\274m6>\275\255\271\241\274\342\346S\274\217/G\275\344\303\025\2756$\340\274h&+=kg,\275\343\227\344\274{a\215\273O\354\006\275Sj\306<\315f\367\274\213\023P=W\335?\275\251\006\'=\301\333\233<w$\023=\252\030G=\277\037\024=7\005\313<\244\320\320\274|\204Q<\247l7\274\336\014\262<Z\306F\275f\002$=\265\000\025\2741\221\375\273\004\317\251\271\273C(\275\r\374\'=_\330.=\214B\005\275\346_\000\275\302v\021\274*\347\207\272\r\353\304<\247\023;=\250\336v\274\023\315O\274Z-/;h\177_<\347\306P<\224\005A=\334Z\360\274\355\260\254;\325JW\274_B.\275#o+\275\322\373\355\273\032\006==/\202\251\274\234\305\005\275\276\355;\275\212;\355\274;\371\300\274x*\206\274\205t:=\214\251I\275\032\277\231<1y\366\274\266O\317\271\206\2108\274P\230\'=\301\351<=\377>*=\344\030\016<\326\376\r=\235RQ=\366?\321<\336\023\337\273\003\317\213<\377\337x<\021(\020<\351X\322\274\223\230\311;\\}I<\256\227\345\273\354)\034=\201\212F=\016\275\270\274\350\031?<o\274\303<\"\3428=[\357\324\274e\3663=B\323;;f84=\365qZ\275\266`U\275\252@+\275\374M[\275RCR\275\335?&\275\305g&=\217\013>=nTG;\221`\255<{-\350\274s\3301<\027\2661=\270\315m\273\214\321.=\270\217[=\367\212\347<\213\336\311\274\311\377.\275\300\331\213\274\353\005\014=_\301C\275(e\325\274dv\037=\350\255\022=[F\251<\016\235R===B\275\313G\024=\t\376\036<8\365\032<\306\245Z<fCE\274\n71\274\253y\034\275w\377\031=\024\367\'=\323\021\027\275\307^;=\025EA\275lO\035\275\327\365D\275\261L\240\274\377*$=\253\025\331\274\025\316\301\274\t\360\030=\246\326U;\332^\036\275\260\215\215;\006L\010\275x/ =}\0049\274\354u\240<\325@\t=\304\354\304\274`:\007\275\343d\323\274\017\036\317\274\366\315\014\275SW5=O\3758=\022\335\335\274\221*2=m\351#\275\227\375@=$\366$\275\353u\026=\3124\036<\337{\001=\344\340T;5\222\366<\347Eo\274\033@S\274\206\207_\274\204\014\327<\374I ;N\354\000\2753\373\037=\027\221R<\271y?=\367%X=\367\330\037\275\360\240-<\322\010\\=\262\345\034\274\345\350a<\003A#;\331\301\306\273\324\006\301\274\000\034X=,\205F\275\003\240O<<\205\277<z\221\030=p\232\265\274\375\223\032\275\245^n<\360\203\221<\001\034Q\275\372\343\223\274[?I<j\001,=\264\306\032\273\224\356H=\326\362\215\274\211\257\\\274\223\000t<\t\323\264\274\361\255~\273\2063W\275\255#\362<\267\203\006<\340Na<\342\206\357\274!\233K=\334\'\361\274\'\033A\274\030\355R=tzI=\177\207\362\274\204\000 :\232\211\t\274\202\326\234\274~\265n\274c\2013\2758\335\016=\030=\003=\350\303:\275\201\210p<mD\226<X\377Q=$R\007\275}\227?\274\206\031\350<\345TR=\244\3021\275z\304\264\274\001\020\342\273\311\361\324\274\374KW\275\201\034N\275G\005\327:M\337\021\275:5@=\316\305\244\274bj\365< e\200;\302\025\243<\311\304.<\210\252O=\333\212\353:\300\337\002\275\002\3647\275\207\0334\275\307\031\272\273\254\370#\275\216\237\034<\341\320v\273ak\t\275X\231\031\275H\215?\273\020\324\010\275\271S\330\274Q;\356\274L\325Y=\265K_\273[\021\201<\342%E\275]\177?\275\330\000\032\275w\tM;|\250\264\274\035\207[=\320\2747=\035*$\275h\022a\274\302\266\320\274\354\300H\275n\010\027=I\335>\275Z\3732\275\237d\003\275Or\032=T\203\365<\372\351f<\202^1=\302\3660=$oD=\247\023\026\275\373\036\232\274\204\370*\275\205\004,\274t/W\275\357\n\000\274\230\323%\274\353NY<\204VV\275\372E\226\274\274\204\236\2740\0000\275\032\346\031=\330`\303<+2\035\275\363b\345<\036\3122=.\267+=\232%s<\241\270!=\277}\261<\243\216\224\274\361\347\234<\361I<\275\370@\023\275?f$;\26665=\215\225\363<\031\252\272<\r\n\232\272\241$W\275*\006\276\274\206R\240<R\351\025=\245\036\026\275$\311\310<t\370\034=\221\361T=k\352(\275Wp\272\274f\271W\274\252\375\334\274\n$\373\274\267gc\272\345uS=d&M=\212\203\246<\255\207\351\271\030\023\014\275\360\330R\275n\261S\274/\022Z<\377  \275\336\306!\275O\2010=\035\326\204\274\177\030\376<\356\030\241\274H$\013<^\013\002\275I\362\240\274\273q\223\274u\263,\275\014\237<\275\275\203\224\274\370q\023=<\222O<O+J=d@\252\273\270\344O=a5\336\274Z\307\006=y\345\017=A\242\002=\327\022\020\275\352\023\005<\231\365,=\304\027\257:k;\236;k \302;\302\277\010\275\236\327\035\275C\311\t\275\030\372\346;\353\332\033=\227\272\230\274\232\355&=\260\352A\275\023\221\355\274\235}6=\367o\204<OR\001=\n-\255<\257\256\007=i*\036<\261Z\024=0\324p<K\354\306\274\315\333\371\273\037\r\024\275;\214(=\276P2=I9F=\007\353\300\2739\360Z\275X\263l\273=\017\372\271\351\325\252<\261kg\273\200\027T=\340\363N\275\321\216\037\275\000\325u\274\202\303\000\274\031+6\274\346\331\230\274\'\3159\275\217\305\030\275\016I\324\274\227\212\222\274\024aD=\221\346\353\274\370{\032\275\277k\027\275O\324l<\332k\330:\374\301;=O\261\327\274T\3536;\334\002G\275\242\346\204\274\366\323\006\274\344\207\205\274\324L#<\007H\276\274\004\032!<^YW\275\203\370\225\274#\021g\274M\350\214\274\034.\240<K\344\240\274\332\232\032<\275b0\275\002_\363\274\227\367\217\272\201\343\007=\306\261\'=\001!!=\'{:\274%\375T\271\317\333\320\274\302gQ\274\2318L=\215s0=,\'R\274\371B\032\274\325B>=\032\027\362\274Nq9=\361\326)\274\205\316W\275\200\010\353;z$\255<\0359\300;\242-\2107#e\"=\t\022#\274\251\267\266\274b\252(=\016\2453\275\221\001\311\273\371\231<\275\013\227\355\272 \r\326\271\320\002\244;k\017\244<\321oS:\340\317)\275<$<\275\350\001\360\274\251\223\260\274\013e\340\274\310>\230<\360\014\002=\343\372<\274\241\317\360\273s\243\245\274\t\251\205\274\214\347X\274I\351\2129\376\223\260:0~\001=\217\211Q<\035\326[=#\"#=\022\314:=\365E\033=U\313[\275\376(8=\007dX=@\375,<\306v\003\275z5T\275\270\223\021\275\356\301\016=a\035f<\246\321\r\275B@k\273\360\216\207\274\354^\003=\232f\266\273\320\"\310\274\265|\t<gu\362\274\356F9=\3748\314\274\246Z$\275.\n>=\023\025\303\274\335E}<\001\301\r\275\317\357\346\273\267\332\003\275\204<{\273\"\340\033=\277\330\"\275boe<\231\260Q\274\036U\370<D\217P\274\315\201\354\272\337\037\350\274\236\250\r;\242\274\243\274 \024\023<\361h\022=\270>#\275\002\330\357\274\022\371\342<\361!\350\272\007\224Q=C\217\235\273I\206,\275\013\314W\275\212\310\227\274S\366/=\351`<=S/\006< \016\207\273\275\213,=\r\213\032\275v\002#=,\024\000\274\233\331\032=1\356><\3607\223\2721-\013\275\266\350\316\274Sb\202<Q\024\016\273F!\264<o\350V=\010\217\361\274t\3013=\002\225\272<\311n=\274\3710\006\275B20\274\004\362w\274\254\215s<4\316\001=u3T\275\247(B\275\367\252G=\210\214\243<FL)=\016\'\373:\347\315=<\245\251W;\267{N\274\000\016\007=\261M\037\275\227M\355;\023\0270\275\216\263\032;V}%\273/j\352<\033\303\t=!\354:\275\353\262\255\2736sR=A\021P=.\217W<\003\216\325<5\374i<\264\034\372\274\312\225!=\247\024L=G\322&\275\214\261&=\361%L=\212\335\362<3\334W=#\0101=M</\272\301\010!\275\322\007 \275g\366\273\274\231\227$=\303\324B=\262z\2429\377*\006;\034\254\026;\334\300\333<2\325\227\274J\004\004=\036j\365\274\243Z\271<gW\324\274\003\337\324;d2\367\274bv\363\274\375\343#=Yv\023\275\306#\351<$\202\356<T\371\374;cn\352<\264\215\031=@Y\344\2747\264\007\275\365\212\241<\344\004\314\273\253q\346\274\215P\267\273\377\2417=\021\022\256<\360@(\274\376=\350<\230v\224<\020\037\360\272=}\037=\030;\263<\3450\020=\233\347\251\271\027F\032=\214P\016\275\327\374\031\275ZU\000\2758\'\324\274\213\275\025\275\263U\226<B\350\312\274\306I8=%\252d;\n\341\000\275\315Ff\274Y,\005=-\322W:\367e\004;H\2433\275\331q\312<\004\002$\275\317\005\254<>/\206\274n\261\016;\312\236\'<\026\371\300\274\340\355\200;\236\355P;$\366\225\274\373\221X=?\031W\275V\237\324\272\314\316\t\275\003:\214</\271\n=\335rB<\247\365\324\274\245\203u\274H\033A\275\364\n\210<\345FU=\352c\003<\020=\344<\276\243\337;x\272$\275\233\307\276<\200\246\027<\342\260G\275\227c;\273}\363S=\360\230\000\272\034\035\313\2742\313\346\274%N\000\275:\033\021=ao$\275\236\255#:\377\323\366\274\026\245:\275\240\365\234<\2044\000=y\013\023=\\\320\227<D\016Y=0\305&=\010\214 \275\350\306Z=\332\247\t=6\2220\275V\204\250<Y\327j\274!\022;\275,\354<=\230\363\366<\001\250(=\240\325\017\275v9;\275\005[\277<d\003\270<{\210\303<\306#\013\275\257\177\370\274+\000\316<\024U\263<\n\373\023=L[[=\342\r\301\274_\203\025<tEw\274a-\250<\026mf\274 D\343<!\270\r\274\324%\272\274&\037\"=\217\343:\274#\231`<[\377\365\274U\236\026\275\302\2634\274J\026\366\274\347j%=\235\034\014=Z\027\205\274QO\250;y\363M=\374\262\276:\276\233\001;\245\2009=\023\237\266;ca4\274\363\305\t=\213O\375\273\024\343D\275u)&=\235x\3029\230\207\016=\027+\r\275}t\014\274^\t*=`\240\334\274\035[\245<O\333\346\272n\257S=\331\227f<\301X\275<]\004\024\274%\256\222\272\221K\021=\273\207\325\274\266J\025<\006\217\001=$I\'=%\3058\274\207p\035\275i\213\027\275:\3209\275 \244\307\273\275$&=\270\240\t\275\221)\273<K\344\302:\\a\301\273\256G\273<\314\351@\275\273\267\027\274\275{m<\235\241\250<C\017\216<\302\270Y=\300\243/=\352!\330;\207w\007={\021F;b+\312\274\302\374\031\273\202hH=-\340\007=bF\357\274\370\257\036<\2461\301<\n\355%\275\356\013Y=lwO<\022\370\030=\250\340\361<J\n\217\274\254\274q<\'_\206<\353\023;\275nd\034=\333\367Y=O@\302<\327\205|\274\207\222\025\275\325\210\023=\227\344\326<\207\241\217\274)S\035\275\331\203\334\274h\244/\275\255\330\325<\232\323\014=\227\373Q\275T\312Z\275\312\024\230\2738. =\264s\260\274\016_\202\274\330\342\347\274*\002\216\274\3232P\275\273\323\225<7\'F\275\251\004\270:%\362\026\275\354\2678<8:\375\274g\215\306<4\271\241\274\210\004\022\273f7\030\275\260\231\024\275i\321\005\275\230\315#;6\323Z=\33017=\271\026\025\275\000\367\025\275\245kZ\274\t\360\020=\rE\033\275\262)1\275C\204\362<}\2338\275\274\226F\275p\026\221\274\2612\027=-\372U=hb\030:\236\2401\275\337\222x<\'Q0\272\214\324\240<\226\276 =Ot2\27349/\275\255\315,=J5\303\274;\271S\275\272\252\022\275oI\227;\320\304\230<\321Q!\274\177\326\267<\204\317\007\275G\377>\275\221\250\274\274_\020\215<\324h\247\274\263\275\345\274D\275)9\036\230\024\275\237\3236=c=~;yx =yB+=\357\335\254<\343o<=\376o\200<\222\372\266\273\253Qe\274\177\027=\273\307$?\275\257\010S\274\n\004\261<$]\017\274c\304\372<(b\037\274}]\333\273~\307Y\2747l7\275\200\276H=\303\363\022\275\212z.\274\236\203\210<\035^\005=,o\353\274\271\0273=\317-\032\275S*\335<7\2139=\241[\330\274B\362L=\013\2632\275!\325\002\275K\307J=C\026P=!\1770\273,\363N\275H\0353<>\2436\275Y\021\221<\233\217\303\2747\202Z\275\371.;=\325\307\211\274u\341\314\272\231O\"\273\221\212\005\275R^\252<\307\263\007=\007\262l\274\233o\345<\253m-=\260\333U\275a,\303<\346_\033<J\324\320<\006\254\013\274R\330M\275\246\326%\275\217\232\251\274L\325\033=-\377\'=\304\033\335<\247\264K\275T\330P\275\357\313\341<\360\304\327<\351\300;=\217\366\241\274\022\3759=\334\\\024\274\367\327\025<\022g\355<\204\234<=wTL\275\377\325_\273_0#\275\001F>\274\235\001\233\274d\326\372<\264\266\211\274\271\324M\274\372/\334;\023W\324\274j!\320\274\242\232y<A\234\032<3$R=\023\267\264\274\217\231T\275]\0334\275\263\213\306\274\376k!=\367\205S=\327d/=\363<0=\306f\027\275\353RR\275\035\312\277;\325\235\236\274\251\014*\275\353\203\034=\027\265\245\274\302\351\352\274\364\211\355\274\nl\373\274f$\356;}\025&\274R\244\216\274&\342\373\274\244\031B\273v\346\021=\2030\003=\316\335#\275\030\205,=\264\\.=m\234\021\274\342K\236<\366b\223<\3576<=\205\342?\274:^\216\274i\270(\274\354X\005=E\274 =Z\264\366\272\244T\001=\221\362\004\275\377;\021<\233\252E\275g</\275\022\236$\275\315\035D<=\265\311;\375\177*=\207\244\344<\251\036\230\2743d\260<\264\334\313\273\025j/\275\220\247z<b\230/\275K11=\241\265\247<\214\021W\275\302\322(\275\336\366\000=sYP\275[\352\033\275\263T\002=\233\000\001=\036\236o\274\253\237\020=\306\343T=\250\333\267\274l\257\323\274\207oh\274z\251\215\274\023\222\216\274/\264\031\275D\377\331<O\230\027<\241o\005=\257d\202\274\001\316@\275\202\346\030=\222\023\207;\004\357Q\275\211\004\013=\2145\341<\005N/=\313\362A\275\341H\273:]\377\232<\213\330\032\275\315y\251\274\256\360\030={\000\366\2745\237J\275L\230\014\275\370\326\341\274\264\234!=v4\242<\320\310\371<5\365\220<\311G>=\225\330S\274D<-\275\034\3106\275|\327\377:)\330l\274\340\0104=1&\222\274%\022]:\217\022\210\274\243\217\207\274\377Y-\275\253\244\234<L\324\017\275\266\010.<\213G\\;\246\231\013\274\340\370\024\275\332\335?=\222-/;\377_X\275S\'M=\322(\331<\272\262/\274\203dM\273\345\336\026=\030\227\330\274\305\227\026\275L\201\014\274\006\303\033\274\236j\251<\307\031\271<6\305W\275N\035\014=Cl\025<\223\206\341<`\332A\275\177\211\236:\230\026/\275\024\254S\275\246\221\317\274\356UV\274\354s\n<c\256\023\275*\341L=r\303C\273\256\204X;\312\357\2209A\0314\275\225\342Q\275\255\022(;PY@=l\2737=h\247\023\275{\235\017=\005?\365\271\026\224[=V\n0=\304^\265\273\301\361\363\274\234\204\366;\352\212/\275\352\0362\275\255+:=\366\324\375\273V\257/\274\345\357\365<\004:\002<\236\367\231\274\256@[\275\212\247\205;\025\333n<W\264\316<\312\317\330\274\317D\004\275\326:\351\273\210uQ\274\255\016Z=\375\210\240;^ \033\275\230\022\007\275\336\007\2429\002<\004\275\335\275I\275\330PU=\010\335\220<[\213\336<\224i\246\274\315\327\030=!\252\006\274{\037%=,N\377\273\272\035\004=\210\355\";n\013$\273c\312\031\271\024Z\225<\303K-\275\017\337\026=\252\177\257\274K4\006=\330W\r;# \253<\007\322\037=\026\363+<\247\210%=o\352\236<$\203\324\273\224\255\032\2740\355,\275O\207h\274\246Y\013\275\003\301\361\274\372j\377\274P\346\001\275\313\005\200\274\255\326\224;\303\307\326<\2508\267<\220\241E<dq\021\275\251B49N\024G\275y:\252\274\024\242R;\303\213\036<\372\313;=q\013\\\272\351H2\275\267\376\210;Gr\372\274T\021/=\265\223)\275X\031:\275\227\325\010=O\3478=\327\355M=T\245(\275\335%\354<\336F\256<\007k\031\275R\242\354<\367\2425\275\\\013\003\274J\254\357\274&P\026\275)\357\322\274\307\242\335<\254\007\227<+\2374\275\354\376\234\273\213K.<\177\362\267<\364A\023=I\245\030\275\352`H\275\371\301\260;\0371\020=\233\326\000\275G\255\035=B\214\t\275@\036E\275O\t\000\275\361\014N\275U\241h<KlD\275]\265;\275y]\251\273\342\217\024=\214\301\222\274\032\r\363<f\370\243;\364;<\2741oW=.h\213\272\211(\010=S\003\267\273\001\347\250\274I\005\003=\370\301\320<\006<\'\274\207h\004\274O8\377<1g\363<\200E\322<\270\035\026;F\202U\275>\213u;\2725\272\274QB\316\274\221].=\3534M=\3372.=,\341\335\274|sW\275\363\016\340<\376\214\301<v7\276\273\002O\256\274U\374,\274\341<e\274>\016\372;\023\323_;z\3452=\326\365P\274#\2411=\036\325\265<s\200\205</\t\275<D\376\327;\206Q\320\273l[\345\274\014\251S\274\264\372\214\274\rW\010=,\326\022;\205\271\356<\035GI\275\306\215\264\274\254\307\341<\351\010\272<C\3130;9V\273\272\254|M=gwL\275H\347\260<\340$\273\274\0222\213\274!\0245\272\025\026\365:x\225F\273W\375\016=\350|\330<\254\226\206<\320\017\036=\251^\316<\227\230\"\275\367\237,\275\364w\001\275\247\271\003<\365\252>\275R\235T\275\231\346\304\274\351\227?=\240\307\016\273H\247\202\274\026`\204\274a,\035=?\305\351<\333\025\2658\264\361\365\274m6\033\275J>\252\274TRG\275\265M\373<T\220\372\274\220\006B<\002\352\213<\034\033O=\032\t\365\272\205\203\020\2750\021\213\274u\267\313;&O\325\273\n\245\241<\243\300\357\274\361\335\254\274\213fA\275VvW\275u\375\035=$\314\204<\032\354\346<c\242\216<\330\364];\346\351\264\274<\331\337<\363\021\031\274\301*\204\274\374\3273\274\310\300\321;\257\022}\274\247:\313<~\263\013=z\"\225<\217wX\275\230\377\360\274\217\003\236<%\304:\274?>\347<\314m\004=\306d\215<\n\301\023=\013/\372\273\014\026\251\273e,\326<\0019&=w~E<r\256\264\274\001\013\215\274E\277\370<\247\247\000\275\321GX=\222\242\260<\301\261[\275d\327\326\274\324\343F\275\000\374\254<Q\271\207;\002\267\300<\247!4<\342\307\020=\262Y\235<^v>=\257\273\t\274U\177[\275\314\030\253\274r\223\310<jq\206\274\000\377<\275\206\3556=\004\257Z=S\362\310;\226\324\217\274\002\237\220\273\237#@\275\004X\"\274J\036-;\027\3268=\000\342\364<\271\233!\274\340\301\"=\336\212\216<\005\322\027\275\235\274\323\273f\256\023\274\007\"\017<]\304\273\274\030\255%\275R\223F\275\215l\021<Iz\221:\314\3537=\271\362=<R\237\336\274\346\006\313\274$lZ\275\213\023M\275\001?G=J,H=\026\265\267\274\211\031.\275\3439l<wO\212<\2239\005\273p|\024=\024\352\264\274r\312l\274\235\224v\274\024#\367\274O\367\277<\362\351\210;;\203\003=\227\334\367;\377\303\337\274\370bN\275\237\244?=YNO<,m#=\277hC=Au\214\274\271\006\232:=\020\254<-`\336<\274a\372<\305\r\307;\340\367n\274S\200\'\274_\361\301<~*/<\363\370K<\372\3110=\262\342\316<\tD\n=\323\252\267<_\010]\274\005\366\010=X$\261\274\271\307m\274\217\346\312<jS\310:vBC=\200\305\235<\306\000><\343\325S\275\036\246\271<\"\223\r\274\261h\320<1[7=c@F\275<^\204:cb\207;\334/W=\340\341P=\253C\232\272\005,>=\221%Y\274\334\256|<V\r\003<c\240\205;<\002\017\275\033(\211\274\226\016\001\275h\320?=\270\271\364<f\242Z=#\236\310<{{\033\274\303\324\350\274^\276%\275a\2200\275\332[/\273\023\251>\275;\007\267\274\347v\026\273/i,=\277\341[\2758\022#<MAt<\367\374\327\274a\353\t\274s\301\374<\303\264\366<B\242\330\274\233\375\024=\rC\363\274\0333\244\274+\025\035\275\326\366\030\275\tiO=L\276/=\350\021\236<\025\323v\274\370\225\353\274\333\320\317\274[\312I;s\241\210<\026U%=\373mm<lNG=\306\027\255<T\361\034\275\247t\342<\240h\216<p%G=\224\332G\275\222)\240;7\226==F8G<\3166!<oi\'\275\250\273I\275\034Y\000\275f\005L=\216\013J=\221\311\253\274\323\013R\274\275\020\221<_D$\275\360\206J\275\306H\037=\314\230\317\274\353\2303=\266uL\275u\340\370\272\020eV\274C\325N\275\307$\370\274\324$&<u\010\261<.\n\243;\271\267\222\274\226\336\274\274c\010Y\274\311\275Y<~\370\371\273\3418J;\367\357)\275)\307Z=!\022;;x\027 \275\336.a<}9\316\274\0217\217\274Pl\344;\237\031\234;g\254\201<^\245\234<}\341W<\004\036\n\273\363\334Q\275\325ZM=\013\\6\275\273\010\033=\257\331\355\274\271\337\334\274\225\335\242\274R\026\201<\013\323\014<\3459\004=\316\352P;\013fB=\235\337O\274V\256\030=i\240\223<m*1\275{\215%\275\017\005 \275\376v*=;eO=\024\\U\274U\021\341<\220d\340\274\234&\240<\202\220I<\227\221\270\274bMM\275\254+\353<\270\256\317;\241\226\035\273\214\306F<h\351+\275\274\264\031\274\014f\253\274\337\021\016\275\213o\026;\201\003D=\370CB<j3:\275\340\037L\275\001\232\022<\\\020J=\242\240,=\n\034\271\274PJ\261;\312\324\023\274\306\260\003\275\210\021\037=\220\332r<\217r\331\273p\2662<\rw\364<\267nQ\275\'7\006\274P\247\'\274\345\373\220<\227\213J=\271\260F=8\341\340\274rk\250<\250G(\273Z>u\274J\265\017=9\270\261\274\367,\361\274k\362X\275\274\226\335\274\355\274G\275W\203\310;pi\301\274\340\305\002\275\272\3659\275\213\363\277<0\354\263;\033\2027\275\243\025L<\34151;\001\003\310\274\240\203l\274\361\331\343\274I\335\031=$A\223\274\243\356\006=\367\016\232<ZZO\273\013\007/\273\345\203w<(zf\274\367\372G\275\213\307x\274fX\007\275\226$1;\016>|<\035$%=\252\317A<*\366C=@\000\340<\303\356A\275\007\243\r\275\345k\367\274`\222[\275\275\213\'\2752\362\023\275\267-\254\274\203\356\350\273\342\326-\273\342\230\372<0b\032=\303\264>=H\231,\275\014\223\270\274m\324\003<e\036\300\274\030\"N=\n\2054<\264;X=8\216\240\274!\350C=\023:\337;T\263\310\273\333\022\n;\313\203\350\274\2778\323<T\263\032=\275r\367<\253%\272\274\321\014e\274Iv\326<`4\031<\016,=\275t\r+\275\334\356\006=L\n \275\224\253N\275\246\007C\273Bw{\274C\233\366<2\377\"<X\236\350\273\205\356.\2749\261\006=\373\227?\275\225\214\322<\325\367\325\274\'\335\354;\374\021Q=NP\354\274\335)@=\204\254\235<\002\021r\273HrA\274\364\325F\275\310\370X\275y\243^\273\322\005\276\274\3018\206\273\256\024E=\035\t3=E\263\206<\003\277\316;)\344\257<\t)\024\275%\017>=\346n\326;\200\201?\275N\256\322<\203\253V\275\265\236E\275\010\200\017\275\353C3=S\351\035=\001`N\275\362\226\234\274\361\354[\275\021I\202;\206\022\005=\037\244R=\237\364\224\274\264\305\002\275\313\200\337\272\376\372\273<\010bl;\316?\220<.PG=\310\033\036\274\177\025\216;D\006R=\332{F\275\n\366B=]*!\275;\231@\275\235\272\233\273\2406T\275\352\221\010\275iO\005;IY\030<d]\322\274]M8\275!\360\345\273\265\302\305\274e\352\307<\207\007;=g\256\014<\220\010Y\275B\371\214\274\305\t\014=\014\'\033\275\304\324\345\2720M5<q\201\025<)\230\025\275\232\030\266\274\312F\215\274\276@\211<W\333_<\252\375\022=\371i\305;y$\371\274\030\375-\275r\252%=\301S7=\276\304\031\275\325\3356=\363pZ\275\252[\310\274\334@3\274\277\301\244\274\203s\016=2\"\001\275U\033<\274y\225O=\037u\226<y/\010\275b\026#\275\307\307\217\273\02218\275Q\325\031\275\017\3647=\313\005\301<;z\250\271\345\321\313:\360\351\032=\212\210^\274S\270h;8\t\'=\246#@=\374\003\035\275}\322\272\2743\273\"\275\244\002\026\275\344\346O=R\232\376\273\314\232(\275\224d5<\023\216\025\275\367\003\313\274\316\342(\275\267\r\304<Q:\017<\367\307$\275V\024\317<\270>1\275\203\272\362<\t\035:\275\003v(\275\345U6=G\035\006<\002U#\275aY4=z\216\234<}f:=\344\365P=\313$\204;\r\326K\275Aq\341<L\345@\275\307\007\347\273J\247F\275S\311[=\002\034\002\275\360c\352\273\221\373\010\275\323D\003\275\205\010V=$\355\212\274\323\276\035=/\033\306<u\245\030\275bBE=_\244\211\274\301\'\255\272\261mR\275O\026U=~\327\016<\354\253\025=\320} \275]\341\177\2745F/<:b\260\274x\231V\275\240\232\013\273\214 [\274\215V\'\275\036\346\362\273\024`L\274Z\303\"=\364\367\031<\030fF=\230\025>=K4I\275\356\t>=\234\372;=\376}\223\274\261t\231\273\226\206\323<\241\261 <\233\306\314;.\001G\274m\347\337\274\003\216J<\352j\321<y\353\020\275\014\244\037\274\315\360.=L\226M=[{\022\273\177\267\277\2722\375\355\274\272m\370<\n@8=\356|Z=;D\2069\376Q\020\275:\203\006\275#\023\263\272>\002\231<\0109U=\240v\233<c\004\311\274\314\351\350<6\004\351<U\014V=\202\361\022\275\346\233\202<GK\367;\373\300\366\272\027Q\010\275\226\231\237\274\225\301\266;\240N\277\274G\242[=J\277\t=n\244\370\274M\272\326\274~\010\361<J\207m\274\217Ga\274\315\"\351\274\001=3\273Y\314\254<\255\2056\275\260\205\014\275\306\213M<\316t\200\274q\301\r\275\233j{<\336\337\374<\221\375\361\274,\316\231\274\2249\037\273?\333\274\274\223\202\277\273\371A\275\274\3515\005<0\270\312<\276\t\004<\0161\311<\304\264\361\273(\'Y\274_\2620\275\037.\345;\277X\362<O\254\"\273\376\265S\275W\327\n\275t\2266;\321\337\255;\325\025\253\274&\016\374\274\327&1\275\035RA\274\373\251\362;\312C_<\013\020+<&\272\330<v\204\202<.D\200\274SU\374\274\351\334\001=I\304\244<\375\0100\275\001\n6=ru\004<\360aS\275Z\250\216\274\360\241}\274\242\'\036=h\321&<T:\032<\355\233W=\214\010\212<\032\362\204<z\353?\275BVJ\274\323\030\220<$>\'=\202\376\\;\3465t:\0343\030\275\325\337\276\274\033\037\266\274\353[Y=\0070\017\275\206\363\307\274n_\\<\360\253y\274\200\2040\275\2161%\275s\222\n=]\216\236\273\010\273H=\327K\210\274\361+\270<\351\375\007\274}j\346\273\024\006\377\274P\202Q= \234\241\273\035\007\264<\325\253\324\274e\003|\273m\203\325<\272\003\276:\330\3518=\036cL9I\264\371\274W(\035\273\272/\215;0\r;\275o\3222\275S\244h\274nK\321\274s\247\347;\260\036\236<\356w\313<\317\315?\275\221=K=6\3240\275 @\032=\250\264\n\275\325q)=8A2=5\034;\275\204\002\010<3\233!=::\227\274\316[\021=p\207\033\275\310z\003\275\n\303?<\373\377C<%\027\337<\210>\241<c\303\343\273\343\277/\274\261\027\325;Z.\244\274\363\252Y=\356DN<\266\300)\273.\177\014<\250\032N=\255\341\246<\020\366)<x\241(\274\n3\234<^\322B\275B4\'\275I\200u<W\256\035\275\245\024|\274\235\202\347;\271\241E\274s\245\376<(_(<F|W\274\254D\024\275B\213\355\274\026\3776\275?\246\000=gq\331;gC[=\216*%\275\372\353V\273\365\035\242\274\204\020H=\365\200S\2754:O=$r(=Tf\251\274<U\266<\314SN\275\337\202\034\273\345x\200\273\362q[=\232\366\036=\256\013\004=7\2746<\002\224\033\275\025\255C\275\365\037V\275T\314\"\275\254\215M=W\344\031\274\263M\300\274\253\336c;\372\317\315\2744\375R\275e\206I=\223\340\230\274D\026\353<\221\262?<:U\320\273\263\010\014=\013o\204<\005\254\000=G\372\022=V\0246\275\370\005\272\274L\304\247\274\230\0237\275\265W\215<V[*\275{\000%<\303\001\\=\3313w<R\372\024=C\303N\275\\\374@=dxO=\322\254\007=\236A\244\274\343\211\323\274\300\257\247\274\321\327\346\274\372\027\311<,\2759\275\230l3=1\354S\275\214\315\001\275+z\016=\371\014\211<\020\237\336\274?x,\275\206\266\255\273\220\206M=\332T\246\271\201\2512\275\253\016P=\335t&=n\307\020\274\331\370\225\274\346\033^\274\321*\316\274\335\203\262<J\273.\275B\232Z\275C\033f\274}\002H=\276C\265\274T\237\370\274c\372\364\274#2\270<\362\256Y=\366\373#\275\005\222:=6\253&\275\356\250P\275\313\034S\275d\346\357<\000\222\250\274+\021\346\274i,!=\362\363<=\253\245\006\275D\270,\275k\315@=\225\350\033=\371\014\316;\317t\265<\306\3045\275\224\261\336<\231t\002\275A*\210<\201_\245\274\271HS<L\233u<\363\317\256;6\345\022\275\211\366A\273\251y&\274\005\223B\275\006\3414=\223N:=d\241\014=\317G\335\274t\266D=jz8<\335\024[<\250\025\020=\3215J=)\320\316\274\321S5\275\224>A\274zl\007\275\353^\365;l!F\275\256\351)=\251\252\311<\246\365};$\037\032\274]\227\230\274iz@\274~\363\035\275\372\305k\274\005CM\275\233l\306;\007\3215=\247\253\301\274\021\311%<7\014=\275\035\222\337<\006\351\234\274\345L\006\275]\365R\275(\275\361\274\233\026O=l\250H\275\345\320b\274\305\203\360<\377w\031\275^<\255;G\204\341:\355pQ<\360\225W\275KO =\275\'9<r\343\017=\n\"\342<-I\333<\205\002\037\275\r8\362\274\262\311\"=f \256\272o\037\014=i\260\251\273\330\351\231\272jX\264\274\221\236\277;%\370\303\273;C\225\274\375\362\016=L\333W\275\270\3324\275 Q\002<(\232:\275\242\263N=T0\321<\337\344\342;<\007\214\272z\177\347\274\"i\274\273LE#\275Hq\326\274J\341\324\274\276\351M<\306\370j<\371\025\203<f\r\023=\026\357\036=r\307Z\275\351\346\210<\376\272A\275I\254\325<a\355T=\027\330\030\274\370\3669\275%i\022\275\376\ny<:\024\017\2756\277\034<X\223\234\274#\310\031\275Y;\204:\002\355I<\336\211\200<\347C+\275\330\244\254;\347-(\275\340I\201\274\275T7=\363\331\240\274Z(K<q\321\221<\273\366F\274/\003\204<\326\0373\275FA\361\274\335e&=\3303]\2744\206u<U\326I8J\252\304\274\316\231\002;k\3109\275\017\341\373<rw\340\274\237\027B=\3134K\275W`X\275b\004\"\275\225\202\273<0\0309\275\254>\257\274\215\356\256<\211\310g\274\024,\303\274<\273\004\274\212,\031\274\333\352\252\274\013\331E<\030\001\205\272\254 \231\2741\201\321\274\330\201\005\275\010\307\003=\267\212\224<\2360\274<x\275\333\274g\036O=]\353\270\274\026f\014=\025\032K\275HY\177\274R\333\217<5C\253<_\006&=\177\233!=\031\375\030==g\356<\252\'0=\351\341\037<\371\371V<&\235T</\034\324<\270\245\031\275\231!U=\300\203\317<\205I\245<tk$<b\037I;\006{o<\000\177\035=\016\2312\275\312_G<`>>\275~\300-\2751\325\007<\202W!=z\222\200\274mJ\366\274\233\3652\273D\345\326\274 \014\020=050=\214\224{<\3619I\275\313\322\027<\305a\323\274\374)\301\273\032\257@=\371\211\336\273\222\033\020\274\236;2=\251\377\"\273\337\300J\275\241B7=\242\'\014\275X\033\365<h\250b\274\033)N\275\246z\240\273D\272:=\203g\304\274y=\341\274K32=A\002*;\240\357\314\274\302\243\004\273;\230S\275\220\262==\336\220]\274i\321\n<Z\350\000\275G\253@<tJ6=\022\0248=\020\r\"\275d\371S<\370\211T=\265-\320\274m\325\360\274n\206\324\274\215r\367\274\242t\010=g\236\317;3\330\3159\304\017)\274F\350\323\274\377\360\304\274\307\320\013=Iv\256\274\"\373\023=9\363\020=\022\342\357<d\037 \2752\237\212\274\204\005\203<\034,\033=qiV\275k\346\235\274I\r\245\274k\2275\275\267JP=W2\033=\326\347\342<E\243s;\315W\201<\264\255\017\275\223 \262<;z\010=#\362:\275\0265N\275\200\223%\272\371Qh\274j\212\023\275\001\261\320\274\356\320\023<T\2145=7\361\007=\t\223\304;\323\263\004\275/Y;\275\201\231\000=\032T.=\231\341\254\274N\237\351<s\337\030\274\231\216\"=\022&\221\274\355Ca\271\360\343k\272|\242\032\275\327\276 =X\321\237<\243\216\323\274\256\336\017\275`\232\031\2758\266%\274\205w\302<\341\020$=n\'C\275{\211\n\275\241.\374\274\377\206J\274\245fz<\375\357\031=\223\375\033\275\340YY\275\017\345#\272^\261>\275\375\211+=#-\210;\251\030\002=\350\021<\275$\252\021\275\003\224\310<\203\344$=l\332\326\274\264r4=\006\250\035=\354\003\034\275\354\335L=\262y\361<\254\"L=;\023B\274\304\245\376<\271J+=\223\376\365<\335\264\017=\320\276\"\275\r\227#\274\273=Y\273\250ge\274\207\201\031=\370\214;\274\242+#=(g\352\274z\360\252\273\272qL=d\356U=\2719\377<5\342J=\367r\204<5\022\312<\216=\251\274\035\365\362\274\260\024&=\207\252\202\274\274\247(\275\262\016\310;\306\255M\275\303R\304\274\356;\347;@.c\274\351\274\227\274\235\036O\274lp!<%3\220\274\021\223\271\274\316A\247<\010x\347<\025\rk\274V\376.\275\222\254!=i\250\236<N%4=.\234\014\275\014\261I\275\21556=p\372-=2\310\036\274s\350%=jEO\274\366(\032<\335c\216<(\031m<h\243\261;\347\037N=\026L\003=\312\201\277<\363\272\354\274\264\253\222\274OeZ=eq\360\273]\356B\275\342\247\240<\336\3307=\324C\254\274\336\035\371<\254\345\331:\210\241\205\274I\252\030=J@\014\275\332\215\000\274\202nI\275\0238u<\260J\305;\372\223H=\263]\201;\215\226\304\274\342\200\374<\310\342\365<0\277R=\235~\313\274\323\366p<\013P\004\274Y\006\020\275mC0\275\223{\327\273S\n\344\274P\342\024=\325\004#=I\204\006\274i4\210\274b\016\226\2747\347\357<\367\2407\275\347}8;j;\260<\345\274\235<E\177\307<\336\030X\275\243M\030=\277\347?<\206\'V=\242\345,=\215\3570\275vS@\275\022\360L=\347|\372\274\357\204E;\344\205=:\205\270!=g\360K\275Z\241\023=\311,A\275\033\341\014\2749\264M<G\021\212<YY\023\2754\315\341<@p;\274\350\2120\275\217y\267\2725\333e\274\240\300\006\274e\227=\274\216\362;=Y\205\366\273\365\365u\274\\~\305<\237}\005=\001\272\204<5\222\025=M\326\356;\344\0234\275\364C\335\274,kV=3\312T<\374E\r\275d\001\345:\215\006J=n\232/=\0270%\275\rB!=\361\247\235<\220\361\236<\336\333P=WE\240\273PM\027=\334[5=w\255\234\274\004*\275:\250\346\010\274\233\207>=\034!\007\275\237FC<\033W\321<t\014\223<\303%Q\274\233;%=\353\3775=\324\244\031\275\213\373;\275,\373\016=\311>U=MJ\204<M\3373<e\251\377;\276\2335;*H\277<\215\210,\275\235\330[\275\001\357P\275\337\272\324<\"\325Z\275\376\216\300\274\335\036.=\224\2575=\251\335X=\241\241@=\300[9=\220\213U=\212v\004\274\247\275\032=\252\223\220\274l\304\025=-7(=\334\217\027\274\242\336\320<\346\232D\275~\221%\273\256\252\245\274B\303m<\253\214g\274\273H\350\272v\267\230\274<\020?=\375\035\006\274\211]\343\274\372\355\273<\273e\223<NN =t,x;\302s;\274\346$\030<.\\\304<\231\250\261\274\260\301\027\275\276\346\274<\000\3348=2\274\031\275\337\207\252\274Nd1\275\034\323+=\300d\333<\302wM\275\260\314\026;\226>2=_h\246;\232\334N<\377A7<y\231\365<}\223(=\334\220\330\274t\244\252<\004\027\025\275\367\234\033<\203\250\305\274\222\313\016\275\025>\374<\023\"!=\250d%=\220\331\321\2744\260o\274\370\327@=\241\336\201<\326\r\033\274Q\000/<8\200\007=\356\307\016\275aC\357\274\016O&\275b\376F<\\\376\235<\242\233\326\274\252\036\271<8\334\242<\2576\220<wM\t=\263\200\003\275_\027\371\27466,\275\206\004\212\274|\375[=\013oZ\275\310\360\030\275\243\202\022\275Ke\230<#\230\261\274\021\013\022=\365\0039\275\274\\H=\227\314\355\273p\347\020\274\037~\320<V\307\275;\311\375B;\026\007\340<\320\317U=\204\246\025=\211\207\016=\010\005\353\273\221\364#=\204\010\300;\014`\234<\324\211;<\247\335\277\266\370(\355<\334\t=\274\007P\336<\204\235\241\274K)\366\274\335qA\273\233\212\250\274\037`{\274\275\203\270;\262\215\310:\261\'8=\2766\001\275\265\203\325<\304\347\376\2744\035\237\274\343\230\254\274\205\360/=*%\337\274\000\224\375<O\351\224<9\243\036=\017\303\227\274\033+K=g\371i\274f\322\345;\325\252[=\375V\375<\027\265\342\2742\266\n\275;/$\275\267\244#\2751\3374\275\221\2206\275m\274\001\275R*\025\275\350pM=\'\370\001\275\031f\"\275\341\262Z<\237\034/=\034PD\275\270;?=9\251\274\274\237&\237;X\371\346;[\317\014<\177\2365\275\251l\340\274?L\036\273m\031\341\273\353VO\275\211\344\254\274k\325;=\322\263S\275\331\r\001=\306\317\217<\007\003\016\275?[\207<F\340d\274;\374j\273\246\356J\2759\304A\275\020\211\017\275\325\344H\2755\364O=\0256\'\275\234\346+=\311\277/;\244\031.=\221lE\274\372g%\275\210<\343<\267Oa;\363\377\251\274C\315\031=TL\030<|7\"\275d\021\031=\372\033W=\357\317\232:\342d\321<\017\371W=\206}\243<\371V\025<i a\272\355\211\000={z8<wI/\275\277\270\032=\343\017&\2759,P=\177\214\"\275\300\371p;V\220\027\275\350\247K\2751\204\273<\032\354\211<\340\342O=a\035S\275\236\216\267<\316{\022\275\374\365X<\241\273\302\271a\367\036=DS6\275\372\362\200;\2632U\275\257\303\272\273\023\"\n=\212\314\234<@\233\323<\220\306I<1VD\2753\256+\275\272$\r=\004\020\335\273C\302\375\274l\362\266<\032K,:\022.\005<\006f\237<\274\374\034=\\\016\024=\331\221\234\2747\273x<\267\207\030=\336k\036\275\343\353c\273\272m\370<\274@\010\274P\370\340<\361\241D\275\351\2606\275XS\264;:\276.\275\252`\016=1\324\345\274\360\020\353;\255B\274<X[\215\274giA\273T\232w<\301~\013\275\342\363\210\274\036\026\226\274\340O\004\274\367\334\2779\027\373\267<\221\030\356<\230\203\005=\362\352!\273\335\320\366\274\244&\215<\250\230N\274\251\246\337\274mU\t=D<\n\273nuP=]\377\025\275\t^\307;\243D`<\242\2547=M\253\255\274f\374$\275\237\232\001\275\224\022\013<I \010\275\017\216Z=O%>\275LZR=\016C,=\360\007\004=\217%\250:\323n8<\331\323\034=7v69G>\365\273\276\353\366<Q\357\017=\212\024\352\273r\243\331\273\345\225Y=\375\200\213\274\303<0=\275\354)\273\251\200U\275\025e\005\275\377\253)=\332;\345<C\276\342\274D\rw\274\247[\021\275\220\240\314</YV\275K\343\t=\356\351(\274\211\326<\275\324\006\216<\350\307)<L\333\271;\274\241\355\273\006\267:\275\010\320I\275\341\351\376<U\341m\271\313`\007=\260#*\275C\007!<UR\333<\244\224I<\000r\377\274y\353\237<\374\010\351\272OQ\034\274\033\346$\275\217_8\275wXS=,\023\375\274m\003\315<\004zS\275\n\236F=\031\2525=C\260P=\226#\030\275\226\233J=k\323q\274\177\020\023\275\237\321\333<\341\n1=\256/\313;\321\013\257<\216\352[\2750A\206<\373\025\235\274\211pA=\226np\273\265\352&=.C\365<\032\005I=\335:\'<\200\321\200\2749\353\265<\270\312\251<Z\r\034\275\023\206\272:\271:\030=\310i\002=\223\377@\274\374\304\023=\256FR=\203mX\274\2374\341<\025\030\003\274\276FX\275\230s0\275\221\271\352\274\372\003\017\275\363\t\342\273\026\\n\272\354\024\265<\2626\255\274\003{ \275\210\342\235<\315\270\002\275\272\200\362<\320[R\273\347\216C=\310\270E=\023\037\317\274\337\242\373<B\013\262\274^bL\275,kP<\026U#=\254\216\024\275;\335\312\274\\\332D\275\342\353V=\264\262*\275\275\026\274<\272O7;\377=\300<\035\333\025\275]\263<\273W\177\377<\227\377\265:\244\0352=\352\252\030=\016=\244\274n\2445\275\251\334\007\275-\216\327\274\\.\265\274\315/\343<z\254,<6\266,<da\326<Z_Z=\360\340+=\202\2665\274\302\252\002=\177\317\266\274\241 \000\275\316\213\224<z`Z<\214\321W=[\343.\275Or\351\273\001lV\274\346\035\364<\224\206)=s\316\322<\3054\202<\372`\205:\324\231\316<BW\010\274g\216$\275CV\030\275!##\275\262C5=HZ\364<\270\350\362<\265Y\225<PV\022\275zcN\275\2230\315<\2621Q=\266r\225\274\326\207\362:%\256\214\274o\032+=\224K\237\274\324Z!=\302<\214<7<\340\273v\347\022\275\304\363\033\275\000_\362<\275YG\275W\264\351<\244[\364\274y\371X=\201_\023=\002\2539\275\351Ns<r\274\247\274\221\316E=\3014\022=\314{C=T\347/=u\232\242<R\262h\274\0207\235<M\226\220;F\010~<\254K\"\275\262\207\353\273\341&0\274*\367\235<\341\312?=R\\\004=\210d5\275\310C$=tlU=\004\013,\275\307\360\203<\231\241\036\275\277\277\201<W\345c<\277t7=)\267\020\274\323\027B\275\023\361\255\274j\2129\275\253\3516\275k\336\007\275L)\336<\033(v<\352\205\213\274\315\3672<\222;\324\274\346\030\024<\345\\\276\273\343\337\273\274Y\254\357<]\000Y:\324\032\r<$\2265\274\346L\304<*\304#\275>\3317=*\310{\274\320\317\230\274\221\223\232\274[\204<\273r\021\022=U3\351\273\312\016\224\274\247\022\247;\223\\\3629\031\205S\275\366\311\004=\242v\032\274a\254\024=\225\301\264\273\233V\352\274\024\244\224\274/\032\337;f,\325<\333\2118<r\024\006=\304\301\236\274z9`<\236\345<\274~\312K\275z^M\275\213\322\010\275\024\212\336\274\323\363\031=\t\222\032\273:F\253<l\204\336\274\304\271\337<\345 >;\343\212w\274\013\031/=\237\020\220<\316\\\017\271\220/2\275\016BB;\017\2701=\257\r+\275\213\262`<\314]:<)P\025=\361!9<\225P,<\206\354\333\274\330P\203\273q}&\275\t\365\364\274\310\216c<q\360T=\245\372\244<9O2\274PG;\275PD\234\273z\305:=\366\215\370\274\354\276>\275\002C&=\334\3475\275\312\025=<\221\016O\275@\316\304\274\253\314\371\274\036\340y\274\321\004P\275\026` \275c\265Q\275{\006O\275Fuz;\253\3125\275,x\236\274;\316\332\274A\275\366\273\347j\313\274\367;G\275\030\250\254<m\237\033=\2432\322<\350\240\002\274\000#\261<oN\313\272,\366\302;\3321\'<K\014\022<1\341\216\274\354\306\220\273w\177\274\273\356\211N<\355\232\'\274\306\256\257\274\355\033o\274\306=\036=V\205\306\274U\341\256\274\343\273A=\355v\r=E\220S<\356n\005=M\003\235;W\352\302<^\210?\274\271\237\021=\331F\311\274\344\336B\275\231xG=H\332T<\"\340\020=I\221\365\273\324\024:\275J84=\276<\272\274\311\t\211<\306\275q;\261\321\360<!\216\316\274*/I\275\371V\026\275\244j\352\274\325\237)\275iz\311\274\372`I<T\200\321\2748L\232<+\016\327<Dy\320\271\245\017\263<\1772\307\274n\031\207<\2420\353<\312\010\332<B\316\003\275\274\330\313<\302k\311<\333\n#=X\217H<\267\324$\274[\177\033\275~\367\217<d\302\243\273\013\244\332<\355\013V\275\360\343\367\274\0210J=\227\332\202\274\242\370\005=\340\356==&\217C\275O\016\324\273I\370\224<!\220\036=\265\016\004\275\214\314J=\300\032t:F\332\234<@\327~\274=S\026\275\211\333\376<jJ\203\273=\376\215;\021\224<=\335r,=Z\350(\275\t\216\237\274C\255\n\275I\264\353<\023\372 =]\356\267\274\342]-\273}\233\213\274\327;i<\'qG=Z4\307:\000\371\251\274\310\010\004\275\020\007\'\275\271\2369:g\240\336<S\220-=`\333\367\273\303\370G<\316\034\357\274\031S\375\274\005\314E\275Ds\035\275\013\343)\275\200WI\275\0166\303;a\232\'\274X\234:<+\354\254\274Z\362\034=\300\'R=\355\334\005=\201\301\001=\313-\021\275}\315Z\275[\341\355<8\"\244<>^D\275\273\312T<KU:\275\357!\322\272\323\026E\275G\356\343\273\347\272\243\274]\021o;\370T\024=\351J\034\275\375\277\320<\310+\302<q\006A\274\260\3510=\363\211Z=O\274>=\350\006\216<\313w\206<\352\177!\275\262*\237\274s\370\237\274\201T\031\275\254\267Q=+\365\354\274\252\333\360<A2\235<\221t\031\275\225-*=U\212U=\017\344\321<\220\313\001<\234w<\275\206\361&\275E\246\025=&\273\014\275|\241\372<\027\321\004=\355a\204<\205\034\315\274d\t\377<D\2226\275\311\325\335<\342\027\271\274\310\020\354\274x\0209\275\334\245\006=\'\306\242\274p(\226\274D\223f<\223\rR\275_\256\312\273\360fW=ai\303<\006b\233\274d\244\321:\247\365\234;\373io;\260\007<\275\254\214\337\273f\266\233\274B&7;@E\272\274\372r\035\275\271\257\303<\343uy;\177\327J\275\020T\272<G|\303\273\017\325\350\274zC\035\274\033\255\376<\245,\021\275\202\243\262\274\256\274\351;^\357a\274M\216\000\275\031\350\300\273\301dW=\036\033H\274\377~\332<\3417\206<yl\347<\357\013\026\2757\314\017\274N<$<\264A8=\177\207\355\274\250,\027=\231\027\n<\357\341\031=\032\362\366<\253\204\r\275\024\374?<t3V\275\360\0142\275w\251\306\271L\207\032=m-\010\275Lh\006\2759\010\270<\366\210i\274\246\347\221<+\035~\274\356U6\275\006\212\243<\r\315\232\274\232NW=\022\364R\274\236\305\"=5$\022\275J\365\325\274\'$\"\274.J\234\274\207\207\r=\234\024\227\273nt\360\274\30718=RWQ\272y$\362\273y\000,=6\237Q\275C\253<=\232\211\300\273X\225\000\275\032^y\2738\302-=r\226\031=\317\302\341\274v\274\301\274\222\253Q\275\353\316b\274\032\200e\2736\033(\274\332\244\313\274\337-\t\275th.\275\025[\313<\006\227\325\274\020\251;=q>!=\344%==\006\215\261<\336\331T;\032f\325<\334\355\003;oJD\275f\2110=jvB=r\316\201<s/\353<\327\226#\275\315\032Q\275\215\254\324\273V\0021=\335\206F=l\000,<\244\330\000\274XG\000\275\'\234\265<\221\231+=\025z\r\271r6\310;\224l2<\026\374n<^w\306;[\207\016<A\232\351\274x$P=a?\310;=\006I<-\177\002\275\0345\021\275\343DH=\331C\003=\314\250W\275\344A$;\363\307\204\274\257f\320;\360V;\275\200\230\264<\311T\216\274X\344\243\274iI)=?9\322\274\016\032<\275\253\373[=2RW\275\006\027\257<\271\362\211<u\365\017=\302k\363\274a\3140=\300\375\232;\321\313\372;rQ\300\273FUJ\275r\202T<Aa\034\275\343\263T<\312\321\231<K\277\3579*4\035=\2261<\275H\035\254\274U\002\231;?\037\231<\207b\020=\001]\007<\344\342O\275=\270#\275\274\325\207\274\230vZ<w\243\376\274.\306\343\274\350\245J=!l\013\275\027\213\307<P\253Q=G\343\345<\207k\207\274\000\276\023=\337l\030=R\243<= \271n\273\033*\364\273\241\235\226;\300\362\217<\017#\363\273\213l\312\273\307\312\370\273?\nS\274\014\270W\272\313\331\252<\234\256\035\275:a)\275\331\255\221\274WF\350\274\377V\337:\333b\301\272\337\230\034\275\0170\255\274\016&\237\273(\033\363\273\257\022\214\274\022\032:\275\301\032\330;\r\242G\273}\242\234\274*\270W=\265\212\353<\376R\200<\305\324\022=*\226A=\3479\035<\'m\304\274\307 \334<)TE=\374T\216<\345\360\201:\245\356s;\2301\004<d\346\252<4\025s;\355\251\2647m\326I=\020\353>\274\276\330V\273L\233&=\344\356\320\274\330\310\n=\272\005\005:\275\340\005\274\'\352\t=\177U\225<\226iK\275KJ\004\275\273j\261;R7,\275\023\366\272<\273\320\265<u\0369\275N\241=\2757\356\027\275\243\343\035=\2423\204\274\004\304Q\275ej\345<\263V\'\275ks\t\275\341L[;\017\346T\274\000l\333\274\300\033\267\274b\241\254;7f\020\274\026\020\361:t\023\361\274R\223\364\273\235\2066=\325O\272<C\r8\275\306[\257\274\235A\262\274-\2668=\231\225\"\275\226\027\r=\265\013\302\272\257\311G;\376\016\277\274C\312\314<&\332\336\274\030\\\310\274}\3330=\350\247\021\274\211\241S<`E\306\271w\032\330\274\030\226H=\200xC<\3257\322\274\t\3266\273\362OG=\261\025T;-\024\257<\211\261\336\2721\274\002=\356\361\027\275*\014m<\204\r*\275\212\312/\273\217\202\244<u\000U\275\242\035\326\274E\036\305\274\267G\345;\371\330U\275M\346\215<\032\013\226;\327\305\232<>j\244<\315\2029\275\377i\363<F>.=\313\037\035\275$\022H\275\372\326\321\274\317Q$\2758V\036\274\233\205O\275\245v\016\274-\323\363\274\345X\225\274}o\303;\372\273\004\274\007\310Y\275U\322G=\216\225\n\275W\255r;h$x;HH|<A\312\320<nMC=\232\033<=\231]\272\27337A;B\334?\275\3365\342\274\351{\370\272J\370\037\275\034\217\212<n*?;\004\344V=k3J=\230C\016=\016\231\341<\233\014\346\273\220\323\026=\255\211_\273\014\374\017=\242mP=\033\370.<\245\013F=\234\037\r<\205\216\231;\366;\013=\206q\343\273\350\3453\274\"\247X\275\332\017\270<\347\243@<\231?t\274H\006S\275\032ZJ\274\364\204(=\200\203\234\274\341\275B\275K\215:\275i\306\360\274\323J\r\275\254\367\306<\2538\276\2741\242\230;R\341\264:^\327E\274\036\3304\275\010\254\'\275\207\371\333<.\030\365<-\347\341\274mt\003=\275\205\267\274\360c\276\274W\243B\274\217Y\243\274N\n\374\273\251:0\273\002\207E\275\246\372\t\272WY\020=J\305O=\205EJ=\211\360\334\274L\346\206<F\264 \274(\2221\275\0341\020=\345\226I\275p\353\014\275?\327;=\260\374\004=\261\022\001=\322A\356<\234\374A\275\027\200O=\005\317i<\362\344\356<\305S\020\273\000[\260<>>W=\242\256\215;\372\346\005\275\203\006\321\274X\344+=\357\274\262\274\027\234\033\272\330sW\274t\207\251\274\336\264\371\273\352\274-=\233\262\340;\323\t\336<\026\332p\2711\342\030\275\2102\007\275\210\365\016\275\0054\343;\005@$\275\346\341I<O\375\024\275\244S\017\275(K\274<\016\2271\274|\342[\275\020\346\246\274fP\245<p\'a:\350\004\020=\274Y\372\274\206[\277\274\203\320%\275\355+\277<\313\241\010\275\232\361\370<\3469\266<\311\000<\275\232\347\233:v\364\251\273md\272;O\275t<\271>\204;\177w\021\274\224\211\337\274h\315\r=\032B6\275%\200\022=I\032\373\274\272\237\357\274\351\261\n=\237\031J<\035?\037=\255+\027\271\333\244\025\275=^=\275\267K\202;\333\277\010<q\261!\275L\204\320<1\346\r=\217\364;\275\362C\230<\347e\014=\037\032\325\274\274\\\366<\265\323%<\"_0=\027\230\016\275i\"L=B\335\016=\35058\274%\306\n\274\370\220C=\226\214\342<\270X5=s\225E\275\320\220\266\272-\331\021\274\344I\036=\027\360\000\2752ro<3\251\010=9\331\334<,OP<~R\020=\235\243*<\234\347\256\274\202%\335<L>*=[\323\204\274\340\205\025\275}\375k;An\371<\211\270S\274\027s\024\275\277\300\277<s\216\307\273\321^\001\275a\267\304\274\245<\\\274_U\004\274i\311?=\310\372T\275\027\356Q=\\A8=,\305\007=\210\310\004\274`\001\037<\204\353#<`\274\024\274\217\310\031\2755\204\317\274l\003l<\201\273\234<O;\3729\033o\373\273\300\2131\275\2719V\274B\274\230<\201\251\200\272\361\362\033=7\330\245<\207?\265<;6\311<\321\241%\275 \023\000\275\216v\335\274\334\202\353<\211S\341\274x\375\374\274xf\205<T\226\277\274\277\'\\<\232\312#<\301QR\273\360@\256\274\363V\300\273R\034\311\274\266\266\301<\361\236b\273\'[T\275\306\244\005=\317\231A\275\203\013\361\274\031\233Q<Z\035\177\274\313\315i<\330a\336\274\275\345\010=\003\325F\275d\376\025<\374zO\274\305\3458=*\204\333<Q\315\245\274f\035M=\214\221\315\272a\021V=\230,\027\274\221\251\372\273\024\264Z;\210\361V=\025M\002;\361=#\275\317\021V=\352\305\352<)\027\260\274\327r\277<\333\014Z=\247\251\337\274\251\301P\275@)\353\274\003\001*\275\351\303?=C\246\234\274\324P\031=\346\003;\274\321\033E\275_\336\236\274p\0204;G\025O\272j\037\027=s\333[\274\242\363\373<\371\354_;g\337\210<.\016\020=,;\220<E\370-\274o\305t\2733x\002=\3555)\275t\2117<\261\262\333\274mmE\275E\311I\275\000\364\334<\212\351}\273\263\035\025=\275Q\013=\323\272~\274\352\034\020\275\347L\010=\007E\023\275\363,+=\317E\363\274t\000*\275>1\273\274\340\344y<#\356\236<\022\200\366;\342\0307\275\274\220:=g\372\347\274\254\354\222\274\322a\261<UZ\346\273\363k\235\273\231\231\333<\330\007R\274\314o\241\274w#\003=\357TT=&N\351<\242?<\2731\005\026\275Z\266\027=\357\273\251<\321\2223<\214/\002=\001@\323\274Y\036\037\275-\274\221\274\021\345\220<\236\032\003\2747\246\233<\033\365Y\275\006p\026=\016\377,=q\nF\274\300\373T\275\224mk<\312\325=\275\320b\374<\304\327\003<\031\321E\274\373\006L;\23764=7\032\000=u\030\025<r\210\302<m\251\305\274\3479\006\275\3770\270\274\274{\022=\177\231\036=\022~n\274\2079\305\2744\215\343<\224\370\336<\247\257\007\275\004v\t\275BR&;`\254\302\273\026\222\235;\244rT\275\\CX\2756g\021=\033\224;<\\y\347\274L\320\023\274\205\356\254<6\340\006=|\363>\2744\302\340\274\371\273\301\274CC\273\274\"v\216\274\320\211\362<\014rq\274\222K)=@\341\366;\332m\211<YF\306<\261&K\275\261\310\035=\202XS\275DDB=m8Q\275\201\034T\273x\221H=hme\274A\007@\273\324\246\240;\311\200\320<rF\037=\375gF\274b\\\273\274v\277\374\274dP:\275!\223{<\250zW::8.\275\212\273\206<\367\252L=\244\247\013=M\374\336\274\366\364\013=#\273\032\273Zy0\275\275\370U< @\243<q\324\373\274D\367\321<4[w;\305y\025\2757\030\025\273r\244\t<N\273\036=w\026\334\273\2220@\275\001\2235=\310\203Z\275%(\222\273\356\362\023\275Ty\345<\276H6=\236\025\037\275\021\276W=^\'\350\274\251\\\212\274W\005\035=\365\242\222\274\236V,=\203H\177<.W-\275\2036\306\274\344\020S=\024\342\030\275p\315\030\275s\335\346<\344\257\356\271q0\004\2758\264F\271\207\277\r=\204J(<\232\'9\275\275\340V=X\340\014\275\236\274\251<\336\352\221<I\237\256\274(~\021=\331\240\270\274\310\304F=n\316\004\272\300\207C\275\220\305\365\274\352\021g\274\372d\230<q\025\007\275\237w8\274\217\261:\275\261\255\321:;\206\342<)\3307<\245j/=\307\330\316;7\355==\007\335\003\275\313y\200;2\207\026\275\347\010I=j\312\007=jo3=G;_<\373\2455={\3353=\025~\334\274\307\321\212<\322\363\303\273\002i=\275\016\260\204\274\352\352\324\274\336\026\376<_\351\234<a\025\374<\311\373\377<\216\252>=,8E=\037f2\275\005\303:=h@\025=1\025S=\343\317\227<\0143A\275\367:\\<\377\321\244\273:\326\030\275\036\333\022\275\267\340@\275\354\271\n\275p\035Z;\336\216Q\274\201\214\177<\334\356\273\274\"\200n\272=\0235;\314\013\031\275\275f\332<\250\253\330\274\357\264\"=\300\327\302\274\264\245\277<\341p\316<\267\016\233<[(\211<\231\273q<\242M/=wE\030=\036\036I\275]\2128<h\314\r<\252\215\235<\363\234-=\3511\026\275\267aT=\030\223,\275\374}\225\274\373\360t\274\360\022\230\274\3211\031;\227\360X=\203fs\274\204\216J\275\355\216K=\034\242\302<\332\367$<\204\245\345<\344\263w\274| \005\275-o\010<\203\002\001<\255\257\210\2731\263\203\273i >\275\001(L\273\325\026\\=\020ru;\264E\323<@\334\351:\230m\326<#H$\274\032\343\352</\220I\275\232J\336<\342\023H=\357\314\222\274\354\262\307<\323V2=];\020=mD\260<.h\342\274\336U\023\275J\247\235\274\035\334Z\275\221c\332<r&\"\275\250\023;=X\230\254;\227\320\216<\224\275\234\274\224g\n=\211@\276\274<\272/=\211J}<\367\262\020=\345\250\377\2746\267\301\273U\234<\275\330\366\201\274\251{Y\275\210\007\027=G/\331:3\313\005\275\2145\022=2P\302\274\232\336\330\274\003\221\261\273\264\027\021<)\312F\275\270\330\337<%\252X==DO\274\367\240\020\275\277\365\310;jS\370<y$\037\274\264\303\025=\246\346\375<\364?\371\274~\306I=\244\273\346\274\324\300?\274\320\'\010=\272k:=\274\3313=]\332G\275\262<\034=m26\275\\\315S\275j\365\025\275\305\320\214\274)\016\327\273o\354\000=\322y,=\rn\353<\211\337I\275\230\3012=+5!<\320\204\033<\257`\376\274iJ\025=J\202\332\273~F<=Q=\006=&\330!<\354M(={+\350<\245\303\014<v@\n\275\014\340\016\275\211XQ\275.\326D=G\313\347:\013\337)\275\270]\016\273\361*R\275uJ3=g~\222<\2375\313<\365\034\244\272g\023\330\274Wq\244<\336\372\320\274CeG\275;?l<\353RE\274\022\326\006=\235n\236<\336a;\275e\030\247<\010~\325\274\332M\\<\025\237\034\275\030\006V\275\337\352&=\177\317\275<\307\267\350\274\027$L\275\035\344\260\273\250\335\036\275\260\031\351;\rB+=\221\365\017\275\001\367\266\271<99\274M\';\275\262\364g<\240\262\031\275\351()\275\323\314\201\273\311)R\275,1\377<T\235\354<i\270\242<S{\344;\216a\024\275\303a\017<n\335W\275t\271*=\263\360\374<\016\343D\275\221\235\021\275\037\343e\273U\220\024\274\374\254\026=\320\244B\274\363r=\275I\2010=yy\246<\247\356\236\274]\276N\273\305\354@\2754O\354<\177IZ=\356\307\316<\037\306\240<\013\r\363\274L\203P=\264\004\201\273\374w\034\275\273\326P=KO\371\2733$\031\273T\222\303\274\033KO\2751\313\r<nc6=\302\177>\275-:G\273\035\026P\275\374Ah<\356V\255\273\311\317T\275\241\262$\275a`G=\016^.\275\207\005G\274\332J!=\256\221}<\215\"\030=C\345&=\350\344+=\326\215\343\272\257\344\034\275\223\341\376<\275/\033=\365F#=\374\341[\273&\372Y=G\256\220<\006\217\255\274\267\241\314<\351T,=F\300V=\233OZ\275}#+\271\356\210\344<C\367]\274\314\241\030\275\004+\272\272\256&\230\274\250N\"\275[\316Y\275.9N=Q\374:\273{\032\"\275i\265\'\275y,\036\275\266\007:\275`\367\264\274)\343\376;\205\001\362<\367\346c;\014;\306\273j\034\021=\202\2034=\221v\274\273\341\266\354<Bj\031:X\310\r<\336\213R\275\230\"\242<\200l\374<\370\351\237<\341\241+\275&\236-\2756\211\234\274\354\300T\275\021\236\034<\322:G=&\001\014=@:\"=\254\375\032\274O\220\206<F\243\354<V;5\274\303)\021\275\215\326$\275\252\030\031\275\002\032\035\275\276\231\224<r*\013<32!\274\306z\020\275Fa\006\275b\247\310\272FUW\275V\203:\275^\212\025\275\327\254\242\274\254\3538\275\221\r\303\274?g\237\274\254\273\217;P\223\027=\344>\212\274\272hb;cu\253\273\216A?\2754(2\274\317\242a<9\203)\275\205A<=\363\252\003=5\231}\273\345\264\026\275\272L\277<\340\237\r=\036mG\275\344\361\217<L\205\214<M5$=;{\256<\337\"\365;\002\364\024\275x\371\036=\025~T\275\247\2758\275X\310Z\275\230ZI=\315x2=EC\245;\027\345(\275\347\260\004=\212\006\304\274P\326*=N\232/<\265\345\005\275T\207\275\274\025\354[=\266-,\275\016\255\257;\217\313\026\275d\3260\275\332\014\226<\372\227\022<T\250\334\274\226\027\343;!P\232<\356\334\003=\2661\233\272#\013\260:\221J<<]q\317<\245\230Q\274\002\262\000<~\'\301<\0253\014=$\204\304\274h~I\274\353f\362;#Q&<\003\355\277\2741\325\004<\270\003\227<P\320\216\274\255-@\273\330\3759\274\375\265U=\034\330\223\273\345ZN=\220.\361;q\301\004<\345\366e:\001*-=wL==\243U\265;\360\307\017\275\004<==\355\205\377\274\261\314[\273\256] <8E\036\275\211)\272:\262\277\t\275\007\324\320\274\253.\302<\323\220 =\013Wq\274F\211u<\365\3338\275\223\236N<)\336\236\274\373W\202<\201\030\306\274\372\325;\274\311\200E\275\277L\221<\363\263:\275@\226\264\274\212\256\232\273!M\027\275\350\320-=/wA\274\306\3720=B\307}\274\326\313\r=\346-\215<\365\371i\274-,\361\274\276\330L\275\317)\273;\2739\365\274\235!\362<&\210K=\255-\252;_\272\004\275\t26<\177\n\255<(p;\274\357+\256\274\3662\240\274Uh\377\274\324\306\235\274gr\r\275\342\3121=\353m<=l\212{:M\274\334\273\370Ue<G\025\035\275\020\315\035\275] \006\273\010\377\253<\036m\202\274\"\264\027=\263\325\006\275\247\212R=\341)\020;\202$=<0cc;\363\352\374\274\215\234\341\274b\257\002\275\226\260\022=K\254\317\274E\2329<\244\305\014\275r\024\031\275\222\360/<\025\264\034<\010\265)=\257z\r=\250 \235\274\247\255\010\273\001\277O\274\361\014\247\274f\331{\272\"\2201=\005\370\270\274t,\276<hOT\275\036\245,\275UV\024\275A\342\322\274!\345&=PqH=rB\242\273\324\204)\275\020\236\310\273{\0164=}82\275\020\030\002\275\264i\222;\277\007_<\247\001\353<!\353\037=\360\302\231:\334P\007=C7\001=\244Y\211\273c\326\361<\207A\027\275\300\352\313\274qJ\234\274\237\221\362\273.!&\275\322E\216\273\344\252#\275\301\367Y=\263\362\264;\240K\265<|\310\035\275\006\216\001\275\210\321\267\273nW\242\274\253N\"\275\n\311.=\016\306<\275J\\9=\020\025q<\023{P=\334E\324\274\356\3110=\235\225G=\337\\4=\177}T<i\372$\275^\360\265;\022\300\205\274k3T\274O\031\344\274\'<\377\274\010\251N=\035\243\023=LtB=\327*\356<).R=\032\235\327\274e\276\344\274\373\266>\275\202&@=[:d\274\222\227A\274.}\"=\010\256N=g#F\275\322\214\004\275\020G\032\275D\027#<Q\350\221\273</\227<o\240\373;\233\314\033\275\361\211<<a\314\n\275A\227@<o\336\213<\275\010Z=\3744\360;2 k\274w\2463=\341\211Y=+\216N\275~\274\370<\323$\002=\333\271!=\245\313T;E\024\032=\334\271\217\2742\236\337<\236[Z<$3\';\323\'\224\274\252\n\001=\242\2722\275\321\003.<\017\240\226\274Hsr;\366#\246\272\366\351F\275MKj\274m\002\327<\271 P\275W\033\037\275e\031\225;\362G\022\275d_>\275h,\005\2755N\302\272y#[\275\361\022\353\274j\216\225\274o\001H=\010\320\000\275\337\246&=\276j==\336\332\244\274\357\311H\274[\023o<\225\355\271\274`g\333<\256\254\007=\265\203\370<\013=^;\364g\372\274;0\232<\301\332 \275\211h\271;h#\270\274M/\300<z\005\320</MQ\275\030\304)\274iS\304\272\322z!=\017;\036\274\323\254:=\332\022\346\274_y\001=\001\222O=\217\354L\274\302\317\006\275ajS;\210\330 \275T\322\016=H\201Q\274n\'\005=/\352\025\274O\236\207\274\364\202S=\361\360\023=eN\n=\035~s\274\247*V\274\336!\'\274V\031\020=\207\331%\275\034%\"=\245a2=\302\362\316\274?{:=\354F\234<K\275\323\273w\350\236<\376\036\243\274Ef\037=V\005#=I\365\r\274\354{G\275\274dO\275G\230\t\2725\361n\274\021]I<Ni;<;\340\353\274\304\240\010=Nv\342<\365\024\033<\370\013\361\274A\276/=\235T\346\2748\2321\275\211r3\275C\343X\275\367\270\316\274\000\253V<8R[\275\202\2653\275\022\237R=m\243Z=\360\247P=\024\332X\275\335PW\275\r\2715=\023p\377<\345\300Z=RbT=\305\021\017=K\032\222\274\220F?\275\300\367\372\274\243\014\352<5\014\271<\372\032\r=\022\005\247\274\337\033\367<`\247\034=\203r\340\273X\270\354\274\350\312V\275\r\215\010\275$A\256\273G\214K=BU\007=\r\277%\275X\224\254\274\252\257M\275\324i\234\274N7P\275\003\324\027\274?\357X=\"\224\037\275I\204\246\274s\245O<-\3670\275\227\nV=\226\314f:fg6\275gDd<]\220\'\275\206\334\210<\032e\232<\026H@\275E\022\257<n\342\307;_\365_<\003\305\036<(\017\316\274S\007p<\230\301\\\273T\253\356\273\274\226\364\274\261\320\371<\3132\271\273E\035\034\275r\321\217\274\202\177\032=\302\237&<d\025Y\275\000\224\002<y#G\275*U\243\273\200K[\2745\016*\275\307\337\210\273\240\316\252\272\326\237Y=\315\270\037\275\244\256/=\033(\372;\336\021\000=79\230\273L\373\206<V\005N=\0322\027\275)>1\275\244r\254<\006\336%=~\257A\275\254\034N\275\332\272\223\274dAA\275\016\362\375<(q\261\274\254\002Y\275D\275\017=\317\350\247<\325\211\301\274\017~\254<\305r\026\274@7\020\275\304\232\033\275\312\330\242<\345\2172\275\255:\232<\2366Q=M\002\215<\240\231\346\274\205\277\311\274U\330\353<\017\212\033=_\275\014=\007B@=n\305\225<\253\244O\275\005\277\022;\374\230!\275\3119\217<\246|a<s\325\252<\205\267\324;\210\240%\274NP\017\275\236\342\211:\346\202\031\274e(\035\275\354\\\230<\336\330\237\2722\352V=\"]\223<\266<U=\2661,=(\307\010\275~\216\004=N\323:;H\364@=\235\224O<\213G+\275\331\236)\274\377u0\275\215?\004<\030pQ<vZ\374<\001\t\245<zW\221\274A\2124<\232\322\261\274qS\001\275\236\367\340\274C\354\022<g\337\323<\205\331\006\275{\212\341<wW\340\2741\250\226\274\271\"\352<\262\223=\275\265U6\2754s}\274}\343\025=\366^\201\274\206\364f<\352\267\025\275u\351\344\274<\301\360\273\357y\316\274\357A\225\274\321\023#\275\332\236W\275*\017!\275O\352\231\274J\200?\275\314#\251<\021\037S<A\355\210\274+\"I=\215Sa:\211\275\201<K\"B=^\322v\274n\276\324<\356O\335\273y(D\275\266q\246\272SR\234\274\376\244\310<R\201\340;\"\341\327\273\001\371e\274\320U\363\273\326\261:\275:\235\352\274]-\013\275\232\222Y=\023\360\014=\224E =\255\322E<\360\256\035\275\\&#=\247\343\010\275\241\032\330<\361\367I\275\r\233]\273\226y\277\274(gL=\2530H\2755\306\301\274>9N\274?c\243\274\3253l\274\304UK\272\243\323\030\274\207\360a<\2700]<\344\367\36495\346\300\273\220\326\255<\013\356\375\2740\356\\<W\003\373\270=\035S\275\220\214\033=\377\327\251\274:8\327<\236\232\344<Z\273A\275\371\014\235<8/\"\275\214\317+=r-\022=mp&=b\375\234;B\277\240<\001Z{:\327?O\275\200\027\366\272\350\026\007=\337\270\275\272\337\010\210<2\2055;-\333@<\323\005\212\274Vw\365<\031\255 \274\333\335\215<\364+\274<v\321\034\275\316\216Z\274W\311\325\273i-)\275\2173 <\351\306\003=\330c\347\273\242H\002<\370\344,\274\337\362w<Y\327\210:\306\203\357\272(\177!<\335,\267<\233N\004\275\345\262\335\274Bv\307<\326\025\336\274[\241\346<\n\304\000\275\032k-=#\202\340\274D\002J\274\263\363!=\261\373M;JTS\275\207mD=\231\220\277;\241\312\230<\030\3461<\202xt<\020C\014\275\350d\001\275\2034\362<\316\352\250;\200H\311\274\273\377[\275\226\240\352\274)\356\312\274\020\003U\274Q\265\277<\344\023\200<.\357\267\274\254\'@\274H\032\006=h\235\026<1\245\'=\025\346\214<\037\266\367\274\027\245\022=\t\375Q\275\213\367)\275\256d\264<U\246\004\275\257\004\016<\000\210\223\274\244\031-\275\312\234\377\273\027\3271=\345\033\273<4\243\013=(\335\205\274\334\254%\274\330a[=WJ\022\275}\357\200\274\363\267\032=Zp\003=x\273\214<\320I:;\247\006\0238\n\'\234<\324\237\272\274\375|\010=\234L\222<\262\201\307\273\304\310\006=\241`-\275h\3419=\340\325\225\274\251\254\343\273\307\272\251<2XN\275QY\021\275\220X\013=Z\344\203:UL\220\274\'\356\004\275P\212^;/\2767\275\242\227\350<\332`5=\237\341@;\377\331+\275r\300\005\275F\033\001\275\223\342\232<-\205\207<\300\241\317<\014\037.\275\351H\276<\036\305X=\007\021\3339t5\211<\261\235N\275\206(\024\275\360\343\363\274g\313\025=\345H\030\275\317\354\000\275\367a\216<\351P\033\275\226S&;\277\254D\275T\322\030<T\021\221<\313\3634\275\270\030\301\273\300\313\230;\367[\262<Pr4\275\231\201F\2759.\304\274\305\2314=5\346T\275\270\323\225<\025\006\233<[\267B\275\350y\376<\272\271(=\322\016\033=\366\213\353\274\020\260!=\353\355=\273\325^\245<\232\266!\275 j\005\275\300\326\341;)\202X<\244\2351=T\374\332<~\210?;\017\274\025\275\224\364\311<\013\272[=\rK\225<A\314\003\275\t\324D=|k\032<\0204\215\274\351cc\274u\267O=n\3202\275To\005=\316Ej;\250OG\275\355\351\374<H`\320\274V|\233\274\317\356-\275\357\357\025\275@\370\027=^\n6=\267\264B\275\377\321D=\2351\254<\357V~<>%\256\274\325\252\211\274f\326*\275\250\323\001\275\261\014\017<\327\276\024\275\307\200\t\275\327\210\327;\374]\003\275\325\2462<\211\315\024\275j\002\024=\352\001\r=\233\"8=\2041\236\274\034\346.\275EE\324<\310\323Z\273m\351\212<\013(\350\2730\224(\274()!=\274\311\006\275\210Q\032=\034w,\275\366\207\310\274\336j\207<`\017\256\274\361\231Q\275K\344\372\274\203\335\371\273g\315B\275\373]+=\010\337d\274^\315\310\273\242 [=\216\216 \273\255\216%<\205\342\262\274\020P\203\273s\223\034=S\300H\275+\360\222<\373\3729<\013\024\246\2748\003A<\272\361\033=LE\266\274@\205O=z\200\343<\226\222(\275ih\237\274\362\202\013<\325\336F\274+\307\013\275\023\235t\274O\246\254\274\311\363\033\275\351\'H=\247E\277\274w\364\377\274\313t\021;\310\245\014\275l#&=\227%[=&G<\275\332\277r\274>\341(\275{A@<\203\264\270<Va]\2749\034\364\274Pr\035=ms\001;\222\255!=\276\246:=\023-D=]\'\271:+Gk\274\014\223H=.\177=\275\340aY=\344\242\307<\257N&=\203\343*=\014[p\274\332U =\000f\272\273x\274\260;L\013\322<\365\222\022\275\025\313\244\274\241g2=\232\247\003=\324\356\351;\2017\270<\327\202\034\275\024z\366;o\2370=X\307\253\274n\201\026=\263\363K\275\220U#\275gGR\274\000\261\317\274\270k\213\272\252\364\375\274\277n\001=\013\304\203\274\376\303\377\274\312\2641\275\274o\246\2739\217/=\250\177\337\274\244i\017\275\014\316-=\n\003\351\274\235\201+\274\347\001\255\273\370\260Q\275\001,\215<\003@\267<\353Y\324\274\343+\372\274\224\216\253:/i\227\274\276b\371\272\375\2058\2747YR=T\367;<\3610\246\274\244c\355<\023\226,\274H\232\031\275?\004:=\307\341\352<\244^*=\006y4\274<+Z\275,\226\233<\250\332M\275\240=Z\275\322\304\324\274\210e\371<`\364\227<\r\r\272<}v\214\274\361++=\334\3320\275/\215 ==s.=l\t\025\275\026#M=\353\253Z\275\375\326D;+v$\275\322\020<\275\224\322\234<\2676W\275\227\027<=K\341/9\246\261\035=\244\311\360;\340\262\017=\353\305\253\274&\035\304;\252\374\275\274\261\233\272<\255\346\034=a\271(\275\261\202\317<\257T\371\274\257\370\003=5RI=\226\220i\274\023\025Y=\260HN<UD?\275\022\246L\275\227\020W\2754N@<\\\320\204\273*h\261\274\313b\360\274i\311\350\274\rA\340\273\024H\321\274\273rj\274)rq\274\3472\n\275&\331\301<\212+\221<\345\222/\273#\235*=D\310\224:\271\035\304;\201\276A=\013YJ;M\236\334<U\305\026\274g\256\020\275\247\223Q=l\274.=x\2744\275\257c\001<\236\344\026<v\341\313<\331m\033\275\214mv;\300\331\002\274\235\252\330\274\357d\300\274\255\240\003=\016q\354\274\033\3430=O\305k\273\233\303\314<$AR\273j\006.=|\375R<\002!$\275k\3317\275\022\232\321\274h\362\n\275\r\026\350\274\370TB=4\035\222\273e\274>\274\307\t\224\272\255\350F<\327\002\031\275R\0045\274L\305<=\000\322O=\263W\365\273\324\261\354\274;:h<\236\0047=<\361P\272rr\3759\036\255\033\275\020=\370<\033\017\006=-\261\306\273\215I1=\313\236#\275b\225\005<N\316\216<\340q\260<o\205\303\274hr5<RUC\275\356\202\243\274\354N\r\275T\3529\274\223X{:\374\343\014\275B\267\030=\2024G\275\360\360\272\273m\3744\275\023Z7\275\331\233\257<\370\276\r;\274q3\275Ma-\275\215#\005=~D\331\274\231\225R\275\202\256\033\275\005\2562\275Y;\030=@\311\276<\262v\036\275\277tj<\037Mk\274.\255\216;\026%\024=\021\317\322;f\230U\275\003\025\024=k\032\356<\216u\207;H\304\311\274\306\027\203<U\330\035=\300\224\322<Y\316\014=\\\355\221<\2677\243<\237\037\205\274r8\251;+\310\350\274\357\272!=\303\207A=\237\377\217\274Br<\275\320Vj<\255\307\370\273l\324\010=r\300\374\273kqD=8\373S\275\350\274\005\275\331\0271=;J\014=\004\271\360;\330yJ\274\217g\320<r\230H=9QZ=\245\n\305</\363\276\274p\026(=\305vX\274\260\215\353\274\025\275P=[\014\035=\303\204\025\275\264\177\022<\3719)\275\030\003\315\274?F0=\001UG\275S\325\006;1X&=u\\R\273\257Hm<\252\263*<\304\2026\275\237\007\023\274g;\345;\206\314\222<\023gC\275S\037T\274\330\034[\274\327)q\274\025\245\332\274\211g\016\274\023\351\233\274\310Y\320<\007\322\257;\222\0321<*\201T=\316\024R\274K7\210\274\027\016^;\202\331\027\275\313{\324<NI:\273U\333\315<\373%T=\345X\270<7SV\275\364\252\027=\256\300\377\274o\037\253<\007\253\n\275\023\266\033\275R\023\000\275\030\317a\274&\301\231\274\304\002\032=\n\202*=\010\314H\275\034M\244\274G\343\233\273\303y\341\274\361/0\275`a\363\272V\005\013=\214\035\357<\345\326\026<\031g\026\2750\271>=\r!\223\274s\177\340\274?\022\331<\021q\354<Q9\230<{6\366\272\211\375X=\030\276\036\275/{\"=\2505>\275L{2=G;#<\364\017\307:\014\340m<\n\340\032=\343\247\000\275\353UZ=\251:\013\274S\226\336\273\336AL\275\0353\376:\207:E\275Y\035\003<]L\363<\\\264K\275\326o8=\260\333\326<;VP\274^N%<\310\236P=\373\340\372<\347\320\"=\200A\373<\024\270\037=\304\370\310<\242\331\023;:6\236\274V\036\017=\271\205\n<\354\3565<1\263\030\275G9s<\r\325\004=\330\'\241<\242\241@=\013\275\212<\027\036\232\274\367\027W=h\373C\275\312\366\255\274\020\224\212\274T*C;\020\215\267:\225\242\343\273\217\301*=\254\200\246;\007\357\357\274\001\311\025=\334d\263\274\372p\240\2747\372H=\350j\351\274\300U\323<\372\270#=\004\203\221\274{U\032\274\207#\005=\332\214\211<\236\213\"=]\367\035=\265\211 \275{t\353<\347\272E\275\324\014\023=\306s\333<L22\275\346\275\022=\264\276\177< We<\361\364C\275\304\250\301\272;\252Y=p{\213\2743\tE\274\3642R<\333\243\230;\274s\310\274y\010\035\275\2319V=\"7\367\274\007\027R\275\361S\237<\335\250\002\2750e\332<\014T\306<\220\305a<@N\377<\216\014\242<;@@\275=\214\260<h\221D9\220\352\002\275X\013\020=\257&N=\252\266\021\275\010\317\034=\344\240\014;\277\2510=\360\363\006=N\265\"\275\216a\377\273\362\214b<\216w\022\275\335<&=v\026\305<\272\034\222\274>\0065<\325H\322<\n4\025=\353\332\035=\332\375\370\274\244\004?\275uV\371\274\201\017\037=6\037(<\341\216\010\275\223\272@\275\20472\275\025\373\372;\216\324\346\274U\234&\274\235\3115\275\342\274?\274L<C=\337\034K=\345k\306;\320\301[=\261\201\373\274\010\nH\275\251\221\032\275\274\316\034\275\224+5\275\227$P=\267u\000\274\001\313\310:~\0207\275E\020\355\274\240d\217\274\305\365\230\274(n\336\272\267]\335\274`\343\260\274`\326>\275bS\232\274A}\032<\377|\357\2749\201\365\274\243(\023\2759+9=m\034\344\274\n\222z:\334\272g<z\023\227<\272\032\307\274\244\315\243\274\t\227K=\270\336\311\272\346M&\275q\331\005=\000\014L=m\n\026<-\007&\272\214\300L=\360\240\014\275\203F\353\274$\344\026;q\300\354<\371>\025\275\251\024K\275A`\336;kO#\275tW\304\274\321\252\204<hQ=\275 \216X\275\321\316\215<\037>\375<j\253G\275\277K!=\007P[\275A\332\260\274O\377\"\275C\253:=\3643+\275g?\213<\372\357*\275\005v\014=\364\211\367<n\033S\275\300\002>\275rt-=\014\213\314<\244\340\226;\373\313P=\367+\034=\252\007\344\273bP\333<\203\276\036\274\372=\252\274\2540\314<\270\310\267;\212?\332\274\274*\013=1\317\214\274\325\372?=\223|}<j\235\372\273_\305J=(\263\"\274G\212#;\263\273\247;\363a\032=9:\376<\026\360\242\271\266\036\017\275\310!\216\274\215\374\324;\024\241\261\274\315\242\206;n0\350<\021\332\033\274\004R/=\315\323\370<_ND=\037\227Z=(S4\275\237vN=\306\240R=1\001\224\274\322\326\241<\262\t\351;U\253\021\275\276\307P\274K\350\004\275\254\255\344\274\2526\033=\316E_<\20461=VN>\275\376Y\002=\317(T=Q\0054=N\t\013=\253*J=xt6\275q\336T=q\\\"\272W\377#\275\365\3442\275\3106\363<C\372q\273:W?=q\212\315<\346\343R</\004\246<\256#\014=?\274\363\274\201\3637=q\275==Mv.=n\346\001=\023\276 =h\210R\275mAX\274\343\027Y=Rd\221<\237R\031\275\215f+\275K\216\314<\233L\010\272\231\301\014=W\333\323\274I\034\361\274\2338\236<\030\351|\274\357\031\225\274-f%\274\354?M;v\363\344\274T\320\002\275gbJ\275\212\201X\275z\224I=\210\234N\275\3317\335<N\334N\275\\\207\376<\213\t\276\274\'\206}\274cw\365\273\351\260\022=\275\265u\274\231\365\231\274\247f\221<\000:\361\273\004\272\307<\230\237\275<\225\254\"\274\364\032R<A4\306<La\307;\017kI\275Pk\t\275h\247 \275\235\304U\275\0351\361;\332\004\354\274\274\013\330<s\352\r=\352D3=f\274\250\274[\273O\275\323\334\364<b\036,\274]&\035=92\027\274,c\357<\325\354\374;V\347E\275\2520G\275\314g\211<2\371\006=\365zv\274{\264\000<J\215\316<\022\0008\275\346%\320\274\261\1778<\250 O\275\305\201\000\275B\373\005\275\03188\2751m\005=X\264\375\273\325>\302;\354\236?=A%\254\271+\030)\275\351\225\240\274\036r\235\274\356\356\365\274\226/A\275\244\331\033\275^;L\275?0J=\271\272L\275\242\310\342<H\243\367<\376\231\014\275\347I\252<\222\370\364<%\306%\274o\023\n\275\213\t\r=/\376\260\273\206\217\351\274\251\213\t=\222\226B\275]\035V<=C\257;\323\037\023\275\212%\r=(\335\303\274\021\"G\275\2761\266<o\206\264<Pl*=\277e\300<i\007\242\274\347\014=\2742\230\350;\252\200\321\272\266{\344\274p\300;=\217U\345\274\3547\365\274\357\014E=S\\&\275\320\346\t=B\214\020=\253\311\316<\n\300C\275\030\372\\;\236\360\005\274\013\013\220<\360\027,\275\311}F=\234zf:DKK=rd\253\273l2\215\273=\225\030\274\311;(=f\350\230<3\014\360\274s\3630\275L&\342\274j2\376\274\372\257\"=\243\037h<\\y\276;X\340[\275\201\314\037\273\254\301S=\213\003\342:\327\267\220<\202\323\235\274\'K\302\274L\035\246\274\247\261N\275\243\365>=\022\250\007\274IO0\275\314\253\234<KBE=tr\245\274\024\370\320\274\207\0177\275\025\260\017<i\362\327<\336\262>\275\201\2267=WM\000\275??\321\274\204\364K\275b\250\227<\021\275+=\243?\320\274\335\tE=\343f0<N\334!=6\235\313<z\017+=\\\003\001=\"\333\016\275\236\350\026\275\301\273&\275/\375\241;\325\240\'<\205\366\'=0\251\"=\233\226\320\274\200\373\024<\256\317\300<d\2545=\340\334[=\253\t/\275\367E!=\260\264\262<\324\026\375;\271\027\007=\326\253\266\274D\210\"=\333\203I=b\017(\274X\377\301\273\007\255?\274\351\235G\275\017\377[\2750\256:=c\372\243\274X\251%<\030\206\020=\026\213a<x\255>\275\210$O;\314|\372<,\352\304<\356\307\313<\026w\366\274\241\020<=\346f\374\273a\205\265\274\023\201\375;\327e\030\275\273_.<\323\212\026=\217\323\006\275\002\223!=\2340\304\273@\273\250<\371\307\233\274\304\024\006\275\344\320!\273\323\315\003<@+z<\246z\375\274\253\025\010;\266\2459=\250\350\327\273\270\3237;H\306B\275\367\037\340\2741\202\007\275\201\3419\274\n\332\274<XI\257<\334\343\362\272\350\204\032\275\"\233F\274\254\265C<E\251\212\274\t\213U=\032\364\352\274\244h\332<d \020=`\241,=}e)\275\227\3062\272\317\005\272\274\345A\006<\005I:\275\177\330\370\271s\216\267\274\224\325\355\274\0351\n\275a\2475=\237\375\024=\224\230=\275\013\271\311<E\237Q=\304\035\023\274\366vX=\r\357-=[JO\274\207\216\226<DB=\275\026\032K\275\233\357\t<z\307G\274\275\351\350\273t\375\262<\316/L=\271\315\374;\322B\367<sW\222<\314g\"\275$\3545\275?\024*=0@\373;{\\T<\207\255*\275=\021\006=\2705\032\275\037K\271<\013\021\024\274\014V\024;\363\327\274\274\352\374\017\275iD,\275;\237\000\275\225\266W\275\367\276\267\274<\310=\275\350]\330<\345P\033\275Df\273<\201\230\336\274\314\017H\275//K=p\\W\275\352@\310<\215\201L=~\3542\275Ee\\<|t#=\315\355W\2745\331+\274\217\313\024\275\240l\243\274\303K,=\341\016\243\274\\;3\275c.b\2745l\374;\223\362\372\274n_\025\275\004\334\342\274c\357)=\352\340\354\274\361\317\307<\n6\206;d\303\375<_H\237<\334G\300;,\370\236\274*\316\267<\360h\345<1Q%\275\264K3=R\256O=LP\034\274R\226\037\274k\2513=\330\022\276;\277{\022\275\244U/\275\322FN=\024\245\203\2736`\"\275>\244\020\274&\267(\275\0227\014==B\346\274\177\342<\275 \027\335<\007s8\275\211\206\006=\356S\306<\357 ,=4\2743=,\223\310<\206\343P\275_\013\372<rH\030;\336\251_\274\234\351Q;`7F\274\247\023\010\275i<\035=\025}\310<\341%}\274\002Q\001\275\001\003+=\325\227\274\274T/\367<\264\337\226\273s0\213\274\177\367&=_\2778;\363\372\030\275\330\274\206<\317H\350<\013\323\006\274@\210P\274\332Vb<\273}/=\331\177\302<C\037\024\275dw\031\275\326s\017\275.[\330<[{0\275f\260\013=\217\033\007\275l\311\303\271=rs:Q\3637=\334\335\224<f\363U<\212\276\301\274Q\377\343\273`7\034\275\316\030N\275\336|X<\262\365\022=\036\352\303\273\270\275\020=6\034Y\275z\356\336\274\235S\033\275\037\300G<\'q\344\274\"\345J\275\236\3747=\014\036(=u\033\367<s$.\273\251\347>\275\216\273E=\275J:=$\245\031\274\n4\377\274S\023\322;\034\312\016<o_\013\275o\362\006\275\030\017Z\275\005\201J<\300J,\275\027\010\270\274\023Y/\275KL\316<\375\212\205<\\\277\n\275%\025A=\271\333\025\275\356M\332\274\234\323\260\273D\333[\275<\\\006\275_F\226<0\350\375<\250\352\312<)\344[\274$8\222<\203\350$<\007V.<\203\214T;\325\335B<\222\264@<\026\267\212\274\371o$=\350\013S=\246=\352;\201Y\354<\364\276\320\274\275\004\346\274@p\020\2758S\020=\217o\364<nt\036\274R\200\270\274\025\340\370\274\221\243\017=e\262S:\273\317?\275\243&V\275\001d\016\275\340\220\014<\250\371;\274-\314\264\274\207\024\242\274\3046\374<(1\233<\231\355\231<\355s\000\275\2175\027\275\272B\216<^\235\346<`/4\274\201\267p\274\026R\334<\3655!=?\332\306\274F\177T=\036G\030=\003\357\000=\367L\3639\340a\352\274\302\230L\275\276O\261\274\365\337\304\274d\301A=\376U1=\026\212$=\222{>;c\\\336<\r\337\322\274\225\215a<\377\313b<\264Z\243;P?/\275\0143\204<\211l\342<\014\332\023=\3573\014\275\241HY=\301qC=_\304\274\274f\345\002=e\001S\275`\200\343<\277\206\243<\377\234\277\274~\014S\275/:N\275a4\023=U\036\331\273\326\031\n=\365>&=f:0=`\265\314\274*l\376< x_<Bv\242\274\n\264d\274M\355>\275\357\327\361\274~h(=\024/O\274\343\323\321;\374\031\010\275,\016\033=(\256G\275\2768B:\307\021\313\273\177\364\312\274\3746*<\260sN\275\224\017\343\274\330l\370\273\010d\032\274A\221E=\310\nC=\305;\202<\256\315\037\275\366VV\275\026j\223\274\003>2\275\0015?=.DQ<\273.[\2752\254B<\305\323\016\274|:\332\274\016\367E=\254%\367\271\232#\025=\251a\261\274uu\013<\256\250\362\274\271\253D\2759\230\223\273\347\010\265<o\204r<$~N\275J\221\002\275\314\237\334\273\3404V\275\264\343\301\274\026\376\007\275z\243Y\275i\024\361\274\372u;\275s\032G<\177\337\232<\202\025\006\274SB\256\274\211q\242\272\013\326\215<\373\244\004=\265s\'\275\362\242\307<?k\303<j\033F=\252$\373;}\251\356<\205\'@\275\206Q\033=\247\212\201<L\273\n<\312\005C=\250\274;\273\240-\360\274\267f\356<\211\367\213;\rd\366<K\032\236<\244s\363;\r\006D\275\346\245\201\274\204\3515\275\372\226\036=\331A\314\274\274\326C\275\352\314U<a\3059=l\353#\275\317J\007\275\204\025\323\273\220\033-=V\263U\273\326d\020\275\276\001\315\274I\327\331\274\363\330\374;\250\316\255\274\2563\245<\206Uj<>\307+\275\036\214L\274\250{\273\274z\334\341;\032\337\004\275%\254\256<\020\274Z\275\035\346\004\275\356k:=\310oT=q\215\314\274\256O>\275\264\312\231\274\317\312\220<\254j4<\346\231W=?\220\030\275\243\030$\275z\331\3109\235\220Y<\304\314R<Z\275\033=\010\342&\274\246\025[\275\301\217c;\344\350\016<\263AT\2745o\002=>\313*\275]%C\275\363`\026\275\246\372m<\375g|<\177\353Z=x\310\242<J\365\371<\365\314?\275\027x\311\274O*=\275\266\003\226\2745\276\270\274\0311\343\274\363=\013\274D>\265:\266\001\271\274\340\240\033\273ZhJ=\334V:=/o\267\274\311\010\224;\300F\220\2749\307G=\276\004d\274\227\261\362<\030NE;\344\235\346<\205\317\367\274r\301\t=%\264\336\274\314\357|\274RE\320\274\007z\357;\2311E\275\210\234H=q\267\006\275\014\007\344\274E\3779\275}\324\213\274o\340\203\274\234\336\254\273\327\253Y=\313\205\200;QQ@=#\307\341\273\364\265(=M\274\231<\346\301U\273&e\250\274\010\232\r=N\021\237<J\302\230;#\307\334\274L\203K\274\031!\017=\'\351\205<\242*\243;\001?N;\312\261\244;|\037\241<\214\032\r=E\265t<\222\021o<\022\305%\275\263\2716\274\033\324\n\274\335\233\253\274\354p2=\330\326L\275\370\263_\274\344\220\213\274\366\320\032<\357<?\272\\]O<\243kn\274m\204\367<0-\026\274\r\370U\274q\254\215<\016\014\006=\203\350\010=\250\340\352\273\304\364\220\274\367E\027=\375P$=\371\022T=8\251\n\275X?\003\273\235\221\014\275\2764\202<t\372\274<\340\364\020\275k\010\313\274U\2304\275\354\361\270<\327R\336< \357Z\275\037\201\211\273\304\rO\275tX\021\275\232\r\326\274\225}\346;\r![=\276\230\225\274\275\326\r\274\001\250R\274f\227;;#\034\357\274%\016\024=\244\371\017=\000C=\275\213<f<\227\347&\274\314\256\362<\324\017\375<\275=\250\274\010(\'=\365<;\275\255\242\016\275\221R:\275?99=Z\366F=\377V\341<\016Z\300\274\'\217<\275\021\270\024=\327\034\367<w\026\320\274;\024\213<\324/B\275\253\177?\275\246!\307<AnA<,\304J\275\2119\323\274\252\032-\275\223s\345<\344*H=1\2314=l\264U;\npS\274\376H =D\2422=\314_\222\273\036d\001=\344\310\271\274\232\216A=\3050S=\377\336W\274\363o\300\2743\261K\272o\277;\275!\253\034<\200\341\r\275\332\276\n=\216=\326;\362\223A=\202\316\023\275\211\332\004;\365\357\254;\313ZQ<q\300\221\274\346\"\224<\264\031\024\275\003\235E=\356P\333\273\314\2150\275\261\310\014\275\372\025\010\275\303C0\274\036\213A=\345G\274<h\235\267<R\3204\274\036h><I\206\030<\312\337o;+\3348\272v\210\304\274\010\226\262\273\262N\377\273\241FQ\275U\300\276\274\275\266\007\275t?\264\274\205\365\010\275Z\023\316\273u\335\344<\244\001\2479\304~/\275\243\253\267<2\365\003=\336D\374;\031\027\231;\030\026@\27434\365\273\250\365\023\275\213\000?<n\237\315<\310N\271;\003\335\354<\010<0=F\367\025=\332\204\210\273\333\333\020\275\361Nl\274\217\305.\275\376? =6eC=\377\363\035=\2178\306;J7?\275\313\316\230\274\021\233O=(\254\014\275\315K\014=\350\267\007\275?\022\330<[\265/\275\234\206\215\273B#\033\275\023\305\271<)b};\006X5;\276\202\213\274?\330\212\274d\3771\275,\276\261\274=\324@\275\340\204O=\346\224\303\273\342p?\275\030\2076=\316\351\321<\315\231\220<W\034\032\274\210MX<\265H\260<N\244\017=n\264\272<\342\r\262<\376u\346<r\210\205\272\350l\r\275\373^[\275\256\316#=\016\327q<!\317\212<?f\371\274\265|I\273\362FL=\310i\006=\254G\304<\341\000M=\317t-<P\266\205\274%\267\261;\334\027\346<\217\367\312\274+\224\373<\2230=\275\356K9<\276\221:=-\035-\275\023\270\005<S/\023\275\237\255T\275\177B\277\273\366\355\005=b80\275\221\3740=\027\037w\274\374q4\275`i\303<0\362\310\274\036\205L\275\024-z\274\276\240\341<\312z\364<\333\372u\271\202\326\020=r\314(\275i\361\025\273U\213\267<w\346O\275\005\034<\275V\233\300\274\255\035\021=\354(\311\274\375\027 \274\376\376\347\274\322\217\005=\266<\304\274\021\013D\273\251\243 =#\234\334<~P\033=\254Y]\274\271p\354<i\373\025<\373\004L=\265\270U\275\212d$\275\265\n\314\2742`I=Qj)=\373R\035=\333\236\257\274\034\0139<\247\333\342\274\316A#=M\244\370\273\237\231\016= \362\345\273\346\240\323\273\251\016<\274l\005\017=c#\206<\023Z\226<j\331\257\274\\\240%=/j\317\274\263\302\241\273X\250+=r\253%\275\303\354\266:PU#;\034\351\020\274\007U\t\275\202\r`\274--(=*\206\205<B\330[=\2729\371\274n\276\023;Z\245\334;\206jD=\271\233e\274 \213\225:\360\177w<\342\"\034\275\210\262(=\263\317\333\274\250\360R\275\270\"\343<M\314\003\2758\005\240\273]\2005=\270\0213\275\221\207\024\275Q\233\030=\233\\%<!\036\340<\352I\002\274\373p\r\275\351b\n\274\'\266\210\274\226L\340\274\013\300,\274\203\327\'\275\221\"\301<\225o\350;\252S7<h\330\204\274\210\r\266\274\210\214X\274\361\212\276<\220S\331\274\223\035\226\274\213?\030=\307R\231;\330\275H=\216\210\341<\n\300\027=V\017\t\274\255\310\202\267\205@\200\274\030\251D\275\252\203\024=\245\265\016\273\2574M\275O\335-\275p\032B=J\237^;\324\037}<\224G\335<\005\372\022\272t\270\212<+_\317\272\206\305\354;\033r\000\275\310d\273<w\232\021=\3161%\275\321\\\300\274mUU=Ub\215<\200E\206<\221\353\252<\262\".\273\022\275\315\274s\240G\275\241\326\007=\323\022%\273\272\327\246:\302\331\200\274\352_\017\273\246&\234\274\211_\267<tk)\275\341\255\034<g\270A\275\014\224\033\275\362\325\207\273a@\341<R\3643\275l\3449\2755\004\243<-{&\275U\276\373\274\010aD\275C{\264\274\030\350.=\035`U=;k\273\274m\366U=+\352\322<^\254\315\274\310}\307;\261\360\017\275\247ZB\2730P\250\273\013\245\033\274R\033\343<\240c\001\275\327/\035\275T\3420\274\r\3127\272`\335\t\274r\352K=\301k\222:\367%\351\274\324\227\020;\275\312D=\026\361\3669\034\355\260\273\010\347.\274\001\304\037;\370\243Z\275\214I\375\274y\356\362<\261\316\332\274r\225\020\275j\373\3509=mN<\265\370\023=\366\372\005=\231N\021\275\214\3660=\215\030N\274\366\250\211<\202\305\r=\302[\341\273_/\210\273\013\254\235<\365`/\2749#\016\275G\024@<\3346\331<\245\306T\275{\002H\275M\225\324<F\266\222;\024\256\300\274\025\330\006\274W\237\354;(\2169\275J\307L\275\243F*\274\227\365\367;\334u\014\275I\002\220\274b\232\274<\335\257\367\274s\277o\273\347\367\361<I\311\325<\276\227D\274`\3243=\371\003\023\274\255\266\n=\254\227o\274\257\222\036\275vEi:\255\317\031\275\261\330\364;)\214\327<2\257\035\275\343\\\213\2735\363\362<\335\260\023=\332\016\021\275\2547\243\274\223\327\304<\333\300\371\274c\274&\275\246~\237\274\260\003\224\274\003\220\016\275\270\022X\275\225\260\255<\000\305(<\275\353[=7\021\002=&)7=M\216\037<Bn5\274\364!E\275X\320K=\304(X\2753iB<\265V\224<>\361\300<\224O\n=L\312\n\275\000en<\266\320\010=Q(\316\273\347\332k\274zg9\275\327(\307<\334\200\251<\213)\025\273`v\010=\321\224D=\032\330\377\272k?\016\275|;\331<\375bE\275i|\345\274\375[)=\261+N\2759\315\213<\245E\267;\353uA\275~\341[;Y\200L<c\0321\273\233\034K\274\266\257\225\274\311\211.=\314\341\341\274w\361&=\231\003Q=\233\0002=k9\006\274\241\363r<\337\323\216;\225{#=\013\032]\273\275\006\000\2752\025+=\257\014-\275u)|\273\003\312F\275\302\243\341\274|\202-\275*2\232\274^\205\357<\225]\372\274 \275\325<W\231\025\274\265\3028=]o1\275\306\316 \273dQ\227\274\321\206-\273\274:\357\274\230\217)<\"?\003\275\256\347\273\273H\361%\274\366BA=\200D\270\274\250\304 \275\341\203;=\022xN;j\233\316\274\010\377\321<\352\006\256\274\265\200#\275\'a\342\273\313\177\364<W\355\332\274\272\204\006\273\026\016N<Q\277V=t!\252\274\306\255\364;9\207\253\274\326\210\"\275y\035C=\314\2233\275\2464\001\275R\033&=Z\257\330;\243\277*\275\037\300\205\273\257\026Y=\027\320\361<\034\204\353<9\315I\275N\257\315\272\301\244\030\275\302V\373\274\223a\366<zvN=\335\254\025\274Y\001\317\273\352\325\237\272\273_\031=]]\226\274|3\367\270\3736[\275<\241\260<\30574\2740\207\375\274W\2101\275W\013\037=\274E4\275$H\314;\255v\242<\255\332\273;xBB=>R\024\272\036.A\2744\256\363\274\005\024M=I\265\301\273\220\357\243\274i\017>=\352\243\177\2744\311\031\275&\016J\275\035t\203<M\230A:\25008\275\201\373\355<\302}\261<\')W\275NPR\275I\000\023\274\311R\307\274\334j\005\275\034\360\242\274,\3140=\20074=\276\374\322<\333\n\026<9\255M=\276\231\321<\0363S=\027K\222\273n\255\014=K\316\'\275\002\024,;\312\250\342<\002\356\212<\345a\243<\333\203\231<\014fO\275\367\2119=\342\177\013\275\000\370\253\274[\307\367;\031C:=\240\273(=\024M\024\2740\207\'\275\020\265(\274\366[@\275\225\351!=\310L,\275&\023[=\003\242\254\274a\004\310\274En:<\014\270\377<\374~\322<\226\257V=dfE=z\311w<\240\371\016\275@\\\002\275\273\001!\275\324\031\037<g5\276\274\256\377\234;\256\371\224;\004q\"=\021IT\274}\232\030\275@RN=\"\365\022;\226Yg<\n\227\247\274\245\2373\275\3743\227\274L\362#\275\030P7=a\344\376<\034e\235\274|\343\271<\005,\005=\234\256B=l\336\'\275x\374S\275h\005\260:\353\037F=\336\t*\275\361 \r;\324>\'=\233\374/=-\374\025=\267\203:\274lk\217\274\354_.<\273\035\205<\223\316\310\272\037|A\275\374\263.=\223\202\000\275\202/L=\200\316\322<g\301`<H\234G=y\032\331;\216\016\242<\256\333 \275F\0377\275\014\311N=Oo\003=\200e2\2758h4\274\257\363\347\274z(B=\370\216\314<\256\341M\274+\030H\275\215D\342<\262\373=\275\220\365\214<Xg\031\2759`\004=\230P\025\274\310\314\t\275\354\316%\275?\216S\275\001i\036;Ws\017\275\240\365\263<n,(=\004NF<\365b\014\274\024\226\026=\365\"\r=\245\377\362\274\336\377\"\275d\351\277<\223B\207\273\240\276\304;\tL2=U\260\016\275\306\320A=\312x4<E\367\332<fM\'\275\005\277\035=\002>\232;\003%\353\27454)\275A\240\353<\016\007\'\275\332\347\221\274\234\002\221<\031\2042\275}\r\257\2744m/<S\302k<\234jf\274\233d\"=6z\306\274\276\331\343\274\365a\200<\333\255$\275&\004\030\275\305\351\230;\344\334\025::\244\025={\033#=\225\210!=R\210\n=\337\027A=\226\034\202\274\331j\013\275O\237\007\274\237\021\247\274\354z\240<Q\275 =d\3503=\275\313\204\274]P\210\274\022Y\0339_(@=\304\225\276<\\\3517=\342I\354\274.\2666\275d\220;\275\345:3\273+\006R=\261\201\002=\001\326X=p\316==\332\224);\204\323\303<c\363$;\371\261\364\274\000\3542\275\330I\010=\022\374z\274W.\244\274\241OF\275^\315U=\272\206\013=\274&+\274.\240&=p\245\274\273\200aJ\275\215tI=k\t\257<[\025\016=\223\314:\275\374\225\323\274\201J\306<\013\213\274\274\000\035\232<P\\\014=\267\372\225<\275\350\214;\014+A\274\333~\215<\3317:\275r\200<\275\177!\"=\336aI<\307u\004\275\026\272E\275X}1\2752\235}<\216\243\357\274\036\300\005\275\227\304\216</\216\253\274oI\313\274\350\317\336\273>h\355\274\320\352\373\274r/E\275\250\033$=\340Ff\272L\352-=.\221\344\274[\351\327<\006\323\235<\002n\222\274j\375X\275\346\216*\275T0y;\005.\004=\304|\322<\312p.=\243\214\001<\274;%\274\026;u<5>P\275\321\377q;\271S\n;\201\252\251\274\362\321\330\274\202M\370\274\356\300\000\274\325\301\360<\327\312\264<^c\356\273\277p\350<\265\316<\274z\275\024\275\376\021\220<\205K\206<JC\023\275\303\271=\275\245\366\010=\336\215@=\242\317V<\317\nm\274\313zY\274\367\033 \275\214\3723\275*\203/=\322\355`<\024z \274=\275Q\27502m\274\314z\274:\321l.<\254j\'=S,&=z\322]<\224\303\006\275Zt\352\274\313c\243<,lt<\213\305\t\275\'\034\327\274\256\"\270\272$1\334<01y<\361>\273\2742\362[=\246(t\274\232\'H\275\211\241\343:Yf\034\275.|\310<\351\215.=h\326\353\27484\021\275`#\325<\227\2305\275\250\242\013=\267\310\312\274\216\243\244<\256\361A=|8\024\275\320c6;j#C=\033\202\032\275+\224\227\274d\362D<n\364\023\275\273\255\265\274\346\302\364<_\244*\275\260\'\243<\370\244\373\274I\020\233\2734C\251<L\337C\275|\352\236<\340\302\027=S\351B\274\177A\305\273\351.!=\016DN=\236\217\356\274I\034\246<B\016M\273K\001Q=\243\227&\273\250\316\026=\003\251\234\274\320T\017=f\022\270\274\035mA\275\341\036\324\274\317q\007\275\213\316\272<A.,<\357\234\"=HD\210<\017\1774\275\367$\274\272\221T6\275\2249B\275\371\3001=\325\225\206\274\003yZ==\333Q\275;\370\232<i\321\025=+\3669=\323\250\007=X\366\016=\021\nS;\274\323\257\274\215\230C=8\351S\275J\023\2549\264H\351\274\036\020S<\371\311\212;Q\262\023\275\255\372(={\376J=Q2\335\274\333\311\213\272\366$X<X\371\007\2757\233\266\273FRD=C0\314\274v\263\347\274\231\n\253\274\263\2303=i\363\r\275\225,\006\274R8\227;\305\273\214\274\344\310\002=\372\004\r=yk\336<\013?*\275\261\2077\275\2202%\275WT\036\274x\245Z;\3741V=xV0<W\274.=P\313\204;\302\200D\275%D?\274\'\322h<\371\324\023\2754\331==Y\270\020=\033_\267\274\224\345?=1\241\202\274T]>=\236\014\246<\261\226\340\273\347\307F\275I\215\336<\305\366R\274\317O>\275\331\276?=\274\025\225\274\257\311\216\274\023\357\363;\375\273>;\307\177C\273\010`l\273\320q\021=3\203?\274LA\322;y)w\273\276\026\373<>\227\276\274M\"\t<\365v\252\273E\365\263\273u\341\367\274\\\245t<0z\033=z\360\036<\217\215\027\274sJR=\220YZ=>HB=\331\014\213<\353\000=\2745\353\003\275\223V>=MY\270<\364\203\016\275\357\333\367<\000=\343\274)X\034\274\377,\327:TG\026\275\263\250\345\272\365\232\334<\241@\335<\302\237\027\274$R\307<\262-\376<\265`A<6\014:\275\346\305\276;A\203C=!D1\275GN\353\274</\250<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\331K\271<\235\\\274\274\030\321\315\274\331\337p<\024\206\230<n\022y\274\300n[\275\007L\010=\257\tF=\rDZ=\233\302\214\274\256\336U\275\242\361\251;\324\251\332:\346\016\342<\225^t\274\204\027\026\275M\331N=\355, =V\272\303;\346\303P\275\001I\375\274\305q&<\262\365\362;\354\247\360;\257\3354\274\001\347K=\331hK=\021\303\354\274\2328T=\220\232\027\275Z\2733=\310\255\014\275\t\232K=K\355E=\002\277\333;\370\241U\275(;\347:\021\210]\274\2006\312\274\005[\264<\325B\300;b\267\203<\213\222\320<\354\305\206<\267\236\326\274gl\313\272Y\233\311<\255*\034\2755\367J\275\013fi9P\252&\273\364\017\227\270\237\376\307;\334%t\27361T\275\231\200\t=\272\327=\274Y\352\006\275?r\223\274\260\212F\274:\231\017\275<;\n=\354\246#\275Oa\376<\276\2001=/\205\202\273\213:K\274\001\314\003=\223;\337\274\217\021\030=\230\211Z\275\206\3060\275I\036S\274u\360\303:$\217\033\273\311Np<\031B\026=<?2\275\253P\271\274\364\320\320;-\274>\275\271\240\212<l\214d<\340\350\036=SZ\361\273|\336\036\275$\337\035=\374u2\274\035\216\304\274|Z[=\255V\365:\310\020\240<\207\275\222\274\252\000K\275\234Nz<\005\001\224<\230\311\213\274d\007\332<>J\376<\270*\217<VH\005=\337\366\252<J\374\304\274vz\275<)\2662=\310w\354;FA\'\275v\361*\275\275{\363\274Z{\377<4\225\363;v\343\217<\205\376\332;\346\233+=L\276\263\274\242=\213<yF`<\362\374\n\274\301\300\370\274\341\255r:\360O\327\274t\276==\240\305\374<\276\2744\275\357\361:\275\225\027)\275\214\303\330<\252t\313;+\363\006\275m\304J\274\200\236\003=\000\351\021;PN\001=\206X\227<\371\225\357<y\327\017\275\266\310\267\2700\0357\275>\204\023<M\025\017=\307\313N=\276\207-=\333J\033\275\036N\322\2744\215f<\273{)\275\264\365B=\t\020\002=\211\2305\274e<\364<p\356\017\275\214Vx\274hy\217\274\322\252\347\274\256\331\233<-\311\014<\210?\317\274\274\3460<\233E\024;\017\322 =\241\237*=e\231\252\2747\273\005=\334\330\265<\243&\'\275\317\237N=\217\301P\275\372\033F\274\332\262\026:xoN\274\231\270,\275\264-\270\274Ig\253<\273z\002=\344\2153\275\250,\250<\205{\366\273w\252\'=zS\354<\205CF;$p/\275\266-\\=\223\214\032\274\261|\007\275\016\200\023\275M\016\036=\236\3254=6nE\275\260\220\236<+\310\356\274\217\001\370<\3331\352<\261X\266;\351\'\263<`h\032=\343rQ\275\343\035\217<C\001%\275\334#\311\2745\017\337\274`\013\005\273_\003O\275\255\244\373\274A\332+\275\001\024\201;\020\016\221\2739s\371<BM\034<\317z^;\n^|<\360\205\005=6\212~<\373F\202;xnL\275\031\275\036=\r\367\332\274\333BT<^\355B\274\361\327>\2752#@\275\006\245D\275@\233o\274\027\320>\274\010\361\227<\023XR;\251\353\351\273U\241?\275\325\000O\274F\\\010=\273\227+<\003\2406\2758\261\233<\360\224\013\275\356\033\005\274_\0316\274\367+J\275m\020h\274N\227.\275\345~K=q\022\317;&\002B\275\013\3662\275TZ7\275o0\251\274\007\035\001\275\221Y\251<\374\264;=:\302\025=a\345V\275\343\236\234<\254\357I=\332\266\315<\304\026Q=\273\010S<\310;\r=E\317#=\247@B=)n\007\274#B\263<\265\241\r\275o\253\225\274f\236Q\275m+\202<\350\252\002\275\342&H=E\225\272\274\327\3456=\262\202\217;$\375D\275\344\313I=\346\006\021\275\365\274\302<8\031\247\274y\246\037=\232\242\016=\333QB=;\034\310\274\213g\003=y\315#=f\235\006=\264\261_<\200\366*=\207\2545=\246\353\032\274\3610S=\032^\243<\034\340#\275MA\211\274\010\326\006\275\235\225 \273\257\3734<\247U9<Cj\307\274\016\013\216\274\235\245M\275\020\227\005\275\351n\352<A\327\376\274\022\370\242\274\313J%=\340\233@=\333%\035<@}S\274>\214(=?\217E=\316\014>=\207X\334<\274>\334<\241\307\233<\204\250\n=\363GH\275\364O\242\273\215\020\373:\335\363\037\274.\240&=h\201[\275\031\234\314<:\273N=v\331\023\274\233x\255\274\370\240\260<#\262\315<%\266Z\275\036g>\275)\\9\274L\227\304\274\262\366,=\035\223%\275\3310\346<>\027/\275\325\344-=,\002<\275\224M5\275\241\216\367\274\367U}:e\037\337<<n6=z\356\005\274\355T\317;Ya\030=\225}\010=\322\363\361\274\315\353C=\374\301(=\271\266\237<i\315\353<\247\334\"==\246!\275\311\207+\275\352\341\251\274\252_\002\275\321kZ\274\016\305V=\031\304L<b\247(\274\330\351\026\275\013\0363\275\200\315O\275\312\375P\275\177\306R=\302\216\035=Ky\277\273\257!6\275G:\023<W\2454=\205%w\274-\303\217\274hG!;6\311\016\275\275\241S=}`%=\311\375\'\271\325\021\377<<\263\224\274U]\327\274=\217\322<\307\242:=\003\215S<w\247\364<zL=\275\006\247j\274J@\241<\277\252\013<@\371?<\037g\317;\003\355O=,\026\010\275\3256P:?\031\035\275\215\347\335\2730g8\274\342\374d<\034\347H=\375\206\350<$\357A\275)\233\':m\325\n\275\3211V\274\370\2359=KT\330\274`2e<\006\026,=\235T\311\273&jX=\270%\367\272\227\215\357\274\246\310\032=\002\332;=\206\3061=\300\364I\275\225$;=\252\247\234\274{\264\344;\2223Q<\3549\274:\352|\n=\303\026\025\275\035\003[\275\033\313\246\274\220\271\231<\220\336\331<\267\001i\274\2353\014\275\23776=\023\356L=\036a\275\274\351\002\321\273\236\261\307\274\022%\234\274b\342\031=e0\033\275&\350O\275\354o\377<\357\247\236<L\317\240\274\3023\313\274-\310\212\274H(\302<C\324\304<\nF\316\274}\337\367:\221\351\315<\005{4\274\341\230\342\274\306\007\035<\271\014\263<\254\262W\274L\3378\275\271}\027=\241x\340<\303\326\302<\223\032\271:9:8\275b\024\350;\347NX\275\374%\266\274\342j4=\336D2<m\231\347;\022\211\260<\332Y5=sF\244<\253\026D<7\317\r<8b1<z,U=/\377@\275\264\203\326\274~\331\324\274{-\311\2744\365(=Uu\211\273\250\353)\275\364\321\035\275>\306%=\013\234\247\274KG\017<\002\206X=\036%\020=F=\372<=I\025\275GV=\275\351K\'\2757(P\275\212?\327\274Yq;\274\352\206\333</\252k<\202\032N\275\222\247O=\007\021\363\274}E\016\274\035\016\n\275\254&:\275(+6\275\203bK\275h\2728\274\273\221V\275\023\'\221\274bW\013=\0037\023=\366S\000=\315\361@\275prB=\243\324\035=\2647\373<\243\225\205<d\3448\275\363\005\347\273\221\rN=\232K\021;\331\0242;vG\362;z\221@\274\304\216\241<\005\301\247\274\321\233\233\274\251\267\331\274\023EO=\245xi\274\306\3660\275\263\214?=a\332\225;\215\332\266<\022\223+\273$m\366\273\210\324 \275\207a\233<X\325W<\221|\026\274M\207(\275\272Yy;[\nI\274\215\327\261;\233\362k\274a\010\033\275\226\2333\2730\337\227\273j\034A<Qy\337\274\337f\034=\"!\r\275\342i\347<\237s\006=V~?=\004\2442=\223\002\206<\235\033\001=\317|B\275\336\275+\274\223\033\304;\265P\022=<X\305:)\345\317\274\361\3431=&8\276;\311\344B\274\0227\025=\320\3021\275\250\362k\274\316ay\274\344q\017=\024%\344<\206\311\266<539\275<\322+=)L\014=\202\005\"=6\337&\275\247\261\317\274-\2018=\017\0079=\306)P\275\244\266\300\274\221\373\213\274\367\2366\275\'\336\030\274\253E\027\275\024\334\235<\257Kg<\342e\273\274\335\257\373;cM0=a\231\361<\322\\\227<\315^\263<\335\363\002=\302&R=\306W\332\274\002\300[\275\022\334\217\274\014 J\274^\362,:\337H.\275\201\335\331;\261\257\001=\214\013\002\275)L<\275aI\246;\253\000\322\274yO\024\275\367L\215\272\253\242\367:\014\020\343\274Y\337)=\272\340\305<\274\357)\275\003\331\353\2743\302\027:\3600\223\274\243m\t\275\001J\311\274~y8=h_C=\232H\360\274\020\366\305<\217b\210\273\271\311T\2759\333.=\211\311\010\275\014\335\272\274\362\304 =\374\022\242\273\034\224S;\352\220\014=\036_-=?\231C\274&\240\t\275_\305I=\253\262\323\274J.\007\275\240<A=D\366\035=\357\272\237<9\212N=x\034-\273\tW\001\275\353~*=71-=\217y\013<f\210\363\2746\\\350<-y\000=8\rM=\037\000\020=\255:\006\274q\262\274<\212\030\214<\276\005\033\275\276\023$=Z*$=cTG\275\376J\'\275\200\277\236<h)\006=\242\324Z\275\003\300\270\274\306\216\035\275\203\0366\275~\326\342<\311\236\205\273\257\304)\275L\236\244\274\261y\271<\027A\221<\004\204\370<x\342S\275\241\253\020=[\035\256\274N\\\017<I\367\307\274\263\223\247<m\270W\275\006\020`;\256M\270<\236O\202<3DA=\214\324q\274.3R\275\377i\232<\253\245\341<\324<j;\226R4\275\275\241%\275a(#=\310\027\000\273/\376\352<\303\032\203<\021{[=\232\2044=L\200P\27580\242<(\236\366\274\3242\033\274n\326\200<\013\234\005\275\362\345\202<?3\235<\037\375S\275\253\367\016\275\355O\312;\343\356\273<\250\330\370\274M\352\371<\\\037\201\274sA\320<\225c\005\275\177\262\372<\237\262\036=?\201x<\372\225\'\275@\227\004\275\301\203*=\035\305C=\025\370\271<\202a7<)\2556=\230\373.\275>\201\330\274.\334\030\275$\352\001\275\210\325\377<@\024@<\016\022Z=X\000\327<b\032X<\036\001\006\275\366\377i\2746\005\222<\341k\033\275\325\220\241<\003\251\037=\234p0\275n\361\331<\216#l\273w\203@\275\353\214\017=\374\226\377<\266F\225<B\357\272;\323\240T=\2550\302;1E\332\274\211TU\275G2\274\273\353*\221<\205n{\274;!:=Vf(\2751G\362\274\2532g\274\364g\351\274\237\014Y\274\234_(<\233X\036<N,\r\275)\275\202;cj\t\275\272\244\376\274\010$\031\27497K\275Vp;\274W\252R<\027`\235:\234\326\200<\3256e\274Q\257E\274\241\372\363\273\230\3654=$\257\270<e\237\025\275\325\033\370<\241\370\377\274\267\367\\<\006\032\343<\010oZ\275\314LF=\317\335\243;\252\337\177\274\367QX\275\202~s<\370\030;\274D\2003:,QO<Yk\270;\372D\200<\306\241\371<d~\270\274\370\374\357;\t\206H=\013\237\035=a\330\346<\036|\033=\245n\302;o\245\324\274\010\217F<\310\253\035=\351\322\331;\016\3251<ZQ7=\220\2349\275Z\362\250\2741\232\022=O\004\036\273\"A\255\274\014\273\315\274\r\037.=J\353+\275\336V\357\274\235~\340<\tI\007\275O\005\014\274a\254@=M\237\223\273\301I$=\370\214*\274\032\233\274\274\362\001B=PZZ\275\027\310\n\275\237\345\362\2718z\261\274\01358=3\250D<\307\321#\275B\277\217<!\344\034\275W\245#\274m\376\246\274\024\211\376\273\t&\333\274C\002\005=\364\001E=\004IU=\023\307\257<\237\366W\275\353\353\362<\265t\006<\264\241p\270RhO<4`9\274\232\247\003\275\353\262\336<\321\245\210\274\021Z\335\273O\013:=\324|r<\343\264\026\275\365??\275%\312A=rY\341\274\343w\332\274`\240\350\274\241\263\202<\005\223\333<\212\2469=9\364\006\275\010\"\027\275\342x%\275\232\n\353\273\031\316\217<\021\337A=V\2155=R\327\034=\315/\r;\244\364\224;#\374,\275\273\t\026=\n\007\014=`\315\010\275NCS\275B\242[=\232\027&=\2319\305\273\005\371\013=1>\310<\340\343D=\233\344T<\2573\376<\351\214\242\274\2228\362\274\203\316\233<2>O<\201\nY\275F(T\275!\242\363<m\002M=5\251\264<\377a\3119\360\345\317\274\252I@=\325\206\271<u\356\230<\234\363\276<\021\032.\274]+\202\274\030\302B\274\236\322I=\267\253=<\034\237\"=\203\177R=\254,L\275\302\366C=H\200\355;\023\200\177\274\266\325K\275\006\340\244<\335t\222;\210\243\306\274\223|\030\275\036(\256;\356n,=oM\313<\"j\361;}E\271:\304\376=\275\215\220\016\274\340\254\234<\346\315\000\274\340\021\364<L\277\215\272=#3\275\345\374\217\274\026\372\314\273\222\033\n\275a\022\365\273\222a\014\275\234\245\330<\235\037\355<\234\371\337\274|4;\275\350\372\255\273x\314\375\274\325\361\007=K\302<\275q\216(=ez\026=<\313\335\274z\341\t\275e\275\016=K\322\261\2743d$\2731\266I<\033\223\254<\006*W<\213\304\304\274\351\036\026\2751\363\023<I\317X\275\252\274\317<\336\337\232\274\n\345\316\274@\315\t=\337\332+\275\372\300\327\274\330\244\367\273\014j\216\2737\321*=\211\324#=G\'c\274\360r\372;I\034\364\274\227\'\034\2757\262\317\274\367\316\021\275\3178\210<\230L\364\274\034A?\275\016\274\t\273\365\217\376;\224\257\240<z\271X=\316\'\244\274C\370\r\275\331_|<SD\023<\271!\241\273R\220\200;Jl\242<\301\347\030<\316dU=\271\301\370<\255\373D=\032\331\213\272\t\001\010\275\232\033\225\274=\270\032\275\336\326\310;\217^\206\274\337\026\005\275:\274\215\274B[:\275\007V\331<\356\301\004=\324\363B=\250*\206\274\240!>\274\231\342\312\273\252\270\320<1\221-=\245\202\035\275\247\265\006\275P\313N<\344\342\006<\177\307)=$\226\355;\341U\271\274#\333&\275\321|\274\272|\250.\275@}\327\274\370\223\361\274\304\216\346\2746\312\215<=-\030;\240\377N=\236D==\247a\035=\260\371\377\274\226\337\037=|X\312<I7\032\274\002\230\257<M\350\"\275\205\355R\275\352\307:\275\331\265\030\275\254\374\032=\357\214)\275\321\365B\274\n:\320\274?\373\320\272\367]\347<I\311 =93K=\303\334\317;S\221k<<G!=\026\r\344<\376\263S=]\367\274\274\224}\024\275\341\t\252<\027\230\321<\2622\213\274f\361\025;bvW\275\213\2728\272&P\200<\005\221\327\272\275\255 \275\326hJ=\352s\274\274u\230H=EF\222\274\341\277=\275%\216\366\273M\347\014=\023I1;y\254\316\274\020\037\320;R\017><\320fL\274l\263\363\273\203\374\352;F\002\217\274Y\340P=\264\303\021=\326\253.=g\2765\275\r\200\245<\356\250\337\274\013\016\010\274\312\313\010\275\306\247\013=\270\220\363\274\2516+\275\307[\022;8rh;\000g\022=\207!F=4\216\300\274M\267\341\274\373y\316\274\364\222Q\275\267P\010\275<c\3229\026\037$;\204\234\346<\252m\3159[\372\336\273?\271\000\273\255\324\027=\236f\376<P7\013<\245fE\274\236\363L=\344`\226\274\005\276;=\207iK=s3T=\027I#\274\371J6=\235\3575\274\301\236r<\225\206\260<\264,6\275\321\342K=\221\'\345\2726uP\274\360\352\374\2732\210\303<M9\337<o\303\245<`\0305\275o\227\210\273\312\301\234\274\234\323C\275(\351k;\000ew;Y72;.\016\020=\000\215`<\276\235\324<\373\004\253<\375\004\336\273\246\027\000=+(\235\2744\310\017=5\236_;\364\321\332;\263\225\n=`\025R\2753b\304\274\250P\020<\243\310[\275(\245\033\275\2424P=h\246\271;\250\375\037<\034\322\254\272\253Z\"\275\277\004W=3A\345<\364\203@\275\0162\364\274\307P\215<x\323\256<\006\303\021\275)\377(<\335{\316\274\276qU\275\3503R\275h\202\013=\330\203\t=\235v\343\274)\344\314<\346\323Z\275Ta\216\274\027\332\255\273\214\335\355\274\265\365*=\341\252q<&\365\353<Y30=\312\345\022\275\372\324L=\370\334\366<\357\007k<?\260N;V\020\177\274sW\226\272\\\241t\274\310L\347\274R+\001\275s\214\220\274xq\035=\2400\267\273\036\034\034\275\330\034\205\274[P7=n1\016\275|d\363\274\202\257Q\274\253.$\275[\2009\275_\317\005\275\0345+=\227\3455=\256M\3749\255F\212\272\036l5=\263&\311\274\317\355&;\272\362\270\274\0014\032\275:\3576=\246\226\203\274],(=6\233\014<\310*0<\346\006 <\030H\234<\022U\354;K5\"=`\342L\275\360a\315<\277\214A=\277h6\275\314~\324;\324U\016=\3617\021\275=:\363<\241H\226\274t\035d\273\024v\312<V\2562\274t\273\370\274\333\023\232\274\311r \274\256z[<\003\307O=IO\035=\232@\367\274\366\202\365<\r\034\206<:\331\"<Y\357_\274\203s|<wy\000\275\002\223>=R\314R\274J\224^\273\333[\324\274\'s,\275\205\262\327<\353,\2129x\013\246\273\300\256\300<(\2165=\033\323\246\273!\'*\275q{\264<\234\313z<v\311%\274X\225+=\354\315:\275\204ry;a\033\017;(\201\241\274\370w\300\273\3618\004=\326\366,=\"c\003<z\034\266<\214O!\275\223\034\t\275x/!\275\214;5;_\227C\275O\334\206<z:\337\273\2720\t\275\373\"\266\273\332\335 \275N21=\312!+\275\205\013D\275\373x\016\274\304y\022\275\305\314\002=x\221\366\273Wm\277<<\375?\275\2020\276\274\214\360w<\236\217\001\275\330\237N\2724\237\341\272\334\246\226<\237\202\211<\270\205\002=\002\020Y\275\32188\275\366\330\004\275D\240\002\275\336\004:\275\370I\206\273\263U&\275v\002C\275T\277\371<\362\201[\275 \031\376;\255\026.\275\256i\216<\236\315\326<\204b\034=]52\275\372f\024<O&-=\177\010\213;\270O\264\273l\372\335\274\257\367D\275@X\004\275\031\0164\275FZ@<s\332\277<\327\251\016=E\272\301<\262\240Z\274C\372 \274?/W\274y\270\370<\314\0356<\310z\334;X\023\235\274\220\247\340<\354\300\n=\2343\227<\325\244\236<\035\257\247<9\023\027=\3178\351\273\364@\214\274\227z\000=\'\217\371\274\340\372==\373\014\'=\316\277\346\274\007O/\275gN\352\274\260b\033<#\253\033=\253%x\274\251R\223\274j\317\212<\207\250D\275\001x\017=l\327\227\274\020\271s<Qov<:\340\002\274\344\324,\275\026\277\031\275\304\241\311\274\347)+=z\1778\275\033\366F\275\240\317\356<,,%\272\240\277\007\274\314\'U<\330\370\200\273N\376\027=S|\'=\376\0342=\333n;\271s8\264;N\200\231\273~\320T\275\233\306\022=\177g\226\274\r\014\264\274\t\017*=\350\324q<\215+-=\210I\"\275!\006\341<\262W\222;\301D\366<\346v{\274\276V>\275C\371\261\274D\2351<\010T\224<\177\030U=V$\275;3\364\004\274G\030.<8N\025\275s\216\"\275\207F\345\273\225\342\225\274\375\275\017\275\312\260D<W\224\026;\217\365\377\274\206\210#\275\033k\245\271\267\324T\274%=L\275LI\314\274\342sO<\353\347\257<\263\215\265\274yu\246\274\277\240\343<nB\335;\375\366\235<\226\307s:\360\030N\275\341*j\274%\352\224<J\227\246\274\t\032E=\277\326\032\275AaG=\032\035\323\2730\0244=\223\320\357<\216r\372;P\224\252\274i\263\007\275V\360\244<\n\375\006=\205\202\263\274\203\244\257\274\265\224\261<mQ\313;\277w\235<\363i%=\024o\335\274\3774><\250\273Y\275\225\014\025\275\334\322$=SI\021=U\266S\275\324m <X0\244<\320\240\240\274\271\327\026\275\267\232)\273\210\264\253\274\355%\001\275\261\233\217\274\217\265U\275R\343\3375)JL;J[9=\240~\343\274\'\0315\274\263\027A9W\341H\275\265O\024=n\227\347\274\354\352Y=G\2573=\331u(\275#\273p\272$\276\352\2746\032\225\273\251\364R=$\317\324\273\021{\200\274\323\320\'\275\310\2142\275\304u\231\274Kk<=7\255\200<\352\325U\275n\235\351\274\005\r\366\274\275k\253\274\330\345n\274sG\317\274[\352u\274\207\304\202;\342WC\2758\307\002\274\243\326)\275\340\230\r=\005+\252\271}\007\333\274\356\006\256\272ocb\271\372\367\240\274\233\000T=\347I\333<y\016\263<\t\371E=h2:\275\354Y\330;Bs\247\274m7\275\272\333\373$=>1O\274\216;R=\013i\356< \277T\275U\3008<\033\3447\275\335\3645={\334V:\3549%=\241\351\'\275\327\'C\275;\345$\275\316\273.\275/\215\314<\223\236L=\357U\377\273\2204\207<\352\316\247\273\223\207\235\274P\337\217<\'\020\020=t\"_;\210_\254\274\3271\"\275\3674\021\275\256\255\345<\376F\226\274\232E\207\274\010\237\332<\311;(\275\272\304\025=b#S\275\243DZ\274*\216\020\275J\366\246<&YE\274\250\217\262\274|\031\016<\266\250\227\274+\016\225\274N4A\274:\213\033=\014\034\354\273\376\371-\275J\256*\2743\350\201;\007E.=\035\266\273<i\202\250<|\314\031\274o\213_\274U\2409=\016KE\275\233\226O=e;\362\274\035Q<<\3447\300\273T\024*<.\306\024\275J\274:=\036\244\364:\355\236\253;\027\325\001\273\251\204\252\274\3316V\275W\222\003\275\211\241\265\273zd\235<\235\264\305<|\243\023\275\266\273\260< Q\037\275V9h\274m\017I\275&\260\304\274\016\007\315\274\\\345Y=JN\350<\014\331\005\275\365v\244<\271\360[\274\354F#\275U\204\230\274\206Fz\272\204\371[<\350\2174\275R\355I=\267\315\032\275I\356\216;\273\027\034\274\354\251*\274\312\014p\273z%4\274\303\313\242<\342\334\201;\262e\026=\363\243\255\274\241\367b<\332\377=\275P\243!=\241\0026\275\023\'7\275-c\303<\374\250\013=\304\266\007\274\327pG=\224\016*<\322\201\373\274E\200\227<\332\336%;4K\037\275\nF\276\274\253V\207\274\037tW\275\225\326\025=^\031\346:\013\253\214<?\210\006\274\256\013\303\274#\342\030=\203V\034\275Wf\346\274\245_:\275\305\355<\275\277\t\312<]\022R=4\3425=\020\362I<\266([=}\235K=\364\3610\275 O\034\273\245\247\024\275f\330\027\275\203\321\013<\217-V=RyP=\255H\035=,\357\034=\243\3618\273\303\354\313<\341\207f<\254\031\304\274\277VV\275\366\001}\274\325\312>\274\210c)\275\241\244\354\272\345\335.\275\376M\016\275\264\177F\274\327.[\275\375-\033\275X\007Y=\334y\253;dQ\025<\311\374D\2757\345R\275#t\275\274b\2359\274~\1775=\364p\"=xT\024;\032#\030=\250^\'=\266\3420\275\030C\n\274N\nH\275\227R\373<k\273\207;\301\013\014\275\274\357\3018ZdQ=\326\226O=&\203:=\316\n\337\274T: =\322\313H\275L\275\371<\340\361\340\274,Pp<v\347\311\274?\037\016\275\237\210U\275q\257Y\275\312\321\355\274\245\330\307<\031{\216<\377TP\274\277\363\232\27383\263<q\275j<\rv\244<ah\222:=\363\320\274?\016;\274\367\225)=F\3014<\231\263B=\332/\036\2753\312$=\r\322\365<&\013\004=.\263\017\273\337\010\346<\3571;=#\2172\273\370\231\025=\013\221\004=9(\341\274\213T\215<q\352\206<y\361V\274r\022\323<P\241\256\274N\245V\275G@.\275\265A3\275x\267\314\274\345~4=\202\330\000\275`\307\r\2754\300\201<\033\001\302\274\027WE=\201\025\005\275\026\205&\275\177\206I\275`\226\007\274\014\'\204;\035_H<[\031\270<Jl\014\275hPH\275Me\212<\205O\020\273Q\024P\275\346\r\002=\337kP=J\356\025=\0048\031<\236e\214<9O\022\275\252\036V\275\302\314\306\273\221\033\245\274\023%%=2\'k<(\032O\275\257\241\r\275\260*O\275j\326\243\274`\315\002<\236\024\r\275\"?\200\273\000_0\275\233\0213\275Vu\013=1\207\202<\243/\022\274s_\300\274w}\213;M+\022<\037+c\274\301V\024\275\242\013%=\315\353\216<\007/V<\n\220\231<\373\20439\367F\364;\306\226I=\275\035(\275\274\247<\270\276!\";B\237J\274\253\236:\273\221\343\030=\226`\376\274\261{@=\261\322\231\272\361r\263\274\202\322\323\274\276\360\013\274\240\276\266<t\264\231;n\272J=k&\365<\374>\3518\000\345\265<\236.U\275\252\212[\275\332\031\341\272\265p\242<\266\240\262<m\367\344;\027\366\354\271B\344\020\275\210\216\032=l\032\240\274h\241{<\236=\216\273\256\363\t\275\202\0242\274bU\333\274_\373\243<\212\025\355\274\234\027r\273ED\204\274\2534\n=\240LK<\367\230\262\274+\226\035\275G+U=\322V\255<\233\264\037=\365\001E\275l=\346<\351\3247\275\233w\324\274\"5+\274&\373\272<\222\370\023\2758\275+=\242\201!=\231\236:=\347\312X\274\250z\355<\032\323\341<7\313\373\274\363\276N\275\364\026\\=\265\372\241<?\250\343<\034\'\211<\253\302\237\2740\222\017\275\342F\205<\2373\367\274\3229\036\275\315\276\"\275\331\n\010<\211\025\343\274\273\r\343<\217c\247<\373)`;\367\265$=fi%=3\3011=\375\324\004=\355\304\306\274\336\311<<8\341V\275V\374T\275\232D\352\274.);\274W\322\020<\207\2317=Y\236\037\275\362\375\035\272\302\263D=\303\341&\275\3262\257<\220\355\007\275\335\304\025=\262R\306\274Z\335\016\275\214pf\274\236\324F\275\324\036M\275`}\333\2743\004\356<\334\315/=\200\2632\275.~V\274\016\237\021\274\017_\035\274\035\034\036\272?L\240\273\324\255Q=\255\340\001<s\231\030\275\323\320\t=\351b9\274TC\316\274\206\233\214< \204H<\232\345\321\274\242R==\323U\034\275\031]\325;vF\273<\260R\224\273HSZ\274S\321\231<\364\253\300\274\235\343\257\274VG\355<PK\233\274\0070P\275\354\214#=\000!Q=[;\236\273\376\3558\274\246\371\245<\005\016\304\273\333\355\035\275\310-5\275N\304;\275\310\274K=\232\020+\274\350\363\310\274\373\257#\275^\232Y< \303,=\256\014G\275PB\220\270\355w!\275H\263U\275\r\025/=\273\345\331<\203T2\275\316kT\275\244h\274\274sY\300\272p\3047\275\216\324\374\273\247\3021\275\371\223\233\2743Sd\274B\266\345;pyd<\246\261\263\274<\316Q=&\264\365<\205\352_<>E\355<\257\336\313<\247\241R;NwP\275\227\355\027<\n^\021\275}\211\247\274\330\301\322\274c\366\240<^g\271\274\2051+\2757\370\302<\010\374\202<\370\230#\275\234\304\365\274/\256h\274\0108j\274q)\343\274\333\212\001;@@\004\275\235\005\230<e\204\t\275O\313\004=\370\345\026=<?\355\274\372\013\033=\004\033\355<\017\305\203<\246\253\t=\007\343U\275\311\277u<\323\304\246\274\265\237H=\316\206\021=\370\332\031=\337o\257;\241Y\257\274\264@\036\275\367k\330\274_9\003\275\"\366\264\273\023\347\342\273\310\020\027\274\377KR<\322\2363=\036\341\316\274\361\256e\273\3116(=~U\362<\262nI=\321`\223\274\221\266\r\275\201iP<\371\263\366;\017\355\365:y\323{</\311\003\273IX\314\274\240\205R=\3560\254\273\362V\250\274!\271\035\275\304)\333\274\317\371\217\273R\343F\2754K\214\274k2\023<O\323\255<\331N5<\215\177r\273\232%\336\273\273N.<Gl\205<\254\360I\2755#\343\274u\224\263\274\317\254A\273\262\311\354<*\253\336:\022-v\273\231\325\036\273\200\002.\274G\266\352<\363\216-=\362\032\000=\200&<=0rQ\275\246l\004\275\276\201\035=\256H\216\274;\t\226\274\351\323P\275e\270+=!n\211\274\021r\274<\335\342>;\377F\342<\006\350\354<\274\206Y=\314\351.<\005\221\266<\026_W<:S!\275\336\354\013=\264\377W\275\374d\010<|O\334\274\327>\347<*\345>\275\nJ\002\275\310\346\023=\246\334\030=\033\310\032=Y\315=<\350\240\016\275\327n\305\274Jo\335\273C\203\321<\000H\002<\345m\021\275WT\221\274\3506\234<?\255.=\266\211\000=\024\315\r=\256b\023=\362y\231;G\207\034=S\035\314<\302Y7\275\237\267R\274s\371:\275!\031\330<S{\243\274)\030\243<\252\351{;6\256\217\272\227-_<\214m\315<\314\220P:R\315>\275k\336\230\274\215OO\274\371\316\377<J\323\256\274\343\324\027=\324\251\360<j%\010;u\327<\275yyP=\347\202&<^\033i\274\222\243:=\346\321Z=\337$?\274\356\227\367<&\000\203\274\261GL\275\263\362@=\005,W\273\032\321\250;\177\027\241<t\221G=\363B\261<r\300\360<\231\021\372\274\351 \246\274>\226\310\274J\355\323<\237\307j;\307\261O=hm\030=\373\354\264;\037\321\353\274\340\204R\275:\203\013\274\230\201*\275?\205\264\274\014\0212\275\305\013U\275\345\245!\275i\323\204\273\276\303\264<\335w\372\274n\031\222\274\317\3329\274\277\314?=\235\026\231\273\315\241\245\274\203\366\370\274\337\307\340<\013\260k<\316\371\035;\366\342\000\275T\362\233\273\013\267\324<g\356\002=\006>3\2759D\\\275\245*\336<\3479/=\367n\312<\223E\331<\2318\250<\270\001\036\275n\370\361\274\211\334\005\275\273i3\272\236\374\352<\245e\362;\326J;<!f\213\274}~1\274\316\0103\275\222;\212\274\001\342!<^3\371\274%*\373\273\331e/\275\374_\201\274\234~U\275\340\350&\275L\343\n=\340\275\020\275\031^1:\203\006\'=\261\021*=SK>=4\373\315;\225\001\270<}\377X\275\315E\026\275.@\022=\274\333\025\2759\006\032<\366\352\370\272\357\224\257<{\026\251;dg\334<0\337\343\273:\2715=\0046i\274\230\301\235<\315}\351<\016?R= !K=\323\265\007<\374\256\027\275\331%\000\274\'e\257\273y\377K=\036\335~\274\213\016n<h>\342\274,\005$\275\342\314\021=\302\037\\\274\272\020\036=\240\377Z=\3260\305\274\220Ub\274\361\274\000<7,\t\274\300\257n\274V\265\030\275\253\250j\274)\300\376\274\354\272\354<\365TK=\255*5\2754K\001<\255Su\274\271x\345<\221z\027=\2568\016\275\355\335D\275V|\265<v\341\005=2C\246\274(\260!\275\326\236Z;jD\320<\031<\362\274\242\303\025\275\267\213q\274W\311W\275\356\304\246<(\353\033<u\006\365\267\212k\006\275^I8=_u\265\274\322\204\355\270\370\331\325:\001\031\245<\360\267\211\273\274\020\254\274\343 9=\2468\336;\372\362\005=\253\375:=\223\235\033\275Z\013\016=\306\340\244\274\303\210?=\314\002\234<\346\200\001=\234E\320\273\360|+\275s\377\304<\335g\033=\357\322\245\271_\346\344;`83<\274\302>\275\016\241/=\315\274\364<<\n\235\274\211\350\032=!L)\275\020\036t<Lu\005\275\370$\250<O\316\037\275\375\274\377\273\300<(<\304$_<z\217\250\274\3002U=\010/\'\275\352\321\273\274\240gS=\244Ha\273:\265\347\274R\300[\275\370a\376\274/\242\367<\202ke<.\004\240\274C\3179\275L\363\025\275\264YL=w\344\264:\317\257\247\274\000\034\211;%{\266\274\347-\000\275\302\220\350\272\213*\036=K\n\003=E\343\274<\013\272\327\274\"C\001\275De\031=KDt9/\251W\275\375\313d<\313~\221\274\\\"P=\000\006\337\274\356S\315;w&|<0\342\234<\364I8\273\014E\216<\274e\254<\337z\325<\347\323\303<1\251X=\000\323\037\274)\036T\275\305x\007=B\271\020\275\367\266P\275\340#\n=M{R=\367\336B\275\250\202O\275t\334\371\274;m\373\274\\\253\024<9\332\241\274]\354\333\272r\322Z=/MG=\372\217)\275\222n4\274X\310\304\274}\027*=X\320\376\274\021\271W=\226A\037=\305\224K=\246\034\256<\215\224\033=\237\207\030=Q\0267=\340\312>=\313[\227\274\275\254\027=\362\014\r<\301\'\353\274\304a\243<\350\227\010;\353\247\022=\300\177\326<98\207\273\306\232\t=\273\366\343;\014\317\303<\336|\333\274\317\314\024\275\327\323U\274m\330M:*\312%<8\263\270<\2142\035=Yq\264<\225a\335<r\254\032=h{\221<`\305/\275\311\354\355\270\000\032\275<.\007X=b\327u<\272\233\207\274\322nt\274\032v\231\274\252\315\306\274\352\n1=zB1<\373\274\230<\260\353\213<z\311\313\273\304^\204\272\021\337=\275\217h\317\273\235\212+\275\254\220\202\272B\315O\275\005\332I\275\036R)\275b\3270\275\215M\025=n\235\365\272\025\246@<\"5;=\374\223\007=H\000\201\274\300\267O\275X\037;\275\225L$\2753Y\020=c\3070\275\371\233\200<\211\354\233\274\031\202M=\3462\215\273\324&?\275\352\3323\275\326\334\306<]\234D<\316\364\235\274\277\203\200\2744\002\312<\343\273\n=t\315\274\274\226\033\265\274\024\357\376;N\016\255\274\361\353\377\274!\331\351\271\356;\331\274\370Y\016=\217z\245<\243]\315\274\230\326\227<\337\177G=\224\325\276\273\007\337\357;%\257\227<\224\217Q;\222\014\221\274U\005\022<\240\334\227<-\2633=)\367\235<\036w\207;\321\214I=\263\311\024\274\270/\201\274\332[\216<k\300\365<\344\306\234\274~\240o\274\262\304\206:\025\265\333;\264%\352<\334S\307<O\320U=gW/=\321\020\223\274\357a\004=i\231\206\274\371\332\330\274z 6\275\025\221\366;\002\340\310\274\032K\253\274\326\323\241\274)2\\=\264.\206<\225>\375\274\355U\241\274:\226/<M\2407\274[?\33790\225\"\275\247U\336<\311\325z;\252\272\323\274o\020N\275\2046I=G?\207<\t\227W\275\215\225\212\274wz\035\275\334\227\007=MI\022\275\231(\321<x\025D=\336\301\241\27495\r\275\375\006\214\272\257\323i<\356\247\036\274\254N\301<:Q\036=\243\333\233<p\207\010<!r+\275n\335\031=\232\337\233\271\3624M\275\022\010\252\274\231\3775\275\200\250\336\271\312\'4=\242\375(\275@\235@=\314\332\246<5\014\340<<\317M\2743%\276<\304n\227\274\255\331X\275\027\016\\=j\017g\274\316~(=X\214W=v\306.=J\344\242<\360j\023<\371M\000<-;E=\247\330\276<is\352<\226P\303\274\372.)\275\002r^\274\255WT\274*Q\355<K\251\257<j\257\371<\007\010&<\030\0353\275\301\235\002\275\315\313\243\274\036\244m;\230\3365\273\005\322F<\312\340\221\274\036\332\311\274\026\027K=\302K\255<5\336?\275\333\007\373<\353\247d;xtO=\260\300\262< \014u;\225\010p\273\252N\037<\')Q\275\016\207\306\274\001l\205<~\270\027=\220j*\275\343+\r\275\255^J\275\344\002\373\274\307\2762=\266\306H=\255\005\260\273U\362\025<<\000\020=A*!\274\236k\317<>\346\"\275\021[\001=*\311V\275M\331\004\274QX =\020\247\362<B\272)\275\321\305\315\274ci\323\273\356F\311<L[\325\274\363\'7\274m\\\030\275\251\361\303<\322\334\002<\310\023C\275\321\252\225\274\341v\r\274\334\3727=\240\027\217\274\351!\000\275\247\337!=\007TT\275n\245U=\"b\003\275\314\247(\275?\2056=\230M\221\274\276q\203\274d*\374<@z\352<?\261-\275\250Nq<\317\206A=\222cI<\001\266\220\273\366\\<=\360\020\205\274\031\227\347\274#A\205\274\007\022V\274:H\226;\024=\005=\200}\016\274\2731\330<9\t~\274\324)\013\275L\231O<M\243>==V$\275v\373K=\257\313\177<=\202\020=Xx*<B\010\314<=\261C\275\276\303\r\275\022e3\274\310\315\206\273\327\034!=\255u\360<\006 \260<&\n6\275\324\324_\274\240I\001\275A5C=u\312!=wR,\275\005\273\323<\310mU\275\301\3546\275\033\024\305<\267\030\260<\261\276==Y\314\002\274\343\234\317<\2156=\273\366\255V=\024\354\036=%N\356\274\360\234\036\275\013\230\020=\371\201\000=\272\256#\275\325\336\035\275\305Y*\275(\364$\275\266,[\275\232D\315<\017J\030\275\313\340\t\2750\233\370<\351\027\373\273=\026G\275\200DY\275\007\212\362<\215Xv\274O\223\240\274t\021\\\2742s\201\274\177\215\245<\204\364\003\273\327!@=\374\302\236\274\001q\014=?n@\275\327\377\255\273\006\241\353<2\310\240<H[\227\274\246\013I\275=\366\352\274\033&\241:\241O\227<\240\'\037=\001\360:=\2002\350<\032\367\323;=H6:M\311\220\274\2648\240<5T\274<M\346\007<4U/=\232\361&;\023|L\275xnN\275>\327\215<G\2439\275\337\337c\273\207\326\343:\210\2718;!=\315<\336\030H=z\0329=\357\372I=\264\2537\274\265\003|\274\303d\031\275q\334)\275\212O\234<\322\373W=:\307\215\273\366:\031=\2313\207\273\256\371\274\274\2372V\275(\3604=\356\276\017\275\267\303\325\274r\236W;\253\227\275\272zK@\274\267\322\241\274\305\255\001\275\302OI=\222@\006\275\036\221\346\273\343\3000=E\0349<@\213\337<\311\200\006=\372\314\215\273\221\333Z\273D\207\033=\353c\031<Nw\030\275\014\367\331:A\205\013\275\276v\r\275\314\334H=\232\356u<sZ\005\275m\345\323\274\217MA\274\236\326i<$\303U<}\260.\275\2668\034\273b@\006=-0\315\274sT\332;x\234<\274\305\353U\275&\t\256<w~P\275S\372\211\274\001>!=\344c\240<\302c\024=p*G;\355h\036\274\331\266\337\274\204\\.=\0238\242;<g\215\274!q\217\274\261$\010=\341\242!<\365Qv\274\277\203\031=\334NS\273\371\316%\275b\207T\275\tE\330\273\237\t\242<Je\021=\003\020\361\273\010\2551\274\3450=\274\254\031n:\311\3341<{\332(=\273\177E=O\266\"=\331\363\377<$\213\026\275\343J-<\315\201\241:f\270\317\274\"v\004\275\212\177\241\274\252\350\270\274,\242~;\352\000[=\343\363\017=\260-\025=\377\n/=\323\0131=;\314\036\275,\351z<\303\271\034\274\205\273\'=\022\356\207\274{\262\336\274\025Y\005=\327\2171\275\327\210\244<*\025\264\273J\307\315;5\r\020<\247k\027\274\033o8<`\314L=\360\300R\2738\250\t=l\212\367\2747\334\331\274;\217<=z\035\340<{0\311\274X\351\016\275\236\005\225\274\337RU\274J\360\203<\254\356Z=J)B=\\5\300\274\312\245\327<>.\024=\035\204\232\274\256;\347<a\232\"=%\254+=\235\206\351<\364\013\024\274\005,\222\274Z?\277\273Fht<\337\0345\274,o\004\275-mZ\275)i\2639\266\252\342\273C\210\374\272\321\302\023\274\002\237_\274u\353\t=\370\222\024=\376\240\024=\301\355<<\313QN\275\006`\362<o\327G=\014Y[\272~\351\372;s\373\376;1V#\274\021fW<\244\355\244\274UpJ\275|T\232;K\324W\274\306\201\211\273\360^\246<\036GL\275\221\312)\275\311\017\010<[\217\013\275\214\226\205<\005\035X;Y\2167=\302\262D;%\306%;\177K\271\274\204\261!=\205\252\226;?\371\270\274\346b\342\273\301\000?=0CA<r\222G\275\336|\262<B&.\275\0215\033\275\td>=I\261\023\275O\273\223<@\343\236\274G\024\320\274\202Q\241\273\211S\201\274\tP\277<\305\035\351\2742<W<\237\2752=\302\271\332<\205?>\274\251\317\350<\2770,\275d\275D\275P\316S=\336\0143\275\356K\371\274\253\ng\274\243\365:<\355e8=`\371A\274\037D;=\202\350,\274\311\"I=Y\0017;\200\023R\275\353u\311\274s\034r;m\205\'\275\316\267l\274G\333,=\246\r\330<\232\007\026=\361\3050\275\274_\257<\332\224;\275t\336\223\273e\t\r=\265\217V=\250\022F\275+vL=x\'?=T\036\025<\326\243 :\034\236I\275}\336\017=\320p>=\300\240\270\274\177\353\353<\361\217+\275r\302/\275\267U\275<\376\277\022;\360\014\341<\307\033\001<\301{2\274\340e\224\273\371S2\2750\037\244;\203\307\211\273\373\345\312\273W\275\021<\326wI\275\301\356J==\324\360\274$\270E\275\256=%;\326\260\335\273,\350\000=m\344\361<\222\036\200;\177\367\037\274\036\2473\274\223<8\275M\035\202\274\322\033h\272\340\247\227<\3314\276:y\3359\275\244\313\025\275\241\263a\274RM\334<!\177\350\274,E\033<V\'\002\275`\340Q\275\340\005A\275l\233[=\303\206J=\002%\222;.m&\275\212\020 \275\256\271\242<\267b\204\273\003q\314\2743?J8r\204G=\3115O=x\252B=\024\005\033;\\\354N\274\315\374\t\275u\3063=M\305O<SNx9g\027O\275p\221\350\274s\202\252<\244{G=c\351.\275\206eK=\233\371\360<U\201$=\312\217\215<\344\004)=\354u\006=\010.#=}\013Z=\342\036\314\274\242\372/\275[\263\037=\270\022\340\2741\243#=?\331r:\271\235%\275d}\237<n\327\273\274\231\330\223<\030\233I=\0029N=B\361\216\273\246\261h\274}\244\004\275\376d\020=k\236T;\241\245\027=\335\234+<\217A2=\343\346\034\275}Q\'\275\030\\\304\274\025(\270\2735\016\'\275\264p\360<\253-%\275\257{\310\274\316\033\205<\0029\242\274H\255\001\275\256\276\201<\0055\361;\\\340&=\250K6\274\243\333\216\274\265\245>\275U\"#<\205\241\366<\357\005\315<\3522\237<j8\243\274\222tA<\376\007#\275kH\230\274\312.\210<\001\032\004\274\333(H=\014\333P=li\367\274*4\n\275B\355\305\273!!\322\272\022\027\260<\243m\021\275\021\351C\275\211z\371<\002\277d\273\277\363)\2751o\236<\006\2619\275\266\310\333\272\230e\362<;1$\275\032\002:\275w\340&\274\332Q\221\274\217e\367<`?\254<e_J=\030\344@\274\\\032\031:G\312C=\343x\270\274\"\266Z={\010\370\274\241XV=\236y\022=\235.M<bl4\274\006~\024=\230jH\275b\356K=\0240 \275\301\024\001=\374\000\375\274\370C\275\274a\364:\2732C<<\272\0021\274+\3550=\244/\022\274\276\340\242\274\240\335\230<\0248S\275Dg\024=\275o\027<\357|\"=\346\t(=`^\217<\347~S= \355\021\275\344h\233;V\375\276\273-AO\275<kS=\003\201\210<\356\300\034\275z\320\024=\202\231\225<\217\253\333<\347s\300\273\335\216\006\275\365+&=yw\247<\316\330K\275\306\350?=}\002\265\274[\257\344<4\336Q\275\217\313\253<\366\216O=\3123\230\273;a\024=\314\213\203\274\251*=;rm\257\274S\347#\275G\261\337\274{\353\344\274\345H\007=7\034@\275zY}<Rc\344<\230\210\206\274\225l\010=\027M\214;\216\365\035\275\372\357\261\273\"~\335\274\314\220+\275\337\027\243<H\237Z<2U/\275\237\000\237;U\311P\275\212\311q:\313\372\267<[\227V\275\324\032\220<l\005q<\355\310\372\274\271\306\037=\r\034R=^\352\271\273O;\301\274U\014\3259J\335\030\273\202\335\275<|m\206<\222\010\265\272\261\343\376\2747m\213\272\214j\016\275\327][\274l\333O=\000\304\260\274\362\031Z\2741[\361;\023^\004\274\'\256\013=\177\367\335<7\270Z\275C\241\231;w\016Z\275\335\357\200\2743\356\211;\232\352\217<47\211<\226~\'=%\323E\275Z\0239=^y\t\275V\2264=\257t(\275\310\240\321\274N\3053=\312t;=uiq<\014\351D<\321;\323<s\013\273<\266\254\033\275^\362]:vX\245<\362}\277\274\306\306\364<D\312\026\275\n\351\353\274\02122=\007sX=\013m\001\275>\303\"=[\023h:\210\237\002=\201\315\323<\260\027B\275QqU\275\301\311\277\274\202\307\226\274~\222;=\333\021\026=Gf{\274\367\240\017=\376\217\335<\340\265M=\266\217Z=}i\220<\023\3240\274g\336\357<\267a8\274\243\013Z\274\3544\r\275|\312\203\274+k\355\274\355\270!\274\263\345Q=\320\034F\275}\307\342<\250\305\231\274\225\261P\275\031C\326;\264\355:=\230\313\r\274G2\205<\217/\010\273\321\276)=6\331\201\274\020\271\207<%zV=\301X5\275\206\3312<\rk\004=\025.\022<%\344\367\274C?\027\275\202\031\245<\320)\024=\265C\032\273\016\242\320<2H\305\273\265\247\270\274^\251\323\274$5\312\273\017\305O=8\244m\274\306>\372<\0174\274\274\356<\211\274^\033[\275bO\361\273q\366\236<\025R\325<\225\202\202\273\263\323K=\321\353\037\2758N\205\274[\364*=\241\351\035=\017\267\201\274hO!<\2648z<\321\347\361\273=\3275=\005\343\225\274x\374\361<G\351G=\220\355\213\274\255\000@<\222\261\031=\036\313\364<\227(W\275\372{\341\272\200\306\354<u\231#\275\214\024\230\274\252\000\006\275\225\010\217<\366\217\307<[\245\231<r+\237<\316\253\033=\206g\211<\253\332\250\274\210]9\275\356\301\257\274\354?A\275\220\353\\\274\326\001+\274.e\315<\266/\357<Q>Z\275\233\3265=\376\\w;\272\200\n\275R\315\363<\006\326\014\272\007\257&<\"G\036=(\261A\275\203\253/;5\215w<\026+B\275\307\032\313<}N(\275\333X%\275\200\233\263\274\354\253\332\274+L\313<\001\n\0039\201}\323\274i|E\27549 \275\353G\001\274\274\177==\332-C\274G\001\235<\3560\355\273\354s\000\275\370\034Q\275\007\355\243:\243\274)\275\265\302\266<\"T\036\275w\221\223\2746\271\372<N8\205\274\250\032+=\226\026\004<\257\371s\273\246G\037\272gy\223\274\354f\'\273\003}\221\274\323\201\345<L\375\271;k}J=\223\0062\275\214\t\324\274_\355\005\274\340/\037=k\3078=\271\033<\275\356**\275\366\324\370\274\340\\\t=\371\n\014\274\004\307\344\274\301pR=U\215\244<\0319Y=\006\027*=P\323\354<0P\020=\306\266\003=\350kR\275x\325X\275\006\302\330<sd\320;#O\274<\367\370$=S\361\006=\355Q\221\274\021\230\224\274\332\026\"=5\030-\275BU\210<4BA=\001\220&=\200\311\353\274\315b\201\274P\337A=\246\033L=\344 \365<\350\013*<e\010-\275gz\235\274\244VR=t\002\373\274{K\263;,\006\312;\016\223\016;d\311\342\274\340\030,<\270\003K=C\250;\275\202\333\240<\213\005\217\274\213\032/<\200\230N;}&\352<\265S\350<\266\244\234<\376\357Z\274\016t\260\273\3474E\275#K\'\275\035\247*=\257\370\024\275\225\311\302\274\300O\356<_\240U<\257\373\223<\375\325V=\376M\220<\342r\t\275J\177\003\2756tB={\210Q\275#5\260<8\331\352<\022\270W=\035\270,\275J\2016<\373\004\027\275\360\206\020=\023d%<H\2250=\031\211O=]\362&=d\221\'=\334\213\251\274\213l\032\275\316\037\210\274.\334/=\036\353n<b\247\000\275v\264\026\275\203\030\221\274\354P\035=A\301\"=\257\325\007;(\263\245;\253{\331\274\006e\017=\315N\032=\r\333\264;\232\361u\274>\242Z\2754@V=\304b\206<E\'\373<S\257\336\274\317\252K=s\352\372\2740f\017\275y\321I\275\327\375\205\274\221\246,\275JAc<\205j@\275\322r\003\275\220?\007=\\3\326<\233\243\325\273O%\210\274\316\2269\275\231\314\013\274\275OG\275@\267\016\274t+M\272\326\364\003<\254T\020=\177\365\242\2748%\256;\363\331\013\275\322\007\035=Ye\036\274W\035\264;\241T\216;\376\247\274<\370D\010\275Su\270\274\244\031<\274\213\317J<\226\0309\274\326\372\025=N\311\307\274A\341X\275\242\344\034;\323<\273<\355\2444<\206\031\022<\2459$=\025\235\305\274W\0230\273\252\211\261\274-\332\261;z\207 \275E\347\262<\303\013\353\274\030\370\026;\2320\302<\375\271\310\274\"\3001\275WO\027\275\247\373\267<C\364P=\340\006\035<\217\302\001=\306\035\264<\251wI=\315\245(\275\311\206K\274y\351H\273\\\262\342\2740\343\345\273V\022\222;\231\000\220<{\376S=\302~!=6\033\330\274q\340==\032\203M=\035\204:=\313\025\"=\216v\211<y\304P\274\342\226\267;0\332S\274}\341\263\274\010\313\326\274j\245\367;:bH\274\212\016\300<|\342(<\275\354p\2742\362\237<\354\234v<\312\276\001\275\004z\276\274.\207<\275\003\323\210<\003\247\310<8\225\321<7\215\370\273tt`;b\016\356<x\216\346<\365\275\306\274E\320P<K\202\375:\357\246-=*2\234;f\245H=\027\234\202<\346o\033=~\037\303<]\3423\2748d+=\350\361&=\330r\017\275u\004\304;$/Z\272i\220\240<\231h\340<\323\321\223;\262K3\275\033A\223<\311k\247<Yz\033<a\004\260<Q\275R=\243\333\334;\265\236\025;4x\'=p\270X<\231\370X\275P<\345;\272\340\373<\365\255@=\222\230\366\274\321V\346\2738\343\303<\253\246\021\274\353O\301\274\362P\365<\266\226#\275T\023\'\275\030F8\274zq\322\274\331\312G<\341\010\010<&xE\275\345\264\265<\027\335\033\275\340\224K=\314z\340\272r\372\353\273,\032[\274\"un\273t\030\021=\202\024\352\274\037\003\311\273}\\1=&\035\023\275\370\035E\275\316\300\375\274\327\306\373;:\367\335\274\356i\020\274\366\rK\273\257\353\031<!|\262\274\021\224\367<\025D\033=\273@\006\275\312\245\022\275*\037\256\273\005I`\274\207P\227\274Wa\315\273\273~\323\274\373\303\316<\225\322\001\274+\243}\274\0220!=+\242`<\222\206\020=\317PP=G\341\032=T\306)\275@\017\300\274oQ\000<}\351<=E\n\003=\247L\346\274b\033\021\275\317\021\302\274\233\335\n= /\246;\323\326\022=c$6\273\212J\362<c&\316<\235\371\005\275.\326\306;\340%0\275Y\354\274<\262\004\023=\222\362\233<\354\262T\275\245\313\211;\360U\031=p\3201=\rO\342\273\2268?=\215\200\006<\016A\366<\274\330\021<\302\304\n=\347\263:\275\357/\373\2743\303V=\374\216/=\2308\235\274>y\326\272IT\005\2709\311\036<F\356 <G\220Z\275\207\006#\275\314\001\253<Z\'\356\274@d\357\274\206\035\026<\3124\026;\240\356\032=%\312\206<\255y\214<\345(\237<\371\010\r\275\331\267@\275\236\237F\275\346\374_\273O23\2750\312S\275< \033=c\361\026\275\313\254#=\0325I=%\254D=\3004:\274)\212\016<\n\275\024=\326\220%=\027B\345\274\375M\007=V!<=}\355]\272\202\376\037=\325\314\301\274\r;M=\334e/=#\241\303\274\037\201<<\370\230*\275\026A\236\274l\367j\274\311\246G\275\247\217<=0\223\003\275`\260\222\274\326\306\031<S\367:;$?L\274\303\177\301\274\306\305\335<\260E#\275\267\324\340<\306\2022=\223{\026\275\010\264C=\t\256\'=HQ\036=\330\273\n=\265\026\017\272\322D(<(\300D\274i\364\017=\024\323U\275\342\001\016;\020\353\352\274\254H@\275%\354\312\274js\341<^\213\263<l\250\363<\253\327\037\275B?=\274\032\010&\275vz\377<yJ2=\242\264s<V\357\342\273^\375\235\274\024\375@<\250\037!\275\247\243>:Vs\212\272\327\336:<Z\316V=\232\212\321\272\033;/=\017\rV\275M\225\t<Y~*\274\037\353\t=\363\372\351\274\206\362C\275\327\304.\273\016\002\246<*\224\020\275M\232\322<\001\245%\274C%\035=\035\353\031=X\325\335<\217\201\215\273\320\365@=Q5\257\274\3523\021=\376`7=6\212\271\274{q\025\275\227N\335\273\262k\203\273\340\231\200<\264\016\n=\213c?=M\225\360;\303\"\243\273^\364\034=\302vQ=W\212M\275I\202o\274\272\305t\274\00324\273\370\364\223<\245<\007=\261\251\006=T\224\311<U#\025\273+\022W=w\334N=`EJ\274\234\351(:\004\225:=\327\016W\275.\353\312\274\373u\346<O\220\345\274\374\356\322<\321\014\'\275\005\245\236<cCF;\317\2474\275k\0175=\323\347k;k\204\301<I\252\207\274g&\024\275hB\324\274{\236.\275Y\336_<8$v\274\272E\350;\260/\000\275\034=W\275\027\346\364<\314\204\371\274\223\251\031\2753\272\004=\002*\005\274\325\337\234<\274\343\021=\273\315&<\330r\014\275\022\031\364\273HD\023<4\010e\274\010<\030=\341\267\205\274@\213\026\275\211HT<\235f3\273\037\332&\275}\350\376\274\316\016w<I\244?=.\252\006\275\020x\355<\237*\260<\331\322\346<\265\246\'\274\353.)\275H\033%\275\245\353\213< \307;=\\\262\031\275\266\316\272\274$`\231<\256m*\273p\320\250:\316\257\362<?|5=\245K\354\274\275\251\340;\330\317\001=\261~O=\365;\020\275E\034K\275t\302\335\274\216r\004\275!\277&<\277\306P=\361\200W=b\367\300<\210\tx\274Y\000D\275\272\244\037\273\245\227O=\253\023@<\251\250\205<D\343\273<L;P\274\001\034\"\275mUu<-<\264;\345\351,=\241&\262\274\323\013\'\275\253F\021=\276\2451=C\311\367<\346\235\017\275\036\213\322\274\207\277O<$#\026\275\263}\307\273\3324\251<\001\260\354\274\213\222\007=QJB=P\322&=\364\223K\275\250\367\267\274U\333D\274h\365\320<8\331\352\274\003\330@=\210\351\033<n\322\026=am~\274\021s\331\274\200#\020\275\r\246G=\211\315\271<\322\023\201\274<\251K=\027\320\312\274\370[\n\275B\234\304;\374\3653\273\010l\213\273\302l#\273\206\217\022<\316\3464\275\211\240\035=\360`-\275\361\372L\275\027\347Z\273O\331I=C2\256\274a\350:=\">\320;r\217E\274\344\016?=w\021\222\274\2463\013=\346\327@=\035fS\275)\266\010\275\004\3157\275W\245\220\274\212\240\014\272\201\025\356\273\373\347\376<Mf\026\275\364\356\274\272\300\274]\274\325]\017<\310\2247\275\245\273\330\274\003\026@\275\350;3\275\273z#=\007\021\215\274\311\267S\275A\346\337\274sf\204<\367\367\217:B\332R\275X\236\006=\315i\264\274\323-9<;\014\\\271\353^\025=k\274\240<l\377\000<l\344\347<f\'\246;[\025_\273,Q\327\274\327\3665=\214\355\241\274\305\221\274<\223\246(=\207x;<s\340#=\371(\202<Z\316\361<\016?\030\275\033D)=\351\276H\274\273\326\263;\357\320\027<\n\341\275\274\262\322\234\274\201\244\033\275x\0254\275\273n\036=\0269\334<\364\215>=\377jQ=\231Dn<\223\365-\275\356\316\331\274F\336\271\274=4I<\013O\227\274\314\336I;l(\363<\371\246\304\274\253\302F=z\212\305\274\221P/\275\007\007\255<N\365\251\274\302\230\027\275/wE\275\327\233,\275\217\"(\275d\370\366<\341\034\033=\'\377\220<\"\220R=\354P\352\274\371\031\246<n\"\355\274o4\025\275\254\370\000=*\010\007=+\216\024\275\007\301s<%\3120\274\343\323\337\274QX:=\217\337\025==yH=\205(\002<\300\372\262\274\312#\035\275\243f4<fD\002=\377\004\022\274I^%\274%\222\r=\343;\034\275;\274{<\177N?={\337K=|\025C\275\003\332\037=E\225\305;Z\200\366\274\242\221F=,\231\216\274P\'\031=\244d\275\274\\\310F\274\216\033\352\273\226\305\377\273T\302?\275l\0003\274\337Y\036\2759aB=p_\244\274\362\353\331<*}M=\'R\023<T\032\267\274/\033I=\03695=[6G\275\373\341\023\275\3331\001\275\375\324\244<EY\242\274wc\203\274HGV\274\364\264T=D\0250\275Qr\031\275\203\236\004=h\271\207\274!+\254\274\373];;1\230\365\274\036P\250<\255\370$\275\232\037K=k\316\246\274\367?\001\275~\212\026\275\314q6\275\001\344\267\274z\026v;\310\300\255\272\202\221?=\266\2752\275\037\376$=h\320\222<ZGL\2751\371\033=`\310\036\2758&\263<\242\301\212<\t\021Y=\023D\323;\016\034D=\300)\320<3w\027\274gb\016\275\313?\005;\351\3153\275\342\224\273;:,P\275\242\033\305\274Q\273\023=\230\345\307\274c\320\270;\226\262.\274\177]F\275G\022\000=\235i\377<\024]\005\275\3228\000\275\254\340\037=\221\023T\275\223y>=w>\202\274\326\355.\274\262)F\275\235y\320;\020\232N\275,`\000\275\241\225\312\274\256\022\031\275\203\301/\275\004^\253\274N\202H=\223\225\001\275@\267\325\274\007\340\245\274\211\315!\275\221\010\002\275\017E\236;\026\313#=\rY\242;TgN\2742\3124=\201\036\032\275/29=\002\346\023\275\321oC<n\231\260<\207R\010\275\002\227\310<\240\000\025\274\223\221\035\274b\310\t\275\276\344\317<r\265@=C\326\020\275\314}\374;P\014\272<A\364\t\275\336\212<\275\205#\030=`\327}\273/\264-;\307\310\252\273\303\204\220<\005\013>\2753\235\231<\274 \303\274\027dW\275H\025\234;\235\317\016\275\\:F=c|V\273\260d$\275\215\2537\275geW\275\325ml<\350@\031=4\032\354\273\223\217\n\275\016#\357<\005t\325:,\261\023=vj\"\274T^/=\000\332\002\273\341\357\316\274]A\222\274\371\332*\275}\264#\275\014\345\014\274\271\250\224\274\317E?\2755\316\t\274\335\265\007=k\233\001=);_<u\0203\2733i\310<\022(,=\373RZ\275\243\346m;\231\365&\274\323s\036;\357IY=\301\035;\275\262\371\262<\007=\001=rE5\275N\225\022\275\361]\300<\252\334(\275\3139\017=`TD=\325_\363\274\000\267\275<9\222\273;\351\034H=l\245S=|\207\330<14U=./&<z4\177<\350\350\307<\346\027\357\274_p\233<\300S-=\034[&\275 \347.\275\365\271.\275\205\357.\274\323\356\021=\036\376$=%\274\226\273R)m9\235\277@=\3425\020=\257\247\367\274\247QO\275\224\370m\273p1?=g2\376\274\372\320\240:?\203\302<\261J\377<\376\317)=\240\314K\275o4\233\274$g\251\273F\\\225:-& =\372\211\376\273B\320\013\275\232\261\211<\226\227\222<\346d\365<\200\374\006=\267\312\255;0f=\275C\033\254<_D\"\275\215\334\025\275a\034Y\274\331\350:=\200\263O\275\242\000\275\274f\237\362<U\001@=\226\260P=T\347Z=\'\363\004=4\203\027=#\256\320<\360\254k<T\253_\274e\037\003=\222\346\037\275\346\270\333\274)\212\004;\232X?\275\366qX\275c\210\n=\035\021R\272 \362z<\263i\320\2732\322\323<4\261;=/\234U\275Bb\306<\353\366\252<%\036\361\274,u\274<\373u\031\275\361rQ\275\357#W\275\304\351\031\275\336\307\262\274\377\207\r\275\243\271\202\274\307s2\2754\302*=\352\300\257\274C\374\241<\356\"B=R\214\274<.\263\334<\223\254-=)\3532=\013Ly\273\272\204A=^R\327\2742\360\370<K42=\014\233<=d!L\275\030c\366\273\202\311\354<\367\"\033=I\337\253\274\037[$=\2725&\275\255\323\006\275\002\266\304<]\277,=\230X\364\274F<\'\275\347\373];\377\003G=QZ\337\273i;\362\274J\241\273;\306+\007\275f\275=\275\247\260\014\275\277\n\310\274,qV\275H\034!\2758\262!\275\227C\306<i|<=z\202\326\274\317\005e<\277-@<(>\351<\034Kg\273Y\351#;\027\264X\275\203[.\274y\204\337\273\226p\264<|\361X\275\363e\321<\332\377M\275\016\223\357<\310\005\';\226b\331<\t\325P=\202\231P\275 \315)\275j\352\204<\026\337\301<X\316\206<\311\3429\275\205\323\376<\3627\215\273[\364(=kW\316\273b\332p\274h\222\355\274\307\335\273\274E8<=\014\270\317\274[)\264\274\311\234C=\032\244A\275o\014\316\274\t\372\370<\363&4\275\301\234!\275\031\220\215\274\350\350K=\024\023P=t\314\316<|\215\024\275\241\206\004=\0064\231\2745\237H;\250\374!=\031i\001=\202\272\017\275\235\343\006\275-\373\226<F\335F\275\315\027V\275\312\277\t;7T\221\274\247&M=^\261N=\330\017\t\275>X\001\274\024\024\022\275s\3665\275`\301+\275\370q\033\275\367\220\030\275\325\334\361<\333\025;<\013e\346;\023\004\340\274\375\216\325<$~Z=\301\350\177;\t7\006\275\266\2460<\031\034\364:\227\233!=\324\261\030=}\3417=\273\236\206:\222\035\236\274\003\307\305<;\355\306\274$\277\010=z\014*\2753\031\273;\345\003a\273\326\263\350<\357\036A=-_\314\273\316\262\004\275\352\371\312\274\217\273\341\274\r\253\257\274\235\001\"=\373\335\260\274\023\342g\273Im.\2751\277+\2740\372{\272\267\0174\274\304\333|<\347\255\330\274fg\212\273l\276\266<\016v\332<W\000,\273\240\270\227;\213X<\274\217\245\026=\360f\263<\025\205\226\274\2455u\271\370(u\274\002*V=\356\022\031<H\356N\275\343\274\310\274_\336\234<\352\304\\\274\371\032*<o\214!=\315\000G<\300\031C=\217p/\274\332\200 =\223w%\275vm\251\274\244\302\007\275\200\2564\275\371\021\246\274\241\361\363\273\241\0028\274\254\377S\275\342yF\275\276\341\017=\177`\266\274\241\320\n\2756e?<\234\266\024=:\333\022=\013\204\307\274\202\351\366<\2616\350<g\200\304<}0\347<\177\014@=e\271\031=t\301\251<()W\273G\3048=T\255\364:\241\035\330\274\337~\004=\312\215\013<2+\315<+\261:=\244|\013\275Bz>\275\001\227V<\370\026C\275v\265b<\213 X=\326\005\036\274\2313B=O\345!\275W\202\277<T\251\321\274\217\214\027<o\302\t;\251Q\223<\275\354\223<\022lR\274\\C\256<LT\036=2\007O\2722\010\233<-4T\274\260E?=\240$?=\245\203:\274\020\353m\274\0374F=\"|\377\2730\237\325\274\013\275B:\301\'9\275q\231\306<\226\"\370;\025\223\240\274a\2605=|\005\345<a\351P\275\263q\202<\224\274\242<\261nz<\036\261g:\014\237z\274\374\335\031=\325Q\204;\034T\007=\354\206\024<\343x\223\274\310\325\330\273\344\032\016\275\262\350F\275\036\n\002=\2765\325\274e\223U=\020\004@=L\310\375<\221\301\r\275!J \275\350K\250\273sK\277<\020\270\025\273L\036\334<\rH\340<E\265\"=\277\252\355\273\016\354(\275\277um\273\376/\305\274\250\001\007\275\007ZB=\032\016H\275\265\341C=\232\273E\273iOD=\005\227X<\n\237H\275\357\250=<s\332G\274\246\250D=Z\2368<\327\'N\275D!{<\224j-=,p\020\274\367\222L\274l\2634\275=_\217;\270%\030<qT#\275\376\216\006:\324\374\354\274\205\347\035\275S4==\234\213\327<\267\031@\275\332\345\323\272\327\245\242\274\211\177\221<\277\t\273\274N\\R\275\360\223\306\273\312\002\365\274\3423\n\275\363\257\270<G]\';\346\244\037<\311\013\346\274\212\326\022\275\304H\366\273\000%\373\274\013\3223=\266\326Z;\373n%\275gi\322\274\307\030\332\274\013\234\014\274\207*r\274\035\351\301\274\003\203\"=\217\022\241<\337\2221\275\347\340*\2751\'\030=RHa;\343D2\275\032A.\275Y\002\352\274g.S\275w\360\306\273X\3355=\234\032\021=3h\307<\254<\322<a\347$<R%F=\365m<\274\026H%=@e\235\274\312\3222\275\001\272\254<P\036\241\274\250/\026\274G\337\344<(@\026=\227\233C<\244\337 <ckP=\035IR\275\014\372H\274\276\2507<\205\2009=\307\256\232<b#\t\275\377\215\035\2752gX=Zn\210\273\223\364C=>A\231\273\326H\023\275\037G\225<)\370\375\274\n\303O=\006Z\204\274\274\301\241<KdQ\273\215\272\247<\344\001\347\273i\370\017\275m\212\'\274\311c\032\274+\276\210\273\270\253\031\275\307\363\325<#\256\316<\302.\207\274\261\264V=\331c9\275I\025G\275\331-\313<)p\323\274\356V\231\274\236\2744={5\233<8\300\334;%\212P=\216\247\013\275V0+\2744F\202<\331\035\016\275|\340\320;\350\275\256\274\342\205S=\237\244\010=q\301\016\275?\201\210\273\340\276R\275\201\017[\275\035j/=\216\244G<\220\202\331<\007\223W\275\377ZA=t*\365<\344BG\275\017\027Z\275fj\320\274\322\327\304<\272u+\275\007\357\313<\2603\372<\321\020\002\275\270m$=P\234\243\273\374\'4=\356\"\271\274\344\303\321<d\204\013\275\216\306\031\275\356\307!;\025\024\262<\027\021%\275\2142\205<\032\310j\274\353b\224\273\373C\300\274\375\362\007\274\256\006\005\275)\205\006\275\251\333\344\274*?\340<\256iN=S\370Z\275\223\364e\274\30378=\306AD\275c\314F<\004\357U\275\363\230\223\274qc(\274\357YS\275D\252\013=\343\372\000\275\352p=\275O\267,\274\336\272\253\271\365\243\275\274\311\337O=\323\350,=3\362\"=xj\025\275\271\270\013\275\240y\2369^\264\255\274\277\200#=\221\033W\274L\335X=\033\267\016=\035\325\"\274\351\036\344;P\214E=\034p*=\261\343\255<\263rD\275\376\217\007;\273Q\237<\344F\t\274b$\220\274\275\177\234<\307\177\320;\006\220\237<\024\331K\275ZZ\254<Yp7\275\256\342p;\000rH\275\014\217\242<1\022\247<\202Tj\274\264\246\343<^R0\275\n\345\303\274\335s\211\274\336\354\224\274\224\032[<E(P<\334\325S\275\\\272\3029\013X\235;\253\344\021=F\t\007;\353\2027=O7 \275\212\270\023\275\227c\007\275o\006\201<b\361\035\275y\332\001=\221\205\357<\200O\030;y\020\035<,\236:\275Fk\022=d\225\360:\303q\311\274\225;U\275\024\201\211<n\336m\274\331\243\005=$F\264\273\362\177\022<~%\024=n\005\252<\303\322#=eF%=mgc\274\246,Q\275\024\364L\275b\230\007=\354\\\320\274H\313\3039\010ET\275N\334\253<2\331\352\273q\361\341\273\003\035%=\224\030\271\274^\253!==\334\326;R\315\001\274\033\016\367<\262\237\373\274\222tF\275\023Cr\273\227\3622<\317\357\010\275o\270\032\275\'\326[\275m\2460\275v-9=&\222[\275\003f9=\225\263!=\177\\@\275\334G\326\273\302$\020=\262\036\313\274\207\231b\273\255\266K=\366(z<\216\202\031=\2755\034\275\\1\265<\016\367$\275\34719=v1\200\274K\302(\274\3329\350<\213\313\020\2735\306\'\275\262V\033=\307_\366<\310\232\243;\3079H\275\352s\235\274\371\020{<\353%\373<\237\326\355\274\260\213\254<\033\023\324<p_H=\366\233\242\273\267\202!\272\317s\026\275\356D\303\274\211\002\243\273H\203\004=\335c\021\275\351[\263:}\372\351<U{\346<o\251Y=\013yC\275F\255 =K\2248=C\305\r<\3655\342<\007\262\021\275\370\362X\275\234\227\003:\267AM=\230\323E={A\016=*\200\310\272\227F\213\274=\272.=B\214\353\274#\335!\275\325\005J=v,\314\274tCR=\000pT\275-\250\032<S\034V\275\032P\002\275\030\2014\274\344\334\332<\373\313.<\357T7=ERW<n!\n\275\325\301\253<DmX=1\205S=z%@\274\331}\2549\223[\022=\307\2711;\272\306\363\274\'ZU\275\253\333-=s\331X=\033\207(\275\340x\307\274\361\221\354<0\352\375<\344\362\266\274\010iC\275-\327*\275u1\231<\310\232\341\274S\r\350<\204\217v<^\200==\032\340\220<*\223Q;\203{P\274<W\321\274!Q7=\213\332\020=\330g\017\275\356\275\312<\222\013p<\010\227\356\274\307 /<\301\276\016\274H(\365<~Y\251<\257,\305<\225\356\031=E\341:<Bj\362\274\272_\246\2730\264\'\275m\213!\275\237c7=\216\215Y\275\363KS\275z,\263;\345L\312<p\357\324\274\223\337==-\317\275<\234\275\362\274\345/\031\275\2648\027:D\347B=\004^\006\275\030\261\243\273\025\222N=\355\250\343:\003\3260\2757$^\273\226M\037\275r8\336<\203$\227\274\317\326A=$\024\346\274R\365?\275F\222Z\274E\357\031\275\025\2465=\256r^\274@\002s<\025A\013=\034\330\021\275&xG\275-H\014\275\212\235\265\274%\200\037=c,5\275\0008\301<}\\\177<{\010Z\275;I\035\275\261\377\316<\246\341\010\274W\265\325\274Na=<\235=!=\262\357n\274N\020!\275\222\005\251<\035/\021\274\353\361\235\273\251\315\014=z\3126\275:\321\312<E\332\255<\227\356\024\275\022C\035\275+%\250\274\376\224\310<\312\007K\275\226\250\315\274J\245\240<\000?\243\273\355\177=\275,\320\006=\244\ti<jS\r\273\2240<\275\211w\376\273\376D\271\274\010]\243<\351\344+=\3176@=\336\020 ;\355\2424\275~\337G=\3358-=I$\';\333\\=\275\325o\037<+-8\275\354D\020<g\211\007\275\300\317\"\274O)\307<\271\222\016<.i)\275py\2239\004\221I=\222\032N<H\245>=n\312\247<\342M\032\275\367\033\006\274!\\\227<\257N\032\274n\213\276\274\245\306\t=MP\347<\224\300\001:\373Q4\275D\236M;y\3170\275\004c7<\245I\n\274\300\013\204<~w>=\374\301\326<\263\264B=4z/=\013O\257\274\274\344B<$h0;\321\303\250\273\327$Q<\020\260\005=\322\340\026\275\363\335Z=\231\230\035=?\335(\272\343r\312\274\216Oq\274iP\222<\022\005\t\273\304\310\020\275k\231\221<\210,<=\356\355\036<O@\325\272ha\025=p0\243\274\336E\330<{\202\216<\212:\023=\330\265\034\275\224V\003\275\177\350\000=#\372@\273\'\264@\2747%M\275\344[J\272\333\334\331\274\004?\236<4\212\320\271\255\236\024=\364a?<\234\"\362\274\306\323\264;\324\373\005=iqY=\020t+=\0238<<\026Q\030\275mJ\010=\234\216E=\247\013\216\274a@\376\2747X\342<\\\242\002\275\370\261!\275\263\340-=Cf\213\274\235;\205\2741\317\211\274\336\255\207\274A\2428=1?V\275L\325E;?\346?\275\364&\034=\343\256\346\274\267c1<\313\216\314\272\350\014\006\274\350\314.\274/I\037\275\305\"\323<\310\307\234<a\001\251<v\232\"\274\217\226\031=\261`@<\250\306\007\274\315\005w\273\006Z!\275\235\356X=M\371O=*W8=\316\023\311\274R\375\n=\370\244&\274!L\343\271\260i\311<\177\356@=\202\203\225<+\331\024=\334J\375<\n\356\331;\346\350\364\273nAL\275\024\202\005=\324\300\272\273\204\306\244\273<\304\223:\263\\\316\274\034\201\260<!&\277\274\"L\336\273l)\241<\232T\017=\300\230\232\2744\341\257\274\003\rk<~\315W=\307{\250<\n.\016\275\024E$=\337PD\2759\305e;\343\232z<\020\321\271\274\027c\021\275\335\266C=\320k\364\273*2a<\033\325\253<m\267\366\272\255\2628=\366s:=\352\276\t=g\362~<\327\2517\275\033\240+\275\202\020\274\274sU:=\373\367\007=\315oH=\266\r3=\271\326\213\274\226b>\2758\233w;\272\313\235\274h\244\303\274;\254I\274N\024\022=\353%\314\273t\232\001\274\034\377s<\020\n\321<\233\364K\275&\273\367;\316YH\275\006\264\022=\231IM=iI\245\274#\001\215\274\220a\032\275\"\367\331\274\251\336\030=\207P\002\275\217\331\025=\223\314\0269\002\363r;\337\3540=\233\321\257\274\237\027w\2733`D=NU$=\206\311\372;C\3028\272\301F\231;\227\257@\275]\356~\274\002\244\004\275h\214;\275\254\211\215\273~\204\234<\035\300I=\244\324J\275\273&\343<S\334\324\273&\356\247\274\343\221\341\274\017\340A=%\370*\275\314\206O\272\003\272\n\275\266\276\227<L\232N\275\277?C=V\260r;\231D\021\275\363\357\000\274\337\306\025=\002\251S\275\352P\252\274\203\335\010\274\364\316\332<V\2416\275\305e\200\274\264\214B\275\301s\326<`N\030<\363\311\027<\345\202E=>\367\2278\313I2\275\345\257-:\324\371/\275\200\277\027\275>\376\353:\360#\260;c!\033\275\237R\307;\227\n\223<f\212\026<\2043/\275.\371;\274\350\2349=\307\361\276\274\004\251N=X\033\\\275$D2\275\240M\221\274\022Z\326\274\002\016\271\274\256\024\037=\006\017\315\274u\212Q\275\216\317P\275\ts9\275\003\025\324\274\021\231\313\274\305\030\010\275\'\312/=\232\344\030=\275\226\210\274\205\026\"=$\244\336\274\247\334n<\231\214\340;\312\306+\275\205-\355\274>\325\340<\230\264U\274\037\205\023=MU\311<\031\343\317\274\310]\242\274\364\254\200:)|\023\275\014\330\027\275\036h[\275Yq==\223\202Y\275\250\203\323\273HZA\275\355xT\275c\200<\275\374%G\275\277\033b;\334z\214;-%\221<\n~\316\274\366\372[=Yb\346\274\013W\026=#\265\000\273\220zX=L\"\272\274\274\270\006=\325\335I==\2077\274z\312\376<q\256.=\356\036\201<w0O\275\2433$\275\037\341\347\274\234\"E=0\342\234\274C>\024\275l0\366<7&\264<c\317\372\274[\354\341\274\242wg;\205h+=\372\362\021\273\356\020#;\004T\216\274\204%\001=R\233V=\2031T\275.\036W<\307\"\036=\251\3034\2756V\023\275\243\017\234<Z\305:<lz\316;P\3251\275\0233Q\275\226\214\324\273Y\242R=\004\343\331\274\252\3737=\021D =\341\261\025\274lr\355;\266\254\246<\351\347&=\365\352\005\275K\"\020=\266r\320\274\377\262\037=\305\003>\2750\333\277;\377\177\214<Sh\243\274\316\302\272<\036\014\032=\177\244\237<G\'/\275\3714\333<Og\030\275\313Z\007\274\025\237\256;)\350==_\344\204<T\207\365<x)\024\275\265\031Q\275\200\237R=\230\222M\275\302\277\374\274\353\3212<a@\246;\245\233\375\274\376\347d<\3366\330<\363J8=\233\312\224\273\263\003\030=\231\2343=\0133@=I\217\244\272\247\223T\274\210\243\325<tF\034\274\332\372`\274\224\"\013\275\377|i<\350F\256;h\206\343<\375ZN=\373\224\017=\205\352\004\275\242\030E=\177n\277\273\267\351\376\274\373pV=\0319F<\217\002\310<\037w(=>\232\025<Q\311@\275\023rA\275\371\263\256\274\366\327\003=\352\021\256;C\270\031\275\243j%9\r\3353<\277AE\275\n#\316\274\323/(\274%\006,=\232\254K=n\270\027\275oz\332\274\317\n(<\227;\023\275\245\273\022<\371\267+\275\202\206\234<\020\016=\275\003\346K=\330h\273<\311\324 \275\260 X=\026\333\221\274\ny1\275\331d\213<6\006\227<j\335.\2758\366D\275\3260\323:\375\320\021=\004\320)\275u\270\312<\003;0\275\334\022\212\274\337\024\316<\034FA=\365\034,\274\215\211\375<\225\216\025=\362\\\030=\003\331\000\275E\304\004\275\'\270\345<\013\n\266\274!\213T\275M\036\377<\313JU=\r\345s\274\263\347\002=e{\340<){U=o\264B\274\310\317+\275r\210\242\274\354\3469=e\314\032\275\216\216\023\275-\255\030=\026`T=\325r\271\274\341\203/=k\036\005\275\2624,=\262\362\010\275\343\246=\274j\355\243\274\251\264\'\275]#\207\274\203\226J\275;q/\275qN\322\274\022\007\002=X6>=\312{=\275\367\206\274<F\260\346<*8\311<pE\232\274\177\252F=\360\237\007\275\274\030\253<\327R:=\317\241\036=\345\033\014=YR=\274\272/_\274Gbh;\014aM=^\361\344\274j0\024\274\004y\312<\244\223P=\002\260\355;c}\005\275\221b\245<w\206>\275\244\252H\275\262\207g<\324\200\221<z\267;=\025\342\000\274@\030A=0\214\303\274\275\317\257\274+\341\300\274\205\034\341<8\227\274<\003&F=\253\225O=X\253\254\274Z\320J\275\367L\313\274\236\t\023<\263\212/=\035\351\007\275\006\341\035=\337\252;=\337\357u<\372e\272;\004\321g\274>D\334;q\226\261\2743T\016=a<Y\275\007[\320\274\377\322\352;q\225e\274\320\276#=\3406F\274\302\020\326<\324&\031\275\356g\367<\306\220\336\274uH<\275J\276\265\274\215\305\007=\321\203(\275\274\267\005<\004{8\275\332%\202;\221\204\254\273\212f<\274\001 \212\274\223\no<\236\203\314\274\237\354\033=<\354\016\275\255J\243\274\250\225\032\274\270\245\354<\275\237\010\275\365\222m<\223\310^<7YJ=\322\362\010=\240\370Z\275\321\367\033=ph\030\275\302Y[=*\251\241<\357\373:=\340\r =\357F==3:\347<\310\254@=\234\016Z\275\203\372\371<7\346L\275{I\004<\225\000\214\271=\r\020\275I\362X\274\220\010\026\275!\027:=t\2053=\361\002\366<\363\274\003\275j\017;=\352\326\026=\274\202-=\301\300%\275\365t\010\275\221\032[\275\235]F=\224\tP=\252|\'=\00149=\021\0338=\231\216\177\274\364\254G<\320\202\312\273\213d\017;=\2171\275\335:&=\331\334\036=\242\2463=\t\'>= H\212\274\023\3519=e\352C\274\343\370F\275m\230\276\274\312\035\314\274\242}\323\274}\023\353\274t\"\343\274\346\212\233\274\300\260+\275\303\376C=\271\227\344<H\304\355\274\200\027\253;\344%;=r4\016\274\314WZ=\271\247\342\274\240\177\244:\025\315\265<\252\021\221<\275\003\354<\253\252C\275\253H\014\275\\\026\227\274\365\304\223<\002\0340\275\221\215\303<O\215\003\275\235\272\335\274\374\202\314\2741\262\n\2749A\377\274u\342\221<\023\210\221\274U{J\274\371\2746<T\356\031=o\224\315<\201A?\275\274AL\274\325\016F\275\213\200j\272\272\231)\274\241*F\273\364hp<\330@R=^\356\274;G{4=\252\030\306<\254\223\313\274\320%\235\274\367\313\021=\327\276\333\273\003!H\274v\362#\274VK\306<\355}\242\273\236\t\"=%u\013\275\020\317\022=I\344\363\273\320\036 \275\023a\304<\214\354:<y4J=\276$\373;\205<\021\275\357\2104\275\030\230\231\273n\260\302\274_\235Z\275\362\225\333\274\'-W=\023\325U=\021\035@\275\204.<\275\371\363\250\273\231\376+<-0L=\373\263\213\274J\356+<C\276S=QM\271<\365\323D=\222\217-\275\244\266T\275O\325,=\257\2446\275\312UA=Cv\241\274@(\264\274\361\345\331\273\026\340\371\274&\020\351<\003\013\366\272e\005j<\223l\003<I\260\317\271\0032\211\274\307\337.\275\261\245\253:7\327\030\275\021Q\276\274\233\377P\274\266n\266\274\250\206\334\274]\013^<A&s\273\322\255R\275\245\266\004\275\0372\372<\273\014\003=t\032\261\273\005+W\275a\307\021=\034\242\232\273\374fV=\304\344\205\274+\031W=\356<j;\277) \273\304\004E=M\350\025<+\243\355\274VZS\2755\372A\275,\250V\274\333\304\003=\013yM\275\003-\242\274B\370\373<\306\\\006=\265!W=\261\001\331;v\234\356;y\360\376<I\331\r\275\341\002\367;$Z0\274(\322L\275\330_\022<\013\335[=8Ms<\227\313\033<}2\253;\256j\006<\214\022\257;\235B\000=\006T\327\274\251v\362<75!=\3001\302:hG\005;\341B\310<<\336T\275ne7\275\216\007\032=\022W\000=\363\274F<\272\226L\275\252\355\355\274D\212\235<\216\301\251\274\304\016\334;\267u0=O3j<d^\341<\331\217\310<\005\313\221\273%i\376<\0013C=\225Y#\275\302|\023\275\020\362E=n\377\342;*\345U=\356|\260\274\355\320\004\274\274\254(=M\n|\274\207\026\263:\360\343N\275\321.\346\274*_\033\275\210\002\026=\005\251\003\275\002\027\355\274c\310\270\274@\231I<\322\266\026\275\320@\344<K\364\334<\215\220\026<\'\'\"=\212\302\254<L\345\013==\016\343<\017xD=\031\262\2549\r_\260\274\213\331\'\274\250P#=\357\230\277\274\205\262$=7\344E=\032\211\334<\005\010S\275\'\334\006=N\350\266;\020\245O\2740\326\312<\"\017K\275\316,?=CR\021\275/O\026\273\027\360J\275\236]\007\275\245\263e<aQ\023\275\360#-=\355V\364<\3008\223\272\254\214V\275\333\311\271\274z\370\256\274\315\341\031=,\354n<l\220\271<\023\367+=~.#=\324\250\341\274[\022\034\275)\005$\275\223\3220\275\360J\237\2747q\351\2742r;=\036z<=\000M%\275\2332.\273\003+\312\273r\004\373<\364\362\3609\274\nY\274\215\331k<.\367\010\2722\342J=*3\340<\207\033\344\274. O\275\247\204\n=PY\303\274\266m4=`$\216\274|/\001;\247\362E=\250\232O=\037\335C\274\032_\326\274\343\345\364<\253\361&=\3465\005=\225d\266\274\356\260\252\273d\265P=[_\032\274\320/O\2755\275\254<\007T\227\274yo(<\262:@=\233\rQ=\367\007\001\275\224\211\t\275\251p\364<\347j/\275 \237\024\275C[\336\274/{\025\275[\317\343<}\0258=\364)J\275\2247\343\274\317\240j<\002\214\257<5\317\202<\331\363,\273\272\013\n\275&5\222\273\350\001\000=\370w\2409\272\034\265\274N*,\274_w\216\2748\201\033\275\033\277\263;\261\"\315\273\222H\207<\336e\346;p\226\"\275\322\"\010=O\336R=t0\031\274\303j\257\274tM\354<\366\237\221\274f<-\274\307\271\027\274l}\252\274\004\342d<C@\346\274<e+<\356)r<\214!N\275\220\320\342<\301\277\000<\324_\315;oq\243\274\335\275\016=\031\341\010:\031\360\271\274E\272\337<\\w\345:\242\211\037=\004o\271\274\235m\224\273\321S\264\273\017\365\304<\r\356\306<\365\021\007\274z_\347<\261\221P\275\203\200\364\274\000tV<\033$\322\274Z\372[\275pv\204<V0\274\273g\205\327<R\217\375\274\353b%;C\312\260\274\025\037.\274\014\377:<j\311\217;G\256\335<\240\r\262<!\353\t\275\274E\013\274\337\261\246:\241\300\334<XUP=\013t\234<\215a\314\274\020\344\005\275\353\332\200\274\332u\302\273!G\030\275cD\010\275\222*\227<9\303^\274\215\333-=\"\345&\275\224D>=\n\307\323<\344TQ\274\271l\207\272\006\221k<\257a\213<\306\233D\275\242D <,S\212;\277\230E=d\013\253;\330\362\372\274w`\256<\260r\263\274\2124\001=\357\274\030\275\254t\365<\357;\214<\344\376[=\300L\023\275e@\316\2747\014\037=S\366\001\274\223\207\246<\321r\275:\027\220$\275\'\0061\275!\351\224\274\340:Y\275h\256\375\274\346q-=\002\322@\275\r\036\253\274C\031\025\275\2771%\273\003\307\030\275.W\005=\023Hg<9\007\216;J\371\212<n\260B\274x\301\226<\206\362%\275\031\355-=\025<T\275\001\341A\275/\034\333<b\027\316<[\201\223\274#\370,\275[G\000=ha\027<B`p\274\203\255\014\267\rH\232<\355&\014=K\025\226<Y{G\275\027y\267\274\365q\234\274:\000(=\347\233\037=\020\237\367\274\224\354\364\273\357\0136\275\337\321\217<\372}m;\013\306H\275\327\232K=\310\t-\275\201\224\350\274Yw\307:7\267\026=<\316J\27550\t\275\344(\311\274\336xT\274\311i\265\273F\201\333<h\323b<\242\253L=O\242\233\274\177\360\312;V\314\326\274Y 2=QN/\275\353\032\001\274\216\242Z\2752\236!\274[\257\033\274\272\347 <\226w@\275\377c\t\274\226^\036\275x\240K=\010\201.\275\315<\262<\360\3073=f\315\347<\025\353X=\026\226Q\275\362\201O\275\370m\021\274\322\007\273<\276\336M\275\354\303\377\273\014\244g;TX\n=\332\345\266<\233\320B\274@]3\275\201nE=\352\017>\2759B\343\274\36175=\331\024\001\274\257i\366<E\264\207<\2732\243<\303v\"\275B\t\030=\025\363Y\275\01784\275\337kw<8\331\000\275t3N\275\205\206\256\274\243?\321\274\027\252T\275\2154,=\371\376\033\275\347FQ\275\2215\273\274\373t9\273c\023\334<\365\325\206;hQ.\275\330V,=0\rE\272\30672\274]\351G=\345\244\273\274\004\212\371<J6C=\263N\225<\230\236\370<r\367\226<x\0201=\262p\032\274\270\247O\275\261\270\r=`\371\215<\211\031C=\371\3525=9\215\336;\336\213\341<\215\304\016<\333\221\034\274j*0=C3\270\274\372FA=GI \275\225\352\271\274\034\027\\\275A\371\237\274o\236O\275\325Pt\273\003i\261\274\365\211X\275\375\023\370<kv\005=\023-\234<\352[\340<w\230\334\274\267?\247;\325\016\034<\2729~<o\033\"=\254\356\031\275C\363\351<\372N#=\370 /\274\004)\222\274i\213\366<6\366\320<L\352<\275%\331\027=\340Q\001<\225O\023\275\276\265\366\274gP\300\274\361\177`<\347%\'\275\230\026;=\301\222\024\275\341\305C\274\263\317O\275\265\263?\275\024:\252\274UAU=\332 I=\226\370\005\275L\226\245<\340\274\035\275/\250\371\274\214\245M\275\254\267S=\205\3266\275S\202\312;\323\232\342</\344\373<\277\334G=\213J.<H\036\035\275x\007\000\275\004Q\336<\310E\262<=/K\275\274\363B\275\325\347/=P\033\203\274,\376\203\274\232\310\274<f0\236<\244,M=\034X\030\275\324\013S\274\243\215\016\275\247O\247<\373Nt<\225\220\301:^\314\207;\323\266\323<\361)K\275K\032\023=\246\200\005=\240Z\363\273DCj\274\310\304,\2753w\321<\202\226I=\313\225,\275~\324\271\274\300r*\275A/\331\273\274\013/\275\2645\262\274,O1=\004\313\007;;\325S=\313p\016=\252\263\214;\300\257J\275r\224:=\370[H<\201\207\246\273\335\025\251<D\216\233;\014f\226\271\362\346I=\277\027\224<a1A\275\274Y =\236\020(\275\335\313\236\274\213\254\324\274G\351a\274\204E\000\275\230Ml\274PM\332\274V\317g\274\346X\n\275\322\226C\275\345\241g<sVA\275k\341T\274\032\330\202<*\201\227\274\255\020\370\274-\004H\275\313\326\260;\264\335\371<\005\312I=:\340*\275\032E9<\2340l<Q\013\331\274z\204\030=\3354\210\2740\342\256\274\000d\007=\003\206L<\274\245\363<l\"\223<\257\337\024=,\007m\274\334r\226\274]\317\005=\212\327\236\274\241\212\326\273\325\304*=\330\314\364\274\357\347\263\274\210\027\351\274\217,S\275 \241\"=?\240\324<A\217\t;\340y\003=\376\256\026\274\021VV\275\242\304}\274\242\"%\275\236\021\340\274r\322D<\007\212\274\273\216\220,\275\006\214\305<\215\237\024\275D\245\377<\244\321R\275>a\226</\261p\274u\0228=\246z~\274\'\350\376\274\027\006\234<\332\352E\275\363u\222\274eH\272;\203;3\274\004y<=x\302\206<9\347\255\274?|4<Ee>\275\331)\023\275\266\337\260<F\036\327\274~eY\275\313O\014<\337[8=\327>k<):\\\275D\017\313\273\330\244\031\274\213\364D=k\256M\275\321\000\205<\357\201\303\273\332\317+\275\237\016\354<\210\234W=\320\374\035\275\372*l;\351\r,<3A\023=k: \274\226DS\275\003G\002\275\326\212\027\275\261y\255\274\0356\327\273Z\253T\274\236\263\260\273\240\307\016=B\233&\275aT\237\274\305^C=\212\264\005\275/\371q<\010E\303\274\247l\343<\016|\004=V\253\237<\353\355@\275.\030@=F\256\255\274\031\327\344<\257\307<=\002\331H=&3\006<*\036\031\2759\021\356<\343R\000=\0345\005=1\303\217<\270\332\255\271\260\017\311<\277\017\033\275\337\247n<BQ\240<\2578%\275p\353\234\2742q\020=\254\007\311\274\261\004\343\273k\266<=\223\307\204<\234\322\275<\023Gn\274$.C<+\366\006\275I\320\017=\277\023\251:\206\253\334<\334@\031\275Xj\204<\211\260\"\273\234\325\205;\004#\013\2759+\037=#B8\275$\374\016=\322\221\207<>\255}<\363U[<]\245$\275UI+<\020\326\001<\234~\342\273P\350\332\274\2732D;S\323\365\274\230\261\375;\034\375\036=\231\016E=\216\340\207\273\260z\214<:\021\315\272\322\276\244; \247[\275}fC=m\361\231\274f\314=<\272\342;\273\261\311Y=\335c\010<\202\324\215<\246\357\243<\371\216I<\305G\037=\334\233^;\232&\212\274\342\304H=\275lE<.\215K=94\026\273^\214\357<$KK\273\215\341I=\264N4\275\'\314\006<\254^\233<\035\366\212\274\3179\371<\247\000\037=\256\027\253\274_\207%=h\213\r=\373\331\250\272\257J\003\275\242\206p<\"\313\006\275\347\213\022\273\334\004\020\275Fq*=\347\312\207<\344\246\346<\267\244\352\274\3124E=\352\035F=5\2266=\334\305\007=\305\232\332\274\010\337\027<\317\223\362\274\371\321\225<I\314\370\273i\266=\272]\262U\275\326\361\241\274\267\032\371\274\253\313\036=\267i>\275\245\026!\274\206\362o<\311\253\336\273\304FB=\302\037\351<\3764X\274\243\356\t\274\036\375)<\375h\341\274\322?h\274\rY\372<\347\037\024\275$J\023=\337}#\275\223q\244\274U\002\034\275\023\n\370\274\360N\035<)/\030=^\265O\273\032\243\267<\211;\372\272\224T\257;\277\021\375\272\315oH=/\346\220\274\314o\"<;\347\014\275\312\253\001<h\244?=C\354[<\0213\021=z\303\321\273\034>\354;8+\325;\304\027?=\321\225\227\273\226\311\334\274\204W\021\274\351tH\275\214\026D\274_\240P\275\271\240\000=\307\"\004\2747\033r<\001\3555\275\377\263\017=g\364\200\274\0024\003\274\345\267\003\275\214\330G\275/N\347<\327\203\030\275\324\230\347\274\273\203\220\274\"\351w:\212LZ=<Ev\272\310\345\211<v\210\214;\226\366\331\274#\245\260\273\r\361\360;\241^\006\275\220<W<\323{G=\207\026I=\222\213.=uK\236\274\252\245F\2759*\256\274\352\276&\275\217\340}\274\233\340\257<\223h8=\020t\001\275\322S\251\274\207@\202<\220\375,=pQ+=I\274R<\347{@\275\r\360S\273\346g/\274}\245\017=\031+\276\2746\017*\275\206\262!\275M\226F\275g\002\264;G\"\321\273\255\\\245\274\'M\361\2748R,\275\241\263&\275e+\024=H\274\021\275\350\017\242\2747I$=\217;Y\275)j\335\273\367j\230\274\177\372\377<\257c\364<\347=\r\275\355\376X<\314p\260<\254\276\245\274\256>\314\274_eW=\356\275\010\275\314l\313<\273<\304<\024\024\274\273\235I6<\007\215\363<\210\032\016=/2\032=v6\032=\230\216X:\037\321Y\275\030)\361\2740\001?\275J\211\277\274A\315\364;gv2\2754x\212<[T\204\272\023\021\006\275\031\316I=n\324\233\274g\364\250<\323l\230<\210c\271<\264/\016\275\020]8=\177\232\356\273}<\362;\010\370,\274\337\\Y<\342\343\177<\316\267I\275\217J)<\342\t\250<\243\304A<\005\371\324\274\356\301\377\274J\301\227\272p\3531=_\037$\275t\306\225<\200:A=\204\226O<h\020\326<\347\026\026\275\205}\030;5E8\275\305\201\033=\372\216\307<\374B\371\274\327\313x:\307\331 =\301\000\006:\301\032L\275\203H\000\275KG4\275:\274\254\274\264\361)\275\024C\\\275\"\032\307;o\341\031\274\246\010L=_{P\275\267C\302\274\325\367Q=\210Q\374<\032\215\204<z\005\342\274\376\264\253;W\005\334<O\203O\275=tE\275\013B>=f\335T=\316\331\002=)\356\350<\374\362J\275z\010\341\274\274\267\016=vQ\304\273\305\001\257\274\346\252\017<\363\3749\274\001\326c<\017\320D< \257\"=\337\350\305\273b\303\371\274\265\243\204\274{\264\307<2PA=ea\000=1:\037\275\007s\250<\t*\005=\n\313\310<\235\"&=C]5=5\033,\275\341\240\033=\375X\244<S\301)=9o\342<\3747\321<\316\r-\274q>\021=\252R*<\333\327O=9\250y<\273^\001\275\266\253E=\347LY\275\375u\013<\021*==\314\214\n\274\357E\031\275o[\025=M\313Y\275\222\303\211\273Z\021,\274\rtE=\'\254F<\260\204\226\274\374d\272<\206Y\351\273\321\360\326\273\201O\315\274\321n\342;\n`\276\274!`A=\366y\245<Y\325?\275\2627H\275Wy5<\225}>\275W\014B\275p\271\032\275\016\030\327<c&2\275.9N=\022\313b<\270\301\025\275\006m\356\273\023\022\347<\003\327%\275\251k\372<\227*2<\004A\031=\004\337\323\274u\361\223\273\310\232\035\275\017\353\251<W\3135=\353m\233<\261=\346\274\246Z\363\274\234\304\201<\354\216\003<\245\221 \275N\331\356<{\"S\274\210\316\013=k\363\\<%^#=\310\331\017=\004\004\355<Y`^\274\245\226\347\274!gI=\221\341\313<\335\013J<\211\234\024\275o\210\346\273/5V=cS3\275\3611P\274M\226\013=Z-\r\275\261\034(\275\036#!<\013t3=J5\001=|\365\246\274)>3=2\014I\275\202\306\332;L\275?\275\003C\367<{\3378=\326l\314<QtD\274t\022\225\274\337z~;D-\024\275*h\250\273\337\374\324<]<\332;\347\247\027=\272FY=\342\"9\275~\324\216<\334E5\275\354o1\2754\241\273\274k\317Y\2749h\275<O\310N=\352\027\347\274\035\004k\274\323\325\267<=j\271:\033\001\244\274\234$O\275\376\3758=\3567\001=\376\246\326<\3525\002\275\376\264\004=\372\371\243\274\206\2531\275u\276\023=X\351\306\274-\270\246<oTS=<L\027\275l@\266;\021\247\034=\013S\201\274\256\3014=Q\224\361\273o2\345\273\375#X\274\033(\033\275\227j\002\275\327\217\016\275\210\320\327\274\214\3124\275\261ge\274\212\r4=\366\2709\275M\235i\273\310\325J\275\306\005\246;]\263N=\222\023\'=\357\312\202<\002,\313\274\t\r\347;\346\021\301\273\316\270\023=\000\343V\274,\225\345\272M\242\201\273\252\332\034:\177\003\256<l\243\234\274m\242\273\273\274\231\007\275\032\221><\212\303R=\031\277\306<)\242M\275\013\031\344<P\253\';l\315M=\224\317M\275[\376E=\217\325[\275H\331\021\275F\002\270<>\234\267\274\362\236\3208\307\362T<\373\244\031=\016\025!=\321|%<\365\343\002=*\276\225<\225F =i\325\355<\003\240\377\273\n\246\032\275\035\260\310:E\240\252\274\366\023\330;E(w\274R\222 =\317\324\034<g-|\273Z\355&\275\321{;=\273\020Y\275\326\215\007\275\250\017\013\275\352\225\"=J\206%<\362 \016\275\207\2031\275\253\247;\275j\n*=\030\346\010=\377\312\020\274NY\n=_8N\275\273\006\n<\352\260\212;\010\224\006\275\366\271H=\335{\000=\000mR\275\213\177\336;j\3306=\020\245\024\275y}?\275\221X\234<\340\236:\274[gm<\243\007\r=R\323@\275#\220<;D\003\247\274\013>$=P(\363\274:\207\016\275J2\330;Wh\336\274\302\350F=\265\334;<\352\\T=J\3573=#\271\252<z\223\347<}cO\275\t\000D\275\360\311\034<}S\375<\2623\201:r\234\314<k/F\274\360\245#=\207\343Q\275H\271\t=-\320!\275^\031\375<\315\253[\274#\345\321<F\374\212\274\231\341$=\233S\030\274\254\234\007\274^H\302<\314\360(=\331\316\010=\3503~<\351\262\241;\257\224>\275N20=[/\231<\263z\210\273\223n\223\2742\361/\275R5\031\275\232\376<=\016{\246\2749WM\272N\317\036\275\323\316\270\273xB\237<\350\200\017=\273P:\275n\351a<\024\217@=J\221\305:^R\227\274\307l\026=P[D\275]\322 \274\027l\225:&\352\203\274+v\367<\201\322S=\233\"\351\274_\371\254\274\035\006\363<\216\004\024\275x\321F\275\233\0363=\341\337\027\275\265\036\352<\367:\026;4\026m\274D\265\027\274_0/\275\007\2107\273@\2311=Q\331\272\274\301\277.<kSV\275pM.\275z,-=\333\270#\275\271\201!=\256\266*<?\242(=\336\206*\274\363\001U<$\206\202<\005SS\274Z\207\212;\277\001\241;Sw\334<@\365H\273\357\316\t\275\215g\276<<f\014<,b\212\274\017\236 =\257\255\006=\244\344\235<1\316\236<\226I(=\364\304\036=>\274U;\213\016\266\273\222\365\372\273&]==)g\331\273s\211\023=]\344\035=&\366\014<\350\304b<f\362\227\274Ug\220\274\000\311\377\274\264[\201\2749\026\204<\323\2270=\330\361\r<G\367_<\356\242\373<\031\356D=\035\356W=\236\267X\275\210\306Z\275\307\244_\272\315g\371<\032\"\026=Z\215\253<\365\277\025=\226K\033\275\307\342U\275\274L\367<\372\240\'=\031\273\321<X\207\036\275\367l\017\272\276\014n\273\332U\003\275\013\267\360\273\330\251+\275\214\370+\275p\254\313<\352\023\"<\233Q\270<\222\357(\275\036l2=LB\332;\346_\n<\004\330n\274i{\r=\n\257\312\272\3641\226<\000\237\232\272I\235\270:\177\233\377\273\322\317R=kY\004\274ox\201\273\333nw\274,\356;<p\333\214;se\222<I\267\'\275\036y&=\205\013C=x\352\331<\373\207\204;:\307\376\273\023\rf\274J\200)=\345L5\274b\261\205\273c\355\027;\220\222\'\275\333|\020\274\214\033\242\274|W7=1\350\324;+\226b\274(\177A\275@\033\031=\206a\264<p\341\260\272m\"\032=P\2436=>\221\351\274\370|\013=N\365\313;\350t\367<x\'\332<\307\325U=\275e\"=\345\007\201\273\345\205%;t\0279=4b/\275\t5\213\273\351Wh;\346\301\274\274\257iL=:\266\237;\324/\233\272bJ\"\275\005\274\336\274o\240N=P,Y\275\270\261C=61\207\271\216e\256\273\254\366G<f]\026=FmY\275v\026\001\275\375\240Z=\204\267\016\275\022\347\313;-\257\013\275Q\311\006<\212\351f\274K\207N=\277\236\305\273s\005g;Z\301,=]z\356;\001\377Z<\214L&=\252K\316\274\331\364_\274[\263Z\275\024n\363\274\225\377\340\273\205\364\2659\257b\024=Y\334k9\273\306\013=\340\016\r=\244\330\004\274\277\024\237\274\351\333,\275o\366\277\274\351\035W\275f\n\334<\263\220\027=\235\317\341\274\2378S=s\021T=\256\357\r\274\315\334\256;Wr\220<\304D\001<\306N\273\273\245\272W=\336`\021\273\310\231\253<\336\n\025<&\034\031\275\362?\347<*\231p\273\005\303*\275\032\376\023\2758G2=\031U\027=\255\212\247\274\221\225\355:\332aD=\263\317[<Z\227\362\274\004\3272=S\361\226<D\0071\275\374\201\266<\217$\376\274\307C\355\274\200\304\360;\334\377\374;\245\271\323<&]\205\274\205\342\025=\273\217\027\275m\352\003\275\330\250\024=\274\362\226<\240,\351\2749\300U=1S\026=U\346#\275Z\217\202<h\304\014\275\225?\377\274$\366\034<\276\303\033\274p}?\275\223\357\273\272\303h$\275\207\340P\275x)\032\275\234o)\2759\027\005;a]6\2757hP\274\034\014\t\275\361P\336\273i\035\250\274EY;\274\346\262\333\273\325\334.\275\340\214\317\273\303_\215<\325\267J\275\254\026\375<l\025\006\275_\265\340:\354\355\341\274\277&\241\273\316\371\215\273J\327t<\305\350\316<\306#\332\274\243\342\035<\354\257J=Bxp<\204\375\264<P\373#\275h\362H=5\033C=\210\267I\275{9\n=\320\224A=\335\274?=\013\007\331;\3201\034\273\233\006\202\274\303\2425\275\304v\312;\260\224M\275@ \277\274e\300\365\274R\310\247;\375\204y\274mCK<\tu0=\275\216\027;\r\224$\274zC\375\274\217\345 \275\016,/=z\0076\2752D[=c\355\013:\253\260\257:8{\367<\227\221\212\274\324\023,=A\237T\275\373\232\245\274L\337N=\217\0372\274sR\034=n\2603=\224 \266\273\364\360\305<\232\210\205;\\\3059\274qi\334\274\255Z\322\274|L*=H\220*=\212p\027\275d\027S\274\355m\343<_1\324\273<\0037=\227\364\302\274\374I\240\274\000\254K\275\242\370\247;9\262\244<\245\337}\272\241\347[=\325\357\033=YtB<\243\336\005\2752I\215<\007\220G=R\235\304\273\270\006\332\274\337>J=\264\246C\275\"3\240<\206)_\274\307\3515\275\231\275C\275\211\237\034=\022.x\274\004\363+\275\243\352\220\273a\373T\275\343w_\273?\262B\275\036\020\r\275N\355D\275\030_K<N\350\301<q\017T=\rHL<\202\230C\275o\245*<\243\006z<\266\'t;\323\264C\274S3\006\2751\207\325\274dAV=9\312\352<{\031=\275v\237X\275\266#\212\274N\353\001\274\276\265\266<u\254\246<\245yL=\276\216W=bR*\275\214z\211\274\374\233\021=\276\220V\275\377\270\260<j.4=~\0321\274V\315\320\274\356\221N\275O\002W=(\314\200\274\314\352\214;\366!\342\272\267\373i<>\036\006\275\033\332N=\227\311\245\274W\370W\275\271\315\343<\245@\347\274N\220\022\275\033\277Y=\0376\262<FA\002\273\253k\306\274~\030\226<jhD<\206\212 =2,V\275ND\275\274m\375\356\274\277\272\036\275\212q\270\2745\177\275\273\343\257\253<\345\036\361;.a5\274x\314\031\275\031\"\371<\337\220\355< \322J\275\246]\035\274\263\260\013\275\366\311L\275R\322\253<\202+H\275r\023\353;\216\364\251<\006\306\221<\207H\347\274\315\016\276;\372\365\023;<k\315\270\032\255\335\273_\201\000=S\334\003\275\266\006\277\274\367:\202\273\303\016\316\273\305p\261<\350p\023=i\327\024\275)\306\262\273\023\347\007\274c \"\273\030x2\275+\206\342<\025\270#<\367p\n<\306\nQ=dPR=\355\217\037=/\354\226<r>\230\274\331i\345;\213:B=\234\330\303\274\3739\016=V\313\033=\037\351\235\274\231\016\325\274\310\321\223\274n\202e<\331\240{\273\350\227\330<\020e5\274\\\201\022\275\273\260L\273\221\320\352<\346eG\275\327/\004\275\360\247\004\274\202d\037=d[\016\275\352\340:\274\377\300\000<\010\262\375\273\002lE\275\010\1779=\246>@=\252\360\001=\333\024\037=\001\247\365\273\206\213\337;\273\3753=\337R\275<\206\255\t\275\224 :\275N\247D=\334hr\273\330\266-=\\\322\005\275\344\304\'\275\211\364[\275\312\261$<\225cR=\264\365\365<\21542=@\3178\274J\315\227<\2604;\275q\360\354<:$&\275\010\253L\275,\340O\275\324\023\250\274Q\036j\274)|>\275\004\320,\275\310\346\261\274\250\030-\275\325\201\354<F\017-\275\r\2723<\356\260E=\342&I=\037\010\234<ei\332<\210\203\025\275\232\025\000\274d\022\037\274?\030p\2740\'J\275\245u\251\274(\225\267\274\027\215*\275{\201\301\274\336\344\300;\252:4\275\203\021O=\214O#=:\020\256\273\342\230\332\274sbR=@\267\211\273V\221\367<\033\307j;\250\355)\275\344W(\275\320\263U\275\223\2642<\276>O=go\246\274\301**=\315\314\321<\200\023P=\251\0316\274\337\0363\275(\226\305\273*V\'\275\343\330>\275QN\257<\274\325\336<\023\252\006=\313\342\345\274\242\353\232\273\n\310\025\275\204\275\261\274\213\371\217\274M\205P;\344\266\010\275x\300\002\275\366b\357\272\356\200\372\274\244X(\274\255-}<\325\300#\275\\\301~<\376\r\033=\026\375\322<\261\245\013=\356\315[\275\005\3117\275\201\226&=\255\353\275<\350I\304\273\372+\246<\265,4\275J;\035\275_@T\275\212\215C=v\214\341<\ry\220<:\2748=y\322H=\212*\222<4\330S\275)\031 \275\247\266D=\235\226\241\273\024+-<G7f;\377\243T\274\360\304!=\237\302\274\274;P\250\273?\026\262\274MGy\272\315\360\301;a\355f:\312\002%=0\200\227<\326A\300\272\255\264\317\274\211u \275:y\217<\220VF\275i\316\036<\024QN=\001\216\276\273\355\376@=\232_\023\274\033\000\021<\311+}<\245\237\025=\005t\376<\333\335N<\321\013Z\275\345\025\241<\237I\352\273\260WP<\034\206s<\225\224\025=\263n\225\274~\2028=\266\272\"=\316iB=\333E\353;\267N*<\023\270\027\274\361\353\270;\212&\\<\361\372\221\274\313\255\243<h\001$=\334\r\214<\010\264\263\274$\311\205\274\207\356\332\274w\360e\272\306\265\"\275\367zO\275+\3067\275\355r\031<\013c\252;\370,\362\274\360\0376<\375\311/=\037\000%=}\335\343\272o\206\013\275v\224\223<<\006^\274\317O\266<\373\341\003<\251L\251:\202\316\323<\301\n\276\274\256xC=\264:\224<\033\332\342<\330\231\014<\205\361\036\275y\243q\274\205\265\252<\336\274\305:\342;\354<\261\271)<\004\207\356<\266\213(=\023d\030\275\300\365\263\2740\245\201<\256\226<<e\364\216\274\200pQ\275\226\360\013\275\377\312\343</3\363<0W\324<\014z\n<D\365\346\274\316F\r\275A\241\031\275\261\255\305<\360\037p<\034aC\274\250I\224<Y\3307=\300n\021\275\274]Y=D|\004\275\033/\020\275\314\223T\274.\372\272<\313\346\022=\214V\031\275>\241\025\275*A\346<\240\350\006<\244R\374<\203\315\311\274]\363\356<\314\336\375< \000G\2753yo<\240\345\362<\3315C\275r\303\340<\254\2154\275\303\035\223\274s\341\020=\307\006\333\274\030\n\201<\202\0205=\201)\020<\371\361\030=qo\355<\257}\004\275\301JG\275\355\013\010\275\314\370\364\274\203a*\275\005\352\002\275\237d\315\274\211\212;\275\'\204F=y]\027=G1G=A\355\333;w\353\326\273\216\347\240<\350\017B\274\265u?<l2\243\274\036\331>\275\264\016\346<\025\326\342<{c\377<65\225<\'\240\265;\332\025\314<\300\244*\275\315r\321<\2321Q\275\246/\320<\266\022w\274\275)\016\275\000\n\205\274L\333\022\275\365\227n<\273\267;\275\250>==4\246\254\274\251\335\207<z\2130\270 D.\273\200\206\n;\346<\304\274\212o\004<\021\375O\275\355\341\213\274\370bL=\250{\'<\210\370]<\216~\346<\232\350W=\243\272\245<\311O\'=\224\370\006=\357\273\246;l\337+\275\224+\031<)\016&\275\036k/\275a\306\032=\036\217C\273.t\013\2754\006\036\275[G\367<\350\377:\275`P\221<\217[N=\r\377G\275@;M\275\005\n \274\317\336\265<\030$\277\274E\001\037\274\2444V=\241@\267:7uA;\235\252D\275\333u7=tV \275\240\335T=2H\353\274\256\340\351\274\3552\335\274\r\202N=Xd3<\327\236\353<\275\256\022=\316mJ=\"\3102=Hy\255<\3513\256<\347C\371\274\325^S<8\275$<X\366.\273\035_\270\273\356b\255\272\343%\334\274n(\321<\202\251/=\345\016\370;8}\007\275\346\251%\273\224kf\274\367\274\030=\201l\317\274\0047\362\273\t\300/\275ZDF\274(e\344;\r\232\025\273\261{\317\274\341\305\016=\030\3264\275\366\026\266\274\021*\205;U\311P\274\333`\337\274~K\232\274\031g\030\275\261wK\275\265i\032\275\230\365I;`\310D<<\034\000=Sf\242<\317\003R\2745\033o\273A\267\'=\263/>\275>\217\356\274E\3745\275q\022\222\272\256\213\375<\252\202\"\2756@\337<\367\306\273<mF\016=\330\234!<\315\3243<i\227\215<W\256\"\275\362\203\363;L\002@\271Z=\013\275\006\2305\275\354\252g<|P\314\274\007\255\177\274\000O{<m\023\307<\230\263D;\010_H=q$\245;\021H\334\273\33188=F\220\342\274\374\334)=\245\3346<\364\314\372\274;J \275O\205V=5\264\333\274\\4\350\274\263/\360<\337@\231<\275$\302\273A\311.;\031u\307\274\254\002\001=\314\213\023=\335s\207<( \317\274\017l\364<r\326\222\274f\352\026\275F\231\026\275\362/\350<`\336\030\275-\010\274<4\330\2719\301\226\201\274?\260\355\274C\010\016=\3017;<\347R\025=\314\370\030;L\336\257\273\030\177\t\275\210\037\344\273\363\331\022=J\315\315<AS\372<L)\310\272/T8<w\326 \275Q\272\246;1\236\275\274\266\"\260<\022\233\023\275\2026B=\036\237\037\274\353\316W<\370;\351\274\316P\376\274\001e2=T\360I\275c\300\356\274n\271C\275\301:@\275\030\\\002\275\306\275\361\274\275\246j<\035\266\302<P\0039<\235}H\275c\347\212<|\275\332\274hBG=s\364w\274qo\030=B\351U=\034![<\325\370*\274\342\016\245\274G\374C=(\312\026\275\214x\000=\276\t\305\274N\177X<\213\216:=\252\214+={Q7=\023\346\021=\330\244U=\337\254\"<sAC=\371\322%=MS@<\024\375Q=`zK;qR\212\274\311|)=\311\314\365\2730\013\204\274\356\034\003=\327z\031<e\3621=#\307P\275\240\026&\275\224[\351<>\031\251\274\262\342\314<\2051\001=K\nV=\264|\003=\375\366\234<\246\254\007=\347\225@\275E\311Z\275\034EU\274\260m\275<z\261\332\274\233$!=\3021S\2740]K\272e\r\207\271\025#\355<\371\265\005\2751(\342\274xf\234\274\362\033M\275\341\327C=#\245.\275\021\204<=\214u\271<\230\234v\274\013\370\235<|\234\324;4\242;<\n\255\377<\334\260\024=\262\265-\275\273\232\270\2747\247\r\275\257\035\272\274\347\0331\2739\026[\275\267s\004\275\204\267\016=$\023\273\274\330\216(=\2114D\275\004N\337\274\016/\016=U\354\232<\206\251\027\275\223\032\241\274\212kX=\035\337\377\274\350/\013=\027\326\'=\203\2377=\304.\311<*\030+\275\322\362\025\275\r\2711\275\035jK=E\341<=Z\305N\275\016H4\275g\267=:c\201M\275\303_\035<\306\365\234\273#\326\021=\206\2308\274\350\310;=\217\360T\275_\223\000\273`Q\000=\014\2229=d\264\226\272]\317\021=\204=\275<X2-<?\354B\275k\352V\275\322\333\340\274\227g\326\274\323FK\275\217\024\343<\233\323\266\274zQ\220\274\340}\036=\313C0=2\251\274\274\353\237E<\251j\341<\345a\032\275\270\363P\275\327h\016<\343OD=\027\3359\274\313\270\'\275\265mQ\275&\205Z\275{&\335<\240\231M=\230\374\274;\311\353\322\274\333\3651<\177\231\026;\340\346S\274YH\321<\304x\250\274~c!=N\024\331<T4\r\275\222\205,=\217\267\000\275\324\253\254\273\037q\035\275[`U\275\254\2462=Q\2451=4\020\321\274\236}\253\274d\'Y=(E\t=A\2206\274\\\352\027=\027\214\037=K/\221<\222\221\264<42\003\275oVT=\034\301*\274\177i\335\274\325\230\307\273\004\232M\275\304\325\023\274\332\360\006=b\343P=q\227Z=\363!\373\274\003\316\024\275\031A\017\275\242\220N\274F\316I\275R\017\005\275\327j\207<\010\325\026=/NX=\323B\005\275\375OY=\266I`<\177l\035=\341\365\231<\234x\016<\362\350\321<3\216Y\272\332\354\251<\347\035\203<p\342<\275?\235!=\315\276\024\275\235E\341\274\033\323\025\275\017d\'=z\324\302<\255u/\274\017\245\373\274\tQ\237;\007)\321\274\351\210-=\325Y\224\273\023:><\270\317#\275\202\243G<\320\264=\275i\325\022\275\274+\253\274n\330\276\274!\367\210\273\215\221\007=\236\246\376;P\026:;\302J\027\275\334\004\327\274\226\314`\274\272\272\321</6\013\275xm\340<\262\340$\274\212\t\341\272(zR\272\013\347\004=\201d\322<\034\031b\274\353U\272;\t[l<$_\341\274x\343\004=u=S<\274\267G=\321[^<%\001\226<~\220\361<\344C\357\273\370bV\275\374?U\275:\274\261<\327\347!\275\367D\031\275\271/\030=\315\240e\273\202\261[=1\337\202;\245\014\t\275\317\345V\275\327n\275<3\330]\274A$\310\272z2\013\275\277\267\312\274\037RL=\023\367v<8\024\221\272\017gC\275\002$\000\275\027;[=Q\357\212\274\323\360\206\272\361\373\'\275\027\353\322\274h\276\035\274O\376\202\274\250!\314\2742\233\325\274`\037\300;\312\372\026=?\270\262<W\020)\275bx\'=t\202\021\274)\376\034\275\033R\023:m\3577=U\307Z\275\330\362,=\377\243Y=\354(^\274\330]-=\013\225\203\274g9\320\274a[\334\274m\004X\275\337\334P=\305\266L=\331\2102\275\243`\215\273/\317S\274Y\205I\274RaR=\271\031\037=\321\356\317\274\265\311(\275TRx\2746+\340\274V\261K\274OL&=\r`\034\275\214\213\002\275\004\300<\275\251=\217\273M\024\210\273\207\367\224;\2465Z\275\257g>\275\265\265\244\274i\355\216\272U\343\014\275\324x\021\275\245<\350\274\236\010\'\274\025\2140\275a\0161\275\005\327T\275\315\261/\275\312\372\215\274p\234\033\274\346\2756\274fw\026\27352\246\274t\371\231\274K\262\\<x\235\222<\322\242;=\252AT\275e\351\017<\234~\025\275K\366\202<T\304\362<\354\022l\274\376\305\240<v\346\204\2748l\200<\243n\264\274\031HP=\034\223P\274\374Rf<r\3352\275/\246\320\274\016\355/\275\367o\240\273\314\2372\275R\261\221;\375\007\016<m\372\313\272\226\213\241\273\024A\366\273\335=\222;\220\302\316;\204R\007\275L\351l<\257\220\261<\277\tH=\374s\321<\200i\002\275\263\030\316<\326\350!=\013\344;=$\224\234\274s&\362<^8\272\273\000#\265\274%2)=\021./=\356l\227\273\263\321\204\274\200\312A\274>\034D=\344\230\t= \246\377<\005\235\"\275\372\0351\275oj\217\273ia\005=\327\253\031\2751\226\325<\314\260\256\273\250\317\n<\357e\001\2753\224E<\243\300h;|\252~\272\221nC=\355\017\242\274\027M\353;N.\006\275\315\200\231<\265>\222\273\357\\Q=\307@J\275\203\327B=A\223\231<\215\306\026=\276\245\374\274\200\215/\275\267\025\367< )\333\274\366@Z=p\350\014\275\336&\004<\326}N\275\245\361S=\326\376\013\275\265\256\307<\301P\314\274Jo)\274\3572\026=F&L\275\336\035\267\274\337=\225\274\0028\250\2748\2550<s\316\202\274\254\256\333\274\3769K<\034\223\225\274\351&\344<\255\374\023\275K\360\032\275\366\2277\275\033\310\020=\356?#=>r\002=\243\027\302\274\324\331\201\274\276\3306=\"\335\010=\372]\021=J\337\300;\330\310\010<\343<(\275\340PS==\244\230\274I\023\034=\322%\310<\\\232\366\274\345I\257<\300C\001\274\322\332\230<\376!\t\2753\302R\274\201\035\004=&\n\214\274V\tW\275\266N\247\273\326N,=e\265\233\274\200\276B\275\330\323\326<`\327\206<\314\372\215\274$\366$\274\tD\371\274\373<\301\273\220K\253<\231\306\n=\016\254\333<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2070
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2070
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
