node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2020
          }
        }
        tensor_content: ":\003\265<\245\376\337<\377\323\000\275\"\263\002=\004<\317\274>\225\262<\231?$=\240\352\025\275\327\2537\275<fX=\234P\263\273\017\366\014\274F\037]=\310\213A=~S\244\274pR]<\302\2715=q\245\262;pUD\275\227\374\316\273\177w&\275\332S\324<%2b\274\230\375\003=6\214)<\000yB=\337\230A\275\\\203\003=j:\026<\255\014\332<-\3029\274\263\361V\273z\352#=_\302\254\274\323\254\237\274,\261!<\035\344\273<\272\tE=\376\257\334\274\020\374:=J\r\272\272\257\n\310<n2\273;$\234\371<a^\243<\336p\274<\021\353\260<\367#\033\273\006@.\273(\201\\\274\311h\3058ipH\275 D,=${\350;k\372\203<HYI=\354\2756=\221-H\275\n& =I\204\273\274\031\351\300\274\240\024\337<6p\313<\314\010\024=\207\260\236<\323\347\254<\220|X\275\231\021\002\275_M(=\\\272\013\275%H3=\204\016E\273`\206m\273\035\210e<\355\n\342;|Y\r\275\260\367\251<\304n[\274\2061\017\2755\234\003<\3659;\275\'\007 =\r\252H\275\230\2559=T\\\022\275/\355\034=\002\375\031=zw\243<L\243S\275\006\203\243\273\265\325\'<\\-~;\271\0050\275\335\374d<\246y0=-:,\275\370\266\363\274\322W\340\274\301k\002=Y\355]<\212\254W\275L\267\030=\333\251;<\240\333\271<\254\377\300<\2604^\275J%A<X\235\201<\243\333\267\274IF\342\274\271\356.=\270^\370\274[\353\243<1 [\274\230I\330\273\220\3118:\225\232\030\275\253\366<=\'\265\327\274\365$\031=\225\230\250<\031W\253:\311B\235<g\205\315\274\251\204==Y8*=Hj\215<<}\227\274\240\345\025\275\346*C=\275\017\330\274B\215\234<\206\325\001\273\034q\223<r\n7=G\262\352\274\2337\210\273\222\273\344\274I\273\257;\323\020\215<M4l;\242\322<\275d\224\007=\245\010!=\231\267\353\274]\312\027=F\017y<9@x<\002\213\210<\225\341B=K4\013<\224\212\027\275\246G\246<\256\314\215\274\035\300\344\273H\031\022=\016\016E=\026\367\010=\007\316\016\275R\267\024=j\234\251\274\203\237\032<\2563\026\275f\365\361<\360\337\364\274\265\300\030\275\240E\266\274\331y\001\274\344&v\274\265/:=\322\271\236<\304+\037\274\341\016\022=F_\332<O\004\315<\310\235\027=w\020H\273x\307R\2753\242\224\274E\340\031\275r\016\322\274\346\223M\275\224\\C\275T\364#\274\351S\264\274\335fI\275\025\315(=F\\q\274Ip\315\273\r\017\'<\333QI\275\026\r\'<\310\203\366<\021vZ=G\306\327<\320\360\253<O\355|;\251p.<h\033\004\275L\372.\275\252\364?=\215\177\244\2741\241\037\275:\265\244<)i\217\272[\367\036<\204\351\244\272\\\264\273;\345\231\312\274a\216\236\274M7\204<\233\320\303\274F\016@\275\313\322C<\256\326\316\273\366,\277<\343\024\252<]M*\275\t\273S\275\213\217\'\275\212O\360\274\276S\000\275\005\325@<m\241>\274\326\364\355\274=\236V\275X\237\342<(\0303\275\262]5=\313\243V=|O\004\275Q\367\321<\3400\222\274\330G@\274)\320!\275\030\231\366\274\333\013G=\007\373\373\274q\311\341\274\234J\236\274ir\034\273\366\036\253;M\271/\275c\340\016=\343\375w\274\361A\355<k[D<\021\343\276\274y\001\004=N\177\377\271\336<@\274\220\"\314<f\201\233\273\360\217\020=\2725P=\240Q\264<<\346\344\274xvM\275\275\330\t=\222\327\340<Xd\016=\2368\277<\336\346\300\273\260-\\\275W\"G=\t\363\246<\270q\024\274=\374\372\274\211\232\026\274\316\250\313;\362o\247\274\325\330M\275y\025\303;Qx\266;u\204\302<\020\016\334\274\027\375%\275\311\030N\275\270\241\013\275pE&=\235~\030=e\327?\275\203\177?\275m\310\207<;)\214<0IN=8\316N\275{\034[\275\t>A=W\315\'\272\276\255U\275\310|\214<\372\361\332<\014L@=(\0017=!t\244\274\234\317\357<\253+ \275 \235\004\275h\307\"\2740V=\274\\\237<=-\013\030\275B\337j<\306C%\275\r%#\273YP\223<x\035\276;\277;\350<\020\255:<P}s\273\231\325F\274\222\006\225\273\035-S\274\t\355U\275\023>E\275\373`\321<\202\350\010\275\236\230\027=M\315@=\340o?\275\311\370\242\274T\315K\275\314\034\013<Y\002\205;kA\333\274\372\035\027\275O\222\004\274\241s.=E\371J\275e\252j\274\344(\221<;\326\023=\305`\022=\347hT=\021\300\251\272\213\024\213\274\256F}<C]\333\272u\337\010=\022\004\\\275\347\313i<\212\304\343<\215\211\032=\210\271G\274\t\336A=\351`O=\030o\361<s\311z\274\214\251c\274B\301e<\315\372u;\337G\242;\216d\002=X\354,\275\311\2560\275\305u\341;\220\376Q\275+-0=\377h\263<_\340\272\274z\371K=\005\221\373\273bO\207;\300\303\032\2752\374\352\274f\250Z=A8\004\274\300\366F\275\272!e\272M,\224\273\353\010\341;\00674=\257\241%\272j\202\232<UN\304<\343\233\177\273\327O\244\273\320\203W\2753\204\t\275u\375\306<!\370$=\375\036\314\274\200\356\320\274\355>A\275r\371\362\274/`\005\275\222\255\267<\244\007\275<\314,\334\272\366\343\370<\034\355\233<i\021>\273\350\036\361<#\004\274\273l6\217<HF\317\273A\323@=z\2074\275\352\2347\274\306\200\310\271\006\307\030\274F\200\214\274\263\2179\273|SF;\000s\240\274`\205\245<\036\\\300\274\307#\006<;\322\031\275\327\374;\275\347\304\036<$\021\331<\004X\034\275\344\326\244\274a\316N<\311\217\n\275\231\360\305\272N\340\207<\325I\362\274\005\017\200</\367\014\274\241H\203:\010}\334\274\014\364\200;\326\204\033<\n\305-\275mW\347<+\324E\275\322\276\253\274x\2358\275\357\2722\275\251\210\\<\207\000;\2751{T=\007\003p\274\2441\216<4\337\377<Be1\275\347r\275<\025\311#<\000\227\332\274\237\366\210:\000\201\002\275\260u\023\274O\001H=\334Y\002<\211\2011\275e\n\357:\'\254\016=\033\305\303\2731n\327<\rT]=\324\316\204\274\271f(<\355\000H=\254\222\'=\240HE\275\377\261n<\3660 =\272\343\364<RSL=\267\272\371\274|\351\372<6S>\275\321\342\003<\320\337\016=\241E^\274\270O\357\274R\260\204\274\364\347\234\274\317y0\275\300\031\027<\305\364\231:\357s\022==\212\027=K\025U\275Nf\025=&5\220<\343I\250<\261\010\033=\264\300\245;d\334\302\274\247\275\\\274Z]\033\273\014\310T\275\307~Y\275\327\377\256:\347\3107=U\271\244\273\002=Z\275}\357\';\020\226\257\274Z<\036\275\350D\273<+\337\327<z\201\001<\r\304\300<\374\014(\275\365\256\021=2\343v\274\374-N=\327HB\2755\376\014=\031\323X\275>\210\273\274\270\213\356<\203\021\337;\304\347\207\274\025\222\345\274m\027\023\275\370=\350\272Vo\316;\303\371\322<\033\177Q=M\016\243\274Q\342\325<*\235\365<+ \213;[\315\202<\252k\005=\344,\312\274\t71\274c\273_9\023\250\321;\304#N\275\335\203==\210\016\035<\255\213\335<\300\027\006=\257\356K=\303\010\260\273\257\333\331\274r\004\\=G\231\255\274\244\177\003\270\311&R\275w\366\006\274\027\027M=\365\022B=\020\254\216<\306\272T\274w\206\000\275=Q;9\025\027t;\010&\374\274\227\340&\275\342\211#=H\016\256\274\003\017p<\306G[=\216Xi\274\"a\001\273\301\027\267;\230\251\313<\325\333\034\275\002@\227</\254\373\273\346\243B=vR\'=\216\260\323\274[\230\254\274Q\316\243<\265\341r<i\327;=\243#\273<\331\262:\274\273\304\2509\233\217\376<\270\340S=L\2175\275X\344E\274\037\266W\275<\267\373<\363~\235\274\2165==%n%\275\310F-=\020\324(\274YA;=\n|2=\3142X\275\211\2348<\254\274\205<j\202$\275Q\224G\275\367\351\342;W5\001\275\342lG<\353\305\034\275$\374\204\274,\356W;\322\347}\271F\230\313\274m87=1E\346<\310\014\r\275elX\275j\331C=5\222,=\354\220+=b\004Z=\236\231Y\275.\277\031\275\263\200\221\274\237\230\023=\371d\345<\354\177\350\274Yi\016=\324_J\275R\311J;\037\254B=\331\3203=\021\334R=\242O\225<\324\022A\275\214\342I\275\216F6\275\021j\235\274d\301\"=\222\016\036\275\031hI=\340\200?\275CH\364;\254\0214\275\035\205@=\"a\260<\316\314:\275\240?\357:\350n\204\274B\220\354\274\177|\031=\020eB\275g*r\272\233\235\n\275\177\251\365<\254]\013\275A\251D=\033\325\311;1\265\277\274LU(:\337\323\'=\345vO\273kz\346<\236f\265\274\014\263.<\206tR=\271\037\321<\350{\"=\217=T=Ik=\275\211\315\004\275s\342\t\275\370v\027\274\033\275\021<\345OR\275\344\001\351\273\277\222\257\274\356g!=F\032\234<\212\201\250<\310\312,\275=\216\002\274\363\304\265\274\000\225 \273\032\206\033=\351\'\321\274bH\275\274\330\327\016;\204e\030<\020T\310\273\267\304V\275\247\345Z\273\376QB=\372/\212\274\365I\211\274(G\014\275`\204\214\274)0T\274n\322\251<$,O\275j{\032\273\366m\243\274\303\031\320;8\013\300\273v;%\275},3\275\331u\337;u\n\241<\276\r\336<\370p&;X\340\267\274\251\333,=\016\363o:\210\031\034<\330\n\344<\031\232\252\274\242\\\236\274%\316\310<\316\2608=\275\031\017=\024\035\227<\330\264G=D\367\037=\342}2<\340U\340;\262\236\351;d\r\347<\036B\243<U\346]:\247\217\004=+\322F<\250C|<Tx\341\274\201\265P=\270\004\222<\331)D<\354\256\245<\2050\273\273KCi\274\206\013\022\275\236\303Y\275\007\027\236\274\263\373>\274\312\211\221\2740\301\020\275\203\0042<<\275\007\2759L]\275\002)\032<*\257\034\275\273\2434\275\031\343/9qR\203<\251<\220<\357\226\024=\010,\303\274S\355\276<\005qH=[\335\355\274\364V\r=l\021\365\274O\025\243\273\335\376\226<\013!7\275P\034\022\2750\233\022={\210\300<\253\223\007\275\252\276\034=c\334\274\274\277\023[=TD!\275d(]<\r\265Z\274\034\020;\275_i\006= \327\r=q\004\037=\222\274\322\274\'D\"\275\275\257\024\274\360\364\212<\335\355\007\275\002\036\304\273\264\021$=A\340\364\274]L\263;\035{\'\274,\304-\275\336t\324<\363\304\345\274F\037\\=#\3607\275\345gG=\377a\021\275\336*2\275@\2373<\352\215\005\275\307/\366<\001\200U\275\300\307.\274\335d\372\274p+@\274\321G\010<\262\n*\275\265\0004\275\236\317\003\274\217\266\232<\362z\030\275\036\231\035=<\010\025\275\r\276\317<\324\352\014\274 -%\274\t\035\177\273\334\250\314\274\025\331H\275 \306X\2753\306\010\275!\021\177\271\223=\230<\256 0=\304\332\270\273\216\312e\274\\L\360<\027\371\312\274\306\210J\274\256\3739=\037\241\'=\342\023G\274\263_\373<\331}\022=\357\300I\275\233\303P<\321\236\235\274\240\226\300<\354\210\365\274.b\r=t\232\027\275\340\3446=zl\351\274\264\360m\274>\267,;9\204D=\324\343D<\034\337\267<\025k\363<O`\"=\244\330\215\274\207\276<\275\320rA\274\357\367\022=\365KZ\275\303\246X=b\232\255\274\367\365\351\273(\2731=d\027\332\274\313\211\324\274\273\035\006;\3434\343;<\204\202:\024\367\036=:\3270=\031\270\201;\037\n4\275\213*1\274l\212==\na\000\275\223 \357:\314\357l<\241>:=\264\273\034\275#\216#<\266*\030=\377\234\351<\221\014\237\274\252\nk\274\025{\226<-\3531\275\270$:\275\235\302\027=\031\232\001=:\r)=\357\313\305\274\020\324E<p%\023=`\355\263<N\243\223\274\213\0215\275P[$=\273\rB;\'&\\\275s\360S=\253\t\363\274\206\0356<\346;\036\274\247\265 \275\214\363\024\275\250\375<\275\232q*<\212\214)9B\022\201\272\r\013\346<Z?\006\275\222\017\326\274\004\257\342<J\345\023=\026\324 \275@{\353\273\000k@\275\315\267O<\231\343*=\n\317@=\2720r\274\373\324\021\267\030G\202\274K\0214=\300\275\023\275nFL\275m\0353\275\326\223\020=\\\026\245<\306\027\271\274\33017=E5\363<\366V\217<uw.\274m!\347\274\310(\304\273B\371\345\272\023j\346\273\211U-=](\215\274\304#\014\274\340\'\274\27416\253\274D@R\275q\272-\274-\037\363:\003\370\373\273c\3146\275\304a\265\273\325\362\004\2758\323u<\345\337\225<\317Y\342<\301\207g\273\"\\W\275\037Q\302\2748\005N\275\252\210\377\274\277\217\233;\245\350\033\275\267i\342;B[Z=9\231[\274\306\270\t;\024M\244<y\275\315\273\3134\034=\277\3216<\366U\307\274\271/\272;v,\203\274\253\343\177<k\346\335<\2032*\2751nE\275K\2556\275j\030@=\326\277\351\273(\3049\275]\264\274<`G\222\274]E=\275\213\017\000\275\314\210\215\274S\n\266\274&\327\342\273\004\321\016\275\017N\t\275\342\211\271\274\353\014\345<\202\257\032\275\235F\250\274\003OD\275\203\365I<\237t\'\275\337R\253\274#\332(=\211\224\367<\253X\032\274\272\316\240\274+G1=\231I\237\274\253V\326\274!c\372\274\325\204e<Qb\035=o[?\275\003$%=\363\347\344<\270\006\257\273\001\252\244\274a\323\375\274\264\rL\2756m\t=L\265C\275\'\320\234\274\033T\036\275b~-\275\210UQ\274\344W\032=\211K\252\274i\3223\275\035-\250<\010\242\300\274=]\211<`\264\034\272\266\014:=\266\022\242<\201\204y;\375\203L\275\245q\246<x\220\027\275\254=R\275\256\357S\275MU\341\274>\255J=7\321\233;\323\036L=\307\304\030=\202g\027\275\\\261\365<\032\347>\275\270\326\010=\020UI\275\364\271\307\274\217\305Y=\200\224Q\275g\361\035=\310\247\330\272\3328\254\274\327\216j<\370}\303<9cD\275\001\221(\274m\'E<\301\360\225;\220\240 ;b*\317\274\005\013\202<\003\201T\2758\263\r\274\370\245.=l\202n\272mO\223\273\242\037\354;\037\n*=\223\356W<S\301\201<a\254\004\275\237\341/\274\213\tE=\2639%\275\244\326N\273 f\014\275\342\326O\275%\022M\273\363$R=\306WS\275\261|1=\333\261\211\274\021\352C<\214o\204\272\035w7=\342\272\021\275J\n\334;\354\033w\274\215h\032=O\230)\275jDX<\000\343\333<\025\027\314\274Q\t\337\273^\212\253<Y\220<\275\342\270\361\274|4&\275\024w\034=\274>\273<\323\026\272<\316\3246=\352J\261\273M0\004\274\030Z\\;/\322\350\273B\210\321\274\000\364b<\274\037\222\273\224\037\034<F\254\341\2746_\017\275\215\360p<\261#6;\350*\n\275>\035^=Wq\302\274g\033]\273\031\265\364<A\306\260<\003,\372;\261\200\347<\205\340\001<d\354\032=m\021\236< 26\274\217\354\244\274t\252\023;\340\024\236;S\255Q\273\r0\215\274\256-/<\354\362B\275X\027\357;\263\312\344\272(c\354\274m\311A<B\206-\274\342\343d;\301\2358\275%\3345=\204A\375\274L\037\357<#\010==\224\366\252\274,\376$\273\202\264\025=\333gf:\350\341\021=\014\220\'\275\375X\343<\226l-<P\207\342:\361\001\275<\202\016\352<\251`\267\274 \0227=n\207\r<\320\374#=\230R\307\274\340\020\206\274\240\346\246<\312\223Q=2\313w<S\266:=E\"\016\275z\000^=h\2319\274\344\371\014<\242#\251<t\322\212\274h\266\007=\22153<M\033p\272\347\234\364\273h+M\275[q\342;Z\013\n=K\354\222\274\227\232\340\274\030\177\213\274\205\372\252<D\034k\274\217\212\006\275%M\376\274`\255\2229\032\300\366;w\265V\275\355\024C=\353\2503\275\335NC=\371\335F;\312%\036=\22385\275\350\025\364<N\233N=3\256O<&\370\324\274\337\353\313<\244\321\007\275uN$=\361\336\260<O\206C=\037\375\270<dJo\274k\246\335\274\367\206\035\275:\347W\275\273B\025=\331\232\225\273P\357\200\274]\206\033=k\265(=\244iY=\206\347.=I\300\362\272\244(\225\274I\300?\273\261\366\031\275\353\tU=@\365J=o\240\200<*0\254<bbI\275\376\346\036\274\367\r]<\243\277\007\275\264|7\275\006\340\013<\214\235?=E\307#<S\301o\274nX\003=\036\250\255\273\364N\000\275\231\273>=A:\376<T\267X\274\356\376\304<\302z\"\275g#S=\367\213\337\274\017\244\342\274\225UO=\237\361\\=o\024\'\275Tn\233<I\217\364<\022\206R\274c\254Y\275\326\347A\275\0170>\275;K<\274\356\211\003\275\242\0224<\316-)=/T!=j\267:=\210\260&\275\241x+\275\256$6=\217|\307\273N\323\217\274\275\372\261\274\217fH=\365\353T=)\035\030=\021\340\212\273\205\360,=Q\266\345;\2207p<\003\352\260<\2676\037=\302\217D<\001\2666\275w\324\016=o\024J\275\032\214\364\273\361\366V<\347,K\275l\205\234\273\n\247\341<\274[)=C<a<\027`3\275\344\255\330<k#\234<\304\376I=\207W\275\273\215u\333\274l\311\262<U7\232<-\025M=\214\354\311\274}\354\001=\336\316B\275\032\306\212<\350\032M=s\205C\275\3141\034=\213\272L=\rD\010=:iD=J#\226\274\361\374\024=\337\260z:\r>6=\220M\247\273)w\002=i\322\235;(\024\014=\373\371\251<\212($=\264\232\244\274K\035+\2753\243M\275\333\220\304\274\274\006\266<\370w\256\274\274\206A\274\t\r\\=\3164\316<\206\030,\275\312\031=;\356t\253<\202\325\270;T)N\275!*\365\273G\360\020\275\264\335\361\274\033I\200\274\\\034/<\354\354G\275\220\275\027=\274I \275\035v{\274>L\204<\3053g;YC\002=\335\016\027\275\275\301\210<\203\377V\271\346\0330\273\360\023M=V\2051\275\372bR<T\354\035=\374\3330<L\217\335\274\377\342\006\274l\230\256\273\354\'\273<\305\306\020<\342\362-\275\245h\267<\300\347N<f\264M=\342C\225<_\234P\274\377n^\274\212\304\372\273f*\035=\261\210\032\275D#2\275<35=\303;\023=\010i\311;\344:\311\272\243\334:\274\356v\245<\362\263\366<Y\2068\275RC\327\274\271\252\326<#\372\333;\355\334H\275\202\247\006=\273\210\306:\005\264\030=F\243\240\274ov\237<\217&-=B\013\277\274A\334!=\n\277\005\275\323\225\270<\372\275B\275N\372E\275\374\225\314<\354;F\275{\262\322\274\311%\307\2742)\035\275\003\277\363;y\245I\275;\2261\275\357\365C\274\272\203s<\\[A\274\346\3348=\341\265>=\311\002\241\273.c5\275\206\376<=\275I+\273\375[\303<S\364>=:\'\026\275\373n\325<(\2231\273#\340\305<7YE=\310\205!\275\225\n\304:\025\226 \275\371 P=\005\267.=\003\027X=/e\230:\"\3435\274\3147\254<\025\242\021=\324D\340\274u,E=\306\274\025=Jg\233\274\0239\220\274\025\212\235<b\327\025\275\366\020L\275\334\'>=\\\265%\275\233\220\230\274s&M<\315\255R=n2\032\275\'\333\251\274\016)\031=o\014~<\307\267\322<[\346\225<\262g,=\252\021\020\275\254T4\275%\215{\273e{\260\274\336k\323;H\353O\273\275\025]\275k\303A\2758\237\253\273\006\252\t=\347~\212\273ddi\273\304\302\t\275\323C\276;\246\217\207\273#o\215<\010\002#\275z\251\362<,\200O<\271Q&\274\367\235\024=-$&<\355\300-=\361\275\003\275ImW\2753\016\000\275W\205r\274\205\336:\275W\362\035<\327\372\337\274\206}F\275\"\356\337\274\365C\204\274S\031\017\274\236`)=\031\005\277<MNn\274\311HO\274\027\231G\275`*Y\275[\235\233\273\034}?<\257iX\273\247~\323\274\224\'\331<\203\272\224<\242\363@\275\223\0049;#\253\330\274\232\322\350<\217\227\031\275\221\306\374\274\337.0\275\307MA=>\364n\274~\217f\274\241\237\010\275\252P\361\274n\363\215;\215\037\314<\231\212/=~\353\356\2742o\260<\360\356<=\373=\314<\2525\016\274k\375(=M\361\024\275=\024?=\330\021\325<\324e\004=\277H2\274\377I?\275\361\325\220<\014\335C\274t.\215\274ooF\275\035\0234\273\320\025\252<\016rR\275\327\202\242<1\001 \275e\017\204\274K\360\177\273p\2000=\253\354(=\207\252.<`-\211<\t9I=AMZ=\032UY=7\313\020=\230\370Z\275$\232\337<\275J\331\273\255\010\272<S\332\n\275\364\316\202;u\014\251\272Y\354\025<\271\2159=\210\215\026=\024\227\263<\230.\022\275\212\230\353\274\302%\247;\205\334\020\275\245BM=\252\2273=/\247\t\275\214\344j<\277W\376;f\310\277\274`e\265\274\330\350\343<3\336\207<u\247\355<\236\t0\275\210\0036\274w\221\223\274>\036\347<\236(\342;1\265\250\274\035(Y\275\177\277\364\274\353\230\036=YbB:K3\225\274\254\005\356<`\206?\273K\337\006\275h\223H\275Lp\234<\030I\267<8\303\236<\303\002)=!\326)=U2l\2742r\245<\311\373\260;\250\353O\275#\206)\275\034\253\t=\304\343\305;b\320\276\274&\353\031=_d\347<\222X\223\272\351\321\271<=\237?;?a\304<xt\r=La\262:\303bE\275\332y\354\274\023i\026\275n\016\021=\206\2173\275\2536\020=G\026\216<\303\2614\275\to\024=4\247\037\274Dh\203\273>\2309\275X1$=\334\320\000=\217/\321<eb\265\274l\'\236\274ZC*=\265~\033\274\357x\014=Tf*=\024\271W\275\245\025\005\274\323\3213=$G\023=\220)\004:6F-\275\262\232\203\274\330\317\036=\230Y\375\2748e\014=\231#\302\274:x\007=\244\244\250<\361=\345\274\014\222\037<\313\215Y=\303\3500=\231\343\235<%\275\010\275\376\335@={\210M=\204\201\022=|x\207<\372gK=a\266==`\213N\275\242\317?\274M\0018;\232\352E\275d\231\t=\0232\017=\314\224\321<\001\007$=y\rL=r\344\306<\354\342\n=\022k\032\275i\3601=\324\033Q<\274\354\243\274\nzo\274\244\014\331<\353\t\213;&\307\271\274\321I\\=\232;\\=\2470\r\275\337\271\\\274{\204!\273upY=\371bP<64i\274\324\250:\275\300\370\331<\342\304|\274\r\037\"=RQ\247<\034\010\356<\273\024\372\274W\267]\274\267\3631=\312l1<\320\255\375;\344L\233\274\345\036R<\t\233\247;\350H\004=~\306-={\032&=\2258J=\341\220G\2754\302\\=\230~\362:\\\315\362;\303!3\275\'f\001<\207\245%=Y\247\235\273\242\205\267<9\252J\275\312\201\"\274\205\333%=0lE\275\006}\234<\207\020\027=)n\251<\204/4=\371is<a\221j\274}\217\260<\323\346#<\276p.\275\254\224\001=o(\251<\201I\016\275\213\300,\275\364\203\'<P\035\014\275l\315\035=\346d\335\274\024\366\032\275\270}`<Z\016D\275\275\tJ=\347w\252\274k\253\272\274\277=\320\273G\345\004=\344\243\261<\330Y]=\240\344/=\202&\245\273\272\245?=\225\021\217;\r\274\317\272b\376\r\275\234\365C\275\355\201^=\230J\222<\375[\032<\3611\320\274\375\327X=\321\372\302;\rd\362<TB\204\274^\\\235:J2\354\273\254\372\227;\221l@=\203\355\307;\262\211\251<@\317\n\274\032z\354\274O\375c\274n\303K=_\361\002=\035].<\333\036\016\275\021W\'=\257\223A\275\252?\324<\332\244f<\335\342*\275\353\352\005=\360\261\347;nA.\274\216\220]\275\226\314\357;\3174+<\364\336w;\322\275[\275\200Z\000= R\331<\214\343\325\274\037O\024\275\343\005P;\2778W\275\263\020\253\274\031g\366;\035r\245\273\205\265\'=\306\241;\274Q\210\256<F\2739=u\252V=0\356!\275\377\306/=\236\345P=Hb\353\274/\322\313\274\002\235K=\221e|\274\221fi\274ew\301\274\313\345\217<\211Qt\274M\270\256:\253\r\253<\345\327\026<jd\001<\001\256[<\253\270\263\274\370\017\223\274\030b0\274\375\373\252<\204<P\275\3719#\274ZN\005\275_\371\372\274\336\230\005\275s\t\\\275\325<\225\273\265\330\026=)\317\225<ii\214\272\330*\262;\022\261\367\274\220\274\332\274P\346\037\273eW\261\274^\237H\275\301EN\275\245\340\225\273K\240\\\275\233\313#\275\232\320<=\251\273\003\275~PW\275\005o\030\275$\274:<D\365\241<\351\270\203\2742\235X=|\372y\273\245\250;=GO%=\335\237,\275p\217\006\275\262\246\233\274\rp\337;\021\235\357\274\206:\321\274gW\346<\244\373\277\273c\253D:Sj\217<\342\325\252<\273\027\2329\227l\373;)\220\377\273%I\034=\375L\211<5gZ=\200d\r\275dmu\274N\010\224<`\n7=H4==U)5=8d==\022\311^=\214G\001=\006\202\007\274\361\372\016<V\344\213\274#b1\275\230\212\344<\312^U=\351\234,\274{r)\275\304|\013\275\354\260\263\274\273\360m;\314\226\037\275\345\304\230<u=\202<\\\340\364<R\n};\005\242C=B\201\024<\367\033x\274@\264#=\213\267k;(\273\252\274\234\235\004\275f\013^\275\244\326\214\274\361\370\026:/]\025\274\354\310\\<\003R\256;\363\003!<\240S\013=\255\301\";\n\340(\270\255E\316\274\035\024c<\263\327\322\274\002\377J= \330-\275\346\020\207<\265\371\261<XFJ<_\260\371<z\016\013=\251\263\225\274\226|8\274\207\212a\274\224\300>=\223\000\271<-P6\274\336\3671=\332\242Q=\201\340\007\274\217\013[\275\354,C=GC\022\275\"\344t;.\252\014<\264\232\031\275\211U0=\027VA=sYf<\256L\000\275=\001\003\273\257G\214\274\261\213+=\243G^\275\021\211\022\275\006\362A=\017\201\020\275\252\007\035=LjZ=n\376Y<\327j\266\273\203{A\275\357)\037<\025\345\344\274\371\226G\275\033\330?=v\273?=\372\354E<\020\010a\273\321N\'\275\232\360\007\275b\203\276<\031Y\007\275\356G\031=%\243\364\274\230A^\275J\233#\274\370\307\021\275\303\207\301\273(\026\005={$\022=\344\305\351:s\243\001=\376\332\306\274\361uK\2757\223d\273\267\025\263<\336N#\275\017\360\001=C\342B<\242{E<\346\314$\275\327PQ\275\305\177=\267\200\207A\275\364\221:\275W\345U=\335\246\025\275M\334\007\275\305TV\275\003\311-=\207HX=\227Gm<?\263\267<\301\314\r\2759\030\022\275\004\375\021\275\344\313\224\274_\255$=\350.]\275^\031w<~p9<\006K4=\005e$\274\215\227\231<\266?\n\275\310\271(\275\370$\337<\035\340\216\274O\2018<\377\330\003=\366\216\312\2732\001s\273\377\225:\275\345\335Q\275\254\252!\275,\325\367\274\302G$\275\302\2653\275\305\337\\=3\275\016;\206\t\242\273l\031{\274&_3\275a\256\206<\205r\006\275=\2656=\377M\035=\312\300R=\343\267\217<\371\234\270:)\331M\274\217\347\231\273\001\330\343\272\276\262\311\273\351\n\220\274\0131\332\274Zu?\274\355\025C=A\000\020=]\2271<\347e\213\274\316\367\316<\273(\362;\0233\331<\345\240:=\222\204\367<C\006\364\273P(\311<u\324&\275P\327\002=\204\357\017\275\327;8\275\372\371\246<\272\351:\275v\247@\274,2Y\275\314\013\227\274\r*\340<\"\322\265\274\326m:<y\2029<\213\327,\275[\213\014\275-\264P\274\230\275L\2757\034L\275\310\272*;7=y<\303\360A\275\002>\300\274\213\230\245\274\"o|\274L$W=\341o&=\346?\237\274\275\003\373<v\327 =\275Vn\274l2\321\274\370->=\306\230\017\275\311\223\366;W\003\035=\212#Y\275\267\252G\274\003\254\003\275mN\224\273Bw\240\274}\253\254\274Dg$\275\214V\020\275\\\365:=\006Z8\274\013\034\t\274U\344\267<\254\312\020<t\345S<\311\2463\275b8\336\274\212\225-\275J \337<\230\020S=\207\315\026\275K52\275\260\036V=\035\324\215\274\035/\277\274\211;J=.\021\246\274\241\364\037=F\316\204;\334\270\343\273\'\025l<\\\270\007\275\206\306}<}}e\274|\0013\275\307iN\275Q/e\274[I\237\274\216Q\372\274\266\000\351\271\006\364\371<\251\333P\275\305\270\270\274}1/\275;\256~<T\337\026=\272\016\327<9\006@<\367\220\367\274\337k\':\361\207/=\364oL<\210\346\310\273\215\272\030<\330\335\264\274cED=\033\313?<<\367+=}\241\025=\330\330\331;\021\350\335\274\024QU\275\363\251\206\274\312a<=\262\013]=W98\275=\026)\273\330\353O\273\206\232\317\274\001\361J<\250\022@=\252\375!=\003\265 =T\007\016=Vb\254\274|HV9\177G\314\274\312\250W=0\227r<\366\032\262\273u\374V\275\303&\003\275\364DD=\027;f<#\356R\275\356$\016=:\327\261\273\320wR\275\025\340\361\271+\357\366\274\200\327\202\274d\226\024\274\245\260)\275\235WB\275\031~\021\274\247\253%\275\316V\013\275 T\344\274\363\t%<D9\014<y\374A=\017\254\007<\217\024E=\016\304F\2751\234\031<\353=\333\274E\337\031\273\314SU:\025\204\024\275D\263\022\274\236\026#<1\237\337<nu\230\273\366\230\356\2744\356\247\274cb\370\273%Y\004<Y\277\203\274\351\357\305<\325\006\325<.9;=\273\021=\275\332C\003<\346\\\232<\233\026\033<5X\305;\236\251\007\275\336H\031=2\270\\\275\210\256A<\312Cu<\036V\n=\252.X\275\017\376\001=\254\355\200<\263\2528\275V\276;=\256\220/\275\n[\022\274\324\021Z\274]\256\022=#\027/;\273\364\345\273\253X1=\251h\336\2748\367S=\235D\237\272|\301b;\374\277\311\274\023\247\004=K\204\354<\243!\376<T\305\210\2746d\325<y\250Z\275\017q\256<I\250W=\275\3456\273\350\320N;\263`y<\177\005O\275\rz\326\274\220\317\035\275O7\000\275I\275<=\'\364F=\000@\231\274Xi\353\273\025\026\215<\000\026O=\3261\246\274R$;\274tKO\271B=1\274+k\325<\"$Y\275=.Q=\026\211 =?\033\377;\020^\004=\304\341O\273\217\221&=?\013R=\357)\377<7\177V\275\367\214\014=j\007\247<\262\244=\275\325\361+=\3231\214\274\t\3057\274$\243D=u_Z\2750</<\264g7:\226N\023\275\355\031\275<\022\253C\274.\037S\274,\225\003=\033\214\034\275\247$\204\274\254__\273Ca0\275\246T\t=\327D\326\274\277\332\035\275\021\206\357<\342\331Q=\267Q\226\274\260@\325\274\253B\022=\033%\005\274[m\r=\\\323F\275-\0339\275z+\333\274\2122\215\2741\372W\275\205N\003=\270\242>\275\374\224V<\0032]\275\004\225\202\273\005\002\366;\035\375\033=\276\253\205\271\313\256*;\027\3166\274am\212;\313\317E<\"\204C=h\361X:\264\2241\274\273O\371\274\246\215\032<&D\r=\003\315\031\275?\277\037\275\360\207\366\274\213\320\315<w\260p;M6S;\215B\246\274\234\277\330<\002~F=\316\024\004=(\242\310\274\262BQ=\351\036\264<U\360\000=P\210]<\242\035\006\275\351$4=\321S\3539XZ\344\274\322Z\031=\0026\037=\202\204@\275f\210.\274\221GL\275\246eS=\033<s\274\334\350f\273\266\265U=\277Q\026\275~\333\232<7\037@\274\243\265\326<\324z\002\275n}\251<7X\0259\312\3277=\350\tY=\266\216\353\274P7\256;\361N]=fQ\261<\234\324\034\275\220\002\257\274\334)\001\275(r&\275\346\023\311\274\234\232%\2752\240\217<\365p\002\275%I0=\334\220\270;k\330\334;\2540\001=\207\2469\2750yN<E4O\275?\345\344\274L7\001=kz,\275WB{<\236\270\316\274U\310^\275$\274\002\274$\t5\275\271\251\227<7\'\\\274=\036\236<\300\260\264\274\200{\370;\271h\314<\240\213\'=\260\364\320<s\253\010\2733\231\014=\314\273\002\273\t%*=l>+<R\276P\275}\031\251<\306\213O=\265\204D\275\211~&\275\"9B\274j%\363\274%w\225\274\315\020\210\274\235\221\252\273P\320\221<\211\235\251<\250\201;\275i ^\275\3756\230\271\241\010>\275\310r\362\274\276\014\363\274\177\266T=\035B\252\274N\344l<x_\241\274\240\3757==E\213\274\236\311\367<\306\264\277<S\3210<]I\232\274\335\336\';\340\3547=%n=\275+9\242:\242-(=H\346X=`pZ=\315\200:\274w\022\030\275\334\301\371;2\245Y\274\335\274C\275\263#\021\275\333\276\257<\336! =\237\0348\275\204+\273;a[u\273\017|\277\274,7O=\325\233)\275\371P\032\275\313\253\225\274\021T\334<\022M\204\272\210=\325\274\0260\031;\200\211\2759\272\342\264\274N\353\247<\215!\341\274\336\273\310\274\003r\002=\265\246\270\274\342\266+\275\217[\037=p\007X\275L\375\177\273\222\260\260<\027w\\=\314\254/<Nr\361<7\377\362\274\2021\037\275g\356\357\274\323\226\214<\257?E\275\344+D\273it\222<\223\225V=\016b!\274\361c!<\235\311\006\275\315\235\031=\327b3\275\035:\032=\310\0105\274/\250K=\334\314$\273w#>\275\277\341Z\274\201K\314<H\251\206<\271\305%<\246\241\030=Fw4=\240\273\262\270`\370\023=R\2162=\2636\260<\353\337\006=\334\276\331<~H\030\275\253\370\252\274[\037\365:\301\0007\275E\356H:\376\262X\274>:T\275L\3143=\020\313\007<\352\316?=\216-\r=\203j2=\'\364\273\2743z\231\274f\027,\275\006\377\010=\257\314\355\2746\030\207<iCG=\2062\252\274p\374\004=\377\301T=\303\275x\274F\221\\<I\300\326<\216\340\036\275\302\253\005=\017\2266=\371\273Y\275\001\335\227<&t\240\272_\3143<Y\321d\273H\3746<*\270\2579hg=\267\244\365K\275\323\250\305;-dK\275t\252\254<D*\332<]\023}\274\2339\023\275\353\"\274\274]m\306\273\335\2423\274\034\236@=`\215\311\274\335Q\\=R\215\305<\357 \251\274~0\277\274\224\332!\275R\177\320\274j\325M=\267x+=o\330\221\274\222\221\262;\326x.\274\203\305\007=3\033J=\357\232[\275@\346\017;\337\372R\274\342\003\360\274\257w\240<\037c]\275X\304Y\275\r\037\200<\371(\322<\367\002\377:\02356\2753D\\<\234\023.\274\240V;=\233v\022\275\271\270\340:\274\373&<\261sI=\032o\023\275\356\364\3638\355\304\344\273\256\325\361<\367!\032=U\256=;`\315\335\274|\306B=\002%\311<\030\026\310\274*\n0;uW\310\274\306\211W\275\305&O<a\341\316\274\032\276\301<\346\037V\2758o\224\274\224\330\013\275\304\310D=\377R=\274\330\301\r\275|t5=\007\032/\274\271\322\255<\000r\236\274\350f\201\274\327\'\253\2663U(=\251\245\305\274eyv\274>\360\216\274\220\033 \275\345\331%=\227g\326<\357\204\242\274\245\376J=\001\313y\274vB|\274\362\017D=\215\355J<<\207U\275{\004:=m\353W\275\224\224\\\275u\255\010\275\212X\'\275\232\n\030=\326DT=\006\226:=w*\237\274\320\373\036<9\260\327<\257\004\343\274\257\354\257;\311\246\000\275\033g\341<\247\211\360;\023_\337<\2106F\275\226\300\327\273\213=\007\275\036\333\347\274\270@-\275\235u\024\274tw\026=\371p\242<\"\t\300\274:\024U=\007\234G\272\312\005P=\205\332\035\275\000\341\374\274\253=\272;\326z\364\274\222Y(=\263\301\211\274c\230\004\275\004-\317<\303\316\202;5\376\237;\353\266\033<\234\202\035\275([M\275]\"\307\274w\304\225\274\"2R=+j\022\275\261\352\365\274\026\"x\274\242\320f\274zyq<\014\272=\275\007\303><>t\330;\372\216\354<\255p\222<\212\017a\274\367\3760=a\203\370\273\226\224\334\272\232\254\354\274\311\340&\275\312\360?=\016\324\027=\037\254\303;\324h5=\245D\354<\227J\263<\232I7\274\222\242\3579\nC\007\275\330\346t\274;\215K<\215\266\200\273\001;\250;\306gH=\371\002R\275m\005r\274nl\017\275\226\r\201\274P\352\003=\210\242Y\274\003\314\001\275L\t\331\273\031\017\251\274h\332\010\2739\020Y<\310l$<\333;!\275\036\036\020=\227l\326\274596\275\225\255\234\274\332S_<lKi<!\365\246\274])h;iW+=\303u<\275{pS=\226P;\274\362\022\375\274V,$=\232\027Y\271\265\323R\275\341KN\275\365o\025\275\356\242 \274\360\235\221\274z\036O\272\207f\364\274\372\3607\275J\0213\275F\007\211:\223\305~\271\002\275>\275\307K\220\274\201\037\037\275\017\314[\275\211\245\005;\341\355\032;\236\206\214<\264%O\2753\315_\274\373[A\2759\260 <D\3446\275\335\202\000=\220\310\r=])\214<\261-N=\000\203\002=r\3149<5@/\275\017\017\013\274\240\340A=\243\261\202\274\010\326j:\212AY=\244\344\302<\364s\332<\3051^=\234\317I<O\235\225\274\020\21568n\201\255\274\3209\372\274\310\374F\275\316\225H=\224\032\254\274\242\265\022=i\354\333;o\333\001<c\250Q\274\'\240D=1!\214<\213\004\274\273\313\203\335<(\243\234<\374\013&\275]\' \275\2230x\274@\207\274\274\026\247j<#[\346<\225a\020\275\314t\232\273\\??\274\r]\306;|\0367\275\226\217\003=~K\037\274\'\326\205<\201?]\275\013\210A=\241\314\213\274\002?\327;\260\254\221\274\367\037\352\274\t\001\355<z\024\314\274\253-m<\303\r\314\272\311\345\256<I\2740\275N\203V\275\310z\254\274\374A\374\274A\205;=\305\246D\274@\242\251<\\u\343<\337\355\3469\310;)\2744{5\2754\245\244\274\022T\001\275]\315\021\275\262_-\275\244\276\033<\374\037\232<\307\363\374<\265kC=h8W<\256\247J=e\020\017<\347\364\025<\213k\001\275\"\341\231<P\244V=[o\001\275\320\232Q=\014\322\007=M}\262<\315\027f;\351i\214;0\3412<\030\274U\275\0338\t\275\006\257\224\274\243\260B=\355\211\323\274\316\"\265<\325\207:\275\002\336\033\273!\203\221\274\016\3634:\351\366T=\035\254q\274\367\304\035=\253\003\026\275\036\204.\275ui\365;\010.\300<\'\025]\274Y\201]\275P\023\344\274\342\377\272<\364:\367\274\307g\034\274^\300\230<\316\261\235\274\253\340/=aY\n\275\2724\212<\\\2602\274\3019\020= \305\210<\321\265\247<\235\374&\275\236k\242<\002\r!<r)\253\274\352\357\233<\204y;\275\341c\200\274\t\0352=5^B\275\332\324s<\244\031%\275\214M\245\274\027FN=\371M\036\275\335\243\035\275\312|\355\274/\252\271;\007R>=w\370\327\274\261\277\025=\351\361M\273\312Q\205;\316\227S\275\326\326\343<=i\270<\2152\006=\257\321\262:\001\343\305;\201\306\213\274\226\325V=5\232&=\177\033\357\274ge\027\274\376\201/\274[5P\2759\347M=!\204\325<_h\301<\233\265f\274\342\234\300\274\364\010\331\274\336ut\274\32365\273\265`k\274\245~\351<n\201~\274\253\203\251;\271\247c\274\014\2741\275d8Y\273\232\315:\275 \243S\275\344\216\326<\271\230O\275\213\313-\275\301\216^=\345\177\002\275\277\236\035=K\006\255<\271\357\337\274\274\3105=\260nD\272K\267\237<\322\000\310:\230\325\375;\001\300\310;\257r\246<t\233\016=P\352\026\275\204\301\335<\262\264\214<\n\373}\273f\\\344\273P/0=\334\230\354<\323\t!=\tR\"\275\341\352!\275j\352\240<`\323\224\274\340)\006\272B,\310\274\245)P=\000\257\337\274\201\024\357\274\241\314J\273(\341\3769\"27\273\375\003\007=\336J\205<\202\004\023\273B\300\006=7x\217\274\320\313\007\275\001HQ=\213b\306<\361\251%\275n\207\031\273T\332\224<z,J<\\\2730=\364\257>\275a\244\003<5\241*\275\311\217K\275\362\373\326\274\271\000B=\037\331O=5yD=\357%\235\273\346JX\273\333,E=\215\217\034=\221\014\204<h.\213\274\242\216B\275\361\362b\274\233\276Y=\033P\013\2752\243\317:\313\014O\275>\307H\275\206X\301\273t\267\245\274\230\226\320\2741\267\013=\237\034d\271T/\035<bW%\275d\235\n\275\360\356>=h\363~\272K\321\316\274\330\303D=U\344)<<8\362\274S2.=\247\207\201;\376\261\"\273\273\037\"\275\332\222\352<\363\370<\273\004\035\021;z\32089\366\342\311;\374\212@\275C\037\272\274\340\003\210;m\355\270\274\177d\253<m\371\032=0\036\t\275\350\007\261\274\026\300\353<\345\376U<\007t>=_?U=\375\2216=\267\202\323\274\201`J\274\250\207$=\311\336\337\273\231\274\025=\320\022\016=Wi\002\275$\324V\275\232%\034=\n\373\367\273\"\2526=\007\351\312\274\351\372\315\273\016\376)=?\370A\274\020s2<A\233\017=Tv?=Y\2402;\234\006N=\246\344J=\014,<\275O\023\032<\316\213\004\275O\223D\275qwJ\275\307\312O\275\3675\001\275\037\270\256\273|\217\332\274i\377\031\274\017\222\325\274\'pO=\242\026D=\251\3430\275H\227I<\231iR\275\027\224\2068\t_\020\273\240\375\023\274=\325\030=c\356\354\274\r\245\325;\207\271;=\264p\205\274\"*4={\002\216\274\356_\206<\325\3750=#,Q\275\027Z\241\272&O\270;\214\245\013\275\251\221\351;l\014o\272\367\014R=\257\371%\275\323\340R<\010\371\007\2750\364\315<a\r1=$d\331<3\037*\275\334\003\253\273\336\313K:\207\"\255\274\311>+\273,\351X\274\367\235\233\273T\377:;LW6\275\245Q\262\274\277]\265<\367\335\035\275\ns\352<8\257C=\240i\034\275\367\017\360\274\343GI\275Q\036 \275wd\034\274p\000.\275D[\001<\237}\033\275\345n\207\274`@!\275\235\375*\275`1\360\2740=\025\274\330 F\275\3624 \275G\310W=#3Q\275S\3466\275\221F\005\273\232\213G\275\005d\025\275\353\344\355\274$\200\323<\260\215L\275\315\252\036\274\030\r\356\2743\344+=\246\017\"\275os\002=\301\354\337\274\r9\333;\3557Q\274\3609\212<\261\374\242\272\026\227Z\270|J\267\274\340}\'=Y(\340\274G\270\030=\037&\326\274%\037/=yVW=\207dO\275\323i\300\274^\267\257<\355\264T\275\022\032\215\271h\0230\275\035<+\275\236\275B\275\310\274?\273\007\0108<\370\026\257<\252\312\374\272\337\020.=R\3013=\357\366\024\275\020\3166\275G\355\261\274h\t<=2\262\010\275S\020\023<\031\030J\275\360\345L=\245\311\225\273]\306/\275\212\314\223<\021\206\263:|\226\212\274\037oZ\275?\261\\=\201\312,=\272\352N=\237\356?=\250\300\301\274\237\223\312:S:\372<\243\005\313<O^\271\274\014\350\032\275\2777$=\206\233m\274\361\204\334<\'\357\272\274\221\206\300<\005\304Z\275D\032\241\274\205.U\273\202\325\203\274-w\223\274\027\271F=\233\021\323<R\005)\275/\264\335\274\017\263\205<\262\307\265<\233\301\016=\271_\216\274%j\037=\332n\273\274\031\206.\275\367\222M=7[\007\275\336\343\033=\r%\r\274\310\317L=|\225;\275\344\353Y\275\300\267\030=4\3409\275\322\034Z<{\216g\274\333\265i\274\245\366\352\274\335}C<\347.9=\311\273\245\274\312\271a\274\326\'1;\370\304\317<\217\332\262<\315\243\033\274?\243k;\250\200\030\275\360\307H\274\242\351(\274\030\213F\275\245\364V<\021t1=>c\202\274;\206\251\274\014&d\274\200\022\023\275}\3379=\343YR=D\002\246<\374[\254\274\324\307L=\257+\231\274F\007\244\273K\330\030=\367\312\235\2740\254\353\274\2048!\275\211\223d\273A\331\242<\312\216:;\254\023J\275\n\203\033=\221\315\264\274\202\371Z\275\320*\013\275\027\220*\275l\352\030=\200\246\014\275\212\213\274\274b\001\264\2740\325\371\273N\243\201\273\347g.\275\212N<\275@\013t\273\t\371\031<\362\036::Dj2\275\177\014\237;\222\226\314\274\365<\253\274\216m\367<u\177\351<Y\354\t<w\276\237\273\302k\327;0\377@:\342rC=\364+5=\203\310\023=\252\234Q\275\267S+=P\3218=\360\005\312\274\341DG\274\255\267\321<\030s\203<\251m\207\274\002w\031\275\232.@=TJP\275\005\347\366<\360\2150=\016\202\201<Ak\335\274\316\3203<\352 \211\274\375\316#=\204\0240=WD6\275\373\201K=\261\305Y=\2035\036==\2264\275\235\270 \274\263\022\031<\314b\010<\367\257\r\275c#\221\272\352\355\351\274\202\025\273\274\327\024\313;\327r\376<\272:!\274R\321\253<b=\242<3\212/<\340\270,<\3656*=N)\254\274\204\207\031=\2646\254\273\310\303\317<z\337+=j-\324\2730ET=Ql\006=\203\255\325\273\r<4\275r\265\351<M\335B\275c\330\323\274F\3411;\236;?\2759\253\025\275\301-9=\312\223\304\274\270\342\270\2743\264\244<l\260:\273[\236\003=\231\035\275\274FJu<\004.\370\274\346\217Z=\"\272$\274\024\025\013\275\346\342\340\271\210r\205\272\330\271\270\274\334~\373<\266\035\255<~d\023<\271\230\235\2740\037\211\2743%\006=#\2030=V*M\275\220\374\372<Y\202?=\3271;\275>\'\226<{\243\\\275\312\312\272<\363/\344;\205\247\200\273;\033\301<\032\325/=\2076W<\362\013\337<\243\316D=}=\307<J\336\316\274\000]C=\362\025\017=\355\276\333<O~\257\274\026\364i\274>>\226<\026v1\275h\255\207\273\315\212g\274\025\305\325<>\002\n\275\234eD=\325O\276\274\251DO=\370.\r\275\263\201\t\275\344\220\233<\366\254\353\274\216\334Z\275D@!=J\034\372\274\271\037H\275\313\301\017\275\362A\314\274\0177:=w\\T\275\204W\334\274l\346\350<cqG\275\241\253\016=\237\367L\275\331\207\214\274Hf\210<,\014\256<\035\270H\274;q\212\273\034\324\325<\270o7=\323CD=Px\002\273i\0321\273N\203(\275\005P\352\274LlT\275T\t\264<F\353\220\274g\235]\275\256=\013=\367\027\030=F\217\t\275\275+\027\275g\323\025=*\333$\275\007P/\275<\035M=g.O\275\231gR\275z\2155\275\320\310\036=4(\"<i\257\250\274\302A4\275\252\006\345<C\353\010;\032\332\254\274@\237\\\275\264\251C\275\366V\027=\007\304\n=s\346U=k\337\026\275\036\365\020\275g\"\331;\203\rN;2^g\274\377\211\213\273\335\302\207\274\366\252,=\306\'\301\273\356g_\274\210\350\354:\343\370\322;\013yW==Z\223:\312\3121\275\320m2\274)<|\274\"\3678=\\\017$\275j\274Z\275oz(\275\321\231\330\274\241\355\301<I$\356<\n\254\357\274\315\340\016\275 \203\202<\n\327\320\274\237^#=xr\030\275\2327k<\026\030+=\267\333\n<\\\215\271\274\001\004U\274\021o\350\274|\316\334\273\325E\257;-0>\275\264h\363\274\226E\220\274L\023\262<\315\004\205;\007Z\240\274\023\033D\275\213x\266;\362S\261\274\004\016\322<\005\256$;bD\347<\217\330\340\274\274\370\243\274Y\347:=D\227\245\274q\204\333\274\3168\325<#\004\310\274\3666\014=9p\035\274L\325\375\274)7P\275\362#B\275&i\234<\206\006>=\322\341\r\275\354\316\207<\3354\374<\261\3252\275\333\232\262\274Q\361R\273]\2033=\006W\337\273\341\300\262\274fK\305:\326\240\304<\001\303\000=\265b\305<U($=\215\237\027=\311\226\022\274\367\273\t\272\343\210Q\275\300S\021\275\355y\307\271=\257\203<\202 M=\256`\023\275\221\t\257\2742\217);\233\'(\275>\343&=6\353\210\272D\373\235<\211\036\264\274\227\324\213\274\251\276T=?u4=e\221)=^\025\235<\026\325S\2752^\342\273\365\344]\274-\273\340\274}g \275\250\0338\275+\253\326<\321\177\265;\235g\013\274\020\351\230<F\317@\275#\356\031\2755\032{<\304\321C=\207CY\275\323g&=\336\004\030\275lCX={q>\275\372\274\252</\3029\275\211E\316\272\242pu\274w\007:\275\t\203A\273\027\217*\274xk\006=\214\327E=\330\277Z\273\021yT=O\222\201\274\r\247\305<\333\375\255<&\321^;tl\320\274\312\231\241<<\0316<\345]\007\274\203(\224\274\371mA\2759\317\013\275\371\001\317\274!c\334<x\357#\275h\266D=F\354\376\274,\253a<\027\272K=\017KM\275L\332\037=\264H\023=\363\220\032\275\200$G\275$.\020=\014\207\346\274:\014\232\274\313\344W\274\250\2562=\275W\014\275\366z$\275\277\243w<\321\230\257\274G\360\227\274\3657\205<B\004\267\271\225\2344=\327  \275Z]!=bu\265<\247\250\000=rC\243;36L=\313\3067\275\017\300X=\262\006\r=#\232~\274c&\205\274d-T=\364q\317<\305\0060=\343Z\320\273\353\257\221<*A}<*\202\235<VQ\203:\3546\003=I\2364=\361\236\005=\352\271\017\275\303\376-=\343\255\237\274\36134=\256\255\332<\262\373.=\262\312/\275xy\363<s\231\211<\242\022\234<S\323\027\275\005\337\014=\312\247\306<^nC\275\276{\032\275*\006&=\251\232\014=\365\261\373\274q\211\312\274w\340K=\273\336\373;\212\221\304< \315O=\\#\'=\005#\207\274\032\\\355\274\373\351]=\231\226\254<v\337\026=\342\336\031\275|1\021=jM\201<\367\036V\275\312s\324<v\370\r=v+R<\250\223\256<\351\035\003=,\341\262\273\316p\257<\006\352p<I\356\345;\252)~<\213\373\243\273\216\347\355\274\265\243\351\272)\013\325\273/#\005\275M;\013<\224\003\224<\027u&\275tS\222<\2649\026=H\217\351\274\347\264\313\272\316\311\212<\200\025D\274k\010\302\274\224\263(<\240G;\275\363\364\351;\200\036E\275\'\277\014<KF\201\272\237\356p\273I\006\247<\315\342\202<A\241N\275@\005\034=\334\310\027=\230 I<$\261\344;b/!=\325\225\240:\016:\267;M\032\314\274\343\344\263;~\202\300<\213C\216:\350\010\001\275\374\313]\272\377\354\256<\242_\247;\267\354\261\274\227\246\022\275\210\037\262\274z\340\222<93L\2755%\025\275\371 \333<\316F\264:\020\236 ;\337M\323\274P\211\314\274 [\017\275\376\336\034<\272\226B\275=\375\032=LmG=jO\000=\222\312,=,\331\371\272\010\330\315\272\273\262\r\275\014=\022\274\320|<=,bD<\306\232\340\274\312\2612<d=/\274<S\216<\017^X=\215L\341<|\035\347<\254\t\001\275\313\345\177;\306\236P=\nvc<!\013\326<\000\222\362\274f*\356<2t\232;\024\211\030\2759\234\226\274v\340\236\274.c\255<E\370\271\274y\225\\\274L\25699,\334M=~\265\210\274\3140\361\273\324oK\274\273\014\207<]\021\227\274\332\331*\275t\200W\275i\252N=A\201\235</\231\037\275n\033\031\275\271X\346:\237\353\315<\301y\014\275c\002c\274\230\234V\275\355\277\221\274C\221\321\274vP\036=\277\342d\274]:\355<!\2704<\n\005\224\274\205\352#\2744 I=q\240\004\274\374\'\372;\331\333h\274\025\002\035=\373\320V\275\000\376\305\273\236u\"\275Vb\217<\250\314\256<]b\014=\36665\275\226\342\233\274\204\317\373\274\361\246L=\320\237\307\273\304\213J=l\265/=\352\361J=oOW<\215\265/=\216\370l<\343]\033=B1T\275\r\277L=\333\001A=P\013w\274\301\024\255;\222L\037\275\323^\227:=\000\271<\355\315g<\3319\201\274\345\344\207\274\023\351\253\274\217*K\274V\371\351;\307i\234<O%\002=^2\t\274\302\200\024=\360\360\312\274B\326\241<]\212\001\275\251\355\017=\021\014\202\274>\327\020<DY\342\274\024\351\013=aHJ=\271M\376;t\245\034=\212<\022\274^iE=\251\024\026\275=\233\317<\313+X\274\320\204&=\215\r?=@\344\232<\3170\023=\221#&\275l\340\273;\271\225]\275\223e^\274P\202\267\274bz5=\t\2707\275\035EC\275\320!0\275B\315)\275X\303>\275(a(\275\357\321-=\354\000\032\275\030\325|<\031\323\025=\351\372\004=O\377\021=W\347%=\007P\242\274\357T\027\274z\226\332\273\226\237\342\274\261\233\201\271\223\3764\275\243\217\311<M\250-<\242\352\315\273T\346\277\274\356\211j\272\341F1\275\262\206\022\274\201\367\266<\027\003\231<\221\322\377<\004+B\275\217\317\340\274j\343\227\271\364*\033\275Ki*=\267%\273\274\364j\307\274\232\007\021\274\274i0<\033>\243\274\366\350\211<\332\004\n=\361\027\037=8)\023=\346`1=\013\001\013\275\030L`\272\203q\313\274?\255\252\274ke\016\275\230@\270<\313\256\352<\025\243\020=\341\364\360\274\262c\321\273\003\320.=%C*=\220-\232:2\265\024=\3123\235\274\215\266Z\275~\0305=\\\036\034=\253[e\274\001\350\022\274EC\360:\326b\025=\263\264N=\277\026\037=m\330\325\274A\"\274;\236\242(\275\212\000\350\274\361NL\274d\3519<\374\2420=\351!8\275F\025D\275\262*\243\274\364`\243\273\222f\000=v\025\005\2753\022\007=a\331\361\274\376\027_\274\232\212T=\312^!<\361\241\010=9\247\333\274^\316\372\274^\343E\275MvN=\0248\236<9\215,\275\277\304N<\220\332\227<\325\024<\275\035\235\206\274\277\t\036<\r\035d\273{\356\007\275]Q.\274\210\035\322<\342\'\272<\0172\020=cw\307\272c\247[=\326l\000<\256\301N\275\223\304M\275\331\250\302<\317\023\010\2754{\235\274\265\205\005=\322E\346<\275D\r=G?\004=e\002$<\262$!\275\034e\322<\255\222\223<\212\244*=(w\317\274\276,\240;\265#4=v\240\t\275F\023T\274>\265\267\274\324-\'\275\206or<\236\333d<#R/\275\243\313\177\274\024\204\023=\223BZ\274O\214)=\212\330W=\3575\371\273>\361x9\235\2330={Y\321\274\332&Q\275R\366\217\274X\331\260:r\202\332\273\004.\302\274!]\321;\t\020\013\275\005\2477=\230\004\300\273\242o\017\274\233\023T<\260dK\275l\321B=6\221\330</\220\370\273\020\024\037=o\364*=vF(=Z\242A\275\026ca<C\366Y<\"\360\276\274\026\246\255\273\tf\216<\322o\027\275\340KR={\245\035\275>\246\244<v\345S=\003\230\202\274uM\\=\260.\256<\367\210\273<U\250\233\272\376\302\270\274\323\205\027\275\024A!\275;\225\010\275\202\222\213\274\222\376\265<\302#3\275R\344\006<\337\371\340<\026\3430\275\354%P\275\010\rP=\214u\031=Z,y<=Wl\274?.*=\333\340\230\273i\022\350<&}3=\340^?\2756\032\031\275\203\330E=\311\331\346\271M.\236\2749\315;=\006p\002=E=W<\232$\020\275m\rI\275\246\202?\275\257\013O=j\371\377\274\241;\364<\300\256\215< 1\355\274\221\004\303\273\216\205\353\274\013\315\227\274y\225:\275*\252\302\2742m\344;:\3424\274;\233\334\274\227\222\355\274\223W\340\274\037\346@\275)\002n<n\247\026\275\320g\023\275\353&,<I`\277\273\250\322\"=6\260\256;\333\3405\274[Y\'=\210\215\312<\257{\034;%m\354<\221t=<\264\235\021=p\363\216<\234M\360:\207\2714=\n\367\\\275=\035%\275+\257\003\275\354T\355<=\004\256;\364Z\266<\370\366*=\321\221I\275\354\r\t=D\376&=\022\3374\275U\373X\274\\\030$=\231t\"={\364\"\275.\253M\275\370\311\013\275\312@\023\275^\036\\\275\351 \243<s\032&<\361\361)\275\002{+\274\314\307\033\275\r\247;\272G\274g<\037!0\275\3612,\275\237\316\003=\306\300\300\274\245\021\326;\337U\017\275\010\354F\275\370\035\244;\177\333\200\270\235t\203\274\360n\253\274\016\031*=\000\255\360\274\0138B=\236\271&\273>6\014=\341%c<\031\346\177\274\361KY\275\311\025\324<\224\224\365\274\267R\334\274\246O.\275Q\316J\275\346m\377<\372XO\275`\373>=\2270\363\274\010#3\275?\331\027=\354\t \275)\033;\275\214\\\376<\277\245\013\275]\244\027\275\365\301\177\274\3005\272<\350hV\275\315\361\256<7\353\312<\355\305R\275\330\201\036\274\007\022\234<|\254\333<\364\357i<K\325:\275c\204B=\224\253\310\274\222i\244\273\255AO\2755\271\000<N\224\336<j\n\320\2736\267-=\3464\210<\246\337 =\273Q&<X\270L<\261\320\\\275\245q^\274\210\177_\274\342\220]\275d\222\227\274\213k\364\274u\003\002;\020,H\275;h\211<\r\242/\275j\036\277<\377a1\275)\031d<\360\334\024\275\351\000H<\241\225!=\211\227\306<(\334A=\016\356A=4/\254;\221\313Q=\324\333f\273\314\177\315;k\257\022=/\241,<\367\035#\275\275\325$\275\363$\014\275HG\244\2746P\230\274\211\230\261\272\264\266\251<\340\360\013\275\325@\250<\234C\244<\326y\200<\245\342\\<\300\364Q\275#\244^=9\261\321;\273]f\274Z\207Q=\330>\037\275\252\213.\275\001\200V=M\223\033<%\010\276\274\t\266C\275\017\203\234:\t\313\231<\241\220\306<\234\375\225\274l\355F\275\365\371A<\036^\t\275\241[\212<G\352\\=\223\217p\272\250\326\010\275\306\213*\275:\003\370\274\010\037\322<\2664\213<\231O\272<\333V\217<\330\031\215\274R\275\220\274O\252\003\275\006\021\310;2T\037=\013\014a<B\215O\275RiI=]\364\331<\370\251Z=\204)\347\273\022\352]\272\307\310/\274\265r>\275\236R\362<\344\007\306\274\360\034\276\274\0351*=\032\021\330<\306I\253<\336\213:=u\375H=\006\275\006=L9c<\214\223\004=\020\245C\275tJ\017=\372\354\252\274\326\200J=\214\r\034=\364\337\216\274{\000:;\240\242]=_\tX=\331\302;\275\023)\010\275\263\007$\275\304\030\255;\361rR=\027_\026\275\322D\374\274\352\323$\274au\222\274\304QM\275\275\004\242\273\357 ,\275\353%X\275\017\337,=\3345\311\273\212\305\270\271\214\270\326<vc\032\275\023@\014\275\003}(\275O[\002\275\372^;\275\351\222;\275S\201\005=\277ID<\227m\300\274h\263\310\274\257\212\350\273\220%%=\222\243\330\274\321\267\013=V&\351\274\247\031^\275\"\242==\273\006\000\274\334\230\013=hm\032\274i\242\004\275^\225\260\274f\361Q=?$\010\275<m/\275?\3722=,\370;;7Z\346<R\255\322\273\315xR\274\255\233-\273Q\353\367\274L\376\201\273\200y\273\274v\334\253\273\341\327H=deS=T\'E=\200\267\326<\361f\027=\'\372L=\037 \261\2741\266b\2747v?\275j\324\276;\227\2533<\263\024-\275\237\317]\275es\367\273\361B\032\274\0261$\275/X@\275c\356M=*\361\\\274,\212\r\274\347\237\365\273\362p\354\273\035\232G7\222\254G\274C\370\223\274:\013I\274)\016\300<\031f7=\002\032\247\274\325\3034\275\333\341R=\360\266*=t\245U=\322\'H\275\371!\233\273\'\365\006\2756S;=\323\274\020\275\363\335\354<\345|\366<z\242\317\274 \356A\275e\232\300\274\214\255\230\274\317\254Y=O\374\014\274s\177C=ls\017=u\006\030\275\301&\021\273\247\242!\273o\220\t=N\3231\275S\000\016=\007\3130\275]\260\217;z\367Y=\262\354V=-\322S\275+(\035\275~\020V\275\2551\345\2741e\002;0]\202\274e\0053\275\301\000G\275}(\307\273G\321Q;\\\200F=~3\220\274\341p\213\274i\247V=\337x\255\272\270\207\234<\014d\214\272ud\031\275\357\313\204\274\007n\200<[&W9\020V?=\022\355\373;\247\035\332<l\035+\274\n2\036\275_\255\273<\254\037\232<\024\2075\274~h\357\274SJz\273\216\346H<\305\367O;h\341\213\274\365\232\350\272\275E\367\274\r[\352\273f\320W=\217\376\027=\003\361#=\302-U\275\266\314\250\274\260 \375<H\243\r\275\306O\350<}p\223\274g\177\001=\210{1<\266\232y\274\246\212\240<+KS\275\272\302W\275\324\240d\274+\360=\275\377\364\225;\332\243\264\274\254x\226<`\314:\275\253\314%<\016\230\261;J\2546\275\025D\354;\344+/\273\n\216\253\274\336\3018\274\2460\302\274\027\211\033=\357?\000=\355\225U=g\r\023\275\225\377I=\310\316\036=\316iR\275\302GK\275?Y\240\273H\262\224;3>\372<\357\235\027=\310\220\014=qI\247\273\340E\245<\233\213\307\272\200<4\275\035\245\242;\017z1\275\276.1=[I\022=m\207D\275\357\321j\274\334\316D\275?h(\274Wi\006\275\247\2516=\323\031H\275P\205\004\275\351t\226<+n\306\274\263\006&\275\332B\\=O\007,\274\311\367\014=\023\244\010=\'\r\332<\373a^=\326jR\275aQB=Fd\354\274n\305\215<\276\005Z\275\347[\314\274\\\016\005=[g\355\274\3641\230<e-K\275\363\222\264<YA]\275\224S\217<3\207\016\275h\307\002=XY\347<\315\227\322<\244G\231<R\232\037\274!.^\274.\231;\275\300\035\024=\260|\310<\310G\373<SoX\274)\020[\275\254\251\001<\321J\002\275{\tY=\\\204\240\273\247\243X\275\363\322\321\274l\263\031\275``X\275\320\202.\275\034f\n\275&G\267\274\314\313\225<\310\002\246:]\2777<\356\226N\275\364\264B\275N2\372\274\204\260\211;\374\311^=b\371\307<\221\220w\274\366\001\373;g4\007\275J`H\275\r\350\244\274\364\0330<\331z\355\274\243/k\274\360\225\352<\342\204|<\214U\002=C\266\312<\255n\'<\231\312\023=\3057\032\273\307\027\375\274\254\345\311<\324\331,\274~vH=kJ\322\273f}\266<fg\201;$\006\205\274\216\236J=B\331\323:4K(\275g[Y\275\315J\347\274\237\007\004=\334\221E\2744D\037\275@\375\023\275\235\333\035=\2515J\274a\274\000\274\006[\017\275\376\344\377\273 \314\033=\\\317[=\032\375\023<iX<\274\260\262#=\232$\252</R\337\274\261\371)\275\'\216\204<\3152\374<\336\336#\275\242s/\275\014iN=\300\032\252\274!\3741\275\211\016\226<9\307\233\272\206gR\275\371M\201<\224\206v<\334\306\363\273\035\362 \275\031\026\030<\023\255\332\274\354\336V\275x\017X=~xo<>&\223<\263\364\277;:k\025\275^h\207\274Z\333M=W\272h\274\035\211\335\274J\"X<\020\340G\274\376\357g<\372\272;\275\030\315\301<\341l\225<\275\325\033\275\337\2630=c\223\341\273\203\002\221<\031\271\222;\245\037D\274\264\205\245<\221\245\240\273\310\367\367\274\016p\034=H\355(\275\340\001Z\2751.\021\275,!\303<\006\247\027<\31750=\233\243{\274\321\334P=\005\331\343\274HA\363\271\230}\244\273\257H\265;5\245J\274\2325\225;\2129/\275\325\017V\275n\364\025\275\370\262\317\272G\034\236\274\250\251_\273\035\000\030=\220\3674\275\275\0252<\226\313,=\016-\033=\3319B\275\344eU=\314)\021\274\007\263\230<q@\201\273\271\245$\273\203?\364<\232!\r\275\351\3612\275\302o\033=\211@\370<\002\217Q\275\301)\016=>\026E=\377\013P=g8\352\272;\350\001\275\215\363\313;\267\207\227<\301\316$=\276n\374\274\326\304/\275;op<5\312\'\275\341\366H\275\332t\224<\365\007{\274\364\267\262<[\234\352\274\320\210~<\224\222\325;\210\356N\275\3219*\275\332X\303\274\351\363\003=\317T\234\2748F\001\274a\214);PGB\274\215\364\330\274)I\337<-\255\200\274A\236\020\275\032\002\223\274\343\244<\275\364e8=\035\361\357\274K\372N=\337\334\362\274\246\262\320\274\010$5=\266\302\310<\261\263)=\206NX\274Y\227\257<\265\2737\275\027\270\273\274om\t=\274/Q;\026\340E=(\0045\275LUV\275\021f]<J=5\275\233\360\304\274AG\013;Z\204!\275]\3223\274\336{\332<\274\212\240\274\224\316&=\304\374A<9\266V\275\202\235\316<\227xR\275\236\227#=V\304\213\274\346<k<I\025\227\274b\302Y=\264\032\301\273\261\345\243\273h\212\337<\275\033\266<\364\352V\274\327\343\242\274\374\251\010=>\273\2109\360_3\274c\223 \274I>V\275\306\346\n\275W58=_\r\361<\305\0212\275\221\321\330<\263\237\237<\304\320C\275O\246>\275U\271L;\033@\'=\342\313V\275|\2326\275\022\014e\274\261\214\267\274\336\246 =\245\311\264\274\211\375\036\275\2373\"\274\320F!\275\361\"Q\275!\007#\275\363M\206<\267\326\274<\237\241\031\2747\240\303<d\010-\275\010\332\276\274\224\200\333\274\306Iv\273\302\236p\274\2658/=pO\030=\245GN\2755\277}<2\371=\275`f\030=G\224\203\273\233\370F\2752\r{<cLG\274\033!d\274v.\020=\006^\336<\357|\255;M\034\217;\244\257\"\2752A\025=*\221\t\275\323\2534=\031\221R\275\215\377\357\273\322<R\274\343\025;=H\230\215\274\264{\000\275G\2675=hx\321<G\263\035\275\216\025\260<&B<\275\273\330\306<\233\272\212\274!%G\275\334\302\232;\3762\r\275\372Yw;\301y\036=9\271.\275A\372\316\274\247\2325\275fT\314\274f\241\242\274d\312\272<\257\212 \275\250\275[\275\254\307\272\274\303\343\323<2\257\250<\347\2213\275\244>`\2738g\360\273\243\323c\273T\234K\275~:\353:[4\270<\357\336\004=|\354\357\274\362E\366\274#\334-\274\255\343\'\275N\261\251\274\253\372H9\001\321;\275\265o\024;\2066><\236\320\037\275,/\020\275\345j;\275}\232$=\177\211\342<\257?\362<I\'0\275\355\221\266<M+7\275\010\3002\275~\266K\275j\231\006<\010;,\275\240\254\'\275Vk\231;x!\334<\262\200\014=\241#\266\274\177\240=\275\343\026\202<\230\0201\275\273(L=a\000\n\274\027i\241<\366\345\215\272/uI=\236`\307\274\262\227u\274\333\300\240;\252\244.\275\017\310\370<\210\214L\275\214\366\357<\203\005\263<\037K\361<J/^=}\347\262\273\312\276\001=\204\3075=\241\3219\275Z\276\365\273c\217\232\274\210\006\025=g*\003=\226\234Q<m\354]\275\325\\\207\274\3177\032=\344<\t\275t\375\031\274+c!=R \327;q\030M<q\205\307<\357yP=:|N\275l\356E\275\263\216C\275Z\207\260\274\014b]=\313\316\013=\246\312\021\274\336\360\036\274E\340\317;\376\355\340<\213z*\275\215\331\254<@;;<nD<=Q\003w\274\302\342v<\343S\t=\037\332G=\372\351\004=\256u\231\274\355%!\275J)\2129\233Tf\273\2068_\274\006%\014\275\200\264i\273\325$P\275\241f\231\274D\230#\2753\360@=\377\310\363<\210\313\021\275py\030<5lE\275\351\3638;\332\306\005\275b\367\027\275\242\314R:(\270\373\274d\205\313;@&;\275\360\215<=\276x\257\274~~\211:]\320\277\274\255\311P<\3524\301<\337}\206\274\335NO=L\200\021<\345\345\360\274W\232\031=\010}9\275W!e;\303?^=\244\244\3709\373KJ=\017\226N\274\207\243\252\273P\326\036<B\356\230<\345\253\n\275_\376\243<\341\352\221\274EgO\275\313^V=\0348\330\274\276\306C\274\232T-\275\030\024U\275L\231\243:\272Z\370<\273!\037=7\374\272<\\\000\217;\356io<Z\005\221\274\211\247\261<\035S\242\272^\031\321<\023n\325<;\006\254\274\266\242\n\275\352\306\2719_:f\274\326\370\221;\3259%\275\036\337\220\274\253\265\321\274I\261i\274J\253\025\275\027>Y=\275\217r\274\037\221\231\273!\'\332\273Y\3114= \026c:^\346[\273v\267\307;\342W.\275Y\304\023\274>\227\032=Q\022N\275\273B\257\274y\367&=jt\001=\2735\'<\014\362<\275\301\352?=\252\267%<Jn\232\273\274\224\302\274\303\243\030=\036\342\272<\024\316\347<\006i\346;\201Ia<\376R;\275\207\010\020=\2352S=\225\334\320<sI\211\274\312\007\262\274\234\374\345\274J\206_\273[\265\270<$\3612\275L\305\2329\320t\304\274ml=\273A\257\010<\324M[<\253\326\234<\203L\327\274\220\364\367<\212 N=Kg\003=%&\330;w_\344<\367\341\003=\322\245F=\200oj\274z\256\317\274\324\035\017<\0044\257\274\252?T\273Qx.=\000\270\341<\3232\230;\016r\361\274\306\363\003\273\030T\220<\013\241\316<&\226?=\231 \340<\240\301C=\212l\331;\327\241L\275\200\331>=Sj\013=\352\2279\275\340\005\203\274F\002@\275\253~\335<(\246\217<@z\004\275\231\231\345<\333\376\264<\205@\222\274\217WR=\327\002\004\274\325\257T=H|\317<ol4<\337\240\031=f\337O\274\274\316\257\274\360l\215\274x2\215<\205\002%=\022\2002=\305\021\030\275\333i9=+\223L\27404\034\275^\202A=3\373\363<\234\247\006\275,TY=\360\331\314\273\276&\205\274LtM\274\254\211\255\274\026;M=\340\275\321:s\347T\275\224\366K=IC\001=\333\033]\275\213\260A=\034J\275<\214]:=\005\320\005\274>&\035\272\025f\026\275\033\203\363\274\211EO\275\337\226\r\275e\330!\275$\312\256\274C\211J\274\343z\3049?\222-=\023\250)==v\376\274\3537g\274g+\370<\266\275G=\351\033\r=\340\205]\275\314\004?=\310GA=V\203X\275;\377C\275xN+<\221\366\273<|\367\241<\303oT=N\341\030=\233\253R\275R\033\032=\230$\371<4\340\347;\311v)=\350\220\030=b\257!<\025\250\374<\277\213\225\274\354\377\247<\213\251\202\271(>\224<\253\260-\275\265\0052=k$>\275\013\006\261<\304\333\220\274\211S\002=tZ\266\274\376\261H=}\325w<\377\202\n=\215\325R<\243\"\361<\274\203I:\2523\356<\235\345\002\275<\330\\=\016\262 \275\221>2\275\246\260\225\274up\027\275\005(t\274\273\364\030=\354J\025\275\234GT\274Ir\237<VIO=(\004L\275\030\020\242<8\014\261\274\210\257\030\275\236\223\223<o\351\270<\273\2756\275\332F\320;R\301\322\273r\220?\275\030\t\000\275\364\250\336<\237}?\2758q\357<\030i\354<\260\\\036<\307\214B=\220\3177=\334-\375<%\276\337\274\3222\007\274X\335\024\275\013|\337\274\245\tg\274+\356\035=2,;=U\014\010\275.\325\227\274\365a\367\274c\212\035\275\037\314@\275r\205\024\275\016@C\275VQ\000\275\313\235\347<\274\000\034<-u\014<\320\367U=\2176\013\273\274\335*\274\243\026o\274I)\240\274\2243\214<fL[\275\263Y\353\274\0256A=\350L9\275\236\273+\2757\235;=\315\022C=\212\271#\274\021,\227\274:c5;0\351\006\273\310V\310;\356\005\313;\247\010\315\274\252\344\231\2743\2637=e<\\=B\314\360\274\305\001?\274\253@\302<\2034\226\274\317#H=\177?\256\273t\023Y=\010\022\033:q\242\274<\013}\'\274\2742:=-\277\317\274\rJ\225\274]\342\351\273\013\233l<8\031\276\274\375;\023\274\351e?\275\372]-\275\036 \363<\225T*\275\266\375\300\274\223\"\374<8a\264\273 \026\031=C|1\275\207g\343\272\325\276\n\275\253<\276\272\017\301Y=YW\\\275[\275\374;\007`\001\275q\245\200<\326\350)\275\310\230\215<L\010\007=*\351\234<6@\"=6\3301=\207+\033=\274U <\345\255(\274\321\016\027=\354\313K=]\017/=\353\177\300<|\315.=>|O\273\366\035\226<*\273\006\275\342\225\010=\306a\254<5\266Z\275I\005M=\305<\326<sTM\275\r\247\277<bt\357:\251\373#<\2738\324\273W\317\220\274\013\315B\273\370RU=@k\005=(\303\224<\252\231P\275|\311\257\274]\002\021\275\225\307\002\273U\201\033\275q\027!=j\362\"\275\320bJ\275\203C_;o\005G\275\250\254/\275\250V\323<\325W\017\274\275A\325\274\313\232y<\022\027\376\273\277PG\275\324\367\002=\250r\264<\033)\210<UT|<\307%\304\274F\354@\275r\022\330<\362h\324\274\327\326\233;\262\277\032\275\205\207=\275K\321\005;\266\335\t\275\030>\330</\236\014=\316\202\037\275\316\033\026\275\266\3349\275\361\005W\275\374\017D\275I\243\217<\341e1\274\251V\031=\276\244\036<A\335\212< \340\333<\205\332?\275\333\237\234\274W\276\303\274U\2252<^\216O\274\177N8=*LA\275*@\007\275\021UD=\266rT\275\254\'+=\353\326\312\273\023\322\267;m\232G\275\331}\207<#c\204<@I\347<P\246\003\275\242i\330;\362\275\245\274\364U\302\274c\361!=\201yW\275Ne^\275\225\300\350<{i\215;\277ZN=\317\236\305\274\301\300`\274#\236\351:Q\361\013=\354\030z;<\316.\275\272\336C\275\263)K=\324\267H<#\334\341<\341\333V\274\316\317%:Yc,\275\256\252\014=\223\317\307<;\016I\275&\0038\275\310\2554\275\325gE=m\014<<z\373\225\273\023\007\223<\340\t\010<L3\316\273\2175\210\274\202\337<\275\001v\031\275Z<\207\2749+\213\274-\033g\274\014\267\\<\331y\313<;\306#\275\245\270.=\246\234\343<\003{\343:\014\320\253<\2140\032=\337\242\254<\342\367Q\275T\366\005\275\301\304\273\274\221\361y\274\353\275\241\274\352\312)\275\257\234\020<\236j\231<\032\364O=\242J8=M\2306\275\270\202T=\350\375\375\274\232\373n<Z\235\254\274$\3454\274\363\207U\275\272\036\n\274\335\323]\274\326\227\377\274\340\237\376<{\016\007\275K\207\n\274m\304\315\274\210\347\351;\007C\350\274Mm\020<\317\372~\274A\271\322<8d\350<C\344\320<}\1779\275\220)\210\274\226I]\2751\374\302<\207\267\223<\026o\374<\037o+\275\2531?\274\342\240\213<\37587\275}\007.=\237SW\275\235\313\320\274h)\335\274\230\366(=)\021Y\274\222[H\275_CY=\222\027+<g\215+:\034\226\216<m`\r\275G\223A<\316+\352<\300!\016\275E\035B=\215\214<\274WJ\366<\363t2\274\322\214X\275Z\030\340\274\3713!=T\001\020\275/\024\241\274\260V>=\021\010\247<!\013\250\274\206\322\032\272UUG\273U,\373\274\3444V\2748\\\032=\237\032;\275\261\316\340<M@\302\2736\r7=\026\022\340<9\201Z\275\221\222v<?\214N;\257nA=\310L#\275\005\336\266\274\272\2504=2\321:\275\337~z<\006\371\317\274p\2720<$\001\304<\037j\361\274v\262\265<\032\251U=A\371\230<nH\306\274\007\307\036=\276\266R\2740cN==\320\017\274\373\316Y=\247\246\023=M\362\276\274\337\307T=*\006M=\345\216\007=\243\202\251\274\314Z\221<\341f;<11h\274\327Rp\274V\'\\\275\331\032\237\274\036\3027\275m\243\246\274\331IR<\371jR\274\363\325-=x\024^=\251\306*\274\034\256\216<1\247D=\250Y\370;\202\375\013\275\256\001\\=\362\211<=\211\227D\275\017\002=\274\303\016\263\274\355\320);\365\254\336<\036\252\020\275T\334K=\344\214\246\270\323\375\301\274\330\312\013\275\223\003\317<F\372W=pc\025=\t\246\253\274\024\010T=\270h\201<D\035w\274J\036\246;W8\210;-Z\307<\242\256 =Xj\247;f\312\342;\265\230J=ywD=\372\007m\274\225\312\211;\320n\035=x\316\004\275RB@=Kj\025\273\017\272,\274?3^\275\305\031\"\274\221 p\274F\262!=O3\344;hG\240<\215\275\223<`\344\036=%\3378<f\203\275\274F\377<\2670\314\'\275\236\213?=\260PQ=$t+=\266\313\201\274\325%\302<?K\033=\002\347>=\225y\235\274\"\204\022<\000\224E=\006\323!=~\365\334<\030\326B\274.qJ\275\273\304\303<a\324\032<\205L\203;\254\346C\275c\n\t=41\346;\003\027\334<\202\213\357;\300\314\351\274\017_?=\306\351\024\275\353z\026\275g\222(\275\321\020}<\355\216L\275I99=\243\233\342\273\206\'6=\232\016\031\275/L\365\274K\274\370\274\265\0223\275#\223W\275`\t\354<\025\004\001\274x\260\207\2742\220\261<\231\203\314<$\324`\274*s\005\275\203\267\316<A#\025=\020nF\272\025\262\255<\265\207$=\210f\375;\304\313\301<\224\333\210\273\034Y\231\274\317\177\316<\231\273\006\275\334=\001\275\000\026\257;\261\t\361<\260\1772\274\266\335\254\274P\026Z<\376v\275;9\332 \275\227\004\035=Z\026K=\357\324P=\022GO\274\210\034\327<\260\316\016=S\325S=\237\037r\274\236\340\222<&\265\244\274\205\307\016=\333\255Z=\323fG=\217m^=\271\332\322\274\226\231F=\242\212Y\275s$G\275\017x\343<\330V\r<\253\265\021\273\272\030\317<\225\376\373<\376s\267\274\032\325\2379?\225\240\273\31788=K*6\275a\216\360\274E\"J=T\223\377\274SZ;=i\366!\275\003e\353\273\361\t7\274\367Y\023\275%k\252\274\304N%;\303\206B=\253\225\010\275\316=\221\274&I\354\274\032\303\330\273\236\006+=\372\351\003\275\346_\360<\251S\244<\016[\226<\317\346I=\350\035\014\275o7\304\274d\0278\275g\277L<\246\177B=\037\240=\275&\273\020\273\016\326\326<L\024\025=\'\031\023\275E\3145=\304kL=6\2054\275=2\336\273\320\361y<z\237W=[\277\322;xm\221:}\005V=/A]\275n\366)\275\230\334\025=6\356+=\362\260\002\275P\221\034\275\037:u<G\222\253\274\331\001\001\275\202z\000\274uC\212\274?X\033\275U\274X\275\020\260\254<y\254\026\275G\304\325\274*zF<\206\271@\275\212x)\275\023\021\010\275\356V\230<AV\340\274\234<\'\274\210\272\212;\367T.\275\264:\222\274+\307\363\274O\347}\271\243\\C;L\216\255\274\223\374L\274\317\306\276\274\tj\202<\220\303D=*?0=\307J\005\275\323;\017\275\2543_\274\237\252!\275\277\213c\274nF\311</\350E\275\"\027R\274C>&=\361d+\274\022X\375\274\363-a<z\177\314<\246\013\031=\276\027\270<\267\245A\275\206\324\014=4\016R\275J\334\340\2747\300\262<\"U[\275\335\236\221<\025\261\212\272\300\236\305\274)\315\014<\352\"&\275\314|\307\273\223V\026\273\266X\354\272V/+\2757-\370;\274\337?=\271\325\271\274\336~\'\275\334\334\021\275\363q\001=\250\355v<\216\251U<\237\036\017=\334\355\226<\267\242*=\032\340$=.\002J\274\376\014+\275\227\213\375\274\305\310V=(\3124=Xd\r=\202<\376\274x\344\007\275\005\274\214\274\306A\002=\nc/\275\340g/\275\230\0008=\007\tx<~\375\200\274\224E\016<\227\023:<\255\370.\275*\022\240\273\254\032\277\274\313\'\007=C\307\022\274\353\230 =\275\374\'=\035\330\017\275G\247\371\274\303\"\020;\2762\005\275^\301\t\275.@\032\275\036D\341<h\201\016=K*\352\272\260\345,\275\226\354W=\'$\017=\257D$\274\207\325I=9\271\374<\014o#\273I\240\270\274)\r\364\273;J\265<\027\244u;+]\336\273\345\315+<\"\\\216<\316\216V\274y\212\361\274Dy\r<\366\202^<\372\312[\274\356m\364\274\205\2615\274\317=\302\273\273~?=\342\017\361\274\364\316\\=\313\0107=\350\305\333<.(\334;c\237Q\275\247\031\373<\370YT=\302\207A\274\324\355K=k\375\310<\255\361\364\274\241\032\027\274\364\326\211<K\006>\275\202\002\007=\331\225X=\251\007r\274\377\033\032\275\3626\260\273\341uC\275\021/\032\273\313\225\313<\364\371J=Q\213H<\346\035j9\274R*\274?\276^=>d\215:\362\227\037\275\333l\301<V\233\363<\307\321\377<\200\365\206<EW\003\275\323,\014\275DB\340\274\341\276\225\272xv\020\275{\212k<\253s\035\275\227\n=\275\237]\246\274\014\"Q<\n\332H=7i8\275\366\242\341<\275\226\2459\200\006N\273\323\243\006<\255cS=\024f\013=\006\305\246<F\003\316\274Y\256`:\272\340\021=$F\'=s\340\017=\371[%\275c\3748\275\2413\026=|\337\346<0?\303<\257\005\005\275\320\377\224:\265tR=}y0=\370\233\022=\266\331&\275\217\r\255\274\252\1770\275\206U\335<\233\367!\275\201A4\275d\0131\275<\267\335\273\372J\036\275u\370\273\273\243w =Gy\023<\251\021Z=\306\325\216\274\226d8=[v\256<Y}\274;\344\237\271<\255\247\275\274\235\036\034=V\031\020\275\264\365\321<\236L\320\2729\266\322<\361\263I\275h\377\006\275\362o\341:*r\230\274\331\3009=\003\335\014\275@\237E\275>\336;\275\326\342\022=}\333\253<\304o\220\273\031P\211:Mg\023<zP\272\274\314\023\006\275@p\252;\227m\343\274\226\307\315;\n\327\342<\225y\260\274\241\241R=\246\002\037=s\360\257<B\207\'<\233W\212<\210M\022<[6\033\275\310\321\351\274]_\235<\373\352\340<a4\357<38\206\272\361\315\001=d\252\277\274\344];\275k\216.=@\t(\274\267\010\363\274\256E\346<\322\350\367:\"\362\341\274\242b\310<\370GS\275F\201[=\036\201\315<\336\0247\273\024Q\317\274\364\273\242<\375\017\221<\260\375\037<\315\316\\\275\272\005\024=?\202@\274\343!e\273H\226S=x_P\275\t\250!=\277\013\202<\2423\376\2744\002D\274\300{\360\274B,\357<U\354\371\274<\310.=\260~\243<0;\371\274\270\224\034\275$\233G<\262\000X\275!0\031=hF\\=\250\344a\273\322\2247=*\355\035=b\337C=\177\256\350<x\377\350<\246\345\350;>\210\200;\327\226>\274~\024&\275q\376G=\361\272\273<u<\000\2750\356\317;i\235\365;>\376G=\003\3605\275d\360K\275\227\025\'=\020\n\336\274\275\373M\275\364\036V\275\225^#=\345\2562\275_\267\300\272avP\275\374\326\022=BI\227<\305S\315\273q\323\374<\275\260*\274\257\0108\275\222\022\345<\305\377\024\275[:\366<,\027\321:\037ET\274M$\036=\305\322#\274\313\304\'\275\023\335\350\274G\2366\275\370\341J=L\3407=x\022I=\245Q7\275\260\261\n\275?og\274\253J\026=p5\002\275\t]\330<\014vM\275\0233\037<h+N\275\313l\222\274pA\274\274r\3753=\3057\017;ld<=\263\327\022;\241\003,=\226<J\275\\\317\326\273\237\244\363<\375\244#\275\371^\024=\272\0316=oi\2739%\001\347:\240\201\017=#\257\031\274Q\206\351\274u#\270<\000\312?=9\212\000\275\234\024\357\274t\2004\275\210\254\256\273Cp=\274\005F*=+\326\r\275:KV=\270\221W=\353{*<\253f\324;\315\230\340\274\310\222+<\347\000\375\274An\004\275:3\256\274\025\315C=\014\345$=\212:\316\273r\251k\274\327\230\177\273\226\027\n=\276T\270<=\0355=\307\327\356\274\335\337\035\275T-\036\273\252\350\036\275\221j\026=\336\313\031\273\027\032\211\274^YE<J=@=\342Y\017=\364\005\016=&\310-=\300=n\274k\365x\274\224\353\212<\024sS\275\264\261\221\274\024\031g\274\250\021V<\357C\032\274\233\316\317;\233\"?\275\266\024\025\274\366_:=\371\027\275\274\017\257\371;E\376\004=\347\350\217;qe\242\274\266\377\300\274\352\240J\275\3216X\275\300M\256<\317~\210<\253\341O=N\305\021\274h6K=\305\205\207\274\306\037j:Vy\265<\351\233\035\275\020\003\347\274\351\311^\275}\347@\275K 5=>\\=\275J&3\275a\364\030=\337B!\275\376\371\031\275\255\364\267<y}N=\240\302,=\263$\320<k\232\031\275\221V\240\274)X\274<m\326W=\3358v:\036T\241\274>\001L\2753\222\005\275\023E\215\274\204\276\024<#S!\275\217\023\006<\332)\340<\371~\263\273%\010\324<\222#9=\213\273\360;\2527\306\274)3I\275lx\000\275B\320V\275\251\2164=\351\014U\274s\3041\275\243p\232<#co<c\223Z=\373\346 <0\320E=\346\322\304<\345\036\327\273:\355<=\233\'\032\273r\237]\275V\026\261<\257\326\'=\376\031\330\274\265fQ\275\311\2050\275\217kZ\275\326\n\021<\037\315\230<\315\016\215<\003\222\275\274\217\025\014\275\302vA</\224\005=\002\365V=\021K\000\274:eV=\324\327\001=\037X\355\2747L\375\274\357\372\206<\r\203\005=s*\t=\206BM\275\004\362)=$\223a:\244\276\227;\323\216C=H{!\275\214I\036\274\303\377%<\253\243\313\272<\003]\272\024i\206\273j\304\014\275\216\ra\274oI\270;&\305A\275\034\'\212\274\201\253\017\275\232\2640\275\202v\002\275B\244\252\272\357\200\037;\320\377\035<|\000A=\340kL\275!\271\230<x^\363\271\257\253\372\274\231\251\257\273\376\362}\273\002g\025\275\336\331\017=\351\323\373\274\216\367\203\274\225(\250\274\202U\006=\303\030O\274\266\276F=\010\325\360<\\[+<\273P\227\274 \277!=@\005\010=a\3471\275\0073\360<8\201\"\275\373\331b;z\020\021=%\251\206\274\255}?\275\226\224;\275\023\246\232\274\211D\215\274\037f\201\274P\021\027=\376\333J\274F\313+<\215_\275<xO\310\274\345>V\275\007\247\357<\226LM\275\026\325\021:+\330\300\274\264\035\276\274\020GA\2740\035]\275\243^\005=\327\271\010\275xWS\275u\206]=m`G\275!\212=\274\242\373\211\2746\365P=o\014&=\313$#\275&\361\001=\36043\275b>+\274\274\215Z=$\217J\275L\372\331<\r\243\356\274a\3572=\373\207\212\274\321+3=\001<P=K&l\273G6\220:\006\377\246<\306\315V\274\332\355\203\274\241@+\275\377J\277\274(\352\256\274\365\013\266\272%\254J=$\323\007=m\214\347\274Z\3278\275\033\231>=\230\205\213<\347V\036\275\253W4=Y\230\027=o\255\020={\020\365<\306\247\"<u\330\227<v\220\333<\256x\270\274t\375L\275\351\030\232<\301\247\021=\267\331L\275p\025\203\274\035\021\037\275\225$\311<\354\010\205<\236)\365\274\304\035\323;\034A\332\274\363\0043\275U\212X=%&P=&HG=\366\320\234\274\334B\t=\212\334\332<(hT<n\350)=\003W\030=\334\023\233\274E/|;kI#=ob#\275\332s\342;W\204\375\273\"c\200<\347\"V\275\322K\376\274\2775\031\274\255\254\035\275\010\024\251\274\346\350\357\274\330\217~\272\202\232\034=\016h\345<S\326U\275\334\305T= \035\233\273\024\364\360\274\027\234^=\2318\214<1K\262<;\263\272\2741\371N\275v\324\037=\353\004\'<#jY=\007C\014<\352\305\272\274\274\010\005=\305\274\004\275h\021G\275\271-\030=\204p\225<\251Ev\274\301\340\206;\244\314\021=\001?\020\275\303i2=\230\021\365<\314\213\030\275\255\343\225\273\314%\364<\210\305L\274\326(-\275\324H>\274\256\367\273<\302\233$\275#\027\211<\235\032\343\274\217\247!=#:^\275\302r\271<A0\367<\354#\370<\260\202/\275\0012\360<\027\017\'\275\013\351><s\001U=\234\3249\275\275\344\034\275h\301u\274\200\304d\274\200\303\030=\271\324?\275\211I\2668\337\336\254\274\211\006n\272\036w\033=7\321\024=E\240\026=X\013\245\274\233\031\313;0\230\225<\000\204\254<S\0065\274*\207\270\274A%4\275[6I\2754\034V<\231\344\275<\253\222\035\275\037v\350;\324WQ=\td\016=\245,\033=\362\032\325<\352<<\274#\354-=\r/Z\275\371\304\364\2748uT=\316\\:\274\326\226\036\275\2450\023=\272\347\325\273M\244\213<\026!\314\274\223;K<a\n\211\273\200t\270\274M\034\254<\257\344\246\272\232\\\014\274T\'>=\036\266\253<a-1\273\216\301\013\275\332a2=\371S\371\274(t\245\274\035\2646=\305\377\337\274\377\322?\275\335R\001:\315\223\030\275\336E\022=Y\356\236<\360\211\331<4/\037=\2006\244\274\320\304\250<\221\241\300<\243\267$\274\346\376\317\274#\272\353:\372\303\022=\225\217\244;\336\227\t\275e\3250\275d\374[=\016y\315<\013\350\300\274\356\037W<\323\301\312\274\355\357<:g\235#\275Z}<\275\210\010^\274\312\376N\275\320Y\216<\'\0253\275\026\254\235<}E4=\036\2155=\"3\003=\2356\202\273\242\256F\275\003\tK\275\201|(=\210[\260\273\226a\027=\202g\023;\026\252\027\275\033\005>\274\030\276\t=\021O\251<\036\260\033\275f\200\213<\024\'\301\273\373c7\273\000VF=\\\013N<\014\362z\274\0347\247<\255]\'=\241\002\361;\244i\221<\275\267\350<&\017$=Zn*:\227e?=r\247-\275.\"!\274\324\3661<i\177\032\273\000\213\332\274d\345\214<\006\254A\275M\233\023\275 *H=\351\2650=\320\t4=\223\317\234\274>\026\267<\270\332\014\275\322C\245<F\343\373\273S\016==\352z2\275\256\226)\275b\337\210;\0209\360;\353\362\305<=\322\022=s|\'=\246\354\026\275\367\310-\275-c\267<\n\205\235\274v_\220;\230\242\331\274q\270\232\274\353\206\004\274~2<=%1.\275+x\001\275\303\376\361;3\251\335\273p98\275T\211H\273\277\022\025=Y\272N\274tf\343<;,-\275_\221|\274\244_4<uC\331<w\317\247;5\231R=\331\347\010\275\303\2140=\247\276\034=\005f\211\274;\254];\312\0245\275\n\306\336;\2105\\\275\355\234#\275\014Q\023<o\363\\\275 \020\254\274\203t\237;=\364\251<\232\210[=\013.\261\273IB\245<\335\372c<G\212\373;\270\307I\275\366\t\"=\244\201]=\262\317<=s\273/=m\025O=\03029\272\021\000:\274\306\\\204\274\350R\315<H\001\313\274R\201\320<\2733\005;Z\262\026=\353\232\001<@\032\264\274\307NL=%\244<\275U\224\010\275]\200\236<\0254^\275\265\026\351<h\276\032<\315\2361<i\310C\274p\237#\275\344\310\201<\376\373L\275;\275`\273\357\267&<\377\376\313<\212F\002=\320\321\301<Ze\016\275\242\000\332;\360\366\251<%y\313<=\317@=\373\025\237\273G\326/=\300\224\004;\204H$\2758\277\340\274c\024C:l]\376\274\252_\346\273\024\220\002\275\006\322\301\273P\035\013\275\261\033\005\275\236\376\013=\2346j\273\210\332\365<:\313\373\274\341\205\314\274\345\307\035\273\202\303\016=\246iC=4$?=;\300\222\274\2502\302\2743\345a;;\274\210\274d|\321\274\t\252\361<\300\302\017\275\360ED\274\220X2=\246\323@<\317Z,=\353\2777\275\365\352\245<n\276\305<\376\272\014=lt<\274\\Px<\024\027\274\272\220j\204\274\n\234:\275]\n&\275\340\000\014=A\347\024\275p*\001=\226\240\374\273\2141H\273\277I9<<\372\204\274\227p\017\275P\030\330\274\220hI\275\3429U=\025\236#\275\260`\344<\366\303C\2757\314\217\274$\276\366<\373\255\313\274\320\001\336<\357\203\336;\361\316L=\306\001\231<\375Q\232\274\264E\354\274\234t\300\274\373bM=\237\370[=\376\362\373<\362\345\001<c\275Y\275I\234\t=\224j\020\274\361P\002\275$\3554\275\316>\022=}T\342\274H~\201<\243}\376\274\177\237\224<Sa0\275)j\371\274\367X-\274`\242E\275\375\342J=+-\216\274W\230\003\275mD\335\274<\342R\275\337\314 \275\302\213X\275\206v\025\275\235\334\322\274\352\363\257\273\323c\241<\242-W;\360\001\210\274\n\3344=\267\332\236<z\254\312<\362w\247:\243\025\002=\024\223\266\274\017\317\004\275R,:=%\212R\275\033\277\030=\2239<\275\226\375\3419&\276|;\354\3741<6\3517\274H\372\212<(\024\t\275\3151\313<\360CY=\344\201\333<sf\211<\216\305[=\204\246#\275\005\010\007\275*\034\031=\262IR<Q[\303<\357\251\227<\026JS\275\no\226;\364\223\233<-\243\201\274\017\217\033=\374\306\201\272\322q\006=\277\030T=\261\275$\275J\320\001\275\277\303R<h\207\204<\313\272\016\275\010\305\240<\341\261\302\273\357b\023=5\360\351\274\263u^=\356\260H;\315\304M=K\225\033=\200\367\200<\306\335Y=c\035\n=Z\327-\275\204X]\275P\214\203<\036\311\222<\306\311C=\034\310r\274\003\345\203\274\016\217\003\275\253\251@=\316\254S\275\r\261\345:\036X\331\274\246\004\t=\374t\344\274:5E<\353+@\275fO\205<\225!E\275\203;\373\274\316\211M\272\367\214H\275\371\345#\274\3615\016=\177M\001=\004CE=\037%|<2WA\275\220\360\035\274^w\024=J\032\351<\035\271d\273Y\2513=\256\270\256<0\006\321<\264\303\256<\214q==r\324\252\274\027\244:<\323\006\\\274\000h\014\275\205\367\325\274\350\275<\275\237\202Y=x\252\312<\274R\242<#/\204<\322\206[=\2502\267\274g\0345\275\257=\357<\243\\q<\002\000E=\030\366I\275\204\312\331;\177J\201<N\315\272<>\301\334\274\306\310\026:\364\033\021\275\032\341\007=\37132\275i\027\312<l)V\275BF\016=J\301\325<\367\025|<|\306\245<P#\342;\250\365\026=\225gq\274\034\002\035\274\347\3124=Q\365\037=\372\272x\274\244\220J=\314\247\003\275M\221C<\261\301O=3\0215=Fa\225<\337\315\351\273E6K<X\227\357;\ttQ=\206]L\275\235eV\275C[\313\274\317\200\274<\227w0=#\315\243;\014~G=<C\033=\n\273G\275\362\234\n<np\263<\241q\234\274#\350r\274\310\345\004\2751\033i\274Ro-=\337\232\265<F%\353<\310v\225\272\231\313r<[\275\334\273?\216\346<I\177=\275\031\223\324<\214v\024=\340\215<\275\321[\000=\034\355\010\275k\r\256\274f\232\266<\244\2357\275\220w\265<CZO=\265\257Z\274\200\264\261<WV\016=\034\275\r=f#\353\273\354Pr\274\325\326\027<\314^T=\260{;=\226\253\232\274\301z\"\274\353\177;=m\272\352;\036\375\014=*/\241<\177\\\005=\312\340L=\027\256\225\272\255\252\026=\252bL<\333\242D=\321\302P\275\325u\013\274]\033S\274U\315Z:\222\312\005=A\343\234<\232\332?=\360&\010\275$W\355<\373\361;<;h\325\274\" \026\275\034&\204;%\337\"=F\251b<\207\325\317\273\346^\266;j;\263\274\251\355\027\275\255\3536\275\373=\007\275\003\206\332<\033rx;\0329\373<\374\261>\275\021+v\274\316\346&=\372W\366\274\007\2325\275Pb\000\275-\000\316:\342b\234\274\376>\324\274\302\037\243<\301n\010\274^V6\275\360\017L\275\2718\'=F\302:\275X\3067=\211\r#<\320\347\256<aou\273\261\3313<\227\211\014=\321\262N=\243\177?;\321\202\010\275\220\016Z\275\211\223\004=\247\337\'=\304\213G<y\307#\274\376\027.\275\366\3472=\007\260\266\274R\264B\273{.R\275\271\203\343<o\254<=\312\255I=\303\2204\275\312g\023\275\021\221\201\273\217\t%=\366w.;\267\276m<CV\211<0`\233\274\030\025(<\253[\300\274\201u\036<\270Sr\274\232\010.\275L;\365\274\277\326B<\314+\375\274\366\313P=\0057\360\274\003\255\244<\340\024Q=H\205\335\274\001\255\250\274\332\216\033\274\327P)<\035)D\274U:\312\272\252\224\r=\227ef\273A\232C\275\312\216\037=\274\343\221\274\201[\032\275J.\371\274\257\331\247<2\226D=x5\331<\2007\306\2748Q\265\274\234\254\035=\"\252\260\274\304\240\334\274.:\367\274\335\334D\275\253\324!\275\303\037\345\2735V\201;\336\246\006\275e\210\001=\366\264\215\273\215\2650\274\016A<\275\021\202\205<\230\036\004\275\307P\213\274\211<%<\233g\322<\221\2517\275?|\021=\200\3768\275M`\364<\352\346b<\2245P:Jk\r\275\344\033\340<\375\215\001\275q\327v\273\001\300 \273\236\247\014\275dk\014;\335{*\275n}\376;\266\326\025\275\350\322G\275\265\234\216<\360B\230\274\324\2135\274\223\020\367\274\004\255\020=\03171\275\017\307\024=\242\316\374<\247\\\000=\270\2670= \350\351\273\276\361\n\275\364:\256\274\3529\316<\375&\005=Uu\020\275\222\032\216<K\212<=h\025)\275\333N\277\274\r\007\002;\035\3077<e1H\274\3633\036\275\221\014\036\274$\032W=\244:\361\274\302\236B=6GR<\321\035J=\211\336\223\273\326\371\"\275\345Y\005\275{\n9\274\024\237]=\013\351[\275\304g\313<L\303T\275Q\222\352<>\212/\273L\2279\272n\321)\275\205`\354\273\216\036\t\274}B\244\274\267O\274<\317l\213\2735\372\342<n\376\252<\241\315\030=\202\351F\275B|2=\330!R=\024\3040\275A\304\344;\014\264,\273\364M\216\274\265\377\010\275a7\'=)N6=\306\000\025=\201\212F=\355I.\275>\300\250\274\342gO\275\223C\334<8I8\275\360YL\275\266\333\207\274i\322\000=\222\227\310\274jW\027<\rQ!\275\272\260g\274\340\270Z=M\2346\275\t\207\037\274_\214\317\274\210=\271\273\347\375\360;;:*=\312\241]=}\007\037=\3447\325;\002C@=j;\331<\234\023\204\273\230t\035=JV\027\275A\037$=q\037\013\275\341,\004=\023\350\t\274\027f>=\347\023\005;#\357\300<\371\217\025=\324\334\022\275\250\363\352<$E\241;p\3451=\235\242V\275\334\313\274\274um+=\233\344!\275\032\202O\275_\022G=\251\264\222\274\315\022\307<\341\354\\=o\315z\272\214h)\275.\030J\275\010\2742<\313\001\216<\034\346G\275\016z\343\274\3270P\274Q\334-\275~\013\324<\245\014\367<\304jF\2734j\253;\031\0027\272\"\342\036\275\021\272n;\014Z\372<\362\2154=\277\031G<\306\014^\275?\3537\275\230\327,\275e\330\006\275\275r\303\274q\305\356\274\030\007\232\273\234\326\000\274\303p\241;\231j\241\274\347#\005=\302C\030=\345\363b\274\003bG\273\243\361==987\2747\215\377\274\210\331\347\274\036!\217<J\306w<\002\003\374<\235\3272=\024\3554=C\017\336<\002\210\376\274\273\t\337\274\321\216M<\005x\312\274\376\371\005=\022\016D\274X\317N\275vO\031\275u{\335<0\234\002\274\203\264==\275R3=\272\3763\274z\356\304<Au\005\273kIu\272,r\372;T~\351;\006\255R\275@d\"=K\346&\274\233~\342\274YXJ=l\252\310\274h\305\245\274\036\371\245\274\035\356K=+3\347<\177\023\337<\250\255#=\262\241\213\274m\362(=db\340<U?\n=e\036E=p/\023=\022\3019\275\2775\337\274\027\250D=\314[Y=J\350:\275\2065H\275\233##\275\201\336\231<\261\217\"=\314\265c\274V\250:=(\212\366\273\204x\326<\224>\237<~WL\275x\314S=\010\341\325\274\271!\017<\376\207\261<\260\025\270\274\335\342\031=l\234!=\304_\373<\324\376\212<\366\n\r\2742q\340\274\201\362\347<\210\001\316\273\204\331T=\232\020\273\274n;W=\021\232P<\263\037w\274\302\265J\275\237\014\323<V\021k<\354\256A;,\211\031\275 %\202<\255\243V:x\321\005=\177\0209\274d8\252\274\305\240\006\274\334\016\010\274s\034\017<r\277\253\274\240;\350<\356\325\017<\262\177\244<5*\350\274\300\353\233\274\025\312\337<\327\316\020\275\022\320\002=\035)\021=\"(Z;\214o\246\274\336\223\300<E\264==\201\302\006\275\022\232\332<\353\331\366\274V^*=\245gd\2732C\316\274\336\210\303;[\260\266\274i\371\\<k\206\335\273\257Z\264\273r=F<\265\261\005=T\005(=\325\020[\275\207\036\017=A\212h<\376I\032=H:C\275\271\311+\273\026\274V\275\234\031H=\251\036a\274\266&\303\273\035\037\315<U\037\017<\211C\301\274)\205\033\275\201\365W\275\373\216S<\302\312\237\274L\363$=\362\213\346\274\260\332R=\256y&\274\177%\035=\325\261\026\275\304\335 \275\177{\372;\245)\021\275\3605\211<\304\240>=\010DJ=\033\016\016=tD\241\274\344\346]\275\306\303\340<\224\365\317\274\021Y1=\223\206e<C|6=\366F\253;/\200^=\025\237\000=\330\241\336<[\030\356<\004X\336<\266\013!=\321\001\217<\315\241\234\274\250\376D=\360H<\275[\321$\275\\YX=%3K=O{\000\273\211\255[\275c/\034\275\226\010\240<\270\034p\274\367t\366;\224\000\362<?\347\333<\233`\274;\313\027\022\275\206/$\273\035\0176\275\235\020g\274\255\265w;\033\316\266<C\314Z\275\223\210\323\274\212\267\2339\032\241\014\275S:\374;\026M^=S\371B\275\335\241\024\275\324P\007<b\215P<q\2474\275\010_L=\317\277`;\320\364\253\272\200\271\245<r\014\240;I\366^\274\203\275K=\007\250^=,\263\355\274C\014K=\324?[<\0347\000=\237\323\003\275x1;\275\334 \227\273\006\230\"\275es\002\275N\013A=h\310P\275\305\305\002\275\375\'\033\275k\330\036\274\355\274@\274\317\006+\274\303\3656\274\252\2012=\013\3741=\240\256{\274/i\027=\301\311\007=7\352;=\210;p<l\n\252;\000L\036<XD\323<\034\'\366;\333J\236\274\333\313d<F\2478=K\214\002\275\357\274P\275\016\036\033\274\246\217\273\274\253MG;\227\221H<{Q\366\274\236\3201\275\037YZ<\t=4=z\250\213\273\237\333J\274\223\203\\=\216\004\271<i\326\204;\224\302\014\275I!T=@=\340<\027\225^=\320\304\335\273\304\317\000=\026<)\2735\0276=\225c\315\273R)0<!\354\203<\321Ni\274\'n1\275RB\307\274\243\320\035=\352\301 \275\276\341B=,Z\017=\313Z\003=\t\320\213;Y\274\313\274\000\376\224<\304\315\246:l\001\r=\032 0\275s`\025=\356\265l:5_\344\274R\332\016\275%\026\217<\250\213\024<\326%\006=\213|\r\273h\362n\274\271\205\301<\003K\030<\010\207X=\213$\n\275\263\233\023\275l\350\347;$\234\243\274\216\310O=A%4=9\007\032=\311\260\014\275\234\240\r\275A\372G=\254\204\316\274q\341\365<\315\360\304;s\206-\274\003\016\022\275\373\312\033=\002*7=\364/=\275A\225\354\274\024I\252\274\303R\300<>\\\231<k<E=\0078#\275S\1777=\273X\034<\t\250O\274\351\234T=Vu\210\274b\007B=q\371\226<r\342l\274\236\2154\275e\321Y=\216\213\220\2720\323\334\273\337o\r=\"(\020\274T\020F\275\313sD\275K\360\n\275@\263F=#\322\330<\251\267\010\275/\373\346\273\025\202[\275h\017$=\372\300(\275Zv\0078z\223\352<9\221$\275@\2568\275\017;)\275\271(+=\207\360F<\313uX<E\360\237<Z\300\215<tn\274<\241\231\027\275\201\277\020=\357\307\351;\025\2011;,\341\021\274\345\307C\275\317,\201\274\315W\t=\337\361,\275\275\262\237\274\346\367\375\272F_}\274\\\366F<\213\207:=\365J\350<6\334\n:u,\220\274f>\272\274\274\270A=.+5\275\221\330\263\273-`%\275\231\270J=\033\241\r=\226\351*\275l\260@=\355\247\031\2744\210U\275\310\371\003\275O\025\306<%E\303<\336@\223\272\036\317\021\275D\215\r=\270\341\223\274\264\203\026\275\215\033S=\257\217]=\357g\242\2738Vf<\255z\237\274\277\245<=\343~\265:F\004\\=\372S\302<R)\277<8Nn<x\3326=\244pQ=\334\t%\275\300\335Y\275\367\253+=c\240\032\275\310\021]=\233\240d\273\262\004\200\274\365`\243\274w\322\024\275\236\017\326<A4c<\205\3351\271.4/<\007\311\007=\270\242\335\274y6\274\274\000\304P\275\234\325Q\275\016\010<\275\315\222K\275\031T\351\274X\2132\275G\326\254\274,\277\"<(0\007\275t^\263\274\'\267W=\002DJ=A\331\375;\352\245\036\275\235O <\337\030\330<\252\207;=\3278`\273\315,<\275\223\323\':\346\223M\275C6\r\275e\0107\275\211]@\274\337\360U\274\224\205\372\273\3142\230\273\3765\r\275\033V\222\273\235\211A\275)\022\345<\262G\206<lr\013=\316\360\250\273t\226\372<[\251\024\275p\024[\275\373Ok\273L\022i<\326\033\020<]I\014=\375\025\271\274k\271\271;%\021j<\025_\013\275\242\377\373;0\307\032=B6\027=Y\337\316\273@Z\304<g\316}<I\227\364\273!m-\275\032\251O<\236.\006\2756\241%=9/\"\275]\213\363\274%\032\340<\277\217\264\274\205iF\275t(G=\027\243\355\274\271\304W<\316\026N\275g\324\341\274\341P\326<(\316\210;\026\340\211<\323\026\035=\274\255v<l\264\256\274E&\007=\000kv\273h\330\255<\003\343Z=*\312V\274\377/\266\274GU.=M\322\253\274\362\332\255\274V\377o\274\350\277\351\274\377\333\231<\242w\364<;\331#\274\304\327+=\027\335\000=\213(H=.pX\275#\331A=\3047U=\314]E\275\204\207\341\274\371\327?=RK?=\211V5\2754\306\t\275\21418\275\031\325\260\274\317s\264;u$\\;\t\326!=0#\000\275\362\001A=\332\320#;\022\3516\275\205\255C9\007cC\275\010\213N=\205X9<C\202]<w\237\010\275\tT\256<`h.\274\264\244\231\274\372\340Q\273\272\211\314\273\336a|\274\006\206\026\275:\234\323\274\346\000Z;\002\024\036=\\\352\262\274e\262)\275j\350\020\275\220z8=\014\215\321\274\214\347\272<\265|*\275\317`\027\274\336\354\014\274\rb7\274\210\035\301<\022\2000\274&\204\247\274\300ef\274\030\022C=\252y@=\"\300W\275r\247{<\255\377U\274\346\242\302;*\n\207\2741\207t\274\310J\351\272\312\342K\275\367\361\360<$\361\001=\375m\006\275K&\017=\265@\025\275x2\353<bPT\275\033P\330<\225\000G=\351y\235<6*\225\273\257\001\304\274C\317\251\274)LJ\275Q\010\016=cI\001=\023\2765\275\336eM=\334\212\005;O%\t\275W\306S\275\024W\311\274\034;G\275\'M\302<\024-\261\273Mw.<\332\362\336:*\244 =-G\370\274s|\232\273\177S.=?@D;\311\320\374\274E\345\302<o\3412<\326\325\010=W\317\r\275\214\250\356<\203\371x<\226\304\007=\223\005>=\001\270S=\242\364\022=_8;=[\344\372<\365D\277\274^\0367=\376?%\275\220\355.\275\216O\275\273\275\326j<\240\316\302\274C\227\035=\333@^\275_\306+\275\0008\022=\2726\344<\304o$<:lI\274 87=\253\364-<\rm\031=%\202,=\327](\275\376\260\212<\215\374\260\273\311\031\244<\034a`<3y\271<>\372V=\245,\034\274\231\303\252<\0179.\275\023\311\035=\017,P=\007=g\274\331\374\324\273\030\327\033=^\256\252\273C\311\036\275\255L\357\274n\344\262\274e\353\257<W9\264<\004i3\274\037\240]=\034\346,=\242\030V=\315\271V=\373\273\030\275hc\020=\003g\316<.K;<\216\246\226<,|y:\273\177\016=\005\215\371\271\026\300k\274\'\247\361\274\277\017\036\273\006\300>\275\022C\351\274\241\341\245<\235z5\275U\310\001\275\013\022\357\274\310\371F\275\265\"\010\275HW\020=\264\246S=A\237\304\273\222m!\275C\372\240\274\305\213\375\2746\002\343<\2558[\275\273!@\275/\206\241<\035\217/=\245%[\275\007\373\016=eU\356<\200\3440\274 \313B<\005#\214\274\300.\t\275\301\257\226\274\'\317V=d_-\275\335C)\275\024\2663=\336\205\010\275\320\247\021=M\354\366;M\232\027\275\310bR\275]e\013=J\212@\275\'\'\227\274\0024L=\004\320\026\2756\316\315<\206\326\377\274\025Q\031=j,\031==<\006\275\254\017@=N\274\370;\310eH\275Kd\375<qbt\271\367\256R\275L6D\275\001\346\\\275\246\345G\274\353o\036\273b\032^\2750H\215\273\301\201\005=\205\250Z=\224 A\275\337\"\326<\rs\230;\0107\240;\322\327\225\274\310\001\275\273I\0161;\306\316\004\274cI+=\037?:=\247\030\321\273k\317\017\275\351\020\014\275%\331G8\263t\273\274\324\367\267<\023h\"=\267@\300<\316\346\371\274C\024\223<\005l\364\274\305\216C:\227\375^\274\273\205\016<\200\204\312<v\t\304<7\2648\274\212Ri;\340\270I=\316v.=\332\224#=\243\365u\274_M;=XQ\002\275\32231\274}K:\274\223\0008\275\276\246b;:\267\037=i\3306=,\377\311<\236\034\230\273\201\361\216<\265\014*=\330&/\275X\310\223\273\237\037\\:U\003 \275\001i\016<\353\002\204<\270\307A\275\307\307\335<\246[[\275J\3367\275\306h\235\274\216)\204:\234\362C=\257\330N=\241G!=I\004\030<\256\314\024\274c\001\032=\370\'8\275\301X\030=\367\311\010\275w\016C=6X\362\274\000\323\025=\":3\274m\271\336<K\324\'\275\352\253\322\274\320\365d<\367\315\000\275\257\014\277;\001b\305\274\'\274\026<u\212\377\274\241\300{:s\244\267\274V\275\322\274u\201d\274\321\005t<>=\323<?n\325\274\332~\306<\302\"\030<\361\222f;\264\033\005=\367\345\300\274\221\306\022\275\270M\377\274}\256\250\274F-\030\274U\222Z<\362W\023\274\212\327\327\272U\'\363;\376\376\345:\242(\205\274\247<\266<\312\262\366\273\r\233\273<[\357D=]u\023\275\305/\202\273\007=1\275\354x\300\274\3333\222<F\006\332<\200\375\343<\036\377!\2751 5<\251\346\023=\225P9=\014\206\000;u}\177<mP):\204\304\244<\215Q\253\274\243k0=\274\252\376;\007s\377\274n\"\346<\205\024\241:\345\3506=\3153\311;t\217\210:~uZ\274\033\224\320\274\344\3662\275\361g<\275U\020\367\274\251\310:\275\377\201\003\2750\231 =\221\375\363\274\360f\251<\255,B\274\377b\024=\322\243\233<Z\220X=~\003\035=\031\0262\275\237\003\377;\275\276t;\350V\216<E\227\013=\205Ce\273\310r\000\275\253\374;=KML\275\276\337\031<\214\023P\275^\002\005<8vI=\270\246S=ZLX=]_\300<\320NT=,\346\023=\t\250\316\274\377M\336\274z\277\273<gTC\275t\351\311\274\376\334m\274\241\024\212\274\264W\371;cx\025\275\"\246X\274.\357\036=n\353\200\274.V2\275\270\354a\273\020\362\022\275\364;\262<\362\035\343\273-\017\035\275\t\036f\274\370Ti<\221\2052\275\007\'H=\257\317\034\273\006\3769\274\030a==\342\007\332<4NB\275h\223\267<\014p\"\275\342\367\030=\"\257n<H\304\375<\202\246X=\341=\001=\327B\305\273\024\347\022\275\300\345\341\274\206\312\t\275\327s*;\030V\010= p\371\274\014\213\234\274\274\\\t<\256w \275B\251\276:\202\001*=\340\276\347\273P\275\346\273\000\n\373\274_=\031=<D<==\310j<t\350A=\343\252\260:\020\377\255\274\232\034\277\274\357\241s\273\r\205\266\273\034\304)=0\245L<\344,>=,\212\300;\330\037<\275\324<U\275\205\337\307<`\261\003=w\032\312<k\"\226\273/\031\263<2\312B=5\303\322<\265\340\003=i\020\000<\353\207\317\274E\233-\275\nW\'=P\277\345<T\340\263\272@\343\212\272\030\301\341;\362+m\273\004\234G\275q\036\220\274\326QV<\310\3614=\364\201\267\274\016\376\311\2747<\322<\320\345\335;\223\233\213<\351\343\234<\331\n\366;bs\244;\340I\332;\240\004\265<{+\"=Y~[=\004\2621=\357ZR=\3157\035\275T\033K\275\304\235\002\275(\272\\\274\026@\360;\327\3076=R\312Y\2745\036\312\274\352d:\274\3354\353;\007\352\310\273\r\203H;\214$\342\274\306Y1=\371lL\275_\252\226:z\352\010=\274T\024=\327\265>=\354S\034:\366\331\034\275\n\245\204<\317\234$;\222U\323\274%\216H=2\310\233\274\314\023\345\274 \252\216;1\203\021=\312\274\373\274\232\033P\275Udv\274\\\375\030=\235\202]\275a\3714<+`V\274\r\235\350;\035\224\214<\334~\240<\255\037\007\275Pg\366\274\203?\347<\265q)\275\267\270\342\272\177\220$<S^\0309\231\203\005=\224\232\t=\223yT\275\216\304:\275\356S\327\274\237\216\036=94\005=u\3426;\241L\354;\t\331\240\272\355\362\256<B\245\272;\031\345\177<\303\235\306\274\224\001_\272a=G=\262\177[\275\242\2245=\n\375\230\274\241\323\215\274\331E\006=\277Qq<\245\027]=\350?N\275\263\tX=\034\343$\275\272\361\374\274C\253b<\344<8\275\021\331\026=\376\2669\274\362\034\305<\352+\336<\0164B=\347\352\024\275)\313]=\356N\366<\211\2636\273\366\177\227\2747\242\324<\363\236\027=\304\375\271;2\024\240\274R]\034\275\301*==[(>\275\260C\331\273\342\302-\275U2(\275\277\266\021=\334S\"<\352Z.\274\343\336\376\274\343\226\014=c\2311=\307b\262\274\005\020A\275\250\353P\275sR3<\240-\'\275\356/i\274\210\235.\275\263\363\026=/\333\'=\375\3505\273\324\346O\275N@\033\275q\307\267;\257\262\034\275\211-E=o\331\343<\006\357[\275\336\226\372\272Y\022\333<\236\031\321\274\336\331<=E\260@=7\245/\275\010\351\251\273\024\221\200\273\376\266<\2759\202\324;\r\2665<{\3050\273R\312M\274}\272\016\275V\2425=\034s\274\274\006\247\177<\314\366p:\034xU\274\242\0142\274\334\305\300\274\332\340\276<\301\341\202\272\371\205\224\274\251(8\275\220\2166\275\'\2709\274\224\221$\274\221\227\327\274\364N*\275<\334\202\274\r\264\367\273sp\213\274kY\006=\350\256\243\274T.\014=\020\260U\275\353F\240\273\320\035\350<n\254\321\274B!N=\\\337!=\255\346!\275\246Q\020\274 \207\342<+\316\032=\233\253\252<g\320t8Yz\033\274@\376\304<\2454\320\274\303\304Q\275\324\351\207\274\037NV\275\315\304o<\010\371\241<\323*\256\274\326\245\303<\022D\336\274\300\231)=\212G\037\275\203\025Z=\035]\336<(\006&\274\006o(=\303\337==\032\332D\275\204\260\260<\3577Y\275Q\363\022\275\236L\033\275\363\207(\275\361\207\360<Q\213\215\274w\354\337\274\017v\212<\350\267V=n\246R\275Il\317\274=U\215<\002\026\014\275\253mD=T\253Q\274\352\312\037<\263R\035=\326\340\341<7\033\354<u>0\275s\2007\275<\377 =\350\243T\274\005\207\345\274\2404\247\274\335\350M=\267\222\211\274\362\0259\275\243\330\277\274x\001\003\275\226g\355<j\032\036=\305\370\036=\252n\223<2\366\025<\000vW=\211\261\242<\031\260\362<\346\031Y\275,hY\275\347\370$\275\030)\260<\277\302\014=\336G\331<\343)\261\274s\323\n\2750\251\20589\314*\275\307d.\275\316L\027=\361\0211\275\310\362\355\274\026\307\001=t\007\323<\231\233\250<}\322]=\000\363n<\267i\212<\017|\371<\311\363\265;\272)\024\275P\352\004=$\3503=\035\234\005\275\353=\207\274\016\262L\272V\211\'=Z\002~<\2654\004=\205\225D=\016\337\200\274\251>\037\273b\321\251\274\330\244\001=XDJ\275\2556\007=\315\036\016=\212\231\032\274_M\016\274\344)\244\274\243\267\254<\206\2413\275[\354\311\274\301\3374=\255\346\260;\010r&\272\300\360\347;\026y\247;\370BF\275\321\220\304\27494Z\273\252\272\316\274\251N\013=\025\265\267\274\007\017/\2755\266(\275\261?\262;\034|\310;\311\243\376<\021k\007=\205:-\275YV\027\2755\237\001\275\356m>\275\265G?\275\235^\267\273$|\351<\234\224\220<\031\236\360<\"\250!=\212H\013<%\252\210\274\377\000s\273\270\370O\274p\263N=$\254\033<\222x\302\274\305[V<\"\302F=\273\205\274\273\335]h<\343\371\320</n\271<\340D0\275\002\264\314<\005\236\315;\255D4\274\236\016\n=\247\217\267\274\027\001\r\274\235\203\332<9\304\277\274\364\305\r=\003Li<\230\005#<\315Y;\275Lp\025<L3\000\275\026\037\356;\334\021]\2758SR=E=\266;\323g\254<\020\3359=\206\375>\275Z\231\263\273\374\344+\2751I\255\274-Tc\274t\277w\274)\023\310\274\362X\265\273\231\320\333\273\247y\342\274\246\264\211<r\225\"=v\230A<\272T\023\275c\000.\275\226\347\334\274H\"t\273\211\2666\275\232n\002\275\246%I=\026\027x<\013\373\216\274\317\3041\275\223\363\023=`\371\346;q\025\225\274j\343L\2755\313I\275\252\237\235\274\201\001\000<\272d\005=\'\306O=\037\037\255\274\360\324\333<\253\356\315\274\334b\014=\261\337\321<\2166\323\274\364g\270;\'\222\372\274&XL\275JdZ\275\"\302K=\227)\261\274`l\204<\360oV=\212\356Y=Qs#\275\226%J=S&&<\202\213\301;\324\306\251;\301*!= \304\000\274\342\316\255<\231\353\377\273\271\251\037\275W\221\327;\221\247#<\323Qk\274\234f4\2758\361P\275.\363\321\274C\023\022<,\253\215<#`\212<\335v\002=\334\007^<\370b\361<I\204?=3(@=\262\n\204\274\321i\347<\305\234\323<\307\001_\274\301\024D;/\232\340\273\202\255\314<)\376\177\274 \306B\274\243\\\"\275X\016\005<\246S\206\273\003s\003\275\261\177\367\274L]\335\274Z\222\363<\352\2068={u\021=\007#<=\311\343J=l\317t\274\372V3<\327!o\274\003\036\025=\242@J\275\256\334;=<\300&\275\354\335@<*\'\243;/\336\376<<i\3049\344-\"=\032\231\300\272\014~\035;mD\311<w\344>=\316f\014\273\223\006\t\275\007W\264\274G\034\256\273\204\301O=U|?<\350|C=F/\026=\215\352\340\274\352\026X\275\201\362\007\275\322\201\347\274\312\264+=_a\262\274\244K.=0\034E=\375\235\024\2750$\013\275\"w\001\275\357\206\242\274\256\367\376;\336\276\013\275\231~\270<Y\275\033\275\033r\030\272\223\264 \275\372\'\032=\223b\024\275!\014\341;PW\253<\025\'\004=6H{\274&\302\004\275\273;\"=8\004 <\235\212\033\274dm\211<\351=:<\307\033]=\331}\001<b[\235\274\357\274\304<0\207\'=\3136\030\275{\007\271;\233\351O=\224\305R<\221\315Q=\201\210\301;\356L\013\272W\255\265\274\3606[<\245\014\r\275\016$0=\227\274\016=\275e\276\273\265%F\275q\216\211:\271\351D\275a\211\371;\252\320\243\274\340!\227:-\356A\273\375\326S\275\251fV=<\260T\275:\247\021\275\360s\354<\'F\336\274\361\311Y=\203\341\224\274Ap\"\275\226G\267<\307\254Y=\317CN\2759\340?=\206\034\357\274\000.H\274B\310\210\273\333\347R\275\301\240\335\274\2778:\273\004D?\274R\251(=F\353;\274\356N\\=\204\363\257<\034\021\234;+:\230<\364\0270\274b\341\316;\337\257S\274\234XN<\207\312\033\275b>\020=\363\271\330;t]F=\022lI\273u\343\201\274\213!L\275L\357\212<v;w\274\033\rH=\373W\202<_\023~:\340\372L=\323bZ<\255\335\276<w\235$=H\244\013=+8\025=\367\261\004\273`|)\274L\200\024\275\202\320]<k-5\275\n\214\023=\301\251I=\034\"\177<\"\3430=:\306\000\275\273,\241;\032\213\351\274\221\333\036\274@\377*\274\353\036\323\273\036\257\340<\340\200\362\2742m\027\275\261;\005<\351\336\013\275\177f\013=\375u\371<h\305\r\275\260>\320<\345\027]\275m\\z<\034\216\024=\211\023q\274\266TT=\267\343\345<\275\250\221\274\004\005\310\274m\341I\275\353\031\371<\216\031X\275b\360A=I\344\036=\230hn\274B\233\204:\246TV\275\300\365.\275Q\241\020\275\244\354H\275P\340Q=-\373\275;\317\014M\275\234\266\245\274[\005\r\274\210x\026\275\005\277\367<[>\201<wo\322:S\233&\274\266\2167\273\206\014\312<#P\236;Y\006\207;b\t8=e\334\025:l\242\227\274W\362\344\273u\032 \275QYF=`\232T<\353\'T<q\265P;>r\007;\372\256P=jT\251\274\260\005\310;M\250\375<\026\330\n=,\216\034\275\326\324\265<\377\260\034=\217\rC\275\252>:\274*\356\376<\304\265\004\275\255.V\274R\270Z\275\214#\001=\273\365\205<\230\271\254<\016\373,=b7\220\274kJ\214\274\236j.=-\3455=\362\363-\275\220\"W<\246\273v\274?z\230<\330\027\277\274\374\201@=\242\246\037\275FWN=^m\010<\316\271\333\274[\227\221;\360H\301\274\223\264z\274\332&\024\275m\217\031\275H\212\237<\230\364\021=\336C\037=\233\210D\274\201#S:N\366W=\204\'2\275\244\010#=\".M\274\300\350\276\274\272\210\026=if\032<?\220\243\273\255W^\275\316IM=\300\021\251\273#r\221\274\274E<\275\253AE=\275R\372\274\225\336Y\275]G\362<\233Z\024<\277\317\376\274A:x\274\3722\372<\020GN<#\356\253\273/\032P\275\275z\343\273r\246\020\275]\004u<P\256\357<\3603\256:\304\230L\2759C\327<\340W\213\273\003@B=\007]\265;\357\017\323<\243\033L<\215\\\030\275ZrJ\275\211\355O\274\3544\215\274\250G\022=\362\207\312\274\351v$\275(d\034=_\247?=\353V\325;\277\0343=\rI\231<\027h\307<BD\346<+\306=\2752\031\223;o\322\031< \010\327\274>\344\"9&\017\027=A\3647<#\326\016\275]\372\n;\312\251\240:{w\270\274\273\353\t=\324Z\013\275\222I\t=\226<\225\274\036\023R=\317\256\001=\374\307\370<\345\247\005=6\232\r=@\233\320\273\261\315\247\273\013\242]=%\013\266\274\304oF=;|\256\274_[0\275\n\327)=\340\252\262<a,\303<\375\022\035\275\323\3718=\335\311\034\275\274\206k\274\244(\313\274+\245d\274Y\203\370\273\301F\020\2750v\010=\371\313W\275,B/\275J\007w<(m\204<\241\3061\275\257\336\317\274]\225\000\273\014\201\266\274\013\326\216\274\356\3358=\3645\235\274\256h\226<\237\227\r\275\243\234-\275\231\345@=P\2214<\256\nW=\200\031\360<y} \275\301\220R=\255/\367<\247\0219=\323M\212\274Y\033U;\253\222\\\275\345\200X\275(Y+=\315\003\034=w\362\t\275%\250\327\274\343uN;Xn\210\274\271\353.=\23026\273\037K\247<\212\313s\274Yj\200<\266x\355\274\203\271+\274\2404\253\274y\217\213\273|^\014;\313\t\352:e\353\t=\344\205\t=WpM=G\215M\275_*\030=\201x\005=\013\367}\273\377\001\267<^\272L\275\177\226$\275&\340\245:\023\022F\275\2473C\275\301\177#\274\300\024J=nD\343;\375*\376\274\211\364\273<\2753\204\271>/P<\r[\"=\224V\205<T+Z<\227:^\275N\235Z=\002\')<8L\203;\306zX\275q\020W=\375\033\202<p[\010\274s\3646;z\275\024\275\336\346 <\351\214\222\272\234\t\033\275*\372\326\273?*\021\275\362=\r=H\356\335\274X\251Z=\353\323\001\275\246z`\274!\225\257\274\365\366$\272\004w\353;\310\357\004\275\300\026\r\275\353$\372\274}c\024=\251\035I=r\031\260<\005\336\007\275W\366*\275\027\324\244<a\305\024=\334\332\213\273\206\273?\275_\204T=\0106,\275O\2219=\231\306\241\273\332{R=\004S\271;\232\010R\2729\364\031\275\r\243\027\275I\006\262\274\321r\302\274\351\032&=\262c\345\274O\352I\275\330\'\357<\006\234\365\274\307\343\275<DC\333\274\301\354\226<\234n\351\274%5.\275\365\024\023=\267;^\275\204\366<=\004\262\023\275\274\3409\274\001\274n<\001>\271\274\r\0037\2743\257\021\270\3438\025\275\025p\363;|E\216\274\235\250m<\217qt\274\003\325\\=1\254\003<\344\331#<vfk\272\004\230)\274\371\262\023\274\016E\032\275\n\257\260;\340\177-=\013\237\021=\331`\307\274\016\"\357<\033\343\203<fpA\273\355\243L\275(E?\275_\223\273<\036\277\374<2OF8\244\224W=\300\341$\275\333.\021=|\232Y={\314P\275b\223\232;mJ\355<\214Z\022=9g\270\274\237\200\023<,;B=\247\030\254\274\245S\'\275\304\030\020<\265\033\022\275\037\037\342;\216}:=\221\261,\274\211\035s<\371\327\345\274\014K\001\275\235\311@\275#\216\026\275\010H\302<@\0375=\226\"\325\274\007\210*=\021\215\323\274h\345u\274\254M\317<\322\"\010\275\r8\010=\312\363\227<\345\370\231\273\213\360\333\274\310\345\\\275\261\0205\275\035\336\372\272lM\234\274\257:!=\367\014$=\2611 <\302\272\241\274\020\311\212<\276x%\274\342\265\260<8\272\215<}\277\237;v\016\364<@u3=L(\\;\035\377)=X\334\213<\251\362\344;\357\333\\\275B\014[<\"\247\257:\255R#=\000O8=\353\0326\273[\272o\274o\263C\275\024\205\261\274\331Lv<\336,\272\271\331%\020\275^\2611<f\006\335<\216M\r\275L\373\r=\330\245 <}\010\024<|\216\023\274/1R=\023SL\273\003\360%=\343T\241<\236\3405\275g\222T<\370n\307\273*\351:\275\3055\202<\276\343\324\273xG/\275%\230N\275-\202\262\274X\373)\275\362z\340<\230t-\275\0320\314<\013\355D=\001\233 \275\323\373>\275x\200a\274\023\262X\274\220\024y<1\004W\275\325g\205\273\321\340?\275\234\0246\275\211\351Q=\201\210h\274~l\014\275\017n\030\275\250\240\362<\303\255\034=\366\036\022=\357p\013=\223.\020=h\305\246<\323\036\013\275\256I6=b\']\275\017\315\\=\023\'S\275\2205E=\307\3751\275\334.D\275\260\311S=\312d\\\275\337\000\356;\010\377/\275W\313\255;zY\3569\253\305\212\274\244\254h<dv\356<\031\000\021\275#\377\213\274a\372\321<td\276;j\3234=\267\'\361\274H\216\201<\360H^=MXA\275\376\3261<5\355;=\252\017\224\274Jk\213<\253K4=\222M6\275\034\232T=\2368\'=\210\004\200<\213+\317;-c\213\274\320;`\274\337\223G\275(\001\003\275\000q\303:,\232h<\302P\245\274\031\255\332\274\340cB=\227\211\213\274\021\'\003\275z\244\252<\037r\357\274\"\245B=J\203\327:\233\373N9/\206,\275\361\326O=\271\2053=#\n9\275\262.3=\251{N\275\344x\003\275\325\032\335\274\236\371\237<\337N\005\275\177X\251;\201\302(=/\310N\275H4\003=r\273\266<\212\306 =w\376\350\273\264)k\274\327_\t=L\010 \275j\332\255<\"l\226\274\346##\275\303\377E\275{\334\324<X\320\355<\031\037\355<Zm\254\274\275\261\313:!\242\366\274\022A\343<ksI\275X\215U<\325%#\275\266\t\315\273G\0056\275\311\266K\275\016\3352\275\272\207\352\271\001)X=\361J\263<%\316\020\275\031;H=.\237\023=NCU=\254+\363<\362G\350\274\365\251P=`\352r<(\010\024<\223\347X<\302\035\006\275)s\031<3D\202\274P\300\\=\356\215N=e\217\032=\227\'\t:\233U\014\2755\023\007<\216\026(\275\313b\006\274\246\301\373<\3363+\275\202\332\014\274p\206\325\274\241\274\311\272\374nC\275-UX;\336$)=\263\262/\275\'\030\365\274\3617\006\275m\223\002\274~V\"\274a\243\301\273\020\374\261<\302K\275\274\025\3251=F\232\316\274\022b6:\232c5\275\245,\361\274\300\374\224<\203\220\034==G\202<\274\262\323<\322\267*\275r\177\032<\277\242\354\272\251\323\303\274\206\223\"\275\215A\313\274[}B=\271?\302<O~\344\274\265@.\274\322\306\201;5-\n<\367\365\277<\270\240\225\274\352w]<\025\333R=\271\264$\275y\310\255\274\314}\026=\276\n\r\274\207|V=B\322@\274\300\261L=\366\206\333\274W\256/=\211\276\355<2\231\251;\334\307\251\274\335\020X=\257\0054\273\214\333l\274\31250\274Q\262U\274\300\252\275\274\216\300\203\274.\202G\275\305k^=\2534W=\215\345\020\275\026\261(\275\226\304<=fuh<\232\235\263\273\002\020\375\273\373@T<d\251t\274\361\n!\275m\007O=P\337#=\370\205\021\275\215\'\372<+~\267;iB)\275\003\0024=\352\353\250\274\024%\317\2678zV\275U\246\304\274?\264\030\275F\275\034\273^W\034<J\037\326\272\357x\035\275\334\326H\274\033\0358\275 \314\037=\273%\350\274\004\230-<1\206A\275`\277\301<0-|:\347\204?\275z\306\264<\222\027\235\274\311/\021\275U\007=<\221dO\275\010\362\240<\342v\202\2748\205\344<\252\000C\275\346Z\024<GB\232<e\333(\275\033\371\221\274-\3343\275\352R\250\274\335\205\024=`\177\035\275\361\311\205\274t-a\274_\262%\275\240\211V=\001\241\314\274\324\350\023=\025|L\273\010\305\237\274\024C<=\241\305\236\273\367\252\026=<\320\246\274\223^^\275\331\"\032\275\346E\313\274\251;\362\274\341=\356\274f-X\275\306\n(=\211\216W=\001\020M\275L\262X=\241\177H\275s=\225;\347!\342\274\255\010G=j1\030\275\311\223\206<K\017D\275\211\341\364<a\251\302<\0056\030=K\254\310\274\207\242-\275\245BC\275\004\014\207\273\301za;J\262Y\275\231\323\002=\3619\\\2758\271\332<\365u\235;k\2257=\240X\213<!\365\327<\271\331?\275\264s\331<\212:\032=\320\324)=i\201\016\274\315\342\244;\231\336\271\2746\346\347;\242\230W\275\212o\311\273\346\220\';\241\3450=\344\362\354\274\351u\006\275\"2T=\221>,<\263\177\324\274\3543\274\2742_\025\275\365\2479\274\373}\212\274\301R&\275(\204%=\342\224\362<IA\254\274~p\014=m\340H\275\342\\\247<\221\214\233\274O*a\273\301\301N=\323\2641\275[q\207\274Q6\001\275R~\340<\2566S\271z\273R\275N\362\'\275\347\255\327<\332c?<\253q#=\361-\256\274\322\3756\274\350Qa\274\224o\253\274\014b\371;\004\242,={\346)=\211\3137\275\350U)\275\321D\273\272~\224\335\273\351\366\202<\203\3724\275\305\256\352<q\024\313\274F\307w\274\300q =e3\215\273 !\001=s\004\022\275\224\204\200\271\247\243\257<I\037\271\273}p\2579\3473,\275V\225\347\274i`\036<\347K\326\274\307O\313<7\272\367\274\363\021\204\273\207\365S\275k\233\201<z#\305;2a0=\356\205F=q\237\222;\005\027O\275\205\202\226\2746\273\305<w\374\241<\033uD\275\340U\020\274\256\242\213\274\021\317\367\274\202nR\274\210\014Z=\356\270\213\274`\344\026\275\177\'<\275\317X\257\274d\343S=\217\271,\274\360r\313<\315\342\333<\337C\247\274\321\242\324\274[\302S<\373\343m;K\2335=\342\257w<j\370J\275H\306\t\275\322\341\024\275\273\350\323\274t\331*\274\232\217\255\274\301W\347<\177\316%\275\007\315\035<gJF=\233\376T\275\357\360\026\275Q{\005\275\370\016\312<\270\242\\\275\222\rW\275\340qT\274\340:\346\273Qi\331\274e\302<=\235\037 \275\254\006\023\275\237\017\325:\207\0348\275\262\035$=\307\205\002\274\200O\032=FG:\275\265\343\341\274xG:=Q^\014=\372\010[=\251\"\'\274\200\'\n\275\210:\024<\035\022L<\263n|\274\367\246\321\273R\301{9B)G<\346@\264<F\221\032<8\213\010=\245DK=Y\032\244<\347\363D\275>.\355\273$\216\232\274\355\250`:\304-@\275\207\220C=\354z\260\2748y5\275\324\030\250\274\02166\275\304\325:<\264\201\004\274U\2408=>b5=G\2447\275\357N\034=\020^B<\t\264u<\347m\231;\317\226\017\275\204\253\t\274\307\211\003=\302\224\215;dq\231<r@\300;\013\022?=0^3\275O\324\343\274=\3653\273\341\376\322\270\233\232\005<\353\233\324<U\202\277<\022*/=\232\267\031=\016\371\021\275[dL;7+H\274\372\242\002\275\326\333C=9\335\n=\224A\315;\245\346\357:&\217\021\275[\266\316<\232\005j\274\366JN\275\177\201\266\273x< \275Q\356\017=\223\324\005=\010[E<\006V-\272\242\366\373\272\000\370\227<\354\316*\275E\013\311;\020b\232\273\231\2018=\315Q\345\274\321\265\322\2749\024\034\275\246^\247<\234\340\037<\232\006M\275\272O(\275\231\241;=]n\223<\0101\007\275rnP\275Iz\356<\257\247\207\273\235\t\026=d\263\n\275\225\343\214<\326\356\253\274\237\303\t\275\005\233\025\275\333\312!=\257z\357\274r-\354\273B\177\235<\364\360!=\3071\025\275\225\367X=\'\325\357<\273\367\312<\222b\025\275\204H\273\274\323\307\000=U\"\t\274\366\274\\=.)b<\216a>\274\346\037\333<\251\250\202<\255\320\342\274}\256!\275\255?C\274\305\257\206<\340x\217<\347\020\024\275\237Y\371;\335@I\2742\342\243:\377\322#=\354\017\314\274\317C\267:\020\201\004\275\005\216\024\275\307>\233\273\344\332&=\037\352&=a\343T=\231C\003\275\263-j\274\367\247N:\255[1\275\375\233n\272\305sJ\275\222O\016\274?\013\r\275g\020Y=_a\006=n\317K=W\223\037\275\221\333\330<42V=|\342\002=q)G\275v\3341\275\3400\377<R\354j\274&\201\261\274vLS\274\034\252?=\373K\204\274E}\030\274\226\367\022\275\215\233G8\223y\"\275\350>\030\273\301Z\034\275w\030\342\274/\265\217<f\001Y\275\377=\024\275\265\230\005=\351\215\037=\021@\n=\236g\014=\005I\222<\324\267;<}\214]=\336\371Y\274\307H0:v\t\036<r\002S\275\0243\t\275\276\240\017<\\pV=\231\303\327<\213Q\t=gd\277<3\336+\273k\320\"=\033\330\315\274\037\246\216\274\262\341 \275C\303\241\273\235%\007<\233\373.\274\223/\231\274*\301==\265NM=D\n\346;\351\353\020\275\025d\357\274\020\035\264\274Y\3269=Rx\r\275\210\313\033\275\334M\251\274\374\233\206\274\031I\001\275\201?(=\336\205\320\274Y\227\036=\203\257\021<~\331/\274\316\303\340\274\370lJ<q\023I\275\002\331\240<U\2012=\326\261y\273I\316J\275\013!\235\2747E.=\275\270T=fD\031<A ,\275T\204`<\270\211\247<\rh\277\273\010\034&=\206\267\306\274\317\321-\275!\344\235\274\277\\;\275\331`\232\274M\351\357<`e\223\273\320\333\017=>\301z;RZN;Y\034\307\274\243\366&=\350\371\241<:\311\243<\200:,<~\223X<\202\315\206<\326\272\246\2748\3303=\000\205Z\275\334u\"\275\200\t\221\274y\215\'\275\344QC\275F\253\207\274\244L\271<\356\004*=\034\334S:\230\024\004\274\021\222\300<$<\252<|\215\007\275\213\321\026=\354\317u<\246\'\304\272\316\373\351\274v\200 \275\020\345\277<\333h\020=\316\036M=\226\352\256<\244c\005=8\355\r=\203eG=\355\353/\275\307\370{\272%\246\004\275\361\336!=]g>=h\253\034=4a\004\273\264??\274\324n*=>\337e\273\332\270V\275\367\266,<\010\343\261<\260Z\306<?T2\274\261\325\035\275\213\363\215<\024\312\262<T\000\371;\257\262?\275C\310D\275\265f\335<Wf>=\334)#=>5^\2753\027\023=q\201?=]6F=\324Lr<\312\027:\275\2473\035\275\357O$\272w\2357=\364\302\010\275\007\332\247\274\267eB\2750P\265\274Z\264\310\274;\n\314<\305\013%=\022\034\252<\254r(=\300\345H\273#*5=n\330[\275g{\300<?u\007=\027U\361<\265\212\025\275\356\376G=\251n\360\274\335[6\275\212\000^=\275\030\216<#\001h<\264\3324==q)=\335E\237<\303\354\226\274+\246\261\274g\245}<T\035\335\273ITF\272\373A\215<\220q\303<\026\375\310<\263\305\027\275\031\374Q=9\2009=\202\333`\273\263\026\033<*\241\371\274\000\022x\2748\025\357<\314\0310\275\367\320\340<rE\202<\340$%\275\354\201>\274\355!\032\275d\223\'=\3750\006=\234\t8=\020\271M\274\202]\r<\347E-\274\"\304\037<IsR\274|\332\025\275\t\355\251<\242\331_<1\364\000=v\227\212\274%<\310\274\344\331D=Z)\246\274\237\265C\2744\0264=E\030M=j\326\313<W\263G=J\241\'<D\227r<\017\303\261<\233\357\356\274\036%\271<^\215\361\274>\221\370\273\226\013\214\274\217\246\002\275(\271\037=\177N\245\271\177\275\'\275\324\373\312\274?\352\302<\357\350\205\273\006\020\315;\177\353;<\363\026v\274p\3174<\007\245E=\027\006H\273\2629\326\273\010\352J<\037\337M=\250\303\004<7l\002=@W\227;R\007l<\246\340L=\304Z\177<\023\365\272<U\342\017\275\274&\220\273\237\334N\275\345\252\023=\342\2535=\245\017\022\275-F#=$\370 \275w\326\330<\034\214\027\275\204\336=<\013\007\241<\023\262\302<\311\306\n\275\246\316\001=o\0205=\217V\007=\001m^\273\225\\\357\274\220\022(=\336\253\370\274\200-\373\274\364\234>=\373\013\004\275\021B\224;\302\231\202<\014\306:\274\315\262+\275+2q\274\230\315\263<\3632+<\01783=\242kB\274\020\tM=\254\324n<Y\2667\275\217\2147\275\254]\221<\306\000\223<T}8\275\262\277\200\273\310$\000=\030,*\275\304\237\002=\3058\302<\352\367\322\274W&\340<w,N\275\220?\006\275T\221\253\274\224\213$\275\214\271/=\000g<=\254\3412\275Pr\033\273\007\270\032=\367\330\366<\030\035^\273\206\224X\275Q\034\037\275\266,\221<\236Yv<5\014\316\2745 $<KX%\273P\261\000<\275n\266<q]\322\273PA\355\274:\313\035=\335:\210<\311]\030<\204\221\017\275g\365\021=v[.=\'p\311\274\002)\250<\216yM\275|\370\370<\211\023\206\274)\220\037\275\313i]=e\263\314<\006\346\271<A\013\034;\205iA\275\026t\010\275\030\332\231\274 \373\210<\351PQ<c\2510\275\261\201\314\274{\203\025\275\376%\035<\262}v\274A\261\272\274\254\377\353\274\177\036]=E\235\007=\322YX\275\276\0375=\344%\014\274\270E\024\274I\215Q\275\300\276\371\274\337c\202\272U\354\253\274\224\314W\275\350 Q=\007\'\211\274\321\030\004=\027\303\022=\336\247*\275\374\261w<sf\227\272\246\222\355\274\220X\004<\251\017<=\214\347+=\242$\t=\351\210%\275qQ\010=\035\341\232<\376\325*<\275v\"\2756\303D=n\314S\2741\236\207\274\256\253\007\275\213\247Z=\264\362\363\274\025\017v<\273\370\033\275F\220!=\013\363O<\246s\233<\000\254)=`\220\327<z\364Y\275\221\2728=\004\350\360<k\341\'= &\377<\r\223\':Y\361\037\275\261\356\257<*\262\276\274|\'Q\275,\242\302\274\365\366\235\274uFP=\370\357\224\274\226\251\360<\240D\315<\260\226\315\273\r;I\275|\242\233<\274\251\243<\271\344\276;=\226\266\274\2531\037<\220\344\340\274\345\373\367\274}?\005\275,\025\301<\301R\014\275\212V:\274\326\'\030<[\327\241\273\010\215\"=M\357\007=\345\270Y=V\017\013=Q\026\375\274\247\253\032\275\211E\024\273~F\n\275\202\006\336<EjY\275\\\016\034=:\340\t\275/\251\027=\236\354\375\274U,\223;\222W\345:$\034\371<nC\253\274\360\231\224\273\314_\032\275B\276\n<\'\025\016<\032\024I=\r\2268=8\274\262\274\220\256\252<\242\217\n\275\3033\225\274\t|\234<\271\021\237<k\324\327\273\334\355\340<\273\332\017=\243nA=\271CO<\004A\023=\274\031\024<\032\250.=+\td\274)}U:\370\204 \275\234\373\033\275-\020I\275\305\005\241\274z\304\030=\347\336$=\312\320c\274\204T\002<\035\225\244;\245\013}\274\312\212\242<f_\333\273\245\270\352<\320\247-=/\314:=\251\205R\274O\274\'\275C\027\035=Rn7\275\021\357R=\307yB\2758Y-\274M\334\214<\003\246\355\274gI\360<^\247\304\274q\242L=\356\252\017=&t\320\274KY\303;N\361\326;\363\020\346\274h\345|\273\326\336\310<_\353\340\274 \3209=\021\234L\275\301\256\325\274\0164-=u\370O={\033\024\275\255\275\302;#\002>\274\216\3625\274&\241\016\274\024\353/\275\345\023\240\273R^p\2742\335\371<]N\013\274\325\246A\275\257\352><Z\"\317:IjP\275Z\337\002=\374J\255\274\010\362V=\230\313\"\275\324k\014=\222YT<>\321q\274\357e7=\330\224\017;\3771\334\274\t\335\245\273\274\204\023=^\266A:\002\370\032\271\027\337\202<\r\256\3608\333!(<+\2278\275\241\327\255\272K\323\213\274\031\254F=\027\227\313\274\247\273\005\275\205`@=.U\320\273\363\310r<\304D\212<#\205\366<#f\254<\306\346\003=}\2555=\263\217\004\275\222\313F\275@w\306\274\256\0316=\324W\234</\305,=!\017\'=\311\342\000\274{1\266\274-\227:\274J\034\257<|\335\254\274k<\001\275\242\370)=S\233)=TX\000\275h}9\275tD$=~\363\263<N\350E\275\337$\307;]\342\246\2749]\366\274\231h!\274_C\014=\361\353+\275\321]\026\275\332$\235\274d\331\237\274k\201\341<\003\3602\274\274\035\344\274\275\352\363\274\252`R\275\004\177\215\274\001\034,\274\034\345\221<\316\345H=\303{J\274\223\333\027\275\362\361\t=\273\212\016=\233a\375\274\2433\361\274\236P3\275\323\003\245\274\337r\200<\243l\004\275\257x\335\274*\345\"=\376\340\232\274\030\261\017\275dW\351\272\275o\200\274\245\230\304;\\\006I=X/\277\273\267&+\275e\224>=J\205r<!\252\374\274\212\3354;\224]E\274\375-\022=\013\375\032=\351\030\037\274\335\261\035<\210UF\275\224b3\275{\366F\2759\020\021;F@;\274s\354u\273\262BG\272\233/\247\274U\001\265\274\327\016+=}V\004=\220\273\020\275M\027\331;\36736\275\337s\n\275\323\247`<Ab\227\273;\254?=\367i\002\275g\375 =\013\0269=\341\375\256\274@\2467\275\356\245C\273\'47=\3063o<\336\302\005\275}t\000=\251 5=\374\325R=\004\335)=\371\3107\275\260\225\201\274\375\004\257\274\361P[\275\315q\016\275o\034\371\274\257\002\362<\355^\201\274\202y\213\274\313\275\021\275\222\026\331<\376\306\021\275\307\022\223<\\\202>\275L\252\341\274\321\223\334<\210o\027\274U\016\273;\0270Q<(\2366=\244\341\222\273N\022j\274rq@\275\311D:=\242\3428\273\300a\272\273\234^0;\354\363*=\373\222\002<\236\321\330<\014}\364<\340F\001;\326\345\363\273\245\342\004<&\024:=\332\305 \274\020w\234<B\323Y=\317\201V\275\316\004(=U\325,\275\374[\032=c\331\313\274\215]P\275\271?L\275\334\"\\;,\306\354\274i\033#=?\'\021<\370@V\2759\305E=q\307D\275\334\2509=\213\345\235<p\323\026=Q\337\025\275\357\255\351\274\356\337F<\253c\335<\322\202\213\274R>)\274\376\363k<\321\205\272;\340y\333\273W>\216;\233.P=e\202\246\274RU\246\274\202rW\275\222LR\274\240\321\301;\234\316\265\274\000\365\216\272\241\024y\273\343!\320\274-I\336<V!\217<\3130\222<I\260,\275\214\345\261;\241\2114\275g\376N\274z\311\"\274\020h\210<f\366\372<nyf\274A\005\337\272zU\265<`@Q\272\267\246\325\273\233\"\224\274F\274\305<\366=\010\275\371\374\001<\276\245]\275r\354\004\275\315\317Y;7\324[\275\325-}<\325\363\357<\020\2128=\374\241\274\274\013@\"<\312\210\003\275\017\205\346\274\016\225\260\273[D\246\274\325Z\013\274\326\r@\273\350\301\t<$\377\254\274\353nB= \276;\275\230\277\302<\'\006\024=\354\023\225\274\277\214\035\272\330n\245\274{\220\325<h<\006=\231\243\007\275\224\rx\274^\207\221\273^\3306=\245\036O=\336\377\\\274\342\241A;\302\013\020\275\231\352,=\214\227\275\272\344\226\256<\231\305\267;\371Zz<dJ\021\2755\021@\275cU\031<>kV=2X\366\274\210\333\234<SOM\275/*\320\274\005\340\010\275\256h\277<%!\237;\214=\030\275G\000\006=g\3065\275\212q\350\271\t\010\240<\002\241A\275\006\236O\275B\273\341<\267\325k\274\305\222\020\275\317\237\243\274\367\t\006=-DK\274\267\016\221<+\225>\275[\245\275\274\257\304\372<\207 N<\263\317\234<\003\037R\275\345\034\014=\313\240\374\2732\177\024=\013\270E\275h\342r\273^@\250<U7Y\2753\257\031=u\310D\275\216\023\027=\310/\\\274\275y\017\274^\0061\275G\023\333<3\341I=\030^F\275\205\232\343<\365\321\251;\027\0335<M\336]\275p&4\275a\2723\275(u\221\273\200\342o\274\250C]=\261XN<k2\3269\005|P\275PSP\275\256Lx<~\322\023<U\024$\274\"q\277;4\255\t\273&O|<\302x\212\274\233\313\361;\005\270\004\275\031\023S=&\371e\272\310\341\357\274\321Y\352<GP\201<6|\212\274\246;\237;\230?\203<\354~\323:\332\355M=\341\244(\275\204\2013\274j\000\024=Q\t\031\275\272\214U=\013\205\005<\301\342J\275v\244\023\275m\270\n\275\014\233W=\177\277\332\274\325\261P=\027Bg\274\263\261O\275\231e\235\273\243\245\"\274\004\257\273\274\232)m\274z\207\3428\210U\014\274\245\t\340\274<\361;=\320\200\002\275\014U==\233\304+\275<L\233<\304\276\263\273\0245\214\274\227\354<\275\243\275/=\002\032\017=\363\364\021\274j\0108=\031W\325<\243&\250<\\\355\036\274V\205\221\271y\257\321;\245t;\275\203\t\230\273\216\234J<\020\3354\274\006\0210=\035\020=\275\312]b<\212\262\321\274\220\373\362\274Q\376\r\274\251<E\274\333\271\200\274^\270C\274\022I\206\273\307w\311\274M\204\017=\360OD\275\212\030r\273\n\017\265<\251gO\275\273\325&<\202+\276\274\001;\225<@\243\017\274\211\337\327\267\365\264\201<\020\310\337\274\n\265]\275T?\330<\014\260[;\375/\325\274X\023\372\274\020\254\032=\035\335\362\273\360u\356;\357\025E\275T\035\247\274\027\013n<\031\027\017=\226\273\222\274\t%M\274\013v\n==\337\314<o\216\030=+U\3068wG\302<xY\275;\200\217\332;\377cS=`\246\035\275\302\031\036=\217\027\026<q\344\363<\013\216\326\272\262\267;=\245jO=4\027\031\273k\227)\275\325\264u\274\313\020\025\275\212\346t<\325\027O\275YFP=3]Q=a\363\006\274pn\272<\325\247\221\274*\353O<(\260\251\274l\371\200<w?\320<\215r\017\272\333\000J\275h>\330\274\364\334\316:\0343\020=;\t\027=\021\021k\274\256\216Z\274@8\315<\266\361N=\014\360\270\274\326\365\r=\003VI=1\302\223\274\366J\237\2746\302?<U|\023=\314\247\371;\010\010\014\275\024e\211<\372\020\245\273\034\177\013\275\360\271\273;V\000\201<P\274\375\273B,U\271jY\t=\372\242\257<%x\035\274\246\204\364<\362=\r\272\356_\254<\031\017Q\273\235\370\221\271\2158\361\274n\304\313\273\344\274\237\274\377\201\341\274`\243\037\275\344\253-=I\234\252;R\271X\274\2318\010\275\221\224\016\275i\277\214<\rH\004\275u^4=\010\032A=\330B\222<P;\221<\231\377\345\274\377\266O\275I\311T=\217\363;\275R;\317\274=\360\205<+q?\274\317\2027=u\271\353\274}\233\274\274\271\230\365<\255a\035=\354\312)\275\331\033Y\275z\331i<\334;\037\274\272\266\301<s\027X=\340j\245<\245\230W=>\026\203;l4\027=\364\\7\275\027\2732=_\361;;\263T\334;\345\355\354<\373\"<<\236\331\347<b\276\263\274\217\366h<\230r\"\275+\313\324\274/qQ\275[\017\205:F\221J\275\335\0254;\351\233\033=\024\252\306:A<8=\035\352\272\273\265\177\310\274m\254 =@#\205\274\340\236?\275\212\306\340<\370SQ=\rh\365\2732\257;\275R\220\322\274\212\025\236\274\377$\334<\310\301\347\274\315\303B\275*I\236<A\350\000=\002\025!\275\251#I\275n\352#\274`\210\365<O\2123\275\346\031\034\275,FU\274-7\"<\330aO\273\353&S=nJ4\275 [E<\374\213\214<\274;\256\2721\3400=A\277\007=\006d\023</\254(\275R\2156=y\034^<>S9=\230\265\321\274S;\001\275\306\035H\275\277\013\002=\303t\301<\265q\266\274%\251\377\274\032\272\014\275Y\217+=\346&\254;\276\263T=\313\3257\275zG@\274\275\030B=\177\317X=0\'\002=\321V1\275\\\347\016\275w\014F\275\371\217\272\274\035\217\263\274\312,\370;|\243\025<\357\336%;\307\240\353<\275\330\031\274\332\246\230\274XQ\243<m\373&<\212\327\246;\201\006\240\274\360\374O=6](=\247j\362<\256\016?\275\322k7\275\216M\256\274\304uS\275J\326\030<y\237s\273\275\203A\275\276\203\260\274a\2340\275\353\247\014=\357u\347<\324*\036=\003t-\275H\255$=\347\3366\273\227\023\033\275\262\351\204<\242l\n<I\243\206<\263\227T\275\214w\013\274\305\373\234<\331G\243;;\315\266<r\321U<\"\215K=XM\366<\314|i<\235\003\252<f\217Z=4\013]\275#\242\304<\372f\257\274-4\254<\206\030A=D\035\323;\nFI\275@\356U=\337\323\014<W\224\345\274\376\236\334\274\360\312V\274\353-\275<\3516R=\323p\263\274\004u\266\273W\246W\275B\324\262<;#?<\260\331O\2741\215E=\201E\235;\002\r\227<\365\360\224<\236\2070\275}\327\302\274I\352\\\274ae(=\353U0\275\253Y\036\275\213\350\033\275$\242#=3\314\031\275_\224\357<=4v;q\373\327<\3570^=v\345[\275\323\261B\275\277RW=Lq0=\2058\006\274\330g\220\273\240^\023\273\337\207A\274\240\205m\274\025\305\260<\256\014\226<\230\035\332\274\010\316\237\274P\202@\275wu\325<\361\341F\273\361E\035=\201{\031\275\034\370\312\273>\255^\275\200\201>\275\024w\252\273\005\242\235<\204\306\'\275\241N\024\275\0032\214\274\211x\302\274\257\315\346:A0\230<\303U+\275\022\2710=\2752Q<\366\362U=\355\3763=&\351\277\274\312\370\214<\245\204F<\325i6\2720z3=\'f>=\256x\361\274S\320?\275;\341`<\266iF\275Zc\360\273\2707\014\275\003v\244\274\267\324u<}p\n=\344\373,\275;\322\262<\362\2279<gi\022\275.\242#=ng\3518\000\322\311<\211\0312={\337t<\237_\017=-K\206\274\336+7\275\267\310H\275\266yV=\217@\037=H\206x<\310v\345\274r%\361<\314\233\243\274g\013 \274\370=\367<\306\243\022=W\353\254\273[\002\216<;)<=\221\356\222<\266\2239\2750\0265<\tm\370\274\326d\312\274\010,\016<w\326\323;\204\336\340\274hNi<\314m\374<#$=\275\213\243?=~^W\275{J\262<\345\201\033<J\017[\275q\t\253\2739.R=\371\365H\275\334\216\326\274\022k\262</\r0<\237%\022\275\366\3465=S\333\030\275,\221)\275\025[\001=\206\235\037\275\251\367\020\274\211R\017\275,\005\276<\"\013J=\267T\001\275\354\360Q\275\232\270\014\275\326\352\332<\337\304\214<\370\222L\275v3(=\365\0206=\"\331\023\275\273+\004=N\307\371<m\017\376<\361\315\257<\023\345\236\274\335\313(\275\262\017\373\273\317\032\211<\352oI=\0055\014\274\016X\023=\222\256\n=&R\222<]\371\034\275\345\310V=\251\211\375:\004\270\260;R(^<\030\234[=\331wk;c\337\352;\250\350+=\300A\253;\245\211\207<\220\222\274<,\035\321<\014\n:=\256T\315;\025\373s<\236\226\277<)\202\374<I+\001\275\253\344\322<_\nL\275\0216k\274\320`\247\273D^\023\275\033\354(=\343\222[\275=\331\264<\006\205J\275\000\332\266\273\023\233\322<\307\366\003\274\202\340f\274^\325\251<@\320\272\274+w*=\2736\251\273\016l8\273\365\344\352\274*\0172\274\254s\310\273;\221\254\273\370\025\037=\244\206\032\275WW\270\273\007\204#\274W\363\243\274\311\223W=\216\367<\275S\2530=\3435\326<\236\357,\275\027\262\330\2745\376N<,\014\272\274m\371\t\275\372\004\311<\013\037\211<*F\266\273F\371\344\274\336\2471\275\315C\335;\303?5;\025\033\030<m\351\024\275\303TO\275p\323\n;*Q\310\272\204_\234\274\007\370\t=\266\021\326<\\\205I\274\272p\257\274D\233\226<\273g^\273\210\324O=:\336:<\000\0165\275x\200Q\274\302\254\340\274,Z,\275\274\367\000;\375H\002\275?\244S=v\0066=Bd&<\352JG=\230\305\241\274\337\231\036\275SD\010\275\204\\+\275\275uE=e\225\342;\337>\233\274\210H\321\274\361\0375\274z5\373<\225\"\340\274\207\267\016\273,f\000=\226q\\\275hK(7\201d\306\274\274d\004=\221\002\021\274\nOk\273\320/\247<=R5\274\025\247\000\275I\275\362\274\317\323C=R\214\210\274\310j\301<\200z\257\272\215\027\017\2744d\261\274\356I\017=X,O<\032\r\266<\023j%=\240\255\004=F\275j\273\252\355\244\273<\355\203\274\273\274>\275\013\004S=\217w~;R[\252<\220\214\376<\320\231G\275\352\267\017<\276\202A=\316\314\321<\242gV=n\277\\\274i\251\213\273 \375]=\262e\255\274\227S\017\275\032\353\252\274s\367\274<\310a\\=@\'\331\274pB\305\274\241\225s<$\256\030\275F\272\002\275\343y\270\273\210f\220<&\272\037\275\232\017\326<\245\362\322\274_\274\341;\245\201\334<JH)\275D9\027\275%\316\345\274\327$!=\264Jb\274\213,\337<c\232\207\2742\3551=v\332\272\272x$S=\023\224i\273Y\342\366<)$\217:\010\347\020=\314\224\034\275\t3+<i\226L=Y#8\275\237\020\n\274*m,=\272\327+\275gT6\274\263\224\224\274\364P!\275H\257S=RG\002\274\314#o\274\301<\304\2739\021\004=\326i\\\274l\2635\274\343\350\030\274\362\263\244<?i+=\307\212\200<\360#\304<\266\252c\272!\352\275<\025[\\=\n`\215\272\'\273\253\274\350\277%\275\020\322\033=\010\367\024=)\235]\275\036\025\225<\340\202\004\275\213\320\237<\n\275\307\274\213.!<\250W\007\275\321k\231<\232\331\026<\304n\303<\004\376=\2753\256<<\013\371\006\275\2617\236<$\"\017\274\270/\021\2754\362\253\274X\247\034;\2764\355\273\233\372\001<X\242\241\273\333\233\321<h6\013\275\276l0\275s\375@\275\341\212Y=\243GP\275\002\033\022\275\264\244L\275\213\271\350\274\254\315O\275\307\360\205\274\257\375\032=\334\036\306\273\221\252\016\275\000\265\003=\251\014\272\274,\330K=@\376\007\273\260\005\325<\226\341]<O\244+\274\353\3709\275#k\213<x>\345<\355s<\274\327\353\"=u\243\221;\237Yh\274\371\227\206\274a?\014\275\022\316\032=\206\300Y\275\250\006^=W\357p\274,\363Y\275.\257?=\025\246P\275\301\0354<|\362\017=\320\023E=W\002\003\275\357.\373\274Rk\327\274\274].:\374\004L\275_\366-\2750\336\367<\337\263O\275\253S\177\272\211\3101=<\272\370\274i8.\275#\247\205<,\246^\275E\361\025=\000\3463\274\301\3310=\300&\337<\373\311\330\272\311\261\366<\205\336V\275\302\234\335\2733!\236<\313(P<\333\327n\274\342\363F<s\027[\274Zf\000\275g|7\274\370\026\026<j\207\251<A\333 \274|\224-\275\377\350\372<\361\245\026\274\222D\246<\\\252\002\275\001\177\317\274A\'\'\275\224\322\250<\302\023X\275_1w\274/pM\275\252\372\314\274\n\017\001=\235w\347\274\221XH\275\325%;=\035\210\336</.x\274y\253.\275\205\203\\<;o9=\212Q=\275\373n\024=%i\333<&R\262\274\352\0106\275\364\"9\273W\272\346<\371O\343<\212\035\326<-f\023\274\210\237\275\274L\024\241:\021\333%=\001b4\275\030\322C=\030\177\027\273\360\227L=\327\257!\273\0304:=\275Z\004=o\263\n=\247\251T=\314\373\020=\033\241\'\275\207\255\225:t\377:=}\014*\275Q\036\030\275\205E\025\275\364\356\315<\227\032X\274\273\256\034=\022\262\031\275I*\\\275K\r<\275c\2215=\207\020\025\2756rZ\274\263\242\247\274L\270\205\274\034?\013\275\302\344\016\275QFT\275\236\336\353\274^0\234;\325{\n\275\314\313G;\t6)<$\203:=\300 \014=\253\017:\275\3461\345\274\253I\262<\361+U\2755\261\366<\204\035\261<r\230;\274\313\366Y\275\\>\325\273 cH<\347\322I<\270\0349=\226XK=;\310\021\275\370\rV=\243S\234\273\204\031\214\274\177\375A=c\007\001=\327\000Q\275DD\317;m\376\202;\254\305\354<n\226\203<\034(\257;\240[\357<\320XY\275\363\201U=r\331\324;\327\275\262\270\305\006\270\274\3428\372\273>@\346\274\202.\216<\230w\016=\213;\230\274N/R\275_2<\275\216\266\253<\t\244\036<$\331\224<\t\247\375\274\354AN=\242{\r\274z\306\t=\253\334\037\275:\266!=\365\200\203<\255\324c<\243\312!\275\010\335h;\306\001\334\274\002\303\240;\361eO\2754]\026=<C\276<\270{B=n\362%\275\215\235F=6\341\n\275\021\014n\273\373B\300\274k\316\341<\341\024\025\275\35639=A+1<\261\333T=r\241\251<hVA\275\265\020\245<y\207R\275\245*\001\275\327%+\273\241\005\037\274\026z\000\275\220I7\275 U=\2748\246\026=\032o\304\273)\306\036=\331\\/\275\262\322Y;^B>\275,\033\t\275\0323\207;\231\034\314<\213\017W=\227\025\\=@\207\215<\001\340\376\274\216*\017\275\305rG\274\361\357(\275\027\200\344<T\204\005<\276\226P<\252\202\217\273?o>\275J\310\251\273\273\223@=a<\220\273\301\302\375\274\253\t+\2757\305R\275\367\334-<\250\261\004=\206RR=$\021\213\274\251bB\275\001\336\013=Vl\222;\200\250\037\2733\233\272<:\227N=\223S\302<\203\333\274\273\366a\217\274[\006\'\275*\277\027=\377\301{<v\234!=\222\201R=d\221$\275\311y$=\234\245\\<\2712 \275\307\314\026\275\3300E=\214W/=\014E\245;hNW<\211\370\020<)L\203<\355\304\277\274\333\236I\275\215\266G=\313\250\024\274>w\354<OFA=o\254\"\273\000)W==\222M;\0339\270:\224N\242\274*h\317\273\276U\t=\373\352/<r\225\033<f\306\227;xd\033=c\000E\275\333\2000\275i\333\360\274\361\347\317\274\214\001\000\275\273`\014\275\231aL=\351\264\312<,\260\223\274x1v<c?\272\274\314/C\275\222\3330=\367\371S\275K\2519;lL\035\275\004\307:=\231U\373\273\363[\365<Q\3244=TA\332;6\215\234;\370\242\006=,\221r<`\326\336\274Ci\312\274\230\341=\275\234F\034=\240\264\031\275t\205[=\276K?=\334TI<6\032\316\274k\033@\274\277\347\256;\204\001\010= h\326\273\240\371\335<\243\326\266\274\204\274\241\274\371\332\234\274q\274i;\264\331x\274_\204\355\273\360\365\260\272\247\275\312<\223^9=\232\3272\275\026*\017\273\t0+=m\210n\274<\241\257:\360\275\025=\276\330d<\275U\005<\'\321\007\275,BY\274\017P\027\275|\214\352\274mA\370\274\333\335H\275\313t\376<\303\277\301\274-\207Q<\211B\314\274\254\304\024=\231k\344<\362+S=\364\004\211\274\234\206\224\273n\212\007\275\006\311S=r\231\255\274\344\367\013\275\r\331\017<heG\275N\271\220\274\374.\002\275;}\345\274\261\364~<\342\311\005<\344!<=u)\223<\377F*:A\3375\274\220\330\354\271\322A\261;\262\242L=z\267\326\273J\251*\275\365c\035=C%.=x\241K=I\260\251<\367\261\341<S\354\304;\211\265\263<P\t\200;\230\352\240\274\017\2512\275\034\333\376<n\211\027<u\270\032<k\207\002\275\225\243R\275\274\010\t\275\204WE\274\342\313\021=\370a\014\275g\340M\275\243\357\341\274\031Z\036\275\354\250\266<t\215\304<\264\255\210<\374n\205\274\021;\303<\023\2079=Aw\007\275}\370\034=\362\004\213<\023\027=\275]\020:=\235\273P\275\324\276\'=me\017\275ggn:Z\352&=\265x\023=~.\345\272+/V=\375\2328\275E/4\267\0256]=\317}$=\226\317W=\316\231\\=\323\031\226\272j\263\230\274\006\036\366\274+\034\006=\251\301\356;U\350/<L\221\"=\370\025\376\274\3544\344\274\205\3466\275D\256\\=\3303w;|\235\301<\373\301\342<\347\260/\275\002\314U=\220aU\275\377\266\376<\342\336\224\274\3440\207\274\2766\210\274\024\000H=R\351\005\2755\354\002=mXs<\211\332\326;BT\361<\375\222.\275%\356\251<&%]=(\335Z<|hw<\203\033\r\275i\2758=u\211\360;!\007\300<PbB\275\000\260\036=\230\245D=\014g-\273Mf\350\272\211=\017=\323\rM<\363LP\275\t\263\034=%\237\252:\037\033P\275\263j\r<\2331<=\376\202\253\273\237\036\360\274\031\tJ\274\351\2640\275G-\250\274\223o\007\275\343\251\376;\264o\030\272\224\245[<\232\373M\275\264\306\230;\202\360/\275\274\317O=\374n\204\274L)\200\274p\334\312\273-\260\316\274i;\322\273\266J\261;\206#T=\371\266$=\000\024\232<\303-\003=\336\375\344<\253\245\027\275\001\226?<\204\370(\274Q\332<\275A\302D\275r\376\034=\360M\002=ZOU=4\004<<]\000\246<2L4\274\216\250=\275\3731\310<\2076&=\235\344\004\275\004\032:\273\\\034/\275\000vj\274\0372\256<g\007\033\275\307^\235\274 \260+\274t\331>\275\204F\036\274\263\344[;st!\275k\231\341<0~(\275~\317\005=\367K7=1p\312\273\315\262s<\014\304$=7\2344\275pPO=\237\264\005\275\314\035\006\275\203\004\266\274\020.\242\274\211;0=\346\230\004\275\2352\300< \245\247<\353\322\272<}\214\233\274\030H-=w\320\270\274\235\241\327<\325\247Q=\233\010\210<\000\344\247\274\231\244\267<\021n\304<5b>=\031\272I\275]\214\307<\312\370\204\274\034w\327;)\037\301\274c\310\316<\235\373+=\271T\032<\356\366P=\233\013\030\275CY\001\275\364)H=za3\274\234\004\026\274cc\345<p\013\264:C\013\215<\024E\314;X\201\363\274\377v\244;G\230+=\331\235\023\2751\257\340<x\017\235\274^Y\212;\370\'\200<\321\202S\274\225 \301<T \347<h\276\034\275\345lT=o!\234\273\266E\261<^\315x<V\341\311\274\307\225A\275\177\340\005\275W\241\033\275\326\312\265<c\027(\274\230~@=\365\351D=\234\354@=\341H\n<\013\261D=\342I\\=v\2611=h\035\343\274~D\353;\376\355\342\273D\221\232\274\356*1\275\315\0246<\220U\017=a\255\311<\376\264/\275\351u\007\274\020\370;=\002JK\275\222kq\274s\373\373\273\252\221&\275\254\364U<?\351\036\275\031&\213\273ue7\275\036\357C\275X,\224\274q\013 =tK\224\274\225j^\275\343\344\\;\334\217@<21\263;_\323D<\273\007|<(\001H\274\236\267\020=Y\362\211<\206zB<\027\004\342<\222\177@=\300\207\010\275^\322\355<&\0323=}\"\'<\346\237\232\274\345+\354<S\201\026=\242\326U<\312\227&=y\007\361:8\272\t\2756\353.\275\256\265\341<\034\311K\270\231\\\261;*\222\317\274\r\300\213<A\245}\274\346\357\306\273PI&\275\347\260W\275\343>\006\275\211\241\026<G4\261\274\273/&=\217\273\334<YV\025\275\024DH=\341_]<Mh\326\273\267\345<=\214\200\235\274\326\370\000;m\272\362\274]?\274<t\317I=^\035\223;\272LC\275\324<\347<\22100<\267I\232;&\016+=\013\243\017\275\353a(\275\322{>;\347Z\"\275Z}\204\274\007a\335;@\377\326<\366\254\242<\317\370\036=\241+U\275\341\217\241<,\250P=\206`\240<\243\304\000=\372\335\236\274\214\367~;R$\002\275s\025S\275s\246\323<\230\367q;\232\273\235<\017K\367<4PX\274FG\221\2743\225*=\354\025\016\275\372\212E=`.\364<\327\2700=?\324t\273\313\200\n\275v6\357;\207\3262\275;\262U\275\276B0=[\364\243<\242\215\373<\204\307\237<\177\2528=\227\020\021<\317\305\247\274\362\010\206<\3661\010=T&\344\272j6\373\271kft\274\2202 \2754\206\313<\332)\336\274\221c\014\274F\303\244<\275\336\002\275`\347\001\274\267\275\037=\360\364\017<\237BS\275\0221R<8>9=\\\316\020\275\341\261\204\274\214\304\366;\300\307\032\275\371\232\350;\315\2008=/\240\031\274\367\264\033=\355\007\266\274yX\330\274\0142:=y\033N<\376\226\262<\211v8\275T\006+=Vu=;\2076G=\355\300\335\273\033\027]\274/\317\356\274\206\254\242<\025\221~<\234\371!\273\351S\237<\300\313\267<\336\226\304;\3719>\274Nj3;\264\220\035=\2168 \275psN\275\232\232\t=\034~\262\274Sw?=\355\2722=\310\356;\275\205,\014\274J\276\021;\304Ni\273\275\224h:\r\310e\274\023\244\211<\220B\001<\240\367==\355\340E\275\035\277\324\274\201\372\333<\023z)\275\310\304\373<\374\034\303<a\350\376;\301P\007=#1\034=N\"\366<}\251X\274\225\371J;\037i\335<\302\213\017\275b\322K\275%q%=\n\2730=\351\350&\273\230DE\275l\212X\275N:\010=\263\027+\275\376x\013=Z\005\306<\342\305C=:\217\005=e\364\025=\375\313\221\274\322\223\005=lpP\275B\243X=YD\333\274\021\227\000\275._\016=\317\302\222\2748\\\223\274 D\007\274\036`\365\274\337&\010<\213\257V\275n\206\r\275\210\260\n=\353\273\356<\303\373\037\275\377\002C<\257\2639\275\307/C\275\312.\336\274\365\226\276\274pW6\275\214S\240<\177\222\371:y\n\031<\372.\247\273P\002V\275\351\021\235\274Z\223.=\311\230\364\272oT\312<\212\r\307<\260t*:]\037\246<\357\243\252\274E\266 \275\033\354,\275\310\022\357\274:MQ\274T\002&\275\275\324\277;o\021\022\273  \001=}d\220<TZ*=I\346\035<J\344\n=\346\265\221\2724\023B=#\t\035=\nh\032<R\274\341\273%*2=\226\027\314\273:\245\000=.A\213;\031\332n;\212\217\337\273p\036?\275\343M\004\275y{!\275\270\307\034=%\203>=\226w\357\274\274\033\021\275\330`K=\351\375\313\274]\030\324;1v4=\321\205\373;q\222\003=\374F5\274\215\246\312;\246K\340\273W\013\'\275;\327#=)v\313<\310\365\241\273\021\"\026\275\024/\021\272\376\343\335<<M*\275g\344\205\274-3\005<P9^=\3352\016=\025cS=\362\262.=\n\330\r<\232K\235;N\000\'=\204\273\254<u-\373<g\225\257<q4V=\241j\344<<\206;=1D\333\274\022\352\\\275\020\202\200<\355\320E<\221\271\221\274y\374=<\215l{<\263\306`\274\3657?\275x7\346<\334V%=\036\300\213\267\351\375==N\016\347;j\0270\275uQT=\225L\365;\030\214\234<j\256\317;\346\226A\275r\261\355<\313\300 =\246\n!;k(\240\274Wl)=x\363\'\275P\230M=\230\301\271<J\030\033<eE\201;\355\334(=\324\273(\275hXI\2753\247R\275\324\205g\274\3210\034\275c\025T\275\026[\272\274i\362*\275\031b\027\274\275\233N==\261\266\274\214\327Z\275%\031\346<\'\241K=CK@<\217\341\023=\346\323\257\274\035\356-\275\202[\220<\225\321\007<\300\t\367\274Em\013=\334QL=\341r\371:\342\037\003=\224\032-\275\230\224\221\274!\322\320:\373\"Y=\201\371:\273\226\341H=\217\377==AD\270;7\353I=\217\r\006=dmN<\261{B\275e|\204<\3137B=\313\2351\275\354x\002\275\266@M\275z\371\006<\211\341L=2\250O=\232\315\257;=e\010\275I\204A\275c\205\250;\201l\211<\256\203\365:-\236\364<q\214;<\250\207\010\275t\036\032\273\325\343\344<.*\242\274\343\177\270<\261\375\013=A\261\316:\3741\341\274\n\325\213<f\267$=\301*C=0\3139=\225\365h\273\332;\341<\007@P=hi\025\275F\332\353\274,9Y<\343\365\307\274\275\216&<ei[\275\341(\017\275\252\"^=\235S\240<\247\206L\275\211\217>\274\327g\006\275ua\362<\007V\272\274\241Z\364<O\016\004\274\243a\213\273\341\226I<\373L\325\274P-\000\275(\343V\275X\332\374;a\350\246<\032\362\370<7\017\034<\236\302\177<\005\016\250\274bf\003=\032qK=\"P\240\2747P$=X20\274\004\224\\\275<\326\316<\261\335&<=u\001\275YUA\275C\002\361\274\033\034\336\2746b\013=b\366\027<\\.\371<\204\311\007=\222\301\372:g\227R\275K^\360<\233\245\017=\377\001%\274\276\014\026=FV}\274\371B\320<\250)\021\274\211(a<x\302\025\275\035\027\243;8\257\275\274\242,\222\273\320\316-<\364V(=g\2404=\236\377 \275#\033R\274\020\003U\275=g\032\275\235\324\240\274\374=\302<\316/8=HOT=\260o\202:\t\311\250\274\311\220\037<\355\335\224\274\014\2214\275#{\272;\372\307\352\274\353\373\200\274\200C\336<]bh<\276\371\260\273\256b\037\275E\277\356\273P\2747\275\342\253T\2757\t5=?\303\003=\331\335\223\274\244\363\\\274\321\224\330\272\007\301\323\274\010*\377<\206\274\333\273\225\n\255\2745u8=,|\266\274b\240\211\273\362\324$\275\222\271\300\2735&\272<MP9=,\370\036=E\247m\274\343\t\315\273\023\310\031;.o\342\272\336\243\324:\244\376E\274\020\276=\274\014\311=\274?\371\035=\304\020;\275\335\221\017\275:\276\320\273\371\305\n\275L>\366\274a\314\250\274\351[4<F\256T\275>\214o;\231{\'=o\222\223;\361\363/\274Uy\221:J\1774=\016\376X\275\370\370S=\303U\030\2756\370<=9P\204\274\321\316\217<\210\210\325<t\033\371\274\307V&=\010\356\013\275\024\231]=T\nF\275\010\177I=\nk/\275k#\031;\353\0271;:\360\020\275\271b\366<\237\321\321<_b\262<\247\311\210<\231\202\375\274\266^O\275\337O1\275\355\206[=\251\324\222<\327\031O\275\221=v<\255\234==!O\035=\343\374\025\275\206\340\314\274\343\330,=\006\330\226;\332f2\275\371d+=\353\233\'\274\037\033V=!\202\033\275e\036\351\273\365\241\303<\031~\346\274\016Y\\\275\205\003\033\274T\r\357<\3156B=\211\2647=Tm\261\274\325\002$\275\215\033\002\274M\314\327<Zh,:v\r\016\2748N\251\274\036#\n=\207\367\314<A0\237\274\346\316\212<#\217x<\336Wc\274\313\033\337<\262\037\353\2736\225==9j\235<i|\201<_\374M\275\232\343\255\274\272=D\275\247\301L<<,\277;\273\221\202<\260\347/=<_\300;\221\372.\275\250lX\274V\027\236\274\323\310\377\2733T\240\274\000\177\235\274T*\003=\307\353\302<u4l\274f~V\274\261\241E=K=Q\275\370\213\246:%*B\274\353\273\271<\265\230\025=\2457.\275\252]\r\275C\"*\275$\364\366\274T\254~;\315\246,=\325\025@=@;\375\273\242\337\t=b\235\034<\350\276*=\214\323\204\2747\366)\275}&\027=U\225\352<\252F\033\275.\016\274<b\366\031\274I\320\211<\226\241\014\27575\022\275x\203\376<\317AW\275\262\261\003=V|)=F\231\252\273f\360J\273?\017\356<\324\216\021=\233o-;\263\352\276<\201\223X\275\302B\210\274\220\224\341\273\031\355.\275t\271\245\274D\251\010\275\213\310\370\274\257\026 \275b\034\001=\003\2501\275\237\020I=\246\265\013<\206\374\306\274Z\215\263<\254I\355<\236\304\321\274W\020.\275\254}\017\275\203\370\245\274m\364\021=\372\302\360\274_\026\314<`&7\275\r\246\217<\314\220\224;\354\233i\274\204{\227\274\262\376L<}\233(=A\343\027\275\031l\010=\256:K\273O\001,=\250\354Z=\240\022\352;&\206q<`\251R=\314\225\033\2754\304H\275\276\200\366\274\2041\203<jd\330<\014\373\020\275\245\205\300\274vd\304;\303\317Z=\353x$=\344S-\275nMV\275\356\313\203\273\314\236\313<\r\026\316<fH\257<$\014C=3\372\t\275\014\225\276\2742\335p\273\372\377\025=\347n0=\300\217\026\274;1[\275&\276\242;\277\224\312\274%\3436=\034I4\275E\260\316;\220\013 =\227\211\215<\226\004-=N\004d;\3538W\274fz\314\274\321J\'\274\300\227j\274\353\300\010\275LR?\275\216s\306;$\315R\275\373\3628\274\345\324\013\275{\213\027=\3629\022:Z\236)\275{h\036=b*;=\365};=\265R\312\274%\341\302<\374\002\333:\314\325\247\274\310\0167<\356 \203\274\025\355\026<\002\276\020\275Y\2309=\263\t\246\273\317\211\005=\277$\364<%\337\251;\253\037\";\202o\211<\362!\343<\365\203O\275\333\027\031\275f\371\374;\324S\\\275Z\367\226\274\310VV={\003D<\360\336\027\275h\215\226\274%\271G\275$xP\275\374[b\274\304\205\016=\212\010\014=s\265\333\274\354\010\001=\t\234\031\274g_W=\206\024\020\275\351\344\276<t\214\350\274\333v0<RT\203\273\354\255O=9\274\025<\227\300R=\302#\032\275\010\227\251\273\016\246\013\274\367\334\340<g\355\237<\030\2712\275z\231\023\275/\227$<\253\\\351<\027\341;=g\203\204\273\254D(=\2759\210\274`\324/=:\260\000\275\311\342\010\273\021P\305\274\363\026\311<J\250\336<\372\254\004=\345\032\350:fH\270<=;\334\274\210-\004=\273\3713=VY\215<h\253\000=SuA\275m\"%=D\201\325<\334P\222\274\363\342\001\274\320\255[=\277\r\032\275\315)T=,?k;&\230Q=\025\323i\273\231\227\377<i\3028=\347\207\326<\337xS=\225\334B=,\321P=D\024_\274|S+=\225<\n=@6\335<\017\364\"\275\260\351H\275%\t\246<\334\303\322\274\277\027\267\274\341\313\'=GV(=\324[\"<M=#=\270\262T=\004\037(=\342\310\216\274\204\025$\275\343\221\363\274\\\310\014\275\251/\037=rM\023\275\t\352\007=\354D\035\274!3P<v\026 =\277\253\354\274\335wN\275,x\234\273\210w9\2744\264\353:\310A4=\333\\9:\244\224*\275\376\336\031=m\022\005\275\225\303\000\275tF\"=\363i!\275\277\324\006\275y,?\275/\t\303\273\356\323\016\275D\364\372\274\276\325\367\274\375r\212\272\026\337\324<q\356\210<\336\224\'\273\276-\210\273\306\273\217;\225@{\274\376\255N=o\305!=\273c\313:\2200\345\274\027\007\234\274\2113\010=\321$\"=\346\356<\274F0(<\341O#\275Q\247\334<M\375 \275\337u\300\274\246d\017\275\340\000\375<\000z\361\273\2775\271\273v\344\316<wn1\275&\360H=r\324\356<D\252+=\217!\363\272\177\177T=r:}\274\337<\307\274Wc\013\275\214\306\334<1>N\275R_M\275\017 V\2750\270\312\274[\261+=]\351\251\274N\302M\273@\244\033=18^\275\275\374G=w\021\220<R\327\330\273<\006\266\273\010Vc\274m\214\315<\356\231\276\274f|\277<\262\315\236\274VX\264\274X\257\261\273o\324\330\274\004\nT=\365p\314\274\026C\3619\265\000\005=\236\000\213\274\006=\365<\001\014B\273I\202z</A\225\274@\037O=*\032\366\274\310x\275<z\321\351\274e\332\211\274\3712\374<\263\312\367\273kHh\274\3464c\274\017up\274\373\246\223<un\324\273Rn\005\275\014\367V=V\1772\275\273u\320:\350\"\301<\375\366\032\275\244/\022\275\260\027o<\357\360\013\275\266\210\227<=\234\033<<p\251\274\243\230\033<\371\227\025=\177\331\317<\023\272[=(\317\242\274\307\n\215\274D\036F\274YA\264\274\307\003:=t\244\306<9\3566\275\316\246\021\274\'\267\350<\347\267\n=\007\311\260\274\003\322\005\274\236(\336\273D\270:=1\222W=tL\342\274\261F\314<\032\337I\275Go\321\274\226\247G\275\np\'=\027\2259=\272<S=\304Y\t=\214\341\274;bo\017\275\260\307\r<M\352$\274Y\207\031=E\354\n\274\355&\'\275\320\003\211\274UH\334<h\237\324\274W\"\r\275g*(\275\360@\276\274\017\356\201;-\372T\275\336\227\007=\256\253\030\275\0031\005=d\262\334<`\327A=\204E\320\273\n\341\223<|\335?\275\207T\016\275\002kJ=\t\017\027\275\352\310\301\274f\262\035=\031\202\351\274\315AT\275\243\030\345\274\2009S<W\213\305<\2657G=\237\333\335\274\215*5\275\\<\260<\001\365\266<\263\217\224<\216\314\335<\210>A=cI\241\274\271%I=\210\t\312\2739\217^\274\207\000\317;\000\325\n\275\r\022\321\274\005\213\350\274\327\016\377\274\352E\312\274\317\346\027\275\353*\017\274\375\314\322\274\025\200\342<\221q*<\232X\347\274e\265\\\275H\014Q;aa\010\274\324\307]\275\350\"\037=\326\3041=\036\336\224\274=:\344<\'$;=_\340\324<\272\360\332\2737\377P\274]\211\200<Y\304\002\274j\327\363<\277i\312\274\200\316D\275xV\273<\330\346\255\274p\261A\275\t\217@\275 \257==m\357\362\274lP\027\275,\027\037=\201U\354<\313\275*=\341`\353:\356d1=\370*\341<\006\27189\013b\'<\3342#=|M\320\273\010\267G\275j\304=\274\270\325,\275$\224\232;\376/\314\274\274\003\364\273\344\321\274<>\234s\274N\037,=\324\305T<\355M[\275\302\354s\274\3177\023\275`\224i<vd2=\334_E\2751\212\\\274-OU\275@-(\275\033\037\033\275Y\177G\275YY\244\274I\333T=z\3342\2752\236\016=\232\374\022\275\343\002\255\2747t]=\210\207\240<{\332\230\274\304\"\276<K!\031=v\231\017<\356)L\275O\263\330\274\341\030\024=\205n\r\275\232\266N\275\r\2742\275s`n\274\357\252\003\275!r\352<\322\255\027=\216W\003=\274\020Y<\264]\333\274SJ\323\274z\226\266\273\335hK\274\n\001\263<\334\206\020\2755\242\007:%\204\302\274B\003\223<\\,\277\274\t,\223\274\221rY\275\262\214T\274\005n\037=\022}E\273\334\235\233<\030\\1=$\'\014=\000S\301\273\337\231\007\275\022e1\275\202\307]=\005\2154\275\257\376\370<\277\353\232\274\360\366\275:j\037R\275w\005\346\273\"\032X=L+\356:\305\000\203<\262\350\260<\025c;\275@\341X=\325\022\344;\256\030#=\207\361\325\2744\307V<7Z<<\267\245\261\274\023\022\341\274\347e2\275V\347\206\2749\264\035=\370u\016=\264X\244\274\217\262\355\274D\212\213\274\352B-\275\031\331\033=}\001$=\026\272=<\010\300\336<}\005\033;I\305\235\274\036d\215<a\306C\275\303\025\027\274\177\3151=V&\"=\351\251\005\275;c\026=\307E\305<\220\0225=y_>\275\234>\346\273\035JO=\367<7\275\205\275Z=\247\017\321<F\233\337<\031\037\037;\252\326\263<6@\311\274\340\265\030=\323$\306\273H\023\314<A\330I=1\363\360\274\332\314P\275\230\226\245\274\306r\310<\254\374\0349M!U\2759\3173\275\033=\305;R\273+=\371\336x\274\016\357\207\274m\3347\275T\3423=\365K\316<>\320\035\275\215\326\027\275\376\301\342\274J\313H=\024\336\017=:\312F=\307zE\274\267\026\035\274\243\030\331<P\337<=9>\026=T[5=ax?=\273\201\311<\341mW=J\3074\275$\017\223\274q0\227<\331sI=\3033\304;\330\354\237\274L\262\364<\320\270\275<i\345\323\273D\207S\275\264Y\350<\313{\362\274\313\346\'=6\3445\275&\261\251;\251#\014\275P\345\340\273\301M\002\275,3\002\272\203\323\233\274\340\244\017\275\014\253\014\275g\364\206\274o \275\274G\336\367\274?4\320;\236B\007\275\200\247\232<\334\340\251\273{:\025\274\334\251W=iC\336<D\235#=\273{P\275/|\037\275\330\035\220\274\215\251\035\2746g\236;\005\204(=\240\006\222;\263\264\027=\\\2455<\007\257\014=\220d\237\274\374\261>=\236-Q<zq\003\273\013\211Q\275(Z\275<<\0072\275\032:\354<\367\367\365\274fd\335\274f\255\314\274\214\' \275\346x6<@\310\361\274\017\016-<!m\332\273\307(-\275\2225:\275W5^\275f\275_<\017FQ\273\334\222-<\337\3317\273\327W\315<\356\031T=W$y\274\224\357\004=\263!(=\376Ri<\326\203\267<\345\341\306<\0248J;\367)Z\275\240\201\027\275\275\035\000=\260B\362\274U\036\010\275\031\034\343\274wD\246<a\026\257\274\000i\253<S\267\355<e(\013=\374>N\275\276\344[<\254\326)\275\004\006;\2753+\237<wb>;\313j6<\375\3162<\251~X<V\274U=\007\304Q\275\302\353\243\274-\031$\275\375\001^\274\3634\267<\031\352\335\274)\234&\275\005\026E\275\350\352>\275\254!.=\037\2454\275c\367\000=\267\177\n\275\231\256\302\274\300t\311<\374\346\372:\253H0\274\\b\362\274\347\356B\275\265\350\177\273\336|\224\274\231o\343\274u\356(=\023\241b\274x\206\324;10\210\274\343\272\230;\262\254\271;\251\364\344<E\322\007\275\217.$=\314\032\000=\371K\275<\033\0058\275EC\317;*\237\037\274\224\207\237\274\276\030\\\275\266\031\307\274\270\350\331<\\\344\334<B\265\216\2746(0\275\327@?\275+\351!=!\305\036=\242\257\261\274\366#\312\274{ \374\274\245\001m<\264\327J=I\361\346<\270\013L\274\361\035>\275\013\351O=\013\324\262<\032;\023=\220>\270;\2570I\275w%\312<\233\035\030\274k T\275|`\r=O\240\004=\313i\032\275\347SJ=\367\256-\275\t8V=\022g\333\274M\252\003=\376\203\340;\231[a<;\014\016=dm1<Q\275\220\274\n\276S\272UzZ\275\232\212\311<l\337];\353\211\227<\241\2010\275\374\031\010=\356d\034=\034\342\275<?\220r<k\344\344\273\255\2362=H;\025;~7I=\017\271\026=\326\302\n</\3557\275\202x\305\274\244\212\\\275\253\263\311;\213\326\r<\305\213\204;\226~D\275,?s\274\023\355\325\274\373\n\013=\312n\361<\364W3\274\237\237t\2743\3377\275,{|\274i\223\024\275a\224\010\275\224\247R\275}l\010=8\364\017=X\247/\275\312=\003\275\325N\007\275\314\273F<\237P\327\274\356\3203\274\2076\305\274I\017\351\274\267Or\274p]\007=~E\024=\261\247\025=cu\224\274\357\355\363\274\236\245\227\273d\215\305\274C\332D=\261`\006:J\271\323\274\234\241\031\275\201\346,\275\363\306\321\274\020<$\273\356\037\314<\r>\022\275Mm\304<N\240\260;\326\377\027\275\177\311\035=\014$\020\275\367\324\001=(\210\224:\\G\236\274\313\021&\273\256\376-\274\363B\315\273i\377Z\274\312\305[=#\230:\275\376\313\363<\214g\321\274\024\347\031\274\223`M=\322\300x<r\241\254\274a\233\216;\336k\027=C\327y<\222\215\250\274@e@=[\312C<\201\t\253\274\356\256\207;\2630\036=\370\323\006\275{&\302<\336\"\007\2752\r\376<\276:\013\275\244n\301<\032\300^;&\221\367;l,\025=\261\327\275<_\224=\275\006\016\034=\347\2022\275\315\221\372<\227\035\245\273\355\247\321<\215\367\325<\230\261~\272\032 u<e\217w<\262\351M=y0\006\275\023\340{\274\341L%=1D\272\274\037\343\207<\352u[<\327\366\254\2737\231\366<O\342\010\274\255\332\013:\224\322\000<G\026\035\275\272>\273\274-\271t\274l\201G\274c\034\026\273\354\310I=`5\326\272\352\005.=\207\264I=\242\331\023<\n\367\322\274\326!V\275\345\rA=x\031\005=<\030\243<\326\211g<\261\220\272\2742\221\271\274\237\206\266<\0330N\275-\274Y\273j\014\201<\013\342\235\272\030;-=R\253\003=\267\351U\275~g3\275\223\302\364\273\363\262\002\275\360\303\376<=\275\021\275f\267\323\2742\003\006=UY\222\272\017\311\245\274\177b\361<\305HC<\306-E<%\273\333<\232(S<%\244\247<\313\254\\\275y\243C=\370\000\271\274%\271-==\234V\275h\2350\275t\242\373<\365\346W=\033 d;\340\203\357\271\322\330\024=r\020L\275b\226\326\274\327\025D=U\317U=,F3\275<FT\275T1\346;7f\370\274{v\204<\233V\265\274\264!\301<\300Y\'=\270Y\035\275\027\332\257\273\240ZU\275\203\230\363\274\3121\332<\304b\226\274_9\212\274\342\200+\275\371\031\374<\331\302\037\275&\220\222\274Yg\r=\025H\243<`2\033\275\024\367I\275\323?n<\203N\036=\231%\215\274v\377\006\275J\266\240<x\177K\275\376\231\325\274\242c\334\274\024\311\220\274a\305\204<\031\305d\271\003\3472\275\333\3111=\230\312O=\027\365\007=R\023@\274a\223\005=\355:5\273\231\327\r<\201\347\010\275bXX=\373\234\223<\tvE\275\244\243\250<\365\342a\274\310]\232<\312\313\361<\007\273\363\273\037\342\037=\"\354\373<\201s\210\274_\334\343<\"(\207<K\353\366\273\2668-\275\"_\361<\206\003\022\275\225\227\027;dt\207;\221\0346\275\202\225h<\'\241\251;\356\327\274\274\366FR\274\347\027Z\275l\267\033\274\r\222\002<D\005\257\273\332\237\326<\037\363O\275C^\027=\257O\351<Gh\320<\242\333\002\275#\276\261;v\303\014\2746W\027\275#\006\250<\230\327M=\016\035\010<\272\240\037\275\272\0331\273\247\242]=)0\244\274\013\346\036\275\353\250\236\273\000\021\341\274x$\373\274\352\014\221<\204\214\363<\213A\203\273\325\370\371\273P^\241\274>\027T=\236\267\320<\002\005\024=a3\361<V@\025\275\327u\240\274%: =n\2774<\274\337#\275\362sS\275\010\246<\275K\307\311<\344\354J\271\335\256J=\177\327\373<\327\3614<\224\307==\266\032I;\243\344.\275C\004\272;\000i\r\275\274\3244<\250\344\3319{\244\032=\\\036\310\274!\270\016=\211G\237\272\rX5\275<L^\275\013\247\220\274\326\276Z=\366\221^=<\254@\275\232\244;\275B)%\275\223\236z<\336\233\024=}w\207<\302&\030\275Hdx;\3164\257<4\301)\275\033(\344\274\247\225I\274\364M0\275%qx\274\264P@=\244R\243;Z:B\275\353KE\275\267\305\203;/\377A\275c\024R\275\024\013\350<:\272\005\273u\205\274\272\326]\232<B\353[=\007J\"\275\265D\241\274Rm\335<\220OA\275\255\236\350\274\342{\t==\032)=\306\301\307\273\036tY\275+e:=}o(\275*\343~<\255\323\r\275M\361\312<A\320\240<\245\004\013<\365\017\014\275V\2324\2750\360\247\274Q\022\313\274#U==oZ\t=F\221)\275\253?\265\274\ti\370\274\003kN=h\222Y\273\241\375\236<\362\0253\275\013\035t\274\033\010K=\305)\306<\232@\354<f\366\233\274\030&\025\275\370g\355:\214\247\353\274\025\t\221\274\372\227\226<\350-\352;\361\267\006\275j\232X\275\274\216C\275U\022-\275SU\177\274\022\245U\275%\n\223\274]G\300\274\314\265\233<\303\231\231<\030\234\\\275M\377E=\265\000\363\273M\367K\275g\2076=ZX\016\275-\271\352<\300\002k\273\320\330\211<\326\240\022\275\033j\232<\225:\360\274\224|\272\274#\265C\275\323\363\267<\253r\331\274\354\302\010=\224\022\037\275\370\210z<\0016D\275\341r\302\273\320\206\351<\254^\024<\361\262s\274\014\205\005=\025\200&\275\246\017F\275\24272<S\324\231<@#7=\301\202 \275T\316\314<\21474\275\003\031\274<Z\003 \275\010L\016\275\'\341\032=\254B\373\274\215\0278\275\207\216>\275\235\373\231<K\266\003\275_V`\273\006\003T\270y\177P\274C\356\223<\235\266\037=x\243\035\272W6\214<Ry\024=\rJ\325<\014\222\3139\272u8=.\007\027=\211\237\232\274\2600T=\033+\t<\263\223\004=ww\221:{T\251\274+\022\356\273\347\232\331\274U\021\240\272\236\356\'=\313%\017<m\2478<:\005\370;3\265O<\363yM\275:@6=L\010\005\275\306\030\333\274\373?\022\275M\036S=\021\037\212\274\355\264)\275\036\027h<\222\207\317\274\246\250P\274}V\037=63\213;F*S\274E\267\003=]\037\255\273`D\005=\035\203=\273\263\320\221\274r\007V=yt\"=\257\037\274<\032\327\272<\270\374\016\275\233\347\304\274\030\332\377\274gh\t=#\200\261<}*J\275\215\376\002<\211\023\274;\234\245-<\271N\236<\325-\014;\033\361u\274b\345\371\274?0 =\346}\356\274\345&\033=\305rG\275$\216\207\274\215PC\275Z\205Z<|\216-\275\365\007\257\271\237:|\274$\235\014=\016\312Y=\201\250\273\274@\302\277\274\327\006.\275#\215Y=\r+Z\275\032B\024\273\343\204n<\3618\376<\264I\032=\345\007E=HK\250\274\"TC\275\355h\n=\203K\034\275\202<F=,1\"\275<\221\237<\377\361,\275\213 \036=r*\013=\256\211\250\273\0049\315\274\302\2411=\014\2223\274\224\330\321<>~V\275Y\376\236\274\024[H\273\312w\270\274\177\032\342<\354*\010\275=\000\235<\337\341\t<9\351A<F+\361\273\t\217F\275t2\335<\313a/=\033\016\261<\030e\037=\314W*\274\r\245&<+\365O=\301\352\272<\'O&\275\326#\013=.\242\264\274w\215\\=e./\275H\033\354\274\327\217t\274\334\017\250<\247\"\364\274\232\257@\274@\";\2758\371B\275m\313\211<\252d\346\274\"p]=\223\236\310;\036\313\017\273+\3630\275 \003\005\275\323,\245\274\212\261\377\274\227\346\031\275\2720\023\275&\014\220\274\221*\032\274\346\034\270;\273^G;6\273\342\272\366_U\275h\223$=\244\017<<\244\237\347\274\007\253\032<\265\010\361\274\0102\303\2743cS= \0341\275\347\021H=w#\014\275\302 \023\275\256\350\337<J\323\214<$PC=\355\373\"=J\303H\275\210?I\275\007Q\322\274.;\024\275\017\021\365\273\017vf\274=\241D=`\303?=\252{/\274\243m\\\275\216\002\006=QN&<\017\370f<6b6\275\216\000Y=b8\223<WD\276\273\252\265\243<WG\022\275\372v\263\274\222n\346\274\255\250\032\274\3724T\275\254\3334<\020\267t<\355\017C\274\322\355\361<y/F=o\rM\274-\2238\275Y\363\357\274B\226\363<\003\241\214\274~\335\007\275\246\366\\=BfI\275\336\271X<\nm\177\274\251\334\204\274T\315\023\274\030\202\006=\274\365\013\275\265:\025\275B|/<\311+\312;\243\0340\274~3\207\274\347\023=\275\367\244\024\275_\336\243<4\343\277\273\317\254X=\355y\r\275\356\267V\275\300~\"=|\003F\275\361\336\207<\266\346\330\274\350\301\017<+5V\275\005M\034\274=\"\335\273;\324\032\275\007\022\353\273f\251V=[\370\312\274p\001&\2744\233\037<\361\336\255\274F1&\275\215\365M\274f`\253\274\274\307\336<\200\033\206\273V\016/=\\\242\377<\026\206\025=hsN=\001\266$\273Z?>\275;\251\277<L.}<\013\007:<\261\362\037=\267\234\323<kI\250<\013\'Z\274\2411\254<,%$\2759\212-=\nM\336;l\2475=\347q\215\274\000\253\"\274%\024\330<\234\332\261<\362\300\013\275.w\023=\256N\035=\266\276/=H\0275\275\373F\035\2755.5\275\002\024\320\273\204~\277<N_\252\274\255*#\274\315\343D=\305\232N\275 W\335\274\366\227\033=\276-7\275S\371\020=\253\031\023=u\351U\275\025\014\333<\314\357#:\177\275^<\301\211\223\274xA8\275;\367K\275\273h\217\273\363\027\264\274\275=\004\275s1(=XJ\'\275\264\200J\274\25117\275\tM5\274C\t\314\274\352EW\275\375\207)\275\263\007\r=\001\327\n\2755\233I=\026\336a;\031sM=>,b\273\350\3640<\275f\207\274[\353R=\244\240\'\2753.\337\274S\226\301\274v\301\020\275E\351\016\275\367\020\203\274\314\002\027=\364F\035\275\344\035?=x\252\272;({A\275S\212\247\274\324\334t<<V\013=\261s5\2750\016K\275\304\376<\275\340\036\2358\035\306H=G\213N\275\345\275\266\273HJ6=\274\337\214<h\337\242<|\016\002\275\207\177\331\273\355S\312\274\226D\021=o\300+\275{U)\275#\304?=\321\233\356<\244\031P\275\020\210\370\274D\223+\275\227N\204<]j\231<5\331\275\274\205\252L=\274q>\275\333\340\222\274Q\307\\\275\333\021\2758\013X\220\273\266\n\324;\036(\335\273\037\235\310:\361\320f\273m;)\275\247?@\275^\020\222\274\317~h<\262\354\302\274\201]\354\274\303d-;=\367\022=\013\305\376<\200CJ\275\264\221\337<\313\245!\275\302\377)=\251\261\260\274r}\324\274\212\030\363;@O\302<8\3246\275I\301\024<\240\354\375<\200\245\031=\250\375/\274Az\351\273\024\273\0319\237\0163\274\246\265O\275Ay\017\274\010C\277\274\t\317|\274wO\214\274\214\346\225<z\347\010\275\273\033{\274\345K<:\026\223\325<\224\037\027=\224JU\275-\024\211<\\Q\364\274V\244\250<\272\270\373<\261i\243\274\035\235R\275,uS\275\31156\274\032\331\274\274\325\036\024=n\344@\275$+1\275b\035C=:\240\276\274\021\263>=\232\260S=\241\360\322\274r\255\'=\n\0063\275\204*\250<\323\234<\275\0355*<\016\034R\275\025\0362\272\221\366\275\274\353\223Y\2753\237\025=\373\223<\275\035\350f;\363h;=\216\260\033;\232\327\365<@\247\002\275\001\335\314<\376OV=}\257\244\274~D`<{.1= p$=\370\212\343<\232K\356<UP\274<\"\253\244\273\275m\'\275\263\214\335<\320\">=\362{<\275\314\333#\275\346\243\213\274\236\326:\275\276w4\275\303\027\314\274\230\241D\275\327\200\254<\005\"a;:\236V\275\222\022\000\274\260\244\224;8\276\206<\001\3510<\345\226\214<\336\227Q=\n\026E<\"\2153\275\216f\344<KqA=\206\252\232\274\341E\351<c\2751\275<\203\356<\212\003\036\275\217h=\274\3009\005<P\217\207\274\024\014 \275Fb\004\275\214K9\275\320\344 \272\n\304\245\274\243\354\343\2725@\263\273\354-\006\275\260f\030=+\340,=\235\353\276<\017\022\316<\001A6=\300\026)=c\016&\272\215G-=4\260?<*X\264<2\243\037\274\345\230\017<\377\212B\275\202@\224<v-\216<\264pY\275\314\025^=9U\353\274\2023\300\274P\230{<\316\313U=\262\334\331\274e%d<\177\232\223\274\013\005[\273\375M0\275\277\321\202<\0332b\274\375\354\331\274eP^\275UN\202<\276Ix<\266\233\266\273\327\326,\275\2259\016<F\225\222\273\271\237\224\274\266\026\357<\244\324&<\247V\201\274X\021K\275\361Y\036\275\020\306\227<\021\303\024=?\nW=\277\223\017</\357Z=v\262\003=g\rX\273-\360\203\273\247\374H<\305\352\251\273v\256\373\274\020\274S\275P\213C;\257\207\'\2750\217\230\274\272\270.\275\275S!=&\230!=\006Xq\273D\215\036\275F\241D\275\020\313\037\275\037\260:=\010\341\030\275R\001Z\275\034\0305=V\030<\275O\006E=\357\247\377<\355\316A=I\2366\275\256\230F=\300\t5=\261c\213<\026<\370< \004\265\274mb\021;[\000$\275)/\001=\332\r5=\353vP=[M1=U\2237=\317\240\210\272/\340.={S\236\273\242\013S=\323\274\340\274\255\017]\275\030\223V=]\260<\275\330~p9\256>\263<\257\263\265\274\336\343\336\273A\031$\2755q\343<\363\253\024\275\345\347=\275\225\274/=t\312\353\274\326\245\001=\236\374\304\274\357\200\017<\354\223\335<\026v%=\232\303*=\000\346\343\274\263\336\021<z\214\314:\266.S=\217W\321\274#\340\036;P\205s\2743(\014\275\360\233\245\271\206\350\027\275\254\213B\273mI\266\274\377Q\034\274\301\256?91P\006;a\311]\275p\304\235\274\361,\036\275\222M\352\2740~\322\274XM@<\036I*\274y\006\352\273\033\311\027\274\263\264\213<f\361\272\273\242\351)\274\177\004\211<\233\241[=u[\353\274\241,\253\274\031\232W=\331QY<\215\254\246\274P\225e\274Z\367A\275,\300u:K\0255\275\300+K=u!\375\274\247\014\002\275>\357\227\274\235\206\320:|X\227\274\271\264U\274Q\320\320\2747\211\264\274N6\005=2l\n={1.\274\334\2026\275)tK\274\256$n\273\267_\013\275\355\231\277\274\243\212G\275\\\231S=\353\367\t\274\2567\320<N=\305\274\277\362{<\353\006D\27561\230\274\024H\033=\320YY=R\273>\275\036\375C\275\246.T\275\374\033\230\274\206\245[=\230r \275\363X\031=d|r;\377\270\274\272\033\315\361\274\202\206\005=\213L\014=\242\374w\273KA\373\274\253\350\221<l\322.<z\2474\275u0\345:`\216^\275\346\350\250\2742\3736\275\341h|\274k\211\277\274\377?.\274@SA\274G\327\000\274\017\013\035\274\376@\005\275\203\345\223\274P\013\273\274\246\2506\274\304\3745=\266\277>\275\340?\014=-\2376\274o[@=q\036=\275\025(\336\2743u\030\274 \354/=P\205\252<\330\270w\273\340\216\215\274\340\360Q\275bb\005\275\310\375\247\274\r\246\031\275\264\300#\275\026\366\006\275od\323;\320\324\031\275\206\211\221\273\\=\244\274\257\337\001\273\235~U=n\307\316\274 d2\275\357\370\317<:\037\301\274\004[:\275\264\037\014=+\230~<\0271=\274g!\306:\263\200\243\274\275\250.\2756\371\024\275h\215J=Z\327,=\016*\360<\032\220\006=R\307\024\275\213\247\237\274@\026\232\274Mx\266\274`d\202<>\217\225\274%iC=7\366A<7g\006;b\032\371\274]n8=\361\353z<|\0264=\017j[\275L\312\'\275\247\304L=u\226N\275\302K\203\2744\n\023==\224D\275a)E\274\274S)\275\263\202\311\274w\253\307<\225\251A=\023\332M=87\312\274\335\302\"=Kx\261<} \247<(\356\004\275bO\006=\201&\237<\376j\020\275\325 \334<sn\341<C:?=3\000\035=\217\316X=\2757\376\274!6\205<u0\026\275\243\3134<B\234\202<\275\300P\274\304l \275\312\317E=o\212\031=\334\003\372\274\375\307\006=S\200\374<g\233>\275F\251\330:3^\022=I\\\213\274\027\327#\275\025\2577=\370\260\024\275q\211P=\025\360\027=^><=c\366\014\275\214\263\002=\324\2632;W\3035\275\r\254==\343CL\274\252\001\373;M\3669\275\325OF<G\3477=u\305\300<\204\201=\275\217\341\243<C\310\305\2746\"\273\274\201\335\026=\374\032\322<:\222\254\274_Q2=\017\311\334<\326\371\025=\032\245;=5l\010=E\3771\275\250\354\032\275\323\032\233<\204\3057=\002\030I\275W4\203\274Z\343[\275\252\211\013\275\350J,\275\\\204.=\337\201*\273\204\035\371<e\275\204;\311\320\010\275\341/\020=\234\023\276<+[\230<z\247\016=\000\260>\275Z\021T\272Y\0272\275#p\216\274\333\2058<\036+-<*\033X=\210\323I=CG =\002W\304\274\323\250Y=\313|\375\2742\035\347<\355\305\315\274\325\377];\204\3330\274k\214\330<o\3247\275&\2223=\314J\'\2752%\r=t\023\361<\356nk<7?,=V\223\"\2756\325\224<8\345U\275K\023\024\275\271\371\204\274\365\336\350\273\254\325\342\274d\305\242:\327\246\023=\372^\345\274\355oT\275:\036E=\261&I\274$4\264<>P}<\237{\243\274y\374\320<\0041\222<\007\350(\275>\027\222\2747\311r;!+\021<:O\002=\324L\324;\216t%<\264Q^=\361$M=\202\206v\274\2644\332<\005+Y\275\301D\203\274#W?\274\277>S=G\013\216\274\322\304<=U\265H=\213\004\314\274\367\005*\274N\303\242\274\212\0054\275441\273\327\221\r=^C\230;\272\0316=\211R\017=d\222\232<\354<i<\264\252\242<\364\035\022\275\216B><\016\003\222<I\313\204\273\340\035^=%\302B=\031\343\031=\252\225<=\221c\001\275\240\307\r=\302N\301\274\020\t\310\274\225\031\317\274zq:\274\307\031\010;#D?=\236j\341\274\221\242t\274/J\010=S\033\252<\031\243\301\274o\365!\275z\352\t\275?c\375<\2273]\275\342\355\204<\217V\302\274\353s\271<\005\0214=\035`\002\274k\023\343;\233s\330\274\341\'\023=\226?\265<\372\2278=-\302\241\273X\275\351<\227\303\"\273pAS=\240\261:\274V\263\t\275\211\"\325\270\321\331\034\275y[I<\257\207\226\274\303u\357;R\304\323\274\202GQ\274\246\360S\275\351S^=5\023\237<i\204$=\345jG=c\324\310\273\375\356)=\345\242\375\274\377\235&=D3\370<l\243\353\272\036\333\374\274\'\275\213<\204\262d;M\351G=Z$*=\266\2639=\336E3=\226\344v<]\3038\275\354L\247\274F\303\340<\270\350\257<\275J8;N\326,\275\005]\245\272T\304\032;\276\245&<1\372\235\273\374\354\003=\252\303\n\274c9E<\036\226\237<*\274\367\271\375p%\275G\347\032=\212\262Y\275\275\007\344<&\342\304<\332*\016<?\324\277<\002\230\226\2734h2={\242^\275\220\247\030\275f,\r<B\270\352<\363\005{\274\303\036\326<\231~\024\275\304\335N\275\210 \371\273WX\305<\346h\302\273\0147\023=L\3446<\345\250S\273\224\353\r\274\266\306\367\274\333\203\007\275\027n\n=\276\204%=S\266\003<\244\352\311<Mo\024\275\235\246+\275R5\020=\365c0=F\216\332\2742Y-=\337\224\3513k\340\355\274\374\024\027=\321\350\002=\023\246R\274t\372 =\021\237\001<\262\276\321<\177q\031<{\016\313\273\215\3543\274i\337\247<\0146\330<\037\032\251\273\004\262\313<$\035*=\365\222F=\250xZ\274\237\221\217<I\203\215<\324\030X=\242\367\016=\272\251f\274\250\255g:O\264\346\273\334\273\245<\000\373B\275Ig\217\2748C-\275M\003\253;\345\030\310<\325\230^\275\344\310h\274\370SR;\252\316Q\275\217\243\007\274P\306\375\272?\"4\2744G\'\275\210FJ=\345H!;\257j(=\270\317\023\275\305yr\274\313\273\307<\203\207M\275\"\321L\275\td\256\274\357\312\265\274\254b\022\271\364y\037=\030\002\007=b\\Z:M\376%=X\004\010<\017\223\231\274\210\313 =\272\330\354\273\343\271;=\265D\342\274:\000\243\274u\326\264<\273\347\000;j\"\037\275\343_)\274\207\002\007=M`T=s\000\214<\233\0309<r\210N;A\271\320\274\251gA\273\000N\010\274;m\211<\335\352#=5\271\014=\307\237\205\274\254\325W<W\312\037\275\255ZM=\r>\316\274\370\240:<\364\372\342\2746\371\035\275Y\376\373\274>\036\344\272\004,d;I4==6\200\333\274\204\314)=Q\326\026\275\253H9<Z\037(<:)-\275m\216\035=\r\366s\273]\035\204<\350/Z=T\034C\275Q8\032\275\234\266\r\274\326\377\371\274\024\235\211\2744\272\210\273\236\310\263<\036\332\311<\217|H=\357$\337\273fI\023=\006\207\021=\337\360\021\275\000\"\020\275\\G[=\205\251\327\273\257\204\337<\365\367\323\274\305]\253\274\220RO=J\310J\275\323o\026=\3758:=6\310;\273t\316\375<H\364\370\274v\275<\2754\222\250\274\351\317!=%\020\347\274i\307\021\2751%\213<c\037\263\273\023\223<=\254c\236\2733A\007\275G]\370;\273\264\026\274`>\276<\325 \321<\324UT\275\025\350$=*\330\361\274\334#\301\273\243\306\344<3\315-\275\013D\241<\331[\003\275x8V\275X\256\231<Q\344F<\204m\202<\267\246\375<Y\336R\275\301\336w\274zKO=\022\307T\274\263\362C\274_\320\264<+\364\356<B\343\001<O\006\333<i*L=9d\201\274?o\267\274\240.\270<\232e\021\272\366U$\272\212\223E=\240\206\022\275\324\245\234\274al\001=?O\212<CUA=\235\001\023\2759\336L\275\237z\037\274T\367F=LI\023\275\240\323(\275\220\257r\274D\203\035=\355u?\275\313\t\226<\314h\267\274\274t\003=\261\2060=a\274\370<\327PU\275\020\353j\274 =\021\273\346>/\2750\271\325<$\265&\273!sL\275k|5\274\225s\034\275L\262%\275\027^\003=#eT\275\330\255G=e:\000=H\2302\275\350\261\032\275~\262t:\017\3266=\227 \224<\032G\351\274\276\270:\275\310\000\326<\250,4=\305\025\231\274\027\333\354\274\'\362\375;K\232\'<R\361\223<\345+\023=\2674e\274=\022&\275\353OQ\274\030\3042\275&C\014\275[\341X\275\373\260T\274\\X\204<!o\353<x\020\223<`<\200<>\017l\274\365{\225;\350\024\373\274\000@$=-w\257\274\353c)=\243\330E=q\350V=\275w\212\274\315\372H\275\0222!\275\0347:\275\205\261\244<\362\357\216\272\210o\007\274\205/V\273\027\264%;\347eW\273\235\373\375<\352@M\275\216BI\275\307P\030\275\271.N=\353\2672\275y\231\033;.\274\003\274\345\257\243\273\200y.=\022\340\"\274xPm\274Ch\340;\202\225L\275\243\004=\274[\314\312\274a\316l<\336\242F=\340\323\013=\321\002\'=\215\022\204\274\\&\n\275\006G-\274<\"\270\274YV\212;\262\3433\275o\031(\275>\377\346<e\2171=\353\351 \274/\001\"\275\300\372\346;J\252\021\275\320\200\020=i\357\013=\237o9<\371\004\366\273\361\224=<\224>\013\275\356\343\002\275b/\"\275\336.\351\274\300X\245<\273\236\317\274\222\264\277<\226\034r9\377>+\275<\nx\273\236\276\260\274\274\257+<*1O\274\270g2=]d#=c%&\275\353\210\013\275\364\373\325\273\327\233\307<\211v\014\274\212U\035\275\177\213\031\274\217V\032;\233B<=m3\225\272P\361\364\274?AY<\322\177\377\274\315\177\261\273S\217P\274\316\220\334\272Y\262\253<\305([=\006\237\317\2740\3425\274\010\315\t=\263,\252<\255z\260<^/-=\353\010\t=_\'r\274\337d\370<\200j\024\275\270>#=\277\2064\275\353\256\017=\243\222\021\274\250\317o;\205B\022=\235\322\325\274[:@=\032@\017\275\033u?\275\365z[\275\027g4<=\352\331\274\315\206Y=\335W\037\274.q.\2750\2259=2\227%<\273H\324</\315\206\274 !.=\233\202\032\275ZQ\200;\002p\227\2749<\\\274\313\'1\275\2446\312<\301\033\304\274\365\273N=n\274\242;\\J\237\274\n\"\265\274\336S\327\274\034t^<\220\244\317\274\311\213J=T!\312\274,\204V\275\210\034\314\274\311\233D=e(7\274(XW=\r\336/\275\370\250-=\377:\320<$\371\020=6\305\027\275B \004\275q\007*=\216+\231\274\303\310\337;b\344;\274\023\250\376<(\323L<\347Q@\275W\336\252\274\364_\002=\3260\027=G\235\212\274\334\350C\275\345\262\004=i\001V=\314`\310<0\305\356<l\302/<\272d1\275\300\221\276<4d\345<\345\202\020=\343\232\266;\002\235\010=\374\033<<\350t\337\273;\344\035=&u\256< \010L\275d-%\275\233oM\274b\273*=/\262\027<\273\277y<\335`\366\274\317f\265:\323l\206<A\274[==\275\220\274\344@U\2759\304\220:d\213\031=\332\256\n=\215l\010\274\276c\206\274\322\355\025\275\217\2371\275\255\245\372<\351\211.<\305\342\277\274\317\304+<\2418\370\274\244\274\031=\237\005\253<%~\r<\255\254L=7\320\"<\332\353[\272\305gJ=\001\243\024=\250d\\\275\334\336\327\273E\272\345\273\220\336z<\'\034\316\274Y\234\353<\231\336.\275\'\007D=\321\265\032\275da\023\275$R\014<\01478=v\007\336\272\303\223\363<\260\236\212\274\312{\253\274\035e\240\274p\261L\275.=]\275\216oL=\303\2371\274jkJ\275\367\342\'<d0f<\374\375\024=PF\305\274tu==\207#\221\274\252[\333;\254W\030\275a\325\t<\302\2708<*\275\233<\266\246_;\210.N\274\302\263\030\275\302\2019=\270\374\262<\334aX<7\201L\275RT\315\27145\n=ye\233<\255\227\323<\263\246\265\274\034\177\036\275\027\262B\275\264OQ=\031\022\264<\204\341[=\351FB=Nm \273\234\215\302<\362\024\375\274\222\376\200;\r\013\277<D*\021=)\310\205\274R\243|<>\354\027\275/\3564=\"\006\321\274b\273=8d\204\030\2750\023\275<\271\2412=\365\347)=\014\256\304<\313F0=T:\037\275@\2167\275\356\3538\275\344zR=\024\243\274\274\364\243\016\275\362\320\023<2\032\320<\377\035I\274\357\246\"\2747\303\024\275\201`\236\274k\235(\275vU\203;G\223\255<)\301\367<Omy;\332\302U<V\003\317\273vOo;\367\023\365<P-\335<\3100,=B\365K\274;R\007=\030l\017\274\261:\224;\366\'e\2741_\030\273\020e6=\362z\342;\264\221\211<\376\200\267;\217]:\275\272\234<\275\310r\031\275\320\3438=\346@G\275\036\005@<\027(\347\272\242\377F\275\245\360\372;\2633\200<\244\317@\274\024C\214\274\275\372\302:\246;\375\274\234\017)\275o\276\337<G\037\230;ATF\274\020\377\304\274k[\036\274\266/\005=\033\321\325<[5<\273wS\254\272\314\002\327\273\350\307K\275\032D\217\274\203/C=A\215\004<F\253a\274\306\203Z\275\000\037\325;\006!\007\274\250\030R=y?\020\274\240$V\275G\242\357\274\036p\271\273f@\024<\006j\237<Q\021\020\275\256\020\371<G\221\363<\223`\026\275\332o;=\025\333\310\274\202\224\037<k\3406=\363A\235\274\303v`\274\251\003\t\275\212M1\275\244[\025\275\007\234\034=\325\310\220<NA\270\274CnF\274\266\226\035<\265\344Y\273\031\376+\275\262\005\245\274\307\274Z\274#\365\361\2749\242s\274X\022\\\275\027\311=\275\032L\"=\006\247\007\274\356\354\206\274\374\234L=U\361\002=\246\312m:,\241G=\343\240\317\274\311\014\255;w\206\230\274\302\006\007\275;\025\242<pk%=\307\252\006\275\337\033\025;\353A.\274m\212P\272*\241\326<\177\3035=\370\257\247\274\014\210\320\274\265\341U\274\345\221\255<\332\336\375\274:\234\233\273k<\205\274\270\037H\275V\246B\275\t\013A=\203\246F\274\310\024P=\025:X=\201\210\357<\312\364*\275\305\231];\367KG\275\036@#\275f&\363<\271\317\021=H1(=U\023J\274\361\337\376<#\325m\274\352UG=;\271\251\274O\035\316<\007\365\004=\317\234\377\274\342\035\003\275\330\034w<}\024\356\274\036tO\275\327\210\370<\331\251\026=\")\332\273\315\t]=\313|\\\275oK\"\275\241\017\333\274-\354\006\275\231\352\204\274\347\206O=\237\316\006<\0070U\275\363)9\275\035\372N\274\230\204,=J\302%\275\n\017s\274_$\237\274\353q\022=\020\226I=?|\317<\362\234\362<n-Z<\365{\036<\235\227\376\274\360gS=Y\277\234<\206\016\215<\211\300\r\275aN\001\275\"{\\\275\342\342\n\275\024\322$\2753\347\207<\364V(=\223\221\362<\376\353\024\274GE\010\275\274(X\275v\353\004\275\377W6=wi\215\274 \364\002\275lK\300\272;\3266\275\275\326==\367y\245\274H\305\007\274\362\203\205\274 )7\272<rX\275s\202$\274\016\010\n\275\036\223\214<]YR\275\241\253\237<\2618\331\274\352\235\233\274\310\031J=\320u\231\2747\'\021;A\246\210\274\354\271\031=H\332l<\340\350-=\251:\026;v\334\255<,\305\351<\260\311\\=\311%H=SR\311\274\032\225\375\274\341I4\275\026\016\010=\200=7\273{\331V\275%\322\000\275\204\3246<\337\211\267<\203$\235<\033\247\217\274\340/7=\345\r\020\275~\314\014\275ir\201\274\333-\033\275i\237\363\272\345\375G\274\251u\253\274\2723\033=\362\363\312\274$\367O=\227\245>\275h\363\025<\227\363.\274\220\013\007<\366 \376;\022\'M=\004gg<\264\264^=21\004\273w\231\223:c\235&=\323\214\346<\353\007\357\274\033\023\010\275A\335\360\274\252\216\366\273\004@1<\325\202\002=\000\260\220\274Y\265\001<\371fR\275\027\355\003\273i\305+=@(\275\274o\2548=\352\000M\275\322\206v<X\221\022;\314\241\333\274c\010O\273/\3426\275\264m\223\274\350s\347\274\2318\006=\354D:\275\221\3230<\241<T=`v\031=\373\3374=\0170\362<6\346\030=\246\210\376<\367\3207=g\3241=\031\205\010<\255\357X=A\200#\275\327\316\t\275G\177G=\203((=\025\2102\275\2263\364\274GP\002<\035\304\212;\021i\005\275\262\217\336<s\370&\272\317WA\275\035W\312\2747U-\275\270\203\005\272t&\251\274D\262\002=K:\014=]\365\033=\216\252]\272\2349\335<V\300)<Q\351\237\274\226\211\024=\274\204\025\274\257zS\275\327\030]=\025\016\250\272\177\2029<\361\320\013\275?\267\006\275!;\032\275/j \275\301\032\200\273\270\220T\275\014+2=\233\266\020<\366\257\313\273\272\3739=\000\0330=\371-#\274!\033\021=6\002\017=k\035Y\275\243d\026\274nX\234\2741#\022\275\323c&=\274\343\377\274\306\010\275\2739\037\026=\036\371\032=U\346\314;7@\034=\377\277\342<\027\033,\274\362\276\202<\303DG\274\315\t\006\275\314\230M<\231t<=\326\347==\215\226U=\364\2418\274\313\2602<R\213R\274@\341\001=]O\202\273z>\361\274/\257w\274\354g\246<\227\274\027\274\005\355\313\273\334\364\264;-\223.<>T1=\275\202X=\242\312Z<\320\202\023\274\231|\007=/T\350\274\354\350\242\274\031\231L\275\000\251\371\274y\273\377\274\341\221C\275J\320\023=O\344 <\000\307:<8\334\\\274\320!O\275\320\355\325\274\332\200\013=\273N+<B^(\274Z\211\355\274\233\\\253\2745\313\253\273\222k\037\275\301\366\030=V\305\007\274\204\\\"=5\010\366<&\362\021=i[b<\312\275!\275\025\210\224;\034\265\024\274%\240\301\274\376?\251<%\300\303;\341\034\256\274\005\374\253\273~\006+\275\301b\211;\313\024;\275\242r\335\274\251(\356<\004\264\261<\353\001\213<\350\325+<!\017\264<\252\026Y=\216\366\272\274ce\025=\262\364\254<\366D\246<:\031\034\273\330v!<-_-\2748\307\370<j;\000\275\307\200\005=\225s\037=\250\037\276\273>/8\275;9\341<\354hN=\242.\036<I\220\033\275\361\224\033\275\321\344\206<CE\252\274 \227\n;\333s\003\275\261\271Q\275\325(\337\274\007\326\306\274y\024N<\345\267V\274\206\300@\275\243\016n\274\222\222\320\274\322\345<\275\314\366S\274W\233Y:mz+\275\2310\212\274\246\023!\275s\236V:V\301\020\275t\316\377<\013\030\"=D\023/\275\266@\222<a\270+=\303c\211;\247gK\275\215c<\274\373\026\013=\370~\354\274\356N\240\274\006{\327<xIB=e/*\274\352\234\362\274\022JM=z\307\305\274q\220 \275,q\376\273\302)\t=\340\332\302\274+\234\371\2742\261N=\013HM=\353D\215:\243\336\014;M\221\017=\201\241\006=\363\346\346<\237\220^\275<\244J<\374\347\010=2\346\330\274\375\254\277; \367\252\274/\216\276\274\303\023\303\274)Ho<\216\246#\275=\362@\2751\003\001=jX\013<\007e\373\273O\3609:\233\306]\273\010\212\272\274K\213>\275CA\215\274\276\376\006\275\2431,=b\303Y\275\3042\375<\322=b\274\354\303\035<\350\3046\275Y#\361;-P\276\273c\033u<g\221_\274_\0213\275\231k\251;\267\344\022\275\006\034Y=\353^\316\274\001\237\014<\307\327\257\273oIO\2737\003\245<\036\245\251\274 \347\344<\253|)=\207\307 \274\346\314\362\274\354\n\211<\343\241\262;\363r$\275nv[<\3235\025==\\T=E/\240\274\311\204\273;\310\320*9++\252\273\374c\262;\3224\037=\021~L\275>\311Z;\302\356N\275\203BL=\271\364\326<\204\257\0148\377\371\242<\355q\213<r\220\333\274\235HC\2759NV\275\316\020E\275\216\323\253<\303o\302<\334/\"\275\211V>=\035\236\361\274\275CP\274\272\n\333<\260\031\307<\271\356\343:=\352\013=\230*\370<B\035\003\275\366\001\204\274Z;\240\274\376f\322<k\376\250\274D\002\025\275\261\345\342\272\222\350_;ju\334\274\237u\016=kgL\275,X8=\177\226\225\274  \030=\332\276\036=~\034\213\274\231\333\r=*\306X\275\\0R\275@\315\211<\377\261\333<\206\310-=kpR:$s\027\275k>\233<\227\010\211\274J\316\374<Z\3072=\337\005]\275u4\035\275t,\'\275\336\320\3118\333\266\366\273\305G\010\275z\032\001\275\323\036)\2742o^\2753\347\027=:\260(=\313[\332<\007\017\246\274=\3145\275\033\216\273<\302\211%<\306k9=\370\014(\275Rg\"\275|6C<\2436\033\275#\314q\274g\350\325\274\215*\372<\264\273\000\274;2)=\251\002\263<\321^\321\274\215 \004<\357\026\005\275\225C\322\273\010\320G\275\t =\275\'|\253<+\373\211;\224\233X=\312#\371;*]9\274\223\327\032\274\227\245.\2755q6; \3274\275\370W|\274\324\345S=f\222\r\2757_\025\275\220\'Q\274\220bN<\341\212\250<\0134\336\274\357y\021\275:\257\022=?@Q=\212\232N<\250\000U=\034\263\356<\302y\377\274\265%Q=Z\225R\275\306\225\034=7\034\030=K~\031\275K)\224<w\037\273\274\375\003\356\274\352\331*<\254\374Z\275\0074>\275\241\271o:~K\207<{\350\023=\340bN\275cI?=\r\320\271\274\007\264$=\335\365\336\273\363V\264\274\337\036\237<1\3006=?\034\262:\266{A=\021DU=}\263W\275(\265\351\274\324u\212<}\000j\274\\m\014\275\207\225&\275\177{\267\274\254\0079==\034\020\275\345y\237<`\001\243\273Z|\023<fF\364\274\362\001\022\275\254\321\034\275.Y\327<\347\031\370\273R\026\026\275~\2766<\276\026\013=\267nQ\274\035\003W\275\362\235\215\274@l\213;\277\330\320<\257b@\275\275\323\257\274?\240+\274\303\r\t;*\030*=(\237\202\273>T\202;\257\177F\275\365\332\t\275\365\373\222<S\314\331<\226l\244<\247\240\2049\364q\375\274\014\304q9\351*\237<\275\337\036=y:\352<uv!\275\211\247?\275\205?\203\274M\\#\275B\343&\275z\335n\274\332\323\242\274\tmN\275\334c\263<\300\221\353<\367\205\355\274\337\r\332\273\007\270&\275Vw$\275X\366:<\347g(=\207~\203;\'m4\274\025\227\213\273\251\240\017=\331@:\275\301\243d:Z\201\035=a4I\275\354{\341\274?\010\335\274\347M\263<s\312B=\250\027\032\275\014\273H<\"7T\275p\221\034<|\'\230\274@|\n=\027\215\344<~\335\313\273\217\223\037=\230\337\2129\r\242\240\274\021\241\375<91\310<f\2654\275\243[E\275\243\363\207:;9\\\275\022\017\017\275\341\274\316\273\235\275\322\274\222\300\005\27555\n\275\235\2138\275\000\002B\275\275\326V\273z\201R=\2302/=\311\242\333<\265S\351\274P7\376;\314\205\000=N\370C<\030\251==\314\232\373<9\365U=\202\250p\273\225\241\271<\007\nK\275\335s1\2759\021R=!\026\226<\"\035\233\274\233d\367\274v\t/=d\365(\275_CK\275.a\010=\273>\205\272\344Y+\273\322\261\217\272s\2557\275J\356\216\274\270p\347\274\010N!=\340\2121\274(%\346\273\353\344\376\274\024\023\360<S\336Q=\004\n\226\273\300\3637=;.<\275\306\235\257<\025\024\270\274E\341[\275\231\321\360:\336\356J\274\354\341W;\256N\213<\217wM\274\372\201\031=\244\313@<E\330)=v\307\037\273\177\331@=\373\004\375\274\177\364\305<\210\372\036\275\241\316U\275%\350\275\273\035l\026=ww\317\273XH\353\273\241\'\316<\272-\215\274@\340\304\272\354\304\006\275\314\351p<\311\270\223\274\360\355B\275\263m\362\274\027\026V=\010\022\367\274\246\332y<\364\224\276<\241\266 <\373V\276<\325\374C=d\260k\273\212{\374\273.k\275<w\321\037\275\306\005L\275\213\215I\273B\305X=\261X<=\235\224\026\275\310\316\031\275\340<\000=\242\241 =\006\266\312\274$\230P=\"J\222<\030\354-=\347\322\022\275\265\254:\275\367\270l<\034\346\024;,q+<#\367E=\276\223\032\272\304?@=\311k6\2756\321O=a\247+=\246\0002\275\213\353?=\035\351\027<-\347\030=\032\3020=\336L\014\275\230\306\200\274\007. \275/j\"\275\0354\226\274\037\252(=\032RS=\365E\346\273Q\302\021\275\204Gd\273\351\0033=\305\027^\275I_t<\2502G=Fe(\275\t\3736\274v\374\035<\006@\210<\272\036>=\263\364\202\274U\007,\274\005\335\016=\236\026d\273\211$\257<\320O\200<\334\355\031=\356\274\333\274\273z\024=\005\346\220\271H\233<\275JA\337\273\231\332\262\274q^\271<\342\307E\275x\0226\275*\347==\002\003\371;*\230S=\214j\244\274FH*\275\2613\314\274\340\221W\275\316\024\304\274\"\237M\275\343\300\236\272\030\224R=\265\032J=,\356\024\275V\224\252<\3530\036=p\224\020<l\245\"\275\331\375\266<k\243U\275\273\264\253;\"L\034<\217R\256\274\373\225;\275\n\273\337\274e\221%\275\300\322]=;\223\270\274\311\270\023\275)YW\275\267\026\233\274\003G\202\274\333\310[\2743L)=!\267V<\245\3278=\260\221\025<\036\231[\274\233T<\274O\321\032=\301\363\223<\221\374\313\274!y\370\274\316\004\033\274/\304M\275$\273\032\275\343\354\r\275\325\243Q\275=\252\235\272\3104R=z\313\276\273r6\327;>}\205<\213\337Q=4)Z\275J\212I<R**<m!4=p\223\325<\036\306\017\274\333q\326<w\021;\275\235/\371<\017\255.=\370\033\n\274`\264\232;\306\r[\275\324\355:\275\207n\207<\234\315X\275%f:=\216\376I=\2265\303<T\302\362\274x\226\000=\310-?\272\001bJ=\257p\276<\377\253\235\272\253\266\351;2[\001\275o\257m\273\\v\332\274\373(G\275\376a3\275\363U\033\275\313\027\226\274~\337\254<t\202\262\273\325#\334\273\257W\000=\353V)=@\202\370\272\026^\247<Q\334W<\360#\006=\331\020\202<\207\255i\274\2349$=\202\355\261\274\233\235\307<\337\250W\275\2144\224<\375\004~<$9\355;\251ME=\325S\266<U\264\n=\317\215\004<\201\256\036=]\\\n=\245\277\360\273\250\342 =?\327\241\274\337\035\034\275\317\013\003<\312\2716\273Kn)=t\252\372\274\300\nD=\037\355\017=\204\360\030\274V\t0<QX(=\007X\223<L\367-=\024\367\317\274\005L\313\274#\374T<\314\200W=\232d\226\273\344\240]=\221\001\036\275\0165\'9"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
          dim {
            size: 4
          }
        }
        tensor_content: ".\352\271<L\223^\273\237\227\333<>\023+:\214k$\2742q\335\274{G\365<\020\201$\275\014`\264\274\027\214\035=\274LX\275\332nE<D\203\031=\'\255!\275\261\025\202\274\304a\013\275\263q\020\275\307\037\004=\303\322]=z$\307<\3621\035=\240\272\257\274f\260L;!c\370<\272\0013=M\312\r=~\203G=\377\372$\273\004\024\210<7\332\367\274hi\236\274\223\245\311\274\250\353\251\273$\223L=D(\206\273qP-\275\300nF=\204u\323\274_\355\373\274\342\337)=\255\005C\274\374\215\026;\375\337\002=\262\220@\275*l\210\274\270\370\007=\371\223=\275\210\237\r\275\315\035\246\274w\212W\275]\275\203;\026\t\240<8{\020=\215\301\341<0JW=s\212K=\026y\322<\253:6\275}\233\314<\323\032M\275k\255\321\273W\322S\275o\217B\275TY5=;s\'=\007\3068\275Y\034?\274z\023,=_\031\224<\002\350T=\242T\r\275p6T\274\310}\030\275\314\340\214\274\207\010\303\274\250)`\274\264\357&=\255\313f\274\231\341\253\274JdE\275)\230\216\274\200 \r\275\351\017;<\223(\276<\203\251\256< 8R=W\207\034=\030@\226\2723\355\247\274\342F\002\275\014\321*\275_\227E=\303\201N=\222\003J\274\240\\\205\274\242\331\300<\356\366\320<\017R\235\274L\261\314<\\E\373\273\264\036\310\274sw\036=il\367\272\306\017\004\273\265i\224\274\251I\'\275|Q>=\034J\232<\'\373\244\274\301\335\337\274\310i\255;\324\007\"\275\262\231W\275\253n\336\274\267&&=0\2338\2751\302\216<\037-\033=\2369@\275\001\323\023\275\202<\316\274\316_o\274\034w0\275\260\377\000\275\330k\344\274\371D\031\275\010\013\217\274\375\341X\275\240\305+\275\267\217Q=II\350\274\200Z\017=\017\3349\275\216)\036=O\325\204\274\372\324\314\274\r\252\230\274\007+\021=|\025\330<J0\007\2756\266\245<\243\2502\274\330\2614\275\t?K\275\373\260X\274dz\030\275\202\\\325<\363\224\'=\225\247B\274\340\212I\275\262\243\214\274\201\031\025<%?I=,\202\322:\307+\263\274\344\n\020\275\344\376\206<\353z{\274,I\337<\273\254\014=Q\341\206\274r\242\354\274.(\240\274O\257\017\275\2530\257;\320\304J;rd\002<\r\370\031<i\010;\275\027GP=\3051\243;\200\036\217<.\372&=\334\352\003<v\275\234\274\245C5=[\276\031\272\234\304\234<\310\327\020\275\203\353s\274\353:\347\274\201\313i<\303\305\271\274\020\222\\=\317<\n;\346\001e<\307\252$\275=\270\223\274a$\200\273}\256\250<\351g\363\274\210P\271\274\217\351)=\260\007$\275\352\332 \275\275~\317\274\301\240\305<\224)#\275RPJ\275\n\357\035=\tEW\275_jW\275\370r@\275\010\341\210\274<<\022=\242G\304\274\236\256(\275\316\2452\274\235\352\342\274`\037;=\215\253\'<\343W>\275\231y4=\026\037-\275-\237~\271Ue\354<KUS\275\350\020T\274\304\266\360\274\235\2055=~\026\010=\223\001/\2758GU\275]\353A\275#P\257<L\270#\274\004\0204\2756\315J\275?\334E\275F\211\224<\n\263[<ZB\224\274V\\~\274\322\200\317\274\331\372\251;e\317\203\274c\3024=\255L\014\275\2209\314\274\243\245{;K\"\206\272Y\0274=M\266\207\272\224\371\003<\317\010\276\274X\256z\2740\303\251<\225Q\336<\250\2450\275\223\346\004:\343\313)\275\231\353 =\202d;<6\231{\274c\342c<~\217\377\274\225\205\212;\331y\327\2734\271\321\274)\205\024=\334\217\\\274p\010\211<\220\224\244;\200\243\266<sF\031=\361\264\'\274\200\350\340\274>2\212\274\317\376\333\274\212\340I\273\010n\034=\235]\371\274\035P\233\274\372]\261\274v\035E\275\375\206\366<\022\303K\275\023B\364<\2433\357<}\002\217<\304\265N<\357\362D\274\215H\263\274\207\214f\274\266)&=^c\344;\375\257H\275\274B\246\274-\2511<\301C2=A\320 \275\004f2\275\346\325\014\274D\n\n\2754\t\2229\004Fx9\227>\326\272\313;2\275n/:=\217\371\221\274\307\013)<\351\275\341\274\032\023\034\275*\\\253;\301\213?\275\215\244S<\305r\"=\031\223\t=Bh\217\273\020(k<\336z\266<\007{Y=A\220\372<\352\257\033=6\307>\275\307)]\275)\3024\275@\247\n\275\242>R<\014\023\260;F\244A=5W\261<\037Z<\275Zo.\274\202e\000=\326\213?\275p\244\363\274J\013\027\275\005\214\262\274\\\n$\275\037\323.=\016u\207\274\226fK=\00696<G\223\006=U\321\310<\346,V;~\303\231\274rJ\263\266\020\016\373\273\361(\342\274\374\211?=\265\341\235\273\263\013\340<\332,\003=\357fx\2742#\005\274}K\335\273N\201\016=\222\366%\275\231\033 =\276>\212\274\270\000\021=\022\332\210\274h\037Y\2758\232*=c\262^\275\367\301\303\274$@\270\274~\2243<\267\313V\2756\300\370<\275\337G=\315\216\202<\245\250\035\275\014\001\343<\250\372\\\275i\022\\=^w\303<\206?\250\274 <\213<\240\210-\273\201\350\n\275\264\323\007\274~\224*\274p\201\330<\317\210\203\274{j\263<J\354J\2745I\037\275\275uJ\274\234\214(\275^s\310\273H\231^<\217:\345\274\361\177\305\274\006L]=\33036\275\247c\264\274T\034K\275+\246-=\305\231/\274/]F\272\013 #=\021\313\230<2\362\371\274h\340$\275\213\205\"=b\263\034=rs<=\371\030\257<,\277\236;MbW\275Wdr<\261: =P\037f:\020\240\227\274\246\254\313<\261\263\027\275D\342P=\n\206];\2017o<\345\005\005\275>\356\310<!\353\346\274\000\373\'\275\311\232W<\372\rF=\223\276U=\014\276\273\274\007\024\2428\334\272\241:\374\274\035\275\257\267+\273\302\224\035=\244\'T\275\273\240\264;\300\351\346;\375I\243;\222\034m;\016m+=\223\375\237<\244h\347\272\260J\326<N/G\273\364\273\005\275\3531\026=^hv\274\247\274S=\303 \000\275\230?U=\207\334B\275\033y\254;\005\212\033\275{\013\014=\263\237~\274\305B\245\271\344\250K<|p\320\274\242hW\275S\200\267\274\235-Z\274\312\306\354\274\210\331\330;\272T\032<$.Z\274\207F;=\230\271Q= \357\235\274\037\001\232<\344\207z\274\023\020}<y\300\036;f\n\227<\260,==\376\222\343\274\234\204\275\274\276}\366\274\325\001\334\274?o*<#\212^\275\336\304\356<\n\222\354<A1\'\275u\000\326\274\002MW<\245\377\257<+jX\274A\016\021\275\201T\216<\344Z\217;m\344\211;\024\026\222<\213\215\250:\243\275F<\010\212\027\275\200;8\275\315\375\225\274\275\243\210\273V\260&<\210\035K\275\013\247\361<\334B\024=e\370\237\274U}\261\274\352<\"=8\241\371<L\0006\275yCc:9\267K\275B\342\330\274\224\275\374<[j\'\274\262\210&\275\3169\320\272&\020\236;\020b\025\2752-;\274\274\307\020<\263?5\275\306\223\317<\345\242J\275\025/\346<\021\3363=\021+\020\275R\330\020=\260\004\n\275q\327 \275}f\"\275\255\274\027\275\352\376:\275\201\306\340<g4\n\275\021\321\256<_H8=\037\275\376\274\333U\375<\326e!\274\215\272[\274t\001H=\305\225Y=\013r\345<\024\271\030\275\032{\215\271[)\270<4\321\364\273\237XA=\372\341\251;>\017\245<d\304\"\275\271\375F=K9\\=c\361\226\273>=\303\274\314\347\320\274\027j\362\274\376\317\037<\277^\262<\200O[=\376\223\313\274mY2\274\006K\010=p\010O\274:\302#\275\362|\006=h\220Q<ZO*\275r\210\344\274\213=C=\332,\333\274D:D=\202\211\"=\325\005_<\213a\350<\361\036E\275MCX\273?n9\275v\364 <d\206]=\373\352d\272\252\306X=\362\345\002\275\014\203\003\274^A\267<\375\351\334<\027\374\215\274\351\264\230\274yu\026\275\361\371 =\330\265A=\003\203\037\274\216\"\334</4X=\037\372\310<\001D\032=_s\371\274\342;G<\223\272\037=\374\000\310<\355\214\247\274\r\277\213\271\351\265\366<\336\262d\274\021>\314;\247\230%=\371X\007=\300\211*\2759Z\326<ngE=%-1\275\337[\267;z\300o\274\245\007\363;\247\306\253<\275\246\217<D\273\227\274Dj\263\272\212\245\036<\227t[=\263\273\213\274\'\247G\273 \3334\274\267\323*\275-\342\202<s\270C=:\322D\275\225x\322<\014\375\200:\375Au;\266\246m<\335\247N=\245q\225\274\325\326\t\275!FZ<\256\311\273<6\027\273\274:\241P=\207\023z\274\274\275X\275\240_\023\273{\322\001=\264E\010\275Q`\335<\201b\026=\303\336.\274\311\026\245\274\033\\P\275Cx\253\274\222\321\027\275\323\355\022\275\260M\326<M\266\347\274\266D8=wN\022\275W\310\n\274C\336\317<\024\321X;:\217\024\2749^9\274\255\273c\274\000\354L=w\370t;|]G\275\000\232\013=~N2=\nv*\275\022\330\277<\014x\377\2730\237\251\273\246E\252<A\036\311\274W\261-\273\301=M=a\227O\275\023\230\\\274I,\242<\20337\275\226?\306<\316\016!\275_]\247\272\221\276\330<\354\252\336\273\327\330\205\274 \327[\275\312y\240<lz\361\2745\263\330;\334\253\002<\356|\377<\274\034:=,\245^=\203\304\020=\335\032\'=\275\306M\274\"\226%\274m\210\315;0T\355\274\212B9<d\271\237\274%\3563\275\315\271:;\325\250\336\274!\310\027\272\327\217\013=/\000X\275\353)\271<\203\274[=\330(\203<\372\207\001=\325\337\033=\206X,\274y\302\341;\'\206+=\320\356I=U\344C\272O\030\\\275\245\235\276<&\203&\274o4`<\370$+\274\207\010\302\272\356\252E=,\325B\275\231f\032=2a\037\275\306\345B=\236F\\=\272h\363;D\224$\275\253\275X\274\222a\250<c\244\263:\226\325\345<\005\004T=\021Z\004=Q\350\t\275\321\035F=:\306I=\271\"d;dL\001=\2128\303\27333\261<a\332T<\022\316\260\273\270N^\274\'\rC=\373J\3029F\340\235;\212\3634\274\334\274\351<\262\244\270\274/\r\'\275\357\014\303\274\376\244\027\275\030\017\026\274v\361\014\275}\203#=\221i\314\274\371\207\357<pi,\274\263\316<\2756x\322<\037%\225\274\320\323\200<\343\243d\274\316W\n\274\270\277\221\274%V\212\272\"\te\274s\345\321\274\333vU;\241\205Y<\014\346\276<\324\037\033=\325H\336\274>\213\n\274\246\231\261\274\207H\236\273!1\004=\2019L;S>>=\272\2276\275\277\351,\273[\211\026=;\356i\27300*\274fEJ=\325\036\364;\023\324\301\274\377\377\213;\036\3322=6\224\372<%*\024\274#\231\316\273\362\037\004\275lt2\2758\010\215<\002\022\226\274l\273\207\274D\000i\270_\270\342<\322kB=\356\206\016\274\33205=Y\314\312<\331\322\222<\276\334\365\274n\265\341\267A~\023=4\2418<;S\253\274\273W\'\2757\014)=h\332\326\2742\311O\275\213\201\373\274\201\014\001<1@\254<\025fZ=\312\315\003\275\213##=\310\255\310\2740,\212\274T\247#;\241\312M\275\2359\275\273t\370D\275\221;!=\242\351\227\274\031w\013\275\t\220z;\220\234<\275\021\206B\275{\215\305\274{\036\303\274\002\023\017\274\314;\326:HmW\275\325(\337<\225p1<W\206\257\274=\345N=\366Q\203\274Ay?=\335\320\273\273\276\002\t=\323\031,\275>\252e\274\366\262\342;)\322\247\274\361\360X=\217Z\361<\274\216/\275\3314L\275\014\223\264<W}O=\'\363C\275\300\334\346\274\355\036l\274,\306\245\274\336\237:\275\270\272\364:gw\020=<-\253\274|\315\021=\236J\024\275\312yD\274\304o\342\274Ol7\274\022{\r\274\016r\247<|\266\241;~\272Z=\030\200\362;\246\254C<\221\243D\275\233\345\211\274M\r\013\275kVM=0X@;5\261N\275g\264\331<\027(1\274\022\265K<\t?\233<YS7=\001\013\361<>N3\275|*H\274m\2669\275\017\346,=\245\247P;6\374\213<\\nY=\260\204&=\301J\204<\362\r,\275a\0269={\233\311<\001\376e;\350\201\034\27537\304<\256N\032\275\241\336F\274KH\334<\016*\035;]I.\275\373{\025=o\023%=\366\354@=\226\263\033<\337\347\300<\235W\267<B3^\275\206JG=\374\251P\274\033x\355;\272\241\276\274\004(\205\274k{\325:xR\276\274\247\204^=uZ\241\274\231FM\274h\323\264\274\323Y\n<h:\001=\0251\276;9\001\376\274O8\317<\253m\021\275\020\305\023\275Co\302\274\324\262>\275\201\025\300<\327\3424=\214x\245\274+\300\323\273=\372\025=\365^M=\030\2029\275\326\303\226\274\313\263\223\274\004\223\311\274~b;;\267<\305<\272z\320:\216\332\366<\003\307\005=*B\211\274Zo\004\275\311\307\037\275\323\n\010\275\337\330H\275?S\024\2742\037B\274\256\2766\2757\302O=\247\3445\275\333a\272;\220\355\234\274\235\203\324<v\270P\275\210\250Q=\035\274W\275W\246\253\274E)W=\023\261\214\274T\024\263<\211\263\027\275\333\207U\274\347)V<\022\215\331\274.\266\212\274\247\272\r<\177z\300\274\267\353T\274F\005\303<\234W\036=!|\252\273\022\"\232;\270\002>\271\346\"\005\2747\2077\275[\377F\275\217\377\204;\200UD=\262[\270\2739%/\275.\326I\275c:\030=\273\341\270\274=\2062=\266\003\336<X\305s\274\016JJ;\316\200\032=\345\000\353\274\020\254`:\357\313C<\201J\r\274\n2\267\272\306\277\010\275\273\3348\275\231T\315<\333,\016=ew\241\273\237\035\005=AS$\275\007gK\275\220[\345<\376#\343<\0174\246\274\t\207\255<^`\032\275\376p=\275\274\244\304<\374\221Q\275\220\026Y=\36047\275\325\r.\274 T\333\273\322\273\266;N\347\r\275$\272?\275\010\216\177\272\357\346\000\275\306\314\340;b\000\354<\240\300.=\0045\017\275\336IN=(\007-\274\22185=z@U=)Q\375\273\272\030\r\274\026\212\236;a\337K\275\t!m<\023\363\357:j\006\000<\021!<=\267}\251<\202\233\014=)M\337<\244\310\365<1\356\215\274Q\366\305;/\360\035\273K\264\206<\027\222\2238+=\000<i\0209=-h\342\274\276\275\277;\365\350E\275@~\215<>s*\275;\2644:\n\247\212\274\321h\021\2757d\253<t\301\212;\277\230\002\275\3617\321\274A\357==|\374\014\275\265\336l\273\007\362A\275\357\265M\275a\\\036<\215\2358\275|\353\004<\346\0217\274\275z\372\274N\273\273\272\310\342\216\274\003 \013=WD1=\016\327\005<\260\333\006\274zC\013\274\362$\375\274\242j4<>\245,=\010n\267\272\225\246]=1\276O=\017Ki<\265WI=\260\177!<\237\036Z\275\266\207>\275\\\275\016=\234\301\253;\265>\021<\277\314\360\272]K\035\274R\207H=\321\014)\273\004\273>=\371M5=SB\215;\370\251\300:t2%<[\243!=\016\261==\203\025\001\2741\264%<!\177L\275\3449?<\341\321#\275\177\330\205<\350\246\277\274\243k\034\274\364\336C\275\215\033>\274Mn\260<2;\004=\236\001\250;2\r\035\275\210\261\263\273Y\216\254\274B\213T\2750\rP=\266\310\231\274\'U\032=m\254\021\275\031\317\032\275}\022&<Q[s\274<\264\242<\215\202\245<\020P@\274\373+\201<\343Z`\274\214W3<b\234\005=\025\333\260\274\272\327\201\274\362\350^<\351\235*<>\035O\275\236\320\256;\206\251V\274p\356I=>i\370\274\333Y\006<WN\\\275\253Z\024;\221\241\010\275\216\257\020=\242\250\023\275\345\2421=\332\323J=95\001\275\260\223\n\274l\257H\275la\241\274$\261\'\275\207\2051\275\277w@\275\003\211\007\275/)\357<\314\262\341\274\345\002\270\274\344\3413=\031\354\026\274UlR\274\177\271%=\375\311\210;\307I\032\275\304\363V\275\014Z\277<\245`\264;\262V3\274\311B\031\275\217\200\317<\3420@<\253\252\001\275@\276\024\274]\037\327<z9)\275\237\330\214\274R\326\356\273,x\"=\261\324\317\274[\000#\274\350\265\020=n\3351=\036\247\r\274\273J\216\274\027\240\014\275z\272\267;L\215\003\275M\t\027\275o_7<)\224Q\275\\\357$\275/\3328=\014n\365<ac\202\274t\330O\275\310y\307<(q8\274\332\364\027\275\202z0=\333\033\201\274\004\243\204<l\317\033=\342\314\352; w@\274\352\313)\273+\003L\2750\263A=\213\225\317<g\326:\274O\235@=Z\221S\275|\305\001\275\222m\375<\241\251\027=Z3\251\274\"\346\357<\014V\247\274\265)m\274\034\'U=\257.n<*gB\275\313\314I=2\270\031=\265\202E\275$\253@=7\006J=\372g\307<K\256\211\274Ht;\275\006\311J\275\267\r*\275H+\035=gZ\007\275\222\254\230<\315\305\216\274\261O\024\274i\201 =\361\3324\275?\365\321<H\031I=\314\375D=\r\317\306<>=\005<\344\263X\275\305o\026<WT\030\275F\355K=\360G\274<\357\\Z=\023\253\337:\263\361[<\365\254\374<\376ht;\271r\217<I\362O\275\275\0241<\2061\221\274`\366\212\274\177kH\274\303\177$=\334d\303<\352\323K<\030\234\300\273\205\226i<?\301$=]T\364<\313\306\020\275\014\"\271\273\204\270\027\275\267\317\001=\246\215&\275>*\252\274$n\356\274Y\205s\274c&\314\274X\247@=\264S\217;\004O4\275\234\2638=\312\341!=\340\\0\275\363w<\275\263\246\r\2740iS=5\212\025<\027yC\275\034\242g<\270|\207\273\301\277e\273\t\336\232<\265NT\275y\2237=\250\345C\275\360#\025\275\265\300\006=\376\016\016\275O\022p;6\007(=\347\356V\275\242>,<&\324L=g\tE\274\013\343\t\275\244\253\214\274\307\264\\=\320\2264=\372#\234<\343\201\003=\202\332\006\275\023G!\275\017\254\272<\315!E=\344\365\312\274\352q\014<\372\365$\275\203\033\'\275C\317*=\333B1\275X\340&\275\260q&=\010\376\300\273\355\320\202\274r\023E=\\\270\037\275RX/\273\351\003\224\274\374\236\353\274\007\250\032\275\236\363\006=\316\315\233\274\235\030\204\273\020\031\002=\0101v<\346[,<\324 \321\2745\033\024=,6\256;\223\331\023\275\250\254\007=\337\317<\274\257X\002\275\274s\361\274\224nL=^\022\230<\225\266\036=\001\214\254\274\030;/\274\202*\362\274H\004L=\334\270X=V\210\373\274\211\034!<\277!<=H=\004\275d\346=\275\301\257*=\206\235\265\274i\001K<\306\360Y<\036\313\000=\337h3<\021\247\017< \366[\275\242\0348\274\372HR\275A\244\276\274y\nY\275XI\363<\024\240\225;\202a*\275J5t<\245S\363\274\206\252\321\273\304N\326<z\255\021=\013H\264\273\257\003\270\273\022\202\261\274g\234<\275\221\261\276<Y\027P=\010\232w<F/\271\274\002\251-=\216\211\377\274\321;\021\274\322\023\370\274OE)\275\213_\022=\216Z\226\274\265\271-=\2079\026=\306\342\n=BpN<\272\360E\274\252\362\240;\357Nx8\3417Z=B\261\023\275\342\266\032;1C\207\274ia\307<H\220\302<\241;g<^\240\336;%\2517=\273\277\002\275 \036\334;\352cO=\275\230\020\275\357\273\301\2740\367d<Y\000\006\275E\2235\275T\013\214\273\026\271\322\2733`\000\274]z\005=\321X\020=\2764\n\274Tl\016=\023+#=\001\362\030=.\024\034\275%##\273\n\363\000\274UF\276<\222\251U\275\272\231!\275\364)\337;\236\341\226\273\177#:<\306\356U\274\303\376W=4\320\004=\333|\374;\350\374\202\273z\302\236\272\332\032A=\014\332\247\273\\\022$\274\223mM<0\305\003\275\306\207C=6n0=\257\214\037\274)3H\275\211w\2559V\353M=\360\255\'=\337\251\017=\225\342\251<\3772 \2744.X=\026\200\272<\251\313N=\016\326\276\274!\215\357;\343\255/=\253J\031=\363\221\006=b\374G<CrG\274\220f\033=\036\317[=1A\330<V\tX=\263\317D\275\241\3536=R\r\361\274\232\202\212\274t\270&\275\345\251Q\275\356AN\275\025\325\225<\265\250\322\274f\n%=\345s3\275\325\343N\275\034(H<+G\257;3\233\004\275\355\375\371\273\361E\240;\266\343>=\r~\203;\255\276u<%C\376<G\371A=3\232%\274\\\337\016\275#r\005=\375V\\\275\031\233\264<x(9=\375\031*=J\3436=\035\227Z<\2043-=\203\032\023\274\275\275\301\274\364\223q\274/\201\022=\333\202\370\274\262=F=\305\320\266<\347\200\'=E\\/\273\t$.=7\363\245<\032I\302<\326/\004=\010D\265\274U\217%\275Y\200g<\253\226\205\274\266\0305\275\314\247\221\274\340\3206=g\201F\275Q\362\365\274,\022-<\3613H\274_\215;\275/9\367<\364_\r8!\354<\275QCJ\275\335\362\223\274\320;H\275\216\355@\275*\"\020\275m8Z\275\t\247\000<\021\240\235\274\216\n\014\275O\270\317<\375`8\275I\334J=\377\000b\274\264\344\356\272j7\224<\372S\246<\267\277\"=\272\014t\274~\233\212<\310\343\r=/\357\245\274\275\")\275}X@<\247\0336\275r\014O\275\330\231\241\2735<\217\274C\243\365;HeU=\203\177\234;\003\257\257\273_Y\003=\027\034\251\274\302\203,\275\344\251\017=\311\277X<\035\330\344<\275\275W\274\245H\000\275q\305M=\007Q\'\275\200\2018=\246\377\r=h\212\334\274\237\3221=W\343\025\275\340\014\271\274\261\311I\275wc\002\275FA\026\275\3375Z\275_<\372\273\021 O=\311v\026;\346F{\274~5\376\274\245\254\344\273\003\213?\275\323N\266\274\316\t,=s\353\362;\341\2134\274\225\326Z\275\376}\030=\321\300S\275\345\377\005=\213\256\'=\230\326\360<A\356\345\274\325\255A=\000\344\030\275~&\001\275\303Z[=dg\210\274\304\355\235\274C\205\000\275\275\n@;%\243.\275-\300H=<\"G\275\247\350t;\263Z\001=W+\300<\315VJ=i\321\251<\227W+=gN\264\274\220\0138\2747b\031=\245W\365<\326\023:\275y\363\021\275\nR\030\275\226\361\316<$\002?=P<]\2750\206\333\273|a\246\274\206vS\274__\"=\361\313\340<De\305\273c\007\216\274\002\225M=*E0=\222\331\305;\366\345R=\262\004S\275\326}\002=\027)X\274\263\"\300<ZB/=\205\227\342\273\t\374;\275\010\005\305;\n\266\262<\350\264R=u\345\331\274\023\307\340\274\352\261\013=\r1\363\274\034xq<\343\2537\275\255\213\215\273\'\303\301\273ZS\010\274\\n\243;\316\314\030\2750\202\251\273V\177N<\374I+\275\244O\034=\007\256\342\274\233!G=\331g\210\274\313tW\275\320\314\341\274\265\304\314\272\374\210\037<X\276\223<y+!\275\202b^\275\005\330\231<\206\037&<\203\374T\274\215/\212<\327\354\205\273\305\327\343\274\370dR\274\273d\304\274@\275\263\273n\354\304\274\304\233>=(\303\272\273F\262!=\304\210!\275\344D\017<[l\177<2L.\274\017}&\273\203/f\274\251T \275\317j\026\275y\3504\275(2\036\274\212\317Q\275\300\003*<R\246B<\363\364\262<{\006+<\370;\010=\256\324$=7\013\264\2736A\262\273P\316\277;\325\001\032=ZZ0\274\231,#<?\251,=qK\331\274\306K{\274\215\267P=]\360)=\305\3055\275\350\302\225\274\270\020\340<\rV\363\274\377\362?=\207\014\342<A-+\274-\272o\274/2-\2751\365\364\274\231G\372\273\020\277\277\274\252\200\202<\366`!\2752\223R\275{\354\025<\221f?\274\234\177\244\274z\305Y\275\031\236S<+s4\275\255\0030<\303\377\t=\034\233B=d\267\350\274\276\036\346\274\230p`<\252\234\004\274\035\035\341;\r\3227\274`%\245\274{\226I\275\204\003%=\307!O\275z\367\253\2746n\371\274\254\303\275<\376\242$\275\351\335,\275w\361w\273\337eW=|9\036\274!F1\275v\226\263\273\006\200\302\274\312\341\353\273+\320\017=\263a\037=\200\250\024=\213\325\354<Fq;=t\243\252<\277i1<=\375J\275\357\206\276\274\270\345i;\212\322B\275\321m9=\004\215\317\274\031\274O\275\371@\365<\246x\034\275O\3266\274\310Y\033=\216\022\025=<\321\275<\275l\301\274m0\032=pW\r=\344\010W=\347\364\036\275\005\020\016=\031(\334<\022\255\006\275\215\203\010\275p\265\\\274\256\r\367\273\232p\210<a\225\220<g\033;<\032\367\240\273\353\363Q\275\376n\307<w\3113\275\2545\017=x\361\'\272%b\240\274IH\267\274\210\003W=H\377b\274\030\323\020\275E\023?=\240Z\255<4p\353\274q\206\366\274\306\030I=\006c\324\274F~2\275\030\372*=\262\177-=\200\273U=\277fs<\316&\270\274\221\0331=\002] \275s\367%\275\016\031\342<\326\345\204\274\364{\037\274T\371\254<N\276\275;\271\r>=\313\353\236\273\365\214\037=\200K\326<\2725:\275\311\352Y\275Z\346\222\274<\234\200:\351\347\300;\320\000A\2751\374\001<\3020\031=[R*\274B\352\336\274_\3220<!T\024<(\330\303:\216\254$\275\267\022/\275\342=R\275\347\201r<!\235\\\275\360\207};j\024V=p\010V=\3347\005=\347\227U={\225\301<\275\274\254:\335)\363<\030\256\037\274\026\375\244\274\235s8\275\205\346M\273w\205[\275\034\031\247\274\222]>\275\312\004*\275\236\027&=\340\305\"\274qf\223<\013M\230\274\360\356\232\274g\363\023\274\307\364\r\275\337\016\020\275+K2\275\266u\"\274\205\3219\275\0103\334\274&\035U\275\265]\225<C\271\026=\326\253#\275\374\324\313\273Q\322\002\275Q\017\262\273*\240\215;\233\036\240\274\212\233M=\247\266\277<\3225\355<o\n\312\274w\265\315:\023c\247;\336\035P=-cO\275\261\227\262<\302n\204\274e8\343<\276&\365\274\321\254\256\274\377f\027=q\260\207<\225\377!=D\2155<\037\342\372<\374XO=\025\204\227<\377k~<\325\251\302<7\306\006\275\236xM\275Y\2649<\017\367\001=B?V=\214\025\037\273\322eN\275\243@~<\246\007?=\325\334\031=\025\333\205;\020\014M\275@T\215;x\204\277\274b\224S<\251\245\303\274\034\374\214\273&U\214<\025\354\321<\357<\375\2744\037\221\272\204\347\374<{\315\005<\342|n\274\327K\355<a\3011\275\251lH\275\263/\247;\217\002C\275\0200\330<\225\3547=\215n\360<\320\3122=K\204\333\274\313N\365<{\371\005\275\'\255\'=\327Fa<\n\232K\275\342\013\033=\014\367\r=\210\037,\274\253\253e;\260[\332<,\210\013\275n?!\274\001\031\301;\226\221\241<\33755\275\373\210T\274\310\016I\275C.\271\273_X\236<\226\205\225<\206\356V<\370\276V=3\306\345\274D\261Q=\225\010\007=\314\004\020=\246\266\207<\245\n\215\274\030z\006=\013\267\004\275gZ\022\275\035\037)<\330\033\302\274C\347<=\202\276\020\2758L\206<\217\376\266\274\265\243;\2759?\252\273C#1=@3n<#8\321\274}(1=\013O==\242B1=)?\315<:\315,\275\304\026\005;c\036*\275\020B\364\274\365>\234<\324<%=\201\\6=K+\016<I\244\362<i=\355\272\244\2710\273\2532I=\017\313\205<.`>\270/\2258<t\225=<\254\231\363<K$\300;73v\274\214k\243\2726\306\032\273\010D\372\274W\303\300\274\236\262\312\274\247\235\226\274\2629\224\274\252\245U\274\324\317U\275\330P6=\254I\302<\257\360\032\275\236\0323=\324\316\006\275\344\230\300<#4\372<\340eU=\265NS=\255\026N\274i\302\001\275\237\340\3739O\354+=\275UF\275\027\255\264\273\361\235\357\274\0007O\275\316\3441\275p\267\242\274\326\335M=3\354\345\273\267,\254<?[[\275\252s\327\274\256\3242=/\020\r\275\357E\245\274Hn?<{\276\204\273T\351\n\274\237\017Y\275\344U\033=\252L\007<\273\024\315\274\021\031\274\2737U\202\274\336\300\007\275E=\215<\206\326.=D?\010;Bq\"\275D\354\024=N\\M=\363\010\274\274\024\355S\275\234\355M=\302\341\326\273haI\275+T\000:q1A=c\376\230\274\232\353\005\274\310\271\201\274G\230\353\274\205\242J=\003\304R=o\2247\275\322\276\004\275\370\026\273<\350\272u\274j\221A=X9\006=:&Q\275M\227J\275\030\241\021=l\034\340;\204\312\344\274\324\013\251\273\'TP\274\222\005^\274\001\274#\2752h\373\274$\315W\2750\327\022=\242\212Y:q\275.\275\030W*<\0249\335<t\n\236<\373T@=*U^\275\371\333\020\274\326:\202;`yX=W;\222<Ji\220<\312\300V=&\204=\275OS!=\267\206\276\274JMA\274\251\213\006\275\000\233\207\274\216\346\371;k\rN=\301Z\333\274\247\372[\274\240}X=\037h\025=\350\277R=\373=F\275\271?V<m$\2259\361\364\240\2742R\034<\303\016m<Rr\017=\206\305\376\274\332\233H\275\250\340[\274\307\267R=\033&\243\274\256\240@=D*\341\274\201\003\357\274OQT\275^c\026=\313\000\322\274\237\375\303<\266\333\372<|yJ=)\220\351\274Y\002\240\274\255\350\304<L\006?=tX\374\274\n?s\274\036\343+\275\010\255E\275f\204M<\353\204\243\271\205\010N\275D\241\034=OPV=I\207\234<J\003\310<.\335\354<@\366v<\320\233e<V(\005\274\022\237S\275\\\230\036=\320\333>;\202<\306\274\305\321\323<\253KN= \210\320<\3465\022\274\362\035\227\274!\260U=\234\376\206<\177\305J\273\303l\202\273s\254\264<*[\033<>\2405=\324\361\222\273\"xP\274\241\034\234<\316lW=\241\303\026\275\353\254\013<\261&[=\216c0\274\235\017\014=Q,\006=\355\026T=\335T\334\2731\330\034\275a\257\033\275\367\'\013=xo\007=s\341\300<8\010[=U\272\235\274O\031\270\274<ir<[\020\323<\346TC\275\247v\036=\275|\020\275\240\205\001=\'dG=_1\360\274H\036\367\274\335\233Y;\005\343N=\003\275\005=\336\023\004\275C??=\004g\370<\242M\n\2754\030\027=q\312C=\334\300\336<\217c\'=v\352\221<:\035>\274\270k\021\275\233\312\220\274-\200\321<b\346^=)FA\275\220L?\274e\023|\274fQ\262\273\365\245>=VU\r<MM\037=a0\274<\242\274\262\274/q?\275{\0006\274yo\000=\005&<\275?\314\n=\277\310==\020G\037=\351Y\326;\371\251\351\274\rT\255\273\2150\312\274@AI\275\326^g\272\251\354\224<\254\\m\274\312\271\034=\322n0<\357\317\022\273\234x\240<\017\265j\274w\277Z\275\226x\006=\357f>=\371\203?=r\263(=\"\217\234\274\027c\336<`\353\247\274\277\206\017\275\362=\020\274\352\007+\274\255\305\250\272\020A\"\275*\255\"\275M,3\274\335b\317<_^M=z\177\003=\352\302\002<\352\033\256\274\226W<\274PI\025=\212\265[\272\266\330\211\274N\213\t\275H\323\207<bQ\'=\224=9\275eI0\2757\202Q<\307\026\002=yT\221<\202\337=\275g]7\275T0\260\274O\303\224\274G\235Q\275\301^\211<0\236\034=_\305M\274E\300?\274=A\231<\032\362\021=\354\177\t< w]=\0232%=\273\374,\275~l\372\274\227\035:<\231\'R;\247\365\'\275\275N\315<\266\334]=\231\237\\=\365n\256\274\026\217\353\274\006~\345\273\361\256\"=:\203M\275\240!J\274\025\375\207;\327NT\275\217#K\275C\221\031\275\307\243\n=W\021\013\275\361k&\275\336\351\302\274\n\203\301\272\014\017\020\275\230\262\250\274\245\334\257\274K^1\275\216(#=\205u#=h\202 =\305Q\001\273W\226\234<I\202R\275\255\250\234\274\313\215\367\274\366\252\017\274\331\212J;j\311\377<\017(<\275\340\270\255\272\235\264\'\275\244\305\315<e\313-=\217,\331\27463\303\274\210(\324<s\323\\=\303\307\323\274{(\024=\'}\200<d\3772\275\276\0364\275\223?<\275R\372\232<\021\303W\275\216\305C=\213\2149\275\000\034:=pU\036=(\201,=\376\273\203\2749dz<O\243O\275V\335<=q\347(\275\315P\243<\211E\307\274\354\271\377\273\032#:\275s\370\266<\322%J\275\243\301\212<B\257\225<\236\223\034\275\353$;=\351\206^\275.\221L=\231\360 \275\274\300:\273\205\263\n=[\325\n=\367\332\377<\211\233\226<\2448H<\277\005\323\274\n\257P=#N,\275\333@t;\325\210@=\301\362P=\013\351;<\364u@=\222\312\207\274\246\233\356;L\205\034\274J\252)=p\3001\274:\017u<PR\375\274\213\334\235\274\357\245\003=\313\245Q\275\356\264\001=:k\367;\271G\2569>\"\346\274\247\364\277<\036\214\327<i\250-=\236$\330<\311\031C=\007\3742=r\256\236;\323\025\n=\372\253z;\277G\357<\036\276Z\274\300`Y=\244,\247<\036#\014<L:Z=\r#\312\274,TU<5\3700=\276z0<Z{v<\277\034\016\275\r\221$=(\000\354\273m4}:\220M\376\270\307\266,\274\313q;<\207\204\223\274@\242\272;\363\342\242<\364\253\237\274}\321B=\312\310\004\273\002\026D=\236{\201\273\240%\027=\246\202\t<\304\372\021\275\215\235(=o\363v\274\245\346\272\273^ \026\274gO(\2753[\376<\202\200\t\275\316T3=4i\206\274U\323D<J\000\t\275\372\324X\274\232;\242\274\021\317T<\211\221n:Q\236\335\274\253\2316\275\251\311\030=~2B=\235\350\374</\320\277\274\"\202\263:\034\212\250\274\272\222\370\274E\243^\275\014!\010\275\352H5\275\367U\r=X\210\004\275S\267(\275\327)\006=\346~ =6b]\275\033\260\247<Zz\252\273,\270\340\274\371\034\376<\206\212j\274\346\361S\275\374\367\264\274\245\264D\2754\363\347<\271J\267\274\261\374\356<J\021\231\2740\274W\274A\246\002=%\215f\272\220\224S\274\374\323\";\246^x\274\343\027A=\206b\224<I\310\205\274\250>\010=w\332\014:e\251\036\275\233\033\305<@\033\233\273\344\300\303<c\341{;\023@\026;Lt\340\273Y\252V\275s\313\"\274\311)/\275T1\226\274Y\312<=\233\323\262:W\036\262\274{\346T\2752\233\310<\217\326\\=a+\024=3\263)\275/\255W\273\000nD\274\221\301\260<\345\366L\274\336}R\275\231\365\262\273\177F\216<\260\2600<\003\311>\2753\213;\274\225\352_<\314\3241=\003\247\271<\316N/=\310\016%<\312\204K\275\224\342/=\202\206\353\273G\346/<\343XB<\222(\027<`\217A\274\353\210\020<\177h\003=\007\340\316;\372\277\214<\257\227\036=b\037\340<\227\201\304<rZO=]R)\274>kZ\275\316\246\266\274Z\204\004=0\214\241<\020\010\020\275\204\221\352<~G\314<\256\305\315\274\240|S\274G\300*\2759\202\022\274\017\337\022=[\310\254\274\262\246\016=}\3034;~B\254\274\302q\250\274a\344\004\274\330Is;\343A\274\274\324X\203:\313*!=\3403\375\274\202\003,=<\366\016=\322?*\275\034\313P\275\360\301\207<:HT\275\243C\355:N#!\275%s\260;\025\364\026=&K\024\275%\025\220\2743o%\275\373\315\024\275\345\304\246:A\312,\275b\343\3659\212C\000=\177,\"<\034\002V\275!\243S=\026%\2579.\013\250\274+M\275\273Z\274\034\275\006I6\275G\024@=\314}><\032\350\333\274\035\037\243\274\217\257\023\275\362\2041=\352d\353\274\335\246V<2\243?\275\260\361\202;\310M\030=\253\361+\275\256\267\023=\312\201\004=\305\242*<[j\'\271\017F\221<\263\r\370:p\222@\275\224\343\247\274^!\347\274\201\337\\\275BG\334\274\033\247.\275b\324\345\274]kL\275\357H\n\275\270\270\220;5-\222\274&\003\004\275RF]=)\203$\275uVO<\214\240K\274 \364\004<\307\202\021=\017L\005<t\010\031\275\347\3640\2741\r\252:#\343\355\274\326QS\275Q\347\242<u\211\\\275\300\227\210\274\353U3\275\325#\035\275o\2769=>\237\005\275\231\347\252\2746X\000\275>ET\274\274\243!=\341\301\300\274&\367\340<G\032\330\274n\267\375\274x\242\213\273)\363\333<\217\270K\275\271:\346<}\237\001=\3273X\275L0\251<\204\353\003=\327p\251\274\032\212\t\274\335^\034=\352\031\256\273\373yY=\305\326\000<\031\347:\275k\327l\274\343p@<\320\030\221\274e\032\225\274z\253D=\240\035/\275\360\223X\275qNd\273\006;E\275\247\221Q=\254R\363<\301\227V\274-\007I\275J\2464\275\034\230\013\273\n\244\365\274\301*\302\273p\036\231<\010\030>=\303\004\255\274\211\231\345;]\232\240<\236P\255;\237\013\'\275\334\374G=x\3170\275\313=\203<N\220X\275\026\327.=J\021\002\274\252\271\350\274\362,\311\274\020\021\217\274`\227\220<\363H\322\274\220@\325<\256\307A<\037zP=\335jY\275H\232s\27367\020=\232\367\266\274\372\211\263\274a[E\275\032N\324;\"\246\037=\213\256I;\031,\273\274G\3546=\333\375.=h\247\206\274\270{\257\273O/\177\274\241\267E=$\177\000=U\020\241\274\002)\340\274\343P\026\273y\300\206\274\"t\321<\001\247\257<g\257\032\275e\220\345;n\0175\275\307\323T=\372\204;\275D\3203=\246\311^=\363\366\356\274(\237i<\245bW=\221~\217\274E\260\036\275\206\005\330\273\356x\345\274\321\224\224\274\r\264?=(\214\331<\244\344\357<\210LT=|<\221\274QV@\274\035\215D\271\366\262:\275\034H!\275\276\3423\275\347_>\275\'\260\t=[\353\020=\303&\312<\3202N\274\314hT=\214I\025\275$\3056=\240\277s\274\226\311W=\316\314S\275\377\034S=\010\002 \275\3068\010=\2742=\275\016DP\273\222\017\202<\252U\"\275\037\177a\273\234!\366<\002C\331\273@\312G\2755]E\275\'@E=-\2662\275\254r\323\273\343X \275\tF^=\022\253\316\274\341\343\370\274H\337\333\274y3\270;KN(\275>Vu\274\353\300\032\275\241\006!=\303\017\021=\221\240G<\356\302\240\274t\273z<\014\337\000\275X\225C\275\210\277\230\274\321\373\274\273\326,\036=\364\343\264;\377v\346<\272<%\275\232X4::\216\347\274\206C\230\274\372\242\275<>\304I;\316U4\273\337q\267<\037\014\341\274M\233\255<,\002]\275\270<\235;\207\335\240<\017lP=\022\264H=\350\027F\275\216!\351\274\034\"\026<\334\245?\275\004\3616<\027-\r\275\004`k\274\373T\253\273\264\311\t=$\214\r=\004\252%\275\261\250D=m\341\227\274Y.\307<\003d\003\275%\237\014\275\267\342==\335\202\030\275w\220\200<d\t-<2\356\301<\024\235;<\265\0007\275v\3353\275\353i2=\225\256\346;\020S\013=ZS\277\274Z\310\233\274\300\347\210\274i\000\355;z\347<\275\320k\277\274\356\323:\274\367\300K\275\271\236S=%R\010\275\374\370\177\274@\271\t\275\222\336K=~\035\207\274BV\224\273\264HF=\203\206S\275\324\017(=\007\205B\275\344\342\026\275\235G\361<\217\203-\275c\306\333\274\014f!\2756K\001\275\260\305\032\275>\210 \274\005\314\"=Hh\021<Q@x<wA\347<L\010\021<\270\323 \274\222\271h;\2624\\\275\274\270*<M\003\\\275\021\006\252\274k7X=to:\275\362\2459\273\006x#\275\034\2535=\034\323T=\370\257\361\273\361yG=\nv\022\275\t\201+=\033\0039\275\243\315\"=Ay\032=\364X:\275\016\326\262<\250\274?\275\357\270$\275\254s\033==YC=\010\357:\273\306[M\275GR\234\274 \316c\274Y\373\335\273\024V\001<%h\036\275\331a\255<>\375\366\274\357\"\017<\026U\347;S#\214\274\207\314O\275o@A\275\203}X=\377=\237<4K\354<g\363y<\304\225H=\005\314\002=\266.F\275M\377D\274\\\322\310\274\340\350\022\275\356\310c<\204\343\213;-\004^=\201E\032\274_j\373\273u\331\227\273\036A8;_\215\342\272\371\'\\=\362\307\273<\273\346\003\274f\006\021\274\206\240\200;\023\220X\275\005nM=\0214\260<\276\037\017\275wt\277<\216_\236<\322l\026\274\262\r\304\274\364l*<`m\204\274\322\220\205\274\034\001\313<h\204O\273\324\304\372<GP*\275\000U\331<t\300\016=\3360\203\273\021\'X=3\257\277\270\333t\224\273\211\276!=n\017\366;OVH=\251\007\036=\217\241@=\251O1\273v}\364\273\207\331\211;2\371^\275\360&J=\274\000\346\274\203\236\373\273\021\305\"=L\3778<\326e];\312\3148=\255\034Y\275\352\\\247\274\243\020\273\274>\200[\275\222\324 =\022\370M\275\004T[=qM\016=\0008>=\273\370\204\271\261\331\023=L\017\r=\3579\271\273wc.\275\337\324,\275x\204N\275\303\363\377\274i\271T<<\372\354<~e\2039\262\035z<#\325*\275\n{\372<\321\332\027\275\352(\004=\225\005\016\274\341\004\030==\320\221\274\313hK\274\322\365\354\274\337\034\033\270ys\214;t4c\274\361h#\275\226\3024=6\326/\275\260.`<Z\250#=\305+?=S\366M=]\314\265<l\237\006\274.\200<\275\311kC\274\232\313\014\275q\027b\274\014\301\246\272\253\222\037\275O\200\006<\211\320|\274X#\036\275\361\0179\275\347\351);\255l|;\203(\350\274\361\351P\275\301\227\220;NJ\335<\026\260\205\273Y\033?\275\212S\264\274K\2172<\335D\310\274\321\020\215<\033\374\302\274bt\217<\375\021)\275\000\370A\275\253w!\275\347\035\024\275N\"\231<\370\003\310<\313\034%\275\276\351*=\025\330\014=\227b\302\274\253\215\231<\247\374r\274\300\310\030=\020\227\371<\244\271F\274Y\\+\275\253U\231\274\026\244\013=jZ^=!\205\325\274\342\0366\275\203*\020<\372\022F=!\247\306\274\206\246X=\034=Y=\215e8\274z\n\004\275\006\241L\274\2442T\274U\212Z\275\251\2561\275M\017\023=D\234\222:TY\304\273\216\256\024=\037v\026\275\260\316\317\274\001\3320=q\365\267<l\2534\275\361\250\001<g\373\r\275\022\221O=F\221\264\274\276\265\350\274\032\016\237<\016\372f<\344\345j<\223mQ\275M\203:\275\033\275\377\272\2548\244\273H\007<\275\323{N=\323rF=\314Z\032=\220$D\2758\317\\\275\235I\003\275\250qO\275i\373R=a\345\370\273\373x\276<\026\2374\274\337\373:=\363IM\2750W\277\274\016\033\014=\"\224\022<p\330?=\363fO\274\367\343\010=\323\315\232\271\346\270\303\274\236\372?\273\247{?\275_4;\275\350\335\035=M\007\223<\237\211\272<\262\327\253<\3463@=\246\357\301<\253\264\215\274\010\265\021=\035sK;\306u-\274\227\352[=L\3500=\023,\356\274^ \001\275\220\327C\273X\343\022\274\371\013\235<RYj\272w\330l\274\233\004\006<\206\357h<i<Z=\254\226\232<\356\222\244\274y\201\202<\2751\345\274\364\237\261;\377\236A\275D\277\360;\376\375\210\274\202\376\203\274Q[:\2753\307Z\275my\314<9\324\365\274\031]P=2YH<\250\227/:\346I\371<\314\322\260<\016,\374\273X\367L= \204\216<\234\016K\273|u\270\272\227\314&\275\377\366\235<l\245D:R\320\257<\246\275y\272\272\366\017<\314(]=\240\\&<\221\244\024\275\016\036\323<\313\330T=\342\251=\275\277\2303=e\031N\275\t\257?<\225%\022\274\322Q\013\275\241\313.\275j\200\033=\230\231G\274I\347k<I\375\333;h~\246\273\356e\247<M\1771=\032\334J=\274\240\316\274\336\333K;\367oF\275\225\020\003=\231j\350<\205\266)=R\267\330\274\016P\341<g\234\364\272\354\000\037\275KO\367\2749\354\226\274<\276\307;\205\225\\\275%\331A\275vc\216\274\235\231O\275\311.\315\273\244\r\002=\00593\274\204\302\236\273-\';=Fr\271\273\353(\033=w\237M;\273D\022=\237+\341\27407~\274S\331\357\273\317q\017\275\021\364\205\274\234_\221;sP\017=\r\026\252\274%\250\352<6\202\310<.%\020\275y~7\275\344\0207\275q;\025=G\230\225\274\221\244\253\274\266\205\317\274\243\037\257\273\365;Y\275\032\016\232<\001\334\035\275l\302\327;\352\247\203<~\366E\275\204\247\037; \242\365;\037R\353\2748\217\362\274xHR<\261\270\022=\017\220+=\207\362\371\274O9\004=B\264S\274\230a\002<9\267\201<\347n\317\274\020\254U\275\271$\304\274{Z-\275x^\254\274KG\252<r\323;\275\"\344\335<\257*@\275U\354\335\274\310\236\322\274bu\337\273z\360\030=V\177\315\274\003\204\364\274K\251 =\351ou<.s\270\274I\333v<c\212\302<=\252\364;\3362\370\274wt\234<\2375\375<\021Y\002=\026\036\244\272\247a\036\275>eQ\275\355\302\027=oD]\275\033\260\220\273/5\211<\nQ\022\274\032\005.\274eJM=\313\334T\275\350\2031\275\301R\200<d#\275<\326\226\002<\201dJ=\323\2503=q\374:=\235H\273\274o{\365<\366\276(<hq\'=\307\267\334\274E\225\222\274\003\225\375<l\245\253\274R\343=\275\271F\003\273\342\030\035\275I\331\246\274\360t\373\274N\300\341<\337Z\026\275\313l\237;\013\244[\275\001\253\014=\221\373\211</\371\274<\355V\242;\'m\023\274eA0=\277=\344\273\323\022\032=\361\324\002=.J\026=\265\241+\274\000\372^\275vw\246\270$\307R=K\376(<4\361\270<\003[%=l\224\344<a\017\203\273\304\361S<q\323\177\274R\017%\2757\332\274<\311\225\205;\r\371\360<\236!,\274\372\377\377<\2714I\275~\027\000\275\255\273^<-\231\335;\346\313\013\275\270\213;<p(\245\274\tZ\352<\311k\002\275\336\343^\275\312\264\212<\013\357!\275\361\313f\274\334\247o<\226\236\312\274~\202\366;|a\014=\2757\307;I\245\373\274\030\307\322<?\000\235\273\252}\017\274\017\371E=\215\320\241\274\243\315%\275\033\276\313<\312\220\r=\217/V\275lv#<w\330:<\014\277\245;I\004\277\274a\247\004\275\354\320Q<\t\377\367\274\350v\326\274\017\210\217;\003\266@\274\251\rz\274s\002V\275\244dR\275#\277\205\273\237\326H=\243\031\020\275h\207\'\275\353\032\365\274ig\r<cf>=/\377\234;\005\257\326\273Q\343\213<\252\212\035\274=\2462\275X\033<=M\230I={H6=\314\321\246<l\0144\275\031\2523\275(\326\022\275\300@\311\274v]\341;>S\204;W\317\002\274\356\347+\275oL2\275\324BI=TZ\374\273\321d\212\274~G\335<\342\270O\274\002\236I\275g\353/=\305_\r=\3510\373\272\003/\017;\206\230z\273\004\244\021<\370\204\023\275X\251\335<7\0079\275\376\313\206\274\226\242\031\274\373\032\257<\250^\365<\032\3514<\024UK\275\226\203Z=B\333\230;M\227?;\206=\237;\303\306\304\274\255\270Q\275\320\327^\275\243\375\370<(_W\274\235\rN\272\312\205j<v\241\022=/\010\276<*\"\366\273\355S6=;\314\222\274\275\205F=l\010\265<t\036=\274\027\016\254<C}6\274\361\237\021</F\301\274\211g\343\274\026\001A=\236\323G;dT\204\274-\000\227\274\237\226K\275B\215\005\275M\213(\275)\336]<>+\334\274\306\017\212\274\037\210/=\276V\r\275C\t%\274\203\267\225<t\212\n=\260\315W=d\2743\274}\357\334\274 \023\035=3\371\226<\365\224;=iOy:\312\221\340<\027!\014=\203\270\321\274%\364\336<\"\311,\275\004\327r\274\023!\026=\013\034\241<\246\363\206\274\235\024N\274\231\321\246\274\355\036\010\275yS\274\274\227\260\327\2741\3368\275\205\247N\275\231\235\256\274]\2348=\215\361X\275\306\246&=\224O\177\273\326\'\033\275\227\370:\275g\301@=\3504\227<G\005\227\2741\225\302<MC\261\2742\307\277\273\201[\212\274\354\226\307\274\203\312\324<r-^=\336od<\273\304\033=\226yT\275\304\3716\275\301K<\275\350\374\210\274\322;\260\272\n\237\\<\036\355f<n\303=\274\277\035\251<\340\214\253<l\007\324<r\277\024\273\340\216\003\275\271\014\345<\232{\212<o\315\267<\034\372\212<\264\014:=\025\302\207\274\2362N\273\243\341(<P\342\255\274\001\304\004\273\345\274U=\340\242\007=\004H5:\260W=\275\307n\242;mkF<@\331\037=\370\003\205\274\311\227\r\2742\212\355<\030\305\240\274\254\346\241\274\n\255M\275\362s\000<6cO\275\034\255\000\274\2112\267\273\375xW\275\2519\205\274M\247Y\275\267o\003<\213\262/\275l\004\014\275\225\3631<\316\033@\275\200}!=\224/\331<\240 \037\275u\'G\275/YY\275Y\362\355\274\000\363\341;\332\265\315<\330L:=\335\365\372\274D\273\210\273\373\177\030=\247\025/\274\231\230\030<!\343G\274\360\3507\275\245\336\345<\rU\256\274b\337\350\273_y\260\274\247\260A\275!\014\014<\214-V\273\220\300^=\322\375\307\2743Z!\274E\020\177\274\356q\322\274b\202\216<\r\346\345\2746\334B\275]\257\025\275\235\265I\275\352\232I=:\371+=\033\2531=@\350O=0\227N\275\244}\':\'\270A\275\014R\022\275\254z\331<`\213E\275\216nm<)\217\334\273\250\310\003\274\376\345\275<d\227>=\005\310\364<\247\357L\274\341\276D\275\274\317B\275\272:,\275U\250F\275\270\016E\275\252\211 \275\r\013\226<\357\332(\275n\233\347<\247\332\261<}!\303\274\357L\002=\346\0023\275\354\331\322;\325\326B\275_\2425=\362i\372<\327\315\375\274\030\260|\273]\312\351<\003\370\031\275\327\264\265\274\274e;\275x#.=\301y\320<\016\354\010=\253\341\332;c2\004=@\212l<\217\'R\275\270K\004\275\260\204\260\272\340\325/=\373\'/\275\002\345,=\262\223\227\273>\021\305<\241o\001\275\340\242\376<\202\261$\275\204\302\343<\233&\r\275\rdS=\330J\"\275/&\006\275L\\\236<\245\334\035;o\t\245\273!\265\037\275$vN\275-s\333<\206R)\275\342:D=\272$\272\273\007\030\334<?:&<\035\216\030=\370$\302<N:$\274\200\224\323\2747a\277<R\275\335\274\243\314\325;,%\014=\314\016\204<L\230\022=\321\007\251<\304\2757=\333\225\010\275\245\3738=\220\245\017\275\343\000\016\275\021\'\005=\307Y\244;m*!=m\371U\2745\177-=b_\365\274\370}\004\275\217V\270\274\223B4=\353\337l\273\261\347\262<\253d\230\274\000\253$=hYa\274\013\205\205:\266\371\234\274Q)O=\253\007G\275\"\242\355<\313\317u\273+\243\034\275\232mU<\244\310m\274\323\037\356\274\375\206\000=U\254\377\272\024\251N=\030\342l\274r\036\030\275\321T\241<>`Z\275\344>\000\275\206\3728=\307((\275e\234L\275\232)\035=`1\376\274\227\021\017\275\021\026\351<%\t\275<\331k\265<\020\252F\275\030~y<P)F<tk&\274|c,\275\306m+=\335\031\210\274\335m%\275+\323|<&s\035\275c\232\t=\016l\201\274f-\272\274\034\032\354:\0167\r\275i\255\232\274\311+\365<\254\216\207\273\024w0=\030a\264<\3333\314\274\007a\341\272\260\032\013=3\256)\275c\271\257\274\023\213\326\274\2207\221\274<#\r=\237\'$=\037\373\337<\315\353\213\274\312\375\036\275jT\357;a\177^=\014\360\n=\352\246\036=(\227\245\273,K\013\274\025\024\037\273\014r\247\274\256\336>=L\037}\274q\313\351<\346)\334\274<\346\341\273\036\024E<\306\304\377\274\336\315\346\274\302\027)\2745\243\200<\002\200[\275\354\025@\273\202nV=\272\324\300\273\"\037]=\252\317Y=\375.\375\274\354\r\263\274EW\202<I\257\323\274\367j\326<\271\016\216\274\177j\201;!c\347<n\n\r=\014\252\001\275\233\222%\275\254\274E=\241\200A=0\017\270\274$\231\024=\010\260\006=]|\346<\351YY<Z\257\360<R[P\275\300\022U\273\017\rM\275\344\302Y\275 V7=\327\320P=*\340\222<\234Y\271<\207\266\001\275\r\270W=Jt\010\2757M&\275\310\037\271\274\241\'4=\340|\217<\245\364H\2755\276N=C\356^\275\346\255+\275\227Ei\274;y\357;\323<\310<\221\274\210\274c\313m\274WJ\035=\225\214\257\273\344g\026\275\330xM\275.M\036\275\265q\202\274;)\300\274bV\365<\266\236V=\305<-\275\336\227=\273\004i\321;\347\321\262\274Y5\r=#f#=\320\005\026\275\246\212\"\274IjQ\275<\210C\275\203Jm\273\351\313?\274$\013R\274}\320\013=\211\202\325<\207\333E<{\235\260\274^\3171\274\3424\321\274W<d\274\276/\335\274O*\004<\275\2332\275\304\025\321\2745\325\302\274\233\006\331<\343S\004\275>~\003=\207\227 \275iQZ\275\243u\225<\n\300v<\312r\021\275f\024\310;d\335\006=d\000,\275\211A7\275\235\035|\274%w\307\274ogP<\010\361\251<&=#\275Q\361\256;\305\004\022\275\006G4=\022\222H=\233\"\234;\265}\267\274-\327D=5\2755\275\253\371\203\273\312\352]=\333\216\355\274\252M\021\275HS)\275\303D\234\274%\264\"=\034qY;\272\2029\275\332\023\023=O\331\013=\377C<\275\033\316:=\214-\217\274M\300\000\275\231TO=m\013B=t\222\336<Lr\225\274n\216\255\274bN\236<\242\302#<Bz\22094V\264\274\343l3\274\226Us\2749F6\274vo\210<\203\217\365\274\211Z\370<\037\215\366<d\347\376<G\227\241\274\204\026\307<@\203\262\273\277>\362;\350\rF=\226\311Y<\243\007y<=\276\263<_\331\n\275f0z<\336\352\000=k\272\345\272\236\372I\275\303\262\014=h8L<\216o\244\274?\371;=+\222\354<\216v\022=\222\230\027\275\231\202\023;\263\324\332<Z\021A\275\236V\203\274_e\n\275\000L6\275Q(s\274\204\204^=G.\000=\202U\344:\000@M\273\227\0064\273\032\344\r\274\340\247\263<\022\2617<\003\024\304<((~\274\004\324S\273\001\203\215\274\r@k<\263\240.<jL\002=\014\014\305\274\306\362\340\273\003\215Y=w\036J<%i-\275K\223v\274y\353\t=\200\233I=\211n<\274\335\203\001;\327\2431\274>\231\364<U\246\265\274A\330^\275\364\270\031<\202\377\366<n\246\030\275*\265\330\274\202\337v<p\271[;\'@\375\274\010\007\021;\205R\"\275\272\327K=B\332\303\274\t\014\005\275=\031\225<\344\303\367;\210<K=D\317\235\273\372\354\036\275\346\326(=\276/\220\273c\001W\274:)\356\274\372\\^=\267\017\311\274\355\\\272\273B\010\371\274HH/=\\\225\3019\207\233\225\274`\310\275\274\234\221\007\274\026\026J=y\'C=\240\344\r=\337\266J<\214W\206<\354E\350<\346O\354\272\345\337\242;\3364B=qn\354\274\304\020U\275\177\273\371\274\342\321V\275\024\276\003\275\310\375\006=\263\2671=.\300\n\275\237+\371\274=P9;\366\027\014\273\344,\233\274\360Sc\274:!<\275+\244\242<\324\274\\\274\303g\'\275\356\333,\275\363\310\354\2740\225m<_ \013=\034\347d\271N\230\311\273\205\2421\275\022\334R=J\212\277\274)\310\314\274\255\244\002=\023\224\224\2741[%=\3119\007<v\036\300\2744dG=\006\260\204\274\335\377\260<\r\315\355\274\371\005\342<\210J\206\273\361\230\020\275\003H\213\274(\335x<%\260P\275\031\271\r\274E%@\275r\363\010=>\265$;6\2467\275 rV\275Ld\302\274,d@\275\213`\253<\276\034\377<\306\254\264:\tv\001\274\231`\271<\311\0177=\243\245\203\274#\211=\275\r8\'\274\1777\006\274\023R\337\273\013\234)\275|\302\203\274:\360\030\275M,Z=d\317R\275\030\225\270<\241g\240\273y;\347<6\304\231:\206N\r= \r\r\275\202\317\t\275\262\217\353<\243\323{<\373\212\030=k\004\356<\350\206\341\272\322\337\257\274\035\270\270\273\272U*\272\371.#;\204\301\017\275\033.\001\275\2305\324<\307G\033\275\257SW=n\024\016=\023\337\320;\377\215.\275\207\177\317<Rt\010\275t\nH=sV\014\273\375\";=\351\3037<\345\247\235<\\\',\275\220]P\275\225\277\376<\376\036\\\275\300\">\274\302\235h<\257\233\003=\'\207\230;\035\353\311\273\267U\256;\362\272\241;H\262~\274\234M7\274]\245S\275\335\306\256\273\024&\003\275\204\305\014<\005\261*=L\366I\275\272\371P\275xL\275;\'=8=m;\n=\330\026\016\275X\001\243\274/\277o\274\207\223B\275\343\267:;v\340T\275P\322\214\274\003\0331=\371\3604=\305Ls<\211M,\274\277C9=\332\003P\274U\177\333;\000\314\211<\267\016\022<p\331A=\203X!=i1\200\274`m\204<\242\t\027\274\236\357K\274\300\362\252;\235\363\036=\253.\237\274\255\025)\275`\030\033<f\332=\275\233\315q;)i\037<\266\245\007=\335N\376<\363.\351\274\037k<=<\231v\273\006\177\231\274\025]=\274\332n<<\307\212\013=\236\372\217\274b\234/=\307\353\247<\006\037V\275X\002A\275\316\005i:\243\341R=]\222\005=J\242z\274\007b\372\274\022~]=r\332\020=\241\n\236<\260\347\224\274\217\243\270<\242\357\000\275\321\373/\275DoI<\014J\347<\255\220\323\274\234\010\027\275\212U1=@\336\t=2H\261\2740\330\023<\222\375\353\274\263F\020=l`X\275\311aH\275\216\375\004\2752_\014=T\030\226:\005J\211\274\344E#\275\231\007/\275\352\314>\275nQ\374<\001b\001=\240\221\373<\261\351\345\274\356\221i<\217+\251\274Q\026\235\2749\265\231<8\033\357<\254\227\277<]!.<\321\314\200<\314\270\021\275\256\035\214<\311\006\302<\243\002\357\274\360\267\017\275\213D<\275\307L\"=\357\352\313\274S2.<eC\025=%\313\010\275\310\341\255\271v\244\014\275\341m\321\274\261(Q\275\034\260\021\273\013\256]\275<I2;\252\231\246\274.\277\036\272\020\020\243\274\326-\365<+\037^<\010E\200\274\225$3=\304\274\214\273SE\247<\256\247\237<\007,\000\275\t\227\t=\2071\240<,\347L\275\270\345\032\275\274+\020\275\377\227\321<\270\204\220<\344D\265\274\350A0\274\213-\310<gD\361<`\005\346\274\037\201\354\273\274}\037;*+\001\275\252\304\251\274Z\301\364\274\304F.\275\273\362\315\274\207uP=^e-=\277>\024\272}\220\266<4\325Z\275\375MG\274_O\275\2744\\L=\262\276\022\275\314o\302;\000\002\207\274\220\272\205\274\022\224^\2741+\333\274z,\372<\200:X\275\335;\202\267\')\034=\266\324M=\230h?\274^\363\305\274\031\005L=\037\017\313<\226\247\242<\202,\t\275Zl/<\270\375\246\274\235\352\304<m\326\3659\'\227O<M\356V\275.6`<.(\326\273x\300F\275\033%Q=\223D\370;SNO\275\227 \225\274\317\327Q=/\201\002:\2235\225<\274\n?=KW\022=\023\272\252<\205\260>=\3151\024=\037\344\342\274P\274\327<>\334\265<\215\224\r\275\326p\022\275\016\233=\275\312MM\275:\372F\275*\003b\273\376\373\356\274p\0051\275[\244\310\274\240\326\305<<\333\000\275\326i\245\274\246w\026\274\221\010\221<-\233\023<c\243:<xI\324<@\203\247;-\260?\275\305\205H=5\365G=\355M!=-5G\275\252ND\2755)1=\325\336\037\275O@%<\247\262\203\273\251\016s<\322]\312\274\276\250\016\271N\017\330:z\0237\275\000J\247\273h\334N=\247\177\355<\210\020\004<\035pB=\272u\276\274:`c\274\263\351\002<l\364H\275Y\014,\275h\177N\274/\314P\273\360\236\027\275%\226T\274\240\3076=\322M\017\273u\211\033\274\350\370h<\330\",<\346\351\243;\335\304\300<\022jE=\333\302\300\272$/\363<\366V\3075\204{\265\274\362D\024=\335TF<?\203\364<\364\031^=:\266D<\000\244#\275\352\005\000\275\3316M\274\237\017\320\274\245\371\212<D\200\324<-\\I<\201\223i<\3209\r\275\325M\341\272\216n^<\330\360W=y\t\342<\027\371s9\252\3137=\202~\242<{\rC=\314\362&=\354\2502<\026#\233\274\244\365\271\274\353\240+=;~ \275\020\220\006\275j\251\022\275gE\226<\334\366\255<\365\307F=lY*\275\006\251\377<\221\r\253\274\000\303@\273\016\361\020=\271\026V=\366D\026<\320v\006\274oT\254<\233\001\275;5:$\275=t\016=J\236\036\275\177\315\344\274\3549\014\2757\247Y=\356U\000:\312V:\275\237C&=\363\252\325\274\3654\205<\010\302.=\304TV=\035\202\006\2730\251\300\274\203\000\256<\036\220U=\201\270)=5\275\303\2748\367%=_\271\035=\025\254W\275[t\227<8\331\213<\340i\031\275I\270\024=\254\253\302\273+c\377\274\347\263\\<\201h \274\375pM=)GJ=\350*\006<Z\270\231<\251\'\n;\303\016\332\274\214\253L\274\001\231J\274\352\004\237\273\317\257J=\265\210\341\274Z\374\262<5\2026\275\374\224J:\217,\320\274\337o\016=X\035\366\274}/\205\274w\371\230<\340Io\274\314M\t=\205\276\226\274\365\373\320<\373\331O=A4\003\275D\377Z\275\313\277n;c\367\020\275\003Yz<,\360\247<\3700k\273\305L+=\275\0260\273,\374\367\274d\335u\274\200d\265<0%b<\001[\n=\340;\021=\351\207\333\274\302\307\002:\253\334\330<\225\331\361<\032\326Q=\232\024\341\273\373\020\035<K\303\265\274N\217R=\277t\250<q=\000<\255\323\301<\334M\312\273\336\341\021\2755\250?\275\230,\206\274\314\322F\275< S=;p =F\264O=\267\024\025\275q@=:\216\301H=\014\024:=\354\033\027\274w\262T=\024\016Q\274\264\300X=\326b\363\274\325\2346\275}no<\2044:<\025\355\r<%\232?=\351\261&=\007\271,\275\364\177\013;L\037-;\363\346\305<\002\332H=SD\364\274E\2537\274\033/$\275\232\026Q=\254zT\273]c\351<\323\253o\274AH]\275\233\225W=\013\013\252\274\177\223\023=\341\354\010=\024\2478\275JL\224\2744\226\024=\326\316C<70\215\272\244HE=\334\274C<\366\253\376<\017\t\345;K\321\320<X\377\006=\213$S\275\345\242\036\275\0267\237;pf\316<Bk\361<(\364\242<{\364\205<\241\260V=\276\366\265<%\272K\275]\021\366<&eT<\363)/<=\242\342<J\220\005\275\221N\025\275\271\004\020\275\314s\253<\352E\037=\251\221\274;\275>><\036\3423<\214\360\035=\004\006X=_\242\345\274W\014\027\275\206\034\'=(?N\274\372\021`<\300\246\216<5\263[=\337\236_:\036\3556\275\227|\354\274\033TL<\026\220\246<\207\231\006;\226`\000;\372i\027\275\332G\033=\225\247\277\2746[\276\274\273\227B=\t]\021=\242\364}\273\353\265\2059\023t\212;\266&\213;\304\314\004\274?J\222<.\347\203\274\240\355\027\272\375U\261:\237K;=\360\251s<a|\026\275%\025K\275\217\373\275<=`Z;\177\002-=\316b\220\274\335\224@\274\n\222I\275\212$\306<\356\031\370<\304N;\275\215CL\274\372\214\010=]-\032\275\262F\033\275SsP<=\003\033<*r\036<FG\344<T\036\r\273{\2478=\0323\t=\223R@\274\255\214y\274\361\233*=&\246R\275u\343)\275A\310T=D\264\364:\363\'L\275\331\3351\275.\310\230\273\240U>=\325\306,=\221\265+=\356>\337<\000\204\325<\344\203{\274\261N\261\274~Fq<q+\352\273\365\365A\275}l)\275a\022V\275-7\000=\345\215\231:\2352$=\250`\270<^Z\330<\267\304\350\273\244\0040<\372zJ\275\240_9\273%\364\027=\266=$\275\350\007\205:\202-\212<.\333\005=\212e,=7\211\331\274PC\276\274Q\032-=hX[\275WF\336\274\203\213\001=\322L\326\273Z\025\374\274\317\007w\273?\0165\275_\320\"\275\0029D=\372\340E\275\235\200Z\275T\2436=\212}\331<\211\330\227<\303-\250\274\342\215>\275m\321><\016\347W\275p\023\034<\241\330&\275\353GG9\200\264\226\274\315\013\200\274\310#\003=\2222\247</\021\202\274\231\367\\=\343\262\2229\016M\233\274\260\215(\275\254M\036=\036\262\343\274\310\273\322<5 \274;\363EJ<R\273\247<\242\262\014=\241d\254<\313\343\024<T\341\374\274+\252=<\277?M<EP\255<&E\240<\252\000?=\372?;=\236\207@\275\257\224\034\275\361\rL=Y2\254\273$a\203<\370\225\200\273\372\331\001=\247\347\021\275\306x\274\273\010z7\274\264b\256\273D+\t=\026\rJ:\253.#<9@\001<\251!\201<\3727\270<\231e\357<a\262\'=<\034\377<\216\332P=n)E<\267\013\032\274\017\203I\275%]-\275\324\237\2318\261\344\"=\261\312\343\273b\252\035<\326\326\001=M\261A=\344\034\345\274`\212$=I\024^=\206\275B\273\253\375\333<v\275S=\351\265\334\274\254$=\275\273%\342\273\220\013H=\335\374\224<u#0\275\272\215o\273\323P$=\251a\301\274\020\005\345\274+\036\317<\240E\361\274\335\030\350\274%\210\261\274\300\2661=\213\310\033\274\301\016\"=\331\030\005;0P\345<\204\373\030;\331+4\275\333\330Q=+\337\224\274\203H\271<]+P\273\313^\313\274<c;=h\260g<l\221B\275\020\331\213\274\327\302\311\273\301p8=\210\3357\275\211k\037=\014>\311;\260L\t=X\314?=\216j\320;\372<\t\275)\231\032=x\353H<i\037\315<L\364)\274\024Y,=J\351\314<?+\024\275\nh\304<dK\007=\305\307:<\302#\265<4\345$=\371\315C=\200N\333\274\221\rV\275\360\252\014=\351\313\004=\231\222\305;\372p\236\274\360|L\275\206\220\003=P\222X=\020\320\262;\037[\334:o\356\266\274\343\360K\275\025,\270<r\247\322<\025\375\3759f\225\260\274\263\305C\275\375D8<\300\3314\275\241~J=\020\340\220\274B\302\334\274\335G\206<\250\3105=\030\177+\275\361\302\306;\000H0\275U\264T\275\240\302V=\260Za\274\236\305\267\274R\204\000\275\362^T={\032\326\273?6\027\275\277lg<\370G\206<\023\272>\275\343\020;=9C+\274fvF=I\377\206<\022\023\261\274O\202\007\275\203\033=\274\021R\351\273\300\025b\274\375;\355\273\023eY\274\216I\004=\220\334 <\355\0011\275\225\336\334;N\217\351\274\024\236\254<\262\346`<\013\276\247\2737A`<\353\325\337\274U85=\360\313\034=q\273$<\254\0147\275\337\024\233\274\275\253\'\273\227\242\027=\355\245\014\274\251x\344<\2462c\274EyU\275\353&\'=\233\334{\274\223N\346\274\340m\360\274\356{8\275Y\341\364\272\233k\226\274\372\023\302<\014K\033=l\361L=S\303\320\2731\266\014\2756\214J\275\332?\370<\t\024\265\274\271\342M\275\236^\r\275\2031\311\274\357J\036\275\366$\217<\262*H\275]\244\361<0\335\223\272\254x\350\273_\327\335\274\224\305Q=B\374\352\274\246\372\026\275\0010\310\273II^=\026\357\325<I\263(\275\\\017\254;>-8=S\273\373\274\037\300\212<\030\276\"=\024\374\247;\236!z\274iG\352\274\305\376\257<Xx<\273\\@\016\275g\262Z<\364~\207<\277\r#\275\222\002\214\274nA\177<\327\360\330\274\264I\266<\276v\002\275*\311\317<V\317V=$O-\274\001\257\000\275\210\025\010<(\245Q=\371\311[=._\007=t 9\275\272\216\242<\035R\226\273yq\000\275\371\021\337<9\265L9\314oE\274\317\342\231<\200\250Q=\244y\032\273\230\356\354<\355\244V=\315\321\r=\302\211N\274\221\341\024=\323\356\305\274\242\2512=\002i\034=\332\337$=\231\256\343\273;\270\200\274\200c\r=\003\007:<9e\001=\356\201\366<y\203\234\274\204#T=\267\337\257\274\303\233\021\275p\032Z\270\375~\330\274\232\237#<\313\342\017=\214\326\004=\262\341L\274N;\225<\223\270\236\273`\321B=\330\344\275<\365\006\027=\243l\014\275\263\325Q=\227\313\031\275%\357\234\274\2070\005=\244\035O\275\230]\n\274\372v\263\273-\352==Q\224\376\274\023\242\250\274%f\014\275\234E\023=T\360V=I)\216:J;\347\274\035\317\036<\0320\251<\235\343\265\273\325\302\233\274\277NG=\367\320L=\021H\021<\201J\001=\333\255\306<\026\243U=\356\333a\274_\323\032\275g\266\026=\221J\206\274\215\'W=\250\204G=,\313\014=\223\227\223<F\2364\274gX\010=v9\275\270H\262,\275;\345\n\275\313\267\343\273K\026\274;\3460S\2758\226\201:\014u\'\275\n\271\030<\001\264\022\275\023\267U=*\2039;A\365\003\275vm\010\275#\r\n\275#\224\006=\326,\020=?\223L\275XJ\006=\020\311\037\274\2143\356<\375\020<\274\341\226\224\274\004\'\312<\237,\232<\270y\'=\037l\006\275\326\361Q\271S\001\360\274\231\235\377:W:\252<\367\237\212\274/P~<\255\020\017\275m\n\030<\263$\323;<\323\354\273\0136R\274U1\t=s%\332\274\007%U\275]\004*\274\206~Z\2749~4\275\305m#\273\\\214u\274\025\016\374\273\223\354q;\230H*\275\000z:=\202\333B\275\246:\332\274\357\023\023<\357\271\r=\353~/=&\333q\274\210\007\313\274\206i\236\273 H\023=\236U\037\27424.\275\031-\020\275\364\010W\275@\374>\275\374\370[\274g;\031\275\344E\217<?a\345;\314\222\n\275\373\325k<3\213\003=2\335\320\273\002\320=\275-Y7=\272u\275<83V\275/\352\020\275@\226L\275$\320\004:\376\201_<\200\372\370\273c\376$\2753T>\275\222\247\337<r\251\207\274J,t\274\024\317W;iM8\275H\371T\275\364Q\374<\002\332-=4-\277\273H\027]=\271\204B\275\300\266\242:\032\3172\2759\250\263\274\321\223\017=i[r<\367\001\322\273\335\213#<\002\260B=\322P\365<\351\224\004=\352\344\207<B\000\247\274i\271\353<\225\357\331\274>\330\t=F\351T\272\364c7= \202U={\364K=\257m\007\274{\010\236:\221\245s<+\337d< \204\000\275\307\036\350\2725,%<\215\260I<z\341O=n\323\003\274\366\340s\274{\371K=\242\020\314<4k3\275\275\207\306<\037\325\037\275\316\177!=\220\005\363\274$.\333\274o\233\265;\034P\304\274w\225\032=I\241\311<\341eY<;\260\362<\267\0018;\272\221\024\275\261\300E\275N&\013\275\025p\032<E\300\276\272l\327(<\321pT\275\200\201C=\271\337K=\322\247\013\274\270,\206;hE\370<\317\220@<\265\334N\275\312+j\274NP\003=\252\210R\275\263\316<:\232\377E\275\021\344\364\274\231\033\325<\373\377\001\275k\r-=\203\264\326<*\350-\275 \'\n\275~6$\275\"\002\205\2741\301\246;\250\2553\275\3440\252<\344l\007=C1$\275\250 ;=]\177L\275\236\025\005\275\353\204\357\274\374e\014\275\366;w<(\324\001=\224Y\021=\304>\200<1\246b<Z\222\255<\231\201\022\275ay\207\274:\302\220<4\202R\275\034<\330\274{vv\274J\360\025\275\264\240\302\274\021s\t\275\335\255\325\273\236\267\n=\303\240\"=\360\025\277<\322\026\223<\214\203\354<\205\3157\275\225T2\275\200(\352\273AeU<\032\022j<\\H\252<\351\212\263\274E\001\010;\006\276\336\2742\353\207\273S\004\247\273\355cU<\240C\220\273\014\210\031=d\031\274\273\264f\005=\005\024\357<\r\'\022\274\273\240{<\304\263\005=\003`\241<\354\006&=\203\236\226\273\300n\312<\2013\374\274I\213\017\275\215\034\356<S\007\250<\037\237R<P\210\"\275E\204\245<g<C\275k\010\217\274#+%=}\256]\275\037*\026\274q\010\206;\313\211\032=v9\355\274\26061=\340\335\230;9YX\275\302v\235\274\350cJ\275\302i\360\2744i]=2e!:\325$-=\033\255\003\275\013\021\240;\276\036\324\274\307\237Y\275?\"7\274\307\rR\275)(\203\274Y\010\336<\260\347[\275.0\246<\027\261 =\037\315>\275\304\225/\275\346\350\025\275\2470\326\274nj\253<\341=\227\274\335\363\316<)(\'<\026\"\351\274\323\260@=\n\271\315\274\277\222\373<\361~\350\274h\317\243<\203\211\002\275]\375^<\362\363\013=w\264\341\274c)\036\275\305\3620=R\021\245<\375\267\025=T\211\253\274~\277\306\273\256w9<\226\321c<b\244\333\273m\250\222<\033(\021\275\255\372E=ee\245<\031&=\275KvC\275\326\327s<\221\372\251\274l\264\370\274\021\266\236< \273\016\275\014\177+\2754\022\t\275\t\215\331<\204\017\312\274O\275.\275\'\247\323\274k\214\311\274xdL\274\267\375\217\274R\344\033\275\274W6<V\010S=\230\361\007=\303Z\202\272\310\324\312\274\321\2238\275>\022\254\274z\000+=\331\270\230<_\3214=~\007==Q|B\274\245\372\246:E?\222<\r,\2068\020\025&\274@c\001\275\245N.=\324\2017\275\200(\375\274BV\035=t\2035<\234\367\327\274\317\242\372\274\001\236\034\275l<R=P\224\201\274\230\200 =\360h;\273\353\245\016=\020\003\032<\360\217%=\206\345\356\274\232aR=_\323J\275\022\243\225:\026W\217\274\027\323\311<\036\r\006=\347\217\002:\214x\301\274\237\003\000\275uKG=\271\037(<\301(\031=\365\361\272\274\307\372\372<@\0366=X\2124\275\271\320\002<d\226\206\274,\331X\2755\274\232\274\363CF\275\345\032:</\362\266<\312\017\\\275\017\2574=\036=\202:\031\350\357\274\351\215\360:\363\355\264\27461,=\322\326\225<\036\275 \2742p-\2758\363\273<\200t\026\275\254R4\275\221\252\330\273\212}\2049\342U\004\275,\344]=\235;\037\275\345|\233\274\367m\267\2742\004\301<\230\004\233<\223\366\307\274D\223C\275\323J3<\313\306\325;\253\313\237\2742\235\234\274\0170P\275C\243\374\274u)<\275\220\376>\275Q\351\233<\364%A=\251\304\265;}\2408=\232\n;<n\r^\275\372\024\274<a\225\322\274d\326\237\274j\001\006=\026\267\014\275_A\320<\216\302\231\274\356\3253\275\024}\024\275!\231^\273\247\227\034\274[n6\272\223x\225<\326\323\025\274\330\2558\275cQ,=\252.\237\274P(Y\2747-\220\274\020>J\275\315\237o\274\257V\014\275\036Z\347:f\2140=\317\305\021=\223l\265<\031\302\315\274~\261\002\2757\204V\275\243\025.\275R\r\353<\037\355\304\271\323S\247;\261Z\347<`\330\231;-\253\307<\264\0351=\332\346P\275\204r\345\274^\350\263<\022\3438=\375\360?=>U\t\273\330?\307<48D\275K\001\360\274J\373\372\274\222\311\001\275 \212\332\273\343\276<\275\n8\016<\014\332P\275j\367.=\351eE=\2230\224<J\304T\275\331\273N;\007\211\225<\321\372-<\330\231(\275\306\r\316:?@\254\274\344HH=\324\343\371<v\212@\273\214\342\021==s\342\274\360\250\353\274\236\005#\275\020WN=\013\301\337\274?<\335\274i\222J=\357\005\316\273\326\221+\275u\366\000\275\332#S<m U=\231)\027\275\025C\323;\335\006]\275[3\r=h\326-=\034\340N=\374\2666<\267\353\023\275\345^\242<^\277\021=\3246\211;\010\234\340<\252&j<\035\242\261\273\256D\014;K+5<\265U\323\274R\027B=4K:\275q+\202<\241u9\275\004\'\315\274>\021C\273\376t\334\274\257\2123\275\211\230\021=\022+\000=\354V\254<\333\004\005=\372\345m<\0055K\275\010\242c<\266\3568\275V\340\315\274\215(L\274\203z?=<9L=W\037\260\273\t\270\333<\203\203B\275\343=\353<\217n\036=\3473\004=\034\254G=\034\374\027=\311\350H=0\217R\275\023:\224\274\272\240C\275`\214\252;\240/.\275\273f\207<V\267\027;>\3602<\'\2657\275B\227\2308\367p\t=\2758?=\356\246\007=\007Q\307<\316\365\035=\014\003A\275\356Y\010\275\321\014\300<\365p\246<\376\352\265\274\213n\036\275\341\213N\275\206\376]=\212\312\007\275\375\362B\272U\321\364\274\\@\340<\350~\262\273?\037\002\275\312\345\r</\243\310\2744\334A\273\035\314\031\275\243\355,\275k\020\334<i\025x;\356\212\005<\317\267\357<&\336\231\273G\r\237\273iT\261\274\362bB=\242\231==\341R\007=3)\320\274\230\254\330<\324j\240;\3063\357\273Y\004\276<M\344C<~\003\037\275.\"\001\275\205\342)\274\363\244\273\272\361_\032=:\034\203;t\305\025=\226\277\232<\343u\341<Mv\352\274\331\313{\273\377\227D\274DfD<\277\222\254\274\221\364\356<\034W\334<\310\267\275\273}\340\366\274\315\"(<\02443=\267\235\224\274cyY\274=\303R=T\207)=\013\017!=z~D=\374\231\307\274\344\242\024=8/%=w\255\013=_c\245;\241\330\342\274}\263\356<s^\024=\020w\363<Hh\377\274\330\300\037\274\224\230\003\275b\312\030=\355YS=\022\301)\275\373\273\260\274\204\332\365<\232w\'\275\366\220\346<a\007\r\275v\332=\275\354\214\001<bX\200\274\365\241\347\274\310\320W;~k(;D\230\025\275\003\375#<\021A\205<|\277M\273$\035B;A\230\\;K\2776=k\211\250\273c\375Y\275f\001\217<\222 W\274\014\033\276<\234\362\243<\374\312H\274\253\216a<\224\245S<\273\2777\275\n\tM\275\327\357\256\274\317\2112;\303\256&=\236\032%=\013\3756\275\365\0316=*\'\323<\034\324\003=\342Z(\275B-3=\"\003\033=/\2673=\261\312\311\274da\037=n\342\035\275\031\3423=3D\351\274\331\365\017=\263\253Z\275j\250K=\215\023%=:\260\3069\306>\374\274|r\036=\230\035\354<7\037E=lSN=Tt\'\275%\203V\2755A\277\273\03402=\027{\332\273\334G+=TID=\205\251[=\325\243-=\274\216\231\274\324\3446;\025Y\210\274\221\214\036=\021\266\210<\344lG\275\2529@\275\336oW\275m%I\275%\237\033\275g{)\274}\354g\274K\210X<\311\'J\275\037\316}\274\347\333Y\275(\260\323<\324N\257<\322\303\014\274e\220\350\273VS\341\274\375\026\321\274w2\303;\236]\246\274\371\264z\274\205\332>=B\357\271\274\325\275\370\274\216\262\310<H4E\275\355\261\306<\361\216N=\007E\334<\356\275\205<r\362\017=\031p\213\274\377\"1=\026\321\243;t\032#=P\003\'=\302t\245<\262T\254\274\031\2208\274\016\to\274\372y*\275\362\351\357<\326\013B\275r\202(=\225\034D=\363\210{88\275X=\\&R\275|XP=\257\027E;\324\\\363;kX\372\274C\216\264\274@#R\275\305\310\347<\223*\275:\033vF\275U\231\2468\241{\215\274\301\002Z<\331\024R\274yb =x\300\247\272\317\027\014\274\\\000\273\274l\342\031\275\234\016\r<\302\202\277\274\227\373\254\274IF)=u~*\273\316\033S\275\225\220\224<\373\t\"\275Z:\312\274\203\334\362<2|w<u+7\275\371p\357<\3444\003\275\313\347\020\275y\315;\274\r\323\246<\367D\2477h::\275~\271\204<D\316\215<\035\330B\275\247\2473\275/\245\277\274\031\227+<\262\222\356\274\276\324\222\272\303\366\256\273\215\t\203<~Q \275w\357\326<?2\272<\330\352\223\274\006\244P\275\3178\355<V\322\310\271\270\306\322\274s\266\373<\343\257e\274+=\202\274\301\026-=7\320{<}\332\026<3\267\032\275\234\027?\275FQ\300<\374\010@=\303X0=\377\3170\275\275\263$\275\316\306Q=J,\031\275}l\334;\233\311\"\275\030\236\354<Yw4=H\341\301<\317N\273\274\364s\016\274\234p\232<;{\351\274\241\356\r\274\215\202\273\274\310\364\010=P:\027=HW\202<,\247\037;\334\3675\275\244\275\002\2753\026\010\275\274-;<\240\242P\275\210\033R=\23772<\307l\024\275n\256\266<\234\000#\275&\324\265\274\305p\013=\353\006\371<\260D\366<uq\275\274\222>z\273\263\204w<V\277M=\321w\262\274!^\031\274s\031(<.\275U\275\\X7=\220\t#\274\207\375\021=\206\243\337\273\277\344\302\274\220v\200:\357\014,=\306\311n\274>\002\031={PP=?\250(=W\355\234<v\376\364<=\177J=\350\260\372\274\002\004\242<\361Zc<\353\213\363\274\371\314)9@\305.\273\253\225B=_\000Q\273b\361\r\275\302\315\r<8\340P=\004mV=U/j\274B\334v\273\216:\353\273\333\304\225;\002\251\220\274\3163\232\2742\0335\275\021\001\252<\276\343 <Y&\252;B\353M=#4\3709a\263\232\274|{\353<\001\226\'<Z\010\277<\303\247]=\021\216U\275\236\t\010\275P\221*\275d\246\032\275D\257\372;\201b\t\275\262l\013=S\022\017;\016\3101\274\035\321H<g\271B<\207^\243\273\213?O\275a\313\n=\206r\023\275\003\364\240\274-\367!=\374\311)\275\355\230T\275\246ja\274L6\336<\242\035\227\274\232eP<\275\013\001\275af\\\274\267\261\333\274lh\206\273\267\331\003=\314x2=\036\200i\274\340}(=\332\377\204\274\350\311\032=\364\2778=\020\357\206\274\373\363\022=\274w\256<At\030\275\204J\"=\212|Z\275a\033\362;b\275\001=\300)U=l\253,=\362w\266<\367\377\235<\027S\306\273%]\014=\377W\266<)\226:\274\013V\\=\356\221e<\264\260X\274\357\341\205<\305\245\315\274\010\372A=\263r\240<90\036\275\212\327\031\275I\220\235;s\330\000\272\277\331$\275\035\346\320<=\343\226<\003\222*;8\326\004=G\032G=\325\232]=\357\013`<d\373P\275\261\300\370<q\3327\275,\202\001=i$I<\373BS<6\216\301\274\343\312\216;)\202\307:\323\274\007\275\272\273\035;\031\361\323\274\206\353*\275\331]\341\273\205Z\032\275>8E\275>`\364<\017\243\027\275\000\306\210\274\355\2221\275\006\345\255\2734\366\253<\021\221\355\273\217D\344\272KN\357\274\244gn\274\312\317\326\273a][=\0345V\275\241\023\001<\236\367\364\273A\321\262\272s%\033=\255\364\275\274=\340Z\275F\334!\273\302\nF=l\3711\275\341~;<V\2760\275R\330V=|\204T;\234\306u\274]\003\036\275\353\246\334<\240\243V={\240\377\274\361\277B=\024EE\275\333\322\353\274O\004\034\275\277\340\247\274\327fk<\200\204\247\274\356\223\266;2ZR=\177\264~;<h\016\274\"\335@=q\313\302;\204\374\222\274lb\233\274Q\270\203;\2011\032=6\2577\275\'Z\202<\325\261\362\274n\210(\275\273\022\323\2744\207#=\351\"\333<\"\r\217<Cy\006=R\t\327;\322!H\275\306N+=\245\264)\275\334\237\021=\274i\032\274kNF=\221\352\266<\251\312\032\275\320\361\371<\013\256<=&\366\276<\3544J\274\333/\225<\205\372C<\202\355W\274\222\325\231\274\023x\264\274\202\277\230\2741\345J=qR\332\273|t*\275\331 \242<\024\311o;\237W2\274XR \274N\2005\274\326\374\271<\2563:=O\022\230<!\226T=bX\325<B$F\275\270\013#=lN3\274Q\036r\274\356m\247\274\364\002\032;y>\322\274\354_[=\334l<\275j\341\260:K\212\031=\36089<s\267L=su!=2\367\022\274\200\025J\275\013&I\275\024/\360<\";\343<w\3440\275\341\030?\275\226U4\275\375Ny\274\350\276\212<\227\330(\275Z\371\254<\025\215]\275 \242\300\274\035G\030=2H\275<C\257\324;!a\004\275\0304\241<\025!N=vV+\275\310y\034=\331\376G=X\316\014=\\\031G=i\317\231\274ugp\273\016\275\t=b\t\312\274\034\0012\275\243Q\013=-\360t;\021\312>\275\300\362Q=\325\372\224\274\t\000\016\275\266\357%=A!\363;:\022U\275\327\257\333\273\337q\210<\276\376\343<\372\360\271<\007\266\240\274\0237!\275K;\000\274\\\222*<\220\253\330<\224\256\224\274%X<\275\347\216\321<w\305_;l-S<:\201^<h0\222\274b\331\247\274\\\246\220<\327\027\347\274\t+\247<%\234G\275:s\026=\356\034\245<uO\030;\253\352S\2759q\263<\305\241\311<6\301\032\275P~4\275h.\270<\r\250B\275\022#J=\243/\000=\341\0370\274\035%2\272\247\264\246<\275\026\341<\013.c\273F?\031=s\357\032=\230\201\004=\207-_<N\262I\275(-5<\027\345\277\274\3445\321\272\\\350\221<\332\201]=\320\254\255\274\345\020\220\274\353\214G;&\037|\274\311\200K\2757\211~<\351\tQ<\032B\205;`xK<\001MC\274\337\225\315\274ht1=\251\214 =J\263,\275\032\001\001=x\353\2529k<\014\275\025\004E=\004N?\275\314gC\275fAF=\206\030-<\325\271\367<\221\2262\274\314b\033=f\'7\275\373\2059=\033\2224\2752\256\367<Ot\336\274\352Y\000\275\003\017L\275\025\002:=!@\252\274\373\024@=Jm\352\273;3\344<\362l\311<\376\327\346\274\361\302\274\274\333\232\370\272\\\337\341\273A>\3419RR+\275\265N\004\273\313\222G=QZ[\2755\315H=\263L\260<\257/\217;\220e\365;\270_$\2738\263\021\273\033\202\213<bR9=Z=\317<\265#\347<-\000\004\275p\003$\2741\327?\275\235\261O\2756)\331\274\017Wk<#\215-\275\331\302\013\274\375Z\247;\266\303\037\275v\221\020\272\270:\336\274*\312\263;6vV\275\312\356\320\274UM\014\275\316\245\217<J\000\206\274\340\322\350<\214z(=\0213\022=\3325\246<\320\303\232<\350\257)=vv\363\272s\335A<\000\240\027\275@\271\306\273\241\022\272\274\023a\033<\350z\223<i\317f\2746\373\316<\340\t\375\274\014\265\346\274\023R\243<9\'\030=\255&Z=\007\200%\275\310b\262\274\326\331-\275~\345-=Hb\217<\213\316+\2755\033\204<\213\014\305;\345\206\004\273\025MG=d2^<\337\217\240\274\021,\002<\257\277\355\272\r70\275\304Ex<\354\374z<vN\365\274\035k\351;\315\2367=r\226\177<\317\253\256<\270\223\300\274\237{P\275\347j)\275\202\217\033=;\324\236<`\265\344\274]\352\017=\230I\n\275\353M\037\275vI\247\274ex2\275\264O\304<3J\376\274\2031\250\273\276Q[<I\371[\275\\\'\005<\343\212\230<y\314N=hjc\274\224\025\032\275\373\312\r;\2359\361;\243q\000\275\033\014\307\274\220\310\020<\204\234G\275\236\007\306\274t1\316;\016dQ\275\245\343\002\274\317Z\340<cs\213\274Lcu\273\007\037<\275\177\023S\275\320\004B\275\213DV=\324\256+\275~]O\275e\312R\275\300\367\213<\271\000$<8Q\327<to\027\274\361\332L\275\265\0109\275)\014-=\244N\032=u4\352<\314\266M=\217Y\236\274\227\035\377;\344sD\275\373\214z\273|\240K=\241H\026\2758\322\224\274\022\003\020<\352O8=L\216\320<8\032\343<\363#-=7YW=%\333O=D(\035;\210\373\032=\200/\315\274\251\225\272\274\256V\022=\363\306\005\275\325\271T=n\224\r=\032\324\030=\367L\303<\246@\276\274\273\375\271<\343\350H=`\342\276<\343!,\274?\3270\275d\320\335<\357\325\231\273\367\236\316\274\254\245[=\014\330\212\274{\021=\275\265\021-\275\t\327\004\275]\340\210<%e =w\325\014<\177\2068<\253\026\365<a\240H=v#1=O$\000<\226\310W\275\306\222G\273\036\303\020\275\244\211\017\274\003\257\026\274\225\247\225\274\372\226\273<\302\262\034=\017\'V=\36456\2758g=\2753b\213:\357t\332<\30394\273\250\033\323\274~\214\027=\"t\r\275c\326\026=\215\3650\275\367z\351<\004\320F=\007\377K=\220NA\275\330]\032\275\352\247,\275\007K\226<+\364\372\274\224\226\034\275\311\261$\275\202\210\312\274\375\271\257<4\356\226\274\010E\275\274\275b\001<\\\250\016\275\317\276\217\274\3761<=\'r6\275\344\251\375\272H\263\345<s\265\'\275\264c\034\275\232i3\275+\342\347\274\277\360\035\275L\263^<Z|\\\274\332/\021\273BN\356<\317\361\'\275\333\321\373\273>\231\007=\256\246J\275L\257M\275\205\257\006\275\356\004G=\322<^=\'A\334<B\374\035=\177N2=\342\320+\275d\271R=\316\304\312\274)\336\277<\003\273\205\274<N\214\274\342w^=\347\227P\274\306\026\001\275y.\003=\325\rY=~N\355<\203*\014\272\016\023\002=Z*\033=X\251F\275\212\347?9\257\271\303;\000d$=?r\353\273#\260#=VN7\274Kk\313\274\257\357\264<\013\341\362\274\341\207\262\274\035\276K\275\256\372P=\204\3145\275\213|(=\331/\031\275\244\203\213<\226\234\300<c\237:=\177\026\276\274a7\317<r\336\340\2745_4\275\201\206Z\274\007\337==\336P\306\274\200\006\025<\242\214\322\2731\\\243\273\376P1\275G+\344;q\352\014\2753\353d<\035MS=\354\215K=\260\256\347\274\035\2259\274x\352\025=\363:\010\275J\366\023=\263\025\354<\212\002#=O\001\025\275\333I\300\274\302\257\307\274S\273\030\275x\247\r=\330\005%\275\313\017q\274cQ.\272\314\033A=\306\245.\275R3?=\353\355\343<\345,$\275\311\034\276<\356D\352\273\203Z\350\274\345\205)\275\266\314\303\274\333\350H=Eu$=\3557E=f9T\275\250\201O;\330\210\024\275*\313\221<\021\357\326<g]R=5\210\372<\331\001\220\274.\230+=X1\260<\035\001\027\275\210\312!=\335\347\003<g\262\205\274\274\0203=\020]\037\275\2154\004\275o\257\036=\306\036\036\275\000\001&=\212\377\345<\247\371d\274\264\036 <\212\230\235<\323\005\356<&2\\=\233\356\305\274.J\343<\261\252\357\274\352\032\025\275\025(\'=\022<\310<\035(\227<\215\205A\275\303\374.=\205\373\027=K\341\212<g6\030\275\2517Y\2750[\004\275\244\014\037\275q\023\367\274\220iE\275\220q\224\274F\0161=\211\201\005=\014U\n=K\3358\275\330\242\221\274&5\302<\370}\023\275/\257\325;\034}\032\275\207\377\352\274j\3679\274?B\014\275\033\344\342<\275\352&=\224U\035\275\375w\027=\234\230\240\272\347\265\360\2745.\275<\'\310(=\005\036\336\272\230\302C\275|\236\252\274\362\217@\275\364\234\200\273\2640R\275\320\320\237\2739WL\275\2244\346<z\257\022\275\006\221?<Y\250\264\274su3\275\222\312\r<\277h0\275\2641\025=\035\014\010<h\344Q=\033\363\2279yRh<Q\233\320\274:},\275\210\236\371\272]\3474=qcw<\336Xp<\245&\t<\265\325\346;\246\217\305<q8\267;d\343\010\273F\250\"\275\271\231<8\311\216O\274W\026L\275\331\260\036\275\002\212<\274\300\323\220\274\037\324\t;\222\2255\275MD\000\2736=\023\275*>\223\274\217\274X\275?\3210=\372\335$\274-_\002\275\363\202n<\236\372\237\274\335YC\274&g\032<\246v\023\275bfM\275\336\315\313<x\325\265\274N\025$<\221\215\253\274\t\023\375<\325_\264\274\260\320\020\275w\325\317\274\213+3=\336g\022\275\301\3708:#7\313\274\302\007T:\204N8<^\327\020=\025\026@\275z\365 \275\036\233L\275\'\360 \273\332\341\272<\331_b;\371Cl\274\213K0\273t?\270\271\272\347\262\274\323\270\013\274\237\365)\275L\224\264;\225\301N\275\270\227[\275?\340\372<\337\370\337<\377\2763=\031\274\"\275\327\276V\275\030\233\032\275\336\3428<My\243<\315\211\022=\355\220-=\341F\300;\214D\326;\204r.\275\306{$\273\241\316Z\275X\370\347;\245\255\377\274Q\361B=\"&\242\274\005\215 <TDK\274W9Y\275\177s6\274\366h\036<^\2403\275\275\333L<Gu-\274\366\315\330\273\032+\014\274\200\363\017\275\377i\257<\005\206\350<\344\032\220<m\214\026<\202\364\001\275I\226\321<\367\224\3748*\2020;\365(\215\270\320w\355\274\240}\005\275Fm\025\275*N\033\275m\202\255\274@e\r\275\242mQ\275\t\324V\275\324\304\317<\213\351.:\317\030\'\274vP\352<\250\257\251\274\306\236\350<\362j,\275\304\240P\275x\212\273<eR\351;\016\023f<\326\345\363\273S\365S\275\316N\234;\240\031\210<\301\022\372<}\274B\275\353\333\221<\251\236\353<\2563T\275\235r\010=\234\235\355<\332\372\346<}ZC\275\001\033D\275\223u|\274\364\030!=\362\270\n\274\253\247F\275\271Q\265\273~\340\013\275E\275J=>\213>=l+\010\272\342\363A\275$fw\274\363r\002=\027\"\335\273\347\224\357<s7\310;R~:\275}!\324<9\275\022\275\356sF=\222\3420\275~\003\010\275U%9<\216\034\'\275\357\003\305\274\343!w<\034\271\256\274p\332A<\"{Z\275]\377[\274\243\2715;pP\222\274a\234\001\275\242K[\275\020m(\275,\303\300\274\024\377L\275\272\334v\274\247\303D\275\301Y\231;\330\370\315\273\014\342\243<\307\362\362<\023N\204\273\266\020\212;\273\252r<t\373?\275bd\230;\250\010\224<\312\353\335\274\226\370\253\274\014<N=\327\345x\274zm\311<\332k\335\274\3718\221\274\354P\221\274\241&\273\274\205\0012\273Roz<\333\025\312\274\211\177=\275\330A\033=\020L\330\273\265\236\251;\356#=\275\356\246<\275l\366\356<u\027I\275h\257\024\275\007\330;\275\0372K\275$\001\006<|\302\01098\336\"<\236-Y=\325\365T=\211_\322<\312\366\000\275\241\347\277\273\032\276>\275:\214\264\274\352d\237\271C\005W\275\3431d<\364\211Z\275\260K\000=\223\336\034\275C-\001=\033_\334\274\3032\004\275\330\277?\275m\310\377<a\366\177<@\276\006\274\033\253\360\274\202\261\367<\317\021\010;\363\252\274\274\234\026\314<k\254\026\275\211\002?=\352\267\311\274d\355\333\274\263TK\275\275\224\001=\031O\242<\340\331\031\275\205\326\021\275\002\007\217:2\313\017=4\353\220\274v\340\033=\337w\240<\201\203\026=m\351\030\275\315\340?\275\022\\J=`Z\270;\362\\\030=f\213\265\267\342t\'=OS\332\2733{&<\353\024\224\274\202`>\275\374\177\344<\325\203\264\273\315\017\267\274\211\005<\2745YK=\271\236\010=\360E\257<A`\325\274\022=Z\274\000d\037=K!]\272E\027\316<\023\2743=@\254U:b,\353\273\327-\234<\317\371m<^\356q\274h\023]\275\276\016<=\345\370\260<\026\232\246\274\326S\252\273\276\213\3609\254\344G=g\307\357\2738\245\210<<.?\275`\367\233<1\'N=\351\305J\275>\255\204<\025\336\340<\2249,=1\'\027\274\226\'\235\273\320\3555=\014F\316<\333A,;+rc<\001\255\330\274\006\367Y\274rNC\274\266\343\200<\251\300R\275\214x>=\325\217\216\273\303*\351\2733\335\035\275y\003R\275\323\005\244;\377\325\247\274\266&<\274\r\200$\274T\353L\275\361s\n\275\202C\373<Hg\264\274\221\236\030\275_\\2=\251\201S\275{\372\240<\313P]\275M\362\362\274\253_\010\275\034C\362:|n\273\273\014\202\325\273\347\304\274\274y\332/=\307v\306<7*\306\274\353\2578=(\3713=\t\356B=V\262Y=\262\0345\273\033\313\002\274r\211\002\275O\\\n\275R\363C\275\337\215^\275\007\246\r=J\243\021\275\364\325V\275\002\205\177\274\224 [=)\276K=6S\370\274\347\377\000=\016R\233<\013\362\037=\221\364\031\275\271\026c\273\325+G=GU\346\274N[\346<\204!\234;\337wI\275\005\331L=\317\361K\275g\3204\275\004\367\316\274u\2728=?K\020=nu3\275\243\001\001\273\222%V=x\024\374\274\025\371\240\274\330Ju;f\272@;\234\354\007=%\353\025=\"\323\'=\335u\253;R\265#=\331W\017<\267\300\031\274\3720\034\275V\306\036\275{\347\277\274Y\346\024=\206\'\246<\323\014?\274\337\204K<6\343_<\333\270\310\274]\233\010\275f\234\364\274S\303\321\274GvS\275d\254\360\274E\306(\274,\2476=}\0069\275\324\354\t;e\341\002\275\005A\215<>\372\007\275C\0057\275\302l\030\273\234xZ</i\367\274\267\240\375<\207 $;\373\026\314\273Al3\275(\246>=y\tZ\275&~\007<\252\213\"=\022&\025=\370\246%\275\022\217Z\275\252\t\241\273\372\245:;\270\306\306\274\033\262\340<\362\366g\274]5F=o~(=7*\317<\257\233&\274)f1\2745\315f\274\036\355\316\273\344\0247\275\307q\177\274\010\324\203\274\216J\256;\000\321\204\273\022\277)<\270\005[\274\200\363/\273\325\274)=\355\223^=\216\267H\275OuM=X\3671=Wr#=\037\\\r\275\331I\357\274a\222\362\274\000L3=\026\030\020<\333\002\271<3\337\214\273a\031#=\233\004\263<\333\2620=E\317\"=\337D*\273\373\'j;\357$.=\250xX=\314\233\275\274\342\345\003=\"\267\022\275\036\224\320\274\331\206\205<\017\250\356;\345\230!=\014\316\226<?M\"\275\213F\t=q\310\334\2744P\236\274\323]5\275 \026\361<Y\3166\275\262\201\027\275\263\213r\274xf\014\275o\222\302\274\340\002\000\275\234\203\227;*\322\020=D\351\016=\346\213\215<\2261\337\273q\007T=\221\327\r=3\316N\275[\217\r=P\343$\275q\367[=c\307d<\372W\326<\034\256\027\275:iI\275\236\255\231\274\247\022o<1\3652=mHC\274\005\026]<\252\n\004=\005\247\000\275\2240K=W\243\220<F+\362\274\340\227\375<\372\365\306<]\227\036\275\274\254\010\275K\276\226<\000\347\032\275\276D|\274da-=\306BQ\274\331\3023\275\301\nC=\317\250@\275\224\020\022\275U\277(\275`\251U\275\024\270(\275\254V!\275]\331\005\275$\n\302\2749\224\270\274\212\320X=T\323\217\274\2233\331<\265x\374<\235\201a\274\213O4=\232\353Y\274\375\240w<\275\2018\275LOF<\260n\010\275\277\363+\275\215\327.=\236\320\262<\235c\265:\311M\016=&\221\022\275\373>\270\274K\0303\273.\207\344\272\035\2318<\352\033\300\273\222\371\245;e\277\336<\227\\F=\217\235@=\373\365\363\274\2000\036\275K/\020\275\233\375\247<\023\311\n;\3414\221<u\036\002=~\332\021\275\3119\340<\024A+=-H\355\274\230\246\353\274?\227\264<\347\365\336<\202j\014\275l\301 =5\362\r\275:W[\275\362\364\234\274\014\232[<\034\316\375\274[\307\367\2741\247(\275\262@T\2755\230\323\274\241\232B\275\341\'S=;|C\274\377\022\024\275\301\200a:6`\261\274\307%L=i\225\276\273\003\250\r=\234jN\275\216\024F\2757\000V\275\244\013\247\273\226\257H\275\217\247!\275m\3238\275IV`\274\007\373\214<&\244\312<\314\257K\274\276\261\324<?\357\000=\2329\371\274\361\2730\274\306z[= A\271<r\0130=\272i_<|\031\035=\257\320X=V1O\274\206?}<L\322\354<\201+\223<2\215\033\274\203\265<\273U\240\024\274\021n\207\273CC\364\274\035\225\345\273>\323[\272\205\031_\274\267\337\035\274G\367\202;U\264G\275\027<\016\275\3675;=D\020E=Dw\263\273\337\340\002\275\351\211Q\275x\354\037\274\377Z\221<f\247\013\275\300\233\254<\344\270F=\237\263I\275\370\364\251<\314\313\r=\302HD=\272\2111=|$1\2754:M\275\240\2357=\001\203;\275\334\310@\275\327E0\275\014u\344\274U\177\003=DI\240<\246\177W=\n\345\2609\361f4\275\006\337Y=\245\303\316\274\034\201\\=\350\377\'=\200\2353\275\230\301(=$\261\225\274E(\200;4\007 =\271-\273\274\354\200&\275\240\241\334\274(\212^;K\264{\274\264!\200\274\267\346\'\275\213\217/=N\313\241<\330`\030<\241\303\355\273D\333R=\260s\035\275\"2\030\274\\C\373;\357Cg<R\016\240\274\222\275W=\334\321 \274\2550\233\273\315$\210\274\340\303I;\245\0054\275\327V\024\275L`\004;Q\2672\273\021\254g<FQT\275\321\304\034\275w\001\256<w\377\320<\230\334\021\275\347\306=\274\366\374\207\272\367t\031=/\3108=(\276\025=\256\213K\274\373\251\034<\247aP<\223g,\275\010t\335;\333cr<\277\272\272\274M,\003<0@\355<5)\256<\033\276\006\273KH/\275\277\346l<g)\001\275?9\247<\260\2407=\363\364\201<W\213O\275\036\236\366<%\034B=\277\262\r<\270(\341;F\237\013\275\215_\246<f\362L=\244eQ=\221XK\274\331(5=\327s\333\274\332\003\324<\2361\260\272Sp\007\275$d\360\274\005K>\274\253R\271\274%\343H=\241J<\271\226\330\t=q\031u<:\350\377<\213\234k<\321\363\364\273\341\017)\275\222\021(=e&\030<\373c\271\274\302\027+;\357*\207<jD\353\274$\205_<\261\376!=\216\r\300\274M:\305<\244TS=\3021Q\275\350\257\335\274\013\317\213\274s\346V\275\245U\213\274h\276\033<z\315\035=1\237\215<HS2=M\335,\275\341*\372<CY\352\273\362\243\027\275\177U\257\274O\340\037=B\333v<_\211@=\t\315D=\317\036\255\273%\014\030=#s.=l\213C=p\215\354\273Kk\002\275\315\010\211<\023H\373\274J\032\231\274\1779U\275\205\303\203<d\2512\274\375_!\275D\3327\275i\374\333\274MK@\275\262\321_<\353\375Y\275\0246}<\331\323\242<(ST=\252|O<\004+\t\275\233\224\243:\257\315\224\274S#><F\'R\275N\341\372\274\010i\226;O\017\007\275v\024;=z\206q\274)\006\033\274X\003\261<\262\252T\275(\324\270\273?{\205\2742\363\356<\010\004\350\274sF;=\316]H=\315\'\013\275?\304==\260V\022\275\377\000u\274\246&`\274Y\347\230\2742\212\031=\261\341\267\274\025\205\306;T\242\231;Q\242\020\274\372\017\320\274\236\216,<\376;\233<EB\225<\317)\016=\033\010\236<\252\345#=\2676\310\274S*\037\275f\265E<\272\310\253<\252\337\030\275)\273X\275\271\337g\274\013\371\017\275\364\310\336<\362\377C=\362\253\364\274\022A\016\275DLO\275rL\265\274\263Q\235\274t\025\025=\314\235N=e\2550\275o\364\036\274Q\205O\275P\325\006\275\221\006\303\274\374\243\252\274\336)S=\204\333\235\274\t\362M\273\312;T\275\325\232\n=\316\260 =>AS\275\000\361\233<\324Z,\274\304\223<=\',\377<\300\277\265\273\212\321S\274z\3126=O@M\275\324\337\302<\376\261^\275\253\233Y\275\336U8\275#\020Y\275\017\203\000;\354\'H=O}\223\274\371\322A\275\375\371]=\273\206\237<\024\3767\275\221\220N\275\257\217Z\275\201\325\264\274\201\370t\274\207>\024\275f\276\023=\025\210 =\325q\004\275\267\325\007\275a\0074=\262\235\342\274o/_\274\217QY=\242\232\347\274\220\027\274<F{\001\2750\345-=#[\353<\300\330\371<\354\237R=\240\374\036=j\301?=\033\014P\275\312\200u\272\317\276\030=\263\254<\274\300o\010<E\013\301;o\0310\275|q\235\273\004*\326<(8\216;(\364\276< \224L<\330\034*\275+q\031=4)\003<|W\243\274`\201\n=\034\326\310<\210\001\007=\247A\216<\341\037\r:\371\350\025\275sJ\010<\206\020\225;\377\312H\2746y\337\274\274\212)=\355\014P\273wr\356<\242\037\355<\237c\246;\"SL<\346=D=\366\271\200\274\307\0130=\251\251h<\213\304\250\274`\302\234\274(\024\374\274G\222\005=\006\2267=|K%\275\014\032\316\273\372(\242<v\004\"\275\237\035Y=\242\321\007=<\343\203<\007\241\321;\336vC\275)KU<\217y\353\274\377]\326\274\r\003:\275\037=\003\275Wr?\275\026\256)\275\000\331\032\275\274h\\=\323\323\351<&\353\031\275\034N\035=U\374%\275O\200\365<\032@b<@\232\t=L\225\025\273]m\376\273\327\217\323<\365c\036=\326\007)\275\261\346\035<\001\217\317\273\025e.={ Y=\013|3\275\000tJ\274\212m\216\274\320\266\203\274\335\266\350\273\265\3563\274_A\022=,\215\021=\342\316W<\357W\023=\264\270\364\274\225\264\351<\351:\302<`i)<0\273\276\274\224`\266;+\351<\275\201\333v\273VIW=X\325\":2\2635\273\200\021\001\275\241i#=\363R\233\274\031\307\241<\322W)\275o\t\036\273\020\317\371\272Z>\352<X\371+\275\207\342\006\273\300YC=\231\340-\275\\\3660\2751f\\<\314@\017=\326FN=\300\375\t=\321V\224\273\334\356\211\274\300\274\206;W.\005=K\367\251<p\033\361\274\231\3272\275Q\356\260\274\205\256\322<\272\177W\274\266\356;\275\243w:\275\260s\035\274;\032u\274_\260\006=&\206#=V\'9\274\321\\\\\275\207\303K=/\"\356\274\261\010\024\275\310\177:<=\371\331\274\036\246\371\274\271\224H=\"\344\n;1\023\217<{\035O\275\033H.\275\021\264F=\276\030~<\212\334L<B\311\017\274(Vt\273x70=\335\232q\274*D\211;\034\227$\275:\345\004=*\307\325<\321\310\235\272!!\214<KkA\272\377\362\314\273\352\352H\274.\274R\2736q4\275\267i7<\341=\363\274\346\334\014=C\3061\275`\321\017\275Y\260\222<\377jC\275\2339@\273\227\331\332\274|\017\211< ;\002\275\325B5\273\326\025Z\275k\271\005=\020\227\215\274\260\020}\272Q\326\007\275\234+\361<\242\177\231\274H\371N\275.\300\250<\025\363\032\275\2174\006\275\032:h:\313\022\320\274\274hW=C\r\355<\267\312\352\273/\214\266<\252D\314<bB?\275\230\325\242\273i2\205;\274v\014\275g\330\256\274\347\2675=\372\273\317;\351p\307\274N0\370\272\031\010+=\022\003\017\275\255\3526\275.\213\231\274\267\014\246<ds!=\252\337\247<_\260\265\274\314X\247\274E\225\252<o\255B\275V\332L<_\022H\275\030}\237\274\332D,\274\316\\U=k\rM=S\030\361<\235Z\203<\343p\000\275T\346\335\2748~\244<+D\235\272\220\004C:\237&\r=\034 X=3\314 \2759\233\214\274\343\003T<\220BF\275S_%\275B\300\247<\363\200W\275\211\0311<\020F\325\274F\367^<P\263k\274n\007\243;]=\316<\014o\3679\310\020\034\275\352&?\274\312\222\362<\343\336]=o\211!=j\204\362\272\025\230L\274i\010Z<M\311\335\274R?e<\264\257Y=\253x\007<\000 S=j\363\370\274/\221~\274#*0\274,\\\204\274#\240\370\274\306`w\274\375)\317<V\2609=S)\031=\335\325\324\274\177\335\213<\364A\253;)W\232;\322\343\332\2745{\351\273\223\342\320<\\Q<<r6\'\275j]@:]i\'=\212\353Y\275\016O7<`m\364<:\243E=}b\370\274\336\026@=\315)\361\273\\\316\007=h\205m<\375\371\266;*a%<\375y\352;\303\366\024\275\227\374*\275\024\031P<\337\351$=^\341]\275\322E\007\274\234\2264\275kF|<\321\035\016\273D\301O\275wQz\273\361\327E=A\010\374<\2474\004<(b\376;\236v\034\275\223\347\277\274\304\244]=D\335I=\026\252\353\273Q\353W\273&D6=)\371:\273\210\013\"\275iu\272<6k\024\275\312UR=\000VH\275\356\271\032<\200\2713\275@\360\013\275\360\372\217\274\302\352\321;R\333Q\275\n\300(\274{e)\275\276\2200\275\r\247\r\275p\210\036\275%w\322\274W5\332\274\202\246.\275F\351\232\274\237q\013\275\210b\367;\215\202\242\273.J\016\274\370\274\362\274\313\252x\274\253>\026=U\3575=v\2149<l3\353\274\032\260\243<g\014\317\274\372\347<\275\216[^=\035\224\032=\343H\241<\014\"\376<\321\013\343\273\027\250\010\275\026\276\000\275\034\017\253\274\361U$\274\265\266\022<E\354q\274\311a\010=\374\365\\\275TT}\274\256\3765\2756\004/=\370G\254<\007\032+\2736\215d:\363\265\242\273\234!\364\274\351/\212\274\006\206\341\274\036\355\301<\022\274\322<\014\237#=\031\312\025\275IK\\\275\224\006\177\274W\323\333<\217\005\016=\000\014\343\274\371h\231:8\335G\275d\375\310<N\366\241<\034\3742=\222\262O=9RV\275\335:O=\2332 \274\264TW\275{,\213\274w9=\275\223\307\326<\374V\005\274<[\314<\t=+;\335\033\300\274\274\231\031\275%\022\030\273\302\034Q\275\255\360\260<\271\206\231\274\"\330S<\rR\037=r1\314<b\254\222<\025;\233\273\216%2\275\'\205q\274\333\227\360\274\3635P<C\374,=\223\222\027\275ah\351\273\202\032\340<B\324\020=[\013;\275\374\217\250;\252\335/\275\243}*=8\2019=BWK\275T\2155\275\034\200\365\274\207\365-=\204\344\234:\231fC\275d\254\335;\031u\"=\352\021\214\274\370\331\004=\373aQ\271,\260\353<U\267;\275m-\025<\303*}\274f\366Y\275\t^\250<Ms\r=\275\376\000=8o\006\275\"[\311\274\217\374]=\326\271\230\273\016\1775\275\366\376\030<\357\263\260\274\272\250\240\274\270WR=+\365g<K:\300\274\021\000\216;\270\244\311<\250\223\340<\026LI=r\213f\274xY\035<\234/\002\275\n\263\343;\"\302^=\210\376/=\346\227\036;\363\302\342<\234\317#\275\266D\';\002\254\256\274Z0@\275\203\273\033\275^\0335\275b\276\t=l\037\321\2740\361\256\274[\227\242\274\350\350I;\265K\003=\031\\\007<\177\2665<\034\352S\275\336\303z;h\244\021=\225\331\213<\361\336\027=\215\357\256\273\017\252)=\334\370^\275\275\365$\275\213\233\'\275\032\324~<\346\302\273\273}w\337\274\242\r(\274w\204[;h)\000=W\206\245\274\360/[=\022\251\007\275\n\230\r\275\234\226\204\274UJG=D`P=T\365:\275\267\267\006=\350-\210<\351\2570=6\222\036=[\2630\275\205Q\231\274\241-Y=\337M\274\273\256\335X<\3240\036<LS=\275\021j\n=Q\2325\275Ky\355<\246\216\010=\023oB=\257\336\222\274\233.\301;\\\311\024\275\036\217\'\274\340DK=w\004(\275\263\344\035=\327\027T=\242?\314\274\2241\251\273n\r\007\274\r\267H\275G\216\302<\001\224^\275\3605\313;\177\245\317\274@\226O\2748\256U<XN\351:\241\3651=\032M\246;\256\265*=\223b\t=z\322\373\273\363;G\274a)4=\362\373\206\273\320G\036\2756\031\317;\344\024\024=*\301\027\275 3\315\273/\246\232\274Q\206\016\275\353\271\317<\340/\213;\300\225\374\274\344\2517<\0076\377<\22450\275\367\031\253\274#\254!\275Q\324\347<&\232\235<pF\005\275\r-\303\273M4\317\274\022nL\275\204\203e;\227s\256\274\362\303\002=\n|\321\274\232\021\002\273\234q\021\275\021\'F\275\207\242K<@\251\324<s\336#\275\035\367F\275w\241\022=\352\315\247\274\316\302\211\272Y\277\027\275+\304\0169lu\357\274\027i\017\275\264\364M< \214;<\272\267\245;\310\227\246\272\320ur;/E\'<\237\024\230\274[\0143\275y\344F=\032\367&=\231e%\275\330K\277\274\363~\365;\372\251\032\272\235\276)\274\016\310\375<\'\344\025=\2204\006=vL\020\275\014\006\337;\305\017\034\275\262\357\360<8\372\036<\025Vw\274mq4\275s\032]\2758#\003\275\342\r\373;Wn\217<=\262\245\274\013<2\275\260\013\031\275"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2020
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2020
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
