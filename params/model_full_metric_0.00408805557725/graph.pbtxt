node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2000
          }
        }
        tensor_content: "\021\225\272<X\236\210\274\350\226H<\202\246;\275\301\321<\275\3607\000\275\r%\t\2754\306\325;\2221\032\2751\345\307<\345\251\212\274\233\244\001\275\214@\021=\344aU\275\374G]=4sR\275b\027\337\274\242\315k<\nl\273\274l\332e;b\0036=\2176\013\275\326J\033<$\362\342\273;\371\361\274\377 [\274\330\033\213<\236\277+=\3733\002<r\032+=4\001.\275y\371\377\274d\324n\270q\304)=\306L\220\274\213\024\004\274\273\225Z\275\257\342/\275\211\016\271;5\317\3268\267s+=wT\'\274\324\0355<C=G=\200\342\326<\236\251\010:\234\274 =\303|\r=Y\033\026\275!\313\346<\347\233\323\274\"\353K=\2231\252<\273\r\242<\023C&\275=\323K=\335H\t\274\277R\240\273\026\014P=Y1\026=Ob%\274\2208\373<\263x\0078\t\3125\275\367lM=\225\256N\275\367\377>\275\364\275X\275-`,=\244#\303<\200\314\210<\230@\223<`\007\365\274\325\211\260\274\377\014\t=O\2559\275Y_\262\274\246\336\027=\004\330\307<\t6\025\275\337\021\200<\273\316z\274\367~&=\375\367O\275\266\254L=|_\347\273\005\216\035=+\031\265\274\375#\352\274{\236\376\274K\3419=\366\254\016=\016\256\000\275Z\374\234\273\235\010J\275u,\325<_\256\301\274\0351/=\240\017\036=~\020-\275+`\273;\276\306H\275\260L\311\274\276\226\247\274zb\326\274\007\032U\275\313E4\275\002\317]\273\362\304\004\275<\004\371<\'T\026=\031\022M=mH\300\272\024Z\006\275$}+;\316\n\334\274\237O\316\274ea@=\277\316z<!\347\315\271\264\245\217\274\213\037\243\274,\2361\275\271\205\350:\374\322,\275\230\227\036\275!-\016\274\374\003#\275N9\006=\370\220K<\200\034R=\243p\240<\213\240\'\275\202\356\250\273y\240\027=\311[\017<\033G(<\317\032=\275\201\232\217<?\342\265<\307JH=u\010\023\275\017d\\\275]8\t=b:\343;\3416\013=3\276#;N\223\272<\2733\346\274\326g2=\360$#=\207\346\261<\034K\237<N\026G\274\027I\242<y\267\333<7\256\'=\010\313\305<\312\254\254;\236sA\274s3p9Xb\334\273\335\237\001\273\305\242E\271\226\025\250\2734/\020<\355\307\271\273k\256F=\305V\305\272?E\020\275F\273/=\243C>=\215\330\340\2729W2\275\376\367\216\274\253\371?\275\324\255\033=\363\037)=\243\020(\2754\322\"\275\224DQ=\030\2732\275\332\327\\<g\300\"=\\<\026=\2419\023=\255dT\275H\362\376<\251\232\271;\353\t?=\221J\376\274n\247;\275\250\227\006\275\200o\026\275\023\367\\\275~\013\\=\247\035S=\"%)\275K\211\373\274\005h-\275\313\373\007\2750\"F\275U\200\311\273\236\241\014\275\341x =\332\274\007\275\206\370\243\274\030\201C=!\200\376<s\036\024=\352_\021\275\304\357\273<;\017\216<O,&\274fkk\273\037\315,\275\375\020Q=Z\227X\275&\370S=\221\226\351\274=\336U\275\346\260\354\274\260\362\357\274\025^\272\273\212A\244\273\355\326\327<!\270G\274\217\233\244\274\030\305]<_\000\325\274\256\250@=\207[\366;H\253\202\273~\215\300;\204\253=\274h1%<%\204&\275\324\2266=rq\243\274\263\013V\275\210\222\264\273\311MW=\377i&=\374?\034\275\004\331\353\273\351\252\252\2741\347\313<\247\260\032=\324\350\033=\314K\'\275\330\357\027=is/=w\025\354\274\327\021\343\273\026\277J\275\253\260\337;\265\3452=6\001Q<\376+\017=\245e+\274\323\266Z\275`\2147\275F.M<\220\233\262\274[\312\212<\t\031\377\272/\332U\274\021\377\010<\231\313\245;e\325\201:\003J\205;\200<\254;\376\273O=\301H\272<\307\345&=\212!C=4\264\205\273\374\246T=\3415\027\275\300\313N=hrB=F\010\031\275}!\021\275\362\2437=x\252D=\314\204)=\327\277G=\215@\260<B\340K<\267\233\033<\326]\214<\262WJ\2756\305\017=\027J\310<\251b\305\273\264\023\331;>~;\275\362\023\227\274&\362\010\273xb\003\275\027\034\255<p\264\034=\374\342<=\254\277\330\273u-V\274\331\300\305\274lC\026\275\314w\024=\377\242C\275\\\020\212<m\230>=\t\003l;\031\304\002\274b\321\007=\333d\206<\274\274?\2748\021\013\275\004\300\203<0\300\n=\\\330\201<\300V=\275H\016*<\360\n%\274\231\274\021\275\004\212_<\203\215\002=\013\275\305\274\204\207\027=\353\316\023\275\213\3115\275\033\314I\275A\325\\\2750K\204:\220Y8=\241\026\257<\261\273%=2\256%=I\0175\275\275\002\323<\373s\341\274%\313\034<\261\311I=l\020\"\275\247\366X=\217\223V=k\022+<\227\022&=\234j\332\273\251]\243\273=\2711=\321\324\376<B\310\002=_\\\311;TaG\275\271\231\025\275\210 J\274\036\002\005\275\305n\032\275\000*\323\274\217\223\356<\271\340\037<\206lN\275\026{F=\341T\004\275\302\330~<\"\372!=\n\366\263\274\023\'\210<\366\334\244\274nz\022=\304=Y=H\236\004=k\206\035=z\306;=\276\371.\275)KO=\265\024$\275F\233Y\275\330\322\007\274\"\200<\274\366JM\275$c\257<}^\256\274f\274\031<\2140\276<\372\2611=u\377\203<\335mI\275S\276\254\274\326\001\t=WZ\275<45\033=\206)h<\243g(\273t\213!\275\223n*<\314\246-=\305n\271<\243!\006\2753\243\021\275\246\374\303\274\025\263\207\274\366\034\274;\210P\222<\006\261\357<\302q\030\275\364r\241\274\245\352C\274EeS==\214\024;i\317\177<=;\207<\207\014,\274\004J\234;l0\302<b\"\305<\366\317Q\274\004\303B=\242;\262<w\206\265\274\225\226\250:\265&E=\327s\305\274J?\005=\246\321?\275F\365\342<\270\2508<\335\306{<\262V\024\275\271\253\272<\371\254\363<&\037K\275\3630\004:\214\357\n=\256X\266\274\200\221\226\274\344\232)\275R\230\370\273\001\'\327\273x\017\254\274\306\316e<\256\337R\275\345\203\007<E7\331\274\017\300\275\274\363\231\337\274\244Y#=\207\210\314;\347\3534\275\237\010\300\274\200O\202<W\267\321\274O$\362:\242\241\'\275\027\304\247<:\346_=,\370\177:\303p =\350\034-\275g\362\035=1\351$<\036\0205\275\306>\272\273\212\226\311\2740\024\203\274\373\360R9\375\372(\275\r\262e<~\354\342\274\262`>=\255\370\242<[K<\275&/\340<\346\032L=\244\367\211<\316\263\265\272\251\013\013;\311\003\301\273\356\372\314<>>\336<\301\026\201\274o\374\334<5sR<\362\250\03292\360P\275\314\036\247\274\243gE\275\035\024\001=\333\n\243<k\\\355;=\373\352\274t\334\345;\206\354U\274\266\200\027\275\177x1\2759j\022\275\334\246\251\274\364\230\215;\373DA\274\332\266\365\274%\264\017=\326\253\265\274\005\243\010\275\373\023\375\273(\016R\275\031\230B<\244\314L=\341`\034=*!\261;\277\250\n\275NG3\275\333\273V<\370\023\273\274K\346,=\313kF\275i\255\007\275\373\265 \275\333P\"\275A\221\r\275V\273\325<\372}\310<\307\032D=\372K\017\274^m\013<7\344\200\274\325\335\017=y?\306\274r\007\035=\332\240\342<%F\000\275\212\0369={\005F=\342c9\275\346yJ=@#[\275\2534\244<\200-Z\274\020\300T=\205\n4=\325\2612\275\320E6\275\024N\r=\370\307\355;\006\202/=v.\305\274N_7\275x\260h<K7#=x]\240\274\331\231!\275 \264\274<\035\217\222<\004\334_\275\353^\002<\243(\'=\215\3003;\231\361\205\273Ie\003\2747\001\034=(\326\320;\026GD=\'\226\254\273;\310\202<\242\232\372<\365\203\225<\220\351\254<\264\357\026<Hi\316;.\331G\275\233T\357\274\265\213\025=\ng\277;A\0350\275\216C\004=\372qC=\023\266\276\274\253\252\221\274\333\301V\275=\354\026\275\213\013+=\375\363\'\275#\306W=\331\367[\275&\257\021=\231u*<\330\320\224<\315\367];\270\251Q=\\E\352\274\276?\210\274j\266\245\273\020\327\360<\360\1774\275\277\215X\275z\351\244<\032n\004\275\301\365/=s\021\224\274\231@[=\362\324\021=\336Y\352<\325\213\324:ai\332\272\214\006,\275_\307\024\275;fF\2755M)\275\251\207*=\261\021\315\272\341\r1<\306\353\352:\210\205\032\275<li\273\2162\244<q\313\364<\to\202<\253\3650\275\245\244K=\270\312y<\031\035;\273\357\2733\2750\315\365<B\021\350\274Rl\032\275\027\304\254\274_\024\016\275X\272\000=\276\rM<\036\210\035\275\315\330\031=\233_\257\274_v\\\275\303\340,\275o\306\016\273*B\337<\013\257C=\035\302L\275\270\234\273\273\271\340m\270\362\240\261:\363\314\016\275$\201d\274\327\275;\275\321/[\275H\375\302<\255\331m<\343>c<\270\005\306\273\035\321g\274*\r\001\274\275\356\356<@\360?<\000\2108\275\'\350\004<\355a+<\347\362\200<\351\325\246<\323\320K\275-\311\202\274\332pT\2756W\367<?\247\271\273\356\r\341\274\363\263I\275\322a-\2746ZM=\243wh\274\222\215\352\273\264\2653<8(\007\275\361\177\007\275\232*e\273\3749\032\275\276\357\331\274\223\323\024;\303\006\003=\034\212\212\274Ai\037\274N\233?=\263T\024\275\027\216[\273W\265w\272\246\355\241:>j\017=\252x\315<\203\305\026=\276\016\037\274=\"u<\260\003\237<\3053\320\273f\373Y\275\'r:\272\316\315\365<\357\312;=0QU<\342\004\271\274\310\033U\275\321\033f\274\365(\307<\206\230V=\004\332\344<\373b\013;\232IL=X\251:=*G\016=\210/<\275\347-\0218~\301\016\275fT!=h\343\300<\376\021=\274\310MW=Aa\334\2748Z\033=k\014\252<\370\273\267\271\201 \361\274\277.\n=\320]\227<[WB=P)\252<;e\305<\250_)=\315\n\217\274\240N3=\\`0\274\314\211G\275\354\201:;\336+\365;m\251 \275`~+=cs3\275e\220\272<\253\264F=\351\314\234\274\234\311F\275\361C\377\274t,\341\274\344\322\217<\007;\020=\007\267=<\227a\332<\023\260&=T5\226\274\370\032\267<\303\357_\270K\344p<\234\323\004=\227\200\026\274\256\201\251:\n\311N\274K^\r\274\307\350@\275\361\021\306\274\375\325p\274\353c\242<\250\257\353\274t\243$=c\026\023=\321\004C\275\010\342\021=\351S\332\273\250\013Q=\026|\026\275\226R\371\274\207:u\274\250KJ\275\014`\020=U\331\243\274\366\267\215<YgV\275E\346\213\274\201\377+\275\'\361O\275\001\2125\275\220\253>=\3404\215\272\253g\016\275j\257\002\275.6\261<\0332\350\274\016\300\010=\364U2\275\323\336\'\275\0213\003=\177\005\034\274\004%\364\274\252\254C=:\nJ\275\313\363\360<\312\004\360<\345\374\021=\177E\303<m\'\311\274},\313<\r\013\026<Z ==\034\2224=T\301\225<\320\356p<\233\006W=\244\233\246<\266\212 \274A~\253<\271\001\261\274lp%=\201<@\274\360\306\273\274\243q\275\274\003\272\001=\210\357P\274.\345-\2744\214\035=%z\354\2743\2449\275\257\363_<_<L\275|\022Y=\323&\311\274w\213\351\274\2154\343<\371\233U=\354\334\244<\301Z\024\275\217\230\020=\251\246]<\215\230\346<c\272\037;a\325\003<\025\223\355<\n\3221\275v\265\341<\335\261\326<\276\340\215;;(3=kt\025\275\361I\301\273\0211\220<g\370N\273\246X=\274\025\"><\200I\374<\322\237\226<<\246E<\'f^\274\237\360\036:*\352X<.\016)\274xsQ\275<\3750\275\337\025\014=L\032\347<\352\243\266\274\006\244\341;\373:\205\273PY+<\230\330O=O:\003\275\253:\272\274\275\3141=\0302A\2757L\026=\307O\206:^YW<\307\341\344\274\007\344<<_\277\021\274cV\352<6\271:\275\267\270\254\274\316\314\352\274hX\025;9\334\032<\006\275]\275\007w/\275\372rX\274&\323\334<j\240\314<\t\343\322<\317@D\275\0220P;\246\241%\274\221\322-\274\206\262]=B\310\272<\304\343.\274\252\200\002=~A\023=\240\223z\271g\307/;\273\034\\\2747\350^\275Tt\324\274\210Z\331\274\014\332\033=w\223\364<a[\202<y\305w\274\272\345d<\244\021\346\274\221#9<\362\232\270\272H\020\256\274\252\256T\275\220\230Y=$\302\005\275\020\257@=G\277\\\275?f-\275d\014\331<\263<E=\372U\267\274%e&=\2179\"=\177-\203;\025\321\\\275\315\302\024=-9\005\275\002\235$=h>8<xB\270<`iH\274\317\347!\275mA\324<F(P=\305.P\275\201Ky<\257\271C\275\237\030I\275\2127_\273\217\277\272<{\203\004\275t>-\270\346\322>\275\336\2438=\265\375V\275\324~Y=\001y\376\274\340\n\236<\311C@\275\031\313\342\273\3039\333\271\340\272\211;\262\223)\273\343)\317<\034\3716\275\336\343\003=-Hz<\222\210\037\273\372z\\\275\257A\202;\355r\025\274>\357f\274\\\375\213\274>\326K=HL\334\274\373\324\005\275\376y\350<\321\336\264<\321\013l\273\313\261\\\275m\217\202\274\033|,\275ig\203\274\\\244P=\007R\001\274[\276?=\354\214\030=\305\276T;\246\337\334\274\372\344\"\275<Y\001:\314E\361<6\203\352;\367\360]\275%{\2169\260\310O=fK\031<\345\353\004\275\344\327U\2743\356y\273\r\243Z\275\010\334\037=\367\232\026\275\025\004\002\275OiN=\206\266\025\275\230\220\017=\014\230\3779\233\303\307\274\211{\300;\311\375*\275\366q\206<\325\306\250<W\023\314<j=\303<\336\370\210<m\213\320<\305\327\376<\313P\240\274\351\261\207\274\255\013\257\273\351\027\007=\364S\3539\230\020\313\2748\313W\275\023\336<\275\004\225\343\273\337\300\356\273\213\001?=\030\350\205;\355.\327\274x\027\306\274\000\203\311;\225[H=\025\347\223\274\005\"\003\275\322S\031=\274\370:\275\"\202%\274Jm\227\27496H\275\013o\020\274\005\231\363\274\305w\304<\367c\033<\261\277k<\0065L\275\373t\023<\377c\032\275K]\013\275\020\2245\275\212\200\251\273m\212 ;\312\215C\275\025\247Y=3\373\023=\177}B\275\233\330\302\273\232e\005\275\365\\L\274\014\243\354\274,\330K=\266E\270\274\266\2242=nE6;-\211\033;J%\025\274\356\362\021=\357&*\275\305\326L\275\341\002\203\274\366\347C=\367\022\250<\250E\2709;\340#\275z\220\037=p\324\023\275\343\327\321\274\276YK\2743<N\274 \r\252<\274\275>\275\033\275\361\274\330\330\310;\325\037U\275}\270J\273\022\257$=W\201\365\274\235\276I=\013M\203\267\320\204K=9/\006=\327\r%=\254\246F<sZ\331;\027^\303<j_\333<\277\367\004\275\264\274!<jg\362:[\243\202\272\256z]=\345\320\024\275n\rI=\2110\010= g_\275N\350i\274\374Q\211\2733\324\257\272\002J[=\252\330S<\362O\025\275\242\3516\275\363\317\233\274bL\362<B~\030=\003\267\000\275\013\323\020=V\320\227\273\356_\021\274\250\234.=n\031\003=\'~Q=\t\2276=\341p^\275\036\355\265\273\326\316Y\275\276\252P=h\332\"\274\306\350\017=x\002\n\275.\227\"\275`w\031\271\300b$\275\335v\005\274YM$\275uz\306\274o\"\331\274I\322\324<\304\037b<T\274P\275\343/\017=F\026Y\275\206\317$=T\340_\275Pr!=b\210\020=\0219\t=\236?\201<L\202\r=\033w\"=\342\212\311\273\373\227T;]\233\241\274\241\271\354<rO\032\275?\322\263\274k,\216\273a\341o\274FMZ\275\375\256\320\274P|\313\274\330\262$=\323\326\306\274{R\033\275\365IH\275C&v\274\2072;\275E\024<\275I\255\031\274\210\37697\346\325\271\273\247\276M\275c\303\007=\033YV<\273\342_=\322\217==%\210\272;m\006\205\270\234<=\275G\323>\275!^<=\'\275\t=\316\262\017=\307\022\363:\202\201\361\274\024}\204\274\344R-\275]V\242\274\363\203\320\274\352\275\034\275a\211\226;\333\033\205\274\227\215\272\274\351\222\230\272\301\340\203\274\034\243\254<\276\321E=\001g\317<|\241\233<\321\031E\273Xi9\275+\230\324\273\031\3606=c*\006=\320\320\036=@\237\323\274e\242\212<k5\352<\317\376\265<\330\314\234\274\254\230\224;\245\264\276\274y\0258<\325\025\304<\374=\332\274TC\300<\312\225\246<}\\\207\274\354\001_\275\374\370\225<\367\365\031=S\231S\2757Wp<X9\004\275\353\361T=n\230)\275C%J\275?\247&\2750\200\263<\311\366\213\273VH\247;\003\014\242\274\217\321\2139\310\274;=\014~T\275\325\217\373\274l%\250\274\241\300\340\274S{\025\272\020`\224\274P\010\323<2\3179\275On1\275\3548J\274u\341\260\274\241\227#9\202h\\=\350\377\032\2758\000s<.\361\t\275\242NO=G\241_\274q/8\275\003\0324\275R\363\004=\013m<=\020:\014\274\344\2166\275\336V\r\2751\216:=\336\337:\275\021\007\024=\272\023\300<\342\006I\275\262\311\314<\265\277V\275\267\232\227\274\036\210#=\3763\332\2744\'\200<\372\3316=\252k\364\2731zB=\246\303\225<%\244\205\272\261@\203\274\003\021U=\307 \275<\020D\002=\236\2201=!.+=\254&\221<p\257\240\274\232\252>=\036$X<\006\3110=3eT\275(\226 =\214$\263\274} \034\275\225\3555\275\341\031Q=\206\206\235\274;\277\345\273|\367\370;\340\016\010=\271j\030\275\3173B\273\351\235\004\275\204\033\263\274\016\013.\275\036Z\260\2747<\027=\246\014\357\274\227i\202\273\260\350>=Go[\274y\201\025\275\220\032\"\274\033D\032\274\277\'\t\275\347\246;\274P\356B\275m\320\303<.(\034\275\362b\263\273[\377+=y\251\r;\'\0049\275j2\242<\253>\'<\310\220\313<J\334\316\272\016zN\274\001d+\275\361\204M\274q\201\302\274&/-\274\0249L\275\363\367,\275\364\227#=H\0369=\364\300_\275\263\277\226\274\222\344\300\271\251\310\200\274\270g\002=~-A\275\003\265!\275\342\300\324;\025`\026=\351\362\243;\366\340?=\233\261B\273/\022 \275M`\257<\000\036\341\273$\376]\274N$Y\275\226P\204<\330N\372;\262\335\\;\277:\033=\026\240P\275\'\224/=\000G\262<W\276@\275\273\331\307\273\344\030\277\2742\035\263<\341\345\365<\322\007E;\271?5<~\031G\275\037o*=\203\tN\275.\202\003\274\302[\007=\031\020\254\274\0130\215\274O\303?\275\347\274z\273\237\275\n\275\033\305S;\n\257[\275\227e\370<Nt\014\274\335y\256\273\372\230*=L\026 =X\376\010=\022\341\025\275\0231\031\275\313\0223=Z=\242\274\224\031\330;\340- \275A\366C=VB\205\274g\203,\274\207\025\270\2735\232\333\274\346\205\333;N\350Q<\373\027[=\030\376>\275\332\'\250\274\261;l\274\016F\263\274Yr\014\275Mq\005\275\252\314\257<\360vo\274\316$\217<j$4=\004\314a<\264\274)=G3a\273\360\220!=o\255\313\274\366 \032=\344\336\221<\n]V\275\013W\216\274\276?\022=\246\\5=\305^0\275\221\341K=\214\237\177;H\022E=L\347\313;s\032\300\2749\313\261\274\013-_<\315\267\233\272M4\000\272j\'\007=\202\271\303<\217\207\374<\325(8\274|\204W=\204\030C\275\350\2170\274\245h^<\335\216T=\216#T\275\003\336*=\327l\236\274\256\345\304<\274\337\257<\201j\221<\034\214\177<M\376\032<w\2503\275\311!1=\271@\021\275\035\371\2357_\267A=\311!&=\341k3=\002\372\201\274\216\244\217\274M\235\323<$\315]\275\215\255\341\274Y\305\222\274\316L\270<\362,\037=\212\373\252<*H$<gs!={k\210\273\367\266/=\201\017\201;-\305o;T\207\235\274\317\016,=F\347\224\274\234_>\275?-3=}\267I=\370\322S\275\333/X\274SC\367<\314\t\014\2743\357\355\274M\366\213;\260\335\027\275\313D\211<[\345\333\273\342#:;\032\216G<s\321\366<\200\273\242\274O\266\354;\365\236\021\2759\310M<\236\307\n=\224\253\376<\370$S\275\376J\323:k`G\275\272\350*\275&\342X=V$X=/\352\316\274\001\2364<\227\214\034\275*\010!\274r\030\211\272\226\201\215\274[11\275\021r\017\275\001\260\031=\036\035Q=C\3406\275\342\007\004=F\363[=\3412Z=\237>\027=\254\024j<.-\016\275\220qn<\352\315D\274\277\254\\\275\t\252N\271\313\204W\275\274\001D\275qd;=\271\372&\275\030HJ=\324\212\326\274\014t\373\274\275\033\254\274\007\371 \274j\211Z=\365\323\016\274\266\305\007\272|\377]\274Qtl\273\n\321\224\274\236\031A\275|\215v\273&j\022\272\253O\262<,\3161\275\017A{;\241?<=4\224\305<8\322!\275w\3706=\300\035\255\272\211\337^=I&A\275\273<\277\274\250r\253<\363y\260\274\354\307\"\275\315\n7\273&4\223;\212\210?=\256^\254\274\251\2536\273_%.<&l^=`\364#<,%T\274\210\254\244;\0035>:I=\003\275\244\346+\275oEe\274\364\367K\275\343\365X\273OS)\274\371\326\214<\224u\002\275TJ\022\275v\276Q=\331\315_=\231\003\242\273\300\324\341;\220-\320<\320\315*\275\273\244];9U\232<\270DM=\345r\335<\274\365\241<D\311E=%Y\003<c\323?=#\261<\275\376\2042\275H\334\013\275_\326\225<\007\275\'=\\\261?\275i\270\237:G\037\205\274\360N\010=_x\036;\320D\035\2752\366\364\274/S_=\217\360\245\274\2222%=\265\0225\275q\0222=\234\260&=\204\035+\274\037M\376\274\030)\352<S)\356\274RU\032=$\314\355<\307aC\275E`P<\350\177\311\274\315E\001=\333\202\351\274\205\323#=\270pA=\256\230=\274\336\302;=\371\2304=\332\006\017\274\013U\231;?\270\004<VpS\2744\010\323\274\211\361:=\036\262\020=\277\323\000=\370`\233<\020;\371;*\216[\275\010ay<\345RS\274\320\312C\275\371\2526=\2242E=4\314}\273\323\255F\275\023\203\216\274$XX=\031\246\210\273^\305N\275\230\347Z={\241W\275\334J\370\274R\330\017\275\002\325\307\273H\000\\\275S\354\343\274\336\320\252<-\205\022\275\336s\347\274\301\252W;\256h\336\274\2450\030\275 H:\275\255\303~\2744E\211\274\231\323L=\025\226\022\275<[8<B\234\022\275\303!\363<\2035A\275Q\215\274\274\024\305%=1\200\023\275\025\260\266<\256y6=C\204B=\262\313,<\3246\027\275\3605\203\274K.$\275\315V\353<2\r9=\310\004A=\231\3325=f\267T=.\217/\273RE\036;\340>I=\025\037\331<\031\220D\275\271\231<\275x\3706<\010\340\342<\265\301\243\274PJ\304\274|[t\274\022\357\213<1\241\225\274yz,=\264j\375;\0354\006\275\003`\014=\234\005K=\322\377.=\200V\237\272D\232\224\274\366o\n\272\246\325\305<4\303*\275\rx\261\274\301\321U\274\202\211I\275WX\270<\356\372+\275r\322\223;\351J\020=-#\010\275\1774d\273n\177\203\274\273\300?\274e\033H\275\202h\\\275Z\007\362\274\357\234B=\331\206?=\210\203!<\303\276\307\274S\026\266;\003\2506<XHm\273\3611);\265\\U\275\\Z\264\274\244\272\023\274\227\356\2679\251\251\262<\000\033\001=\374\204\237<F\341\024\274\245\356\240\274\277#F=\345\311\373\274\370\362\277\274\000\000\346<\347i(:3A\236\274\223\035\273\274%q=\27597\035\274!\271\327<r\026Y\275\227[W\275\365\305\312\273G\232S\275iv\\<\223\305,<W\262\035\274\260\235\032\274\266uS\273\322w3<x\317\005=\224$\274<\367\002\021=P\371\276<{\273H\275&\261\275<\244\216I\275H\037\005<\220\317\210\274\274\303\342\2746LK=\022\026\007\275\357\261N\275s\271\261\273\207\243-=\023\027f\274[@\035<\246\326\013\275\251\230\r\275~sO\275\327&[\274^\330\306\273SW\010=\244{\026\274\006\034\006\275A?\t\275J\230`\274\255\003(<\370\300\022\275zl\300;\256\326=\275=W\355\274\26578\2759\233\245\273\363z\214\274\241?,\275=\005\305\2748\367&=\362\3332\275b\034\350\274\350\2664=dD\037=\022 \377\274\275\225\033<\025\205\374;8\334\035=\211\3763=\n\341\305\274\227%\315;\201\312\230\274\022\324\002\275\263]Y<4\2043\275B\313\276<e\354\027\275\267\246\267\2745\214 \274\226yU=\023\326\325\273\351\213\230<p\251\333;\213J%\275}T\216<5\277\246<\313\337_<\326AQ\273/l@\275\031\200\342\274\026Vw\274e\232\243;\033\256\323\274\353\240\016\275\267\021|:~\004_<\256\266M=\274\300$\275\361\221\214<\237\367\354\273\232\r]\275w\344\265\2704\253\263\274\026\301\303\274\275\375\357<\277\215\257\274\303\324\300<\220\017\351;\357\337\331;\221i\000\275F\"@=\007\351\303\274v\206H=o\205\311<\204\205\256<\374\307-\275\207\301B=)\310\325\274\260\024\001\275\025\372\2119H=\374\274\213\325\270\274\037\202E\275\376\265h<\351j#=\031@\025<\034\232\237\274\361U\001\275\3200V=u\0242\273\017\350\006\274\362,\375<\314X\200\274(\366\276<\331\"%=`\245\252<\212\017\204<_8\257\274\242\317\"\275Z\353\236<b\216\355;\252\365\327<\266\361~\274\331kJ=\2668\002\275n\301\256\274|\337\334\274TCW\275\204\010#\275V\205[=\370\014\247\274\306\377\"\275\023\343J\275eNE;B\241\244\273\306\310\243;\260\220\353:\250\303\000=]\324\240<\355\312\245<\n\304P\275O\273\001=r\030\310;\027\235\207\274\356P7=\373\300\336\273uq\t=T\240\002=RX\367\274\214H\275\2745\242@\275v\036K=oWr\274\254\363W<f\0071\275\016^J<o\236\037\275\221\275\332\273zm\006=B\346\263\274\366U\201\273ZU(=n\010D\275\276AV<\244@\205<\250J\275\274j\353\032\274\267\363<\274\'\302Y=\022\030\320\274\362\222\376\270S\217\007\275\245\022<=\266\331\237<\"W1=\226\224C\275\376\021\001<.\0311\275,z\250<l6\346<\025\000\244:\035\272B=e\311b\274\334\351\303;N\241\023\275\360\256m<\312\010\021\275BI\346<\'\037\351\273\275\016\204\274\250\234\332;Dv\302\274\253\212\241<%\017Y\275\210\267\002\275\376\332\332\272pg\035\275P8\232;\332\020\027=\370{2=\361\002\277<\207\347/=\305v\254<\207*E=\216\360\334\2728\2511\275\2258Z=\'j7\273\036\217\'=\345S\214\273\215\014\001<\336?\001\275?1U=:lB\274\\\010\306<\323\030\376\2742\333\027\275m\266a\274\201H\253\273\\\225\346\273Fi;\275\215\0267=\021\251\024=-\262\006=\"i\\\275=\027\022=\216v\346;\366\013-<G\262\233\273\r\317\317<\2363\276<\337\010\263<\020\274;\274uO\357\274|\350\375\274\353\034-=\306I\r\275F\")\275\2268;<\3477\305<8:U<\347d\221\274\\\206\347\274\344\331\032<[\367O\275}\365\035\275\rq\003\275M\275}\274y\2403\274\320\322]<\265\234\014=\020\3403\275\210i\364<j\313\325\2745\220*\275\227++\275\210\246\233<\202\371X\274\324\240\232<\024\254\372\271\371\214\324\274\201\'o\273&\017\374\274\335\376\242;L\211\364\274/\265\233\274\253\2149=\246P\316;\303\376\320\2739\n\374\274\024XN\275\022\300X=\035\2557=\2242_=\'\242\230\274\032\357\367\273\346\350#=\263G\376<Vp-=\332( <\362\014\343\273\367\302\036=~6\340<~\341!\275\341P\310\274\227\264\320<*\354.=(S<=\346\n\017\275\336\200\t\275f\231Y\275\037\234\315\274\311\203\225<\2002n\274V\256R=\206\255D\275?]]=\302\000\035\275\353\340\202\274\000 \032\275\263\032G\275\034\223\245<\000\006\n\274(\214+<\205\330\r<\357Ze\274\252h%\273\350\200t<\233\020\212\274H\202$<$[]\272\230q\002\275w\336\240\274[\236U=d.\250;\016\014\001=\360n/=\233\235\001=\023\316\364<5\372\203\274\354ZR=\3571\264<\030\231O=E\367\361;\362^J=\315\271\001=\337\214\016\275\231vH\275\3502Y=\251\2653=q8\325\274\253\325\212<\\\315\355<\351.\357;E\355C=E#\032\275\026\025\343<kE\240\2747\265\312\274q>\004\275\347L:<\272\2149\275\224\274\024<\203\031)\274\337\375F\275:x\037=\314\202\330<|\257\251\274n\251\017\273\364\337\034\275\\\321c\274D\024Y\275\3408\261<#\224\210<\202,e\2744\242\273\274\263Q\206\274\305HH=\025I\355\273MN(\275\352c\264<\352\231A\272xR\022\275\332\270 \274\007\262\377\274\273\244\375\272\261\030\010=A:\000\275\021}\204;A\030\022\275RW\r=\3018w\274_\274&=\215\375\371<\257\026\003=\317\277\365<_W_=g\377&\275\321\256\001=\036\017&\275\341\273\217\274c\212>=y^\235<\365\024)\275\275\244\022=\35179=N\004\022=k\346\030\274\312\300/;\202\301\036=\226\367k\272\337\337\235;\315\017M=\332 \023=\343f\010=\375\r\245;\250?\313\274Q\360$=\263WL\274\317\315U;89\311\273\001\354z<l\021h\274\257\332\205\274\367\350\306\273\210\265\035\274\326\355\'\275\323\332\276;\2315h\274\t\261\022=4\200 \275\212\233\310\274\230%\363\273\324MS=\3577\223\274\347\245\343<\002*\023\275\314<x\274\344\233^\275\240\001&\275\013d\000=),\024\274u\303y<\347(\004\275\345\240\300\272g@:=\020[K=\202\311\264\274\363-\253\274\022\362V=\255J\324<S\341X\275(\235J\275s\222f\274\210\326\007=q\227\373\272\230\206\353\273\007\227\353\274a\'\335<\205\210\022\275\364\022\314<\353\367\206<]\315K\275dj\010=\262\207\025\275\333\271\313\273y\266O\274 \022\014<\314\352\027<\312\261\205<\022\374\351<\366 \252<Tb\005=RQJ\275\021BD\2740\026y\273:e\001=\217\321%\275\243d\014\2756\201\335:\216\013\246\272\224\242\007\274\031\371\001\275\2014\325\274,\007\241<\312\303\036= \346!\273\000\3559=&\231\331<n\030y\274\037,\217;\274=E=\330\024)\274\235\316\025=\212|\t=\177\273\027;\020\016\261\274\016\017+<\231\367\201<\202 K<\224\305\321<Is&\274%\365\330\2748s\"=\256\365\"\275v<_\272+\317\004\275\325\014\242\273\251\324*=9\213Y\275\223\017\032;\266-.\275\354\243=={\024\242<4\312\352<\303.\330\272\014\261e;P\203\"=\313\036A\275\005\007m<t}E=_~ \275v>\331\274\357\227\266\274\204\320\310\274\227z\326\274\027Z\026\2756\n\246<\362p\264;\353\3456=\273\2160=\327\272\027\274D\346\005\275\332\001\205;5\002j\274=lU=\035IF=7\3610=\224\274\364\274\305\023,\275\212\221#\275;\3439=\002^\257\274\033D9;\317\020@=\261m\332\274\034\320@\275G\033C=\322hS=\027<\273\274\002\275O=tQJ=\245\211[\275Oh\316<\361\266\263\274\364FC\275\234\216\017<\3716\307<ym\215\2744\207X\275\267\361\360\274\255K\023=\373\2036=\3539\277\274E\330\227\274\352Lc<(5_=\261\027\022=\3673G\273\374\367F;\224\322?=\317R^<g\374\215<)\300W<\014\316\331\274z\000\035;\\\311G<\343\027#\275\371\341\236;:\275\245\274*\327\026=k\332\226\273\322\206L;\234\332\236< \374\353<\330H\242\274\361v:\275\244g(\274l0U\275`*#\275\311W\216;J%\004=\013\310\344<q\275Z\272\370\343\"=\034,Y\275xQ1\275:d\t\275y\356E\275%\367\202\273\315\342-=\227!\255\2740f\232\274\271:\'<(\370@=\330\207A\275\r\353U=-\235\027\274e>e<ND\234\273\rO\347<\034\357\013\275V\032\215;\301\233\000\275\0252\317\274\377\203)=\2246A\274\300w\314\274A\017\021\275\313\273\245\273\370\243\312;\204|.\275g\0240\275\336\367\335<\021\020\r=\322\337G\275\301\341N\275\330\351\222\273\223(5=6HR\275g{\032\2754z\217\2740\300-\275\207\023\315\274\310l(\275\212\362\272<5G]\275t:\213<\253dX;\257:\001=R\006\020=\237A\347<\227\347\222<a\246F<\271k\331\274\363\245\312\273y!\254\273\rC-<\366r\242;\263\003G<\330\365\217\274\276R\252:\224\033\375<J%!\273\204\330<<\031m\250\274M4\255<\225\273\025\275\365\210\t\275\277\037\307<(\002W=\361\345\"<6\274R\275\357\233W\275\275\203\021=\243M\347\273\177\013\030\275\334h\037=t.0\275\366l\033\275\237\352\306<\035\251S\275\375|\026=\371\273y:\324\000.\274\217\250\213\274\217\252\276\274q>\024=\036\354\260\274\206^\364<\266\307\274\274y{\273\274\320\300\025\275\246E\231\274yB\374\274*p\252\274\003\221\215<\253\0030\275\335\263\376\274\344\240\027\275\251:\374<z\271\231<\303h\355;X\2627\275\303\302B=GN\254<\325\023\331<\270\024\\\275qs\025\274\334\370\037=\035\241<=|\265\260<\234<\006=OK\310<\333\276\232<n1\253\274Ni\257\274\350\344\030=\244qY\275\002\217\226<\235\3446=\211\003\345\272\361f>=\264r\317;SA\301:r\273q\274f\0343\275-\032\242<\247\354U\274H=<=b\232\320<\277\335&\273\371\365\277<\214\356Z=\n-\007\273B%\201<\300\037\312<\243\327\203<\267\346\013\275\006?7\274\004z\026\275\r\242\003\275\355.\313:K\347\301\274\354ZF=\225m8\275%\031\315\273(k.=\201ZU\273i\376\337\273\372C\310\274FfF=\300;)=\377f\037=\301\031V\275)\264\212\273H\305\300\274\216\224\220<\207a\221\274v\273\022\275\341\327\205\274Oe\263\274\327\341\356<\242.\233;\362uM\274\242\225\266<\3622\023=`\'D=nI\003\275\221\264h<\253\246)=\325\363[\275+\367\236\274\350\360d<\243\210\254\274\263\206C=X\200\002<\233\263\363\273\224\n7\274r\227>\275\234T\014=\r\346m<y\277\372\274\013v\030\275\n\371!\275\350\301\337\274\205\336_\274>\030\023=\360\3144<r\260\376<\343\023\007\275\226*\343<\274\315_<\000#\001=\231\212\365\274\026w,=\026\230G\274\340\311J\275\313NH\275sS\245\273\352T\235\274\275\324\272\273\267\374`;\201P\273\274{\356\025=$\235J=\346=h<\377\357Q=l\206(\275\274\217\031;\246\240\217<\004\007_\275\320k\302<\271\274==rR/=f\016\013\275G\313P\275B\246\025\275SM\025<\330n\325:y\267\252;\312yp\273\272\036(\274u.\343\273\343y*\275p\034\236\274\233\005A=\276\0300\275\031\314e\274`\216j\274\324\221\321\274\335\212g;\221\2366=\221&%=\203L\203<cB\244<\033r\023=\344\373\350\274\007\261\265\274\221\320\254<\005`\005=\254\262m\274I\270\230<|\217\023\275\335\322\'=\355\233,\2740\212\021=R\314\341\274\242B\356\274\352\003\235\274\331n\r=+ \210<\001x\227\274\356\374:=\026u\200<\024\')=\333E*\275\205\"\000\275\271\354\343\274\201\213a;\327\002\304<\246\217F=\210>\377\273\277\322I=\361\302\'\275\225\375\010\275\227\0334\275\226_5=*\0328=\216\3678=@\030\236\274\244kU=\211Q%=\003\241\355:\217\207<=\313\227=\275[\332?\275\251\036n;-\222\345\274\232o\017=\006\201\014<[\213;\275\363\266\022=$\221\250\2749|J\274\250\252\324<S\264\276\273\013\265\035:\241/R=X\006\002\274\263\222\366\272\253m-=\364\006!\275\234\223\037\275\317\375K\275\260w-=\305s0\2758uB\274\277\354\344;\030\027\307\274\233 <\275)\232\361;Po\347\274\256(\363<\217>I\274\033]0==\247\025=\276\261\330<\222|\035=@\200-=\345\024V<\304+\026\274\017@W=D\250V\275qJ[=\241\255\203\274\270\013M\274\'\353\227;\343\341\215\274\014a\006=T\373Q=\367Ya\274Y\314n\274\\F\036\275\233\326]=E:\366\274\021(.=\016Y\021\274\264q;<\004\356x;%c:=\222=\020=qE\276<\021<\374\272\277c1=x#\302\274\227\214\355;\222`$\275\321\010\214<Ab\r\275\305\246\036=\314.%=?i\022=+\306\325\274W\314\312<\231\037\010=\373-\022=@\216O=\344QT=c\375X=D|K=\266n\305<\3514!=\323\263\302\274\317\032\270\274\254\215\313\273`\246q\274\307\251\274\272\377\316x\273 )}<}\267\302<Y\262>\274\035\244\346\274Q\'W\274\272\271\001\275\000\3115=\"\206,\274\247y\304\272Ac4==\266\\=\252-1=\274d,=y\314 \275\335\265\020<\374\355L\275n\341\036\275\324\311U=\275\360\'\274\236@-=\032\205\210<\356QC<\3616\363;\242\360\324<4\3230=p\272_=\251\236\244;\331\341/;\224}D\275\326\332\000=j3<=T\025\003\275?\203\021<\300\241\"=g{\014=\211\373U<H\242\366\274R\214(=\273\021\260\274\270\'M\275\026s-\274\326\0106<\224m(=d\241\232\274\335HH<\027\2175\275T\201\360\273\202\352`\273y\270D\275e\006\005<\221d\327<\014E\\=2\220+\275\317N\374\274\273\232o\273\010\372\216<\312\224:=$\020\r=5/\035\273(\312\030\274\250\274\375;\262\217\223<\251\230\224\274\314\200;=\304\0271\275<<\274\274\345\237\214:\315\001\222\274u\260\244<\344\313\037=\026\201\000\275@go\274\017\307\t<\010is<-\254\263\274E\240X=\032\'\256\274Q\330!\275\033\361/=\306h\027=\254?\240\274b\032\3659z\006\277<@S\007\275f\2313\275\335\343A\2751\313\2579\305\302\001\275\250\320`\274\323\340(\275R!\254\274\353^Y\275,In\274M\243_=*x\217;\300\306\257<\320r\245<\246\3019\275\226\201\002=L\221\363\273f\257&=\226?I<\004sC\275\223\217\\=\244\377A=\"\306]=oR\274\274\207~\033<\ni/=\025H\024\274a\t\036\275g\\\r\2750\353?=h!,=h\220g<\321\264\201<\005\002\t=\232\355==P&o\274\317\rO\275n\327]\275\023\340\307:t\0167\275\255g$=\017\031\034=\236F\006=\016\025\r=\316\254O\2751\3421=\271\356>\275\301\315S\275]0-;\326\343\222<\307\214\331;9\207\352<\2113\374\274)3\037\272\364P\337\273\241\320E\275\211\016f<\2679:\275W\330+\275\326\237\007\273\206\036*=\200\242\336\273v\362\034<\023\274\004=\300x\026\275\372\023!=\221\301\317\274\302Zb<\010t\236<\263\3605\275(\314\236<\325?A<\347[\257<\304iA\273\303\026\372\274\367w\304\273\255\306\020=\306\270\277<h\317\013\275(\2160<\235\335\247\274\211m\022\275u>F\274\'\376\243\273\326\312+\275\355\247R\275A\267Q\275\275\332\231\273\rL\325\274H6\010\275D\376]=\3625\300<qI_\275/\215\244\273\315\317\002\275v\230-\275\"\031R\275|p\330\274bM\234\274\234\311L\275Z\036\035=\260\002\035\273\017\270\231\273`?U<o<!=\317t\341<\356\006\314\274p@\003<miI\275\001\2434=\325kn<\324\036\t;\036\364\226\274X+T=\322,G=\346@\301<[\333\317<\016\030-=y\367\264<\n*>\275G\334\254\274q\023\230<H\200\001\275\304\356\313;\274\362J\274\004N\033;X\0160=#\341 =\361\357\360<P\271\233\274\217o7\275bW@=\246\305>\275\200\031P\275\300\311\034=H\260\207\273K\341j<HP\236<+G9=\217[\202<\3333~\274\376\0311=H*\313\274:\2651\275[\311_\275R\232\227<09\225<Q\247S=\003\330W;%\377\025\274\200\014.=\033b\016\275J\003\365<!\323\255\274\014\266\265\274\311\265\251\274:\\\036=\254\344#\275N\304\200<\264B\n\2754\\\\\275\350\340\346\273\003\222\t=\375\003\013<\237\200\357\272I\253\311<\247\003\257\274^\371 <x\231I<pH =N\252\032\275_Q\330\274\375\353!<\201\231\205<\212\332\005=\315\203\224<p7\357<\020Z\203\274\2569\275\274V\n\t=\260z\177\274\211,a\273:\235\033<\"l1=g\334\333:\"\355\027\274\360\2415<\263\245\232<6n$\275\315W\241<\312\310+=\255\330/=\262\325O=\317\201T\275b\341\272<\274z2=\362\036\371<&\347S\274\316\205\034\275\024\376\016\275\317\255\233<\";\227\274L\234@=\206\207\304<\311\001M\275\032\013\265<m=\237<\306h\242\274\376{\251<\353\200\226<\243\321\027<&6\342\274\324g\251<\375\211\342\272\345\235\034=DF\"\275\330\200C\275\254*\354\273mC\357<80\353\274~6\006<\317\334\010=\273\337&\275\356\231\271\274\256\027(=\204\276Q;\351\276\200\274\001\216\317\274\027\335S\274\336\343U\274\262m\257\272\003\347;\275\013\033;=\223@\327\274\365\026\276<\377\352\255\272\324\364R<\270\300K=\371ph\274\242\237F<\350W\331;x\364!<t\317\"<\2567\313\274I\305\r<\375\304\210<\272\267L=S\336?<\333\274W=\251\257\t\275\357w\323\274\205@\007\275\216\237D=\200\350K=\231\366_\274\336WP\275\203\345\265<\266(\034\275P\326*<\233k\372<\334\231\234<\334#i\274\211\004I=\3453Y\275owN\275\331\325\324:\231\304\021=Z\277\207\274D\335,<\311\342\341\2747\203\263<\312\366\220\274\367/\007\275\234\336[=X\275w\274\327\177\033; \023\210<&C\'\275\325\303\274\273\326:W\274\\M\365<\266&,=V2_\275\312At\274RH8=rAs<&\233\364\274\272\025I=\234\325\255<\207\232\341\273;\351\010=q\200\\=2\351\331<u\247\257<&\244]\275\272\241\314<\241!A=\311:\272;.2\216:\324\337U\275\206;\313\273\036\356\356<h\016\237\273^\3578<\233\035\314<\031l\245<\254\032\n\275\337\202\\=}\362\265\274=H\373<vh\224<6?\264<\037\201\005=\204hW\275\014{\235\274\002\036E<\362\314]=\341\001>=5\016Q\275^\203\256;\207\300\n\275\260\302\377\273\006n_\275\203\212J=\2546\240\273(Q)\275\361R\213\274\177\216\253\270\207\335\205;?w\303<F\211\345:nOG\275\311\244C=\302\357\351\274L/(=\361G\002=\367\256\364\274\257\374\017\275)C\314<\330\027b<\302\306c<\260YV=e\240==\212b\021\275\021\t\276\274\224\204\007=\017y!\275\\mK=r\224-<\241/@=F\213P<\304w\346<\355jS=\372\306H\275\311Cn;\342MM\275\016\227\227<m\352[\275\231\005B\275\307\245\207\273\267\014s\274\212d#\274~\232E\275\001g\013\275s\204\026\275\234\315\222<A\3733=A\246\240;\326\262U=\253B\342\274\017n\322\274\225\366\024=\307G+=?e\363<\032\205\335<\005dG\274\371-\003\275\224\233\255<\342\303)\275\277\325\023=\304\302\033\275\305\233\344\274_c\010<\216z\374<\257\021.\275L 7\275%\246\303<\'\305\346\274\317r\230<\275\251+\274\372\246\353\274kf\252;\232G%<&,#=\320\235\370<CEv\274)-_\275\351\307\t<\325]`;\354\231 \275:\316)\275\375\002;\275\343\323\261\274KQ\216<\357A\004\273\201\334\000=k\371#\275\376\230=\275\252\227\301\274\234=\037\275)\034U=0\3059=\236\244;=`\243\004\273J)T<\331{i;\006\310\250<t\275\014\275\030\030S\275\350i)\275\255E\\\275\203\264\024\275_\022\031=\240\331\030\275:\200R={\220z<\000\3026\274\034\005m\274\373=h\274-\035\n\274\252\350q<\326\221\206<\330\231\n\275\315:\267\274X\222\n\275B\204E:\200)S\275_\010B\275\221\272K=\206g}<v\326\371<\277\226\254;E\374\323\274#>P\275\365&[=\223\025\376\274?\226B=:\375\375\274-K\303\274\225\2712=\365\311\013\272k\212\355\273\300\374B\275L\356\024\275\340\336\033=m\204\377;\010\374l\273\316\017\314\274p_\204<\375\345\215\274V\020\013=\007\004L:N&\325\274V\306\013\274\037\r\022<\215\211%\274\373UF=\177\373\224<\345\351#=\016k\\\275q4\031\275\373\301\260\273\344\346\201\274\333:\364\2736>1<\320\226Z=\270\246\267<mq\021=PM\275<\030\351\202\274?rQ=\030\344\275\273\r\023F\275kDJ=\367\320L\275\210~\373<Z@3\274\224w\341<\253\272O\275\323\327A\275J\356\224\274\307GG\275if^\275\017\230\326\274_k\235\274\334\367\273\274lO\346;f\000\366<\206\362\n\275!!/\275\356$>\275W&P\275\346\351\007=.\036\311\273\301\034?\275\364\235==\034\346#=\207\260?=!\260@\274\020\313\315\274\371\250\316<^\024C=c\033\236<\255\375X\275fy\376:\214\236p<c\275S=\336L\003\275\340\354\275\274{\371\024\275\212\307^=\334\033J=\200}Q\275\347D\031\275d\253\r\275\316\003\024=)\2424\273\001\267O<\310\226\004\275\222V\320\274\274\002I\273\3558Z=(5\036\275r\257(=\351\320\357<\002\003\275<\322\0275=\354\220\232<\234\354\273\272\367\347^\275\004f\315\274\235Q=\275=y\303\273\222\316$\275\277\004\236<\362\310\013=\270\010.\275\376R;\273\252W\'= \3146\275\276\235)\275\231\350>=\203\025*\270{\2030<\245\312\253<\240\007\250<s\003\207\272\256\222p\274N\'F\275\376\n7\275;~\030=n\246G\275\226\360\320\274!2 \275\356\210\031=\035\364.\275\255\037\021\275\304\322\254<H\032\366<\306\272\364;\254\026\235\273,\224B\275\006a\324\272\362\004\261<\363\377\370<\007r\n=q_[\275\030\251\313<\224\241\213\274\220\002\244;<\3376\275\013\336\316\274`\235\003\275F\315\307\274\226\260f:}\314\220\274R\244\030\272x$>=a\261\205<\010=\000=\232\327\264\274\254\376\247;Q\370\247\274\010\354r;t\"\347<y\214d\274`\026\277\274\200\033\222<%\214\351;O_\200;\355]#\275\'\312_\275_0\300<hl\256<\033\3406=\254K\017=\276\0040=A\337\364;\360F\226\274q\2448<\342\002\321<a\342`<\032\374Y=\370\356(=\231(%=\275\3523\2758\200(\275\300\346%\275D\344\202<\255\242\027=G\247\336<\2655\343\274\230\302\211<G\016\350\274\376\330F;1\321\242<\261hs<]\n\223:tW\\:@\022\250;F:=<\357WE\275\036 \306<\376\210\035=\223\300\243\274\267\017f\272d\226\231\273\344\0232\275\223T\276\274>\315F=\270r;=KQ8\275\264\317\267\274s\270\017\274-\005\364<\304\0142<\272h\223<m\330B=\217B\274<\326\345%<$\307E\275\200\303\201\273\320l\317<o*\260\274\036\203U=\325\201\314<\373\205\316;B\223H\275rV\216<\233B\345<\217i\215<\341\3576=0\317\337<\335\374v<\222\250\272:\247\374\361\272\"\335\\=;(\271<\345\216:=\365^D\275s\253=\274\363\266N<\305I2\275B\'\271\273W\036\237;\np\266<\300\301/\275\256\311Z\275\355\365)\274\335e\242\274<\r4\275\241\241\014\275H\037\013=/\227Y=\212\273X=l\014k<\330\016*<\202\tP=\217\271\250\273\r\371\204\271\325?\002;\007\353\374\266\356B\312\274\335\270\314<\232E\013<c\035\337\274\305I\030\275,1M\275\337C\235<s\023A\2740\317\324<\236\206_\275(JW\275c\217\030\275?\3433=\313q\t\275\242\223P\274\253\202\350\273\334\364\t=\013 \255\274\214$\225<\2066R\275H\303\006\275\313\020\220<\310Bm;\242\226\277\274\337\262\230</\0338\275\340D\335\274c{\025\274\327\361\030\275b/\003=|\263H\274p\007!\275|\232S=\327\005\370<\023q\"<\001\177\002=p\n\254;q\274\024=4\022!=\035$\000\275\366\306R=\207W\010\273\010X\306<S5\017\2752\363\220\274\245\335B=\257\240-=\001\324E<X\3770=\360\226\232;\366@\351\274\034d\000\275\205{\001\274\300%\325\274\333\336\311\274I\3416=\322\377\024\275\010\352\264\273b\264\263<\001^!=\264\244\263\274\"\030\n<\264\335\013\275\334\033\023=\033\003\r=\230\336G\275\312\210\360<\336\220:\275\316\326\233\273\263\032\312<\030-B=\276\031J\275\013\224\373<\271G\266<\351\270\316;\016\371J\275y\\\255\273\252\030\234;v\nF=q\311\342\274\2427*=\303e$=a\200.=\016\216Y\272\223\301\004=\234*\026\275P\267\365\274\204M<\275\350\322\361:\316\010<<\002\262/\275\201W\'<\226\3450<u\033M<\016\273X\2757\377\353\274\333\362-\275,\027.=\235\276\352\273\201\353\026=k\024\242<\206\032\246<\327\357\323<\375\317\005<\277\224\020=\353\2427\275\342X\370<:\353\371<bO\274\274>\006N=\243\361U\275\222\216\341<$\261\364\274\030\214\037\274O\003C\273\252\323[=\341\362)=\217\362\033\274\026\033N=x.-\274_B\330\274\002 \257\274^U\216\274\253\010\242\2740\212\016=\313\\\260\274 \317\010\275|B\'\275PE\374\274D\352{\274c\261\344\272\370:\367;R83\275\260\335\272\274\003\026\256\273M\t9\275x\306S\275VJS\275i\261\n<\353\3716=^\267\205\273`\204\246\274Ze\247\274<DK=\213\004\336<,,S=i\243\262;\326\004\211<`\340\'\275G\031\350\274\357\260\020\274:\365\232<\334\210\202<\225\3623:\230MK\274\035g\312\274{JK\275\0212\256<\340\374\006\275\036\020\201\274\315\257~:\277?\313;D\356-\275|\214Z=\322\022F=\342 5\275\317F.\275\363\201\004<\\\340\231\274\2239R=J\340D\275\353j\263\274\336f>\273[\243S=_\0170\275\344j\310\272\020\361 =\026d^=\351\363T=>8\206\274\257\245\007=\206\'#\275\3736-=\317\345\251:H\267\337<0y\377<]\327\004<\216d\301\274\014\244\033\275\255,[=\352\370\000\275\020\n:\274\265\333\021=\351\032W<B\003X\275I\246$\275 Im\274\344\021\017\275\240Y\022=+\372N\275\231\r\000:\310\347]=\023\000\002=\337ve<\377^\246<\374\233>\275\231\004\032=M\273T\274sI\265<\221\t\235<\315\014Y<{\023\027\275iz\223;\343+\017\275!\302\"=$\024\366<\272n\003=,\206?=6_<=)l\266\274-\266\353\274\367X\210<\001\265r<\306\346\014\275\315\266\031=X\277\356;\300*=\275\322\347\246\271\r\354\035\274\251\004K=/\3136\274\235yI\274GXW=\214\215\263\274>\333\261;\200=\020\274\316\377\330\272l\322N=M\3015=m\316E=Qnm\274\r8\023=\032\264=\273\327\002\243\274\343\3527<,\367\034;+\366\220\274~8_\275Q\006V<\033\276Y\275\277\254\302\274\341z\371\274F~\370\274@\340\"=\353\324\034\272\213\020H\275\216G\255<\365\2017=\375\255\374\274\353\367\233<\177\320#=+\0332\275\303,\237<\263#\242\274A{\035\275\2653B\275\305\256F\275\017\000\000\275\225\320_\275\243\007\302<WAL=\017-\373<\037\324\037=\321\300A=\035\002\036\275\205\301\307\274@\213\302<\271\375\033=\225:G\275\232\335\027;\016b\027=\277)X=\360\004\020<u\203I\275?E_=\202^\026=\212\311X=~d4\275\235\275\"=;\255\"=8\355T\275\213W\017\275cu\005=s\256\255\274\341\342\026\273!\3723\275\346\205\262<\357\326w\274F\364\300<\250f\000\275\032\203\320\274y\355\356;\231\031\243<\254\312\335\273\335\310\014\274\324\311$=\322\032\277<\247\007\377\267MH&=:zR=\0160\243\274*5\002\275`0*=\327\271><\000`\177\274\334\252.\275H\241\204\274\034C\214<\253p\215<\257\270j\274U\365\214\274+\257\023\275\240\207\255<\272\245\260<i\253\261\272\316\354\263<>n\272<H\375\370<\244\341\'=\221\260\277<\267\305F\275\204#\016=\201@@<\265o\302\274ly(\275\345\212W\275i\360W\275\332\321\010=\020\233\336<\013\002\303\274\204\353\244\274j\315\005=\204\013Y=\226\021\013\273\352\031X=\331&\036\275!\235\316:\340\265\231\274\326I\013=h\333\020\275q\261\212<\375\014\345;\'\261\031\275\315\265\206<\331\265\262<\350\010\005=\220\351\372<wFV\275\320{%\274\356W/\275q(\016<\264Y\036=\303\353Y\273$\007\251<\303\327#=2\306\000=zv\231\274\276`==\240\021\021=\210\225T\275)\362\327<\351\323\311<\226\353\272;\255\321\322\274\027\030\262\274\203\250$=\214\2020\275\3731?\275C\335(=\375}\021<\311\336\272\274u:\307;\223\210X=\016W\216\274W\302\343<\\\200m\274\\\021.:\270!\'\275A\233\362<\364E\242<\020\001\243<\260aW\275\3506\t=\007\376\314<$\231\326<\004C0=\037B?<J.J\275\270\235\002=-\273Y=`\304\263<O=5\275\306\274G\275\375\276\332<:K\325<\037\272X\2744P\357<\362I\022\275\217\217\013<\327`:\274d\3514=\313\254\361<N\245S<\231\327Y\275\3240w\274q\273%=$-G=\374o\210<\331$\311\273\220\033H\275\272\376n\274\335f\371\274\207\214\030\275a&S=\370\r\312;\0342\305\274\232sF=\353h\217\274d\211\274<\360\t\354<\375\217\256<\037\244\031\275\256\006b\273=\3765\275\301\027\013<\367\203\376\274\217\363\'\2755\2077=m\363^=\341\326\225<\331)R=j\222\025<\351\312*=4\3035=<\251\351<o\313H=\035\237\307<\025^n<G\260\207\2742w\344;\004\233\231\272\254\234\301<\366W\234\273\002l\031\275\226b3=\026U#=\355O#=\221\343\243\274~$\026<\360\027_\275\001I\004=\307\023\241\274`\324>=8\267\242;\215m1<e\237\304\274^\247T=P\200\350\273\234C_=\177\317%\275\260i\336<\273\373\"=\324\212\336\271\371&\023<\357\251\266\274\220\317A=jmP\275\325\326F\275\316Jj\274i0V=\"1\014=\243\244\006=X\007\272\274\366\301A=\375\374G=6\230R=C\033\276<\320G)<=\242E\275x\213)\275\316\242\006\275\325\2236\275\361\321\000;D\343\213:\327\345\336<P\252\355\274\362\'Q=\235\313\037\274\246s\355\274\217\317\202<o<\010\275\305~F;\211\323:\274\205\304\365<m\231\252\274\313\2606<1H\376:\353\245B\274b\267\225\274\331\032\337\274\273\235\240\274y\032\330\274e\342\003\275H#B=\327\332\023=\263\311\257\274,K\321\274U\233 <\371\274\255<\206\303\037=\303\341K\275\265\271\321<L\025Q\275\327\022\343<\260s\001<&E\036\275h^\310\274\355\235\243;u\217\257\274\357\301\260:\272\010\224\274\365\244\305\274\344\223\016\275\220\310\245\274\202\010-=\357\346\254<\225=:=~\002\025\275{1\273<K>T\274\255\'\021=]\263[=?\357D\272(\214V<\021\372\021\275\372\247]\274g\212\224\274\250i\t\275\024&\337<\257\306\254\2749q]<!\341\377\274N\234A\275\014\220 \275\271\347\303\270\241,&=X\003Q\275\212D\202<Q|G\275Y\226\320\274\203\005O\275\234$\006\275\342\241\326\274?\300\t\275\267\271H\275\334\336\372\274\315\277^\274 J\000=}\340\000:\201T\323\273\374xe\274\272\370\023\273\343\347F=\371\337C;\207\022\000<9 l<\263o\366<a\250\336<`\273\207\274V\034)=i\364`<3\303\021\275q\304#\275\023ET=\277\251\335\274\272XN\275S@\366\274H9\024\275\333M@\275.0 ;\276\000\277\273N\345:=;\000\377<y\214I\275K>R\275\332\261\331:\277\321\372\273$\220\021\275\325a\350\273\272Q\023\275BtC<\216\007\250;\007\331\342<=\251\"=p\312Z\275\354\362#<\324\036i<\263l-=Vf\035=\375\237\026\273\274\203\n=*\260H\275\216m\t=;y\023=\352\241/\2754\301^<\305\300\362<2=L<OI\214\274\224&\366<\355>\001<\2768z\274\013\320\261\274\272r\006\275\271\246\363\274td\207<\016\354\300\274:PM\275P\306\025=\024\"\321\274\327\r-\275\363\033\251<[\314\034<\n\261\036=D\224\273<\\\210\347\274PZ\275<\335\227R=e\353\004=\272\354G=8\206\227\274\272\342V\275\2407\217<\356K\210\273I+\n\275\235-Z\275\031\3061\275\227\001\354\274`\346 \275\024iH=\350\352\033=\354o,<7\305<<\270\316&=\035\214\033=\177s\311\273\212\272\370<}L\r\275\301\330J\275\206\242\010=\037$\254:\342E^=q\302)=\262-&\275\351_1=\320P\026<\263\013\206\274\244B\301\273u\355,=\330\234T=\351y4\275\215&&\271\023\370\013\273\304\322\022=\200@?=\355W\311<!\272<=\237\223\013<M\361\256<\315o\234<\337\367\034=\261\354X\274\307\325M\275\033q&<p\273\200;/\371O\275\321\245\237<\353\312)=\237\2266\275\236\033\007=\010\2117=\231mR=\305l\022\275H\203<=\320\'P=\225\307\n<1,F\275\224M\307\273\211,\350<\326u{\273\370\210\372;\365~:=b\325\202<\346\253\373<^\203\032\275\034\316S=\2725n\273\257\213\346\271\230\033A\275\344\331Q;\277\034\372<\334\225\2039\335\307\265\274\365\3446\275n\227\342<r-[\275\226\346(=\216\333\033=H\342u<1O\234\273\315Y\325\274#\025\344\274\033Q\005\274\277\363\233<\275\254\017\275B)H\275p?\013=\030I\311<\247l~\274\223\364\375:0B<\275\267\331@=\373dN\275_\032\033\274;K^\275k\214\035=\014\014\362<\355>\260\274\006\346<\275\362\227D\274\327\262V<W\257\r\275\244\317\353\274\216\252V\275\377\222\321<\351\331w<~t\211<\362U0\275\317\014!\274\204@\255\273!\252\007=tH\\=\325\345_\275\267\247\026=q\264\245\274\233\361\335<|q\243<\367 \375;i\333U\272\251]\035\275\314\352\035\275\201l-\275\241E\017<p\222{<2\371\243;QTA\2739U\225\274\022G\203<\220uO=v\311,<\2270\003=\257\370\020\275KG\030=_\r\023\275+D\377\274\320\310g\274\203H\304\274\2377\235\274(\251\240<Z[:\274~\217\363\273f\243\374<\251 \246<-R\314\274yB1=\322\222\221\274t]%\275Q\212d\274\353j\257;\303w\346\274\317\314\210;\226\246/\275\013rT=d\273\035;|\014^\275\226\217\363\274\254\202\312<\374\347B<@b`\273\006\037\260<\232n\370<?\177&\275\347\370\213\2743\275E<e\315\214<\031\233\350<\037n\246<\275\370\334<\007^\360<\343DE\275x\263\331\272\265\0016\275\306\221\035\272\275\031\302<o>/\275;\023\235\274\021\372*\275\203\334Q\275K\267\202\274\216Z,<\341\317\231\274e4\r:\303\202[\274\022z\375<\252\327\213\273\315\341\261<L\304\252\274\006\207\000\275v\351(=\325a\314<M\244.=\257\036 \275t\262U==s\223\274\016T<\275\223\270\034\275\220O\237\274\310\257\230;\264\355\310\274u\343\231\274b/\326\273Gw5\275\nM\376\272\t\273><\314\033[;\335\324\271\274hj\216\274\307\351\033=\225V\200<\214\3347<\352\250\204:\357\010\226<\302\264W=\215t@<\357\244A=\374\352E\275O\240\222\274BV\272\274\336\007\023=/\356X<\267N_=\264\036\000<\320pr;\312\302\203<_`\007<\336Q\327;\220\366L=\377PV=\031\375R=\372SF=\327\\_=\013\347\202\274\231&\207\274\024\3600\275\'\335\330\274A\326\271\274\210\275i:\007\305M=X\256O\275\340\301\234<\265OT=\026\033\034\275\206\342D\275\304\274\202<\255=]=\\\302\372\270\320\024\233<p\302m\273\037\254+=\210\332_=\177\261A=\275\257\337<\2028]\275~\022[=~\314\327;\232\211\255\273\204\305\037=\024t\r=,\303\373<Q\001@=l\035\266\274\330@\335\274\361I\016=\"\303\002=\022\276P\274\351\241*\275R\204\274\274U^_\274=e.\2754~\334\274t\250\033\275\0227\004= \304Q=\242x\304\273\207\271\\;\037lQ=!\375}\272r\252\357\274\221\226\237;\013\230\n<4\337\302<\232\031\032\275\227\'S\275\334l\021\274\177(\025\275\335\r\246<e\324\220<\321Qb\274\231\027\235;\025\267*=HA+\275\235a>=\261U\006=5\336\274<\034\035\322\274\312\201\242</\016\326\274V}\277\274m\006\024=\032\006$<\005\303\000=n\177\264<\317\304\360<\\\326(=\017vH=\2335\254<~98<f\374\027:\353\363.\275\n\355\317<o\306\276\274\213u8=\245\016r\274\356\202Y=:\205t\274\310n\003\2750/\031\274<\352O\274v(T\272,{\335<U\212!\275\345\320^\275y\023N\275\202\320\365\274\036C\342;}{\001=\234XX=\246\321.<f\303\350\274\016b\316:\201\303\344<\000 =\274\200\274\371;\206\253\246<(1S=\2634H\275Ee\320\274\t\223@=\234\311\013\275\231+\270:{*\022\274\303\321\305\274\340\224\017\273k7@\274\264\364\363<\241Q>\275\212\2641=\273\345B\275Qw\030=k\317W\275#\035\210\273\227\255\013=;\272+=G\034A\274\353\215\304\273\223\354d<\367(Z=\370)\345<13A\275\375w\000=C\252\260\274?T\242\274o\233R\274\306\243\010<\255$\205<\001\264\235\274\302L\266\274\235\324\266\274\252\330D\275^\230\342<#\210\342<\345\360\020\275\306\313/=Z\010\353<\025\263P\2755\2479=i\277\016\275S\005(\275\235\305#\275<\323\343\273\373u\026\275\256\313\350<\014\035m\274\274f\\\275\223\277\232\270\276\346\316\274/\263A\2758T\327<\223\033W\275|l\026=\256\245\342\274\013)\001=\364\231\225\272\314Q\033=\351\210\212\274\314\0368\275\274\317\347<\2422\'\275\023Y\233<\2134\016\273\037\237\253<V\247#\275\017\340\270<@\375\307\274\356eS\274\003\343\314\274\3734\024\274\201ZD;\201j8\274\263\364@\275\253\037\210\274c^==\315\2034\275h\0378=.\000&\275\312\034:;\315 +\275*N\035\275\374\371.\275\210\367[\273\330I\201;h\223U=\r\213\334< a&\275\342\370\036=OC\235\273,\276\250;\205Y\342\274\273\261G=\356[A=\3504\261<7\342(\274EvS=\327\\B\274\341\3739\275\230JV\275DD6=\254\000\275<r\234\217\274T\315\025<\237\276_;\3264\t\275\373\275J=\373\361\002<_\035\213\274X\263\021\274\375\t\226\274\361\344!=\213\032\034\275\222\363\024<\014\3102\275\363\213K<\267\227B=\003\336\305<=\311/\275\347\236\\\275Fy\211\273\230\333/=g\'\206\274\224M\254<\036\036\027\275!\t\t\275\270\004\030;\\L\315<\346G\255<3k\242<\203\354\000\275\243\312\032=\t\2638\273\235J1=Qa\261\273Nn\311<\241\303@\275F\370\016\275f 1\275A\365];LFE=\234@\355<_\021\025=u\327\351<\211\007\335;\030&\245<\361d\334<\252\210\377\272\353\300\022;\262\255R\2751>S\275\247\356\034\274\317x0=]\263F<w\243\215\274\223\337\016\275\361j\370\274\304Y\365<\212\252>\275M*$=\r3\355\274\344\356\224<2\310\\=91A=q<$=\332\337\007=\377X[=R)\344\273\370\301\036\274r\227B\274\036\323\357\274`?B\275\315\224\371\274\244\332<\275K\016\332<%\303\020\275A? \274\304\343\004;\006\230\034;\032vu<6-\034\275\320\210T\275:\206P\275\217\3015\275\313m\234\274\246\204Z\274&7\365<h\242\n\275\034\316\251<\343C\322\274\026uM\275\335\371\360\273F<\270\274,\327\026=E\367\362\273}\321\347<0\347\311;y.\001=;\246[=\'\353!\275@\230U\275\371\352\\\275\302\007\327<,\255\n\275/\374\014\275!D\010=\302\204\020\275B\203^\275 i!\275!\272\203<c\320}:i,U\275\375cC=.\2771=\3260\351\274SuC\275T&\303\273\300\274V\275\017-V8\373\313\334:\267\243\305\273D6-=\366\\\240;\037\031N\275 @?\275\237e\306<\343\032\303<\205\362\016\275;~7\275h\331\230\274\344:\032=W\0329=9\237\272<\375\374\030=\217\224G=B\217\r<^\025\252;\246\253\242\273\351\2522=\312\222\327<\341\314\320\274\355\353\365<\273\362\335\274Y\204C==\324G\274\224\035\335<\003\257\030\275J^M\275\223\324S=\227\3317\275\305\361^=\003\013k\274\370\213\345\274%\210\306\273\203\330\317<aQ\n\275\013\201\214;\343\261\303<\366]H\275\343\263Y\275\t\0356=\013\256\033\2756]\252\273\366\2405=\363\206.\275\355m\233\273z\301(\275\351O/=\344\301X<\302\333\345\267\022\376\207<\2134\037=\020\270\233\273\342\332\333<\242\2568=M\246\224<\005)\247\274\037\000\016=\265\226\006\275\307\274\227\274|\266\234<\261\250\344\274Ns#\274,\343\013<\363\327I=\203\366*=\303<\331\274e\257/=\001\211\204;\217\253\367<\026?\017\275\026\320 =\204D\370\274\031aQ\274C\375!=C\314N\274p3p<T7s\274\314\005P\273\253C:\275;\254\320<\370<Y\275`\276\034<\321\250S\274\315\371\024\274\200\247@\275l\024+\275\026m\316\2730k\352<\353\377\002\2758[\240\274{\243\t\275\005aC\275\253\275\320;\231\350/=\222\265\331\274}\265\373\273\036)\025<)W\235;\005\3627=\264\'\243<;\331\274\274\244\353\215\274\027TB\275\333f\007=}\210\240\274\254\215\315;-a\337\274\313C\320<w]\2679\037a\367;Q*?\275L\000/\275y\340\364\273\305@\200\274\212\344@;\000Z\346\273#\307@\275Z<\325\274\373\037\304<\261\025\2668M\243\016=\263\326\206<\304\rb<)\367\335\274\004\355Z=\264\232\027=\250\326X\274\256`\014\2745\233\335\274\244\270=\275e\241\022\275\361m\010;v %\275\013\336:=B$\334;\356F\006=\343y\346<yad<q\333\031\275\221L\013=\325\247=\275\331\217\021<\010\214\"\274\367\233\205\274-\021\241\274Uv\246\273\304\006\034\275\032\341\014\274\025\215\266<!\245T\275\302\226\031=x\013\262<\364\301J<\032\245,\273{*\216<t\302\005=hB\\=1\212\337\274\272\317\"=\360\217\020=\324\332:=\323US\275\334}\215;\314\356\301\274J\2244\275 \2460\275\265PW=\374\220\023\275n\r\020=\'\207\374;\305\267\034=\257\020%\275bi\321<\352>\007\275\333\244\305\273\211w\246\274j\215\265\274>\355:\275\212N\361\274\244J\367\272\320\236\001\275\211s\212\274S<3\275\330N\'=\030\376|<H\231\\=9@L=\2518\257<H<\237;|e\034\274\213L^\275r8\276\274\"R\030\275\321\261\277\273\026D_\275[\365\247\274\013J\001;@\370R\275L\371\343\2733\222\177\274\317\362\'=\307FN=]\342\265<\301\342\006\274\255L^\274\240\013\013;\234!\013=\231\227W=y\320\034=\350gA<\374\311&=\315yQ;\321\347\253<\220i\347;\2063\000\275\263\205P\2755]Z=r04\275\227>\016\273B\332\r\275yi\033=\347\2061\275p\032\013=\326\034G\275\247\\\033=\267\353\026=\2774\023\275\214\034\312\274/\2253=\334\030l<\345\003\217<\007\333\"\274\007qW\275\343./\271\370\255\031\275\254\277\003\275=\200\265\274N\211F\2758\366\230<78\240;\232\201\327\273_\n\312\274,D\272\274\237\234<\275\330\204j\274z4\325\274\337\374\333\274?f,\275\200VX=\272\371w\274\366\356.=0\371\315<8\024V<\0137Z=\256a\204\274\312\314\\\274\005\350D=.\227\230\274Bl\036\275\032~\006=W\231\212<\023\356\373\274|<M=\331t\354\274\366<\313\274\033<\355\274\354\034\003\274\243(\344;y\266)=\330N\365\274}\304\027\275,G)=\350\350\325\274M\253\263<\003\356S\275j\023\322<\014<_<\260WF\275\304\237M=\031%7=[H7=v\035\360<\202\226Y\275K\353o\274\027\320\341\274N\261)=j\3121\275\273\021D\275\360y\005\275\337\370\322\2732R\r=\355#L\275\242\205o\274\222\206\311;\243!\364:\313\365\344\273\312h6\275_\224\004=k\337\241<\266\351\\=\226\211\020\275\252\365X\274\326\347D\275\361\365D\274\366M8\275|\314\233\274\t\342\"\274\005d\017=)\356\315:F`\321\273\345\324\376\273-\267\005=.\324\270\274O:4=\256\252\210<*\021\007\275\256\344m<\327yR<a\363\340<D\224J<\253\007\204\273\362G\320;\227\252O<\200\212\014<3\275\261\274\020@[\275o\276/=\274\235T<q\224\210<4\343\312<@5\317\274\371\023Z\275\331\0262\275h\332\277<\006\234\301\274f\010%<\255\245:\274\314|\025\275n\341k\273\231\024\253\274\032\324$\275\330\243&\275+O\r\275A\241[\275\177\365\t\275Z\304\313;]\013#\275\217\366\304\274\242\2161=\244k\273<a\301/=\031\254X<NJ\027=\217C\226\274\035\366\256\273\"\320\200\274&\006N\275\325\352#=\205\375\324\274\334\'*\275\231\255v<e\256\262<#\362\033=\273 1\275U`7\274\305}K=\335\350\"\275O\316\347\274\213)\300<`\252%\275]v\222;\203i\231<\025B1\275q\363\221<\3140t<f1\037\275\330^o:\235I\262<e\304p\274)\3603\275\225\237\233<\244aS\274\213\034\255<\031\274&=h\302Q\275-^\277<\333\331\374\274\265\232\374;\350\220\005=\240k,=|\213\003\275\306,\022=\356DT\274s-9=\365\n\266<\217,L\275\357\243}\273F\211\035=\355\354\370<pyD=\340&\243<_\362\301;\326\237\274<&7\301\274w)=\275dPV\275\3641\027\274g\243\242\272^\r\222<R\001A={\372G=9z\177<\331\376\202<\273VQ=\344\276 \275\006\222\212\273\007\300G;8\377\037\275 \321F\275\034\002\036\275\317_W<\341\225\227\274Z;\200;\307\t\377<T\267\022\275P\2527<2Z\317;ZU\206;p\032\357\274\272CU\273\\\262\212;\245\347\033=\245\3124=?M\250\274\023\372\350<\235\352K\275M\255\221;\244~\037=sET=\013\032\312\273}H\277\274\002\032\003=\027Q\332\273\014\363\365\274@\202\240\274\315c\350<1*I=\036P\376\274\331\037\226<\271\370*\274\233\360m\274\257\257\014=k\245;<2\376\203\274UOi\274\036\231\001\275\276u\352;\366IP\275\326j\007=\034\336=\275\317rC=\334y\307\274pnZ=\014nW=,15\274+\242\327<]\337\022=\310\362\026=\211\317\316<\353\322D<\370[E\275\222>&<7{:<G\371\030=\023\266\263<i&\026\2755\334.=X\226\'\274\377\254H=\256\025\201\271\353\3353<\262\314\261\274\031\271*\275\320!:<\322\337\006=R\256/:\206\210\016\2732\236\335\273\005\352y9\205\033h<\305\231\312\2740D<\2752\205?=0\032\367<\240\240L\275\2758C\274Mb\310;\247\222N=8\3426=-\270\231<\237\315\304<fW4=b\000N=6~#=\201\246y\274\313\025{\273X\355\277;{yQ=\214\356\335\274\000\235\032\275\247\254X=\211\360\372<\201\325\241\270\2122C=\023\032\245\274^\204<;\275^\254<\331\244N\275\013\331V<O\245\241<\177\264\212;Z\257\253<G\035\022=\365\250X\275\321\205\366<\274U\255<!CF<\344\352\351\274\300\2714\275\320\221=<\013\336\300\274Y\253\262<\313{N\275\004\322\025=\021\363\202<\315l9\2751\357Z\275\240\337\006\274\032\304H=q\372\034\275\204\353\'=\264\300\250\273\023+\275<\273\253\004<kW\n\274f\026)\275\227\324\352;V\023\'<\034\236 \275 \356\014<\205`N=\337\025\023\274a\027\n=\232\032=\275Z8\002\275rfA\275#\326\247\274\013\354$=\253\222\354;\207_\022\272\362wM=u\225`<\217\314\247<\271\371\233\274\221\205Q=\326M\312\274\016\341{\273f\345\350;)g\"=\036\342v:\267\227D\275\230F\001=\335\023\000\275&\221==\350X*=cS\316\274zxY=\360`\315<\255\341\323\273\246Q\017<\331\361T\275V\371#\275\360\366\315;a0S\275\267\3079=8\213|\274\344{\213\273\n\246.=\272\022n\273\004\222\351\274<\324\332\274\320\005\312\274\321\371\241\274\226h\021==\001b\270\333\217\354;9\221\337\271\246\350P=\335\307>=\252fN\275b\351\031\275\017\270/\275N*\312\274\326\2127<D&\020\275n%\027<\010\325\234<1\271N\275Z\034?=\313\004\303<\335\264\2708\037\337\000=\364\013\016=\204\271\310<\376\3768\275Z0\317;m)\364\274\3750C=\320\'\340\273\236F>\274\340\323*=\355\363\336<j\263R\274\275\230\320\274\020\375E\273)$\016=\362\nF=\254\032$=\247=\373\274\017=\\=\215\244\350<g\2667=\000\005=\275\372\307\215:\001c;\275\022B\244\274\343\264\223\273\322\331R\274\275\310~:eJ\321\273\206\005G\273S\313^=\302n\031\275iB\367\273\365XQ\275\272\026D=_T:=DE\371<2)\321\274\265\253{\274i\374\327<G\371R\275\005\032\301\272eKR=7t\037=\337\343R\275\313G\030=|\360.=!\263\023\275a\210\007\275o\263x\273\311\343m<\367Dw\273)\004-=\035\273;=\322\021\362<Mc\366\272]>5\275\303\247\333;\322\373E<\211\240\360<Fh:=+ \264<Y\206W\275\027H\300\274\\2\224<=\365\332<9^5\274\363\257\017\274\034\223y\274-u\314\274\326\024\001\275\366,\345:ZN\001\275\257\243\025=\214\360\304<\344\323\014\274\212\373\014=p\217\225\274\205\302\334\273\253\031B\272\202\353(\275t\010I=l\362\214\274\025\315\313<\'W\261<\316\371\304<h_\005=o\020\035=]\226}\274\035D+\275\206\212\016<\261\334V\275\343YE=\324\202\001\275\210\322,=\372\333W\274\027\2472=\321\007\025\2750\322_=8:A=\256\236\032=\357\244\321<\267G\342<\343\374Y= \271D\273\324\032\307\274Ob\242<\3146\307\274s\025,\274+]$\275q\3445\274\030UO=\373\247\023=\273\373\002\2755g\261<\337\036(\273\211\220\021=\215I\'\275\3774\025=Y\260^=\016\'\033=\227-7=\230\2738\272\024\032\201\274\331\337\225\274\312`\354:G\3759=\004\003\257<\265L3=\325v\305<\302\003\027\274\263\3049<\246\207\320\274A\374\322\274\351\373\036=\255\211L\273xtD\273\250\352\214<\025o\027=D\240@\274#\262=\272v\313\377\274\177\213\273:\020]\361<\357f\362\274!o\007=\232\255#\275xD\005\275\t\234,\275\024\314\364\273\337b[\275\003&*\273\237\036\234\274\255\207\265\274W:\211\274\320\303\315\274R\324\032;\303\016\243<dS\240\274\210\360;\274\314\333,=_\301\333;\220\364\266\274Xj\2419y\303w\273\024\242\246<%9V=\003\031\260\272\206\212\342\273D\277G;)\304\363;\376\273\342\274\213\361\374\274\321@\013;;JG\275\264\205S\273\311K*=o\313G<\244\201\025\275X\247M;n\326\244\274\035\320\r:\342\227!\273\231m\003=j\006\003=P\340/\275\344CC\275\271\006\273<[G)=\221\226\005=y\205\316\2740?H=\330\315\036=\214\n\274<|C\347<\301\361\312<=\204\214<^\277\323\274\224FD=c\213\372\274\336\210M\275m\234\262\274iL\302\274\266i#=^h]=\356\370I\275\340N4\274\211\312\027\275\234\033\324\274\0261\020=\354\022\n=\253\356m<\037?\026\275S\331L=\257F\020=\222\217$=V\030\000\275\215\270\003\275\230\342\367;R\373\264<6\354C=Lk\204<\301\372!\275\334\335\340:~\221.=\340\260\221<&\020\265<\007\235\017=\274\315/\275:\007F<A\024\224<h%7=N\234@\275\273\301=\275\n\026\023\274y\020\233<\035KQ=\020\272\200<\001\257\005\275-\0236\274{w\321;P\031\301\274\344B\004=\023\017k<\3608&\275C\203\202\274\345\241\014=\374\203\032\275X\337\032=\031\3518=\260\324\370<*\231\017<y\360\303:\270\335B\275\243\360\210<\346\355J\275.}\354\274\030~\337;0\301u<\203-\\\275\237\327\300\274mr)=i\205F\274c\207>\275\242VI=\004\301J=\207\240\334<\237\336\034=\347YU\275]\355t<\322\025\204\274\375Y\037\2757\236\260\2746\366/\275\356\304$\2756\274\230\273\rxU\275\273\241\004\275\361\373\330;}d\325\274Rf\324;-(\016\275I\212[\275\000\252\261\274\324n\026\275s\270\032=\'\226\"=\340(\030\274S\3326=\367\203\202<b\013\215\274\037G\250;\340\0073=\233\210\'=U\232\236\274r\307\\=m\255@=Gy><\014\nj<\233\"#\275\241\271\250<\233\177\013<^\255<=\227\323[=\376\303\'=\251\326\036\275\304Gc\274Y\356T\2756\246\"=?7&\275\324\253\277:\243\233\227\274\362\233D\274\036\016\245<\273w{\274\226\205\036\275\335z\032=\013\007>=>\277\201\274\323\372R\274H\3477\275EW<=\226\272\030\273p\275\330<\355\247{\274$)6\274C\307l\274\237u\202\274\236oN=&D\223\274\221b\025\275x\362\221\274\313\336]\275\352\233E\275c\3562=N\305@\275\017\256Y=\237=S<\036\0149;\243\267c<8\242A\275\252\231\346<\312\203\037\274\206}\010=\335E\020<Q\230\376<\313\325\256<\004\365\003\275u-\307<\2702Q\275/j\t=\245\304\306<\020\"Y\273\027\272\376<Q\000\204\274X\277\207\273\226s\250;|M\361\274\206}\257<\264BT=\026\207];J\033\374<\233\r\"=\2371\305\274^\256,=K\003M=y$W\275\341:k\274\271\272a<1\255\n=nXI\275\\\203O\275\354\233=<v\016@\275\013\217\214<.,\222\273D\255\247\273\331\237B<\263\275\256\273v\244\325<\254\347M=(\004\002=\310Q9<k@$=D\346\023\274\305\325\232\274\375B\020=\265\317\312\273\326m\253\274\355\207\374<9\026$;Z\237\035\275\370X:\273%f\273<\021D,=1\375X\274%\243\020\275C\300>:y\304\227\274.\007=\274\312\2637<\036\213B\273\347\003\303<\020\223}<\022\355\230<k\270E=\205~\211\273aE\037<\204a^\275\006h\033\275\326!?=\352\341\211\273\370G\242\274`d\017\275y\371z\273\3556\\<\200A<\275p.\277;\340\240\014\273e\201\250\274E\035X=\206$\\\275\000b\010\275\304\306F=\267\327(=\035\235\010\275\204\210\216:\030v\n=\373\270T=\332%]\275\002\356S<\234\255W\275{\312\037\274\276\341==\337\232S\274^\332\203<F\304\'=\320\365\030\275\320P\322<\356\304\343;g\361\207:cH3\273^\253\212\274\032T\036<\337\353[\275\207h0\275\001~\035\275k\336(\275w\223\342;`\342#\275\004\324R=\335\331,=\333\376Y\274\242\265\264<\250\t\004\275\303z\020=\310\210\357\274\311x\247<\237\201\203<\373\333\t\2751\256\320<\355*\034;\256\324\016\275\235\2339\275\005\206;\275+\3715=\367\350S=\334\3268=\024\376\035<\332\237\267\273`\247\225<\270\3156<sS+\275\351\337 \275\370\004\265<\256@G\275\013\213\033<n\2463\274\327!\003\275\2078\252\274\230\030E\275B\214\024=m\014Q\275#\002\001\275\310\240\301\273P#Y=\277}\304<0&\004\274)fk\274g\237\025:\0132F\274\021s\020\274Qq\017\275\204\220J\275SB1=X\354\200\272\024\200\242<X#1\274\301\334U\275=\021\024;.*\002=\316`\373<\247\364\220\274\204K\320<\312\371\272<g\025\013=\224\261[=\006\003\305;Z\302\"<qPf\274\271p\027=\310\334\220<x\273\262\274\016\177\006<\332\2676\275q;\010=\244\307&=D\244\004\274j\303\032<\n\354\224<yc5\275\200\225\023=8\r\025\275\245m\250;\214g\223\2749\210<<X\201\334\273\025\365\323;\t\2416=\312\274&\275\350\341\027\2759f3=\314,\263<*\370\257\273\t\265\216\273\004/{<2\0211\275\242\2519=2&,\275\376\256\031=\232PU\273Na\005<\300t\013\274\206\027q\274\237t\252<\032\207\363<\016\201N=2\302S\275t\341\255<~[!\275\323\037\251\274T\277Q\275\230\376\232<\025\217\027=\276v\245<\032y\t\273\250\354R\274\031}\323<qc\235<\376T#\275\023\004\301\274\210\246\"=\ty\366\2744f\007\274\224U\\\275\n\264\272<\205?\016\275\314|\221<\370\336!\274m\246\002\274\375\322N=J\177\332<\273\236Z=\357\007\007=Q\215\"=\221\241\032=\201\314\260<\\\322P;\262,Q\275#t\320\274e\036\030\274\245k6\275\032~\256<\261\317]\275PR\\<\247WE\275\037Q\266\274\261\344\"<\326\262\020=1\333N\273\262J\n\275\272T@;\271\356]\275\334\356\n\275dK\020\275`q:=oi*\272\307\"=\274\221\311:=\265\362M<~\336P\275\343\352\033<\031\235\010\275\343\"Q=F\377\001\275\330\267p<\005\305L<\\!/\275\304\377\306<\372A\n=\346e\254\274\026h\301\274\314%,\275\376\251\006<\002\017)\275YS\021<{\3516\275\2034|\273\270C\241\273\303\325(=&\025\262<,\224\256<\334\002>\275\213J:=\205z\022\275\357y\305\274ic?\275\255\361\023=\323\252\226<+\022+\274\347\317\350\274\213\363\031=].\266<\035\370x<`\365l\274%1\203:U&+=Vj\017\273V\242+=\344.==4\331 =\014\021 \275\3377\\\274\036\257\361<\023Z\317<j M\275\000\275^\274\315\214\000;\273ZH\274\316\335\354\274\241?\310<6X\367\274\3067\257<\226\234+\275\013jw;\205l9\275\360\017\'\2758@#\275N,\326\274\0373\275<\366\026\001\274\223\314\020=D4\273<t\351O=\321\t\224<\301\216\333\274\312\007\014\275\327\n\016:\245.9\275\"6~\274\331S\"=\233\333\325<\372\310==\245\233K\275\265\332L\275\314\257\334\274\003A\005=\206\315\261<\036t\266<U\243\257;\201r\320<{\325K\275\220\224\357\274\365\251D=>\014\207<z\363\232<j<\005=?T\251\274$\232\022=\324\341\331\274\234\017\322<\r\371\323<\250\273@\275\274\274\227\274\264\364P=9\353\363;\301x\240<5#\374\274n\241]=5y\362:~C\302<W]\324\274X\225q\273 |\213\274A+\'=\260\002P=K\2605=\377p\256<\312\261U<\334\324\321\273\311\031\273<;\216^\275a\327\037\275\370\273\';\363\017\340\274\375.\214\273\305\241\255<03\000=\005Y\320:#\212\251<\351\"\340\274Oue\273\362\315\331\274\006Qs\274\252\034\025\275s\330c\274Ga5=\343vA\275\212\257\253\274RiV=\263\352\"=\321\210\323\274C\205\347:\222\010;\275 \031\014=\302\241\020=\021\254\311\274\206\307\r\275\353N\325\273\317\364@\275G\027\032\275\221;\345\274\336<(\275\223\210E\275\367\344%=\212g\212\274\236\3656=\344\362\301\274\007\017(\275?\300O\275#4\010=B\206\266<|\307\326\274>`P=\3611\263\274\245\312\246;\200\000*=\n\351>\275\361\273\313;[\247\355\274\353\323[<R\257^\274\237K\375<b\017:\272`qI\275\367\225\177\274\366\354\177\273S\223;=\236v\220<\2451\343<\016$\270<\344\337R=\240\241\241<\240\014+:Aa\037=W\351E<}\342X=8\031\261\274\263mI=F\264\373<\247\235\013<\034\002\r=\362\215\016\274\367$\n=]\256\304\274r\327>=\254\370\027=\024\n,\275=\377\033\275\213\356\254\274\235X\277:\310v|;N\026D\275\265(\021\275\"\000^\275\334\307\033=\222\335\253\274+\217@\274R\304%\275Z7\366\273\222\347\257\274\304\3424=EI-\275\\R\304<\214a?\275ul\276\274\240\330\033\275[\264\005\275\231!5<\337%\020\275\227\223\\\275\033\360[<W\024\001\274E\'\016\274MH\224\274\311\306C\2754\002r<h(4\275LX\247<\222:\220<B\177Z=m\340\014\275J\346\005:\336H8\275m83=7b\221<\350\314\014=\304\253\323\274m\304\211<\336\364\254\274<\347X=s\325\235<}GU<\037_\036=\314\341>\275\035\227C\275\363,\345\274\212\3528=\224\037\314\274\360\347\\=#W\313<\3667\325;j:\332<\225\256@:\316R\235\273\010^2\271\215K\000\275*\301G<v\251\311\274\261t8\275P\033J=]\005\204<\003qM\274\2273*<\006\000\216<\377\333\245;vH\r\275G36=9\314D=}&;<\323!\342\274\243\226\033\275\314\311\260<lZ:\275\365\334\332<&\360m\273\355\204R=,\325R=Iq\273;k\322\023\274)\333\013\275z\302L\274c2L=\\\246\\\273d\305N=g\214\322\274\031\346\244<\363G\\=\343\006.=\214!Q\275\312i_<\010\353<\275\000\241\037\275,\263\346\273\315\026P=\037\034\036\275D\235W=\354x\221\274\177\265\\\275]b\220\274#(c\274\345+U\274\376+>\275_\235\\\275\373\371\206;\252e\362\274\0253`\273!\273\005\275\265\327F\275\345\026\213<\374s\024\275\233R\317\274\220\3666\275\'1!=\017\177J=R^\266<\005\305\242\274\337?\n=\217A\017\2757N\0339\335\302\'\275I`\320\274\357^\031=\240\311\006\275\352\371\234<9\256\225<L\300d\27434\267\274\017]\010<\260\274,=\'=>\274E\305\207;\2524\336;\030tS=\334\357U\274\340\305A=w+\213\274\317\3251\2750=\027=)\254\240\274\\Q*\275\372\310\350<\016V\024<?\206\235<\333\233\217\274\350\322\260<r\300k\274\243\340\233<\207\031\357<\205\274 \275\336\367C=\375\255+\275\251C\264\274\206\031,\275jO;=\032\241\363<C5\236\274\260m\026<y\243\356\274\2551\357;\370Q\304\272W\263T\275\337\035\016\275\266\244\305\274\232\305a<\t\320\017\275b~\320\274I\331/\275\371 1=\224\017\232\274N\363\226;\255\310\227\274\002\345\215\274\031\"L=\311g\234\274\037\222\311;b%Y\275\267\353+\275?92\275\016\212^<\357\025\334\274\025\325\007=\256\271\017\273\366;\r\274\'\305\010=\323I2\274\304\260\363\274\326\203j\274\2558\027=\310;0\275\273\212\'<\220u]\2756\223\335<(\200B\275\371\330.=\350\244\370<\262\353\353\274\271!\204\274\234Y<\275a/D\274\250\007\244:P\353\227\274\225\236\016=\373]\t\275F\377\332<$:$\274\316\247\267\274+\374\315<Q\367\355<\354\006\252<\355\357\263\274y\230A\274\030R\000=\005\355\320;\317\221\'<\"?6\275Qt\217\274\314u\032\273z\264\"\275\270\262n\274\347=\027=\336\234\355\274\271K3\275\235\270]\274\035C\017=,\371,\275,e0=)\023\030\274\361\214.=\262\207R=\217\220\276<\212\261\025\275\034y\r=o\235Z=\225\032&=\371Y>=\357\366\034\274R\204-=\351\276K\275-\346\333\273e\210\327<\234\016X<\206$\222\274\t\257K=^\037W\275\230\256\263\274\204X\342\274\311OD=\240bG=\023\277\250;\235\374\023=\\\232\271\274\025\2476\275\223\220\027<\thC\274\272\327\310\274\315I\2109\254m_=1,W\274f\377.\274Uz#\275\245- =B.\317\273C\272S\275\267t\255\274\345d\262<JxT=T=\207<FZ\335<\200\320\327<\371\312\341<&\222\t=\371\255\224\274o\355 =w\211\333\274\267\021h\274\221\245R=\240\025Y\275\302\300\353<\006\267X\274<\232\273\274\324~=\275\355J\256\274k|\241\274\215\025:\274\301]\3418y\325\021=\355\373S\273m\323#=\371\t.=\306\363D=\022\033\336\271\027|\346\273I\244\306\274\371(\276\271\245\245!=K\007\246<.\313Z=\327Qp\274\344\272<\275G:x;7\376\035<\004\331^<\315\332\204\274\306\220\307<\025\340\223\274\302[\372<\303\"Y\274\266N\035=K|\374<\272` \275\3441\006\275\342\215\226<\242\334\020\274\324\310\026=\374\271\332\274a\274$\275\201r\370\274\356\307p\274Q_z;\357+>=0\256\201\273!t\275\273at\t<\2376K<\240\375U=Y\034/\275\3615\025\275\351\354\027=\251\217\373\273\316\272\234<BgN\275P7\037<\264U\377;\2532\270<\231 \027=|\222\377<\223i\240\274\020\252_\272|\245\344<\004\210\016\275\371\241\227\273TZ\022=\032\363\264\274c\224\t\2738\025U=}\273_=\274\326\026\275k$\"\274\314\3762;\'\207K<\014\310c\274\206\264J\275\205\036Y\274\334\271\006\275)\220\213;\321\310\272;\225WW=\250\205s<\352\023Q\275\202\3210=!n\332<k\'\271\274\035\230\036\275\3717;\275\367\313\003\275M\255\307\2744\334\372;\024\363\316\273\0225\322\273\233W\010=\300\177\006=\342ak\274\361PW\275\377\246\262<\030~.\275\036\027\364\273\013\204\321\274p\020;<0\341\\=f!\227<F\360\357<\375U\000\273T\273W<Q#\037<\274\033\370\274\217\267\006=\271\210\252<2\006M=\"CJ\275/H\230<P\031\003\274\225\301\017=\317\201\242<\177\355V\275#\360\010\275v\227\331\274\n\3744=\232\376\007\275x:U\274\177\334\016=P\363\n=8:\223\274\334\267\t=p8H=\3578\321\274\"\274\027\275r\311\000\275`J\234<\353=\003\275\335\t\004=\301U\325<\r\316\214<\267p!=\226#\342<\tF2\275^\274\030=q\3533=6R\031\275\254\306]<Y\rL\2752\243\024\274\013\035\232\272\312\314%\275_\2010=\217@\305\274\260\031?=\242\345 \273d\330\001\275\311\3262=\3103\217;\033n=\275\374\n\226<\200g\372\274\263\242,\275\374\270P=\276aC\275\312\214\200\274>\350\000\275\354\n\347<\313\202\336\273.\024\007=\202\207\305<\323\010\354<\032\312\032=\266\tB\275#\300\311<\323\354E\274\2578\244<\177\006\321\274%\225\324\2744{\357<\306\242&=\227\340\266\2748\262:\275E\3424=\t\355?:bKW=m\002\\\275\302R\017\275vH\004<\245\005\005==\223\000=\346\007\235\274\310.\213\272w\301\217\274g\362\016;Y\301\222<\023\236\002=\320P\017\275\247Y\307<\311\320\214\274\017\360\333<h\320\363\274\033\024\221<\276\036Z\275\375\2571\275\252_\033\275\362Nm<\330\320\356\274\361\333\222\274|\2409\275Q&.\275\344\302O=\211\367[\273\322\251\017\274\335k\001\273VGz<\305v\320<x\327\232;\346\203\002\275\373b`\274\\b\020<\336\221[<K\332Z\275 \310\207\274\321SI\275\355a\024\275\010\345\244\274\260\325R\274\202\343T\275\271\024\203<$\271\217<qD\315<\267\177Z=QG<=\321P\244\2745\305\323\274\001\"\375<tI\001\275\341\253[=!h\\\274\364\275\227\273\007\\\273<\014\355<<\353V\241\272[\310K<\350\307\235<\272jM\275Y_a<\274\310\215<\t\304[<,\275N=\351x\266\273-7.<\340O};\211\'P\275\027|9=\223\016\310\274\373X\271<\235/O;\346\013\'=T\340\317\274\204\024\005\274cQ<=\322k\231<2\236\376<\\\247\\\275\352\231\005=/f\327\274HD\024=\270J\234\274\030\2217=\234\372[\274\234\311@=\031\260\2409]p\332\274\242\365i\274\252\036\321\273GE\366<H\376$=-6^\273\254\277A=\301\352?=\326\355\236\2740\304x\273*=/:\275\207\370<\213^L=Z<\212;\256\211\300\272;\'\237\274\241\014*=Q\000\325<\202\207\236<\347/i<7i\"<\254\243X;\337/\001=\177\321Z\275\243\t\t\275R`P;\2775\016=\346\2724\274\007\000K=!\2367\275A\202\026=\320+\n=}\002\033=\001\024/=\305\211-=\275\277*\275\273\003\266:\253\356\275<\344\344\273\273h\314x<Q:\333\274|\226\325;}\310V=\tM\213<\317a\034\275\276\277\013=j\340.=\267\272G\275\273\367\327;x\2049\275\204\322\r\274\362?\342\271\334\021\231\274A\364\354\274\260\263\222<t\0072<\2312\271\273m\235\372<8\377\337<\324\201\016=\301\'\036=\353@\244<\364\377D=\325p[=\363\250\357<q\202\224\274\030\275^\275:\352\200<q|\025\274\201NN<\"zQ=X\006\245\272v\314\020=\"\273\325\274J\3342\275\"\307E\275\324B7=@L\351\274K\216(\275\\\270\341<\356i\210<\351j\231;\272\207\276\274\346\032Q=\037\247\n=18>\275\371\261\260\274\322\267r<\222\353\000\274\271\206\345\272g<\036:\276\3703;\3372%\275\010\221N\275\025\211\r=\372\334F=\247\036]=\037E\022\275\351\240\203\272\274\263\035\275*\226\013=\037=\270<\001\207\307;}b[=\327\014\261\274R\n\203\274\356\355!=,\305\276\271\024\353\340\274\211mT\275W!\321\274@\261\233<[Q\342;v8\n\275\337}\'\275\321\337\371<\211\367\303\2741\022\033=\215\201\000=\373\373J\275q\010\036\275\252\266O\275\201hM\275\253\313Z\274\000\035\277<|F\304<t\207\211<\377\r\034\275\331\032(=\272\000\213<\304u\365\273\000\350\t=\253\233\236\274$K\022\2754i\311\274W>V\274\355\204W=C\305\037\275\307\ny<\303\213)=(!3=l0\250;\026\353\010=\3760\261<(\200\036=\r\306\240<u;Z\274\033\001\216<\327\261\021;\023\036\007<\263\001\025=\213\007\\\275o\203\r=\004GK\275*\341\272\274+\301\n=6\212\013=\026\271\026\275\311\233R\275\353\266l:\251*\030\275\254e\270<\220q\014=\350\237\251\274\313\340l<\022*\003\275\354\027L\275\357]\002\275\263\206\352<\003\245\037=\217\366\014=:\226\023\275\212|\236;\350Dp<dT>\2753a\251<;N\312\274\355\360Y\274!\235\177</MC\275\023)=\275\241\037\373<-:[\275\203s\205;\376\306F\275\013\231N=\375?\322\274\333\3172\275\270y\304<\220\311\005=P\027\017<]\234\225<9}\370\274\345\314A\273\300t:\275$,\010\275\365UQ\275t\342D\274\205\244\305\274m\270Q=g\306`<\375\334}\274\272\247\242;\305\311\277\274\320=H=&\272\n=\370\333\317\273\313\256\026=@L\200\273xN\026\273\022H\024=\204u\n\275\344\314\274\274\364\252\\\274n<\367<?5\246<\212y\356\274b?M=\007\244\365\274u\3607\275t\325\036\275\270G\022\275\317)\033=\333B29|\373\2659?\200\274\274\33203<\352\360\351;\245\202D\275\246^\315\274-\3040\275\300/\216\273\317z(=\022\262\023\274\272\202\027<\230\332\254\274\277l==\270\'\r\273\033\3020=\037\332\036\275V\374\302;\354-<\275\007\346\203\274\363\007\200\273\270\315\237\274\014AO\275Y]\017\274\r\323\030=\337F$<\024\002\'\2759\354\350\274\004#^<\254dP\273\271\304\245\273[\243\035=}G\r\275\314\371U;>Q\353\2748t\2577\313\370D\275\006\354I\275]\362<\275C\r]\275 \337\035\271\2778\214\274p\005@\275\243\342V\272\243>\206<\376\372*\274\235i7=\030\032\331<\345\0253\275\024\264\373\274F\021?\275k[\035=\322\"Y<\275e\236;-\024T=4\"\207<\374a\331<\352\304\024\275\361,4=\02481=\257\000A<\374\'S\274\027\373\257\27462\317<\317S\t\275\357(2\275\300\336\360\274=\232\372\273@\236q\274}\366\315<7\301;=yVO=iL\n=\312\372\274\274\347F\366\274\225z\022\274\350\371\033<\255dO<gK\353\274N\215_=N\260\036\275\007\265\'\273}\211_<1G\305<]`=\274\250\221+\275\237\2143\274<\257U\274%\3420=<v\010\275\332SN\275\\\215\377;\313\3269;_\200\256\274\375\233\031=\0373\014\275\361\2166=\344\263\357\273#\323Z\275\313\255\256\274o\264\310<\036@\'\275-\224\361\274\331\035L<A\355\313<\226\327R\273\3324)\275\253$\257\274;\203\036=s\275\361<\312i\330\2744U\350\274\212\307\177;d-;\275\233&\006<\014\260U\275\355\354Z=\311|\"\275\'\337M=\263%\256\272\305;#=I\264\t\273\016\307d\274\223\341\236<\207\021\t\275Xc%\275\225\3267\275\024\257\312<\'@m\273\337y\023=\0056Q\275\005\240$=\366\236<;\362\324-\275@CR=\023\302\312<\t\013)=\230\202\225\274-\354\307<\372\\Z\275\263\222\014;\200\002\350\274\361\232\004\275\227\264D=k\327T\2759\002_=\023\341v\274\231$\373<\201\322\002\275\3511\035\275\327-\356\274\371\013\217\274\323\036\226\274\377\361\t=\217\356:\275P_\364:\371)\271:\034\014\010\275h\215\237\273\310#\233<\\W\006=}\3236<U\247;\275\213\331=\275\tE\236\274\307\300<\274\223\246M\275vr\020<W\024\207\274\003F\251\274d~*\275\267i7<-\365)=$\217L\275\327-\003=f\004L=l\013$\274\223*\002\275\255Z\030=d\264\032<\037c\033=m\337_\275m\005/=$\210\220\274]\326Q<\324\207\r=\006\0228\275\202\n\232\274\"\334f\274\351\377\356<X\0304\274\206b\032\275\256\021\021\275(\024=\275\273\t\026\275\337\246*=\027e\016\275\323\222):\254\303M<\231^R=x\224Y=b\023A\274i\255\003\273\334Q\215;\0000\372\273\024\344\306\274)i\272<~\335\361;^\245\002\275\311UO\274\331\373\227<\246\260O\2756\037Z\2757~\232\274\375\013\226<#\352-\275\271\031\241<\237\346(=\376\370&==\270\231<\371\336A=\336\376\226\2747\201\347<\222g\320<<\341;\275Q\377\320\274@\222\351\274\360H\206<\247+\207<\034\3660=4\023K\275\316\230\024\274\234\200\020=\357\346J=w\024\027<Xgu\274g\225\332<\021%\017\274\022\362\266;4\366Q\274\255J\010\2756\3379\275<\356\331\274\377\326X=b\007I=\234\026N\275%\234\320\274n\300\020=\331\007>\275\243\252\302<(J\204<\267 .=#\024\365\274\227\034\322\273\031\375K=\204\231)\274\305~\373;\231\364\000\2759>\324\274\325\3632=\201P\266<\034\202\037;\203\341\027\275\023BQ\275\037\027@\275\236\202\340\274\354\215(=\212Q_\275B\334\010=\026=\035=\3731\004=Y\037\"\274\373\177\257<\262\215i<\276QP\274\350\332\362;\005<\367\274\345\243.\275\247\261Z\275\031\023*<\007~7\275@w\003\275f\tB\275FO1\274\030\344\300<\035`\351:5\304W\275\221?\037=\260\322\212\273rT\262<\366\345\023=\2211^\275\372o =(\234\320<\224\n\"=\237V\301<\314\242`\273S\360\026=\206f \275\347\002C\275jcg<\0055\234\273B\322\270\274Y*\"\275\247\002M\275\360\222\314<\033\262\201\274\243\357R=/I\016\2745_L\275\036\220?\274\234\374\371\273\320\265\340\274\232,\302\274\303(D<,\207/\275 \340B=;\206x\272\363\204\232;\001\325\240<\033xy<$\352Y;\270@C\275\305~\367<\220\224\341\274\365n(=\375\236\244\274\315[N\275\231t\377\274nF\032\275B\240\t\275\205\310>\275_\026\374\274\005%\372<?\366\277\274\005\034.=\346\001\224\274\270b\034\275\260VP\273\320s\021\275:\250T=4\210,\274\325\327v\274h\213(\275g\033\303\274\326\000F\2749 0<:\021\024=X4_=R\000\346<E\340\000=\316\266\033=a\314\021\275\350\346Q=%IB;\364\264\327<SuU=`Bl<C!E8H\215\270\274\314\023 \274!\376\257\273\341\267\375\273o\246\254<\217V-=\240\220\331\272\331O\225<O\344F=Ge\277<$\2375<#\203\354\272\3667 =\022\252\036\275\177\017\236\274l\263C=\t\365/\275\370\307\327;~4\001=\375\013\322<\3134\005=\r\335b\2744\352\035\275\020n\261\274\361l]\274\003d\024\275\\\337\351<\005\023\234\274\003\3427\275\024C%\275`\250\026=\363ou<\251J+\275\263\242\375<\362\300\336<.\217\001;t\333Q=<\306\013\275\375\312\037=\207o\354\274M\217\\\275,\276\020=\205\274\037=Z`8\275=\324N\275\236\2543=GRY=\266\022==i\237\312\274\014\224\274\2746\255\302;\374\232H=\026\356\231\274(\331\007\275\321\002\254<\334\020\036=\342\3720<^\345\017=\332\010U=\314\3777\275i\357\362;\376\035\346<\221\351!=\036,\010\275\343\223\314\274\025\024F=Z\334\215<\267M>=\234\016R\275C A=\375\2471=\332\037^<\373\307\r=\235Be:\242dA=\27443=&o:\275\331i\210\274Z\263\022=\002\032E=?\344\026\274y\374\324<}o\r<(^\241<Z\270\223<\270\205\000<4\023\275\274\274;3\275\342\313\035\275\207Y\215\274\371\016\246\274p\364\021\275\325J\236\274\\\0340=\234~\003;0fG\275*)\023<3\357y\2749\323\276\273\300\215\353\2749.\007\275\244\267!<\324\267\372<L\224Z\275\025Q/<\021\252\037=r.\375<S\302Z\275/F\334<8c\\\275\316-R\275w@O\275\343=6\275\206\2222\275\251B\340<y%\360;\024\377~<\003y\016\274c\033\035=2;[<\270\3729\275:\253\264<\242\243^=\274\2477=\333\364\306\273\245\'z\274\025a\215<~\366\342\274\312j\344<P~\365<\212i\211<\371\246\256<w\237I=XL\"\275w\3760\274J_\373\2747\324\204\274\216QH=\230\017\n\275X\230N=\374\032\204\271\356I\267<\212v\266<\266\322\310<s\326\177<\204\264\264;[\002\005=\026\243\027\275&\226\016\275\207\024W\275a6Z<8b\020\275\033X\017\275\023\277\333<\274\347O\275\004a\333\274\224\306\245\274\311f\252<\253\310\276\274\363\206G=\236\r\026\275\367\325B\274Il\001\274\312\336\361\273Zpd\274U5^\275\357S\351\274T\260Z=\315\355\365<\343\365v\2746\302\302<\376L;<\265\177}\273\301\366\246\274\220\277\261:\254\206U\275\347G\252<\330\326\237\274B\225O\275\244\346\035;2\"5={\1773\274\252\202\206<\026C=<\257w\004=\244\306 \275\022\341(=\277%+=5v\317:\213\205B\2754$\033<\034\201Z=\000=\020=\027Y\032<\022\307\262\2745h0=\321\251\266<\371\335\234\272}\320\035\2736\232\332\274l\266\'=\236Q3<\217\213L={|x\274\202\370k\274\262\365\266;\361\'>=i\316\214<\346\303\235\273\316\000S<\216*\233<\303\000!\275\244$\240\274\320\311?<\361\304\007=d\376.=\3601;=\365\277\311<\351d>=\275\213F\275\\4\205\271c\217A=H\330y<\t%\000\275\345I\004=e\034\250<\230dK\275Y\364\327\274\340P\263\274\350\332J\275\363]\216\274\206\035T=\306y\254\274m\020\236\274\264\007#=\004q\022\273\360\372\034\275N\"P\274\375/\345\274`\274\313\274\221\001\265\273Mj\370\274\343\236G\275\367\031+\275\267yF\275\000t\227\274\326\323\364\274\271\214\374<\232kZ\275r\215w<\344u]\275\353\002\231;b\242\004\275<`\311\274\211\360\374<\017\226b;;\316\373\274\364\330O=\332\231Z\275\310R\001\275\177\317\037\275hY\274\273\372\356\\\275*\273\215\273\036\262\20597\241\020=L-\000=^\025\r=_R\006\275c7\316\2746/b<?\033\025=\n\303Q\275#\'\032\275\330+\024\275\005\247\226\273\376\252\346\274\233\233\020=\374\277\351;\370E\010\275\314\225K\275\3442\024; .\014\274\312\3048<&\231s<\302Z/\275J\315\007<D\257\t=\305/\330\273{W\267\274\267EQ\273\227\022\026\273\222z\241<<\253\001\274\0052e\273\025\245\177\274EA\342\274a\036<=\335\032\357\274\t_S=\224\314\\=f\021\302\274/\320:=jv2\275\022\020L=-\030F=S\305\010\275\021\010\231\274\255\331\254\274\002D\036\275\2071\346\2745\3509=0\3633=\266\256S\275ZUv\274\204\234\014=\217\245\260<Q \265;\0178\326<\270\3122=\177y\217<c\004]\274\255\223\001\275\331\036E\275O\023\320:\365\337\033=\325\263\225<\023\307;=3\236X=\325\301<<z\230M\274\265.\345\274\273\205\257;w\231J\275\r\205Q\275\353_\335\274\221\'3=\300\213I=\236\231\370<`y<\275\030\322\261<\310\351A:;MA=/L\034\275\001\020)=3\274\310\274\331>\026\275\022\321L=\351vS\275>\335\207<4h\227<\2036\365\274\317\343\r\273*m\010\275\260\211\237\274\021It\274DhX=1n:\275\025b\025=\201S\026\274\3705\001=\213\210\017;\243\254\301\274\263v\377<\007!\341\274\277(\006\275!\340D=\3541\032=\3469\361<8&2=#J@\275\364\010\310<\277\217A=3\303\304;\333%<=8\257\035=A\217\332;\346:\343\274<\244\200\274\266\037\272\272\273\351g\272\377\371\323<nV\024<\336c/\275>X\233<\236\366\037\2741q\217\274(5\341\273\256Mb\274\032\000\320<\003\350\376\274)\243=\275\320\225\"\275\235\364\302\274\257\363\374\274A24\275\2115\001\275\332\026.\275\353b\260\274\245\272\310\273p\033\375;\031^\334<\001\302\013:\313W\273<\247\253\006\275\375\003\001<V\341\024=\346\213\025\275:W\004\275\3327\026=c2\016<\027S\324<\023\332\017<:\332^=\310\334\231\274T\030\023\275\336\234Z<\022\322\003\275\240\255\321<\027CH=\325\3171\275\r\313`<\035o%\275\312{1<=\370+\275\202\254\002=\362Q\314\272\322\313\355;\263.\034\274\345h\230\272D\352\024\275u\'V\275\010z\333\272C\010\224<\210F\276\274\300\341\024\273\361\230\210<\013\232F=8\276V\275\301\251\236<X>\331\274\370\241\034\275Fm]=\347\355\330<b\330\322<\373%\006=:,i<\347Z\351\274\305\224\335\272\241\311+=W\367>=\270D\250<\030K\021\275\230\277(<\327\347\207\274\315?W=\240\335A=\233S\031\275\356\007:<\337\335\003=\234\3773<\321\357\026\275\375j\027=\204\213\371\274\321\346\010\275\025\001f\274G\3308=0\363\203\274Q\331\227<\272\006\200<0ot<\212g\010<\227\001@\2740LO=cNZ=M\035\266<\327\244\013\275\363$K=\030\360u<h\205Y=\211\312\n\275\302\003\205<d\262%=-5:<Xp =<\035\034=\035v\354<\007\260\353;\3605\371\273\323\337\221\272\n\362\'=\220d\016=\351L\002\274\037r\352\274\013\237\256<\271\304;\275i\2367=S\234D\275<\366M=W3m\273\272o\376<\202<\346\274\367\333\265\274\335\326\332<L/X<\025~\317<\303\233\216<\236[\322<9\016K=\265\334\'=\212\356&=\331\324\t=\265\370\231<\032\035\020\274\232\001;=\216/8\275\215\367\321\274\370Z\351\273\217\tA<\364V\351\273\364\327B\274i\205\030\2755p>\275\326\2368\275\366\325(\273;5\221<\205\202\367\274\310-\360;k\031\013=\010s\345\273F>\020\275(\371\000\274\246,x<\320\212\007\275\003B\307\274dXL\275\273H/\274$F\003\275;\212\351<s_O\274\274\\\216\274\336\033X=\226\004\014=Y(?;\240\344\343<\016X[\275\337\025\033=\253\017R=I\314\023\275\n\322\035=\362\336\255<\264\267\263\274\'\326&\274,!3\275cue\274S \311\273\267\310\034\274\232/\013\275\002\261#\275j9\322<\341\250\007<\n\363\315\274\220\210c<\035\345\013\275<S#\275\016n\342<=\037{<\336\354\225<\325\364\010=\303\014\221\274\247\205d\274\302\206C\275\3136\021=\313N\372<!b\020<>\010o\274\207iC\275\220\006\016\275\035\204<\275\037\342 <\"\325\314<V\314t<\202\367B\275\302YJ<Nx\033=\001it<\357\204\254\2747g\020={\304\257\274z\322\336<m\327J=a\360U=\230-\026=\360\037\t=v\307R\2759\370\341<\210\001V\275-\255\352<6\245U=\273!\361\274\231\2722<\360\305\344\274\367P\021<\335\243\364;\311!\300<\217)T\275Vq\032\275\364\213\021;\210\330\320<\023\213\310<\270w\023=Q\020\010\274.`\350\274\276\206\031<w\'\030\274\323\304\274<G\"2\275\300S6\274Zl\316\274\247\002\304\273A\371&\275Pj\014=w\367\274<\027\374\310\274\324\330\213\274\265\177\031\274\242\337f\274\222l\343<\332.\362\272\r\350\024=\377\225\234\274\302\300f<\2339L\274q\272\356<\013o\363\273|\027s<\245\347z\274\325\014\354\274\014\326\265<\260\025\257<\3347\263<X\025\356<\367`\"=\332\331v<\310\027\246;\324Iz<\250s\201\272\246H7\275\356\363\235;q\027\305\273\022\261\002\275\340\341:<2\247\300\273\021\347\021=\355o\017=\222\333\r\275\345\361\014=iF\026\274\320\335?\274C\316\003<\331\333O\275Ef\263\273\315\010\272<\230^\234\274\377H)\274\322\213\344<\323\036\031\275^\337\261;M[~\273Dh\002=\307kU\2731;O=\320(\"\275\337\275\323\274\254J8=\014\340T;\246F6=\374\317\224\272\331\270-=F)\363;\357\2018=\337\321\225;Wv;\275\243\310F=\230\333\333<\224\037S\275\031\257R\275\360tY;SQ\274:\320\035H\274R\326\206\274\374\355\003\274\251=\242;\212u\242<1\303\332<\300?Q=..\275\274\340\035\256:OI+=IF\316<\226\271\203\274D\355<=\365u\016\275\207t\303\274k\020\232<\316\260V\275}\t\025\273\305\377z<\304\362\013<w\274,\275\324\214$\275\037\215\301<\333\235]=\010\262\346<\344\244V=\334d+<\231\216\221<gp\213\273\201\324j\274\224\002*\275\231\307F\275\262\023\312\274\251\300\364<G\n <\002,4\275kz\206\274\014\025\003=\246#\"<\273\031\003=}[C=D\006\254\273MH\267\274\241\035\304\274\227\232e\274\256-%<1\377\325\273\"/>=:h\342<d\236#\275\375\250\024;2\264\360:\271~O\275\273q\037=\353f\024=\223\217\312\274\315KS\275=`\026=\013\235\211<A\203\'=\022h@\273C<\270\274_Sg<\003\256\330:)\034\321;;\325\305\2749\225\037\275\313\250\034\275\327h\333\274\325\3617\274/\250\202\2744d\025;\353\375R\274\275c3\275H\036\032\275\242!\304<k\216X=l\325D=O\014U=B\005\224\274\326\201+\275G\215\205\274\2469\237<\335\217\234\274-JQ\273\'\000\242<\021\370\361\274P\260\376\274:4\357<\326\210G=7f\327;9\n\273\274n#\265<+\333F;[\216o\274\232\3547\275H{\037=-yH=\351\031\007\274\221\2504\275+\013k<\202\n&=;\325\032\274!\201,\275\256\331\224<\361A\256\274\231\353\014\274\352\345\376\274\t+\375<\331\2069<\232\252*\275\034\317/=\025\020\r:Vj =\225\363\004\275\2429-\275\252\005\253;\031\370\004=\t\030<\275\253\341\014=A\217B\274\274\204l<I\235N=\333T,:\326\251\240<\217xQ\273?Y\024\274U~A\275\372 _=\232M\366\274u\035\332<\004\232k\274\271\240\376\274A\237\024=>\315\006\275\025\224\255\274\022\325\222\273\034Z\016=[\250\327<;X\007=\275\366\304<\326*\333\272\353\270\332<&Z\017\273D\212.<Z\213\005\275\331\211=\275\273\336\276\274\034\213\024;x\311\334<\327C\254;\226\323\257\274\340\027\032\275\335\000R\275,[\301\273\010\203\361\274\215\035\337\273\003\265\r\275\214\220\305\2730\037\034=\222\201\266<\\\304,\275\007h\245<xn\200\274\202{\030\273#x\024\274\303\217\244\274z\200\356\274\337\243\260<_\305n<\352\205:\275q: <\005\307><q+N\273\332\263\014\275\256I\026\275\006\344\032\275\312J?<7\221I=\344\264}\273\257.!=\210\nw<\324^\275<)\037[\275\271\337\203\274\215\034\260<\315\336S\275Q\023&=\302jS\275\201\'\233\273\327\216\265<q\302\001=\014N\273<2W\340<u\345{<\363\221\300\274@ \206\274c\177\032=\033\344^=\306_\010\275+\324p\273r\355=\275d\241;\2754e\314\274\237\236H\275 \276p\273\326(\027=\334h\341<:M_<T\351\320</N\271\274B\274\006=S\274Q=ByE<\236\020\034\275Z\000\036\275\305\177\234<Q]z<\337PA=\rV^\275\320\030\267<\363S\362\274\215\242\344\274F\3766=\325\241\023\271\311h\316\273\010$\336;\313\335\332\273a\0219=;k\025;\302\311\023=\361#\353<\034\240Z=\013\225\351\274\212\370)=M\350\"\275\304n`\274\217\313\003\275\371bG=\220u\340<)2\210;\354\360\273\274_z3\275i\266\217\273M\311\2649)W\211\274_};=0\002\304\272E\215\204\274/\306\036\2750\032\016=.\231\021=\324]\014\275G\212`\274\202\200\037\275\275\252\267\274d\3208=vXV\275\323 x;\314\234\350<\032\000\324\274w|6\275I\005\027\275H\324\305<\345\316\332<l\204\001=+\224\020\275\366\217#=IHI;\3651\342\273\022\255-\275\232\222<\274\321\3655\275\010\013\235<\307r==\254\301\014==p\211\274\243F\215<|\3439=8;\272\273D\332\027\275\017\224\230\274\207)\264\274\321^X=C\200\303\274)0\215\273\nY\276;\346\254\334\274\345\2401=e\010\021\275Q\010\311<M*\037\275#\006\020\275\307\311\242<\335i\010<\203\230.\272\3133\017=5:R\275\350\377\261\274\214v0=\004\263O\274\276\037\271<<\207\030\274h\340\272<\246$\371;\001\364\254;\216\0136\275\201\344\272\274\224\260$\275\277U\246;A\326\332<0\215B\275\372\0264\275\266\246\267<h\237/\2751\230\370\274M\367|;\317&\223\274\233\\\255\274\226\200\371\274\250\200\355\273\240W\232\274u\277\005<9\021\034<]\027\n=\340\223\274</\317\013\275\211\004S\2752\276\r\274\301\3321\275\317\300\005=\245\317\014\275\330-\024<\370\244q\273\360\260#\274\237\251\034\275\037\300\320<W\221p\2743\207G\275\327\212\216<]\177\020\274\2348N\275e|\227<\264-\245\274\362P\245\274F\356C=t\252+\275\020l4=\306\026\031=\217=N\2756\017\370<\330\254/\275\305\226S\274\316\320\263\274A\302\304<\031F\362\274\361\352/\275\355\277\277\273\224\315\216<\344\251^\275}\006\320\274U\325\246\274ft>\274\014\355\261<#I\"\275F\346\206;I\235Q=#t\332<P\313o\274,\177?<\243,I\275r:\001=\314\337\222<\335\331\204<V<G\274l\352)\2748 \353<\006\220O\275\224<\031\275.j\021=\235O\263\274\357\316=\275\327i\300<\213\210\030=\001\"\365<\276\177\200<GzQ\274\242\244\030\275i\260\232:\032\312\022=\312\365\361<=\027\026\275\301A~\274\304V<\275\336u\022\274\002Y\377\274{\243\213;\223#\003=\354\217\"\275.\022\317;V5\274\274\200\252\036=\177\236\376\274\305e\247<-;\324\274\037/\002\274z9\301;\303%D=\032JH<\353\232\036=\355\\B=\016\313\333:\270XU\275]\206\014\275\225\271\n\274\205t\322<\372\027==\177aD\274\0361\032=*mC\275\365\004\023;\337\214Y\274\341\227\217\274\265/\367\274\313\t5=_\225\"\274\354\025X=\356e)=%\256\314<\026\256\311<\272:\357<\221\320\346\274\216\202D=a[<=\027\201W=\204\343\033\274\232|\364\274\271\347\327\274s\334\323;\326i\010<\232\220u\274*4\343<\370\260\201\274r\330I=\331)\001\275e\225\034=8\223Y=\276\036\310<0m\310<G\312\t=x\301\027\275\374\205\032\275\266\263\376<\346\316\373;o}R=V#W=\342\315\305\274i`\277\273Y\307C\271Q\203}\274<\217h\274\'\331P<V\330\346\274c\023B=t\016r<\312s+\275\373\036 \275^\002*\275\222\274\033\275\215\373w\274x\376N<\235+:\2751\345\023\275x~\271\274\246\371\034=-\303\367\274cK\023\275d1C;<t\032\274\345@\020=y\r;=E@\220\274\352IW\275w\034\200;\315\030\031\275\212\236\014\275\231M\022<\337 A\273}!F\275\374\266N=6K%=H\316\036;\336c;9\276\021\212<\016\004>=\321\026\363\274&\3420<\034K-=h\336L\274\300\202\016=6,\241\274w\3137\275\004\327\213<<+\023\275;V6<\033z\367<\014\373\031=\267\243/=\360\377h\273\007\274s\274\032c\307<\203d\036\275s{V==\245b<\213\3525=h\250\010=N\342]\275\2545|<\336\2337<\037\250\017=\356\314P=\377\031\362\274\322\203Y\275\205F\304<\257\031\227\274\177\353\035<\250\265\265\273\304\341&=\351o\356<\274\016\274\274\307\212\020\275\302\023\000=?\230\366<\2524S\274\240\273\331\274\260f\023=M\247\311\274\236\2047\275\234\255\250\274@\371\222<L\356)\275\025\331V\274>)\005\275+\373\007\275\232SG\275\347T/=`/\347;\017\\\021\275\337u@=\343\237\317<\216J[\275~d\007\275\341a\254\274\354OT\2748\251\"=\032u\216<\210a\245<\001W\020<\351\274\311:p\211V=\354\000\005\275\261\177\036\275\253\013\365\274\236\274\275\274w\210L=\225\263\236<m\234^\275\006\365R=( \266;\365|\t\275\371\275V\274{\334n\2745\024\261\274\"\353\322\274\362%!=c\031\310<\205Xk<T{\310\274\036\353\272\274N\362\210\271\372\035<=#\226S\275\271\340~<\306O\024\275hT\016=\212B\374<\027\300\200\274\307\005\004\275S\225\301\273\345\271\023\275\3420==\032q\016=p}:\275\270\003\007=O\357\024\275\273\217\002\275\006=\253<|8\016=\207\226\351<.uN\275\210B\236<9\265(;#GT=\337\034Y\272\247\207[=6\227&\274)W\"\275u\211\236<\226\320`\274\034\325\021\274*\307A\274\245\"\265\273Y\313\206\274;\363\000\274\206\246;\275=\241\220\274\026.N<\256\342\274<.\362\242\273\033\3659=u\266\n\275\021\202q\274\032\267\r=d\351\021\274\360\002G\275\260\331Z=\010\262\356<ff\331\274\314C\247:M\2205\275\320\013-\275s0(<\323d\'=\346\037.\275\034\262_\274\237G\222<\247\3632<\203\364\\=\225\343\340\273Nbl\273\036J?\274rWF=\2772\261\273;\370\320<5(.\275\316\243J\274\3568\225\273\322\334F\275B\324?\275\026`\000=\002[+=\206\300i\2743G\020<p\376X=\224}\010=\215L@=\036\213\254<\351\234>=\320\017\372<\352\363\345<hA\301\274j\237\277<\226\345\247\274_\324\213<Z\004>=^\0227=\301\244\272<\211\377\354<\365\3124=\034\305\301<Fe\022\275\2668\004<W,K=7\363\360<e\217\233\273\220*N\275N\210\030=m\224>\275\370\235\253<8P\364<\351\\I\274^\025\272<\237\274\267\274\316\000\206\273Y\365\247\273\007D\035\275\302GF\275&\343\355\274\364\365Q\273\225\0144\274\200\033_=\337\247\003\275\247p\354:*\030_\275\360\004\213:\022\326\353\274\241\n3\275\037=\211\274\374(U\274\304AS=\340\210-\275\234\034N\275b\3667\275y\2272=\016D\006\275b\032&=LO\000;n\335\'\275\241\0075=\364J\0329\201Y\376\274}\353\362<\231\347\213\274\036\002-\275\n\321\217<\207*\322;#_\'\274\342g/<\332w\240\274\031\235\302\274\220~\t=\017\207!=\340\252\027=\344\035\216<\245\371(=\373\362\216\274z\357\251<\213\005\022=R\0270=\262\032W\275p6\225<\331\341\273\274\001{\360<\267\246\022=\22095=\372\\\307\274:\\Q=1i\242<t=\240\274-~\017<\014e\322:\213\006\226<\263\246\312\272\223qM\273W\232\376<V,#\275\270\217^\275\026{T=\374W\005\275\312\252\n\274\320\355\231\274\232\326-;\214\372\346<\316\267\233\274\262\230V\275\022\363,\275\211s\004=UV\355\274\376\024\275<\315\245\360<Iia<\216\361\031=\010\325\306<\234\350\262<8@\201:,\357:<\220\036\020\275\034\226\360\274`\303 \274\377o]<f\226\006=\327zU\275?\203$\274\360\272\276\274}\234\321<\"u?=\270>+=,\374<\275h\025!=\214\322\032=F\333\373\272\203)\013\275b\357\005\275\362\307\273<\374pF\274k\271\367<\000\034\016\275\353\001:=F\022\'=\245\266\261\274]\2356;t;C;\266P1=\242\027d\274\327hy<UEO\275hm\223\274\253\271\037\275Yx\2119\303h_=\210\2261\273\034\222\262\274\022\200S\275\335`\325\274\250\204\010\274\222\320\233<3\261\242<k\031\033\275\206R\010=\334>I\275\345X\005=?\346\001\275\252r\032=\306\342\031\275\014>\274\274\212\345\022\275/\2713\275\023\030\351<XfC=\264hV\275L\"\354\274\374\230\243<\202\371Y=K\317\333\273\305T\342:\344-\277<\362\217\350\272\257\305\032=\351q\335<\026\222\262<\006-\t<\370Y\253<\314\370\030\273\233\275\242\274#+(=\356\317\t\275WsU\275C\217\200;i\222(=\236\032.\273\350\206\333<\221\231\207<\202\237*\275\222\315\302\273\307b1=s2A\275\324\267\302<\272\324\236\273\242\253\003\274\003Jz<#\241\271\274b\'\255\274\377n\216\274\356\320:\275\223\016\037=\"\016V\275uy\337\274/2\266\274s\320\226<Fv\230<\321\376\031=v\347H\275\030\031\244\273\033_/\275\220%\020;\370\302]\275\004D9;M\002_\275\215\320\234\274.\271\032=\376.4\272\252l9\275h\245?\275\200\247\017\275\210\\\036\273\366\200D<n\342@\275v\311\235<3@\242\273\225\021\030\275\203r\007=\356\316%=\265\205@=r0\305\270\226\336\017\274\033ER=\265\200:=\206.\\=\232\t\305<\320\310\233<\320p\270;\216\353\021\273h2\372\273\277\n\331;#\217\022=z\024\370;\211\2449<\221dF=\212\250\367\274\372\211H=#\256/=\2563\017=\234zN\275\263\337\016\275\004\235\'\275\244\256\214<\n\310\031\275\240\352S=*\007%=Q\233C=\253\272.=\223w\303\273\216\361@;\243)*<!\0343=jg\304<\271q\244\273\212\\\351<\017\006\320<\1776D\274\216xB\275\020[G=\320\321\327\272\006\351\224\274Y\233$=\271K>=\270CT\2745\021\035\275\235\364F\275F\344\355\274\243\305\253<\244\227\205\274\340\230\233\272\345\351n\274\031`&=\026\300Z<\232#O=\311\037\004<\235?$=\024\375`\273\312\220\205<W\026R=$[O;cZ\'\275\261\020\211<Y\232\031\275\177\016Y\275\354s\375\274\241\352\363<\223\\w\273!R\r\275J\004D=\265\303L\275\324\316[<\014\271=;\343\001H<\357W8=F\\=\274?\025\2649\234AP=\247&\365\274g\330\t=\n\300\373<\255\260\261\274\275\332\210\273|L,=\277\353{<\177\300\376\274\232L\261:\r\225\r<M\002-=\335\227+\275\240\204*\275X\312H\275\026N\313\274\344\020\033=\265\242\237<\324\031\031\273\0143V<\203\343\276\272\313\222.=\355\217&=0\303m\274q\327X\275\034\300\3729\231\256\346<\350\272\253\274\347\245\014\275\376\314f<\237\2274=(?\301<K\200\002\275\374\322\206\274\222\021W\274\032P8\275\306\tw<\321$1\275_\217\022\274\331\360\0137X?/\275\r\220p\27408\366\274C\374\247<1mX\275\253\210\006=!R\236\274#?\001\275\222z\251<\350\326U=(\200\'\275\253\216\230;\340\240\326\274\364\204*\274\365\220\"\274\256W?\275\302\276(=\306\317e;m\366\214\274\214T\247<\361\014\200<\231S\227\2749}\322<\t\201\336\272<\3102=:g\277\274\270~\320<W\355F=7\260X=dz\030;|\375-\275%\302\327;\270\357\324\273\355\302\013=t\3552\274\0134E=\036\344\357<\334\216\377<\323\025\"=\375\2517=\360\346\002\275\036\3407=4\355G=\244\014\264\274\024\263\035=p\010F=^/Z=\r\312\266<\370o\033=\316\024G\275\271\002\031\275\360s\373;\327\013\264<\240\370\025=[\230\242\274\351\215:\275\362\330K\2754\355\033\275O\256I\275Z\344\033=\177\313M=\255U\266\274\002\3028=\253\370Z\274\212\311\276;%\360\331\274V\002\n=,,\025=2\\\334\27488&<\367`!\275\222\021\004<\243 _=[p\227\273C\200(=`IU\275`\006M=$\354E\275\337\343\316\2745\377\007<\255t\004\275\242#.=\334\205\007\275\316\314\206<\213i\351<{\241W\275\377h_\274\363AF=8 \022\275\301\032\203\274\266\256\025\273m\200k<\0339Y<\0331\t=C\023)\274j\347\013=\027dB\274\206\232\200<x\251S\275\023\325\203\274m9t\274\223\350/=\021\210\021=\247\023\244;\252L\255\274m\003\215:L\024\305\274\246JL=7i\250\274O\311\025\275\274\274N\275\314\001D\275b&\016=\236\014F\275\235t\002\275\t\331h<#\351\216\272\000\343#\275\333\262\007=\\\021\032<46\010=\241\311p\274BU8=\026\365Z\275\035\030\025=\357\370#=\367!_=\304\013\267\274N\2256\274\224\325\302<\004\357\346\274[\236:=&\002F\275x\375S\275\037\222!\274\013\352I=@\006\275\273\371\325S\274~\363\267<\334{&<\013\341\'=Ay\n;\037p2\275f\345\020=B_\016=\220\300\341\274O\254\235<\270\352\375\274\245!\341\274\205\224F\274AXM\275Y\2760=&\021b<DCC\275\367\354\373\2740\200\'\275\237_\024\274V\273\000=\367+\311\274*mI\275\367g\n\275\324\226\n=\330\364=;\310\025\n\275\370CE\275\352!\356\274+\322J<\316\223\001<\351\034\246\274\324\363y\274\267J2\271\210\036\360<\376\365\373\274r\326)=\332\000\036\273\3665\354:\023~\027=\352\203m\274>\006\332<\311{M=O\257l\272\024{\310\274O|\336<\306\227V\274\355\250-=\250\230\353<\324;\216;\275\274z\273F\257\377\274s\357\322;\177\000H\275\201\022\351\274\345\302\236<\364\275\317\274\302\322\000\2759B\350\274h\311\206\274\024\321:\275\036\352A=d5\261\274-\350\026=]\352G=\232y=\275\333\0215=:\353-=&!\304<\245\225F\2744\365\341\274\220H:\275\213\237\351\274\375?\301;\305\353\244\273\1772G\275\247\323\240\274\217U\233;\006\367\216;\001\005\214<\021\237W\271,\351 =\240\005*=\311\002\233\274\265]\243\274&\0352<hU\203<\270\303\\\272\367\007\273\274\272`\010<\356\205\353<8x>\275\302\000U=\220\335\201;Fi4\274d{\010\275\252\031\367<\227\275!=\352\361\361\274\300\374\n=5\377B\275\004\023\003\275-a\243<\003Y\251\274,7f<g\222\\\275T\245A\275ek\326<[\026\206<\005\270\276\274J\317\350\273\265f\353;\315\337*\275e\321%\274\300\255@=f\351\341\274\001\327V=\262\313\023\272\017\362\027=\265\272\376\274\313T;<\000<\201:}Z\367<\n\214\247\274c\242T=\033\224;=\247\252$\274%-\363<i4\304\2742w&=(c\331<3\345<\275\370\354\334<\244\316\010\275\330\333L=Z\376\025=\371s\230\274\010\353\030=~\036\361<\000\005\030=\311\002X<{\362\331<k\032&\275\256\210J=n\030F=K\201_=|\302!\275\313)\021\275^\271\237<\372\227\354\274u\330\033\273\024\303;=\0016\010\274.\315\251<\361\251j\273o\\\341<\256C,\274\246\366Z\274D#\267\272\317\214[\275\017\261M<k\215\014\275r\0131=6\326<\275\251\t\006\275\000V\247;\224\343-\273\r\254u\274i`K\275\375\266:=\371\225+\274\354\004\037=\016\254\"<\270\004\244;\224c\023=\001\374\215\274\305\306H=\032vE\275\224\205\010\2759<h\273\377:U\275\330]3\275!*\370\2746\264\033=+\314+=\324\252\032\275\377 \255\273\377\275@=\240\300-=?\235\014=\257,\260<\325y)=<fT=\224\250\356;5\303\242<-\373[=\023c]=\2767%<K\000\247<\362w\243<\214;\007=\367\"\363\274x\246\373\274\355%F\275\006\225&=?\237\025\275*&\322<?dM=\222~\234<\013\356\243;\243[:=?\277\230<\254\276\211\272*\177A=\341:;\275:1\206<\312\356\030<{\274\312<~w\336<\234\035\236\273\371\364\247\274\033a\247<\321A\205;c\256\353\274Y\264\264\274\\\3670\275\010 Y\274\031\223\353\2730\003]=\2127\271<\370\300\025=\302\017C=\224\025>=\243h%\275?\000\305<\315\035]=\335\314 =w\233\364\274GQ\344\273\354\036\021=C\263\027<\211\237\256<\033\022+=;\354\177\274\n\3247\275\333\327P=&r\010\275\315\262\233\274\314\321\000=\221N]\275\206\356\276<~h\243\274OZ\337<\001\n.=V\326M<N\025\305\274\032\254\227\274t\306\357\274aD\345<\r\3763=\325\223\367\274\266\371\212\274Ox\306<\213)D\275\323B6\275\0357,\275\327Y\301:\276\010T=\323\037\365<D`9=a\024=\275h\024)\2753\373\323\274%\256E=\250\3256<\360\020l\2749\246\000\275W$\354\271S\0303=Y\223\000;%&\010<\320\034H=\250\336[<\021H3=u\204E=\364k\222<\237\326\237\273\300\220\355\274\310\222\374\274\023]\377\274\005fC\275\226\020\270\274\365\336,\275Q\222\000=A\0307=\004&:\275[V\367<\203\315P\273>\252\345:\230\272?=b\337\021\275\232\254\035\275\351[G\275\377o\\\273\214\275-<\370\3363=\022\251\034\275\023\215W=\177\334\264\274\n!\031\275\211\226\360\274H\352\300<\2206\r\275\036\300\253<J\001\037=7\367\221<\305\222\177\274\020\220P=\3744>\275\327\322\010\275\"\014\n=J\026u<\227\020\215<7\262\357\274\002\264\360<&\207D\2755\222\362:\341s)=\010\000G=\232\232\232\274\227m\273\273\265\260O\274\312\326\016\275\214?\363:\3704\010=S\021\032\274\334\2448\275\342\032I\274\3623\217<V*7\275\026\231L=\263 \306\274\242*\205<A\2257\275u\336\332\274\235\035\037=\365\225\277<\375\375w:\323~\332\274\260y)\2752\013\264\274\255\301\304;\204\351[\275J*\023<\344\341\320<\025\357\324<Yr\221;\323(\\=\213?\350<\201\224\000\275\237K};\257+\025\275\23179\275n\177\242<U\343*\275\021\"(\275\305\037\232\274\372\357\347<\30156=\370x+\274?\252B=*!O=QD\t=\364N\023=\355\\\037\275\327\322\354;X\355\000;8\351z<~\2448=mmT\2758\355\314<\026\274\014\275@l\245;\334\356\336<\210\317\247\273\033\\\t\275vX\020=\235%\266:\210f+=\362L7\275\021\327\r\275\237\002\\\274\3406\202\274\251\256\241<\212\3259=J\n\004=\031\t\003\275O\235\310<J\317\315\274\221\206W\273\325\263\026\275\034\234-=5^\253\274Gf\342\274\255\017\362\273\006\'\242;\n\227\016=\255\227A\275\271O\007\272\025\013,=\252\326\022=\214)W\275\217\211\201\274N\001\202;\244+\t<\000\3400\275\310\210[=\212\257\363<R\027R\273\345\330\'=\036<\261\274\302+\021\275\3437\\\275\225\254\247<\355]%=\202\010\305<Sw\371;\351\324,\275\336\013\307\271*#\n=\221\2744\275B?.\274\224\3353=\\#\205\274e\350\325\274\023\307J=\\\036\333<\215\364\243<pU\217\274\354w\255\273r\320\022\275\273m!\275\312c$<HPe<\215(4\275\263\342\314\274\304\252\242:\245\252\337<\334\005\315\274\207\212 \2750<9\275\211,\017\275\0073\031\275\230k\014=\202\372\003\272\214\301\345<\307P\306\274\203\377\035\275\275\020\035\275X#\002=!\221:\275\217\263\003=\021\352@=\341(\331<:\235\005\274J\350\276\274\277\001\312<\010\025C<\016\362\205\272\273\202*<\372\353B=\260\257\023=8AL=\271]Q\275K\265)\275L\3709\275\314\341\030\275}\324\371<\377*\030\274e\200W=\376r]\275\326\376E=\351\373?\275\214\365\254\273\360C<=]tZ\274\027:V\275\233[K\274\322\032,\275Q\202\255\274\301\"\300\274\\\264\301;\212A5=\245\014\320\274\024}\302\274\344\3643\274&\303\327\274\275\2109\275\356\'\317\274p\204\342<\235\314\372\274*\203`\274\244\322\321\274\211%R=F\333M=\341;\205;\033?#=\337\311]\275\035ZA\275\345Z\223<\343\310\341<\021^\020\275\335\007l\274F\202\205\274\206\020\037=\034\222R<)Z*=\202\344\036\2759\272~\274\225|\214\2738\203\032=P\204y<\370\177\200<\371O\364\274?\375\255\273^\275\032\275\271\237[=kA\027\275\346g\021=1n\017\274\221\025:\274\005\352\022=\327\"u<\327\237\002\274\251iD=\220\336>\274]\356@\275-\".=\005d\230\274y\n[<\014\2605:\312/\007\275\243vV\275d# =I*Y\274\'\213\007=\001\032\002=\276\021\3138\027\343\000\275\262\3443=D+E\273:\240\200;0q\031=\351\213:\274g![=\371R\372\274\360\203<\275\240\375\265\270\363a\\<\266\023\013=\216\360\377;\277&\006\273\277\302\360\274m\303U\274\210\025\024\275f/\361\2740\315#=\360a@\275\t$\311\274\240\253[=p\364\266<\323\013\212\274<S:=\332\304X=\'\341\312\274?w\262<\367\314V=\272QU\275\332\374(={*\334;\345SI=\223\257G\275Em\201\274\235V>=\210\210\345;\331@\360\273\367L\317\274\341\375\375\274\302\347\263\274\317U6\274\270~+=\357K\346\273[\032Z\275\013+\241\274\035#Z=5f+<\014\001\360<\204\325\310<gfZ\275I\264.\275P\361\243\273\245\310\313;k\377\212\274\225d\365;\367W\305\274\016\262;\275[\241\364\274=\230\322\274S\376$=\324\274\026\275(n\"\275\376\"\320<\237\217\342\274\267#G<\271\024\025\275\301A?=\332\206R\275\032\307>\275\370\330\021=\003\013\203\274\273\262\205\274\276\345\313<#\032\374<\202\257\241<\350G\327\271\366\327#\274`\0146\274\007L\032\273\371\310%\274\366\004M\275\037\247\260<\253\200{<\267p3<%\001F\275\240\247\322\274\375\371W\275Q@\242<]6\021\275E\t\"<&\375\326\274\361\026\201;\247\'\037=\"|]\275\202BQ\272?\253\346\274\340Aw\273\336[\372<b\337\352\273\233P\336\274\263.M\275!\256O\274};K=\371nT\275`\252>=\351\001\2246\027)V<Q\271 \274I\251,=\251\020\243\274\376\265\002\275\327N\227<\033o\220<Us\275\274\364\257\203\273\273Z\007\274\227\316+=\266\377\233<\255^1\275\347\035\034=\035\344^\274G\312\026\275t\001\346<\336\352\230<\257\311(\275\036\221\010\275\316zI=Q\315\262\274\270\355\245;.\227(=\251$<=\310\265E\274;h;=\305\373W=\034o\214<P\025@\275.\323\273\273C4\247\274\323\343G=U\214\377\274Et\3119\t\023\"=J\350\225\274\360/\210<\31396=\317M\216<\263\201G<\020\005\"\275@\236\213;kF\267<\370\201==<P\361\274\350\314$=\007h\271<_\361\004\275\215\\\027\275\2707\201\274\022K\214<\364\361\265<\263\263,\275\030\001%=\212V_\275?\372\313\274\214\342\306;\305\207\314<}\232\001\275mo\313\274n\2724\275\035\374\254:!PV=o`!\275\266\220K=\344\327\006\275\355\335V=\222\375>\274\372aB\275\241\325#\275gv\024=\373\260A=\333\027(\275a\004\376<\331\205J=2y\241\274\370\257\302\273\350@\204\272\346\241Y=ndI\273\276\253\206<\326\342/<\001\'8=\346\016-\274e\266\222<IS\236\274\261\327\013<rM\353<\007\0068\275\302\253h<P\235A\275\372j\0329*\036\013;\314\337\016\275u\013>=\373%&\274\t\362\225\273\345)\371;\333n,\275\211\267E<\334\232\223\274\235\334\255<\272\363\373\274$\246\'\275\271a+<\031+P\275A\223\034=\236\3072=\333K\320<\305\336\241;\232\325\352<%\355[=\035wI\275Q\214T\274e!\005\273\347A\267\274\212\252\003=\256_@\274~\367\343<%\252D=\017\352\000=*\"P\275\244\323\325\274\250q \275\330\304\200\274\022\330P=\201\223\016=\nY\222:\202\000T= x\256<\272\325Y\275\207\377\000\273\354\026\251\273\215\024U\275eKP=\244\277\032=^\347L=\"\351C=\314\324z;K\304\031=5\233\351\27275\357\274\331\271f\274M\207^\275\\\006\020\2756\223-\2751\010\276<6\304 \274\2322\033\274\'\n\034\2754\006\246\274\032\204d<\200\320\271<\n\321\244<\363\256\033\275\204!_=\371[\035\275\304b@=\267\252\201\273qi\201<V\230#\2756b|<\355\252\021\275\214\360\341;\252\345\000\275t\t\\=\351\367\014=\320}\345<K\341L=c\034\251<\323\207\275<\207\250\006=P\345#=\335uL\275\343\371\312\274\000\236\\\275\257\026\206<l\027X<\\EX<BL\236;nU\006\274_\036\262\274^\314P\275\240\341(=\310\244==&&q\272\212\\(=K\210\272\273{C>=^\277,=\262\242/\274b\207\"\2750A\347\274\'\002I\275\267\214q\273\216\2221\2756\347$<\361\3704=@\345j\274OJ\372\274=6+\275h5\217;\034\341w\273\317\240\246:\234\205\355<\232\265H\274\214\343H;\337\210\367;\027L\317\274T\267Y\272]\014?\275\341[\321<\021\203\244\273\003\335_\272T.\r=\357\000\025<\271\303$=6.\310<U`\244<\315#c:\366s\233<\370>\250\273\t`\016\275\352\257j<\3311\345\273{\315U\275:\023\310;\224\246J\274\274\3410<\256\312\230;9\014\036=\330\222-\275\335R-=rq\356<~\3203\2755Z`\274\035na\272\250\354\275\273x>9<m\2179=\004\007\357<w\020\020<\342o6=\2209\326\273\035\277\251<\275\316\262;\204\322\334\274\252\243;\275\2140\t\275\242\266\216\2734g\230<\021X\016=\252\305C\274\222.\212<\037$n\274\321H\004\274\226\003%=8\252\024=|\032\031=\262{@\275\016\327(=2\267\034\275\223\216O\275G4%\273\370\237>\275k\334\372\274\311C6\275\277\001\003\274z\037\313\274\rr\017\275\\ K\275\202\003t\274\273v\212<\340\332\356\274\223\376H\2757\235X\275n\264,\275\250\035L\274\214\263\373;q\347\002\275\004\211\006=>\274]=\t\021W=(\036\031=t\235\017=\301\2216\275}\257\017\2758\377\002=\354\226A9z\217\003\275\233\261\033<\307YZ\275\372=\340:Ba\302\274\203W\235\274\3428\302<\333(\341\274-\024\365\273\"_\025<\230\311Q\275\031\016N\274=\241w\274\321\273C<\344\3627=\215\256\217\274\034\202\036<\205\037\366\274\376g\016\275\234`Y\275\370YJ=\250\257\026=\352\355\n<\301\373\315<\231\332\032\274\337f\226<j\212J=~\322\341\271\356\201V\275& Y\275)\355Z=o=\002=$L\220\274\032\230\010=\251e\020\275\245\203\372<W\030L\274\342\301\026=-\252\030\275pP\274\273\027\022Z=\300\264\346\274r\234-=0\316\247;\004\030J\273\253KC=\313\3075\275\337\337\300;S\362\007;\362\357\014=\376\273\366:>\370e<>B\362\274\200\330\370<\331\205G=#\001,=)\223\t=\0136\374<\342\')\275\307\3050\275t\235V=s&Y\275f!C\274\300\223=\275\323~[\275\3042?\275mD,=\270\350D\275#\254\273<\n\277\317;\3759\207\274\236\236B=\250\320\240\274\256\220l<\237\211[=\367,\333\274\002\r\250<\342:\333\274\344\237]<[Z =ng\031\275D\223y;Z\234M\275RPR<>\032V=k\244^=\006\014\366<Z\363U=\303\241\'=8\362=\275\355\377R\274\332\006I\275\221)N=\344i\346<%\006_;b\313\234\274\013\374\337\273\252;\340\274\007\273\303\274\'\215<\274\255\243\002\274}\327\\=\014uS<uIr\267\265\227A\275\252]\230\273\230\371\211\274(\252.=\246\303)=*\363&\274\004\002\022\275\262\307\377\2733\342\005:\241\276\224\274}\326Q\274\253\333.<\341^6\275\374nZ\273\357X@<\333\225\212\274[\243\361<\364|\001\275N)\226<\377\220W=\r\200\037=\212\346&=E\207\333<\217[\370;\023\336s\273\021\363\032\275\245\353\247<\345/7\275\330%X=\334W5\275\341q\034\275\010q\001=\221\333C=\377hZ\275wo\347\27455\013\275\265{\007\274\373\232\204\274\322\025\331\273k|\203\274\001\033>\275;C\200;iJ\220\2747\224V\275\n\365;;1X5\275u\024\352\274\241\202\341;F\271\003=\315\024?=\340\215\212\274c\331X\274c/\376\274\001\247)=\243\367r<0\227\345<\336\373\262\274\260\262\362<\022\200\310\274\302\337\261<<m,\275\353\374X\275\222f&\275\345\371A=\001\021\017\275;\356\037=\207\374\266;k\370\227\274jD\017\275\223q\266<cK\276<}d\267<im\300\274\331\372Y=G~\004\275\243\035\334\274\017\207F=\244\000\323\273\365\273U<\236\235\356<\237@\326<\35477\2740\324\032=/-?\275rI1\274::\237\274\03392\274\357\032r\274\031\255\232<\004\243\374;O\317\303<&\346V<\010\034\373\274\211\024\242<&\nL\275\306\003\354<J\250&;%\210\033=\313\306?\274\226\222\304\272\226\023\270\274y\317\027\275.\265n;2aE=z\3218:)\331)=4\2177\273\243tH\275\227S\201<}X4\275\036LK=\351\021\315\274\002\273\025\275I}%<\330 \021=N\225Q<}\033\347<U\r\240\274}|?\275j\010\201;E\361T=7\'\225\274\\\220\033\275RX\210\274\241\307\t\274\320\n\314\274\001\311Y\273\265$Q=\232\351\350\274\336LV=\250\222!\274u\td;\027\315@\274\334 \035=V\212R=\377?F\275\3640\221<\r\2072=\300\025\345\274\201\267<=[\363\244<\325\370@\275r\3473=\222\320\300\274k\270\232;\007\250\\<O\016\032=\321\356\344<\355\035Z=\321\210\203:\257\243=={-\002\275T\255y<>\225\251<\003Y\215<\323d\013\275|\013\375<\233|\377\274\re!\271z\225,\275Y\246\'=\361\321J=\365\350\002\275\244\301h<\2566Z\275\3034\321\274\367\337\361\274=\232\316\274G\036f<5FT=\3102\000=\001\267\330<>\247)\275B\327*=9&\233<\302>I;\327O\272\273\363\374\276<\307Z\017;8<1=\362@\037\275?s\n\275\303\031E\275Xe\266\273GQ\354<E\335\205\274:\305\014\273\277\022E\275\374\003v<\265\025\233\274\330\033\240<\243\335v</x\'=\\&[\274\372\224*<\r\362\350<\020\221\311\274\312js;a\354.=;\367G=\233\263)=k;3\274A\006P=9\347\035=jq8=\363\254\257<\031\327;\273\031&\205;\002}\352:\345\005\"\275,\346\271<\331\370\377\274\330>\2259\020N\262\274\355\324\266;\020\203I\274\r\265\035\275\0279\360<\312m\000\275\354qO\275\010&?\273\034\022\244;\274\\\306\274\370=\030\275u`x\273\260V\013\275\343\225&\274[N]\273l\227=\275\212\341;=\227\303^<\3755$=\246\'R=\330\314X\275p\371\251<I\\>\275C\373\345\274\321)\322;\241x\276<\254/s<\265\330Y\274\256u\033\275\365TD\275\003\350\006\275\253\377B\275H\024\244\274o\351\302<\242\360]\275r\341 \2752X\216\274w@D\274\260\345\007=\231\203g<\343(\205<\020\254\320<\233\023\267\274P\336\305;\200\004\311;\246\302C\274\007\013\036<\264\"\266\274\317\345W\275\315\004\276<\364c\256<\316s\336<n\211\226\274$\245P=9\352,\274\313\344\362\274\034\3710\275u41\275\353\231\336;\252\001^=\347\021\020\275\273\246\364<y\244\r\275\021\216\231<\235lD\275\233\276\'\275\022\246M\275\353m\275<\264\013[\275\010\203Q=\302\344\201<2\032K\274.\362\323;8/0\275BH?=\304A\261<\307]\320<\246s\346\274(\241\316<\375\023\274\274O\366\276\274\017Gq\274\340\315[<\030D\362\274\222g\214<\334\327\350<\002e.=\232\277,\275VR\021\275\375\3410\275\nU\347<\223m\n=i\220\226\274\326\2710=\337HX\273\376\325\256\273=K\226<\320e\016\275\006\032=\275\r\224K=\261\312R\275ro\033\275\270;\277<p\240\030=(\355Z\275<\t\230;|f==:\231R\274\265+\271<\037{\r<\331\241\021\275OG\371<\307\036@=~w\025\275\226n\\=\305E\307<v\275`<\020\243M\274u\315#=X\013\324<\020\215\356<\217\312\277\274\213\257\013\274uz^\275\230\334\272<WD\005\2752u^=a\010\311\274W\016Y=S\346\340<\263\315\310\274k1\007\275\336\021W;\264\002\327\274\342pv<\311\261\225<P\364\364\274\263\353\004<\000\320\326\274\'&\277\274y\272\"\275z}\217\273\237Q\227;@\207\031\2747\335*<g\271\236\273\367\002X\275\241\215\310<\272<\375<\354,\244;\217\n\177\274J\024\245\273\254\361\n\275\267\213\007\275*\352$\273t\253\307\274\225\377\303\274\006z\021\275\004\352\034\275\262\322\372<kx\004\275\027k\244\274\2608(=+\221\031\275W5\220\274W\276\222<\276\n\277;t_\r=\333\214Z=[t\307<\263\313\007=\370\206Y\275\207\243\305\274,\372-=\2745,=\341`><\207\3024\275g\201\371\274e\352\377<\r\306\362\274bw\220;F\254y<\367x_=Y\254\002=\007l\227<m\221\234<R|\253\274\000\310G<\216\226\363<0s\005\275\337s\202\274\250\3326\275v\346\213\274\352\236\n=\355\347\330\274\356\2545\275Y\323\003\275\271\253\232\274\230l[\275v\213Z<\345\221\013;\373\252\272\274\017\302\355<\362(\243<\203\232\242:\214\271(=R\357d\274$\022\214<C>\223\274\241 \274\274\367o\202\274\0000%\275\375\376\024\275\227\022\235<\245TD=%+\345<s\240\n\275d,4\274\366a\267;~u\275<Zd\262<s>\311<D\026\031\275k\3441\275\020\227\020\273\223:\037=\361\014&\275\342\216+=C\204*\275\024\370\306<W\224\034\2748\002\016\274\217\307\374\274\343\342\336\272fa\037<\226\3168=\020;#=\276\362I=\001N\"=\2164\314\274\317~I<\002\022S<$\251\032=\341\246\005\275AU\030; wM=W\253\260<\332`\\<\370(\341\274\030JB;H\3330\274\341\245\257\273\231!\313;\0302\327<\222\235\360<\2166N\275hu\321;!P+\275\n\202\250\274`\000\376\273\200)>\275Y\022O\2757s\246\274\334\3131=\251\361\014=\251m^\275(\272X\274\342\210\346< \365-=\353\266\007=-C:\275\003T\004<]b\323\274\271\307\002=<7S\272\231-2\275\013\347r<\255\370\361\274\230\301\373\273h&\2648\261\301\035=$\216\252<\206\257\020=$\222O\273f)\026\275\247\245\240\274\320\262f:lL1=\275f]\275\214\034+\274n\312\037=U\353a<r:\343<\272\202\33185S\030\275\236@\350<\345&0\275et\245;\360w\344\274!NN<\271\376\373<\245q#\275\331mF<\327`\003\275\330\225]=\276\331\275\272\361\226\216<d! =\321\362\031=\020O\375\274\341\343\314\2738n\316\274Z\360\365;\344\253L\275r\335#\275I\":=\363:\266<\335B\235<\202\220X\275+\323V\275l,\017=\200\264\301<Sst\274\343\001\367\274\230\205\277\2734\247\226<\236\0331=\227PG\273\217\336\315\273\233C\250\273\261D_\275/\242\013=\022\316\300\274M\363J=\257\335\"\274\212\204\224;\021\304\251\274i\202\265\274A\035\343\274\201\225\033\275\033\372a<,\3074\275\243\036\241<\032\177\033=\244[\"=\340%\245\274\341D\031=\314\234\017\274\033\314\\=\0325C\274n\362\270;\242\341U\275\211\216\'\274\377\224@\274$e\353<\r\355 =\371\205\225<{\367\342\274]\375\r\274\274\343\370\273\370\327\373\274X \360\274|\2557=\303\250\367<\347\357\276<\'\342W\275\016\377?=\027\346\331<\253\210-:\243\220Y\274\257p\242\274\352:\311\274\362b\005=\031\362.\275\244\023\333\273U\022Z=\031\217q\2741yP\275m\317s<\177\376o<\364\2416\275\214\023=\275\247\362\271;2\2154\275X\226.\275\232G\362<v\316_=\365\366\037\275\305Y\337<Dy\210\274+\201D\275]\225\362\272\030~y\274\001\252]=\024\3439\275\264\277\333<xl:\275\022\016\031\275\261:\306\274\313A\032<\266\272/=W\254\262\274\364\233\257<\201\333$\274\021\263\324<\006\242><\347\0174\2754\310L=r\312\330<Q\3041\275>\345\270\273\3023\224\274\301\000$=-\003!=\271\225\027;N\356\217;l\037t\274F\034\033\275\3136\026=\340TT\275B\\N=\201g\327\273\206\002X\273\323\234L:\030NO\275\345w\340\274\314\246C=\305m\320<\234yk\274\240\247\334\274\252\340\223\274]\326\004=)\254[=\316\231\013=]}L\275e\354X\275;\214\034<\375\317\023\275&\322\273\274\375\230/=\0250{\274\302\2318\273{I$=\337E\252\273\333U&<\362\003B\275<\317^\275<\257G\274i\006\336<:a\266<\005\326\017=\233\006-\275\322\327\273<M0r\274\204\311\n<\364$[\275\244\346\303\274\2125:=[\2678\275\274\211\332<\240j=\275\036~p\274\001f\254<\361^\026<\020_\020\275\032\020\222\274kk>\275&sU\275\266\006\360\274\360\243><P-W\274r\375 \275\3477\253;\007\355\005\274v\361\264<\366\242\034\275=\317\314\273j\'\377<\\\353J\275\016G\244;\234\255<:\007,\021<HxN=\326\302Z=\306D\n\275\277\021\221<P\272\031\274\2617\031\275nK\\\2759\336\'=\303\021\325\274\316\233\241<\345\332\373\273~\2315\271\2641D<\003\177\226<Ma\314<?\034J\275\2705\254;.\002\363\274i \r\275\202&3=wn-\275\310\356\"\274%\271\r\272\253\203>\275\234.N=\343\227@\274\270B\027=BTL=$c\217\274\245\025\026=\273j8\275\310\014\033=V\261\025=\001\361\027\275 \372X<\326\333%=\307e\032=\236c\322\274E\3274\275\236=3=\375\267,\275-)i\272\263\236\014=\217\036\000<\372\372\227\274=\350\033\275\373G\007=\230\352A\275\310\347\232<Bt\250;U\244\n<\237\017e\273\356\266\321\274y\227e\274\033\254W\274\222\033\277\274O\350+<\343^Z\274J\007\321;\023\265\303<\034\013\014\275\030\302\365\274\307fC;=\217Y\275e\323*\275\364E6\275\230\324\027=\364\007\261\274\324\367\000=\264\333E<\2629\\\275W\367\016=\204\363\236\274\351\305\037\275\332\340\007=\350\275%=\215\255\311<X7.=lZC=\311vF\275\276\320\'=\251SG\275\256\350\022=C\301j\273\014\236H;Mm\355<|\316K\273\350b\036\275\225\370\272<\215\255O\275\302\232\034=\2115z\274\002\245$=tGR;X\322w\273\347\240\3749\315\305\226<\n\016E\275\215T\342\274\002\031\004\275\356\315\356\274\2249\301\274\033\345\r=\347\217\270\274\230\204\013\275&P\026=\020\364B=FW\360\273\233\3748\275$Z\344\274\360\0176<(t:\2754\262$\275\243\224\326\274qB(<\000\025\"=$.\271<\016@F\275\3233\336<)U\035=cU\036=\347\025*=\364\325b;\031\031\226<\351\345]\275\002\332\374<SA@=\317A\004\272b\204\022\275\221}\212<MK(=\350^\216\274\273\276K\275\320\3071<5\314\311<\034\376\243\274\204\311Y\275\2174_\274G\026\023\275?\322\315\274I<\303<F\307=<\303\210*\275i\'\037=\260\344\310\274\007\361\004\275\224P+\274@\345\200<\263\207\252<J\236\007\2735\352?=\203:\273<\327\222\312;\252\334\367\2740\002\215<\316\357\235\272\021e&<N\214Y=\274\351\035=\355\255E\275\311\313\024<S\316\022=Sr\365\274DN\204\274\375n\002\274Tj\265\274\214\2235=\322Y\202\273n\205/<\003}\016=\376\364\023<q\'\024=\3168\326\274\365\031\307\273\361V\017\275\177\377\231<\241:\020\275 \271[=\300\023\254<\266\345\006\275\361\031\017\275w\207\336<\347\264V<gX\226\273T\260\354\274f\232y<J)3\275Q\376\340<\3601\027<\365)K=\270C\372\274D~+=T\353}\273\211I\022\275%p)\275`(O=\001\316:=\2629\010\275\241\233\327;uHx\274\242u\365\273\356\230=\273\352\222F\275!\230\r=\016\010\355;\347\264\254\272-g\211\274V!\245<k-2\274\037VJ=\335\245\233\274\210\350F\275\000\325\003\275*z\213\274jT\010=\333{4=\303\304\017\274:\336E<&\235+\275\254\334\036=\027D9=6B\005=\232\241I;MF\273<\350\200\037=\364\033\010\275\004\302\367<\306\356\030<\014\207A=:\207\234<\257/\374<b\230\370: \005\322;/\026\213<J\207P\275$\004\"\275\016xS\275\303\263\371<.\231G=\010\254\344<$\246\310<&\026%<\316\325\322\274:\023\037=V\372&\274\215\242Z\275}\326\311<\374}C\275\342\331.\275+\014<=Z\005\372<\201\203\242\273\220\241\003<2M\217<\034m\252\274\251jY=v\024\363\273b\223\027\275\371\030`<@\216\321\274d\336\370\274\207D\241;\206\355P<\354\230\367<w\333\337\272\245\342\020=\357\247C\274o\207\027=\265\255\032\275\346+\272<\035o\343<2\035\233<\034n\321<t\252:\275B&\200<\377\177\024=\006\206\265<\204R,=Hb%\275Y\307!\273c\021*=\301\316\021\275\365\300\235\273^ O\275\235\013\020<\264\324\320;l\2243\275\350\277?\275 >\227<&\266\'\274\036\277\300<\310W\217\274\210\276\013=r\301\221\274\312\'\274\274\3673\372:\344\341)\275A\247\362\274\352\257C=\207\215S\274M:\023\275@S;=\345\3750<W}\210\274\313\224e\273\377\234U\274@R=\275\02312\275\341v\r\275\036\324\267\274\226\205d<\237i\336<\003p\372<\247\n4=\022\247\261\273h\321/\275`\232_;|,2\275F@\236:\242aK;W \030=|\3762\273\360\031\"\275{\351\204<J\347\306\274\004d,=\252\211=<\016LE\275\240g]\274\033B\001=\235\246Q\275\007\004\316<\234\024%=\312\361L\275Le*\275Y\276\211<y\035\034\275\232\202\230<\367\006\311\274\204LC\275n:\357:#M(\275\243[\221;\256\253\223<\222IL\274\311\366Z\275\331\"s\274\207\n\212\274z\244>\275\264\330\267<l\013\363\274\267&1\274Y\006~\274\035f\205<\265,\r=\342\237\263\274\032\206\334<ENQ=\365\240A\274\247\276\201\272\300C\021=@\355\'=)8\033=sq\234<\343kn<\205\277\027=\\\317&=\325\320\034=\256\265\316:\033~/=<\267\205<\213\231\224<\253zQ\274\226\335\t\274h9\235<\300\032\344<s\252I<\r\271[\275\351y\205;\277 \203;C\272>=\003\222\007\275\212\2252=S\'\242;\242n\032=Ee\310<\360wF\275X\320\201<\3052\322\274A\300\246<Eu^\2759o\227\274\254\307\024\275o9\270\274i\032\177\274dXd<\371D\033\275\'b7<f\205\010=\036B\321<\311\331\013<q2\230\274\327a\341;p\212\234\273\330\216\263<\264{!\275\033\257I\274 \374c\273^\207%<\213e\320<\231\307,=\340\330<=\252L\017=\r\014|<h\233\202\274\014_Z\274p]O=\375(\236\273+e\021\275\374t\264<O[+\274\2665\336<\362\t\020\274\220,\275;\371\373\'=\301(o\272\232PP\275N\351\335;\3755j<o\236\242<\267tw93\211\264<>\322\033=\341\376F=\334H\303\273\013\032\264\274\3458\023\275Su\000=\265}\331\274\252r\007=\307\361\341\274\267G\030\275\262\202\322\274\177W0;\227\236\000\274>\303\222\274\302Y\210<\001Nm<\240#\017\275@\203\324;U{\230:\326\327A=SS\343<3[C\275\367\003c\274\274\205E\275 \241\250;J\000E=f\002\014\275s\313T\274%\252\023\275\200y\"\275w.%=\210\274\327\273\367 \014=\217\223\227\274\nf\365\274\262\311\323\274Dv\026\275\376\370\352;)]\017=\307\373\264<\246\002-\273\245\215\265<\311\350\340<6\312\226\274\275:6\274Zi\367<;\255\233;\037p\231< \324\262<BZs<\340c\302<\010\230<\275a\275\\\275h- \275%\330\245<\332\233\233<*_\'\274Y\360\033=~\205\304;\207\365\331\274cl`<o\017\325\274\023\032G=Q\010\277\274Z\232\"<\030\224\021;\366\250\267<l$R=(\026\006=\246\237Q=1AW=!\207\346\273\201\201\201\274&~L\275/.\037<\325[F=\304\213\374<\345\233\257<2\002\214;\327s\027\275\004\272\315\274cq\013=\2040\204<\313\033\036=D\325\324\274\316 \275\273\t\007-\275\375W\365\274\242B%;\217\233\017<\034\331L\275\303\026\004=$,\324<*\360\257<\201\304b\273\241Yz:Lx\"\275\"\355\274\274[R\037\275H\364\355<e\247y<wxE=\221\302\331\274\321.j\274\221\307#=\\\2477\275xF\361\274\327\354u\273H\236\227\273\303\211\241\274\223\035Z=B.V=I?0\274\230\001\240\274\001p\333<\365\336\201\274\223\267\304\273\335[\206<\215\325\325\273\225-\235\274\025\342\t\275\232j\205<T\024\326<\303\272\010=\216B.<\321\373\021=\365\nA=\346\3558=\273m\324<n\\\213<u O\275\250\267`<6%\270<-F\251\274\370L`<#\255\010=\214\003V=\336\273Z\275\006+\025=\350[\340<\342i`<\325l\337<\241\2132=\364\230\177\274y:\305\273\\\271\023=\230i\331\274N\036\217\273~\332\332<W\202\n=\361g-=&\225N=\325k\035<\344#\013=:\021`;\251\272Q\274j\346H\275\247c\271<&p!\275\204\326\252\274\335\n[=\306$\337<\315f\\\275\311\337\232<[b\007\275\202\343\003\275\301:\375\273I\264Y\275bUZ\275Jo =\375SB\274c\000\342<\321\230\367<\246\212\034\275g\017\332<\362i\306\273?<>\275\337\213\352;tnD;\265\317\360:\366uC\275\356\256\332\274:\237\003\274\373R\'=k\350i;\225\216\272;\\\333\017=4\025\315:\204\275]\274\342\3356<\243<N\275\311\\M=\303\030\223;\222n\225<\206\231\244<\300\350\265;,7|\274\313`\n;l\201\246;\341B1\275\324\023\303:!-Y\275\344K\267<\007O\353\274\335\340\035\275\023\366?<\032eC9cz=\275r\237&=Z\241_=\346M\335\274D\r\221<1q\036=\367<)=S\246\014\274(`\017=\325\240\331\274\214\254\266<d\345\206<\234\330\021\275\244\264\021=\355\310-\273X\223\256<\025\375E\274\312XY\275\013\315\321;\222V\';\025\n \275r\340\225\274W\032\2529\021\322^\274\265t\243\27417.\275\262@\272<~r\252\274\037x\226<MkP\274`\265\272<A\364\032\275\223%\024\275\213\034\034\275\222\357\357\274\317n@\275\211\2340=\n\237@<\001\r8=L\313\211\273Z\226\030\275j\3703=\264\3547\275\341\271\303\274\026.\005\273\223\346\272\273\361\337\025\275I\325B=\n\227\256\274\343\267,\275\216\005\275;\006u\217\274C/;\275Vg\016\275f\207O\273\016@^\274\0019I=\n\340\003<\371\364\001\274\312\277\310\274\317r\346<\216P \275\342P\004=\251\272\002;\250\177M=\214@\'\272\"\013=\275\214\036_;\034\271\037=&g]\275\003\251\233\272(N =b4O=oWL<\\RK\275\246\242\006\275\003(\\\275\0302\300<\357\035F=\362dT\275\214|0\274\340\000\005=\016\320\231<e7\006\275r\261\220;\262\336\270<\235\315\'\275\301\240\344<|\324\251<\211\013\204<\221\013\352\272\025NJ=\025p4=(&0=H\032\361\274\031\274!\275`\305\023\274\345\210C=&\324\036\275\275\360\343\272\347\034\253<u\250\354\274\213\230Y=rwX\275\022\275\313\274\037\321\216<\025\3050=\356c\320:\256oC=O\352-:\360\211\347<Gf1\274\351\311S=\203\246\276\274!e\000\274\244\251\376\274s($\271\362\275\331<\362\3635\275\246\264-<\201V\316<\276\372\036\275\004]\236<p\200\016=?\'\305\274\033(\367<\254e\302<\334\271C\275\t\010\371<\336\303V\274\307\351@\275\262\310\203;\275\236\032=5\3017\2756\263;=\341\315\033\274\247I\331;\363\215\346\272\031\263\202;\033a\275\274#\022o\274)\327x<F\310!=\223\004Z< \215T<or\242<\213\310\014\275\033\r\004\275\356\330\245:B#Z\274{\262;;\310\334\200\273\014\213\022\275\033\247\204\274\331\337\026\275m\022M=\352h\350\274\307n\321\274\274\003y\274\016M\375\274\036\331S\275y\225Y\275\357|\265<\'%E<\265\337&=\245\307-<^\322\265<D\006\223\274\325 \373<b\014N=T\3428=<\\+\275%p\000=\271\202y<\373\rE\275\236\301\300<J\361\300<p[\025=\261@\376\274.\352\017\272\027\345\335\274\277\356\036\275\005\035\212\274m\353$=K\220J<\237\n\222\274\r\324\032\275\365q\030\275H\376C=\233C,\275\236\345S\275\333uZ<V\260\320<R\205\"=\221\333\267\274\\\346\027\275\355\\U=?w$<u~8\275\255\nO\275\024n6=\275\247\271\274\"\242\204<)9\272<%s\201\273u\217\266<(\027N=p\367>\274z\023Q\275A\312Z\275\353J=\275\353c =!r\210\274U\376]=&\3161<\257\211\343\274=*G<\205\031\000=\334\n\235\274TR\242\272__[\275\364\017\227\274\022\036\354\274(\374O\275\322o\030=\367\2663\275\375\271]\274\201jS=3\033\374;,\001\251:Q\034\031=\340\2457\275\277o\257<\312d\000\275w\n5=\246%G<\035\"3\275\377\303\005=\177\233D\275_\227\232; ]6=\007\330\312\274E-F;\232\013\306\273\202\250\310;\267~\347<\350\334_;\306\342\202<y\304\310\274\252J&<&\266*\275T\336\001=w\362^=\264\260\035;\240!#=\202Zc\273!\013\305<\3551+\275=\t\335\274\023\021C=\010\342B==\253\317\274\312\221\253<\010f\301\274\253\263\026\275^Z\025<\013\307\325\273\273\315+\275\245\372\230\274\252\254Z\275\276\217M\274,\364\350\273\2733\t=v\034b</\365\2418N\204\177\274`-\034\274\261\241\206\274\\o#=FzF\275\222\005)\275^#E=\211\307\r:\346\313 \275\313\310\024=p\316\006<\367H$<s\226-<\237\034I\274#*\241\274h/\354<\362\213O<\337\212\352<\033\023G\274w\032\\\274\035F\322\274m\357\266<R\247\024=\233\347\t=\262@\352\274\002\244\252<7\344\344\273\363\306\007\275\376\207\003\275P\302P\275\354\352\276\274\303q\036\274\n2U=\354=F\275\254\361\235\274\0310F<\252\'\032\273M\006\337\274P9\317;\306\272{\274\3554v<W\206\027=\024\344?\275\355\364\365<\350~>=\316e\360;\317\003\037=\344+X=l\031T\275\023Q+=x<\035=\222\351\204<\036]\261;\310\342\017\274)\221\337:\350\235^\275\252\346W<`\300@=\014\212\350<\320T\202\274]s\273<\373\215\233<\224\362\016\2759/!\274\014\335\362<\3010\242\273\265\257(=\333F;=\364\204%\274\222\013R=\254}\036=\327L\222;\200BS=.\345-=\024\225\000\275u\310\237<\250\335\236\273P\321$\275$=\232\274\031\177V\275.\0241=\332\374\004=|N+=\325\266.\275\022\271$\275\324H\257<\020[\2479\254\031\034=\310\237\327<\n@1<I`W\273\312\327[=/f3=jJ\205\274\017{j\273 \300 \273hj\036=Vu\r\275\314\342\221\274\273\221;\2750\010\032=\320G\220\274\264\304\277<\207v\224\273>\336\331\274\267\267*<\201\r\t\275A\2762\274\217u\032=\375^N\274[\322\034=q\014\016=c\370\305;Z\003\362\274x[\024=\232\2563\271m\265\002\275\345\025\201<\357\237\207;\010\222O=\221\270\021;\337{\002:\2106\261\273XB\';f\355:<\254!I=\262\t\036\274\375\207\242<\362\021\"=\036\214T=m\246*=\317z\200;\340dp\274\006]E\275l\265\032\275\t\376\016\275\350\306\241\274\371\220+=\023`\010\275JPO\275\013\324\332\274B\0100\274\376\361V\273\257\270\203;-n\232<\253?\245\274\t\025\024=\377\031\036=\341@+<z\236\214; \323\235:w\274\302\273&U\310\274r\233\037=\377\350-\275\230d\037\275\227,M=n\302A\275\252h\241\274CH\272<c\207\325\273I\337G\275EOn\274\201\256P=\304\223D\275[\243\037\275U!\317\274;\265\031;x_\326\274\342\037\'=!L\236<c\177=\275g\301\357\274\271\000\n=\313\3568\274Z\236O=\320\226&\275v\215\020<\241\344x9n\357:=2\240U=-B\356\271\025<1\273\3738\217\274J\207>\274\271\033B=\250\2751\275\211HO\275h\272\243\274F\303\210<\374(>\274Z\260\t\275@\242E\275\267\267+\273\342\r\360\273\250\252\335;Q\021\377\274\364:\020=R/\\=Fg\276<\235=\344\274\332\251S\275_\255*\275\254\241.=\243$\370\274\204#\332<\013\373\311\273\345\320\352\274\r\303\023=\351\332U\2751\324\260<C!U\275\367\361\365<\303y\007=\367LY=\311xr\274\312\037+=\n\346\036\274\320\"\016\275\3614q<\260\304(\275M\363U=\022\220\324<\237\335\027=)\200\331<\021iV\274\177\033\212\274\202\222\236\274y\301\203<\271\2208\275nM\273\273\215\227R=n\024\266\274\025\303\202\274zf\035<\ny\364<\033\340 =\343G\306\273 k\034<\220\210\007=l\370\271\274w\005\004\274\330\3379\275\265LK=\221\373\014\274Zu\002\275r\223\315;N\333;=:\210\271;\270\324U=\244y\036=~\324\276\274s]\246<Ko\251\274\247\301\005=\341\301\004\275B\325@\274\264\305W=T\311K<\304\233\224;\n\276\202<\314\212;=\357\345\005\275W\303I=\016\326.<:\331x<S\236\r=--\224<\247+M\275\250\375]=Jog\274\034\372\374<\004\260\212\273\214\231i<3\2010<\262\213H=\350\252\001\275o\377)=4L\'=\2004\262<\361\314\274\274\244\002\367;\342\005\014<-\354\232\274\267\345\021=H\375]<\274\302\247;\267\214-=\3314W\275\203\004\275<.$\274\274\027\326E<\250\352\037;D\363^=\016\016]=g\357\202\274*x3=\233\367\272;b\264[<\002\023I<\206\343\005\274\361\331u\274\205A9<\337\373\375\2749\216\017\275\230\177\267\274F1\022\275 :\217\274\300\035]\275\332H\33271\251\240\2733\237\302\274J\2729=\013qW\274\342\317\026=\253E\242;\372x\027=&\346\037=\234\356M=\251Y@=\356i\200<\360\201M=\022\307C\275\255\016\260<QU\275\274\245\315$=\3047G=_\273S=$WQ=!\240:\275q\020\205\274\035\3334;\221{I\275\370\322\375;H<\245\274\274%Z\275\345T\034=\323\255\025=b>-<\232#P=[Z6\275<\264\361<\212 \003=\315\tX\275\256=\024=\215QC\275}.\004\275\270\307r\274V\367o<\003oE=\207K8\275\345\221\253\274\367p\356<\031M/\275\3644\037\275\21384=z\036%<s\332\266\274\014\237\304:l0\277<\324\312\276\274\376oP\275\200\264\026\275/=\361\274a\204\035\274\204\260J\274\265\240\324\273\365_%\275q\203\211\274\244\007\332\274\336\323\030=|\004\353\274H\303R=\000n\001\275\260\203\256;B\010\362\274-\017I;\317\217U\272\204nV\275\333\3418=\321X\210<\346\nX\275/\025C\274>\2129\275\261/\\\274\361\365\203<;\327\344\274\247\n\202<h9\327\274K\344\215<\232\2409=y]\\<\214\246\013=\206\014\027\275\276\305\223\274:\276!=\304\232\217<W\t#=t\317\241:w\317\316\274\3261\211\274(\250\375;q\001\364\273.\005\235\274\002\311G=\205k0<\316\322B\275_\tU\275\232\230\376<\224\033\300\274n\331\"<.\335\375\274<\"\017\275.\037\037=?\020\033<8\3445=\342;B\275\315\375\014=,\357j\274x}\355\273+\203U=\207\361\306\272\265\005_\275\325{\346<j\031\023=W\235\261<BqS=}\237\221\273\306\342\333\274\233\372K=\034/2\274;|\214<\321)\204\274\314?\227<\303\205;\275\266\t0<6+\302\274X\257\370\272\363C\365\274[\2034=\277\242\311\274a^B<\355\230\334\274\253QE=\372PL=D\027D\275\321\371\026=l\242\255\274\372K\200\274\344\257%=I&\332<\r@,\275\023\033$\273\234\346\361\274\311\\#\275d\371\247\274\225x <\350Fc\274\017\242|\274\372\362\367\274\375\236\325\272\345P\033\275\001\214\014=\250\303\030=\355\0236=\360\211\\\275r5\004\271\320\373&\2752t\353\274D\2176\274\203\256\256\274R]\315\274)\350%\275[BA<\273.\262\274\371P.<+\332^\274DKP\275\254\320\336<\350\215P\2752\0072\275\226e\013=O\364\\=Q\327\n=J\336\277\273\025\333\225\273\027\375\270\273\261\327\212\271f\367\003=\235\236\016=\255\271]\275\372\005m\274u\237&\275\t\004\301\274\211@\020\275M\230Q\275etM=: \005\274\327CU\275\034GQ\275 7\222\274\236/d\267--\266\2742\023\r=\225N9\275c\261`\274\262\003\277\274\343CG\275\307\017\017=%u\026=\241\375\243\273\267\276E\275\205\227\301\273\375+\313<5\3729\275\275\212\"=\024N\263\274a\237T=`\2011\271\026\247\336<w<\034\275g\235\030:3\021u<U\220\274\274\267w\342\274,\304\364<\272uC\274\221\013;\275\'\262\252\274.-\226\274\260Q^=\234\352s<s\332\000=s\345\217\274\2754@\275P9\2629\267\337\357<\276\356\005\275\200)?<\006\2631\275\343\260I\275\000V\t=A_\240;;\'V<|R\035=\"\301\224<5E\002=\271|\273\273B\217\257<\201z\035\275\376JW=\001\000\352\272\206N\364\272\360\346\"\275\242\2678\275\234\276+\274\375\224(\274\216\024\300\273\002\311\250<ux:=\021Y\n=\030\215\231\274\364E\244<y\024\273\274\'\177\001\275\234\023\033=RB\001\275d\236E\275\270\220E=\274\261\267\274Bw\004\275P&c\274g\0108\274wk\225:b\233\326\274\241!\276<\001\035\264\274\242H\323\273z]\223\274\224\233H=O\031(:\321\277\324<\335\3240=\001\205M=\344\252\204<\000\214\003=&\337\276\274a\371W=u\371\244< ;G\275I\377\034\275\344\364N==\372C\273\205\0063\274\313\346\342;g\201\334\274\252\300\010;@\353\313<\314\3549<Q\002\025=\225\353\212\274\2168p\273\362\306\027\273\215\2378\275\274\211\376<jA]\275\220K\245<Z\234H=\n\007\370\274\316\222I=\361\3745<\351eK\275I\373g<\3038\002\275\017s\025\273-;\001=\"9\272\274\346j\276<\224#\354\274R\3650\274\305\375\362\273\251L\256<\004\330\005<\003\313\326\274\177\271\201<UD\000\275\244}T\275\177\"T=_\256 \275\263\264(\275\315\324@<1A\325<\273\177T\275\341w\325<z[J<\037\3551\275K\277\016\275\346% \274\336\002\321\274!\235;\275\215\266m\273:d8=\231\023\365;\351\226I\275\253.\244;\2245\311<S\030K\275\334\325\241;\265\013\254;\236\262<=T\302\002\275\370\327\025\274\025\035{<8\036\267<\330\307=\273]\033z\274\361\2172=\212\0340\275\266\315`;\362\266\223\273\327\n\343<\360\243\025<\2069;<P\350\037\275\017\244\240\274\270\216-\275\221\335\000=\037V\027=)w\344\272\3065)\275[\370[\275\356\344\262\274\235\377\007<\316X\r\275\333\035\263<\343\002r9V\323#\275\251z\375\274\340\317U<\"m\373<\330\200\231<\255\247@=Vl\010=\364\024\026\274\237\3107=|\215j\274\225\\\360;\320\230\024=\024\253:=h\033\346<\273\367==R\270H=\261\200\033\275\r\337\t;)\007B<\247\037\020<\372B\246<\305\363\300\273\016\334Q\275\345NP<BH\346\273\230\251\315;\r6B<\375=\037\273\34350\274\037Db\274\037\231\260\274\250LD=\204TV\274\367\246T\275x\354\004\275\354r.\275\'\264\034\274\307e)=C6G=\312\370\014=\245{\'=\315\376\304;\244\347J\275\\\235\336\274W\315r<:\334\322\274n\355\013<\030z,=1\342+\275c\371?\275\r\344\005\275\356\024\200<\335a\\\275~KY\275f\217\357\274+\177\033\275\376u\010\274\255\376\365<\243\2356\274j\303\371\274b{\006=#\362J\2759\312\t\275z\210]=\352j,\2758\360\000=\274\343\323\274\306\005^\2737\316\2009\346t\270\274\r\'\026\275TE\200<\314T\037=\220O\340\274\270\032U\273\036\206P\275\027l\254\274\207.,=E\333,=\254\310\347<\210\022\203\272\206J\205\274t\266\004=\330%\301<\230\243\312\273O\360\347\274\333!;\275\356P\314<\305s\232<\276\304\'=T\013\005=\361\267\222:i.\030=\377ZJ\275G\"3=\000W\342;\014\201/\275|\177k\274P\343\357;!\n\301\274%?>\275=&\037=\022\352\027=\342\343\232\273U\032\321<\350\275\270\273ys\034=o\267`\274!\014\274<B\363\314\273\272\002\377<\005\244\242<S\026\367<\245\016\376<TQ\256\274\302\2326\275\371\220\014=\254\003C=f\3437<5}\017\275\'\340\271<W\tS\275\244T\232<\312\017\270:\234z\263\274}JN\275g\324/=\027\206\211\274\252\271\232\273\245\267O\275\371\226K=\364\2064\275\362A\301\274x-\026\275H\001\331\274:\277W=>F_=\272\"\344<&\215]=\360\347\220\274x\002\307<\034\242\255<\036\323[=\251\334;=,\351I\275aNT:\022\tA=\270\326\034=R\315\201<`W\244<j\204\021\275?\246\220;\227\326\274<\027\361\220\274\177I\374\2748M\006=!\223O\275\022\242#\275{\017%\275\323\000L=k\257\336<\312\344\237<\224\342U<\032\177\217\274\235\320\034\275\272b\224;\201\240/\275\013<\030\271\271\021\354\274:5a<\363\214\354<\254\265\010\274/\205.\275M\273\007=b\214X\275\'Y\003=\332i\254<\361\rC=c4T\275\263M\037=\272\004\304\274:\335R=H\213M\275\245\001\200\272\000\326\276\274\243\336\022=\242\260>=\323^\032=Lq\351<p\031\031\274_\020\323<:+2=\220\221\352\274n|4\275\306\234*\275\344\245%=\354,|<\370JK\275\304\207+\275\276O\233\272\000\216 \275\341\024\013\273w\377\036=\023$\026\275\207\034\312\2733\214\310\274\265\237\347<\270\235\232<\333\3431<S\027\221\274\263\351\371\274\265\235\236<\363\024\026<g\022\357<\350\034U\275)\232\260<\302#\207\274\303\226V\27461\201;\274\225/\274\3611N\274\334x~<z\327Y\275\355\"~<:\375N\275\331x\016=\333a\261<\332\265,\275\022\036\271<@\371\263\274\025sR=5P\030\275\246rO<4\004\373\274S\027\224\274\244\017\024\275\373\376I=\014K\313\274\\9\034=jd\320<u\036P=\330\336\355\274\321.H\2751T)=\363 \037\273\204\317(=\316\3366=\023\243\033;\024>\327\274\002F-\274\352\304\372<\0305\255<\200sC\275R\033\275<h\2131\275\351@\234<\311\003e\274\020\037\027\275?\241\000\275\305\322\323\272\275Lc\274\3162 =\021\353\303<\340\322\234<=[V\275\272D\317:\001#Z=5d\026=pF\301\2746Z\302\273YY\345\274\310\241t\274\350C\005=\023,1\275\343\317D=u\324\335\274t\004\033\2748\250\034\275\363I\014\275\313#\"=\033\2773\275\022\202-;Zc@;-\324\316<\233<\037=\273V5\275\033U\300\274\360\241\017\275\362g\316<Ka\245\274~\374 =\223|\322;?\'\001\275\324\022\023\275\2324\024\274\306S\263<J7\014=7 \t\275U\022\'\274{\367\340<\277\253@\275\260\253C=\272\030\003\272T\316H<\273\335G<\330\003\345\274\036\271\025\275iU&\271\276t\313;\2557\020=x\"\277\274~-\257<u\300\010=+:\257;DE\267\274W\262*\274\335\031\277\274R\036\275\273\"\353H\273XK\026\275\247]\255\273\020y\354\273j\247F\275\313\035[\275\204\201\005\274\325\277\263;b\021M\275E\233F=(a<=B_U\275J!,\274.\021\177:\016\2360\275J50=\267\340\211\274\210\324\\=\032\314\357\274*\326\025\274\346\"\003=O\277^\275Z\216\254:\321Q\205<\321\322\204\274\315-\262\274\2042I\275\307\275X=\261\331P\275C\336U<\372\217\"\2712\233m\274S\254\224\274v\"\013=HT\354<\236+\003\275\017\235C=\334G(=\326X/\272\304\005\201<\020\237\232<\032L\313\274\274\354@=ha\352\274\226\241\021\273vR \275\031\334)=pZ\204:)\203\202<:\200(\274\300\322W=\000\271S=\202\260H\275\034\177\305\274f\2409\274+\312\342\273\324u\314\274\262{;=\037\345\204<\207\260\013=\323\310\033\275\013\257\025\275\370}\035;\215\n\004\275\241\025\214<\\\300\212<\234\361~<a\014\240\273\260BH=b\2230\275\321\327\356\274\001\222\200<\263\320\225<\336\013\000<\366{\347<\202\207\201<\233\354(=\333\302\224\274k\321\020\275\004q7=2\315\001\275\000]\220<\251\010\032=\202\271\026\274!\240\372\274\264\240\303\274D\210I=v\177\373\274r\033V= H\022\275v\2259\275\033\317\247<\307*F<\010\321\t=\022#};\326g\027\275\242\255\'=\370IL\274Z\224\235\274\241\300O\275,\305>=\031\322\201;b\016\273\273\305\004\323\273\305\274\345\2748\354\202:\320\335\210\274\363\223f\274]s(=\370*0\275\262\320A\275\243\316\217\274\006\006\\\275\277\340\235<+T\024\274g;\334<\231\277\326\274\376\005@\275\267\222\035<D\242\346<5$\\=\200\014N<\326\374?\275\001y\277\274\266\023:\275\215\034\254\274\0071\261\274\210xd\274\357\014\336<\224\006\375<\257\345~<!\214\r<HcR\275,g\014<9RZ=Id\304\273\020\370%\275\356\215\274<$89\275\227\356\263\274\031\351S=\347}\347<\275*\337\274\250\272\200\274\352\031\305\274hx!\275\32137<o\016\356<\275d\024\275\\\266.=\326\204\006\275\352\320\010=\370\026\n=\177*\r\275\022\262W<r\004\t=I\332$=\205\251\020\275\265\333W\275\351\303+\275\256;\025\273|\205\257\274\353\264W=\3304\327\274V\315==\2115\333<\356\221/\275\2603\032\275\212r\016=\313\276]\275D\366\006\274\216\310V=\300|\013\275s%\026\274\222\002\337\274\200K;\275\251\022\340<<g\275<\270\352\021=\024n\241\274;\264G\275X\275\003\275z1\324\274\373/C\275 %3=\016N\207;!\214e<D\211\373<;\t\267<\374?\261\274,\021\277\274d)\020\275\014\201\345\273\367K&\275d\004#=@\"\304<\340\325\200\274]i\303<RuU\275?_\347\274\276\330\002\275\225\325O=\331\006\252\273\221\322.\274\355\262H\275\324\213\032\275\234^_\275\017+C=G\273M\275Q|C;s\311!<\\]\343<\256\334\325;X\021C\275\240\034\033=\320B\"\275\261\3277=B.\"\275C\316\034\275\343`2\275\305\371)\275\211\037\006;q\215\027<\221\324_\275v\340@=\215\336F=\255\225D<\234J\261<\000h\361<+{c\273a\221\006=\321\365\327\274J_\026\275/\203v;\273U\007\275\374\301\372;\207\016I\275\363\002\013\274XM\375;X\345D=N:\017\275\330t9\272M\341%=BB\335\273\313\311\337\274e7\350\274\346B\230<s7Y\274\377P\343\274\220\331(=\212j8\272\266\315\364\274\010\026\022=\3131.=\2054\224\274\006\264\000= n\017\275\236\312Z\275\254\364\242\273R\315\203<\312#\370\274a%\323;\327#\006\275S\302,\275\261,\255:H\2219=i\034w<\323\2235\275S\337\'\275\\\006\205\274\340M0\275\020\254\301<\032{\n\275,\210|<O\263\245<\247\300\330\274\256:\264\274\261\331E\275\376%\006=\234\315\345\274[\224-\275\200\324\347<\306\0004\273I\374[\275\202\r\331<\215\235\303\274\235\331\376<\314\375\313<\375V\301<=\243\361;\2137\367::\032\353<\263M(=\242\366\262\274T\326\277<\212\352\035=\341\204\276<\212?\346\273\014\255\007\275#:+\275E\2303\275\316\265\026\275\366\347;\275\331I\344\274A\340\261\274\342UX<\r\302\201\274\371\003\323\274\304\312\346\274=\374\022=\000J1=\2205\n\274N\275\\:M\204\250<J\\Z\275\365\032\030\275\367\202\335;\331%\325\274\321,\223\272\224w\363<?\213\035=s_&=\377O^=\003\335\311<a\275\240\274\313\216\355<\373\353\264<\215.[\275\242G\323<\350\366M\2752*,\275\004-\201\274\342\277\234\270\276\371\332\274\037p\003;\031\2339=\033/*=6\\_=\'z==\027\277\353<~\213\262\273\271\356#\274\275\270$\275MNL=\257\250L\274\206\257\342<\232<:\275i\214\224\274\006\236@;\272p\237<\301\330\022=\'\2074\275\207\324\001=\371\332;\274\311\215\020\2757$y\274\235q=\275\017>?\275\345\211\321<:\234\300<\325MQ=\177X\211<\365\312\023=4PJ\275\220\\\256\274*\3031=\345\001\370\274|\014\002\275H\335{\274\224\352\\\275F\332M\275\346\021G\275.\307\372<\216 \t=\274\3123\274\025\223\317<\362\221^\273lW\322;\367\240\205<\025s)\275\337-\266\274\225\210\352<\200\002\377<\023\225\320\273\271T\023=E\243_\274v\327\233\274w\325f\274\024X\302:Jz\033<\263f\352<9}\001=#\255\313<O\316Z=\317\340\207\274\333\2401=Ds\010\275j\360)=s.\327\274\277<\243<\256R\014\275\351\254\360\274\373\276Y;\037-X=\201!\r\274\326\276\341<}\265@\2741/~;\237\020\374<a\213m9U\247\352\274\2205N\275\027\311\'\275IS\205\271H\365\235\273\222L9\275\256\334\n\275Vd\036=/\210\005\275~\026\017\275\363WF\275\313!\r\275Mb\2009\037\r\244\274\215\236\303<\340B\000\275\204\342B9\021= \274\251\010\260<\322\366\254\274\217\230\304<r)\364\274\320V\231\274\031R%\275\346TF\274\367\036\323;~\021\357\274\353\224N\275\302\222\256\274\037GH\275\251\2548\275\035Q\217<\265\220\353\274\336\245@\275\355\"\312\273\332\3679;\354\335V=\276\256\314\274>\200\035\275&\376O<\032\360\034\274\253\324\203<\0251\301\274\320{\245\274\276\263\027\275\324\256\201<\025\315A=\014\025i\274`\rH<\305\347I\275\351\004\252\274VIS\273\035{\260<I\020\323\274a\202\224\274Cq\343<\365w\016\275\221nT\275\365\340\301<\010_J\273\365.\007\275e\024!\275\234\347\\\275\260\315O\275V\2464=\202\362Y\274\354\3330\275Z\274\330<\023\017\231<>\346<=^\2714\275\266Q\332<\273%\244<\364\257\n=\376\342\014\275{ea\274\352\247\237\274\354\340T=Z\021\017\274\034j\233\274:\003\033\275*BA\274\017V\272\274\177\213\217<\035\370(=AE_\275\323\006\003\275x\0000\274\227\315y<\274YT\275\343b\026=\001\323n\273gt\006\275\334\267A\275K\264\372;\251zW=\257\347\372:\311\r\220<x\271V\275\346\253W\275\025\016U=\352o1=j\367\302\274\004Z*\275\246}\330<uK\230<jS\351<L\262\354\274\247\354\221;\353\2260\275s\322J=\217!\315<\314\010\365<\227\027\273\274{\326\311\274+\312\014\275\213M\016=g\\\217\274\205\347Q\275\321\326r\273l\367\317\2737/@\275\326LK<T\177\005;\002+{<\r3\335<l\006*\275\327\230\004\274\273M\001=\204^\r\275\211\357\377:\0216\364;?\2615;5\037\253<\360$\\= z\267<\334f\003\274\276\277o\274\274_P=,\034?\275g<$\275B\332\277<\001\377&\275\360.\341<7\005\344<\017\331H\275\346\363\355<\302 \221<j.\000=\203\323\243\274\033\324\363<z\305_=E15\275\313\263\027\275\312\017$\275\320\355+\275\362\351\240<J\033\270\274\266\336O=T\352B=\304\254q<\371L\357<\272\"\025\275\242M\031<\372\321B=\364\3467<c\2063=N\006\224<\372\026\244\271\004R\023\271\264\263\026\275Q\213*;\221Az<4\307\366\2745ZU=\242\333j<\024q\t=\234\350\210<\267K\241\273\237\214#\274tA\354<8@\227\273\272\007\206<\355\031N=\022Q\003=\240{\207\274p\t!=\261\304\002=\261\252\266\274D32=\240T$==U\200<\203\254\032\274\270PY=\236\332O\2759Ci\274\322^E\274*/Z=X$3=\033\340\255\273\364\017N=h\037\r\275~\260@=\002)\273\274\240B\301<]\032\013=\306:\024\274\n\347\271\274\234+\231\274 #\230;Os\317<\203Gi\274\336\200\023=V\337a<t\003Y:\367S=\275\017\206E\275\277\304Z<a|\250<Y\323\002=8\324\315\274\375\300,<\206\026>=W\023\213\274\377\264\351\274S\316\017;\257\'\016\275R\207\003\273\274\210\334<6Z\023=RF5\275i\262:=G9I=\233*Z\274\2646p\274oI+<\227\360\304<x\374\037=\370\347\231\274\027\234;=\262m\023\275\210\334n<\255\247V\275B\302%=\362[.\275C8J\274\206\3232=.\325\350\274\374\"\007\275/\340&\275r\313\212\274\001\252.=\277\030\325<{\302\024\274\340\027X\275\3161W=j\003\017\2756\213\207\274\'\177>\275\371Z\256;\203\n\004\274l9\025\274\356\026\330\274\252\254\241;\202\027O\275\364\312=\274\322\243\256\274\210\010\260\274jq\366<\327\324J\275T\021\t\275\370\236\354\274\314\310\002=\275\200M\274\225\023&\274;\367i;<_\034=\267z?\275^k\022=\326i\321\274\3233\037\275J\032\006=Y\302\206\274\244\243\036=C\375\356<\355\262\266<\207\246\311\274~\003W={5)\275\'4$=_\004:=*\334\022\275i\017\327;B`\202<\227\274D=#\262S=f~\367<\327f\244\274\020\207P==\270\307<\261t\371<_\226\032=\333\352G\274iK\370\274\216kT\275y\362\"=\023\000\306\273\013;(=2\243\366\274.\274[\275@\330\033\275\016\200\006\275\234\350\021\274\234y4=\314T\021\275\2309\006\275\325\203\002=\023s\004\274xkN\274a\341L=8\3207\275`\244\353\274\204O_=\340[\300\274\242:\\=\ri\026=\271\253\334<-wR\275{\024f<\214A\031\275>\343K\275a\213S=\206\242H\275-\307\315;\216\351\036;E\216\325<\217@\254\273T\240\031=E\255\234\274\246$\201<\357\372 \275\274X%\275\364G\272\274\'\244;\274:gC\275\210g\242<g\300C=D\253\027\275\023\004s\274A+\246\274\037\020\346;\201Q\024=MoE<\240\344\013=)\032\301<\'\271,=p\223\024\275r\271D=\314\035`\274t\326\237;\273\341(=m\234\221\272\"\010==]\261k:\355\2261=`VA\275\"*;<b\235#=\027\312\013\275\241)\230<\326H\030\275\320\335\371\270\243\344_;\031\376\030;(\247\006\275\002\303a\274\367\027\002=\321\252\256<\005G\002\275%}\312<\332E\026\275@\030\020<\347\271\027\274\206;\335;\360B\247<\246%\360;s\320_<\'VS=\211\221\352<\334\217\230<L\324\210;<\001F\275\250\244\017=\326\005\373<gw\000=\267\300S;\370\245\250\274^\211\254\274QE\340<p\263\035=\r$\342<b\027F\275\362\025\036=_\217\224\272\316\2538\274\3114\355\274\374\311\033\274S\232X=\261{\355\274T\352 \275\217\022\243\274\363\016\327\273d\334\001=\307\002\224\273\374c\330;\361\377\r\275<\346_=sa*\275\315\253\344\274\367\367\010\275H\023P\275@6\206\274y\037\304;Xc7=\\W\005\275\347\364Y\275l\332J\273\323`\337\274\223\0023\275\n\261\252\274+~N\275\332\250a<\026x\317<\t\253\276<j\240E;Qt\257\273H/\207\274JD\245<s\007\242\274\035\2617<\030H9=Il\n\275\231O\311;\370\216&\275\360A\210\274\365z\277\274\020\333U\275\030\340\215\274*I\341\274x 4=\035x\033=\255C\312\274\2530\237\274\010\307\214;-\345\272<\031\225\345\274,7\240;GN\245\273\324\3641=\367\245\022\275\217*\212\273\316\021\330\273\243\340\007=\0308{\273<Z\014=\300\t<\275\231\252\034\275W\273%=\364\310H=\233{C\275\354lU=1\3677\275\253\203\026=\n\212>\274\241S\207<\271\354\353\274\353\204\001\275;\331\033<\365$\"</bV:t$$=\'\340\010\2759\341\032=B\333\035\274\350+S=\037\003\370\274\3626R<\234\200\376<\'Q\035\275_\201I=\\L\246\274\224\300=\274\362\350J=nd\020\275\203\242O\275\177d+<\240\004Z\275\224\231]\275.\257 \275\351CF\275:\260\320<\335\263\007\275l}?=}\026\217\274\263\'\031<\276\377:\274\340\010!<;~\004\275\023\304\271<\245X\033=70\254<\242W\200<\263\210\226\274\346\205\\<\355\224\\=\003O\342\274[\304z\274}\t~\274\364M\035=3\'m\274\254\'M=\t\3149\275\201\204@=\t\242\027\275\231\306\027\274\203\225\323\271+\317-\273\356\357\013=\031\307\366;\320\013\274;\360\342\223<drG\275\014JD\275\340\231N\275\374\"\246<oyA=\267\216x\272L\0359\275{I\376<\243\232\265\274C\327\004\275Pj\245\273\244w\246<\232\250<\274\361\246\'=\326\224\032\275&\317F=ms\001\274\212\rK\273HL\224\273\022r>\275\037^)\274q\257\266\274\0221\361\274f\221\267\274Y\233V\275\220J\235<\330\263&<\027\235J\275v\rU=\340\304\211<\030\314\010=\311c\003\274X\n>\2750\0377<\305\303\023\275\r\215\377<\375b\025\275`05\275\225\'\225\273\207\002\271<q\361A:\324\0331=\255\014\242\2747\\\022=\201\005\035=4\213\276\273\361\010\200\274\263\234L\275\237\014\"=\347\334\351<\242\234?\274\177 \023\275\267#V\275\250P\373<\353&&=\236\330\037\274QCO=\307\316\234\274\237\\\014\275\200)\307<ad\207<\327&=\275\257\222H\275\203)\261;\327\304\227\274z\361<<6\213!=Y\r@\275\246\213\t\275\215\225#=\213\021[=\035*\210;[\217\310<\255\3003==v\n=R6\021=\036Y\217\274\316/C\275\355\325R\275\305\2722=\324\260M:\025\033\211\274\344\2774=\221\t\263\273C\256\021=(\3042<\331<\244<\323\246\022\274o\244\225;\363\002K\275\341\202\031\2758\342\003=e\177\032\273(\361P\275\002\204Y\275?\"\245<\362\223G\275\263\352\010=\303\350\024<\0166\231;C\262w<\254\3202=\303\306W=#e9\273z\377_<\013\3277\275x\226\347<\023`\274<\370\311\344\274\253\361\270\274\363\235L=\370\261\036;+\304\001=lHM\275\335u\031;\312\352]\273\032\332:=\326\3530;W\371\r=\014?\310\274\270\214\003\2754\023J\275~)==\316K6<5\021\024\275\212\3554=\312\241\251\274\354\277\331\274s\273\r=\373;?=\000\200X=\375A\233<\010nB=sH =\322\273Q={-_\274w\360W<\224\226\207\274\261t\321<d\027\206;\356m.\273\000\234\222\272\325\010,\275W;\331\274p\014\345;.D\240<\363\243\237; =\026=\263\0162\275\200=\364:\371\td<\276N\024\275\260\230\371<\201$\000<YM\266<\261\324Y\275\334\212\322\274\017\346\213\274\230\370[\275\374Z\355\274\312\017E\275\266\241!\275\022p\263<\230bA\275\236\272\2779\267\210\031<,x6=K\2210=G\260x\274\375\274\346<\373\267D\275P\340};\321\375\375;\021-\245\273\005\2427=\032\375Q\275\024\006\'<\332\260\331<\377\336J\274\372\204S\275\245\204 =\332:7\275\246\005\317\272\240\276\013\2757z(\271\326\332\270\274\037\t\031\274y\370\354<\001\312\312<P\336\204\274\224\316G\275<\266\325\274\225P\214<\230C\222\273v1\006=$H\347\274\002\271\251\2746r)\275\314}4=v\343A\274\026\220\r\275W\377&\275q\343Q=\271\324\030;*\3158\274\201\246\007\275\007~\016\275\202\314\023\275\240\031:\275\327x\035\275\322\223\300<\363\227\224\274V\367Y\275;\277\226<yG\212;fg\016\275{\036\027\274\211\263\306\274.:\250\273`\003\325<\372\304\2679\224-\252<\341\257\233<\332m\343\274\334l\235<\tg\031\275\262q[\274\'F>\275? H<X\244==\370*R=\370\252\346\274,\177\230<\267,+=\363\215&=M\3075\274\306\310M\275\264\353\341\272^M\330<\264c\213<\211|)=>\251?=\375x+=\203\2709\274\2478L\275\214C\263\274\360R\236\274\342H\267\272}\3219=\317\312\204<\323\261?\275qU\t;\211\373V\2750\275\004\274qz0=T\374%= \301\355\274\275|\276\273h\317?=\002\026\024=\026c\350\274VX)<\341\244/\275\203\"D\273#\243\"=\306W\235\273e5x<\315\356\355\274\017f\023\275\346\313\037\274\335}\034<\213\365L=\353\034\326<\302\204\024\275\202\332\267\274\235\360\000\275@\332.=(\247N:\272\225\007==\007\256<3\2516=}\264\003\275\274\303\021\275\276{(\273\363\334\267\273m\356R\275\243\3752\275\2322\333<FE0=QrF=\2743I:\006\312\022\275v\330\025=\006\321\021=\320\261/\274\264S\016=\253\241m\273R\237\256\2736\355*\275\222\341W<A\rG:\312\301\237\274\310\003\024=\202\"\n=\016f\225\274\334\264\367\274<\213\003\275\317|\362\274U+\307\274jA\245\273\215\222\r\275\211\227;\275F\200S\2757\013Y\275\"2\023=\344\n\300\274\366\002\010=ws<=\315\342\324\274\2405B\275\261(+\274\307:\326<`#D=\362}\222<\256\373};\263~U\275\367\000-\275/\216\274\274\003\201\032\275p\013%\275\232d\233\274\321\2479\274\324\321k<\036j\321<\177w\026\271-\0170=$\325S<\023\333\036\275\324\001\020\275\371\035Z\275f\343\211\274V\335C\274N\177\262<9U\374\274\244\355\r\274C\t\267<\313\336?=\313*X\273\014>\320<L\212\267<G\030\206<\370\032W\275\351\352\016=qe\301\274\024\3273\275\312|\224:\261\352\024=\352b\023=\347\266\333<\264e2\275t\270\320<\332\305J=B\255\t=\276\217`\274\0042/9\341|\'\273\371\200,=\207\004s\274?\2537;8Aj\274\222\352?=\347\016\"\2757\2159\275\305\361?;5\033==\311\031\205\274\374\004\367<\357{\311<\331\267q<\260\232D=\000\277\205<\254\213\017={4\303<\314\304#=b\252\010\275\003\367,=T\007P\275\321\210\366\274\345k&=\310bX=\275)\027\275i\337\013\275\271\017\211\273j\372\000\275\341*\253<\2323U=\273ID\275p\317\032\275\341\361\351<\224\330\342\274\022>\360\273\362\231\343\274\236`\031\275p\367!<{V\311<\345\360\027\275\206\323K\275\223\273\263\274\265lI=\253\245\261<\322\310<\274\252,?\275\002!:\275\377\341\016\275\003L\244<4\037.\275\342Z\014\274[\376\302\274`=K=c\227C=\036\321\210;\345U_=#\3078<\211\002J\275\024\204F=X\325\023;\200#\311\273f\325\363<XVP=\035\344H\275\236\304>=\341\005\320\274\262\310S\275\203cM\275\306#\307\274\206t\347\274S!S<\232\242h\273\0372&\275\334\325\342<\344\363\332\274P\3004=\263\267\022=\016\322Q\275\377\203 \2753\263\010=\362+O=\311HF<\250r\243;\273\273\261\272\306\245(=\006\024\265;\016$F=o\235\263<v\325\361;\204\207<<\223\005J<\331\300F;%\000\006=p\017\026\275D\376n<\014u\016=\213\200\222<\336\000 \274\253\276#\274\033&\372\274Bp_\275\242\212H=\256\006R=\026\0331\275\264\374\227\273\013]V\275\252\342\006=!\371k;\023\332\030\274\233L\377<|e\333<\036\225M\275xZ\350\274D\036,\275\304\355$=\344\3170<my_\275\304G\336<\316\3462<1\230\214\273\365\\p\273a\216Z\275\256\377H\275\030\274\313:\373\263\331\274U\005\305\274\022\203Q=\251\321\013=\201\202\262\274\036(\'=\213fc<?F\024=\317\361\303\274\257u\267<\355\032\033=\n~1\275\217\231+\273qu\375\272\310\260\315\274\227\222\276\273\004\215\004\275pd9\275\251\204\375\274\025\033E\274&]\302\273\343\266A\275\307CM<\307\3453=\363p\003\275\330\253;=P\257\007=3\3728\275-\260\243<\232\214\000\275c,\337\274\252\215\020\274KQ_\275\330U(\2757\313\017=\253\211b\274\345\333\272\273VG,\275\007\031[\275d\315\312<b\2534\275\211Z\264<\375\270I\275\347U\006\275\230%\231<\207\303\252<\305\021(\275tr\"\275\205\031\247\273\024\262\327\274\270\376I\275\330\350\316\274\262\256\026\275\360=U=B1l<\372\205\022=\376\304Q=S\360 =\236U\322\274\267\255\253\274N\333\212<\355\371\036\274\241\024\007=(v\212<\233\0178=\t\306\002\275D\177c\274:!\251<\342\230~;\214z\022\275\023r\007=\021\266\327\273\025`\r=\226\r*\275\005\035\224;;\206\355\274$\023\016\275\016\010\223<!\003\214\274\354\227\314<\256\305\225<\016\177\370<\205\266*\275\356W\014\275\273\013\267<\236\315\\=m\304\007<\236\020\352<e\010A\274\032\350\367\274\272\262\005\275\025{\312<%\347\224\274\264T/\275r\207\316\274\243\225\016=\230\2721\274\213o#=sBQ\275\313\354\021\275\343T\022\275\007\350L=\246Y\276\274\177On<\"\312\344\274-\034%\275u2\010<\274\244\007\273Hq\360\274\370aJ\275K\240\247;\333\342\343\274\233\361/=zX1=w\025m;c\007C\275\210\310\300<\037z\034=\357\355@=7O|\274*\275\t=\242\246H\275\031\342\030<\010-\326<\334LG=\256m>=U}F\275\200\221+\275\351\245\205<b\362>\275J\373g\274\200\243Z<\242\257h\274s6\336\274e\005\241<\026\362<=\003\346\006\271-k\265<39\376\274\263uq:\\\352\355<\255*\211\274m\"\023<\310\343&=\356\230&;&k\367\274\352\200\017\275\361s\032\275*C\212\274W8G\275\022_G=u\246\035\275\217\2662=\2071\024=\022@\240<\005\366\332:\341\331\036=n\254\320;_\355]\275\303\300\t<\\ \354\274\3242\036=\252\336\226\273\230\266w<\'\212F\275\272\016\350<\025\352*<\026x\272<\347\226\326;\310\004K=o\374\022\275\021BE<\306W\253<6XD\274\336b{\274K\304\022<\005\352\235\274\376\210\n<\027\215\3139\346(\020\275\177\024$=\312A(\274\332l6\275\"\030\010=\237F%:S\272\025=\223\3512\275$q\272<\371U\271\274\304[\306;\231\332\261<&9Z=f:\211<M?\032\275\210E\327;\200v\036\274D\230L\274b\006\224;8_a\274t0J\274k\211K=#\023\001<\023\331\200\273\375\010*=\300\253X=S\203l:\275\240q<j\315\275\273\271a\253\274B\355\376\274\344\025\021\275=S\302\273\346s\232<Q\222&\275\225\221V;\305\036S\274\020\334\242\274\205\323\271\274\025{9=3\216\032\273\322\206\3749G%\033=J\002\031\275\276\014\006=\341\272\212\274\216\370\244\274l8\316\274\225~Y=\254\360\226<\316\232\230<O\361\316\2731\362[=~\312\'=\017\315V\275\365\233\315\274\375\333-\275\005\352\222<\306\271E\275\357\246\214\273\341r&\274\236u>\275\253\353Q\272\010\330\006<\301\031\274<\235F>\274F\307\000=\343\021\035=;\005\341<\370PA\274\354|h\274\332\233\231\274\026,B\275\366]\221\273\275-T\275\216\236\302\274 \211!=\177\372\017\275\251\342\202\274\325\326.=L\035\333\274\207\330\024\275\272\366\227\272>X\026<P\3326\275R|\031<\030\243\033=\341\247\277<j<\311\274\225\336;\275\223\300G\274\255&\335;\334\204\247\273\001\342T=T\0140=\220o\037=\245\025\246<\356\004\372\273\277\031\014\275\305\304\306<\037\357\242\274J\301v\272\304\250a;\256\374\'=\354\032T;\314\350\233:\004#S\275 \263\020\275T9\227\274\255\222\205;\035\007]\275G\213\217\273\226\377\230<\341\363O<\362\363\033<,\013p;\354t\027=\017]\r=V\035\013\275\272\265\003<r\n|<x\031\323\274G\\F\275\354fI\275\256\'\037\274\202T\3339l\242`<+i\317\274\262\332K\275\262?4=\374z\313\274\221z\003<AC\241\274\353$\363<g\200K\274\367\177Y\275\313\220\214\273wdU=\3437\373<en\037=\034\002\270<\327\026\366\274\2047\021=g)\310<y~@\274Z\250J\275\240\030&\274\241\3242\275:4\036\275\371\021r;\017\217\373<\031I>;\013\035>=M\336\211<\227\305\003=\001#\323<\244\342T=\302Y\204\274\000\230f\274\346r\331\274\036\337_\275\304\211\003;\003/C\275\021\200\353\274\027t\324<\317\'\234\272\353\247^=,\270\356<u\013~\274,\371M\275\207\322\016\274\023I5\2756\240\350\274Qt6\275\006\322\n\274N\000G\274T\2043\275\357b\376<\023\232\344\274fp\313\274%x\217<\"\243\251<\372\263\355<\213\322_=\000\352\307<\013\242\035=y=t\274\000\215G\274\223\024\031<)\374S=\370\327S\275\225\004\343\274\026\032\251;\026\275^\275E\207\276\274\250\036\242\274H\000\273<\266\3158=\220\304[=\020\213\001\2756\302\330\273\236|\352;\274\232\314\274n\247\\=\234\341\370\274\252|\374\274IC0=\331E\264\274\367\371B\274g\331\000<\277\n\032\275\005j\275;\253\010\366\273\274i,\275\025\002?=\025\244\177<\267 \317<\235\t\316\273\337n0<\341\031M;3$5=\273\323:\274\n7\260<S\213E=L\200 \275\302\030:=\"\217E=LFU\275\021\027j<\346WT\274mW\267\274\3202\321<\306\275\300:^\267B=]\353\037=\300nF\275S\272\252\273\223K[<\205\222\\\275q\235\360\273\321\363<=\344\034\213\274\010S\003\275\37615=\367a>\275\327\203\027\275\234\213C\275\201\247E\275\023\257\265;\327\\M\273ub\331\274\\\250X<\037\261E\275[Lm:\351\267.\275\022s\231\274\217{3\275n\224.\275\2431\024=\301$1\274\317t\250\274h\200\034<\322^m<\374\347\253\274\024+\006=\357\200,\275>\226U\274|l\335;\315\032\336<\316\306\367\272\260\323k;\370_M\275\276$K=\020r\350<\267\321#=_\032*=d\177\026\274\356 Y\2754:\377;\342\325\023\275\215\211U\274\004\274\003\275(\037\267\273\177.\025<\263\247\036<\271\261\020=@\207x\274\026\025`;\334\336\032;\363\353\363<\274[\t<\247C\274\274\305r,=\312\353^\275\333l\026\275G\032x;\372_0\274\220<\004\275\311j\243\274\204/:\2753m\'\275U\326\006<\240P_\275\345\351X=\202\353\010=v\201\034=\205`\322\274<\213<\2737~\312\274\212A\001=\215A4;\213\214N<&\374\213\273\332\323\225<\016\212\t=]h\021\275\256\243\037;\r\214?\274\014V\205\274\261\227[=C\031(=\343!\027\275\'0\034=q\265\350\274\342\037j;i\370,\274?\320\202\274\317\210\026\274\013\016\300;=EJ\275\356\\\202<\267\227\031=\375Y\236\274\007\242l:-Iy<dc\037=\370VS=+7C=t\031\330;R\n\"\275<\330\027\275SK\347<V~\013=`\252\304\274.@\264\2749\325b<nE\007\275\332\302\277\274]\365\027=\031\354T<\376\242\014;<\241\020=x\216\217<b(z<\t}\301<\275\214\266;\006O\270\273\322\226E\275\334\0033\275\215\3232\275UE\206\273\323iK\273\366e\000=\0257\"=4#\266<\007P\\=\362\211\231<\376+\245\274\3375:\274\345\243(<c>\315<\246?\275\274\334\375I: =\372\273\351N\016=\363\313\036\275\344\034\231\274a#3=k\213\221;\332\2410=\333\2556\275\213\352\202\274\204\231\350<\354\214U\275z\266\207<+R_=\005\301N\275\373J2\2746\243\223;\251\222\222\274\251\302[\275\037n\203<\374o\337\272Z+\336\274\177\307\360<\307\305\373:8\260\326\2737E\004=\361\311\373<\357\215\345<\004\245%\275\340&\t\275\255\027\031\275fD\300\274\200\377\340<N\2102\275J\246%\275\024\326\003=2\236\021\275\332\317\335<\316\275\037\275P\261$\275gSt\273\365\3727=\265K{\274\225R\313\274d\240\315\274Z\2546\275(VH\274$\373\311\273^r\n\274\311\310\\=\374\221\367\273\233\217\'=\\O\017\275\2057L=\226\227\243\274\355\331<\275G\035\241;sfM<\237\273]<\025/\332\274\271\237\"=\252\272+=\r\321O=\036[\031=1\360\355\274lx&=\213\2234\274\377;_=g\003\340<\354?0=7\266\200;)m/\275\236\335 =Vy\371\274\035\343Y\275\313\225\361\274\325j\235<Q\320\253<\001\306\014\2759\311\364\274\3220\217\274\231\303L=U\177^\270 \006@\275RV8=%?+;\315\256\216<\234~\036=)\237%=58\035\275\342\334\'\275\034\346\203<L8\225\274^Y\337<Z|u\274\356\236\232\274\204\023\214\274O\231\024=X`<<Y!=\275\005C[\274#\242\373\274\273\245#\272\214\261\225<L\375Y\272\255\277_\273.:?=\316R\323;Z{\355\274\273\231\026\273\n\352\376<\227\'\246\274\2561U<\026\000-=t\334\231<\361\325%<\336\317S\275\202:\250<\377\373,\275b\340\201\2746\276\026<\340\022\341<\257S^=\017\001o<\264\251\234\274\334\273\240\274\304\210C\275\223,\n=\274\350\r=^{\256\274\024~`\274*kV\275\236O,\275e\376\207;\2117\302\274sh\276\273,\347%=; \220;\"T\001\275\355\300\t<%\031*=\233\251@=\361p\034=\177=\024=\350\253\257\2749jp\273\276\216\354\274g\351]\275G\010!\275%r\352<\345\177Q=S\327y<\035\000\024=F\241\204<\306\221E:sD\025\275\307\367Z\272c\026\213\274`^:\275\006%]\275\225$\007\275\332\362G\273C\371\265\274\000\0268\275_\275\343<-\202t\274s\261\241\273 (\030=x\240\357\273\257MA\274\224\251\374;0\215\336\274EZ);\330\320\022\275\371\336O=\277\226w\274\371Y\013=\266/\332<\207\013\221\274\236\271\300<\362{\354\272\325\305g\274\021\3020=\225\224\324<U\334\327\270a\177&\2754\332\301<8\177,\275\371\254\367<\264\214.<\360?\035\275z\347:=\271S,=\317qL=M\364A=\010?\035=\245\220~<\231{\207;+\376\220<\231\265\313\274\354\351\273;\036^\260\273Lk!\275\303\223R=^\224\246;4*I\275j\215\276<|\006P\275\302\025\020=\022iA<\373\237Z=\304\256\312\274\334MP=.\250\272<\270F\255:x;z\274\224\032f<\337h(<r\307\275<\213\317\240\274\201\265\302\2744\223+\275\363\306\245<\251\004S<\3554\375<\201|\322\273^\004G\275K\266\005\275\003\300\357<w~\270\274\304\302Z\275\030\236J\275z\016\310;\216\230;<\277o\330\274\3108\346\274\371\242\200<O\221`<\364[/=`7p\274\226\267M\275AC2=\275\023\357\274\026h\264\274\022\323\245\273\326o\312<\334\021\255\274kq\261\273\014\374\231<2{.=\315\323\271\274XG\023=!\211=<\267\304R=\236>\313;\370\241\322<\373\r(=\321.>=N0\t\275S\377\204\274|i!=\375}\007=\367\206m\274\314\357\323<\341\215\314<i\017\014=-0\000=\346\3007=\377\377)=\350\302\020=\noT=\264\032R=\270\305\001=\035E\301\274\310\r-<\035\033N\275\220@\361<\364}\031=B\005K\273i\330#=\254\377\373<\223\236=\274oL9=\201:!<EO\021\275@>5\2757U\304<\275yH\275\350\346/=\254\334C=\374!\257;>\314\213<7\306\201<\025\373\320\2736\022C\275\020\340\324<\255\270\200<J\212\001:\025\215\335<\304\321E\275\360u\304\2745.5=\230\031\240<s*\000;\310@\032\275\330K\315<S\234\225\274p\024D\275\rd\007:.\213\337\274\300\310\307\274\\\352\000\275b\302+=\244\310\337\274\230\013P=\362\007\230<\335\"6\275\237\271\345\274\357\344B\2757\330Y=\260j\241<Xw\010=\013,\035\275H.\273\273\252N\\\275\217\371i\274eA\026=\252\241Y;\322\200\"=\263G\233<\024\020^\274\0007\324\274\222$\343<(\023C=\003\277b:\235#@=~X\206\273\\\337\237<Z\300\220<,\024\373<\014SF\275\240<\327\274\304\\N\275D\223\034\275I\261\313<$\360\321\274\340\205\363\274+Y\013\275{0\322<?\232==\215\336#=\204\007\227\273y\236:\275\331>>=\262x\"\275\200aB\275\225o\342<@G\234<S\030\357<vf\332;\252U\037<\207\270\017<S\374\304\274:^?\275\3511\361;\374\014S\275L\201\200\2748\304T=\235\277\370\274\275\223X=\2433I\274C\303\323\272Q\t\257\274\r08\275\364\n\026\275\353\225\022=\0317\006=\271h5\275\236fG=\"\236\366\274\274\311\253\274\342\331<\275v\334(<\211\004e<\363E\030=*\004\006;\"g\274<\355\331\234<\272\302]\275R\215\3237\275\222\367\274\375\330:=S\372;=\014\201M=\313\276\303\273+\354Q;\335c+\275\227\200\001=\254.\020:v\255\\\275\234n\'\275\330\324\363<}\355\204;\234\367O=\357s\351\274\316\300\263\273\360\345<<\304\237>=\034\203\037=\016g\374\2721\246M\275\014\357\001<\355f\210\274\206i\327\274;x0</\274\211<l\3712=|\222\303\274\013|\032=up\231;\250\311\306;/\213Q=\347\244\034\275e\265\201;\3320\324\274\003\220\217\274\200\265\021\274h\271\224\274\3143\021\275\251\007t\2740\311k:\241\237\274<!q\016<<\232\203\274bK\230<Z\267\026\275(K\326<\304{\314<\337U\356<\t\376\344\274\003\267\351\274w~$\275\313\310\224;`\260\036\275\321\014E=\260\340;\275:\r\256<\000\215\307;\267\226\270\274Tb7\274\344\2269\275#\244\232\274\346\025\257;x\334\342:\345\354\325<\'\216\016=\010\306\202<\304\263=\275\023\023\372\274:!\355\274)\r;\275\323\200\260\274\311\003\257\274r\207\033=\022\177\260<{\264\223\273\250\252\310<\207\346P=m\213\241<\332Y`\274\347\246==\362{\326<{\r\270<`SA\273\'\350<=f\333,<\254\326\023\275\214\342N\275!\002W=\342\344\351<u\302\t=n\372l<\214\334\020<\264!\000=W\004\367\274\235\201\'\275\201m\352<\260\362O\275P{\306<\204&6\275\370@\016<3p\234\273\203w\320:\323\035*\275\370@%\275d\3263=\003\345\344:\025\035\236\274\373h\013=\212\272\037\275\265c\347:\033\361O=\017\357\354\274\307\234\340<<\037\324\273\350\321\334\2748\2355\275E\304+\274\026\310\216;P\366\206\274\202\010\351\274\261\376\t=]\247\351\273\333\374d<0\237\031=\210\n(\273\340\262\t=\212\017p\274\256\265\257;`\247b\273\302\277\301\274\022\234\240<s\017\023<N\271\347\274\343I#=\242\355\377\273zLO=\207\251w;\321\335\204<YHK\274\025$\2209>TL\275L5\317\274S \215;\335\025%\274\261+\024=\365\260\020\275\211\333t\272\362\301E\275v\216\016\275\351O\036;}F:\275\31137\275\235`\006\2748\263\030=\372\257\014=\030X#\275\352\006\327\273\037\341\347\274\314\252X\275\004RA\275!\353,\275\313\3114\275Q\007-\274\307\344\233\274q^\004=e(\027<\025DA=0\236\010\275\376\037\337\273y\340*\275;Y\213;\\UF\275\301\344\353\273\210K\317<\221\243!\275\":\230<\321\316\020\273\024\261\322<>\034\333\273\243\026\r\273.jC\274E\203\r;\250f!\275c\002\222</\r\";/\232E<\003\027 \275\247\"\327<_\237L=\205Y\302\271c\373@=\206\216\022\275R\231n;\374\225t\274\220&\311<\007\3033=\036\302N=\310f\005=r@C\274\341\216\t;O|\004=\002\3338=p\214@<\241o\023<\302\275\323<\\A\375\274a)\213\274w\002\347:\336\364W\275Y\366A=\306\236\223\274\244\236,=rq\373\274\352%\221\273\352\326\277\273s\214\207\274C\341\240<\010O\214<\302\022\234\273\t\327z\274\345\021\252\273\274PT\273\277/#\273\377\2307\274\366\233>\275%\013\252\274\tx\373:\362@\351\272\363O\010\275W\027\355\273\331\304<\275$^M\2758\345^\275\005[\003\275m\201!=p\224j\274=\250\374<\220:\023\275FnE\273\3504)<\243\025\366< \312v<yma:\316\220.<x\310\032\274\230\333i\272ju\022\275\030q\275<\223\021\004\275\375\005#=\255l\371\274w\347\321<\265\270#=_\010\014\275\273Cp:\220\262\026\2758\224\211<Y\342\t\275\257\310;\273\t\231\034=\237G\013=\262\313\324<3S!=>3\276\274bZ\304\272lL\017=\277a\255<,Ot<\330\2712\275ZQM<2\230\016=\177\222\276<\010\336\014=eP\220\274\336\254P<\220\213\017\275\355\2108\275\021\307/=y\217L;\336oJ=\036X\375\273\347~\036=bG`;\225J\006\275?\2204=\237\334M=jqL\275\374\306\000\275\361\365j<\313\316\362<\032\250\034=\335\273\027\275\272\260\017=\267v\251<\242]_\275aN\310;\031l:\275u\017P\275,\234:=&\215Z=\345U\2678\324N\n=\'I\235;<\370\361<+\032<<\335\311\\=X\376N=8<\220\274\0363[\275W+D\274\026W\346<\320\363\t<c\031\233<,\234\371\274\335!\266<-6j<\260*_=i\337R<C\353\373\273?\003\354\273\257\367\372<$\304\0069\316\004\302\274\264\350&\275\214\260\024\274@#9=\200l\275\273\014\365Q={\355\006=\2175N=\243\274\376<\251\"\310\274\237\227\314\274f\252V<\007*\260<4U?=U\005\312;XQ:=\270\342(\275\351\306\325;ce\240<\273\354B\275d`\342\274\\2\352<\3169>=\363\373\265<\\\325\321<\203\221\013\275\276ya\273K\222\322<\376\3030\273\0046\313<\326\014t<\223\322\371\274F\r\212\273\351\317\373<n\212\020<\366\363\345\274b\222\230<!Z\351\274\243\317\023=\270\200N\275\224E\302\274\312\036{\274z\247\225\274\352x\241\274\350\340\2107d\033r<KZ@=\362\337\202\274_\215\007=u\374\006\275\376\2265\274\343\035\023\275\347\212\037\274\016\250\315\2749\203-\272Q\265K\275\327Q\002=bJ9\275dU\016\275d\354\211;\\\255(;<P\224\274\217\301\264\274Kx\261\274;\271\"\275A^D\2751c\225\274a\246\224\273\234\004\\=sT\006=`3\025=\023!\353\274\034\363\210<\244.>=%\233\000=\313\214\274<\302\375\302\274\000LP=\311\272\270;\033Tm<\352C\\=A~y\274\313&M\275N\004<=\000\257\353\274\252\035Y<x\251\366<\\\013O\273\336A\312\274%\2306\275\373n\302\274]7a<,\253\216\274i\014\211\2743\342X=t:\334\271\3569\211\274\356Yq\274\355\317.;tg\257<-\226\231<\373HA\275\224\305\024=830\273\030\026\035<\003o\251<\300)a\274\201\024S\275\255*\354\274\260o\255\273\200\255\024\275\024\374\014=4\203X=\rT\237\274\"\220 =\225C\261\274\217\241\2749\341\366\373\274R\206!\275\311\2638\275\222c\372\273\317U\030<\277H*\275\010\",\275\356\333x\274\006kJ=\250^\361:\206\374z\274&\222\026=\324`>=\036\377\255\274#\254{\274;\3157\274\375\"\013\275t\023\317\273\202=\277< \020\031<\304*\"=\2710\001\275J\356\247<\365aK=!W\350<\355|?\275z-\277<Y\010,\2756b7\275q\231\005\275-7\037\275\t\364Y\274:\233-\275\334\263\006\2736(\271:\232\235?\274\267s\n\275\357\254\254\274\276\031\310;\216*\323\274vv>=\327\217A=\361\004\024=:\231\304<\216\006\010<\211\3544\275\326\014?\275\250\363c\274y/\254\274\272\200-\275`.\376\274}>\236<p\317\222;\304:\233<\034W\031\275\177b\347<)p.=\010`\021\275dT\231\274a\344\235;\276\372u;\243-\331<^\224\313\274\326\203\253<\261\361\331\274\376w\236<c\365\034\275lQ\320<^\022\371<bU\341<\243\210[=\r\335\035\275\276\230G\274\266\n_<\341?\023:_\2351<\206\350\334\274;;Z=9\340J=dj\001\275Zp\211\274\247\2146\275=\350\235\274Z\005>\273\313\334&<V\245[=<\003\327;\023\006<=\221\352\254\274\305\365$=Mn%\2758X\361\274\357\032\272\274p\233p\273sH\367<\341\177\037\275_\275(;\304\243L\274!W\307;g\017\357<_o\224;f\301\004=\264\007\300\274\235\234\216\274\375\367\037;\230FY\275v3%\275\003\3063\273\342\275&=\325\371Y=\331\020E=O\367\244\274\341\3465=\306\026>\275\253\031\337<\30732\275m#\370\274\222\232w<\250\212\375<\0105u<A\272\223\274u\000\316<\321VJ=\036\273\034\275/\233\356\274LX\331\2741z>=\027\177\235<i\334,=\344\0058=v\'\374\274\001]\014\273\024Le\274\0215N\275\365\010#<\317\223\275\274\026\337_\274\376`\363\274\3433\370<\202=4<\001fu\274Z\331\377:.\376\023\275\342(\026=\326\237\034=\005\265s\274\216\255\343\274\317l\352<\253\357?=\007\344w\274)w\270<\035i\027=I\302-\275\236\371I;\321\233@\275=\021\346\272ZsV\275$0\271;O\231\\\275\272z\035=\343?\311<\004\307v\270\3448\037\275\001\244\207<\232\244\330<\263\311\360<\321\234\244<u\370\013<\344k\037=\361#\031=\321\021&;\252\205\311\274|\224\313;\332\251\001=t\0003=\301\373\374\274\275`T=\010\027h<\321,L=\237a\031\275\\\201\267\274\376Y\343\273i\n\325\272\261\217\377<\253\304*\275\216\000\273<\024\227&\275\267\230\305<\217\301\022=\367\266\027\274bD\346<#\027\230\273\277xE<Q@\035=*\020\033=i\002\037\275\205{\372\274\324Z\224\274\252\355\002<C\220T=\345\030\236<+\211N\275\027H\005\275\237\006(\275\217\234P=\342\3238=\323v\362\273\021)2\275\006\177\315\274\257\276\265<\331\010\n<\232\257\325<k3\262<\334.\013=\177\2478\275YcR=#\031\343<\267\2132\275\207\037U=\347\371\341;\235+<\274\t\375\271\274=\331y\272!6\365<t6\214<j\300\361\2734\243\300<\220\034\020\275\'\222}\273\350\373\010\274\0259\211<\355!O=HY1\274N\217#\275S\017\016<\203z\312\274$\022\240<4\276\344<L\005\025=\270\032o;\003\024M=\021\274K=\233j\321\274\307\037Q\274\361\251\334:^\205L=\362\016^=\217Q\265<^\330K\275\024\3757=\246\264%\275\327\307\004\273\"mB=q\'\242\273\303\373\006=\322\215.\275\023\355\235\272J3\021=\003\261I\275\212\356\222\274\221S\210;\350\240\202<\256\210\262\273\343\005]\275b\377H\275\322R\305;\016{,\275\013\215\014\273(R\r<\217(s\274i\010g<S,\237<\216\204\033:\3411\212\274\3630\235\273\372+\t\275\254\374c\274\\\r\300\2741Z\006=R,\323<\216\224\263\273\340\252n\273\343\207\245; [2=\346\202\346<\'\376,\275a[\317<\226\010Y\275\302\001t<\311\002\'\275#>\034=e\2436\275\030\321\234<ra\203<\326S\371\274\247\001\312<\010\362\206\272\225\304\363<\3314{\274m\0332=\273\257\276\274\312\302\300\274V\251\330\2741\303.\275\366\256\027\275\026;\244\274,\177\350\273f\317\\\275\001\2460\275\016\036-\275a\311p;\257\332L=\021\310\036=\316Y\244<\2727\310\273.l!\273\'\227\345\273\272\307P\274\337V\'\274NSL<?\202\370<\314\315\360\274\000\036\003=?\336,<p\235\331\274\016\374\346\274\016\225 \275\037\023\272< }\226\274_\003\303\274\230\206\375<u\236\356<\324\333Y=\007?\235<3\025\352<\237<\200\274\312\307Y<2\377Z=2\231\256:\017w\320<\2346\367;\332\241\322\2741Q?\275LT\206;\375\325\234<\212lF=\353\035\021<\274\277W=\232\372\325\273(\304R=\"\367G=\223\367\003\272\302\356\335;\307x,=\022\326\241<3g\302<\340\3721=\232|@=\373\277\360\274\013\226\232\2740\017O\275\330\311\317<\027b<=JHW\274\265\323\243<\301\276\360\274\217\177\320<>\300\n=I\002\026:R\035\304\274\340\344\032\274QCG\274\330\271\325< \207!\275\310\217\017=P\206>=\341\352I=~\032\030\275\223%\356\2745\005\006<\273\n\327\273#\300\005=\\\372\343<\224\212\037\275\245q\016=\004\036\354\274\251\360\300\273\377\327\t=\"A\230\274\324T\345<\334\200\036=\035N\311\274\336W.;iJ\316\274\312\325B<\006\255Q<\016\034\030=\370MV=F\310\014=\033\206\241\274R\217\303<\245\370;\275I[\374\274<pY=W\231\336\274\026C\374\274\024\326;=\335\345(\275\037\347\\=M\023o<\260\277\303<\017\203\013<\272\305\010\275\271\233\362;\333\t?\275\315!5\275\274\366Y\275\233\201\017\275\275q\014=\026\032)=Ed\303\274EB\014=KL\360<e\245\266\273\3129I<<\346\201<a\365\241\274\265\224\005\275{\270\342<\177\251\'<\200\3419=+]Y=\013]1\275\373\232\\\274r\365\002=\233@>\275\006\257\301<:\355}\273CG\251<\250B\255\272\236\320\230\274\276\037\027<D\326\274;\366\213\001\274\205\256\231<\312\221\301\274(\272\025<\000\241\003=\214\375\031\275\267\2609\274\016\324\231<u\261\020\275Y\200Y=N[?\275\256;\203\2742\373\355<\231D\203;S59\275M\236\375\274\225\333.=@\212[=\205,\007<\300t1\275\222\3564\2746\' ;j\276\010=O\371\253;IV\004\274$\316\223<\t\010$=\264z\230:\212d\t<\323|\322\274c/$=r\317V\275\2311E\275\307\345\377\274\214.\026\2746xX\275\231\022\245\274\032\323\365\274\275\227E\275\020y1\2752\236@\275\237\332>\275gd\251\272\342\311J=\004\243\001\2759\3170\275K-I\275\035\000\004<\000\0239\271aF\023<D\034\'\274\356\351%;\327\336%\274\316\027S\275\226\213\277\271\345\310\303\274\016\335\300\273y\003\001\274\263j\021=\023\037\025\275L\245D\275\344\rU\272OD\n=Nf\016=\n\005\213\274\376\257\324:h\353S=Y\371\201<\251\233\340<\245:\226<1\210\201<]h\003\275\314\230\321\274\234\306\003\275\345\225\262\274\377\345~<\347EI\275]b=\274W\236\232\273\251\346?\275\315\333\'\275\323\311L=\322[,=*\313m;\"o(=\360\031\005\275I\032=\273\243\330%=\224>\365\2735\224;<\253\321\016<\274\300\014=\370\006\271<O\'\351\274\344\264\332;\350\376\010\275\206QD\275\016HW=R]\215;\365\252\370\274\342\243\007=\217\361m\274!\211\027\274\203\210b<\006\232Z=/?_\273\372)M=\242\216\300<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
          dim {
            size: 4
          }
        }
        tensor_content: ">d$\275\370A\345\274>)-\272\262\261\257\274\2118\343\274\275\214\316\273\311\224\374\270CQ)\275^\002(=c\014\t=M\006\n=S\002\214<\030\205T=\023>&;\345\n\003=q\303\343<\212\\\010<\2433\304;\220\215\366<\240\\\024\275B8\023=+\220<\275,\212(=\001\327@<\331a~\274\347\226\326\2735s\036\270\261\354]<\360\214)\275\000\017\032\272`\361_\275\237M:\274\340\203\336\274y\333!\275_\3044=Y\307\334<!~\006\275\025\274;\275\027\273\016=\377^\333\274\336\350d\274\367+\024<n\017.=\034%\030=\332L\242\274\343h\021<\310_ \275\216\275N\275\316\2101<&\2576\275\2740\023=gyO<\023\270/=\251\337^=\263\216\022;\320\302\353<\341\026\202;j\023\331\274a\347\205:P~:=\262=H\275e\203^=/m\255\274I\360\023\275\363\365D=:\010\357\274S.\230;\315\255D=c\232\355\274\206\262Q\275\243\326M=,\202\020\275\0258\313<\256\354\2358\276&\203<\354\312\372\274]\344\023\274\003\311]<\354\177\304\274?\315E\275nV\247<A\247\275\273\033\300\371\274\242M\376\274\275v\351<\251\0054\272\306\t\022\275C\225\246<\310\317\364\273\226^\322<\036>7=5wD\275\365zH<\345\231<=\034,A\275\333\264K\273\032\366\344;\035\366\353<)\211\337<^\341\025=#[\217<u{5=\334\026&=\357\201\251<\26017=9Y\033\275\n\227\331:\257\234\254\274zm\236\274U\212=\275\207\207\310\274\302\203\026=\022\017\354\274\233\2606=\203\200S=\245\022p<\034IJ\275K} \275\300\226\334\274{bL\274\330\332m\273\206\370U\274\200\315\230\274\'\237\306\274\273\234\211\274\360\371\255<\377\0026\275\377\024^=\322\275&=\027y/=\036\264\240\273\320\365V=m\371<\274y\"P\275>Pk<\207\3164\274z\246\207;\0062\002<\'$\230<\003\371G<k\007:=\256z\255:0\261$=u\344\313<v\036N\275\332\036\325\274)e\r=\037\r\247<K\332\023<\312VL=\311\3563=\227\361\270<\2652\t=\033\335^=\354\2656\275\025o\203\274\267\020\267\274I\235\277<\263\212\271\273\024\030\222\274\2529\220<\305\324\2318\317\2735<\010N\337<!s:=\217\206X=%\034\222\274+\036\001\275zQ&=\210\270\315\274G.\036=\277PT\274@\"H=\2309E=$h\023\275\000&\363<2\360\334<\355\223\031=\203g\236<\371,Y\274\245\321\264<~d\302;TS5=\376\255\005=Cc\210\274\025\027*\274\335\001\314<\312\222\017=\177\017\264\274\325\222\336<u\007\020\275\"\203\006<\352^P\275\002\033H\275\372M*\275\215lU=\205|\021<6hk<\362\253\031;.\205\244<\372\236+=\357T\034=\3461L=3\323r\274*s\333;\007\220R=4\216\005=\363\037$\275\274\226\227;R\352\220\274\240d\000\275\3021;=\000\'\026\275\367\224\216<\3114)\275\274\021O;\311\032u<?\244^\275\226\316^\275\262@\222<\031\026\017\275\005++=\220\263\264;!)\356<\0202U<\301b \275D\330\364:LM\354;\225P\000=j<\241\274\375\206\004\275\027\363\315<`\332\r=mj\270<\035\350\344<+5I\275\016\220K=+\353\221<>\330\302\273\335c\340\274\317w\017=\373aG\274i\367B=\326\"\020\275\262\211\252<\227\217D\273\310\330,=g\271\314;\310\177W\275\277H\257;N\337\207\274sU\333\273A\324\010=.\034\201\274\037\260<=sc\302\274W,\036=\003u{\274\246\345\014\275\351\345\356;\353U\204\273l\356\246<r\220O=\207\3447\275\32562\275k%z\273\365p\254;\250\334\207\274-\177\236<\325\341a\274\275\262\026\275\370\271c;t\266-<{1\363<\312\344\354;E\243\237\274\366`\234\274\276\213\007=\363v\236\274\260m\r=)\375\004\274X\t\"<\357J\253;\370\243\225\273\274X\020\275OkP=\335\214Q\274;a\t\275\364\016,\274s\351O=\354f6<\34066\275\363*\255\274\234\263\000\275\250;\246\274\267\326\226<\272-L\275\245-?=\343EQ=\2465\303<\306*G=s~8\275oq\310\274\001E,\275z\276\232\273Y\344\232<\017\023\376\274!\350\332\274@M\202<\366\310f<\236\253A\275\220\366\351<W\202\033\275C\344#=`\273\002\275\374G,=\001\272&=\022\027\302<\237f_<\252\376H\275tvN\275\341\215R=\021\214\251;\346i\364\274\315\251Y<\367\306\013\274\034\3033<ZXU\275U\3517\275\275\232\265\274u\240\356<\375}\233<\243\222>\274\032\227\352<\3047\257<<\010\020=\260\372\010\275\276\345+={X4\275Ff\034=,Z\007\275o\322]=\354J\026\275u\221\035\275n#\024\275\004\363\254\274\300\026\216;.\361\301\274f\361]=\302\006\317\274t\245\036<4\303\313\273\261\3756\275\t\231\243<\345\226\347\274\017c\317<\332\361\246\274\203\275\321<\200\356\256<_IT\275\376\373%\274^\360\317<\222\240\306\274\335\213=\274\362\213\366<\354\313\024<\343\034\177<2\3032\275\t\324\241;6pH=\311:K=\216\225\232\273\274\0379\275\330\337\232<\261!\252\274;<\263;}?\016=\313\'&\275\234\214\006=\241\0043=;\347L=\213\252\351<\017v<\275\343>\225:[\237W=\321\216\n\274,T\245\274\203\'J\275{o^\275\321\223\020\275!\252\034=#\316\205<\360\217\r=\0349\243\274=:\346\274\'\214(=\n2M\274\215Z\013\274\300S-=\231\256\225<\006K\220\273~\036\037\275\202\252J\275b\203\271\274\311\004Q=\213\253\361\274\004c\242\274\304\007\361\274\216\324\013=\353e\360\273\231\327%\275\323\225\313<\352\010 \275\t\321\021\275*\230\"<\201\n\335\273\300\202\354<\230d\004\275\306\272<=\321\243T=WJ\305\274\365X\301\274\327fm\274\036!\333<3cE=\327\375K\275WD\307\273\241\306H<B\231\221<y\341/<E0J<wj2=\242\227J\274!9\370<\036IH\275\212\010\357;Q\212\250\274\3114\017\275\251xJ<D\212\022\275\242O\216\274\0070?\275\t\245\013=\333Q\'<\222\351\355;A\352(=X\316?=\301\024X\275{\357U\275\010\340\036<N>/=\220\356\016=\260\005\316\274\361?8=\2443\001\27549J\274\263x$\275\2455G\275,V\217<nM\302\274\177\341^=0\014%=i\201\037\274kj\027\275\233\337M=\261\300\204\274\245\277\027\275\342e\365\273n1\000=\007\222\023:\370\304\020;-\226z<\201\352N=F}=\275\3142\305\273\020\313N\275\202\352\351\274\244{F=\001\034\376<\276u\344<\ta\251<@\021\316\272\356\230\037\275f\035`=m\270\007=\257\235\013\275\276\234\224\274\332qB=\002\337\366<\200\335E\275\n\371\361\274\3548\362\274\351\231\031\275\002\245\272<\006^\014=<h\325<\2349\251<\305\212\r\274\366\227#=\202#\021:Z}\001\275\231|2\275[g\355<|\376\005\275=\254\274\273\013\362P<0/\271\274\021\006{\274s\257\254\274t\211#\275\337\030U=\312+\304<\311(\032\275\335\177\355\274mX\033\274\314\001?=]\007\007\275t{\236\274y\030T\275\030\215\032=+zS=\211\016\210<\212\031?={\355V\275\023Y{\273]y$=\206\022\275:,\035,\275?\277b\274\266\000\017\275\024\261C\275Js_\274\235\316\301<R\377\r\27541\371<\261\036$\275a-1;/\027\'\275\025\361\033\275\201u\006=N\340t<\312\205\000=\327U\014\274_^\234<#\026\322<\004\2319<\275\370\001\275\316\343X\274T;\303\274\204\275C=\235\220\n=\345G\302<my^\274r\2202\274\031\266/=\246\330\\\275\021\002\036=tF6\275\200\001(\275\253\027G\274\002\225\227\2740\007\346<j\223\356<\227\030=\275\"\314\264\274\333\010\026\275\366?\003;s|\034<\322\206R=\370\2627;\031}\024=5\343)\275\251^+;\356R\025\273\360\213\030\275m\356w\274\n\"\036=\232\0031\275j\243\233<\245\235\271\273(\355]=z\364\303<\"\242G<\223\247\334\274\200e\034\275\266a%\275\024uA=\333\275\302\272\361\374\r\275\231\276\224\274x6\312\274\373\366\332<\255\325\252;0I\345\274\\,\351\273\345\2051\275\023\023\014\275\347*\265<\362~\321;\337\026Z\274\245.==\316\363\005\275[E\010=m0\371<nV\010<~\021*<\232\374\000=\026\267\n=\022\366~\274.\322\354<\253\307]\275\254{\223\274\207Jm\273\351\215\r\275\\\2041=-\3672<9\003\274\273aQ\366\274\026\366W\275\023 \"\275v~\036\275{sQ=\275\306\226;\223\311\004\275\2558\006=\206\032\035<\024\016\t\273\2313\366\274\014\032\254<#\353\003=\035)\305\274\034\'T\275\250\305\245\274\336\252V=\034i]\275/\376\347\274}\323\365\273\206\005\017\275\263YJ\275\026\230^\275\241\331\374:\207\020\326<nN\215<CE^<\017\356\024\274\364\351\007=#\"\023</\232f<\354\305\203\274\307\336=\272\237\377\206<\024.S<e\276\260\274\300\013.=\222\001N=3\220\002\275\337\353\020<\342\0079\274\207T\037\274S\321\370\273\226U\320<\255\201\223<\203\"\214<\224J\242\273\226\257\031\275\224c\026\275\323\234V<\240\204\375<Z\334\346<\315c\355<\300\202\003\275\317R/<\235\361\332\274\0078\331\273z\237Y=\343j\3169\013\275]=\264m\016\275q2\242\273\221\020N\275\246\247\332<\246Z\337<h\250j\273\235\340u<\363x(=\270\367[\273\026\020J=\302\257f\274J\324X\275\0320\267;\326\016\035<n\212\251;z\357H=\330\222J=sN\374\274\214\317\254<\n\206\375<>\250\375\273\232\034\002\275\326\006\266\274\000\314\023\275\333\017\025\275\375\317\210\273\323\326\234\2743\006\252<\202\\!=\325\272\336<\221r\250<\"\315\000=\226\305\361\274\302RL=\336\357\321<1\252X\274\345\3749=?8\033\275\332\364\036\275B\260\304\274\330\345\003\274uU\220:\240r1\275L\2735=@\264/\275Z\341\016\274\2409_\274L<\023<+\203\277\273\343\361V=t\260\277<\350\365>=\374K0\275%w\237;\034NY=\212\270\020=}60\275.\r\324<\217\3138\275\020\234\330;\004\251D=\217\214\325\273p\3524\275\254\227\000\275ai\302<\000I\357<cP\016\274o\022|\273)x\013=\3122\342\274\254\030\343<\200\313\033=\326\305\226<\341g\246\274\202L\020=H]\036=\243\205\027=c\215\252;$\3543\275.\367\200:\342\360^\275\032%\205<\361\234E=\213\3236=\3343F;\351\260\010\274\014\336\r\275\324P\007\274\354\026\230\274\202\367\302<\373r\370<\267\375\245\274\034AL\275\2539\205\274\231m]=\312\364\005=\024l\321\274\307\257S=\313\274P\273y\250[\275\342.Y\275\252\3060=r\t>\275\010\325\251\274n\'K=\361\023k\274<\312\225<\351\030O\275\347U4\273\2051Q\274\352\235\036\275\314\021(\274^\371\177\274?\332Q\275$7\257\274\250N\355<\344\363;\275\203\247\350\274R\035\367<R\315\r<\375\366\'\275\325\362B\275\343\0165=\270\212\024=\370\'\205<:6\327:\334\352\226\274\017\252\245<\rQ\272\274;\247\273\273\273}\260;\\\303\010= \253\t=\032\032\027\274\227\337==Xcc\274\340_$=\307\2642\274\314\007G\273\373\315\'=\2053N\275\014b\207<\334w0<\215\215\025\275\356\222z\273\251\037\032=8\020\013\275\331\216\323\274\261\261\035=\244&\233\274\251I\236\273%\3406<\215\317P\275\351\242\n=\277\217\271\274^/1=\353:\031\274G\246\244<\336[\037\275\222%3\275\223V\013;E\263&=\226\203\225;(\000\027\275\362b\226\274\001\311\355\274\025+\374\273\027\226\222<\206\031\016=\256\300\201<\255i\377<WRR=\021A9\275\332:\225\274\234\236\343;g\277\320\274\362J\025<\300\206-=\340\217\334<\210\2502<\341K\341\2748o\357<\037\327\037=?\335\302\273\233\'T=\265@\265<\"yG=c\274\007\275\023\331\316\2741\272\266\274>\010@\275\004\r\226\274Hz\021\275\365\210\345<\267\177\001=y?&\275\375.\306\274\326\025?=\362\372\264<XO\333\274\252\263\030=ce\211\274riB=\341\024X<\272i5<\226.\222\274\230H\343\274\352JU\275|\201\317\273\021\2622=EF\303\274\270\202%\2754\344\020\275\204GB\275\271\364\005=\217\262L=\no2\275v\345\016\275>\354)=\267-\r\275\026`\226<.s\024<\037s\245\273\223/\265<@K]\275\277N\270<\n\036\217<\205\325.\275n$\251<T\004\220<\307\'8=\272\242-\275\225P\326<\355n6\275\203\230\\\275\037\205\316<\231\326\203\274\305q\036=)V\346<\321\242\016\275\3661T\275\251\313\001\275\"\005\034<\362\266\342:\201n\013<\340\rY=7--\275c\r\336<$~\246<\311\235\006\275\331\3202=\250,\001=I\3211\275j\217#\275^\261\017=E\357J=b\273K\273\373:\223\273\202X\021=\366\n\247\274\363\207\027=\'\354_=\261n\341<JDI=\377\034\215<\"\341\257\274\353\322\n\272a\313\356\272\374\347\273:u\210\240<v\336\324;%q\022=\253\252\272<K\230A\275\r\247\005=\231\330\321<\262\035\026\275Xg7=\314~O=G\357v<\t\t\360<\005\315M=\035\340\357\274\253C\017=\304\rI\275(L\334<\340\230\027\275.\223s:E\354\364<<\376D=np\306\274F\272\343\274l\033\375<\275\314+=\375\303\307\274\317\270\275\273k\302\313\274\247AB<\311\313Z=3\274l\273 c7=\316\\0\275\223X\364\274,\205:=~h\002\275\205\243\020\273S\003&=\214\001\211\274\025\033\r\274|\006\014\275\'x\242<\303 \005\275\363\316\201<DM\376<ww\013=U\233\\=\315.\361<\036b\253\273\363p%<\250\356\303\274\320 \206<<$H\275\001\034\214<b\013\325\273\204\t\263\273\013\035~\274\274\300\260\274+-\303;\001\2733\274\366\006X\275\253\270A;,@\377<\366J\002<\265O:=\013\342\022\275P\273\342\274\003w\373<z\334\254<i\305t\274:na\274>0\023\273(C\341;\221\250<\274m\263f\274\345\030\200\274\202\324\016<_\234\237\274\320Y<\275\272}\372\274s\340\214\274\335\250\257\274\030\375n<\365\2401=\226\'\277<c\\V\275]\247\312\2746\233\030\275\207\235\037\275\325H+=\314l7=\313\203\306\274\335h\016=AF\357;\021Z\262<\264jT\275\302y\337\274@\273\253<\274\312B=mW\303\274/6\037\275\223z\326;!\256J\275\312W\033<\272\010L<^\321L\274\207\3068<\345\240\006=\327\206\254;\366\320\020\275\252\3516\275M\365s\274\225\215\031\2757\357\'=\030K\002=\022\236R\275\371\217\020\2756\tZ\275\0056\027<KM\356<=\316==B\255B\275\016\251\207<\230h[=\375\225\220;7\265F\274j\327:=\002\307\362\274\024\243n<r\347!=S\002\326<\"\023\t\275%K\261<\243\217#\275\263$L\274\207R7\275\363\005X\275G5\\\274>\3160=\331\000\031\275\343\266f: vT=`\345T\274-\302\276<Pk\311\274\300\033T=\017\275\016=\307\206\330\274\002\272\016=\023\023\256\274K\277w<\305\226\273<\234\374\014\275\327\201\250<!\212\204<\277\334^=\372\334#=i5\264;\354N\374\272\335\353\024<\207\037\006\274)\236>\275\316\233\030\275\342\344K<8\240F\275,\332\273<\270\216\006=\345`D\274\007m6=\260b \275M\202\302\274\034\3362\275\226#,\275Hh\233\2740(\323<\027\027!\275 \261\306\274\375\255\025\275s\257\254\274\375\335j;\2119\347\274wg\002=v\212\022\275\230#w\274\367\232\365\274\'\026\026=\376\206!<\025\236\374\272\021\225*=KH\225\273O`]=\371\024\200;\355Q#=b\240\235\274\271\334P=\016\3061\275\026\224W=\370\017v\274(\340\366<\362\237C=\231\314\276\273\330\214\003\275q\010\351\273\213\013\244\272^\2357\274(\240\207\274{X\327<r|\364<\336\336\251<u\237\r\275\327\262+<\332\026\236\273\231p8\275;\007\000\272c\273h<\216\020\010=Oi\206;\251\230E\275\026\336\030=\273\022\025=;\377\000\2742\223$\275\276\205\347<\262\202?\275\350\357@\275\201.\366<<u\310\274\313W\\=7bx<\037\270P\275%^\n\275\003\325+\274\202\363\316<-jM=k\217\253\274\310\346\303<pu3\275\306\322\342\274\273\274,=\203&-\275\307\000H\275\334\237\326\274\377\201c;]E\254\273\241\226w<\006}1\275)\205A=#\364C<\377\242\217\273\036\202\035=\006\033\217<\216\304\037=\256\002>=\234\267\004\275F\031I={K\205<\271\214)\275\035]]\275*\003m\274#tU\275\354vT=\246\307E\274\327\250\346<\323\305\221<KA\352\274N\274\277<\321p\265<*\224\031\274+\"\237;\005\020\305\274|\307\352\274\341)\025=\2213L=\2429\026<|T\220<Re\376;\222O\250\274\274<N=!-[\275i\035\320\273f\306:\274E??\275\000W\302<V\210\226<\2311\255<\033\t\303\274~\035\364<\326*Q\275\354\263N=\241R\271;\245\263R<7\366-<0\233\210<J\n\003=\'\252\337:\316\370\201<\272\033\371<G\367+\275\220F4\275q\207\t\275\222\276\031=MJ\\\275\024\226\207\274\350NS\274\202eE\275\020\270\014<L6\234\274Yx?\274\232\317\252\274\006\350\002\275\267\346o<\'MZ=\263\024\325<\325\373V=\017}\320<\261J\025<\336\371\213<\300u\265<\203\215(\275\001\204\244\273C\340\217;\256\021\275<\204l-=\002\307(;\205\206\026=f2\2559\017\026+=@\367:\273\024\035\337\273\217\037\035<\256\307L\275\262\034`=d\267E9\'}h\274\337\213\023=\274\243==>\341\227<FU><Pl&\274_\263\256<a\322\254;<\024V\274~\271[=\374g3\274*\313)=f\tG\274V\256z\274\321(n\274\036^\337<\340\271\002\275L\334\222;\216IC=\352\311\327\274\262\271V=\212\'\325\274\325\017G\275\014\025\022=\365\nF=\277i>\2750d\361\273j\0260\273>\020!\275{\303:\2754Z\031\275\030\351!=]\320\001\275\232\006\014=l\302$\275>\373\261\273\r\236-=g\004+=l\235\321\274\212^N\274\324hA\275\023\317u\274\326A\246\272\270\0169<\251[]\274\231,\033=\023\031\265<^\334\312<P\177\374<f\250\000\274\020\376\020\274\235\026\365<\001c_\275187\274\233\315\324<\036q\356<\372\317\221\273F.\373\272\311[\305\274\323qb<\313\300\237\274\241@P\275\344\261\202\274\204\207\020\275\r\371L\275x\240\301\274\265\210\254:\035\223\030\274[\313)=\217GL\275$\324?\275<\214\257\274\016\200]\275{\001\343<\014H\005;\316\327\n=k\263\255\273\277w\n<<\033=\275\220\367\017\275$\024\275\272\257<=<\223\213\347\274\262\315t<\035\255&=\253\270\221\274\356\002M\275\007\0349\275$\0162\275\013\031\203\273<\303\r\275f\264\243\274\215\257\252\274\341\343@\275\314\177\312<\327e\231\274=w\214<}\013P;\357@;\275i\2748<\272\205*=\025%.\275\275\260\265:u\3202\275e=\262\274q\234\003=\030WE=3S\r\275\004e\223<\214O\332\274\357zD<\223za;\022\2670\275\277b\014\275E?Y\275\037\226\020=\327\3712=\002\341\342\274\242\227\271<\nW\260\274Y\214,=M\"\316<\022~\247<\005\346\224\274\320\214\333\273\272\0269\275Q\362\362<\310\251\002\2752/6=\314F\210<\253\032\006\275}\317#=Sj\355;K\3673=O\205\310<\010\322t\2748\346\010<\026c\273;t\234\324<ti^=\332[)\275\370\200(\275I\262\377\274\275SG\275\007\356\247;\230\r\007=\240\016&\274G;\014\275\016\026d:\271\232\331;\335\222t\274\212\321\377\272$G\t\275\233\326\344<\244\365 =\212\347\324\274?\003\301\273\223r\270\273\216~I\274a\342\236:\313-\026=\003\264\n<\220ED\274\210x\362:.\247n<$4\247\274F\355\236\274\035H\275\274\372\313\256<\003\252<=\2162\004\2755D@=\257\331\350\274\003:\343\274\267\256\013\275,\270\036<\316\357\263<\377\3212<\232\273\247\270lIO=0K\202\274F\013\'\275\273\364\177\274\232\246\230\274\371\346g\274\356\272,=\330\013\021=\037=\235<@\216\264\274\035\305\353\274n\377\373\274U\244\307\274V\314\227<\321 \375<\267\2476=\225\255\025=h.\341\273\227C =B.>\275\027(\242;\270\\\241\274@\0378=J\306t\272\177\t\246<-\007H<\340:L=\210\326\362;U>\311\273\351\236\202<M36\275\224n\262\274w\361\376<\275\013\014\275&pM\275\307jH\275\366\030\237\274\342\247\031\273\223\371\352\273Mh\326\274\007\313Q=\376\366\000\275I\306&\275\322\365\013\273\"YG=l\026\261\273\223\001;\274\215\275\362\272\334e\021\275\037z\2067K\322\333\273\245}-<E\330\211\274+*Y\275+\207%=\264\276\262<\362\306<<\025u\000<\016\025\033\275\226hm\274g\013\010\275?\030\002=\325\233.\274\307\031%=\223\263!=gL\377\274h\256}\274\271M\034\275\344\305\245<\327\257\020\275O8\303\274\261m\376\274\245\3267=\207\260\242\272^\0277=;\001\017=\302\2626=\362\342\267<1\223\020\275\300\204^=0\2152=\304X\261;N-<\274Ol^\275^\226_=\241\316D=\355LJ\275\340!>\274r\354\345<\0179\324\274\237)1=\017\365\016=F~\326\274\247\217\\\275u\3415\275Q\231Y\274\335\365F\275\n\360Q\275\253\347\255\274\221\356R\275u\220{\274\367\267\221\272{\270\007\275\032\320\355<Hp\350<\227}H=p\211\021=\366\036\207<oS\255<\230\306]<-\352M\273\021k;<\226\037\374\271H>\204<:~\025=\206\317\256\274W\231\242<\326\337\314<s\247\216<\235\220Q<\331\206\307\274!\377\255<&\262\027\274\203U$=4\013==m\265Y\275\303q>\275\215\030\005<\322\3506<\307\002\031<9\245\2708]o?\274C\3252\275\252\203G\273\221?\334<\336G\316<\304\320\032\275\020\200\016<\034_Z<\\7\205<vO\035=0\032\035=\356 G=\335\323}\274\305\371d<l\032\002==\254\212\274J\213\331\274\215\356]\273\342^\275<\230\366*\275\274\013\000\274\002\245\220\274\031A <>\2740=\361\230\024\275\260\035\016<\255{\275<2f\344\272\354F|\274m\344[\275\022t\000=I\345>\275\354\350\306<\r\251%\275\034\313\037\275\252\354B=\2628X\273\211\200\267;\206\346\217<\264O\317;\243\210T=\360Y6\275\341*-\275e^\364\274\021\234\005<\316g\037<\201qQ=\300\276\033\275\266:\014<\325\321\225<\\\021?=&\347!\275n\2426=C-$=\243\300#=\212\233\356\274\342\256\336:+,\036<[\237\226\274\034x\260\274\234\307\203:\254\227\325<%\033.\275\336 \325<\200\333\'=\265?}:\252\374\323\274\016\232#=A\272\266<q\231M=R\307>\275l\334(\275\373\205\200\274\312\017\017;JO&=\230\004\326\273\027\276r\273@\370A\275$jB\275m\263@=tx#\275A\220\331<v\232\013=\314\330T\275ag\030=DZ\036=[\223\\=t\025\010\275f\265\353\273\247\206\342\274\273\263$\274\237\000\314\274K\272\t=\\v\200<\r4e\273j\0178\2753U\247\274g\256\214<C91=\263u\213;\2555\307\274,a\005\275\253\304)\275C\366\"=\336\224T=p\306\350\274\363e(=\216~?=\206\223\230<1\216\222\274\371\337_\275[\271\005\274\\\321\036\275\324a%\275\007\316O\275f@\272<K\251G=\022\356\332\274Q\325/=\3572\304\274\321s\023\275\000\321\004\275\274\267f<\372\267Q\2757IZ;.*\337;\010\344\256\2748u\253\274\267\337\342;\210J3=Y9i<\344\014\307\273:\246S;bE\3129\023\226E\275\255\264w\274Q\0009=\216\353O=7\214\007\275\021}D\274s\223\"\275\355\006\023\274h\215]\275\275mU=DB;</\311\r=\023\247C\275\033\035i\274\270\024o\274\205E\014<\304\241\311;\2504#=\007\23269\272\350\025\275w\007\221<\313B\335:[\220D=\315\233\262<\265\303[\275:\230a\274z\367]=\2275\036\274\345\257m<K\221\207\273i\313\246\273()4\275\250~\234\273*\2025=7\016\264:r\2216=\020n&=|r\034\275\364G!\275\306\345\326<d\225\014\275\310R\335<?\243\240\274`\255\222\274*8#\275\372\024\037=\341N\304\274\320\033\347<\3367\264\274\323w\337;\322g\271\274kch\274\035\236U=\001\350\342\274\220\216\t<\033\336\230<T\305\354\274!=\026\274\232C\032\275c\226\314<j\203\017<ms5=w\345\211\274`\246\303<YX\350;Zz\003==J5=\225m\036<\222\206Q\274A\204\r\275\273\326\362<a\375\314<\346\325\005\275YV\025\275\363\200\010=\241F\014<n\322t<\246X\276\274\321l\022<\212v#\275\252N\006=\273\374(\275eY\033=\241c};\331\346\352<\233h\026\275\261\244\247<x?\213\274\277E(\275\304N/\275\335\224R\275-\205M\273\026\244_=\320\224\332;\301,\016\275\227Y\010<,\020\241<&V\354\274\307U\\\275\020\371Q\274~\220\377<\353Q]=y\263J\275Z\245)\275\226g\240\2748l\027=!\216\243\272\344N\023=\345\230\317\274\330\320\337\274~E\277<\017UM<y\027\232<\221\253A\274\342\207-\275k\221y<y\006\242<\234q\t\274\372\"Y=`\260\'=\201q\244\274J\211\334<8\212\254\274\006E\t<\036\005\361<0\225\237<\300<L<\224\032y\274M\224\031=uX\006\275^\r\006\275\002?Y\275\226\342\022\274\265r9=\236\226@\275\016.]\275zr#=\346\2037=f\200\001\274\317WG\275s\313-=\360 \034=\3456\232\274\273zQ\275\260S\220\274 =]\275\352v$\2755\325Q=\311\034\010<\255\\\014<<\334\013\274\360\003W=\232U\312\273\021u0=R\331N\275\377\347-\275j\"G\273V\204\317<\270\035-\275\t\016L=4\325/\275\361h\'=\323cS<\315Q\272\272G\231H\275\210\267\306\272\037i\"=\332N\322<\257\302M=\226C\270\274\2351\334<\227O<\275\224\350\006<\3619 \275J \255<\222X\006=\232N\216\274Y2\025=j6\013=cRY\275+\256E\275\320\256L=o8\330;\223\205F=q1\201<R\2025\275\311\026\023\275\206x*<vC\360<\0278K=C\033\014\275I\366\372<\022\352\007=\320DJ\274\275\372O\274\031\027\010=\353\331+\275\277\035M=\\\017\013\273\027\223a<\354\311\013\275L\330\211\273\2772\353\273\350\323\237\274O\254\310<s\271\031\274\215/\274<\321Uj\274+X\031<\246\247|<\314q\372\272\341@$=\254\031\352\273U;\371<s\3564=F#S=PG\243<\246{W\275\035\267E\275\263\0350<:\202\030\2755\377\302<\356\332\347\2734\353\315<\017\377\004=\031\207<<\377\360<\275D\031)=Mo\233;\207\020[=\237\370\210\274R\004\337<)\231R<\240\370\036\275\307\204x<\202\260\336\274|\3111\275.\377*=\245\240\327<}\022Y=[\305B=;\2018=\331\232\310\274\021\336\023\275\020\354E\275F\003\346<S\360\227\273\245\016\n\275d7\014=\007u\222\271\232\346%\274_\361\'=0\367\237<LN\240\274\315\310[=lM\235\274\350\255\264\272\n`y\274\373Er<\017t\376;.T\320<\273\225\305;\271C\351;>\246v<\330B\237\274\353p\002\273\030T\226\273\307\252\243\274\201r\301\274\265\322\"\274{\t\2409\232\354Q=\013\300\332\274\235\243\271<\214\037\2479W\226\363<\030\367\037=\345\233\244;\313\201\273<Ea>\275\014h_=}%\014=^\037\232<\232\010\301\274W\'[=\016u =\257\3408\275\220\366,=\375\346\310\274!\016\252\274%\300_\275\202\352@=-h\016<\234u>\274\324\013\013\273\374\302\215<\270\353=\274\365\312O\275}Y4<\035W\313<q\361%=8/\025=\350\365\010\275W\245Z\275\000]L=\370\211\226:9\024\024=\210\236\351<\302\321\001\275\317\0141\275\334\272\255<#\270\017\275&&\227<`\0330\275\002|\010\275\372+\374<\017cO=\241\3631=\370\230X\275\301O\261<\003`p\273\345\321\367\274\211\007\006\275B\2636=2\374\373\274\032\323\025\275\033WN=P(\311<\213\270\r<\377>%=(\3453=>\234\347\274\326\301E=\277\213(=\200\254\375\274\202\306K=zg?\274\315\217\027=d\372\206\274\341\305\362\272\201\243@=`2\004\275\343&j;y\367==~\303C=>\324q\273\300\274m\274)\340W=\231|F;\031\216\332\274\222u\005\275\276Q\346\274\037G\240< \245\022\2754\220\256\274\324R]<2s\277\274\320\036M\275\013n\027\275\345-e\274\2522-=\033\231\340<\337\300\342\274Z\223,=\236H);$\327\330<\373\320\354\273\321ZW\275]\315\317\274\236\357T=\036\3755\274\004pB\275\355\215\027\2752q\014\274\357\217~\274\262$r\273\210\337\265<\022\354\220\274\013\3225\275|v\022\275\321\360{\274)\314\367\271\355Z\"\275\220)J=\236]\\=\014\005\010:\002F\206\274\351\3345=\177\323F\275^\263%\275\211m\232\273\374qG\275O\017\225\272\243\301\362<)\3405\275.\276\005\275\2319\024=.\312\000=\312--\274r\274\325<\311\302\030\274\024b\301\273\275\334\037\275jt\005\274U\035\251\274-\305R;#\203\030\275\310\274\210\274\304\323\'<\016\360\027\274R 3\275\364\2576\275\223\345\000<\332e\025=\271\376\027=\037\267\203\274\2046H=Q\031\004=\236\200P\274\302\374\236;S\205\\<\036@E\275\236\274Q\275\357\3622=\233\345+\275\246xq\273\3222\230;L\375\361\274\264&U=z\310\244\273\355lA\275\274f\252<Q\274\n\275\366\333Y\275V\034\004=\022\272\222\274\r\0259\275\211R\335<\\\374^<x$\323\274R\306\t=\266,&=\324L\r=\212K\244\273\242\303\035\275G\344\272<\314\364\021=*\262\317<\2267B=H\2640\275/\352\000\275\337>V\274\237~\250<\323\000\255\274cR\312\274\005\2626\275K\242\007\275l^G=\010\264\036=\025\237|;\364N$=\277&\030<\256\035&\275a\220\037=\200\207Y=Z-\013<\332\213\007<}\222\002\275g4\304\273\314\000\033=\254|\227;\241tD\275\220a!<\263\205\204;\316\215Y\274vL\037\275\330\311\022\2759\272J=l\202\224\274\263\312B=\211\273E\275\371\022\374<i\276\031\275N[\205;\212\216\224<\210\276\217;M7\267\273Wp\345\274H\242\352<\312(W={\340J\275\017\244\255<[{\026=\264\234I<Z\304\007=\266\037\220\273\227u@=\221\320D=Tm#\275\364\2324\275R\263\0179O\245\377\274\022<,\275\014\327\241<d\210H<\206\252\262\274.\373<=\364\365\320\273/\rf;\005$\266\274\261\273\342<\035\276\222\274\242\274\347<\231q\344<\002\013\203<\033@9\275\344H\301;\n\346\271<\262\321!\274\216\302\373\273\256\332\222\273\244\306J\275\340\233,<\323\375\t=\351\213\200\274K\266\001=\312\t-<\264\373\350<\362+L\275\235\3070\275\357\344\207<\217\001\361<Q\315\376;y{D=\360g1\275|\031\n;\222~)\275\032\256O=\322\3140<\326\344T=;\357\367<\317I\322\273\021\020\250\272\374\314N\275\334\260<;\326O\022\274\240h\r\275N\020\300\273\177\377\357<d\246\364\274\233\305\376\273s\202\347<A2#\275<\022\252\274N\317P<\310\351^=I\265J\275\267\005\316\274\211\334O=\230\327\020=\024\353R=1\277Q=\236@\205<\243\005\247\274J\202<\275\201:f\274\217\001$\275\371\036\200<\003<R<\024\"\3679k\362\000\275\300gC<cw\315<\327m=\275\337x3=\311]`<\032\340I<\312\364L<$\027\213<\340c\034\275R\033\330<\352\217\022=\246\225\024=\307\232Y\275\257t\223\274\311,L\275\305\324L<M\014P\275D%\377<t\272H=\325\033\203<\232\367\\=F`\212\273\220\360\306<\332\000$\275{\250\302\274\315\241\020\275\344\013\030=3\032>\272\331HE=R\005\265\274w\305\321\273\3421\007\275\346\214M\275cM\242;CYG<\r\017\353\273O\t\364\2740\361+\275\033\231\n\275\313\260:9.\215\322\273\312\3353=\360\367[=<\010\356\272\2732P\275]\032+=V\364\355\274\307\244R=d?\235<\204\372\235\274\377u\271<Ie\245;\204\342I\275\217yj\274\353N\341<\003\t\251<\211\362\210;\323\\\217\2743\367K;A\354\3349\254]\373<\235\3349=x5\372;+kT=\276\tF=i+\235<\253\251\034=\253\225\251<w\352i\270\035\303\005\275\234\342\016<\027\260\202;\225\333\206\2740\360?\275\340\250.=\244\3672=K\356\016\275\330Y\261\274b\212\262<\253\n5\275\256*[<\226$)=9\336O\275m\266Z=\027\340\361\274;\235/<9\346\372\274\267P\354<\370\026O=\023~B=;\316\311\273\317\305\014\275\330\306\031\275\253\326\246\274\351\037S\275Gd\230<\'rI=o\256\240\272(\356S\275\351\207,\2750\224\030=\"s;\274p\337J\275U\014\216\273J\'\177\2739\326\340\274\216\223A=\236GZ=|\r\271\272+\2353=\346\254\r\275iI\272\2724]<\275\2004X<\212o\257\274\216\275\224\273\224\273)\275\354\272\r\275\265\0007<\232\2415\273\246!\261<VC\001=cS+=\261\263\341;v\237\365;\'\253!=4YA\274\003#\321;Y\313\366\274\001_\030\275\031\013\216<G\002\215<\342\000\230<\337\022\323;\016\255-=\235\336\002=\030\364\033\275\206\000\000\275I\352 \275v\340\226\272F\206/=P\272\235<\227|0=z\340,<\311\376\255:\236\374\210<\310\017\224\273\273\027[\274\340\227\017\275\327\366\"=\"$B\2754\211\312<\210\354\303\274w\263\310<\026\324\025<\000\240\356\274\2400\256\274\272Y\205\274\354\005Q\27559\212\273\357\3642\275/\222\312\274-[>\275\307\032\201\274^\333\275<\024\256:<1V:=P\217O=\222\364\331;y\212>\275\320\207~<E\362L<F\204\021\275\325+_=\342$\030\274\301{;\274?:C\275\316\224+=\024\254\363<\033\276<\275v\034=\275]\204\004\275g\245$=\007\037\306\274!\323\214\274\233c\375\274\336J^=\215\272\321\274\3453\037\275\373\031\357<\273:\376<\002\375\020\275\335\004U\275\021\260>=x\372\337<\354\317\"\275;z\244<@q\006<& \016=\014P+<\231y\375<o4\026\275\274/H=D\337\250;\014oO=\323\215\231\2742\242\007: s&\275\271\377\323\274\037\342\005\275\2576\273;\007)\347\274\222\250\257\274\276\340\341\272\236\372\317\274w%\237;\256\335\277<\373\000\027=+\024\014=L>\006=\254v\231<\022{\215<a\335\000=k\242^\275/\266\313<\005\303;\275 \214\027=+\321\370:\324\224\274\274\203\3130\275\223\202\'\273-\367H=\371S*\275\321&^=21@=\035)\233\274\226b\271<6\310?<\341\345h\274\313T\n\275\323u\325\2744\211\245\273\266\364?\275\251Z\275<]\214\250\274\220\344K\275\310=\230\274K%\266\274\200\325\022\275f.S\275\006\347#\275\r[>\275\376\025B\275\211`\256\274\330\320A=Ru!\275\'\207\027\275\"\217\003\275\317B/\274\215\375*\275F\2675\275\177\021N\274,=\217<\303\247\020<Zb\030=Z\232\001=\252\223\026<_\355\220;8\327\321\273K6B=m\203/=\230\t\014=S\334$\274\276b\213<! \002=0\264\332;{#\377<\2515Y<\266\204\332<\256\3160=o\221\242\274\236\334\261\274\305\232\276<\2529V\275\211>\347<\253\275\232<\021e\346<\374\235I=H\346G\274\317U&\275\3667?\274|[]\274*\374w\274G\222O\274\322?\031=m\222\215<F\025\246\274\231\240Y\274k\346S\275\271Tb\274T\313,\275\037\352\340<\2729\337\274Ay\354\274Q\306-\274\365\3203\274\326\240\264<m\325=\275\316\005:=\372\"\265;\370\212M=Tl\301<R$\352<\234\233\325\274\230g\356<\004\001l\274km\342<j\204,=\016\377R\275\377^V\275\3651\303<G\255\021\275\314\307\036=p\3409\275h\310!=\262\270[\275bDH=:,\357<q\2037\275\276\0147=\370\207\217\274\226A\343<\241\357\350\274KH\036\275\212\225\320\274~\275\270\274a\206,\275g\332p<{x\001\273\235\234\367<\357\272@=\334\315\251\274\001Q3\275\217B\004\275\222\227\205;wt\r\275q\364\351\272;\204\025\275\251\257,=\254\003\010\275\267/\231;T/\033=\r\276\n\275\347B\n\275\336\034\231\274\006 \220\274\362U\000;\245\251\'\274\013\255\334;\205\234h;N\3748\275\231\345W=\312}\336\272\351\373\022<\020\307]\275\336+\363\274\245\370M=K\236\265\274\371wn\272N\n\353\274\017\361\237\274+\027\033=$\273;\275)\256g\273\345rN\275Q\026\002=d\272\342\274\035\314\021=\344\277\216\274\272\255L=\247$\253<\215\372\241;\267M<=7\237G\275\364\353\254<5\027T=u\2124=\321$/\275-?9\275\305\274\035\274\350\030\017\275\220Kb\271,\276\023=se\020;\307{\251\274\213\222,=\252\367u\274\301\371\353\274\261\332\221<\275\3445\275 \274\r\273$\342(\270\220\250\t=C\016\017=D0\257\274h\344#\275M\205\364\274\322`\250;\342\371\204<q\251$=\3363&=\350\002C\274\342\177\017\275\271\263\\\273k\362\263<\205\332\256<D\232\036=\n\344l\274\220\021&\274\322\304#=\204\210\026=Un\323<1JV=/9-=\350\323.\274\021\\\361\271_\322\355<\223\374^<\326\036\224\274\236\224h\274\366C[\274\263`:\275C\231M<7\037*\275\236M\032\275q\372;=\347(\232;`\300\370;p(_\275\000\232\037=D\327\305\274\007\352=\275 \010>\275\2645\254<\322:\273\273Y\022\211\274\321\272\337\274\004\277]<7\223\010\275}\3436\274\225\330\345\2748`C=\243\236\236\274\377\264\203<&\260\003:\307\324\223\274\305\247:\274 \237)=\t\207 ;\364\353\257\272\207\350\025<\325\024\205\274\037*\035\275\241`J\274\242\335\025\275z\005\366<C\355\246\274\374\352\352\273vBj<\375\302\030\275\211\025{9thM=[}\034;V\216D=\336\035\345<\370\261,\275\224\372\353<>j\221<z\304\274<\023\300\311;#f$=.2\252\273\211J\035=\331\202]\275;\223\013\275\2020\244<\023t+=\240tO;\232\306\264\274#\364~<\226\026*=\357-I=\332\301\362<\352Hk<\245\336\002=g\233\031\275\222|\032\275\177\350i;\226\376\\=\004Z\267<g\375\017=:v\377\274\222\223\264\274\260\257\334<\344U!\274*\203\023=[Q\017\273\225ZG=p\003\004\275\'\240Y=\t\2762\273\267\222\033=#\nU\275\346\2151=\021\2642\274\004\300\006\274\364\037)=)\374\005\275$\"*\275\310\035\004<\220t\376:=\026M=\306H\321\274\0334\354\274D\326M=\266\342\020=\317\242\377<V\022\355\274\206\304K\274\033\030\304\274\375+S\275\234\256R=\203W\211<\343\253U\275-\261B=\361\324K\275\376\243\266\274\267B\230\274^1G<\335\364\234<#\255\r\275\016\206l<\034+[\2752,\n\275^l\310<]\020Z\275\252\307!=&\255\216\274\2649\204<\255\037\350\274\331\252\245\273\035\225c\274V\235\242\273H\0104=\332uV\275\022^\215<\202\014\327<\212\241\257<\343E\315\273\256%[=(\304A\274\334\340:\275\233\036\221\273\336\007?=b\345.=\243\361\224<\266\331\0317|\235-\275\030\212h\274+T=<\262\302;\275\022z;=s\230\233<m\226_=\016\201W\275\304\022\030\274\376J\276<,\251};\210L\021\275Q\315\333;T\223K=\366J9\275\030\2713\275\344\261\363\274S\320\312\274{|\340;\237A\244<\216A\025=9\031\233<ac+<\253\320]<*_\304\274 q*=\231V\275<\014\377\240;}\222D\275\003\353\t\275~\205\216\274\326\315\217:\277 \034\275\343\226\264<\021\265\307<\003\334A\275\220\255$=\226\261\217<T\274%\275\364\235M\275LO,=\002\240\347<3\"L\275\004\003\354:[\241\230<\255\374\374\274\335/\016\274\177\356\204<\246b3=\31124\275\234\2260\275n\026\265<\320\324\341\273\013)\243<\325\361\216\274\237\224\010=K\310\204\272\266\322G\275q\251Z=\303|\001<\352[ \273\rU\030<\374\336\t=(AQ=\234\303n;\200\016\344<\007Ul<1\313\026\275\360\337\361\274\342\221\000=\027zW\275\352\230\307<\004\257\023\275\253|\335\274|\245\222<\035{C\274\367\002\353<\362\0012\275^\347R=\313\310\255<\255\206\021\275\3179G\275^J8=_\001\214<H\256\t=\014\nN;\210gx:\355\267\264\274\223%J\275{\336F\275\244\364\031\272>S\032=>C\014=\260\232\t\275\031&\204\2747\275\327<8\311@\275\337\273\303:4*\n\274\231\372\315\274\322##\274,\250\302<\246=\300\274q\315Y=n\306\024=\350\003\034=8p\031=$G>=\021j\306\274l{\254\273\274\3037\273,/\265\274\252\210\032\275\334d=\274u\225\323\272 BB\275E\017\023\275\236\361i\274\3144\214\274\374OT\275W\226E=\211\377 \274\256\254?\273W\216\325;Z\255\371<v\360\242<a\261@\275K3H<v\245\226\274\016\254\031;\321\203/\275c\"\021<\202\013E\275\373G4<bp\014\275v\022\334<z\256\3528\006U\361<\337t+\275_\270$\275\244w\372<3m\230<\004\307o\274Om.<\375FX;\244b\363<L\330\336\274/\006\323\274F\2476\275_eK=Qv)\275\241E\304\274\203( \275i\0060=\211OJ\2755U\301<\334$\332:;g@\273\3423Z\275\260\213\224\273TB\374:\241\360!<\324 \306\274\034\005D\2758\000\006\275\246W@=\267w\010=\314 \225\274\021\203O<I\370\327<ag\241<\\vI\274\207\003U=^\036<=\342S\273<g\342\r=\026\255\177<p\020\274\274\220x\266;m\007\364\272I\271\375:B\372O\275\000j\331\274\334\'\243;\014 \r=E\214\242\273\311\3040\275?\250\321\274\357\032V=g$\253<B\235\345\274\251\266Q=\256\237/=d\337\203\274\343\024\265<\362Q\032=\264Z;=]\306A=\205w\365\274j\246\351:\346\227\023\275\244EU\2751\202O\275\232Ct\274i\234\033\274\335\246\302<e\253%:\360\215\356\274\333\256\272\274\300\333\022=\252\347\035\274\231@f\273z\336\031=\311>\302<\245\362[=\212x~<R.\037=\027\207\025\275xv,\275\313\301\367<\267\234\031\274\265]\365\272\357w$\275JB^\275\335kA\275\031PT\275I\267\232\274\006e\"\275\346\022!=\362\2322\2756\336A\274P!\335\273\364\235\025\275\022r\014\275\257\275\214<v(\305<\263\326\350\273 sA=\021\220\007;\213&w\274l\206l<\222\306C=~Gy\274\177th;\212\010\341<\220\340_\275\307\337B= \2021\275\363d\177\274\253\276\r=\255\366.<\351\250$\2755\'\345<e1.=P\317\"\275;\325\370<2\315\026=p\003/\275\352O\217:j\371\237;\263\356]\275U\370/=\233\3576\275\372\260?=\374\375d\274\212\306\254\273>\335\030=\3374(<<\223l;\216\036<=\300\341 =\023\027B\275\222\334$\275Z\360\315\272t\245\253;\317\334\001\275T\362:=\344\262]\275\362$?\275\023\326s\274V\373N\270\317\305\252\274\007\200P=\002U\206\274\324\025\365<\312\2712=\366\306\177\274\335\005\241;\361\023\354;\257(\240\273\276y\201<\034\333\231\274\224\2616=\204\352\334;\344/\323<\300\014\277:p\352\205\274\335V\351\274\266j\200\274\200K\025\275\265\004E\275\005oQ<\324\346\002\274\021\313\026\275b\027\215<H[\204<2\350\320<x@\231<9R\244\273\3738o;\207\354#<&\323(=K\377l;4\202\231;\264\240\312\274t\256\'\275]U\002=\307\024$\275\021F;\2757=\002\275bBh\274\320\223E=\325\215\222\274)=\356\274\326\371\243\274\276v]\275\213\364#;0\030W=\256\332=\274O\037{\274\010\0210<\324\3152=+\353=\275)$\307<\330\006\034\275\t\247\342:+\366O=\310\220\222<\352\244r<\'\360S=\372c\035\271\365\330\037=\177\211\376\273\322u\006\273F\305\321:\345\312\002=\034\3007<\034+U\275\\z\\\275\317\204\251:\211\365\377\274\013\r\\=S\214\320\274\302\006\026=\225\024\360\274\212L\357<\330\321;\2739\314v<W9K\275h^\227\273lfR=\370\005\317\274\235\330\201\274=A=\275\221\336\306\274\233%-\274\351_0\275\351>4\275\220\321l:\206f\246<\276\256\321\274\324\322\356\274p\277\233<\266\356,=\312\3764=hh/=9\351*<\207\"+=\031\022\024\275\005\300L=p\332\367\274\350i\005=\203\244F\274\024\232)\274\031\037\024\2759O\330<1w)=\003T\343<\017\206W=\020\334\311<n\315Z=\2508$=V1N<\347\237Y\275m-\003=\340\243\025<\375}8\275\221`D\275\270\023\233<\356\0005<\375\322\352:s`\305<I,X;\342i\222\274\267G\204<\224\345N\275\030m\240<\241\316Y\273\333\225:\274c\260\352:\246\003\002\275(T\366\274\215b9<E\217\214\272W\247E\274^\310Y9A\225\346<a\374P\274.?B=$\367M=\341>E\2753\266B\275r\336L=]4U=\250\267&\275W_D=\2223\002=z\360&\2750L\017\274\315\027\304<_\302U\275\016Z]\275J\3154=\345\321B\275\360;\307<\244Y\020\275\325\257\347\274N\311/<\230rJ\275Vq\030\274\035\2370\274\236W\3239\273m\251\2749\272\r=\201>\005=,\205*\275\033\303\356\274\000\"\265\274\345\205@=\243\007H=\265\254\316\274\262\007\370<q\326\254\274\247\344\222<\364\243o\274\325\226\017\275\034\n\306<\315X\004:\223X\000\275\260z*\275\3417s\273\2118j:J[\013\275\336L#\274\023\355\002=\346\363G=\273gA=\327[\353<\201\317\006=\034\334\000\275\307\275%\2745\313\004<\367\347\366<&\240\255<7\360<\275\260\322B=rSj<\313z(\275\315\006\351\271wx\262\274\336\275F=7\354e<\260\214`\274M\2305=B\266\313;\2257\024\275AT\016\275\267)/\275\253\271\322;\342\026\302<\355U\241;\251tX\275\025mq\273\332n><T\014\256<\340\032\234\274\021fD=\341\276{\274\322 0\271\302;\355;(sx\274\311\201F=\307[\022\275}\303\331<x\276v\273\371c\232<\244\004\313\274SD$\275\332\314\005;\372F[\275\375\231\264\274\215\303\357\274%\236A=\r\221\277<\002\2071=\255\205W=\235\215\212<\301\316\243\274\355@w<r3&=\371.>=j9\025\275\"\271@\275\310\342\326;*\021\026=\304z\225\273k\345\212\274\271N\272\274\205\224\201;\203D\244:\276\357K=\300\307\330\274\266\276\335\274\326\177L=U\213\267\274vv\245\2747\032\027<\353\025\021\2740\3232\275{\000I\275\327\277\360<\032(\226\274\237\000L\275\230-8=ugM=`\243U=\206w!\275\312\302\'=\256\005\370\273G8J\275\373\257\027=\261\033\246\274\226:>=P\303!\274\026\256\333\273%\342\027=\"\005K=!\225\353<\363\262\033\275CK/\275f\354%\275\366\206s\274A\266\312<\254\354\315\274\244\265/=\2113M<B\202\210;X\346n<\361U\034\275\302Z)\275\221\375X=\036\347\020\275zs\340<\017y\366\273\210xp\273\251\']\275\004c:\275K\205b<\023\023\201<\216\254Y<\353\'=<Y\200\235\274\370\250\'=o[\326\274\374\223\023;m^Q=\375\334\315<Q\2051=\337\237\257;\2260\326<\265m\250\274K\340\320;\032\3572\273\367\000\016\275\324ZQ=\2602\251\273\243\031t\273\005\007(\275H$\370;\246\323[\275~s\357;\223#\273\274\322$\350<\304\307\005\275\000\306\213\2742\303F\275\005\320\221<\200\334\346<\321\n7=\330\240\252;*wP=^\236\347\274\265B\244;\373w\'=\177\033G=\030w\365\274\206\007\027\275w\207L\275l#\301<\264\344[\274*\214.=B9\352<;D\260\274\302\313\332<\305./\275\346{\264:\342T\347<\371\250%\275\337\324\250\274\000\3438=\313\227[=\210\211p\274\330\233g<[\325\334\273s\302]=\345\211o\274Mb-=l\327\250\274\265!?=\251\305\317:\332\306\017;KjD:\030,M=\202\213\270<\355h\020=\nm\201<\260\014\342\274\316%\275\274hOD=\254\2122=\3505x\274k\253\271\274\250lB;Y\334~<\326#\360\273\344\035\000\272aMW\275\251\035\213\274\244\364e<\303K\371;?\220\013<\243\367\255<\301\024&\274\02095=\303;X=\260\205(=\032\220\010\275\314\331\"=2\330<\274T\357\344<\2158\204\274\177\036\311<e\203\271;\305\242%\275\311\253\034\275\026\233\317:b\251\336<\352#[\275\375\373\364\274&\3079\275Q^7\275\345\226^\275\202NM=\326!9\275|\333N==\0208<\3071-\275\270\007\362<b\230\332<c\260*\275{\006A\275\276c1=r;@=4\310U\275\023ie<\352\333B\275\\\260$<\000kJ=4\3166\273\331<\210\274\024\220\317<\333\377\\\275\357fD\273$\342\277\274\335\272\021\275\336:S=\254\302\241\274\317\360j\274\207\330\237;\344eF\275\202\342*=\241\350I\275\273\236\"=\340x9=A\332\004=\374\341\332\273\315\2308\273\307\231\025=\372\243I\2748\272\373\274\226\315K\275\216\017\003;5\303\341\272\265\332\242<\350\372x<\231B\337;\005X\000\274\3412\313\274e\271\247\2740\302\032\275\374\233\325\2747\243\320;\023\264\206\274\233\006\210<\223\235Z=\353K\203\274&\360\n\274\237\276\034<\032\244\313\274]\362#=\377!r<\021\340A\275\317\261,=\224{$=|^X\275\306\315\202\274\351\375S<\021\232\033=0\261P=\270\t\035\274\321\310K\275\355{>=\253\310\324<\234\251\275\274\341X\236\272V\263\366\273\365=\347\274\203\375p\274\322x1<\274%\004=\007\370\016<\360\017\234<\210s\t\275\252*;\275)\340\363\273\005\334 \275 M\314<\316J\r\275\314\213Q;\037\'\321< \352O=\264\261\024=Nrf<\240\303\001\2758v$=\345>5\275\010z\260\274:\004V\275\373\313\233\274\225\250a\274\335\3721=23@=3\037 \275F\020\036<H\215\t\274$,\354<\257&\227<>r\003\275d\243R\275P\311+=o\271\377\274\344r\315<*\010\031\275\347\367\253\2749I\230<4\017I\274\3631:\275\331\350\335<z\025\273<Z\007\215;\003\002\006\275h,}<\224\370=\275s\001=\275@\236?\275\372\n\335;Dy\357<\323\371P\275\271|\221<^\365\3719\356hX=\002p\263<\3313\376<\262 <\274\365\241\342<\000\031\\\275\351\024\243;\202\210\325\273Y\262p<\342\213R\274E\332\035\272l\347d\274\330\3244=\245\3404;Q}\r\275\036R\034=j\001}<\354/\000\275\214\365O\275\266+o\274\003W\331\274G\236\000=\007\235(=\224\300\265<5\315?\275\303z\201\274R\004\360;yM\353<\331\225\277\274\304\033f;\206c4=T\276\240\274\273\031+=\342\021 <\nX\003=\372r;<\214\304\021\273\2506\014<5\200\036<\251\224Y\275Q\311==\250\220\014=0k\301</WI\2751\006\'=\355\275R=\346)\020=z\260\370<\274\002\022=\230+n<\266_\360\273fZE\274\256\341\312\274\210\035\364\274\237$M=\3651\005\272\025\010*\275V^\273\274\272\262\303<\260\377\342\274}\226\352<epR=\327\212\342\274\366\002\215\273\354\0149=\340\362\027\274\"\207L\275g\0075=@\377$=N \375\274Wf\"<72\347\274\263\252]=\305\3659\275\204\277\014\275\376\306\033<J\221J\274a\320\252<\205o\357<\217\340\212;\312N_=A\206\n\275\007^ =\347\236\035;\311k\001\275\365\341\265<\225\207\225\274+\003\360\274\n\013\005=\332h\350<\300\271\321\2738U1=MO\372<I\032\250\273\201\240\020\275 F\010=h\r\357<cC\323\274\354\274\013=\331\177J=\305\331\232\274\017:T=a\356\360<\360\354*\275\275$.=\211I\373<\264\'\004\274\360\177\014=\345p\222\274\202bY=ZhF={-\033\275\262\241\t=b\337\301;DS\354<\370\302%\275?\315G=\030\334\272\273\205\311A\275\342\237\256\274L\254O\275\267_\317<Q\2063\274\310\212\016\272\314\233\215\274B\254\276\2744C\010=\024\230[=\356\304f\273xd\013\275\347\343E=\240\205\n=1Ym\274!\343\001=,\310\252<\nA/=i\3501;m\347\251\274\001_\375\272\032\277\014\275\317\343L=\240]\257<\177\356J<\255zi\274\346Ng<\363\337\"=\243\002\342<\331\335\035=k\022C=E\304\t\273\324\252\034=\303F\033=\223iG\275\225pI\275E\367\247\274\347\331C=\020\212\366\2741\266\327\273\362\225\314\273\223\204\312<.b\226\274S\3741\275\246j\310\272K\271\003\27592\354;X\0075\275.\303x\274\003P%=v\270\226;b\222\356\274\007E\304\273O\255\367\274\237\204\325\273Y\205\310\274\361z\247\273t\206\322<\275|\372\274\273\221O\273y\277#\275\243\027\256\274\262\255\264\273\367L\261\274W\234\203<\342\177\202<m\263\305\274\247!\\\275\231\272\211<C48=\2526\203\272\336\273\373<vg\347\274\001\016x\273\263ji<^\351\306\274\031j0=|\300\345\274=nn<\323\311\366<\224\226\345\274O\324N=8#(<\266#\350\273 \2705\275]a\331\274\217on\274,L\225<#\367\360;\252\365\237;\244G7=\021\016I<\031\316\376<\322\250S=\022\264\355<\212k\374<\2422\216;\237\022<\274\225\000\325\274u\355\361;\"\014\020=|I\363\274\354\345\027<\224\202\225\274-\327o\274\217\247g:\022\350P\274\300R\372\274\2469)\275\334Y\036\275\254f\225<.\301,\275qW\031=5bU\275\213\353\242<rH\374\274\305\230K=\263EV\275J_\"\274M\335\304\273jxC=L\200.=\027+\334<\322k\010\275\227X\220<\201Q\304<:\334\313<\222\203(=\232\036\013\275\023\254V\274\211\364\242\274\233\005\010=\277\344L\275\331Z\366<Eq\375\274%!\326<\231\247@\275\221\016S=X\024\254<\365\030&=\305H\244<\256S\004=\351\255\211\274\263\246\032=\0164\231<\244\t\242<\200\035/\275\302\255.\275\203\\7\275\371\0040\274\275\021U\275a%\333\274\365\2752\275\022I\366\272\255L\253;\307\300\213<\031\264A\273\335\323O\275\232\222I=\022\t#=\302\033F=\2420\215\273\272\274|<\332\2676\275\0078\017=\224\217D\275\352\362\020=\243kS\2753D\314<\275\365\373\274<h\034=>lS=\\\243C\275\201\036>=\006\333s<\0106\277<p\223L=\270\322\241<\021\215R\2752\312\331<\255\375\352<\253\255\313\274\026\016j<\025\324]=3\322\274\273\375+\211;1\241\220;\300>i\273\017a\035=1\005_\2755c\314;\313FU\275&C\022<\006\023\031\275\351-\016=U0\016<\265\215\303<\000\3325\275\3008\002=\234]!\275\3319\313<\'eL\275\r\t\251\274a\013\371<\223\nG\275\215\177\357<\323T\017\275\231(\372<\003\332\005\274z\302\362<`:\231<J:\304\274\n1\240:\020\223/=\232\242\344<\036\351L\275m\302\003=n\276!\275\212\337W\275\314Z_\275my\r<c\271\250\274\036N!\275\203s\t\2752\3737\274\276EH\275M\304D\275}M\337\274]\202\010=\323\357\276;z\370\004=\235\310!=>\365\21394\364\000\275\242\017e\274c\037\252\2729F\\\275\317\323\332<\013:\342<>\246\025=<\366\360;[&\226\274\365\001\324\274\226\340\233\274\246-\022;Q\261-\275j\2526<S\342\016\275\323\213!=\307;1=Q\236_\273\356mJ=\350\200\361<s\242\016<\2748\203<\216\2659\275\230\343H=\323\222\003\2747T\256\274r~\021\275\004Q+\275\237dC\275C:>\274\265z\245<\303.\021=.\232W\275\324\313\314;W\236\371\274T\221\236\274\035b\005=eZ4\275\340\026S=\350\2445\274\n{\021\274\351=Q\275\201\344\226\274\364\360\375\274\010\263%=\326C\215\274\266p\237\274p\327\332<c\334,=\243\300&\275X\355^\275EJ\260\274\25544\274\226\320\212\274\277\362J\272\031r\005\274\265\006Q\2751\3670\275\376)\000\275\2673\220\274\177\211\006\275\363\366\367\274\247\202\025<\342?]\275\270\227\305<QR =\201\371\000\275\003\354\245\273oa\322<\317%\3569\334\224\026\275\214\002\347\274\374\350\301\274\335\037\316<\234\306\361\274\035\225\335:[\366\243\273>\236\333<\305\241\354\274W\312\004=\036r\\=\304\374v\274A\201;\275$\307\032\274\336U+\275!33=\274\256M\275C\353\362\274(\001\232\274\374{\212\272\355U.\274\006\253\013<\003b.=J\224\021=%*\017<C^\351\273\354\220S=\341(A=\3240\005;\221l\370\2746\210h\273\222\321G\275\231\203\'<\202\036\227<\326\210F\275 \362[\273[V\321<\033\001\\\275:,\036=\3746q<2\254U<\021\375==\036\241y\274\275\243\302\272\356\027*<\216a\025=\244@\372\274\334\013\244:\311\325\'\275Fo\311\274\351\004Q;\271q\014\275\317\311\270<|\333\335<]\303\025<ZYU=OI\270<\300\310/\275\224\3411;8\246S\275\314\274&\274~N\205\273\035\352V=\n\372\311<\021\266\000=\261!\367\274\356\027L\275\026\004D\274\242$&\275\374\223T=f\016\265\273\223\2025\275\315\3011=\036b\275\274\2712\007=d\221\357\274S\005\200\274\032j\367\274O\274\033\275\276\264N=$E\312\274\200\224\302\274\0377\004\275\271\030N=\200\034\203\274\\\343%\275\2414\263<`w\007\275pw.=\322\316[=\330\312\225\274\300d\030\275.\347/=\304\033\365\273\376BI\275\"\227\365<-Z\022=\032@\264<d=\002=\035\332F\275\310\357\323;\201&\014\275\225\345^\275\272\233\340<\1770W=op\374\273&\033\023\275\020<?<+\302\t=\272\3746\274\270y\306<\t\'\335<\210E\222\274T\262s<\324\257W\274\226\202\307\274Oq\027\275\305\343\261;\247\276Q\275\'\210\226\274\021i\273;\200\206\247\273T\230\243<\356\335J\275\234\007\300<\023\356b\274d.^\275(\247\261\274\374t\330\274pS\277\274B\001\004=\233\335\017<\007\201?\275\242cY=2\263[\275\352\242\264<g\213\022\275\r\316\233\274*i/=\361\266\324:*\374w\272\252\003\376<\254\270/=]i\351\274\215>Y\275X\314/=\320\001\371\274\272\377\333<I\223\t;\374](\275*\022\"\274{G<\275\373=w\274\177\301\343\274\224\274\026\275n\2459\275~\006\215:\226u\331<\2434\'\275N\235\006\275(\n[<\213\302I\275\335<O\274`\0348\275\204h\177;%\244\\;kO?\275\245WL=g\224\361\274\323\340x\273\033\257\272<P\017\"\275\230GJ=\272\223d\274\200\264\005=\311\317\222\274\024\000-\275\364\303\003=\314\250\362\274\013\251\020<z\377\000\275]\253G<A\217\026=GP3\275\026|\302\274\340\023\217:\362J\037\275\276\343\037\275\362u\231\274%B\271\272\016R\022\275\250\214Z;\354\213\033\275\306\037Z\275\233\322D=\032\275-\274%\r\230\274hy\024\275\010\n\321\274\307\264\005=\366\374D\275\343.\000\273\213\006\354;\235*\271:a\310F\275\016\356\037\275B\255\216\274\177DL;\374\301u\274m9\310;gHF=\362\n\'<y #\275x%\210<$.C=\363\323\252<\247\001\200:\247\310\207<\\o\201<n\273\006=\252>8=\030\024\'<\220\307V\275\2644\212\274\214N\017<\202\r\016\273\204Y\354;\202\332\246<{3\035\275\373\021\242<\331^\264<\002\307b<\213\301Y<\004\254e<w\004\001=#\250\244\274\300\220\006=\017\221 ;\362\2340\275Z{Q\275\352\244\317<,\177\245<\256\331\226<93\345<^Q==\345\014L;\275\256\235<z\221\225<4\317\r\274\350\211I=\377\304\265\274q\217R\2724b\025\274\354\332>\274t\'\033=\371\313?<\273\204\n\275\240\323\227\274\277x\004\275\264\220*:\n\t\n=\234\317\337\274\350\024_=#\345#\275g\377\023=\322\261\014\275\216%\325;\013\367U=\007\240:<\027p\271<`\237O\275R\000\372<\343\203\373\272\306\024\244\274\202\260\366<\220Q\014=\246\277\220<\345\336O=|I\204<tj\357<3\353\223<>\\\326\274\027\341F=\311\236\020:\300\2138<\364\3726<,\353\345<\374\336\324<\240\306\273\274~\323\357\27447E\274\002\0230<\355Hf\274~#\004<\2411 =2uG<\317\266X\274DuI<i\036\264\274!w8\275\\J\036\275\'n\010\274\263C\217;\316\211\3308\2145\243<\"\007\363\274\rB(=oH\216;? \020\275\371+8\2757S\357\273\027\350t\273B?\004\273\277\333\256:q#\244<$\304R=\352\016\303\274\303\024\262;\203\247>=\274o<\275\263_\267<Y\336\025=\370t\235\274\315BW\274\245\367Q<o\343Y<Lz\336\274\025F\244<\033r==\274O\001\275\307\231B\2753r0=\245\275\341<\221\206k<\3547\220<\302\214\017=\312\306B\275q\2237\275\037\323\020=\271;\351<\321\367]=\241P\033\274\277\'\342\274!\0135=*h\234\272\010\360\031=\250\356\004=\237e\027\275r\275\031\2759  =\337\205\325:\222*q:\354_:\275\237*\277<n=\206\274\014l\n={\265\330;\014~&\275cUG\275G+G\275\245\242Z\275\310]\003=pqR\275\270\326\353\274\315\2379\275f\214\311\273\236\313><\234\263\304\274\352\253\034\274U\005\306\274t\372\217\274\243\273\375\273K\214C\275{@\027\275\221\316#\275\210\344\024\275\210\204N\275\377\354 ;3\314\\=\215\231\024=\230\237`\274M\304-\275l\266\341:@\214R=\331\335\234\2740\310\357;J\204\347<u\2170\275\270\317\356;\323\227\367\274\342\"\035=w=L\275\351\253*\275\245R\\\275\031-\333<%\333\250\274\211\362Y\275\030\336W\275\313\303\305<\344\035Q\274a\307\031=\373\243\214\273|\317E\275\245\326\357<P\017\202\272\252\035\021=\021\037\362;\273\202H=W;@\275)\036\275;7J\235<\010\225\337<{\375Z=\t\254\021\275\023\350.\275x\3374=\355\225\206\274\315\231G<\263\266\343\274\027\317\\\275\355\257L;\006\352\215\274c\321}<B\020\"\275\2321)\275\261\205\035\275E,.=\322,[;\337jH=Q\240P\275\211\371\220:?NA<\201\337\t=O\226\362\274\230\233Y\275\004\266\315<\021\315S:D\217.\275MX9=\026\215\234\272\220\273\t=\265X\357\273\003\244Q=\256\206\275<\345zz:N\334m;\324\207\017=\\\024\221<Nn\303<\252\225\006\275\032\354\224\274\036\223J;0\300\034=\310\253\200<\262\341\334\274\315\255]\2757\360-=a\370-\275l\004\271\274p\346-<^\237h<g\010\327<\343\253\016\275y\016\231\274\243 \264<\004\030Y=\223\211:\273\366\307\211\272\335\202\324\274G\350\356<!{\255\273aY\351<E\211(\275H\023\035\275Q\355\367<\002\271*\275$S\\<C\026\222<L\3150\275\310C*=q\300\335\274\007\343B\275\345\231\275<vP\320\274\262*W;@\200U\275\310\275\006\275s\206\025=\237\260\032=\177\241\371\274\235o\177;|I\235\274^}\256<\264\326_\273\354\306a\273\322\377^\275\316\203H\275\027B;\275\215\020L=\036\245\002=\306 \t\275\000\010_\275\266\216\203;\025,\016;;\272K\274\271y\024=\374\033[\274\206C\360\274\224U7\275sr\300<\033\n)\273\2631o\274\217^\037\275\240u\255;\203r\014\275q\343\361\274MT\014\274\313\005\t=]Y%=\267\205\021\275\027\213\335\2730S\273\273yG\257\274\312\025\037\275\337\3413=Y\303\303<\311\'\224\274:\263\305\270 Y\210;\025\353\247\274(\215@=\247Y7=b\014\311;\205\340<\275\250u\006<\245\334\352\273\226\004\343\274\2045D=\230\315I=\264\215*\273!\376\313\274H\371;\275\240)t<\231\006_\274\311O\r=h\255\214<\031#b\274\305\372\251;1n\037=\021\017)\275\2024<=\311\234f<9\\\265\274\333<.\275\005\036\037\274M \374\274\274\374\005<\034\377]<\365\252L\274R\336\321<\352\360!\275\350\371#\275r\377X=\372\313\034<T\332#\275\232bb<7\374\022=\3673\017\275\243\222O\275t\274@\275\017\300\357\274m\220\255\273syf\274\306\014\234<k\264\224<_\260\340;\330\025\242<\365>4\275\232\331\373\274(\017\356:<\032[=\234\277\t\275)\216D\275\226T\257\274\023\234\215\274\276\255\033\275\337\335\327<~!n\274\252J\357;Y\212#==-1\275\313\204\353\274PC+=Ic;\274\313N+=\003\0218\274\343r\373\274\325\276\027=\262,0=\216\325)\275\301Z\031\275\277\2016=\t\225\031=a\314\356<\207u\263\274\361=\212\274\020\313W<\314*0;[OL\275\340\211E<\202\352\211\274dK\330\273)\266K\275\r\\K=\331\367\366<\002yp\272]}9;\241\253\033\275\347\303\020\273\374\317\300<(?\214<6C\325\271\257:\346<\307_\005\275g~\255<e\377\275<\310\231\310\274zI9==\255\367<\300\261E<\020\374\257\274\232\243\310\273\216\035\307<%\030\243;h\270\032=\023\003\211<l4\254\274C\313\244<\336\333\022=O\270\227\273\222\017\361:\001\331\245<\355>M\275\367\274\354\274\265\340\026\275\314i\010=\001\263\321\273\307\r\244<\354\317_\275@?\327\2744\267\332\274Wt3\274ze@=\013[\317\274X\037R\275kn\272<T_\320<\256@9\275_Zw\274\003O\024\275\010\335\335\274}1\020\275\260\362N=\367\331\'=,\312\333;\277!\313:\r\026S\275OI\277<\020@F\2750\3336\274\335\364\253<\310<\007\274\306\214>=\355,L\275&\372&\275~G\331\273\037ta\274\307T+=\373\264G\275\363\344\235<s\344\014=\372\305S\274\234\000\212\274\204\302\006\275\3464+\275;\234N<h\352\276\273\343\'6\275\2476\235;\207 o\273r\312\024=\024\360I\275\221\366\007\275\031!\214<\343qZ=\233\020\351;\306C\322<\326\372\305<\266\010H\274\021\336+=$\203\336\274rU\373;\276\270\254\274\237\353)\275@\372\377<\376t <\222I\246\274\314\325\265<\235\324I\275J\322Q=\262B<;\362\010\\=\343b(\273}$K=A\027V\275\274>U=e\0214=\352\274\025=\270\311A=n\352\000=\316\'\004=cZe<\2369<=6o2\2750\221\203\273\355\\o<\250\243\r\275\330\276\007=#\022B=*\263\221<\305c\353<\000;X\275\246 \037=\205!\202<\223\342[=\267\013D\274&#^\275\276\217X=\233K6\2759v]=\321\006\366\273\233\340k;kh\\\275@\017T\275_D\245\274L\222$=\231$z<\206}\247\272YZ\245\274\027\035\354\274\234\354\016<-\223\265<<w\235\274:0\037=Lk;\2750u\316<\375Uy<\215\336\214<\224\3300\275\232_$=\357\2656=\213\020==L+K\275\211\007\034\275\271\013\025<J\361\033\275\313\346)=\305?\202\274\207 \224<\362s\000\275_\256\236:\002\306V<\322\231$=\260PK=\223\202\253\274|o\000<e\232\314\274\334\320\260<\266Y7=m\357k\274\300U\036\274\337\224\225\274(3\343\274\373I;=1\263\227;\312HG\275\035\230\020\275#\355$\2758\350C\275\024R\331\2740XR<\204\241\314\274\266}\363\2748;I\275\2152=\275jY\267<m\277\010=\320*T\275S8U\275\374 \211<\262m$\2746S\277;N\263\245<Q7\331:\325;O=\352\311.<P\016>=\302\206G\275\\\035\204<:\354N\274\357/\301<W)\247<\023E\236\274\346\203\211<\241i\n=\255\\\014=\373\237\006<\304\337$<\356\316Y\275\262J\205\274\223\213d\271jr =\332\213\364<*h2=h\242O\275I,\273<C.?\275\\E4\275{\3336=^&Y\275\355\226\005:0\240\010\275\257:\020\2751\030\353<#\037o<\354\016\034\275\267A\\=\017G\350;\037\205N\2750\254\207<\275\233\032=)\'\r=n\300\033=\227\315\277\2743\013\3359N!-\275Z\237Y\274\312\2657=\020JW=I\210\000=\207\214\312\274l:\035=\256\3073\274\266\014\n=\026A\030=\271\220\352\274$f\254<\320\201\232\274\'\267\364<\355\032\014<ph!\275;m8\275\250\004\341;\235r\201<\346\375\\\275{\000?=\312\035\345\274Fc\353<a\377\357;\323\265\236;\316+\026=\245\350\030\274\251\234\263\274(\032>=\374\255\"\275\r\005\021=Q\376\305<|\027&=\0069\266:\005\240%\274\356wK;\000.,<\332\236\244\2739\206A<\024V\240\274p\206\272<\2300\036=\374G\311\273\010\362\216</,?\275\002!R=\204\222\321\274i\303B\274\372\001,\275W\247S\275]\335\235\274\317=V=\255\263@=\365\356%;)\326\246;K\036\350\274\330\212#\272\340\316\222\274\241\323C\275=\350\230;\256\021\014\274\210I\230\273{\250\023=\000\263B\275\356\246\'=\t}8;\222\335\205:\3351\022=(`4\275\002\324\324<j\340\003=\254\027\341\273U\277\034;\0100\336\272g\"\353\274\204\276\255<X\034(\274r\336\240\273\362\034W\274b\212\013=\366\245S\275\335\367\022=\t\333\001\274\305\020\206<\267e\017=^\322y\274\325\371\320<P\3025=F\020\221:\024uS\275\302\247.=(\002\272\274\221\366B=E/\267\274Da(=g_!<\023A+<e\026\213;\201\017\214;\272uf<q\342/=4\337]\275\270L\237\274I\267\320\273{\217\\\275\331=\366<\202/\300<\215\366]\275\265y`<h\251\343<\322\204q9\233\252\257\273\035\313@\275\236\272Q\275n\372\256\274\346\342\334\274/8)=W\242\032=\231)\332\274H\225N<\346,Z<R\273]\275\326\306\340\274&k6\275\t\244R\275V\342\353<\177\274I=\036\254+\275\302?\345<\334O\273<\217\177+\274\327\022\003\274\361a\314<\370\013:\275_\014]=v\242S\275O\334\340\274\245t\222\274\306\331\371<k\202\226</:\025\273\225w\371\273\nh+<\0135W=\237[\304<Z\020\276\274G\357\317\274qQ]\275\342\245\263;\'g\307<\303\030\271<{\315\362<\'X\344;M\371\202\274\337\301T\275\271[\203\2734\'U\275*\305\t\275p\023\341\273\033b7<\355Q>=1\236W\275/\374\311\274p\313$\275\322\010V=\232\242\272\274\275<\246\274\206\r[\275a\375\360\274\233\317)<Rk9=\375\234\252\2745\3528=\215\277?=`\265\n\275\031f_\275\344\354\341\274N\2153=\322Q\227\274!\035F=a\330\255;#\366\244\274\354\\\253\272\271\206\007\275\\\367\025=\267\205\2049*!\017=d\375\247\274\206t\031\275\'\311U=\000\327\342<\207\323V=\023\332;<k\345H=\213WJ=Io4\275\346T\013\275\223\305\"\275\274\354\362<\253*%\275g\275\033=\033\322\210\274O\365.:\025\235\350<\026\242\204;`g4\275\331\242\237<\201\210\021=O\246W=:\213E\275\316#\214\274\340\217\013\275m\024J;\225ZU\275\007\210J;\025\310\236\274u=<=|\257:=y\316!\275\313\251W\272_\003D=\227\333\227<\022\0326\275\253:K=E\204|\274\244\253\226<\0149\r\275y\372\271<ya\033=\274\004\242<\340\223\357< \370A<3\004\267;\000SL\275\341\327d<p\326~<NEF\274\211\333\037\275.kP\275\3071==\3054\033\275\314\031\266<A\344\217<C|\356<\226BR;W\312\330\273\212\373\037=\027\251.\275^\223\327<;a\035\274\355w\005=\374\247G<K\276\356\274\2328\027=\251\205.\275\342\030T\275(\260\023\275\246%\033\275?\350/\275\033@\001=/\364\311\274Os\034\275\337\206\325;VI\227</\254\036\275H*R\275\3677\345\2731\002\225\274\345\200t<\254\272Q<\251\025A=\004^\213\273&\315\305\274\201P\253\274\330l\376\274\324\232Q=\263\217\020<\234\327\355<\373\213\r\275\346oM=!\263x<\2652H=\245<\200\274\374\023\262<O\251=\275\0209[;3\037\256\272O\323C=x\366\r\275\244\317]=W\006\333<\302,]=1d:=c\2206=\220\034\035=^6]=v\263\262\272\021\306\325\274\214H\227\274zQ\370\274\022\330\203;\363\230\r\274\021\027V<d$\354<_iT\274\363Y\252\273&k\r=\336\223~\274\273g\032\275Am\037\275\353\363\330\274\377\004\373<\3141P=\034\357\223<\376\"\222\273\317\027\334<@\324S\275O\365\367<\025\370@\274\236\340\361;\365\301\235<0e.=V\001\375<?\213\332\274K\377V=\2300\267\274\344\300.\274\242x\246\274\017\251P\273L\025\037<\306\364%=&\014\307;\275\300\023;@\200\371<\007ED\275G\"V<9\026 \274sa)\275\016\264W=\030\250M=$\363 =O\261\211\274\354\263\373\273\354RI\275[\250\305<Pmt\274.h\207\274kR+=\211b\274\274NZ\024\275\346;\021\274\334\320*=\201\242\004\275\336\005\033=m\362 \275\237^\007\274`s0=)\363\\=\362\'O<u\263*=\343[\344\274\262\016#=h\272\205\274\241r*\274\035\261\307<\350!\022=\250D\336\274`\204\272\270\262\241\365\273\347\027+=C\325D=\023\234A<\027*\032=\004\230\316\274\346\006P\275\367\032i<\367h@=\026\247}\274\004\202\345<\033>\200<\251\273\305\273J\0228=Q\243\023\275\344l\374\274L\021\362\274\\\273O\272T\353\002\275v\2023=I\302\024\275\3667\324\274\260:X=\363=G;\320\255\227\273a\371\t\275\024\357==\232p3;\361\327\"=\220\3179=\370\277\335\274g\205\375<\372\247/\275\274\337.=A\3063<~\306\016\273F\217\345\273\032\227\n=\376\304\201\274TtK\275\376(+\275\334\000\001\275j\177^=\342\317=\274\273\306\363\274:\241A=\235\004\250\274\323\311[<d\017&\275\377\207\305<=\216\030\275k\321\205;\347\035r;k.\006=k\367 =\3676\202<\035\275h<5b\300<1\325\235<\250\327F\275\241\317V<\346\320\022\275!\270(\275Y=[=\337\231U\275\372tK\275\330\353\020=\260\240J\275/\336\\\275V\245\032\275\344\220\001=^*);\213EJ<eF[<\244)\216\274L\217\271\274z\307D=\343{u<p\3253;DR\257<\255\362\262\273Q\266^\275\234\013\305\273\225CI\273\344;-=\225\033\035;l\016\017=\2778W\275\001A\211:\370n9=\232\302\326\274\334\252\363\274sAc<\263U\t=\320\321\304<\302p7\275\017\252\202;3\372\023\275\3646 =\337\2540=\035\256\205<\251UY=\241\301\003\275\024eQ=1\036h;tp\023<b\324\n\275\235\214(\275\321#$\275W<\370;\304\327n\273%~\004\274a\361\033=\\Y\367<\316K\342<\315\327\273\2732x\316\274z\"\216<\270\343C\274C\'\341<\340\321-=G\007\002=\262\306\024\274\362\213\026\272\352P[=\222G\n=X\033\301<\301\3276\274lx\025=@\021\374\274\377\327\303<\223\020\254;\247\336\365<g\304\276<\257\361\217\274\230\246\346<a\231\303\274Oy\344\274jlS=\276\224a<Z&2=F\313\271\273\254)^=\013\006\365;\217\311\200\274ik\002\275\031\361\334\274\243\343\270<\222Z\007=\203\211\330<.{\266\274\255l7<\261\rC=\326\224\262;\000\216\010\275\256U2=\024\332+\275yE\020<`\205~:\226z\020=\020\352X=zc\253\274\344(\357\274\\1D\2751\222A\275\367\003\234;\001j8\275\253k\210;s\264f<\000\205Y=\227\225V=\342\267\237:e2U\274\250q\t=\322\201?<e\217]\275\240\3271<M\266/=T\021S=R#\250\274\212z\017=\333YU\274\003-z\274\326P^\275\200/\320<\312\210\312\273\3159\241\274j\304\361<\332vJ\275\234Q\3709\210\364\210<,w\316<\r\343\007=\230\243\204\273\330\256\201<VZ?=\"V\023\275=\0320\275\227\335\020\275P=\273\274\237+\027=\222\003L\274S~{<\365\037\350\274\351\371\234<\321\333\014\274\272\\8\275\257\266N\275\305\'\367\274\203T\336\274\333.\315\273\264p\316\274\017j\313<\314\032\200\274\023\303\034:\330\036\3059c\373\310\274\236,\376\274k!\"\275\306\235\231<\373\373\334\273\367lR=\203\241_\275p\206\371<\232\373T=<\\\215\274\263)U\274\355\246\311<3\373\017\275?k\'=\344/u\274*.6\274$zE\275\333j^<\252\320_=\006\343\361\273\261\2360=P->=d\005\211<\330i<=\020\251@=\277\330\332<\340\302|\274\310U\363;*\3307=\367\326\200<\272\231$=\300\tI=\275\325\013=\365\357S\274\301\251\316\274\246>\234\272\336\272\022\274\210\357W\275\2003(\275\355\033+;E\021Z\275(\2102=~\002]\275]s$\275H\322E\275D\260\024<\376o\t\275%\210L=\322\231i<O\342\242<\256U^\274\314Q=\275\032\347\016\275g]\226\274\272\277\024\275~\261\362:\307m\251\274\t\316J\275{\n\013<\310=\202;\213\232\227;\353c\004\275t\343@\275\224<\001=\t2\n=OA\022=$/\025<6\226\345\273\35296\274\236\327/\275\311\255\210\273\356\207}\274\240\234\362\272\202C4<\352p\014\273J9L=u\363\025\275\024\000I;a/\355\274\017\227M=\264\177@\275\032\257\330\274.\262P\275\227\230\204\274&\206M\274\207\307,\273\235F\364\274\023\271H\275w\024\252\272C\370Q<\251z\251<Y\326\252\274\271!;\2758\310\220\273!\242Q<\216\n\214<\000o,\275KhE\275\303-\213<\203U\374\273*#^\275\343\261\271\274\370\341Z\275\230\025)=\353%\2119\344fV\275\220\r\234<%\321\342<U\004\303\2730A\355<\332\nH\275\323\306%<\320\017_=\214\014@\273\204\0148\275\016_\374;\177\264\350<\231\241\'\274\257\007y\274U\374\213;\342q\035\275\r\215M\275\323q-;\001\327\216<\016\322\214<\220\337\034=\370~\360;\014\002x<\\\240\300<)<,=\270\332\334\274\243\301\007\275\205\323}\274\240\366\241<}\250\014=\332\226\032\275\237\226\274;c\333\017\274\276\364\034\275\357\277;\275\250\204\'=\0233\032=&\224\202<;\n$\275\260RI=\211q\225\273\225\220`\273\345\365\254<\211 0\275\333\n\261\274A\267\274<\343\224\364\274\326K\037<[\251N<,\234\331<\243\304^;D1\017\275\247\362\206\274\0366 =\352\371\340\274\213k\346<\312O\215<\344\\\236<\252\2166\275\277\010B=(e\306<\355-B=i|\272\274;3\362\273\236\334R=+\310\007=a\350\246\270\3571\n=<\032\305<^\215\033=\322y[=\003MK=j\227\001;\302\214]=\336\276\223\2746q\001=&(\022={\005(\275\r4U\275R\\O\275Xd\252<\357x\271<\245\352I\275:I\003=1H\336\274\034#\267;+y\375\274\202\235X=\260\265\244\2743\276\345<\202\346#\275\241o@=\331x+\275\032<\'\274\216\027\213<\001\243\236\272\256\224p<F\365U<\373}\237<z\354\232<\230\323E\274\023o@=og\330\274\320\003\332\274\211+f;j\322\321<\023\351\001=Dv\240\273Ro\016=Li\\<\034\212_=\356\362\006=\202\026\227\274\224R\350<\221\017\202;\323\024.\275\323<8=qi\275<\027#S=\377\351\315<\363\212\014\273\222q2=\256p\030=M\376\274<\016\332\017\275\010\346\352\274L\266\313<\225\032\n=\223\377M\274^\016E=K\261&\275,\274(=y9\321;\222\362\207\274\273\207\332\274\224L\266<\211\276J=k-\n\274*\243<\275\233IQ\274Nz\030\275:\0035\275\251\005\220\271H\002]\275\306\264e\274B\035\037\274\371\367\030;h\351\241\2741>4=\313\337\340<aa\205<c\021\032;\221\027E=1\373\026<\034\215\026<;\025\206<\354$\355\274\3075\261\274\374\"\261<\342\275(==\220\342\274.\202s;bJ\351\274\261\242\213;\357\023\203<\315\301\260<yH\357\274\035\3710\275e\343\250\274\367\326\215\274\021\004V=\010\277)<\320/%\275\242)Y\275Mf(=\030\236\326<N\2718=?\2174;V\222\307\274\337\256\220\274\020\3702=\036\276\034=\rA\"\275\007\013N\273-`\005=B\024\031\274\203\315\013\275\306\265.\275\275\2061\275\353o\024\275\363\3406\275].;=\373C\211<\236\356\344\273BT%\275\243\033\003<B\225\365<;\021\007\275\035}\234<\240_\375\274\337q\361:,^u\274FZR\275\r\332\211\274\246\0223\275\223+\251<\366;\003\275?\005T\275\374s7=)\002\021\275#x2\275\362\305X\274|pr<dkB\2749yW=D\262\312\274\032\302\022=S\267Y=\'a\r\275L\210\332\274\252\322\377;\227\327H\275\202\273 =\370q\205<\321\021\367\273\301Q\230\274\253\000-=F\243\006\275\315\005\254<\272\330@\275\366F\262\273\252\224\r\275(bJ\274\226Dy\274\273\013\237:\2377C<x\367\n\2755|\r\272\347\314\367<`\354Z=\302H\200\274\216\351+=<\306\370\274C\332\003\275\305\343\033\275\276\226\n=F\'B=\004F\377<\340;(\275\355ML\274\314\"\372<ZfS\274c\274S\275\2402\010=\322\202\037\275\017\035\271\274\236F\241\273+\'&\275\\\223\022=&\256\324<\3522\321\274\243\n_\274\276\304Q=R\311\010;Wp\017\275\376\372\005\275\035\270\254<O\353S\275\35513\275\346J\210<+$\006;\242K[=\237\257\330<P\274\215\267\266\356D\275\3353\241\274_\346X<\213,\270<\224\364A\272!W\001=G\020,\275_\025\003\275\227\274\014=u)\010\275|w\006\275J\245 \275\016\022_\275Wh/\274\324\335!\275\264\360\204\274\024\260(\275\310i\316\274\013\232#=uj\025\275\0107\251\271\357\224\007\275\037\234\030=\226\273\350\274&\322Y\273\036\013\025<\233Q\t\275<\360\014\274\34012=CCG=\275\216R=/eP\274\025\264\323\274G\255Y\275y\225\374<*C\244\273\226\244u\273V\366F\275Y\350\222\274\006\332P=\246\216T\2758\301\004\275\254\245\017\275\317U\n\275B\350\355\274\215\017\364\274\345!s<\362\020\313;9\252\\;\007(Y\274\337TV\274\232g\004\273\3647(\275O-\031=\273C\370\274\254\301\014<7\225\323<\323\235-<\257\231\203\274\346\224\021\275\323\374F=\200\237\262<\177:\243\274\201\225O\275\252\301X=7?\006=\270_V\275\000\320\007\273\350;}<\377\240\366;\325y\001=d\232\255\274\035\025:<\254%\r\275A\312~\274\3136,\274\324\360\360<\212L\331\274g\326_<U4\265<\353\232\311\274x\361\230<&\205\253;M\313\226;\335\312\002=\270\277\"\275\336\226\r\273\370\247O=\377\2217<\031\320\222<\300\224!=\264\316N\275\002[\007\275l\345\023\275\007Z\332\273E\275;=y?\210\274{k\020=\265S}\273h\361\000=\372:\337\274\370\201\331\273\321(\027=\364\014-=\257\213H=\033k5\275\346\223X\275\326P\373<\230\335;=\241\306\005\275\351\266\027\275\353\030\033\275\217\314\036\275d\034G\275zS\014<\352Y\301\274\243\224\231\274\356X\026<\246\023\274\274\002\307\242:\314x\007=7U\230:\334\331\024\275\221\274\233\274z\253\367\272Ro\305\274_t\352\274\216\355\000\273\322]K\275\234\024\300\274\275\363\374\273\326\177j\274\rP\\=\257`\027=\250L\266\274S\300<=\221\037\264<\311\'\273<\002\323\363<\024\363F\275(\263\202;4h\375<6Z/\275_Tj\274\374\237;=\367\237\215<\007`\030\274\230\356%:,\210\367\274\002\004:=\305qN=\226\311\013\275\302\353\250\274%P\262\274\320\031\030\275j\361\304\2747\305\257<\366\236\274<7\'\035\275\0131\250<\036T/=<\274\034<\335b0=~\251[\274h\346\007=\032\334%=~xf\273\037Z\001=n\315\177<\016\212g<\001a\327\274$ZG=>9\257;\217\233\032=4\'5\275\363L!\275\215\351\017\275\016\323\341\274\035\014\255\274\022~7\274x\245:\275\177/!=\316\321\\\273\311\325\031\274\312\226;=T+$=\367\3317=\326\365 \275qr<\274L*\356\273\335X\017=\265\314I=~9\016=\026\233 \275\216\227C\275\201\3623\275]\234\017\275\307\217D\274\373t\213;(\311\034=3\335\026\275A\205\335\274gT\306\274\337\347.\275O^\357< m0\2751\367Q\275p\253\300\274X{\220\274E\334_=\3563\020\274\005\337\025\275*\261M=i\374\r=\004\244:\275{\335\226\274\364\264)\275\374\252I\275\001\010:=\262\333I=\203\026X\275@\216;\275|\261\307\274B\315E=\214\035\013<L\322\373;\337\r\215<:\300\377<\033\245\303\274\262\322!\275\276m\002=R1\257\274\322\n-=\230\316\214\273K2N\275{\316\236\274d}{\274\277/3\275\3351=\274\246er<\203\252\246\274K\030\"\275*bN=E\346F\274\322\232\243<\243\357\222\274pI\343<\325\357\340\274.g>\273\033\\\301\274\352\361\201\274\342\250\262<\3035\304<\305\335\n=H\343(\274\211V+=\353]\345<\204\267\330\274:\'K\274\372\034\231:\304y\207<\272\201\013\275\225\341,=<\001\260\274\303\273\036=\224o\234\274\216\232_\274\367\344\316\274\265\243\322<\230\232B=\037\'5\275\022\003%\274\336&\350<\347\363c\274\005\260j\274\374\265\272<\215\017\016\273\362\243\267<\330\032@<#\022\225\274\375<U<\022\265\031\275\21178<IU)=\215\363\365<\360\324\370<o?\210<\334\020\373:&\3747\275%\277\250\274\023\244\276<\203X\364<|\217F\275\216\336\363<F\323\326\274J-\240\274\026\000\n\275\267\352\363\274\001\371R\274sx\244\274\025y\035\275\241YN\274\260!9=\036B\320\274\000\354\026=\372n\253<\034\'\024\275\375s\233\273*\366\223\274**\266\274%\224\005=3\335\321<.\251$=\330 Q=\366\344E=1\341L=\247X9\275\306\005<\275Y\017E=\361\350Y\275\321\r8\275\273,\"<V\257\341\274^k\275\274\333\030\t\275\223\251\255\274\222\3110=\'<\275<x=I=\321j\227<\006\331X\2746\375J\275\212aI=\001\361\016<\205\347\304\273\214\302C=\014\213\372:\"Nx<t_T<Y\361g\274r\355\371\273\023\031X\274\217\337x<WF\013=$23=\206\207I=\030t\355<H\332B\275C\374u<)=\265\274\314(\016=\347I\265<\312\3364\275~\361\334;\324T)\275\255\313\'\275\222\244\024\275\335\300\203<\357F\355:p\006)=U\364?\274\354\310\024\275\226^e\2746\332\207\274]\320^\274\034\323\\=\303\374Z<\307\\\237<v\272\024=\260\262\225\274\371+;=\215\216 =\200\r)<vsO=\\\277K\275&\333\371;!\277M\275\323R\244\274G\014\014=\tv\247\274\2013V=Wp\354<\205\356\227\274\240\371\347\274\316\263\235<\200\237@\275\250\2463\275WJ\036<{\304\000=\201\303%\274\225o\033=\272\230\322\274\322__=\332~\255\274+\323\257<\364[r\273d\317 \275\010\247P:\246i\004\275!FY<\304\350\366\273^K%=}\350\024=\303\242!=*|\320\274\215\013\033=\001\022\210<\262!O=\350\345\372\274\2777\223<\007\372\025=\332\322\246\274\246\235\315<\354\030\340\274>\343\304;\303\212\016=`\270\035\275{\0142\275\014\315\347;(\215J\275\335\300\321<aW*\275\271\363S<\262\025b<|\223\033\275\361=:\275\344\324\270;-\333\036;\317H\013=\367\2660\274\261\0106=g\013\375;\n\021\241\273\240/2\275\201\346P=\005\362\307\274q\017\023=\240\321,=\352_\247\274\236\3506=\372}W\275h\275,=Z\r+=>%2\274\242E\334\274\354mF=%\363\354<\016\2053\275\365\264 \275\372(%=F\254G\275*UE=z\373V=\013P[\275\013\017\215;\206\224.\275]\313\004=\003\347)\275\014\324\002:\363X\214<%\230\360\274\016\250\t\274\353$X\275\374\277\016\274;\'\326;d}\3418\353<!=\335\344\201\273CH<=\336\207=\275\002\345\024<\377\356\006\274\341\355F\275\270\374\200\274\367QV<\241H\240<\3265(=\"T\327\274\245J\013\275d\370\263\273K\233/=q:8=\350WP\275\360\006\233\274\315\370\032<\251\330\375\274\251\313\004\272\242\241\035;4\226\222<\206/]\275\220\n\272\274\347Q\010\275\")h;\304\004\030\275\241\3470<\257,\354\274\336\240\344\273\313.N<\305\324\343\274\244\344\242;\316*\\\275\0073J=M\236J=\0061\033=\253E\317\274[\376\244\274\257\310\233\274\323\320L=\354<L\274\330F#\274u:\211;\3055\321<O?\365\274\376%\375\274\330\2577\274\257]5=\034t\236\274\036\021n<\263\2211\275\020\224\034\275(\222<=]\213\245<i\263\001\275\257\010\332<\346\233\224\274\270\004n\274>\241\237<.\311>:O\345\032=\264\350R91\2700=F\212\020<}\033/\275\027\225h\274\016\227W=\372IO<c\216\255<\336\010\036\2759\236\357<\336?\277<\024L7=\241\371\323\274\0242\204;\2423\031\273#{\236<\312@#<\301\302\366\274\244\245>\275\302\342\033\275h\362\"\275S\327\232;aL\234<\306N\021\275`\316\363\274o\3146\275U8\252<\3432\327\274\013\nZ=\270#.\275\375W\370\274\002\360\355<\333\220@\274o\022!=\017\000c\2749[Y\275\323\032\312\274\323YS:\334\253D;\016%\345\274\330\177\316\274\251I\036\275`\213w<\037\273B\275D\364\230\274\376\035I\275\201\202N<\032\310!=\361\256J=\223\300\230\274\032\332\006=\005\037\023=C\350\037\275\327q\007\275\"\265\362\274\316\364N\275\223\215\014=\222\0149\274}\303\030\275\030\tB=\235\025G\274\350\271\247\274\312.\013\2735\006\305\274}\030j\274\203Ck\273~\210O=\306\310*=\017U=<Bw\324\274\346_W\275h\"\272\274\267\226\007<\214/O=\346\351\246\274X[\266<\006q\177<\332\025\221\274\307\333N=\"j[\275X\271\374\274U\2612;\324\033\312<\242\000\021\2752A\027\275B\no\274iQ\027=\262\206\363<n\001\327\274;\311\010\274m\277\017<\350$\335<j)i<\265,7\273\307r\026=+\344\013\275\023HQ\275G\260&\275\341\235T;j\2369\275sB)=\303z\356<I2^\275\247\265\213\274\215)\004\275qP\272\272\000\356D\272Q0W\274G\210\375\274l5J=\034\343/\273e\026E;\307\245\335\2740i[\275>\233O\275\005\033\317\274\010\243(\275\'T\032\275u\230Z\274\036\033\027=D\342\241\274K\201:\275S\203\315\274\234\265\366\274\314\346C\275\013\336R=R\314\244\274\277\231\243<\267\300^<0\236\246\274\224\240,\2755\357\345<\357\200H=o\370P=\256\221\353;\265z6\275\027gV==\366\020\274{\021S=f\313Q;\210\035Z;\257\r<=\217\305X=,?\007\275F\330\340<.!\272\270\202\035\277<\263_\337;GO\374<w\347/=\325\300\016<\373\013K\275\302\370\006=\224z\211\274t\202x\272\247\226\352\273\362_\016=\274\276\214\274-\365\335\273\201q\264<A\273\214\272\026\241\025\275H\025\262;\005>]\274\021\032*\275\326=\354\274\217)G;\362\026\246<\361\026\266;\374\301\374<\327\254-\274\250\276C\275WQW=\257d{<\264E+=\026\001\032=\023Q\325\274\340X\023;\256\003\007\274\236=\037<PI&\275\225\234\243\274I\223\036\275,(\304<A\271\205<\255\372\231<\272\222\322\274\033\324\307\274\300\236)=)\202\\:SV5\274\242\314J\275\020\222[\274\037\355X\273\355\336\013\275w\207\000\274\262m\303<\203~\003\274O\241\223\274.\315\225\274\312\254\247<\014\027Z\275\343\221\242<S\'\351\274\225\215\355<\234j\251<\004\326N=\352\223\314\273\261\303E\275~\301\314\274\351\226\363<?\244\320\273H]\366\272\227\315\031\2755NU\274D\372\336<\223\3461\2755\270]=\342l\324\274(p\006\275\024\324!<\375\271[=\353YP\275\233\375+\275\003I+\275i\227\245<\340\004/=;\255\014\274\217\266&\274\326\314\226<\223Yd\274\nt\214<2c\237\274\216\226\376<\017GJ=\217AF;\377\342\354<\372\031\300\274\t\306Y=\355d \275\225S\311;T^J;\362M\361:\244\343\303<\036\n\027=U\245\320\274V5\374\274{\220\331\274\340\310)\274z\036\203\274\014\310\317\273\2579\t=\204\323*=)Q\023=\277]\n\275\206\325o\274\3261\201;g;\310:W\250/\275\242 H\274Gn\035\275\007\207\276\274\026\r\367\274Hs}\273`\246\250<\035J\350<\022\342\354\274\035\306\035=#U\t=\022\373D<\304\251/\275\243\377W=(\201G\275\377\210\310<]\036e\274L/\321\274\256\003\010\275\341TB\275\337\307\243<h>R=\034j-\273\245\014l\274\332\226*\274\010\022M<\370\217\365\274\277\314S\275\322\376;\275\266\225\222;\016\005\364\272d\234A<\245\257\336<\345n\330<$ \030<Mm\036=\304\367]\275\345\326,\2757\262\207\273x\006\021<g\226\234\272\276\361\004<\276;\017<\315Y?\275,V\036\275%\036\316<\370\037F\275\224Z\n=\233L\340<]\333s<\351A\031\275\250\216\001\275\377\300 =/\247:\275|\376\313\274\312\027\347\274\332\'\275\274}\033-=&F\023;\nO\010\274\2063\023=\233\212\010=\315V\034=Q\253-=k!r<\367\261D=\342\366I<U\212%\275\320u\302\274U\2473=)I\330\274r\2437\275=\366J\275\270\377\310;\346\243+=5{\320<BX+<\333\322\t=\"M\006\274\1775\364\274\3648\014=\331\353\242\2747\327t<E\006\222\274\346\313\013\275$G\344\274\366_J<\261&\r=}w\234\274\232y\337\274pw\031<\036\307\\\275\3660Y=\241\377\360\271\031\355H\275\201(1<\026\232\331;c\276\310\273\332\355\201\2744\263~\274\0050\"\274z\350\223\274\353\354R\273\362,N=Up(\275l\346\327<\272,Z\274\223\255N\275;\253<=\017\314\035\275\372\206\336\273v\204H=\300\370S\275\252\322\372;mbH\275WJ\361\2738\345\177<o\006V\275\263\222)\275\351\263>\275\2710\016=\207t\003\274+.o;\336\245Q=u\252/=\262n\002=\302Y\035\274\253\224Z=\252\3375<\263\0035=\304\276\036=\030\326\232<\317`\022\275l\214X=p\333\332\274\200\2475\275\037\333\005\275\342\351M\275\356h\334<(ES\274\227\024\021=\357TT\275\256\002\265<<\371\353<\202F\335<!\331\327\274\205\301\006\275z\003R=\265\027@<\031\225\213<)\330\321\274<\".=\257\t_\275\263\217\035=\235\0350=\016\3229<L\312\316<\200\314\246\274\262\2206\274P\376V=\"\342\251<\211\014d\274\372\206\330\273C\0163\275\357V\004<#\271S=\247\317G\275\022\363u<\374\374\324\273\214\366\000=_\231\216<\243\271\025\275\367\032\372\273VU;\275\\C3=\366\005%\274\312\220\215<t\325\342<\250\204h\274\251{!\275\347\n,\275r\240\316\274\006\002\335\273\370\250\254\274jQR=S\256\261\273\003\007\306<O\310\262<\353\374\370\274\310J\t<m\273\327< \t\n=*\352\000\272\024\217Z=\351\3766=V\264\305\274\340\217\025\275Cm(\275/4/\274\375\007\372\272\263\330\031\275=0\362\274\317\311x<\372l\\=\n\0103=\333\305;\275;\2241\275\320\256N=\0355\312<\324.K:\221\316`<\215\214\027<\0057\326\274\rBV<\321\343]\2753\225R=u\346\031\275\006E\315\274iVX\274\325\231\003;\354\323\327\2744Z\210<\373\026~;7\222\313<\255Kr;\337yb\274\321?\276<Lx\023\275:\037)=\025X&\275\224\262\244<~\232B<_\200L\274\276p7\274\242.\t=\205\\W=4\332\336<\311\240\373\274?=I;\254\252\231\274/\0363=g\345\343\274\2341+=\251j\276\273\3004\322<,N2\274\022\350.\274i\265\254\274\310\303c\273x\355\t=\276\006\021=0\304Z\275\304ZK=\355y\250<\354pT\2754B\314\274\232\212X\275\256\"&=\362\363+=\255\2142\273\r\030\001\275L\017:=\256\336\304\274o\240\264;[\330P\272\020\377@\275\225\232\021=n\224\254\274`\233S\275~&!\275\205\354\027\273H\343\315\274\034o\024\275w\330\025\275\0317\277\274\030\210\213:\253\026\230:=nJ\274\001R<\274ss\363<\2233\253<d\001#=\346\006\234\274wt\350<\247\242\257\271\224\325k<\350\314v\273\214\001\r\275q\261k;\245:\220<\235uN=]\362\320:\225u\001\275\270\323\274\274\013\252*\275\323\373\314;\005\234\316<?\231\300\273d\023\327\274\036\351\035\275\030\354I<=\003\303<\301\030\233<\3045O\275\2216\277\274\322\255\005=\243K]\275\250\2576=V\354\002\275\351\330W\273l\245\031<b\3301\275\177\033)\275u\361\215\274\275\257\2169\235\2656\275S\327\035\2755\330\222<\317\000\342\274\332w\\\275\261\314]=\317B\001\274\275\020\272<\202\344\306\274Rd8=9\016X=9\223\336\274\336T\316<\247e\036\275\377\340\365\274\340\351\025\275\363T\370<3\202T\275\t\307V=\256\267\004<\264X\003=t\320\271<\345\250\007\275\021\334\344\274\005\367_\275\256\000\244\273[~\021\275\312yC\2759\337\253;G\273\363<,c\214\274\2130\016=\306\321\006\275\334\3437\274\276\242l<\367AA\275\343\n\260\274\304\013\005\275\\n]\275\010\310\207\274j\2052\275\216\331\263<\346\277s\274<<7\274\225(\325<\373\253,=4\003I=UiG\275V\217@\275\001\014\013<\203\323\245\273\231\27609\010\031\022\275\343\257\234\273\361\373\000=\203X\350<s\370\266<|\203\350<\365Q\367<\331\262D\275\316\013\316<\325\347.\272\360\351\025\275\001>B=h\246d\271\311\272K=\020;<=\341\026\025\275\204V\354\274j\237S<\241*\026\274\312n\013=_\274I= \017\000=%j\237\274\257\311\314\274\2754\373\274$;6\274BP\253<\"\326W\275\1778\360\274\214T%=\003\023A=\270F&\275zB\324\273\000\273\001\273\276\017\025\275<\3027<\216\311\024\275\034:,=\t\335,\275\335^\327<b\277?\275M\373\305<\241\301\344;\264\2703\273\002wL=@\372\236<\n\010\276<\237\205\255<\352|\310<\200Z\307<*d7<bK\034=4\267\362;\237\014\330<\312&\203\274(\026I=-\336\016=H\031\"<\203>8=\200\324\235\273HH-;\230\274\020\2756:T\275.\\\200\274\320\230\333<\221A><\223\005\351<b\373X<\032\3069\275_w(=\010\377g<\024e\246\272=\336\271\272K\272+=\330\267\206\274>\351\002\275^#\000\275E\317D=\271\350\007=g\221\017=K}^=\274T\002\275.\327\376\273*\327H\275=\352\332;\r\241\177\274\207\337\333<v\214\027\275\350\3401=\'\230O\275Of!<\303\257\363\273piA\273\360|\303\274\020\007\031\275\240\336O\275a1\335\273\344G\243\274\3753\217<\213\367\252\274\245\320\227;O\021\245<\337\216`;T\235\016=\272*\260\274I\263\230;\344\001\333\274\034\305\303;\346>\022=h\273\342\274(\241J=\316\352Y=H\013\022\275TQA\275(y5=\225\3128<\305p\235<\235X\341<#?4=q\204\034=L\016\334<\304.%=\351y\313\272vTF\274^\274\251<\325\330\n=\207\013\244\274\251Z\303\274\377\255!\275p\217\227<2\243@=\177<)=\222\013\310\274\205\270\302<\372<R\275X$\222\274jon<v\307\202\274\344`\356<\224\2467\275n\215\007<@7s<\245v\215<\215q\370\274GN\024=pC^\275\271NJ\274E\3648\275\177\246\345<p\363C=\324\030\255<p\213\036\275\005\361\360<\320\207\0349\210\310\007\2755\222\003\275F\361Z=\300N$<\237#\"\275\322\002\007<]\206\374<\271/;\275\304\301?\274l\227:=\030\230\037=.5Y\275O\227J=\314>\314<J\223D\275\235E9\275\010\r\017\275m]\332\274\024)\t=\006\n0\274\035\013E\273\331\321;\274\037\206\020\275<i\344\274F\263\"=_\376\361<S\236s\274fn\265\274H<F\2759\326V\2753\237B<nd8=\243T\342<\224\341\254\274\335/\001=\322x\227\274o\002\"\274\207\245Y\275\303\307\302<b\\X\275~\275&=\"\026\253;\374\333\366\272H\0064<Y\311\207<\316{M=\305\331\010=\313\202\031=\240\374k;\241\177==Ye\313<\332W-=\034F\350<\3529G\275\370\344H\274\317\312\237\274\346\351x;Q\250\235<F\340Z\275\230\305\321<a\216\177:\257\225\021\275\211\331^=\031R\036\275\337\317\342;\376\240\354\274\026$\236;\205yE=\210\356\372\274\037s\370<\010f\032\274\325\242\346\274#I\341<\211h\210;\266\211\'\275^\346\267\274eg\262<\030\276\005\275\312\177\343\2749`\227;&8\247\274\'VD\275aO\026\2750\3450\275L\377V\275\366]\373\274\316\325G\274E\312\020\273\313\206\020=`_J<\223\262-\274(\214\212;\343\271\361<uk\204<vX\207\274(\205}<\372\3349=\320j\\=.oC=K\237\000= \263X\275r\261\264\274g\3202=Y\253\204<\004\342\347\274\237\202:\275\231\223\232\271\022^\017\273\337\206T\273\355\362\230<t)h<\264{*\275\254\036y:\014Kd<\222\001\035\275\001\270\205<\347\351\326<\300\004\213;^\277\306<\334\250\024\275\360`\035=\256\272\345\274P\032\263<\256\305H\273\335\242e\274J)\303\274\242G?\273\216A\036=\304i\017\275)\266@\272\212L\027\275\262MJ=l\036\222<\335\2078<\311\355F\275\342\240\034\274\266\272T=\302\214+<\025yF\275_\316\375<\215\355\260;[;\037=\313fM=\030-T<\321YE\275\003\274\201\272\305\252\020\274\375h\375\274\346BK\275\035\216n;\356K\020\275\331\023\370<M\351\000=\214\343\360\273R\204w\274\263o\037=Xr\343;\351\26299$\237\325<?\2312=/w\355\274\215\025\020\275\265\275j\274{\271\t\274\355\261\216\274\312-\206\274M\017\035=\265\227\252\274u\333\316\273\333m:=:{\036=\206\3042;g\211\220<\031|\377\274\007\343\002=\200\273 =M\361B\274\332\306\275<\014\224\213<M#\242\274\334FZ\274\022-\020\275Uo\266\274w%#\275q\257\311;\0170\030=l\266\032\275\235c\330\274\222\177\014=z\331\372<\004\364\023\275\362\205\026</\240\014=\250\235]\275\314p\027=\346\267Z=\250Z(\275Q\2176=\205O|\273\227`.<)\366\324<\2059\024=\236\214U\275y\241\342\274W\266\004=%\204\r\275X\037+=\261\223\214\274\264\347K\275\321 \247<\333\036*\275\215\242\275\274\241\n\010\275J\033X<\3120==\247Y\007=\230\240v<\323\001\000\275?\254\367\274\240\361.;\342K_=w~\004\275}\365D\275\257\204\375\274B\205\005=\275\257D\275\355\002\232\274\201\277\254<\024\325\354\273m\367\362<B\343{\274\225\024\333<Nr\216:\244\334\357<fW\016=\226s\202\274\305\032O=\334\334\305;\224\251#=\027\252J\274\036I<=\275ZQ=\233\337\201<\364~\266<\203!\352<\263\232\334\274\241\030\260\274\301J\274\273lT5\273\260\367-\275\025\322\337<E\245:=\330&@;\\\037\000\273\244\256\265<\366\036\032=t\217A\275wZq\274\271\330\264<\315\340\220\274\224\233]=.\0277=9\217\242\273\246KW=x\337T=55\345\274O*<\2759xL\2721.\224;*\232?=\322\353\346<\261\322>\275\224\331\005=\215\356\226\274\010\037\216\273v\014\002\275\025z\223;\324R\t\274\036&\004\275\362~>\2757<Y\275\333\"B=\336o>=\246\332\337\274*i\353;\273\000;\275\r\270\000<?\211T\275\033\024X=\367\235\347< \264W\275\203v\376\274\251\025\337<oQC=Ji\250<\202\346\342;\260\340]\275\030\034*==\305\224\274*\'\032\275ne \273M\217\316\274.\315#=\345\023\037\275\271\201E=^\305\347<\351\023\363\274\221h0=\300\023\337\274$\020$\275\325G\t=L\336\312\274\243_\330<\032\243U<\276\024J=y\261[<\3707\303<Y\326\227\274\2074\240\2740\006J=\325\216\315\274\216\271\351\273\317kD\274(%\316<H\233\031\275O\r@;\277(\263\274b[]\275\266N\246<\232\256\020<\255\372\227<4a\305\274\001-U\275\232\017\254;\177\177\300:\270\271O\275.\316\255\2725!\245<I\342_\275\244^\310\274}\366\005\275#\017A=\\\033\345:\346\353\004=\220\240>\275I5\001:\353\341\224<\200\005\346<\271i,<\333\313X=\177\363+=\367-\024<s7(=\357\027t<\306\226\234\274\320\216I=wh\330<z\241\225<\347\213\307\273j\341A\275[^l\274\t\277.<\230\022Q\275\352\\:=\005\275\266\274\330\321\275\274\222\206\006<\305\346\320<\337\3069=\007z\241\274\367\376\005=}\320\026=os]\274X\376\"\275!\222\210\274\263\025\337<\372m\035=\020\303\343\274\364?Z\275\247\021M\275\323i\235\273\223\351\266<\235.Q\274\273@S9\237\257\247;\334\327M<H\334\347<#\302\374<V\210\223\274\177NT\275\r\346\310<\230\311L=\025\327\374\273\246\212N<:\226\333\272!e\r\274\220\275!\275n*\212\2748[o\273s\227\301\274\350\373:<5\262\306<>\364\013\275\326i==\265!1\275\373s\213\274\2274\n<t\010M\275\262\315&=\357zY=j\373\356\273\366z\270<\210B\336\274\t\307\010=\002\025\365<\364\260M=\373W\001=\317\236\034\274\310\020!\275\261\205\262;\212<\'\275_\220-\275v\200\270<\315g\377\274u\002\334<o\364%<\332[@=\253\3427\274Y\032\\\275\304\007\374\274\344T\306\272\032\304\364\274\221g&\274\217P\363<\367\236\314<\245\237\267<+NR=\320\246V\275N/\031=\0243\220<\200\205\013=\227c\271\274\275\207\206\274\036-2\274^\306\206;\037\314\007=\357\206R\2744\276t\274-\347F\275\224\315B\274\246\223\360;p\024C<\323;U=\266$\013=AW\373<\225\357\020\275-H$=\034\315\206\274\377\201\216<$\367\263<=X>=+\315f<3\377:=qN\205\271<\362\237\274QP\241<*\325\202<\333]\310\274\211\nM<6N,=\221e\362;\33523=H\313D=\301\303a\274\275\342\217<\251\244N\274I\323\r=\277\223n:\215I\277<0\001\237\2736]\227<n\')\275\363%\324<\214$4=\225\333\007\274]\271\333;\'\221\001=\325\364\274\274\324P\362;\333\334\333<\\\021c<2_%\275\234\203Z=\302\214L=\353g\335\274u4;\275\203G\267\274\316P\256<\333\256z<\363\202\261\274\354\217_=ai\034=\206\264H=0V\001\275/z\352;\313\333\226;\366(\024<\2626I\274%i\\=N\334\327<\254\275\335;\245\0143\275\241u\007\275\302\237W=1\214J\275\202\000\313\274\315\221V=\215\253\373\274\352\345X=,k\017=:\226\261\274`\3279=T3\342\273\351.\341\274Gk==\210w\034\275@\221R=c\336\036=\332\352\327<v\315\005\275a\241\001=\035\232\'\275\010vJ=+\277`;\274Qd\2748\3278=jU\203\274\342\202\341\273\262\352\241\274\021]\030=\306\301M\275\373\225\001=\'\224\320\274\310\027\270\273bM_=6\316\316\274-i^<@e\033\275\006D\247;\016d\033\275SI\206<\225V\002=\370\326\246<\326\354b\272\024\033\372;\2765\345<\"\260^=\027\323%\275\254\231\254<\017l\023<cz\031\275I\364\223;\201\263\213\274+t%=\316u*=\322r1=<\255\201\2742HP\274c\020\375<\341g\315\273u\212\303\273\006\231\t=J\341\022\275\002\257\330\2727S9\2752+M=\224R\360<g\303I=Z\263\252\274?5\030\275\336\'(\275\365\376I=\206Z\376\2744\262B=\301AO7\346G\310\273\371Jb<\n?c;\021\303\025\275\274[\201\274$H(\275\271\235\205\273Dg:\275k\252:=\000\265U=E\331\234:\254`:=\264K\336\273\026o\033\275\245\302\021\275\371\231,\275\2118\004\275\303\252\226<\256j\004;x\235\222\274\366:R;\324\354\025\275\004U9=\"\337\266<\220c\007\275Q\357\003=\225\337\356<\250\020\035\275\021\251\336\273C\014\210\274\210\210\315\274\275\361\314\274&\002\357<\223\366\014={\236B;vE\367<\201JH=\255\010\370\274\312\367K=\t\261\216<\240s\034={??\275\226q\006<@#\\\275\236!\373<MJK=p\3541<\311^\376\273FG:\275\216ZT\273T@\301<\034\232\314<\177\346\260\274\202\236\376\274\274\0053<~\331\007=\346\346 \273\342u!<\355\264\206<\312o\251<p3\226\274G\226&=\236\220\023\274\002\312T=\300\301\037<R&/<-\204g\274\353T\022=C<\327\273\002Z<=\354*@=\337d^\275\002\\\013\275MSF=4&8=\312.\003\275\363\272L=V~\274\273;\233\225<r\230><p\253$\273\222\203\005<\371%$\274ofC=\272HB\275\344\204\354;x\303\020\274\232\226U=\201\177\215;\212\007#=C\241\364<\224\326_\275\202^#=\356\334\034<\327|O=H\222\237\272Q\261\032=YT>\274\303\355\035\275\010@\242;\240\313\240\274\261\356\207\274\254;#\274\274\326Z\275\244\222\026\274\306\313\245\274]\365\240<\010+\202\274\0212O<\362\220[=\214\323!\274\376.2<\314\277K=\357\270\014\275\242\226\233<rR\031\274\317\334%:\326\360\355<\347\000K\275\364\3242\275g\022.\275\377\306\016\275\325\354\214\274h\004\217\274&\210\010\274/\2727\275\370\3540=!,\304<1\237\035=0\243\327\273\300\017\006\275 \317\245\274;i\215: \177x\274\235e\307<\233\374>\275\352\233L\275(.\022\274\310\345\225<J(\357<\000\235\312:\027\350.=\036\371\217\274\006\030\006\275\217\\\354<\352Z~\274f\357!\275\237\345R\273\230\346\025\275v\270\025<\313|\340\274\305\201\036<\234K\220\273,\177+=\361\355\020<\365\026\246<\343\n\277;\240\267P;\320\310L\275a\356\010=\247\266\226<G\372\365<\271\310\354\274\267H:=&-\004<\350-X=O\211*\275\306f\311<\\\231/=\244f\016=\353\340%=p\"{\274(\370\005\275.\257(=\306c+;Q\241\030\273\203\242\342\274\001K\\=J\274\317\274\362\033\305<\305\272\251<\014\354\360\274\006\225O=\177\275.\272]\252\204\274\315:\t\275\322\310\235<\3064\270<\362\347[\275\223\322b\274\371/\005\273\305(%\274\311\027\034\275g$%\2757\213\000=\367\"\250<ZP\233<`[X=\034\314\010<\255\2429\275\277\375\030=\355I]\275\375\177G\275K\361V\275\204c<=\257\360\344\274\305K9="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2000
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
