node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2040
          }
        }
        tensor_content: ":\233\022\275xt\352<\320\226\034\2750\357\032\273h[%=\263\024\334\274\034\326==\300\214F\275\266E+\275\211\276\356\274\244DD=\252\321\023=\220LP\275\341\357\001\274\006D\351<2\302\335<\341.A;\362!x<\337\377\\<\205\337\233\274\207gJ=\360\020n\274\0300\373<9\327\201\274\016\252\326<\037wJ<N\300\036\274\335\363\234<g\210\004\275w\263\n=\006eC;z\3267\275\370\2146\275B\227T\275\276\253\007=\313J9\275l\252\324\274\264\037\335\274]\252\013<\200\375\010;\202?Y\275\336\225\034=\307\006p<\n\353\335<\306K\341\273\243\350\267<\313\024B\2755?G=\302/\214<\306Y\024\275iU\026=w\264\006\275-\303\t\274wvG;x_\305:{\227+\275\216JW=\034V:<\257}S<\250\346\000\273\327Z\222<Xo\220\273\274\001\307<\356\335\006<\265`\013;\345\363\226<W\206\327\274\371\322|;=oL\275Q\215\373\273\273\345\220\272`\007.\275\000\313\341</\r@\275*\373N\274\013\367\201\274ze>\2750h+<\312\014X\274a\3742=\335\305\220<\277\320\305\274o\031\337<\265\240Q\275[\343\017:\253\367\217:\204\031\350;\037Z\024=eL\003\274; \355<\013V\335\274\357\033\214\274\222\232H\275\355\343Q\275 #F<1\205\245<\376\275\344;\264x)\275\024j\323\273\024\256\025\275\373\270\217\274\177uD=L\200\001=\230\003H=`$x<3\216\033\273r^\330\274\344 T=\271\276\200\274\247\345R=\035\257F=\360IF\273\221\303\257\274@oS<\3207\'=&\271%\275\2471A=\302\000\010=\0067*\275\357\274U\275\246\257\004=\267]%\275\025+\236;\303\374\232\274/\311l\274\244;\006\275\301JY=\230]\033\275\273O\035<r\034\272\274\004\350\013=\026\307\\\275\263\275#=\340\234R\275\031\321\240<H/_<\005\345\033=u\t(\275\272\272O=\003\256\020\275\263\301:<Y\3478<xg\344\274\241lC=\246\023U\273\362F@:,\177\016<[~2\274d\363E\275e5\023=bZ\002\275\351t8=[\215x;\376B\014\275q;\224<U\224O\275ppX\273\337,\316<\360\240\"=QBQ=\235\324\314<~\374\362;\217\2638=\210/\021\275\033\267\260\274\314_]=\345\3746\273k\254\027\274\372\363<=\267\312\313;_\344\023\273\233eI=!\216\"<\034\2728\275\375\261L\275n\354\217;\274\360\033\274J\370\007\274p\343\333<\240\034\343;\0370P\275\366\200\017\275\376\037%=\343f#\275\340iU\275y\304\352\274\201r\354\274hK\372<\354\356\305<\216\302\020=\233\313\t\275MRH:\230/&\275\257\2253=\307\013%=\266\0108\275\016>\300;\213\3679:p\014@\274\322\177\333<\031\342\220\274\301\260\277<\201\275<\274\320``\274\230\023H=\014\251\255\273\0007\020=\244\315H=\353V(=m&R\274D\212\226:\257\371\225<\r\255W=\255t\365\274\247/\260<\321\331%\275~4\376<4\001E\275mr\205\274\333d\020\2744\262\257\274\237hB\275\361\211>=\342\342Y\274P6\025\275\372 \334<\237kv</v\005\275\005\372\316<2\013,=Q\272\254\272\371\022\023:$A\n\274\036\326\033=6\346\344\274k1\314\2741\340Q=\270\2759\275\255\254*=\267d\003=Zp\333<\224LK=\221i\203\273Y\016\231<\022\001I=\027\210\333<c\355\361<r\371\371\274\276\372\r=\222\307<=\260\020\206\272\276,\315<\016\232\t\275\356\345\004=\343\242?=c(\265\272T\\J=\233\212\361<\302\253#90ZQ\275\233\"\017\275?\321>\275B\035\006\275\021\rZ=\023K\271<\216=\331\274\204\355E;\237\345\"\274\277\2238\275\247\005F\275\0371K\273\227\262\t\275\227\325\243;\356\376\244\274\3167\237\274o\372\\\274\200\016\025\273\364\244G\275\235tW=\034\315\027<\265\226\306<\242L(\275/\275)=\364{\366\274-(\341<\354\316\025\275\357\323\206;\n%\200<\265\2654\275\356\306X\275\242\373b\274\344\314[\275_\334\030=}?p<\365\311D\275:\260K\275)\372\002=\273l$=\202\2375=\234NF\275\034x\232<9\026\000<u\331\257\274\220\233X\275\221\301L=|\2662=\356\307\224\274\366\020\316\274:J\301<\300\254\021\275\3039F\2754\204\014\275\252l\313<#G\213<\247a\334\274i\372\034=\263\336\302\273\024\317\020\275n\022\372\274\336?E=#\304P\275\322\306\275\273%\\#\274B\\\002=;\3476\275\265\361>\2747\273\373<\303\246$=\356\355A\275\367\343\326\273\004\304A<\264\247Z\275\327\2167<\216\036\037=B\332\367<|\357`\274+4\307\274\337\261\222<\025\255I\275$f@\273J\016H\275\302G\352\274\321\311C=\035\305\235\274\276B\365\274\202\314,=7\202\254\273\312k\000\275\224\3439=Rk\304\273\021R\321\2747;m\273/-\006\275\313\210]=\007\002N\275\350@\213<\017MG\273\3760[<\237\004>\275\236Q\251\274t\364,\275b\264\234<\356E\004=?7M=\200\301G=]\031[\275\316~\241<\257\031\232<e3\027=\021\354\266\274\231\310B\275\3140\336<J\220R\275\027\327V\275\200\270\006==v\031=u4p<\037\253\272<\376\261T\275\313\2034=\374\215\276\2745\302\352\2744\344;\275\212\301r<\002/\262\274\256x(=\351u$;\365\023\323\274\316\277\002=U\233\315\274/\256\022\275\2159(\275c\031B;J\2649\2754\033G\275d\374\357;\242\2442\275\025\0338\275\360X?\275\010\255\036\275p?\376\274\306\240;=\230n:=+)Y\2758\031\213<X\027\257<\306\n\010\275\325\266Y\274\367\313U\275\222\016\225\273bb\001\275\277\365\236\274N\323\375\272\366\233\002= \300\016\275\354\266\022\275\334\2010\2756\327\013<@\035\242\274\252\236~:\352\254\251<\277\350\360\274\247@\005=\260\321\251<\"\250\022=u\'\227\274\204\211\'=\260\222\007=\312\303\230<\377\024\337<\311\362\215<\201[\003<\267\271\310<\242\026\017=\302C<\275\257\217U=\313\347\010=\303\350\210\274,\'\004<\227\202\316\274i\214\236\274p\021\025=\327\311\372\274AWR=\202\260\"<~\364<\275,|\327\274 \265\260<\262U$=w\021\022<\322\227\027=+\237H<\3750M=\354\304\301<\202\347j\274@\030\260\274\"\321\214\274h\313\263\273\271\r-\275\207\346C<\303\\&<\215\177d;WpZ;\021\257W=\"\371\226<\240`\351;\313C\t\273*i\276<\253\260Z=&T\313\273a\270\007=\334 >\275\253\314\004\275\242m\006;\320=Y\275\356\375*\275\313\226\330\274\260y\013=\274\342>=\322\232,\274:\324\177\274\257\222r\274\346\314E\275X\272$\275\".\240<\014\312 \275\267\310Q=\224\217\001\275\365\275\'\275\373\rX=1\374\204< \311\235<h\206J=\327#S=\327P\021\274DfQ\273hq\n= ~\271\274\372D\355<\347\027\005=\367k\211<\211\274\247\274\277k!\275\002\351\020=\277c\365\273k\206\372\274\326X\323<\301?=<T#/<v\267\331;\310\027\007<m\360\360<\241\221\375<\203|r;FaB;\254c#\275\351\037\007=\205\314\363:\221a\\\275\2217\316<\203\036\321\274\216\230\022\275\313W\307\274\27362=!\364\037\275\222\232\362\274=\306\"=}\2349=\3100P=sc\003=\337\007P\273\354L\325<CEZ=B\177:\275[\r\315<\254}\303\274\213zN\275\313\032\\=\323\273\275:\362\312O=\031DW<\"c8<\211\177\261\274<\020\342<\035\336\312\274\335\240*<lr\316\274\2756\213<L>\240<\234|\275<]\336\302<\357\346\235\274\313Pn\274\2579N=t\347C=\302f\204;K\202@<\360\221\313<\001\035U=\372\310%=Qa\275<\032B\033=\255p\254;D\207%\275\231|/\275\27099=\265\225&\274\212J\323<>\220:;\250\\\256\274\244d\322:Y\2155\275\224\227\250\274\343i\354<\247\273\034\275\335\363\320\272rI\373\274\332\307\2439\200%\024=\206\352\211<\254,\204<5\212&=-\262\035\275\016n)=\260gz<\313\247E=\351V\037\275\267vd<2\331\016=\036X\342\274\227\031\006\275\362\207D=\204\244p\274i\201\326\274\352\375);\277Y\275<U\300\'=\205\333L\275\003\266\207\274\254w\337<\000\032\026\275\374\227\020\275%\n\210<\370\2778=\273kb<\302\345B=\037\351\352\273}r;\273\251\031\031<tt\323\274\372F\272\273*1>\275\022L\375<n\242\212<,\232M\274\266\024\263\274!\0243\275h\321O\274\261\263\025=\202\350C\274\216dM\275\033\032U\275\331\365\271<\245z\234\274l\273\253<\231u:=N\364\356<^H\220<\323\322\232<\216\231\022=\374\236(;\362\376S\275\250\261\220\274sY\024=\026s\372\273\370\222@=<\226\014=4\255\021\274\255p\014=)\330\331\274\2577\315<\003\243I\275\371)Q\275\357\300\3319wQ<\275\213\3070\275\2543\357\274^F\200\274k(\300\273\311\232\256\274Z-\363\274\177!\030\274vQj:\363\250\257<\246\254\271\274\022\253\303<\374\271\347<p\344\240\273\216\031\204\273\254k/=\334[\327;\213h\340<w\377\021\274\271\375/=F\'R\272\261\225s\274F\314K\275\343\301\254;p\310M=!\252\316\274\374\255<=6G7=\220\361\006=\202\224;<\372\025s<\376\375\005=\307\032\006<\367\014\357\274\201%\365\274i\330Z\275\204\200\262\274J\363\210<%n\343\274gEJ=C\312\217;~\260F\275\250\007R=\204^\032\275-S6=b\373%=\371\313O=\315x>\275(\'\246<\322\354G<$\366\020\275V\242M\275o\213\360;\350\256\373\274\022+l<`\253\032=\235H\027<4\026\037=D\316\202\274h\266\310;\331\341\260\274\242j\277;Fb3\275\253i\266<\000\373\030\275\206\367\367<nf\205<\300U\324\274}\217F=\016\026<\275\216\321-=\r\200#\275gh=\275\377\310\024\275\273\022!=\303E\242\273\225\034i;oW\244<2\014/\275\257\034S=i?\346<f\217J=\036E/\275e\216\260\274p\343\021\275x!@\274F\352R=\216dM\275S\354\200;\t8\356<!\211\001=\223\207\370\274<!\014\275\343H&\275\227\376\310<\242\206\221<\212\213{<\214s\202\274\261\314[<\220\206\311\273.h\026\275[\020\033<[I\030<\260\224\277<\332\306R\274\317\231\273\274\344\000\365<\3606N\275\354\tG=r\323\330\274\352\336W=9\343\330\274\2373\331\274\2151\023\275\000\375\332\272\342\244\305\274\300{\353\274e\022\\\275\271[\377\274\222f\005=3&\270\274&\022.=)\003*=\331;3=\034;\226\274\0346\322<\341\373\353<\231sP=O\201\245\274r\014K<\026\034\'\275\372M\357\274\r\325\"\274\376-5=\252\307\252<&\340\037=\251e\244\274\222e\032\275\203\366\320<6\303\377\274u\271,=\353\214\014=/>\263;\021\202\327<\301I[\275Nn)\275\350\017K\274\243\025\376<\334A\217;\315\362\307<u\032\032\274q\352V<\031H\n;`\001\210\274Z\244P=\301H\342;\247\'#=,QF\275\266?\037\275\271\'>\275[`=\275S\010M\2758\032\342<q\333\251\274\365\367I\275_M\200\274J\'\r=O\354_<\027\372>\275\020*H\275\254#,;\264\261/<x*:=1r\350<\215\025#\275\310$X\275\366|&\275`\224\252<V^\302;)\032\356\274\323\342W\275\022\362B<\342W\330<\214\177b\274o\026:\275\rH\230\273\201\347\340<@<\343\274l\020I=h6\325:t\340K\274x`\321\274-d\255<\001\037\224<_\311\266\274\006_\373;S\177)\275\007\337%=(0\':\033\2656=\202\377\254;\347\255\271<5y`<~\256\020=\261\013A\275\334\013\207\274.Z`\274\003\267\206<\361O\212;\246\033\021\275`\220!=\\J\t\275gVb<\275\016J=\256\002\227\272\363\246>=I\002\322\274\344\024\"\275\017\244?\275\023*\373<\005\326\035\275\234\323D=Dl\241<kC\262\274\225\025]\275\335Z\327\274\000&C\275&\3231=\371Q\005=,-\007\275\036|\340\273n \225;\025\316\n=\223V\237\274\324M(\275 \322\024=\334\025:=G\275;\275W\207\362\274Xz\323;\203\001*=\031\310\313<\364\330-\275\365P\344<\370\257\272<\300\261\\=\303}\346<\377\352\270\274\351\340.<\n\030I\275\312!&\274YD\225\274\002\353l\273\020G/\275k\271\024\275}\016\357<\366\326I\275\314N.\275\n\310\330\274\177\344\013=S\301\013\274\035^/\275\205U\246;\300\244\274\273Kg;<\367\214\322;\004\362\033=\312\317\025=\025\212,=\221\222\033\274r\377*\275Wy\225:&\310\004=IB<\274\017\201\332\274\345&8\275\177=\217<5\332>=\267I#=\034\275\247<\323\333M8rw7\275\311\272D\275\2744\247\274OT,=\370\221\023<6\257J=v\000Y\2756=w\272\266:\017=\331u6\273\t\372\352\272_\013\330\274\3321L<\240\023\267<\014\241\344\273\244)\025\275f_\035=K\310\270\273\301\370\365\274\2234s\274\365\\e\274\024E\037=h\250\257<\3752\344\273\245\324 <\350\367@=JS\344\2723\217\016=?\236\021\275\371\201\025\275$\377\001=Z-@\275\020U\363<\347\2601\274\270\276\020\275\252t,\275(\371\206<\343b\000\275\250er;\311p\035=\252\030\270<F\357O\2742\270\210\272\321\004\315\274\264\234\276\273t\267\367\274\274J\222\274S3\3629\t\353\001=\231\2551=\210\316%\275:f\304\273TS\376<\371a;\2752\333+\275\305\0351<\240\227\343<\002\007\016\272\323\227\"\275\204\304`:I\377/=R\222\"\275\241e6<\341V;=\246~\'\275\242\255\245<XU\326<{\2178\274=\343\025\275%\276\007<\216\037\037=\354\345\365\274\203\017\260<\215\315\242\274U\221\017\275\037\227=\275\030\021\356<\221\211\004\273i\316W=\212\332\252<l \024\275\260\323\215;gl\006\275\262Q\322\274\232\333 =\242\306\251\274\013\320\014<r\035\033<=\213\2269P\253T\274\255\210\002\275\240\nI\2745\304>=6\213M\275\331K?<A\232`\274\323\244<\275\300\227\301<\237\344\202\273\301\277\022\275s\257\223\274Ha\357\274\010\022\'=D\323\030\275\251 \330\274\225\277J=|A\215\273r\212\307\272v\252M=\374\346\034=\330R\241\274\346\224Z=\226\024\000=\250\231H<P\345\035\275e>)=T\"G\275\235\t\232;\265\262\366\274\230\312\371\274\204\000\326\274d\360\303\274\314\264==s3U\274ns/\275\027\275\257;9}\346:X\333:\275\321\205\031=\315\354\367<;\354\035\275\310T\326\274\352\244L\275\204\320\254;.\356@\275`M\251\274\217\003A\275j\331N\275d\\\360\274\303\325B\275;\022\021\274F\n\006\274\305H\001=\332\324\032\275\177^\335;\252/H=\336\274.=\361\236\351<\224T\341<\345\220\373<\365\354\014\275+\272\026\274\264\342B\2759J\206\272\233\031\330;\216*m\274.\273\240\274R\346<=\354\230\242\274f\374\016=Z\035\220;\222n\312<\026\315\304\274\377\374\275\273\374\303l\274a\177\006<w\030E=>%U\275m\236\021<\201\355C\275\3373G=VRR;\373\214E\275\372`W\275\010\342\354<\271\346\311\274\373\326\344<6\302V\275h\361\316\274\346\342\256:y\230`<\337}\030\275\027H\347<\210\t\312<\261\260Z=\322\276\236\274\342C\226\273?P\030\275%\205<\2752\232\016\275O\337\336<\004G4\275F\2758\275\363\370\364\274\036\020T\274\376\210N=\222\303\023\274~\306\274;\013\326\024=\316\346?=m\270\214\2748\366C\272\022\226\344<I5C\274\332\037\237\272\354m\020\2757\343\036\275y\365\020=\034\274\226\274S\364\205\274\276\001\003=l\202\315\273Z\245\035=3\201\355<c3\313\274\267\336\"=\365\274\365\274\002x\016\275Wu\033=\246BL=\354\203&=\031\251C=\342\022\004\275\213\001^\273\240E\013\274!\023\377\274\201R\326\274X\330\010=5O\222\274\311\300\376<R\302\344\274\240\223\030\275\325\0135=X\245\216\274\3337\026\275})\204\274\317\322(=\t\211\032=\2023\027=\320\317\272\274\374\311\235<2\335\026=\024\263\262\273W\345\310\274\313\310\322<\257\202X=\270\324/=\3135B\275\343\371\244;\357\037.<\326\3071\2745\327\325<Z\246\317<\377\261\357\272\201\362\253\274eR\n\275\\\366C=\030\335O\274\237\266\257<(\305+\274\000~\026\274\377\022\020=\343\010\"\275\242\037v<\270\216J=a\325+\275v\230\221<\221S\014\275\244NP=\304#\200</\354X\274\013\200\025=a\rI=\372\356\014\275\027x\013=\224\307\324<\305+\021\275X-\215<\031\317\266\274\271_?=\033\rX\275\203U\240;\371\004\005=?vS=\312\204Z=\304\240E=,hF=\204\267&<\007\0327;$\362\006\274b\317\261<.\353\'=\3015!\275Va\366\274\316%:\275\231\r<\275/\346\014\275O\344{;\216\315T\274O>\247<\026\0051=_\376\356\274w\325B\275\363\364(=\254\030N=l\336\030\275\334\2447=Ed]=\374gV=\234bI\275\314\024\244<}\3144\275\261)\030<2\002\000=\276:\322\274b\337\214<\350pK\2747\270\365;\212\305\370<d5t\274\373\227H=yB\t\275\027WX\275#e\026;\221\250(\274-]&<\032T&\2754\351R=\326;\035<\"\352K=\304\376\250\274\303\236\266\274\"\364L\275\256\020\265\270y\342\024\274\364\324\376;-\340\240;\343\202\266:\313\232\366<`\207H<c]\"=\356\274G==\"\n<\321j\266\273\263\027\333\273\327G\232<\366\3558\275\335\321\354;C\3018\274P\035\231<\310-\241\273\375_V\275\333\340\217\274\323\203\314\274\323f$\275\2025=\275\273\000\001=\262\273\272\273\r\374\020\274\232{0=?@=\275\010J\244\273\377%\350\274\216\353\367<\352\266\"\275%\325\017\275\376\255\\\274D14=[\016\037=\240PQ\275\357\032\014\274\344\252\201<\322>\203;4\305\360;f\225\276;j\256E<\010\233\032=q;\373\274)\267+=\014B\263\274\355p\326<\022_9=\027\367\\<aii<\355\030\035=0G\327\274\034,\032\275\237\331\343;\361(\260;\363N\315\274\2635\037=8\343>\273\342e\000\275\273\235]\275\001<Y=\263\233\351\273\005\232\335\274\362\260A<\342\3350\275\3572\356<Z\323\371<\264\027\303<\322H\312\2749\260<\275!#\016\274T\035[\274\001\'>\2755Z\021=.({;\345e\'\275I\346\311<\330c>=1\217\001\275\371*M\275C\356\334<Fkk\274\364\270\343\274\376\003Y</?\023=U%1=\200\2116\275\022\374(\275\207\037B\275\221\346S=\201\320\236<\233x\205\274!48\275\354bG<[o\267\274\016\363P<~\202\200<)\220/=\231yj82\354K=f\231\256\273\330M\304\274\267\326(\275\342+P:\355\017\267\274\365\016\022\275\t\346\316<\214]\316\274\201\024(=\031\021?=\002\243\273\274\343vU\275\260o\256<\217\345|<\313\324\337\274\310g\352:\214\277\003\2750\275 \275,P\347<\262\036\256\273q/\322<f\377U<\2405\302:\355\2030=\201LU=\376\354\225\272\345V\016\274\211k\014=0\007x<\\\347\007\275~t\000\275\372\177\214\274\215\374\234<\252\036C=\323\237\007\275\264\363\n\274Z\350H\274\'\326\031=oU\031=\300C\006=\020\362\006;\222%\001=\354\217K\275B[\r\275\272\360T\275\202I\372;\254\202\010=f\370\336\274=\336T\275\n\353\212<\320\335\251\273\2164F<\215\314U\275\004\324\000\275\314a\250\274;\303\004\275c\371F\274\205\3602\275\216\205\342\274\320\216\222\274uE\034\275\375\212\013=\224&\002<xs\244\272R\256Q=\235\334\240<\312\347B=\2348\t<G7\027\274\341\332\262;OV\360\273\237\032\010=a\217\014=h\2037\274\257Z\325\274\330\267\034=`\273[<\370-\236;\000\266\n=#\340>\273Y\034\333\274\031\244\346\274@\245\203\274\020\237H=@Qk\274`~\261\274\245/\371;\321\020\236<\242g\022\275\001?\346\274\337m\250\274\260\207J\275\245\3630\275\337\317\"\275\341\3435<\304\250\013\275\331p3\275X\365\014;\2113\362\274\201\002V=5m\035\275\305\201\337<0|\240<E\374\014\275\313\301\017=L$\r\275\030}K\275\314\017U\274V\2422\274\272\330A\275\306\262`\274\305\310P=t\217!<\014\177\345<*\'+\274\245\204\030<\t\023H\275u6F=\245\007\032\274\351\227A\275\232\277+=;@A=aS\237<\300v\331<\377n%=\254[\247\274\260\315\336<\203\344Y;\241f\n<\335/\255<\327\242Y<u},<r\377\030=\327l2\275\371\254\314;\275\244\303:\264\032@\275\357\220\023<S\221\240<0\205\027=%x\003==\330[\275:aH:\373\202\370\274H\372\035\275\255\326C=4\265\273\272`\347)<)\307\031\275k\314\037=x\220\310\273rF-\275\320\017_<\356\3439=\374\016\n\274\207\315F;B\273\t\275\250=-=&\350\233\274\345R?<*\276U<%1U\275H\315\r\275\330\2230=\327\356\010<G\206\007\275\261a\352<\002\035\377\274q\354\026\275\351\214[=\201-V=X,\3068kE\"\275\2112\235\274f\300\312<\006\377\271<s\375\010=8\2423=\r\203?\274\020\212*=c8\321\274c\033\357\272\ta$\275yh\265<bzH=\001\2311\275\232`\206\273\006h%=mk9\275\372\3155=\305\370\262\274\263f\335<V\022\024=\356\361\320<)u\253\274\345\262\027=@\355\263\274\232\016Y\275\361\n\013=l\300\261<&g =\345z\321\274\r\306Z\275\271\035\024=\3660\204\274\010\251h<\206\0343<u\'\343\273|f2\275\363\013N\272\313u8\275|\342:=\t\205\325\273\023\306\365\274+\270M\274\345p\r=\2508\320\274\200kY=1\216S<1x\007<z#\364<c\274I=I\343\t=\316\247/\275\233\361\300\274\311T8=\332\251-\275!\241\206;\332\206\365;\362\330\022\275:b\261\273\254\334I\275\306J\360<\304e\354<,*\203<\022\333\367<\331w\035\274)l#\275\027\030*=\353NE=M\214;\275\241\\6=\322*z<x2\024=\031\260\006<\220\337\235\274\333\377\352\274\253b8<\030\030\301<\347\331-=\035\010 \275 \001\037=/C\231\274\252\213\213\273P\341\034=t\271R=R\243K=\260\357@<6)\302<\333\037<=k\312\t=6tI\275!\317\022=\320s\335\274\367\316\203\274\377D/=\006\004\006=\014\270\002=16<\275\317l\234\274\014\\.\274\271\354\275\274\021\220h<\377\377:\275\234\023\'=\313`-\275\2411\034\273N\007K<T1J=\255:}\274\311\243O\275\033\303\021=\250<=\275dg\340<e\355\312<\216l\346;\\p\337\274d\300\325;2\241\t=\313\303\360\273\323\'\006=\327`\014\275\014\004U=\210K{\274\0044\244<\000\371\215\273W\024J\2755U\010=\200&\021\275\335#\201\274:R\321\274=\234\036=\335\2636\274\354\252Q<\304\021Y\274\350\036\247\274\230\343\337\274\013o\031\275\025y{\274a+I=}\350N\275M\260\253\274\354Z><,KN=\316c7=\306E]<k{\207\274\326\375\334\272\n\000\246\273\266\353\013<\332\335Z=\223\005\010\275\245o\244\274\205\276\t=\225\2419=V8,=\246\010\203\274\262\203#\273n\220\375\274}\013\'\275\253\001.\275\366\031\200<sM\001<d\033\344\273\373\004\216\274*\212O\274u\001<<\264\365\000=\275\363\r\275w\271\237<P\240\270\274}\010\n=\341\313\351<\'S0=\221r\362\274\207\330\342\273T\257\326\273\370\370\261\274\275*\371\274J\313\314\274m\200\023\275\303\342\214<\361\206\217\274\354\337\020;\325\327C\275 \003D\275\316\000H=\264\263\010\275\217\3676<\251\201#\275\363\241\344<\206BW\275\346\004Z\275m\262!:\347=X=/\267B\274\2203\000=\231\375\325\2740\251&\275\324\2739; \375\304<\333\240\'=\202*\214\274\326Y\346;z\355V<.\313,<\003\361\251\274\201\032\323<\276nH=d\317\"<\277R\016=\255\224\221\271\027\243\255\274i:\243<C~\207\274\301\236\301<|?\246\274\013\024\354<\270\021*\2742\2236=\367Z{\274\334\020\235<!\353\014\275\265V,\275\201\304\361\274\320&6\275W\310\226;\000\014\374<n\2320=q\307G\275w\252R\272\032\214o\274v\277-\275\267\375\\\275\255Y\360\272\305\3001;\357\303\354:Tn\353<i\340#=\271\340\031=I\2452\275\346\220\242\273\244{G<\345\244\223;\306\014\234\274\207\031\220;)\346P=#\034\261\274S5E\275l\242\370<\275\352&=\026\230<;\326**\274\321\215\373<\337\332\205\274\277T\034\275\3259-=\333\244F=\3255b<)*\025<\253\312\331<v\271\316\274\211s\242\274\202\217Z\274_\nI\275\250m\213<\272\r\346;~`\010=Y\tH=\204\352\307<\205\206C<@\242\212<\343\236\005=\346\340J\275/\351\034={\205\224:\002\003\002=\317\252\317<\215\250\n\275\224\033I=,0I=Hb\230<M\223\315\274E\317\256\274\305\020\007\275\350\037F\272\3364Y\275\206\022\274<jQ\327<V\253G\275+\270\357<\341N&\275#\354\335\274\034\312+\274}\031\006=\257&\232< ]\234<\303\\\020\275\033\035T\274\370^\320\274\362\342\376<\356\346\301\274\325\376\200\271j\325\316<\234\356;\275\276\014[<\341S3<o\3628=/AG=\305\352\303\274\301\220\251<8\260R\275M\375<=\314\013\377<\3446\222<\352$\353<E\352\246\274f\364\002<J\224\034\275C0\013\274\265]\343\274\263\271\370\274iT\374<\027Hw<p\266v\273x\241\314\274\032%\336<|%\312\274\305\243\016\275\r|\217;h\255\314<\332\262\313\274t$\031=\353\243\315<q\363\215<\214\0345\275I\202\355;\214\240\315<+8\317;/\333\352\274\027\336\r\2740\305\230<Q\262\375\274\252\207,\2759\325A=\237\200\224<n:\021\273\370\026H=\010 \313<\222N3\275\260\305\010=\361B\027=\031\3778=XHO;\226\004\022\275\246\204\223<E\222\026\275\334x\001\274\315\322Z=\'\033\365<*\256\014\274\237\234\333;\240\260\273\274\000\251T=\230\253\251\274\352\014Q=o\340\271<\263A\224;\236\006H=\326\350 =\022\224\034=\267C\316\274N\216\234<BVE<\215@H=y\024\214\273\033\325\031=a$\265\271\017\341\343<\206\361J\275.^\322\272\021\022\375\273\023\223D<\215\266\225\274\024\305\n=\0248\241\274\344B\264<\325\273\314\272\017;Y;\214\014\341\274S\210\265<C\240\331<\036\300\021=Z\335\250<\r\267\026\275\371b\030=\023\225\221<\343\305\342\274\3278]\275\272\347\025=;\351\177<bT\222\273\274\212\035\275\307$R\275\375rB<\300\375\223;\313\236\273:\235A\n\275\342\374\230\274\247\263\330\273{0\264\274\313i\217\273\014\275#;\226\242\027\275\324\342;=\237mE=\3043\035=\321\007\321\274\010j\331\274d\225\237<\212\256[<\311p*=\364\313\272<Q\261O\274\234\301]<\002\266\010\275\271\237\246<\365\234D=4\250G<\232\273*\275\t\025H=\304\"\277\274\r\002\265<\0251\352<r\357\037\275\212\262\200\274\252J\307\274\335-\354<\335\277\026\273\251yH=)I\322\274\323\253\030=\340\'H\273\200p\204<\251>\004\275\306\336%\275N\327\231\274\351\257\003;sl\014<\341D[=\005.\025\275\346g\232<\302\033)=o\351\005\275\337u\356;\314\215P=y\203\'=\357\035\"\275a\221H=0\033\034\273-g\236\274\026\177-\275\321\351\230\274\312\031\\=\373R\022\275\023\013\006=\251\355\370\274\230\232A\27578q\273y^\341<\023\220\212;\344fG\275\270u!\275\341}\340\273\346U\200<8\304D=e\274K\273\251\016\251\274%\000\234\274\002\022\205\274\240=1;\300/7\275\031F\247\273M\276F=Vq\354\274.)\177\274\021\304L\275\264\035@\275;\254\022\275P,\003=\234\2169\275$\'\023\275Z\rA\275\'L\324\274\365\014O\275\364\\U=\350$\255\274\233\377\273<g\376\004\275\032\277D<\205>\312<:\242\242\274\250\242\363;R\201?=\244E\330:|\300W\275\316\2640\275\247\272A\275\241[\217\274\341\247\033\274y\346C<<\314f<\377\360]<\254\2714\274\343EP=\034G~<\252EK\275U\3419=\370;5=1b\355<y\223[\275\326\352\013\275\333\324\346\274]\303p\274z5\036\274\254\207\312<w\030\002=>\303\014=U\030g\274\007\013\222\274\364\267p\272\340\315{<\353\002\005=_6\347<\322T)\275\210\034\210\274\037T\310<\356,Y=n\027\033\275\213\206\177\274\301\243U<\204\010\035=K.\241\274\200\3574\275\204\346d\2745\024\022\275\264\027\\=\031\300V\275\317\033\022\275\325\2034=_.\002\275\021=\350<\344m\013=GE\036=\203@\276\274\223\240\313\272\360\225D\275: H\275\232\325R\275\220N\'\275Eki<<\346\030=\224=P\275\362\214\243\274\025\346R=\302\3435:\313\240\'\274\247\254P=\317\271\352\274NW\024\275\304p/=8h\033\275&\325\014=n\335\017=\004,<\275\332\201\265<\376E\320;\356n\231;\275\355\\=\201\0252=\200\'\227<K\264\263;\020\253*<\3635M\274AxQ\275\270U\025\273\217\364\372\274y\204\032=d\253\201\274\277\"+\274}f\265<\'\005\227\274\'\211\320:\241\260\275<\224\305:\275\'\233Y=\260\005A\275\254_7\275\344=>\275Q\346\207\273\345\026\240\274\n\207\335<\367\036X\274P\327\036\273\2026\"\275\221\322M\275\2009\016\275ae\345<\254\n\n\275^C\262<~\355==\301\235\366<\300!z\274\'r\322\273Z\007 <*\243\245\274L\251k<\263$R=E\274\231\274\363T \275f +=C\250&\275\227\346E=\335\261\031=\327wF=\3317\370\2725\005!\275(\261\345<\234?]=\374N\325<q\276\004=[B\241\273@\200\034=\311\325\036=\376\375\014<\007\337[=2\326\343\274X\303\306\274\271\335\220\274\202\300@=\257\362Q\275\253k\t=\330S\026=\267\273\237;\263v\033\274/\250E=o\006P\274{RF\275C\374\370<\337A\305\274\314f\343<\263\335\241<I\211\\\275i|\022=t@8\274\017\233Z=\024\375A\273\376\365\345<\3019\241<\002\rE=0\355B\275}\031\013;\351J\315\274*s =i\242\216\273q$\234<,\215=<\275\337\357<g`\005\275\177\305\025=\274\253\023\275\252\316#=F}\010\275\234\261\315\274\177\021\263\274vA2\275\025\237M\273\265\237\204\274\322\204\325<\370\246\025\275\257lX\275\350a,\274\345AD=\021\217\024=\321\020(=\205*\3769*s\346\274\206\325h\274u\242\326<5,R<\232V\316;y\264\331\273\240K6=\\\337\342<&P\200<j\017\225<9\021\253\274-\370q\274Q\345Q=\251\315R\273\'\005\037\274OP~\274\007\260V\275\3712\345;\230r\r=\260\272\010<mQ\036\275\312\355\351<\235}n<lo\211;\361\2274=\276\334T\275[\022O=\247\001\326<\272\202\216\274\345\372\375<\037\013\337<\315\272\244<\211\337\337<\222\203\320<\213|=\275\375\231l<\273OO=~\370\256<\347^W\275E\262\341\274%cx<\310U\326\274\271\010\003\274\321\207)=\242v\355;\372P\307;Q\275E;\256\035 \275\214\r\001\274\037V\034=-\334\237\273\206\251\226<f\3136\275\342|\000=ca\360<\234\366V=.yQ\275\261\205\033\275\022\026W=\353\305Y\275\324\243\027=\234\3713\275V\320\026\275\227\254\320<\016\276\300\274\220aJ\273*\005]\275%\004\345\271\324\265\270\273\332\327\352\274\214\256\225;L\217\273\273\302?\340\274\270F\020=\270O\212\274*\254d<IV\256\274\\b\225<\"\035R\275\216\312\270<,I\224\274\313\332%\275f\351\256\274\301yr<\331G\r\275\220\355\311\274\323\030\237\274\337\302\220\274\364\005\035=NlQ\275w\377\250;\230\244\345<{\037\305\274\255I\223;\2645\267;[\226>\275\321um\274RT\303<\203\222A=\300\035:=\276\201?=,\206\221\274\356\244\030\274\202\244\004<sK\217\274\212D\n=\000\020K\2743- \275r\343\261;/\212\204<\004\353\206\274\207\024f\2745H3\274\t+0=\360\374==H\367\212<8\256\022;\267\324\246\274\270\302G;\275\035\325\274\217h7\275\361\254i<K\267\207\274\357\0036=\215L]=\337\351X<{\247T\275\261b\224<R)W\275\r\255f\273\203\275E\275\024D\330;0_\332<\032\206[\275\331\025-\275\357a\014<=D\033\275\244m\013\275p\271R\274q\032\214\274\300t\247\274\367\227\2767\316\255L=<\213\335\274q\213\022<\327[\347<\355\253\033=\035V\376\272\214\016\324\2745[\\=\016\200V=i\205\001<RE9<\216wR\275\230-F=\304@\347<\266\247\226:INS=s\025\221\274\033\257L\275I\345\013=p\352)\275f\213\325;\206\362\343<\001\020+\275\262\360\035\274\240\0364=\274D\001\275\262\331\244<\336sS\275\t\374\002\275\254\331\254;\303\325J=ID\317<\207E\306\274\361\275\214\273\217{\331\273\t\253\231\274\312\007v\274\010d%=(C\"=x=L=\366v\345;\347\273L=\005\251\376<\265|\036=\016}N\275\264C\230<V\277\005=\245f\212\274\360R\302\274\342u\312<\\\343\242\274\373L==(\367<\275\302\t\275\274\305\223l<x\261^7=\263)<\317\272\315\274G\2453=\324b\027\275\352\371\027=S\000\023\275\227\177P=3\222\226\274\003\364\r\275}\255B=\333;\276\272P\350N\273\263%\036=\2210^\271\321PE=,\321\"\2755\277\024=rw\337\274FIJ\272M\242Z\274bQ\\\274~\036J\275\270\235I\2745\256&=(7\301<\202Q3=4\351\365\274\372A\035={\277\241\274\276\2227\275\375,\316<\227\2340=d=\033=Dk\353\274\\\3158<HUL\275\266\252\350\274W\013\366:s\005\031\2743\275\334\274o*5=^e\036\275C\030\226\273[v#=\213\000\002\275Xl\330;\324\276+\274I\240\\=\335\362\216<\320\260Q=\301/\003\274F]M=\317\250\266<}~H\275\242g\362<u/M\273\346\227J\275\356\352G=\276eX\275\341\355\033\275\346J&=x\020\037\275\306qu:\264C\r=\016\324\233;m\2339\275x\235t\274\373\2413\275\021,I=\274F\016\275\370\027C\275[b\'=\350Mk\274\214Z\013<\002\201;=\003=\222<\254\334\361;6\233\265\274;a\202\274\256\370\371\2739SV<\262\314\340\274\004\3221<\260\006=\275u\265\362<\023\257\215<\252w\277<\304\326p;\210\021\316<$\323S\272@\033\037=Y\277I\274Jn\343;.!6=\214<\026\275\275\013T=\363\247\224<\250\325(=\247\361A\275\236\247\033=I\3748=\353\3058=8\356X<Xm\031=\372\313\320<Mx\r\2757\262\036=rK\020\275J#P=\255\363z\274?\232\223\273;\363\333<\377\0370\274\356d\036\275\030\351d\274A\261\315\274\276\232\370\274^\023X\275v|:=\257\007\335<\3412\211\274z\030\370<\"\224\007=L\371L\274\343\207\006\275\177aQ\275\374\304\343\274f\234J\275\303[-\275\024!\031\275\213\264U<$\021\"\275\217lY\275\301\\\002=\347t[\275\025[\300<\371\211\001\275\333\2201;L!\\\275z-\321\273\353\3469\275P:j<\265I5=JW\377<\314\372x\274v\213\224:\314)\026\275M\233\t<\336\027\274<\345\366\n\275\343\357\257<|B\242<\346\003E=\025\375\030=h\374\365<nj:\275h#\306\274\177n\031<=:\354\274XqD\275v\354\374<I\327\213<\277\205\367\274\364?\263\274\0067\360;\272.\354\274}\211\037\275\366L\031\275\013\027\257\272\200W\330\273\354\265S=@5[\275;\251\301<\371Q\312\274\3300\372\274p0\030\273F:\020\274>w1\275\352\260\310<\214\227\206;\260\321-\275\253#\302\274x\365\037\275\307\257\345;o\033\211\274jn&\275p\016(\275*\3077\274\363U\274\274\336M]\2759X\210\273\237\030\373<gx5\275|^X\274\274](=\233-\022\275\341!,=\200\3361=n\377\013=\266\212\010\275\007\375F\275\177m)=k\377X\275\007\177\222\2744LR\275\363\237\266\274/\377\017\275\257\260\250<nl*=\256\003!<J\372\"\275<\2444\275\344\222\026\275\3007S\275\266\307\002<\342\333\344\273\316R ;\233M\203\273\017#L\275\"\264\242;\353\225\256<\250\323e<\014!\205\274\214)Q=0\300\256<\226F\016<\2076\020\275\310\272\031\274\3350S\273@\335\037=I\306\036=\357\225\023\275Uz\203<\221\003K=\203\035\343\274\253\327\021\275y\022\273;f\014\254;\375\272\303\274\"\375K\275\\\377\245\273$\253\r=\351\322\033=\347|Q=F$Y=\343k!\272\021A\005=\215\232\321<\306\245\177\274\034\307\314<Am>=\347~;=$#>\275\234\372\351\270\264\246B=\250b\252<\240S]\275x\210\206\272jc\324<>\300-\275,4\345<\321G+=\352\353)=\3245\340<zKM\275E\320O\275\311-\362\274:\023\271\274\2072!\275\260\330\362<Q\335\230\272\023\226X\275}\000\264;\351\226\016\275\331\210\341\274E@\213\274MT\362<;<]\274\346\202c<\034\205A<\305\247,=erF=\004\016Q\275\377\301\376:\237\221~<\320\314\017=\250\354\021=\204\212\225\2743\027\350\274\225\201\020\275\341\371\211;3w%\274\3157\364\274\033$\223;\024R\214\272g\331_\274\003\177H=\025\371\'<t\3674\274;,\024\275q\243\366\274\022\214\025=O\0100=\361A>=>\363j<\332\265F<\362\007\234\274\023\256\306<\000\362\022\275\253\250\301\274L\2115\274G\211\212\274S\316$\2755\253\270<\362^\304<a\363\034\275P\010*=\177\376\301<\361\361\230\273\361~\343\272\326!G=H\261\270\274\266aC\275\311\373\377\273B \247\272Woe\274\244\251\002=,\363\247<-\316\224<N\t\007=\243?\303<\244\237\321<{\344H\275\177\3145\273>\222\344<\0063\216;\374^B=\230 .\274\317\206:\274(&\n\275\272\253R\2751qx\274C\360\226<8\240\235;i\0366<\326\235 <\211!\241\273P\346L\27564\317<\n5\031=\375p*\275\0247f\274\226\244\264<\216\353\373<(K5=\005\371\302:\212\303_\274N\017\021=z\267\333\274\220w\034=\314\261\370\273\rgH=\231\251\020=\323\252G=%\2514=\372P\304\274\226\270A\274\364V\034\275\307\030\317<,\022==\256\253X\273\245~<<R\3554\275\260\3702\275\237\363\244<h=C\275Q\3118=U\225<<\024N6=k\372\211\274m\3727=9nP\275\315\330\317\274\320X\301<=\2103<\231u\366;\373@X=\343\030P\275C\027\034\275\313\333\235:\313\324\360<\354Z\016=\250{\232<\271\030@\275\210\352}\274<\364\226;\323#v\274\206\016\'\275\017\020\312<\210\023\330:\0206[\275W\230\264<\211t\014;\217\313\376;\300\356\215\274m\314\273\274\253\231\253\274\2161M\274\002s?=\370\333H\273\304\351s;n\223\005\275\230\035f<M\233\243<\217\301>\275\014,\'\275\254ZX=i\272\030\275:\023\323<}s\225<\313\335\\=K\302\005\275\247\214\365\274\215\1778=DyN\274^d\024=\206\240\004=\220\020;\275\377\243\211<Z\037\005<\326\274k\274` ^\272_\210S\275r\373\260\274\207*W\275\234\314I\275\316\322\034\275\214\037O\275\266zE;_iK\275<\365\214\272\200\266\216\274\305\364\014\275\221\304V=\007\341J=\321H\006\274a\n\265<y\2152:\024\243\243<U[9\275p\265n<\307\201&\275\277w3=M\353#;\302\362C<\200\305\232<Rq\236\274U\263X\274iS)\275 H \275\243\247-=\004\315\030\2758l\262<\274\207\267<\236\026\277<,\345\236\274\304E\345<b\226\266\274w\251\246\274\252Z)=Y\246]\275\016B\276\273\242\376#<(\212\316\274\367\345F\275\244\017,=\025\210D=+\311\266;ui\316\273\007\222X<\216I]=\304\213\312\274\302Z\253\274\024\026\332\273+\227.\2752\177\'\275A2\305\274\3470\200\273\330\351\200<\244\313\273\274\220\030?=\300\273E=\306\301\3458\372\2330\275\227\330\272\274\255\032\333<{\t-\275\016\307\034\275wB\354<\340e5\2756\000\340<\034\226\316\274\315\326\037=\354\226\255\274\342\201J=\310\361\235;\366K>\275R\364\277\274\341k\017=\271\326\023\273\210X~\274y\332s\273\313Iv<\035\030\213<\033\265n<\023\246\000=&O\260\274g\275\313;\307m\233\274\223YI=\376\375\327\274\177\320\245\273\242\375\242\273!H\351<\313gA=\234t\367\273\001\2431=\204$\346\274\0233C=#.W=\026<V\275\304;\271\274\304\330I\275\"\326!=\322!\206\274\302\2353\275;<L=\241\021,=\207\177\312\274\352\005\343<\372\030_<\216\3267=\311[\267\274\227`\021\2752}\302<R\225D\275\031\353\016=\311\276m\274\325Sz\274Q\320\020\275\274_\303<x\330\025=O\0365\275/\354 \273\3177J=\255LE\275A7\345<\331\367<\274\354\201\212<yG\313\274\215\2100<W\3059\274Y\312\027=f%\276\274\3647\327<\324\205\230<~1\227\274nR,<\254\030\353;F\332/=\025.6\275U\017\260\274\"\204+<\244\002F\275\022\320?\274\211\335\243\274r\266\217\274(\254\357\274\365^V\275\r\371\001=\227\2444:\323\271\254\274\351\223\330<\332\027\215<\354\254.\274w\232\230<\320\216\n=\266j\034=\243\220\217:\251\365&=\202SZ\275dn\300<\367}H=\267\374\314;6<\355<1\315\036\272_\n\231\274pJH\275\323%;=.4j<4\244\022\274f\3317=eb;=\307\334\336;\252\326K\275Z\363\203\274\337<8=\312\201&\275\215\222\004\275\321\304!\275\t\232\302\273ux\006=\326^-=`\244\027\275D ;\275g:\020\275`+1<\302\366\223<\377q#\2753<u\274\316V\022\2745\344,=\211\246%=\3407\301<TB\344\272\020\273,\275\302b\020=`o\245<\304\242\\=\231\230\323\274\321N\024\274\274\260\030\275]\341\250;\371^X\275C\342\331<\232/\330<\304\305\326\274Nc\245\274\273\016\344\273@\275\204\274\227G\346<s\330;\275jW\231\274\254Z\254;\266\216\t\275K{\274\274\255tl<\0141\267\274A#k<\265>)=\007\322!\275Y\311\007\275\247\202\364\273<\311\201\274~\361\016<\2738\021\275\350\365(=/y\201\274\202\0350=\314l\007<I\253\263<c\252\032=\245SV\2751F\341<\227\233\235\274<\233\305<\244\024W=\241\363\'\275\3632\006\275F(\374\274\200\2717<\350m\342<{\n\207<\230\226\035<\371\254\001\275x\2062=\347\252\202<\376\225\316<\237\221\211<\232\2731\275Lf\301<d\247Z<S\317O\274S)\020=\240\355\226\274d\277V=\210\335%\275\275\301)\275|\2769\275U{\254<\276_\311<\027AI\275\"s.=O81<\322\350\t=\374\377\343\274\232\307x<t\246\025\274]Yi\273\275\n\020=\355O\034=\256i^<\003p\327\274r^\036;\033\224\374\274i\337O\2753x%\275@\322\222</5\013\275I\270\"=\346\375A=\226e\315\274i\374\t<\"Z\n\275\265\234\017=\352,\364\273\273`\304<J\030\247<\277\302\271;o\215\033=\312m\034=\226Zj\274\365e<<>\017\240\273)\232\214\274\006?\014\274;\327\002\274m\336:\275\256\267\255\274}3P\274\311)\035=nF\365\271\2579\244\272l(k\274\005\252\360<S\376n\274\374\024\274\274.\375\001\275 \202\275<\'\320-\275\210\361\\=\213\240F\275\006\3047=\025<\036=\360\305\352<\037\\Y=\241\320?\275\317\300\361:?X\336\274hy\330<\202X>\273\215\tl;\325\263\370\274\335U%=\243MN=\262a(=\306\n6\275\325\226\341\273\217\no<l\200\r\275#\032\216<\313\251\216\274w*\033=\364e\310\274\367\375w\274\270P^<\227\203V=\335\366=\275\217\323E\274\315\013\222<ej\027\275\006p8\275tj]\275\023\316\002\275\236\337k<\227\261\007<\013\262\202<Z\226\227<\254s\352\274\200\260\036=f?\272\274\322\2437=$\207\336;(i]=\317\366\240\274;>`;\230\361I\275Z\2545\273\312\257\257\274\332n\261<\0319\016=\035\200\337\274T`\206<\317\025\014=\204\336\216\274%|_<$\314F\275\334\342\"\273j\261\322<\227b\253\273\263{\255\274`\2514\274\004Pe\274S\3757=\036\373\231\2747\236)=\240\317\005<\027\3603\274\300y)\275\375\013\263\273\266\202\033\274\030\025V\2752bY\275\010fe<\305x\214<!\256\367<\211\035\020\275\225\014\023=\276&\213\274:\313\247<,\206<=\350~\252<\276\006\217<\336n\261;\266Q\322;\307\371\252\274\273\212\263\273\225\357}<W\242C==\2164\275\3014@\275`\246\246\274\225CN\275Qz\014\275\363\235\224\273\\\276\\=9\225(\275\215\220\252\274\22612=N\'*\275\242\241\003;\357K)\275\356\2143=\004\271\264\273\331\257\324\2748G\272\274\232@\'\275\343\367\345\274\303\263Y\274 \246\004=\272\354\334<\000\0337=\235O\215<H\323\314;#|\030\274\3177\264<rw9;G\034\271:\013\265\334\274w\032\226\274\313\033P\275\225\250\313<=\203\237\274\316\ta<\200\363?=\335\244\307\273\330^\352\274\363\221\307<\277\0366\275\300/<\275=\022:\275\262\326M=\201\2373<\364\245(\275|Z\257\274$2\355<\363\210\030\275\231\377\000=\025.\365<\237\343I\275\341\005\004\275)\251\024\270l\336\013<\242^\322\274\313\346Q\275M\245W=\251O\311\274q2\373\274\256\275\020\275e(\n=\250\246;\274\277\234:<\345\304|\274\006\206\372\274\254\316D\273f\305\'\274\225C\247\274O\320\377\274\347\362\035;+2S\273\300\034?=\357\0232=\371\325 \274\203\036T=,\254\275<\006D\263<+&\333\274\206%\243\274\375p\326\274\324&\253\274m\316Y\275KQ\037;\2031\274\274\030\245\276\273N\252\027\275K\351s<A\036\277<d\300\2539m\005{\274\361\255_\274,\214\014=\311\037B\275fg\221;<\0210<\217\\A=\360;[\275\247\2304=\364\002]\273\227\r\365\274\354\226\247\273/uO\275?6\033= Gd<\267\232\270\274*\200\322<\211\225\'=\304\377\031\275\215\277\262;+\351[\275s\273\205;O\242/\275X\227\035<\247FJ\274\272\363\340<.\316\365\2740\207\310<~\347\036\275\376\262\027\275\311\200\311\270<hS;\200jL=\364K\t\275\271\304\007\275\n.\263<\272\tS\275\322\327*=\023\277\343\273\013\300J\275O\274;=\340\261\341\273\247Q\n=3\n!\275\201\021\366\274\201\264\342\271\344/V\275\025\202\316<\203\357\017;\261\3375\274\213U\024\275\337z\273\274\203# \275|/A<\340\331\001\275\356\220&\275\334\226\002\274\255_+\275\037\303\264:a\225\220\274\000\0345<7\204{<+<*=7\'\275\274\363L\243\271Inj\274t\270K\275\274E\032\274\214\216\234\274\364\361!\275\234\022\234\274P[B\275\323\370\t=\233\010\233<\267\027\007\275\364\034S=P\tg<\213\322\004\275\266/!=\014\336(=\217\277?\275\033\373f\274\001\364\341\274ZX\323:\317\346\323<B\206_;|$\013\274\2735h<\025\266F=\236)@<\3579\203:\330\313\326<%~\235\274\025\376\031\274n\200\235\270\367c*=\250\301\"\275\340\321=\275\376\241\034=\225qH<\215\217\345<\316\200L\273\332=\252\2741\326\365<@\200>=;/\t\275n[2\275\235\r\266<\305<i<\277\177R=$s\373\272Z\351\'\275\2502t\274\346\255*<S\320(\275\376w\003<#\207\010\274\373\036d<\"\207)=\375{\003=M\200\265\274\036\215\231\274\022\311\"=\251/\342\274$\211\003\275\336$:=\264\252\360;\363\216&\275g3I\275\226\"\260\274_R\240\274\376\306z<\343w\212<Y\226\177\274\005\357\267\274\312\345S=\202\001.=\rB\232<lbZ=s7-\275\247]X=\2100\352;(9\312\274\246`\275\274\021-\265<\236\235\'=]u\366\2728\t\226\274\267T%=\312\2016=\267\235/<\271;\277\274v\202X=\004\354@\274%,\375<\223sU\275\273c\310\274\216U\252<6\254\314\274\274N\274<\201\321\323\273\254\326\217\2748<\332<0\010\223\273\021A\236\273\253B\233\274\2657\350\274\266\230!\274\252uH<\266\343\007=\002\205R\275\252p7=2\202\245\274\033\315#=\177VL\274xx4\275~\351f\274+\245\216<\335\266\017\275\325g_\274\360X\375\273D\334\266:\200+\373<\256SK<\331\277F\2753\020\036=mL.=\347\205:=r!\237<h\224\226\274H\026\277;\223\256\000=Qh\016\275\215\225\022=\275\021H\274\250f!=b\010}\274n\250A=\256\240\363;\375Z<=\367\206?\273G\3406\274\035c\307<\247\227\211< 9\t<M\253A=\203|C<w\222/\275)j\375<\354s&\275\314<\263\273\251\350\233<\016K\264<QU\322<^\r-\275\036\233\023\275\323\263\357\274\361K\265\273\331\234\363;\224\200\335\2748\376X=nN\r\275\274\350\027\275|\234\202\274\213\273\200\274\032\354j<\013\277l;\314\346S=\252?;\275A93\275PrP\275K~:\275\020\375\360;\3414\243\274\262x\000\275\361\017N\275:L\307\273\013\212\322\274\336\204$\275\037\346V=\304eR\275s\300C\275\'\342\030\275\377\0368=\203x\034\275tNS=\347\257\002\275GIT\275\315\255\355\272X\265:\275\312}\347<\216\370\030=\321E!:\373uk\274#\024\352;\257\313A\275\025\271h<\221\233\246<iJ\003\275c\352\344<a\024/=YZ\030<M\260s<\312z\271:n\321C=.\232\003=\017\030=\275\025]\"\273\206\272!=\"K\340<3\016\230\272\220\276\311\274\005\312\247<\205\031\036\275\036p&\275\240e\314\274\306\321A=_\rX\275\257z\255<\334b\335\274y\031\353\274fg\006\274PcA\275m\313\210<\224\237\235\272\231\344P\275\324\020\032\272KR\374<\312_r\274\3739\037\275\235Wu<\371\000F\275-\325-\272l/\355\274-\313\353\274\347\270\021\275\005\200\225\274\341\252\306\273~\236\033<\364\312\031=\3420\261\274\322_\031<\265\3423=>U\302\274u\337\364;d\250\364<\277\003\236\274\036\316D\274\307\373\341<\205bM=?\233\355<\247\014\365\273\352f\037<=\035\212\273\325&\313<\200\3649=}1Z=\362\007\367<?\340L<CxK<Z~\201<\027\305\035\2743\260\034=1\rT\275 \272\252\273\314}!\275F\036\370;\314\261\224;\227\233!=\225\2457<\032\004\252<\033\003\240<L\212L\275t\337\322:I\344\213\273\026\244\214\273\325H9=M\212\312<ME\334;\332\267\"=@\332(\274\244\325{<\352\3712=\300\211m\274J~\263;9\254\336\274\220\'\322\274\005:\314\273D\327\010\274\363mW\275<\273\007\275\233~#<C\330\270;P\372\354\274\331\230o\2746R\223<\2107\t=Z\254P<\036xC\275\036\375\326\274\206\214\013=>\201\233\273\353\241\025=P,F=!\364!=8#\272;YcK\275`\021\000\274\341\341Y<\260\266\277<\300\025\t\275\237\034==&\350\373<\010=\007\273\'0\032<7\317\260<I\242_\274{r5\275\347\267\022\275\022\213\014=\0036\342\273\332R\362\274\367\313\001\274\030@(;_\337\'\273\351\233\000\275\363B\253\272+\n\253\273\2616F=\003\363N\274\345,x\274|\000\352\274\017\244\214<R\260@=\201\331D\275&\223\032=\004z\032<\305Y\021=\260m\356<\205\350\347<\365P\025\275\212\367\326<\'P/=\266\327\310\273\316X2\275\314\010,=;f|\270E\273\344;CK\341\274\0361\001\273\346\375\'\2741c\251\274\325\314.\275\350_\331\274\254\216\256\274du]\275\256\315\366\273\321\246\251\274\331\335\t\275\354kT\2744\330Q\275E\210 \274p#\321\274\345\275\211;S+\220;W\024%=X\'\362<7\rp\274*\212\n=\233m\255\274\300\375\210\274\014\355\r\275\230\277\377\274\003\351\321<\306\255D\275K\016\302<\252\024\256;\227S$\275\177\273\366<\313pP\275\'\016\232\274\372\242\344;Z\347\351<\363\313\003\275\203\356\337<\354e/=\333\010c\274\367Y\236<\005\272\316\274l\357\375<2\005\231\272\342O\010\275\007S\252<~@\330\273\203N\315<\331\317H=\375\365\3348WE\342\274c\311J\275s\033\314<1o\341\274\2449T\275\346|\215\274Q\333\r\275\255\356\301\273y(\206<\261\207\343<\343\234\'=\022\221\021<>\3212=\225\205\345<\206\231\333<_\nR<\314\371\353\274{mK\275\026X\320;xH\265\274\326h\242<\205\025\331<\263\214\017=DY\265< _]=\277\321\263<G\275V\275\244?\343<\246\2012:_\277\301<\343\331Q;\010\r|<\340,Q\274\214\016/<\035\320\n<l\342\021=^\0308=^c\233\273\322\316C=\2660\354<\033\003\t\274Ce\374\274\314cR=\345\203\246: \261W=\2149\023= \255;\275l6J\275\006\271L=\366&\350;\326\272Z\275\022\263\215\274\246\271\212<\266f\254\274-\003*\274\333E\001=\225\267Q\275P\0245\275\023\312S<6\275\274\274\336\221[<7\344\036\274\314\373\370<\246u\026\274\033Z?=\302)D\275\004\270\363\273\307\030\352<u5\372\274\005f\014=e\022m\274v\2559\275\013j\336\274\357r/=\342%\305<\255\3029<\270\374\027=\304\326\021\275#w:<g\301\277<~\n\207<LG];tf-\274U\212\033\275\303\0312\275iu\377;\\,J=q\333N=n\314}<\356<M\274:\200C=?|E\274S\327b:\307(\"\272\007&3<\010\266?=\333\373\r\275}\014\232<\367\'\237<\256\370\032=ww\013\275\204\034\354\274\311\350\037\275dy\214\274|\314T=\231(<=\2728\036=x\205\224\273U\375\353<\376\340%=\261\336\312\274o?\323\274\335\204\005\275e\325H=2=\033=\246nQ\275\242\316\026\275\224\270`<B\002\240<}EY<\3215\234\274\277\353\021=\3626a<\252\020\373<H9;=\353C\005<x\204\303<*^N\275\032\017\271\273\321\322\366\274\023/+=u\272\020\275[\251\337;\230\"\344<\222_\266\273\373\'\262\274\201\211\370<\331\231G=4\303\006=\035\235M\275f\272\363\273N\340L\275\024\251\026=p\3708=\000\304\035={s\275\274\221\273\034=\360\374\\=\214<9\275\362(Y=\326\255\375\274r:\025\274\371\246L=@\370\273\274\372\315T\275J\324E\275\2277U\274\223o`:0yK\275\353\206K=\007&A\273)o1=\205\337\272<FT\327\274\257\036\'\275\024\023T\274\364\361\245;v\346\001\275\023\247\274\274;8)<\270\265\"<4=7=:\226\030=\244\335\270;\333\204T\275\253\271\032=7\351\276<qTI\275\324\010P:P\227\262\274\021b\337\274=\335\234\273\355\203\206\274\346\253E=EHw\273\353\227Z=.@.9\025\010,\275\tD\255<\204\214\340<6\003\022\275\276\035\021=\324\323\270\274\301\356K\275\356W\333<\220\344@=\224\240v\274\312J\007=2\013]\274\261\3378\275\027\226L<B\312\003=\020\234)=\353 \206<\027\360\246;Z\355\321;\347\372B<8\021F=L\026]=L^D=\362\220J\272T\360\030=J\364\037\2733-\355\274MgD\275\034\310\007=\016\363\217\274\256F\242<\226\303\232:9\260\006<>!\000\274<\t\n\274\325\270\207\273\315j1\273\016\225\016=q\025\005<x\340%\275\324(?=\365\r\351<,\3258\274\303\206\260;9`9\275\334\002/=\275R\276<n\313\231;\315\2103=\260\036<=\216@\315\273\313\363+\274\367j\027=X\010\005\274+\017<\275\031G\240\274\352[?=\013\001\317<\251\340\343<\004n\002\275\251j\365\2745\2153=\220\366\223\274\230lU\275\205\302!\275\241\307\025=\345\222A=wQY=\364&\021<;\000\025\275\223X\245<+\020G\274@\256\224\2746\243\362\273I\355W\275&\247\001=\361\251\237\273\223d\023\274\372\202V=er8=\220\243\035\275\036\243\222\273\330\342\265<%\223\344<\022P\221\274\301L+=\336\254N=\315U\333;\202\202\226<\262P!\275B\210\267\274\031\303\256<E\2226\275\203*\t\275\022)\025\275i|S\275\355o\200\274\231\215\032\275\260&\021\275\2766U\274{\212\021=9\001\370;\200k\324:\257i\017\275z>\"=F|\373\274NS\001\275\235y\233\274\221\017\321\273\333\004\354\274\177\216\\\275D]\226<\277dF<\226\3710=\340o\241<\205\000\365;\031\017\223<\002Q\267;\370\260\265\274\217\232\001\275\333\204\202;\001\373\355\274\312\234\263\274\357\266B\275(\211\207\274eC\\=\222\230\272<\317oB\275}#\374\274\344\227K\275J\245=\2722\324M\274q\330\272\274\031\2042\273g\371<\275#@\017\275\260\n\327\274\205\226U=8\010\252<\277\366\225<\331%\221\273\244@\'=D9\n\275\272\356\316\274\351\331\346<\304\221:\275\313\364\003\275@\034\024\275)^>\275r\323$\273\226\025\336<)@\007=\021l\036\275\314\222\272\273\373\347%;\214\273\223\274T\313R=\322\310\324<\274\356$\275r\271\022\275\352\\\014\275!A\014\274\257o\374\274]\307.=:)\036\275\222\354\274:g\246\216<q\3537\275y\256D\275\257\030M\274\224\360{<\226&(\274\224\303<=\014Ru<g\302\244;7\232\315\274\024\352+\275\333\244\343\274,pB<h:\023<\316\034\227\274VTJ\275\214\317\202<@F\351<$\3651\275\342\252T=%\245\242<\311\205\010\275\337\317\245\273$\221\016\275qr\017\274\2371\021=\243\240\216<N\273$<\274\213|\274[\366\351<H\320&=_\376&\2745\371\345;V\264N\275\247\313.\275B\333m\273\017\262\006\275\036\320\026\275F\010\036<\201\2055<E1+=8\267E=,\036n<\331,\035\271\251NO=\375\013\\\275y\t]\2755\177R=\177\263\031\275\341f\n=T\002P<\254R0\275{\215*=\301\362\363\274\374.-\275\005DT=.e\236<\274-\016\275\306\263<\275\315d\264\274\264\330 =\035o\263\274\203\236F\275n\264{<\256ES={\0100\275\007\"\341<\305\2507\275dV\022;^\342\223;\342\242\214<h\246\207\271\236\317\253<\365z\256\274|\3119=\352@\220;\242\004\307\273\210\344B=\311\237(\275\024>=\275\2279\252\2748\367B=Z\000\035\275\242\234\312<\n\255\232;\"W\306;c0\343<zI\253<E\377p;\373s2\275\366\306\034\275\034\225\371\274n\270\302<2z\373<\351\265\\\274\2453O=\261+\001;5\351(\274\376w\362<\005H\026\275\247\267J\274P\221F\275\310\232\004=\346\357\237\272\200\237\243<\275\356X\275\377\323\267\272?h\217;?\340O=W\026?=\026\230\025\275N\2757\275\363|A=\220=?;a\010\\;Ed+=B\260\232<e\\+\273Ah0=(\216\342\274\336>&=\2635\013=GuG\274\035.\350\274\003)\004\274m\035*<!|9\275h\3562<\317\201\025\275\207\327\324\274Z\037\024\275\240\353\324<\343zu;6_W=C\364\275<\241\013\033=\366\242\017=\352\210\035\275?R\360;\214xM\275\327\037\350\273C\255\346\274\022,\024\275\256F\240<\242\366\375\274/\341\010<\033\303\024=\351R\242;\252\027r<\351\242Y<56\004\275\214P\315\272\265\321I\274\356_\t\275\340\010Y=^(\372\274@8|<\3024(\274\376\247\322<\215\224K\275CX\000\274\345\351\234\274\263\207H\275\332\265M\274\224&\256;\374%*\275l0\023<\320\\\276<\240\016P=\221\221\003\275\032K\021\275\304\026K=TV\213\273\325i\272\274Y\262\223\274)\354\312<D\317\311\274\276u\r\275\343\233F\273Z\220\220\273\222\323\234<\177\273\n\275\247\240\225<\204`%=\336\307>\274\006\310q\274\222\2165\275Tj$\275`\2360\275\357k&\275\004\351o\274\"8,=<\276\007=\277\356\016=q~H=y\026N=\242D%;~\372\260<\226#\356<`\234$<\357\365c<\203\261\266\274\010\213T\275\305@\376\274VBC\274\024 \352<?\326\014;bp\303<X\336\327;\034kE\275\216TB\274\'\212,\275?YV<\t[\030\275?\310\375<\033;B\275S\360\303<C\214\201\274\231\033\371<\316x\353;5~2<\004Xz\273[\373\312<]\224{\271\204\306\021=\252\277\224\274\212\354\266<\030\036W<\232e\264\274\343]S\275\351TQ\275\270]\314<\227i\227<\0240\201<N\3676<\t#E\275\207\316S\274\001I\242<\226\267\n=>\204P<~s;\275\030B\036=\262\0262={ Q\275\376 1<\025\374\253\274X`E<{\360\340<\343\265T\275\275qX\274\336\234+\275\315\213\007\272\201\313J=u\2343\275\323B\356:\310\2402;\033VL\275\200S\352\274\367z\242<R\002N=\210\227R\275%\233\035\275\322\362Z<\306nG=y\236\275:w\0326<\021^\026\274\222Q\003\275V\247\002\274\3173.=\226\247\006=/\003E<D\371\235\274\272$-\275\217\333[\272\221\322:\275\276\"Z=\337|\201<\245t<\275\217\265\337<\275qF\275\353\332`<\231\343\202\274G\352\215\274\330\341(=l?$;\306\276#<\352\333\257<[\214\304\274\036\334N=\177^3=X\370\'\275\256\2412\275U\210$\275\341\370T\275W\300O=\2032\205\274\271\r\316\274GQ=\275\325:\244;\244\233\017\274NO\260\274\001$\017=\361\240\315<\003\330\316<4\010\010=\2347\231<&?\304\274\003\016i\274\250\t4\275\307\272L\275\347\005I=\223\264\r=\325\220\r=\271\215\n=d\371\304;\303\226U<\216\350\027;\340\250U=\377+?\275\035BR<h\r\266<h\205\262;(\025\305\273\352M\245\274U\256N=\233U:=M\230\205;I\336\346<.\005\201;\204\347\002\275\322\252\214\273\2410\276\274\323\237\247<}\262\366\274\266\247\346<=q\342<<\3106<\220@\351<\205l\025\275\231\024\235\273\247\255\021\275q\251\314\274/\373;;\270A\032=o\340M\275\321\350\262\274 \373\353<\200I\031=Cy\364\273R\360\226:\224\241\351:\013\324\004=5l?=\223(\010;0\036\267\274a\365\374<\364\014/=t\314\342\272w\372!\275\n\321\023=\365\2546<vwp<K\352\252<\362\241!\275\363\010A=\322\035\014<\301\257\000\275\276\026-=\253\002U=5!\306\274l\342\256\274\360\352:\275b\004\232\274\327\255\212<\000J\217<\236FL\275\370\026 \275\206\270\377\273\260\026\350<V?U\275\r\303\204<\005\375\271\274\245\3229\275\230a\324\274\370\307\351\274\267+\030\275O\302\n\275\210g\'\275\036`\377\274n\037\233\272}\361\372\274l\365:\275\244\027N=\311z\025\275\373GX=\013z8\2759D\255<\213J\014\275L!\217\274)\320\030\275\032\010\020<\373\312 =V\003\273\274\335\030\023:\035j\277<i\002\375\274\374\276c\273\321P\004\275\022\272\322<\357\322\336\273A\222E=\345\367\2346\037\207W=;\337(\275EGw<,\341\023<\212\267=<y\200Y\275\030\337\342<\215\273\t\275\310\320\324\274\345\2706=\325\375$\275\370\243\032=u\346\022=\222\232V\275x\026\237\273}\r\331\274!j>\275MZ\206\273\230\344#\275\221\205\357<\203\267\341:,\027O=\377\036\271<\362\236(;\2448/=\300\355(\274nE6=\343\345\033\275\027JJ\274t\225\215;\002\352\227<\027\rk\274^\275Q=\037\357\274<7\t\346;J\304X<\363,\003=\363u;\275\307n\337; OQ\275A\302\332<+\250\301;\316\335X\2756R\362;\214\010:<IZ\353<QW\"\275\204\275\243\274\005i\354\274\241~$<+\306\271<\357\004\371\273\333\326\030\275}\223\'=\332\330\t\275s\272\024<b\254Q=\203\210\024=\000\366R\274\365z\204<\342\237\277<\355\313\255<E\313\016=%u\227<\177\236\022\275\364\370\\=\363\326\246\274\236\265M<\366\226\220<y=\023<\\\236\031=<;\357\274zS/<\244aL\2755\203\370\274\224\3148\275%o\252\271O\252\037=.\344.=\000\317\024\2752\365\016\275\032\374\337\274\301\325\214\274\317\304\010=\003\013\204\274\215\025R\275B1\346\274\346\324A\275\032\241\0338\030\ts<\271`/\273\033\246q<\273\304<=\024T3\275>5\'=*\332#= ?v<\306\270\304<dsU=\321\253\334\274\026\364*=r\355\305<+\004\373\274\360\313P\275\337\343H=\332\362\023=\360>F\274^[+=D\235.=\313o\335<\221\217\223\274pPt:jU\243<\3716\024\275c\240X\275.]4=\207\333N=\021\001\\=\222\206\307<\246\035\022\275\367T-\275Q\243\020\274\351|\320<\311?F:q)\212\273\224\307\373\274\026\365S=X\252K\275\001;\'\275\321d\230\272\322\354\027=\263\210I\275\212\251C=z\232\377<)\265\213<\307\215\301\274\375\303\n\275\006\2202=\035\372\'\275\035\233\374<\260\266\231\274t%\260:\270(+=\374+I\275d\366#<j2?=Qu$;\337\243(=\010\211\213<\374\3069<s\261V\275\365\3110\275y\322\3129\034+E=\276\002\277\274E[\344\274\267>\350\274\304\336M\275\037\373A\275\341\373\217\273\014\275\257<\016\304\363;\214\266\216\273)\035\331;Z\350t\274\337\'.\2757>\336<\343e\005\275\010oG=W52<H\343\311\273\250 9=\016\357\324\273\272\023\031\275\313\0070=\023\251o\274\372h4\274\247\2753\275|*\017;\026n\240<\254\333\303\274\355\333\033\275\342\240.=>\276\235;\342\334\363\273\365\013\033<\n\320F=\347f\007\273\232/\275<\326}\254<\016\250\356<\317\323\322<8\345\336\274\253\236\311<\027S\352\274\210\0013=j\312\024=\026\000\001=\304\276O=M\031\325;\233\022\277\274!\314\360<;\277\226\274*\310\253<U\241Q<\2024:\274\202\215\271;\n\'\224;e\276\033=\260\302\233\274\352]\336\273\261\322\001=\321t\035=\347\312(=\331\025#\275Sa\335\274VG\327<t\005E=\261\356\r=\\\327\001=y)\027\274\352\262\035=\357\0235\275\235\013$=3\343\"\275H\323 \274\034\344\362<\337\370\322<V\304\264;\255RF\275\264\\8\275\274\r#\274\037g\217\2748\356\362\273\346\021R<@\177\217<\3502\210<\332A`\274U`G<-WL=\262U\024=(\304/=\210\"J=\354\032#\275\362?\001\275=\312\323\2739\214\013=\346\213\323<6\310\025\275\253\036\203<R\275O<\217LR\275e\216&=Pr\247<xoI=\177\364\010<k\360\020<\363)*<\0003>\275\025\010&=r\210\270\274\272\027\301\274\321/\375\274|\206\325<\251\216<\273\355d1=\337\344\035=1m\275\274j\234\033:\371\206\024\275\177\3239=\277\030\345\274\030\255Y\275\312$$\274\3542\025\275\347\2545=2Q\'\275\352]Y=\330\210\t\275\202\025\271;w\027\260\274\355\016I\275\337H\034\275\201\272\004=!\024P\274\313\265\037\274#:\315\274\267\243\001\275]5]\2756\2409\275\253\\W=\332;\010\275\017\177\017=\342);=\255\230V<2\203\005=q\014\307<\217-\026=\257\026\254\274\006\365\347<\333\030\\\275\327?/=9\027@\275<\235%=A\024\266:\225\'\336;\035:\323\2730\303\'=\301\337\021<p\005\002=h\204\'=\r\267\001\275\r\227\334<\246\334\r\275+K\311\274\247\341T=\026\272Q\275\326\233\366\274\275\376\317\274\373\\\004\275\354:T=#\013R<i8)\275\237k\036\275\363\335b\274\264\341\322\274\307^(=\021\360\231\274C\322\\\275(\240?=25\030\274x\2332\275\235\367=\275\326\344C\275\357\304$\275o\2256\275\304\247\033\274\216H\314\274\0266,\275\377H\300\273V_I=\375\231\021\275u 2=\006P\025\275I\\\252<*]\364<\315\024\r\274\270\244\r=\004~\271<\204\330\273\274\357S\342\274\010\230Y=\\\341\033\275\373\270\360<\277\324\036=p\013\037\275\361\'U<\355\234*\274\202\020\366<|\\9;3\243==\006T\365\273e\002&\275\275\231\3109\026\3103=\306\237\030\275\250\277\306\273MIf\274FX\220\274\357v\222<a3\224\274\360}!\275\254\210\336<\001y.\275N>\354<\373\363h\274j\303\211;zWD=\255\302H=\335\345H\2759eI=\371G\337<\255\031\025=\204QP<@>\312\274\303\013X<M\003\331<\207\270V\2751,L=\377\354\324\274\3070?\274t\3155\274>*\016=\320\232\006\275\203X\343<\2528\006=\020\301\265\273*\261\001=\033\340\365\274\263?\034=D$M\275>\231\005=j\364@\275\226\305\200\273\303\334<\275T\370O<S\311\023=Hva<\360\267I<\267\377\365\272\2338\334<k\240\376\274\301\322\"<W\032\264\274)\276\017\274n\236:;foQ\274\225\237\221\274\200s\360<\323\347\022\275#\322\264\274\0030R\274D\254=\275\272\3169;}\351\310<a\372\251<?B\323\273r\227\223\274\026-\024<\034\256\227\274\364\236\354;?\261\317\274_.:=\345O\374<\370;;=\370\245\363;F\376\233\274\323\250J\275\353\211\204\273R\360\200\274\230\233\350\272\225\315 =\376\025K\274q\330\221\274\n\253(\275\021\273\204<LI#\2754\241X=\266\2220=\215\215c\274GqP\275\240\355\375\273w\003D=\225GD=\341\316\362<\350\342K=)\333S\275u\245\035\274\340\365\256\274\017\374\342\274\211\227\375\274*\352\024\275\230N\334<\r\321\316;\253\006\213<\335r\225;|g\030\272\362\214\310<\034t+\274;\331\'\275\201\215\027\275P\234\013=\177\336\017=\222\211\032\2742\177\256;\014\245\032=\304\321\017<\017\363Q<\nsT\273T\350\n=c\0061<\3156\270\2744\322Z\275\345\010\025\275\314\372\024\275\315yi\274\372\233\034=.\262\334\273\244\256.=3\314\242\273\332\\\025=\n@1=\262G\033\274\226\301L\275_\245i<9Y \275\334\313\211<>0\371<GnR=\375\346>\275E\273\370\274*\002k9\264QI=\302Y\024\275d\036\"=\367)\357<\363\034\"=\210K\257;\002;\020<)7\016<>\373Y\275\331a(=\340\007A=(\037\001=T\265\215<r4U\2753\220F\275\304\273\362\273[y\206<A\225\026= \206#:`bG\275)\0130\275\322\231\256<\341\235v\274\267\270\233\273\251?\235\274\363p\246\274\010.4=\310%<\275\337\353?\274\365j\334<k\031\016\275A\257\223<\230\\(=\351\246\215\274\220%\272<\353\354\245<\324\233=;?\350\276\274\235\360Z\275?A<<\032\343,\275\246\031\245\274^\365\"\2748G\n<\347\351\203\274^i\356\274\001\360V=D\213K=\321\"\013<\277\254\220\273\004\237<=\020\316\"\274>\246\036=\357\2679=G\3124\275\r\232\206\271v\014\022=\026+\201\274\272\213\027\275(\345\331<\254\376\305\274wO\031\274\353\316\233\274\236\004\241\274D\327\314\273\237\270\036=\004%\357<O\227*\274\003\013\375\274\374h\236<Z\224\007\274\362\360\254\274u\327M=W\020\010=\023_\t\274Q\210\333<\202\3650=\266\360\004=\344k\010=Q\340\023=$\256s\274%\372\t=3\3519\275\002\302\323<\027\340Q\275\356CF\275;\3278\275\'\301\203<\346`\233<\337?7\275\372\271\222;\273*\306<\221+\346\274K\010\273\273H\355\254\274\244\261\224;\245J\200<>\375\\=\216\260\227;:\251f\274\013S\337\273,\277I=\201l\025\275!\000\021=0\254\017\275\374@W=\315?A=\322>Y=B\020\214<Z\207\272<\323\343M\275\364&y<\222\2416=\267\362G\275\rl\341<\237\002n\274A8\216;\230\240\031\274\233e?=b\342\027\275?\316==o+\347\274m]2\275 s\002==\241:<\t\220X\275k\317\005\275/>\353;\361\033\010=\326s\315<\372\277C\275\327M\206<I\240\365<\315vm\273\032\3758=\362\251\271\274\374*\343<=\362\372\274S\350\017\274\357\3245\275\330\306\204\274 8\267\274\357G\002\275\242-Y;\023!\227<U\205O=\377\217,\274\353\252\013\275\004B6:\355\236\354\273n\267\273<\200\017\341<\002?S=P\313\025\275i\241X\275\357\027\317<\"\302\217<[D\260<\220,P=\327\023\026<\t\013\371;\207\327I=\020\177\030<\337\365\027\274>\201\260\274\217z\325\274H\3529\275\227e\007=\276+%=\017Q:<\375\301,\2754m*\275\003\2179\275\202\222\345<Lk\367<\002\275\036=\001iE\275\032n5<\2329\373\2744A\031=\312\211E\275F\360\246;A]x\274\244\nG\274\273o\"\275L\265L=\002x0<A\325\2529\352>L\273\235\262\023\275h#V\275\033\226\026\274gz\007<\017\344\031=\223\341>\275\323\376\350<\375\001>;3m;;R\363\226\274\366\3174\275\001V?\275\216)\221<\347k\241\274\234\237R=\350\304\376<%L5=\330\234\217<\303\345\031\274g\204?=q\005\351\274\302\366\035=\311\361\351<U\262$=\227\003O=\033\n\r\275\327\266\023=UwR\275]\301\n\275u\325U=\004\214\215;zG8\273\25034\275J\341\375<\363\315\226;\210\214N\275\203]e\273CU\255\274\341b\360\274p\321\376\274h\273\337<|\254\020;\346U\260<\212\262\307\274\266\266\206\274\024E)=:\365A=\374\302\230\274\352\270\237\273\245\322\275\274\227\371\032=m4\316\273f\272Q\275-\210?<\274\231\021\275F\224\340\274\002x\316\274\316\037E<\034bV=;FY\275\311J\006\275\230}\024\275]\202\036\275f\310\357; \244\214<6\361\350<\201\266\360\274\362\344\213\2748g7=\340\214\376<u\2577\275\255\033\t\275\302)M\275\313T\013=n\251\034\275\212C\306;\243 ];4n6=\246\376\335\274M\3567\275[_Q\275\300 %\274\237\376\031\275\256B\333<l\362\231<\375\242\220<j\027\353<y\235C\275\274\324\n=\264\341\357<(>G\275\351\206\317<\232\232\2058\320\023\361<\241\2002\275\256\320\263\274J\034\301<c\372\n=-\321\034=\253{#=\245;\367<YJ>\275\253\310\300<\334\214.=\251\267\337<\362\307\345\274\007\0343\274\331\301Y=n\256\275<\016\337#\275\216b\315<\322\271b:YY\035\274\000+_;n{\010\275o8\002=\3318\342\274\244\362^\274\177\312B\275\025\276\032\275B\340\361\274rM0\275\340b^<F\305\017\274\032\275(\273\227\325O\273\010&\361<j\374K<\373x\270\274\370\277\336<\335\201W\274h\017E\274\222\227\023<\007\370$\274J6\326\274\363\276\036=\325c\031\274L\3174=\033\014\242<\213GL=p\245\t\275\345\207\2409\336S+\274\036~5=\374\323\277;\311\261\350;b\2660\275%\270\273\274\024\340\346\274\213`\\==k\260<c\230\032<\200\232\232:\307\3122=\243Fj\274\277\373F\275+\240]\275\025nO\275#\331\t\275\233_)=R\304\020=\001r\216\274\325\014A\275\'\323\001\275\302w\272<\3717Z\274\237\250R=\322P9\275FR\201\274\311\211\376<jI\246\274N\3720<\212\264\033\275\355\212\021\274s\374\362\272\213M\2748\323!\022\275/.?=$\363\\;\206.6=\245\253\367\2744R\274\272X\303\327\2749\274\272<\254\272!=\351\0057=6\034\347<\022;C\275\320\366\234\274v\206\206\274\300\031\337<\363<F=5\220\323<\t+\024\273\353\203I\275U\356\347\274w\2464=m\0334=\032\323\332;]G\2408\324\267S=\212)\316<\0305\025\275\010\375}\274\023M\217<\313z\025\275\217r\353\274V~+=\032\235\347\274\277\272\014\274yG\013=\253#\016<\305\257\260\274\347\0230\273\030\266`\274\2751r\274\230g\001\275\206\275=<%\023\304<K\360q<\010\232\026\275\347\213:\275,\333\252;\366\211V\275\0268&\275y\\\273\2739\275\200\273\\\240\027<{\325\257<t\314\345<\031\371 \275g=\334<\343!\026\275|;E\275d\373\246;\276L\034=m{\376<\177\036\300\274\300iJ=\222\361(\275/\222C\275\223{\243<\351K\000\275\212\002\363<.\337\364<\344\274-\275\"\352\254\274\005\262\017=Gu\324\274\301D/<=\005\r=\351}@\275\020\334\226<Z\276\350\274\212O\214<\327\302V\275X\241)\275J\274\310;\213,Q\275\262\334V\274\2377C=\243^\"=\357$;=\210\023\007<\204w\004\275\255\214\016=\220\177\277;S_N<G\241\250\274y`)\274\177\025\322<n\235\003<d\204?=\346=\357<\220\274\r=@\304j\274\377\370\001\275\222\\Q=\227\036\000\275Kd =i\016>\275\327\335;<\301\024\227\2743\267\351\274\247@\215<\260\355\022\275s\362\213;$\2160\275\325\357;=\306CA\275\237\332\"<\005\310\230<\267\246\177<Dw\020=\3065I=\0209\030\271\334x\326<x*\273\274\341,\035=\340\340\320\274}\3300\275\025\315O\275n?s<\317\227\375<1\020Y<,\351\264<9\273\276<\240$\220:;\'\305\274\303E\370\274\273\370\000=\342M\010\275\217\220\006\275\030\376\271\274\013gY\275Jd\t\275P\357\217;\033:\333;m\270\021=Y(M\273\250\3436=e\275\344<\374\323\026\275\002Q\317\274\033y%=Q|\023\275\026\367\'\275\344W\234\274`\002 =\232\010\371<%\300\"\273\276\321\312\274q_\261\274\355!5\2753\243\370\274\\\'\233<\2377\353<\033\354\237<\000\005\337\274\277\203\273\274uu+\275\320\t$=\330\261^<\223U\352:#:\215\272\023}\225:\257\374!\273\207\253\241;w\274\032\274`\335 \275\037O\203\2748\032\372\273\261\216Z\275]\360\026<\000\237F=\317\'F\275\016.3=J\270\372\274z\336+=\3647@\275t\357T\275\006eK=\377w@\274V\312\003=Z\350H\274#\341\244;M/X\275\\\277\325\2749\274\237;A\226\\=N\rY=\3002\334<\304H)\2750\2114\275\344` \275\226^\377<\305\254;\274\272*\274\274\266X\267;\300\265W\275/\005\343\274f~\014\275\261\370C\275\037\004\264<!\010,=\216p\032=\366\250\022=\254 \324</\303(=\031x\010<\217\205\021=\334\002,=\276\260\262;\301\236&\275\212g\013\274\326*\034=\334\031-=L\002\t=@\3245\275;\213\276\274\230\003N\2751\\\026\275\337\352(\275\277\203\036=\r\260\"\275\342\3019=(\276\035\273t\321Y\275\242\305\371<A\307X=\024\002T=\324^\316\274\032\036I\275\212N5\275O\3465=`lB<\\t\366<\234\213\035=\303(<=D\264\250\273t\360\000=\246\204E=\034\227S=\256\262<=~\240\226\274\263\274\016\274\310\002\213<\023\031\313\274Y?J\275\213\033\\=\n\257+=\357\024p\274*\033\364<\221r\014=w\325G\275Tsq\272k\253\032\274d\247\346\273iw7\274\363\275\270;\327p\357<J\355G\275yo\320<\3574\022<\320\326,\275P\236\030\275\277\237\364<Z\354\361<\317\210E=\nM\t<\365\367\255;o\303|\273\035\214\n<\276h\253<M\334\256:\351\223\356\274\0067\343\274BT,\275\001\261_<\036\346\205\274<^\341<R4T\274A\277O\275\302rT=\241\321\335<\303\202a<\347\311O\273\227\211m\272\236\302+<\2570\236\272\243\215\260;\014\354\370\2740\340\322:\316#H=-\327E\274\027\2532\2757\007@\274 Rc\274\347\213\360:\r\306.\274\202D\006=\365\374\037\275\353`\201\273\227T\270:\236b\232\273\334\330\230<\326\203@=\275\367\274:#y*\275\240\237,\275_%@\275\341\375<\275J\223v<\300\204\230\273\227\352\030=Uj\234\274t\222\327<0@\020<BNd\271\202\3127=d\352F\275\256\235W<\317:\260\274\027_1=\273\213*=c\221\003\275\231?5=\236I\007\275\333\022\213<\007A,\275\336\316x\273\013\257F\275\246\345\037<o\274\215\273\361\223\250< l\002\275U\325\017\2759-\333<Co\033=\000\336B=\\\271!=>\0378\275\255\225\017\275/n\002\274\326}\244\274\273\257\263<p\230 =\351TA={\3237<\362P#\274\036\013!<\256\253\363<m\311*\274\357\004j<\336\356t;\037\'\243\274Bx\027=\254\371K=\214\013\006=\r\373\233\274J\303\021\274\267\300\215\273\360\216\t<\201\013\025<<%\224\273\221w\306\274\243\362\252\274\024\033<\275?\312:=\365\302\354\274\3641\372<U\276.\275\243\365I=\3171\326;\375\363\206\272\371\3753=ja:=\022\302\227\274%\313\235:\242\2503=!\\\273<\244E4=\220\240\241\274\353\234z\273mM\036\275f\277=<\214X,\275*`\346\274R\035\221\274o\354\032=\224R\227\273\361\322-=\315b\r=\267<\257<\204\036\302\274Kg&=\340\331>\2750\307\026<\261l\030=\230\027\333<g\341\023<\263\231=\273gt!<\016{>\274\202I?<8\037\320;\324\353I<\030\254\214\273\223_\271\274nWt\2740-+=\323\212I=\356#\205<\371\227\234\274\2005S\274]\252X=T\354\002=z\006V<\264\335\373<!\025@\272\'\230\006=lt\t=<Tb<p`\027\275\374^X\275\246{\r\275\330~\022=\336\217\033\275d\007\302\2745xO=\034e\021=\004.\315\273\376\335\004\275\375\036:\274\300[\260\274e\210\000\275\314\312/=\021\227X\274\031\274\315\274\'\030?=\322W\353\274|[\037:\370\004\363;\200\263E\275\250\241\022=S\272\003\275<S\000\2759\340\002\27542E\274\037\031\3769\366\252<=&\301\027\275\017y\210;l\320<\272\2453\016=\253\365L=\332\215$=s\357\204\274;\361\320<rO<=i\233\036\275\372\022\340\273o).:4\217\300<\0021\345<\035\306\315<\250\302\n\275H\271\010\274\262\004\326\272\377sF=\205$\370\274}\226\006;\251\027E=U\'\346\274\336VK<\366\205\210\274.\272\007=\332?U;\350PK\275I8p<\021\277\347;\007\243\234\274\376W\004\274c\322\002;\030 \303:\354\366\313\274u+\276\274\274\230\325;\034\027#\275\255\362\037=\006\376\001=,\004\037<\316\227=\2756\254\202<9\3606=7}\221<q\344l\274\246.\250<\362\267L=\256\312v\274+h\243;\026`p<f\373\006=\243\3368\2755\261[=\320nF=V\276\t< e\327;\347\302\257<\322:\207<:\'\025=\277\013/<\335l\266<\327\006?\275H\261\002;9\352\003=\025\350\256<\013Z[=Q\\\001\275z\017J=\3233\014\275\252\007\027\274~4Z<\2661D:o1\376:\340dg<\364\376\004\275L\363\366<\255$\252<\252\257\253\274g\223\367\273\213\363O\275fp\240<\213#\313<-\2457=\177\002\371\274 TW\274\312\335\016<d\336!=\260\320\236\274K\322\000=D\'&\275\013\347\247\274\347\306\037=\265\330\223\274@\330\200<+K\210<X\260C\275\347\335?\275\221\375R=i1h;8@\234\274 F\333<o&\005\275G\230\226\273\361\202T\275\242+\016\275\341\337\242<&\3122=\304\301\263;b\035E=\202j\031=\251O%=\210\242(=\365\2403;\304\225\026\274\'\033h\273\366\250\330<\334\335\210\274?\2205\274YJ\227\274,\207\002\275<*U;\207\352&\275\345\370\251\274y\363\335<\334\2620=a)4=\344\304\254<\306\306F\275\342\274\360<\0163P<\032\242\215<C\034\223\271\236\311\027=\315\264\347<\325\3644=znX\2755\377\372\274\255MI<\030\335\300<V\211B\275\317\367\273\274\347>\025=e\233\370<\314\321\245\274\316\233\323\274\210\375\030\275\312U\200\274KP5\275\037\032\377;\031\035\036\2759\313\r=\244nU\275\3677\363<\t\312\221;n\314#\275\347\244\231\273\233\232o<qk\r\275\226~.\275\t\343Y\275/3\220\274\n\r\333<\177\006\366<\360K\263\274\033F\355<\036em<K\025\003\273\207\244\333\274\376\327t;\002\nZ={\002\337\274\034W2=\264.\313<\270\321\261<\370\032\301<\3125\215<J\200\341;w\207\270<\013\365?\274\332.,\274\265\316\214<28\371\274z\377K<\212\313\210<\227\260\342\274\205\357K=\232V\314<\233l\032\275\325E\232<\2049$=\276 \314;\273\325\237<\224a\304\274\004}\020\274\355\333\217\274`I\334;|\367*=n\260 \275W\212B=\002\243\020\275T\323\000=\202\0133=\323\017\343<\272\356C<sA8=\264S\277\274\204\364;\274\022{\217<:x\300\274\226\327E\274\202\311X<i\204\303:\025\236V=fk\211;W\314\322\274/a\'=\021\231#=\341\225\001\274O\254\206<4\217\r\275Y\325\365\274\344\006\234\274\244\326\257\274\365>\343<R\2618;}\307\373\274\311\227\020\275F\302:\274\200FW\275,\347\236<b\366\252\274\362\241\224<N!S\275\245{R\275\335\325P\275\027\345\236<\243p\265\274Xw\014=\250$R8\267\221&\275M\2340=\312\006R\275\202o\353:\023U\233\274\177\214H=\351f\353<\354%P=\212\251\007=(z\230<6\350\227\274\030&M=\273u.=\214\314\210<\242\270\202\274\023\345\000:\324\016\002=\355\201z\272`\246\304\274\334\361\370\273\261\246)<\007\327\363\274Nu\t\274F.\352<WVV\275\211$\002\274!g\306<\347\361\004=\377\332m<\031WE=\376g\n=\222C\311<\035\345\242\274\354\335*\273Q\006=\2742|V\275\312R4=@R\010=\254\031\'=p\\\251<;\323E=\016{T=\351\215\376<l\0249\275\250\305\310\274\242K\016\275\t\301\016\2759\002}<\210F\271\274\251\033D=^\200%\275\035\234\241\274\373\306D\275{\264i\274\337\n\352\274\363\351\004\275\366\331b;a\374\251<\223\307\303<\243\025-=xd\250;O&(=`VS\275[\313S\275\361o!\274\"t\036=\261\'_<\266\344\r\275\206\313\000=\276>3\275\260g#\274\317yp\274\333\326)<\017>\277\2745\020\322;\036\262y\274\014\345\307;b|(\275\372\210\313<\'\366\236;|\333\20295\262\342\274Qa:=\345&W<L\353\000=Ce5\273\210\030\017<m\2052={\2741=e\271 \275\035\2342\273!L\300<\363\305!\275\312\364\223;$\273H<\244\007X\275G\232\026<e\211\254\273d\227\023\275f\272\315<\r\337\327<+\3623\275\303y3=\266\211\000\275\253\327\017=\355\262\306\274s\276\000\275\237_\\=-\340$\275G\0033<\230\201\005\275\347T\226<&-\320<\364\324L\275G\014\270\274d\020\371\274\242m \273R\357\331<{\364G=\t\343-<s\243\261<)+\030=\255\257y;T\006\333\273%\231\276\274]g\243\274\272<\"=]\233R;\356PZ\275\213g\033=5U\231\273,\222\257\274\332N\210\274\225S\371;O\206Q=\235#,\275\031\363\325:\246\356O<<\221\263\274\000\n\030<\351\010\037\272<\357\235;\335\210W=*\010\371\272D4\302;\251H\245\274\336\375\332<C\001\021\273d\260\020=\245\207B=\021L\002\275\t\210\014=\302\016\030<\361\016U\275\233\212\022=*\220\313<\203\256\033=\227\0203\274\205\367r\273\017Xv;j\340=\275~\0036=\020\3707\275Z\274R=*\2462\275)\276\000=\256b(=\005zE\275\252\323\331\274T\005<\2759B\300;_\372\002=\353\204*\275\317L\274\273\276Y\366<\307|\340\274\005Y\n\275f\231\025\275\337\315k;\303\333\252<\330N\\\275\347\274\247:vqB=\231\361\033=r\355W<\001\306\";\215\361O=!\007\362;j\027u\274\324:\226\274I\345&=\270\322\345\274%J6\274S\265\003\275V1N\275\355\014\036\274\210\322\230<\232\300E\275\017o\331<\246\247(\274?\301\035=}=\"=W,\361\273\322a&<\3511\240<\323\227&\275\313\217\355\273^\"\026\275\034\231\030\272 w\026\275\362\250C=v\266\352:\r\006w<-\257\025\275\226@T\275\264\373-=\223Z\376;\020\177G<\327\244\217<\351S\340<_ \317<w\305\271\274\005?\007\275\0246U<\036\336I=\276f\316<Z\375\024=\332`\346\273Y[%\275\2532O<\247\233\272<<\014,\275\223\007\323;\242J\211\274\327\260\203<R\370T=\177\237\314\274\2618\026\2753\013@\274\352\212\027\275\332*-=0\014\234\274#\004\'=7?(=\220\347\006\275\327!\224;.Y^<Fj\331\273\234\275\022\275\013/k\274n\271\242<\230\313\243\274\201\017\177;4 \255\274\226\263\r\274\320\026\363<\363\177\001=\333+\263\271\213\371X=\"\211l<\356\331\245<\202W\223\274{\242\023\275\005\002@=\204g%=J\350L=f\343 <*A\214\274\232\3552\275\t\373\032\274\320t\265:SG\036\275\007\244y<\t\3519=\225\215\236\274\236kn\274\232+\366\274\277\227^\272?:N=\362\342\325<v\3329=\314\267\023\274m\002#\274\004\261\251\274u\343\344\273\241bN=\204\272J\275\r\0174\275\346\370\000\274\247@9=\360{G\274\032` \275\003vM=:\354\270<\3122#=\356\034H=\375\211\307\274y\210\234\274\2273\034=H\256)\275\314\303\037\275>\237\025\273\300z\024<\035\264Q<\335.4\275Z\2169=\223\306\342<\003\325{\273acP<.\306\230<\310\276\006\275\274\347\355;!\317\353<s~/\275H\265\244\274h\247J==h \275\373(L\275\377{\321\274\247\006q;&H\243\274\344f\003=\272C.\275\376_@\275#\202\223<\351\363\205\274Rr\014=h`\'<\026\233/<\032\262\323\273\314\202l<\215g\314<\\\3128\275\222\217w\274J\"?=,\275h<\215\221\350<\033y\035;\024\277\356;9\375\200<!r\257:fj\236\274d\362\'=\272[\025\275\022q\t\275\326k\276\274>\352\000=\373J@:\033\225\363\274\234\230D\273\021\340\245<\336}\314<0\010\006\275\226\332`\274e\206\256;\310\362\313;\254ZF\275O\303\026\273>\226\022\275\316\254#\275\004\372\001\275n\231\213<;k\017=\304\224\253\274t?,<\212\306\006\275\366\354\247\274\263r7\275\356\342\274\274\003\033\355\274\2561\271\274\321B]=\300\3471=\323\223\'\275\247\337\364\274\335A&=x(#\275\376\305\223\273R\204W=\344J[\275\2025\006=\363c\000=\3702\034;\205\022\251<\317\321\364;P\014\270\274gs[\2749\244 =q\335\022\275\365\023o\274\350\030(=\377\222\211\274y\320\214<\201#7=\366\"Z=\2749J\275\307\363\352;\177\221\315<?\254\021\275\256\206\343< \3576\274P\231\004\273\232\"\004\275\0148\255;\013v\023\275mSE\274fW\371<:\234/\2742\254\323\274\020\257\005<)P/\275\235\274$\275R\332&=\210\350\320\274\313\223\251;Ex<\275\210\316\356\272\303\"\022=TI\243\273\016`a\273\026\321\251\274\211_\322<\263\310\332:;L\306<\275M\013\275\246\031X\274\272\026\217\274\371\372\375:\222\307\337<\234\0174\275p\321\233\274}\362S\275\260fF;sm\026=\275\354\354<\224\2479=\357\343\373\273\033(\262<\246\231Y\274=6\222\274-\024\033=\217\361b:\026\264\227<\370A:\275{z\037\275\233y\210<\017)\251;B^6\275,\346 <q\363\206\274&\336,=\nk\n\274\013\216+<x\314\000\274\322\033\271<\2552\002\274}\331\253\274\233,.=\302\342\236<<\3306=05\271<\361g\027\275\370\240\215<e]a\274\307tO\275\264\320\333\272\312\2642\275h\242\276\274U:\252<\210R[\267\366L\014=\275\\_<\305\252\203<s\303\222:\3035\245<\322\337\023:\343\352h<\332\007K\27445\223\274\361v\025=T3\324<\245\3133=\273!\323<\367\014\237<\022\375J\274\236\235I\275\335\254\215<\315\376\025==6\247<\330_\021\275\351^\261<\212\021\312\273v\244\000\275`v\026\274\200\355\316\274a\224s\273\217\304\234<\242G%\274Ez4\275D]E\275\340\3522\275\307\004T<p N\275\331]\'=\2376\271;\027\000+\275\333\216\274<|H\326:)o\025\275,[S\275\375\3017=!%7\275Ov\251<\377\300\023=\265\312+=\237AD<#\333\360<C-\260\274\257!\360<\226\214U\275m\2670<\214f\330<\304\351@\275\0336\303<\222F\224<\0272Y=U\t\005=\350\223\226\273\251\223\226\274K\275\240\274R8\374<\227\241M\274\014\267\265\274\2469\242<lly\274\373\3429\275\201Q\"<3\372\036<\343\354\322\274q#\003\2753}s<?\002@=d\016\001\272JV=\275W\371\272\274\353N\277\274\261\312\267<j\017\356<-bI\275q\324\033=\212\3645<\356\346\352\274o\016P=A\220\332\274)r[\275\324\3022<;\331-\274wa\226\274x\251\320\272Y\025\212\274\r2\010=4\233\374<\017u\316<\237/\266\274M\353\032<_Y\035=\245\200x\274\222\262\376\274\203,e<\030\312\035=\311\000I\275\007\330\037\275]\311k\274\260\225B\275\221\005\213\274^Y\200\274\220\375J\275)x\206:.S\271<\\pE=R*\220<H/B\275p\224\272<\000\247W\275\242\315W\274a\306G=\320zG\2750\353K<\nJ\325\274\267\2049:y\372\360<8X\025\275F\t\330<\325$F=\304O\366\272\365\354\025\2747\370?=\373\314\026\275M\243\004\275\376\343\035<\255\240I=\177\270\341\274\371O\017=\214\001\362;2$\010;\374\313\330;\364\207H\275xI0\274hrw<\267t+\275v\255\020\273\0105=;\0016\342<P\"\002\274K\002I\275\032B\371<^\221\000\274\022\376\030\275\224\014F\275E\341\"\273\027\352\n<\371\300.=\202\237)\275b}L<N\022\024=Bv\353<p\010\007=\310zI\275e\247(;\302\220\203\274\374-1\275p\215\274<\324a\227;;\0225\274\223\315D\275$\214\211\274\344[\354\2746?\337<%\276S\275:\210];\332\347Y<\217#?=\376\272\345\2744\206Y=X2G=\252\230S\273\032\240<\275\r\373\365\274\215\014D=Wi\265;\177\321\\\275_y\005=T\255:=\233\377\0169\352\032\351\274\224\013\216\274!xB\274n\027\t=\221\241\030\2747\264\021=U~&<>\367\031<\003\342\037\275\017fE=s\002o\274.\2427\274\333\377\367\273\2643(=\036\336\213\274\003^*\274o&\'=8;*<\314G\306\273{\314\375\274\"\013\032=0\017!\274\302=,=\007\334`<\333UL<a\274\234\273\322\266\000=\2178\003=\213\214\007\2723\r\006;_)E=\202\n~\274\337\374\216;)\303Y=\243\233\256\274X\\\213\274\203\371N\275\224\265*=\344\0141\275\356\016\000<\237\"\274\273\364\323\245\274EqR\275\\\272\263\274\010.\344\274\246\0263\275\261\335F<S7\037=\002r\'\274M\323\354\273\222\0066=\263\225\020=*\372 =\023\025D\275\030\032\203\274 \234\017\275]Q\001\274\340\3057=\303\026#=\033\351\245;&\010/=I\375P\275\365[V<;\245\035\275(_\333<\366I\241\274\330\346e<\013`\302;)[\254\274\nZ5\275\247-\216\274~\032B\275\272\366\256<(\365\270</-\r\275QE\335<\247\350u\274\276g\347;\357\217\031=1S6\275\277\n\210<sUD\275E\010\256\274\237)\212<\331Y\005<\311\376\004\275\316O\036\275e\343\\\275\326J!<\005G\362\274\260)M=\271\t)=0\n\270<WV\031=\025D8\274\314\'\030\275*\273\220;\234H\262\274*\321Y\275\215\322\251\274q\203\321<\332m\232\274\013u\275\274\250(\320\274\211\020\033=4\r\003\275JaW=\034\3502\275\014\312C=\263\271\271\274(\265\024\275ep\330\273\365O\235<\363\264x\273\341(\370\274\005\310\276<\025z\300<\345\0305<\\\273\217\274\036F\351<\302\2333\275%Z\213\274u\253\345<\005\377\206\274\362\273,\275\217\3623\275\270\375\022=S\256\"=)\020\'\275Q\270\334<\221 \232\274r\320\373\272\227\257\201\273ZvN\275\326\342d\273\256\026/\275\352\'B=\334@\373\274xl><\222G<<*~1\275{U\t=\374\374H\274DP]\274\036\225\306<$\310\232<\270-\017=\337Zc\274\326C\330\274L4T<\231+Z\275\354i\304<\205\243\232<o \214\273h\337\365<\370\t\277<\023g-=W\364\375\274u\304\t;\316\200k\274\254\256\233\274\334aB<\002\025:=~)\016\275\316F$=:\037\030<\2635\034;\234\025\231<\274\256\366<8\276\340\274i\014\275\274\n\336\204\274\373\020E\2753Z*=\203\362-\275\270\203P\273\241\242\327<Zy5\275K\002\304\274\241~\322\274Ygb\2741w\324\274\3676E\274W|\211;\345\240\361<\000\006O\275\267{\256;\256.(\275\020\223\222\274\004Rf\273[\310\000\275\025\342(\275\371/\t=\230\n\005\275\205p.\275\024\325\230\274\224\347[=\274\204Y=\275mZ<\222k(=\035\212\360<wJW=\210l\023=IJZ\275U60=]\366\r=*\335\224\274\370\271?\275\214?*\274\347\213\232\2746\204\027<ro\356\273k\222?\275\210}\027\275JUV\275\rT\216<\350\263\016\2746\366\353\274\343\3238=+\367\t\274 \302E\267\205\270\227\274Y,\214<\305H\335\274\210R\022\275\342\234?\275\017\250z<\223\264\205<C\017\363<\271\"*\275\352\r\263<\206u.=.K6=\323R\366\274\355+\035\2721\267\244\274\251\376\004\275Q\246\320;\323\274\364\274\326\213\000\275\226\376\364;\373\022C=\271O==\030\022\021=\020h=\275\312\256/\275\343?A=\227\235\027\275xX\\=\266\260[=1^\316\274\2774\206\273\032\027L;G$\022\275\324n\013=\270\275\343\274AKX=\275\234\253<\362\r\272\274f\005\021=dP\235<J\023P=\017\341\256<tp0=\244\">\275\022\204\377\273~\356W=\216\322\271\274k\253\306\273\242T-\274\226g\357\274HO;\275\t\333\343\274\326\221\n\275\177\342\340\274$\373\367<\350T\025<I\2006\275\225\331\352<H\337)=\212\022\314<-\256\t<y\320\340\274jK\225\274\370~/\275\211*\017=\000>L=\270\260!\275J\204\001\275\267\354\226\274*h\345<T\005*=\2379\325\274A\351\314;\031g\214\274\017\342\366\274X\343\'\275\242iT=\t\321\344\274\304\235,\274\367\303\327<\277\276\233\273E\n\331<\264\"\026=9\314\021=\323*\377<m\325\264\274\264\377\252;\215}\025\275\036\027I\275\023k\210<\014\226u;{[\000\274\307\035N\275\016\360\367\274/2-<\255\022\177<L(D\2756\340\025\275\230\231Y\274G\021M\275\021\000)\275/\314P\275v\017P=\251\343b<\227?<<\220\330\363;\':\322\274T!9\275\324\031\363<\241\330\214\274\203h\016=\203\030\\<\250F\007;\36681\275\327\306\024=\022\201\030=\330\234\230\274p\204\261\274g\236h\273/\017U\275\2179\263\274\"7\360<\232\236)=d\264\225;\352\236H=\213t\034=4\030\333<\336.\337\274\022K\325\274\277\260Z\275}<\224<\236}M\274e\244\364</\256R\275\007\356\223<\014\037A=*\355\305<\306\036q<S|\006=\366\231|\274\214\315N=Kq\244<\331\263+=\010By\274J\217\030=\304\271Y=4\377\"\275\343H\271\274\006\346\016=\271\'\367<\301y\002\274\266?\021=\246n1=C\370M\275\211\035\177\271\300\354p\274mx\265;X\3755\275\370\342\307\273\323%\343\274\241\"\205;\274|\201\273V\213\245\272/\360\036\275\205 \033\274\324*\037=\366\005\035=\363\362\023=\200\245\266;8\236W\275\303\225\006\275\245P?=\217Y\020\275\363 \365\273o7~<\036\305\355<@\340\\=\352\351\276<\227U`;\314\271#\275hF<=_\275\206\274\302\004\355<\303R\255\274.K\244<r\354H\275\025\312\001\275\271\034\014\275\253$\270<\220f\030\275r\316\270\274\266`U\275\340\220\325\274\301A\016\275\336\334\365<\365jh:\355\244\027<\214\317\"\275\200W\023\275>\221,=\331\'\360<\254\013 =\'\000\016\275\3000\235<_\016\030<]\342\321<;\243\020\274k\0309=\277\n\307<\371\316\236<\014J7=\224\355\233<\214Q\330\274\211Y\232<F\330\347\274\036\252#=\316k-;\234\375\344\273\005\250)<\024W\310<\014\004\360;dz\023\275\271\234\304;\226y.\275\304\363\242\274iT\030=q\350\025=\251\356=;5\365\311\274\321\022\013\275}\234Z=\t\341?<\244\211\r\275\224Q\036=V\213\222\274\035=\316<\235\313j\274v\336!=%\206\001<[AU\275:+\037\275\370\362\223<\323\355\024\2757\313R\275\231<i;%\346\365\274\006<#\274\022\232\357<A.\275;y\255S;\226\316O\274Z{\025<]f\257<y\022\026<\366\224\016=}z\276\273WI\036=A8$=\232OA=\214\030\007<?(\263;\317\234\304<\352h\277\274\314\t\r=\237\344u<\366t.\275\325ZS=\373\335\037=\243\ns;\027d\330\273\245\324\303\274\004\365E=X\366\226<(n\003\2732JF\274\365\350\360\274]\203\027=\353\301J<\252_\275\272)\302D\275\222\315F=\006lC<\3624Q\272\3041\027=\200\324\272;\310\3259\275w\347\n=+4/=\252\350\305\274\331#\234;\341\3542\275G\204-\275V\250u\273\243\345[<mfz\272N\003\371\274\316\340\003\275\004\251\252<\0048(\275\300\244*=\306\0303<]pD\274\243U\352\274L\271\031=\2061\353;\244\333K=\275\244 =\275\272J=\210\261W\275\3407\377;\347H\t=x&&<\"\207|<\374\224\232<\236\016[\275\324\025Y=\035/\255\2745\254\'=\310F\025\275F\026G=\014\033\224<\362\356\251<P\224\305\274\213\263J\275t\377%\275\243\221\202\274\ra\254:\212\375\'\272\007s\262\274q/\247<\373\247\036\275\222A$\274\3411\001=\005\rA=~\304\027\275UDA=0S\323;\372\306/\275\004\201Z=E@\033=GT2<\234\266\n\275\200[*\274\310v\016\275\261j]\274\217\037<\273\0059[\275\215\343\267<\223\276\370\274\320Z\205\274\307S4\274\020\210\237<\035\236@\275,\277\233\274\0106\207\274\243\352\344\2749\337\020\275l9\023<?y\241<x\370\242<\354\302R=\223Q\204\274ILY\275\256-\260<z\244\003=\317u*\273EZ\234\272B.>=\r\324\036\274\017y\200;\204\316\253<{T5=\361\303 \275\333\201?\275G\350%=\007\255C<\203e\365<s\260\230;,\200D=!,W=W\202\312<\313\034\020<_\362\\\275O`z:\346\336\037==\251K\275+\274*\274\264\356\336:+l\\<y{X\275f\344\034\275I\271\231\274\315x9=\266L.=$\334\022=\227\030$;\245oa\273\276\357E<\364w\231;\246\031\341<\002\277\034=\221\334\243<O\372@=\243\220\216<\270\n\205<!\220\355;3n\t=g\023\223;4\350M==V \275?\260)=\232\025d<\305\236\263;e`\033=\363Z(\274\r>]\274-\246\211<\353\002\300;\026\342\014\275\366\231#\274\334r\234<\346\026\017\274\377wE<\247\321X=\236\234X=Er\013=\223\272\002=\215\"\370<]\366g<\275\250i<\263>\243\274j\226\374\273AZ\226\274\030)Z=>\177\005\2749\\U=SNV=\037>\225\274\363\217M<\335\226]\275\243@f<;\203\037\275\010\351\301\274\243\302W=m\2674\275y\2135=E\274\024\275a\243B\275\274\364B\275\234\200E=\220$T=l7Q\273\267\0260=\325T\010\275hB\316\274\356\3266<k\"\332\274\3734\260\2748\274v<\247\203&\273$\005\201\274h)\227\274\326\354M=A\240\227\271\361W\367\274\356T\355\274\255&\026\275\rr4\274w\037!\275<O;\274\375}\"=\364\0015\275Y\306\023\275\030\006\241<YI,\275a\340\257\273\024s+=#\232\260\274\216\263\321\274\3473\"<\035\001\203;a\257\223\274\322\3451=\222\031\021\273z\300\253<\006|W\275\372MU\275\244\256\225<8\233\036=\003\017\023=\243\302\201;n\347\013\275\347,\357<\222)C=J\303$\274;\016K\275\310\202L\275\033\202\032\275T\242\312\274\212\200\363<\243\373O\274\202Fp\274r?H\275\016\374\203<A}\276<\330.\250<\004K\200:%\375P=\230eF<i\366\215\271\332\017\0269#\226\004\273\204\021\376\274\370T\333\274\245v\217\274\231\021\"\275\275\256\375\274r\317[\275g\212\313<\222\000N\275\373\026\320\274J\331F<\341\376\375\274\212;\"\275\2702\022;\300p\032;\264\325\230\274\226\241e\274\023\206Y\275\211\266\016\275V\257\244\274\207X4=\2575(\275\037a\3019~|7\275\256\304-=OfB\275\2232+=5\332F=\333K\212;8\370\256\274\034cC\275A\371<\275\217\316O=u\n\033=)\224/=\311\212\"\275P_%\2755c\333;\300C\026\274\227\3461;\017\244\315\274\303\273/\275\271ca\274m\274\006<\347\221\200\273\274qP\275I\231V=4\225@=\254\033/=\373\304\010=\221\212\017=B0\323\274^\032\306<\2732\310\273\026DO=\310\364/\275\231\226\'<J\264Z\275)KN=bK$=\370\367\361<\246D\261\274Ald;\034\n=\275\220\003\207\274\177\000.=s\025\224<\237\246J=\025|2\275]\311\032=\311\002\233<\356\033\'=#Zi<\373f\273\272k\251\255\274\027\020n<s\3477=\231\025!\2756\201<=o\260\355\274\277\255\317<KL\371<FPI<L\343C\274\0235\210\274\007.\325<\036\037\000\273\351\341Q=\2754(<yC*<\010\201\333\274h/\001=^\334\322\274`\023\275<d\3662=t(N\274W\254\256\273\344\277\260<\303eF=\326\352\007<\220\312\t=\202\321V=\024fW=\025\307T\275\367\244\014=\205\231H\274\010k\342\274\362\231`\274o\346\347<2U\210:\246)X=\330\3230=g#E\275\337N\303<\264\226\336\274\030|\357\274\242\366\240<\264?1\274\020\'\033=j\277\234;\031G\237\274Hx\361\274Q7\003\274\3534)\273\301\203#=\026\320\210<,\342C\275\013s\276<\355QJ\275\217\304D\275\273\002X\275\004\321!\275\315eM\273\326\324E\275\315\301\201\2742\232\216<!:\002\275\031H\'\275\033%\027\2753<\357<+\022X=\024\363\222;\\\355\256<\022\351\026<\266iW\274\233\013@=\350\254.\275\263\2117\275\033\241\030<\016\021\357<]Q\313\274\200A\020=\342\033\r=\227\234\363\274\367eX\273m\325\013\275\376:\361\274\017\0037=\020\247M\275\226<Q=~\345\334\274P)P=h\323\021=h\322\321\274\235\205\340<\261\234\267\273\275\355\026=.\026\274\274\006qj;mR?=\246\366.\275\216\300\252<\3645\362\274\311\340!\275&\005\346\273W:\276<Lv\005\275;>\2157I\275\205\274&=\377\274\026\311%\275\026\2254<|\267\200\274$\352J<<\366\367<5Q\232<\233^\n=\336\354\242\274H\033\034<\336z\001=\214mG\275\220\035L=\275Y7<\224\2137\275>m\222\274?\337\263\273s\237\036:\262\357\303\274|??\275\213\252*=\0219.\275>\242T<\004}\200\274\263\003\207<\020\335L\275Dy\260<\350\005\360\274\252\017\212<\3442\007<\205^B\275m\"\352<}U\337\274\216\004<\275\254s\007\275\346l\312<\25780<\304\203\024\275\313\375\366\274!\273X\275\215:q\274\377\"S\275\010u2=\361H\277\274\316\221Y\274\232\224\036;m*\223\274\302\201*\275\262\205\365<\223\216\"=\276\324e\274\3550\273<<\365\231<\336\304R=U\2166=\203\337>\275\362\262\334<4tY\275\265wS=\031Z\005<\233\224\235;\222|\025=\322\2741\275U\302\342;\237c\337\274\346\"\332\273\n\027-\275\346<\033<\331\303==\377\311\302<\034\020Y=\345;3\275\262\272\034<\217K\';\222\266\320;\000\302\362\274\276\267\004<\3217*\275:\341\007\272\374\316\226\273z\235\037\275\261\335\362<j\236+\274C\027;\275\230\023Y=\2249\337\274\2266G\274EU\315<G\006\t\275{\333\341<I\256_<\204\365\360\274!\177\254\273g\016<\271^\250$=H\216T<b\203?\275\322\301\253\274q\376$\275\361?\001=\177e\n=\274\312\254\2745 3=\322\003c\274H\020(\2740\367\231<\303\300\211\274\2672\000=\261\247\227<\217\345\000=d\312*\275Q;\027<\'\241m;\352R\252<\0349$\275u\205\037\275IO2<\321\324+=\'\334L=\034\332\275\274\322\361\361\274\264\251\274\274\350\266c\274\324`L\275\336\360\014=T\341J\274&\355\347\274\\i\034\275\215f\260;\361\373\200\274\327\267$\275<\260\204<h\357~;T\304\306\274\265dA:\367y/=\364\005\020\274\360\246\177\274\211\021\255<!A:\2756\025\022=f\276E\275\240\255\243<\367\337\341\273\260\177\256<zk\027\275\034\317\037\275n\361\232<\023\"P={0\342\273\270\200\301<\014N\234<\026u\310\274\330x@=\266\016\351<g\372\343<\323\334W=\206\035\347<Bt\260\274#\200\267\274P\356\014<L\256\027\275#\315D=\242\035;\275\313i#=\335U~;\246\\\022\274\356_M\275\010\000\201;\244J\357\274O!\334<Ocl\2744\240?\275\263\350\236\273\326\3576=\244\\\361<\223!\220<\017\213\272\274\321Kf\274(\372L<\365nR\274\330\2028\274e\0377\274\236x\205<\225H\036=\022j\271<<\222z\274\333\215A=\004\200w\272\363\303&\275\374\214\202\273\314\372\303;a<+\274\373/\277<\332\022\251\274\373\347\332\274`S\002=\035\t3\275\306\030G\274\361^\023=\2015\000=}\003M=\265\300\022\275hz\362\274\364S=\275\242\356E=y~Y=t$[\273p\351\232\274\245%\037\275F\366\363;\336g\034\275\267\303\204<x\3634=5i\025=\243\322\327<\"^\001\275\300s\020=\201\330e<\203g1=\203D\355\273K\372%\275\211.H<fRF=\230\210\211\274\242\022\245<j\224\340\274g\352\240:\322A\266;xO\262<\255\230\235\272>+\305\274\032y\277<\321\237\023\275=\351@\274\345\021\205\272\010\233U=\313\350\216<\016\345,\275\322\210\205;\265\272 \275\366\2560\275Z\220;=\267\207\024\275\341\2633\275K#1\275+K\331\274wP\000=\337\250\364<\020\344-=NP\222\274\360\216\215\274\0226\347<\273-I\275\360\014\r<\374\006\005=\347\200X<\020\364\226\274\273\231\363\274\346|]\2755\303\206;\r6R=\260O.=\230\260\020=\216\021?<\210ca:\345=\345\274\037\330,= \235\341\274m4\"<\020R!\275{\223W=\211\270\'=\276\306F\275\305\347\266\274\222\302\033\275\315\324\370\2741\275`<\232\325.\275\236\363@<\322\'\020\275\032wD\275\327\200M=\023\022\216<\223b\027\275\326\350\037\275]Q\036\275c>\206;%sT\275\001\374\367\273\264`\247<JLJ\275\t\331\214\273\336\274Y\274E\245\034=Sx\273<\n\r\014<B\022+\275\237_\301;\216\220\354<j\017\300\274C4\005=\300|\206\274\303\t\246<\236\330\375\274\006\277\335\274\246-<\274u\366;\275-\3216\275\374\225M\275\370\315\345<\030\013n<#\314[\273\005\325\036=\220\245k\273\241\2003=\230\220\200<\013}\n\275\265z+=\022J\274<\335\3168\271}\210\014\275\350\257l;nl\023=\020\263T=\'F\216<\341\017\263;t\307L=o\251\353<\276\261\'\275\261\022\343\273\303\2310\275\273p7<\033I\034=\211\333U\275\005\270\021=\247V\027=\220\021\000=\030\313*=:\265\026\274i\2673<\315M\006\273\"\252\241<\321\224\020\275\027U\302<B\340/=W\367\026\275E+K\275\003o\020\275\276\223\250\274\025A\017=\326\262\005\275\3148\357\274A\204\251\274\376\334 \275\373h\022<^\252\020\275u\002\365<_\204&=\352.\212\274\006\344O=\034\221\016=\367w\317<\363\245,\275\"\2366\275t\2505=\232\tJ=\304F\361<\273\374\263\274z\3327\275\225\022\357\274\360+\377\274\222\225N=\205!\253<E\177\233<\257d\341<S\274H\275M\271\024<P2S\275%\251\300<\246x):n\306\264\274\264\266\n=z\013i9\203\002\'<y\260\025=n\263M\275J\345X<L2:\273f\353\302<\023\0252=\001\315v<\255\344\224\274\032\257\031:\214\000\234\2740KJ=\224P:\275\210]Z=\364\301\340<Oz\241<lq\024=\236[\362<\253\373\027;\016\227\362\2744\234!=\036\222\312\274\027\007.\275a0F=!-\306<\266_P<`w\017;\2268\363<]U\322<\372\2537\273v\227\315<$\024\253;\376F\307<\344\221\256<\266\260)=\205)8=Wd>\274\036\276\236\274\370Z\035=\216o6\275\021\222&\275\364)\006\275\205\271<<\301\205(=?\207*\275\355\365\344<}\313,<g\224U=\367\240G\275$\317$=Y\301?=\\\362+=\375\306\006\2753\244\025\275\343\275V\275\337\221\034\275S\245\003\275y\362\247;@\035Q\275\"\306S\274\001\2379<\302\323t\274\007\213(\274\215SS=bP\321\274-\312\014=\341h\233\2748x\007<\032\306\376\274\323(\224<Z\007\t\275\304MO=\343\013\330:\347\205\r\273\375\230\346<\212,?=Jb\331<\2578>=(W\034\275f\023<=\207\245V\274\260N\022\275,\"\t\275\023\256\274<\324L\240\271\262\n,\275k\270\024=\\:%=\232\377O\275\273\341T<_Y\006<\201\345A\274\272\300\226\274 \233@=\310\321\264\274\246\326\022=\337gy\274\327`\037\275\347\304\225<\270<D\275\307>\007=\327\3715<\234\332$=v\262\242\274\353;s\273\271J\n=\2639\251\274d%U\275\370\375\343<6D\002=\006\2636\275v\t\002\274\216\371\004\275[^\225\274\300_l<t3\310:\253T\336\274\2523\276\274I\311<\275\004\272\002<@\273E\274\222\205L\2759 !<0\356\t=\344!\035=\366e\020\275\213\000\r\275\261\240\274<\371&\003\275\377\013#\275\330vM=\256\323Z=_\213o\274\n\375Y=\265*\243\274\315\301F=\037\314.<%\375\033=8\360\032=\225R\005=\323\330E<\337sA=a\021\013=\340\017\315<\023\355\242<\233.F\275S\"Z=\214\275\352\274 @A=\n\366%\273u\205;\2753\0010\275dlH=\362P\263\274\274\013\003\274Oq\003={P\004<1\023\372<\303L\027=u\"l\274\237/K\275\021P\204<\373\327\364<\346\222\035\275\216Y,\275\373\264G\275\246Q(=V\367\'\275\277\262\035\274hm\332\272\334<>=\237\221\022=O\032>\275\203\201N\2754\275\224:\337\312Y\274r1B\275\2269\020\274r\377?=dv\025;\201jD=Y\003H\274Car\274\267^\335<\241\0348=\235;\023\275\324\251\244<J\000\005\275\327\312\341<\264\207O<\362v\313\274#7\363\274R\352\267;\341\305\n=Y\036k\274\240\325\312\273>\345\311\274g\251\361<\222\023\247\274\305\252L\275\002\236\366;]\026\021\275a\270\243\274[\021\215\273$\237S=\\\250U=$\216\021\275\331:\320\273\366y\326\274\034;/\275\302O\315;\364\324\315<\271^\023=\265xN;\226WQ=\350\321\354\274\2206\005\275i\257\023=\3746?=:\234\032\274\037\205\323\274\206\330\302\274Bu\316\273\342T\255<\224\367Y=\026\303\022<\352\rY=\355c\215\274O\212M\275\214\273H\273V\377\314\274\327\246\217\274\000\232\326\274k\2316\274\232\177\357\274\025\225\266<\200F\333<\360\3520<\216\n\366\274\"\2356=\305\377D\274\260\241R\275\265D\325<\321\026/<\320.r<\035\023\201\273\031@B=\025o\\=\360=\270<!u\206\274\352\366M=zY\304;9V\330<\033sP\275\r\225\002\275)\343%=\004\336\233\272\225\3238=\357\307\027\275\323\375+=\3263/\275yF)=\331\207J=\201r0\275<\235F\275\017V\004\275\217\340\037\275\233\027\200<\361\000\027=\277\014\223\274TgR\275\266\306\344\274K\244\024\275\261\035.<\256\205\373<\223\003\366\274\276\247z\274\\\2232\274\257\n\026=\255\301\300<\013\354\363<\303\372R\275-\311z\274\331\235\200\274\337\017\250<\330\016\315<V\216+\275o\3327\275\241NR=r\237\311<\2504\372\273)RJ\2755\254\003\275F\207A<\271\3372=\022\020\004\275,\332t\274x#0\275\330\2714=^\200\262\274 \322\r\273F\307[=\03142\275\205\260\023\275\276d\034\275vw-<\232_\267<\310\340\323\273\233\317\246<\217\247\201<\305\365\213\274\332\027\t=\273\301\337<O\035\036\275&T\361\273\354\326\'<\351\3633\274\225\225\344\274\373q\030\275\2749M\274\014y6=\264\376\002<\336\245[\274V\220\321\274\2476\361<VNe<t\251\243\273K\016\242\274Lp\267\274Qz\341;4Uc<\320V\334\274\376U\256\274\243\2316=\265\227\234\273\r\255X;\221\023B=\223\n\334<\200\030M= \346\371<\325\244\020=\307\032M\275q\266T\275\0334E=\333\032\374\274#d%\275\273\016\362;B\036\003<\272,!\275\342g\035\273\307i\340\273\2235*\275\261\250\306\274\336`\007=\275!u\273\\\005\r\2758\334\363\274\274\337\340\274\350^u\274\303u\331\273s\374?\274y\232l<j\017\273;\\\252\320<\357H\034\275>\313\023=\361\375P\275T\230\202\274\000\301\021=\372\312\001\274\303\366\366\272\034\024\325\274\033\005\036\275P\260J\275\202n\023=h\013R\275O.<\275\260}\270<\350\225\351\273.\244\211:\307@\260\273\200\253R=\231\246\247\274T\253Q\272\017Q\337;m\263\335\274\250C\222\274\245\277\004\275C\265\326<\275\365\331\274,\t\007<\302\334\'<-\236\226:\324\356\202\273\325Z\345<\036\034\036\275\263\347\006=$!\\\275\002\031\255\274\210{\t\273\344!?\274\310\353I</\265\240<\210X\005<\370U\033\275\225\233\241\273i\246N=\007\200B\274\'\265\003\275\204\2203\275\002D\\=\212*A\275\023\006\327\273\\\211<\274>)\207\273\r\243\037\272\263\003\025=}p\020\275\273\371\r\275\244\322\206<\330\375c<LC/<\367\026\246\273\372\016]\275\020\367\017\275T\3234\275_\ru<\205\024\322\274\370<D\275y\201P\273~7\200\272\350x\036=\362\356\017\275\247\302\035<\227\271U\275\247\223\361\274-x9=\350(!\273 \361/\275.S\226<\234\344V=uR!=\323\t\223\274+\026\351;+d!=\223\0209\275k\227A<\2000\310<\320\267\033\275Q)\\\274\201\257\2419x0\351;\212\362k;\213\013\224<\321\343\005<\305\271K=\346\304\"\273c\266G=w\253\000=Q\206\310\274\303\n\022=\224/\214<N\213\256<\016\355\225\274\352|\034=\264+3=\362\032\r=6\013\273\272NsH=\351_\023\2754 Z\275kp\216<x~\014=a\325\311<8\006z\272\320\300\205\274\324\265\231\274\331\3639=\210\213\331\274\357\315\205;:i\350\273=\226e<\351K\361<\251\231\227\273P\355p\274\002i\031\275\334\3065\274\\\211\002=,\365-\275;\372\016<\341\331\037=\234\252\013\274\027\215,\275\225\3635=>a\375\274\002\255\217\273\\\262\233<\361\204\024=\267\256\022\2752M\024=\373g\227\274>l\315<\030\n0\275\231\254x<\033\260C\275\361\363\335\274\030\000J=\356\357\353\274\2621\227<\324\010\037=t4\206;\363p3\274\303\253\362\272\247\313\353:\375\200\202<\316\0059=fV\020=\322\327Z\275^\300\"\275V\314\016:1V\020\275\220\3341=\277\205\024=\260\313\271\274\017_\001\273\365\317V=9\007\352\274~\327\002;\351[\033\275\230\234!<\216\2717=\201\324\t\275\320\rB=\007\216\273<66\243\274\'\245\332<\226\002Y<\353c\220<\350S[\275\345\225w\274\303\n%\2755\222\n\275\243\0013\275V\026\222\274\333\251\004\275\374\320\352\274\270#\021=\010v1\274\002lP\273\320\225\337\274\250\233z;R\tY=\013a\270\274\376\331\343\274\333\\Y\274\212\t\241\274\213\262D=l\275\035\275\326\375Q\274O\320==G\306\302\274\316\265\030\275E\317\006\274\313\304S\275\260\247\001=\006\305\374\274p\340\'<\203\3216:8\274\026<13\245\274j\021\350<\231\250\360\274\252O?\275c{/\275in\220<b^E=5\272\264\274\255\0148<\001\356C=\277\266\211\274<\\\014\275Q\257\274<H\277\241;\277a\336\274\036\005\037\275\001H\t=\016b\246<IXB\275\002\204\254<s\327\222\273\315\332E=\n\255Q=\300\364_\274\227\026\224</\2433=\222\210G=\371\004\256\274C\222H=\234\223E\275R\275\311\273\362^\037<\311r\222\2738,\002\275\356x=\275x\335\347\273\016+\204<z\204\t<\272\263\014<\234}5=\261\252\236\274\252\342\234:I\3564=\214*\030\274\212j\234\274\336t\345<\326}\365\272U\260&=\026\224B\275`\r\256;`\2200=\220q{\274\370\230\244\271\277\3667<-\261*\274<\207J<\377\351\021\275\370\221\331\274\214\273U=>\210\2278\361\237\252<9\327#\275\214\230B\275\264\005h\274\r\037\375\273\277,(\275\256S\223<|\323\307\274\021\3327=\032\r\177;\266\274\036\275\265}A=\323\260\355\274\320\006\321\274w\337v\274\026\253\220\273{5\321<\366\246%\275\037\241Q\274\001z\003\275iWH\275\335|\033\275aT\037=\005|\037\275k\361\303\272\'k,\273\221\272G=\031\373[<D-d;G\343\226<2W\343<F\2109=\337\'\317\274\344\322>\275\331\034\024\274\013i*=\244V\034\275&\253\347\272=\211\265;\247\3130=\026\t\037=fT5=.&U\275N\330\371;\'\332\316\273\027\340\324\273\345\244\346:\277oN=%\0161=\2670\270<\206\274\355<\206\221\027\275~M;=\236\312\333\274\031\036\027\275\001\245\';\035\026B=%P<\275\232+W\274\n=p\2749\3208=\313\031\252<\240\000\035=\034E&\275\316y\034=k\327^\274B+\215\2744i\230<\353\201\277:\331\274\337<B\313,\275\237)\035=`\216\222<\365\377\371;\203J\'=\'k\014;W\233I\273)\303T=\310: \275\272.\025=\271\032\000\275z\252\350\274`a\377\274(\371<=kU\246<\361-\361\274(K\334\274\241\267\354\274\262\033G=!\302K\275\363\230\361\274q\247\334\274\\\300\\\275\333*\257:m0\036=}J\035\274\034&5=\006M\t\275;\215\022\275\273\036\234;\333P\010=\032O\314:Q\261\220<\003\260+\275\323aH\275n\\Z=\333e\033\275\202\220\033\275n\003\002=]\3375=\t\353\021\275\246w!=\226\305\314\274\026\373E\275\033\0270=\231\031M<\332_F\275\251\r\373\274\311\022\336\274Ci\377<\327H\213\274\033\240h\274^Z-=\330o\324<x\030N=`\003.<\224\244U\274\213\314\\\274\2351\366\273\263\223S=B\tX=&g\022\274A^\266\274\3374\022\275/\372\032=\334H\256:\036\231\025\275\304\233L=\361\013B\275,\366\007=\354\270\215\273a\370$\275\300\003]<\000\375o\273\237\225O<\356\200\265;@p\027<\270\301U\274\251\371\316\274\306i\317\274p+\037\275\370\2662\275\342)\244\273^R\\=\224\357\023\274\236p\360;\332\262:\275\237G==\224\037<\2756\357\310\274-\276 ;R.[<\370\\2\2752\223\013=N\267a\274\244\033\026=Y\'\337<!J0\275\333\237S\275At\233\273z\004M\274l\215\332<WyW=D8:=\247\352N=\234\274(\273\347\312\357<\247\016\365\274\322\216Z\275$\217N=\0235\262;\232\222&=\205\2224=U\232\023=gR\310<\177\337x<\005W\325<,y\274<\356j+=\223\236\003\275i\365Z=i\337\366\274\257C\365;!\326s<2t\016\275rI[\274\214\200/\275?\302\374\274.0X:\356DF\275\344\332\257\274\230oG\275_\313\373<\374_\010=^\376=<\2074C\275\020\244\376<\245o\272\274\314U\000;\327A\325\274\0022!=\300\312Y\274\235n\254;\271\320A\275\334\003\220\273\033\311\274\274\260\370\t\274\377\201O=|c\217<\013\000\223<~c\266\272\217\335\365\274\347S8<$d\302\274z\3257\274\253\207\245\274\004o\020=\335\224L\275,\234:\273\3120!==\014E=fZK\275~\207\030=\372\227\270<3\262\034=\326\027\264<\353\235>=\376\2033<R\317\017;KG\025=\031F\376\274LO\223\274u\035A;\320k\301\274G\207K=oi%;\031C\347\272p\342\035\274`n\364\274\200Tr:\321H\265\274\0068?=\342\371\220\274\275lo\274\374\311P=\310\010^\273+v\333<\270\236\341\274\327x\210\274\212\3758\274\303\205-\275\372\306\'=_\213\231\274\361K1\275$D\305<E%R\273m\3208;t\224\261\274\006J\234<\252\324o\272\177,+;\020\306,<\324\273\367<\201\343\272\272!!\306\274\364\356 \275k\324\013<Y\225\007;\372\366,=n\024\343\273=\020*=\346\273\271\274\363\334\307\273\223\342Y=\\\366\314\274\006\304\n\275\263\347&\2750M\203\274\016\277\326<H\263V=\264\\&=\"\225\031\274&\253E\275\030Y9\275\023\224\244<\013r\022\275\000<\371\273U\367\237\274k\300y;\037\265R=k\247\305\274)\213\337\272\030\307==\357a\327<\335I\n\275J\226\032\274\024&\205\274*\231+\275b\322X:\027\017\354\2740\316\201\274\276\306X<?#\353<\371 a\274X\221<<\221\275\262<\317\310\210<\366\033\367\274\302\360\"<\217\003\364<\370\364\001=\216\334!=y\274\022=\315\354\211\273\352\205\002\275\025)\344\274KBL\273\210\333\370\274V3.<RO\022=?Z\024=\235#\003\275\021\006\331<\303G\247\274\325\236\024\275(\0317=yw\365<\305I*<\275\367R\275g\241p<\3342!=\0370\026\274}\254}<x\201N=y]\261\274\364\211k\274\377\234%=\206\305\030<\232\222==\020\220a<\204\200P=~o/\275\334J&\275\035\003\256\274\325\002 :\321>O:\351\220\001=\231t\362\274\331\\#<J\207\323\274\220|B=\003x\240<l\272A=\020kU=W\311\304\274\253l6=\266\311\217<\221>\201;\331\240I=\217\354B\274]\340\003\275~hE;F\246\035=qM\251\274\210\006H=\374\262N\275>B\\=\207\313\014=4\215\024=\261\236G=\030\010\020=)\251!=\034Dv<\275\212\024; \304\334\273\024j\235\274\300\312*=\256A\261;\307\346f\274~\3454=\273\202\255\273\346\031{\274\214\303?\275\345\245&=.I\r\275\302\021]\275\201\277\220<ti\324<\300X8\275\252\014\243\274`V1=44M<,\3128=\376\266\'\275=C\372<\206\203\326:s\320\303\270\274dB=\355\202\314<\205f\205<\266\3538=}\312\240\274t\221b\274>\024;=h\006K<\316\360P=g\321\025=\rY\352\272F(\007\275\252\036\224<\360\370q\274:C\363<\243\224\347\274\324\233U=y\014\320;\036\007N= \305\240;#\202\022\274_S\252<VS\235\273>%\034=\027\007\321<\032\206\376\273EZc;E\003*=\n\325\2539\024\016T\275\203\337@\275\333?\312<\206\200\031\274\022\020\024=\355*\024=\355(\253<\2574V=\376\2060<P\241-=\226\225(=)\366\353<\210)Y=\312n:\275\365\250\337<\276\317\364<\314\266\034\274\022\'\277\274\347\322$9\214\303\242\274\377:\010\275x\305.=*#+\275^J^;\236s!\275\261\304\235<\250B\206\274\242\353\031\273g;\223<\335^P<\265\352\222\267\005\215\263;\327\365.\275h\262D<]\260\033=\207`\030\275<\025 \275\273\363(\275\006U\036\274]\203\216\272.HB\275\203R\263\274@\ts<\233<P\274\205UD=~\313\037<\0272\007\275<Xt\27446==\350-\013=\264\031\373\274\334B=\275\2006S\275\277R\265\274\241q5\274o\205Q;\275\207\016\275V@0=\267\'\315<\241\324*\274\244,u\274\311\260F=\\\375:\275\362l\343:\023\262\247<\336[\023\275\340Y\336\274\264.\204\274\375)T\275.|\222;4\022\302\274G\313+\275n{a<\300~\340\274\203;\351\273\340\242\321<\016B\224:\304\324\372\273\311B,\275\016d2\2755y\025=\362\256\031=\334\222\221\274\305s8<\027;\"\274\250\006Y=\207sN=\371\361\341<\205\212\215<m<\245\274\250H\350\274\226\334-\275\343\200\355\274\365%\002=\367\216\002=F\202\036\275\304\367@=B\017\227<\224D\303\274\237\315\017\274\000\340,\2746)\304\274\334\032\"=\214\246\314;8\337O<\026\260\235<\267\314\236<~\005\030\275M\026m;\005\'\213<W\251\021=\320t-=G\256\035=\244\2678=\204\231\262;\363\246\263<\345\216\323<2\321\331;d\377;\275\350\000\275\274\362\207{<\225\364\"=\224\rW;\227\230\\=\2246-=\352\205J=\032\007P=\263R5\275}Z\024\274\332\275%\275\222\027\263\274\330\3751\275Pdj\2742t\316\274}\264#\275\333r\010<&\311\325\274\356\255\201;\320>&\274\021\037%<\311G9<\217;\273\272\320\016\033\27544\350;\253wB\275\205\335s<\261\263G<YZ\225<\005\211[=\036\027\013\275\366\245/=\314@?=\366\\\231\274\345\234\355\274~X\253;\003\225C\275VGS\275\262p\216<r\010\373\2720\0366=\261\243\253\274\\\371\336\273\3302\247;\326!\323<A\243\"=\300\332\030\275\255\270\246\274\204\226;\2754\\,=\274\302\006\275\272\235\241\273\010\375?=\025 !<\327~\361<\336K9=\007\t\204<\004#\231<!\300\177<Y\244\310\274\213h]=3\271>=MjP\275\010X\376\274d\266\277\274\231\277\350<\3536\356<\037!\272<G\355$<\347\227\344\274\374]O\275\"\244\332\274]\323\252\274`\243#\273\214\031G= \3420=\205\357\314<\000\351\311<\377\341\376\273M\314\272\273\253U\316\274b\361\337\274\276y2\274\261\032\320\274Iq8=#=\007=\332\232r\274g*]=\351@%\275\372eK=\357^\223\273\211\377\016<#\233#\274\260\324\366\274\334W\237\274V\226R\275\362\334\231<\302M>\275\301X\361;=\026\024=\312\362.=\375\372c\273\203T\216<C\001A\275\205\3039\274\373\317B\275\223\363K\275\246r\"\274P\361@=\020\226;=\3426T\275|\177\026=\265\004(=\302|\300<\004]H\275\205\031\201\274\357\304\204<\333\337L<\347\026H<\304\323\013<\204\373M==\344\262\273\0009,\275\237\256\272<$0\371\2743\300C\275\366\274\035=\242\014E\275N\256\205:xZ/=\306\261\361\274\247\314\325\274\2358#;6\271;\275x\2050\275\001\\-=0\323\207\273\224\005@=\321\024\257<\357@E\274\362]\323;\271\331\371\274a\0210=\'\326\350<\242;>\275DQ\304;\267\3017\275\006\354T=\217ww<>\227E=>E\023= 3!=\027xl\272#\227\365<\255l(=\342\335\204\274\242\227\336;c4\007\275a\034\352<\351\301R=\265\267\n<\2429Z\273gi\003=\210\251\244\274Y*G=\211\205\377\274/\205+\274%|x<\310I[=\027\320\254:\335\312\277<L${;\033\207M=R\241\207\274j\216\322\274@\204+\273\270\013q\274\0246V\275\257Y\026\275\215\314&=\374\334\215\273\272\272\272<SH\305<\2503\337;\364k>\275\255r\363\274B\245-=%\221\340<\244\351\224<V\030M=\022;\204\274^&\341\274\341\2469=\332U\257<{r\313\274\341F\306<\303\227>\275\026A\006\275\304\214T\274?\324\007\275\014\350`;=\330\377\274\337`L\275 l+\275c\265\222<\246\375G;\312?\344\274zd\224\274\360\316X\275\203rB\275\017\r$\275\367\301\220\273\027\033!=\270X\375<\202\\<<\200\206\370\274\360\3523;\0105P<\030\360o\274\022_\'\275F\266\325\274pK-\275\373\321\026\274\374\256\377\274\210\324K\275\375P\327<\333\177\307\273_\3104\275\007\3775=\213\007\307<\315A-\273vH\367\274\223\262]=~ C\275+\354\"<dh\010=i\004\035\274\334<r<\341\237\017\275\353\362,=L\t\307<x\310\203\273\311\237=\275q~*=\2379\332<\315\366<\273\000\272U=\204\374\005=y]V<9\347\253;\367\330\260<\340$\243<\205P\001=q\214\222\273QH@=\250\336\002\275p\373\r;x2\002=s\355;=#\361\320;\216\3451=\212u\022\275\2077\221<v\'V;\343\217\206:\207\212\006\273\356~*<\232\270\333\274\365@\023\274\262\3078\274C\020\020<$}Q=g\365t\274\035\227\321\274\261%\276<\361\370R\275\346\002\257<\217\250\335\272\274\315\255;a\226;\275!\345*\275nP1=^\306\350\274\311\014\352\274d\255\006\275(\222\023=\323\337n;g\305{\274X\002!<\331\t\237\274\312\367\217<\253\265\210<\265\364\034\274\234\275H:\211#X\275\352\t\007=\350\362\013={\177\\=\023mA=\037l\003=\014\322\344<+\3025=\177\305U\275\216\261\322\274w\353[=W\254*\275l\236\247\274[\306\206\274\004\210\327\273<\222$:}\226\215\274\305N\206<\303\350\261<LL\374\274\021V\346;\344\241\337<Q\037#\275L\201\353\274,\022<\275\222\rB\275o\254$=/[W\275#\n\'=\301\253\004\274\231\207[\2749\275\214\273\226E\327\274K\221$\275`\205\343<L\236\305\274\354\362g<\251\023\021=\236\367&=\313.o\2730\374\317;\031L\250<\346T\334\2741v@\275\220]\267\274\364rG=\265$\036=@\004Y=\377\277\021\275\375\307\263<\215\201\007\275B2\\=g+V<(\272X\275\241\371%=\342\307w<\005\000\005\274P\213\361\274\223\260\344\274\301\253\376<\253\273\300\274\221>\203\274\344\317:=\231\272\036=\033\010\314<\212<\316\273,\371P=\000y\246\274pp\254\273\264\023\016=\335\"9\275\363\337,=\005\021E\275\365\331\027=\314T\375<\237\256\030=G\333#=oj[<7gR\275\026;\204;\271\366U=\226Q\025=\257\3132=i\215\237\274\313\335\352\274\010\374\320\274k}\333\274\306\035B\274\007\262.=\331\326F<8w\220<\001\365\324\274B\250+=\335\n\023\275\204\326\303\274a\211\336\272gU\033\275\334\r\021\274g\265G\274\224\366^\274\216\2646<UM\223<\305\263\025<\235\215\036\273\273)O\275\300\014\334\274\013\315\340\273\206,A=%U\341<\030Y\022=\307\005\016<\223\037\035=\001;B\275\360\202y\273\215CP\275\271v =\305\036\342\274\333/\260\274\301JB\275\334NE\275\255\376a<ZV\300\274\376\246\227\274\236]\3629,\331\206<c\257\236<m\325&\275\216\030K\275F\025R<V|\027=\303\236X;\263SE\275\006.x<q\365\341\273\224l\007=\270<\255\274\315\273\\=mx\203<P\003\030;\'Z\273\274;\204\241;I\213\024\274\200\005\245<a\307U\275S\330\222<\027@\005\275;I3\274J\214V=B\356\266<\201\001\n=\271$\342<-WN\275.\024\362\274GON=\304\224\010\275;>\007\275\031 \021=\362\225H=\030\341\376\274\t\022\374\274\0336(\275}:k\273\306{Y=\010\360P\275\251(E=\247\350\357\274E\375u\274\356e\005=\347\230?=\276\333G=\332JQ\275_KN\275K\021o;\035\211Y=\366\370\276\274\033j/=\237\202N=\030\364&\275\277V\366<P\206\331<T\020\365<\232%\\\274\373\222\032\274\374I\003=\250x\030\275x\346\370\2734\346\025=\002M\233\2742\t,;\305\233\025=\342\353\030\275\233\325\244\274\317U\r=6F\233<<U*;M\221\004=\024v\224\274\232\2313\275\246\242\007\275\271\r\327\273\346\307\323<\316\375\r=\265W\245<6\315\24093j\333;X\254\301<\254\222\273<\336\210\003=\204w\022<]\032\024<,\020D\273\234Q\372<\2060\225\2745a<=\373\035\311;\331\017\234\274\001\320o\272q5\022\275&?\000=\207\254\263<5\3000\275F9>;\r^H=\253.B\275\341\366t\274\262\202$=\361\010\247<V\2553\275\247\221\030<8`Z=\306\305;;v\246!\275\026\274)=\253\005\216<1j\023\275^F\310;\014z\013=\014hJ=w\324\337<\355o*\275\006G\324\272\030\261\262<\1776&<\226\316\260<u\341\304<\027x\227<\357b\021\274\243\371\252<@@5\275\276\206-\275@\275\224\274\254\304\'\273\257rW\275oGK:W\2578\274M\335<=\231l\262\272=\306C\274\222\226.\274Ii7\275\220<\231\274\345\037\267;G\2342\274U>\003=\227(\\\274V\377\351<\322\246:\274\336o\377\274\237\014P\275\247O\227<<\270\264<;\347)=]&#=M\371d:\242\253\374\274%\360\\\275\007\325\2729\212FE\275=\222\t<\312\334R\274\0012\363\274/\202\035=)@\234:\016\377\226\274,\035W\275{96\274x\335\361\274\004\325\005=\305$\234\274`\023\035\275\244\365I=-\306\033=y\365\033\275\227?\014\275\272\274$\273\375\306Y<\320\362\310<\344`H=\261\3210\275\"\375\274<I\022\275;b!\233<\313\244\004\275\024b\367<^M/\275\207\366\331\274B\352B=\336\320\271\274\004e\177\274YeR=\215\212\010\2752\352\265\274{\354\315<&%\257\274\000<\235\274\250\215\177\274p\323\354\274Az\266;`\207H=\027\306\034;\\\277[\274m\361(=(\251\001=\326\026\226<\365\337p<\037(\023:c\352\377<\231\025\265<\206\343\033=\302)I<\023d\374\272\226e#<F\026\'=wx\t=\311\252\n\275\265\3301\274\033\006L=\2713\304;\304\352\237\273\311\365a<i\275\262;\032\232g\274Wv\226<%08=\227uz<nK\347\274\305\352(=!X8=>\257\027\275\304:\010\2759g3\273w%\211\274\343\267`<7\233\031=\017\316\021=d\037#\275\333DW=8\2341=\261b2\275\224\255\237<q\344\230;e\\P<d\307)=\252\304];\376H\302\273\230\312[\275A\272\321< \216\354<\266\324`\273\362\352\335\271p+\344\273F])=\246)\260<)\374\024\274P\324\256\272wx3\275\214L\313<d\rr\272h\242}<R\r\'=MD\273<\033\026\'=\211\024\021\275*\234)\275 U\202<z\r?=\201\273\233:\035\315\355\274\266\035%=\364 /\275\351\220l:s\337\263:\233\277d;\371\213&=\346\336\014=1z\006<\240\343{\274@E[=\031|\233;u\002\200<X\027\366\274\006]#\275Q\314D=8\336d<T\000\345<\025\345\004=\340\346\002\275\275E3=\327\2017=\357Cu\274\271\316\360\274\021\026\n=+|\"\275an\027<\205U\241\274\336\223\255\274Wh\022:1\005U=\017\273\307\274z4\365<Q\334\355<\270Oe\273\177I\024<\370PJ\275JGW=^$?=6G\001=\363 `<%\2475=h\371\027=\327\377.=\21171\2759\305-\274\007\237v;\322\235)=\267\363\320\273\\G\210:\304\273\247<mSH=\234\246\022=\236\270\332<\214X\024<\024/\014=\225Mn\274.r\007=dEH\275\357=\232<\030\244\247\274\313\243\002\275\325\312\037=\324\023T<f\254L\2748\246\"=@;L=\035\3421=\374\303?\2758\255\232\272\235\3730=\332\353/\274\312\330\t\275d\371M=\365\213\020\274\311?\252\274\232!\205<\273\013E=GkQ\273\265\224[=RsV\274\234pX\275_w<\275\301\021\322\274OJ\035\274\002H\203<4\262@\275\341y\\\275+\221\317<6\327\032=7OT\273Hpj<(:\257\274E\211B=nd\331\272\225\257\357\274<\3030=Q\024I<iP\005\275#3\342\274\237\272\017;L\315V=\36061=\306\254/=|\206v;\014\370\223<\322\020K\275\324\274\'=\033\2108=\364\3627\275\204n\2459$\302\207\273zy\035\275:\037\322<\201\003\316\272\305.\300<\034\365*=[\300\022\275X)\020=L\245)=1\226\262\274\027\352Q\273G\246t;\252\202l\2731|\010=\3472)<\350\236\035=\220\340Z\275xh\023\275\333\351\211<\034%\377;z\206\022<;^\371\273\3146\t=\205\324\333<\373\326\231\273\203/\'\274u\003}\274\376\257\351\2748\327\225<\257\330,\275+\335\271<\266\000J=1\336\005\275\250\276p\2749\325\327<|7\377<\362\217\037<\211]\233\274\037\242\226;\314#\265\273\306\203\024\274\307\305\210\274\2606V=@cX=\227\253(\275\241@\024\275\221\315\340<\310\234)\275<J\000=\231\363E\275\201\235\177<!\236f\274\035m5=Pl\032\275O\013\037=\341\212@;\236\274I\275\253\300Q\275J\213\376;\034x\317\274i\325\206:\307\356\002\274\211T/=\345CU=\331&Q\275\240?\303\274\352\374/\274\361\237J<\265\033x<\344\307\224<]=s\2749K\226;\241H\366\274&\316\003\275&\322\025\275\245L\006\275\262\'Y=\270bP<\311\0247\274\304Os< {\314<\\\013\306\274^\021N;{]\026;\3570!=\037m\226\273(\000T=\253v\253\2747\216J<5?\350<IG\230\274\262fC\275\013<a\274\240\337\232<\224\034`\274b6\014=\316H\250<NY\263;\201\374\005\275@A\322<\321\357\326;7^\237;\035\306G=9\216\317\273\277,A=\310\356\000=?\347x\273\351\203\006\274\300\260\026<z\321\206\272L#\317\274\222\023\026=b\265?<\275>\237\274U\025B\275\315\347\341<\235\355\241<\351sa\274)\310\320<R\236\035\274-e\353\272l,\270<\377\3210=\222N&\275\234\004\025<_\026 \275\355\310j<.H\217<4\3767:\034_*=\371\375M=T\234h<\256>\030\272\310j-:\230\335\312\272Tm\214;\305-\252\274\374\0003<tC\032\275\014\336\343\273\021\360\307<\n\333\315\274\300\004\002\274\372\237\230\274\261\260e<\327\244\037\275\312\275\207<a\324\317<\305\2337\274\2302G\275qz)=h\004\007=\222\361\017<\211\030\363\273\r\267T\275\232\222<=+\307\000\275\244y\\\275Q\312\333\273\202\'\033\2748\235\000<\261\0015=\332\nU\275+\301L\275Q\226\002=\023}\302\274\364\306V\275\325J\344\274\270m\020\275\253\002 <:\343+\274\256f\325<\246\276\036\275g\021\320\273L\225\t\275\302\002\327\274\306l$\2743\271!<4\315L<\234\'\366;\"\373\362<\032d\246\274\340\026\210:(&\371<1\375\\=_\177\263;\333Y!<\037\273+=5\360+<\036=\220\274{\030\255;\370H\335\274PK\350<\221\200\220;\2562\004=P\311s\274H2\\<\315\262\020=B\327K=r\337\217\274F\346\253\274b\360f\273\334z\033\275T\314X=5J\202\274\347\222\230\272n%\021=*\037\226<\366\031\236\274\020F\272<Mc\215<\361\013T\275\374\004\017=t_:\275\374\311\220;\213\253\221;%T\024\275\205\365:\275j\023\277<*\261\030<\317\210\304<`\372\340\274C1\331<\202\361\241\274\227\223M=\330e\035=\312\246\017=\340\227J=\217\231\t\275mq =\203\274\223<\250\316\216\274\007\267_\274\243\210\356<U\000\334\274o\312\0168\335\221\222\273u!\233<\250\001%\275o-V\275\23369\275\326\373Y\275n\354@=\364\223\310\273\217,9\275\240MF\275`s\367<U\2530=\215\316v<\2373M\275\022\035\237\274\312\207\035=[\372.<=o>=\241S\371\273!\337Q=\322\004V\275\265\n\350\274\262\230\356\273\310sE=!\311@\273\\\235==\205v1\274\325\323\255<\014\212n\274H\323\004\273+\223\257;\210\377\363;\316\256\\\275i \312<*\271y\274\361]\210\274\201oX\275\337\2732<h=\242<0\273\361\274\313\344\327\274<b\267\271\360q\356;X \225\274\203\354Q\275\314\377\024\275q\260\037=\363\021\320\274%4\006\274\200p1\275M2#=\313\013T\275\240\373\017\275\0336\375\274\242\362\340<r~\r\275\035nL\275A\r\244<H\020\\\275\210\266V\274&U\\\275\253\310O:\323\230\013\275K~\022=O\220\036=\255G\275<\021\035U\275\027e]\275Q\300\031\275Y\350\325;3m5=\023?D=\245\243\275\273>\263\277<\325\354\371\274\320\224:\275\227l\025=2\001\023\275\267\223\254<\234\235\361\272\035\3476\275%\324:<\222A*\275\334\276\336\274P=\033\274K}\336\274\353f\005\275r\245D\272g\333g<\033\030,\275\324\300G<R&\t\274[\370\210\272tMM<\326\007\203<\366\355n;y\266\005=K\3017=p\265\234\274DA\243<\\\302\213<\315+V=\210\314\250\274\002n\361<2\377C=\027\020\003=\211\364E=\010\024!\275\350\366.\274\000\372\006=\316<\221;K\227\250<\253\250*\275\343\177 =~\237\357\274\350O\332\273\331\'\334\274\323\230\001=L\214j<\242n\020\275\277\237\276\274\333\016,\275t`\200<\346r\022=\356]\037\275Q\003\304<Kdo<\364\324\027\275\354\264+=\231\021\206<\364N\310\274V\2632=\272Q4\275DdE\275\311\270Q=\332W9\275\032\331\213<\333\3647=\035O\034<\243\202\334<\220\021K\2749\243\202\272\271\240\245<\027_\023\275f9\311\273\227\002L=\347\223\001=>\365\r=8\3518\275{\337\212<\352b\333\274\243\321\302<\267\254M\275irG\275\210w3<\307\300\245\273\364\336\334\273\272U\335:\247\203\031=\310\207\035<\220<\255\274`\370V\274&4\240\274\323~\276;\241v\270<s\345\315\274\304{\215;R\350%\2744\223\321\274\266\014S=\366\243;=Y\332\275<\037k\027=\270\326\230;\265\037\006=\371\211\224\274\236\355\271\274\340\364\007=\270~U\275u\3436\274\335\366f<\360 -\275c\021\320\274\240\025\344\274{\203\260< J\366\274q\237\357<\302\244\330\274:@\035\274\347\247\212\274h_\022\274]{4=\320pU\275\314\262@\275\344;\250\274!G\007;\324\271\035\275\371\326\006\275q\324%\272\264g\360<C\243\350<\245\275\274\274F\222\033\274\2071\343<\350f\034:\334\372$=\214\347\\<\032hN\273L:2\275\362\177\374<A_\366\274\222\354*=)\002j\274y\245\254<\027\267J=S\2460\275\223\355U<\353\t\t=2\345\361\274\365(\r=\301\302\223\274\236\\\343\274M-]=\206\347\345\274\031\036T\274\355,\212\274jWO\275\036\356\014\274i\037\024\275:\3374\275\306\207\207\274Q\3050\275\250\204\212\274~\346$=\020b\250<3?\267\273\317&?=\002\217k<M\rR=\263\354&\274\277\360\004=o\3650\275\004y\026\275K\250\355<~\031\034\270y\336e<\201\023\035\275\t8\312\273<\314\326\272\305\350==R\357I=\360l8<\365\001\214;\213\2401\274\":\375\274\330\253\327<\343\246d<?Q\233\274\253Q\352<\302\246\345\274\341\242\002\275\367^\301<3&T={u\033=\246\317y\273|\357\022<MM\337<N\010\320<\323\363i<\313o6<R_\024\275\023\257v\272\213\376\262<\372\002\351;\316!\n\275\366\273X\275CTo<\022\303Q\275\206a\327;\256*\r=i\2315=\016b\272\274\031\362\2159\315I\323\274(O\313<w\351\000\275u\317\034=\336\334\020=h\227\351<\312\t\020\275T\317\254<9\"X\274\n\273*=QC\373\274MI\325<\240\320%\275tv\036=\274,\252;\215C\306\274\022\245l\274\313\200\254:\220n/=\223$\353<Z\203h\274y\021\240;&\203\022\275:\226W=5\317\205<\021q\312\274\255\230U=\366N,=\304\222.\275\037\356\027\273\265,q\273u,3=\'q\003=\336\334\007=\207n\247<\246\233L\275\250\312_<\225\201\033\275\362\377\344;\332\247\004=w\305\234<\373\326>=G\311\211\273\370\'\021=>\025\225\2743\367D\275\033\2372\275\331\013\264\2744\263\204<\212\343\222<\226\227\307<&\236\370\274\016\367M=b0\364<g\266K\275\014\261\031\274g\316\212<\326\313\005\275\236)\372\274\343Z==\355\322W=\014\007U\275\014\333\352\274SE\321<m\353\247<?t\346\274qo4\274y\346\006\274\335\250\266\274\t\214*\275B\361)\275 I\324\274\213.=\274\270LT=F\341\020=9c\275\274y\243S\275\"X\255<\t\020\003=\027#>\275\321\220%\275\375L\205\274\303\311Z=2u\031\274\274x;\275Q\342\000\275\022VZ=\212\n<\275\375\253\020=1\277P\275\033:\220:\231\035\205\274\331\003T<\224Z\263<\314\362\213<\24214=\324\231\303<7\201\013=\000\353\032=*\225_\274$\3067\274\215\214\234\274/\3277=\013\376%;\250[\312\274\251\365C=\027J\335\274l`\345<3\3017=k~\254\273\310\246\254\274\006\220\244\272.\340u\274\345\234\327\274\\\250Y\275\0048!=%\2071:TU>\2758\305J=\027\331\013=6)\200\273@n\026<\026\224\320\274\\l&\275*\363G\275\313\331Z=\372\0360\275\\\016\226;\3779\350\274.\263\347\274vA\372\274\337Dg<\243\221+\275\317#\241\274\251g\030=[t\206\274\226\326\327\274\327\002\267\274\264\274\355<\216\271@<\233\276\331<\217\2763\275\342\217\237\274\337\304\033\275\237)\0169\233\2571\275\\\365\204\273\376bT\275/bZ=\260/K=\214\211A\274\t\224U=r+\242;\301\352\233\274\371%\006\275\243\036\226\274\262\245\037\275u\211%\275\233\\\027\275\322\026\272\274\n\316=\274\330\336R=\036\240(\273\323\271\r=)\257\302\273#\256\026\275\027\246$=\216\203\337<h\357!=\233Z?=\201\r\316\274\0205Q=#{\035=j\345\307<\236\261F\275\274\252\'\275\341j\374\274\365\236O=\222\277+\275\235i>=\241\346\010\275p\n3\275u\367\243\274\366\315\215\274\345\'\022\275\242\210\342\274\3036&\275\325h\034=\032].<P\364#=7k?=\034\224\322;\222\002@=\341\310U\275\024\357\350\274]1\362\274Y\220W<%\241,\275\367&\000\275V|1=\030\324\253<\252C\216<~\225\302<\257\363\352\274&\010a<\254\004\024\275\211\014\277;\037\236T\274v\256\023=\n\023\367;;\314\352\274#\212\306<\207FP\275\017\250\263<6\027\265;\367X\250\274J\264z\274\331\2248\274\357\275\033=e\\5\274\241j[=\020\357\372\274\016\314c\274\363$\022<\243I\360\273\372d\376\272\'\303\345\274\243\003\031\275\003\221\010=\370\321\030\275hbK\275\333\001\362\274\271\356[=5;?\275\246\000\003\275`:\325\274\016K\256;U\266\r\275\213\313\377\273Z\373\332<\326d\245<\317\200\001\275a39\275\342\013\242<>\006V=\215\201+=C\3076=LJ\005\275\257j \275)\031\001\273\24485\275\032e6=\322\203\322\274\344\205?=\024\244;=\242P\034\275\215c\030=6\366\302<\2046K;\350[\027=A\244H=g^4\275\272\250\246<r#7<\345-\000=\357\256]\273\316\t\327<\242\243\003=v\005\252<\264\263\352<O\024\021\275*d\346\274\251\002\241\274&\3629<e\213\016\272j9\017=\334\0331=r\'\032\275\2422J=\220\321:=\373\213\010\275T1\014\275\365\264\004\275\204\035\215\274,\023Q=\"\352\020=\035\"\"=\351HM=1wS\274\227L\203<z\200\272<&?\372<@w\t=\031\3171\274\256\214\311<\245\014\301\274MW\013=\310D;<\272K1\275\215\031\236\274\336\342\232\274\336i\216\274\245PN\275|\270\007\275#\030\005=\177\312\346\272\313\037\350\274u=T=\360\224D\275H\260.=\026F\000;v\201\242\274\377/C=\023e\274\274AEd<m\0330\275?*Y\275\351=\332<|t\343\274m\313\315;R\332<\275+l\005\273m>8\275\014\027\372<Y75=\016;\032=\366\355\276<\267m)=*\233\274<$\224\305;\021\033&=1uO\275\030\357\177<\331\016\213\274\356\017\n=\240*c\273)4 \275:\344\207<\035W\020\2752f\367;\007\351D<\257\027C\275\025\0255<\343\3242<>\202\\=2\373\020=\375\260,:\025\2601\275\026\261\033=AZm\274\224Y4\275\212M\347<Kt\200<nK\010=\2079\023\275\266\2747\275\266\316\206<\264\275\017=\201\374\242\272\017\306\372\274 \344\222</|B\274\303\334\322\272%\333\236<\342\236U\275_\273)=9:\374;\261Fx<\023(z:W\316\021=\364\241\000=\026\336\021\275\035\274C<\322\225\007=W\214\365\274\354\364V\275T\345\363<\341\177==\222>;=\254\003\214<:\244C\275 \307\3259J\364-=\224\235w\274V\006X=G\027\310\274\nR\027\275\205h3=\004\361,\275\237\003\356\274\234\000\362<\370\3536\274O%\223;x\271O\275I\347\310\274\t\274\214<b\304?\275\230\233\255<\220\263)\2754\0029\274\333\245\n=$\326\375<\273\365*\275T\251\006=\250\022f\274a/T=atC=\330T\006=\007b\031<\237\326%=(\037.=$D\371<\323\207]=\nM/\2755u0\275\245id\274a\022{<\344a\267\272e\301\013\275\2476\213\274H\210I=\243\032@=)p\374<\233\366-\275\027r\032=\357q\300\273\353\247R=F\013E\275t81=\251\0234\275\021l\241;\000W%=oWJ\274\343$\374\273\353\220\230\274\207\370\272\273\246\016\007\274\254{\000\275\312\317U=N\221\002\275\310u\202\274P\337E\275I,[=%c%\275\341`\010\275\021\320[\275/\005\026<\200\221Q;\'0$\275\274\217\205\274\273\010]<\311\204\254\274\324\371\036=\226\221\234;\030\261*\274l\0308\275\211tI\274\0075\337<(\336#\275\010 &\275\371\332\330;\000\"@=\204cL\275%\"\017\275\2342\003\274\200\303?=\2251k<\037\361.;\335{\007\275\246RC=\347\032\327\273\211\310\020\275\224:\252\274\t\353%\275\2570A=vv!\275\3339z\274\222(\351\274\312,\340<\215\201$=;f\034=\006jr<\266\312z\274u2\031\275\021\206\315<\310\004-\275\334\036\342<}\201\261<}\333\301<\275\276K\275\247v\033=_i==\225p\n<\203#\010= \243)=H\365A\275\342,\002=f\003\254\274n\354\025<\352\334\346\273\356\007\373\274\373f\034=\315\266\024=\3070\000<\340\311\350\273\032T\321\271\n\0169=\007\200Z\275?\033\004\274\036\314\316\273\024\237\374<\264\374\267<\255\375Y=I\272\344<\t-*\275\005\007\037\273c\261\\<\204p\357\274\214\312;\274\234\347\006=m\024\035\273\350\260\030=(\025=\275\374\035c<\354\353q\274\326\310\225<a{\326<\243\tA<\027\337F=\301\367\247\274\202\315\034=,\207N\271\315\230T\275B\334R=\300\220\233<\202R[\275D\245U\275\315\264\333\274\025\300q\274\324\030\230\274\003a\340\274\200\306\365\273.}\261<~\317\311\274\245}\272<\327*\264<\013\221\215<\330}2=\300\245X<\307\267\230<`\343N=%\016\332<\036\226\023=\333S\247<\230\026\203\273$\2312=\311\212\t=F\222\202<\323\341=\274\235y\003=\256@\021\275\001\033\031\275\177?\003\274\321\364\025\272U\257]=YtU;\373\004\016\275\310\206\007\275x\200j<\265\033\370<\333\314\350<\027\276N\275f\326O\273@\254A=8\3767\275MJ\020=\263\274\020=x\235Z\275,O\363\271\255\203\364;\367\262M=\203dL=jN\022\275\261\014\023=$\350\035\274\227\243P=\342\030c<Y\362\304\274[\271\036\275\306\370\n=\313\277\360\274q\215\270\274\272O/=*G\317\274Z\3610=\356\202\214\274\355\351\276;5\221\251<\261\374B=\315\250,\275\n\270\303<\003\201\300<\270\362\323<\031J\177;\242\235\t\275On\031=\205X\r=]\343\022=\225ho<\275\2137\275\301\371\270\273\r\315\303<\325\003x<\233\205,<\242e\366\274^\315J\275\206\323\027=\256\3359\275\017\034\360<\030\031\273\274[\373\211<j\240\240\274=\007:=\217~9\275\000K\234<9\004\330\274K\375Q=\342\304F<O4\220<X\355\274<\222|\306<u\265@<\262\276\003=h##\275\243\246t<\270\206F=xy\016\275\313N\322<\027:\204;#84\275\234\000W\275\r{U\275;<\000\275\333G\340\274j\002\006\2754\027\271<\300\373\010\275U\306:<G\263U\275\004\356\005\274\017-\r=\227s.\275\355\004\013=\0319m\273|\331\353<\271\034>=\013\324\214<@\215V=\231L\260\274}_\201<z\304\200\274\356\312A\275y\030j<\3258\306<\305\256\013\275|\214\250;\214\305\034\275: E<T\310\025=\231\206\034\274\356\323U\274\032\013\032\275\217\246\303\274\236Z\374;\374{l\273\313aT=Wq=<\355(\023=\2263A\275\3648*<\020\346(=\025\212\223\274\035\370\306;\r\300N=w\026@<\255T\'=\260\323\030\275\202\t]=\034\231^\271U\350)\275j\365\331\274G\316\014\275\233<\207\274\264Y\r\275\347\334=\272P\002K=\026\233s;RYT<\316\365/\275\253\272\016\275\227\030\223;JI\266\273\341\365\301\273\003o\231\272]\025\345\274<\224\353\274#\366\255\274B\265}<\303\357\306;;7\006=Ha ;\017\230\001\275\217\241\317\274\2673D<\337\240\260<\\\007\253\274\030\215>\275\230\377.\275\345\320\264<<P\364\273\265\305\032=\3672\307<}\352\020<1Z\347\274\202\263\224\273A\341)=\300r\352;\267LK\275\231\303F\273\037\202\036=\336\344\262<\036\374\203\274\372\226\332<\332\244\227\271\271\320\255<CG\001\2756i\356\274\270.\333<\241\240\200:\024\325\033=\240\260\331:\373~?=\351\336\326\274\2157\023\275\261o\311\274JD\031\275n\020\024=\315K\341\274\264\037Y=\216\r\001\275\201\013$=y\333\027\273\034Uf\274g\274\023=\2520\260\274c\367I<\365\n\233\274W?\355<\335\006\027\275\275\341\355\274\223\203&\275]t\334\274F(\037=\340LF\275\tU\371;Z\322\366<l7[=}g=\275\017\366\n\275\"\337X\275[\355%\275\317\312.=\212\315\320\271rb\365\274-\274\025\275\354o\320\273kY\360\274\316\213\365<\215\317#<\255\177G=in\361\274`\365\255;>\376\203\274\221i!=5\2674=\260\221,\275\310^}<&tf\274\233\315\255\274pm\357\274\004\271\324\274\330!7\275\214\322\022=\025\367\017=|a\324<\277r\201<}\214S\273\021\355#\275@\323=\274\207\233\335<\307\\$=XmU=\000\016\377\274\2775\034\274\221\364\350;W\202E<\036\037+=\331[\256<-\343\350\272\007\354Q\275m\320\266\274\322\310\272<\265F\267\274\271\266\354\274\207\232\351\274\325 \256\274\250W\266;\340\250\245<$v\347\274@~\020<\231]\007\274\267iX\272*o\277\273\332\216T=\307\022\005\275\030\3003\2743G\306\273\030\004E\275^\310\000=+M$\274\312\315\231<3\266\275;\306u\020=\350:\226<\006\r\236<M9\210;P\344\213\274\304*\375\274\030\271\270<\360\252]=\277j\033\274xiI=\301\035K\274\301\'<\275\034V\347\274\345\007\356\274A\312\031;\022\361\010<\010\227L<\227\001\031=Z\317\243<\356 \242\273\266Z\362<\211]\203<\331\243\232<\223\224\240\274\234\361\243\273\207\227\247\274C\250R=\316&\000\275SJ\033\275\253\200~<!x\034\275\353\243\255\273\003\353\236<\341\370\236<\2656S\274\241k\303;\223/\307\274\252\267\027\274\352`:=\035j\216:U\001\356\274\305\356\362<\271\205\260<9$\333<\022\207\316<\026\212\317\270\030T\r\274q7\t\275\362\370\316\274\t,>\273eW/;~\325R\275\306\302q\272R\324\316\273eC\240<\272\010$\273\t-\327\274mD`<@Z\032\275\027s\372<ReV=\256\376Y\275\302\020\360;+\000\331\274\201CB\274Gt\026\275=\370\017=>\345\021=\310\023$=Af\r\275t\353\003\275u\036D\275\302|<\275\261\212\375\274\005\303.\274Vx\303<\276RA=g\317k\274\006\315\341\274P\211O=i\332=\275\214\315\304\274\0062\t=\236\301T=\371\310Y\275^Q\240;9\245#\275s\342\225\273\317[\235<\327\354\024\272\260\376\r\274cG\020\274G\3319=\346\232+<\304\000\335\274\362O\000=Q\001Z\275I\323!\275A\320\306<\332\033\032\275!a\276<\022\026\237\274J\210\207\273m\262D\275\226q2\275\262\300@\275\027\347\270<\0267#\275\006\250\"=k\240\177\274\310\245)\275\024! <\243_V=*Z@\274><\341\273\247\330(\275m\034\013\275\217.J\275\224y\216\274`\310\223<\013\000l<\241\310\322;\330\247\013;\016#\031<\265\345\024\275;\224n\274G\260\362<\007\352\005;\240B\337<\210F\343\274-\023#\275\305eK\273\307\327\016</A?=\373\313\035\275\035\361\\=Jh-=\365s&\275Qm\243<A\213\333<\233\025\020\275+\236G\275\265\365\363\274t {\274\215S\337\274\315;\351\274\233s:=\377Z\007\274\241C\007=\227\355H\275\220\376\373<\202\214\345\274\374kg<f\333W;\312\365\375\274Y}\355<\357\250-=\ngc<\230\302\206<\025\237\360<E\303\377\274\223\324D=j\366\036\275\347\354\217\274A\021\337\274<\026\316;\375\275U<\250\307\214\274X\234/\275\265_\022\275X\255\306\274\307\235\337<Of1<4\360:\275\340\273@\274n\333\n=\360M;\275\326I\223:\252\241\206<\tu\211\274d\0133\275\233\2433=\337\315\2459\211Z\341\274\254TO=ok;\274\315A\001\275\376\t[\275h\256\275;\311\246\030=\217\211l\274\214\332.\274\355\262\030\275\262\027\224\274\346\007\'\275Kx\033\275\211\002\264<\\l\313<SL\237\274\250\353V\275\307\031)<.v\344<\030\363.\274i\016L=;8\323<(\020\240<\362\242f\274\301\022f\274k1\017\275S\243\354\273[\304N<R_\370;\232\204w\274\327\361\3219VY\021\274\025r/\274}\363\201<t\324\201<\342z\226<I\217\002=mc@\275\263\3100\275\270\273\342;J\n!<\233fF=\023\347{\274\024\\\365\273\336\265J;PdL\271V\027!\274v#;\275\213s<\275\33524\2732s{\274\361;\312\274\316\334<\275b$==/\t\254\271\302/B\274\27414=n\244E\275f3\214\274\231\243\256\274r\254\033\275\204\240L\275\364\200\224<^\255#\275\335\205B\273\366\313%=\274W,\275\241V*=\244K\021\275\027\353\252<Y;\007=0\340<\275\315q\325\274\224\266\325<w\005}\273\365\343\225<\361\220F\275\203Z\340\272\307\312\020=|<\274\274\004i\024\275.\201\300<Q\265\002<\222\024\034\2742!\036\275\346\356 \275\307QI\275#\272D<\220L\211\274\235\2011<\242e\302:;\354\344<z\341\340;:\346\330\273#Y\002\275\256q\034<\026\320\326<U\3414=\375z\317<\367E,\275\374\351n;\272\365\330\273\353t\010\274\334\335\037\275\034\234\334\273\036\266%<\363=\004\274\231\007H\274\203T\237<\260\270\001=\326i\240\274\365g(=\274\305\004=\262!\252<\232\231g<&  <\007\372\370\274k\376\004=\211\211\014=\001\256\207\274\372U\n;p\222\031<M7/\275\312\005$\275\037\346:<\2733W=\312\311J=s\035\264\273g\362\004=\024\000\t\275&\363i<F\222E=ob(=(\350\302;J\346!=\251l\362\273K1\256\274O\357 \275\"E\307<W(\361\274\201\000O\275\223W\035\275h8#\275\260#\323<bk[=\\b(=\201\314\204\274\360t.=W\2443\274j\0321=i\027e\274[?\':\263\314\035\275C8\026\275\345 C=P\245\004\275\265y:\274\371\365&=\342}@=\261A\207\274\347\247T=X\2559\275@IV\275\003\3469\274\262\263\'\275\342\235\322\274\357R-\274\243\271U=\265`\266<\340\t\361\274\311\374U=As\223<\367\323\257\274\347\301G=\331\375\226\274\234\302\007;\233\372-\271\023L\273\273\303:\230<\313\215\013\275)\306\010=\264>\331<2<\346\274t\"\251<\272_\025\274\354i\253<\000M\240\274\373\375\221<\340\255\\<\226g==\357\344*;\213I\013=\336)\322<\233O5<9\271)\273+\305\322;CZ\005\274\024\263A\275\010\020G\275b|6\275\375\\\250\274\003, \274\327\022\364\274\307P\262\2726\010&\275\333o\014\275\034\305\353;\262\206W={\252K\2754\036\022\275\177\270\003=\233\374X=NkV=^U%=1\374\003<\251\332[<\020UU<P\333\035\275\377G\204\273C\237\r\274t\351\236\274Ig\312\273\004g\277\273W=\364\273.w\021=\336\033\225<Q\322\210<\336\347~\274\264\274\032\275\373\344\370<\306\031\357\273T\314\377\274\221\036\t=|\035\030=\224]\026\275\332\3719\275\270\374\265\274\335\214\021=\210p7=fr?\2749\026I=\304Gv\273q7\364;_c\023\275\221>2\275w=\014;4\330K\275\237\243L\275\001]\355\273\302\224\024\275\334\216\344<\000\276\034=\253-\232\274\023\323(:b\374\'\275\'\343\224\274x\215~\274\313z\244<Z\022J\274\241\250\324;\266k\304\274\206 \373\274\2519S\274\250\314\317<\326\263\254\274\304k\025\275\333\2430\275\265\305\027\275\315\363\034=\304\367\322<oE9=\017CJ=\010=\260\274\234\251]=Zu\363<\243y\331\274\230_\322\274`5A:\200V\037=\314\250$\275\205O<\275\231UQ=mG\n=\377\352\005\275\037\256\254\274\000D3<\036\025\243\274\037\032\245<7\264\270\274\266>K<Z\202\002=|\272F=j\001N\274m\243\205<\370U\215;\023M\005\274\271\317\361\274V\275?\273\267\311D=\314\3166=d\026.\275\337\364|\274\025\237\372<\020=\006\275\234\022w\274W\2420\275\340\030==\014\005><\267\347\024=d\375\017=\307\207\020\275\242\222\234<%\250-\275\266\352\010<\353\2651\275\213\374\031\275\304!1\275\206ht\273\232\336E=\241k;=\355\342,\275?\316\013\275\324\226\326< \"\037\275\361\255%\275\223\271\227<\375^R<.\014\035\275~\333\302<\006X\003\275-\361\031<hB\234<{\271\t\275\337B\002\2756\000>=\"\033\\\275!S\023<\330\312\273\274\304\020\320<\315\352\206\274^\373 \275\026`[=p\321U\275y\003&=\373Z\032\2751\\\030\275\366.N\275\334\343\245\274%\374E=&\206O=@S\"=\257C$\274\247\375\035\275\306\234\270<\204\0032=\247\314\340:\361\377\377<?z\303<-\351a\274\343!d<\354\224\233;\024\256\025\275\312i\237\274\233\3454=K\323\261<\276\262\363<\030\357\321\274\264\352\356<\204hU\275\344\313\347<s\3055=\336\225\317\274\024A\270\273\233\036\211<m\316T=\254w\000\275\246\206]\275\377\201/=\212\372\0379\224\354\022=S\212\223<I\325\312\273h\334Y=\327\334\205<\275\321G=\001\007\033=\377\273\341\274\002\010\310<\0077\005=\014sl<T\333L\275F~Z=\354UK<\210U\362\274\26651\275X\220\201\274\217W*=pN\350\274c\253]\275\354\3460\275h\242&\2753\222+\275\253RN\275\366\320V=\210\252\222<\310\300\031\275\241\006\217;Z\234F<\327\2566\275\225}\346<@m\310<\2568\220\273%Yq\2745\267\307\273\262\3714\275\270\331A\275QH\306\273\305V+=jf\213<x\275\317\2740\030;=\241\324)=\236\177N\275\333\335\331<\204\017\026=\006[\270\274I\357#\275\034\355\247<\345\035F<C\304\224\274-\013\016=Y|)\275\202\260\007\275\345\220\267\274 \037\021\275\234\225,\274l\3619;C\250\r\2755\314\002<\341jN\274\244\2576\275\241C\254\274:\323$\275*L1\2751\251\342;|\274\247<\217\315%\275\360\230$=\231\346\217\274R$U=\373\215I=\rcM=\242b=\274\345\200\177<\365\345\205\274\260\363Q\275\367h@<e5\017\274\256F)\275\023\255I\274\320\307\261\274\361\274(=G\216\001=\315v\354\272E\005\246\274\035\250Q=N\247A<\334\371&=E\261\t\275!8\272<YDJ\274\364\276\017<\305\303\241;X\236R\275\023\034s:\372\243\317<V\037\273\274\231S\242\270[\260\007<\254\346I\275\"\310\"\273\225\216\340\274\356+\n=\266\247;<\345KL=$R\242;\255\026W<\345\215B\275\0343\022=3\t\361\272\206\300.=hs\037\275\330\315X\275\254b\325\274\312\266\224\274\323E\304\274a9\236<\357d\214\274\231\0134\275_I[=O\034\216<\022yT\273\302\3327\275]\3522\274\214>\345\272~\271\033\275-O\336<\302\353\316\274\366U)\275ki0\275\201\202Z\274B\344:=H)\035<\211\2544\275\272\222)=\364;]=\314WG=\027\255\231\274g\212\232<\n,\025=\365\004\"\275\337\255/<\307\344H=\023\024\374\273KL\377<\374#]=\314l\205<B\367\356<\374\010{\273{\337T\275\336\3030\275\353\353\314<\347\333A\274\364\2108=`\242S\275Z_L\275\327\321/=O\227\010\275\002\253N=J\316J=\30669=\2743M=W\274\275\273\303;i<\274\213C=\267\354\017\275R\216@=!mz\274\345\352\022\274\330m\330;V\266L=Lj\351\272\317\341\t=l\333\306\274\005H\026\275\034\032F\275\005\277=\275Tb\030\274\"x\343;\20589<n\216D\275/O\205;\003m\330\274$PT=\302\307\227<\275\003\r=,\000\003=\311D\007\275\243\337F\275+|U\275r\314\002\275\236\023\217<Gq\032\2751\031#=q\350*=\\\351U=\020\235\234<\237>\253\273\326\327Y\274\300\325\000=\372$\254<\342-F=\271\242\023=9\220\033<\212\025\320\274\215\233C\274\372\213[=\200oA=D\260\302\274\355h.=\303dC\275\204\305Y=E\267`\274\273\2570=\365*\307\273F\346\371;_\024\025=\367\375B=\305~\233;\250\274\333\274\227\014\016=\014n\026=l\376\353<\203\233\363<?\352[\275A5\254\274T\253\277\274\327\255\320<\014*X\275\315\2518=b\242\243<7 \034\275\216\260\3309R\"\'<\242\265h\274\242\r\314< \257\177<}\330\300<\247p\360\274-\304T;\350\\\007=@\350@=\000\214\376\274*.\336\274\033q\201\274\356!\356<\364\010\341\274\347\265T=\r\231:=#\326\305:a%y\274N\323\037=x\371\202<6^\325<\036s\302\2748\326\327\274\005\265\r\275td\312\274Q\313[\275\334-.<*\034\022=\026\006!=<\034\235<p\346@\275\312\032\247<i\372\004=T\220\315\274\002\243\032=\357n\002=M\035\005=\205\327\342<\314\000\224<\300\014\204<\364\356\326<\0336\025=\301\301\r=\273\362\375\274=\002(\275\'\251\004\275=]C<\373U\273<\216\'/\275\362\250\\=k\227\313\274GLk\274\315P\314<>\266V=\027Tg<~\226a<P<\375<,\265\351<W\246\000\275\351\234A\275:\302\336\274m\"\317:\263\177\r\275\275?t;\316\233\027\275\014\017\240\274\313\343t<.\254$=\006(\306<B\000\205\274\204\257\251\273\334e\006\275\306\025\035=\234\232E\274\340+,\275\004\343\210</\263\n\275\360\201\017=\365K\033\274H\331\326\272\237\227\323<\204[\"\275\375\366H=\376\301X\275\367\360\027=\362\361\351<\325\345\350<7*\013\274+\233\330<\370\204\244\274\312\211]\273\033\255+\275\277\240\236\274\005\2448\275\300\305\021=c\241\020\275\267\257\373<@\t\352<\323\t\230<\2624W=\2129\320\2739\325\221;:\260\203\274:\255O=GNG\275<l\350\274Co\020\275\370\336\261\2742\"\320\274\357G\227\274\034\211\025=<c\200\274a\364\007\2750bO<\321\242\004=H\221:=\261\370b;I\033\340<VM:<\266E\363<8#\365<\315\270\035\275un\202<\267\311N=B#\277<=D\243\274m\2008=\256\264\300\2736\305A\275`x\016=\346Q\235\274\322\372\005=\317\235\027<\347IQ=\252\226!\2757\237\267;\375\366\010=(\343F<a{X\274E`?\275i\347\021\275{\344\335\274p\200\000=\311cJ=.\343\211<=mL\275\273\272\222<\037\305\355<\337\237\231;M\005\325\273(;h<\222E\312<\033\2113=\320\322M<\371\212\023=B#\253\274q\367\023\275\204\352\030<l\262C\275\t7\t=2\306\370\273\276A\373\273gx\236<\013k\273\273\340d\014<\007\316w<F\2256=\332\322\036=\276\336\010=wZ\375<\356\324U=o\262\342<\320\361\324<\316B\021=\305\346H\275\275>\007=^/V=\222\2631\2757\340N={\022]\274?\034\000\275LE\333\274)\370l\273u\256\320<&\306G\275\345\227\221<\0043\362\274\336\375%\275\006\254<\275_\030\002=y\305\003\275\243\376\225<\265\367\237\274\266,R\274We\206<\263\234H\275aX\220\274Z\210\034=\365\t!\2750Q~\274rU\201:\355s\353\274\177\204\036=\364\231!\275@[O<\023\370\210\274\303ZG\275\362\r;\274\210\207\316\274\000\200\004=\337\0346=\236\372\223\274}\032e<\207LY=\261\371\006\275\334\321#=K\214\253<\\&W\2759\342v<\021\\\316<y\314\320<\245\255Z\275|\0243=\004\236\033=? E\275\211\215\";\240W\225:;\340\207\2740\023\016\275!\316\213\274\253\227@\275\t\257\010=\n\342M=r\240\363\273\370\032 =V\354\034=RV\027\275\2020\r=g&\032\275\301\342\320<\375\235F=o?\272\273\333\207\321<\271A\360\274\214\316$<R7>\273\037O4\275\376\004\034<\2015\302\271\211\322\346\274|=g\274\241bC\275\325\361\022\272\303E!<D\r\230\274\361\t\366\273v{\016\275{\350O\273p\371\000\272->\023=\3527\270<\311\301/\275\305\261\001=\261&\247\273M\352_<\210\372\227\274\357s+=]\365\372<8 {\274\321@\005=\'}I\275\262\013\324<C\032\347<\2004\\=7;,=\313\030;=\327\020\270;C\310M\275\313\315\234<\202\361 \275YK\241\274\222\017 \275\302\221\016\275\357\010\006\275\331\2246;\373\240h\274\213\n\021\275\274h\017=E:+=\343\341\233<\233/\027\275\321w2\274\202L\225<\0372\303<y\013\035\274\337[Y\275+K0\275\343\032\037\274?\2629\275\031\237\353\274\346\365\022=\226y\212<??\027=\322\241\022=\037\211\007\275\342\240\342\272\374\0134\275D\354 :\017\177\033=\202\212+\273\222u\320<\2445\266<\030l4;R]\210\273\343\255\024=\214\314\217\274L\332\227:\225\210L=B\304\207\273\327\024K\275=\2357=\251/!=r\226\037<\204\202,;agU=\226\342\n\2759 R=P\0323\275D}\002\275\2422\203\274\235|\232\274\261\n\314\273!\317\335<Q\335H\275\212Z\325\274Re;:\027M~<\276C<=\320\321\356\274\357\262\351<\222\243\213<i\216\305\273^\250\037=\004\206R<\0174\242;\347\224\023=mp\252;\222\273\023=\210\3067=K\275&\272\t\217\004=\210_\016=\345Ye<\215\027\374;\314\324\363<F`V\275x\333@<\217\335\372<\207\355\n=ql\336\274\272y\377\274Q\212\032\275\215\337\327;\021B$<y\257\223\273\374b\017\275\336\235\031\275\017g\334\274\013\007\235<e\357\267\274E\213\352\272u`&\274\265\024\243\274\370!x\274M\377\331<p\367y:;\241\031=%\367\375<\306\220\004=5K\013=\326\332\003=\361(I=\250u\006\275\031\373\001=\373JV\275\324j\031=\r3I;\311\261\233<\032\316\027=zb\035=|9\204<\330\036\337;\202G\024\275\252\256\317<\275\007C=&\242Q=\t\3335=Bgr\274\344\363{<>MR=\203\r]\274\304R\224\274\363X\377<\263D\326;\"\321>\275\373\221&<\323\3669=\372\276\210<\204\247(=W\247 =\276\2429:\321\356\006\275\356Q@\275I\230$\275\0209\343\274\376T\026=5\257\362\274[\217\035\275\323\266?\275D<:\274\375\376U=7 L=\353\360%=01*=\215\207\002:\362\232\256<|3\020\275\r\201\265\274\216i\364<\370\246\035=\207M\010=6\330\260<Wp\263<z\307\\\275\320\374\220<\247b \274/\320P<\220\320\241\274r\262R\272\3757\265<\r\004\031\275\233\272i<\355\2224=B&\232\274\232\324\372\273\205\242><X\334\244\274\3735\'\275\310PA\274\321(S\275\312Z7=\347\177\241<\303\351\025==C%=l\250\260\274c>\202\274\023`A=\261WN=\265{\025\274\177\226H\275\237\2538=v\345\254<\314;\014=\320\377\346\274\353\374G\274s2n\273;\350\217\273\252\215\001\275i\224\222<\'i\362<\306\016\031\274\374!\341;\374\207\352\274\025\214R<\223\037Q=\n\336F\275\325,\370\274\007T\327<\226Cs\273xe\233\274\301\346\027\275y\260\'\275\2765\242\274\n\304\017\275>\253O\275\370\"\344<FO\275\274\240\363\r=\242\346*\274\356/\202\274\247\020\252\274\257h\001=\254\005\025\275\376XL\275\314\253R=\\\202W=\310J8=b^\300\273\202~\271<\302\032\005\275o\243\025\275\354\361\341\273$\3503=k\t+=~\023\030=+(\260<\001\000\376\274I\027&\2743\200\260<\323\3220=\264\320\003=\326p\263\274\353p\350\272r\376Z<>\305\'\275\017\365+\275\203\n\351\274X#\253;\0263\202\274\022,\240<y\236\212<B^\307\274\004H3\275\027\3514=\273R:\275\270\314\023=J\275g<\332F\227\273R\330\006\275sM\004<\253\350{<\377\232<\275\326\362\034\275\335):<\324\256R\275WH\212<W\273\200\274\201\363a<p=\275\274\366!\363<\006\374\232\274|\323\330\274\265\251\245\274\372\3305\275\nH^\274x\356\343;\275\234\022=,~\363<8\325\'\275\242k\317\274\356\242@\275\311\026\024<\177\255X\274\323\033\004\275;\254\321\274\010\372\'=\276\331\313;`\377C=\273\213\347<l\246\014\274\312<&=e\372\242<\227\344\273;!\330>\275J9A=\324\003%\275\223Z\200\273\222^\017;\275\3117\274\234g\247<\217\210\310<\212\002,\275\345Y8=\002Ov\274\340^\264\274\267\257\253\274mW\241<.P\331\274\202\326\221\273\303\235H=o\325%=\360~\264\274\274\033A\275\363v[=\271<\013=\333\371\026\275\301\206\3469\251\3234\275#H\022\275\0065U\275\370\223\205\274\336\014c\274\351\204\222;\376^\006\275\235\246\036<e\235\321\274\326\237\357\274b<\036=N7\327\274\242(\252\274\370\007C=\261Y3=\330\221.\275\3125\212\272\321\274\022=d\244\023\275X\360V\275\373\306\021\275\367\260\260<\\\267;=-y\306\272\260/\273\274\310aF;\265\2445\275y\313\n\273\202N\377<L\273\216\274\317_\307\274\315\211B\275&c\010<TV\177<c\275s<`\3052\275yq+\274\005\'\344;\327\322&\274Ht;=\367\302\213<B\013\350\274\024\013\t=\310\303.=\336K\216\274\323.\345\273j\n\005=\0372\004<p\305\270<\321\023\313<\0071\305<^\315\321<\016eZ<\315\r\212\274%\256\221\274&\022D=\007\236+\275;\340\007\275\314\262\304<\3325\262\273&<m;\277\222v\273\251\312\013=x\270\007\275m\303 \275N\364\033=n_\255<?\367\331<\353\212\261\274\253U(\275v\004!=!\357\363\274x\372Y\275i\212\256\274\331C\266\274\263\274\327\274d\353X\275\306>\230<\377\300\317\274\236\035\315\274\317\016\023=\250s\023=\314\177\301<\013\200\236\274\300\312\324<q\351\354\274N\367\303<\301\003[\2756sP=\205\235\007;fm#<H\3227\275~\262s<\266\270D\275\376\254\317\274\324\302\346\274\2503><L\232\226;\010\256\213\272\367%\003\275\340\000\3417{\343\271<K\006G=\314P\265\272\335\311B\275\364N\352<\255{>\274\261l\r\272h\326\266<T\2578;\024\031\310<S\024\000=nS\021=q\364\030<\020\224\300<u\021\020=(\256\221;\321_=<\373\030\363\274;\362\351<\326\333\005=]u\024=\005h\'=\032\337\217\274\347/T\275\326p,\274\274|N\274\\\036P\275Z\322\034\275\314\366\n\275A\265F\275\014\262\202\274\240>B\273\014N\277\273vQW=\005\354\355\274dl[\273\274$\367\2742\320\344<\263\256\016\274D\372F\274\254\276\372\273\177\373\325\273\277\002\000\274\216\240x\273\310\323\376<\251:\350<\220\264K=\335J\221\274k\325B=\242\t\255\273L\271\006=\336\261\334;\206\340\265<\375\273\223<\271\r\330<\010\026\220<\247\223\"\273\317\'\323;a\305$=\344\267\247\274\241\337\344<8\200~<\247\320\250<\203\027\360\274\350x\356<\r^\344;\362\257\006<\214\242\341<s\331\031\275\235\374\207\274\003\321\007\274R\272\251\272(\200\242;1y\360<\347\372\312<\"9Y\275I9\335\274f\205\373<\324\331$8\034\0063=\345G\"=\214\316\214\274\224\302\002\275\340y%=\013\211)\275\257\217L\274\244+\363\274\021\302Z\275\264k:=\344/w<\277\347\276\274\007z\316\274w\311\037\274 j\245<7.\321<:Y\350<a\316>\275\323,\353<\324\312\336\274\2230F\275qT\221\273\246\300\365\272\230\214?\274\017\210\322\274\314\261\354\2741\246\025\275\023c\272\274\037`>\274\210Wk\274\272o\212<e\361Y=:Ki<\217\034\261<g\023\321;\274\035\225\274\277\375\333\274\000}\220\274\240\202\023=\201\322\0029\261|\004\275\\\"\235<\270\r!<\332v?\275\307\"\274;p\272\263<\353\365d;\315\034 \275\372M\t\274\037&<=\221\027\022\274\360=\004=n_\305<\031\320\2529\367\005>\274\355d@<\364tf\274\030_\210\274\335\357Z\275%!\312<\n\230A=\017\207\005<\000\212;<{Y\222\274\261B\\=\200\333\264;\356&\300\274\357-j\2738\373Q\274\035\332W\275\273\365\372\274\262\214:\275\027;\351<l\3773=[\356\242<]\251\307\274g6.=\320j\222<\236\216\257\274WP\023<\370\276P=\367\262\036<\003\301N\275\302\207\"=\013\325@\275_\265\306<..\t\275V;\370\273\371\344\263<\244\307\267\273\222\365<\275af\271<\362\333K\275k\203\317\274,\021>\2756\207\321<\273|\000=lY\024<\206\274\033<\222\364%\275\271\341\000\2740\306\352\274\227\355\030\275\354\263\343<\036\002\230<8\373\005=\366\317:\274\356\371\245<J\242\'=\223v.=\272K\"<\255\354V<T=\350<\005\336F=\022f\260\274\353R\367\274\325\301N<\0376*=x!\264\273\220\300\332;\330O%\274\317\347\271;rM\2159\353\221\311:+\312\333\274w\037C=O\014\346\272\342a;=\266\357o<\322\350\002\275\365\354\315<\361\022\026\2742\227g<\321\203\343<#\257\333\274\227\371\033=\214\322\260\274\005&\356\273\217kX=@!\340\274ic\3329\316\372V\273\030\304\206\274\006\320H\274Z\352\022<OVG\275\032\371\374<~\210\214<_RO\275\250\010\225;\377<V<\251:\231;,\204\035=\244H\376;\251\203(\275@a\025\2757\332\017=\233\250\373;8!\003=\006\255!=\250\342]\274x\224F\275\273oX\275\243\356\344<\321\367>;\334\333\252<Ju2<\037\323\\\275\024\207W\275Cld<m6\213<\200^F\274\315\242\361\273\303\333\013\274\211\205\320\274\271\037\202<\344\021\204\274\014\"#\275A\376\036\275~\3777=\351p\346\273\013\003\247\273\001\013\335\274x\221r<2,\246\273r\321&=\367\203\255<\363\2062=\307\344<<\351\201\021=\252\254\027\275\375\317==g\365\273\273V\035\352\274H^]<:8\253\274\246\250\345<\224\230L\275\364\351/=\273b>=\305\n\337<\373b\345<\244\255\270<8=E=\207yO\275\210\314b\274\304\275\337\274\277\222\032=\010\006\n\275\016\337\273\273\365\332\032\275\267_\025;\025\013@=z\200\033\275\213G@\275G\377V=\'}\207<\354y\353\273\322O!\275\330\035\032\275\242]\031=#*\321\274\325\234^;F\0137\275U\350O\275\307\216\265\274Pq\\\274UAL\275^\337==\331\005R\275\265\253\343\274\231\016\305<\367\266B=60\032\275\257\202\234<\211\024%;\371\272\'=.\251\236\272&4\r\275\361-c;\242\366 =\r\211\361:\212{\n;\371\344\313;\225\203\242<\265\002L=\014s\002=\311{_:\367\324\361\2737\022]\275[\313\021\275\321/\320<=]7\275\246q\223<s&\023\274P\016\310:~\216\264\272n\236\020\273\346\221\\\275\320\265\225\274E\255\013<\343r\022\275}3P=NDQ\275\024\t\022\275\320\"I\275\376\257\t\275sQ1\2752V:=P\247x<?\322L\275\010}\"=(\200\311<\3223W=\340\236\350\2738\355\002<\023\200\004\275q\331Y<\006\213M=\272\267I=H\022S=\201|0<\242\000&=Ro\312\274\324o\334\274\230\356\374<\003\246\022=4\270&\275\332c3<=\2730\275\034\200\357:\307m==\\\361P\275\2704~<P\211\004=K\t\343\274a\351H=\372\301\271\274*\2537\275\261\001\016\274\364a\376<\257|\336\274\331\027\233\274~\005N=\346\255\362<2e!\274\206\314(=\205\345\031\275\323))=\3624\002=\270H\261<\356cC=\334\321!\275\002\233\361<\235\0020=\021\255!=\266\276\361\274\023\265I=\272\246\276<\232\027\235\273\246\300\306<8\nf<\207*7=\261s\265:l\314G\275\ry\032\275\363\276K<\321\337\001\274+\240O=\260\354!\274\203k\274;b\030\006\275\217\001?=\t)\024\273{\245\n\275\000O\032\275\337\027\340:\"\211\002\275\362\253:\275\254\321(=Twl\273\te+\274\024l\005<\004x\025\275\'\365\224<lF&\275@%\216<[M&<\215\373E\275\346b\363\274 \014\277\273g\201L<\035\2358\274:\262\227\274\314\304\236<//\023<\023NW\275\213\235\360\274\206v7=\246E\021=3\222N\275\334\365X<\360$Z=^\032B=\363\242]\273\364c\226\274\361[c<.\350\303<\202\376Z\275!d\260<\"\031G\274\221\350\213<\263\247\017;\322\3371<[\361\272;\327\233]\275\324\316\317\274\204\214\300\274\351\t5\275\030#\034\275n\212L=\003\341B\275\024q{\274\343\032G=`\337\255<wy\251<-\220\r;\235\272\301\273x\372D\273\021\223\035=\367\036\377\274D\320H;\353\3066\275\211\356\253\274y\331\353\272\002/\030\275\326\020\202;\272y3<\020\213\322\274\206\274W\275]\364\372<\0344\370<\2218A\275\241\262\213<\3747\240\274\315F\000\275(\323\302<\271\033\003=d\334S\2752d \275B\201\212;N}\214;M\240\206;k\233\177\274\037\001Y\275\325d\027=\370\t;\274---\274\375+\017\274\373\347\231\273VZZ=\204\364\263\274Z\201\210\272\'\350D=\266\347G\275\306\251\374<\253_@=NB\004\275\345\230\003\275\313(G<\365r\373\274\301Q\235;\323\0163\275\017\221\203\274j~:<L\237M\275\014e\026=\357\036\006=?:\000\274\217\260X=\'\331>=W\363\026=Z\034*=\026\177\352\2745b\330;\267^\031\275\001\353\250\274J\345\377\273\302\364)=)\2426=\022\261\332<\305\357\221\274\0136\221\274\251\326\376\274e}\345\273\372lG=\236\"\000=I0@\275P+\031\275F\366;\275\321\017\304\273\352\353\355<Zr.=\020\202\337\274\207\0279=\206\243U;p\0358\275^-\023\274\350/$\275$\337\226<\334e7=\273\242\017<\207\031\303\273t\222\222:\000\003\326;\02687\2753x4\273\r8\\\275U2\214\274w\333t\274+\013\363\274\021\214+=\323$\303;\373\355\003=\211\334\025=\024\022S\275\340)\225<7\r$\275\326\322\376\274\307\346\002<\272&Z=\323\256\242<\233\001\320<\337C\227<\303hD=\211^L<\240\255\001\275\361\304\014=\372\232\343\274\213\203P=\256\t\362\274\206\2008\274\362\303\315<a\026\351<\335i\231<%N\013\275r\364\010\275\027\325C\275\0378\t\275\3067)\275\264<\264\273\331\366\313<\026\371\313\274/\264\272\274\251\304\025=\2417\251\274\332\214g\274k4<=\277#<=\\\265.=\316\222\204\274;ur\274\316\025\345\274W\304K:rd>==\351\'\274\037)G\275\235\211g<D6\256\274\325e\377;\'\312\316:p\021s<\227\272\306\274(7\251\274\357c\036=[\310\324<\221\211\t\274(\304?=\361a\201<\000\314<\275\\%P\275\251\255/\274\323xN=\2615\335;\371\tX=\333\007P\274\276\376n<j\242R=\020\0067\273kM\323<38V\274@\372\021=\215\016\017=\335\233K=*\334\276<\222\3626<d\330\242\273%)\031\2757\334\023=Z8\3349!d\013\275\361\272D\274\264\227/\274E\274B\275\005\260]\274\307\373\202\274\344\210R\274\202\005\013<G \367<\331\010Z\275\372\2619\275\253I\323<d;r\274B\224}<l\306\013\2755\345\026\275\333i.\275\366.==\365\222\346<\'\013|<\216\216Q=\002u\267\273\n\373K\275\373I\265\273\205\361\223<p\270\335\274\033\262O\275\355aB\275\362\224\337<\346\364%\275\216r\215<l<\277\274\323\343\007=\026\035\332\274J\303{\274\300\014=<\2067\374\274r\367L\275cV\213\274FRx<\037\204\014\275\021\354\221\274\233\232@=\001zg\274\035\336\345<[\374\002\275\211\227\351< /\217<\325\304\030;U\246\365\274\020\025\311\274T[6=\246\033\356<\240\256\005\275\340\274L\275\376\017\266<\366\305\313<\023\232+;4,\253\274\234*!=\005\3325=\277K\007=\0066\023<_\031\026<\003\230\037\275Nq\030=\223\'\277<\220\316Y<53I=\373\343\022\275[++=\321\201z\273-\234e<C\247K\274\214Dh<\007\236\357\273t\245\271<g5\210\274A\310W=\271a\327\272\271|S=@T\332<\240\241Q\275\0370W=\372\200%=\303\000\021=he\207\274\224HJ=\246\032Y\275\240\213\232<~\272\206:4 \360<\217,\225\274\3073]<\363J\220\274\301\337H\275XS*\275\000\271[=\036N\314<\246\255\336\274\035vY\275\345\331\251;\000\221\212<BJ\326;S\016S\274\354\005\265;\363\3040=\004\3758=b\371\275\274\336\n5\275\215\342\036=\246\004\261\274\217\223\320\2744\245\224\274\230\372\031\275\375\371\363<&=\206<\370\206T:\271\274,\275\242\300+;\344\r3=\200W\233<s\305Z=/\225\221<\372\002S<L\355\367\274\277\017\353<\305\223\256<i\203\316\274\265*\270\272\r\272#\275\243\225[=AnS<\272h\213\274\367\265\347;\354\212\334<\260\250\345:Q(\025<tZ=\272yU[=\272\020C<\016\274\261\274\245\003\324\272Pe!=[s~\274\335\004!=\022\211\021:\332G\372\274\323\276R=\370\263\022=\255S\341\274\343\316<<0\377=<O\233\266;\244\3652=\350c\320\274\376\030\224\273\375\241\317\274[i\005=\367\221~<)9`<4\223U<\327J\371\274,\r\212<\253\031P\275\024\231s<\302\274\365<\3713\372\274#^\354<<]\'=\347\000\276<\366\325\333\274\357\360\027\275\373$c\273\336\311;=(\263\357\273\251n\347\274d\333\326\273~\022\023;\315\305\231\274QmZ\274\214\005\325\274\265SG=\343<\251<y\007\014\275\353\321\"\274VK\037\274!3\027=\024H\217<\216\213\334\273ER.\273\033\273A=NZ(\274|X\224\274\247/\030\275\326{\356\274\325\310\242\274\237\350!\274\036\246V=L\230\000=\322\025H=\2360\241\274\216*R=\253\341\261\274:\355\037<a\027/\275/\005\274\274\305_S=<\202M\275\276\005\261\274\t\032\022<3\253\022<)\032\376\273\237\003(\274%_\355;s\263%\275,J\013\275\343\312\372<\224\005<\275\200\247\321\274a\035\303<\007<#\272\300\300\271<MV/\275W\217!\275\3660\005\275%\336\023\2757\244\367\273h\006\265<\007\214\023\275\362J4\275:\n\212;\244\213\374;\002\305\021\275\363B&=\007\206Q=\312\207\007=f:\030=\277\027\216<\304N\204\273YI\007\273\217\223N\275\277|\250\2746\332\036\275\217$z<Nq\223<\337\013%=\237B\254<\342\367\326\273\300\030\206<u\017)\275\242n\262<q$H=\010\340 \275\373~f\273\277\3109\275\263\366\264\274\316C\023\275\246\261\351\2748\022<\275\005\222<\275\032#I\275w7\264<\220\343\372\273\210\370L=\353\256\\=~`/\275\025\227\\\274\"\272G=\027\263\360\274u\020\217\273\357a\367\274\373t\006\275\356\365\216<\177^\326\273\211>?\275\030/H\275\330f\243\274\253\342\031\275\221\361S\275n|\025\275\334Q\024\275V\022P\274\362\265-\275`\216\331<\263\364\016\275\3572\271\274\000\003\276\273\236\034\003\275t\017\343<\275~2=1\277\035\275\255\203\241<!b\273<\327U]=+\314\"\274\311bV\275.\024\232<\r\243\016=\347t\220;T\366a:\000\n\305\274\"\345?\274\276,\261;\372[U\275\225\237W\275\027\2153=\235r1=\263\265\224;hu;\274d\2422\275,Y\037=EKK=\320#Q=\304\233\335\272\375\033\000=\253~\272\274BT>\275N\225E=X:W\275\204\241U\274\307\016\314\274q=\307<\016b\214\274\374!\234;\341\010\257\273\033\205\366<d\234\240\274\337\216\247<\331\300\'\274\313H+=\016R\360\273*-T=7\237\335\2741\202\275<\244\353\023=\342\251\031\274N*\342\273\263\314Q=\220\372\260\274&\357I=\206\250\007\273\026_l<\342P\354<s%.\275\373\331\270\272\276;N\275\351).\275\372\236\033\275\022\3310=\356.\037=\024\025:<7\001!<\"$\227<d\002\021\275pq]=\337X\224<\214s\2129!\364\253<\264R?<\260RJ=-7\327;)FE=\213\354w;\373\255\211<\200\375S=\311\214\005=! ;\275<T[\275\004\226\022=\326\320\255\274\214\016L=T\004*=}\r<\275(\236\020\273\037\363\211;\325+0\274\276%l;/}\n<\272\007;=\034\235W\275Q\211\r<Z\242\264\274)oY\274\365\2469\275\311\312\245<|\214\022\275\312\317(=\316\035\001=\312\315D\275c\216\213\273\001\276\005=H\241[\275\220F\264;\022\214x\274\310\270!=\235\307J=\201\327\024=\350\003K=\303}\242<]*\374<\276\031\311\273\300\244\216\274\372l9=\316\003P\275\202c\345\273\241\366\331\272\\\363.=\034\327\010\275W^\321\273\317\300\277<\214\372\236<[@\323\271x\250\314<\234PX\274\030\005\240\2738\010,=\021t+=\253\006B\275\371\240{\274\032\032P=\261h\352<&\007\212<\371b\330<\302b$\275G6R\274M&\036<2\213\211\274\204\201b\273Q8\257\274\026|W<\\!\344<\030tg\274\206n\341<\003\217\"\275K\260\026\275\256\316\016=\203\027\001=\037`\022\275\t\233\"\275ikY\273\342\241\254\273j\025S\275O\0027\275\365\240.=\025\005\353\274S=\217\273\363\310\320\274\032\\\252<\334\"\030\275\347\377\026<\205\030T\274\361\006\026=\276\352Z<VO\354<S-P=\210U\010\2738\331Q=\201G\":\t%\030= \027\204<\301#\336\273V\344\373<\366\t}\274\322\323S\274\r\014\336<]\3563\275\336\023\256\273\034\253!<B\307J=l\r\026=\271-(\2740\233\355<\003q\273\273\312\3039\275\362\020\003=Z\036\361<\240\206[9\364\230.=\363\232-=\242n\013=\217\347\367<7\353\202<p\220K\275\255\376E=\217\024\020=`?\266<\221p\266<\026w\346;@\343==\2428\375\274\300w\023\275\231\371\001=\341\2648\2747j\230<\371\002!\275\275\025\031\275\005\372+=\036\347$=\342x\306<0^\324\274\036\260\373<\270\345\250<\341E\260\274\272J\022\275h}\027=\030M\013\274\317\225\032\274\206s\025<\215w\317<\241\334I:\347GA\275|\203o<U\240\231\274\031\350\335\273\203d]=\373\020@=\220\006\320\274u\241.\275\202I\010\275\347\rK=\346\265J=G\267\001<~(\003\275\246\t\t\275\317,\264<\357\260M=my\356\274}e\252<\361\252\276\274\007\200\223\274\020\0270\275\014[Z\274\356\375\343<\025\204\211\274\033U\004=\026\354\341<!\300\005=]\340\212<a\244\370\274j%\332\274\240u\005=\202\317\322<y\262\372:p\265>\275G@\"=\356\273L=K\016\262<\225\311\217\274E\306\215:r\207\375<|R\333<4\032!=\340\001\353;Km\021\274\'\363T\275y\207U\275\3517\306\273b\304\343:\211oS=\236\216 <\357\215\327\2748s\325;\340\375\023\275\266\230D=\250\302\016\275x\226\266<\003\273\376\273\343\210\001\275\300:\032:|EK=\364\260K=P\010\201<\371p\306;G\271\003=\363\014+\275\\dV\275Yr\024\275?\340\013\2759K\256\2743;(\275\017{L\275~eS=\230\033\335<Z\330\306\2742\356\272\274\334yA=`\356\276<\343l\327\274a\3025=\025\315[\275M\250?=\346\204\306\274\270)Q\274-\000N\275\206\022R\275\234\316\225\274\346\357\363\274\014\302\372;#[\034=U\3768=\240\246\200<\2214\001\275\215\ny:/\250\\<\271\025\231<\370^\001=ZqM<\307\3179=]X\372<\223t\202\274\304\013\n=t\247,<&\374\273\274\231b\357\274q}Z<\361E(\275\372\004%=k\215\274\274m\346\013=EeI\275?\r1=s\204[=\377;}<k\036R\2752\270\275\273\266Jq<K<\026\274Zl\243\274\257\032\323\274iHP=\266\031\037=\226^\300\274\"\373\226<T\361\024<\270\325o<\235\007,\275\214\301<=\377NM\275\316;\300\274?\235>\275\303}\215<\335\262J=\247\353\355<\226\206\320<\271\336\232\274\206\325\330<}\006\3179%\273\313\274\363\321?\272\304\352\275\273\374V9\275\275\321Q=_\306&\274\377\314\022<\324\317\223<\037\\\225;\376\273\000\275V\250J<\373)\301:\021\2367\275\246\334I=h$)<\225c\006\275Z\341K<\252\232\254\274..J\275d\234-\275r\314\035\273\200+\347\272cX\260<g\264 \275\352\333\035\274\034\257\340:\236t1<\020\264\213\274\213\027<\275\001\331\020\275\337[O=\366\322L\275\324j\220\2749\016\207\274^\270e\274\257\230\200;\013\017\263\274\256\234\346\274\261\330Q=\212}\367\274\000\006\"\274\243\277\026\273}C\305;`\322\256<r\264<\2752\030\301<\334IH<K\330!=Xf\033=]\200:=\322\221x\274_\372\350<\371\221\t=\277-/=?\222\354<\233y\031=\017\2640\275f\025\010<\016\352\035\274\207\312\017\274H\223\013\275\271\035\362<\244`\315<\250r\271<\"\356\n\2756\307X=\022C\246\273\360\317.\275\335RX=\027\007\030\275\310\340g\273S_\030\274\212|Q=z0\030=GjG\274E\214\224<8\003G\275K\021\023\274nvI=z+v\271\364\003\220\273\323\364d:\261T\001=0G\232<\233Q\234<\2526H<\247q\236\274K\205N=\001\003z\274\225\265*=\211;\362\274\201\276\355\274\n\240!=<\206\202<\231\255\362<;\370.\275i\341x\274\002\031\023\275\366G\336<\276\236\376<\377\202X;U\344\006=\r\220>\275\220\026\351<\313PX\275r\\A\275Z\274#<\233\274P=\355\225m\274l\362?\275\316\357\375<\023\211!\275\224\014\352\272Z+\177;\333\330\030\2749\231J\275\327\"\312\274\240\363\t=4z\020\275\333\034T=|J#=\346n\305\273\026\002\361\274\276\216\004=\030\034>=^u\034=\006\317\340<A\372\222<pW\356<\302we\274\350\371\304<H[:\275_\031\364<\363?R=\232.\316\274\215<\002=\225\325\370\274z\247\n\275e0\225;\247\224,=\373\026\031=\315\270\'=Wm\326;\034\267(=\274\250\300:\247\246\226\274\234\360R\274\275\226\222\273\310\022g\274\222\325\266\274\343\344\270\273\241z6=\205\306\n\275\375\370!\272\036\253\254\273u\002L=&\344\204\274JY\234\274>\037)\275\363\024\213;f\347\022\275\362\375\027\275\226\037\253<\333\225\201\274C\251\230<\025 \020=\302\203\265<u\034\267\274\240\353\004\275t+{\274\000\316x\274O\010W=\017\211\r=\213\366\027=\230e\204\274\265D/\275\020\353\232<1\360Q\275p\364\255\274K\335\035=\000\250\223\274\306<\203<\266<\025\275@\365\025\274R\326\224\274\211\005V\275\237,\330\274\\f\305\274\325\2740\2750\251,\275VW\034=\211\250[=x\366K\275\365\327\256<\3554Q=\275\\G=/\277&=\306\306!;SeC=\265\272*\274\301\205\035=\3024N\274M\023\003=\221\303\020<{\350H=\317S\371\2741wP=h\207L\274&\r\314\274A%\002\275\340\262\376<\204+\035=r\371\276<\343\376{;\022\013;\275\007\250g<\266T<=\367;3<G\3620\275\202\230s\274-\247.=I\314\310\274H%\241\274\316\221B\275i\255\000\275\224~\205\274\324P\036=%\337>\273\375\220\277\274\336\037\331\274<\030y<SXB=f\034R\275\330\361\320<\364\362\265\273!As<ui\202\274\237F\225\2744Zz\274\362\344x\274\354W\245;\177\214\273;+\300\360;h\335P\275O\356Z<Q\254_\273\220\374E\275O[!\274\362(\242\274\033\000V=\345R\375\274I\337B\275\013k\001\274\032R\030\275\370\3711\275\372:\\\275\342)\245\274\'\354<=O\\K\275\004\333\314\274\035]8\275\236\312#=9\3368=\376\317\377\274\2444J<\364\354\257;\260\351\330\274P\347\207\273\276\2378=\264_:<\336\014\373\274h{\020\275\251\236\250<\262\333\242<\000\374\214<\022\243`\274\010\216\221\274\221\246h\274\241v\366\274\325\314/\275\023?E\275&$M\275\334\217R\273[[\363<l\237\361\273.\202*<\335l\020\275\253I\377\273[\030H<k\233U\274-\213\341;+\346\026\275\023\360\014\274\222Q6\275\256\323\033=\240\327\030=\032\261\256\274E\311\342\274WaV\275\254\231\256\274\320b.=\243m\252\273\323*;:\347}\261<\227\360\016\274\356\324I=\304\3421\274.\271C\275\277[\365<\321\354E\275\235\223\002\275\360}#;\376\330\232<Q=f\273@\236\363\274\332\316\n=N\324|\274UD\312<.\214\274\274 b\024=\207H\223\274cs\263\274\033i\036\275@\240\340\273W=\366<jN\350\274\244\021\242\274\003-\202\273\260;\255<c\227\253<~\202Z=\211\2677\275bgT8!d\311<\275_\345<\3623\035\275\213J>=LR\013=\313\340\323;F\323\310<\022`9\275rY\200<VK\250<e\345\223\274\204\360\217\274\340@\030\275c\2515=\323W\275\274S\2010=\010\003\007\275|\256\343<\326\272$=C\263\023\275\316\260\272<\033K\334<\224\3061\275#P>=5\322\014\275\035\364\336\274\262\311\007<\027\236]\274\306\206\256\274\022\204\216\273%\350<<\032\354\315\274O\243\272;A\362V\275}\261r\272\303l\231\274\252\207\373\273\222\242\264<\241\264\204\274\350\243N\274`\346\372\274\227\366\224\274\247:]<\356\225\274<\212J\237<\240\267\320\274=p:=%]:\275J\373\244\274dxT\274\362\352\337;o_\'=\250w\334;\327\244\310\273/w!=\206\3220<=\216\356<o&\206\274\337\271\'=y\2328\275\371\327G=\371\354C<\264\267:\275\370c\037<\245=\354\274\'\306H\275\241\212\335;u\257\331;^\257\263<\3142\n=H$J=o\234\\=\202\273\214\274{{&=\236\254\305\274<\311\032\272\306\360%=\026\205^\2744)\"\275m:\352\273&yJ=\235:\371\274\321\331E\2754Y\036=\213\223G\274i\274\032\275\"\361\205;\265\227m\274\215sl<#\320\004=\3666\000\275\n|\330<-\231\356\274b\246\267<\310\322\343<s;\220:\024\217\026<\202\0364=[\304\302<\362\021\023\275\230\320\022\275\205\027I=\240e\364\274\004\370\303<\3156\221\274\336sh\274\024\306X\275 ~\006\274\'\3510\275\003X\345\274fj2=\322\371\246\274\003\264\004=\267\327C=\330\005\261;s\307\357<e]L\275Mh[\2750r\344\274\232\2620=\tT9\272\354NI\275\212\324\034<\010 X\275\304\374\037=\013\267\027\27585\336\274\035\212\021\275\034\332\261\273H\344\363<pLV=i\371-\275\016\3375\275t\367\033\275e\2158=\3018\000<\004\000\021\274\023\223\255<\267\274\323\272$\277\333<{\201K\274\267p.<\275\r/\275=\311L<\356\231m<U8c\273\232Q\225\273>\361*\275\247\224\360<u%\351<\013M@\273\2367\313<e\263\272\274?\023]=\377\333\267<\255\344L=v-5\274\351lT=/K[\273\200_2\274B\371v<6\'\354<]\236\016=\304\330\n<4SV=!3\376<\2368\n=qt\023\275=\"P=s\265\201<*\220%\275\232\210\330\274\334\307\260\274\024\\_\274On\344<S.\034\275 \340\214<t\363\000\2754 \360\274\326\254\254;\007\265\334;\242\212]\275\234,\221<\034\021\000\2759\243p\273\255\026;\274\305\241\313\274\353\306\354<\256\014\032\274/?\035\275\017c8=\371J\257<1\256\352<x\204:=z|T\273Hb\276\274\241\034\276<\324|C=\230?2\275\201\260\232\274e\241p<\265\272F\275^G,\275!SK\275#E\313\274\222\200G<49\347\274\252CB:{9R\275\374\326\302\273\237\252/=g\202\017\274\303\t8=e\">\275\036\242\n=\371\351\304\273\300\223\335\274P\022%\275%wY<\202\027D<\001.\010=\337\242\024=]\375\035<\377\200\270<\024\361\316\274\025\020\024=!\2722\275\005a0=SJ9\275\321\221\235;\032\026\\\2753t5\275\247\034\030=c\213\213\274\351\251T=\017\\\356;\361f\013<@\316\304\273\372\354\301\274~\341T=$I\017\275\001!\375<\277C\014=C\357\r\275r\217\037=v\027G\274\r\373\226\274\344\211v\272+\231\357\274\234da\274\277\377\n;\023\332\341;\204\367U=\"19\275wh\t\275\027\217\026=w\315\206<\262>\021=\365\271\225<\211\2554=\317\232\250<\340\340l;@\032\200\274\310\3646\275S\243\220<\306\207O\275\276\272\005\275\245\344\340\274\226]Z;~\"=\275\375\201)=yW\227<\234\031\351\274\235\265i<\250\262q<!\017\2159\002\2414=)\020\325\274\3220\225\274\304\317\010\275\215\036:=Z\333D\275\373h\014=\334\t*\275X\277\221<\265k\334<8\313\025<\035\266\263<b\213\210\274~A\352\274\315\025\037=\252Qo<\tx\360;N\312\003=\247\\S=\211P\251\274\030\275\231<\366\225\024\275\025\204\267;\0136!\274\"\240V=2\257\203\274\356Q\215:\373\363\\\275\313\024\314\274O\206\356\274\002\3128\275\020\334\233<\354>f<c\273\226<\032M\032=\376M\276;\2743J<\207\203\324\274t\203\234<(\260\016\275\026Z\303<\247{\317\274R\371\212\2741\0215\275\037\234T\275C\276\305<\036\350\245<tg(;]\214!=\255\225\000\275\004\313\356\272\265%\030\275q\311\206<\024<\376<\346\220\031=$rL=\320\305\021\275\346\305\244\274\035\264\023\275\202bJ\275\232Z9=\242\324\030\275\217n+=aQB=\271\326H\275QG\270\274{\000\021\275\307\357\013\275\231\231&<\001L\343<X!b\274\370\351\366\274A\370\376\274\360zC=\232>\362<\000\016\037\275\343\030A\275\327\316\002=\'\340\016<\"\267\r\275\342\236\245<\262I\325\274\252\327\232\274,\266\335;\242\"\303\274\3367,<\246vW=\304\344\023\275\223\004\351\274\234|0=\005\324\200<\265Y\227;s\032Q\2757Ti\274k1\366;\007c\001\275.\354\3739\273^\252\274\235D\031=\335\247\241\274cn\211<,\\\033\275\214[\207;\225\371#=\002\t\221<0\312<=\275\275Y\275%\"^\274k\2638\275\240\243\001\275\367\364-\275\016\333)\275\202\350[=y;\342;\361\221\354<\246\234\201;Li\342<\342LU<\256W\302\274\220\021<\274+u\203\274m\366\340;J\254+\275\312\377\024=\3615\016\275\315*\024=\301\251@\275\345\307\271:G\000K\275aK \275J\314\344\274\022nC\275\"\260B=d\333\006=\247zB=\235\2530=\r\206\277<i\037\244<B\306F\275\365Y\014\273_\014\014=O[\034\275\252\323\320<Y\326\276\274\335\026\243\274\220\n\355\274T\020\325</\276\r\274\352\014\000\275\271\013;\275\353\2747\275\272\270\362;\016X\335\274\021u\004\275W\207{\274\021E2<@^\332\274\026e8\275\361\201V\275\264\247,\275EJ\037=u\217\275\273\303\207\'\275\276&\306:\374wX\273\240\230\370\273<\267#\275!\341\014\274\333\346\026\274\364\377\014=U\357\236\274?X)=?\335J\275=\257d\274\371\n\372<\266\333\034=.P0=\361\032\036\273\363\315\027<\030\244Z\275\260\260t<+\226\210\274tNy9+8\327\274\230\346\364\2745.\177\273N&\004\275\332\031m\274y\376&=\277\334\311\274p,\\\275\227+\272\274j\253\'=O\237\310<\321X-\274D\217J\275\211\031S\275\206Q\037<\334\004\362<\336\250\311<z;L\275c\353\342;V\215\002=D\247\234;ka\311<\340\0261=\023\322D\275uZ\030\275\023.|<\277y\033\274\354\267\014\275\003\036\002=_\036\016\275j\313\211\274\214n\314;\215\010A<\212\203\002<\031\3729<\036\201\261;\307)\341;\026e\217<Y\302\364;I\250\242\272\320W\201<V\303\321;\214\367\021;6=\"=\224\234+\275t\361\305<&L==k-\374\273\014\274d\274\342\201\004;\253\2613=\307\344?=\364}x\273\036e;<%\276R\275\364\3139\275\370\303\023\275\254\177\325<\353*\013=r\200[=C\377L\275[\325\336\274\246\"+\275\2643\237<\254\357!=\372\372\340<\"c\013<l\242\245\274\230G\327\274K\266\327:w\000S\275\357j\031<\352\232\246<>\023\341;m\3145=!\306&;]\225\237\274\t\243L<\'P\351\274\016\322\006\275\336\325D\275\\\353\026\273\220\034\022\275\376\310\324\274h\030K\275B\337\030=\215\230\013<g\024\207\274x\r\004\275|5\315\274\355\252\033\273\370V9\275\"--=t\305\025=\245\220q<=ki\274\333\261\301\273\336\301v<d!\014\275\232\326-\275cUK\274:V[\275tS]\275\t\242\231\274!\001I\275\034\351u<\362!\374<T\233\031\275\033N\220;\223}\313<|\021&<m\030%\275.\346O=f%\231<\020+.=Y\332\336\274\013\341V;\000\365\312\274\357\340\345<\370U\264<\245\270Q<?\322Y\275\006\214\217<<(\027\275\\\203%\275Q\000\364\274v\225\331\272[_\224;G\2028=d\302?=\330\343\347\273\361:Q\275\256\024\243;}\n#;\235\306\356\274]\214\315\274\375\355T= \363\276<o\311\233\274\251\031.;\030\304%\275\337\261W=\333i\227<\352}\304\274{\341\353<\tWX=,)!\275\323\233\037=a\211\016\274\006\246!=\341\326%=HIY\275\337f_\2748\036\325\274\315L\031\275\241\001\003\275\014\232\255<\376\037\200<[.\030=nO\323<#o]\275\004qR=-o\001=\002\232\205\273uc>\274w\274\033=.[\340<|C:\275\033\222$\275C*7<\351\353P<E\302,=\3558V\272\362|Y\275\227^\340<\227\330\035=b\227T<\331P!\275YCA=\334\342\227:\242\257N=\007R\\<OKX\274\014\263\300<\201\323^\274kO\345\272|4\371<&\330}\274s\025\336<\325\2678\275{&\277\273\213-I=\325\307\020\275\327\254\370\273\265\004!\275\357\230U\274\021\356\001\275\026\272\016\275\250\3072<g\315\350\273\206&\376<q60\275lC\214;a\233\322<@\r\203<l7\271<\317\343\375\274\246\340\206\274\352=H=J\030I\275m\264\350\274\007\264\2718\215\221==\226k\225<\221]\261;\032B\'\275.k\010<\367\270\001\2758\275\377;9\365\356\273\367\007M\273DkC\275\336yp<6\025\321;\022\231\033\275Q\222\351\274\217\003\352<q\207\266<6\347@=\010\250\376;\352x\'\275\3579U\274\nO\220\274\005\334\273<\256\345:=\337\032-\274\335\263I\274\263\031\205<\316\325n\274A\".\275\344M)\275\275\344\225\274.[\224<\017\235\277\274(@\262<|\310\375<\325\027\332\274\307b\"={\214\032=\255\212\000\275\361\312\314<\272[Z\274}m\000\275zl\201\274\003[\260<\\\306n\274\350\207e;\313\337\000\275\007\024O<\202\347$\275\377\226\325:\246\201\255<_J.\275\035AL\274M\376+\274\003]\370\2745\336\032<\275p\321<\210\302-\275\360o\220\274N\342\343;\'\257P<\357\0104\2758l-\275L>a<\345\364!<\222\010\031;\302%\035;\261r1\2756\252l<6*0=w\342\021=,\234\014=\347w<\275\261\225\362<AkA\275\254\237\017\275\225\3370\275\207\004T=X\366\300\273\373\205P\275\354\204F\275L\266O=\330a\030<\341\364y<n6\016\275&\035\342<\372\177\276<\231\322\026\275\'\364\322<\016\347\310\274F\037\321\271\\\215\226:\257\370\020\275\202\325,=\273\327\343;2\266F;5\032L<\031t\013=\243\312\227\274\r\303\301\274}R\331<\000Y-=\377\275(=\273RA\275=D\346<\270\t\016\275#Y\021\275#\325\022=\"bI\275\2541+\274Q\267-=\377\013I;\220\\w;5d\035=\342\024\274\274L\306Q<\003\322\222;|\315\021=\2515\003=\207\253/<\2035\261;J\277C=|\351D\275\230\311^\274\rt\004\274\003\300\003=\004\223\254\274\216\007\376\274\207\245\033\275\344\200\320\273!\274\337\274w\245\001=!\177/\274\207MH=i^\351\273\020lV=\246d8\274?\350\002\275\261\n\234\274\223\275w\274\203\2251<\342\254\254<\t\216\314<\212\323\022\274\364\336\036=\347\024<=\027\0340\275\320\227z<v\207\\\273\253\313\271\273\21067\275I\352>=\220Q\327\273j\001\336\273@!+\275\313h2=\256\311l\274\220\365\007<\021-I\273\212\301\210<\336rs;\014P\001\275Cq@\275\312\007\202\274Y\253\306<\034\016\003=/\254\237<\265A;\275\307\235\356\274C\203P=\177}J=n\';<\361\273\212\273\002\323\220<\t\225+=j\322)\274\027\3132=7\355w\274 31=\033\224;\275e\352\n\275Nb\234\274\317Y\256\272yo\273\273\370\304\274\274Iw\310<\313\364\r\275\\\"3=\222\254\234\274\327+C\275\346.G9_\200\001=\205\3061=\036W\017\275\271\2425\274\231@O<\361\306\035=`\223\352\272\312,\215\274\321\214\215<\255}\026\274%\233+\275-\240H=\032#o<\210A\371\273\316E\267<\247\016\236<\"\241R\274\033\354\030=s&;\273\303\025j\274TrN=\347\242/\274\250\330\217\274y\327\343;=`U\275\264=\'=\267A\302\2743\337\310<\211\016B=1\216%\274O/t\272\021\354\030\274E\020\010\275\253\337\034<_\200S=\312\317\032\275Q\014\n<\2006\025<\273\272\032\275\210i\030=\205\247)=\034\006@\275Vf\330<\030\366\020\275}V\243\273%\316@=B\343\351\274\322o6\275\344\037\312<\212\271\244\274\001\210\3169`\377X\275*\262U=cpF=\373m\017\275\362\225L\275/\331\254\274O\230\032=\266\304V\275\000N5\273]\274V\2757\366J\273\\\201L\275\177\347Y=\356\007k<\354-\374<\025\206\035\274\227\"\236;d\355\010\275\244\235\324\273^\353>\275\336b\256\274\376\2721\275\3714\370<\365\243\311<Nk\224\274\371 \332\274#v\034=\310\265w\2745\007G\275\206eH\274W\230F\274D\222G\274M\326\277<\0106m;\3739\037\275\357\335\261<jWF\274\001\003\315\274$\306\234\274\220\201\277<Rx8=;\327\305<\343\247\357\274\222\305\325;\356\200L\275\362\207+\274\337\253\026\275\004{S<\352\314<=\006\2134<\255\002A=]\030\032=\245}\207<\3039Y=k\322\034\274\2501\"\275\204\306\016=\211{\317<\376\326\021\275\324\355\037\2751\r\377<*+\021\275\333\224#=At\332<f\363\242\274\327ED=\'\355\365\274\357\357Y\275R.\232\273{\357\033\275K\256\222<\311rS<\313\331\007=\007\235\237\274H\2353=\027\023\016=\252\342\223<>\r\352\273\216v(=\222\002\037\275\354G\016;\230vC\274.\n\253\274\327\304\337\273\316\211\304\274\3528\002<-\244\t\274\010\005\370<\034oA\273x\000.\275\231E\230\274\006R\r\275F\016\233\274\316\005\326\2737R<\275\276f\227<\316\311)<m!X\275\2739n;\207\344\030\275(75\274\357\240\223<Z\207\307<\204\376(=\016\251\'\275\344\346\370\274A\004E;\035\222l<w$\003\274Z\364\'\275/\"\205<L\376\304<8\005\235<u\355\333<^\234\272<g\204\033<\207\t\003\273F\006\201<\251\323\216\274\315\2127\275$\342\212;:5J\275\034\026W=\237z\320:\223\251\014\275\"\206P\275s\010@=\207\014\003=\314jI\275Z2\255\274}-\311\274\205\024\"=`\2126=\271\254\275\273\267/#=\237\002\004\275$\024G<T44=\325k\266\2743\037\357<\227\353Z\275\367\225\270<\201\316\305;}\0232\275\277\332\016\275\267\342&=D\377\004=\033d\254\274\021\006\037\275W[\224\274l\014\306<\356\013 \275\010\365\212;\223UD\275\241\023X\274\367\007\347<\347bV\275j.$\275h\303\371;]\362\025\275\206\034]=m\360\357\2738\351\005=\233\017\\=#\025\026=SA7=#\237\343\274\2039C\275\203@\205<\007\310\343;\374\2640=\355\302\017\275\343W\265\274\246-<<0\343$=\216\262\007=\235\312\207\273\n\032?=\331\210\321\274^1\020\275\035\r\025=\362e\264<\251\002{<>\225+\275\347\004[\274\354\306\273<\361\215\\\275\033\224\260\274\3051\305;\207?\354<\236>;\275j\371\030=W\367[\275k\372t\274>F%<\221\2346=\t\263\023=Y\207~\274\316j9=Tw\257\274\202\236\031=\007\211\010=\351\026Q=\241\336\036=\033~V<\276?\322:|~\371\274\037\217\n\275\3367\022<&\361\234<6o\003\275\301\3450<3\'Z\275\032|L\273\254R\217\274\003\345\031\275\247\222\243</\022};\267\311\233<\343\3206=\225\273\272;\035\"A\275R\307D<\325\243>={<\264<P\277v<-\r\246:\nMF\272\331m+\275\030\340\033=\313\342B\275J=1<\3130\177:\\F!\275\266\342>\275\"F&\275\333\302\337\272\333b\250\274\374\330V\275f\375U=\327\372\354<\030\311\023\275\375f,\275\321T\232\273\345!\350<\261m\215\274\253\005\010<L\357W=\210\343\'\275Gf#<\323>\275<G\001\314<*3\351\274\312\017\270\274\337\236k\272\246\365\346<Z<\035=\2254\177\274`\331\360\273\016\202\321\2746/X<\007\207\277: \336k<n\230\032\274u6\002<\326\030a\274\302<\254<u\341-=8(\273\271/6\354;\266\3452=q\0048\274\016rA\275^b\265\274n\311\t\275\n\266\317<\343\271\223\274\362\031\274;\026:8\275/@-\275r!8=\327j\025\274\221\224W=\203\033H\2748\327-<Hp\312\274\036\013A=\273\224S\275}l:=\t\365\352\273QK\266<T<\037\275+MH=\361.;\275\2416\010\275\224\325Z=\246\321\027\274)\345\262\274\370b\366\274\177\236\001=\202\013\320<w\231Y=\216J6\275\3634\331\274\255{\010\275Os\002=@\333\257<\321\277\r=L\276\277\273\005\231\212\274\320\326[=aP\373<h\034P=\376\206}<{F^\2744\251X=\315\365J\275\361\005\"\274\006\373K\275t\253F=\216\2074\275\005\036\271;B\334$\2749\032L=\260$<\275\240U/\275n\323%\275\276\353\034\273v]\024\275)\363\255\274?\267,\275kx =R\305/=l.\226<\035\377\275<\372\305@<\343P\356;\373(K<>\341\024<\0073]=@~s\274\263m\374<\211\323\204\273\212\2142\275U\323\356;p@\013\275\005\360J\275\344\006U=\235\0323=\257\2475\275\275\342{<\354\321s<(\345\037=\326\337)=<\213\374;\263\223S\275\266\026\211;!\027?\273r\315\364:\336\036\325\274\r]\t\275\005\375\022=\242-\032\2752\246Y=\341\217\3109\356r\315\274O\241K=+OT\275\220N\364<\027\277\367<\315:!\275\374D&\274[\3330=\232\242\036\274l\302\202\274\224 \274\274;qC\275\"\333\235;v\306 \273\246r\364\274\031C\335\274\0160\226<\347\343@<\330%\"\275\361\331C=\232\2372\275N\324\210\2743\307\003=\332\\\273\274\311\334\023\275yt7<\033I?\275\331gW\275\230\272\030\275\372\213\021=%=\315\274\037J\035\275\331\355\361\274\342T\227;E\207\355\274Zr\374<\207\366\213\2741\036A<`>\013\275\376\035\n;\2259V\274\305\255\001=B$\325\274\204\231[\275\321\301\273\273\326\023\036\275\222\256D\275\310\255@\275\360\325\021\274e\223H\275\350\261D=\227\t\027=\276\325\227<2\204\"=Y\241(=\262\333\220;\000\372\003=\274\327\205<\036\365\315<\203_\246<\333\003\016\273@$\240\274\034\232\021=\306\317p<\325\356Z=\244\rO\275\235F$\274G\333\235<\245\214\371\273\026!x<\235\316W\275\363\034l\274\025\262\216\274\372&\267\274+6\303\274]\246;\275L\357\032\275Y\366\366\274\263\336-\274\233C\303<n\364\003\274\336\257\337\274\005\361\244<\250\177\365\274Gv\251<\236wR=z\3510;\337\257\005=8\377\n=\t\344@\274\255\276\312<\3411M\275\237\242:\274\225\306\303<\270i\n=7\3658;9\272\010\275\301\333\332\274\356z\265:~\246\365<\373\016+\275$\357\336\273\240\310\007=9\222\372\274;\351\214\274\235\257\"\275\256\3266;mg#=x\021\204\2738\321L=\225\260\322<%\3424\275\035a\027=\306j&<\302Jx<F\003\034\275\322&\002=\341s\217\274\350,\027\275>\254H=\3726\030\275\030\203\014\275,WT<\273\\\334\273\034\373\275\273_\227D\275Fb\243\273\223\206\'\274\324\200%\275\347\262\031\274^&a<\227%3\274\323\242\332\274v\022P\275\024\r{\274\\t\267<&\252T\275\re\217\274\323BT=\3459\335<\214C3=\\z\013=K\341\230\274\232\312$\274\0106%\275\3476\320\274>\037\202\273\375n\r\275\217\3220\2745\'1=L\016\354\274O\021\023\275\365\304\356\274&\3064\274;5\016<q\267\305\274\250\314\243<\261\233$\272\221\360U\275j\225(=k\275\302\274\265\002\273:u=\016=E\025J\275\373\034L=\027\273\215\274\033\204\266<\301[\020\275\353\372\375;\334\347-\275\032>\226\274\237m)\274u\225\302\274.\242\\;\224\027-=~\244\334\274\210.\013\275\265\027\370<_\347\031\275?-\\\275b\240$\2755\274U=\016]\020=\354\025J\275\223i\332\273\036\030H==rE=hH:<r3:<\336\247i\2749`<\275\300\235 =\233\354-=\210`[<f\364Q=\324\226\301\274\310S\003\275\2337-=\267?8<C\377E\275\214\257\211<\"\203\355\274\275\037P\275~5\324<v\034\300\273\375?\\<z\304O\275A\255!\275C\274\033=\357\260K\275\036\314-=0\202p;O\365G=\272\261\264\274!x\271<\t\2667=\351Zr;\233`\024\273\233\270\272<x1/<\317\215\002\275,\3378\275\372!\373<\n8\326\274\237]\361\272\366?[\275C\356u;v\027\270\2745\265\200<\036i1\275%\252\006\275\246\323\036=$\350\216\274\351\344\340;x\027\212;\332\233\024;\210\013<\275\367v#=E\026\350:\245\244\033\275{O\024\275\244\361\372\274\232\002 =\3432\335\274\236\245\314\274I\003:=\252\260s\273\370A\300;lIK=\004\327|<o\305\313<\310\204\220\274\245\342 \275\260\3002\275\025#K=\246\002\304\272x8*<F\364\231\274^\223\341\27440\341;\333\030Y\274\341\236\031\275%P\202\274\035\361\301<V\003(=\256e\360<\245\314\300<\277\305;\275nL\027=\212\037\327;o\371 =\375\226R=Me\023=\210\177E\274\364\n4<\374\361\246\273\246k\\=6\031\273<\340Yr\274V\237\024\275\"\2605\273\207j\367<\226\333I=o3\'=\343>\025\275v\2356\274)\266S=\230\200u<}\370\036\275\247B*\275\020\303D=\240\2433=\0145\364<H\037\024\275\321\253p\274]\346\257\274\347l\"\275\356\327/<Y&h\274k|\271\272je\265;r[C\275U\275\323<\217\235T=`m\026<\300I\215\272dx\363\273\002\004N;\317\377\243\273\250}\235;He.\275\315|C=\321A\215:\301\'O\275\373\335\371<\216\211H\274\225[J\275L\276\363:\376\302\347;;\201R\275\"\333+\275\267)w\274\323S\263\274i\032\263<\361E\302<\226\224C\275R\347\003\275\213$&=8!7\275\016L\250\274\260\362\032\2753\214|<!u\227<T\221J=\270.\221\274\333P\"=\202\033\236\274\327\241\244\274\334\372$=J\321\312<9\212\272<H\022\275\272\340\027\201\273\361\tZ=\003\317\022\275-{$\275$&\021\275K\026S\275\217\351\245<\273k\301\273R\000\261;\025\331m\274\231m\366<\304\034\315\2740b\350\274\247\354T=M\257\375\274\231U\350;\351A\316\274\270\261\241\274V\234\017\275\342vu\274^Q!=\032\327N=\\kQ\275\032,\223\273\2365q\274\255\345\231\274\2539\361\272\013\267\206\274\030\312\004=\005\321\035=T}\200\273\020\303O=\016\2561=\327S\341;;\307\331;\035\267\352\274\003\030\217\273a\316@=\2371\021\275F\215\250<\273%\021\274\371\312[=t\2466\275S\037\023\2742$\023\275O\035?=$!0=\216\217\237<\003\337W\275\033Z\211<lcZ<j\370\350<M\230\230<x\327\230\274\264\010A\275\202O\n\275\351\275\010\275\340\320p\274\325\231\001\274M\':=\261K\232<\374M7\275\017H\251\274Z\246\242;-\306g<\336!\251<K\277?=\264d\266<\022=\221\273\020\357W=\214\275,\2736KZ=\363\235\241\273H\037\027=~\335\247\274\007\363\327;\020\367\303\273\210\247\\=\330\245\206\2749\355D\270\251\027\262\274\377\225!\275\034n:=(P\253;\254\363\346<|\037\355<\024\267\301<\255\366\033\274W=\032=\032L+=\350-k\274|\3106=\335\240J\275\352f\322\274L\277\270\274m\236D=\223\363\264\274*\351X=x\206\2069\201=\001\275\006\250\003=J\271)\275%Kh\273\003CO=\361\375\345\2732\tN=\222\263\265;\'zf\273\\\235K\275\312\323\037=5\367Q=\235k:<\023\333\325\274mt\355\274#V\215<\326\300\264<\031\313\363\274R_A\274\210R\\=\267\262\020=\010\367\334<>\242\031<\300\\\206;j\375\030<u3\267<\203{K\275T\365\331<c\343\233<\332\036:\275\367wS\274\206@\250\270\313\246s<\366HY\274\302:\233\274.\205\026=\366\246\241<GZ\023<\323K\001=8\352\006=\253\233u<N\032\260<\237\2401\274[\031%=s\247\253\274\205\236m\274,\204\343<o\232;\274\246Y\215<\236\344N=\020\323\375\274 \030\315\274\000-G=\330\037F<DF]\275\035\212\340\273hR\177<\367o\251\2745\374\215\274\261JT\274\330\264}<%F\271<9D\371</\333:\274kv\254;$\350\277<\266\002S=\245I\010=<\031\272\273\200FD=,m1<u\n0\274rG\341\274`1W=\334\261D\274\345\3136;\276\342K\275\342\371\255\274\270\206\323\274\347\370n<\306?F;Q\336!=5\326\372;\272p\026\273P\366\335\274\\\220\262\2741\2012=\267\\\357\274jY8\275\035\237\333<\342B\235<.\261\000\275\246Y\314\273\036\274B\275,e\022\275\240\022\235<{\356}<\232\202O=\335\312\222<\005}O\275\202\266\021\275&7\302\274\352\245:\275\250\314M=a\253\023<l\221\207<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
          dim {
            size: 4
          }
        }
        tensor_content: "H\352\275\2740SK=^\363\357<{\027X=\007\207\001\275w&!\275\210@5=tt?\275\327{<\275;\224\232;\203=6\275-\313P\274\225\240\225<\r\200\373\273\352hJ\275\r\260\007\275\214e\275\273\232%B\275\347\261\263\274\212\346D=/\313\300\274\2226\316\274\033\270$\274\351\257\020=<V>:\250\241\314\274z\334\215\274\305\226R=*\036\014\275v\307\344\274\000\021\251<Y\016N\274\031\350\210\273\022\213\233<h\3367\275~\033\354\274j}\037; >?\275i\3365\275\262\2468\275\302K\235\274\364_6=\232Y\023=\227\375\335<nWZ\273c\010#=\316\353\303\274\242\2579\275\212\261\033\275\245\241\024\272\217=\256\274\221\367\257\274\007\244Z\275^\023\r<\306\313\301<\345\243$\274\353\226\025\275\274\223\000\275\302\347\346<\372y|\2748\206H\274\365f\341<\"\025#=\027\226\335<y\0266\274\367\342\r\274l;\276;\255\036u\273vz =~\257\017=7\016=\275k2\237\274\322W\r\274@8\217<\214{i<\271q\327:\300\000\202\274\253,K\275*\210M\275\377\306\370<\327\354\r\275\216b,\274\036~\020=%u\330\273\023\366\226;>!W\275\230\317\360\273\246\301~\273y\345\240\274\010\370R<c\310\356\274*\225\032\275\337\026^\274\230)m<brx\274=\243\270;z\215\372<\267\321\241<&~3=U\377\360<\325\240\200\274=\334W=\\\2254=S:\262;\257\313\022<\001\204\034\273\203\314\223\274\302\252:\275\031\377\266\274\333\253B\275\375{\252\274\n{\024\275\023E\013=!\'.=\215\0245=\345\303M=^4\202\273a\336[\273\373\277W=\020\220\250\274*X\223:\272\212\350\274\364\2539\274\000\303\016<\0267\246\274\370\346N=o\017U=Z\373\033\275\tp\315\274:\025\230\273\033=K\275\260\271\030\275\323\275\373\274\247\262\016=\220zN\275\":\271<\352\331\322\272B\372\247;X\226<\274v`\023=\315F =\240{\360\274O[\214<\251b\341\274%\375\375<\327\367\005\275X\275\332<\014\365N=\341\265]\275\372\353\036\275\330~Y=\215\254\340\274:Kw\2741\323\223;\371kn\273\201\267@\275\026\035\302<K\345 \275{\360F=\201\367I\275\014\253%\275s\311\002=\244#}\273\262\303E=\223C\003=l\324\320\274\37154=\023\377d\274\250\273\353\274\251%\t\275\275\327?= z:\275P5>\272\377\325N\275/\204\n;\252\262\240\274\307\241#\2755\232\366\274\302b\331\2745\377Q\275)\370%\272,\231\003\275\322\246B=kQ\001<&\2652=~\n\335\274\t\n\025\275`\207\373<\246\320\300\274:\316\3458\375\r\257;[\355\013\275\034G\024\275\335\245F\275\n\200+\275]\211\372<o\006\032=\320\026\317\272\352\315\007<\0148\r\275N\035\323\273i\225\205\274\262\271\211\274\r\305I=\372@\200<\013\200+\274d\273p\274%\345>\274\340\365O=\333d\267<1\024,\275\362\2640\275\310\013-\275\277\031@;\244\004\n\274\230\200?=>\362E=~\260\222<B\206\025=K\3377=\302\371\001;z\366(=MN\"\275\tM\255\274\003\250C=H\220\201\274E\020\020\275\317&R<\241-+\275~\354h<M\236,\275\322|$=\344\325N<\345EB\273U\034\331<mUR\274\271\0030=@\224\t\275\201SX=O\303\374\274\366PR\275\212\277\037=\341I\360<\366E\242\274w\347u<I\310\\\275}\010:=8g\355\274\005P\270;B9\242<\260r\026\275D\336\341\274x\341\317<\010\277E\274\322`\252\274>\020\020=\251\240\307<\020p\247:\301PK\275~\225\210<\002y2;<\310\244<@\212\000=\013w\266;9\333\031=\276\266*\275\013\306L<\240 \204<\352\232\366\274\320\215\357\274\001\225\345<<\006$\275d\214\032\275\267J:\275t\305\325<\227\325\001\275|\230\263\273\013$(\275\304\331F=\0367:\27377\313:\304\264&\275v\270|<\233\204\327<=~:<\367\366\262\274\177\316E=*\0172\275\366/\210\274\204k\327<c\031\016\274\234!\303\274\240\006\233\274\353\330\222;\372!\317<\3532\242\272\354}\363<\305[\017\275\256\313\301\274q\204%=\034\203t;\352\312\210\274T\375\030=|\016H\275\275\256&=\271\373\323:Vq\272<{\331\277\274\003\347Q\275\214\030Q\275\221\267\237\274\276\2604=\235NI=\262\316\371\274db\006\275#\240\344<\311<\016=\022\352L\275\356\215\224<\313K\332<\267/w<H\r)=\332\036\030\275\203\031\343\273^\200>=\017\214\356\274\2050\031=\322<\356<\305\364\223\274\260\035B=\014\221V\274\234\222\214<\375\217\302;\257\0050=\252\200\266\274r.\342\273\211\331\177\274Jc\031\275\270\036\014=\320|\031\2741\300T\273w\207\223<\312r\032\275Y\357.\275V\303-=E\274\025\275Mk0\275\223\222J\275m\t{\274\255\242\237<\212_M=G(\r=n\215;=P(\215\274+\260I=\333v\007=Z\330\306\274\226\344\n=~\002\017\274z[\322\2736\004\001\274\325\275\276\274>\246\370<\340nj<\367\320\360\274\025c>==\024\276<\034\241);\315\302\237\274T\257\007\275\264\261$:b\267/=\007[\371\273\211_k\273\215\356I\275\325\203\212<7k\351\274R\3142:-t\232<\232B\376<J\217\305\2745\261\305\272\253&\002=*\010\275\273\305i\346\274\013\313\264<\374\350\350<\316\272+<t\006]\275\204v$\274\237)\242\2747\020\036=\037\274\\\275\002kp\274M\315\271;A\021\024\275&\233\022=\337;\330\273\372F\020=\272G/=\356v\353\273\320\025\001\274\367\210\215:\317\\\211;\305\036{<X\362W<\341$\024=\305\2369\275\010\025I\275\332\360+\275\217\305\223\274s\362\211\274\317\026x\274\326\341W\275p\177[\274^\234w<\312\327_\274\371\327*=?\360\204\274;\017\353\273\272\232\302<\236\310\036=<\3433=\232\r\033\275\306\316K\275\364\024\\<\243\233K=\271\326\343<\341\327!<h\031\263\274\367t\204<\245w\234\274\240\212\363\273\337\251\033\275\203]2=\037-M\273\227\227V<\034\211\026=\211\225\375<\276\203\342\274\375\331\224<9\337\275\274\314\203\251\274\370\313\305<\266]\221\274\266\337\350<?OZ\275\241N\333\274\241\316\214<\220\216\327\274\324\177\236\274$V\366<\310BX\275\243\240\261<\352\226\201\273nP2\273\261$!\273_k\246<3B\320<\\\205\025<\270\345\232\274;\324\004\274\023\200\307\274o|E\275\024\007F\275\225^0<<g;\274\000\020\3338\224\241\"\275\250\274\345\274\325\244\254<#z3\275\000\026O\275\342\327\027=N\276\264\274\205\233Q\2742\307*;F\271\034\275\003\256:\275\013\363\325\274\357.\002=\322\0205\275\351o\374<\325\270\263\274\3625*\275G\267F=Cg\345\273\263 \271;\rE\375\273_\300G\275\216\022D=\344\207\016=\340\342\333\274k\216<\274K\375%\275\377SV\274t\001d<b\234\027\275\374\214\212\274\340]V=\374\022#<\355\336\t=\245\233\007=C\2124=\037\002(\275$\323\021=?\233\267\274T\341\322<\\\r5:uaH=3\223\334\274\304|@\275\323\033\264\27424\226<\256\032K\275\304J==\025\334\233<\'\354/\273t\344_\274\205oY\275\300\021?\275\014\356#\274V^Z\274\213z\201<\250\250k<P\222#\274\\\037X=\014\021\200<\327oK=|X`<!\303<<\210\371\314<\300\335>=IP\336\274\362\034\013=\204\3567=7&\232\274,\220,<\367\360\013\275ar\217;\345c\026\275>\265\322\273\317Vk\273\274p\260<8\352\014\272\331_\036=s\024\n\275\356\202+\275\257J\027<\301\\T\274\367\334\010<\034i\357<\271f\360<\233\332;=\226\007\321<&\026+=\024\020]=\000\025\004\275\026\374><\005]2=b\277\003\275\355\033\250<b\266D\2757\2279\273$M\031=t\316\t=\020\006\315<\r\232\312\273^a%\275I\261\377\274\254\347\326\274\264\233P=q\367U=\340\206\272<`\316$=f\240\247\273\277^K=\032\"\213<\3352\226\274\306s\262<\350\252\210\273\255\375I\274uW-=\300\307%\275\000\022\"=z\311U\274\207\343\306\274J7\014=(\\Z<\331\007=\275fr\337\274\336\243W\275\n\355\334;\337\335\014\274;\312;\274\2579+\275\341\207o\274\301\031\t\275o\263L=\227\\\247\274\"<\023\275<\210@\275]$N<\362ri<\351\327\277:\324\020\014=q\211\024\275m\264\364<m\021\336\274r*\264\271\t2e\273\2465a<\365@\026==\261\"\275Kk1\275\204dK=Ow\025\275BlB=y\202\013=\307\345Y=\3573\222<WSR=//\006\275s\007+;^\033\024<\274\377J=\013\357f\274%G\220<_(\r\275\020F-=\244\2718=\267\014\223<\202\351!=\264\221j<\274GU=)\235\005\275\241\376\207<\264\327.\274\356!\024\275\263s\001=\301\0332=\250\033\357;\024\306\273<z\317\234\274\026p4;\263\212`<V\0356=\274\316K\275\311\351\216\274%\221+\2740\340\252<kg\254<\206|\355;\311i\034\275\321S\033=\035\026\003=[\254\t\274\037\272\'\275\201h\035=A\377\377\274\275\361\244\273:7\316<\324\3054<\244\347-=\200\367\024\275u\235\213<\362AZ\275M\002*\275\355\033\004=*\242\240<\n?\272<Sw?\274\274D\233<-\010\341\273n\375T\275+\355\236\274z\345\013=l\351T=\260P`<\205\306\352\274\212\014\t<\265z\364<r\223Q<4\016\022=\332\266T=*\265\007=I}@\275\177\331\357\274\3056*<\357(\245\274\177\374$=_k\277;\364\357\232\274\375\276M\274\275\226(\275\003\332\231<\277\201\3719\360\246&=XF\"\275\377\004\'\275\\\243\234\274x\331\345<\251\233\260<\240\262\034\274\203\236\205\272bP\236\274\355\330\001\275\347\321@=N;\256\273)\026==\347I|<\262\335H\274L\365;=\213\236\252<\"\352U\275\034Z\306\274J\200H\275*\370\332\274\231\267>=X\343=\272\274\020\350\273\274\005>\274\215e\205\274\345\310\326<HV\346<\037^D\275\257\355n\274\373M\373<\260\200<\2754\0323=\261\316#\274f\"\316\274\200\031+=`\200\\=\253\343%=p\006\n\275\247\tG\275\232\225\267\274\365?\"=\356z&=%=K\275\315\003\333<\003T\013=\306\0353\275\242\326\025=\360\260\220;\031\242\331\274\333u\241\274\327?>\273\310\357\'=\263\2727\275\225\305\034<\210M\031;\017\333\"\275\023\364\263:\335\236T;,\2254=F\014\260<0c<\275\332\331\325<\210`\330<\220\276T\2758\315\031\273\255 \007\275\352\001\020=\342\346\035=\242\000\025=RK\025=\241_\374<k\006\257\274@\310w;\225\221\353<CC\r=e\3148\275\343G\200\274\377\315\017\275\321dn\274\377n2=\220\306H<-\366\'\274\035:\323<\254\253\005=\024XF<\361\266%\275[\206-=\345\002\212<ya\363\274\326\0240\275u\214\013<\334\013\316;\340\250N\275jV\025=CB\364<z\310:\275Z\302\327<\257\3764:9\355C=\210}\"=!\363\311\274\006\373:\275\034\247,\275N\370-\275\332`\331<E\177\036=\023\342\247;\252D\007\275\2769W= \234\216\274\177F,=\276\326!\275\364l\020=x\3051=C\300\372<\036A\244;\263_\256\274tc\361\274n\325\241<\305\177\360<-\302@\275\302h\244\274+\321\374\274\367\3731=\276]H\275~L\250;\177\254\346\274\304\375>=\021S\211\274\037\275\361\274\243\020\353\274\3251\203;\216\277\021\275\215\250\374\272S0\303<0\373\244\274a\\\036<%\205\215\274\240*\307<\272\372)=\347l\275<\244~\343<?8N\275t\022\327\2748\261X\275\241\025\324<\213D*=w@Q\275\017\366\257;\322\2640\275\340\377*\275\344\2004=\3777[=\346\334\243<\232v.\275\002\227F\272\244\260P\274\243\331\002\275\265\361\227\274\0305,\274V[S\274\316f(= \245K\274<\271\240<%9\024=B|1=\220\227X\274\300\261^\274\307\366>\275d\261\203;\032Ii;\226\240 =\233o\210<\037\237\330<\377\000\201\274\330\3326=x\235\246;\231\303#\274\n\001\001<\210\260\035=/\027\261\274<\210\372\272\2713\020\275\300\372\233<\277Z\236:\035\240\017<\363}\263<\356\2202=\306\211\355\274\370\370\360\274\223\037%\275,\302\363\272\327\3568<\255~\004\2753+-=\332\260N=\213\376u<c\2119\274\241\364\033=\226\221\013=\204\002\337\274\212\273C\275\273*\005=P\014\020\275\371\213\014\275.\277\367\274\330yf\274\r\363\022\275\212\314\031<y\216 \275\222\313\243\274\347\033a<\264\017\030=7-2=\332\2716\274\332 \360\274\273\361\317<\267W\316\273{\235\010<R\363T\275\254\254V=\215X\204;\357\243S=n\3345=\370IY=\226\317}\274pRZ\275\236\362+=\267\261 =\343s0\275\365O+\2743Sf<\371\237\030\275?\017\006=\014\231\375\274u\027\005=\200\017\013\2751\276\316\274\263\276\311<+\215V=\023\354\222<\343\255\020={,\024\275\225\tA\275\310===\2773\"\275\364z\n=\227b*=\307\367T\275\354\247\000\275\374\t<=\006\216_\273&\237\006<\273\345\345<\206<\\<\267\374\241\272\263X7\2759<J=X[\032\2754\373\251\273\3647f\274\377\332\321\273\'\335\315;e\013\360\274\212\355\324<q\3070\275s-\274\274V\214O=d?\232\274\227\372&<G\304[<\302y\250<\227Z\002\274\325\250c;_\246S=\227\007Z\274\270\217`\274\212\313\345\274e<#=\272\234\327\274\2762\225\273\271\306\252<<\272\211\274\'\324\034=x\334\212\274\000\204\350;z\352\324\273M\215\303\274\026\276 ;\262\306\003\274\344\236\234\274\300\275\235\272\244\330\005=\257\306s\274.W\344<\252$\034\275\237\004E\275\021\261\376<>sS=wh\251\274.\361\036\275\030\333z<Z\252K<u\364\302<\372\264\365\274Br\267\273\325\030D\275\304[)=\204\257 =\244\331:<\243\221\303<\272@\026=\021\247L\275 \241<\275\037P\202<\026\002\003;V\211C\275es\274\271[42\274x_\207\273Z\323M=\373\374\326\274\356-\373;@\226F\275%)\024=$\277\370\274\031\212\234\273\010\247\274<\00239\275\211E\257<\321\3274\275\272\202\032\275EgN\274:\350\303<\357\177>=\250o\036\274\335\372\3278\353\2224\275\362-\361<\360\362\306<\325\020\240<\017\030\211<\306\227H\275\026\351<\275\352\277\240:^\240o<\373\322\006\275\336I\022\275\245ZZ=\331\361\032\274\212\344\261;VL\274<ui~\273\277\332\336\274D\303\026\275\007cI\275\234\252\017\275O\302\"<8!\322\273\353o7<B\315&=\357\356\013=\261\331\372\274{\232\'<i\245\n\274k\240\342<\021\214D<\272{\021\2756\307\243\274l\300\313<\314\347N\275\177\320\020\275%\267b\273\313\234]<\272\333@=&E2=\260\223\203;KG\303<\325S{<7\033{<\'\343z<[\037V=\356\3113=AK]9\254C\222\272\220\273\321\274\312y\035<wg\016\274 &\322\274Z\3464:W\323)<r)\277\274\210n\213\273\002]Q=P\222\206\274\221H\003\275\253\336\200<\313Zz<\374w\244\274\333\243\317\274\037\300R\275.\326Y\275\317\030\005=yQ\030\274[\224\252\274\211[+=b\320\213\274\2027\t=b\241\315;\237]\327<&-C\275\340\2471<\335\345\207\274\316\326\t=Q\246\r\275\242\306K<:\245\t=\277`\036\275\033\033G\275\311\237L\275\0148\330\273\261&\365<LZ/=\313\273\247<\362\376\330<\226_\361;\274\217\313<\t\2545=\027I\023\275\265\314\377\274\355\254H\275\036\304\264;\240\276;\274\3406\221\274Y\245G<AE\224\273o\316\220\2731]Y\275\311j!\275\356\022,<X\311\032\274\360;?\275\277p\243<\033\366k:h\'(\275\213\030\276\274\nc\313<\204l\355;\305\2178;\004\363\207\274\312\032\241<\030\230\370\274\003\201\344<]\227\325\274\2222K<\2472\315\274\225\307\267\273\335\001\017=\024Yq<\276\212\331\273\200\305<\275\000\361\010<\n\3253<&X,=\244\310 =(\037\361\274\277\030F=\253\372P\275,<\255;\215\227F\275\n\373\033=\002\220\312;\226_\317<o \211\274\243\014\366<\326tJ<\364\367 \275\256,\016\274\034`\022=\3633\273\2740\206@=\251\022M=g>\030\274\200\346:=\367\034&<\366\202\302\274\301\236Z\275\243~\020< x\276<\2469\377\273q\227\206\274\265\214\257\274\316\026A\274\272t\277\274\031>\343<W\033\316<\334\245\302<\030\356L\275\201\224\025=\375\2101\274\211.9=m\210\021=\332\001F\275\006\300&=\34103=0\225i\274>\014\250;\203\317\177\274M\210!\275*y\032;CA\255\274D\250\025<\'a\273\274\242\257\231<\033\320\365\2731\214O\275\033\321F=\272\215-\275\230\245\355\273\353\240&\275\326\315F=\022\331J=\277\244\002\275\216F\301\274\252\255\377\274\360;\331\274(\355\022=\222t\202;\326Ke;\2150\236<\263#\305;\373\206\013;\240\003\233\274B\3359\275\021\316%=z\252U\275K\024\002=$\354T\275\277\027\032=\024\032\300\2745\377\313\273\n\177)=RL \275\003ZI\275\024\316\353<\010\361(\275=&*=\026e2\275$\253\353;g\265@\275\353\232\027=\215\203w\274\201\300V\275-\234\302<v)\032=g\306S\275/[\331\274u\306\035\275zk\307\274i\272\333<\240P\025\2758Z&=\331w]\275\233\232\r=\313\334W\275y\240\024;\227\325\t=\333\233\344\274j[\214<G6\024<O\300\350<\276\327\340\274\352\226b<\221\275>=p\266D\273\256\006,\275\237\310\203\274\272~\341<\004X\245\274\233&G\275;u4=\r\263\327<\234\357.\275\361\273U=L\236#=\276GX\275H56\274\341m%\274X]\222<\331\317C=\241y,<^\321\275<8\306\305\274\2768M<\352\303\370:\202i]\274{Z\267\273\001:\363\274\227\266@\275\234\336\314\2722U\366\273\302j\334<\"\242L=\267\002S\274\235\375\225\274}\0015=Jj\361<:V;\273A\001\220<I\367\006\275\314\332M\275.\362&=D\261\332:\317\316M\275\263\311-;\n\233\r\275#\312\351<\035d\260:\211\306\361<\275{\360;\035\360M\275\250{\347\274HII=\010\355\025\275\230\202\362<\352eM\275\016\270\317\274\r\275Y\275[N#=\355l(\275\310\342\3329\245\2647\275\345\301x\2733\302J=\254\220\240;\373((\275\271\2320=\261{G\275v\2414=K\014\375\273\271)&\274\3633\356<\335g:\273\010\342\014=\232\314\003\275\32319\275\022\t\357;\244/#\274f\263\201;1\307\372<\033\206\214;\337pX<3\312K\275\314\024 =Mp\372\2740\203\330\274\260|<<\271\204i\274\204\204.\275\223FV\275\212\263V:t\272\233<\016\314\251;(\0334=\333\307[=q\324k\274\323\374\241\274\274\244\264<\303\215L\275@\002\373<\017\256\223\274\357\017\340<\020\030\333<\372\n\n\274\253\300\'\275\342\253\014\275\334+\213;\"\320\346\272\250\"T\274\223J%\275\210`\t<\352\213q\273\347-B\275l;\375\274}0\020=E\305$\275b\"\301\274\221\002\016=\237\005\233\274\327\020\273<L\320Z\275\215U,\275\241\251\030<.\272:\275\024\276\205;\rZ\335<1r\017<\260\026+\275KM\271;M\320(=\2307#=\214\215\030=\342qG<\204 \211<55{<\313\006\":ll\352\274\274\\\316\2747<\2659F)L=\257>\315\274Z\036:=\233\030\330<%\344\303;\377Z\035<h\023\322<m\276\235\273\222k-<\333\021\014=<\325\326:\357\352Z\275w%<\2751\204C\275\247^%=\231\024\256\274e\202\350\273B\262%\275~\200\276;!\370D=\313r1\275\275\007 \275\273*/\275\316\031Q\275\202c.=\t*\247\274zW\034=\222`\217<\032\310\224<\233\223V=\310\t\323<X\\O\275\223\266V\275f_4\275\304\221\013\274\337\327\\=\364\247\020;\321Z ;\001\236\005=\324\004I=\033\365U=\252\320\372<\323\337S=#]R\274\277n\213:\365\263\024<\371(\241\273\332mf<\230d\220\274B\341>\275v.9<N:\010=\214\302 \274\005\216\014\275\266\241\322<\037u.\274;[Q=G\\\226\274\315\207%=P#\023\275s9T\275\226\354\246\274\334\\\376<\027\016T=\035J\347;\247#A\275\371\224\002=\315\202\032=\203`\333<\251\242!=\207\006\363<\021\003\024=D;\\<J\213\375<\036iD=\242\355w<\360\237\364\274\314\003R=\342\270\\=\346\325h<\335\335\357:\243\343P=K\331E=s\321\377;\201\004\220:hR\007\274A\311\233<\031NZ<8\212\277;\235\210\374\274/\352\243\273T\016\350<\242\342:=\325\033\013\275\266\021\367<8n;<]\356\313:\200\216\246<BS\027=\001\203\010\275\250\"\002\275d\235\007\275\200,\035\275\362h\027\275po$\275\357\365\003=\313.\'\27574\374<\321AZ=\215_q<q\332\302<\353t\202\273]\266\025\275G\321\007\274eKU=\025\002\275<\310\276\376\273g.\n<J\374\345\274FC4=\\]@\275\352tG\275x\376\003\2756\340\317\274W\321A\275\216&\212\274;!i<z%Q=kI\'<\214B,=^\251\250\274\261\271Q\275\276T\206:\205uB=\241\241\r\273$.\373\274x\322B<\376\230]\275\260\214G=\300F\006\275}\202\013<\'\277\030\275\216\215\002=\332\030J=\000\327W=\031_\003<J\372\000\2759I2<\365\301K\275\3413\355<\354\267\211\274[\274-=\223\023\"<\234\250\003=\3702\007\275,{\365\274+\3540\275\342\305\037=p\214\347\274\366\354\020\2746\303\021=)\342X\274\212YU=<\277\236\274<\353x<\235\'P=\212\377\001\275\326\327;\273%\020\204\274m\256\255;6\005P<\373\022\371<g\232F\274\202\014\371\274s?\361<k\340a\273*\206&=\234\376\273<\331\317\355\274\230\355#\275\267Z;=a\026\n\275\007\221\372\274H\237\351<\241\220\001=i?2\274Z\312N=\377\324M=\303\211\032\275\270NY\274\231\216\366<\255\r\313<\335\0364\274Z\357z\2743\256)<\013\323\250<F\245\305<V\302\350<%\331\350;\327\375s\274%\274\262;\2443C\275i\273\257<\010\233G=\027\241:\275\2029\301<\270\017\240\272d\032G=_~\001\274\316\"V\275\274K?\274\316;\000=\321y\356\274w\235!\275\310L;\275\003yj:\335\221<<\t\027O<o\354\236<\000!)\275\225\005+<\323\276s;\206\031\333;J\"\014=O\365\277;\340\013==*z\376\273\200\263\243<\\\036\337\274!;V=\001\355A<\204P$=\303f\276<\2727\025\275\314\200\357\274\346\245\256\274J\3166=\331f?=\356\323\236\274svA\275\354\030\261\270\267\365\227\273n:==q\256)=B9r\274\267\322\240<\326cd<\2413\020\275[\0378=\235Z\343<\225\213*\274j%\016\275\230R\340\274q&\262\273\375~\t=\361\212\246<\310\264!\275\317\317\335\274\002\302\313<\020\3668=\375\324C\273\206\031A\275u.6\275<\241@=\274o(\275z\204$\275<!B\275\033m\001\274\332\340a\274\255E\371\274axT\275f\366<<&#Y\275\035[~\274\350?7\275AP\225<\267k5=\252\257n<\205\374W<\217h8=#5W\275s\342R=\371\370$\275\373\306T=\370\225x;\'@W\275\211\240\271<\317\244\014=G\367\200\274\261\350\243<\301\347\262<\230\311P\275\342\352\003\275l\020,\275/\3119\275\206i\302<\243y*=4\345\316<\206\200C\275\260\031c<\227\013\344\274\377.+\275/\206\211<^l\311\274eb_<\002\001\231<\311N\027=\031\257\214<\253\372\021\2749I\003\275\257\314\036\274I\377@\275\373V7\275\311&\021=8\272\307\274\254\203\217\274\256\023\244\270\304\255\r\275\240Z\'\275\232\351V=x\220o\273R\327\013=\225I{<+\261\001\275\222Th\274\336\360B\274\223\3015=\202\021\217<q\261\213\274r%\225<A\273B=\331\271\242<t\214\354\2736\361\024\275\343\212\007\275\204n3=}K\227\2745\000\243\274\214\255\363\274m\376\336\273\271\017\030<$\237\006<7T<\275\035 5=\307zL\274I\001\031\274\330\335\301\274\362\221\304\274\032E\256\274\267\022<\274\006\360\262;[\251\275\274\270\007Q=O:\213\274\376B\014\275x,[<\375\035\006\275\271\226W< \206\r\274\205_\314<\243\254\260<\226\274U=\336=Q=\273\244\364<B.E\275`-\013\275\230\312\\=\001\247\027=\262\236B=\303j\352\274\203v\021=\240^\237\274e0\274\274\331\372\030\275#\254\236\273\310\026\317<-i\205:\316\035(\274X\316\305\273\245\251\201;\342H2=\222\304\323\274\363V\r\275\247\256\266<7\232 =-\347\335\274\267.\231\274d\217\313;\024Ch<\240cJ\274\345\374\031=\320)\362<\311\326\352\274\367\004\016\275\333v:<f\027\313<\200V\017=N\310R\274\211Sz\273\032kM\275\271\343)=\336\366\200<\316\355\315\273\312\333\266\2747\346Y\275\371\327,=\223\027\010\275\362\275F\275)\252\214\273\025x\336\274\210\237Q=\0276\020\275K5\026\275s\234O<T&\002\275\234\007!\274\356\325B=\032*\227\274\356\357/\274Wy&:\364M\222<\313\200T\275h\003\007\275\"+\374<\243?\007\273\313&\211<\212\0220=\"\245\336;]\344\341;\004\301\366<\23645\275\355\342\025\275\033\350O\275\377\223\355<\2747\366<z\213\026\274\334CQ=\344\340\014=\375h\210\274\022N3\275\323\353\322<\246\216\270<B3\372<\270\206\265\274\200\nA\275RgW\275\3361@<u\274\347\274\3528\003\275\317=\362<\r\304\244;\'\341\355;L\223\004\274J0\225\274f\014:\275\254\2460=\272r\t\275\320Y\024\274\216\026\333\273\356Z\004=h\241\026\275\343U\374<M\224>\2750\034*\273\240u\376\272\322\250U\274|\'\334\274@\355\204\273\033\206\353\274\302Q&<\210\301\002\274a6\326<\210X-=\031\030\002=M\375\032\2750m@\274(+\010\275\2150\364\274n\343\355<\234\244\337<(\302\324<J(\304<\353\017\342<\306a};\240\225\025\275%I\035\275\32384<8_\347\274\342}\300<@\023\255\273\217\276 =\260\254\013=cY2\275\024H\027\2759\276\202<Mi\007\274\323\3621\275\220\311;<\241\265{:\341\214\014:\326\327[\275ngl<\352\364\331<\034^\270<\013d*\272\007\357\304\2739\315\372<\311\023\002\275\243\255\273;\212/p<\212\200\004\275\334\2324\275\031\n=<@\275\032\275\237\035\262;_\212R\274\021\363\006\275\246\2034\275;\231B<\204\306\000=\242q:\275\016\330\000\275\2477\302\274\030\202-\273\002e\021\275wk\305\274\201\022\005\275\210\020[=9j\224<\345\226\037=[\233\262\274\234\314\207;\253C\310\274\313\034\361;\227\264\014=f%\362;*\236\024\273Kv=\275\240\330R=\222\215=\275\344\314\"\275\330\344G\275\220\251\333\271d\350P\273P\263\334<:\364\310<\220M\374<\2241&=)\314F=\306\224S\275\303*\023\275A\3617=$N\'=\203\003,\275\347\232\264\272\217i\340\274\354WF;.fC\275\306\273\243<Q\366T=0\375O<,\207m\273X*\332<\341D1=\353d\257<K\2318;&\336\266\274\261\2771\275\310r\377\274P\235%\275\277\344.=\001\002\013\275\331c\031<\367\300,\275\023n>=\216\226M=\313\242\373<\365\231==\271\313*=;\342\206:\255\300\205\274jB\364;1\226\031\275\024*\033=\264\307\031\275\031_E\274;K#\275\244\222 =\355>\037\273\033\340\260\272\346\341\230\274}\327==\232\003K\275\t\024\214<,\224\030=4\355\016=\216\337\035=\237\265*=\241\205\335;\022D\002\275m\373\246\274VBB=\003tL=H\212U<?\027x\274\341\\J=K\033M\275\306Je\273m_n:y\275\323\273\227\352\203\274\342fT\275j\237(=g\253\223<\225\314\236<\343\231V=\203\321\361<\\\211\021\275\363\"\\=\361\360\316<\233\260\320\274\335\261\327;\024h\000=\002\201\312<3D]\274|#W\275\001?X=\372\370\020=\356#\014\274\307\201\254\274\007\354\037=\2343A=^\024\024\274^e\010<\257\2743=\374<\004= \030M=\354\355=\275\247\275\024\275X/[\275\237\342M=\005\240\007<^\314\301;\225\241R\275\\\250\362\274l\271\307\274\037\035Q\2750\251/=\240N[\275Q\247\345\273W_\006\275\303\302$=6t\363<\214\237\332<c\3444\274\202\314,=TgR\274\247\347\227\273\300\255\310<[V\270<\340\361\000=%\'U=\024\303\2428`\t\363<\302m\023\275\312\244-\275\221\340#:>\242\351<\257\236M\274\211sJ=\314y\253\271nU:=\244K\320\272\2510{\272E\375\357<J\210V=\241\273#=d)\t=\205\235\341\274\243\3506=\373BR=\272\302\255<\003\2330\275\252\337?\275\\e\207<\356\201\342\274MG\031=\223\244\300<\241s7\275r+\250\274$\010O\275\251\275,=\235\210~\273/wV=\262\363\275<\203\344\024=\001\220\030\275\220c$;H\274\342<\035^Y\274<g\350<\217J<\275\212\371\324<5>6\274\020_\026=\342wi<n\"Q=2\2228\275\327\205\032=Oi\031\275\250\"J<\360:*\275\000\013\204\274\034\336\024\275O\361\\=\212\306B=b\r\030=\311_\243\274r\010\323<cm\360<\363U\016=\274\250\256\274&\035\357\271M\214\335<\0262\315\274\201\255\224<\220&?\275X\262\224;\263\373\237\274r\267\324\273\240\352A\275M\027\337\274J7V\2755\321\227\274\027\003$=\342%l\274\252\026-\275\265\2043={\016<=\351Y\312<\375EU<\250(\307<\242\323R;\301S8\275\'\005\317<\310kZ\275\371b[=\362\342\363\274\222\312\013\274\370\307\t=\323yU\275Vb\333\274a\212\271<d\3431=\341M\304<\335:R=\273\343#\274\034\026\226<u\246\262<\314,\332\274\371\335\336\274\rs \275\307y\276<+M(\275\027eG=;\371V\275i&\317;>\371\035\275sz\372;\273\177Y\275u\276d\273\337\225\n\275\306-Z\275\332\227\247\274\301\314+\275\253\030.=\005.\006\274\352\353\023=S\242\t\275D\302\024<\344x\277<l-3\275\013\026\361<\361M\021=\017\265E=\340\177\016=\372\225\\=r\203\020\275\300\213\220\274\036\275\372\272y\222*\274\331\325\310<\\\2657\275.2\010=\337*\023=\376\342\311< \321\324;NR\327\2741\354u<\3345[<!\312\274\274\2258\275\274\317;\n\275\350\313\216\274\307\227\243<\333\243U\274\270U\024\274\213d\211\2741F^<\220\217\211;ks\371\274\263\0316\275\346\264\323;\207\253\322<5J\006<\325xg<k\023\005\275\205\302\035;nV%\273\275\241\343\274D\003\034\274\275W\034\275\367Q\377\274\032\357\312\274\233OX=7\277\025\275\t\346\014=\000\310!\275\224\315>=#\276P=I\2519\275.f%=*o\361:`E\025\275>p\231<u[\023=\212d,\275\371\033f<\256(\021\273\215\302\r=\342]C=\312B\210\273\r<D<\030y \275\242k==>\270\033=\221\260\241\274\027\211\346<\\P%=nFC\274\2238\027\274\371l\361<\333\212\273\273\202\005\004<\253\225\327\273u\335;\275B\234]\274-\317\232<\346F\320;V<d<n\302L<\2748$=\252\017\215<\367V\030\275\273\316\027\275\263\213\331;y\014\322<\305\271)=,cQ\275\205rH=\314E\310<\034\225=<\033m\024<g\212A=\013\252\035\275VW$\275\317\205W=\345&\226<,\266H=\251\327\026\275\277)\016<\342\020W=\036\276!\275\037q\035<+,\030\275\227\304n\274\201\'K<V=\223\274\010\374\003\275\364\225\356<\300\017\"=\003\n\264<RR\313<\317\262\t\273\251\223;=\317\344\032<\016$D\275\232?\034=\362\213\212<\237\226\242\274\374$Q\275\312\013\020\275\207\034!=$n\231\274\244\343/\275\32186\275\275<\007=\037\305X\275\024\312\233<h\"#\275*\'\231\274\327C$=\027\216\341\274;\237\330\274\2764\265\273<BM\275\314G\004\275Yy\035\2750$\254;\371RK=+\022\261:\261\346\211<A[\325\274]\231R<\036sn\274f`\356\274\264)[<(3\354<\034\001P\275\002\264\372;\345\222\033=\224\250\251\274\236\313K<+\225J\274\2352\004=\256k&<\331\021\322<\010\222\312\274\014\362M=ah@=\023|\026\275\337\3670=T\224\023<\356\0367=\'v\025\274H.w\272[\252\262\274\230\272;=\365\246\005=\307\251<\275_}\322\274X\316\216<\321\020J\275O\241\241\274\006\017\204\273\272\217,=\304\340\277\274\206\027(\275\024\325\306\274\265o\\\275\232d)=\356F\242<\266s8\275\314\022\r\275b\342\233<\316*$\273\001\253\020\2747\244P=\305\207\033=\2774]\274\247\034\216<9w\320\274\006\014\031\275\331?\310\274\363\010\004\275Z\356\007\275`S\301\274\207\240@\275\213\355{\274a\340.=E\277\365<\207F\022\274\207\214\322\274~\232\366\274v|J\275\024|\t\275\213\027\324<\332g\023\275\263-\363\274\242\344\030\275>\031\231<\373^\210\274\317\224\223<\272M\260\274\260\031\307;\363M#\275\023\202\357<\034\366r\273\032O\006=\225\305.=\r\270T=\235\2727=\223\370\255<\326Y\323;\003\3407\275*i1\274\344-\360<\354>T\275\276\361\026\275QFr<+\362(\274F~\027\274\310\" \275\233\\D\2748\221\204<\372\227\334<Z\2100\275\323V\373<-~\336\274\020e \274\356\357V\274\277\247\331<\374NM\275V\031\312< \220O=z\0059\275\206\352[\275\357\304\026=Q\305e<\r\344\374\273B\312\255<\033\342]\275\014\202K\275`%\000=a\322*=\230\254\225<E,2:\227>\231\274*/\030=`\202.\273\241\271\202\274t\212.=\365\244\r\274\002\245\262<\200\010\305<\010\006\'<\325V\264<\377*\305<\223\232\274\274?r\370<>\272\013\275\304\177U=l\255\002\274\204\240\007\275\237:\322\274\357\245\r\275\325\026\312<-\2720=\255\237\377\274\374\240\202\274s\375\256<\365\273\034\275\3560+\275\300FQ<\205(z<\024\320\244\274\352\3644<A\307\307<c\244\240\274\213\356\316<\363\213\205\2748\221T\275\355`\253\274\375d\371:0\230\231\274p\376\005<\353KB=\215JJ=\033\177\207\274\372\231\367<\223\332\017\275J\240>=\354\342\334\274R\023\214\2747\210L\275\250\220(\275R5V\275sUI\275o\277B=\251t\355\274?f2=b5\275\274\316R\251\274E\326K\2756\001\363\274\001\371<=\030\231\272\274\177\025\211\274Hp.:\3376\323\274:\335X=\027\304\201\274A6/\273w\322\327<j$\271\274\243\274\003=\003\360\032\275\021`,\275%\307\t=\354`\035\275&@\310\271\031\222\0318\035\220\277\274\351G\\=,r\213\274\223\365U=\007\242\210\272\'Q\266<\217\273\233<\274R>\275bEf<\310T\225<\022w\227\273\201\366\255\274\256v\033=\014\004G\275Yr(\275\301\302\327\274\345\001\314;\251.1<\331\311\030\275\320\300X<\246\330\305\272/\313\\\275\222\304\026<\252\274\365<\3744\213\273OqI\275\r`\0229\201T(\274\022[\t\275\007\376\004\275[\331y\274)\032\324\274g\225?\274\244\300\355<Zo\215<\342l\212\274d\217?=\246\037\3478\323\020v<\203\204\274\274\030\342\007=*\274\017=\225\340v\274\'\232\273\274\320\356Z=\3009\270<\312u\035\275\233R\324\274\001\370\t<\224\322\266\274\322\013*=h\347\023:\373TP<\204\036\026\275F\2273\274Z\377\365<\207K}\274\200\325\210\273\030\256X=\252\263\001\275\260B\370<\017|^\274\342\371\030=\302\035[=\374\017\341<m$0;\214t&=\337\324\237\274\243\177M=\036\221R=\022s\337<]\306\010<\357\374\030\275\263\315\025\274\034\275\351<\370w\365<\334\222\245\274\307\363\036\275\232\307@<\305%\024=e;\203\274\014|!<\240\360\226<\200f\026\273<\3153\275\211}I<-}D=\206\370o\274o\037\036\275\206\266s\274\t\243\252<F\355>=(\350R\272[\370\275\272]E\206\273{1\025=\216\273\303\274\350PA:yE\037\273a\362$=\315\236\236<H\302Z=\371G\337\273q\200\374<9\030~<\373(+=VF\034\275\230\022\377\274\331U\350\273\236\204\254\273Nl\235<\032\177@\274\301\363K=a\371\315<\357\265O\275\357\326\005<x\"\206;Jw\314<\241\250\241;k\324\014\275\321}\376\274?\276\035\2758\200\034=\201\300\035;\314\265,=G\232\317\272!t\206\274\3572/=\016f\363<\335x\033\274\347\336L<\023\362\355<L\225\221\273\177\322\025\275\2540\336\274z\021]\2756\0162=\370\351L\274\337\241\t\275\244\033T\275\374F\026=\375\3111\2753\241\020\275\355H\n\273I\306\005\275\030\001\267;pZ\217\274\320?,\275t\016U\275\006\343\363<\233}\036\275\177\201\031<u\310\346<\304:;\274\317\006#<O\t\361<\277\232W=\206\317\261\274\307J\241\274\213\212.\275*P\335\271\212\362=\275\026n\372\273G\344\"\275/\313\367\273\003\001\034=C*B=\272\303\\\274\375\005Q=3`X<\177>\210\274:\0373\273\3124\242\274\256)\310<\001G\251;\351\360&\275KVP\275\3223#=\302\272\'=JBA\274\240\364B<\372f\027=d\314r:\337Z\246\272\352q$=\037\340\225<\231\224\315\272\262\257t\274\230C\233\274\017.h;Y\376*=)\244\346:\261/C\275\000\354\033\273\372\331$=I\307\247<\022.\243\274\237#\235\274\275\263\021\275\336\030\367\272\204\247\017\275\2105\270\274:\225A\274\037\263\003\2755\335B\274\304\365/\275\026\244\n<A=\003\275~m5=\004h\250;\234\211(<]=C=\324@\014\275\237a\225<\225\254\226\273\325\224;\275cd:=/0I=\216\304\273\274SC\363\274\223d%<\2642\361\274\361G\261\274\317M\277\274f\352\267<E\023R=~\322\277;\344N\264<m\367\262\272\233\270Z\275&\344#\275\177\355\t\2753,)<\033\337\230\274\345;\360<\225\215G=%8==D#\240<\177\037N\275.\265\320\273\241uT\274P{\024\275*\244\222<\307z\310\274\273&Y\274v-\301\272\251\026\037<\3376,\275\346,\035=dD\177\273!~\246\274T\350\025=\030H\017\275\343\3658\275\003ED\275\322@\241\274\200\343\320<\365\253:\274\366c]\275\260\034\274\274\027\017U\275c\244\004=\2578\205<?\\N\274\261\023\271\274;\337\200<\244;\241\274\'\3476=l~\253<\016g2\2751\302\336\274\270\007\224\274\2333\017=k\255\006\275\373\2112\274\320\2453=\210\230\267<\222\374\271\273\302\252\210;\234F5=\000\313X=y\2034\275\005\006\354;5\225g\274\271\335\016\275\310\303\303\274\2174<;\025\233\\=\273`(=\224\']=\327\017==\177\212;={*];\226},<\323\002\247\274\037\224\253<\334\240\013\275\315\270\363<\343\264\256\274\"\3413=}\3166\274N\322\367\273\321\030\261\274\rD\022\274\310\221\026=\350%X\275\267<\024\275\330\r\214\274\261\362,<\022A#\274;\005\264\274A\3541\274a*\345\274\360\242\025=O\3729=4{\002=\234\301>=\333\264C=\251\207[=\243\266p\274\n$s\274A+\244;\340\333/=\343\377$<\364\275\023\274i\'W\274\007\211\035\275z\353I\275fj\223\274,\276==\360\237\230<Ww\227\274\313y+=\210%\322<\021\263\031\275p\020\302\274{\204\205;\346\323\232\274\205EM\275\203\227\362\273\025|\037=4s\244;dL\351\274\301C\020=\026\275\244\274\213\365\225<\204#\003\275\230\265);^3Q=z\253\204;)\216\027=\311\304\035\275\300;\253\274\246\244\210\274`\260)=C\242*=\352\003\252\274\021j\033\275u\227\207:\220\346d\274L\007\022\275\250\352-;\237\265\332;[QN\275\317\027\021\275\366\014\247<ND^\274V\342\006=\013e1\275\322\'l<\026\3446\275k\"X\274x_\353\274\231\"7<\242\2165\275\n\t\017=\007F\300\274\310I\312<\357\327:=\352e\370\274\315\037E=I\234d\274\330\352\353\274b\344\264\274\345\243\232\273hx\260\274j\242\320\274\302#\030=HT\327<\334{W\275{G\365<\354\252}\274/}\277\274aE%\274\026\177Y=%^\345\273[1\220\2748\3165=\374/:\275U\2751\2755XP\273\332\303\315\27426\024\275\022\337\305\274\374\224\033=\205m\016\274;U\031=Z\'U=\t&\3649\010\232\341<\211\201f:\311\270\316\271\252\377\201<\225{\360<\256\237\370;\n\301\352<\203e\037=\306\031==\351bK=\002\237N=\254\316\'\275\357\017\216\271\016\355\027=\252U\'=\336\tv\273\027S\341\274\344j\312\274\342\357Y\275T 9\274\021z,\273A\330\014\275X*~\274\344\013S\275\035\355\023<e\0355= u1=j\007\300<\322\301;=\354\036\"=\350\267\"\2757\276\214<\351p\037\275\\\201\336\274\214\2032=\014\356$=\236\320U<\212.-=f\2147\275n\204\370\273.\250%\275R\230\000\275w\230\321\271~+\'\275\025U\004=L\220\300<\310\3051=\306(k\2745\270\007=\344\321\023\275\253\254\331<\361e\002\275\313#\020\275\356+\326;bD\n=O\257N\275,s7\275\315\362\266\274C)3=\311\021\035=\220\231\371\274\245g\'=\243VC=\234\002\237<\260&+\275~\260\007;\212\256O=f-O=YX>=r\3446=\331\253\324;\005[-\274;B\006\275\'\370\023\273\271\342\355<\\\323\023;\316\246\017\275\272D4=\315\224\026=\242$0=\220\376*\275\274\020\031\273\377\313\224<\304L]\274\007\331(\275\360\375\023=/K`<\373\t4:R\237u\274\232\315?=\027l\253\274\267\271\201;\022\266\230\274\261\337K=\006\342\303\274\212\235\234<\344\313\022=DV\"\274\200\t8\275\037\342 \275vXY\274\365 b\274\211\\t<\3347=\275\242\006\207<\344\246\317\273L\223\366\27415\373<L\266\002=\326\025\345<+b\312<%\'\225\274\024S*=\345\261]\275@C*=\031\271\007=x\212\343<\375\'\014\275%\0056={f5=#\242;=t\r=9_E\014\275U\247\337\274\335\3038=\230\264$=\260\000L\274<\037_\274\037<0\275\2579\257\273\255\242\300\274ht\027\2754\004\002\275\231\004 \275l\310\275\274\250\343\236\274\016.\217\272\020J3\275\214\335\243;\2074\037=+\322L=\255\223\312\274\301d\372<\221yE=\337\320\367\274\250\026\247\274\\\2469:\272\032H\275\241\\\013=u+\020\275\017\227\007=\315\331\020\275\030\330-\275\205\" =CQ:\274i\372\267<e\232\004=,QX\274\254\330\325:\206\313Q=\345\235K=\234\362D\275\025\322\362:\337\017\333<v\304-\275ZN\375<\t\030d<\035z\377\271\213+\n=\356~R=v\304Q=hh\232<]\230 \275\234<B\275\370\203y;\373\0044=@\273==\353g\001<.h\256<\373\005\254<\303:z;\324+B=s\244\251\274\262\3347\275*A\302\272\r\212@=m\234\217\274\336n9=\002~&=\320\335K\275\223\360\215\274\236\204\350\274\370\206@=\274BQ=\nR\002\275\031u\274\272V\247\277<\270\337\376<\242k\302\273\236\255\213<F\204&\275\257\267\006\275\221\230\240<9>B=\024\036)\275t\r\231<\3122@\275\246&\023=\223\202\245\274\317\276R=\r3\024\274\275\2432\275\006\355\031=R\366V\275\263\226\020=\315\271Z\275O\324\211\274=C\263\274\216P\325\272\365\0064=\251\354M=1$F\275\347\246\375<\363\211\362<\352\036\234<\204\345\030;\342(V=K=>=\317\350N\275_e$\275\261`\014\274fq_<,1\243;\211\256#\275\023\2032=\300\222\036:\313\372\377\274\'mc\274\205h\024=)\036\275\2746\336G=\332\031\022<\260\330\203;%\'B\275\337$9\275\255\272V\2755Q\334<\025\037\024<2\206\033\275\254X\261\271\315\355\r=<I\324;\270\3417\275\235\250\025\275\231\034\336\274\245\362\023=A.>\274gfL=j\211B\275,#\003\273\346\235)\275%\237\223\273\233&\256\274\3163@\275\333>\303<}\364,=\336\016\230<\257\333>=\306\305\351<C\254\353<\341\266\307\274\300z\355<\224%Z;f\365\007\275_\216==\003\206\351<l\265\035\273k\3370=\270\377=\275\344\231\302\274\315\2646\275\taH\274?\354\004\274=\222K=\"NV=\201\025\212\274\016\371\324\274\322\357\373;\263y\303<\272_1\275\234\230@=\r!(<\036~0=+\331\206;\272<!\2745\344\330\274\2610?=\362\3610\274\025\230\377\274<Z\335<\326\333\261\274\274+\331<\000\211.;\342\311\374<\241\0139=}\\\320<\215~)=\352\022&\275j\373\023\275\301\324\025\274\324[g\274\247\367\215<C\212\210\274\265&J=\301\204\336\273\212[\014\274K\251\266<>\325s\2740\2363\275\373#\374:\223g\222:\354\313\262\272\356\000V\274?\3575=\313\345\'\275\323\267\321<u\241f<F\"1<+{\312<k\231d<\0322Q\275]v\017<\373$\262\273,zH\272\240CD\275\327\264O=\006\256*=\340>O\275$;\321<\026\305Z;\335_U=\240\231\266\274z\216\005=\025D\351<n\316<=6\357O\275\000\254E\275\313\361\312<,\356\237\273\357C\230\273e\016\256\273\324\246&\275xu\252:\247\271\212\274\r\t>\275P\307\031\275\032&=\275\211.\214\274\251\022\032=\271\366#=\034,!\274\240\266$=\022O\206:\371\330\010\275\230aA\275\326\245\325<\202|X\275\360KC<\n\021\023=i\217\024=\250~\376<\317\343\323\273\337\007\003=Q\032\235;\351\301\340;\363au\274E\317\006=\013 ;=\320d\212:[\021\266<|\326\365;xI\336<\316\254\022\275\036N\357<,Dk<|\365\247\273Af\"\275\325s\236<A\3136=\177\367\241<\260?\260\2748\000H\275\014\272\342\274.\2159\275T8G=\243\334P=\005\027\313\273\223\275\242\274g\211\002=\030\307%\275\240\262h\2736\303_\274rQ\356\274R\243 \275,j\017\275\017H\016<\013\251F=>\334\210;\027*6\275\323X\207\273\243f\215\274\352\220;\273\004G.\275\312~\236\274\003\300\224\2748\2123\275\205h\016=\372Q\024\275]\2773;\244v#\275\220P[\275\332HS:\212F\016=;\343\366;\326S\000\275@rh<\322\2601<\261\363\321\273T\307\001<)\201\303\272\207\367\351<u}8\275\036\'\261<m\357\036=\2729 \275\277<\211\274Tj\262<\374\231C\275\007\020\235\274|\366\315\271\251\2147=\260p\0038,\021\237\274\037 !\274]]\314\273\267_\326<\007*\032=\221\277\024\275d\354\244\274\273\315\002\275\'\206?=\217\312@=\270\347\032\275kV1<\360\276\340<\304\331\005=\351\375\323<#\271\302\273<\263\014\275\001\266J\275\372\300(\275\002\3608\275\253\377\227<\031~A<\250kS\275O\206/\272\356\307\316<\232\2021=e\376-=\302\303^\274\342b\241\273\331\345\035=O\243D\274\0241 <\273\370D=\\\363A=\371@~\273\313S5\275^#`\274}\215/<3V\267\274\247\307\202<\215\264\271<\226\254Z=q`4=\225\255\356\2733\003\224<\323q\031<\313O5=R\237\346<\2475\242\274\004\001\312;\033\216\\\275U3\"\275\257\301\010\274\3634\005\275:I8\275\3069L\275\254\271Q=0\010\215;\363lU\274.(\224;@\000\323\274z\260\350<}\214\021<\tv\274<N\010.=\233~#:JK]=e\223\016=w\254R\275\321\364T\275\375\330:\275!\377\211\274\340mW=\"7|<w\307\014\274= \365\274\t\315;=e\030\003=\3121Y=\244\003/=\260\326}\274\214\222Q<\230\320\241<\027\364\262<\r\237\315\274\035\'\036=%RH\275\256\225\002=\345\2476\275\202\334#=\314\232\222\274\311\256\307\274\213\265\002\275\323\312\"\275\213q\320\274\025\235\230\273\277q=\275l\001\036\275N\201Q\275O\314\226\273OQ;=\235\261\023=\343()\275\351\223\023\275\333\216M<\333\007\205<*`,\275\216\025\027\2751\337H=6)J\275\204\341A\275\003&\016<\336\251\300\273\203\211\005\275\027\203,=nI\t=\311z<=\333\266!=6\331\025\274#\233Y<\331\034\036\273\277\211\257\274G\212\254\273\311]\360<G\377H=\202\370Y=\360\006C=\206bR\275\331l\323<\212\364\001=5/\002\274\363m\365<\177\232$=\202\263=\275\317P==D\213@\273~\211C\275\033\310@=O\350v<}\246\241<`\024?\275z\215\"<s\003\016\274\r\r\274\274/W\347\274\017\276\314<\322\020S<Y@\n\274\336\357\277\274\030\257O<\272\375V\275>-\203\274s\354\010\2759\233%\275\254&\r\273\221\357#=&\226:\275\341*\025\275\321C-=\372}-\275\027x\255;\346\337\225;uA\254;\2061\t\275\277o]=\354\007\010=\336_><=\336>=\372KQ\273%\356\227\272y\366\264:\240\261\202\273\370\206\007=k\270L\275\243`7={eV=\177\305B=\350\205\362\274\031\n\r\275\"f\373<\030\310 \275c_\277\271n\264\025\275\n\315\036\275\240\220\321<Sk%;\247#\033=\031\0370\275\254\244\365\274\207\026\356<~\210%\273`<\276\273\251\3419=\00097\275B\025-=\314;]=~\203A\274\265=0\273_\211\001=7\307h<\2079\230<\022\007*=\200\245\362<?\272P\275\361U\331<\220\\\264<\366\261\225\274\004\336L\275\313~6\275\350\263\017=,\357\021\275\301\034\242\274Pq\002<\016\370e<UC\277;\371\210?=\010\030X=1V\023\275\266u\212\274\013\202\016\275\365h\203<f\260\316\274\220x\024\274\305\231\2219u\336[=Y\307\326\274z\\@\275\312\340a\274H\3063<xZ\242;\220\355K=5\002\3369\274\313V\275\022\276W=\341p\026\275nP\210\273e\235]=\314\374\241\274\210\347\004<\017\221?\2735\356H\275\177\3564\275\024\021\310\274O\2317\275[i\024=G\220\322;\277\233\323\274\373\027><\\W\203\274{\203\362<t\233\307<\023\204\\;\300,\002;\263\362,<v\331[\273\027\360R\275\005}(\275\221\013\346<\360O1\275\310\356\307<1&{<7\034I=\321\024\320\274\305\000\034=0:\022=5zF\275\246`\005<\260T\330\274\326D\301<\n\244\024=\303\313A\274\006\202\223\274v\352O=C\364_<\231t\'\274<3\302;\240\202\216\273\210\211+\274\263C\037=\315\256\327;(\330\370\273\275V\205\273\230P\t=Xi\033=\251\372\332<1O\265<\240k\246<STE\275\021\337:=\356J\306:\017Z9\275%\205\201<\341\217\004\274\260I\021=\177Qr\274\271F\327<O\306Y\275]4\017=6T\221<&s\017\273]\226n<q\341\024=+\2331\275U<7<\'\025 \274\024wH=I\322\260\274\355$=\275\236\326%\274\327]\244\274\272\001\272\274\330\224\320<\310\225(;@\271;=K\021\006\274\375\362\326;\370\236 =\2417\233;\007\277\201\274\022\3167\2752&\350\274\2279)\275\345\367L=\340\302A\275HL\023\273)\375\033<@\340\207<7Y\211\274%\022\252\2736&\370<\266p;\275\304\326U\273\276S\t\275 O\035\274|N\257\274\277\262y\274\246\221x\273\253XC=\035\376\030\275\336\253l;3\021_<A\371\234\274\257GH\274\004\3645=\247\311\007\275g\363\016\275\334\340Y\275\241\003f<{\030\275\2740Z\022=Z\302N=\016\254\222<\366\023\354<\022\371\\\275\177\245\017\273\231\201J\275\263F\t\275\304\316\220<vB\227<\177\346\265<\240r\002\275\347\244]\275})\374<vfL<\036\346\350<\227\234\321<\262\272\365<U\222Y=;\350\236\274\\\233G\275\270F\266<\323Y\325\274\322\t\322:\327\266\240<\004\315O\275\n\371&\274\010\353\240<t\276|\272a\252K\275G\237\207\273(\200g<\354X\266\274%\247O\275\352\260M<JeO=\254G\365\273\200\315f<\316\300\345\273\367\262\317\274\330~\215<\274\207\275\274\323\244\336\274\361gq;\323\355`\2732r*=\264\353$\274\3117\020\273_\263\337<\367\252?=\217\255\244<\2060@=j\315#=\220\236A<\253\234[=\233\3259\274\334\342\313\273\346\242\035\275{\326\321<\001\244(\275\207\033\005\275\361T\213<\253\204\024\274\223\2268=\3240\007\275\007\277\276<\'\266\000=\367w\000\273Y\242\312\274 IA=\031\204\352\273\017q\006=\002Y-\274\030a\361\273\354\031\240;\'\373\307\273\351\201\206<\220\345Z=S?\312<\242x1\275eu\035=}\003\233\274\201PX\275FXC\275\'\345\006=r\304\307:N\262\010=J\236F=~C\362<p\026\360;\244\0375\275\256\207\026\275TF\202<q\340\354<\013\003 \275.\305\260<\306\325\274<\"\245\016=\305\220\277<i\375Z\2757o\207<\177~S\275\013\342\275\274Y\315\213\274\264\323\345\274\331/\226\274\365\333\236\274\331\376$\274\'\"\245<\032\350\004\272A\272\'\275\243@\233<\262\n\323\274%\014\250\274r\0160\274=4(<a!\207<\247N\214\273_|\"\275\022\232K\274\232\337F\275d\237H\275_\001k<\004\340J\274ib\352;\034\234<\275\002\245$\27057Y=\211\314\264;vj\313\272\216W#=\264=\326\274\2709\227<m]\010\2745\255h9J\3431\275\232\362\257\274-}\230\274\240\013_\272\007_\301\274>\271\312\274z\204\013\274F\360>=\3079!\275\nS[=\321_\023\275\3332\026\275\370\204\372<\343x\351\274\230\261#\275\237\255+\2753\031\235;\243\353\277<f\010X\275\010\200\224\274\370\024\200\274\360?A=:\010\262;L\016\233\274p\000\311\274\177u\025\275\246\233\034=\247\004|\274\037}\300\274\347H\020=\346V\246\274\203\274;=\256\2256<!\017\237<\364VZ=\241\004\300<6\034H\275\262\363:\275\216\331(\275{g@=\270\264\213\274\232\335U\275?\260\3039\3263;=\313\2346\275\311R1\275\333\310\201;Y\204 \273!K@;\177hA=,jF<\317\214\r\274\305\265\273<\376@\"\275]i\275<\201\217\234\273\206\232\010\275M\262(\275\214\315\342<C\335,\275\013\330\246\274v*M\274\314N\217<d)\000\275\034\374\r\274\035N <G\026\020\275\345\037\213<\274y\017\275Z\222\001:\357\274\221\274\010\205\013\274\037/\264\272>\320\020=\301\336\216\274\306\225D=p60\274FsX=\211\022\252\271\220\220H\274`\2655\274\357\207\036;#\017\345<CBR=\017x\3558\365\033H\275\021\225G=\241OM=\311F\000\274T7\264;\001\300C\274\033A{;\\\3622=\'\353\031<\3221\021=\200,\312<Kwl\273\340$\201\274|DM=m\230h\274\233\302\212\272\343C\007\275\\\2260=\n\261\036=\212\245\212\273\0225\257<\373\204S\275\233}\322<g\036\337<\226O\350<\362k\002\275\265W\231\274\260\270\351<\310\304\357\272\263\n$\275\250\362&=\341\033$=(\323\017<\352O<=\361\020*\275\341P\017=c\3754<8\016U\274\301\t9\273j/\347\274\353\244O\274)Z7\272\324\247$<~\027;\274\315V5\274\340\366O=Y\273?\275\352\021\276\274Lf\374<\362\361(\275K\377Y\275\243\224\004<7\r8=\327\264\221\270ZK\'\275F\222-=\230\034\336\272\233\236\354<\003.\016\274:\330\324<8H\016=\234h\345\274\007\334\207\274\253\036\311<#\271\000\275\367\r\304\273\005\361\030==\200l<\216\234\273:\321\265\230;\251\023O\275\020 \r\275\277\020\341<\314\n\320;\006v\352\274\201\247\374<\322KY<\261`0\275]\024\225<\251KR=\371\224\301<L0\353<\353h]=\315\024V\275\004z\"\274zc\370<\367\303\222<\343\027(\275JS\377<\263#\371<G\316%<%\357-=X\332p\273nm\300\274<I\323<\262y\003\275\323\332p\273w\360!\275\362s\034=g\223\203\274Ll\242\274\365>><A\344*=pE\267<k\205\254<\331\266\201<;M:\275\027I=\275\314:\241\273\366\320\033\275\355\005:\275\356BA\274\331\342.=\033z\246:\375\212\354;{,S<\264\3107=%\312[;&\311F\273\376\317_\274t\025\t\274\254j\245\273{^\343<M\230G\275\342\214\324;\256\305N\274s\334M=\022\301\304\274z\266C=S?\264\274\201FO\275\325\355]<@\221\224<\241\003e<m\2656=]\363\327<\363\231T\275LbP\274X\374Z=\022\003\233\274\347\334\326<j\027\251\274q\246,\275&\243\t=\350\354\237<\244\300%<\276\3116=K\375\023\275\016\237Z\274\004\342\317\274=-d\274\001\310\006\274\372\273\210<\324\221\242<\231\200\220<|\245,\275N\240\331\274\335Y\205<\277\205[=\250\375w\274\200\200\322<\237\370\343\274\004\356E=\220Y)=\250R\307<JE>=*\237\021=\026\025\323<UYt\274}\n\014\274<<\302<\002)]=b!\270\274\243-D<9\317\014\275\212JZ\274.mv<\302gQ;\2548#\275\316#\006\273^\234%=\374q\306<\361\204 \275\353\347-\275\272\363\031=+\257%=\277\326\003;\343\311A\274P+E\274p/3=.\033\006=\232\254\340\272\300\366/\275\313II\2752\035\361<I9\373<\353\321R=\241\344\333<\200\360\210;{;\006\275I\2620\275\357\001\"\275\364\330M<w\301\372\274\242\311\200\274\203|Z<?\242\277;\014\n`<\343\2061\275\274(\002\275\367\224\277\274\365N\221<\312\364\301\274;\023\243;\204\336\312\274I\303%=\326U\214;\320.v\274\264\006\000=KxV=@\256\360<\301\001\032=\255\211!\275\205\342\326<+\302\343<\213L\226<r\377\361\274lhP\275\013\3443<\235\027\256\274_g\371<K\341\027\275\235uB\274`wR=I?\354<\376\362\370\274\325\222m\273\261\244\240<\231\315\362<\245ZQ=\t\203\343;;\361+=R\031]=\273\275N\275\032 Y=2\351J=7\240\021=\347\325\023=\224\315\236;4\376\037=8\361\t=\007/:\274\353\307\301\273\'@\230\274\366\236\354<\006W\307\274/\262)<\252p\353\274\"\311Y=x\026\232\274b\027C\275\274t\351\274e\220\r=X\245\016=\372c1\275h\232I=AH\210\274\254:\017\275\263v\260\274\207\301\237\274\324G\211\274\231\310r\274\272q\220;\216[V=\210\245(\275\021\033\362<\244\337x<\231\237b\274S\327\237\274\022\003K\271\354\340\305<V\345\320;\324\034\n\275\005\272D< \313U<\t\036I=q\363K<\253\222\266\274\027}$<D\271\236\274\240K}<Ai\206\273\220\033>\275/\314\371<h\202!\275\360=`;\223\243U<hP.\274\2613\016\275\364\214o\274\215BM=\263cx\274\234\354\331\274BR\312<\356\275;\274\216\237\000\274\376\310\316\2743\324\265<\226\002\332\274\317h(=u\346G\275\360\351\006=8T\314\273U\335\250\273\204\344@\274\020E\321\274\274!\265<\032e;=Wl1==9F=\n\274\255<7^\003<e\"\224;\234\207\017<E\331\372\274J\273\363\274\231\343\213\274\242Y\360\274a\354B\275\377\214\357\274\264\275\357\2748\311\232\274>K\355<%\346\317;\204\236\n=\325\331\266<\227\275O\274\033d\000=\303\253\036\275\274O\033=\005\255\007\275CY\311\274\263\021R=\215\316<\275$\004\n\275(\003\227<\273\320Q\275\251\265J\273L\213\252\272\004-\022=D\2611=\353\361E=\'\251\017=\255\206P\273\324\220\234\274\0271I\275\351{\332<\347\216\322<OA\n\273<\240\212\274|N\006=\306\330E\275\316\"\241\273\201|\240\274\035\335,=\342 Q=\347C\356\273\364\206L=;\344\006=\350\235K\275(\324\264;\000QR\274S\317#=\016\257\326<\317\026%\275\251\205\355;we+=\322\227*=\211\r\351\274\363C?\274\257R\260\273\262\245\203<\214\362\301\274\376U`<\353\310\352\274J\376X\275\2248[\272\251\2003;\366\036\335\274\332\223h\274\213b\322<\261T*\274\013\035a<l\301X=\254\336}<\310\260}\274\372\322:<\313`\n\275\027Y\354\273\352\340\021\275\007\220\026=\007~%\275\027\362\"\275&q\021\275\274\366\031\275\324\320k<\026r\271\272.\\x<;\0302\275\213P\001\274v\225\316:\233T8;\257\324\024<\352\321T\275\3714\036<\221\370J=\2307m<\301@.=Ffq\274\364\003\026=\350x\031\275E?\013\275\304\251\010=\324a\336:\206\3309=u[\033=2\366\316\274\207\317&=\264\301:=\006\236b<\327\345\036\275\350I=\275{\374P=1\312\t<\362[6\275#\332\007=V \035\273sI\032\275@\016X\273\311~\234;\037\352\003<\321\237\205<\317\211N=\253X\003=\264ZW\274\362\302S\274(\363+\275\355P<<j\361\001\274\037\300<=\247i[\275\241\022\027=DA_\274|\2768\274\262Z\026=Fy\032=\351\000\304<\2113H\275\214\234\r\275X\001\234<\304B\277<K\304\236<<\327/\275\332\311>=d\262\336\274\374\2551\275\010\247P\275\245\216e<\'\210P=]\200=\275\204IY\275\350a\203\274(6]<\r\024\326<\265{\024\274\335r\022=4\037\375\274*\353\255<\366\002\244\274\277\321\340;\336=S\274\242\336\026\275\304\336\270;`\227\'\275=\207\326\274\206_\373\274\003\361\344<\371\010\212\274r\017b\274y\037\024=\036\245E\275W\277\005\2750u=\274\353wB=j\204F\275\276\204\373\274Cy\263<M\376\235<\231\0035=\231\230R=\327ul\274s\'(=\"\036$=o\003W=\013r\342\274\016\r\363;\243\374\306\274\306:C<\356\027\226<\\\370+=\355\362\306:\3046,=o\261\311\274\361\031\026=M\367\276<9m\\<\364\367\021=\204\204\025=#\177!<I\234\316\274\330\021\000\272\225\320\350<\035\357,=p1\367\273\031\361X\275\377=%\275ZQ.\274\202\376{\273\033\200\231\274\344M\013\270\205\033t\274\203\0249\274\244\360!=\231\023R\275\241\350\274\274\242\">\275\316\201-=?\204E\274\217\364\313;o/\360<M\304\252<H\311\310\272\230t>\275MOX=\370\202/\275\263\024\305;\032l\261\27492\001<\016\272\n=\027k\235;\232%[\275\303\232\216<|\360\214;\327\335\013\275\375\232A\274S2\005\274b\321\030=\210\267\354:\314\372s;\3553\221\274\034\221C=k\220?<\334\336{\274\271\007\254<\334\000\034\274Ha\316\274\316\204\375<r]^<\220qn\2722\254G=k+\017=w\322V\275%\327\353<\027\027\203\273\353\034\334\273cT\203\274 \374\017\275\376B)=T{6\274\355\263\007=`i\273\274\226;\003\275K\n\212\274\014\007%=\377\246\240<\231\352\002\272\266<H=\243\253E<>\n\215<\034\324\225\273v\2027\274\247\274\017\275\3731\356<\311\340?=\277y%\275\214\361S<\007\r\265\274\215\221@\274\216\030\004\275\344\373\037\274\302W\022\273\255\t\\=\216s\350\274\312\362D=\231\336)=\'\345\037=\024\306\216<\010,\n\275\r\333\235\274\377\333\027\275E\245\032\275\252\312\205<\362\033\243\274\363\356\035<\230\260-\275L\005]\2751\202-\275}\017-\274k\252S\275\033\341\031\275\346\355\013=_\365\3079{\253\035\274~DV\275R\005\"\274\215\016\007; \\4\275F\336\371\274\207\253\327;\222f\347\273q\320\360<\210\227\376\274\331\227\244\274[\024K\275\024\254\220\274]\3275\275\027\2139\275\374\373\255\273}a\374<\315C\006\275.\240\034=<\327\003=4\032\313<\331\021V<\202\264\205<,\022\023=k\032\200\273\254\2353=hOY<\321\023\301\274\213\021.=\34095\275\252\330[\275`\252C\273\240\203V\274?c\214;\031o\330<\355\330\224<\260R\037=$\270\336<h\n\374\273\230\275\024\275/\223&\275(\253\371<i\0166=\354cI\275b\321P<l\243\022=\221\322\023\274#^\013\275\000\024\016<\267@\370\274Q\220\376;\026\234\324\274\322\360#\275W\001\023;s>\300<\221\223\207;*\251\020\275\260//\275\310[\370<!\236\344\274\367\354\312<\036\203;\275\366HQ=\227W\214\274\0366\024=,y\220\274\020\300\201;\202\204+\2752Z1=s)&\274\236f\241\274t\201\032=X\002[\274K\222\337\2744\347t<\253\026\246\274\201\201\347<\252Hn<\220 \357:\\\224T\274V\211\230<i\220X=Lq\344\274\320\334[\275\265#\362\274k\375\276:^\263\226\2740\034\302<G.$=\023\264V\275|S\006=\227\323\323\274\177\257I=\320\375.=\3613h;\353PY\275s\257O=\362SI\274U\370\346\274\323\032\272<~5\362\273{\233\024\274\206=\034\275P\320f\274\321P\000=cw\031\274\331\364T\275\021a\341<V\376\271\273\355\203\256<{\241\200\274\307\341\027\275\246\273\274<\360M\024\275\264\0329=v\017\034\275<\027\243\273\200\230\316<U\314?<\362\256X=\201SU\275\231\367\203<\n\310<<J\263+\275/\312\r\275\005\352S=\001\367\237\274p&\322\274\n\265d\274\262\315\350\274`B\252<\375\204\013\275\264\026\345\2745\000\020\275e\234\266\274\207N\021\275@\r\007=\313\024*<\307[\017\275I\271V\274\271\205\204\274\007\227\262\274\036]i\274+N\000\274p\266\033\272\356B\024\275\007\326\367;Q0\256\274\020h\315\274\354\274p:\370\341?\2733\001\016\275f\373\360<\357\305Z=\006\033\315;(n\273<Y\275\246\274]\000\016\273\274&\264<}iP\273\372\367\324<4\033\t\275\2767\022\275\341\355\206\274\003\334\252<\220AP\274B\037\026=\025\027\000=s\312[<4BT=\006\246O=\020\356\346\274\353a\371\274\341l\026\275m\234\005<\222\352\363:\027&\325<\033\333=<\023\"\036\275\350\251\2669bc6=a\247L=\325\300D\275\262P\030\272\345\243\272\274\231\274\332<\327\364K=\267+\022=\205\373\305\274-\2632=Y\264\206\2745n\027=&\2356\275\256\t!\275\346\2172=\252\265Y=xGX=\035\223\374\274[\2336=_\217 =\256\257\030\275[l\261;\273-\002=\203\216\210\274\330\202\017=\031O\2309yH\023\275\213\300\017=\321\205T\275\263\236\362\273h\221&=\217d&\271\325y;=\262\025\016\275W:#=\246<\003\275\004\0108<}F\213;\354LL\274We\n\275A\032+=\244\251\r=\313\'\367<:\013\265\273\024{u<\267\325D\274\230\367\014;mJ9<G\205\t=\025\241Y=\301\346T\275\033\325\324\274wlO=:l\275<\341\273\0369i\324D<\025\031;9\202\341\'\275\334\266K\275\344\022K=\276\343\255<\273\213\245;u,\346<\364\204\254<\t\2609=/\362!<\263\365\266\274[D\256\274\275\351q\274\3046S\274\331\221\030=\362j]=u\244\232\274\245}1=hFG<\002\356w<\361\n\'=Q/\005\274q47=\275u[\275\300\370W\275\027 \034=}=\352\274\004fm;\320\274\271\274T\240\202<#f)=\374\274P=\321\314\323<_\314h\274`;\002\274\002\246-=!\212;\275\347\302\244\274\237\376\214\274\303\300\037\275KB<\274\337\0062=\275\347(\272NJ\213<\311\254k<n\241\271<W\217\312<GG4<\001\025\271\273\256/\032=\265\333\\\275G\030\277\274y(t;\275\022\347<\223\253S\275Ir\350<\225\027\374<\255\211\355\274\261\n\305<\373\3347<\353\\y<\017\201\220<!HD=\tSB=\233\241\211\274\024\307\277\274\025\247\036\275\002\216d;\023\022j<\277q$<\351\350\236<Q<}<W\373F=\025\'\255;_\202\363<\036X\367\274\325\336R=\020\242 \275W\321\004\274+R+=\3566*=f\rP\274\304p.<\375\351\001\273\257/\252<)\313\216\274\275`\245\274]5\251<z\360\007\275R\014\216<\035\256\301<\234\315V\275\304\311\233<y\364\2149\305\203\304;`\371\251\274\275\277[=3\240\022\274\256\327\321\274\206\250\"<\367p\225<0\244\350;\206O8=\265\241\022=v\262\244<\211\'\274\274\005\361\024<\243\371\034\274@\3543\275\253L<;>\345\321<2\001\004\275\2607T=\2323\"\275\370\300N==\035!\275\310\304\233\274\204\360\034\275\202\221\034\275\'D\310\274\275\004\334\2742\2753=\315\245S\275\034N\240\274X\316\\\27592\202\274\317\310?\275;L\217</\216k\274G\271\323;\312\264\266<\325\366\014=\377Y\361\274\'\215Q\273P\016A\275\036\367\202<\211\323Q\2757\326K=x\316\307<\332\253\"<\010$\007\2755\2642\275`\031E<\270#\002\275\232n-=\177\0303\275\230\3455\275D=\";\323\017?=n;\316<Em!=Kt\320\274%\250\352\273m<R\275\224\364&<\272\201\025=1\022\352<\300\r\t\274\007|4=\004\335\n=\355QJ\275\372L3\275\363\331\236\273\244\337\022\275\336\352\020\275\\UX\274\235\330E\275.\217\026<\257]\276<\033:&<\223\032\014\275~&\337<=\214\010:\035\254\335\274r\n\361<\221c\304<\\\252\253<\215x\203\273\375\217\t\275\027!4<\254\356\344\274\310\350V\2757Dc<nB\234\274a\206:\273\246\267\000=2<C\274L\"\375;\246\240\312;\323\201\250;\261@\274<\224\2663=\021\215%=\372\'-\273$KP=\267p\014\273\232\203\021=U\361\300\274mf==\346\363\322\274\221+\037\274g\243Z\275&Q\033\275\205Di\274\335\005L<\n\375\002=A\363\002=\233\211\275\274N\204\020\27589\306\274y\004\373;\310-\301;\267\212\301<T\034t\274WH\265<B\346k<i\274\225;\321FS\273\tu\351;\024\333\020\275&\177U\275\253\305\366<.\356\366\274\201\025\227\273\352\037\276\274O\025\033=\371\240D=\377\"\013=\031\2512=\375\221Y\275\216\243]\275\206\275\346\274\342\376@\275\t\320\005\275HG?=\246\360\247\274\320\376\345<\204s\237<U\036(\275\200\347\235\2731\276\264\274\3164;\275\220\033]\275\231\373\017\274\017\271\365<\350\312X\275\234ff<@\205U=+\315,\274\361\003K<\315A\251\274\030\013\216<\024\365k;\243\005;\275Hf\000\275h\347\007\275\013\263\266<\031}$=)\203Q\275\245x\261\274<:\355\274~\322E=)\n\033\275>\272\033=\336\224\260<\262\215(\275\340\226\272\273\001A\305\274H\246\027\275\021j\3028o\275\341<\031\331~<\332\322\261<\347#\022\275\251yk\274\376\373M=NC%=\352=\356\274s\313A\275e\014\350<\027\277\337\273,\200\037=\342|X=\272\303\270<\356\202|<\354\3317\275\023]\021\275`@$=\252\304\217\274.\343\202\273\332\246\224<\332\n:<\213{5=\317\351\271\274p\342\354<\300\254\013= )\025<\034\275\021\275\363\201\017=\322\024T=V)1=d\357\t<Q\232\305<Z-X<\\\013\226<\022i\001=\314c\030=R#\235\273\203\014\017=\236\377\243<\233\302Y\275\250\373\373<\201fK\275<,\340\274@\214\310\274\370\217\301\274\327\373P=Ja\006\275+x\333\273o\345Q=:\002\244\274\333\0336\275\310\373\n\275!\253\215<~y\006\275\346o\314\274Ka<=k\352\242<\301\223\336\2740\233U\275\177\307D\275\304\3769<s_)=\310\026\247\274\264\253\376;\362\255k\273\000\3260<mx#\274\3643\246;\002\005\026\275\302\376\226\273\261N>=`\256X=\207^\031=\3266\275<]\346*=\265V\004\273\rc\311\274\026\334\276<\330j\231;\341|\216\273\037:\036={\010\035\275/\312$=\003\260E<\362TM=\3702\343\274\020N\n\2736\316P=\273\016\347<n<\310<!\033\023\273\0176,\275\023\340\303\274\223\310\346\274\225\275\356;4\352\010=\r\321\356\274^\262\032\275w\370?\273\275\237\244\274\247\nh\274p\240\356\274\026ik<\014\275Q\274c\220A\275g\275\002\275\221\262-\275\236\322\237\274ac\366\274Y,E\275\301B\220\274F\266c\273\216\243>\275\270\355F=B\363\233\273\031\'E=J\272J=\002\226\344<\263\323\244\273{$\320<\366\371\327<u\253\305<\035CI\275\327x\222:\276\375\216\274\242d\306\274WU\001\275\232\236!;\017\302\010=d{\010\272\221}E=I\231T=L\320D\275\301\352\004\275\244=9\275ZH\003=\343\254\267<tg\004\275C\2146\273\362\352\032=+TK=\001\260\241<AP\252\273\023\203\244\274\t\376\010\273]\2625=3\005\335<\027 \261\273\t\027D\275@!\014=/G\223\272\347ZR<_\332\037=\311\316\370<*J$=\231\013\231<\326\r;\275}\000q<\347T\t\272\257\337\036<\311\311\005=\264d+=4\026E\275\014\"\002=\264V\275\274\026\177\300\274\277\374\366<\027;\242<\215\367?=}\234\014\275\255\345\024\273\210\022\026=kc\007\275\"VJ\274\344\362{<\342Du:C\276\231\274\244\222<\274\230\323\354\2743(M=\364?\027\275\177Q\360\274\000\346\276\274\002cP=\001\3556=\215\207\016=\221\246!\275\216\341\302<XfK=\327\022\363\273\351g\353\272j\335[\275\340\313\325<\230\376S\275G\324\250\274&\255\n=\330P\300<\222\234\216\274}\013\026\275u\237\002\275\336\230\016;\351i4\274\037<Y\272\\\345\342\274\340\333\363<\233F\022<[\2604\270\001<2\275\264\377\275<~a\024=U\210\207\274\350\270Y\274\253\257\326\273\246\014\023=\321\323)\275\276\'Y\275\347F\266\2748\216g<\314bF<\202j$\275\'i\323\274\321\300;<\321\265>=\370\036\246<\371\267J<\347\335\233\273\036\340\'=\366\2532\275Q+Q\274\251\210X\275\020\232\220<\263\364\031\274w\211\220<\325\201\003\275\357{U=o\271Z=\033\222/=\rh\255\273$\244L\275k\230\367\274H\\X=-0\010\273\236\001\027\275\350`\356;u\327&;Zd\264\274f\235S\274l\277\352<\353\363j\274\325T\022=\365\235J\275a)Q\275\223T\035=\331\257\265<>V\300\274\317 \214<;e\234\274!\332\326<\312\364\366\273\364y\361;\324\335E=\233g\023\275-^\214:\272\312\336<\250\026 =\351\327\344\273\357\343\360\274\331\222\275\274\310\233\220\273\2348\003=\317\271\361\273\224\267V=Ki\010=R\026\"\275\260{\037\273\034Q\275<\342\341E=H\324\034\275\271S\032\275\356o+\275@\210\320\2749+\207\2746\312\310\274\200\372\t\275\024\212P=\337m\003=\200\030\350<\223\304p\274b\357&\275\336=\233<\021\212[<\267\261<\274\332\220J=\362\274\007\275,T\034=\007\2576\275&N\362<8AG\275\000\232v<g\234\354\274w\003\360\274n1\257<\2327\335\274t\026T\274\274\310\260\273\247%\220<\231\346\223\274\236X4=5\335\221<\273mU=\274\220\024\274\024:\014<\003\226\242\2740\022`<\244\354\017=\004\247\n=\305\2340=8\334\020=\335\032L\275$\004\013\2757\265\n=\310\365\333<\326\227\222\274*\215A=\371\336g\274\245m\313\273!z\226< Wh<$\371M\275\226FA\275V{\271;\334\377\'\275\264Z\005\275\270M?\274^\373\327\274\tr\215\2747\261\005\275\225n\361\273\236Q\003\275X\'\315<>p(=i\237q<r\r)\274g\371\272;\321U\031\275\253\301q\273\023\362F\275gi\022\275\023n\016=\262\334\031<\333\3623=\252~[\275\365%\314<F\274\200<\'\035\016<\006\221\317\274K\021V\275\032\024\205<WU!\274\"Z <\337\225\001\275\355UQ=Q\203\361<\216\004\374<\263\364P;=r\365\274\360\370@\274\215\3053\275\344\220\232;\337G\017\275\221\003\264<\304\250\035\272\223\256\016\275a\326\321;\022\322\337<q\3532=\272\260\t\275u\304\312;\"\305\245\274\360\353*;)\002\010=zE\315<,6\346<\237\225\034=_VZ=?E\r\275\247b\374\274\330W8=\327\336F=I\006\323<\021\\.\275\036*\004\275\363\201l<\014\331\366\273\260\0145\274s-7=\221\020+\275\020\260B\273\275q\327<\232^D=vMI;\rO\361\274\234\000n<\257%#=\300K\016<]\262<=\360\223\003=lP\254;\372]5=\315\016\2749\353\377-=d\2642=6\177\005=\37155\274\256\302\372;\314\021Q\275k~\252<vZt<eTs<t\004p\274\352\302/=\032\271X=\255P\021\275!\3454\275\251\333\242\274\326\262\032=!\270Y\275\005\211\323<\244\301\352\273\217v&=\005\264\371<c\240;=\324\224\257\274,7\314;\233\233!\275b\324\021=\3200\266<\242\207O=\'\207\000=\232xK\275\276\305{\273re\007\275\360\332D\275\\\023/\275\350|\231\274{\017\353<\254\3206<\035\213b\274\263\370U=J\244\255<\351\215\253<\251\336\034\275T\215\357\274\2310\222\274\240d\254<\343uT=\007*\377\273\036KA=\267\034}\274`\206\244\274g\250\004<\016\243,=\303\177H\275\227P`<\204\301\224\273Y\036\312<,\247.=\237\251\243\274\365S\375;\214\303\006\275a+\253<m\361\310<w\2714\275d\371T=?\315\322\274\022Z\242\274\024\266\000\275\272\370\3279\272v\204<p3M\275\247\204\024=\026\1775=\221\000]\275~\226D=\300\245\r;\340c\223<\322k9\275\005\270=\275%\345\234<\177\n\330<+\240\027\275\255\245\202<\316\362O<\273\374\212\27325\016\275\376\240V<\014\321\254;\224\240\374<\200\276\234\274\265\210\n=\024\"\215;\320H\324<k\316[\275N\312 =\256\343,<Z\r;=$\004O=~q\377\274\200\260\202\274\324\005\211\274\340\002,\275*V\000=\343>?\275\221\306\036\275\215/j\274y\010\304\273\263\245/<\034\020A\275\225\250-=,(i\273\341\336\372\2742\021\335\274\261\001\022\275\3262@\273rlX<\364\003\303\274\022\304c\274\245\373.\275\242\023D=\032\222F=\332?C\275\332\310T=\2008\t\275\000\234v;\003\321\r\275\366#\031\275\302\035]=[\263\274\2736kD=\334\361\223<\370\212\035\275\275\306.\274\330\350c\274Y\035\024\275\351\006\326\274\031\035\027\274\t[&\271\003\316p\273f74\275\317\374\014=!R\022\275.QN=\217X\\\275\336\037!<\223\307\344<\020\203\272\274!\003\275<\220\266\010=z\000\373:\344\266Z=\366\376C\274\022Z\245\274\024\341)=p\"\004\275\256\331\014\275\264\327(\2753@\037=\303\301\005=pbA\275\316\246\235<{#\r\275\322N*\275\033|>\275Y\372\337\274\340\230\316<\366\215\005=\301f\007=\374bG=j\0232\274\252\346\021<\243\304\310<.\327\250\274X&\262<X\207\337\274J\327\272\274c_5<\232\0378=\rt\230\274\302<\013\275J\300\000=\021\267>\275\346\201\210<j\2641<.\250<\275\"\014N=d\341\341\274Z\207Y<c\270H=\016\313+\274\311J\304\273\203\304\304\274\026\261\256<\221\255-<Em\034=\320\324l<\320\355\215\274\210\360\260:G\203\327<X\037\273\274\r\0324=\014T\324\274q\227\003\275\303p>=\351\372\'=\327\014\022=bY\035=\325D\t;\243\246=\275\017?D<\274S\'\274\351\360/\2754\277=\275#{;\275q\304\037\275n\2076=\213g8<\031\300\004\275)u\307<\245\336\214<o\352\325\274\265U,\275\362)\240\274_ 2=\237\3558\275\342!\001\275c\300D\275qO\220<m\237.\275\325\035\336\274\353\2751=\007\346\027=`\231G\275RD\263\274-\264X=`\354<<s\357\007\275\331\261O;N\240\275\274\021WW\274\261\312\213\274\356\250\247\273t\374+<]\033/=^\272]<?R,=+\2609=\213\203k<\316\314\355\274\212W#\274W\334\210:\343\261F\273H0\331<E\'*\274\020\014\251\271\220\260\216\274\035wG\275\025Z\010=\331\343\243;u.\247<\337\277\266<\311\343<<_\354\302\274U3/=\323B.=\277Oe<\253(\323\273\325kA\275\224\030\315\274\301\371\323<\027\351]\275\304(\264;,0\"\275g\306\221\274+\365M=U+Z;/\030*\275>\t3\274\376$\021\275M+!\274Ca\274<e\257\\\275\325i\307<\304X\311\274\336;\343\2742\037G=\001t\341<\016OJ\274[\273\n\275\036\354P\274Dy\222<\336\370\007\275x\224\032\275\375\3668=Rn\026=\010(\007=\304\306\"\274r\220\010:\236\020\357\273]\\j;\255j\367<*\027\204\273\205;5=g\2101\275\335:\376;\370\252\t=\211\254\205\274!\253X\275\242\033P\275\303\355\372:r]\003\275\320\316\314<\240q\254\274\314]\033=\356\363\t\275\364\323\360\274\212\222\035=\377]\207<\010\216L=\006\216\311\273g&\r<:\334+\275\370\304\365<\036\356\034=9\314\351\274\221\362\236<\021\361@=W\220V=1\332\237:l\324\306\274@\002\370;9r\006<LM\255<.V)=\'\324\033=@]\017\275\271\331\005=\255\010\246\274w@\032\275f\375E\275\337\337\233<\341\262A\275u\004C\274\350D\311<\341\0147\275\265b\347\274\025\220>=\014\036i\274\313\223\331\273S\322\375<\031fD=\364\330f;QC\200\274iR\036\275\203\035:=?\310\370<J;\317\272\004\317\377\274b\331\274\274\336\"\256\273bkJ\275\302\001T=\240\016M=\300O\371\274A\030\017=\264\274\216\274\231\222H=\211\274\016\275wK\207\274\357\266\313;`w&\275u\255\215<\303\250\273\272\000v\002\275\005\305\227;\316\304\205<\001,\t\274n^4\275z\211\320<\030+7\275\025\"\345<e\203U\275jK\033=\316\347\001=\217\023\274\274\033\326\032=\220\324V<c3K\274\371\317O\275\270\337\263<\247\340\027<Y\227==|\311G=\226<\330\274*y@=\257\365\262\273\306!\204\274\305\034\010\275\205\327;=\377.Y=\000p\004=v\177%=F\311L\275\016q\237<Q\374\350<\255\340\364\273x#\250\274\337\374\035\275\247(\303\274\346\225\003=\312\230\005=\203)\334<\210s\n\275\304\306\005\275\304B\354\274#\356\025\275\361\225\237:\273<L=\037\271)\274\330\264\016\275o\314\022\275\371\272\177<\336$\032=\3129\025\275\032\3565\275\222Z\3769\014\377*:\034\267\024\275Qd\261\274\254~\300;J N=L\363\037=H\304\203;=E\244\274\306\342\226;\235\240\027=\372\377\300<\022\257\003=\275\206\351\273\260eQ=t\234\020=g\264\r\275\342\241\347<Q\354S\275%\210N\275\360(\\<P\"\017=\346\277\302\274\250\201~<0j[\275v\"\274<\n\021\033\275}O%=O\3452=\326~\362\272\325\226T\275\224\240,\275\270\262M\275[\006\316\274\337\325`\274\333\221#=\275v7<\007\243\251\274\232H\216;\250\372\026=bg\013\2759\031\265<\223\254\001\275%\037\235<\220Z\327<<+\253\274 \372X=*H8\275\220\277\024=\364\235\361<op\n=},\262\274\023\2541=\275\013\"=\203\334@\275\202\022M<h\302 \275\363\270\032\2757E\026;\275\243!\275\036D\004\275\321w@\275\013?\323\273\363\362\360\274bL\030=\036TU\275RH\331<\211\261O=\220\237N=\236\021\t\274\211\307\220\2740m5\275\r\234A\274\367\237.<\343\331\010\275\026\342D<\022\366\365\274\336\351#=m\364\367\274\311\027\317<\r_T\275\021\242\330<\216\204\025\274\377c\325;\'\275M\274\006\237\002\275[N\357\274DbI\2750\007g<\2418\265\273 \366\337\274\202H\342\273\341\242V=\007\370,=\006\256\232<\274\323\017\274\177w\270<\304U\305<\257\n)6\310\307\177;n\352\226<\256m\031=\352\351A<V\000\347<\274\247\024\275\370W\213<\334iA\275_\365\201<\207\240r<8P\r=1\350P;\242\2113=-H[=~\307\217\274\362k\225\274\370\0251\274\335\372L=\241S\333\274R\303\216<\023\336\010\275\320\272#\275\234\0036<u\376\033\275s{\335\274\030\261X<|\002\353<\025ex<\350+\n\2728)\276:\3576\352;\021NC\274\307\251\256<\254\260\304\274\356\330E=\243\001\037<)W\356\2727\246\310\274\247w\205<\016\245;\275\341\322]\275L\003\332\273\002\004\375\274\374\n\344\273C\362&\275\2360\300\273\262\010\025<\334\346\315<.\031\330\274\277\034\324\274\237E\235\274\237\341\217;\t,G\275\221`\335<y/\215\272\363\304\020=\213\n1\274\2259\r\272LP\275\274\346\217\001\275\240\356\211\274[W)\275q\304\240<U|X\275\260\200/<7\263\261\274\225FN=\244\215J;b#\256;\341\024L\272\236\337\310<^/\341;{\362\237<\300B\001<\353\3050;\231\\&\274\343{\027=\033\241\207\274j\330\323\274\252\323\275<\177\032\217\274.\177\007;\351<@\274\2102B\275\335\t\323<2\232^;\246@Y\275\2034v\274\312(\260<^\244T\274\345 \267<~z\372<@\355\000\275l;\031\272\274!\250;S<M=l\203a<\210\310\005=#\001\330;\304\371;\275\314\201\033\275\027h\224<WU\232;\307@G\275W\347\317<\000u\325\274\2516\234;\275]\001\275-\227\204<\321\002\251\274\253\365\367\274<\311\037\274\356\330\214\274u\302Y<&*\007=@\234=<\356\341\007\275\276L\306;\352\356\301\274\033\342I=\216\206\305;e\3732=)*\310<\234M\003=\355\355\036=p\221\201<j\254S\275sZ\251\273\352\300\013<\241\253)\274\250\311\246<\346.\230<\343\276\032\275<\036\356\273\353\325\017=\357\274q<\226\276 =\377\021\254\274\220\tN<\235\224.<\"Z;\275\036\035\206<85\005\275\310C1;\254\345A=\027\260:\275\374\253=\275?&I=g\272\032=K\016\026=\207\361\020=\244C =\230t\205\274\241\r#=\014\341\025\275qKD\273\324u_\274\nj\001\275C\201 \275J\376[\274\215\222-\274\354YK=\203\317\341;#\177&<\016s\301<\246\360@\274\327\003!=\266z\226\274\310\314\032<\373\211\023=z\265\311<\014U\032=k4$=s3I=\204`\360;\364\037\344<\027r\225<\317\336[\2754=\007\275\340\025h\274N6\002=\261\007T\275~,\307\274p\313\003=<\231\035<\234SS:v\236\215;\244\364g\273\231\375\005=\243\312&\274~\246\307<\315\233\344<$\353\360\273\3112\242<\220\312\310<\223\333\373<Z\324\017=F\237^<\t\240\014\273\271\013\031\275\235\260Y\275\327\364\013=\273\327\017<(K7\275G\374\216<G%2\2759\331X\275>^*\275\272\214\013\275\002@4\275\317O\211\273\304\204\000=\n\261H\274\323\216\332\273\277\363#<-\316N\275\2606H=.\2753\275|\234\352\274@\241\244;\211r\223\274\374Y(=\244\240\206<M\363\016\275h$\314<c\303\342\274\314BZ\275(\240T=\327!\'=\211d\245;\234@\022<\221\177Y\274\223/\024\275\217\233\377\274\345\225\000\275,x\341<\207\254\002\275\361\n\204\274\271*\\<d 4=r<I\2757U\030\275\233:\3758\333-h\274\253\3606<\252\375\036;, ==\327\366K=\332d\304<!\322\302\273\035\0376=\331\277=\275\\D\233<$/\017=\'\340\021=\3670\372<%\364\340<\023\031\356<@\025/=\332\231=\275\215Q5\270W\371\306<\205n\265;%#\000;N65=\361\353\210<R&\\=S\274\007\275\227\335R;\2146\007\275/\331$<\203\362\266\274\"e\240<\021\023s\274;\262\247<\246x\303\274\364\231\251\274\334\214?\275U\252\004=\370G\201<\230+\202\274DRe<,\016Q\275?$\003\275\202v\025\275\322\373\326\274\306\240\002=\340\337(\273\032\375h;Z\243 =\026|H\275K\346\233:\007t@\275\255\004=\275cf\275\273\354+\005=\251\351\034=n\347\213<\241\036>=b\245Z\275\245/\240\274\035G\312<r\227\347<\026\035\377<\266\362\276\272+\000\026<B\'\250\274\363\"\030;\206\2178<\207\304\340\274\365/4=\324\317\337\274Z6\210\272e)I=\034\360\357<\343\244@=W\334-=>\375@\275\004b\353;\361\267\274\272\325\"\347<\321z\001\274a\246C\275\270|\325\274_\330\342\274\313!M\2742\215==S\336A=E\002\245\274\376\340\241\272\034\205\352<\224\324\357<\335\214\332\273\244\347L=\367\002J=\337\'\002\275\222\241\205;):$\275\267\360\315\2746\2137\275\2679\235;\367\314\346<?tP\274\332\0024\275\024\310\373:\236)\371\274\202\003-<$\362\031\275Q\313;\275*i\276\274\224\271\230;H\350\202<\005\211\252<\322\251F=\254\021T=}B\327<\205\243@\275\\l\004\274^\317-=V\345\037=ds\034=q\240\206\274Y=\223;\262\346\321\273\023\005\326\274\031\235:\2758\305G<\337\024H;\325$\301\274\2169I;Ch\023<\006\257\350\274 \213X=2W\234<S\211\027=9\272t<\237[\364\274\255\241Q<W=5\274\021\300D\274\3469/\275\344\307Q=<(\032\275Uuj<I\266\373\274\251\264\234\274L\217>=\033\324\216\274\200g\352\274\'\230\207<`\013A=\261O\311\274\347g\024=\013\233\276\273\326\360\327<\203d\322:\305\355/\275)\031W=\303\266\342\273m\333-=\314MD\275US\253\274\225>\032\275\341c-=\341%=\275C\034U\275\375K\334\273\256\023J=\013\0005=\'s\236\273\366\374C\275Mk\244<h\016>\275<)\003=i5\221<\023z\\=Y\277=\275\330\313\304<\202\332F\275\353\302Y\273\327uD\275\314N\2449G\372\217<\236\272\\=j\356\345\274(\211\203\274\027\241X<8j\244<\245\246\233<\314\263\"\272J\277=\275X\215\030;\336p\017\275\274\341\026\275ay:=\332\273\251\274\233(V\275\352rE\275?X\313\273\374\226H<?\205\323<\314\005I=\366\274\034\275\254*7=A\214\207<\311\013p\274\257*\201\274\367\327\211\274\350\3142<?ui<\034\251H=\302\222 <g\250\241\273\334\0351=\312$\303\274k\034\273\274Q!\370\274\035\023@\275\345\256\206<\213\3112\275\377@\372\274.!\322<\327\023\'\275%\215\212\273\357\004Z\275\263\303X=|$\240<\316\204G\275\265^G= \n\205\273\326\272)\275\245\\\346<\016\354H\275\324\362\365\274\365j\240<\301\233,=\364<8\275(\270.=.\250\232<\372\t\332\274\244J\247\273\374\353\005\275\237v\036\275\373GY=\256\3517\275\326\327j<\032\324{\274Tq\346<\3103\034\2744\204\375;[p\303<\230B\177<\226gV\274\341\263\316\273S\373\r\275c2\017\275[\273\031\275u\020\346<\026\013#\275\376*\303<j\300\362\274F\2253\274\251\204\t\274\00218\275\340\337\017=\352@\'\275M*D;O\303\006=\247\271x\274\304\371.\275\223un<\265,(=\323?\027\275z\354\231\274\260\321\354\274\273\255\006:\242\t\372<\316\344 =\311f\t\275\204\354Q=h/F=\013b\037\275\034\256\002\275l&\264\274\034\243q;\353\2463=\357\n\\=\234l\337\274\340t\035=o\nD\275\031\316\022\275\200\306\272<\237\201\211<\271\350==\217\305\330\274\324m\360\274\2640=<\031P\365<?\240\204;%\274\227\274\372L\026=Y\022\303<\201-&=\227H\"\275\225\301\273<\216\022\270<T\240\250<\270\236E\275Ib\002\274zI\242\272,\022\0358\207\346\302<i\207;=\206\243\237\273\241\261S=\354\367\344<-\322\243\274\360:A\275\341\031\251\274\362$\320<\204r\211\270\270\240\221\274\237\376\";\257\013*\275\017\002\262\274C\024\254<I&9=\214s\204<2?\245<&O\031\274\254\307/\275\263\301\264\274vw\373<Q\320/=\325\201\215<\222\273\234<\335\026\357;\341\026\000\274\362D\027=uq\365<A\354\177\274\340\2650;\242\216\263<X\373;\275\232\036\027=\255\321\265\274\374\010\201\274\322C\254;|\341\204\274\rH#<\373T\017=\212\370P\275;\360{;>\277\306<\223\256?\275\304\274N=J-\307:\320 \007\275\355cD\274IK\005=#6:\275o\2044=\375\013\020\275\236XR<;\344\313\2735C2<s\300\036\273\277\264i\274\344\336\030\275\356oJ\275G\340\364<*F\323\273\343\001\265<\324\344q<t\326\373\274*\033\021<F\r[\275\305W\215<\365\320\336<-\261\026\275\341M\322\274K\005\335<\205\372F=W\"\222\274\206\345\013=s\364C<<\034U<f\203R\275\031K\367<\240\372\264\274Yq\332\274\354\215\003=\006IK=\350z\320;l \232\274\314\"\272\274-\377:=\326\244\020=<\343n\274\031\211\265<6_\307<\002\033b<\341\017\006=\037\243\026\274\355?\026=I\000.=IW\222\274q\343\017<\227rH=\231\321B\275\374L\271\274HJ\'\275\211\257\023=P\257/\274P\027+\275\351G\270<\237\203\312\274D\344\223<\236\242\212<\234\257\017\275\265p\234<\210\2737\275M\316\377\274\326\274\377<\035\3070\275b\037\224\274C\221\347<\224A\030;\274l\216<\036\035G\275_\321K\275\207\340i<\213\272c<\376\275\354\2743\310\242\273\312=\247<\366m-<\3331\'\275\022X\\\275U\270S\275o\013\376<q\362\001<\0011\274<\211\332\270\274\226\266i\274\226\263)\274A\361\257\273\223\313\000\275u\034\216;\363\002J\275&\346\230\274\226F$<\271i\031=Ny\300<\273N\205<\246s3=\343\353V\275\341z\320\274N\217\366<x\010\034\275|\021\205<\312W\306\273/w/=U\270\026\274\224\211D\274>+\376<\230\177\214<Md\341<wU5\275(b\035\275\035\270/\274\247\003\324\274\266\206&=\353\340\344\2749\233\367\273\365o\223<\365\014:\275\326\010O=?\2451\275\026\"D=5\206\217<(\246@\2758\017\t=G\204F\275\346T\217\274T;\'\275\021\241\311<\263\023T9\003*\021\275 \326\010<\200\374\346<\332\242\346;\3052+=\321\032\255<9\337\004=\311\226\030=1\034\300<\240ub\274D\210T\275e\337A\275\177\352N\275\2443B=E\252\376<\244\231F\275\236\035\360\273\207\007\034=\321\372,\275dY\323:&[\305\272LI+\273\300\333\315<g\371=\2759#!;\nQ\r<\004%0=\242\2226\275K\324\375\274N\'\002=1\335\320<y\364d\274\030\003>\274\264k\266\274\307\266*\275\274m\201\274\206\333\242</\272\232<5=\320\274\032\365\350\274\227O\030=\234v\303\273nU$\275*{S\275\223\361;=\013\002\021<\317OD\275\232D\242:\313\364\343;\201\025\206<\363\272\202\273\274\035S\273\360\025\021={<\247\273\371\247\341<\207\310\233\274Q\255\267\274\273\307\004=\217\251R=:\245t:\317G\t=L~?\275\277\025\301:\347\244\r\275\250\324>=\024&Y\275w\tU=-l<\275fC\026;\201\254\023=\240/\340\273\224y\260<:\315C=xi\013=\256\0056\275\021\250L\274%\3754=\021E\027=\231\365\017=\324m\033<g/\026=\377P\001=\031S\376\274\202\342\000\275c\356\333<HW\022\275\331\276\255<\243\235\022<\334\223\376\274)m\006\275\375u\240\274)\\F\275#\256\024\273pt\026=\232\311K=\326\377;\275\274\345]\275\343\266 \275U\302\374<\'8\316\274\365\304\'\275\367\361!=0\346\365</\274\034=|G\003=\245\371C=\252/]\274\213\004k<@\231\207<)\315\014\275~DZ\274\342\346\005<P\000\256\274\261gX\274]\223\'\275\313Y\332\274\252\310\004\275\001ez<\301;\303<<O\270\274\216II<\375\211\224<3\377\270;\\j3\274\034\3023<\275\277\363\274\336\223m\274\233\321\207<\207\206\322<\377\304\370<j\005B\275\036\240\017=E^B\275X\277\250<|\311\300\273\033\325\222<\227i\022=\362\276\035<\226$E=\376Hw\274\257\244\014\275\262\032\312<q\".\274\310\3366;\267\234\221\2745t\001=Q.\225:\214#\206<\013)\307\274\247z\322;\356\2322\274\343MT\275\306\270\027= w!\275\322=\240\274$\3731=\255\336\207\274;!\010\275RF(\275\262\026\274\274\276\354\235\273\211\344\331\273\316\344\254\273\353\232\265\274\335J\213<CI8\274\203\2202=(\306\276;\030\315F\274\310\026)<\371\037\322;\261v^<q\330\034\275!\265\317;\200\2429=\307\204\013=_\306\007<\260\017|\273N\210\212<\365\006.\275.\362\037\275Qh\272\274\212\321\266;3\322i;]\347@<\222\224\'\274\016\263!\275|F\035\275B\370?=^\0143;\002\242\357\274<\2644\275\255\236w\27424<;x\316\362\274)!}\274@\207-\275q\035\n\275\306j\214\274F\332\352\274\341p\017=Q\022X=\217^r\274\261\021\307;bg\214<\022\0243=Y\334%\275\016\231\375<\363A3\275qH-\274\201\236n\274?CN\275q\262\231<Y=\036\274\2229\202\274\033\004\"\274\010\367\002\275]\201\252\273:\352q<\220\300<\2752\373\256\274\214o\000=U\027c<\262\251\000=\273G\033=&\211\n\275\245\370\226\274\211\234\324<\300jE\274\372,\321<\002\262\245\274\222\216\030;Y</<1:\301<\367&9\275`\007\213\274\021\210\364\274zj\006\275\211\177V=h\343H\275\360U0\275\016\342\005<+\260!=Y\3108\275D\305 =`+F;U\363\235\2739e9\275\n.\301\274\t85=k;1\275\006\215g\274\351\2242<j\004\334\274v{\033=HZ\007=\032\003\010\275\231f\023\275$5N\275\177^\017=\227\345\\\275\245-E<\222c3;A\351\256;r\204\321;\211}\340\274YcI:\235\260\005=\022\303\007=\340\014\255:\243 =\274\377\333\231<\000\360\017\274\244\323\337;l\230\204;\237P\001\275\\\256\322<:)=\275>\305\306\2746>\234\274\\\227X\275\306e3<v#\366<\271~\353<\352Rn<\357B\313<G\351+\2740\3742=\301\350g:\222\256\026=\224\247\006=\251\220W<,\224\301\274\026\253\257\274\305k\013\273\252\335Z=Q*\023\275%\202<\2743\320O\275\261\3447\275\212t\242<\177\315X\273\336\'\031=$\254V<\014B\007\275\022\022%=\373.7\275*^[\275\237\017\"\275\251\342a\273R\233\217\274\335\002\004=\240\362D=\206%\242\274\307O\006:\036D\213<C*\003\275]\362[\275\242\'%=\230\257\312\274\257Y\267\274\272\227\r<\346\224\232\274<\247F\275\222\340:=\306]\220<\t\2311\275\303J\374\274\237\220\007=\342\n\302\274Zq\306\273k\223!<.<\032=\006|\331<\025VX\274L\345\245<v\356U\272\376\025\304;j\210;=\254O\036\275\000\344\014=\327\330s\274M\244\241<\2759E<\236W\365\274, \236<\234\335\303\273\270G\033\275\\}\232\274&\036\t\275l\007\225\274dJ\220\274\366\177\031\274\220\247-<\266,&\2757\017Z=\031$\036<\020\177\332\274\t\0203\275\204\330w<\265\330\223\274\003\025T\274n|\347\274Jfn\274\205\'*;P`;\274v\033\370\273L\321w;\250\007\340;0\207>=5\311\204;\216=\316<\257?\360\274\276H\024\274O\255$=\001\204\t\275j\246\274\274\251a@\274\222\226-\275\"3\221;\002\377\206\274`\372\221\274\371?v\274G\347+\274\013\307-=\215\332\226;om\023\275b\003\003\275\256\234\000\275\357\273\034\275\003p]\275\355\241@\275`\266^8\201K\371<\215\017\267\274cw\354\273~P\317\273uz\264<;L*\275\007n\203\274\345\357`;\216\216F=\224W;\274\2734)\274\354!t\271\221T\207<\004\257\264<\360\356E=\010\321\r\275\312I\035\275\344>\324;\272\342\215\273eeQ=\273\261+\2754\222\303<\355)\320<\001\230\246\274\367\\8\275\205\224P\2721\247\331\274\224\022\247;\376\246\030\275\t\207,<9\326M\275\034\226&\275\335\005N\275R~\233\274+\213\254;\217\376\344<\367\032\322;+\3249\275I\365V=\236\206\375\274\205@\357\274\251$\332<\010\326\036={K\264\274\332\201\026=\262\304\254\273(\202O=\313\374d<\333\263\016<w\330\027=:c\222<\254\214C=H\351\010=\253\375\026\275\nR3=\312\317\340<F\247n<&o\320:]1\003\274z\255:\275e9\'\275\221\306\211\274s\035\357<5\344]</\200\030\275\234\016\206;\340\347\270<\204\274\223<\023\371~\274\01065=\177\277\206<\035\n\344\2742&\343\273\330\2423<\264\236+\275\234\361#=\242\303#\275@\031\276<Kd*=\2663)<}\203-\275\376h:=\265\243.=w\026]=\233]\320<\013#\257<1\257*\275\020s9=)3\267<^\331\021<\336\340\361\274\226\177\032=\274\276\305;\320\034\007=\316\272O\275\347\335\010\275C\025\343<\212L\000\275\267\313\004\273Kjd<\353\347H\275\025\2469=*\205w<\264\247S\275\321\r\003=\242\005V\272\231\244\261<\355h\034\2731\234\210<\035\263\243\274r\277\004\275\271\336)<\234F\001=c\r\326\274\312\245/\275T{\266\273\221\014\003\275v\332\322;\231{\352<\330\300\016=X\220N<\371\0347\275\233\322\307\273\333R\005=i\220\203;\t\341E;) !\274\037`<\273_\346\232\272u\312;=z\251m;\021vR=1k\202\272\313IA<\333\212\020\275\021\010,\2749=\n=*{B\275%w\343\273\300\273T\275\210H\267\274\332\371F\275\315H\025\275\006O\316\274\351\217\326\274l\006`\274\013 A\275o\377\245<\355\270+\274=\001K=3{\203\274X\0219=\337\207\337\274\000J\321\274\344\270\313\273\307\304\356<\343\036\232\274\0028\367\274U\257\375\274\340\2228<N\340\014\274X\314\025=\030\232\010<\2260=\274@\375)=\332\370<\275vl\272<\236@\007\274\217Z\'=\207g\376<\035(p;\303\001\227\274*\306G\273\232\213\001\275-\320\025\274\250a:\275\340\371n\274z\216\307\274\266\320[<b\225\t\275Z8>=+\273A=\000\200\005=\256\003\032=\'\223(;\303\246\240\274\235\276\372<=;S\274,(\273<_\250@=\367\373M\275\325\301@\275\241)@\274NZ\377\274\360K\325<<?\273;vQ\241<>85<\321!\027\275\222vs;\003a\331:\207[\033=\315^?\275\234\347H=\014\023X=\234\350W\275\000Ks:\024\200\251\274\210B\023\274\300Z\260\271+\350?=\321\021\366<\316\267B=\257\271\327<\2700?\275\352\310X=MU9=\010\027Y\275\300s\316\273^\222\360<\205\334\306<*\312X=\324\0006\274\227\342F=\356\014#\273\023\352\264\274\030\230\031<>\227p\271\217\3031\274\004}\276<\214S\021=Y\241\036\275^IL\275\300\212\003=v\227>\275B\354*\275\347\216\250<O\032R\2755\376*\274\324\304\231<\247\033>\274!\225L=\373\335\036\274!H6\275\235d=\274m\370\'\275n_\001=\273\234(=\242\217;<RY\244<0\033\021\275\333\373\315<\271u\027\275\303\334 =\0146\315\274\263\270p<\276`\007\274\203\266\334;\305\365$<\330\257\357<\340Cz\274]u\224<\365\231\010=\034\030\014<g\022>\274\246\265\247\273\273v\001=E\250\003\275\356\030\001<I\241\027\275\316\310G=)\366\304<\322l\363\274\362\275\203<3\2149\275:\343\312\274\265R(=\314A\232\273\377\007\245<\372\r\212\274^*\022\275o\023\030\275\240\004\266<\035\336*\274s\373#=\336g;\275\353U\"=;\237+\275\313\222\271<\21553=\336\177\323\274\336\211I=rl\227\274\226\247\n=\350I@=\216\263S\275\224I:=\360\357Y<\203K+<>\0000\275K\'Z=\220y)\274\230o\260\274dD\376\274\304\327\022=!\200\355\273\036j\334\274\276\215J\2759v\232<R8\332<\036E\022=\017V\264\274\0252\370\274\265\333z\274\330\346\001=\262\235\330\273\372`M\275K\221W\275\243$\364\271\242\005Z<\2723E\275\207\216\353\273\257G\320\273\311b\271\274\206^ \275_t\216\274\3208\177;F;#\271\310\335\026=a\306\246<\354\205F:\031)\033\275\\x\000\275_\205\334;\007E\021\272P\262\331<\316\326A\275\000W\344\274\203b4=\255A\357;\230\322\030\275\253N#=BMz\274\004%|<\223\272Z;S\3656<$\223Y\275XN?\275\032M6\275\302`\313<\026\202<\274]\255\306<\020\351\350;O\322\376<\326\201\326\274\260\330\220\274/\242\377\274&fQ=\3701\254<KXS=\362-W=\010g\207;\314\013\332\270\343\0316=9\206$\275\375\235\365\274\312\372H=\330f\232<\253\367(=\313[\374\273\314\000\006=\317w\037\275\244\004\321\274\234\310\275\274~}X\275\240\002%\275\023\354U\275&f\352\274,JM=\237\252Q\275z\360a<\343\211=\275}\006\302<\0249z\274E$?=\033\323\237\274\"\256A=$\030\235\273\255[\321\272!G\004<z\204[=\232\017\273<j\216\202\273\211\364\252<\245\005 \275\001\034!=\311m5=,\324\343<\000b\013\275\322-\335<\221\372\370\274{\310 \275\230\204\213<+H\314\274?\370M=\265\202\017=\211\'T\275\\\300\023\275\344\034\371\272%\372\037\275\017\'Z\273^\357@=\343\200\"\274_\2775\275|\221\246\274r\233G\275\005\241\222<\256\274\034=\006FY=\300\221\'\275Xv \274k\333\374<\342IB\275\354I\207\273J3\346\274\016E\237\273Lt\t<\262H\244<\301q\013=\327h@\275G\020\"\275\332\207\213<\3712\365\274\375\246\272<.\365N=\346\014\322<\032\\\016=\331\232$\275h\326\022=\201b\304<\244\333\345\274a\004\274;\322D\003\275l\013\003\275\203VC=\200\030 =\307\335\003=7\337W=\230\306\326\274\206sE\275UL\325\274\261f(=I\004\346<)8$\274\277\237P\275\337\343B;\356u\226\273\'\332\025=\355\r6=\367\252\304\274\014\256V<\276y\033=\360\033I=\301y6\275\014:&=yP\202\273=\035\r<0mD\275\276\333\033=\275cq\27497\252\274\3371\t=\273\003\230<\356\303\025=\"\351f;\254\2435={o \274\213\037\032=\377R\302;\335\347\324\273\346j\244<\221\265;=\331G\306<9@\n=\001\002:\275Z\267\006\275\017!\343\274\320\2053\275\377\223\';\005\007Y=d\214\357<\000\002\027\275\006^\2619\357\370D<\275=\300\273\r\270.=\347\004\027\273\203eH=\350\207\021\275\335\375\001\274\333^\013\275A\000Z=\006\310\022<\327\207\327\2748\364;\274I\3458\275T\305\326\274{\006<\275\002\210D\275\336\362@=\202|\250\274\361\340\362\274\255*P\275*\254R\275\266S,=\277!G\275#\344\362<\030\334?=V\035a<\006g\364\273k\244$\275\333]\023=\272\313\331\273USM\275\303\212\024\274\273X\224<z\317<=b\000M\275\325\2723=?\377s<\310\334\346\274\265\360\242<A\243\326\274\315 \330\274\006\022C=\314p\031\275\247\0227<\201\210\315<\261)\204;&\017(\273Z\025\021<\364\230\025\272\337\240\033\274\347k\304\274\3637\254\274\351q\301<\033\277Z\275\343\264\364\274\223\313\253\272\375\n\245\273\003\226\346\274\262\365\006\275\277W\271;&\322,\275C\032\210<\030\024\324;\014\250\340\273%\340%\275<\002\001;}C\035\275*P\223\274\215D\024<\226\257\'=\344\227\257<V$\340:G\336\371\273\251\327%<\231vY\275K\177\256<\3041\363\274\313\216B==d\016=\177I\321<\316\255-\275&\237\334\273\357\364F<\321a\222\274\204\331O=q\343.\275\312\315[\275\330p\317<p#g;\304\331\303\274\311\021\205\274\3668(\275\325\352\234\274\006L\376:]\'8=* \321<\342\2755\275\247i\030<\322\373\302<~\354\301\274\216\366%\275\357\207\013=,?\337\274\037\'6\275\217\234\"\2752\330\326<\250\025\002<z$7\275@\321(=\317\205K\275d#\370\273\251\"\247<\200L\275\274\312\364\316\274\024\352\005=\'\375\354\272\254&\302<\307\363\376<\017*2=\303\355%\275G\333\351\274\317\347\366\274\2578H\274\336\361\353<(,\037<m\363\367;\237\245-\275\334\365\377<\275B\376\273\224S\375\274\273\225\363\274(\023F=l3K\275?v0\275\262\336X\274\321\360\010=\276B\323\272\321\227\207;\301<\\\275^a\026\275{\335\241\273\235\302\321<\005\2753\275\253\224\377<\241\r\030\274\t\237\336\273X\347X;\352\010S\275\2514 \275$\307q\2743ZS=%gF<\336Y\347\274W\222\356<.\276(<X\235@\2758\361\355<%\334?<\307\342\022=7\215/<.\237\010=\356?N\275\017\313y\274J\304\021<\341=\235\273\007\241\201\274\341<\027=bX!\275j\264\254<D\370L=\277*G\275\215>\307\272\307\036\371<\362\201Z\274\274\010\203<\273\320\372<\316\037a</e\236<\017w\247\272]\300&\275\362\025\272<\005Z\\=\345*\007=\332\224\246;\006\230Z\275<v,\274\311V#=$(\340\274\202\036\022\272\307\300\'\275$T|\274|g\026=V\234\376<5\'\004\275w\201\261\274\"\245\374\273\212$\020=\'\375\223<\023\307M<\030\"\224<;\307?\275e\233\032=t\310%=\245C\227<U\017*=\016Z\260<\200\353Z\275\345\305\035\275- \302<\272\3207=\007fU=\006\212\035=\365\235\002=\2779\206<7\257\010\275\323\200)\275\321\333\363<n\252\001=\351\263S\275\301n,<h\277\347;v\007\223;\332\007\364\274|#\005\275E^M=\243\257{\2748\234\221\273\3614\312<\230\355\327<\216uK\272\355v*\275\247OF=\\ \031\275\'r.=o\374\202\274&ut<\206~\036\275\357\017\206<F&&;\372\020\377<\2071\032\275CN\366\274(nQ=\013\3774\275\304\202\357<G9z<\003RA=\317\220\262:\377\301<\275\r\251H=Gl\246<I\267\314\274Z\204\014\274\257j\261\272\303zi<]\032\020\275\375\331\215<!P2\275\033\207\020=\306q>=\0301Y\275Xk!=\007\325&=\303\247\005\275\276\\D=\034\256\205\273\005\205\207<\315\200+\274e\343\204\274\276*Q<\265\224L=\017\343\315\274\\\251*\274\254D\376<\016\355\256;XB\033\275\254\257&\274\352\350\003<\"\031\246\274{\035\311<\345\344 =\302\330R\272m\007\323\274K\263Z=\372\302=<\267F\371\274O?Q=\2455\r=\025v\245;\241\300\251<)o9\275\254\344\315<\301\250<<J\274\311\274\225C2\275p\257\030;/\021+=k\325\251<TM\216\274F\031\022=`\024j<\035\362\020=D\253\325\274+O\314\274\0027\"=\355h\032\274\334\213W\275\023B\374\273\333-\010=\364I:\273gD\n\275\2458\332\274\274\311\224<w\217\363<N\347\310<\234;\321\274\243\374\212<\336$\363<\307\n\223<-F\201\274GgJ\275i\305;<vh\r=\306\014\343\274]h\303\274\377%\314\274\274\020\n\275\0078Z=\245\r(\274\023\354\372<{\235\014<\t\356\343\274\242\340\247\273E\016\335<[\237\321\274\232\367\005=okn<!\217\033=\337`\004\275vtg\274\003\304\306<\037\214\336\274\271\007%\275\035z)\275y\324\034<N,Q\275\024O>\275\t\014\303<>\326D\275\326\264P<XQ\013=\354\007\353\2748\346u<\364\326)\275:M\267\274\362]X=gS\027; \275%=\235\237\251\274\237\367\367<:\250S\275,\273\200<\2649\373\274\221fF\275`\327\333<gM(\274\210\000\016=%w\017=\n;t\273\226\030\020\275\223\227\371\272\240\344v\274\363W%<\036\025\253<\311\245\017<\223\371$\273Da\340<\205B[\275\204TW\275\326^\305;\374TE\275\212\255\001=\242\202\025\275\354\343\202<\212\224\r\273\254\005\341\274\243U\250;\205\262\3649N\3271=1\026\352\274\007\243\037=Ht\250<\206>\251;v\242\232\273X<\007<(\260\344\274\301Y\023<2\033\212\272\2503#\275G\264>\275^-Y\274\230\2022=\301\017\007\275\354B-\275%\312\355<\304\035\264;\270\204\031\275\r\2253=\220D0\274B3\223\274\361\344\016=,\204\343\272\"\3221\275\023\373P=I\2659=?\351\377:fp\272;\360P\207<\311\021\025\273Sw\242;@\371\213;\303\213\347<\317\004\374\274\205\321\355\273\367\2009\274N\340M=\250\037\014\275\214\344\005=l\350Z\275\210A\262;r\004\240\274\320mZ\274\316|@\275\275\016\027\275\252\314u<\0235\200\273\370\255)\275\241\350\245\274\203\243\203<\264\301\025<\323\327)\275\023\241\202<\032\324\322<\025\232L\2747J\250\273i\365Z\275\0076k\273\037\353\243<Z\326u<ZI\203\273\351b\037\275\033\270 =/;7=\2539G\275\235m\'\275E\301\355\274\020\0342=\201DI\273a\201\014=\337f\027=\336\272\317\274\266C\242<3\355A=\334\244E=\316 \312\274\rv\032=\270\320\014\275\361\310\031=\266\237\323</Z\325\274\2743\360<B\340Y=\2356g<\003\\Q\274\177+7\275\315\202 =\357\321J=\347\367\\\275\203\357\333\2748\265^\274\242\2034=\304\313\010=x\230\237\274\303\000\262<\331\000\254\273b\301\034=o\242E\275\301\316\007\275$\365\200\274W\357\014=\322\003I\275\363\363V\275/\225\022\275\376)\352<\t\276\322<\303_N={\320Z=c\276\037\274\270\335*\275o[4=\216x\375\274L\260\017\274\201\017\211\273$\3267<:\263\265<\350\364\\=\251\260\356\274\335[:<\030SI=P\275\364\273\371\257t\274\263b\300\273(]\002;{\232G\275\225/!\275\334\001L:\"6!=\332\262\004\275_K\200:H\010\177<\257l\030=\314\\\026;\016\323\364<Fie\274\343:\202\274n\206\237\274\353f+=C\220U:l\266?=\232\301\230\273\366\\j\274\303\270\347;4\2319=\331\024s<\211v\t\274\227\"t\274\333[\024\275\255\321*=\225\0073<\232U\267;\257\352?\273\034\t\215\274r\2525\275\335\362\334<-\3263="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
