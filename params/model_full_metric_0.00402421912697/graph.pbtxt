node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2050
          }
        }
        tensor_content: "\340\356\326\274\225\226\242<\"\304\220<\013*\365<\213\315\020=\317\221}\274\006fH\274&U\327<L`\300\274\265+\266\274\235\351\002<\236QH\275]\310G\274\010\376\023=\252\030\025;z\301$\275\224\206\026\274\243\350\r=en\211\274\306\3627=\031@\n\275F\022Q\275`\200\350\274\206h\302<\375(\314\274\247\343\352;\037\364e<CH\376\274\020\264\322<\313\177\207\274F\351\232\274\013\321\241\274\213\237P=\254k*\275:<\225\274^\230S=s\343[=\223(\r\275\214\222\037\275\243(\272<N\342\212<U\312D<\220)[\267\220\325\\=z\323\323<\005a/=A\006\251;N\341\342<\"\177Y<\212\216\001\2754\321#=\031\036\200\274%\027\244;\270\377C\275\311{\252\274\313$[\272_/J\274Q+\352\272\312\244\034\275]\215\336\274\217\233/=\202?\200<\002F\004=\207\211\333;\313\333$=a\314Q\275\235\027\222\274\244\305V\275\334>\336;\322d\005\275Q\"(\275\025R\022=$\343\034\275\252\036 =\326X-=\261f\020;\376H\013=\255&\205:@\332P\275U\303\375\274\277\370Z\272\311\356\"\275\337J\335;\024\353J=\177\356\2229\325\273U\275\304\245\314\274\373wO=a;,\275\263\335[<o\312R<\204\263\177<\375u:=\270\267\342\274<\256A;)W\023=\026X\326<b\026?\275v\364E<F\322-\275\200\246\014\274\033\210\347\273\304\346\211\274\267\303\312<e@\014=\030\031\310<\003\213\367\273f\274\205<^\347\217;B\305E\275\267\1776\273\3025\204<\217\344\350<\3423&\275\373\326\022=\260\374\n\274\207]Z<\203\370\305\274\274\3530\274M\203(\275\341,?=\023`I<5\037S=\003\214\026\275#+ \274B\3032=8M\255\274\220\233f\273\272\021\003<\261\265\035=\2519\215;AiP=\225\333\001\275\321.!\275\237\375\005\275\232\250\032\275\276\311\\\274\260\336\030=\234\0174<<d6\275\271\305j<\"\207Z=F\317\315<\026\271\307:\263\352\345\274\225P\221<i\372:\275;n\354<\\\317\300<P\252\206<i\020\'\274\357\363\'=Ej@\274\234\217\030\275\223\314\200;tE\266<W\0250=\007`V\275`\350\"\275R\216\010\2755u(=H\001\002=\035<\251\274.\361\330\274%\020\327<\220\004\260\274h\376\272<\302\221\027=\264x\003=\317w\005:84\260\274\220\337S\275Sb\262<\262sX\275Q\360\271<\242\224\230<G\030W<\250#I=\352<<=\305o\3319\213\204\332\274\326pL\274v\337\031\275\231\260\002\275]\275E=bEE\275\255){\274\363Ov<`\322\240\274`W\264<\3518\367<#6\211:\275\242\013\274\344\374\257\273\376\306;<\207\372\254\274\026\333-=\306&\246;\205\377\350\274\2218\360<\0103U\275\253~\315:\373\0218=\266%`<\000\254\271<\314\002P=\004\032\"\275RY\025=A\340\030\275\263z\r\275\360\255Z\275}\246\315<\223\341b:<\365Q=b\341+\274\263\331\315;\231KG\275,\341\242</\030\005=\340\270F=\237\305\020\2755\245\002\275\312\203\341<\037\205k<\244\225\302\274\320c\260<?\r\002<\305\377y\273\263\344M\275)*\265<\273We\273n*&\275$w>=\322\360i<\363&b\274\254\324\367;\305\373\004=&|e\274\362\221\271;\343t\346<[\032\217\274\202\341\222\273\312\3203<\267\210\026;\321\034-=\230#\316\274Q\344-=\250\032\t\275j}-=\301;6\275\352\330a<?\211\017\275\257\364x\274\356\340\257<I\221\370\274\231\260\215\274e}\243\274L>+<h5)\275\202\033\233;N\320L\275\277\t\036\275\232\\\204<\3127\303\2744\347(<\'j\350<\202v\313\274\020C:=\261?)=D\256\312\274.\r\252<E\346\330\274\253\314\010=\256\241\016\274\200\303\331\274#\017\366<\216\211w\274}b\210;|\003(\274\001\353\334;\001\206(\275\253\236\017<=\2010\275F8\032=~Sy\274\317\206\267;\326A\331\274\267\343\310<\224z\000=\037\020\335<\3438\014=\354\224|<\024\313S\273\302\3737<^XU\275\272\004,=|\266\013\2750OY<\374\010\217<i\004\255\274\277\336Z<\254)\r<!%\'\275\361\216S=`@\321\274r\356\321\2746\2037\275K?*=\024\345\310\273;\257a<\027\377\t=n\201\276<\203\262\363<rN\230\274yK\035\275\227\220z;\025b\372\274\307\241\206\273\255h;\275(\365\222<_}\274\274l(\356\274s\025\017\275v=\020\275\366\363\205<\n\267\\=\242\tF=Q`\250:]\372c<\027:3=>\265\306;!;\n=\017\340\363\274\016\226==}\361%=\230R\017\275z]\315<\307\365\013=n\327\276\274\335]$\275\331$\034\274\363\246\256<\034\231\317\273\311\003\356<\333\242\022=x5\372\274\005T\035\273\305\257\347<\030\3144\275\343hH\275\260\032\t\275\332\3441=\316\037@<\014\374\300\274\t\345\t=\272\264\254\274\330\330\007=)\240)<!C\351<\213\210D=\215\030\037\275@\263\312\274\211RD=L\035\r\275\n\0168<\302\027u\274\231!\374<\n\0060\275\313~6\275\321+[=\254xK\275\323\204\244:?\235\340;=\314Q\275\272\245\310\274\205^\270<\320B\037\275Ta\276\274j\235\233\274\375T\032\275`Y8\275>a\206\274\334\377\345\274\177GC<\262G\013\272*\333\037\274\300_\312\274\201}5\275\334\275\"\275\355\261\225\273z\323\267<\000+\031\275\327~%\272\017<\224<[n#=\026\352?=\200\301#=\351\243\340\274\313cN\274\342q\257<]t\022\275=\031#\275\262\016\030<S\000\342\274D\244\327\274\331\243\222<\311K\001=\220\310N<f\007\305<\336]\r=\275H\000\275G\216)<8l\251\274<\260\315\273\310r5=\313[Y\275o\343\216\274\252\243\035\274\023\220\026=\324\270\312\274?6O=;%6=\270\306\270\272FnU\275\340\264\233<\023vI\274\351\202#=M[\356<a!G=D\314\276\274j\006/\275\265}5\274\236k\247<k\205\250\2723\3159=$\207>=\000~\032=\004\3710\275\3255\002=\210\222g\273u\234V\275#\252\246\274)\237\305;N\267\363\274\245;,\275\205p:\275Q\2553<\244\353\343:y\356S\274\354Y\264;\356\234C\275\331\002\372:QL\350<\030l\023\274m&T\2750\033R=\206\225\203\272\024\"\204\274h&\243\273E\341Y\275\337G\345\273/\1778\275L\235\030\275E]\213<\233]\365<\014\177\357<_\224B\275.5\t\274D\214\201<\301\345N=\306\222\036\275\010N!=\361A\301\274;q%\275.\333Q=\250X\371\273O$*=\357\322\266\274\266-\317\274\374\236\344\273\307q\246\274\\\020\372<\205O\362\274V\365k<X\262\234\274\315\2643<\303\3746=\375C\022=\311|\237:\005\353e;dO\305\274PDK=f\240\022\275\365V\273:\342=T=,]O\275\345\346\237<\247\340\335\274\200\367\201<\344\177\262<s\217\014=\220\231>\275\037\223V\273\255k\021\275\r\331\020\2733\001\323\274\023\260\241<\344\303/=\\\033>=!h;\275\026e\021\275\335\261\017\2757`L\275\373\271A;\322\261W=\230\366\334\272#\341:=\313\363\226\274s}<;\021\216\013=DaP=\264\323\311<#\306%\275\372\254\276\272\t\033\331\274\243(\020=0\362*\275Ir\300\274\235\3170\275\322\035\006\275\316\326&\275}B.\275\234Qx\274\010\360\333:#\307\016=\341\225,;\300V\270\273\333\225\265<\313,\034\273\240\247\016\275\337\324-\275<\372\370<;k\037=\245\2503\275\321\316\354\274\377\361&=U\320\030<}\247\202;(ug\273\236\262\035\2751-V=u\r=\274\263\"\005\275o\017\024;>\206S<\372\215\375<\373]:\275\315\025\240\274E\257\024=b~*=\377\037\312\272[>\025\275\273\337\313\272\351\202\320<\315\324L\275\352\224\265\274R\031\006<Jl$\274\n\363\034\274v\347X\274|\375\002\275\205\367\304;%N\247;\027!\347<\222\244d\274\020\247\032=`\0354=\336Z/\274\340yI\275r\035>\275\324nN\275\323\027\315<O\325\350\274D\323\014\275;\023\252\272\226c&\275\025\350|\272\027\312\344;g\017#=\360\314e<\211<\226\273\213\270\222<&h\027\275w\341\'\275\014c\225<\375\226\3169\343\216\021=\366g\005;\361\216\026<-\307A=\243\344\035\275q\007\'\275\373\346\037=R\301#\275\022d\363\273\'s =\304a\234<\323\327\351\274\341\260\351\273 \024\267<&\251Y=&M \274\272\365\252\273\267DO= \371\275\274\177-\317\273\367\027M=\243;d\274\356\363,\274\311&\332:4-@=F\031>=\225g\214\273\270\026E\274G\214\035=\313\344&\275\202\342\n=\373_7;\373\277\002=\246e\265\274{\346\352\274El0\274\240U\035\275\363\302\200<\003\333N<\177\267\314<\325]\031\275\370\000\002=\207\266\024<\372R\010\275\2640\230\274\373\3428=,\3367<z\357\234\274{\350\325\273\253}\016\275 w\014=9\346\301\274\221\342\301;\364A\t\275d\013Q\275F\2047=\'\241\275\274\310\354#\272/\331\272\274\031\003\313\274\216\235\004=\367\004\024=@t\'\2752\263-\275\356S \274\307\010/=\005\246\377<\031\021\320\274\264\222F<\021~\335\274\361\354\010\275>\236F=\263u\275;\257\nX<\237\213Z\273\334y\360\273zl\014\275\016p\370\274\272\036Y\274E\237\245\274\004\315\264<\345\225\\\275\204\255%=\276\373C=\316\276\t\275\365\035\006=\260+F<\022\016\230<\213\256\027\275\333\333\364\274\223M\360<\220\342\026;\373\003]=\371\273\376<[\3741\275\223\3471<\301\251\032\275\344\353\366\274%)\241\273\220\244>\274\205\2214=\010\301\330<\223\254\231;J\255\264:\232\255)\275\270^\326\272V\036>\275\255\227\"<E\272\306<\013\350\027=\024K\221<\031h\225<\212i\003<w}t:\211\237$=\213\255\210\274<F1=\244v\334<\264K\005\275\261\250Z\274\235_N\275\026\233#<\2260;=u\226X<\242\256\201<\214@\364<\025~\024\275\203\336\\\275\023\327\001:a7\241\274\311\336\377\274B\010#\274\355\252\310<\241\325*=\265\264\000<\205z\347;P\307\014=\355\031\006=/q\022=\037\237l\274<\245j\273\257\005\262\274\004\nS=\034FW\275\3675`\273\211\2545=\323$#=3:\014<G\355=\275\260\355\010\274\366\007i;\304,\022\275\312\370\014\274A\222(\275\\\r\017=\366b;=M\372\020\275W\030\243\274\343\351\301\274i\312$=\265G\356<\346\'?<k\004/=\202\217#\275\266\253\355\273\213\306\037=\314\275\033=\234y\006<\371\"\342\274\227\350&=\177v\245\274\023M\037<\323\2074=j\030L=\355\266\374<l^*<\025\230+\275\333\364R\275&k\326\274\274[>=\224\251\317\274\350pS\275,\320\276\274\223/O\275\322\307\370\274\2021\304\274\345%\031=\342\262\211\274H\234\355\272l>\346\272\'\304[\275L\210\017=\"$\2149 \2618=\324\317\327\274m\256\310<\027\356\\=\005,S=\326,==\216<\322<\023t\326<B\373\374\274&/\022=\353\323\330<\235JK\274\262h\254<t\264\354\273$\260\267\274X\337\214<\212qS\275\276\310\304<z\351*=i\352\307<_\261\020\274\02360\275?#\201<\226\330Z<\222\017\033=Q\366\262<\327.$=\3324\317<\315P}<(N\031\275\326\2136\274\253W0=\007\235^\274\305H\000=\216\264U=\377&0=\177C\026\275\354M\357<E\344D<\361\034\313\274d\000\271<\323\367\267;\\\260\213;\341`\356\274NN2\275}h\002<\210*\335;\216\273\003\275\222j$\275\243\321$\275\264\215m;p\232-\273\377\265\013\275,\204[<\331\357=\274\220\007\334;\202\312\277\273\034\3108=uQ3\275\\\241\"=[\264\210\273$\362\270\274\232sQ<E\247i\274N\321U<\020#\256<\352\0022\275\013\333\000=(\002:\275\251\261\005=\357]\\\274\376c&\274\007\357\034\274\366G\351\2741\372S\275\237OL\274\367\325,=\214\366\234\274\022\320\362\274\345\354\267<0Q$;\1776\240<\343\331\317\274c\016\035\275\024\300-\274\275z\367<\316\226\033=\303\306B\275\200\263\357\274sj\307\274\301\271>\275\260\232\026\273){\021=J\306\261;\244\222\265; \377:<\325)>\2757\333\030\273\212\203\230\274L\306\016=\221\365\262<g\367\272<O\373\035\275\330\303\235\274y\017/\275\252\216\321;)\2717=\241\004!\274\024U\216\274R\017F\275\350\333/\275\365\031P<\007\377\037\275\332\357\026;\023n+\275Y\177,\275\253\331\250\274\234\331\271\273\336\317J=0H\314\274\021\000+=\2520\024=+e\016=\325\242\325\273\225J7=;t3<U\216S\274\345\313\244<O-\306<\220\354S\275\357\r\337\273\211\215\037<W\312N=\002\024\001=\026--=\030:\373\274\010)B<\324\275\353<Y\212\035\275\226\316\220;\362|\245<!\276*\275\374\203\302;\330\272 \275\203yV=\350\233\031<\233\364\003=g\224\204\274\365E\247<\017\014\277<k\357\341<\n\201:\275\252\r\360;\037\017\324\274\243\350\267\274o\032\234<9\250r\274\002\244A\2711\235<\275\257\232\373\274\353\000\002=\267\215\353<\273\031h\273]\275\351<\374\027\'=qk\301<W\0241=FIO\274\260\237:\2731G\377\274\264\341\257\274\342\002\031<(\246\021=\250$I=\366J\250;\r\210\r\273\250\313\234;}\036R=\213\031\251\274:=\031=\311\330\016\275\366\001\254;\n\366\036\275\215\304\020\275\334\247\003=O\277\301\274\377h&\275(\357\332;\321\341\n=\034\210\211\274*\205$\275NV\217\274vjY=id\255\273z\207\273<#\373S< \237\017\275\256mB\275\022\256P=\000\212<\275\274\351b<d\3541=\262DV=\200\251z\273\177\234C=*\020F=\3750,=\357\211e;\311\362\366\274\305\313\357<\300yI=\n\243@=J\344N<\177E\313\274\205\211\245;\330\020\215\273\231\002H\275\373\033&=a\257\033=E\"\035=\326|/\275_r7\2756\370$<\r\030\316<8\037\027\2759\034P=\246r\377\274\256\272\376<x\235M\275\n\305Q\275H\354\326\2747\375\\=\250\356\215\273\264\247\232\274\352i\027\275\333\336\026;\220\tS\2750|\005\275\202\232N=!!\006\275\307\313\005\275\311\276Z\273dh\221<\302\357\027=\261\342+=\2411P\2755I\t\275a\276\371\274\200ZD\275\213\216\200<An\345\273\224\354S=|v\216\274\324\345S\275\201;\t=\224\211\366<>\324\374\274\372\231\260\273(\350T\274-\371O\275\273\366X=\006\2020\274\377-\213:\246y)=Hs\335\274\027\272x\274\365fj<\201N\221\274\341W.=C\350d\274*\024\026\275\300u%=\225\3543<\r\276\235\274T\357:=El==\037@,<4r\305<>\324n:\3656\227<\356p)=/&q<\0326\373\274>%\236<5\274m\274\024\360!\275\373-B\275\2077\330<W\350B=0J\020=ZaB=\023\324(=6\010\261\274\252\215\037=\203[P<\321*\250\273pu\265\274SP\252\274\345\037n;\032nX=U\374+\275\251\0269\275\276\315.=\013\000\004=\014k\216<\317f\'\275\0179\356\273:\223O;Mh\273\273[\203\034=\330&\035=9\267\353\274\017\257B<\013E\217<^!\262\273\256\256\004\275\260\327\302\274{\036\367\274\nsZ=0UD\274\254S^;>\336\025\275yb\235\274.p\323\274)i5=\244\215\250\273\004t\r=\347\242)\275\205 \202\274\tr\177<\215\224\"\274g\207X\275\333J\344\273Y\'\026\274\377\313\221\274:\027\277\274\270\316w<\352\036\316;<\347\231<(\202\025\275\203j,=\333\224\t<\266R\274:\253\0058\274\363\234\207;\272,-=3\034\007=\016\317\347<\256\031\346<O`r<\201\371?<].\241\272L|7=\237\351O=<\325\t=M\323\250<\346\036\336<g\2423=\275^B=\344L4;`Q\310\273\365\024\'\275/B\021\274\242\207\275<\373\226\251;\353\031\263\274$\336*\275\022\004\301<\300E\305\273\340\362\262\273\203\2313<\2054\226\273\177\257\r\275\216\'C\275\201lX=.5E\275\323\326\200<\027\242\323\274\216w\023=Y8\010=\326\330;\275\325\214\236<o\264\376\273\274\024\303\273y\311A=\022\265\\=~\0067\274\240\254 =K\234\261\273s(0\275Du]\274\033o\235\274\211]\276<S\016~\274\337\357j<S\376\017\271\253\326$\275\237*a\274\351X\305<\\\317\007\275\233\361\262\274\312m\206<\341\265(=\t\247\246\274\024\355h\274jZ\267\274\247\3035\275\021F\014=\201.~<a\227\303;\207\345\222\273\256\2240=#T^\274(|\341<N\262J=\215\211\002=\270\242\306\272\\u%=m7W\275>\006#\275\220\305K\275d>M=i\226\r\274\200\343\003=\311\323\034=\373*5=\211\031\005\275\300)R=\337C]<m\243w\274\026\245\223<\304\271\032\275\210\232-<\304`6=\242B\003=\001~I\275]\212\245\273S\226\245\273\374\254$=\'\326E=\275t\002=\205\327<=c\266\030\275\261\373\021\274\355m\207\274\335\266\021=\210.b<O\021\003=\\b?=\000\253~;\342\221L\275\001\003\031\2751\232f<\033\335;\274\221\302\364<9.\020\275\016]X=\272\220\035\273\205D\257\274\305\010\026=\235&$\272FX\266<?Q\250\274\204\346:=R\250\344<\356\033c\272*\227\013=\304\245\226<BkN<\304\340\032\275\311U\371<\310w>\274U\2561\274YY\314\274\016\316\004\274\217\270v\274\001b\t\275\016(\017\274\305\035\265<\362\231\027=\016\252\020\275|\004b\274\262\305\303<\343\202\303\274]\312\267;\346\377\320\274f\332\032\275E\r%\275/\027\260\274\314\314\252\274\222l\336<\204)\036=l5\342\274\254\212\334\274B\033?\275\274\264\241<\330F\266\274\271\036\204;.0,\274~u\200\274u\302P\275\376\305[\274\346\r =\275Z\014\275B\365!=5\000\215\274x\213:\275\210\2017=\2372C\275\202\n\241<\034\203\020=Ik5=\n0\327;I\273\370\274\325\330\367<*Ad<v\350\221\274%yM\275\027\2553<\216\317%=L\223\326\274\376\217\271;:@w<\004\235S\275\303\343-\275\n\321\266<g\3771\275\304l\244;\365mX9\315\3731<\275\216\007=\035\361@\274q\315\001=\275}\352\274\342E*\275\266\215W;J\356\023<\207\320\002=T:\364\274Q\346\231\274\371!4\275\374\035U=\365,C\275w\345I:\233\374.=\304\rL=\336\353\000<A\317L=\266k\030<\231|\241\274\220[\211\274\324\214\017\274&~\347<\003\247\260\274\035\377\263<\3316e<2\276\252\274]&1=\230\362\314;\252\020\242;?X\201<\214\214\264\273\271H\372<?\030-\273SjT=2\2169\275\n\232\323\274\254\336\200;\345\337\356<`-/\274\3417\255\271\345\247\310\273\322\2047=\033_N\274\225y\010\273\265\322=\275\022\302[\275\353K\002;\301nj<J\231\037<$\226\355\274\222\363!\275\370RI=\344\222\227\274\024\366\016\275q\260\223\274\312\321\021<\215\257\347<\305\370\267\274R`\"\275[\306\013<\352^\377\274{\224\252\273%\211\305<dW\035\275\360mR=br\'=\204\203Z\275z\0048=xY\003\275\203\033A\275\235>?=\004N\253\273\250\275G=$\331,=v\356,\275\236\271\352<\274\244G\275\017S><N\026\017=\330@#\275\245\352~\274\177P(\274^\253I\273m|\373<\273\303\000<\306\204\016\275\355\215\215<\t\365N\275\277\361\307\274\303\354T\275\206\212\021=\245\245!;o\r\273<\336\321\303\274\22029<\331\341\315\273e\244O<`\343U=\376aK\275\010\346\212<k1\303\273W\2542=|\004L\274+\275\002\275\27097\275\301\232\320\273\210\204\366\274\034\2003\275\306\334\025\274\007.\251<M\374\212\273\\\243\024\275E\325V\275f\'\217<\301\305\354;\241\310\300<\323]@\275\360sO<\313\027\002\2759\362M=\240\272\231<\367g.\275\320\371\341\274\351\020\000<\026\244\202<\343?\237\273$\220\'\275\010\325@=b;X=\020u\260<p\036R=5\036-\275]\336\240< \033\304\274\275\317\367<\240k,\275\023}\256\2749\270L\275\'X\027\273\331>\275\274\256\353\205\274\'\357\033=9\347\214<\273\3425\275X\231c<q\n\014\275\372\233O=\014\322\t\275\264hJ\2757\231\023=o\260\267;\250HV=\375\361\032\273\256\341\344\274\25170;\202A\221<q\0306\275v\t5\275\027\275V=E)v\274\317\0163=\377J\250\271S\301\304<y61\275\\z\013=\330<!=\030q\361\274~.\234\274\374h\341<\236O\'=M\212N={\014\337<\215\3225<\304<H<>D-\275\247*=\274\277\337T=\205X\211<I\027]\273\031\366\206\274\237-D\275J\335\033=\275\243\307\273\363:>\275\331\337\242\272\234Y)\275s*\224\274\227\253\\\274J8!\275\345\332\020<\372j2==/K=y\350\r\275D/\'\274\256\024\265<\032F\r\275\245dS\275\237?\315<\336B*=\036\242\027\275\000\264\250;\315\315\033=>|\236<bmT\274\271\270\267<\310\024\341\274\246\010\372<\312c\351\273\314/\033\275mqV\275\372\2215=\021\025\260\273M\323\205\274\342\341\301<G\306\t\275s\265\235;\245\375\021=\224\321E\275\036\221\025=C$\005\275\002\001+\275G7,\275\t\225;\274O\271(<\257\252\245\274\361r6;\264\207\036\275\316\206W=\216\261\014\275;]6=\\\271Y\275\345\251/\275\016\211\316\274\001\3631<L\006\032\274\003\300);\200\310+\275R\037\276\274\301\247\014\2739\022R\274\300\030\343<c\307\321\274N\266\310<J\t\211\274xJ\344;*j\200<L;\"<\222;\"=\230;Z=s\241!<\002\301\016\2756\243#:~\312#;@\177\232\270\026\024M\275\2172>\275\220\344\002\274~\226\370\274o\356\356<\307 \327\274\002y-\275B\275==\232Y1\275\261\300!\275\361\247*\275/\227\033\275\223q\\\275\275\250\261\274a\352\374\274*\355,\275&D\034\275:[3=$\320\016\275\356\026\300<U\270\301\274%? =\247\355Q=\340\253\313<\267\013\304<\320\300\037=\367-X<vO\037=\374\000\346<O)\350<\371\351x<nIm<zKC=\345\201\201<\251\262g\273?\227I9\005\3207\275X:\277<\023k.\275z\014 =\344n6\275)\372f9^G\206;\330\240\374;.#\335<+c\367<y/\305\274=%\346<i\020.<\307\267\020;\334\365\261:\354=\262;\205\341\003\275\\\377K\274|\271\311\274E\363\025\274\277\305\347\274\235\372\350<N\212l\274\316Y[\275\020\312\373\274\316\r:\275i\354<\273\004\010\270<\327pd<\346\347\022\275pA\316<~\001+\275\251\036B=\302<c\273\211\367\374<\315/*=\200+\032;\265\203]:;(U=\340\017\336\274c\006\345\274\\]X\275\225\360\002\275\207)\322<a\234\370\274C\016\312\274\320\202\342\274j\302T<)*\342\274\333\020\325<\316\026Q\274\237\030\232;!@\212<\253\350}\274\003\236Y\273(w3\275\235\353d\274\002>\222<T)y\274\0049\237\273\330K\337<\300}\034\275\264\\\"\275\324n\222<\225sq\274#\334 \2757f\364\2723a\275<<\3470\275\330<[=1\200\024\275\370H\213\274\303;\211\272\267\243\221<\310\033\\=.\240\310\273\301WY=\303\350\277\273\037\271?\275\263\206\201\273\025\341\214<D\225B\274\024g\001=\006\200\341<\242S&=\017\324\000=\003\034\034=\026%d\274\n\225-\275\335\264\266\272\246\215P=\276\203x<\255\317/\275o\343\251<\013\372\271\274\360\330Z\275\\\362i:Q\243\013\275%2y<S\237+\273\264\275\006;\335\3665\275\327\3108\275\337\343G\275\326\202\335\274\005\207Q\275\246\265\000\275K5q<\023\347\"<\223\347\020=\262\261\002\275\300\347(=\326\301\"\275\271`\017=\300+Q\275\211\324\363\274\366\377\005\275B\303\251:\312f\030\273\031\265==m\231\266\271H\363\017=\234#W\273\202\334\251<\223\206r<,\265|<\363\242\207<-l\375:H\005S\275\332\247*=\031n@\275\336\226\024=\013=[\275s\314%\275\204\031==\232H\013\2758\227\261\273Z`\023=\275\270\354<\371\376\361<a\301D\275\241%B=\234\034\005=\204\350\241\274Y\375\004=4\277\263;8\302\316<\310\253;\274\376$\253<\300\332(=*Y\t=\302\312c\274\350\253Z\274\327N;<\212n\350<\257\316\246\273\245\216\310\274w\344\024\275J\255H=x\006E=\021\236=\275);#\275b\344\375\274/D>\274J\336\020=\215\240.\273\036$\026\274x<\300;\323\007.;\207DA=\371\323\\=B5-\275]\342\024\275\2020(=!\026\305\274\336aQ=,l\017\275@\010\034=\371\'\313\274q\370\037\275>\037[=8\213Z\275\323\262\314<!\026\301<g\034&\275w\000x;\366\025\'=[\274\302\271\021\327 \275Q\016\200\274\374\005\250\274\234H\370\273f\021-\275\246)#\275HF\303<\251\342-\275n\276\376\274\277\202\334\274(D\271\274Zr\003;\312\344\243\274\301\255Z\275iB\316\274\277u\373\273\300*D\274\370e\354\274\252\373\'\275\266\356\206<\272\247S\275RZT\274mG\031\275\324\371\010=)@\037\275\221d\335<\352\035\215<`\371\t=>H\030=:\016H;\276\3302<a\363\024\273Nf\331\273o%s;\025T\356<\314\277\362\274\"\351\372<Lp\t=u\"\030=\332\203\006=\241\222\344\274\366!\2547\241\343\"\273\267\201\322:\307\007\002=\272@\250<\253\335\233\274\244\213\036=]\017\222\274\241\233C\274\234\305\236\274\345\335\224\274\250\332\020\275\224\257\311\274\211\227?=4\226\r\275>\325\301\274\300S\010=eat\274\0254\220\2735\235K\275\001\376\036\275\237\314E=\351p\262\274\303\256\257<\n\301\267<i\332\r=\245@\032\274@\237\373<\267\207A=b@\267\274\371u\235\274\026\320I=T\267\000=t\250h<\'T\373<\240EC\275%C\244<.t\"<`\343\025=Q\336\227<du =Q\204\203<E\270-\275*,y<\234\013k\273M\014J\275\234\376\031=\222\202\331\274\370\312\264<1\007m<\373\215o<\207\277\263\274\270K\016=3R=\275\376\324\034=k\326G\274\264\253\177\273\252\345\277\273\033R9=\316\262\004=\000C;\275\255\367N<\330\"f;\344\006\010\275\335\321\340<\321D\233<1\251V;\375\373-\275&[7=~O\250\274+\332v\274dU+=\313$\302\274\331\214\267\274\2246\237\2744\254N=\273\306T\275\237\243Y=\247\026\246\274\231\275%\275\213\r\350\274\000\351\014=\344\216\310\274\260\300)=\352\026\024=\274k\000\272\330\3213\275zo\206<\025\257\016\2752{1<P0\305\271\261x9\275D8F\275\370\004\344<fI\371<\215N\275:Um\300<\215\202s\274\376\002B\275wZU\2744Q\n\275\227\227\000\275L+E<\337\007[=w\265\250<\274][\273\206\316\244<\241\315N<\233ML=y\343<\275\016A[<4\226\037\275\301\235\346<Xv\235\274k\224\323\274T\273\323<\352i\366< \017\241\274\264\217&=\341A\253<\230\035\351\274\205\3012<\221\016G=\271\202\256<\221\017\305\274\367<5\275\303\273\341\274\316e\205\274,\340\310;\334\347\325<\240^+\275g\303W\275\376kV=l\330<<U\n\314\274\312\036\371\274\223\035\360\274\'8\246;6\0252\275s\375@\274xD\257\274\335#\277\274\361/\031=\336s\203\274\227\230\027\275\240v0;eaC=\0253\331<HH\034\275b\016\346<v\351\004=\315\333\031\275\326\216F<\354\217\335\274G5>;N\351\005\275\215\364\276\274\001\316\340\272h\323\243;\031P\314<\213\220\002=\262\315\367<\231\211\004\275\317 \036=\305.\031<\365ZT\273\311j\n\275\3113\036\275d\275\237<!\'\035=\305\003 =<s\263\274\201\232\356<\320\222\251<Z\0227\273\201M+=I\214\226\274>\017:\274d\305$=h\375T\274~_\204\274\022\'\262<{K\355<\367.\003\274\006\030\002\275\241\364=\273\022\300&<\000\230\320\274\316\270\341\274\025\201\375<\347\363\\=\225\272\277<\352\3555\275\026\023\317\273\274\317\343\274wM\265\274\021\242\356<\305K\006\274\306\317\223<\222.j<r\336\"\275\312\364\327<lN;\275:\333;<\030@\341<d\335\306\2726\215s\274\337\2663<&\262E\275\346\372@=\\\336T=\001\214\341\273\316\035&\274`\3514\274#\305X\275\010\306\263<P8s\274k$Q\275o\261\332\273?\334\232<\353\201\300\274w\377\370\2740!\000=\324\345\245<\030\367\253<\021|Y\275I\272\342\274\rX\004\274\"X\261<\230p\r\275G\240\345;\014\\\302\274E\036\321\274y[G=_G\013\273\250\327I\275[\256D=\324R\352<\242\2527=\\\203H\275e\"\005\273\325\257\016\275%Z\024\275\321\374\021=\245\037\022=\024\273p\274\213\245\261<(\232W=\"\013\230\274nt&\275\350\006\324\274\220\236:\275e/\221<\311s\226\272\033vK=\240\034E\275\006\201\001<d\220-=\207d\024\275\313\211H=\210T5\275!O$=|\266\304\274\276\272\304\274X\216\'\275\255}\353\274\331+\020\274\340\023H\275*\244\\\275W=N<=\216\210;\026\320\'=\345\010W\275\247\355\270<\360\307\027\274\'S\371\274up\021\275I\327\021=\332Tq\272\216\3566\275\261\242\262<\265\200\243\274\022(J<\337&f<\250Z?\274\343\212\242<\300 $=5\306O=;\000?\274\223\002\221\274\212w;\275\273\376\351:\373F\313\274A\035]\275\352\345\027=\323\352\005\275\250CR\275d\325\241\274\036\327\267\274!g@<xr\364\274\277[-=\220\324\"\273\036\306N\275\276\375[=S\3219\274X\365!<!\364\033<\tb\341\274fM\245\273E\351F<n\332B\275\227u\"=3\\\222\274f\251\001\275\330\323I=.U\314<\361\005\236\273\367rR=\342\236\276;\225\036>=j*\233<;\354\351\273\232\276T=\346\030x:\232#N\274\367\213\330<\360\351\227\274seM=\355\336\037=\354\r\235;NH5\274\343\202\256<h\'\006=\377\225H\275da\036=\016\224A=\200\2558<8\367\010=\256 \314\273\001d\300\274)\'\331< \214\315<?\221\237;\371\220\264<\275]\340\274_\366|<\254\270\205<\001|7=\340\031\227\2743\270\262\273\020s\210\274xt\003\275E\330\353\274a\312\211;\231\000\036\274\014\376W\275\362*F\275\206\353\025\275\'6\037< L/\273\351\314\\<i\356\033\275U6\202;R\010\020<}\347_\274\032\006y\273\215\242g<\336\345\323\274\265/J\275a\355\257\274\031h\001\275\304\206\024\274\355\262+\275V\300\031<K\364\316\272)s,\274\315\360\001<\0046\236:-W\255<\221\331\346<zU\350<\273\0147\275\201\2767\274\236\371\351\274\303wS<\377\267\037\275|\373D=\240\240P\275\247\213H<\272{\017\275\267\2314=\264O\323<\223\332I\275`$>\274Q\217\324\274\347]\303\271\271\377_<\306\221:\275\322_\355:\314\253p<\260\000\252\274Un+\275&\n>\275e\230\217<YIC=\211e\306\273\3304\334<2S\007=\344\005E=:\245\310\274c>\306<\277\250\032\275\246\364\n=\362\2746=\203A8=\247:W\275G\301\224\273r\343\036\275\027l\020\2756\270I\275\247\333(=Y\036)\275\022:9\274FW=\274\375\013\311<\353\246\265\274\276\020\\\275\261\312\313\274\0024>=?\253F\275\326\253\031=\221\352\022=\364\3368=\216A\033=\233\357\244\274\254\323\312\273\325g\003\275\255\230)\275\326\314\n=\241\276z<\t-\223\274\246\245\262\274\263C\003\275\317\272\031=\232ZB\273\223\014\023=\351\000\363\274\022\201L\273V\315\\\275\362K\013\274p \\\275\0329M=m\250\002\274@\357\203\2747\210\274<Pb$\274\001\304?;\327|Q=:d\337<\0006\372\274\240\025Y\275&!\360<\342\262\222<\016R\023<\312\371\260<\340C\037\27523,=\267?\310;d\2632\275)\316\007\275\034j\\\275\010\362\030=!q\305\274\205\232\306<\221\354\367\274Y3\233<\334\331I\273\256t\251<\010b\205\274\223N\311\274Qm8=\032\346-\272\316`\324\274\033\376\256<D\315H=\352O\360:O\t\306\274\312I!=>;1\275\254:+;\332D\340\274\005|,=\014~\204\273\275\242\377\274\300\004\235\273o\370\232\274$\221M=2\236\302\274\"\366$=\227}S\275\252\320\365;8\035\222\274\363-\205\274\341\032\000\275\256\020\016=.\320(\273\004\301\005=\352\004\321\274\21734\275\363\215\237\274C\022\n\273\000\376\332\274\221c9=\277C\362\272\3071Z=\371E;=\342\243.\275T\013\r=y\376+\274\306^O\275\nJ\204<h\030#=\204\312\374\274 #\324\273n\306\356\272mh\027\275ze\274\2740\251\'\275\251>\024\273\251l\363\2744\367\243<\031\036\310<\372\343\337\274JA^\273\001\021\215<\rZZ\275\373\227\274<\242P!\275+:U\275\203j\374\2749[\032=\273P/\275\335*\377<\207\263=\275`\243\370<Q2\222;\201\007\t\275z&\271\274\366\226\325\274P\262\277<\205\360U\275\274\355A\275\312\017I\274\342#\301<\245j\206;U;\250<\031\201\341\273\237qL<\354X\230\274e\316&;z\264V=LuP\275~8\007\275\333\346\201<\263\302\205;\222\261\300;\265\315\212;Q\276\302\266\033\302\273<\200?\000=\273\317\257\274V7 \275\345\177\206\274\024&\314\274u\2248<\254X\\=\334\263\222\274\376\262\215<Z\271\226<{\321\005\275\370\355;=\243,$\274\006Q?\274h\223\014=\370\232\001=\302\003[\274\257F!=\030\303H<\004\032\035\272<\226F=F\355\366\274\237\265\344\274\320z\026\275b\236B=LQ\032=\027\363^\273o\271\277<\"\371i\273\245\324P<\017G\030\275\346G\225<\216\303#=\241^\364\274\014\023@;\244\321\034\274\223lD\274i|\033\2755\010Q=\317\250<\275]\366\262\274\004zL\275K\230,=\002L\235\274\274\226B=U &=\351S\256\274WSa\274\017\230\230<7\357L\274\357\216\217<\"\230E\275fX(=\315\034\326<\246\000$=\t\337\321\274\307=\'<M\345\272:\345w\311\274\233\316E=\t\260\340\271 \374\020\2758Q\203\2745v\355:\256\005\273<M\270(=y\371>\275\016uC\275\017\374A\275\te\221\273\265\237\016=\350\206j\274C\010\307\273\003\207@=k\235,\274-C\000\275+\332\037\2749\222\244<\363P\003\275\254(\022\275\177_\361\274\327\250\332;\0144\216\273?P\000=|\204\014=\222\0029=\274 \362<\311w\276\273\320\202\353<\2352\242\274\243\017y<\213\267M\275\332\217-\275(\216\355<\327+8=;\357*={\220S\274$\242$=\211\220\350\274 \262V=\266\302h\274\364n\022=\2260\260\274\277\032U=I\325\302<\027p\035=T\340\005<\224\332g<\274kd<\237\372\';\\z\302<\245\221\025=Z\305\026=\3072\347<\205\'7\273\376i~<\250\020v<\001\320\264<\274\235B=N\207\375;p\324)\275\006\235)\275W\345\004\275\231u\037=\346\351\035=$\243\227\273\025\364\305\273\321\000^\272\367\311N<\320\032|\2744%P\274PC\316\274\025=J\275u\346\227<\'S.\275\215h\016\273\201*B=\311A\021=\020n$\273u\010D\275 6\001=\330\225\260<N\226q\274\004`\311\273\003\2400=2\202\022\275\020$\212<5L\306<\340s\030=\225\375?=98\024\275V\323,=\357n7=\207U\262\272\016#\"=[\211\027\274$\202\246;\232\331\250\273/\035\363<W<\217\274\347\372q\274\'y!=o\n8=?\374\035\275]\345Q=\3135\204;^\214\330\274`~\030\275\222<\314<\23266\275I\224\255<\363\204w\274@]\002\275\206\244\021\275\313\304,\275)\223\026:\006\251\310\274\337H\2049\275:\361<1\216\223\274\032\301\003\275\232\305\255\273_&;\275\205\217(\275\204\302.\275\265\324\320\274O\221\n=\312O\350<)(3\275\346\211.\275\204^T<0\t\364\274n\312Z\275w\027\177\274G\301\341<_\031B\273x\325\330;\256\332k\274\321\366\240\270D\354\312<\347\374\324\274\316\315D=\273\264\230;-$G\275\227\037\375<U\213\372<\272\030/\274ap<\275N)\212\274\305\253\321\274\037%\000=\366z\360\273x\256\006:\024\300\245\274J\031\035=\r3\300;\345\355\007\273\242{\'=X:-\275\272\321\323\273G\360\336<~V\265;nC\013\275#+\240<\334\242\004=U\312,=\263\250Q=\363\234\013\274\030{:=?\323\373\274\345q\020\275[\206\244\274\223\361\200<8\272\274<j70\275)\371V=\360\035\230\274w\264\236\274\236\377\240\274X\234%=gA\356<\374\243\264\274\300\236\213<}\235}<c\331\243\274\322\223\203<\343\000\356<Hb\334<\020\014\204\274\2455f<\333\302X=\032}%<u\177\300\273 n=\274\253\270\325;\002DH=\307\352\r\275\313\014:\274d\257\004\275\301\341\031=\346em\274m4&< \350-=\221*\023=\010\240\036=s\242\004\275\337\367\036\275/C\033\275Aw\233\272%J\\=\032\034R\273\245\366\220<\347F\216\274\356r\325<\022|0=\323\350\035\275\232\327\000=!\214\320\274\027\027\207;Q\016\366\271\034$\236\274X\270\223<\212\223Q\275t\334V<PK*=\211\375\225<\216\322y\274\211X\'=\351N\234\274\361J\205\274\271 \235;--\254\273!\313R=\255\323@=X\nr<rB\342:c\231\245\274mR\n\274\322\304\211;\204f[<0\363\240<[H$=\021W5\275\300\243\307;s\362\034\275\346\351\200\274\362B\364<\214\334\332\274\346Z\333\274\216\353\013\275\270\343\005=\002\272\233\274\316\252R=7V\332\273\025e$\275\320\364\331<0+2=\200\222\336\274\354O\026=\350\252\366<\224{\367<\306\371\212\274\215K!\275\356=\344\274<\n?=\300\007)\274&\232\256\274\312\202\314<D\013\224\274g\215D=\033R\023\275\"n\206\274\224Cw<\211\3767<\260S5\275\266\223\t=mZ)\275\254\036=\275x\027!=\025\007g<D:\342<\375mg<\234[5\275\000\000\275\274\030\207\310<|\275A\275\201E\202;\3268~;\244\370$\273\254\357R\274\221\355\002=\377,\200:\355 %<\333\242\213<\331\214\237<\220G\022={\313\326\274\205g\250\274\023O <\\LW=+:B\275v\271\374\274!&\020\274\206Y7\275v~8=\256H\257\274C(\300\274\245\005 \275B\313\251\274\306^U<\030b9\275\344r\206\274C\346\301<\232]\375<\247\322\254<\034\2713\274\023u\217\273An\200<\373\354:=\020jB=\256\357\300<\364\336\235\274\274\375\001=\201\356)=Q\203)\275\352W\327<\243\320)=\205Y\330\274\376\232\243\274\210\244S=\276\323\325\274\220\372\335;y\367\244\273Q\211\006:\214\3634\275\342\\<;\350\376U=\344\267\373<3l9\275td\006\274\025\317\235\273\300\274\031\275b\000$\275\024\326+\275\277P?<v~\366<&\254%=\303\246\300<\355U\225;\037\037\242;\265\213\032\275f\220\304\274\r\360\247<E)_\274\360.\t\275\215k\365;|x \273\2610\254\273\336\n\341\274S\376\306<\226\027\317\274\200\311\264\274\345\346\361\274dc\356\273\217\326\371\274F\013N\274Hp\365<\261\317\r\275b\214~\274L\273\247\274\212,\004=\315Wx\274%\246\204<~\314 \275M\367\275\274\023\206\"\275\277*n\273\004\230\257;E\337#=\016G>=\363$\036=\3573R\274Sv\250\274\004\026 =\266\307#\275\003\346)=\356\177\211;\366\311(=\241\240D\275t\332\000\273\337D\202<?\001\344;\313:\333\273[\200\026\273\200n\031=\351\314!=Y\352\010=dUP=\0335\003<\3700\326\273\226\t\361\274(6\365<\371\321\200\274\367k\020\275\343\001?;`.-\274%\0212=\037&\024\274o\000\022<\257@3\275\220\226\306<;U$\275\243\221\347;>\367|\274b\346\323<\010W\350<`U\023</MQ<u\354\303<\003\027\226\274Rm\267<\237F\264\274\212\\C\275\206\2642<\342\346@\275S\3152\275\255bB\275\000i\215<\261\310H\275\372M\350\274\212\352F=\313\032,=\273C\002\275\242\260\317<\245u\014\275\363\311=<\354\310$<%\356\035\275\225\277\315;\006\372\021\274wa\030\274\214\023M\275W\240G\274@t\033\274V\205!=\002\177\"<\320A.<\225J==\334\230\t\275!\213\227\273\326z\254\274\224\350\022\273\237RP\274\331\3324\275\024y1=\242e\243\273 h;=t\215\034\275\377{P\275\222\003h\273\026\240\321\274\2279\005=@^\006\274RY\346<v\210]\274r\364z<\352\257\036\275\260\035\027\275\300\335U\275\201V\036=\346N,=Ij\023=\252\216\007=\256\3408=6\017\300\274\331\332.\275\'tS\275\273\254\013=\215lK\275\215\305\320<G+\304<\001\270\246<Py\244<\245|%=C+\332\271\026M\346\274k!Q=\264\333\017=\332\320C;\347\307\354\274\370t\037=\276\307+\275G\363\326<\"\343\375<\311\025 \275.b?\274\0350>\275L5W\275\227R+\275\326\321N\273\036\321=\275\231.J\275!\356\304<\361\304\237\274\231\375\014=\370\211Y<\356\030\255;\346\227\235\274\365\021\025\275\240 \330\274\375\025%=\307\372\255\274\260Z\276<\013?K;\266\300\315\274\323$A\273T\275\325<\301}*\273\335\215\004=&\275k<\356\353\025<\364\362\217\273\244\2419=\'\227\356<\361~\021\274K\017\365<\370\267J=\243<t\274\364+@\275\303l\"=DvX=\'\233\347<\312\307o\274N\311\222\273\337\327\343<\253\277A;\210\314\365<\t4\003\275K\273\272<\235NT<;\002\344\273\364/\220<\247W\347\274\342\276\020\275T\304n\274B\252(\275\277E\026=\033\314=<\301\300\211\274>\257\221\274\267g\034;\216$V=\317\257\314\274\253\3413\275\032g\225;\032n\036\274\230\324\215\274\326\014\031<\346M\333<\033\343\004=\306\325\226<\375\316C\275Q\243\016\275V\261J\275\365@\322\273\272\227\242\273er\376<\315a\320\274\355\241M=\005\003V=|b\334\274\246?:<IN7=\262\354\365\274&\203\001=&\243S=\321\322\341<=f@\275*\243\301<\311\006\036=Z\2044\275\205_\226\274\264\350p\274?l\377\274Z\010P\275\220\300V<g\004i<\245bM\274\220\230Z=f\254\002\275\351\241\355<r\3439\275w<n\274\032\257p\274qQ\037<\014\305\022=XU/=\236\321\354\274ByV\275\322u\002=\247\266\206<\242\370j;*\337\273<\376W\263<\246\242 \275YoK:\271\225\'\274o\320\316\274\'\232\267\274\036\333\272\274\235\272\312<\nUR=\254\332M=\325\366;\275y-+\275V\224Q=\007j\331<j\375\014\2755\\H=\313\261\r\275\374/\230<\307\341\247\274\217\305\200<z\225\3717u\265\004<\r\315\371<\0228[<\2033E\274\257\323!<9\006\202<\002\375\310\274\266p%\274\277\234G=\032\026\246\274\310\025I=\306r\206\274+2\n=\343\202\016=\013\2147<\326\353p\274\254I\n\274:\205*=59-;\344S\013;P\356\217\274\351w\310<K\330\364\274\264\365\233\274\342\2705=V\3427\275u\232H\275\354bO=\215\"\375;-\347\253\274G\0248\274K\200B\275\326~^\273\364\023\326\273S\367\270\2743\327\374\273\331\022R=OX\353<\370\240\025\275\260\036\362<!y\363;@8S\274\231\371\000\274\222z\346<\223S\033<\023\317\364\274\315(U=\300\204w<\t\322S\275\037f\303;RL&\274.ZK=b\026\020=e\250\356\274G\363\365\274V\025\311\274\207\234\360<\3028\215\273o\2717\275\242\2458=6\276\255;\327\367I=\350\306\314\274\305c\010\274a\263\"\275]\257\025=,\2066=\360\261\351\274K\324l\273\366J%\275\235+\010<qI\246\273\343\270`<3\021\263\274\372\345(=\242\203\231\274\256\016\025\275R\244m<\231@@\273\000\316\202\274\023\016#=\274\340|\274\201\352\263:\344r@<&r\353<\230\216\010\2752\231\026<\nG\225;\206\377M\275\250\215\215\274\203\321}\274\314\233\273<\314\223\362<\315\205/:KP\241<\n\371\255\273\374^\030\275\331\034\320;nd1\275\367\t\010\275\344fK\275c\206\016<\246\271\237<l\245Z\275p\342\345<\212\220\273\274\200\036\264\274\344\335\'\275\005\0149\275 \025\203<\362\205A=\277aE\275\210uM=r\016\016\275\3000\222\274\037}\264<\360\222_<_\270N\273\204,\027\2750i\001=\253p\314\274\367\316\225<\177\262e<j\306\326;\322;S\275\210\236\005<\351oE\275\243\326\033\275\002\004|\273eg\036=(\370\3449\304~3\275\244\016\343\274C\376c\274\014\300\027<\373\036\327\274\177R\325<\034\306/\275\252\206\256\273\036\215\034<7}R\274\257\270U\272)\351\353<u\327<\273\206\274\335<\334\352%\272M\001*\275\251\025C=>\222\321<\t\261S=b\311\025=f\314-\274\362F+\274\356y\230<>\224\366\273-\2460\275\331T\010=e\275\270<R\360\263\274\2519\327<\034\241\223<\202\370S\275\353\231V\275\021\302O\274#`\277\273\007\t\214\274\331\377\362\274_\220\022=\003oS=\357j)\275M\001\207\274\271\202\010=\376\201z;\323x;\274\353&\262:/\205\036=`\3032<\233+5=\345\257\311\273\310\336\333\274d\223\001=\350\365R\275\204\317M\275xMZ=\201\2662<\261\2641=\247\017\246<9\230\357<\276\213\017=\345\262\016</\001S=\337\255W\274,\236>=>\361D<\224:!\274I\350*\275\362L\022\275\320\231\343\274t\014U\275\250\003\005<J\324\035\275d\256W=KR\027\275\261m/\274O?Y\274+\3336=\003D9\274\266P9;\326\272\006\275.\256^<`m(==\205\224\274g\007\037<\200\276\n\275#m\323<\377\363\315\274\354w7=\356\r\253<0\341\342\274\211\362\333\274?\205-\274\033\201.=\271\342\244<D:\003\2752t\270<!\\\327\274\223.B<@8&=\207\206\271;XL\354<r1;=D9\007\274JI[8\341h\000\275\367\361*=\227\200\322:\253\004&=\352\375\377:\010\'F=\273\245P=\027w\363;x\033\324<6\017a<\235\377!\275\253\037\003\275\215\020\010=\324\302\360\274\352)\014\2752\373\"\275F\274\342\274\252\352\377<\2710I<Q^)\275\363\2550\2750\303\367;[\325J\274n\261*\275Y\017\301\274\315\363\013< R\340\273w0\215<\252\306\\=\361^W=\315\316\235<\276\204c\273w\3124\275\210\370:=\017*6\275;\020\362\274>\020\013=\235\033*\2758\327\251<`FY\274\340D\022<\252;\016=\240E\272;{\026P=^\257)\274\323\365\013=G\371\341\274\216z\345\274 tV=\233\2118\274\002\204\263\274\357\232\377<\233\201\337\274-F!=9\020V=u\324\215<\025\331\364;\205\361\014=\032\027\225\274@\026\247\274(\030\362\274\303U==\323]\230\274\256\373%=\035\363\264<\032$\240<j\016K=\217Ax\274\350Ft\274\307\201%=\250G\241\273^A\276\274\267U\034<X\'\005\274#<M\274q\212Q=\3461\177\274\351\255\027\275\311~J=m+\010=\306q3=;\367.=\025\322\001\274\307GR<Zx\033\275b\266y;PY8\275\216\343q<\333\017\037\275{\275V\275\227\315\352<\226>\301\273A\366\314<Zu\216<\313\235\006=Af\002=1\322\021;y\336#<\2723K<\337\000l<f((=\213\025\336\274$\'\272\274\253\t\350<\243p4\274\254;\204<=\265[=\263[\233<ku\003=\265\251)=\021\234-=\343\023^\273\327^\325:\217\242\214\274\217\243+\275\037\323\007\275\33438=\304\347\276\274\2531\027=\363\276\001\273! \372\274.\364?=\373\266G\275Iw\224\2741T\312;\320\264\254\2748\3340=\301\227*=$\034\273<\306;\266\272\250(<\275l\r\242\273\034u\355<[\264\030\275\035\3663\273vo|<@\320\244<\310\254$\274\030\3240:\227\263s:\006\220P\275\300!%;w1\026=\250T\007<\362\3602\275r1M<\330\030V=\210+6\275$\376\036=\336\t=\275D\261\275\274O+\016\275\221|\375\272:#\261\274f\357\202<8\t\033\275\327-Q<\304\2553=\230\211\212;\024\266\010=`\207\301<\024%\022\275\220\221X=\"\372\265;Ly\314\272\361\020\375<\362 \210<\311q:=Q\277\364<\004\261P=\033\343\2219R%\003=W\251\315;c\351\025=B\341M=KRW\275\210\014\353<)}o\273`rZ\274\214\227\n=\025D:\275\200\257\244\273\324\323,<\275pr99p1=\327\337K<.\224!\2756\n\372<>&\201\274F\325>\275\373\365O=\030\261+=\205.v\274\025W\025=\302\320S=\375\304\030\275\204\030-=\372\220%=)\377\020\275x4W\275\031Y\247<\211\337\314<\255\251\000=\337nS\275\270oR\2751\272\365\274q\006\271\273\244e\332<\347l\003\275\301\264S=-\317\017\275F\311^\274-\3131=L\2406\275\275\273\262:\203_==\\?%\2744U\315\274\317]\033\275j\343#\275\300\316\000\275\010\311+=\'}\320\274\272d\037\275\023)\021\274\217\303.\275\034\215\357\2737A\r=\234\344)\275\377d\024=I\207\310\274u\261F\275\212z=\275(\210!\275!*8\274\214\377,=*\347\025\275\312$\201\274YiK\275\317\324\223<\210\344\200\2742\035-=g\342M\275\251\333\341\274\376\356\"=\377k\006=\253\342?\275|\306J=<gZ\275\233\216\016<\017\374\016\274\244\330\032=\252\3031=k\307\371<\220\364\365;\342\202\211\274JC\001\275:\020\013\275\033\002\013=\351\240+\275\272AP\274\200cq\273M\030y<\324\206#\275Z\256\t\275\377\336\306\274\313\357\325<\027;\014=\332\315\357\274s(1=\302\365\\\275\313\224\003=|t\000=\312E\264\274\324\310>=\345\326\207\274\335\271\031\275\273\377\271<\n\232\375<\333\244\276\274\223\320\005=v\323\004=\354\0335\275\266}\365\274\263\215\013<9(&=#\030#\275\t\275\301;\272M\232\274\331\245\336<\024<<\274b\374\237\274l\250\177<\306_\016\275!\036\255:\323\027\n=\t\2672=\017\276\205<\235\255\222<f\230\035\275\257(T\272\331\370\253<\323H\232;bZ/=\007h\341\274v\320j<\254\270\322\274g\201\235<\335\225\247\274\213\222\234\274\032\342\234\274il\256;\344\277\256\274\223T\'<\355\341?=\312^\t\275^\323\226<\005oG\275\346]\037\275\014\300\205\274\224&\270<\254|\250;\333s\\\275PW\271\274\367\324D=]\314F\274\t\016\245<\2503\350\274\311s\305\274j\306\226<g\356/\275V\357\032=\230\367\220<o\003X\273\261\023\260\274K%\200\274h]=\274T\024\t\274k\177\213\273O\365\013=\226 \030\274+=\204\274\212\016\342<\254`\013=\356\\\302<\271!$=,\355\272<\023\224\332\274\270p\233<\300\245>=U\267E=\210<3\274#\313\275<\224\306+=\327\223A\275\354f9\275L<\022\275\342\236\236<73D=3W\336\274B\253T;\216\227\276<\016\254\'<IN\020\273\216<N=6a\357\273\241\245\264<\346.\366;\027\336\016=N\017t<\304\220\262<!\025\324\272oz\377<\335\367G=\276\330Z\275\257\237\001=\362\215==<Y\353<\271\350\025\274\226E\200\274q\271\222\274|\363\310<\245\365\233\274\275\335B<+C\\<\014\211L\275QI\213\274c\312\364\274\302i\312\2726\231\341<m\032\373\274\021kC\275\"2\326\274\032\256e\274,/\271;YT\256;7U\000\275\350b\355<r\351R\275r\230B\275\024q\002\273\274\"\013=<\013#\275\231L\207\274b=\202\274\036A;=\247\007J=\224\033D\274\271\331R<\2558\365<\3760\371\274\2373\326\273\226\021\237<R{V\274\322\2665\275\250~\013=\357\203\004<\270b(=\034\333i<\373\215\275<W\361.=T\035y\274\021T\n\275\014\216\177<f9\371<\003\223\277<\222(\350<\322\307\300<9\200\025\275|\255\210\274Qj\271<s\332\005\275\024^\365\274\035\0010\275\224\014\031=\352\304T=]\216\337\273\201PX\275\311cm<Q9\335\274{\007\323\272\000\324#=\216ZI\275\321\267S<\316:\315;\014\210\271;\337\334\353<\'\016H=\006#\301<\270\"K\275\273\270\213<\306\0073=\220\366\251<y\362\336;\322v\205\274U\364\301<M:\260\274b\345E=d\365\t\275\371V\305\274\002g\216\274\253\332\032=N\006\024\274\005\"\274\273\366\231[\275\034\027\025<]A\305<\277\341&=\215\360:\275Z\337V\275\267\344A=k\377\246<\200\233\014\274a\226\251\274\2409{<\311\\L\275\212-\210\274\001O;\275\330\370\n=d\232!\274\020<\001\275hm6\2744z4;\246X\300\273\177\007\274<\351yv\2741\024\037\273]\352\242\274!\333\332<\006c\010<\215\312:\274\277\247(\275\024y$=D\0262:\307\177j\274/\255\250<\334\330J=\3107W<9A\023\275\327\362]\273,\006\301<\221\230\001\275pY\014\275\250aN\275\030\307\312<j\270\277;}\223\214\274<8\332<\035\273\030<\365V\031\274\266R\032\275x-\"\275\210\353)\275\225n\376<\302\275\247;\t?\277\274\001\345\213\272\'\001<=\277G\346\274\244\020I\275M\231\317<z\004\016<\007i\355;7\234\306<$\251[\275\204\343J\275\000\341\016\275\301J\363\274\373,\366<\205\215\030\275\216z\t=z\276\340\274&\311-<\235\262\020=DA\333\273v\261!=\337\332C\273+k\375<\320yz<W\257\'\275]2>\275\372c>\275\265\224&<\275\325\"\275`\023\322\274\020\212t<\213\005\025=G]\016\274\270p\346\273\"\376\036\275\234`C\274\343k\032=s\"4\275$\300\207\274\227\210\304\273\347Q\216\274_\004\000\275\3214h\274-&\030\273\366\"\244<\365]\010=3F[=\210\340\275\274\262\331@\275$\361\333\274\262\341\254\274S\2622=a\334\n\275y\017/\275\264\317V\275r\206\375\274e\226\231<\221\244\317\274\317\2376\275\017p\037\274\211\305H\275\023\317Q\273\276\352\001=\244\317\\9\254\242\252\273\221%T\275\314P\235<\231\260\363<\017JA=\346zK<\302\363\256\274\373\036\206<;S\231;3\243/\275\026<5\275\260T\353\273\257\272U=!\2070\275\333\330\202<\274FV<\200\304\233;1!(\275c\361\r=\232\2648\273\265/\344\274[\364.=\032B\023=\r\\\027=\311\216H=\254\240\000=s\276\305;\311\300Q\274\005\037\n\274\004v\365\274\313\347N;d\206M\275\347\300\364\274\004#\340\274\314\230G=\300X\r\275z\340\353<zH\320\273\252\005\241\274f\344\370<\342\017\301\273E\230\210<\010V\337\273^\3078\2741\313F=\030\006\020:]X\325<\250\357H=\271W#\275\'\331\314\274g\314\352\274\265\226\020=5\240\360<t\003\302<\000\3145\274\304<3\275\256]\312<( :=\025\'4=$\336\311\274\345\234\264\2742\000\272\274P}_\274\213\304(;ojB\273\251\346\007\275z.\273\274\000\214\275<\255\246\004=\0142\367\274\254E\244<\261\340\033\275\230z\305\274M\300\004\275\272\3435\275\006\r\351;\220!\t\275]\204\333\274\301\243\346\273|oO=\023\3449\275\007\204;\275\225\370*\275c\201\351;Z\253\005=\032Tr\274<\026\007\2751L\312;\222mw;m\237@\275h\026G\274RN&<\353~\300<\022P\310\274\355\223L=.\231 =E\036\214\273\355U2\275&\020\227<\007\236\032\275\342\217\253<\246\352\370\270\\\355L=\006*\214\274\342\235\352\274\236\211\010\275!\035P=\254\006\016=\270N\223<\311\265-\274n\217\255;`\254\347\274\322\3128=\256\336\231\274=\022\030=*\210\033\275+\017\274\272\376?\020;(\244*=9\337\014=\r\337{<jn$<\371l\244<HS\275\273\337\324:\275\025\227\350<\371\2510=\212\323\324\274\366(;;\017Y\014\275\002\346;=\306.\002\275\314\246?=pX\304<\2549\223<hv.\274$\300\024\275\r\250\245\274\265A\020\275\271j\374<s\276t\274\312\331\001=\314m;\275\223\252Z\275\210\001\261\274\240\027\037\275\332\257k\274\032\311\224\274\213k\022\274\232\230A\275\351\367m\274V\305\"\275\204\255[=$,\010=\0317\\\275\322\251>=w\006\340<Q\212\004=\273\264\234;\374\242\230<3\222\t=J\203\\\274q`\027\275\026N\020={}X\2750\226c<\010\320\337<\375\031Q\274\325 S=\332\303\351\274;-\323;*8\"=\315\010\025=\270\2631\275\001\336\013\275\354\274x\274\365\000\001=**O=\237\230\362<\275kW<K$\343\273\010\t\342\274~\264<\275\202x*\275a\276\274\274T\206\246\272\346\244_\274_\2067\275\230\214&\275YR\231\274\217\343\013\275\363+\367<\347\260[<\272\302\275\274\310\241$<[\'W;d\377\340<[\250\"=D[\021<l\032%=1]2\275R3\205\273\231\253\017\275V\201Q=Rv\366\274u\031H\275\305-\000=\030\204\212<\262\306\001\275\230\2226\275\355\025\365<\354VE\275\346\301\033\275h\370D\273\312\231S=igH\275N/*=\030[3=\355\303\'\273\334kB=\222\t\241\274cX\003=XK\230\274\217\014\034<\345\270S\274\356\226$=?I\232\274\305HH<\353\215\253\274\260A==F\027\247<\267Z5\274\035 (=~\350\304;\220P\'\270<Q\210\271\025\247\335\274M4\347\273<X!=\324\037\230\274\226\003\245\2748\330\334<\026\376\016=\030\2663\275H\020\017<\003\216T=\027\212\365<.IU=\013\236c<7\245V\275\006#)\275\374\254#\275l\244\263<\203\342<\274\026\307\345<\031Y\226\274\212_\300;\371dC\275\333M\377<\"BH\274\374}\\=\232\033~<\3354H\275(\000I=\264\035X<>\375d\273\255\210\032\274\271]\326<\252\352\207<\345\335\245<\032\371v<\3779>;\264Y\362\273\364\036\335\274\360\273\004=\027\017\331\274\252\260G<\260r}<S\310V=k\342==\307\313\252<\373\022\360\274\245\245\364;\207\361\025\275\2615\000=\220\343\211<\372#\017\275W\177B=\234\016\261\27472\203\274\255S*<\256\030\035\275\306\363E<\313\365W=\310t\302;K\335A\275ov\002=\240o\255;\310*P=\314\270\277<\234\005:=\376)\303\273\3547K=\322\\\376\274\365\272W<\313\\\253<\020\304\366\274\305\240\271<\233\274!\275`N\t\274\374`A=\342?\225\274\270(\004<\201\372\275\273\265fK\275\372\356W\275J\241\010=K\372\343\274g\2524=I\n\313\274\001\321\036=\367O6=10U\274\276\027\234\273\274\026\212\274\365\006\221<)\202u\274\210\342\306\274\306\276\272<q-&\275\253\373\023=\302\320W\274\233\007\246;\265~i\273\251\r\\\275\251\210\033\275\373\325\033=\346%@=\343e\"\275c\177S<Z\265\024\274\263pQ\275w\351\374;\rSY\275Y\266H=9nK\274\356\303\263\274@*\261<\024\227B\275E\203S= Vf;!\312\013=(\322W<\032\233=\274r\210$=\216\245,\275m<\263<\226\236@\274\001\356\237<\3775O=\3278I=E\230J=\026\007\227\272u\272;<\252\3628\275\r\016-\274\272%\332<\347Vw<\366H\334\274\301 \036\275\374\274L\274\336A9\275\037\332l<n\005\017\275T\273V=\336\333\000\275\262oK=\263.\267;<\2000=\337\313>=\211\350\324<\336\327O=\361\320K\275]\205M=Wn\000<\230iS\275\327T\314\273\342\247\017\274\000\nJ=\250Y\371<G\t\352\274lv.=`\227k\274J\346\373;\326\365C\275\252\362o<M5(=\203\014\001=/LY=\222h\313<\256\310\225\274%|:<\246\264\001\275\013\216\001\275\316nc<\3307-=!a\237;\217K\277<\343\226#\275\231\021@=\007\220!=\217f:=\\\366\004=\210Y\026=\337F:\275[O/:\263\217\037=\236v\014\275\330\377\215<\357\250\221<zE\260\273_\276P\275\255\022\321\274\216\346\027\273\261\021\237;X\360\242\274\261\002\252\274\233J\357< (\360<\337;\202<#\2333\275\207\000M\275\241]\277\272:\305\341\274\344]\210<\001\364\241\274s\350\037\275^\212+=,\276\277\274\t+*=X\254\377\274\034.\314\274\003\r\360\274R\"\250;C\3639<\340A\303;$\313(\275\037\315[=\tO\257<L\303\021\274\034.\267\274\345\246J=g+\321<\361\r\223\274\360K\002\275\334.\006\275^\303\340\270\365\206\003=c\2003\275zq\246\271\027\221L\273l\3416<\236\017$\275\202\016/= LF\272gY<\2740\372w\274\322\273\322\274i\307Q\275\257\335\031=\214\242\233\274q\240\325\274n5>\275\006Y\351<V\036\333\274\177~L\275\035\247\225\272)\353f\274YE\n=\357L\023\275D\300\327<5\326\220<]<\314<\326\354Z=#z<=k\231E=\004\347<\275\365\231Y\274\312\232\253<\"|1\275\207\014@\275_\006\005=\355h\234;e\302j<\221\262\313<\353\256\314<=1\357\274\275\353u<\021\260(\275(\006^\274l\000\014\2756\320\253;\330eV;\247\0253\274\3734A=&\207\021=\010\332B<\002\322\264\274\373w\226\272\211\006\306\274\301\206,=\353\370V\275\tO\204\274\375\271\206<\007\\\343<\214m/\275\035m\372<\0034\310\274\210\267\310<\3305F=\207NR\275ZL\302</f\367\274\213\206p;]\250\314\274\221\262\013\27554(=\016Q\025=o\"\325<\233\270\221;\\u\356:{5\036\275\332\213\t\275I#&=\236\275\321\274\330\3352\275\374\022\233<}\270\244<\261\304a<D3/=\037\351\347\274,\376\2429\025\300\274;&\251\315\274zO-=Y\3275\275\000\322\246\271\370\273\301\273\205\033\215\274]g#;\177\013W:^/5\274\245\313V\275\361~\030\2752S\020\272\036\272\301\273vW\337\274\n}M\275\336 \264<Qc\003\275c\223Q=\034^W\272^~\364\274}I3\275O\016p\274>\305\344\273\315\274\226\274\n\270\315\273\013\350C=\272\271\367\274\357M\352\274\320\273\277\274\216\357|\274\341\370\237<\240\324D=\302\332\037\274 \nO=Cl#\275\3079!=\347\242B\275i\322[\275\361<\014<\006\212\324\274%Y\005\275\0333\237\274\026\241A\275\237v\274\274\365\205Y<\031\337\021=\370\263\027=\006&\036\275fD\313<\345\312\250;=\363\031\275\207<5=\212}3\275\027\201\032\275\373\371\004\275\347\377\027=\233\2154=\004\340Z=\303\305\341\274\377\215\003\2750(\000\274TM\223<*\232M\275Z\024\267\274\365\374P\275\006\257@\275\360\214q<\257z\\\275\250\207\254</\332Q\2755\016\030\275\361\224\317\2735J\336\274_\005R\275\322\n\210\274\033P0\275\342\317\235\273\020\315 <\347\334V=~\267\315\274\3714M\275\340\313\372\273.\006V\275\'\306\246\274v\2035=\370\327\316\274\230N\367;\377\230\332<\375\357\t=(\317\033<\331\330O\275\n\035\004\275\007\010\3469R8=\274\354\352t\274f\377\225:h\247\022=\363\014\032\274}\023\302\2746\207\326\274\031\237\224<o\241\037=\033f,\275nB\362<\367\331/=\033\302k\274\371\353\322<d\227\261<\262\031F=\306\222\320<\242J%=\343\'\002\273>\363\276<\312w\237;\035RC\275\320\304\024\275\"\3410=g9\322<\007\217\\=\216`\247<#=V\275\331\236f\274\325\3364:&UQ\272)\321\315\274\003Z\310\274:\310\325\273Z\277\025\275q\320\246\274\223F\"\275\3555\372\272\333\312\233<\237\243\206<\327\226\021=(\304\336;\003\314~;~8\003=\273\2358;\327\250\361\274\376B0\274\203\2212<\350^\231;\373\302V;a\032\374\2747XY=U\336\007\275~M\022=P3\035;\251:\255\274\344\243\002=V\373\324<+s\016=b\331\267<\202i\027\275t\273\020\274\374\315[=)40\275\250\310+=\334\373L\275I\315;=0\245\350\272e\356\315<\347H6\275\253\364\n=]\350\355\2718\254R=\276m\340<\213\312\032\274\255\007\316\271\343>\276:\264V\017=Du\261\273d\026\032=\210\223\354\273\305\315\203\274T\2622<P\371)=\345\r3</\346\260;H^0=\323\200?=k\206\210<k\357\313\273jsK<\026_\370;\233\335,\273kH%=\033j\214\274\"\231Y=\245\226\314\274\303\215\365\274\310\020\251<\357\036\224<\366\025\233\274g\241\343\274\030\004c\273\031\330\336<\304\217%;{ML\2758\037\007\275\242\327\362;$&\316\2743\324=:q\n?\275%\n\307\274\013?4=IW\344\2730]P\275\003Y%\275\253m\266\274?\217\216\273\025\245\001\275\373h\312\274Rg\231:\306\031\347\274B\255)\275\232\025\033=P\330t<!\241\333:\313\273\226\274\300A\024:z@W\274\261\3353=\202\304\006=\224\303\014\275\030\216U=nP)\275\217o\264\273\242\371X\273\205<\036\275\261C<\275\376\347\362<\342\311\377\274<\240\013\275a_\n\275}\222o;\004>K\275\327(\263<\310\331[\275\332vb\274\321\013?=\244\354A\274ZM\365\274\230l4=|\266,=\231\252\364\274\267\314X\274\3612\343<\205\340\337<\020\270\251\274\343\3378\2746O\017=\2648\242\273\206H\177\274\321\250\265;\351\253P=\303\247\244\2749\224%\275E\001\211<!_9<Da\272<\215\301\035\273\262l\253<@F\313<\336\316\237<\237\014P=\310<\221<\033Ql\274?\3057\275X\t\241;\242\"\355\274\352c\014\275O\t\262\274,\350\202<2,z<\2233\364\274XP\020=\300\224z\273\212\3461=\313\241\337\273\310d\020=\360U/=2\323\327;%X\306\274\274\207\225\270\354\324U\275\241/\t<\377\024&=\250\220\344<\317{\032=\277u\376<\254\013\312\274\313\0029=U\352C=\343\230\321\274\211Z\342\274\203$\216\274\370\302==z~\315<\352\361\311<\340\300\333\273|\207;\275\323\2030=\247\032\000=\231\317k<\037\211R\275\032\243N\273\261\035\377\274\231],\275D\025\272<M\256_\274\241V4=\036\030#\274j\022W;\271\nQ=hmX\275\025eN\275O\214!\275^\311\302\273\363\006\337\273}\351\016=\234\236\r<vZ/\275\n\021\205<\20028\275\343\014\262<_\024\355;\274 3=R\030\335<\2504\242\274}^\323\273q\026\013\275s^.\275\001\236\257;\026A\223\274\214\263{<\254!\231<\315yt<g\330\r=(I\326<\006\360N=\355\nS<\341\236:=J$\032\2753\256!\275\276\210::\340\277D\275\255\240\337\274\343\251W\275\216\340\020=\320\035j\274\224\220\216\274[hm\274\000\350\'\275\237\207\001\275!\366\307<\241I9\274\002\330X\275A`\237\273v\376\001<\303/\"\274H,\265\274Z\316P\274\3566!=\\5;\275u(\365<e\r2=\035\205\252\2740\177\374<\023\267\372\273f\221q:\005\tM=\023\230\036\2759\246\224<\330\334\222<\260\367\316\273\371\213\202\274#\177\026=[H\r\275(&\340:\304\030D=\333\314\216<\'\347c<\326\025\221<\347\233\035=\255\250^\274\223\240\222<\033\363m<\017\356S<]\357S=1\273\311<q\355J=\220Sl<\255\207\003\275\3466)=TcB:j0\236<^3\036<\0236\020<\347\001\037=u\236!=x\373\021\275:^\364\274\'1\371<\313\025K\273U[M\274\2739b<\347n\313\274\352\264G\274\307-U;q\304\027;M#4\274#S\241:\201\030\036=\254\202*<V\221g<\007\tY=\021\320#<r\tG=\014~*\275\223\207\241<\232B\206<\r\204\r=\313\032Q\2755\243\027=&2*=Jn\327<\340\354\010\275\306\205\313\274\263\367\205\274\271\354C\275\027\212\243\274\274\001\251<Iq\016=\":\255\274\310\250\317\274\203\245\037=`\233O\275\200\231\201<D\244-\275]\035\n\275\214\351\025\27480\035\275\364\\ =e\201@<\332\251J<\006tf:tR\313<^P\023<\330\"\025\2743\n\016\275_\250\365\274O\354/;\340q\342<\357?9\275\200\241\032\275\032\377\355<W\262\'\275l?=\275\033\266\204\274(\256\013<+\325\327\274\211)1\274&\366\030\275\355\325R\275AUI\275VQ\365<{\177:=D8\030\275\362*X\274(+\'\275\252\211\374\274\0309B\273JVG<\254\005\r=\361\2534\274?\212{\274}7\177\273\230\217\347;M\'\351<\261\316\200<\234\016[\275\245\210\372\274\306\003\323<Lz\346\274\356\357,=6)/\275{\350\376;\253\263\230<\200Q\n\27533\033\275\001FD\274Vp\215\274\214\237\t=\241\036\\\275\217\377J\274&F\366;\376\235)\275\256\261\370\274\213\332\234\274\322vN=c\335&\275\366)\235\274\274\276j<c\201\020=`\2316\275\230\326\035=\275J6\275\256\212\231\274\276\354\026=\271\333!=\275\004\277\274\351kV\275\331\314C\274\253\353\032<d\317J=\237\311\021\275\314\237u\274%\365\034\275\355\264\341\274[\317\231\274\361\357\342:\267\252\372<\264\206 =\255g\t\274\271\354\014=\027\270\376<\352\271N\275;\211\347<5\354\346<\243\345\346\274\355\324\024<\025\202Q=<\355\306\273\306\232(<\376\244\206\274\036\021\036\275\021P\010\274\265\257\273<3\275?<\243?\001=\304\303\225<\316wi\274\000\262\330\274\026\227\321\274\\\0348=\236e\373\274\304\024\010=eH\023\273\313k\207<\362EE=#&\013\275\026\233V=\342}-=\')@\275\034S+\275\316:\031=y\221\\\274\272\343\222\274\007\274\341\274\201/\016<\315\230C\275v\n\376\274\345\260\200;\246\372\224<\317*\306\274\205\275\024=\240\000\240<\303\3276\275\362`3==\303@=wQ\335<\260h@\275\033X:\275\361J(=<D\304\2743\250\003=\377\242Y\275zk\236:\3072-=\030S\035\275\255\315Q<h\264Y=d\206R=\253 U=\2559\370\274\234\033l<:wG\275\253?:\275\376\205.=\010\356\232\270\354\205.\275Y\366\010\275\325\350 =\247=\254\274&\217\022\273\206SW=o\333\036\275?\003X=\345\220:\275V\020D=\240\207\t\273\211K\372\274\200\220\327\273pF\246\274\r\333+\275L\362\204<\032\020j\2743\370\027:\313wP\275\236\352\022<\226\006\267<\000I\031\275l)s<\231=\302\274\225\266\\<\263\353y\274n\2211\275\353\334\027\275x\232D=\357tX\275\\\037C=G\237\024=@\2270\274`\'\206\274\257\004\214\274o\2242<\021\352E=\004\231\017\275\022\351\276\274\215\365&=J\3000<\306\222t\273\200e\243\273c\007.=\346X\330\274o\342\270<.\273\375<\336k?=\215w\343\274~\235^<\331\352F\275\326\3467\275T^\254\274F:?=\370\007;=Cj\372<^C\013=e\022K=\317q\"=\352\231\326\274\332\316\r\274\223\002*=\254 \006=i\263\250\274\225U\216\274\034\003I=1\354X\274#\237\021\275\377\027\274<\233\255\375\274\270\317=\275lL\013<\032?\226\274\004\313Y=\211\276\201<\312\027\302<\274\233N=\2169!;\274\222\023=C=\363\274\246\232!=8:\016;\273\2776<\035\3763\275\225\200.=\021uf\273\360\252\376<\016\367\330<z<@\274\346nV\274A\215\201\274^^\003\275\366\255\003\2754@\212\274\037\227<=\341c\016\272\321\026\275<\317\205(\2755k\033\275g\207\\=\000\323G\275\241\0259=\302\224\035\274\014\334\354\274\355m\202\274\372\261G=\331v!\275\236m\345<w=.=\353\337D<M@ <\316-N=\211\325\362\274?\376X\274N\272\025=\362n\025\275qo\237<\320\325\036=#\250D\274\205\032\354<\001\2350<\203\301#\275\003\243\212<\373\267$=n\020\010\275\217*7\274\234\245\207<r\213\036\275\212L\010\275N0\340<\321\370R\274LN@\274\356y$\274\264\371O\275\257\313\323\274\351\346\t\275\352[\333\274\243\260\272;\334\377\010\275k\202\306<\212\"\033=_\227\256:\200\336\357\274\347s#\275B\277\t=\005\235\276\272\215_W=\253z\247\274w\306\021\275T\204y\274=\231\r=\375;\t;\242\275\037=\262\253\"<`\344\232<\251\255\367;.\333\256<\274\374\226\273Q\006V\275/4\010\275\256,X=gq\364<\200\250\316<+!>\274\255t\305\274\227\302E=\301\355\221;n\2466\275\031\223\200:\007\340\001\275\333\322L=\264\212U\275\3038\366\274\0010\312\273\006\312I<\010;u<\316X\034=,QB=\322\360\236<\013FB\275LW\n=\375BL=\330Wr<?\211\305<\320k\002\275\tA\364;d\010\275\2747\027\363\274\356\025\r\274\006@S\275m)\3039d\254U=\013\325I<\246\211\n\275\031\326\341<W?\266\273\356g#=`i\316<\3017\333<\030/\021\273e\222#=\260\0106=\r\316\356<V\201\353\274\214\234\221\272 \375\001=\203U[\275\017T$=$`\027=\004t\357\2746x\027=\345\207\270\274\347\271x<\236\202=\273h\\\263<@g\306:\242\276\337\274[\031A=O\313\322;]\272\314\2745aX\274X\tI=M\303*\275\370\373\031=\256\357R=YlW;7\022#=\202K\344<\\\234~\274\225O\323\274=}@=d\262%=\357\311\376<\226\243:\273\020\333\004=8\254\204\274]u<\272\313\2415=\314;6=@k\024=\321d\030\275\333\315\026<\261+ =\375\3620=Z*\300\274\261 \\=I\325M<\343\027K<\334=H\275\276\332\202\274\225\226\323\274[/=\273\333C\001\275\037\t\261\274\345\361Q=>*.=Z\215|\2742bH\275:\374\001=\242\333\216\274&\032%<|\321\006\273\024\1777=\2717\310\273\207G\340\274\024\216:=\024\277\345\274\266\274\001\275E\020\320<\265LX\275\005\276\000=\343n\017=\024\354&\275\317\303\327<G7\'\274\342\0109\275_\204\006=\310?\221<\2169\356\274\303\266Q\274@\001\256<<\317\360<T\273d<\032\377\030=d\251\307<\271\240I\275w\374I\273H\300\\=\227y\336\272\267&8=\023\356\240<\265\347\006\275NH\240\273\232\373\220<>\272\215\274\270\375\206\2746\333\332\273\236\345\035=\340\237\200\274\367\341\301\274\\5\263<\031H\313\274\317NT=\373C\237<\256\255[:Ij=\274\340\3513=3-\235<\264\315\362\274&\325$<-\243Y=\317E<\275[\320,=\357QS\275\231\372E=mT<=\325\360\\=l\021\340;*\2139\275\2413!<\336 >=)\373M\275\337\366\256\274\017\352D=\221\356\n\274\007\217\233;\024\373\325\274Va1<\325]1\275\210.A\275\340]6=\264\263\036=\224\'\251\2736\327\014\275m7I=\250\002&\274\300\006[=6?;=\354\030\204\2727\344\205\274\343U3\273\337\234\r=U\222\010\275\016e1=n\275\335<\205A<=E\202\315<\334\212\372<\200\322|\274F\017\272\274F4\221\274\311+0=0\022L=\342\203\r\275\366\334\031\273\272\311\001\275\017*\226<\302\177$=\3426\n=\250\372\325\272\362y\377\274\306\273P=U\373!=\021$Y\274\035\3114\275\306g\006\275I\276\363\274\232~\020\275(9\034\274\000\234T\275\322<\037<1FP\275\35158=\207\214,\275~\361\245\274\214\327\'\275\261O\230\274\244\030\024;X\270\020\274p\264I=<.\204<<\261\330<\303qm\273N\265\336<\230*\310\274\304\"\020\275\203.\200\274\356\357\235;\274\340\200\274\013\302\270<\334\333\021\275q_7=\256|\003=\310\\V<`\261G\275\035\257\237\273\007OM\275\373\317L\275\233v8=b\332L\2756R\353\274\231`>\275]K2\275%\314%\274\270\315n\274\233Q\244\274\314\352\032=\215\222\032=[\3755\273*\325\021\274u\020\254\274r\241\033\275\264BU\275\332\036S\275\032\274\003<\032UV\275\266I9<!$|\273\005N\001=\377\"\370\273a*w<\340\376X\275.ZL=\343\334\201\273\307\316\322\274\245\204K=`2J<\341\004i<\024 \203<\247\304\027\275\003D4=\213\254\326<$\320\203\274\021\305G\275\364\215\n=>\237\310\2739\3154\275[B+=\220\341\005\274\'\206\242<<T\020\275\004r\351<\356j\022\275_\252\322;\232\022\231\274\211Mu\273B^U\275\r\r\232\274\036\224\035=c\315\356\2740w$\275\320W\016=p\203\275\274|6\235\274\201BU=\316\003:<\252st\274\035\361H\275\313f\021<\367Q\344\274\360\0210\274\245v1\275\367\276\367\273>\231O\275;r\250<\032\343\000\275)\006z<C\"\347<z\':\274\025C\000=&/\321<pF\350<l\213\323<i\0370=\021\224\026=\243\234\240;v\007\317\274P\3422\275\357\270\353<K`\024\274\306\372\035=\3635\014\275)I5=\336\346\234<E\203&=\226m\322;\215c\013<\306\331\031\275\223\335\252;\252F\362\272\233\302F=\333S\204\274\017\020\364:\374\223\217\274\'9\267;\360\030\024\275}\t-\274\222fR=\320\326\332\2748\014N=B\3133=\206\006\034\275\003r\002\275[\235\000\274vUD\275\307}O\275g\2662=\271\036\223<N)Z\274%\261X<\035w\"\275\314\242T\274}F\223<\262\033\374<\210\343 <\335f\272<\272\270Y=\226[\030=\025\n\233<1\331\360\273W\243&=\337[\375\274\362w\030=\302\342\331<\327[Y\275\347N\364<[\002Q\275#g@=\023\314\263<\014\006\304\274O\271!\273`V^;\222\245\250\274h\214#=~\276-=\024\3129\2754\274\002\275\021\275a\274\302\016\312\274\002\"\013\275\374\275\355;\212\021y;\n\265\276\274\2144)=\020\0362\2758\337\254\274\360TA\275)!\016\275\327\206K<+\321:\275\340u\324\274\333\3560\275\033~\334\274\275YW\275\356\271_\274\320a\375<\226\242\267<D\2732=\220\024\344\274Q\2670\275\271\335\252\273\275\270/\275\2504;<\021\373\005=\036\003\373<\001\2736=\361\325\250<\232\001.=u.-\273z\315\337<\271I\262\274\273\303\254;GL\004\275\0239\203<\362\255X=Wv\331<\260\301<\274\343<4\275sEE=\010\227W=o\031\021\275\321\315\274<\":5\275\260\r\020\275\357\256\3209\014\264\020=uC\215<\215\032\325<\221bO\275\266\035\271\271\300\301p<\357{b<\373\342\t<\365\037\t\275\210=\224\274\366\274Y\275:\032!=\310\240\013\275\0044\346<\300\351\376;\236-\033\275V\001\031=S\203$\272\253\224i\274\3567X\2759\361\351\274\253\033\262<\204|\205<}\3614\275J\252\254;T\333<\275\021\274\264\272\246\232\321\274\2152\r=\021\237z<\213\243\244\274\241\365\221<f\304\005\275\005o\270;d+4\274`\3149\275\227\034\023= \276\200<\300\3621=\353\017\013\275\307\265]<\306\356\334;\227\362\374\273\373\277\366\274\332L\025\275R\253O;e/\273<\350?\326;\014d\304:77\232<!\275\001\275\350\3656\273\250\224\336\274\362\214\024\274FC\016<\024<\333<\2208_\274y\230Q==\252\003=\001w\352\274\271\2026\275\245L#=\315<6=j\233S\275\217\021T\275\032\334\036\275\2176\027<\254\236@<\337_9\274\216\364\032=SN0\275}\212\354<\344\2412\275{\264<\275\263\005\026=\213\226\252;\276\367\340\272<X\247<\313\252\016\275\004\361\323<\030\201\303\274\"\337\002=0O\225\274\n\3364=\026\374\246\274\300mn<\014l\'=-\334\004\274B7$<\211\275\357<\201/\317<\213\275H\275Z\260\276<\255\275\313;\312\275\\=G\301\331\274\006o\310<\252\207\255<\037\324C\274S\204\343\274\352\177U\275.\030\014\275\027n,=\370wT=\256\234\017\275)\355\243\273\346]8=y\3573\274~\342\314\273>\220\224\272\246^*=\013\267A\275\344S\245\274\250/\013=\321E\211\273x\273\200<\207\373=\275\025D\352\273\347\177\256<\270\2348;\252\315\320<5\206E=\204\032\031=jR\215<\330\005\317\274\217\370\304<%\025H\275e\253\005<\362\361\212\274\275\217\320;\014X\227\274y\234b\274\217$\024;\375\000\n;\016\361\363\274\206\276\303<<\021\025;\2744\215\274\225\357\014\273\016D\033=\234j\220\274\333 \027\275\365\\\260\273\0256\'<5F\240\274\216\235\004<\330\207\027\275\222\237\267\274\213\316{<N\237u\273E/\333<\300\263\014\274\361\372\217\273\272\305\213\273jI,\275\003hu\274\263\275\257\274\347{\r\274.\353\234\274\227\2078<\205P@=\013\345-\275\200\t\205\273\242\013\r;L\205\340\274[\304\327\273\026\323\014\274\241\242\r\273\267FR\274\312\234\216\274|HE\274\010\342\024\275\3404\362<\214\370\327<\370\266\031\275\2247\232\274P/\305;\002OC=\200\244.\275\312>\300<`\035\305<\212\0000=o\255\026\275\301\317+:\315#\030=q\206\022\275V\255\024\275\224\246\210<$M+<\007\235Q\272*\273\037\275\343\336\277\267S\232\323\272\3231\317\273\\g\227<m\2544\275\0048\223\273+\364\272\274\310\244\001\275p\034\357<SdQ\275\3314G\273n\010\303<\035\'k\274rZ\200\274\275P\344\274\236\275\034\271<\262(\275\270Z\266;\265E/=L\243F\275%\022X\275)k\314<\237f`<\035w\257\274C\231\024<\3450\341\274\245r\204\274\3000\316\274\242L\253\274\313\241(<\360\016l\2747.\n\275*\010\215\27372=;\r\032\371<\337\262\331\273r\177\024=\333`\t\275\'\232\021\275#+6\273\253\335Q=\344\260g:\300\302B=\326\204\364\273\360\311\331\272\257\332\351\274XYq;|\270\237<s\002R;\374\316\273<\201\370\345<\244\030b\272\313\234C<i\274\364<\003\200\\=\203C\327<!\224\364<\263N\020=\337\364\210<%/K\274\265\201\300\274(\326\305<M\341\0167WN\022=s\024\036=\273\230\276<\231~)\2754)\017\275\014(\205<A\214\262\274!s-=\tM\001=\3708\215\274a3A=\001\234;<vl\300\273y\343\303<\034\231\300\274\361\264R=\261w\014=\221\265\216<\317\221\220<\300\\\013\274\322{\214;\027{\"\275\000\377==\340\004W\273^\343\320\274\020\220\"\274\236y\037\275\262!\352\274\237\255V\275\221\305\021=\346!\313\274M<!\2750&\340\273\214\312\017\275\213\335\310\273\374Xx:\260\377\260\274<\220Z\275\312\'>=2y8=\301\256\010\275\214\243\021\275\251\337E\274\025\373$=\037]-=+`9=I,\336\273@\2760\275c5\332::\220\026\275\265\307\202<\206\020_<\024@:=\350 \026=\306\024\343;\242\310j\273\"mL\275s=\215\274\342\236#\275\024\252\361<\274:?\275\030\232\342\274L=\262\274@\2665\275=v\311\274\321~\000=i\346+\275\007[\010=+\336S\275\204\232\342\274\227\242\030\275\260e\314\274\347*\261\274\037\247\026=\301\356\324<L\0108=\301\303\336\274O\210+\275\376q\020<i\001A\275\204\350\243;\n\034C=\340*\374<\rtR\275k0\177<\313mp\272\240\215\355<\302i\315<*\211\023\275Qb\253\274\201SI\275F%/<\355\247\203<\240i&=v8\003\275\302E3\275\233\220\315\273\331\343\005:\013~X\275\227\315H=\334\246\342\273-\016\036\275\206\202R\275#\324\003\275-;\036;A6R\2746=\266\274\375\373\037<\234l\354\274\202\206.\275_\254\213:\260\366\305<\020\333\026\275\374;\337<J\006\372<\376\374\020<\251\207\266\274`\202\257<\355\217K\274\230\\\316\274j\"K\275\t\357\313;.\206\337<\214\203\"\275\037\3634=\313\317\006=\264\365\002=\203o\005\274\262\226c<M\005V=<\3256=\035\031S=$\360*=(\032\207<&\255\247\272\3447!\274QYR=,\303\304<\004B\332\274e\010U=\341\tC\274\247\263\210\273\020\350\004=,\221\352\274ED?<[\023\254\273\32701\275.L\375<\235\256\":\326\356\177\274\302^9=\217(\232\274\301\221\005<s77<\300\214W=\005q7=\367\276V=PT\256\274\223)\361\274\362\205\353\274Z\232.\275X\315\326\274\035\303\005\274\010M\361\274\236\021\016\275\264\333S\275%\035\337\274>]1\275\323\222j;\220\250\036\275_\226\332<M\341\t\275\003\302\033=\356\377\226\274\001v(<\351W\223\274\202\305r\274\212\004\316\274\356\277\017\275q\201\004\274a\344\003=@C(=\233\204\211\274\364q \274\007\006\313\273\006\024\021=\256\355\263\274\230\240\245<\241\246,\275\353a4\274K\'H=\374\2463\275_-)\275\361\006\375;\274+,=o\247\206<C6}<\365\215#=\310\334\265\274A\351\350\274\301\n\300\274\246\031\221;Qf\024=2J+=\237\237\350\274\223\376\027=C`\254\273\223\316_\273\216c\r\275\213dT=\001\363O=|E \274\235\350\024=\2125\220\274/]\n\275\217\220\237<Z]\356<\241\322\000\275\340\327#\275\212F\022\275\211\232\336\274t\341S=\373\230\201\272\027\'\026\2758\247\326<\355<\313<VS\353<\313\317\032\275\364\020E=Qs\355<\t\322U\275\022\016G\275\346\323B\2756\347+=\323\344\035=Kx\027<\215\t\331\273\351\200Z\275F\377\t=\344K8\274\242\353\305\274\214\2018\275\006\372R\275\231b\341\274\360\315\335<\240\022\t\275\310\206z<\021\225\235;;\256\376\274\327\236\301\274;\336\006=o\036\025=T\207\032\274:7L\275\262\254l\274k\332L=\245\273\022=\235:\201\274\364(\261<\271S\227<u#\n8\257\311[<\226~\335<A\275\023\275=\0054=\225\267\016\273A\322q;\337JO\27537\002\274l1\300<k\344g\274\262\201\265\274\234\211l<\223\031Z=\256\267>\275+\213\021\270F\3131\275=t\035=\307\371q\274\251RX=\246BF<)\203=\275\025\tJ=\300W)\275NV\'=\245N\014=\004\3015<\252\346\221<\212\0052\274\356\256\037=\034:$\274\223\267+\275\322\234\032\274\361\3224=\244R4=\317y\352\274\006z(=\365\326\016=\365L&=D\375\217\274@\352Q<g\331\337\272}\210\023=\333\026B\274\177\210>=\366 ,\273i\232S\275\260\206)=\363~#\275\025y\005<e\325F\275_\305E=S\207#\275z\242\307<\360T\334\274A\265\033=wgN=\357\263&<\311\261\023\275.j<\274\252\342\237\273HP\025=\370\322\026=~\000\210<\277 i\274J\030\357\274\2250\216;`a\r<Dw&<\261\356\367;\200mB<\220\003>\275N\002\036\274\214\226\014=\026\205\256<\000#@\275\224Pw\274o\232\037\275\316\354\333<\327\214\371\274\035~\361<X\235\271<\261\023 \274\030\355@=k\250\315\274\270>\036\274e\356\212\2747\275A<\270\271\352\273\334\3773\275\031\3260\274\024%\343<\240%\261\274\314\037\255\274-\000\353\274J\032X\275\305%\237<D\226\027\275Fk\260\274lh\037\275BL\355\274}\017\332<U\250\272<\004\336\335<\250\007\302\274u\313%\275\214\317C=\342d\036=\341\004\330<\277\341h<\351}.=\003\200,\2748\2014\275W\211;=\266h*=5\347*=&\234\"=\315\320%=_\000a\274\344\340\377<\231>3\275JG\355\274\354\325\210<a\306^\274\261\303{\274\205\204\273\273\340_A=\'sM\275\337Z\273\274_\236\216\271\232\304\245<:\036\020\275L*\022\274\036\005\013\275\321.\227<\301j\253\273~Q\013\274\237y\356\272\3773\243\274\216\225$=\215\nR<\022\2066\2752\016X\275a\006\247<ik\027\275\257\001\326\274\020!\212<\3539\274\274\023\321H\275\005\262\304\274\272u\255\274\037\325d;\260\310\373\274\224\354\211\274}\330\t\274\035)\022\275\267#\022\274~\023\035=\316\243\030=\313\177\370;P\265A<\014DJ=YB>=\240\270\241;\303\003\036=\306\030\337\274U\031\014\275?\032E<:\327@;\252-\315\274\362B\036=\'LU=\343\214\251<&2Y\275\247\304\277\274;\204k;r\231\032<\316\300\364\274k\324\353<AH\034\275\373\276:\275\275\212\003=u\2262\275\246\214*=\370\306\022<\355i\037=\273\370\321\274\232**\275\267\211\301:i\017\363<\323\207\211\274\\\r?=n\371\t\273\r\030#=\314F\'\275\270\251:=1=\027=\341\213%\274!K\251<\2363\233<\251]>=:}\262<\013\036\342\274\375\0238<\265H:\275\031\257\241\274\2310G\275\322\010\307<H\311X\275\262j\007=\263\234#=bOR\274\302\004\031\275\036\310\025\274\036m\346\274v\024\231<\335\310):R_V\275fD\264\273\001HW=\254!\333<\217\034\027\2751\366\257\274t\337G\274\361\022\020\274\037\226j\273C\037C=\322\246P\273T\266\307<\032\315\360\274\177\303\307<g\037\307\271q9\t<f]5=\260\237\340\273\340\267\007=\232 9=\250\303\r<K\334\245\273\022?\300\273\326\324\214\273f\221\343<\366\275\377<\263\331?\274\314\235\010\274\204\2211\275\206\266?\275\375\347q\274\254\223\017\275}s\230<A}/=\370\317<<8\226W=\010\000\237;\236\336\023<\002l\245;\262<\354\274\204M)=\364\334\340<\260nV\275Q(\371\274\362\037\005\2736\224\224:p>*=\024\263c:\001Zh;_\r\t\275\230\233.\275\274\215\254\274\006\355\366\273\352\254*\275\215\313\302\274\374+S\274/I\276<\210\342\304<\3402Z\275j!\033\275a\375\361\274{\246W=\031$\254;\247\005<=\n\224!\275\320\255\014\274\204\273\225\274&\333\014=SkK=\371]\002\275\221VL\275;nK\275c\275\254<\257E\316<\002\310:\275 $)\273\222\312K=\201WI\275\317\306\361\274;\013\255<\351\2046=\207)\022=\026\323 \274\370\347\036=\213hZ=\207\332&\275[\365\032=\223`[\275B\322 =\203\243~\273\3643\206\274\235\323\027\274\272\022\265<-d\'\275_\313+\274\310\304\351<\337\001;\275\014;6=\035f\327\273\241\232\006=\t\273_\273\375\r\353<\215\235c\274\246_*<OO\026\275\201\202\333:\322?\203<\235\n$<\213!\246<\232\262\232\274\305\n$\275\033\260\307;\r\217\013\273\031=8=\337\026I=\273 \246\273\376\372;\275x\207)=\244\2124\275\240\016V=v\266Q\275#!\027=\250\205l\273\016S1=\030\202!\275\205\312K=A\227K=\032\276\032\275\243\367S\275W\221J\2752\240\306\274\346\026\001\275\225\322D\275LJ\273<\261\320\'=\3727Y=\345mz;\006\347S\2752\242%=\265#\023\275\246\254\352<\260\237\310<L#\031=u\376%\275\252\\\264\274\024R =\226\312\233\274\177cZ=TM\007=\023\007\326\274\031\030\265<\t\030?\275\371]\014\275\321\265\320;v\377\020\275=\361,\274?\275U\275\227VW\275\232\020N\275\016\242\372\271\362\264$<\262\310\214<q\374S=^P6=\255\333\036=\356\206U=E\014\'=6\340G=\265@U\275lNF\275\247^Z\275\325\240\n\273\306\272\221\274\313\2342=\261\"5\275K\350\211<\201\220-\275\321\354m<W\t\206<*}\204<P\362\"\275\032G\300\274\216\263\007\275F|-=\027\216F=\\1\202\274\346\"\344<\356\313\307<\333(\264\274\303[L=\331r\242;\3436\322\274?vM<\230E:\2750D\375:\364\333\010=\353<B\275\343c=\275\346\226#\275\212\010\0359 \261\'=\311\343\340\274z\203\312\273\225`\363\273\302\004\206\274\241\220\024\274\262\252\327\273\276\0365=\020\206\024=P*\t\274)S\016=\025z*\2759\311<<X)\213\274\360\033U\275e\201\220<9v\002\275\265\210C\275\314\374\013=.\227\206;^\002q<\021Z\t\275r\222\262<\207b\035\275\367\223z;-\035\002\274\tOp\274\0213\362\274+\344@\275\220\243L\2757u-=Hz!=?\263(\275W\352\'=\262!\t=\363\250\304;P\370?\275_\344\006<\256\316==\350\236\342\274\362\t?=\317\331\005=\203\370\020=l\253\030\275\277\265T\275\301V\260\274\363\203\320<gcR=h\005\001\274\022\267\227\273\342?\242;\3708\'=\211\230\242\274)\275\203\274+\313F;%\'&\275\303\350\211<\202w\302\274\204\277\351<g$\377\274\255\373+<\357\342W\275\264\241-=\242\244>=\tj\250\274f\3741\275\345E\021\275\206\321\322;\355P\244<\003\013V=C\223\017\275\266\342\264\274\242\3768\275\361\347 =\031~G\275-\2421<\307}\343\274\215\241\277<X\2360\274GN\006=\334lU=\306\354A=\003\3047=\222}K=\305([;ZS\n\275V\004\321;\373YA=\223\301J=\237.\021:6\013\007;\261\034\375<.}W<\215\030`\274\372\302\333<\004$\222<&\2410\275Ap\312<\3329\375\274\325{\264\274q\271\024=\t\205 \275\263\263\272<\343\262F=\345\3052\273\031\230\314\274`\347\373<\300l0\275\304\023\335\274\030\337\247;\316<\230<X\006\220;\363\365F=#z%=ut\005=\376\t\030\275\370\371\370<\032\000\357\274\356d\316;\302\331\315\274\265\261\036=\353\234 =J\\\260<\371\334\232;^DV\275\205\333?\275\352\326Z\275N\016\366<f\234.\275\177\255B8\\r:<-\331]\274\313\013\367<\310\375\344<\315\252r\274\326\007<=\",Y\275\0321F;\003?\267<\016\336\266;\r\327J\275\205\021\032\275\30014\274\220Q\342<\250\223\217\272\355\034-\275)\206[=u\333\211\273\352\247\210;\032\221\007\2756\202 <6\311\304;id\023=\216H\247<\206h\002=\006\000 \274\212\316\005\275{\366\231<\315|8<6\246\341<\025*\256<p\337z\274!L<=\346w\337\274\017H\322<\265C\276;\217,\234;\244\302\221\274B\331\340;\365\030\"\275RL\022<\323_%=\013\323\261<\203SE\274\364E\022\274qi\330\273N\256=\275r0\'<\031\370\374<\032o\345<\274#+=\334\263\263\274\"\023\240\274\221\225|<\316we<\3420U\275\327\234.\275\016\234-=/K9=a\030\227;\337\340\034=2[X\273q:\025=\324X\254;\024>3\275I\277[\275\017\334y\274\233K)=\37194=\361\332\t=\245\376<\275\375Q\027=\235\\\271\274\216\243V<\000\334\373\274{C\026<*\2500=\254\350\037\275\225\254\213\2730\323Y=\364@\206\274\002GP\275\224\031\377\274j\207{\274|\304\224\274\270n\306<\274,\214<%u><\nv\357;\233\035o<|b\300;)\304C<\371\3564=\337\324\030\275T\325\014\275\362$\002=\227\366,=\360\275\r=\025\202#<\231x~<#\t\014\275\305\235\367\274Bo\330<\026\210M\275H7\002<\034(e;H\276\300\274pVE=\304\375\313\273Iw\231<;\310\037=\035\301\016\275\002\034\252\273s#/=e\356h<\212\370\307\274\237\024A=\264\350\315\274sO\346<z\343S<\207\013r;\324Mo<\376\200J=\340Uf<\321ZL\274.[\033;\225\026!\275\321\027E\275\377.\271\274#\021\330\274\256t\342<\345\302\007\275h\201\255<\353\001\260<w\373M<h\274j<\010z$=P\311\373<[{\033\2757\373\021<\352;\010\275\305C\244<Y\306?=FU!\2750E\254<\307jY\275\320\332\374;\332\316\222;\226\354)\275\020\247O=\303j\225<zM\326;%<B\275V\004\376<p!P\275\211\372/\273o\227\250<\3641T\273\240\r)\275t\361\315\2749\2170=\315S\352<|q\367;$j?\275x\203\t\275\240\230\263:\013YL<\336\370\366;]E\205<\023\2218\275l\303\372<\323\004U\275\270\235\315\274cO0\275\342\223 =dj\007\275VU8=\374J\214\274\326\"R=9\020\203<\201\234v<\200\332\022\275<\r+=Jc\204\274\325\330\304\273\033{\r\275\3607\231<\207<\354\273M\027\020\275\027\234/=\251\025F\274\000a*\275\222R@:\371j\031=\273T7\275\213\022\302\274\270\216\220\272:g\343\274\201\037)\275\327\001B\275\274&\006=\036G*\275*Z\365<\243p\302\274\331\212\264\274\372\277J\275\333\204\323<{\035\001\275\214.y\274\236\022b<)\016E=\306\030\314;\301FN=\273\013;\274T_\247<\025\274^<\365\033\037\275\341UB\274>\034\306\273*\201\035=\021\033\302<\036\232}\274\027\026\023\274\351\363\376<\344\305B=\246v\324<\306\2304\275\364\375\317\274\321\250Y=Q\030\373<f|=\275\031\321\372;\033\001F\274\303\020\313\273\317\035]\275\201\247L\274\327\367\303\274\344A\302;\331T\372\272$\257!\275P\215\005=\024\207\304<\236\014T\275\366\222\271\274\257\204\235\274\315<\"\275\315\332\303\2722S\335\272\243\347A=\315\340\230<\304\344M\275\362R\007\275\202M\252<z\203J\275\257\366\367\273\026\263\307\274\313\240\344\274\350\240@\275\262\225\371\274\244\363\310\274\025\036P\273\260\344\365<A\353\024\275ET\270\274Nv\253\274l\223i<\341w8\274\325c\243\274!\351\330<_\353\233;N\361A=\245PB\275\330\202\376\274\303\320\351\274\371\036\033\274v\2614\274~B\257\273Kk\033\274\275\004\306\274\026\273\037=r\206\334<\360\364\313<A:\034\275k5\007=?\373\033=\007w\370<\216\032\373<\271\314\330<\213\006\031<\031\323\314\273\211%\324\272$\335\024=2\254.\273\017\323\024=\313\261\260<\026\023\216<\024*O=x6\\=b\014\255\274\270\362L<f\301_<Z\013r<O\375\020=<_U\275b@J\275\177\317E\275\301\330\237<\033>\306<\350\317\025\275\r\r\325\273\374>h;\rq\250<qN(\275\251\003\241\274\366(\031\274-lG=\375\030*<\010\3029=/T\200\274\235^s\274?\363\014\273\rf\254\274\200\256\226\274\317\312A\274\372 G=\302\310E\275Ha,\274\326\235\237\274)\347\002\275\"|\033\273\005\002\032\275\025k\374\274\2455G\274O\330&=\325\3320=Z\316\243<\241\270\302<\215gU\275\362\257@\274\035.\344<^\376\021=X\324K=`\266;\275\221\3744\275\003\226\227<\2251I=\001T\331\274f\260\224\274*<\n=)\2062<\267\001\232\274\205\346m9\330/\202<\307u\223<\272\324\315\274\227\327$=|\356\210\274\002\017\223<\0070\222<\265\363\000\275dN\322<cy\200<\263\t\271\274\216\243\356\274S\203\342\274\262mg<\365\345M=\355\315\323;\262\2534\275\221\303\\=i\332\304<\033\250\302<a\304\005\275\307\307/=\372\242\377\274\360\251*=\273\343\343<Di\270<\241\323\317<A\312\357<\277\375\005=\3107\330\274\332\301\001\275\007\3564=k\273#\275\317\212\365;\r\353\323<5\356\216:h\237\347\2747BA=diL=\004\211\373<a\336u\274\000\277\203\274\211QS=\243I\232<\323\217\025=\354\004O\275\017G\001\274,\333M\2757\302\261\273\217\022-=\355\014\034=\026\2676\272z\227\202<\352\2026=\215\331!=+\304\003<U\267\003=]q\323\273\273\210\252\274`I\376\274bj\334\274\350\0012=a\310!\275\267\200\004\2750\316\326;\207\364\003\275\311\354\014=A\227\257\274{\014\022=Y0V=h\270\017\273Wy\032\275\243\325\220<l\257\300\274\264\256\351\274\346\000\241\274\006\315\033=\030!u<b\210\264<=\220A<\330\354\022=\343A\005\274\343\261[\275X\267\\\275R\327N\273\214\317I\275\355\364\200\2740KK=;$E\275\274\216\365\274\207\007\222\274\230PV=w\262\024\275\263\005\n\275\376\351\207\274~\313\211\273p\221.\2754\356\276<\330\235\n=\261\263\305\273C\003]\275\352\177\350;D\224O\275@_7=?Y\237<\322\306\224\274=)7=w_.;\237\006\250\274\027\237\027\275J\350\3658\207\365I=\211\026\244\273\301v\227<\\\277\'= x.=\370\235A<\311\005\036=CKF\275\310!E=\300\342/\275\223\322 ;\016\226D=dw\365\273\360\r\023\275\036\322\250<cx\'=E\262\025=\257\356p\272\207\307\352;\204\301\004=\240\r\023<M\366\245\274\317\223\t\274gA\326\274\r\373\212<\\\215\034\275\270\240\006\275wA\244\274S\035\350<l\277C:\370\353;=\354\367\265<}P\363<\346\330>\274\354Y\005\275\0250\010=\271\rC\275;\003?=\236\320(\275\037\205\215<T\035\205\273!y\004\275\361\2277=\344oH\275O\330\021\275\311O\201<\352q\036\275r\204)=\317\010R;\232\2137\275\366\335\023<\361\013\306<\312S\205\274\236\252@\273F}\317<O\337d\274B\312\230\271O\243\370\274\025\346C\275\216\324s<\033t\002=\312\034y\274mAh<\231\321S\275\005[\206<\021(I;&\036N\274E\364\023\275\367\326W\275\221=\3179h\272F\275Sn\002\275Q\257[\275\n\233\'=\3451\316:\207u\313<\301P\361;IA\351;\215\035\317\274\234\334Z\275_a\337<({\274\274\220n@\275\244\037\216<\267\3641\275\354;\'\274V\\6\275W\nL=\'h\250\274\005h\351\274n\255-\271@\014\256;\320\217\205<e\272\212\272\225q5\275\262\244\244\274\365PV=\361\213\002\275\265\207\342\274\035,\363\272\225\3139=.\037\257;\272\021\013\275\373\255E;{\360\346\273\244\252w<\217;\022<\031r\006\275F\256%\275f5*\274\377\327\315\271F\244\322\274\222\2036\275+\254[=c\\-\274p\2076\2755\363\205\274J\027\276\274}\265M<\373&\213<$C-\274$\n\007=\017\345G\275\313X \275\002\343a;\247\205B\274Sa\332<P-\374\273\000:\020\274*)\374;\2318*\275\250!4\275\006 A\275v\030\023\275\021\243Z\275\313k\357\274\260\363\\=\227\203V=y\022\317\273\215\344\025=X=6=N\206L\275$\270\037=\256\037==\331\313>=\371[\010<\2546B=\000\200;<\004\000^<L\237\001<t\277?\275\265\204\001\274\235\333\377\274\311\037\220\274c\221\247;\207\223\014=\355f3\275A\231\346\274H5\221\274\3446X\275[\220\272;d\005\006;\214\265\235\274L\231\003\274\026\255\250\272uo6<1\030\037=5\371\307<\006\264F\274\273M\375\274L\350\253:\330q\315<u8L\275\266\336\004<`f/\275\022\177-=8\303\354\2746\177Y=\372\232p\2740\026C=\022\277\324\272\330\241J=F7\373<\332\352\276\274\225R\013\274\317\260%\275D\0244\275\356\305\026=\341\260\022<\310\262&\274\312\332\200<u\001\\\275qI)\274|5.;\241\226\276<\324\370\370\274\007\026H\275\022\321\017\274\342r)=;\315\377<\344\r\373<M\377\234\273\'\374\t=b\020I\275\3278\014=H%4\275\263\364\346;Y\210\310<\247~\262<\335\220f\274\241\217\265\274\207@\255<\206\"\264\274\262UO=#\225D\274\304\273J\275\000(\211<q\255;;\315{]\274\357M\021=\221\216\n\274=1\243\274u\363\027\275\226\301\330\274\275j\037\275\337\322\301<\177r`\271\\\334\001\275\002v\204<\345\317\345\274\202\315N\275\246\247G\274\200\276\303<\036\370\323\274\013n=\274\371B\265<E\355I=:s\033\275\273/\246;z\312\036\275\200l\261\272e\3166\275\033\004\030<\333\326\001<\336\325\335:s#:\275\202\355\021\275\350\320\330\272\272\226\005=\335I\273\2747\310<\275\271a\225<\227\346K\274\316\344\027\275\332\017l<\223I?=\307\023\346\274\264\216U;\366\201\035\274\366\2703=?\344\302<m\240\261\274\226\251\020\275b{\r=dG)\273Ac\341<F\201\r=\200\262\n=Z\254D\274\276\037\035\273\334nv<\270\301,=\333\201\002\275O\030\363<\271g\016\2724\330\325<\3243<=\2752\032\275\315\\\025<\246\364$\274\307R\310:3\207\224\272\2537*=\2567<<2\223A\275\333\016\033=\215-A=\275+\031\275E?U\274\255M\332<\223c]<\217\240\266<\204\354\363\274\037C%\2757\025W=\240\177\303\274\306 S=\036\347H<\3130.\275V\214\346<\217\267\220<\035\2772<\211M\261\274\225\320&==,\r\274\0037\006=\312\320\341<d\370\220<#\343\251\274S\231U\274\345\226P=\323\267\002=\023\3522\275\312\333?\274\325*\300;\037\274\340\274\241zD=S#\025=\312\314L\275\001\226h\274\001\377\006\275\007\276\311<s\242\221< AR<\213V\246<\234\016\213<\367\204j<\201/\375\274\037\t\033\275X\254\271\274\263\240n<F\332\202<\375\037\376\274\260\371\257<j\013I\275e7\253<\314\336\030;\215|Q=\276\266\013<<\356W\275\001_;\275\2634t<`\230\206\272\372;\273<~T\002=g\2023=\373\274A\2757\354J\273\326WF\275\373\364\023\274\277\235\320;\207\226\036=\311\270%\274Y \"\275\201\3417\275\204\270\002=\025s\025\273\315\363\033=d\377E<\004|N<\230\231\016\274\210\035\211\271\322\351y\274\311\222T=/>3=J\031+:\215E\271\274/\033X<f\325\320\274\364\210\252\274d\027\355\274|\362@\275\231\016Z\275.\002N\275\037\270\027\275\202x:\274\244\312$8\"\324?\274\023\266\313\273`\223\333\274\217I@=C\374\006=\266\222\244\274\010RD98>\373<\252\217\212<F\317>\275\367(\231;\243\221\026\274\274\325\322\274_%\312\274ZLU=\0003\035=3\362Q\274<\341\003\275N:2=\236\224\036\274\267\344\215< \363V\275_\242A;)a\377<\307^\002\274\311f\220\273\344h\310\274\375\345,\275p\345\014<|\207\252\274D\311A\275\211M\213<\266/n\274N\255\235\274\361o\333\272\266)`\274\255\035\274;\024\023\035=\225\001\276\274s\336\256<u\033\370<#\"\246<\036\300(=\225e0\275\205\203\315<\244~\337<lo\371;\252\265R=J\r\215<r?\031;\016-b\273\202\374\316<\235\262\256</n)=}\326D\275\335{\326\274\267HO<\241\n[\274\006\302\224\272(\345\235<\362#Z\275\272-\004\275\231\037\352<\205\032\276<!\276\256<\214\026 <\375j\262;\231M\351\274\235~\017=\027}\217\274\014\344\007\275t_V\275\362\341%\275\233\321\366\273\345\356\235;\346$F\274\301\336>\275;K\\<G\246{;_#*=1\r(\275\030#R\274\307\310Z\2740\322\224\273\361\306:\275\247\214\341\273\306\242\350\274q\366\034=G\264\002=\355\261\027\275\200H\204<8\366O=!R0=\262g\035=\342\251[\275\241\223a\267u\"\027\274*\357J=\023\234f\274\322\344\035=\271~9=\346\033\312;\312;\271\274u\n\016=91k<wn\003\274l\241,\272\307-@=\016\222\306</1\243<n\233q\274\201\204\270\272f\276\002:\236\227\272\272\314\237\215<\177\255B;\377X#\275XV\232\274g(\374;\t\257\376:(\306\234<\263\353N\275\267\242\321<\311\234\310<gz.=\206\276\332\274\223\274\336<p\272\016=\346\306\373\274F\025\014\275\253\211\230\274{wA\275}\007\005\275~1\024\275\303\331\005\275A\370;:\013\024\\=j\003h<\353(@=V\3032\273{\336\031=r\275\366\274\356\271B\273\370\t\375\274UD\301\272\273$\250<\033\201(<\313\267\353\274\315\351w;\342G\346\274\335K\026\275\342;#\275\034\327S<\2404\023\275\242c\n=\210\2107=\036\345\271\274\230\264\333:\372\336\252<\022\367\275\274\3712\2618\375x\270\273\306Q\007\275\333%\225\274\034\317Q\275$X\323;\363\214\216\271\022\264\226<;\364\023=\344{@\275\r\246I=}#\256;Z\225t\274\231\332/\274\363\331e\274x\020\227<g!4\274u-E\273d\007U\2758\255\251\274\300\000\002\275D{h<h8\"=\3264A\273]db\272:\271\020=\264\321\030\274\223\207\032\275xlM<P\356%=}\027.<\306\315(\275w\261a\273\367i*\275\023N<;\337-\035=P\025X\275\205F\376\274\242\364)\275#\374\371\274\373\037\003=\022\030T=\322?7<\307P\021<,Z\004\275\237\340\320\274\344dU9\033\373\221\274\210vS=\365\247\035=\211q\277\274\023\306\024\275A\275\253\274I\271\237<)\030\263<uZ\330\274}\221\025\274\2537\026\275(\243&=r\342\027=\241\004D=&\301J\275\016D\211<\220>\310:\377\3401=\333\312\032\274\315\320\223;\005\206\220\273{\271^\274j\311\n\275L\216\345<V\207E\274%\033\014=\027\352/;F3\233\274\240I\313\274\206\022V\275K\372\210\274k\021\020<\230\357+\275)4\004<\0148\r=\253\216D=,fl\274\025\243\351<\033\317`<\274<,\275\272\363R=\311\016\216<\026_\341<uo\277<\031\343?<\235\255\363<x\263\t\275\252M\034\273Q~\336<i\214\300<\317\362\234\274R\227V=\035\2034<Q\005\003\275f\220:=h8M\275\351\2247<*\202\230<\337}\321;\223BI\275\313\247\356<u\366\350<\264\023\r=\247\255J\275#\232\221\274\262\236\023;x\033R=\244\200\240<)\257\027\275\'\223>=|7\236\273\303\t\021\275\325\006l\273\222\260\014\274\231\331V\275`\275S\273\247\322Q\275\034\251\001<\033\347?\275\302\205.<\217\354E\275\272tF\275\306\"X\275\251L\262<\330\017\342<\374\312\270<\264\005\003\275\253jy:\253oS\275\006\304\361\273j\302\321\274\250~\000=\255u\363\273\211\354!=\360\356\035\275\356\031\342\274\303\333\201\274\202&\002\275\305mH=\030l\207\273!h\365<Cx\266;\253=\352\273\t\322\340\273\366\306\217<\376\331\\<\'\337Z\273\010\002\033\275P4J\274q\306\r\275\023\022\360;\243\347S\273\3559\277<\336\340H\275\361wz\272\233$\261<\033\337u< ~\325<\326.\022=\246\260\333;95\026\275U\253D\274\263}4\275\0032\330\274\226\322H\275\252\320\316\274\235\021\324:\005#\312\2745\307;=E\216\030=\350\375\272\274[\017\t\275\236c\212\273\312\333\025=\255\002\\\275\246p\336\274m\227\210<Y\243\017<\204Y\031\272\371\031\013;y\014\337<@w\317\273\306\324\256\274bK\n\275\272{O\275\365\025}\274\344\3735=\344\027$\275\370 \325\273\304\217+\275\315\216\000=\235\220\264\274DpP\274\336\010\004\275\352\344\240\270\343\362K\274\255e5\275\"\256\371\274}\265\262\274\374?6\275\036\343S=\377\363\216<L+\010<\010$P=<\355\020\275K\274\002=\206\316\362\274\325\324/\275\006lM=\3477p<\313\311\345;;7_\274]\336\245\274)\0316=K\332\254\274\026^\r\275\322$\\=\262\325\320\273\354CL=f\357\016\274\3565$;\206oQ=\277\235*=\306\024\025\275\354\300,=a\226\007\275x\2412\275GZ\314<dR\341\270\370\313R=T.\"=\330\215\036\274z\215\"=4\360\336\272\325\311\204\273\000\206,\274\227\345X\275\351\246\356<H\252\345<&\222\027=\326L\222<\204\353\332<C\2654=\356\3146\274\2517D=\254^\275<\0104%=\023gS\275\252*K=#\024K=\002\267%\273}\326\n\275Z`\034\275\023*\004\275X\275\032=f\032\214\2741\010?;\033\231c\274,\213?<\330\373\005\275\303C\003=~-\204<7\372\035\275^\317\003\274g\2139=\362\312\376<\260\247\354\274:\251\272\274y81;\220\342\363<=\337\230<{1\'=\306\325M:\326n\267<\267L\001=\026q2\275*\330\031\275\20242=\245\254\345\274\307b\302\273O\345Y\275m\2603=\337\253\035\275\"\223\207<\262\237\233\2734\304L\275S\035\006\272\255\032\272\274\360\371*\275\000\334\204<\002@P=<\2134\273=\311S=j5\023< \236\255\274frm<\343\316\034\275p1\005\2759\010\004\275\270\374!=\314<2\275\330\220\033<,\377I\275\310\001\000=u\342\022=5\321.;i\256\227<!\245I=\010KD<.\315r\273\357\250\214;\332\253\371\274h\245J\275\014_Z\275\350\212\016=j\260\362\274\372\207X\275\002\276H\2744\244\020=@\242W=\306mu<\' \303<\273\013t\274\202\223\031\275\035\2537=&\270t\274\346\246\240<p\375\032\275\341\272?<\273wY=\347V\227\274zL\346\272\301,%=\177\034D<\344`\002< \334\020\275\320\3234=\030H\332<\361\355(=\226[\002\275\224=\\;\233\231\252\274<;2\275h9\005=\247\237\226<jh\007=\362=\254\274\261a\034=2\005\351<Hc\240\274\314\0327\275Dk\240\274y\333\037=\365\035 =\351\030)=\354\243h\2723K(\275<\203\232\274,/#<\013\0145\275\033\202\267\272\325j%=\004V3<\220\335\331<\177\225\003\273TU\t=\t\250\300<\366+\003=\000\316M\275u\325\353\273\210\310\254<\227\316\217:\023Sl\273\343\0314\274-iV\275\036M\017=\32405;\016\322[\274K\332\251<|\305\000<;HF\275@L\300<0a\034\275}\016e<\274l.\275\354\026\342;\02469\275\337\214)\275\357\357L\275Y\023\370;\350\210\003\275\343\031\352<\355\343N\275R\223\274\27485\034=\016)\306\2744\257:=\244\226\2019\246\260H=`\323\275<^\260\272\274FZ\026\273\023#K=\244m\326\274;H!;\003\372\207\271Sq\376\274\027\257A=\236\250\266\274\027\262\325\274\303\276\014\274\214u\377<\277\036\004=\354\255M\275\331\376\203\274\322\277\010\275\370\020Z<\265\337?=\036\2512\274)\347\202:\221\342\036=\3045-\275\320{\024\2755\323\002\275\366\0277=\306;\025\275n\336\243\271o\214V=\333\'\237<\3773-\275\226\275\222\2748\274\337<D\345\255;\251\336m;\355\014\344\270\025bK=/\277h<\205\325\003=\005|\026\274Z\231\001\275\1772=\2752\270\230<\320\033\"\275\035tE\275\232\331\014\275S\003\220\274t11=\250\033\241;\255S\337\273!<\234<m\221Y\274\345_P\274\334|<=\304&\027\274\333\356%=\254\3339=H\222\013\2754s\205\274\354\305<=\022K\250\274\014F-\275\235l#=\364g6=1:,\274\232\261\342<\327\030\365\273\002\337\312\273\0311\300\273\245K-=d\017\364<)\004\250\273Co\357\274\203`\n\275\231\014[=\340\374d;\354q\244<cgK<\246\213W\274=[6=\231\315\030=a\230\330;\227\005\372<\225m(=\343\335\003\275\333JZ\275A*\3307\2759P<\2671\354\274>\363\315;B\263\"\275%z\010=M\233\276\273?!\224;_\014\225;\261\230\253<N\2473=\210\217\010;\274T\265\274\177\237Z\275\3232(=\203I\224\273\344Y)\275G\361\374\274\022\215\016\274\362z\226\274\'\260)=_\";\275\334^4=\2222f<5\225\034=\235\243\277\274$\345S=\232\236Y=\211\0345\275e\270C=\306\2619<1\3319=\231DH=z\310\375<\261\367@=G\340\264<\322\231N\275\361{\311\274\204\036\323<G\244@=]a2=M\177\n\275\373\245\336<*(\250<\263\014\325\272\372U?=\023H\216\273Y\367\310<y@\371\274V\243k<m\032(\2758i\004=\204\366!=\252}=;#\0236=\206\310\305\273h\030\224<\363\035~<.7\353\273|D\244;\314?c<?,\311\2747\362\317\274\rB\271\274\000r,=\335\025\027\275\211\250\300<\232\305\027\2743\270h\273hZ\275\274\225\027\023=[W\014=%\245G\274](D=|`\263\274\035\353Y=\t\037\265<\305\231G\275\031\343\010\275\351)\270<1\340:\274\312\317\007=\306j\002=\025\257A=\330\307>\275\271\253U\275\316T\354<3DC<\000\242.=G\232%\273\034eQ\275\021R\230\274\356\213>;\t\226V\275e\305\272\274\366\246\306<\372k=\275?fO\275\345\301N=\235B,\275p\327V\275\261\220#\275\237P\243\274\336\255[=\303(\207<\332\277==\320\350\361;\323\020\316<\377\227\242;\365m\236<\257\370\227\273pVx\274\304\320 \274\\\324\321<\223\277\366\274@Z\013=%I#=8\2408\275)Y\030=\363Z\265\274{\020V=>^\264;\242N\356<\266\355\271;\222\311\002<\035\301\207<\261\030J\274H\217\245<\240\343*=B\254A=\302\201)=\324\200,=\231w\254\274\375yp<a\200Y=s\235\251<\360\212\357<\177a\017\275\365\347\207\273\364l+\275\370\261Q<\223\312^\274\274\207\224<\312\022\010\2758\201\211<\022\035%=\255MR\275\343\312\203\274C\240m\273\200)\362<,\223Z=p\322\004\274\245dL\275\211fA\275:\002\"\275@\217Q=]>\004\275\233\200:\275V\363\214\273;/\307\2731\251/\274\006\377\247\274d\037S\275\\C\014=\021\240\024=V\326\357\274F\267W=\202\371 \275&\033\r<P] \274\352-0<\230h\272<\345\243\\<\240\256\251<#q\252;\271\216\363\273\360\025\203<\360\343F\274\2417\000\275\034\023C<\223Y\r\275\255\236h;.\017\016\275\245\300W\275J\231\014\275>OL<\313\275\266\274\357\256O\275\257\367\376<{\326\027=\216\314\236<Q\250\354<\006G.;AtK\275\233#\2479\t-\032=\365\206=<\352\315\275<a\010\364<nv[\275\2152\217\273u\312\226\274g\215\035\275,\3265\275b\270\r=\367\245\236<\324\276%=\225\376\005\275\217\010\023\275\321=\r=\252\242%\275\201\271\t=zC\265\274\264\010\037\275\327\367V={\203X=\243o\030\275\003\006B\275\035\"\261\274\013\212\276\274\377\"\233<\321XS=\022/T=?R<\275\240\314\200<\201\215\354<\202\030\344<z\013\267<\245\243\001\275\262\337\320\2726\270\370:7%r\274\036\225\t=\315\030Q\274\']\351<i\0172\275FtB\275\000\277\315\274\247\271\274\273b\014\261\274\271\006@;\244U\005=\2531\021=\277\345Z\275\327a+\275\233R\205\274O\207\022\275\217\361:\275\265\306\266;|TL\275`(2\275du:=L\224\363<\234)^<f\257\030=\204\032\025\275\267-\254\273\014[\340\274\022\342\302<3~<\275j\350\022=\260\221\017\274C\336\367\274\352\376\013=;\017#\275\2176\033\275\016\t\323<s\356\262<\004\037j;s\245\n<\016\266U\275\223Kh<\013\343U=\354zM\274\177\245\353<\245\257*=r\000\036=\335\263\250<\316Y2<^p*=@g\021\275\274rV\275\003\231\007\275,\206\271<\330~X\275\356\243O\275\026\365\304\274t;\353<k2j<\302\313U\2756\222N=B{\231;\351j\241<9\203\260<\353`5=\345\227\201<\341\2562=Iq\374;,\0207<$\017\253<\345\212X=\003\267\351;\361.\232\274F\320;\275\\j\227<\332\022\251<\214\356V=\343\002\023\272\224\326+\274\242\005\267<\214P\366\274\222\037D\273\367$\237\274TZ\017=\223\260t\274#*\244<\241\353C\274\367;\314<\237\177W=e\356\263\273\346\242\025\274%dI<%\326\010=O\221\223\273\246\035(=b\241\267\273\274\316\007\275\362X\304<\223_O<\304\326\334<\227\265\322\274S\\\372<\337\365V\275\374\021:;\333\005D=Q\001\200\274>y\033=\001\363\014<A\201V\275\347\270I<nG4=\347\246!=zP\001\274`A\023;}v\346\274\271I\326<u\033\001\275Oq\247;\222K,\275\316\366\325<\356\250\322\274\210gA=\023\270\n=\014p\352\274\341/6=9@\202<\327\004\271<;\256\373<91A\275\202\2332\275\361\370z<V\023\362;i\336\022=W\300\346\274\013\236\332:\376`0=2\3218<\232\335\026<s!V=\334Bg\274\246\244\263<J\014\035=x<<\2757\276M=\3302W;=\2571\274\374\032\025<\364\3615\275v\320\255\274\371\301\205<\356f&\274\321\373\"\275n2\000<\223g\027<Z\252\263;sS\213<\327}3\275\\\262M\275\210\363\025=\210K\250\273\232\305\374<X\346\036<(}v\274k\361\342<\352\247\301\274D^L=\211q\330\274\254C\332<\251F\326<\340\273\212\272l\021\232<N\220\014\274B\2650<\324\017*=\241\217\025\275\005R\034\273w\036\352\273\372\221(\275\241\"?\275\257\3640\275^m\320\273[\2767\275\307\333\037=\033\376\r;\265$T=Rd\337<J\273\\\275\220\006\363<\220y&=M\277\344\274I&\300\274\263\273Q\275p\266\001\273\350\033\236\274\237\2256=\335\367\231<I\007(=\305q\t\2756\014\233\274\342\266\376<\014@\244;\206\323\013\275j\234O\274x\020N=w\202K\274\3179\226\274\005\353<<b\343\304<\362VN\275\351_\227\274\014k3=\246\352\325<<\237\300\273\346}\035\274\031$\035\274\314\323\270\274\334\027\255:\364A\333\274\006B\367\274\267\032\320\274O\221)\275\216\252J\275>\336\004\275\322\215\322\274\233h!\275\005\247\247\274@\305\363\274f\030]=\3538F=~\000-=\342i\347\274\364\221\263\274\270\2513=\243\006T\275\366\311\216\274\271H\351\274T2\003=\017^M;\360\027\033\275\233\221\354\273\341y\312\274\201R\002=\363\010%=\027\340\"\275\254\313\334\272\216\217\200\274\272\3606;Y\350$=\373\300#=n\200\272\274\237\234\276<\277\020\022=?\217\260<lqY\275\025\211\364\274\230s\001\275m+J=\2023@=\370\335\277\274U\257\336;\177\330\033=w\312P=\327aj\272\372z\023\275\242\247\\=\236\232\364<\351p}<I\032\260<\275\256#\275\307\255[\275\345\317/\274\252\274\025=\205a\025\272\211_\345<\331\005\277\274\367G1=\006\236 =u\264@\275J\031\'\274\202\261!\275\266\275M\273\220C\311<\305\320H=\355\032;<\027\336{\274\326\272\257\274\366\344\260\274\350w\232\274\323\377\244<@\372\321<\362\363K;`@\345<\237w\316\274aW[\275%\302L\275\273\356\277<\376BE=\014\013\266<2\247\272;d@!=\033v/=\213\034\244\274Q\360\r=<JJ\275}\276+<\320\326\224\274/\2020\275\034\007\020\275]\004%=D\2064=\321\010\304<n\334\221:g\361$;]\311J=\204a\007\274\200$\234\273s\033)=jX=\2751\246E\275\375t\251\274\270Z\352\274\372\203\341<\243\343\201\274_\007(=0\336J\275\216a.\275\325\211\'<\010\224q;\242\3251\275d\034\\\275*\"\020\275\366\261a<1\234:<\0276-\275\3613L\274\303{n<{\200\361<\200\347\221<*q4=\2566\370\274`\237y<\\\013\322<t\014E=\345\243 \271x\371J=\253\017@\275}\256F<\013\3206==\025\373</\346\343;]j\227\273YM\023=\256\223w;\233\313\252;\204I\221\274\021\233\022\275F\365\257\2740zH=&)\324:\235b>=\032\220J=\244\265\373\274\\:5<\023\3535=\247\337\\=G1\324\274\234\213\347\273\337<\343;\304\201&\275s\210j\274\3656\\=\352:\223\273\333GY<\350\264T\275&FC=\345{\306<\322\3519\275dz&;\272{\301<B\367\376<L&\031=AmF=\314\3248\275b\275%\275\334|\203<g\230\313<\004\n\273\274\330\223.\274W\003\031=\254;\014=&x8=\261\\D=\0014Y=\233}\311\274\266\024\247<]\005s<\276Y\337\2745\002)\275\232]\300\273\224\202\354\274\rj\026<\213\265\302<$\210\021\275\373\275\020<\252\313\366<\354\213==\3351@\275\250\371-\2757\217\200\273\321.\345<\261\242\037\275\374\251>=\275\246>\2752>\033\275u)<=\364\006\370<4\020\353\274\260\317\262\274m\250I=\245UU=\253\340\257;\206\363\027<\362\032\001<%q\025\275\216\'G=2\002\034=\336\212\034=\023\303\271<O\014\342\273\265U\261\274\016l\225<\224\327?\275(\n8\274\246\223\373<\344\006\002\275\001\330==/d[=\304\254\376\274\225\233L\275c\023\217\273iy\251\273UOM<\216\216\356;\344k\251<\323\210\020\275\36134\273\367\024\262<n\276\\\275#\266\216\274_M\362\273\363\353\017\275O\204\342<qe\221\274Q\005\026<\257f\376<\0000\307\273/\214\250<\231\256\245\274\270\346-=\327\266\252\274kDF\275\007\2545;\330\206U=\371I\365\274QN\275<\313QN<S\032\031=\372\355N\274\317\322\002=\201\244\265:\247\252\332<|\334\324<(\201\372\274\353\256\031\275\303\252M\275\226m=\273\254\255\333<1\006\027=\302\304\025=\326d\024<\202\316\340\274\366\301:\274@\351$=D\322\221:~\227@=Mz\274\274\'\364V\275\"\331\223:\207\352\364<\317\276\244;\'\317\360\272t1\375\274\364R\351\273\200\264\367\274\253u*\275?&\032=h\220A\275\263\377R<\205\375\357<\200\220<=\332\370G;L\365\270<\220UK=\036\255\315<\265.F=\225\026\374\274;b\003=\216<q<\254$\205\274\360\273[=:[$\275\367y.\275\364\020\'=\305h\007=\013\264\003\275\260\3160<\264?+=[d/\275\345\357+\275V\200\271;\024\017\340;H\005\004\275tBF\271\223e\261<\251\367T=D\3270\275\000=\"\275\325\017\021=\343\252U<8S|<\375\353!\274-\254\r\275\210C\231\274\266{\227\274j\311\027\275\252?6<\207 \005=K\307\217\272\336\347y<[~\264\274\t\031\231<\233d&\275*a\210\274\335y\304\2748\3354<\203/\377\274\177~\343\271a\033\020=\345\243&\275&\217\364\274;\277\244<\201k\"=\242\330U=\022\364\233<\002,\226\274kD\036\275\364/4=h%\013\275\360YQ=\354\354E=\177\032\224;\340\032\237<\367p.\275\025\327Q=\307NQ=\363\3264\275\342\355<\275R\270S=\345\216#\274`u\r=\250\314;=\010tQ=\265[0=\350\356;=\272T\343;\360\361\036\275\343RS\275\370\212f\274U\254\017=\331\346\014\275:jO\2729\276\035\275\261\233\313<\354\356L\275_\303.\275\3775K=\003\016\";_e\037\275\004\206W=u\033\276\274w\370%=\253j[<\023\301\004<\353\036\'\274y\006\333<\250]\037=\343\005E\275\t\372Z\275\n\347>=r-(\274\013\344\017\274\343\265)\275\260\271\353\274y\266\216\274\025\251\360\274\250\232\372<\3553\305<\030\315\244<C\224\037=\261\035\317\274,\201\016\275)\001\017\275\200az\274\253vS=|\333\002\2754\016Q\275\251\347\t\275\225~\244\274\211\014\006=\002K\316\274\322\203C=&\327\241\274\025\007\036<\303\242\252<\273\331W\275\310HE<3\273\335;\357\010Z=\264\333\224\274\232\334\363<9MQ\275\363\037Y<]\357P\274\361L\004\275\255\000\007\275U\365\347:=\223J=\334\241\r=\241\323S=\220\003\032=7Dd\274\342mO==\'\355<Z\016\031\275\2035\030=\001*E=#\036\233\274\356z\001=TY%\275\331\235(<D}$<)?\325\2736\277r\273]\201\232<u\335R\275\373\013\362<&\253Z\275?\317\347<\367y\307\2742l\204\273&\310.=\022|I\275\206\025\244\274_\350\025=\373/\r\275\003U\356\274*[\024=|E@=\352\315\341\274\222c$<\241OA=\036K\354\274T\315\231<$\371\355\274\304U\340;J]\337\274*\006\243\274&\233P=% \332\274\330T5\274^\240\366;\273\024&=0\022\344\274\260A\336<g\271\376;\332\325\001\2756y\037\274\253y\227\274yY0;\002n\025=\352 \005=I\314\004\275\260\032\334;\023|G\275MA/\274\220\264N=:\010x\273N\370\177\274\222\246\257\274\313d!<lM\311<\307\367\230<\200\364k<\327\333\267\274\305\266\253<\037U\246\274\202S\032\274\326`\373<\177\331\342\274]9:=<\3465=z`\006\274B\311\202<\237C\231\274\375\270V\274\224f\301<\256\200\376;d_\342\2744\306I\275\302\232W=hOL\275\035\207\035\274\222\r\347\274sD\273\272\345\332\250<q\250\177<c#\252\274^\310\255<+\3620\274\341\340J\274K\306\347\274\032\263U\273a\373\r=1\2428\275\n\023\332<bV\215\274+\326\302\274\342S\035=<Y\237<\362Ne8\246g\217\274l\330\3618\276=\244\274L E\275;\273\224<\346\2131\274\024(\357;\003x\232<\315\311\252\274\263\361\254<\303\363\000\275:E \274\0268I\275?\'I\275\006\321\027=\177\257.=}K\253<\030\314\033\273\217\202\243;\237\225\013=f)U<g\364\023\2756wj<M\217\314<>H1\274\231O\271<\366H\214\274\006\340\302\274\020|\317\274RJ[=]\016\030\273\245\262\332\271\250\013\034<$A=<i#\304<Bb(=\370\306\362<\330\225\213<\026\321J<\314i4=\304\264[\275/\314\335\274H\251}\273,\205\252\274\250\346>=\223\244\"\275\025\374*<5\315<<\332\277\233<r\322K\275`\236:=\273\302b<\256m\016\275\320\256\202\274\365\342\006\275\010\3313=#\366\221<\243\301o;\374-1\274\303oQ=\376\205M\275M3\221\273\200\242>=\273\3474\275\2206\323:w\006z\274},\032\275%\334F\275n\377\321<ex_\274\233\242\014<Sn&=\204/\273<\246\256\026=N\270\032;\030l\261\274$\324\343\2742\273\"\275\343\032\232\273\t{K= \021N=:\023\n=\0028\306\274\250\277\317<\366\212S=d\005O=\350\270\021\275\250\3540\275\350\212\002=\262h\025\272\300v#\275\263Z\304<\320n\025\274\213\265(<|\313B=\007\327?=l<\322<[\027-\275]\214Z<\302A>\274\n)\214\274\006\252\212<\217\216\303\274I\021\336<$|\262<\022L\354\273S0\331\274g\315\r=\023%\223\272\352\344M\275\354\267\206\274\206\323B\272\031\025\324<\001_E<*{\307<QH\324<\037VQ=\n\240\003\275\263\344\177<\230\223V=\265\177\021;\213g\362\274\203\216\312<\206\022\346<m\337\247<l9\231\274\241\360\377\274\300\343\';\204\324\3669\254Z5\272\223|}<\266h#\275p<L\275\341H\214\274\362\023\014<\032\302%=\230\310n;\212 *=4\343k<\247{T\275+\212-\275\036\255[=\255W\026\275\377\205\177<\t\360\206\274\374\205\231<\204\317E\2756\327\220\274i\277\243<\270\'\\\275\037\237(<\370\211\332\274\010\325\006\275b\373\022\274zZK\274\232\353?\275~\354[<\313\210\357<\320J\007\274\200\351d\273w4\365\274O(\016\2751\207\024\274\226\206\220<\217\253\r;CI\257\274\266\303r\274\370\252\022\274\177\305\005\275\301K@\275=\251N=2\275\241\274\323\264(\275Yu\325:i/e<v\350\017\275\240\302\327\274\376V=<\020I&=q\226\202\274\354H?=_^\357\274\347\354$=]\271)\274k\2677= \006o\274\016(9\274\024/a<\330\'\\=\373\243\306<\312\367=\275\030\222W=\000\241\343\274\310\210\314<B\344k<jd =\355\311\222<\226b\301\273x\220t8`\256\300<\006f\035=]\315<\274\320\377\255<\345\247\232<\354\230J=\024\';\275@\225\367<^a\363;\231\327\031\274\024\010\236\273\226\2117=K\320\361\274n\010\331\274F\252Y\275\372\217W\275\326\225\"\275B\352[<-V\032\275wx\265<:\177*\275\321\023+<\223\246C=YEB< \330:;\213\020`<\337\207\274\273\256\'\325\274\032\373\327<I\337>\275\347 !\275\330\236P=t\205G=\247zR\275\326\351 =^r\332\274\"\211+<N\3020\275\256bO=\203\026\024\274\203\3219=K\326Y<:\253\014\274\213\215\013\275\301\3211;\252\211u:\252\343\212\272M(E=\206`\356\273U>$\2742\316B=\241\277\t\274\267\007\207\274\206\251T\275r%;=\023\363$\275\300`E\275\235{m\274\257\261B\274\205\334J\275I\265G=(\260\021\275B\204\234;wk\023=\205T\267\274y\024*\275w-H<\340@\311\274`\254\253\274\331\003\255\273#u3=<\307b\274|\036\016=\351\250\257<\203\324\221\273\366$ \275\2433\022=\311\325\214<(V\255<\035\000\340\274\367\343\306<\214_>=T\265\027<\336\022\256<\223\0323=N\304\346<\016\212(=\'\374Z\275\301\264\007=\203U\222<\032HN\275\346\261\346\2745g\217\274h\362%=\261\013\333:v\206a<\210BV\275\361\247\305\274n\206\344\274\311\201M\275\207\224\366<\311!T\275]\022\031=\214\257,<\240.:\274\247\010\222\274\3263\376\274\242\207\222\274\221\002\361\274\003\215\216<G\302\302<)UE=\264O\034\275H\362Q=&\213\023\275\301\216\342;\0033\352<\207\272X=\252\"\003\2756\326\035<8\0029=LT<\274h\264,\275\305\005\033=\r\212\376\274\263\301I\274\237\212\252\273\300E\304\2729K:=\316fN<\215E\021\275\025(\261<.D\377\274\235[U=\2250\372\274h5&=\277\355\304\274QK\263\274\240\0302\275\024\323\370<\234\255\026\275\341\263U\275\307R\205\273\256##\275\2476$=\303(\244\272\202>\024<\203M\277\274\"!\003\275\376\245\000\275f\315S\275D\0345=4\205\354\27428\005<W\354\253\272\022\357\206<\312\3210<\370\2470\275\246\204H=\361)\333\274b\313\221:\355H\006\274Y\302I\275\314-\001=/\354 \274[t\271<\006}\321<\366A\'\275|Z4<F4.=\341\337z<\304\261\270\274\244\0236\274\242\374%=\371J\027\275\276y\006\2752\340\024< \024\001=\"\350\373\274\340\373\377<\272\275*\275\352]g;\2631\263\274\366V\307\273\023\005\254\274m\211\006=Ay\017=\366\331\037\274\277\235\023\275\245T\005\275\274+\324<f|\375\273\356\022L\275\224Dn;\320\007\030=\003\371\207\274\216\277X<\036\361%\274\227_\225<S\270\303\273#\266\373;XA\236<\311\326,=\206\2442=\2234\370\274z\240J=\354\260*\275\345\243\255\274So1=\207@\301\274\344\254C\2759k<\275\321\347!=\'\315\221<\367\351\033\275\2017\027\274q\243/<\251D\034\275=bR\275\277\205\222<\315\344\360<\251\342.:n\005\334\274\311\243\356<\216\t4\274k\300n\274c\247Y\274\303\001\337\273\256\335\036\275*B\353\274\t\254\305\274i\236I=<\277\230\272\222{\262;\316\277H<s\021\324:\356\254\016=\007)\037\275\212f\035\275\016Y(\274\253\311G=\362\\O=\307_y7\350\331\020\275\332y\017\275\352C\325\273\367\273O\275\361\027L\275)\243=<\340\3732=\000\032\366\273R/\266\273i\221\330\274/S\311<\225W\310<\321\0337=\257V\377:\252\374C\275\214\254;=\345\335\266<v\r2=\335\'\":l\362\030\274\211&\267<c\350\352;i\242\235\274\357\340\013\275\261Y\320\274\022\320Q;\022\2512<\343\216\262<S\225B=B\005\017\275\0378\344\272U\207\021\274\363p\303\273\n3\367\273jTF=\246\3538=\036\206\013<=\204\367<\'ug<\361\016\023\275\360\247\005=w\3443\275(\241\246<\337\337O\275\263X2\273xq,\275v]\222;\320nA=\344M\307\274\236\007 \275\201\237J=\244\275\262\274\036\364H:b\363\337;\033\021\006\274\312\"\025\274\254\266\031=QER=,\337\025=5?\017\2748\202@\275\376\263\347<1\014\303;\311\t\376\274\312\200\277<m}.\275\2432\277<\3420N=5U\341\272\326\333\203\274k\350$\275s\352C=\013\317W\275\t\226#:\002\332\n=r\251Z=\243yc\274\370\370\343\274\016\372\'\275\350\000==\207\307\2359\244ZP=\n\334N\275\315?\253\272\002\257\313<~w7=\360\316\334<c\365\377\274\220\247\323<e\366\007=\352q3=@X\022\275\302\263Q=T\232\005\275q\335\336\274J\3625\273\245\342\021\275[\002\341\274\rB?\275\352\227\337:\302\0105=\013\t\372\274\200\324\332\272\243}\204<N\\\"\2755\013I\275R\367\032\274\200O\337\273\252LK=y\036\346\274\205vQ\275\365\334\002;\021\266\021<\204\331K=C\352\365\273j;#\275J\343\016\275\t\262\376<Y\343\316<\325\020;=\310\301\002\275\242n\315<\273\246 =\213]\266\273+\272[\275]\033\201<\'6\336<aP\037\274\256A\241<\201\2315<\002P\017=\337;\244<\002\240\346;\336\376\317\274\211\365\020\275\362\365\'=Nb\353;\342\342\310<\214\330\022=\r\035F\275\325-/=]\361\215<Q~\237<5g\227<L\331M=&D\236</\243\n\274\021\247/=L\275\335\274\3713\236\27461\001\274\301*J\274\035\340\344\274\353\317\016=\254\310=\275W\020e\274(\222\207<\222X\274\273\371\210\263:\315\226I=\261\377#\275\262\3373=\016?-;-\232Q\275KsM<<\337\340\274y\306\354<B\231>\275\307\336-<\022\364B\275\235\354)\275\360\033,\274\346\210\253\273\362\2601=i\325O=\003\t\000\275WQn<&\002J=2H\037\275\006@\000=|\037\365\274\217K\002\275H\242p;zW!=\214\3676=\337m\204:&\"\307<\207\254\034<5\\%=\217\020e\2744\013\200\272\005^\026=\277N\226\274\004\2251\273\rA\353<86H\275\245\001<\275k\263t:\245\nK\274I\360\270\274\3550\330<\3270Y\275\303\371\031\275[\273O\275G\345\025\275\245C\317\273D9G\275%\267q:!\003\r=\261\377\204;\201-\334\273\330P\347\273\374\252Z\275\355\363\275\274\306\337\251<\335a=\275\371\337\026<\3647\233<DY\367;\004@D\274z\273!\275\370\221%\275\034\306\347\2745VW\275\327\007\336<Wr\017\275\371\256\332<\254\223\000\275\306\203\370<{\356\212\274;-\210<*\262\300<P\340\326\274Z\312\200\2744\230\270;\255a\360;\261\276-\275(/@\275K7k\274%\330\n<\253TL\275\025d\026\274\246\326\305\2745\253\n<\217yj<.k\305:j\240\217\274\"\245\270<b\tu\274:v\340<\0262\361;\251L\374\274\215v\266<\035&-=\177\312X<c|\346\274 \243\314<UqZ\275\217\232<=}\321\250:1\037!=\274\002?\274\356\177,=\335\315\003\275\361hU=\265\353\'=\352\340\014=\342n\205<[\207\006\275\214v\361<\367\340f\274\205*/\275\010\337v:\250\311Q\275\370\344B\275\202\257\025\274A\207\226<l\251F\275b\001\366:$\220;\275\342m\216<\031\3031\275n$\034=/.\344;\207\346\241\274\335\273:\275Q\305\001=<\235O\274\271\274\037\275\313\324O=n\246\271\274R\262\030\275\325\356\304\274]\006>=\231\311T\275\222\036\206\273\001\305Y\275\366\272\342\274\033\004=\273~f&\275h\264z\274\351\224\327<h\321D\274B4\206<\242f+=\r\213\353\274\223H\241\274\007\3004=/\034\006\275\343lR=*\213W\275\323\2576\274&&\223\274\2446e\273\3170\210\273\310\367\"=\027MR=\335\334!\275i\3710\274-oF=\363\2018\274\253eC\273g+\377<\206,\010=VV\026=K\260\033<Y\233\222<\314a\002\273FQ\020\275;/1=\315\0038<A\r0\2741LJ\275\021\006S\275\013x\360<\226\342\371\274\274t\247\274\267|\206\273\310\332A\274\271\237\267\274\300\014\024=\210\356\037\275S*\327<%\037\334<y\230\233;\377]+\275\037Z\301<V\227\221<\201\024\325<\340L\251<\\`\211\274\225\302A\275\273\"\017\275\352\227\240\274\347\361\213;o\217[=\271\02729\226\370u;\263\337j<%\326\325<\366\214\302\273\000\224\001\274\004o\365<\037\314L=sd;\274O`\266<^Tk\274\202\255\r\275\004\357\2119M\272\316<\212\223\017;\323>#\275\370\307R\275\321hX\274w\310\035\274!\212\307\273\206\251K=W\253,=@\270\266:\002\230\242\274Qu\273\273j^@\275\212es<KXI\275\020T\013=\207\214\226<<\303O\275\260\236\237\273\366\354W=Q\352\225<\327\022\362\273f\375];\013Y%=G*\3439\331\231\321\274M\341\004=b\010\232\274-\3729\274\r\367\320\274e\331W<U\3457\275 \347\225\2747\216x<#=\250\273Z_\004\274\364\3512\275\276\014L\274TDH=\023r\263<\372\311\010<7\225\001\275e`1\275\331\331\r=\230\206\305\274\007I\226\273\221[\206\274\243\217)=\031$V=\342\324\277\273\221\301\021=\246\023I\275\237\035\t\273\232e\360\273>f2<\241\035\"<\213\3668=k\275\017=4\352e<\200\034[\275M\325T\275\244,4=\365\271M\274g}\371\274\372\273\347<\304A\206<\377\261\275<\203\016]=\271\310\361<,\202\007\273\357\322\214\274\322\310?=\210`\256<+j\222;tp\253\274D\031Q=\r\236\250<F}\373<\350d\241<\355B\256\274\2661Y\275iG\234<+\303\237\274\236f;=\242\025\023<$\354!<b\331;\274ip\244<\274RE\275\325\013\026=\017\361\n=q+\222\274xQO=\256\351\027\275\315\006\247<D\217O\275\224\3028\274\201\2237\275\003|M\275-\0069=?~W\275\002A\250<+s\023\275\234\247\006<v\324\005:\263M\366<\344\335J=\245\335b<\327\026\352\274\275\363\000<\355\230\024=\214\227\017=Tl\213<\217\303\n<m\260\363<S\331\312<8G\023\275t\346D=b\305\224<q1&=\t\354\033\275D7\247<\007\333P\273\025\276*=\227\267L\275\243\274V;\270\230\005=\277g8<v\242=\275\342\013\032\275Q\205\266<\252XY\274\204\354\366\274\022\336\031<3\256?\275x\231\023=\007I\033=h\212\274<\000eZ\275>\327\265;\r\302.=\212]m\274\006PY=ly\306\274G\255\233\274\340.^\274\264\014G=\373T\331\274\250H\002\275p\370\r=\276(L=\206\323\3549\203\364\203;\202\2303\275Q\"\326\274\271\315\243<X\354\014\275\237\320\376\274\331t\327\274\361O\255\274\301/\230\274R\2350=\246\266\225<\305j<\275\356\242\244<\027(\027\274\241B\271<T\014\264\273\3174E=\24114;\021\327\021=}\265;\275~K\364<Em/\275\372/\303<\331r\216\27471!=Z\254V=\026aG\275\277\367n\274ko\006\275y\0264\275\026aJ\275\035[E\275\033\300<\275v\330\000\274\231v,\275\365\257\263;\215\230W=\306\362>\2753\322M=jfr\274K%:\274\243\376*\275\354\250\000\275b\261E\275\025\033M=\362\332\\=\205F\035\275\311\267F\275ent\273\365\244(\275-\204\277<\327\004x\274\206\352\210\274{\312[;\223\334R\275\233\005\236:\211\004O=\210h\311<\255L\366\274n\375\035\275\376Y*=N\270Q=6\371@\2751\237w;\232,\037\274\310\324H\274\3656\207<\357\341\211<\252\226X\274Nm\333<=W&\274\177>\355\274s\355@\274\344\270\033<9\265m:,\343J=\006!\307\274W\361\361<\347\342C=\003\330\250\274\316\0376\275\211\355X\275\014\201|;\023n!=D\257(=\351\000Q\275\352P\025=\'\217\003=C\246\210\274\352\240\'=\001\317\235<n\262\365<Q\016\202<\327\324\322\274a+\205\274\337gI\275+\217\005<\211\326X=H-\204<0&\024=\007\365_\274\355\306\303<3D\361:\205\237\327\2731\342\001\275\332i\010=\";3=p \230<\033\273\237<\013\372$=\003\245\n=\201X\r\275\246\377\004\275\021\336X\275\255\207\032\275\035t\236\274\246\313V\275L\246\345\274>\361(=\033\024K=\332!\t=\023\021I\275jU\367:\032\271\342\274B\266\312<\335\371)=\247\304\311\274m\223\003=\345/\023=\302\3719\274\253\371.\274V\201\021;\037)\005\275\232\223E\275\256t\243;\241\003\031\274\231$\253\274l)\224\274.\3531<}k/\275\323M\n\275\254\271\224<\273\257\363\274(Z\353\274\257e\223\274\006\365\247\273Q\304\010=\356\267\331<L\315\305<\213\220L\2759\240\t\275%\026j<\244\351!\275{\250\222\274\201\377\024\273y\t\331\273\013\021\013<\334\214V\275\005J\346\271\244V\244\2749+:\275\240=\n\274\244\303(\275\035\335.=\222\246Z=|ur\274\036\030!<$\221\000=\\mK=\220\257\261<\027\300$=oP\226<K\201\317<\254\262\371\274\325\373\307\274\251\023\006=\330\'\2439\207\343\301\274\337\270,\273\374\034\224<tL\\=,\340\352\273sZ\\\275-*\272\273\2473\336<\303\374\267\273x\250\017=%@\365\274g\206\026\274\317\365v\273\302\336\360\274\374\003\352<3\1774\275\261\\\271<5\2565=\366\3367=\240\304Y=\375[T\275\273\\:\275\031;\341<(\357H\275{\242\007\275t\344\357\274\215\226D=p0 <\3434E=\365\'(\275\3036\001=/\245:=\343\350\321\274U@\320<\251\255\002\275\004\'\346\273c*\305\274\266z1\275\313\277Q\275\354:@\274\332\207\327\274?HQ\275\234\245F=:5U\275\210\354\211<\323\315\300<v^e\274\022\013\364::\251N\275\">7\275SD9\275\240\241\343<\357\014X=\307G\243<\3467\377<\251\207\002<l\233\343;\\@Y=\201\005S\275\3174\n\275\325\222 \275\314\025\325\274X\370\340;\320F\304\274\276\0045=\220!\206\273uw8\275\272>\323\273\245\270;\275\310\243B=n\316J\275|\304v<xM2\275kt\204\274\303\272P\275l6Z\275\0167:=\332%\004\275\023\336\233\273\322\202\315\274#\3138=7\r\332<x$\022=\234\333 \275\n\325Q\275\025wX=~\274!\275nS\016=q\022I=\324\000.\275[\314=\275D\222\254\274 \254>=\217{C=(\n?\2740A:\274\363\224 \275\344\206\231\274oOG\275\312?\024\275\307\031\200\273fN\241\274\010\361\030<>\204\037\275ZI#\275\262n#\273\301\361\216<\342:U=\031\332B\274hlH\275\214\232\313<\377/\347\274[\020>\275-_\333<\\\256\372\273\345yQ=\204\212X=J\364\236\274\375\330\214<JY\004\275\354\020\365\274K\211g\274\350Xz;\373\270\020<Z\2163\275K\025\255\273\301hE\275\273\031L\275\354\375\014=G\363-=\231}\247\273\373\273\352:\252\323\226;\320 \006\275\224e\252\274\211\316!=\336\025\035\275\245\t\346\274\232T\310<E\314\364<\021.7=\266\344I\275\017\233\034\2758a7\275r\236E\275\356B<\275\274\003=<6\376\375<\211\014\377\273k?5\275S\345:\275\325\017\240\274\366\210\320<\t]\255\274$P\002=\2550N=\260\331\264;\241\270\370<\344\223\210\274\351\266D<;D\254<\271\246\027=\365\314\214\274q\\\202\274H\360\325\274i\324\345<Sl\352\274\341\216\266<?\226\364\274\260\340\364\274\327\260\027=\303wJ<oo\036\275;\271=\275!\307/\275c3\021<\307\222c\2740\365\253\274B\311|\273\t\211#\275\337\276#\274o\264\244\272\261\212\227\274~\024\222;+\374\001\275\312\177\371\274\346Sz<\017\2420\275Fe\205\274x7\313\274\377J\240\274\333\027;=\3631!;\202\001\017\275\227\341)\275\3654\207\273\370\231\332:\n5-<l\320\260\274\315u\013<2\001T=\231?\014=\260\002H=\316\244#\275\333\265\001=\213\270\324\274\336\032O\275(\207\027\2752\\\302<d\372 \270h\252\272<\213g,=\3243$\275\222\244\261<]\027\365<\217\324N\275d\346@\274\307\343\252<\210\0243\275(\320\030=q\347\331\274t \034=\316\343V\275E\321\"=\261\023\232\274\341\356\022=\264\201\004=\022d\020\275\177\272\025=#^\257\274/\037>=QLY=\010BK=\337Y\207:\257#-\275\034\335\026<\220\007\r=e\236\t=\217\325,<\277\021\r\275\265\34358\340\007H\275\353;\237\273e\006\301\274`G\020\275L\250\323\274\356y\007\273D|H\274\243\300|\272f\340\351\274r\253\241;,\353:\274\374d\\\275r\306\\\275|9\233<,\363E;\307\237\020<\213\255)=\274C\230\273XtE\2754\3034\275\023\001\366<\200\352G\275\366\275\351\274\317\344\'\274[C\240<\347\316\220\2748\007\020=\240b0\275m\233\307<`4\244<\272\226w:K\353\301;\322\325N\275\022\305\244<\245(\216<\2264@\273\255,\375<\373\177%<\344\020\035<<\315!=lK$\274\242\261\252\273\253\023!\275\211\300\026=\35465<\2015\022\275\213\244\375\274\360w\350\274v\016\026\275\250\364\025\275G\362\360:Zz\207\274\352b!==\207\244\274\310\373\356\267\363\201%=z\260*\275T\335\030=/hM=>\255\250\274v2\277;I\325\200<B/\\\275\263\353\003\275\212\025\327\274\334\2552\275\024\033\036\275\222M\333<t\265G=\270\023\352<;\210\007=8\030\253<\210\346F\275\345I:\275j\265\024\274\t\326?\275\230[+=<Q\232<\265T\034= dv<\344qD=S\337\t=S\352\251<\225\004R=N\314r;\3705\242\274\013\254\205<[\304\335<\316\272\023\273\202H\367<\375\267\027\275\240\241\037=Ou&=\262\335W\275\300|;\275\305\023\007\275\213x\343<\233)\343;G\325\021\275D\254\275\274P^9=2\214\372\274\240\355A<c\033\032=\276\354v<\027\243M:\245\204d<\221\016\006=\031\255==\245?\'=\251q\356;\206\377\374;\014\274\351\274\n\257\227\274\236\317/\274\017\377O\271\006\300J\275\204\r\313<`\364\254\274\270\254,\275\344\302\014=\350\3250\275U\2131;\014>.\275\004#\300\273\201%\312<\204\274\371\274~\330]<Q\000\232\2742\244,=\363\025Y=O\031*=\365\3237<\232\301*\275n\'\236\273Sv\310<\322y\251\274\326K4=\372\024K=\374R\343\273\251\276\213:\261\265\205<\357!O\275\253K)=W\260\374\2744A\262:\210\203W\275m\351\035;\371\221\023\275=\360\342\274\256dE\275\346\322\013=\031\267\332\273\231b+=-\t\377\274\264M\022=\262\361\356\274\003\031\230;\344\373\265<\256\376+\275oW\233\274\025\251\316<`\323\'=\304\200\021<?A\001\275\033\013\365\274\3566\315<#\0130;/\023\035=6+\"\274\036\223/=\000o*<\r\234\356<+\320/\275\347\303\216\2740\202$=\000\021\000\275a\300A<\345\204\347\274\351@#\275\32334=\007\210T=\317\367\225\273\3427\030\275\250\342=\275R\265\n\274\t-X\275\245\235\027<z?/\275\303I\363<\221\224\335<\345\366Q\275\332\\\343:D8\303;\324\016\375\274\025\335H=\350\211\374;\3024\364\274\005D \275\r\304\210\2744\017F\275\336\n\023\274v\355v\272\372!\020=\357|\227\274\223\036\031\275\220Q \275\275\321\005=\252\037\345\273L\266\212<}0\017\275\373z2=\216\341\252\273\372\307\000\275\344\177B=\302\341\006<}W\276\274Z\371\332<6]\n\275\276\214\025\274\324\303\023\275\022\'\353\274\276\361x;b\330p<\010_W<0`[=\327m+\275\303Y\3619\225F.\275vj:=r\347\210;i\374*<\r\340<=\023\252\020\274\037\276\233\274\260\211\220\274I\266M\275\032\302,\273\010\365w;\272\355\016\275rPV<\000\342\346<]\347\301\274D\2019<\026fK\275\3549\260\274*\320\251<e\246\341\274\321q\034\275\"*0=\243\272\025<x~\341\274G\027\032\275\210v\005=\023\255.=0e\002\275\'\274\013=2X\270\2742\'\342\274\374NL\274b\223y<\221\323\005\275\310+\334<\224\005\032\272\261.\'\275\366U?\275\340\324.\275\201B\374\274\307b1=\032\204\000\275\331\264\331<\224\235\031=\230\024-=\327(\004\275\016r\020=\235\350\027\275M\375k\273Ra\315;9<?= \261\034\275:\204\\=}\273\021=0\r\261<\032\332\007\275R\365!=\253F\346\274B\360\205<\335\207\027\274\224\030\244\274s\037\345\274\325\2351=t^\325<J\260\n\2755\004?\275w$+<\333\362\257\274{\241-\275\004\265\251<\270\226\004\275l\034\356\273\265\003O\275gI\355\274\255\361\022\275\036\2357=\035\331\272\274E%\315\274\257\274S\275\245\202\225\274C\214E\273\271\000d\274c\340A\275L\217\315\274kY\'\2755\337\367<\273%\315;\331\257\037=\322\377\326;\255\2560\272\2362\327<\324\346-=3\2517\275Z\361==zVq<h\224%\275\233\213\264\273>\201l:\r\324\246\274\373\0055=\235d,\275D\"\331;\006\377W<t\253\332\274\377\366\272\273FP\202<d0\200<C1\344<\364\211\337<R!\"\274\004\223:\275\3358\217<\301T\304<\251\007\033\275\363%\263\274O\330\001\275\037^>\275\350\321N=7\355.=i\227D\275\210T\013\275\321S\017;^\222\277\274.\235H\274\013\004r\273\244,\353;\264\022\017<\255\315-\275\'t:\275\242\335\221\274\241d9\275E\320\202\274gu\206\274`\335\017=E\003\376<\223{\242;^i\263\274cA\306<\007q\312<\234\354\251\274UF\276\274\265\260\366;\220M9\274M\270\010<\266\322\270<%\017i\274.2D=;G\017\275i8=<{\311==I\356\214\274\257P\226\274\'\224\'\275io\344\274\210{q\272\327\370\016=\270U\221:N\314\t=\024\023\275<c\314,=Yv]\274*\303\n\275\345CS=E\344.\2751\000=\275\240\320c;7\346\350<\260|M<\316<W<?\372J=\242\013\235\274\005~\026\275\334\320,<A\303-\274\021\363\342\274\306\313\301<\333\004C\275N\234\366<(\355#\274.<\237<B\205\223\274\026?\024\275c\004\026\275\303h\037\275\356\005[=\013DL\275\256\3065\275\000\272\035\275\020\277\021<<\213\320\273\223\345\002=\347\3471=\376E*=\313\310\024\275\232\221\026=?\240\"<\025Gu\274\303=7=\342?\374<\372h!\274\204i\032=\2651\020\275\375\260\000\275\240\2121=\035\014#\275)J\216\274\351\347\205<\201\242\215:\030\375*=\213q\207\274\222\036\341;\017\362X\274\373L\224<;\356U=TII=R\3633\274d;;\275\217O\253<\224\371\260\2745-A;\r\234\212\274\264\005\324;\343l\006=l\004\270<\207\266\232\273\001;M=M\225\343\274\025\367\324\274N8\"\275X\023X\275f\013=\275\272\036\212<\331\006\";U\207\n\275L\276\367<2r\371<\274\013\004\275w\351\'\273\326@\265<\007?\240\274t\347<\275@\013\312<\253\342u\274\030\324\370<:\347S=\344_D=\266\277\265<\0324;=\302\317\316<\004(\310\274\351\360\367<\206\274\024=\r\323\330\274\014:6\274\270\365T=\355\t:\275d2i\274\271\177*;\204\204\234\273\022\310a<o\204N\274\210\2015\275\224\013a\273\345o-\274\250Y\224\274\201\002\322<\357q\t\274\0216\346<\300w\361\274\261\355\032\273\031J\355;\'\221\317<g\267\214;X\207\001=\204n\323<\360\366\323\272(w\251\274\240A3:S\3555\275\313\242[\275\317)\257\274\234\267\241\274-a\205<\024\253\321<\303\345\376<\351\222o\274\303\026\367<Bv\"=\017u\n=\335\257\017=\030`\276<\026O5\275\331\326\013\275\215l\273<\230\026v\274\260\t\253<%.\010\275Qd\272\273\323\266Y=\242\032&\275B\001\017\275W\246Q\274\t\3017<V\325u\274GD\n=BA\345\274\373\242@=\336tM=\252\000\270<\316TP=P\244\202\274\256Gm<\033\347\276\274`>\006<\333\311\002<\242\374z\274\316\376\033\275\320\010N=\312\003\021\275\2371J;vq\024=J\265\312\274\0130\203\274\370\2315=\006TP;TQ\007=.\220\262\274\274a\016\275v\006\024\275\243M\315<\311]\224<\002S\007\274\335<;=\365\016\273\274\0074\003\275\233\371\002\274\347F\002\275Y\255=<\313k=\275W\251\267:k\332\224;\347\334\267<\346\367S=C\035\021\274\023\335$\275i\0357\275\345\216\026<\327R\t\274\347p\033\275b\335C\275\325rl\273\344s\237\274\t\355(\275#\334U=\256]F\275\265\347\021=\206\3706\275c\336S=\201\271\365<\243\013/\274\234;\231\274;\006%\274\210`@\275\3338\300\273!\033V=\374\232\006\275\205\374>=\217]$=J\033/\275\362\254\342\274\017\273}\274\215\221\017<+\333\306<2UX\275:@9\275\275\t\366\274\220\355%=\224\321\226<\333n8\275\300\017\021\274+\267\227\274w\260\026=\355\276\037<axZ==\370\232<\323%\276\274*\"/=\303\325 \275u\337\202;(R\002<\203;\351\274p&F<\242\346\332\274>=\007=+\"\250<\376\377v\274\343\265#\275\034\263\010\275\323\361+=A\007\030\274N\227\"=\024\254\277\274\317y\210\272\326<\006\275\364\272\342\274\346{Y=\237\230\026=\373\312\211\273\002\261\270<\000\260\324\274\250\036\351\274\240\305\212:\243m\306;\263t\026<)\264+\275\251\017\005=\320\345Z=z-\347<\003\364y:\036d\231\274\200\342\256;\030\357\271\274qW3\275km\355\273\257Q4=\021*=\275\031\220-=\034\324\252\274\262\316&=t\307\027=`\013O\2757/\215\271\226\341\220<)\223\321<#\220P=\364\001\346\273\306\336\254\274m#@\273\243r\033;\333\322\331<xgX\273\272\306>\274\251z\327;\353Y?\274V\225G=\364\362\212;\241\367\255\274,\363V\274\240\224\020=E`\330\274\303Z\267\274\177RI\275\0074\265<B!\312;\217\240q<\237\344\"\275\2642\304;\005\335\270\274j\2028<\217|\000\274\265\204(=<\3108\274\351\212\274<\203\212R\275\022\002\t<_\\\r=6\312\334<\325eD=\266K0=\327\325\354\274t\271,\275\317J\272<\357\0003<\314\201\275\274\330\024Q\275\234`\205\273\275\320>=\016v\206\273rO\022=\217#\224<\333\030\332\274\362\332\241\274\303g\334<\025O\306;i\215\314<g>C=\026 \031\274\310\261\034\275\351\225\333<\250\313\240;\357\354\305\274\005\341K\275\376\236<=\304y9;\203\231\375<&\301#\272\303v\323<]\274(=\245\377\215<}m\222<\354!\223<[\340G\275\242~\264<\205\335\023\275<\275C<\333\347\267\274\336Z(\275\361z\n<\003|\214<\267\024\370<\367\207q\273\3364\255\274\374i\240\274\017\375\312\274\263\272\033\275n\024\251<\3466*\2753\264\216\274\304\216w\274gY\021=\350d\022\274N\354 \274~\016\010=@\020m<4\341\t\274&!\004=\264\022D=}\233[\2754(\026\275\264\337\"\274\013s\232\274z;9=\177\252\007<\272MM\275\315\262\035\274\242\262\326\274]\341\273<\020\310:\275Q\324\216\274iK!=\305\274\304;\235G\003=<h\n=\327\361\246\274\033\2221\275\035\200B\273\246HV\274\014\344:=\372\2669<P.1\275xpE=\323\211[<\344.\232\274.\215O<\377\231I\275\365l\320<\344u\356<\333\352\257\274\355\362\221;YH\257\274X\372M\274{\377\013\275\'\334X=o\322o\274\340\331\360<\314\3530=\273\362\004<\202\373\277;q\301q<\217E8\2757\3300=U\343<=\323$\257<x:\277<N\242\003\274\375\0023\275_\032N<O\276\376;\0356\025\273\352r\254<\352o\325;\000\201\250\274DL\002\275\000\361&=`\232\205\274\304\005L=*\326==\034|A=N\303\322\2731\235\343\273i\205\213<]\000\216\273\273\257\335<\201\353(=\3576F\275c\2711=-\276\213<F\204Q<\253g\236\274\361\263v;\320\214\024\275\005-<=\247\336I\275T\344-<\001\361\021;\214\310\003=\334\213P=\274d-\273,\006\231;\300][\275\034\343\206\2749=4=\363\371\272<\214+\016;a\376\343\274\372&C\275\265\305.=[_2<\361\315\366\274\034j;\274\335\221\325;\345\211><\207\301\334\274#\344\227\274\255\244q<\330@\2517\203T\003=\314}\352\274\214\245><\307\240\351\274\031@\036\274\177\202\363\274\005\006\025=I\201\236\274\365\314d<-\014\004=*\026X\275(t\335<\0034\336\274_P\006=\036\033]\275\376\013\017\275\265\265\034=\362\254\316<\361m\025=\336\307\225\274\317\262\031\275s\362\251\274\325\263K\275\267\265\024\272\311\362S\275\211r\033\2750\316\204<\246\322\'\275\025Q\243<\356%\346<q\246J=\030\3562=\016\223-=a_\374\274\214\203I:\334\266\242\274|\262X=o\205\030=9oV\275T\226F=\275\313\232<\345c\324\273\211:g\274KA\222;\302mD\275kz\331<dS\033=\032\361(\275\276Y\253<\335\240\315\273R\207\031=\270;\332\271\205\337\306<\243\273N\275\266\250\006\274\300`==\221\244\036\275W\322\006<\020\252\\\275\361\343C\275\031\n\006=\267[\211\274\365\267T=\230\305\026\275}\230i\274\225h7=.GW\275)\321\217\274\271\nV\275\027#z\272\256<\354<A\223\027<\335w\317;\267\2310=z\333\206;(\215\013<v\263\005\275\220\264g\274xq;\275\204\304D\275\327\266\020=\351OF\275\022A\033\275D\311\345<\336\316O\274\311\354\364\274\377\321\374\273[\247?\275\341[\224\274B\264\305:\275\002\n\275\331D\003\275;\310?<\312\361?\275F\002\361<st<\274\305.\253\274wr~:\321]==\276\356\022\275\237@*:\306Q\030=S(\271\274{\367\214;\362P;=\034\003\014\275uD\\<\314\r\371\274\307\023@<\232w\243;\250\n)=\215l\311;\376j\222\273\334*\305<\025z\373;\016\357T=3\374\227<h\335\264\274pI\016<\010\252A<\371\317\023\275\025\2414=Km\224\273\214mq\274)\234Y\275\263\247.=\314\320.\275\265\321\310;\376\354\337\274\250\372\224\274B\301[\273\231\240\010=\'\355\244\274\227\201(\275gKH=\002\227\341\274\277\250\301<\275k\207:\224\344\354;\215\354\332:)\301>\273\330\344\361<x\206F\275ZSq\274\003\017==\323P\231\274|6\365<\020\344\025<\354\242\276;z\320%\275RRG\275]z\007=\352\315K\2756\0304\275W\003\202\274\221_0\275%v\303<a\320\037=\017\177J=L\n\230<\247\347$\274\027[\'=HY\004\275#\263\270\274\315\2427=$W\002\275P\272\262;\223&0\275kZ\325\274h\203[\275\010\022\221;\262\333M=\322\320\247;q\034\341<\33691\275\357 \213<\254\242\334<D\311=\275\030\236\217;\347\352\032=s\240\365<\243u\252<5\222>\274R\357\263<\240~v<\233\357\224\274\177]7\275\247\212.=8\204@=\2067L\275\002e\317:s\341\270\274Z ;=\242\273\036=\032\024\302<\033\005\264\274\2465\242\274(\326Q=\217\244\006=<\332\007\275\346\316G=\303\3041=)\3514<\024_\376\274q\375-\275\265\"K\275\020\000+\275\r\223$\275\353Ur<\2660Y\274Z\214;=\311QV\271s\340\252\272M\266\253\273\366xW<xK\032\2746b\006\275\021\273\260\274\310B \274\257v\337<`\213\203<\244\353\364\274\361\267\"=\204U\301\273Y\016\335<\001\2649\274\257XP\275\324\350G=\3013Y\275^o\261\273\364\363R=s\3041=n\206/=\340o\010\2756m=<\217\260\010\275aO\342\274\221\020Y</\3645<\343\303)=\226\214I=g\3653\275u\374\014\275l\245e<\341N(\275\240\254\336<\243\260\300\273>\235\035\275Ol\257<\326\0146=\026\000\350\274\242\346\010\275EE\033=\320\"N=\244\260>=t\336e<\'\227\005\275\322\315?\274\003\004\003=d\303\322;\240\305\216\274\357\030\357\274\220i=\272?\0367=mr$\275=\332.\274\226\253\346\273\271\327\256<\346\221<\275,\337\032=\301\313.=\022q@=~\tK\275g\024\226\274Y\346T\275\\\r\037\275dH\014=\363\205F\274\307[\033=n\204H=\361^\003=\323\351 =\261\326\222\274ikx;V1l\274\007\343\033=_\245\230<d\234=\274\263%0=\tC\336\273\311x+\275\276\332\251\274z\024<=m$?\275\215\206\255\274f9q\274QU#<\212\254O\275\207T\016\274\030\262\277\274\002*#\275\372\010O\275\253*.=k\310P\275\246\305i<\275n\020=\356s\343\274^.\262<>\275\032=\306\242S=\200C\350\274\266\"U\275\033\340W\275\362\357V\275\033\310\354<\r\256\036=\316\250\354\274\t\3215\275\245|\231\273\365\242\347\273\003\332\003\275\351\316\300:\370\314\355\274\177j\274<\2661\227<[\t]\275C\005[\275\335\227$\275\211\2020\275\026\324\327\274\261\212g\271Z\270m<\361\373\234\274\200\236\t=\356B\270;H\313.\273_\264*\275\372\r\002\2756\307\233\273\342#\332\274B\307f\274\357\255\2619\375\375\035=\020H$=-\372\261<F\246T=L\2716\2758\374\260<W\0015\275\261\261#=\330Q\341\274\322\367A=\243\371\330<|\2462=s\3231<\000\376\002\275\330\n9\273\376\336\272;\342[\000\2759\010\303<\025?L=\222<O;\334\360 =\271\300\233\274\267\325\006\275\203\312[\275o\260\327;\272,B=\220\020:={\273\246\274\246\227\346\273\355#B=\373K\026<a\324t<\271\257\237<\215\001[\275\212>\325\273\342\315T\275\024\334\023\275\027\204V<\261\004\202\273o\326X\274(\222~<\017\001\032\274\231!v\274q\351,=h\331\310<=k\227<(&\022=&\0224;\200\"o<\305KO<8\200\347\273\320\236\"<>\0149=\360i?=\262\177\227<\0264G\274im\351<\310\301\242<\362\222\\=nQ\022=Mo-=\305n\213:\356|L=L\004\036\275N\037Y=\217q\321\274R|\330\274\340CB\275>c\235<S\030\336\274\022\301P\275qr\341\274\233\375U= \005$=H#\362<\226\252\314\274\303\260><\213u\002= \237\375<\240O(=\212\314\305\272\023\221\021\275\216.\212\273(\031<\275v\306~\274\250b\330<_W!=\276\033\273<\362\254C\275Q\243\216\273+\236@=\347`\001=o=?\275F\271P\275\372=\363\274\207t\231\273\032Y7\275\232J==\010\027\224\273\366\235\303\274\225\315\017\275\261\337Z\275\253\357\035=\214^\022\275U\032!\2756\302\022\275\202\346\007=\367w\233\273\227$,=\340*i<X\323O=o\267\217<}\271\016\275\r\372\007\275\316\334L=|ZT\275\007\237Z=\\\373\375\274\213B7\275\200\331.=%\025m\274_\235\020<\222`+\275?\036\207\274@\2066=\343\225F\275\225\304\032\275\343\320\033\275x\024\023\275>5#=\317(\277\274o\022=\275\367\305\227\274\tOS\2743\232+\275\210r\304;\331\372\321;\203A\330;\230_\247<o\035O=Ri\251;\311|\002\273\277\357H=w\261\327<\024\212\206<6+\336\274\236\304\356\274\020\371W\275iC\364\274\354\241q\274\371}\n\274\260\256\306<&]F\275L\n =z\353\211<\316\342n;j\211(\274zJg\274H\372\n\275w\2253\274r\264\023=\177\353\305<\036\235D\274\266\001\375\274\235\245B\275\014\345r\274\260R\034\271\212\326\362\274o\203\025\275^\007%=\327d\344<\200\351\314\274W\007\276\274v\3124<\272DL=2\035<=\345rS\275\212\200\325\273J\377\211;>=\205<\202\205,\272\351\231\333\274u\371\270\274\354\342Q\272@6Q=\316\270\324<\035~]\274\205\372&=\n[\023\275X5k<\354\345\322<\023\366\034\275\001S\006=\026\016\024=\226\007\270<\273k*<\232d\374\273\317\267\232\273\320\205\352\274\323bu<\\\036\204\274\207\007\304<\247\'\230\274\265}\370\274RW\260<\255\243R<Z\024\352\2740G\241<\222\256V\275\004J\374\274Kjz:O\233\003\275\256\322Z\275\362&;\275&_\316\274\323\236O\274><7\274o\260\275\274)N\002=\205O\272\274\223\216\004\275\r\273\025\275\007iR\275`\263E\275\346\337:\275)[A\275\371\0067\275|&$\271t\031\321\274\354\200\016\275\340\365\031\275\344L1\275A\024/=\366\n\316<\261\261S\274\270a\227<>ik\274,\303L\275C\210\314\274W\256*=\311\277@\274oC\224;{\003\022<\213\2113\275\030V\212;\225\225\002=\337~\331\273\r\221M=\266\020\214<4z\276;\224\317Y\275\275_\031\274W\334T\275x{\263<\202\024Y<\002\300\367\274\030b\016\275\327\274\017\275h\0361=<b:=\202B\032\275\202`:=8(\340\272\010\315R=6L\017<\225\214s<\363N\303\273U\271*\274\371\375\211\274\273p\357<VIJ\274\355\206\\=\360\010\014\275L\3426=5$\017\275I\230\300\274>j\222:5PO\275*(\007\275\376I\350\274!\"!=H\337S=\252F\001\2741\215\317:\376wI=Q\253\323\273\230\235\365<\313y&<Pg =\021]U={J3=\270r\025=E\265*\2753\024]=\257\3031\275\216|\352\272\363\037\231\274\275\253\302\274\210Q\364:\304%\037=\325t\210<\334\030\020=\362\025W\274\254\320\363<\'\300m<\240zL=\270\177\023<\264\272\300<\007\221-\275\014v\346<\314zv\274\223+\317;\354\260\037\275\230<Q=F\206\264;x\t\214<\243\243\'\275\233*\2129\014\200\314<\236b\340\273\366,\276<\332e0=\206\333+\275\360SF=\375\211\313\274\316\360\003\275\303\231-=\204u:=\215\226T\274\033\016 <\335b3\274\204\237\374<\036\304\020\275\227\347<\274\022\024\003\275\354EI\275\3060\341<7\261\330<\367\314\335\273:\035\316\274\3153\344;!\363\014\275Z\004\007=M-\272\274\343\226\r\275v\222\311\273D\2155\275m\337\016\274\317(\026\275n I\275%\006\257\272\300\344+\275n\037N=\267\354%\275]v\036<\313\tX\273\226/q\273\027D\000\275\305\340\027\2731\030\354;\td\363\272I\253\203</h\035=\270\271A\274\255{\020\273\034\017h\274\372\247Y\275u\326\351\274\025\234\006=\277\322\305<9RQ\274\260\366\305<CZ\225;\312\004\305\273myB=D\231\225\273\276\316/\275bU/\274+\252\314<\016\215\340<^\225)\274mD\245\274_Q\002\275\235\232+=M\304r\273\351\275D\275\310\031\236<\n\223\031=.\227%=\361\311_<\200G!=\255\016:\275\234\024R=z\331\227\274\316\025D\275\341\373C=+A<\275\006\346\307\274\240h<\275\265\017U=}9\221\273u\005\336\272~\200\225<\230\207(=\355;\207\274\203_1=:\264\005=\\\375\004=\032\371T=\350\024B=P\020\240<\243d\226\273\034\256\227\274E\276\217<H\202\r=\006\272P\275`m\361<S\nz\274\313\234\361\274a_b\272P\326I=\353\365\346;\354\323\035\273\250\352$=\325KW=\345}\356\274\254C\000=X\315\262\274E\354\271\2746\016&=\265\354D\2732DC\275\002\0336\274\243\232\242<$\013\343<\361\225\004\275\324\366\214<\030\n\267<\257W\374<`\214&<\024Z\244\273\320\031\345\273d\361r\274\245\004\017=\177V+=\231\365/\274\3010:\275\0250\202\274\016\330n\274\235\0208=\034]\026=,\230\330<\335*\366\273}\202\373\274\211\204\325\274\320\346)=\000<A\275\375\020\005=\202\360\316<O\336\361\273\231\004\211\274\271\3471\275\244\363\037\274\355VT=\266\026\225\274\264\357\202;E\344e\274 \253\016=+\363\224\272\363\033\014\275i\263\306<\263\376,=\326\037&=L$\321;\350\266\'<\333\365\250\274\361(Q\2758\033\310<\352\257H\275,|\\\275\207[\035\274U\276z<\203\236X\275\256#\030<L\212\353;\254\313+=\t\372\361<\376\304\273<\367:\032\273R\010\020\274m\224p\274\236\253\223:\021\214\345\274q\324\373\274 X*=\274\332\323\2734\320\014<)\002\266<)b6\274a\252\270<d5\026\275\t\323\321<i\034\037;[98=\010\024\257<m}\331<}\t\235<#F\023\275\253\322\240\274\000\365*=Y\016G=L\n*\275\363&\330;a\205O= \221\213<{\357\324<\014?\320\274*}\316<4\313\024\275\261\220\016\275\374\321w\274NB\332<\364\357\242<\034\277\343<W\277\337<K\265\314\274i\301\217<\305\007=<\322\374\017<\224\251\257\274@vh;\374F8=\274\321H\273\376\260+=<\276\331<\356\252\202\274\224\327\016\275\247\275\270\274?P\r\274\276 \351\273\242\004\351<\2357\375<\211\314\035=[Q>\275g\221{\274\366\251\237<v&\202<\334\222\325\274/\203F=\010\237Z=K\362\210<\243/\273<\242w\314<Y\273r\274sq\311\274_\254\307<\230v\364\274\355\304S=4M\t\274\030\007\006\275\306\237\330\274kYD=\213\007\002<=\325]\272\031\334\033=\266\0160=\024\247\n=O\271I=\343\236\256\274\315\216\323\274\207\245\013\275\313r\013=\211]\242<E\235\342<\327\300\023\275\255\276R\275Z\026]\274 \341E=6s\343\273V\340\371<\231- <\222\262\301\274\034\032\020\274\211\234Q;\031\373\023\275\332a\344\273\204\025&\275\261\370\'\275?T\343<h\211L<{\001\345\274\367\0146\274C\233?\275\251:\365:Mj3\274\336g\272\271\274(\020\2759\013\354<D\322*\275\241\253\313<\010\203E=\265g\340\273D\327\246<\n\013\276\274\364:\377\273/ \'\275\t\033E\275\225&\\=\312\266\230\273O\230\274\274\277!Q\275!O\247<wt\266<\023!\330\274\200\0027\275s\273\252<\272/K=\025\235\377\2718\302\3378\221\250c<\010~\036=\332}U\275aH9\275H\366\004\275^\255\311<z\255*\275\207U\007=M\004\023=\277t\310<\007\037K<N\002/<\204\226\302<~\213T\274\345\364!<\201\025)=\256\361\333<\333\021f\273\345\002(=\200\t\t=\010\031J\274p\215/\275\316\032\n\275\013\264\005=\254\037\272<m\r\361\274\006\202\'=?\274\001=0\311-\275\013\350\034\273\317\227&\274\215\204\346;\025\237*\274\330+\311\273}7O\275\357\372\025==\025\220;bb\323\274Ff\230\274\024\\\207<\225\324+\273m\227O\274\251\002V<\n\201\301<\262\240\002=\262\300\366<\262n\336\274\261\247\037\274\033\323B\273\014-\035\275\363<\037\274\3149\376\274ji\371<\362\327\216<5\"4<\356\267C\275;\002?\275k\236\032=bs\016<\275\336H=\240\211\362<\312\\T\273\2019B\275\240\313\323<\207\251?\275Y\t\264<\254#\006<!i\335\273\231\205\'\275\340r\272<\267q;=\310\344\020\275D\347\263\274\214\341,<\224\301\300\273\351f`\273\202\256\226<[\323\021\274o|\'=\367\247\n\275Q\332\366\274\332\215\341;\336\277\361<KIV=\301\250\305<\233\1770=\275BS=\320\223V=zd\"\275\353\017\013=\224\021H=\364\340,<j%,\275\027\347\020=_6L\275\353c0=n\240d\274\365\214\255<s\177\007\275\360\357\346<,W\366<\016\337\253\274\324\364\327\274\177n\211\274\212w\357\274\210\345O<\371\211/\274\252\324>=ua\334\274\265A\371<\220\n\304\274\216\206>=\247\261\221<\270\223\356\274\363{\234<\362J\277;z0M\275\211\201\253\274x\351T=AO\263;%\354\006\275\320\036h<\274\310\250<}3k\273\377\255\004=\274#\251<\3455\024\274m\245\226\274,}\212\274u\204\333<f\324\376<\327\230\237;\010.\'\275\205*\223<c\027\235\274\360\2750=JJ\034\274\004\253\'=t\237\267\272v\377>=\210\205\274\274\'CD\275\3365\334\274(\305M=\037j;=p\270\247<\265\365\232<\372L\n\275{l\250;\355O\301;\3449&=\002p\325<\277\177\230;\007\220\037=\'\240\373\273\243\247\343<e\\\021\274\\\333P\275\014u\016\2743\223\231;\003cY=C\247M<k\232I\275c|\r\275\001\240[<QT\221<$\022\231:\205PM\275\024\365\014\275\371a\026<\345\347m<3\314Y\2754\266\032\275\230q\344;\262j(\275\371\"\230<\365\206\273;!\037\306\274\351\264\t\275\264\231\037\275\022\t\006\275\357G\000=T\263\010=\"\343\r\275\341y\006\274\254\3246=\010\354[\273\2556\344<\177\003\262;\240\220A=\010\312\312;\330\230\266;U+\316<\017\235\031<\027\371\r;\252\034\326\274Gj\351\274\276!\374\274r\003\302<\206\253\216;*\215\326<\371\347A=\200\337\243\274d\326f;\324\300b\273\255\321#=\366\261\224<,\350\023=\310\212)=\274R\262<\351\207\'\275\272Z\304<\032\225\014\275K\344W\274\276~x\274\305\350\213\274.\214\242<\006\243+\275E\364F<\342\274\327\274\004\365*\275\016bE\275\333NP=HX\362<b\303w\273o\2548= j2\275\243\3652=\256S\r\275\366\333H=\036\201\274<\351\004\035\275\343i>\275\352qU\275\264!\275\274\362^\017=g\242\360<@u\030<\223ZK\273\322\177H\275\001#\207<\224\026N<\363\253\002\275\316\034\244;\336\241\224;\013\027\027=\332$\351;\232gM;\315)\244\274_\3149=\304\025\332<\344{B=\002.9\274\217P\212\274\277\003\010\2753\234{\274\221\004\010=!\327(<\257\2704=Lf\273:gKI=\315\250\023;~q\217<C\2049=\352\367?=\325[\017\275Q8.\275l\205N\275\037\341=\275\247\306\326<\022*\276\274\006\220P\274RJv\274\312,\372<\377\004A\275@\001\376\274\313\264V\275,\360D\275\302\207,\275\234\021\315\272\322\303\216;SA]<\376\347$\274\250\302\330\274\2376\003\275\005\366\241<\316K\013\275Q\274\303\272\301\203\"=\372\360/\275\010\r\367<\"\226\357\274o\317\212<\300\245K=\321u\033\274I\032v\274?-\357<\306\032\r\273\025\210)=\023\377\031\275\207\322+=\212\316L=\023\351\274<u/;=\254\007\336\272\357).\275x.U<\316%P\275\204\353(\275\006\277\337\273/$/\275\346\0313\272\274\237\010=\276\t\034<\014\240G=\225[@<\tpA=\006\037\010\275\322\375\n=v\244\010\2731O\017=+\223\245\274\235\273\025\275\364!.<\'\0162=\301u\332\274\340)Q\275\226L\211\274\345\036\324<U\361\007=\013r\210\272 \240\211\274\235\002\340\273\320b\226\274()\313\274 \311\257<e\375I\275\233\367\005\275\256cL<\234\213\027=\020\327\345<\033\347\025\275\264\366\016\275\360P\352</_\320:-^n<\224G\273\272\372f\260\274\323\245D<k\347\033=\210\333\037\275n8\222<\305\241\344\272\2706\315<\363\022\367<\230Y7=s}\344\272\301\2767\275q\354I\275-\230\237<W)\035\274\305\221\000\275\0356\354\274\371\331\331<#\341w<\0208\363\274\221\265\032\2750\224\305\273Fe\325\273}9\035=b\003\352\274nK\026\275C\331j9\363\266\202<\324[B=e\266q;M\313f<\367\342\216\274\333\254*\275\370\242\223\274\210\363!\275\314&\206\273Z\272\021=\034\377m\274\357g\032=\025\215B=\337n\252<7\006\r\275\307\236\210<0\024?\275\017\211\226\274\200\252\304<\307D\216<)\372\275<\254IY\275g\323\237\274\315>\213\274XL\316<\017\"\247<\\\220I=(\003\213<S\004F<Z \354\273\250\247\343\273_\347\237\274yB\227<\343w\021=\356\024\000\275\356\324\224\274\331\266]<\007\220|9\364\215!\275,\372Q\274\030$G\275\311`\235<\315\236\026\275\024\310,<\211\327P\274\261\0247=\3107D\275?\355\300<\332K\337\272(\250L\275>7\023\275\'P,=$j\3009\347Y\024=\317s\321<\374(S\275A&\020=%}>\2753\373<\275i\\R<\330\014(=R\316\021\275\013\362B=\376_\321\274\333\247V=\326\245\225;\204fP=\344\313:\274\243\204\240<\274\177~;\006\014\360<\206OR= *\350\274!&\t\275\260lR\275R\021\213<\312\331\000=\005\267H=Bw =q\323v<\275N*\275\313\333\225:X\374Q=\256\030B:\210\246\301\273\226Q\276\274\363\307V=_w1=\361\024\035\275z2\356<\r\032\302\273\333\215\220\273N\307\265\274\206\232\271<\373U\025\275g\342>=,\341@\275\004\3316\275\347\2055;\346-\021\275x\311y\274\201\362\260<\224\373@\275\266\251\371\274\030\261\341\274\307\'\243\274\314N*\275\373\277\214;\203\206V\274\371\014\321\272\275$\210\274L9\353\273}\270r\274\204\256\024\275-V\236<]P\356<U\354O=;\031f\2747P\367\274?V\246<\230(P=\316\333\000=\276\341\001\275\360\035L=\375\212\214\274\337\341\241\274\332\\h\272\016\215I\274\305V\342\274sq{;\024\rR\275Z\363\356\273s\266\003\273\266\234]<\203\357J\275\331>i\274\n\000\365\274\303]\005\275\251\211\021\275\034\334\351\273\346\"\301\274C\336\334<1n\223\2747\353\034<\"\310\002\275\347 I=;\233:=\337\217V\275o\\}<\223]P=\331\316 =\017}\016<i\364\353\274\337\001\021=PP\276<\246XP\275N\237M\275\204\367\230\274\355\0139=\255C\214<\320\217\025;\212\2729\275\224\321H\2759\262\235<\374&[<\365\006\010\275\205\345\025=\252=\'\272\t\021 \274\026\034\276:>G2<a}\377\274\014\177f\274\373\026\035==\251N<\027\260.\275\007\266\005\275\316\262\312\274mw?\274\367&Y=>\207-\275\204U\247<\025\240\325\273\311\\\335\274\032\335!\275A2\345\274\366\211c\274\215\213\021\274\256\226,\275D\211\006=I\241\255\2739M/\275\2449\006=t\254\320<\310\026E\274\300{\025=wQP\275\233\337\266<\276\342\210<!W\352\274\207\252\222\274U\036H\275\326\255\341\274\312\231\260\274IOb\274uy\021\275A\256\025=\357G\014\274\353?\030\275\002\205\\<q\203\017=\312\000\342<\225\255@=\265\375\026=K\354U=\277\340H=\265\"\032=\021\316R\274$\341\355\274Q\241S=\014TG\271\204\346O<\025\"\201\274\267\225\262\274\236\370J\275Q2D\2752\t7\275\246HK=q#;=!=H<>{<<]PI\274q\215\n=\3127\233<H\324\346\274a\366\000\275\377A\001\275\027./\275\333\0352=\0020m\273\rpN=\030\007\306\274\351\223\203\274\251\207\033\275~\321\003=V-\036=\376\202\364<\023\305%=5\2712<Q\377\260<j\337\246<\242Q\027\274eMP\275}\234\325;\306@\304\274\2762V\272\337\n\347\274 \245\310<L7\375<\237\316%\275h\030\260\274\215>\002=6u5<\264b\337\274M\255\257\274\\T7=\317\310)\275\210\204u;\242\1774=\345\241*=\217\262F=&R\r\275\017\030\234;\345\020\n\275E\237\320<5\002\020\275\202;\255\274\006y\276<qU\027\275Z\3777=_\261D<\354q\021=\256\253\013\275\263~,=\233\370C\275\223\314!\274u\023Y=\252\304\317<t\341\000\275\355\2405\2755\212D\275 [l;p\357\t=\350a\027\275\r*\2779\021\014Q<\257\003\355\274\032\223\016=\254M\215<\242\276(\274\377\371\t=\004\003Q\275\303\325\206\274,\362\010\275\254\021l\274\220\236t\274\035\0048\275\353Y\332\274\337e\256<\263\3434=+\251\245\274x\026<\275\377\245\213<\362;\274\273\000\211\263<x\2376=O74<\023\3567<\242kD\275\310\003\200\270c\326\'\275cH\026\275\332\275\034\275o\372H\275=\317\276;O\376R=<\006U=\360<\025\274AIA=\241\331\035;*\366\301<\343}\227<\t\014(=|\331\016\275\301\313\020\275yg\213\274`F)=T\321\034=\271\032\n=g~\007\275L\314L\274\243\032\312<\022I+<\346c\310<E\010\\\275\\/\314<\r\031\353\2741|_\274\021\014M:\236Lv;\037m\320\274\231\224\335<;Y$\274\244\267C;.)$\274\341\350n\274\027\213\364\273\004\027\033\275\035\207N\2759\242\352\274\232\352\240\273\376\007Q=\340s\346\273\023W\035\273\260\232\030\275\231\234\\\275\032\242\201\274\226pL\274B\202\353<\225\270\026=\210W^\274\255\364\305\274\315\267\020<)|\037\275\014\t\267<\032\243\324<\207\261$<\252\365\356\273\207\"J=\007K#\275\317\240\263;\211\343F=\361o\010\275\252\357\360\271\274\263\350<$\357\367\274^\247\303\273\262\371\244\273B\346-:\210\312,\275}`6\275\212\215\004\275\270+\004=t\321\226\273\262bE=\243\201\325\274D\350\342\274\263|4<\370\343\361\274\377U\030=\207\370\025;\372\343\010=\023A\t=FlU=\336\2133\275F\335\313\2746@\310\274p\207\007=A\245:=\253u\253\271T\373\033=\266\030\330\2745\016\263\274\300\306\022=(\304\217\274kuU\274\370\017\215<\214\030\222\274\313\215Z<\357\3174=\010\177\277;u\002\240<a\266\253<i\335C<\241\314\032=\026\366\177<\027%<=\253g\222\272\037\340J\275\017\020\024=\366\364Z=Z\330H\275\363\324E\275\2255\332;{\235W\275\320\360P=2\304U\272\272\253\241;N\026\210\274@`\t<\201Zo\274w\274\371\274\'\334\"=@g\312<\214!\010\272\204\237\r<\231Ph\274\367\245\201\274\214\320u<@\246\n\275\351)4={^\324<r\333\301\274\306}\026=\372\270\031<7g\320\274\243\013X\275\2774H\275\037e/=\304>\317\274\231#\005=\230\316\306<\304\375\025\275!\025\262\274\353r}<z\177\251\273\210\224\200\274\252\221J\275#\241\r=\355)\2069\207?\"=\210\222Y\275\333\376\356\274\000u\240\273p\314\n=`lK<\372\243+=wN\256<F\2756=+\202$\275\224m\223<g\265\r\275\026S\225\271\306\303\336\274\306\215\241<,<R=\277\017\265;\325]\301<\010\034\304<\25703=`\006\272<_\307\026\273\242\tS<\032\0324\275D\252N:hZ\020\274\251\220S<\000C\001=j\356\232;\321YD=\241\232\323\274At7\274\372\200\200\274z\205T\275\034`\333\274u4\236<\227L\316<\"\340\024\275\206P\331\274\2545\034=498=\332;\272\274b\'\003\274+\r%<\020\210V=\006w\004=\254\310C\275g)\230\2731\024\200<\341\3578=\204\337\322\274]\255K=L\362+\275\317XV<\327}\006\275\213\203\374\274\247\225<=7d\007;TV\246<\020\322O\275\371]z<\242\302\321;\006\022\363;L\254\023;yOp\274W.\032=\254\305T\275\337\033\264<\231\234.=\201\215\276\273$\345\266<\022\214)=\375\rV\275\'o=\273\r\023/\275(\243\261\274\3543\373\272\005t\r\274<\355!=\206\375+\274\224\177\271\274\247\206\367<\023@\032=n\363\270<\340&\177\274\320hP=\231\nG=\254@\013\275\370\3600=g\027\340<\237\307\222:ki\367:\325El\274\200K\013=l\352#\275jh/;\346\345\342\274\305\226\336<X\332\312\274\320\026-=;\2036\272\007(5\274W\211\201\274qUR=\023f\010;\242\367\005\275\017jR=,\246\374<\350f\200\274\267up;\037\327\001:\341\246\250\273T\370\034\273F\221f\274\n\377G=-\350\001\275\371sM\275\010\243E;!\021F\275\357r6\275:\344\t=\317\202\343<\017\370\013=\225t\354<WV\325\274\nu%=\344\232S=\202\360F\2754\026@<.JO\275\234\354R\275j\374e\273!>-\275\274x\320< `@=\373\231%\275\321\332\244<b72\275-\361\256<\0062\024<R2\306<\024P4\274\022\034.\275\300F\344\274\247\262?\275\221\351Q<\320w\322<l\251\237\274i\013O\275\334z\337\274\274\253;\275O\364\016\274\002^(\275\301~D\274r\001I\275\235\245%\274\035\3503\275\275\014\273<\276\367W=Y\320\022\275\311\261\036=\033G\323\274\235v\326\272\301\025\017\275>{\315\274~\0008<I\365\230\274Z\346\336\2749\332G=\303\355G\275+SO=K(9\275O\3101\275\305\366\'\275Wg\020=\313\021\341\274\251\335\202\274-\375 \275\322\226\007=\207\023\254\273\'\214\033\275\021_5= )\365\274T\034\006=\373l\266<*{\364\274!z\376<\000\242\307<b\025D\275s?\255\274\305P@;\014\300X\274\226\253J=\210}\036<\037|.=*\322\317<\004\245\021\275\215\0108=\277M\322<\322%\200\273\017\342K\275U\"\023\275\247u\023=.\315#;\250\264&=\340W\033=3<m<~9E=@\202\370<U2L\275u\033\246<\336GO=\211\264\223;\340\237f\273;\3517=\315\255\"=)\263(=\204\244E\274\265\341L<\250\007\020=\335\213\302\274Z\270\236<\327\250<\274\331\305\352\274\037\361\216\274Vl\365;oQ\245<\213\341$=\303`P=U]\001=\265\344\243\274\330\004\201:\253(\320\274\352.\342\274T\211\246<\201\377\205<<U\026\274\347\346\000\275\340`\277\273oB1<\316\332J<\302\311\302\274j\244\';\314^g\274A_\"\275\216S|\274\314B\256\273!a\237:t\265\230\274df*\275_\n\006=\264O\323\273\225CX\274\264U\302\274\363h6\275\270FF\275\3515F\275\314{[\275\211\262\227\274\342\346\236<F*X\275\375k\242<$:6\275~v\244<\310\215-=~<\241\2748\3721\275\010\322O=\344\024\216<m\335~<\204\0337\275\263\211\273\274\2730\005\275=\013\276\271\034k\014\274>4y<\370\003E\275\025Y\254<\r:\311\274{\016>;\257\334\360\273UJf\272%\204\344<\277\3244=Y\263\212<\270\035\021=\327\337\254\274(\320\350<\375\340O\275\265r>\275\035\313\366\274\217=\t=B\216!=\323\353%<\022\271C\275\212\236b<\372\0038=:\030\314\274\357Z\202<\371\247\000=$\366\347\274M{\370\274^D8\275\322\261\313\274\310\206;\275\340\360\311<\325YJ\274\350\264\324\274\311\224\035\275\315\311S\274\017\005a\274M\372\n\274\243jk\2738\206\316\274\352;D=\007I\033=s\221G\275T}+\275\366\227\224<h*X=\257\023\014\272\331\2527=\266\320\355<Y4<\274{\337\343;g3\360<\362\372\347<\344\250\000=R\004\335\273p\"\251\273\304\031==i\313\360\272\341YI\273\006k\312;\'8\023\275\036\241A=\025IH;b\3016\275Y\t\220\274\2549$<d`\241<X\214\214\274\033\233\031\275 \365\242\273\256\272I=\232YP\275\277>t\274\315\374\261\274\2148Z\275\330\035J<\320\002\235<\'\315Q\275\375\271\201\274\336\233\356<\357w2\275BsR\274\217\313C\275\247\"=\275\223\323<\275\230\367\251\274\352\230Y\275\206\337\214\274\365#\350\273g\034\241<$\001\022\2737x&<V\330[<\257\210\322<\221\214\005\275?k\027\274\310\355n;?\236\246\274\370\205@\275VbB=\337\257\335<\365\336\334<\372\235\374\273\247\326\362<\211\3725=v4\023=\277\373A\275W(V\275\224\324H\274\323:k<%\365(\273\355:>=q\377+\275\232\024\333\2746\024\375<k\220\343;\305\342\177<6\374\222\274\000\317C=\017\207H\275\263\332\342<\373Xp\272a\364\231:\033g\031\275r\235*=\243\003\311:\256\312\000=\244\3269\275X-\372<\030\372\025=\242\266\t\275\272\264\372\273MS\264\274\371?h\274\354\010\n=\372nG\274\264\3240=\266\023\254\274N!\016=\336\000\376<\265\017G=l\010\347\274K\336\276\273\t3\005;\271\0007\275\356\253\010=\005\341\234;^\n\033\275+\231:=\374\027\276\273m\"+=\233\021+=\207c\366<\356\232\212\274B\204\340<\226`\025\274\362\021u\274/{9:\224 \352<\235l0\275s\365W\275\372\314\014=*\305!=g\363\226<#\221\306\274\203\321\013=\373@I=\274yL\275\006)\203\274\227\373U=U*\032\275\243i\314\274k\236\010=n\313\000=\301\213\204\274\210w6=(\017 =\236\217\357\274\375\262;=:\375\016\275\360U\2709\312*\030\275E!\205\273\275/\006=\217 \320;Gc\246<=\256\001=\000\261\304\273\375p\376\274\321\nR=\302(\202\274\202\364\032\275ar.\273\310\2628=M\251\271;/\353\214<GM\334<a\0323\275\367P)\275\276\333\230<\273|L\275\244p\331\274\251\236<;\031B>=E5\207\274,Z\r\275&}\256\274\353\344\007\275W\235\025;\r\335;\275*P\275<\225\177\033\275\255\337\005<p4\321\274\215\220\301;>Gs\274-\017-=l\013\237<\377\376==hPJ=\275\345\025\275wD\346\274\025\361\230\274\3771\341<\373\217\343\274\260\026@=\036\260\362\274\211g\273\273A\351\337<FC\\=\256\300\364<\367p(=\245\251N;\232\037A=\254\230\025=\222\307\235\273h\204R\275\216\210\317<\357\252>=\232G8\275\355o6=\364\246\267<\246\207Q=\365\311;\274\272\371\017<\217r\374\274\025To\2747\201\036\274dp\003\275\306\355\014=\231}\007\275Z\322\020=\256\233\242<$\325\313<F%8<{|\027:\275\022\300<\035\273:;9\3379=\210*\375<]\267E;\345\016:=ex\034<B9\r:@\363\350\274gV)\275\314\327\021=\321\352 \275:\366\331<\270\241-;\010\351&\275D\217\004\275\235\023>=\334\265e<>\004i;x\220\240\274$\375\371\274\036+1=o\234\264\274\340\370\273<\274=\217;\362\301\373\271riN\275\332\264\025=\212\256X\275\026\332\340\273\010\032B=\244*`\274\260Y\333\274?W\'\275\322\206d\273\031_\224\274O#\022<\203\276U=!h\345\274\354\354<\275\276\037\267<y\326\277\274\002{\331\274\202#>=\031qN=\036,\240<\250E\255<\253\304\226<P7\243\274I\271\200\274\273\340g;\275\013C=\234\207\257\274\013\027\236<w\010\375<:\323\n\275Po\342<\310/(\275\224Nj\274\270\264\213<\310\221+=}\304?\275\227\200\020\275&\204<<7\271i\273\211\212Q\275\204\3548\275\223\177\350\274\222\t\021\274\275\266.;\246.\'\2731\264\262\2747\246\002\275I\340\347\274\252\022L=\214\215\240\274\221\210\031<\276\315\032<\310\330)=\230\334\005\274lG_\274\210\255\302<\223\r\235<\326T\333\274\201\3077=R\202\360\274fX\030\275\2355\222<th\254<l\270\177\273\013n\'<x\"\245\273\'\2356\275vk\327<T\230\031<\307\306R\275\310e\006<e(\321\274\225\276\304\274X\230\205\274\253|\004\275[\326F=w\376M\275G\024\363<\303\n\003\275\322\346V\274\210[A==\004\3779\326\315\014\275\343\206\350<\3759d<\306I\217\274_\202\324;\205\336\211;[\"\331\274\335J*<\312\361\212\2745\357\374\274}M\000\275\033\2047=g\231K=\335P\007=\002\347\322<m\374P\2745=*<f\331N\273\276\235O\275\310\362>\275\3503\023\275\201\224\236\274N\345 =\373\002\345\274n9C=\233P\325\274\237\377h</\252)<\207\003\265\274\252\2644\275\244\233\244<\330\343\204\274Q\010\245<\211\333\231<Y\002a<u\267\250:k\2215=;\336\031\275\355\327\"\274):-\275\367b5\2751\003O\275\307\036:=Lv-\275^|\345<\027[\037\275]\367\021\274\351\231\025\275y\340D\274~Z\027\275Ekg;\263\003\325<+\260+=\360\312E=\243\213\032=\366y\001\275w\031\r\275\272\307\374<\0357\337\273\225/n<o(+\275\014p6\275\240M\353<\223\316<\275\340\340\327\274:\272-<ZL<=\225V?\275HA\023=\024\3049\274`\311[\275\321\177\310<\256@\003\273\202\313W\275\234\217\240\274\374\276\030=\363\271;\275=\335\031=\213>\037=\270K@\275\240\233\242\274\357N\244<8V\002\275\035\344\353\274\030\225\221<\245\242\035=\246\231\346\274\251\250\304\274\302\351s\274\037&\005=r\262\340<r\247\004<\312O\037\275z\324\037=\363\021[\275\033C\021=3\237L=\356\212\261\274\256\t\225<\322,\230\274\300i\024=gkp<zd\353\274\230\274\367;)>\256<V\360D\273\022\206\233\274\233\314Z\275\262\220Y=\003\377\220<\367\025\371<\372\266\200:s\260\315<\310[\271;\004\232\271;\333\230\214;\253\343\032=<m\235\274@u\000\275ER\022\275[`E=\257\306\353\274\031FP=\257\342\201\274\302\311\370;\337\253F=\264\235N<Lt\031\275\315\177\013\275\214A\306\274\302CU;o\204\260;\331\257+\274\\\240!=Fl7\275\017q0<`\340\246\274\220\343\r\275\200G\202<\326\356W\2750\013\346\274\020*\201<\311\270\206<x\312\314\274\021\207R\273\030\332-\274\221\300&\275\365p\035=\224n\253<0\003\341<\030\351\037;\037\276X\275ZM-=v\023\246\274s\344\240<\342\275\002=\335\022V\274\022>\325\274\302\372&=#J0<\346X\024=%\330\036\273\203\037)=X\240\031\275y\\\270<\253\234\251\274\226t\036=AQE=\344\"\206<\n/S=\021,t\274\302\020H\275\352s\343\273\271$\021\275h\331\346;\331-\240<\266\t\322\273~\315\320\274\327E\224<\320\022/=}\236\n\275t\370j\274Pp-<\033H\023\271\342\272s<\235\265\323<\270\343\334\274\226\275\307<\316\001\004\275H\365M==%\234:8\372\340<\366z\224<\255e:=\255h\333;\351\250Q<\255\377/\275ZW:\275\014\241;\275^\336\"\2755vW\275\212@\352:}.\222<\013z\211<4\343|;\342\2224=}]\201<\377I%=\023\264\320;Um\005=\243\342\245\272\276\013\016=\025\313\275\274\375O\031\275\364\356\025=\206\337F<\0251\212\274]wr<\033\305d\2748\242\371\274\223\023P<\351O\335<U\3600\274s\212\310<\224\323\246<\277\253\316\274\017\370\350<2O\016\275\247_\342\274\231\302\216\274\031\255\366<\273zm<~\331D\275c\347Y=\004N\206\274r\026\267\273\367\023\343\272\321T\014\272\257CH\2757bm\274\374\001\036\275_7\r=\235aU=I\025@\275|G\317\273DI\266\274\251\2679=\301\353\034\274\353\r\323<\370\247\236\274o\336\014\275\246-\206<QH\312<?2T\274\352\316\030\275\013\203\036=\330~\001:k\305\242<\301D\001\275\270q\345\274\306\262*\275\353\274\204\274Q0*=\201\331\211\274\364\341A\274r\364%\274\'\013:\275\002\224\240\273\220\307\003=\373\002D=\353X\213:\207V\272\274/\241S\275\370\371\233\274\301\372B\275k\356\032\275\233>:\275\343\220\023=\234UB\275+\352\201\274\336\210?=7\327\302<\301\347|\274\316\302e<\202\341\020\275)\030=;F\355O\275T\266M=\344\250u\274~\315\006\275\200J\036\274;\226\307<\033\274\221\274\315\344\013\2742NA\275\351A\324\274\324GU=_\264&\275v\333\201;\020\216U\275\370\315U<\232\2228\275@\013\005\275n\305\366<\325\370?=H\306\354<\032\206+<\240\364]\274c\254n\272_S#\275\211\242\032=\033e\\=\354\324\005=\253\213\020\275\373x\320<\323\201/\274\227v\\=\022\315\025\275\367\n\n=\267\323\367<3\302+=\245\235T=\352`F\275\360ri<\345\347\024=A\365\004\275\311\243M<\354\034\021\275K\036W\275\320\276(=t\001W<\2717\261;\274\207=\274Y\001\252:\374\243\004\275\342%\343;\364\374A=&\244\014\2758\304V\275yc\t=N\222\007=~\207\237;R\361\272<\342\307\000\275\323=\323\273!\214A:\020eq\274\211\315\334\273v\247S=~a\332<\243\'\004<%\005;\274S.\'=\351\342|:\254\035v\274\255\314U;a\303I=\354+\362<\240g\000=\'\307b<\355GU\275\265N\325\274\306\0038\275\237;+\273\002\350\220\274\212O#=\332\270\330<\227\3412\275\374\013\330<\027\250\214\271?\350\254<\255Y\027=Q\324\036\274 \2416\275\"e\'\274\374Q&\2756\335d<\001\257\000<nm\206<\347\3444=\023\334I=m\270\276;\261\023\024<\264{.=\361m#\275\212\3368=xO\027\275`hr;\022\036S=\221\232\034=\004\315\211<+\036\324\274\211\304\010=\022\2319<\236\362\306\274\030\350B=\007\023\240\274V\013G\275\267\026\250\274\335\213#\273\260c0\275\214\240%=\027\264\000=\227A[\274\321J1\275i\004\r\275\t=<<E\270Z=\000+%<P85\275Hk\243;\251\250\336<\256\324\034\275;\3351=\005\352\200<\367\345\300\272I\244v;@,\332\274\324\211\036\275\364\210\215\274\302\\J\275&7O<\320_\250\273\232\327:\275\271\312R\275?\300Y\274i6+\275`\345\303<\246\357\243\274d,G\275ZJ\230<\376\254\314\273\305\300\215\274D|\356<\320<$\274N \375\274D\020S=\220e\006=\2432^\274\356\2642\275\261i\023=a\010\305\274\200\324\364\274\005w\336\273\375\261C\275\206\033G\275W\245\324<\256G\265\274\227\367L\274\310\320\"\275\235\351\003\275\221y\336\273\312qW\275p`D=\326\235\000\275\030\215k<cr\037\275\031\304\004\275\334\303I=\032/X\275\333\353g\274\226\367\352\274\324\250\313<\3511v\273%\367)\275\332\263W<\200\306\016<+\321\275<Y\202\300:\362\230\354\274\276\304Z\275\222\307\271<\025{\223<\205\320U=\\\217>=b\274\027\275r]\234<\314+\034\275\320\211Z=\331\225z;\356M\257<D\016\000\275p+\n\2753\006I\275-\336\006=\266\216\n\275Y\024\014=\362-/\274\237\315\014=\315#F<\347\241A=,\241H\275\362\355\245\274V\306T\275\375$2\275\315\343}<\274\256!=\035\274\276\274\206\002\024=\342\200/\275\320TK=`\317g\274\273\000\016=\207\271\327<V\005\031=\213]\031=\251\336%\275\377\236\252\274\232\245\346\274\332%P<p\277B=\217}Q\275_i\026\275\375\215\037=\304\036\026=\324\222\316<\343\035\n\273\314\350R\274\302JQ=\352(C=\324\202R=_\230\t\275ML\350\274\026#\252\274\033\003\364\274Q\370H\275Q\265\037<\200\233!\274n\233\306;;\204\233\272\226\024\300;L\rX<B[\030\275l\251|\274v*0\275bWQ=\337\307\322\274\315-j\274\223w0\275F\305\013=\362#\203\274iz\030\275<\r\261<!\004\021\275\317\n\033=\036@?\275\361\302\202<\364\330J\275#\275\005\275\031K\272\274\334\344\335;SmQ=\240 E<\036.&\275{\306\210<\316S\324\274s>\247\273\204\020\331<EG@=\243\370\031=)-=\275w\231V\275\034\3643=c\311\025\273\336\022\262<\305K\002\274\243\200F\275\317\014\271\274A\370\007\275\225RJ=\210\013<\275]\220G\275\024G\n\275\014G\n\275\341\027\'\275B.\037=\276N7=\355\346\271\274\350\216-=\212\241\216<r\365m\274\364\354\220:\334\257\311\273\010\216\322\274\202\2109\275\200}\260<rI\366\274\271\240O=\3132==\206\350\262;e\376\020<r{\316<0\275\027<\027k\314<\355v\223<\223|\344\274\245!\020<SpZ=\205\304V=YX\213\274O\330\340<\333[\325\273\005\tr:O\\\324;\300\234P\275}\343\005=\302g\232<@\361)=\372\225\270<\021r-=n\365\007=\t\3238\272\362\367\356\274G\241\211\274z\003\302<\"R\236<\213\371\341\274-\274\214<\226w\341\274\366\367l<8\207\301<\024\037\214\274\023\243\272<\223s\020\275\242TY\275\225\327\034=!\241o<\347\345\306<5\223h\274\360X\246<\356\'-\273\022\333\254;\205\177\000;\237u\r\275\237\tF=\022!\363\274g\365S<\235\352\323\272\221h\261<DE\330\273\201\321\023=Z}j\274\312\253\337<\311\n\372<\3761\216<_\007R=SF\"\275\2259\343\274Z\351\365;lR;\274\013\303\274\274\362k\255<\243\331\214\274Q,~<\302\342\372\274\306\350\331<\353iX=%\\\262\272\366\367\010\274\372\206\031\273\0065(\273}y\331<\211k\'=\365\021\275\274^\312(<<\211\207\273\004\025\243<5\365\226\273?\266\317\274\030^&<\357V)\275\273W\016\2710\332V<\325\004Z\2757\342\260<\263z<\2752~J=,\357\372:\355\310\001=\376\3663\275\300\232\2108c3\003\275\014\023\263\273\36330\275)\323\246\274\277\223\315\274\177\005\320<\304^1=#\"\241<x\200\020=\307\250@<K\273\\\275DV9\275\206\312\372\274\315\324\232\274\305\232F<\'\340\016=\033\351Z=X\336\315\274\341\314r\273\177wH=\007\335L=\202\t\n=\'\376\016=\027o\353<-\\H=X\n\007\275\345\265\313\273\365\306g\274\024*p\273\211J8=Y(!\274L>\356;D\263\361;0\253\206\273\271<\306\273Mx<\274\240\330k;\331\306\\=\307\235\275<4\232\241\274l\\\246<jF;\275\345\244\337;E\270\260\274\355\265\206\274\204\274\332\274\237\2119=\377\323u<b\342\202\274\256\2317\275l\241+<\352.[=_\241\005=\002\237\274\274\376\333\2278\261h]<\342\343\376\273E\275F\275\224xK=\311\0227\275{\363\242\274\244\205\257<g\247\\=\343zZ=2V\247<\370\0374<\372\377Z\275\364\343\014=\250I;\275g?\'\275\277+1=\000:D=\326\300D\275\317\033!\274oA\016=\"L\023=\354^\303\274:]R\273\253\017J=/(\\\275\266!\251;\021\334\235;\tWM=?q\335<.\303\035=<\245\355<T\001\332<\007\017\301\274\310\"Q=\214YX=\215\262p\274\234 \263\271\356\301\377\274\326\357C\275\375\225\002= $\364\2743c\306<\377\220\004=\362\262\024=9\030\003=\361\002\024=\333\223R=v=\253<T1\260<\305]\230\274\226\376\302<\035`\231<F\265O\275MiI=\265\226\022\275\253\037\341\272\342\260Z\275C\236\323<\341\253,<^\365B=&>\030\275\371\257>=\300\310\260\274\275\220!\275\322$G=\277h/=\261n\035\275}F\251<\362\211\277<\320#\017=eq\225\274\252h\220<\256\224\240<1bX=\233\022\315\273\333\002B\275T\341\354<\001\0334\275\261\3420=\335\354W=\217\215\241\274\270\261Z\274\001\304}\274-U6\275\371\022,={\001\t=KV)=Fl!\275\233P\370\274\207x|\274\360[\240\274[f0\275!H\236;M\203\\=\273\226\316\273\005\016R=sU\036\274T+/=\310\261\002\275\033\2212\274X\237y<\017SJ\274\010\004W<\327\376\t\2752\'8=\373/\225<\031>1\275\244\372\223<\245\017\227\274\272\361<\275\237\026\204<\021\255\020\274~:\241<(\370l<\334\212\241\274\034\3408;6\203\340<\231\270\225\274\362r\236\274\330\037\034\275\244-\025\274L\310\236\274(\014\352;\022\3309=\213\255\006=\260\265[<r%\025=\203m\233<\201\354#\274\332`\013\275o\337(=\211\3216\2756T\034\275>3E=^\355\340<\350T\r=.\342\"\275\207\252\355\274\347\206\032<h\274\202\274\314\234\030<>$\306<\325\346\332;\317x\264\273\023s\215\274L\300Q=MEK\275#\032\002=JaE\275\373\3326<>\023N\275\240\023\\<\002\243\223<\306\252\331<\236V1\275\225\'\213<\315\222R=L\367\001=\373\005\377\274\353[\230<\314\372:\275en\254\274\333\352V\274WT<\275\370I\035=\345\314\324<\242\235\013=\331\2140=\354\211*\274IU\'\272\3727\301\273\330\177I\275\376^\312\273lz\027\275\366\205\010\274E\315S\2753\275\014<O\201M\275\255X0\274\"r\300<\250\306\003\275\221\2079\275\345\311\n\275\034\2238=\r?H\275\253\363\204<9\031d\274\325N\263:\332\207U\275\006\303A<\244Q\304\274\374\374\367\272i\254\"\275{\317O\270)\036\"=\t\366\352\274\246?\013<\230.T=Kq\332\271\236,\261\273\364\031\333\2737\275P<\327\334\006;\313\212\377\274B\0237\275>\215\001=\375:\320;\241\3162\274\277\303O=E9?<\"\235P\275\275\200B\275\201Db\274\006\030E=\232\327];\321W\247\274\376\357W\275\270\311C\275\321>$\275#\232\250<\361\211\211<\010\323\376\274\316\354K\275\033\2546\273\302y\035=)\334\376\274\263\016\266\274\3452D=b\340\3559\221BO=\271\317\276<D)0\275\031\206\021=7p\266\274\3759N\275\003\\y<\254\206\301\274\0020\\=\030\007\3669\033H\357\274\373Z\332\274cg\241<\300\277\"=2\3263\275\033g$=\017\326\002<\004\222D<\360p1=\243<\023=\342\301\374<\025{\t<!U\315\274\226W\246<g\302\250\273y\177P\275L|$=\270\032\277\274(S\305;\017\300\t=x\323\014=\3526\342;\264Y\006=\223\314(<\310\212\346<\327\251G<\225\237\316\274q({\274\267\333}\274\344\304\033\275\321\330E=f\231\373\274x\277\315<\364\267@\275\002]W=\033\213\"=\205\242\237<>\035x<\207\245\032<\031\264\016\275_D\306\274\262[Y=\237a\n=>~K\275\210\317y<\2655\021\274\302\010d;\355\260B=\2039B=\237\224\"\275\216d\032\275i\220@\275%\306:=n\366\236\274%Le<\241T\310\274#\346q<\271\2612:\325\226\265<\265\265\327<\323\237-\275\215\212D\275\346VY=Q\231\2718Q\021\332\274\032\032\231;\033\235\270\274m%\014<\332\273\330;\225\261\023=\220.[=g\024\005=\017\305]<\271*s<$\244t\273\353\3000\274\035#4=\200\254\336<nkG=<\351\031=\236L\371;l\002A\275~wX=3!A=N\275Q;bFM\274\206\203M=\006q8\275\366 \236\274B>[=\372\2263\275\376}&=h!+\275\243\326\021\272\207\004\357<\t\340T\275\374(7\275\273\260+==\2603<\217\010\002\275\271\236\252\274?<[\275\024\020\024\275\236\243\372<\024N\'\274\254w7<;\031\005=\013\325\002\275\315g\347\274\354?L\275\300T>\275\215\363\241<\377\360e;\310V\212;o\236\355;~)K=[N\253<.\232\272<\215\262\035<DU\310<cP\036\275\274Q\024=\244\301\007=\241\314\364<\223o%\275-I\253\274\"\363!=\311\276p\274\016Y\343<i\243\r=\374\2533\275\320`0\275|\273\376:\007,\215<3\203\004\275\363\203\202\273\331\226\327<\002\"$\275F\212\355\274\013)L\275c\361\211;\351\351*=[\271<\275,[+=$\312{<V\234\005\275\030\020Y\275\365\261\231<\201\216\372<\370\221\004=\234\335#=\235\364y;Y%\'\275\3466[\274z\\O=\324\322\271\274A\rC\274\270\3348=\337\000\030\275@\031\205;\202O\031=\306.\240;\227\301Q<\200\327\256<\027Y\373\274\r\2750\274\377{|<&\302\221\272\305<B\275{f\357\274\353\033\334\274\240\rD<\302\262\021=KlZ=D+\317<\340ZU\2758)\000\274\257\211?\275t\212\252\272\321\267\024\275\010\374U=\273\337\303\274&\223\227<\361(J\275\332z\353\274rK\345<\332lF=+\373\277\274e|\266\2741\'\272<\376\345P= \327\373\274\006\201$\275i#\244\274\240\032+\274\0276\337\273)8\257\274 z)=\376\234S=\275\n\230\274H\371\303\273\252\354I\275\225\373\350\274e\r\251\274\315\004\237\274\276\3403=@#F=\016\375\245\274\312EK=\001\263\377<\234\215\316\274]\315\\<\010?^\274l,V=\352\344*=\331\366C\275\343\031C\275-#Z=\005\214\352:z$\304<\tT\255<~\306\224\273\n<!<\0008\203\274\276\355\001=\257\033\014\275\250\334V\275\315\360C\275\347\365S=\214\253\275<\277\224\262\273\005\300f\274E\310\226\274\212\273\'\275\260\242\005<\014x\000=\231\331\016\275a)\362\274\3644[\2756\255\330\274\377\246\322<\010\324\227<ntG\275\005F <t\"\r\2750\030\344;\355q\241\273K :\275\264\214\324\274;\273:=h\274\377\274\265\316\003<\276\240\355\271\204\271\320\274@\372\023=\272\201R\275\261VN=\216\221<=\005c\363\273[\326\260<\031FK\275\337\\?\275\215\255[\275s\243V<W*\035\274\335O\216\274\222A\027=\221\2443\275\326\233\007=\264\212\230\274\255\273\355;\302\022;=\377\010\033\275\202\270\272\274\367\333Z\275V\034\321;u\204\372<\264\333\013=\035\355@=\211\372U\275\004\267\203;\227\0000\275\203\351-\274\253\326\353\274!\323\306<\275^\343\273-\370;\274\313V\t=\263\207 =A\352==\302\376\245;\277\0354\275\214\376Q\274\241\205\245<+E%=\305\"&=\323|\276\274#T\314<a\371Q\274\232\2121\275\033\213N\275qTm\274\257\337\007\275\207\366\252;\275\007#<Dr\037\274\315\333\264\274\022\322(=\003\336\347\274n\277\201\274\313@4=\267\351\021<1&\005\274\336\375[\275\326\345\366:\341;\027<\342\335\210;\347\203;=\023\013\225<:\371\0058\320N\004:n1]\274\335@y\274)\035J=pw\271<[4\245\273C\206\324;\303nN\275\216\024;=\340\350?\271\332\312@=\267\000S=\232\377\027\275\r\247C=\353E\004\275\246>\222\274\257iG\275F\0064\274\331b;\275\272J\027=\344\\\341<\303F\314\274\225A;=|S =\240\350\204\2748\345\031=\345)\277\273\363\320\362<\353\375S=d9\023\275y\n.\275\374n\271<\231N,=&\261==\316!\t=/\256\233;C\340\355<>\215\273<\352X\034\275\251\326\321\274\037\277C=\260\312S\275\244\366\346<\373\326\021\275g\210\006<\371]l\273\322\010\033;\275\\t\274\331w>=\251\317\003\275\235@H=\306_\023=_]5\275\217Q\306\274{\323\337<oR\360<\374\242\300\274m\245\335<\275\360\370<\254\273\265\274\224\217Q\275P\334(\2746\326%\275\002\314\007=\267zs\274\004;_\273\257\326\036\273\307m\355\274\271\004J\275\311\223!<>c\373\274b\330(=\300F\224\274\357\337\'\274\323\351\r\275\343\022*=\260/\323<\235\250E\274\352ZI\275\353#\007=~\005\206;\331\233m\274)\255\004\275\372\322\245\2731B\374<\243\ru<\177\320\360<\201\216\272<\034\346\317;\375\225\215\274\371\327\033=\327\233\262\272\365s(=\250j==+\234\030;\0207\020=\242\215\021=\204\000\206\273+\275T\272R\0219\275\244\345R\275\211\3379=\346\322\214\266\316\364(\273\036\002\336\273\353mF\275\223\330\030\275\366\333\t\275\317\371\003=\237\227)=\014\344\305<5\252\226<\212\220\327\274\372\366l<\364CX<\263\263\037\275\303\365#\273{\000\327\274\306k\232<\351\004\254:\374 \215\273\273\007.=\356q\022=\274\210\322<$\020\310\274\357\372\345:\332\020\344<\013\027\264;p\346\036\275F|29\\\351/\274\177\212S\275b\036\307<\314L\200<\306xj\274\371\0054\275S\2732\275\276/\013\275^\224\346\274)\2337\275\307\252\037=(\342\002\273oZ\220\274\n\335@<\257\374\022=\233m\366;2q9\275\355\264\347\274\010g\340\274}\350\\=S\313\004\2759\014\331\274\361\\\010\274\010\221A<\311E\001\275\252\177\207<I\246*\275\262\274\025=Jp\036=%)\016\275\315\324\037\273Wc\307\273\351\376\201\273w\370\222\274tVP\273\005\032B;#\021\335\274?\354G<=\364W\273p7\367\273\022\2525=Dp\035\272)dN=\372\261\000=\201\0008=\326\225*<\\\245@\275+\275\343<e\'\t=\355\0246\274\004\223\004\275\225\261\307\274\'t\275\274\366\351\334:\363V\230\274}\010N=\014?\\=`][\274T\242.<\032t\r\275]\273\250<\246g&\274\200B\223\274r+\217<@\3605;\344cZ=\300[F<\356Z\020=\272\020\017=\306\255H<\272T\242\274D7A<\027l\310<j\327:<\014\005\242<,\023\307<\314\361(=\354\267\211<\203\177\234<\014R\013=\366cL=6t\311\274r/\025=\235\025X\273Ue\017=\223\200\340\274y\356\024:\003\225\017\275\235\343\t\275\3636\037=\344|\005:\002l\352<F\350[=\254\\\233\274\334\177\373\274\251\375\355\274\240\257\236\273x>>\274\337R\237\274o&\\<\337y\301\274M`0=\204\266R\273\034}\003\274\303\264\006=6\240.<\322h\205\274!\233\267\273DBX\273(P\251<\354\344\252<~\0201=\023@\365\274|\355\311\274\273\260\360\274\214w\353\274\035R\002\275jt\033\275b~\266\274\013G7=\252U\202\274\377\033&<Z\215\216;]\260K\274A\357C\275\307\031$<\321\"O=h5\367<S\303\310\274\275\022\355:{\216*=**\222<f7\031\274\262\215)\275\230V\003=xb\214\274\246\202U=\037`\315\274kU1=\217\206\322<\320DW\275\336k \275b\'\212;\2675\316<\006D%\275\343\270\225;N\273\\=/\031\207\274:\257\226<\350\rM=;\362M\275\261\243S\275z\237\003=\374\205Z=\304\270Y\2750\0277:\255\300\324\273rf\007\275\372\247\221<4\247\271;\306\314%\275\n\2023=\204\3241=j\213\023=\203\335E\273\305\346\274<\266\304I\275@\325\021=L\272Q\275Pp\030\275I\266\276\274o \252<\366h\257\274<\233<=\340+\024\275x\361\010=g\321\214\274\342\204W=r\260-\275\333!\255\274yW\001=\311\215\214\274\240\036\316\274D(\014<\221\027\313<0\206[\275\'M\326\273a\t\207<\207P\364<]\276\345\273s\230C<\261\375\326\27420\252<\273x\367\274{\245F<\330X\362\274\366\343a\274w]_<bo;<\315\031\211\274^ \'\274\360\356\037=\211\\\021<\320\277M=\340\230\023\275O\363\377\274\022\222&\275\274\020\274\273\010\272\332;\371\021V\274\0367\211<\203@\037\275\244\367\372<9\023E\275_EE\274\021\343S=\007\343\317\274\202\003\305;\036\001~<f\326\343\274\230\366?=\036\3640=A\0040=\014\332J\275UL#=\210c\247\274\363\367\212<\331\241\025=\360=1\275m\322\320<?\016?=\236\313\341<\n\t3=\261Fe\272\362\\(\271\250\223\264<\346l5=v\022\367<\005w\341<\301\022\356\273\257\311*\275\262\375\310\274(\302M=\323\032\305<5\027\023=\032J\026=U\235\036\274z\003\231<Y\321\023=f[%\274\226\250K=Ml:\275U\026B=\007\2127=\370j\222<\364\320\320\274\322_\264\273T\247\230\272\240=B\275;\247\003=\263\211\310\274$\374=\275O\321(=\021\206\020\275\230:\261<Z\332\345\273\315\214\260;\252h\234<\3307\021\275\r\212\352\274\36481\274CS\014\274\374\001\346\274\227gL\274\271\333{\272\201\230\311\2744\201T;\263\t1=\373.\357\274\211M\241\274\305GE=RL\236\274zv\301<\027H\365:,\277\014\275C\366\270\271n\361\004<\031\226%<?\205\263<\235\333j\274\004\n\005=\227\332\356</\233\032\275\311\255\315\274\241\253#=^cP\275\236F\007=\025IO\275\023<\303\274t\376\360\273\357\336\026\274\211\263f\272\nl\366\274\216\010\362:Z\374\'=\006\364\'\275alF\275\253\215\343\273h\321\313<\"\3522\2754\303\217\274\267\023\240<\333Q\000\275\250\007G<\341\243\250\274\344\3337\275\324\225\246\272Rd\'<\202+\023=\253\314\254;m\003\325<4\271\332\2741\263V=\214#*;c\013V\275\367\216\026=\005\261q<F=\027\275\246e\037<%\275\266<\256\305,=\\\002\202<\227\363\035\275\363\224\024\275cS%=\367Q\'=V\304\304\274F>\031\274\235\200n\274\200@\306\274/C\222<(\001\035\275\023\347\037\275\016\207@=e\317;=9\272\2577\244\nv\274e\222F\275\363\342F=\024P\345<\304\327K\2740\263\221\2740\377\032= \006\020\275\225\201\215\274,\033\305\274\273y\230\274\346xO\275gw5<\223\300\021\275\331\023\037=\266c\322\274\307=\330;\333]\371<\271\3075=\322\373\213\274\330y\232;,\003i\274\270\250)=_\036\364<9\204\"<\277\311\271\274\230o\014=\342\316\234;\317QA\2752\235\200\274\310//\274|@\246<\303\364\300<\326\n\235\274\355>*=.r\021=\254vh\274c\211\242<h\365\236<\332\005N\274\036e\372<\226.C\275\334\215R\275\031\"(<\003R\033<Z{\031=\305\221W\272cx\021=\234-\024<\265\026;=ls?<\021<F\275\0052\344\274NG\\=B\272A\2747\331\347\274J\001\320\274\307\3156=~\212#\274\205\326Q\275\035#\253\270\303\217\202<+Wr;l_\013\275\335\223\321<k\317E=\346\205\234<f\302!<\004\257\374<Q\007L=\036\361\000\275\035\251\n\2753\345B=\017\025F\275c\225#\275\321\313\013\2759\3601\275$\017\311\274\241\343Z\275\232N?<\223\203H=a\214\301;\272G\242\273>!\214;n\004\254\273\347S\306<\277zq<\360\036)\275\275@$=\350\236\002\275\007h\321\274\327\206K\275\233 6\275\030\365\023\275\001\013\373;\223\374Q\274br0\274\371?R\275\004K\255<\270\304\270\274\035\322\014\275F\271\006=r;\355\274\363\0264<\362\357(\275A\000Y=\3249a\273\242\326\376<\344/!\275\000\210\031=\216c\300\274W\224\024<4\\5\275\366\343\312<\034\302[=\331\244\360\274R\177\004\275b\373t\274\354\303\257<:wL<\300\315\332\274\232\021\005=\377\331\254<{\2464=\343\205\334<_U\226<\230\373\005\275\377\330\025\275\201\255<\273\234\014\264;\204\375\202<p\361\'=\362\001\027=\221\035Q=\354\236]\2745\026Y=mE\216\274\371MF=X7\242<\256\276\014\274\236Q\217\274\371\365\322\273\2239\222<\233\270\345\274x\265Y\274\250\361\005\273\216\201\371<\271/\271\274F\222<<\265r\271<38*=\375Z&=\251n\022=:\334B=u0\017\273\274\n\352\274\370\266\200<\311\031\010=\206.\223\274\224\302<\275H\2647\274\273HL\2725\277\331:\024\333\023=B\235\244<pTB=\313\3444<\nU\024<o\215\204\274\323h\\=v\230j\2743\235\"=A+\264\273U\033\260\274\276)R\275\371\001\021\274j\350\267<\223\303\021\274\225-B;\254\000C=\375\013,=y\341\374<\364\215\030=\010\345!\275J\310\010=\254\273K\275\246\375K\274\233\0105\272\004\361\266\271\032\033:\275\344\036\230\274\314w\000\275\213\364\211:\372\222#=\014\362X=\327\206>\275\341<\031=/#\302<\316C\204\270\300;W\275!~\261<\"\032\204\274\362\341\251\273\257EI=\224u/=\225\362\346;\261\206$\275\025\016\002\275\022\006\273\274\rt\347:\024\356\257\274)D\353<\036\2272<2Qd\274_\254\024=p\216\265;\235\035\036\275_e$\275\206\026\310<\373\365\344\274\253\007\n=)\254%\275\214\272\356\274]QF\275\352\246\026<:\224+<\333KK=wd\311<!x\033\275a\301-=\200\177M\275\201~\270<:\222\r=\314+Y\275\273\254\003=\023y*\275\271}\316\274\332TK=\033\340L\275\260\243\302<\310\211\240;\346\004\323<\205\222\301\274\240\351 ;n\357\244<ZN\014\275\005\373\027=cB\021\275\342j\246\274\334\3740\275uVA=\t;i<\313\262\225\274\321i\212\274\272;\211<\0109\016\275\251\336\021\275\365T*<ylg;\3212T\275<\'\005;\27559\275\323{ \275\263\0161=W\005\271:TF[\275;`\t=\t\274[=\267\313 \274\267\351%=\3056\264;\314\226M\275&5\027\274\322\250\266<$\030\310\274\273\2356\275\305\370\016\275\334$\337<\233\310\027<\312\367?\274!\017\355\274\234 #=D\027\230;|\322S\275}\324\023\274\";\241<Gd\305\274?fD\274\373?\235\274\005\3565\275\323\255\331\274\230\347\016=C|\361:\210r\037<\177\t\264\274!5u<\032\232\023\275\241e|<\341E\031:\371\314|\274j\254\014=\263d\310;\211\344\t\274\330\373,\274\320#9<4\'\031\275\353\021\006=\361P\264\271\036\236\314\274B\202O<\346\217\263\274k\334F\275OL#=\320\007D=\037\227\350<\202\307\231;\271\246\r\275~\3038=\n\016\024\275\366\034\301<\026\2029=6^\036=\222\310\247;9\241\375\274\371\364\340<\221\320V;M\324\372\274\203w+\274\203\224\352<\2119\317\274$\037\245<\253\271-\275\274\n;=\226\364\363\273\340N\244<\276\027:<5\0012<\222>\342<aY~\274F\016\001\274)}\r\274\361\276Y\275\312\304\364\274a\nF=\371B@\275\361\366\177;t\354\\=2\272\232:+f\202<\004\261\336;\354F\004\275\237\360\214<v!\007=O\363H\275\214\364\r=\217\351\277<\340\020\310<\247\314\341;\\\376,<#\356\001=\370+\013\273\243A\357\274f\252\340<\253%\260<\245)\025\275\321\371:\274^\027:;e\312a<\310\320\224\273\014\242A<\365\354,\275\023\275\003\275\3070\305\271\030\311\005\274@2\306\274\374\244N=7f;=\240\345\233<\226\356w<\350<Q=\227 \\\275\275\3776\274\324\320K;\206b\374\2741r\353<\331\305J=Y\374\014\275\310E\026\275\022\337l;\002\250>=.\232+=a\255H\275\010\356\036=\022>>=\313\200.<\242\227\255;\304L\026=\376\021J\275\026\363\036=\005\272\004\274\245\226\231;\025\235:\275b\362A\274\322\264\010\275\025k\301\274\243?\237\274\246\365\363<\362 \264\274\037,N<\253\277\324<\277\005\357\274\002XD\274\243\352\324<\202\310\001\275\265\312\243;f\216\254\273 OB\275\237c\n=\347&\030=m\310-=pK\200\274\027N-==\013\351<!3\200\273.jQ\274*u\376<\202\216\006=\253\027\261\274\021=E<g\216\271\274\274\315G\275\225-)=}\016\222\274\320\223}\274\265\365.<`\377\007\274\371\301\035:>\377J=Y\0305<\375G\345\274\255\206\025=V\337}\274\364\253\240\274&?\236\274\010\232\337\274l6N=\317!\355<\0224t<\020k#=f:\313<G\213\'\275#\273\256<\270\025\031;\317\377m\274\020^\332<!\206\205<q\224\257\274\035@\273:\367\177\206\274~^1\275\327\370\365<\240\227\325<\304\310\213\274\277\320\365\274\r\006(<\n\023X=\335\207\033\2758X\222<\025\t\307\274\316\245\235<f\223\315<\2057\320\2731\204\003\275z\230\365<r>4=\272\266\352\274~\200\025=9\310\236<\324\334\001\275%\206+\275^\014/=\237\037\226\273\205|q;U\035 \274ph?<Dl\034;\017]\275\274Wq\232\274\214(4=\272\251?\275\376\242\000\274\"Dq\272$\257{<\216&k\273b\033>=\035s\007\274\nbr<\013\251\022\275\002\241\021\273vpz\274\332a\006\274\315$\375\273!r2\275\207\355-=\324\220\006=\036I\241<\232\305\313<\366m\\\275\367\372\302\274\262\013\307\274\241\034\247<\260>\"=\302XF\275\037F\321<\300\006\322\274\220=D\274\3060\306<\177\270\226<(\321R=%\017H\275;\007\003\275\\T\273<2\202\366\274\260=\362\274o\031\014=\256\320\264;\371=<\275\245\002?=\014=\014\275}L\034=&\253\021\275\323\304N= -M=\364\245\"=\313\r\262\274\240\217X=\236\363\360<\216\2360=\237\3335=\233\257<=\331UV;8\273\334:\267\360*\275\001\235\277\272\236\020\006<\031\304\220;Ix\017;hw\242\274\231\0172=\364\023+=k\317\013=(\".\275\2708\326\274\277\n\270<*\276$=\004\366h\274\"\300\007=\017\377\007\275\006\307S\275\371\325,\275\210\027\215<@\241\340\273\017gY\275\321\340\226<\303qF=^~/=\336\307\275\274<D\016=\360\306\336\274\013,T<\252\003\243;\252\025[=\367=D\275\023U\260<<\024\003=VQ\271;\213Y\305\274S\217)\275\260\tV<\372\367\021=A\353\213\274\367z%\274T\002\353\274A\264V=\206\361^<\315\356\336\274D\350\337\274A\367\205<\233\"\346\273\370\217J=\206\270.=\343?D\275#\272Y\275?\247\211;\017\227\2179\344\277}<(\t\266\273\343\307\251<\264J\220\2730\313\022=O\337\330\274c\237\303\274\034\006\253\272\265\207\033=\007\301\033=?\245\321<\311\3362:D\315\007;\262\340\215\274\375\312:=\371\010\201\273\t\330M\275\211\356\006=\0201\250;~\374\210<<\236c<\250\014\301\273\207D\006\275\350\222\030\275\177l3\275\212V8<\305\rG=4+\252\274\016\177Y=\032F\200\273d\342\034=\204LY=\n^\331<hR,\275\245C\022\272\321\3341=\255\023\247<q\002,=\177(\022\275\004\022\211\274\373\317\021\275\030k4=\033G.\274T$\311;\250\256\363\274\240\243);\025u5\275t\241\000\275\006\206\320\271\322\257\251<?\252b;\333u?=\020\344/\275\362n/=\212\310\273\274\346=\035=e\355S\275\341\253\372<<\356;<\317~\251\274\320VX\275\200\006P=\010\353v<\335\"\034=kS\257<\251\025\367\274},\000=\362\371H=\217>\366\274Y\333v\274V\343\2159:MY\275M\264?=\241\033A=\034\356G=\335\016[\275\027\313>=\215\2570=\377\214\324\274\017,\255;pn\300;>\316\243;L\235&\275\327\024\244<\0214\276\274\336\362\277;\375x\201\274\005\210{;~\273@\275[\272\246<|l\224\2748\232\017=\237\335\314<\n\177\031\275\233\354 \275\'\240\010\275\344\375\204\2742T!\275\263H\r\275\300\313(\275\035\314Y\275l\247\214\274~\315$\275\017\355\204\274h9\000=\251\\\r\2754|0=\314\367\n=\004e\000=\010\035\337\273\316!\313;3\227\346\273TS\033=\212\3152=:-\305\274\366\334\273\273\304>M=jD%\275+u9\275\316\2115\275~\203\000=S\221\262<\017\231Y\275\240>:\275>\274\236<\253\344I\275\\x\\\2753\345\340\274|\"x<5\372`\272\002H\312\274\316\312B\2754\023\301<L\3572\275\373~l\273\361YN=I<\214<Q\274\315\273\33649\2756mQ=m\021\241;5\362\002<\013u\345<-\215?\275\370\241\207\274\252\214,\275O\335\030\273\362\212\263\274\270O\310<\320\305P\275V\003\307\274v\265[=K1\372<\206\351\000=\332\344\000=3\350*<\227\266m<\240\231\035=\3167Z=\311x\277;\0132\223\274\336\320\022\274\263g\217\274\377\320C\275\016c\000=\312/\243<\352^\032\274\224\366*\275\305,Q=\021\266\260<\2749@\274\332\266\327<\035\007\253<J\265>\275\314\265\275;ElO=x\345\\\275\264D\277\274bC/\274\312X+=\013DB\275\027F\246\273\322\252\307<?\346-<*\007\364\274\232\025B\274\240\2678\274\206\372]\273\346\t%\275Y\303\323\272\210\254\215\270\321\313\362\274\245!c<\3315<\275\000\372\223<^39<\202,\244<\206\263\364<\211;A<\024\342\261<\277\215Z=\225\302\025=\306\035E=\357\241J\275\022\363\276\274j\032\010\275\330\306\204<\370\267T=\0258\320\274\355\372K\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\344(\313;\274R\216<\314\026\323\273\337\251\031\275\323\376\t\275\263\364<\274\213\231W\275\254\2434\275\005\366#\275^\257\244;\244\324\020=\246\252)\275\340R\360\274\"{=\275\365\262\304<A\260\020=*\264-<\227C\231;\037V\355:\0334\366<\365r!=\353s\000=\271XA;\301\225\005=L\226\027\275\r\2455\275\231\274\037=\"\334{<\321\'_\273!\374O\274\245+\"\274\305K0\274Q\332+=j\033_< w\370\274Z\257\236<\321o$=P\0235=\337\034\235<4\003z<\314\205\356:\257V-\275)\377B=\217\315\337;`\336R<\343\331J=\267;\020=\231>\r\275\203\177#\275\245\373=\275[[\005\275&\020<\275\317\242\274<\262\200\331\272\024\355$\2757\207\333<\264\'\331<a=u\274~\325*<\261\233F\274$\252@=js\322;\337\032E\273\326)\222\272l\2076=\336*\344\273\341\275+=\330\016\005<\277\227\275<\330\361m\273\226*\022=\276\374\031=\n\202\362\274`\272#=\320\323D\275^6\026\2759\3705=s^\002\275\334\3467\275\371\323A\275\023d\205\273\'6\205\274Na3\275\023<s\274\247\364\355<@6\\9\367x;=nj>\275 LV=\342\236+\274\336\246!\274B]\016=o>3;\342P9\275\377,A\275U\2409\275:4a;\302$\002\272\261\204\036<V\373\024=/\323)=\323\021\213<\000\352\025\275\0347\261\274\244\300\365\274\305Z\340\274\007\030-=\217\036\254<\355\222C\275\226\004@\275\365\260\247;B\nQ\275\310,\316\274x\334\310<4\232\216\274\004\356)\275\252p\327<\n\350-\275\251\0222\275\237G?\275\000\001\n=\210\334\016\274\371z\217\274H\005\350\274\223S\264<\337\005\007\275\311l\246\274X\0227\275\272\325/=\241B\360<\227\317\005\275j\265\010<\232\025\326<\322\000!\275\264\247\247;\037\272\351\274\230\2644\275\323:\311<\'\245X<o}\325\274\346z\010\275=\024A=\304\\\377\274\245X\000=@\270S=\t\203\314<0\215 \274\245\311\243<X(\267<MC3\274\256O[\272\026\236\376\274\323\\\032<K\212\001\274\255\342Q\274Mj\001\2751\227\217\274\2731S=k3$=\354\\\332\274\317\247\372\273\313\346V\274\213U\n=\366%\323\274W\330\374;\332\257\035\2731\327\202\272\247\247\025\275\252C><m:\336\273_\320\300\273\227\223C\275\001GC\275\313\344A\275Z[\221\274\343\272?\274\027DN\275dR\301\274\033Z6\273\201\227\317\274\226\312c<,\260,\274\241\341O<\356\350\260<\226\240\242;\022\002\330;x\312\367\274m\241 =u\321\327<M\213\234<\274\030\227\273\020\351\307<Ju\263\274\322\204N<lv5=%\272a<\016.C\275\365\244\213<L}\'\274\250K\266\274x\204X\275\256,M\275\006,Z\275K\274+<t\227\333<\r\367\035\275L\373\334;\244\311\360<\021\241\276<\341\3159<7\335Q<R\334\030=\210\241A\274\230\204[\273\272\350W\275L\017E=A\246\315\2748|\201<\017\274\255<\'\226\003\275=\"+=\374\rO<\243\366=\275\310\347\241\274e\212\234\274\366\272$<\232\0165=\265\210G;J\2541\275\375^\016=6\304?=[\255J\275\013?\037=\033\'D\274#\272\360\274h\265L=\327\001<=O\222:=\341 l<\373\020_;\251\n-<wb1<<\321q<\2319\013\275\035\203\237<\274\007[=\262\364\010=\235=/=j\353)=6\354\251\273\373A\030<~\375\023\274\345\212L\274\276\220F=\241\306\333<\374;N=%Tp<\227\026\365;\025\261E=\244F\026=\3537\030=%8\004\274\26145\274{E\230<\346,\227<w\2553\275\361D\224<\2025|\274\032!\272<\361\202*=A\243\000=\243\032\375;\030iT=\234\271\274\274uvE=\014N\000<\010\322\037\275\347\302C\275\333C&=&6>\275J\006\322\270\216/Z=\273\000G\274LJ\371\273<\250P\275VBV=\303Vd\273\316\340\t\274\372\n.\275\236\376\237<\254)S\2754\211\346<\321\210M=Ni\021\275\236\341\252<\201 W\275U\344\234\274\367+1=\277P\004=\024.\334<\325\356\330\274\376bL\2753\022A\275\'N+\275:\201\220\273f\363\006\275\332\323\034\273Y9]\274o#U=a\210\031\274\2128\364;\377\006\213\274\343\217\016\275a\360\330<\3119\002\275r\000\321\273\231\3208<\236\367\026\274]\355\031=m\352\200<t\252\317\274\350.?=\211\314Q=\266VK\274\035\227@\275\355o\307\273=oJ\275\027>\007\275_\314\376\274R\nU<\212\\\364\274\341\201\227\274\":T=\0108%\275T\001x<u\200\224<\224\001\017\274\\\255D\275\273#\237\274.4\341<\226\016\2347:\3074\274\246/\332<\3227\341\274\315\010\037\275D\346\014<\322\254\004\275\263\350\367\273{,\025=\355\216\360\274\227e\021\2751Gl\2743+\304<\370\234\227\274\325\315\322;\013\315\000\274\203\213B\273PV\236\274@\225\322\2742\"\022;\343\333\311\274F\233X\275\377(a\271\364&\000\275\014\204\306\274o\302\030\275\363\367\252:\357Tw\274\004h=\275\n<O\275\312\271\267\274B\240\372<_\021[\275PDv< >;=\235\221V<\215\360[=w\024w\274\202\016\226\274@\2575=XN \275TP\250\274\006\300^\274\\\013\211<\030\276:=\307\210\260\273\273U\013\275\231V\006\275$\035{\274\372\r\005\275\340\341y\274\036\007\327\273\272L-=\310\036%\275\202\357\007\275Z^\313\274\230\263 \274\037\276\003<\303\034\346\274\255\302\024\275\376X\037;\321Xv\274\375\221O=T\366\003\274\255*)\275\305\351\254:\237\330\260\273b\273\226<\202\016F=\024\022\253<]nQ\275eC\"<\367\013\340\274\334\344\326<n7\362<qhQ\274\250\002\300\274\270\3119\275\036\364\347;\254\314P=\rVI=[\370\025=\273\365\253<\255\225\014=M\252$=\330\2559\275\275\352\000=h^\264;V7`;@jD=\367.\313\274:6;=\251yS\275<\204\026\275\206\212J=Q\272N\275\262\246T=\326\236\000\275\364r)\275\"\366r;5)\256;U\351\014\275\343\301\213\274\347@\003=\243\3203=*\033n<\035KI\2758\205=\274\024\337\2659L\rJ\275\244\337\364;L\252\371<\004v%\275I\220\247<V\022\033\274w\245\313<\261?\023=!\323J\2754\253\273<Q\210\004\275.\204\364\274\223\031/\275G\265&=\250k\014\275A\304 <\'|\035=\341\243,\273\210\211==\256\032+=\300{\223<\235\376N\275\032\355\001=iN\326<!|K=\370\010)\275V\210%\275\231\265;\275P\2650=Q*\350;i\250\013\273\214\230\r\275\033;o\273\205\322\331<\005c\024=\"\t4=\230Y\373<\2228\375\274\360\n\377<G\006\2659\331\211#=\017\340H= v\231\274H.K=v\303@\2757\252\016\275%F@=w&\016=\207\373\232\274\240\'\357<\241\305\034\275\221\326\010=\260\026\004=\334\264h\273U./<\371c\000<\326\337\025\275\210\300\300\274\346\214\304<\207^S=\021GN\275\335u\007=\232\352&=\265R\304<\345\306$<\304\033S\275\tl=\275\252\325\222<\325[J=>Q7<4`\323<\344\247\203<\2049+=\336@\020\275dO>\275`\010\246\274\200\372\220<\230\252E\275.\262\357<w\272b\2730\021;=\247\333:\275\r.\324\273\030o\275;\314\201\010=\245\000X\272\010-\003\275\'\377\033=\246I\206\274\353\325/=<\330C\2754\021\021\275\306\016.=\373\356\267\274\244\354\252<TK-\275\357u\007\274\002\326\363\274\240\333/\275\363\026,=\034\251Q\274\007\017\322<\264\206\314\274\036\236+\275=V\r\274\266\237\334<\014\237\363\273\332\303\333:\324\265O\275\204$\216\274w\004[\275\375N#\275EAY=b\023\331\274\206L\017\274\371\300V<nv\014\275\322\035\035=ph\233:3\253\014=\356\263\021;N\024\251:d\n\205\274|\021\247<\321e\374<\331\317\213;%`\335\274g\023\276<\022\246\237<\305\224\220<\204M\r=\233y\222\274\256\213\343\274U\027\212< \364\220<\345m=\275\224\'\036<%\274\021\274u\242\356<R\3532\274\332\322\350\274\027\263M=(\246\266<\365\263\025=x\215t\274\266\350\257\271{\376\035\274\271\231Z\275Py\206;\177\004n<\242!\020\275F\362\000=\370\237\025\275\2025^\274\016r9=\215\300N\275!P:=_\203\261;{\206A=\346w-=\262\247\033\275U;B=~\262\333<\342\024\342<\346\323x\272$\236i\274\376_\357\271Z\223\311\274r\371M\275H\010>=\230\361\021=\223\r\243<\362\222\002\274dU\242<\306\302K\275\"\223\303\274zET\274\310\177\365\274)\355-=\230;\313;\334^\016=\235\3642=\364\337\375<:\246\357:\024\317\342\274\224\323B\273bL/=\325\023G=\320c&<MB\360<Q\236\001=\\r\002=\200\314,\275\272\033\'\274\312\202\035=\230O\363\274V\224\325<h\372\010=\\\344 =\001$\326\274\373H\346<\016\306\\=\243\211K<\302?\242<9\341\013=y<4=F\017P=aS\273<\2406$\274\243\353\250\274\345m\035\275\177\226\r\274\246\251(\275e\317\025=\333:\236<R\310\030\275W\360\355<\251\036-\275\001\271\020=U\212\373\274\021\307\245\274\267.\265<\03180\275|\352\263\274\211 \237\273\256\345\016\275\361\347+\275\263\025\264\272\354\014\344\274\027i\010\275:\350\305<\224\223\306\274\'\t\261<\3369\252;\314O0\275\242V@=\2151\004\274\235\231\027=S\n!\275\336\030\304\274\262+\217\274\205\316r<_\301\253\274\210h\033=f\321`\274X\237;\275\363!>=\233\016\027=\035\265G<\005\310W\275`\352\345;`\222(\275H*\301\274e\371\243;\323I\217;\2226\031=\254\023\334\274\223YI\275\266\206\347;*\2104=)\350U\274n\007\r\274\367zV=n\224G=\0002&=\223h\301<\010\357\365\274|\222T=\3236\226;\214\345\346\274\236y\003\275\213\275\340\273\341\n\262:\262@\305\274\024M$=\270\255K\274\236\335n\273\006DD\2752\255\305\274\236&\273\274\256\2308=\234\361\261<B\2436\275\335\324\201<\341\342\262;D\244\'<]\335\200<\005OS\275\322\354.\2758\2620\275\267\275\005=\316\254[\275;\004\005\275\024~n\274TL)<\377\273\230;/\r\t<[%:<\325 \022=\025\034i<\"\006W\2743\032/=\356\332\013=\373\333\007=\030\356T\273i\301)\275V\201J\275\261\262+=\317\244W\275\223\216:\273\004jH\275[\326\006=k\335[\274\274\254\t<A\275\025=yRD\275\360\247S=\022\033\262<\230\224\354\273\372\356\355;6\335\254\274p>\256<\372\264\356\274\264\350\355\274\346\351\214\274\032\032\353<\226w\205:\035\334-\275\252\200f\274_~7\275\304\250\026\275\373V\246\274\261\202\r\275\347j?<\234\014\356:\366\377\332\274\3144\006\274\264z\356<\236\tA<\010\313\342\274\301\375\200;\263\"W\274\333%L<t\275\365\274\230LM<\316#\333<+U\033\2734\302\347\274\316\013A=zd =\223\270Z\275y\343\231\274\355\316\337\274[&\035=L\326V\275\206A$\275\277\232$\2750\003\020\275\0347[\275\022s\t\275O\227Z\275~\242\023\275\336\rY\275\226\313/\275A\330\001\275M\331\243\274\215\222\021\275\254=\215\273\311\2638\275\320e{<\\U\0049G\331Y<\357\274\024\275w\253\226;\353u\t;\260\3539=\274M\265<H\241==Su\355<\020\362\331<\014\253\316;\320y\315;\303#H\275\241\000\203;\364EV\274u\236\347< CP\275\212#(=\346\277%=\t\326\213\273\243\205\033=\351\2534\274U\0046;\327\331\'=~\345F\275\233\3714=\001;N\275\321`\356<a\327\373<O$\006\275\021\214\021=\374PS=\352\375\021\274\375\026$=;rk<x\355\350\274u\356.\275\230\034Z=\323\240#;o\264\257\274\212\034G\275o\213\310<\345\324T=\2636)\273\r A=v\362\265;\243\321!<ry\365\274\347\372\360\274f\322$\275\341\016\224\274\366\177-=\364?\370\274\325\007)=^\377&=\204\223%\274\314f\001\2750\023\236<\2762<\275\314\356\026\275\311\237,=\273\370\207<\204\342/=\344*\303\274\216*\310<u\305\312<T_^\274]%O\275\375\330\237<\271`V=\345\271]\274?\231E=\347\370\244;\340\231K=~m\007=\037\373\227\273\261\244\217<\367\263\331\274\265\377\030\274\256\020\306;\036\330\262;\275]\350:rr\025\275*\221\302<]4j:\007e?=\013\351)\275H=S<4\275\t=\265\367\\\275\357\241E=v4\017\275\201\320\024=H\007\3469\344\326`\274}\312\033<\311\3335<\345>\350<\332\222\227<\226\373P=A\302?=p7#=8\274j;\373L\215\274<\374\330\273\0372H\275!\247S=\372\323R=\2332$=\340-\336\273\312\300\367\274\2044\034\274f\2622\275J\007\356<f\226.<\203\362\030<\010i\n\275\200\355\030\273\317\tD\275\'\375\030=\000\305I\275\345\201\331:\324\002\004=m \010=$_\370;\026O\027\275o\210T=\264[\226<\361\340\243\274^!\212\274\020C\302\274h\205\007<S\004\"\275a\027\372<\3778\320<`\214\302\273V(\200<\270\027\030\275\377\211\037\275\211\344\017\275\316\324\223\273\202Q\221\274@^/=\216\232\332\274\332o7=\ng}\273\267\252=\275\2103\023=\350\213Z=\376y\324\274\365\330\025\275\335.\"\275\3370$=\274\024\364<\244\271N\275P\204O\275\264\004\020=\036\035\274\274NY\277<\351\341\263<87(=\310\327A=\177\373\000\2754`3=r\211\023=)\367\371\2746\206\200\274\031\254\326\273dZ)\275\371<\357<\320\212\346<Z\340\324::\025\221\274\303\016G\275sV\037=\'\034H\275\255!\374\274\271\367\030\275[aB=\313)\227<\217V\212\271\222\255\n=\r\325?\275\232\336R\275\364\314\350\272\022\247)=;\267\307\274G1\006\275l\3735=A0\000\275\226\375\313\274X\241\347\274\312!\306\274\346\241\030=\026\235s<G8\324<%\361f\274tA,\274\213,\341\274b(Q\275\322\275Y=-\367\352\273\224\210^;c\275\"\275\267\331\341\274\332\244-\274\024\341\'=\236\233(=\006\357\300;24S\274\324\203\024=\272\032:<\035\213\365<\354TN\275]\277\374\273j\"\355\274\3602\245<\322)\321<PpC<\327\335\032\275\270\364.\275Mt4\274&\333W\274\004\003\002=\201wB=\002[\t=\345?\211<\037L\304<\325.\210\273\036Q*=\256t\366<\177\\Z=m\026+\275A\205K<Lx\027\275\364\010\010=\370{?<6\220\211<F\026\337<\022\271\234<\215\0229\275M\341\005=\377\0055\275/\333^\274\343\316\372\274\373\306^\274*\215]<\337\316W=zy\327\274\347\240N\274A\n\343<6Q\363<\024\2114=\324\224M=S,\251<\375z\205\274\'\255\\\275l\022\244\274{\017\230<m%a\274a<\364\274&`\217\273\201\266\370\274s\273\204\274^\352S\274\231;m<\330\301\226;\223`\262\274\351\361A\275\232C\302<\203U\264<ta\224\273\207\277\371\274\306>V;\320\2451<\201\024\310\274\004@\352;.g\226\274\031y \274\264M\204\273\326s@\275UX>=`\224w;\231\n\327\274\207V\203\274\245\310|;\025\200\323\274\274\000#=P\365o\273mT@\274:\006\004=\"\240T\274!\341\031\275\264\341\002\274\306\333\224\274\3539\023=\014\256@\275\010\376!<\266yU;\333\r\020\275\221\002S\275\246IP=/\0142<\266\tN=9 \301\274a-\025\274\031I\313<cN\317\274\000\344\242;g_\007<\037\033\005\275\352/\310\273-\2464\275\362\346\342<\367\333\032\275\351\021\333<o\0104=\3514\034=\225)!\274f\374\'\275\270\350\303;\037U\330;\027\307=\275\316\313\033=\220\303\233<E\035\315<\356\370=\272\030\375=\275\337D\335<\214\210#=*@\240\274\376\277\006<\250^3\275_\262+\275OR\245:k\360\215;i\344z<\221\373(=\016~1=\371\033D\2750N\034\275\351\334\353<\333\000\260<\351\024\275<\233t\002\275\203\005\004=w\017\255<i|\324\274\242@\271<6\nJ=\315M\225\274D\250&=\326;\236\274\350\244B=\242jF\274\013\322\251<\232\351{\274\300\214N=H\237;\275\3775x\2743\014\354<\370\207\030<\321\351\\<\353\336\201<\325\230\003=z\3664=\260\324\022\274\300\304\342\274\253!\204\274G\302\310;\017\313|\274\360\264[=\213a\305<\207\245\"=\202\340\345<0\216\027\275`\345t<\221^\240\274\223O!=[\255I\274\0221\001<Q\022\311;H?\315\274\301p\003\275~YP\275W\004Y=\336\305W\275\320\2254=\2446\272<\334.V\275\223\343\\\275&\263\250\2741%\333<\200\216\026;\242\246\004\274I\222!\275\344\361\021=\311\2035\275\262\271\346\271\267\034G\274\200\213\004=\'\017\003=_-\365\274z\002C\274w\262\356\274wF[=I\372*<\025i\\=}i\355<Q\317\372\271\316\314\032=\341\347\351;V\220N=\177\334\316\274mm\252\272\026\303\r=\024\0361<M\324+\273\327\215\\=\325g\031\275\337\230\221\273h\267\033\275\201/\237<$N\273\272\274\272\370<\354\302\265\274\037/,=\230X\327<C{\253;\275\2326=<\351\357<\232<\325<\007\234\212<\t\252:=\267<\202<A\302\010\274\333\"\331\274\266\332\201\274\375\332L<\204\237\227<a^\016<>\277,\275>\3658\275\033\030\372\273\000\3003=\264=\014\275\201\210\260<d\006$=\024VR\274\261\210\007\274\037\027!=Y\344\024=0ND<\244eJ\275\022W\354;\354\013<\275\226^\365\274\236\222\034=j\316\335\273\272\211W<j\363\204<\274\201R=\245\253\340\273F12\275\t\233\244;\000\241Z\275\370\337\257\274\367|\204:\223NC\2755&,;+0\002=\225e\254<#\206\204<\242\322B\275\262|(=\3472U\275\3314\210<\212\010\204;\233T\007\274k/%\2758]5=\256\272\267:\304\036\024=\365\243\255\274\326\317\013\275\004v\336\274\332bX=\227\363>=Zd\271;\374K8=\023\203\354;79\256;\362/\342<\220\320\254\274\004\213\241\274\003+\036=\377RV=\242dD\275\233\032:\275\211C\033=\360G#=)\357c\274$[D\275\272-G\275\267\323\231\273>\243R=\335i\020=\030\324\013=\016|\245\272n\320\207\274\026\3654=\3133X9\234\3354\273\326YN\275M\347\027\273\340\223\372<\274D\205\274\\\241\325\274\235\240C\275\037\365-\275M\351\027\275\323U\373\274\256\343N=\220P\010\275JsR\274J&\\=\\n\020=,\235I=\300pC=\311\357\362\274\275[\217<G\244,=\324}\220\274:\367\255\274\223pf\274\"\247\253<\335\343-\275u\205\t<\036\365\"=\034\326\225:\303PO\275\251_\350\272\351\002\276<M\336\377\274\374\317X=\300\327\023\275V\226\322:t\3740=\006\022L\275\321\370\014\275\270\317\033\275\271M!=.`\030=K\016\001\275e\205\257<\262\212E\273C\227\223<\006-\320<Z\261\343<\204\275Q\275[\303\330\274\211\307<=\363Z\235<=U\311<\2332\007\275=\322$\275(\344\004\275\355\210\205<\235\371%\275\177\237\220\274AC\344\274\302\227\260<r\310\356\273\324\306\035=\203\206[\2734Q\034\274r9\024\274\265\202\033\275\000K\014=\244\362<\275\340h\003\275\333v.=Bl\332<\310\360V\275\262\206\325\274u\224\314\274\227\336n\274~\267\r\2754\221\376<R\236\306;\243\305L\275Tw\\=\224=>\274d\376\023\273\014i$=\275\236\352<\336\236(\274\245\035$;\317\362?=\016\017\363\274$M\250\274<fx\274\010\255\\=\2432\236\274\325_\301\274\016\232\006\275M \256\274S\343M=hf\001\275\277\3301\275\2270\021\275\031\341Q\275\340\033\311\274\256`\363<R\205e\274\354M\317\274\376EN=\201N6\275+\025K<\217#\3549\337E3\275\'\035\024=0\320\327;\275\215\227\274J\335\017\274\224w/=\036\274;\275\330\3654\275\020\230%<ht\232\274c\305\025\275Z\344\004\275T3\004=<\352\"<\000K\261;\310\207\014\275r\325\027=\377\232Z\273\304|\031;h\3376=j\251$=\277\274\233<\010I5\275L\262\026\274\230\374\305\274\037(\276\274=B\010=\035;\237\274h\001\260;\306\033\004\275\374y4<\250\212\023\275\224ii\274\200\371K\274\022\340s<y\261\327\2744\0207=\320\207\010\275F\017\213<\223.\304<\305wA=J\250\r=!\2205\274w1\317\274K\215O=\013f\332<\321\267E\275\326\243\205<\230\250\240<0\275A\275p\035\200\274^\264\314<u\215X\275\373\372\"=AC\367\274\255\354T\275\362Q\332<\010G\273\2742i\242\274\331\352\376<\"5\021=\261\363Y=\333\367\234<*\231\014\274/\"\360<\020\264O<\277\320I=\341\\-\275\312\032[=\032\007)\275 \004\317\274\357\233 =\360\021\376\274\377%U;p{\357<\275p\022\273\376\003\001\274\356t\026\275\r2\242\273\346w\257;/\004\226<\313\212\320\274\271R\020\275\343y+=l\354\203\271x\344\'<\030T\327\273\026q?=\006\352\373<F\372\343\2747I\'=v\320\221\274\\\255N=f\222\037=\033\214r<\243?==\312\315!\2752\330\370<\024\330\"\274(\237\254\274\n\245\021=K\3307=\354\227\020=w\314@=\323\214\310<\215\205]\274D\3164=} \'\275\325\017 \275\2166i\274\017\260*=X\036\242<N\025\007=!\017\013\275B\331\2018\276t\017=\336\353+=\'n\205\274\204i&\2759[F=M\t\342<j\016 \275cuB=\317\267&=-f4\275\'\337\024\275\356\212M=\202\253\305<G\013\037=\312\n\374\274\340\233Q<\252&\t\274\024\300\n\275\276\200\313\274\365.\023;\010+\"=b:8\275\2133@\275\365\331\371<&\026$\2750F\263\274\2077\013\275\r\3033\274\216\231\214\273\252\351\204<\372\2006=3/\207\274s\035\007<V}N\275\211\235E\274\237\205S<\217\357\353\274\2518\212<\215\324+=\t\263\224\274}\nP\275\006\232Y<T\007\037\275\272\231g\272\265\257\276\274e\371\010=O\242\315<{.?\275t\036:=CM\000\273\300\335\034\275\010\211\013<\307\313\020=F\266<=[\353\230<Z\017#<\204\207\031<G\227\007<\323\277n<\261\256\200\274\306\025\264<\257\234\306<?\002L\273\351\264d<B3\356<EX\332;\'\327\277\274\356\306\024\275Q\251\213<\354[u<\371d\013=;2+\274\321\212\257<\377%\271<\324\234\335\274\215\274\256\274\332/\220\274\356\035#=\3237%<\035\330\216;r\332S\274\241+Q=\027\212\265<\274\317\030<M$\017\275S\212\246<\007\200\325<\220\016[=-P\325\274\367\367\243\274E\000(=\25592<s}\224\274G\3260\272\001\203C\274GE\377\273z\343\313\274\254\311=<[\353\375\272w\206\003\274\n\342\001=\0041\327;\265\351\013\272\366\364Q8\227m\225<b:E\275XTu;\326o\335<\272J\223<\356\034\013\275\214$\332;<)\204\274\336\3179\275\271l\372\272a\023M=\356\300#=_\217\341\274\037\235X\2758\205\'=?\223\351<u\314\000\275\303\0132\275\315\302\037\275\216\326\367<\275uV<p\236\\;\274r\356\274fRV=\201\303L\273v\263\013\273\240\000\235;\225S\253\274a\014\005=3\341\376\274\245\033\250;\276\345\206<\231\2406=\025^g;\002\203B\275l\262\n\275\331\200\r<U\273\265<\213|\010\275Ik/<`>\255\273\233\347\333<\006O\237<!\227\036\274\320\203\030\275\006\356[\274\264B\024\275\360g\210<ub\362\274\016[(=\312|*\273\3357I=b\372\220\272\003k*=\242\335#<ik:\275\214-\220\274\356K\357<\326(/=C4\030\275\2475\003=M\2242<\353U\231;(\330\013\275\304\220\243\273\013\205S=\3672\265\274 :\013=\226\316\363<\353(\315\274n\025\227<IL!=qR\020\275\t\357:=\252m><\232r\037\275*K%\275U\027\256\2722@\370\274H\265\t\275\367\367\023\274J/\237<\035\016B=d\331\350<M\362\263:q\302\035\275poJ=\262E\215;\260z\300\274\002\373m<~\376X\275\026A\014<f\212\201\274\022A>\274aU-\275\321\241\344\274\241\251O=\310\002\364\274\nu\245\274o\225#\275\212\016,\274\tB\035=\367\231F=\346\230E\275\022\320N=|\246\275<\376\315\205\274\263\\V\275\246\036\263<u\266\001\275Ju\201\274H\332\341<\223<;=\"\317\336<\245\016l\273\264b6\275\266kD\275\240\345P=\275\356L=\362\315\017<\351+\376\273!b\017\274\305\335\037=\274\243\316;\037R\020=P=H\273\212~\"\275C\302==\231\240*\275 \305\020\275\274\2334=\272F<\275\233\337\207<\316\272\306<\n\310\216<\317 \272\273\230\224\225\271\022)\207;9t\301<h\272\344;V\013P=\263]\001\275\270\005\335<\362\373\342\274\270\345\035<x\230\"\275\033\337\302\274\224^N\275n\351w\274N\020\354:\203\220\234<\214p\333;\371\'\r<\215M\354<\246\210\004=x3X\275qF\325\274\277XN\274\230\224\332<\275{\013<{\'%\275\304~\345\274\236\317R<\341\257-\273pz\017;\\A\204\272+\n[\275C.\275\273KI\232<!l\013=\206<\237<\306\231\347<\272F9\275\270A)\274\262@\304<\325\276\027\275\304~V=\242=\332<\273OU\275\035|Y\275\016\023O\275X\260E\274\204\207D\275W\031\003\275:cN\272\355p\277\274\264\306\004=\375S\215\274\350\251\206\274\n|\364<\n*\000\275\2673&;\213[{\274\203\331\r=}\006\246; \3225\275\344H\316\272Q\202Q=\244xh\274SB\016\274\347QA<\361\034\365<\352\322J\273+\225\235\274\321\255\204<\220\260?\275V\274(=\004\304*\275\313\211L\273f\215\343<\2749\323\274N\362<=\323\322\242\273Rt\235\274\233[9=\022\263T=\311\263\270<U\0033=%1\'=\207\345\202<\200\361!\273W j<\237\362I\275\275\033\001\275~T\236\274\306\014\267;\277\200\t\275\271\336\010==\237\210\274\3549\200<\361s\315\274\212B\001=K\030\350\274\223\231\033\275\260z\257\274\371\177\024\275&\212\220;\221\017\253\274\027OU;\003\323\021=\213+3=C\342I=r+\344\273\345Mz<\013L\030;\240.\325\273\262*\020\275c\025\214<lN\272<\353\304]<\300nb<s\356W\275\267{&\274\r\035\r<\\\030.=\r\371\363\274\243\250Q\275dD\252\274i\002\030=\035:\t\2750\340\263;\326O\216<U\2514\275r\260\014\272\342\363\030\275\364sa<\004\2466=k$Z\275K\247\347<\367w\330\274\360\251g\274\007\216:\275\324.\023=v\200I\275\213\205I\275\020\370Y=\224\265\013<\357\222\222\273\307\001\204\273\331gH\275\331\323\177< dY\275\214G\000\275Q]\037=1\310A\275N\376\325;\330N(=S\243\027\274Xd\251\274)\246\302\274\365\212\t=\263\234\014\275k\272\331<\363#\373\274GH\213<Q\346\230;\226h\033=\243/\035=<\240\033\275v%\364<\344f\356<\264\3523=\316\240T\275\336\247#=b\r~\274\214\3331=\270\214\237\2748\367E=\365\343\207\274\342\260?< |\035\273HV\n\274f\220b<\326H[=\240\335\240;\346n\273\273\363\026P=^k\201<9\307\001\274\004H\004\275\370zg\274\354?\261\274\371c\251<\203\'\327\274yDT=\240\375\336<\264\\9<\025q8\275\322GR\2758\274Z\2747\275S=\276\331\261\274@ Q\275\322\374\3248\3058\021=c\t\"=\014\201\n<\215\366\336<\255\226\272\274\362\246Q\275\031\017\224<U\026\026;{L\036\274\373\330\246\274`\226\247<K5\227\274(\360\315\274!f\270\274\221\"8=\356\016\023=X!\222\272bSN=\333a\030=Ka\353\274\250\247C\274\267\2716\275\377\000\020\275\213\250z<HM\022=\267\244\352;\315\031j<Jj\r=\027\305&\275\034\253\036<s\264\270<\372=\002;`\314\r\275\222M\206<,\276\354\274\tz\202<6\357\254\274\201\316\252\274/)\0209\257\340<=\036\275;\275\253\252\013=\226\356\365\274\315\350C\272\377\213.\275?.\177\274\254b\2179\372q\307<\024\203\207\274\276!\217;\337\364?\274\277\347\025=\317s\005=\224\245\\=\241Z\321<=\213(\275\301\2757\275S\027\225;\253\332\021=\000E\234\274\224e\201<lV\345\274\nIS<\351\371\n\275\361)x\274\253\302\337\274\346\036K\275\371\200\034\275\361\342D\275cbR\275\220{K=\376\201\311:g\327\234\274~\355\315\274\374\226<\275N}\361\274\t\030\240\274\341\267Y\275\223u\273<\020\354\372\274/\227\234<\000nY\274\323\233P=\271i\n;44\236\274\374\360\373<\316\346I\273tx6=\030\200\205<UN\376\273\033\343U=\236\336\344;f\306\277<\250\023B=;\277\031=t\321\330<+\311\277<5\243\005<\321\253\315\274|~)\274\017\335^\273\005\342\220\274k\036\277<\20414\275\345KK\274\221\2110\275S\237S;\300\343\037=\nC\022=s\t<\274VVJ=\225\'2=U5\006\275\356\366\310;\302\244[\275\313,C=\371\235\323\274\214vq\274\022\032A\275\274&\031=\357\230\t\275\356\2559<\211v\332<\311\007\336\274\324U#\272\2463L=B\023!\273\031\221\374\274m?\000=\366\212\322<\004\235\204\274\252\377\257<\335\207\213<\226\006\377\274\355\307\260<]cJ\274\215^\243;\"\212\373\2743+-=6\337\036\273l\374\000<\224\316\357\274\270\350P\275d[\372<o\3302\275\016\215?\275\314&C\275 <\333<\351\204\024<\341\255$\275\215\235\027\274\306\025X\275\212&.=9\315\261<<+<\274\321T\341<\010\241g\274Z\275\334<\310\277\251<\005\323\274\273)\356(\275:;\340\274Eg\372<(o\024<R/<=,x3=\241\240\021\275z\013F\2754>z\274\317\000+=\300\256\205<S\025\346\274O\301U\274\311\363\317:\340L\025\275\332\220T\275D97\2755S\273<\016J\305<\253$E\275b&(\275!_\261\274X\315\271\272\030\252\304\273\t\213)\275u\025\355<H\371\353\274\316?J\275p.\016\275P\016\353<p\350\276<\360i\240<F\270\362;Lh\305;%\373\004\275\'\354O\274P\235\223;l\222\t<\311\374\265<\273\345\252\274\255l:\275\325\017\262<\330$\022\275\023\376\261\274\016\376\253<\220\220J\274\347E\236<g\230\223;\301\227\274;\262\307\036=\230\222\024\275\177\033\374<\242\311\200<\276\352\344\274w*+\274\n\3668;\026\275\232\274\210\000\274\272<>1\275\352\362N=\306\002\327\274\256\337U=/\266.\274\001\2125\275\335\345\364<oIO=\200\203d\273tO\306<\352\2645\275\273\364\343<\335\201X\275\315\006\310\274\211*G=M\347\245<\355SW=\376\310C=P\352\361\273\345.s;\3659.\275&\024\026=\350\345\264\274`\\#\275\035\250\252;\360+\267<\341\317\014=\303\037W\2754\376\n=\250a2\275\260\t\314;y\004\247<\234~\326<\016\202\271;(\003\344<\202\277\016=j+\037\275\035\373\035=\347]\001=\301\272\030\275\335\265:\275_\310\374\273\n\020y9d\032O\275E\301[=;\303\324<\306\354h<\315\311\035=\242\366\201<\222)\371:A\016\203\274\377\262\t\275\003o\240\274\302J\351<rpu<$\300\016=\233!\225;\013\271;\275kVF=\256\200\347<9={\274\026\352\201\274\376\000]\275\032\034\r=\"v\321\273i\244)\274\325g\025;\022\310Y=LzW\274\230\037\334\274[\205\244\274\025\301Z=.MA=\007&\350<\237lJ\274\1770X\274\322\000\353<Y\303\237\274\270y\202<\310\223\3779\034\262_<\\z\000=C\320\355;B4\274<HI\244\272\373\253\365<o%\004=\243\'6=\236\264\367\272\002oS=\200\3107\275 \214\023\275\3035r<\3233&=*\3436\274\3514\005\275u/;=\212N\273\273n\240\251<\224I\373\274j\245\223\274@\325$\275\033\240\001\275n\247M<\367\264\033=\230~0\274\314\013\333<\333\346<=\374\212\037\275\001\323G=\204\203\200:\222q\346\274\215\353&\275p\3573:\323\342\267<\203\200\264\273U\020E\275,N\023=\353z@<\000\254#<,r#\275k\2139\275c\236!\275\264\351\036\274\340\346L\274\006\344\002=\275n\223\274\351\'E=\246Z\272\274\315\375\211\2742\377Y=\023F3;y\362L\275\243\350\350\273\216\035\226;\033\262\312\274\324[\344<\317\242\331\274u2\003=\355\007\021\275\230\362?=Y\321\007\275d\277,<\014iS=\006\177\333;\307\224C=S\274\343;\014\211\337\274&\275\240<Y\270D\275\006\013>\274\274\2727\2752\242R:\035\350\021<H\231\247<\366v\"=\016\t\346<\376g\003\275HZ\364;\354\337\004=\245\021\232<g_<=\377I\261<\335s\312:\202wW\274\n\0168=\273@+<>\244J=\242/E=\273\031t\274p\217\3119\202f\245;\364V><\210~_<`|\363\274\363\201\325\274O\221\301\2726\241Y\275+1$\271)\373\333\273\202!\341<\251\216Q=\351\0372<\226\215\021=\217\251I\275\351.\226:\000}\363<\r2\331\274\024\272+\275-r\340\274\r@\031=M\247\257<\302\332\004<\321\361,\274\365\201W\275\320\350\014=\251&`\273\236\336\247\274H\016\t<F\235\370<\033\267&;G\340U=\377\260\230<\270\337\335\274Q/6\275F\020F\275\222\004I\275\216\017\013\275V\240\205\274Ei9\275\257\336\277<\240\200j\273\310e\331;\200;0\275vb\347\274\255\2461\275,\271Z\275I\355;=<+\t\275\221DT\273\255Y\227\274\215R5<\314\013\361;\351c/\274\3211[=\016\200%<{Z\016=\360\025G;\266\345\303\274\202:\357<\262\365B=\372\232\n=@\266#\275Y\333\242\274\256\344K\275\367\253~<\372\247==\001\336?\275\222\231\335\274\340\324\305<S\215\357\274:k\010\274\030\tN\275\303\226\367\2740nV\275\372\231;=\202E9\275\223\366\002\275\311IO\275\222\0265=_Y.\275\306\031I\275\334$\213\2749q\t\275\3718\315\274\277m\034=A\340\237\274\222\357A\275\264\366\252\274\236\'Z\274\036\341)\274f\2666=\nl\'=\333\224\025\275j\035,\275\373:\035\274o\2176=\035\261\374\274\267\0232=\371\035\301\274\034\nT\273}\224K=Z\013\006=X\260d\273\344\235\274<\247\215\337<\334\377\357\274\037l=\274k\027<\273\215 c;\231\023#=\":\242<\247\272\030\274\020c\364\2743\307\\\275;j\004\275o/\314<(YT<\2574\306<\206\265==\371Y\313;^\333!\275\311\223\004<iD\354<\320\270\276\274@\202/\275\'\313B\274\206s\030=\322\251H=\377\325\005=~k\225<\240\272\375\272\022\303%=\300i;<\265\003C\275\026]\300\273K\214A\275\315\331\000\275n\202\307\274\001O\244\274|E\256\274\226\370\351<\033\2228\274\235\320\024=\240\331 =K\002/=N\223M=F\211\010\275n.\214<!A\275<P\177\237<\013\367\376<\325X9\275jl =\010\313/\274A\254\001<\3369$\275\370K9\275\3075W=6\316K\274\256\343\223<\3374\353\274+\023\007\275\321Kj\273A\237\323\273\215\367w<K\213\320<{o\204\274@\324\010\272\373\344\333\274K:(\275\223~\034;\347\243)=<\213\020=?\342\316\273e\236\357<\303\203,=\354\345}<b/<\2741\017\276\274\017\230V<V\006_\274\344\211\306\274\217\364\242;\377\203\033=k2X<\2068\017\275\254\232\003=\372\377\305\274\375\310\360<\332t\342<~o\322\274Tu\000=\232\214\356\273\361L\002\275 \255\350\273_\277Y\2758\237\003;\016\263\322\274\241I\333\274\177E\350\273ck\020\272Y^\326\274\2240\"=\203?u<N\177\346\273\203\014\034\275\301M\004=\212\344:\274\365\346\016=-,\243<\000\225\353;j\314\367<E\313E\275\032\323\035\275m\351*\274:\221\020\275<\270\370<\257\200Z\2745\273\330\274J\001\035\275\247\211\265<\211\216\231\274d\001\306<\234\343H=\024\330<\274\364\321X=9E\213;\225\212(<\333\004<\274r\345\345\274\266\352\350\274\2025\327<\035\223\234\274\253rq<f\210Q<i\200\256\274\371\017\010\275x\275\001\275\257G\265<\241\234\213<\315\001\000\274\363\r\353\274\326>\204<\273\025\r\2756\232\002\275ea\366;\327^;\275tfS=,jV\275\253\377f<\020e:\275\020\265\004=\275\027N\275(\3729<\366$?\275\022l\357<x\347\336\274\342?9=\236\342U=\325\236\343\274n\252J\274\202ok:\3737N\275\371\317\264<OA\374\274\260\304\243\273w\001\263\274\257#A=\271\3210=\263\331\262\274\200\025\222\274R\371\350\274\206u7=\356V\331<\311c\3268\373\326?\274\366\243V\275\250\345\017\275|^\250<G\251\215<\020\253K=kKX=M\216\373\274\037\214\223<Eo$<Y\320\236;A\036\253\272\246t{\274\265 .\275s\177K=\255rS<l\212\274;\3512p;\0178|<\350/\246<\304\3323=\333\310\035\275\207\034\222:\236\005*=\367\033&\275\252\354z<j\251\242\273\006\034 =\353\000K\275\003\320\371<B\374\271\274\034\021y<W\376\213<\373\356\\=X\254\242<\353cM\275\276\2470=M\014\327<\335K\027\275\365\"\327\273\314\263Z\275\206\r\314<\2170\317\274\037\214\245<\266x\005=\273q\320<\255\206:<\201\363\347<\306\324\033=+\207\037\275]\3525=\323\257z<\332\227\305\271\303\223\000<\320\220\230<d\355\223<\036\212\244<\313y\314\274\n\346\214<\206T\305\273\333\035\252\274c\263\351\273\252\005O\275\017\235\003=\1779\033:\221\273\252\274 \006\265\274\300K\'=\276\017\327<gm\006\275.X\255\273>\2568\275\271J\206;\244\'\254<\315\345S\275\221\254\212\274R\202\002\273\307S/:\002A\247\274\017\273m<\255.\264\2749\355\035=\250\027X=\343\r\216;^\303\004\275_\317\324\274\020\243\211\273\201N\333<\317\332m\274\007\221\342\273\252u/<%\200[=\262\243H\274\316\005*\275\220p)\275s4\007\275\337\223\225< )\177<\3302\273;\374UB=\251\3337\274mL5\274\337\365\304<\007#Q=\324\274#\275K\005U\274b\003(=\270cL;9=\250<d\305:<~\233L\275\263\246h\274L2#=\314L\340<\030C<\275\327\240\214\274\213^\327;i\223\233<l\317\212<\312\244\310<uB1\275\000\343\007=\021\023\374\274\321\227\245\2746\217\003=\335\010\000\275i\212\252\274\304\177\244\274\245\253\006\275\352\231\006<j\337s<\340\275I=\257iK=\303k\n=4\225\301\274\333\025\017=Oa\253\274\235H\216\274[\270\007=>&\021=\345\350\000=\234\231\375\274R\2218\274\300\262\361\274~\224E\275\246\0078\275w\347P=\377\344\034=?\240G=>Q\005\275$^>= \010Q\275\236\252!\275\356\320H=\271\226)=\014I\033\2746\2137\2750\244O=\375\362\376<\305\267 \275\333M\033\275g\2507\275\357\\O=\275c8</\321\377<\350\240\014=X\223#=\344\376\006\275^vB=\325|u\2746\277\246<\014\330L;u\310&=\227-\024=N2V\275\324\263R\275<\230,\274\320S\"=g:\363\274x\377\360<\366wc\273z\0323=\030V\277<Z\377\207;b\177\020=\221\033\306\274\217\017o\274\\oR\275\t\272\n=\357\211\007<\225\377\207;L\314\t\273\364\372\212\274\201\275W=\327\252\262\274\331]\004;\245\216\260:\037y\n;5Q\032\275\242\333Y\274\312\272V\275\271\352\002\274\236\343\023\275\267\365I\275\\|\005\274\377\024\261<\177\335];+HZ\274ig\023\274\033\307\013<\323N\300<\324\340\261\274\3268\230<v\265\322\274\223\276\020\275b\236L<\0267\001\275\265\330\270;\262\264\272<\317\300\354<\365\354]<\324\307@=\2617\305<\023\314@=U\256\020<\004\200\253\274\223\361\027\274\310e[=\312\3666=\335_-\275?\003\213\274\305\036<=T\177\037=D\234\250;\310\003+\275\336\350\020=r\274\375\274\365\316\223\274O\224\002=\230\372\'\275\320*A=\350n\356;\017\254\\\274\350^\034=\374\n6<*\006K\275\236\031\377<\336\344\271<\003-F\275\000\355\'\274\360\200%=\331\037;\274Y\211X<\207g&\275\225\010\252<\022\215Y\275&X\033\275\340\246[\275\312\234\313\273\3702`;\262\363r<\277\000\025<)\211_<`\264\254<\014w\302<\367D!\275;\216\010=\264\266\336<dD9<\210\272\364\274\373\355#\275\350F4=6o\t=\300)\013\274\034P\004\275(\034\003<\337d\315\274\211\360}<K\220\241\274\203\025/\274\302N\356\273;\0136\274\205\0211;\331g\007=q\260#\2756-)\275Y\201$=q\037S=\237\013Y;\272j\315<\325Z@\275\324\326\004=G\237[=\276\274;\275\215\230\032=\232q\366\274e\200\321\274d\344Q\275\315\277\004\275\221\322)\275\007\366B\274\323\276L<y\352:=\345B\374\2739{\300\274\342\272\223;A\005\215<\331G\261\273\275!?=jB\250\272\033\326-\275\333\271\300;v\341:=\002\301o\274\263\241J;\311\220.\275\355\340*=\253\356\326<\246\277L=R\220\004\275\271\003!\273\225n\203<\262\230J=\241\210Z\275\326\264\027=\274\037=\275Z\001+\275\201\324M\274\002)\313<\031\020]\275\321\224\365;\274\030n<l\2104\275f>B\275\277\310\357<\030\216\014\275Z\316V=\036\n\224\274\364D\030\275\247^K\275,\362\235<\245\264)<\r\243\327\2746\305\223<ZQ\020\274\325Y\022\274?|X=\361\020\014\275\300\231\211<\027_4\274\376r[\275\357\244N\2751\014\362:\264S9\274\234\302Q\275\025\2535\275\360SI\275&\2434=\336\032\265\274z\303f\2741y\300\274\252\\\313\274?\022\t=E\274S\274\001\210g\274{\200)\273\333\3612=D\343\026\275\031$?=\276Yi\274\215S8=\240\020\223;\010\016\226<\240xW=\301\236\221\274\273QF\275\013O5<\371\234\r\275\207\272\360<\003M\241<\260\007\301<v\312 \275*\305\213\274F3\357<G\035\233<\003\314,=\341\3754=u\313L\275\366\314\305<\341YZ\275\213\236\352<;\227K\275\256\223\"\273sB\342\2741O\005=q\305-=\262Q=<\351\247\217\273E\2067=\351E\030\274\343\350\'\275z\025\353<\272\351\245<\234\303S=\303U\215<\027\033h;b\256\240<\247\217\016<p\024\266\274\233gT\273\363-6\275\240F\276<aH\327<\000\224t<\346I#<K\367\324<\2664\257\274\206\272\252<?\321\030=\034\247\214\274_\227\004=\317]=\275\311\257\204<\007t8\275u\201[\275\330!\026\275E9\244\272R\016\'\275:\370\222\274\365P\323<\275\2070\275Px<\274\262\215\\=\'\022\227;\333\233:\275\227\311\014=\332\342B=(\243@<\013\005\206<\230\3459\275\250\321;\275\327\332\026=\320\205<\274\345\303\3309\222\362\336\274l\351\322;\320\312\227<\267\247Y<m\023\003=z\327\327\274\276\327\357;\221d\327<\223\227\031\275\201\253\031\275\022`\357\274U\375\021=S\264\300<\223\376\014\274\021o8\273\363\027\203:\375S\270<\t\326\305\274\3617\300<\037\304H=m\317\346\273\235\277D=\177\020\230\274`WZ=\317\302\007\275\372\333\217;\226\364<\275k\303 =x\0032\274W\316O\274i\365?\272\004\317b\274l\270\343\2748\305\257<\025\t\\\275\004a\020\275\016\203z\2743\300@=z\345\374<*\013\343<\014\002\237;\370O{\272)\357K\275\244\376\020\2751\344\336<\204\302\372;Q\r\274;\322$\321<T\363\331\274\010\244?=\312\000\020\274.T\210\274\320&\272<dg<<\032\233\235\274Z\371W\2748\203>=\360\353U=\0172\334\274[P\326\274M\315Y=\224Tp\273O\2125=\251\007\340\274\276\r\342\274BR\247<\363\364\014\275E\'K<\022\020\201<g[c<o\356$=\377\234\211\274\257\t\215<3\017\245\274XSS\275\241A\335\272\302\230<=\014J\002\275\353_1<\374$\025=J\005\253\274\324\016(\275\276$N<\302A\252<J#\023\274\340\306!<\306\264%=\214\231\265<O\006I\275^\217&\275\273oW=y\317\007\275\3723\251<u80=E4&\275mN\330\273`\317\272;\377\336\260<\261\271\220:i&\330\274ZZ\241<\266\'\031\274\006@\322<\262\001\313\274\201\010\022\275\256Y\202\274\202\214\352\274O\230\221<3io\274\021\2225\275Q\351A\275*\374\311<A\245\307<\026\224\005\275b\022\377\274\315\2159\275\r\234/\275Q\270\202\274.Yu\272$\231\231\274h9==OI\031:\320\013\273<5\340\356\274\010\'1\273\254\202\013\275\336}\006\274\326\326>\275\27318=\246^L\275\240o\327<J\360,\274\027\237\264\274\260\303;=~Q\344<\271j\234<\373\344\211\274\0256\313\274\261\021\000=H\245;=\320d\227\274[V\026=\370\240-< B\241\273\n\025)\274F&\362<\230\376\341\274\244k4\274\267\243\343\273\203F#\274\323GY\275\034C\2238\034\251\314\272d\230T=3\"\020=\316\332I=a\371\225\274\000\300\010\274\r\236X\275`\321L=A3N\274w\323Y<\021\306\033\275u\311\213<<\006k<\252\355q<\210\000\027=\350fi\274(\337\361\273\241\211\'\274\024\367\221\274\255O\350\273\243\314\254<\003\323\021<\300\020\001\275\263`\013\275\272\352\256\274\177\354\'\275\332[>\274\315|\271\273kM2\275\310\202O\275\003N\032\2736w_\274\366\331\332\273\207\276>\275-\210\022=\204\373\202<\035\304\224\273\263W\267<\272\257F\2758\346\341<\2327j;\316b.\275\265\277P= \372\275<\274\267\310\273\275\320@=\235\010\241<\242\237K=\350\261#<\027&]=\217\n\"<\305\347\003\275.2]=\322\342\213\274\t\266\340<\364\005\251\274\032F9\275\371L\325<\256k\025=r\303[\274\322x\005\275)\031?=\3501\351<\2224\216<\377lY=+\006W\275\234I6=!h\033=\332[2\274\025d\016\275\322\357\033\275\010\251v<\333\001\367\274\002x8\275\350\305O\275\201\005\\:\023\327\2719&\237q\273=;\212\274r\373\013=v\000f<\373\364\236\274\022\253\250\274\3104\265\272\205\002\261<\362\276\270<1\320R=\027\321 :R\001\"=ke\030<M@%\275}Ss<\234v\230\2724\342\032\275\n\217X\275\221l\014\275k\004\371<\260\351\027=\313f\251\272\250w\206\273\267xZ\275m\362\024\275>\000\323\274-\263\360<\020\351G=\025\236<\275\346:\331\274\274\357Y<g\\\n\273.q\351\274\341+v<\".\224\273\016\312\'\275!p\233\274\257<Y\274\262OR=\270k@=x\374\251\274\361\230\365;CtO=\240\027\351\273\253\370\377;\376\316\274<\263MC\274\t\326G\275?1\n=\321\351\017\275S\324\322\272\320\324\034\275\376S/\275)\233\237;\336C\2179\365|\017=\337\0163\275\355&\376\274\002\314\311\274(\250\014\275W;V=k\rF\275\\\211;=\005eI:vBK=F\315\210<5WF\275\350\244\351\273\301\326\"\275\247\240K=\306\364g\273\237\314\353;\360J<=n\022#=+\177\265<4\\\034\275\373<D9:\0323\273\303c\036=\226\203\277\273d\237E\275^\256M=Y\364J\275\264\200O<\255\013S\274c\266\"=l\220E=\020\362*\274\037\253\013\275\017\335\266\274\033I\311\274\177i\337\274V\376*\273\017\236\033=~x\005=\250\274&=\005\255C\275\037K`\274\211\341\361<\3246I\275\372D\357\274`\322\346;\206\013==\354\250\373\274\266\307\\\275\306F@=\310\004D=MZ-=\010\232\223<\254\207T\274\022\177*=\342\336\344\273\351\010\210<V\035\033\275\"\220Z=\315\313\207\273\307\264>\275\354\' =%\200\321\274\256\233X=}\t\006=\317\225\257<(\275\341;\354c\000\274ji\271;\3341 \275\006\264\346\273*\222@<\305\256T\275El#\275\273\261\224<\001\177S=\263\322n;`\300D\275\271\265\316<\345\031\n\275\244o[\275pY\267<\354A\371\274\362\006\036=\353Z\027=eT\240;j\242\350\274\335\313\254<I\241\336\273@hY=\035)\336<R\245\261:\366\371\010<\023\366E=\346/&=\2528\262<l\251B=\206\025\014\275Vh\341:2\272_\274\002\311P\275u\3327\275\357\313|\274$\301\371<\253\322\300<F\352\212;\247M3=\242eC\275\356\2611=\3111\243\274\235X\334\274]:*\274\200\232\320\274\335\315\006=\354~\246\274\003h\245<\226\236\260\274]\0240<n\025/\2750\226\256<b\253X<\036\"\023\274\357\256K\275&\320[\274\360r\224\274{\326\023\275\322\0348=\007\272\003={\324\372<2\006=\275\3564\322\273on\217<AM&=\210\272=\2757\203J=@\225\211:]45=r0/=m\232\247<[\016\016=k\022/=z\221\233:+\231\230<\272\017G=N,\200<\257X;\275\rN\n:7\340\022=\336\017R\2755\026\264\274\321\201P=\005\363H\2755w\221<\002\351\312</!\363<\262\000\264\274\333\211$\275R\356D=\231n\212\274\031\"\007\275p\205\354;\227o\037<\202~\202<\247\275K\2758\200\321\274m\262\302\274\307\034+= \303\377\274\302\253\020<F\302\247\274\357c\202\274\266\013\312<o\302E\275\"\021\304<\255{\004=\016\302\377\273\031\345\013\275E~Z\275\340\024\215<\200\200\020:\016K\316<\301I\317;\232\361\022=e\262P=\263\177`\274@\360\037=\361\320\2409\230\302\267\274\033\021\334<!\021\204\272\257|\025:\017\003k\274P\3414<\277\251\001=\367h\337<\336\272\333;+]\355\274\346\033N\2758LX=l\357/=\014_U=^\223t\273\013\024\007\2750\222\242\274\250\006:\275\r\235\330<\236\033T\274(*.\275>\367/<o,\206<\333\007\025=\342V\307<\375pR\275\0210\262<]\253\273<]\244\014\275(\r\316\274\371\005\363\272I\351\237<\357\361\'=#ZB\275N\233\321\273\372\366I=\t\013\226<\037\253\333<\331\000\337<\333\276y<ud5\274\351\026R=\364\324k<\276\363K\275\200}c\273\373\222:=YL8=Y.\033\275dd>=\023\311\350\274\246\260\352\274\360z\014=\"\r\366\274c/P=%8k<\374\324&\275\246\201\202<$w,\275P\305(=F\340&=\000\034&\275\025VK<\223\334;=\333!L=\252$\034=\024\002\256\274\2465\225<_g89Q~\361\274\235\241\227\274\345W:\275\022\2067\275\212\216<=\000+P\275k\241\007\275F\315\006= \306F\274\322\337\021=\231sN=5\037B=*\274\024\275\354Z\261\274Wu\376;\232K/=\207\371\254\273c\3440\275\333\341\272<\240C\274\274\236O\334\274\3745X\275\273\273,\275\372\026I=\325!D=\034@S=\247\340c<W(?=\372\025\270<\3011\317<\234\335\275\272\254\253\317\274E\250\261\273\345Z:=\273\355\371\274h\216\"\275v@}<\2713==\262-\216\274\t\262\335;1J\200\274Fa\025<\321&\r\275\262\243\230;\000\234\376;\343\225\201\274\376\262\240<\354\035>\275\226\3712<\314\206=\275,\334-\275\263\306\266<~\211\310\273\265\021\203;5\344\000<\310\010Q= y\250<_\207U\275\n\315\351\273x\344\"\275m\000\024;\304\241\317<\007p\362\274.\347\'\275\254 \037\275\263G<\275\007\340\032\275\343\314\256\274\246\263\377<\221\334?=&y7=reY=\315T\326< \360\036=\336\344\n\275\214)-=2\037\237<\3061\363\274$G\030\274*\246k<X\236\372;\202\357,\274.V\250<\240\301<\275\'J2\2750oP\275\360\201T\275\252 X\274j\216\035<\256\023]=\301b\004\274\267\203\247\274 \344\307<\306[R\2735HW\275Y\345<=\373\251\315<\317\306\342\274s\350\231;\304\2305=\277U\300\273{\347\t\274\322\r>=\352\2772=x{|<\304\230\313\273\034>\350<\345\006\217\273\242n\033<\006\3407\274{$\377\274\332\034\225\273\203^\'\271y\312f\274=\361\010<_#U=;\314\300<;\356\272\274\233\217\373\274\337S/\274\251\037\273<\207\365\031\275K\307[\274Z\251\377\274s\033\333;\212\010\353\273G\256P\2754\254\365<\255\250\000\275s\366\320\274|\357\037=\020\326\327<\035A.\274\314\227\234\274)\301(=\320\372\\\275\230\014\265;\373,\266\273\233\022O\274BX\203<\030\300\034=G@,\275\r\2463\275\356\333M=\225\207%<(\3416\275\373v\027=\255\033\211\274\203\256\335<Bl\221<\317\265\014=\347\262\261<\377v\237\274w(\275<\200\360\t=b\001\374<\230\014\351;\246iZ\274]g\376;My\376<\374O\036\275A\244\251<i\351\037<V\343\271<ayS=\374\376@=\371\326M=\306i\347\274j=\352<\327\000\017=7i\311<_\0138=\257\001\033\275\\9\374\274\232\262\263<?\315\242:\026d\024\275\217\334\323<\231\263\362\274\002\367\031\275\027\347\255\274\246K\034=P\017\010<|\220\224<\370b\256<\242\004\032=1@\023=\221\343O=af\240\274\317\3445\275\241\301\346\274\357\267\030=?D/=\n\260\233<\031x\302\273\314\357\246\273\340\366R\275H\211\026=6\317\r\275\002R3=\010\223\327\274\217\0170\275\310\323\025\274\276\230\023=\216K3:}\202\\=H\035\301:&+\027\2739>X\275( )=\270O\'=a\332\370\274\356\315[\275\333*N\275\222\353\031\275\000=\365\273\2641u;j\005,=nn*\275\226ff<\300n\311;\375q\377\274\007c\330\273\225\322C\275\322\017\376\274\270\276\r\2750J\317\274;A1<\3231\315;\221\261\211\271\006D\010:\223\320z<X\335x<\225\036o<\365d\240<\330\374T=\362\361\246\274\rbT=\253\3707=\211\376K=Ix\212\2734\275)\275\247uT\273\367\024\376\274\323\326\017=\031\367\327\274\353z\234;\253\311\332\274\235\370C\275\372\3014\275\372\253O\275y\215H=\335\327\237\274{k\035=y&%\275\306\032\271<>EJ=Q\0179;\320\303 =\030\256Y<\216\321G\275u\023*\274fgM:\344\266\221<\220\265\341\273,j\313\274\n\240\357\2744\r\001=\336\252,=\333\303C<\241\322\320\274\262W\037=2\r\002\2759\375\224\274\261\335?\275\352\177.;R>\232\274\251\326N\275\236\306\273\273\2264}\273;\2776\275\246S\274<\216\371\312<\300\363<\275CE\311<&\245\351<\200\365`<\344V\221:\353\324r\273\n@\267\274\2350\306<\264S\003\275\321\271V\2745\201\226\274!\343:\275\377\034\274<\317[\030=f^I\273\246\020A\275\017\357\270<5\332\250<\2709\274\270>#\267\271\232\240\'=\236\253\261<nGQ;$\370\014\275\315\360\363:\276\304\336<wQZ\275\276\270\230\273\017d\206\274(\0049\274|\245;=E\205i<41W\275\177:f\274\016\341\204<\035\343~\274GCC=\350\253\362\274\364\360O\274\003\313B;\324\010\222\274\037\314\344\274\204\330F=\235\370\027\274\020\256-=\362\"\001=\246f\020=O\251\022\275UC\006=\353\250\215<[&\025\275T\320\023=\327c\302;\211\264\226;\236P\373\274\262n\207;\rU\025=\260\203\006\275y\335\003=zvB\275\226\324\267<\264\356\031\275j\200\354\273\237%4\275\242\013\020\274\300T\325<E\352\025<C\352R=\272\0256\275\236\301\247<\016\253L=.\266B\275\304S\353<U\006\371<T\0003=%\310\'\275:\377\307\274\216\n\277;_\242\020\275\321\037[\275f~\336\274UC\301\274\305m\251<\321\351\362<\022kH;\346XV=\006\2464=\250\241-\275\\\255\373\273i\213\036\275\313\264==\360\331\002=9)\n=\377\\\364\273$\344\037\275[>\302<\233V\304<\344\305$\274\027\261\365<A\223E=3\014\323;*(A=)4\t=\252\177\366\273\0169\277<\003J7=\261\311\353\274\014\"!=\206\n\007\275B\267\264:\021OH=6\270I\275\255\210\024<\000S\246\273Z\276X\275\206D\020=\007AK<\235\n\001\275\336\332\240<m\202/\275\351h\020\274\002\212\370<\310\221\320;6\302\034\275\322\217\r;D]\010\273\007\221L=U\024\271<_\377L\275g^B\275\001UP<\276\276\317;\022>\366<\337\005f<\022\007\233\273\241 \276;\354H\301<\345\353R=\017\035\326;\272\2445=1`!=,\374\375<o\312\350<{\345\016\275\317Q\221\273&\214\341\2739x3=\302\221\017\273=B\375\273\205\231*\275\024\236w\274\237s\324<\201`D:%\257T=L.\014\275\351\231*\2754c\336\274\306\362\215\274\235\207?\274Q\346\245\274\275P\004=\350\033\232\274\311\027\023\275\337\256[\275\214\202(=A5\224\274+S\203;{\342&\274\320:$\275\342\276\236<\224\001\315<\321\031\234\274s\245\037\275]\253\301;\023\255\353:\376j\322\273\277JL\274\033\255\214;\221\252\"=\375\356\\\275\324\202>=\030r\263<\331\022-\274\261W\305\274\301\022\324\274\306\371\013\275\340_\334<\026f\017==\201r<\321e\376;f\211S\275\303\324\277\273\211D\223\274\341\210\267<\264@\250<$%\204<\331\265\031<\331\3064=\316\032\026=\2019H=\232\356:\275\363E\334<3\300S<D_T\274%\223S\270i\265\277\274\253\217%=\031F2\275\336\224\n=\375\245(<\233\022U<\212\356\323:S\000\235<5T\300;\310\225\376\274\n\255\022\275\006r\304<\001\206\336\273/\005O=\326\345\211\274\365\027\246<-\354_:Y\245L=\233\374\003\275[\2722\275M$<;\312\276\242<\327~\035\275E\364\340\274\376\245K=\347\022\271\274\022\206\272<\346\227\"=\177Z\246\274\252,U\275D\212\032\275\005F\321\2748\305D=\335\360\3779v:\351\274\273+\333\274\272\307C=CsJ=T\357\311\274&\\\256<\347\336\021=[\265S\275\271}\205\273\241\027\214<\2750\035=\260\252\366\274\n:\264\274\263\231+<\326g\014\275\3379R\275j\214\334\274\371\303w\274E(g\274\321\222\250\273:\214\227\274o\232\242\274=\322\216<\223\024\000\275$Y+<\223\255\215\274\031\352\337:Bu\331<V\265n\274b\240\223\274\274B\322<8\266g<1\227f;Pd\215<\303\232\035<\371L\354;?wL<\3577\315<v\254\373;\315\307\027\274\275tO\275\254\n@=fZ;=qp\013\275\263\334J=\214\306W\274\016\335\271<{7\237\274\3124\243\274\222\005-<\201-\020=-\0043=Y\222U<N\000\253:c\304\204<[z\262\274\273\\L\274\311o\005<\333w\304\274\371\360,\274z\242%\273\030\276\021\275\264\204\341<\212\246\326<\275:\360<z\275\014\275\272\375\233\274O\312?\275\317\325M=M\005\341<h\317b\272\2360\255\274J|C=\316}!\275\n\213y<\250\304O=?\360\314;h!.\275\t\266\\=\347\202\007=\321-\004;\366\3325=\344\346\321<(&\035\275u\213\257<WF\034\275\360Vn<\t\362a\274\005\010\'<\3547\362\274\341\261\004=\270\2246\275\006\3207=\354\017\032\275@\311\021\275\202\016\030\275\t<\305\273oRC\275\361\223\005\273\334\310`<nw\030=6\034\274\274DfZ\274f\336>\273\277\207V<\244`<\275e\303\'\275w\254\004\275\355\355\027=\306r\034\275\301g\036=\235\357t;+}\301\274\201\352\305\273@;C\275\213\267.\275\342\004\"\275\026\3260\272\321\224\372\274\272\204\023\275X\226\322\274\242Y\304\274E\276\327<\366\364\245\273\315h\350<NV\025<\250W\357<\321\300\033<5Re<\262\035\0049\030c\360\274R\n\310<\022\360\t\274\377\317\203<c \371\274\237\222\034\273I10=%\346P=\271\\\363\274\327\006\244\274\22277<\352\371\214:|s\025\275\004\313\351\274D2\022=\210\274\r\275\344\020B\274\310M\010\274\256\347\237\273\230\262\235\273\316vZ=\212\343<\273\210#$\274\352\236\326\274\336\"\346\273\260.9=\311\323\263\274\201\324\372\272\365\033\027\275\036\376\016\274\305\354C=\004\331\036\275M\037:<l.\245\274,s\016\275\t\335\325<T\357\257<\036\t\016\275\030\251\017\275\202\322-=\206\231Y\274YO\372<\210\251K\275\205;\301\274d\006\302\274J\000\004:\3264C=\357\257\014\275\376\357Z=\276\371e\273f%\222\274\002\257R\275\033\000\206\273\372\330B\275\2233\353\274?\001;\275\350aC<\347\272\223\274\247g\001\274\241\243\237\273\030\340\351\274\257\362j<7\005\250\274\207g\271<tH\031\275+\203V<\204\307<\274\245dM=\345dg\273\032\371J\275^\177C=\023\014\377<\361\203\253\274\312\022\342:\335rA\275\270\016\002=O\010`:\177\0202=\367{\337<\334\006\007\274Q\031\002\274\r2\036\273T\3205\275\271\263\230<U`\342\274\357\000\300\274\034\254\021\275\025[[=#\314Q<\354&\320<9\225V=R\307\372\274\273\350\236\274\351\361\000\275\365\347.=YT[=\356_Y\275\305n\303;\352u$=\315\375N=#q+\2754\026\306\274(\250\364\274LS\331\274B@h\274\303jG=\t5\037==\206\r=\260\205T\275\375\025D\275\220E\335;J^/<>\245F=\312_\020=o\016\031\275O]>\275\262\366!\275\311\355*\275\3132@<P\242@=\274\324,\275\350B\003;\364\353\251\274\377\204\016=\tQ\027=\211\266?\274\221\200B\275\252\345Q;\004\005J\275P\302.\275\257\307\351<A\027\010\275=\336R\274\362\230\240\274a\'\266;u\251Z<U[\203\273\247\302F=\222\356\364\274)\362\035\275;\240Q<\203m\024\275\334\355\017\275\354y7\275\253\021\344\274\027T\001\273\350@G\274b1#\273\021\331\021\274\337\025:<\001H\035\275\3433*=\260\004\036;\204\267\033=_\372*=\301\231\252\273\017\375\000\275\200;]\275\017w\353<\320\010=\275\0221\005\275(q\006=\177\233\345\274\361\362\017\275\351\027\272;A\322e\274\253B\245\274j\277\331\273\027\317R=\'W-=\271\365 \273\327\375\204<\372]C=z\315\003\275N:<=\306EV\274\265\350\177\274\366\n4\275\330C\007=\004\303\006\2753\275$\275\325\355\363\274}\336\342<\351\n\326<}d!=\303\233\320;\0224\323<\256_\023\274\375\310U\274\333S\036\275i\001\321<\241\275(7\342\261\345;\366\343\010\274[\334\264<\037\254?=\203^=\275\\\000D=\004q\317<\'\0358\275Fg\377:\022,\020=\373\035O\274v\246\213<\376\222\022\275r\241G\275\210\326\365<H\304\326\272\370\261m<\365\373U<\316\223I=\302g\333<\243\354\033<%\003\326<.\246-\274\376\032D=\236i\t\275\300\336&=_O\001\274\237\002\213\274\353\262\244\274\330\301\n\275\007E\371<\230U,<\014X\375;\2145\261<\006`M\275\020T:=9\035\321<\277f\005=H\212E=`T7\275\220\324\020\275\260\365V=\254\320{<\370H\005\275M#\215<\0038\273\274u\246J=\220\0330=?\255/<B\033\313<\365\017#=\300\232E\275\020\304 <\004*\317\274\233\202*=\233\360\034=k\301\004\275\350&\246<\033LW=^\345\347;\035\353\337\274\215Hi\267L\327\207\273\023m/\274Dx?=\034\004\337<\273\235\024\275\344\276@<{\346]<\"\332a<&Z\310\274)\216/=\275!%\2748A\003=\014\325=\275\221\373\246;\331\315\375;\r\306\256<a\031K<\217\201\277\274\215\237\213\274\245\363$=\024k$=\277\221\220\274[U\025\275s\303\034\273\\[L=\3160\003<\373\357\037\275W\3567=\201\013\256<\347\033T\274\177UX<\376\342,<\375\017\313;3f\013=(w\237\274S\333x<\274zT=\214w\325\274^S\377\274mR,\274\316yA\275\373\302u;\272\220G=\333\2263\275V.\314:g\340\235\274o\031p\274;g#\274\330=B\275\006\256g<\276 )\275\0213\014\275\207E4=\005_\371;\241G\301\274E\003\361<\251\316\372<A\327\'=\021\320G\275\\ZB=\267\201\260;1\3016=\251\265\013\273\037\305\240<\230l\033\274Q\017;\275\026\321\004\274!a\244\272`\233\304<\257\022<=^|\017<s\021W\275}\202\305\274!T\350\274\253\326\034<\205\330\021\275\264\037N=R\324\364;\300\333\221;\252fU=\007\274\224<\203E#=\351\327N:\236\000<\273t\317J\274\2008-\275b\313\000=\242k(=\020&d<\201\r \273\322\217}\274\305\032\323\273\t_\321<?Y<\2751\222\255\274\177\200\266\274\257\301G=\304RR\2759\371X\2753=T\275g\216K\275O\372\344<\n\335\323\274\333\037\313<\335?\336\274\017\361\265<\246\325\247\274l!Y=xn\016=\177z\330<}\253\326<\354\226\256;^\342\356\274j\374\273;\301:\275\274\366\350\020<\312\306\226\274Io\327\274p\371W\275Bq\017\275E\323\002=yW\231\271E\267\267\273\242\224Z=\331S\n\275\206\305\235\274\266\200$\275\327\313D\275\216w\301\274x\323\261\274\330\000\233\274WJA\275\2071I=)\301\220\274\277k\254\274D}\302\274\002Q\371<\"\273\030=\332\206\216;\374\212\251\274\234\302\010\275t\354\205<x\217\234<\245d\353<\317\374\005\275LhV\275D0N=r\356\220\274\030\t\002=p \335<\356@\222\273\373\2766<\021#0=o\2229\274C\365\t\275\355\203y\274>\310D<U\366\010=P\346\274<\233u\320\274u\256\"\274\312\345[\274\22161;5\272D=\352\303s<\304\254\311\274\376\267:=\374\030#=5xX=3$\360\273G\322\226\2747\211Z=\276\204\261<\342\0369=;,\253\274\223\2222=\260h\375:\023Da;|Z\375;\272\216\336<O\'C\275\342?\362<\240dA=\201\370\000\275\261z\265\274BX2=6\373\344\274\356\312\256\274\275\345\336;QV\035\275Gv1\2740%B<\331UR=\354\224l;\314l>\275(\007d<\227\262D\275^\303\233<W\240\276<\330:7=\337^\320\274\207\312\333\274N\325u;\264\330\352<\005gP\275\215\362-=\257\236\3639\255o\252<T\",=\r\326\300<\365g$\275\207\312?<\335\306O;2\265\247<\336a\227\274\206\007\366<\301^,\274\273\243\001=2\3021\275ZS\247\274\t\t\022\274bw\253<\301\263\000=\253%\356<\262\006\t=j\322\013<Tf8\274\303\014\276<\017\262;\274\331\010e<\207\260f\274\017#\034=\243o~;\305J\237\273X\303:=\002\"\333<0\344\034=|\243/= @*\275\241\021\037\275-\321\035\275t\316L<Hz\006=\255\347K=\030<\253<\261\237&;\300l\022=3i$\275\270\006\001=\320s8\275\303\000P=\223\200\271</\254\252\274)\251r\274\267\252Q\275\212\224H=\312e1\274Y@\035=\036v\'\275\343\271\022\275\005\304\333<\315\033\365\274\211\243\266\274\215E\260;\355M\267\273\032\306\342<\0204#\275\226;\350<\260\2774=\305\255\033=0\377\010\275\315v\032=w\3557\275\020\316\337<j\276\271<hd\247<\373\027F\275\200\315)=H1K\274\275\233~:\t\357\240<I\010\232<n\364\'\274\214b2\275\276\226]\273\377g7\274$T\330\274\224\200\261<{:1\275\265a\314<|\033\004=|G!=\0339\260\274v\356\"<\005.\256\2744\221\306\274\347LU\275Q2\020=uf\007\275`\313\013\275F\245\264\274\341\243#=\021\244\027=\255\010\306\273\t\251\212\274kK\000=\\\337\240\274\271\361\342\274\341\221\270\274!D\250<\203k9=\326\372\030<\026\237\374<g\256\222\274\276\373C\275\255m\332\274\032\231)=tj\332\274\206\037\031\275X)\212<YG\251\273e\271D\275i\245\243<r\\\030=!\252\234\274\205\240\026=\315\274?<0m\"<U\226\232\274\036\371D=\263\021\024<Y\\Z\275\010dB\275\036\337\337\274\035\232P\275@\366\220;\345\257(\275K\003J\273kB\344<\200\231\255\274\037\035_<K\234,\275?\361\264\274\333\241\206<qS}\274@\215$=%\250\002\274\343\304\034\275\241Il<|=\222\274\003\005R\275\205\315\000=\003\260y\274\344\266\243\274i\014\237\274!\215\334\274\tTW\275)\006\343\274\351\205:=\374HO=\024\221\304<\304\373\033=\265R\302\274\300\3610;k\237\307;\337\006.=\204\345\245\274\211\263n;\264\313\232\274Ep4=\306.\325\273\355\226\217\274V\325\254\274\315\005\264<hD\372\274\225\271@\274\271\261\336<\304\275\034=8\002\032\275\301\277[\275f\345\363\2740\212\014\2753\365I\275\267*+9X\244\244\271\2737\345\274z\222\005=\304\304\030\274\347(\343;\007\354\232<\250\256\220<8F\240\273Xt$\2724\251N\275\0228B\275\350\010B=\327\220\233<\345\345\274<l\316\337<\262\364\333<&?\221\274E%\026\274,]\"\274 \014\032\2758\357%=\005\025}<\342|\177;:Y\256\274\276\231\305\272\313(\311\274?.4:\023&@<\023t\227\274\325\252I=\224\313\014\275\264U\223<\327Q\322\274R\030\000\275Tu\215\274m\252\031\275;6)=\235\004/<\352k \275\250p\272<S\205(=\325\353S<\033\355\023\275\325-\320\274H\374\227<b\305\222:4+\222<\364k\306<\201\200\376<\366\210C:u\372\213<R^Y\275\023 \021=\356\220\266\274\023v\263\274\323\337k\274+\362\350\274a\352%\275\264\360\246\274\200\253U=X9\365\2741\317\003;=\216\027=!\310\272\274\340\270\265<;\024\207<I\014?<\315t\313<9\234L\275\3532 \274\362\273\221<\340\035\263\274\235\262?\275\tq\316\274\301Py<\317\255\374<\274{\t\275\021\372\211\274\021?\242<g\2505=Z\031\177\274LR\035<\270\025\267\274Oc \274u\265V\275\214JX<\355\362g\274dy\027\275\020Y\215\273\026L\022\274m\211W=O\275\261<\315\317`\274\326\024\344<\353\t,<\213\326\251<E,\305\274\000\247\253;\016}\314::\240\364\273p\301;\275\324\002\025=:f=\275\203\322\354<\360\307\024;\020]\027\275\355\014\212<J\025)\274\362WI\274\257\224)\272JBn<a\345\251\274\311I\017\275\014\267\345\274\356f)\275\004?\247;\275\252\022=+2G=\324b\024=\004=x\274 Z\n=#\363\006=b\311\036\275\234\262-=\265\021\241\272\023\277\321\273\321\341\212\273\3713\375\274\270\3660\275\017u\231\274\035d\265;\272\236M\275\315\036\236;\347\343\004\275:-\037=y\2777;l\271\266<\371\330\203;\r\237\275\274\241\035*=\274\272\004=3\317\220<i:%\275\341\"\276\274\216\215)\275\323T2=\242\2414\274_n\216<t\017\310;\037Z\013=]\027\315<P\370\334\274\323\377\303\273U\3245\2753\220\030\274l\2432=@\367\005=\302\375[\275H\252\266<\243\362*=P\301G<t\361\223<\334\325\016=\241aq\274\307\023T=]\244M=Zr\315<\003\331U=\270\324\036\275[\21559;\374\367\274\374f\363\274\032g\321\274\003\370\234<\244L<=\264Wp\274\\r\254<\014\000J\275Y\217<\274a\260[<8\244\347\273$\023\315\274\005\0005\274(\311\r=J\354\025\275\007z\376<\224\261\034=\200\314)=\347@P\274S\211e\273\026\224\226<u&\000\274\026#J<\327\333B\275\033np<h|\217\274\334vi\274\303(\202\2746a\252\274\327H\r<\242EK\271\256:9\274\364\007\367\274\351\366\027\274\366\026 =\314\037\365;\013\312/\274\251\215 \274\021\t,\275\222,\211\274\331\310\"\275\271\014y\2740\371\250</\306!\274w@0\273\0076\327\274vc\370\274|\"H;/\326R\275\222\215\342\274GhN\274\214\004\006\275v\263\330\271\344\017\354\274L\217\034=\215\326\205:\r\025\210<c\001\335<3)\230<\337\232\020\274\273\"C\275\003\'\311<\333\321\037:\246x\350<\025\005\005\275\364[\352\274F]F\2759\263\035=\023\203U\275\345\354@=\263\032%\275\251FZ\275?g\'\275\"\"<=\265r\271\274?\350\314<\2758U\275\031\357\301<\310\364\207;t\263\366<r\373\027\275J\210Q=\217\356S\275\337\344\200\274\267d_\273\257s\005\275\017\330?\275\340\032\221<\273f\2509\265\262U\275qM$=-O\000\275\367j\206<]\243E;\r\254I=\020s\205\272q\224\032\274_\2306=\016/\206<\333\212?=\365\276\237\274\001\023\263\274\355\206\246<p\371\224;\003\t\003\275\035BI=\222\005\245<d\244\014=\231\256\231;\231\354\213<(2/\275\007\226\261<\324\255\340<\316\216\023;\010hX=\001$\357\274e\037\263<\037\212\222\274\335\177\361<:\330\237<\233\003X\274\005D\206\274\277z\325\274\023\250\324<jh\036\274\377\017\016\274-\2435=F\202{<~\233H\275\006\334S\275\224\323\253<\346\230\276\274\265\232E\275\020zX\275\330@\206\273\377pK\275\315\312\205\274Mh\003=\006\224\305\274\031L\375<o?\332<\017\307\322\274\216L\210\274\327\201$=\212\357\000\272\337Q\031\275sh\352<>\267\362<\345\331\035\275m\350T\275\337n\221\274e\377\352<\"\023\363\274\306\2077;\367k5\275\304\022\001\275\276\255\300<\252\202\\\275\000j\244<\204W\307\274NrV=\301\274\003=n(J=U\356,\274\343V\334\274\216b5\275\247\355\242<\306\273G\275F\377\232<\005Bh;\350\226\010=4\257\031\271\267y\342\274\337\276\305\274\251\206m<\013\376\016=\225\0329\274\247\306D<>\271<=\372\371N\275\353?\215\2746\303\346\274Gs\010=#\320\375<T\242\271\274ND6=\373\031\035\275\366\243*=h\031\205<\364\236\223;\325\313\363<d\326\025\275KR\\=\r\014Q\275M\276\032<\230\242\220\274*\211\273\274\r\231[=\304t\276<t\334p<&*\341\274\314\254\340<rOZ<>\310\311<\344\344\006\273\371\203\016\2735D\305<\t\\\r\275\201\024\010\275\003\"O=6\351P<\306\306E\275/\321c\272\023\324\315\273de\357;^\177\033\275\213\270\230\273\325\330\253<\257\366\355\274\336\332\225\274\264\367\260\274\374\017G\275\212\233\000\274\214jO=\235|O\273L\364\023\275\223\014\002\275o\327\017=\241\022\371\274\2517\231\272{\014\310\274h\316\311<\2678E=\244\372\222\274,w+\275\313\201\177\2748F)\275\2215A\275L\306|\274\230\\8<\266l~<\302\263\037<0{`\274\311PI\275/&\364<\024F\002=\347q\232\274\306\236)\275z[S\275\304\300\232\274\345|M\275\247U\230;\177\217\023\275j\252U=d\341\244<1\221\276\274\274\220\257;_\033\264\274\221\257\372\2749\240\037\275\245^R\275\317D#\274\264\361\t\275{\002\261\273\025\200\242:c\302K\272\241\361\025\275\204n\353<\202\351W\2742\224\037<\006T5=w\223!\273\375\242\215\274\006!b<\273-\332\274\341\372K\275- \307<\362)$\275\374\305\\\275\224\214k\274\374\247\014\275%,p<\205\240!;\207\272\007\274\003M\266<-\245u\273\'\212]\274\263\264\245\274\rg\006;\313N\033:$~\\\275\304\013\010=u\273\244\274N\3124\275\301\346\327\274\232\0314=z\250\017==\275\031\275\020\226<<;\316\207;\366S\r=\377\346\351\274x;/\275N\242\277\273\241\227\t\275\300\362 <\23106=\212\277\315\274c\027%\275,\235\033\275dY\344\274\t\362\316\273)\313\276\274\023\252T=\017\306S\275\264\030x\270\373\033\260<SD\007\275C\250\344\273\2062\014=\217\230f\274\221!7\275\356B\235<wJ\300<\272\335\224\274<m1\274\247\267\\=\344\331!:\340s\321\274n\001.<\202\372\024\273\203\3331\275F\377C\275\260Z\214\2731\264\024\275\370-@\274\227\r\032=\331\340[\275}9\005\275Sf>\275k\0354\275;\014\223\274fu\330\274{\270C\274\317\237.\275\304bR\273]3\340<\314\0038\275\372\035\374;W[4\275\270z\362\274\237\200\001\275\356\374R\275;\263\240\274&v\013\274_\306\t\275\035\335\350\272\371\226\014\275;^\247<]\017\225<\207l\351\274StQ=\207=\240\274\320\331?;\024\257K\274c\362=\274\255\310\263\273o\201\'\275M\307-\274\210\031.=\027$\033=\001\353\347\274\375\221\244<\243\322\314\274P\377\016\274Tm\254\274\245mC\275\267(C=Q8 \275;D\203\274@\363*<\234\343I\275\220.H<Yf\005=L\352\001\275q\236j\2743\035\311\274Q*\334<\316\213+=\022\361y;ag@=\254\031\031\275\006`\"\275w\331\t\275 \017N<\010q0<7\251[=S$=\275\360i<=%\347\\\274HC\024\275|\355\005=\374\316\346\274\364\214\334<\253Z;==\0220=\236\344\312;\360\001\260\274\324\317:\275\253\244\033\275\301;\016=\365\210&=z\201<\275\005\320I\275\314\330S=?\2514\275\351([\275x\024\034=\276\037\325\274=d\020\275\334\320 \273J\307\257<Uc\243\274\351\204<=q\271\227\273\352>O<\005\337\r=\357\316\005\275\312:\257<\031]\014\275\3615\224<\335\321\023\275?C\023=\225\004\225\273&\310\212\274X\010\265\274\236Um\274x8\335<\242f\306<R\374e\2749OE\275\246\347\367\274\300a\201\274\201\375\257\274\264\241\371\274\300\370I\275\014\016\315;\322\356\304\274\311\273\340\274\224\267\371\274\365$\335\274Sn\270<\034\006\t\275Y\033\325;\034\332%=d\'\341\274\326\214\232<\224\0351\273\224B*=e\373<=\030\226\372\273\271p\321\273l)9:\275<\365;=\0329\275\031\260\275\274A\000\036\275\360\0221\275\325\313\267<1w\270<\"4\322\274T:E\275\036P\267\274\024\225\"\275\246}:=\245\330*=/=s<XN\'\275\027\242\032<L\320N\275\252x5=&\007\200\272\177n*;\016\366\372<\335\272\303\274\370z\334<\017\2278=?2\004\275\357\202\004=\3506$=\362%K=u-\353\274\263\246\034\274J\225\245\274\312\002\241;P\005\356;\303\316\337<\371{U=\204\333\247;\311\233\026\275\177^\224\274\345\304\312\274\330\305<<\r@#\275\n\265\024\275m\240&\275A\227;\274Y\312\366<I#-=;\033\357<6\343\213<\256\215\022\2755\344\001\275H\3552\275\242\345\254<=\006S\275t\221\322<i\333\364;C\323\027\275\275\004\001\275\304\353\032<\306n@=\003\255\006\275\002\020S<\272r\273<5\275\271<\031\r\261<\340G\006\274\t\275E=\216\335\363<\373\342\013\275\317\207\007\273\013g=<C\264C=\3501\\\275\264\237\221\274\201\253_\274\002]\375\274o\010\272\274\323\250M\273$SH=\020X\275\274\323q\200;d\276\177\274\222_A\275\223\372&\275i\261!=\305e\010\274\243~\023\275\307\3319\275\264!6;\317\351\205<P\020F=kY\364<\313\353\224\274\254%\250<\246\276\207\274\316xW=\270y\215\273\032\351i\274\313x\n<\005!\343<M\304&\275\245\233\016\275\366\300G=\343\344\007=\305\216C=\317D\030\275L\332\035\275\336\327\310<\t\023\330<\013.\323<\364\274\211\2748\211G=J\000\351\274q\274\005=\026\n3\275\234\317\010\274Zs\230<\342`\336\273\037\314\267\273\026|M=s3\272\274:\262X=\303b\033=CuA=\365\022D=\023\327\301\274\205nU\274V\004\332\274\245\016H=\203\267\323\274_m\345<Z\315\374\274d\3562\274\236\365\n\275\354#\312\274\217w\267<[s\003=\024\316Z\274\026\n\276<]\374\033=\010\'\020<|d\005\274CX\253\273\025O:=\301\371;\275Du\244\274\336\213\236<,8\367\274-\372x\274P\364\\\275{\2551\2751D\325\273\336\002\261\274H\333\247<\260\312];\313\364$\275\244\252>\273&\025\035=\026\037\267<\014\317\005=[f\250\273\211\272\210<z\255\r<W\212\030\275\312_\036=\264\177\034\275]\017d\274.\006(=>}0\274\223\314(\275\363\025\251;q\213\035\275S\272\323\274@\313\376;\233oJ=\253\207N=\033u\325\274SQ\\\274-\352\240\274\346\242\214;d\302\274<\364\274\000=/\253S=\216M\371\274\226\361\020\274\320jX\273\026\266\271<\340\334\000\274\260i\016\275\005\250\346\274\330IZ\275#\272-\275^P1<\202\021\025=\311\334R\275#\210\256\273\344\275#\275koQ<\254\014\275\274\'\345\273;\223\364G=\305\t\215\274Ws\364\274f0W=\255\371\243\273\025\202\021\275\316\350E\275[\n\177<\362~\220\270\013HG=\277\250\325\274#\212\000\274:Y\267\274\314\204\002=6\342\022\274\3333\305<\000\227\274;<c\230<U\004\203<`9]\274\023\'>\275\206n\024=\251\251\027\275\330\270\001=\305\255G\273\234\320Q<\201\277\364\272\310\263\224<\344A\237\274.P\314\273\266=\006=V\272\200<\230@+\275\307)1=\264\300\261<r\342\277<\'P\244\2742A\200:\027[D=0P\356<\342\252$=\367\366\262\273\217\333$=A\373\r=H\n\253<\357\352\t\274\303\255\307<j9Y=\212\222\005\275\301a\325<\323\337\374<\013x\177<.b\'\275\361\177\002\274\251F\032\275\270\347\217\274\275\324\246:Lk\210\274T\"\340;2\t\"\275W#\003=\247k\206\274j\351\030\275\367p\322\274L\034\362\274\024\347\004\275x\010B<\311\026\234<\367Y&\274+\033\225;\032\021\352<|\2563\275\367\327/\275\225-Z\275\253\023K\275T\207\n\275\n\346E\275\264\3353\275\337`\003\274\315\221\345<[_\250<SL\206<\221K\334\273^\344\256\2715\226:\2756\266\024\275\275iM\275jbZ\275vc\030=\220\250\347<\314\317\022<\321;\035\274\362\336]:\356\332K\272F\341\361\274\243\275\r=%UV\274\250\013\303\274\323C\276\274\313U\364\274\260G\r\274\353__<\263\212\035=\316\021\376\274\245\351g<$\036\033\274\307A\211\274\315\202\024=\026\321\023\274\206\263*;\251l\001=IML=\2536#\274\354\323\221<\310\273\"=K\306*=\277y\242\274\212\344\251\274Q\373S=5\004W=_\210o\274\345\317Q<w\003\246<l\344R\275\267\357\t=\2125\362<#\276\341\2747\200E\275d\270<\272\307\270\212<\200ML=\267\356J=l\226\270\273k\002\034\275E\217\021=\031\263\335<}y\257<j\352\\=r[\260\274\244\260C\275\314\364\324<\232w?\275\357#\036\275\355\215Z\275\231\274X\272*}\'=8L\377\274\336\215\376<\233\327\364\274\376\347/<\227\026\213<Vn?\275S/\010<\204\014\240<+~Q=\203\306\030=\314\345M=\003\263\030\274\366k\244<b\223:=\345)\342\274\220\234O=\307`\314\274\240U\300;1\340\272<*\2141=\355o\362<~Y\202\274-\311\231\271\266\300\365<\0213R=V .<\222\260\301\274\216X\377\272I\372\017\274,g\372\274/\232X=\245\004\030\275QG\213\273h\336\n<%\243\342\274\342t\351<.\2759\275\255\2632=\002lF=\004{\301\273\364\021:;\203\205X=f$\325<\257\201\275<m\330\341\273\331#\267;f\024\250<Y\2574=|\344\255\274\275@6=\224\213h\273\014\343$\275\214\316\223\274\005|7=\226\303\"=\335T3\275\201\347\230<K\260\250;d\002\';\211&\317:i\023@=\260\226\303<\366\260\014\275\367U0=\r\330\231\274uR\020=\025\2102<\331\367g<C\2301<w>\362;!\232\003=\222r\301<x\020\006=\367\2714\275\362\236M\275oj\227\274\271 G\273\205\306\000=]\234\033\275T\241\010\275\030K!=:\354\305<Q\035\344\274h\340\016=\206h\005\275f\'\204<V\236\016\275N\256\271<A5\034\275\214\333\t\275Y\306\221\273Lu\311<(*)=\204L\375\273/9\201\273\034lC\274v \305\273\025\256\005\274~\001\264\274\002j7=\336\335\345\274 \317\234\273\343\254\325\272\010\3433<\016\232\007<qw\000<G\314L=\010<\370\274\004#[\275V*N\275\013s4=\206\213%<n\332\256<\032f\017\275\326\3655\275L\346\246\274\275g\027\275\327\367\350\273\256vS\274SVE\274\256)\025\274\024\261N\274\234c\360;\347\311\336\273\353\255\244<^\036?\273O\252\\<sn\335\274B\231l\273\'d?\273\335m\271\274\025xL=\254\334\026=M\1772=\365>\002\274\017\215\010\275MR\022\274\026`N\275\231\002\204\274!\324?={\371B\275\221\216\020\275O\216A=V?\340<\322\204]\274\263I\004=/\217%\275o\220\004=\017&A=\031AT\273\003\202\"\275\357b[=\366\241\326\272i\331\021\275VtL\272\253\313\375\274\027\260V\275\2414\316<\302N\005=\nrG\275\323\006o<K\310\325\273+\363\315\273(\027\006=G\r\"\275\336\233m\2734.s<1C\222\273z;D\275w\352#\274\366\232\003\275\243\347\025\275c\312\352\274\243\205\365<\337\355R=\313b\236\274x\223J\275B\234?\274\222\330\212\274\212\303<=\364\344$\274dD\374\274\t\277\226<-H-=\207\036\037\275\213\023t\274\263\021A\275\031\033(=W\304\343\274H\320\336\274\255JZ\2757\240\200<\037!\371\274\2159\031<\030R\252\274\272\005\t\275s\324\032\275C#L=\376=D\275\014\314\262\274\345\324c\274\373.G\274\262h<\275\247\345P\275\304\017L;4\004>\275\013$\370<~\2119\275C6\203\274\027\360/=\225\007\305\274=\372\001=\223\362d\273O`\t=\370)3\274\225\342==\033\256@\275\362O\026\275\177~\n\275\276v\267<\311?]=\321 X=\271\003\030\275tK\242<\312\331\n<O\222u\274\014\246\236<\213\372\357;*\253\020\275\345\227?=E\253\331<\240\330Y<{;\231<\206\242\350\274\241(\036\275\307\356I\275\3727\264<\373P \275\030\332\311<\317\266\270\274N_\307\273\037@\007<\242\307\346\273\226\362M\275/I\021\275\337\330\236:m\243\241;\007\234\013=\330G\266\274\266\213M\275\271\0056\275\220\211\243\274\250_B<\231\364\032\274\024A]\275\355r\360\274U\030\206<R\003T=\230b[\275\322\362<<;\260)<r\342\023=\004Uv<\357\034\r<\334_\341\273\2223D\275\367rZ\275\245\017X<b\"\255\274,\375l\274\223\242D=\261r\336\274\314\247\247\274\220\323@=\\Z\200<L\254\032\275\315\366\206\27475F=}\370\352<\312c\017\275J[\006<\312\250\030=\204D\022\275J%:\275\2706\023=\020@T\275\352\354\307\274\217\255)\275\266\202\035\275a\371\204:\340\342!=\325t@;>^$\275\243\332N\275\006\272\323\274}\313\010\275\341]}\274z\376\010=\364\037E<?\233$=@\302*\275|\026\332\274mg\r=T\360\010\275\004\222\300<\202C\341\274\374OQ\275\2727)<R=4\272M\274#\275\"F\206\274\324\234h\273\327Z\361\274m\271\260\274<\021\224\274)j\025=\207\r!=\312\2257=\351\231K\275\313\341\215\2747\240\221<\204\331\376\274c\r\031\275G\022p\274\323\001\255\273\022\222(=\037\231\245\274\266\000H=H\t><D\322,=v\370Q\275J\365\233<&\323\332<\245$\022\275\333\260\251\273\031\305\337:\360\354\016=\253\"\022=\202\247S\2741\'\017\274Bo\353<\244x\334;\233\365\231;\361\033;\275\371PY;z\355\035\274\336\357.\275\350m\n\274\320m\025=n*\334\274\316\262\344<~\250H=6\325K\275y1\037:\275/W\275\333V\306<\030v4<\353\014=\275\377\270\036=\255G;=4\362\315\274\344~8<\013\3535=L\345\211\274\233\222\033\273\373),\275\367\256\335;\330\356\302<n\243\032\275Y,\371<l\271K=d\363\267<\321\006;=\253+\302<\264\341(<\206\250\000=/Z,\275\227w(=\354+w\274\350\277\006\275\030n\350<\334w\034\275\243\225\"\275\221\002*\273\324\324C=\350\344V=f<\020\275\014V\376\273}0\3329\245!]\275\236\205S=\321\001\352<\022n\262<C\324%<{\301\036\275L\247\265\274\346)@\275-kY=\002(\226<\350\3460=\213u\355\273t\262I=\035k\014\275\336WW\274\035\372%=\rX\262<\227\325\241<\217\251,\275F\250\243<\271\240\013=\027\342\036=\271\260%\275\351;\317\274\n\032~\274\002S%=&\214\230\274\005\223F\273\247\032\023\274=R\217\274S{Z=@\2052\275\254\214\226<\360\024\025\2741\021?\275:\320\016=S-,<\3315U\2759\2547\275Hz\266<\373\034];\030B\375\274@5\212\274\036\312P\274\016\017N=#\226\025<\370\253\033\275\332}\223<\017\375V=O\242q\274\017KF<V\324\336<\336)Y<QQ\327\274K\201\205\274\0013\262:MvE\275}\202<=3A==\247\237\252<\244^\226;\235[\343\274\324\001\300<\336C\277<\304\343\\\275}\261\034=\343y\366\2745\330\263\274A\341\374;T\211\241<y\322\231<\\\255;\275\203\254;\275\266\303\363\274\335\232\372<\336\335\213<]Y\327<\020\352\274;f\357\261<\232\371\333\274\215?!\275\274\362\'=h\320\307\273\255\366R\275\336]\306<\262\314\337<\036ku\274\251\255\252<c\215\023\275\232s\262<\366\3056\275\016\261\000\275]V\231\274\024\006\304;\272s\234<zQQ=\264\355\324:\\\377\324<\304$9\274\034\306\3549\021%<\275@\032\246:\270\335)\274=\356\252\274\356\320)<Xn\220\274p\2167<\350{\010=\225{\277\274j\216\236<\270-29\036\277\312<\325}{:\3455F=\337$w\2747\224,=\257\376\021\275\342\343\350\273\204\214I\275\316\014\355<V7a;\313.,=\312\034\307\274^FX=\2106\314\274\024\310\035;\252~n\274\255DK=\024\301\202\274\211\3622<A1)\275\3138\032=\013\240z<\245H,\274\375=9=\367\025A\273$\317%\274$yK=[m\363<+\016\245<e&\362\274\007\036\026=x\005\017=\026;\030\275wJ\204<Y\013Z=6,;=XMT<i\2303=\272\033\027=M\313\236\274\r\327\034=\223\324\'\275r`J\274\305\222d<\212\376/\274\325U4\274\264\252P\275\265kG=\264\260[=\004!\024\275\276\027\270<\337\216(\275\031\320\306\273\350\210\035:\252.\327\274\202\241\321;\"\325\030=\\\301L=q\367\2119\343\216\376<9-,\275_\0131\275\366\024\335\271H\1773=\200D\230<\000o\177\274\000\241\353\274\'\362/=\257dk<\261\207T=\0064\r<C3\215\274oG\317<H\013\356<^i\325<\301\316\017<\'\213\263<%\014K\275\251\350\024\275WqL\275\017\205I=\212\245\r=\251;\306<\214\323\014=\357,\002\275$&\257<\347|\211;|j&=\321\240\035<\272\240\000\275b\211\030\275`\262B=\306,U=U\255A\274Q\213\013\275\305|\242\274\335\347$=B\013(\275m\014f\273b\302A=e\275H\275<\245K\275\240\233F=\307\332\026\275\0317\2469\274SN<u\035\203<\220g\000\275\234\241\275\274yg\364\2745\331\357<F\365G<@@\343\274\375w\235\272\025|\006=\010\2776=.\306==c2s<\306\363\372;\313\337\207\274 \303\221\274g\376\277<\3328!;IM9<\237v\020\275\277\321\303<\317C\373\272X\261\231<\202\323\300\274\244\316\372\274\266\377D\275\200\203\356<\230\352\231<rK\236;\247L.=\r\177\211<\241\004\037\275i\300\223\273\351\215\242<K\'4=\235\325\216\274\313\227\353\274\345\202\300;\030\367\333<1\376#=\2501T=\226n\017=\002\223)\275\021\377\347\274\355\345\300\274`\2059;\315\206\216\274^\033\031\274G\325\017\275\276\252\024<\322\237\335\274e&?=\345\311\020=.\3140<\253\003\266<\377c\307<_\355\034;F9*=5 r<\332R\240<#\346q\274\247L\005=\343H9=\240\005\220<~\337\013\275\246\000\245\2742\000\345\274\324\232H\275R\313\020\275\301\t(=\276!}\274|\314?\275U\t)\274\2773*\275\232\306>=\217Zk<\332\322J<\272rY\275@\251\033<Y\2418\275\374\031\201<\321L;\275\334bo<\265\206J=\3753\000\275W4W\275onC=\251\033\341<k\334\000=\2372\346;\246\327\034<\377\366\376\273\371\316\206\274Z\234D\275\021O\002\274\265\264\327<\212\322\002<B}\314<\211\3163\275\277y_\273\227j[\275\345\206\371\274\373?]\274\235\014\020<\211\311H\273\374\3004\275\364\027\242\273\222\336!=\356\200\307\274\'\346\302;\256:C<\260\300K\275\370\r\363\273\340\375\030\275\312\306*=\346P?\275\337\373\006=\341\002M\275\2330E=\276vo\272\032\345\241<$\317\306<%\317A\275\201\263\362\274F\347\252\273\257\340\334\274\331\007>=\345]q\274z\251+\275\341\371\010\275\363\020\017=`}\261\274\306\rY\275|Zr\274`)n\274\225\030%\275N\3624=_x\334\274\266\235\007\275B\322\357\273\272\310\261\273\215\030\014=\253\\\317\273\300O\227</\230\273<\007W]\273>w\217\274\3338\244<\371\005\343\274\021\031\305;\212\250\023\275d\"#<|\301I\274=\020]\275\322C\014\274\264A\305<{\3222\275\004\230\276<\331\206@\275o\313\002\275=oB<|\rX\275\033@[=9\002 \274>\203\234\274v\017H\275\365\016\327<\371\330R\275\032_\344\271{+\374\274R\275\004=\275\265\036\274\346\242\006=\376\372#\275\236\217@\2759\031\223<\214\341\036\275(R\025\275\034\361\005<\366\212\326\274[:H\275s\350\213<\251\363S=\260:*=\266VN\275NEU\275f\027\320<c\236\021\275-\237\203<\367\307\326\274\247\346\362<aL\010\274\203\300;\275\265\200\315\273\263[\246\274\360\257\016=F\377\r\273XC\266;k\265-\275^-+\275aU$\274)\nE<\202mN\275\033b\315\273\373F\373\2745\217+=n\271F\275\000\372\004\275\332\370\003=\320\014K\275\305!\365<W\244M=\367^\317<\005\337\201<Nr\326\273,\206h<\001b\017=7\272U\275n\354\214<E\000\376\274\345\277\365<\350]D=Q:[=\217\022v;\021\2317\274\332 \334<\277t\364\274n\361\315\2748,g<\331\370P=\000\367C=\376F\250<\034r\007\275\202a\213\273\243%\214\274\355\265\312\274\016;>\274\322_#=\326k?\275\\\002\262\274iv\365\274\010n8\275_\270*=\257\253\315<\033\253\241<)E\2659\325\362.<\367*\303<\220\324d;\224\2220\275\264\212,<\013B!=\004\320U\273}!\243\274\261J\203<}K\266\273\0375,;\344\033E=\261\276\236<\005\035\320<\2628Z<\256\365N\274\360\027\032=\033T}\2747\2508\275\025\320B\275\241Ft\273N\027\203<ZJ\350\274\251\264b<\236!\273<\235\017\315<\321\2526\274\324FS\275\22253=\031z\372\2742\003\014\275\313\\\007<G\344\206\274\022\307<=\270@<=\t\355\371\274\234\017\360<|\346\371\274\364k\020\274_\370+;\266\242Q=\310\201P\275\300\201\014=?\203\"=\253\222\320<em\361<V\262\317\274\005i(\274\333\340,\275\027#\021=y)\014\275\236\374\002\275\350\344\377;\177\300\301\273\277\0369\275\230\365\244\273\307}\222<\336\217\033=\004\031\255<\361\246\371:\303m$\275l\005\021\275EQ\354<\210\347\312<\003\255\244\274\231\334\235\274\316\233z\274M\221\363\274\307T4\275\216<w;\316\036\341\270T\324\227;\225\371F\275JT\025=\r>H\275Q\310\375\274\035\306\340<\000\270\222<a\304\353\274?\311\227\274\332\305\230\273\031\2150=\217\206\365\274IZ\263<t\344\013\275\203\363\301\274\010\275J\275E\0038\274w\311c\274\364\3631=xC\221<\005\265\353\273\026\310O=\374\363C\272\371\'.=\344\004\'=I\347~<\244|\314\274\303\344E\275\234%?=\331h\010=-\275\231\274\014s\001;\324\306\031=qs3:\363\351G=\211\213)\274\2252\337\274\206\326*=\227\264\r=\377n\007\275\262/\023\274Hx\247<\317\024\030=O\235 =\324t\213<zv\355\274\304\251G\275\024L.<hk$=\005#Z\275\300\220\364\273\031)\242\273\336jX\275\370\370&\275\363Zi<nRH=fWK=\203\346\n\275\202v\316<:X \274\036\352:\274D0\'<F:Z\275\213\253\244;m\022T=\270\300\030\275`\354\364\274s\266\251<\001\325\211<#\tO\275\255\274\020<?\342\355<\361\310\003=\246cr;\030pO\275Z\221S\275`\211\203\273c\2274=\251\226\013\275^^\023=\300\275\\<9\247\300\274\024\266\343\274W\246\017;.K\360<~S\336\274\211\024\006=\023\037\324\274d\353\316<_\343 \275[\300\007=\214w\351\274\341,U=l\377-<\313\3147\273C\320\215<p\254\322<l\337S\275J\336\220\272\004F\021\275\321a5<\242\337n<yO\315<j\273\373\274\240\276R\274p\263<=\361hg<U\212:\275\267;\216;\021\3641=)\273\331<@;\376\274\305\020]<\272\030\244\274\237\026\370<\007\336\233<\213#J\273?\267\021\275\0240M=\255OX=O\350F\275V\2245\274\'\'-\275\321\320==\316K\022<F\2018\274e\337\346;\020\226\300\274\315\271W=\022\325@\274gf\374<\255\362\337\274\323\263%\275\241,\236\274\361\037\277\274\315|\035\275 \302\363\274\217\346N\275:\264\317\274T\351\330<UL(\275z\001#=\307\260\026\275%\013\236\274G\205T=\273\253\004\275-yH\274T\366r<\237N\247;\033e\364<E\301\347;\324\330\342\273-\336Q=\334<\255<\353k(\275\306\3250=\3434\032<\013\202\260;\002\3757\275\374\246\270\2745^7=\310+\227\274}\241I\275\372\330\'=G\350T\274xx!\275\246ix<\345[R\275\2637\254<o\252:\275)\035\024\274[l\311\274\317\242\002\275\215zb<\320+\310<\206\311B\275\027\006K<\243\246a<\017\302\355<\212\010\216<\270\370G\275\215\345J\2748(\377\274\352\227\336<K.t\274\356\004\343\274\334\347L\275gy\216<\035z\206<lW\302<\223\301:=I\320\354\273\314\377+\275\275\206\313\274(\232\257\274\322\001\216<\337|\334\274z\254\016\275\246\016\277<!\017\005=\010\260G\275Q>\225\274fNQ\275\027F\033\275\375\367\324;\205\2006\275\221\2330=\340\312\023=lk\005\275\"b\023\275\001\236\247<\205\220x;kz\034=2\020\357\274\333\202\014\274)B\004\275\212x+=\251{Z\275<\330A\275\353\370\215\274w\374\273\273e3\272\274\223P\251;\025w\262<\371\263\306\274*\353\016\275f\2054=\225\004\005= \"\346<\003\2724\275\331\347\027\275D\210X\275\277G\234<z\026\217\274ERE=\323\322?\274\354\311\232<\242\241,\275\337\343\213;\305.&\275oqK=\255\323,=\213fK<\001\304\351\274\363?\233\274\204N\304\274\370\207\003=\323\242\021\274=\264H=\3701\220\274\007\313\016=kDg\274\214\366\257<D\316$=\034?\350<\277q\035=N\021\033<\311\327<=p\3421\275\332\034K=3\026 =\203O\275\273\027\031!=\233\313\343<\035<\340<\034\242?\275\252\271J=\372\331\276:\343,7=\030HB=\211~/=/`\027=h\200\327\273\334[>;\027u\361\274\322\026@;\260DR\274\272@\003\274\254~\004\275+\005*=\360U\367\274\t\030N=\370\233\343;R\030K=\t\224\342\273&\261\261:\201\307\274\274\202\236\004\275\013:\370<\330_\216<\037x\032\275\253((\275\321\0366=\203\022\265<(\366\"\274\252s\276\274\217\335.\274H\036\007\275\027\343E\275\241xi<)\306S\275Q\006\315\274A\226\372\274\330\010i\2741\255S\274\034h\340;\251\037W=\373/\246\274\036\365?\275\371\253!<\263\024\313<a5\200\274\020\300#<\372\327\347\274h\362 \275\003\000\201<,\302Z\275j\263[\272\242\352C=\374)\234<\257Z\332<\350\261\227\274\275\227$=\242$\217<\364\360A\274\235\3309<\320c!\275,\030\020=\270\375\303<\272tQ=f\307\256\274&>?\275`\277\030=m\037z<a\320=\275\271\305\215<\253\216m\274\240\311N\275\360p[={\235==\263/\311\274\227gK;\204\244\257;P)\315;~4C=\000\3608\274\342\213\n\275J\016\032\275\346T\344;w\205\037\275\206n.=\316\362\314;A\364Y=\t\211\320\274\t\'\340;\246\247>\275\266d.\275\000j\002=\026\213B\275!\027H=\205\267J\274@}h;\266\330\320<~1B=[x\021\275\004#N=\235\211\026=\242@Z= \366\243\274\221I\334;\020@\352<v\252\330<5;\272<\234X[\274\017\362\377<O\311\330\274\205\365\346\274\211\371\226<\201\370H=mb\030\275@o<=E\002\312<[\247\245<\357\225\202\273\353oX\275\"\304\t=V\267\036=\330\254\311\274=v\'=\2465l<\001+\t\274+\354d<\203\366F<\301I\n=\312;7;\204\214\254\274=0\007\275\334\272\310<\022*5\275\221\271>\275\221\271(\275\215\374G<\177\237\003=2\355>=(,\020\275)S\370\274\343\276\177<h\276\256<\r\361E\275\313\223\007\275\232\302\007\275;\235X\275\004-c\274e\365\\=v\017\252\2744\300\3748\305\007G\275\304\177\376<\273\325\361\274\344\\\036\274\271\246\024=\373}\031\275g\177%\273\271\233!\275t\357\301<\010L3=\365P\361<\027\325\t<\232\220\002\274\275\246\244<\262\315\033\275\324\307\036\273\236X\026=*\013\356\274`\247\207<\374\024\"=2\021\007:\331\326=\275\363C\t\275\275\347X\274x\324\375\273\325$\342;\n\320\345\274,\000/=oN\241<t|\007\275o8\033\274\271\304\002\275\251\311\215<\303IU\273\002\270\240\274T\022\t<[PU<\0076\315<\260\263\245;\261\322|\274u]\366<\006O\\\275\366si\273\177S\202\273\374\002@\275\002\030+=B.\233<@r\205<\006\304\252\274I\204V<\215\206a\274\347\200[\273\251/\226\274\256\262&\274\350S\366<\340\376j\274\325\006\363\274{v)=\363\365\201\274Y\3247\275\013\241\007\275\312 \335<\311\347\260<\'\253\206\274\322\261\330\274\222XL\274\331\033\271\274\345\277Y=%b\306\271\022bR\275\330n \274\247\313\337\272@\034\361;\236b.<\327\342\035\275\244\317\253;ae\245\274&\2057=\237(G=\301\2008=\3115\323\273k@:=\343\177\023\275\267\366\\\273\221\311\252;\017C~<$C\262\274F\030\336<Z\037\023\275IF\226\274\331e\215<$ \350;Z\336Y=g\2429=$\004p;c\362\253\274,\177\006\275\302o\355;.\323\254<\244\023\034\275}?\025\274\366\016\304<\300e5\274\367Q0<p\262T\275\216\256\316<\211\026\241<\232[\342\2741;\002=\233h\357\274\277<\026=\300\231N;\315\033\221<(?0=\005\313\271\274\224\342\020<8Q)=\217\3531=b!\323\274\325\025\022=\177\267(=\027:S\274\277\023\204\274+\352\035=\000\352\004\275\324\022\'\275k\n\353\273K\245<=\307\003\372\274\277\006\037\275\240\tW=\"!\232<\ty\016\274\314\323@\274[\210\007=\255JM\275\3707$=\221k\024=g\204\001<\346\333.=\273ON\274e\263i\273QV\004\275@r\335<\333\215B\275\274\315\031\275\250MR\275T\007T\275]\001\246\274\262\213\221\274\202\r=\275nh;=\340\3046=\271\315\014=\013;\001=X\322C<\345\230W\274q\231L=\036A\363\274\314\005\211\274\203\250\035\275\346\311D=\t\347~<\237\2443\275\306x\207\274\253\037P\275{Y\352<\267\303K=\267D\275\274K=\352\273\005zT=\0250\006=\250L(\273\3444M=\326=&\275g\\\224<\315\n\362<\213\223\027=\024V\250\274\'\205\032\273u\231\362<\261\3569=\3419\231<=\'\327<\242b\367<\026m\001=9\371\363\274z\022\r\2751\307\305:\366}\322\274\222\232\357\274E\262g\272>\270\215<\266\000\013\274W\271\305<\275\322:=,\351\334<\276Y=\275\345\255\005<j\032\377\274\3351V\275Q~M=\231\367r<K$\010=]\374/\275q\001^\273z\r\'=\270\030\033=~y\205\273\234\3249<\321K\307:\270\307\337<E\250\314\274=\037H=\323 \216\274B\352;\275\r\301\300<\214v(\275z\334\233<^x\007=$V\345<\225\365+\275\323h\324\273A\242\210\274\231\230\300\273\327o\024=\001\272\352\274m\212@=Fm\324\2711\024;\275\223J\314\274x\204\267\274zN\373<_\247G=q\275\362;\350\347r\273\350\010P<\324\360\344\274\037\006\217\274\032\257\236\274HVF:\356v&=\017\266\371\273\007v\024=s\250\221\274:\261\024=\020m)\2759\243\031\275\005\323X\275\311\333\326<\247)f<\031\206\317<\361\212P=\265z\324\274~5\277\274\241\253\226<\252\204=\275\363,]\275\214\344\315<\260\2707=\304\341\026=\262m\246<%\030\354\274\036\203\r=\260\207\204\274\270X\324<\322\350\'\274\220)\322\273\205`\357\274\257\352D\273\005\330\022\274Ex\201<\017+\311\274\271S\022\275Y _\2746u\242;\177\360;=\266}?<NF\307<IP\225\274\037\033.=f\026\t=9\246.\275\022lg</\341Q\275-\276\341<\027E\003\275\201\260m\274t\217y<b\2006=\003-\312\274\204\367\350\274\022\375X<\377\276\361\274\360\340\342<9\275\003=\346\212P=\373<\021=#\223\034=\300\315\013=\202\247b\274\237\006\233<G\2040=\370\010q\274k\2011=\235j7\275\377BY=\256F\377<\332\353(<\341l\213<\236\315L=\277\006\370<u*$=\260\256;=\372\276\\\275t,\253<?%\334<\004?\337<\231i\234\273\013\352\007\274\214\335\020\275b\0017\273+\346H\275\275s\322<\261\247\023\275\277E\274\272\333w\'=.\355@=iJ\323\274\002\342\034\273\010\177\250<\241H\352\273\3159\351\274\335^\027=\3034V\273\333\223)\275\022Z\265\2746\020G\275\2063\022=O\260\035=\367\346\374<\016\205H=^\335\336<\007d\311;\231\247\006\274\321\356\337<\332\312\311\273\265\325&\273\250pr:S]?=\022\324+\275\252%T=\006\227\024\275\260\030\340\274Y\311\\\274k\353@\274\212\245\236\274-\356H=\242\200\353;\275=\342<#\370\027=$\373\030=!\220F\274\321s\344<\372\237==\256.\242\274\246\226\364<hk%=\252O]<\267v\026\275\3357R\275\212\270\021=\236\366\222;\006\241:\275\001VO<s\363\334\274\r\371\332;v\t\t\274\246\357\r\274\367^m;?\362D=\256\332P\275B\333\"=\336c3\275\312\0379\275Wp\244\272\361\234G\275l\241\010:\246\017;\275\263\301\347<\016c9\273\\\000\264\274\311^\020=B\314^;l\035I;\215\006\315\273q\3568=\353\316O\274\337CL\275\2737==\021b\021=W\367Y:\277\324J=\010c\346\274\260\016\324<%\211S\275\307\270\001\275L7\271<\301\364$=N\243\244;\352\212*\275Q\340Q\275\340$=\275\222\370_\2749\270\343<@\377P=b\217\250;\225\275\t\275\311u\314;\371\327*\275\221\247\241\274\372f\350\274\201\0145\273\363uG=\340\312\035=\206\251.=<\356:\273\235R\033=2\3740\275\357\027\031\275f\035\332<\014VU\275\304eP\2758\255W=\002\355\033\275\312\314\300<y@U<\016(\245<yp\274\274\374\314 \275\225#p\2749\372\260\272\2476!=:V\341\274\275\313\240\273\242\036(\275\217w\200\274\260\374\261\274\010\206\034\2752\212F\275w\226\363;A\344A=\351\210\314<\304c\002\275\273H\246\274\036a\024\275<ih\273\362\300\251<\354\375\246<\345}\322\274\357\205\036\275\215\256\250\274\330\355\000=\352.\'\275\rsb\274\010\373F=\324SS\275\311\334!=\037{\366\274\232\352\351;\301\005D=SF\362\274\177Sj<\223\037\023\274\265\032\260<\342\307\027;F=\300\274\346r\351;\006f\273\274\271j\351\2740p\225\273:U\r=\277\t\017=\204+\367<\253\371\373\274\030 \351\274\211\263\366\274\"y0;\241\205w\271yj\306\274W\366\211<\233*\022=\202\237\226\274\245\275X;\314\342#=\263\215\020=\320\362K=\220\000A=)\264\034\275JT\356<\215\312)\275\001\316\335<K\325\252\274\327\253\372\274\210s$=\322U\010;\344\2748=\3269\236<V\263\310\274\356\010\343\273\210\354\265<\225/K\275\006\353\255\274)\025\326;\325\376Q\273\301\354\205\273\300\rU<\033\3562\275\360\367\337<NP<;\n\326K\275\235\307&=R\224V\275HT\030\273\237\364\246\274\360\310\027=M\275\227\274X6\273\2745\270)\275\254I1=q\310\323<\3414\226\2725<\301\274._\356\273\032\267\n=\302\336\027=u\300==\3154V=d\034Y=\224[E\274\355\017?\275\374\257[=OY\345\271\244\0051=a\275)\275+\037#={.\303\274\317E\004=\323\036\374\274\275&\033<\351/a<\242\356=\275\224\252\314;F(\005\275\223s\343\274^u\031=\026\235\367<\327t\363<\212\177\236;p.\013=\226\nT=\200\222\226\273\273\256E<\033\234Q\275\220;U\275\n- \275\251j\223\274lh\035=C\267>=\260J2\274\263\227\006=\333\321J\274\240\321P=\360n$\274\275\006\206\274n\3465\275\221V\\\275\362m\017\274,\305\034\273\357\302\301;R\225s<\353\\\333\274\213\307\347:\240\244\267\274\267\261O<\335\311W\275\374*\020\275NR\014=\3730\017<\211\373V\275\207\364\014=z\3303=2\237\253\274VA\371<\346\301\337\274\007\324\213<]`\006\275 V\332<\035\"T\275\203\023\n\275m\003\211\274\236\2308=\345\200+<\331z\351\274=sN\275|S\030=2~\360< T\266\274\300\257\2329cu@=p\256\202<?\007\345\273\002j\021\274@>1=Lv#\274R\335%;\306\031\255;E\253\020\275\\\312\372\273\233y\022\2754:\224\270\225\207\333\274\221\244\034\275\237\274\000\275\243\022\353\274\334c\255<C\324\033\2753\260\224<\350\341\n\275\004\365H\275R\023\321<\341\256\257;xe\3436\237>\017=b\312\240\274\300T8\275\241\030a<\252\214X\275\257<\035=3\320\326<\331\377f<0!\016\274$\260A=Y\241\214<\323\246\005\275\261\013Y<\377TN\273\006?\233\274\177F\r=\352O<\275/\347:=$\\\351\274f\346\214\274\026\r\303<\372\377\335\274\325\2569<\275K$=~\315\201;\244I\301<P\244M<\204\252\341\274@\332)\275\205\033E=\201\034\201;\347\350\204\274\214\367\337:\302\334\333\274\250\207\342<\336\212;\274\200ki\274O\326\366\274\002\205%\275s\2640\274a*\341\273\372\3607\275\371\224\272\274\364\312\211\274\032&\264<\207\271\260<\215J\254;\001\302\347<\245\2074\275\030\000\352<\034\335q\273\344\245#=U\212A:\265\237\230<\260l\257<\321\213P\274\016H\036=\220\340\351<DL\332<\217\353g\2745\366[</\304\305<w\336<\275+\024\000<\034\246\304\274s\365\376<\031I\225\272\363\344\005\274\313\0132\275\022\336\004=;\035\"<\345\334\264\274\307\357D\275\032\304\235\274\377\n\037<\303\322-=Qb\007\275 \320\t=vOL\274|\r\025=tz<\275\361T\270<\031W\301:\036cR=x\227\201\273\347P&=lp\030\274\254\221+=\270i-\275\367\001\377\273pQQ\275\n\245U<\322l\235\273\'xY\275WiO=\213\\*\275\213\006\232;\357\335\342<\344~\357\273x\361Y<\305r+\275O\276W\275d\221\306\273\331\263\373\274\224\251I=\376\261\377:\225}\030\275\020*\\\275\314\372\034<\376W\020\275\020\321\000=\247\270H=\305\016\005=\007\221i\274\030i\212:\352\207_\274\374\260\030\275\'|\262\273\343\327\203<\360!E=\334\304\031\275\366\260\362<\311w =\315\321\224<\022\357R<w\210\026\273@>\237<\036O\372;\310rg\274\357\377\311<\277\250\027=\312\346\332<\327\275@=E\307V\275\230F\350\274\tg\003\275\013\271\3129g_\025=\032\017<\275}R?\275/\246O=\030\017S=\376`I=n\200\364<.G\220<A\351P\274l\356+\275\033{\n=Sf\307;-\224;\275%\242\210<@\271\333;\354\005\365\274%\277M=\244\212X=?5\327\271H\022%\2754a\237\273\270\177\374\273\345d\005=\033-\020\275s\354Z\274\276\241\003\275\261\226\005=\237\n\255\274\273\017\036=\257\225G\275W /\275\017z\223\274\007\010?\2746\364\231<f\030\007=\262\250\373\2745qL\273g\255[\274\271\2172\275\312\202W\275\264\226\300\274\316\001\021\275\223K4<\240\372\016=\312\261\017\275>\3001\275Gg \2756\331\001=\t\2740\275\325\332\306<\264\363n\273\225Q\372;{`]\2750\0361=sy\307<\210L\320<\371\313\345<\231j==\366\343\030=\213\341\377<[A\000\275\010<\236\274\206`\327;<PV<\213\363\262<\313\256\267;\246\247G\274\2673#\275\025\013\"=\010#R=e\255\024=*\313~\274,\277>=G~\365<h\365I\274<\3139\275\263\376*=\324\353\336<Go\017=\341\342S=@\272:=\017\265w<eP \275\024\364C=\260\351\325\273>\377\021=\000\333M=L5\335<\352\356\003=xA\203;\026\007\333<\351\362<\275\366<>\2754\350\252<v B\274\'\036Q;\324\235!=\243\245#=\\\342\343<\353y!=fv\217<B\221W=\303%\311\274\001\374\245\274\371\305M\273`\036\n<`\357B\275\262(\366\273\007oW=8\024N\275\267\020J=\2017\002\274\360\324.=Q\332z\274\262y\004=s;\333\274U\014H\275\332\004\241;\032\317\273\274\273\355\217\274\327/T\275\224:\247<\332\333,=\222\200\267\274|\033\346:=-\203;\306\\*=\363~,\274 \203{\273/\217.\274\007#\333\273(\222\006\275*8P\275K\0209:\225\310:\273\253#\240<\204\327\002=\016\256\351<p\032\020\275\237\370\365\274\277\376\241<\361\341G=\347\2705\275}}7=\362\014\n=\336\006\345<\222\350s\274N\3646\275\337\202&=m\\T\275h\265Q\275\177\260\347\274\332\243|\274\271\340\311:\217P\035<\347\236\253\273\n\200\243\274\030\276)=\321\214\344\274?\333I\275@+-\275\213c[=o5\003\275\2722=\275wr\362\274\025\032N=\355~\004\275\231\325\005\275\316\203&=l\2740=\366i>=\304\356\326;\232&\000=\020\022==\r\221\352;y\037\212<\351\206\022=\223\257\215;c\346\030=\357\263\200<\270\277\033\274\002\370\020<)ZX=J\336I="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2050
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2050
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
