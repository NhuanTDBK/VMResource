node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2010
          }
        }
        tensor_content: "vK\017\275\231\255\257<hw-=\257\366\256\2748\022\304<\372\304\347\274x\275R=\032\017\030=\361\317I=\221\002\266\274E \235<!\202\031\275\244\021T\275\344\025\335\271\255\177\014\275\312\273/\275\374uK\275O;\'9\272\022\203<\005\344\\=\235\370\245<\217zW<\246\235\003\275\002!\307<I\254\"\275\013\027\002\275\316t8\274\376\005\010=\260\337;\275/\343\254<\217\307\220\274\327\215\276<\177\\\311\274\222\315A\275\236\340^<yq \275\320\3664=\302\372-<@\277\023\275\304w\032\275\235\\\216\273D3<=\022\355\203\274/0\260\273\356\226I<\033\245N=Vy\024;\313\256\355\274R\254x\2744\261\357\274\3070I=L\251\\=\036\216)\274\224K(\275T\241\304\274\313\033\262;E\241\320\273b\266\024=\324\336\210\274JN*\274\337\350\357\274~w\347\274k\370_\273q,\357\274Y^\t=\356\005\316\273W\037Z\275=\211\230\274\355\310\035=\000\275s;\305LF<\215\244u\271\200bP<\007\265Y=\305+\243<z\003\025=\027\373@=\323\315\364\274\371\234\006=TGn\274YxQ=\242^\253\273\343\007B=\345\275+=CH;\275$\265\263\274\312\013\013=4[!\275\267E\014\275\007H3=\004\246\272;\313\231\324<\200\347@\275gh{<\251\030\327\274\325\035\357\271\'<\266;\342\335J\273\374\341\037=\021q\266<=7+<J\323G\275\23713=\264\310m<\345\001==\205\375e;\322\022\007\275\352\343h<\265\327.=\371<\307\273>>\351<5\t\350\273\014& =\225\260\245<.|\014;d\211\352;\220\347\326<\021\360C=F\224W\275\372zD\275h-^=\"\263+\275\306\017\314<B\2076<\365\2719\274\033\257B=\r\2421=\020>\026=z[?\275h\212T\275\271\354+\2754y4\275\2340\366\274u\312X\275.\302\010;\302x[\275\206\310G\275w\310P=_\362\312\274B9\'\275\"\212\030=\020B\004=b\214\210<\201\034\316\274\213`H<\33193\275\225\"\013=\304;\005=~B\337\274\245\002><\212\t\307<W\274\023=\367p\021<\372\233@\275\230<\022=\036\300\324;VXx\274\335\035j\274\374C\311\274\244C\213<\246v#<4S\031=u\314\211<\371\251\034\2744\022\271<\323j9=\2550\321;A\272F\275\246\215\203<c\032V=\240U\265<O#\275\273\211\024:\275\356\263\210<P\367\247<\342n\006=l]\034\275\010W\225\273oZb<\013K!\271 U<=\321d>=p\017\272<_g\027<\232\355\342\273<\206\017=\031\246\r=\263\033p<\363\037\330<H\006\007\275\215\302V<\"\350\007\275vy\216</_:\275>87<~\323\247\274\250J\306<\337\302\026=\313\257\361<\266e\203\274\303\334\007\275\271\216{<\221w\360;\3314\241\274\210\373]\275?$\245\274d\024*\273\305\245\352;\247,4\275\337\220\267\272\331\240\n=e\377&\275\037u]\274V\2354=\252q.\274{2C\275\367V\037\275f%\036\275\300[\272\274\313Tb\274D&\352;{\022*=\360\035\014\274\245\373W=\250$\211<WGi\272\347\375x\274\376=$\275zH+\275\267P\030\275/\316Q\275c\327\314<\007\300/=\024\312\n\274\220\214 \275\007\321\006\275[h\035=?c\343\274H\267J\275\333p<\274w\037\367\273$OJ\275\362\021B=\200l\204\274\371\004?\275bl\000=\027\313\021\275\262\017\375\274\337\364M<\265$/<5\2603=\356\237%\275\200\240H;\262\2424\274\005u\347\273\277\202\006=\2227\331\274\345$5=\017\031H<P\001A<\021P]\274]\367A=\320a\263\274\3422F\275J\276\000\275>\337\251:F\3611=\302X\225<@\271\261\274\266\362\231; >R=}#_\274f\370\r\274\376\\\211<\306\204E;&\251\252<\264\233\360<\232\342\367<\375^ \275*\\M\274\260\247\243\274\207\244F\273I\362\"\275\273h \275c\343\340\274z\222\277\274\365\242\003=\374\327\231<\247\231Y\275V2\300;\007\220$\275\222\250\347;\257\302T\274\363\201\004\275\254\244\204\273x\345W\275\277\257T\275\262\003\026\275\223\3336\275\234JY=C\262M\274=]\010=}\305g<\310\343\235<\215\214\005\275\210>\225<\371@0\2755\321\351\271\302K\024\275\215no<\027%\307<\3156I=\223\010\332<=z\260\273;\251]\275+\257O\275x\202\326\274\320\355\377\274\231\363\222\274\365\377\341<\326\227\367;\363Y\'=\216)\221<\355\353\315<\252\252\020\275\261\266\302\274\2026&=^\2065=\260c\375<.\207y\274X\177=<\275\236\\<\007\230\321\274\323\357\016=\003Z\005=\251\221\005<\007\032\r=\354\010\030=\000q\232<o\214\234<\031c\324\274s\300L\274i%\007\274\372\263\211\274fwT\274\304y\352\274\206\342\343<\262\351\217<\360\270T<\354d\365<\265MK=~\0305\275\370\236\031\275\017\351]\275\306x\'<\3541\263\274\300\n%\275\311\030:=\026\331\257<\010\216\372\273\354}+=\352\374\262<\024\350%=\017\361\275;J\227\237\272\345:N=\363\360\312\273\366\020L=\231\223f\273\374t2=\377\337@\275zV\315<\273E\247<\216\024\326;\023`_<\306\211w;\320\362\205;\005.\315<\236rD=\246\032\033\273\315\253\177\274e\000,<\2719\313\274\260H\r\275\273\237%\275(\270Q=@\337\004\274\242\353O=\r\\J=\030\307\022\275}P\005\274\366>\373<U\326F:\007\307T\274\332\207\231<\213v/<\372\353\240<\324:\330;\341V\351\274\246Y\001\274b\245n\274\364\3535=i:\200<&-A=\254u5=\010\031`\274\022k\311;\211\252.\275\036\r\003\275\231\306\337<\301{/\275%\221\017\275w\275\t\2748\345`\274\372\030\243<\356\332\013=\313\2353=y2\016<]\324(\275\0235T:G\222\236<5wP\275\273C\007\275.\272,\275q\013\014=f\327\252<#\271\240\274\213-w;{:\265<\256m\336<%\233S=\377KI=.\006\225<\202+\375\274\320\323+\275\005\244_\274\232\347X\275\305\270\356<\305i\227\274\246\341H\275\367xN=1/^=k\332\357\274\001\266\025\275\235\204U\275\020\200W\275p\347\357\274%s8\275\337\021\006=r\255\334;I\263\333;>ef\274PEO<\232d\251<\021k/=\267\246\334\274\305\000\362;\006\'\010<\026\367 \274\324\335\300\274\213`\205<\256\302\357\274\254\370\036\275=\314\027=\221=)=\000\314\311<\002\212\210:OU8\274\023(\325<n\320Y\275\323\2379<S\234\325<_\032\360\274\366S`<\234\200\004\275\025\236I<Ht\031\275\'|(=\231\0039<\261\220\001\275N\356\025\275\311\177\026\275<\2403=a<X\275{T\230;c\301W\273\312\225m\274\316v\356<~\305\020=\347:\303\2749H\317;\253\371\371\2738;0=\373\341:\275\321\323\024=q\001\021\275 }\341\274\177\264\235;\021mL=\3516A=T\213\246\273\347+\354\274\nz\313\271\017\323\366;\033o\004:s\304d\273\037\273G=ug\236<\324\251\314<\342\346\223\274\266\210\013\275\256\2424=\3562\234;^_\350<k\275\305;|=\371<TrD\275\2749<=\325\261\323;\020\037\217\274\034r\340<mb\350\274\nl>\275?T/<\211\225]<;\233\017\275\363J\263\274`U#\274N\"8;\232\341==\331\371\253:\231\201I;R\310\233<\355q\372<a\3009\275\253d><\3038m<\030\002\224\273y\230\000\272\350C\225<\205C_=\217\254\326\274\223C\274\274\355|L\275\312C=\275\231\321\016=\363@3\275\310B\037\273\330\355\265<\267\315\353<\353T\\=\025\341&=y\375\000=u\232\223\273\001\227?=y\257\320\274\305\030\314<Q\342\022\275\357\261\035\2743\247i<\230z,\275\'\205\232\274\225\211N\275\0136\322<\354\233\220\274\362\274\344<\250\351W\275\234\310F=< \r\275\207\217\026=-\310\374\274K\250]\274\340x6=\355 \371<;\2764=\'j.\2746\3737\275\305\221\375<\364{,=7\354\310\274\002u\236\274\340\237\310\2743\255\374\273>0\022\275\254\342;\275b\263\240<L\014-=\023D-\275\267\302Y\2759\220\021\274>YG=\363\327\037\273J}$\273B\345\007\275\231\214M\275A\227\013=\321\016$=s\243\357\272\310\203I\275G\345T=\224<\263<\303\270]=\342C\231\274G\332#\2756\371\232<\316\270==\256\3158;8D[=\347\200\256\274\013\276]\275\354\360\033=\354:\005=n\375X=\317\365{<x\034P\275\371ED\274n\363\020\274L\313\267\274\301\235\017=\365*\231<g\2305\275\264?a<\204l;\273\215w\362<cUj<\373p\202\273\345\330\266<\024\332\021\274\335\031\210<*\344\307\273c\260\264<M$$\275\335U+=B\324r<\277\243\033\274\"4V\274\0160i<\t24=\352Z@=\267\342\312\2748\032\025\275\202yI=\222\264N=I\254J=\"_\234\274\371o);\225\243\352\274\357\013\032\275\023\365%= \2217\275\315\303(\275\010\005\274\274\242\364[;\305T4=KW\253\274THA\274\240\301x\274\242\327U=\201\033\243\274\310$Q=\374\005\t=Q\005\"\275\376\267B<\302z\025\274\207\231\007\273\316\230\001=\200\0376=\243\373\201<\023\026\020\275\272\370^\275\206|\340\274\351\'\r\275\014\027l\273\036r$\275\266\325@=\264I\250\274\223\000\353<U\322><\220\243\362\274\036\250\217;b\\\223\274EY\007\2753\376J\275\302\227\005\275\027\\\023=\225{};\341#\016\275\023\3174=\202\371=<\251UA\273\242\033\'<{]\325\273\361\325\n=0\301\"\275%u6=\210\\T\275\300-\025=2\242\262\272!R_\275\232\234\177\274p\316\016\273H\343\243\274\031\221\203;u\200=\275,\2665\275\2105\350\274\237\252\005=\327\'\270;\000\314\214\274D\234\254\274v\031#\275\240\027\017=\312\3179\275\200tB=\202 \243<\306\311\"\275\376f\360\274z8\310\274\203\216*\274\212\'\376\273\263\351\220\274N\017\257\274T\211\211\274\340\210\227<\023J\303\272\313\273:\275\034\032\241\274\336\333\007\275do\363\274B\r\261\273\344\n@\275\217(I;\000\020\037=\\\007\024\275/gC=i\227p\274A~==f9==\240\212\211\273\250\260\021=\t\260\242<\007|\370\274odE\2758\303\336\274\330\022B=\366\340\253\274\3300S\275\273\341\325\273\224\'\354\274\345*Y\275Uh<=\rJ\034=\362\222\355\273i\367L<\324\222\327;`\370i\274\370\230`\274\273\234S\275\277\352,\275\3050Z<\267#\301\274$\361=\275\177c\231\271\255\266\253<6\212f\274\276\225\025\275\353b\027\274\236\003K<\t\3314\274\013\210T=O\032?=\266Eh;V\354I=\377T\200\274?\240\267\274\347\324\024=\236<\317<J1\t\275\325\367\333<\335_\221\274\324\002m;fd\205\274\357\372\023\275\346\357c\274|\361)=\326\200\005<\203\177\305<L\215\243\272\305\352\351\274\000z\002=\257\301\327<\207=.\2754\274T=\247\'\264\272\252c\036\275\275\354S=\'\342D=0\021_\274\374X\347; }.<\333y!=<\211\310\273\246\2503\275\031\250\336<vX>=_N\017\275\"\n8=\0214\310;\033u\272\274\363\257\256\2731N\032\275y\3576=n\331x<G\274@<\330\321\246\274)av<\222\024\251\274\'P\350<\307v5\275\034_8\274T8\034=\034\312\235\274\230V<=\347K\201\274Y\224\324<\314\346e\274\257\314\001\275\001=\026\275\003\345^\275\003S\355\273\352\211L=(\232P<\230\372R=1/\372\274\225lT=}\257N\275kv\t\275n.3\275<\036,\275\321P\265\274\"\256\245<uoE=\304G \275\016\004\345\274E\364\267<2\242\217<\261\317\037=\310\253>=\343a\340;R\201L\275,T\260\274!\353]\275\225\031A=\316>\213\274\367OI=\230\2217<\3649X\275\324\266P<(\306#\274\261\221\213\2747\306\224\274\\\254H\275\253a\255;\214\026\337<\000C`<o\362\202\273$\204\330<\220S\n<C\217\375<\224\200\016\275\254\266\363\274\324\200\031\274\020\361\317:f\225\331<\210EF\275\020\206\021\275\323\240\342<\233\203\217<~\220i\271\217\212\026\275jjC=.\206\321<\252\227\354\274e\344\366\274\255C\251\274L\'B<\252\t\205\274pG\334\274D\336\203<\035\345\255\273\332\220%=\340\r\270<\362R\035\275\t\257k\274\2445\224<\316\332\311\274~N\t\275x\207Y=\313S\305\274\237\253-\275>\262\334<$\271\207\2730\350\016=\313\324\\\275\232&\266\274\312~R<I(\305<\260\035<=a\233:\274\246JT\273\014\376E=Z\255\t\275\0105=<\315\224\313;et\030=\214x5\275\210\025&\275C\265\235\274D,\352\274KRI\275\203\244T=\307\"\363\274^]?\275\001\362Z=DHW\275\202\225\014\275\315\000\225\274M\320\225;\326+M\275\336\322\023\275Q\300I=\274r\3509\334\371\005\274\365!\320\274\307!\264\274\245\342\356\273\266+\022=M\350\031=W\253\003\275\224Gi<\251Y\177<\306\235^=r\302\360<\351\377I=G-N=\363T\037=\332\320V=\20158=\353\3000=\336\352\257<\r\324\"=`\3401\273\3526@\275\327\343\334\274R\332\324\274\004\265\"<\2277s\274\247\340\331\274d\263G\275\r\241\231<\316\"\200<\223U-\275c\3626\274\267\035\032;\222\360\350\274l\221(\275\341\0063=\214\254I\274H\235\304<\274P\236<\242\016,\274|\377\342<\342/q\274\215\270\343\274\233*\322\274\006\335P=\300\377\243\274\307\203\026\275K\223G=}\036\016=.\255I\275\337,O=\343X6\275~\341\273\274.LX=\036\352\255\272\355\033\320\274\206NB=>VE<\004\037\260\274\247\233D\275\353p9=\360X\002\275\3512\367\274@\332\021=\303\360\211<>\302\002<\330\336^=\337\210Q\275\331\251.\275q\271A=V \363<v-\311\274\024\321U=rh \275\2455\367\274d\014\037<\364{&=\303\336\r=\325y)<\257\370\311\274\002\244#\275\372\033f\274S\204\021\274\335o\257\274{e\017\275\\\355R<c\224\030\273e\3168=\273\260\247\274\352l\333\274:>\025\275b\361?\275~\215\275<\370\004\004=\305\031>=} ]=\035\033\205<}\007\360\272]\247\024=\314\235+=\215\021Y=\276 \026=\2103\027\275\320\305N<\007-S=\3257X=\374\373\002=N\233A\275\2368H\275`c\236\273C\234\222<c\344^=\233\227Y\275\003\303\377<\270u\027\275/6\001\275\021.%=\003\202J\274Yr\323<h\321\266\274L\3450\275\215R\020;\030Tm<7\'\013=\255A\004=.\"|<\242I<=\370\005T=4\236\271<\300,F\275V\024\262\274\362\356D\275N\244\333\274,\323<=\2754f<\323\352}\274\266\270\004=@\"\372\274x\3644=Y\265\014\275\201\335\236\274)0\030=\366\254A\275z\030\340\274\332\260Y\275\247\214\t=\246\177<<\275J\346\274\226\351\333\274\215|\275\274^\360\341\271\346\314\030\275\260\243\333\274F\254\004<\1779?=8\203\356<\\\241\341:JR\033=9\235\034\275x\304\355<%\207\244\274\364k\265<\253Zy\273\326\374D\275f@\353<U\n]\275\254\316\365\274\235\217\365<^\003?=\351\0257\275\322\331(=\337u)=\024|\366<Pw\307<z\310\020=\344\367\337<\022!\225\274\036y8\275\024\357Q=\314\t2\274\363\375v\273J\277Q\275\225\315%=3\362\\\274\312@V\275\320\275F\275\t\365\223<!\253 \274\330\315\346<\350\3706\275\216\372\027\2751\360L\275\347HN\275Z\t6\275q\362@\275\322\023\304\272\342\377\353;;d=\275\373p5\275#\315\026\275\223\351\262\274\213P\363\274\357sz\272)9\035=\314\244\035\275\366\036\'=\177^\224<\354r\334\273\204\356\322\274^\330 \275\372K\r\275F\214U=N\270*=\314]z\274\202\267E=\"\360\036\275\027,\236<\302G\006<\324\353\264<t\204\226<e\005N\275h\025\006\275\376\275Q\275v\002}<o\352\374<\255\201W;K \023\274_\355\366\274\336\362\240<mSK\273kZ\354;\205\372v;}\227\240;\227\241\n=\021>\022=\234\037K<m\335)=\341.R=3\231?\273t9\032=(\025\003;\353\222\334<i\325\354<\367\352~\270\211\002Z=;a\304<\262/\223<\213\347P\273{0A\275\260\373E\274$g#\275\025\362\324\274\013n\333\274\252\222\025\275~\200\370<\177/4=\035L\013\274\320;\355<\201\334\027\275[L\005\275\322\225\246\274(\270\335\274}{e;q\r\037<V\241;=?O`\274\334\261\227\274\223\3042=\202\177M=\202<\033\275\261;\321\272cE\311<G\257!<+\254^\275C\371O\275\312\376\030\275\0057\363\274v\205\337<\245\372\252\273\230\336\024\275x\324\346\274\316\023S\275\241\250/;.\264\363\273\201\242\273<\207\2643\274\316#\004\275C\360\202\273\330\326\013\2758`\027\275\333-\254\274vE[\275\2304s\273\377\017/\275h\r\366\274\301;$\275\307@\252\274\237\2328\275\202\243\301<*\263M\274q\235\217<&\226\361<\251\311X=\205\2543=\237\316U=\030\235\000\275k\3565\275\260\364=\275D\351B=\302\351\247<\t6\\\275\304\251>\275q\364;\275pM\034\275\275\330\r\275Y\315@=6rs<\230\376\315<(\223\007=\333A\273<Q\302j\274 \355x\272\001&H\275\307 /=K\313\265<\020\334\235\274\235s\027=?Tt<\323\373$=\212\204\376<\260A\020=\004.\001\275\177\251\331\274\344\273I=\357\t\t=\244\367i\274%s\010\275\036\317\215<\3127\211<\326m\273\274\367*\335<\310;?=\235\231?=\213\323\344\2724/\306<.MT;-\371P\274\220\322\010\274Z\004\263<`\022\342\273/\216)\275,\363\237;m\330C=\274\241\375\273>G\255;\307\310\250;l\242\266\272\013\320\001\273\373\023\230\271C\361\246\272\373\2631=\373xy< \020\346\273Y?\226\274\370\246\030\275\305PI\275xW0\273\021\031\244:?\034\307\274\237*3\275\027\275>=c\035\207\273YEE\275\357\376\024=8\233\\\275\203A;\272^8Z=*\244\022\273\271\010?\275\304N/:*1\330\274KxD=\217{\301<\317\370\201\274\240e\262\274\023\301\217<?\"/=\355\355\316\274N1>\274\230\231<=z1\255<\356\371X=o\242\362<\221\274L<\210\213\240<F\204\357;\037\301\007\275\261\233]\274\t\346\340\274\215\002\033=\370\313\210<M\314\326<\207\352\333\273o\005\033\275M\313\267\274\255\374\303\273\036s2\275Cy\224<\301\205\352<\243d\021=\272/I=<\3432\275B\007\251\274#\300t\273\377!$\274\010\216\321\274Gg\273<\302n]\275\"Z\\=\325\030Z< \361\316<=E$=Pv/=\236\363\206:\t\365A\275\220\204\310\274V\005\316<\346\325\204:\215\316r:\013\200@\275\361+@=\331\306\306<t\354\300<\002\375\017=\021\204&\274\305\275\312<O\326:=\0361\004\274\036\344;\275\252\353\3109vC+;\3544\363<\330T\031\274\022D\316\274\250[|\274r\227\370\274\217nI\275\027\326\252\274c\026\222\274\0328\260\273\n\202\010=O\351:\275u\356\'=\336q#\2753M8<\00035\273\n\262M\275\212\235\010\274\007\200$=m\322\320\272\224\366\022=\236\003,=\017\276J=@Y%=\331@\202<\221\346\t=\006\024\267<[E\357<ii\345<\266@\316<\037\242\306\274\253\243\"\275\037D\005\275\\H[\275\227\177\034\272\205R\014\275\3410\326:\224\344\261<\340\364W\2742d\n\275SF%\275p\265V\275f\t\025\274{\024\330\274\036\370\363\274G2\336\274\312\270\375\274\271\350\016\274\017\263G\273,(\\\275\021{\265\274\355NS\273\032\323\252\273\232\223/<\212G\346\274\276\271\"\275\211\241\233\273\303`\324\273\014yl<\242\371\265\274V\3217=)\327T\275\\\272\027\274$\031\346\274\371\316\233\274\241l/\275I\317G<\305\334#\274\352\037\354<2\233\004=\237\314)=\251\355I\275\313\207\256<\351\273F\272\245\305\017=+\233\262\274\326\236\222<\0141\031\274\024\0313=\262\251\025<\261?\032<~\272P\275\333\334\202:\310UA\274\033H/\274\210\252\000=,\241\214\274\325\004z<\034A\304\274O\340\234\273\246T\335<\021B\037\274\'M4=\273\253O=\004a\023=\252r\034\275\360\\\022\275\234\2612\272\216/#=`\217E<\220\372\230\274\315}2\275\256\341\036\274]w==7\005\022\275\2619\r\275.\327^<\265\223`\274\312\350X=z\010U\274m\353Z\275t\250]=$;$=i,\303<e\376\256<\346\270\333<6\024\300\274\02674;\334\224\201\274+\377M\275\323;\222\274\213\241\371\273\262/\360;x\370\007\275\315W\003\275T\304\014=\216\337\221\274o\333\\\275\200!5\275cY\244<m\272\022\273\211PZ=\206u\200<1\276E=\375\013\017:\331\224\272\274V\\\260;m@\"=\337}\231\274\201\344#=\207\2102=\257\215\257\274z\2229\275`#\223<\267\010\372:\352\362\006=\3756\213\274\372|A\2752\377\242\274Kr\341;\021,X=\025\037\320<`\216\016==\034\242\273w\274\206;\242\224\253\273\226\006\226\274z\200 =~\\,=\255\265Q<N\306?=\005\212\250<\240\343>=l\353>=\372\211I=\034\354\254\274\030b\003=\033v\254\274\217\302\004=\232\341\037\275\231\024\314\274R\336\024=VhQ\275\243\320\315<.\033\267<\240\266B\275,\376\'=!\035r;\252\356M=\020[}<\006T,=}\315R\274=\006)=\207\236S\275\354\363\351\274\302<@=\347{\301\273>\3548\274\226\377I;\331\273w<\244\360$=E\214\375<\347\231\007=\220<\343\274_\231\026<\026\353J=\365\n\001=_9\223<Q\025\340<\006X/=7\002\244\273\232\027\033\275\t\367(=\206\016_\275\231\240\340\274\367\354a<%\010\003\272\237\300\371\274\250\324O=8\320D<\262\2564\275\344\216\205<`/\033=\227\370\245\274\206\375@\274\021\\\r=f\201\210\273\220\255\034=\322W\"\275\357@7=\002k\307<m\271;\275\323\206$\275\270=\244<\215\243B\274\212h\256;\264T\030=\203U\363\274\345\367\317\273\227\244W=\352Z\236<\355\3131=\007\351\333<\263B;\275\254\323X=q\"\t=^y\316;\234\214&;\t\212\374\272\320\373F\275\000\331\'=\242\310\300<y\310P\274\t\032\024<\240\356\t<\205=\'=\271\361A=\202Q\006=L2\212<z\034J<\271\"\213<\t\231\033=\226 j<B+y\274\210R\';%30<\214vN=\004\232\002\273\202D\010=\036\262\275\274\224\037\226<OCQ=H\341\013=[\344\203<rw\206\271\241\356g<s\217\007\275yp 8\213X\241;\004Cp<\243\221`\274\361\177\026\275BjZ=\030,\267<\'t\276<{\326\211://\346<@\271\202<\373\260\234\273\003G/=$\204\314<\271\352G\275\362\023+\275\365\237\313\274\204\351\216\274\321g\246<#j:=\242\0378\275\016\242%<\246\362\226<\377\361\265\274\231_F\274e\265\202<d->=\373\3760=#\322\333;\261z\261\273\227\213y<\374\366\t\275l\223<\275\374\212\260<(y\232\274\362\210\231<\010\022Q\275\357\023\000\274\234e\027\274~\204\374\2736\217\300\273\320\223V\275\207\222>=\375&\003\275\261\244o<M\201\314\274\304\243\314<^:\262\274v\024\242\272\340t\324\274\343\363};cH\"\273\t\'\033=dp\021\275\211\024\332\274\003\253 =\034\304=<:\250H=\366&=\275~\305V=\374\002$\275\303d\007\275\n\243\346:~\370z<\236\340\353\273\374\234\363<&\361\232\273Is<\275U\313H\275x\347\006<P\273*=\365E\244\272\304\334/\2751Y4<\010\225\014\275}s\247\274\212z\214;\251a\025<\211\330\002\274\222z\320\274\250\226\356<\273\213\360<\343 \026\275\342\334I\274\377\034T=\203\363\342<\235\263\"=\313\033E=\3414\354<\216\004\007\274\211\302\207;\025\014_=\231\217\317<\006*H\275\365\3718<\242\3558\275s\233):\365kA=\251\010\375\273\3722<=\215\2214\275A\217\317\274 d\330\271\302C\361\274\311\203\3238\316!>\275\221\312;\274\3419\306<z\376a\274\377(\304\274\360*_=\027\221\371\274dn]9B\265\370\274\310\211\025\275o\235I=\235\357\372<\n\013I=\367\240\026\274\006K\n<4\3548=\314v\274:^c\000=\305$\256\274$\317\367\273\357i\327;o\253r<\007\200\024\275\230\240\314\274L\272-=+\036\r<\246\034S=-L\330\274\000W_=0\351\213<\032\2258\275M\032Q\274\330\276\026=?N\213<\241\027\236\274\321`K\275\360\000X:Q\230:=\335\361\034\275\235UG<\322\221\257;[_\321\273 \210\277\273\003A\332\274\216 \370\274\346a6<\260\000,\275xj3\275/v\007\274\3333G=\314i\340\274}y8\275\334SN\275l\206$<\200\335c<\336\370\027\275G\3317=3\275\001=\255\332X\275\355\tY\275\203^\034=\260\217\263<-\211W=\202\363>\275j76=\260~Z=\376\005g\274\344aH<62\327<\220\376\331<\376#5\275&\004\036\275\027\344F\275c.\023\275eU\305\274\021\231{:^\254\312<\3755\024=\033\326B\275UeW<\355nV=\325\335\030\275\347a\315\274<\200\223<\347\367Z\274\300*[<\214|\271\273\2338\003\275;\006\214\274\216\337\207\274\333\244)\275I\336\"\275\231g%=\345c\374<\313\302-\275Ot\317<\322\201==\264L\204<\310\370\001;\257)+=#e\016\275\316uP\275\177\013\253\274\200\317\240\2746\343\005\275\317\013E<\344Z\002\274\363\005\225<\217\367\235<\233Y\\<\2728T\274\224\365]=_@\000<\364\203I=\037K\323:\372\002\317<\274\254@=\257\223G=\2144\376<\2005A=\r\223\017\275\021\0329=W\007\227<\235\231\033\275D$\374\274g`W=\237\361\204\274\2232\001\274m?\021\274\244I0\274C\333\377\274\235n\030=:v\035\275\307\260\336\274\206\264-=lc&\273\272\312H=\371-!\273:}I\275\016k\031\275PJ\313\274\361??\2750\337\016\275\275\350\032=\272M \275\374 P\275P\314C\275i\003\367<\004K\024\275{\234)\275\376\306\034=\004E\305;[\r\324\274Dsp\2740\351\002=\322\346B=\206\002\204\272\221!#\274\277$1=\247#6\274\013E\023\275\252\330O\275\231Z\000\275\372?\013\275>\t\301\274\334\346!=\177,0=au\260\274H\214I=49=\275T\321P<\263f:<$\232\360\274Nz\220\273\023\205\324<=\3266\274<\361\035\274n\353\027=\240\2711<\252\261#\274\332_\006=b\'M=\007w;\275\263\224F\275\353@\334<G\310Z=\323\030\362\274\223\252\237\271\270\320\001=\375\246\364\274\370O(\275n<\024\275&\204\266\273t[A\275\204\252\242<\251\336G\275Xt~\273\035\017:\275(\326\005\275\353\317\003=.\3006=R\256*=\246\002\363<\033q\010\274L\310\320<\340\036\013<\257\034(\273\004\345\'\275\274\205\000=\350\211\364\273\036D\324\274\006Q\347<\027\337\307<\200#\035\275\366\221\001<a\357\247\2747\200\023\275\223\204\354<\352\370\027=\346zH\274\210\302\014\274\004\203\356<yS\216<f\254\334\274\270i8=h\317\005\275\217\023\347<\214\357g<\377aw\274p-\r=\370r=\275=\254\212\273\\\371\000=7#\324\274\370\006\006=\271?L\275\311\252\372\273Xk\t=HL\321\274,\354\004=\275\377\251<\217\246$=\224\250\021<\260\037L=\335\336\360\274\2624\004\275,H4\2754\026D=\207\246\360\274\025\001\034<V4Z=\274\331\361;>y\353\274\031-\371;c\340\237\2747\230\013=\270\365\032=xk\032\274gD\375\274\010\004\023=\200\227\365\273\\<\311<_\200@<\303\266\036\274\362\223\206\273\325\231\3066\331\367\346\274\303\356 \275\356\214+\275\010\017K<O\266G<qW\025=g\300\361<\343x\n=\311\212\251;\265 \031<x\314\222\274$nQ\274<P\245\274\353\020\326:\177i\350\273\002\332\t\274\304dC<Ba2=a@Z\275\240\274 =\037-N\275\353\312\272<r\370\031=^&\013\275\272\235\324\273\244K\267\274#\217\2649\310\214\004\275\371\304\306\274\' \t<04\'=\000%<\274\301\277\236;@*\270<0\3479\275R\016\340\274\262(Q\275\376g\026\275\375U(\275fG\371\274\260\0018;~\337R;){\214;\r)M={\310\213\274\354\334Q\275\013\267\032\275B\345&\274\235\340\002=\355/\002\274\271\372\221<\021\323 =\233\240\207\274*\370\300:\370\372\034=\315\266\034\275B\\\216\273\234h4\273\311F\022=\370\370\304<Pj <z\351\"\275\030\341^=\017\234\314\274\205\3458=\335\252J=(1&\275DZ\037\275\265\357;<\340\210\206<\022&\252<\316p]=\276\356\307<\374\2432\275\357`>=\023*\343\274d\200*\275o>B\274\355\261^=\001\241\023<\3012\347\273\261\366\320<\241\\\033\275\240FI=\024F\026=\267S\303<\272\037\010=>,\007\275Qa\304\2740\332\007< \337\260\274\320*\024\275\224\346F\275\261\253\006\275\337\331\206\273\206\270\264\274gL\343\274\014u[\275\326\242\325\273:\317\321<\322\357#<\323\3117\273\010N\330<\201*\362<\246\tG\275\3732\215<\317\360\007=\037\212N=\371\356\034\273\031\207{\274h\332X=\312\013\206\274\204fS=\206Z\350\274\rX\247\273\034\271L<W\275o<S\241O;\323\005\265\273\262E\014\275&\343?=\250)\350<\353\305\005\275\353\362R=\014\304*\275\t\025\001=\251\222\030\275\030\202\251\274\026\313\227<\332 \377\273Ua\351<\306\222q\274\373\346T\273\312\033#\274\373\234\364;\277e\311<\336Z\006<\316\303\036=\026v\251<SZ\254;\214\210\346<\004U\000=\257\351\215\274\241@\261\273\333\327\t\275}\311\024<\250yN<\372\"\325\274Z\3311=~42\27575\346\274E\242\243<z\"\235<\245\000E=4D.\275Lb:\275\034O\304;\336\022\004=\260\376\203\273\252G\243<\237\213v\274LhB\275\235\016\007=)9\037\275Hf\246\274U\0101=~y\207<V\331@=\335M\351<\341`v\274O\322`\274\357\032\247<\254\323\001\275\027+\343<JV\361\273\363l\030=\315n\233<\256\244?\274\244d\030\275}\030I=\333Yz<cx\006=\360\355M=..\036=q\377W\275\322\264\005\275\311kH;\274/\t\275\265\030<\275T,\315;;\351*=\037\373\"<a\307\231<\310\331\217<\303\010\304<\250\222x\274\021\204\024=\334=\300<\235\335\333\274\200O\000\275\302\322\213\273\252S\252<\343\360\222<$/\256;\206g\000=f\351T\275\211\t\277\274VF\361\273\331\221)\273G_\352<.\363\245<\301\346K\275\3032\035\275\253\302\343<}\014?\275\325\215B\275xk@\275\204p\314\274\356\240\'=I\216(\275\'\344\221;dj1\274\216\004V=S2O\275\205\217\324\274\371\245:=\3247\367\274\\\335\031\275\024|Z\275\232\351\'=o\265\232\274\365\232\010=\314T<\275\206\3269=I\0226<\214\005X<\260s[={FP=A\235\253\273\236\031,=\312\205\207<\006\246\004\275\340i9\275\005\202.=\231\370\273<\367\265\202<\232d\344\274O\355\230<\351=&=`\310`\273\325!0\275\251%\324<\341N\001\275/\336\003\275\271\242\200<\372\274D=k\350!\274i!U\275\336\237\257\274\2629\211<\246\240I\275\237\250\036=\341W\235\274\307\310Y\275\010\360\377<\211\203\004\275\311\2149=\240#F9\366%$=\006\300\236<v\221T=v\244\353\273\220\031\200\274\001\025\252<\356\335F=\0216\031\274\226\003M=Mu\030\275\372.\307\271*(T\275\026\270Q\274\371X\003\275\357\356\261<\030;X\275\277\345[\275\313M\366;e@)\273\225\321\267<jF\033\275\377\223|<\363m\000\275ob\331<g\310\025\27495\2609\353H\271<%j6\272\255\240\'\275\361wB\275\345\230\256\274K!0\275n\240;=\223\220S\275\304\036\332<H\257\025\275\266\326<\275k\265\356<\325\217\243\274\257m1\274\313\262\320\272\354\327(\275\330]\230:I\035%\274\217[\213<g\251\003=W\\\026=\007UB\275\211\335\361<\331\2043=Tr\214;\220c>\274\236g\016\275\214\350]=+\201\3229\">\266\273\024\341P=V\306Q<\200w\034=#\363!\274\376j&={\204Z=\260\231;=l\360\"\275\306G\'\275\027v;=\021\373!=N\327\272\274\237+6=e\016!<\031,&=\367\321<\275\022\300\035=|\2424\272\3141\000=[\301P\275\\E\266\274\000\335\007=\237D\033=x\311V=\261\024\345<R\206\222<\21038=\272\'\035\275\"=\215<\365\202\356<\326\013#\275\216\033\337\274\224\246\027\273\354\243\251\272>\313\324<L\\\001=kv\333\274fU\014=\233Z\360<\256\347\211\274\r\350\244\273\035v\004=\342\"\273<\204\251\026=\007\026\353\274>\201\232\272,fU=h5\356\274\352\006\377<u\342M\274/\2662\274i\323\336<\227\014<\275&$\251<\201\3501<\263x\020\275a\343\323<]\020\021<\251\347\366<\242\025:=\233\367\'=\234\245\351\273I\351\003=\202v\340<;%\273\2742\361N=\005\301\244<8\247P=q\235\276\273n\307$=s5\'=\251-\317;\322\370\357\274%0_\275L,\301\273\311\231d<\303\256n\274U\032\263\274\360\202Y<G^\\=\322\343k;\247\026\271<\350\253\322\274N\031==\264\242\n=\016_\004\275Z\2118=\374P=\275\002\353\027<\257k\312<E\266R<9\030\210\274\356\206\310\273\\\340\340;\361Z]\275\357\311Q\274E^i;\246\202]\275\017\216:\273T\031^=y\005G<U\371K=\022\n0<x\2473=\177\213\303\274\252D^\274\360\231\336\274\201\337\306\274\346w\210<\272\351\002\274\307\233@<\224j\321<\333\367\275\273j\211\206<6\3656\275u\304\212<\223\363V\274i)0\275}\255\034=\271\314\263\274\266y\305;{\221W\275&\211&\274\310\373\021=\343\310\273;_;\314\274\306\016\365\274\352N(\275\017t\022\274\213wC=\203\3207<\207\352+\275\005oJ\275\036\"\035\275\241\356>\275\347\005\035\274R\\-\275@A/=k}\006\275f\355\271\273\247\221F\275.\201-\275|\005\300<\005R\032=\274*4\275\314\240\360<@\363_\274\311\373\263\274k\377\250<\272a\360\274\022\360\334<z\341!<\375u(=\332\2273\275\326\227\034\275\3526I=hn9=\222\325X<]\333\347\274\274\2148=\322p\000\275LN\207;#bP\274(i&<E\\+=-\263\217<\235\367;=\277\2349\275J\365\n=\350\276J\274,(\227\274\200+\237<V\363\005=\035\204K\275\360o\341\273oo]\274wV\004\274t\036\372\273D\366\001\274f`\302<\003\031\330\274`!\227\274x\0323=\021}\260\274\310\036\344<\326\223\005=\236I&=\tH \274\333wJ\274\271\270(<\241\263\022\275x\377\232<\354\005\253<\241\301\\<\301\345]=YtA<\375\312I\274\\\014\306<\353\211!=}!K=\263\007\216<3-\305;\030a2=\222}\350<(I\276<\220R\361\274\223\201A\275\007\3150\275\027\300A:\014\345\014\275\312\212\316<z\375 =CS\r=Uqw\274\262\257V<x\206\014=l\210\332<\255\243\272\274\361\236\250\274dP\341\274\24616=\034\314A\273\375\224\002\275\340\244\036=DBX\275Y\036\265\274u\234\230\273q\276U<<\n^;\253\030+;.|\031\275i\361\340\272\376\232N\275\266\224\005<\227\340$=\366\327><f]Y\275\217\263a\274\2271\335\273\353\374\314\274M\2459\2753\213\024\274p4@\275\351\321#;K\352\t=\377\rP\275\350\236\367<\257\r\007=o\\\034=|\033\311;\022\307\037\275[\247+\275\317\212\200\274\234\317M\275\307\377\374<\373\026\005\274h\032\252<\006\016\353\274n\356j\274\215x\023\273\033\235\333\274\347\0139;\332.\022\274$P*\275\203H \274\322\212\222:\243\034\022\274\247\245\220<\204\254h\274\260\261\270<\247M\'=6\341\245\274/\320\260<\247.\227<q\270\343\274|I\270\274\377d(\274\350G\035\275\366\307\221\274\360\215\010=\367\3372=\034\206\000\275\210\370+=\010\322\277\274\376\366^<2\352*\275\262\"\023=\207U\343<\354\267>\275\310\210\014\275:\246\312\274\303\000\017\275\344\036Z\275\336\265v\2745\241\313\274\275\n\340\274\352\026\026=\254I\035=z\226\234\274Y0O<\277#D=\216\264\033\275f{ \2753\2439=;\303\035=\271#\035=59C\275P\223\257\274`\033K\275\217*T\275\177\372\003\275\374\236\016<L\232\'\275C\342A=\371\204\037=j\030\310<\310\020\247\274\032\325G\275\350\324\377\274\234G\251<&\351\016=\2263\353<g\315\037=\347l\0329\314\204X=\305\023\217\274\340\277\303\274MF!\275\236(/\275^U_=\336\024K\275\364\360\325:}\004\242<\"\247\355<$\345\r=\250\220\020=|\030\025<4+A=\213\224)\275-h<\275\033Q\036\2756\340\300;\245\002X=q\364\020=\236\270\024\272=\307\361\274\261\n]=\354;T<\253\333\002=%\005p\274w \034=\027\204+\275g\301\262<\216\347\204<\033l\036\273.Da\274\360\215%\275\204l\275\274\tB\005\2740\263\205\274\273\014+\275&\237\220;\037\276\346\274\333i,=Q\311\241<\253\325\377\274\315Q\332<$\335\007=\240\262K\275\316}f\273\373\036H=\253vG\2750AK\275Q\375P\275\2344J=\034\304H\275Hh\204<\266??=:\317\246<\240O?\275\240\024\273<6=$=o\377\026=\254\357\220;t\375\016\275\037\376\370<\217\316 <VrC=\230\036L\274f\323\343\2745N\021\275\363\024\031\275\332kj\271\205\321\277\274Q\343\026=\tv\200;\010\214\n\275F\262\024\275\274\274\317\274\203\245\017=G\013X\273\004M]\272\005g\346<g\265h\274_K,\274\241$\201;(\311\212<D`K\275(/O\274=\237\240<\326\265\017=\2156\003\275Av\377\274vs@;\r`\036\275?\215\245;\330\237)=\034R\002\275}*\342<S\215\022=v\324\003=;\225\316\274?\r]\2751z\274\271 \207T\275\364\371C\275\335\343c9\024Y\037;\214\331\222<\014K\350\274[\203\220\274^\377\276\273\313q\014=e_8=)JO=VCM<_)d\273\214\246\321\274rsB;\232+]=\264\2466\275e\325h\274\305\364\265;/\267\203<\216\367\227\273\025\261\306<\007\2573\275R\240\237<S\2337<\306\316\021\275\200d\200\274\253<\301\274\n\213^=\343$S\275\275;\017\273)!\315\274\312\257\357;\323\363\213\274h\214\263\272\023\217Q=\216\247\025\275\347\273Z\275\027\315\262\273\331\226]\275\260\260\020=\215\204\320\274\323\375\000=\004\345\032\275\177\212\231<\223\263\254<\0322\304\274\372\000R\275\207\245\223<\000\350\376;\t3\016\2744\365\333<lA\200<\336o)\275\231:\272<\226\005\n\275C|5\275\364\324U<H#`<\202\2544\274tX\227;/y+\272=v^;\022\360^=n\306.=\216\355/<\276\372O=\233\n\323\273\345y\306\274\370\217\356\273\212*v;3\301\305\274_N\377\274\324\244D\275zN\341\2747N8=\341=^\2732\274-=\317m\235<,\343\254\273wR8\2750\242\221\273\370\313\257\274D|d;\226\376C\275\007S*\274\264\351\201\274brk\273\232\200\347<Bf==Gj(=h\t\352\274,nG\275DoZ\275\037[=\275\r\225\263\274\337\2327\275\nm\330<\341\250\216<\303\233\346\273\323\210g\274{\241\234<\315h\017<\024\254 \273s,\311\274\177\302]=Y\376\\\275\243Z\372<\227\022\240\274\037\365\213\273\360\302\022<l\325\317<S\221\276\274\031T\227<p\270T=\274\\\036\275w\023\333\274\024\350\016\273\2743\314;o-\032\274\">Y\275\016PB=\260\254\017=\360\263M\275\177$\010=\311\230\002=> \036=V\004\375\274W\307\310<@V\305\274Y\325\241\274\026\334v\272\034\251\327;8@\365<ge\346<\031\031|\273a}D=\264H\323\274\245\377W=a\035{<\266\271D\275h\317\"\271\360\340\313\273\2613N=\007\005.\275z\201\274\274\311\372\300\274c\3631=\250<C\275h<Q\274=\364\017=\245\304\246<\301\200\223\2744s\230\274\002\241R=cp9\274\241\265G\274\322\031\002\275`\335<\275%\374 \275\343}\367\274\242\226\022\275\030\306\271;\230\003\242\274\333\034\254\274`F\252\274\240<\202<\027s\022\274:o\236\274\266\254R\275 %\332\273,B\203\274\001#\r<\302W@\274\330!R\275\212S\227</\314\214\273\210-\';\340\305==\207\370\330\274`\305\275;%\207\321<\264wn<\010\250\007\275\371\320%=\316\tX\275$W\276<0\311\275<\351\351\330;\372\225\000\2757v\010=*Q0\275\252BP=h\276V=.>\312<\311\271\277\274\250<\016\275\366N\005\275\0219\024=\004\317\276\274\233\353.\274Ut\004=ap:\275F-`\274\350\\i<kJ\035=\032IH=\271\256\020=\263\316\364<\306\316\004=\277\247\237<B\245\233\274x*W\273Hn/<\223\030\254\273\216\273\207;\321\340\303\273\313\271\317\274\254\265Z\275\034\242X=\241YD=\033U\256\273\223\362U=\221\223\337<\223p\354\272\022\317%\274\347\347\016=!\003Z=`\272n\274\205\231 \275\365\315\253\274[3[=\331T\024=\313\201\231\274[\256\374<\325\332H=\032\237\240<)s\314<\223(\214\274\234\332$=f\264\025\275P\271\003\275\002G$\272\353Ls8\223\364\372\274\\\243\037=o\3630=\250\020D\275\322\276\021\275\356\373X\275a\304\n\275\264\330O=\022E\330<\371p\"\275k\027\267\273gGZ=\207X\020\275\003i\322:\234\263#\275\323\316\265<\025\323E=,\2546<F\355\372\274\304\247\333;\177\3635=mW\220\2739\351\037=\000Z\2139Oh\014=9\347G=9\273A\274\243y\031\275\231\336o\274\333\377^\275\273\212P<\202B\032=}\t\237\274\211i3\275\001\302\364\274-\006\272\274pX\031\275!\271\"<\243uS\274\23381\275I0\310<\251~\360\274\036*\"<\241\336\030\274\250\260[=\242\331t\274\niK=\365\202\204\274\245\240\020=D\251\360<\"\311\020\274Y\\\203\274\2408\024\274\230!O\275l\266-\275\316\377\263<\007\001K\274_\363)\274\013\243\273\274 /M<\206\000\222\274s\375I\275%\370-<\256\036T=\007\235\000=\361\350L\275urE\275h7w\274\261\033\271<\210\221>\274\337\270\264<]\233\326\274\222@P=_\314\327\274E\337S=w?H\274J\031O\275L\317X\274V\334\224<\266\225\325\274\036\255X=\223?\n=\200\3570\274\260R\n;\300j\232<Z\304\006<\353v\274<\202\351\324<\224:\007=\311\300\016<\316\341\352\271\263\303c<\3371W=b<[<\021\377I=a\361\024=I|\372<\354\233D\275\305c&<\317\224\036=c\271T=9\204\303\274C/\253;2]\254\273.mI=\025/Y\275m|;\275N2\227;\373\007\177<\362\375/\275\255\314b:[\310\370<YdK<n\036\306<J\323[\275\3522]=8\270\306\274\277#\262\272\311G\177\273\007\254\027=;\252\241\274\261\003\016\275E\301\221<1v\320;\r\300!;d\3235\275\240\016G\274\256\341>=\314\347\213\274\377\\\202<\325\375\037\274\207\\\r\274\226\225\020=\270w1\275t\335\330\272\257\235\021=E}P=u~\t=\231\300M\274\342S\312;#\250)=\234#\305;d\376\316\273\343\0334\273r\235\253\274N\332Y\275\014Q\260<&YM\275[S\020<\244\236^=\023\3035=\025b9=$\266V\275\364Y\357\274\211\\\2179\321\265=\275\025x\020\274B\315\313\272\331\255\n=\236\024J=\342\207\265\274\032\263\311\274\200\3045\275\341\372\357\274 \t\346<f\3579<\016\274Z\275\321m5\275\303x\275\273\274\375D\274m\226D=\036\2030\275\227\332W\275\337Y9\2753\362m\274\364w\025=y\276\265\274(WL<T\237\231\274\271i\327\274\322%\374<[\266\344\274P\277\006=\336\275b<\025\272\244\273{\304\022\272@ul\274v\347(=X\331a\274\245\t\027\275\316\255\221<\337\231\026=\034G0=\276\336\201<C\315\347\274\217\255O\274\0353\377\273S\337*=X+\037=\331\2040<\202Fe\274\231=8=\360n^\273\215\371\t=\357\224!\275\035o\274<ii\242<\235\317A<\342&\010;\227\341\177\274\274\247\034<\240\007\356\273\335\016\036=\316h\350\274\016G}<\372\351\271;\035\353\240<\231\031\231\274IIL\275\352\035\317\274`\035\017=[\310\275\2727l\215<\177\227\233:=c+<\336\213\241<vs\272<\372\2112\275~\223\333<;\217/\274i\367!<\261h\017\275<O ;\304A\013\275:$\010\275\310\306\016=\253\0278\275]\022\375\274q\317\007=\301\022\033<\233\035C=G\237\\\275\325V%\275C\260\251<9^&\275\017\\\t=\344\231\303\274\3101\246;V\326\213<5\254\254<I\2573<:\035Q=?<\254\274I\224\214\2745\310\237<\273\251\345\271\007\350\031<Od/=\254\252A\273Eq/\275\025I\237\274\327\272!=\347g\200\274\245\350\036\275\244\273\225<\211\'I=I\232\244\274\355\335\305<\215\312\237\274<Z\271<o\240\034<\307\246\216<\361l@\275\007O>\275&b\035\275+J\001\275\372=^\273*.\266\274\336ZN=\241\014=\275\334\320\031\275C\032\216\274\2153L\275\207\035\014=[vP\275\253\363\203<\\\330M=\325f\237\274p\226\245\274a\2643=\035\306\001=\203:\'=\340\251\001\275}\210C=\037\333\212\267\202y\370<Pl\016=\017\371\302\274\305\240Y=Z\024\372\273\244Q*=*\377\242<W\017#=\236\207\226<\034\307X;\332\014\334\274\r\311D\274&\313\240<\231\007\347<\322\037\375<\317\252\351<\300\241\242\273]OV=\332$\027\275_H\364;\331\263V=\266\210:\275\t\243\260\274\324\2510=&\317@\274\033\201\305\274\340\375\014<G\035\n\275\217\021X\275\362 L=\356<\232\274_\007Y\275\353\271I\275:B\230\274\016\341L=\217\315K=\267\207U\274\214\'\225;\257\257)\273\243\0240<v\032\255;d\037\321\274%\252\344<M\336\037<\322\272\260<DZ\323\273\231\360\021<\247\345\342\274\021a\305\274m\244\027\275?r\351<@\340S\275n\0101\275\273m\213;i\213j\274<\311\031=\250\024\255\273vcJ\275-YR=\364\363\261<q~\343<#w2\275QY\317;\035\313\206\274\362S\026=\330\2348=\242\276\276;2:\202<uxS\275\300:\252\274\t\n\337;\236\031\007\273\226\301\006\275\014\305S\275\276\311 \275\326\224\037\274\032\007\232\274\254M!<Q\204Q\275\375q\025\275L\247*=\306\210C\275\352h*\274\337P\277<;\263\323<\276\247\244\274\220k\257<\003\265\016=\033e\024\275ty\213\274r\010k<e\350)=\335\277\010\275\232\351e;\266\221\004=s\240\247\274\246C7\275\322\370\355\274W\2309\274\335k\331\273\'eg<r\031\346<\372\367,\275\'{$=u\370\226\274\3046W\273mu\014=d\327X\275#\0321=\225{\246\274=\251[=\3733\354\274,\036\367\274\272X\206\266k&\006=\243+%\275\324!\255<\352\024d\2737\270\202:%\017\207<\352\325\315<\370h!;1\265^\275\257%\353<\351\373Q\275\312H(=\242\'\t\275{\332\\=w:\363\274,\031:\275\252\254\333\273t\241\001=\201\376\277\274p\2335=\036\304\026\275\004Y\255\2736]8\275\3329S=;\374K\275MA\005\275\315\203]\274J\036b;6(\365<5\202P=v[,\273\235\017\031<\363A\001\274\341W/=x~*=,\025\001\275%\347\246\274\024\265\205<\306\265\n\275.lZ\275\276sS=t\303]\275\036|\314\2747\006H<\333+\335\271gK@\275\330#X\274\314s\335\274\032\221\030=S\241\007=\020%W\275\3430\035=\224\317\n\275\235L\007=\003\323\302<+=\220\274\230\350\323<Y~]=\342\314N\275\236\3678=\345A\244<\372\250\347<^\345\003<\377\207\016\275\207^\261<\270\312\271<\357\230J\273tr\301<G\212\"=v\327\214\274M@\367<\214\031\222<\202yV=\225\246\231\273\273\006\246\274\004\021\005=qK.\275]\354\322\274\210\265\215;0^\262<\013\214F=\343ZQ\275\352y\334<\033\230X=\350Q\244<4\213=\275\347\312E=\354\376>\274\302jZ=\225\242\025=+\315\300\274|Z\010\2756\000<=\366\266\036=c#t<\341\273\331\274.\211>=\0146:<\022\027 \275\000\227\354<[tH\275\341\273^<\017P\363<\213\332\351<A\322?\275\203\373\261\274\276m\313<`\343\347\274\243\252\374\273M\347\026=\373m#\275\013\251\354<\036\367\002\275\330ZC=4\242\262\274\250$\347<;B\\\275\216w\261\274+\021;\274\375M`;5{*:\355\237R=!B\375\274\202H\n\275\357G\256<4\177\233;\367\250\022\275B0P<\230\302>\273&\330-\275\006\267\007\275\353J\226<\243\354\027=\356\3765\275\350\007#\275\240\003{\274\255\033\257<\3237N\275\002@\014;=\217 =\235m\"=\217\273\232\274a\220\031\275+\270\355<\236G\332\274\t\352F\274\321\267H=*\207C\275\364S\314<\323\344\023\273#*\033=\014\200%=W\237;\275x\356?\274\376A\377<\331$\261\273o\340\333\273\245\225U93>\022=/\251\014=@\017\026\2750\327M\275\225\3635=\330|\252\274C\264?\2754\244L;T\212(\275N\210q9_\215\334\273e\006\366<\346\327\200<k\346#=\276\360\r\275\024x(<\247\376\023:0\206\246<m\2246=\242~\354<\304(\364\274\307\316\001\275\030lm\274\004\344\320<6\235H=\247\336\225<\234\035\036=\321\226>\275\245\350\264:\220\r\316:w6\250<\332\307,=\361xW\275\273\240+=8/#\275;\007\235\274\0144\375<-\254\261\274\n\240\247\273K\263(:\007v\021\275\263\240\030;$?Q\275\007\341\034=\334\277i\272\245\343\272<ox\342\274FO/:\250  \274>f6=\367\345/\273d\313\353\274ht\343<\337\263\320\274\t\236 =\311\205\017\275n/X\275QZ\260\274\t \031\275\217\300J\275\332\262)\275\310\260F=L\002O\275P\331\266\274\313\220\356<!\'\250<shS\275\025\277\007=aXc<\231A\370:1\230\227\274\333\322\232\274\262^\213<W\360\210\274\347\255\325\274\352|\257<\361W=<\026\303\031= bV\275\213\254z<\037p\244;u\201L\274\315z\356<B0<\275\024\366\007=\217\320\026\275t\016W\275\351a\226\274\203\313\276<\313\035N;\212\375\300;\352\346\034\275\245\226V=8\024\245\273\274\002\004\275\377H\215\274\232(\023=\314\233+=\245\226$<\257\215\276<k\331\006=\362\325\342;0\3739=i\310\2339\022\221\250;\343\262\241<\210n*\275VX\354\273\216\355~\272Y\246X\275\344\336C\275\327g\344<\022a$\275\235\361\225\274\271\314\267\274\255(\335\274O\306\260\274I\306\030\274\315\323\0109\000;\317\273\2659L\275\016\242\372<\3339:<\316\321M\275\377;\013=\321E\360\274\214M\254\274|4\261\274rm*\275q2\274\273\017\nA\274\n\024\362;\254\364\t=\\xS\275\324\030\210;\343q\333\273\305\2772=\033[\023<\022\034Y=\313\360R\275]\246\032=\001\262\300<\213\365O\275o\201\307<\200\t\230; v\354\274\356rF\275\353\376\t\275k\205\313;\n,[\275Y;0<K\321Q<\"\264K=\235\340\260\274\233\310L=/\275*=\260.\372\274y\225\215;s\034\006=\025\300\001\275\340\2349\273i<\026\2740i\315\274k\034_;\323\271\003\2759\252Z\275\366\346\361\274>\375\271<G\301\030=\033}\370\274\0240\315\274\352d\372<\376Q\240\274\016vs<\2318\250\274ep\213\274\033[~<_o\\\273t\306N=\304\300\033=\036\335V=\370\033A\274\273\243\306\274&Zh\274\005m\350\274\343<K\275\026\270\316<{\240I=\303\023\353\274\201\255^\275\266\021\376\274\263RH\275|x]<Q)\312<(\016U\275p\225/=\331\023{\272\214\350\315\273A\301\230\274\344\261\016\275\250\220\335\274#l6\275\235[-\274\340P\000\273\342\244\037\274\'\256N\275\364\351,=\237H\266\274\357e\246\273\271\322$\274\"Z\002\275\027\000u\274=\020\026\275o\227\302\274$\3769=\257\275v\274\210=$<\204+V\274\355\212\351<yc\232<\017\006\n<\316\271\337<L\244\333\2735\374\273<CT\n\275@\177.=w\207V=A\304\365;\252\2576<\217\357\242\274\006:&=\000\362f\274\324:\r\274\007\023\342<\343\246!\275\301\302C\274\241\333\002=\226\203=\275\014}\226\273Ug\016=c\376I=Y\316\002=E~7=\203\227l\274S%\215;\327\241\221\274\206\373T=\242\345>=\305u\343<\243\317\233\274\257e\215\274\2600\031\275<O\233\274\317\211\241\274\353\323\'\275\321\330\334:\340\"\036=\316\206\r\274\302\322\016=\245H#=\262\007Z=\314\260\\\275\022\3007\275Rk\273\274J\306%<\225z\233\274.e\215\272\177Y[=<\252M\275\310~\036\2744Z\340<\010tX\275\263\302^<\334\366D<0)?=\2542\257\2738\3156\275\254f\253\274\016\211\275<\315\274)=D)8\275mI\001\275\351V\374<\211k\300;C\200\330<\007\301\326\273\265OK<|\305\277\274o\277N=\360Z1<\200\324a\274$\300(\274\210\323\346\273\031\350^=\201\236\001=`\354\025\274\327r/\275h\362\217<\n5\001=\033\355N\275\20534\275\220\306\205;\235\3466\275\321$\037;\264\374O;I\265?;\224-\037\275\364&\351\274\224\234k:H\243\n\274$\2774=\345\016\372<c\273\343<\327\\\367<hm\356\274RKH=\306\363\013\274\037\271U<\017\326O=\364\357\"\273\031\235\244<A>\201\274\231\310\333<\330\363h<\373x\t=<\256\025\275[\366\212<\215\237[\275\025\265U\275K\013X=\321\'<=\213\3758\275\327v\037\275\333\223#=\244\002\233\274,\236\236<\004\\\327<\032,\r=\252\333\016=n\204\277\274\270\214\256\274/\276\201\271P\234X\274\312\005\274\273I\226{<\246\232F\275B\315\306\274\013&9=Kz\010=\274\013\322<\327\024q<\310)\013\275\322\226\267<=\376\232<\245\355\352<\017\213\271\273;\203\t=1\264\255\274\021g\353<\320\254p<8\362\034=\326\006\'\275c\306\225\274\227)>=\034\341\004=oA\'\272$#W=G\034&\275\377-\t\275P\222g;{\003\302\274\346\014\014=G\273X=\333O-;\254\024\212\274\216\272\206\274\337\227>=\373\355?=\351E\347<\317\234\363;\345\261.\275\222\322\274\274\356\211\324\274\222Sl\274\021\366L\275\207@\230<\033j7\274\230\201\232<\"\207\036=k\005>\275\373\n\307<\260\324/\275\031\247\332\272\306\265h\274\203\3578=\014\352x;\246\367H=I^\215\274\210\225\276<\360\252@\274\255M\002\275\260\365W=\202z/\275\017\347\324<vm\016\274\224o\306:SK\027\275k\202=\275\300\267\360<\366\242:=\324\262Q=\313QT=%B<\275\326\320\'\275\3011\017\273y\364\302<W\237\'\275\303UA\275\264\267\035\274\030?O<\021\3073\273\177N\244<\312\243=\275\353\312Q=\000U\n\275\357g\007\274\275\231\367<\335\265?\275\301\370\357;d_\027\275\352\032\270<\2242\026\274\240?\323\274w\300\227\274\255/\362<}\014L\274\303\333\210<\016\'\036=.~\273\274\033+N\274\363\254\261<\256}1=\023U\014=\317l%=\021Z\331<\005GO=\323\302\021\275\017\230L\275\026\340\022=\350\327\227;\260E\277\274\271@\273\274\242\223\322<\310F\020\275\234\316\237<~\002G\274P\204\024\275\3122\275\274u\211b\274\031h\225\274\027\274\244\274\247X\330<\004\3578\274l\027\003\275i\035U=\372\217\375<!N\365<\356\024B<\216\020\017=\2517\247<\252y\2719x.\\={2I\275\204\252V\275\317\331C=\202W\t\275\332\037F=\275\004\022\274Xw3\275A\362\274<x\016\004;\252\013\232<T\274\231\274\374,t<\342\325\341\274 \033W\274\341\014\242\274\373.$\275\333@\'\274\251\226\324<\355\343\377\271!\371\022=\304iD\275$D@\275i\346Y=\203!\r=\211UE=\323d+<\324\r\300\274\233\340\263<\340\212\010\275\273\360\t=\037\t\006\275z~\225<\331\370_\274\222O\n\274\253NF=[\232\272<=\243(=\273o8=\002\226\023\275b;\005=:xK\275\034\347\004=\374\376>\273O\351A\273=W4=\204\236\326\274\016\014!\274,\265\213<@\032\332\272\321\213\274\274\257m\311<\271\270\344\2741M\253<9\315\t=\316\246\024=\347\323A=]\274<=\352I^\275\304\021.\275(\r\246\274\276g\367<\330\222V<AM\270<\026\037G\2758\206?\274\277\270\211;\353%Q\275\252\007\332<\033\327e\274T\240\010=I\243\350\274\320\316\212;\031\262\311\272\377\225V\275\210\232C\275)\246L\275\211zN=Z\332!\275\364\023\036=[:\230\274\232\323`<\214\225<\275j\307\220\274\206L\306<\177\235\332<2\302\304\274\013\222\023=\r\354\221<e\332\214<\267G\204\273-h\232<\032\2350<3u\336<\014\370-=Q\316z\2741?\207\274\375\260\217<\233R\250<\214bA\275 \360G<X-\n=\\\306=\275J\256\245\274\023\245\234\274@\004\005\275<\346\002\273\224\313L<B\370\024\274km\177\273\275\033\260\274.g)=\013\365\250\273y\246R=.\033\237\273:\007Z=>\211\255;nK\203\274\224\252@\274\036y\266<\315\217D=\377\3429=\311\2305\275\352U\027\273\340\221\311\274\265\253U\275q=\342\274\205\233\265<\251\310\314\274\000\272\t<g\267\034=\233\2717=\341\213\234;\026\356@\275vo\277\273D\362!\275V\271\215<o\322\377\274\n\230\360\274\371K5=8w\202<\321\333\333<\034]N\275\261b\360<.LM\275S\244\342\274\371\311\031\275n\213\253\273X\264\031\273GC%=b\347B\273\355X\310<\317\237\210\274\002\312,<\311\327-=\360s\034\274\035\377\347:\365\335\310;\201\004,\275\322\310\216\274\323!\211;\366\311\231\274U\002\317<\261\376\210<\364/\205<$\345J=9\024@=\rk*\274\021\372$\275\272.\306\274\022\370\242;}\250\225<\317\316\323<\307\227\247\274\026\213/\275\335\247\367<\271\373k\274\215t\302;\271\356\227<a\025K=e\373U=\360\366\253<n\031\314\274f[\\\275&\216\232\274\3643\014\274\251\205\003\274$\303\324<\222i\274<\345L\340\274#\333;=\177P\340\274\330\325\300;\336|R=E\225\036=\306\370\255<\037\227E<+I]\275>\305\002\274\266\276\"\275r\257\312<\346\031J=\240\216H=\217\2135\275\377\251\016=\025\223\033=\301\3430\275u\n\337\274\273\0333=\313\001\251:t\2119\275\rG&\275\375~\000=(s\033\275[\031\033=\001\377\177\274,\275\205\273\ng\210\274+NZ\275\214\322\007\274\021\313\203\274c\346\267<uMQ\274f\360\264<\315,V\2753\265\310<Q\315\242<d\351Q\272B\315\222\274\353\226L\273+7\340<y\301\"\275\265([=\266\334\010\275V~\035<\034S\002=\371\324Q\275\231j8=\330\241\372<\331\213\236<,\217S\275\n\265M=L\312U=\320\034\267\274\025\0220\275\242?\241<\245\3178=\276R0<w\303\250<j\335H<;\360(\275P4%=br\264<\257z\007=u\313\027=\025p(=\230G\230<\216\304!\275\213\312\367\274\204\213\254\274\232\246\341<\247`E\275\217\237(\275\322\333\231;T\2506\275\255Rb\274Vb\274\274+$\257\274Rg)=\323\333\033\275\205@\211\274\327\330F\274\337\322E\275\223!\017:AZ\030\275!\327]\275V\310&=9\200V\275\324!\004\275\210\'7=m\304N\275\307f8\275;O\315\274\341\261\266;2,Z:\201Yk\274dHX<L\004\253\273>Fz<\225}[<\032\364?=\315\244S\275\252\275Z\274\213\344`\274t\326\001\275\362\320\371<\362fV<\335v\3549\022Fi\273\242\221E=n\233E=\261\235P=\357\220\320\274\302\222T<\310\207]\275\242~\201\274eT\237\273\367\r\027=\025\220\243<\034\264\023=\014\235\247<\364%\332\274|\200\263;\314a,<6\016\340<\037\3430=\221\035\235\274Y/\234;\333\324\205\274\265c\375:\211q\033=w\205\202\274I&\377\274$\305\321<\025\247\314\274R\364\034\275\212=\335;Vq\037=\305[\273\274\350v\010=}\3744\275\325\025I\275\233\374<\275v\352\243\270\3055]<\3537\004=[\013?=\276.\267<_&\233\274\301-J=g\037U\275,l\353<\203\363I=\321x\311\272\014\365\007=\017\355\013\275\350\341\244<\272\213k\273\204\370\223:\2554\340\274\374(\037\275E;2=\326C\273<\216\247\266\274p\n\266;5\325\200\272\323\017U\275K4O<\322\203\323\274\313\207e<\257\020\207\274Wf6=\024\010\005\275\264\352\035\274n\035U;\342US;\266HR=\3336?\275S\231-\275\367\2771=\331\277N\274\2643\346\272\"\223W\275\177\357\306;\025\312\364\274\327\357\023\274\001\236\025\275\313\211,=\354\302\241;\333\0178=+\2025\2754\240\214;m\355\322\274\257\346\363<;u\275:\010\226\257<\224n\037=D#\014\2757\265\006\275\273s\243<!\000\245\274\273:\374\272\023\364*=\264\323\266<Hw\023\275\271\336\350\274X\337\024=\275\265\007=7\026\036=\344\302\345\273\013\347\306\274\323\353\242< \341\325<cY\371<{b\342<gU=\275&\007\230\274r\027\024=}\234T=\233\013\267<$\007\255\274\2473|\273\031\031\205\274\002e-\275\370#\250\274\271\0321=\225\277\004\275qZ\221<\017\326\357<b\332@<\317\370\263\274\377HS=F\202\204\274\0343\006=3Q\"\274tq\'<\356\345Z=\335\333\256\274!\007G<S\317\003=&\003\001=\331s\362\274\245\004\016<\020\356\324\273\214\226\003=\2733~<\013\371\215\273\260\256\245\272\236\347\200<w\251\027\274\231\306\026\274\265\340\353\272\320\213\030\275\354\342\325\274\031PK\275\301\023\264<+~\307\274\006E\013\274%D\372\274A>\332<\2418\223\273G_\223\274o^\n;K\374\272<\257x\223\273\221;\337\274\'\027\276<\264Q\016=z&/=\"g\300;\270\217\230;\224P1\271\272\206?=\256@l\274\351\332\226\274\023\222E\274+_\226<0\'\313;\262\362(\275\234\370\320<\313\021\211\274\262s\347<Q\310(\275\023\257\345\274\316\n\036=\363vL=rCV\275\304J(;\316:/=7\021\022=\275\020L\275\211N\321<\007\306\301\273\220\tI<\342or<c\216P=-\270\007\275\254\373\332\2740\333\243<\036\237z\273Dm\014\274g\375\352\274\006\244$\275\031\025>\273\263o\271;\275\265\255;\3556\244<,\264\206<\251\335\267<\333\nW\275\221\330\355<\205\347\036\274\316\344 \274\025\345\356\274\035j\333\273\237\331\365\274\270p\363\274\320\274\273\274t\262\231;\213\231(\275GM\272\274\347@\245\274N\250\034\275\360\014\210\274\250a\372\274\234lG<\300*I=\352\346&\274\373\n\331<\341fk\272\024=\224\274\r\334\006=h\341>=B\\\364\274\225\320C\275n\204C\275\354s\256<y]\030\275\227\347K=\242R;\275\257\233\032\275_\021\222\274[\351\233;\351o\371\2748\364\344\274M\031\314<\037\276\207<\033H\372<a\302\254\274_\242Z\27522i<\306\n\t\275\010\013\215\274\177\245W;0T8<\257m3=&*;\275\344\0350=\3760\022\274\275\016=\275\336\262#\274\233\201V\274%\303h<i\367?\2748\256\246\274\237\237\215\274\262(-\275\255=\002=\361\334S\274\350\033\240<\020\252\004\274\370$\325:\026\233/\275\235\177\371<f\260\203\274>\001\016=\211\360\026=R\261J=5\256\204;\347\253[=\226\200\304\273\353L\371\274%_\356<\255\246\'\275(>1\272\206kB\275\336\204u\2743\242\t\274\255L\232<\232_,\275\224B\004<\211r =\025\004\242<g\207y\272R\360\373\274\225[\240;\315\300B=\036\275O\275\361\177\034=\030\340$=&\246N=\333\340\004=\211\256\315<\rc\306<q(~<\032\034Q=7\357\021\275V\0243\274\010^\331:*\340\357\274i\321)\273\323V\361;\267\334\014\275.<D\275\244?\202\274\2779\342<\321\315+=s/C=e\257\365;\327N\260<\200\242\002=\016qG=Nz\321<\266\r\000=W\232k\274\321\004\007=3\2200<\027\231\001\275D\362;\275~dK=\217\265\303\274\312\263\002<\223-\374\274#\235\230<\232\311\360\273z\362\305<\361\233\000\275\"KL=\226\240\341\2746\000\030<\301\177\273\273\021\3007<^\211C=\334\315\001\275\342\0314\275\301\215U\275\344\255\000\274[\006\336<\t\305\001<\233\217\001\275\301+^=\256M\304\274\301Q6\275\371b\026=q\337\235\273\345PO=}\303\017\275\206fH\275\343\345\366\274)\3609=\366\010\200\274\205\261V\275\233\021\222<\032@E\275\017\007\360\274\261\226V=S\302\216\274x\0252\274\343\217\024=PBZ=H\246=\275\213\310\032\274[\223C\275P\266W=\3427\246\274M\233\250<\n-R=\366<a<\343H\226\274!\372k\274j\224\326<\375\343\310;\261\265c\274t70=\\f&=\355S\227\2747\370\026=\0173\034\273\221\177\256\274\345L\214\274\'X}\274\341$\331\2742\231\271<\202\220R=H+\037\273\271\021_=\306\325!\275\022m\362\274\365\240\300\274\007^\016\275.\241\271\274\231U\274<\326\310:\275\336@W=eVD=\003\000\';\331x\312\271\232\244\247\274\256\300\222<\2751F=$T\212<\372dW;!\2301=\003X\374\274Ue\224<\210\222\373<\324X\260\273H\241\022\275H0\r<\026\034(=X\333\252\274i\312\306<-s\210\274\357\331[=\336\336\037=\355l\035\274~\013\r=\317\374D\275\370-\234\274\006$N=\374\2547\275\340\026\374</\351\010=\005\346\241<P@\351;4\037\202<\2252\267;\034\306\333:\207\213>\274n]\221\2745\276\347;\230=,\274,:W\275\234\322\'=\004tL<\352zH\275\326$\323\274\013\224L<\251\242\036<\376}A\275\205/\031<\246\356)=\007\200\002\275eMi:0\324\357\274}\335\342\274\260\224-\274V\342R=f\362\020\275\354\202)=\255r\021\2756fB=\356d\000\275!\311\253\274U`V<\243\231u<\246\006\354\274\262\345\256<IB\247\274\224\276\013<\211#);`\303K\275\244\254#\275\352\367\340\274>\364\016\275%\\\032=\353\3076\275\277\233\032\275\267\270\312\274LL \275\213;t;\031\377\247<\250\263A\275\000\341(\275OI$\275\206\204\321\274\323\325c\274\204\177\367\274\314\226\014\275|O\025\275\022=j\273P\342\006\275*\241\311;)\234\343<>\035\201<\344-\026\275n\036\300\274\035S\367\274(\234\333;_s7=[\317\212<\005\271\267\274\347\030==\217\215M\275\210!\353;s\033\010\274~;\017\275@\247\025=X!\273;\006c5<\364]e<\025\025\026=\302@a<\\\333j\273\367\033\313\274{\037b\274|\020\210;\267\267\216\274\032\300N=\201\301\276\274\2315\223:^\355\000=\313]=\275y\320\373\274\251-F=\267\024\277<\035\354$=\371!&\275\205\230R\275cT\226\274\323e\375\274\200V\221<Aj8=s\036O=\350/\341\274!f\274\274\007\\\016=m+\336\274A\3038<\247\3531=n\314\\\275\345\003\016\275\307@\017\275\303J\377<\201\276\036<\032qr<\372\260A<\207\013\245;\361^V\274\207=\035\275\310\357g;\343RS\275\217\037\036\275\361%\275;\231\316\035=\014N\253<\275L\023=\365\357\2278\024\257\n\275\371\367\021\275\212\360\226<^\032R=4\2156<j\025\010\275G\200Q\275\263\233\023=g\365\r=\213CD=\031\014\'=\277()\2756\375B=\024\354\220\274 \355d<\240N(<\252\331\264\274)\301~\274\212<7\275\371\221V\275\320j\037\275\3329\264\273\3642P\274?\356X\275\373(\001\275\002\263\327;\336VL=\3024\005=\036\370\364\274/\3655=\002\3755<\3426\377<t\200\020=\212\021\210<\214\235O\274ZJ\024\275\236^\276\273\343\276\212\274\334\rF= x\364\274\2038\"=%\221\022=C30\275\037\326p<\"\004\'=\261\224\024\274b\223M\275}\230,\274\001)\221<\367Q7\274g\235\267<\3752\210\274*\262\316\273l\326Z\273\037\267%<Q\016\254<\336\316\005\275X\r\016\275\n\204\311\274>/Q\275xt\354<P\333J\275\2410\010<\352\214[\275\357\213\200:\304tP=\315\221\361\274\362\377\237<\210u \274\352\203\313\274\252\273\005\275\276]\014=C\030\371\274\223\211\343\274\315\317&\275\275A\246\274\346\361\244<\003\270\254\274\271#Q\275\323r\257<\341\333\265\274\n\n\021=\344\371O=6\034\021=C_\024\275(\351\331\274\345\266G<\"\240\336\274h\037\304\273\2058H\275X\363\232\274\344r\256\274\305\300\030\274\353\277C\275\372\362\001\275\352T\314\273\236\"\262<\351\346d\274\033\256`\274\256s\255\273\235\333\034=\225\352\216;\224\200R\275\334\213\036\274:LP\275z\214Z<\1772\230<a|\210\274.\3528\275ZV\211<\317\200\361<\261t\370\274m\211J<\235\223\006=I\332g\274\244!\301<?\0173=}=V\274Z\022\'\274\301g\223\273\213DS<j\252\362<\315N\261\274\222\306\305\274\005\273\325;\016>\002\275\277\372^=\323\343\033\275R?\006=a\014C=\253\213\001\274\035nW\275\267\231\254\274b\350\001=\336\215.=\266\352\377\274}\304\340\274d0\273<\370Kn;$:U\275>!\007=b\267\340<\'\001\013\275Y\247\037\275}@\275\274\257\375\003\274dz7\275\221Ct;.\223N\274\347\304?\275\323`Z=\375\240:=\245c&\274\314\203R=\336\2273\274P\010\274<\330\204+=\304\007\023<\237Di:*\2469\275\277\320\352<\274\313\361<:E-<Eo\271<\374\220U<E\342\257\274?\332c<Pzd;6\336\316;\014\'\313;\\\323F\275\241\336@;\034\250\276<\273\326u<\376\221\224;\255\331\205<\362\203D\275\210j\267\274$sC\275[\241\035\274]\314)\275\tl*\275\314\022\325\274\013\327\372\273\363D\024\275\262nE\275T\324&=&}\201<\2210T\275\205\221\272\273zOF=\002s\033=\006\006\363<R\230\030\275\002\263\036\275\022\323\030\275\312\375B\273\202\020\034=\301n2\275\243bF=)j\233<p\210\375<T\" \275h\225]\275\340\334+\275\025m\330;\033v\352<\231\213#\275\376fP=\024?\013\275b\255#\275tS\324<Z\366\006=\336?6\275u;\276<\266\205\266<\017H\203\271\201\257\335<s:\'\275y\331\304<\270C\225<6\017(\274M\2736=0\254\323;\342\t-\275e\016\370\274\337\267\r\274\363\265,;%T\344;a\213m<\317CY\275p\021-\275\237\241\276<uB/\275\000\332]=\030\n\302;\352\317:=w)Z=5\324\036\275/\027\205\274\221\212\007\274\266i\311;\207\341-\275/Q*\274d\213\200\274\203\216$\275yG\304<}\2219\275k)\305<\306\264O=m\351\330<\341\264K<2\312\244\274\232\020\310<\273\024\003\275W/\214;\254\372,\275\265\037\307\273y\364\374\273f/\032\275\030\024\265<\367C^\275\367U*\275\276\253\031=?r\026=\360\326\373\274\246\037\252\274o\312\025=\251d\346\274\027\234\233;\033+\230<\227+\216\273\022\\x\273\203\241\031<@%\003<\310AJ\275\363\246\\<\237\357\263\274Q\037Y\275\316\256\036=\224\002==q\252\236<eL2\275\230$H\275\206\253\000=%\022+=\205 \032=t\032A\2750P\241<E\203\t=\336\266\010=)\343[\275\330C\324<0w\024<\335\204P<\321\034\371;O\006\003=\310\3051=\366\215\030\275%Z\367<\270\232\241<c$\001=V\233P\275_\347&\274\0163\010=\345\014\257<+\367S=\033\007\215\274\027\377T=\215X\t=\007\312I\273YWJ=\375\0166\274\333\003\235\274\304\257>=s\274U=wr<;^\3529\275\365jI;),>\275\245\357!<e\223\201\274\200\027,\275\353-\373\274\211V5=\2052\277<\245\327\337<7\300V=d\350\256\274\305\373\037\275\244\"\\=\263\200+=elY\275a\370\267<8\304F\275\030\221L\275)8C=\376\325\242<\022#\255\274\317C\346<[\232\370\274\254\343;<OE\n=\034F\262<\273\025\356<\274\305\256\274\201\264\220<so;\275\004\270,<\377ig:+pS=,\266\275< \245\365\274\023\227k\274\246\031Y\274N9\213<E\206\r\275EE8\274r\331O=\227n4=\215e\322\273\376+\234\274&\263h;\001\270,\274\317j?=\313\031\326;\324\343\3139\232F!=\311m\310<}\000\240\274p\256\t<\340\306\007=\207\177!=\364\266\202<5C1\274\244l\242\274\216\241M=]\004\020\275\000\\!=\'\310\331<\267\331\014\275\324eX\275\023R7=<\202\225\274]\014B\275\316\357\301<4\242\323:\024\355\032=7\275F<\357*/\275FR[\275\005\343C\275\307?K\275\314\270\212<98\205\274\355yJ=\345A\004\275\026\007\020=\317I4=\255\235=\275\005\035#=\310\233N<\344\375\225\2748\331\343<A\324:\275h\2609=w>\320\273\375,\203\274[\332\332\271\254?\r=\250q>;S\231\322<\262\236==\315}\'\275\225]\223<`\214U\275j{%=\305\016}\272\314\320\257\274m\274&=%\260\303\274\002\347\267<\257E\007\275T_!\275\036[B\275\322\034T=\355|\005=\036\212S=\205\210(<\027\243\302;,$,\274J\020\017\274\345\034\034\275\226\277\026\275\361H\322\274:\302\324\274\247\314\207<6A\303\2745s.=g\234\264<m)\301\274\2558\024\275\034[\010=\025VZ\275\r\240\200\274\366&M\274\333\022\307\273\273\373$=\0306\324\274\254\'\002\274n\340\036=\t\327\222<q/\313\274)\344O\275\344\332*=\250\002o<\311]I\275\343_\232\274\373\026\276\274,8D\275\246\363\213<\377\225\317<\234R\017\275\013\234\214;5\210\001\275\217#\344;\256\000K=\244z\217<\3233\003\275\204\2521\272\001\201\333<\227\300r\274a+\023<\235\257\272<ZK\300\274\02669\275u\227-\274(\014~\274\316c\200;\212\277(<\266\361\231<\303\377L=y\340\035=;l\355\274\370\001\020=9\346f<\031-\223\274\332\217\317\271h,\210<\013gI\2730z\021<\320\367\330<@\316^<\226\322\373<W\312\231\274zC\204\273\033R7\275\254\3438\274Yp}\274\312\226?=\031\352\027=Y#\225<\0373\325\274\212d\236\271\037l\332<`b\310\274S\324\025\275\272\330\361\274x\342_<M\342 =\003\254/\274\312&X\274B\377]\275}\301l\274\332\007\000<\256\262\220<\225\007=\275D\002@<d\006#\275\226\234\014=\353\267\007\274s\'\210<\254i\375\274\347\363\210<\353\241H=\257\210x<\352k\344\274/\366(;Sf\327; 7\371</>5=.\016U\275I\007>\275\017e\212<\230\257#\2748\026\013\275\365\324^\275\300\364\206<\254\245\020=^\203[\275k\243\261\273\324\001\356\271d\232\272\274:\341\332<\2340~<\0075\361<\225\334\242;\2505@=\246\3368\275\366\007X=\300\246\262\274\313\200|<\262\210Y\275\370`\365\273\235\255\200<\310\203\234\274-\241\264;\300\006\t\275\225\2405=\301&H\275[\235\341<\346N\232\274\3443\317<\313\003<\275u\2452\275\230\023\034\275t\317\201<\240\361\373<\t\331\021=Y\324J\273\317\314\234;\263\344\271<\324\305\033\275\317\313\244<\2720\021\275\305U\246\274\362\001\304<\345j\031\2753\262\023\275\347\326$\275\207hI=\220c\323\274\243k<=\3272\362<\210\216%=\342\310\035\274\001->={O\364;\026\211\341:\037t\264<w\277\202<t\037!\275\250\313S=\217I\212<u\277N=P\037\224<}\254\364<\230\337\n<\013!\203\274\332\324?\275\030\376z\274k\234\234\274\300m-;\343\203\t=\2349\373<\213\213\337\274zv\305\274\203\327T\275\255\3236\275,\312\372<\3435;=jZ\247<\277\220*;l\003G<\336sA<\003\227\375:\360)L=\302 \344\274\003\2468\275\217KC=\375\204C<\275h-=\304\276\324\274F\026\366\273\274\344X\275\350\035\316\274\361\250\007\275\356\035v;\205\0010=\361\3542\275\352\304\272\274\317\253\n\275o\230V<\033\206Q\274\037i\245<\364?\036\274\234\023-=\207\202M\275\313\216\021=><\017\275\236\316\346<\325VX=R\'\036\275\326@\r\2755\212\207<\362dQ\275\225J\"=\303\025\207\273iEV\275\024\306]\275\362\207\005\274\270\231\205\2740W\214\273\376\204Y\272z\255\036=@o\237\272\244\345\255\274g\3750\275\353\216T=p\315a<Q\254/=\"\305\275<\027\366\235\274\303\317*<\261\313\357<b\264\343\274qDN=i%\315\274j\001\231<\030\273?=\32264=w\\\206:R\0140\275\262\016\230\274\361\3172=\366\032S\275T\014\210<\364i*<\2740\033<\014h\230\274\336]\376\274\227\245\237\274\235\366\361<\333\006\235\274\354\022U=ikB\275\216\253\r=\337L\243\273\312\334\010=&kK\275Vc\242<\272\203j\274\032--\275A:\370\274\034)T\275\351\253T\275\376\375\304<\244:\330\274&\356\020=2JB\275yP\374<\373\313\006\275\311\362/\274\225\021Q\2749\257\031<X\364\261\274U\000\312<C!\036=8\261\037\275j\240W\275\375Q\220\274U,\372<0\214\r=\307,\203\274j\261 ;\347v\204<\225\223/\275\351q\225<Uw4\275+\021C<\316\351\305\273\322\220X=\013\220\030\274]q\t\275\234\317e\274\322\231\023<\310N+=6\322\201\274R\025%\275\321\234\364<\262\001P\275\311tH<\326\3432\275\023\322@= \231\306\274\256\353\341<\254D\267<h\312O\275\214\004.=\245i\352:\267wi\274\351\216\'=\333\347\227\273q\236\247<\016\305;\274\347\026?=@\232\370\274/\352\227\274\340\rP=\350\377y\274\335\211\232\273\032\327\016\275tn\000\275\\}O=\244$\007\275X\017\334<\"\254\353<+\233y<\025\270\017\2750m\022=K@F=\004q,=\325\275\324<\262\311T\275kI)=\314\227\301\272L\347R\275k9G\275\237\353==\221V\323<\337\215\253<\204\214==8Vq\274\326\241\035=\265)\345<\006\235S\275\257\215P\275a\262\307<\013S\"=%\006f\271\005<\235\2717\331S=I\337\374<\023\tH=k\352\007<\003-$\273\231\030V=cn\314\274\254\2277=\002\002\t=\202K?=\221\336\354\274L\263\200\274Vh\013<3p4\275LSh;\033\031\355\274\014_`<%l\006=\370S\310\272ak\346\274\037\0137\275=T&=\221\243\212<0oN=.F2=\222\315m\274_\266\017=\265\270N\273E\021\252\271\374{\336<MU\262\270\032\007^=x\374,;\277\254L=\256\240\204<]=i\274\254\353\266<\355&\373\273\302L\364\274w\364+\275\276A\'<H\352\236<\230f\\\273zo4\275\331}\\=\017q\016=M\323:<D`\210\271h;\014\275\372\227\026\275P\357\203<V\350\333;\254\212\027=\246!\000\274\251-U=L1O=\253\2203=\306\016\007=\322\'\032\275\214\365b<Qk\333<\034K\r=\262\211<=\\\364U\275\375\226\031=\261#\035\275\224\3662=n\0213=e\356\261<\r\266\245\274eL*=\320~\312<\313\266X\275\244\221\243<o\030\300<\031\254+\275\232R\345\274\324\336\206\274\302E+<^\343\335\274w\335\022\275:\351\211\274\273(.\275\307]\034\274\311Gg\274\013\372\031\274e\206\363<\327\220\n<\325=\n=MX\377<\0062G\275\250\367o\274\365\224\237\274\272\037\375<\344\010\350\274\313\374 \275]\027\327<\231\343d\272O\305\300;\205\200\025\275eW^\275\030\375\022\274<v6\275\371\366G\273\037\227e:]\244\034\275\003m\016\274a \373\272\214\305.\274\261*\005\275+\027\234<\325DR\275\253/\241<V\244:\275\200\022\262\272i\356N=\325\200=\275l3!\273\307v\032;\177n:\275\0223\342;\037z2<\3303E\275\231>\007<p4\203\2748\260\212<\352r\242<[cH=\257\264\363<\235\374[\275\214\207\364<\356.\023\275\326=I=d\024\004=t\034\275\272\340\227\217<\263g@=\267.\033=7\364\005\275\351\r\352\274\006.\367<I\3350=3(\267\274\365\226*=\"\342K\274\016\352\267<\251\267\372<\335R%=\311vD\275Lo\016=\341\214\227<\225&\266\274\025\210\300<\304UI=\306\030\242\273\036\303B=\304:\335<\006S\315\273\362\336\032=\260\3062=\"\373,=\306-K\275\313\320\033=\216\331\003=8\314\311\274.]\237\274x\251@<\'\034\353<\202\211\305\273\034v:=N5\002<\364\006#=s\010\004\275\377\214\372<\216\2422\274}\205]\275\035I?:\345\307\232<3\333\255\274\261\265#\275\005?\253<Q|\361<\261\253<=\201\314\030\275v\032\3258\362\325\323<7\310p<.\210\016\275\305w-\275\177\362@=\275|\201\273)\317\335\274j\017\355\274\222\241(=\205\231\016<\010\267\262\274[V$:\254\211\342\274Q\260\254<\303[L\275\334\222J=\327?\205<\246q%:L\"\335\274\306&\203\274\375\324\211<y\3520<\217\244\212;,\323W\275\347J\035<\020\331z<\264N\320;\321\320l<\305\207C\275f\200R\27390\270\273\270\252\343<\030\314\261<5\370\177<\370\037\005=\235\311\021=c3\031\275\377j\344<\330\301\220\274}\2738\275\332\271\001=V\324\265;\352c\231\273\200\216D\275h\363\253< \236\342\274\252\270\237\273\213\265\003=/\335*\275\010\\\000\275\375Y\014=4\307\005=\353\325\230<5\307\020\274\317\220\356<a\022\364\274R\016\305\274\016\030 \275\004\004\203\274\311eS=\r\300\350\274\35044<\251\356\360\274 +\013\275\r\273\225\274\230\265\036\2741\022\246\274\303\271B\274\021\014\332\273\322\223Z\275:\\\353\274\361,L=^\004N\275Ss6=4/\252\274v\010\237\274@{\326\274c8^=W\245\256;\276:\344\274\327$\035=?ZH<$iW=\365\177P=\021c\001\275\202r\266\272J\006\003=\336j\303<,\334*\274\232\010-\275\001p\"\275\371\030D<\325l\251\274Pus9\026\307\n\275K\0267\274r\314\261\272]V\243<\0173\336<_ml<,Z5=\004\036\376\27207\350\274Hq]\274\177\363`<G#\277<\244\254\267\274\317\341\334\274\325\374<\2739\342\373<, Y\275\205I?\275C\352\n\274\263\020\010\274\245LO\275)\001J=\322\373\001\275\260\224\023=\005/W=\2032)=\313\320H<J\303=\272\\\2608=\027\250@\275o\321\033\275\345CN=2\224\274;\260\364+<\230\017+\275\036\030`\274\275\214~\274\020\004%:\224\002\351\274\306\303/\275T\3753=\002\336f\274\023\036\375\274\006\tw\274\373\277\206:\333\276+\273\230\3016=\220\215\331\274\321\270@<c\316p<u\257!=|\271$\275\311\245\347;&TZ=A\2078=<R\\=\025d\225\274\267\345\003\275\232Y\357<.8\257\274\273\360\267<)\261\312<\325\375@\273\245f\033\275=\0354\275\247Tf<\232\027\213\272\224\235\275<\320\336\006\275. +<\2260\373\274\257\254-\274z\244V\275\205\356-=3\026=\2753\3473\275\220\305\013\275\002\313\207\274\032\240:\274_\210\005\275\361DA\275\016\243\370\274\343J\001\275\3510Y\275#\227\202<\'\224\224<\356Z\351\272Ct\240<\204\255\344\274\344\254\333<\361\323J=wh\034\272\365\270\207<\267\232D=v\272\\=\243^\000=\377\305\005<e\375\r<U\346k\273Vc\n<\333\177\037<O\034\222<q5\031=\243\305\300<\344\241\013\274[\334a8,\266\261<\226/a\273\014V\207\273\240\036#<\3765\221\274x\361#\275DS\'=\035wV\271\"?<\275\006\372\273<+\033P\274<\t\026=TvS=\376\017\235;#\342H=\253]j\274\311\356\372\270\340\'\362<<\257\027\274\r\211\307<\272\177\000\275gB\261<~\274\235</[.=\3612\324<\263kB\275\036\311\204<g\034\362<\312\333\355\274~jM=\205\"2\275 b+=\t\351/=/p\332<\007\375\016\274\r\277\000<\216\022B<\325\257-=\232\344\"<[\3266=\217\001\037=\032@#=tV\375;\327\332#\274\024\375\r=\007\352\274\274\nj\373;\376\346\360<\326\304(\275\221RK=P\246%=\033\220\020\275\205\014\010=\352u5\275\310\327\002\275\327\340\332\274\223\2776\275BCw\274\250;!\275w\235\016\275Y\2317\275\213 :\274\202\224\006\275\236q^=\017\025+\274A\251 =\013\272Q=\222l1\274\300N\207\270\230C\023=\004\226S<\025\212\274\274\245\317\274<\240f\'<\257f8=\217\323*=\017(\036\275\\A\227;\376J\361;9Pj<\302X\r=\032\203\301\274\177\210 =ms1=be\371\274w\232o\274\315\334\r<\345\021\025\272\273\217\010\275\\d\002=\3604\022=y\207]\2755DU=\210L1\275\313\023?=,\031\310\273\005p\352\274\331\327\302\274\323\330\313\274p!\261<\003\274J=\314\001\002\275\244\317\013\275\032\367C\273\336\037\336;\273[(\275\000;\n=\304c\250\274=>\270<O\306\350<%r\315\273\314<\031=l\2336\275j\341\033\275\323(|;\214-%\275?\263A=\363\330==\255\365]\273\351.\2249\000\0263\275\311\217\016\275\202\211\272\274+\225~\274I\371s\274qp=\275Pp?\275\332\322\\\274\252\335\263\2742\\.=y{\257\274!\003\301;I\210D\275\260\307\366<>\020D\275\313\356d\274\371_B\275\313\030\346<#\302\007=\351e<=e\324M=\227\365\006<]\334J\275\374\033D:\245\307M\275\365\353\253<\023\236&<\247:\020\272Wox:81\021<W\275%\275$\3332\274\326\030\307<\025T1\275*\274\002\275f\222\211\273:\177\301:\251\325\270\274\374m^\275 2\023\275;\216\013=\315\020J\275\345\243[=,\t\274\274\316mN\275\013Q$=\323\366\034=\231p?=\277\201\026=\016\230\310\274\036\373\256\274\020\377Y\275\370\326/\275\205\340y:sT\361<b\206\037=7/\257<e<\326\273g\223S\275=\360\025=\321\263F\275\334f\004\275\214\2301=\225\341\037=\242\270p\274\242\003\256;\356\003i\274\267\335p;\216\004[\275\200&;\275@\177)\275\353\347I=\274\240\355<K[\311<\274\371Z\275\357\246\034=X0\001=s\032\022\275oc\010=\3134\331\273s[4<\345\331\342<\"\244:=\201\333\373<1:\304<\240^B\275\013\304\256\272\031X:\275\241#?<\272By\273\254\277\346<P\307\331\273[\352@\275\036\354\323\274\357hK=!\022M=\324\335\010=\220\036u<\333\\\226\274\255\342\245<\310\307$=5x+\274nH\320\273\245\362\337\274\341\272\221\274\356\361_<\225\013\324<\004\202\311;\334\330\264<\320X\026\275c\200\233;\236\034]\275\311\251?\274\231\\e<k?E=6]O=(k\342\274\356\r\244<\016P5=\250@\357;#t\206\274$\363U=\272\347M=\014\340\267<s\207%=\277\337\2269\205\2774=\004\235\001\273\260\314n<`>\035=<\3123\275\t\3645=\364`\"\275\022\202\361:l\225\023\275\212p\017;\003a\223\274\2532R=\236\302 \275=\225\006\275\332>\026=\023{\"\275h\224\341\274v\347\221:X\234\216<\036\230\361\273\271R[=frG\275\367\357\237;\'m\004\275\335\2114=\315\276\2128\r\275(<\021`(\2749\021^\275\365\345\031\275=\233\035\274\334Y-\275r\247\263\274\316,[;^HJ=#\023\254<\264\020\005=;\0327\274Q\350\230\2748\374\004\275h\032\037\274z7\225\274\342V7\275\301Z8\275\371\n\375;\257\361\037<\3122\034=\261\370e<\001UN\275\022\343\223\272> \033\274\013!\235<\221;\374;_\376-\275G\027\305<mqF=\222\207\026=\241\t5=H\365\211\273m\326\363;0\334\025\275\227~\216;\027\257\027=\256H =\323e\n<\207\"#=c\210&\275;\022,<x\231^=\275\222\251\274\326J\006=\335?B\275\311\333\264\274f\325!\275\0367]=\t\246\014\274\207P\343;\374\303Y=%\003\312\274b\334[\274\"\211\035\273Db\031\270/9C=N\2229=\364c\022=:\307\247\274\253\016+\275\251\252[\275\210\221Z=$/T<\376\322\302\274?1\311;\203\227\217<\315\0161<(\312Y=\327\271\276\274\013\t\013=9C\303\273\032\177\305\274O\220I=B\277\271\274\307<*\273\1772\202<\244\334\247\273\006L\326\273\350\330O=\353\203x<&!\010=\001\367<\275Z\344\277<gr\274<Wq\216<\221\355\337;\2249\356<\333`(\27591\005<G\350\016=x\033\017\275WA.\275J\235\233\274\306\272\t\273\023\233\364<\270C\230\273\336\366\033<+3\262\274\246\031::vDx\2746\350*<bP\256\274\243\214\r\275\177s\246;\23429\274\274~(\275\334\327\255\273\217\355=\275\334\355\323<\0242Z=\341o\375<\306S \274\025\311\203;\332\260!\275\345p\223<mt\221;\267v\003\274Q\320\240\273N\324 =\232\210B\271\221\362\201\274\334-\266<xV\366<\3646\220<q\005\322<M\241K\273KK\214\274@#\003=\371y\206\274z\325\331<\032\255!=\335n[<\340[\320\272\177\010\026=_\035\201\274c\261\000=\026\2344={\252K;\336n\357<V\366F<\021\217\311;\215W\253;\343\222\360\274\346\207\212<\242\225\346\2740\307X\275\304\207\031\275`B\256\272\272j>\274\3659 \274k\357#=\251Q\232<\326M\014\275P\362N\274\353\245c<\226c\006=\220L\245<D\226I\275P\364R=\020z\236\274\266\236-\275\256\226\177\274\320\357C=^\0202\275\025\240\222\274\202T\266<s.\000=\214\"\037\275\3168\002=5\355\364\274\251\0003\275\014\005\375<\226\310[=\325G\275\274\276\354\321<\376O\r\275\2273.\275/\025N\274\022G\256\274\026\003\306\274*-5<\341\337\t=\023\346\306<\215\210\035\275)\005\311;\370\230\246<\0340\222<\014)5\275\306\023\242\274s\322\036=\027h\311<R%\020\275\256\324;\274\016[\351\272\370\020/\275\341m\360;\rD\005=9X\010=br\027=#\255\240\274%pV\275\340\236\310<[\356\200\273\314\321-<\344\234\215<b\032\370\273\036\004\007<^\216\032\275\365\376\020\273\353\363N\275o\336\023\275y \371<\031\331\363\274.\303\353<\026\325%=\243\006\370\274\002\375!\275 \302H=\033B\037\275\226\331\020=\3275\223\274d\342J:\270\006\210\2736\310\347\271\200\301.\274\276h\240<qv>\275\326o6\2752\240\276\274\250\272\263;\326\354\272<7\026\227\274\rn\033=IPJ\274\214\307\204\273\021\032\340\274I\230&\274\272.\275\274\014\025Y=\2147U\273\230\273?\275\016\267R=-y\032\274\3609G<\264\236\027\274\220 ^= B5\275\307\252\022= \242Q<\342\245D=X\344J\275\222\032\242;\300\252\001\275\331\206)\275\251H\177\273y\3051\275[=Q<\255\n\351<A\204@\275\271Qz\2748\331\n=\201\255\005\275\255\3170=,(\257\273\366I\237\274\252\373\375<\2239!=\305\203P<\035\033G\275\\\005\020\274#!\211\273\263\331\021\275\200%\t\275\302\324<\275\\(\250:J\252\037=0N\030\275\"\207h\274\201\024W=\n5\210:\221z\271<TQ\034;\t\355-\275\3108\363;\320\261N=\345\243;\2730\320H=\277\323$<\324Z0=\321HK\275\267\002J=_\221\226\274o\334\004\275-\245\355\274\355\212\325\274\223s\002=\211}\024=?,\254<\\&+\274\335\325U\274\331\026\201<T<\365\274N\217\355:U%\237;uR8\275\203S\231;\226]A\275I\312!=\033\3768=\t*[\275\003\037\004;\003\373\346\274h\254\315\274\005\346\250\274b6\274;\031Q\036=\213\201,\274\354\276]\274\346\265\002\2753l/=\347\205\347<\315X+<X\"N\275\225\302[=H\000]\274\316\256\026=\322\355\351;\314\373#\275\351\023j<S\364 \275\n\317Y=\246\221\372<\02156\274UT&\274b\265]\275\003\347\233<\374\354O\275\252*\020=\004RO\274^n-<BE\355\274QP>=f\361\205\274\373\225\214\274\240\035W=i\344\354<tt \2753\323R\275?\252\210<\t\333S\275\211\337\014\275\236\321\241\274c\267[\275\254\"\305\274Lz\312\274\310\017\333<)\210\027\275\306\261S=8:\003\272\035K!\275\302l\007=\021\201:=\266\324\327<\022n*=E\354!\274N\343\007\275\374$\007=[>+=\032#o<u\305\000\274\031\265B=\374\363\307;\361I7\275\362K\214\274\326\253\265\274chB\273\354\244?\275%\347\352<r\221L\275\354JG=\253\353\024\274\323\242M\274\277P@=\020\312(<\307\026\232<\257\001z\274`\347H<\302\305\342\274i\265\257\274Qr\210<k\371\024\275\276B\323\274\025=N\275\362#M=z\370\244\273\330\005T=e \030\275=0\347<\314\'\315<\264\026\035\275\351\347$=\371$)\274\0069\367\274%I\177\273\r\240\"=N\314#\2741\260\303\274\315\0165=]\t\272<\3726\004=c\301\345\274\347\321\370<\2201V=\226D\010\275\335\010\030=\003\263\303<XH\034=\357d#=0\245\022<\303\367\232<\265>R\275O\277\022=\005\351\013=\275*\232\274%d\333;\300\244]\275\277|\025\275?W[\274S\305\223<&{n\273\031\'%:\351\203\021\275\212<\255\274wZP\275uAF\275\264\235)=EI\013<\005\016@=*S\177<LKK=\337V\251\274\235\001\345<\0035\376<\205\317\306<\233\242\336<\222\031S\275\344\371O\275 ?4\273J&\235\274\226G\t\275A\301\237<\224\273\255<20B=j\263\340<d\363\220\274<|\273;\305\0075=9\030-\275V\375\374\274LG\325\274\244\215\303<\366a\216\274\272\275\221\274\302A\207;D\271c\273\315\260\"\274O\003\021=C\303\244\274\317\232\"<i\274\365<\244P\275\274\267\241\037=\221\002\325<\002\302\303\274\263\251Z<\333\362\"\275\032\\\250<}XG=\223\027J\274a\245\336\274[>\'=4\001\013=\241\320y\274AP\235\274\276KA\266i\301R\274\256\321J\275\236\253\016=W\006+=\0275\306\272i2T=\300\252\037\275n\227\025\275\242\310\212:\216\227\355\274\225K\353\274\252\216\247\274\212\227\204\274\235\322]\275\217\017X=\3537\014\275\236$\006\275\210z\271\274h(\227\274W\004\306\2748^R;K\310\225\274\203\357\235;YF!\275\336\236]<\235Nh\274,7\t=e\031\206\274\326\341\221\274\265\017\302\274\2117\235<M\033P\275\370\337\345<\000\221\267\274\027\314\033=\234\324\366<\003\264\224<~\3410=\"[R=\206\304\377\274L7\001=\\\255\371\273W\0134\275\210\023\310<\271c9\275\024!\312\272\3010#<\305\014n\274l\213\030\275`|\003\275\315\264\360\274\207x\033\275\352\200\375<z\'=\275\355\230+=[l\025=\273T%\275\034\360\240\274\205)\\\274\221\030L\275\\\3152=r4\037\275\245\036\004=NO\"=\227k_;\314;\005\275\211~\374\273\331\312\002=\216\343G==(\361<\357\337?=\216\370(\275b\243 =\305\276L<&\3429=\351E\234\274_\000x<\216\347[=?\026>=(]\375<}\246\237\272VE(\275oF\016\275\330\0265=\016.\250<\244\340,\275\301\323\327<W\277\317\274\325@>=\004m\342<\207_\021=\206,\213\274~8\275<\370]B\275h\3332\275\343\373\036\275\233\024\301<v[F\275\016\253\302<}\010\021\275\036\004]\274\233:\352<Ye\246<0\337\007\275\332\204I<D\337\374\274n\267Y<pS\2619\215\250Q\275m\214X=\024\230I=\367\335a\273\263\006P\275\375_\227\274\231\004M;\350\031\271\274\364\3728=g\3631<:\037T=\021\277M;OYW\275\343\302\271\274\225)\205\274\343\327\246<Ak\316<\026\2601\275\324A\027\275\313$\013=\006\346\201\274C\235\265\274\232\022\021\275\316\275\275\273\340_\007<)H\377<\030D#=\316\017@\2758c^=\006\306\360\273\216\222\344\274\005\007C=G\263\242\274\267x\377\274\022\214\235<\231\376\331\274\ta0\274\335[\032\275A%\220\274\r\201E=\001=\030=Y\2130=#\224\306\274\017\264\004\274\352\344\365<\227\215\037=\025\276W\275\336\214r\274\327<\337<\333`\200;\377\205\327<\302\377\n=/*\351<D?%=\357\213I\274,Z\360\274\306\256 <\350l}<~\265!=@\246I\275\273\035\320<\252\341<\275\247\325W\275J\217\362\274\263Q\323\274\200\n\272\274\013\033\357<\004\2425=\223[\376\274\305\361==\200\212\262\273XS\342<\311\022\t=\356o*\275\245\225\"\274\3252 <\277\nA\275c\236\315\274\273\277&<D@S=\332\354O\275\255\330B\2753vA<uq?\275T\224>=}\236\300\274^ \017=\340\207\023=S\371U=\311N@<\024i\013;\037\3157<\312\266\247<\223\236\221\274\347\022\376<\335\006\206;PAm<[\215\236<\347\306\250\274<`\311\274/L\004=4\272[<\366\032\364\274\302{\331;\3704-\275\334\276\037=vm\355\274^Ry;q\332#=4f\035=\261\231S\275\026\246\021<C\362\215<\240\000/=\322\366-\273s\264\317\274\243\267\350<\362\035\t=O\036/<t4\365:\361\323\340:\n\230,\275\251\212\205\273N\036\n\275\274-\221\274b\210t<g\0321=\252\037\275\273W\001H=\377\213u<\357HM=4\354\371<\035\3445=\021W\004=k3\274\273_\335\230< \276\022\272\365*\307\2747!\367\273\005\335n<\031\352`\274\020\312\242\273\332\250,=\360\300\204<:/O=\236\201\265;\037\200\t\275e,\202\274M\221E<\356.\337\274\304c\217\274\244\027\036=\327\2644=\004\315A\275\033\274O\275u\202\376\274\363\271^\275\367\210\\\275\274\232\367;h\252M\274\317A\347<(\3760\275B\300\205\274\274E\001\275\205\351\006\274c\341\322;\273^\026\274\325\334\005=\324e\016\274\334\001\017\275i~\241;\250\2561\275\361\0145\275\177w2<\023\205\253\273dA>\275\340aM=k\270z;\240\006\271<\347i\277\273\257\337\010=\312\305+\2757a]=\335\253\341\273\227\036O\275\356o\024=\347Py\274\204\246\037=\242\223X\273\230\207\202<\021\317\031\275+LM=\357\017W\275\263D\334:\237\241\034=d+?=\276\212:\275\273\274\265\273\334\034\017\275\245\303\315\2740\246$=\025\205\357<yZ\353\273\026\271N=\014\3016\275\030`\245\274\3042e<\334D6\275\203^\032\275_\366\320<_\220\216\274\024{V\275\251\360\010=\2206]=K\327T\275\225\266\333\274\350\332\247\274\023\236g\274\340\300G\275#\244\021\274\347B\347\274\343\016L<\310\325\376<\250|\260<\272\026\010\275\302\251\000\275%d\336\274l\022T=.\317q:q1\005\275\305\261\273\274X\252\277<*\340\352<Z\342\201;\004)\016\275\3643$\274\331\350F\274\275\2655\275\373\216\274\274\334\377\321<\310\250\341;A\243G=-\307\200<\366\034\020=;\225E=\363\020,=\033\321\272\273\333T!=\253\240(\274\363\241d\274YD\232\274\311\014\357\2729$\177\274\345\036\364<HrT=\335M\220:\234\377\031\275\213\010\321\274\\\245\246\274^\0101<\343x1\275p\312==\256\242\013=E\235\247<\200\230\371\267`e\007\275]\003\377<viP=2\253\006\275P\242\273\273\222\264\"\275\224<\252<{c!<\205\255<\275\236\307L\275\244\335S=9\356\355<h\210\372\273P\177\255<\t)x\271P\256\240\272\374u\213<\2426\276<\327\277!=\036\202Y\275W8?\274\354&\316;Q\316\365\273 \333\022=H\231o\273l\340\305<\243,\342\274t<\344\273\350\004\002=\023 \006=G\004\357\274\302\013\n=2\345\260<i\373\006\274\344\342\332\274\323\341\247<\236N\373<CjY=.OR=T0S=j\207\252;]\221\022=E1\005\273<.\234\272m\365P\275=\250|;\317\315Y=\341\374/\275\034\0359\275Vb\310<\013\024(<\323\000\245;\361cJ=\312\005\016<\260\226\242<\217\211J\274f\307H\275\031S\360\274EQC\275 S\350\274\025\214k<tb\336\274\006\324\026\275\205\016:\275\234\215K\275\235I\002=\367\020\303:V7\004\275\375.\371\2743C!=\360o\327\273\001\215+\274Z\2359\2751\272\261\274\206\221S=\343\001\304\271\200\275\303<+\343\021\275\013\373\032=\335\257\3159\"\261\023<y\3272\275m\342\317;f\315)\275\323`p<\345\2027=\021\362F=\254\221\374<\tK==\355\366E\274\017/\014=\204z\033\275\026\260\002\275\321\343J=O\227\321\274\002\213\203\274\234\034\272;\256z\034<\305\250\003\275\342\310\315;3\010S=3@.\275}\332#\275\262\362\357\274\261\004e<\225\033\024<\242\227\024\275\014|\313<1\360{<Z\036\214\274\221B]\275\177\315\253\273lV\034\275\210_\262;\211\r<=\010\247\226<l\366\323<\207X\365\273\247\310R=\237\006\232\274e\316\204\2746[\n=\233\313\233<:N$=\020h\326<s\031\010\275\252*\344<\261\267\256<\014\315:=sw@\275\310T+=\251\037\241\274\0207\320\274\367U\030=\315=\323<\330\353\024\275|L\344\273\tt\341\274@\317\351\274\206!>\275\264\277?\272\254\252\004<}\262J=$A\347\273\306\346G=\301-\034=\277\022J\275\211\246\241\274X\244\324<\201\r\215<\212\027!\275\270<\321<g1E\275\210\306\017=|&T\275$7\033=\252\210U=\365D\347;\010\271\322;\206\337\010=\016\300L\275F\263R\2752\232|:\264,\372\274\262\027\310\274\322\332\350\274\331W\303<\310Wh;T\251\013\275\236\264Z\275#u\020<$pF\275\242\242a<\370\232F\274\00484\275>Q6\275yvu\274\232\220\023=0\241:=Hf\315\274\'\2032\274r\271\005=\007o\031=\330\212\300\274T)\335<\237Y\022=\273\257\\\275\023\200C;\003o\000=\331\214(=I{O\275\310d\026\275*H\256<\220\216\016=k\2772=\224\307J\275`\003^=\323\361\016=\241\316\347<\254\373/=7\260-<\270\213\r\275\377wd\273r\300\275\274X\337)=\300b?\275c\214\312\274\016\357\236\274-\021\036=\007\234X<\250\3126\275\010Y\034\275\251C&=f\360\014\275\344\231\226\274sO\214<\023>o\272\035\211\t\275Z\275\330\273\271\271E\275\232\352\260\274\005)B\275\204Z\376\274\033\343?=<\304\001=\254\005A<\213\302(\275U\006C\274\206\232\267:,@\\\275=\r\266\274\324\342\314<\210\330\020=\200\337\007=\326\321)\2738\370T\274\023\320\025\275\031D\227\274\260\267 =\223\303g\274g@\035=\003^\205\274\271\331!\275\243iA\274!\021\377\274a\246o;\277\215\035\275\0077\004\275\367N\271<\016Z\3628:\357^\275\203\275\001=V\032S=\021\376$\275|,\035\274\332\311p;?d\010=\347\224\017\275yKt\274\371\031^<5\200\332<v\r\021\275\267\361\220\2734\003\017=\355W/\275\333J\036\275\335\343C=\262+\310;5\277\023\272\200\350Z=\224\226,=B\273\004=)\002\032\275P\265R=5\313\213\274\302\200\"\274_\027<=\266\234 ;\340\262\315<\216\253\310\274\026\322\312<q\376\371\274\207I\005\275\2507x\274\274\266\213\274\"bL=\3727\273<\354\025B=\020\230\217\2722f\310\273/7\034\275\260l;\275\204\335Z\275HLZ=+\320M=\013\025\031\275\'\206\363;L\346N\275k\036=\275\220q\000\274\215\375\263<\222R\255<\013P]\274\r\003\271<\210\255\r<[\233&\275\323\371]\274\220\250\020=\023\244\205:\026\211*=\2112\224<\275\225\252:B\314\224;>\340\003\274C\374[=\330\003\366\273Q\217-\275\274\0364=\016.\025\274\n\276\213;\367\304?\275\2539,=\022A\225\274\267>R<kJk\273\211\356\t\274\236t\330\274\000\300\360\274\245\303\214\273\003Z:=\023\204\361<\016AN:\231\027Y\273\016\177\311\273{\300\321<C)\003\275\333z\236\273\3634\360<f\024*<\\xS=\024\032L\275;~\273<F\253\231\272\302\nZ=4\324\373\274Qj%\2733\230L\275X\264#=\361y\247\274\310X.=\202\265;=\200\021H=\024\t\234\273[\242\021\275\202cX<\246\225!=\036\233]\275\030?P\275\322\0258\274\364!>\275\277\r\242\274\324h\002=>\212*=:\031\212;N\3461=\371AD=#\323O=\231Z\177\274\360\216\020\275\t\027\021\274M\265\016\274G2F\274\034\324K=N\337,\275P\325\341<J\356\252<\357\356\033=\245_:;\213hE=\350@_\275\236H\242</\020[\275}/\027\275%0\025;(1\214\274W!\246\274\374\227@\275\230\315D=\323XV<\027\203&\275\371\243V<\300\020D=\221\341\243;=\251\211<\342\301\237<\032-r<\034\034\245\274\007J%=\270\334\021\275\353.\350\274L\266\227\274\320I!\275y\256\312\274iF\252\274s\371M\274\361\316\002=\2667\021\275\365\223\026\275\2501A\275\243\271\302\274\226|\323\274\3766\344<b\220I=,\334\362<\207\376\316<\337\023G\274WP\313\274\244\335\355\274\273`\207\274\220\277\n=\217/;\275MM\270\274\"yw<_\260\336\273\034\342E=\330\345\r\275g\210\317\274\276\362\003=V6\010\273\226\207\r=\370|\n<\317\233\372<i(T=3u\267\274U\304\016<0\263)=4I&=\260\200g\274\362a\004\275\342C\026=l=E=\335-F\274\227\365\235:\177fI<\365J\001\275WW \275 \274\036=\343w\022=\036\365@\274\203\322\006=\235oQ=u\375T\275\021\214\035=x\257B<u\020a\274\035gB=`\366J<\305U\024<\376_\231\274\177\346=\275\013 \325\272P_4\275\306\200\365\274.M\246;h\360T=\301\362\240\272U\270\237<=\274K=\203D\t=\214\236\026=\320\317(<\324Et<\237\"\247<i\320M=\331P\031\275\001\032\213:\275G\025\275\307}q<\035(/=c\004+\275yh\001\274\277\025\315\274\320\204\257;\262CE=\220jT<\353\3208=g\303\221\274\000X\202\274\0338X=\t\305/\275\313So7}\324]=\251\325\202:\033\374J\275\031\"k\274\207y\236<sQz<\022\266\305<\246\222F\275\302\262X=\007%\326\274\316\322r<\363\177\321<\213\362\325\274f\312\030=\202\266\260<\3007\004\275\245\277\320\274\347\t\306<\362\234\335;qs\263<\013s\333\274%\270 \275\240\346A\273\376\370&\275{?\327\273d\332\005\274\277\3508\275\\\256\004\275\232\237\335\274k\"\034=\367\n\036=\\\'\335\274\232\242\031\275ua!=S\020\341<G(\226\274\36131\275\241\023\021\274(\"n\272\222\352E\275\213\023\001=\346L\206\274@\037\035=\2104\311<\203\323\207<Y\243\255\274\324\031\025\275\367\"\332\272\260\262\032\275\276\235O\275\224\264\177\273\353\211O=MMT\274c\340I\275Ie\003\275i\374\337<H\273\322\273\ra\203</.\031= S;\275\335\226H\275S\363X\275o\327,=A\212\260\274\277\205\375\274\356v\272<\21455\275s\2734\275\346\\\352\274\311\355\014=B\027f\274\311w\252<\310W\203\274\225=\020=\375\270\214\274ywK\2759\030\225<\007\344\313<\001\024\013=\256\241\233<6{Z=\204U\263<\027\253\001\275*w\262<,/\177\274\212W\346\274\263\214\037<\021\014\264<\233\311\354<\243\034\227<\326O\030\275\325\373+\275\271/\337\274\210\253&\275\350\314l\274\346<(\275\264E\215\272\253\215\245<v\013\274\274`\250\206;\035!\001\275\336\241\256\2743\0067;\276b\024<\223\206*\275\276\244\264\274\231\266-=r,J\273-\363\354<\202\021B\275\022\234\361\274\224\2474\275r,\267<`\252S\275t\2070\275\207(\235\2741\243\356\273\212\345\021=\022\273\033=\314=\332<\315]E=\315L\007\273o\256\006\275/mF=\252S\341\273\374D\275<1\341\272\273\034\210\'<\314\002\322\274\306>\302\273\234\300\004=Ju\001\275\206\337\004=\363\3234\275\207|F=\267<\230;v\246\206\274\357\344Z\274\017\246\017=P\220\325<4\2436\275\270\373\225<w^]\275Hu\373\273\366\300j:\273\230-=\325\005C\275\301~\350\274i\234\354:pH=\275\031\007^\275\310F1=\272\021.=\014\r\010=\\\263\307\273\262\330\344<7\332\223\274\362\023\032\275\342\231\227\274b\344;\274D\363\262<\364a{\273\325\327f\273\232\363\335\274b\364\356<\333A;<\312o,=]\225\'\275-/R\274\0217\030<9\277U=\013\027\031:q\364\000<\342nN=\315yF\275\226[G\275\355\367\221<bU\r\275\310\230\032\275\341\"w<\262W[=\364\225T\275\303\014\254<\002I\031\275\0300\202\274\236\242B=\361\024\262<\233{\316\274\026\314\036=\033>\027\275\320\207\227<\232w\275<\243\347\227\274\033\361\221<\201\213\204<x\250<\275\377\314\210\274\303\010\255<\341e\013\275\023\327\250<1\2167\275&\276\241:t3\363;y\336\023\275:\032\001\274;\001X\273\362\253\221\274\003\246\333\274_\031\377\274\224\032M\275o\251\306\274\272vF<\325\275\223<6=@\274X\211V<\230\266)=42\t=\331\2331=jT\202\274-\026\317\274#\237^=^\000Q<\205\321V<\037\315\034=\213I\025=\' v<s\216\\\274\301\231\031=\271V\025=\214\344X={\026\354\274\024/\314<\3429\204;\020\004\032\275\361\233\\\275\220[8<D\025$=\250\303\343\274\0332Y=\034\031\016=\033<a<\311\204V\275\372Ql\274\211\245!\275pj\371<\217Y\022\274\030AC\2755\221`<\004/\260<\336\315\037=}\372\005\275W\013\324\274\'Y\004=n\013\020\275\021\263l\273\001\360\"<\323\244\203<\030?5=\327X*=`\014\"\275\032\213\"\275-|\302\273]\221k<\327\215\215\274\376vZ\275\210\002\005\275\223\356*={\305R\275\231\276\217\274C\374\372<\255\221\205\272\035\266\030\275\247Q\031;\205\\\036\275\014\254\033\273\007\036\333\273t\031\335<\r\255\216\274\021d\256<H\375<\275\223\377\341\274\320\031(<\005\333}<\362$\266\274\376\251?=\333\226\3039\201\211\242<\030\304\216\274\345\264L=\230\256\340\274\206\2669\275d\250\342\274\240\252\001\273x\244\203<}\245\326\274o\246\254<\310\346\346<\215hA<\273z\016=\333\034\3209\rc\264<\0042\307<\273\216\231<\332*u\274\346\n\030=_y\017\275\226\275\364\274\345\321L<\274\242\230\274#\227\307<\275&8\275F\375\245\274\033rW;\332\347\021\275o.S=A\205\002=>\0257<b\361d<\'\237\266<`\211\322\273\330W\027=r\244\354;i\210\014\275\202\347\021=\3710\247<\232m`<\223\344\246\273\317\234\232<\345i5=\340l\271<\3242\356<uZ*\275g)\376\274\256P\033=\3577\227\274\242\366X=\377\361\007=\315\227?\275\221\210)\275\373A\244;\261\364\353<\026\272\025\267D\201\031={\340\244\2744\372W\275!\222\325<#\022\\\274H\351\272\2747\324\3059\313\034\351<]\031x\274\314\177\331<22!\275\025$4=\231\331\355\274\330\023\267;3v!\275\033p\341\271\033=\213<\350\2553\274\017\216\210<\020=\365\2742\300\'\274\177#j\271\034\244\007=S\021\316\274\253N\r\275\005/\032\275\227\\M=\010\321K\275\366\007R\274rB\262<]\224\200\274\016r\366<\215\376D\275\205>\265<\033\327]=@>a\274\321\233T=\030\266\022\275AY\005\275\024\212\033=M{\245<p\372\366<+\206s\274\206(F=[Xu\274\232\317\204<\332OC=\212\371+\275\007?\376\274\341\210A=#\013\256\274H\262+=\362\367O=\206\361\037\2748y?\275\356\310\257<\354~\351\274\r\010T\275\354\273D\275\301?6=I\021E=M@\356\272.\273=\275\367\320O<y\271\333\274\327\214\000\275\366^\233<\357H;\275s\027\231\274j\2478\275\361\340\010=\331Z\242\273\304\353\325;\357V\366\274Q@\357<\002\177\023\275\202\314\225\274\340tU\2751\'6=\214\314\254<EGc\274\334\331\034=\t}\260\274st\022\275\220\233\276<Hu\322<\243im<us\231<*\203P\275\3016U=\006\031\224\274\233\213J=:>\365\273\275\231@=\325\236-=\216*{\273\231\343\355\274\361\237[=\013G\203<\214\202G=\246\350\";\263\n\264<\2562\304<\251\3217\275K\313{<g\236\201;y\252\n\275\000\376&<\346A9\275\r\023\352;K?.\274\n\n\202:\321\205\r=\001\017\024\272\372\305\247:\241X\005\275\001\232\203<mHC\275\374`\005\275\201~\006\275\277\307H=\364\302\361\273\233\365\361\273\034\326J\274\364\341)\275\2422Z\275k\377O<mA\374<\002\210T\275$M\017\275\331\030/=]LJ\274\251\361\347\274\0245\227<\264?\332\274d\264\277<\213_\014=\362{9\273\010\004W=\267T\005<\331\204\200;\347\270M=\255a(=e*8=.\263\366\273\303\203\020=2\017C=b>\"=\021<Z\273\257\230\'\275\365\3741;\036\310\225<\366\252\020\275\026\342\021<\034\021\361\274\351\346&\275f\341\220<\341\332\034;\016p\305<\032)\307\274ob\013\275zAT<\230YF=\266\007G\275\310\203\361\274\372YE=\350qO=\230 G\275\324\215\017:\276I\312<gS\264\273\260*\004=\257\214\357\274Q\001\256<\350\347\241\273\245\322.=\024#\264\274n\354\210<\254\031\217\273\315\320/\273\022n\t=/\340\342:\253\373B\275?8&<c\334g\273\322#9\275\216\225\007=\276\225\352\274\271TO=\341\3242\275\345\315\357\274\212$\010=\272\004\003=\207U\034<[\3415<\025\366T=\300\310\236<\375\2321=\026\260}<\247q\267\274hp\256<\"\010\245\273T\037\"=o\320\031\275\204\240=\275b\3452\275\306\177J<\241\0045\273~\224\207\2744\367\206\2732\276\324;\350lN=\361\337/\275\376\261\355;[\037\207<[\234F=O\377;=I\366)\275S\347U\275nQ\035<T\215S\275\n\376(\275c\302\370<\364\232\253<\264\306{<\344\356R<\375\200U\275!\245[\275\302F\247<\016d\362\274,/#=G#\017=\227A\205\274\306\261-=\372\333\023=\005\257\217;C\002W\275j50=\332\322\017=_H\264<2\331\216\274\355\330>=6\362C\275\r\313\266\274\250\n \275\r\206G\275yt?=\272,\263<\230\2702\275\001\3322\275%\001\\=M\007\362<F\026\247<\346M\277<m\010\232<Y\242\271\274q\374&\274`\303>=1 B\275\034\351S<r\277q\274\032\331K\274x\213\302<\371\307\035\2756\022\033=\004*U=\325\335\033\275\025\247\022\275:\037\364<M\254\322\2749\234\000<\321\247:\275\377\245Z\274}\275.\275\345\r8\275\371\300\\\275\032\374g;\202\343I=\242\255\310<\302u*<\343\214D\275\256h\030<\331\203\021<\340]<=\357[\215\274f\377\304\274\256\335\245\273s\227\227\274\361\354\363<\315\233\370<\311\234\343\274\033\322\350<5qZ\275\337\016/=:\3361=<\247\014=\017\201p<\302\212s\274\303\257M\275\344\273\226\274\373\033\017\275\313\'\345\274R\206>\274\301\'\215<\2453\014\275MVB\274\261\277<\274\222\252\244\274\232\306]\2758!\020\275\233\343$\275\302d\233<\034fT\274-\246[\275\016Y\251<\376\355A=\346d.\274\241\232\000\275\326\022\010=\230\333\217\274c\037I\271\252\337\031\274)FZ=\377\240R\275\213\273\334\274\354\333$=2\305E=Ce\331:\376\322D=\2753e\274\022#w\274^o`<\004\356\225<D\373 =`\243\234\273>V\031=\235\261\022\274\332\261i<W\235\216\274?/#\275S\242V\275\244\242\005\275\024x\024\275\225a\370<\271\nF=\332\363-=\204p\004\2744L\020\275\005#L=K\340\272\274\335\022$\275\334s6\274\243\355\212\274\216\372\207\274\200\313i\274\367\032:\275\372\236\304<1\221\364\273\326J*\275r\321\n\275\237\264b\274\016\277]\275\206\262\367\273\303\003\372;\357\275\346<\211FI<$\303D\275\354\373\205;:\312\277<S\247+<\222<%\274\003\357\027\275PP\303\274\272\244\246\274My\350\274\202\021Y=g\332)<\340\005\016\273\037\1773\273\302~\253<^\337\231\274\330\337\351<\247\360\212\274\235\3065=\256\331K\275\257o\"\275t\235M<\327\255\n\275x\316!\274.\t6\275\307\316J=\204\343%=\270\323U=\252^E<;\0303\274W\355\327;CL\325<\256*:=\262<H\275:oO\275/\347\251<\260\2754\275Ip\211<\234\237:\275\226\021&\2742v\246\274\036\275\035\275\215\201\'=\211O\243\274Tm\016\275sv =\031]\025\275f\322@=\000\367\377\274\016\034\365\274Te\272\273\033\215I\273\376\t\301<\217\214h;\321\247\277<\\\002_=\207\361\023\274?\210\014=\2111M=\356\371W\275\0349\275\273\260\272\362\273\207\266\000\275\004m\312\274\326\272\330\273\375=\346\273\371W\362\274W\357E=\210\237l<-\023\324<\025eC=\344@\031=A\200\265\274\354\226\021\275iTC\275\263O\313<\365CU\275:\357x<\260\202>=@\2642\275\367i`<|\214\350<\177\243\021\275D\017\244\274z\221\020\275\333o\010\275\261\3548=K\035S\274\263Q\264<\020\375\341<\261<]\275Ox\021=\r\356J<}\004@\275\231\\Q=Y\024\320<\256]\323\274>\366>;\352\n\007\275\345\006\327\274\361\334\277\273\245\2611=\376\017\3509\240\216U=T/\302<O\354\247;b\007\002=\324g\275\274\352V\364<\213\263\001=\367D\374\2741?\333\274\327\214>=\0272\n\274N\275\302<\t\322V=\024\274\233<\353I\305\274\242\257\261<Mq\340<r7\325\274\271\241\031=\331\361+=<P\361\274\341fR\275h]q<\334\3562=\214\000\270\274\341\335\303\274\rK\275\274#\023\032=\251\301\000\275\205\345?=\003{\026=\264@\236<\360\373\017\275\342\250;<\216)\021=\024\327B<B97\275\276)\352\274cI\036;O,\305<1c\201\274\3256\340<w\375\023=F\240W=\323\277/\275\230#Q=r\024\032\275B\255\256<\340^5\275*\247\262\272\321\330A=\243\307|\274 \321`\274\023rN\275_*\255<\250\354\324;1\226\033\275%\3009=\243\002;\275%\320P=\227W\353\274L\302\214<\274\202\206< \026\221\274\363\000\n=\004{*\275\376(1=\200\204\352<y\214h\272\307\225+=\213\375\313<2\262+<\336\252(=\010\231\000;\274\206\021\275:\241Z\275\367\263-=Kc\207<9H\331<\031\227\200;\230\311\002=\021\'7\275\356\333\317\2741\244 \2759\343\'\275\344c\253\274O\254M=22x;<\325,=(\020L=\307\231\373\2735\242\217\274!\213\020=\271\0034\273\002\317V\275p\233\244;0\002\331\274\r\352\350\274\245f\205<\310|a<\327)\333;\315\275s;z:F\275\210cK=\227O!\275\327\210\014=\033\316\333\274eF\024=^\360\236\273]Q\006<\243\347\276<\316\201S= \202\325\2740\317\014\274\260\231a;b\247\014\275\353\364\001=\213\254\266<\\\376.=\000[\321<\312\316\002=tU\033\275\246r\006\275\316\221\031=\235\302\003\274\327\210\224\274{\2014=\363\330<\275v\311N\275\315U\026=\262\331\032\274\346zS\275][\240\274X\217\223\274\333\030\364\274\371\304\000\275\277\222\036<s\006G\275\206Fr\273}\000\025\274m}R=\323\336\275\273[\001\314\274\034\001_\275\365g\314<\363\000\030=\333\356\360\274\303\327\004;\032k=\275\243\020\031\275\226\236y\274\315&\276<^\034l<\275{\350\274\353N\222<\253\216\300<\357O3<\335\251\261<\367\003\035;\325\023\017\273\220_ <\236\2119\274\236\3606=\374\310I\275\364AY<\001\205\007\274\017\336\277<\273\233\333\273\217\210\006=\346\324$:oB_\275\357\rS\275\327F\326\274\354\361\237\274\260KY=\026C\220<\326N\247<\224\3261=\255/>=\303\277\3739\377\205\247<;L\022\274K\333\247;\224+\r\273i7\204<A\325\n\275Y\211O=\211F\273\273\221\370\225\274\211\004-=\n\375J\275i\335\271;\317\017\244;\"\336Y=U/a<\336\224,\275\357\2076\275\302AF=[M\033=\\\032U\275\027\332W<\227{\026\2753\360G=]nM=[\237q<\360\215P\275@^K\275)\025K\275\331\260=\275S5T=|\210I\275\362aM=o\314A=\327|M\275\203c!\275\257\007S\274\006\311\022=-x\021\275g\314\013=\2724\254<\244\301 =\305^\266<\020\371\007\274Np\240\274\223}\222\274\320J\017=\372D\035=\036\353\245< =\271\274\035Z\010\2750\0200\2759k\212<+\236R\273\371\231\023\275\335\325\027=\014\242\020=\245\256O=U\226\315\273\377\215K\274\316\333\221<\003 G\273\"\256U=R\212\003\275\320\177\233\274\310\177x\2749)F\275=^\274<y\241D\275$\023&=\336\014p<\243\366\022\275\306\376\002\275#\201\001\275DE8=\341\'I\275Z\3400=@\266\323<\360:\333<\345\003\306<UN\332;J\260&=\242\367\373;\004\205\177\274\214\367\037=t\025\251\274\004;5\275Y,\370<A\204\365\273\200\274e:wF\000\275L\3424<\275\377M=\r\330\253<\003o\225<C\3354;]\215>\275\220\337>\274\037\3270\275\264\363]\275h\t\r\275\273B\021\275k\225\030=e\323\270\274\211\220G\275F\026c\273\327\324:\2757d\016\275\336q\351<\301}C\274Z\247\205<V\277T=j\217\314\2744V\365<@x1<\027\037\\\275\325\245\024=\210\003:=\374\325#\275\311`5=h\365\365\274\306`\n\275\253\223\226<\016\030(=\277g\341\274}\272\375\274A3\367<\337l\026\275Zl\357\274y\037\341<F\262\002\275\2413A<\037l\010;\ti\t\274\240\302\215\274-\246\272\274\340` \275\356\373\326\273.\305\374\274\224\227 =n\343\373\273\235FJ\275\324\014\364\273\375\254\211<\320\327\030=ho\217\274\266\370\250\274O\324A\275\317J\367\274\376\216\010=:1J=)\214@<\362\270\330\274]8\300\274\027[R\275\'0\341<\244\212\212<\322f\021=&\034\254\274\243aR=\370\354q\274\350\377\006=\254\273\032\274\253\003\351<\323\212\244\274t?\r\275\346\254\317\274e\341\202<\311\033\017=\266-\305\274\311\3420\275r\3151\275\315\026:<Vf\322<k\216_\274\344VB<\341C!=\223d\206;6e\r\275\002\260\203\274\032\0056\274\261\263\372<\262\333F=\307\255\370<KC\243<Hq\247\274v\213+\275\355\327\226<\323J\202\274\330\373\230\274\353;l<\226KB\275\357\305\242\274\023u\t\275\210\033=;\023\036\031=L\246\226\274\335\225M=\270\205\262\274\031_C=0\242\320;\n0\006\275\260\255Y\275\270\325\022=\201mP=\307\214?\275\210\247\372\274\0215%\275\246\262\026=t\233E=\330\377\'\275\344\250L=\032\353\032=\354N[;\021\247\030\275\223sQ=\341\2570==\354C=\244z\364<\266\352\237\274\\\272\260<\345\214\377\274\307\272U=\227<\377\274nE\021\275\001\225f\274\006\347\022=lb3\275DW <\343@\361;\223\354k<\036\367/<_\357>=Jm\023=\355K\271\274-\367\325\274\217~\253\274Z=>\275Z\323\024=V}\006\273\r\303\025=s\251\320\274*\241\260\274\024!\204<c\346\000\275\343rT=\\\030-=\245\346\274\2739\026K=\2306\223<\363\004\304;U\200\372;:;\364\274\177\324\\<\001\257\355<\310nT\275\252\340\232;\336\002\361\274*\374Z\275\020\316$=\324,\371<\037\355\003\275G\335A<\273\325K<I\340\264\274\266R\n=\321\221g\2746=\367<y\335;=\203+\306\274\215\350X<!:O\275&\246\327<\312\266>:|v\370<:\177v\274L\010\217\274\305-\"=\267c =\272\222\336\272e\250a<C\227,=\365\014\304;\035gC\275\004y\024\274\314\347#\275\317]\360<\t\357\342\274\261\245\222;w\036\007=\320]A\275\0310\205<\224R\375<\360\201\360<\217\023\n=C\251c<\254\347\312\272S:&\272\264\316\034=\306\2361=\003I\\=\222\255\221\274w\223/\275\350\336\'<\177\032B\275\225\205.\275\332K\337\274\220\004\216<w\265%\275\322x\242:\211y\374\274e\305J\274\253\304\276<v\2247=\244T\334<\323M\217\274\203wI\274`\340\315<\305\2716=b\250\273\274|\243\007=#\354Q=b`<\275\351\035\275\274\270\336@\274\332\341\001\275LOL:f\221r;h[-\275<\366\r=\363\027-=\004\270\266\270\332f\037=\312\247\032\275\362\324+\275\321YJ\275\253YR=n\376\362;\240xR=5-R=~\270\010\273\000\232\255\273Ra\'\273;\353\321<\374\236\t<Yz\022<c\235\000=\355\251m<\207\036\213<>\2419=j\000b\274\014+\354<*\306\032\275\262_\301\274\346\3505\274\315\016\222;`\271\214<I55\275\007\367I<\261\366*\275\325=D=\004\010\302\274a\273V\274k\227*\275T\242\242\274\236\203\361\274\266\010\027<\212h\370\274\217\342\347<\026\024\210<\021\006\331\274\226\344@\274C\354\376\274P\367\263<\310\016\366\274\271\246B=z\227\247<T|\231<\361\223><\371\310\301\274\257.C\275\321\020\016\274\215\372A=\037XB=\341\\1<U1\216<C\305\307<\320f\345<\261\227(=\351\032\035=\235\006#\275\371~\253\274\244\265X=\260\301\t=\264\313T\275-\307W\275\362\242$\275\220C\220\273\372\351(\274\224PB\275\303\026<=\304\251\200<\002W\243<\001\002\037<o\215j\274\230\022[\275\363\240\224<o\271\300\274\346\0301\274\360S\021=\362\004\007=\330\360\025=\317\320\270\272p\017\210<\354\206(\275}L\310<%\334\233<\366\236\336:\356\354T\275\366\367\310<\354\315$<\335T1;A\244\035\275`\\Y\275\226\207N=\344\307\216<\022>\t=p\360\335\273A\3524\275E\276K<R\247\233\274\222R\000=2\203^=\272\350$=\334\200>\275\225`\216;GU\322;\336\336\014<\347\335\246<\031\353\345<\223\376,<\206\237\037\275\260\017\222\274\250N\017\274\312\312\017\274\234\246\234<DO\301<\210\206\030\275l\365\226\273\351\347S=\267#L\275\320\216\315\274\216\375N;\323\344\030<\n[\304<\325\326^\275\230\2062=\230\000N\272\035\255\232<C?\333\274\327\272B\274\355\2755=\375\2519\275\002\027\005=\334t\346\274U\035\026=>\327\327\274~\266Z\274B\014\242\271T\216\231<\256:S\275\362\221T\275\275\304\344\274xqR\275\276\260\360\274\317\246#=\270\314\004\275{\210\022=S\367\020\275\nh\340;\224=,<\233\250\340\274\3714\273<\217\265\216<\301\334\003=d\305L\275\311%\317;\276t\030\275\032\336/=\345\211%\2750\366\007=\264\'\007\2759\265Y=\375\003N\275\036\351\364\274M\211C=y \016\275\006\333\002=mt&\274!tX\275\340\252\247<\365\342E=\330\025e<\305;\305\274\\\375\031\274\253\251-\275\244<B\275\321\323\006\2758\201\006\275\337k\021\275\005\366T\275\016\225\353\274P\305\344<&\027\001< \303\n\275\276\306\'<-\023\304<\327\010\236\273\0216\347\273,`\301<\004c\277\274\327\325A=\005\276U\274*\257\365<\322\3503\275\345\003\360<\335X\352\274\"Q\211<\242\007\351\274\034;\323\27439(;7\304S\275:\270\004=\316]6\275bx\t=\027\334\005\271\365\353\006\275\363`\366\274\314\3279\275\244k\007\275\005\265@\275\201MW<B\363\226<\266\005\333<\037?\033\275\232\245C\275\234\'\371\274\201$\213\274\245.\224\274b\276\362;\307l\027\274\357R\n\275\000\017M\2757V\342;\212\327I\273\265\034\225<\220\232\n\275\211\251\347<\3016\'\274\2043\257<\244R\031\273khL\275#@B=\272l/=\316\252\365<\177\210\r\275\245\364?=\t\037\366<DFX\275\352\017\"=\000a\t=\022/)\275\200\2225\275b\037\323<1\006K=\216\327B\275Y\017@\274\372-C\274\r\371#\273#\256\t=\345TV\275\264\207F\275\245l\345\274\344\207(=\217xM\275\212z\250\274\313\332\264<\302;\316\273?\201C=\231\0272\275*\035r\274\216\271\270<\215\311$\274\215\2266=\217\261\327;>\006\266\274,\204\374<\034\212\347<\305\265]\275\371^\034=\310D\373\274\262\225\177\274\270\354\255\274\206S1<\323\330\217\274\001\321,9\204*\020=v\304\235\274\324\337\352;\245h/=\373\255\031\274-\232r\274.\234\325\274\230\371\026=\237\027\025\275L\237\244\273\260\354\223\274\340\322@\275b\371;<\272B\320\274\232\326\366\274\350\023\352<\371S\321\271[\277\031\275\206\360\241<\336\367\347\274\202b\007=\n\242M\274\374u\212\274\374\360\271\274\305J+<\021;\267<^\277 =\375\346\370\274;w?<!8\224<\225BW=\274w\345<\375\227\345\272\345=\316\274:\003S\275\365\035\210<\n\3725\2758{\244\274\261\034\207\274\004\217T=X\322|<\232\024\003\275\246\351Y\274\220\202\203\274\255M2=3\370\267;\230:I=\300A\\=T\325-=>~\304<T\227\004\274\213\023\257<[n\'\275\257?\033={\345P=\007\321!=R\355\357\274\323\261[\2751\204.=\0277Z\275r%\301\274C\3371\275\335\223V=\215?O=\355\337\357;\311\220\024=\024\317\\=\206\245>\275\247DU\275\330$\264<wX\252\274\3261\\=e\324\341<}$\242<Cl=\275i\372\001\273\336\260\262\274\215m\251\274\024\324\n\275\0333@<\304f]\275cJ\022\275@\312\206\274\237W\341<4\361\242<\303;P\274~8^\275\rx\330\274\274\322B\275\022\236\262<\250H\272<\235G#=bHM=\204E\240\274\241\022\200<\272.\'=\006\306\331\273l\2554\275\310\254\007\275\3474&:\025\304C\275\376\010I\274\036*$\275\'\267J\275\302\304\321\273_\204\303\274\224\217\031\275q\324\221<\353;9=x\201\244\274\"!:=W\2432\275\223t\200;$R2=6\267Q\275\243cO;\362O\226\272\200\032\036\274\311\0344=\023\341\035\274j\215\352<\222\030,=O\032$\275\025*Z=\370\t#=\256\350\026\275]\022\304\274\236/\300<\261^<\275\273\032\021=\253\322\341\274\236/\006=\357\354#=2+\322<o\355\221\274\312U1\275Sp*=\274B\244\274U+\243\274\007\035\t< \004\373\273\235\347\266;\235\246\216\274|\361\371;\375\3429<\026\354\325;\203\227\024\275\222X\377\274\376c\261\274\\-v<l\215\037\275e\n\n\275\212\n\314<^\217V=\021\377,=\023{F=nJ\010<p\321\211:+\031\275;\002\376\246<\206\313\231\273\023X\r<O\363\010\275}\241\213\273\222A\374\274_\307\262<\320r\305<\376\371W=t;\033<\267]\214\271\006\027\214:Qa.\275Ce.\275\342/U<\364\334\032\275mz\032=\377\230F\2758\257\006\273/\210=\275\330\233$\275\375\344v<\232\232X=\233\\\035\275\336dA<\255;I=\210\216>=}L\230<v\362\344\274\271\274\223\274\316k\3468\263\265@\275%\271Z=\274{\342\273KT\351<\223\366\377\274\031\234\377\274\217Z\310<F8\027\275\026\363X=\261\304B=\303\270Q\274\201*\001\275\305\254>\274wB\022\273\313q\n=\300\337\324;\'\000_<\316.\362<\376-6\275\262\305Q=\337\374p<\033G\022=dM\343\274M\316+=\330a^\274\2133\307<0a\342\274d\262\020=\370\037\374<r\"\234\274\375\034\317\274\271\001\016\275(\302\037\275\353\001\214\274\n\243}\272\237Xg<\333\377O\275?\221\230\273\366\020\224\2740\222\323<=\251L=\027\354\256\273#u\336\273\024\211J\275\304\267\032\275\312\331<<\266\231\374<\350\223Y=0\027\322:V\022Y\273*\325\336\274\201\351\230<)<*\275Q]\341;5vz\274\263W\360;=t1\275\245\203\236\274$\027\314<o\243(<\343d<\275?\211\033\275<\273\036\275`\206E\275P\261\360\274\340\366\035=y>\367<T\324\t=\224\307V\275*O\377\274\n\271\002=\242\344\332<\321V\342\274\354\t\240\273\210e\207<.\000\355\274\007mF\275\242\260@=\321\024\323\274\007\314C=\004\0279=\216L@=\031\232\t<\010\371f<\360\'\365\273/4{<[\326\226\273\025\370$\275,p\n;r\253\\\275\364\022 \275S\"\260\274\271\304,\275\307b2\273\007\271\'=\2049\032\275_,&\273J\356k\272\223\t\213<\261j6\275u\311\026\275\t_V\275!\345\253\273\337\032\311\274\02540\275\335\330\246;<&!=\202\241\025=K\025\253;\346\243#\274O\0046=\3606.\274\240\227\036=\n\373\375\274\251\223\352<\0369\027\275n\227\347<3\235\004\275 F\014=\376\221L=\247\256I\275CZ\217<\255\310h\274\224\366\023\274Y.\261\274Z\032\254\274\247\013\362\274T\236+\275p<Z=\371\003H\275u\340]\275\254\345.=Ge\236;6u-=\347=\024\275\271\3257\275\342q\261<\2433p\274\326\020\323\274{\266\022\275\226\364N\274\026t\226<\325\201n;\330\324\002:s\2606=;\026V\273|V\351\274\374\376\n=M\340,\275\rU9= \347\375\274\361\252Q\274a\263(<\346 \266;sou\274K\001)=\020\345\037\275\257\277\016=Q\346I\275\206X\010\275J\270]=7zh\274\211k\013\275\353\370\331\274\333ek<\340Y/=\311c\325<\0066L=\211\312\324\274/V\206\274\037\251\337\274@2\035=\236\025.=\033\222\307<d/\234<A\222\265\274\317\216%\275YQ\r\274I;4\274\030\031\t\2754\007\266<p\024\230\274\372xO=\203\225u;\225\345_\274uU\007=\017\"\341\274\322\205\312;`,\017=\010\341\347\274\007\204z\274J\0131<\335\020\223\274\266\033\014=ZL\363\273W\361\037\275\021\177\005=\022\006Y=M\033n\274\214iS\275\240\355E=\250b\234\274\2457\307<*\213\346\274\307\360\320\274\242\240\325:\240\270\257:\2451\321<T\233\350<\371V\030=\020\225G=CL\025\275\002\255f\274%\001\\\275k\246*;H\013D=\004\206\0039\0229\344<\206\013^=\352\310\320\274\275\327\005;\260\325\230<\345\326\036<\323*&\275\022\032_<\234\0319<?{\317\274\337\252\317\274\321\322\357\274\347\230\227<\307@\253\274\347\017\345<p\236\201<\344\323\017=!E\006;\036>C=\032GJ\274}\205h<\310\347a<\315B\014\274Ze?\275\332\330\020=Lc\036\275\2606\311\272\236FM=\006\201\037=\317\360[=\324\213>\275\227\357\241\274\306\236\027<x\351!=\251\204\251\274\000\305\t\274\"0O=\253\277\215\273\325\244c:\301\324&\2752k\017<w\013Z=\244\234\007\274a\301\232<U\333\223<Zf^=Hr\031\275\0039\251<J\300C=\234d\014\275\025\225\017=\005\025\240\273\026\035\010=!6}\274\314\203V=\353O\263<\302=\205\274\2130\364<qz\330<\226r\325\272s0G=f \032=\303mK=F\332\025\275\240\364Y=F\305(\275Z\035\024=|#\224\274\237\"(\275%\223\237;ER\374\273Oz\326\274>\344\374\274\002\201\007\275\353\257z\274\251\242\363<,4M<\025\371W=M\214\365;7A\221<\\\344\324\273H\265\352<\267\254\333\273Q\035\030\274\027\225\036=\024\201M=\215$/\275\036\377\n\275\271{\236\274\314\213\265\273Bi\336<\250c\210\273\306\307L\274\240j\301\273-\312\312\273\337s\375\274\346\023g<U\343?\2753\010\n=&\033\226<\306\326(\275\347H\322\273:z<=\363R7=\021\226\304:\t(\354\274\255\215]=l\313M\273\373l\226\274`\005]=\2630\374\274\317\305\\\275S\351\244<\213\371$\275K\004\216\274,\322T=\276\374/<\307\327G\274W\037\007=\032-\262<\233\315\371\273\266\2527\275M7\371\273\244\364\014\274)`\347\274\232v\025\275>\\.=i\376&\275\335\251\250\274\260\3121=\350\201&\274\302\234\030\275\251\310l\274&\334\206\273a\375\216<v\nK\275\234F\361\274\\\177\023\274\247q\032=,\302\203\274_\252\037\273\305\007<\275\211,\303\273\"\373I=\001i2=\354\301\363;\320\323\032=E\305\250\274\2306a\272\352\265\236<\376\210\020\275\235\230\'\275\014\216\'\275\310\276\372<e\261I=-(L=`\230\202<]>\022\275\034C\t\275-\367\t=B\204\001\275\373\215\261<s3\360\274Ri\t\275\253\'*<R?\014\275\016\307\207<\266\210+=\317\2321\274,)\005=G\347\316<\231:v\274GJ\016=5\252\323<\007\000\350\274>&\r\2730\251\341;mAQ=!P\035<\336\333\210\274\234\206)<\035i!;\306\333\375\274\306SR<j\214}\273\025\0248=\350\232\007\275\\\331\266<\203P\016\273\032y\001\2753\343\360<\325T\214<yL1\275\014/w\274P\277\215\273\341\262\343<\224(\013=\006Z\312<F\227c\274}bT\273\320J3<H\376\200<\264\211\322\2748\345\347<\357\343C\275+1\346<+w\204\272R\002\034\275[k8<J\221H=\253)@=\367\241^=\237\2078\274\240\242\332<\340lS\272\317|[\275\254\273@<\016zn<\243\233\362<\230\021X\271\272X\025=\372yr;t\325D\275\320\023\254<\367\344\342\274C\246\233\274\034\350\031<\025\353\266\273\274\000\204<\205\221\t\2752EV=\346\361\002\275\036\245\314<Kw\024\275\315/!\275\230\316\263<\363\214!\275\005#\013\274\326M1=/1\354<\245\241S\275\322J\\=\371\r@\275\177\021E=\332\014\206<\205-P\275!;P=_\367\267\274)\360}\274C\266\002=\327\2623<\247\364\024<O\240\034\275\302\313\363\274\025b\207<./\005\273Z\372B=/\027\033=\333I9\275\266zY\275Y\320\002=p\226\014\275\326;\353<-o\231\274\351iU\273 \356\201\274d\3163<\261\034-\275\223\031\356\274X\306\312<\342~Z\274e\010S\273\343\006!=\354\246@=\351B\035;V\233V<\002k\030=\255\364P\275k\374\217\274\031u\\=Q,W\275p\233\313<h\214^\275\226g\244<\201\265;\274\302M\341<R\207\226\274&\030\"\275E\272\032<&\300K\275(K;=P\027x<\372+\203;2\226\215\274?\245.\275Y\216\240<\340\014\356<\375\322>\275B\032\376<|\361\323\274\322^\032=\336\210\301<\225P\027\275\251b\325<\375?\032=\361\222\343\273\023\340,<TxA\275\232\346)\275\000\342^\275\220\230\025==V_\272\307\0211=\210\273\023\274\004\256^\275\2162.\275T\031E=\337\313^=\302{\030=\325\330\275<e\2215=+\230\021;Z\014#=\333U\031=}\331\034<+\245S\274`b\017<\354w\243\273\376\315\367\273\312\352\372<6\031\374\274]9-<\242TR\274\177,\200<\206\3016\275&\241\367\273\001\0274<\007\327\251<\351\300\261<\333p<\275\333\272\027\275^\326_\274*\004$\275+\r\352<\032\262\363<9_C\275 \371\324\273&s=\273;.@<\372m\003\275\377\000\252;\3451\017\274\377\0011\275\0358\245<\316\243{<\200\001[=\202n\237<\360\234M=\246u<\275\006\204[\274\002\273w<l\303*\274.#.\274Q\331K=7\300\200\274v\r\372<\027\303t\273\352\337C\275\322\322G\273\205\031;\274\236\202\005\275\005\360(<\2449\024=\314\215\014=\302R\010\275`\266,=1\377%=}(\275<.d\221\273\252\376\033=\n? \275\0200\370\273\245\366\202\272\036\3461=\254>\246\274 \222\351\274\317\341%\275\225\277\330<~~@\275\250\223\333\274\000\240L\275h\034-<\314^\327\274\236P\037\275Lol\273jl\374;[\344b\273!\004\243:\270\021E=\220\213\232:\026\334\022\275\211m\320\274\202\332]=\335\271\307;\276qW\275\210\0369\275e\347\004=\356\211\310\274B\321\006\275\013c\027\275\333}\205\274\362\250\375\274\013\322 =\213\235\023=\265\215\242;$\337\025=wd\236<\337D!<\355L\211<\247)!\275f\374\373\273L\022D=\332\332\357\274\311\221\010\275\301\3458=p~\n=\326E@=\357#\032=\226\nk<%\345!\2759(\035\275\003)-=|n:<\351\270g\274\354\241\200<~\t\201\274\370\232\324\274\342\360K=\311O2=\311\033\221\274?RV\275\241\343t\274\010\013\022\275\220*\013\274\007\223\364\273\366\247S=\301\036\213\273\250\321:\2758x\322:\375\363\332<\004\310\247\273\025\014$<\225\257E=nt\324<[\217U<,\263\000\272)1\363<\225+\271\274N\203\020=^\305\033\273\034,M=\305A\311<8-R\275\260\027_<.\245\033\2739\037U=\234t%=\375\202\367\274sE\001=-\031[\275[\251\022=\037\030\265\274\362\255\277\273\r\370,<\253\215\004\273\013AF=\362g\014\275\257P\221\274\257\220.=\241\200\274:\373D\223\274\3223%=\274\014\257<%m\201;\245NW\275\333@N\275\177\373\014\275(++\275O\200\362;\364\242\275<\343;\034=\343\215<=\262@i<,y\001\275u\271\266<\240\204\020\275\014\307\022\275\013Fz<Yc\032\275\252\225\254\273)\364C\275\300\276E\275f\226\023\275r.-\274rT\371<\351\014Y=\034\223U=\'5A\275\277\324C<\323\350\341\274\016\260J\275\224\337\032=\027U\353\274gd\206;\010\231@=^\034N=\344\357\251<\355\356(\275\321\320\260\274\326p\336<hH\026;_\361\250\274\221\271\r=\217\334\025\275t\343%=\237}\"\273-\322I=*\267L=Q\221\000=\036q:=`\372%:M\252\374\274\374R\234<\371k\205\274\203\227K\275\336a\273<\320\321\000\275n\221\251\272\337\351\315\274K!\314\274I\255\034=\334\320L=k%~<\215\330\362\274.\0174=\'\032\246\273\257\377\267;\200\214\225;\310\254\024=\202\023\027\274Ib/<\247\200;=k\364\3669\226Y\017=\242x\375:qX\353;q3D\275\203\221U=F\250\033\275\353\356q\273\337{7<gh\023=\307\022\036=d\001\006=\233a\314:Y\316\330<\261\026\032\275\234\262R\275`\302B\275\300\364 \275\203\316V=PW_=\216;\336:\216\211\310;\227<\'=\321\323\202\274^\002v\274O\002\357<\361H4\275\305N\026\275\257\262\253\2735\201\373\274\311<G\275\245\325\361<\373\342\315<f?\231\273La+\275\2336!\274n\234\203\274Q\2016\275\311\203\200<8c\301\274\215\260\212\273)\303\222<\262nn<l\252\001\275\212k\014=\326M&\275\301V\2566\033O\277\274\354\321\261<\277\036\234\274\332\341\034=\005Ne\273\"S(\275\342\273?\275\007]N\273\000\320\336<)\272\310\274\310l\320\274\231j\177\274\013\021\000<\032\035w\274\302\347u\274y\204\206:d\373\034\275\254\356\014=}\n\330\274f\333\307\274e\325A\275\320~/=\324\346\213\2739\373T\275\006\\\n\275\270\3429\275\217\005\345\272-\260\013\275\373\032<\275\307\312s\272Z?\265\273D$\370\274\241\0236=}\302,=\227\312\003\275\226\277\325\274\377\352D\274\233\276\214\274\026\376\002\275`\375\017\274ah\277\274\323\242==)]\035\274m$Z\275\362G\206;\\p\315;\376O\034<\2453\002=\320\036K\2757\344==/\364\021=\257\300M=\363\037\331\2745\021\210<\241/R=U~\367\274$\325\n=H\221\204\274\250\311\203; \276>=\213pD\275\356\215P=\310i6=\266X<\275\266\006\327;E\323\025<\177\2116=\332\367\254\274\220b\023<E\373\004\275v[m<J\303c<\315\342\036\275\033\017\331\274\270W\007\275 K7\274\237\250\330<Je\265\273[\252U=i\341\277\274\260x\306\272H\0063\274\254c6=\252\373E\275\213{Y=\030\027O\275\276N\263;@\354\230\274\315\030.\275\177\303\362<\231\246\020=\310\355E\275\020\027\037\275}o\254\272=G\366<\231|J\275\345\013]=\371\325\221\274\207\252S\274+t\306\274\3012\"\275M\177\314<\362\244\222<\3408\277\274\203\246\022\275\3410H=\rWR=\247\336]\274w\353\253\274-B\313\274\003$\013\275q<\256\274\257\275A;\2317\031\275E\333\255\274a\035\013=\nO\242\27290\253\274g\236O;%\312~\274\352V\233\274\332\252G\275m\025\370\272N\2049=\260oy\274\252\021\205\272\271\n\320\272\035\323\\=\303;\207\274]_\035=\333\276\r<ht\031\275\"\352\007=u\002\206<\357\314\024=\323y\265\274K\274\273\273*\271-\275\214\212s;\372J\333\274\266\0239=f\305\347\2747g\034=M\211V;k\'A=\344\030^\275\214\001P\274\245\276\025=`\366\002\275C\227\275\274i>-\275\337#\\<\336\031t\273\3120_<y%(=\371P&\275,&\360\274\352\242\330;\336\206\275\274\235\214\n\275 \rS\275m\213\021\275\334\032\272\273\263`S\275\273;\311\274Gl1=z\305\264\273\355\r\000=\211\204\335;To\236\273\342\220<=\347\004$\275\003\324\257<\3256\031\275\220B\321\2748/\316<\333\311\377\274R\267%\275\251\265\021\275K\253\026\274\217\236\000<\317\006\007=H\253\314\274\317\'\003\275MD\020\275\tX\013=\2451\"<a!\265\274_@\000=\247\"\242<\306\312\242\274\233z+\275W,\251<^\363W\275\037.\r\275\033\225O\275cMM=\004\351.=\343\201\344\274\201jS\274\006d =\377}*\275e\343U=\025+x\273\341\022\000<4\352\"\274:4=;\267\311X\275\030U\006\2752\233Z\275\257\000\355\272\214\0324\275!I\205\274\237\215\000\275{-\251<\215\243*\275\247C\271<O>H<\n\2441=\246\343J\275\242:_=M\340==\354\316[=X\0046\275nK?=o:Q\275\370\004\354\274_m\201\274I\021Y=r\312\243;\365\312\003<\3027\263<\224Q\262\274\346q\320<\355\2310<\264 2\275\022@\310\273\313\206\'\274\342\270 <2\263]\275L\210\010=\001s\'\275\247@\210\274z\351*=\255\347\326\274oI\005=\362\304A\275\3052\005\274\366\265\304<%\231%\275\001\235\311\274;h^\275d4\037=\2451U;\271;t<7\262:\275A\363\226<\216\213\235:.\211l<\302\247\001=\022\306(\2757&\030\274G:\"\275\032C\321<;Z\031=Hf\330<\241jN=\341\237I\275\'\267?=\351+c\274\302\377\300\274\2306\264<\312\322\r\275\303\r\322\274\366\301\'=\270\177\230\274J\2679\275\032e\273<\347\354\343;/-1<\022\356\033\275Q\210\300<y\007\345\274\320p\335<lD,<\367\215\320<\242GO\275\2147]\275_\242\036\275\333\036:=y\273S=:\251F\275z\003\306<L\032\204\274\275\023\026<$T\346<\020\266]\275\307\313\010\275\232\373\314<#\n\213<\342[\026\2752\316%\274\225X^=\3509\346<=\242\371\274\312\312^\275m\361,=k\010T=J\254\n\275\2320\034=3\355\334<\300V\232<z\'\331\272\335\3041\274\377d\317\274\267j\026\272\274\375\330\2749\241\005=\211w^=\210\374=\274^)H\274\031\273\203\274\361\224D\275x\304>\273!\326\'=\376b\013=\206\2174\273\231\253\216\274\276?\301<T\213]\275\243\351%\274\2613C=_\327t\274\276]\273\2740\351\'=\366\rN\275\306\226\207\274\023\002|<N9\000=v\365\273\274\377\326\220;\232\201F\275n\036f;\357\333\321<\255k\202<\3251\270<y>}<\274\025\035=WS\227;\324\212\341\274\002C$\273c\021\335;\336j6\274\211f\326<\226G\251\274<_\343\273s\031x:\253\266\205\274\351d-\275\246\026\006\275\373Q#=2\212\016=\253\020\037\275\327\216\031<\254a\242\274*L\364\274{\017\215<\204\325\002=m/1=\370/\347<{m\273<\005, =0\343f<\010\000\222\274\037\312]<\'Q\306;D\007]=\364\257V=B\030\377\273\026\335\370;dP\246\274\306\324,=6q4=]#%<Y%$=\331\025I<\234\267M\274\235~8\274tD#=a\352\003=\202\241\201\274\0005\010\275Y\202>=\232\200\264\274%~H=\233Y\352<\207\356\320<\300\303[\274\251\2219\275\200I\'<$\375\304<\332\313i<KC9\275|\276\372\274C\326\025\274\334\265\346<E\322\022={\207\204<+\257<\275`\037\017=\352J!\275\252U-\275 \340\262\274E\361\332;$<\261<=\327Q\275\311y]<\273\216\007\274\207\347\376\274\245\225\023\275>\3276<\263\341\334\273^\303\017=\346\3741\275\277 ;\275\247\241\336<ITM=\177%:=\230\212\036\274(.\n=-5\316\272\330K\020\271\374\277V={v\267<\204\030\243\274n\t.\275\022 \"\275\377r\302<\243Q\371\274\305\200\035\274\240\257\233\274\261\357\"=\212\035Z\275\207\036\222<\354\256\377;\271\370\336<\233\204A\275\036\022\002<\036\362p\273\023iC\275\212}\312<mr\347\274\301\321\323\273\275\257\267;\014\302\006=\203\030\001=\300\233/; \220g\274\021\260\357\274\rU\325\274\244\313\214<<\007L\275K\006Z\275\364U5=\263m\273\274\'\332\005=\001\006%\275ZC[=\243_ \275\2055A<p\202\355\274\0335\354<J\271/=\337aH<\233H8\275i\025\203\274\230\346\257<\272?\335\273j\005\327\274k\027\365\274s\241\371<P\313S\275\210c<=\245&\000\275X@\006=\002f\215\274r\223\254\274=v)=\270\346Z;\014\314\252<\336\035!=g`\246\274~\301 =\270\036J<D\257\277\274i(\010\274b\320H\274l\350\030\275\036I\242\274\377!\316\2739^\376\274qj,<\364=5;\346q]=\013b?\274\334\316\\=\335\311G\275\352\246`\274\032\005:\275x\276\306<\212\360\006\274\377_*<\377g =\354\213\022\273\036Q\025=\226\250\010\275\272\027)=|T\262<=u\225\274 4\t\275\255oO\275\222\243\016\275x\321\276;G\347&=\034\252\231<\033\033\325\274\372\345\031\275\312,\355\274(8\265\274\331\376\024=^\003\365\273\367\246\215\272\216\2264=\357\333\336\274\335\361R\275/\211\002\273|\215\360\274V\027\203<m\276\361\273\301H\017\275\244\251=\274\2022\342\274GuS<\353A4\275lp\306\273an\207<V%L\273\306\223n:B.V<\210\351\307<\365\345\241\273\370\334\315\274\226\247X\275\374\020]=\331A:\274\342Y\277<%\373?\275\0336^=\216j\377<\211j\254\273\204\255C\275I\300\356\274,\303\"\275\272\027\364\274\\2\r\274\305\302J<\023\016\010\275]\330^\275\260\372[\274\0378\002=\177|4\275\212)\214<\343 \002\274\234\316 \275/\234\333<\374\234B\274W\202\354<\247t\274:V\360{\272\004\357\365<<p\241\274;=X=C\313\036=\'\264>\274\001Q\342<bh0=\307P\005;\023\0258=\215]?<`\nL\275`\366J\275\266?U\274\314\212\304\273\206\362Q\274\267\331\006\275\346aO=1\275\247<\306\014\276\274r|\220\2743\235\303\274\317BW<Ww#\275)I\244<\375\224&=\" V\275Q:!=o\266\024=\026\230f;\025\232X<n\325\033\275\325#Y\275\330\332\021=\231\250\010\272\025\316\004=\005\342==\262Y1=\241c\322<b\352>\275\271\372\342<\242\244\345<\217a\246<P (\275\r\321\000=\233P\210\274M\350\370\2746\033\216<\312\317\003\275\276Y><y\344\303\273\021\355T\275\253\007Z\275\254N\343;\312\002W<Kh-\275!\006\353;\217\211\027=\2035=\274\031\353\366\274\312\272L=\025\243\374<:<\305<\nBH<\377ST\275\005\324\266\274j\252\036\275-\203F<\002\2332=\311l\327\273?K2\275\226\261I=;\035k;\256\034C=,\217\247\2745\345\312<b8\265<\320\243\355:\001\366,=G\233\341\273ILT\274\302\221\266<\356\212\232\274\241\252`;\037\246\000\275\010(\223\274X\005\001\275\377\263\307\2747\035\276\274+\232\002\275CP\310\274S\311\262\274\005\346%=\"\274\356\273\221U\207<\026\231E<(\306\310\274\363\200G=\244\3431=dgC=\221\373,\275\331\264\231\274\277q;\275)\210F\275\231\222J=\330}h<\334\315\354</\314\"\275#\240 =\031M\234;\32642=NfH=\031y\361\273\373\005+<3%J=lK\005\274\215\247\233<,p<\275W\327\225<\341\314H;\220\373?=,\0349\273_\256\177\273 \203\316\273\271\272\261;\323ZM=p\317\353<irT\275\373\020C\275\301\034Y=p\362!<k\2163\275\247Z7= .,\275\230\364\200\271Yj=\275\311d\310<r\206\270<o\250\227;\006f!=\230\247$\272!\224\270<\335\202\323<\245\307O<\021\235\010\273-\'N=\224\376z\274\207\352\036\275\020\014+\274\353V`\274x\030\220\274\2608\215;X\240?<\355\360\352:h\2516\275*\231E\275=\317\264\274\303\301\200\274\310,\335<\346\363E=`\333\3619\270m\016\275y\357\336<V\267^<9\014F=\027 _=\330]M\275c\365\226\274\324\250\256\274U\260\005;Et+\275\256.\326\274G>(=%=\300\273RtZ\275W\016.= H@\275 \366\031=\347\273\326\272\374\321*=E\225K=\247\234?\275\245T\021\275\274zd\274\223S\306\274D\226\267</\332\004\273\024gB\275\343&\306<[\022\274<,\312\002<\200\365};\271\365\310\2744l\221;W\377N\275\225\005y<lZ\200<\335,L=4\025/\2755\204\344<\220\217\364\274\372\010\375;+\0146\275\360\257\007\275@\321\273;9VH=\267\016\232\274\005\246\225<v\303)\274\010\320\324<F\231.\275\247\327\234<\234n\204<>GV=\223\336\214<\244\327\r<\240\225X\275\267\274\003=\361\366S=\261\235h<\022\257/=\206\200i<\036c\214\274\3773\020=\263\215\006<\346a\002<po\250\274\005\223\234<\275\237\350\274\314\317\023<\256\2277\273h\004\344\273\315s\355\2747\2721=\306\331w\274\303\001G=lN\001=\246\\\310;`\303\2229ZG)\275\024\320\334\274\372\363\347<\266\324%=2\334(\275d}\007\274\304\354\301\274\242\310:=\246\016\345<U\240\255<\333NV=\3661\325\2748\255\245\274\204}\234\274\021\233\222\274\256\371\330\274\335jI\275\255XR\275\032\226S=\362\003:\273/\3721\272\351O\033=L\365\374<K\006\377<\377[S=\3254\247;\232\271\227<\236\275\004=\324\262\222\274\'\235\330\274/7\376\274u{g\272\213\252T=pE\255\274\2743\322\274O\225N\275Q\262]<\237[\346<\20412\274\306[]=\305\321\275\274\277\264\200<7\306\307<\360\014u<:\032\264<>\301:=[\234T= E\246<\332\356\265\273\234\271\376\2743\'\254\274\212\307\330<\316\353\017\275\014\241\027\274/\222X=9\223\244\273\236\265\032\275F\003T=\021(\221\274\253Z\226\273T\005\240\274\016H\370\274\303\325\247\274\362\213\302<\240\032\370\274f\306\024\275\351\0065\272\352\232\272\274\024\323^\275\027\033)=\371\026\'\274\177\317\023;t(T\274SG\230\2731\320\2729\025\313\226\274\335D1\275\022|,=\304u\321\272~K\216<\324\344\3239N\377B\275i;\356<&\356\351<\301R\367<[\2537\275.)T\275\224\000&\275\005\311=\275u\007\262\274\345a\n=\251\274\266<\314\221\334\272\257\312+<ke,<\200!\210\274\223y\300<\340\030\371<\357Y6\2753\203\270\274\273\201\001\275I4X\275\344\331\006\275\32462=\035\033\214\273]\316\"\274\263\340\036\272\226WM=\313\327&\275\357I\036\275I\2434\275C\213{\273\3779\037\275]\313\241;\307>L=\227\005\333\274\036\222\006=\016*v<\351\025\211\274\204X\305\274\252/\262\274\312\212\n\275D5\272<\206\223\336<AC\370<\3458\203\274\324\345\370\274\300\013\013=lU\305<\031\215/\275\365\334V\274\036j%=\342Q\242<\354./\275\000\265\030\275y\354X<\237\300#=\267\231\351\274\255<\254<\245\327\320\274\322\354T\275lV\225<y5\030=;R\232<\302gW\275~\371P=P\254T\275\204>\031=\023\265\221<\262\273J=\032f\335<Xq\020=\216\275\363<\337\360\037<%/S=\367\320X\274X\004!\275nn(\275\n\340\017<\306\306\270\274\014\034H=\252^A=\333k:\274>\023\253<\362q\337:b\031\n=P9\375<)\254=\275\212i\302<\334\316N=\215\210\223\273\247F\247\273\201x\324\274\270\036\260\274\243\301V\274E\304\250<\005\007\320\274;\250\353\273n\373\265<z{\363<\327\225D=\271\316 =\205\316G\274\221E\241;\306S\266\274I2J\275\010\320\025:?\224]=\300sR=\022\177\030=\277\340\213<\212\230+=\324\\\311;\257\245\205<\325kS\274~0V\275[\002:=\253s\232<\356\3157\275\343\215G\274\316\010\343\274\244O\022=%R0<\230\356\025\275\323\241\311\274\212\226\270\273as\271\272T\177\301\273x\312\374\274n2\002\275\340\255\006=m \357<7s\251<y5\200\274s\273[\274>4;<\357\301\005=ua_\272\376\260X<S\274P<-\2078\275\214O<\2755\257\215\274/\357\323\271^+\347\274\217\252\007=\337v\343<\305\241z:*3\363<\302\352\205\274;\315\273:\014\275\366\274j\014\345\272\216\001\305<\223\033)\275\223\026\006\275\366uV=\333@\002\275\317q\324\274\361\022\220\274\241\265\020=\341\237U\275\355k\007\275\022\345\017\274\311\246\033\274\236j\002\275\353\003\234\274Y\024,=\010\212\3168\'\260D=\325l\000<[\375\017=\206z\005\275\324[\013=\003M\r=7\361\376\274\223.8<\207\032\\\275;0\027=J|5=\313\027\222<)\024S=\313S\267<5_\262\274\316\251S\275 \264\224;\371X\356\271\224\201\346<I\226D\275{\335\034\274\364&B=\373O\300;$\364@=\360\3065\275\207\257\035\275\240\337\002\275\323\353\034<\344\360^\275qi;=moS\2700e\'=\253H\026<?\316><\313\t\234\272nHl<\000\355\315<\307\026*=3\025\003=\336q\341\274\026\331\315\273k~~\274\234T\331\274\264%^=M\263\036\275\320\306\274<s\213\252<\356N.=\24720\275\035\005\211<y!r\274\026^\245<\224~\317\274\000v\004\275p\207\272\273\0305\006\275\213#8=\224\233\273<\276\245\254<\272\336\347<0\257\017\275S\225^\274\231:/\275\313\214A=t\367D=\2629\275<&\254C=)\332Z=\316\311\371<\357\204\376\2742=\254;\005\t?=i\325\247<yDP\275\335\350\255\274\272\254\341;\006\343E:g\324U=\340\273\000\275Tp\204<IA\'\273p\330Z\275\002\301\251;7~#<\337F3<\035\336\016\275\007`\000=\254\361\254;.L\235;`\310\371;5\003I=\033\371\351\274.\231<<\352\201\275<\316\243\306\274\024\314\202\274\005k\036\271\301H;\274m\016&=`\003\256\274\257\247\340;}\310$\273y\231==\351\036\322<\010\266T=J\366\341\274\226\n\246<R\002\343;\005_\302\273=\327\262\2736\212\300<\322|\3359Z\014[:\331\3352=\024E\257<\355\214E\275\220\\X=\346\237^\275;}0=\266\276\302\274v\323j<O\r7=\222\261\353\274\236\031\r\275\224\020\371\274\226\033)<(J\2709\362\027\332\271\375\0007=\037\000D\275E\361\237\274{KR\275\362S\350\273!\335:=\311\355\324\274\022m\210;\022y\344<\207w[=>\032\003\275\226\006\000\275L\201\032\275S|t\274\267s\341\274\301\271A=#\231\274\274p\3219<\017\244\342\274\375\335\r\275\357\316\322<\241\217\330\273yO\254<&KZ=\251\234\035=\363\366\377<\023s\010\275\014\233L=y\251\205\274\017\'\216\272\276\263J<\223\353\221\274\307*\361\274\027h\021\275\273\316\341\274\205\353\331\274)\346\245<\233@6\275\355hO=[\023R\274\313\272%=\247\313\276\274j@A=\207\010\341<?h\034<\363\257/=Z\346\327<\377\261\377;\310\300B\275(\014H\274\305\274s\274$:P\2757\226\374<\371-F=\321\223\034=\020\2717=-L\027\275\336\206}<\356Q_<\317\300I\275\304\216\264\274\234\2319=\266\244\005\275\024\032(\2752\010\332:\230#{<N-~\274Io\327\273 \371\204\274\374\006\035\275\330K\374<\303\342t\274\265\233\215\2746@\033\275\034\270\326<\214)\334<\235CS;\302l\366<\\\320,=*\212C=\2568=\275a\t\236<\234\247%=\272\305\244;\372e/=\340\346\272\273\002\322)<\346\211\006\274\"A=\274pN\n;9$v;Ix\355<\236\340\260<\220HK;d\3625\274\"\214K=v\224B\275v\336\t=\025\3537\275\363\304^<\367\334>\275\255\366\307\274 a\275\274s\265\274\272\303\222*\275\241\032\030=\275)\362\274\320\312P<x\337\271\274+}\t\275\332\207\257<\353\313\016\275\230i\356<\245\262\222<\354w|\274\225.9\274Ui\016\275\2717\211<\277\230\316\2727Y\251\274w \266\2741\033\211\274\264\212\212;\377\263\223\274\024\203C\275\201\2702\275\265u.=d\256\n=\010i\364<B\310\024=;U\340<\240\305X\275P\016\007<\200\304S:p+\001=g\025^=\021\324\234\274\333\255\357<\033v\265\274\324x\245<\250\222L\275\307~S\275\367*\233;\267K\005=\215\236\252<\016\254\026\275c\220@;\347?\270\274\217ud\273!=_<\355T\221\274\303\313?\275\263\025\231<\267\313Y\274\"\232\234<\343\337\301<\023\323\215\272d\024V<\211V%\275)@u\273jI\367<\"\276\356\274L\3571=l\2019=e\205\272<\354JP\275\244\351*<>\036^=\322\273*<\305\021\r<\245\366\026<]\2626=^\215\360<!\315\001<uS\034=\344\323I=\323\216\227<-\254X\275L\t\214<\217:\035\275\320\241\267\272K\354I\275W\247\343<u\254\225\274\256\233\236<\324\374\324<\3527$<D\256\255\274\345\357.=\311\265[\274\002\036\034\275\374]R<\272\330D\275z|\271\274\324d\225<o\200\262\274j\217/<d\244\213\273C@\363\274\022\243\327<\234CA\274\356\223\206<IU\262\274\003I#<\2411%=\361\247G=[\\V=\261\332=\274\247\tC=\36027;m\2146=\252x\021<0\206P\274\211\226\"\275ch^=@\323\021=\354L\262<^\352\002<\266\324}<e\013\340<\177k\037=\375\034 \275\222\273\233<o\234\016=@\240\365\274\265E\204\274\264\027\304<Da\301<\027\201\310<\312\026@\275\233Q\366<\275f\251<\277\267\200\274D\324z\274\330\372\035<\2108|8\002\341&=\276 3;\276(\014\274i\006O=\244\201\312\274\'\'#=\353\013\006\275\365+o\274\266\260\356<U\344X=i\327\217\274r\266\342\2748\037e<a,V=\351-\035=\210\262&\275a\004k\274\027\273y\272\367\327\324\274;\007\026;\354\323\274\2744\026z<\242\014\033\275\037D\351\273-\036Q=\273\'\275\273\335\010\027<om3\275Ue\362<\001}\\<N\005\002=&2\246<\267\2139=B ?=\351P\t\275\332\246C=\016\323;=Q\200\366\272\232\212\267<_a\222;\356\375Q=\362\376\321\273\222\264\333\274\374\232\257<)[\234<\347\256\277\273X\210J\275\007\004G<\177\272!=\371K\266;\035\274\324\274\2454\304<0f\357<[V\302\274\022\213\324;\310u[=J\233S\274\231G\"=b\332\r\275\025s\300<\337\277)\275YwS=\330I\344<\367\245\222<\2044\205;=\376\371\273\275\222\023=f_|<c\366\022=\313\016[\275\206/3=\231oj<s\027W\275\2478F=zU\307\274^\300\350<|B\365\274\371\325\t=\240\336\260<\364Y%=,\216\354<e\2032\275w\2376\274\314\3078=x\222D\275\3660c\274\035\344\"\275\374F\344<\225\262\033<\227E_=\240e\023\275\304t\265:\256\373\025\275(NV\275\242\374\351<\217\253\027=`tE\275\2030\001=\230\010)\275\256\237\032\275Rg\267\2738\262\326\274\354\362\305\274:H^\273\354[\035\275z\311N\275\375S\252;Lp\006\275\227\331\017=\025\210\000\275\237\355U\274(\177<=\336\024\010\274\031k\\<7}\204<\000\3110=@\265\317\273|\005q\274\3638\014\275\"\240\243<\003\021B\275J\224\223\274\245OA=\353\215\005=\351j\325\274\250\344M\275\346\367\005=u\346\303\274\250\202\014\2751\225\232<\203|R<\026\333\223\274~\rQ\273nk\026=\323J*\275\246c\r\272\266\2160=p\243Y\275\300TE\275mb\'\275 ]\014\275JC\310<O\211\006=\214`V=\275\020R=\201D\377\273\321\334Z\274\206\260!=\002}\366\274\0007\032=\367\217\355<Q\310\021<\250\206\366\274\310\376\205\274~!T\275\333\264\322\272\243\271\217\274@o\314\272\016\375\372\274(,H<35\005\275v\006\317\274\271n\'\275\001P_\275\267\3430\274\035JI=u\371\010=\317\254$=\353J\377\274r\374+\275s%)=\355O\\=b\335e<\rq\236;\n\304\337\274\315B\242\2736\245%=v_\247<\204\247\226\274z\024\225\273\026*+=_\007\330<\354\200%<.G@<(\"L\275/s\027=[-1\275cw\023=E}J\275\001\351*\2750\352y\274>i\267\274k$I=\004\007\370<f\236<=\317\326==z9\265\273\205\007\322\274\315L\256<\260y|;\343\367M\274A=\351\274\337\263\216<\300@\276\274\232\006\n=\333d3=\364\271z\273\214\202\317\2740\034k<G/A\275<\273S<8R`\274\353\366\024=+}\330\272\307\203I\2759@*=\276\220\367<\357*\032\274F\336h\274\310\024\325\274\325\021\262<\216\006\032\275M(\013=u\032\274<ar{<*q\n\275Km\007\275w\351\030\275\312GM=\0228\023\275\"\311\007\275\354\274N=>\344#=\231[\241;I@><e|\001\274\253\021\324<\277\203B\275T=\006=\261\332!\275N\020\023=R\271\311<\010\210\233<\324F\035\2757\013\200\273\363}\333<\273\'\017<BxG\274\365\361\324\272\372\025B=\260\001\036=\263\177\r\275\235~\001=@\033{\274\243G]\275\263\205\324\272b\307X\275\236+p<\335U5=l\357\017\274\255e%<\243\365\001=W\263Y\275t\264$=\355Vb\274YU\036\275f\346X<\350&\010<\337\242B\275\317L\242<\242\313V=\235\344S\274\373\002\004;\265\220\035<\217\304\355\271\34190<\226\333\340<D\"\250<L\000><\202\226\230<S\273\325\274\206\216\310\274\216x\n=\313\303%\274\273\365\014=\300\234K=6\374H\275{\t\315\273p\321\373\274\23275=\263\343\204;\n\035\363:\273h\232<\352\232\345<w;\212:a\253\303<\334\357\242\274\220\177\312<\353\2474\2752\350\244;\370\333\353\274@\247r<\322#E\274\262\275\n=\272\006\\\274\364T \275\251\2335\275\0240\357<E#1\273\010\263.=\225\377\036=6\311N\275si%=b\263\314<0~\321;\365\232\355\274\006,\346\274\322\3006\275\332\344\245\273\327\303\240<dV<=f\272\344<D\232q\274-\375$\275@\026\003<f\024\254<\001\024\000\274p\233\023=\216z8\275\267uJ=u\322^\275Ti\361<\333=\356<\332\340%<Ek9=\277+\324\274\362\355\001=\001\325\364\2743\374b\274\035\016\216\2749\2020\275\317\205\033\275\350\016G<\343L\000=z<M=\323\t\313\274\216\332>:h\257\313\274\206\'\020=\211\203\310\271\233q\025\275\310\211\220<\304\036\013=\254\206I=\2327x<7\344\'=\217\nv\274\310Z\270\274\336p2\275\365\006\327\273\363\341Z\275\306\tU=\262+\021=\347\321H8\220}\021<\242n\007\275A\341G<Cc;\274<P\374\272N\333\031=\"\315N\267\304*\016\275\333=Y=\357\306\001\275.r\365\274kU\300\274t\330\016=V\'\322<\247\005\036=o\337&=\220\335+\275<\031\005=.s\261\274\356H_\274J\360\r\272\357M\347<\240\231I=?H\316;b\241\241\273h\330-=\204\312)\275fH\360\2745\3414\275\341\031\372:\373@\311<a\354\201;ku\225<\371Z<\275H*G=\002\266\361\273\233\2612\275H\270\366\273f/:<X\364\027\275\227K\220\274M\013\030=fk\235\274\220xU=@\222Y=o\303\006\274E\007\035==\004\245<\253\266\353\274ZG\n\273\334\320X\275m M=\025\2317=;r\2569\330\255\224<\247c \274W\354\230;cEe\274\366\376\345;\036\263\327<1\222B=\373%[=\272\234\350;)\3042\275\344\372\014<\2322o<h\326\336<\017\n\003\274s\311H;^kF\275\363\017i\274M\364z;\315\312\335\274p\004\364\274\337\226\310\274\036\232><H\010\032=iW\177\274b\241F<\265\r\315\273]\270\\<c\235\323<Q\345`<a N\275\372\026p\274\221\325\030<\352\020\036=\252\277\037<\207\344>=r/\277\274\013\267\022=\212\261R=\214P\306;\237e\263<\272\347\373<E\226\336<\330\220\037\275m\317^=9W\374<\305\262\301\273V\225\032\275\337!\t=\203E_\274B\2747<\226oV\274\014\242\344;\361\314\233\274T\245\204\274\266\nv;\212\275\010=\331;P\275\246\252%=\366\242\331<\016#\332\273\347\243[\275\345&Y:9\003\302\274\232\302\362<\334LY\275\n0\224\273V\365\253\274\004\025Z\273\303t;=\311Fm<l\330\320\273\035\307\216<\360h(\275\225xB=8\314\034=X\364,\275g\245\r\275[M\007\275\225WX\275@\021D\275\205\230\021\275\016\366\224;\r(N\275z\"\032<\003B\221;\272\304\271\274\2012U=o\371R\275\306\'6\274a\024+=\207\032Z\275\002\017\311\274\005\037\002={wQ\273\376k\321<\025\035\353:\013\022=\274\t\230(=\206\372\2419\255\211N=\323\333S\275\274\212\211\274\314\312\352\274`\260V\274\013b\307\274\242\303[=\r\312\201<\315\025\350\274\370@\t\275A=\214<\364\276\010\275\376\244\320\273\'\310\215\274\2471\246<i\352\246<b\004\242\273\343\3721=\260\275\004\275\371\276G=\371Y3\2759/.<\274\306/;\263\2239=\326a\026\275\203o\375<\255\022\030\275u\365#=\212Q\200<\003O\262<G\362V=\347DD=\247^9\275<|\234\274I\007N\275\305\362 \275\334H<=\223-1\275\235\331[\275K\035\216<\345\243\321<N\372\370:?\336\340<\233\031.\275\240vF\275\333\366W\274\002H\221\274\327\216\017=\030\001\230;E\374\010\275\301`\030\275\'\360\223\274\305\360\350<vJ?\275\273:\023\275\326l\272<.\324\211\274\275*#\274\365\337\275\274\242\264\035=\030[\030\275\n\007Q:8\336U\275\361\201\251;o/\357<\333\243\363<\034\351\"=\227\007Z=\213\324\201\272>c\035\274\351+\225;\263\346\315<\314\010\333<\275e\314;-,8<\313\253\351\274 \227\272;\260\251\217;f\361\227\274\025tF=e\"\364;\220\010\024\275\004\371\202\2744%\032\275\364@X\274W+\226\274\352\254E=\303[\213\274z\317\354;b\306\274<g\214J\272_\377\234;;\330Y\275\026\200\320\2745r\007\272s\0230=\350\014:\275\256\225\215:\305\027\362\273\334j\007=\306\223\261\274\266}0=f\214P\2757\337\006\2755\223B\274\242\205\347\274!5\264\274\3669\021<\360$ \275!1\356<\2501,=L\177.=,`K=\317JC\275\370\031\365:X\351\356;SL\201\274\373fM\275\223\334\357<\352\233\033=\213zS\275H\316\206<\276\343\n\275\017G\324;\324\007D\275%\270\236\274x\306F=\362\332\310<W\347\220<`\361\023\275\220^W=7W\361\274\354\215B\274\0377\034\275\372SG\275\007\307\366;\236\342\003<\037e\254\273~\330\244\274\375\374C\275\252I\027\275n\262P=\346\010\314\273\372/i\274\351`\'=\366\250\010\275\225\210%=\030H\250\274\372\346\364;\260\211\036=\343\024\360\2745}\351<\232\2120=\033\302j\274\325{\036\275\274z\224<\300\021s<\336T\266\274\272=\347<qq\033\274\271p\200;(t\034=\036\177\205<!\374&\274(\360;\275\336\310%\275\345\322><\246\'\200\274\001\361\364<\005\226\034=\315\261\014\274\312\\\001\275/\241=\275\201D\301\273\312\326I\275\302\372V=\006T0<\273\202\333\274;\332\301\2742\023\t=\270\206\344<9\010/=\nIL\275-\034S=\270\344\005\275\333\365\010=\367\222>\275+\007F\275\317\2036=\206\034\300<\t$\344\273>\221P\273>\203\021=oC4=\032H\003\275\376\246u<>$F\275\317\331=\275\370\273\007\275\276\277\022\275\373PX\275\227\256\000=\356v:\274\376\037\311\274!j^\274\223\017\034=\367\006e<\305/\030=\311\361\251\274\240d\257:]8\372<\016r7=\251\274\326<\345\023K<\\\031\037\2752\210=\275-\317X\275\337L\233\274\365\036\241<\250v\266\274\204\365\235\274\022\271[\275{R\001;\206X*\274(\333\317\272YB\261;\261d\004\275\325M\253;w\234\'=\332\226\245\274q\315T=\027\326\301\2731!@\274\327\246\r=\376SS\275\241\342\273\274D~A\275P\245\234\274\3712\250;\007[\352<\264\255\332\274\020\342\255<\207e-\275O\374\n<\375Z\217<\332\343.=\245\005\315\274\037\267\231<c0<\275Q\270\000\273\331\354A=\305S(=\031W\027=\016\321><1\372\032\274\372<0\275\302\307R=\310\"\237;\315\216\274<RS0\275A\260\341\274\002\362Q<fV\037\275\261d\007=\\\266\265\274\205S\267\274\212\3218\275\370^A\275>HA;C\206\231<\2003S\275\354\367K\275\350U\307\274\314\010\322;\353@V\275\324\t@\275c3s;\257\263\020\275\251B\003\275!yp\274\324ua\270\235\342\233\274\r\274k\271\202\270\212;\026\021_\275x\260G=4zU=\262\",=~\312p<\025l\025\274[t\300\272(fT=4D\t\275\316\306!\275\366\3510=\303\370\217\274\'\340\366;\212\r/\275\347\233\023<h\201\336\274\204-\037=\265nt<m\337\025\275\020\334\230;B\r0=/\370-=\314\347U=\351\377K\275\023>%<\030L\224\27339\322\274\306\316\025\2756\357X\274p\200G\273\262\361\007=8\260A=j\3309=\344\006G=\204\300\177<\013\320\017\274kK6=d5\331\274\340\265\200<\273\337\317\274R\376\357\274\310S~\274\376\306\363<\324\010[\275\010\314\032\275\205rQ\2754c\r=(\311y\274v\220\372\274\216\000F\273k\324@=\335\t\010=r\212\237;\377\237\335<\312\220z<H\205\266\274\334\322\000\274\224\3203\272r\231y\274\037&\210<\243*9\274\256B\350<\256\360\251<n\255#\275F$\035=-\177\321<2\343\002\275<\"1=/\370\205\274A{\233\274\314h\332\274\201%\310\274w\t\006=j)N\275\272\003R=\321s\236<\255W\246\273i\335\002\275\234\013\377;\225L\\=\025\231(\2756<\237\273\320(_\275Y!\000=N\003!=~\2151=\266\273.\2756\235\000\275C\262\273<X\2019\275\243\327\362\274\350\300\345<\202Q\202<J\250!\275\022IJ\275\210\226\334\274\204\250[=_h\002\275\277\304\341<\032\245M<\376\271G\275\366bQ<\351\366.\275\337\331\225<\000r\030\274\230\3353<RN%=\270\276\310;\300\rt\274m\334\017=\264xC=\200f\363\273\240W\034=\207\374\001=\024\300\244<\321)U=\345$\344<\314\376\264\274~\004\027\275\272I\270\274\255\'\025\275!\352\302;\203\274\227\274\361(\t=a\325\010=?v<=\007m&=Wz=<4\032\363\274\372\022\242\274\007e\343\274.\220\\\2754\3726\275?\367\276;\256\372y\274\200\200\303\273\274\207\371<\030\013\2758F\2064\274\207\241\236<\221<K\273b\316\023<\244\027)=\3239\312\2743-z;\326\332<<\007\342\241\274:\361E=\262\3459<\025`\350\2743\345\233\274R\364\246<\303y\311<\335\017\301<f;\234<\221\307\215\274\000N\326<n\362\306<\211\0225\275\220\020\037\274\217K\371;\312\341@=SB =L\207)\275\257r\030=\333 7\275\227\026\262\274\034]\313\274\355\356+=\345\214b<\365\206\024\275\2377C\275\267\005[\274\022D\323<\227\001\215<\r\245/\275\317SR=X#\312\274\036d\177\274\005\305\371:~\005\006\2744\232>=q\263\\=\036\032\004=\311\321\224\273p\215j\273\n\340~\274\352s\320\273y\333\034=Rj\205\274{\204\010=e\322\327\274\341\267\227\274\352\231\253\274\202\303\364\274\242\331\000\275\007\363\345\272t\315\213<\316{\364<J\331\036<\304R\362\274\326c\032=6\\O\274\260\310\014<\022\313\220<].F\275\261,F=\234\377\324;\301\304\n\275\347\325}9l\007z<\177\240\003<\013\262\316<\262\373\351<\324\207\016<\374\251*\275\374\266\016\275\326\037\247<\370\210@=\377\370\222<&\007D\275\234FA=\270\2635=\211GV\275\232\360\340;U\030\n=F\2454=R1,\275\322`\001=\354\355\340\274\373H\346\274\000\2008=9lN=\266kA= \325\026<(\363J=\221}\'\275\355\236p<t\230/=\r\217\'\275(\306>\274e+\013\274h\'\275\274\267g\312<\216\335+\274\371\276G=\3372\230;\276\217%=\256\220\3719\240 \037=\214\234\020\275\000/\177\2737\367\r=\014\346K\275\027\244\006\275\200)\236\273\234\261\031=\003\325+\275\243\342\r=\013%a\271U\245\323<Q\345\025\275\233\264\253\273O\022\021=\302\023B=\303\214\377:IS\220<\016>\332\274\326U\227<\334e\362\274\237\322\247\274I\357\342<\321\205\252<\214\356k\274\221\314\205<*x\355\273\254\211\235\274\000\216\214\273\t\023!\273f\375X=\315(\347<\366_w<\002\261i<\253f\272<9\205\330\274\317\305\000=\027K\\\275\273\007\267\274\246f\253;\366\365R\275m\013+=\177\223\336<\n(M\275\201\306\332;ZL6=Qrh<(\210\376\274\2457\334\274@\324)=\312Q\r=p\233\236<\n\247\013\275r(\032<G\203\\\275\214\231Y=.\246P\275\034\020E\275\201J\244<\214(\310<s\013\272<\263\245\005\275\231\332\374<e\244E=\224\334#=\251h\243\274\330\350=\275\262o\004\275l\330G\275j\356G\275{\342\324\274&\314\251<\031\303!\2744\260\030=\332#\226<o\252\322\273\313VM<<\355@<Pcx<\361\205\004=\2205!\275\332\003\310<\254\366\306\274\320\314\256\274\022\255\212<8<B=\022\362\324\274\225\223V=\nk\216\274\234\361\206\274I\217\321\274\271=\016\275\305*\233<b\375!=\r0\315\274Iu\255\273\345`t;\256C\230\274\250\205\275<\347\331O=L\246u\274!96=y\333y<\301\241\215\273;>\007<eI\303;6\224\334\273b\313\265\273\356\227\025\275\226iE\272m\320\336<\354<5=M.9=\207\317K\275F\272T=-\362\306<Hm\244\272\315n8\275\332\2440\273q\345\273<\347\1773\275\301H4=J\207\252:~@y\273\302\316\n=\224\320\024\275d\265\r\274\007\025\200\273\361\2240\275\274o\034\275U\320\016\275\252\355R\275\366\005\'\270T_F=\366Y0<\017\201\001:1\n\355\274\2777\025=3\020\201\274z\207\016=|pT=\034\377\r=\257\300\"=\361~\034=U\0307\275E\235q:\036+\362<\320\000\301;\002\242\240<\023\260]=\360~\260\272/W\'\275%c\020\275\326\305D\275\301\203\032\275\235\376\321\273\263H\322<\365\333\222<<\351\355<\247\365\244\272Q\025V=s\210\007\2737\016\246<g\204\375<Vl\200\274u\201\036=\031S\230\274\n\002;\275$\272f\274\356\355\232\274\266\265\037\274\014\220\005=E\244\312\274\375\244!=\315\244G\275>j\312<\275\204\271;\361\r;=6L\222<\366\307\022=(\033\364\273Y\n\375;s\207;\275\205\312\312;\247\2110=\234\034\201\273\345z\333\274\332tK=\333v\361\273\215\266b<\366P\024\275m\320\025\275\264(!\275\236\r\337\274\266\372\016=\334\2023\275\374\026\033\272\211\313\005\274\217\251\003=\202\352]\275To\257<\002(\r\275\033\375\030=\313\306\031\275%@\330\274\213\257\353\274\272bq<k\321\230\274.\037E\275\200\343Q<>\244\304\274\023K\t=[$6<\001\\\355\274\035\036\205<\204\365T=\3213\023=\325\356\222\273\300\310\013\275\310\307D<hM\017\275~\203\037=[\321\020=\302\262\016=W\220\352\274\347\022-;\221U\277\274\344y\241<a\216\2278\3575.=!g$\275\307\355\001\275Ue\306\274\026\364v\274a\020\320\274l&Y\275\317\360\330\274\004*R=~\305L\275=\207\266\274{\203\355<\262H\212<Vy\324<\016\243P=\021\000\351;\216i\364\274\037\212\353\274\271K\031=_\326;\275$PL=\306\231\312\274\352v;:\354\373\036<hi\334\274\335\273-\275\2626x\273\272\226\250<d\355O\275\361\3332:\356S\022=N1\010\273?=\017\275e\230C<Y\3055\2674\023\252\274\366k\017\274\205\345\302:b\2623=D\255\201\274\332\014I\275\230\'\2039Q\032\270\273\267\272\022;\352\367<=?\024/\274\207\035\013=\301OA\275S\244\271\274\033\021\245<\262\274\010\274\334r\010=\276\204\023\273\001E\344<\014\331\251\274(-\202\274^\354\220<\022\264?\275R&\313<\322\207\265;\013\332\004=W&$=\300\216\370\274P\266n\273\233o\352<\343\317*\275\351\n\346<\010\264\261\274\'\200<\275\305K\371<7\257H=\305_\300\274\240<\220;\325\235\351\274 >9\275\020\306\031\274\244\"\\=(\022\004=4\302(\275F\025O<\021\3518;\312\207\240\274\017\322\016\275\263\222\202<\232~*:\276\260\372;\352\236\021\275\271\363*=\021\303\337<S\366B\273\225\021X\275+\024\333<\010\013y<\245f\033<\311\342\027\273l$\036\275\262\215N<\262;@=\231AY\275\300\022?\274\251M%\275\367\363\r=g\\^=\242.\n\275K\000\310:\361o\377<L\252G=}C8=.e\267\273f\002\034=\327o\236\273\203\376\254<\336LV=V\352h<\336\353\217\273\303\345\277\274\301@\234\274\2025\\\275\033\324|\273\363\r\314\274\325^C\275\213O\010=\365\371\301\272\n\273\314<\016\2237=\217\016\301<\372\242\367<\200%\006=\341]\020=\327^\270<\005\2349=\342\332\273\274\023uw<\361 M\275\010R\364<\210-T=\216b\353\274\261\3424=k\263\270;\326\207\316\274v\272\000=\366;\226\273+\301\374<\030^=\272\261\373&\275}o\337\2733\304\352<\344)4\274\377\021\210\274\253\347\372\274\302\236\005\275\300x$=\277j\223<\363\270,;\326\243\243;\014\257\300<\220u\200\274_\035\324\274\231\034\014\275\271\365\244<\242\017M\275:\007D=\272\001\362\274\317\305\217\272g\321\316\274\023\005\360:6E$=\204L#=\211\236\252<\316\277\255:\026\'3\274\030\225\360<YQ\000\275_FQ<B@\006\2755\036$<{\203\003\275\271-\010\274\177\201\274\274\2241\216;e\021\353;yV}\273;\362\355\273\364\036\304;\353*\260<\027\027!=\366}\020=\336{\334\274\232\177M\274\023\002_<\216\252\177\274\220I7<$\211U=P0\225\274c^H=\017\224\207<u\346\\\275w5D=P\356\027=+m\202<\304U3\275*n\327\2743\343\036\275\347~-=v\221.=\226\202_\274T\365,\275\346\037\"\275\221XK\274\346\313\372\274(\031#\274\256\222[;Lu\013\2757=D\275\227\244\343<\206\245h\274h\266\301\273\301H\352\273\310(p\274\010\353S=\226\376\177<\313\300\026\274\034x\311\274\324\324\310<\014\035\013=l\000\356<Ow\377\272,\201,\275\327C\366;\331\222\3139\244\ra\274I\350L=\343\245\030\275x\016\336\274\023\352\354\273|\256\036\274\341\235\207\274\2328\373<\342l;=N\\\336\274\336N\032\275\367\205Q\275\3446\025\275\2051Y\275Az\013\275\203\023\301<\003bY\274i\267/<z5\r\275XEL\275\031\200\363<\247F\217\274l\324\210;\025\0277\275\226\265\242<\314\276\216\274+vU<\257h\210<\026\317\032<\363)/=sD\001=\243\037}\273\205\361^=\315\315\026\274\206M?=\316\026\035\274\035$\010<s\342\331<Jh\307<A\2600=\034\252=<\273Ly\274}\366=<<\303\231\273\004\031\266;\036\035\024\275\357yZ\274\263WY\274\rW7=\334^\243<\003\232~<!\225T=?\002\360<\235W\267\274\321NQ\275A\020:\275?\037\204<g\005\036\275;\322\032=#<\322\273\241\333);\264\353\255;+:\314;1\016S:\346\020R=\023\002\006\275\r\264\250<\261g\246\274d\335F\275\233\2378=I\324\014\275\203y\366\274\177\375\003=7\232\260<\347\301\005\275\375\277\275<\327\222\372<\255]\300\273\315\2220\275\024.2\2751EI<\266-^=\340\260A\275\254\371I\275\311\202\r\274e\035\366\273\033N@\2746\037\260<\231&\034\275\234\306\"\274\371\001\274;\275V\241\274\316\200\n<\357\247G\275\2750\235\274\312\310\035;\027\337=\275\336\310\022=\006w$\275\241\272\273<\344\276<<k\341\205\274\260\202\210;\276\340\364\274\031V\013\275\023<\266\274S\217/=\230\177\006\275\000*\250<\004\307\237\274\273nW\275fp\257<\305\312!=\230d\313<\023\374\001=\213\245\r\275\325\245<=\222\247\222;\234\242Y=\000\037\030\275O\263K=\37630=\360\036\003\275R\205\310\274\212\310?\273\310\230\227;\305\027(\275yjr<T\266\007\274\2217\036=\n\343\010\275\'Z\327;\t\374V;2\222\335<\021\037\240\274O\030\242\274\317e\322;\371\211\233\274\'\252\301<n\2613\275=\026\'\275[\203\241<\332*\361\273\263\333\223\274\314\031\002=\323\013Q\275\3054M\274jvY\275\014Y,:\365\207%=\324\347\373<w\327\317;\322U\244<\201\362\r=\242E&=\017R(=u\016\332\274a!\335\274YmW=^\340\207< \0034\275n&\311<\254\333$=\267\204*\275\2771\210\274\260B@<\213\027\006=\261\021\376;]\t\207<\246G.=3*\016=\273\221\247\274\367\313q<\247@==\2204H\275\3226]\275T\n\314\274\271*~\274\215\265\010=\177\0267\275&\277\346<\236\n)\275o\357\211\274\341\324\'<\037\265\014=\213\377[\275sT1\275U?I\275\227^Y\274\235Y\345\273\242\351\021\274<[d<\216\354\025\275Gu\344;\227\274#=\323\2208\275\317I\213\274M\331\322<\324\347\360:\234[&\274\362/\000\275v1D\274\353\017Y\274\020\017T<\307C\246<WO#\275Z\222\275\273\204\206<<\027\0023\275o\215\225\274\245\023\023=S\265\033\275<v\027<wm\250<\346\262U\275R\025\r=\326\240C=\351\242\304<\266\3134=\022<\004=%\016^\275\366\314\337\274\373R\207\274\370\244\344\274/\375~\274\255\353\r\275=\300_\2721r\332\274\272\304\325\273\027\315M=.\323%\275H\'\215<\020\215:=\333\266\222<N\310\311\272\032\3605\274\273\033W=\204V0\272dB3\274@\276\000\274:\001O\275\252\033\035=\207\371\337\274P\255,\275\332&\253<L|]\275\016\\O=\263y#=$\301\017\272\341\022\311<\272\225)=u^\205<\001\rj::\210\262\274\327W\347\273\267\260c\274\315Dz<\220\3357<\235:\347\274\247\372\373\274\365L*\275\022\246\006\275\366E\226\272u\230\037<\0109\323<R|+<\216\330\230\274\000\376\270\274\202\274\"\275\3448\204\274\025\250\232\273\026\212\024\275P\257\016<\276\220.\275\347\033\367<i\035Y=\030\337P\275\33153=\021\tF\275\222\005\261\274^R\373<\355\337\255\274m\303e\273\370>\036=\337;\252<1n\256\274\022G\016\273\3613\354\274Wc(=Q\317^\275\tv\002=:\3275=\016\200\371<poX;\'\314\007\2753\300L\275\321\352B=\242\005\310;V\220T=\316\206G=_\317\017\275\227\331\312<\300\304.\274C\337\260\274#\001b\274\212\3433=\277Z\314\273Dy\326\274Z\330\027<\234\326\014=\213\227\362<Q\'\245\274)\363[\275\245\r\342\274[\013\322\274\210\275\374\273\370\003\250\274\"\231\344\274X\200$<\n\372X\275\036|\273\274\353O\375\274F\211\001\275\327\323\350<\207\247\010\275\353\3157\275\224DA=g\266:\274Ca.=|\342\370\274\200\026\322\274\027K\004\275\324~\370<<\362E=\240\316\247\273\206\264\035=\273\330\002\274xv9<L9\'=\202\271\346<zzi<z\'\207<\250s>=\025\0260<\363\243\304<FbR\275\257\220\316\274\330\311\000\275\254\370F=_3x<\"\364\213<<\260M\275\312?\3008j\036\002\275\312\016L;\323\002\\\275\213\"\236<b\272)=k\3403=\272p\255<\240\277\257\274E\270G<\032\214@=\375A \275\242\336\034\275\367\0072=`\223M=\367\022\003\275o\006\010<?\377\033\273\033hB\275i\226\333\274=\027\243\274\351\347\370:\241\241\020\274\026 h<\363tW=\005,(=Ol\352\274,T\342\273g\332\025<#\322\013=\206\327p\274\'e\276\274\013\304\022=6\201\363<c\331\344;R62\275\265\030=\275\016Q\030\275\343\303m<\035\213\275<\352\341t<\017\'-=\212\350\311<\356\235<=\300[\022=\276d\036\275B\022\331\274MVf\274\335\254\333<=\270\273<\'\215\356<\353\353x<\010\304\365<\331\217\203\274S\200\232\273<\333\207\274\266\376\372<\205A\021\275A\337=\275\327\323\005=\242\317\241\274\307\211\016\275\004Y\023=S\343t\274\372\263H\275\233\201\250\274\345\033\204\274\224\357\t\275\212\246/\275\034^.=\2265\272\274~4\316<c)\024=Y3\020\275\315}\027\275\0027_\275\200\217\256<(S\222\274\357\021\376<{\337:=\350]\260\274\371Z\027<[~W=\031a\276<\337\351\337<\031\303G=\343\356\316:\212\000\024=\'X5=iV\343<\300\210\026=@&N;\002\004\226\274\n\313\320\273\370\277\035=\007\344\032\275\314\364\026\275\332\342\317;=iO\274\244\000_\275\0002\244\274\272\027\004\274\215\363\372\2742\201\244<\230\252\232\274\373J1;\206\313#\275\367pw\274BM,=3\222\356<\210\037\002\273\221\342\025\275x\250\206;\036?\031=\342\360\265<E\3560=\245\255*\274\226A\r\275\261\204(=k\274\2368\332{&\274\262\245%\275Ry\226\274\357(\006\275:\324H\275\345\214\300\273\032\242\0148\202\262k<\246 \306<\247\215\030\273\3101L\275\273\013\334;\352\346\226;\177*\275< \250+\275kq\023\275\311H\202\270t\304U=D\315F\275\036\265\035\275\035|<\275\002\315\254<W\365\250\274\257\n-\275\031\250C\2741\322,\275<\222\322\274\364\367b\274\376\355\247\274\267j\001=\265\373\223<\225~;\274`\233\017=\'f\367<\270d\270;\"f\343<V\2114=\200\353\202\274=0\312\274RG;;\223\007\006\274\336\352\233\274\236\222\351\271\363^\233<4sM\275-\324P\275\222T\\=\007\336\261\274\004KN\273\316\306&=\262\202\211\274\354i7\274\234\236\264<\273bE\274\275\277T=\343\322\"\275\275W\330<\306;E=\340H1=\261\206@<rep<\220\334H=ct\036\275\000o\025=\005f\375<\263\265$\275\203g\026=\232]\234<\272\2004=\352\313/\274k\220I=\022\302\314<\003\003\242\273i\3127<\242\266;=\304[(=\025\207\224\274O\205\021=\\\031M<\231T?=\334\323\010=\261\304?\275z\364\354<\372B\243;n=N;|D?=\374,7\275\023\243\272\274\304\351D=\2504\000\275\333\247\367;}\2129=C\222\r=\227\213a\274C\203G\275\253z\\=\2021\333\274!V5\275\236fy\274~a\272\274S`A\275\"\317G=\216|]<r\320\326;\316o2\275\270\372\217<)C\016\275\212\275\310\274\260\333R=\034\321\307\274k\275\212\274>N\232<\"\326\240\274\276\265\267<\352N\242<j\346M=\231\021\n\275\026\247\014\274P\270\000<\363\213E<\350+\036\275v\367\\\275\346\331\277\273q!\375:\316<L\275\316\342\342\271\320X\206<o\333\221\273j+.<N\244\022=fF\017=m\370\375<l\0309=-A\335\274\346fO=\260\220\036\274{\235\344\274J\257\243\274c\300/\272\354Nz<\366\376\364<\342M[=\274%\312<\344\004/=\374\251[=Ku\t\275\361\327\376\272\022\220\376\274Rl\230<a\232\246\274;>\325<\270F\276\272FhL=J3 \275\010:\016<[\235 =\352\177&=\372\r\333<\255\223\037\275\245\244\352\2749M\222<\236\007\006\274\354\2339<\203&5\275A\\W=4\246K\275\037V\307\272(\2476\275 U\314\274\370\211\223;I\252\251\274fS\375\274\304\344<\273\237\222\210:\301\270\231\274@HP=gL\301;4\021\325:|\332\245<s4\020\275\311h!=\t\211S<\356\002^=\271\276\242\274M\340\315\272\003\261\227\274\347f\354<\036\313\333\274\242\363I\275\236\243\255\274\362\255\002=\342U\306<y\376\353\274\302\366\240\273\037\"\032=\223_3=\234\253\004\275\257\250F\275b\251\303;\222mT\273\001\250\200\274\321\334\n\274\030\205\363\274\263\021\217\273b%\241\274E\253\247<8:4\273XOV;\027\334\366<|\005%\274\'x+\275\314\354)=->\006\274Rm=;\006\344\002\275\303Q\227<\222\3412=?\250)=\201\007\345\274\253QR\274+\272\352\274\317\231q\273a\213+=\364\367@\275\232\3217\275ko\300<\343xX=\016\026\370<AC\207;\025\245H\274%%;=G\241\251<\272\3648<\260\361\272<L\202\337\274M\363\003\275\347\2155\273\257\242B=\272\247\267<>\')9c\030%\275\372\230\013\275\232\232\002\275\214\301\320<\032%\227<\277\237\277\274;\240\301\274#\315\303\273\0046\237\274\357\0278=bA\271:&4;\273r\200%\275\343\356\033\275\207\300L=2\370\021<\327Q\374\274\"\0379\275\004;X\275\3175_\275~\030D\274\257M\252<}!\323<CY\022\270y+U=\337\315^=i\331\211<\016\027)\275\024\335\311\272z\272?\275~\177\001\274\264\325\347<\347\007\262\273\026\310\006=\346\013\r=\277$\343\274\245\315\200<a\360\023\275\253\352M\275\237;K\275\210\351\247\274X\257\356\274\262\207\373<\315\262\001=\020\335D\275~\010\324<s?\\;qM\032\275)\313+\275\345\214\210\274\033\361\253\274\373\231\327\274\030V\364<\310\341\355\273\240\036O\275\036]\274<\363\223\236\274h\243\004\275=\224\364<,=\204\274\354_\275<\3557\003=#!\344<\366\2043;\tI\023=/\2122=\310Fh\274\353\032*\275\340\203\306<m-\000\274p.\361\274\272\202-\274\366@\351<Q\253\241<r\347\334<\204\017\"<\301^\037\275\367\333\037;\366\2769\275\306~Y\275\275\'\205<\232\033\"=\016@\007\274\341\264\242\2742j\001\275;\305%=X#@=2\344\374\274T@\347<\232\346\005=\177U+=(e\360<\201\005\232\273\363\213\032\275\311\t\250; PO=W\211\241<\367-\031\275\2043\266\272\007\2400\275\267W <\253\276\320\274\024\003\316\274\261\036\032\275\214wm<\034ZO=V\314A\274\021\221\232<\ng\343;\313J_=\2403%=dB]=\237OI=\244\307\347\2741\030\265;\306\373\344<\375\276\000\275GS\032=\027\223\000\275\265\212,\275\3201!\275j\360j\273V\021\314<\rZ$=\273\301+=\204\323\n\275\303\224:\275\033\341R\275\323\316\375\274\t5\020\272\r\201\013=\362i\206;3^\341;\031`\342\273\240%\020=\226\344&=k\271\337\274\315\031\324\274*oO<\274\370\245<Q.\037\274/\360\370<~\1770=\3248*\275\325g\020\275\307\020\251\274\345\212>=\203\265)\275\013<\261\274\357\332\201<\256\302\311<\004e\204\274\236\303\000\274o:;<\361\305h<\333\301r\274/.W=\025N$<DEO\273\340\000\034\274\365T:<\177\007\374<j\306N=\362q-\275\300*Q=\230EJ=\304z\274\274\356\007\230<e}\r=\236\233K=\035\326L=\034\314A=\204\0237=g\221\t=\027\177\367<Q\0146=.\224`\272\233\235K<m\201\205<\307\020L\274\005\0059=%\336\021\275K\213\031\274}\2077=\331\031 \275|B\201\273L\255\005=\262*`<\nk*<<\201+\275\360\305\337;\257\200[=\017XV<\204\250\033\275\246\3142\274\262-Q=\376\0329=\005O\205\274\342\311\277<\"9\307<C\371\320\273I\000)\2757\332+=n\236Y\275+\3320\275u\265|\274\254\346`\273A\256\217;J\3544=T\204-<{\026\343<\363\357\000\275\330\037\'=\234\271\320\273\370\221}\274\024c-<\371\017V=gl\234<\243\005\035;1\303G:\000\030\352<\246J\227<\213=b\274r\361d\273\200\251\366;\251\230$=@j\215\274\205\357\377<\224\250`\274\365\326<\275=A\354;\030~P\273\235\277\317<\213\303\336\274\345q,=\246z\022\275[f\242\274o<\277<\272\220\247\274\331\362\353<z\3053<W\311\025=\214\332M=\234R\003<-\276\r\275\303V\232<\330\347\270\274\361&G\274a\032\031\274\016\217O\275s\241<\274K\323\231\274:!\014<C\')=m\006R<\005\3673\275`\035:<\034\222K=[\030V<\256\024\231<w\007\341\274|\275%;1\373T<\317-\n\275@\221\t<\323\301.=\0025\363\274A\351\262\2746U?\275q\223b\274jGV=-\310\312\273\005O\n=\331\345\324<\336MM\275\374\363\017=\333E\376\2738\346@\275\'3Y=\257\034I=\000\003\353<\216R\250\273\257fZ\275\345<\270\274\337\021?\2750\275\013<\245A\340\273>\352I\274\355\310\001=C%I\275 P0<\027|\253\274s\027T=Y\026\001\275\270d0=\357\331\216<\026 ==8\376\327\272\260q\207<\014\206X<\345=!\275b4\376<\240V@=\262z\227\274\332\233W=A\240\213<gl\025\275>_\240\274\333U\201\274\311\036\031\275\244\305\030\275\275\265B=+\347\211\274F#5=\237\332\356\274\033\274\306\272\254Y\272<\213\331\243\272\321\022\205\274\301\024A=\330q\352\272\353x\215<4^\306\274\204_\006\275bMW\275\300\257\373<\274XL=\335\255;\274\271W\275\274\237Q\367\274\374GG=\3213b<zG\021\275\2019y\272\247\336/\275\276\033\313\274\331\344#\275\263O\232\274\001\331\205<%\245@<\333\254\006<F\264\260<\221\247\255<\2549\260<\357\025\242\274\rL\000\274\374\302p<k\214O=\350*:\275Ao\260\274\217YN=\002\362A\275 \337\202\273\0245\240<\260\303\226\274\3605\350<\212\\\253;\350\024c\274\321\3049=\317\205Y=\331\226O\275\377\203\033<\302\365\312\274\250\213%<r\014\250<\337\336M\2757a:=n\247=\275d\2507\275\341r\210\274\240=\241\274GB<=\304\021R=\022\232\356;\347\313S\275\341\027K\275[\367\020\27529\320<!\025\014=\361\332\005=\242\230\230:W\262\350<\177?V\273e\333H\275\366q\034\275\216N~<\213\370+\275\3658?=\006\274\266\274\212\257\010\275\222\3742\275ICZ={\271\007\275v\024)=\262\034\036\275!\242\036\2750\260\260<\330\271\356\272\210\3778=N+\277\274\360\251\332\274\323\242Z\274\023\344\361\274f\332\326\274\334`X\273\2449O=\213\"\340;\373r\363\274\320\366\317\273F\206/=\307v\252<7e6\275\014_\242;u\022\035\275\351<\365\274\223\276\022\275\343MU\275\237\264=\275\344G!\275\0043f\274\337\306&\274\310.\206;\307O\201\274\'\365Y\275)\024\244\274\376-\330\274\304\010\204<.\202+\274\313\214\255<\342\374\366\274\203\017i\274gS[\275\351\2625\275W\213\\\275J\202J=y(h;8$\370\272#\202\324;\357\270\264<\332\033\334<\363x\224\273\"\300)\275na\034<\266\217\007\275\254\343\356;\320-\035\275\355\263H=\212\207E\274^\nF=\\q\342<\332\203\\\275x\236\003=\034^z\274\326\275\227\274\3355\356;\236\270_<\t\215\023\274\275\316\023=AM\333\274\254,\352\272\335T\370\273S\214\035\275\021\021D<:\315H\275f?\344<\230\253/=:\231c\274\'{\017\275\3143\220<SsQ=\374~T\275\242\347\025=\324v1=\314nS<q\352\341\272\326hA=\354\001D=i\3160=\245\303\005\275\023\316\210\274\201g\030\275g\337=\275r\2318<@\210\031\275yi\032\274\357\314=\275\010S\021\275\274\355K\275\250\216\376\273\216\305\254<P\366\017\275=\014F\275\302z\310\273\212\310\022\275\275-\010=\ta\224<\031\270\177\274\233r\377<\254?\"=\363\370Y<:\374\231\274w\223.\275\203\2331= !~;\371\255\346\274N;L<\225\250\265<\360hJ\274\276\0076=\203\374>\275c\340\370<\250!\226;:\307\r\275<\203\005\275\367:\026\275\027_\314\274\'n\324\274ft\335\274\\\'\361<\303\005\000=\205V\232\274\331\306\244<\307/\213\274\201\203\t\275\217\323\327\2744\353G<!U\254<\233\003\335\274W\004\021\2752\212\031\275\\\252Z=\233\023\r=E\\\215<=nF=MN\271;\007\343\361:\243\026|<8\037\032=\\\366\242\274\034\324U;bV\250;aAL\275\236\014^=\211$H\275\354\'n\2742\307F\275\3316X=\311\276\327<\307\235B\275\024\237\010\274j\3433\275\313\365\364\274~o^\275\376\302\'\274\355\315~<\250~K=+\3210\275G\320\254\273\030\302E\275\"f\033<$[\246\274\315\305\'<H^\325<\365(%\275\363\2648=\306_A\275J\216\350<.\246\335\274E\221M=NU$<\212\242\271<\237\030\010\275\257S\023\275M\n@\275\247\347\022\274\301\303{\273\336\000\373:\254\0260\275\177I\220\274\210h\022=\214\323#=\365\354K\2746:\026=\273\034\316<\356\020\002\275\350!H\275U\241\342:\354\212<\275b\354Q=K+\326\274\260\3471\275\351\227\301\2737n?\275\362]Y=\354d\353\274\"o@<\314\346\032=\266\353\'\274X\271\207\274A\261\"\275\262\357J\275\202h\035=\236,\247\274\004Q\336\274\327\224\'\275\022r0=\321\325\372\274j\214\303\274[E\t=\334mK=\202\016!=\023\200\024\275\"A,=\230\"\024\274\277\206\000=\337\260v\274\324\262P\275\346\222I\275\230Z\004\274&\230\316\274Q\373\003=\t\031\033\275g\262G\275E\005\261;\003\311R\275`\037\r=T7\202<\3235\331<\305\303\247\272\3150\257<\304\321\235\273\203%\271<>\367*\275\342;\376<\205a\215\274\272\256\333\274l\310\004\274\375\010m;C\253F\2751\222*\275\364\375\001<3\243\301\273IMG\275\346\027\037\275\254\3648;\rS5\275\2371$=\227\336\317;\336\362\241<\205\030L\275\3508_=\355]\301<\364\2558=/\306\034=R&\034=ub_<\225\234\344<\225\245\022\275\354TL<9\216@\275\271\313R<\324\273\344\274\240\236\\=\246bE\275\3422U\275\327\"\002\274\341\301\321<\301z\301\274\362\247\030\275af\006\274M\254\215\273j\323\310<\346_\220\274\217\2301=\005\377\003\275j0.=\300\014\204\274\321\371\261\274]\014\305\274\032\225H\275\341;\372\274\t\267\005=\267\242y;&d\213<LEL\274\222\345Z=\346y\362\274B\264\204<V\034\313\274I\260\214\273\244O\021<o\216\252\274\357\345\312\274S\254 =s\210\225</\371\205\274\032\313\344<\200I%\275;GJ\2750\317\r\275\373\305H\275\230K\365\274\352\242/\275(\227\237\274\302\360\305\273\207\310N=h\202\324\274w5\313\274)Q|:\231\247@\275\227y\230<\203_-\275\221\372\037=D\256!=\030S\365\267\361\251\027\275Da\313\274a\252C\27556[\275\275<\017=\200\354U\275\232\013\243\274\320\307/=\333\253Y\275\217\363\006\275\302\365\030=I\312P<\032!\020=}\364W=\351\333\310<\234\313\371<\255_\253\274\347\343\206<\236D+;c\336\251<\273\335\256<\n5z<X\315O\275\270\306P<\261\211?\275aqF\274\307\274K=\033Q#\274\232\361\365\274\3405T<\230\363P=z~\254<\342\274^\275\2541V=\0222\\=\024M\037\275y\215\214<I\013O\275\373\223\r=2\366\337\273S\251\343\274!(\r=\224^\017=W\327X\275\333\"\204;\306\312\370\273\035)\003\275:\245\312:\025\234(=r\221t<\036\010\340<\215B\005\275\245\006\343\273U\346C=\021\302\017==\004\242\2747f(<\022\267\017\275\001q\202<\035la<\271\273\327<\256)5=\204\"P\274\245\342!\275\001E\217<\"\261\033\273\365}q\273\024\370\275<\255p\210;\206\342\007\275\360/~\274\r\323\2169&\004\250<\326U\206\273\322\001\t=m\216\270\2746*3=m\365G\275s8\t=5\305!<B)\276<\226\374\210<g(5=\314\233\321\273=\263\323<\315-[<\231\003M\275\323\266\034\275\333\'D=\325S(\275\224D\030\273\002J\373\274\374\r\266:\311.\312\274v\343\365;\020\027;\2756\'\033\275\255a\234\274\270\200|<`{F=C, \275\207\213\207\274\232\275\364;\237P\307\273;\310R=S\343L\275N\272\303:\232D&\274K\303S=\034CG\275\346S\314<\000\013\351<\350\257\010=W\356H\275w\251\324<s\362.\274\3442\242\271\005L/=\372\0260\275\273\220y<\265,;=y\266==\014<N\275\351\000,\275+\316\200\272\363nl<\303\030\203<S\350\307<C\017\024=\202\221%=\377\301\257\274KJT\275\331!\244<L\247I=\312\\\"=\272h\373<\273\257\003<\320b\207<\350\324Q=\211R\027\275\212%\007<\226k;=\024\367\247\274\n\2242=Sc\214;\032(\315\274\267-\217<\2635U=\007\017\\=C$);\350\023]=\332\227/\275X\267\352\274\020\305\031=\303\207\362<\361\004(\274s\266F\2756/\307<K\222\272<G\\\233<\034\223\027\275\177\206\006\275\311P\005<\272\016\010\275\364\330\203\274\361\344A<EL%\275\2121\217\274wK\310\274\006dN<\370\232+\275\300\255W\274wI\204\273\354\227p<\342\025\330\274\200\024\337<I\3015\274q\265\006\274\3203\372<\365\254U\2754\2551=!2u\2732=\007\275\255K\002\275\330\243\023\275\341\316\'=\315\343\336<\234\376\t\274\023\324\341\274\322\332\004<\253\210\205\273\2339x<Y\266^\275z\177$<h\362\223\274\322t-\275\246b\264\274\306\351(=\270!_\275O\025~\273]\246\351<\010a\021\274\001-\306\273bJ\270\273\306m$=v\214+=C\013\032=\024\224.=\270\233\275\274\205}\373\274\344\331\344<\341\356\364<\240eL\275\375\345\312\274thD<|\211\'\275\351I^=\030\034\273:\357\330(\275v\310\025\272\231\236\363\274\374\303\032=\325\324Z\275\341\376-:{\267\014=w\346(=Z\001#=<\322\353\274a\220\331<rU\313<*(S=\rT\247\274\310\331/=\255\274\276<y-I=\333\316$<\250\014\216\274\027\345,\275^bC\275\360\267r\274\373\215s\274\306!\034\275]N\343:\364\336f\274\340\253\004\275\315\337\022\275\030\3712=\224\303\025<\023vX\275b\215,\275\307U\370<\377\205\263\273s\304\231\273T\327==u/ <J\177\204\273\177\332S\275\324\360\033\275v\323\034=(\364g<$\264\020=\323bT\274\361X\350\274D\203[=\330\001Z=\014ht< \305\351<\017\3056\275v\326\260\274\006\232/\275\nb\362;\235%\304<\271?\353\274\322\371\"=dN\256\274(^\350;\271\324?=eu\034;\334)I=\357!6\275\324\021\353<\364\367%\275M\211\302;\351\313\033=`\223\352;]\\d\274L\007\271\274\000b\263<\225\006[\275*n\360\274\201\224Q\275\250]\212:\225\3630=\240|\203<\242A0=\000\277C\275]\255\217\274\233E\331<\247\264%=\221\035L\275\3237\007<\256L+=\356\032Q\275:\234\235<=Z\235<g\344\311\273\272\270q;\003X=\275c+R\275\305\357\332\274a,!\275\240\261\030;\252*>\275\005\247\353\273\\3\331\274\345\"?=\240)\216\274\271\345\332\274\357,\"\275\217\354W=\3705>=M\264Z\275^j\014\275lr\010=\010)#=<\n\005\274nE\312:RC\354<?)\376\274t\374\024\275\362\355&=T#\320\274\355\266\347\274\217U\026=/\304\266\272v\217\370\274\212\3568=\326%F\275R\001\035\275\203\2323\274\220oL=}\3414\275\033\216R\275\020\022 \273^\003\003<(>9\273\337\342\240;;\214]\275s\2734=\334\253\t\275\275\353\316\274\353\221\272\274\247NX=\230\356\031=6h-\275\033n\323\274\025u\306\274\327\345\335\273\363\030\"=\366S\304<3C\366<\007\333&\275F\344T=\257\\\266<\200\330\371<\357S\351<\023QO\275h@\"=\305\243\345<\244\3539\275]!/:\322\320\261\274\323\332\361;\023\210\274\274\277c\007=\365\007\361<\274\202\017=|\003\212\272Q\036\313\274\306,\277<\244\241$\275\301\2533=\010#\264<\305^\313\274\217\017l\274\301^u\274Q\232,\275\300\241\314\274\201<\013\275\326\244==\217\354%\275\017\004\204<tr\331\273\"iI=\257\242\302<\247\325\322\274\334\343\245\274\3033J=-y\007\271\355\214N=`wO=\313\320Y<Yc/<@\206Q=\342\2538= \000\034= =^\274F\243[=\370\020L\275\274B\000={>\207\274\322p\307\273rYO\275j\342\271<\321\271<<\307\272\347<\254\317\373<\002\034\310\273yh\252<\225\021\t=a\3719\275\226=\224\2727\014\373<\241\315\304\274:\0359\273:\022\037\275\343(\031\275\n\232\\\275,\306\323\273f\222\343\274>\202\205\274\316\\\216<\270\017n\274\322\376(=#\tI\275\036\225==\366\325\265\274\371t\006\274\200\024\033\275\237\006\355\274\266\031\265;PI\004=3\375\034\275\307\276\311\274\341\225!=\370U)=\335\356Y=\020\006Z\273JyR=\315\032\327<\367\245\203\274\016z\023=w\256\304<\244!4=h)\302\274\323\315L=\020\367\005\2757\202X=4\365\275:\'\326\001\275`\3039\274\n\271\213;\350r\244<L\307E\275M\345-<\206z1<w\317\276<\321\027\304<\217\217:<+\243\"\272\277R[\275;`G\274\036\223\272\274\204\274\002=\267\375 \275h\356\372\272/X\"=\201wz;\275(U=\262;\252<\242\236\233<\263\'U\275Kj!\275\241\013\306;&\332\222<\035\254\025\2749\306\013\275\340Y\244<l$s\274\022jz\273\'\245V\275y\374\307<\373\036\016<\224\215\000=\003\227@=H\237\020=a\231 =\251q\314;>\010\257<y\030Q\275\371|\321<\315\252W\275\3310\004\275+4J\275z\243\342<\230\031\022=\034\225O==!\036\274\357\022 =\022\020D\275\212_U\275\250\256\304\274e\3748=\335\333!=k!\'\275a\306\t<\032s\306\274_\304A\275\327\nI\275\346\226\221;<\373\214\274\326g\016\275#\312<=\'\001]\275~=\013\275^{\263\273\302\353-\275\252:\326<\276\227\376<T\335\273\273\325`6=\246EW\275n\231\027\275\274L\350\274\352\307\255\273\2405H=\017M\024=Kf]\275\t\363@=\022\251V\275\300\000?\2755\tC\274\212\2459\275\365\340\221\273D\r\024=\002\022\'\275h24\275\016\021\315\274,\021X\275\000)\224\274\243\354\244\273\215\261\013\275EVA\274\337\312\377\273,\006\007\275\005sW\275\245\362\000=\036\351\333<\026\246\230<)\353\000;\371\304\335;\361\2464=.x\037<\006`X=\306d;<\334\023W\275S\357\242<\034\003H=\300t\237\274\340x\364<);L\275\257\016\217<u8N\275\304\276@\274u\332\356\274\240@\237\273\353\372\237\273:\270)=6\245\371\274\216h\004<nH\013\275\024dK<\017s\233\274?\371\020=5^\255\273,f\213<\251Aj<\374[\025\2753\304\341\273\363\263Z;g\350\327\274\026s\022\275G\370!;\236Z\007=\000\025\352\274\234\262\0239\317q\357\274\035A\025=\206=\305\273\366\240\324\274\377\031\334\274Z\262\036\275M\304\267\274h}\376\2736,@\275\20689\274\363A\244<k\352\177\273\025v)=\355QZ\275U\212\316\272\273B\274\274i]\250<\204\214\022=\321\2338=\277q\245\274]m^\272;\313D\2748I]=\325\343\344;\360)\265<\330K\026=\233\217\242\274\204\\7=\250\357\326<\273]\370<k\311\'=F\023\350<\031\005E<W\270^\274o\031\375<m\270?<\364La<\300X\270\273\306#;\275\330\017\361\274*\217\024=\376\007\214;Qt\362:\252\0257\275\356E\355<\220\221%\275\247\265R\275\004%K=\362s\017=Y\332\017\275\331nS\275H!\215;n\341;\275\326\304\034\275\253\221\017\275*\335V\274\036\007\010\274\036\216>\273\t\352*\274\345\030\347<\240\362\023; \253\345;$\013w<\222\204\017=\3440!\275\224;\373\274K\310\032\275\241\037\366\274\261E\010;\221\2444\274I\324$\2757\256\035=\233\302\361\273\241\002\333<\342\264D\275&\365\215\274n\234\315\274bjO=\231G\230<\240\342,=\'-R=r\300\"=(1_<\307G\001\275x\261\003\275\306\014<=k\333\005\275\014\305\201\274\\I\335<KH,\274\265\312D\275\314\224\'<Lo\n=\t\315\202\274{H\301;\0169F\275P\031\230\274 A\234;\304\375M=\262\213^=\366\251Z=\027e\361\273\240\214\245\2734<\307\274\005E\017=\360\225m\273PL>=vd\360\274\370\327M=\340\302F\275D\r\2719\223\263\032=q\370-\273v\215\027=\207\365\212<\324\233\360\274\"\226=\275\024k$=\024\306\377\274\023\327[\273\323E\020\275Tn6\275\"\203F\273-P\220\274\023%\200\274?\267(\274m\032\n\275\224\373\337<0\001!\275\"\316\026\275\212a\324\274\330\311\203<#\350\237<\213\264\026\274\026A\026=|\336\207\274d;V\275f$\304<L\234\227\274\270\334 ;\325\325\014\275HO\212<dp\334\273\351\257S\2755\225S\274\0061e<RA\333\273!^\014=#\325\000\275\005\357\027\275\244Q\363<q\003E\275J\224\017=\010\233\234\274\003\000*\275\'PN=\277\2314=\2071\"=Q\t{\274bw\270<\372\332;\275|\2278=\367\372\323\274\355\334\016=\356s(={`\307<\220\222\334<\305Y\225\274\263\003p<\365z\354<Ni$=\241Lo\274\355cL=\301\356\254<\031\376Z=F\226O;~\357\205\273D\320%\275\347\3513\274\376\037+\275Q\372\235\273{\321\232\273\277\020\234\273/\365Q<\305\226\005<`\007L\274\203K4\275b \013=\345C\227\273\227\311\r\275z&\022=a\347\272;\\\264e\273\347\235\3129\300,L<\351\362\230<\302]\230\274\273%\376<\230\205&=Z\345\242\274\360\220\226\273\'\343 =3\377%;\253\334\341<}\333\362\274\232QE=\242:\244<q\336\007\274\304\371/=\310)l<\243!\313<H\261.=[t=\275\351Z\002\275\252\257+\275@\370\222\274=\005H\274\242\036\253\274%!\372;\010\247G=l\374\233\271\346\241\025\275\211\352\030=\010\350\371\273\005\r&\275\3776\004\275\277R\207\274c\217\235<\353\332\030=\001\241\355;\301\264(=]\024\377;i\032\020\275eA\356\274\253\010J\272\303\205P<\360[\275\274\025\340:\275\220\356\"=\324\323\036=\223\322\230\273\222\020<\275^\303\244;\'\306I=\264\032\264<t\r!\275\014n\235<VJ\030\275\357V7=\241Y\327<\022|\'=\246\223\026=\277\\:=1\342\323<\323H\247\274w\274\335\274\357\010\214<\177\372\273\274I\332E\274\317BE;\234\024\253\274\001X_\275%D\003=\206\0160=\003\"P\27586\004\275\362\2469=\r.\345<\027IN;7\263L\275`0%\275\307\002\257<\024\322^\275\021\213#<@y]<\213K\271\274,p@\275\3479\013\274>\352\345;\202\264\025\275\000\246\212\274B\305e;\334\032K\274\342\215G\275\007\"*\275\003\026;=\214\225\350<\312\225N=\237\'L\2752\300\275\274w\243Z=\177\202\006\275z\032\n\274\240?0\275\344\205\001\275\321\017\217\273lb\016\275/BB\275\320\225\241<\371\231\006\274i\036 \275\004Q\322<\321\346\304\274\034\205@\275\235\264\002=\230,/\275_eL<\206\211\332<\237,b\274\2044O<U=\252\274\306\230^=I\264\035=\013\"Y=J\322?=\331F\203\274\207\330\032=W\242\035\275a`Q\275k\352\032=\032s/\275\356\274\013=\032\214\343<q\035\246<\327dK\274W\034D=K\252\372\273P\335E\275\200\262$\275a\324\r=\250T\r=i\233L\275U\r\225<\202\3521=\343\022+=\007\365\376<\361\337\243;\344\027\204;\321dQ\274Q\355\204<\312\370\346\274\204\274\020=\2575\334\274\306\201\252<^\341\025\275\217\372!=\242\013\"\275{\336\344\272\353\361?<\245S\017\275A@\224<\324\235\365\273f\0223\275\247\033\020\275;\347r\274\177\363\310<\3549_=\246$\270<\014c$={\330\221<\020l+\2750\250\340\274Q\351\372;6H\020<\246^\333\274\364\037?<\214xI=\037\r\333;\300O>=\274>\247\274\351m\330<\313\247\341\274=\220:<\335\331\335\274Ke\210<\244WR\275\334\317\036\274:\037\346<\263\260\005=\220w\031\274WX\"=\3125\016\275\266N-\275{\\\274;\017\213\370<\216\334I=0V&=\3278 <\365\320\220\274\233\311\202\274\2212\311\274\033\327\213\274\216N\304<\310\254G=/\324A\274\272\344\177<\274\365]\275\271\2351<P\375\362\274q\261\376\272\200P\362<C\243U\275Z\236\035\275dRV=:^\035\275m\365_;\034X\013=le\026\275v\375\235\274S\340E\275L\207C\275\231\212\024\275\rP\243\273/)\336\274z\260\257:\177\231;\274z\270R\275\353\377U=\304D2=\344P\233<\344-3\275\326\236?\275z\370\t<!\200>\275)\363L=\260\257M=\355\317$\275\235@^=\215\204V=\036\250\332<\361\335O=\013\023\034\275J\337[\275\230\323N\275\017\2267\275\201\267\364\274\314\004)\275|~\024<\274\003R\275K\217\325<\321\007[\275x\340\264\273\"\335\255;\244G\002=\234/\207\273\212\307R=\\\260\371\274\273d\205<\300~4\275)\254{\274\224r\314<\340{\355\273-\267F\275\334P\256\274\201\3672\275\254)H\273\213\305*=\000\220\352;w\217U=\264\020P\275\256#\025\275=q\\\275sB\267:{\246T\275\327\304V<\027-\363\274\355)\001\273\341\324\343\274\023\"\023\275:>V<[3(=\367\360\252\274\321\t\030\2759\254\017\275=tD<\300\345\312<n\242@\275[\300[<+\2201=I\341\005=\326\301O\274\013\205R=#\035,=\267[&\275\333\027\277\274\301\345\240\274\221M\025\274\200>J;\2342\002\275@*\361\274\304\003Z\275=\360\331<Q\3451=\207\306\037=\336\222\321\273r))<\014\n\226\274\351\315\230\274\211JE\275H\342\235<\\_L\275\306S\n=\t\312\022=\260\207\302\274\230\363?<\247o(\275\364\025[\273\267\212\250\274n\\\226<\340\016\';3,\013\275Vz\026=nu;=C\030l</\301\036\274\010\362\031=|\027@\275\003k\210<n3\250\273P\017]=\267\375\r=\306\2711=\336\233\273\273\250\3509\275\257tH=~\312\367\274\"\3315\275\370\006>\2748~\251<f\351\305\274\242\340Y=\3163\'<\033\323\022\275\017U\021\275g(\025=UlO=\213\345\222<\252\2059<\316\356H=\352\324\214\274\020\302\232;\2546Q\275g\305#<\274r\027=\332\340\342;|\235\003\274\236Ns<Q\210#=\322\227\221<U\365.;\226\005=\275\232\0048\275\240\374C\275\332{7\275\262\033\353\273X\321\261<\230&\365<\374I\353<\226\240\223;\302\326\236<s\376\225<D\244W<a\004Q=\310\0325\275?I\273\274\016u\246<\022\200\276<I\323\277\272\350I\226<\212X\004=k#3=\255\326>=M\236\327\274\3147\\=\021\377+=\313\030T\2749~\313\273*\236\260\274\271\237\364:~\346\007\275a\002\177\274\203$=\275#i\014\273\277Y\305;+\024e<\264\026R\275\264V1\273\340\220\211\272\375\241J\274\253\243,=\261iZ\275\321\335\360\274\355\313%\275\264\235V\275\347vp<q\004/\275\354K\216<[e\033\275\240\235\352<\330\305\273\273\345?\250<\322\'\024=\252F\307<o/\"\274\202\3219;\342A*=D\206N=Q\303\270;\341i\342<.\210\024\275\272\035\221\274\304\3640\275\205\253U=\373\225\345\272-\327\375\273\014\255\276;t\343\267\274\223\217\212<\221l%\275\276\364s\274\253)4=\264X\275\274\302\376D\275\217v\032\275\232\247$\275\314?T\275c\361\022\273\022!\030<:\216;\274\367\254\252\274\026\356\251;R\316\231\274&\036\360<\217\016<\275PQV=\002h\327<S\036\371\274\316\003\324\2747\306[\275m\r\324\274&\t\210<+4s<\004\321\304\274\227\027\314\274\343Tp;\006\245L\272\211\232\235\274[\027\034\275\305On\274a^U\272L\340\361\274Oh\355\274RF\330\274k\2021\275\333d\336<\317\3405=s^\301<\235\023\256<\316\357X\275Ed\346\274\361\341#=\032\373S\274`\272\375\274TY\237<\023\203\020:\276\305D=\032\356%<\367\'\247\274\214\035\252<Fm\226<[\314.=./\016=\260\373\261\274\2121\035=\232H$\275m4\t\275\352!\016\275NT$\275!\317W<\304|\312<\223\351\377\274\025\3444=\274\024\215;\004\236=\274\215\0213=\336\2029=\312\000[=\324\237\204<)\031\010;-\370_<\233\3603\274\006x\215\274\363\nP=D}d\274S\036\211\274\353|h\274\272\227\020\275Fz\'\275!\0224=\232\234\024<\004J|<\205\232\344<\235^\207\274\r\227\377\274#\2452\275\322\314\r\275\001\345F\273d\233\214;$dE=\351\n\032=7\2656\275\361g\023\275M\226B=\257\315\223\273\323\317\\=\267B\346\271&\332\247<\213GS=:\270\t\273\364HE;\354\265y<\232\264\023\274\271\031C\272\004\235\324\274\234\024v<\365;t:\377_N<d=\036=;\252\230<7\267\322<l\232F\274sZ_<\260\342D<\315\301i\274a\201\023=\037\203\347\274\026\354\370\274G<\277\274\217\306\034=\330B\335<\346\303\206\274\205N;<f2Z\274=\226h\274bY\001=3\2643;\033\rX\275\326\002*\274\221Q6\275\310\340>=\352)\223\274\rO(=S\221?\2752\2073\275\t\245D\275`\223l\274\355\216Z=\017\253:\275\036\"S=\307\336<\275.1\301\274\372@\373\271r{\200\273Jb#\275\310\305\341\274\312\355\220<V\3715<+1l\274j`\014=n\375\036<:\375\316<s\'[<r|\364<%\361Z\273\212\315\227\274\274\t\310\2747\366\034=s\263\242\274\206\337#\273\256\0232\275%\273\211\274\030U\234\274\366\2472=* s<a\'\230;\316\260Z<\033\250\311<\204\370R=\221\004\310<\363\320F\275V,_\274\206\3554=\376\333\005\274h\234;\275\203\321\223\274.\235X=\363K\r=|\0169\274\024mW\275\311\244*\275T\243\226\274\272O\220\273\241\320`\273\363\225\324\274S\225\270;\230\272\t=\010i=\275k_7\275\375\317\375<:\341\262\274We9=\037\232\236<\233\221\270<\315\3712\275]JL\275jk7=\027\261T=0\270<\275\214\267\366<\324\035/\275\344\244\230\274\035~\220\274\252\367w<\021\003r<\316X/\275\332\312\201\273@Op<\235.[\275\325y<\274H\034\037=[\237\027=\224`F<\370\214\001\275A\322\250\274\r\277<=Jk\343;*c\000\275_\217\032=*\035\037\274\367\030\035\275\214\250\021=~\271\001;"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\214Z,\275R@3\275\r\326\225<\000!\n=c#C\275\351\210\033\275Q\227\\=~\365T<\'\270?=MY\324;\231\316I<0\223\300<\356`0\275\317\351\276\274I\324\264<\2739\\\2754\324\243<4\337Z\275\2148\n=\265\2206\275\253l\276;\017\014\027\274B\206\302<\365\220\326<uf\337\274ZRQ=\352.\311<r\271\014\275\376\243\024\275\027\265\247\274h\003(\275\251_\221<\t\201\201<HL\024\275\007*\001\275\326\234>=c\233:=H\204\236<\261W;\275\355}?=o\020 =\000\223O=\020\247\266<\345\352S\275\263\221\340<\177\205,\275\220\321\211\274\000\307Y=E\025S=\205\226K=\002\215Z\272O\345\024<\375I\305;\010:\265<\221\206\"\275\333L\332;O6!=\236j*=\032\204<=]\324Z=\266S\247\273\320\006\003=\205s\270<\377\244G=\341\210\303;5\000\003\275\3517\243\274\351\227\020\274<\rT<\342\302f<D\356\020=j\367\353<5\023E\275\r\337q\274x\005 =\244\"\272\274\033\026\034\275eJM\275U\355+=\373l\255\274\311\271[=1\021\246\273.\334\037\275\013\352\350<\302\277\024<\375\275\035<_\272D\275\311\2006\275!7.=ax\311<:\r\';\314\232B=\270b\236\274:\016G\275^+4\273\253\240\002=\\\013\004\275\n\274[=\034\335\300\273\3420\037<\323\274\t\274\'\243.=\224\213\\\275\314\277\003<\361\311%\275\273\006\240\274\310\037\326<\352B+=ho\247;(\002_\275a\313\321\274,\333\313<S\362D\275\003\2166<\252NE\2758\211p<\306\230\365<\242\310\004\274\274u\341;\223G\032=\230?\031\275(\364L=\252\275\223\273\017\245R=No\003=E\223\304\273\311\214\260\271\374\366K=\004q =Xa\311\274\214\003*=k.Q=\275\025q;D\372\361<\255G\010;\216%N\275\336\200!=\036\244\304\274\001\362\277\274/\231\311<]\342\240\274%\265\254\274\340\014/\275$\355$\274r9R=\317\355\030=^A\216;\023\334\325\274\014\230Y\2752\024\236\274a\2179=\342W\335:\266eV=h\304\356;\035\202U\275Zo!=\216\266\222;\000\355&\275[^\373<\322\337\271\274\367\346>\275P\n\317<;\2664\273_\"\341<3\353\363<\351=8\275\344\242\035;~BO\275\366\027\343<\257{\254;\320\0254\273;\361\024\275\370\2409=\036\324\034=\201)\232<=WO=\234\266\223\273\353\270C=sB\202<\211\005>=\241Y\331<$V\035<\201?\013\275^\362;\275{\337\316\274\200A\253\274\261\242\312<`\007\230;\240\327\333\274\027t\024<\037\316\014=O\360\370;\302.O=r\330:=\320&\215<\301\004\017=\204\2050\274U\225\205\274]\210\244<\331\253U\275e{\310;\357\310\335\274#Uk:\364\023W\275S\235\220\274\3246p\274w\013\237\274\037/\343<\007d\035\275\351\034P\274\262\243?=\261_3\275\210\316\"\274Z\352\025=\231\202B=4.\256\274m\335V\275e\272;\274>X\207\273D\300v\274\267\\\334<\362\010\371\274\\\230]\271\245\235\254<\332kP<\206#\256;w#\023<\270\036;=\305\026\021=\036\231\'\275\314\307\\\275t7\314<\241\2574\275\242\320\334\2745?-=/\201\020=\271\346&\274L1\3579v\021\372\274\327\373\207\2748L?9\214\020.\275\'\2554\275rN\361\274Z-.=.&\"\2753\007\204\274\336\327\363\274\264\000\316:\342|\001\275G\'\353<8\'\341<\016\276\303:\276\344\217\2747\226H<\033\"\231\274<f.\275\317\203@\275?\243\024=D\205\254;\370\250\361\274\302\343\244\274\271\365M\275\221/B<\252\242\303\272q\220\353;\027\210\256<\341i\013\275:LM=\362\016\301\274\233$+\275\335f\266<Fs9=\236\034\206<\314\245\312<\264\270*\273q\374\370<4\246\373<\031\007\345<v\272/=|\323Q\273/\336\305;\t\250\356\274\305\356\226;Eg\321;u\344\027\275s@\361\274\273J\361\274\335\\\273<\345\207M\275\322|\030<\353%\246<_^\220<?%\037=\030\302\336\274s n\274\275TI\275\0256\357<\300\227Y\274\020h]\275\255\221\005=&i^=\233\320\020\275\256Q!\275\267\276\230<\033\342?\275\255Un<\230p\356\274$\201\264:\362\336\023\275\333\3457=\300\363\300<\327\207P<\345gF=4\350)=\226c\371<kN\260<\345\325\035=\255r1\274\272\373E=5H$\274\355\035_\272\317\034T\275\337\021\007;\000\326\021\275\342\365\031\275\330\023\267\274\302F\010<\005J.=<\205.\275\016R/\275U\007\221\272FDD\275\314a\\\275\336\332?=c\276Q<\241\221W\275\"\360\237;\030\217\264<\030I\366;\007\r\265\273\264\203g\274\013Y\371\274\2729T\275\034\231\341<jq\001\275\177\302\330\274c4\302\274\204\261b<\326b1=+\003\330<k\211\000\275\325S\026\275rMK=\363\246K\275y\266)=\034\036\000\275=*6\275\235\241\236\274\035\024;\2753f\235\274\234\354E=\207\273\247<\361\3423\274\221\034W=\301\317D\273Xw^\275\314\026\345<\r}\314\274\226\023t<X\231\375<B\255U=F\224\363\272\r28=\210NH=&\332J=\377\324\305<\207\3451\272*\000M\274f\t\243\274+\374\232\272?\243a<\303\t]=\322v\035\275\240W\010\275\363*\001\275D-F\275\232\341\344\274vDT\275t\216^\274\350\252m<\006\030\031\275\261\330r<\3329\003=g\274L<\353\224\300<\255\204K;\016b\307\273\371OX\275\026\337X\272Z\363Q=${\263<B\322<\275\270\037\t\275_77\275\312\211\360;\342X\t=\226\317\024\275\320\364c\274f\241\370\273\325\373H=Y\346T=b[\372\274\244\237\371<\264\026\\\275h\251\336\274t\251!\274c\307\362<\376\261]\275M\0251\270s9+=\301\357\226\274\r1?=1\344H<~\002$\273\226\277\";\323\367\034</\261\332\274C7/\275@O\364\274\324k\247\274$}0=\014\202Q\275U.1\274\312\263\360\274\020b/\275Q\023\340\274\206\230\027<M\215\301<\312\250\n\27525\014=\362\223\350<\245Qq\274\370\2167=\02677=|^E=\201\022\276<\265\325\014=\337`\205\270acw<\215\025\002=u\262\340<\022\332\001\275\240\235\206\273X\264\313:vX_\275n\202\255\274Y\226C<\263\334(\275\260\016\317<\205\014C=,8\026=\037\363L\275\301q\257<\010o3=_q/\275\262aM=\024\326C=\326^\323\274W\337\025\275\021\234G\272\220\333\206\270\330\\\370\274=\035\016=?\317\026=u\200N\275\013\365\365\274\203z1\275\2275H\275O0\020\275\230q+=\350\007i\274\311\341*\274}\201;=\023~@=Vf\203\274vn\232<D\273-\275h|=\275I$\323; \350\017\275\255\244L\275\307\r\211;\21341=\322\341O\275\371:\004\275\374:\346<\'d\312<e\005\310<\245\347c<\367i\256<2s\025=\275%\005=\233\241\327<[\023\347\274-\232\026<N\347>\275*\241T\275,ZX=R_\026=u%\014<\247c\211<ca\251\274L\225\025=\031$&\275\360\221\256:\374\245K=4\200\346\274oW\037=$\244\262\274IhR=\272\301T\275Sj\017<\3406\374\274\325X\037\275\365B\360\274\351\326\\9\220\200\022=p\034\206<\250\\,=v\373G\275di\022=\273I\237\272Ri8\275\360rP=c\007\242\2744G\026\273dz\242<j\033\250\274l\234\n\273\263\306\211<s\233\024\275 \334\215<j\347\203<B\375\216\274c\224I\274\273$,=\0325C\275\365\234O=\032\370\361\274t&#=\333\rH=\346\367\312\274\016\335;\274:\373\001\275\001\262\330<\335r\231<\353\361\016=y\372\006\275\362\227\002=\020\"\022\275\220\332\352\273\351wr<de\253<\'\346\342\274{\221\026\275\"^\326\274q_8;\217\204\210<9\220k<\262\016\341<7\336,<TI\270<\234\024\005=vC]\275\344\026\016\275\273=\014\275\231\253\312\274d\3235\273\345.1\275\221\207\372;&\274\"=\013\020)\275\323\344$=\014\242\222<\n\265\007\274\215%\376\2718a\026\275S\215B\2758U\271\272\262\232\234\274\000\257\037= X\362\272E\300-\275\234\335\033\2753\034\033<\305\000C=jx&\275/\0246\275\241$};,\376\030\275Q\302,\275Y}A=MH?\275\3501c<\356\006:<\3442<\275\212s\325\274\034\202_<a_5\274\323\363\250\274\302\373\222\274\033\240B\274\270\325\002=Wy\037;\031\034:=\257\204<=D\315\233<D\327\343<\177\352t\274\273\027\'<\026\345\217\273x\014\366<a\357%\274Z\'\207\274\376\235)==\321F\273\276\r!\275=\307\026<\353\223\210\273\3624x;\236\007\024\275\322\030W=c\211\003\2750\376\212<Ls\035\274y\2526\275\365r\004=>g$\275\276/\211\271\271\220\316\274H\324@\275\314\030\232<8\346\315\274h\347G=\366\r\253:z\326\"\275cX\354\274\311\204\237<\377\244V\275G\2464=\033\270\355\273\220\275\324\274\361\316Z\275z<H<\325\022\227\274\246]}\274\363Y\025\275=\254\372\273\320\361M\275\337\213\300;\020\3641=\243\325\004\272\346\025G\274\272\312\035\275[\227\026\275\347L\347\274X3E\275\313DR\275}A\271<\314j\222<\341\207\005=w\354\024\273\221\000N\275\031K\205<\003nW<u \030\275M\2650<\267`\367\274\263@\377<*\236\"<D\222=\275\277W\t\275\001\372,\274w\212p<E\352\t\274\300\336\357\274\337\325\303\274/\241\362<\203\177\005\2754\002%\275_\n\033\274\204\332\325<\311>\362<\217\351D<\227pC=#\034/\275\374\351\325<y\227\343<G\366\361\274\317+X9\002\354\004<\\\202\274\274\022 B=:T,=\026P\006<\252\366\214<\250`:\275\205\336\007\275\025\333\210\274\362S>\275 sr\273s\240\226<D\3426=g2\275\274\333\022\223<\217\252\263\274WAP\275HI\271\274\\\021\252<1ZX\275\334\332Z;$m\026<\312>\260<:\314Z=\344J\006\275\034\032\213<c\342\250<\257tx\273\367\023\333;\334!\030\275d\265\205;\033tH\274\003yG\275\235\3545<(\"T\275\020\"}\273\214\232\312\273\256N\345<S\355?=\231\202B\273MK\355<\311\201D<9r0\275\016\302\205<\333\223\014=\177\355\372\274\235\035\003\275\322i\201<jv\035=\367\2545\275i\330G\275\342!\226<\366\360]\275t)\374\274\177\177\t<\223s\217\274\316\020\363\2743H\020\275\013\371b<\361\350\362<7*\325\274\315\317\274\274\212\371\'\275\364\241\304\274>o\263\274)\213\222\274\311\200$\274k\020\373<_\010\330\274\3156\256;\356\375g\274\262\2472\274\244\000\263\273C\347L\275m\244n:w\001\362<v\023\355\274\201\253\346\274\276\246\243\274\262HF=3\276<\274%>\037\275\006\350\020=\300\316\000\275\254K\374;\340\367\244\273\201\244==\017a\376<\024\253\t<5y\"\275i@\037=\203;\334\274\226\026\245\274\302\017\357<\252\360\036=\211\336\376\273-\257\350\274\343\224\360\274\017/\221\274*\304\n<\326\247\346<\350\' =\250\271\370<\263\202?=u\334\274\274\300X\306\274}.\331:!\266\321\273\263A\344\274\0108\003\275\301m\204\274\323P\262<\237\370\240<2>\037\275\001\247\320\274\037\214\335;\004e\235\274\020\223\\\275\274Y\r\275\2703\215<\000L;<\360\344\213;\326\312O=\237\232==\0010\257<\306\002\025\275C !=\\v;=`\213\t\272\273\305W<h\334\t=\255\035,=\303\244\004\275\021\214\222<Z\354\003\275>~.\275\020\231\005\275\222\031\275\274\261\210*\275\007\026\352\274\350\221\267\274\002^E\274\224\177\037=\356e\361<@e\313<\014\005K=\302k\310\273\326\345;\274\033\266\r\275#I\306<ap\351<e\030D\274R\017\242\274\234\215\006=\360l\247\274\315WZ=\311\247_<\264m4=H\206\347:3<A=\323\303U\275\343jR\275f#\266<!/T=H\0248\273\307_D\275\305\0233\275F\371\021\2740\243(\275r\250S<`cU\275S\304\365;\231\350\220\2748\370\357\273\024w\010\275\334\374m<4\266!\274\240\254U\275!\263\237\273\215\200\030=-C\350;\341\335\236<\333\004\233\274w\353\312:u\274==3v\\=\251\210,<\310o\001=\241\261\r\275\217\014\344;\317U\244<D\031\010;\313\307a\274\365=X\275\363NV=\232\317;\275\031\tZ;#\231);\255^:<k\365\326<R\r\037=}]\\=Q\217\231\274\264\250\003;\337k\036\275\267/\006\2751\243\364\272\247\201Z\275\355\263+\275\275\t8=\266\373\004=v\311\225\274\234\373\n=\330{\220\273(\350)<g\377\221\274\236%\240\274\210\337\003=a\2164\274\306%6=\361\371\t\275;\321\211<\365\357\325\274]_\226\274\027\336\037\275Rh;\275`\347+=\017\251\240<1\256\234\274\037Z\246<\261& =!\330\341<\361\372\316<\273)\265\274\300M\021=i\366~\274\240+]\275\352\023\346<\016E\320;\024$\301<m\250q\274)$\024=\351\231\264;\203\3631\275\321\005\342:\305\316\211\270\027\017\2449;\0166=DMi<\231`\036={+d\274O\2230\275\206C\025;l\363T<\317p8<\233h\005=\260I\006\273\261I\310\274\205u;\275}?\025\275O\001L\275s\343\013<F\255\013\275cc\241\274\221\237\214\274\306\204k<\304\253><W\364\256\273_Tt\274w\307+\273\002r\002=\323\257\314\274\270\274\034\275\213w\014\274K0\005\275Z\016\217\274,\376\201<f\023\020=\213N+<N\373$\275Z\027\350<\321\220\033\275\244\302\306\273&KO\275\343T+;\257\253Y\275\255\251\214<gD\333:[\026B\275\013\210X=\025\0057\275\226\351Z=)\314\3539\016T\241\274\035\300\225<\336\371\323\2743vP=;\372\207<\232\361Q<\2163e:\2668\036\274\362\340\227<9}\373<G<c\274\253\020:=\234u\367\274a\217\037\274\270\nU\274\014u\010=\361\230\020=\321\224s;\255[e<\363\376K\275h\304\030\275\215\227\213<\275o\340<\341\n\022\275\334&>\275X#\265\274N\346\366\274\361z@=\327uD\275\023L\357<\'\310\"=\337\001\327\274\003cs\272N\017\022;\217===\001--=\307\027&=Y\204F\274\021\3144=k\335\214<\352\230\n\272|\2703\275\221qE\274\335\232\007=\327\\G=\216\201\354\274}<\342\274\335\036\033=\252\001&;\\\376w<\307\214)\275\242uJ\275\\\253\271\274\336c\255<<TN<\363&=={\034\036=*F\000<\201\300^\274\277$0=\025\033\222\274\3075\006=\315k\016\275\222 \203<\304\016I\275\320a\006<r\321\"=\246\352\370;\361\355X=Mj/<\377UA=t\307\322\274\007\nN\275\362&\277<GT\225\273\320;\\=g\260\205\272\236\344-\2750z\353;\351\370\014\275gv/\274\253#\272\274\226\346`<\350\335M=\203z\031\275[\353\311\273\353nZ=\002F\261;\177\333\362\274\347\264#=g\017\347\274\341\276@=\204\004\n=\035\256\030=B\221)\275\3761\353\274Qw\242;12\036=\367#\340<y&\024\274\021\277O\275A\342/=\325\355\013\2747\234M=\331\263\354:\013\365E<\017\2213=E\233(=xQx<]\2020=\206\251n:\372\031t<NO\213\274^\205\251<\204rT\275\372)\366;\224\272/\275\354\373D= \305%\275j]J=\307\365\031\274\226r\177\272\r\254\315<\315\253\316\274f\315^=\034zC=m^o:\325\336\334\274\022\373\025=\345\326U\274\336\rB\275\326\267\217<o\2364=\363\355\024\275\300\337\350\271\nN\003=\346&/=y\002\273<aa\324\273\2645\004\275\372\264Y\2752\304\261<\274.1\274\223*]=\213\313\206\274@\205\375<\341\310\334\273\221\333\267\274\336\216[\275X\312\"=K\206\032;\3751\022=\321K\226<\034\341J=S\241U\275z\340\002<=w+=\234G\314\274l\354#=V\021L=r*4\275\236Y\336<(\205K\275J\023W\275Z\335B=\204\310H=t\226\\<a\327>=\2724\253<\357%R\274%\017\241\274\272\021\262\273\006U\242<^\351[<\031\016\013\275q@><\357\315\006\275\317\177\'\275\363\256\031;\272]h\273a\353\031\274r+^\275\236\275\230;+\321\010\275\257\245w\2746\241\036=\224$\242<\020,\030\275\251\375\016=\21510=\023K%\275\254\376\254;\304E`\274:wQ=\241\035_\274W\0006=[\206W<\360\2370<+\027H\2732C\031\275{5_=\310S\035=\217\231\003<\345O\335<\210\013\251;d\301\005\272\336\035\301\273\241j\304<\326\260\237;]\3630=??]=3\377O=\324\020\016\275V\324\217;\'aV\275\275\345P=!yY=\016d\010=\230\253\003=\2561^\2755\3316<\242\305?:\000x\002\275O\275T\273j\034*;\355\0061=zA1=\335\177\345\274[/(=\261\t\236<\306\226!\275\010\316\034<\"\345\006:\207\225\207<20b\272\203T\000=\016\014V=\325\325\032<0\253\250<w9\261\274\216\207\025\275\t4P=\2501o<Vm\021\2752\300\006\275\313\030>=o\033\331\274\341\305\370<\353\236\005=\316b9=\"\000\347<\014\024\260\274\365\023\000\275\252Z-\275\315 6\275\227\375F\275\205\2325\275.\320*=\363*\352\274\324\350\330:\371\033\376\272t\250D=\227\014\010=\3225\321\274K4O\275dYV:\0174\215\273\317\202\037\275\333\203\234\274\256\206R\275\363\314\032\275\224\371b<\226\025\033\274K\"\273<wN\344:\200`!\273th\020=cM<\274\364a\255\274\343\265\n=7\255\010=&\002\375<*\262(=\177\037\377\272q\337\027\274\300~\273\273\324S\277\274\215M\333<\202\220\275\274iw,;\375\206\006\275d[X\274\021d\027\275\207G\206<\362\306\035\275\007\202 \275\251\033\003\275J_P\275m\334\017\275;\021\017\275\013\003\000=G\254\016\275\262\316\344\274\312L\003\275\353uM=`\374\002\275\264\367T\275\342\312\\\275\013\360\357;z#\353<\303\371\216<,\305T\275\352\025-=\\b\"\275\242A\354\274\250~*\275F\013H\275\234H\021\275\212\336\271\274\"\211C\275\2113\000\275\032\242===&\255;\272\360\372\274\240F\n\275|\363\373;`\000;\275\345\266\244\274)\263\222<\353D;=\'\t\207\273\025\275\035=t!\271\274\313\366\325\274\001\017n:\02197=\031\357@=\247I!\2748\375\034=\337\3320\274q_\327\274\344\212\000=\231%?\275\212\337\025\274l\314\031=\301\220\344;#]S\275\360\337\255\274k$\205<\251S*<\016\032\245\274\207x\375;h^\274\273Q\314(\274\\<\347\274FQ$<\017:]\275\343\207\001\275]\214J=\340\236;\275}\210\214\274w@A\275f\216\036=\261\326\316<\301\332T=vB\375\274?WZ=\t^;=8\002S=L\2208=L\366I\273.\304$<\324\220g<\036\250\310<\331\365\275\274A\232\330\274\2752\022\275,?\212;\252\337\242;\237\000D\2758Qp\274\034\244\013=\276S`\274\177\301^\275v\372K=n\2504=Y\354 <\210\303[\273\334\027.\2753\271U\275)f\222<\222\211_\275\025\222L\275i\025P=/n\371\273\277L\326\2735\331\000\275\342/\234<\347\204\361\273\247\346\3159\345\032!\275\032\241\365;\310\270E;\237\332\026\2747f\013=\330\027\372<\302k3==\222%<s\232P=J#4\275J\227\304\274E\344\261\274\264I;\275\255\375\035=\033\310W=T\361)\275p\224\006=\207y\353;S\010D\275\234\263\t=\025\317\227;\"v4=\205>+\275d\254\036\275\254\027\245\274\351\324\327<\3655j\274\256c\016=\220\003Y\275\215\335\360<\326\021\333<\310\270\335\273\017O\010\275\030\237\227\274?\221\211\2741\330\'=\\r2\275\331&\347<\'\342J\275,\017\034=\005\236\313<EeB=*\271\'\275\270\271\013\275\375\224\000=J\022?\275\362\307\007=\260\362C\275\'t\353\274\005\374(\275k\375\237\272u\223\276\27314L=\223\360\306;\024K\354\273n\031\\\274\331\241Y=d\247\270; qa<\254\332i<5>:\275\360\220!\275\366TR=B\023\232\274:-2<\214S\031\275\245\2759\275N\253X\274\253KN\274P\335\014=H\303\374<\215\247L\275o7\'=c_\365<\tV$\274\374\237\300\274Zu\315<\314`3\275\344k7< ]\023=\3179Z\274\213\335\010\275n\t\362\274\004\017L=\332\305(\273\230\202\364\274ZCL\275\023\343,=wRY=\"\360\252<O\2744=\364I\276;U\030\274\272\235^\250<\314\0168=\217\370\204\274Wx]=\211\307@\275\247\020\033\275El#\273\306k\005\275E\223\376\274\317\321%=\222DN=\025-\032=\235^\006=v\377\031\274?6\002\275\266h\252<\253\217+\274\3454;\275\024\344^=\020BY\275\016\320\374\272~\234\206<|\311}< gN\275+\034E\275\242\257\370<\205\240\323\274u\275Z=\020\000\244\274\352\260\000=CY\227;\355V\301<5<\255<n \335\273\376\0248\275\201\347J=\362\3738=\216\n\257</\250/=\200\240+\274\035\316\024=\203\227\321\274t\316X=\213\377:=)\316\203<\2029\\\275\242\004l\274\342\2159=\265h=\274\3537,=\330\016:\274..\003\275\351\333\375<dpq<N\312S\275\250-3\275\305VV=\035Y\357;\253\261==D\325G\2754\251R\275\367+\226\274\263\2656=W\225.\275\361P>;\326\334\310\272@\017\\=\351\024\256\274\252\367!=Z\276\350<H\330\021<\252W\355;\212\206\372<\362\202\361<WS\301\274\221\324\030=J\201\211\274\346\246\334:e\"?=Kx1=\031\004\364<\"W\264\274\261\230]\273\312d`<\\d\357<\323P4\275P\225V\275\001\204\205<\230\307\006=\007\027_\275%\251\303\274\242\256\227\274\302u9\275\'\366\276<C\0251\275\357];\275\373\017X\275\361C\216\274\00164=\356&<=t\035O\275f\312=\275I\251 \275N\321M=nU3=f2\322\274\261:\037=\003c\2368\207j\376<D\020\035\272t\371G\274=\255?\275\366\304?=2\212\t=I\362\362\274\310\273!\275\221\000\013\275%\313X\274*\256I\275\026\307\272<\361\034\365<h\211\362\273\220z\r\2741AI=\347\377\021=X\305\224<\356\212K\275Ds\010<\261\2450=\010\250l;\250\026.;\247\t\266;<\366%\274\037f\276;\315\306H=\245 \010\274\n\2704=\220\335J=\207\010_=\335%\362\2749`+\275\233\021\203\274N;\037\275\204\023\010\275\365\346y\274B\201\222\274\343gG\275\035H\372;\244\333N=\0231<=\216f/=\237\316I\275\372R\264\274\207N-=8\307<\275&L\306<`\014\033=R\300\004=\230\026k\272\235\230\221\272h\352\n<-}\037=\327\216U\275\225\314\354\273\203\n\022;\035\304\241\274[\224?\275\370Q_\274\267\220\001=AEJ=\370\251\222:v5U\275\243\212\377<\027\336\304\274\235\315>\275u\022y\274\235\305\376<@M\221\274\374\214\301<\305\333o9!DK\275:e\030<\344}.\275G\340r<\232\303\360;\037\200\365\274\033\300\'=\224oA\275\376\374^=I|)=\255v;=\371<O=L\320\375\274\356a\005\275\020\\\t=%H<=g\267}<xn\026\274\302\211\367\270\215\307\027\275$!)\275\370\t\004;\242\267+\275\037(\006=\310\327\216\2740\356\332<\035!;=M\rG\275\336\357]\275\200\336S=3\372\"\2751\3543<W\002\033=C:L\274\n%\376\274\'L\025\275Di\t=S\362\002<\021x\224<L\200\020\275 G;\275?\007\244<\234\377,\274\3618;\275r\253e\274\273\177\000\273\224zj:\036\013\344:\237\032\236\274u\330\274</\267\020<\326HR=\307\231H<\202\263@\274\234#\024\275\374\226\004=B\036\216<p\303\331;\334x\014\275B*\250<\263OE<\222\014O=\362Iv<\255\020\263\273\261\221c\274\262\243]\273I\354]\275\240\211@\274K\247F\274A\316\316\274\344s3=\003G\266\274x\300&=/\204@\275\342\374\026=`\200\266\274\261\002$\274\353U\300<\374x\021<\254\331@<\212\211]\274Y\002^\275\377\256\334<\003\"D<\330\226 \275\370\337=<W\323;<\366\333?\2744\257\200<-*R<\326\2504\275\235C\303\27444\026:n\343\'<\251E&\275]\237A=\325+\347<\375\363b\274\326\217\245;\025\362%\275\200y\014=\274\215\336;\242\363\204\274\300\327\215;\246l\013=\254\241A=\312q\263<)0\035=\245!\327\274\371\365\230\274\335\240\000=\370\267\025;\t\353\374<\037\307*=\307\216\225<\254\206\351\274\227o#=\376\202\013\275C\321\363\274\264\\A=RtK\274\303\350^\275\204V\262;\305\350\016<\316\371\356<V\252V=K\370\371\274@\314\272;Y\226I\275r\006\342\274\264\323\236\274$V\341<0lG<\227\315&\275\355\327\032\275)\001\263<\315\256/=\232\346\315\274\307{\016=\"\242V\274\0137\232\274\327\230\n\275\262\322\254<\023\2610<\006\215-\275\032k \274\3245Q=z\337\"=;\017\037\275\301\274\001\275\261\3573\275\260\356\267:4\221M\274a%\025\275-\024\017\275\257\017\035=8\251\376\274\352\342\377<\"^\204<\014\371@=\324]\260\274H\007O\274\2401\r=,\006\\=\345t]\275^\302\'\275\204.p<\331\265.\275\347\245\022\273\356\316\204<\304\003x<\344\325-\274 \0326\275t:\035=\234\n\226<\\\214\010=\244\247\345<\320\213\3658\217sx<N\335@=z\010\030\275s^\\\275\037\246l<t\376I\275H>\353\274u(\010\275\220)3;\245\235\376<m7>\275$A\251\274\274\215\344<\336\3235\274\234O\003\275\250\354\310<\005Y\\\275\305%\273<=h\020\275\'s=\274\003\\\366\274\224\"S<\333\347\035=\230\037\374\273\303\377N\275>\306\t=\3510>\275b\223%=/>$\275\201\200$\275\355\342\271:b@\005=\257\250O\275\255\324!<\362U <\331\031A\275\rB\266<\203\367\204\274\326\262\252<\277t\034\275n~\027\274\025\331\002=\267\322O\275\014\'\377<o\370H<\344h\013={\322\320\273\256\370a\274\241\327>\274\333\"\354\274\263s\005=\235\177B=\205: =j\232\032\275h\254\037=\235\t[\275D}@\274Gf*=\0045\014=\232x\235\273\232o-\275\016\335S=\230g!\275\361FH\275\235D0\275\227jY\275\244<]=\341\377\221<YTn\273\357\232\217:\033=Q\275\266\235R\275\036\"\242< \271!\275\213\364\371\274\312\033\017:\264\016V\272h\353\n=jL\006=-\031^\275l\203^=\374\035\032<T(\210<\330\347\256\274\3527G\275\247\327\343\273\211\317\242\274`\3557=}\2176=\210\222Z=v\237\\\274#\226\002=\336#%\275\300-\356<\261K`\274F\366\027=\262\020\276\274\356\255/\275\241\311Y=\036\234D=|\274\202<\321\320\327<\357G\010\275\352\306\241\274\013\223==Z\314\234\274\214Y\305;\241\232~\274\205\\\014\275Ry\022\274\006\300\205\273f~?\275\307\355\333<X\347\210\274\271H#=Uc\341\273BH\362\274\001\343);\253\0013<\366\3200=H\350:=2\rd<\376\022\256;)F\025\275\317R\t\2757\206u<.\330\004=V\003m:\016M\005=\200\240\204\274JUy;\2543.\275\310\224v<\300k\021=_@5;\231\371\003<D\270R=pf\024\273:\014\262<\241\0310\275\344@\251\274P[\201\274\347\344\214\274\326\307\264< v\217\273\215\014\364\274~=>=I\336\267\274\350\234?\275\237\327\270<\215\337\032\275\323\345\313\271 \266\202:\037\001\334<;2\225\274K\002@=\0228\031=\201\2678\275\372zf<l\000\267<\342\355\007:(G\016=<q\230<\316I\201\274\331\036\205\274;O:\275X\357H=>\331\347\273\004\037.\274#\001G=\311\261\000=\223\001\211<$\250E\275=\340\304;\333%_\275\\\272\031=\244\312\351\274\272\336U:\271>\206<\336;6\275\350\007\020\275\361\363-\274\3650A<Kx\300\274\367\324U\275\016\010\311\273{4\276\274h\264\204<\226\0075=z\273=\275{Y\326\273\312?\243\273\3652\2019\371\347\207<\006\2531\275\240\313\'\275\215\357W=\2749{\274\202\3528;p\032z;\022j\255<n\356<=d\373\230<Jr\320<i E\274\357\256\330<_\200\351;\022\023\036\2752\330\025=\342\021\020=\327\236]\275Iu$\275a<\035=\033q^\274\212\342\221\273\304~\001=\307\215,=\320W)=\222\271Q\275\373\2116=\357Ed\274.\244\251\274\304\227\"=\370\353\031=Z\211\347<z\306W\275\217\360\247<5_:<\322\235\001=6\022B\275d\257\232\273\314\243\023=\203\266s<\032\344<;\323\337X=\363\004E=\214\306Y\275T\200I<943=W\364\001\275\347\031\365\274/\246\r=\272\253\020\274\r\226!\275\272\022\001=l\275>\275t/\270<\347]<\275\\\273\301<\214\3004\275\237\303]=\345\272\"\274qHZ\2759\002\023\275\304\2244\275~J\005=\231\r\272<\244\351\324\272yZ2\275\345>\245<\322\020\005\275H\226\\<)y\356<sK\233\273\340\364[<\250\232\022=\370n\214;\207D\r\275\217\224Y=\364\004T\275;\334\302\274\305\007\235<E\355\270\274\230~K\2742q\221\273\337j\031\275\247\366\234<q\007>\275w\005h\274\340\326\002=\336\275\211\274h\3659\2750\261]\275\0273\206<\256\253[<\276\023\360<\302\007\316\273\367\205\305<\324\t}<q.\007\275\212\014X=B\nQ=\361\005_<\002\333.=\352\031\246\272\020\230\256<7\242\326\274f\023\324;7 i\274\010\370\317;\271&5\275\273\306\016=\304\037\221;\rl\300\274\010\\[=\260\345&=U\205\221\274\246\363H\275\375\364+\275\014\371l\2743\3572=\n\342\267\274}\276d\274\306\356\"\275\325\234\226<\374y9;\372\253N;\267\221\202\274\364\207=;b!\241\274!\201]=\250\260\025\274F\223J<UI!<\234\353-\275k-\323<C\032=\275QP\006\275?\237D\275\335=X\275\t\004\030\275\375\361\272<\010\254\200<\007\201\362<\246\305B=\215LA\274\335\370\244\273\341/A=\267\374-\275\271J\0039\367\225\345<?\207]=\367\270\304\274\261\002)\275\005\037\022\275t\273#\274\244\260\220\274\361\3507\274\354\363\374\274\030\235\251\274\n8\273;\201\242\364<1\022T=\337\326\340<\010\350Q\275\373\3479=\341\365(=\030tG\2756\204#=lcb\272\030\345\353\273\362\'\335<G\233A\274<$P=%\003\202\273\243O\\<.\032\210\274\355\213\032\275\275\223d\274\332\223E\275\277\260\\\275\021\206 <E\205\001=\3314\203\273k\222\261<\324\364\240\273\036\205B=F\020\032\274pP9\275\351\222\005\273\033BV=\t\374\335\273\332d$=$H\327\274\224^9;^\'B=\\\234\276<v\024\031<\274\206\255\274\"\004\253<|B\000\273\242#\026\273$W\016;QA\3669\333\200\030=\354\001\355\274{\221\365\273\272\246#\275\r\247\'\274y\200\277\271\260\236\210\274\t2\303\274T\001\232\274\000(\017\275\254,3\275\267\303[=\356y;\275\235\203\231\274T*\311\274\027\037\363<=\3419=\016\000\005\275a\207l<M\245%=l\023\t=\'\345\351<\r\'Z\275\217\257?=\234\242m\274\324JG\274c\020A\275\267g\t=\351Bu\274:\235\r\274e^j\274\212\302\264\274)\220\024\275EN\001<\3352w<-uJ;\226\361\302\2720\206\016\274\314w\212<O.\037=\354\274\007\274\217T\213<\036Qj\272s\302\010\275>o7\275Dl5\275\237\240\341\2738\001Y;\2266S=\354\247>\275\243\323\t\274U\370*\275\370\321\222\274\256Z&<$9\030=t2\221\274\206\035\363;B\315\014=\025\225=\275\230\313R=\375\351U;\262\210\210\274]\250@=\376\362\000;\354)\277;\237;\034=\0264G<6>\363\274\014\002\240<C\335\353\274\361aB\275[\300\274\271j#\353<\355\2204\274\244\213\224<\267\010\242<\265\010\030\274\241\350\273\273-\035[=\360Y?\275c6*=2\225\343;W\352\331\274\210\036\346<9\014\216\274\"\307>;e\373 :\205}\037\275\313\271\367:\341<\203<\267\007\350\273)f\332\274\351\273N<7y==<A\030=n\201\325<\346\200\225<\344>/;&\242\262\274S\013 \275-\026W=(\350\344;_\340\223<\215\344\333<pBz<u\rK\275p@P\275\253\t\217<\213y\371;\272$;\272I\241{<\264_=\275LX;\274\342\242\362<\026\366\312;yoP\275Xa\231\274j\375\243;\240x\353\274\245<G=0lr<\22648=\033\367#\274\271\'Y\275 \245J\273I\177R=\344\315==L\232\027\275\243EO=\243\256\253<<7\354\274\016 \206<\202\"+\275p\242W=E\2459\275\271\304,=f\353\216\274~\225?\275\232iW=\037\264\364;\260sY=\031g\314<93\013=.%6=\356J\251:\303\227E=\331\021!=\271\3767\275\305g8\275)~3\275o\014/<.\206\264<y\241;\275\317P\032=\303}\316\274\372\332\031=JW&=\323r\030=\"\240\327<9\2437=\023\034\310<\227\016\001=gk_=\267\037\023\274\003\227\220<T<\326\2743\2778\275a0;\273r\013\304<\274;\034=\264\315\243\274s\373\275\274<\346U\275y@\000\274\027\302F\275\271q\345<|4\367;\266\025\006\275\032\204\311\274:\220l<;\'\r=\327\344&\275}\262\242<xo\257<\374[B=\207r\350\274\236\337\373<\326)\306\274\360\007\204\274\327\336I\275\177\301\271<m\0146=3\025,\274\333\000\335\274?\327M\272\274\214\203<\350\211#=\201Q\237\274\253\246q\273\375;L\275\304\"\336;]9u\273F*\\\2751\350E\273\250\311\003\275Z\205P<q\313J=\270\204.=\035$\214\273\324\0074\275E\325\034=\253\241+\275\241 \270\274Q\302R\274\333]\232\274\224PB\274-A\"\275\317TO=i\021\n:Pn\255<X\252\274;\033\345\377\274z\326a\272\301wi:H\356I\275\213\263\305<!\t_\274d\253\r\273B(!\275Y\034\031\275%\rA<A\257\342\274#m\306<W\342><\025\3460=7f5\275\371\221\212\274\354\3108\275\322\335\352;\324\016?<\033\253h\274\364\336\242<L\221\n\275pu\260\274\367\224\003\275\213\247\037\275\177\007\364\274\370\321(<\014\\:\275\331\314N;[PI\275\340\353\032\275\342\306\216<\305\n\270;\027e\247\274w\030\333;R\021K\275s\246K\275\016\220>=Z\r\000=\346\203\t<\301\2516\275z\277 =\320\r\300<c@\354<g\265*\275\204\321\030\273\3113\214<\240\035\'=\375;Q\275 R\006=\236j<=\035\342A=\334_\000\275\300\nW=\026\273\313<DhC=gG\215<G\324\t<#\313\177\274\364r\241;\372*\251\274\366\007\025<\2418Q\275bQ\016=\306\007\353<\364\370 =@\014\255\274\235\013\256;D\366\243<\"$\214<\347\316(=b\233\304\273\255*\322\274rE\262<\033\255\331<\205\2577\275\300\333C\275\370\006X=b\335_\273D;p<\371\023H\275\267Q\n\275\024-\025<\005K<\274Hyd<\335\311~<\024\330\'\274\207f-\275\275\211\206<?\023\375\274\232h\033=\225\342\202\274\360\201?\274\326(O\275\024\3532=\334M.=U\0002\274\322j+=\216\267\031=\'%\374;\205\022\225<\262v\275:V\261\025\273\002U*=M~\017\275\353kI\2754\206(\274\340X\323<\225,9\275\230\300C<\344\002^\275r\256@\274e\331\223\274\227?\304\272\320r\\<Q\357\032\275\256=\223<\230(\262\274}~\027\275l\251\003=\010K\355<5\205\277\274w\334I<\322\231\366\274\200\313 \275\323B\270\274k\014-\275\334\274\001\275\247\274\210\274\016\215\036\275\211\330R=\346\225\272<N\030\037\275\316)\032=EdC\275\0029\374<\231\014\205\274\372\220\255<&\025\010\274g\335\001\275>\022\372;\034\320\200\274\274*\002=\r\356\024\275\005\013\345<!mI\275\236\250\201\273\250d3=:\360\356<N\322\244<\206\320*\274\345\221\273\273vN4\274\337\027\":\343jN\274\302\032N=\343\027A\2746jH=^\354\007\275\307\273\n\275\n\367\356<l\250\032\275\214\205\275\274a/\241\274\t>\274;b__\275g2\374;\375e\223\274\213^{<\241B\252:\360k\274;\324G\242\273\227\304\004\275\254\255f;\245\366\332\274\353v\363\274\252\237h\274Y\022I\275~Xb9\217\231\272\274\013Q\331<\365#\235<\177E\334\274\356h\333<\022\213J\275\335\030\304\274\362N\340\273\305\327\367<\336o\216<\377\005)=\255\247P:b7L\273\222\342;=,\216x\274C\376\331\2738\016\013\275-w\"=+*\005=\274\3539\273\303]\313<\340\263?\275\006\250\304\274\220\000a\2740\203B\275\233\335\025=z&\311<\203m\332\274\346%Z=\356\232\014=hZi<%W\016\275V`\320<\312\251\256\274\374\336c<<\021\233\274\274\355\312<\316b\340\274\307oE:\202\003A=\274=\336\274ui\225;\024\365\357\274\254\254B<\r\350\363<w \351;a\205\244;\033\377b<A\221<\275H\215\315<\225N\\<[\024\213<\272\026\273\274\010\177|;\371\336Q<\303\215\234\274\220n\004\275\n\023?=gN\026=\231\030\217<\036U\n\275\010\227\236\274A\200\215\274\326[\244<$C\\\275\263\313\376\274^\322\006=\013\252\354<\022\242M\275\262\236\363<b\324\334<\350\225!\275\267bQ\275\307\021\036=\010\356\n\275\n\277\016=\376\313\003=\251k\361<\312\230\023\274;v\224<4\3069=%\256\r\275\037fA\275\272$\233:\271*P\273Hz2\274\334G7\275\356@%\2742>\000=j^N=\237/>=\244\376(\275\220V&\275A,\241<\212QU\275\212DL\275\335\0059=J\177.\274\366\325P\2757A\307\274\234f \274\205\213\361\274^\026\256\274.>\311\274v\203\311<u\230\365<,:7=W\351G=@\343\006\275\2129,=\032\266@\2754\337I<\257Nl<\251\313\034\275\364]E\275\270\227\360;i\263B=\316\371-\275\366u>=\243i\336;\354\013\254\274z\354\376\274_\373L=;\270\022<\374\254V\275h@*\275\177\301==\232\366\316\274\326\3037\275X\364\223<\214\n\327\274X\323\307\274<\007c<\2026\352\274\210\010\344\272c\375\260<=\375[=\035\322\242<q?~<\221e\216;W\327\334\272\216nI\275\233~\014\275\021\023\331\2742k\206\273Z\356|\272\225\205\250<\263\321\020=\210\336\007\274\031\304:\275\351a<=\253\021@=\1776\030<\001\001\252\273\315\372\277\274\251\365\326:I\232\324\274\032Q\240\274\000L!=n\027\006=\227\266\255\274\242\250\032=\224\244\333\274=\310\035<\375\362\336<E\374W\275`\025\276<ma)\275\346\302U\274x\256\237\273JE)=\360ZB=\014-t\274X\027S=a\303\024\275\020\006\033\275Dh6\275\007\253\256<\2378&\274ZP\022=\360\306\337<\257M}<\322\204\267<\177\320:=\nj=\275\216k\364\274N?o;\230\267\346\274\310\364\357\274\277\233==\364\006M=\177\247,=\303a\201<\340\306<=\304Bg<\203H\217<\204m\300\273\247 \026\275\323\\h<\266\020:=\016Q\006=\222\'=\275\272\212\035\2747m]\275\"\211]\275\203\315\310\274\022]8\275\326jz\274]\357\256<\315\254 =\327\025\334<crs<ab0;\266\234\036\275\272\200Q\275\t\010\222\274w?\000\275\\\357\017\275\225\017\020\275\251t<\2756i(\275[\037Y\275\236b5=<&\224\274HP\006\275U:?=+\354\202\274\315\021_\274\n\377P<`:\242\273\203\017\270<\342\004&=\016\312\307<J0\271;\260\3357=q\230\013=By\352<fX>=\357\0013=JWO\274\310\260\005=\033P\007\275\356r-\2751e\214\274\207}\"\272\223\021\267<\262\021[\272\205\245\231;\313\324\362<\005\374\'\274l\273\271\273\253\0219\275:\n:\274p}_\275\022\030\313\273H\271D\275\323w\034=G7\000\274\020\225\255;\240J\225\274&\330.=\246\026@\275\340\233\256:\026\204[\274\326`\307<\327\275x<\217\371\235<5\355\357\274H!\203\274\347\013&\275\276\323\021\272\234o\\=\204\211\353\274\370V[=\306\256\263<-\233T=~\262\305<^\310\272<\353#O\275\225`\020\274{\220\262<\024\336/=\310X\323\274\235x<<\301i$\275\321\334\326<UK\261:\003=\347\273\346\031\033=\3067>=i\244G\275\"cM=h\3704\275B\316\374<\265\3067=l\305E=\332b\317\274\341\230\205<\361\240\370\274\006p\203\273\000\360\024\275\"\377\376\274#\212\314\274\372\023\304\274\003\344I\275\303\250+\275~\303+=\362w\252\274Aw$=V\376\246\273\207\n\377<k1\371<\2720d<\300\032\370\274\222t\214<\276vC\275\201f!=\321\002G\275\3076!<ok\n\274\367\016\371\273\200\013\243<s\254B\275\366:\017\275Hf\354\274\262}\353<\332R/=S\262\261\272\210r5=7)\313<\357\305\244<\'\203E\275\0332>=4\305\'=7\024T=\232S?\275\213B\221;\005\243\374<p\201\205<\356\200<=\017\177V=\310;\007=V\327g<{\252S=\030\367\341\273\235\225\343<\312$\335<B\3776=\272\354\326<Sn\312\274\235(\225\273\310\377T\2740\024\273<)f8\275\351&\353<\305f\255\274\201[\333\274\264\273^\275\304.\002\2754IR=\363\356\263\274\362A\006\275\351\215(=\234\347\274<\275a\036=\255\177\362\274Z[3=\0136&\275\254\r)=+\260\214\274`\342]<\346K\202<,\270H=\030\031E=\235\274\247\273K\266\261<7\033\230<\254Y\345\274\2257\014\275X\225\275\274?o\375<xa*\275m\037[\275\263\002\034<%\177\373\272[\375\313\274\264g\204\274\321\324(\275nG?\275\020\007\024<\016\317\357<\033\026\037\273\327\232\221\274\013iC<&)\227<\021\230\r\274xI\007=(;\310;\350\233\312\274\262\227\014<;o$\275\325e%\274h\346R=\330\214@\274(w\033=\347\013\202<\255\025<\275\241\364\262;\2712\241<A\210P\275\r\371\361\274\r\336\036=\004\342\020\2750Y\025\275\036\004\355\274\035.\347\273_\270\232<\372o\037=d\210Z=\213\003\366\274\222e\233<\316\0373=\312\376\230\274_\317\305\274\022m\265\274&\0256=R\317+<\317XR<jV\006</$2\275\355\006\272<\201r\267;\337\325/=H\363\352\272\370 \225;\031\010]\275\034\276\316\274\236q\000=\005\342\035;\007[\344<\201T\277\273\245\2559\275\006\270\261<aY\004;\241\370\2608u48\275\302H\316\274\013\246\206\267\210\250\243<u\n8=\177\315G=\017)[\275\004\2122\274 \313\024=\272U\201\274WP[\275\016?.\275\321\360Q\275\220\371\325\274m;\021\275\227\034\256\274`\256\301<\362e\000\275\224]u\274JO\336<\230;\010=.\326\266\274\020#&\2753\232\276;\033F\'<\342|\235\274\304\216 =;\355\356<\203\"\026=\253\341A\275ex$= J[\275z\311O=XZ\371<\2559\252\2744\350\232\274$\322\302\273\221\327\030=\324qH\275\225\234\276<\201{[<\"$M\275:\370\021=\037\342\303\274\333\205\273<\305R]\273\274\021U\275\331\007\375<?\347\330\274\272\246P\275W\227\007\2755;\264\274]\273\036=\235ul<_v\266<-~\n<O\351/\274\002\r\021=e;0\274V\017\314<`\371\"\275I\235/=\234\342\320\274u\0232=|p\367\273\310\236e:\240\022\335\274\367{\214\274S\032\026\275#\033\357<\352^\027\275[\360+\275\3407\322\274\225n\353<C1\007\275:\243\337\273\241\254\035=\220\211\005\273\233\365\313\274\025\r?=\255\312W\275\007\215\006=\000\336\016<\274B\357;.K/<T\037\255<r\277?\275\034h\342<\315\304]=\007\341\362\274B\361\020\275Kq\274\274D<<;E\\R\275\214S\367\273\342BP\274\317\223\317<H9T\275e\023\331<g/\013\275s.\224<h\177\004=\035\373\347<\264\000\220\274\336\207\324\274M\333\266\274\007\263\251<\2766\301<\346X\252<\264\273\357<\343\322\272<\266nM\2753 @\275G\236\t\274\r\3600\275\247Z)=^;\235<\257\312X=\372\340t\273q6\336<\352\345X\275\244\252\210<\212O\256<\203B\r=}\303\236<\226k\221<\354\031U\275\"g\315\273#o-=3\2344\275\203\360.\275\261\266\003=\213<[=\t\252\263;\372~\021=%i~<\262\303\035\275aKd\273\365p\001=X\343\271\274\256\243\260;3\303\311<\2142\027=p}\026\275#\230\206<\311\024\026=U\033\007\275&\316\264<[\356\301<g\267\306;\024\261\371\274_y\330\273\234]\275<\001W\250<\365F\352:\237fR=\256\272+\274\214\035F<\032\267]\275H\316t\274S\3752:\225+%\275\307\307\231<\256[\224;\036\336\260<8\263\334\274\340\305)\275\272\373k\274\335\362\362\274\273\264J=0\206\241\274z\213\240<\201\3671\275l\260\236\274\246E>=\255\360>\275>l\325;\305\322k\274\2540p<\375\332\317<\2136\014=q8\r=)5\351<\2348\'=\321\353\r=\373\300\366\274\235\027\2479\323\013@=\2541Q\275\322l\030\272\270\370\027=@\242.\275%\262\205\274\345\227H\275\0134\222;*\301\303:CX\257\274\314h;\275\212B\002\274\232K\203\274$\376\014<\200\247L\275\352,\035=\010\3069\275\200\353\235<kU\276<\002\311\002\275\237\177)\275\034!\004\275-\307C\275\3568A\273+z\"\275\346b!\274<\327\'\275\352J\033\274$\222\346<<\316\'=\374\355+\275\272\027\350\274\366\013C\275\233RU=@\243\002\275\362\333\013<\001N/\275\005N\242;\270W)\274\360J\222:r\003\354<SB\200\274\304\377\363\274#\024\267\274l\213-\274fg\277;)*\020=\327K\032=SU\274\274\307\221\276\274\315\367:\274p\035\300\274\240\353\267<7\\n\274\277\355\314<\336\322\360;A\311\362\273\203\246N\275\203&\335<\'\222\026=U\225P<\314\322\022\273p\217\351\274[\037\375;\2654a\274\257\240S=\370mI\275A\035(=8\352\377\272\267\323N\275\363\216P=\260\321\254;\241w+\275\313\rf<\3678[=\322\364\243<\270\326\340<GSX=\2111\210<\233\261\n=\021\036*\275\242\re\273\223\037\014=\236\250.=\205\322\'\275\3232+;[a\201\274W\203\254\273\305G8<\266K\"\275\325\223\014=U%\231\273\255c.\274L3\037=j+\232\274\022IZ=h\324\217\274\335SM<\2023\270\274\356H\377\274\034u\316<\250\352U\2740fO\274\377\357\373<\241^\307\274\371l8=er@\274\223\362W\275\223\225\326<2&\346\274\253\246\027\273\303p\305\274\264\004\013\275w\222\021<\036\313i\274\255W%\274\341\221\227<n\264\223<\232\315~\274o(F\275\250w\362<\244y\257\274\330_\361:(XI\275G\315\314<#\005\257\273\252\360\200\274\216\271\261\274\350:N=#\010\317\274\017\3147<AQ\224<\337V\t=\244\305R\275Q\t\275<^2?\274\020wM=#\203\t=\037\2435=\266\254\217\273\346@\362<uL\007<\"\021\230\274\254\360\026= \300\\=\3540]\274G\014\275\274o\263F<\220\016\376<\300\273+\272\010\225S\274\037@\034<\235\230d:\364b\007=i\320\352\273\220\270D=\212\363h<6\245\022\275*\345^\273.`\212\274\355\337\232\274~\353@=P\361\"=\212@\360\274\207\371\361\273\344\273\314<\025\263S\275C\035\300\273o\372\351<\310\265\252\274\t\204\031=\003),\275Y\325\245<\314\3178;a4h\274M\350x<\255\276\302<Eg\r\275m(A<p\233\023\274\270#\306<\30296\273\266\266\032\275\233\236H=\272J\033\275w\027\014\275\356<\000\275\024\016\354<\212\2346=\";#\274,wG;\323\304\323<\0168$=e\317\254\273\317\017*=\333c+=\200\333\354<|\033\235<z/:=qx\n=Pv\230\274)k,=\332\242U\275\3269\361\274\014o.\275\245z\014<\244\252*=xb!\275kQ\361\274S\373\034\275\325#A\273\371O\005\275\213g\2239\354/\023=\350\006M\275\302^\232\273\026\030\247\274\255\373.\275\321h\031\275\277\337\272\272\232~\266<\273\274\274\274\246\211\376\274#.\\\275P\267\025\274\'j\324<;\\n\273O\250H;\277B\200<\374\264O=s\023\025\2756\247V\275 \370#=\021\326\340\274\323\347\307<\232\213\214\273:\237\320<\\A\n\274\332\026\223\274\236I\320<Nj\303\274HR\226\274\3540:\275\226\235\002=\177\242A\275\220\003%\275..\325\274\265;\346<\332US\275x\273[\275\360\177B\275\250\214_\275(\234\t\275\270\n?\275P\224\035=\263\232\341<\335b\025=;\222\026=\035\341\341<n\3146=_\273>\275\367\007?\275@\302\254\274\275\261\326;\013N\022\274n>N=\001\312>\275 \313K==\t\341\274\253B\371<\277\037\216\274\245\341J<\200W\251\274,\307]=Q6\025\275C\222\230<\340\210\016\275E\031\004\275R\'\246<\'4 \275\364\351\340\274\306\302\271\273h=5=g\254\246\274\213\004\007=\325}+\275\256sB=U.=\274\017R\2669!\305\r\275\341\2358\275\240K\277\274o?\036=\004\024%=,ZG\275\177R\021=\351C\225\274\016Bg<\215jU\275X\014\357<\364\333P\275\034v\242<fk\002\275r\0035=\254\217\345\274\2165\361<\\\2624=\322\220\007=\317\231\263<\312\350\305<\377\301!\275\026},\272\213\024:=\353a$\2756\036\036\275,\337\220<Ag\017=\206]\205\274\023H\006=\371?\304\274%\263[\274H#\355<Y\312G=\310\332\025=\251cr\267\001\240\035;/\241\251\2742\356\303\274\221\314&\275Z\376\'\273\005\310\t\275\021\262\261\274-\315@<=\330\202\273\363n\004\275\021.\025=z4D\274Y\020\027=!\220\033\275\260\212M\274\034\357\020<L]\341<\247\207\3649V\236\016\275\350c\032\275\200I\321\2727\210\005\274\257R.\275\302=\235<3\374/\274\235S\001=\2736\230\273j\250-<DJ\333\2740\355|;\220\025\304\274\021\227\370;\256\301\224<\345>,\275\260\203\275\274\323\372M\273Ji\226;(\014\025\275\212\177\n<\003X\346<&|.\275\034\251\315:7`E=\300\256\225\274\030[\351\274\022\264J\275\330\3321=\345yK=F\010N\275\222\3671\275\224\315\256;7z;\275\207)X\275M\3236=\312NV=39\217\274\312\351\241\274\255\367U=o;$=\357\263[\275m\2540\275\004P\354\274\210%\027=\201n5=\230\230\325\274@\010\367\273\307\240\262<c~\317<U\336b\274\250V\337\274\256\312\225<\033?\\\275r\001\023\275\327\255\241<`\225\002=\231\026\225<\215\250\332\274\244\367\315<k\\C\275\301$\363;\200\211\310\273\024\306\260\274\351q\303<\237|&\275\243\014\242\274\250\022H=\007\263\247\274\272\020\362\274v\245S<\315\352L\275Y\263/=\322Dp\274a\010Q\275\207\305\013=\207\311x\273\323\323\247\274\227\373\320\274\345\364\257:\366f&\275\250\2052=8\217\025\2755\351-=,\311C\275\331\213Q\275J;\016\275\013\275\332<\314\336z\273\215#\002\275].\023=\001\010\"\275\340\254\"\275\2062\214\274\272\354\375\274\311\023^=\222\312P;y\320\017\275=\337\301<\003\340X=1mA<\266=Q<\371v\013\274[\374\370;|\326\211<\"\371\n<\272K@=\232\207[\275\240\031\022\274\211\200\007=\271\315\302\274\332a:=\031\345\214<\307w\334<=xX\275\315g\242\273\313\034\035\274\254\373\002<A \022\274\020s\021\274\317\341.=b\250\354\273\261\367[\275^3:<\334\ti<\316\210\345;\324\215\002\275\037\216\350<\357@@\275\217o\211<\335|/=\261\316\003=\313W\'\275\021\021\005\275\355\271\032\275\211\002)=s\330\222<J\375Q=\036\233\366<\013\246\215\274\331\004\'\275\035\312L\275\206\247\306;\213FF=\322\211\027=K\341\302<\031\347\200\274\363s[\273yg)\275\337\361T\274,~S\275X5\003;\0274\034=\361\217\327\274\335\205X\275\364\t\250<\362\332\260<\207\243>\275O\033S\275\210\311+\275\265\t$=0#~\274\352\010Q=\243r&\275\3023B=\342\230K<\331\200\017=\320\345\271;\275b/=.$L\275r\315\263\274:\370\024\275\237\314\\<T\221\035=\226\223\300\274\030\275.=49\323<\376\214\023\275\371\355\322<\017\276\n\275\231<\233\274\243\325\264\274\037\326\275<\032\222L<\231\006\360\274\224\200\205\274#b\324\274\260\256:\275\264\210V=%\360\243\274\237\032\001=\252E\021\273\324a\301\274\242\237:=?=W\275\3331==NQ-\275zW\036;%\010\031=\272)\036\275z9\237<\205$\017=\'\272\";\353\203\316<\217\227\323<\334TT\275\336A\264<\211\241H\273\240\223@=\314\275R\275\337\223\264\274\317\001\346\2745E\344\274\201I~\274{\350\261\274\234\017\272\274G\211o<\r\206T=\271|\037\275\247\007\264<\261\216\236<\257\332\350\274]\350\t=\026[Z=\252\315\231\274\324^\311\273\216\002\327\274\252a\215<L\363\223\272r:\243\274\347\t9=,I\303\274\335\02158`\324A=\271%I=`\235\032=\322\245\312\274\274\363\273\274\207+J=\264\261\256\274\222^\332\274\206t\354\274\234\220?=\t\223\004<\207\033\260<EOp\274\336\257E\275\036\225\230<\307\3173\274Y\321.\275\205N,=\235\334?\274/;H\275E\2122;Nw\265\274\241\213o\274\242\220\336;\231\0022=\\\225\266<\344e\257\274\277n-=\271\243/=]Z\262\274\323\031S=\t\301\326\274T\025\217<\204j\263<\252\306\035\275Y\035\000\274U\003\t\275\357\317\001\275\266\320\365\274u\241&=$\231><\252\' \275r\215v;6\250Q\275\212\324\336\274\013\307\262<\316n\260\273\232Y\336\274\'\327\313<\331\320\233\274\010r\020\275\244\375\365;\020\330<=Pi\010=\351-\002\274\314\006\276\274\227&\021\2746\216R=:\210[=\310\346\206:\330\345(=\245\344-\275\374\273\262\274\t\250;\275\003\205\002=2\246 =\353\213\024=\243\025U<\342um\274\320\023\037\274\233\271\004\275C$?=D7\307\274\324Po<\271\352B=aw\303\274+@\264\274l\242\220</E\262\274t\241\027=\341(\273;\362\267>\274\264\2055\275\326\245\365<\351\360B\275\016\200\r\2756)\225;\320\210A\275<c\265\274\036:Z={[\272\274\317\035\315\274\252n[=\214\277\320<_\304R=\025g\220\274\345\251F<\016\247\033<\367\270\231\274<\254\232\274\245\254\306<j\275E\275\302\307\031<\322\2341;\353V>\275\374\t\025=\306\022S=\\M\234<\331\r\2239\036S(\275\253\014\034\274\005\214Q=_q\314;\202\245\022\275\261\371\372\273\227\266\016\275\303OK\274\014b`\272\036\240\373\274h%D\275\324\220-=L?\314\273\332Vf\274\274<\207\273[\215$\275;\367\204\274%\353\n=NU \275\017\276\276<\333P\332\273\305^]\275\276\372k<\225\326~\274\001\255\207\274\265\002]\275l\252\022=q\264\325;&\210[=\301O <uw&\275\"\024\022\274\217=\'\275arQ=Q\263\373:\205\030\203\274\356*,\275\242\275\'\275\034\354\275<\t\010\326<\352(\311\274&\232\033\275\250$\002\275\310\372\300;\230\242(=\313.\r=$\t\353\272\3612<\275=\n\350\274\260L\342:\032\345.=U\321N=\010\234\022=\224\327\267\273vd2:\341\225K\275\363\231\352<\321\020\360\273)\237\305<\256T,=)\rY<\311&2\274\370\221\203\274\321c1\275\266\025\255\273\352\332\210<G*\265\274\270\350N=h 0\275\360p\376\274S:\022=0\344T\275.\037\2179o\321\243<\201\302\032<\224\303\301\274\270X.\274\350d\001\275\rJ\221<v\3232\275\256\306\037=\315\326\305\274\271\251<\274\026H_<*VO=\255\016Z\275b\276%=\271X\310\274^p\002=\021\024\336\274\274)C\275\327\021\355<\005\264\020=\004\"\335\273\273\376\003=\244\366@\275y\247\333;\300+\033<<T\017=_\366U\275\031\220(=\025\360I<\200+\253<\2751\021\275p\3124=\236(7=\n\267\257<T`\256\274\277pK=\371\353\256<\nY\037=#\334\r\275d\354W=v>&\275N\233\026\275|$\345<\202}a\274 \241\257:N ==\304`\216\2742\211\232<gmo\274\341\254V\275sP\220\274\373$P\274\232\257\003=\331\210\326\2734\323\027\275\203\2501=\365\320!=\363y\350\274\031\325\206\273\366QW\274\033s(=\342\352\005\275\342\352\237<]j\343\274\207\004\232\272\255m\312<Q\256\266;\336\252\372\274(\254\023\275$\033\305\271W\\\205<\'\356U\275\005\271\352\274\274\325\\=\177\312\223\274W#.=\271I\315\2743v\t<\235\343\351;\351\243U\275\200\346\204< R\027\275u\301\350<\220w\t=PI0<\337\357\024=\233\204$\274\031N?=\366\2712=0P\022\275&t\351<0\346\'=\320p\n=\223\246%\274\334\366^=\r\350;=^\271d\274\374\007\223<?\214\227<a\264\"=\034\221\370\272\240\277\010<\016@J<\274\244\331\273\244m`;9\003;<\224(*=\034a\210<Ml\233<\322\\-\275\017\213?;\265\017==\341\206\002\275\'V;=!\2364\275io_\274\342V-\275\372\205\267<\344\000\322\274T\370\250\273Q\003X\2752G \275\366!\204<I\224\336\274C2\205<\200\177\336;Xi\027=(\251\t=?\346\033=zW\257<\022\203\215<\331\305%=\331\340\350<?c\336\274\017\322\322\274\037\2473\275>\252\036\273j\377W=\362?%\274\236T\323\274e\310\200\274\356\223\275\274\275g&=[$~<\334\226^\275\250/\252\273A\332\031\274\220\246M\275y\320\307\273z\013\312\274\224$w<y\272\301\274\222T\244\274!\263W\275z\017\260\272m\363\201\274\343F\203<.\202G=S{G\275\034\024v\274\252`\013=?\347\204\274\247\002x<\343\374\016=\260^\010=\333\003\317\274fZ.=.\032\263<\357M\250\274\3046 ;W\325\347\273\226\304\r=\035d\352<\215\3641\275\373/7=\276\361a<\003\3760=\025|\240\274\212\035N=\243\2612=\313;\021=\236\334*=\353\353\306\273\336=\334<?/3\275\305\205\"=%[Z\272\316\270[\275\364\323%=\177uX=\366\016\360\274\033\201#=\321\340\237\274\306\0230\275\360\244\362<\251\362\r\274-\266\213\274ufU\275YR\340\274-oA\275\37754<\357En:D>\017\275\257\242j<\375=Y=t\325\207<\032\263\200\274*\010X\275\252\376\370<H\262\031\275\236\241\377<\017(C<\331e\200\274\304\246X\274\250SE=r\215/\275:\320\334;\"\375\032\275 \023\006\275\247\215\005\275p6\371\272\245\023.<\t\031\330\274\331\213\317\273\233\243\237;\233\304\311;\354b\265\274B\337O\275\r\203\206<\360\262i\274\3027\352<\212\372\273\274;\304\030=\035\n\316\274ZM\021\275}\347A=\335\325==E\240\224\274?\010\266<E24=bz\374<\346c\005=\254\347\256<d\336/=\352\005\372\2743\320\026\275\371\357\366\274\263\216\300;-\035q<\204J\017<KM\224\274\330H\256\274z\324G;\242;\002=\311\357C\275\037g\306\273\271\352R=\035X\321\274w\244\025\275~\017\327<aI\272\274\201\222\022\2759]G=\256xo\273\036_(=\362<U\275\305:\023=/Z\310<7\375\331<\rl\"<\311\340\345;L\020\301<\313\014\r\275\016\307\302<\027\2071=_AR=[\312\365<\356\247!\275\346&6=)\002/=)Y <\337\3408\275 \036\335\274\024\007:<\214Z0=~q\210\272\334a =S\274\210;9\254A<\371,V\275\022m|\272\2426/\275\223\271F\275/\374\353;m\262X<-\322\000\274\027\204\025\275`\177\027\275}S\314\266p\0014=\370\250C\275\361\233S=(\337\226<\212\023\320\274xG\026\275(2+\275\302j,=\263S\216\273\366\347\'\275|\0311\275\234t\033=\236{\026=C\213\316;I\3012\274\2355\'<\310\223#\275\255\250\253;u\026+\275k\3774\275\374.\266<\360?\256\274e6-\275\365\366F\275\332\213\315\274`\275\001\274\234\242*;\014\324\302\274\023\365!\275\305<\262\271;\323\314\273\350\321\304<\207r/\275\373j4=1\367\312<K\327\337\274a\242\021\275YGX=\363t+=\006\376\224;\000/\"=~\232:=y\223(\274\272\255d<W\263\242\274\324\237r<D\315&;\206\374\307<v\362R=VuE=>\335K=F8\336<Oe;\275m\326\333\274\230\200F=\265\356Z<\352v\002\275\245%J=\253s\036\275\325\203\374\273L\022\212<\342v\327\274E\342\033=\0224\322\273\305P\244<\257\362\231<,\3543=U\222\276<\351\0338\273\311\356\261<B\333\211\274**\001\274\035#^<\216Z\224<\346\023K=\344ux<\337\260G\275+\264\262;:\322\364<\2406\240\272\212p\006\275O\236\024<\231\010Z\275m\327\246<*\253f\274\332A)=\356\2630\275\374\265\\\275\377\340k\274\263>\374\274\257\016\006\272\264v0\275\r;\004\275?tU\275a@\312\274_k]\274\013\020\222<L\355[<\323\216\242<P\311\003=\326uJ\275\352\261a\274\225;\275<D\321\332\274\255\264%=\r\'\222;\300\374\027=#w6=\325\245*\275\360yX\275\273\227\243\273\203F\272\272\373\225\251\274\331\212\312<rM\217;t\\\343\273n29\275F\220t<E\322C<\255\2466=7\333\350<\333\004\233<+\264t;\374\377B=\345\334\240<u+\226\274\365\212\001\274\224\301\207\274\200\327\276<\260\251\345\274\243>7=\240|y\274{\203j8\223\344\212\273F\377\217< \320\267\274/BE=>\241J=\261\231\237;\222\3777\275-Q\234<,X)=\207,e<J\205\021=8C:\275\341\316\357<-\3475=#`\026=\351^\023\274\303\234\316;\341\305C=\377\227\344;\307\345\276;z\210\224<F!\375\274g\273H\275\364\357\266<M}q9\256h2\275\2476,=M\'\257<\036\311\013\275\010JY=\311xR\274vk(\274V\357A=b+\035=x;\267<2(\367;\277\260\353<\344c\020\275*jB=\316\002\017=R?:<\367_(</\356E<?\263M\273\034X_;QT\234<\263\224\311\273ft]\275\252\304N\274\367\307D\275\363\251\224\273()\232<\214^\251\274\364n\345\274;\353\374\274\007:0\274\320(\337\273\242Kn<}S\323\2744D\223;\341\370\375\273\362X\t:{\375G\275M\021\273\274jd\036=\223\261\242\274e\225\007=\257dK\275oK\334\274T\355\027<wK\"=\341P\203\274\240_\361<D\363\331<\220QY:1\331S=jt\341\2744@\366\274LR\007=:O;\275-}p:\301\272\310<\3310\245\273\375\r\020<@\3567\274\203Y\277<Z\375q<p\t[<KW\002<\'\355\002<\307\251:=\314\335\352\272\371[?=\013\217v\274\"53<\223\260\002\275\351\200I=J\330\277\273\\\203\031<4h\033\275O\353O\275\341\213\320<`>@=Z\207G\274\332o(=\335\226\220<\204\217T=K\317\026=\351\331H<\314*\223<\275~\257\274\254A-<\022\245\n\275\203\254\243\274#\236.\274\003\313\026=\206s$\275\022\310D=\020\307U;+~\272\273\224\320\031=\201\324\016\275\027ZI;\247I\005\275`y\222\273\370\314\272<<\034V=\316\373W\275\372\311\314<O\336\004\2755\241\360;\037\274\334\274{8\376<\303?0\275e9\017\274\223\375\223<\305k\362<\250$\364\274\004#\007\274X)f<\001<\310\274\367Z\334\274\222\r\022\275fdQ\275\243gG\274\020\213\215\271\264\2779\275\247n\315\274\316\366\025=\312\3100\275\332*g<\244\240\367\274`gX\274\010\202\313<\357\026,\275\026\254&<e\322\025<\222\334\021=7\023C<\365,\317\274\306\240\'\274;\275\\<\305\r\272\274S\221\"\274\346\034\211<\370\341\330\273\231\360\r\275\245\262.=\334\037\372<\005\031\301\274\032$\026\275XI==\200]3=\035\211\013=h\235?\275\000\200\225<UP\236:>\\/<\244C_\275\325\355\332\274\340q\376\274\td\025\274\234\200$\275\322EW\275\221\303T9\2259\321\272\033\307\003\275 \014A=\232\n\211<\245\256\300\274TZ*=@S\201\273\354__=z\364\304\273\224#\006\275\257\225%=\000D\005\275\370\244K=\2323\227\273s\363\r\275\021\177\"\275\350\354\013;2d\204<\221\\T=\3567\345\2703g\355\274\237j\330\274\364\256\310<\200I\006\275$\243\014\275`\324\327<{\002C\275\274\317\222<]Q$=^\333\031=\355)\372<\365\345\001<Cc\301\274U\272\r\274k\021\013\275\232,\264\274\253_E\275\234\231==\2552/\274\234\237C:G\200E=\032\302\262\273\343\022z:E\376)<\333e\270\274,`\316\274Z\020/\275\324\316\273\274\006\n\032\275N\0008=\353\313;=\277\\\343<\232\357\261\274\354\370\013\275\005y+\275\261$O=\005M\000\273\204\306\035=\247\245J<gzW\274\362l\276\274\256\270\240:\357\341&=\214\225\310<\365\0274\275\324\374\020\275\301k\257\274\204\223O=\325V\314<P\314(<\231j\324<\326\314A=j)K=\220\216\300<\234\261\211<\241\345-\275T\':=q\375\006=\177o\023;\003\330\216<\330SJ=\203\200*\274\022w+\274\234I\234\274\215_\027\275ir\326<\177\375\264<\262\372\343<\326\310+\275i\336\314<\036\332\031=T\212\207<\023\367\214\274\320I7\275\t\225\225\273\370\224\354<\245\366\211<\341\334v<\232\213\n\275![,=\004\024\016=4(\365\274\275\262\246\274\r\247\337\274\232\331\034\275\230\246\222</\226\217<\233\351\370<\301\016\202;@;M\275\3319Q\275\027\225\004\275\226~\207\274L<\274<\373}\321\274\"\257/\275\364\271\315<\223$\217\274\027\'\007<\242\351&=e\230\314\274\322f\007=hu!\275\002=\252<S\266\331<\306\236$\273\314\230\206\274\271\006:\275\020\022T=\241\217\235\274}\023\300\274p~2\274\023\003\204<\344\305\2329\027\014H<\274\313\315<\340\304/=\254X\333;\'\253<=G\356\204\274\177O\220<\370\222\243\274\321\266i\274\223\353N\275\243\332|\274\303\024\242<\266]\261<\036\250k<+\230(=\225w\333;@\340\347<\325\252=\275>P>=\332t\"\275E\232\020\275\201\244\335<-\270\315<\315\361\224;\245\"O=a\034\020\275\334\333<=I\022\316\274`\346\274<\247=\n=\324\234\371\274=\315O=4\311\"=\307K\347<CC\203\273\245NW=\207}\333<3\246\026\275@\376\311<\030t\332\274oLW\275\032\370\232\274\251\273\023\2759Y\220\274\200\346M=9\211\354\273\372\263W=2\3238\275\331\270\361\274\n\236\007\274\004|S\275W\2146=L\"\262<W\037c;\202/U=E\212\273<\017\3444=\2104\t=\rY\335<Qb\224<;\375@=\206\363H\275n\365\001=\277 `\273\340\367\372;\277\224\257\274\024\270V=\345\006F=[\331*\273\305\247\253<\033F\264\273k\251\t\275\376\274\216<\027\365\236\274w\'\230;:\230@\275F\264\346\274\31005=bG\361<\247\3042\274o\206==B\201P\274toL=\276\362\006\275r\265\271;\256\177\030;\236\341\013\2759\205+\275\234\247\016={\025\327;\340\224b\274md\010=\214,\245;]8\255\274\267\263+\2745\336\354<\3255\273\273D\332\031\274\210_\374\274\330\376\216\274\021R\034\275\006I$\274\356\001\303<\300\2438<G\367\345<]\3046\275bR\007;#\311\212\274\244N\221<Qy6=\354\254\r=\202\335P\274\243\237\275;\317J\'=8\032H\275#\317\217\273\364\261{<\000#U=\345\2671=\371N\231\274\212Y\221<\273n\014=\tu\334\274\224\243T<\377y?\274\331FN\275&-\226<\317\361\363<k@\224<$lT=\345%\361\274\276\303\026=^\'\222<0\3428=\235\"]=\266\260\366;\304\330@=\231\'~8(~\365\274m5-\275Or\263< \270\343;\360\013\362<\354\367H=oY[=\205\240o\274\361$U=\330\255q<\\\261^=\373mc<V\365\233\274\024\017\n<eC\265<\335\354\330\274A\225\211<^\303\307<T\250\016<.\324*<\303%=<\270\001S=8\330\t=\314\303]\275\326\203\232<\010\245$\275\031\232e;\357\321\370\274\335\302x<RDN=n\364U\275\033X\t=\361\243\230\274dN=\275j\303\203<\375K5\275\245{5\275*\325]=y\204\274<\315\322l<\013Ef\273\000{R\275:\250\313\273\243j;=\322\273T\275\177R\277<\336\0146\275JL\034\274\376\206\220<\n\3022=\305\222\232\273N\025+=\312\266\005\275\330q\022=\353\252\372\274nwt<\366\333\023\275\275_A\275\3442\337\274\203;v\273O\211U;\234,\227\274\235\'\026\275\2576\014\275P\374?\275\334\312D=8\215\240\274\n\252\320\273\nu\234<\373Sj;\227\013\350:~\237/;\334m\313<B#x\273\215\340\346\274\364\275%=\212\276\031<\007\323\013\274R\216\235<a\334\\\275\316\322\360\273\333\031\\\275o\350X=\256]\'\275\007\357L=Y\376\361;\311\255/\275Oy\355<\225\376R=j\014\273<\203V\005=U\031\021=\311\372\r\273_\336\n\274>;6\274\343\334\376;\347\346\2039*dQ\275\272\275_\274\335\224\337<\336:\240\273\034\320\002=\236\010;\275\253\023\001\272\023j\017\275E\322\357;\240\325q<\301\214\'=\277\257.=\342<2=>qO=\223\325\340\274y\236\032<\224\206\002=\035m\001<\025\023\303<\373WZ\275\0060\377:\357\013\362\274\376\344\225\274\363\353\233<y\276S=\340\001\014<\375\234\010<\211\021\242\274\371\264\201\273\355o\255\274\367\317\035\275\306DZ<\273\023\376\274/\177\370;q\rL\274\305\"X=\204\320V=\310\266\355\274\n\347n\274\234\216>=l=\272<\025\343\361\273PS\277<D5\243<\326\267\315<\3401\027\275\214\217\"=l\375\225\274T\213A\2751\264\"\274\323\345\362<\362\236Q<\030hj<\362\006\001<T\201-=\206\343+=\267m\272<\267\030\253<\035\230\t\275\022+h<\262F\234<{\004-\275\\\001\207<\316\210{<m\376\270\274;\223\337\274_\022\376;gC\247<4\301X\275VQ;=\336\2649=\314\204\214<\007\016\232\274\301^J=\200\033\206;\374\323\321\273\312\206\226<#\0303\275\026?\375<IC\"\275L\337?<\244\322C\270Rb5\275\277\2749;G\242S\275\021\354\217\272\374\200\270<\235\311\177\272I\253\037=\251-\274<\031\363S;-\263E=\327\253F;H\303\027=s\266d\273ki\\=@\260\256<\305\334\036=\350a\343\273\347\2616=[t\025=\261w\033=\335\252X=;\323\317;;\241\247\274\355\342\306<\214\216n\274\240 \200\274\302\373y\274@CT\274\377\246]\274\245\357\0339\263\rn<\354\200_=\273[\021=\305o2=\247\275v\274\367\352M=\246`\374;\331o+=\226[\272\274V\263\215<\217\366\001=\026\273\037=\343\006\220\2730j&\275\260y\022=\240w+=\316\266\n:\343\202\\\275\250y\017\275wsZ\275 \r\30398\242\361\273p<^\275\343\330^=\340\310f<\235\321:\274\206\347\230<\362\204?\273\340@\221;1\275F=G\365l<\276}\007=\324\314+=\240\256P\275\344\270q<\013N\250\2730/\240;\024\215H\273`M\217:\314t\241<\023\260\255\274?\231\313<\242\213J\275\031\013\263<\346\2352=e\244\333\274\233\373\261<\353\330\023=c\n\222\274\233[\033\275<b\304\274\347_\321<\235\310,\274\35407\275\344\367\346\274\203\3525=C\372@\274>U\245;Jm1=\3570J\274zX\023<\033\253B\275\273\256(:\212+\252<^\204\r=\214`\304\273\301:*=\377\375\351<\301\361\322\274\3167\352\274\256\356\033=\253]\334<\336\344C=\245\007*<yX)=\306s\t\275k.\347<9*\306\273\213\372U\275\352\361\003\275\002\016!\274\371J/\275\334\324r;\262\347Y=\2048Q=L\360s\274=\370\320\274\270\205\277\274\t\361\273<\335\310\017;\363\322\353;D\221\245\273\237\033\020\275\301\002]\275\n\367\226\273Bz\037=\326T\001=^\0243=\263\214j\2746\246T=rJ\364<\260E:=\316BH\275\254\214\377<\32641=\303\230H=\031\036\310<\371@\267\274%L\344<\374\3061=\r#\027=<\373\020=\027y\\=*\250\200\274\2001F=V\271+\274?!A=\311Q\251\274\364\004\347;[\207\372<*qD\275n\233Z\274\276\214\344<E\345\022\275VvQ<\255\034\036= ;e\274\301\240\300\273U\036R\275@\036r<\005\351\236<\242\\-=\036\250S=[\032W\275\276\364\006=D\266\014\2750\252\245;>7R\273\323Sv\274x\303\244<\014\273O<yLS<\2075^\275\232\374\031\274\2523\034\275_\325\'==\312\367<\023\2066<\327a\324<H\223B\275\301\250\264\274\301\337$\275\035}&\275I6U=j\300\231;\250\257\224<P 2\275\344\255\267<\272Z]\275\250[\033\275\273qB\275\257\222\001=\3554\372<\253\271*<\037i]\275\0051\256\274\357\257!=W9\277;.\223\014\2755\245\346<\205\257O\275\025\0310\275,r\031\275\347&\002\275\356~\364\274\250\346c\274\233d\271<2q#=-O\216\274\201\024\r=\004W\232;\005\315I\275)\353\006=\376\214\021=\260\031,=\341!\361\274|A2=\2026\217\274\177C\247\274r\231\003=\326\027I=\357v\241\273\341\232\307\273\374\243\225\273\365\273\353<\267*\200;\263\\9\274\361OD<\024\207\014=o\304\006=\\\006\250\274\260Q\037\274\262\310\005<\246z\035\275\260\2124\275\344\370\'\275V\240\007\275$m\010=\177\256\020\273\230\333\303<&\261R=%\301\020\275\332]@\274z\210\331<\245\332\364\274o\210\343\274v\343\264<\237w\031\2758\2555\275\360^\020\275\213A^\274y,\350<\027\374\021;m\345\355<\212\246O\274\200\3123\273\026\2420=&\331<=\333cT<\331\035\230<\317\242e;W\355\333<\375\357\340\274{\3349\275\346\306\262<\254\204\013\2752w\327<\272\2140=\231\321\305\274\274\210\267<H\351\220\274H.\020\275bc\353<\255\373\036\274\273\004\305<O\341\361\274{\261I;\273 \206\274\377\344\323<\031\356\\<T\037*=G8\034=01G=@\227L\275\252wR=\026\036\226;\242R\216\274\271\254)=\203\350>\275<\375W<\376\363\266\274\2167^\274\262c6\275\254\277\246<\231\237\004<\207c/=4l\360<h\002\353\274\354\312&\274\230\221\325\274\n\245/=&\241[\275\247t_=&\257N\273\331vC=\243\016\'=LJ\262<\266\334\300\271>\021\240;R\373\261\273\354\031\243\274x\362\364\274o\271\'=f\216~\274\032S\t\275x\204+\274\223\016\200<\374\200B\275v0\267\274\021\357 =\331\264M=\324C\311<\353\033\300<u,\351;\344\225\333\273\377\307\006<\216\247\336;\027W\006\273b\310\372;\241\371\330\274X\310\014==-Z\274\355$\331<!\322?\275\232\316\232\274\322#\212:\020(r<<\344\r=\312\001\327\274\022\257{\272\007\266\034<\265\271\020=\016\033\256\274|\223\353\273\3561\243\274\200\0132\2757\rd\274\276\220\247\274S\r2=V\342\036=\250\227S\272\240\302\233<\223\3462=\351/\360;\331(\353<\215\362\265\2724\375\264<\2765`<\\\"\005\275\262\006Z<\245\325\027=lG\024\275N\315\257\273\350A\n=\333~\341<\324o\345<`\313==U\256\266\274\231\231C\275\254\021\245<\343\376H\275\314\353[=|z1\275\361\245\271;#:\035<\"L\022<\232\302;\275H\227\202<\311\\\316<_\203*=\260%\014=\353\373\022\2759\273\216\274)\346\020=\325\256\026<\023\203\006<x\277\315\274\244\2166=\205J\030\275\311\3234\275_\254\000=K\335\007\275\345\2504\275\244\206V\275&W\342\274\360\346\214\274\302\271=\275lD\001\274\276\322\215<\025\0218<O\023\360<\3431_=W\312\013\275\204\374#=\214%7;;\315\006=\222\274\037\275\363\2628\275B\372\023<\026\tG:\304\227e\273\302VZ\275r\"\364\274\246\032\026\274\235,4\275fQ%\275\260\361>\275\27467\275\233@\342;\024\201\256;|\3277\273\362\323:\274Tp\'\275\202\037.=F\245\206<\333\234Z=e\356\372\274T\354\366\274\326-$<x\230U=\212\203\321\274\323GW9\2313\006=C\364\006\275Zn\004<,W?<\344\373n\274W\361\020\274\240R^\275x\226\014=D\024\214\274o\272\'=\r\306.\275\222\177\004=\331\327\004=\004\307\030\275\250\340\'\275%\273\250<\236\222;\275\353\2344=:E]<\025X]9\342\240\337\273\355*C\275aqz\274\334\274*\275@\203\001\275[\270\220\274\366:@=R\267U\274\332w\004\275\214aa<v\322\010\275.a\211\274\000\356\373<\305\247\027<\347\216\276<\026v\254\274\247n\004\274\024k\276\274X\276d\273\371\263\221<P\306\004\275\022\331\'\275<\n\300<\226\377\036\275\310\334L= \000\326<\352\303\371<z\")\275\200\211\246<\266\270\212\274\"8\027\275\013\215\374<\354p\n\275\373>\226<\242!/\275\215\t\242<w\010F\275\000Y \275\371`e\274\355r[\275\313\216\005=\\\336A\2740E\014\275\345\032\273<\t\2549\275!\373I=\226\217^=4\001\031\275Y\'\032\274\303|P\275\214*\036\275\356\375I=\276\025\204\274\314k\231<.S\320\274\260\336\032\275-\331\025\275\360\035#=\003\2047\275\375k\030=1\255\366<\022\326\277\273\363\2000=\033[\275<\302\357\252\274\310x\013\275\205a\372\273\274c\323;\rAZ<\315qD<^8\035\275\240\352\257<\253_A\274q\035\316;\337\361\375\274\355\3613\275r\213^\275\235\340\002=\034\301V\275\234\225;=\373\242\005\274MC;<\373\034O\275\312\342 =\266\206\271;_\017\201<%\275\335<&\323\313\274R\311\252\274\363\323\';C\315^\275\217\260\007<\226o\363:A\313\220\272\024T\\\275W\322\347\274\320\303T;\233\002\020\275F`.\274\'\203$\274J\235\024\275\025N\236\274\262%\026=Y\216\035=M,\206<UZ\260\274%\336H=c\022]=\350\037\234<\315\363*=\226r==+\206\311<wYo\273x;\013<\367z\014;\005\002\261\274f\260\334\274,\231\314\274e.\277<\3715\t=\364\210\310;\364\274\006\275\240\275\306\273\267\273;\275N\376-\275\3352\201<\366\370\237<\254\307\264<\035\320`\274\206\tr\274O\307O\275\355\300\021\275k\301$\275\354\032\006=\016\303\006\275\330\335U\275\224\274Z=V\275\354<\005;\216\274\016\372\234<b\\\353\274\272Nh<\247E\366\272\032\000\000\274\215`$=\010\002\013=\'\246\203<\330v\272\274!\013\251<\353\036==pAC\275=vz\274\366\255\025\275\346K\037\274\3567F\275O\021\364\274=r\306<\224nv<\0368E\274\355\335A=\236u\025\275\023\257P\275\377z\027\274\264u\266<\225\\\013=};-=:\263(=\003\232\231<\356\013\200\273\tl8=\'\212:\275\216\375\360;-\230<\275O\220I\274M\002,\275\036$\275\274C\000\302\274\263\003\341<c\033F<\374&*<\031\035M=\356\251Z=\017\251\311<\202Ux;\225\036\017=\341R\264\274\316\363\363\274Q\300L\275f\021]=\024[\000\275\274R8\275\364\236\032\275\236\316\213<\037\326\213\274\003\237\034\275\3704\302<\036\330\277\273C\013\220\274\322?\343<\355\'\245\274-\244\312;\332=\342\2746\022\035=\223|\320\274!XI=\026\022=\2743\333\322<e\3049\275^g\251\273\356&\026=w\270O\275\247\001\007=\260EO\274s\204\022=\t\006,\274\224\305\210\274\372\247F=\342\266\370<\271\033\004\274:\213!\275\247\036\006=v8\270<\247\326B;\226\315\254\274{\222+=[e)\274A_\020\275p\256>\275\246\035\313;#o\032=\271h\017\275\351\024m;?\270L\275K\010;\275.C\320<\236\370\233\274{w\275\274\001%C=\225\263U=\002e\276\274\242\325\023=@\221G\275\244\336+\275\201)%\275f\260\362\273\247\334_<q\307\256\274\277{\366<a+;=\211\230\253<\346\313\353<\264\324E=@\265C\275\324\257><\014(\014\275((\305<]/\206<\270^\037=\216&`<\370\205-<\366\234V=\227k2\275\220~1\275\t\216G\275A\336R\275\212\032\374<\365\020\037\275\r\r\003\275\220d\363<\263Q\247;_\0316=\234\371\031=\227y\317\272\3612\247\274\2234a\274\340\205\t=$]\317<\242\352\233<\222G%=\177F\270\274\372%\260\2743\254G<\016fN<\274\326\"=O3\037\274\265N[=\246\200B\275\263\234#\275\274\000\014=\201\035R\275\343A\022\275Su\014=\365\276\356<ed\373\2735\310\031\275\353\312\300\2749\235\006=K7F\275+bA\275\024\340\206\274Y\345\021\275\337g\013\275\0266\313<\336\026G\275Q<[\275;\227\027<3mE=\277\266\014\275\244\220S\275X\320O\275\227\252*\275\004\017\014\275\236\007L=\242\326&\275\344\203\302<\257\177\372<\302\373\n:\225\316\215\274L\200S=\032\355\367\274\023L%=\030\310S=L\253\016\275\022\336\272<\222\346Z\275\311_\272;\275\326\001\275\216j\002\275\270\272[\275R\004\374\274p\373\r<\001\235\200\274\212L\261\273EQE\275ue\353\274\'?\";\\=\330<\247\3111\275\337\247\321;\202\346E\275\005\336\343\274\031\342\031\275\002\205p\274\254\235\223<\"KJ=\3603\003=\022\033\374\273\205n\307</\245v\272^\'C<\264\245=\275\237\006\003=\204\037\020\274\270WT\275\356\256P\275MJ\357<P\027:\274+\2208=\037.\211<\373\362&=\201\016+\275qy\250<\326\'\370\274\333\234\364<\325\265\000\275\3566\023=@\3231=\340A\377\274-\023Y;\356\021Y=+\361\337<\301\322A=\356\265\271<cH\344<\344\016\025\275\302\326\021\275\323\231M=\371,\014=\ry*\275\207\'9\275\252\"3\275\253+H\275\260\270\302\274\255\251\304\274\270C\317\274\265(\n:\224<,=6D\364<\374\207\271<\002\006\247\2740\271\020=\207\367\260\274\352\214B\275\035\246\222\274r\025+=^\207&<h\027I\2754{\324\274\263\264\010\275\347\343\t\273jv5=d\305|;\207\342\275<T\031\005<\264\255\020\275\236\271;\275\r\020.=xv\354\2742\212V=\010\234\000\275\207\217\207\272X\310\032\275\035\251\311\274\302=H=V\025\232\274\226\014\266<=\017N\275\317\264S\275\204\334g<J\252\003\275\231\362\371<N)\250<\331\235\376<B\235\006\274\232\337\307\274\033c\267<\0055Q=u\255l<8z\260;\311\006\357\2738s\016=~\255\023\275\346\016\303\274\337\207\001=\n\243\361< \234\342<\213\244\355<\016v\327<*>0\274@|R\275\241\234\316<\276\336%=D#\006\275\234u\004\274\367\024K\274\351\227\330<;&.=\321\004^<\303gK\275{\376\376\274\205\310\260<Q$\002;\266-\262<\277S\200\274Q3k\273\373h\201\274\355\0365\275\0138G<\316-\233<\243\2555=~\367\n=`QK=9\311\037\275\304E\007\272N\356\322\274\345\014\017\275\266\034B=\323~O=\353\215S\274,\332Q=\340w1=\375}\312\274\340\005Z\273\223\327\222;\265cG\274\274\205g<\250o\253\274\0220\270<\237A\336<\224\326G\275\316\336\242\274\272Kg\274b\2107<\204l\231<h\264\346;\367\"\037\274\204.\017\274]iU\2755\007\235\274\355U\353<\373\317\335\274\016\030X\274l\226\306;\340\372<\274\277\214\317\274\230\nH\274\337\346 \275\313WQ;Hh\'=\002\263\035\275_l\310\271\342\276\232< }\323;pgO\274\241a\327<^)P\274\016E\004=\014\213\273\274\260\346 <\335\227\373\274\220\336.=\314f\000<\217\316\027\274,\237\207\273\350\"\244\274l\272\205\274\243\202E\275\016\223\021\275\326\334\312<\263:\243<`\353\346\274\223\2321=\242\350\203\274!\2021\274\030\353A=\257V(\273\272\233\026\274\'\217\t=\227a\017=\210^\020\275xU4=h\204j\274\036\307@<\326\343I=\335\014\003\275\344\352\n=\002\'5\275\333fL\275\367H\020=\232\326@=K\376*\275_X\267\272\334\016\344\274\330\310\027<fb^=\232x\226<\016D\226;BP?\275\335)\250<\272\002v<\354\200\002\275\301\377Q\275\007\350\007<\014?E\274\006\340\013\275[9\r=C}T=\343z\210<\t\302\325\274 \230\360<[\010T\275\340\367\'=(\207\233\2743\365\246\274\240\257\014;\267\326\223;\200\016#=\316E4\275d\234\025\273ZS1\274\235XW=\323c\332\274\306B\027=\275\231\227<t\265\032\275\nf+\274|\315O=\204vz\274?n\353;\301\211\243\274\320\'\023\275+o\020\273\376\022O\275{@\276;*\371p\273\276\350\334\274\317h\251\274A*\333<\002\337\262\274\206\333\245<\237\346\214\2741X\225<\326\324\347\274\023\332&\275m.1=M\314\017\274\323\220\333\274\342\236\361<\336\216\036\275\003\270\214\271\030]\233\274Lz#;\036\367U\275\000KM<\200SU=\376\323\323\274\253\232M=\250\305\n=\rBM=\367y\000=.\271*=\266\362\024\275\363!D\275\333\313+=3\2731\275t\247F\275\236?V\275=\0037\275Y\022(\275nx\257\274\376\273q\274\301G\273\272P\364N\275\246\312M=\375&E\274>~\'\275\215\306\027\275\204\366-<\342\211\016\275\247C\031<\322\306\336<N:\317<\007&!\275\211%B\275\010q\374<\346a]\273;-\301:q\031\003\275\302\320m\274\360\0161\275W\261J\275\216\316X=\342E0\274\275E<\274\r\224>=\010\227\024\272z\2448\275\036C\346;\273bn<\310`6=\215z\243\273Ip\273\272\362\222\303\274\003iD=\346\206\372;\377\360\316\274\360[\027\275}\350\022<\325)\362<9%\342<\003b\204<N^\020\275L[U=O\032D\275j\t^=\273\002\027=/g\'\275P\305\300;\313W\234<c\014\n\274\000\256\3139\200tT\275\254O\255\273[yS=\037\'e\274\303i3=W\335\000=\355\3673<\336\367\024<\3302\261<\277\002\237\274M\013\n=4\303\233\274\353\317t;\001\241a\274-\010\013=Pv\335;\256\274\305<\340,\031\275z\035\t=\036\3445\275\355+5=V\005=;K\263\"\2743\356A\275\247\361\206<9\312\213<\027!\361\274;Ur\274\314\335S<\210N\362\274Fv\022\275\210=<\275\356\330\037<\022(\017\274\327\341\323<\341\274\013\273>f\267\274\004A\231<\244\025\352\274n\177N\275+b$\274\245\3117=\363\341\032=\345\222Z<k:\360\274\230\242\351<\337\267\022;\223\366K\275\207\325\036\275y\021D\275df07\333\361\376<Fr&\275K\314\276\274\004mR=\375\324\024=\242_\223\273\242:\264\274\331i\000\274\021\2006\2751\362\273<\033\037\027=9\214\026=\212Y\230<c\363\342<\236\036W=\213\037W\274\007J#\275=\001T=SW\367\274\014\'6=CV\n\2751\310\301\274\317\265\310<\001\210\316;z\210Z\275\201uE\274\310:/=F&\313\274HK\023;\270\177\211<\037i\270\274\375Z$=_\233i\274\177\347\362<\004\376*=\366\266\205<MX\006=\206<<=_\201\250<\300~\020=M\n\314;7\246 =\302T0=\330\257A<a\236\327\274g\021L\274\275&\002<\363S\001\275\251\357A=\203\222\273\273-yG=Y\331\'=\253O\312<\311n\202<\261C\006\275+Q<\275L\004\221\274\317\354\227;\372\316\004=\375\2636\275\347U\256<X\262\201<%\363\215\273\320H\365\274Va-\275\231\035\322\274I\177I\275\030: \274-\274\242\274\032U\'\2759\305\206\273\306\324\372\274\037\311.\275\210UH\275\352\020\026\275\375\031\023\275\352@V<\000\333\257<\356r,=n\010W\275l\235><\246k\006\273\247-$\275\240n\'=\343\3032\274>=5\275\377\016\321\274[B^=dx\004=\205\240\371<\254\345\025\275\264\277\265;>\373R=\316\214,\274\177\305\022\274\257\326\364<\032\343\352;\247N\007=5\n\027\275dM:\275\346vC=\332\364\333\2748\225\322\2745\\9\275O\037\301\274yy\206\274\301\244O=\r\037(=\n \303\274\375Z\033\275-\003\311<\2377\261<\314c\260;\210\262\301<\247V\\=\335\337U<}V\026\274\364Y6\275\311\231\037\275X\345\242\274\242\367\223<\314\342\n=/ch<\346U\'=\231\217\253<\024\246\342<\245\003#\275\000n\001\275\211\350&\275\326\263\013=\267oT\275\250\350\234\274\202\355Y\275\\>\024\274Gy5\275\345t\330;\361\323\035=\314D\366\274\222\343\324\274\304\027\027\275\014\\\037=\024\301\254<\335!\302\274\305\243\3538\2360y<\210\211\303\271\340PC=\030\356\376<\002\371\330\272\234\310\240;\242\331\036\2759u\333<\230-C=\225\237\224<\365\233>=\361\2534\275\004\204\227\273\311w\371<\t=\246;?\257\226;\377\274z<p\021<=vjO=j\202\033;\322$\274<\204E\027\273\240[]=\301&\365<t(K=L7b:S\031?\275c\006\375<\374!\205\274lK\322\274\253\002-=iP\366<)<\313<\312@\257<\276L*\274\262s\371<\371u:=02#\275\022\271\037<\366\277%\275\014\360;\274\334\252\030=\255\263\211\274O\273!<\030\374*=\307\376D\275\333\373\031\274L\302\276\274\302)Y=@\177:\275\256!s<#\344\021\275:5\366<\2223\364\274\210\350Z\274\355\236\235:\010\3109=\326\201\247\273$@X=\375\324\327\274\222\251\021=~\256L\275\036<\032<\'\371\216\273NR\365\274\377\335\020=\022\\\026=i\231\333<{\307\272<\033?\037;\233\rz:\334\300D\275\344@\253<\352j^=cM\312\274Q\3072<j\t\355<!\010\356<\3706\017\275M\311\247\273\335\333\002=\252\370$=\336\n\013=\223\312^=G\205\333\274z\365?\2750gF\274\002\372\350\274\354W\217\274\274\246\004=G\033T=\216\323D\275\376\323\261\274y\320\367<\314 ;\274G&^\2753\374\021\275\016>\363\273\203Y>=\004y\353<\264\262\230\274\236\272(=0\002Q<\035\230)\275\345dT\275\300G9<\024F\244\274\262R\213<6\260\261\27482\323\274#\341D=\312\n\325<\350J\375<6\2547=\022\270\025=\217\245\201<p\367H\275s\365\t=\326\257X=\322\317\322\274\303\306\250\274\217\376\327<\313\201\020\275G\225\373<\242q\351\274\345\207%<\n\357\254\273`\331\020\275\315\373E\275\006b\314\274\rx[\275\325\346\273;\375\240\235\274\243~u<\342Z\017=$8\350<\264\017\005\2750\310\013=\364\2514\275\361\035\001\275\026\303Q\275\353>T=\023]\000\275\334,.=1{\002=\344\360C\275\267\025\274\274\221\031>=n\371\326<\232w\231\274O$\035=N\277\251\274U\036Z=m\003\263\274\224\277w;\255<\034\275m\177\024=^\007\363\2740\017\221\274\372[\321;\355\317\250\274\'\201\236<L\207#<\255\001\022\274\370o\314<x\346\007\275\203\203\036<\327\364\023\275r=\'=\006\306\334\274\031\2327=vP7<\237\360\032\274\372^S=\321\376\242<Yi\376:\246\\B=\354\004\353<\250Q\r\275\331\351\034=\213\002\371\273`q\316;\262\203@\275\212\255\225\271\276\363\323\273\210\257\321\274G\264\300<EWB\274\361-\206\2745\216\017\274\363z\021\275\205Q\033\275\000\255\'\275\233\315\002\275\237\024\024=\227\005\342<O\223\023\275\006\330\245\274C\231u\274\362\306D<\224\313V=\364\352\272<~7\243\274D\362u;\204\3306=\252\000^\275w\234Y\275Z\363\205;U\303*\274\3518\226\272\273+T=\006\321:=Y\352\t=``T<\017{\020=\\\016\307<\367\007\226\272\264\252\361<i\267\200\274\340\014\323\274MNB=\000k\375\273\366\266^=\261\321\214\274xq%\275K\351\270<V|\330\272\227F\014\275B\014A\275\214\262\020=E\014)\274\375;\330<\321\377>\275\273tO=\013z\300<\321E?<mu\245\271IF1\275AbM\275-(D\273[)\\\274h\200\001=\354:\'=\027\312S\275\347\304\343\274\27146=D\352\222\274\217 B=\302\034U\275\321@\303\274\214\334\202<<\232)\274\212l\247:\216\ts\274\337j\335\274\271L\273<\034j]=\203T\021=N\3203=\211\'T;\2071U=G\310\324\273E\265\352\274\315h3\274 \366A<E\240\334<u\224\244\274a\351\203\274>)\263\274Q2\037\275\003a\216<\351\024\343\274\233Q\341<UNK=@;\373<\035\001\"=\365hJ:\001\213\351\274\274\213:=/\014\n=\210c\004\275\231\331\222\274\n\232\336\274\257\211?\274B\r\007=\"\206\335<\326<\351<\377\357\355\274\300\342\275\274r9X=k\242\t=C#]=\264\203\\\2751\340\035\275(\217\005=\236&-\273B\035\002\275]yM\274\000M[=\273S\362<\336\300.=\265r\004\275\355F@\274n\033\202<\315\000F<I\325\256\274\377\207\206<\312y\014\275\367*\033=\024\n\177\274\356\320\025\275\205\0244:c1\350\273\234J7\275\302\336I:F\004\344; \324\032\274\267\016\337\274\200\037!\275\377_\374\273,\330$\275f\343\375\274\031\213\363\273,\301X\274Z\222\241;\205;1=\374\024T=\263u\"\275\256\010_<\032*0=\311\363\252\271\206\264\316<\346x\026\275{\360!=\257`\376<%\010:\275W\331L<\"\240\035<\360\343\271\274\n\014V={\266\023=\002\242\025=\031\236\037=s\230\233:lQ\340\274o\275%=d\367\\\275SZB:\2471\234;\325\302\246\274\363j\020=\237!:\275\330\206\232:\217\346h<W\272{\274\006\337\013<\250\256\036\275\231\001\335<\302D&<\336C\310;+\014K;I\276;=N\301\347<\207A\177\272\307\016\032=\013\302U\275^|\003=U\332\300\274\035\247.\274\266\376\370<\2206\243<\362*\352<\247;\013\274\341\207O=\225(\022\275\2775\213\274\301\364-\274\251\323W\2756\244(=\022iB\275\310\253\025<\016\377-\274\353\024\035\275\346\232\345<5\022\035\273\244\314\r\275}\256\351<\306\332\\\275l\267\033\275m{Z\274\206\322N=\357\177\255;\233\034S\275^v\257\274\235hE\275\362\352\325\273E7\266<\362\274\026=}\3170=\321\255\000=\230\020\241<)y+=%/\357\273\021\236\024=D\254O\273?\352\035=\377\217\'=\342\031\030\274\3136\315<_\312\032\275H\340\016\274&h\254\274 \243\322<\360s\221\273\333B8\275\r=\036\275\324\230\035=D=/\275\313\357\037=\216\002\037\275\276|R\275\253!\004\275\242\273k\274\336\237\025=q\023)\275\'\256P\272\335\r9\275\332\031K\275\325\352@=\205\300A=v\204o<\200\314\031=\2144&=\225\313:=[\366]=_\2026\275\337\242%\275Q\217N\275#\252\310\274k2:\275\027\252\316:\002$_\275\n\234\356<\035\225\"=zh\032\275Z\010\343\272\314\254\272\274\216\211K;%Y\037;^V\021=n\234 =\276\305\316\274AD\n\275.2D\274\253\006s<\266%X\275\\\356=<k\350<=\236\317\255\274\302\230\033\275\335\272\t\275\010\266\024\274\362\025X=6\250\341\273\033>\267\274&\221\360:\223&\007\275\006\360[\275+,N\275\277\242\341<\004\000\035\275RN\376\274\270\321\243\2748\321\024\275\241t\367\274O\244,=1];\275\000l\n=U\206D\270%\205\001\275\241*\353<2}8<\332\346\001\275\323\231\261\274\373\263&\275}\350J\274\351\021\370<\355\325\213<H~%<\322\305\001=\023K\240<)3\226\274*\235\276\273n(_=U\315S=<\343u<\256\032><\207\320:=s\002,\275\230K\324\274\026\251\032\273\262}7\275\332\t\326\274\3578\'<>\321\001\275\341&\375\274\364\344\210\274L\361n\274\024\202M\275~\362\344\274\204\341\000=\346\310K=\302\342\343<\305\222\215;\033\257u<\203K\320\274\026\277%;L\325\033\275\277\021\027;wZ\373<sJ\025\275?\254e\274*\326\351<4\253\3409*8#\275\203\026:\275\013\332\264\274\231f\024=\306t\\<\002>\030=\357\230[=\263\226\030=v0\273\274\3751)=;\316?=\242\017\002\273\263c%=\306\360B=o\344<=\363&I=\274\3445\274\352@(\275\036\023\021=\373\005\270\272\177\255O=\203\262\332<\372p\032\275\347\211\360<&\346 \275\"\215\373<-\347?\274m\244 \275e>7=G\274\013\275\212\373\301<dEI\275%S\304\274Gc&=\276W\332<\307#\n=C\334D=b\262D=\247\305\004=\346\231O\275\321\313\357<\315\005*\275\301w/\274\224\022\036\275\240\201]\275}\t\255<*\3622\274\331\306\007\275}\317\022=\3530s\274+\276N\275\302l\275<\013\365\304;\245\312\321<\013\213,\275\035\341n<\002L\304\273A\262\000\274\312\320\264<\321\004Q\275\274\364<=F\202\314\274\343m\316;\240\2620=\243\223\265<\224\021\000=\212\367\224<qPh<\322\335H\275j\217-<~{\206\274:\376.=\035\223\356\272\232\247[\272\240H1=\262@K=\030^\321\274Q\322\\=\252\016<\275$\027A\273w\210!\275;\001\305<\355^\232\274\303,\363<\001j\032\275\341\230\326\274\020O\311<\245/v<nQ`\274T\263\034\275\243\302\253\274\236\237*\275\"\345\211\2733|M\275%\244\272\274\010C\250<\024h\261\274(i\245<d\324;=\025\301?\275\372O\016\275\1773\257\274\031\000\374\274\020\260\005\275\271\031\007=[\t\302<\306\232-\275\003\240\233\274j\3659\275>\331\031<\357\346C\275t\007\013;Z\000\226<\207\020\005=9\364\031\2752\n@=\305\251 =\246\237\032=xqY\275\234\265\226<ba\006=o\350\'\274\353\350\n=\005\250^\2756\375i<zM\226;Q_(=\221\242\301;g\223\332;@\016\311\274\352Z\301\273\331\004w<^\002c:\002\031^=\300\335\000\275\225L\277\274\010N<\275\000\202\211;-$Q=|a\343<\213\370\022=\333T\345<%\273O\274|o\277\274\377\230\353<\347]X\275xP\n\275R/8\275\301B;=\326\035\004<fBn<\010\3130\274SGw;\037\327\007=-\023!<\030\323\334<\204b!=Q8\007\275\335f\000=\232L\330<\260\371+\275-\250\023\274_j\243<\235`@\275\254\303\300\274!\004w\273e\354/\275c\321N\275\205\353\347<\207\0222\275\212\210\020\274\367\346$\275 \264i\271\331\371\225<\266\000\317<\010V\330<\276\324\260<\320]v\274\020\034\032:uD \275\031~C=\022\236l\274\306\227J<\352\374\303\273\205Y \275\245u\237\274\006(\241\272\3723\306\274\224\327\235<{\216^\275\030\200y\273\237gZ\274\356\002T\275\213[\n=\305\323\350;\231\347;\275O\366\266\274\207\013\267\273\276\317\370<YU[\275312\274f\no<\330;;<\213\326\013;\337\310\267\274s\020\n\275\320\252W\273\254\034N\275\365M\233;q\204V=\025\r@=\307d\341\274\311\255\372\273\303\366\002\274\347\301\272\270\340k\301<\223\276\003\275\245\227);4\032\001\275\241:\211<%j\237:c\271^;pT\360\273\233\225\327\2740\010&=k\356)\275\242\265A=\360\t\017=Me!9\004\003 \275V\245\021;\317\2675\274c\214B\275\225`\321\273\351H<\275uG\372\274m\032?8y\322S\274\"7\362\272S\342\005<\342\363Y=\327#\202;\t\3130\272\255\356\023=\344P_\273\311\253\017=\212D\336<\230\037+=*#\247\274\305\237$<\341-P=\005\302\010=\225\014B<#\373N\275/\021\020=\375\001P\275B\261\312<6\247B\275&[H\275\362\364\203;\"\023\306<\324\364J=-\206==PA@=Lp\333\274D\213J=T\235T=\037\360\301<\375\270\212\274\301\301#\275\312[\253;\324\030B=\201\000o\274\353!\021\275\264\361\003\2746\372%=1O\277<\246w]\274\023$n<%\206\033=Mz*\275!F\230<\036e\207<+i\316\274\317\027E\274\224YW=x\361/=4q\"\275\356D\024\275V\301!\274\305#\304\274U\226\233<\367T\030\275Jy\274<\250e\356\272\3518\313<\351\316\236\274Xi\253\2731\264\223<?\230\\\275\211\030E\274\216\006\024=\016\370\010\275\205\325\363\274cJ\264;>\r\261;\214%\"\275][\313;\022o\264<\322\204\234\274\250\330\344\274h\375\031=~\362\233\274\212\272\303\274\303?\023\275s\005\003<\225\232\327\274\242\363P\275\376\215\034\275\213\337P=\266\340\"\275K\025\266;\"\270\247<?\252>\275\277\325]\275\317\254r\271m\345\235<\267\306\034\275\030\r\264\274\367\372\214\274\214 &\275\323\232[=\277%\014=k\314\203<\222N\221:|!\261\274\373\035\346\274\305a\265\273\306Q\271<\351\323\305\273\220h\034=\213\335\336:\263\273;\275\375\2614\275\252%I\275\262\2766:\263|i;\315\021.=\022\251G=n\021S\275\377\241Z:\334A\353<\030\031\034\274ox\240\274\376\017\320:\276\241N\274\024\0171\272\323\003p<\0063\"\274&7\365\274E_\240;\370D%\275\034\2478<n\264\235<u[\356<\007\252\220<\365\007[9\357\211\311\274\300\242S=\373\201\277<\377m\331\273\342i\024\275+)2;RD&=x\"\370<k\363\013=l\317\007=X\273&\275\204\377\010\275\335,\031=M/\210\274\027\\\033=\330\220\036\275\3373\354\274\023uB<\233E1\275\333\016\030=h\371\023=\374\364\221\274\320I\222<\003\277\326\274T)\301\273\306<,\275v\327I\274\223\324\244\274ihT\274\n\350\'=\370z\002=\322l_=\033Q)=\344\027\276:\273\366[=^\237K\273\221\030\230<\340\002U=\350:\371\273K\016\231\274\235\252\223\274\377\351R\2756\r>\2755\3515=3\322\205\274\017\303k<+\346\313\274\217F\024=\270\313K\275\263\345*=g\333\302<\270o\344\274Os\357<\277?\225;\363\2427=U\361\247<I\235\027\275\373d\346\2740#\020=\232\026 =\332\201L=\254\210\002\274\223\366\023\274&q+<9&m;\2407h\273C\370\242<-&,\275iN\032=\244N)=\204\206>\275\256b\323\274\022\211\232\271\271\026|<I\337\301<\341\022\313<uq =\244q\205;B#\002\275W|\330<\356\355?\275\250\204(=\276Vg;+E\037\275\035\275\226;L\357\014=\016\211\372\2749\337\322\274\227^/=\242|\263:\307gL\274\001\023}\274dgS\275:\200[<v\366\372<\332\3266\275\212\265\267<\227\0277=\313i\247\274:\362B=m\347\311;l\365@\274\225\312|\274\233\343\342\274S\021\023\274\362\330\017\275z!1=}\030\014=i\264\033\275\2540\365\274\355\033\311<Z|V=A`\266\274\371\004\211\274iu\004=\343\257Y\275R\231\333<\246\231C;o\305\254\272?\361P\275\370\265\260\274\031s\244\274\013W\005=\261 \212\274%\301[=\216\201\371\272\342\256\352\274\031\t*=\3632\00496\202\205<\326\301S\275\227#u\274\321\234^\275Z\227>\275\032\267\302\274J\226\021;\340\256\315<\240A\234\274e_\210:9\252\350\272$\247\\\274\215\241\265\274 \330\206\274=\216p\274f\000F=\332*\010=\030^\\\274|\232?=\260\255A\273\312\346\031=\342\233\330\274\226\321\366<2\312\361\274\004;Z=\232\024D\275\006YU\275\277\365R<\220\014)=\034\363\270\274E\205k;\t\006\204:]h\005=\331\232\265;\340\347F\275\361\362\377\273\3147B=\021\\r<9\344\356;\0022f<\315\207?=\006;Y\275\220\357?\275\362\'V\274\r/3\275\350\350$;3}\343;\335\236P\275\227o\253\274\210\276I\2730\013\215\274\317g\031=\010\215\323\274\023M\021<\200\322\305<\225]\330<vi\250;\377/\007\275\215\346:=\326#\343\274\2471-\274j\277\215\274Z\035\221\274\371\024P=\215\374@==zW\275bw?\275\"P\351<3\254\205;\032\022B;1C\n=\376V\'\275\224\203\'=\355\207\001=g\330W=\335\234\'\275\377\372%\273} \371<\340y&<[\033\350\273\207\020H\275\005\"1<P\210_\275\210\232#=\321$\204;\200\202$=\036\204/\274n\264\332\274\266oR=H\337\230\274\224D6=9\005O=F\222\263<`\004\317\273\316\331\221\274>@=<4\313@\274L\345;\275BWg:\317Z\'\274zY\252<\315\013\257<\315g.=\344\'\026\275\204N.\275\t\220C=\265E\251\272[\244G\274k~\355<\257\256\025=\327\2537\275\365\3355\275\233\"#<\024\206\227<\247g\006=4^$\275R\362\026<\017\347\317\274\236b\246<\307\252\013;ySI\274\346\006.\275v\022\352\274v\036*<J\322\347<\177\226\356;\0146M=G\346\010\275\006\350\030=Es2\2745\233\273;~\332\003=\316\274\313\274\275!E=\324\333\326\273\231\375\255\274\233\205B\275\036\242\374\273\323N\335<p\274\351\273\301iB\274\220\222h;\274:1\275\363\243\342<\340\t\036\275\376\272Q\275,r\377\274\247<\216<\252R\214\274\210\374H\275\347\207\226\274\222\314\r=\320\323S\275wb<\275\026Gq\273\302=\314<S$\230<Y\027l<s\250S\275\213\273>=v\271\024=\022T$\2753H\031=\023\003\347\274\001-j\274\"5\360<\r\313\007=\261\363\275<\354\253\246\274;\275\205\274o\277Q\275\324\002I=m4\036\275\002\372D\275/\245\210\274d\021\216\274\223l\346\274\237\020\252\274p\177\217\274\247\\S\273\322\'0\274\022{69+\321\001=E\200:;\311\204\353<E\037W\275\211\'\356<\302(\352\274\206f\006:\317\205L\275\371\266-\274\343~\t\274\261\325\211<C\326?=0\372_\272\3524\301<\357\270\365\274\331R!=\306l\372:\333J\330\274xa*\273\337\023\271\273<e\024=&\240d\273\000u\033\275d\245L<\021\271\211;\030l\033\275\213\273k;\376\016C\275Pw\000\275\336\220Q\274\n\2006<\260\201\276<\302\376}<\325\322\031\270=~\206\274\'\307\232:rC\207\274=@\217\274\037\374\205\273`\006\014\275\233\273D<5\251\224;d\242\210\274\tEl;\036\266\336\273\215\366\223<R\342\247:\361\032\017=\233\255\021\274\271\215\234<V\232\332\274uf\336\274hn!=\356Li\273^\272\0048\002H5\275\"\300\271<\314\023\t=\254\274\203\274B\363\361;\261\271>\275\246\"\010\275\350\242\353\274\230\3310\275\303\3742\275\314\017\017=\006\\\377\2745IF=s\343\025\274C.)=\265W\r\275>\225t\274\367\227\244\274D\202\034<^nI=pp\001<c\225\333\274@E<;\3370\265<?o9<&7\232\274\267\204R\273\003=\023\274\245\321\022\275i)#=<\3517\275Y\251\\\275\312S\027\275\365\235t\273\211\216\372<%\253\343<c\340N\275\201\227`\273&u\321\274&\235F\275,\024\024\275\300\234\375\273<\222\013\274\372m=\275vn\037=6\2259\2751s\r\275\216\r\235\274%w\233<K\274\2329\363\235\273\273\234\216%\275\002\032\203<a\312[\275\"\251\'=q\311\030\275~\365\026\275\252fY=~\371\035=\3669\213<\002J\237\2741\020@=\272*\216<\325*\022=)A\217\274,\205\014=\333j\376\274\242\351i\274\206\3216\274q\020\021\275\210$;\275\001 \341\272\roA\275J\335\031\275\003\002\037=\001\257`\274\022x>\275g\326*=p\003C\275\005\306\222\274uF\337\274\302(n;\275b\224<m./\274;\026\372\274.\334\377\274\226j\366\274\007\024<\275\2409\n=,\022]\274\311\220%<\271\r\327<\321B\000\275\030\273\312<`\205\344<\366f\030\274Y\254\302\274j\024M<\016\233\'<\330\031\200<\351\302\245<\177\2159\275\326#\035=\361\270\205\273\'\307[9\327\2273\275\332\304D\275\250\231c;)\362\334\274]\177\222\274\217Y\326\274~L0<9\\;=\332\004\264</\241\373<\367B?=\031\374\353<\006(\006\275\374V\035\275\247Q\300\274\301\310\024\273\037\306W\275qZ\242\274\313\n\226\273L\311\023\275=\205\032<\275\226\216<\247Y\027\274\312\022\360<\031.\006<;\376\240\273+p\316\274\320\267>\275\021\005 \274\272\360V\275*\000\270\274\323\272\035;\227\033 \275VI\333<\236\005\026;\372{Z<j\225\321;\351\024\013\275f\203\352\2749e\323<WR\262\274\252\212u<\'r\036\2755\177\014=Q\356\200;]\332&=\262X\353<\276\035H<i.4<\221\255\360<5\230[<{\233\227<\257\345\372\274\235\372\275<\253\207\021=!\363\336;&s\222\273\0330H;\267)F=~\376&=if3<&\342:\274\314A\307<x{\035\275\336@\005=\340(2\275BK\306<\230\374H\273#i\033=\006\355(=C\234\030=N^\361<@\236\261<F\243m<\177%E\274\251\273\026\275\240z\374\273\220}v\274\233\332\351<\222f\333\274\003]\034\2752\024T\275\023\304\353\274\206OC\275LVZ=\231\351\017=\262\241E\275\372\321\022\275,\037G=\203i\031\275\240r/=\3511\256<\245\263+\275bZA=\213\014\243<\247\326f\274\276\363\024\275\037\304.\275\341%\276<}Z\027\275\204`!\275\334\022S=\217\3659\274\007\242\005<\322\025\330\274\200\375H=\031\373\333;-\0210=A\1774\273/b\r\275@\364\225<\316e\251\274\034\225M\275ib\014\275\222\241\216;\343(\352<\254\023<\275!v2=\030\227\216\274\340[\340\274En\273\274\316\250\346\274G\230&<S;\035\275\366\242\202:\277\365\000\274?\310%<0y=\275k\177>\275n\210\006=\210\230\345\273R\243\177\274\026\200L=\266\231\030\274\263i\350\274M\312\346\274{\3702\275u\235\027<\314? =\355\246\014=\201\260\276\274\005Q\n<\230\3206\275\260\230H=O,\216<\317d\235\274\200\340\354\274\360\320\276\274\256\030\214;\330\315\271\274\360xy<LT*<\245}\322\274\327#\024\275\370\204/=5kE\275\357\246\225\273)4?\275T\224\224;\340\006\'\275\344\242O\275D\243\325<A\370(=\25329\275\276\307\031==\2452\274\361h\005\275@\004U=\357\271v;\027\211\223\274\2330!\275\222]==\254A-=\037\037\346;\263\021\261<\242\020\000=\033\3153\275-6S\275o\266\231<_VY\273Gb\031=BQ\310;pR\305\274\216\025\363<\264\274I\273\230\374\263<\311\'\250<\327\265\236\273\'\005\211<\257\003M\275\256\004\226<\323\037G=R\220)\275\017Y,\275\343\013M\275?\302)\275\307\234\373\274\376\332&\272;\030\\=\211\203\034=\\\227\265<b\003\3059\326C\201\274\256O\357\2737O<=2?1<\314\364\004\273s\355 \275\350b\314\274\253\353\036\275\370\372\\\275\351.D\275\306\373\007\275\203.\264\274q\341\371\274\266\216==\356v\000\274\214oL=\010\202\241\274`P\345;W\307\026\275\316\002W<F\333\363\274\241mU\275\356\204\n\275qK\275<\022\210\002= U[\275S\236B<\367\274L<\337\031\351\274\323\010\020\275z\r\032=\021\0254\274\367\212\352\272\305\253,=\352\014\342<%\3040=q0v<\027\"?=\025s,=\217\212\333\273\210\377\035\275\024\007\266<\216\r\004=\335\230\251<\363I+=m\251F=\310p_=\021\200\016=\345#\242<\027\260\023<V9\200<i\003_\275\255\006\350\274\367\315\030\275[FK\2756W\016;Y\024/=\345\230!=\346\3745;\330o\236<\263\023B="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2010
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2010
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
