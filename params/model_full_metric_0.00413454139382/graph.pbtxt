node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2030
          }
        }
        tensor_content: "\271\013\034\274z\020~\274B\214\230\274\243\243U\275\307:T=\322\365F=\026!\241\274\251\347\014<\264\232@\275%\031\023\274\217\314\204;\223\266m<\211-R\275\271\0024\275\367s>=\357r\346\274\006\304M\273\037\242)=\371\254\n;\241\317\314;\242\021\024\273\341+R=\316\353\335<\306t>\275\251\313\014=Q\326C\275\000\266\355\274\231r\030=^\311K\275\365\266\026\275G\023\033\275\233\350J=J\216\212<0,7\275TD\r=R\025\241;\230\236C=l\273\361\273\020=u<9\010\224\274\251\236\307\274\343\342\223\274\376\3606\275\333G\013<\237b\001\274N\2072\275^\307\224;)\207\007=PV\036=R+0\274\213\201.=\360\224\263\274\271\245:=\224\310\222\274Rx-=\315$\362\274US\t\275\242\301\210\274w\177\376\273\346\337\022<P}/=X`?\275N\226\005<I\310M<b\317\346\274\214\364\033\275%MU\275\212\370\246\274\254\026\\<\272\007\253\273\356\250\251\2740G\"\275E>\003\275\217\021N\275\321\343\203;\375\254\204\273\226\337C\275\223k\025\275\034\177\013\275\007\300\374\274\360\344\177<{\216/\275X\022\000=\364\365\007=TDZ\274\2134/\275\0145\256\274\342\374\316;\3672\204;\220\332P\275VD\024=\300o\031=\326\360v;\3452\035\275\354\2135\275!\203\317\274\337\312\263\274\366f\007=\235.\006\275NXC=RxN=R\0351<`\220\265:2zS\275\315\036\263:\021\226.=n\235\360<\360\"^\275\244L?\275\271\324n\270\350\277\343<\033TN\275\226\261r\274\210]\033=\325\305\362;\224R\372<\tyv<\010>\206;\311\365\204\273\013&R\274\237+\021=\256/y<\313\260\376<\337\227\216\274\270[.=\254\264i\274%\223\014<\375\202\306<\371\"\026\275\270\230\310<\020\037o\274\343\220u;\033A:\275\250\245\237<dCP\275_\"B\275\340\232\032=\275\262\251\274\217\007\375\273\256\243\344\2740\273X\273^O <NK\276\274\345\352>\275\022=\013=\223\1777\274\005_\034\275\313\325\"<q\235\022=\225\0004\275Ri\001=\361\345Q=\226[\033<\014\331\245<\206\237\373\274_\336+=7:$=\264w\300:\206:[=c\344\256\274\202\373\024=\341\264\026\275\355\257\232<\340^\017\275k\302A=\302\371*=\342\324E=\355\374\343\274\003\021\n\275u\212&\275\t\357\271\274\271\330\353;\tD\345<(\243\201\274@HM=\201\3051=\264\2364\275J\037\254\274`E(\275\303\'\014=:A\256<\263\357$=\231\224y\274\316\362\020=:l\251\274?\020\007=\366\0361\275\235\3477\274V\2079\275P[\236;\326&\206<\373\302\016=\025\302\031=OxG\274S\367,:\312\003\332\2748Gw<\341\255\333:\215%\023\274\340nC\274w\335\272\274G\210\031;s;\243\274\325\202=\274{E.<\260z\002=\1771,=\')Q\274>\221\246\272\267\271Z<\3712\350\274\265\204\312<\030c\016\275\0371N\275OL \275\n\302/\275\262\202O=\003\270\335\273\244\2176\275\351.{<a\025I\275%\340\367<R\027A=a\331\203\274g\"\231\274j~\023\272d\215\r\275\337\232E<\2436\334\273\365@\023<\016\352\"=\275\373Z=\036o\213;>gf\274X\0342\275\022\261-<=\261[\275\352\237{\274g\2752\275\354l\177<\025\003\313\274\335\237H\275\303b8\275;-\376<\023\320\225;\226\207\205\274\320\271)\274ko\037=sQA=\325\203U<\004i\212<\336]\253<\2031.=\255^\242\274 T\017\275$\225\277<\010\353!\275\035\255\374<\312\311[\275Qy\202<\277\212\200\274yt\010=\006\004\367;\273\307\274<>4\030=2\276\030=)E\376<M\223E=@_m;K\023\250\274\023H\252<zh\326\274)\006_<\3434<\275\200E5=\236;\327<\242h\232;1^\017\275\367&\327\273\242\265\317\274!\307-\275\365<]\275\261\250k\274d\000]\274tuX\275u\342\005=#\010\026<W\375\276\271\317\020\376\274\223\306\371\272\t\244\020=t\2362=\022\025\352<\370\220]\275A\024\027=\010^\'=\356Ly\274\311\003\024=\237\340/=W\037\030=o7\026=pcr\273{-\\;@\212\371\274|g\361<\t\322\205;\357\347\034\275\311|\306\272\023\322d<\233\026\246\2735\025;<\312\026\237\274V&\251\274\177Q\216;\372\n\022=YF)\275\213\313$\274w\225\226\274\230\330%\274)Cr\274\372\212\034\275]Q\250;\373N\367<R\271\003\275]\317\331\274\2226\362\274i\3528=yy\026=Z\366:==\222A=\202Z)\275\260\247\300<ms\330<\"\230\2359\341\2648\275U\226\013=\031*\036=h\257;<\362\343<\275L\372<=\030\240\355<\212\032\337<- Q;\377\335\231;\243\275\003=c\3517=<\300\252<\207\025X=\363\017\366\272\267T\340<\375,\317<`\017M\274\356N\026\275\365p\337<\033\230\354\273\321vY=\345\275/=N_!\274\317\"\226\274p|\035=g,.\275\333\312#<\311\201N\275\360\2315\275%0\r=-E\270\274\331@\020\275Q\205R<\0258E\275\344\r\003=\350h\026\272\016\010\026=\037\247)\275pv\336<\260=Q\275+\002\200<\354s\025=\343b\027=%\357\364<\367\243\331<\377\356\031<\335\240\325<\221b\013\275\342\276\004\273\346\363\260\273\201\213\362\274\222\217L\275H\276Z\275\026\314\017=,\000\226\274(\327$\2757\260\001\274\323\217\277\274E\223\366\274\324{\312\274\331\340\373\274L\252G\273\305\241J=\265\326\237\272\324\037(=\206\324\017=\037gA\275\226EN=\267\2568\2751\360>\275U\304L\275!}\335<*\371@\275\\}B=F\323<=6|\273\274\360\017I\275\263\341\255<\311\365\317\274\351\375\336\273\363\316\225<H@:\275u\252\242\273\230\300\026=!\177\372<\310\371\273\274\200}\301\273{J!\275@\276)\275\023\0232=\274\333\203\274\334\243c<\271T\347<\316W\032\275.9\331<\316)X\275Xw\006\275\020\266\351<\"\361Y\275D\236\351<\037\342\231\274\313d\277\274R\013\242:K\250\013=\3400(=\017r\334<\\\374;=@\013\036<D\367Y=\226\340\305<\355e+=\026\346%\275\322\307\330<\254>\375<\233\344\022=\236T4=IDF\275\333,\362\274\010\253U\275\036\306\257\2746\211F\275\212JF=6\3244=\031\212_\274R8\355\2746G\023<\342a\017<\243W\005\275\366\032\036\275J\322\270<\37603=\313\2115=$r\233;h2\221\2742p&\275\263q4\275\276B\325\274\202G\016\275\20148=\370/\233<\rX\245\274\377\033\025\275\031=\227<7\325 =L\3524=\250?g;\207\313X\275\254a:=\264\342>=\215\201\202\274\3738?=W\311#\274X*Q\272\223\354\002=\217\023\230<\367\022T=\262\034\337\273\220\205I=g\0263=^\302\301\274\272\237\204\274\364\227?\275t\222Z\275\234O\315:S,t\274>\205\331;\030\226*=\274\020\253<\317\"C=\356\307\377\274\201\351\022=?\032P\275#\030\274\273\016\257\233;;\261\036\275\022z=<\323\255\035=\225\266J<\330\320\271\273U\244\205<\335\250X=\274^\014<-wD\275\024\351\317;\t\2716\274\372b]=\225\371H=\010\2676\275\3075\350\274\301\241]\274Y\375h<\303\2701\275\021\306\362\274\252\227\036\275\324;&\275&\352\007\275\243x\363<v-\037=\375\343s:S\003\331\274\233I/\275R\021\211<\256\241x<\227Sl<\270\300\341\274q\364\010\274\021&\020=\"G2=\3779F=\366,\034\275\022\316\254\274\240\310\016=C\201\000=\2027\331\274\232\010s;d\376X\275\310\206\222<{`\034:K\355[\275Y\233A\2754\366\021\275\347\334\376<G\'\001\275\210P\026\275\277\3741=\353U\004=\260\376W=\"\220\230<\036\257f<\267b\305<\353\240/\275\007\366$=s8U=M$\024\275e\242\027\275\374\017F\275\016\t\214\273\333\262\\=\220Q\'=\215HM\273:r\201\274\000{0\273\353\264]=\250\342\"\275\037\331I=\253\205Q\274\252\247\026\275\377\205\026=t/\022=\371\013?=\371\"F;\267\253=<]\233\260\274s\320G=qh\003=\242Z\022\275\331p>\275\177/\304\273G\266#<\034s\255<\223p6=\n\267\205<\225\372\245;\301\3369\2754\365G:\353\330\323;6!\006\275\344\035%=6\022-\275\000-\315\274\2534L=%\364\024=W\263\003\275+\222\256<(\373\331;\016h#=\365\005\017\275O\276(\275\223U!=\211\347C=?U\214\274V\344#\2741\3361=\317d\020\2745J\022;chK=\263\345\030\275\346y\267;\234\232\347\274bO\340<\002\315\202\274x\001\325:P\265I\275\353\365\030\275\210\340\271<\026\033\225<\274\365\363\274\275L\250<Q\370\003\275\275\326\364\274\021\274\206\274\000\0264\275\370FD\275\347\266R;\237i\361\274\337\255\337<K\3318\275\036\356\303\274\271y9=\020I\214\274\360*=\275\374\213\356<P8\366\274\363\016\203;\372\245\333\273\032f \273Z\335==\333\307\035=\271wV\275,\323\'\275\213\230\206\274\007\337-\272\267,1=\317\232q\274J\212\'\275\255N\356\274-$W=\014\203\214<\355\305`<a\342\032=\031\376\035\275\300\363[\275M\220x\272\244\215\320\274\232\210\307\274b\324\311;-s\355\274\252\3267\274\373\266\"\275\255\300@\275\222\264\275\274\220\335#\275\313\352\026\275\342\212\203\2741h/\275IA\250<\324 \261<xZ\013\274+\275\006=\313\274\257<\027) =+Z\365<\360\317\326<}\242=\274 \r\373\273\'\327\207\274B}\320<M\0169=\243\3715\275?\017B=\356:l<\376f&\275\334\'5\275\364H\035\2759s\025=l\000\025=\312\273\\<\2648\r\274\370\307\253<\366\027B=l\273\023\275\327\"\036\275\300\261\307<\013\320n<sE\211\274\331\202\204\272r33\275\355\177i\274\230\263\031=*\222\312;Q)\021=\3529P\275\215c\"=\273\005\\=\335\344\177\274\370\240:=T\253\316\274qj;\275\357\204\230\274p\021\376\272x\206\315<\244\234?\275q\033\000\275Q[[\275\027\2002\275\325\031>\274K\237\263\274\276B@=\322\247:=x\004C\275\025b\311;\000n\245;\223\347\225<\241\233T\275pSh<\326\2074=uM5\272\213h\002<\326\320\363\274\033\304N<\305^\r=\326\242\325\274\3007\225\274}\232%<\301Z\007\275\305 \222<\017}$=\375\327\300\273\177\327\236;@\242W=\205\177\244<?@P\275\333\247\305\274\302O-\275a.\037\275\025\335\261\274\365$\232\274\027Y\007\275\307\314\026\273\322\242\231\274Xn\016\275\255^/\275XQ\235<X\273K=\241\3210=\357S\\\274\250\270\004\275\037\374\027=\r\020\335<\244\362.<\265\333B\274\251\206\332<\034&\221\274]\366H\275z!\214<H[\243<\314\344\377\273\216\310\"=\230\313\377:#j5=qV<\275L\212\372\274\262\251/\273;\213\235\274\367\306+=u\3168<dEY\275\002\366#\275\304\r\306\274\356\276\020\275k\002\235:P\177\n=wdG<<\014T=^zW=\313+\016\273;{9\275\340a\272<\337\013\265<\304\230\n\275\330\212\230\274\250v\034\275\277\327\207<\260\032\257\274\375\272\204<\017\355H:\260\316\010<\3637$\275X6\362;\246\246\223<Y6:\273\272\326@=\310\347\274\274\331z\241\273\360\367[<}\341M=\231\252\014<_h\021\275\t\243\n=cZ(\274\300@\251<\252\207!\275-\361\023=\014\021M\275\322\217u\274\372\263\022=\306\367,=[\247\"=EP\364\274\201\020\267\274\304a{<#\273Z=\263\"8=\307\014?\275!3S\275V@\323;\367\220-\275^\020L=`p\035=IL==\227\335\321<)j\331<\206\036\253<\226vv\273=\264S=Z\353\033\275\241<8=B\331\000\274\352i\301<\374l\227\273\277\367\240\273G\325\016\273\353%\346\274\3753$<D\t\366<\344\224<\274%\231[=\243\225\202\274\274c\316<F7\336<\316\004S=\275\010\350\272\256z\177\274x\363\226\274 \260(\275\001\'\036\275\314\2669\274\205\315\301\274\370\365\375;o#\r<\222\337\266<\"N9=Aim;\214g\335\272S\245\356\27434\032\275\224\363.=v\304N\275\031\177\304\273j\022`\274\224\247!\275f\364<\275,\014@=\224\260{\274`\2466=\326S\264\274$\247\260;G\334\362<\372C9=o\355C\275\003\300X\275\027\371\226<\365-8\272\277\3734\274u\002\023=\343h\213<\237\224<\275$<\021\275\331\257\025\275O\250\016\275\006cK=\267\013\357<b\021\371\274\033_\020\274?\361\020<\007\2042\275=\231==1\036\032\275@\004\250\273\356\247\244<\251\205\237\272\036F\262\274\343\265\277\274\225\030\027\275\340D\314\274p\002]\2757\240\377\273\371\016-\275\320\2609\275\270{F=H\244\034=\033/F=\366\226\"\275o,3;X\035\256\274\247Mn<\233\326\025\275;\001\031<\303\316Q\275\205H)=2\244D\275\310;\216;\326\362\001={\351\363<h\016 \274\275C@\274\325L&\275s\037D=\350\327\356\273\335\353Y\275\005\242,\275\035\367\204<a\204\032\275\n\2455={\370\303\274-O&\275\027%4\275\305\352\010=m\333\235<x4@=\017D\310<zf4<\211\353?;\367\025\350\274\315\233\374\2734f{\274\306\t3\274]\345\326<?\304D=\373\233\001\275\243\266\351\274\357m]\275^ai<@\263]\274,\2529=(\\Q=\212\323\330<I\025\355\274K\257X<\342\024\036=\036\371\017=6\252\272<Ha\243\274\261Q\n=}4z\274B$5\275\224\\\272\274I\2214\274\375\007\264\274Qon\274\231Y\274\274`+\370<B\331\237\2744\200\004=\337\251\322;=\224\n=R\366\220\274\262\306\'=\tt\202;Q;\017<\346`9=m\2519\275\210d\020\275i\302\014=\373\201\\=\227\244\202<\0141==\201\341\321\274\324\222\342\274\325!1;\020\177$\275\031)\362<lhB=m\302\203\274K\340\030\275e\253\001\275\301=\202\274\276\"\031\275,\253D\275\240\030]=\240\'\373\274\274O|<w\027\022\275\024\330\036=\362\325\007\274\030\024\250\274y1\363\274\013\036G\275iK\030=\342U\251\274 \270J=\240b\353<\335\202&\275|,4=\241\033\344<\212 \223<x\311\'\274\275\203\332\273K?\272\274\332:\024\274V\305\312\274\232\330S\274\263\274\3359\273i\223<$\030\374\274#\334O=\203c\333<\235\344\033\273\034-\020\275Q\254#=\321\263\205<\264N\n=\031\027)\275L#\363<\213\361\024=t{\341<\237f\231\274\247\233\005=\347!\326\274d\256\017\275G\316\315\2748 R\273\306\014\022=F\230+=\241\000-<\346s\313;\346S5\275\016\353\321\274\315?\353\274+\260\304\272\373\2461=\230\312X;\257\203\036\275\201<^<\177\341P=t\213\006=\r\276[\275\325\221W\275\306\033\021=\007\202\374:\377N\247;\014\341\311\274A\225-\275\036\037\213<\310E\036\275\267%u<\203\347\255<<E\220\2740\217\'\275h+\204<\212\342\017=(@\225;\325AI=\016\3206\275\013\322==\230\024\362\274F^,<\346\020\257<-\304?\275\001\323[=\320\226/\274\224\227P=\243\212m<\332\320\013\275nN=\2750\2132=\367\364\241\274\354\226D=\204\217\001\274\315\243J=\014\236\342\274\355\233@<C\347\360\274\352d\004=\300\367\233\273\344z\003\275r-\n=;\004\033\275#\2266\275\252\242.\275\222\221\033=\215H\002\275\025\211+=~$\213<F\"\033\275<\033\266\273\265\210\247<\037\r0=t\014I=U\220u\274I\264\323\274\360x\211;\375\343\014=\006z0\275\262\335\204<\355\271\001=\250\270\033<Z\026\362:\226cK\274\226\024\326\273yL\022\275|\236\224;B\373\021\273)J\234<\016\251\372<C\322:\275\332\\\264<\343\332\210;\037\026V\274\320\005\355<fb,\275\371\020#=\010\016R\275\343\n\360: \301)\275U=\366\273\275uT={\017\000\274\271\314\010<\374\370\005\275\225\223\035\274e\213\321<\240\314\356\274\257\326\220<\227\010\200<j\334\332<o\241\237\274*ma<\211\3379\275\267\232.\275\222=\266:\345\317\035=\345\232M\275l0\027=\343[\321<v\253M\275XgL\275\002\314\004\275f\367Q<\200\320O\275jz\217;\322>S\275\243R\003=r\323J=\313\340\373\273\036\243\271<\376\336\370\271\033\260~<\345T\"\275K\3463\274|\243C\275\317\346\020\275\0236\342\2737-\":\3050\177\274\0203W=9\\\007=\215TY=\000\304\241;bZ\252\274\226\223Q;\311&)\275jE\203\272x\000\227\274\3445\344<+\277\367\274\263)D<\367\300\271<\225\363\345\274\301\240\222<t`0\275^X\220\274H\242\236\274\3045\216\274a\303&=\366R\315\272]\244\257\271;w\211\274\213dr;\326bX\275\221\370\330\274H\206\030=5\020\n\275\366\261\030;\000u\027\275\335\\\303\274\342\244\300\274\362\035N\275\ne\217<\367\375\014=\3168\361<\r\001\314<5\324\021=\324\021z\273\371\367$<\370\322M\275\234\363N\275\030\002$\275\340_E\274\370\273\020=\337DP=R\330)\275\302&\303\274\033x\260\273\234\013B=\007J*=<\243\365\274g\361\325<Hq\364<O\r,\275\362V\260<\002b\374<\256NU=\022\276U\275\350\010\254\274\215?\335\273\377S\000\274&\346?\274\335?\322<\330\335:=\r\027\331;\354\321\364\274\333\365c\274\376=<=\234?L\275WrR\275\363K\360<\340)\342<\356uO\275\324\367>\273\240\0032\275\016\326:<\265<\232\274%\023?\275SN\265\273\260\226\275\274\354\226\263;\322k\"=3)=\275\375<\375<1\300A\275\304\332\210\274\330s\226\274x)$=\245+\026=\270\206\352\274\024\204P\275\005\356\307;\336Y\342<.\222\247<\342\335\372\273\235tN=\007B\244\274\366\027\321\274\264C\003=\215\2131\275\223\303\022\275\373\314\334\270\314]\244<+\305\276\273e\212\010=\206\310\267\273,\2546=4\271\003<-Y#\274%>\030\275\211\240G<\217\251Q\275\"\025\316<)\274 \275\332@8<b}7<\2562\347\274\323\247W<\356(\006<b\tZ\274\316yQ<n\256\031<\302-\305\272\357\352E=h\361\022\275\372\327\202<\322.\273<\273\251\021;\'/J=\231H\357\274\001\241\217\272JcL\275p\3625=D\272\005\275`\204\034=L\274\021\275\241\341+<DJ\021\275\300/4<\032\352\025\275@}\274<h\3620\275\273Y\"\275\207\024\002\275\255\325\301\274v\177\307<{;R\275M\251\206<?\272\256<t\275\355\274,\220U=\205\'\316\274\362U\230\274\224\353\321\273!\333\031=\327\262\354<\311\311\030\273\260\275\373:\235\364\310\274|\010\337<\322\004\246<\2314C<\305X\376<<\346\026\275\374\256)=\026\244P\275|\344b<\025\255\030=\025R\367\274\303\264F\274n\241z\274\256b3\2755\344\335<\033Z0=\013?*\274\002\'\204<\014\2029<\3756\232\274\367\224>\274\262!\366\274\302XE=\031\361/\275r\n\220\273\032\0313=\3120a\274\225\244*=f\336D=>\261(\273\034\346\351;v@)\275+\345\247<\355\266-=\222[\273;\370;\265:8\261\330<X\371\201<iE\231;\036\007s<]\311\277\273\311\205\243<\332\243P\275\341\256%\2750\231\212\274\262\311-=\"\001O=\023\271\353\274p\277T<\354Q\213<\216\253\002=\355\034\036<\207\342f\274y\226\300\2747Q\205\274T\213%\275S\371\013\275\004\213\340\274\255\314K=\322\237W=a\327\325\272\211\rS\275P6o<\241\313\000\275\017#4=\222$\013<\000<\213<\266\240\017=\345\273\254<\3249/=%\264Y\275UM\212<\035I\253\274\256\271\031\2755S,=\"\331.<%\375!\275\363\217\025\275\337\355\251\274\225a8\275\261J\202\274\376n\367\274\306\300\335\274\3703[\2751\201:\274\333VT=.Y\360\274\356\rz<\222.!\275\267Q\333\274[G\017=!\324\036\275Sq\331<Zm\016\273\177s8\275\251\020\366\274)\034\372;O\256\007=V\373\312\273\305\231\270<\373\241\252<\364f0<{\013\241\274\255\t1\2759&Q\275\331\307\033=DLC\275\030\3306\275eN\303\274I(\351<z\211\2729 \377\240<\252\325\261<\331&I=\333\026F=\351\026+\275\364?<=\232f3=d\037\'=PN8;\t\262M=\221\332\320<\315\262L\275O\244U=\364\267\247\274eE\030=\035\240\227\273/\030\353<Y\315\305\274|)\265:\027rr\274\345\211\002\274\352\237\256\274q\322\253\274\177\022\020<\373\272;\275^Z\030=\2625U=\255<\027\275JQ\337<nh\307\274\006\224H\273\341\275V<Ht\264;g\357@=zE0=\240\3304=]\334\214;u\215\213\274\362\335\262\274\232\235F\274\300$\257\274g(\007\275\270\200\231;sb\224;\352M\034\275r\320\371<|\332\365<S\367j;\360\231\005<\233Y\222\273\317\271_<\322\027\256<\345\304\252;}W\"\275F\t\035<\337>K\275\256\225@\275\004\214\024=\034\346B\273\204l\210\274\276\016\027\275\326#\\\275?\200e;\024\314\035\275\245\241\211<\243\310C\275\331\277\214\273M7d\274cKB=\246}\036\2752\373\376:&\034\230<\177\251\006=?\256\201\274)Vm\274Ga\251\274\241\032\343<\022hT=\364\363\030\275\036\r<\274\033\307)\2759\242\327\274\2366/=\230$J<\207\304\312<\322\227\024\275\007\0039\275_\316\242\274\225\256\214\274X\017\022<]\217H=\000\366\271;\022\370Q\275\006\261\227\274Q\246L=\334\375\"\275\024FF;\265p=\275\364t\344<\263\225#\275\031w.=\272{Y=\033 +=\350\325\323:\323~=\275\250\036,<\360\307><-\212\270;\367;\326\274\23150\275\216\014\252\274\210\227B<\334\304S=s\305F=<\024\233\274>`\335\274_i!\274\272\366+\275\304G\024\275\241\225\221\273S\253W=\243\271\030\275\312\023]=\306\274\036\275}\366e\274\265R\256;f\n\277\274x\377v<5fT\275\317\345\256\274\'b\210\274`\326o<\211\205\201\274zB\001\274\363+\310\272\340S\301\274`E\233<n\247\002=\307\227\025=t\001+<\272k\n\275\033\221\004\275\307\2119\275\216\316\023\275\360\3305=+\375\031\273\230\tL:\'\243-\274Q!$=\325\210\006\275\321\200\347<\r\212[=V_\353\273\2742N=^5\350\2734[\020=m\331\225\274\204\024\234\273\327\242\363\274$\233O\275\217\373\'<3T\000<~\276\233\274\206RR=202\275\211{M<\177@\347;\345\351\326\2733e,=q\215@=A\226\331<\252\022\367<%\276>\275)PP=d\202<=\025\252\026=\\\365N=\364\243*\275\371\240\020\275O\224k\274\037\r>\275i=\023\275|B!\275\330\352\302\274Y\375\340\274\363\212H\275U\363\010=4\334\337\274\335\243\021=\304\327W=1)C\275\244Q\260<E\365\225\274\323\252\275<Z\225\344\274\322p\277\273a\263I=\316\265\022=f\373\007\273mm \275\035]V=\333\272\337\274W\323,=5\034W\275\022\022Y=\031\354\021=\233}\267\274N\262\242\2745x\314\274T\246q\274\017\005\330<\271\214\036<\036Y\214\273\364(\r\274;\034O\275\302\244\222\274\313T\357\274\304 \222<BR\016=(\253\377\274~\273Z\275\267\335,\274\251J\222<,>~<W\340\347<\342\307|<dKL\275\346\026!=\026A\237;M\017\013=\321e\n\275\220\3602=\3639\256<\202Z\222\274\204\215\'=\252\032\200;T6O\275\363n\247\274\315\255\371<~\213\022<>\213\237\274\014TA=\210\017Q<w<\332<\327Z==v\324\000<\217\267\373\274\237\267;\274\236F\024=\t#E<w.\243\274\264\261\315<\032>6\275\301I\336<\346\301\220\274\005C\210<\204Y9\275\323\037\351<\240\'\314\273c\225\347<\026\202\337\274U\275D\271\263-v\274\250?\347\273\366\260\343<\304\026\342<\033\327\033=\322\035K\275\n6\374\274\247S\013=\013\2778\274O\232\341\273\265N\177<\353TQ\275c\017\000:\026\2425\275\324-\267<\316\376\300\273\335\335\031=\177[\002\274\224\331_\274o\350\313<\3616\251\274\324^N\273@oO=_n)\274t\352$<k\006\027\275\371\n\213\274\230\213\341\274\305\277D9\244\346K={;\367\2745\217\030=]\303\000=]\372\232<u\343\001;]\313S\275&\266\363\274o2X\275\264\207\367\274\244\306`\274E\267 =\341&\243<\371\023\306\273\352\307\247;\263\2051=\31105=+\3427<\264\021\2159\266\330\344\274\225\247O\275|\033k\274\312I\"\275V\2717=\371x\317\274\232([\275)N\025\275u|?<\232\307\251\273\014\356\324;\242u0\275G\t\371<5<.=,\010\340;\227\361M=\235\260b:2\357[\275\365\017\331\274t7F=\036sC\275`\255E\275\267\242\023=\375u\265\274\022\013\372<T\016B\275t\232\370\272s\357\017\274\260\025F\275 6Q\275*K\025\275\200%P\274\275\214\310<\016\332C=\377 \010=\267P\265;(\\\034\275D\2248\275\021\231I=rj\242<\357X\007=\nM\325\274\362Ic<\345!@\275\257[\327\274v\236\313\273\3239\350<l\375\"=\203lW=\035\376W<\373\272\332<})\024\2755\304\300<\302\315\270\274\300\360\334<\266}M=\232\257G\274\033un<\0221P\275G%\200<\236\243R\275F\346/=\332\343\033=4\3629=\246l\3779&\2564\2750M\242\274\247\254\267\274>W\301\274\355\274\010=\035\010P=RQR=\247\r\320<%\311\200\274I\n\274\274\307PS\275\321\267\315\274\200l\346<b\3439\274h\260\241;\217\375@=K\213\026=ib/=\200X5=\206\024\343<\244\357\272\274K\373Z=w\202\370\274\345\314T=<\227\r<\027)L\2751\026\335<\324\354\336<\246\371\225\274O\r{\273\261\230R\275\037\215\025<\025?\360\2741\255\241;&\013\222<s\0066\275\334\243\230\274\013\365\330<\032\376\265\274.:\003\275u\345s<H\271]=\240\345)=i\205\343\274\353Z\221<\341\240\313\274{S\022=A\353\332\273\301\tI\275Y\025T\275\263\305\362<\002q\024=\0305\245;\245\257D\274\023p:<\350\340]\273\346\017\301\274\265u\037\274\252\236\006\275\225\236\225<\007\331\327\274\212\242\252<JPJ=\302k\211;+(\025\275\355b\306<e\273\353<1 #\275\220\337\035=I\243\001;\373\230\323<w\370\027\275\227\341S\274\177 \354\271A*F=+\323\024=A\362\256<\340\n\000=\034\203O=\236\230\367\274D\316\366<\334_X\275*\\T=s:\303\274\232B\'\275C\316\310<\216\346\344\274\345\364}<\213\241!=}\335\t=\255\330\322\274\037\356U=\000\257\243<\315\346\\\275\220\256\007<\214\002)=\023N\022<^\374]\275\026)0\275\326%\357<\266\035^<J\0317=\376u\025=\304\333\004=9@M\2756\370H=\230\307!\275\204\333\002\275\200\2411<y,U=*LG<\327\224O=\323\031\235<\2552\326:\264\253\323;\366\363\n=%4&\275:\306\367<b\246\356\273\365\205\333<]\010\260<\036(,\275,7)=\025}\t=\346\014\033\275a\366\005=\306\213\373\273\233,\275\274\366\324C\275\235z6=\317\033\350:A\216\036\275\014%:=1F\\\275\205\205\202<\'\235-=\212C!=\360\263\000\275d\265\212<\207U\376<\343\216\230<\254{\020\275\'UM\2749\215\300<\277\260)=\270\213O=\313d<=g\026\206:m\007A<\241\367E\275`\214\321\273\320\304\232<F\201\375<\275\005\277\274\314B\300\274z\330X\274\364$9=T(\245\274rx\177\274\230U\000\275\232\370\022=\212\305*=\017\276\021\274\332%;=s\302A=\214\246X\275\262\347y<\025\214\t\275SEW\275\214\r>\275\003p\304;\037n*\275&\252\016\275\201)\241\274jh$<\037w\t\275Q\230\037\275^\262\024\275r}C=w\360,\275=  \274m6F\275\021\210+\275\354L(\273\003\345\002=\\\360(=Bs3<\233\324\332\274\327 \252<\370\245\007\275C\371\014=uy;\275\350\037\r=\265\217\311;z\302)=P\316#<\313\355@=\370.#=\3139H=;\023U=\374)|;\205&\2479$(\230<\361]\002=\263\305\010\275\346\220\240<DM\314<\220\307\274\274\371\201(=\"\221\327<\010\340$\274@\224D\275f\220\354;\220\273\327\274\342\343\323<,bL\275M\\\306\274\274a9=\2240\200\274\214\001X=\302\020\367\2745\321\346;d$\n=o\315\270<\030Cs\274\224\2000\274G\240\007\2752i\333\274\355>E=I\334U\2750 \033\274\316\255\n\274e\272A\275\306\265[\275^\243H<\373\022h\274.oX\275\231\327D\275\201\036W\274\300\rC\275P[0\274\325~\254;\205\2075=\247\320\376<\203\251\211\274\231%<<\367#\373:\'!^\275\312n\024;w\241\030\275\245\230j<\240\356\317\274\354\200\n\275B\346\315;<QS\275VM\036\275\203\321Z\275\243\334F=c\247\223<\000}\330<\273]\227<\023\353\260<\253*)\275~}\202\274\265\226\373\274[\216\355<\346`\263\274\211nY\274\343lD\274r\005O=/\352\343;o\010\344<\246\3036\273\367\242V=\237\334\037\274B\020\034\275\'r\037\274s\213\010\274\215y\342;\213\226;=\237\352\307< \372\246<i2P=\312C\260<SfJ\274\254\247Q\274\207\341\034\275\364;Y\275DX\035\275[\367(\275rb\346\274\233\232>\274&\245\007=C\202\335;\234UH\274\2070\271<\255\310H\275{~\003:\237\366\025\275\310\344(\275\305\223[\274\371L!<\310\250H\275{9\363<\367v\035\275Y\024\"=\3607\022\275\322\327>=\223\214#\272\272\001%=\316\211\257<\365\352;=\361\233\260\274@\234\030\275\224n\302;\301\376\355\274N\265\327<\357gL=\225\013\021\275>\371\024=\370\303\032<\270\t$\275\227}==\037\0252=V\221\235;\356\'.<\r\tF\275\207\242\004=J\343\003=f;\025\275\211TG\275\203\322\304<q\246\326\274\317\302q;+\017\376;9&G:@\225\245<sU\227<;#\026\275\202\030X<s\0268<)\005\022;\210\316\266;]\230\326<\341<O=\215\3741=0\345(=\200h:=o\373\354<\376~\035=\021\2742\274y\367]\273\255\223$\275A~K\275\265\331]=\344\253\256<\003Q0\275\355\000\257\274]\"=\273/\266*\273\341\251t;\342g\360\273R\006:\275\237Y\250<\'v\007<\340\250\017=\350C\343<\241\375\001\275\200*\007\275w\020Y\2759y\'<`\362d;3\333\021\275\343\336&=1eQ\275\260^\235\274\300{\212\274\020\3047\275\373p.<@%{<\254\352\024\2759\224\234<\250\261[=\013\373\032;\342\305\254<\020Y\220<\3371\316<\310sD\275\242$\t\275\253rZ=\013O!=Q\223T=\026P\006\275\021\266\032=\374~$\275\332\\\250\274\350\262&;(\327\263<\255\273\260\274\272\031\375\273\340I/<\031\3764<\243\234\002=FvJ<\367\304\314\273t\257\320<0xI=\373|\035<%\3669\2751\317\317;\t\244\375\273,\035:=\013IR\275\222\241\301<\337\267\361\274\322\255U=5h\244\274\247\207\r\275bW\361;A\304\271;\240\016/\275\r{\327;\364e\031\275m\006\304\274}\211/=\tUI\275\273\260\347\274ok\275<uN\305\274<\370\221\274\354>\265\274\215\010E=\007\351?=\364\246\241\272\014\1771=>\0175=\375\326C\275\303\301L=Ae6\2758\014\025\275K5\206<\323\013\016\275\3061C=9MC\275F\206\025\274\237:(\275\234\224\031=\006\231z\2746\361\t=\332\312\255<l\r<<I\303E\275;%S\275\327[Q=[\r7\275c\366\252;R\307\035\274\337\276\331;\314\010\014\275,\024\017=\\\227 \275wb8=Dn6\275\215f\360<l\013\212<\\6\361:o%\211\274\031X\036=X\362F\275\314Y\376<\323J\366\274\035~\'=\003\263\275\274P\307(\275\276\332\273<\223\357\r\275W{\000=\037!O=\257y\001=\227\360P\275\300s\313\2730\031\027<\'5N=\034\013/:\274\177\032\275\024\320\352<gX\244\274#\261\337<j\375\023\275]\261H\275\\*q\274\215\207\\=(\032\026=\267\202\217\274\211\376B<\001\321\000\275s\346\326\274\226\277\005\274\013j@\275\374,\020=\233\255\265;e\243F\275K\312\003<\203v\356;s\377b<\257\231\206<\332d\002=\227\217\234\274\\h#\275\256ep<h\000\226<%\277U=\342H\030\275#\355\024=\317\200\270<\314\343\021;u\212\201<\020\234\320\273\032\300\'\275`\033\036\275\246;)=\344\217\316\274M\322\306\274\334\220\260;7\372A<\306\324C:\276N\342\274\261\372Y\275\370\223\'\274\277(`<\333bC\275\251\200\315\274b\351\350<\223m\\\275\032\027\206;\302=\021=\213\265#=\206\032D=\003\222\r=\244\271D=!\356\020=\2248v\273\363\343\"=\224\'\007\274yL\031\274\266\312\202<\270b\022<\356Gg<\200\225\022<\230\026\251\274yn9=\244\250>\275\322a\246\274am\313<\021\354+=\353\213\371;\000\336#=\254\371\222\273u\006L=\'\233\200<\374\260\332\273/8\217\273\252\313\001\275\375\340\006\275e\316=\275\007\024\t\275\213\240\025<\261\256f\271`a\311\274\246a\366<\014>\251\274\"\315\036=+\201X\273\331+\205\274e)\253\274\007\271K=\241K\311\274\246\254\250<-3\324;\226Z\\=\333\020/=\341b\033\274\231^U<\305\344J\274\327\361\260\274\227\267G<;\214H=\235M\'=\350\277\253\274\237u\317\274\t\2665\273\234\241\271\274\210-\022\275\264\254\033=w\2403=\366iQ\275\222\366\030\2759\370\'=.\030i\274\255\033\252:X\2746=\373\257\001=\377\'\340;\227\2312=\\6\036=\264\251\202<3L\002\275\006xP=n\364*\275HL:<X_.\275\354\022\003=\003\275\026=\27185<\006R\343\274u\225\023=l\374\020\275\n\2442=\3460\204\274\372H\024\274.\001V\274\006rJ=\010\341H=\037\230\213<2H\027\275\235\330,\275\234@?=\240\3563=\241\312-\273s\326V\273\005\242\031\2752$ =\257\214%=\225\224\002\275\010J\035\275\333\277E=\2033|<\257+4=%\004\255<z\232\031=\017\t\301:@&\225\270\277j\335;|]T<\205\3712<4_\023\275g\365?=\202\024?=\254\223+=\274\177\005\275N\275v\274A\2150\272s\006\010\2752\342\363<\022L4<\035\324\354<\364\007\001<\333\226\246;C\034\354:\315B?\275\241o\200\274F\262\'<jTS=r\330\360<s\227\235<W\302\236<\242\016R\275\232~n<-\233\002=\230\212\033=\005|\024=_D\213<\324\206\022\275\202\252,<\347\2202=\232\007\347\273\277\022\002=\215\254\037=o\030C\275\345Z\217;9t\352\272\231\347\032\275W\303.\275nT-=\307\203\017=T\236\370\274\306\342\306\273\333\251\343:\324\247,=\362\331\357;{2a<\220\033\027\275]\304F\275F J<Cg\265\273\262d\204<\324\031q<\316\020\331\274o\373\244\271S>\242;\246\347<=S(\031=\026\214:=\263\343\343\274\246\2069\275\264%\034=S\264\255\274\000\214\255\274s:\210\274\261\254\036\274\030\355\210\274X@6\274/\340\301<\376\301\251\274~I\322\274\2627\363\274L\313\020\274\360\225\227;\336\270\032=\317\177v\274\344r\223;3Oo;\034\245~<4\277\037\275\331\222\277\273\211\032\325<\251{\262\273\2310\312\274\240\250G=qV\314\274\023\022\016\275\327 %<\256\231\215<\270\360\226\274s\277\273\274\375\242\027\274\331\366\224<K\316?\275\304\200$\275\005Q\276;\207h\350<\302{\342\274q@\244\274y\336\304;[}\306<\353\207X\275}\327S\275\344b\336\274\327\n\"=QQ|;\177\236\032<^\201\366\273\271\020V\275\245BV< Y%=J+\216;\361\251\363\274\264\027\373<w\333\361<\027\325\376:\236I\243<\r\241\351<\361)X<\214C\372<:\250\003=7+\262:\203^\320\274ni\210\274-\345\'\275\333/E\275\366\210\373\2743\276I\275y\247\357<\340 &<R\277\332\271\366\333\005;\202\354j<+\351\335\274I\301W\274\2225\332\273\261\234\244;\031\341\241<\306\300\256\2733\223_<\231\016\376<\236r:=q\275\321<\021x\252\273f\000\357\274\346N\340\271\340\204\356\274n\351\032=Ks\356\273\026\'\214;\010\370\364<7\322\351<kb\007<\n\253%<\320\231@=9F\204\273B(\002\275\376\323W\275\324\235\036<9\3045=;\220\204;5N&;\'7\365\273\250p\245\274\273\343W\275\037u\210<\302W3\275\256\013\n<\252\304 \275OO\222\271\000q\312\274\246*\035\275\343\323\341\273\007_\003=.\2453=\3728Y\275LC\313<\021nD\275\265%\373\273}Y\331<\036\'\347\274\004\246\263\274\260{\026=\265\303\014\275#\036\326<g.Z\275\036\264\377<\2530\370<\202\020\236\274:\016\024=\333\345\n=c\374N\274\023\304\303<0\230\314<y4=\275Bg.=\255\236\344\274\332\363\365<4\023O\274\232\254)=\312ah\273@\240s\274\367\0340=%\003\205<|G\032=\205\320\r\275\266\335\031<J\325\207<L\037\250\274\224I\003=\262\215_;\022\005K=\372W\\=\337\255\217;\371\221\025=\374X\301\2740\354-=\257\306\247\274<\235\201\273\256q\227\274\010N\221\274\2322I<Nl\314\274gN\333\274<\262\314\274\300}\226\274\231x\305\274Mw\021\274\232\356\020=\303\t+=\034\216%\274\3619T\275\305D\023\275\005G\306\274G\266&\275\304\353\305<\354\000\274\274\235-\240;!\230&\2752\003D\275\300\017.<\366\331\004=\037\311\362;S\024(\275\202\274!=\370A*\275\351Y\236\274\300\313&:h]\262\274M\336C\273\233\002\312\273\035<\'\275\003E\313<<o\231\273\305\264\211;\261\263\257\274EA\002\273b\206\362\273\014\014[=\341\266\331\274_\346\004=\r\250G<D\0017\275\250\212\243\274\207\264\n=\307\214\031\275\003\312!\275\3561Z=\351\270\202\272_\002\206<i\030S=;\372K=\']\361<I)\010=\036\014+\274\260\352s\2742\260\233<\302\035\017\275c\201E=\344\020\344\274f\233-\275\204\245U\275\363\223!\275y\256\345\2742\2716\275\335\342\363<\242o\373\274\307\222\215<S\031p<h\343\013\275\320J\227<\371\357\024\274\272\367n<\313\0226=\271>\304<4\233\213<F\205\300<\027`\311< \0066\275D\276\016\275\200\323\305;E\275\013\275y\006\316\273i\330\246\274\244I\022\275\2274^<\250\375\205<f\313\201:\330\360\342\274\3568\326<m7%\275\274\330\034<\313\201J\275x\3363\275A\006I=_\030?\273\010%\003\275\201\365\027<y[\324\274-\264\003\2732\n\325<\366\0333=\017\223\334\273-:v\274\352\204P\275\310\241\030\275\327F$\275p\361\376\274\227\3757\275\343Y\300<\216\324\220;\250C\274<\211`\201\274\202\006\320\274iX\312;#\365\276<\351\347\370\273\032\337K\272?\222\251<\234u\\\275\013~\267\273\247\372,\275\326\2249\274X\345\237\274:\005\030\275a\365\325<\017^\000<\230\222\245<\332\275[\275\036F\030=B\021\262\274W\217\273\274\363\307%\275Gh\357\273\311\216\224<\237\211\316\274\214v\017\272W\364Q=\323\314\265\273\271\243\306<\336\357W=\372uV\275\222\277\276\274\256\001\332<La|\274\377\317N=,\337\0108\360C\014;\263K\370\274\245c9\275\212w\345\270\007]B=\334]\033\275\026\2172=\031M\244<O\272\216\274\315\243\330\274lZ\025=\325\256\014=\253\342r<5\340l\273\016+\035\275\323\242 =\375\250\250\274\337\202\014=\253\200~<4}\350\274F\336<=\331+N=\250/\310\274\210\021\347<\362\022\035\275\3344\331<\301T\014\274\354\242\364<d]t\274\201C\207\274\361\002\301;U\250O\275\234\354B\274}\367*\275\2573#=)\321\235\274\253\311\007=x\264O=\363\346\215;\315\021#=\375\342\264<\362\347<=\260\362G=\374\323\r\2756\312p<L\3546=\021\325C=\016z\032\275\370\272?=y<\263\274\242<\003\275\265\272\271\273\001\027H\275\346&\320\274\253v\335<\246_\360\274sC\371<f\243w;\206$O\275\207\316];[a*\275\034|\'\274\302F\006=q\324>\274\031\225J\275\211\260\353\274\033\213\243<\363\217\336\274N\272Y=f\311+;\334X\334\274\r|\232\274A\2269<\315\215\032;\304U\323;\373\304\320<\241!\263\2747\345\217\274\261\027M\273\005Q\022\2756\321\030\2739.g\274\257\212\303\274\373P\323\2732\2634=\227\340+<m\353\255\274\343Z\241<\340\361q<\264\331D\275\261\274C=\035*t\271X`l<\247\250d\274\203\017?=\260\353 <X\375\306<>\324\207<{\200N\275\027\'\265\274\312\356D<\334\363^<+I\266\274\024B\274;J`\273<{\'\374<$\023\314\273\311|,=\241\232\326<\3442r\274|\230U\275\tQ\223\274\030u\267<\026\033\010=R;X\275\214\353M<\033\246-=Y\373\"=5v\335<l\215\027=\213K\022=\003\315\003=\270@\345\274w}.\275\366\376\t=_\315\210\272\303Z7\275}Q6=#\266I=\377\357\276\273\024\212\257\274\364\251\021=D$k\274a\335\035=.\306\212\274>\327\306\274\237\320F=\216-7=g\367\227<&\331\2008a\224<=\310\335u\271]\205.\274\243)W<~M<<\307\206K\274\316\373\\=\016K\220\274\254\276N=\262&&<\303\216H\275]\360X=4\034%=O)w<2o\001\275\211sH\275\273\021P<\014\201\033\275\236VG=?^\314\273q\275\035=#\234\310\274\313QF\275\326\257\r\274\251\312\236<\210\210\337\274\0339\234\274\344\344\'=%\262\035\274\231m\263;\245uG=\037J\t\275\024\347\007\275\350\005I=\037\222L=k-\314<\002\352\327\274\221\373\331\274k\345\010\274\201\235\030=\000$\036=\354\025<=\245\205\234;Y\243\275\273\200\277=\275\036\246\357<$\n\"\275\370\333}<\206\250\335<F\371\023\273\372f(\275\350!\355<\213\242\313\273\000\003o\274\233]\007=\210!)=\272h\010\275\364\222\210<\204\205\240\274^a(=_C\021\2754\346\023=\001\257\007\275h<\364<\310*\302:\355&5\275\322\032A=\024\006 \275\241^\033=\272\305\210\274f]\305;/,\226<\266S\003\275\007\375G\274\265\201==\243\001\371\274\333J\332\273faB=\033\230\021\275\022%\221<\0365\242:\321\263#=\343\3336=]&W=\314&\361\273\330\241\241;\351O3\275\237E\001\275\245CV=\334\231\375\273\217\237\342<W\210\'=\347\260]=)M;\274\221?D<\022@O=\367\356.\275\235\317\005=\210E\033=\376\251W\275\233\2375=\341\354\n=\342U\221<\340\364\272\274.\201]=Q,\220\274\016\257\311\274`[g\274T\250\252<m\203\322\2742\307\351\273\001\t\302\274\202\030[=,\335-=\367\220\030<J\033\017\275\027pE\273\024\350\361<g\360\026=U9\t=)yU\273Y\214\353\274\373/\000\275Mm\256\274\007\324\323<Q\276>\2759\267\344<\375\356\004=\375P\r;gV\331\274\320\270\001\275\035\030\325\274\252&H\275\261\315\004\275\2260\325<\253\214\301\274\3040=;q|Y\275\0253\335\274\211A\237<oB-=C$N\275\256\341\357<\005\017\262:\362g\271<\302a!=E3\002\275\254\032Q\275\220\2622<\nZ\020=\257\252/\275\321LL=3\311\323\274\306\373\326\274D\371Y=\212\343\304\274\255\203\026\275e_\332<\005S\014<\334C*\2756=R\275\"\034\356\273\375vf\273\233\326/\275\323i\337<\202a\314<6+\242;\000\013\301<\215\375\255\274:\3012\275}\311\003<\377\217A\275\373X\007;v\376#<\240\346\362:\033\217A=\233\246V<\256=\033\275\361\365\322;q\367u\274=\200\310<}\250A\271\201Q\261<\271V\177\274\324\323n\274\355_\362\274G\334\341<\354\365\013=6,\312\274\005\235W\275\376\301\322\273\3250><V;_\274*=\234\272~\332W\275Nx\221;zsN=\004\210p\274\2069\034=\0053L\275\307\0220=:\225\371<\200T\030\274\324\323\353<\375\250\t\275\220\345\004==E\034<\245i\375;\345b~\274\037Zm:\356T\365\272\347\302H=\276\367U<\273!\344<\374\220\032\275\356\272\317\273\351\312\030\275\"\234\n\275\204\266(\275\335nS\274\316\266\0269<\210\002=\213GS<\216\211O;\216@\323\274S\031~\274\374\033.<MJ\262;\0055\t\275\323\220\367\273\343CZ=\'M\024\275\351\354A\275\346\260\352\274\377\360\351<\204\254A\274\203\n!=N\016O=\021\330\026=\212\210\007<\371\264\370\274X\312\\\275k\001Q<p\260N=1\320\371\274fM\323\274K\302:\275{h#\273\021\311K<\211|\034=\3212\001<J\350\346\273MY\213\274.1\030;\340_\263\274{\354\246\271\010\364\206\274d- =2\"\330;\014{W\275\341\n&=\207\235\312\274\221k\344\274\204\345\350<ML<=\267\236\223<u\0175\274\240w\305<.}G\274\037\335E=\266J\232;\313\3179:\210m\254;&\372H=uZ\335<\0269[\272\"\010P\275R\017/=\006\'\016=@\2556\274 \337\031\274\231\246#\275\322\360\026\275\21724\275\231x\361\274[\212\350\274\277Q\026=z\337\033\275\006\306\222\274\204\336\227\273\257\033X;\nl\273\274\264\310\226<\032)\204\274\232\3624\2756%\021\275V\350S=~(\230<\003\'\321\274z\351L\275\221o\266\274o\3140\275\373d\304\274\000\243==\356\037\024=\262<_;\177-\035\275>\315\\=\356\216\364\274\203\212\266<\373\353\311<\273\3623\275r\242\323\274\026\342I\275\237^W==\373\242;J\316\376<\243\235\253\274\014\365(\275\370\241V\275#\027\217\2711i\007\275\336\262\207;\255\014T=\320\325\020=\351,0\275K\244\310;S\022[\275\211DQ=\263\362\324;I=\262\274\007\254L=\025a\227\274\326aU\274\360\313\000\275\302\362\n=\002Q\241\274\33353\275\036o,\275WV\246\274Q\240@\274\004\263\t=]g\263\274W\261\026=\036\212r<\002\363^\273\005\\\271<\242\026\254\274\361\230\016=T\246W=\345\241\305\274\343\312]\275\277\323\275<\234\200\014\274\"\323\205\274%\3246=y`\031\272\205_:=TJ\037<\301\016\3049\300\354\014\275)Z8=\217]F=\361,8\275q\263)=\304-R=\226\264T<pbT=\351\3335=[\321\n\275\240k&\274\253\025 \274\'\202f<+\362?\275Y\"X\275m\377,=\ngu\273\016\251\023\274\321\317J\275B\035V\275\360D\027=\274&<\273+\377\\=I\023\245\273\023\224\022=\377\235\025\275-\025\216\274\332\357K=@,[=T\253\250<\367\314\021=\263\233\005<\034\2025<\033-\355\274\030`\025=\245\253\237\274\335\261\007\275\205\217\331<s_\245;x\377;<e\034\334\274\342 \003=\303h;\275\335\320\353\274\247\214H\275\231\213\277;\025hK<\205y\007\275\365,^\273\243\"\300<\220\013T\275\302\030\264<,\333\002\274O;\232\274\324\216T\275(\000\256\274H\242\341\273\340\366E=\331\003\216;M\231\320:w\240)=\3034+;za\001\275\027+H={\361\271\273\241\3632<\314\346\032\275Cg\005\275zx \275\335!\241;\262\366y<\r\0319\275\275\346\331\274hRE=\270u><=\265<=\026\203\032<[\232\323<\327\352\t\274\236u<\275Yf\234\274\357z\217<\222\2775\274\212\203\010\275\247\034\346\27451\027=\177D\273\274\312\004=\275\r\325\337<\376C\006:\036\363\000=\037\037;=\366\336R\2758,%\275\307\255\235<\007\217<\274\335\326\350\274\371\364+\275\255\021\000=C$\355\274\014\311?\275\327b\034<\330\326\342\274{C\353\274uSL\275\214{\360\274[\270\224\274uF\371\273\362\230/=\024\357\304\273\261\262\331\273?.#<\013\014[\2757\260X\274\\\220\277\273B\025w\273\020\250\345<\022\246]=X9d<\260DZ=}J\244\271\264\252\271<\337E.;\265\225\347<H2\302<B\204&\275\207?\356<\304\214\035\274\210\377\335\274\311\030I=\374\3040=\024\365\266\274fY/=\364z\334<\267\035%=3\240\223\274\373\311\224<\270<.=4\244\034=\304\257\364\273\014\217\374;e\374\336<*\354\253<L5\034\275J\355\236\273\023J[=\3320\266<G?\316\274W\034Q\274_\261Y;\240/*\275\270\261$\273\351}5=\331\357r<\262\347N<\023\214E\275\235c\306;S\217\321\274\251z\202<\354\257\331\273\275\365\305\274k&\t=C\234U=,\034%\275J7!<\240\255\036=\366v\037\274\351\274N\275NC\245<#k\212;\240}T=\264\025\007\275\263\361\376\274\240\030\203\273\235\243\030\275\350\341\350;\345\324\320\274\201\230\025\275p\320N=\025\204U;\"TU=\355\331\306\274\320AC<n\211\021=\332\020\007\274\311\244!\274D\332\266;o\373><X\210N\275\320\265\236\274(\264\336\274(H\025=1\177\022=Y\276\223\272\027\nH=\377\2623=\2254B=\326\267#=bK\304\274\240\276\215\274\366\265\326\274\007\374\006<5\nf<\230@\300<?}\027\275\257\374\265;*\302\324\273ve]\274\231\275\346<s\234\323<\201\311\213\274~\222\326<\267PK\275\273\"4=\002\013X\275w\201\215;10\016=lL\035=qJ$=\022I\305\274\3129!\2758\231\222\274\346\2727\273\375\340\014=s\312\"=\303\241T\275\231:\371<d\216*\275\024T\225<[\343N=5\264\225\273/d\302\273\374\351\020\275\021\272\346;\234e\340\272\342\360G;\374}A\275(\354\020\275\273\247@\275\014\0239=\341V\006\274\254\2748=\305\350T=\323\274\375\274\370I\315\274\352Q\223<\333\250\231<\004?\215\274\362\'\035\275`\252\331<e\024Z=\003W\014=\340CQ\274\262\001]\275\260\342\255;\330a^:\032e-\275&\024^=\250\213\371<;\242\270\274\010\030r\274s\033\354\274#3\342\274\320\237C=S?(<\241\367\250<\266}\016<\325\023\260<\265\235\253\274u,!=\365\271\260<\313\306N\275\2311%\275N\341\363\271$j1\275)\267t\274\220G\335<!K\026\275r\242\372\274w\341\324<\245Q%=\336.<\274R\025\346<\3618[\275\377\337D=\314\215\223;\275:\366\273\201kF=\031Y6=\250hY\274\223\203\013<\240Bk\273dZR\275\352\370\323\273\031\254#\275a\036\363\274\027Nh\274\371\277<\275C\344+\275?\332w\274\356b\210<X\274(\275q\3644<o9E\275\306\307\t\275\356\351\272\274G,\212\274\377Y\366\274\326-*\275\307\210\246;\227\221\230\2745\035\242<Z*T\275aY\216\274\350\354N=Vn~<\030j\354<\022$2=R\274.\273\266KV\275\030\201+\2743+(=\273\037<<;\215\232;\032\210\343<\370F\237<\343\'5\275\033i\255<i\3756<\234e\000=\253\327\202<\367\024\271<\017\026\226\274L3\332\273\021-\005=\272H,<\364)?=:\365\251;e\252 ;\231P)\275R\275\013=bn\254\274g\025\333\274\203\0132=r+N\274\017\372\217<\027\235\031<}~\253<=1\370<y15=a\317\260<\t\307x\274*\2215=_/\260;\273C\n\275 \302\310\273\335\203\001=T\322a<*G\243<)j\001\275\202\265\236<\2330a<^RY\2753\372K=4\200F=\232!R\275$\307\225\274\274\263\n\275\351\t\255\274\350i\214\273\\~\017<\315\r\210\273\342\342\033\275\320\340\353<\004P\026\275l\332q\274\342\265B=\251\013N\275w0j<m\374\024\275\034\035\224<\250\277f<\214\177(=\374\037+=\346I\271<h\253;\275+\177\023\275gy\232;\211\006\365\274rN\246<d\3113=Fn:\273\025Q5\275\224\214?\275\216S\005\275\031bX=\237Gz;ZWG=~4[<\032u1\274\364sj\274Q\000J\273\213\236\251\274\2335!=\320AU\275\302\352\\<\201\320\300\274s\370(=\204\367\331\274\346\247\277;\305M\031\275\317\027\007\2736;d;BS\347<\215\323\030\275|eN=\333\330M\275\361\203/=\354\363\332\274\343Q.\275t.#;u\242\344\274\307x\360\274\207$\302\274?\233:\275\247\3044;\346\2110\275\302{\356<\361\034\n=xG\'=\272\302L\275\3760\017\275\263\200t\271a\2663=\033ES\275\362\360!\2755HU\275&-\271\272z\272;\275/\276\201\2746\t\221;<\026[=\303\215K=\273\007j<7\026\311\274\312JH=lL><\366\377\030\275\2344U=&\203\372<)\341\005<\204\"\322\273\315\373\364\274\020\221U=L\377D=a\2075=\003\215F\275\231=]\275H\332[=\244f\021<)\272\257\274\246\302Z=\354c\327<\237\332\211\274\005\213\264<G@J\275#\222\307\274\335\325\322<\326\352\020;\224\316\314\274\027\021 \275a\207\273<vk;\273T6)=A\006\010\275\013-2=o\3648<\327q%=\301\005W=\300\306P=h\026$<;9k<\244\362F=5\375=\275\030\004\267\274\032\325\244:_\'#=\224\314B\275\344\242N<\265}6\275J\032J=\3201O\275\325H\256\273\264\333\002\274\232\260\372<.\275S\275o\323\276<\006\006U\275\037\032G\275\251_\033<\303J\241\274\n\274\244<\022\267\004\275:_\264\274\213\\\031\275^<\004\275Z\302\351\271\037\342#\275\354\3644\275\230\n\037\275dp\276\2729\315\013=&i\347<tc+=\025Z\340<\247\314\247\274\362\271g\274\307\375\356\274EV\000\275\371\344\346\2748\r\215\273\002\212\023\275\177\324p\274\214\250V=\3004C;4\302\341\274\253\026\031\274\007Fj<\034\266\320;g&1\275\266\270\r<\363f\233\274\013\270@\275\336L\r\275\370\243\202\274\301\370\316\274!\016U<\267\344\266\274OL\003=\0267B=\227PN\275?L\032\275\335\267E=\232\264I\275>\220+\275\205IQ=\201\005V=\332:\214<5\023\261\273\304\226\253<\031\311\331\274tW\335<@\3045\275\031\251F\274\2438\314\273\215\324\020\274\241\004@=xS\210\274\240{M=\035\032M\274\035?X\275\374\341a<Z;\036=\301\223\t\275\221\r\376\273\264\212\033=;\2535\275\23551\274`D\003\272\210\2500=\362\367I=K*\t\275\370\025N=t\032\274\274r\242$\275\232\344O=y\214 \273*\376T\274hw\315<YD\345<\211P\256<\363\302\034<\324I4\274\021\2206\275\323\343\350\274\206YI=\267N\345<4\0333=\212p;\275@s+\275\364\016X\275#f!\275\200r\273\274\2447\364\274\223\210L\275\021\314F\275\214\003L=P\317\357:9\320\365;\365\023\036\275\373\006\275<\271\242\236\274\352\245 \275\330}\247\274U\354<<\352\236>\275\302SX\275\360\261\014=\221\207B\275\253I[=\017X7=\225\014\002=\204&\\\275R\030\016\275\321\034,\275\003\235\\\274\036\355\032=\227\321\313\274\235\316\025;\277\341\026=\021S\271\274\241\013M<n\270\006\275\250\275\267\274\235v\345\274\242RG\275\277!\010=\254BX=l\202\034\275f\353@;\214\260\321\274V\205E\273\256\306\215;\216c\352\274\007\014\304\274\240iN<\023$&\275\3407<\275@\210P=\301\343\324<\272\300\202\274r3\353<\252\212-=(\301\216\274\305k-\275\250\017\343\271\311\206\236\273Lj\035\275\204\375.=xl\203<5\232\323<\276\206\350<\027nC<\300\37219\346u\210\274@\314\364\273\\\201\201<\337\332`\273\232oG=3\251C=\201b\024\275Mf%\275U>J=\331\335\\=\022@\004\275\350f#=zp\354;o\036\347\274\232\240J\275\004\202\303<\327\240\312\274\260\306X\275{H\017=\226\3344=\2474\343;\305\357\215;x`\226<s\207\177\274\260\030$=\322w\234\274\322\206\351\273\365\320\327<\200\234<\275\344X:\275r!y\2749\"\037\275\207\347\013\275\274\362\266\274\361=G\275V\231\022=}$\207\274\366f\215\274\245\253\013\2758,\032\275YAI\274,\327\312\274\315\"\010\275\371\314c\274\206\351O\275\256Z\363<Z\217\377;Pb\247\273\372z\264\272\250\211\276<\2628\n=\006\305;=B\t[\275\320\273\262<\351\212%<\'\272Y=\t\333\200\274\355A\235<\256;\252\273\263\201j;\331\226O=\tI\005<\020\332(\273>u\r\275\371B\357<\334\017V\274q\363\365<\235\247\360<\353\364\246;\224\263\023=\220\350\214\274~\305\220;c\325u;\201\262W\275.\243\027=\254CT=\032\002=\275\226\2460=\372`\016\275D\'\245\274L\006\222\274\306\374:=\364]\304<\236\204\216<\357\242L=-\360`\274\025$%\275\033c\305\273T\237*;\235i-\274\025R)\275\274\037;\275\242)\010=X\304 \275 }\037\275EI\224\274\201\246\355<\255A-\275\366\202g<\206RC\275Gk%\274\342fK=Z\313U\2750*(\272\222\025@=:\327\003\275m\274\010\275:\021Y<\017\315\243\274\265J\377\272p\303<\275\264\365K\273\376\005+\275\377\220\014\273\2150Z\275F\033\367\2749D\213<\t\253\216;#\237\244\274E#8=,p\241<O\024@<\020i\234;\270\225\036\275\010\304A\275\233*\345:\272$g\274l\202\027\274\223\311\036=\361\337\036<\024\206\367<a \232;>\027\003\274?}b\274\270u~:\201\274\350\274T\037\313\274\3700R\274\352\034\t=\276\262\323:iHA\274D\334\323<\217\257\314\274M\244\036\275\004^\335\274 \261[=\200z\036\275\244\336A\275JZG=&)\024\274\243\226\370\272w!\376<\tI\022\275\212\034:=\361\241\243<V:\230<\220o\246\274H\303M:Y\361\376\274\311\364\031\275O&\265\274e,\351<8\035\214\274\351\355A=\341\357\236\274s-\354<\n\020F<\"\025\232<\200\232\027:V\346\334\271S\305\013\275M\361;=\n\325\310\274\334g\006:\346H\343<~\262*<l\366%\275z\200B\275m\013\210\274\264.\353;\371\3277=E\326\\=en\023=\313\210\265\273\370N\\\275\344\335\261\274\020\264\270;\007\2676\275\200\337\360\273\276\361i\273\361\365Q\274\333\253+\275]\035\316<J\357\252\273s\273\217<\200L<<\265%\023;\250\357\201<\332\202\373\273xX\345\272\035-\n\275\323\257\017=ST\317;\"Kl\274\'\rf\274>\2556\275;\361\022<X\342D=\235\331\267\274Uy\026=%8\313\271\347x\206\274S^\326\274\273W%<\200\324,9\036\373\347\274\201g\311\273\n\311\256\274\222\206Q=\375\215\364<\230\033\'\275\374@V\275\261ZB=K\242\035\274\246\031?\275\321\272:\274\026|\016\275\'\342Y=\367\377\202<\263L\037=h&v<\265\026\363\274\324\010W<\013h\246<\342`\005\275p\214$\274Q\2270<S\261\352\274M\340\350\273\260,D=,\265\252<\031\331t<R[x\274.6\016\275y\016\010=4+\221\274v\377\'\274\276-&=\01339=\217\307G;P%!=\254@\232\274\314\205*=Z{O=\257\324L=\266\210\201<M\'(\275\370\005\030\275\030\302\315;\023\n\233<\374\211\354<&\023\006=\247\'\016=Q\327\270;Q\362:\275\000\271\322<\274\217|<\222\355\223:V\305\320\273yS\370\274\274vZ=\203\241\274\274$\337\243:\314\243%\275l<\365\2742\226\010=\323\016\341\274x\230\316<\310\203!\275p8\353\274 o_<\\\361\221;E\360\005=~\t5\273\344[\326<\315\327(\275Fbo<\\\272!=\014\t\033;\235\n\005\275a\263\256\273\225n\257<\263\217\'\275\254Z\307\274~\325\333\272\032\3149=\337\271\022\275\324W\260;\200G\300<\310\321\343\274:E?=B\'6=e\275.\275\324\037 \275\017\227\035\275\307\003\034\274]\356\000\275wt\267\274q\361\325<\277\274\352\274\006\261N</}M=.n\301:\035\257 \275\362\032K=\2554\003\2759\027\366\273\222\003R=[\0212\275\256\323)=[r!\275\n5\331\274\223\343\032\275\263Y\307<\325\221\005=.@\206;\236\2542\275\343<Y=O\261Q=QIG\274\274+\016\273\237J\254\274\251\'X=\365$\363<\035\342\t=\317]9\275\205a\370<\360\377A\275G\233+<\014\221{\274\020\005\324<\314\220\246\274o\305\227<\331\322&\2746QN=\210\303\213<<qV\275k\252G\2752\206\220\274a\275\260<\327\0321<\364\037-\274\220\375\002\275\017\\P=\347m<=0)(\275_a\027\275\201\035\247<\033\241\202<\352@\334<g\021\347<\212\303\341<\232\3251=\010\220\206\274\361\377 \275@2\270<:\3033\274\315\034\226<\275 :\275\262\311\335\274\034\014d\274<\206\346<H\342\273\274\207\247)\275\265\254\020<\342E\'\275o\303\336<v\253\207<\330\223a\274v\223\023=\221\033==\253\000\003\275d\224\237\273\372\031\n<\334\373\277<4\272\005=\224\225.=;\236V\275i\311F\274{\307[\275+\024==K\267\246<H\t@=\211\t4<\273\n\010=\244U\002\273\337\013\331<\2039S\275\237\303\032\275Z\244q\274\023\013\265<\322\265\032\274=\360S\274I\343\370\274\323\352\363<b\352\254<M\316\200\274\n\022\237\271\347R\t\275\276\274\035=\230k\376\274\034G\035=l\213M\275Tx\004\275PZT=t\355\022=\034\303I;@\273\025=\262f\027=\005\321\241\274\222\032\347<.\3157\275\036w\303<\374\216\005=\035d\245\272F\354\275\274\325=&\275\265\334\217\274\001\277\354\274y\354x<,\252\022\2754\246T\275B\017%=;\013\303;_\232M=\361\301\231\274\235\252<=\032\267\357\274\037\276\007\275Y\375\367\273\n}S\275\3468S\275\006\341O=d\366?\274\367\377V\275\216\206W\274\361\273\037\275\340\322\223<\023g\016=\364\270\230:\374\300\027\275/\2365\275\210\021\007\275\330\331\276\274N\227\t<\341\340<=\270K\247\274\301\322\"=\306\260\213\274\"\001A=\014\005G=\210\274!\273\316\023\240<m\'\313\274\233D\016=f\363\366\274\252\236\251\274pWE=\266u+\275n6u\2748\3334\274\230\370\007\275\262%\026<Q\245\'<\002\360\";\210\323\245;5/\005\275\326\024@=f\017&<\313\3553=\266q\";\233K[=\037\371\002\275\306#W=\217\323F\275\224\215A=\335\253\331:\331\351\321<pd\276\274j\265\275<\t\252\223\272\025]W\275K\203\377\273\256\207F=\267\372\014=\210\r\336;ZO,=s\376 \275\2059C=0\274L\273\032\035(\275<\362\202\273\027K\006=\314_\263\274o\276\321;\252\001G\275\345\366\224<S\230\027=\340\312j<\275>\207\274L\327\213<W\243\014<6\354\372;LY\014\275\234>\014\275k\251\242\274\034\270\036=\271\235\026\275\216\370S<\256\220\177\274\362L\001\275)\025V=G\302\221\274\215\242A=\020\304Y\275\235\276)\274T\211\334<p!\330<rH\320<\367\325C\2746D\215;,\r\312<\210%\030=<\031\023\274\311\215\323\274\177W\035\275~\257\211\274\'T\236<\257\205\033=\314zW\275\275UU<\220~\220\274\217\017o9A\3603\275Qb\367\274kx\366\274\033\341G=\225\227$=\351\311!\275\313\341U\275\036\343\360\274\210\\\200\273\320\202\203<H~\r\275\335bA=7\263\201\274\351|E=\231\003\213\274\317\224\314<\266\3050\275\216Ih<\346\026?\275\036\022J=\0260C=\216\237==\207P\377\274?E\355\274I>\025\275\030\211\000\275\335\001M\275\336\272\274<}\010\023\275\007]\t=\313PV=\271b@\275E$\027\275\257}\003=\266 \252\274\177\325\272;\203\3527;\221\230G\275\232\327\264\274\265\320E=\022\277\345\273\226\227\234<\212\177\326\274\214\232O=\0352Y=P.\031=\300}s\274F\267\002=UL5=\332\210\025\274\353\2559\2746A\234\274\\\004;=\233\253\275<\274\371\273\274\245d\272<\221\372\266\274\013#\207\274D\226\032\273\305p(\275\003\346\240\274)M\377<\233D\255\274\370\256\341\274\330\002\226\274\376\177,\273\275>\255\274;\267\301\273^\032H<\260\373\306<\234\340\201\273\251\035-\274h\3136\275\337+\\=\013\003-=]\361K\2758\350\026\274\303\353\345<\251\203;\275\\\017\375\273\031H\344\274\315\377u\274;\004\220<\366i+=\244\205\332<\350\007?\275@\0350\274=\267\265<{JO\275M\371\370\274\204gC=\216\017\312\274tB>=Q\255\226\274\263\003 =9\300(\2754\350\325\274\013F\217:\235\3353\275\371\272\003\275\321I4<P\244\036<\245^]\275Q\222\373\274\317\341\n\275\303\214A<y\235\2128[\235*\275\213\256E=\313]@\275\210v\000=\277\021\262;\373\370\230<\022\372\276<\224O@\275 \256\035\275\363\270B\275\274\326\303<\356l\335\274\353\304+\275\3420M=\313;\016=u\304K\274\353\253\251<\304\315\004\272\007L\034=\263;#\275\223!*<N&\323\274\334\224?=Vv\021=\365\250\361\2740M-\275y\004+\274\360\323\236\274\361\t\367\272\372\217I=\031\356$=Z\253a<\302\264\263\274\361\273\031\275\007\342\243;\037\301*\275\\\235\224\272+\033\007\2730v\n\275\341(^\2751\016\211\274GS6=+\2752=\246b\214<74\307<^:u\273\003\007\370<\357\017\350\273\277\021\277\274\034GT\275\347\355\017\275N_!=]i\000=\\{\227\274\260l4=\313R\006<\361\327\220\272A\230b<\233p:\275Q|\361;\361\346\354\273\341\3649=n\324\022\275\177\023]<[\300\365<\216\340\343\274k\006\302\274T\3419\275\370Q\252\273\271~\253\274\374\344H<tI[<\n\234o\274\273\031 =\212|\225\274T\325\234\274\342|\274<\302\240\000;\301\252\234< \256\250\274\313\271\215;_]/<\267N<=\215F1=\210%R\275\034OO<cj\314;\224Ho<9\255\332<\341\225S\275\031u\212\274|Y:=k\356\031\275\237 A\275\254#\220<\314\206\335<v\347h\273\365\322S=\267\230\026=\246p6=\026lC\275\335F\223\274\035\223\177\2741\334\320\274\371w\023=\260\215F\275|\216\020=\373\363\316:\027\3207=\316\337<\273\213\324S=\277? =\023\362P\275(C\220\273S\324\234;\030\213\374;\326p\211;?M\252\274U\336\027<a\231R=Y\317\020=p\324\232\274\2043\021<r>\332<L\362\242\274i\357$=\216\240\371\274\310i\023\275\023\244-\274\'u\006<\347\330\"=\223[+\273bTG\275\3530\241<\246\326\374\274p\'N\275\221PI=$[\346\274Oo\247\273n\311\036\275\221\201\350<jT]<\221A$\274\221\242\203<\036\347\032\274\030B%=\003 \227<\270\2549\275\177\275\032\275\204\333\033\274\341\016\272<\301\233\207:`\341\226\274\360\027\031\275\237-\274:\322\261j\274\277\017\226<\336q\337\274&5\260;\306oo;jM\276\274\313\315B\274nB\233\272\036\217\330\274\245\216\345\273\362\204m;\214H?=\354o\034=\351.\033=IP\213\274Y\3038=M\376/=\003\304-\275Q\\&=\246\272\320<g\376\324<\25743\2756\334\210<\261\257\264;\373=u<\006\201Y=\3151\037\275V\310\210\274\023X\206\274\273u*\275J\026\034\274\326\200\313\274+\247\023=\366\376[=\360\\\010\274\205*\203\274\364\230<=\006\025H\275\342s\263\273\3337==\300\341\235\274\366\247D:\266\373\026=\364;S\275\273\221X\275gG\272<\010\221L\275\364fG<J S=X\235\245<I\255\367:+\264\004\275\376D\305;\007=U\275\372\2018\275\304Y\235\274\272\261\260\274\320VY<\374\263\362<\230}\007;|\345C\275\\1\356<\222\221*\275D\017\r=E(\016=\351\020\234\274\017 V\274\006H\332\274\312No;l\001\023\275\364I?\275\246\177F=\304%\350<\206\310Q=\263\321\266;\353\0346=\313\017\255;\272\252I=\006\323\242<\006\362\252<*\263\2278\350\263\352;\342~\366\274\336\335\305\272u\277\216\272\313\345\000;N\231\014\275\321\314\023=u\350\001\275\241\375\\\275\305\'\220<\375\334\006\274Qe\030<\231\356==1\223\035\274Tl\315\274\005\034\223\274Q6\177;\253\313\334;\027,&=5\367\023=N\\%\275N$\006\275\332#N\275\002\315<\275:\206\326<\024\363\\\275\340(/=\010U\364<%\3734\2754\374%=\365rB\275\004\251(\275\311\270\363\273I\026u<\216\342%=\226DA\275\331\321\304\274c\360\034<\304U\030<v\225X=\224\251\261\2744\270\307<+\346\230\274B\3715=\274\341\231\274\036\0163<8\354\023<\326\233N=(?\204<U\2449=(\235t\274\372\310$\275Jc\320<\204>\320<\265\\S<\324(1\275iy\005\275\273K5\274\254\340\t\275\220\356\377<\310\203M\275\355\0248=\226\254Z\275\367\276&\275\352\360\007\275ch9<*\355C<\346\264M\275\243n:=,\355\212<{CF=\034+\277\274\332L0==\321M=\347t\354\274\3448K\274T\230A=\276/\356\274L\017>;Cy\252;h#B\275_}\035\275\224\351!\275\206]\034\275[\230\022=\376\255\302<-\035q:\374T\207\274M\351\013=F\n@=\300z\023=A\367\314\274X\035R<\371\262\013=+0\025\275\304\032\233<\354\207j<\234\366\017\273\302\036\000=\345\322\014\275PM\325\273\210\374\003\274<\363\003\275\275\372M\274b\256\314:\331\323Z\275,\006\032\275<\372\344<\034u\006\275\036\345A=\351\206\230\272\211%\'\275\351\222\020\275\210\335\244<\005\374O;M\231(\273&\017\r<h\303\026=\265\005\036\275\350\333\241<3\030\224\274\207Z\241<\264+5=\031\036^\275\370\315\032=\r\312\230<V~5\274(\333\322<h\207\017=\315Q\004=\367\317H=\324\301\225\274\265\376\323<A~\000=\023\357D\275\336\247\304;\177\354\023=N+\004=mS.\275\237\3533=\322+\230<%\310\200<\2153\216\274\305@6=\267\277\263\2748\265\344\274\320s\274\273\365\214\021\275\0362\236<+cW\275\242\261<=\313\031\016\275\322\3638\275L\331u;\302u\375<\352\277o\274\265+M\274\253;.=\227\305\260<\231 <\2746\033\312\274\343\375\2559\231S\253\274\215OE=\205\214H=\233r\327<\307$\371<uO\322<\251\367{;q\244\210\274hsT\275\266\252\234\274\036\355\332<\343A,\275\243\013\303<\016\020,\275\232\030\333<\334\322\274\274\343\357\271\2747B\347<\211\273Y\275\325\232\252\274\245G\005=\344\233\312<\266\345\250<\211IW<Y\305]\275\234\005\376<\037\003T\274\002\343I;\025\256\001=\014q\n=\324\260\024\275=\332)<\305-*=\333~R\275\\}3<\025+E\275\324\255O=\274ZE=\\\363$\2757I4\275\333\346\"<\025 @\275GIK;\242\216\274\274\250\261\030=\245sY\275\225\3644\275\255iE\274\205\313\n<v<\301\274L\216#\274H\247\'<\251^\237\274\350%&\275\365~\003=\245U\347<\2622?\275s\302B<\366&\t\275\363%\251<\231;.\275\363\2649\275\037M\003\275\312\3704<\350FX=\261\254\374<<\224\023\275\253A\253\272\300+\023=\267R\332<\206Q\261;\304\031\"=Y]\240\273\211Ik\274\360\225F<\277\\\335\274\211m\016\274T>\341\274O\377!=\213\274\356\2742\026\217<J\345-=\301P\002\275\023\257\341\274\002W\325\274\357\017\004=\314\307q<lJ\005=E\231\205\274\220\245\212\274\312Y\000\274\202\016\035=RTG=?\323\341\273N9\314\273pl\255\274b\"\305\274\271\362\004\275[\265\377<T\363\267<\033\367\277;,!\031=\254\340\266\274\014E\330<@.\345<\026\343q;\375O\033=x\233W\275U\366\"=\306\217\t\275i\313\254<\347(,=b\022]=\270\317\371\273\373G\262< ^\237:\343Cx\274`r\277\273\227\315\272<q08=1\031\256\273P\373v;\177\016O\274\260\030\"\275x\256/=\234\272\224<m\267-=\335]-=\220?\277<\314=W\275\265v\207\274\023\'\210<\344\027d\274\275\222\370<\366\263\341\274\305kI=)Y\027\275\312\036T=:\310\235<6F\263<\\\264 <E}b\274\275\2738\274o\325\310<\260\350\303\274\360\000$=\377\3615=\322\\\246\274\021>\002<\rFD=t\234?\275wF\002\274\311\320\226<\215R8=\332\303\314;\002\214Q=\"\n\275<\225\372B\274\n\210\"\275\001\315;<\243+(=\200\206\212:j\n[=\020\255\262\274\364\320\352\274\036OA=\334.\326\273L\347\025\275\317\360X=l\036\201\274IF\037=\025m\321<\270y\332<\275[\346; \267\370\274\236r\024\275D8]=\001\267\345\274Hw\210\273\340 \331\273#]$\275rPF\275\215@)\275\236\327\022<@#M\275x=\342\274J\226\346<@\336\246;\234\256\222\272zV\211<\250{\016=\014=\302;\336\352\236<\247\244=\275L\364\247\274\00348\275\333\223B\275\222n\260\274d\305\206<\343$3\275\335\007\377<E=\350\274\"\246\231\273\227\247\212<\202\236-<\000\216\016=y\005,\275.\226Q<\350\033\221<Z\375\035\275\017\026 \274X\333\032=\345\266\020\274\337G\210\274\016\272\204;C\377\342<,\\\264:\006\261\032\275\361\214\007\275\243^!\275\375H\264\274\n\t\010\275\261<\342<\252\257\032\2752\\1\275\213\r6\275\000\217&\275{\325J=\373\377a<\372\373\004;\022\320\020\275\261?\216\274\201\247\355<\212\306\307\273\3529\356<4\324P\275.3\342<2\246\001=\334\276\227\274\234\365M=zu\275\274[b\216<:!\034=\202O|:\2432\250\274O\262\031\275\365\227\225<dF\312<&\264U\275\223\376(\275Hc7=\236\322\t\275\360\225\t\273\312L\372\274\274\307;\275\027()\275H\311@=\200\362\312<\200\351\332\273\2121\031=\237\213\024\274\034\237\313\274\036\236G\275\331\361(=0^\224<j\204F\275\246/\273<\324\200\\<\241\313\263<\372:\247\274tp\265\274\024\033C=\002\252\333<\215O\024\275zI\'\275:\013\365;\330\027\005<q\300\225<P\217\037=\235\221w\274&\346!\275\357,\341<\37354\275\216\363\006\275\256\246\243\274\271j\311\274D\266\035=\265_\357\272V\243\n=V{k<\005\202\223\273\230:\316<\017i\"\275\220\010\037=E\226\236<<\020%=\253\363\035=\314\200\247\274\321=2\275\252\364\302<\360\277\354<\330\242\"\275!\206L=p\267[=P\316\367\274\3663\362<\275x<\275\313\024\221\274\317\262\330\274\321\343\233\274\316\214\003<\245\020\373\273Fr=\275y\362\330<\324o)=\375w\027\275\231o\253\274\275\273\332\274\350\312\365\274_j\r\275A\216*\275\355\276\231<-\3050\275\336\276H\275\267z\r;w\226\006\275\034\235E\275\313\222:\275$-O<\342\231\214\2743.]\275\'b\220\273\330XR\272\360\344)\275{\244C;&\271T=$\346\010\275\"b#\275\272\220F=\"\323\313\274w\330\355\273\204\364\003<\332\324)\275Y\300\257\274\030XZ<\350\356-\2751\361\242;\260\0164<\305\376\273\274so\\=@\202\t=\205\202\237<\213\252\322\274\332Z@\275\314\376N\275\3166\362\273\211\263\355\274\027\226\036\275\375\207)\275I\036\006\275x\351==u\306\224<M\026\335\274\013(\300<\236\325\236\274[\332S\275\260zq;\216\267\316\274h[\233\274P\350]\275\\\215\022=\353\367\347\274=\177\024\274p\2217\275\014]\363:\305\264\033\270\014\275\004\275\275\253-\273\235Kk\2727b\304\274g\001\033\275\021\244a<\367\263&=\022\353\303<6o\275\274\\\222\002\275\226c\235\274T\0235\274j\310\023\273\313\213\007=\214\2316\274\r\321\034=\276\364U\275>`\332<\220\350\230\274\260O\355;n\245\367\274\206\'#\275\367\315\001\275[1M=<5/<\221\0017=\203\277>\275\222\0021=U!4\275\021|\241<}c!\275\037\274\243\274\267\315\266;\261\337\377<\002q\213<\372\245\203\274\317\241\307<\242o\"=\227I\017\275\035[\232\273\311W\010\275\375\214\031;R\027==\357%\270\274\200n\274\274\260r5\275\265RL=\224J\356<~B\306<8G\020=M\013\333\274\333_T\275\t\224\002\273D\345\n\275Q1\273<\332\017\365\274\255\243\353\274\217\033*\275\217\322\351\274\372tI\274\310D6=G\347J\274\223\301Z=\354\264)\2757\341%=\03483<L\324h\273\302\234\215\274|c\205<\354f\\=\006\230\220\274\376\206^\274\210\035h\274\2667\224\274\027\004\302;\346\345\200\274\324\"#=\034t\336\274!>%\275\324\346\222<\210\264\342\274\024T\013=\327\372\310\274\313\210!\275oO\333\273\017\271!=@\305Q;(\222w:\215d\255<\r\331?\275\277\001\003\275\3775\255;\234\325/\275\242\312@=.y\272\274\266\037\362\274[|\342<\223\254\226<\016\321%\275\301h#\275\314\264\013\275b\035E=\323\304\331\273MIC\275@;?\273M\021\030<\"{\372\274\252\276\300;W\313\020=\2105Y=\330\232\377<\256A\030=Y\016\t=*\2755=\342\227A\271\365g\344\274\r|\326\274%f\202\2714~\007=\2556\307<\304\005\205<\201\212\013=\325\274\313<\023\036\032\275\031w\022<N\220*<NVn<Qq\005=\343>\275\274\366\271\210<Mm\367<\326\017]=\034 O=v\233R\275C\032\342\272Z\027e<\'0\177\272\003\327\337\274\362W\003\2750j\274\274m\024;=u\2366=\351|U<F\000\003=\221\254\007\274]<\324\272\217\303N\274\245\032J\275\271\335\307<\331%N\275\251\220\320<M\2334\273\006u\373;\231\032P\275G\001\013\275\240&\332<\262l\371\274\224D\014\275\036\371\352\274nk5\275\"D6=\250\305\263\274C\375\316\274\254N\275<\336\023\212\274!3\205\274\016\010/\274\305\017\377<\305\316-\275\314\226\321<\006\232\023\275\314Z\274\274\31529\275\036@c9c\340\037=\263\023\"<\024>\375</\177\221<\031\026R\275R\"\000\275\241[C<\006iC\275\3552\320<\275\014N=7-\302<4<9\275u\3113=6j0=\373hp\273*\260\226\274!\304\266<\216J\365\274\247|\272\273\022\221)\275\267\t^<C\313\253<\277\275\371<\331\357\'\274\217\241\005\275\210\345D<\371\301/\275f\334 <\344\0261\275\312\0044\275D\327w\274R\207\301;\235\351C<\351\025\003=\201\324X\274 \007;\275\300\344\020<\357\325p\274r\225\335\274\257\347\363\274\221g\021\275\025\025\306\274u\244\232<\360y\203\274\256\001\303<\210\020;=\224~*=\261HG\275t\317?\275\261?)<\030n\273<\"\333\001=.\207E\275\211\207%=Y\274\207<\342\321&\275\022\312\335<\310\236\023=\022J\010\275\262\323W\275\025\203\252\274\2028.=\217\221\300<#i\005=\232K$=X\236\030\2727\216B\275\261\251\013\275\005\t\236\274\323\315(<\271h1=\317\272\021<\317\027Z< j\304\273\022\320\256<O\006\021\275lZ\024<\037\027C<\216\362\013\274\260&\n\275\345\306E;)\017\033\275+\033\276<\360\240+\275T\330\017\275\347.K\275\303\020\034=\341\311j;)F\225<\324\002\277\274\302@%=AJE=I\360D<\032\302\265<8\025k<\313L\246\273\004\311W\274`>^=\354\234\331\274=&*=\256\010\252<\242\022\214<\270\346\326<+=H\275\333p\232\274\315?\006\275\304\241\034=\352\024\014=\330\256O=z2\273<\376\314S=\216\222 =\032\261\234;\217\257\314<\031\337W=\344\325\031<Q\007\027=\220K\226<\303R\277<8w\203<+V\013<\017\334\333;+\322\310<k\316?=\023G\317< V\236\274\223 1\275\355\253Q\274\267\314:<O\2203\274W`\027=G\321\025\275\350\357\025;\221\360U=\227\253]\275\030\244:=J\366[=n\235[\275\001 \252\274\340\233>=\234\253\301<\333\"\003\274\304\376\372<\'\023Z\275\261p\205;\270\340\264\274\2100S=\255\362\007=\007\276N=\032\000\350<\317gQ:\370;\367\274\201\206\203:\020\004N=\261\021V\275\033\365A=\027\317\300<\217\362\005<\320\214@\274\312h,\275(m\327\274\007V\027=\260\034]\275\344\031\244\274\265pJ\275\020\363<\275}\241\333\274;\364\036=\227;;=\376\342\332<\372\026\033\275\005y)\275j\356\020\275\004M\033\275\377\007\366<\373\257\374;\303\376%=\005\246=\274\226\375\316;o\033-\275\007u\'<\377\014\312\274\342\t\014=\365\034\205\2748\363U\274\352\345%\275V\377\367\274\207\013X\274\251[9=\272\024W=\r(\303\274];\303<\362\276?=\276\307\256<\243x<\275)\3728=[\206\373\2734F\362\272:n\235;72\354<\376\333\001\275\226\230\200<^\316\240<\340\014\r\275N\331\321\274\233JP=\026.b;\320R\204<\266*c<\374\236\315\274\344\004\203:\337q\377<\274\345A<\341\3512\275\314\304\276\273gw\020=?Z\037<\021\3476=\224\020H\274\253\337\267<Vs6\275\341/\370\274\234\255H<\214\002*\275\006\233\377<0\255\030=\346\311\005\275Y\331\336<\217\021\343\274\202\276.=[X \275h\235\032=\212\016M=\230]Y=\366<\230<\300\353\007\275\343\332\333\273\034\210\351<t\215+=\222\371\023\275\226\027\304\274\013uj<\215\324\277<\216-\200\274\033\305\374;\206\270\203\274(\367Z=\264\351c\274V\366\222\273uD\243<K\320 =\274\353\256\274\226\206\013\2750\014\244<\2458\013=\"/<\275\256j\241<<L\247\274\013\331$\273\000\232\212\2745\321H\275J\252\243<\236\353X\275\217\201\273<<\204\024\275\3243D\275P\344:<)\217/=\240\304\203\274\376\242\325<\371\"\"=B0\365\272V\324\034\275\334\022\236\274yH\036;X\372\200\272\002\020 =\273\227\010=]g\203<v\267@<\203\246S<\343\nP<\031\335I\275\016\2459\275\215f\370<\311\300\013\275`xn<\275F\277\274\347\'9=7C\222;M\017#\275D\351\264<\240\362\004\274\331\"/<[\3309\275p\027\020\275\332u\361;\315E\237;yuX=\022\213J=\302\233d< \2032\274\033\231T\274\000\272\245<\376\235\024<\232\276\001\275\t\216\026=QS\316\274\204\321\204<\257h\213\274!\301\005=\320\274#\275c 6=\177\321P\275\225kV;\201\274;=\203V,\275\320\001\025\275\303+J=\303\260O=\352\0002\275\3729\321<b\211\223\274\2618<\275/K\031=\322\206+\275$\'\314\273\276D)\275\305\216d\273\256\214<\275\020jM<k\253\275<\357D\306\274`.\255<no$<\301\322\244\271,WW\2745D\367<\347\3402=\360f\016=\364\214G=\371h<=\306\274\263<\335F/\275\020\314\302:\303\345$=T\374)=\273\215\022\275\272\361\304<\233\307\227<\014nS\273\200\027X=\'\216\'=?\252\006\275\346T\365<\342\257\n=\351\264\000\275\246V5\275\272\207X\275\207%<\2759\003:=<R$\275\315=\257<\236\241\354\274\030r\302<\221v\260;\374\017\373\274\342\0013\274\242\3161=q;\300\274XH\211<\024r\355\274\321\'\337\274\223\365\365\273\366f\326<\266~\230;\236p\221\274\024\035\233<\350\001\276\274\004\373\005=6\002\013=\234|\005=I6\357\274\216\206\321\273\001\367\247\274\352\213Z=@P6\275\303\2560\275|\3608=\232\316\212;\212\350\257;To\236<\257\370^\274-P =\232\360\024=[\\\300<|8)=\300\272b<<p\014\275\2236\t\275\351\276u\274\367JX\274A\266#\275\274\2301\275(\237\371\274\307\336(=\033D/\275\2636\302;+\274Z<\241\344\033\2750\274\265;~\323\365<h\023$\274\221\203:\275C\022L\275\010\005<\275]\306M\273\250\210\330:\3718\013=/r\036\2749(\266\274%\326&=Z\355G=\024\223\001=\026\366P\275\004\370\013<\227t\006\275\345\313d<\214\316$\275*\321X\275\005{\215\274\312\311!=\"I\317<&\031\201<cY\'\275\276\317&=\016\210W=j\330\355<{\265\034=\370du<\'\275\365<\301$.;pc\006\275K\035s;\232\'\024=C\312\330\273\\\260#\274\336uq<\372\311\314\274\254\230\031;\263\3123<\225\366=\275\276\255\003=\232\204\022\275\t\265==n4<\275`T\005\274|\236\256<\263\242\264<nC\025\273)JY\2751\243X=ab\035\275\376\264\321<\007\313\037\275\330/\n<\n\235Y<\'\'\013\273\360.\316<\211;(;:J\231\274NEv\273\323\301\020<\276=\216\274\315\177\035<HnH=\nZ)\275\\\033\367\274\023>P<_2\360<to\340\273\267\207X\275?>p<\366\306\250<\341M\037\275\010\3756\275\277@0\275XF\003\273[\243\213\274@P\033=\276\364\010=\3528\352;\216c\350<\215\374\252<\031\365[\2750Q\373\274/\303\226\272c/\261\274h\325\241<\347Jd\273G\017&=\346\r`;#\215\207\274\340\352\274<\354\226\230<3\377\304\274G\235\245<Z\037M<\377v\324\2741y\341\273H\226\264\274\312\003.<GbY\273j\036(=\246s\371<\246*\225;q\200\334\272\"\037\r=\212\252\252<\255\210P\275[\322\256\273\256f)\275|\235-\275WJ\267\272\254\373\r=\037 ^:\220Y6=T\252#=s\223B\275\372\252\210<\220\306I;\267\337\321;x\341\002=\223-8=\377/\310<\025\031\n\275r*e\274 )\234\274\364tH\275\217\240\'=\303\333\342\273\301\r\000\275T\031\346;6\216\234\274\226\020u<\025NT\275}\340\n=E \277\272\323\371\022\274_\241\310\274?\'\027=p\'\036=\340\037S=|\006\327<\301B\t\275x5X=\212\n0=\372\367\r=\232A#<$\322\025\275\256\336j\274\'*\034=\252*\316<\t\363\256\274\236\314\031=\333\220\016;+SD=O\314\252<\032\205G\275\253\365@\275\310\341<=^\246\204\274\331\370\320\274I\253\010=\023y\220\274\363\335 =\372\033V\275\353\337\316\273\022\301F=t\3747\275\331a =O5\240\274\316+O\2750\021\271\273j\364I\275tA\322<}%\365\274\t0\250;\354\210h\274\260(1\273\3059\315;\366\242\024\275\252\237\'=z\340y;\000\203$\275\327*\210\274\2311\027\275w\007\"\274W\373E\275\234\t\002={\320Q\273\3243\023=\'3\355<\373\001\003\275\370\352\241:\346\265\301\274k\030\240<\216\213A\273\2408\271<\001\332\371\274\315F\365\2748\022C\275\216\2058\275h\246\214<\177\244V=U\311&=Y9\326\274\017\037\254<\030\357\214;\263\234\005=\016\374\347\274\244\360\201\274k\257\310;t\220\255\274\262\325=\275\226\223\320\274\3550\301<\333\207\346\274\201\321H=\377b\027\275x\002P\275e\225\024=\t\254A=i\344\024\275\355\000P\275\221\256B\275\367O9\275[\370\013=\037\025\374<\0209\266\273\215\306]\275\356x?\275\355\033*\275\352\3055\275YBH\275\203\2445\275d\353P=;G%=\231v5<s\3462\275\274\377\370<:\037:\275\234\377\367<\221\266\237\274\014\240\322\274&@\306:5\312\350\274\273G=\2758%\007<\337\333\344<8\362\033\275\343\222\214<\341\370\340\274\220\264=<\267\301-\275\036_\370\274\214h\2728\214\330\332\274\221\246\350<\003K\245<\334~\373\274\207\355\031\275tR\341<FC5<H|^<\312\323\255\274\320\265\\\2751\2442<\232\352\020<\212\262\033=\206_%=\031\377+\275j\371\337<\377.\275\274\265\t\273\274\375\370\016\275\035{#=\314\343\200;+\334=<si \275\324o\215\272T\037I=\242\036g\274\244Y\237\274\202\037\006=\216P\335<{\246\356\274e\347\004\274\234i(=<\271:=\023\235*=R!\263<B\2134;\"\261\346<\207\355\336<L\177\327<\222-\335\274\032\322-\274\254\002\223<X\244\275<)f\307<\022\367\031=\273\177\367:2\"\022\275\335*%\274o\007\317<X\200\n\275\341Q\373<\005\002%<\255X\n\275-s\n=\316o\n:Z\037\350;\304q\215<\337\0003\275\312\216\336\274wvY=\342bG=\262\277B\274\215$\243<\276\302\001=\314\273?\2757\357\320<\0250\205\274B\032*\275\334\316B\275\020o4\275\276s\002=a\022c\274%\336\362\274\247\270\264\272\000\2536=\274\001$<~P(\275\203\340\262<Hv\003;\245\344\007\275\320\007\234\274z\317L\275\270t\360\274Q\2633\275w\031\363\274\221%3\275C\206I\275\304\360\270<\246\306\237<\3124M\275o\231\036=\364\200B\274oF\227<\032\221q<\377\352\311;\206LX=\253\215\017\275\003\261\231<\014\2148\275\334\216)\275j\025\002=\246\340\022\2752/\375:R*\027=D\262!\275\373N;==\211\204\274\271\021\310\274\344\302P=\005\375\200\274\267\255\323<K{B\274\236u\267\274\332\273F\2759\221\330\274B\364\031\275\247\341\322<\030\211!\274\315\221\240\274-`3\275\342\210\031\274lEN=\326\303o\274\000\005\367<W\037\205< \263<=E-\351<\247\350\220<\213:\037;\324\2311\275\366\311M:\230\335]\275\3407\370\274}O\204\274o\341!<Wt\030\273\222\307O=g#\224<\014\260\036<\353\213:\274=\256\t\275\301!\343\274\205\n\034\275\255\271\016=P\333\254<\302m\016\275\001}3;\343\205:\275(4H\275\273\211s;9`\357\273x\362 =\242\315&=\360\241R=\254\270X\275\261\360\301<\324rA\274\360j\025\275\225\032r\274\354DD=7\"O\275)c\"=\376\377<\275\247\265\r=\216 \211\27426\363\274?\022N\273\376\315G\275]\305\313\274\334\230W\274\354=\271<(\3209<\351\3054<!r\026<QeR\275;2\347\274)\317\246<=o6=@r.\275\233\217\002=.;\010=\230\021\240<\325\310\222\274\245\315\006=\300\235\255\274\256\224\014<\353\215<\27474\275;`c\250\274\302\204+\275\021\216I=\036kK=\375\013\014=j\244\211<\243@\271\274\373\257\233<4\337R\275\006c\271\274\274@O\275;\364\2569\257\226p\274%\262\022<\271BZ\275\320\252@<>\312\036=\202\nb;\244\212\361\274.m6=\344\006U=^\202\344;\353\305\325\274\032\257D=\202\250\001=\314Q\036<\'\261W=\266\302;\275\347\232\237\274{\2043\274Y\001\024\275}\2354\275\333\240\317\274\203\320V=\324\0275;\352\274\246;J\276=\275\320\235]=\326\356\275\274\314\330c;\372\347\361;&\275\"=LkL\275\374\201\024\275\275\3047\275vox<\241`2=\364-\260:r\032\324\274r\225\004\275\342\274_<J\240\275\274\211>\035=\263\233\313\274\006\342\320:\207{\255<\237\333\013=[\317\320<e;W\274(JL\275@\016\000<;\016\335<\203\354\"=I\027>=\014\2305\275\334\021E<\244*=:\220>\0209c\247\002\275:\220H\274\000\321\215\273m\'X\275\301\026&\274\235\303I\273\317\214N\275?4,=\254\021\257;\322`\006\275\256\360]\275\366\'P=)\005\256<\250\200\204\273\025\357\376<\3427\014\275\324\364\370<E\037\202\274\325A\2049\266\033\245\274\333\030}<J\325\003\275_\315\252<;\340V\275A\247T\275\352\352z;\357k2=\246cE\275\367\240\016=Q\262\207<\004\233S\275\302\201\231:\310\204\236\274G\251\340\274mk\037=\225\263\212;\263][<\200\212\036\274\017g\334<L\235s<\213\337\t\274)\2308=\324\0373=\004\234\370<\306v\001<\221\1772=a\324\331\274\321\203\330<Dp\331\271\263k\031=\324\371\324<\324\005\310<.\207 \275\257\301\371<=\006\345\272\362|\325\273\003\201!=\021\321\014\275F\232\373<\264o[=\334k\230<-{,=\303\322\333;\376\n\030\275K\200\000\275\007\200#\275\376\3117;\001\373+\274\353\373\343\273*\250\024\275\305\0342\275\305S\232\274\025\326\005=\245\316\010\275\312k>\270\352Y);\254\272\361<\t\271#=\312\273\206<C\374n\274\035\177F<\005\232\233\273\3251\355<t\207\212\274{\266\002\274\225 R<\274\302};\331\335I\275F\361\002\274\334?\234\274\267\306\001<\221p\021=\370d\232\274to\334;r\026\252\273\"\332\'=\023\201P;\327i\320\2738!$\272V\232\030=\206\207U<\215\312?\275:\rV\274\203\220\300<\344-\241\273p\034\215;\206\322A=\323\233&\275\" \233\273\364J\374\272r\005(\275_\305=\273\373\256\200\273\002/F\275o\251\243\273\302\354$=w\200\237\274A\346\304;# \001\274{\324\354\274[\032\362<<\377\242\274\304\\>\275\004\004\216\274OQ\367<E\004\016=\247 n<\223v\022\275(\017\025\275\272\034\\\275\006~$\275\357XQ=\345\311?\275\001v{\273\221\307\010\275\005S\t\275ZEh<\327M\014=a\210\276\274\327\270\032=(+\221\274\307.\235\272\374B*=)C[=\034K\233<cM\032\275P\0376\274\037\220\253\272#=\237;\223\201\016=\002\245\013\275\255bV=#g\241\274\360\234\230;\030\237#\275\355uD<33\021\275E\260&\275\344\021\305\274U\271J=9x\310<\300\302\"=\321\236\021=\355/L=\371\025\031\275\233DR<&J\206<\226m\303<\315\017\376<yB\243;Q\200\004\275\366\365\026=\370)e<b\302\"=!\217\226<\355\017,<\231M\226\274\316C\020=)QE\275\257\373\361\274\r\373\006\275\n\002\035=.\217\362\273\036\337%\274\002\261\207<(F\036\274\212\363\224<8\342V\275\324\025O<\343b\217<\302\375-\275\375\3753<%\367B\274\223\264\006\273\014;C\275m2\034=0!Q=\317_\024=\004\335\316;\212\\1\274Y\326)\274;\222T\275\033\357\\\275M\\\265<\256;\262\274\273\302(<\205?~;\316\024\356\274 \363\333<\202%\020=\035%W\275\270.\312\274\332\0230\275Q\326\225<q\0304=\023\225C=\206\256Y\275\242\210-\274)\332\345\274[\267\211;\322\034\006\275G\017A\275Rp\276\273\367\177\365<g\256\347<~\254\'=x\326Q\274\330Z\271\273\330\255P=\230b\226\274\310\301\260\2746y\317<\227\017\361<<\031\257;\273\327\270;\243g/\274\'S\352\274\022\034\333\274\300\376\006\2758\250\315\274\243\017X=\035\340{<\333\201\374\274E\202W\274\325\210\035=\334\036$=\343\366!<\277_#=\234YA\275:\245F<s.>=\017\023\017=\247\021\212\274i\357#=\2078\025\275\256:\371\273n\237\246\274i\234\307<\360s?\274\031\375,=\357\2535\275\374\303\345\274RK#\275\3145\014\275\3530\227<\214\t\320\273%a==\024\272\355\272z\220X=\215\316T\275\241\373*\274\252\346\003=\205\301\247\274\215E\177\2746\257\224\274\014,I=y\024\364<\320Z1<\022\373K=\2760\347\2734\031\274<90\353<\306m\277<!8I<\221\211\020\275P\231\227<\341\n\000=6J\370<\243\343\261;\332\250\344\274\257\264\277\274\302\344{\273\020`Y=j\211V\275\335\335W=a\304\025\2757\357\r<Ui\226<P\320\004=tf\034<\0054\255<Z\220\375<T\204C=\016\3321\275\236T\005\2750\251\237<0\221\320<\037\2613;\250\250.=\305\t\256\274\302\312W\275\372k\234\274\201o\362\273W/\261<V\027\227<\276\307+\274\300Hy;\020\003\017\275~\023\250\273\343\027\336<\314\023\303<\231\276\303;\210-K\275.\225\027=\320\345\"<\016\016.=\00417\275(\262\n\275\261\'@=\215Z\256<*93\275\256\360)<4k\034\275\035\320\004\275K\375\257<2o\354<\343\007\313<\321/4=\312oG=U\370\256<\263P6\271\376\372\023\275CA>=\237\340U\274\261\323(\274W\201\376\274\332t6\275\341\357*=\201\211S\275S\016\216<\305\255\211\273\273\207\007\275*I\257\272F\321\366;\351\231\223<a\342V\275\266jH=\236\t<\274\364\357G=\033\177%\275\tW\336;\031\306\303\273\214\3643<>\001J\275fu\223\2732\341\206;\236C9=-a\352;\355\234\022=\213\234\022\275N\0323=\272^*\275s\200\022\275\362\254,<\263\273+<\031\201S\275\364\032\202<F5\\=\032Y%\275\261e\251\273AwB={\221\207\274I\241\264\273\243$\030\275\240\002a\274\225\334\300<\320E\017\274\200\2446=\333U+=\274Y\360;f\221\234\274@F\006=l|\216<\241\334T=-k\014=\200\373\257<\265\244\016\272\250\310S;\2561\250\273\235\225H=r\350\327<\320\027\260<\306K\321\274\000u#=\216\357\211\273:\226\336<l\227+<+\030/\275\216\334\220<1\026\225\272\375y\275<\304.-\275:\346T\275z\236\025;W\313\022=S\004\017=\334\tI=3\234\027<\204\371K=ro0\274S\215\273;\363\007\002=\347\361\312\274]\347\276\274\215\326\010=\301\036\235<4\306\036=\225\224\205<\256\251(\275\316\235E\275{\t?\275\000\336$<F\211\t=hX@\275\333\236\023=\320\242\203<=\236,=\270<\353\274l\2528\275\304\206\036<\272%\364<\221\034 \275\205\001\341<[\352\006\275\256X8=\362\027\227\273\006\267\376\274\335\017%=\1771\343<\'HB=}\333\227\273\005G\230\273\366\373A\274\tcJ=\372\320\325\272\264\215\225\274A\313l\274\347\224c\274L:E=\037g\r\274VX!=_x]\275pl-\275)m\037\275\375\212\313\273\260\n8\275\324\330N=\367\025\344\274O\233\017=\004@\023=HoO=\030g\320\274\375\031\257\274e\335S<\272\241\231\274\333x4\2753v>\275ju\'\2742\033\037\275\273\234\327\274\343\277#\275\0016\000<\245;L=\252?\022=E\001A\2751\214P=\234\021\201\274\220\2767\274\0339\261\273e8S\275\332\2700=\302\225!\275\026y\301<\022\323\224\274\313<\034<\351 3=0\222\031\275\nA\211<\250\302\320\274\022i\355<\010\333\344\274\303\343\3519+\324\347<F\223V\273\323S\362<h\350H\275\206:>\275\320(d\274\221\304\r\275b\257[=z\342\241<\240&\276\274\342\226\250\274\032\304&=\252\001L=\t\333\306<w\037\251\274\341\266\314\274\031\362U=\007\nA\273H(P\275\231\320\311<\003\347\262\273H\024\202\274_\001[=\224P>\275o\322I=\315R\260\271\225\366\037\275\005\264Y=\302\345U\275A\371\370<(n\022=\004\1779=Sg\004=\2479\243\274\222j\000\275\272\246$=\026v\264\274\0044k\274\350\331\260\274\350M/=/\024x\273\326e\231;\3336T\275\210\212\244\273\273\345\"=3\261\007=\342\013%=nN\r\275\264\351\001=\217\210g<}\002\212\274Rj\016\274\204dI=\021\375b;\357n\312<\354\230\340<x\241\375\272\312\275\326<\233\013q<\375\212\024\275\021\023\333<\206\347Q\274\014\360|;\032\022\323<\344\0347=\315q}\273Q\374\232<\350\337\220<y\033\010=<\340Q\275\227\301I\275\200\201\023=|\375V<->8\274\333{%\275\320|\031=r\205R=x\264D<\224({\274\303\226\276\274\017\315&=\371\3311\275f\000\034<fYD=k\3064\275\307X5=\311\256.\275\234q\025=v\262L;\013\3609=\234HB\275x\217\361<\336\206\023\274\314\005\036\275\2539+\274\306\010\304\274AN\033\275Q8\255<\222AH9\010GK\275\351! =\327fL\275?+]=\216\034\014=q\370\340<\304\335\207\274\203\021\230\273\3624+=\030\342\367\272\301s\001\274\t\322\365\273\214\327\273<\311\002\220\273\031\342\220<+^\016\273\303C\247\274\237\343\324\274\275.N\275v\0058\275L\0174=F\355\006\275\r\345\202<\215L\231:\210\365l;\337\007\3039\252J\\\275\021\353\334\274\246hA=\224\305\356\274\010\221/\275\2614\267\274\374\240\002\275c^\002=)\232{;x\036\245<\206\225\017=X\231E=x\277d\274`\' \275\367\236\031\275\313\0336=\306\257\275\274\327\210\251\273Y\324\362\274\322\345A=\343\035\014\275BQ\220\274\017{\200\274\036\344\010\2749\373\245<\266y\312<\203\207U=v\324$=B\210\246<\302\357$\275\332\335?\274\204\240\222\273s\032\006<\314\216\235<\030\346S=\"\352T<\242\222\014\275e@\270\274\377E\343<\302\310\242<\373p-\275Z]\026=*a1\273\366\\\265<\006\240#\275\316\344:=<S\010=\315\000S\275\t4\r=^.\037=\010k\003\275\025\n\332<\022\3123;\022\2454=[N\270\272\303\032,=\227;u<:\021C\275\032\234-\275\017\273\233<|\277\224\274ew\310\274\265\373?=\247\247\214<p\326#\275\202\252\036=\275\220\223\274\206\'.=\251u\001=\007\211*=+\213M=\275\230\261\272\230\345\035=.<><8\206\332\274\001\0021=\254ZQ=\356\365\353<S\210*=8G\032\275\321\322\345\274i\205\334:\256oY\275\026\360\305<\343\347\210;\331\037\006<g#O\275\364c\020\275j\353l\274r+I\275$Q\006\273a\235U=\323\333A\275 \347\366<\r>\206\274\352\335;\275\0337=\2757nz\272yH <\2759\230<\262\363\252\274?\222\222<\352\233L=\357\304P=X]W=\200wF=\241\377D=\276\351\n\275]\022\373\274>\263\243\274\214\367\266<\217\207\022\273\241\3635;\302\301\255<\224^\226;\370\007\330<\247sM\275KBU=\3073\200\274\t\247W<\316\341{;\271\035\307\274\201[\022=\324\317\244\274\340\216\212\274\300=\337<6\246\210\273\377j6\275\333\340\377<\256\251\010=\343\376^\274\314\323\347\274\225\242\025\275\321\333\310<\222x\021\274\236S\3019\375gM=8\3058\275\242\376]\275\266A\203\273\3208T<\\W0=%\271\221\274B\232\253<\265\3650\275\332\271c<\004\300%<\007\205~<\030\361\013\275\223\273\242\274Z\030F<\252tK\274\033\365\347\274\"V\017<\343\346\025\275>\254\221<\220\016\360\274Q\000D=\327\014\030\2752\355\023=\311D6=\000wj\274Cs%<\0370$\275\240S\260<<\"\352:\001\213\334\2732\302\275\274 \232\r\275\300\335\272\273\034\377\022=\tZ\016=O\020\261<^\332(=\010\004\\=\371\"\013=|\213\025=h\002\233;b\246\300\274Ah)=\017\341T<\033)v\274d\233\321;k\277\246\274\026\246\027\275o\006/\275*\2327=\203\t\374<\324K\327<\303x\000\275A~\376\274mx\006=\033\006\225\273\354P]=`\367\345<z\270\245<Qm\\\275\007\362\345;\216\014*\274\262\202\227<2x\247\274\253G\370<cBU\275\356\024\231<4\211\234<\017N&\275\337l\030=\257T\r\275\020h\322<\271t\026\275^\007\355</\340\335<\227\034\317<\006\255R<y\233\\=s\340I\275\021\256D<RVk<\223\200\\<\001\331\n\274#\001F\275r\352\265\273\277j\377\274nb1\275\202\365V=\267g\013<\255\002\223<g\026\337\274;K\261<\205\223\361<\352\237\366\274\200\'X<XLH=\356\255d<U\0308\275\206\273\243<\320\345W\275\261_\267;\271\243\304\273\3123\227\273i\373\377\274\010\202\035\275\377\361\351\274g\306:<\221Y\372\274pn\205;f@R=5\216z<\320\342\022=f\262A\274\223\2213<\033\337\340\274\341\334 =\3029O\273\032aC=\235\333\345\274\330Z5=\345\267=\274\261\302\032<\216l7\275\342\254B\275\023 \'\275\202\375\373\274\272\004*\274$\0254\274A\362\002=9\013\360;[\202\307\273\235\010\225<\371,\333\274aq\301\274(\242\037\274\022k\243\273\326\210#\270\370\214\033<\202\215\307\274u\346\241\274\216/1\275\363\363\343\274\030QQ=\024 \321<\307y?\274\034\n\202<i \204\274.\242\220<\232\225\242\274\"\017\361<5\2076=x\330\t=\263~r:l\207\035<\n\352\202<\342s\013\275\034\000\001=\rJ\314\274?\306\032\275\021T\230\273\260\255Q<\235\3550=\205\325\330\274\2233\030=\325*\002=X\007\214<\203wD\275\321\017n</\260\370<\037ae<C\250\016<\200U>=\313\025H\275\321\034\373\274L\177m\274\017~\232:\303\362\023\275\317\376\254\274B\236\374;\244\347H\2721\005f<Y/\204\274\242\007\326\273\202\327\221:\217\270\000\2750\277\305<\342d=<\236\210\267<\003k\020\275p>/=\354V\240\273\021\213\021\275\232i\\=/M\211\2730\361?=\274\033\177<0\255\354;\270\231\003=\243\266U=C\360\312<\251\265\370\273\313Tv<K\374\002<h\251\036\275b\337H\275\020\234\0316\262\345\014=\363>\315\274E>\007=j\336$\275Q\320\005\273\r\347\275;0C^<\366\213*=\354\000\002=\244\372\366\274\017r\020\270\241G\217;\307\341F\275\316\272\004={\004\341<\313\252n\273/\274\224\274\302\237\t=\245\006z<u+[\275\324\020\t\275\000`\307\274\244\210\003<\215z\r\275\377\010\362\274yD\033=Yf\236\2743i#\275n\316H=)PT=.\246\234\274J?\031\275{\327\310\274\036\214\002==\247\311;\320\333\333\273\364\2414\275Nf\241\274g\213+\274U\036\342<c\342<\275=~\020=:\302;\275\353}\302\2749.\031<\000\304Y\275\016hH\275s\026V=xn\301\274\024_\r\275?\237\006\275\'\031!<u\017\025\275w\372T=US\340\274\232XY;\232m\344\273\222\023\017=\350\035\316\274\014\211W;\275d\202\274\340\020\356\274RN!\2734\021\271<\031t\203\274 \240\004=\247\267\206<\227>\035\275\343q\022=tw\013\274\355E\017\275\th\355;\233\242,\273[\r\352\274AsQ\275\262\003\005<\377\212B\275b\325\227\2748\340\313<\314K\374\273\311\003,<\344\377\226<sr\013\273~\301\363\274\003\\\250\274\214yJ\274\023r4<~\364>=\300M\344\274\226(\n\275\362\000\r\275k\372\257\274\211!\257;\245\254\376<\007\001r\274\2219\036\275\214\025\305;\255/\202\274I\261\326< \212\005=\177&_\274(b\363:\305\244\277\274\200\233\r<\246>\356<\264\3771\274\241\214\256<\314\"\016=\354@%=X\010<=\016\364\313\274\321\302\210\274\025J\257\274\345\277-=\t)Q\275Q\231?\275\377\202\274<\324\333)=\266\340E\275\017\273\022=\342n\233<\013\227\306<\270j>=\326\321\361\274G\2059\275\327\001\026\275K\"\r\274i\213\213<\225\200\006=\377&k;:\232\241\273r\221\352<*\375l\274z\004I=\271\266@=\337\005\324\273\352\245\204<B\230\252:*$-=\374\\J<U\0378\275(\017\010<\036\345G\2758Z)=\034\334\007=\347\017\326;\240\350\373\273SA\365\274\026r\030\275F)\212<\335\315\352\272`\031\203\274\202\316$=V\t5=!\321\016<\355e\031<\337h#=8\nB\275J \261<\331X\305<P\010\305<\240\345\270\274\262\317\231\274f\027\006\275\221i\375<\337\303[;?\250\357\274\217\317\214\274\254\326\334\274i\362%\274\341.F=\320\247$=\002\250;=\035\204G\275T\206\036\275\244\357n<\272=0;\204\311\266<\303\270\336\274\247}B=\263\377\"=e&\001\275\242RW\275\1772H\275\036\035)\275e\361\022\273W\263\220<\264\351$\275X\221A\2758#\316<\321\326\330\274\232\337\005<j\326 \2741\252e<\203\016\301<A\360&\273y<=<\351\313\360\274\257:\365:\350+\336;\212\241&=\023\200\320<\305\332\223\274J{\r\275<\215\333\274TV\207<,\257\031\275\341\2559\275\256\201I\274\263.\255<#\336\036=\222\311\320\274\201\2469\273\031\017\031=\363\337\254\274\312\312V\275}\347\361\274\377\300X\275\3375\007=\226\264\013=\267[U=\030\004\221<L\256*=\224k\331;S\320\237\274r\2563\275[\023U\275A8\264<@\323N=\374 f\274\017r\230\273\243\036I<\276\250\313\274\300CZ=1\253)=Bk+\275;\264\235\274Yn\234\273\251q\"=|\274>=\225\0308<\034\232\321\274\242D\316\273k\3026\274n*\246\273\300{Q<\330\267\211\274\337\275\304\274\232\375%<\261\2709<\305\002\212\274\300\025\234<\006\221M=\025\353\031:p\262\372\274\274VS\275\354\256_\274\273\032\035\274\341\227\244\274\227 C<\363]\010\275|3\233<\326\202\351\274T\325/=\325*f;\355\032\371\274\177\271\275\274\220O\020<\177b\237;b=U=\217\362\320<\0346\353;\222\203J9D\001\257\274\270\215M\275\362\350\363\273\022Y\204\273\204g0=\317T\312\274o%\024\275\016\031C=\3535\244<X\273\017=\007\033\261\274\233u\254<\001\217\233:(\223!\275\260=^\275D\032X=\212\007S=1\036\271<d\232\025=\252\323&=\205\226\241<\253\255\253<M+\036\274oP\n\275A \3239\343\250\315\274IJ\335\274w.\325\274X\251,=\333\324\201\274\205J_\273\316j>=b\341\245<I\237\317<\367k\302\274\033\300F\275/\342\267<\362\357\356<v\276\222\272\231\357\034\275a\204\021\273\271\026\255\274\307\035\362<\001\206\365\274\263\301\271\274`\234#=\307\310T=^\010\344\274\264\233]=p\017\352\2746\365\026=C\324\301;\376\037\254\274\222Up<\r\272C;\266\030^\274\232T*<R\307\032\275\226\360 \275\271\324\253\274B\350#\275\017\345n\273%j\177\274\331\2401=t\002\257;\366\231\330\274\302\007N;3\364\245<O\206O\275D\017\020\275\032\231]\275\216\347\205\274\270H\000\274\377\374Q\275\013\312\013\275\023\345F=\007\367\033\275.@\020\275\326\375\\=t4\032=\226hR\275I\267\217<\206\377\334<\020\206\213\274\264$(\275|\263\177\274\322`\267\274\326\270\235<\310\036.=\000\342\303<gt\266\274\024\277\340<\337\341\202\274a\222\272\272\357s;=#\220\323<qm\310\274\272n{\273PhO\275\n.\201\274\003\256Y\275\307\253@\275#mR\275\332[k\273\nQ\032\273!\245\026\275\355z\352;\251P\330\274\303b\036\275\365L\230<\006\370\260\274\322z\001=\364\2464<T-\257\274g\020\023\275 *&\275\373\366\026=D\275W=\337_R\275u\373\327\274\344z)\274%{\245\274\273S\002\2754\007F\2756\334M=H\360\233;}E\311;\277\313\205<\2033\006=J\026A=v4Z\273\345\366&=\347\023\023\274qy\200<e\221&=\376\265\036=J\013\t<3D\371<\377\003 =\325\014<=\313j\226<C\306\243\274ZZf<]\267:\275\343\257p:\204\301\r=~\325\341\2725\370\021=\225V09\317!\256\274n\376\344\274\260\321\014\275\335\010\025=Ub =\251\365*=\364\207\2609R\222?\274(o1\275\177\240\215\274\34601=\025\216\233\274wI\231<\243\007\240\272\'S5\274\212`\207\274\236C\321\274 \331\361\274\242H\022\275(\231\234<NW\341\274rd\312\274\3438O\275\310\246\235\273\333\361\004=oD\301;\244\277O=j\237\361\272n=A\275\236\302\363<t\027\037:\024pJ=3]s\273\030\031\346;f\213\343\274\224\351\305\274[y~\274E]H=\217l\325\273\207\270\324\274sc\236\273s\257\250\273%\031\217<\323\365\261\274\006\002\002=\372k68qF\364<\316z&\275$\200[\275\335##\275\242?2=\245\\6\274\347\017\242<\211\335\237<\302\310X\275\375\254V=\005\265\013=;\034\010<\256\270\r</\017n<\325OJ=\234e\274\2745m\340\274\356\333R=|mm\274%\305\227<\265\n5=\241&\025\275\266Z9\273\220\022\004\275\205\374\t\275\373\340;=0\321N<k\273\221<\221r\277<\352\344\231\274pc\023=y\010\026=\213\267\362\274B\324\316\274=\021\267\273\350\241 \275z\2631<\246\364e\274\264\376\001=N\242\003\275\217)V=\370\215]=B\207\005\275\225I\241<\005.\313<;\214\307<i\026\262<\221`\357;\365#\002\274\314\000@=\277_\315\274\001G>\275?\242\177\274\335\"\313;\270\342\301<\342\256\265\274\217^[\275\323l\003\274\247\313\003\275\034;$\275xa\264<\312\367\323:\333z\263\273q\341X<\264\262\030\273\241\201\037\275_\205X\275El\303;\2070N<\261\243\035=k#.\2756\024T=\206\333\002\273U\210I<\037S\025<\303\2205\275\031\374\250<\276\035\336<}\220D<I\346\323\274\231\335\240\274L:\233<\337\350\342\274\350Ij<O\213q<\257RX\275;\273\025<\263\216\036=G\316\316\274]\"K=\031\350%=\310~\340<\302:\342\273\000\201?\275\0217\007=\024\254\010\273\330@X=\212\224j\274\3543M\275\320~\035\275|\"V\275`\227\024\275\206\242\001=\030\020\351\274{/\360\274\307|+=b6m\274\213\205\213\273\306o\202;\020\254\235<?X\257;\201\n\227\273\344%\241<\370\035\"\274\330\352`<W\236\r=\303\032\232\273\317B0<tnO\275\222\3344\27586\372\274\224\226\"\275,\207&\274\023\017\016\275\344I\226<F\334\205<\252\277\303\273\'C2<\236\370\345<\323\003\030\274*\315\265<\206\222\237<$RL=b|\364;\350\3025=\220j[=\255\270\021\274\230\212\334<\302\"\241<\033\377+=\013\2667=t\317\204\274\002Za\273\316\026\331\274\302\0367<\354\224\034\275\036\322W\275\316\n\224\274\337\254\306<~\263\261\274\226!\013\275\326!?\275\342\366v<9 Y;\322\227\006=w\300\272<\350\2605=$\240!=J\2125\275\362i\250\274\265\241D<A\351?\275\021\001\375\274\251}\267\273\222\337O=<\257\032=5\014T=\t\337,;\177\307\035\274\005\205R\272\333\373:=\'\255\257<g]\n\275t\331C\275\304\221\321\274\237\340\364\274*t\016\275\331\374\027\274;\375J\275@-\232:\0265d\273\350q\316<\t0\030\275\016\233\367\274FL\024=\033\360\226\274\211\342!=\233\333\263\274\221\034=<m\374T=?\213M\275-:\236<\032\226\013<\235\300\014<swL\264\226\004\375\274\273\226\221\274q\304\367;,2\253\274M\222\025=C\374\006\275]kM\274r\'[=E\263[\275\365\336\275;\331\233 \275\272\214{<\300\310W=\217xZ=\362\273\320<\374BT\274,e\037=`$\255<\207\353\261;x\313\274\274w\034U:\324n#\275\330`6;^s\031=\211~\207<vd0=p\031\363<\342\211\277<\'\202P=\364\340\274;f\013\204<\275*O\275_\323Y\275\2117\020\275\240\372\221\274\0019\264\274?\235\355<x+\362\274\027\037A\275\3050\363\274iH\002<\253\252\327\274#\300\217\273\225\332\326<\3513\301<\312f\032\275\030\322\251\274q\034Y=}#\361\274\316~\276\274\244\365\\=\310\347\334<\237\311\321<x\250\233\274,\247\360<\330\020\020\275\242*l\274sM\204\272\220\003\321\274]o\370<YZ\354;\352\312:=\233\303+<\366)1=e\247\005\275\234y\341<\003x?<\2229\377\273\232i@=\372&&=\256\037I\274\262\017K<\267\255Z\275W\2527=\024\3473\275\261DN\275\263\003\305<\221{\336<m\347\016\275e\301Q=:uD\275\333\274\364<U\371M=\305\245l<\3363\013=\034\253\031=\233\023S=\356\201\374\274nA\350<\256\323\'\275\220\323\002\275U\033\363:\032Z\273\274\306\247Y\275\230\re;\334\020\002\275\030\344\310\274e\005\243\273\360\355.\275,\001\216\273\201\233\023=\340\345,\275*\240\024\274\016f\336\270\214\350\027;wo\211\274\314g\262:b\204\341\274JJH=Z\316@=\305\372K\274~9\006=\253\233\013=j\024?<\375\343\013\275\342\3149\275\007\033\363<\217\2546=\317\323H\273\364\226\"\275\303p_\2744lG\275\375\344\304\273\265\033\272\272l[:\275\232\272\002\275X\201Z=\3574\217<B\017A\2709\002\351<\2243 \275\205bU\273\357c0\274U\260W\274\256\2408\274?[]\275\023\327$\275q\235\350<e8\r=\201x\264\273~0T\274\302\036>\274v\222H=\250\302\024=\347!\t\274\377\317\023\275\376,e<$\236[=\241[M;O\260\037=]\272\'=}\357\241<\273\263\251\273I\374\002=\025~U\275\237)f<C\216\341<S\231\n\273\377@5<7\243\346\273\020E\r\275F\'\036\273\'Ib\274\224\361\004\272P\275\032\275\330\r\014:#\255\341:2\300\365\274\313_O\275`H]\275\373b\307<\342y0\275\275\346\352<\237\331)=\030L\026;\216T\327<N\034\\\275\277\016\001<\006>?\2748h\010=\227Vb<\274\235_\274\037W6=t`<=\224\343\010=\274\3413\274L\037@\274\022\302\273<\334CH\274\347y\244<A3\371<\245\333\306\2743\272O<UT\255\274\010\345\213</\037\340<ko\335\274\377\304\010=pF[\275+$\336<;\212\310:\215\374\254\273\345\224F=\316,B\275\257\2360=\265\022\\\275\306u~<\275`[=Rl\215<\300\r\366:\0311|\273\332\347\261:`\001U=\023\264\260<\t\0321=\002\251!\274,\224\274\274G_0\275h\014\374\274G+\302\274 \300\007\275\">_\274Pv&\274X\350\320\274\206\313U=\032\315\230\274\'C\221<\210\376\013=\202 @\275\256\245\233<\251\255=\272N\373H\275\307\000\356\274\272rr<M\254\203;\024\377\367\274\206\024&<d\263\010=\324,q<:\332\025=\361\203\375<\3715\364\274\310\210\314\274\377\361\301\274;X^\274\240Z(=+\334;\275\331\244\\=\373\236\371\274\226\304\206<\251\t\035=\243\005\"=0MU\275\3449S=U\\\000\275\276\2763\274\231\n\275\274H\0329=\367\251\210\274f$;<\277\262\354\274\277DC<@&S=\367\222X<\034\315\031\275\255\312\001=\217\205i\27430:\275\"\242&\275]\237%=7MZ\275\321J\204\274p\241\256\274\177\032[<)\277\270\274\314L1=\334\275G\275k\317-=udK\275\r\')\275\264)r<\016K\n\273\\\2431\275z?\311<\214\376\006=\352\031\220<\303\373\311<\001\322!\275\032_L\274\304\355\026=\222\034P=!\236\017\275dN\371\274\013\255n\2740\377\240<\312j\n\274\n\202V;\373\252\"\274\323\200P\275\2404\342\273y\356\210;5\372\253:\246\351\r=\327\010\244<\304j`<n\252\030\274n\021S\275\274qH=\236\221A\275\305z=<\005\360Z=\021\020\345<\341\316\203\274\031G\024=\221\022\301\274\276\270P<\220@Y=K8N\275\206`\335\274\314:\2049\376\371I\275\266}/\275<\332?=\016jC\275\034\344\353<\264S\316\274X\014\025\2755\350<\275\340sH\274B\334K\275\335G\223<\377\213\273\273\233-\352;\264jD=$\013\213\274Y\227\037\275\227\252\351\274\377\266\346\273\344z\310<K\2013=\272q\315<\251v!\275\241E\253\2732gW\273\220(\250\2733\020M=\340GF<\243\205\322\273\030i\310<!V(=\267VG\275F\215\243<\235\220*\27432\004\275+F\024\275uM\311\271nN\310\274\t\025\021\275ah\263\274W\227\210<s\273\014\275\276\227Z<#\304*=v\360\005=\216NO=\255\332+;\346\271==\007\004B<\371C\272\274\241_\326<\207\264\376\274C\254\r=GN[=\201\332+\274\221O3\275\212\272\256\274\232\'E\275\317\275\266<2\000s\274]\322\\\274\257\326\310;V\274\004\275\221\354\247:\272z\215\274\265\257/\275\366\353E<\200\372\236:\204\362G\275\0146\020;\246\361\344<\217;\030\273\347\356\006\275\376\310$\275\022\000\257\274\343\304\236:\332G#\275\013\352M\275\215r\272\274\265\t\243<\357\204\311\274\371\317\267\274\254\347\366\274\345C\236<\'\207\243;\252\301Q=\276\223&=\227\222\260\274\201Q\002=G,;\274Pj5<\365o\002=\304\302\201\273\212;~\274\222\364\377<\346\232\363<\366\352P=\032\240\255<*\203\325<\"\227\255\274\357\326\330\274\035\261\n=\215\277,=N\'\371\274Fp\304\274K\362\271\274\"KH;\231n2\275?\264\366\272\304qZ<\255\343\377<o\2261=E\272`;:\035S<\216YD\275\315\362\031\275\017\340\036=<\205\373:\240\324\351<\2540\364<z\250Z\275e\357I=\364\372\330\274j-\"\275\351\014\021<z\2562\275`\363\311<\000\210P\275\013\013\037=\261gt\274Y\261h<k\273\014=\252\363S\275\006\255\362\274\350&d<+\262\017=\217\254\202\274\214R\020=\301%M\272iFd\273\217/\242\274\317\213\227\273\177\177\235\274\211\301.\274\206%F<Mvy\2707\343\327<\215S\260\273\205\007d;\300!\246\273}\261\323\274/\330\n=\323Vi\274[`K\275\213\277\200;\377\326]\275\221\027\302;,\343\233\274\256X/=\003+?\275c\374\267;\244\026H=\326\252\341<$7\311<\234\314\225<\310$e;\375\020 <x\350\271;(Z\276\274\264\025\370;\241\364\330\273(\037\304\274@\351\030\275`\323\033\275\2323\034\275\217\227\r=^\355m\274B\027M\275\250\343\006=l\022\002\274\200D\360<\246L\t=\257\234\252\273\013\343\373<\253\316\362<M\005$\275\351\334\r=\327\363V<4\330\271;\341`\310:\207\335r\274{\0368=z\316\016=\277\267\\<\014\272K= eC\275\204\002\"\275\203\2777=\266\370X\274\362\342\373<\245)4=w\216N<\366\241\204\272\266\301\317<\264VS=\214\003\361\273\2444F=\205\033\262<\005\257{\274 \004\031=\007^J=]\033\352\274\\\332\010\275\3359\345<k\235\262;\327\313\277\274\263\0328\275=\231\210<Q\004\307\274v\214.\274\364M\006=)s<=;\263;=_\205\032\275LKI\274\212I\034=\264V\t=f\223N=\224\356H\274\213\226\033=[\201/\274\270\347\256\274\265\212w\273\036?\323<)86=\341+\243<\376\027\350\272\370\237\025\275\222M\037\275\244\3723\275}\002|<=X\354\273\226\022#=/3\037=\260\373\267\274\344\177\026\275\024\010\'=+\266E\275\312Rf\274\013\032:=\236\024\361\274\2777\t=\200f[\275*\340\004=\365R\006\275\031\314\021\275?y\177<\202\362\310\274\021T#\275\242\333\003;\242C\360<\356\310\221\274~\331\331\274\257\254\206\274\000\2247=\202\027\371\274;\037\262<\210\366\010=Jc7\275j\202\304<\006\335\332\274\313LC<\255\214\030<\203\373!=\325\035I\275\326\315\033<\305M0\275\233\320_\273\212\2279=\223\245\016\275\304\365\220<GN\007=j\3511<\027\221/\275\nq\266\273\305\366\364<\370\330\302\274\375\214\232<\244\300B=E\265\007=\231\236.=\217\2240;\216\204\316\272H\322\036\275\372J\031=S\300\022\275\364FK\274M\360(=\272\252\236\274\007/\000=\016\371c;8\212\025\273S#\326\274\230\352(=\200\006L=\210\'F\275\371\214U\275\375d2=\2229&=D\021\307<\\\272\211\272\324U%=!\272w;\3405B=\335@\024=\322\302 <>f\204;\t\364\251\274\2109,\273N\353 \275\210-\365\274w\371\010\275\230~\"\275\200\237H= \322\320\273\372\362\332\274n\210O\274\310\"/\274\014y$\274s\334\\=V\216W=\215\250P\275\204O\256<\207\177M=\311p\371<S7\022=\364;(;\247\006\276<\271\251*=\014o\232\274\347\247\314\274\"\305\357<1\3701=\322_\005\275\220\230>\274(\374?\274 ~\375<MfC=L\307\304\274o\007\013=\251\216\230<=\354\275\274\227&\326\274\332f\035\275\340\371D\275\244\340[<\006\333\235\274\026~M\274\374/\\\274_\013\t\275\206\r|:\243^2;\230\313<=\345X,\275(l\230<\000\335\317\274\265\255\332<\027\031\362\274\327\0341=\276\036%=\001r3\275s7F=\237\203a\274\006\016/\275\001\261\367<n\231M=\210\274\314<C=:=3-Y=\302_\315\273\217\237\004\275\014\"\352;\223\270\025\274q\370\264<\337\334\026\274\336\010w<\177\017T\274\235\250\325\274P\237/\273[\023>\273T\031Y\275B\223#\274^\207!<h\3010=\2651a\274\236\222\021<P\301\352\274\201H\275\274\223\331\314\274\255.2=\241TQ\272E\007\t\275\216\004@\275\33597\275\203\206\301;\372p\177\274\201\2375\275\346\370\217<\263\241\"<)\310\277<\360\357M\275M\332\360<\"\340P\275\022n6\275W\215\367\273(\204$\275,\202!=@\3778<\262\233\366\274\002\373Q=>Gq\274\276\2673\275\336uR\274\206@(\275\253\2027=R\373\022<\214\223H\275\027\006\354<u\253>=\323W\246\274\240\367\342\274\026q)\275\263\365\274\274\262\365\001=\305\370\371\274\234G\003\275\332\213#\274\3236\025=\323\026\034=\014\262B\275l\244\202< \372\321\273}/\r\275\"\002\031=\342\225\247\274=\242\356\273|(\031=\272\224\'\275!\201j\274r6\223<|\207J<\017\360*\275\tU\032=\345\301#=\301\257\227\271\000-\367;\211\313\266\273\247O\254<v\206\210\274~\377Q=\304o\354\272\200\331\345\274\247)P\275\371\027Y\275\275\334\360\274\352\020\031=\261\201-\275\376ND<\240\260\036=I\371\373\274\310-/\275`f\244<W\237@\275\245\221\336\274\246g\322\274*\2512<&8\326\271,&$=<!\354\274\203\366[\275&\216\020;\353\032\033=\312\264G=\271\r\023\274\355\'Z\275\261\306[=P\237*\275\345\225V=\260F\315<%\361\002\274\220%\224\274\242\371\024\274\211\202L=Z\226\317\274\030:\025\273\227&/=N\3534=\331)2=\212\342\264\274D\372@<\365\360\255\274{\250\304<\356\354P=X\275\376\273\206?V=/v\353<\256\275\026=\367`\025<\006\014\210\274\027G\357<\025a\251<2OG\275\276\024\314\274\305\2468\275\027g5=\032\3536=`\313\335<\360\255\376<\222+\023=\353\325\325\274\253~\360<Bx\371<\313\264X\275\360\370/=):\277<\023\214J=\031\373\376\274\366\204\204<\372\376(=\340\241X=,\236y\274\206U\301\274\006\236+\275D\222\267<5\001\313<\372\305H=4\213W\275\275\320\233<\007\013\330<\036c\336<\344\311\t=\001\025\271\273\270: =GPR\275w0\364<\032\351\205<-;c\274\323\230\205\274\277x\027=\274\262\036\275\331\035]=\231\tK=\202\024Z=\212\227\020=\013W\'<\225u\364<\345L`\274|gQ=\256\233\354;\"\374\355<\205\177H=\271\314\205\272X\236\027=$\034\004\274\010\0308;<\251j\274\220\203g<\223`Z\275\025H[\275;\007\373<\246\326\271<\023\3346\275*SA=\226\306\323\273\275j89\001\250\241\274R\223\005=\240b9\275\3407\027\275moW;\032\356\256\274\020\364j;\017\304\360\274\"G\311\274N\335j\274iO\031\2758\n5\275X\264\240<\305I\026=YL\270<B\335\211<\262\345\016=\261..\275<\\\376<z\313~\274(U\320:\037\326\366\274y\311;\275\3465+=\034\370K\274\210\330]=\005z\377<u\377]=\317\265#\275Re8\274\251\241!\275Ta\213\274\204\'\213\274\004\277R<6\312\265\274-\275\325<\214\017\377\274z\335\303\274h\376L\274\353\007Q<\231<\250<\n\206\230\274\t\363\007=~\013{<L\342K=\265D\034=\r:K\275\327\226\\=\331\300\020\275C\216\024\275(\251M<\307eQ=AzU\275A(\007<f\207\310\274wh\311;\252\210:;a~==1\370\n<\002\3154\275\206h\003=Y\220s</\022\253;\014B\006\274f\376\014\274\020\235W<%5\003\275\034;\300;E\375V=s\221\313<G\027\261\274@\317\013=\303\254\037=\307\217\233\274\247.\235;:\2709=\350\333\231<q\326\326\272\032b\377<\333\001i\273\223\005\224\2743v\233\273\034\310Y<\326k\361\274\332\324\243<\256\r\004\274\264}\364\274|\274\375\274\343yJ=R\305\213<\320on<\030\366Y\275\334\274T=\331\214C\275\254b\000;\372\032\236<w\010\"\275v\376#\275\332\230\037\274\202\323q<\203;Z\275(\241*\275\377=9=J\030T\274 \355\036\275/\201\377\273\332\027\031\275\2669^\275\257e\365\274\320`@\275\371\210\006\275]\275U=\020M\027\275\253d\352\273\371\225\376\274\324\007G<\021\247?=rv\027=\377\201N=\242&\340\274}2-=\320\352\r\274k\236\022;\t\000B\275\023F\224\273\n\177E\275\022s\325<N\030\221\274Mg\374\274\247\246\007\275\277\006\266<\357{\226<\026=U\275\377^\016=\250\361S=\372\212\032\274\372\312\016\275\\O\020=\315^f<!\247\034\275\313\221\005=\223F8=,\023\375\274^\357\357<|=\241<%\241@\275\3408\003=w\2325\275\353\2016\275\250\272y\274\223I$=,\010\347\274\254{\t=M\202V=\034\217\321;\241m\"\275\376J\230\274vi[\275\223U\377\274$\230\317\274\271V\036=\306\0221\274a\225\212\274Z\345\237\274p\312\340\274\236\315/=\370|G=[U]\275\322\021\026=G\332@<\005M6\275|\206~;|\234\016<\r\005]=\346J\373<r\007)=\241\223I\275\2570\303<\321\007>=N\251\326<\217\247\024=A54=\322C(=\303m\010=\036b\362;&t\025=7\254.\275\220{\363<_R\r<\007\252m\274\272\253\362<B\210=\274\034N\035\275!\nS=\223\346\232<\341\362\033=)\337\035=P\203;;\351\353\272\274\276g\233\274\314(\370<xh\355<\234\376\033\275rS[=F\305E\275\377\327\017;b\002\217<\226H\001\275\004Z!;18G\275\374\240\013=\326\350\027<Q P\2743r\356\274\362\216\273\273G\244,\275\267\036=\274Y\tI=g\232\033\274\206\247U;k\021<\275)\270\230\274W\274/<\021\274\215<8N\032=rb\t<\255\340\352\274\316\313\r=H\253\262<\"\361\371\274m\274\301\274\211\375\343\274_V\231\274t^\215\273\303\356\275<\214\2717\275\350rE<\335k\267<\200\201K</\016L\275\200\210\250\274\037\034\337<\202\243W=\206\252==&\315\323\274-\207=\274\032\013\020\275~\266\344;\345\222\007\274\203\005\216<\013rx\274\223\217\320\274\264\304>\275r\367/=\245\225J<&$&\274\232X\377\274\014\336\226;\323\203 =\342\374\307;\3544\341<\370\n\333\272\027f\032\275\2573\261<\224!\334<\024\212\374\274\354l~\274i\3653\275\222\333\376\274\035M\252<Z\004j<\034Y\332<o\020\361\274M\355O=\010\323\337<P\351C<\356\226\211<h~T<\323+3\275\335\016\026=PK\273<\227T@\275\'\354!\275\326\241,\274\007d\255<\254\264\036=s\362\343\274\010n\211\274\220BF=\243\366D\275\372\346\376\273,\301\236\274q\321\261\273\\\006B<\351\376\376<\345\363P=\303{\263\274\007\220\';\337:\024=\262k@=/\007\001=v\037C< \317(\275\324\'C\274\220\013N\275\367\356c\274\246\322\313\274\025\2204:T\276\006\275\203E\337<\232\211\"=A\004\025=\261\225\023=\373p0=>\365\317\274\360\002\035=!\355\372\272\260hM\274\204X\227;\335\206%\274(\024\320\274\375\351U\273\037\363\237<\213\366U=\214m\016\275\354\327Y=\301\3727\2757\002\t\275\346\014\301\274\246\222O\275\362\020\332\274\037G\333<\036\352E\275\306\364\261\274\364\306\326\274\026\377\306\274\333\360\262\274\324\3534=\355\333\253<\363q\244\274y\035\002=\202\206\000=\010+\"=U\317\354\273\331P:\272\216\200#=H7\026\275\257\2618\275H\353\263\274\027\241\014=Gg~\274\307\377G=?\035\024=6V\241:&q\024\273\353\222\363\274`\013[\274<\267\n=7[\212<\023\227|<(&2\275v`\206\274\244\325\205\274Z\004#<\345\345%=j}$\275\3451\357\273|\312\233\272\371\340\355<O0*\275\003\324i\274\244-\312<\360\233%<9L\336\273\002N\013\275e\337\017\275\327\252k\2743P\037\275\327\262\r=~\023\332\274\330\262P\275\364\257\007=\234%W\275\005\265\336<p\212;\273\017\\%<V\307,=p\367g<\345\016\207<\214\260T=dE\273<\010\250+\274\313\301\307\274\377\021K=\216\'\302\274\\\025\341\2740\321U=\351;\021\275\272^\023\2753\2305\275fOR;\330\373F=\272\345 =\347\200\363\274\356#\303\274\352#\030\275\'[\366;\023\265G\275\367OZ\275\337\242\327\274V\024\\=-c\001\275\351)7=\247\262\253<\222G\221\273\363\375\024\275\031\010\336<j\341<<\263\034\236<\313T\021=\263^?\274\3150g<K\231\016\275oQ\004\275EFZ=\3147I=\355\216X=I\267O=\313\367\214<\256\242F\275\031$\220\274;\345\276<\364?E\275\377\230\356\273h\213M:rV\365<x\301[\275\220\007Q\2757y\273<*~\033=\242h\013\275\223\363j;\215m(=u\014\010=A\335\030=i\022\330\274\267\035\215\274\300x\306\273\321\312\021\275n\300+=\026kW\275z\272G=51/\275\316\020I\275\376\222\006\274\343\330\036=\222\360!=\\,R\274\376;\312\274\316h\270<>\275-=\316\003\200\274\337\3479<\273,^\275x26\275hk\"=R\262\\:\330\037;\275\245\373\263\274\272\205\177\274\335rE\275\331\005\226\274&_\307;\027\215\332<\363\341\030\275\362\036\036\275\025>r\274\273\010\003=\260l\007\275f\221 \2751\217\030\275=\353*=\022q\273<\213\206j;\351\014]\275\264\217\020\275\272X;\275,0\033\275\220\314\221<\003\2139=\361\350\315\274\255#\003\275\246\006\271\274\221H\n\275\336\205\344<2\001\034\274?\213\235<*LZ\275\376\t\031\275\340\233F\275\376\036\031=\307x\033=\353m\323\274\241\217\037\275\027\236\320\273B\342\204<\334\276\315<\317e\007<\324\210\310<kQ\022=!\314\253\273\303\205\022\275\004\233\n=j8U\274\273\320\274\2740\211\201<\225\267\324<#\305\027=\006H]\275\323\257\211<\362G[\275\211\215<\2759M\037\275N\334\031=\026\036N=\256\233\311<\301s\303<\223\263\223\274\001nQ=\310\366,=\216\236E\275\225\246\341\274\323\201\225<\"\210\215\274\031|\344;\016\307\324<>_\320\274\2629\325<\354=\364\273\\\270\261\274\347\313\205<\234(\014\275\315\232\036\275\007\376p\274\364z\333\273T\356]=A\234s\274\347\374\215\274[\312\223\274<y\021=\'dP=\241=\035\275\024\257A=\017D\363\2748\036\264\274\365C\023=\255c==\275\340\362\274Z\350@=\317\274\023=<\210\020\275G\225\317;\367%)\275q{%\274\206\335?\275\275\254\021;\343%\020\274\3309\315\274Y\036\266\274\300>\024<\252\373\001=t\022\255\274\347\265d\273\354\256X\275\0249\247\273z\342\022\275x\313\301<\014\202\025=o\314\027\275\336\305\350;e+\302<\371\250\260\273\026\032\303\274\247\022\014=<\234\t=\325K\t=\300\230\004=\037QW<\221\335\264\274d\0348\275\350P\312\274\025\344\316;\226#*<\222?\001\275e\245\026=\317\257\010\275-o\020=\207\342 =Ac3=\026\310\357\274_h\003\275G\250\317\274\305wp<\177\200\244\274\337B =\251w\251\274w\264\300:\"\2478\274\200p\321;\250\317\037<Mf\\\273\370\251M\275\357\033\212<h\210\033\275\316#L\275\r\242\243\274\337X.= &3\275\"U\315;\022Z\371\2731\331\026\275\375+\001\275\223\245.\275\361\204\336\274\013~-=T8I\275\206\0268<{\241$\272|u\037<\207Z\000\275\252u+\275\312\2441\273Yh\364;\020\250\010=\216n\341\274=\234.\275h\017\324\274z\215\250<\333\007\240<\035o\204\274\300+%=2R\242<,\r\000=\ni#\275U\2635\275\202\263\022<#\373f\274\201\327$\275\263}\301\274\311n6\2753\252<\275\022\326\264<h\'\331\274\032\330\271\273u\t\026\275\377?\023\275\n\261\034=#\223+\275\031AB\274\010\030/\274B\310g\273\024\210+<\360\261\003\275z\340H\275\034.\226;\001\260z\274\007\304G\275 \300\273<\374\362Z\273\257\375)=\203\357V=0^\350\274E\024\021;\350\264\337\273\030\210\217\274\333\216\326<\215\232\351<\226\363&\275\366\307\022\275OhM;\373e\270<W\320%=V\021U=\346\t\332<\223\256W\275\270\241&\275\026\352\321<]\034\201\274\010X\337<\022\371\363<\1776\005=)\r\312\271`L\010\275\211V$=\365r1\274b\264\266;\246/\343<w\276\036\275Bo0=?\343\211;#\362\027<\316\301\030\274)\n5=L\023\324\274\363\345\360<\253\266\032\275v\262.=\023\255\005=6\366t<\264\333/\274`\263\261;\024A\336<\252\230\233\274F&\320\274C\177\254;u\375\300\274\037\227A<\254\013\275\274j\353\307<\221\333\226\272BL \273rx\003\273|{\243<\262M\214\273[B\312\274\373\224\214\274\362\231\300:S\355\203:B\033+\275\001\367\303\272\016\306z\274F\215\201<\244q\244\274\r2<=,\202\200\274\327\264\232\274~\rX\2751\017\236:\0024!\275IHV\273\250\360G\275\352\353%\274\364\326\324<vo\026=\2765\024=r\'\t\275L\036\273<\354\321\022=M\'[\275>z\350\274\000\212E=\n6\337<\247\217\013=\277d\036=\353x\023\275\326\203\370\273;D\036=DMZ\275\036\333\023=\317y\352<i\251)=J\327\007=\333\021\262<\300\256:=\207\324\267\272\017\314\263<\257s\335\273{\025P=\247u\276\274\343\005I=\315\251\224<\332\340\245<nk8=+\nY\275k\376C\274C\201\336<\316\335\n\273[,\010<\206 G\275P\230\267<\322n\260\274X\020\017=\201\221\010\275NQ\232\274\300\373\316<~\217\351\274\215pL\275\307K\332;\321k_\273\245\362:;\262\347\225\274\367\001\002\275U\300\220<Y\306C=\311:\376\274\263\322\\=\301\374\'=D\241\020\2753\246\026=\3507\026\275\273r\353\274gU\262\273\314{$\275_\344K\275z\325\204\273\"u\212:\347.4\275t\337\254\274\273\231T=!;\201\274\315+Y=d=\315;\026\303\247<4\024\021\2758\034K<=\2307=0\016\\\275\202~\201\274[\206\305\274\227H\206\274\200\372\006<\341\305\216\274\347\255Z\275\321\004\321<_NC\275H\014\014=iQ\003=m\350\320<\034\177\350<\370\345\367<\016\305*=oD*=a\3261=\004f\273<?|\325\273\205\244\340\274\204\307>\275\035\272Q=>\374\202\274;\327\342<\226M[\275\020Y1\275{\242Y\275 \317A=w\274U=\225\001A=\322)\242\274\003\212\225<v\310t<\to\300<}E\007\275D\343\002\275@\036\037=\203\375\034\275\354G\241\273>\223W<\220\354\244\274Z\r\'=1=D\275\337\356\033\275\274Y\231\274\262\226O\275\260c\252<n\265C\273{\240\351<1\305\030=\31557=\025cO\275\250\243\004\275\306\t]=\322\272\016\274\261z\226;,\003\026;\033\317F=\273\200(\272\006\371Q\275\371i2:\252i\024\275\270\326\344\274\270\354\024=\025\023\370<\267\333V=@\3030=\3540\222<\0164`\274h\224\351\273\215\311\021=Cj\236\271\363\355\016\275\212\302A\275;\347\025<Y\324\025\275\334I\202\274\246}6<$\242@\275\347O!<\307e<\275\034\323\313;\356\004\271\274\352\377\375\273\216C\277\273\340\3372=\207\2108=\227\3174=\275p\251;VJ\235\274e\371\032\275\n\367 \275\036T\372\273\201\300U\274\255\251\020=Wu =\257\005I\275E=9<\013A\035<q\371b<\332g$=\320\335:\275\221\211\202\274\377\377Q\275\352\177\034=\031\236Z\275&\345Z=\333Pr\274\245\210H=\234\264C\275\225\226!<\031\347=<~}!\275\'^j<\n\346D\275\034\227z\272%\037.\274\273\240u<\362\005T\275s\204M\274E\347\024<\372(\266<s\333\016\275\216\204\235\274gAQ\275\333\232A\275P\374\363<\303\'\004=\031#\031\275\333K\222\274\343\361>\275\013~C\275\036\317\216<\342\215u;N\272e<g!=\274\2213\177:]\324\t\275\301\214\257\274\356)*==\034\352\274\261\357\020=3B\006=C\023J\2752\250(\275\230\020x<^\314\037\275\353<\263<x\277\234\274\251C$\274/\337\\=\306\343?\2755\274\017\275c\2513<\231b\031\275\270\337+\275\264$O=\314f\351;\005\024Y<M\2115\273\270\213\266\273}\313U=\217\237B=\234\216\371\274\272\351\364\273?\022^=\223\270\215\274\224\372\372;|ns<b!\037\274\347\nN=\266\220Y\275\201\323\037\275\263\202v\274\321\3009=\227\177?<\201\370\321:\005\205\024=\200\210>\275\211\377\212;\231\340\307\274a)\377<\361\321\341<\335\237\020=\034\367\022\275\274}\340<\227\310P<\264p\226\272,\264==\000\225\240<\356\210{\273\000@\211\273q\021\265\274W{\237;\2239\205\2744Ma<\360\220>=\024\266-\275:*S\274;\321\\=\347\250D\275\350u\272\274;\270\237\274\323\2321\274\257\212\260<\340\024\210\273\356Q\\=\351\177\355\274\340\350\270\274O\313]\275RyM= \3502\275\363\314\236\273r\230R<\r+F\275Z\320\266\274\007A\027=`\247\331\2744\255S=\022r\035=\001F/\274l{\221\272\'g\177<z\023\013=v\256\024=\271q\027\275^IS=n\334\"=\343-\314\2748\260\021=u\233\260<\270:\330\270\3632\204<\267\240\201\274\346\303R\275\311q\321\274\262\373\326;\022_\360\274\360U\213\274\206&\024\273\306MK=\236|\254;\371f9=/\rU=g\276\214\273n\005\310;V\356\023=dw-<g\371\356<\363\007p<`\334^\273\036YD\275\2178\335<\264J\004\2732\032S\274\350\373\023\275\344\361P=\310$\031\275\374\021K=\327\223\365<4\252\253\274\010g\303\273\211\\\343\274\036\0272\275\231A\037=J\007<\274]\030\241\273\231&3\273Vg\t=n\276\315<M\210\215\274\021\021:\275\227\211N<\005\027\227\274\227<\"=C\273\255:\265\036\000\274\360\353:=\357\312\332<i\203\034\275D\337I\275\010\336]\275D&\021=\332\2012=\027@K=C\314\270\273\005gQ\275\006\364/\274K\217]\275\232\000\242<\306\303\001=\234j%\275M\014\314<%\336!=\032d\322;\344\013H\275\224\354\004\274l\343\366<\013w#\274^\264\374\274-\035(\275\242\r\202\274\370[\032=9jP<6\217\331\273\270\002\302\274\213\376+\274\323\237\305\274\036\274\355\274uE\353\274&Z\026=`\232#\273\034\271\030;\202\244\212\274*9\033=\024\022\326<\3458 \275\320b7=\342\305&\274{W5\274\373\271\272\274x4\362<>\0060\275\005 \377\273\027sJ\275?w?<\254\235\356<H\226\014;\263\221\347\273\314\215#\274\007\2558\275\245\205\021\275X\272\032\275c\240s<\341y\"\275\232\257\024\274B\367&;3\320\232<@\212\224\274\002\264\031\274\t\212\244<\350\347D=2\342\324\274z\207\002\274%A\302;\347\027\\\275\2645Y\275\253\017}\273\200\006\226<\001\\\003=\267y\325\274\252\317\007=\2566\351\274\207:\032;\003\341\204\273\310\347v<\346h\307<\035\231\275\274\034\356\361\274;\372K\275eV\331\273\211\024\245<\344\2619=\375\223L\275\263A\230\273k\004J=4\270?\274\242\010E\275\235{S\275\177t=\275\216\200\036=\303CH\272\232Z\201\271\200\001\024\274\037Yj\2741$\361\274:\227=\275syq<sgC<\262\363\034=bq\013\275\177\\i\274|6&=\004zi<\266\336\014=\210\300\362\274\366[]\275\002\2777=\246%\336<\370,\371\273\243\002\221<\000\256h\274aG\235\274\270\361\323\273\257\306d<\005\350N\275\341M\300\274\001\"\025\275\352\211\216\274\230\236\316\274^\237Y\275\307\036M=$ZB\275So\304\274\206\031Z\275\327\254\004<\\~-<\353\022\215\272\247\235\n=E\311\327;R\253\025\274z\263\216<V)\207<\322\240\001\275\227\014Z\275\333\252\020=\214L\r:\335\331\034=\331\300K=;\356\320<7\230;=\262X\313;\370\321O\275\345\257Z<\317=6;\336\271\343\274\370Z\002=\233K\220<\3279$=c\257P=Br[=c$]=\2205\t=\335\367\023\275\327s\213<\021\254I9C\005\230<\354\000.<~H\n\275?1]\275\353\314\031\275\215\017\335;\367\312\305<\362\265\304\274\245\"\226\274{\034\237<\336r{\274U=\024\275*\307\375\274z^C=\017\241Y=(\037\262\274\262\273\347<F\210O=\276\225\013\275\270\026\245\274\357uT;\375\250n\274\315-\274:!\2517=\377\005\032<\210(M\275\234\n\362\274\220\260!\275\205\001\335\274\215\200!\275\230\307|\274B\261\005\275C\254\364<3\230Y=YX\035\275\231\307\027<*\274\347<\022o\r\275|\315\307\274\300\207\022=*O\010=\354\245}<e\365\n\275\331\270L<\261\020K\275~CM=\231\350L=T\313\350\274>\243[\275=\375\t\2753\344z\274\373E\324\274\330\376\226\274\217\215S\274\236\3018;\372j\316\274\325\264[\275Y\351\020=\342\220\010\275\241\245#\275?o\330<\261\335\351<srG\274\037\027\301<a|\242\274Y\317\231<\225\243\203<\033\362l\274\346\030\2257\007\250\026=m\323\373\274\252\245\330\272\204\305\372\274<\305\265\2736*Y\275\017q\016\2730r\201\273\336k\331\273\000\036\340\271\303_\374<\366@\362<\371\002\344\274\360{\245;\025\343\262;\226\263\017:\007y\036\275\245\302/<\026_\017\274\025)\021=\224D\t\275\r\340\352\2740\317\350\274\035-\r=\334\033<\274n9T\275\227\206\252<<\266T=\323C\325\274N\365\345<\003\223a<\222C\014\274\204\375c<\\*@\274\252>\033=\007\037\230\274\263F\244\274\021\302\231\274\177\377\233\274\n\304r;\337/@\275d\307=={Y[=\236\341(=2\221\254\274)\331\325;&\252\263\274\266\245\024\275q\2077\275\3767\211\274dR\334\274\246\306L=\341\243\001=\205)\277<;/\323\274\014Q@=zq3\275@\177:\275\367\226k;X\360Z;g\245\021<\302P\216;\317x*=\350\027\327<\271E\253;\307\242\017\275\242&\241\274\000\235\320\274\323dt;ox\245<\201\227K=\310[\257;\353\345+<\240\354\'<\207(\026\275\311\361\t=\257\270\254\274\366\264K\274q \004\275O\026\000\2751\014\337\273\351E\'\274\324V\327<\026\375\010\275HNP8O\205u<\331[\037\275\306?9\275\372\205\224\273\030\315\000\275\216X\302;S\270b\274\365n\267<\222u\033\275X\2352\273TO\025\274\361qz\267\267\223]=\037\222\010=\177\177V\275\"-\263\274\260(Y=\'\316\256<\024\262\234<\205\353]\275/\005O=&BS\275f\241C\275\367\264\256\274\243w\n\274N\330\343<\201\2533=\242p\342\273D\322 \274\317\3613=\244h@=o\374y<\377t\017=<\227\201;\252\2325\275\2752\003=\306\3531=#U\322<\025\230\022\275.\306Z=\207x\364;\245,H\275n!\211\274\305\275\337\274H+3=\267\302\345<\356\305y<\034\010\247\270\017X8=)?\317:\337\215\007\2753\256\225;\255@\324\274y\271b\274IW\021=_\221U=b\305\373\274\336\006r<5\020\366<\036\250\226\272%\003Q=\334\202\336\274\312\021\244<\366\227!\275\005\320I;k\336m\273\221E#=\324\244\036=W\242\210<\203eA\275\013\026\371\273\021K.=\216\241\244<b\220V<\001\331\025;O\317\035=\236<\217\274\201\302\227\274\251\357\360\273\235\217\000=\325\0028=k$7\275\362\353\235\274\25738\275E\016\313\274\227\220-=C,A=\313\246G\275\343\316\235\274+2\037=\244\206\010\2750\303\325\274E\326\321\274~\273\031<uS\365\274s>\014<\017\314\302;\232S\024=\310T\237<\365=\222<\3269\304\274\360\036\010\275\354Z\241<\023\032\241\273\302O\033<n\210B=W^\027\275\031\276D=\305X\323\274\3559\033=G\237\224\274\370\0362\275\221\370\004\275k\236\026=\267\033%\275\205\347*<r\356\022\275\020\006\207<\270gl<\323\252\341<d#\235\274w\004\250<:\216J\2755\264\366<@\313\002\275\241\225\236\274\264\346\234\274(\210%=\272\233\320\274\241\343\261<\310d\265<\354;\205<2\004\210<\262\276\303\273\017\313(=s\022\031;\002)w<11G<\014$\325\274\273\2623=X\200K= `\233\273\307\210\001\275\350\276s<\300\234\211<\210@\310<\021\350V=\032\021\223\2745\037-=\257\372l<\213-\216\274\006\307\317<6+\375:D\332\005=\036\203\314\274\346\377\025\275%\023\233\273m(\354<G\034\350<[wp\273cc\025<\233;A<q\014B=\"\324\375<\tM\001;\263M8\274L\352\244<\213\346\223;\354\311\375<|\273\020\275\376\275\205\274\304cP<\270\353$\275\204uS\274\372\361T=Cl\206\274[)\\\275\017S\003\273-\353\305\274\022\311\356\274\007\017\027\275d\366A\275\272\277\204\274\323\000T=\260B\326\274b\202V<\013\316V<\332\334C<\275\332X=\362\"\206\274\270\241\203<\320\007\364<\236\227\317\274\037\320\007\275mW\013\275\017j\017=2t\350;\201\237#=\322\231Q=S\221\003\2752\336\347\274\255\216Y=H\205\006\2756\026\213\274<\r\234\274\3606\266<}\002\'=U}\356\272\310\366Y\275\334\270\306\2745(\016=\356$$\275\0056:=\3345\347:<QR=\027\177\302<\t\250\370<W\311S;\374\331X\275M\327\215<\016QV\275\274\037\364\274\016\327J=\360\376~\274\366\317#=6\331B=\276\272*=}S\003\275\360R\303\2746\004\314<\313c \275\005\'\027=#\277V\275\r\311\341\274mYN\275\372\237+=r\335?=\002>I=\252b9=\021\317\330<\214x\014\275gR\207\274}gW\275\327\020j\274\214\267\023:\251\201M\275\263\277\031\275c\005\264<\330\356\005=\313a\260:&\001\003\275wv<=\346\031\314<\260\260L\275\210DD\274e\346\320\274\353\302\022\275\202\277r\273~\036\340<\037\225\222\274O\242\230\273\255`4<\177w\363<\321\265\363\274\016\377D=\'#\037\275?\303\\\2754\241\021\275 \021+=\372\0301\275_\244\347\274\032\350\323<\353\000\255\274\213E\\=\256\230Z=}\037;\274\017\250\014=\016\311\036;\030\261\t=;.\302\273\360J\337<\277k\030\274\326\264\224\274P\213\3449Q\261/\275\246m$<\025m\314\274\372)\'=\005p5\274\334\233L\275f@\240\273d\002\327<;\016#\275\205R\031=\357$W\275\337\261\014=\214\235\326<[\301T;\211\3502<R\206\t\275P\221\333\274\345\247`;\266m\333\274\022\270$\275\322s\355\274\030\032\353\274\353^\022\272Xs\n=+\3647\274\342\2775\274\013#4=\004a$=\212\253\201;\n\2635=\256\370#<\010\234S\275\335\302\221;7\177\000<(\357\344<\253s1\275\360\354\025=\271\354\035=a_\350<\310t\263;\216\237(\274\373\234\301\274\034\235Q=?F\202;\267\217\266\274\222fL\275\342X\254<J=\014\275\2347{\273\337\306\005\274W\243M\275\023\202\345:\"\200V=\350!\240<\255u\237<\003\020\237<\332\021\023\275\222\235\372\2740K]\273\020\212\324\271\224|\327\274\235L\321\273\310\214\275\274\034\235\037\275\3046\310<\361\024^;\022J\316\274\316\004\303;\256\340\000\275SD\255\272P\3352=\345\025\n\274\025\371O=z\252\353<\016\321;=\251\035\225\274\004\304V\275an\032\275]t\003\273<D\251<\261\335T\272\017\'!=\231)\004\275eb\016<\316\021\322\273\324{\322<\363\335I=\233\373p\270]\235C\275\200\255!=\327\376e<Ai\340\274\224/h\274%l[\274!C\337<\252j\310\274\243d\352\274\323h!=\343\373E=\361\014\035<\2123\252\274\036=8\275XD\374\274`\215\013=s\335\t\274\3249K=\031\362\001=\276g\035\275hd\203\272\257\254<<\375\225\246\274\361\024\277:\370m\224;\246\010C\275\254?\037=\001\333L=s\325\300<\2074\367<Q\014,\275!9\223<c\270\265\273x\341\t\274\266\373\021\275\303\373X=w\240\017\275\013\262\026\272p\005N\274bI\024\275t\324\265<\200gj\274\232\030(\273\353\021-;S\355\\\274\362\270Z\275Z+\232<R\032\351:&\007\321;\356\203\302\274\3522\013\273\033\301 \275\307\251\206<\201\210\t<(Z\264\274\323\270\322<\234\361\206<\\\240\240;\3177\247\272|($\274\331\330\014=q\230\200\274Sv\004=L\215\252\274\010\246\357<\237\373\005=\273N#\275s\330\372\2740\252\'=D\031\365\274a]\214<\213\362-\273\336\014\240\274\357<W<\252\3424\274\210D\352<\013\345\306\273\320\027\"\273U\226U=\230\242\031<\203\234[\275}\014{<\301k\357\274A\013Q\274\260\006S\273\213\371O=\227\314T\274\263\226;\275\326u\004=\334\240\226\274\264\"X\275u\311C<H\372\032\275y\025\263\274\000\035\001=\344\017\004\275\342\031\371\272\271\230\242<\316\017t\273\341\272-\275D\345S\275~\037\211;\230\003\'<\035\353m;oyN\275L\217:\275 \2314;\333p\r\275\262\204\272\274bY\002=\342m6\275\204X\321<\005\226K=N\240\336\273@\2463\273)#9=\332cM=\247\\>=xmC\275\345\271:\274\346\030\r\275l\362\230<(\037\034\275\245s\323\274a\264\003\275UX*=2PG\275\264|O\275\223\265H=zR\010=s\230\357\274J\316\245;|\200C\275?N*\275\227\275\037=\311\326\005=.\322\371\273\334d?=\351\331&\275\226U\213\274\243\013W<m{\253\274\333\234X=\360!2\275\343\337T=\232\013\003\274\204>g<\275\3119\274N\200\260<q#\003\275\365\002O\275\246\205\025\275\364\324\330\274i\224/\275c:\311\274\217\307\231\274\250\310N\275\266T\034\275\255\013\302\27488\244\274\200\\\007\275\333\335\027<\302<\004=\223\252H\274\356@)=\345\024\225\274\017\313\001<6\335\203\274\341\206\017\275^\263\016=\326LV\2752<\360<\245\257,=\240Z\021=Z\215r<\216\023\020\273\301\341\000=\371\241\250\274=C\003\274\272\207\000=\240\273\245<D8F=\374+\315<,\033\323\274\255X8:\226\013\024=\23077<\301J\026\275\346\036\356\274\201.M\275\022\354\013=\234\221H\273\327B\262<\252c\025;?\347\025\275J\217\367:dZ\'=:\2610\275\261\034\364\274K?n\274_\031=\274\226\274[\275Z\306\356;\310d\014\275]\031\025<\361\2525=\020\273\232\274?\004\255\274(>a\274\371\001\245<$1\366\274m\257\274\272\34350\275\243! \275e\355\346\274\"*\032\273\027\004|\274\204\346P=\201G?=\354\323@\275\252\207]\275\226}1\275\326\340\\=\264y\026\2752 \217\274\316\000\020\275\336\317?=\357+\206\274@\252\001\275\221\217\273\274{\314\343<\036\246\275;\007\223^\274!\024\312<\233\3421<\2059\337\274qx\313;\241\205(\275\203~\216<=\316\370\273\374\315\035\275k\374\366<\353.\361<K\363;=\351/\244\274\rpM=GoC\275M\332V=\312N3\275\317\326\256<\224\362\000\275\037\320r\272\253\355\304\272*\306Q<\222\227\230\274G\210\'\275!\352Q=x\374!\275\004\264\233<\217rX=\310\355\346\274/:^\275K>\217\273\250g\313:,\360Y\274gw/\274\226\363\235<Q>\351\274\342{=\273\002\016\010\274(\331\206\274\362\347\021\275\271\201\226<\324\272M\275utG=\353{\251<m\274\257\274\030Pe\273\372\0177\275`\270\310\274\346\201K\275\343\371,<\003\331\036\275\242\227\254<\346\340\277<\307^\356<\324En<\374\232i\274w\003\343<\241V\007\275\254F\312<\201\354]=\247\340\270<{/)\275jR\\=\214\000\022<\327\331\306<\256\243\354<\002jt\273\234\312Y\275\000\357\303;\026\374\037<\264\032\037=\233\203\032=\360\216\233<W\272!\275\266\216\325<\030Y\315\274\022S\321\274\t\204\331<\271\202\\<\3118e<2\340<\275\200\300\213\274\031@4<9\014Q=\334\nT\275\223\262\216<\177\376E\275g\013\200;\217\242\"=5\365l<\036\n\205<1\321\246<\277J\017\275J\314l<\003N\242<\261C\341\274\355!?\275\251^H=}\356\035\275\210\010\256\274\003\231\'=\321\236Z\274\226\306U<\334\323f<DIY<J\234\306\273\211e\360\274\037Vy\274\376#\325\273\213\222\314;\003\270\033\275<}\355\274p\312L\275@\240\272\274I\254J\275#\0074=\2356\"\275\365\270,\274\220\250\031\275\327\245\230;\227\254\032=<q\236;!\253\244\273\353DS=\251\213#=*\007W\275RA?;%\002\033<VRW\275\354\342\036\275\266\330T\275\025!E=y\2047\275\274B\213<~\033\310\274$\370\007\274)t\335<\017\266d<\212\360\212\274q\304\341;Y$\307\274&\344\257\274\305\236\271<\26034<\026\353\007=;\3314\274\262\265W\274/\242\n\275\177\017o\274\256~g\272\337\010\275\273\227\254N=lX\022=\362\356\t\274u\226\317<\206\271\225\273\216u\273\2744V\211:-\247!\275YH\345<\350)!\275\237\237L\274\326\215.=\377m\366\274\356N\301;\343\344v\274\220\323\331<Ot\030=A\003\030=\210\250\'=\0250\242;\317\360I==\030\377\274\317\001\322\274\036\223\000<Tyg<\373i\007\275w\252!=\213,\363\274E\221\253;\353\010Y\275d\033<=cD<\274\272\200Y\275Mi\335<^\002\374\273\270Z\374<2@\261\273\355\341\002\2749\007\254;:5Z=\344aO=E\322\257;0\316@<(\343\313<\362\345\343\274\330_\036\274\005a\303\274\341\227\340;\025YP<\302k\367<\355\243\322<\253`\233\274v\3346\275\314\312\006\275\330\226\226<\006\201\010=\272\013\374\274\210X\331\274\226\352\004\275\355\002\264;w\271\345<\232::\275\232\2438:w\002\256;\250$\036\27594\016<\223\257\313\274\253\274\007=\276o\217\274@&j\274\010C,=h069\266\r\022=\314\nJ:\010\310\014\274\nZ\375<W\237G<}bT\275\030\032G\275h\035\330\273R({<a\275>=\306T>\275\267c \274\212H&\2753\207Y\275x\264\305\274\245\331\245\274\261\245J\275\340l\242;\325Z0=\361-\212\274\366n\021=\027\266\024\275\252\023\336\274e\201\233\274\330%.=\223\314y\274\360!e<\325\017\325:l\240\316\274\213p\356\274\233\302\007\275\367A*\275\274\374K\2751n.\275,\273W\275\023\277\030\274\017W\251<Z\033F\275\021\'\\\274\263b\341\274\270:\002=\277\214.<\224\207\024\274\372\301\034\275\t\252E<\307`\364<-\242\010=\035\013?<\305\2205\275]\346\025=w\232?;\021\033\002\275\323\314\313\274-\272\245<!\003N=/GB=\344y\320<>(\\\274<Ie\274\023\217N\275m\363\214<*\tP=\224w\210\274\024\236\260<w[\014;\313m\005\274\313(\371<\271\2430=y5\"<\305\003\001\274\247iK=\200sF=p\206%=\260T\323\273\261\372\332<p#\264\274JaK<\217z\361\274\354\204\325<\037X\242\2743\274C\275QHQ\274~t\315<\255+%=\316\326G\272\026\306\373\272\345\365\242<\334\367\214\274Y\326O=\220@T=\211\337\223:3e\272<\345{\335;v1R\275\240\007\214<\337\215\376\274Nx#<\200L\000=\353\363X\275\302E\037\275\223O\273<)!-\275\031/\352<\275\327\001=\034\270\305<\241\233\361\2742\271\010\275+\014i\273\230\235\021=}\246v<\214\360\360\273\325V<=ti,\275\322)_<\220Vw<\333R\021\274\217\\G=\226(\255<p\374F\275\026\200\330<\330\2662=\363|y\274\202i\377<\034\tU\273\263\030\035=F\374\232<>\313\374<G\364\204;\333l\027\2753\313\312\274\250\213*\273#E\033=\353\304&\273v\300\261<|\177\311\274\031\223&=\351%\034=\267V\315;\374n\r=i\321\007=\241\006\323\274\020\036\350<c\000\027\274{\210\000\275#<M< \0316<p\264H\275\233f\345\273\250\021\014\275KQ\366\272?c\233\274D\327\335\274\364\r\314<\354\204g<T\324\304\274a\247N\275\202\213[=\325:\t<\265;y\274\367]\240\272\236vY=\027tv\2740\353.=\325\236C=H\r\303<\277@\034\273\245\rk\274\352/\225\274\304?F\274\320\355\226\2739\020 =H\'\026<\355\210L=\312e\354\274D\237\036<3\323M;\332\306\010=\252\211\347<\204%\016=\020-K;\221@\010=k\\\007\275\316\336\n\273\353\224E\275\352\272\274<\277\276I\275\316GW\275\200\371A\275\254\316\215\274\273\n\265\274\324\204\317\274;\312.:\233\216\306\274^F\262\274\356{\007=\332\2243<We\305<e\331V\274\214\356\325\274I\"\001\274fm]\274\247\247$=\'\272/\274\303\357\'<\204>L\275\033\242\304<\312i\022\275\277\216\371<\334g\353\274%R\001=2\026\303\274\240\225\212\274\265\304\021=\035\226\232\274o\374\275\274\037\217B\275\272\2147\274\241_\374\273\324\002K\275\271j <\331\3345\275\254o1\275\364\331\324\270\211\300\r\274\371\035\"\275\313\305\330\274\327j<=ldC\275\022\230!;F\200|\273\014\240 <\322\005u\273\302\305\330\273\343(&\275\033|\014\275q\r\007<\272A\231\274~Z\304\274\336\353\324<\342\310J\275M\243\r\275h\nA\275\231\227\t=\257\240\325<\010\3513=\317~\204<\224\261E\275\335T1=%p\203\270\372<.=\207V-\272m\311U\273z\033\006=\207\005\325\274x\364\214\2747\246A\275\322\262\024\275l$\207\273C\255>\275r\017\030\275\301\255\030\275\367q\372\274\\\275#\275\224x\302<5E\250\273\330\336\243\273\223K,\275z\334\"<+S\036=\301Vx\274\276\262\217\274\354\006\255;H\210\337<\207M\030\274\3605X=\374\340H=\342e\337\274\252\000\034\275\367OT=w\363k<\017\300\220<\237\376\347;\347\216\303\272;\010t\274(\204\213<\'l\030\274\275\360*\275\315)\\=\206-\250<RO\037<_P\367;\267\342\037\275<\373\n=5Z=\275I\304\340\274\203<\224;\344\000\277<M\215+=\021\227\255<\315|\262<\211E\205<\02267=\"]\247\274lIO8\303\tq\274\352-\037\275!\334\376\273\207O\023=k\246S\273\304\233\037=\357\354O=>\312K<~\346\336\274n\311\312\273Q\0145=\036\206\003=\2171\220<\0255\210\274\304[)\275b\007\013\275\251\333\233\274\201\202\003=\016\006X\275\177\260J\273\225$9=\207\251\314<\214HZ\275\263\311\016\275\343\305v\274\2613\004\275TB\031\275z\304\007\274t\221V=d\3639\275\022~\331<\305\311]<\'\331\323\273\241\3768\275Lx\223\273\316\212 \275L\234\346\273\260\376\360\272\361\253\313\274/\250I\275\206\322\337\273\016\227D;\202\3006=\263\027>\275\025\203b<\203\274\376\274\320d\032\275d\227\t=W\\N\275\237\036j\274D!a</q\377;\265\214\036\275\255\330g\273o[\014\275\304m1\275\335\3126=\230 \263<\344\315A\275\305[\006\274p\246!\275\230\3752\274S\002%;\353~\363<\nf\'=q\367Y=\023f7\274q\234b<\234\025\021\2740\230M\275\352\233E=\320\017\013<\241L\303\274-kA=H\253\016\274\033\337u<\204\267K=b\242\214<\364\214\026=\3454\223\274\016{\353<mCS\275\224v\031\275\334\356o<\3764\220<X\311`<\222\0174<\025\360\310<wC\310<\216I\275<H\325\367\272\366dN\275\361\265F\275\312\225\244<\021\014\301<\"\350=\274f\014\306<z\307G\275\035`\020=\263\017@\275 $\327\274B\272\266;\005\233\000=\256\264\313\274\357\347C=\343(9=\271\367\030=\002\0239\275\277\346\221<\237\373\206\274\354\020\003=\036\312\212\272E1\335<x%B=\3437!=*\205\"\275\226\337\207\274\323L\024;\337\254!\274Ah\210<\341Na;  ==\300\221\022=\317\233\363\274n]6\273\232\204\225\274\331E\024\275\234J\357\274\257t\031\274\274\267\014\275\377`\322\274\321&\254:\322+\275\274]\0138\275c\246,=.\377\226<\006_\027\2756\247U=\232\323&=\310J\221<C\340\201\274\177(G=\326z&\274\017N\t=\300\241\316\274\364D4\275\255T\275\273\005z\224<V\316v<\031<\2039vo\252\274\323r[=\245ER\275\205>Q=\321\003\025\275\002\007\363<\t\030K=\017r\030=\265\223\336\273k\225\032\275\03465<\321;\320<W\256U\274?\024\315\273\272\320\360\274O\220+\275+D\361<qi\231;\010;,\275[\3029\275(\304\263:\227\002K\275\223\014H\275\313SZ\274\244\201\014<*\322\270<\271\223H=\211\372b<qvJ=\217{\335:\351\251^\274\273\335\"=\357S&=L\346Z=\202A>=|V\357<+\233$;AV)\274\255\215\020=\022\375D<\365\214\035\275\211r$=\251\375\235<\020z\034=r\n\363;\342r\261<\263\205\245<\355\007P\274\273v\023<pI\021=\217Uo\272\340v\001\275\234\340\265\274\257\253\020<\367-E:Z/H=U\376R\274\334\324J\274p\2474=\352/\370\274\334\032*\273h1\r=\033\346\325<\326Qq\274\330L\013\2757I-:\036\276(;\025\215\336\274\336\311E=\221h\321<\351\242;\275I\230\271<\t\266\t=\007\211\310<\331\001\256\274\242U\245\274\237u\367;\241\216B\275\001\365\326:G\314\260<g\005\363<0\3345=\3631\222\274\326\273?\275\324\323\353<\031\312\006\275N\266\311\274\236\016[\275\334\036\037=\306\255:=\267D\352\274\373\340\357<\323\2669\275\016\203\251\273#\230\206;\021\303\022<N\312D=iI\032=\325\233%\275\344\004\217\274\207\021\376\2739\005\301\273p\362\202\274\362\3106=OD\211;R[\025=\336|\213<e\356)<\270IE=\200\nV<\005S\222\273!\315R\274\007\222*=v\305\366\274P\271\213;\216\3447\274/\263\362\274\351\354\\=\260\021\207;\212\313\227\273\010\302?\275\031\246\221;\221\001\255\274\363\311\204\274\270\315\213<\"\033\013\275\014\366-=\227Bi<tE\025\275]{\347:\217\203n\274&\023\323;\214\247\352\274\345D\372\274\342\034\006=(`1\275\2756\002=\332f\371\274\206X@\275\036\036\260\2742\336\227<R\315\250\274_\376Q\275\325\352\372\274\232\257Y\275\3254\242<\037zp\274\347\213I:\224\215C=\360c\002<\253~\037\275\242\035\343\267T~\271\274\033\020\262\274z\347U=r\225\330<\204\311F9\233\205\262<\372h\327<4\253+\275l\307\251<\355\215:\274\354\030^\275\001k\014<\255\230\363<\364\207\023=qv\032\275r\n\024=\275\307\014\275\256\3369\274\262:1\274\2747N\275Q8R\275/\233Z\2753\256\267<\211,\302<\203->\27510\254\274f\351\267\273\357R\203\273(\375\r\275\267s\316\274ha;;\226K\033\275 B\345\2743G\254\273$\270\366\272b!\371:z\202\n\274\246tZ\275(iv\274\370}\277\274>\257\360<mEM\274\021\257\027\275B](=cpC=\332A\376<\261\350\003=\360U\221:=\275P\275^hI=:R\231\274\257\332K=.*\024\275\177\0375=\251\235\261\274V\343N\274z\2719=e\271!\275g\237\363\274_\271\262<w\226\211\274\365\206\"=q\317\t\274>\331<\275\rU\t\275q\241\247\274\363\r\303\274\263\277\254\273\211e\337\274\225i%<\030B\222\271\305\306\306<\3006\206\272\251r[=H\025$\273\222\232\362<H\001\"\273?\034T\274F\010\341\274\243X\200\274Os\030=\005t\215;\331\220\014<\333\r\001\275yHy\274e\035\200\274\266*\210\274y\331\325<]\206\200\274\021f\225;\006\036]:\004i\334\273X\353x<\267(\255<\247\207\'\275\267\032;\274l\272\003\275\276\227\301;j\227E=T\346B\275\237%\341<\004\033\016=\336b\326:}\320\023<\010\360\271\273\374\350\r\275\356\314m\2709\'\357\274\035z\354\274\341\037`<\332\320\177:\225\277\367<\255h@\275\217\304\335\273@\273\303;y\243*<~,\343\2732M\253<\024\261!\275R\257\266<\002\374\375<\2725\345\274\316\231R\2735_\002\275&\317_<\002\313\365\274/\014\326;;\200\013=e\026\365\273\347\217\033\275\3626D\274\345\036)\274\310L,=\\\212\r\275\212\341\016\275\334\004J\275\016\251\213\274\026<\025\274\310\305\005=\017\014\376\274\273k\245<\231\215\010\2756\270\213\274\226!\336\274\301i<=\036\313m\274\n\3745\275Bt)\275\2033\232:\244W\r=\231\271\031\275\262:\002\275&\311\004=zG:=\304N0\275\257\246V\273\314\237\245\274\323\3455\274\207\257\313<\344\205\336\274k\233\031\275JPO=\362\033\023=\234\364==\022$6\274\370}@=^B\005<j\n\243\274Y\301U\275\2459\204<E\255Q\275\371\327\001=\023\002\037=\377\322\002=\320\034\337\274\254l\326\274\036\246D\275\250]\004=[\t\213<kT%=?\336\312\274\334\346\243\274\375c\211<&\t\006\275M\326+\274\316\214\t=\005+2\275Og\030\274\342\313\217<l\331,:\221\342[\275\212\347\223<8SM=\347\005\265\274\241U(\275\275T\\;\013o\036=\336\255\304;\263\251\351\274o\234?\274+\337\257;E\217\033\274d%9\274\335\020\013=\001\025\350\272l\200f\274\320\206(\275\337\032N\275b4\010=P\016\307\274.K\372<\307\200\026\275\351\345Q=\226\022m<\261\3534=\260\254\234<J\204\232<v\316\024=\240\260\227\274pq\337\274\345cF=\346\3053=Xzf\274\332\357=\275\032&E\275\214u\311<\322p\267<;E\315\27443V\275@\272\350\271Q0\363;%\324\213<\243W\356\274X\244\252<,e\364<\000,\034\275\351\330[=\267\235\223;b\203H=P\0031=\r\370\035=\330\347Y=\274ZX\275\300t\317\274\225\002\264<i\007?\275%\323\025\274X!+\2756\033Z=\366\363/=\021\2016\273_\007\026\275\310\'\373;VN,\272\n\344V\274\322W\023\275\"AW\275\2124Q<(\366f\273\346\250\274;\327\227F\275\036\304\215<\261\337\260<\342oP=6.\3279\303\220T<}\313\276<\371S6<uT\245\274`zQ\274O\202K=\375\001\370<\n+?=\254\361K\275A\022\024=\tQC<i\253\306\274\333A\017=\375\234\204\274\210&\014\274wR\315\2738\r\332\274\013p\\\274\022[M\2749[\364\274=\314\235\274\\\372c<\351l~\273\262\226\237<\305{\302;\244_!\275{\026\215;T\303\020=2Q\301<\241\302\345\274\311\254\005\275M\322S\275%\376\210\274\216\324\302\2747/.\275&\023\247\274\345\3434=g\307<=]\2334<\247\237/\275\37777<`\035#<\310\3338=\310V\021<\365\0229<\334\227\020=\306z\036\274\340\376\217\274\tUx<d\205\267\274\350\343\337\274\312\333\365<r\2251\2755\325\005;\302>\010\274\225\314\247\274\312\275\025\275)\342E=\352\255\246:\211=p<\020\376\242<\234\270\\\275\262\302\"\274M\005S\275\207\036X\275\317\277/\2759\030\232<-\017\326<\343\0134=\026j\027\275\312\341\267\274\325\002\264\274\342\335H=\362\023\314<\017+\265\274\242\tZ\273g\203\326<\240\206a<\367=\033;\020C\037\275\377\313\260;\202e\036=ZN\375\274\326!\016\273e\203\234<W\315\334<\261\014\017=;]M\274(\001\251<n\373$=q\301\313\274\300\203\007\275\362\236\215:Tt,=;\223\003=q\224\013\275\371mM=M\001\246<\231ju<j\007\337<\030\214\276:\257\271\033\274\342\301)\274!K\302\274\366\374[=j\007Y\275\237|\351;\273\320.\274\202\016\216;\252##\275w\230\365\274\010\305\323<RS\007=\3518\273\274 \336\220\274\373\"\277\274\'\276\005=E  \275\325\351\303\2733:\200<\366\346\275<\365\270>=Q\242D=V\031\343:\212\\M\275\177{>;\340\213\332<\210\360\010=\266\345\003=\220\322\304<\261\262\364\274{\237\233\274!\216B\275P\001\376;\370\037\017=?/==\"\330\225\274p<2\275\325$\003\275\275u\236\274E0\\=\376\363$=\240W\270<\014\321\256\274Px\235\274\034\216\263\274\004\333\225\274,B\205;\330\327\332\274g\223\307\274\223\274\032=\"\025\002=v\250T\275\007\317Y=M\n\254<g\261T\275\330\337\033\275u(\215\272/\301.\275\364\000)=\n\347\357<\367\207\013=_\202\337\27436\021=\337\210\277<9\343\022\275\002/\301<\331\343\352<\323O\364<\233Y\314<\302\037\313<\341\316\034\275b\266P=WW\022=\223o\226\270^i\377<\350yG\275\263\026H=\364\323\260<\005\"g\271\255h\362<\325\177T=&\273%<\264X\235\274\3236Y<x\216\347\274\214\202\262<\233K\326:$s\366\273o_\255<\217\366T=tO5\275R\007\r\275n\257\347;b\002e<%$\227\274\243\004\032\275Y\244\255\273\310\234\021=\tgw<\235\222$\275p\337B\275\3042\215\274P#\214\274\326\235n<\341\321\'=R\360V=v\016W\275\205\277Q\275P:>=\353n\230<=*\345\274=;W\275\262\274~\274\212:\336;\243\3216\275\244\305\022=\227\277\337\274\300\245\223\2741D\262:\311\031);\350\351Z\275f\266u\274\236\312\300\274\225\265;=-\355\315<\314\207C=\315\377\330<7\037/=8\3677\274\231+\304\274\264\310\264<\220\021I=\270\364[\275\204\300\270<\263W\360\274\345\200@=D\'\316\274-\026\017\275/^\037=G\234\216\2746\210\022=\335\026N<\2162\010=G\177\3029\"|(\275\027l\375<\031\224\335;\312\223\030=\t39=\244\221\270<GYQ\2753Q\326;W\357$\273Y\255\020\275$J\027\275 mO:\263\303\300\273\022\236\020\2755\002\026<Lp\026\275\221\275\373\274d\212\307\274\235\034\033\275|q\212<\357`8=F%\355;\3249\033=M\333\023<\005\220Q=\'\340\006\275\344\200\315\274\231\210\200\274\326\227\036=\226,$\275\344\372\345\274\303\321\242\274s\2670\275\302\201\024<\000ft<\254]o\274\361\362\014\271L]\247\273FQ!=h\002\242<U\t\307\273\304\270=\275\223\2458\275\020\262|<J\360I\275GB\014<y\243\220\274#\320;\275\321\0331=iT{;\253\3422\275\346\346\032\274\221\363\341\274\307m\342<\214Q$=\323\362\327<\360G{\274\'\313\007;\242D\333\274\320\344Y=n{\022\275\331\031\025=\361\313\217\274T0\320\2746\204\016\275\'\301N=\000X\007\275\214K\321<}\227A=E7\t=\232\'\343<O\202+\275OP.;\002\356@\275\033VT=\211\010\027=lWh9q\302\355\274\200\322\375\274\323?\340\274\231&\'=\223\215*\275\253\2628=\222\007\035=\036\300U\275?r\201<\'X\361\274\000\003\216\274\364d\363<\247\352\307<\362?\245<O\3472=\251\366[\275[\035\376\274\331\006M\275\263\003\266<\014\240\2269!F\003=\246L)=ac\035\273\254ER=\334\315\204<\271\017\310\274Q\276h\274\361\005L\275\204\212\206\273j\302\002=V(\004\272N\242\362\274\327\341y\274\300\253\331:\265\036]\275\357\006P=\320\310\375\274\234\362\n=-\3002\275X\224>\275\036\302\255\274+|J\273\375\004E\275k~\373<\316\236X<\243o,=)\315B=\265\316\026=M\352\366<\307G\'\274#\361\037\275\372(\026=&\205\233<\312\202-\275\035\374D=u4\034\275AY\257\274pl\200\273\373\2246\273\346\332!\273\312\335\3379K\274/\274\317\213\232<\212\2068\275I\177\322\274E\253\017\271#\323!;\0262\025\275\r\262<\274\346\354\031\275\305\204\200\274I\335\016=V\034F=\2533\274<sV\341<\355\3747\274w\202!\275\362\002H\273\252\352\005=\356\202\n=1/\252\274\363\241\033<H\005E=\364m\010\275\330\331\377;\256|\357<\277\240U=\232\234\200<\'j\016=\2601\253<\3567-=\203\232\235\271\003?\354<\207b\031\275\2330\313;[{\253\274\334\035\302\272\301\227\305<]\221\034\275\301\204&=\000_\005\273\342\230\020=\036\204\300\274k\220k<\3352\244\270\217\\\204<U\251\031=\031\221\237\273g{m<,\3011\275\364]0\275\245\305\023=?\262\014\273\013\346\304<:)!\275\276\356\262\272p\220Q\274<\264\267\274(\200:\274\240\315]\274\310\203<\274U]:=\242/\016=\244\021\270\274\025$0=\211\340\030=:a\r\272\352\215@=0\r\320<J\017\245<YdG\275\014\023\022\274\307tJ\274I\347\362:\377\263:\275\216\352\236\273\210,\247\274\330\374\367<|J\377<\035\356M\275\325\2744=.h%\275799<w\357)\275\263@\034=\014QF\275\275\256\023=y\234<\275\316\311\276\272,\233\365<l\030\377\274bYd\274e\262\004\275\364\246?=\200\271)\275\013:\274<\nb\025\274\211W\233\274\224R\212<6\326\310\273\331\366\331\274\332\305C\275\024J\220\273\312\3508;\277\322\343;&\026\261<\231\023\t<\335\376\216<\232\310\306;.\246\345<T\373\266\274s\346\272<\323\206\014<@\203\315\273F\360\027<\315Q\305\274\023\212[=\242\274\256\274\017\273\006=%\351\230;\217*0\274\277?\306;\343\317!\275\360j\260<jO\273<\267\3648=\267\210\"=}M3\275\266\036B=\034\340\235\274f\270\353\274\t\377\226\273\3240T=\324\033\314\274\003u`<\316\323\031<\204~\027\275d\311\017\275\'\352\253<\353}3\274\276g(=\000\277\253\274e\304\013\274\t+0=\032\307\021=(D\351<\311I\375<\225\321\325\274{E\031=\3728P=@\336\207\274\246\242\027=w\021\005=\214f&=I+)\275\010\005\363\272\003!6\274[\3403=&\227\322\273x\215P\275\236\334\030=\224b\036\275\323L\320\274\312\222\210<u\313X=a\0369<)\002\356\274\274*\225<\222\212\375<$\246\025=kr4=\252\324N=\3636\014\275\327#\214\273\236\255J\275\342\2424=\356\332\n<\023\336\016\275\177\225\033\275\330E\252\274B\201:=\2567\306<\365\364\013\275,\363\373<NF\033=\342T\017\275\332\372\220<\263m\327\274\300\'-\275\353\005,=\367mA\275[Y+=\262#Y={Z\022\275\265\215\002=\025\300\206;3\355\024=?\225\036\275\025\267\321\274m\341)=\246CA<\2442E\275\267N1\275\3364(;\227\n\321<\300-\001\273z\320&\275@\037\272<\314\'I\275N\334=\275\306\261\007\275\230x:=\311\034^<}\364\20696[\251<R\355;=\314\324C\275\360\260\215\274>\355 =\367\303w\273\030\254\227\274\353\265\207\273<\272\360\274\025\320\001\274\303e\264<\3227\321\274`\375%<\001\304%<\345i\363<\007\220\262\274\201\002\370\274_1.\275h\313\\=\341/7\275\272\257\037;M\021\362\274\t\020\272<\034=\017\275\363\334\"\274\216g\021\274[\357\267<\024\367v\274e\351A<\377\3632=\236\302*\275\202\031\237\274o\023\036\274\275\334\233;^VD\275_EH\275 \036\313<\325\321\217\273\200\304*\275\035\253\361<\223\322[=M\266!=\376\274\315;\235\342\034=\023\332\245\273\035\021w<\334\372C\275\211\0301\275Nq =\235\256\001\275\204K\320;n\222@=_\2213\275{\330\334\274of9<\020\240\026\273\237\272\023\275<E\022=1\0027=,q\014\275\300\033H\275r\024\365\274\367\302\371\274\352\240==O\265\323<\203M\007=\376\310\356\274\357\316\033=\233,\205\274\317\332`<\004\351>\275sV \275\312`\264<\002|D=5S39\017\262\207\274\225\215\377<\204M\t<\344\007\007=\266X\236<\240\'\323<\002N\251\274\357H\265\273`\365\321<\252\025U<\235~\342\274N!<=\013\345$=e[\t=\270\367@=\350\2735;\t}\016\275\351H\025\273\360\031\376<\230\266q;\177\277 =\313f\210<\216\321\016=f`\017\275N\204\375\267\275@\315<\201\337\014<\345iY\275WVp\274\335\241\001\275 H\002\275\237:8=^]Y=G<\261:\002\363\026=\317I|<\236\375X=\313\374\003=%JY\275g3\240<\302\2408=\204\314\246<N&\237<\207\260\203<\014\274\353;\3560J<alO=8K\377\274\306\333\263;S\177\004\273q\014\333<h:\3249+q6=\344\330J\275\340\276\203\271$+\377;\256d\262\272\247 \321\273\r\331#=\203\026E\275\352=4\275~\330v\273\t\023\334\274?UE\275\320)\373\274&\202\000\274q\235\250\273i\005\257<\013\021N\275;`+\275a\341\327<\352~\277\274\334\250\225<b6x:\206\211\266<\250iA\274\022I\017\275:\314\236<\267d\013=\350\220%;\263\247\244\274\317\261\2639\270\224\n\275\010\352W\275\222\305\232\274\244\332\\=\003\036\034\275\003\313\373<\3619^\275e\022\030\2751@\271\273!;\003\274Q\243];\200\214-;\214$\021=p\\Y=\304\340\022\275%\262\226;(\333\311<s]q<2\333\357\273\351\277\200<\351>+=}=J\271\020n\021=\352)\201\274\016z\033<\006-X=\312\322]:P\360\265<\244;\303\272\326aR\273X\3219\275\202\352\020\275\r\006P=q\346 ;\303%\023=\026\222@\275\326\375\017\275\'f\'\272<x\245\274kaM\275`\024A=\311*\025<>\277-\274\270\217 \274\260\311\255\274\262\302\020=nc\001\275\021c\001=Q\374\237\27414E=\340g\375<\230H\356\274\"V\001=]b\365\274@W\261<3\016\037\275\277\265.=\206rQ\275\365\343>\275}}\345\274\234\354\r=\006\223\364\274\016\033\343\274(W\032=\270\270]=\213z\244\274\010\200\010=;\t\271<\245\303\251\273VJ/<o\020\345<\343T\301\274\244Y\017=\224\266g\2747y\003\2754\232\351<\351d*=\266n\346\274\2472\024\275\370\371\240\274\323t\034\275\025Tk:\000\217G\275\330\341&\275=YR=\'\365\350;\353k\000\275\342m\326<\010\357\303<\214\032\300<0\037\362<:\273T\274\271\nI\273\342I\243\274\316\275\211<\223\3528=\320L \275[\304\014\275\031\347R=\\=\323\274\222YF\2742G\r=\355\n\272\273\3643(;\013O\315<\016\357(<F\225B\275f[\336;\373\\\033=\177\021)\275c\376M=\241\215\260<\344\266#\275\001H(\275\227#O\274$\355\241\2735\300`\274\260\302\377<\307\333\264\273\036t\257;\002\253\017\275\367Y\212<]\032W\274R\2104=\316\002L=C\253\225;.\331f\274\205\023\340<\374P\275\274\337\000\'\2751\3025\275(|\364:s\343\022\274\354yB\274^\345\031\275\'\246\265<\350L\023\273NY.\2758S\006\274\373\n\022=\370A\265\273\007\230\033=K\350V\275\255o2\275]3\027=\237\004=\275%\234q\274\200\205\307\274\201\336S=\221\357#<\326\260\r=\256R\001<\3354\000\275\371\336K=bM<\275a \3179l\315j\273#\327\255\274\207L\324\274oO!=Y\274\236\274\334C\251\273\311\306(<\234\311\302\274\033\330\361\273gy\263\274\335\356\350<\000^\207\274\346\312\330\274_N\344\274\227\213S\273m2W=7T0=\246\213\211;\021_Y\275\307?K\275\343\373\025\275\360\355\022<\013\302\304<7\216\024=\251q\374\274\030\220\022\274\260I\\\275R\374J\275\024\335Z=\340%H\275{Ds\274\302_1\275f\035+=c\373\352\274\211\277\363;*\236\356<5\200$=\216\003\027\275e\026l<\277\325]\275\224\213s;see;\004h\367\274k\374\026=:\221\265\274IR\205<\314\2107\273 \372\022=7\r!\275\035\367\216\274\016\022G\2759\251I\275;u\222\274\353\271\252<\224!(=\r4O=\370\355(\275\2204>\275\225X\301\274%\333Y\275\374\332\027=h\313\013;\373XF<\360*\001=#Mv\274e\256/\275w\235A=\374\256#\275\214\020\345\274>P\377\274+/B\275\367\321@<\246\223\017\275\3268\234<\252L<=Zi\363\274\006[P\275\335=\235\274c\321\247<\333\006I\275(`J=\354\340\021=\245\336\014\274\207\027\211\274N\243P<{8-=\177DK=\232\024\010\274\301\336\303<\007l\375<\252\017Z=\333J\030\2751\017\002\2750\201\216<\026\274\264\274(\270\331;\234\205\023\275#\367\347\274TXo\274\274\"/<\022\263s\272xx\000=y\327,\274\306\373\212\274\233$\034\275\320A+\275\370OM\275\303V\031=ev*\274C\344\210<<\334\007=<\007\033=\245\036\225<\226\304\263\273#e\246\274$\231\340\274\211\364\005\275\\\234B=z\255I=\034\247#\275\214y\224<\250[\272<\t \r\275\262\214\366;\241\371B=m,\374\274\302\207%\274s\203q\273a\321\212\2742\351\345\274\000\232\003\275\005\325P\275.\000@\274\262sX<\263\034:=\017\270\341<\317\330Z=>5\237\273CP7=\350AY\274W\231U=\204\035s<\204\302\001=7\360U\274\205,\000\275\0054F\275\r\315\233;\237-a\274\332\207\324<\347\267\351\274\027\004X\275\035]\250<\314R\022\275\0043\253;\332\307\354\274\211\230\312<4z{<\375\023A\274\257\365\207<\312\366\034=\241W\252<\3512\365<\033l\026\275]\030<=\332\202O\275n\375\371\274?u\027=ZX\030\275f\3328\274K\252W=\017\227\247\272\337\315j\273\231\203\260\274\226\\D\275g\320?=\271\317O\275\366\341\315\274KG\036<$\313\311<g\350\035=\365l\206<\270x\353<\372\371\026=\340\006\t\275\223\3400=\033&^\274k\205\231\274\320\367,\274%\333\350<g\367\303;\000S\030\275\230\261\\=\347P\303\274Ty\006\275\026\361\022;,\313\267\274<\313\374\274\000\310\240\274\022-}<f\356u\273=J\212\273\352\237\366<\351k\030\275\034\013x\274\250\263\254\274V}6<\024O\001;2R\000=\006\357N=\\\000==OaZ\275\203^\207\274\252\344J\275?\335\265<\264\324\r=\333\341\247<HV\355\273\366\221\354;Z\010\202<%\324\274\274Y\341\347<?\223\223<\037j\017=0/,\275\302\336Z\275uS\300<^\223Z=\004C3\275\350\332j\274d\"\271\274{\326\014<!+\315<\256H\301<\234A9\275\217\027\305\274\346\2413=\352|\366<\224\242$<uXS=\370\364<=\002jg<\324\301\005\275\331\274\317\274\2502\354\274\\:\304<\211=%\275\034!\250\274K\033S\275O\201\200<\203n \274\324\204\364\274\350\010#\275RLI=\217\"@<\n\244\225;\333G4\275.R\302;8\017\331\274\231\307\331<*cb<\215\264[=\226\001\255\2730x6=\023\256\310<\241\270\234\274##6\275\216\315\n=\036*\354\274Z\227*\275\206\340\344<P\001 =\335\323\311\273kZ\357\274\371\032z<L\364\'=\2640\236<P\2301=\240+\233\274?d\374<\255\270\377\274\347\033#\275\321-\340\274\317\302q\274\313.\034=\235-\233<b\023\034\275\300Y\341<\303V\013=VN\'=\336\225\036=\337!>=\373&\216<7\330\251\273\252p@=\347O\326:\244\352\361\274\024A1=\225\225\347\272\276\005;\274\326\371\306<_\354\365\274\226w\255<\376\013H=c +\2753w\310\273`\341l\274\363w\t=\242\360\250\273\366\215C=\327([\275\211\264\205\274_\352\017=8\217L\274$C\n=#\t\224\274\204C\216<\264\312Z;\036\203\031\275o%\253\274rR\017\275\035\t\322<P\264>\275y8<=*\277\031\275\232\034 =lS\006\274\014\221\263;1&\006\275r\241D=<\255\325<\032\224+\275\002\211\257\274=w\007\275U\001$\275\377\302{\274\370\340N\275\224\274!\275\364V3=7[\213\274e\232\325\274\315\325\210;G\365Y\274K;\r\275\013X\303<T\226\236\274z\327\310<7\332\'\275\026_\n=\202\340\352\274G_3=\251l@\274\220\325\331\274s\266\331\267\354p\264\274\036F\305\274\333\022\035=\316\254\031\275\311\211\020=\217\243<<W\2612=g\227P=\333\t\t=\034\271\014\274(\310\312<4{U=I>\353<b\037$<[\216\342\274~50:\360p\037\274\210\372\350\274\355\347d\274\303O=<\002`(\275u&$\275i\353\317<\314fW=\216ZL=\334s\035=\337\354Y=\250\207r<ub\351<\234\020\007\275\232\353\375;\224\353\007=\210\330\023\275\003\333\206\274\036(\351\274\227XY\274\346\350%\275\366m)=\256\010\325<\211O\236\274N\031\204<2\305-\275\355\320\017=0FF\274\201\362\307<\220\037\r\275H\0008\275\322\335k\274\305\322\240\274zt\355;\250\203\245<\306M\245\274\034\235\020=^\237E=+\354\252<\226\307\003\275&c\317<pP9=9QN=\277\270\205\274\334\310 <\3106*=\024\230\365\274J/*<B\"\257\274N\333I\275\257\256\005=\024\302\241\273\224\\R=\333\253\026\275W\242\004\275\316\244\031=\013\325\023\275\251}\314<\207\367\016\274\206\305\316\274l;\236\274d\223K=c+\250\274\370\300,<n\000\355;\303@\010\275\017\034\343:<\214\026<\375\005\032\275\302-\000<\202\300\006<Y\210\230\274\005i<=\022\247\333;\330;\316<v\344K\275\357\210F\275\233\355\261\274x\331/\275\346\234!=(\265\025;\216`\021\275e\022I<\320{/=\347\014;<3\027\362\274\320\276\205<\371\270\321<\tG\234;\305\313#=\265\231\241;\34319\275\257\245\267<\213\010\032=\226n\362\274\247\275?\275j\010\204\274\256\370&=\363\237\373<\352\013\366\274\021W\254\274\360\360*=\177\327H\275\312\002\330;\334\361\r=\226\325\030==\264\377\274\337\337\003\275\2350W\274<\364\257\270~\317\326<2\371B\275`\212\006\275\270/\353<\274\236\037=\356\337\350\274\231L\240\274\254|\300\2742\270\261\274\266\253\231\274\306\025\337:\222\272[=\036\273\360;\330\263D\275!\2124<[\375\005\2756!\205\2740\3340=Fh(=\321\255F=\246a\337\274\372Y\316;\277A7\275/~&=\316\263\364\274\255\361\026\273?\256\313<\327\314\214\273\220.e<I\022\277<\203\201=<\325\242\304\274\340\3154\275\027\246\3559\r\352\275<\344\305]\275\003\006\351\274O_R\274\242\314\270<\212\320\235<\337\346\353<\207\3038= \244\005\275\256\207\025\275L/K\275K#\360\274\254N\310\273\361\"X\2755FX\275\016\013\031\274\355\253&=\004\241\023=\003\223\225\274\204\\\023\275\001\304\377\274\360\010U\275\252\311\027<q\352P<\225\222d<\242\257\373<b\205\035=\017i\371\272i\326\345<\276S0=\325\343\'\275\220H\024\275\365\322:<\0006\216\274\230\263\307\274\221;\335\274\0137G\275\264\306\032\275\310\263H\275\223s\261\274\217_!\275><$\275X\032\363\274J\370O=\022H\343;\305\235\221<z?\332\274p\223^\274\237\347=\275\030VI\275\362W\320\274\n+\303;M|\021=\301L\000\275!B%=\254\302C\275\354\367\351\274w\024q\274\227\360\337\272\374\031\275\273_c\321;j\272\303\274\020\324\331<\230~\t\275OD/=p\\\256<O\336\276\274I\361C=\336xU=\304\357}\274\217a\252\274\2368M=\237\352>=\022\210\016\274\004\342\265<X\230\230<\355\344\203<\313\2579\275\301\257:\274\324\366\020\274\275\203E\275\357vO\275\203n\025\275\345\032,\275\274J\367\274\004\241\\<\270@\234<\037\376\'=\263(\033=\273\275\026\275\031\020\001\2750o\306\274\177z\377<o\260 =\236\026\025\274\030$M\274\254\253\205\274y\020\032=Vi\327\274\027wg;\216\367L\274dR\177\273n\244\n=`DH\275\021&\345\274\026\243!=\340E\254;\r\3731<4\013\n=I]]\273\267\261\216<\346\317%\275\t\270\006\275\326\347\032\275\025\000\003\274L\005P<e7R<\233\2360<\016\316\"\275\236Ve\274w\312\276<\222$\236<\244\203\037\273YG\036\275\336\033\036\275\"_V\275\202\224>\275#\354n\274+\240\231\274]\325\003\275\331./\274\006~\321\274q\200\342\274\006\245F=\204P\371<fbV<b\236\007=\267\\\346<\274\232N\275\010\360\014=4\207\013\275.\203\310\273\207\217\027=\210\300\246;S~W<+\202\270\274\231\203)=\223$\345<\2338\214<:L\274<_\037\r=\333\356K<\323\222\262<\231S\360\273z\'\211\2742E6<\271P@=\350\371\244<\342\272\'\275~N\002\275>\361\024\274\347\002W\275\034\030(=q\222\272\274\352\342\340\274_K|<\'n\362\274\022\3410\275\310\244l<)\351\014\275\335\317M<\302\304U\273\232\305\"\275\207\243\027\274\333{7=\325\001\352<\270\341\r\275\332\006\034=0\037U=\\\2451\275-|^\274[\3737\275N\310\t\275\344O,=0d7\275\226\224\301<\246O\036=>\307:=\311\\7=0\305\200\274\003!\345\274\000\023-\275:\375]<p+\343\274M\237\277\274\315\322\337\274\354\003\240\274\210z\201<\372\034\265\273u\350\266;\214\306D=u\267\360\273\260\241\025\275\244\245\024=\033qQ\275\316T\243<\222\033\000=\222b\334\272.d\216\273\3442\317<\262\220\004=\004\371R\275Q\350\027=\3255\247;\345\354.\275\300\\\034\275~\206$<4\367\264\274\376P\220\274\310\300L=\254G\301;\253\332<=\236\"D\275\230\301\311\274\253\3443=\272\377\321</\234\"\274\375i$=\\6\232<\255\027C\274\033J_<\232\017$\275S\212\342<\333\376\304<\343D\236<\025<\325\274\322\374\214\274\3239\r=\372\323\240<=_\365<iE2\274\355\265:=\227\317N<vT[=\364|=\275n\202\372:\300W\375<\264\323\334<@\367:\275C\301,\274b\245\027<\312\354\016\275\245@-\275\213\376\2749\210}+\275\257\355\355:\300\332W=\222\365\006\273\370-\215\274#\033^\274ss9\274\253\351\242\273\265\300\351\274-\327\213\274;}M<\253\034\265<\364``<\202\350\022=j\333\324<\250jQ=FI\325\274\313\325\354<+\272Z=7\206W=jW\344<\352\340N<\034\022\263:A\r\241\274\322\274`;\325\0063=/\r\254<N\367\023<\272\217\227\274/\341\316\274j,\031<\306\363;\275\345T\332<i8T\275\216\342.=\331\312\215\274\304W\340<A\031\\=\237o\206\274\301\264\032\275\0143,\275\037\205\020\275\226l\303<\230\212\007\275T\217s\274\341%*<<\250<=\342\351\2309k\2221\275\272\276\303<\305\346L\275\221OT=R\244\200\274\312\325\201<D\245\351\274\252\200L\275\224\023>=9Z>=\270\002==z\024\021\274\267EZ\275\243\r$\275\304P\034=\350$ \274\257S\005\273+\277\304\274\236\325\343<\243\351U\274\336\251\002<|\205U\275\033\003\321\274\331y\034\275\022+\344<\037\326\001=\213p\033=\241\257\233;\023\366\245<qO\371\274\270\236\032<Ai\367\274[U\031=\210\324\322<\301M\017=?&7\275^\323k\273_\0166\275T\211\207\274L\333\031=\274\030E<\177dL\275K\301%;S\306S<m>\366<\222\0019\275\277s\t\274\035x\024=\310\305|\273\201$<=\3042\234\274\216\023J=\266WY\274\352O\313\274\022\372\310<\360\275J=r\302N;\302\244F\275\342y\030\275\321\313z<\333x/\274\202p\357\272\004E5=\372_J<\243\345W=\235\210?\275\035\022\221\271\035;\317\273 n\177<Gm\002\274\t\223\\=,S/=\252)\334<P\272\274\274\300\275\327\273*\371K\273T\327=<X\027\t=J\362\021\275\234\207I\273>V\253\274\326\014K<\331\2047=\275\262>\275\363\256\023<\236\356\311\274\336H\004=K`\351\2743\245H=\245\000\320\274\210\t\033\275\035X\352< ,\200:\r=\030\267\307\372?=:\242\232\274N\006\023=\340\n\376;\217\321M=\333\320T=\236\304W\275\210\307\336\274\242;;\275\242\0265=A\006\367<\313\016\303\273\221\257%\275\024Y\377<\371\302\006=\262o\033=\227Q\017=\002\0133\275%\211\261<VT7=\3772>\273\277.\231\274\251\264\235\274\342\033\256\274\017\273\342<\325ua\273\033Z\036\275A\007\313<H\364X\275\250z\250<u\'8\2750\346\"=\362\344\323\274\336jW\274\233\312\361<\226W\225\273\323\272L<\002\365Q<_\323\303<^\261(=\326CO\275\325\026\010=T\3603\275m\3764\275\274\3249\275R\0336=d\245\321\274\334\216\024=|\223\235<hx\036=\206@1==\341\210\274\017\345\264\274V\330\017=\0340U\274\026\321\326<\376\253\270;\230\3106\275\235\270%\275\277Q\020\274\265\277\213<\244\225K\275^\356\205\273\372s\034\275w\276%\274L\237\007\275\377\2158;\365A\236<\310\r\016<\330/\342\274\215\375\363\273\214\n\211<\2525L\275`\007-=\333\275\352<M\\\327\274C$+\274u\315P=\230cZ=\000-\376:\t\337\251<\302P\334<f#$=\362\223\014\275\354\250*<(\242;\275fu\227\274/\000V\272\002\307{\274u[\356;\037U\274\274\350\214F\275\000\303\244\274l\026\374<\261`\016\275\210\347P\273r\367\025=\265E\203\274=\3042\275MA\242\274c\336\347<\260L;<\325\004&=\026\236\014=\265cF=\317f<=\241\337\233\274\204\034\377\274\272h\354<\250\202\007<\214\331\020\275i6\317<c00=\036\304\013\274o\350(\275\371\206j<M\200-=\271P><\355\203\024\275\3674\334<f\317\274\274t\021\037=+\260-=\0060\\\275\253\252\231\274;O\006<~\024\274\273\255\\\315<\\\205\2779`\356@\275\010\353@\275\312\360#=\350\010b;v^S\275\252s\245\274\264;\024\275\020\301\230\274\374\256#\275\267VU=\261h\225;\340\234P\274\223 \255<\325\227\257<\356$\243;\234\220K=\016#d;\251\374X<\005\\\026\275\365\344\002=DOX\2759K\250<\025\'\223\272Z\320\262\274I\347\225\274\033OS\275\300\'8=\354\214A=\23424\275\264^L=^B\266\274\213B\363;\205\343\001=H\306l\272o\314\007=\347ED=\341\226\216\273P[\021\275W\356\270<\016\201,=\252\r\345<\030\272\344\274#\216 =\303\301X\275b\035\335\274\307\313\030=!s\026=\3623\332\274K\373\323;EI\036=0\270Z\275\302\323\252\273\026\266]=\275)\260<2u`\273Wm\277:\032\265X=\336\221$=\033\302\222<Z\271 =\222j\246\273\\\260\027\275\200\333\n=\276\322\004=\n0\034\275\324?\306<\017\335\215<f\252,=\260y\000\275%5\270\274\337\361V<\026h\342<\317uA<\207X\022\275\036\0003<\327\206\026;q\\\006\275\210\267?=}\325\003=M~%\275I\321\375\274h\016\033\275 6\017=\'$\326<\331 ]\275\364`\001<.\271j\273\377\217\343<\260\240Z=\2459]<\375\352[\275\223\3664\2759\267I<\335m\010\274$\007\213\274\003\331\246\273\2569;=\003\301q;N\370E\274\267\237\222\273f#\\\275\347\327\205\273\207\212K=\010\001]=!\207{<z\023:\275\216\375\023=\r_1=\312f9<.t\336\274\351\326=\275\211N\247\273\014\034\312<\244(\302<EV\017\275\230l\r\274$\212\337\274D\323\270\273\216\000\'=.\030\207\274\'\247S\275!Jl<\355[(=\313\033\340;\245\252Y=\201\306\340<\220\304\310\274\337+\265;\336MN=\242c\272\273\234P\346;NZ\337\274x\036V\275\315\250\262<t\306\266\274\276\314\247\274\213\305\275\273\030\nz\274\252\010\017\275\232\301Z\275\211\315\"<q\032w<h\321U<\304\351\000\275\206\007$=\006!\t\275\365\367\241\273Z\315(=\026,\006=\273N.\273\230\014?=@g\010<\310M\202<^O.=*}\200<<u\320<\315n\030\274\223u\357\274g\313 =\350\336\'\275\247\242\363\274}d2\275\310\355O=l\256\223<\235+\335<\' q\273H\3116<\333\024\274\2742F\030=:\202\204<\004?\037=\362\304\'\275E\177\365:\224-\265\274\346{>\275\272\351\200\274\216E\376<^\366L=w\007\340<\244\2679=\304\251\3439t\214==w\320\355\273@Y\236<\247\206\376\274\215\2477\273\270=\345<\214~\202\274p\322T=RNQ\274BUH=\354\327\271<\002\nP\275\366\031T=\t\003\370;\201l\314<\361\003\006\275\204\177\212<\314\277*\275@\374k<k\177]\275(\376=\275w\020\016\275\006\330\324\274\301%$\275\270\225/\275\005\246Z=\337L2\275\027x\350<\2416Y=PN\375\274\335&\231<j\271\236\272D\321\013:\316\313\300\274\311\rY\275\'\2500=Ph\022=\376\315i<\221\310\237<\217\347\007\274\267\361T\275md\'\274~P\274\274l\035\016\275<\340B\275\364!\233\274 iR=\361!\016=/!P=\032ZV=\'B\240<1\367N=I`\367\274|\340\010\275\250d@=\227\346Q\274\225a\214<\270\275U\2759\314\027=\272bR\275\273<\342\274;\362\305\273\332\371]=ApL=}a\013\274N\334$\275\232\236Z= \316\265\274\363\330N\275^\315\350\274\241\202\344\274\006\000!;\0109O=?\275\033\2737]=;\371(\372\274\370\303\323\273f\225\024\275\242\346\0209\207\232\361<\217\357\022=\233 \242\273\253\355#\273`\324\344<\354}\215\274C\304Y<F\314 =\305l\332\274\023\247\240<(\006\352\272+\325\330\273[eM\274z\326\372\274\331\204\373<\013\n\013\275\036=$\275z\\\215<\317\212h\2745\372\030\275m\313O\275\001\316\000=<\234\006\275\242hQ\275A\354w\274*\226\213:\335\030\362:J\2265=\344\300<\275\323\220!<\\>\311;_2Z=7W3\275\343\351\314;\340\301\321\274\365\276\250<>\374\242\274.\274\206<\221\000\360;9\314\024\275\366\261\r=\234\003\350<\222\356\333\274\334a\267\273L\005\306;\267\263\205<\216\331\367<\334z<=\260\227\235\274^Y(=0K\\\272l~0=\355\330*\275 \216\266\274\202\347\177\273\3165o<zL\276<0r_<xU\251<K\307\330;\254\313)\275\005\020\020<\317\260!=\333\260\234;\000\306\n=\324$\370\274\211\251!<\002\234M=\233\347\217<\311y\307\273\335M\002=\322\3157\275\013\020Q<\026\204\311<\261\335R=\030\013Z=U\371d<\237\004\030\274\277\201\035=\035\252\313\274\'\337\344\274~f\021\275\240\320B\275M\023Q\275\006\025_\274\227\273\352<\335\312\033\274O\375\014\274\214\340\356\274\300f4=\240\315#=>\236[<e\345]\275\256\337T=\036\321\257<:o=\275+\271\036=y\376\036=\005\027^<:2\032=\2005\237;\236\027\307<\034\351==\006\233)\275H\"\335<\253N\236\274~\376\244<\230\213\324<\023\264\216;W\244\r=Y\255\325\274\305\037\355;\023\226E\274M\267?\275\324s\001=J\332\017=lf\255\273\306Q%<\303\261\251\274|4C=\0224\376\274\251\370\374\274\212\277\341\272EQ\032=\242\304%=\210.Y=\242\3264\274\341\375\240\273q\335\324<\270\360\034\274#A\027=%j\t\275\031Q;=\306V\315<\270\362\005\275)\337\271<\226%.;k\323)=m\006U\275!\302*<\323W\017=0}\373\274\3402\"=\333\035\016=pUM;\302\255\254<\3318\201<\233yL<r\322\324\273;D\260\273\240\276\274<}\335*=\302k\027=\315_\014\275\235\342\360;\270\033&\275\260\004\375\274\253q\212;\177\301\317\274Y\031[=\234,\311<\342\316\030\275\213\363\262<\014SI<=\270~\274\026\246\241<\325\250`\274S$\324<\333*,=\232`\r=\236$><\rA6=\367\225\377;\346\223%\275 \214C=\357ai\273\354TR\275\274\214!\274\254\210\026\273\3275\252\273\236]\317\274\307\215\246<XT\003\275\335\335\315\274\357M5\275\277\016\217<\373R\260<zi\247<]\215\250<\035\032W=\233\216\230\274Y\261\224\274tR\206<\276 \254\274\345\352R=\345\370 =\332\346A\275\366b\275\2748C\331<D\025\201<\277\336\367<\027\320\030\275\200%[\275C\265\233\274#)S\275\317\244\315\274\311\244\t;s\257\346\274\202\223\362\274\016Z\210\274\270\202\303\274/\224\010<\253X+\275\261\271r:\224E\255<%\205+\275\210\232\'\275\327\262`\273}6\251<\332\243\310\274\272\306!\275e>\353\274\332\241\265<9\340\200\274T\017]=N\'N=J\332E=^\264\273\274L\273,=v\016\023\275d\rX=6\276\232:\034\351R=\332\250Z\275\325\357\327<u\255\223\274\363\273*=\000\213,=\265!\"=\322L\274<m\247\014=\221]\311<\037l =/fA=\277\361\n<\271\031g\273\273\377\264<\235\305\365<\30570\273\362\353\253;s[\254\274\205\331\"\275\315\277;=\216j\'\274\177\313\"=\226\247\324<\261\271\222;pD\326\274\372\237{<\232D\234<\246[\031=\223\010\377\274\227^\354<&\034\261\274\317\014\000=\333\306\022<2\207\020=\023\223\213< \032\030\275A-\037=\377E\261\274o\255\265<\235\275V\274\036\205\314\273\036{\200<\\^\217:\325\3760=\241\240\236<N\356\006\275b\357\000\275@\nH=\030EX\273\006\354\231\274\364@\300;\202\324\320<\200\243-\275+~\206:\2302\373\274\221\366 ;/4\241\274\305\300N\275\246\256<<\324\033>\275l\243X\275\331\324]\275i\2753=t\236W\275\337\341\000\275`#F\275\302\240X=}zO\275v\"I=\220\036\322\272\335\340\226<N\314N=\013\366\003=F\210\252\273%m\246<Y7+=\014}J\275k\310\202<\306\352\321\272\262\301\331\274\333\316K\275P\341\216:\256\304\n:\\\020>=Bv\r\275wn,\275\211p.\275\262!\001\275\240V\016=\250\271-=\016 P\2753\263k\274\366\276>\274L\302;=g\272\371<@\355,\275\262\010\037=\373\367\373:\200\214$\275\273mK=\373\265\033=\353\355-\275!\244)\275\3361\t\275\245?Q<O\316F\275\235\216\231;iO\302\2740\2576=1\367\375<\362\263\006\275\217\211P\274\312\231\247\274\320\333\301\274\311I[\275\003\363\361\274\031.^\274r(S\275\177\374\270<\n\361q\274\255\364\005<tl=\275\353\017\033\275\321\371\001=fp\354<\231\315\001<\004\331\261<\335q\037=X\257\237<\004\034H<\202c\202\2747|\251<\233\261\303<^\3563=b\345\201<S\342\210\272hl\007\275\026::=t\005@<\330\277\213\274m\317\261<\242\231\037\275\353\313\206\274s\303\273\274\254\"4=Hf\010=\352\240\014\275\375\251\021;\232y\\<j\200Y==<D=og\010=\214\002\242<#.?=G\3738\275$tM\275\252b\010=\271\2507\275\272\277\356\272\225r\214<M\023c\274\\D\320\274\335H\"\275\016U\337<\335\236Z=\356&\016\275\033\252\017=\202\253\317\274\305!`<}\r\340\274\240Y>:\000S\010\275\244\0250=4\205\357\274\262\351\361<\213\242\"<\367\016\225\274\307\317\247<\307k\323\274ha\007=\373zW=\227\267.\275\027\344\031\275\373Tk\274\224\005\331<\242\261\332<\244F+<\217\275\022\272\t\253.\274\226d\201\274\004\3640=\330a\020;\376ZQ\275\357\3476=\034\315\032\275\232*5=\266\270\222<\335\363\237\274C\302\'=\244`\362\274\356Tq\274V9\301\274B\365k\274\032\232f\274e\371Y=\313H\335\274Qs\303\274\354\213F\275e\247\327\274!\351\326\274\3318q\274\200t\263;5\001\203<\205\022\207\274\n\306-\275\272b\017=\t\'\"<q\311\201\274\212#\254<\362\262J=y\007?=i\210X\2756\256V;\330\272\035=\374=\316<\322\317\231<4$j\273\023J\016\275mIU=\036\367\r=3iL=\3420\\=\234\034\004\275\273\262\303<}\365-=\031\226\020=j\036\016<\266\215\231<;\030>\275\342p[=.\312x<\310\035\007<\267.M\275\270\200\322\274\267.\220<\276\n\024=2Hm<\316X\355<\350\310\306<L\001\'=7\227\007={\034\324;/\rR\275<?\201<\223x\233\274\236/\265:\345HS\275\302.\'=H\250\224<\261\220\023\274OHq<\210#\034\275\026\350\225<\007\347*==Z\202\274\223r\036\274\000LZ\275\275\307J\274U\336\370\274\036\250\033=/\264\027\273\202\344\313\274n\3745\275\304\2046\275\370\262\207<\376\243\\<\270\177\023=\374\3631\275aN\367<F\377!=\204\276E\273\300\345\026\275\377U\371\273\211\036\025\275\325\004\003=L>\354<J\215\205<\257\340\356:UD\334<*\244\215;m3\371\274^U\227\274\031@6\2755\013\034=\2738\247<-\310S<\302#/\271_6!\275\177\275\003<\227\"\351<\327\371A\274\022\033\275<\010\250S\275\221*\017\274Qg\241\274\321\007\"=\235>;\275\354\374\267\274SP\n=\023\220\375\273\316\365\364<CG\035\275\024\0144<\243\331\336\273\025H:=y\000^\275%\037\007\275\027\204\303\274\246\325\217\274M4\375;8\303\372\274Q\006\246\274ti3=\214\201F\275\245d\031=\031\3552\275\223\311\303\274\035x\035=\371\231H\275\276\236\321\274_&K\274\3274\370;\204q\025\275(\214\\=\343\274\247:[\304\376\274`jq\274\367M\252\274\317\323\177<\322\335\001\275v\265\275\274\262#]\275;\342\337;\327\227)=\376\'7\274o\013\\\2754\360\270<3\001R<$\213\221<\237\317K<\372\002\036\275\275k\017\275\343\317E=\250\376\026\274\376|\264\274\323\311a<\2623\371\274 \017\301<\203b:=\315\036~\273\025\252H\275\336\225\327;\335\023v<\rZ\026=\260+\033=\244\315\205<\365^\242<+\215\222<au?\275\020\356/\275\364t\037\274\356h(<\341\2415:\203\027\363\274\245N\026<\246\251\325:\336\272\357;\004\371\372<\366\315x<\025DV\275u\323<=\336\346t\274$\236\352\274e\r-=\261\362z\274\334\020(\275\036\327\"<\023r\026\275z\255\223<\233\301\027\275R\215\\=\006\256)=M\340u<\277\000u;\014\001U\275\210\243\005\275/\346U\2751\212\371\274CJ\343\274\255\317P=\237U\316\273\021\263\022=\316\246\241\274\215\330I\273\002\350\013\275\332\034a\274 $Z<5\260\022\275\310\301y;\267\034E\275~\322S\275=?-<\326P\005=\257\317\243\273\270\212|\274\321\036-;\r\322?=\037I\007\275t\354E\275kG\273\274H\264\231;d-&\275`\017P<\270\204F=T\"\023=NO)\275+,\273\274r\253\327<m1H\275\326P\316\273\355\251<<\n\2102=\231\3624\275\324y\263\274b\250\260\274\361\347\213<\300Y\037\275w\210\307\274\035\023^\275\345\211\310\274\261y\247\274\352cT<v!\305\274Pr\360<x\272\024=_C\336\273H\272\021=\2630\211\274\264\373\334:\231\364\326<W\272$=\375R\234\274\320t\234\274\344eR\275%\320_\2748<U\275NH\353<\")&\2746\240\315:\030\\\034\275\016\333t<\213\030\266\270L\022N=\372\310\336\272\0224\027\275\n+\310<\226a\007\275\351\3348\274\001\271\036\274\005\370\231<\001\036\240\273v\231q\274]\345R\275\345i\330\274\220:\243\273\266o\037=9\261\n=\360/W\275\013\3275=\300\232\\=Ry \275\317\366\007=\034<\032\275ZS\354\274\221\036\365<xc\320<M\330)=u\006\002=\372\017\362<\225\272G\274\301\327\000=\200\2417\275\365\2750\275\337j$=@\324N\275\372\346\310\274K\324\345\274\356\352\210\274\355\362\360\274oi:<\255\235\000=\027\025\025=\177\355\217\274\034\356==|\021\007=\200\255\277<\213;t<z\365A\274\370f\271\274\377\004(=\211%\007\273\365\2677\275\276;\375;\007\025!=\211\242\343\274\266\036\036=\"\351\260<\226Y\374\274\001\344\342;\340A\341\274+:!=\302\014#:\351\226a\274\271\261\3549Y\363H<?s\205\274\343\317,\275\241,=\274\010\254\344<\001R\034\275\215\002\342\274w\3034<\267s\266<\331q\207<*\241\032\275\272\310\245\274v@<\2751)B\275Qp<<\224\016\\=\276\253\227\274\016\024\314\273\301m\326<\345\376-<\327\375\313;\235\225\330\2745\037\373\274\222\031S\275\361!\350<+ \270<J\321v<\260&\346;\342\337\340;\333\241\334\274\026>@\275\221\002\354;\022\004\341\274\n\376\316\274SV1=\332\252\025\275\223\342f<\337U\324<X\000R=B\322W=\261\331\273<K\262\242<z\017Y\275\370\013\007\275\226\210\300\274:\r\205;P\222\206<\241\366*\275\306\200\250;\261\273P=\375d7\275\316+}8\206~\245<\265\367A\275W\222\226<\327N\204\274\255\3622=\352\021\351\274h\207\306<\004\002\257\272\323\360\003=\027\317\031\273\366\340\232;\007!\353\274\nWC\275[\016B=\020\332\245<\002\210\\=\031\n\035\275\350\270\266;<xI\275)\024:=\333\316\021=\020\005\032=\217\222\335<\356\2408\275\247^\241\274`\010\367<\004G\031=\014(S=\270\373\033=Wa\\:\004\253,=Q\262\260\274\033\024==\313j\217\274kB\020\273[\033\026=9$\233\274\020L\r\273H\260\027\2740\235==\2167\t=@,<\275\013\317\251<\021\243\374\274\374\237J<\017Q\020\275\266\250\215\274\351\203A=\345h\257\272\216\355\023=\255|\024\2740\235\220;\323\001\"<\203\3365\275,\334V\275\260\336\257<\303\346\233\273\n\021\262\274\3613\241<g\260\374<S\225T=\243r\\\275\376\323\016\274R\262\210<\250\2254\275\332\0006=\263\377\004=\247K\n=oIP=\320\013D\275v\316\335\273\243p\204<\250m|\274\0147\250\274\250\204/\275\335\327-;r\005R=\033\031J\275V\327\204<\341:\237;O\316H\275Q\002\240\274\304p\034=\3435\373:\350my<\223\223%\275\33236\275c\313 =\244\345\337<\256\0204\275\301\370\370\274\256\276I\273]\005\021;\330\370\r=\267+<\275\231\343\363\274K\300\247<\343\306\275<N\233\035\275\247Y2=\214\272\210\272\341\031\247\273\215\270\007=.BP\275L27\274\357#W=\312B\303\273ih\317\2740\253\230;4\231\252\274\371(\211\274[\027p\274\266\'\271\274\360#\375\273\341>\020<]\245\203<Q\215\347\273\322\312\232;\205\206\245<\352o.=\36423\274\312B\035\275C\030\020=\224C*\275\231\022/=8n\026<\322\002^\275\253\374\310\274I\206\037=5p\037=\204\004W=ol\020<f\374\322\274\033,\313\272\306<\226<\374\227\202\2740\222;;\237\247\375<\311\311==j\273\275\272\362%4\275\007\365T;\003&\026\275\364\366\242\273\367q4\274\001\021J\275\325\034S\274K!\247\274\231\306\027=3gK\275#\373@\273|\226\217\274_\2564\274Xj8\273,mY<\326\334\263<*K\371:<NC\275\256\204\021\275\304\236q<c\2551\274$J4\275\324-\336\274\350\225\027=\202\020B=\352\207\264\274\350\nL\275\341\257M\275\226>D\274\325\306?=\177\255\236;\315\003\244\274F_\014\275\337\014\016=\257\320\\\275\357b\035\274\'\207\2559nc\033=yn\377\274a]9<\352C+\275\301*\031=\005Q\337<\333i\366\274@\350#=G1\254;\002\010F=\342\177\305\274\277\340\027:\303;\'=HR\255<\252/u\273\306I<=90A=\347z\225<\271)S\274\032\223\022\274\232]\010=[I\027<\312LD\275\024p-;\215\334\202<\261\270N\274c\265G<\024\254_<K\327\027;\212\240\233<\203\316&\271\340\237\020\275\035 \216<0|`\274j\237K\275\224%M\275\267\265\2559\271;\t\275I%S\275i[\n=\005\261\316\273\353\306A=\2304P<\241)\331\274\355q\273;y\026\372<(\240;=if\252\274\340\347\n;\232\332\031\275\013\346\356\272\330\203\377\274\360;.\275B\365$=\314f\313\274\223\334\025=\033\014\320<2q\006\2738\270\306\272\322\377 =z?\324\274\\\247\254\274o\207\262<\\;2=\262\250\234\274\246Os<j\323X\275\262\220\037\275^%\227\274f\247\036\2752\275==N\366*<n\030e<\332y5;\367hZ=<\\\266<4\357E\275\017~\253<\245\364\035=\264\212\345\2747\003x<V<\037=\"]Q\275}\2648\275d\202\376<\350\326\014=\327\220Y\275\213t\013\275;^z\274<M&\275fy9<\232O\031<\210\215A=\003\256-\274w\210\271\274\361\2749\275\022b\322<\260\260\271\274[\236P<\021\2376\2755\374$\275\025\376\013<\020\014\244<{\326&\274\343\n\342<\267\023%\275\203ID=\244\264\007=\000@Q=\306\322F=W\024\343\274\355x\323\273\3736\240<\225<H=L>0\275\334m\203;\233\337\332\274-<\035=Nj\'\274\371\030\000=\307:\202\274\225\2019=\224\272Q\275\221\263\315<ed\222;/\374P=\275g.<\022\244\250<Wj\212\274\312;\006\275u\344\373\274\n\363\233<\34703=\025:\032<\230\331\013<f\370\216\274\3526K=\"M\007:\020GU\275\254\317@=\210q\210<s:l\272\277\361\234\273!\3014\273\243cS<c\350\'\275\305J\354\274\031\020L\2757\017&=\223\004\255\274{\034J=Z\252S\274R\331\352<\276\2452\275\366JV\275M\002\006=\005r\336\274Ge\n\275\344\225I\274\211\035\223<\226\3416=(\325\276\274a\010\354\273\2337\272<U:\226\274C\373Z=\350\322\264\274S\315\004=\324\022\323<!&\006=\230\030o\274\032\306\200<4\206\350<\345\262\201<\251\037?\274\332\314\244<qG\177\274\350\240%\274:\201\266\273\007\200m\274\260\266,\272\365\177\366<\257\244O=\214\\K=\276\203\325<T\034\003=$\265\005\273_\274Q=n\266.\274\002\322\004\275\364NV\275\002^\007=\266\314\000<P\274 \275\214kr\274e(\366<\300e\217\274y\351><\206\344\325\274\275^H=\027E\367\273\341\360.\275*?<;\022\210(=\276\213\337;D\001:\275\343\357!\274l\t\366<\271\245U\275\262\003\027\275\316!3\275\310TK=\253\240Y\275\035{\236<1\326!=d\311\211;\276\227\300\274<T\240\274\030\202\177<*II\275\260\233\031=\245\265\023=\344\177\014\275%\362\020=$G7=4y\237\274\360\274\254;Ee(\275\235\211\343<\360\222$=a\3251=\270\214\226\274\031NK\275O\330\311;\262\035$\275\243\313\202<\274\020\034=\336\254\341\274\216\330!\273\244\020\353<aJ\234<\275\362A=\347\220i<S\007\014\275\331uC<\344M\375;\300q\"=$\352q<\330\263t\274\303\034S\275i`4\275S;\216\273\266\006\023<\026U\356\274\325s\343<E.\026\274O\316\323;-6q<\350\2052\275\326\311\007=5\303?=\255\233\205\274~9\210;\336mc\272\223\023c;?\n\026<\347\246\027=\305c(;\374s\220\2731\324Z\275\200\371\253\274\005\335a\274\225\306\353;\253\317\366\273\226mD=\034*\261\274;\0102=\025\2065=\215\353\030;\242\243\022=\272\373*=\2501T\275(\\.=\277\235\n=5\206:\275\317n\331\273s\334j<\366O\265\274\314\030\375\274\354F\336<\342wG=eO\000\274;z\355<\335\031\315\274\206\252\317<\244\256:=\276#B<\214.*\275,\353\245;\343\3708;QS\233<0\361S=\307\233\245<\345\250\001=)\nW=\314\254\377\274\022qR\275{\364[\275\372\014::\356y\310<-nX\275\n\255\020\274\177R\377<\376\214\026=|I7\273\367\212\014\274&\230\035=K=\234\274\366\373\236<\346\237\311\273\214YP=\026-S\275\217y\177<\340)J=\3248\025\275\214_\203<\211\300]<\374\0367\275\373\354\227<\360\351\312\2748\357\013\273\330\247x;\270\265\300\274\377\377\000\275\205\271\305\274\201\\\245<\3512\017=\'\300\006\273\343\223\006=\341tW=/\037J=(\347W=\005\245\003=gU\217\274\r\333\350<R\n\210\274\372\323~;\372\265\301\274\222\261\013\275\216\3556=b\035\206\274=\374\275;<\230\021;\336\032&=*\340\233< \244R<\013]\t=\001\277(\274\026\265\341\274\265\357\364<\022K\022<[@\314<\241\310\005=\032\2364\273\356w\366\274\324M\237<E\210\246\274d\257B\275\014\324]=}\230\257\274\021\372\355</\314&=\357\355\'=\232|\267\2741\334\032=Y\224E\275\310#o\273\274\257\265<\207\231\360<J\265\2548\206f\257\273\034\204.\274H\332\346<\2520:\275\235\352Y\275\310\315N\275\335\353X\275>D\025\274`>[=\205^T<\024\n\031\275%\345\335:M~\000\274\3556\223<rH\225<\373f7\275\222\024\357\274D\272v\273s\032U\274\004\225\307<\016\351\005\275\025\3205<;\030k<\016y\302\274\224G\353\274O\016&\275\340\373z\273&\350L=gq:=\334\243-=h\014\177<\302-\3659\226a\215\274?2O=\202^\256;\245\376\246<\224\rd<8>:\275\214\227 \275;\201\333\273\020\345.=\202,*90\274\255<\211\336E\275D\034\352<\371\334\032=b\251,=%o\031\275\'\317\225<\362\023\315;\216 \273;\265r*\275\232\230S\275\010VC=^t\025\273\013\231Q=\257n\261<\274\337\262\273\233\236\200;\363@\372<\317o\030=\022\361O<\203RE\273h\035\257\274\363\020\025\275\177\030D\274\356V\265<\347\243\233\274\270\2060\275\273\266@\275M\372\027\275\263\356F\272\210d1=\372\377\017=\341@ \275\265@?\275[]L=\344\226R;4\031o\274\376_\305\274~\252\351<\314\276\017\275|\2307\273\273\313\271;`\023C\275\243~O\275\355\031== X\347\274\330*\323\274\334$\374\274<\227\376<h\256Q\275\234\324B\275P\376S\275\370\326\t=g\276\254<*\t\201;v\350\241\274\t!\003\275y_\227<!,\223<\250Q\310;\267:[=\026\337\377<\'\372&=\221\344@=\325\327\331\274\327\304\366\273\312iB=\373D\021=\267\266\332<\256l\314<\260\215R\275R\367o9\367\026\366\274\340i\301<\221\0058<\215w\232\274\262\261G\275{\211\025=\320\221j<u\010?=#ai\274k,\321:A\026\003\275\233\210\027\275M\306\311\274t\347\010\2748\261X= D\321\274\362\001\344<\032\255T<\214\024Q=\303\344\335\274\377h#=\257\212*\274\351\262\351\273\245\312\005\275e\"9\274MLR=\003\321\036=\3165\177<\377\033D<X\264\230\274N\316\270<\242\261r\272)\315\344\274\364[.=_\217\325<^8\211<E#7=w\244\201<\320\304F\275\013Y\317<\236\001\217\274\345\274\000\274m\336\356\273\'\254\274;1\3036\275\302\324\207<\270\271\257<\224x\263\274\n\321J=\377\216\325\274\ni\322;\3430\226;WE\332<\272\245V=\253\rW=*\243\244\273\363G\244<\320\2235\275\350-\256<\275#@=f4\366<l\340\013=<8\033\275\220eq<\017\240M<\3665;=!\036P\275]\232\033;u\350\365<\310\267\005=\230\206\001=\351\225\3029w\226P=\231$w;$;\023\275Cu\241\2749\317#=\323|>\275Jl\003\274\372\223N=\013\002\223\274\265\264\n=\202\207\\\275.\371$\275d=\016<\250\277>=\030\311\320\274\223#!<\231\327\025\275\332*\346\274E\227\276\274\031\277\342<\005\036\005<a~\317\274\333z\023\275_\251\\\275L\311\275\2733\372\366<\323\014\354\274\333\2109\274\301\363O\275\203}o\274\254U\224<=\034\216;CC\326\274\242\'!=J3S\275\351\311D=\t\365 =\255\224\273\274L|\251<\341\304\003\275\225\3320\274\007\272\234<\246\224$\275\254\356E\275M\2758\275\274_\307\274FT\031\271\257\232`\274\305[.=|5B=\327Oy\274\327\t\247\274\313\202\312<\332\374\t=\341\023:\275\026\346\t=\375\223\334\274\363`G\275\355\2059\274\202\230\215\274\212\035\321<\014\177\003=j\322X\275\010\370S=!n <n\375>\275&\323\233\274J\037\371<\270\234\000=n\231F\272I\210p\273V\337\215\273\350\335\205<\320H\316<\263l?=\300\220G\274\025\344\005\275\213\222\311<I\367\311\274Wg\263\274\220$\032<\372\2459;\226\312\034\274b\003D=\244\333\005=\273\200^\274y\037\264\2749\365)\275Z!4<\352\335\223\274\n\332\311\274\331\222\036=\374A\345<\237@@;\361\360\216<f=\205\273\236\352\214<vML\275\340\362\340\274\000\027\030\2756\332\232<\030\202\271\273\273~N=\330\013\\\275\251d\205<r\004\024=\017\266\022\275?\357O=\237\243\240\274\3519\022<\301(\307\2744oh;\245Q\221<tF\272\273|\0265=\3419\211\274\314\251\254\274WF\226\274\205k\345\274{O\020\275\251t\360\274\'<\371<\037\177&\275\357\345\t=\266@;\2756\032R=\342\335\312<\272\267\363;\026tS\275\004\204+\275\303\375z<V\200H=\302\341m;\206T\022<:^\360<K\272\000=\206\3617\275\'\025\024=\372\0270<\303\027V\275\315\345\\=\202\000\350;@v?\275V#\017\275la%\275\253U\216\274\007\244\366\272fV\031\272\200f\332\273\205_\242\274K\257O=\005(J<\236g\311\274\343\234[\2757\263\314<Ju\315\272\347\226\331<\304\355U\274\266\254\021=\037\371\266\274o|\250\274\313\204%\275;L)=QqY\2750\366\033\275\240\217\013\274\343\356\234\273\375C\305< M\332<\243m\n=y\013\323;[}0=FE\202\274\240\317\275\273(\350)\275\326\200\313;\277\366!=\302bN\275\201&&=\304\331D=\354\215\233<b\271E\274\021\021\030\274\207\324\227<\216\303/\275|\3148\275\245;o\274tz\350<O\023\233\274\314\2021\275\234\014Z\275\203\024\220<)\010\270</B6=\362\",=\300w5\275]\322P=k\253\345\270\207\022?\275T\273\032\275q\331\020\275A]==\246\247\t93,A=G\276\241\274\323\365q\274\345\341\241<WC\317<N\200\315\274\020\354\"\275\347\3275=\361<\355\274Hb\023\275\262?\343\272\357\334Q=s<X<\021\007[\274D\365g<h\255Z\2758\375\230<J\221G=0\374$=\310\232Z<\227\317\006\273\004\031\206;d\014b;x\363L=Z\313\026\275\213\3033=*s@\275\360\257V<e\241\037=\362\246J\275J4\007=\"\303:\275\275\314>;D\271\007=nU\264\274\306\027\255\274g\300\311\274e\373\310<\3021j\274\233Z\005=\004\266H=_\223\030=h\361:=\273\304\257\274B:[\274e\022\237<\305\225\233<\203k]=\320\310!=\014@\341\273\210\037\021=.o\374\274\301\350\334\274xZ\235<\322\276,=\334\370$\274\276\245\203<\356\263\304\274\240S\003=\332\350)\275Z\355)\275}\373\017=j\270p\274]\275B\273\320>%<X\020V\274\032>%\275\332\374&\275\246\301\330<\345\\\303<O\201\021<\335\225\223<F\371T\275\rt~<x\234\212<\362s\006\275\324XF=\263\246;\275\320\275\345;\250\003\'\275\346\2344=ZB\317;\365\344\372<\363\250a\274m.\010\275\356\323\212;\350r1=\305?\335\274\001\200\007\274RK\'=\331H\323<tC0\275\'z\002\275\273\273X\274\013\001\016\275\222\275\374\274\240\344]=\363B\311\273\244\001\014=Bs\\=\222\223\206<\030a-\274h\215t\274\350%\327\274\003H\007=\252\370\336\274D\342\366<\026\372\216<\232\362\266\274I\253\017=\276\362\326<u\264Q=\312\350\024<\2334\237\274\354p\016\274\351\t\254\274\235\253N=\261\307\352\274\363^\324<\254\022\005\273~\340J<\034x\021\275u\013\036\275&\315^;Y\3415<~\361\340<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\024\345X\2759E\025=\026\250\030\275\333\325\021=\344\\\210\273\001u\245\274\371\375K\275\226\332\025\274\245\370\273<o\256\006\275\210K\347\274M\017;=\263\355\000\275\260\265\227\273\244\306\\=,\224\032\274\337\'\344<_\312U<\\\313C=\204:\217\274\201h\201<\236\345\370<\233!J=\262$1\274Qaq\274\343\337R<S\277}<\371\305\207\274\301\026:=\0069-<a)B<\342\304\250<\312\013F\274n\001V=\344\237\033\275\241\214S<,\020\221;x)5\275t\355\010<;\222$\275_8\n\275\346\237\210<y\372\270\274C\344Z=u\n\334\274t\327\247\274\214\rr<\272\264\003=\021\036T=\032OV\275\234*?=\221j\211;\206\264:\275\014.\r=\2674\014<\2368\030\275\233\357\023\275#f\'=%\311\274;\207%\325\274\245U\271<\025\257P=Wv\347\274\301\013\242\274\274\227\220<g\272\244<\305\352\220<\244(R\273\245\315\301\274n\355S\273\366\236\220\274\253\372(=t\371\002\274\353\004\371\274\345\255\265<\333$s<\255\234>\275Qv\007<\214\332\240\27427A\275\\\021S=\325\331\026=\rz\224<J\272E=\214\335\032\275{\206.=.G4<\032\004\001=\342\325C\275\374$\334<\256\335\026\272\316b^\274q\205\014<*\217.=+i~\271Dd?\275k\000\257\274\215\211\001\274[v\273\274\246{\343:@O&\273PB\224\274\232M<=Fs)\275b\014\206\274\232C/=n\212)\274\0017A=\347!\333<X\255\200\272\000j\243\274\245\006\036\275e\204\\\275\231\321)=O\330\211<\376\242\304\273Gs*=O\212\322<.p\034\275\0017]=\304V?=.3\211\2738dQ\275\036c>=j\335\002\275\223\336$=\357\"\336\274\nS6\274}w\020=\2464\025\275\'iA\274L\\G\274=q\220\273\275\374[=\234\3272\275\304\260\030\275\262\344|;\346\024\003\275C\341\320\274\332T<=\377=-<\363\226\"\275S\236\n=+^\n=\300\252\177<\331\354\246\274\245\033,\275bi\035\274\204\214\222<y\022-<\303\357\002<\2611\021\2750VL\275\246a\001<a\340S=\315\230\336<\236\204\025<>\2145\275@\006\240<*64=\241\325\234\274\253zQ<\300!)=!\224\373<\3737\002=b\234U=\350\324\231<\375D\366\273%\272\305<\266BQ<\300%\026=e\232\017\275\'\221\212<\241]?=c\243\376<\212\221\345\273\245\350@\274\305n\321;\236*\333\274\254\273r<\222\265?<~\242/\275\351k\277<D\233\367\272u\240\247\274S\340\005\275j>\234\274\266\026&=\305\234%=\355\234\334\274\022\326L=]\250\214<\331;\021=\302\230[\2755I1\275\265b\245<\241%B\275E\232M\275\'[\230\273\245\024z<L%\342;I:\236\274\037\313X\275\200\031\014\275\267\031,<\322mE=\207\376==\225z\207;\27247\275\\\245\021\274et\032\274\267\006Q\275/\001\346;Ri\300<\366\235\331\274y\373\027\275\232\256\322\273R\206+\275\310h\314;yq\203<\202u\322\273|(\313\274\010BP\275WoW\275\236*==2r#=\215\2411\275!\\\257\272\256\262i\274\316\273\264\274x\274\024\273+7C<\216\261\354\274O\340\362\272Z\023\375<\370\213\022=\331\312\350<\002O7=:j\217:p~<\275\231\014\005=\345\"\226:\372xY\275\n\215,\275j\204F\274\034,\322\274\2301,=\276O\235\273.\t\004=\334C\340<\017\220D\275+-\230\274\025\253=\275i\277I\275\262\371\004<\311\240\233\271`d\001\275\220\241T=T\"\256\274`y\375<\341\025\356<\025\3603\275\352CW\273\276\235>=\223\213\222\274\325\360\235\274\205 \275<\351\315Q\275W\002\214;\025\206O\272\306\020H;\350\341A\275\222*\233<A61=\025sT\275\330\235\017:\250D\232\274\342\2472\275\253A!=\0335\257;\357B\270;\244\326\'\274E\005\375\274>\325>\275\201\200\223<<e*=\366\315:\275O\2170\274B6\202<;\203\347<\203#\010=\3223\317\274*8K\275L\274\033=lfb<\340\217\013=\2135\322\274\036\024\366\270\271\223\014=\214\207\315\274\356\022\n\275\177\367\\\274\275\276\223\274XmA\275l\362\031<\307\277\343\274Cw\235;V\312\373;\217\312\370\274\0365\316<\252\341p\274-\365\221\274\237\026\"<\307\376\253\274\225\025\303:L%\214<\004\240>\275\303\375\037=\362\334\027\274\215-,\274\307\345\246<\211\342\002:\024\305\337<&K\352\273\3540\'<}\202U;\361&]\274S@T=V\303)=\251\221\224\274QV;:\361\263Y=\331\020\273\274K\312\371\273^S\323\274\020\204\320<\r\256S\2753x$\275\007\225>\274\177\337\\\273Vo\214\2742\232\004=\264\326A\275\0022\035\275M5^=\343\311\243<\255\247O\275\350\036I\275B\006\r=\373\347)=\276h\250\274\254\010T\273\216#\023=\331\000o<<\002\346\274\353\267\245<\214\\#=\205I\026<W[\353\274\226\202+\274V1\"\274\221\0277=4\371[;\036!\026=\237\350E=\010e\002=N\355\376\274\257\202\205<\352\342\264\273\375}\003=Q\213\030\275U\231%\275h\371};\2478q<E\036\371\273}7)=\263o\225\274z\026;\275\r\321\376<\316:\213;\001\362P=\177U\025\275\rP\242\274_Sb\274\033\372/\275Y\346\033=2\216D=/\331%=K\354.=O\3443=\276\360\303<L\326c<\255\365E\275\305I3=\333\253S==\315\222<t\026\020\274bDT=\035 #\275\356\'\035=\226M4=R\246\030\275\314\322!<\232\260\006=}\243\274<%\217\331;\373a@=IP2=\261\317W\274\261\207\002\274\037\326\206;\202m!=\036\373j<Q\257L\273\303\r\034=\257\035\3729\"p\315\274\233)\r;\302\335/=\226\000%=R9G\274B\262\037\274\326\2707=#\312\250<\306\\4\275\231\357\177\274\030>D=\372|7=\324b\244<M5\251\273\026\255\203\274\211\242(=uOJ=\351\360\374\274Q\346\026\275x\215?\275\r\010A\275El-\275\n,\001<\r\n\257\274o\266\200<\226L!<f_,\275\204\222\247\274tX\304\274\244\364\\=$\347\235<6\232W\275}\250\252\272@KH<\337\302K=\266\230\320\273\372\250%=\322R\266\274v\0139\275\243\377\376\266\000n\005\275\354\r\277<S\363\240;\353\375\366<\376\221$=\330\025\004\274\006 \314\274\314\204&=u\264\261<\nI4=\222\220\226<\010gJ\2755\2610\275r\032\321\272\273\321\254\274\037\030\336<4\225H=\264\335\200<\006\240\021\2740\326<<\313\362R\275\231/\223\274\006n4=2\026!\2739\256R\274\027\315\214<\323#{<E\345\270<s\220B=\375\315\353\273\020:5=vg\366;H\317D=\230\261\275<\353\2219\275[N\267\274gn\375<\270E,\275\237\267\306<\301\222\374\274\220\211N\275\270UY<x\0072<\001\305)\275\271S\230\274l\361\340<\274!\324<Bd\260<\337I\024<|\322+=\342\023\365<\350 \303\274\030\353\245\274H|(\275\243zG;\212\366/\275\037_K\275\225\360\026\274\235\005\014\275\207x\200<8d5\272\010\324\244\273\006G\036\275\332-:=>\030\211\274S\037\274;\017w\r=\343\202\376\274Y\270\022\275P\264\225<[p\335\274Q\365\331<gLO=(\n\366\274\326\362\031=\221\264\367\274h.@=\207\237\327<\354\ra\274dN\376<\370C\320\274\263\2514=\371tN\274\236\363\261\271\026\216B\275M\\t\273Ei3;o\225\t\274\001\311\305<\343\204\035\275\201\371\240\273\361\242\202<\373~0<Y\232P\275k\351U\275o\3677\275\252{\007=]P\256\274r+#=\362\332\000=\2004\360\274.\361q\273&\r\311\274\200!\013<\t\233\370<s\360F\274h7==]\016&=RM.\275/:\030<\302bF=O\005\033\275\247\3104\275\002\225\241<\024J\025\275\372dH\275\377\204L\275Q\264\017<A0\247\274\033\221\005\275\237\260!=\240j\321<L\036i<\246\324\305\274\304\312\005\275\376\374?=\017\377:=w\364+=\\\361\223\274ik,\275a\r\005\272\\6\232<MeE;\000_\241\274GS\352\274u*\277\274\304\220\276<\313\234\357\274\252\221\251;\206\035\375;\260u\033=\221y\036=\207\317\032\275\036\223\024=&{\255;\215\323\262\274F\262\375<\330D\360<\373uu<aFW=\202 \333<\303:\r\275\311\246\r=\003\017\354\274\003\327\177<\332\0221\274xE\022=\251\343R\275\247\266\017=\0268\253<\201$[\275&\177\"=\316\0273=\302\n\303\274\027\204#\275Y6\306\273i\366\362\274\202\352\222<E\266\026\275:\302\260\274\203\212\2379\375\031\025=}GV=\325\363\351<\304\305\326\274\376l\r\275\3033\364\274\333\366\253<\021\323,\274\343\375\317\273\347\220&\274[eJ=f\027E=\225\205m<\010\373\374\274\275\245B=\241sB=\336/\007\275\277m!\275\351<\374\274J\3562\275\022H\363<Xx\037=K\320\020\274\264\235\304\274\266\340\n\275x\205!\275\243;\017\275\254\261\363<:@\302<\375\314\306\274\272\334\314\274\300\376]\275%\177\004\274\243>\311\274\262\300\314\274\345\256$=+A=\275\023\343I:\213\374G=\024\335\276;>j\006\275P\245\241\274O#{\2737\0300\275\244Z\307\270\317S\221<EEn<\373\355\364<J\263D\274Gf\345<w\364s;{\252\"\275\363\010E=\303q\242<*\002\223:\374\204\373<\277\326Q\273\257\003\276<o\225\337<\210\250\014\275MO\024\274_\367@\271d1\324:\255\332D<\344\310\227\273D\237\026<\332/4\275\034\353\360<X:4;\373\224\312<\272\"J\273\226t\326<yO\207<\235\315\r=\303Z\376\274\207\034+=f\254S=T\245v;\252+\000=\375\243&=\322/\\\275V\312!\275/\332/\274h00=\221|%=,]\234<4!C\275\346\201\236<\224\0350=2\310\333\274%\340\225\274\tT\267\274\\=e<\271\274\277\274Py\000\273\250\341\r;\246cH\272;0\000=\214\266(\274\031\335@\275\215\235@=],\235<\362\n\255\274\230\003\"\275\2007\027\274\244Z\346\274\323\354\233<Q\270+\275\362\264\361\274\0074\234\274\343\036\200<\361\222\034=o\331-<4o\002\274\262m_\274/2\253\274\210S\275\274\010\017O<I.M\275\236i\326\274s\013&\274M\232W\275B\253\223<\277\334\337\273\340\376\030<\341\262\276\274\212I\032=\023\335\013=\250bE=\3168\271:\340\201?\2750rq;\363\236\3478wq\213\274\330\312\t\275\025\362\013<\007/\315\274\333\354\013=\340\024\202\274\274\234\t<\262\310)\275J\232\256\274~[0\275I\245\016\275\361f\330\273E)\273\274\253\251\356\274\332\302\226<\206\'\006\273\305]\033=X\347A;\255\236\024<K\201\t=5~0\275\022k2\275\351\346\002=\364\206\304\274\261_\021=\"\372&=\241\nU=J\302\010<\260\261\032=eo\243\272\004\321\374<\314&(\274D~\252<r9\277<r82<4\216f\274tl\251\274m\262S<\024\303T\275\033\346&\274\266\037\202\274\350 K=1\026/=W\215\304<\025d\2464P\230\255<i\244\335;\264\255\217\274\333\315.=\276hQ=\202\216\351\274\256G2\275A\245\203<\257\204\220\274\200\301+=\373\241)\275,^+\275\t\3637\275Y\2772\274\017\352\200\274\254\223\257<m\022\257<\362\250r<\025\266\257<\257\354\225\274\314\rA\275s\303\274;\264P\033\275\266}\013=\277D\273<r\225;\275~ 4=\017\004=\275\364\2134<\355h\305\271\275\251\006=n\017\016=\302\301\325<\014\"\026<\355\341\243\274(\234b:|\020L\272e\350%\273&W\037\275\341\345\373<\316\303*=ZK\346<\177!3\275V\017\242;\344\234\353\274Q/\353\273\005\326E=Zu\034\275\336\270\313<\207\351\320<\347\360\252<\257\327\022\275KT\037=b\025\034<\370\375\007=\230\006R\275\016\343\275\274\"44=\240\313\335<\2046/\275\311\243\'\274]\267\223<\217\312\355:t\363\235<\235y\202\274s16\275\t\340\330<\300}\332<UlX\275\372I\016=;\205^;w\331\r=8\344\035\275\022\301\034=\274\271\246<\005\314\325;\2319j<*\256\313\274\000\035 \275U\023\322<rF\010\275W<\336<\276\222P\275p\rP\273|\025;9\036\014\032\275\3027#<\204\tL\274\033\335R\275#\\[=\006\031\267\274\262\226\325\274&),<\213\364\310<\326n1=.|`<\232:\002<7t;;#\363V\275\005[K=#\260\233\274\304\215\014=Q\203&=!+9=h\364\217;\030\335\326:\227\361V=\214\177\237<\367\225\000\275\244\001\204<gD\353\2743\013V\274\254dR\275\271q\373;\"\345\233<\274\r[\274XA\225;\005\032\346<~\006\345<\224+\332<\033E\353\274\340DN\275\377\225\202\274\025\364\331<~C\204;\215\010[\275\246\216\374\274@{D;D\010\302\2747|\002\275}\260:<+EB=F\201\200<\276\376\340\274]y\320\273\365\2608\274f\227R\274V\221=\275\352\"\211\274ZGW=8\013T\275,\004\022\275\322\271L=y\227J=\200@$<.\336\002<\306\371\302<\373\246\273\274\277hY\2758\033\027=\320\246M\273\010v\'=\331\355+=?\242\270<O\374\235\273Z\305\003<\250U\037=\321{\000\275T\303e\274\023\310W=.:0<eh\026\275\234\037\377;\365\202h\274Uj\307;4\2544=\344@\357<\273\016Y\275Q\t\010=\210\177\242;un.\275\206\326\226\274\346v\242<\3777\237\274\314\\\006=\006\267\003=\303\000\013\275Jm\354<\333\267\025=\235Qr\274\215L\235<l\355W=`nH\273\010\221I\273d\306\260<~\214H<.\214%\275)\245T\274s\206\240;l\274M=\026\017.\274\347\307Z<}\253l\274\"<V\275Xj\007=\376\211\2239(\3168=\276\210\277<[\353\\\275\270\267\375<V\017\275<\277\271\036=\024\2408\275m\025Z<49\323\274\273\253\376:`\233\323\274\325p\332\274\0000+\2755\361\003\275\0359U\275LP\304\274Bx\234\274\3377\r=YC\211<,\207\333<\216\n0\274\014\025}<\372\030\030\275\272]\224<\241h\356\274\325\221\275\273\340}\355<\325\372\264\274bb?=\217\327&=\211\004\210;\031\222\363:\245\t7=s]O<\257\226\334\274\001x\000=\010\014Q\275\203VI\275\'\371\034<\334\275H=LD\213<\223\276V\275\314x\300\273\235S\014\275\007\347\307<\214~\025<}\025b<\213B\357\274\343U-\275R4\354<M\213/=\007E\005\275\223\341\377\274}\302\021=\361D\273:\305\362\201\274\376FD\275\025\234\305;2\332C=]4/\275\275\302\010=\004\"<\275\360\271\364\274\254\207\232<Z\265==>o\217\274A\260U\275\360\222\003=(\213\026\274\3440#\275\306*\363\274\222\347\001<\243\342<=\234\0136\275\302\226u<b\244\246<\273\271\022=\316\024\037\274`\330\"\275\237;\033\274\351\366\240\2727;\266\274\352\304\334\273\325D\002=\376\023\213;\243\"\026\275\2508\033<\355\0036\274xP\350;\300\002\375\274\372\002<\274\035\262\315<\241}\210<\303\304\301<\276/\276\274be\345\274jm!\274\004\270\201<N\242\304\274\255N!<\203\334&\275\356< \275\031\326$=7_L\275\277zC\275f\217\031\274G\277\034=\224\326W;#\2564=\323\220/=t\237@\275>\234\240\274\314w\214\274$\253\276<9\307\305<n+\266<$\364\351\274\n3\364\274\316\375\037<\002\330\003=\300\244>=\014\022\241;\036P\002\275E\036\025<\211\3051<,\006\"={\037\016=\346\346\027\275\261\233L\275\261\252\227<\301\375\235<\307\021\352:?\3335=\320\3049\275\t\303\\\275\246\377;\275 %\335<pN\257\273\243,\330<\360\360\270\273\264\233\017<\213\316\025=Kt\003\275(7/=\r\330\314\274\213[R\274Cx\001\275\000\262\200;n\2331\275Z\213$\275\334\276 \275\333bA=\345|\353\270\017l\034<\322\205\026\275\226\006.\275\231\"\r=\254\233\004\275\")\373<\373V#=\024d\277:\262O\227<C\324N\274z\006 \275gOk\274t\230\307\274\251\006:\275\200\005.\275\037C\'=\351\235\212\2745f\302\274\267\212F\275\355\301]=\367\207\254<|\361\320\273\033)\361<\371-\315\274\344\254S\274\253\'\000=AE\326\2744J\353<o\257+\275\261h\304<\331\333P={\361\222:uV\245<u\317U=\255Z\032=\263\356\221<N_\t\275\350\3066\275\033n]=\363:\202\274\322W\254\274\341\245\203:\201K\206\274\010\253\377<FI\t\275\273\3032\275]\3523\275\342\242@\275 v4\275\027\324\014\275\204X\377\273\327\362\357<+\323\034=cRV\273\240}]=g\313\257;\247\024\016\275EtF<D\265a\274\010/\242\274&P\021=&\374\372<^]\3738G\000\342<N\327R=\327\2623=\027\216:\273s\240\224<\333\225N=)k6\274W\206\354\272\234\221\337\274k\322\037\274\265~i<<\376$=S\264\013\275GK@\275\0227\026\275\226A*\275:\213Y\270\"\224\301<F\2362\274\235L\341<\277\307F\275~\366\210\274\343\021\250\273\037\2012=n\220M=&\037P\275.J\357<Bz\266\273\021\265z<j\217\363\273\272\250\214\274\227\357L\274U=\235<\270\355\213;\002\224\034\2754\315\234;\206\372\207<\343\224\323\274[p\360<\215\274l\273\367g<=\312\234\034\275\347A\330;[\350\222\274#Q=\275\233\331L=}g\306<I\353J\275\261\210H=\t\377\251\273\367FM\274\376\007\'\274\370\347(\273\213\266\\\275\026P\354<\217\246f<\3151\263\274Ad\370\274\261\214\005=jDr;\021\035\"=\322q\200<\260\323\331<\307XQ\275r\327\250<ZT\n=\227\222:\275z\\Y\275\274=\r\275\233\026\257\274\000\023\n=9\217\013\274(U\002=n5H=\321q\357<m\243D=\245\366K=:\376@=]\033\017<(\300h<\010d\375\274\305\241\312\273\333D\013\275\341\306\331<9\276@\2751>\023\273\025&\337\274J\327&=jJ#\275\271\323\336<\222\240(\275\2574\334<\370v\340<\\\001@<\027\014G<\345\032\361<\310\370\236<\210\261I=n\255l\27365\256\274\322\373\026=(Q\035=\245\017\311<9\222\033\275\177<\033\275UJL\275\263\271\201\274]\342x<L.Q=\207zF\275\302\007S=\311\327\351\274\351\364\233\274N\263+\275iP\023\275P\034\n\275\001\035!\275b\255\"\2757\025\211\271\000\201P=mK\002\274\323\204\257\274N\3308\273\027\212\327\274w\250#\275\344\'&=K\026\002\275\032\220\316<Q\342\217;\333\220n\274Y\266+=\033\207\013<\374\363.=k\013N<\277\354\276;\252\270G\274\332>\276\274\356\002\333\274\272\276\337\274Z\263\027\275\252+\364\2749|,<\274C!\275\241\326\340\274\245\221W\274\352\331\251\274n\267\027=\030\226\314\274\236/\003=\345\362)=\355?\003=V\006Y\275\245cO=\237\365=\274]\345\013<\343\254W;\316\305]=\356\322\301<\203$\253\273B\004\270\274\311\\\006=%\365f\274\2332\217;\313\374\322\274\36675\274\361\203\003=\350\236\220\274\001\\\316\274\270\356*=\255\312U=\230\3667\275\201m\013\275\321\2620\274O\3770\275\225\213\332\274\246c\360\272H\334\255<\214>\035\275\327\035\205<\026\213\337\274\362\t\223\274e<\303\273\034$\303\274P\305\270<\253L%\274k\347[\275\001\217\007\275\365\314+\275\323_K\275\342^\321<\211\177\006\275)\212\007=p\336\275<r0\007\274\366\261\375;\224\204\361<\346\272\313\274K.\032\274l@7=\264^\204\274B\376t\273fE\360\274*G\320\274v\377\312<X&\007\274\376\322g\271\005\342.;1\315\234\274\301\301\272\273\300;\375\274r\201\357<\232-\236\273\375&\245\274 \024\211\273W\212\3369\345\037M\274_K\354<\225a)\275~\306\260\2741}\374\274)C\305<\022\321\244<\247>\372\274\3473[<J\025L=P\270\210;?kZ\275\377\251J=X]\237<rS}<\276J\244<T\335?\275\367\210N=\257\'\013\275\2153\201\274+\330!\275N\233%=\014v\337:\336\314<\275\271\376Q\275\315\3767\275\217\364\233<\302\233U=\347\036\371\274\037\034\231<i\0240<\224\205\024\2740\357w<\3273\'=\235E\026\2742z\256<V\234\312<&c\313\274\326\301\220<\346J\240\274w:\037=\202\336u\274R\311\336\274\266d\202\273\t\177q;\316|\277\273\255\2330=\241\264\031\275~\236:=\237\362\007\274C\375!\275\r\3136\275\341`\t\275\314\260\332\274\230\270\\<L\300\252\2733\2378=w(\036\275\343\035\210<\306^\306\273\373,F=o5F=\273\016\224\274\233}\244<\014\236\007\275\246\373\013=\363\037Y=i`M\275\351g9<\313\266Q<p\321E=\340O\246\274\360~4<\031G:\275\246\3362\275\'i\212\274\375\205g\274\033\2210=\234v\006\2751\323\'\274\344\355#=\031`\020\274\331\001==\024\227\\;-@\"=\205\206\210;\030\264,\274\352\234\266\274\267\277Q\275\313\303\n\275\264\232\362\274G$8\275\354\332P<)3\254<\3203*\274\311E*<Fu\026\275\2075I=\014\355H\275F;H\273cr;=\200#\024\275VGK=\302\374\026=\"\237\345\274\323\351\003\275H\246\t=\366%F\275W\030\025\275p\203\320;z\3077\275\225\255W\275\031[q<\200\344\021\274\346\0371\275\310S6\273\256\314W\275C+\261;<U\\=\220:2\274P_&\275\220\310\353:\016\230\356\274\372\241;\275\242,\023=\231\231\211\273.\274\000=\002\366\024\275% _<\2279\337<-\024\251\274\014\021\236;\360\253%=\310\332X=\370AI=\031\343\245<\177\223;=\216\330Z\275\274\n\237\274\207\377\013=y\336G<S\356\203<\332\226\333\274\024Z\037=\314\377J\275\355\277R\275\307\332\365<d\270\017=\201\317\000\275&-^=n\r\027=\275\225N\274A\022\023=\263:\214\273(Uk\274\364o\235\274\276\306\215\274T\'4\275/1\271\274\017\t\035\275$\244\345;;\303\022\275\320\261\032=\001_\010=yZI=\017\205.\274R\213\216;\216\323\211<\032b\263<\253\377\255<\235\032\333<\217\246]\275<W)\275\264\236E\275\303\3471=u\003\245\274\324\021\242\274\231\203\345\274\273\235\320\274\026\352\347\274J\"\251<M;M=\r{K\275\336\207)=au*\275\010]\245\274\010\233Q\274*\215\026=O\213.=.\037\335\274>BA=d\306X=\367Q`<\3632\215\272\316\024c\273\360\036A\275\225\250\341\273\323\016\026\275b/\347;\353t\261\273\016\273>=y\347\024\275\257\312\007\275\013#\215<\236M\007\273\372\224\031=\006\311\301\274\263\267:\275l\243\204\274]\236\\=\237w\277<M\033\036\275\006\261G\275\t\0377\275b%%\274x\357B\275C\2500\275\022\264V=?y\205<\021\215\264;\360A7=T\271\237<:\347U=\264\276C\274\007\264\013\275\242\0325\275\262\225\371<7I\014=\337\017(=\207\347V=N\025\304\274\246c\363\274\326/y\274\360D\276\273\031\023\223;L\"1\275\214.\335:\201\372\020\275~e\217\27390B=\311\306[\275\255J\327\274\332\377\341<\342\221\036=F`\364<\360\251\230<\317\201\237;\234\250\250<\006\221U\275\310\002\033\274\252X#\275n\372\261\271\230\204\023\275Sl8\275\253\265\234< .\374\274\314g\203<\021\271\347\274\017\021*=>B=\271%\025a\274\005\\\230<\205\336\345<T\247\225\274\345\335\227\274\205\202\\\275\255\213w<3\274b\274\250g\350;\345\307\034=r\364B\273\233e\236\274F\262L=\212e\300\274\020\266\037\274\211\001\344<\026\341+\275\2021\022\275=\326\365<v=\\\275p\254\020=j\274i;_\222]<\201\025&;\026\250\030<\234\021\340\273 W0\273F\303\334<R\262M=\215\t\023\275\233\201\360;\266\256\302;\374\341T\275E\021 \275\2540\344\274\344=S\274\352\213~\273\232\335\035\275\222\270G=:\314!\275 3\263\274\364\351\217\274\267\234\036<P\001\363<r=\000=\037\007\037\2754Q%<-\244]=\010\371$\275\304\356\026\274\331`\353;,S\340\273\251\301m<\243$W<{x\344<xz\201<C\221\260\273d\256\243\274wzL=\350T\003<\323\023+=\233\000\235<9\364\257< \220\222\274M\326\037<\205\343S=T\325)=\352_\264<\246\330g\273\375.\220<\321\244e\274\262l]=K\003<<\360\212\023\273\255\312.\275 /Z=\017\372\375\274\227\350\265\274\217\230(\274\251\352*=\377\226\002\275\257\250\230<\267\234\023\274\3245\024\275J\373\237\273s\010L:H\371\334<N\270\324<\364\350\023=\252\260\031\274BP\340<\251\336\r<\256\246\\:\377\013\367<\323\035\005=\021\242.<K#(=\374\340\227<\016\236(= \203\314\274.\327Q=0t+\275\325\345\007<v^Y<\227\304\005;\225\344Y\275\210%+\275\010,u\2738\232g<\331\346 \275h\377\004=\323\240\212\274\246\265\021\275\301\311\310\274\300\267\031:\005~1\275\2417\356\273\265\276\357\273H\333]\275\331\351\037\275\247?y<\226\034\306\274<\375N=a\037]=\377\270\004\275\314\001\367;g\340\275:\010e\035;\'`\033\275\260\033&\275\r\256\360;zu\020\275\345a\n\275\022\031\032\275\254D8=\371\275\200<\353\\\211<\234\t\356\273\3761\217\274\016\247\022\274\013:\n=\345$\345<\215\223\034=M\354[\274Ey\261<\017\375\242<;m\025\275<\016\211\274I\0244\275\212\373\260<E\243\252\274\313V\337<\361Yc\274\217\351\377\274\375T]\275,RG<\226\022B\275SE\306;\324f\304\274\\\023\020\275!\227Q<b\027\024=W\013-=\004\022I\275\355\237=\275\323\232A\275\271\000 <\270\222\025\275ed\335\274~\376\313\274\230p!\2724\376\362<\202\300C<\202_\313<0\307\205\274_!\3358\237\317H\273\320\023X=\037d5\275\231\234\023\274\241C\263\274>/!=\257=\350;\373\303\200<8\3768\275\032\201\020\275\2238\"\275\033\235\246<\323\003]=p<\021=\201c\317\273\t\210\205\274\235\016N\275\322Kz;\031\224\034\275\264\323\223\274\031\345\247\274%\252\006\275|\033\262<\221\265\"\275\270d\374\274\334\310\016\2758\364\265;z^/<I6\325<\306?^=\332\277\330\274HW\244;<\\\375<3w\371;S\002\276\273\200Sm\274O\3519;r\275n\273\326\243\014=\373\033\336<\203\"t\274d\013\345<}f4=}\202\010=\256\312\217\274:\034\027\2751\347\365\274\316\232#=d\212\346<\325\002\r\275\336\323x\274.\361\307<\27395\275\000U^\275\357\240\"=\006\342O\273myh\274iT4\275O\374\345\273\022\312\006=\255\355g\274\223\250\323\273\031\347\022=1n\331;\013G\010<\270\001-;\373\204P\275)\3661=S\312\037\272\3734\226<\357\236U=\033.\273\274jGH<C\272)\275\234\337\323<\315\021\220\274\344O\034\275\201\336/=\034h\t=\242\244\"=\021@\204\272z\345\004=\210\016K\274\026w\007<\275#D\274\323j\230\274_a\230\274\232\363\033=\233}\235\274\"\201D\273\334\211$\275~]\370<U\365W<\270\357/\274&\324\227\274\271\036\330\274O5L<]\002T\275\242\316\230<\347\260\367\274t\\\004=\267fD=\315b)\275qj\030\275\242\235\027\2756E8<\346X\356\274\371\014M;go2\275)\265\370<\321\332\350;\356\232\234<\203\365\246\274\322X\267\274\245\352\201\274\317\035\341\274sd^=\310#(\275\233,\271\274#pD\275o\0241=\241g\350<\253tQ=\023\036\256\273\304#<\275\201\202\210<)x\310<\006Y\003\275\213C\020=%\200\210<\225x\272<i\0312=\033[\215<\356J\006\275\367\357)<\340ei\274\017\010\007\274\200X|<\016Oo:\277\370K\275&1/=\215\nF=\324\211\177\274hF\270<\311\000\335\274.L\013=\246\214#<L(h\274n0\251;\010g\'=k\345\004<ef\263\274\346\364\227\274\350O\331\274\374\004:=\364\330\r\275]\013\323\273\034\014\003=&\366\017\275\327\363^\274\023z\022=\324H.=\023\213\377\274\n\353$\275\323\266G;\017\275%\274g\030\265<\343\346\r=UA?\275d\212S=\277rG=\276sO\275t\3446\274\367\213\036=\022\021\215<vD1\275P\322\027=_G\016\275\241\241\364<:%-=(\215\274;\364\270\255\274\016\323W\275\336\rG<\274\261S\273\370\030Z<CX]=@\321\310<\230k\337\273A\324\354\274\367\242\357\274X\014\362\274m\313\032;VO\267\274\264;\220<V\254\037=O\341(=\017\374>\275\302(<\273\336\277.\275\310\332\027=#\246\201\274\264N\224\274\354\2328<\253\346]\273\333\007\330<\\\005\026\275\r0Y=\t\304V<G_\324;(\273\'=\374\201\347<1\213\337\273\252\275H\275\201\010\017=\300\370-=\020B\325<\227^T=\234Z\244\274\276\207\362;\r/\361<\033\356\301\274\224[\227;h\300\257\274\004$^\272\344_*=\t\371\r\273\270K\260<\226\022(\272Z\247A=e3{\274\017\237?=\311\3140\275\007\344\032\275\344\0340\275\323\233\203<\213\314{\274\262aW\275\005\214\r\275\036\375\007\273\223*\341\273[\177K=\304j\022=\277\333\263\274X\241+\275\215\202\023<p\3376=Y\332P=\021\366\017=e\233\307<6\357\177< \201C\275\2772\032=\316\376\253<:\0052\2753\236!\27515\227<v\001\004<\363\0210=\227^\322<B\341\271<\305\324E=e\236\220<\007\213\326<\324\355C=\244\365\374<0\005\032=\327|\367\274\302tM\275\237\023\361<\317\322\002\275\250\346\320<\366\306\030\274J\253\365\274\032R\027=\r~\200<\021\222b\274$\331\220:\320 \374\274\204\336\253<\010\2661\275th\226\274BV\223<\213\247-=\242\353K\275\033{\327;a\304\343\274\207\212\320\274s\031\017=*\347\370<`\027D\275\013\266\213<N\224T\275\316\212\217<\351\331-\275Y\367]\273@\010\204\273\317\225J\274 \366P\274\230\243\336\274\206\360/\2743Z\332;\302\316\314<\315T\234\274\037W\010\274\217\031\030=1\252\371\272_\312B\274\257A\017=*|\261;\007\243\007=?d[\275ua\036=n[\034\275=\241\354<\317\343\t\275\"\375T=\215o/=\214h\303;\2211\350\274\366\227\034=(\361\221;\301\367\203;t\3123=\276\261\007=o\365<\275\326hM=\331\034P\275\245\217Z\275\274\265\242<\305z2<\231\221\231\274`\002\267;\231\265$=lY\275<\301\276P<\227zX\275:#\024=\003\t<=\010D#\275\246<e;\\\323I\275\314A\246\273\260~\025=\376m\370\274\226E\211;6R2=A\344\022\274M&b\274\212\271>;\337\366\203:\024\374`;-\t\230\273k\017\023\275\245:\237<\367\326V\274v\330\033\275\020s\034\275\352O\215\274\031\257\371<\275v\000\275\352\301R\275\2079\327<\372,C\275^6,\275\241\217X=c\025G\275\244\3401=X\r\336\273l\301\033\272Y\342u\274\'\315\036\275a\363\021\272H2\020=@J =\0036>\275*Vr\274)\033o<c^\206:\214\375\r\275\002\244\361<\33170\274\350\331\302<L\264\257<\362\266\031=\304\324\007\275Iq\014=\031\270\257;W\0078\275!\376\016\275\250\236.<\254\016\206\274\351\345\014\273\307\024\262<kS\222<\234\201\355\274\336c\305\274\313\321\022\275\317n\367\274\335l\316<^\236l<19\367\274>\272\376;\347\r\030=\205wr;\315\007\343<\333RD=\373?0=\033\200\362\274q\363G\275\201\0344\275\026\323\005=\264\215\010\275n\303w\274\344\237.=\336+\220\274L/\202:&\312\226\274\302k\344\274\255k\023=\213~\360;{T/=\013p\004<\256\374)\275\025=$\275\223\n\367\274\314.O\273\272\002\257<~\027\005=\310\247\215<L\363\310\274\3673\203\272t\321\230<\022@Y=\017j\020=\022\344\234<\3355H\272\"-\031=\375\0347=\307l2=\022XP<\"\355\325\274<I\207\274;\033\372<W\030V\274(W\242<\275x\242<i,\006<<\r\005=^\361\370<g\034\376\274\374\262\026\275\206\366\212\273eYB\275J\006\370<P\267W\275\216w\n=\033!_\274z;[\275(\322@=\240\255\256<m\036\032<\355\3748\275\352\340\262<\275\320\016\275\004bx<\261\t\017\273w\203\341;5\212\347<\263\314\\=\2403\367<\353\0063\275@\237!=XqF<CQ:=\014m^=\221\260.=\251\014:\274\207\\\227\274T\226\010<\005x.\275\326\332)<.\201\316<\355\326\203\273\232R\\\274\227\034\006\275\037?\257\273\264\215\006\275\300\313P=\032\246\330\274,\324\234<\2106\372\274g\211\005=\022 \272\274\317\244\t=[g\234\274\020\311\320<*\361\201:[8\t\274\227!9\273\244\255\270\274x=B\275q\205y\2748$\322\274\324\265S=2\016\022\275,\234\224\274\364\205\356<E\010\245\274{\350\"<\205MV\274a\331|<\276\017T=,\345\304\274\273\263\355;\254L)\275\367\023R=\234P\024<\246\215\252\272\273\307\014\275\026\010j\274\367\0050\275\210\245;=/\276\337<\346\3305=\246j\\\275\323\347\367<\232\234\326\274g\032\036\274\000!\263\274v-\217;\246\035=\267]\324C\275\004\001\351<\217\355E\275\25676=\227Y\304<\262?\354<\363}\025\274Z\026\234\274\023v\214;\211\312\341;6\220\323<aN7\275\037\303\252\274\213\207\263\274\365g\037\275\264\001\202:\263[\276\274P~\232<\025LI=\350.\024\275\265tZ\275\352H\203<\021\263\203<\266R\'=\227\207]\275\016*2<0\222\006\273<\341\323\2743\002\334<C\236e\273G\325\025=\347\013E=\350\3703=v\345d<\353JY=\334\247h\274\324E\017=\247\325+\275\267b[\274\313\021\276\274\272\2153<^\223L\275\376\216$<\2254\321<A\037\311<\263@[\275]\336\333<w\216\016\275\375\267E=\314\344\t\275b\226V\275\205\326\201;\254Q1=\005*\303\274\244u/;\243i0\274\013sY<C\037\222<y\330t\274\001\210\306\267_\354\205;\242/\306<|\034\\<\343\244R\275M\036\t\274\376(`\2739\273\324<\032<\027=\326\2573<\372\016=;\312\246\262\274\020\313\251\274\rDL=\346\0049\274\301s5\274\021\376#\273=\317r;T\016+\274y\352\360<,+\274<\035Z-\275PU]\275\301\234/=\034;S\275\2273\037\275\317V\355;\321\177\212\274?T\026\275\034Z\363\272\215\337\\=D>\315\273\n\307\"\274\024\223[\275K6\375<9\031\271\274\317\303+<\243<==v)\363<\2131j\274_\363\305\273\312\274\036:$\313\211\274\007\311W=\375\030\037=yI\273<\271\'A\275\323W\023\275S\216\003=(\217\317<\341X\242<\240\037\000\274\213\021\225<\036|\027<\375`T\275\330\201\232<.\243\222\274\347(s<\330\322\321;\227\372\257<\300F!=\277\364\363<\020\027>\273\210\304\031<u3\325<\014\251<\275\214\217\271\274\014\272\317<B\002\001=l\374\223\274\020#\361\274\361\206l:\215\376M\275\233\226\3669tg\031\275\213\374\013=u\027\032;\007\204.=\231,L=\232\371\022\275\021\373;=O\032B=\252\020L=j\267;=\222,\016<L\250E=\351\035\241<\322\313\212\274\rOS\275\277\255 \275;\205U=)\'\263<g<\335\274\355\022\002\275\226m1=\002w\346\274(H\321\274Xu\205\274\242\336\010<\345N\313<J\210\206\274W189\353\224\256\274\204\350\3358\243+\247\274\315\025\006\273\272\030,\2755W\253\274]\335\337;\275\207\\<\370\033H\275\0247K\274\264\313L\275\205\222\330\274 C\274\274\3252\361<\213\213\225\274\376\267\326<\001\0350\275\303\026.=8gC\273\324\021)\275\310\r\207<I4\306<Q\026\"=\215E\251\274\215\275P=\265\234\032\274}\2446=`\217\336<\3478[\275\343F/\275\020\263I\273?\326c\274V\010\021\275F\251\013=\340x?\275\250?S\275\331u\207\274\320\371\366\273*\226\013=\376XI\274\346p\'=\342\333\\\275\235\0070\275\246I\374;\032>W\275\002\r\211;\000m9=.B-\274Y\204L<}n\373\274R\227+\275\246\365$=\r\320[\2759*E\275\037\n\004\275eP\205\274>\271\020\273h\032\331\274o\317\024\275Y[\354;\r\3222=\003\201\016=\020l\260<\320\222Z\275\007q\016\275\317u.\273\265\234\272;\035u&\275\026C ;\033\361\303\274\220\327z\274\3175\"=\367\335\273\274\027\315\006<\315)/\275.\206\271\274\201`\265<\240\242\"=T\325!=\235\233C<qD\246\274\374T\257<\245\330N\275\026\217\254<\304\357\252<N\330\200<i\017P=\177\313k<x\031\310\273\304\033h\274\357\"\241\274\023\3704=\360g8\275\345\231O\275\036\2435\275\352\366\365\274\212eM=uG\271\274\372\345\261\274^\016_<x]4\275{C\016\275-xM=;O\323\274\010J\321<N\262\250\274w\023\270;\260kQ=\275N\031\275\226\021\005\275n;\344<kS\037\275^h?\275\3335\210<\245$\007:\367_\340\274v\300\266\274\'.\'<PE\236\274\251\335m\272xZU=\273\257P\275\340\373>\275\232\345\375\274U\333/=\320X\003=\3445\305:\350\325\365\274\023\226\347\273\314\333\323\274lX\001=\026=S\274\2750(<q\337F;@W\"\274\340\346\025\275\325\0274\275AvA\275a\014.=\212\346\024=\302\200\024\275\033*\224<\346R\014=A\216\300<\244\301E=v\025-\275\227\303\216<ENs\274d\224s<[(.=\014P\246\2742&@\275\000\347H\275%\013G<_&%\275NzH=_\366\357<D\206\023<fa\\\275\250{\204\274\320\3245=\243\031\027\275Z?\020<p\013\267<U\370\235<\177eJ=@t\033\275\327\241I\273P\202]<\3663$=\357\273\275\274\375Y0\274e\203\036\275\216\255\310\274\265?R=\335\275\361\274g&x<\rm|\274\323\233\240\274g\\\356\274\255S\245<\232\335\262\274\014S\353\274\357\262\026=\205m\216\274\3334\036\274I\"\\=\377/\t\275\311\014\351<\222\013\'\275\3068\030\274W\312\r=\276\216\025\275y+]=\222iS<,\034\377\272\232\245\220<\207\305\327\273Z\322R=o6X=9\034I\275A\343\321\274>\267?\275\362\362\244\274P\274\253\272$\357,\275\036\232G=iI\330<\004\324\317;:,\212\274\"~\236\273\223A\304<\377zQ\275Ql\274\274<\"\020\2753\206\342;uT6=dD:=Z\236\330<\220\022\010=\217\301\007=\nrQ\275\337\201\232\273[;@;9<\t\2751_8=\305\333A\274\265:\330<\266>I=3,\263\274\320\214\372\274\306Bp<l,\027=H}\312\274\243DK\275\365\266\330<\341\272\376<t_C\275|\240\031\275\177\323F\275\241qJ<_`\233;\327>\000<\307S\336<\322P\025=\331\376\270;S\347\036\274p\000\033<,(\273\274\244\210\005\275\277\363M=\021i\355\274\005\257X=\355W\321\273+2\t=\200\256\013={\341\246\274\370\007\372\270G\261G<Gp\210\2743\275\267\274\001\223\361\274\303A\260\273$\247I\274x\321\313\274\341,\311\2746\014L\275\215\365\024\275\345\326\245\273\021\303`<\342#C<@\3500=\370p\016\275\0077^\275\324Xv\274\337\237\246\274\361\325\200;!O\255\273\317\240P=\3520\035\275\252N\272\273\322yD=\3309\252\273\354\222A\274\242E\255<\220\231\027<]\335W=\237.\025=\320\345\021\275Q\347\000<\036\276\022=\"\337\262<\260I;=\335\273\227:W\274I\275\337\032\016\274m>\007=\363\303Q=\301#A=\226\002B\275]\027\020=\234nU=\004\003\2557d(\360\273\300f\236\274\247\371%=\213\372=\275N\232E\275\317\262-\275\211z1=\323\200;\274\360\244\237\274\373G\200\274q\000q\2749\366R<\224\347L\275#\251$=\005\336v<\010\355\251<\014\231\304\274:J\215<P\206\243<\242g\277\2746T\301<\2068\377\272\324\232O\275\230\216\211\2738rX\274\321mN\275~\313\177\273\227\364\r=\341#\304\274\032\032\251\274\313D\250<\037\253\356<\034\'=;\367\350E\275r\312(= %T\275\247\203\207\274\372\335k<<g\365\274?\375\245<\371/\327<\361\232\024<\226\000\010=\256h\360;n92<\315*]\273`&A<LM\001=\223\342\026=\214sF\273^\262G==\2013\275\034\303{<}hx\274/5\277<\216u8\275\312\210\330\274\347\301\250<HHX<\331\264\t=\302S\010\275\302\216\326<\327LP=L\010\n\274\272o\016\275\357\375N<GJ\207\274)!V=\207\"\014\274X+\216<\364M%=\305\314\265<\223\3428\275`S\013\275\375\335\376<\354\314\331<\212u\220<\022sR\275xr\237\274u\030\252\274\207\2735\275\005LG\274\325\203Q\275\247\277\014\274\336\321;\275\354\013\034\275{\034M\275y\277+=\334y\020<\r\315\252\273\306{\023\275vg2\274\304\374\"=,\334\004\274\353\325Z=\r\277 \275}\313<\274i\330+\275\312y<=\003\305==\341P2\2743\231\364\2742\362-\275\330R\036\275dr\363\274\363\024\240<V\217-=\251\245X=\345S\247\274\334\330{\274\207WO\274\264\003\021=\314B\003=\210c0\274F\377$\275\022\030\'\275\n*\003=,R\214<w?\205\273y\2227<yw6<:m%=Z\032D\275\242Z\225<\215g\344<}b\026\275\312j\300\273a0@\275&\321\357\274r\3362\275U\236\021\274`PP:\212\257\346<FM\315<\330\266O<Ib-\275h\266\037=N\236F\275\236{,=^\271i<\342\002/\275\250\246c;[\346\376<\271\004\272<\001*1=~\304*=\343Q\213;t\211\233<\230|\360\274yb\315\273\344\341\n\274\255\342C\275F\304\036\275\315\3071<\221g8\275I\007\332;*a9=\224\277\331\274\345\003R\275N)\n\275I.S\274\223\365\254<\325L\336<\2252\267\274\314@\347;\234\353\036=?\264\001=\273\316\237<\251rL\275\277\035\314\274\273\361I=U\326y<n\032Q\275\247\031\225<\004\3216<\245\2529\275\213\"\332;\020\034\201\274v\254\335\274r\3234\274\220\325?=\200\334M=!J\260\274\001\002\200;\320\016\374<\231\006>=p8Q\275\314\022\255\274\213gK=\250,\245\274\'\310\"\275s\271+=\232\343\035\275\353\200\337<\330x4<gYa\274\360V$\275\351Z\210\2743W\253<\225ae\274f\003\323\273\220 \266\274\325\034\342<UTi\274>\355\021=\244\332\002=\313\2334\272\023\303-;\246\223\016\275WBr\273\350\217Z<\273\277\026;\310\376B\274\300\331\222\274=.\373\274\244\016-\275v\211O=\320\r\002\274A\314\361\273\316zF=B&\007=\273\257\304<\232\365\371\273\201\260\033=]\221\304\274\340Cs:\020=G\275uJ}\274\376\240\025\274o\027\224<\277n]=\004\002>\275y\226!\275F\222_<\243t\357\2736r3=NeS\275Vy\306<\025\347#=6K\005\275\263\323\256\273\364\003H=\034\336\323\274\273\365:=[\3140=T\2148<>\225\036\275{\206\242\273\310\316T=C\'5\275\361\244\201;T\257#=\357\215<=\212\335\023<b\n\211\274\005\202\251;\371\314\031\275\016\207\254<\217\200\010=\302\344\311<\210n<\275\271\247\372\274Q\203\215<\242XK=\275\006\245<\221\360\020=6\360C\2752\027\022\275+*O\274Yb\340<\345>\'\275\316\262\037\275&r\006;:\0136\275\273\363H=(:\024\275\275\350\246<g\264\026\275|\031\033<\363i4;\200o8=\016\311\310\273\341\213\320<w\353\n\275n\320\r<W\243\363<\305e\206\274 \2325\275\004\367\327\274j\300\345\274D\333\030\275@\270?=#\273\230\274\247\272\'\275\257\276:\275\207\222\203<,9\216\273`\257%<\005\330\326<\032.\003=z\352\374<P\322\355\2734\303\302<\003we\274\r7\033=\256\240+\274\244\360\\\275\336E\205<{\371\353<F1C\273\222\237\332\274Vl\353\274\231(\000=\347r\003=\020\023\"=\223\025\026;\344\212\347\274\212\220\342<\265\363\213\274\215r\005=\030\222?\274\217<\343<\370\326\342\274\034\350\004=f\300\001\274\275\315F\274\320\372\266\274@\302\261;n\232!\274\2026\300\274V\213\353\274x9\006\275\327G_\274\272/\r=\206\2219\275\217\242\363<\342#g\274\322\007\274\274\203\260S\275afO\275x\r\032\275\t\252Z=b\004\t\275\345\227\347\273M}\370;\334(3=\2401\022;AeH\275\275\275W\275\t?:\275\232g\251\274\320\362\253\274 \004\010=\306\345\221\274Q\227\300<\336\016\355\2747\2177=I\345\224\274\236\306\306<\306\361\371<\232Y\023<q\274\003<\270\001x<n\333E=1\016\025\275\216\337\000=h\216\023;\236\300\002=\300\373R\275\236\234\n\274\314U\250\274P\030Y\273J+6\275\301<*\275\2626O\275\023W\316\274\232\206\275<\231\250\345<\324\306\237\274\267\320?=\004\030\037\275M9\234;\360\250\253\273\346\305\001=\000\263\213\274\014(\007;\002\3474=\225FA\275\252\2742\274H\314\354\273\242\341\217\274\366\362>=~`/=\006\227;\275FV\304;\250H\027\275h\334!\275\017aV\271\006\370\002=\346\013\237\274\214\214\014=\260\233\021\275\201\243Y=\3723y\274\324\235#\275\007\242s<\227\3379\271\023\267<=\3179\365\274\266\334\316<\014L\274<\272l\006=\212\006\275\2748\362\236;\231\205E=\202\\\001=\244\016\334;e\022\014=\006\036\016\275\027\014V\275)\002\320<@[>=\326\tJ\275\367\326P\275`\340\326\274z?\244\273\364S\035=\235:-=\224\033I=\3036\371\274t\366\253<F\376==\225\222\220\272y\211\202<\010\253\253\272\370\310\304\273\261Bm\274\321tG\275\3708\271<\361\307V\275\006\3079\275%\236\256\2745$\215;\276\215\355;\337\353\326<\210\242\350<\245\335l\274\272\2469\273\353\342\220\274BiG=\003\355\371\274GL\312<\354OG=9\346+=\263\016\343<`\207P=\023\335\336\273\307\3133=\203\021&\275\252$\275<Z:\272<Q6/=u]-\275T\206,\275\375\325\350<\346\346\'<dQF<\373d(=\016:\035\275\242fR;k\234@=\306;\027;\240\022T=I\370!=t\250\207\273:T?<l\027Z=\355\221\267\274`\264M\275\232:z\273;5\213<\320\270m<+\014A\275\242\353\246;\352)\306\2749~\\\274\234\271\264\274\310b\037=\361?5\274g\005S\274\000]X\274!E\037\275\003\344\232\273}\006\317<P\344]=\200z\036<\330\016\032=\327\334\305<\244\3237\275a\005\220\271\342\'%\275\336\234\r<n\324\370\274S\245B\275\021AX=\211%\r\275\237XK=\367\003S=\244\0313\275x>J;\345[\234<\025/H=\002\225\032\275\244[\027\275\001\306y<o\221\354\274\243\321\343<\026\220C\275\241w\206\274\322\014\030=\266\240C\275O\322=\275\344\024\010<\24598\271\355\0339;\320y1\275_\352\365<\334u\035\275#\373\"\275\247\277D\275\022\334\302<\333\237\244\273\304\265\223<\233\257)\275\320\001\"<\363\213};t\016S=\363\221\372<s\224\353\274\233\222/\275L\002\256\273\365\261K=\016\334B\275!\242)\275\3120\260\274=c\316\274\275%\037=\366\221a\273wI\340\2739\013;=\000e\300\274\226\314(\275g\300G<\303\311\037\275L4H\275^\301\031=\210\213/\275(>\347<\256\2369\275\327x)\273+\003\222;\335\266\211<\204\242\320<,\353\366\274j\360\026=\240\335\007=P\225\350\274\377\r\027\274\337b\312\274\271W\267\274qp =\314\342\037=\270\270\276\273D\344\026=.PW<\227\215\364;\256\373\222<\215\363\031=\312\003[\275\214\334\016\275\003\372F<[\333A\275o\324\240\273Ec+\274\377\372,\275\031r\030\275\032$X\275!\332Y\275\016\315\031\272\324xY\274\201\201Q\275=\345I<\366\231(=7Y\207\273\2254/;\002DH;\255\347\201<8\233P\275\343\036&:\265=\230<.X\221<)\211m<^0\002=\307\264\255<.&-\275\214Y\034\275\372<\210\274\001\372\327<[\220~<\247*L<6)\036=\000oV=\365\365\320:pm;\275\021\336\010\275\"@S=\263\347X<\363P\200<\035\'W=\206:]\274Nr\322<\025-\213\273\320P3\275\r\241\226\273\237\313\235\274\352\302G=\367z\277<D\335\024\273\371\256\203;\022\271\236<\022\031\254<\377\330\023=\3706\253\2746NO=?L\310\274\345\323-=k%\320\274\251\253\013\275\335\265C\275y\254\364<\032\302w\274\350\212(=\367\2217<\204F\337<E\241\224:_\211#=\021\002@=J\'t\272\363|\016=\324}\036=\271]W=l\204*;\357\373\306\274\372HG=\336Z\203\274\365\246\260\274\2544.=\301\351U\275]\010\373<x\321\201\272y V\274\t \322;}\3642\274\373\363\375\2746e\377\274\254\017\303\274\232p\224<Tcp\273\375\312\270<\224\210W<2\336G\275y@\347\273\354nT<\025\352\302<\312\233\024=7\343Q\274\231Y\301<\332N\220\274\035\205\3119\365Fz<P\0075\275|\334\370\27435\030\275\260s\310\273Q\361\222\2739\366W<\365\247>\274\345\213\314\274\031\007\022=\305-\206<D\346\220\273\\\327\323<\203\\\026=\326\340\013\275\250\036\213\274\336\n\335\274\317P\034\275@\335`;R\272\310<\215\334R\275\346p\373\274\311\334z<cc3\275\310\271Z=\252\310l;\260f\217<,\255\327<4\203\003=R\316\247\274~=)=\242h;\275\221j\257\274d\227\235:\222\033\016\275[\010\242;\3509\t\275\367d\027\275\316\321\300\274\233vT=J\177D=\265\036N\275\244\037\353\274D\r$=\316]/\275fo}\273\252A\036=\037h\002\275\330\203)\275\254\022\323\274\303\020E\275\246f\007=qsq\274f\366\240<aJ\010\275\020.L\275\363\036)\274\202\036f;\302\247\237<\032\320,\275\364v\314\274\247\365\302<\372_\254\274\234w\264\273\274\333&\275\'\225M=U\033!=z\335\231;\306?L\275\022|m\273\331\311\202\274G\375P=\231\357\271\274\356Q\335\274\337\367\036\275\274\245\210;\201\221\361\274\224\205\356\273\361\265b\273D\264\020\275%\004\032=\264r\267\272\301\277$=eK\205\274`\3005<q\201 =\377\335\247<d\306\037=\241+\310\274\3765\332;\363l\220<,RD\274\272,Q<\342\373\032=j\271\006\275]\261\226<x\202\016\275\221PC=|t#\275\331[\241<\273]\271<TB\013\2753\3712\275\021\276\\=\256\273\276\274`\207\021\275RLV\274\252F\337\274\020f\350;\330\nz\274NlZ=~*T\274\331:\003\275\263g\361<-\253%\274\222~{<\024.\255;\326\344\312\273\024\005\313<\352\201\004<\325\206U=\276\325\375\274\352k\253\273\017.4\275i\351\233;\006\210W=\324\371\256<\274\354\034=\t\354\267<\327,\036<\254:\264\273\nxK\275\235\303\257\2748\025\230\274\343\201v<z\347*\275Y\235J=T\262$\275\376\247X\274\367\230\235:\331\203=\275u\333N\275\210L\334\274`\0218\275\302\237\364<j#\270<\341\004\223\274\213\032\253\272]\023\216\274\327)\317\274@\227q\273\2602\315\274\330Nc\274\002w\206\273|\371\r=\001A\342<\035b\304\274\327\034\267\272\234\202:\275\216\241:=\233\271\342\274\356\320=<\313\330\007\275%\201W=\213SG\275?\033\377\272\360\027>\275\271\220\314<\333\240\307<\201\235\013\274\374\266Z\275\272\274J=\343\034o<\205;M\275\024:>\275x)\217\274V5U\275\356\327|;\337uH\275\010\352\255\274\306D.\275\017\274[=\215 \002=\370s\316<\303\253\330\272%\340 \275h\252:=\322\\7<\273]\020=\243R\365< \226\310<j\3227\274=\315&\274OT\355<)\353<\275\336K$\275\277F\020\275Td*=Z\3319\275\211\211\244;\200\3728=5\0222\275zKO=\2064p<]\341\'\275\361\266&\275\237\235\320\273NM\257<-\354D\275J\2167=\352\201C<\177\020\241<\320X\272;\303\312\033\274\265\035\232\273]e\013<<\271H\274j:\373<\025\273\314\273\347.9\274\3644\026\275\3314$<;U\342\273\345\203\002\275\210\262\213<\325\203]\2756\020\375\274\t\017\270\274\247\214\207\274\352?[\275XJ\3048\006\306>=\204\357\354\273\333\222\203\274+\331\333<\230\221N\275\353\321S<sO0\275o)\327\274B\255\343<Y\250\366<\320\364\230\273\267=\007\275\026\305C\275\262\222\204<\252\t\016=\356\336\020=\343\337X<\354$Q\275\373K\316<\2508f\274\310\257E<7\354M\275b\311\277\274\335\225\007=\357!&=65\001\275\312\207<\275(a\022\274\256)\330<\236\271\222<\036OJ;\342\261!=\\\361\t\275\3009N\275\0207N\274P\035D=\235.g\274u\300\005\275.\206Y\275\007\332E\275\371[$\274\"\365$\275\214\217\224;\220\3069<T;\333:\303\303\000=\030>\002\275P\3153=\230\003\212<\366\253\n<\035F?=\212\246\n\2753\001\027=\246\214\317\274\366E\\\275o\010\341\274\333\277\"=\276e\236\274PU\264\271\366`\265<\260\257\212\273+\356\022=\032\340\247\274\231\022\233\274\330\251\304\274aYF\274\233\366\024<\201\235#\275\270\014)=m\207\242\273\021\017+<M9*\275X\265$\275>\267\226\274\205\275n<\343H\346<T\177\324<\321\237A\275<\323\033=\014\263&\275\212\016\352<\330\021\t=\314p\007<!\024\237\272\333\210\321\274;\022\233<\232\376\033\2753^\337<\020\177\315\274\006\200\021<T\221\\\275\271w\363<\004\347\363<\264\327.\275\341Q}<ww\010\274l\202Z\274\'\325\001=~D\305\274\t\006\322\273 \225W\274Z\013\264<\252\322,\275\356\307:\273\\c\225<g\357\'=>\332\005\275A\276(\275\177\2579=\306\216\306\274o\235\370<\247\337(\275\275\263\004=}\327\261<\376\202\007=\300\277n\274\245x\232\273.\363<\275&\324\231\271w\235\273\274\347g\356<\200s\013<G\227M=T\001\237<hQ]=\2539\226<L\361b\274\n\233\316;p\305G=\213q\270\273\345\034;\275O\357\005\274\353\207\217\274\245\271\312<H\306\247;\321`\362\274E\213w<\331\004\';/\3600\275\2013\267\274=\"\276;,R\246\274\305\253\024=\234W\330<#\337\034\275\r\227c\274\233\214\007<\223\253\"=Ie\347\273\032\341:\275\016\300\236<\250eF=\357\310\352;R/$\275\237\276M\275\',S\275!7:=\364\276\262\273K\010\322<\266{\342<\215\300\004=\265+>\275\205\214\246\274\270\227+<\273\306a\272\226\264\333\274X\242\200;\024\360\230\274\013(\001\274r\326Q=\270\007!\2750\352\357\274c\371\241<=\262\335\274\321\272\274\274\246\324\352\273\313\264U\275\223Bj<\242f\346<O\353Q\275I\037\022\275\347\213\324:g\234\270<\274\362\260\274\027q\341\274\014\001%=7\315\276<\243\202\006=l}p\274sEF=\302\006\232\2733\014\000\275V+\263\273\206\3525\275\020\024\376\274\252j\335<\314[\t\275\304DH=\020}\016\275\2010\330<\313vf;\304\372H\275\203pG=\026\000M\275@1\t\275K%\r=]\367\274\274K\340M\275\233\225R\273\362\363X<\205\264@\275S\211;<\354\\4\273F\216\344<3\002X<o\036E\275P\024:==\311\367<\027\025\"=\365\370\243:\023IQ=V\000@=/5\036;\037\303l\274\2105\035\275w\307\014=\277\244y<\304c$=\241\3251=\340\033P\275\026\351)\275U\251C\275\200]/=\203\364\316<\330\232Z;\364@1=\342\030\037\274\310)N\274\244\207\'<^n=\275\023\032\315:\224,K=\321W\205<\270a\000\274\006\360\000=\333\3706=\003\251\014\274M\202/\275-8\210<\'\2606\273\372\010z\274P%\245<\221\247;\275:W\227\2742_\341;\374\246\215\274kA\002\275\307\330F=\3112B\274\343\271\321\273\330G\016=\273Mz\274s\355\025=F\266e<U\034C\275R\002\000\275\022*\223\274I\243\\\274\035\263\227;\260\225\006\275\323X\026<x\273\024\275k\374\211<\017*]<\203w\t\275\341\242\336\274\031\201A=\016\370\010=p\257\241\274\314,\237\274ab\017\275\2346$=L\222}<\262\\\025=\247*\350<\222\277\314\274\205\032=\271\026\210\305<*\240H<7\223L=\321\034?\274\t0I<\335Q/\274.\226\360\2738\017\'=\253z\016;\\;;\274\372\325\321<\345\223\237\273\016\246P<\274C\017=\241\241Q\275\306Eg;h\" \275\337\236G\275\312\3661\275\263\234M\274\025\271(\275\005\324$\275\253c\367<\275\364C\275h\203\325\274g\304\235<_\243\313\274\210]>;;Z\307\274\223\375G\274\332\016\003=v\013\374\274\264\203\366\272\340\273E=_\016)\275\213lK\275\300\373\250\2740\r$=\374\303-\273\364\300\246\274\334\026>\274\310\177K=\340\246\276<\333\326\377\274Eq,\275\025\342\336\274\026\026]=QK.\274\327BR\275u\323\205\2745\014 \274\256\246!\275\317\2531=\212C\221<\271\272\346\274~\322\014<`\201?\275\271#\275\273\357\322\002=*\226\034<k=F\274\303\031W=$\335\355\274\255\016\262\273[\023?=\270(K\275\376\362\005\274O\202Y\275q\256C\275\"\341\207;\322;\020=MPM\273V\361\264\274/k,=o\023U\275\325\202F\275\177\032\025\275N\014@<I\353\202\274\363|\024\275\022\2447=Z\033 \275\343C8\275\203\363\201\274\021g\004=l\234\276\273\243\013+=c\337\230\273\221\324\t\274f\334\301<\276\366\254<\257\343\372\273\327\t\324;\025\225\316<2\375f\274\376?\350\274F\232{\274\326\250H;\273\324#\275\322\334\030=w\177/=\002\0347<\n\263\343\274p\245\326\274\026\304A=\241\230E\275\006F\320<\007\025F\271F>\352<\007\346\372<\2259(=\276\rT\272\262\004\224\273\237^\007\275\362\371\340\272\224\240\264\274\'\330;\274\033\302 =\272\310\307\274\0027h\274\236ND=\263\000]<\002<\323\273G\031\215\274D\336Y=i\006L=\352\3505\274\364\2311\275p\245%\274\"\033\215<\2269\r=\023\353\017\275g-\223<\271\250\354\274{\351O=\303\013&\275f\014\226<\023.\005\275\343k\347<A)A;5i\034\274D>1=\332\"@=+\335];\231.o\273\000\301\033\274\221\367D\275\021\3753=HT\024\275n\215)=\002\340i<Z\251\370;\005\202]\274\310\025\221<~\3607\275Qh-\2753\340S<\370 \000=\250aT\273\034\227\305<\324\361\025<~\324\002\274\307k\326:\261\203W\275li\300\273\363\363.;\216\345O\274m\326?\273\215\310\010;\331\234X=\234{\001\275&M^\275r\330d;G\366\274\274xt\354\273\256\324\013<\325\347\300<\271\273\304;\250\234/=:\004\023\275i>K=(\014\014\275\273J\r=\377o+=\"\214\301\274\222v7=\246f\302\273\371{$=P\303>\275K?\346\274\263\310>\275\325\271\212\274\262`D<\254\362H\275C\334\376;Q\274\007\275\033o\010\275\0368D\275F\nK\275\3417J\275\"\023U;\301\033+\275\177!M<\322 \250<%#\006\275\242\3520=nTW=\374\000\327\274\344\217?\275A\355\362\273\251\276-=l\010;=\320XJ\275\273\230[=\250\274\0049aP\\=\036H\327\274\273\345T<\027\272C=\213nf<\365\247G=\013\360\036=i~N\275\262E{\274\010\347~\274\340\323b<?\032\264<sR\204<\271\364O\275\274\020M=\275g5=\252{\026=d\246\300\274\"3G=q2:\275\252|\261<\273s&=\253bC\275\350g\246<b\002$=\241A@=\337mw<u\345\212\274\324\327T<l\275\024\275\246\304\247<\274\374r9#x\021=\024K<=\315\330C=c\344\327<\025\300\272<\326\336\217\273Xr\\\275(hZ=\004c\370<\347\345\003\275`v\331<n\350\262;\262Wt\274\331\031v\273,!\010\275\370F\000\275f\216\351\274\312U\364\274\\\317(\275Yr>=\nUc<\0347\323;k\377\304;6\363[<\033e\226<\250\236\001\275\346\232\341;R\243!=\351\212\034=tn-\275\017\025C=\344\256\005\274\203>\345\272\r\353\006\275Qj\032=D\230S=\323\277;\275\025*\204<\350}S\274\316\351\000\275\221\320\251\274\373\200r\272K\344\266\274\234\304\016=\266\331=<i\310\271\273\000\3761=\345\035D\275\207\247+\275\326\250K\275\035\225\341:\262|\267<\034\260\271<\265\363>\275\344+\"\274X\0002;3\245*\275\261\340\031<\344\345N\274)\360\365<C\356\033\275\260\206=\274\236&\020\275\337#\233\274[s<<\346\371\327\274Yr(\275/y\013=\005V\221\274U\377$=+\354W\275N\230\331;\312d^\275P0\352;\017\350\363;\236\211\002;\276O\031\275Tju\274\3515\271<NDf\274\023\027>\275\260ZL\275\270\307>\275:\343\370\274A\347\254<\270k\250\274Bg]=\023\212~\274m^\354<\362\227\351;1\370\253\27409$\275\344\343\031\274\022\311J<\030s\367\273\200Z\004\275\330W@\274/\027\224<\033ZO=.AJ=\363w\250;D\342<=\351\252\210<\034\207.\275\226+\006=\241\306,\275\017\2443=?(j:Z\274&\275KeQ=\\F)\274\332\216\017<0A\374\273\243L(=\377[\357\273\371\245\236<\035\355\224<\347\026\031\275\370~\336<\215\020\273\274\013\270\010\275\345\203A9\210\314\004<\201\032\255\274\231\270=\275!6\214<\242B\\=\260>\370<\255\241\323<\240\202$=.{V=\221\035\345<\03426=`\036\022\274\264+F=vD\276<\'\027\240\274\335\340\023=\237\026\202<YdO\2750q\346\274\264n4\2756\300Y\275M\377P\275\211\224\234<C~\301<H\307N=\366\365\231<2\354[\275RI\020\274>1.\275`\235\033=a\301\210;\331\021\313<(+\324\274\330\234X\275\362\001\260<v\303\323;x\225\007\2751D?\274I\320\257<\001\225\016\274huN=\372\323\272\274\237\250\235<81\274<r\202\236<\352\224\346\274\005$k;\252}K=\223\2665=\301].\274\001\254 <\3055\326\274Z\232\302\273\300\035\002<\0238]\275\020\005D=\220\266\013<8\242O=\204\035}<Q\350\004\274\031]-\275R\014)\275\326\332$=\001L\215<\217\211\216\274Y\224\372<\004k\023\275\372e(\275\214\320\202<2W\374<\010\256\'\275L\356\341<\036\346\364\27482\006=\\i\227<\201\024\347\274\240y\322\274\376\004^\275-\003\224<\2106I=!\005\361\274\237s\237<\236\245\263<,:\354<\302\\\240<\247k\026=O\316\016<\265\243U=\310\316\007\275k\2724<\232@d\274\277F#=\274}L=\264\026\036=h\322\236\273\201\212\032=ar}\274CvU=\206\222\254\273\236\277\223\274\016\026J=$Cn\274\225Q[\275\033E\014=0`\'\2754\325\223<f\363\000=%\000\332\274\333\240g\273@\230\025=\244\252\023=j\366*=P\220\216\274\351\274\201:\336\031\230\274\207\254%\275\373\311\320\274EM\252<\251w\031=\036\234\302;<\307X=\363\354\037=/\346\225\274\022\320\226<v\037I=\241\215\310\274\234\3701\275\251\3217=\n9N:5\311\010:\005/\262<J\006\000<\221_\345\274\016\261\257<\224\033\376<\343\227B=(\200\201<\177;\375<\207\366\263\274\221s\226<\026\010>=X\350\243<\347\246\237<\003\233\222<\n\326\367\2748k>\2752\322N\274\345:\211;\323T\016\27522\271\274%\316w\274V\257\023\275\217\372\t\275\234\003\316<\300S\346\274z\335R=\300\347(;\336\025\017\275x\016\000\275\337\035\376\273[\030\366\2741\300\334;\027J\211<\237\014\376<\360\227\374<\204\\\002\275)\013\351<\243a\350\274\265\316\331\273=\320\226\274B\014T\275<y\211\273\321\345\034\2759\361\250\274*x\302<\227\321]=\365*\242\274w\357\031=3\226;;\332\002U\274\322I\373<NX\031=A\335\227<`&\245<Q\235S=\235\305?=\376\2571=3`\351\273\276\316\240:mj\362\274L\204D=\264\257\234\274\200p/\275\366$\225\274\356\226*\275\216\377,\275\232\'X=\306\020\225:\217F6\275\372\222\014<V}+\275\322y\220\273\206+\003<\227_\027\273\322\345k;b\221\235\274\030\3538\275\2167\026\274\t\177\266;Pi\257\274\233=\360\274\301EO\273\245N\n\275#%5=\0147-\275%\230\343<0c%=/\351A\275\206\306b:\211JT\275\203\211\317:\333X\221<\233\3549=r\213\253\274\'m:<Z\3049\274z\302\223<\255\r;=\342I,\275\361M\026\275\23764\274\337\2272=wp+<\376\363H=\317\005\"=\374\226\020=\336\245M:4X\340\2717:l\272\2715\260\274\211a\235\274=\2003\275\353\'\247\271,\200\222<C\244\260\274\277\030\233\274<y\352\274^\254@\274:\373t:x\374!\275\277\351\013=\024\306T=\020E-\274%\0247={\225\366<\023\026$=\342\230\210<\351\362\203<W\000\341<\202\322(\275w\243[=,\227\020\275\361\002\360<\252\341\327<Pd\247<\357\356 <\354_\245\274]#\005<;D\'<2wd\273\236$;<\304?\344\274@?j<U\031@\275o9#=\261\273\257\271f4\262\274X\017\005=F\342\212\271\265L\001=N\200\007\274\010\355(\275\255b<\274\327\305,=R\007\370<\033]\356\274\ni\247\274\274v\366\272\021g^\275\332\017\002\275y\035]<\304\346\005\275\360\"\r9\t\2309=)\005\257\274\213\307\311<\217\321\036\275\270>\232:\364\253\n\275\177DJ\273c\224>\275;I9\275n\002^\274d<\363\274\017\004\002=\2357O=\370K\372\274\003\353i<\336\372\247\274\'g2=\273m\220<\360\2031=~\334\272;\267\027\277\273\240\227\036=F-2\275\246\3124\274\340p\035\275h\232\3359\207\327\303;I\200[=;\346\222\274\n\356\361<\227,9=\361.6\274\0149\344<\231\257_\273\321]\t\273\330\203\215\274\036o+=r\346I=-+\010=\332\322\n<\236\026\265;?\313\311<\270\3375\275ba\317;\377\033\226\274m\003H=\374\227l\274{aB=\3071\017=A`\202\273*OQ=\327\205]=\213\321\240;%\036!\274\034\374T=J\030\303\274~\304\r=:%\253\273\333d<=\317\t\205\271\345\264\013=Z\366\022<d\n5=dFL=\\ \305\274\002\370\212<\n\344[=\006\204X\274L\2768\275\216`Q\275\035\234T=\207\024\035\275I\204\313<\326\367Z<\3609\336\274\202\r\320\274\351ZZ\275\315\025\376\274\327\376D\274\306e\322<-=(=\347\335\033\275\245\265\016;\032l\271<\247\275\321\273\225\033\031;y\271\375<\024\005@<sY\333<\211\033-\273K\r*<Pi\005\275FoY=\242/.\275g\000E=\004\313\255\273\336\327\256<\241\337\027<\223\377p<a\226\322\273M\212\257\274/\243\004\275\317\026\244<!o%\274\006\3044=KfM=\200\033d:\253~T\275\034>\027<\314S\277\274\267\340\236\274V\203@\275\237^%=rb\356\273\003X\327\274#\272\333\274\304\036\020\275S\006\370<\242\030R=XUK\275\230/4=\341a4=p\315\227\273\000\346m<\007U\306\273\212h\251\274A4\030\275\2677\304;C\307\246:\000W\026=\354!T=:\322\003;_uQ\275\2020?\275\216\201#\275\245\010*<EkZ\275\234\304\242<\\\237/\275\370O\333\273\177\267G=F\263G<fQ\022\274\226gF\274\247\343\255\274\260\022P<\221ZY\274\022\274\342<\325\177\203\273\243\353\253\274\316wA\275TN\237\273V\3617=,\202Y\275\347LV\275<\375\312\273~\000\036\275d\'\325<\320\217\314\274\273\222\201\273FeJ\275\361\262\014\275\322\224\035<\364\020\037\275\325\031\'\275.]\207\274.c\222<\202\223O=\261/Q\275\013W\034<\303~\027=wc\"=\215\010)\274IX.=N^\267\274\033~\010\274\266L\010<\301\310\255<\320=\034\275K=\206<m\000\r\275\261\006O;4kK\274\337K\265\274\372\344R=\034\376\030=G\nI\275\036\3465\275}\010Y<\204Qk\274\034\235S\273|p>=\016\226\261<.\352D=\257\302\336\274\321\"\n\2743\321O\2749\313M=\356T!=\231\254,=\2505\330\274\274|1\275\302\321\004;\241Z\315<\002\251\317;\332P+\275\223\034H\275\002\3060\274\236B\221<O\244\306\274\366D\016\274\032?\226\274V\370[=\331\271\020=l\020\017=rw =2A\024\275\217\240\233<f*|<\235\357Q=\230\250\375<\3427*=\307\303\223\274\366\001/=\354V*=t\027\201<\231\266==\222VV\275\343\221\000\275\t`e<>\014\234<B:I\274\0136^\275e\306\\\275\352@\365\271\365\302\212\274\243o\244\274\n;\363;DW\222<\367\022 =\375\022\337\274y\242];\206\216\302\274f(%=\212\320\025=\331\363/<\300@^=f\037P\275\016@\302<\010Q\272\274\260\344\n=\314o\311\274\246\r\226<\364\301\232\274<(H=\315\037\367\2744\243\244\272\310h\r\275*K\002=\006F\037\275\361L\200;\255\0330\275V\333B\2756\351\027=&\0030<\273\262)\275+,C=\346\214@\275O\210\244<\364\272\225\274v\305\230\273\240h\023=\006\257\021\275P\003\323\274\200\322\203;\232\332+=z|\347<6\225\273\274\377\036\301\2744\266\342\273\222\304\033=\362\223\025:\246\213\211\273J\266<\274M\005\221\274\274E\323<\302\204\366\274\227\327*=\320\255\311:m\022\253\274\2318V<\032/\211\274\364\222\251\274\324(t<\013\261O=z\237\270<\255J\023\274\333K\265<\004!I\274\30172\275\3702\002=\252\032\213<\376<\267<\371d\330\273\016\372\303<\343\374\327\274\016iN\275WlU\275\3418&\275\351(\363\274\317\374U\275\010\355J\275\211\031.=\356\271\347<\247,O=\365\242I\275\016Z\\\274\343\362_\274]\n\252\274L\372\335<7\003\373<T!\353<\276\371\266\273[:4\275\327\222\350\274L-+\275\361V\024=[F\353<{\266H\275\253>%=\260\376\300<\216\r\322\274+\217\010=\':.\275\326\\\264</+H=\344\226\200\274r\026\332<;\224x8%9C=\374\373\355<\036gU\2754?#=u\"\312;M\3458=\020v\016\275\030\225T\275(\225\257<~\275\032\275\211d\r\274-\231\220:\346\265\023\275\363\231f\274\361\204L=C\246\023=`\022+=\020\016\363<\350\030\031\275\217\207\333\274\365\256\242\274c\202\003\275\247Q\354<<vH<\315s\300:T\022\372\2745_\333\274\024\226\260<\3509\016=\314M\220\274h\276\251<Vp8=\327\277\326\273\252\207\204<0o\036<\307o]<\\\237%=\276\037\324\274\034*\267;\236c\r\275\321\267\276\274\343\260S=y\n\347<(\227\352<\232\022\310;\2122\201<\035\274,\273(V\303<y\363\037<\307\350\004=\341^\010\274\255(>= @\006=N\360\207\2743\333\344<\372\343\211<\003\335\216\274\003\200\\\275\274D\226\274P\254\316;\254\t\221\2748\241>=Y\255\334<\340\227\2119\006#\303<\275\203\020\275\305\337-=\345\226\330\274Q\341%=\007\373\370\274\301\213\366\274k\322\214;R\\T\275f\033E=3\027d\274\251\374\322<7g\352\274\000\234\374<\027\261\361\274\"\305\304\273\004\'\245<\0241(:-\n\021=2\276\273\274\027P\311<\344_6=\300\0229=\213\267!=\330B\034=\355\356B:\274\330\014=\311\350I<\001\004\262<,$ \275\007\241\263\2748\026%\272\271g\320;+\006\312;\262b\207\274_\345\031\275&\006)<\217%H=\225\206\311<)w\241\274\267y\362\274b\360\344\274d\306\004\274\032:\'<\221uB\275\037o\344\274\307\301\331\274F\343\203;v\307^\274\272H\262;|\036\342\274_\354?\275\301\n\\=\370s\307\274%\357\264<\236\261z<\013h\224<C\330M\274\034@\215\273\311\340\325\273\361\376\007\275!\033\360<\346\232S\275\314N\001\275H\tF\274\010w\014=2\021\263<\027\037\244\274w:\332:j\032\362\274\276\301\330;\r\271\000=\215z\356;q\r\263<\352\2340\274\2066\023\275\037\221\212\274\342\000?=\245n\243<\237a\333\274\373\301\355\274s\253\035\275h\330\236\271\376\270\236\273\006FK\275\030\037\236;9\014D\273 \270;=`^.<\321\301\036<\221P%\274U81\275R\r/\275\213\315V\275\305\330)\275\0336\325\274\325\226\276\274\260\364\336<\276\224D<\256m\306;\001n\001<\337\002\216<\352\354Q=\350\035\341\274\252\2168=\276!L=J\303\215\273\375\257E\275\360\0017\272\nq(\275\330b\004\275]8\003\275(\341?\275\340c\200<Ae\376<\005\253_\273\202\2173=\372`(\275\016M\341\272a,\337<\037\274\004;\226\225,=e\260\037<\333c\250\274\005\306\313\273}\'\320\274\341\371\334;\027\370P\275O\272\036=\025\206\325\274\013\343w\273}\031\010\274\033h\300\274\343\210\276<\016\225)=\241!\271<\217\250\263\274\024\353\254<\315\311$=\201\2218\274b\313\005<\000\263\360\274m\372\275\274G8D\275\207\374.=\253\224\342<jr\020\275/]\244\274o\224\361\274\276\330I=/\215\026\275G\004\022=\243e!\275\272\000#\275\370\310B\274\343\312\036\274\037\024-=\254}l\274[\3702\275&\300\273<N\234\341<\332\341,<\241\r\337;7\007B=\370q>=CF\333<;r\203<Y\207\343\274\234\026\213\274B\032C=\357b\325\274\333<z\273\177\031N\275\236\000\323\274I\027w<\365+\367\274\232\222\304<6\212\356;\0170L<\271\005\030=\nh>=\304\261\333<\262.9=\376\365\326\273\262\026:=F\352-\274\350.\001=\214\242\226<\234\3248\275#\2771\275\224\214\374\274\315\017D=\016\3317\275\016hj:\021\037]\275\325=N=\315\322\250\274\313H\316\274\214l<\275[\363\241\274\242\323R\275\235O\"=\024\224\016=@@\241\274\365\205\035\275\345\002G=\255\332)=\016\371\013\272\025\360\253\273_\230\026\275\256\027\026=j\307\003\275B#\206\273m\014H<\254\033[\275\275\033\257\27447\026=\353\330E\275\365z\234<\365T\016\275\023\351X\275\361Z\346\274G\340#\275\001\317\334;#(\035=2}C\275\000\352j\274BM\\\275\371\2660\275\245\003\303;\351j\276\2740u\373<\220\210\374<UzY\2753I\307\274i\226.\275Z\334S=!g\025<Y\355\342;\240\316C\275\017\243F=\024+(\275\240\r\025<c\235#\274&\345H\275\"\022\t\274\250\370\236<\370\242\313\274<\264*=GU5=\371=\331\274Y\214\000\275[\2366=\2649\213\274E\277?\275$.\n\275\273X\352\274\216\231\270<\333\256,\275\256\244=\275\221\'9\275\241\177\332\273|\332\223<X[\320;\231\367\033\275\022\236\346<V\272+<\323\277!\273\337\214\203<\242\223?=\0349\374;\215\314F\275@Y\254\274\233GS\275\206\014l\274\240IR\275\303W\010\275\320\243\342<\243\312\260;#\207d<\376\033A<?|G\2756\005]\275\314\245\260<\342\037\305\274\240p\037\275\355\006\\=\374\236\r\274\226\266\260\274\311UL\275\315\247A\274\263\213\222<V\2479=K\275L=2\212_<+\273\204<;\3557=x\225\374<\256{\032=o{\322\274?\257\241<\206r\013\273n\003\030=+i!=\374\241*\275d\016\347\274\347H\\\275\023\261\223\274\240XI\275\327\013\366\274R\341J\275*Z<<2\247D\274\013_\003<\"\231\361<!Z\004\275\375E\225\274\311o\017\274\356\177\027=:\2528\274\351*\022<A_\014=\340\266\264<+\266<\275\264-\033\274\342E\'\2727!A\274\037\001S=*L\347\274\227O\335<[\022u<\241\250W=xz\030\275\250\365V=\325\335z<\335\3268\275M\365\316\274\217\234\263;)a\037\275\276DC=Y\021\026\275\325\301Q=\330\311\276;x\220\013=\003\271V=\261[\247:\014\320\000\275K}\230\274\303$*\274\306C!=}\226*=|\246\341\273\357\301\001\275,P\363<]\210Q=SJ\343<_N==\235O\213\274\233\317\326<\333\277\224;j\353\\\275Ax\304< ]\322\274\002?\034\274\260\371\022=\222%[=3\361\311<\211m3=k*B=\306\220,\275\367\216B\275{.\242<\314\262\031=bW\016\274\022\245\n\275J\215\007\275V\n\270\2745\020J\275\321\005\363\274\177(\233<\274:\024\273\0071Y\275\300\331\322<)\373\002=N\312k<\300M\352;,\367\030\275\304\237)=\201n`;\302\376\010\275\223\357e\274[\222\255<c\2070\274p\2174\274m\374\206<\366\201\007=\205\251\004=D4;\275cT\310;$\235-\275\326s\341;\370\367\005\275\377\022\323<\364\006,=\000\332M=\354y@\275\334\213=\274\205\235\301;~\231\326\274\"BC\275bS\r\275\224\334\005=a\273P\275\202F-\274\215SR\275+P\215\274\255\032\345\273\016\204\017\274\216\017N\275Sv\230\273\351\244\030\275Q\315\242<\nh$=\364\005\303<\r\217\014\273#\306T\275\262\326\037\275\245W\005\275\222\'-=\312w\221\274F-\216;]\277[\275\277\362\021= .;\274\253DG=/Mh<f\177S<\342\216\'=\370xT\2755 P\275k(\357;\326\233\322\273\2718\214\273\344Q\252\274\211\257\257<\353\355W\275\212E,\274\272\222R=\035$Y\270\025vM;\302S\313;=\317\006\275\024\363\360<!\223\033<\330I\336\273\322\331\257:\303\312\337\2732\327V\275SR\301\274\371Z\024<5%\'=\302p\030<k\005[\274{\225Z=\3140\317;\032\025W=\313&;\274(#\323<r)G\275\024\357\202:\230=\037=S\2034=\322\006\327\274c\264\3739\362+\002=\360E\033=6\200\024=\027T\017\275~p\376<k<Q=\374\274\010\275@6\226\274G\211\\=1M\031\274\245\252\327<\337\005===\337\263\274\207\263\272<\207\020\030=\311\262\021=C\005Q\275\201\266\370\274\346R\023=\350M\234\274?*\337<9\264A=\016h\320\274\031\3348\275!\013\242<\273\007U\275\345\270\005\275\376+x<1\217-=6>\020\275\200\"1;\263v\203\272\350o\006\275\353\334\010<\201\361\374:\377\251\346<\030\0345<\270Ho\272\200R7=!4\023\275\350\330\023<(P\002\275\252/\254<\363,l\274l:\347\274Fa\016=?\177\202\274\336\372\303\274\320\241\337\274\312\251:\275\270f2\275n\356\360\2745\305\200\273\356\265\026\275\265A\030\275#\243-=\016\270\006<\266\000\r\275\224\010\007\275\002@I\275D\347J=A.\267\274\232\357\360\274:\270\267\274SH\321\274\235$\010=\242\006~\2743\3369=\334l\304:;*\006=L\316)=\357\336\"\275]\312\261<G\245\023;a\375\016\275\300\356\333<\207=\205\274\277\333\215\274\"\233\267\273\273\375;=\271\250\313\274\004\206\307\274\2156\000=E\370\377\274\362 \230;\r\\C\275\212\000A=\005\327\375<\000\304?\275\331\267I\2753\202\221<\341\017\352<\305\271\224<M\364\023<\311\034K\275\033\252E\275\200Z\031=y\032\005\275\344c!=_\t!\275\222CE\275D\2454=K\336O=,\330\250\274\354\217\352<\026\037\363<\267\004\\=\027\276+\275;]$=\341$A\275\210\361F=\243J\024\274\t\322`<EJO\275H\035\024\275\022\273\274<Y\262)\275\270\301a\273`\246\312<C\303\264:\202\247\032\274@D\214\274Yx\242<\326.\240:VFV<\232\234\346\274\236h\337\274\273\317\200\273H\016\204\273\3652\302\274K\232\031=\327d\344\274w\027a<j\2636\274\305G\374\274d\366\221;\335\004\010\275\264\253F<\216\373H;e\360\017=\272\330,<\"\221&\275\203C\333<C\311(\275\301\331T\274\024y\n\275\034\017\370;\363\026\227\274P\340\323<q\300\370<\036\332.\274\324$~\274-y\260;\314d\n;h%\027=q2X\275\373\254\013<+\323\357<\215\374\027\275\307\210\355\274\374>\253<B\006]=\010\273V=9\221F\275\200\026\327;\"\214\027=\r\266\024=\241\204\017\275Q\347e\2748\344\256\272\273\337P\275!\270n<\022F\033=\260 \303\274\246\234\300\274\014\253^\274\026S\307<\244\3702\275O]\330<\362z\264\274xd\"\2753<\234\274\233)\274\274\301\200\260<\377\363<\275F\301\370<\317A\304:\301\360C=\331\200\303<[\217n;RN\320\274\214\273<=W_\316\2733B\346<`81<\220\366D\274T\033\\\274\032{\242<!\035!\274\3028\365\273\361\315O\275\335\026Z<Gd\034\275\213!\250\2740\335\317\274\345f\275\273$\375\352<Z\364(=\303\302\026\275A\3433=4HG\275-p\016\274Jd\324\274YX\024<\343b\302<4\3432\275;\320\311<\035\264B\274\344\374\254;\021\0319=\303\340v<\251\246\357<\036\234\375<\343\205\001\275[\315\216\274{@\035=\315\257\320;x\366\251<}\270\274<\357\340\216<\202\310\340<\362\023(\275/Q\304\272\237\272\331<2\275\361\274a\235$\275\017=B\275\267\332\'=E\352\014=\226\261\203<\322\247\002\275\236\037\033\275z\352U\274\270\357\212<\307\033V\275d7\014\274#\3659\275\327\031\006=\247l-\275\037\177\227<\355%\211<s\312Y=\205\231w\274I\252\331\273\200\025:\2753V\243<\265c =b\274J\275B\355T\2752\227g\274\355K\220\274\275\027\007\274\344#\325<=\037-=\350Z[\274W\374N\274\345\305|\274\301|-\275\313\351+\275\003\030\374;\024\257\237\274\2766E<\263\"\370\274\227g:\275\243F.\272r\271K\275\302\355\356<y\207\331<\373s\243\271\270\266\323:\006\3559\2757\007\304\274\023U\331<\256;[=\367,U<\333ws\274\030GG\274\250R^\275\366\251\\\275\330u4=\002-\212\273(\220\326<<Qf\274\246\356\257<\363\251\t<gm\000=\307kQ=X\026]\275e\265Q\275\311\367\"\275qY\336<\271\300@=\210\030\030\275\004b/<92\037\275\330\355U\274\300\306\342<\261\342j\273$7Y=\0339k\274\035\373\367<Wk5\274\235\204\021=Gi2\275\274\221\030\275\355<A<\273\001N=W\220B\275e|\251\274Ma\357\273n\327\360:\363\034\026\275\036\320\204;\374\010\250<\022m]\275\332\2705\275 \007\256\274`\255N\275c#\320\272\317\035\010\275|\303<=\023\327\014\274\014\371\263<\357\331`\274c\177E=-l\216<\233\3722<Z\236\234\274\321F&=\246\367L=\262\271\006=\303\250\036=\2164E<\000\225T=\265\"\262<r\213\302<\371B7<4g\036=\260Q\226\274\243\346\256\273\343\207E=Z\274\005=\351\231 \275\016\337^;\004\354N\275\214\3019=\342qN\275p;\316\274\206\235\214;E\tA=\304Av<y\2146=\222_H\275\267A5\275$8I\275\200\363\261\274\212Vp\274?\3343\275Ll\214<\020\237\032=\374ZO\275\016\225\360\274\r\346\352<\261\177\353<9\336R\275\002\302\250\272\312F/=D\340\350\274q\021r\273k\217\363\273\343\205]\273\010\265\311\273\017\321\310<\256w\310\274\324}\273\274\352\377[=q\324\365\274\342\267\"=\003\222%<.\313K\274n\0307\275.\030H\275\031\233\272\274\251@\036\275\323\2669<\234\027\337\274\2076>\274\206@\r=\245YC=\240,|\274\233\340T\275\320F6=\277\360\004=\301%M=\370\254@\275\023G\236;\247\335\252\272\330\343E\275v&}<\201\302\203\273\223b9<\\I\010\275\235p\277\273R9\221<\367\277\205\274 \244\001=\340\035\307\274 I%\275\021(l\2748\232!\275iz\010=0.K\275BbH=}\362\226\272A\002\r\275\r\367\237\274\331\306\201;N\356\000\275\005\211\220;\365\327\356;_\004N\274\274;\210;\265z*\274\211\356\205\2739\203\n\274\305\030\345\274\353\224\247\273X\220Z<\035O\224\274\236hL=G\000\027=\230\t\223\274\227}\247\273\331\310!\275m\314\032=\304\334\305\274d\251\210\274\343\270\350:|\2050\275\312i\254;`\000\233:r\325\033\274\"\321\377\273N\323\344\274\345C\224<\241{#\275\307\314\373<\366\036\322;[u\230<\252\374?=\260V\017=\277NF=\033QU=\260b\337\273\256X\007=\n\333\344\274\005\375\207<\246\016\256<\313\034\257<w\035\t=\333}M\275\024\206\206\274\275\213\320\274b9X=\017\366F;N\010,=\t\340V=\237\206\244\274\264`]\275\256\311$\275\333\252+=\303\211/\275\242/\007<\037\257\\=\010*6<\3165\273\274\205\207\321<\205\007\306<\303\350\256<]\3431\275\360 \200\273GY\210\273\316\320\324;\236\331\315\274p\267\302\2742N@=\210<%=\205\005\330;\2241\\;}\343\301\270!\240\017\274nb\010=*\217!\274\357`,=\220\270\020=,7\253\273J\0220=\321\022\370\274\236%\242\273\034\351\036;\276Ou9h\2571\275V6\301<\367*7=\316\221,=tcU=*\354\246<sZ\336\272\351\201\036\275Za\005\273>aT=\374\037X=\315\370M=\253Z\372\274\3343\016=L|\026\275\013\254\327\274f\333\204\274\205\236.<c\177$\275\217\3417\274\301\303\014\275\346\237\324;\310)Y\275oQ\274<\367\224N\275\217\024<\275@\252\227<^\366\\=\005\333\341<\345\244V=\254uQ\275\004K\004\274\024r\304\273)\022\005\275`lQ\275\236\033\264<L\352\003=\231\000\377\273\3344)=i\007\006\274\023\375J<\370\307T<Q\300\325\273\371\335\t\275\234S\031\275\342\2035=\254\345j<\034w\346<\225\221\333<\275x\277<\000\252\277<\334\265\244<`:\310<\215\320.=d\266L\275x\304L=\000u\002\275L\245\002\274\222\202H\275\254TG<\177\017\034<WNJ\275#\\.\275\253\235\237<\256\253\306<\217\0035\2757\234\245\274\355\216_<\367\216\274;U\270\245\274e|;=l%\032=Z\032*=\205\247p\274!\004\215\274C`9=\313/\257<\260*\343\273\254\3550\275I\314K\275\320r<\275\370\262v\274\0231&\275\020t\n\275\353\225]\275\350\\0=g\"H\273\357`\325<pKj\274\026\321\177\274\257\321K\275\257\000*<\346\355\033=_nL=c\340\030\275h\332\216<6\n\336\274\261\274\010\275o\016D\274\346:A\275\3118c\274\367\211\306;\3527\033=\247_J\275\210\004\376;\010\003\025\275K\030.=61\034=\233 \020=\227\0365\275\233QM=\243]\021=q\302\212<\036\217:\275k\255\361\274O\352\217\274\350\375-;\227\007\022\274)  \275O1K\2748\223\032\274IU\302;\203MB<\353\207\342<z\254,\274m\241\323<\236\256\021=>x&\275\225{$\275\347\324K\275x\300Y\275P\360!\274I\033l\272\254s&\275\347\\j<\3050\254\274\002#\000\275R>0=g\211\257\2740\221\335\274\r\2015=\242\204\007\275\353eP\274\357\320!=x\340\"\274\031\260a\272\345\036\332\274S\216\032\275t\374\035=\320\235!={\257\032\275\220\346O=R\3004=/k9=\0047\037=\345\030/\274\206J*\275\206\216G=\274I\006\275\376\013\232;kY\322\274A\262]\275\305\374T<\370=\010=\035\3045\275\0138\252\273\344\007\021\275\354\214F<%\201\255\274\325\223\032=\301\000\364:\370\232\200\273\303\355M\275~M\n\2754\305\027\275\360<\262<~\273\264<\324\2303\275\256\t\\\275R\256\370<\253\356W=\300:Z<\225\352R=z\247\266\272\333%\t\274\203\013\037\275CZ\212\274\265p\276\274\2435X<\261IT\275\020\001\305\274!b\'\274\311\317\250\274\353U^\274\236\265\360;$\t\000\275~\205G\274P\227\275\273\235S\336\274\236\211\016=\3638\365<\334\310\027\275\361\347\333\273<!\021\275p\262J=0HC\275\332a%\274\307\353b\273F\316\226\274\256\227\320\2746\265B<\356\263W\2735e\035<\314\317\004\273G\'\r=\367\246i;\271\316:\275\237\273L=\303O?\275VQ\264<\215\311F=\027O\352\274\264x\031\275\213\307\321\272s\'X\275M\2464=W\270\263\273I\275\341:j\010\226;\331\304\355<Mt\357\273c\206\313<\021\207\274<\267\227\017=\271\020W\274\274\306\005\275\002,\375< \254\335<Z\331H;a[V\275\2174\003\275\026\250J=\365\230E\273D\201V\274\020-X=~}\"=\374\267\216\273\247\215\236;,\367\r=bn\312<\022\206\237\273\014\223\310;^K\257\274=\231`<w\2569\274\342\371N\274\014\203\223;\276\374H=\207`P\275\307sJ=\002@\221\274=\307\234<\270(M\275\347\024*\275k\342\306;\204\2531\275\343\351I\275\205P\n\274\361)\266<\270\276p<E$\211<%\352S=H\342M\275\342\324{<\027\262E\2751\206[=v\313\262:\361>\r=z\t^\271\320\n\365\274\345\211\206<\340\330\341;\321\323S=\0331\\\275A\203\357::\276h\274\303\220F=Y\010\300<t\327\265\274i\352\374<W|3\275\273R\366\274\322\212t<\3312\234<\273i\264\274\216\241\223<\376cS\275:L\226<y`]=n\375]\275J6\030</\343G=\327\365\273\273\"q\016\274\030$\367\273f\020I=\3619^\275\335\346\"\274p\024A=\356\317Q\274\023B>\274\017\037\262\274\340\216\273\274)\005,=:h\014\275\312u\207<q\217\026\275d5\335\274\341\210C\2754\330\330\274\211\311M\273\031\206\300\274\214M\031\274\262\371/\275\347\035\357\271\003\213\311\274r#>\274\327\241\037=\030\305\013=\032\226O\274\367\221\033=\356R\350<l\024\263\274f\276\006<\034YE=\210_D=\014M\013\273\365U4\275\203th<^\326\344\274\350N\377;\347\205\270\274]v7=\023\2334\275\362\230)<\033\3138\275n\301-\273s\323\017=$\376\255\274!\200\357\273\343\3544=|b\t\275U$/=\370\013\377\274b{\027\275\201u3=?B\347\274q4L<\r`\320<\213\354\001=_\035g;\202c:=\205\332\226\2741MR<\346-5=+%*<\206L\253\274\254\361\317\274T\301S\275\'\002S\274\023go<T\240[<\277\257f<IM\337:\003\034&=\344J]\275\026\316\356<U\257\203\274^C\\<\017>\035\274\027\002:\275\254L\364<\2359\335<\353c\275<\3270\241\274\326\233\337<.\256_;\214\240\002\275\301k\033=\270\340\206\274\031\307\215; !\030=\302q\216\271W\337u\272#\333N\275O^\262\274\206\372V=\225\375.\275\262\025\006=z9d\274\364Z\323;\210\207\260\274\017\2330\275\tt\017\275\322Q\021=\266\351\n=;\364<\275\306w\253;G\303,=\337\223\372\274|\r\007<\227\031\301<\013\000W=\201+z<s\237\327\274a\300\312\274\205\254\277\2740\206\354<\016\0059\275\203\350\272<=GT\274ey\260<F\366\270\274\227dW=\017l\271<7\034\350\274\031u\032\274\231\227?\275\302|\311<\264\002F<\273\t\032\274\2753\307\274a\210\213;\240\364/\275Y\214F=\004\242\034=\210\024K=\251e3=Nu\301<\n\336\271;\364\316\365\274\371L\243<.B\264;,\374\253<\022\021N=\267\023Z=\375\354\223<u\265\210\274\343}W\275S\330\030=\030\226\370;\006\222\347<C\n]=\r\273[\275\337\030\000=\0161\326\274\336\037W=\002\270l<7\350\375<-\211\377\274\201\356\001=\036\333\245\274\330.%=rT<\275\213*Y\275R\r$=\362g\'\274];\013\275\220\214\321\274V\253\333\273\r\253k\2744\023\232<9\271\216<\323M\200\274\255\016\256<\t\204X=\024\264.=\337s`\274\301\274\365<KvW\275\020]\365<X\322K=\n\336S=p\317>\275|\355E\274\344\247\257\274\353v\220;\232\277\303\271}\2655=N\322\3709\302\"\023\275V\353\327\274\032\035\030\275\033Z\034<\300\237D<zI\246<,u\330:\377M\216\273Lw3=\273\017,=\227\t\003<H7L=\277`\"\275\341\005\262\274\3173\317\274\231W\356;3O\335\273\255\252\033<\213\337G\275\277\355\032=Y\243H=\366\247\022=\232\006\257<\376t3\275\221\007\014\275w25\274h\027\340\274;\300A=\022\321Q=0\177\036=SB(=;d#\275\331\000\343\274D\341\256\274E\205\035\275\305\273\301;\010$\351;\265\003\t=\177\362\t\275\245\031U={\245\200\273\2502\363\274%\016\004\275\\\224\235<y-\034\274\225\201\325\274z\375\205\274\374\016\376;\030\026\t\275\227\243\240<\363W9\275\323 \322<\325\2639\275E5\026=T\3059\274\251;\371\274,\003(\275\264\271\210<G\267\301\272\"\365.\275\373b5:+O\n=\035G\364\274\252Eh\274$\275\264<\242\034^\2756\305x<\211>E=&\342\026\275:\233/\275\332Q\303\274\334<\350\274\232m\340\274R\234<\275\274\034_<\366F2<WtI\275<=\341\274\360\266F\275\\*I\275\365bO=\026\r!\274\224\362\023=n\001\346\274\2749\360\274}\027\207<\025\273\001\275k=x\2738\371\223<O\220\327\274\n\'\001=\303\211.=c\342\001=\313\005\324<A\3548<\272f\362\274W5k<\317,!<\021Y\362\274\033B5\275\020GY=\036gR=\330\205\271<\350\214\232</\320E\274\330\201\030\275-\036\373\274\232\303]=\3639\334\272M<\013=\305\257\005\2755\370\016=\013\242\354<#=\320\273~\222\020=c}\220;[\r[\275\314P\276\274\317u>=X\207*\275AZ\032=\377\301Y\275\371$$\275O\266?=Ib\304\274_\315\316;\200\325\377\274Zn\"<\370i]\275\036&\264<\344\265R\275D\250\254<:b\010<\307\271\351;Q\350\036\275Zk\006\275vN\321<R\212==\337\245&=\211k\374;x\240|<\330\243\244\274\000\345\364\272A#\024\275\272M\032=\321MB=\312c\222\272\005\233\257;>\324\034=\366\000\032=\3159\237\274c\257@\275\263H\003=u\253Y<\314\262\3369P\024\255\274\345\007\017<M\310\245\273\210\223=\2753\213\007\275x\0335=\320yK\275\273y\365\274\275\3303=\213U\201\274\365\272D=\310\324\274\274]%E\275&\001\371\274,\261\230\274l\316\304\274\236\225\'\274]v8=4\344!=\206}*=\333\250\327<\223\335=<\210\013W=\325\002Q=\250T\341<\277\306I=\376\352\306\274\002\2106=\221\n\332\274\'\364\031=\005\016\243<\230i\211<\350\327N\275\371\n\376\274\321\3722\274\262i\t\275C\2452;\316 \214<6nX=\267\244\364\274\026\222\032\275\211\367:\275]\303\000\275\231\353\242\273o\234p<\325:]=\020\006R\275\2541\204;\271\330\030=\017jF\274*\376\000<\370\232\374\274\027?\201<\377\343v;&\002\032\275\314F\363<\006\007\203\274\235\212\224\274\301\3409=\204\024\263\274\346\300\316<\375\316\022=\224\353\312<\311\005\257\274=\355\032:d\245G<T\214\260\274\325iV\274h@?\2756\306A=A\017/\275?\036\355\272b\214\231\274\004\332\237\272\351\323\237\273\227L\273\274\351j\014=\274=-=*\222\005=\330\3747\275\037z\373\274\310,\007\2754+P;\371B\255<\242\261\007=\0070\234\274\316\316\021\275\316\363\'=b\360\311\274\301\343}\274\344\312U\2755H4<\305\0173=\024\037\275\274\2105\255\274\\(\007;\221\354\227<\371x}<\320=n<\234\026!<\344.@\275\243\364 \275T\022\017=\253\001\246\273g\2738<\r\316\236<hV\200<\333\200\316<\033%\000<\354M\314<\004-\302<\216\005B<\315\237\263\274A:\005=Aa9<\225\000\016=\263\t\274\274\355-_\273S@\216<+l\n=G\256\205\273\330(@=\376\261>\275\257\256\013=\245\3429\275\300\363\277\274m\022\335\274{\276\014=\033\'\211<\366\202\'\275\304f\344\273-d1<N\252\367\274\310\020\001\275)Q\016\275\t\334\022\275\330\005F\275\325\207\014=\360\003\014=\301\2756\275K\343\311\273\371\346\262;jV\336<\215.\327\272\305\023.=\364d>\274\277(\230\2742K8\275\316s3=?\237P\274p\202-=ksn\266\357j$\274\3746%\275W\214\364<*\031*\2744\307\037\275\275,,\275\330\264\022=5~-\275\006\214B=i\271\000\275\230\032!\2752A\224\274\370\210\260\272\352SE\275\333\337\001\275\276O+=\261<O=u\326:\273\277\177K\274\317\255P\275\366\212}<k\345|\274M\316\000\274\340\021\302\274\005\360\272<;\316\314\274\256I\370<m\326\210<\267\336\206\274\305\327\267\274\335\276H=K\307J\2753\246\200<\315zV=\3348\006\275\270I?=y/\264\274\221a\"=\020~\362<\217\007\\=\001\"\006\275B\277\264\274e\022\000<\325\207\202\274x\030#=\345\243!\275\014\010]<\320\335+=N:M\273\260\316\347\273P\177\301\274i\266Q=qW\277\274\360\346\323\273\335\357\014=\244\234@\275i\320\\=\236\217\257\274\260o=\275\251\021\345<\330\252d\274\244\261\236<\244\014)\274\344P\'\275g\215;=<\332\341<(\201\333;\207\253\266\274e\321s;\215~:=)\273\313\274P\354\022\275\275\1770\275\236^\345\273\272\251@\275\025g\366;\003G\007\275\324qB;\010\331!\275\313\014:=\026q\204<>S\014<H>V\275\262)\254<\016=-<\2441\037=\244[3<j/\027\275\352@z;j5\021\273\035\254Y=\307\370E=\231c\"\275\200A\3518\023\237V=\303\032\007<\344\221\345;\023q\013\275\\~\343<\336>^\275\273^\236\274\373\2118<\206\t\031\275\013\245\266\274\254~\353\2740\314\200<\262\n\343\274\\\277\216\274\375\374G\275%N\265:\224\251M<\2439\031\273\207\231\252\272A\233\341\274\217 \035;\266{F=t\206(\274\016Y\032=4\304\236;\343\212\300<\2173\002=\240\017W\274\235\010\270<\271\253\001=Q\032\013<G\026\027\275\216E\233\273n\251A\275x\201%=H\321U\275\034\005K\274\304D\325\2747\2741=\020\343\316<\270\'\025=\375\206\3229\217\022 =\302o[=O\t\377\273ef\275<\003[\001\275\267\257F\275\361\261-=r\366^<\333\226\336\274\272\005\246<\231$\277<[XZ<p\366\213\273\017k\223\273L\002\356\274\t\357\033<\037\342<\274\272yD\275\311\201\323<\032`\375\274\254\344#=sf9<\223\241\255\274euN=5C\222<<YW=\366\027\377<\002z\342\274)6\216<2\230\223;\251\225)\275\376\204Z=\264\023\313\274\002\334U=\\[\r;Z\376\342\274\226\206M=\203\204\223\274\372}\215<B\024F\275\204\375\206<p\213\331<~)%=\203\320\013\275\323I9=yw\310<=\227\246;r)\000\275\335n\307<\302uE\275t\301\030\274\000\316\275\273\345\226\263:\376\026\246<sP\352\274a\347:=K\r\006=\212\231\343<]\313 \275\000\211\304<\317KE<\214\276\023\275\253\342F\273x\311/=u\300\363<}\202B\274yO$=\225\2758=\303G\337\273\327kH=\376\203\002;\366\200\232\274W\3639\274\343I\244<\317@\213\274\312\207\262\271\363\341<=\357\222\001=\205 \200\274\335\227\261<\272\277L<\372\267?<)ff<\032\261M=U\221\206\274\302\200$=\034|J=\"]\026=j\331\r\275[\234]\275\201X\253\2748\021\013\275\237\245 \275o\"Q\275\242\271J=\241#4\272aH\034\274n\2708<q\021\\=\024\024\223<\226\262\304<d[\335<U\226B\275\240\035g<\231\307]\275 \234?\275\360y\220\273\343\372\035=w)\020<E\027\306<\3367M\275J\212O=z\367B\275\316\301\354\274\347\371S\275\010\036\276\273U\211\351<\030\351\206\274#%\016\275;\243\231<\242\034\363<\312Z\214;y-\032\275\007,$\275\211\302Z\275\032\272\r=\212\331\337<\177L\033\275]\352\025\275\267v\032=\3679\r\274\023L\033\275\331z\316\274\201l\210\274w\220+=\353\355\004<\"#\255<R\220\277;T\257\375\272\027\237\\\273\313( \273\236h-=\033\273\020\275\226\002\371\2737\2442=\326\363!\275@\327\210<9~3\275\337\000\252\273\234mH\275\360J\375\274\333+\227<\356\302T\275*\242\010<9\272\364\274I0\370;\352\260\226\274z\244B=u\223\365<\352\202\t\275\370\224\364<>\303\037=[\")\275r\274\3519\205\320\340\273\377\372\001=\033\001Q<\033\032\002=\303\340/\275%3{\274\364\201E\274\255\354\335<\327\255n<]\347\010=\277\302\345<\366\\\331\274\240\202\252<\355\374\376<\255Z&<j<\032=/[\256\274\377(\254\274W\315\013= $N\275|e\003\274\031\263\311;\204\372\353\274\201\364\212\274\005\314$\275\201\371\204<\355\026\244\274\374\236\0049j[\025=\341:L\274\2716\230;\020\361\347<\026]\226\274\302PI\275 \252\365\2741\306\305<\277E\'<]\307:\275\324S\377\273\344$\004=\347\0041\275\2078\310;p\254@\275\021}P\275\037\251\326;\321w\030\275t\370$=\002\275\226\274\022ZF=q\007\262:4\253\005=\301\316\006\275\000j\306<h\224\346\273\252\355\037\274\023\220\\=rwI\275\246I\177<\210_\207<\005\024\322<\222\302[\2759\256Q\275\263]\204\274?M}\274I\245+\275g\347\037\274:\0368\275\303R3=Ru\334\274\275Rt;y\331\230\274\242\341\217<\216\303s<C\354D=f\305\364<J\322\373\274\350\2632<\2166\315;\257\035\374<\231\261Y\275t\376 \275{\r\236\274\353w\354<\\\321\026=\310T\014<\326\2379=\027:\014<\323\205\304\274E\0344=\221\007/\274\"\264\224<s\336*=\233\271\246\274\212\320e\274\r\304S=\305\304\220\274\013\207[<\2700\313\274\3310\241<\034\036(=\236S\027=V\032\327<{\316\006=\343\016\276<``\027\275)X\024\275\272\014\353\274\037}q\274\020\242\224\274\224\375\"=g\031\376\274\224\263\252\273\025\367 =^\274H=MC+=\301d\314<,\373\254<\330c\007\273k\336\355\274\213o9=\005Fr:\010QC\275&\025S\275\367mB\275\037\210\266\273\005@\362\273V)\342\274\377%\372\274\346\0137\275\304\312\034=\177\313i;\000\tj<g0O\275\272P+=\335\252\225<-\220\305;\300\r1=:\257]=ec\322\273\033[o<z\2329=D\001:=\037\316\360\274%\211\204<\226\260+\275L\326A\275\225\177\013<bM3\275\260\035\343<\273O\360<\203\031Y\275\201i\032\275:\212V<c=8=\276\360P=\312\274\302<\230\206\274;R7R\275\363\227\032\275A\323:=\301Of\274\247\312\310\274\312V\317<\213\242G\274\263\243\324\274\004\354L\275X\223\261\274\270M.=\210\262\243<z\203\213<\000\000\026\274\221\330.\275\270\241\246\273ag(<\264\342M<\250\263\n=>\235\037=\225\225\260\273\363\324C\275a\005\330;\223\335*=\334\026\226<w\225?\275\3159\002\275 \247\005=G\341\024\275\204\002+=S\340Z\2756\371\276\274F\214\350<\350\246K\274\226\364@\274\226@a<F\307M=\024Z\224<W\321\326:\026>\201\274\"\344\204\274k=^\275\231\315\330;G\263\342<\321\034L\272\213\226\225<\234T\377<Ll\347<\263\317\036\275\260\026\006=\030\014\377<\264\326\337\274\311\027,\275RN\252\274\177\247Z\275\001L\221\274\340\254=\275*\261\211\273wI\257\272\215\354\000\275|H0\2755\022!=\255G\322\2730B\036\275\303F\004=\t\236\312\274\255\332\247\273:/:=\003/\014=\0220(=l\241[\275H\355;\275\370\251J=g\347Z\274\221\323\037\275\313<.\275\2375\037<B(Q=\037\027\343\274\324\302\266\274\331\352s</\261W=\024\361J=h\332\334\272f\031\362\274\3310\373\274\235\303\214\274\375 \037\275\323*|\273\341\317J\275OS\246;<\\\016=\270\235\217<xL2\274\276\025V\275Q\225\252\274K\243\336<\367TZ<\013\360\300\274\341gL<\211r\347\274*\177\323\274\'`;=R\333\232<i6\014<@\301\341\274\273\377\370\2746\001F<\262\234\303\274\372\324t\274\241=C:L 9;\2142m<\257\377\374<\242\231H={\"]\275\233X\317\274\213\035\265\274\333\264\200<\261\367\362<\332\363\220<\236\"%=\305\257\t\274\204\364\334<\010DH\275\201\037\225<6\2414<\350\177\364\274\260H\021=\377\027\037=\265c\277\274\302o\326<\266a\016=\363\'M\275\254\206\253<\005E\001\275nS\326:\261\332\222<f\013!=\207+>\275\315]\307\274\313\010\235\274g\2379\273\036\371\005\274~\3064=\024,\210<\270\200T=\\1~:q-H=\025}I<\226\267\264<`\014\377\274\\8Y=\277\3659=\036i?\275^\017T\275H\001]\275S>N=\177\241><\211n\017\2740?$=\274\2042=\325f\313;`V\342<\227\337\216\2723\352L=]\220U=\317\335\3559\222v_<x\035Z\275\223!5;$\260\252<_\035\260\274\335\361\323\274\342\024\362\273xW1\275\307\321K=)\375\006\275\260\255\235\273w\273\326<\306\262\031=\235\360\211<>.\240\273\270x\004\275\312+\002\275Z\337\005=\001ZT=\2377\007\275+<\363<cA\265\274:q[=\367<.<\267z\215\274\323\024<<(\276\233<\201!\277\273\363\021<\271\211\220\253<3\220\307:\033VI\275\343\332\\\275~\210$\271|\361\270;w-%=\334\342\325\274\321|\265\273\344Y8\275\346S\027=\376\351\034=Z7\027\275{\337\234;\314\370 \275{\374[=\302\376\340<4u!=\277\356q<RG\037=\223\323\004\2757\212\327\274A\331C\274\013\266==\314\221\n\275x\211V\273\010\307I=\216\213\306\274\326.\004\275\004D(\275\372\247\227<C{\032<\327\023\007=\030\007\353\27494);\036 \273<\017?\243\274\300\335Q\275\275\366\200\274\232\003J<f\207\366;5\333\\\275]\037\300\274\232]3\274\351\345O=5NZ<\0248\024=\034\371\001\275\211\370\326\274E\3441=\240\271\370<\335\2258=TGt\274\200v\373<\000\365\357\272\317\223\241\274\306z:\274\017B&=\254h\240\271\304)\020\274Oy\311\274Z\363\030<F\267P=\020\333\014\275Z\363W=\266\336~<\366o\365<}\027\004\275 )\007\275W\027\036=\001\037\364\274\242\201\273\274\210\323\267<\006\023\337\274`{\326<\2552@\275\275*\370\274\003\010&\275M=\005\275\343\333\347<\023M\301\274\267\021\021\275\001[\032=\273\215\343<\224\210\317\274R\352\r\275\314\n\023\275\013\231#\275\352Mr\274\021\213\367\272\364G4\275\252s\'\274\235\006U\2752\225P\275T\232\036\275\201\250Y=.\346\001\275t\024N=\236<\001\275\300\0374\274P\223B=\274\202\r=\035xI\274\t\311S\275\005Q\243<\'\317\225\274\301JI=\276\245!\275\002a.<\333\367\033=y\233D=\376\371\351\2730\014\270<\307`\314\273W\026*=\353x\022=\327Z\315\274Ft6=\225\333\230:\035\306==\235d\301<M\323\214<\264.\347<\3171;=\024; \275\225$\372<qd\264\274\352uJ=\3461%\275\\\274\020=0l\020<_\357\'=5B\246<\316$:\275\354):\275\222\305\\\275\331\001V=\246\267E\275\317\376*\275*W\373\274x\211\364<\326i\001\274U=X=&1\243\274fAi<\270\300\022=m8\223\274\217\371+=i\022\023\2754\232\020=P\243\014\274\301\215\307\274\350\275v<M\026m<\016\314\201<\377\3404\275\357^\007\274k\253]\274\340\264\214;\373\232\362\274\240\313|<\030b\036\274\366\327\327<\356\226\\=a\032\272\274\312\360\037=)uP<\034\264,\275\326U\235;\035\367`<$\323\t=h\212\222\274\033\025=\275F&\233;\"\264\004=\364\200\t\274\260\322\336<r\234\031=rE,\275\273\007W\2758EZ\275\330!\276\273m\347\236<\267\240\'\274\226\3047\275\211\270:=\323f<\275mKN<\216\023\276<\272\304\010\275\177\"\211<\273\271]\275\1772\311\274\301\021A=\344{)\274uc$<\032\343.\275,\260\351\273`\313\324\274\216\327\017\2748f\353<\325\025\272<LT\351\274*G\021=\250(j;\224\353\014=\247\2524=j\223\\=q\003B\274\306_;=\277\201\032\275$\217T=J\'\327\274\230$\365\273\017\344\004\275\365\236S\275\004\361\272<\025\347?=I~\215\274\345c\307\274\230\335==q\251\253\273V\374\241\274\274\316r<\2054\341\274\"HU=\341\320:=\313\016\211<?c\303<ph\263\274)\346\252<\370c\270\273\225>\002\275\000\\\027\274\307\303\027\275\352\320M\275\242+D\275\224\246\013\2759\246\030\275\241\236\360\274\271pB=m>:=\003\000\013\275\354\272B=\326\370\033=\02281\275)\341\352;\361\205\266\274<q\271\273\373\256\017=\004\304\307\274S\363\030=]\007,=\225\3178\275pz\003\272\336\276\310\273\035\316\253\274\237\226\021<]\365\"=`M\335;\2261\311\274\014\275K\275\244= \275\301`[\2758\2530\275i(\247<\352\215\252<\2432\202\274\240\226-=\177\350\032=\202\350$=\275\224\366\274\346\204\271<\260H\325\273+\366\211<w\031^=\326f\354<\305$\201;\006\246\000<\036\270]=Q\307\304<\017\325\377<\3471\313<\205\371\255\2745q\016=HQ\346;\022\336\356<\362\211\003<\221\221\016\275v\017K=\001\240\341<\261\265N=\374\373\':\177k0=\006\277\222<%4,\275.\353\216\274\0325\343\274\355G\020\275R\347U=\236[\026=\246\260@\275u \005\275\330\026G\274i\322\253\274#\245Z=\303~\303\273\365\363\366<\205O*\275\262.\366<k\265[\275h\317]\275J\236B\275\344E(\275Q\221Q\275\263\347\300\274S\321A\275\033 \013=\252\'\\;\246\\\034\275t\227\341<Nk\237\273q\014/\275\332\301I\274\313\235\223<|\230\322<Jt;=/D\260\274\317\tl\274\231\2033\274s)\346\273\027\376\013\275\253\253B\275\372|5=\007-Y\274f\313\000\275~\023\311\272\020F\231;\203\0235\2752\3351\275\231\025m<H \241<$\267$=\026\177\'<\331\207\231\273 O\251\274\307\374M\275\371wR\275!\262,\275\213=8\275\356y\027=gJ\\\275\351\252\t\272\344\372\332<9\276O\275\303\307\'<\224\304\364<\243\2760\275\303\265\001\275\224q\247\273F\215\035\275\344l\001\275\232\3448=3\355F<K>\312:\267\223$=\002\223\352\274\037\0012\275p\363S\275\311\342]\275\321\r\301;\'G)<\362\027k;p\3243\270\241\231-=\352\0032\275\005\327\000\275\275\303B\274\261\2270\275@\031\007\275q\271\017\274_\361\324\274\214\000)=N\320\021\275\016\300<;\331l\325<s\302R=\300\341\260;;\314\370<\353\347\"<\277i9=\002\255\364<\3039\000=\371\351\026\275h\004\037=\212&\035<\203\2627\275\352\357N<\225\r4\273\377u\030\275+\350h<\311\276G=\240F\034=\353*\221\2739k\002=h\311C=3\314R=\"O\024\275\2322\375\274\351d\220<\224\035P=\024\314O;\3303V\275\226\354l;\202\353\200;Lx\263\274o\223\030\275\313Y\r=l\2472<\352\201C=\312\371(=\314\353\014=\300\211\356\274\233\206\343\274\274bL\274vaF=\271v\037\275\317\225\010=O\260F\275/W\003=\250\304\301\274\357\274\030\275\266\304\020\275ja\227\274,\373\277\274T.\343\274\234\3506\275q\347)\274\300\270!\274dZ\312<\262\007\004=\212\0369\275\233V\215\274N\000\215\274|\255p<>]\243\274\313\000\347\274G2\226\274\262(\275:d\325P\275\272DT\275\210\325\001=\240\314\331<VPJ\275\n\373\214\274\254\266\215\274Yc\037\273\230\335\235\273\225\344\331<\350\240\301\274X\203\310<^6N=\342T \274u=6=L\353\266<;\2042\274\227qS=\342(\r=.\362\357\271J4-=\274\356\235\274\374\304\037\275@4\000=\257O1=B&6=A\263\300;\217Q1=\335\306H<O\362\002<\207{q\274\265\237\217\274\276\376\376\274p\244<\273F\002?\273\321WF\273\025C\342\271\351f\254\274\3015\335;\340\360\033<C\321\271<\224\356L=\327\344\000\274\027\324\343<#\360\n=\217\3060\274\036s,=\001\303\272<\324\253\002\275s&Y\275\237\354Z\275\252\300\004=\234\311\356\274\266\010#\275\345\257\206\273\360w\025=\335\333k;\261$L=\232\3508=\333k\022=&d\t\275\n\242\346\273LfW<\3320\301\274\361X\225\274+y\032=\376{;=\321\336.=#\315\215\273SI[\275\205{\n=7\001@=\370\2416=%Q\245<I\022\345<\007\335\255;[S)\275\221\336E=\332)\375<\225\025A\274\257!\r\275\222t\000\275\214\237\272<k\213\013=\301\204\034\275\276L1\275\002\224N\275\354\347W<\177\021\017\275\316\001\364<9!\003\275T\031F<[\364\356;\353\251\335<\"\010\212<\005W\373<^\0049=\020G\360<\212\270\\\275\\&\324\274w\266W=\353N\233<h\242U=Y\036\342<T\035l<\250\256\021\2742\221\320;bp9\275\010\334%<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2030
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2030
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
