node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2140
          }
        }
        tensor_content: "h1\253\274Mb!\274\346\202/=\272\250-\275\025q(\275r\235\206<\017\235\006\275\211\262\336\274\320\201?\275+3\021=\016B-\275\213b\027=\2076W=8\332\004\274\211\377\334\274tsS<\232\025\243<\2639\222<\223\364Q\275e\235V\275e|\016\275x\250\036\272\001\2077=\246f\344:\354\201I\2758\233U=C 0=&6\242\274J\245\205<\027\364\330:\234\034\261\274\305\221M\275#<\205\273I\3023\275{BF\275\214\264\372\274\372kB\274?\"/=*D\005=\242\240\364\274-\245\273\274\210\317!\275#\271E=C\234+\274a\n\350<\357*?\275\"eR\275\010f\340\274}\244\337<\025\330\251<y\016\357\273\240}\001\275 ,/\275A\027L=j\035\005=z\342;=\306\333[<\362\243\365<D\0074\275\003\2315=JW\026\274WV\022\275i\247\215<\327\375\372<\342\202\027=\244:\243\274\341\222M=\000\204~\274\342\371\245\274\352n\242\273\217\332\364<\343\340\363\274\265\3171\274\263u,\275\313\326\027=\253\312>\275\3715U\275R\314\374\274\313\361\r\275\350\324\027=n\307U=IB\034\274\250\316\027:\315\335K=\247\005)\274\217e\353<\036\316\361<\343\005\336\273\231F\247<\346>\271;\227yE=W\337\372<\314\3442\273 YU=i\337\225\2738\343S\2732\210\034=\'\001\373\273!X\217\274\272\252\224\273z\320\017=\250((\275\213\3354<\212\200\341<\360v\203\274\'\306A=K#$=\023k\021\275$\034R\275\034\251h<-\'g\274\325\3001\274slO=\373\333V\275\234\376J\275CWD=\263v\206\274\254L\354\274dy,=\036\2454\275\372\000\024\275\231p\033=\261_4<\376\376/=\224\353 \273\247\322\366;\315\256I\275\252\000\233\274\211\241.\274\r\211\261\272 \303\022=\307\023\311\273m\316\351\273p\t;=\261\202\026=\363\322\032\275\361\003F\275\353!\'\275\027\320\371<\344\256\206<u\221\304<\313\254\264\272u:@=\267\370\037\273\323\0103\273O\035\017=\316\001P\275S\203S\275\275n\317<\256\3240=O.-=\006\233\031=\037Pp<\344x\210<\n\204$\275\027\347I\275\377\354\034<\272\314S=6T6;\256\202\347\273\3161\356\274\206\346\007\275\222p*\275\377u\020\274.\254\277\273f\232\255<}~S=3/\t\275\343\277\361\273G\245\r;q}\307\274S\272\224;\271Z\006=\315\2635=\013M\344<X(\230:K\257\225\273\250\316+=$>\023<\302}\036=>\240\250\274i&\327<;\246\353\274\340|\251;\250\345?\275\222\214C<\365\362\333<\231\252\350<1\254\344\274\210\336+:=\304\330;\301A;=\367\215N=:\004\350<\345\216;<\002^P<{\207\302\273\353jI\274\225\264>\275U\376S\272x\362;=j.\023\275@\322S\275\367\177\365<\334\373\020=K\343>\271\242A\210<\376\226\352;\'F!\2745)\025\275u\361\271\272\246\227\221;f\313J\275\037n\231<7\004\274<\304\252\311\274\376\t\243\274u\314l\274\013\006\263;\230F\343<\356\313\025\275\017\320\022<A\204$\274C\270\203:\3455\214<;v\236\274o:\204;\217\tN;\254\222K<^%\213<?o\335<ju>\275<m4=\273{T=\026|\353\273I\335M=\013\253\005=\277y\017=\231\226\005=\356\203\345\274_\276\013=\036k;\274\254(\010\275\026\306\232\273\353\010\232\2747\020g<}Y\000=o4\246\274\254\223O\275~\033\315<d\341G<\373\032\351<p\264\345\274\n\350&=~\3641;\006j\"<[eq;\254J\340\274\306m\335\274\324T;<WK<\274\005\224\205<\352\244\365;\354\272A\273\316\362\206\274G\250\325<Z\330E\275\0009\013=\030wT\275c\375Z;9;N\274\311\276a<\327\004\266<=dJ\274\202\241\010=\200\243\327<I\226\257<;\352%\274\333\276\003\275P\363\244<\002\000\250\274\326\333K\274\352\023X=\016\276V\275}\246\n\275\344\372\n=\214\347B=z\322\300\272;7\027=.\303\036\275 K\022=\022S\021\275\357\000\346<\235{\315<\272(\301\274y\031\021=\351\177\260<4E\023\275\363\246\205\273\014F\r\274\265\007\"=^\371*=\260.P=\010\326C<\243+\007=5\262J\275\307\374\365\273\237\006D\275\255\307\335\274\375)U=\010\274J\275\3728C\275\'\247\254\274x\370\305\274\253\345\352<.\351\372<\000\362\350<0w\301<E\267\305\274\353\300\005=_\'\371\274\227\257.\275\313\224\r=\263{\351\273\314\273\007\275\013\275\366<^\3579=R\005\032\275\365\325R\272\376\245\344\274\252<=\274Q\036y<\001\237\250\274\216\271;\275\346T2=\305\320\342:|:J=r\372=\2751\215f<\253\221\232\274\261\020%\275\234\340[;;{u<(\302\002\274\310L\361\274\331\017;\275\365-\327\273\360e\025\275\314^\366<\301\306\242\274\234t\272<\251\225,\275\336\214H\275[\315,=:\262\002\2738VR=\202v>\275I\264\302\273\255{V=\211\311P\275\200I*<y\2169\275\265\226J=\270\312\206\274*m\331\273\325\277@\274\010M;\275R\'Q<\322\215\2119\350\255\230\274\355\231\343<=]+\275\010VB\274\222\275\230<\316\272?=\227+\000=\310Z\335\274\377\374\033;\351G\331\272X]U\275j8\037\275\265_4=\2441L<\344 \354<;`\305<b\234A\274\006Z\354<\212|\203<Az\032\275_;\270\274\223\210H\274\006\225J=\361\035\255\274`\272\215\274,\023\265:8\212\332;\005c\373\274\265_B\275\025R\363<\205\242#=\3316\023=\212W\005\273 ;\244\274\316\004@<V\260\230<\016b\n=T\006\214\274v\242\317\272\221\335F=\224\240\036=\'\313T<\035\003\271\273\345\371\034\275\241\365\274<\327\027\363<H\320\024=D\036c\274FG\204<2&O\275z\231\320\273\347\205 <F\263\003= Q\367\274\221\252\223\274\356\'\t\275\213\205Q\275\220\022)<\000\312@=A\217==\222._<\216\273y;\236\243M\275\317\316R=\375\356\\\274\370n\213\274\255\036B=\244\222P<C\361\r\274\260\244\r=\215,\250<\255\203n\273\330\375\032\275P\202\350\273\310\342\246\274Q\245|\274#CK=9,\r=\024\344\"=\\\317\363\274U\027\311\274\303\021R\275\313\231\234\273`\227\'=\322B\235<\037e\315\274b\341T\275\214D\242<V\334@\275\357\272H\275\010\207\360<\330\317X<dv\351\274P\206\246\274\371Z\320<syf\274Q\205\356:\0102?\275\304\010I=\014A4\275\231\347D=\3240N\275\306\037\205\272\013\364\017;8\321\211\274\237!\205;H\356\n\275\364\327N\275!\233+\275\276\311\273\272Ok\220:d\031I\275\036\347I\275\356\300@\275\270z\303<;\340\317\274\260\\2\275L\264\222;\317\013\275;E\347\035\274|\337\365\274\210\220&=\036\325&\273)\233\245<\264\004\375<\365\310\014=\3604\n\275\331\217!\275\020A\003=~\017U=\304\342\303\274/\226\031\274\371\030\246<\262Aa<\005\327&=8]\034<\026\010\270<\320.\020<D\225\033=\247`\264<\234-\342<\354\313\030<\264\025?<1L/\275\231\020G=\rM\275\274\304\033N\275\215\235\257<\325\316\317:\365-U\275\177Y\203<\3247#\275\225\366 \273\006\3028\275\027\006\224\274\222s\205<\314\312\266\273\354r>=\232\177\017=\270t\000\274.\343v<P\216W\273\336\366\257\274f)c\274\253\025\325\274\"\261\004\271\007\240\332\273\201\244\001\275\324\005)=\336\3358\275\273\364B;\215\245\333<\005\010:\274\350_\243<q\3119\275\237\250&<M\346\265\274\331\247p\274\372:\271\274C\021f<\364]\256<\200dC=\241\376\264\2747\212\014\274\202f\004=\\\257\334<:C\320\274\335J\345<\374\2350=3\001\013=\301tG\275\021\340`:\203E\223\273\320i\335<\373p=<Z\213D=\021\216q<\263<\314<\346:\243\274.3{\273\016\3625\274\016\035\006<;\"_\274z\020\037\275\310\325\335\273J\016\312\274\250\346P\274\177\351\007\275v/\210\274I\037\003=\023\353\356<E\371\222\273c\246\371\274\342\324:\275\235-\017\274K=\361<\206(\277<\013\2176=\010\350i\274\220\363\014<\002\332\363<\255g\252<%=\343<\0032\215<P \260<\0265\036=]<\"<\330P\017=yd%=\314\2655\275\304B\030=>\327s<#\";\275ui\340\274o\201*\275j\302(=\311.\022\275J\273\t;(\000\364\274C\251,\274\272S\036=\216\265\211<\357q\245<h\344\315\274B`\234\274I\007\023=\033\026\274<{\0023\274a\235G\275^+\365\273\261X\267\274\205\032T=rK\351\274\022\001\305\274:\0138\275C\363\232<\333\274\254<\360\233\300<\312jh9\'_\274\274*y\005=}\231?=\302V\340<\235\204:\275# \263\274tyH\274B\363\245<\273\241y<\005i\247<Y\212\006=\265m%=*y7\275\212\023 \275d\356D=\254\031\027=o\365U;\203\204\214<\272\005\271<o\250R=I)\364\274L\001\033\275\340M&=\250Y6=\261\020-=\372\027\306<\241\344,=\202\242H=C\254\272\274/r\t=w\217\214\274\273\356\257\274\211\330\r=\223x\024=)\360\002<\010\276\021;c\027\254\273\261d\235\274\261W\037\275Rh\031\275z`.\275\271(5\275\232\372\007\275e\236-<w\'J=[\262r\274\323QB\273\305\360O=\234\313\203\274\"\tU=\271\336\221;q\321\003\275vA\277\271\234\210\207\274\356\333R\275\263\227\263<\243\360G\275\273G9\275\312Z-<2\371\222<D\375\220<\320`M\272`Q\016\275\245h\027=C\337$=e\336\361<7\014R;\035\315{<\002\340H\274\022\207\301\273\0165I\275\275\024\302\274\2121\371<\2437\022=\237\177Z<\002\215L\275\250\033\333\274\370\234\347;\240yF==\306\257\274\342h-\275B\266<\274K\002\325\274e$\270\271\002\277#\274\212g\005<\305\330\245<\206\221\022\275\202\217\206\271\303\014\327<\034\223\226\274\364yB\275\333\354\356\274g\307\r=\334\301I\275\345\231!=\201\230\317\274\342\355\252\274\226\253\023=\333W\255<\000-\312;\217\262\241\274Dw/=\304l\372\274\212GW=\375\322\026\275\027\370\261<\202)-\275(N7\275X\341\034\275\351\262q\274/\2206=JM\016\275\020\323\357\274\226QE\2759\303\025=p\004`\274\244\205\246<\336P\362;?\217+=\370:9\275\261\214K\275\326\003\342\274\212RN\275\311/\003=\307\0346\273>\003X=\317G\267<\263\204\004\275$\323\222\272\033\337\364\274\3721\334\272c\251\211<|#\202\273\214h\r=c,\222<\322f\035\275v.\311<\324\336\270\274yvL=l\271\n\273J\377\346\274\000_\002<*X\344\273x\361\234<\251&B:\243o\026\275\221\\\372\274C\224\300\274\321\213\364\271K2\002\271\203!\035;$\021\2149\371\306Q\275\257/\347;x\300 =`\251N\275\264\206.<\003)<\275^\034\346\274\315\261\320\274\356=\271<\333+6=2\254=;\304\245\231<\r\221\'\275S%\030\275p\356\251<|\027\024<$J\277<\023\345\217<\267\375\023=%\334\372<\316\214B=\262=\262\274\026G\006=m\013\345;\3413\003=\354=\355\273\227ep<\026WP\275C\214E\275\005*W\275.\254\202<#\2459\272\177\002\220\274\340\260\021=!\367\321\274\204\240 \275\356}\021=hU<\275\312\013\352<\027\203F\275\006\204!=\030=\212<G\311-\275\037J\017=\350\t4\273\037\002?=\021\252\276\274F\372\350\274\276\227,=\206 h\274\377J=\275\205\013\254\274\367\025<\275\342\321\301\274\026*W:\005\336>\275\314\314\020\275\3652\007=>\005\254;s\3330=\363\030\365\274`\322\033\275Q\231+\275a6\276\274qDR=\257\3118=yb(\275h;9=\246\274\004\275|\320S\275\235\\/=|Z\347\274\201\005\014=\235f|\274Z&\200<3\\V\275\027\361A<\270$)\275\231 \305<kG\022\275\016\254\230;\0215/\274\253Y\035<\361^\307;]~\r=\234\257\372:Q\2570\275\256\234w\272\r\321\331;\244\277\320\274\200\376\255;\26742=\020\370_\273b-A\275I/\324<TR\252\273\204\246\376\274\232\272\000=~D\213\274\345\252\373<\277\207\372\274}\236\025=\341f\275;\003\030\n;\350\026\006=p|\007\275\260\310Q\275S\033\256\274\260\362\260<\204GA\275\270H\205<\313\371\302<R;5\275V\302\262<\335\362\206\273\357\256\010\275\035\250 \275\256\237\031\275\037\374\305\274<\375\014<>jS\275\355\264\341\274\345F\023=\306\230A=\300)\013=\006z6<$\334R\275By7=\3355\342\274f\251\227\273\306\203P=\352G$=\360eO\275C\376!<\r\260\001<$oL\275\341\037\365\274\377\2712\275\306\311\006=\252k\211<?\336\207<\030(B\275\236\272R\275\213\301\216\274\210`)=G[\232\274o\310+\275\363\346\256<\032\322\264\274\326\320G=\342\244W\275\244x+\274\242\223\377\274\256\364\035=\357\200==[\030W=\3356\374<\035\024_<O\241\346\273\033\017N=\321U\001\275\212\303(=\3609\035=-\317O=\227\372T\275A\205\026\275\267L\241<\316x\271\274\267\027\320<\311\307b<\333K\314<Fo\321<\346H\232\274\373\200^<\240\027.=eR\223\273\014E\031\274\324\245\033=\3030M\275\214\010J=\250\262^<\255\335\020=\265\340\311\274\271\374\216\274be\344<\004@V=\214\337\002\274\272\277\312\273\265\217_\273\234I*=\017y\221\274\277\013k\274~7\232\273\\>\204<\211\020 =\\\323\037=98\331:&!\344\274\333$=\274\236\002\245\274\211M\263\273\227\352V=\335\211\255;\300va\274\273\3267=\010FW\275;*\320<\303\253\216<r*4=\262\003T=|\016/\275c\010;\275\370]\273\274@n\'\275D\025W=\260\230\202\273\004\2509\275\211\366\272;$\376\346<Ed\"\2756<\230\272\344\351\231;\020\226\014\274\314E\301\274K\250\013\274\351@;=u\224\020<\010*C\274\007;\253\274\032\303\312<\355\335\211<\240\371\240;\'\306(\275\354R\225\274\267\214\356\274o\026\351<\347\225O;\034\240\030\274\264A\320<\304\367\034\275\002\003N\274H\3575\275GO\221\274\321-\231\273\203\036\310<T\255\353<4\270\n<CJN\275\305Xh\274\001\303B\275\rq\027=\203\\\216<\277+\257<%y\323\274G\306\027<\237\350\344\2723\003\325< \375\251<\362\235B=Q\260\263<V\001\026\273\204\373\302\274\357o\000=\354\304B\275\356]\032=\233\214\3239)\233\273<g1d<\025\2433;\"\306\007\274\207\224:\275\0012\204<?\3616=\022\301\367\273\333\r6\275\226\034\001=\017\010\256\274\317\036\254\274\021\240-<\'v><\300\255\023\275\351\2455\274L\016$=\236!8=\247|\323\273\037\360\001\275\231w8\275\350:\276\273\315vB\2752\271n;U\320R\275\265\2061=\340A,=\277jF\275\341\001\273<\337\260W\275\322\036N\275\273g\264\274\340s\272\274\200[\253<\"<\232\274n=\376;\337UI<\346e\331\274&\210/=\254\326c<Q\223\364\274\335\324\007=\215\370\211\274%e<=\264c\005\275\321_\"<\027\2538\275\025\376\035=\005\261Q<\200\307\215<\373=\343<\234\024\352<\263$4\273\342\177S\2738\344\250\274T\033/\275\255,\030=*\336\300\274\361\300K\275\367\302\313\274\375\3543\275t\005\215\274*+g\274\217D8=\317\007&\275\204\013E=p#1\275\272\004|<lK\243<\325\361\251\274\222\016A;\366\247L\275#\211\262\273\220\002\"\275\013\247\364\274\n\241\031\275\267\030/=\276\267\327\274\273\030Y\274\025\310\016\275Po,\273[:\364\2724\213G\275`\371e\274\317?q\274\200y\014<\217l\253\274\016\034\234\274\307\372B\274F\364\253\274l\254N=!\211==O\205\024=~\'\300<au]<`\003\001=:\277\034=\254\250\260<fQT=\202)=<\330\221\254<\032\020Q\275\334\267\020=GS\246<%\025\023=\217\216\216<\347f\010\274\034\230\250<\205\027V<i\021\347<\270\032R\274\016\266\372\2730\014\227<\254*O\275\0200+\274\266x/=\205\274\230\272\374 \032\273\262\036\247\273#\350x\274\325\332\253;|K\037\275b\333==\224\027\301<\177\201\020\275<\225\236;\226\271L\275\344\373\246:\372G\367<\010\315\230\273\347\346\241\274\200\230\026=\361>\013\275\001a$=7\243\345<\275+\314<\001\030/<6*\330\274\351\311<=\203\215\321\274b{8\275\002YM\275*\374\371:\235g\365<\311\304\014\274\327\277\304<\247L\260<\206\251B=\222\263,\274/p)=\203\315\310\273L\335\215\274/[\n\275LV\006;\014<\251;\002\243\233;\013\371I=\235O\254\274\325\260\017=\372\332S=\206\301B\275\256\222\203\274\357\317\n=\212\016\301<\234\306L<\320\202<=Ls\373<;%\n\273R 9=\252\214\201\274f\014\000<o\232]\274\371W\030=;\001\363\274[k\310\274r\216\371<L\312\236<\003\331\271\274\342?)\274siY\274)\352n<?o<\274Th\372<M*\003=\222k@=\314x\215<\254\214\242;WfQ\275sA\003=\364\354\205\274v\221\367<\250\271c<\312\255==\334\330-=[\321\220;70\235\273\232g\036=\250\377\243\274\204\007\007=\0075\346\274\316\364\330\273\034!7= 5*<:\003P=\255\241\322\273\274\202\300\274\257\2370\275\033\2054\275X\342s:\222\307@=\360\360\256\274\264A\035=!xV=\351\232\323<y\024A<\244m\261\274\231\216Q\275\027\325\004=\221SU\274`\345\036<\232\026\326<|\350\323\274l\324x<\0334\376<\024\241S=U\376x<\222n\273\274\207\323)\275v\\\034\275\322\330\335\274\2121O;\313C\225;\217&\260\274\211\374\363<tC\305:\254\374\261;\036\024\355;o8\021\274\265\302}\274\245\001$=1+#<\305\\Q\275\316\335\200<\315\311\361<\335WW\275{\200\0218\3275\267;a\235G=\023\n\t\275\340\035\274<\316\226\337<5X\022\275\326\374\304<\210\373#<\255\265M\275i\227\352<s\257;=F!\027\275S\375M=\270\327\266\274\276E+\275\032\362a\274\\pX\275\200\200\262\274\246\270D\275\317d\'=\35416;E\022\302\274\205\200\262\274xv\336;\201\251\333<\214\260\365\274\370\256\374\274\365\320\001=\262?\002=\315C\032\275\013:N\275\261iQ=\351\037F\275\374I4\275^\212!<\341\223\010\275\315\301\r=\312L\330<\236\3627\275\214#\312\272d\010#=}m\217;\201n}<\'>\t\275:z\326<\311\023t<r/t;R\265\236<k\003!\275\010\241]<\365N\371<\013\356I=>S\301<^5\026\275\343\346L=\035M\320<\'\342\r\275\222{]<\267\272W=d7\030=\360o\027\275e\262\310\274\322\340\235\274BRQ:\315g\177<\352\245\020=N.\236;\t\333\256\274\214\235\322<\305R*\274\312\303\027<|\203-=6^X=:;$\275\351\346\235\274\327h}\273Z\273\254<5\264\363\273Ot\244\274\262>\262<\024\021;<\013g\003=k-\235<\2655\243<)<Q<\240!+\275\314\177H=\266m <t\021?<\\\233V\274\236\302.<\201\225\225\274\033P>\275m\227\037\275\205f\213;\211\333\347<\215\211\027\275=\254\234\2749#B\275:\001I=\340\222\022<\341\257\226\274\334\227\315<|O\r=F\366\364<vm\014\274\332\311\322<\224R2\275\332\367V=\354\"\324<2[8\274\335u\322<\177\307\317\274N\312\000=\031\031Q=\376\312\307<TjW\275\267\225\034=s\r\265\273T\365\370\274\255U\370<\377\325!=\022\233\217<,:\027\275\341\331\347<G\356\275\274\177p\234\273J\207\023<W;\002<\214\202M=Ve-=\314L\247<\237\025\210\274tD\363\274\376z\274<\"\214\235\273\210\343\234:\356l\257<\260\004\036=&G\301\274\237\303\032\275 *\331<Q\376\347\274\351\256z:\347\313t\274\r\321\212;\252\263\216;j\312\310<\223\300\010\274J\013\037\2748\3776\275\022\247C=4\352\005=C\226\262<\271)\241\274\014\023\376\274\245vu<\334\'\244\274\264\261?<\340\tU\275\032\265\033=\232\200\031=z\354\341\274\203]\327<\226q\251<Fs\330\273\260.=<\354ye<[\367V=\004\344!\275\376\r\"=\020\006\355<\373-Q\275\030\340#=J\245\367\274\214\325F=J\023L=\357RE<\006\177;\275\005v\273\271\2440{<%n\004=\020\tH=\2431\215;\333\320)<\251,<\275\363e\024=\210\225H\275\007\341\241\274\347\227\363<\242\370r\274Q\261\376<M\244F=\032\334\n=\301wt;u=\365<\205\306H=\r_\004\275\353a\2249\216\244\260\274\270\214-\275\0329F\275\275qT=\306\320/=\357\n\022\275\003\036\252;{\003\013\275\220#\302<X\367\001=\347\2621\275\354:\026<&\257\336<\007)\"=\313f\334:\350uq<q\255\244\274F\270!=\3466i\272T\270\370\274~\250\016\275\237%\320<$\275\006\275\260t\355\273^\245K\275\331\3243<\255,\327\272\320C\332\272\003[L=]\225\347\274vY\271;\362\302\026=\372~\221<z\331\005=*\223p<\37458=\322/\221<\375p\001=Y4?=\330^K<]\267\024\275\234\304\022\274\005c\361<\177\2234\275\017L\315\274 \207\030\274Y\246\334<\262\213\274;\337V6\275\245n\326<1\214o\274\344\275\273<<4-\275\366h.\2723\241\272<\264\216\224\274O\006\322:\003Sd\274\020\303\340\274e\244\341\274\005\004\'\274/\346z\274\\\364\306\274\226h\240<Z#\350\274\364\376V\275\253\244b<\262i`<\316\':=\236M\024=\001\253\310\274\003N><\000\366\212\274\252\323\031\275wC\361\272L\332\000\275\027\0377\274\177\362U\2756=\216</\303\005=\306\237\353<\353\270\233\273\327\244\207\274C\314\333;#\252\340\274\032b\014\275\27477=qo$\272\325\021_\273\344\357(\275a\375\003\275\254F =\2409\234<\257_d\274\'\356\001=\023\3160\275\222W\236<\276\341\312\274&W\025=n\342#=\205\302\021\273,\026\354\274\216\2006\275(H\300<\361\343*\275\203&\245\274\234\247<\275A\331\323<\3071U=\244\372\323<\307\277\007<\273\211\005=^\231i<\375\037\r=\356\334\277\274A\370\274<\237\2518\275_d\277\274\260\217\334<`nW=8\300\356<F\021B=\022\324\367\274I\320J=<{\230<a\177\035\275\265T\025\274-L\246\274\355\023B\275\372\302\035<\354yB\275\312\305\377\274\353EM\274\225/b\274\034\216`<l\300h;\027\214\"=\321_#\275\315m\377\274\206i\353\274\361\227\244;SI\035=D`\006\275\271\"\016=\377\335\215\274\3019\034=Y\250\217\274^\327s\274_\004\001\275\250\366==\265=\337<4\370\034=\026\376\253\274\262\025\227\274T\276=\275\250,!;\200i5\275%G5\275\210\002\323;\237x\237\274(\371\016\275\227\300\337<\007\275\356<\327\270\216\274\255\205J=\363\225\266\274;\274\030=|\024\005<\2678\377<=\276\030\275\363\2755\274\227\356\252\274?\002\232\274\223\330`\274(#\234\273\274\032B\275\033\202\306;,m\317<o\372\312<\217\2716=@\304\'\274 FJ\275\330g\n\274\2304\255<lHs\274H9K\275\225\213e\274\223\247\377</\355\'\275\347\304\"=:\343\226\274\267\340(=\236\367\341<\370\033\034\274N=)=\245_}:\306LW\2755/\243<@.\013\275\374o\312<j\244e<\\[\307\274*\312\342\274LD*=\304\332\000\2745\377\035\275G\377J\275\2042\035<[B\032<\310\231\241\274\222\245\024=$\':=\326/:=\346\217*=S\215\221<\342X\376;\332\247\017\275\222\017\270\2740\231\331\274i\374\242;t\001V\275g$\n=g\2574\275M\370P\274\242\360\337<\365\257\250<\200\235\007\275\265xR\275\301\n=\275\333\377\344<$j\266\271\032o\017\275\314\030Q=l\356\003;\034k<\275\264\346\016=\250\005\302\273XJ\203\273|\2311\275?\276&\274\001\231{\273\355\364O=\336S\210<\202 M=\"|\225\274/\341Y\274g\222\374\273fr)=\010=5\275S\2455\275\324;\210<#I\r\274V\243<=>\220\001\274jk\377\274\365\300\267;\206b\027;I\257\361\274\326\372\222\274\021;0=\'IC\275\337\004|\274 $\325<8\322\345\274\214\343C\275n\300+\275$H!=\207\251\227;\266Cw\272p\214\236<\255)\3139\34538=\273]\032<R\313\003\275]\n\027\273\344\364\036<\365\217\317<)\335\277<I\304\'=\254\2053:`r\227<1\236I=\303\266\273\274\316\251%;\350\247\322\274\256>\031\275h$\327\270F\347\370\274\316_\273<\271\372A=\211\027B\275T~$=bX\r\2735\2153\275P\205\"<\247h\264\274\266\3537\275\214\323\030\275\004SE<\352w6\275N,E:\311\3000\272\211\023\022=|\312\007\275\327\252\316;\252/_\274A7T\275\022?\t;s\267L\274\020|d<\352\3232=\274\332\243<\360\332\003\275\246\264T\275\314\254\207<p>e;\r\245(\275\212sR=\261_\024\272\'\376D=!o\261\2728\317\233\274N\006\025=Zd\010=\301N\354\271Q\021\273<\333\022&=\270\037N=LR!\274\0340\'\275\204wW\275\374\3115\275\206\307%\274+\337F\275\314|\026\273\355\305\003\275\356sE\275n\023N\274MT\234<\360q\301<K\325B\275lj\335\274`\261G=\360\232\014=\333\017\004\275m\360\355:\213,\200\274\006ID<\255?P=\261\320\316\274\273\013v\273?\254%=:\266\246<h\004\372<\3666+=\270\266\214\274\224\307\256<\244<\361\274\261\351\025=9>\277\274u\017T<s\\0=\"\357C\275\355O\211\274I\002\317\273\026\020B\275\217\336\206\274a\214\326<\273vA\275\253)<\275\335\235\024\274\264ZM=\023\035\r=\007\355\231;\237\2637\275\226\244T<\270\317\227<\213\0130\275k\257g\274Z\256\337<$HP\275\021p&=W\253T=\252\035\303<@\332\205<|\037=\275\234A\336<\372\366\266<\263c\010<\336\373E\274\2477j\273\024\370\341<P\346\316\274\254)t\273\254\307\213<03\235;\235\354J\273)\242\276\274\324/\036\275\360\r\274<\241\'\330\273\305\202#\274\201\020\010\275\267\224Z\274\\\321\231;\321\002`<\223[\322<q\203\000\275(\250T<\177\n\023\274\022\256m;[^\363;\347\365M=\316F\035=\022CM\275R\275G\275\226\231\001\275_\2330=\0378\r=Sr\212\273Y\310\300<\302\312\021\275\3636\312<=R\003\275b\242\204\274H\314\307\273lSX\275\034\3400\275\262\315a<\346\221\335\272\001\263\354<\255\213\312;-g\206\2741\362\250<L\367\354\274t\021\221<@`W\275\2429\232\274\021\014\213<\203\t)<$\220\037<\364l\200\274\232\275\300\274hS\214\274\324\031\361<-|\030\275(\305\027\273\036\334\324<\250\313\255\271\251y?=\275P\005=\0161\347<\t\343\352\274\220\211\n\274E\334\236\272\214\n*=\357a\232\274rVA\275\320\252\r=\020\320\250\273\335\274\315\274m\242\002\275\334>L\275F\222\374\274\353\270 =\177Y\303<\032X1\275\367\333\354\274\310\'z<F\365\024\2750ua\274\375\223&\275\203\206\317\274{R\024=\336\2143\275\210w\277\274?f\302\274e[\271\274;\234\004=K\231\337;\310\0212\275\250(G=\305\216.=\000\017\031=\210^1\275g\362\240\274x\351\242<M\226*=>\2152\274\t\373\371\274[z\221<;/\234\273\0223;\275\253\220\271<S!J=*\267D=\032\204\302<\350\327\211\274\362\340L<\256)\365<?\232i<\016\220j<e\'\021=\215Os<_;\006\2756\321V\275y\346Y<\347A\017\274\233X\003=\315\265\277<rG\'=\230=\273\274q\014A\2755F\234\274\347\203U;O\006a<\016\3057\274\222:\247\274\321\261X\274\213\235\027=\2217\024\275\215\t\326\2746\'A<\210\3469=]\031\016\274\366\335R=(\201\024=7m\247\274fr\t=\035\323@=&\025{\273(\266\245<\376;#=\305\344?\275\213\325\327;\357\031F=k\225G\275\303\266\374\274{U5\275\347\311\014=\375V\256\273\273\364\032\275\023@V=\216f\347\274|\025\224<\227\254)\275\324K\022\274\322\370*\275\362\327 \275fcP\275u\274\321\274\257\237\001\275/\0304=w\377I=\263((=C\032(\274\267\210Y;^{<\275$bi\274\331\031\307\274\200\037L\274\210G\304\274\234\246\253\274\300\033o\272\233;\340\273\t\004a\274m\002\2609l\367\273\274\301aE=\221<8=\221;\243\274\375u\345<T\3651<\033i\032=2\271\013=\000\321\374;>\354\314\273+s\353\274\356\252\346\274\363\252\007=\036\210\233;\211\204\020\274\013>\235\274p\360\001=\232\270\361<-N{\273\005\321~<\222\264\375<\211e\226<\335-\'<d?-\274U\263\003=\375\030\r\275|\036\001=\272\206}<\020\232j<\025\224\202\274|\357\356<\266\3277\275@U\014=\305\347\376\274a\206\213<\231^\024\275\361%$\275\332;\001=\020\314\326\274\366N@\274\357\2026\275\023\rU\275h\007\\\274m\233\024=f\241\375\273\212\2636;|Py<\313\364)\275\031\276\232<\251|\021=3\014\306;\027\363\232\273{JC=\r\324\321:I4S=\214\344\351<\321g\027\275\274\370\236<\036\323A=d\242\002\274\032\212\363\274\333\302\374\273v<2=\0332\206\273$\006\313\274M\263\351\274X\212\301\274\"j\342<\240&\035\275\200\037c<\225\2415=\336\333a<8<.<\362\351<=\323\2170=\203\266!\275\213\202\030<;\321\023=J\330\253\274\346\006\360\274],\022=a\334\007=\357\321\323<\314!%=Ir\223\274^_\034\275\314\325\031<\023\'\233\274N`\'=\34755=X\035\276\274\270\201\031=.\205\220\274`\315\032=t\207\020\275b\242\371<\256\255\004<\352\307\375\274\003\375f<\001\301\275<\233\206\263<\271BQ\275\304\253\243\274O\370\330<85\'<J\030H\275\330a\r=\314\230&\275g >=\241N\224\274\032$\007\275\242\032-=`|\303<\225\3435\275\260#\'\275\353\255\230\274i\270\377<\265E\356\274\264\352\004<\006\367\t=\374\262\244<\026u\373<\022\2654\2727a\252\2723\234\030=\307\264\212\274\362A\n<\"\241\362\273aq?\275\316Y\314<\250-G<\337\222B\275\204\344\006=q_\304\273\247\330\277<\001\324U\274ox\212;\262\024\352<\364dJ<\237Z\243\273y\t\014\275\240\340\223;\365}E\275\377A\235<\312\213\t=\332\275]\274\3308O\275\247\364e<:73=\356\024\216\274\227\371~\272<\344y\274l\352\001=i\021F\274\223X9\275#:\032\274\330o\'=%\233\364<^\317N=s\236/\275\341\030\275\274\263\313-=(\'\312<\341\204\r<\352\253j\274WVK=S\256\023=\363e@\275y\010\241<R1\007\275V\010.\275\025L\341\271fK\253<T\270#\275\017\374\2118\313g\333\273\004/t\274\231\025\213\274\245~J\275\270.\350;:\237O\275\314R\324;\002N\300\274\214\002\261\274\364,\336<\200c\254\274e\361\324\274\001|y<\322\300z<\330\346\027\275\002\275\250;\331\336O\275\354\024\010=\243\330\021\275\325\302\304<Vf\222\274[*=\275\245!\370\274\035+\270<\036\0276\275\243U*\275\337AU\275\222h,=\215\205\340<\"\\\231\274\212\367\247\274\250E+<\031]\327\273\246RO=6\244\2006\0365\004\275\037\343\232\274\002X\330<v\306\023=b\373B\274Q{V\275@\205\2449\264\010\024\275\370\032G\2750\267i<z+\360\273\316Q\244\274Q\244I\275\026\276C=6!A=\230\306Q\274\016\3106=\231\370\035\274\221F\336<\243\030+<\211\321R=\300\201\030\275\334\255,\275\025\313\351;\312\2734\275\004\016\025=<j\234\274\377\255\013\275\347\177%<\\\264\177<\353\007-=\364\203\347\274\030p\000=\035\250/<\346gw<\276\260\235\274NX\245<\032y\206\274\025}k<g\r\210;b\366\026<\203\350\000=\325\312\013\275\254\302\330<\020Cg<\001a\347;\313\323\002\275\027!\307\274)\211*=*%\374:WR\347;\3620\000\275Z\332%=r}\375<\323?\277<\310\3171\275FqU<\301\211\027=\253\024W\274\221\312@\275\013\332;=\221\361\030=\321\243(<\"3\267;\205Q\037\275{\316(=\363\\\037\275\273\306\333\274q\233\234:\247\231%\274\\\254];\365\344<=\371\006W:o\315\214\274\346&\225<x\204\200<u\017o\274\244\215\215<\274\221\360\274\021\355?=\200\n$=\365\300!=\377.W=\273\250}<\3108&\275\032!\353<\270\004M=\244*k\274>=E=\000\005\007=\273k\210<\200K\325\271\321](\273>\327I=\374\227\327<\257\001\234<\201\345?<\366#\337\274\252\032\235<\333V-=4\316B;z@\212<7c\002\275$\231L\275e%1\275\2233\321\274\216\263\361\274\377\205\336\274\224Z\322<B+Y<\373V\024\2757Zg;`\342/=\016\213*\275|=&\275E\223\363<\300\213(=f\016H=\231vb;\201G\005\275\302\335\010\274\331\nX=\237\366K<\3154\307\273\023\243\037\275nk\270\272\216=\005=\342j\354<\332\256\030\274\247\303Q<Y\271\244\274N\366\032<\335\036R\275W\177\363\274;\366\200\274k\274\331<e\222\003\275gv\010<\324-\371<\225?\342\274\344\351\025<\356\016\003=\362hE\274\027\322@<\031\206V=\031F\023\275\271\r\034\275X\302\201<\204p\221\273)]\n\275n\016\313\274\020]\331\274\347\237 \275T\220\365<\202Y\347\274\242\370?\275o\226J:}$\214<H[\313<F\3276=^\313j\273\305^\000=W\203\356;\215&B<\203\245\262\273\355\207\256\274H5\375\274OX\025=)3R\275d\272S\275\307\371\236<\210g\235<\277\355\203\273\262=F\275\035N@<\026\306\247\274\002\023\274<\214>\267<\274\343\271<\202vr<\371g\367<\312`\005\273\006\303O\275b\224S\275E\265\241<\372\210\002=\010\355\025=\376\241\004<R\"\244\273\340\276\037=R\0356\274hw)\273\222\257\210\274\244\251\361<\256\211\323\274=aI=y\363\200\273\307E\251<\243]\246;Ho\223\270\300\370E\275\363\3149\275DlZ\274\341FW\275\264\177\r=o\334\332\274l\212V<aQa\272\236\302\373\274\305\307\311\272m\0161=\264\344\302\273\305\305\240:#\245\304\274\245\342\036=\004\260\245<\021c\243\274|\217\026\274\366\377D<3\353\362\2744K\205<Z\376 =3(&=O\212\311\274\335\303_;\227Rl\273Gu\206;\260\337\036=\221\370S=Y?:\274\322\313\030\274\304\263\235\274\367\311\002=\003\341\251<ta\302\274\323N\362<\324\314\301<M-\014=\352}\316<\365e\351<y\320&=R\372\362<=l\307\274\365\241%=\034\303>=\032A\311<\013p\371<;\236U\274\216\305\027\274\243\313}:*?&\275Q=0<{6;\275\355:+\275\201\014%=#L\204\274\377\r\206<\373\350\322;\035\3663<\324\370q\274N\275\310\273\261+<\275\r\221.\274\273X\036\275u\314\315\274\371$\250<X\333G\275\217\350\270\274\313\230#=E\323\264\274\314>L=De`\272cql<\273j\351\2745\211\320;\204\365\013=\202\320F=2\326\n=\352\021\023=\201X\246\274\305\363\250\274\005\224/<$\203\353\2721\304F\273;\333p;B\311U\275\347\024\020\273\315\225\030=\004.\320\274e\215\352<\331\\\206<\0006\352<\313lO\275\177@\376\274\212\034\346<\342_\024=\337\224\025\275o*\225\274\010\244E\27579C=\204@\023\274\346\203\214\274ZyP\275;\345\321;\004\242\203<\226]\017\275\010\007L=\352~\262<2t \274\312$\204\274\305\254\206\274\220$\377\272\304\301\231\274\303\206\221\273\371\303\004\275i\340]\274\223_\342\272\252\310\007\2759g\013< d\033\275\nR~\274\271<<\274\364\033\240\273\254\210\032\275\017\250\317<\013\004;\275\024)1\275\207\304\245<\341Yt<\250|H\275|\222I=]\220\303\274\350\323`\274\361UC\274[\212\t<\\\377\215:\351\334N\274~\351\217:\304\335\324\274_\321:\275\341C,<e\352\274\274\336\352\311\274>\271$\275\323P\3409\254\221J\275c\307w\274\224+\004\274\303v\366\274\366\344\216\274\257\\C<\205\037!=y\242w\274\\\361\213\274\264,\351\274\032\365k;G.\004<\243\361\373;7\026\'\275\3756*\275V\306\"=T]\274;\310}\336<\240H\331\274\243\274<=t`\027\275\372!\007<\273j\006\275\211\036\016\275\243\211,\273\373\245\243:\267\233\245<\313<%=\257;o\274\320\351\030=\0373\340\273\037\247\230;*q-\275\003\2006=X\017\'=\266\255\'=s\276\317\274\253\372\003\274)\236\203;\335\223\236<\254\315 =\313\354P<^\rl<\232\352N<\247\354\371\273\'\326\215<\026\275\363\273\302\211O\275 \254\235<\217\261\345<\346\202\256;\325\351\n=\037\201M=\3522\350\274\262t\036\275m>7\275\305\244\360<\361\244\343:\212HM=\335\223U\273{\260 \275\200\'b\274\005\007\030\275\007w\245\274\353\212M\273<{\023;r\231U=Yv\274\274\247\360\371;\341uz\274\350\300s:z\0017\275\377\373?\274\2154!=\031\231\256<;*\206;~\352y<_\004T\275\245e\023=\372\237\306;\362&\347<\324\364F\275\001\331M\273\236\250\031=\006\254\235<\014\266W=e;\327;\345\245r;\331\217\023=\201\2353\275\305?\354;\350\267I\274\313\346\020=\312\003\346;c\251\312<\253\267\302</V\032\275\242N\212<\"d\177<\210-\333\274\016\360\036=(\240\343\274\207i\027=\037?1\275tJ\204\274\316hv\273[\343B\275\024u\266\274\270\001\025\275\005\207\006<\335A`<\257IJ\274\020\276\224<\372v0=\347\234\363<Z;B\275V\3301=\356\216)=\366`\346\274-a$\275\311\235\261\274\263\211\000<\210$\003\275\204\315\311\273\206\352\030<O\254\036\274X\224\331\274e\204\347<\300\'#=\334\325%\274d\006\030\2755\352]\273\276\331\352<\352@A\272\227#1\275\203\301\254;\233\2555\274M\245\'=\t\276H=\233\251\270\274\332\213\001\275\254\335\212\273\016\2459=\231\213\215;\006\344P=\236\266\344<]\216J=%\267\016=\241\230-\275\356\0130\275\357\320\010\275@\245\271;W\304=\275b2\222<\323\354\035\275^\002};^<M=l\232\250\274\274\"\265\274<3\234\271\216\017\355<\267\263I=\240\022*=\022\3136=H\273J\275(\024\325\274\032\335\255\274gS\001\275\024\315\305<\270\002T=5o\206<\003\225\343\273#_\020<\220\201\026\2748\016\261\274\345\276\225\274\354*\002\274R\301\361;\244\317\251<\320\016\350\274\316\330X\274Z\031\257\2745\013\240\274\315O\255\274\323\214\354;\263\310\374\2744\300\360\274u\233P\2755t\314\274F\335T\275r\327~<\202\331\304\274\010\272 =\337M\325;al\026=n\330\017\275\006\345V\275\316r5\275`\227\367<\207B+\275\3003B\275\253\t\020=\r\216\235\274\317\316N=\355\254\237\274\002\335N\275)9\036=:\261\247<\302\364\356<+iR\274\361$\226\274*EV\274\212.\353\273Wl\245<x\323$\275\351\353\347<~pV\274\2165R=\237\222\277\274\331\355\027\275\247\310U=\316\237\210\274{\324P\275\331\177.=4\3016=e\345Q\275n-*\275\344\346I=\310p\250<bC\325\273\227]\267;U\213\272<\307\345\005=}\036\225<\306\340V\275_\267R\275<3\234\274g\\\327<%\214\370\274\204\316\253<f\334(=\221p;\275C0\322\274\005\2322\275V\264\274\2741\004a\2727\036\030\2750\343\001=\246<\033=\235v\210\274\024\243\215<b\027\252\274\025\353#=\266\002\342<GsC=\340\242\350\2748v\t\275\236|\252;\355\\\304\274\325\230\200<E\3451\275\025f\343\274\267~\274\273c6^<\245\2225=\234f\321\274>\241\217;TQ\330\273\006\324\312\27291\230;\317,\021\275\365g\361<R[\301\274\257D.=#O\216<\261E\207\274u\314>=2|!;\331\324\274<\261\007C=S\310\340\273\255\371\n\275\227\001\301\274\253\0220=\270\214:\275y\021\230<\305T\245\273\312\251\234\274\357\032\310;\021\223\360\274q\273E\275\023\3474=\006<\310\274h\311O=\261\303\036=T\340.=\301\265\255;\240kW<\177\026\342<0C\266\274\224CD\275\201h\366\273O\371#=\343\212q\274\233\204\004=\r1\247\272p\000z\274P\367a<\356u\336;\321\370\034\275\223\3408\275\350F\320<\\\3710;\276\3650=\321\231a\274\034\317\236<\300:\352\274v\n\224<\370\273\303\274f\314B\275\026\002\016\275\200\223\344<\311\201J\275\222\r\303\274\371\026\277\274H0\275<\323\302&<\315\246\264\274V\215\201;\032Y0\2733n\377;\241\340\374\274\221\202\034=\023X@<d\340\n\275\376\317C=\377\353\275\273\250\3755=\234\3169<_X\365;c)g\274\257m\037=\251\362\344<\273\016\343<\274E/\273\025\025\341\273\205\036\232;N]\267\273\303\0134<\317D\004=\277\346\030\275\271\206\202\274\314\234L\274v\242\267<B\351 =\320\220_8\n\227J\275gkG\27547I=\026\33239\271\245}<S\326\306<^\027\345<.\267\267;B\322\276\274\010\257\002=\303\373\350\274\265*\010=\265\220\351\2741\2479<\271\235\004\275zP\024<=\367H\273\\\033!=\215\222\361\274\320\306R\2754\\M\271\273\302*\275\035B\337\274\212*S\274X\2274\275\253\t\237<\027\246\372\274V\3639==\201>\275g\254W=\237\247T\275U\255\210\2728\371e\274\037\360\277<\007U\006\275:\3771\274\2500\345<g\337\017<2`\306\273\211\210t;\211/3<`~^\274\311\331s\274\333l\351<M\233\036<2\250x\274s^\320<e\321F\275\222\275\026=\013g0\275\265\317\243;u\347\233\274\271\347\000\275\370J.\275z\366\031=\374A\263:\007\314\330\273@\376\233\274\014\2327=\320a1<!\013H\274l\331\002\274\\R5\275&o\037<%\001\020\275\305\303\037=\033n\271\274G\000?\275z\332\002\275\241*/\275\375\211M=\313\240\2529\300\302\266\274{\007\010<\207\227W\275\327\037\275<\325\203\261<\277\377@\275\3219\262<7\346G<%\270T=\232Cr\274\275&\201<U\267\366<\345.\345\274\271\374@=\035\201\021\275J\242Q\275qH\250<\255\000\377<(\275\037=/\233\305<\336\307\360;\306\215\310<\3616R=\250f\036\272sL\316\273n6J\275\374qS\275\317\230/=\306\356\356\274q\321\271<]\342\n;I&6=\376\224\273\273\346\206)\275\231JL=\013c\244\274e\266\317\274\317.\030=yM\341\274B2\\\273.\n\037=\373iQ=\357\227\261<\336\010\036\275\277\315\225<1cI=\241\334\351\2740 O\275\022?\031=\242\340\267<\244\351\026\275\265gB7N\322\010<\354\225\204\272n\355\304\274T/\t=b\236:\275\246_\337<\317]\303\274\263\311\025<6\016\221\272\270.\257\271\002\357\342<\354W\256<\305\207\263\274\335\034Y<|\342\"=\242\227P<\341\'7\274q\260\035\275MB\t\275{\036^<\235I(\274B\367R\275\203S\006=km\034\275\302W\251<\223\336\272\273\354\026=\274#\203V=\337\025\214\274\345\326\032=\023-\037;n\351\3616\013*X\275\213\250;=LR><\364\232\231\274\244\0261\275Za\033\275\000\247\010\274R\033\272\274`\036O=\333n\256\274\305\031\265\273\262\000\372<\272\026+=\260\200\r<\013\215\227\274\330E\035\275\017\222q<\037QY\274E\201,:\"\263\315\274\347\331\020=\335\214\2009k\225\211<]\226C\274W&\254\274I\226F=\254\r\316\274`\036R\273qy\317\274\311Z\270\274X4\356\274J\032\314<K(\3008\224;\t\275$\262\025\275Vx\367<\202\224\022\275!\\K=\252\222\035\274\313\263\344\274F\325\000\274t\n\313<\3639\021=\254\233W<\t\022\325<\354\373\252\274dS\304\274\341\317q\273\336m\024=E\211\311\274B\243\031;#\274#\275\325\366\202<$\245\346\272\333e\315<8k@\275\027\004\376;@\213\356;\263\300}<*2\230;8\277,\275\256c\016==\270\310<z\355+=\177\033\2208\n\023l<\201\365\324;\245\334\266<+@+<\007\246\216\274\030g\016=\227B\2558~}%=\217\323\250\274\236\3074=\261\312\022\274\244*\354\273\363\371,=B\2064;9\324\017<p\214\236<\'\350U\275\2414+\274\340\314V=\007!5\272dv-\273\025\t!\275\031%4=G\363\304<57\250\274\345q\307;j2\'\275\342\370\221\274+\333\264<MR\014=\321\r\234\2749iG=\365\"\225\274\320\206d\274\337=\347\274\251n\352\273}F\300;G\335\016=\276\2218=\034OU\275S\024\021\2740\t\037\275o!\217\273\213K\r=\225\177\352<(\343\232<\325\266\345<#2T\275\375\023T=]\341V\275\216\210\325<\375\2668\275\267Z)\275\300\2004=\022\274*=\225\315J\274\264n\255\274\210\342\357\274\t^\376\271\247g\030<F\265a<x\037H=q\341N\275\370z\341<\004z\212\273\322oD\274s\214(\274\200w!<\305\177}<B\235\017\275y\304\t=/\r\021=]\252\264\274Jq\004=i\033=\275\232\000\007<Rk\002\275\355\236\2519\244G\036=Iw\035\275\300\260\030=6K\035=\326\226\340\273\3057\t\274g\360\343;\344\332\210<\000\243<=;\260\203<\210\320\356\274o\242h\274\220it\273\177\\P\275\223U\354<\017\210u<fh\005=P\372G\274\233\243\227\274\317\337%\275\2775\216<]\262\340\274j\267\036\275\227[b<.\367\372\274\342\365\303\274\302\024\215\274\214\362\322\274\245<\037=;\312\216<br\343<Z,-\275\206\252A<\001\215\376<\355\030\026=y\310\207\274\026J\322<\004\310W=cJE<+\275 =\222\nU<\342\343H\275N\266\361;\252\t\035\275\341*\022=\257u\345\273\227\375\010\273\264\216\316<\2359\224<\3268\013=&\265\036\274\361\202A=\324y\227:\345C\n\275H\355A\2756\327\230\273\313\315\276;\350\225h\274\270\026\031=\2123\231\274\236\030E=\212g\034=ng\177\274M\201%=B\253:\275\026\352\016\273\006\033\337\274\243\322\212\273\334eP=`\201\237<\337\2530\274\274\371d\274\177,\204<\"fm\273\300\231\360\272+Z1;\232\031\230\274\225\211\020<NNT=K\245\247\274-R%=\302\311L=\r\350M\275\205\362\033=U\272\223\274\257\301=\275Hc\337<\273f\021\275\307\350\274\273\275\306J\275\347\353\247\274\035\360G<>\324g\274\225Q\337<\352{\325<\271\374\022<`\227,\274\264k\r\275^\031I\274\254x\006=\261\272-=\221\211\032\275\203\2360\275\227{z<n\373\003=D:\264;\035b,\275J\346\323\274\037\345\234\274\270K9\275\376\210\300\272K\357T\274\337\0370=%\276X<\255\260\260;<\353-\274\032\361\323<)\243\033\274\231B\037<\335x\350\274U\314\363\274\354\223\311;I\353\200<d\020O=0\232\347<*$<\273\3747K<@E\201\274\035\300\027=\366\353\034\274\371\260\024=\373\2466=l`\216\274\177\254\214\274\274\376\037=/\343\262\274~\205\027\274\220\3704=P\215\243\274F\2668<`a\315\274,i\224<L\327\363\274`\352\312<:\367\001<\345\220-<\313\365\026<\327\331W<\241\240$<U\333\004<<~\177<\272\201f:\010\217<=\35726\275\265\030\327\274\304_\275\274\212[\035=0r=\275\354\343\370<O\372Q=\242\313\324<3\327h;-\243\341;{GG\275\305\251\006=\365\245\365\274-3\265\274O\371&\275YJ\2519\266?\253<P.\247\274\244\315,=9\357G;;dE\275\325\005\032\272\027\3528\275 \223\311;\270$O\2751\352\021\274\232\233\037=\254|\022=p\336W<\r\215*\274\231-\020=;Q\016\275\325\024\035=U\227\031\274{2S<\r\222\376\274XE\002\275\230\020S=\311\364\362\273\211\220\256:\336\373\025=l[\267<\356\223\341<\357\221\216<\354\017b\274\221\017\266<\244\327s\274:\n@\275\344\277\023;w\025\n=\325\215l<4cC\275$\320H\275L:\030=\0167(=(\260+\274\370YU<\027\016{<e\252#=+@&= r\021=\240l\010\274\334\002\204\273\322r\372<&hA\275\004y\204\273I)\327;\366D\000\273$$\351\274\275\276\243<\377\3371\2744J\016\275Q^\376\274G\330\351<*\032\211<\033D$=x\305\360<%\215/=d\3555=\234\005F<\251 \216\274\262\233\034\274N\355\016\275C.\273\274/\362};r\333\310\274Hs6=\312\333\020=\220\325@\275:\236(\274p\347\034\275\304l\020=\006xQ=Ym\325\274\340\252\211<\001\367\357<\255\370X<\026\326\t\275p\350L\275\324\022\330\272i#\322\274q Q=\224N\010=\305\222*<\221V\004\275\331k\254\272@\263\222<{3\262\273\222jI\275\275\223\360\274\217\322\034\275\317\261\021=2\335\367\274\315\032M=Q\327T=\205v\024=6AS<\354B\260\274KYI=q\356\237\274c\230\376<B0b\274\310L7\275\275M\005\274\340\2215=\027\026\022\275\371\3335=R*6\275{0\004=Y}\222<\225q\005=[\231\245\274Q\246\031\275\021\317\230\274\r\213p\274u\307B<\010N;;\223e\326<\333,&\2752\237)=\372Q\036\275\230\023Q<K\251y<2\206\303\274h\370\003=\237\363\014\275\214\345\315\274\351\034\002\272|\005J\275\340\340\256\274\347kO\275\024\022\362\273\005\203\001\274v4\273\272\331\003\004\274\374G\001\275\2415H=O\346\r=\345\016\031<bz\326;4\032\024\275\227\345\"=\020c\211;n.\006\275\374\330\010\275\324\337a\274\344\247\003\275\247uN\274\202\310\372<[\322E=\'\227q<\037=s\274\223\030U=\002\344\210<[X\177;\356\220-<q\0344=\246\232 \275j\334B\275\264\034\013=:m\337<Qe\022<:B$\275\004\020R\275\222\255\212<=b\274<+G\215<#\354S=\213\362\271<M\262\212\274\004\tF=\232\330\327<\325D+\275R{\035\275\227=O\274jt\013\275\246J\007=W\201\324<\260g\240;\027l\037\275\356^\307\274\332\212\035=\220D\230\273\020\204?\275H\246$\275:\031u\273\253\253\036;\037\303\342\273 V$\275\221\2315\275\356\'\303<\010\003Z<\252K*\275\345,4=\373\000?\275\325L\034=\005\257\316<p\354\263;\351_4\2753\2571\275.\221\t\274T\374\274\272\035\310\306;\365l\311\273i\216>=v>-<`\017\362<\273\035\201\273F\371C\274%\220\262<\330\233\210<e\274 \270\025#\231<\020\246\301<D\224\003= |\002\275-\003\371\273\256\3523=5\235\343<{\215D\275\365\021T=\301|\020=(=`<\357\226\035\274\014\002D=\263\343\271;\230O\251;?\203\001=O\307K\275|V@\275o\275\212\274(\t\244<\352\373\t=,\324\313\274g \274<\253R\213\274\323Q\206\274\361\264.\275J\332\010\275\366\323\2229\236\356\"=\366\261\032=\220\214I\275\331HF=\362\241\031\273\037\' =\350\377\335<6\022\244\274\310#\000=\030Nr\274J\271\232\274g\361\036:\014\310\202<\000A\031=\264\313\311\274\222\247;\2746\225\265\274\246\264#=\355\271\033\275\030\375d\272\035\364\017\275\022\255A\275#\311\253\274\203\364)\275N\272\004=\000\247\237:q\3352=\0273\346\274\034<1=1\331M=&\375/=\t\317\026\275zZ(\275\013\340Q=\247j\262\274\351\377V=\207$;\275\037\025 \275\030I\266<sF*=-\013\304;|\336\345\274\245\377\244\273g\355\334<.\3442\275\013\261\224\274qY\343\273\372x\232<\277\344P<\365C\007<S\376\246<\241\275\005<\322m*\275Ki\320\274\3526\035\274\203\201\220;\2079B=%_\235\274\'\317D\275\270\317A=>\212\363;\311y\377\274;\321\260\274 \242\245<\333$\036=\254\007v\274.\202\221:\344a\203<\3716[\274\301\005R\275\363\234\206;<\"g<\226\336C\275\033\030*=?P?\275\245p\221\274X\304\325\273\372\225*=]\324\242\271Pk5\274B\310\333\274\013\237*=D\332(=`\233\033=\356\r7<jD\242\274\215\235T:\325pI=a\257\230\267\340\324\200:\253\336\301<\320B;\275\333E\315<U/!=\024\355&<J\360C=\365\021A<R\303\377;\314\355\004\275\203\351\314\274@\365\013\275\233\352\233\2713\202\231\274!B\370\274\361\375\030\275&\315U\275\300\007\364</Z\276\274\365\203\001=K#\252\274\27649=r\333\233<uS:=\254 \265\274\327\2539<\310K\020=Nt\037=\301\342\010\275\325\212(=\205\305\026\275\023o\026\275\313\342\024\275L\t\361\274\346\3330\275\004#\017=~\355\032\275t\266!\275$\027@=O<q\273\310\252\001;KW!=\360\370\252<\234\362\006\274\312J\026=lK\016<\362R!=\253R\2679\303]M=\363\216 \274\324\305\251\274:\031<\275\224\253\034;\245$=<gm\324<\n\220\'\274\355\017K<X\203\243\273\235\232\363\274\317\204\236<\367sU=\375m(<\216\306\020=UG8\275Wj=<\0206L\275\270\036b<F\223==}\343\3258?\363\025=Ai\"=\321!\010=t\013\332;\\M\314\274\331\3567\275\255WK\275\262]Y\274\021+\220<\270\247\033=\260z\354;\366L\031=\002\001\236<\352\373\277\274Y.\031\275&\'\275<H\353\205\274\2230\006\275\351\267\336<\226\222\323<Gp\002=\277\344\007\275/Z\364<\n_\231<\216c-\275\325v\016\274d\177/;$\346D\274\016s\r\274\026x.\275\302\370\371<\222\264\334\274\330K\002<^\244 \273[ /<\301\357&\275\225z\t<p\026,=(\377\261<\2164\350<\334\3162\275|\355-\275gv\010=x\343\031=\344L\207\274a\344\344<o\2639\275Z06\275N\277\037:\232N2\275~J\t\273\341\224\001\275@\277\263\274\014\232D=4\234\003=p\332\310\274^\025Q=Ml4=_\342\016\275*56=!\317\267\273i\227@\274\214\010\000\275\210\2536=\225Yn<\374\200q\2743@\010\275\014l\227<\026\361\336\274f\275U<\020\274(\275\344\273\302\274(\222\343<\246\305\316<\300Sm<\001\316>\275\321\272W\275Pn\"<\001\373*=#\355\370\274\004\371\010=q\235\032<\347\360\213\274K\360\362;\254D\027=RK\024=\320\276\352\274\207\351I\275\251Rf<i\276F\275K\277\310<n;\266\273\331\354K<\230]\030\275\000\2406;\003FR\275\273\223\336<\005\201\346<a\237\260\274^f\014<\014(\270;\333j\031=\033\227\033;J\351\220\274P\027U=\214\217\034=\3462F=G~\304;\2556U=Dh\260\274!E\255\273\000C\306<\032\302B=\200\034\224\274\036\224K<!\243\200;6x\002=\245\316O\274\ny\231\273\203\373\335<\365\177\006=\000_\n\274A\374&\275\221\225\n<D\202\357<b\275\375\2736f,=D\376 \273D\\\026\275\376YR\275(\025\t\275\255\233\326;_B*=-\004\263<\271.%<\352b\313\274(\332\n\275OY\n\275_\214H\274\376~\353\274\274\206\002=\016\2263=a\235H=\357O\333\273gY\216\274\253,A\275\'\310\302\274*\2261\272<\361@\275\344\032C\274\023 \337\274)\361 =\023\274\221<\0165J\275o8\263\272WP\305\274\006\212\237<}\222\236\2735\2631:=\223\035\274\347\2772\275\025\014\232\274\312\372\346\274X\033A= \314\030=\321\277\310<.Z\"\2756\250<\275Q|\311;\211P7\275n:\307<*\241\345<$\004\215<\256\203R\275P\334\006\275&c\224\274\223\022\263<fZ\t\275\004\030\235\274\360\347B\275*-\300\274\346\2225\274\316\334\317<\006\232\312<0\234E\275-\330\n\275Gk\004\275\247\342\317\274_\007D<\332\334\207\273\361\353\221\274\226M>=(\240\002\275u\256\250\274\275)K=\303\"\205<\365\370U\275\237\365o<\020e\211<\350\305\372<\325\352\267\2735\032\377\274\205\023\300\274S(\355\273`~\314\274Q\007\205<\0051~<A\035\263\274S\2317<\244a\023=\022d\3338\371\242\327<[\013\243\271\213\013\005\275\377\221\300<6\200#=\327\204\251\273v\254L=\345\343\223\274yd\367\274/\272\213\274B\245\204<\376fQ=\372\014S\275:]\236<-\314\326<\353\234 \2757>\002=\357\243U=f\273\350\273\310\020#=\205\363<<\021o\352\273\375,p\274\200e\206<\023.\214<@\217\311\274}CP\275\303\253\235\274\211P\r<\350\205$\274\243\372\014\275\365{G\275;\317/\274-<\025=\255\013\311:\275\nD\275j\3060=>\345\344<\321\010\226\274Z\362?\275\360-)\275rok\272\364\256[\274\304\356#\274O\204\275<B\322\347\273>&\334:\022\335\001<c\306\217<4d\370\274\354C\017=\236\021\026\275C\326\270<yU\244\274~\300M=Q\346\271<p\336\310\274b\333o<Q\223]\274V\214\347\274\267\246S\275\022Y\345;C\311\226\274?\301\240\273|\0209<uM\222;\363\022\332\2720\037H\274\342\237\211<\270F\'\275\251\332\031=\r\231\031\275\234\2745<\242\315\002;\300\023\267\274\314;>=A7$=\356)\356\274\ra\305;\257)\362\274&\201\307<=rS=JV$\275\3666*=\243\336\307\273\333\352\n=\277%\007=b\272\021\273\331\347\353<\306gK\275\324\273Z\273\237a\362\274b\230\264\272\n\004\247\274\271\242\032=\304\206\323\274\222i\355\2749;/\275Ro9\274y\'\270;\266\246J\275\271u\246\274@\252\213;;\234\263<\006\377\271<6\360\267\274\204Bt\274\353\232\347\274-2\353\274\t\202\336<\341h\224\274>\263n\274\354\026d;%\333X\274n\323\000\275w\004\304\274\354\272\322\273\377\235\'<b\346\347<S+\344\274\004\353G<h\t\263\272U\370M\275\204\247U=UiW\275\216b\023<z\215)\274\305\302\022\275\367\310\224;s\224\255\274zUS=k\t$\274\306\334$=\004T\211;i\264R\274fH\237<\3415w\274\221\255\273\274J;\256:6\362\"<\275 \037=\020\274)=#\364R\275Q\341O\275\033!Q=\303\227+\274\271\027G=\327H\203<\246\357\250\274\272\027\002\275\200U\001;Z\273\023\275\023\276c;-\334\034\273\341}\230<\302\002}\274\327\277\34475I(\275\334R\004\274\355E:<\363 i<\215E\027=>\246h<\265b\021<x\327W\275\364\253\275\274\231D@=7r\r=\246\017\275\274\373n\226<\t\352\003;6\305D=\216\216A=X\300g;wx&=Q\244\025\275\021\3440\275\300\334\300<o\3369\275\n\n\022\274\227/\t=\224F5\275\316v\305<\206\233.\275\225\200Q\275IT\260\2749\222\305\274\352\330\302\273*\300\003\275\021\002\240<K\365\211;\314\201F=+W\223<F\245d\274x)\274<`\212!=\217=R\275>JE=\261I\004=\323`\030\273F\313z\274\314\326\342\274/\2072=R\237\225\272(\244\236\274\301\014\036=?\017\215;\270bt9\"\002 =(\231\241\274\310\263\253\274\227\324\345<\3136\032\273\232\304 \275\261\266\030=J\374>=HW+\275\320\275\014\274*\217\335<\313\022;=P\304@<\013Q\367<\003\026\024=\333\206\037=\226\350\252\274;T.<F\006p\274X\273o;<r\327\274\216\004\003=\367\007H=\254\342\007<\2024$=\0017\202\274\274\361\360\274\212\335F=8}$=7/\313<\350D\220<\037\253\322\274\220\025B\275\026\236\237;\307\376\357:\3140\000\275\023\232L\275q6C\275\r\340\341<\376vG\275\022\037i\273\276\236\2249\220y\010=\277\223\212<\240p\030\275\336\240\362<\305\333&\274.\265\001\275\030\317\007=\300\033V=9a\273\273\233d\003=\316x5\274{\371\221\274D\017\032\275&\226\t\275\023\031N\2750r\016;\272\364m<\023U\031<\343\0338\275z\361\353\274\203\321\014=\372\252;<!#\003\275\217\266#=\021G\r=ic\364\273\215b\301\274\370i<=\314\362\204\274\021\240\256\274![R\273lF\267\274\337\3561=\267\3772=\250\2034\272\371>\n\275\002SQ\275v\357\245<i\rC=\035\221T\274{\303[\274\033:9=\243j\017\274D-\323\274\254\243;=\374\314\022\275\355\000>\275~\216V\275\307mL\275\241\232\333\274T\r\242;k\022R=\177\314\r\275\2153\375\273\337><\275\233\351\'\275\007\202*\275\255\022\004=I\242\177\274z\371M<\341\363\367;H\274\343\274R\261x<W8\002\275\320K5=\275\275\005=\037\266\014\275\321\311\274<\344G\266<\212\205-=x\336\243;\331y\262<dY\005<\374\272\304\273v\372G=\214\310S\275\1776\377\274\342D4\275\345\315\300<N_\245<\367\310E\274lXo<o\017\237\273\357\262\007<\344\272m<\272\271\016<\253\316l;\223\326\306\274\353\013\354<\375\303\020;\021\240\002\275\330> \274\234a\353\274\242\367\317<vb\342<\3737\t\275\341U2<\223\340\001<\226Xj<\354\2443\272C\222\033\275\t\346|<\217\323;\273\265\212\266;\010ai\274.\277=<\201\035\335<\266\320\212\274\364&N=\2513\265:J\230[<a\264C\275%\243\007<\265D\251\272_\025\212\273\234\000\0049\246v\006=D\276N\275\337\330\362;/\247\023=-\017\023\275Y-{<\332\t\205<\365:\202<\377\357\022=\303c\007=\203\220\304\274u\360F=|\022\271<y\333\210<I\304.=\271H\325\273\007e4=\000\325\266\273&8\365<Z\236#=lKN=\3478w\273\327\370\201<\345X;\274\020r\037=\332T\026\275\360/\"\275\257\300+\275\343\243\212\2740G\023<\216\262\340\274\021\207\365\274vUE\275\254\255\017=\024\214P\275\003\203\017=G\005\246;\226w\313\273WQ\301\274\335aK\275P\306@=\354\253(\274\3153>=P\203\000\275\361\022J<\212\233P\275:@\007\275}U\002=\367U\240<\217n/=\005\030*=\301\265<=F\275\345;O|9\273\346G\177\273\035\327\003=y\256\366<\314\350S=\205\327\301<]\217L\274\331\236\260\274\366C\337:7\243\227\273\315\306\261\274\346\303T<\027\256\215;w%\010;\026\267;=9\021\030=\244\2402<\243$\366<C\374\362<\001\272\031\275\026aL\275uM_<\327\r\313<;\363\324\274\206\260\t<\222\254x\274<\t\3569yTA\275\3378\016\274\3457\264<\304kn\274F\362\226;\245Y\221;\326\264\255\274f\355\251<\243\027\212\274G2\247\273\204\221P=!\024#\275b\340\003\273\010\016\025\275r\030Q=m=\033\274s\267\021=\254~\350<W\027g\274\2400\261<;\313\225<\025\027H\275jy\247<\n\032C\275\022\370W=\346\3318\275F\026P=V\033\026=Cg-=\365z\234\274:a;\275\301\037C=\247Q%\275\225\374?\275\232\336#<\207*\366<\006\243\003=3\352\253:\333\2275\275\217\350\323<\343\207\233:\'\"/=-9\027\275\215\027O\275\265\030\373< \337\261\274zB\371<\263Z\006=G#\034;=bC=PW\256\274\220\255=;\234\035\017=\214?\030\275_\330_;u\313\033=\231\377m<\005\365\330\274\t\267\311<\20228\275\301\025\032=\274y\336<vc\322<|\037\254\274(\300?\274\220\213\255\274,\313#\275\3245\205:\275|\350\272\355\031\232\274F\024\354<Y\352P\274\202\201\021<\315\222\037<|\315\337\271\245\004\215<\364<\022\275?V\001\275\216hH\2752\'\251\274\266\275!\274\334{\233<\240\246b<\017\335\260\274\026c\212\272z\220\004\274,d:\275\317{$\275\247\216\270<=\371\351\274;\363>=Z\355\001\275q\027I=\201\320<=w\'\221\274\244\262\211\274\350?\303\273\246\351C=\030\346I\275\254\021\022\274\373\032\306\2739\275\001\275\366\004\r\274\270\2065\274\026\352\262\274mp\003\275\201\034\036\275\352\025\332\274\311C\204;\251J\222<\214\274A=\305\013\210<Y\353b<\216\336\032\275\344\227)\2743\030:=\274l\354\274j5\036=7I\252;vY\376\274(C\263\273z\347]\274&\033\246\274s\274\216\274\2079\020\275\317\217\024\275\262\221\206<A\013\305\272\357b\223\274r7\030\275\226\250\203<\"\323R\275\346[\327:\371`\375<\014\276\\\274\362\3336\274lL\024\275\265\360<<\034\006\003=\013\273G\275_\"V=:1\001\27570 \274\271J\263:.\232S\275\334[:=pF\004\275\350\000\334\274\337\020\025=\227\311\022\275\311\205\010\274\033B\212<c\221\271\274\233H\325<\271XJ\275\022H\241<\321SI\275\365C\333\274\246FS=\261:\366\2744)\n\275\024\337\t\275s\366Q=\215\271\310\2746n =\240\227?=\363\252h;\270\017T\275 \3262<D\273\003\275L\223\017=\352-\261\274\'z$\275\nZ\036=\265\242\026=\327|+\274s+\225<\346\0167\274\n\3150\274\305\035*\274R\356a\273\344HB\2756\006\020\275\230\313\342;@w\374\274\333hL\275R\345\235\273\251y\356<\272\035\242;\332x6\275\372\375\210<FU4\275!\002p<\337\003\'<\\V\341\274\002\312\371<\341\365\347\273\263\3068=Do\326<\264\216=\275\005,F\275\341\226\005\275?\007$\274\214\327N\275\343\231\347\274\363\ru<\033j\267\274fy\210<\343\301\216<\333i\303<\220{\250\274\373\351\225\274\\\345&\275\351\237F=\230\213\217<\220\027y<Q\300\276<\252k\032<\005\274K=\215\020\021\274\250>\005=\310\355\320<J\\\024<t\360(=D\222\360\272\r&\020\275\304\226\033\275\264\3671\275G\360\307\272\305N3\275|\307&=qj\003\275VV\021<g\\\\<\010\022\304\274\262\030\210\274=\277\375<\245\247\274\274\366\251\006=uk\246<\t\256\026<\243\306\327\274\210K\020=]\342_\274\025\036\265\274/\214\243<P\361\353<}}\002\275xC\344\274\222$]\272\205[E\275\372\350\242\274xR\016=\250\024\004=A\337\312<\214\030\005\273S\330\245<\013h\035\275L\002\014\275l\274\223\274\220\014\305\274}l\035\271\231\253\322<Qm;\275U\244`;\312W\013=\376\346\024\275=X\252:\025]\267\274\213&\'\272+\230^\274!PS=\267u\203<\262\026\002=\005}\r=\304=\341\274E\024\272<\370\033E\275\223ie\274\301o8<\313\222O:\236U\226\274\324)X\275\263\022\247\274\340\243\037\275\001dA<\350\276\375<\302\2339=\356\'7<\2370@\272\353N\022=\252\234(\275\273rG=z\303K\274\334\3640\275\355\270,=D\362\363<\017\241\247<|\225O\275M]J=\265\202+\275\315[C=\230rG=\230\321?<*\327\313<\005S\272\274\374+\014\275K\307\350;\257\357\253<\327PL\275\273\3641\275\226]t<q\253\246<6\273R\275\337\375q\271\t\255\267<f\362R=\t5C\275{\240p<\274\211\322\274\304\021&=g~A\275\301F5=\351\327D\275\266\335\035=\346\034\204\274\013\251\300\272z(U\275518=\340\231\003\274/\266,\275\227u\276<\335\337\025\273\353<\021\275\242h\'=>\270\251<\374\201\032=\214\325A\275\n\300\030\275p\337\321<\311~\001=f+-<\351)\355<7)e\272O\2203\274\344\213\004\275\347\237\204<J\346<=\002_.=n\210\272\274J\353O\275S2\344<^\313\205\274\004\340\035\275S\n\253<- k\274\3451\271<\\\277E\275\264\377\223\2748^\'\274\270\035o\274\217\215z\274\316$\026=\\Iu<\262\254\300<@\340\022\275|\024\013\274\234\304\331\274\212\322s\2727\200\366<-^\267<\347\372\032\275\302\004D<8N\033=9\3516\2757\2431\275\337f\353:\252\222\321\274\247\264\017\275\004\257/=\'\037\322<\231\312\302<\304_+\275\013\322y\273\215\363\221\274\330\376\271<>\335V\275\001\366:<v\202I\275\254\307\032\274\010\353\027<d\373\322\274\025lO=\242\0274\274-\321F\275r\304M\275\262\242\"=\230\367\337\270\310\306\236\273k\2306=$\035H\275O\370\027=\342\326D\275\215\335\025\275V\353\251\274\265u,=\220\373\023=\310\365\300\273Fc\242<\265;\263\2747P\242\273@\342\215\274\233\016L=\\\366\n\275ph\t=k\277j<WS\207<\217QT\275gC\005\275i\001\213;\314\201\025=\323\364\227\274-+\343<\361\343\273\274\313\343V\275Oh\371\274C\264\007=_i6<\205.+\275\327M3<4\225\250\274\246\357;\275m\0232<\216P?\275\374\026J\275w\236\256\274}\345\205;4\336\232\274\362\361[\274\300*\007=\315R\001\275\222>H=\341 \"<i\261&\275\246-+=\267\266B=\014\340\036=\200E&=\r\362\"=\310\251/\275L\233\001\275\204\373\320<\001\021S<f:\'<3\024\005\275\206H\017\275\251{\337<\257\260E=\345\310\237\274,\370\234:k\364\033=tY3=Rd\032\275V\006\206\274\0177=\275\266\277\201\274\030\245.\275\003a\014\275\351U\350\2732R\357<8\"\007<\376\014W=\307\3761=\336\023\314\274\356ac;\'\025\210\273\345G@=\037~\266<\2130\341\274\322\034.\275C\245+\275a%\350<\036\2008=k8\266\273\264\230 \275f\222\370<2H\006\275\263EU<(\330\032<\324b\271\272(\273\024\274~\231\030<\227uG<\331\277\266<\026V\"<ep@=\036#\261\274\224J\033\275\312\024\222<~\250\200;\210(2=\352!Y<.\311\004\275\013\032P\275\240\241+\274\244~\337<F\377`\274\007\335v<-<>\275u\'\000=\376p\350;\351$\013\275\346\230\026\274\006c\033=b\270\036\275\252\367R=\213\265I\275\317(z<N\311\331<\001\252\373<\037w\326<\242B\225<pd;\275\310\250\370\2712\350\350\272\300DG=\215)\260<\017p\021\275U\261`<\037q?=\343\341\247<\276)\036=L\236\010\274!\2241\275\275t<\275\341\006&=a\r\342\274\016i\032;(y\374<\244\376\355\2729A\030\275\311Ch<\003\231\023=7N\316\273\230G\250<m$\024=\315p\344<\231y\024\275AV\247\274\353\022\300;q\324S=\377VR=\037<<\274z\221C\275$|\347\274\355\243/\274tz\236\274\230_\001\275/AU\2756\353\013=\314*W;6\303\026=\001\tk<\263\376\325<E\210\322\274a\2513\274\034\367\215\274\212w\302\274t\234\376\274\277!-\273\211\346W==\240\007\275\336\035%=}\247\'=\000`I=t\r*<\210\207R=\237\342&=o\325\261<\243\241U=q\273\225<\324q\364<\361$\033\274\376\226R=\301jR\275\013[:\275\002\310\311<!\200\002\275Z\276,\275L\035+=\364\332\035\275_\r\274<D\260\032=\212<\033\275\200\036\334\274p!\'<U\036\230:N\257\264\274\204\231(\275\272u&=\354j\r=\324\335N\275\336\335\335;z\366\264<z\025\026\274\035\342@\275\3630-=\256\370E\275\344\036\270<3\250\022\271\233C\005=w\223\226<#[\264<\263\300*=P\320<<aT\301<\233P\251\274\314\267\037=h$\020\275M\236\031<\236Z\013=\276\260\014< N-=\352\313`\271 \\@\275\343`E=Ng)=\241(.\275\"S\277:\036\347\347;\232-\007=\232H3\275d\223\257\274\274\377\272\273\312\032\374<\214\n\353<9@.=Sn\374\2747(\246<#g\246<\342\221\333:\272\246\241\274\365I4\273*\223\034=6\334\264\274\344Z1\275?\001t<N\232G\275Q\237B\275J\nB\275X\024N\275\260.J=W+\376\273\351\325\273\273&1x\274$\037\221<\275\326\340<\351\016e\274\303\0224\275\017\"\257;\200v\337<\326\014z\274[gf<Z\242\004\274\334\233)\275\256/U\275\351\3532=_\016]<\341\237D;t~2\275\220\270\022\275\321a\214\274\002x\300<<!\267\274 :\033\275\342\322\037=\226\275\374\274!@\334</\376\036\275d$\334<e/O=\305\204\310;z\240\202<\007\362.=\n\376\335\274\224\026\310\274\257\"\017=\262\265\322\274S\351\326\274\265Q\034=k\010\375\274;\027U\275\263\277\321\274\314\311\277<\257!#\275u\211\270<1\377\257\2749\2712:Zq\"\275\354\013,\274*\211\"<E\341\223\273\016\030\202\274#\326\366<\250\323.\274\357\225\"\275\346QQ\275@\0338\274\305\326\320\272\302\352\327\274\275;\026=\273\320/=\321\251\016=\203\r\240<\374_E\273\330\217\357<\302^\356\274\360g\225;.\354#\274\304\325S=i\246\351\274\204\365P=\316gV=4\343==\236u<=\020\253\222<\246^9=S\255O<Qb\373<\223:\326;)\376\220;\376\317\204<M_%\275\271\217R=\237\236\035==\334\360;\270\265\227<0g\246<I2\260\274\\\325\373;\007\205\326\274m\367\271\273\331T\r\275\035\250\210\274\r\206J<[\254\021=V\231\342\274\375\344a\274\276\356\'=Q\366\301<\216}\311\273H\002\026\273\207\3759<\322W5=+\276\252<9\025\340<\357\322\212<\347H<=svi<\335\364\207\274M\235\002=\002\007\324;\026\035W=Qr\252::\341\\\274\020b\312\274\332\335\005<\202\331\036=x\032\032\275\267\357c<\335\372!=\224\321\307<\002\010A\275\017;\033\275)\025T=\302\335>\275\000\262W=\034x\257:i\317\027\275ZG4=\354\373\031=\355\236\376\274\004w%;9K\331\274\247\355\335\274\240\316\002\274^%\371\274e\227D\275v{\244<\231n\217\274\301G\206<n\347\004\275\355\330\363<\213\234\372;\242\322\233\274\313\275\t=\031\335\312<\037XN=\212$\016=\324\324\004\275\373\332B=\214\342\213<r\255\r\275I\235\037=\365\367\327\273G\356\325\274\027\270H=){<=\344\356L=\304nn\274\016\3541\274N\331\374\274\337\377\275\272\253\302U<Jk\316<\324\323\345\274\230\213\005=Z/\004\275\000\037\202<\025n/=\363\200\206\274\263\364\363\274\244\313\025\275\314e\362\274\027\2320=\320\377\343<d\177\264;\013\314\342<\363\250$=\233kL=\357x\370\274\226I\215\274\323\261?\275H\270\306<\315U\213<!\272\263<\206[\222\2737Z\357\274\017d\261\273\214\255\025<Dl\227\274W1\205<T\345\226<\352k%=\302\014z\274A\270\304\274\276\271(<\205\237\260\271\245\204\250<-|\244<r\230!<\342\276\342\274\031\256\314<\217\307@=2\363E=\270\2015\275\231\234\255\272\324\273\356<`R\262<p\266\261<a\204\022=X\005\037\272G\205K\275\301#\343<\221/P<D\326\254\273\215`\036\273\2662\020\275U<\352;\262W\013\275o\357o<pMe<\t\351\305<\001\005<;0\365\022=\024BS=\265\314\252\274\321\206\326<L\301#=\250\376Z\274N\201B=\364?\032\275Q\314\331;\255#6\274\241X\231\274\004?o<\035\2740\275)/\024\275\343\222+;\235\2576\274\332/@\274oO\224\274\006\312\331\274\356\037!\274\2341+=\003\217\334<\227\367\231\274\304\271-;\322C\203\272\226\357\373\274v\3465:\313\030\017\275\205\345\033=\333\211\230<\232p\304\273)?y<\301\277\365<\204\201\330\273\342\372\316<u\240=\275\337a\022\275\262Y>\275\205\321\241\274*\2222\275\354_\215<\005\213\203<F\r\272<\373(\003\275\216X\335<6\033!\275\036x\345\274\251\365&\275|;\034\275\206{\261\273\267&U\275\010t\264\274\224\247f<\331\202\037\275\373\255\023\275\333oQ=#>\021\275e\022\355\274\305\321\034\2757o)<\307\014,\275\240\r\032\275#\216\267;\206mw<i*\275<@\203\3309G\001\017\274@ys\274p\336\026;\337\361\346\274\270\207Q=2\006\007<fS\230<\017OM\275`\207\274<\014^q\274Q\255\007<t\316J=(\026\243<\264\353K=\247\370==\247;\"=y|W\275\247\374y<\001y\274:\312\317:=\323[\225\274\006\225\033<\232\323K\275\333\002\241<2e0\275h\256P=\3245P\275\017\250\213;\314\304Z\274p\266\315<\230@@:\257<\021\275\261U\016=\245\253\366\274\366;.\275ec\334\274\367\370\246\274E/*=\201\315\346\273\202\237\033=p\315\255\274\370\300&=n\374M\274\321C,\275=a\266\274\355\344\n\273g\375\313<\247\250\034=\224\256R=\302\023M=f\\6\2738eA\275Pse<-w\266<\226{n<\211\022\226\274\2231U=\333NG=\204\342\226<;\251==\261\205\337<t\346\004\275\362\336\035\275mG\035\275\371\317*9W\225\n<\232w\034=V\246\255<\304]\006=Nk\316\273\021\330\032\2738F\013=i\360\301<\265[\207<\237\320\377<\235\3666\275=\031\001\275\351\331\326;\222N`\274\014\226;=\226\nL\2756\322I=\251z\356\274#\007\004=X\244\004:\001\357$\275\321\347\265<\277\267\334:\037\017^\274/\311\236\274MF\004\275IY =B\373\233\274\210\251$=q(\001\273\024#l<`\352I=\325\253\220<\312\233\257\274\355\223\263<\022\312\027\275\364*J\275\271\376h\274\235\371\013=\376XT\272u\224\377<\334\0307\275/)\252;\313\021\222<+/v\274sf9\275X\214\020\275z\2758\275f\335 =M\r\317<\337\373 \275\n\034B=\354U\276;C\331\247\274\345\356\350;jEe;h\261\253;\200\304C\275>\341\326<|!\215\272,\032\n\275\202\207\365\274\215\035\244\274\037c\314\274\270\270v\273V\334N\275\361\033\372<N\023\017=\216\t%=\3460\030\275\266\177%\275\354\363\016\275\246!\365\273t\3330\274\265\220\325\273\251\226\212\274\254\254\367\274UI\021\275?4\036;\010\222\225<\301WB\274\033ON<\257r\023\275\346\001\377\274\001\025\361\274\306\342\005=w\362\000=\207\252=<]\225\t\274\366\356\032;\362\303\212\274\306Ok<\037z\224<P\234B\275x\203\225\274B~\346<Wz\364\274\356:\310\273\201c\"\274\177\315A\275%\307\326<)\241\374;\316M\354<\344\007\036\275\230)\206<P\344E\274=\213\327<\350P\005\275\370\335\240<\204\000\036<\231\223<\274\244\312\273<O\240\027\275\234P0=E]\r\274\330+\030\275.z3=o\202\250<?#\215<\313k\335<6U>\274\357\244\353<\313+\333\273\200\027\335\273\307Y!\275\334R]\273\371\250\270\274>;\347\274\310\203\231\274\352\211P\275a`H=\035\301\233;*k@\273+-u\274:\221/<\223\004\274\274K\212\310\274\'\277\375;\226\355\035=v4.=\2759.<\227\270\033\274\321{.\275G\032\032\275\324\3259\274\027|\367\274\306\342\220<\264\351==\n\016\334\274\232\245\257\274\251\267\216\274g\377T=\207\272o\274Ea\344\273\251r\217<\024\372D\275\360\212M\275\210\024\006=T\014c;\241\210\245\273W\334==R\177\216\273\374\253J=G\031P=\213|\"\275b\225\214<\315]\r\275\036\321\326<\274-\370<\334\243\013<\023*\033\27492T\275~\277\324<uF\302\274po\212\274\\\327,\275#\005\243\274\352$\236\274\343o\244<j\255\'\274\214\030\212<\036\023\266\274u=\001\275\036\262\337<wL\327<\346\215\036\275\273=l9\030\356\307<\017\202m<\356\263\204;`\277F\275\215\031D=\003\007,=U\374\314<\030\374\360\274\351\323\030\275\312\002$\275\211\224.=bq\254;\326\357U\274\223\255\\;\361K\355<o\240J=\375$\310<aG\356\274\261<\317\273\034\025$=\361\373\020;9\244\321\273\317W0<\301\225:\274\276J\306<\244\336\361\274&C%=\235\376H\27459N\275\346u\003\274\341\351\037=yA\006\275l\373U<\034\307\263\274\034\272\270<O\203\314<!\234\375< \267w;Lv\245\272+\325\254<\321q\227;;\261\030\275\315Jl\273\31444=I\334\216<@\t\n=_\241Q\275h\321\007\275l\235.=\320\242)=\205t\271<\327\006.\275\375d\314\274M\313#\275\373\301\371\274Se1=\236\276\021\275s\304d\274p\252\006\274\277s?<K\272\036=\276z\n=\342|\266\274W\210C\275bp\007\275C\213\021\275\206\240\371\274\340\357Q=P\231\026:\307\017C=\273V\350\274\304\247&\275\253\032\206;C\376\210\274D\022%=\362\355\267\273\203\272I=\321\305\016=\330\317\005=\310\211\033<\245\223\211\274\364h\037\275\256\354\r\273\010\331\231<\252:$=\343h\001;\0020\221\273\202|\003=&\225 ={\347\356\273\332S\203\274\334<\340<A\242\227<N\200\212<p*\016\275(\337\213;p3 =\036\2133=\355\265\036=]3\004=\372\247#<\3410R\270\322n\002\275D(\346<H\351.\275!$\276<\270\031q<V\337\245\274\273\374i\274\201\n\022=\244]\235\274I\377\226\273\300x\310<\"P\320\274m\367\033=\317\037\273\274R\017\r=y\337\270\274u>5\274L|*\275\033\357h\274\212Q-\275$a<<1\324\001=\335\013Q;\216M\003\275|\340R\275\206*K=\207\364 =\317\037\r\275Z(\343\274!\360I<\235\270g\274\343\024\360\274\337m\346:\333\365\325\274\310G\357<\273\262\233\273\244\273\356\273\231\033\372<\230\207\3778\332\016\020\275\006\214\033=0\337~\274\257M\373\273MQ\245;[\330?\275>\365\205\272=_\356\274\263\r\256;\010\033N\274\304\275?=\265Z5=\343\246m\274 h\247:\345\335\271\274\223\001I=d\303\330;\340\2436=\220d\t\275\026\235\321:\225\256\004\275\363\333\026\275\t\316\000\275\304\251\001<\237\035^<\304.\021=\370\210\355;\\\302\005\275\273a\004<\205\275M<xp\001\275\257\031\345;`H\020\275\251\207N=\204p$=\362\365\241\274\357\373\352\273sf\214\273oj(<\300\330\030\275t\266\252\274\273\3017<B\273V\275\251f3<\374\0265=N[\023\275\207\342-=\001\212f<m\351W=}5\323\274\225QC<,\0238=}.\211\274\233\231\355\274\367m9\274\337T}\274\205\341\377\274\224>6\273\271~G\275\273\353\270\273\272\017\367<\336i\313:\032\315\272<8n\361<\344/M\275\337\346,=-\217$\275\353\357\305:m\334B\275\351\'\256\274f?\243;\257\355D;\311s\006<\262\371\341\274\010\tm\274\003\300\027=\305r\337<\205\252\262\2740\335\021\274\337\257D=?\3306\275/e\320<\022u\252<\200\357\347\274J\347\220<r\227K<T?f;P\001:<b\344P\275\323R\324<r\265\016\275\304-\327<\340\276!=\317]R:\364\rO\275\025\013\353\274\362\366\304<j>\022<]eh\274\031\301\311\274#3\021=*Q\035\275>\257\267\274i\002G\274=\312\'\275n,\003=\007\353%=\017Di<\372P2\275\373\034+<\003\026\334;0\022\363<\2352 \275\345\307\316\274\307\226B=b\220S=\270\226\357\273w%\342<&\3434\275\005L=\275\336\360S=\315\037\212<v\030=<o\023\207<}\2353<2\270\n\275\320{T=4\347\325\274\332\366C=\256\212\251\274\345\0318\275c\275\004\275\305{|<-\305#={\027\266\2749x;<\030yK=\342\303\031\275/\001#=\236\3669=\"Y\007\274=\336\223\274\306y\013=pn\006\275\324\255\323;to\324\274\030\345\007\274\331VV=U\253\266<\357\262/=\303\352\217<\360\024\365\273\375M?\274\257\271\025=\371J\t\274\365cW\275p\324\233<\273Q.\275\320@\010=\323I\024=3TR=.$\010\275\204>\371<\036\337\"\275R\213\220<\373\344\322<\317o\232\274\317\242\330;+K\214\274&\333\312\274Y\370\230<|\300\304\274u\355\322\273\332\376\352;\025\027\367\271c@\277<Vi\257\274\337\030\315\27499\335<v\354A<\222\305\207<\325\273\001=iI\022=-Q\005=\245%E\275\222\034\215\272\001\225\010=e\300\025\275\211;\223\274\244\2576=.\014\031\275\026\247(=s\370F=\251\263a\274\301;\350<=\316\021\273t|\031=O\236\343<>\204\016=|\212\005\275{\032U\275\265\376\006<\232\311\022=J9\324\274\002)\274<\265\364\217<Ge\032\275!\325!=\366\013\226<\264\260\217\273_!I=\251\331\333\273\000]\242<\274\273$\274\312\0206\275\322\275\202;\327Y\010\275\201\"\300<\035\250\325:o\260I=\252\253F\275x\0378=0}D=5\344\001=\242\006\212;\'[i<\334V\004\275\275H&=\330\204\241<\225\305\027\275zQ\202\274\\\267!=\335\313\034\275u\263!=pP\224\274\315\276>\275\375>\016\275\207\033U\275E{w\274\344\010\035=t\322H=\2568\207;\027I0\275\270\347\033\275\213A\354<\234\303\235\274k\224I=\331\037\t\275P\255\261\274\237i\330\274\336\245d\274)\271W\275+\375:=\305\256\007=w\237\020\274[\313\205\274\372\"\021\275~>\033\275w\0317<\216H@\275\227\003!=\260\307Z;\353\014)\275C\337\036\275f:%\275\031\302\273<\037\262\310\274h\231\311\274mW+\275\"G\t=:d4\275\204\000\004=\310\270\320;=\220\223<wEi\274\322\360\2338s\303\024\275\212=\323;\357\264&=f\251;=\030\233\022\275$\365\240;\224\224T\275\007\227 \275\337<u<W\033L<Yf\242<\340\357\375<\243\t\305\274\327|\215\274e?U\275\001O\333\274\301\2634=Fd\327<Y\267\237\274\260\354\003\275\332\3315=\217\357L=\202\247\365<9\227%=\224\215A=\262\026?<\0331R\275p\001\256<K3V=HnG\275\305kR\275\374\311K=0\310\341\272\220\256\007\275\212\333\356<~W0=\315\270\223\274_\226\270\273\247\225\304<\322\205\216<\377H\302<\330\352I=\227)\316<\362\331F=\207Y\300\274\301\2077\274i\036.\275\275a\026<\325\017K=G\352\233<,4\\<\314\320\004\273\242\326\356\274\000Dc<F\337\032:\003\032\345<r\017L\274\022Q\253;$4\024<\007>4<a\031\010\275\307\257!=X`\300;N\020 \274\354r2=\n\004\202<\2628\034\275\307\353\025=5\347\220\274\224+\250\274}\000\263<\247\246\275<!\230\340\274<\246\274;\261\010\370\274\325h\332<\250Q*\273V\001\361<\343W\177<\205\022\004=2\202I=\314\355\354<\365}\336\274\350B\004=\325Z\264\2748\252\351<\273\272\253;0Z\371<|{\257<\0257L\275\233\276P\275\017\217\205<E\343*<F\347\301;\251\252\020\274\375\374\001\275\242\244\220;+%\327\273\216[+=\330\355\216<\342h\';*\247P\275\336\356\344<\320\023\026\275{\017\016=\210\277\357\274R\336T\275<\374\211\274\372\344\037=\025Q\235<\032\212D:\251\323<\275\260#\345<+\024W\274\275\327\030=\"\357\020=\345\005\356< \341>\274\323\223\023\275P\234\200;Py\250<\340\273F\275\013\310\027=L\246\205;\211W\303;\026BJ\275\\U=\275\356\347(<\030\007\013=\361\014S=\230\361\213;\201E\"\275\343XT\275\035\237\020=\n\023g\273I$\262<s\356\021=vL\373<v\021X=\357\377\317\273=\005\030\274x\224\366<\027+?=\256\2571\274\273x+=\243\204$<\014\354\"\275 `:<:\364x;\032\220\031=\205\007&\275\242\246\374\273\357\357T=W\233\235\274\3538&\275x&\025\275\233\227\255\274\322\353\371\272\032\340`\274\246\274\345\274\222\376J\274\366\243\034\275fZ\030\275\361u\037=\001\007\010\274\347)\240\273*M\207:\001\317\031=\232\'\352<\334\321\002;\316\255+\274\0234U=\002Z0=n\235{\2740\315\230<\344D;=\026\255:=\363\220I\275\026\003\252<w\252\274\274\335\212\357\274\347\350\014\275\236q?=\374i\275;\227l\213\273\220\2371\275\267$\255<R\205Q\275bBO\275x/S\273i\007\336\274\205\303c<v\007\346\274\3359\006=\364\n\030\275\030\267\334\273+K\324<\032\374\246\273\"\276/=\366d\247</\371\346\274\215.\371\274\312c;\275\013\324\\\274\246\322\006\275n\266#\275\274]\277\273PNO=\010oV=\376dz<\204f==w}6=\371?\263<\314\343\347\274\013\"\273<V\226\320<\274\257\216<\246\266\033<\275\245\021=\215\371\262\273{\336|\274\360\265\r\275XG\367\274:\334\373\274$\327:\275G\021\255\274o)\333<\030\254\345<\230t\322\274f\t\003=\022\357j;Y,\342\274X\r\003=\242\233\347<\010wR\275\263\306\010=\177\364\221<\330:\027\275\275`\001=1OC=\366\202S=2\333\256\274\374\325\245;s)-=\364\356\003<\335\352\347\274\227\034\367\274]\322\204;\\\003\347<{\322\251<\203B\331\274\255\373\"=\264D=<\031\216\351;\374\273\000;\212^\371<?\341\030<\352\333K\275\211\313\013\275\2524\313<T\006\233<^\331\014=\326\304\320<\207\2106=\253\0222\274\013q\215<\272\243R=\307z\014=\2157\t<G)f<\345\005\014=\345P\204\274\361\264\2169\367n\220<\370cq\273\016\034:\275\037\203\300<\311\317\276:\271\2141\275\316\231A\275\256\345#=\211\374\202\273lV\373\272R2\351;OO\002=\206\266B\275\242\0239=\036j\t=J\340\300\274\361tS=\360\214\300<[y\034=\034\0221==\350#\275\nX\010\275\233\250\265\273\260\376\205\273\320\261K\275\007\270\014\275}\326t\274AV\356\273z\240h<xv\005\275\264NP=\224n\r<\326\224q<\254J\234\274R\036M\2754\351c\273\030\351\273\274\340\236s\274\373\377a;i\010&=\"5!\275,\242\364\274<\335\366\274\376j:\275\364+3<\241*\016;o\267\345\273\3004r<r-,=\267\310\274\274\212\276\2159\260`\030=\342\276W\274l\221\246\274p\313\266<\342\034B=\216\007\245\274\375\t\327<\242Ji\273Vf\350;\023+\211\274\207AO<)I\007=\017\027\242;\271\331\030<\305.\r\275lzy\274%g\265:\376Ws;`\357\214\2748\324\236<=\007\303\272a\270X<\321\023d\274fvr<IZ\300;\267\361\213\271\215\310\002\275x\212&<F\345\326\274\326^b\274\"D\022\274\375\002\374<\276p\t=p\223.;\177l5=\213\010\316<\324\030U\275\347BO<\207t?<\n\t\210\274\347\337g<\0006\303<\035N+=\023\013\331:\013\245o;\276\317\272\274<\345`\273\305/\033=\366\263\216\274P\3030\275\347;*\275/\313\322\274n\323\027=n=P=l6Z<\001\357\024<\220\035\376\274\033G$\273W\271,=\036\232\303\273\226/S\275\366\020\227\274\001\333?=\261[\263\273d}\360;l\030\376\274*\311\320\273\217\332C=\327W\210\274\001:f;}\266\357<f<\'<\260\301[\274\0040K=\230n\004; ZP<\274\222L=\362\304 \274\221\006#=\253pU=V\326\'\275(R/\275\311 \r\275\003\245\033\275\236\266\007\275$\210$:\365\3719\275\257\210\347<\023\324\204\273\343\037\250:ax\022\275S\212.\275\014\351]<+\224\"={\315\001<\354D)9E}\263\274\036H*\2747O\272\274(H\005=}\222p\274>w\010\275\257\017\256;\344(w\274+tA<\001\217$=\t\355P=\341\352J\275\340\202\341<\006\026\202<*\312\366<\322|M;\365\261?=\366@\213\273\231\022\326;\254\316\316;\226\242;=\274\304\324\274\177\315\277<\215p\263</\257\237<\022\223S\274L\364\324<\341\251;=\206.\260<\217\261\234\274a@\344<\031Z5=\311\266$\275\217\217.\275\200\010\354\273\310{\002<wwk<\367\032\231\274\275\225M\275R/D=\206m$=\37336<,\341\014\275a`\341\274\352\341\034\275\362\007/<\014W\356;\360\227\333<\006\023N\275 j\225\274\0246\016\275\026J\274<[?h\272Z\215\016\273xN\355\273\200`\004\275\302\021&\275n\347\232\274\214\215F\275&\333\212<$V\024\275\t\300\326\274\203X\322:\252\220\n\275\343k\371<E)\342\274n\245%=/\350\372\274\273\207\361<\020\274\037=\\T&\274c\363A=\252VE\275\210\246U\274\325A\025=\322\236\n=\227)\224\274\001\t=\275\035\331\320<\373\007\034\275N 1;\032\227j\274\361p\355<\005!\257\274\211\207V<\204-O=\311|\345\274\220\211\025\275~-\353\274v|\236\274g\345\205\274\357>\031=\004\350\002=\343\227\265\273\214)-\273\177\302\306\274\014\210\202<\254\252\352<\273\373&=6\373p<\252\273\227\272:\356\021=+\250&=\207\237/=\320/C=U\351\021<\034\212&\275\353R\355\273`\005\034\273\343\303\306\274\210\204J=g\'\031\274\357\032\343\274\243<\254\274\314=X\275u\327\330\274\202QH\275\002\215\004<i\220\014\275\276,\302\274\321\2142=\357\377\037\275:\264\225<\341L1\275~h[\274\200jv;=\325\234<\210\370R\275\203\006\333\274\177/\353\274\343\nE;\224n <i\177\t=H\027q\274\314\355\304<O\234w<g\245f<\271\312$\275Ee.\275\361\003\306;\230\275\020\274\023v\037\275`4\333<\033\210T\275\017\230\264<V\037\034\275\007\234;\275\357\326\016=\366\177\211\274y\224)\275t\036\317<\312\013\201;\343.(\2754k\2677\312IU\275\324\245\233\273OQ\244\273\253*\304\274\245[\331\271\014e\205<\031\203\263\274\264g\364\274{VX=Y\340\002\274\016\364\377<8`\207<jD\325\273\027\014>=\')\256<\252d4=\024\367#=\274.G\275\\43=\362\t\316<U\021\305\274\312\332\n\274\2022>\275\022\034\t=\320\304\232\272-\270\314<>(7=3\n\016\273\0036D\275\230\316\266\274\315\020H;\'\362\021\275CM\002<\'\'!\2757\270\235<\230\0034\275\266\010\242<\330\033\327\274\026t\026=\200\3141<\357[\r=\0208M=\024*\033=\216B1=\3021p\274\274\337\316<\377\223T=\220R\020=\242\'\203\274<yM=G}\016<\355\215\021=\333\311S\275\\\010\033\275\214\304\362\274z\302\366<\033\017\013\275\264\037<=\0140\264\274\207\202\276\273\342O.\275\214\315K\274\004\024s\2747\211/=\035\017\201\274;\275\003<MV\001=\030\3151\274\375\314~\274\203\nQ\274\0377\352<\r\216\025\273\374\250S= \",\2755\341\031\274\317x$=[\343\r=\026b\377\274\253-\036\275F\376\373<J4\027\275\033W\010=Q\245E\275\353\321\026\275\001\360\276<\343,\303\2743\'\001\275>$\213\274q!m\274\253\265\004\275\223\224T=aK\037=MmL\275R\313\275:\330\220\367\274\302\224G\275\007\313\013\275\272\004C8\275\024\262<T\220&=\273X+=\222b(=\227\374\026=Xy\017\275\331\206F\275\367\224\3279]\231\024=l(\036\275^\230K\273H\346>=\322]N\275@\311;=;\036\016\275\016\326\374\273\327<3\274\n\032\177<\317\254\320\2749vJ\275\367\366\314<\367\251\251\274\214\3415=\256\030\024=\210\353\205:\327x\021\275\231\024\200\273\004A\233<\332\304\027\275Pfn<@.\320\274 (\336<\214\306\025\275;}(<\262\345\002=\001 7=7dk<\345\247Q=c\342n<\215\005K=\352\217\374\274 I\346\274\013Jf\274\347\263\316<~\364\240\274\305\323\037\275\331$\323\274\206\207\005\275m\371\374\274zT\320<\202s\276\273Z\275\003=\345e\247\274J1\002\275n\336U\275\345k#\275\247\2258\275\010$Q=\333\277\347<\363\201\267\274\340\033 \275\237X\026<q\034!<%P\037\275\326\204\030=7n\254\274\350\241@=\243D\347<\227\232\206<\030\275S<\225\364-=5* \273\036\266\347<\"\3441<\037\266%=\213\r\334<5\020\026=\277\222 =\036w\251\273H\240\267;5\".\274\343\\\232\2742\3516=\r\2231\275N\021-\275\356\257\320<gp\033\2755\024/\275\322u\t=\371\n\224<\315\202>\275\037\230?\275B\203T\275J\003Q=\030+ <\003\260\"\275\200\313\315<nJ\244\274\370) =\251\333=\275\247_W\275d\220\305\273\253\022u\274<\326\306<2\217\370\274\204\260/=\317d\020\275\036\267O\275\264\027&=\310\307P\274\347u@\275n!\001=\\\254\214<b\336\000=\030\r(\275\3732\277\2748\216f\271;j\273\274_%d\274\212|==\017\231;=\215\321\013\275x\373\003;\322\311)<(\370 <^\013\r\274\t\223\346<\3536X\275P\370\217<V;\004\275\330\247\272\273\372\266\250\274#Y\246\273\t\037X;5\224\340\274D@\2459u\013\224<C\376\346\274HX\346\274$\214\343\272\376\234\000\274\334q\307\273\037\032\206<\202{.\27505n\273\021\266!\275[\261\276<HO\020\274\r\365W\275\037&\004\274\375\364\034<\327\227@\275\207\300\264<\243\230<=BH\366;\370\rq<\360>\006;\025\376\031\275\305\306S;\213d\351<\020+\330<\235\016\337\273@<\'\274\036r!=\347\234O\275\205\206(\275\004\003\036=!f\207\274*u9\275K\342M<\211\340\307;|\246\355<lzR=\267\034\017=\213\203\307;\336\257\211<\341.\001\275(\002\312\274G`\226\274\313\310w\273\2172\266\274\2049Q\275\242\362\037\275J\030A=\217\243T=\\\324\007<\213pT\275\312\246\266<iN\317<Y9\336\274\306\231\257;\\3K\275\312\337H=\360!S=\001\242#=\364\020=\274\177uU\275:\351\355\274\250\336\244\274\3359\016=\205\032\316\274J(.<\030\017\001\274\245\333\343\274D\331\016\274\322\221\355;\255\352v\274\327\217\"\275\n\247;\275\240{\220\274tvU\275\273K\037=\2737\022\275oZ.\274\016\\E<\226\270\205\273\233\013\347<R7\022\275\321\355\033\274\224\341.\2752t\213<\277\267\316\274\350n\344;\000\022\275\274\207\301\010\275Qb\303\274p\231E=(\022d\274\377F&=o\266\301<,\333\233<6\3045\274i`\355\274\'\344}\273\250\374\371\273\020)0\274\003\267\027;\nf\207<1sr<)\271&\274\3531\023\274Z\350{\273\001\273P\274A\251\272;\204c0\275\213?\020\274\273#\316<\364i(=\247l\r<\302\2412=\"\252\004\274\312^J=\003\246\234<\304\277\314<;(\314<\254\276N\275{\365\336<O\215\241<\205\1771\275si\307\274\266+\341<\202\010?=\203\2106=\rZ\202\273\266\'D\275A\222\003=L\243t\274\334\217\323<\037\256\004<\343r\351<\372\352/<\330\347\335\274W~\033\275J\211!=\327\260\'=5<\307\274\317\375\240:-\236D\275;\225\025\275\034\340A\2756\321\307<\315\301\361\274\355\203\364\2740?\247<|\325\254\274\364\335\r\275HN\316\274\210\2375=l\315\035\275?\037=\275*~H\275\370(\034<\000\216 \274(\250\010\2757|u\274s\341<=\265\031\266\273\217\272\262\274\347<9\274\001\243#=\322\227*\274bk\336<3\324\242<R\270\001<j\355\304\274G(\341;nm!=\300\354\247\274\0362+<\307%\240<p\305@\275V3\373\274\357\210j<\271\2445\275\002\024\207\274\2049\001\274\276j\362\273\331\337\335<\026U\001=\034\272\017<\366\271x<e2?\273E\013\20590\275\001\273\307\233\363\274/j`\274\3120\017\2756\t\262\274w\"\007\274\355\002:<\256\300\020=\032\213\010=\224.\004\275\313\220\014\275m\254\341<\223\270\363<\010.\222\2746\214\225;\204\205\237;j\t!\274\202C\023=h\017s\274\002\361\312\274)\361\"\274\216~);\254\001\021=T\351+\275Dm%\275\205h\227\274h$\327<\216\356E\275\0242.=\204\212\254<jdB=\005\256\204\273)\217F\275\210z(=\002sA\275\271\017+<\267\335=\275\345\304#\275AFA\273\267\304\037\275\211\024\037\274\342=\244<D\203;\274\033>R=\202\223H\275\222\010\001=\324\'\275\274I\035\365<\200VT<\300I\023=\340\324`<\340\353@=J\013;=$\326~\273\341<\273\274\256>@=\200g\310\274\361MN=\355n\210<0\036W\275\247w\007\275\277\343\337\273\313\335j<2\321\'=\204\261\323<\261\307\341\273\374HV=\341\362\276\274\004\201e\273*\034J=\267\270\026=j\374\023\274\300!W=\360\2443=,B\371<\270\264L\275\207\327\207\274!\314=\275z\371\240\274\036`H=W\345G=A\277\275\274\362\363@=I%*\274_D\n\275\300\262\367\274\212\311\027\275\026D\013\275\377\337$\275\205\367\355\274.\323w;\357\220,\275\255\021\223\274?Rh\274\332\300\306\272\333\344+<\214K\363\274\267\251\035\275\225\376+=\220\2414=o\350\331;\273\270>=:\362R=O\264\364\274pt\353\274\302\302\315\274\254\r\372\274\253c\312<\n\314\242\274-\263\025<\\\264\331;*\006\277\274[hX\275$S\324\274\306\224\304\273\301\263&=\020^\257\274Q\371\313<\265\364\024\275\352g,\274OA\326\274Hg\336<b\352\272;U\023\r\275\212b\"=0\250\217<\306\314#=\326d\303\274is(=\226\262\367:\304y\036\273\000\314\003=\265<\361\274$\373$\275\322\350\016\275\305\245\352\274d\375e<\205\363_\274\275\263\"=\036\027\025\271\367\275\370\274\371h\003\275\275)9=\272\305,\274N\322C\273\026\311#\275\260\2760\275kc\002\275\273U\231\274\211?\207\274S\342{<\'G\010<g\261\263\273\013\236\330\274{\337\352\273\021\214)=z\353\317<W\221\345\274\301\037!=E\364\234<Q\373\035=6v\022\275=\347\r=\355\372J=\254\007R\275\215h\224\274\262\314\002=s\034\216;kh%\275N<\237\274|\016\022\2749\222&\275\n\227@\275\372\235V<\021\342\"=z\345\306\274\376V\020<&\354\333<8\305d;\364\212\214\274Z`/\275\317(O\274\252L\003\275)\2665;\200R\006=(\3211\274YZ3\274\260\322\314<~\242U\273\255\355\017=\030U\016\275\372=\216\274\220,l\274\\\215\342<\211 \356<IZ\211;\262n,\275\36536\275\244\300\306<\247<\001=\244\202O\275u\321{\274\341S0=\265\252O\275\343\224\376\273Z\213O=\300\332\036\275u\264\376<8\264k8\020\241\337\274\267\202\007=_\232\273<\022\177L=}H\226<\273&\017\274\267\3548\275\234\373\003\272\364\2010=\222O\373\273g)#\275\207lz:Z\201\374\273\333\"\240\2741\001:=^\177*\275\257\304\035\275\330\001\005\274\277\233\021=\303p\332;tAy\274N\3021\275\033\333\231\274^b\004=\372*\026=J(]\274P9\020\275/<\212\274\265\334W=\252E\313<\262I\304\274\232\357\n\275z4\344\274m},\2756`#=\324\0277=\276\2438\275]\262\036=\211\223w<XJ\017\275\253E=\275\346\346 <\252G\306\274\203\347\372\274\0201\215<5+O=\024X8\275\322\252\376<E\314\261\274\246\"\n=\377\212\002=hx\025\275\244~J=\002L\002\275\331\314\361<fF==\022\200\353\274\304\025\333<\035o&=!\202:;l\025:\275\202[A\275\372\3567<&\247\354:U\222\342\274\370\221\360<`SD=\320pX\275\337\031B<KWJ\274\300n9=}&O\275j\352P=\306\331\320\272\340=\036=\307g\006\275\375B\030=@\251\016=\260`\232<\014r\007\275\013\214\347<\353u\306\273\200\2146\273\230\251\007=\034]\312<3LN=:\006a\273\003\370;\275*\'a<\224\202\306\274~\010\250\274\332\232<\275NQ\354\274*\027\341\273\031q\007\274\316|\263\272\343\036\027\274\244\351\321<\235\254S= \241\025=\244=\024\274\321\030\206<e@=\275\202\357(=+\010T\273\242YJ\275\214\320-<\333.\001\273\263\324\250;r5#\275\036\227\033\275\354\014\032=(\214\005=\226\035\n=\305\275\005\274\316}A\275\377\332\373\274\322iT\275\303D\n\275\034\016J=\030t\237;\254j\317<\306\252\006\275=R3=`%\036=\214|<=x\324\333<\231\321(\275\222\016N<\311c\267\274@z\227<O\020}<\317\342\020\275\n\217\347\274\237\374\322\273P\224r<\\\323[\274\224fD;\\\303\026=&\352\222\274\303H\241\274\037w\200<\364\2269\275\\\177B\275\370\3051\272\276\361\234\274\307\265\230<,N\026<\363\3026=a6\033=|\224R=\311\252C=\326^\367\274\325\330\332\274Q\226\240;\006\215\207\273\034%H\275\333+G\275\304\010\254\274\233/0\274-(x\274)\243\306<\025J\261\274\202\033\357\274\271\315\262\274\204\220\251;\367\024\007\275\002\021\347;J\211\237<\226u1\275\221\\\207\274C\343j\274\336\306+\275\316\223\304<\0273\007\275\201\t==\254\022$=\250l\035\275\035\0226\275\255~\224<\325\335^<\274Et\273\332\266\025\275\303P\321<\333\tC\275\302\"W\274w\031\021\275\271q?\275\313U\264<I\302 \2750\242+=\346\254\300<FLE<\033\365\271<i=*\275^\024\335;P\312\257<\263FA\275~\270B\274\025n\321<\"\321\341:H\277\263\273\004\311\346<,\262K\275\333\022\365\273\321VH\275\304J\256<\272\303(\275g\252\353;V\r9\2750\032\201;tM[\274\022\031\327;\300;\035<\303DI\274,\315\000\274\020\3166\275\332\232$\275\256nk<n\n\026\275\345\030\344\274\033G\320\274\205\231\202\274\330/\204<:\007\374\274\037_2\274\234;\036<\206\201\014<\241Q\350\274G\242==\027UR=\247B\245\271\273\364@\274g\366\217<\324\272\017\275\245#N;\303V\203;\365s\224;\224\360\031\274^\236V\274\213k\024\274\350\325T<\322G\254<\252\354\225<`{-\275\014\363G<8-/\275\251\320\301\274om\360<\271\256\262\273\306\005\310\274\313\235C\272\310\212O\275)\267\255<\t\\\362\274:\237\r\275];\266;\210\351\035<(\007&\275\315\300L<\306A\006\275\006\3502=g\274J=n42=\354\206\376\273\026\221E=\227I\032=\233\253\352<\221a\353\273\376g\034=P\020/\275^HQ=l\240@=\026\324\345< \355!\275\030\2527\275n\241\332<Z\207\000<tz\026;\205\260\332\274\316\\\036<]\034?=\222\373\227<\303\225\222\274\354F\036;\331\205\2259\365\2126\275`8a:\372\217Z\273\266\371r<\013VP\275N\213\003\275\277\324#=h\347\302\274\213\2348;\372\3412\275C\312p<\273\2268<\365\243\017\275>c\366\273\r ;<t6\220\272P\377\037\275\372\037\304<\\\375?\275\336\310L;2,\227\274v\350\002:E\007\236\274`\247\006=\'HT\275\272\264\214;\260\344\020=\031H(=\376\014\007\274##\371<l*\307\274VG\000<\262\340\367\274\324;\026=\362\326\027=P\344\"=\217\373\002\275\375(\017=\332\016\013\274K\276r<\243\264\024\274O\275B=&\321\021\275\004\234\013=\251\177!<\213\255\232\274\201\355[;\376\006\007<\312\201\014\274\346\227\002=\324\355-=\335\307!=\t\245\325<9\277\013=u\275R\274\231+0=\355\004+\275\215\332\r\275,Q(\274\206\365\251\274\374|P\275\250O\025\275\372\016{\274\236E\037\275\271\000\310<\211l\017\274\376\222\340;\355j\376\274\212\033\236<1\275\206\273\036\226\363\274\273\204\221\274\210\372 =\261\031V=\031Q\034=\016\370\217<\215\336\263<\234\352w<\217\2670\274\332/\332<V\301G=\356\013\267;\355\316\221;\225\2258\274\203\210S=@\316\345\274@B+<#\357I\275\371\212\362\273\347\203\037\275\021\241\246\274M\336B\274\260\301V\273\225\017\"=\247\272\325\274\276\006?<\275?\013=D}\314\273h\3200\275\"\331\264\274\nM\217\273G[g<\232W2\274\007\355i\274R\263\036=_\273X9\366\225\256<\256\305\200<\332\204\261\274@8\331\2743\221H=\343k\224\274\234\220N=Py:\275\230\rn<_%2=\020\274\323<\024\257\232\271\346\377\022=\365\320==\032\314\334<\000\346D=\323\222\260\274B\340\375\272 \007\037=+\202>=eS\245;\220O\261\274\025.\025\275w\213\264;\211(\374<\324\302A;\032a\237\274\226\243\211\274\231H\030=t<.=\276\266\"\2758\020#\275_/+=yM\204\274\026qS=\037\377<=.7\257\272\021\357C=\214v\217<\270MM\275\025\227\234<\r\347s<:e\000\275f\373u:\010\353\024\275\301\203\017=\036\035\'\274\201\312\335<O,\022\273w\000\022\274\030U\r=\343\032\370\273T\311\006\275\321\256\362<\324\364\242\272\274O\232;\222\257\350\274\354\317V\275\363\375\'=\261:R=\\\033\256<M6\304\274/\305\020=\242\271W\272\341\177[\274\017Q?=\342o\026\275N\020\243\273O\3148\275\'`\336\274!\002\312\273\203\3041=\t\017\031=\231\366\350\274\236.\354<\264E\363<)5C\275\202\252\273<\320U9\275\344\002H<\212.6\275\260x\225;!KR\274\234\262\334;\004\360\345\274P\300\323\274e\370\014\275\377\037P=D\010\312<]\216\330\274]\245\266;snm\274\374PI\274\031\362\300\274S\333\257;\034\256X<\231\302\343<\235tU<g\223J\275\005T\355<\204n4=2\244\204<m\010\212\274i\ta<\242\212\230\273\331/\n\275F\342\342\274H\337\371;\001\232\230<[\335\217\274-\002\347\274\'\326\352;\222`\003\275\375\336\201;\r\307\315\274e\026\304\274\034\264t<&\316\336;\233\250\256\273\377D/=m\330\020=\336\010\346<\031\274\244<\0078\341\274\212\212\366\273\246m\017=C\250\340<\365\025\014\275\025w\020<E\020\347<FX\232:\355\266<<\213\374!;\275H\355\274\214J\327<\2504\033\275\261U\027\274\360\217\274\273\260\002\226\274\215-\'\275E\334*\275\006\333\346<\375\201\221\274z\025K\275ve\005\275\241\262\274\274\220\004\277<\260\002<=\216\262\233<\260K)\274\214\360\344\274\317v\002=\017\017\370\274w\031\362<\217\031j\273\324\221r<\365X\243\274\276\260\036\274\312\353\232\274W\016\340\271i\010(\275\004LU\2758=\240\272xD_<]\3172<E|0\274I\225}<I\217\355<\2613\374\274\246\3118=\272\227\304\274\\\337\303<-E1\275\223\333\027=\247\253A\274\020=\030<X\245E\2746\"\277:\037M\263\2744n\305\274C)\021=Ovd\274\353\231\250<\003\274\243<\331}\022\275\022;\212\274\321r8\275S\205\t=3\352R=\221\200V\275\270S\030\275\003g\005<\207f\320\274j\244\270\274w\314S\275\006\264B=\251\2375=c\325\204<\2365\242<i\360\244<uuX\275\025|(\275\n9R\275ko\245<\263\027\336<\226\205\252<\037\036\026=\261\315\355;\276a/=\345\035*\275n\270\311;I~\361<D\036\206\274<\336\347\274\221\347\027\275CNs<lx#\275d\245\233<\273\ta\274\363\343\367\272\277\t\351<\310\226%\275Rs\374<\2328U\275\243.?=\236\277\013\273\3649\177<j\023\351<\370G\000=}\307_<E\267 \275]\335\026=lT\032=@\327N<\206\337\233\274\265\330\206\273\304\236H<\371\276\203\273\347[S\275\364\326\016=\367J$=\021\323\037\273(\304\n\274\264\355\t<\204FJ\274;\343A=F\224K\275\316Ft<\333\263\223\274\307\344.\275\033\3267=\004\342\r<\331Y\245<_\265\013\274\022\341\366<\342\230I=\021\350\234;E\255\364\274\316y\263\274\260\323\204<\"\342\216<\210\330.;\016\314\240\274#\346\263<[\370\347<\254$B\275\365@\371\274\032}w\2743\026\215\274\320\037F\275+P@<;\0169\275?\024\367\274d\\<=/Rj<\014\026\334\274\234\234\027<\323sD<\270\347\021\274\355\020\277:(\321#=a\333\354<\303\310\221<\355\035-=\310\006\301<\274\344\360<\342|\320\266\350\312\347<:\345\005\275\271:!\275\366\215\025=\217\037\014\274\354w,\275=\235\313\274\2601\216<6\241@=-\225&\275U\250P\275D\2138\275\270g\244<\252\317\322<\201/p<\033UR\2758\346\340\274\213\242\367<\272\013\256;v\211\r=\007XE\275\310\036\344\274\373\320\264\272b\304\303\274\342\350C\273\n\361\345;~+L=Z[\177<~_$=\324\263\023\275\374\223+=\327v\202<\235\326r\274\340#\010\2749\325\266<\n\334\034=A!\\<O\373L\272\233}\222\274\342\367\305\273\002L\036=\357\311\\:\204,\324:,)\336\273\251Ea\274\207\240\034<\026d.<\214\235\313<+\004\322\273|\014e<\363R\007\275*\031\322<\302\367\217\273K\030\260\274B\235!=\304\004\270\273\316<X=\010Yb<@0[;)\034\206<7\002\303\274\010U\312\274\237\304\275\274\360@\236\272\372\1778<hS\326\272\351\007\000;+\356N=\244\257O\275\234F\030\275N\201\232\274:\334\343\274\032\227>\275\330{e<\352\256\007\273\237\3203<\026YR=k\304\013=\356$T=Tl\031\274\354\234\267<\221x2\275\224p\271<\236\313\"=>:\372<^\303\031=\244(\370\270\241\354\353\274\217\256\243\274\316\341I\275hw<=\324\272\341\274\3540\000=Po%\275&16\275\371vX\275T_V\275\300\223\034;\215\335\324<\317K\020=\310\007\271<\027\236\365<\216\323\222<\324y}\274\257h\032\275\2744\325<P\335\021\275@N\316:\376T :\311\005\022\275]\255K=\317c*\275\300\024\025=X\037\r\275\253J&=yr\315\274R\252\272\274\024f\365<_\267\004<\351\300\024\275\235\277(=\335\364\035\275\250Cg\273v\313R\275\204\244;=\035\200\362\274\352\304*\274Z\317\026<\'\274\306\273\215.\033\275e.$<R\346W\2755\261\351<^S==\232\214\320;\335E\267<\340 \020\275o\r1=\222]\r</\221v:\363\017\232\274o\031\023<\2043\303<7\331\003<\374\340\231;\374\354\243\274\257\023,=Ue4\2757\251\341;\330\007L=\t\004\252<R_\236<cj\035\275u\327\006\275\253\274\371<\327\300\200\274X\315\023\275|\350\313\274\340\364{<\304\001\033\274[\030\026=eA\000\275\215\264\n<\236\365z\274\212e\246;\017\376\002\275\273+\000\275P\033\020\275\323\357\020=%\370,\274\365\2378;\306\250\024\2759\nA\275\371\3359=\002\353{<\266\307k\274\377\255J\274351=\335\034\216\274Z\234\242<9\250\244\274d\036\032<\237 \271\274S\206D\275\241\310\242\274j\236\002=^\237I\275q\271\022\275\323\025\302<\035\\B=\267\321:=m|-\275\334\337\337\274\363\275i;`\270\024\275\263Q9\275\347\374\346\274\234\374!\2744\037u<x\032Z;\3354\245;i\210T=\223\366\305<\356K\261<\315\263.\275~\201G=\306\332W\274\206\\\006\275\351\327\007=\227\331\225\274hI\204<\000\027W\274\016\252\212<\361\007\220\274\370\304\033\275\344\246U=\360_\227\274\257\037\320\274\305\007b<\3036\002=s~}<\362\354\351\273s\327\320\274\204\024s<\014\271g\274i\014w<\355\242,=\233\005\262\274\3409\366\274\372#\033=)\035\221<\006\302}\273\350\224\023\275D!*=\341\037\020=1\205\241\274w\016\336<\\\260@=\204\031(=\025\352\221\2747U\247<\306s\215\27402+<5&\244\274Fs\003\275\201^O\274\221\002\031\275\271\032M\275\241\2635\2753\266\030=\243\345\326<@,\362<_\216\020\273\341\321\031=\n-U\275\230\255j<\321\240\223\274)T/\275\236\261Q=Zc\233<\337N\252\274\325\365\032\274+\325\224\274\257Dw<\227DA\275\222J\352\274<4*\275\014\2141\275\277L\244\274\332\236\302\274\202v\034\275\250+\207<\202]\361\273M\206&\275\023o\020=#\316\r<\001\027L\275\244W\364\274>r<=JB\010=\251\022\022\275\352mE\275\270\026\377<;\356\016\275?i@=\202\236\'\275\362o\373<\223j_\274\323\375\204\274!y\330\274\305\236\321\273\352Gw<_\301;\275\"\340\010\275\0342Q<\227\333\265\274\243vb<FA><\353F\016\275\350`\026;\241a\350\274c\033\322\274\311\037b<\0174\n=b\274R=\367\305L\275\325\371\204<c\365U\275\210\206\306<\257+R\275\265\337\017=Bk\330\274a6\241;\005\301\023\275\245\2276<W\017\002\275\352Oo\274\273\354\313\274\217I\243\274\376T{\274\275=\225;\377\345\r\274\336&@=\227B\016=D\244.=VG\210\274c\313Z\274\327\361\000\275;\232\305:\321\324\261<\212\360g<\365?\205\274V\253\235<h\366\231<\300\237\234\272\214%@=\374\027N\275\024\\K\275=\021R<\220\022\210\2746\227\311\2743^\021\275\307\035T=\336j\351\274t\375\217\274\037\314\216\274\033r6\274\3123\005\275\'~O=5\300\273\274\346\242/\275A\315\330\274\242\367\202\274~\362\342<\313\313r\274\230!\357\274\200$\007\275[\363#\275c)\316\273\002\324\274<@\317\232;\331\210\336\272\353\270\266\274\266\215\360<{:W\275QnJ=<~\024\275\255\330/\275}x&\2751V\"=\226t\351\273\325\246\036=\240<\364;\361\034\225\274$\335)=T>\021\275\357P\312;\333\2521==\275+;*\370\n\275\310\013_<H\0033\275y\241\340\274\234\\\001=\221E\267<\r\221W=~\207\272\274\344s\007=!\"0\275\327\244\326\273~\367\020<KnK\275l$\261<g\365#\275\273 \275<#U\347\274\033\371N=\266\211];\245\223\330\274\313\010\266\274i\211}<\211\265(=,=Q=\261o\004\275\r)\t\275\204\004\241\274\177\000\261\273\264p\335\273\227\233\305\273\367\2533\275\325\210C=\202\234J\275R0\013\275qkG=\003vR<+\355\251<\007@\004=\360\361\354<\213\240\257<\315\002\202<\211\013\035=CH{\274\3204A\275\027I =J\351\036\275\317\302\342;\377\273\225<\313\372I=3x\r\275\267\330\314<*\356#\275\252\202\316\273f\366\335\274\2528\220<Qq\007;I\374&=\251\342;\275\007l==\202+D=\260\324\206\274|\354?=\220l\304;\255]E\274\314zX\273\334\360,=\035N\205\274\352m\t<\007L\204<\243\200N<\371\222c<\253\255*\275J\255\335<\212\312H\274\234_D<g\263\342\272b\377V\275_\036V=\204+\003=\316\330\026=\312\315M=\260\375S<\307\255\016\275_\235\223<\213\317\306\274\205\330Q\275\375IG<zb\032=H|\000\274<\302\237<\215\307\231<8}9\274uAJ=I; \274+\3760=)x\033=\372B\327<\252d\373\273\0077\000\275\2020\374\274)\346\305<\364\344\017:\345\226 \274C\321\032\274Q\306\236\273\332\010\n=\375\207O\274C`\356\273\033k8\275C\033\030=\334\236\354;;\207C=y\235\211\274\361@\026\275\274\302M=\002\226\363;\243\343U\275,>\013=\304\336F=eN\037=\352\242H=R5\007\274\2526O=\356\211\257\274D\313\032=\317\324\027;\362\326\250<\032n\n;\263\226T\275\030\023L<\177\337\271\274O$7=Q\0274\275\276\352\243;\237w\334\274\351U\210\273\253\323\304\2737\342\231;\226\0250\275\376\036\034\275\232\371,=\270\024\320<B\264\r;\201:\023=a\276\317<n\007\347\271\21452\275\035\037\325<\362\374\256\274Cx\372;\222E\210:J\250\351<\266\360-\275\rX6\273\320\334)\275\\\024\204<\345>\304\274[\215*\275&\276\201<t>\003<\221\224\001=\374\372\226\274\003k\217\274xN\006<n\236\366<%\005*\275\325P\363<\342I\306<\350\n\005=\312\257 \275\330\353\336<F\224\225<\272t\017=\024\220\207\273\t\342\360;y\223\023=(G><k\232\270<\003\001\002\275\367\324\035\275\276\255\335\274\265]==\223\362\006\274\254\275Y<\317\2044\273\211\022\354\274\240Q>\275\334@\006\275\237v\'=%\256\013\275\345w)=\207\3647<{\t\027=\006W\022\274\225Q\351;\256>\325\274\023\0320\275\231\000F<g8\232\274\t\254\306\274.)\320<%\250\276<\3658\022=\277\014,=\027j\305<\317\214=\275p\204\222<\272n\003\275\316nG\274\2452\323<\330\214\362<\255\177?\275\2271:=\002\262\237\273AA\335; \2727\275]\244\001\275\205\017M\274\0143\240\274\326\216\320\274Ly.\274A\232\235<\016\313\307<%\374\231<\235b%=4,D=\263\'E=\226 \307<W\001\271<\256\300\002=\355\250\365\274\212\257)\275\253\002\333\2742!\221\273E\256\243\272\331\3310\275\314\017\374\274\332\325v<\346^>\275\251v\014\272\005_\345\270\276\370\361\274\362\303T\274\307\261\307\274(4\004=\226<\357:ux\007=3\037\224\274\371l*\275j\354\270\274X\320,=\320\3568=\346i,<\367\316F=T\004r\273\030\352,\275\300.\204\274\251\305\247\274\317\306\344<\301\246\005<d.V<\227y@=^1\006\275>/$=\203\376\027=\310\n\306\274i\t\237<\342\364K=\361\2074<\277\240\360\274h\274/\275\313\031\343\273D# \275L\312I\275\253\032\020<J\013\023=\322=\314;=\\\253\272M\007\246;\017a\004=\335\204\027\274\3366\261<K\221\027\275\270o\213\2748\324\270<\300\310\007\275%8L\275\035\357\000=&8\241<\277/\021<B3#\275z$\364\273{\270\321\273M\276\365<\037\001\244\273&\316-<\263\372\027\275S\361V\275Me\347<\206_\'\2750\304\007=\0326z;@\255\250\272089=Jy\024\275\260_\240<=\0138\273\255f3\273Ln3=\324\375\206\273\036\377\031\275g\3524\275\035\200\004=\307&\261<}\242\037=o\275^;>\003\275\2748t6=\021\265\253\274l\207W\275\353\264\206<\030\324\361\274Ph\014<\306\233\207\274\332Q1<\300\323,=l\253\326\274\347\224\261:y\022n\274u\017\206;\305\243\200;`M\212<\004`\333\274zQ\225<\223S\024\2741\262\253\274\206m\261\274i\213\r\275\323\344\017\275\316\243I\275~%\215<\255\260F=kL\270\274\253\362\036\275\232\025(=U\r\326<\232,\024=\226\272\326\274y\001\t\275\360a\243<\333\027\023\275\021.4=K-\213<s\352\232:\3161\340\274Y\306>\275Z\275L<\360\n\230<\364\271T<\365\314%\275|\247\367<\303&z;-\370?=\036c+\274=\242B\275\205\300\336<\023\031S=\234\352\010\272\311\222\264\274\213c\013\275x.\330<\336c\247<\224\203V=\231\326I=f\374\231\274\307i\304\273R\2624\274\245F/\273\243\'5<\267\273\036=\352C\'\275A\202\205<\343\317\025=*b\267<\252\342!:C\030\237<:>\341\274\334\257\274<\355\024p\274\003s\001\275\300\t\013;5\345\027=\300@\271<\347eH=\343\t\251<\342K\233\273\010dT=x\254\027\275\366\221\030\275jl\033=\254\017\003=^\323\013\275\270E\373<\006\022E=ZKn<\005d\220\273\017\227\346<adS\274\221\004!=\037i6\275z\0356\275ss\202<+_\t<\362\317\177<\367\315\302:\256o\246;\254C\366\274\320\207\356\273\332\317\351<\3279K<\013\265T=UaS\274Y\005\001\274\364\017\026=Q\242\315<m\237\266\273\233\001\026<\n\321j<\361\254\267\274T%\245\274\340\355\020:N\3146<$1\235\273\2704F\272z>h\274C\357a\2742_\020=QeA\275\033\365+\275\006\227F=\360\273X<\261\234\237\274\342\007\220<\353\232g<z\034\014=j@\230<_\360\000=\231_\010=\003!\345\273O\221\261\274\312/\353<,\254j\274G\337V\275\264dR\275n\245\"<\337\033\314\274F\267\334<K\007\335\274\220\313)\275X\243u;%\310\371<\220o\223<hR\020\274w\376^<6\312\271;\3622\211\274@\217>=uw\266<C\304\246;O\261\006=\001)\353\274`/w; \327(\275\377\277\317\274)\361$\275\335Q\215<\232\333?;\304\302_\274+\221V=; `<d\004\265\274CN\014\275\356^\373\274>r\022=l\254\031=W\245\020\275\232\004\321;5\3205\275j\265\366\274\230\3656\275\370\375l<\024\222\254\274\265\347\360<j\236\n\275\342\352F\275\002\276\t=n\373;\275n\213{\274Zl\352\274\204\310\220\273\364\'\342<\247\323P=\r\370\027\275Y0\'\275\371gT\275d\nN\274\224\350\342<8\200b\274\206r\352<}i$=\301\352\260<~\240\215\274\340X\034=\363\t\317\272l]\036=\260\201/\275\234(\017\275?i\323\274\220%J=t\374\302\273\261\306\311;~\021M=_\240\'\275\032:\264\274ba8=\2115 \275\317\025\"\274qL6\275\205r\027\275\365\337\240<\377\337\306\274\344\024\016\275g;\004=z\334\332\273\264\314\r\275\013\234\2678\330a\005=U\252\023=\330\023b<\232\027\036=w\334@\275\030n+=?\262\014\275\373\003\337<\334\317\002\275\024\'\240;Y\302J\274\227\340\227<\351\245P\275?\266K=\356\035;\274\013\265=\275\364\235\244<\252O\334\274+\253\202\274\374\267\023<\014eV=+b\201:\270\017R<\3155\262\274\333\315\n\275M\206\213<\365\347\315\274\026\270\201\274w\200\\;4\265U\274\034\323\026\274\311\351\000<\'\036\253\272\250n\363\273\211\304+\2755\250+:6Y8\275U\346\375<\357?=\275J\334\002\275\t\222\246\273\262CR=Ib-=C\300,=\350q\275<\255\0178\275\346\330\223<h\374\245;\255\010U=\213\314\314\274\0063\001\275\215!;\274\322\211N\275\237\247\t\275\277\250\324\271\nW\216<\224\250\243\271T\330*\275\220\022R=\322\346\252\273\2037\324\274\234\220*=\3363E\275\256\312#=\275?\010\275\315\204\261<\254\252R=\323\200 =tI-\275\215n\317\274\332\223\365\273\034\370l<\177\004\302\2721\nj\273\252r#;\213\276\365<\200W\206<N\367\334<\315~U\274\277E\006\275t\3334=\337\350\324;\247a\234<\220\364\003\275\016\371w;q\336\242\274h\364[<\000\271L=\t\345S<\220$\365\274\364\277\264\274Py\212;\205\262\001\275\027.);\252\222@<\244\306+=6P?\275kP\341\274\376\264\332<V\'\031<\020\215==\311\311\205\273\347wU=\030\2375\275\323q\023\2750~-\275>Z\312\273\305\236\207;\362\177\030=\202AQ\275\024\316O\275\275\342H=5\031\031=\274HG\275t>\247<\001Z\352\274g\273P\275S\375\225\273D\253\025=\210\r\014\275\365\325\020=D|\245\273\177O\324<\n\204:\275\003\225\031\275\017p\306\274\032\371L\274\016\031\336;\350\210\016\274\253\255Q=\343\3213\275\006\236\034\275}\367)\275\364\n\334\273c\356\022\275\3715\017\275\024\223\262<\017\211\246<\364\363>;\000\250\001=\234\346V=\354\251\344\274\272\250\325<\314\324 =\321\342\002<\376\310\275<\231\034\366\274|f6\275\037\034\336<i\004\213\274f\222\250\274;\016\243\274\2619\327<\275\002,\275\223+\007=\207_\301<,2O\2755j\034<2\335\005\275\272$\247\274S\2621=\225w#\275\254]\016\275e(V\274Y\377\265\274\300k\366\272\013\001,=\204\023D\275\177q!;\323\322\032\275\367k\275\273\375\231\"=\211\222\376<\323$S=$<\204:b\032\363\274\220&J\274\331\355\017=\030\220I=p\227\022=k\352\357<H\254>\2755\322\003=\267oH\275\211h\325<\362}!=~\343\2509\317\320\023\275\272\3775:Ql\310\274\211\206\337<\311N\n\275\353R6\274\003\305\014=]w\265\274\3004\214\2748\242\035\275\222\nJ\275\267\035\323;\232P\003<O\370\n\275})?\273\324\330\357\274/\355\220<+\320\314\274\034Xd\273<B\251\274\230\022,=\314w\021<U>\366<~\226\205\274\037n\352\273\316\231\354<\307F|\273q\240J=\336_\244<\272+\225<\032m\370:\314\370\\\274~\336\372<[\023\031={\264V=\375&\204\273\254\247P=?\257\222;s\232\204\274c\242v;=\313==\0224,\275\322\340\334\274\314_\307\274\336\255W\275\276dv;\032h)<kH2\275\317\265)<\302\203\210<\007\267\234<\300\337V=\320\376r9\005~\347<rU!\275\333\372\003\275\353Kb\273\345f\305\271b\254\007\2754\201\250<\375\035:\274\331J\224<\240\373U\275\000k%=K4\241\274\213\306\216<\363\226J=\373<\300\273\220\342\263\273\331\345\027\273\006\207\235\274\362\027:=\020/\034=2\235\300\274\214WI\275\346~\266<\332\376\224\274jh\301:\262o\017=\024\324\274\274\355\327\317<\323oA\275\365\277\255\274\235\342S\275;\3360=\034(;=D\346\302<&A\321<V\254\016\275hX\274<\342\r7=\235r8<\037\371:\273\3408\n8RX#=\331\302\366\272=\205\306\274\330&\027=+\322\034\275\244P\006<5k\211\2735\277\206;>\271J=,\030\026<\177\013\030=-\263\023=;\033\251\272\335O9\275f+X\275n\250\033=\333l\"=1I&\274W\202\250;\327\027L;C\335U=\016\036*\275\321\003\010=\273\312\223<\335o\372<\005?\333;\344$P\275\252\304M=]\310R=\330\036P6\222N\035\274\311Vc<|\'W<K\335\327<\241X\033<2oQ=\351C\013\275\212\364r<$\0279=\356R@\275+\326<\275\217\245\021=\366E\270\273\210\032$\275\031s\021\275\331\330\235\274\017\031a\274ArX\275\310\344,=\030\267\233;\266\t\247\271\367s\243<\312Z\001=\320\246\302\274\272\'M=R\253o;\004\301M<\270~\302\274\371\251 <\032&<\275\317H8\275/\371\036=?\312\004\275\307\257\355\274c,R<\324|\'\275\244* =`\036\023\275\026\351\366\274k%B\275$\370\005\273\264(\263\274\303\037q<\207/H=5\205\357;\3370\'=F\315\315<|]\014=h\313\210\274W\322\302<\264\261<=CK\340<\323\203\365<\026\227,=\376\340&=\270\2308\275\211\177%\275\270Q<=\303\000\325<\316\036\004=\303\0218=\255\013\005=3\016!\273\364\306.\274q/\177\274W\200\021\274\344~,\275d=\211<\214\265\316<j?4\274U\270\005\274#\'\221<\027\'\215<3\005%=\245\020)=\271\230\017=\005\362<\275p0,\275\036(\213< \2336\275\257\332\021=\271\271D=\255l\347:i\374\'\275\036MN=\270\332b\274,\035\037<\315\nO<6\224\305\274/d\232\274O\307\025\275_[I<b\232x<\205L\371\274wc\372\273\314j\331<\366\244,\275/\021\000=\200e\253\274\2508)=w\276\004=gnW;t\2730\275P\315\022\275\245&$\275\347\355F<-\001\t\273\324\303\222<<-M;\275\261X\274\307\355\335\274\270\357a\274\210\211W=\324\335\025\275xV.=f\035\017<\315\324!\275\0235\232\274 (6\275J\363\214;\343\355\331\274#t9\274\245K\353\274\203}M\273\030\216\023\275\206\206\277<\233\327%=\004#\303\274\323\3675:O`[<N\210\261<\017|\372\274\304l\241\274\207U?:H]k<#Qd<\301\272\247\274}LX\274>d\371<Hd\367<\000\021\317<\265\367J=$\371\t\275\364\010\007=\021\221\237\274\010{\005\275\276\322\345<g\036\340\274x\350\017=:o\376\274\035E\006\275\215\003$\275N\245/;\357EB=}2\253\274\016$\230<`\205&\275.1\303\274\016-N\275\274f\244\273%\0301=9\275\263\274\016\r<\275\330\342\354\273\227\\/\2759#\340<\360\326Q=3\372\343\272$\261L\275;\210S<nXX\275:\225\222<)@\025\275\022\335\217<)\007\301<[7\374\274\354g\374;\207\001R<`\006\021=D\316-=\334\235\013<\222\302\311<\3747m\274\332\nB\275az\367\274\223\234U=#\336\013=\245j\311\274.x\013\275$RP\274\352&\225:s\313V\275\'\231\325<\375\272:\275[\033\026=\354\260\036\275\247F\353\274\267\222<\274&7\327;\0035?\275;\034\325;\2008\344\273\021\033t\273cu\027\274m\325=\273\377fb<\370\330\032\274\021,\'=\217*\326<C\306\226<\"q\t=\004\230\336<\215\330\215\274o\201*\273,D\007\275~\3522=\022;\226<\371\n\223\271D#\006\275\0202\220\274yp.\275&$\240<q\320<<\326\302R\273,\240/<\227@\027\275\210\205\234;\342\007D\274\374YI\274\204W*\274\277\3229\275\316\215i\273\216\2739\275\260\311\237\274;N(=\035cT\275\373\226m\274\267\327H\275dQ\025\272H\323\247<t\304\234<\250\263\'=]G\r=\0367\352<\374\032\033=*\203k\2745\350?<\212T\312\273\215\307\265<\207/\022\275\231%\344;~~>\275\277b-\275\360\372t;\367\014\245\274\355\241#\275\224\352\224\272e\246L\274\256\200\342\274\271b\000\274\023\t:\274\256{\325\273Ob\320\274\r\346\364\272\225\327@=\357N+\275\211q)<\233n\355<{\265\376;\323\351 \275\024\321\300<\0062P\273\"\255\373<\241N\016\275b2I\2731\264L\275\303\"E\275{\237\277\274\233\214\232;9\324\010\275\002\021V\275\033\353&\275\230\363\377\274Ed\237\273\232\357\277\274\311o\214\273\372@W=\251\265N=\261\306o\2747H4=\035\300\334<\2675\241<\374m\203<\252\321\200;\'H\177<]\347<;\347\241\304<\262\201P\275\250q\342<\222\313>\274z\341\'=\240R\000\275RR\025=J\236\206\274\240\014=;\366{N\275\351_T\275nH\227<\347\243/\275(S\314<\022\014c<^(%=\212\341\262:\261\337!\275\335\312\024\275\252\177:\2750\3177=\013J\316<\332\033\"=`\0346<\204\220\002\272\302a\243\274`m\215<\230\204\254\271M~\226\274FM\312<fV\032\275/6\276<\026z\036=\221\347\005=-4\002\275\213\234W\275T\342\004=\'\317\244\274\252\330%<\250\007I=\006u=\274\356\361\037\275m\213z<\360\207\351<\345\243,\273\224E\234<p\270\206<\t-8\275\322\000\030\275\322\233\023<\021\322\'\274\003U\234\274\021\276\320;\220\372>\275\201\234\357<\216-\356\274\245\324\274<\334\232#\274jK\023=\226\262\220<:\210f\274\013kf\273\245\256\202\274\010\025!\275.\034\374\274\321\2209=\252\256\022<\210\2276=\310\346\003=\363o\004=j\306B=\320EF=*\023\000\275+\326\276\274qw\032\2744\\\275\273##H\275\362u+\274\225DD=\225\307\022\275\241\027P\275\353\327|\274\327\344\334\274O\036D\275\204oF\275v\3014\275j$\036=\372\036\"=Q\347\271<\201\310\n\275\037\307\375<Z\213\005\275@x\"=\203\t\263<^!r:\251\230K=\256\230w<\270\246\025\275]z\000\275\017=4\275H.+\275\273\271C=e,H=,&4=)\001V\274\3208:\274\201lA<;\302\323<\023\324\204\274\361\330\301<\346w};\236\000\324\273\364\r\231;\377\007=\274\315!c\274\233]5\274\3431\262<\250Z\337\274\210\2720\275\205\251?\2758eK\274\251E\231<\021\327U=\231\274\370\274x$\354<\220\351(=\0308&=>\316.\275\235\330==\2468==\035\257\354<\000}\233<[GL=/\326\312; y\004\275\253\274\341<\323Zh\274\301s6\275]t\210<6\034\272<@\271\341<\237\245#\275\220\307\361\274\245\346k\274q\323O=\274\341\345\273,S@=\254<\313<\177\\\224\274\366\367\353;\320J\367;\262\266\017\275F\231\271\274$\277\243<\300\371\034\275\230\241\206;\321\227\332\273\306\027\371\274+k\347\273\316\024\017=\212\265\322\274@@\027=1z\346<\245e\337<\321@\016\274\362\324?\275(\233\336<\334\320\001\275g\360M\275\3272\367\273\017\275\207;\272\206\273<\030\3728\274\016\352\370\274\022,\353<\177\005U\275\371\017I=\217$,=\231\0239=v\036\005=\201\273\224\274\333\215<=n\317L<ty\356\274]&\003=\353\026G<\002xO\275\350\373\377:y>$\275\0058D=c/\337\274S\034M;\331\360\016\275\313\3504=\261\3103=7\227:<\233\333H\274\234}\013\274\022H\344\2745\355\216\274\333\010+=\013\014\306\274\301}\216<\245|;;\350\260\245\273\362h\233;S\320\311;\202\204\370;_LU=@\354\352<\200F\323<\201\'\203\274\235\001\252<\232\321\r=v\203\"\275\002\364\331\274\207\2075\275u\277\332;\303\351\002=0\357M\274\343U\366<\351(\354\273*\251%\275i\210\213;*(2;\312\3301\275\312\023M\275\342\252\244<`\250J=\000\302r;Yi<=,\230Q\275\033\214\020<\310\0135<\2632M\275\32478\275y\201\021=Y\0065<\'N\356\274\362Ez\272\276\230\032=`\240D=\026\245:=c\355\250<z\037\235<a\302-;i\\\003=\027\217\t=\344\216\255\273\374\024\241<,\250W=\027\026\375\273\206\202\347\274\277Z\033\275T\3210=\007\226\017=W\374\364\274,\243P=\006:\234\274\326\261\022\2756K\315\274&\324\232\274\245>\0259\205.1\275\031\t7\273@\365\347\274\366\252\221\274\243h \274\"_M=f\2444\275\231/\317\274S|3\274g\014\271;X\3422=\371\325\010=0\364\300\273\2664\270\274\3340\032=\007\233\341\274c\002?\275\037F\024\275\037nB\275\"5=\275*g\216\274\341\207\010\275\312\223M=J\245\001\275\242dL=\026\273\301;B\026\027\273\245\261\345\273E\022\277\274s3\322\273\330-\001=\267*#\274\370\005\034\2754\370\350<\005)\255;\372\310\334<T\257\342<e\232!=\242\363\245\274\'\270\371\274\366C\236\273\204u\003=\347=\016=J\204H=\3367J\275\243wH\275\310\021\335<\262\333\002\274&\203\370\273.\331\275<\222t(\272$\337\252;V)\024\275\245\037\364;\350\220^\2735@\026=M\210@=g\374\014\275wO\277\273\354\232\004\275\351\2344\275\365mr\274\346\342\030\275\372\314\037\275\272\020\005<*\241G=\366h+;\037t\263<b\007\231\273\2353\353\274\\\203%=\320BD<\027\212!\275b\336\350\274h\261\305:{i\021\275$\270\032\275f\373?=\024t\003\275O\245K=\232qN=\250h-\275\330,\224<\325\344e<\331\314\313\274$\311.\273\331l\250\274l\256\307<\007\323F\275`\212\366<\017\353\020=I\025\006<\020\246_\274\226\"y\274b\351P\275n\342Z\272P\266}<\264\002k;\206\267\374<:b\246\273\000P\343<\017\235\240<=X\316;\313S\226\274\372\276\020\274\001\334\315<\323\352\036\275\227\255\200\274\004\250R=Y\023\354\274m\234\251\274\013\352\033\274Ta\234<YDb\273,\2415\275O\351\316<8\226\"\274q\277\212\274\341\2049\274\314I\n\275\000*%\275[W\377<\374D^\273I[@\275\341\363C<l\216\352\274\351\242\013=\214\223\273\274^4!=\266\206:\275\334R\035\274\017\333\035=\342\rU=+\004\021\273\320\001\n<M\n\365<C\214\227\274\220\211\202<\237\336\275\274).\330;T\256\203\273\022?8=\305@\242\274\324,\017=;\235\020<\235\357W\273\0251\273<\373\236\274\274\344(b\274\347\032\332<\177\021\237\273\272\205\202<]+\307<\357\n8=!\014\0029\334\037o\272$\245\'\275\207N\270<\347\335:<\206\342\010=\322\263I<\361MJ\2746p\'\274j\226\001\275\203Z\236\274!\201\207\274\342\314\360<\250r9\275b8\313\274}\2209=\227L\266<\342\224\317<\320\336\t\275\212e\322\273\304\334\027<L>\366\271gL:\275\302~\252\274\346\3601\275s\301\037=\224\326B=\267C0=.\"\376<?\202\000\275\215\221\355<\302\332\201<z\205\212\274,\230<<?\032\343<\037;@\275\276\330\273\274\354\342b<\263L\n;\267i\037\275D!\001=\313Q\013=K\306\372<\253qa<\246\273\306\274-.\022=#\261\000\274\372,2<@\235\337\274\005\210s;\340\353\233<\333\324\333\274v\256\324<|\321A<\365\327l<\372\034\245<`\322\335\274\3747-=\204\323\210<\302V-=\270\"\333<x\016<\274\252\211\331<\347?o<\242\002%=+~\222\274\225EO\275\200\356\005\275k\016\271<S0*=\327k(<\rxM\273\335{\321<~&C=\311H\'=I\217\020\275\324uF=$\224F\275\275\346\005=7k\310\274\365I\005\275\364UR\275\320-:=\346\326H=T%\234<\005\333\305\273\231OJ=\352\177\256\274\211\244\'\275\212L0=o%\303\274\313\276,\275\264\345\n\273\360\035\203;,\002\273<S1W\2754\'\253;\200#5\275\371\200q\273\002\0238\273R\326\364\274z\3262=\320\335\233<2\212\031=\237]\266<){8\275\257\3741=\216\364>=\316\212\365\274\243b\367;b\230-\274\265\335\005=\354\220\237<a;I\275\371\375{<\356\024\036=S\361\334\274\200E\240\273f\256\002\2756\2065=J\274G=T\350\034=}jt\273g\351\374<Aj5<\242aM<\033JD\274\215\357\246<\213\233\317<Q|J<\223a\217\274*\004A\275m\314\016<\276\262\313\274\250\351\337\274\203\316r\274\000\035\340<\031\276\354<\032RD=\026\014\r\275P\017N\275\3345\316\274V\302\021\275\226S(\274dL\005\275\214\206\340\273\241\'6\274\365\014\'\275\\\\B<\\\324\035<\310\221\333\2732)D\275,\323\001\275\351jG\275\010kC\275\352\361\254\273\262v\331\273.u\377\273w&\026;kOJ\274\200\337\267\274em\373\274\\\"@\2756\\B=\370+/\275\2475\014=\265u\177\274D\331H\275\243\202Q=\024 \273\274\035\272\036\275\347\244(=\005\335\246<U\374O\275\016j\r=y\226\032\275\331\025\357<\335\336 \275:\010\270<{\\\370<}\226\260<\022L$\275\236\327U=\020v\352<\333\000N;\223\035\001=wU_<\275\350/<L\014\344\273\212H\274\274\312u4\274\037\315\321\274O?\352;\323\200(\274]\271\215;\343|?\274L\201\333\274\357.O\275\253\271@=`\214\004\275\026\307\r=\330\242\336<\\\242;=HH\003<\3347\223\274W\305\017=\213mM\275\244\005\250\274\203\267\306\274\326GN\275$\004\017=\373\177\201\274\000\340#=\365\357<=\304\2339\275\370\223>\275Z\3663;\271A@<\300\304\264<\006\311F=Gk\332<\036\266\351\274B,T\273\255\254M=\321>&=\020\3623=&UC\275\320\301\r=4\324\361<\275Q\014\275\001}G<\267K\271\273~f.\275\234\373N\275\223~\362<1\222J\275#\233\371\273\367\234\3048\310\320L;_\253\005\275\346y\035=9\316\216<\322\031\275\274\355\364T<S\336&=\310R@<\204bu\274\301\2148\275\260\226\020:R\355%\275\377\240\037=+b\314<G\035\325<\255\000\303\274\250\222\026\275\303\353\277\273\325\235\357\274\220P\255\274\367\204R\275\\\273y\274\025M\005\274\255\035\313<\216\340(\275\365\250\033=&\034x<\n\031\003<-\224\230\273\345\022\300\274 \302/\275\345\242\306<-\267\n\275\347R\"\275\334\022\3109nq\241\273i7\037<\274\242\354\2737\351\033=:}[<x\225\356\274\031\313\'<\0341\023\2757\203M\275.\314\240\274\313K\264<\313\365=\275\336\377\377<d3\310<o\303<=\305c5\274\214UH=>a\036=\004\355\360\274\322\307\027;J\030&=\036)\270\274\313\277\273\274ri\337\274\356#\303\274\226\0331\272\216G;\275d:3={\266T\275]/\022\275\007\205\036\275\204\324\230\274\213@Q<@\242m\272\216\333C<\311\274\327\274\254\364E<\302\262\302;t\273\n=\237\246\030\273i\300E=\263j<;\373m-\275vV\007\275\'\245K\275M\221\033=\306\323\372<\213)T\275\343_R=}\326<=\232\037_\272?\005\253<\373cQ\275{v5;\nEA=\332\370\003\275\231\215\023\275\333=\016=\327\334\224\2749!6\274qI\343;\307VQ\275P\241\221;\223e\005\273Ce\017\275:bJ=S\373E<bA!=\336\310\035\275\370\303?\2751XT\273\300\311`\2744\353\255\274$G\035=\3174~;\025\016#=\221\315\231:\211\014\003\275\357}\007=\241\311\262<\2362\035=f\036\006\273\253i\206\274\261lr<\205\323\277<\222\2427=0\251D\275\316\302\255<\027i\314<w\005J=\316\350\232\274C\2611=`\320\n\275\204\"\257\274e\227y\274XT\037=9\2345<AY\243;hV3;\332\236A\275\244E\016<\201\342\335;\232\256:\275\037\004\022=Q\253T\275<e&=F\210\005=\036a\027\2742\312*<\263\336c<md\022\275\201\210E\271\352\242\375<il\024\274\234B\023<F\327L\275\245\036\304<\3340\267\274\240W\311\274\336\007\207\274\214\3116=\306\373\017\275G\376L\275\357)x\272G\317B=|-T=\t\r\021=\321\022\030=\t\230\347<_u\373<\260\255\001=\302\206\303:*oo\274\307I\032<v\214\231<\2362\275\272\304+\023\275\331\036\363\274\242\346\342\274\221P\337<\357\341\265\274\006\276\316\274\333\221\363\274T\251\263\274\33230=\033\336E<\333\003O\275<\332\206<\020H\302<\211\'y\274\010r\031\275\273\317\220<\010\236\340\274\0049\t\274\303S\002<\333\\)<^\316\210\274\222\274\027\274\267\333\240\273|\355\024\274\013\374!=<\200,=\037x;<\210\274\003=fJ\021\275\306\235\206\274\333\235\013\275D\250\035< 9\r\275\271J#\275<\212\204<\326$ \275\365\203&<\376td<\2163!=G}\356\274wi\330;L\377\270\274\305\347\243;NK:\274\200\317\361<X|\026\275\374J\024\275i\271\243\274\346\344\033=\324\221M<\244\343==\316F0=\025\267u\274\350\361\014=\3343\311<uOD\2757\364\013=\002\343Z<A\263V<\230\311\371<\364\n\311\273\304\205C=0\343(\275\002\270Q\275\010\244\253\274\317\026\002\275\257Py<\337\243w<\232+F\275\300\271\327\272E\tr\273}\314+=\342\234\272<\200\221\256:\277\006\345\274Ee7\274Q\345E=F\235\016\275\241M\365<\36769<\001[\206\274\247\242\t=\232\354P=\341\237\005=;\006\241<\332,D\275\255/\032\271f\026\306<i\202\355\273\300\253%\275\025\266.=T\251G=\005M\312<\354\267\354\274\034\264\247\273\247v\267<\003w\300;\220\260\256\273\030\313O=\303\210};\214\221?=\230p\001;\320\363\020=+\230\370<C`\035=#\211R=\333.\031\275\317\302\016=?\345\206<\261\324\020=6\305O=o\235\016\274\311d\005\275T\276\377\274p\317\352;h\317:\274\224\233\025\274\305\237\337<m\252r<ou\322<A\026\213\274U\211\332;\017\017\207\274b\2764=\300\376L;d\3405\275zZ\006\274g?a\274\367\273\367<\007\325F=\017\262\037=\243\252\203<\r\305\221\274\350\221\255\274a\271\243<Z\3470\275\'\365D\275\027Y\205<\300\234\004=\255\267<\275\273RW<\000\245\306\274\270\204\002\275\r\343\312<|\036X=\211\261\023=f\340?=\010\201\'\275\260\212\355<\2569#\274\320\360\022<\377\013\021=\353\223\255<\210HX=\213\236\272\274GxW\275W\336\321<mCj\273a\234\017\275\366\355\324<\273\311:=\315=!=+\024-\275\355\230\007=\213\364\230;+\233L=\'\262\022\275\n\335\006;\255\254\010\275\007\312c\274Z\2763=\017w\217\274\"\322\227\273\230\236:=C|\241\272\024a\026\275\352IF<\276o\020=\331\265\211<w\327\233<E\035\000=O4\354\274\255SX\275\352\357\355\274t>7\274UQ\260;\301\305>=$\367\210<\2779 =\235le<5\353\215<WP\241<\244P\303\273\320\227\333\274\330\230\201<\340|\255\274/i\252\274qe\335<=\216\222<\352(\244<\023\271\315\271\231\330J\272\t[\267<\343F>\272\315\275,\274E\3264=\0252T9\222x\330;\022e9=[\256\022\2753\335\356<A\231w;\240\317\036\274r\312\206\274\354\t\374;\346\\.=&Vz\274\275\344?=\246\204\374<$9A=LGR=X\0053\275\007\315?\275-\177\264\274\331\336\003=\376\017\337<\rw\311<)\301\313\2748T\004\275\256\313\002\275<\2033\2758\357\337\274X\351\024=\305@*\273Y\224\t\275\343lT=CJN\275\272\377==$\336\374\274\030\026\002=\243(\016=\240\025\367\274IM\";\301\0370=O\360\030\273\315B*<\234\377\032=\201\206u<\"\260\237\274\006\314\311<bI#\2753\251s<e\241\270\274\336D#\274TQU\274E\213L\275j7#\275_\236\270<L\255\020=\257\303\017\275\037\031\231<\205\276\300\274\2648i<\\\3025=\2720\220\274\027=>\275;\034\325;\t\020\013<\274N\264<{\232N<\000\017D\275!\245\367\274\222\241\354;\037yW\275\254/i;V!\255<z\204-\275\277\215\"=\032\233\021=\206\377;\275M\256S\275\363\323\022=ahT=\200P\207<xt\033\275r\020J=\220E\033=\356ZH\275h\n\036\275\302\2035=2\024;=h\222\r\275\\\037A\275\2438\352<\320\3433=)a\221;\035\376\027\275\"\005\261\274\264}\252\273!\256\037\275\244`\005\275L\300\031\275\256\227\217<<8\030=]\243M\274\250M\206;\326=\356<\301\007\"<3\256\362<\352\233\021=\247\331\361\272\'\223\245\273\350\221\217<\014\016\026\275*S\214\274|\364\010=\240\356\213\273\330\036\027=\345G\351\273\272#*\274E\032N\275!W&\2748L\n=\310\373A\273\240\tQ=s\360N<\364c\260;\234\273\352<~d\252\274\r\021\017=\237c7=\301\371\332\273\3011\317\274d\332\'\275I\034\347\274\240\324\314:\271\213=\275\016\347&=\211\225\263\2745\235c\274\017X\267\274\305+e\273\366w9<\034\231\204\274\336p\232\274,l\335\274>\003-\275\302L\363<t\272\273:\331Z?\275\237r\201\272)Q\304\274\t\332\250<\'\326\337\274\325\257\372\274\034)\001\275\000\357\346<.NS<\210\240>\275\200o\300\274j~\230\274\206\226\333\274\361\313\252;.5V<\016\335G<\315\312M<RC\206<\321\320\022=\350\336\215\274\271\310\222\273\346\302\267\274\225\t:\275nq8\274\025U\266\274O\001\023=\222K\r<r\206\014\275O[\005\275b~\241\274\364/\027\274G\023,\275$\363\'\2750\372\253:\025]\356\274\0377\335<n\000\321\274\276\302\304;\275\233*\275\246_F=\006\366x\274,\325\307<\000\322\003\275_\346\002=3iF\273\247\260!<c[\247\274\330%\250<:!,;\2115==\360\223\017\275=\010\262;M\003\021\275f\301\262;\360\246\002:\016q\357;\304\327\013\274\005X\211\274x\233\"=A\260\013=\021\207\037=\3030\235;A\262\335\274\301\304];-\316D\275\365c9\275\2534\333\274\303Eg\273q\323\363<%\331\253\274\346:I=:3\014=\370\315\212;.z\241\274G\315\022=H\035\277\274\354KI=\020/%;\274sG=\226lF\275X\262)\275s\004#\275\253E,=\213m\321;\025\243\257\274\205v4\275d\350(=\3621\316<\026\014.=S\367\266:\321\234\300\274q\375F\2747q\215<5\277\370<\221\264L\274a\277\0278@8\025\274\276\277Z\2749\002U\275x\021\007=\306\226\232\274m\364\000\274X\352\241\274\017\200\005=d0\375\274\007\253A\275\007k\000=\215\216?\275\026p$\275\025*\365<\274)\232;t4\002\275U\333\214\274WhB:\235\251\276<w9\205\2724%v;KcJ=\313s\312\274\242\264)\274\360\035\361<S\003\226<\354\036\037<\334\265S\275_\2274=q\365\266<\213~C\275\243oV=\006\342\035\275\237\235\325<\036\002\272<T\217\017\275l\215\023=Q\347\036=$\306#=\212n;\275\227UX\275\260l\253<\203\310\327\273+\'?=\333_\023=\314s \275\304\025\314<\340\332\006=6\240\007\2756\241\265;\0006\006=U\334\254<\032X\036\275\263\371\005\275\030i+\275k$\307:\007\3127=\243\206:\275X2>:\222N;=m\333\223<\376\251\022=.\311y<\025\363\260<8\221\356\274<\324\322\274^\2066;]\002C=i\230/\275\316\252\246\273)\022\302\274^AB=~\305\353<kTx\273X\r\313<#AC\274%\375\306\273\342\2450\275\036\346&=i\255=\274j\361A==\270\373:\021\001\346\272sy\020<\034\376\024\275_\217\314<\321\017(=T\2218;|\246\214\274\251L0<\301M\335<\372[\243\274\266\226\271;\275\225-\274\374\252\211<l\340\032\275B\231K\275\324#}<\323Z\276\274\3526\232<C%X=\256\0235=`y\351<\322\316L\275w\304\030=\213\275\017\274]\362L\274W\020C\275:\235\364\273\301SL\274\024G\360<s\323\217<\274\363\037<\334F\257\271\363\203\347;\303\n,\275L\022\246\274\217]\003\275v\3033\275\217\204\301\273\353\323\257\274H\253r<\325R \275-\025\374<\232#\347<\3347 =\256\005\270<\350A\306<*4\271\274HJ\245\274\030\254\t\275\247\026\211<\314\322G=\340\234\022<\257\276C=\305\341\242\274\036\321\\<~V\376<\233\340\376<\257\270\200<(\254O\275/\361:=\004P\005=\371\243:=\235\313\224\274\2304\317\274F7y<Hq\362;\026\375A=\215\371*=\234\244C\275\305Z\2369\013%:=T\243\033\275\213\210\031\275\362\347\033=\006\333\310;&\230\017\275\254\177B=\214\360I\2756\312\322\274S\334b;I\242\"=\001\221\273\272J+(\274V\221\262\273\237]\001\274\376\226\272<\315\331^<\353\323\371<\301w\032=\352\346\347<\307T\023\274\033\016\'\274\212\000\303\272\321\335\275;+\177\316\274\225\016l\273\337\200N=\335z\261;\307k\'<0L\366\274!\350P\275\010\313R\275\220K\351<\000\231\n=\306\r><\024p\032=\350=H=\234\r\037\275y\264.=K\037\275\273\255\362\351:\276Z:\275t\037*\275\357\251\372;\332\367B<\350-v\273\227\346\024=!\016\337<j\315A\275\377\326D\275?\203/\274\203\352\032\275\243\342Q=V/\235\274\201I\264\274\356\316\023=p\177\314;\362\022\312<\275 V\275\356K\\\273d\235R\275\032c\025\275\337\"/\275\033q,=\r_\022\275\212Q\256<\007h\"=\2557\227\274\364\213B=\203&\334\274\343,\026<\254I\322<\225\272\337<\301\310\252\274\021\033\r\274zr\253<\246\324\376\274\237\317F<_\367\001\275\366u\204\274t\\\207\2743\320\006=\005[X\275_\0149\275\223\345w\274\360\312\316;\247mE\275\27361\273\014jK\274m\273W\275Q\312\023=W\263U=?\354\034\275cS!\274\243\223\362<\037\0005=\304\337\330<u\342\356\271o\346\224\274/\242\013\275#\210\364<\217\312A\275\342\344\005<\005!\276<\020\244\252<D\2760=0\347\357;\265\313\377\274\2770\031\274\004\030P\275\034\2539=#\330z\274c\217\377<gB\371<\374Y.=\316\312D\275f\332O=\334\260\017\275\260\306@=\r\357$<\267\2009\275I\354`\274\326\301\001\2754\231\301\274\246\337\210;\347\242\222<_\215\010\2749\234\371<\026\272Y:O9B=\230\300\366\274G\242\025\275Y\223\300\273\257\2709<\270\n\013<G\022\024\275t\020f:\221EF\275N\336\302<\375\002\310\274\007\317$\274\326\275\360\2749\375\'\275\227\253\255\274G*\263<\314\224\205<\345\315K\275\2554+\275:\217\020\275H\350\027\275P\2517\275M\0067=\234V\220\274\002Ja<\224c\252<H\2330\275;Z{\274\366\274\337\274\">\013=\272/=\274\3129\026<x\335\216;\335)\342\274\314\022\221<\205O\326\272\337\231n\274\365Q\245\274\266\377\006=\344\307\354<^\0012=\373\027\360<\340\205\274\273\006\036\216\274\202\360\234<\022\364\233\274\232\346?<\261\367\354\274\345Y\303\273\3249#<\342\036\350<\373\340\332<\213\010\022\274\332&:\275GK\242\274s\025\002\274\356\302\376\273\313\270%<\330z\257<\330~\252\273\323:\030=\367\357D=oO0\275\225\326r\274\314\311\020=\252m\216\274\351\034\216\274F\303\245<\206\202G\275\006\260$\275;\030\325\273u\306*=`\372n<\207\320\204\274\2249)\275m\027\327\274\237Z.\2756\201\002=\341\345\251<\211\215n\274\362\0250=\265\3052\274NWo\273)\257\245\274z\221\335:pX\325\274\270L\0019o\303\342<\345\256l<\037H:=\333`\276<\340?\025\274\"h(\275\r.\3039\312\225A\275\352\007!=v\277&=\312-\037\275\017B\344<\240\247\035\275\314\330#\275\335\374\307\274>\035\232<\365\211\244<6\352\344;b\245\255<%|\\<\333#t\274f\255D\275\031\273N\275[\205\203\274\353V\325\274\355\275\032\275\360%\317\274A\000\341\274\204v\260\274yb7=P\204\311\273\340\225\313<c\357S\275|\351t<g\335\377<\272&_<7`\321<\201\223\037=\007[I;\216\314%\274\003\250\276\274C`\332\2741\276\304\274\002Iv\274\242\3254\274\007)\263\274\320\315P\275X$\342\274I\345*\275\367\370K\275\324P<\275\211aF=&P\210\2746c\022\275\025\314\364;\343\256\367\274-\023\276\274H0\207\273\273\271\004<\225lD=A4\036<\221\337\331\273a@X=uh\215<\323?\002=\216\367\030=S\271\232\274\236\326\356\274\307\031\373<7\202)\275\352\017A=\0236A<\013\334\276\274\3643N\275\007\222\256<\363`F=\315+\312\273N\344\000=\033\000\372\274J\014Q\275\274\254\255<\n)\351\274\236nN\274\032\t.\275\367\'\031=H\314\241<f\032\270;>\"\276\273\017}q\272n\005\275\274\231\353+\275,\204\n\273:`A\275\310G\235\274Z\0354\275\"\301\000=ZE5=\235\327\342\272\"\355M=\177M\333<\314\340\215\274\221\252C\275\2700\017=\356\016\010\275\311pd<\021\250\370\274\307\263I=\273\225\275;&-\244<6\246P=9[\351\274?\244\017\275\244q\347<*\223\351\274\267\223\307\273lGb:\021\032\364<\257\326\330<R\014L;9q\247\274\225\013!\275x\205\217;\374El\274]\004\270\274\251\310\013<\230_\225\273x\355A\275>u\311;\207D\313\274\275\202\301<u:\370\274\177\201o;\003\355L=\305\t\356\274<2>\275\006\0132<\002H\353\273\032l\251\272i\202u\271\315\257\026\275 \206V=\270\234\302<\360\036\\\274\245&f\274\373\004>=\354\010\212:\026\251\343<\323c\034<~p\206\274\373t\000=.\273M\274\251\266?\2757\217e<Q\3452=\260\231\342\273\244\345\260<\377\243\007\275\335\026{\274D\320\033=\362\346\254\272\3231*<A\2745=s\370\275\274UQB\275\324\010\224\274\206\277(\275P H\275[/M<\331\201E<iA\311\272\236\307\216<\2521\244\2720\315\256\272Q{\037\274\267\251%\275\no\022=\007\276Q\275\311\333\253\274Q\203H\275.\024\337;\3676\014<\256eI=\265\360+\275\003X-:M\265p\274W\247G=\206\353\352\274\026\017\014==\253\352\274\272M\310\274\010Y\311<\266iF=\254\314\330<\376\213\302\274v\333\002=\027\240\336\274\016\207\035=R\305*\273\345b<=\223h:=\001.\010\273\323IA<\221+\267<}\212 \275\222R\240<\202\270O\275\367\227\014<91\214\273Fs#\275\375\311#=\200\306\305\274\342\253\337<p}\274\274B\365\204\274}\014\"=\227\007\256<\0210\007=dIQ\275\367\252-\274\270\311\250\273ut\315\274\322]U;\026Y\027\275]\215D=\023\001\001=\027$\263\274k\\\311\274s\315B\275\201\373\"\275\311e?\275\256\3048\274\001\234?\275\242\367X\273Bo3\275\250\373\000\275\323\344J\275\270\034\367<\335|\031<\035\371$\273\276\014\226\274\251p\362\274\227\250\005\275Ig\222<}\014\t=m\r\327<\342\255;=\317\356 <7\274N=\300\340\223\274\262L\221;\344.y\274VNW\275\"\317L=:^.\273%`\330<Q6/\275\357c\204\273\275zb\274\225\246\274;\360v\"\275J\202\353\274L\004L=Y\2431\275qM$\275\016\253\020=\340T\341\274B\006C\275r\003\330\274M\372/\273\350\270R\274\002+\206;V\024U\274[\351)=\007\355\364\274M\317\301\273\267\237\206<!l\022\275\361W\002\275&V\014\275\226\000\206\272g^\264<\366Lr\274;\203\255;\245v\266<\364\337\001=\231/\312\274\336\031\202<\264\237N=T}\204<D\366c\274D\300S=s\326\240<r\275\231\274G\2478=\241\222\271<\356zK\275\013\230\321\274\323\'\234\273\240\240\272\274(\027o\274i\370\204<\334@R=\205i\365\273~\312\341\273\372\204=\275\036\314\316<\376\326\222\274\005\030\t\275\014\177\326\274\'\304,\274\337r-\275u\376\303\273\037@\261<\'\313O\275\004\342\026=\367\000\210\274\227\003\210\274\376*\250<\2575\340\274\236=\357;0\2120;\033C\246<\276\014@\275\262+U\275~\273\005=\\5R\275\364\331)\275>\333;=\217\253;\275\203t\000<3=\355\274\355\000W=\216\'A\275\316y\200<\216\264\020=E\241\312\274Y\241L=\356YV=\212\376)=;\350\240:-H\026<uW<=\033F\343<\037\276T\275x\233\373<\272\r<\275@W\237<\t\004.=\225\226\325\273\311Zy<Q]\363<\316\365<=\251\327\225:^G\001=O\303\255;=\237<\272\333\027\025\275\313\252I=C\276\315\274\371\221H=\263\3249\274\2437I<\354\244u\274\004\255 =\325\261\313;\'\313!\2754\036\344\274\2477\357;\320\256\372<\312\001\207\274{C\247\273:J2=\331f\352;\247[\271\274\016\256\007\274\216\303\247\274\325\334\333<\334Y\030\275`\331\237<\317\210\'=\271\3561\273\213Z\323\2730$\251\273\177\265\223;\030M\344\274H\214\247\274\030o*\275\326\262K\275u\364D<C\200I=\034% =\204\307\270<\271\030\016=.\027T\275\357X\223\274\201\335G\275@\305\324;\273\2040=\013\324\r\275r\304f\274\370nP\274\365\215\005\275r\242\024<\255\256\003\275\235\2767\275&\t\266\273{\036C=\371\274\360\274\t\274\001\2754\275\362\273\250\336\335\274\237(\n\273\327\372\r\274N]\250\274\2047\016\275#\267=\275\355\007:=iu\r\275\227\025\202;\320\265\000\275/\276U\274%O\t=\'c-=\230\3307\275\002<\006=f\366-\275\376\010:\275\3461^<\2349\314<\353\031\030<\022\013\377<\030\273\030=\227\1774\274\024\320\343<\001\014/=\3365a\274\024\030\375<\266/\'9Y2\346;\270\221\024=\010\254\267;BR4\275\364\367*\274\024\014R\275\360\233Q\275\361I\'\275\245\225D\275\207\3029\275\233\245D\275*tG<\326TM=\022:\"\275\252\272\334<0n\004\2754\313\237\274q\2601<O\2064\275q\301\304:\371\332\365<\231\246\267\272\263X\033\275\356f\373\273\203\201,=Tf\r=;\216\264\274B/+<\352\316\207<\221h*<\206\351\337:U\235\024=\363?\020\274\346\252\302\274wO@\275=WH\275\275\023)<$\2334\275\220\340,=\217\202\274\272\305\251\020=\362\231\023\275\334d\n\275\205\031M\275/\2342\275\021\260&=\004\013\271<\312\234B\274\336=[\274!\227\313\274\233\"\036\275\311|\222<N\000\024\275\345\376\005\275\232\337\313\274\205\r6\274\005C9;\r\367)\275O\237\'\275\013AI\275\324\254r\274\332\202/\271\312X6=\311\340X\274.\366P\275<\311\311<\240\356\002\275\222\363i<Gs\346\273\255\350\024=u\2301\275%\"\002=7 K=\241\026\032\2752\031\314;9M\003=\210\021\201<\213!V\274f|\371<\266\036\361\273!\372/\275D\332H\275\263Uy<\026\273\310\274\301\263\355<\262b\267\273\315 K=\030\014\023\275\014r\363<\370\266#<\221\371>\274\211\241\036\273\345\307\t\274\306\206\203\274[,\030=cF\205\274C\372\356\274EG\376<\220+\004\274s\210\337\274\247\2519\275T\367\344\274\230\370\016=<\246-\275\361\312\235<\253\2711=\003\233\027=\352%\227\274\375\243\002\275\357\236%8W\226\323<\377\230n\274\263\257B=\355\263\307;\017DV\275\272\365%\275a\307\362<\364\275\023=!\240\215\274\017\311T\275\345\331\341\2727 e<LY\002=\310l\203\274\226\321\350;\303\246&\275(\237\n\275R\355\336<\210\312:=K\273\205;\026HK=y\333\277<\242\221F\275\225\211\372<S$\266\273\357\326\002=\3104\247\274\255\250P\275&V\277\274\177\320\244\274\221\335\214<.\034o;\000u\017<aE>=\260K\006=\206\025I=Q\207\223<=\0037\275\327u9;\376\026U=\023\334\323<\177\216\027\275.\265@\275O\2424<\375\006\'\274|\353\030=4\315\201<1\\\306\274v\013\014:\232\230U=q+\000<^y,\275w\244U<\343\206\307\274\335\346u9\224E\355\274\325\226E;\\\312\027=\312D\247:,:=<\254\023\337<{\257\361<2\3104=\023\217\r;\257\261\326<\263sA=\357\337\326;s[f\274\273\272z<\023\317\020=\252\200?\273R\243N\273\324\365*\275\206\301\276<\260CM\275\362\242x\274\022&\256<*\t7\275\245s;=\367\332*\275\t\031F\275\252\001\310\274\326\361=\275\252\034p\274^\2074\274\274\270\r\2753\002P=\267\230\320<\364\207\371\274s\214!\275\343zM\275\363\230\252\274\362R\221\274\333\020\304<\321\246\202\273F\310\243<\233z\244\274\3718\006=~]W=U\366\220<R\340\333\273\32493:\001\242S=\341~\354<\342*6\275\225/\200\272\306V2<\024V\324\274\355O\360<\252M)<\335\365N=c!F=\213\267\003\275\271\264(<\250LJ\275:\025\004<L%\031=\334\355m\274C\210L=\236n\240\274A\005&=\350\025A<\246\205\322;&IY<\013{*<~\016\266\274\302\370%\274\326m\024\275\256\245\245\274y\256\307<\367\364\237\2731|.=#\035\204<\271\004\317<\035\310\013\274\030\202\354\274\301XN\275\020 \262\274\305L:<\n\336\357\274\346\317%<Q~\313<bA\026\275q9\035=\256\026o\274|-\005=\3331\014\275\226!P\275\303\343\203<\\\0244\273\370\371\236;]\027k<\353m\272\274W \255:\017=\002\275\263\373\022=cp\216<\024bI<\322\267.=EY\251\274\364y\242<\334\214\004\273\"K3=*)\210\273\235s\013=Yl\226<\266\253\231\274%\300\306\274\221\t\224\274\256\224\177;\352\272\313<\332\001\216\274\303%\333\274\022G\242<\370\035\360<\347*\334\274\261o?\273\356%R\275\250\002\232\274\220S\026=\203TI<\2148\004\274.G\240\274\251\250P\2740\250\020=m\336\227\2748\275\037=\232\021\010=#\355/=\327\230\265:\227\310D\274\300U/\275iX\026\275\372\251\026\275p^/\274\223\357\206<\325\017\014\275\354\030\246\274vl\336<\217P\030=g9\313\273\236K#=\007\253\301<`Y$=`.\370\274B`J\275\206\276D<\310C\255\273\233>\020\275L@\223<\366\3712=v\277\330\274u}@\273o\017{<\250@\305\274E<<=\315\215)\275cVT\2749a\242;MWA\275I\304\310<\223I#<\217\0179\274\277\000\037\275Z\2271=\322\304\035<\\_\000\275\305\312\354<\201B\333\274\272\304-;1d7\274[4\307<tcH\273\000gL\2758\252U=\310\\)=\234<c<!d\224<\232J\247<P\262!=\275o(\273PM\023=I\346\344\274\236\"\032\2755J\361<\242\374\216\274NA\271<\322P\010=\346\230\033\275\215c@\275\331v\036\275Y\333\202<M\3313\274z2\035\275\334V\213;\235l\"\275\311k\317\274\343\342\033=\0337\007\275s\307\370<\327\014\361\273\345\243\274\274\201\373\007\275\316\"\014=\273\2538\275\024\213\021=\231\241\260<\034E\230;H\013\004=3%.\275\031JT=\0063\261\274h`R<\250^\016\275\364\016\352\273{\336\177\274\3638$\275\021g\366<\"\341I<\356\354;<\223{\317<u\363\017=\226\337\310\274\317\231\037\275\261\257H\275v0!\275S\262\271\274\311\361W\2740\027w;\343\031-=V\322\034\275\324\200\244\274zb(=%\030K\2739\244+\275\3074\304\274\021\267\270\274\371\315B=*\250w\274\370\274\317:\320\201F=\'\363\032=\347>\261\274+#\253;\332\200B\275\034\313\217\274\347*<\274b\320@\274l\331\021\275\360\376Q=R\3714\275\232\033G\275O\246P=\222\333\177\272T\202\275\273\334\240\377\273\214s0\275\326\316\033\275R\322\250\274\374\007\272<\360\272*=D\240\325:\001\026P\275|\353\265<\204\305\213<\301\025\241\274\224e&;7\235#=\312*\342\274c\256\372<g\350\304\274?\315!\273\314\245\350\273\356\010H\275\212?z</\360\371;\241\322\256\274\347I\345<_\275O\275{\227>=\033\376\000=O~\256<\310\370\250;$\000\007\275\356\'\355<!\307\345\273\215}\r\275O\235\256;=\345\233\274u\031\032<\257\261,;@\025-:\204\354\223<\353\013c\274\315\\\213;\375N\350<<`@\275+\317\022=\261\236\221<DpP\275vV\037<\371\242[<\202\021(\273\357\226\273;q\315\331\274\224*\023=cE\343\274s.R\275\354G\251<k\331\206\274T:7\275\271\337u\274SQ\345\273\240S\241<\235\326\003\275\272\202\333\274\016p\n\275\233\362!=\212\266\336<\261Q\327\274\337\364m<D[\010=\262Fc\274ghX=W\254G\275\360<&\275\373`\245\272\024\310\207\274\350\217\217\272O\365\336;\354\375\262\274s\264\361;XQ\311\274\263\247\264\274\014\235<=\276X\r\275\274\367@\275i\202I=\307M\266<T^\023=\330h\014=\240\255\225\274\241\311\033=D\316\361<\037M%=/?\312\273\241\307\357\274M\210\374<\255\222\020=\206yq<\302\325D\275\017\267:\275\217\016\265\274&\325\036\275\354\353\313<E\333\001<\313sN\275s\0268=\301i+<\323\263\376\273,\317\017\275\227\261#\275F\004\237<\367v;=\370Q\022\274\315\014\n=\215b\250<\324\025\231\274U*\033\275\007\234\036=c\261\023\274\201\t\246\272\330\372\326\274\t\303\334<\213\203\037\275;X\264<\0242\253<w\321\003=\356\3076\274\223O\034\274,\271\305<EGS\275\271@\023\275\256E\n\275\335\257a<y:R;\356Tq<_\347&\275d|\274;pxO\275\n\tS=T\345\214;\360\234\034\275x\3756=\334\270\330<\210iX<\277\354@=\205f\013\274\327\306\240\274)U;\275\354\035\336<\003\274V\275\330Z\342<\253\"\226\274\310\370N\275\270!R\274\223\323\001\275IP.\275\202B\260;\240\244\264<\332+\022\274\006\354\267\274u8\025=\324t\016=\026\244\017<n\203\356;\332m9=\343\327\344\274\231\212\211\274\347\264y\273s\343H\272\201\344\242</5>\275\265\345\350;\207\355=\275\302\2250\275Y\016\026=\205\2538=R\210\n\275\260r1=u~&\275._\244<Z\337\320\272\205\315M=\002\031\245<\273D=;\244\274\317\2748\326\325\274a\247\005<\201\234\351\273FO\232<C\333;=%\265\356\273Ah6\275,\330H\275g\370$\275Db\353<\206\013p<-\254V=\2222\350<\001<H\274(_\030\275XM@=\353\363g\274\331[\277;\362?\r;\007\304H\275\3412\302\274\223\256\234;\327\311\277\274\262\002\024\275\343\255\023=\233\230S;~\352\321\274\010\207\007=\3230H\274H\021\217:t\274\247\274\24039\274\274\021\032=\303\026X=\212\217\201<\026[\265\274\203\0200\275 \2272=\361\307\263\274{y\277<\n\223\344;\326\346o\274\3467\367;\340h+\275%\316\275<\217+\372\274v=&\272S4u;n\364\326\274\275\202T=cP\354<,\324\361;o\2463\274\237i\263<\023I\302\272\300\324F\275\rP\001=+\204\213\274\250#K\275\250\0378\275Me-=\351\273=\2757\320\010=\245\010\313<0<X;\2038\006\274g\207\034\275I\355\017\275>\2160=S\017\354<\233t\330:c\304d;\362!\273;W\251\332<}$\022\274\215*\260<R\0328<\030\301\251\274`\306\031=_M#=h\303\002\275e.:=\017T\t\275\314\375\204\274<5\247\2744+\244\274?oE=t\025\036=\220\033W=\332\226U\275L\200\t=\276#N\275\266V\352<s\177L\275\326;\242<\034\221H\274\247\344L\275I\320\307\273\204Y#=\323}\007\275.\331$:\250\275\034<\217\243?\275e\372\362<_\363\271\273\262\362\344<r\224\037=@C\357;\334\354\262<\313\317\333<\265\"L;%\237\032=\331\005\302<\240\242\177<f\t\006\274o\250Z\274\003\265\275<\306cL=<\226\244\274\234\360G=\354t\001=\255\373\027\275\001\351L\275\277\301h<\025\310G\275\363\270\346<a\322\n<^\350\265\274\367l\251\274\230[X\274\022\311\374<\375 7\275n\205\027\275N\215.=\205\032X;\0377\007=!)\260;\3750-=\352\001\206<\301\273\270\274\315\202+\275q\377\360\274!$\031=\177\314\030<\273\026\223;\305.\251\273N\3030=hV \275h\376\311<\206a*\275\272b\367<\010B\246\274-\3238\275\177\271,=\014\252\375<4\226F\275\274\305\032\275\355h\213\273J\356\272<\005\270\250<v\316\304<\265\317\030\275G\377><\363\023U=\334\204\036\275\305\3758<\017\261\'\275@l\277;\272F\363\273\325\030:= \\3=\202\205[\274\320\365\201<1\2768\275D\335<\274*38=\311\275K<\222\244P\275\250!\375\273\223\0029=s<y\274\371\002\034=@\030\202\2736\365B\275Gp9=M\230\206<\250\313I\275\335\002\260\2732\2446=v_\311\274\250L\203<\263\236\265\274c\265\355\274\260\017/<\323\371\036=j\"U\275%\347\026=\346\310C\272\000\377)\274\225\256\215\274~\260O\275\237\375:<d\022\340<\333C\005\274\200g\023=e\351\343\274\2471J<NN\003\274,\017\271\274\311\232n<\302\256M\275\032\325V=\277J\024=\345\257*\2747\243\210\274\273ER<\331\246P\275goe;;C\226:\355\215\242<\001\352\220<\347d\002<\302UU=5\224v<^\010\312\273\037\213R=\245:\r=>\036\027\275p\237H\275p\363\277<S\3227=;\2274\275.\313\313\272\254\256\337\273\371B\004\275N5\010\275WJ.\275\016xV<\251\235T\275\326\005\302<\320.J=\324ME\275Eu8\274\317\277\001\275\031MR\275\t\006\014<\321\014+=\203z%\275$\224\303\274\206\323A=\214]9=\230Ii<)q;=\226\303B=\214\273\360\274\020\303\212\274\035[\304<\360CN\275\207b&=H[\000<\"kW=5\371o\274\270\303\302;3\230,\275L\253\021\275\301\336Q<)dA\274h\330k<+\2539<B\016\223<)\016\033\275\004\014\021\275o\362\034=Pm\007<@\030I\274]\300<=\343$3\275u\326\253\274\340\216\t\275\323\265\275\273\030\367J=\001\221w;SX\221\274\333y\373\274z\264@\275\022\335R\273\010\234\333;9\235\210\274\211\210\245\274\304v$=\334}W\275\261`\314;Ih88\231\030\253<\357\352F=*\301;\275\223\\\001\274\332\2578<\255\374\021\275!{ =\353p<<\021VL\274\"\314 \2740<\374\274G\224\245\272H`\\\274\265\3751=\257\037\241\274\357\021\223<I/6\275\244,\305\274\3362T\275\303_\255\274\330&t;\251\314\216\273\022\252;\274\\\"\263\273JkX=As\314;o\343\205\273\304\334-\275Qo\355\274\343R\302\274:%+\275\275\365\214\274e\022\031\275\347\003\256\2737\214\302\274yS-=Q\025\n;\213\207\351<gb\250\273\277|t<\223y1=M\006P\275\216\221w<cf\031=\250OQ=\177\tM\275/]\206<7\306\002\275\260Q\030=\034v}</p(\275\2669\321\274\002qZ\274\265\340\327<t\262\256;\376V\203<\372\353)<\234\0335\2746\3071\275\325\001\341;X\\Y<\222V0=\315\026\317:\r0_\274]\002\004\275\273\301b<|s:=\311\320\022\275\005\212\322\274\rNP;<0\365\274\177M\245<x\325\323\274;\375$\275nZ\355<Q\265\337;H#6\275\302\333A\275\212t0=CdP\2751$\032\275M\367\225<\301\222\r\2744B!\275-\256V<8\225w\271f\217\017=\215WV=C\256\177<\203/\242\274\335\312$=o\327?\275i\346\220<\332\232\233<\261\265\260\274\006\032X=\323M#\275\374eo\271T\376,\275cE\366\274ph\236<\320Y\t=L\270q\274\353>\020\275\252?F\274f\206T\275\202\332\311<\335\3529;:P\361\274\022*Q\275\212?\350<\353\351\017\274\2432\223\274*\256\227<)\347,\275\355\351\244<\271\235f\274>\350\201\274\002\342@=\201;\222\274b9g<\371\017\352<\203\365\275\274{t\373<T\224\343;\244L+=\te\034\274\022NT<\022\331P\275Ze\024=\204\337K\275LPK=(1\'=\326+\347:\233\217\216<\357\rj;O\253\\<\347\022\224<\025\003\325;\207T{\273f\302\233:HFX\275\210,\030\2759k\010\275\254\323\260\274\006N\356:\002e#<j\270\034\275\322\321\257\273\217Y==\264\216I\272\255`\005\275|\216\277\274v\361 =2\\V=U\317\243\274\001\314:=\241\314\334\274\005\210\344\274\271\251\343\274>\233<=\\\366\026\274\021\240e<\350\354\327\273\330v\214\274,b\366\274\325\216\346\274\232\352S\275\014\235\210\273:\211\327\274\216\2620<\253<\t\275\324\335\313\274\254\342\377\271jx(=\322O\323<\353\343\035=J\261!<U!\031\275x\327\034<E]O=5\034@\274\370\216\335<\316-@\273\256+P\275?\230:\275\233\202\233\274ry\370<ME]\271\322\225\032\275I\024,=N\304\036=F\371)=VF9=m\303\222<Yo\014=j\306\217;\227\267\304<YnP=\252KC<m4\225\274Xn\177\274!\314\177\274\260\357\321<\307S\201<\016\234C;;\255\206;\025\016_\274i\344\037:\266\217\326<=\2149\274l\027\2469\212\nB\275\250\215\001\274\376\3616=v\213P=\r0B\275\335,\235<\002\215\371\274\267r\016\275P&\245\274\274\216\257<\371\365\t\271!\244>\274V#;\275\236S\'\275y\250\n\275\365\0311\275\023E\207\273-\004\235<3\270\371\274\n\2149\275<\306`<n\317\261<\355\203\030;6j\003\274\367\351;=a\344\326<d\001\'=\366\333\002=\231\250#=\260\333@<\216\370\032=YE\323\273!dm\274h\307\253<\361\024-=\2254\007\275%\377+=4\304 \274\006\021\013=Hk\025\273\300\314\245;\017\033\326;\035zN=\366\340A\275\0310\305\274\006\364A\275\200`U\275\334\305\271<\2140{<h\355\210\273\245\265_<\037\003\010\275\257aN=\005\317P\275/\314\332\273\037(\3019\255\031\236<a\0351\275\336P\036=d\366\177;\016;\370\274b\346X<\000\000\266<\013MD<\315\246\254\274\304\211\n\275\334\227y\274\311U\372<\325(\350<\347iR\275\3757\230<k\227K=\357\355\217\274}\000\344\273p8\322\274\271;\225<\'\364@\275\307MR\274&m\262:\0055A\275-\357\n<E-9\274 p\002<L70=\364\220\234<O\270\036\275\203\325J\2751\2626;_\223\351<\332\215\276<\267\0270<\206\0365\274\321\t\221\274\260M&\273\367\260\300;\216\346B\275\203h\"\275\253c\340\2742CT\274\030)\016=\335\025\001=\211Mr<\266A\257\274H\332-=\256P1<\n1\371\274\321l{<\335\'\037\275\206+2=\301R\205\274diG\2757\216E\274\020\361F<\365\2103\275\363\3222\275\200\222\347<\355\200\035=\272\221>\274\351TN=\340\267\017=i\322)=EE,<\362\3468\275\177@\343<a!\377\274\340\031M\274\026D\200\274\217\004,;\014\251`\274\321~\213\274\212\345\036\275N>\332\273\344\232\257\272\231J\223\274PaW\275\251QE=\035\322Q=7\302\240:&\251\306<\224\230Q\275\236\245\310\274\367U\357\274\242N\245<\277v\026\275)\353\022=\023 \007<g\3428;\346`7\275\2521\333\274\014\341)\273t}\031\275(\032K=\271\313\366<\337$2\275\2166\'\275\2406N=\212\031.\275tj<\275\0277H\274\036\216\013<\351xV\275T\3107=\253\216j<\244\231}\274!\2533<\232\336s\273\222(\202:/\302\016=\262\366\010=\0070\003\275\211\233\357\274\200\372\300;\336\355\"\275\032\235&<(\035\027:f\300\363\274D\347(\275d\2726<\247\204\363<(\022\216<\346^\325<\344\'\231\274\256\315\022<\333\266\325<CV\320\272\335a\356<R\301-=\006\377#\275\341\315]\274\365\037Q=\312f\247\273\315\014\311\274\240]\372<\204G\010<\233hW\275Q\255;=\350\200]<F\336\222:S\342h\274J\260\356<`Q\210\274\334\201\n\275\341\252A\275\227V,=\016E\256\274\341\357\031\273O\037I=\023\001I<t>W\275[\211\224\274\207\013\000=S\352j\273b\264\310<\375\335\343<\245X\227<\313[\026=\244\027%\275\361OP\275\312* =*\306\t\273=\225R=\246a \275n\027\t\275\345(*\275\3228t<\321\031\217<\006\004\227;cJ\262\273A\305\226\274\n\367:=3\275\325<\343\364\000==M6=\014\277?;\333X\331<\271\005\207\274(<\311\273\331\005\325<\276\237M<\33493\275\031~\375\274\276\256\254\274cpU=n\000\021<\016\303 =\275\2131\275u\3312\2752\325\275\274Brc\274y\214\000\274T\206P\275{\320.=0:\334\2747Q\006;\315l\271:g])<?q\250\274\2368\361;\346e\332;o6\024\275\320\303\033\275\3527\234\274\311W\002\275\3458\271\274\340\n\237\274\024\344J\274m\336\275;\025\016/<\\5\300\274u\271\237<\316:;\275\306&F\275zd\346;i\310\036\274\321\207-=\325<\201\274\304Q\014\274\227\364$\275B\2154\275\346\022\026=\311\021\033\275\315\365)=\215/\330<\362\3675=\215(\254<\302i\266<\212\206\225;\352\340\241\274\304\262W<s\223\037=\233\256\r=\333\240@\275|\266L=\t\215\321\272\253\025j;\363\n*=Xc\034\273\356|\002\274\324\325&\274{\326K=\nv\344\274z/\021;%\350\024=!\355N\274\202\030[;\212\006\027\275\236B\r\274!\271N\275\365\013_\274\3102$\272=\373@=@\377\221<Q\312\023\275\305\252\217\2746O\t<\316\351F<\030\322\346\274j\0101=\031\362\374;x\247I\275\233\323-=\30479\273v\267,=\276\205\247\273\007\017\305<p\254\021=x\200K\275\366\204\340;(\002\261<\230F/\275\330\355\260\272z\234\373\274\337\2555=\227\'\244<\274\215V\275\237]K=]F>\275j\034\020\275\243\312\027\275\364R:\275\243\357(<}H\005\275\240\2372=\025$W=\305\272\302;#;(\275\230,\001\275\314\240S\273\220\206\242\273\\p\220<\024-\'=\337\245)\274\311b\n<\0010\006\274\342\016\224\274g1>\275\3411&=(\025Z\2747\373\200;\371\005>\275\276\241\241;\231\352$<\212\347U=\n\215 <\200\225K\275v\235\311<\"\026\013\275\337\336\243<;V\353\271\t\235\375<0L\025=\004\320\312\274+\242\267< \262\006\275-U\362\274\263\257\246\274\025hN=\2251K\275\"v\001=\0276\240<\352\377P\275~\377\014\275\014\210B\275\037w\301\273\311@\214\274\022\330\224<\356k\013=Z\324;\275\341\026\000=\020i <kJ\277\274q##=\3148\243\273\264\026W\275P\236\244\272i\243\'\275/\3523=\323\021\026\274@\270U\274d\003\303\273\nO\356;i\261\034=\030\370\300<Gb\341\273\347\336E=\312\303\270<\252\3346\274GN%\274\347`\365\274\364\240\023\274\016$\035\275m\026.=(\200u<\013V\212\274\224cW\275d\320\242<{\245\333<F7\010=+\300\341\272\273b2\274\224s\002=\237\345F\275\366\332\222\274\n*\236<\245Y)\275\247\326P\275R\263\227<\205r\374\274.\350\244<\223+\031\275_n\037;v\324\273<A\215_<\243\200b\274fN6=k\205A\274t\277A<j\376\300\274\014\236H=\305\240\336\274\343\350\345\274\356I\316;+\016V\274\314\262\207<C9\237<$\261\367<*\244\t\275\316\331<=v@\004<\0335\320\274\214\016\035\275%\252G=+\266\301\274\3261\264<\230e\000\275\260\260M\274\016\234\\\274\010\215\366<\336\225\371\274\0010\333;\342\203\200\273\013\270\246\274B\2255\275\234\277t<|\023+\274\027\365\300;\276\007\267\274\264(\220\274\342T\200<n\t\026\275rX\251:y\211%\275\252~\005\275\243-\013=\244\036\273;\357j \275`\356\232<\252\013\220<\324\216\314:DC\341\274\204`\346\274\007\334\013=\357\212V=\nc=\275\257\256\210\274\370\265A\275c;\211\274|2\361\274a\322A\275\211\231\371<\332hv:E\337\260\272x0/\275\377\t!<|.\303\274[\354\363;\264=>\275O@Q=\313\377\026\275&gb<\301\366\036:@@!=Z-\"<\217\233:=\222GC=\231x\010=\014\377X\274\365\3352<\343\241Q=\221\362%=|\r\006<e\233\342\274q\030O=\231\371\364<\305+\001\275?<Q=V\245A\274j\"\020=\177c\223<+\026\007\275y\216\345\274-\233\275\274\244\025\335<|\235z\274\2611\373<@\312\327<\264\271\347\274\247\037\"\275,a\303<m%\217<Psv\2737O\006\275\216\2424=\024\235\031\275\203\371\255<\340\014\266<\336\2123=\310\2603\275\350\357%\275\010ji<\262\363E\275\255L\256\274\323{$=?\337f<C\3371=6\224\322;>R3<%w\340<\203\335)\274F\373M\2755\251*\275M\\H\275\010\305>\275\312a\000\275\246\030\233<*2u<\024c\037\2758_\033\275w)S=\001t\304<\227\230\024\275P\324\000\275o\363\257;\377\025f\274\226\301s;[\021Q=8\203(\2741C\313;%\345\346\272\004\201\224<\277a\027\275\023\235\273;t0\276<7\276\362<\323\346\026= p\326<2T(\274\333\357\262<HM\363<\020\360\204;\300\314A=\007\347?=\036\321\010\275s\n\'<o4\262<\357\023\265\274\333\247\326\274\324\262/=X\323\333\273p\371\376<\"\223\'=\215\235[\274\335\206W\275\2069\215:\350L<=\037);\275\263\343\324\274\364\355M=-\242\337\273\no\207\274\371\303\271<\305\204\221<@?C\274 \347\331\274;8 =\356\227 \2750\267\337\274\361\217\037=\346\303g<P])\272\305\270\262\274]\001\020\275\313\233\352\274\315W?\275\020\001*=E89\275=\2024\274&\334+;\004\322\274\274\337\341\351\274\337\204\220<\327\270\311\274vNE\274\356d\016\275\354\300\010<\372\243S=\253L\017\274\365\342\346\273\324\267\275\274\263\035e;3\ru\274\264\214\331\274I\224%\274K\315D\274/\307\022=\2573\370\2742\370A=\033\251\276<m\377\333\273u\305\324\274\251\252\207\274\237&M\275\365\270\275\274\202\333W=2\315\324\274\362\333T\275W\215\003\2751w\317\273\314\3120\273\275_0\273ld\342;S\221D\274$\346\277\274\026\212\311<\332_\325<T\372\001=\366\006j<H\202g<\217^\026=\346\377\355<\323\243\301<\025C\231<|\336R=B*\'=\261\3535<\237\317\357\274\313IS=\226\217\310\274h60\275T\252J\275\213fH=S\200J=\336\203l\274\325\244\336\274\212\371\007=\360\357\034=\024\022G\275\201\363&\275\204uQ=\010\216\356\274\201~\267:\356u\335<\342\352\234\274\014\233J\275\177\247j<67\205;GU\361\274\336&\257\274\276\355\251\274\273\333H\275\274\034\201<\344\026W=\335\246\017=\355f\020=w\000\007<\272\232q;\210\206*=\243n\355\2739\273\025\275+ng<\335\265\265<\017\277\251\274\032\305I=\324\"\002<O -\275w\244\227<x\256\306\274=\326\270<\257\356s<\272&=<J\347.\275\205+$\275\217\335\306\274\005\037\013=h\3301\275\005\323/=\247A\026\275\037\266\000\274Ri\353;\017\020\367\2745\260J=\204\361\300\274Y\311R\273\343k\203<\277p\202\274Y:\233<\207v\304<k\226\322\271P\256\346<\376\277\036\2758\333\004=\032\323L\275\225[;\275\202\241$=\277\234\216<\002F\032=L\023V<&p\033\275(\313A=u\324\241\274\013\322\357<\316\367%=\010aG<\3569\033=\023\217k<\326\255\213\273\335\027\n\274\3437\273;M7\002\275\3748\250<\037\347M=\330\367\303\274\357/\n\275>\223\253;8ix;Q\3139\274\342\362\260;\367~5<6\004\010=&\206\021\275\315\335*\2750H\031=\024\"\003=\014\336\214\272\224\300\336\274\007|\303;(wB=v\237\024\275`<.\275\331r@\275\263\315s\274\354_S<\330\237\371\274\213\252\370\273\317\263\342<\336\3306\275\225\021d\273\363\327\273<\242\374$\275\0213:\275d^\363\274u\"u\274\322\005Q;|\207S\275k\3377\274\037\025\3509\232|\226\274\022\264\002=\312\363\005\275\036(d\274jTa\274P\0233=\313\0032=\254\215(=\310\2421\275\\\177O\275:\276B<?\326\203\274\004\363E<\346\242\247\274\355\334\000=M(\275\274\251<:=\374E\264<\350\365\255<Y\372\027=\312&8=\332\001\317\274Y\377R=\277d!\275\177\240*\275s\230_\274v\301\007<l\345\310<\226\n8\273\236\246?=#l\340<\177 \323<\010\205\000=\304\250#\275\353\365\000\275L\316@=\214\226\036\275Dri<\324\016\026\275\356\370M<3\215\007=d\222\207\274rT\345<\2646\373\273\322\222\227;]\321\307\274*\005\261\272{tN\275c\310\215<\265\3479\2759\325V\2747\321\205<F\347\241\2741n\301<\201hB:n\356\375\273g\006[\2749G\233;aWl\273\355\344\t\274\211@0:,\275\215<O\373W\275\014/\335\273E}\210\274\234\257\212</@\271\274/\007\272\274\01779=\005!\377<$\010z:\345\024\225\273Cq\335\272G\320s\273\222o\037\275\370\275\237\274\030\331\367<\336\211\037=T{/=\344Z\207\274\242\201\237\274\262t7\275\362i\361\274\240\323\242<\325y-\275\365\2311\275\304Z\206<\365\243+=T\346\234<\t$X\275\001\242\225\274!XH\275\371^\262<\033d\366<\205(T\274\241\3418=&\362\374<\337\253\036=\362\010O=\276=\231;\225|\227\274D#5=\244 2\275\200F5\275\231y\321<Q\\\327<\004\354\013\275\221\214\367<\024\231\352<^D#\275\215?\032\272\305\366#<\356s\253<p\352\375<\213\330&\274~\026\321\2742\274\370\274m\2166<\036\022\226<0MQ=\001&\242\274\302\036\326\274\326\343\315\273\216\nG<&\3603\273\177\242\031=}\241 =\353\316\313\2749l\003\275\257W%=\327;\207\274G\201;\275\025\234\017\275i\021\361<x\255\366\274\235\373I=R\244\000\275\304}\361\274RQI\275\370\351\202\274\361\0104\275\217\243\030\275\317W\325;v|\203\274\344\312\000=\224\177\337\274:Y\\<&ox<\307\251f\274j\327\331;\377\276$\275^\005\312<\"j(\275\202>H=\030#\000=\255z\232<W7\265\274\3644\000\275\213\355\030\275\036\367\025\275X\330\267\273<.&\275Zn\004\275M\0068<\205^4<1uz<\302\356\350<)\252\341<\357\202#=c\262\251<\317c\300\274\360\363\367<gwf\274C\356\323\274\346\024S\274Y{5\274Vy\035<\346\347(\275\237\373?=\357\266\261\274\'|W\275F@\300<\037)\306<\025\\\035=\021\325!=\327/\300;\2012<\275\374\312\r\275\300\006K=J\371g\274\206z\004\275\337\214\244\274\337\247\242\274\235\266A\275\202\343\313\274\r>\233\274\247\007\347\274P\334\032\275\236\033I\275\362\315\020=\255\335\266\274Y\231\200\274r?Q=\361\364I\275\364\021\343;\216\003\022\273\025\317X\274m~6\275\036du\274\221\351Z<\266&!\274\206\037!\275N\022\003=`\213P<\345\277+=\347}\201\274\025\271\272<+\357\323\274\344\242F=x\254R=\253h8=\346k.:\374\024\235\274@\357\370:\363=j<\341\2668\273\\\2105\273E\016\230:\231F.=\273\320U\275\207R\024=\306\242\370<\365\200\264\2747\030\225\274\305\r\267\274u\274\274\274n;]\274\201\nO\275^\237\376<\034.\244\274[*\304:\331\326\036\275\334`6\273\334\264\\\274f\217<\273d\022t\274\354^\353\274\356k6=G\377\253\274\246|\362;\373\347\253<I\003H=\322u\001\275\303\345::\007\021\250\273\003\330\005=O\264$\275\3739/=5m9;\241\'|<a\267\242\274\256\237\273\274p\0279\275\231~\332;\233/\211\273\334\200\345\274>\353\257;\202]\320<K\332\372<\203+\024=\032\240,\275\033\203!\274\302\372+=_\317\037\275z\357\273\274a1-=\317\'q<\206*\001\275\244\351\001\275\373\220\t\275 X1=Q\230\032\274\022w\241<\301a\251\274PA\325<\300\233\364\274\0211\237<H\300\306<@\304\347<\340Hk\2746\256\203\273\221\2723=\3233h\273\30378;\264,\036=\367B\244<c\360R<>F3\274\300\253\336\274\001\334\244\274\316l\245<\231\374><8\223P=\276\020J9\010Z\001=\224^&\275\245\202>\275\311\236F\275g\201\027\275<K\367\273\230sH=\'\201F\275E\312\223\274\361\265^\274\033\215\247\274P\261\034=\021\341\342\270\307z\016\275=<d<\275\232%=\3565%=\270\204[;\226\231@<\244CS\2759\244\273<\324\337C\275\"\337\260\274\210\322\n\2758\227\341\2748\036I\275\272]/\275pS\327<[\343t\274p\345C\275\203Q,=A\177\215\274\316b\024\275y\334h<\221yL<\273\302\372<\276\245\220\274\003MO=3\031\n\275\261\242><\022b\031\275X\337%\275\225\333\273\274v\204\244\273F\331\002=\243P.\275l\367\003\275\033\254(\275VQ\215<E\364\021\274\236\337K=1\027\017=P\000\316\274l\255\243\274.!V=\246!L=\245Y\243\274\02535\275\200\226\020<\311\2411\275\" \274\274\000f>\275foj\274\260\3412\275\363\261>\275\2759\330;%|\032\275\337N\234<\214?\024=\256lT\2758\244\t\274\004\376\336:\363\313%=\371j\273\273Z\205W\274\371\375-=\312\371\273\271\314$X\2744\224D\275\203\312/\275\360\233\374\2740I$\275l5S=MsQ=\222\355R=\332\342E\273\006\006\013\275jH\024\275\006*\342\274\324\353\004=~\254;=Iw\205<\252+/=\007\235\020\275\006s\315<\327\325\205\273?\022\335\274\216\035\021\275\010\313\035\275\355\300v<p\225~\273\214\004\022=E\274\356<\256\302V\275\201\244\005<\000=\030=B\032D\275\343\345V\275\211}2=\270mW<\373\352\260;\371\006I\275g\307\374;\310<,=M{\243<b\027\206<b\205\004\275\376\340\260<5\234G\274\224\244\332\274G\re<i~\354\2734\263\002;\243\320\377\274\251\244;\275\260\266$\275\364\265\274\273H\217\244\273\312\252\207\274\261@\007\275n\340\312<\302\377\031=\252\022\246<A\223\257\274\260,\333<\013`\340<&\365\036<g\2242=\317,>\275R\351]\274\0224\255\274\261v\201\2740\022)=~\340\324<\020\2614=\252\230\205:l\031\366;a\316\265<K\267\035\275\316\244\000=\375\234\013\274\322\2625<\203\260\352\274\220M$\275Q\356\010=\371\362\304\272\360\356\340<KL\233\274\025x\276<\031R\"=\372\221\027\275\002\335\306\274\025\2460=<;\216<\314\352S<,v\324\273\021\263l:Y\261O\275\013\262\003\275\351\274\001\275\240\317\272\274\242\t\035\275\303\326 \274\344\216&\275\365\267\364<Mm\000\275\035mU=\251\362Z<\242\200\326<6\356\205\274\245\254\217\273\372\221\n\2756;J\273l\236\3169\022G\237<\243\033\036\275\363\006\266\272Z\306\\\274\036\277\031=M\261\221<\201\222;\272\315;F=7\205,<`\310\264;<\\\037=a-\005\275=*\320<\"\373I\274\265\020\241;\264\210U\2754\265#=\004\\\001=\351\222\021=|:1=,!\034\275\250 9=\r\2224<JI\014\275\236\224\016\275q\222\007=\005i\214\274z\007K\275\203\216\227<\254\357O=\276o(=x\344\373<\217\327C\275p[K\275\372\225\214<\256(\034\275\300H0<\024\260-\275\360q1\275\016{\007=Q\200\347<\035\317\004\274x\317D=c\200+=\275\256\316:J\032\260\274B;\310<\336t\006\275\323Q)=b\241\366<\300\376\345\273\006\260\010=\230\360O\2757S\366<\352\266\031;r\264E=\300\237\237<5\216\340\274\241\206R=\230\311\014<\257Z\001=\231\277\'\275\222\"\026\274fE\231\271\027\'\244\274r\363\302<\01406\275D\334e\274R\233&<\003uX\275\334\271&\274\266x\242\274\206\206\220\274\002\271\t\275\rMV<\352\317n;bV\023=4\235G=m\023\265\274V?g\273\t\030\230\274\355\236:=z$>=\273\321\000=\322\351Z\2741\2730=\207\307T<\344~G\275\312\223\337<\312\206\250<N\014\236<\3467\361\273\235\3268;#\3353;\275\013\255\274O\374\007=\2022&<\354\275\210\274\332\347t<\343\365D\275\333\300&=D\'\005\275\203\213-\275\235\357?=7o\017=+\027/\275\21592=\240\031\\<\300d4\275\'\237\r\274V_\305<\327\376\240<c\036&\275\035\007\024=\275\365;\275\351\340L\275\223\232\263\272\3244\267<\230\2774\275V\034\271\274`\271$\274\220\357\000=\376\341m\274\305\312\203\274\010\357\013<\261\004\266\274\321\242K=\343$\276<Z\320<\275J\006\221;0SG<R\n%\275YE\310\274\346\250\017\275\310\256\265<\252\024\006=!\001\026\275\320\272/;`\246W=\344\205\013=.z\374<\327\274\037\275D\250\020\275\333S\304\274\312W =\315%3\275\376\374,\275\265\272\007=\306#\224\274\014\021(=\375\221\006=MYu\273\025\343\214<\240\230\266\274\324\353\374<v[\373<\367\264O=\311\367\327\273\363\036j\274\355\275\261<\3127\214\274\222\250\337<\364\267@\275\210Af<\242N0\275\317\235\241\274\331Q\347\274\375y\315<\234L\332<\332\265`\274\266*.\274H\246E\275T\215!\273\003\0005=\355\010\n=E\267\035\275W\203\034<\351<(<\353I\377\274u\032\014\275\301\026\254<\242\264+\275\356\237\215<x8\211\274kd\320\274\224\303\n\275,+\272\274\226\034\327<\017&\023<d\254{\274y\336\263<8\232>=\233=\274\274\324\3110\275\205z\374\274{\216<\275\311\014 =\227\251\242\274\375\3369\275jS\002=\313\262A\275\342UC=B\225S\275\370u\027=t\216\326\272\003\366\272\274\375\374K\275\226\021@\275\036_\000=>k\203<G\303\'=V\202<\274\300|7\275R\261\245;c\340r\274\346\032==\325\200\232;)q!<\302\251\243<\013R\224<\345|3=\362\205(=\202\3728=\313\277u\271aJ\021\275?\226\332<\\\014\271<Z,I\275<\010?\274P8.=\232Z\'=\263\364?\275\026=$\272QF\020=>\312\021\275\223\010\017\275\321\267\"<\230\026.=\2045\254:\261N\274\274c\252\005=\314\037\361<\310\237\003\272\003\317\320<^I\031\273V\036\322\274~\210\312<R\320$\275)\\\323<]\351`\274\024\323.\275(-<=\271\253R\275\326\364q<5\344m\274TR\356<\2501\254<\320\225\005=\362\261\362<\361\217#\275\367\2412=\207\277<\275\221\264+\275\346f\023=\262\330\220;\211\306;=n\261-=\025\311\016=\305\014\204\274rH\r\274:{\033=\237M\211\274${\301\274\237\224G\2755\302\035\275K\220G=\021\332H\274\216q\376:28\033\275\241\0053\275m\320\206<Z\210:=y\2150\275\n\023\226\274\234\374S=\374}\020\275\354$\371\274w\272\224\274\350Y\304\274\3350\004\275]\312\026\2746\367N=s.F=\210\253(\275\373\242\340<\246-J=2%\206<\243\207I\275\177\022N=\200)\227\274\253\\\201<\275\250l<\374\003H\2753<\264\274v\0202= \303~<E\371\315<m\263\305\274\242\177\206<\242\334t;\212mG<]\3355=\346\031?\274\346\314w;k\2022\2750\302P=\263\303\325\274\343\324\326\273\241\245\277\274\307\232H<\376q\230\274\371\313?= \202\371\274\257\305\254:SQ\343<\322\312\245\274\271\031\020\275X\353\251\274\001\232\335<\36485=\205;$\275\336i\016\275\024[}<\\\314N=vJ\026=\364\317\247\274\256l\271\273u`8\275\264k\030\272^j\377\272\271\301\262<\216\261T=\276@\032\273\310\363\243<s(\222\273\373\374~<\351x\356;\377\206U\273&Xo;B\302\255\274\014\377\236;\n\211\234<\211\204\312; O+=`Sr\274\312\214>\275\027\234Q=v~\022<\354\266\213<\023\372\030<[s\350;?dR<\005\322\036\275\274\201\274\274\236\3642=\376\355\256<\336d\365<\262c\265\2730\023I=\375/\203<\257\305\036\274\023\2424=\006\210%=\205\330\273<\201\2031\275\256V\356<(\326\376\274L\344\014\273\325\271\000\273^4H\273\224Y\275<\333\301\227\273-g\204<H;8\275#A\026=\370DH\274I\177\207\274.2\037\275.\355\024=\203\357H=\210\032\341\274\207&2=\266\270\305<#\231O\275\243\336o\274y\375)=\013U\000=\263\003\255\274\375\355\231\273\233\3524\275\347\233\316\274X\360\310<\361\017\257\273\337\242\246\273\276\360\273\274\253\2744<\255\247\014=\320>\346\274\353\364&\275TY(\275\001\370T=\272M\236<\347^\333\274\031\364\355<\311\245R=\310\312\257<\357\353B\275r\037T=j\006\t\273\004I\014=F\001#\274\037;\232<W\217\020=\375\203(\274\300\344\276\274\023p\230\274\355\351D=\215\212\010\275\315zL\275\347\177X\274\203W\261<0\203\010=\203\016\353<G\217\227<\354\0322\275\365H1\275\325a#\275\244m\344<N\023;=\372,(<\373u\007\273\212\266\355<\337r\334\274\002B\200;\347\340n\273\234d*\274\010\371\220\274\266H\002\275E\344c<s\021H\274\223D\013\275\353\313+<\224\255\254<V\330\034\275\272\351\351<V\351\354\271\027\343\347;Z)8\275\020\337\022\275\0275*<\352v\307<\243E\320\2733\262\030\272\363\251\202<S\024\304\274\323\202Q\274ax\316\274-:\304\274\375\026\203\273 \2373=3N\312\273\337\333N\275\007\213\032=\240\355%\275\320\247\245<\267\215\317;p\231M=\261%D:\377W\004:\350\303\372\274c\241\341:\241\241y\274Oa\324\272so\020\275\205z\027\274W\005\r\274\255\272\035=\371P\220;!\251L=>]!\275\340\353\013<\206\217(=\225\0105=\347\250\261<)\017\330\274\374K\350\274\2077;=!\306!=\245o\341\274\203w\r\275\256U-\274TGC=UTD\2751\026\233\274)\277\203<\277\0220=u^;=\364\2147=\254\250\030=\320\333\026=\376T8\275,\032\202\274|\263!\2727>\243\274=\361\335\274\361)\025\275\347\373<=ou\000\275r\300P\274\317\212\332<\235-K=\003\203\003\275\375\037;=u9\372;\016E)\275p]\020\275:\321o\274-6\350\274\305!\256<\246\224E\2751\0078\275\216\277g:\360\202\013\275\212\023\235\273x\037\000=\322\214\344<33\235;\3523)<\023\250\256<\246\024\031=>Q\322\274\034\365\002=\211\237\032\274]\350\031\2749\330\332<7;j\274\354\024\353<\353\2076=\n\"\353<\263\206~\274D\257\265<-\177\031\275\035\355o<8\276B= \315\354\274D\005%\2757\212F=s\020\021=3\314J=\276Z5=|\223\332;[\222\030\275wmH=-\010g\271\037\203B<\267\274\035\275\254\375\333;\370<\274\273%5g\274\261X\273<\375\247\255<\263S\202\274kd\214;#\2630<\314\301\n\275:\367\022=\341\215\036=\375\255\252\274\323\273C\274\213\210\264;\374\256\032=\017{\212\274Mc\326<\225\326\207\274-n\022<\356\247\345\27368\202\273\257\254p\274\204:@=\036w\024=Z-\027=\325\236\035\275\277\234Y;R\370C\275\227\214,\275\353r{\274\001\344.\275\'\026\007\275\266\016\221<[E\214\274\370\202\212\274\272\240\327;\225\254\214<\242\230\232\274\336\236\002\275\272\355\206<\004\213\370\274\010\243\210;H\331\007==\022H\275D\356\226\274\346+I\275\371mL=\210\3271=\315s!=\t\362\201<\332\333\303<<zB\2759\r\312<0\204\013\275\232\200\360<\247\027\270;\205\315\023=@0==\346\365\r=\2548\212\274e\205\016;\027\006\020\275\321\000\010\275 +\236<\"M`\273\306\374\333\274\304k\265\274\245\3751\275\231\266O;?\362\315\273D\257g\274L\267\304<\024~\261<|\2140;|\223\020\275\301\\\212\274WH\251<\202\336L\275\275\327\371<\237TQ=}\335\302\274\371\220\370;\342~\377\273\263\372\245:\235#\211\274\216\016\n=%\300G\275\002\251\036\275V\360\254\272(MQ=N}\236:I\037\'=\\n\366\274{\223\035=\021D\244;\033]\324<t\326\233<\305\362j\274\r\275G\275\253\270\325\274m$\020=\000\267$\275\334\323\243<\256*\370\273\036\023==\303\327\037=\277\200!<0\261\005\275\234%7=\002{\257\273sv\245<\325\377;;\r\322$<\251\314\277;7\201L\275o\304A= \335V=Z\242\006=\007C:<\250\024R\275a\373\327\274\361\306\250\274\325\010\230<f&T=A\031\224;\001Tl<\301\203\026\275_\302\376\274^\320\'\275\220\373\235<\005@\344\274\377s\034\274*\000\342;lj<=qY\372;~sb\272\021;\315\274\374t\242<\344\245\230\274\367i|<\272A\246;\316A8\275O\253\037\275\321\351\021\275\030D$=\240\231\315\273\276\267\246<\264f\006=\273\331\213<9FT\274B\322\\\273X\207I\275\030p\020\275\322w\n= !\n<\374UF=Z\257\335<\016.?<zJ$=\256\262\025\274Y\347\013=\256\017\000=j\211\234\274\204{\225<\241\210*=\227\0345\274s\355\306\274\305\224J=\203>U\275\314\262\016\275`\263T<\324=\316\274\017\211\326<\266P\263\274\301\341e<\220$\213\274)\257\372\274\'\3060=P\'2\275\\\332c<\273k\027=F\211{;\232\2665;f\006\031=\000\232\205;d\323\266\273W\213T=\340*\310\274\217\017\361\274.CG\273\332@\352\274\314\206\257;\023\352A=876\275\345\2332=\347?\374\273\357I\225\274R`P\275\034[ \275\004ax<\000h\241;\347\017\364<\014\364M\2756\2260\275i<S\274\302\026@<\305\361R\275\"\020\t;:\334I<hM/\274\263\221 <\216\3331<\356\034L\275\331h\030\275\263L\3309?]F<~\002\304<\2679\227\274\315Rj<\357\2407=%\353C=9\224i\274\016\030D\2740\354\025=h\323R=\247]3\275\333\003\036=\020\024z<\336\013\010\274K\200\377<\257a\276<8\212S\274\306\177\342<wwC=\264I\'\275\021S~<\204\250/=\351T\177\274\375m\232\273Hd\254\273\361X\250<\202\024>\275\021g4\275\332S\275<\345\2779=!<\031\275\016q\343\274\251\277M=\231o\366\272\223~\000\275\031B\342\2747:\025\275\331\304\274\274)\366\221<N\026\013=\275\233*\273\240\201H=\277\335A\275\262\0008=\373E\314\274\021\345U\275\264Z\304\274U\345I\273\230WB=\356Q$\275\022\314%\275\215\2214=Y\342\300\2740\t\234<}\315\032\275\331z\252;\010\2640;V* ;Y\036I\275\354\251(\275\305\236\032\275\256\266C\274\311O>\275k\030\322<\307\320F\274\247\323\374\274\205\334P<\241\222h<l\":\275\206V\214</\312\256\274\370J\272<\311\250J\275T\"\351\274\337XQ=\337\233\223<\2175\324\274\3201\336\274\021\322\357\274\300\0236\275\201W\"=\253\207O=-,@\274t\207\024=^I\'<\001M\311\274\362\236\000\274 Q\351\274\253\272\365\274>o\224<\223%\273\274wZ-\275\247\026$\275\315\033K\275:RK=#\213\223<\301\223\205<\270\t\003\275y\235\375\274\223-\271\274+\005\"=0(<\275\210GF\274[\322\t<\274Z\303\273+\277|\274\217\355-\275\322-\350<\204\010\364<\024\276\020\275Vw\027=DCl<[\2747\275*+\201\274\370\337a\273\206\336\264\274\350V99t*T\274\353\344\312<\017\255\365\274A\252\003=\016b\302<\006Y\014=\245\202H=\\Y_<>H\031=\r\351A\275(\\\030\275\t\315\322<\270\016\242\273i\245p<\327&\r=\252\2339\274\233\332\375\274H`\225\274\311\033K=\255\302\211<b\216\362\274\370(\021\274AR\242\274\306\330\202<\007\3600=\254|\n=B\204\205\274=\2605=\337\2553<\270\257$\273\' 5\275\030O\004=\311hL\275a\2266\274k\037\257\274\277P\013=\2532\2259\275\336\000=\264\315\334<\351\206\252\2745\033\177\274\227*\002=\362\300\372<\321\036\225<\360\"\313<Y\362\211<\300i\345:\306\2120\275k\026%\275T\021\003=~\307C\2755<W\275v\233\'\275\203\256\020\275C\3431\275V\324M<A\016\377<A`\353\273\327\216D\274\301\346:\275\034\213\'\275/Z\001=E\'\016\275\204\301!=\tz\344\274\246\3563\275\360<\016=\314l*<\326/5=\201\322\341\2744T\021\275\262\360\203<\036\316\034\275$\036\207\273\356\226P=\\\r\022=\000\345\252\274#\376~\274}aU=P\346\004\275\325\240\037=\014I\000\275;\270\212<Q0K\275\264\333\200\274\271\267\303\274\004\004\260<\250\001\243\274\344\357\351\274{\320\t<W\275\030=<\3425=\2002C\273\305\251\036\273^W\331\274\205\002P\275\003\337[\274LF0\275?\246\022;\250\2306=u`\301\274]\016)=C\3541\275\253h\367<\017\216\036=I\273#\275,b\323<\272i\231\274\022\006f\274\326\373j\274\001\354F\275\211\207/=\226x\371\273\370\035\343\274\245b \274\020S\270\273i\363;\275\227\202T\275F\2012=\300\273l\274\300\216O\275\244\340S=\027:\305<x\213\316<.e\346<_\355\243<H\251\206<5z\n\275u\360\273<\350\204\034<\035\354\216\274~!P<\261v\231\274K\'U\275\006\323\322\274\327\316\207\274\253X\321\274\225aG=F\314\215:2!0=\300\207\t\275\323\202*\275Q0\017\275\002\241\001=\375\020\032\274Y\330\321\273\254\311\014=\216\221>\275OMB\275\225\203\316<^w\026\275o(A\275\342?\033=\266\323\345<\312\205q\274u\t\310<\001b;\275\370\375\014<\005\0376=7!\"\275\247\001$\274\301\016\002\275\241\364\350<\305\260\316\274\307Z\373;\374F\023\275\212\206\236\274\334\337j<Z\022\027=\245!\036\275j\332\005<\021\\;\275\264\rL=\320(\317:\313\2422=\370g\022=\335\327:=|\262\344<w-L\275\260\337\276;\003\255\265\274\237\264p<\030\260\016\275\273\336\232\274\350^.\274pW\013:XOb<\353/@=\336K\363;\277S5\274\202s3\274\240\331\301\273t\234#<\215i;=\307`D<@\274\251<\303\223~\274\325~\331;\207\275\307\274\327\tN<\027\224\247\273\016\200\t=\235M!=\231dM=\200NI;,\251\032\275D\036#=N\363\314\273\327h\004\275>\330H=@\006D=\224\366\022<\3241\223\273\215\313S=\370\324\036=\222A\013\2754\310\210:m\302\003\275\276\334\020=\263\021 \275\313\217\305:\322J%=\375\301#=\027$\216\273\022\331Y<\354J.=\013\242\373<\332\242P\275\335\242\264\273\007)\370\274?\327(\275\335\223\312<\234+R<\3624\017=\300\202,\275L\241\275<\240g\341<\241g0\275\362@\026=X\020\030\275\321\261o;%)\017\275\006Fl<(\343T<\tu\310<!\022<\274qN\361\273\'\220\027\275\244\333\004=%\035I\2751\363\346;VXW=\302\014\177:\361\212O=nB\215<+$\332\274q\251\306;M\3251=\2363\302\274\037\357\242\274y\360\330<\034\341\333\274\022\326\005=\2365\227\274j\313\202<A\232\207<~LO=\030\331D<\264\323Z\274\342\270&=SJ\256\274\357\344\034=l@\232\274\375h1=7`\375<\341\306L=}\326\n=\234P.=\201~|\273\236\237\256<\251\261E\275\372\271i<W\331+=Q]\250\274x\300\026\275\221\364\026\275\036WO=\320%$=/u\222\274\273,\370<\254/g<\230\034<\275\235\264Q=*R3\274\014(%;n\221\030=\020\277\001=\263yV=W\353\"\273\014\326\021=\272\030\354\274\200\265U\274\320\256T\275\t\317\227<\232\373G=y\351B\273cp\025\275\215\365O<\240\263i\274G\016G<V\026\321<\014\325W=:K\306<<`\024=\372\351W=\214\002@=\017\\\236\274\013(\026=\364\217\352<\211SP=\304\210\264\274Xe\256<\323\014\261<\304\2167\275\"A8=Zh\226\274Il\022\274\357\013\007\275\321l\323<-kN=\333C\235<\225p\022=\252F\227\274\315\225\350\274 \014\000\275\357\236:\274t\242Q\273\316@W<\277\260(\275\212\321==\212@\013=-\252\335<\246N\253\274\302<\224<\rxM=\223\343j\274^+\003\275\320\275\203\272-r\367\273\337\213\352<dt\307\274N\304T\275,\006\003=9J?=XA\006\275G]\367<@\374\025\275\314\322B=7\345u\274m(6=\333\212K\274\t\352\247<ff\226;\335\275\030\275\265\270\005\275g\250\274\273\2734\347\274\264\\W<\343m\227<\243%\267\274\203J?:\345\016\272\274g\021J\275\0344\037\2746\352\331\272\244\304\237<{mg<\332\223y<v?X\275\346\000\026\275\203\0311=\274\226\n\275\374,T=\225\200O=\023\034M\275\202\275\343<\372g\005=\375\263\022=\272{C=M\177S\275\3621=\275\244s\276\274\333\270\327<\210`\346\274\304H\024=\336\236\225\273\3650==/\344!<:b\034\275\210\332 \274\273\307\332\273\334\337\362;\023\013\227<g\2051\274Qh\027\275\177\030\236\274\231c\r\275lN1\275\353\001\177<\037#\023\274\377\330\222<\321\224\202<\200\254M=\335\036\304\274\364\177M\275nCb<\314\367\353<m\236\014\275\271\262\013=\305\317\240\2744\205\366\273\356\007f\274\305\242\003\274\224\007\302\273\206j-\273\261\371\205<\363\034\036\273G9\233\274_i]<z\363#<8\245m:e\341\372\274=\307\312<lZ\023\275F\2660\2756\352>\275o\342\242\273-\334\237\274\324\\\265\274%@\234</\005\017\275\360v<\274\310\272\254<\263?O\275\364x1\275\370?\264<-k\347\274\374[\334;f\027\361;\234t\325<@\216\013=\307\336S\275\365\007\t\275~\215\352<\320\3110\275 \370\t=eJT\274:\005\257\274\034\010E=\217G\r\275\016X\354\273\301\215\017=\006\300\361\274\347\260\304<\223|\325:\205\2467\274\364!*\275\355\265\345;\240\\\207<9\375l\274\345\353A\274\314V\324\274ge\024\275\310m\256\274\276\r\270\274{c\317<\363\337\034=:u\025=\244\007b<_|\244\274\304\304\025=rZ\253\274\354\3717\275\014\357\201\274\234\364?=\2462\030=1\210.\275\333+\270;UZ\302\273\310G\004=\374\343O\275E\264\020<\335\n\265\274\337\271\200\274\357\n\024\274\352\310\366\274\276\034\366<\352r\341<\037P\006\2750q\337\273\204\367b\274\272\307\230\274\300\373\207<\231!G=-G\323\273I\357\022=\225(\221:\212\302D\275g#<\275\3772Z\2749\255\005\275|2:\275\257K\210\274\211\247\341<NQ\332<\004\031\306<w\027\343;\300@\032\274\355\356P=u\266p\274\211\244I=\000\000T=w0V=\204\207\326\273\313\314@\275\343\246+\274\253g\221\274u\2462=\265\353x\274\357\251P\274\310\365E\275\277\336\004;\022`H==\030\210:\233\210==L\275 =\231\375\320\273\343{\016=\030\302\003=\2622\334\274)\347I\275\240F\n\275D3>\275\323\265\033\275\027\245\365<dY\000=\302|\027\275\317\377\002=\017\361\333<\313\275/\275[\3265\275\213\373\037\274\332\002)\275j\3737\275\271A>=\336_.\274\271\234\320:\276\334\342\274\375\300{\274\274\305=<\330_4=\314\203\n=\023\241\017=\341\007\016\274\024}8\275\264\340B\274o\216\340\2749\333\210<i\034`<\345\2763\275\0140\005\275\302\250\214;1\207:\275m\337\r\275e\371W=\021\222a\274s\203\017<\021U\325\273\321|(\275\037\232B=w\302J<e\245\364<\302R\201\274\344Z1\275Nn\025\275M)\303;\272\257\313<\tx\006\275\243W7=\rKR\275\335\324\221<T\213\333\274\307\240\005\275\325:\t=N+N=k\003;=\353q\346<\232\360 \274\033\024D=\272\032\273\274f\307\230<!O\025=j\r\352\274\275\315:\275\3412\241\274\273\004-=D<u\274\260\202\206;l\261\374\273u\003 \274,.\021<\006\256C\275\230\247\266<\273\220D\275/q(=p\334\221<\361\013:\275\301MT\275/3\000<\035\220\337\274fHI\275F\323\324;\354\206\211<\316\000E=*\t\264<\034\316v<\222\003\336<\026b\004\275<\352\034<\255\220\361\274\353n\264<rP\327<\266\254\225<_\370\314\274\373o\022=\3521M\275l\034\027\275H\361\364\273\231\274\322;\027\301\370<\005A\271\274\242\272\2509\300\004C\275\2358\004\275;\313\257<&\3426\275mE\256<:s\265\274\213\026\021=\0232\375;E\232\251\273c\'1\275om\223<\245\360\216\274\213\245>=Y\0068\275\321\363\355\273\307\324f;H\325.\275F\'(\275rT\250<z\005\215<\177\257#\275\033\223\242\274\223w\034\275}\367)\275\326\264%\275\251\344G\273\201\001S=l\3512=\350\376\234<*\013\340<\3131\205<\\\033\327<\373\323\003\275(\371@\275\223}J=\207vM\275.\t\316\274#3\356\274\\\024\241\274\314t\350\273:CG=\351\224\362\274\177\367@=\007\204J=\031\031\203\274\334\314O\275\276\3246=8\311\003=\01064\275\367\2638=\307\364\313\273\240\217\215\274\324\311\021\274?,5=\275\267\304\274qY\372:\243#\374\274\205T!\275 \335\037=\345\261\025=\005}\262\273\001\301\373<\256f\026<\353$\207\274\225\0234\275\212\2549=\010\351\331<\031\357\210\273\317\010]<0ZW=\312\215D\273m\202\"=\005\r\320\272`\000\333\274_p\377\274+:`\274 \377\215\274\034H\221\273A~\262\272\344U\231\274O8\263\274I\203&=[\022\313<\004\362/=\016x==\240G4=\214\005\360<,}&=yg\004<I& \275Ig\252;\023h\331<\243\'\275\274\201\023\263<\261*\332<\336\250\234<\2616^<Q\027\224\274\200@%\275I\032\310\274dX\374;\032_\006\275\341\275Q=|}\n\275\216E\343\273\246~\306<\2564\021=\006\357\344<\020\272\013=\226\373\033\275\030mq<(\027N\274O%\260<3@\234\274\232z\325\2747+\031\275\365>S\274\203v\235;-E\375\274R+5<2s\024\275\276\013\363\274\3010\016\275)mC=\024\tk\274L+\223\274\030\334\200\274u\216\245<\177&\252;Yd\205<\246R\335</h\311\274-\325!\275\223\311!\2747\223A\274\310\311\003=\264\263\245<\246\"/=\332{\305<\020\036K=\2761\360\274\001\244\314;\001\232\002=\213TH\275G4\236<m;O<\314\323\361\274\374\264\227;\366a\243\274\365\212F\275L\001\334<Y\010G\275;\014\334\274\267b\'\275\366v\323\274\006\345\216<r \245<_\010U< e\022\275\351\337\222\273\311\344\266<\341\204\017\275G\322\017=\202\343\307\274Q\233\016<8\237(\274A\270\033=\275-\350\2736\353\034\275\000M\337<~\225)=/L\375\274j\020\257\274\002\350\355\273dW\254<3/\212<\271\024\014=\226\203\003\275\217\364S<+WK<\374,\006\275\271 \313\274g2\222<Xn\221\274\301\036\333\2748C\016=\242\021\375\274\007\253\227\274\277\203\371<|\260\007\274P\307M=`\214\360\274\312]\331<i\255G=\236\355?\275\363\360C=\301\226\335\274\270N\000<x\n\272<uf\251\274j\257\376\2747\n\210\273\257.%=\341\026\324\274\257t \275e\030%\275\350\235\362<\022}\031=\205L?=\016i\231\274?\266\205<\241#\205\273?\3071=$\200\006\275\333\031\022\275Z\r)=\371\306\227<\225\332D=V\357\t\275Pz5\275(\356\374\274\350\303>=\313G4=&\304!=\032M\373<\23279\274\267\207M=\010?L\275S\016\301\274\347Y\373<~\237==\2279\000\2757kI<m\037$=nB*\275\343\245\r=\000\362P<\322\251\207\274=\032h\274\251|\035;~\332B=\032\215\000\275Um\017=g\001A=\350?\266<1\213\277\274\370\314\233\274\031i$\275a\311*\275\\F?\275up\255<z\355 \275\342\326(\274aD\207\274\272\016\230\274A$\001<\342e\216\274>\2018\275\027\350\007<\243\2576\275^\221\n=\"I=\275}\360\004:\343\332\244\272/M<\275\307-J\274\0221\226\274\311m6<M]\245<\027\341\024\275?\334I=\324\235\001\275\000\263y<w\305\272:O\026\037\275un>\275\n\376m<\346DV\275\354\317U\275\346\363\347\274\274\330\342;\372\235\020=6v?=+;\255<\333\021\304\274E\201\330;\003\035\276<~\032\260;\360\203\250\274\2505\007\273\205\035\245\274\304\207\031\275O\300,\275&\006=\275\360\325\024<*\035\013<\262Z\024\275w\262E=\035\002\345\274\327\224\t=\317\025\324:\303\376\032\275\"sW=\364X\272\274G\376\017=\362\2073\274\207\341e;\211b\205;\022^o\274s\033\322\274\250\337\017<Iv\311\274\2044\375<2\2033\275)\034\212<4,\222\274\376\033\246;5D\230\274K\355\037<7\252\342\274^!3\274\021\343\225\274]0J=\331\\\340<\221\253#\275S\220\336<;\356\277\273\203\253\240<\036\210\270\273\027\265!\275\334\344\t=l0\\\2748n(\275\377p\202\274\270\240\263\274\214d\007=(&=\275\204\232\024\275\341\2318\274\272\344\374;\276\202\010=[\362\300\273\371YQ\275\375\356\333<\272\341D\275\220_\017=\337y\030\265\312&*<DQ\035=]\316\030;\016\334\241\273\013\r\030<\267`4\275i\026V\2746\314]\274\020\3016=j\265\322<\206\013\371\2749\252@\275\212w8=*\234 <6\261J=\326\360\233\274\302\320\355<\374Z\035=\374a\360<\031,X<\021~\370<\315hW=\266d*=f\336\004=.6\004\275L\301\267\274=\246\212<\207_/\275\031\345\036=,\341Z<Tm\021=\275\333}\274\037\242\263\274\375:\334;\025\313\302<\351\2765=CW\357<\343\217`\274)\254\365\274*\034\322\274\"j:\275\221\246\021\275\241\327p;\325\340\005\275\214x\366<s\224\252<\n\265\304;\002#\031\274\023f<\275\001o\372\274\376\212\037\275\364\222\257\274\213\221\242\274\2261\354\272S\345a\273Bm\236<\025\320\017\275\rH1=\355n9\275ipU=<\377%<\265\331e<}\014\321\274\276\266\332\271\017\356\317<U\032\r\275L7\304;\373O\270\274\360\001\003\274<\257M=\016\350N\275\226\035\226\274\035\234\003\275\272\365\361\274\266C\035\273\3726\350\274\030t <\001\257\255\274$G7\274\216K\221<\304Cw\274\323\260\010=\326=\025<d\200\007=\250\212j\274\023\244\336<J\273\300\274v\364\305<\366F\312<\373\005\025\275\262\352\321<\372\306D\274z\210!\275\245c&:\377VJ\274,\037c<\342%\334\27420!\274\212o&\271\261\246G\275S\306\262\274\343^\373<\212\352G\275{SP\275%Y\275;\247|b:w\"\217\274t\000\257\2747r\352<W\330;=09\021<\364\357C\274\025\017\330;&\022\024\275T\351\330\273P\233n<Of\005\275\264I8\275\241\266,<\310`8=$U\000=2/0\275\036\211\342;\013K\025\275O)|\273\363R\204\274\353x\232\274\340QQ=\365\016\n\275\023\254\207\274d\203\331\274\003|O\275\205\002B\275\203\000\304\274\036H\004\275>X\202\273\355\342W\274\256\3409=O\2049\275\3001E\275\220\027\336\274\200\362\347\274u\332\021\275\363/\020\275\256\336J=b\210\216\274C\2130=+\013\330;\020\031O=G\207\215<Ws8\275h\334\337\274\\{\2269?4x\274\2220\233<vZ\n\275dA\033\275\344u\254<\032b\004=\266P\357:\306\010\344<\321\351\235\274Y\026\222\273\305\225\035\2743((\274\n\2206\275\276C@\274\033B\334\274\210\301\367<cU\316<\016\242\227<\321\360^\274\202\272?:C\227\252\274\327e\022\275\2474T=OW\006=vx\364<\2623\253\274`\363M=\341\236\202<.\223`\274\336(\370\273@\027\013=-}\314\274Zw\'\275\377\020\036\275\022\233\332\274,\261W<\276\350T\275\201\265I\275j;\303<s\374F=\t\374G=\362\323/=\000\323W=\246\324V\274ZvR=\227\346\032\274@\317F<\365\227=\275\353^S\275\262\341\034\274AjI\275\206\242\312<\325P\335<*\376\"=\232\006\250<\234\277\305\274\233\325\325\274\373w3\275\234U:=zI\324\274\\\332M=\002\n\033;\211k\201\273Q\374>=\245O\233<9v\032\275C\272?=#\236\360<\335/3=\302\372K=\245\000\255<\237.\001\275P\223\256\273\365\251\231<P\303\267\274\204\372\004<\370\332K=w\247;\275\000P\352\274i\243T\275\356\374.\275\227\t\001\275\204j\230<\030B\323;\207\365\375\272\2663\327<\201d]\274LY\\\2743\355\035=\302\267\023=\016f\356<K\314\220\274V\331O=M\023\013\275^\266B\275\000\3666\275Z\030\263\273]\313\304\274\221\t\311\274>\372U\275-aN\274G.\026=\264\210/=.\361\'=v\353\334\274vE\372\273ky\341<8\257/=<\030\234\274\340\231\010=ina<Nx\250\274\016\017\t\275\244L*=\2419\365\274\342\342\232\274\332\004\002<Lt\370\274\331\200O\274U\222\017=\345\002I=\224\013]\274\277\355$<\371\330\005=\177bG;\230\206W;\312?\342<\213\221\201\274\200\214O;}}\272<\370\324\362\274\246\023<<4\233\n=\262\212\355<Pn\032<\240\213F<\207\010J\275\022\242c\273S\263I\274\000\203,=\275\360_<k\370S\275\224\023(\275\302\360\372\274\357\360H\274HO\330<S\"D\274\271\273+=o\274\030\275&_\346\274]\374L=V\361==a*\370\274\026\244\032=\275\354\022<9\017\322<\302\365\311\2745\246y\274Y\347<=\"\257M\273}\211\035\273\363\351:=3\'\350<4N\223\274*\261\032=\n*\027<\210\2202=\016\226z\274\r:\371<x\232&=\034~ \274\237MT\272\364\001\251<\346\332+\275D\351\006=mZ\357;<\270\033\275on\005\275C\271m<M\322\032\274\303\024W\274X%\241;/e\002=m\300\025=`\337\202\274W\277]\274\230\253Q\2752\327:=\217\251\377\272\233P\n\275&\333U\275\334\236\213<\366%\316\274\223\035\033=\007\321\366\274\203\265==\364{\032\275_\340y\274\233a\002\2755\335\002\275\334D0=\367\230C\275\030wR=\376\276\001\275\027\017?=\343\251#\274\325\354\301<l\330\323\274y\020:\275\246\213\332<N6P=\'J\325<U-\000\275!\261\325<\256\0147\275C\314S\274\272\346\007:\374\036\225\274d\022\003\275\372\242F\274\213\021\367\274R\377-=\\;.=\013\3752\2754\300g\274\334\3073\275\r\217\314\274*\250\311\274\233o\361\274\246\026\351<\305\"]\274\360\222\242\274\266AN=W%!={P\272\2744!\267\274\010v\331\273a\0200\275\226P?=<\212\336;\204A5=\347*=\275S\224l\273\322-\037\275\326|\010\275\337\323\236\274=\370A=(\220K=\315\271\222;\205{\223<q)2\274\357\361&\275XE<<\374N$<\241\004\202\274\022\177\334<\251\017\007=\356\000\374;\344\306\033=\001\212\034\275\217|\237;5`\235\274,\270r\274\004d\224\274\340<&\274O\240\377\273Z\205\276<\303\017\240<\010\3536\275ML\000\274\032\275\363\274\335\\\314\272@l.=\021\200*\275j9K\275\317\310\'=\004 M=\024\002$=\315\303\001<3\030%=\331|\222<\030\260\331\274\276>\371\274L\n\030=y:\007;\316\016\034=\361\034\371\274T\2231\275m\244U\275\230k)\273\306\217\364\274\177\373V=\223\220\210\272\243\356\342\273\276\213\020\275\324\032=\2753O#\274\260X_;\370H\000\275\034\n<;F\321\004\273\275\2733=p\023a\274m\376\201\274<\r\263\2743T\317\274;\2558\275\253X\242\274D\376.\275\343\027\004\275\0130%\275\366\3724<\325\254\220\274\004\225L=\213\266 \274\253\301\262<\273\274s<\220\247\307<@\r\315<Oq\336\274\261\004<<\327\250\036\275\365\265\023=B\327\002\273X}\277\274\224\036q\274\255\211\304\273*\331D<\314\035\034=\335\\%<\026\331\177\273\273`\002;\201\215l<]q%\275\300M\025\275\026s\035<\027U\024\275[#\"\275\244\212[<\\\035\340\273\360\004\301\274lp%=`5\251;~\035B=S\225+=B\375O\275\255[\000:\362\025\256:\316\212\010=\214;G<\311S\321\274+G\275<H\000\377<\212\374A=e\333\3279n\016\263<\264\017\034=(\257\237\274\366\346o\274 8\237\273\242\244\037\275c\261\014\275\212\313\037=\020\001P=k\031(=pf,\2756(\325<\001\310\210<\360\036I=\337h\234\274\312\273\326;6v\203;\355\376\024\2753\303\327<\222@ \274\342S+\275\2018\013=\0065\303<\265p\034\275\024\300|;\253.$=\264,\024=\304;\367<K\307\213\274{\266\322:\311L1\274$\265*\275\360>\033=\241bX=h\r&=A9\000\273\274\035\325;\n,\005\274\2766\312\274\022\326\r\273w\225\244<#\345#=\363\005\263<5GG\275w\306\231\274t\\\253;Xx\263;Y\377>\275K\267\027\275\265\324\007\275\025\302{;\243F\014<\026\270\020=\356\251\030=z\016@\274(\034\363<\321\222\364\274X\337\257\274\252\ts<\256\"\256\274\300\262(<\225\201\254;7H\020=\312\347P=!E\250\273\022\002\261\274\237\335\332\274\224D\n=\350X\013=\007\273\314;\364\212:\275\342\373\r<\177XL=\261\327\217<,\3102\275FA\211\274N\025\030=\3306g<F\325\020\274/\362\266<\300\207\337<\014H?\275\355K\276<g\020\320<\365C-=\230\252\376\274$\206$\275\350BA<Tq$=\010Xa\273\355\306\365<\342vA=DGM\275{\227\007\275\347|\321<%\336R\275\314\032\211<5\316\340\271U\237\030\275\223\272\355\274\2052X\27510b\274\372\247\022=k0\231\274\222]\n\275\353\372\316<xr\376\274\224\003s<\021\n*<\224\331\004=\0019\252<hKx<\'F=\2754\245\271<q\215\327\272\210\200\027<\225\340\211\274\277\242\327\273\314\236\375\2743\360B\275P\210W\275M\3512=\265\256\026\275\253\274\364<\244\037\247:Y%S<\365|\014=q\262\366<|\261\313\274\035v\351:c+\226;\232\005?\275 .\322<\204\212\024<\327\303T\274u\374>\274d\366\314;\'\262\017\275\261\272\332<\216\r\246<\026L\223<\036\275\357\274\2202$=\214\250\254<\311\337\027\275G\273%\275\313\356\020\275\211:\037=L\243\021\275\353\337\020=\245\222\332\274{8\036\275N\016\355\274 \007\331;\353!\023\275\244\326\324\274\264p\270<k\267P\275\275\005\216\274<-S\275Sk\314<R(\200<\200O\374\274\351nH=\322\374Q\275\372\2339\274\022\256\037<\326\032\351\274\037\3404\275G\350\331<y\320\035<\270\007:<\024\306\t=9B\344<\236\200\020=J\255\377<\3246:<y\343\200\274\007\260\257\274XP\270<pvE=!\033R=\321\032\033=\010\203\024\2756\003:=0\024D=^\021\365<\367QI\275\006\006<=}\366\304<\346\242B\275\020\201U=vh\021=\177V\274<>Xh\273x\206\250<\230\304\371<\nik<\261\313\302\273\217\205\212\273\226\216\360\2745!\322<l\252\314<&\037\351<mPv<^hL=\366\340\245\274i\254 \275\033\210\316<\007_\257\274\264\331Q=\214\033\n\274\325\0251\274\006\321\234<d\242\277\274\370{Z\274\005\313&<\354\260\024\275;)\355;o\312\232\274\303\236\"\274\031\274A\275\373\250\336<\014B\270\274\277\3642=\313B\250<\344\032F\275\265M\315\274\255V=\275V\345\t;\305\213$=y|\357<\312\030\177\274I\223\331\273\025\330\005\275\206&\264<0\010\n:\000\n\'=\005\315\022=\317\246\256\273+\237 =\311\264\372;m9\213<CT-=2\236\271<?\210\177<\005U\366;x\3400=j\206\\<\275\226\374<f\274\014=\027\024\355<\010\034J\275\225\225\031<\276d\231<\t\023\332\274\237\022\377\273r:\362<\215\336I\275\260\0338=\315\256\227\274\352\023\335\274;\247\277\274\343\327\363\274\272=\347<\t\032.=\356:#\272!\005\233<V\t\201\274;Xh\274\327:\234\274]\270}\272-\206<\274\355\257\211;m\252\377\274\tV5=\033\2267\275\273sA=\005\214\223<\336\315%\275\\\377\r;5QH\274\362\317g\274SG\272<4\322\363<\243\000\361\274,\206\206\272^`)<0!2\274\\\303G\275^R%\275C\220\003=\2244\237;\016\347P=\246\267\037\272\025Y\021=sy\017=G\342\215;\234\207*\275{-\037\275\301\024_<\276X\353\274\020%\245\274X\365\337\274@A\362\273\347\273F=ohL=M\003\020\274e\330:\275\272]G=b\"\200\274\316\264I\275\222\310\023=!\017\353\274h\270E\275\277\327\332\274\323~\330;\340F\016\275\303\344\354\274<\235\356\274\302H\316\274\253j\003\275c\265\024\275\002M\230\273\024\231%\275\260\360B=u\220\302;\235\341\036=\030\016\267<\006\307\220<\355\316x\272{$\270<\266\317\235\274a\316\207<\255\314\016\274\312\227\302<\177\006\201\2741\342\330\273\335\340\224:\264\370[<\317\321\027\275\312\311\312\274\223n;<W\035 =\337\346\205\274V]O=_M\325<p\225\370<\226d\021=\240#0=\010r\005=\206\013 \275\\\203\024\275\337\272\231<\2647\223<\2231\247\274\353o\211<\341\031\037\275\000\317\215\274(O\031\275\316\240\274\273\252\n\321<\335>\036\275\225\315\375\274U\026\007=[\354=<\'t\342<g\004\004\275S\265L\275\027N\034\274C\367\377\274\305\262\353<\245\212L=\332}\r=t\247\036\2753\001:=\355\271\302\274,7<=\220\350\250\274\037\313\r\275\3622E=\237<\014=x/\336\274\313\037\316\274\310\0353\275:\375\032=\366\021\014=\253g\001=\325\364\355<\317\032\272\274x\247P\275\374W;=\343\002\036;\213z\323\274Y\274\300;\265y<=\223\2628=w\353\270\274\205\016j<\276\205\020\275\275\214\250\274=\242\350;\024\350\303;\2101\037\275d\003\315\273\3220\n\274L\217)\275+\327/\275\375\032\342<~[\231<\323\351\224:\356\014\027<\207l8=7\235R\275\336\005\013=N_k;\303\300\245\273j\221\023=\375|\037<\242\222O=\340\2659=~q\024\275\204\n\010\275W\343W=p,\330;\001\270\246\272yC==\237*\311<\337\203\211\274\320\200\354\274\342\001\266\274\370r\021=\335\035?=\246~(=i$\200\274@9\302<\230X\024=h\264\027;\347DX\275\t\r\201<\307V\222<qx\364<\320\r\224\273Uy\247\273\017\256T\275\022{\321\274\204-\264<\255\217\316\274\344\324I=Xb4\275\306\003j\273\303U9\275MV\267\274\215\264\033=\365\345\n\275\330\367(;G\240\031=m\341W\275N\323\352<\300\371\002=\3269\210<`\365!\274\357\252`\273\246B\331\274` X=\245\352!=}<3=\345@S=\337:\"=\024T!=@\201\255<v\366\275\274\302\210a\274Q\376\237\273\315\2177\275Z\205\000<h-\273<Ef\345<\227\345D\275\'\367\355\274\2247\034=\201\007>=q\224&\275\356,\214<!\353\224<\314\277\231\271\252\335E\275\374\033\007;s\025><u\264\235<\272M\257<3\213\376\273]p\345<~\361\032=\263u\201\274\231\002\205\270\333\310\025<\332<\010\275\017k\254\274\331\251\375\274\327y\007\274\316\247\272\274I\245\237<%\207\030\275\332u\006=W\0143<%Q\020\274D\014\017=\275\303a<$\375V=\332|\302</\377$\274pS\005\275W\313c\273\313\005\204<\321\246[\274:\3014\275$%&\275{\3340\275^\361\275\274\2078\016=\207\004\342\274oj\247<\177*+\274,\2339\275\353\034\335\274C!L\275F\267\221\274\347;\021<\250\036\305<=\244\376\274v=\200;?P\341<\261\274\036\273\251h\356<5\225\"<\007|!\275\332\005==\244IG=HF@<\023:\003\275GM\332;a+E\2757\205\'\274\343C\336<\354\277\265<\263\301\326<\016my<\222\202\313\274\033\254,=dJQ\275\035\317S\275\275\330.=\032\347\214\273\324\"0=\342N\247\274\240\360\010=\267\033!=\241\346\342;\367\2550\275\267\271U\275\371\326\002\275\314\214\206\273%\237\276<\337\210\200<|\320\007\275\306\206G=V.\274\273\001}\034\275K\304Y<b\\0=\2033\312\274an\026\275r\217\r=#\355\356\273[W\r\275\354v\276\274\263hD=\252\274\270\274\304\0072=\022\367\304\274\3426\303\274\340S\025=\201\233\035\275\036\221\274<\374\226\274\274\016D\264<r\3706<\022\370\325<\367\333\027\273\021\211\325\273\311\'\'=\334\273K\275\323.\034<\234\343\241;\322\325\177\274\010\212\334<\350;x\274\301[\304\274\247\254\032=\036\020X\275lM*<\023\260\244</\321\265\274\211V\233;\033\252\235;\350\275n\274-\2425<Ga\302\274\032\"c<\214\224\311<\345\212I=\273\254d;Jg\362\272\025C5\275\351\225!=38\203\274e\022\326;\237\022\261\274\326|\372\272\277\303;\275\004^\003=\211\2663<@X\003=$!\017\274s\316;<6\201\334\274!\225\335\274\271\2230\274\250\2103=\026y\373;\364\2128\275gt8\274\201\006\371;\331\246\224\274\331\315\013=4}\337\274)2\316\274\255\360\242;P\014,=\207\375G\273N2C\275\177cN\274\n\242V=T\026\277\274\204\3519<-\246N\274l$\020=\237\343\316;sW\343\274\207\303j<\005\023/\275v\322\324<O\241\013=\254\352.\275\350D~\274\224\017E:\321.A\275\3676\r\274##\022\273\352\350Z<:\375#<q\357$=+`\245\274\262T\025\273\031\221\007\275\226c\030=AM\226\274\006@\223\274\336\017M=\3675@<\005\245H\275\234\306\016=\307d\006=\010\273\032=zN\025<\017`R\275\251a\033\275\207nD=\235f\013=|\334\361<\327\372\371\274\304\375\350\273a\357\032\275h=>\275\374\200\357\274-e!=\213\300\227;\322F\276<\243-7\273`\024@\275ng9<\322\241\330<\231\252\305\2742\006\343\274\316\327J\275G\014\031=\263:,\274\246So\272u\004\016=\310\204\033\274\303\372\207\274\204@\n\274\002;5=\260\n$=tT\207<\335\376(\275\311[\301\273\241\327\363\274(\236\275\274\266\240\252;\202\371\311<r\310\022\275\267\3475=D\004\331\273\373{4=3\023\215\273sP\205<Q\257\001\275\200\271\004=\310\210\031\275\265Y\000\275{\230\344< g*=\260\000\266<\007r\257<\233\306V\274\'\273\340<\216\024\031\275-\301@=\316\247\372\274Qa7=\204\024\334\273\365\272\013:qL\350;\202I\273\274\340\334\214<\352\224\374<Z.\260\274\014DX=\225\031>=\227\224E=H\2572\275)\233R=\014t\330<\354\224\331\273Mh/=\261\263F\275\205i9\275\377\355\227<\010z\337\274"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\246\016@\275\255\323N\275I\313\024\275\013n\002\275\315\320\223<~Q\014<\010\234\017\273\273\221\034\275%\342\353\274p\254\241\273j\240/=\343\3237=\247\204\216\272\226\206\t\275*\272\034\275\362D\246<l+\030=\3147\241<>[*=\301\007\014;\306\237\202<\343\363 \275\346\231\331<\241\340G\275\331z\330;N.\301<\371\027\367<\013\2463=\037\322\355\274\316S\241\274\325\277\035\275\021\016\026=^\256!\274\311A\022<\270\321/<-\013\375\274y\300\357\274=\372 \274+\220\006\275\231r)\275:\204\265<p\243\265\274B\016=\275\031\320\372<M=\031=|\210&<\215g<=\007\341\304\273\231jF\275\375<\212<<\014\317\274\230{\325<j1\263<F\342*=s8A=t\314\026\275y\241K\275#\220\312<X$-=\275\356N=\203\263\324\274\202/K<\203\205\"\275\243\357\305<\211\226\353<\006\240/=\347\363\255;\365\013\r=\254\210\n\275\352\267\346\274\264\256\350\273\365\265\004\275N\205\t:0Tg<^/\306\274#\013\254\273\032<W\275M\016<<\362t\212\271\017\207\345\272\020R9=\3432l<QO\007=IH\'<5\t\025\275\325\377\272\274\\\3544\275wL\035<\245\221\333<\030:\215\274c\220\027\275Cq\263\274J4==\313\303\003\275\247\226L=\341\244I\275\337\250w8\364\270R;\311o\260:?\372\352<B\366U\275\325\036\001=d{R=\201\027@=\252s\027=\364O\272\274\254\031\000<kX\t=*\310L<\254\320\017\274\344\371\301\274U\352\351:\367\2106=\026@\007=K\n\271\274\326\302\032\274\372f\372;\270\370\320<bN\255:[G=\275\030\227\013=\353x\363\272\005\256f\274>\330A\275\232Q\236\274p<G=m\332\317<\326\223\206\274W\233\260\274O\370G\2752\211w<?\177\273<.&E\275U\355\371<;\205\364<\231\2476=b\254\353<\250n\241;\270j\267\274\036XW\273\362;\226<\315\\\262\274\265:\036=8\344\375<V\345\007<\361\333\035\275\017W9=Q\026\262<V\346\023\273=\225\010\275`\004\374\274\257Z4=^\232\014\274\320\0239=^\274\347<fH\245<=\366i;s\033e<\316\226\034\274:\355,\2757\014\205:\333\321#=\270\002\344\274ox\227\273\251K\231<\322\202\332\274\254\374!=2=:=\375\254\205;\326xG=\3105\371<\375\221\373<H\364M\275\031hz:\345a\354;\253\034\001:Q\323\027\275\255\310H\275\320j\351<\36135\275\362\333!\275\373P\026\275\373g\304<\014\330\033=\217O\010:\340\'\034\275\177Y\344\274\3268\251<\276\0037=\222\332\031\275\311\310g<@}\272;\335w\330\274>|\333<\256\345E\272a\013M<\032\330n\273ar\370<\022\251\375\2741\234)\275\201K$<\371\2011\275V\034#=\273Y\313;j[*\275C-6\275^_\020\274\005f\"=\337/O<\320\326\010=mk\240:\010\271\213\273\331<\354\273\213\255\222\274\032x\n=\035a\314\273\307*\367\274\266\314p\274*d,=\214\3643=&\356\032<\030I\"\273.\243;=\246\361\317\274\031\327\267\274\203&\365\274\230\3405\274Q\361\200<yG\336<\356\254\221\273\r+\361\274\335JI<+8*<\351\3275\274\275/\013=\027\301\322;\035+>\273\211\020;\274\243N%=<\017`\274\315\002\346\274\004\024\360<\022U\203\274}\220\020\272x\214\233\274\232H\036<\203!^<\263\026.\275\257\016>\275\006\365\352<O.C\273\0332\035\273\234\355\345\2736\227\344\274\363U\001\275}\262\342\274\2533\372;N`\361<r\376\270\273\323\331#=\274\035(\274\351\261#=\301\355\301<%\031\324\274\335\214\003\275\333}\033\274\266M/\275d\277\024=\322]\270<\347\377\301<:\264\320;\212\035\202;\314\253\030\275u0\205<gf\270<\267jk;\241\275\n\275\323u\001\2756h.;&\304W\275Z\351\233;\241\t\252<\262\241\312\274\377\263\225;)\'$\275\243\006l;w\325\004\275fY-=j\254\023<g\304g\274\230A$=X?\312<\210UA\275=\215,\275\364\023I=%W\006\274\373\006\304<\204\2019=\344}\320\274\027K@=+d\374<?bL=@i\r\274\374\272E=\025\220\216\274\250u\213\274\207\211\334\274\331z\234;\266\251.\275\323\215<=\205\365\033=,\365B=\224\002!\274\367\354\032\275K\202S\274\016\274:;y\212~<YP\265<k\323U\275\377\201\017=\3602\244\274\250\312\213<\262i\310<7\307\350\273N\276A=\324\212\315<\235b<=\360\241m\274\307\262\014=g\003?=\267q5\273H\361+<7\377#\275p{9\275s\243\001\275\231Q\310\274\253S\260\274\034\3348\275\346\021\250<\233qh<6\314\300\274\2272\346\274\3171\276\274b%^<\0331M=\315\203R=\266\306:=B<\252\272IZ*\275\003s\323<\364\201\350\274\352\310/:@\360K<\202\025<\274\035\344\t=\236\252\034<\257\212\211<\212\023x\272\216i1\275\220\033\262<\221\037F<\007t\205\273\263p\024=\227\265D=\204\027(=\315\340\t<.\235C=\313S\000=\222\344\000\274\333E{<\253\337\261\274c\035N\275\026\353+\275\303\005\207<\206\361\261<\3320\333\273\256gI;\230X\347<\351,$\275\033+\342\273\232\316>=s\317\312;\324p\300\273~\331\017=A\260A\275y\340\004\275\336%\"=!\372E\274:\340\220<\222\262\006= \351\334\272\025\341\317<\331\312I;ErX=,\250><=\306w\274\353\006P=t\376\365\2738\037e\274\002@\340<\214\2561\275\300{{\274\242\014\332\274\355\326\221\272@^\330;\\3\"\274\375\334\345<\202\254>\275G\304\331<\270;(\274\233\202\312\274\020&m\273\251\226]\272ZZ\274;E\342\310<\232p(=U\303\366\274[\364\316\273*&\036=!W\212\274\262\307\376\274Z\177)=\030\342\252<\262\013\354\274\234kE\275.\n(\275hp\362:y\330V\275\266d?=\024\236\371<\004\375\275\270\342U\322<\337\246\023\275\020P\350\272\376\010\022=\223-a<\033b\2778\273\"\245\274o\023\302<\020\274J=\247\322\373\274\350\3667\275\204!\206<\232\263]\273~\356&\275\2044\242\272\2762\347;\241wS\275\301\333\033=j\004\030;}\007n<\340t\003\273\030Z+\275\370\221\210<\366\307\246\274\201\305r\274t\337\305<\247\266\030;\006\322\350\274\207\210\330\273\342\333\276\274\027\231<\2753;#=\341\204U\275(z-=\314\252P=\216V\014\275\2142\353<\307\035\253<\323ZJ=\322S\320\274\373\177\242<\304\n\313\273\370\3153=\006\334\214\274\013\334\211\274\301\3557\275\017\273$\274v\262M<\337%\202\274Z\237$\275\240~\256\274\301lX<\346\330\003\274o\022=\274K\300\260<l\034\002=\177m\177\273\330\275f\274\316\255J\2756\334\236\272\257\325\201\274\016\026a;\004\021\035\274\3369#<F\366E\273\323\335\031<+<\205\274V\344D\275\256N\002=\237\010\022\274\001>\035=\347\t3\275\344\014\263<\333m\246\274\375\263\230\274\265\272t<*\365\215<\313dU\275|\343\213<\236j\035=r\266\001\274G\232\272<\276\2275<\t\303\033\275\227b\313<E&x<\236\324D\275\010\030\252\274\353\201:=Q\273<\275J\035\357\274\242p\354\271\325\200S\274\356[D\2754\3759=\222\023\236<\231@\244\2741\3141=\n\025\244\274-VU\275\0229\007\275\257\262\361\273\233D\345<\275\0221\275\2376G\275\230iC\275\342\316\202<\306\005+<\317\227\275\274\013\231P=\232\231\004=\242J\026=\371\322\311<\023\276\007\275\346U\363<5\300\231\274\227\361\021=\242|2=\373\034\333<0dE\275\241\266G\275\373\010\034=nX%<\243\303\231<\317[0\275M\017\325<l\215\214<R\371\265\274V,\016=\364iA<\240++=\311\343R=\034G?=\214\213\031\275\217\276\034=\002\213\236\272\264\220\014\275u8%<\2002)=0)\317\273\260\265\250<w2\243<\201>\227\273\372\240\006=_\006\304<\276p\363<\311=\013\274k\336\022\275x\201T=\320\262z\2740\247\007<\214\367\335<\221\031\001<\225B\200<hR\222<\23440=]\205N\273*\3519=\342\025d<M\224\356\273KI\213\273\260\320\024\275\262\351\313\2741jL\275\221d,=\307s\370\274\036\376\034\274VV\n\274h\306M=\022\300\014\275\2661/=\034\246W\275\000\337?=!\324\306<\347\302\3209\3116I=]\002%\275\026\271\376\273\026T\017\275GRX=\221\202\323<\177w\242<g\202\202\274\311\253\236<\332q\356\273p3\002\275\r\035\000\275\005\301\362\274\375\016\002\274T\214\352\274\335CG=xN\227\274B\375E=\227na<\010\000\021\275\017\266\022=*\036;\275y\\\335\2745L\265\273\203\246\206\2746\210\251<o\n^\274\324s\020\275\274\363\275;\031_*\275\371\3346=CD\351\271\006$\r=U\373\305\274uvU\275M.\276<\300\025\031;\312*\250\274\026\221\345\274?!H\275\344W\017<\255Y4<\233\254\253<\243\214>\274\241vH\275\335\212-=i\262\240<\017I\325\274\035b\270\274w\371\274<o\244H\275\307\204\r\275\361\240\371<q-\377<e\354\200<\245\034\035\275\274\267\014=\336K\376<\245:\270<}\267n\274\320\266\177\274\267\242E\275\374\215\276<T\2340=\310\030\033:\365\332`<+\367\211\274\"\023C=\372\017\371<0\260\n<(\347\214<6Ld\274:Rs<\201C\360\273\000\233><\016\016M=\334\336\007=3\360O\272\303\2460=H\345%\274\325!1\274\227\231&=\365?\013=oT2\275\201\3211=\223\035\377\274\364\364>;A\000~;:\352\302<\344\303K\275\356k\275<X\332\315<xAn\273?\035T<\324*\317<\035?\017=^\373_\274\311\357\231\274\\\0030=l\370\254\273\250\251\035\275\260\321\t\275\r\333\222\273\334\202\030=\271\010@=\277\227Q;\204\317C\274\251\263\246\274\317_\022\275\206.\244\272\226\377/<\023\207\027\275\"\347\341\274\300\2707=\222\200W=\004\265O\275\364n\300;\234\216\327\274\257\242\326:;>-\275%\227F\275\024\367\375\274\037f =n\201\211\273\352\033C=\"\341>\275\315\366\302;\263\300\026\274\336\327\031\275S>\276\274\225\007>=k;\226<\310\277\277<\366\350\327<\265z&\275^\030\206<3\030N\2757\232\376\274\320\010)\275Z\256\224<\372\"\225<\225-\024=\243\023\274\273\026\000 <\374\375E\274\321\217\306\274\224\357\337\274Q\005\210\274IkF\274\371\3100\275\216\031;\2752\252\025\275\304\017/<\237F\260<\r\241\231\274-\257`\274\033g\006=\035\361\240<dl\007=\027\243\004\274\010\217\'=\013}8</F\t=]&7=4,\271<\362\254><5\271\344\273\215\025/\2755\021\005\275`\232\337<M\257\017=q\033{\274\225{O\273\351\347\020\275\360W\n<\375\240o;\3611\217<\243\316\226<\240\024(\275\013JN=g\367\360<o1/\275\022r\036\275?\333\367\274e9\251;9\336\363\273\226\205g\273\010CX<G\306)<]\007&=\324K\372<j\340O\275\200*B=\342\256\302\271ZL6<\314\357\031=6\271\031<TvI;\350\017\313\274\321z\225\274&\3630\274`\016O=\354\346J=~:B\275\223\313\350\274\263v\255\272(3\317\273\327\034\317<J\263\355<o\312\025=\232Z\200<_\366H\273w\321\010=\267\257\234<q2G=F\2042=\357l6;J\221\324<Z\211J\275\312\347F\275:\224U\274q\001\361<\333\207\225\274\360\222%=\250@!\275\310\226\201<*\370\221\2732\372E\275\332\244*=.\260\305\274\n\361B=\250\260~;\371\250\375\274\267\t =(p\227\274sX\021<s\2511\275\005\276\260\274\346>\254\274\260\022\037=5\023\361<\010MR\273\335w<=\\!K=\206\305\343\274\361\271\007\275d\346\035=r\2606\275\261\204\036\275g$\031\275\315\256\354<\'\245_<(UJ\274u\364R<\237)G\275Y:\270\274\366\"\331\274l\255\252\274\202h\337<\nV2=\254\321\013\275\031\316\240\274`h\206\274\213@==\210$\223\274B\225G\275\023l,=\024sP=\231U\017=\272\256%<\262\300\030=\321b\377<\276\253\360\274\246+\032\274\337\311\212\274hW\333<\255\210\367<\303\353\031=\266\335(=M\3129\275\\qD\275h\2477=\027\356\335\273\334\323U\275\"[\261<\262Gm\273\212\177\"\272\252\177\243\274\274 \'=o\345\027=3L\002<\'\002 \275\225\242\';t4W\275T\262u;\200\036}\274-\234K=a\005)9?\3718<\354U\327\274DE&\2755y\344\274\374=T\275{\207\001=\364\271\224\274\177\234\343;\207SI=\006&\033\2747)u<\263\027\347\272\256\275I\275\262\363\255\2741\314\331\274P\320E=&\013\005\275\230\302K=\306\335\223\273O\256\023\275\r^1\274\245\226P\275{nK=\333\243_<\363V\253\274\010?M\275[\310\004\275R\\\'\2754fM\274\200\233\253;Z\214\033\275S\310D=\266\332\037\275\030\206\031\2748\'A=\"\321 =\007+\376<\373\322\034=\247\300\2247_gL=\005\026\335<\351!\231<\351\314e<\366\356\037=L1U\273c~\356<\303\213\n=A39\275\023\270\027=\346-\025\275\006{\247<\240\301\201<\217\342\025\275=h\006\275A\370\210<\232\030\000\275\336\335$=\254\276\023\275\365\024G\274\221\344\021=!\214\365<6\201\021=\354\014E\273\324LU;U\203\237<W\005\220<\213\316g<\302\020\344\273\006\342:\274\324\215o\274\237.6\275t\227\340<\r\261\035=O\310\365\274b\025\200<\247a\003;\274br<\312\232)=J{I\275\271\271S;\325\350\027\275\030!c<n5\001=\201M}<\303\222P\275\321\024\213\274)&\365;\223\364\032=\223bJ\275\204\302T=\nc\336\274\357\215\032\275\375&\214<\226\326&=PA\005=\02538<H*\206<\205_\274\274\302\274\027=&F\237<\337\360\206\274Zv\206<.\256\020=\367i\316<\312\223\n\275\027\250\035\2755\240\374;\006\213\r\275\227[\217\274x\333C\275\\\342\021=}[\240\274\330^\204<\234i\246<\251\235!=\267yL<\222\265\372\274\202\"W=\\(\314\274mGt;\266\277\322\2736\241\322<\341\213\267\273\263\362\336\274$q\n=\311\014K\275\005n\266\272\201_==X<\275;\303\265\202<^{\036;\277\372);o\006B<\225\251\300\274\273\331\271\274{\235=\275J\242%<\324\331\351\274y\304\306\274\236\212q;\362\316m\274\2276\226\274\273#9=\023\262\312\2745=Q==\000\307<S\340\312\274\213\237o\272@\367/\275*\035\330\273]\017D=\276\"\025=s\343\317\274\222h\215\274\376\201;=\024i\230<\370\217#=d*\016\275\215\037\256<\341N\016=\004\351\251;\036`\025<\234\020\034=\004\300\026<\334\211\254;<\310\034\275\374\2016=\313\325@<~\262o;_\326\257;=o\235\273\000\372\"=\307G+\275\235\0145<A\275\233<\020\3753\275\232\t\337\2732\364\"\273\217\360\232<\340^\343\2741?\314\274\032\331\211<h\261J=\231\375\330\274U\3249\273A\031\001\275\2772\277<8\235K<a\215\272<\340\244\304;\263W\013\275\305\215\200\273\272KA=\204\370\014=]\203\313\274\210_I\275\275l\313\274\246\004.=\361\242*=\017\340j<AC\216\274\333\371\013\275\r\312\260;O\005\213<\025\331\347<\202,\302<\223\022\237\2746\0355\275L\203\370;\237\265\310<z\213G=6\365W=\007[\312\2747\374\260<\374 \026\2746I\t=t\003\323<\361\247\316\274\026\305\203<|\204h\273a\306\362\274\371\0146=D\037l\271E\320\316\274\330n\030;N\3435\275\356\026\343<\372.7=\001J\036\275?7\267;\3504\373<\212\301\030<\260\024*=@H\\:\250s\031=\356\261z;\246\007\271\274+\027\361\274\317\024-=\301\001N\275n\216\356\2740\327D=d8M:M\2478=\036\335\035=R\013\326\27428)\275k~J=\"\030\272\273\356\235#\274\326\2356\275W\322\035\2753\3713\275\207\363\325<\014y=\275\354Z\020=-\323\271<\202\224\002=Kb\026\274\320\2761<I\367\237<X\245\357\273\221 \237\274e\262#=^\264C\275\254\003\345\274\313\276\215\273E\350\214\273\347\377\013\274\213PL\275RDT\274`\265\032\274hAM<\376+*=?]\260<+\022T=\374\334g<M\256 \275\n\360 \273\266\237\275<`\376\252\274\007\245\217<@\262V=f\330\003\274i\022i\274\257\t\021\274p\220,\275\230!\247:c\335\022=\217D\305<i3\324\274\343rP=e\010\237<N/Q\274\234\363\302\2746\255B=\0132\2629\016\214\267<W\265\314<\002|\370<\010\225Z;\364Y8\275c&\244<\335\0223=\316\232\020\275\274\216\272\274\360y\016\275\337!;=\2779\007\275\r\241\234\274\034\2768=x\245\310\274\346\250\026=\013\352&\275u\025\367\274WQ\305\274\025\\D\274\375\235g<\331\337$\274\345=\016=\342\337\014\275\034\376\003\275b\375\004=\2751\002\274\330s\303<\2269M=\340\235N\274\223\341I\274\325\3112=\221\332\360\274\223\033\303\274\037\247\366\274\350\210\252<~\022\270\274\254o<\275V\314\312<a\323\266\274\334\235\"<\251\225\211<s\202\302\274?\242a<\373\312M=\241\000\013\275\316D\003\274v/\200\274\t\"(\275#\013\r\275\252\2668=\252\354\233<\257\303\026\275\271X\230\274$\301\033<\013KB=J\000V\275:h\026=Y:L\275\354\037T\274\225\024\032\275\233\027\263<H!\335<\2137\000=\325\0239\275C\321\303\274\"7\221\274\373\337p\274\247\244\007\274\303\312k\274\226\243R<u\n\t\275c\234\266\274t\0042\274\367{\346\274\221m\010\275,\313R=\022G%=9\035\373\274p\313/\275>\3155\275\311r\033=\325\032(=V~\023\274\010\357.=8\360G\275\324?\224\271\307\367\330<\034H\226\272v\334\272<\000\221\026=\232\336\325<\246\375\026=\302B\204<\270O\242\274\255\227\010=\305\210\342;\321\257\203<&k\247<rw>=\360(a\274\234\242%\275\226S(=\260\270\325\274Z\333\016=\317\216\262<\352\333\036=\010\020\023=\351\331K\2731\024\252\274\204M\222<\032j\035\275\2367!=f\272\351<\256\377\301<\211\206\026\275\'\203\r\275\255~\365\273\215}0\274\236x,\275\364\262F=\360IA=\356L\n\2758\367\023\275\324\2059\275T&;=\340\370R=\243}\230<j\3651<\217\032[<\351\325!=\324\241\375\274\013\243\035=\201\026\r\275\201\250;<\226$O\274\031/\316\274v\254\250\274\354<\020\2754\206\210<{\315\242\274\261s4\274\266vk<z\002\232\274\007\2172\275,\217\027=T\250\344\273\331\3720\275{2S<4\225(=\357\216\253;\366\340\271\273\332\2258=1\332\n=\243\037\347<\335\346\014\2755\n\345;?\274\262\274\225[\225\274\307\016\234\274\222\374\013\275\200\300\302<I\267\332\274z\277\226\274\001h(=,\026\303\274\245\001:<\214\013\'\275\270r\017;k\032(=\376G\366\274/2\221;L\020\203\273Au\372<\"\320\356\274PvA=\203V\275<t\217E\275\204\330\205\274\236\3147=\264\301c;\020\210)\274I\333\036=\345\371\004\274\252\014\215\274p\224\005=W\245p<\353\007\246\274\236\245B<\275\362\266:\223\017\002=8GT<\274\205\030=\003\367#\275=t\260\272i\256\370<}^\301;3\212\324\274\370\353\364\274\210\220S=0\206\244\274r\302A\274\252\227x\274\351%\r=\346\020\275\273\322xU\275\274\364Q\275\0361\260<E\264\023;pD\342<\321\032\265<r\260\007\275.\213\250<W|\231\274P\213]\274N\223\226<\235\006\210\274\013a\361\274\307\257\324<\242\373\021\275\013\0355\275\346/\210<\t\226-=ZI\310<\325\265\356\274|\306\035=\005\233\277;*d:<;\354\035\275\244*P=\367\234>=D\377\030<\332Q\013=\024\244+\275]\033\n\275\2677\223\273Yh\004\275\376\367\350;\3005#\274\306\361?=\302\337\035=NJ\027\275>\024=\273\246\023!\274]/%9n\340\243<\200N\344<)}\021\275;\365\031\274\245\357\030\275\013qG\275\034x#<\232\034!\2740m\353<\240t\333\274&\242\024=\356\331\033\275d\313O=2\025\210;\337cT<d\316\343<|\234\253:\265\215\327<\350\031\253\273Q\026 \273\035\210\212<6!\034=\t\3063<\240\001\260<\214\230%\275X\312!\274a\254\305\274\250a\222<L\027\346<\326\302\352\274\367%\326<O4\225\274\363D\310<\323\335\204<\002).=\230\016\257\274*\231\331\274\247\301@\274\032\375\330\274\222\t!\275hx\275\274\032FK=\342\312:\275\232\314\354\274UHL=\353\242\201;$ts\274?\246\317\274\352\007\007\274:\026o\274\322A\207\274\352TQ\274r\246\035<\233\177t\274\231\201?=YI\001\275\034C\001\275\375Q\327;OEX=\361\367g\273\221h\005<U\n\227<$\360T=\261m$\275\213\030\240\2747t\265\274\242P\004\275,\374\371<S\013\023=k\3529\275UX\006=\271i\'=7\365\"=\002\024:\275\020]n\2738<\020\275\037b\031\275kDJ\275\306\307v<\037n6\275r\342{\273\264\214\013\275v\357}\274w+\225<\300S\033=u\377\352;h\222\023\275\223\355\n\2752\372\204\274d\377\204\274\312f\223\274\371\337\377;\310\357!\275pE\307\274}\337\256\274\361\373\202\273\033\356F\275\3341\322<~\200\r<\\\036\016\275\374Z\330\274(\324O\275\252\010\027\275\230\252\275\273\032\245#\275\001\000\021=\033!\014=\000\267\220<<\217\001\275]u7\275\263\004\370::\\,<\t\277\304;/-X=\221J.=\301\234G=\331u5=\306\315S\275\241\224\007\275\211\340\361\274_\005s\274<\340 <\345:\203\274k\2570=\026\221\302<\024X\366\274\202`\237<=\317v<*)\014=\232L\371\274\362=\254<R\373P\275\211\205\242<\315\264\036<\340\332\022\275\236w\023\2759q\027<\007\230D\275\3402\033\275s\323\022=\306\213\253<\230\275\206\274}\346\312<\235\236\262\274L\206\033<\002\033:\274!\330\237<\213\226\177\274\340\267\311;\335,\321<]\376 \274]\r\242\274\220\004e;h\254\341\273\253`\375<\356\021?=\314\t\021=W\376I\275\367\246\216<\224\023\254\274 |k\273\334\235\207<\001\200\313\274e]\215<\333\214s\274\342I\324<\334J\315<#\214\321:M\t\367\274\034\242\004=\364\224$\275\000\023@\275V\032\037\273dn\031\275\020Z\245\274G\205:\274\207\307@<\020\205\017<\020q\240<\300G\035=\256l\302\274=\210\226\274\243\231,<\035\367\204<\3705\000\275\035\317H\275\373\021\362\274\240~%=s`\274\274\002\013D\274\\\261\275<\303W\"\2714\271\027\275%\r=\275\202\375==\266\342\n\275\010\013=\275\226\002J\275\021u\022\275\332{=<\030\2464\275\252\355\213<\311\364\t\275G\267\223\274\033\277\244\273\035\333\025=\343\211\250<\222\305\307\274\034\327A\275]\235\033\274kFJ<#\226M\275\332tV\274\260Z\n\275\367\361\221<\'\366\362<\3512\033\2755\3347={\353|<\277\211E\275(\0034\275\231%-=\260p\244<\002\"\264\274\222\305\201\274\017\3335\275\334d\265<p[g<;l\225\274\t/\354;<\241\035=*\026\021\2753 \333<\253\2311\275\316\222\210<Ik,=K\267\325\274\220x\032\275\002q\225<\370\343\230<\377\017a\274?\235\240\274\202\320\200\274\246\017\313\274\365n\275\274\323\341\276<[E\315;\365\000.<\334\213F=T\254\264\274\365\263\241\274\250\007Y\272\312\241%=\201bs\274\332\010\305<\254\336\274\273\226O\020=\260\204\013\275\221\342!=\204f\026\275\2169b\274\265\241\372;)\025N\275\243$\001=\242\374\304<\230~2=\216/\304\274\305z+=6\231!\275\004\327\320<\027\217?\273\230@\303\271\026]5\275\361\267>\2722t\337\273\265\317\230:o\020\"\274\267\212\n\275X\227j<\264\235\333<\306\022\211<l\247X=\374\332\273<1\325&=\225\'F=\004\000\030\275L\225\207;3\344G\274\353\"\271<\314\305\216<\2404B<\255r\021=\370\030\003\275\354\004\357\2746\353\357<\207\202\371<\247\224\343\273N\007\024\274F\'0\273p\177b<\211\2470=(\035F\275\0340.=\t\000\207\272KY\022=\360gB\275\203i\213\273\231{\370\274\222b\002\275=\334\233\274b\245\006=O\0360={=K\2750;\353<\221\364\024=\355\263,=\270\320\232\274Vd4\275\222\335H<\336\226\302\273\302c \275\247\301\326\274\025\367\347<V\236\020\275\227\035H=\216\302\223\270\261\035\214\274\350\225)<\3509;=\266\223Q=\207\016\036\275\375\212\220\274M\232\361;M\235G\275\344\305;=\215\235B=\\Nh\273*\024\033=f\0305\275\332\252A=J|1\275yW\267<)\252*\275\217E\373<\23561=\021\004\030=G\311\004=a\033\032\275\t)\013=\320`\201\274j\2661;/\2556=\362\2428=\377q\313\274\361\262\007\274\233\207A\275\271\214\334\274#\257\236\274\267\205.=6\2637=A\177R\275H\304\265\274pQ\357\273\243\300\031\275D\326\322<\001%\264\274\272\374\347<\321FN\275E\035\006\275\240\177\372:\232\232\223;\025\224I\275\224\262{\273\266\233\013\275\360\313?=\271(z<\247pT\275O}+\275\033\364G\275\\\225\322;\374C\270\272\036\360<=\254z?8\023/\222\274\300T=\275\357\212\'\274\272\036\024\275\255\2269=\347,!\275\254\004\320:\220\254\"\274\255\002#\275\031Tf\274\376;Z<\365\035\026\275\340M3=3\227\360\274\0144K;\200\354\335<\014=.=\226\347#\275\224\265\007\275\037\327M\275>\034\266\273\343\005\372\274\366@\n=m\333t\274pM)\275\220\022\201<\005\253W\275\222\363\022<\361\017\260\274Ef\365\274\335\257\037=FeW=\004d\037<\333<&=\336@\207<\343\214 <\247\037J\275\273U\356\271h\224\006\275\306=T=\225\330:\273e\233\031=\357\n\251\274q<\032=\346\022r<\321\2040\275g\361\030\275\255\300\006=\274\201\003=\346\347T\275\004\357\212<\0363\017\275q1P\275\225>C\275\307!L\274\004!.=>\327Q\275\347\205s\274,Kb\274\327Y\207;\304\262b<\352\240\024\275\177\377_\274gx\250\274\241\002\324<\346\376\"=\004\232\026\275\307\305\004\274\230\374\215\2731\020<=\233\214\210\274\203\007~\273\017~Q\272\36520\275\243i\t=\327V0\275\343\344\262<l\2221\274\371\262\\\274\270iH=\006\361O\2755\310*=l\225\243\274~8\022=\t\342\022\273\021^\225<\206q\005\274p\2062<6\235\225\274+\003\020\275\366-\313<W\013><\232\341J=U,\2348\353\247z<\216I\331<FT.\275\031i\214\274\340Y\372<\230\020\027\275\374\376L\275Y\255\341<\366:\217<\210\2439=\010\342\352<r9C\275\320P\222\272\255TM=K\363U=~\027\031\275\313\0341=H\";={\340f\274\276JF=d\337\352<U\360\265\274ot\\<\240\213\211<\365\344*\275n/\271\274\371,\221<\224\245\270\274g\215\375<\003\\N\275Jl\020<= ==\262f\261<\026\373F=\277\207X\2752\226\300<\020\332\323\274\225\266\332<\001\365T\274s\355\266<\316FA\275\267\343\352<L\240\264<O\201\022=\375\334\317\272\367g\305:\nI\255<\307\234*=P\277\021\274ZXE\275\006\356*\275NLI\2748_\377\273\304\034\241\274\322\341\r\275\371\341\273\274\241gR\273X\312-\274\253\300\033=ufJ=S{\236\274\032\243\241\274\266\005A=B\275u<\212\376\207<~\233\034\275.o\'\275\254\261\000\275]\226\007\275$\365V=9r$<g\236&=4\317\310;\355\254*\275\260\300\352<@\325K\275\302v\005\275\035\242\327\274K\312C\275\325R\241<\216\213P\273/|\216\274\361)W\275|*\031\275\301\215\352\274\2153\321\2744\306\241\273\2746\202<\204\235\031\275\357(\260<`\243\320<\277\300$\274\235N\"=\314\'\000=\351O\352<\245\201W\274\275\355J=1\0276<A\272A\275\334\223\376;\006\350\265<\021\"\215\274\rVM\275\301\002\361\273\243\'W\275\213\242\036<\301M9\274\346\310\217\273>P?=b&\210;\224\2461\274\370\276\367\274\363\023\356\273E\247\242\273\032v_\273\3234\202\274\204\254)=\033\313\033;\321\340W=5\254<\275\203[g<\210\315\223<\230\017\005\274@\340\032\275\261OU\275VY\350\273\233c\345<\037\205?\275\256\3229;\\L\022\275\364u\230<\211h(\275`\357\022\2745\276q;\351q\007\275%G\253<\336z\307\273\321\251\267\272\321\231\014\275\343:\312<\250\277<\275\t\221T\275$\321/\275\206WL=\276\233\236\274d\2473=o\244\023=9t\342<\326\324$\275\373\364\301<\0265\336\273\236)\023=\216$\270:\222\027t;\2472\001=\177\310+=@$%\275\375\265x<\307q\007\275\373\347S=5\036\306\274c&\331;\301r7=>\240%;\244c)\275\tY\r\275\210\013I\274L\213\007=\0205\372\274\234O\364\274\242\264\025=\255T\001\275\372\351\262<\322\210X=\276b\004<\215\332\010\274\366\211(<I\333\024\274\323\352\360\274#\236\202\274s<Y\273\200\205Q\2758\034\305\274\337z\355\274}2\032=G\n\203\274\273\247\014=\343u\211<yTF\273\304@\035=V;\277\273\362\307\022\274h\026\023\275\'\333\006=\005\327,\275\'o==\311\324\021\275\031\213+=\370\236\035=<MB\275\265\304\200<\301\361\346<\252\3406\275\320\312!=\376d\031=0\r\220<FfX<\351dS\275\372\034\223<y\'z\274v\177\260<\215aj<:\007\334\273\304>\236\2740\350\213\274\361\311\311;\031\264\370<\022\253\023\275h\t\200\274,\235>=\235\244\227\274C\371\036\275C\252\262\274!\216\n=<\345\"=\021\200\026=\355\232\013<\205\253\214\27459T\275C\274\312;\350\'\273\274\215.\031=\374Ue\274\326 \010\274\021\363#\272R\030\370\2740\254\017<\030\307\035\274\022/#=\355\325\"\274\037\324\022=\203\346\005<\025\204\272<\004\253\033=]\'\013=5\322.\2757x\320<\250l\013=\353\r\216;\260\273\243<\0201\261<\356\"5=\341I\351\273\366\016z;\370\227\303<\243\027\375<<\276\211< \371\353\274n\231\337;\2245O\275oR\035\274\364<\325;zC\021=>\022P<\263\232;= \342\000\275\355\267Q\274\236\272;<\223\035\360\272\361\252\r<0\2254=\321\262\200<\3165\017\275\003S\001=\225\033m<\302\354p<5\211\201<z\300\377\274DeF=\r[\360\274+\357\t=!Sx<Y\237\023\275\301\353\223\274Cp\267\274\251:\022<\377q\350<\243|\217\2740\010P=b8\305\271\352\0169\275&\327\022<\357\363\231;\"l\005\275\221DG\275&Q =x\371\033=\364\3356\2751\337\316<\003:\002=J\202\\<C\361)\274\237E\302\274Z\216\017\275#\023l<FR\343<,\336>\275\177\353\320\274\205R\\\274\234;\364<\206\240\027=n\313\263;\203~\251\274\300\212\342<\0272.\275\325\264`\274\336-\337\274E\373\025=\210\224\013=3>\260<\021\341\232<ux+\275\201\nX\275\210\031\210\2744\374\026\275\010\322\274\272\321h\200<\353\234K\275\220R\004\275\311\356:<YC\375<\245\001M=\031\214\346\274\025\376\354\273=\266\001\275\225\256\355</\353\274<\312\330\220<\211f=<\237\374H\274\220\345;\274qK8=\264\336\317<\265\341\222\274\212*\214<\354\234\017\275\265\001V\273!\\A=\257\277C=\252s\316\274\266p9\275u&\006\273\375\274\000\275\315\375\341\273\257\' \275\347/@\275\370\376\322;C\361!=\034m\365<\t\347\243;\250\3649=\370Z\324\274\247M\366<\337\003R=\267\006*\275q\276\264\274\224\031\310\274\227i\022=\262\214\304\274\362\024W=\256Z\365\274\020\276\212\272x\356\303\274\250\253\033\275G\026\374\274\032\352\266;\017\206\373\273\001\350\206<\324P\023=\306c&=T?/=-1u<\232H\214<O\211\327<\003oT=f\367L<&\243W\275_)\321\274\322:\000=U\277%=\034C\343<\261\332\333<3\2402=*\304\214<\237\376\025=C\t\036\274\023}=\275\240\277\240\274\313_\242\274x\377\243\274\270J\371\273\301V\037=\271\260\026=\026\261\027=P{\252<\316p,;@\345\200\274\240oK=8\204x;\351\226\002\274\263!N\275_\311m\274\307L\342<!\3314=\245S#=\014\372\263\274\006!2=Y\325J\275?\223Y\274\250\002\262<^f\374;\215F\355\274\024\'(\274\363\022!\275*y\013=zCR\275w\"\340\2749f;\274\272\\%\272^t\026:?\277\001=\201]-\272.\325K=\354B\332<\220\375\r\275a\376>\275\2508\010=&\323\310;\227+P=9\3758<\007+6\275\337\311\217<}\317j<\230K4\275s\300\243\272Z\330M=\221lB\274\357iN\275\270\245\301\274\227_\006<\254\334S=\257SE\275\224o\217\273\324>\';\005\275\034\275g\316\001\274\342\250\327<\272y@=\275\345\021\275iE0\275\022uW;\034\333\252<C\334\247\272,\204\272<\364d\313\274_\'N\275C\276\025\275\1775\031\275\347\303?=\202\212l;F\346)=\351\264\327<\327[\003=\226Q\013\275\262*\004=\320\202\177\274\2448z;\343\265g\274f\\\036=\374\327\351\274\213\267\024<\343\244\224\273A\332\356<\347U.\275P\303\302<.\336=\274\204\226\203\274\013\221T=8\037)\275\365\226\242\274\237\376\224\274Z>\304\271\375\316\216\274\313f\2609m#V=y\020\251<\204\3039=\211\316W\275l{x<J\263\202<\236\264%\275\364V\303\274\352\260\354<\326nX=\363\272V\274\004D\247;?Q\270\274,\234}<4\306\'=8b\324\274\266\021\301\274\350\215\233\274\341\353\370\274\271&S=\273\023\010=\344=Q;f\304\214<&\332\365\274P\350.\275\026t\177\274\300|\335\273\214Z\214<\"\026R;5L!=O\256\356\274\310\325\243\2749\357\206;I\311\367\2735\256;\275V\244\276<\244\233\332;>\256A=\2432E\275\312qY\274S\277\312\274\026\353\027\274\345\367 =m\023\227<\027\331\220\274\245Z\334:\355\004,=\235L\320<\216^;\274#\367R\275\010\\\264\274\013\212b\273\177\377\332<\360\tC=\217\361T<J=\353:J\022\315;\363\226\016<\212\324?=\001\270\214<=hA=>O;\275\221lM=\300\225\335<\300I \275\037\213\372<^\257B\275\257[\333<\362\367\323\274\332\031G\275ID\274\274)\354>=%\301\370<\247\200\373< \347\t\274\376\014U<*\026D\275~t!\275,\2223\274\214\252\014\271\266JM=\237\374\356<KS\302\273\371\252K\275\240\021\234\273%9\374<\253I\370;-\225\201<%\301J=I\342\344<R\217\250<\320\217,\275gh\204\270\211x\345<\315\346\320\274b\310\271<G\024\033=\026\3543=\376uW<\244\030;=\204R\205\274:q\004=\306\006@=p\222\275<\274\336T\2735b)=\021\031\372\273E\304\263<\317\022\312\274\021\251\000\275\322\017\332\273\003\271\032\275\354\213\376<\2055#\275`;\304\274+\021\004=T\025\367\274\023^7=\362!\351<\031D\033\275\034v\232<\271\241w\274\374\237\032\275>\303\242<f\017\r=\320\220\256\274\376\\\272<\027\230J\274=IX=:\242\t\275\343\247\226<\2576N=\243\245\017\275O\251/\275Cd\003\274\177 Q<[\t+9L(\004=\361\213K=x\210b<&\032\365<\004`[\274\246)\373<B\271\373<N\2257\275\302\311.<\210\240<=\035z\207<\254\024\262\274\006;\251;r\365\277\273kCM\275S\201\017=:G\347\274\354\221\224\274\247\365\030\274\334d\022\275\312\343\326\274\223H2<}\2408\274jj\n\275bh\355\274\177\346\363\274\331\264\243<\2606E<xFG=\202\0047\274H\216\207\274\221\346\001=\212 ,<\327R\013\275\362\325\030=\253g\003=~\207\177\274qo1<\t\367|\272\305\214\014=1eF\274;0~\274\246 \260<.\257\277\274\001\241\232<\263\355@=\336\342\030\275\200ZK<\365\251\305\274\302\217\016\275\301\230\243;j0\353<\302\367#<t\260\301;^t6\2752\220\030<\375\0201\275\224\033\020=\334\343\362\274\230\004D\275\350\2371=\367\3554:\367\033\007\275P\371\326\273V\343>\27478\233\274\346h1\275\203^X=\241\223\373<\007\020\016\275\246\346)\274\tG4\2752\235S;p\336O\275\354e\277<<j\321;\227\354V\274\005[f\274Q\221]<p\262\357<\027\314H\273\351\337/=\307\026\250<\326\220\240\274\310\261\324<\242*\253<p\347F\275\252ZH=>\3521\275\246\341\255\274\202\310\200\272+*\252;\320\023%\274\333$\364;\n!\021\275\257U\317<\007\000\t=\001\357\006\275\362r\230<@\241\023=\354K\236\274\246\301\244<\"l\035=\367!:\275j#\250\274\243\261\213\274\264>\004=nt\224\274\324\245\260<\343\271\030\275E\240\007\275N\340\333<\240\375k<\324\206\177\274\034\234\031=H5\034\273\014\220\202<\236\037\271;\362\025c</P\374\274\352\273A\275\307\344G=\204(;\275\265d\207;\212\200\262<\302\014\262\274\316\236S<5\357@=\303\237D\2739$I;js\243<\314\345\265<\366\363\300<-H\023= \'\001\275\326wB\275w9%=\365h\360<\035S\335<\350\010\000<m\304\240;\351\215\247\274\327N#=\355\222\007=\007\231\344<\372\3101\275L\261\250\274;\233\220\273\360\211I\274\261\261.=\303\342\200<\242\220\025\275\250\002 ;\n\224\251\273\325p&;9m\312<\302\314\014={a\253\273;Q\\\273\022\3135\275D\267I\275\221\370\336\274\224\2448\275\223\321\365\274\251\332\033=\262FW=-\000W=\005!\352\274\2302@\274%\334H=\016,D\274~v\2369`\236\361<G\313\305\274\374-\016\275\214!Q=\250\007\257\274\204i\t=\006k\234<\242\014\'\275HO\347\273FT\274\274\251\325\322\274\007\003\010\275V\337\017=\202o9=\030x\030=\215&\344\274\263\272U=<|F\275\2467\322<DH\346\274\202\221\240\274\264A\241\273\255\212\235\274\327\362c<f\261S<\036\373\300<\354\274\332\274\270\200\311\274\256\305$\274($\023<\270S2\275p\022\377;.E\266<\341\335\346<\343`T=\333\206\023\275\272\2130=M\260\256\274;\313\300\274F\nN\275@^\314\274[\253<\275\2145\254<\277\325A=\263\377\306\2740i\250\273\025m_\274\266\025\372<\344B8\275\306\364,\275\273\235T<t>>=o\207\216\274\017\026*<\227\337\341\274##\200\274\316\370\263\274v\344\227<q\200M<\245\256\234\274\335V#\275\341v\005=x&$\275B\001\205\273\347\006O=\253oO\275\241\354\353\2749\232P\275\307\334\302\274\257\211\003<\371\346\361<\276\251\017\275W\026A\275\001h6\275\260\221)=\001\001\367<\225\2503=C\221\024=\242\276\257\273\203\215\021\275\232}8=\200\036\304\274o\207\347<\214Xt<$\311\206;\226\242/\275\327\001<\275\360\331\250<\232\330\030<\317E\r\275\357\304\337<P0}\274\217\025`<R\024\260\273\005V\371\274f-\025=\357S~;\234\250\003\275o\307\027\275\314\0205=N/A=\275\221\373<d\331.\274\306\024\235<z>\006=\246\272\006\275!\024j\2744`\246<&\221\024\275\315;\037=\353\325\361\274\310\345\334;\ti\246\27473\325\274\224\374 \275_<,\274\234\221%\275\223\":=\013f\364<\210\372S=\033!\203\273\014\232*=:t\350\274`#\323:/t\023\275|\t\231\274\034\355\205\274Aa;\274\001\232\001=\315\217s\274\324\233\321;y\035(\275\233\037\t\275>\362\001=\277\257\340\271\263\315\025\275\037\320\034\275\272\224.=\234\346\003\275\254n<\275F\262\275\274rm\006\275R\203\341\274\246\024\033\2752f\000:yX\207<\216+4=)\003Y;\2142_<D\255T=\236\325\016=\341\325\231\274\010\3577\275\207\323\222<\333x\007;\205\325\004<YX\363\27330R\274(8/\275\363[,\275\021\311o\274sh\366;\302l!<%\272\030\274\026P\277\274\324a\'=\031\264\325<\225\250u\274A\334x\274\023b6\271\215\251\037\275\337\336\022=GC\301<\233\374\256\273\033\225\r\275\235q:\275\247st\2740\326/=\260\371I\274\243\2240=\274\306Q<\"\313R=\223E3=\023A\022<\221\016V\275\214\315\004\275T\036$\275\277\330\364\272\025JN\275\036a\300\274=\214\327<\270I\312\274\242K)=q\306\026\275.\324\216<\365\311\275:\251W\t\275,\301\353\274\021\205\021=AE\274<b\224\003\275e\250\304\274\214\372)\274\365\037\216\274\210n*\275i\237%\275\311\271Y\2744Mb\271\230\277\024=\363\300@\275\234e\265;\216s\251<\330\230L;1m3<\002n =\n\354\331<fOU\275\354\017\005<\233\220\026=\033\375\021<\325\336\201\2735\202&\275\213t\303<\245\220\232\274\227\n\223<\033I\033\275!v\010\275\177g\032=:\037Y\274h%m\274U\306\377<_QT\275\347\266r;5\3276\275\377v\366\274\212U\036=#l\373<\213|\203\274\211\306\265\274V\217\t=~\3004\275\006\007G\275\304{\235<\332&S=\332\215\233<\001\215\256\274q\237\037\274s|\245\272\312\301\351\274\375\264\353<\240F\223\274/\002\316\274\201<u<\206\311\350;\010\243*=\261\014\361;\302A\262\273\343%2=\340\010\004=V{\t;:\346\020=I\354\277<\003y\035=~@_<\375\346Y\274\347\216H\275{\005\376<>\357x\274\017`\371;f\200\230<\311\231#<\324\335+<\265\351\300<\"}\236<\215h\030=f\236~<r\361\t\275\027\377\215<S$\356<\316\364\220\274p=\352\274\233r\001=1\317\021\275\323\322\023\274V\037 =\216\373\333:\037\3535\275 s\350:\272k\325<\350\373\227\274\021\262\353<\236\314j<\026\231H\275 \306\001\275H6\362\274\035\205.=\326\220O\275\344\315w<\250:\300<nv\373\274\375\360\001=\017\t\260<\337;l<\350\210(\273J\233\244<%g*<-\304O<Hl\241\274@ah<\322a\032\275f\331B\274R\034\227;\t\"\277\2741<\370:(\376\357<`D\036=\025\302\303<bf\371\274\035\302-\274-\235\322\274\251\"\344\273\234\310\307<\367\373\234\272\000\246H=\032J\034\275T\224\001\275\2307\n\275&e\343;\202\370\245<jI\030\275\232F\273\274- \001\275\"\370\324<\205n\'\275\224\306\222<l\210S=\275\375b\273\361\352\037\274\350\2718\275\310\317\232<\002\330\030\275\227\341\265<\246\365\346\274\024H\033=\"\250\321\274\036\250\343<\316\272\215<\201o_;\014\024\261;N\357\247\274\252\247H=\304\3404\2753\255$\275\244\270I\275l\336,=\3601\250<n\302\266\274L\367\362;~}\211\274\235)\302<G\376D<1\353\"\274\277W@\275\222\371T\275{\2517=\325\330\312;\324\333B=\256\331\033\275\301\214\234;\300\232,\275\234\364/\274\016\351\205<e\322G=s\207\037\275\247!S\275\231\204\327\2741\253\r<\024\256\016\275\304U\247\274\317\262)=\343\372O\275\365\370k6\001\177\r\275\264\224\027=?\036\230<\244+\372<X\2763<\220k<\274\301\230};`q\344<ru\326<5j\367<\316\376.=_\226U=\273\2023=m\372:<\334\353P=\204Z\242\274\014=M<\026\241\242\274\345\214.=C\270<;\375\207\010\275}\007\002<q\272\2148nE\376<\206\2517\274\322\303\346\274\345\375\3048\240\313\344\273\360\307\264\272\363\234O\275\356\240\322:\305\371\307<\362\243\302<,\024\006\275|\227\013\274\372\302\203<\246\337\357\274\376\336\240\274\313\006\260<\331\267\014\275\347?y<H\3462=d\264\371\274\361\335\n\275\372y!=\310\261H\275\310\005i\273z\302\r\274\206\304A=\346\276\363<\320\026D=;\312K=\177\342\026=h\261\024\275\220\303\274<\3449U=\355\274\233<`t\231\2740\"\242\274\324\023\274<h\303\343\274\364\371E\274\260\\\377\274\022~!\275\214\r\206\274\n\275\306\2740J\013\275\244YJ=p\n\007=\310\234x\273i\353\307<\371\202==0-\014\275d>\262\273z\375\000\275\242z\270<Sd<=\301=D\275\265\365W\2757\'\252\274M\234D<rp\225<\273\270\322<3\021\362\274\235\212z<9\014\227<:E\363<\222z};\263\277\242<\032\300\020=\2575\320\274\014\244\016\273\373x\354\274\207\337B<wL\225<0*\224\274-\220S=\\\275\346<\315\221==\233=\033\275\026\221[;&a\277\274\215QU\275w\021\001=\341\255-\275z!\311<\347y\234\273\217\234\035=;\303\036\275Mo\270\274/4B=\361[T=\342\211O=\313\027#=\335\034\362<D\244/=\354n\223\274\315\310\232\274\205\334\214<\020\335\366<\226DC\2757|\014\275y\025N\275\310A\036<[\010\363<\3667\334\274\357\362\034;\201/K\274!/(=3\0072\275\214\333==Cd\277\274X\274\023\274\001[\302\273\213\324\265;<*\217\274\274\"X=\036,\275<\365\302u<\245Y%\274:\"H=\357\031\023\275\351\231\326\272)\306\034=l\006\224\273bF\020<\357\363\035=\224p\020=\2016S\275o\237P\275};E=a\352B=\244\374\333;\005\235\240<\002\013\251\272C\373\215<YN>\274\323\362#;\254\237+\273F\300\022=)0\315<\017\326\023\274b\306\347\2745\322\224\274U\026e\274\241\236\022\275\331\274\020\275\211\350\203\274\2442T\275)\242d;(\244\001=F\277!\274\004\314\t\275\000\016\374\272v\304C\275V\017\344\274\306\211A=A@\031<\010\013H\274\005\326V\275\311.\021\275\203V\275;\'\371}\2737\031\367\274y\2747=.\236\036\275\r\316\002\2746\027h<{\201\035\275x\003\022\274\214\250\357\274(q\342\274\313\177\210\273[\273\004=\212\320G\274U\233\302\271\346\036\016\275\256\266\004\275\207S]\274HY.<?\351G\275\310\001!\275\343\322K=\220 \n\275\026\310\353<9Q\337\274\236\322\250\274\277\213\004\275\234\327\265\274\305\306\224<\031\230\364<\345t\016\275G\335\310<\010u-=X1\030\275Oog\274\320\014\201\274\010\260\026\275\274-\013=qe\317\274\311/\322<\346\256L\274\3165S=\317P\346:^S\365\274\307\235\243\273`\3301\2742\343\302\274\341@\274\272\276\356\031=\036\265\304<\226S#=\"\2414\274\025\032y<\302k\'\274\323\0030\275\210\027\315\273\250\037#\274\373\3103\275\236\300\037=;\034\342<\317^\315\273l+L=\211`&\274\177(\022\275\245\350\336\274:\326\030\275\374\275\005=\024\375<=\324d\320<\344=;\275mp\254<S\207g\274\260\271\223\273+\255\023\275\024\2024\275T\254\337\273\362\314V\275\252D9\275\320\253n<\340]\033<\252\315\231<\300\3229\275Q\007%=\315n\332<\256\305\037=\276hm;*\315\364<\225,\016\275\254\n?\274\227+\305<*\336\325\274\320$W=\351W4\275x{A=\177\316Q=hlC\274\244$#\274\257\240\264<\322\010\000\275\374F\000=m\361\202<\316f\326<n\026\346\272\231\277\r\275\0265E\275FD=\275\2054\315<n\225\253\274\205\334\210\274\374\023\254\274|\014\346\274\336\307\326:Ry\340<\230\270\017=\322\236\027=V1^<7\206\205<\306\211\027\275]f.\275\263CL\275\321\322\205<\222\010-\274o\221\212\274<\260#\2758\370\330\274\263\336\372\274\214\253M=Y\353\376\274\375\324\236\273\200=\306<\336\010(=l\000\225<\034\215\314\2740\034H\273\334\034C\275>K\232\274pE\035\275\000I\240<+A\033\275\371i+\275\262\0367=\203\2379\274\374,l\274CL;\275\216\255\324<\2453\000\275\372F\262\274aGB\273\016\374\354<\332\3363\275\375\2459\275\331\337\301\274\221\202\231;aMM\275\022W\361\274\352z\216\273\222\201\375\2738IC=e\373\035\274\223e\244\274\304q\005<\326#n\274\257 \217\273\220D\r\273h\014\237\274V\201>\275E\245\323;\010\344\032\275;\036\242\272^\324\352\274\220\217\335<,\370\365\273\327T\373\273r\263 =3=;=\254\3471\275\332\364)=\276\240\024\275\3679\025=\204\357\247\273\024\367\315<~H\307\274I5\345;\324Q\326<\254F)\275\205\033\021=\315\334\t=\367NG=\355\377\002\274\375\000\333:_\207\356\274\313\346\017\275>\314n<\311!\004=\026\353\037=\350\033\264<\232X\332\2741\327)\275k!\254:U\201%\275\307\245\024\274\307WT<vS\360\274\245\223\037=\333D\014=\366 \022\273\200)\365\274\241v\351\274\351\034\211\273m#L<\346J\337\273\314\262&=\323}\016\274\207\211\034\275\230\202\305<jn\005=x\035M=\020F\261\274\220\203?\275\305\212\323;2_\004\275\273\211/=\253\024\375<\024\220\333\274\347\241 <\353\264\314\274\370\017\244<\367y\352\274N\330\233\273I\214@=\352[\326<&\313F\275\000\314\257\274V\014\t=[\300C=\361\227\272\274\n\032\014\275]\\*\274\256\225K\275W\2420<r\303\n\275\245s\026\275n\r\326<\177ju<\\\021\010=\375\260\024\273J<\350\274*\217\274\274\366W\033\275\2349\006=rx\032\273u\231\234<\202\224A\274wr\372<\360\3417=h S=\370*J;\n\317\023=*44;\231\010\335\274\326!)\275\211\325\364<\337\"\323;@\301U=.\306+=\270&\365<\020\364\\\274\306k3\273\037\033D\275v\321\025\274\243W\030=\254\216\317\274T\315>\275\346\345(=\310\300\352<x\214\365\274.\345\315\273+.\254<\372\t\004</\367\332\273\334\214\335\273\363\226\203<\343\240V\274\367o|<I\343?\275\254\013\007<XMQ<\320D\213<c\354\350<\363\004\305<*\230\275\274\001\374#=\371\326\025\275\242\276\310<\211\310\231\273\330 !=g\0139\274X\020\032<\266b\252\274\206\033\317\272\226\030\257\273xu\255;\253\235V\275\000|\022\273o\247\037=\004\211\365<\245\377\n<(KV;Lj\'<pw\035=\322L,\275\234\346z\273\261\017\243<\330b\005\275W\211\331\274D)\213\274\214\342w< \305b;[8N=\311V\255\274\327rU\275\374\\\001=&@\230\274\346\017w\2740\030\307\274\202\216H=^x\200<\302\305\261\274\260\016\263<\177\021R=Ms\025\275\005\213U=K\343\274\274\\\222/=\025\371%\275\216\036\035\275\240\017Q\274\215\344\013<\376\373\221\272:`L=\234?\003\275\362\311\313\274(V\254\274\244\226G\275\000x\267<\362>\n\275\0101d\273\0207H\275\01734\275~\253)=\305\344\003=j\263,=\360\323\003=\030\377M<\270\207\315\272\320\005V\275\237\230F\275\014~.\275\324\336\'=\200\006N\275\315b\376\273\\\341\035\275\277\267\t<\257j\346<\345\365\235<\245\316Q\275\263\320\327<\204\211\233:^\270\014\275\313\002\371<%Zx<\025n\256\274\354\020\230\273\253\350:\273\331\254.\275\364\216\341\274`\234.=\262\303\254<a!O=\236\304\375<\322\3545\275jm\301<\200<8=>\3005<\23548\275\235HU\275\373z\373<[\346\330\274s\234\345<\335\010G\274\017\373\375\2742\014\265\274\n7\207<\352\033\227;:\264\253<,\247\244<QL\025\275\304\312\327\274~\3127=*\003\014=\027\2555=C\2552=3\333<\273 \3230<e\210\226\274X\231r<\364\370\221\274\321\272\037=w\326H=\363<\341\274\205QV=\006\206\215<\007\354&=\266\342&=\002\260\n\275\303F\347\274\365\025z<\2517?\275\322\316^\274i\227\370\2742f\001<S\r\252<\030\224\313<\3405\276<e\213 \2759\n\300<r\230\372<z\251<\275*\020\013\274\3018(\273\322\231J=(gI\274\200\030\035=\340\2441=h\351Q=\235\020\025</6\372\274B\017\350\273\350;\202<\353\222\203\274\356\314\177<$\025/=4\311R\275\370\237\211\274$\243\376\274^t5=kL?\275&\301=\275\347CG\275\220\341\270\274\362\222@\275\366\213\311\274\000\246\t\274\324\024\216\274\346:\023\274\333w\024\275\010\274\311<\363\356\236<]\237\267\272\t\246\366\274g\346\200\272u\262\356\274\177.\212\274\262\320J=\355\"d<\342\206\r\275\02649;\337zf<\321\204\000\275JD\224\274\355.\231<\004\277\215\274\302\216\004\275\255A$\275C;i\272\026\035\006=e2g<ed\300\274\232\025\014\275k\340&;.`\253<\243\323\037=I\255\232<\214\347\224\274\371`\345<\254\000\'\274\271\341\001\275\320\354\037\275u\2016=6\371\304<}\237\026=\302f\342\274\177W3<^\\\"=\307\264C\275\235\360\332\274Db_<\023\372(\275\032\001\036=\275\'6<?\275C=\234\312O\275W\206E\275\302\230\272\273U)\325<#\351\010\275}A.<<C\234<W\2020\273u,S\274\333\273(=\331\304j\272\342\2715=_br\274$2;=i\001\272<\372\001\301;\210\225F={W-\275o\2208\275H\312\013\275%\225\263\274<\214\321<d\250\340\274\327OZ<GmZ<\334\233\336\270 \010\0069\346b>\275\301\021\311\274n\305f<\010\2707=3\233V\275\342,5\273\215\203\004=\270\301\372<\253-\333;\274\271U<B\216\242<\255\246\350:\"0L\275\227\005V=C\336\341;\211M\237<#k\302\273\304\262U=\020\037!\272\353W4\275\264\250\200\2748f\367<&;\354\274;\3550=r\322L\274\307\274\023\275\273i\204\274\317\244\311<\025\202\237<Y\307\316<\007\251%;\0245$\2755LB\275\321\304\353\274\235pD\275\267\302\263<9\311P=\031L\335\274\240\300\031=\330\316\003\275\377\005\264<T\232\345\2748\333\036<\233\030X=\3516M\274,\014\020:o$\234\273\215\244\300<\222\033\326\273\370\335\003=\355.\033=\003\254\017=\003 \013\275\301\2265=P\230\266\274\021c3\274U\351\030=\351\262H\275\016b\325\274\240\351\005<\331\302\236\274\371\013.=\211\303J\274\367w\023\275\303\267*\275\273\215U=\222$Q\275\010L!=\233K2<\340F7\275\335\262\023\275\202\037\017=\315\257L=\201\236\026\275 ;\031;tV\036=\305\032\373\274\362\206\033=\221\354S\275Z\n\254\274\302\274\031\275\247\223W=\333\244\227;\351D\033\275\350\240$\274\033\235\240;\360T\257\274\221b\007\275\017\213\000;\016\226G\275\325\2644=\247\305\377<v\213H;$~\235\2749\307/\275c>\036\275S-z\274\207\250\013\2750-g\274\010\324\241<\333)\325\273\030b\264;\245LM=f*\036\275)\302\023\275J\346\026=\000\352;\274\206\004\202\2743v\024\275\345z\255<\241\252\277<\344\005\311\274\014\234\345<\t\370P=\245\227\3679Ly\317<\237\005\367<\374m1=\225\354\276\274\356~\226\274\'|\367\272\002\251\212<\274\215T=x\201\020=\314\220\342\274\273:1\275Bb\325;\005R\'=x.\371<\330\332\326<\246k\n\275\234%\277<\251@>\275\303\216\023\273\206\340\352<\333\236\031=\365\211\262\271\2100G<\017\'%\275!\0333=D\"\'\275W12=\347qM=,\206O\275]\334\222\274UP\005\275\202\3263;R\027\221\273vf\017\274\233\260\236\274\312\177\305\274q\347(=\2519\225\2740Yo<:+\365\273q\207z\274\'\3650\275\215\252 =\354j\341\274\367\315\331;,];=\354\357\002\275\3132\025=4\315\021\275\\\031_<\244j.\275\032F(<\355\266<=\242\353)=T\274\272\274m\024L=\335V\036\2758/@=\267\005\302<Z\233Q=T\211\026\274\342\323\221<U\303\026\275\231 \371\273\003\320\027=%\r\200\274\230\217\334:\300\252\003\275\'\304.;j\302&\275u\245\026\275sAS=\343yO\275\'\377S=\2420p\274u\237W=P\273\327: \r\213<!\327\274\274\341\204\316<r\0225=\204eL\275\315\014\311\274YQ\203<\353\216\315\274\324\356\261\274\335\003V\275\230aV=\225u\340\274Y\311\227\274\177\336V=m\rW\274(1D=Z.\330:\222z\343;`S\024=a\2319\275n&\022=\333\221\371\274<\266?\275-\371C<\260\027:\275\020\273\034\275\233n\030=>R\251:\347\315\317\274,\362\315<\255m6\274tDy:Sz\206<J\317\004\274\"/,\275\3209P\275\334B\277\274S*\327\274z\035W\274:\244M<\031\372\245\274,\025\242<\037\'\355\274\236\005\230\274\225\262U\274D\207?\275\234\264\334;\204#E=\226\344\375<*\n\016=\351\216\277\274\034F\034\275\273\261A\275\260~\276<\247w\365\274o\322\026\275\360\024\"=\301\227\206:`\271\220<\336\030\024\275ZK\205\274\\\247\222<\0106\006\275P\024\371\274;E\"\275\243\0043\274X\244\320<XUI=u\031\334;\373\026D\274\332\366\037;\032\341\031=\034\020\342<\264E$=\2377\205\272J\355\223\273\276\363\252\274\241\357\246\274\376\331\302\274&\025\210<\301\344\234\274\200\264\003\275iX\375\272\305\375\376<y:\370\273\253\0307\275\251\212\034\275\242\225\275\273\274\274\237:iT\356<\370i\252\274\272\247\352\273\014\025V=\327\237\301\271\002x\336<\004\332>:\213\366\272\274\004D\373\273\272\033\213<\313\225\023\275\333\023\r\275\035\355\344<(\331\371<O\373\324<\307\316\215\274\211\233C\275OyN\275\324,1<Et\027<\332\334\241\274\305=\370<m. =\023*#=\250w\317<\3037\301<\236\243\360<\010\367T=N\255\'\274(60=*\207\207\274\257\325\273;~l\031\273Z\301\265\274?\372\035\275F\313\263<\272\364\037=\243P\336\274[\253B\274I\030\233\274h\310\216:U~K<mhW=\022[\340<\277\272\266<\030p\026<_4\321\273 \377\271<\025/\352\273\234\202\366;\363\0277=\340\004M=\320\372\365\274\276ab\274h_f\274\225^a<rN#=\303P&=\305p9=\216o\222<\211\300\377<\036\352q\274R\346\376\274\253\271\t=\235\024\030\275V\2302;\351c;=\316\250<<O.\014\275\023\234z<;\035B=\212\316Y\274A\237\202\274g\374\310;\266\340/\2741\0144=\270\374\025\273j\251\321\274\212YZ<\267#\261\274xQQ=\200 >=r\263-\275\255\025%\275m\036\307:Gp\317\274\003\367\331;\377(\356:o5#\275\375\345\312\274\341b3=\210\261\036=\0001\017\273\320\000&\275\302\022\374;x\207U\275?\323\261;\2016\200<\343;N=\002\'\227\274t\'\037=\340\243\337<\377&\305;\306\034\345\274W\325\005\275\006 \037\275$\337E=`$H=\2616G\275\221\025\266<<m\305<\214}1\275\323\347\326\274\232;:\275\177\340&=BE\225\274\206\361Q\275\304\252z<\'\232e<_\373\343\274\314\234\026=n\312S\274\253\020\224\2747\352T=\256\036E\274\245u\234\272B.X\275\222\027%=\3519\203\274O\374\362;\275\334J\275WA.<\262\261=\2753\237\224\274D\216\352<\355\207\001\275\325\013,\275}f5\274\001(\201<\356c2=\337\204m<\004cS<i\2220=!8\240<.\261\331;di\351\274\302\027\360\274\236k\263\273Q\364\324<\350\232\"\274\305\322\277\274\270\255\217<\004\265\330\273\025\2519\275\202=\277:gh\240;^\210\000\275\024\213\251\274\257D\022\275\207k\006\2755y\353\274C\016(<\205\020\020\275\025\215N\274\225\017\004\275.\203\020==!U=\363\276,=1g\2029\317v\242\274\2570\267<7\211 :>\314\271\273\260e\025=/\037\026=\301\371\377;\2601V\274\345|+=\262\353\036=fk\251\272\340\006\244<3U0<\2017\244\274;\340o<\311\206G\275nn =\031+f\274\316>\007=\2245P\274\356\335F\275\2020\"\275\t\264\241;j\335\250\274cg\240\273\274\000\000:\300\236\226\273\270\315m\274\267\343J\275\340\331\304\274E\301\003\275m\216\227<\037\275N\275\206\221|<\n~\004\274\225\270\025\275X\017\263\273D7w\273\234\214J=e\343\252\274\312\247\325<\030\224\316\274\350\216\026\275;\023h\274\316o\213<\333\244\004=+z\322\273\234O/\275\257\372x\273\342iD\275\032\001\254\274\253\021\242;\313\017)\274n\rR\275\270\265R<\227U;=\245x:\274\034\026\263;gm\260;\347\370#<I\321Y\274]O\274\274\241\313\177\273\277\005\003\275`\001-\275t9k<\014\330%=\305\177:\274H~\277<\331\032\002=\006\325\031=\226\351\021\275\356?L\2759\335\033\275\267\333\272\274\243\313\334\274G\374\017\275\r\325A<\003\010\021\274^\262\035\275w\303\254\274\006\032\"\275\206\2176=\330\2702\274tRu;;\304\300\273\025\232\224\273\264k\221\273A\260\241\274h\320\247\274ctU<\303!\307<\357S\235<\334\323\306\273\324\303)\275\352\006\353\274\2662\366<B,\026=\027G\036=G\241\224\2734\232A\275&\023\265\274\205\246\'\275\t\300\246\273\ts\354\274\246f\201\274\273\355D=\025\202:\275z\006#=\223\0170\274~)\272;\327\337y<\375Y<=\332\336\002\275q\300\270<\034\275E\275\214#<\274\313\245\r=\242>\326<\022\213\001<\262\301\237\274\000\210\277<(\"%=l6p\2736 \013<\266\t\276<\220\342$=\001J\215;\260\032\223;Of\226:\323WC=}3U\273\226\335\024\275\305\223\022=R\024\234;\223v\025=E\000M\275\036\372\016=`\242(<h\306Q=\361\324:=\366\225\351\273\376\200\007=\254\263@\275\233\306\226<\006\005\007\275\320]7\275\354\317\361;rAM=\351\255T=\310nW\275\234\253?=\365\260\022=\323\266\373<J\252\r=-\001\035\275uA\340\274\225\216\270<T\224\213;\350\320\355\274\022<r\274\034\211\002=e\246\210\274a*\320\274\225\357\312\274\341\260L<a\017\347;\010\033\027\275\223\220\365\274D\246K=T\375I=g\023\362<\360$$\275h\035\305\274\034\251J\275:\216\365<\276\271\366;\2140 \275\324=\000=\214e\037=?RO\275\306\354\336<3\030\224<\232\361B<\252\031\364<\316\247/=@\030\'\275q\3213<\2458$=\014\340\240\274\331u\"<\336m\216\274T\214\357<\363Z$\275=\220\337\273\345\360I=\004\243\275\274\246}\242\273^\333\362;+\003\221;Vrp<\251\245\247\273\201\235\036=\303\231(=xAa;\273(#\274\333{A\275\346\271\035\275\031\274\365<\202j\271\274v\366A\275\010\2606=<]\001<\224U\"\275\334%O=\210Y\260\274\037\233\246\274,\r\366\273w=t:\277\307\247\273F\226\245<\320\242\355;\024m\305\274\310\224\016=J/\006\275\365\006\376\274P\273(=\031)?=\340w\007\275\2153\253\273NW\341<\3202\210\273y\0351\275D\270\017=\337\241&=pT<\275\360\344\n\274\377\316\034<j\r\036\275>M_<c4P\274\"\1778\275\022\240\025=\226\276\003=O\340!\273(y9=\024\336\024\275\307\267;\275/\254f\273P\021\373\274$\245\022\275R\230:=\032&x\274\n3\211\274>\\\243\274N\376M\275\352)\030\272\277\023\020=6\2767=\2206\342\274\232\227\001\275\301]\020\2741\232\"=\026\240\002\275\001$u\274\002\3209<*\275\253\274\300SK=\360#\366\273\310\344Q=K-6<{\236\032\273\2538\346\274({1\275\n\335%<:t\220\273\333\366\373<\007D\354:{\351\013<\003*\022\275\231\353\374\274\274\254\027\273\361\362r<Y\017y<\266\375y\274N\tr<\230\004r\274\255N\030\275\324\204\234\274M\337\005\275\370\332D\275q7\031=\341c=\275\372\031\031\275\024\363<=\232\010Y<\322\260\331<\235\\4\274l\"\001\274UL\n=\307\2602=\3022\031<\242\327\324\274\007,\274; \261\230\274\267n\256<dW3=\020UV\273\345\204\"\274RK*=b\265\223<)\310a<\214\227\356<;W\030\275\337\236\354\273&|p\274\033\274\342\274\276\255\364\274\210`\377\273W\374r<M\352\017=\237\023\257<\250\337\356\274\035\206B<\0168\332<_\344H=\265\247\024\274j\037\304;l\353\256\273G:\331<!\017\036\275\246\355<\275\213\316>=\207!%\275X\257\325<<\034\014\275NC\326\273vA\253<\322f\312;\037\356\003=\313\226\031\275\024\251\016=-a@\275\333\0247\273Fp\014=$\343\216\274\220\325\023=\263\225\374<\212?\014=L\t\315\274QU\r\2754\246n\274\366\206\347\273\247\300\232\274\270\255\t=\004\356\321\274\266%\000\275wt\005\275\325\260\257\274\017\316\007\273\277\322\223\273\344n\236;|M4=w:\310\274\001\021\014=9\33429\212\243P;\033\025\n=\355]\014=\315\314;=N[{\274\'\206\030\275\022\037\031<\n3P=\020i\255</\256\001=|\302 =t5\217<\277\341,\275\031b\252\274\263O\320<iTp\273C\201\362;\230Q#=\367\024\210<\27166\275X\260\227;\200\tO;\264\237\305\274\325mE=\374\265\305<\220\363\342<\310\374\375\273\362\302V\275\341\022?\274\261\373\201\274\365\010 =\312w\352<X\026\032;\260\327\241<|TW\275\342\276.\275\30328\2757\242\036\274\010!\265\274\007&\247<\220\210B=\241\345\334\274;0%=\021\000\233<{w =ou\244\272>U\210<d\335\024=\223<%=\217\222\223\274\267B]\274\031\206n\274\334\240\275<\253J-\275\261f\021\275S5\371<X\254\013\275\214\007\016=.\367\221\273\211\371>;hi\223\274\017\035\200\274\020~\252\273\216[\001\274\nG\'\274\245\203.=U\315F=\242o\313<\211\244\007\275t\323\243\274\302L\244\274$<Y\274\335\333\355\274\024m*\275\013\300B=L\273)=\273K\031=-\207@\273R\216\033=\325\313\023=ey\377<?\247\216<\305\343\330<\311\241\n=\373\371\373;\256\2357=\370\203O\2759\227T\275u\'\37681CV=\204\207\364\272^k\025\275>y\002=1}\r\275?\203\216<\3273\206<!\245\373\274H\210\267;\030@\237<y\3232=B\212\247<\033\210-=\206\327N=\000rC=s\206\246\274\360L\020\275S\030D\274\313(p<#l\262;>\014K=&\0036\274\0375\030\275_\r\327\272\017\272#=f{\003=\300\221+=\376\006\353\274\025\021=<@l\010\275\206\371\224\273C;\346\274\'\240>\275\376\275L=\252\240H\274\340@$<\332\364K<\225\275f\274yk\031\275\274\330\001=\204/\307\273\322a\037\275\007\321\341<)_\242\273u!D\275g6K\275\330\207\230<\375\2051=9\202d:\227)\235:\200\352<<\007\232\000\275\317\374\371\274\312{\000\2756\206Q=\233\2666=\254\237<=z\345\337:Z\036\261\273_k\217;\02534\275\334\2702\273\367\037\024<1\r(=C\005\034\275B\263\363\274\254h\222\274x\350\026\275\270l\013\275\r{\221;p\223\211<\361l\022=\336\213\212\274*$\360\274\r\273\325<\364\023\017\274\035\231\021=ni\304\274)\322M\275\270\221R=\204\'G=\275\r\222\274\246\210\333<G$<=\355\300#\275]\201\261<\\\027\035=Z\n\002=\352\314\232\272o\373T</W\033\275)\360\t=CP\202:\365\216\311;\003\234\026=yw1=-|\323\273\232 \336\274\353\326\"\275\226/\342<\340$\202<\304\244\021=a\371\333\274\335u\025\275\324\002\264\274\3077V\274b8*<b\331=\275\251\202\036\275\201\000\006\274#\224\t=\334\205\244\274\326\232\377\274\345\224\263\273\032\202\037\273\204T\007\275b1U\275qq-\275\255\271\344\274,\003\251<^|\234<X\321-\274%\010\323<\256\017o<O\365\241\274\007%F=Fh\274<\335\3662\274\317\025\241\274$\'\007=zL\022\275\224F+\275\323\254\034=V\334\227\274\357\034!\274\257\226\237\274\274z\274<\033d\037\2759\254\357<\324\216\350\273L\375@=\323\241\240\272\242\367O\2755\230\253<\346\372\216\274\'\0057<\340S2\275\205\233>=D#4\275\026\254J\275/\\e<d\026\250\274\273\212\370\273\271\240*\275U\311\246\274\333G\034=\002<\032=F\3659\275(\300\202\274\215\2452=\272\363\203;\37599=\177l\363\274\352>\236;x|\024\274x\035\267<X\300\253<\321_\343\274\205\205\354<\254\362\370<\376\234\301\274\363\"\214;\310V\t=\262=\030\275T\335\210\274\256\226\267<7\222O\275u#H\275!}6\275\216hs\273\032\355L=\236S\310\274\364\235Q\274\235\3448=\203\252\271<\312\305W\273\340\013\267<\223\3627=\016\\C<e\216\310<\375\361\026=\212\331\334\274\350\326\371\274?\030J<H0<\275\256\307\346:\275J\274\274\347\375W\275\242\277\017=\262\270,\275PX\036<\037p\253<HA\207<\315\214\204<Q\213\006=\242M?;\n/\367\274\366@\304\273\r\372\264\274\246\335V\275\316f\241\274\367#:=\323\274\357;h\263\370\274\275l\343\274\356\013\003\275lL\316\272\026?A=\002\224&=\030\356\235<\356\223\007\275\221\027\022=\265\030&\275\321\326\331<5\033a;!\215\025\275[\226\362\274\323\235\215<#\2659=\377Ao<5`\260<\214\002\360\274\206\005\306:\316=\030=sN\277<\357]\262<\253\212\344\273rM\036=\362\217\027\275U\373\027=\375c\212\274\203\250\r=\302:\301\274IF}\274^\355\363\274\272\361;\275\031i\016\275\\b\306<Ad\037=\370\246$\271\263]\004\275\007CR\275ckS=\310g\n\275\221\304==\\\233\r=\000\017C\275\3746\310\274\343\360\235\267\300k/\275\013GZ\274;S2=\256?\303\274\031\034Q=\021\306\216<l\275\023<5s\372<\301)4\275\325\037\020;\301\214\024<\346\353\006\275\033\r>=\267lC\274z\362\035=<VL\274\344\030,\274\206\004\302<\302\372\315<\304}\214;a\334S\274\225\264\314<A\240\t=\322\236\026\275\327\316\024\273\267\3159=\026P \275\366\370\247<\203\301\013\27525\023=\226\261o:;\256\375\274=\2264;\334C\025\275\322\247\010=\237\306\240\274\002\036\347;[\250\307;\273\260\305<\017O \2757+\374<\006\251\031\275U\326\250<\260\220L\275\242\266\354<\2545\017=\275\032\334\274A\351\032\275\243G;=\276\322\027<\252(=\275\223\275\331\274\2504(\275\237\3423\275\377&\026\275\267&!=\022\362&=\373\244\310<\234\330\217\273\353\3307\274\007\260f<\037/A\275\307\355Y\274\203>4=4\305\037=\253?\312<\347!\241<\246\364\002=\247\305\350\274\357W\211<\340\260@=\0215\310<}}\224<\247{\212<U\2567\274\241\037W\275u\202\250\274\026y\245\274\265\320V\275^{\t\272g\270$\275\3031N\275\257\342\205\274\370PW\275\315!B\275z\027\n=c\3215=\213\201\362<\021\311*\275\226\272\350<b\302\267<5\342\371<\351V\304;\"\275Y<k;K\275\252r?=P\025N\275 \236\320\273\216U\246<\273\024$=e9\035<C\274/=~=9<\316\007\216\273\233\033\272\274\240}/<w#F\273\377\221\305\274\021\0334;\355\006D\274\013\216\211<\000\274C=N\320F=\241\303\037=W_\016=\345_5=\256e&\273\247\0200\275+\274,\274~\004\375\274?\266A\275\374S\376<\016\301\255\274C\004\003\275\242&\031\275\363\006\232\274\205M\215\274\"\r\004=3\032\016\275t^\224<\276J\365\274\352\240\010=\022\220\241\274\177\267\016\275h^\327\274\204\266*=\221H2=O\2232\275n>\273<\344\262\327<\246\221\026\274\352\252\025\275\350g\344\274\273\277\353\274\202\"?\275\371T\030\275\323\234J\274\305\030T\275W\304 \275\'\000\360\274\010\025\364\273\035()\275\330\334_;x<x\274\2713\262\274\273Z\270\273\031\266\322<+\025\214\274E\2357=\023YS\275/l*=\314\201(:b \021;\037\225D\275Yp2\275\330\213+=w\266_\274\276^\344\274~\311\241<\032\251\267\274\223e\303<<i\241;\323\337B\275FZp<i\267\213\274\306\237\036=\353t\\\274\307-$<yV \274\336\307\361\274^\326\033<\003\371U\275pLB\275\322\343\376\274\037-\375<;\352\013\275\373$3\275\204Z\006<\337F\016\274\357\344P=-\r\227\274}4\t\275\2270l\274\223\200\320\274\232\266\342\274\241\204f\274\212\001\006\273(-\265;P\343\007=\245f\217<\tK\226;\266\361C\274\360\266\002<\324\361\036=>\355G\2758\'$\275\241m\340<\r\3679<\215G-=\036\216A=9\261\016\275UU\252\274\316\2723\275\037\010c;{\273\261<\027`H\275\347\214 \275\211\3657=\361U\335\274\0205\222<\014\247\343;\275\3635\2754\177V\275\230\322<\275\243\255\020=n\326\022\274IS\366\274\233\373F<\232\t\305<.\311\246;`+\000\275\353\0231=W\271\r\275\000\034\036<\026\317\323\274;\252\234\273.\347\037<J\261\n\275:\3340\275k\265G\275-\350I\275\017\370%\275z\032\021=u\304\177\274$\245o<\200k\t\273\237\327\033=\177\330\010=\266\017>=l\363L\274\202- =J \336\274\026y\256\274<+\266<T\377\013\275f\363C<_\212\342\273\022\352\304\274R\206\r\275\353A\225;\265\226\002\275\010uO\272\355\307\315;\315X\033\274\330\276\006={g*=\320\271\036\275#\212\337<\215q\035\274\0212\277\274=\327~\274\3362(\275p}b\2740\315\203\273{\201g<:/\006=\302|\246<\230\360\037\275\340\302\000=\025\2632\273\200m\363<h_\226\273\273x\352;v\0231\275\264q\230\274\357\363O\275?\360\006\275\220\350\325\274\233\360\027\275\200\360\254<^r\024\275\206\213\361<\251\356\345;\032f\204\274\347Tb\274\2572\240;I\017/\275<\247\264\274l\262\301\274\334\005J=\010\355#=\251\324\267<\251\267B=\225\255\355<\230j\362<\361\314&\274\373\274O\275\267\225\201<W%B\275nG\255\274?\003\316;\030\327\000\275KxU\275X4c:\227\200\325\273\306\346\217<\242\351\017\275:\2151=\2454\315\274\3009\220<\271\232\371:l`7\274\030h(\275\304\006[\274\237\366\247<v0\'\275\032xX\275-\000\226;i\313C=\3349\271;\341\202\007=\216r\n=\260gL\274\033\007\027=\273\333l8\355\223Z<6\347O\275\360PB<\274\"G<$\236D=\t\003\"\274\026N\005\275S\272\007\275Z\223\247<B\372\006\273\226E\021\275\224\347$\2740\274\002\272\311\234T=y\342\243<\020iM\274\034\364\017\274\313\366\r=gi\221\274\303,\023\274\000\246\006=\204\310\354;e\320\210\273!\353\321\273J\306^<\014\035N\275\200\356\022\275)\267\020<o\331\005\275\034\255#=g\2476\275!*\332\274\032\004\020=$o;=\266\022\005=\302\321\355<\215\241\316<\305\257W\274A;\275<\334\274%\275),g;$Hn\2741R\201\274t\262D\275\324\242\013<Jm:\275\266\323\352<D\317\272\272\212\204\037\275\212\315S=\006\360\301<[\037q<73%\274\017i\010=\000\367*\275\200\\\020\274b\2709=\307\360\247\274l-R=\231\276\031\275\033?S<\266\302\343\273\370|\365\274\207\221\'\273\213\346\214\273%\304\223<{\"\027=\372%;=\211!><\200N\032=9\274\337<O\265\314\273\360b\325<9\233\033\274\222\221\260<\302\204\314;e\361$=\343:\n\275\362\313U<\020\301\326<<\247J\275\0226\305<M_\236<\205-V\275\254\276\263\271%tJ;\366-\242<\"\001,\273\232\261-=\007\276\256\274ykb\274\271n\303<\212\216\240<Oj\251<@zC=SF\027<~\007\232\274\030\021\251;h,\024\2745\037$=\264\360\024\274I\204\036=]\375R<\324i\275\274\010n7=\027O\202<7v&=i\3110=\000\353=\275\366\262\223\274s\312=<\343)\217<\016vW\275\362c\200<}y!\275\260\'\267;\177\345\034=\22366=\226\305I=\331\227#=\3550;\275\356\331\342<\277\027\325\274\301\252\362\274Hj.\275KYm<e\014Q\275~\256\016\275\243\222\224\274\010+=\274dy-\274\357\3615\274\0056R=\037P7<\3243\017<\372\364T\274\360K\215<\265\363\347<$\\\316<*\262\266<U\302\343< \213\250<:$U=y\232\331<C\373\316\274a\336\342<;!$=\343\212\n=\177L\025\275\214\217&=\354\351\250;Zj\'=!\373\210\273\2150W\275$\373<\275\023\344\275<\343x\213\273n\340\243<\364\023\t\275O\231\221<\302\304t<\001\307_<\024d{\274\364\236\305\273\323\250I\274\257\364\227<E\247u<f\262D\275\313\2322=V\301E\275\n\224>=\340<P\275\353-d\274<\314\000\274T\204\004<]t\254\274\205}\003\274\262\177(\275\360\2428=\177S\336\274X\336?=S\355\250;9\215\'\275\221;\356<y\337\244<\034Y\272\273\224\305h\273\350u\033\275FI\271\274!\322F=\301\350\237;@\033\233\274g\362\032\275/\342\373<\030^\223<!s\271\274H`><\220\n!\275l]\271;4\275\365\274iJ\265<]\240\271;\376j$\274u\236+=u\'\000\273\241\026\331<\304\337G\274\021W\3078\202\250\340<\255D\345\273!\226.\275\\\030\037\2745\365,=\217\361\000\275\376\346O\274\346a2<{>I\274)\362\316<\303\0026\274\001E\030\275\3546\"\274\367\327;=\365\303\335<\234\343 <\244\257\377<c\010I\275\271\\*\275\202\2765<yd0=\3729\277<\373\361\344;>\322\354\273\230\302\032\274a$\003=|\350\302\274\323\303F\274\221V\237\274c\341\r= \310\217\274\343r\330\274\271\354A\274\232~}<\243^e<\031)\311<KGF\275\235\2165;\213\200\332<\304o\211<\263\332\005=Y8C=c\335\226<6\010\005\275t4\271<()h\272@*\004=\325+\"=\341\245\016=\343\300F=[\327\'=5v8\275\006\240\311<\230\237\320\274IM\355<\330-\252<\005?+<\204\337\371\274{*)\275\373XT<S\225m<\210@\310<7}\356<b\221\204:P\230\007\275 \253\244<\217\036\027=63\356\274\013\335\024\274R\360\267<\224\272R=\206\330\343<\367iK=zzU\275\367\024R=\207\361\257\274\"u-=\356\2167\275B\375V\275Vq9\273\374E\364<}\177J\2755\367\'=\245\2659<\350\211(=\337\3032=\002\274\226\273:\260\212\273\270\275&=\022\377V=Or\232\274i:\357<^\251\022\274\246\345\233<\032WF\275^\260\372\274\357W\006\274\242\344\233;\317\t\266\273\374\215(=ga\"\275MfW\275,PV<,s\271;\226@\225<Y\276\207<\233\031\250<~/\223\274\315\312\343<\023\357\217\2733KF\275V\020\364<\342\224\352<y\277)\275\247o\001\274K\323\035\275\207\345\227\274?\344\337<\375\3672=[\307{\274\205\004 \275\254\2506\274n\031\310<\210&\233\274u\277a\274E\321\252\274&\341\004\275\025\244\351\274Ia,\275i\214i\274\331c\n\274\265+\374\274E.\023;\243<\267<\231\254\007\275\332\207X=\220\224\330<\317\024\224\274\372\320\302\274\205x\000\275\237c\017\2759N\272\274\026r\313<\321|\215\274\373}\017=TBe<*\225\235<\250\020\r\275\301\177\376;^~\230<%<\205<@\332\256\274NM\004=\017\321U\275\200OD=\220\321 =G%\277;./H<\335\343-\274\355JQ\275V\204(=\331\331\013=#a\353\274+\323\027\275\005\364\020\275\322,\034=\226\016\374<\325\324\300\274x\361\221<\022\325H\275\354\313\363\274\246<\233<\244\372\035=*\321]<\204\000+\275Y\245M=\245\261y\2732\244\'==\316C=\272\255T=\351\262j\274x\326\357\274o[\024\275\345C\376\274\265\276\210<\250\\3=:\341I\275\372i9=\"\246\211\274\343\346B=K!\305<\037Z\336;\313\211\247\274WQ\351;\033?\276\274E\350\004=\263R\342<\013\321\261\2748\2718<qL\005=\313\005(=\336\253]\274\0378(=r?K=\316\014\271\274.+7=\307\365\211\274\247\356\344:U\n\177\274\022\355e\273\207\024\031=7\214\274\274\210\027\373\274\007P\340<\021r\032=!\354*\275\231\333\355<\274\257\240\274\035\031;\275\362!\274\273\2248\234;7\2310\275D0\023\275|\000\007\2752\224\274:U\335<\275\177\224.\275\235\241B\275\001an\274\212\266\213<\225\312\000=,\254\007=\357r\014=\325A,\275xX&<\354\262r<\3715\017\275G\020K\275\022R+=\343\036\326:\022\355\020=p\343\202\274?\013\n=]7\010\274\276W\231\273:EX=\247\267\321\274\255~\322<0\334V\275\352\241\273<-N2<%\271\352\274\215\017\205<k\307I\2717sW<\020\305?\275\205\232\232\274\03540\275z\017A\275\334\233\021=r\356S=6\027U=\213{\035\275b\314\034\275\252|n\274\014\345L;`?\037\274kX\230<\300\371h\274\245\013\013\275\242\264B=h\305\006<\321\273\314\272\313\230\357\274!\001E=\314e\323<\374\271\224\274\336\341(<\371F\016=\004\000\032=H6A\275q\320\365<FH\270<WcB=L*\030=u=\003<\247\370\320\274\325\027T\275\265\277\002=\003039\306\271\014=.Oq;\r3\265<|\340`\274\213~\305<\254sT=Y\026\207\274\365\344\331\274\276\263c:55.<H\350\313\274\022H\322<~>\377<\225F\313\274\262\376\252\273t\031\233<ZH\217<\266^1=\201uA\275\035T\255<\313\362\270<=\'\215\273\360\236`:\276c\2409\274Y\010;\2021\207\2746\265\035=\n\t\324\2745B+=i\223\006\275\374|*=\031r/=\320\023\004=n\\\344\274\010^ \275V\nH<\206\255\017\275\374\300\'=\230\0200\275jc\010\274\027\261\036\275o_\216<PK\321<\376\250F=\310\026:\275\253\362J=)g\356\272n\343\214\274\325\212\016\275\375\333\021\274\247L\303\274\362\002\355<_\236\000=l\'\327\274\372\000\200;\221A\265;1\254W\275Z>L\274\377%\"<\220E\334;\004\373\000=\373\230\'\273X\271-=\272\000<\273\266\213\020:\004D\026\275\222\365\025=:\031=\275\n/^\274\270\0029=&\375Q\275A\322\216<\002\307O\274C\314\367<\240K(<\006\302\007\275\200\210R\274~\324\342<Jd\006=_\230H=\177\203\303\274\rr\007\274\317\317a\274\306\\\206;\314F{;.\360^<\261\3560=}\033\004=\017\344\313\274i\256\322\2748\020\374\274\037\256\200<a\260\332\274=\022\214\274\333cT=\211\321\335\2747,\251<o)\363\274\351\252\234<\3245\004\274\345\270\026\275\253\372Z\274~\226H\275\262\215G\274\270\013Q;\303\344?\275\214\203\'=W\207\010\275\006(\307<\326\272\274;g\2414\275\260OE\274\017\210:\275\357\356\300<\3212\246\274\360\0378\273:\3034\275\305\3726\275\006\301O\275mjD=,\214\r<n\244\200<Sd\260\273\362\253\022<\317k\021<p\327n;\304i\000=\022X\314;\237\376\000\275\337h\236\273U\316\r\275(\375K==.\247\274rG\317\274!\000M\274\334u,=\265\345\365<\223\302\036\270\301\007\033\275u\333\t=\207~\275\274gw4<\327jH\275\376\276V\275o\036\360<\023\020\243<\214\036\007\275\251\tD=%\266\346\272`\331\000\275\213\237d\274\260M\246;\033gO\275\365v7=\377-\345\274c#\220\2732.\000\275\335\\\263<c\321\025=\337\2567\275.uE\275\237\2761=\255 !=\006\324\017\275.\225.<a\000=\275$\017\\<d\2026\275\340 \006=C\303O<\203\336\r\275@7\036=\232\177+<mR\003==U\206<\375QF=\017z\315<\234hg\274\363\032e\273\232\231)=\334\303K\275\\G\264\273\342\371(\275M\262\033\274K\257u8e\345\210\274.&\255\273\246\246\243\274\245\177M\274B\231E\274hVK\275W\235\007<\274\3528\272\374\3570=\306\333V\274\277\3772=:N+\275?/\235\274@1\007\275J\252\301<_\273\363<V\214v<\231\227\234\273\221z\036=`GS\275\270C\347\274y\225\037=\n\266\246<\224\374\026=\257\216!\274?\332\n\275\262{\023=\211\216\177\274/R\254<%$6\275\315[\355\272P/\016=jG\231\274\366\204Q;\325!\365\274f\266\'=&\365\036\275i\303o<n\004\227;CS<\275\233\256P=\363L\307\274\366{\335<\307\021\220;\252\320\250<\027\250\027<\231Y\021<D\252\217\272\334Jb<VO\320;\026Y\207<o\313\266\274\2123\330\274\37132=D5\007\275\022B:\274G\267\227<\033\316\224\271\300X5<\223\036\247\273\205\2331\272w\352;\275\023.)<\016\362\031=\037f\252<\327\332\360\273\004\264\307\274\207\0246\275\245e\337<\010.\266\2748\341\371<\337f\342\274\257\260\206\274f\373*=\033\260\302<\t\026\013=9\223V=8\335\010=\226=\255<\333\022\211<p\010@=\203\263\316<\274\354\016\274X\326\230\272\360gA<\343]\277<\257\014$<\271\370\204;\037\356\020=%\372\376<3\rq<\n\017\326:\223 \243\274\004a2\275\312C\276:\360\365r<,X\270\274&\324T\275\221%\022;\353\235\245\272\335N\017\275\021\243E=\315\367\025=[\211?\275\204\030\023=gsX\275\331\016\335<\022\000\010=6\302\334\274\001\230L\275.{T\275\367\350\240<\005\261\253<D\024\343\273\377\034\022<\022PE\275\233G)\275.\306\216\274U\372\361\273\034\321\314<Hs,\274\0342\003=\030C#;6@C\274\276\241\035<\246\221\026\275r\376\352\274i\267Q\275euW=\344&\024=\337\\#\275GE\222<\325\231\324<\235\352H\275\344^\023\275:\3614\274\256\236p<\235P\216<\341kF\275\250`*\275w\247\331<M\336\332\272\r\361\324\272]\025\023\275\020\322\343\274\371\353\227\273\264\203\006\275\336\237\217<0\307;=\313\000p<\371\373\344<\"Mh<\357N\243<B\311\272\274\367\2220\2753i\222\274\354\0179\275Q\262@=|\231\200\273\362\013R<|E\337;\3412\022=u_.=\020\203G\275Y\356\t\274\013i\020\275\255|P\275\373\3244\274\265\300f<\371\200y<\233\370\355<\203\246m\274o>\003:K\341\225\274\0033\036= \303\226<\020\rF=\006\254$:\227\0350\275\2628K\274\363\221\036=Wa\336:D\002\364\274b[-=&\235\330<\016\004\202\274\245\360d\274\211\226\344\272\203+\252\274\245\307\253<:R\342<s\240\007=L\3051=\362\025=\275j\2554\274\005hO\275vD\363\274kH%=\277>m;9\007F\275\367\365L=W\224\026<hi\271<\377H\215\273\366\360\203<\274\025\210\274\200\202\336<\315[\320\274y\374\236<\205\225H=\230\252W<\226\341W\275\021\036\246;\036\373\217\274\365<\032=\326\035*\272\206v\265\274\206x0\274O\2130=p\021R\275\035\370\330<\213\243\032=\247K\n=\330\230C<\3557\001;G/_\274\272uw<\251\331\315\273R\266\261<wA\231<\333\212D\275\311\301N<\321`\375\273d\261\232\273\235\234\020=\343kN\275\342C\345<Z;\320;\311\021T\275B\230A=\013g\210<\253pW=\275\374A=\230;$<\201w\247\274H\242\'=\032\'\245\274\256\353?=\273\3015\275\255\270D\2759\302\337\2735\377\330<\257\371\266\273\245x\002=@\334\274\274\346W\031\275\264\200\277<\025\364\273\272\034\207\224:\303\026\n=?\360\247;8\006`<\2255@\275Ki\251\274\324~\'<9)B\275\336\347\344\274\023\217\365<\327\014\354<mF\025=2\311\"=\177y\235\274\374:\233;I\2423<\312\274\363\273#X\016\275\231P\237\274\021\351\364;\2235-\273\232\243C;\355Zt\274\203O\263<_{\005\275,\301\336\274N\201\354\274\216D&\2759\213\245<\362eA\275\005\014B\275\013)\323\274\3700\232<yN}:\277Y:=geR=S\303\014=\022\374\274;\360\274\025\275\230\334Y<\376_\345;\320@U=\025M=={\030\n=\000\\\030\275U-\037=\002\021\334\274/\020\375<\031\232>=\0023\006=\021\356\374\274\256\247J<- \n<\r<\371:\201#O=\257\022x<~\004\005=6OT\275\225\036\207\274\216\325\317<\036\004(\275\217\301\342<RK(=\345\235?\275N&\000\274\213\021>=\004\251\020=uEJ\275\306+\243\274\257\2553\275\204\004\006=\364\350*\275v\023K\275$\226$<A\272\237\274u\352\230;_\200\256;}zR<?&P=\360hT\275D\305C=\302Ho<ib\277\272t\347M=\000-\r\275:a\002=+\355\336\274<\226O\275\365\025\017\273Or\326<\r:\r\275\254Y,\275\231|\270<.6\022<7\301B\275\254L\320\274W\306\214\273\030\3005;\023>l<^\223\022=\356\301\252;Ug\210\274o\002\206\274\311j\331\273\316+!\275\304\300-=\263\224\326<\215\316H=`\'\025\273\265A\035\275\032\337\031\273o\353\271;\007\355.=\030\025\235\274\336\007\001=\256\271)<\337j,=\226?O\275]-\310\274tx:=\301\263\212\274/\372\261<Np\022;\250\365\302\273\364\246\301<T\211T=\333\225\034=\257s\246\274^\226\"\275\270\340,=u\372\022\274\201\317\014=\000:W\275\265r\013\275\241\2469\275P\2144:\327\025\312<\237\247\035\274g1R\275\017a\253\2749!\212<\322\001U=\211`\026=\275\307\027=3&(\275\313<O=\271[\257\274\033\325\014=U\016\336\274\302\023\374;\241\347\313\274f\330\203\274\254\323>=\331\026M<M\223>:N\254\022=\225\3574\274\334\375\030\275\332\215\007\275e\255\361\274\337\301\"\275\203G(;\311\215Y\273\024\033\005\274\0141.=\023\tN=\217\327\310\2749rV<\366:\t\275EU\336;\233\251O\275\307\236\366\274\263\273?\275\217\356\334<x\337\033={\240O=r\374F<\241Z\235\273\367\326!;\347\222 =b\237\026<\257O\035=\331\312\356<d\t>\2750\245\241\274\316\271I\275\374\305\216\274\265\2471=\251k\272\274\032\270!\275\322\0011\275\204\3460\275q7\r<\373M\025\274\316\202N\274.\367\032;kc\001=\3209(=\214\272\001=\375\246\373\274\272b\311<\353{\313\274\276\013\240\274\226\365.<\276\225&<\316\203\304<\333\2073=\247\007a;\374\032\354\273\367L\276<\"63={\026==n\014\220<\025\362A\273/\322\215\274Xh\311\273{<@\275\t\205\274\273Rf\025=c\336\006\275\003\010\305:\200{\030\274\267\334&=\326g8\275\352\005F\274\232\005\260\272\036&!=\023\344\020=\264\005+\275\226\321\001<\250\372S<\267\342N\275q\005\214\274\2073\"\275Z2\034=gL\237\274\313y\003=\247V\020=\214O\372<\321\354?\275i\200:<?^\2259\352\350,\275\020\t\033\2759\300\345;\265\351\260<,\2200=\013\301\351<\345\354\362\272>\373\023=\276{-\275\355I\236<\031\341\320\273\r\271@=\241Z\245<\261dP\273u.\334<+\325H\275aB\"==\035\007\275\211|\247<\000\237\234\274\373\0244=\245\t\227\274>\031m\274\257\367@=E8\320<\311\354<=\3150\263\274\217\261Q\275\315E\025\273\001gU=37$\275%8S\275\356|m\274\325@\350\273\000\3042=xd\357\274l1\331<\354u\225\274i\251@\275\371\234r;\373n+=\353vF=v\301E\275\372Y\203<\037\300\010=\316\273\313\273B\013z<\201\321.\274`\234\234\274\032e5\275y\330&\275\341$?\275\366\007\201<\2318\t\275s\245\246\274\250\241E<\356\036\317\274\016\2649\275\034^\026\274\366.\026\275?iG\275\243\271\275<0\333\014<\223\2517\275\277*\014\275r(\213\274(\275\023\275\373\035\264;\t\326\306<G\301\323\274j\231\377;\203g)=\010\006 \274\312#5=\n\035\210\274\321\327\312<\302q\002=\347O\306;?\307\033\275 \323\244<Fy\235\274\030\021!\275\001*\022\272\t\3376=\3644\000\274\357A\013\274F\242H\275\3123\260<\260Y2\2748\200\002\275\"\363\362<J\230?\275\341\277\003=\324|\026\274\262c\037<\266A\343<\216\366b<\246\223\244;\026\243\342\274)\301\027\275\233\360L\275=Er\271\214\217/=\251\357\333<\3317\305\271\007\014\037=\025\022\324\273D\251\206<\277\346\266\274*\201\017=3\226 <\253\264\307;\024{*\2754\333C<\355\03739\355\236\370\274\345:\326\274\343\030\236<7\347\271\274yw&\274\300\362\360<\001+\017=\335b\247;\300-\r;[\275=\273\202\230\037\275\335Y\342<\221\326><h>\213<\373\3319=\313w\303\274Z\365\356\274*<\252\274\313\033\332<.\016=\274\306\276:\275\212\273\272<!\016<=\270\'\211<Q\357{<\312\251W\275\275\0235\275\303u\334:\026\307\324\274G\212\260<\250+\022=\007\321\270\274y2\250\274\216v><\355\2761=\245\036\326\274\364\013C=<\216\037=\256\220\3719\357\327\266\274\233\005\326\273\035\267\242\274\260\2017=\372\235\030\275U{^<\333\345K\275\250<\202\274\361\333$\274?>+=SQ\3359&\211#=\377\200!=\0347K=3!\270;~\220\003\274\035\353#\275\177\262\220\274\023\010\027=\331\301\260\273\263\220H=\307\277\324<\014_\220<\314\277\240\274Y\267\302\272^\306\037<\016\313\224\274\215f\244;\221\002\020\275\332k\032=\247\217O=T\317J=\302HX<\244zN=i\240F=\257\334\340\274#\304S<\324\017!=\201\005T\274\346+S\275\356\231>\275\365\313\021=\027f\220\274\221\345\005\271\234\376-\273w\320!=X5.\2756\244\013=\322\016\237<m\264^\274\033\335#==\244\214<\341\262\273\274l\221(=7k\010\274x6\374\274\263\324(=\033h\360<\017D\034\275\304\027:=\300\237\233\273\216\201\251\273\203\334\221</.\333\273<\357\321<\226\377[<]\202+=]\341V\275\0233<=Z\271\003=Ki\\\273\004\353\324<c\036M=@\243\277<d\014\244;\351\2074=\265\3619\275)\224\205;\252\230\r\274\305+\342\273\346\021&< \275\014\275\317r^:J\0071<\351(\274\272V\354\215<\t\3721=]\366\001=\254\337\026=\013\246\034\275\200\267\247\274G\025\265<\342\024I=\273\027\343<\376\262\320<Y\367\254\274S\211/<\007\245z<{\2159=\177\253\257<\007sJ=\233=\372:\nQ\002\275P\236<=6\322^;\341\277d\274\214n5\275\317\214\030<\000dB=\366wE\275\377\007\033=4|\341<\340W\r\275\331\275\t=\007\027\213<\035\263\273;\323\333\317<^\363M<\r\341\345\274\025\0259<\027\nF=\234\347\033= rQ\273\310)\234<d\037B=\366\364\202;}u)=\016\263\255\274\320wE<\200x\013\274S\213\342\274\261C\257<\261\013\353\274GyP=\215\362\374<\365\270\230\274\'|\343<iF&=1\305\236<\363\030\020<@\004\277<\177\206\325\274\023x\034\275(\376\n\275G\270\270<\247\270\027=m\365\227\274\235_v<\217q/\275\316\026\222</PG\275\346\317\341;y\265\000\275)\300\376<\252(\354;\3215\332\273\310\332\033<3\252@=\344\242\325\274+ZI\274>\014.\274\016\345!=\251?\304\274\321\335\r\274K\324o\274*z\032\273I\243\307:\002@\270<%\242\261\274\235\304\\<\307A\006\275\261\234\305<Q\033\334<\365\005%=?\315\'\275@\025\215;|C)=\201T\016\272\3627\326\274r \201\273\335`\336<\342\262\356<\027f\301<\010\375B<+\200-\275\211\300\233<)\313T\275\305\240,\275]\006=\272\374\005\031\275\257\362%=\244o`\271\274\257\027=\264\204)\275Txn\274\3227P=X\256=\275\256\001\334;r\265\022<K\275\251\273\317\000\233\274\002\343\331:m\373\221<\001@U\275\025\274\035\271\304\301\200<7\361K\274\301\032\333\274K\334\037\275\352\237E=dm2=-\311\240\274\266\000\244<{%8\275\301(\002=\030\361\000=\240\363\212\274\037<\325\274\240}\244\273\301\3515=\013\361u;\016QB\275\325Z\006=\236\311F=\302\334\022=*}\271\274!\355\264\274/p\036=\027\351\\\274e\254\317<\276UW\275h\312\'=\247g\033= \342?<\350/\343\272\n\255\375<C\250\005\275\033\277\031;Y\231I\275\2266\245<\331\230\221\272\3436\230\274uC\220<\'\247\315<\262\240\257\274\240\034\277<\237\234.\274\232\356!<\007r\343\274\3218\332<~\360U\275Ix`\274\212\027Y<aTL\274MM\367\274\327|$=P\353\005\275\246\220\367\274\314+\347\274,\270\363\274.o\346\273\363\025\033<\007\037\317\274WM\253\274\347\024\343<\260\005\032\275\304\214\303\274\335:\023=\347\025\336\274\013\221\3049,\030\364\274\262\005\262\2741\tH\275\201\314\014\273\305\"\022\275{\025\204:\234c\'\274\235}\275\274\316n\023=\352}\033;\213\263\020\275\271`\034\275\353fo:\214\3570=>\t\244:\326\350\000=E\213\266\274M\260\005==\000+:te8=Q\267h\273\035@5\275\261\331\'=\300\013B<W\374H=\205,\235<7\017\260\274\006\207P\275V;\261\274u/\337:\256>/\275\343!S=\253$\324<\024\271\006=y\2739\275K\303\320<\304v\222<\003v\306\274\205\307\277<\332\020\314\274\230\222)\275\254\206\010\275\244\203D<\037\257\315\273\373e+\275\207\330\200\274\350v\205\274g_\002\275bX\325\274i[s<\332AM=\3648\303<u\371&\274ca=\275\251G2\274\3538)\275\0172\"=\353\'Z\274\277t\370\274\302%\t\2757\343,=\263\252x<\023g\212\274oS \275\324\262,<9\362/={\211\276<H\327\245<c\321\233\274h\t\316\274B\300\213\274u\017\216;\311\224J=(\007\326\274;h \275\350_\004=\025\260\353\274k\332&\274\031a\010=\265\355B<?\255\275<\257tV\275\275\\[\2733P$\275\3671\000\275\263\2774\275\005\022\001=\300Y\327:\304\252\027\274\210\224\r=\007\231j<\361\355\274\274\312\023\371\274U\020\207<\371\2461\275g\323\315\274i\215\312\273\223T\014\275\230}\014=\267cA=\335V\273<\034K\311<<\031\201\274\355\032P\275\372$\320\274d\212\'\275 JL\275u\311\357<\311\017\216\274*\001\005=\272\250\370<\336\240\331\273\310\2308\275=\031\217<d?@\275\300\3602\274\256\250%\275\217\231A;\216?j\273x\256*\275!\255M=L(\037\275\366\0374<\257%\007=\221C\226;C\265A\274<\365%<wPA=/\352\343\274xc\032\275\002+\002\275\307M-;\204\010D\274\225\204\203<\255j\002\274k{\347\274uZ\032\275?&\374\274\203\321\210;t\027\023=\235Z/=\243\350\307\273\03599=\031j\316<60\270\274\275\024W<\251\357<\275\311Q\336\274z\213V\275\306\227;;v.N=\251\365>\274\326\370\200\274yT\367\273$t\037\273\330\253\212\274S*}<\270UK=.D\334<F\331\016\275r\003.\274\233\243\235<\264\352\362\272\205c\001\275\376\003 =o\\b\274\340\237\026\275 k\300<X\205D\275\272\r\345<\265\2775\274p\2304=+\253D\275\320\233\365<\025fR\271\203\332\226<\215x.\275\330c\024\274\232n\034<\224*\027\275\231\363!\274\325\265\246<\210RG\275r\024G\274,\204\226\274+\254\034\275\033n\2208\037\210\260<\204Z\"=Z\216\035\2739\367\272<\346\250j;\364SQ\275\306J+=\261T\211\274M\346\252<\n\221=\275\316mC\275\202\374\243;L\263\264;\334pc\274\022\010\325<\324\243\246<\030*\345\274\324P\3369r\260\025\275\212\313\206<t\273\260\271\357\035\032=\353WH\275rI\217\274D\272\230<N\002\247\274\3169\366<\212\250\327<_\2702=(1$<\345W\255\272\3227\271:\356\3371=\024\254!\275\332=\353<\226\007\006\275\224\201\211<\245F\354\274\355)\261\274\252\266\016=1;F\272\245C\252\273\325\250\240<\356\005F\275s\341\302<\3201\r=\036\330)=m\367P:,p5\274\367?\034=clV\2721\220E\275.\263\017=\370-!=\265a\327\274\367i\035\275I\377\266\274\314\320\013\275\243\300F=\340*C=\222*\331\274\331\316^<\374\237\226\274\253=&\275\3566\220<\244;M\2757Hj9\253#<\273\270\337\262<\261dd<\315\363M\275+\313\360\274|\327\312<O4>\275\374\037\256<`\240\025=\321<7=q\317\207<}>\336\274\204\262\315\274\365^d\274\317\220@\275\223\243:\275\231\273\362\274\370\r\027=\270-T;\033\326\024=\010\002\207<\267S\220<\330`\226\274\206\2403=Z\210\237<&\302\367\274\216\3070=\r\300\216<gn\203\273\316f\177<3G#\274\t12\275G1\025=\236\232-<.c\021\275\333\016\031\275\361D\016\275*\341\331\2744\032\227;\276\263\035\275\303\362\306<\344@y\2742\225\226<tU\215<i\252\363;\027\tI<Z\361.=\233wg<\321\010E=\030\300(\275\261\261\363:\267/\357\274\253\302A;6\245\305<\302\326\005=8\204\305<\001#c\272\236To\273\371\345\354\274\034\355\016=hRR=$\351d\274W\355\014=\224\240*\274\272\261D\275aWS\275~\275K<\331x6<\213dK=-!\203\273\0175\200\274\273~\263\273=\371+=\356\364\260\274\n1\203<\251\202\r<\227\364d\273\311\311c<\336\030&\275\314\363\315\274\341\200\001\275\311\334\364;\244mW\275U\032G<\237<\036=\020\226\013\275\261P\n\273\177@7=\345\023&\275\222\253\302\274\253\226\026\275\242\271\004=\302\037M\275g\232\220\274\351{\n=\262\207\213<\336\321,\275\306\263\245;X\210\250\274\276+\246<j\344=\275\210\264}<\264\3241\275\0048\233\274\3444\030;\332\272\334\273\210\253:=@E\323<\332\276\030=\242%\326\274\235`\334\274\215\332\202<\300\003\016<\256\3017\274k3\265<\277\226\372<\tO\344\2742\004\026=I\223\312\274\330\311>\275\347\311\027\275HY7\275\334\210I\2750\022U=%\255,\275\272!x\273\336h*=l)\276<\244\240\357<3:\231\274`\226\240\274\351C\217</)\224<\352\"M\275>\274\017\275\035\210{;k\252*=\227Q6=\373]W\275\025\260=\275\212\344D<F\266a<\364\016\254\274\014\315\n\2758n$\274c\225<\274J;\024=\336\357\355<w\262\352<\264h}\274c\276\221;%\003R<h\'W=a\236\026<\340\322\313<\005\032:\274\210\t\035\275\377}\244<D\320\000\275\014n\247\274(\210\354<\226\316\335<\255\274\002=\231Y\215\274\025\t1=/\211\252;\273\343\205\274]ZE=w+\244<\217\014J\275\000\260+\275\260\033\027=!\036Q\275\364g(=E\300F\275\316@\"<!V\013=\003\363&\275k\326\207\274\213O\026\274c\274\227<\035\277/=\n1u\274\367&A=\242?\370\273\334J\370\274\340}\250\273\026\220\376\274\211\024Y\273d\321 =\314\203O=j1E=%\023\200\273\216H\251\274\250\n\315\274\305\263@\275\264\322C\273\243\2747\275\205B\037\273\325\311\357\274\262\314z:_\253\025\275\274\035\016=\2220B=\332wK<\217\026\237\274\376\361\324<o\317\016\275\371\3637\275\346On\273\302\032\215;\001aL\275)\313K\274\300\026\224\273\026\274\031\275\242\000\331<\205(\263<h\312\272\274b2\021\275\257\2573=z\361N\275$\345S\275\320\026\227<\347:+\275\241\354?<i\3306\274R\251\265\274\342\320\030=\265\375&=\227\231\007\274\245\352\351;\321\235\366:\274YO\275\nN\250\274\251\023\261\274<\313R=x U=\033\032\000=\330\247\336\274H\307\000\274\315\033\027=0\216\022=\267\375\312\274\377N6\275vi\031=\337\251\365<\024]\032\275\260\360\365\273\203\326\004=tb/=\rT\023\275\027K\214\272q\244\303<\211I\363\274\276Nv\274\374x4\275\335-\004\274\034\035R\275\300\245\257\273\003\311\375\274\255\2714=\024U\343\274\231\252\325\274\002\365U<\230V\217<\227\313\216\273p\023E\274K\200\021<\025\352\366\274\207\374\005\275\021O\306\273\"\3004=\322\026\240\274K^\303\273\034BH\275\376\036\023<#s\035=\364\307M\275\333\177&=\017\000\363\274\215\247\t\275\220\3742\275It\242\274\360\024\220<\0345\017=\317\245O\275\022\035O\275\265l\025<\313M\000\275\027U\003\275\353\264!=P\032U=\202\267\373\274\207I\022\275\327\331)\275\201\036\225\274\367r\276<)G\374\274\306\216\330\274K\270N\274\335lw<\226V\014=\327\362,=g[>=\205Nj<D\016i\274\242\323\347<\016\377\006\275\347\037\237<\022\2361<\221\003\204<\223N\263\274\355 o<\216\231\232\272\302\265\337\274\264\266q<i\235\322\274\014\317\304;]\217\213\274{<6\274\303\301\341\274\366\230\347<\274-\321\274\233;K\275\307\031o\273\202\237\211:\335\332\262<v\230\003<-\020T\274\303\020\000=\002\335\007<\275\374\206<\224|{<v\333D=\360\355\333<\215]\037\275E\360\026\275\242$\001=&\316H\275\0260C\275XxV<}/\3249\200\026\2449\275\224\230<\272U\226\274\322\025X=\231\370\265<]\341E\275\364\264\315<\332V\237\274\304\263\252\273h\327\014=\256\327\243\274\277\3301\275\225\206\022=z\321\315\274Lh@\275U\254<\275\311\236\254<\030\320\206;@\036\004=i!\026<\220\216\013=\\\"\033=]\002(\275\037\374\000=\304wU;Mv\003\275u:\332\274\211\220\367\274U\334\030\275\341n\034=\330\261.=\216\263\330\274Zw+=\233\272:<\"\360\014\275T\000\347\274N\330L<\326\004\344\274\377\322\271<\375t\213\274\352#\354\274L+\006=\227\001\241\273\t\323\221\274\265\030\227;\033\007\314\274\235\242\221<\266\377\350<!Ab<\317C\226\274\027\211\037\274&\320\033=\356\035 \274\262@O=,\351\322\2749\202A=\030H\036=\370\364E\275\316\335\022=\030\216m< \2402=5G\034\2756\262\026<\213\215\005=K\333\201\274KaF=\2605W\275P\347\311\274L\345\177\274\323#\335\274(\336C\274Y\301\322\274;\235.=\220\031\252<H\277\347\274\351\353\033\275\035\'\235;\200\374#\275\017\341\221\273\004<\222\271\206&H\275\213\021^<\327\202\000<\343DO<\024\302\007\275\237\274\344;\266\370U\274\033)\371;\361\274E<\201\260\\<*\306(\275+6\324\273\217\245\203\273/\366>\275\246KN\274\"PF<\3059L\273\330!,\275\3072\214\274Q\377\206<3=\274\274\332\245\324\274G\3543\273n\217\036=N\255\220<\344HV=h\357\341<E\033 <S\312i\274\352tu<:\374/;\305\203+=G\021\020=\027\341?<\2166\344\274Rm\031=\305\3743=\271\345\247;\332\227/=X\251\030\275\223\260i<\362]d\274\364\254\310<\355\236\207\274\262\025\361\274\326,\221\274\312x\316<\321T\'\275\204y%\273\322\\b\274b\243\227<(\3644=;\274\330;\227\177\315\274\177\205\257<5y\256<\376,\240<\365X\037\275{\321\000\274\322D\357\274Px\225<\231j\350<\032\343\037<O\223_<gR\307<c\216\035\275Io\021=-\371\221;\013\364\336\274C\0164=\024J\303\274\277\242\341<D\344\302\274\304}\347\273SR\200\273\346\007X=\002\323\203\273\264k\276<\300\030a\273N\367\214\273f\336\311\274\007hB<\300\377\363<\220\317-\275\364\\P\274\004\263\355<i\275\023\275\036\377\205<P\277(\275Y\276\017\275\325\245\212\273>\335\324\274\265\003P\275\356E\313<\273-\006=\276w&=\264\301\024<i\306D=\272\234\217\274\236\222\007\275\030\320?\272C\016A=\241\316\244;!\231w<\200\266+\275\306H\220\274]w\026\275\031A\036\274\363.&=u9\236\274!\3100=\275\342S\275P\351o\274\256\362\207;\"\326/\275\3720z9 \305H=\347\221\007<\030\277O\275\205\010G\274\376\005&\275\272Zn\274\033\377.=\333\377\363<?DR\275+\017\340;\376\273=\274\371\251\370<\tf\363\274\235\270#\273?\0226=X;F=\244\305\344\274G\274(=.<\270\274\251f\215\274\256O\251\274\r\3068=\312]x<\225\215\013\275\342u\037\275P\215T\275\252f[\274%*\027=/\276\257<\22621=9\2764\275*\335\262\2728\323)\275S\232 =\305_\002\274\244\274\362<O\032\230\274\265\3542\275E3\177<\256\001J\274\0278\023\274]e\214<B\2232<\310\252\010<&\212\r=8\346S\275\272F\007=\226\000\307<r\222\022=?.\023\274\263yo<\330\025\266\273x\266\254\273\315<\'=\310\326K\275\361\262\204\274\321\266C\275\022\014W:\016m\241<z\243h;\0226\217;\272h\223<y\303\\\274\220+?=\312\266H=`\270\365<\324\020F\275\205{E\274\300\301U\274\237\253\307;\233\364\004<rO\320\274\201QG\275Y\274,=\305fT\275\024\231D=\234.3=v*!=Z\347V\275\371\304H=\243\tJ=\364\244p<d\345>\275\263K\034\273\t\027\370<\270\250/=C\231\370\274\nCs\273\024\270~:\327\304\342;>\311\014\272o\031\327<\372\252\016<\3479H<[\2042=\342\3204=+\345\203;\314Z\032\275o\336?=\302gP=\370wS=\253\024\302<\267\325\'\275\204\376\020\274\314\004\361<\222\216\031\275\216\274\352\2745\356c\271V\346\261\274\347\311\000\275\006\262)\275mY \275\353d\224:\200<9\274\005wJ\275\233\277\321\273Kq\303\271\017\312,;\201\377\206\273\026\250\002=\007\356?<\002\244\240<=\213u\274\211\233y\270\006\214C;|G!\273\r\2622\275\035\257\214\274\265\300\000==J\035=8\360\206<d\210C=\313QC\274\241\352:=\000\023\016\274\304\3153\275\327\2335\275r\335\\\274\225p\374<&\353\367\273*\2525\275k<\233<\324\306\232\274\001\352O=7\367D<\005I%\273\2066B<\277\307\200<\361\360]<kK\030<t\337B\275V\2021\274\217\223\2478\243\251\022\275^\366I=\355\027\265<RI\230<\361\360\356\274\300\0147<\231\000\335\274\200\263\254<)\306K\275\024~\010;\332\361\316\274J\025I=zO#\273\336\306\306\274\253\203\2049&_\310\273\r*\034;g\243I\275\372\\\003\275\376\224\\<\306\"2\274\307J\030\275\306\335-=m\331&\275\025A\037=q\246x<`#\254<\360\256\367\274k\002\201;\301\350\214<c\333\245\273@(:=\231\272\022\275\360\253-\274\251\372\313\274\342\210J=\021\316\344\274+w2\274\024\004=\275\265\\,=T\331\364\274J\204,\275\353\223#\273\322\3054<\354\342\231\273|\370\337<\361\000\300\273\2508\341<\265\310(;A\304\203;\356FR\274\317Z\325\274~R\023\275\004\023\024\274T\346G\275\364,M\275}G\345\274\257\202Q\274?\037\346<\305ky<\376\366\264\274.[\310<\r\340\034\274BX\277\274\323Dl\274\'\321\266\274\275\006V=\362o\001=\337\345\232;\217qD\275\272\337+=\356\2509=\253\032,\273\366a==zQR\274B\0136\275\201\007\303;\362\007\002=\273\203&=dQ\'\275\010\0272\275\362r\364<\037\022\006=\253\360-=\332\332\332;\013\2541=\352\255\227\274K49=\347\301\272\274\004\244\010\274\330\001.\275n\320+<\231\213\371\274\326\313;\275v\206\036\274]\250\031\275\347{!=e\243\367<\331\211,=\224#\007\275\356?G\275\001\343\254\274\017\007n<P\377\'<\365\216\350<\326\312\245<Eu@;Gn\036\275XH(\274\372\2674\275\022Y\255;\303\317\376\274\207Z\035\273hH\021<\224jV\275\3447\255;\\\340s;\020b\354:\230\213\031\274b\305J=\360\271\206<\251\006 \2750|\312\273&\262$\275\200H\354<\036\236C=L\301\250<\376x\226\273\312\305\013<&\363\267\274\026\3576=\257]\202<\005$Q\275\362l\371<B\370V\275oa-\275\177xC=<sR\275\274\216\014=^>\363\274\276\257N;\314\307k;k\365N<\344-\355<\321j\354;\375\257\225<\232o\326<\207d;=\313\3577\275\261N\341<\350\0357\275\033\321\2729\345\337\264\274V\363\036=*\3076=\375\250T\275\213;\333<\031\017U:\233\037\255;\373\324\n=\366\355\327\273\r\3412\273+\321>\275\035C\200\272a\024\177\274\314\365\303\274D\365P\275\361\341\361<\253\306\270<Q\244\252\2742\262S\275\nS\365<lu\031=\017\270\217<\331c\325\274\367T\341<\3418h\273\373gq<s\370O<\370K\313\274P\345\373\274\025?%\275-J\337<\310mS\275\246\343/\274\251\365Q\274\352\3704\275\306+\217:\353\357\332<$\2672\275\337\204\032\274eW\320\274\360&\200<`\0268=8\231\t=\010,\315\274sF0=\367\211\252\274\264\301\246\274\256_D<O\242\257\274oN\331\274\325&\005<\255\344\013=(yI<b\225\326<|RR\275h\365*=Z\350\265;\233\334A\275H\266\033=\300\271t\274\347\340\021\275\257\204V\275\367z\271<\022\354\272\274U.\035=t\017U\275\322y\340<\354kb<\362(@\275\215%\003\274\320w\367\274\002\303\002=!wE\275a#\224\274\326?2=~!\020=\234m\270<\365r\343<\306\023B=w+\206<\255\3053=\224m\365\274\206\325\033\275\t\016P=\256\035\033\275\363\314\214\274i\330V\274\003cp;\205\221\311\274\256\203J<)5H=X:$=\322X\316\274\336\317\347\274\310\331+=\367\007^\274\343I}<\210k\250\274of\202\274p\210\214\274\311\307@\275\022e\304<\343\264\035=\017|b\2748\014\376\274\271vr\273k\263Q\275&\351\224;\234\273\013\275\003+J\275\000\312\203<\215\212S\275\354\2724=\224\023\025\274zm\322\273\327\247S<\374\013\344\274\234\336@\275\375%F\275\322\226\010\275\265\022!<\306\222\206\274\361\336%\274\372\306\017=\315\3743\274\rF\357<\"#\032<:B[\274\310j\026\275\206nW\275x\027-\275[\215*=|\255\262<\317K \272c\004R\274\033\342\007<\371-\353<o\240\206<\024&\025=if\321\273@a(\275\254\220\007\275\325O\017=\034\027\303<\363\234\004\275\373\214J\275\246R\340;}!K\274\303\245\037=\212\024\323\273\277\034,=\270*V=\255\347\024\275V\331V\274U\315\t=\0001Q=_\244\305\274k!\232\274\034\0178=\240\323\013=Y.\375\274P\221A\275\267\"\270;\035-X\275\030 \022\274BK\262:\200J=\275 \231v\274:\345\343\274y\226\230\274\223\016\204\274\227\321\031<\341\320\024=9\352\002=\242\002\031=\264\256\243\272\3120\027\274\013\035\000\275Ws\260\273\231G\'=/\344\007<\277\274\316\274\250\365\340\274\327\332\206<p\336%\275w\025\26388c\342<g\251\373\273\253\317\013=\263E-\275\325\231\177\274\235\270\005\275\324\"\034\274\001\273\252\273$\002}<\251\311B<\024\360\026<I\261\237\274|\025-;|UK\275r\020@=hW\031\274\202\032\273<C\373\215<\256\214\317\274)\227\025=\322\370(=\301/+;\\&@\275\234T\356<\0014X\275\240\037\006\275S\2222=L\264G\275*\235M=\243ye\274\346V\331\274u\347.\274y\303(\275U\300\235;\365\256+=\203\207D=\265\315\361<\031F*=4>K\275\033\024\t\275X\006I=\366z)<\350\007V=\366\310\277\272\257\315#=\000\261!\275\242Dp\274\017\'C=}eT\275\377\2675\2759\250\016=\016\327\327\274\353\356\231;B\363-=\002\237\331<\302[\335<\216\304\370\2744\304`\274\342\313<=\262\027\000=5\264\'<]@\035=\000\307\207;\342gK=\272\313g<\\c\t\275\352\347\024\274\223\357\325\273]\023\000\275\326\362\002<\350\315\314<\241\235\357\274\346G\277<\022[K<\2138Q\275\'N\003\274?\376\314\2746]*\275\233\3244\274G\001\261\274C6g<y.\315<\177k\200\274K\312G\275\251\266*=\266\202I=n`\347;\306L9=Q\333\006=\244Ko\274\261\361\207\274\310\034+\275\'e\005\275\345\372\017=\333\007I=\273;)\275.\233$=\004\344\341\274\321\361A:\026\030<=\311\341\024=\255\3036\275\221\224\021\274\016=G\275\372\312\235\273\003u\370\274#\346\336<\033\312c<\253\245(\275\325\320\206<\220\nK\2759\373{<vO\346:V#\225<\004\355\024\275\302\251E=\034*);zu\032\275F\347n<]`\006\275N\3408=Jv\363\274\361$/\275\311\246E\275\257\010>\2752\331:=O\271\345<\354\313\003\275=\231b\274\217\240 \275\341\260\243\274~\365\030=\323\265\020<\204q\n=\371X\036\275+oK=\002\270i\274\t:0\275\331\257\037=\357\200\016<\007\332P;\006\3444=\r\226\204<nc\034=\314\n\205<W\255\224\273\3645\025=\316\307:\275\261\t+\274\223\016\270\274\335&7=\227\255+\275o\3076\275\227p\201\272I>\210\273]\373\372;\014\375\000=y\016#\275\220m4\275\267~\305\274\tQ\360\274t\376+\274\t\036|<\246\342\200\274]vk<\312!i<a\364\307<Ta\300\274\004\336\033=\005\326@\275m\376\220<\002Qk\273\363y+=\256\367\353<\274T\270<\217\220\211\274\272*\211\274y\212A\275f\365\014=w\215P<\317d\254<(A3\272\020,~<\000\336W=\335c\266\274\254s\346<\315Q\373:\262\266\250\274\002\3347=\302]\013=)ML<\275\241\354<.\017\004=\251X\002\275\233\303\370\274\216\334J=\330OP\275\362I\260\273\2218\021<\233\217\222\274G\314#\275\367\303\337<\346\267\202\274\034J<\275\177\342D=\310--\275\207\340R\275l\247\375\274:\336F=\006\367\242\274^\254H=\264\374Q=\242\2340<%9\342<\025-\347\274\007\222Y\274(=S<\250?\016=\n2#=/\352\023\275\021\260\337\274\005\222\001=9\\;\275\301\376\263\274\343\360\000\275\2761,=\024\230\022<\23084\274c\257#\275\252T?=\361p\264\274\\\372\250<6fF<\316\250C\274\000\254/\275\232\222q<\037\211\373\274\262\\\"\275R\301\037=t$\202<\267\025\027\275\033_T\275\224\3036\275^\354\252\274\302\341\030=\315,7\275\036\t\320<q\323G\275\234\215\325\274\007\246[9\032K\216<\301\230\t=#\345\350\274\017H\303<\275a\334\274j\024\373<\020\323\251\274e\376\022;#\372\t\274\377@=\275AW\250\273s* \275R\274o\274M\0250=\367Yq<\252U8<\343\371\031\275%#\226<\212\205#=+\3527\275\254\200\037\275\215U\260<\261+\234\274^\031\003\275\304\316j\274\202y)=\252L?\275\323\3433\275\265\177\324\274t\253\345\274\261\250\263;\362\331\305;\202\302\037=a\002\344\274\0243\347\273\252\017\033=\344\327F\274\222\240Z\274\367\221\305\274-\222)\275\254\017\232<R\214\017=\353T\361\273\356\2463\275\037(\202\274\330\031\336\274\024Eb<@\315\001\275s\245\022=\307G\212;s\224;\274\032*\t<\225%\025\275\333\251N\2751\204\\\274\234\034\340\274l\013\203\274<j\177<h\353\346\273\265J\217\274,ME\274\374\327D;\t\262\246;\277\2766;\256\n\223<\320)T\275|^G\275w(\221\274\206\301\013<\267c\207\274a\220\"\274\224\237N\275\233z\316<\320\021\317;\302\317\335;B\273\035=\261\031b\274=\235=\273P\346\236;C1m<l\274\367\274\304) <\020\304\265\273\254\030\370\274v\343\027\275u\230S=\366\333m\273\'M\267\272\205\312\026\274?h\222<^\356\230<\004\237\t=\253\225\353\274y\\\005\275\022\361A\274\226\2203\275&\340.=\310\237\367\274\231g-\274\030\2014=W\221e<\027\210@=OO*=\375\227\033="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2140
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2140
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
