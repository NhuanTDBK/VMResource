node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2150
          }
        }
        tensor_content: "\303`U\275\231\260w\272\023p\006<\217`r\274\301\241\301\274\031)\366:+3\271\273<5J\275\347\320\000=X^T\275\237\277\350\274\0322\203<Vj)=\323t\211\274u\361F=)\000\311\274\001\333\331<\026-\215;\220\322\024\275\\\361\266\274c\372\316<\031\355>=\231W\321;\251\201\256<\324\257\032<\033@B=\221\0253=uI\027\275^\014`<\020\242\363<\2512\027\275\3730R\275\375E;\275\377\007N:j\212\037<\254\3738\275\021\"\327<\263\372K==\0267=I#\'<\326\365+\275M\242)\275ko\206<a\241U=l\003L\274\345\202\216\273\t]\021\275{\245h;\371\\2\275)\323\224\2746\257&=\237s\341<\244\254j<u[?=\206t:=\357\274\002\275\007\340\325\272+\010\323;\373\253\254\274\225y\276<\215\346\303:\310\260\265;\003\314\013=\335$\250<\326K\025;\020\243\331<\212\353\272<a\034\346\274\232\234*\275>\265\033\275\350%\307<\227Q\364<o\030F\275\305\336\253<aB\007=\342\273\006=\342s+\275\276\213P\275\362^?\275w\2322\275#\304X;\007\303S;\361V5\275c\004\001\271\366\224B=\004?\022\275\212\340Z<O\304X\274\376{\243\274\265\313\010\275\t\355\260\274\r:\035=s\006\004<l\365\254\274\005h6\273]6\000=\230\262.\275na\000=\016\003\270<\321U3=\354\014\233\274|\227\364\273\372v/\275\267\255\033<\177\264T;q>]\274M\033\373<\305b\000=\214}\350<\222\373\021=\\\353\236<=3\375\274\003\254\020\275\270\251H=\034\365\023\273\024h\013\275\207\376-\275#\247@\275f8J\275[\310==2\3420=\225R\205<\241!\224<\326\rL\275xv\301\274\227HW\273!Mt\274\264\361K\275st\301\274\025\313\345:X\177\006=\335{\262<&\207\243<\332L\021=g\302\004=x)\005\274\n\253m\274\270\241\333<\007\007@\275\022\022\360<\3772t\274=\342\'\274u\240\365<\366\033/<\001\322!\275u\212\010\275\350\234\315<X\206\023=\253,G\273V\326\265<\227\367O=n\310S<:\354\2139o\253\'\275\013D\324<ns\335<*\237Y<#\255V=\254S\255;\340\213\343<\224\000T=\320\275\222\274\320<\303<\374\256$=\363\204\313<z\316\035\275u\252L\275\323(\"\275B\036\030\275\302\227\234<f\263\323<\337\352P=\211\316\365\274,D\025\275*\2729\275\016\031\303\274Z\211.=+\364\346;\333n\342\273\211\262L\273\376(\005=`\356^<j\253><\223\r.=\357u\371\274\213z\014\275\252>#\275fe*\275\217\350\205\274\353\233\266<\344\027\020\275\262K,=_\323\321<\345\230\356\273\211\250\n=e\3205\275{\3774=a\2079\275\334\010A\275\"\377\207<&\2054\275!\206!\272\205\3172\274\332d\262\273\272}\034\275UP+<\276&?\275\271}\003;\006\321\267\274*\031\'\274\217\007h\274\022X\023=\003\332\"=\334\345\221<|D\203\273\344\3304<1\367\333\2736\347\013\275\361#\214\272\253\247a\274pq\305\274L\266&=\334!$\275\324=\3069^\351\232\274\027b\260<\004J\343<\315\246d\274\"\r\351:W\307J=\351\357\005=N\2316=\320\202W=\351\227\264\274\301\322P=\357\323>\274\010(I\274o\352.=C\252\034=\376\361)\275\033\236E<\321\365N<=\202L=ZD\020=\364\226\210<\353a@<\374)\001=Lk\'\275\333z`\272\031\330/=\203E\231<\257:!\275@.\201;\2758\276\274H\201\256<w$K\275t\343U\275\263\0211=\215@\026=}\344\000<9\213G\272\377\212t\274K\257\370<\245\212\244<+\317\301\274\036\375\022\275L #=\361j$=_\217\007=\026\310\356\274b\232\004=<\002$=d\240\026=/\0215\275\3451\227\274\266\027\212<&P\346\274\013\032l;\366\317\030\274\302\256?\275}Y\005\2758\320\376\274\301\255\014\275\020\361\'\272\364\364C=~\326\316;\232J:=\024\000\007\275\020\201\372\274\334B\356<^3G\275I(\010\275\241kK=\311\237P=\236M\310<\272\301\315\274\357\310\241;\267s\272\274p<\'<8\017\266<\263\254\001\274\312~J;\354\347/\275\331\320\002=9\374\000=\243\342H\275\266iD=\010\260\300\273\245\203\316<Y\252\300<fm\241<\335\303\346\274\026:)\275\317\337\346\274\265\177\360\274\013\"\246<[ L=\266-\t=GHW\275\375\326\332\273l\2427=N\226\005=\247\363\326;\265\351\206<\3260\177\274m\006\215\273E|\025\275m\337\373\274\n\256\251<\321IO=\340\353\017\275\366\246C=\360\232T=\305\366\016\275}\233\017\275D\177C=\363\026\314;\354\266\031=\367\000\200<\331\275\345\274m\3616=DyF<P\220\205;.\340%=\rU\236<Y&\t\275K\0304\272y\373J\275D\002N\274\226%\306<\3308\224<+he\274\007=R=qzK\275Wf{<\327\202\023\2757\312\034=E?\001=\037\177\274\274q\024\332\274\202s\335<H\276i<\232\246\265\274\210\301\014<\235\324(\275?C\031=0\027:=%\367Z;R\016\274<&\000;\275\316W\r=\202\254S=\361\241\033=\n9\354\274$\324\003\275dg\020\275B,$\275\242\271\370<\"3\222\272I\221\033=\277;!=%\316x<#\263\r=\253\323\361<M\006\007=\030]k\274{\236\322\273\256\253\024<\373\3772\275\263\326$=y\300\207\274\034\301\267<\364sr;(U\022=\204\253\035<)\270&\275\313\265B=\005bi<\352\031M\275\254\337\372\274Gk\337;\037\003\'<\226\3523=\234\333l<\316^6\275\236\241\027\275\333\262\333\274t\370&=\020U\013=\335\226==\347\325\275<\3568\323\273\264\324\365<\307\375\255<{\257\007\275\202\213\212<\325x7=h\326+\275AxM<`UW=\344\365 =\247\335\031\2759\017M\275\001\327~\274\304j\254\274\353\335\241\273\217I\236\274\353\t\r\275v\222i9\364\233U\274W\nN\275\237Lo<\324\2141;0\213v\274\252P\220<\311\353(\274\314\314\242\272[\'K\273\373\213\'=\354#6=U\024\225\273\000[\023\275\330\315M=\371\351D\275\3646u<\177\224\006\275\257\024)\275j\0239:\374\332\016\275W\315\031\274X\005J:\300W\244\272yX\251\271\323\233\027\273\306?\343\274E\026/=\306\260\016\275\301\300U\274\224EM<d\023\313\273A\3613=\301\201$\275\263\304\345<1\213\253;\200\202==\371\004\311\274 \2144<\255b\271<\314\227\352;\221\035Y<$CP<g\346%\274B\000^<\220\251G<\200\2534=\205\271\212\274Q\331\010<\244\017f;\001x\026\275v^\277<\201KP<\310\367\221<\267?&\273l\201~<M\211\342<\344\000\206\274\326\220\032=\0073\252:\342+J=/{\277<\376\373\034=\377\001~<>{?=\032\367\336\274\353\304\005=u#E=\2506\002=\262 H=q\351\033=;\344\311:F\211\311\274\033\027==\224tS\275q@=\275O K\275\267\373\320;\026\2747\275=4F<\313\025\327\274\233\312&\275v\353\006:84\233<\216\201\200<\230\316\033\2751\360\020<\240\307\345<\204\3212=\0032Q=Jf\003=\376\316f<\351D\220<X\216\340\274\233If<\306,\347\273\024ZI=\032\303:\275\360$\352<3\327\030\275\371\302\200<c\216\n\275\231\037\004=\250\370\274<\335\006\021=\320\001\007=\261\211\005\274\365p\333<\'\357\235<\324BU\2734\2460;\260\345\013=h\323<\274\202j\322\274b\252\033=\240\\\025=\312`j;j\301\360\274\260\235A<\306\307\030<\3326P=:\227\350:\222\337\260\273\"\211/=\021^M\275t]_;\200\253\021=0.\336\274>\250\"\275J~\020;\242s[\274~ E\274\335\237\030\274\255%}<y\247\252\274]\213V\273\235\323\027=\010m\306\274Bx\014\275\216\017\311;f\255\321<\232\276\027\275Z\3044=]\0327\275\313_\337<\206\253\022\275\220\314\316:\204Z0\275\'&\212\274\205\016\251<s\001\330;`\3373\275\272&\353\2748\000\237<\257&\007\275d\234T=\240)\226\271e\315p;\2266\336<\276j\311<5\224\257\274\037N\364;\311!`\273\315\020\373\274\001k8=\361\371\201\274dmR\275C\017\312<\341\252\r\273\226\216\031\274\254e-\275^Y\224\272\226.\037\273\340C\334;\275H\251\273j\337\344;\345\311\260\274\016c\006\275\260\231\277\274\211]@=\272\246k\273\361YX<\260\375\263<\tQD:\242\334&\275\377\2677=\274D\263\274\025\316\006\275\307\026\021\275\345<\004=\236\202\027\275sE\331\274\375\206<=ZH\034=\335\305>\275\341{\030=1\254q\274\252\326\342\274\307\242\017\275\242a5\275\245\021#=u\030\t\2754\340\366<\257\262\001\275\270P\336<\375\304\234\272r\0268=\372\340\030\275h\214\256\274\250c\003=\356dM\274\322\035\"\273{#\026=\330?\025\274u\314\t;\337\260P=\276\034\342\274AS\376\274\330jK\275)D\026\275wk\031\274{\032\025\2722\036\000=^\367\034\27438M\275k\2309\274\253\277\272<\014W5=>\243\002=HcK:t\005\360<\017e\000\274!\025U\275CQ5=\020O7=\305\010H=f\375B\275\n\035U=\325B\004\275\356(\033=?\354\005\275&\216\030\275\360\326\310<\350\255\302;;\226\001=\206\224\033\273\376\023\354\274D\212s</\315\276\273\262g(\274p9N\274\233\3068=\311Wc;9_\017\274w\357\024\275\232\032\n\275%\225F\274\016.+\275\366\004\243<\215o<=\034UI\275}\207$\275\346\205\300;\272\301\273;\024%\"=\205a\241<\366\213S\275\000\2246=!\n@\275\212~\343\274\2455\251<\210\202W=\224\3150\274\362^\013\274K2\332<OKK\274H?\314\274\334e.=\276.z\274M\315K\275\023\303G=\2342\034\272\230\211@=\355Z\346<\262\305\352;1\\\256\274\335\0341\275\277{[\273\210]J=3\037\343<\356\352\340<\263[\t\274\362n\300\274]5\300<r\256>\275\023\377\312\274\222n \274\306\320<=\206M\250<n.\345<\373\251\360\272\324\3001<m\241\021=s\350\320<\354\340A=\2556\247<\306*,\274\334\276\3629y\300\373;\236,\016=\357\331?=\227\227\214<\263M\313\274t\221\214<\307\037\032\275\242\261\273\273>\2455\274\0256\325\274\0332W\275\301p\371\274\177\332\250;\202\035\004=\3523\177<\017\2318=i\010L=Kk\034<$\352W\273\tnQ\274\343\240\254;\32614\275\300\334K\275\340\221E=\3632\323\274\341\210\036\275\316FN\274%\3375={D%\275s\005&\275\366U\315\2741\357\022=2\350S\274L\256\237<E\2541=a\032\346\273W\227\204\274\002\000;\275\250\003\375\274lg.=\253%\330<\267\343\004\274\2723\272\272g\213\205<\314\n\351;(\201\261\274T\2134=\335\tQ=\204\275w<\353\177\352<\027\246\216<R\214\304\272\236\330x<\247\212\212\274\013\351>9\231Kt\273&.4\274\245\246\233\274\274\304G=&\273\305<\362\3456\274>\300\333\2741k\223<v\031:\274\267\321\314<\245\2543\275(3\264<z\352\347<\360C\027\274\251{\"=@\353D\275\013{H\275\322\335\247<\034S\001\272B\231E\275DI\316\274y\267\t<o\031\'\275\377\252J;\336\343Q\2752\331*\275C\030;\275n\"H=\224\253\257<\037\222\225<e>K\275]t\235:d\245<=vkJ\275t\240\023=\305R,=\203\342I<\001ND=1\224\022=\236[#=,\342>\275i\205C=\203\007#\274Y^\256\274\316\344-<@\207D=\014\353W=L/4=\222\251\026\275\310\341\034\275\254\201\317</w\301:\237\316E\275]s,\275\246\'-<\365_\253<\334\243V=\234\010.\274\205\254\023=\370\325o\27439^\274G23=y\314\000=\320P\311\274\202\031\203<tog<`0\022<D\305\276<\032\n\021=\021et\274\235\353\333\274.\350\016\274\363u\t<\254\t<\275puo9\212A!\275\301\374\270<\231\255G\275\025\355/\275l\340\357<\010\3068=\232\216I=7\313L=\213\2242\275\367\001D<?\350\346\274Yy=\275\213E\353;\270F\244\274\354\030M=\351\330T<[\277\025=\333:-\275\360\'\355<\334\014\243\274\325:\353\274\037\245J<\276!\343\273>m\205<\2524\n<?p3=;\252N\274\265\236+=\311\277\007\275\324\002\375<\245(=<\304\002\222<;\235\277\273\277\035\272<\254H\332\274\207\312\003\2750\236\007<\262@\370<\275\237\331;\246\262\325;\227\255\244\274\350ja\274\374\356\365\274\\\275\351<a]\322;a\334\255<\317\231\207<}\t4=\302\274\002=\240)\311<E\3777<\226\004-=\3635\245\274\031Z\304<\035\002\211<\243\\1=4W;=l\360I=\233\370C=\3319A=\310\2235=\273,\n=$N\205<\366\270\301<\357\256\026\275\307\270\325\274\353\2714\275\222#F\275\rL.=_\\M=e\235,=\373&\360\273\253\274\n\275\214\275R=\"\326\007\275\031z4\275\347\335\262<zU\262<\3053\316<\221%n<9Y(=\244\205\277<\2357(\275\215dS\275\256X\266\274\007\216\357<R\350\324<\226I\024\275\206\360;\275\t\215I\274\r\203\003\272>\303\204:\277$d\273\266\021\241\274\352\014A=>C\345\274\354P8\275\345\201\030=\352\034\306<\006\346$=\2634\267\274\201\225<=\234B\247\271na\3619\240\352\237\274\020w\001=\204}\277<\323\321,=)\214\347\274\2055E\275U\221\336\274\317B?=\263\303\322\274]e\232<\315\301\010\275t\352L\273w\303\036=\364*\020=\321_H\2751\355\262<\\\346[<\313\030\272<\350\244\016=\331 0=\037\037\251\274\256\272\200\274\2502\021=\250f\205<\376x>=7\224B=~\350\266;\023\365\330<\252\021:\275\251;\271<\240yO\275\353\022{<2\024\240\27491\233\2740 \230\274\307\226\025=\376w\251\274\001\366\371\273\353\2379\275f\017\223\2745\202?=\254\3515\275M\215\276\273\306\2579=4\311\240;\001\333a<\003\254T=\371\374 \274\302\373H=<\307\0179\311\315\276<\331\0147\275\336\n\370\274&\333\250\274;\3305\275\360\006\023<\306\006J=\261\207F=\001#\035=\247~Y\273y\022\020= \247{\274\035\010#\275V+H\275TL\r<\333-#=\223^h<\347\205!\275 \302\336:\252\357H=\021\323\324\274\337\276y\274\341\274\334<\265\245@=\033\247&=\376(\031=V0\027=\273\005\340<\">/=T\227D=i/U\275B\314\210< \340\035\2753\370!=\232\260\005=C\277\013=\236\006\215\274\347h-\275\254:\255:\354:\370\274\202G\024\275\316i\215<\t\013W\275\336\334\253<4\017\253\274\337\204\371<He\017=\336\333\230<\013\037.\274B\213\037\275{\315\023=@\342\3409\2526\022\275\231&\332\274+\307\002\275\243u\202\274)UQ=\227M \275\233\263T=W\275.<\023\r\r\275\346\364\373\274\000\034:<\304\353\212\274\313\362?\275H\307c\274|\314\020<X\034\217\2727\324\n=>\302\337<h$A\274WDE=\024W\n<\025\307\331<qIA\273\002\261\030=Fu,\274\346\241\337<\2709\252\274EL\260\274\305\260\334\274g\312\';a\3056\275V\232\215\274\246@\312<\242\3463\274\363o\036=SlG=\370\t\254\274\337jE\274~#\204\274\337\300\374<\204s\037=~\206\200\274\246\260\014=A\205\036\275\204S\303\274\247m~\273\366\235\002=R\347\241<\"\205T=\324\303q<\370\310\003\275\303m\373<\035M\314:;\017\301\274r\300\234\274\260\222\301;\343\347j<\243XR=09\327;\237\235F\275\n\370\270<\007| =)\273~<\313z\014\275\235\\\007\275\023\270_\274/\001\033=\254\037\031=\235=L=0u\002=\216\324$<\305\3246=\352\2505\275`\231\355<\347\255\311;\">:\275\261\321\315\273e\263\014<\315\330?\275\275?\342:$\332\031=_`x\274\313]&=\264\267\351\274\255\326f<\371\347B\275s\333\007\275\336\257\272\274\0171R<v\320\341<\267\346\024=\244\314$\274.\3571=\370\364|\274I,\346\274\322\3251\274\214\213.=7\252\234\273\355\316\001=\351\'\363\274\230 \252\273\024-M\274\334=\300\273\357\253\211\274nB\302\273,l\322\274j\354t<8z\260\274\027\020\002\275\343\213\004=\346\343\251<+\264u\274\2516\357<\211WJ=\365|\030<q\250\"=\017\333{\273\206\021\336;C\255~<\021j<=\342\0130<U\247\304<\344:\266\274n\303\370;(0\022\275\307\253\260<\275\001=\275\342\363\353\2748\2247=\221\004}\274Z\335\223<\334\276#\275\325\010\016\275\361$\031=\270\355\026=9\032s;\206\032G\275\177\317\245\274k\031\017=\255\304F<$\236\027=\225r4\275<\275\317<\344\n\"\274\305c&<\351\t\020=\362\261G\275de\'\275(\375g\274\321w8\2750\3508\275\026\216T\275Q\017\"\275/\225\244:\221\341/\275\252\244L\274X\177\241\274<\335\342\272\345j\023\275V\220\016=\255\005\030=\t\0324\275\305\206\242<\016\204\202;\373\316W=\024\373\013=\366\306\003<\275\236\236<:\372\005=\350\212#\275\\\255I=\337{\020\275\252\354\376<\354\013\032=\375=\027\275\356j\025\275\357\252\343\272\234\030\001\274\373\240 \275H\357+<N.>=\367^1<\235\363\352<\202\r\240\274\020\317\361<\361\370\331<\217oP\275\360\024\351<v\244\013\275\022\215&\275\000\355\030\273\253\273\026=\363\376\"\275\275\2675\275*\010\022=\250\372\020<\362\177$;\005\375\t=\374\241\377<\237\307\353;\2301\267\274\364\365\317\274\005\301J\275yCC=6\270-=g\004\303\274\036\254:\273\027\335^<\014$\024\275\363\232H<\306\313\234;\207\"\037<\330\355 \275#\177;=\034M\215\274\3169\000=|A*=P\351\036\275n\360\367\274\026P\\<\320Jp<\327\3631\274$\343\033=\252\213\370<\016E!\275\241\217\026\275\357`\274<g\371\320<$\366%=\374\244\025<\000]\311<\000\243T\275\311Y\320\274\017\034<\275\033\373B=\234\270>\275i\266%\275\000f\020=\335\375\246\273\020\177\035=\032\301C\274\233_7=\246E\006\275\365\325\003=\205\215\273\274i\200\225\272\002\014\264<f/A\275\244\316\001\274\002\334\332\274\003\307.=\277\022A\275O\310\235<t\362r<\275\3458\275\"\247-\274%\305t<\000\306j;\016\254p\274\275Y\300\273\252\337/=Ow&=\335A\304\273\030\036\024<\367\005\221<Hr\032<\363\342\241<@\224\356\274f\216\024\275\003\372\036=\t\365\005=\356\001\313\2744?J<^\343\225<\223\352\347\273\024\216:\274\220cN=[\005\003= \266@=\211\3647=\331\352A=l\263_<\236sj;\024\327\335<\312v\025\274cp\t\275 a\025\275\022w7\2754\271\033;kS\302\274WM\000\272\357L\311;\276e\325;\207\214\025=\333\315\031=\366\304n<\3740(\275\254\260M=\211CP=9`8\273\037c|\274\320\315\034\275b\3056;\'\0011\275\323\201D\275\352\230\332\274\234=\021\274\276\277I\275a\376E\274\240\341\267\274\014\310\024=\242\302U\275\\e.\2750\240\361<\345\360\003=b\265:=\014\342\002\275R\3263\275\374\354:\275\023&\253\274\003\\a<t\306,=\356\337\334<L\333\002\275\255I\360;\033>V\275\362@\337<n\232\362<q\236\005<Q\264\361<\365\001\346\274*\224\007=\230\231\031\272\2071A=\373\257<;\334!7\274?R\272;2\331\023<\214;\006=i\304\202<\314\014\035<\232e\264\274\325$!=\322\273\204\274\367Y\372\274C\265\002\275]|;=6\010\232<\236\354\014\275t\014\260<\025\237\032=\337\352U\275\345\360\016\275\2502\331\274\261\371\r\275\\\303\375\274,$/\275\251\324\030=-\370\225\274 \234\"=\232\n,\274\313)\016\275\346j>\275\3546N\274\033\272Q\274*\\K;u\220v\274\316\3538\275\257n\034=\n\273F\275\330\274`<\ng\363\273\266\326\014<\340\336\377:>p\250<\212\n\201\274\356\207\321<\307I(;\247\323\244:[\351\025<shG=\006Z\255\274\377\234;\275\373\305\001\275\233\211S\274>0\333\274\214DM=v\221\034=\244W\244\273\021D\245\274~-\360\274\223aD\275\000\327f\272J\267\"<)\245\200\274\376\211\037=\276\327G=*%0\275\035\231 \275\022\316F<d\323\'\273p8\252<\24215=\337\310\211<\316W\'=)\306\t=\225\342\302\273\033\006\311<\351=\024=;\230\203;\\\246\307\274\264`:\274\352_3;4\r;\275\222\177\t<#y\317;\226\236\025\275\2568[<\022HU\275\002\332\025\275BF\030=\370\341S\275\024\025\374\273X\035\226<\360\351\212\274\257\355T\274\234\003\230\274\357+\246;\274tV=\341\n\347\274d\362r:\204\326\260\274\030\021\201\274\'\234j<O\020\311\274f\327\277<\300\265\312\274#K\233<|\3663\274\353D\254<\177\006\320<ZD0=\2257\314\274\014\364\307<\306\r\250<\375\331\222<@\251\025=\236\233\237\274\3236\330\274\001\004v\273\n\335,\274\326\3778\275\267\013\207<\207\323\'\275Gz\217<\202\234\324<P\007\013\275\341\007C=\r\004\306\274X3\026\275\331\264\371\274\362\370,\275\233\304\311<\2268\222<\356T\300<\237cM=D\372)<\024\210\366\274!\224\265\274\216\324\375<\257\313\245\274\004\373+\275\200\354\034\275\277G\001\275d\2040\275\0048D=?p\231\274\334\316\031\274\034\227\233<\376\333-\275\267x3\275|+\216<V\206\267<\357\320A\273\207\250\310\274xX\324<\324BG=]0\006\275?\364U=g\276a\273\311\374\352<2\331\t\275Ee*\274\222?L=X\331{;\370\2440\275\362\216Y;=\260\313<\240\370\307;\233\302\322<ap\t\275D\325\227\272DP\001=\014\354a<$\201&=IHC=K\204\325\273\306\2763<`R\234<\021v[\274\242\202\235\274XX8=\334\t\"=_\320\006\275\320\020A\275\207\004\246;\362\017N\274\343.&=\375N0=AFJ=Up_\274\033\223\261\274\337\332\033\275\001l\037\274R\3310\274\250\002@\275NV\241\274\253\311\321\274l\244\024\275\246-$\275\274\312{<\275m\356;\256\327#=\274$\024=\017\216\224\273\207\027\340\274uC\215\274\216\210<\275a\245\371\274=*G\274\200\265\023\274\2455\244\274Z\0024=v\203\002=q\340(\275\366v\302<\260b\221<\235\020\353\274X\003\263\274E\317R\275\303\254K\275gJ\323\272v\267\2619b\204\346\272\356\207#\275]\374\355;\233B\032\274\274\232\262\274\"\237\377<\t\332&\274\342\177y\274\302\221\252\274\367\n\370\274\217D\271\274\353\336\003=\235h\003\275QC&\2756\264\344:\346a)\274\031\360Y\273\003\273\377\274\2378\266;y\367\r\274Ba\024=\250>?\275(m\004\275I\260\376\2744\316\003<\333l\202<\202\271R=\362\221M\275W\251\n=\257J\225<`\313\372\274\025\204p<17\027\275\212\202\"=\224\334F\275\371\353\253<\260&\357\273O\204\372:R\374\350\274U\326M\274\034\224Q=r\036H\275+\237V<\203\035\324<T\255v<\204\246\032\274\307+\036\275\234\327A\275\"\300\323<\023I\326<\2060\270;TO\t<\257\301\014=T\215\246<h\305Y<[4\234\274:\306\020=hu\356</|\240\274x_6\275\331S\"=f\206\257\274\003\026\254<\305U\262\274\346\016\336\274+NU\275k3P\275\233 \033=8\313C\274\007\314\371\274\001\256\346\274\345\n[;i\267F\274\261\276\336\273f\301#=/K\245:\230\004\035\274\261\316\241<1\216\203\274\025$N\275\303a\355;Y\010\030;\016\371L;\274\375X<\306`\257<+\343\220\274m\311\003=\375x\006=\364\3464\275\375\026\263<A\213\000\275Zd\233\274\016p\234<\273\025\332\274\200\267\226\274\264\032\031=\257\304\322<\305\206\272\274T\\\210:\256\r\206;\337\257I\274Y\352H\275L\006\267<\317}\216<\243(\231<kJ\260<\351~\216;h\034g\274\340y\346\274lX5=\374t\234<w\254\272<\222Qt\274\265F\303\272\203\001\023=\016\217J\274k\n\313\274\351]x<tQ\265;\215-?=p*\304<\217\364\"<\220*\311\273z;3=D\307\004=\004\377\010\275M\206-<\002ur<\205\004/\273\037S:\275|\363M\274(\322\031\275o\316\312\274:\252\016=(\020\021\275V\245]\273\325NH\275\213\0340\275\317\307\377\274E\377\244\274*i\215<={=\274\372\252\246<\234\217\r\275U\326\365<\350\231\303<\254;\027\274\363\031t\274\303b\215;\210&1\275s\323\230\273b\204\262<\017m\'=\'\216\237<z\376\005=\205*+\275F\"\017=\356\235\201\2723#\'=\361\213}\274\345\361\t\274J\325C\275N\254)\275V\025\333<\250\344\305\274\257\300F=\357\305D\275c/\r\275\307\314\256<\210\351\334<\350\010y<CL\027\275\213^\324\274\351\036\240\273\310\007\377\274\215\215\035\275\224\244\217<|\202R\275-\254*<\\\365@=\244\350r<:\305\"=\251\\5<\325:$=\027\2364\275d?4<\273\277\017=\327\260D=\005}\022=\351\300\031\275&\345\274\274\340\201+=}\275\235\274\':\353;u\214\371\274\177\370\3109b\237B\274\230\252-\275\003\302*<^\350\307<\250\311\000\275\311P\034=\023\2026<\357\223\264\274\375\017\303;\022\010\273\274\\\005|<\300\014\201\272\332\237\265<\014\"\355<p{\345\274\t66=\025\257\327\274@\253E\275\034\357\366;\217\203\243\272\002\r%\275\264\017\350\274x\035\322<=\247==\210m[\274\332\306%;]\010==lM\033=\357\376\220<\363g\257\274\374\370l\274\\\355\323<\321\335+\275s\361\332\274\267\254G\275\225\004_<\032\001\024=\224\346A=\225\305\232<[t<=\317\037(<\374\272\026\274h\031[<\025QH<U/!\275\333\355\006=i\203\311<J\247\016=\r\2108\274\301\201\321\273)\202\370\274\322\010\341\274\323\351\220<o\266\002\275\371\343\337\273m\022\247\274T\3673\272K\273\004\275\001(\313<\341u\314\274\262\321\351<\215\016W\275[\316\230\274Z\312\313\273;\2314\275\260\026\261\274\334L\301\274c\226d<1.\204<X,\323\272\024\2437\275\2628\222\274T\207\310\274Wa\274\274\356\003\007=yt\213\273\364\037\236;,\351\326\273\327\342:\275\303\343\025\275\027a{;\315\217Z\274\014\251\374:_\262\237<\345#N=o\254\n=\215\366\021=\320\334\364<\001\025\020\275\304(\014\2759\263*;i\207C=P\377\007\275\001\3357=\360\016&=\352\003f<\030\264D\274\324\000\230;\240\301\263;>\354\272<b(V<=\207\343<\202\210\313\274\251\213t\272\016h\035\275\'n\216\274<\322\001\275L\037>=3\212\271\274\215^@\274\221\035R=n\254F=\357y\345\274\357\225\224<\237HD\275\3515%\275z\364X\274&WQ=b,\210\274\035\376K\275\030]S<\217\240\242\274\212\301+=\033\345\203:\tdv\274\277\022?\274\2424\031\271u^\355<\216-\004\275\354\200\370<\034h\315<\326j\262\274\214\346C\274\244P\365<\356jL\275\315\3672=C\316\266<\030\2271<~6,\275g(@=\235&\001\275\307u6=\322\200==\271\265/\275\227Y\374\2745\037\n\273\242:\277<\371\'\037\275\221\363\365\274\025\231\225<0\364M=R,\375\274\225D\203\274\264\030\006=\311\345\326\274\233F\202<\374%\275<\355{\014\275\247\217\007=\357\244R\275e\354c<Ds+=\250J\252<\271-\030\275\314\212\003<4\250#=\240\252\305\272\306\351\243\273\365\274K\275#\362\213\274\035LE\275U\315d\273\021b\334;t\237\370\274>S\025=`\373\002\275R\324\211\274\356`9=\366\2108\275\316\272\246\272\337\223>\275\002\225\020<DF\272\273\235\223\334<\013\317\356\273\251\2626=\321\222\245\274v\344\363\274J\027/\275\373\032\275\274\235\263=\275=\241\202\273,\0340\275\322\024\305;.Q\374<n\007\265\274R\353P<\271\211\025\275\332>*=\\J<=\314\031\320\274\254fD\274=\225\214<8\2438=5\313E\275U`\260\274\2521\3159{\204\222</\206\302<!\r\336\274\022\213\234<6\241\367\273\322|\355<\322\020\230<$\022\325<V\321\230:\347\006\245<\330\r\253<%\200\255<\274\343\030\275\261\022N<\260[+\275\253d\201<R\355\000=\270\331\354;\333\204\346<\360F[<\336\251:=YJ\276\2749\010\031=\036\332\2229^5-=\235\2067=\327\305$=\211\364\315\274\307Q\000=ws\241<\255TL=\277CC\275\031\232\256<\251K\026\275\351=E=F\3079=`\220\200<Y\335\360\274\235\000O=\3116\275<\023\245\350<M\376\n=\245\250\325:D!)\2750\311\376<>\206T\275=\361\267<\357y4\275\373A7=\262\2051\274\275C\005;u\307z<n7\371\274\016\3334\273\332\201~<o\000\333;\360\350\313\274\216\205Q=\223k\n\275\241\204\200\274x\327m\274\256\232S=)J,\274G\241\244\274\322\214&\275\t\023\201\274\213}\234\274\nLQ=a\237\025\275\367(,=\255i@=^\333\360\2735e\226<\t\212\001\275\251\263-<\240\350\034;\3148\322\273\242\202\035<\202\023U\275*=\371<+4J<\034\307\320;\356\260\367<QC\036<(\263\010=\215>L=\237\002\234\274\317\315\014=\032KE=\277V\030\275\316\006?=\210\217\'<\343r\223\274\317&H\274h<\354\274\241x\341\274j\312\314<s\207M\2757\327<\275\315\301#=\022\2065=\237\371\355\274;\027\237\274\216<\262;N\025\330\273\210\337\025\274\311\360`<\'\014H\275\314e\220<\220\263V<\330\037!=u\313\252<D\262*=\3610m<\363b\016\275~\376T;<-\300\274\372\002\004\275C5Q\275\325]\314;\230C\2179\244\203U=\264e\n\273\371\277@\275\253\205\002\275\234\247d\274Q\002(=\375\221\361\274\220\250\330<_S9<\000M\014\275H\373\'=*\312\227\274\220\347\n\275\340\215(\274\336EI=\226\022u<\020=\007\275S\335.\275p\031$=(-\226<f\335T\274\300\330\t\275\270\356\256<\245\375\025<4\247\013\272Z\252(=\364\330\344\273\202\326\032=m\261\326<\377\375\274<\345\241T=\216F\034\275C\205\312\274N\022\025=\247\333P=\214M7:S#\320<\300=,\275/(\353\272\376\2543=JZ\257<\235~7\2757\343\354<(\264\206<\032\337,\275\214\370\032\275@\244\027\274L_\327<\334\201\233<_S\256<+\0173\275P\360\235<\326M\034\275\031\225N\275\301\271d;\035\n\342\273\355\250\n=\"\3253=\225If\274\2331\230;2\201\022=H\371\000\275\270pA<Uc\232<\204\270P=\304f\261<\331\030\235<X\220\255<\261p/=j\352\341\274\232\0149\274\315\377\336<6\306\264<\3003V=\270\014>=}J\323<\005cn\2747\211\251\272\023)\235<\312\017U=,\252\350\274\016\t\367\274`Yi\273\266\230\216<W\257\024=\010C#=N\034\230\274Sw\034=\246\272\222\274\254\325C=\276\204\263\274\024oL=\034\300\264:\230yF\275\340w\006<\307\2620\275\024\026O\275\275\036\311\273\350\256\206<\211\254\n\275y\037\225<\224\314\366<\267\237\223\274S\214.=\260\271\251<K\345\016;\270g\202\273\343\336\000\275\024\327\347<\220\3073\275\276\037;=\273\371\026=\205\236\365<\022\036@=\353|N;\000\271\326\2748\327k;\307\034\321\273\232\021%\275?\276%<\302\316\r\275\213\223\003=.\036\'=\2638:=M\243\003\275\341\027\226;@\366\013=\t\214==\342\024\373\274}\261\241<\256\334\354\274b\335A=\021\223\005=\247`\321<C\326\242;Yo\027\273\243O\341<\347\306\004\274\212\256\304:x\"\017\2758\231\303<\203\337u\273\023w7=Bd(=$F\215<\373\024\t=\325\314\272\274\247\"\026=:\202P\275?\272 \275=xV\275\303\006\377\274j\341\020\275*1I=\277\250\204\274\272\034\363<\226\251\204;~\300\206;\373\220\003=\277\327\213\274\366\034\004\2759\224D=\267:2\274\260\322U\275\362\375\314<\026\003\225<\330\202?=\335/\034\275w\342\030=-\345\004=\307D@\275\236\216\351;1X.=\300\371\201\272\020AM=\253\314\'=9:\032<\337\313<\275\346\300\006=\330\021$\275?\361\247<\34242=jv\275<^\323:\275\256\r\373\274~i\211\274|I+=\361\265\323\274\364dQ=\360\tE<\032\357\313:\253A#=#\276U\275\264g\247\274\355K\251\274\335\332\224<MG\270\274\"\254\211;\2260\320<\301\241h;|l\314<=\0063\275J#>\275\315\204\337:\277\031\267<l\017\333\274\365\334E=\221u2=\253d\021\274\252\215V=\312o\026=\227\2002=\2460\251\274\350\033\014\275\rF\362<yF(\2752&7\275\301bA=\237\206N\275nk\366\274J?\017\275o\307\334;\372.\226\2748e\253\273]=U=X2P\275\033z\t=\327!\245;/\226:\275A+\022\275\324\362\224<\214J\250;\312\000\354\273~\001\333\270\344\240\345\274\232\371\321<\372\357h:\340+L\275\253\260\010=\230\\\360;\'\221>\275\314\037\025\274\275p\345<\242\240\024=\314\215\030\275X\224W=\030C\036=S\305\350\273\3254\237<\247R#\275J\222\362\274JgS=\013\307H\274\265\361\204:v\r\222<\330\316\263;R3\376\274\220(1\275\230\243\"=\267\344\r<\026\302S\275R`\314\274\274a\377< ?\237;\302\026\236;~\321\362\274\250\336\250\273!\331\033=\270\246\217\274\320\344\364<\247\006\"\274\375\217*\275\177\305\000<\255Z\r=xV@\275\364C\207\2730ML\275}\263\232\274c\200\377<\005\201\227;\207\227\3349\002\r*=\016\236\232\274\367\307\237\274\'+\332\272\207\005M=\205B\002=\026\256\255<I\260E\275._#\275\306\260\003=J\3473\275\323\201\303\274a\252\035\2756\3263=\274W\200\274e\034U=\2252H<}\036$\2754\333\017\275&\007\370\274\263n\016=\225\013\336<\014v9=pB)\275\264\241;<\264;\254<0\211\311<\331\307\036\275\351\265\354\274\227\246;=\226\337h\274\263\330\017\275^\223z\274w\031\n=a\340\"\275\240\2144<\235\353\345\274D\006\311\274\243%\207<\376\347 =5\331\017\2741w\023\275\252\355\244<\004\323#<\347\3403\2751\005\021\2740i\237\274Q\021\337:\346j\034=Z\004\243;\306S\002=\r\243\010\275\361\004K=\300.\225<BB\003=\255\315,=WR\010\275\260\255\016;\007\033\356\274O\n\261<\236\271-=\330.\247\273g\306\014\273\251\2762\275\313\360\377<-S4\275\n\314>\273\320\361\022\273\256\357\033<\227b\004=i^\014<g,A=G\225\004=\222\377\312\273\350\316V;\017\311<\275X\362\254\274\037.F\275\233\tC\274\223\202\211\273\310\322\022\275\020\221\255\274\347GN\275f\244\003=<\201\226\274\261j1\275\254\255\251\273\t\214\276<\r\323^\274 IH=\211\364>=\236O\033<\2575\325<\205Zf;\365!\304\274\300#\327<\237\214\007;\262\337C=O\363\230\274\032c\023=)\2744\275\255[0=;]4\275\343\271*\274\252\342 =\263\366A=i\2008=\330)7\275\217\020\234\274\302,\260<Z\207=\275\311\206;=&a\330\274\275\031;=\000\374\037=\216\354D=\250\374\237<E\354-\275\352\327d\274\2056\027<\377\rA=\206\2775=\032b\242\274\376\243\007=Y(3=\206\2570=$j\272\274\253\331\210\274h\017\371\274\036\361J<9\315V\275\266\037O=\211\267\212\274N\373>\275k\255\376<\322M\217<\257\360&=dN\336\274t\025V\275n*\257<\006A\340<\254B\005\273q{K\275W\210\025\275c\0370\275Q\346\353<\026\255$=u\215\233\274#\362\014=`M\005=y\232\230\273\200`\262\273f\257\306;\020\256H=<k\204\274\234\034\370\273V\305\347<.\205\223;t\025\302\274\366\214o\272g\320\330<lq!<\375\255{<\262Xh\272\240O\031\275\205\370\320;\342\002\001;Y|@\274\002\203\362;q\365\367\273\345oN=65K\274\020`\036\273\213d\263\2745\3657\275\013\016\032\275\272\032W\275\033\334S\275\240c*=\025\231%<:\374\224\274\360h\300;]\320\n\275V\253\234\274*&\374\273z\007\206\274\327\006J\275\3657\240\274\233%T\274\276\307\324\274y\255\000=\223\323\035<_\206R\275E\221G=\'\333\262\274\240\345\030<\371(\022\275\326\335\013<\2334\361\274\357\336H\275\220`\030=\024N\n\275\207\364\265;\226!\010\275\352\217\021\275ww<;\271p\246;\005\322\327:\010J\252<Md\303\274\200j)\275\340\364\340\274\233\312L=\030\252\245<k3)\273\212f<\275yZ\270<2\264j\273O\270:\274\002\276,\275\255!8\275uP\017;2\266@=\'XY<\220\320\252<Jn\010=h\262\261\274\362G\022=\232J7\274\262\211\034;W\264\205\274\025\330\354\273d\223:<|ER\275\222\000\245;\247\r\027=:\312\t\275?\372u;z\254\203;\277\020G\274\310\357N=\325S\257\274G\214\346<\262@\021=\334\244:=\321\334\344\274\363\211\366\274\226\034D\274\277\252\332<Tb\035<\255\020\022=\204t\032<\205\330\365\274a\3617=|\270\210\274\227\267Q=\022\371)\275\234g\371<\233\375\000\274\250I\016=2\267k<\366\242\004\275\321r\247<\013\214+\275\366\265\264<=I\205\274LCK\275\3214@\275P\356A=\333\245\024;\016\347\020\275NL8=?\014\"\275u\327X\273\001g\371\274%\377\217\274\t\335\027;>rU\275eH\351<\2670\361;\207\245\371<r{\031<\203\242(\275*\000\032\275e!>\275R\201\262<\240h\331\273\366\322O\275\243\235G\273\033\217\333\274\366#?:zFU=b%\017\275/\254\376<(\254\310\2740M\350<\010\r\"\275\020i\232<\323\262)\274\036\t\n\275\026I\003=\255jV\274X\302\240\271\306\000\240<\243\004\253\273\333\006\305<~Q4=\231\374\020\275\n\257\310\274l1\253:\215p\034\275$\211\347\274?\324\210;\217\2641<#)\357<\3303\314<q8\016\275\027\225\002=\334\336N=:\200-\275\241\\4<Vi\230;\231\221\033\274\006@\377;\373\342\347\274\335\373\252\273\025\322-=\315\020\254<\355[0=\301~\034\2752)\'=\300\371!=\014\311\214\274\272\036#<d\010\265<\322`\264\274\352\262N\275\335-\343<\360K\371<=\303\001=~,\352;F\346\'\275\260\243\033\275^\356E\275\344i\023=*\200h<\361\264\334<\223aI=\303>\204\272\n9d\274\271n\032\274\014{\222\2730\362\207<\377\2043=\030\376Q\275\273\014\346<\304\001>=\026~\320\273Q\2332\274Y\251\004\275\375};\272\333o\355\273\231\264\204\274\210\004D=\'\337\'=\306\332\214\273_9F=\330Q,=\225\006?\274\324\313\245\274\317X,\274m,\332<q>\221:\304\220\213\274U\360k;\264\007\236\272\335\222\276\274B\3476\275\274\227B=\266\030I=\2108\024=\325\330\377<\262\224\311;}\275I\275\250*3=\255q\007\275\264\232\250<\202\t\340<(T0=\243G9\273!y\217\273\023\257%\275gf\330\274^\371\n=\227r\034;7\304\017\272c\215==b\0253\275>\232N=\361\366,=\240h/\274A=\t\2748\362\034\275\376\275\007\275qK\365\274Z\275h\273\307\272\212<\326|1\275D\240N\275\025\222\204\271\366\365\036\275\363N\256:\344\337\223<\371K\230\274vX\210<q$h<\346\345E=\242XJ\275\201\270\303<\236pJ<zL\t<\251\232N\275\207Z\005=5\265#\275\n\326J=\273\336\005=\366\005\370\274\343p\377\274\016\217\004\275B@\261:\2363F<\260\372-=\360\362\366\274b\240\020\273\230\256\003=\002\013s\273\023\023\337<\307s}<1\317\244;\312_\022=\375\347B\275\026_+=\003\235\337\274\340\251|\274\202\030\367\274l\326A<7\230F=n\323L=t\256,\275?\371\003\275\037\234\227\274\2727\301\274P\\9=\032|7\273\240\246\001\274\235\326G=\211\315H=[r,\274S/N\275g\025\025=\277\004R=R\227\3678\177\000\331<\217\3669\275\017%V=9\327&\271\004\010\020=\375>\301<(\032\004=\rx\031=;[\013\274F\344\t=Q\253A\275\344o\016=\326\343?\275p\363E\275&\335\231\273\247\262\323<\003\317#:se\267\274\t\214@\275\223\001\304<\236bG=2s\224\274\\X9\275\376\252\217<;]\r=\262\177\220<w\303(=\004\314\257<\215LF\275\266\302\004\275m\3720\275\014\343\003:\\\305\326<\340|\341<F0\374\274\n\025\204\274\240\037\220\274\2506\215\2731\343:=\245\372\310<\003\031z\274\203^\257<\275P6\275 +\266;\003\334;=\006\007Q=QE\266<\231\004i\274\035V-\275 \224\226\274mZ,\275I\204Q<\300\255\305\274\004gz;C\3413<\374\022\030\275\205l8\273\270&H=/|E\275\373\005\022\275_2,=\026&\232\274;\240\247<\022\267\033\275R\220\221<\024\222\361<,\374\003\275\303\215\266<\2231:<\3608\032=\013t5\275\020z\037\275\213yF=\320\000u\274\016\003\027=/\377\\<\306n<\275\014=\351<ar\206\274\346\247\r\2743\240\"=2\376\272<\326PN\275\334\201P\275\367\035B=\t\312\006=\213a\346\274$\031\357<\260\265\277<\265\201\304<\376\357\004=\325\351H\275}\rb\274\254U\336\274FU5\275!N\333\274\300\035\020=P:\330<\323\2213\270\365\351\303\274\337\303\376\274S)4=\005\016\342\274\027!\206\274\311\311\245\274y\372\260\2741\236\004\275<\\\036=\317`?=\322uV\275\320gJ\274\013\231M\275*\000A=Y$!<\306J\017=N\266\202\273\350Q\357\274^5\247\272\365\016\203<W$6\274#\317-\275\213\3550=NBm9\240\204\301\274\3071j\273*v\017=\221\001k\274\230\242\277;X/\035\272j\177\n\275\336\3179=\003\255<=\330\201(\273Z\3405=YoR\274bsF\275\022\250\003\275\313\365\223\272\025\007\355<\257Y\014<\310fg\274}\r\030<\203j\252<\300\352\203\274\324\341W=\177\214\332\274MK <\377Y-\274\2039\363\274\334\262\231\274[\376-\275\350\225W=\004\225Q\275\334\353\222<8\353$\275z@\025=\313\335\267<\326\277\246\274\026\363@\275$\315,\275\337\253M\275\014\'5=jHi\274\034)\257<._\304\273\257\206P\273C\250\302<\337~*=\033\300X\273\325r\315\274i\336\241\274!)\346\273\t\373}< \225\203<\2118.=\033\330)=O\217\342\271\300\233\375;\232\363\300\274\263\345\024=\360\202\r\275\202`5=\010\230\003=N\205M=\'\030\'\275\374\3333\274\024\200\331<1 +\275\225\331\362\274\220\314F\275^w\016\274\221_?=\336\232\253<\330\364I\273M%\265\274\202\315\021\275\233/+=,\304C=^NF;_\2707<\374\026\256<\'\252\342<\3407\302<a\'3\275^p+=\224\340\314\274\300M\344<\365]\205<\316\250@\275U\342\270<\020\246\013=\t\277\350\274\334\\P\275\'\364\360<\321/#=\365z\n\275\201a(\275V\177\003<Q\025L=\355S\334<\325\301\330\274\251\206\001\275\332_\335\273\232\277\241\274L\252G\273\255\375?\275,B\364:R\002\025\275\227\323\272<\335;\002=\036O\344<F\226\351<\261\310\253;\026E\377<\306s\266\274v3t<\360\220z;\342\214\026=\365\307\370<\'f\200<\021\2618=\014H?<\235K!\275\360\265\031=\277\200D\275~xP\275.dx<\222\010\256<NL)\275\204L\007=Z~\003=R?9=\244r\224<\200\351c:9\026\274\272h\274Q<\254\262Q<\301\005\020=\321\3675=\344\007#<#\0317=6eC\275cF\350\274\213\3701<\006s\275\274[\273\034=\0259\215;\277\267!\273e\320\031=\205\252\346<U\310\031\275K+O;\207_1\275\223\224\002=\307w^<\230B?=G(\002\275W\230\014\275\264\234F<\'G\250;\201\211\235\274\241\246 =\020\223\343\274qb1<,`\345<\225\216b<Po\031=%\240\206;U19\275\332\213%\27551\353<\310\2257\275\274I5\275\3366\005;2\007\014=B\255\267\274\277\261\261\274\301z\013=B\355\023\274\001O-;\215d\034\275\321\r\211\274\211\0221=y\r\200:S\214+\275\227\305H={f\014\275\032\211\366\274vKW=\022\247y\274A\"\032\275V\010\371\274\320\324\024\275\023%h\273\027\327\003;\021\347\200\274\035\336\307\272\373V\323\274v`\262\274\363\215&=\355\254\030<\207\300\364\273S\311>=4\020\341\274\215\234\213\273_8\267<M\326#=N\304\214<\034\342\036<\303\217D=7b\307<g!:\275I\200\310\273\362\236\002=\000\241M\275\257\001x:\374B\311<1\2261=\374\037\351;{\201\302\273\210(\351\273\353\r*=\255\211F<\321\215\312<\010\255@\275>\324~\274\344\022\013\275\240\344\231\274V\234H\275N\2400\2752\363#\275l\306\001<\326\265\344\2742\3324=\'?\004\275\\\223\013=\277\344\036=\237-\007\275C\332~\274\341d\361\274\353\233\236\274\343\2632=)\226)=\313\017\272:%\2309\274\214;\364<]\264\322;\205M\351\2743\'9\275\323\362\'=8\356\024\275\201\200S\274\217\020r\274\021o\001=\006\346\235:\256M\240\274C\334\236;P\200\231<\212\340.=\236\275\001=7l\r\275\024\262D=o\257\010\274H.\230\274\202\261\252;;\253`\273\177E/=a\310N<\251\314U=\231DB=\'A4\274\272g\342\274\214\202!<\341\264\t=Fo\241;\023\367l;\340A\263<gAA\274\000\0301=\207\205\324\273\325m\213<\257\264\213\274\303\2352\275\343`\375\273\362A\001\275\247\207\330\273\362$\322<\000\023A\275\244\351C=\306\271\206\274\322\242\365\274\232\376\330<y\240\177<\254a\255\274p\317\242\274A\037\2709\362\314%=a,\013\274\310\360\'=\256H\031\273$\377B=\211\217\007\274\327.\336<ea5=\233\366\020=\025\225\310\274\372\t\277<.\204\000=\003\007-=(\256\302<\367\375=\275si\347;\366\243\351<\3043\355<v{\373<\037\214\256<\353s}<\372\020\340<\220Bw9~\233,<\256)2=\027\242\253<\233\006\'=\216\016@\274\021\334\"\275V\236N\275t\311I=]J\026=\260\337L\275\322\266\027\273}\224z\274!\310\036<\202\n\000=\026\3201\273\025\242(\275\2565\323\273xF6\275\210\3379\273[\326Q<\362V\267<q\310\267;\374\302*=C\020\026=qB\t\272\330b\3169\t\300\023=\033\001\275\274\205,\325<\037M\236<Qy\325;\271A\031=\316((\275\337\004\350\274K\371t<\314\222\007=mT\001\275\020!;\275\247LF\275,\273(\275\360\335+\275\230\232\206\272\300\213\232<H>\227<\225q\215<Pk9=\267\220\006<\\\311c8X\356@<p\022?=Xf\207\274\377\016\354<\325\2513=\217\250\350\274\020\3565\274\235\214I\273\262\321\361<J\207\253<\355\301\021<\267\225\206<\\\351\213\274\r[\352<\267G\260\273\334yV<\252}R=\327\275\034=t>N\274q\275\356<i\341Q=\244L\343\274\265\226\317\2747\256\304\274F\210?\275Z%\204\274\314\314\357\274\211\024q\273\333y\266\274\251\304\342\274\006\330\344\274\001\0160\273\343\360\246<4%\302\274Z\332&\275\016u9=\221\006t<\207\016\020\274\264\242O=l\233\233\2734\325D=\270R2=\3276/\275\323\315b\274\354\341t9L}Q=k\347V;1t\267<\205A>;\025S\020<\003\374\330\274\373\254\213<m\225\271<\362\345\212\274{\0020<-\250\205<&5\344<>1B=V\377\300\2743;Q;S}\345\274L\340\311\274\347\026\270<G\276.=\004JH=R\005\004=\311\247\305<\230\337h<\2627)=\033\017]<U\272\317\273\221\251M=Tn\276<\033\221,\275\202z\232\274\237C\236<V\002\221\274\362\'.=\312\267\022=\263\331/=\026\305D\275\241\017\204<so\010=\3316\251\274\333F\222<\276$\032=qn\320<\363\261\320\273\210\355\257;\014\307P=z\256\360\274\351\244\255<Q\315\020<@o8=\270\004\322;\315\267\265\2747k\026\275\242\027u<+\345\310\273U\2141\275\250\272\035=E\313\371\273\007\322\026=O\230==\374Yq\274\255X\215<\321\260\213\274\024_+=?t\322\274W\242$\275\337\3657=p\\p\2735d<\275\236\031\3538M\202\272\274\207\201W=r\347\330\274\324+\244\274\\7\025\274)_\367<\244\377\333\273_\305\027=\221\007\236<Is\215\274\202\323\274<IJ\225\274*j\213\274\000xa<\000\036=\275\273U\314<\350\353?\275\265$\343\274b\222G\273\345$*=t$\337<~[ =\315\220\333<@PH\274 w%<\301+\246<\300\365\215<)\017\315;\377\372\236<\347\250\034=\321\030 =\013\017\365\274\347VR=\304\262\003<\266\037\310<[\007\233\274\032\r\"=\313#V\275\337\216\023\275\335sE=\326\240\023=1W,=\210\002,\275\223M,=\266:V\275\007\354\203;_\334\021=>\303\336<,>\345<F3\006=\206\363\177\274&\231#\275\355X\317;\327\355\307\273s\343C=i\356\022<\025`\003\275D\243\206;w\257\324\274\261\201\037=u\022.\275i\3762\275\262\024\201<\246\310.=G\251\'\273\017\365\213\274\236\001\006=fjA=\221M\r\274\013|\013\274\220\353\007\273\215\0148=\230-\322\274(\351:\273\212\265\020\274\353\300\321<l\257O\272\t\030\337<\010\271>=0#>\275y\317\233<vz4=\250\274C=%\353z\274b\260\261\273\240\330\004\275+,c\273\256\271X\274\356g?<\357\020$=\330\271\332<\035\270n\274\014\2233=\013\271\023=K\256\347<*g;=M<\n=.v6\275-\244A=\177\343 \275[8\273<[z\224\273p\315\t\275\305\031\336;A\017\243<*\362.<\203Gx\274\372\315X<\2716K\275;\202w;q\361\316\274u,\000=\331G\035=F*;\274i0\312<:\2050<Q\362\n=\"\022\305\2744\356\227\274\034\013N\275GZ\221<S\"\t\2756\010\266\273\024\032L\275\350&7=\251\024\346\274\216;\010\275\312\n\325<\316\313\r\274\221\005\260<\200\330u\274\214\026\021\275\351\330\234<\035\3015\274\212JP\275\333\r\331\274\233F\270;\327\t\235<\372\247l\273t\215:\275\325\364\263\273\021(0<\274\224\354\274\373r\t=\321\003\007=h\366\033=+\223F\275\201\2641=\333\340>=4`\205\274\215z><\334\201\220\274(\376T\275\265#I\275\246\274B=\003\244\357\273\227\032\010=\360\343\326<\361\332\224:\327y\017\275\375\233\214\274_\211F=\323;l\267@y\370;x\222\005\274\326Z+<k\375\325\273\301V\355<cF\213<:\3440\275\000P\3738O\035?\275\230\352\306<\2068\277\274\2442\215\2746c\025\275I!\257\274\323>!=u\003\254\274\362y\262; \357n\274f\356&=I\002\034\275`\2677\273D\032\256\274\374\2352\274\264\233\017=#\n\002<Dw\017\274\000\032N=\3579I\274Rk\036<\240\334\022\275tx\234\273[\r\004\275J\246\037\275\365\215J=&*\334\274,\301\000\275\353\263/=\027/J\274u\n,=wM\327:+\033\017\275\"o\272<\373\204\226\274\342\020\305\274\261\2739\2758.\014=O\3045\274\253\224\257<\036\274C\2743\241\\<&h\254\274a\304J=\271^s\2741G\340<5z6=(@P\272D\032T\275\365\202,\275\375\004\353\274\014\255E\2755\r\200\274\"\331:\275g.\225;\312I(=T\007@\272\227m@\275\274\264)=E\334\333<6\315(\275\032<\343<B#\363<\272\355\276\274\233H\332<\033\000N=\207\262\007=\307\251\024\275\202X\2379\005\321\014\274y\006\021=\352\347\345<b\357\375<4f\371;\247!\315\273\r\251\030\275A.\272\273\261;\017<\300[\373\274\327\261\024<;*\221\274\220YH<\262iQ=U?7=c\'\010\274\315\304\322<\347\347\024=\352\003e<0\2379\275\211U5\275F1?=o\343\220\274\364\361\026\275\375\2526\274\374Qf\273U\320)\275\340\266%=6Q\360<\010\306\351<\254`\t<s\nK\2757\0336\275\345\262\034=\253`\001:\006\251\013\275t\304!\275\337u%=FzP\275o\345\002=\2104\030=w\323\360<\327\001\347\274r\350\020\275\r\010\027\275\375\345\274\274\332\373\354<\013\2071\275\260\030T\275xI\241\274\306\336$=\330\240<\275\253\333\326;#\\\335\274\212\357\010\275%\277+=\341\177\000=\372\3149\2745\375*\275)jC\274\355D\001=1\366\342\272\177\332\t=\334}\221\274Vv\\<\340\341R\275\276\233\304\273d\250\016\275\265\r\2509\2646\363\273\020\010\343<:9G\275\215\312\246<\324!\253\274\237\241\377\274a\246\017={\tB=\355\376O\275\032M\350;\032\014Q\275\246|T=~\231$\275\005i9\275\365\261\315\274\274\337\025=\313\233\261\274\3233\3319\227`\021\2757\205\000=\353\347\t\275(dD\275\026\206\310\274\247\002K\273\346\203@\274\326\237\342\2745\367\374<`\033\212\274\261\302\373<\247b\002\275\254\332\224<\365\213S=\203o\017\274\222YS=\326\277?=\374\016K=+\267&=g\345\020\2753\277\000=\'\224\370\274\274\236s\273\262@\342\271\203;\207\274\303\020\026\275C)E=\005\202\355<U\265\341\274w\005\231<\006\177\333<=\220U\275/\267\216\274a]\220\274i\341\275\274F\253>\275d \035\275u\030\225<\256(\001\273\r*\203\274\235\255_\274\343\213*\2751X\214;\215\314N=\262\202\321\274\037\014\371\274\022\347W\275Q\356\001=\232!6=+&D<\201`\036=\033\335\001=\362f\"=\371\253w;@\342\206<\016\345\016\274\334 \013\275\301\267+\275\246\314\n=aj\212\273\235\'\275\273\334\235\232\274\027\243\330\274\373\271\002=\000\002\002\275p\340\023\275_+A\275\236\321\310<\240)N\274\272[?\275p\002\242\274\334,\266\266\n\337\215\274\215\376?=\255\227\000=\022\241\001=\365\232\014\2757\335\333<\021\322+\275\237\277\t=V\2077\275h\263c\273O!\021\275S\370\351\274/5\342<\\\316\306\274\336\301\350\272\312\273P\275\240\016|;\276\310\257;\037z\350:c\317\237\274q\036\305\274\241\245\236:\036\331H\275\227\022\n\275\225\361\203;\021\340D<\200\376]\274\340\345\213\273\352\200\351<YP\024\275W\263\202<I%<\275\002\302\022\275*8o<t`Y\274\272$\025<T\261S\273\345\253\241\274t@\023=s\306\037<\227^$=\327\277\036\275+\223\212\274\035\'>\275e\t\212:\004\307\';\2400\002=;\371\345\274\211\341\274<@P\177\274v\301\221<\375Xq\273J\221<8z\344T\275\005\036\351\274\037\005\031\275W6@\275\330\254\033=N_\267< R\314\274\271\361\275<B;\223\273rf3\275R\3157\275{\276\037\275)@\020\275{\320D<\217?\014\275F\3469=\251\277P=\033\261\222\274\254\206P\275Z\246\320\274\351>4\275\031\255#\275\2126\353\274\360/\030\275\001C4\275\234\320\017\275\225u\022<v\240W<\002\3270\274\0012\231<9\321\216<\262\021\362<\250&\003=\034<6<\260\307\016\275\2005\347<8F!</w\270<\261\016?\274\017\243H=\301X\t<\345\337*\274!)\032=\247W\277\274\010\350c<\214\312\344\274\022\205\003\275\234}\000=<\361\002=\221X\216\274;)S\275\273xV<\332\276\027\275@8\205\273\271\341P=\023\322\302<\221\324\010=da\002\275\274\321}<k\253\000\274\300\317A\275b\317\344\274\317\027\r=\255\274\306<\320\247\007=E}\201\274\332;\352\274\255v\320\274\021\375\033\275\206+2\275Le\226<g\3246=j\350M\275\032GF\275\340\330\237<\256\352\376\274\256\0109=\206A.<\004\260%=Q\210\244<\370\345\036\274d\352&\275G\2312<\363\254\020\275\005)\037\274\032\354\204<\246\355\321<\243\316\001\275@E\257<\323y\351\273\001\262\310<\001\333\022\273\244\272P\275\001f\025;\267w\210\274\241R\221<\252\330\245;\261\035z\274\236\005\325:M]\211:\303E\303\274\210\334h<\223\240\020\275A\366`\274\363\262\267\274|9*<\033\"e\274\273\241:\274\352\017x\274\000J\270\274$$\267<\301&;\275z\r+\275\356\335\005<^\350\305\274\303\375&\274k8\013=\347\213N<-j\242\274N\310\034<l\315w\273\016\340\252\274\246O\364<\366>\215\274\231\005,\274\360\273\033\275p*\025\275U\003\025\275\013\300O:\n\\O\2753B\267\274\360\340e\274\007\240L=\334$\2078\356)\267<\210NQ\275\326\\\354\273:}\232;w\246\266<\324\244P=\367l@=r\277u\272\213)\301<@\207\240\274A\025\013=\002\247(=6\231\373<4\261R\275\331\355\343\267\252\2421\275\241\217\035\274\300M\001=\312/\255;\275u\371;R\2552\274\2341C\275\236\343\003\275q%\300<\024<\031\2752\317\357\274#\311\330<\005\014\326\274 \036i\274N\0026\275\345\325\033\275=z\224\2744p\240\274\263\323<=i\345t\274\352\234;;I,F\275\242\316\232\274J\022\342<QR2;fNd\274\271Z==\316\261>=\211\344P=0\233\237<\021 @=\344L\t=\251oM=3u\030<\013\177%\274\221\377)=h\376p\274\365\247\226\274\202s\302:=rW=?\213\024=\204\261}\274*\2645=\327j\366\265v\326\004=RHw<]\031\370<U\020\300<\345]G=q\302\345<\277vH\275)\200\272;\371\007\304<&\002\n\275\\6>\274CmY;\241r==\206_\"=\217\017U\273\3736\377<\301\2644\275\3562O\274\000\331T=O\323E=\022\246\025\275\007\312A=]V\014\275b\246-\275-\331\365;WD]\274\251\237\372\274\245\262\t=n\0025:\'\004\024=PxX\27408,=,\311\231\273v\300\257<{g\356<q\376Z\274\01746=\276z\221<\3120N<~\013\032\275\301\245\232\274N\3146\273\022\026\315;~i\335;\0301\031=\321|.=\220\374\264\274N\324\226<+\364\307;\307\300\206;\213D3=\027r\374\273\n\0367\274\227\315\347\274mN\371;\000pM\274\311\020\020\275$\017E=\341\363H\275\342\2644\275B\031\014=\332N?=`8\277;2Zi\272\330\361\222\274\250\003\006=\336\250\357\274\233\332X\274?\370\277<\210(\245\273\034\216\376\274s\000\331<\224\300\\\273n\301V=(cA\274\277\327\327;\215}\325<E\341\025\274\2108\333\274\305\311\353\273\311\002\021=\230J\372\274\0048F\275\304o\347\274lm&\274]Q/=W\3308;\211W\274\274\300\207Y\274\232\246\320\274\341\214\331\273W\247\023=\\82=\245_;=\364\271\377\274\365\326\030\275\035n\017\273\247G\247<){\274\274\212\350\025=<\031\315\274!W\340<\025\233O\275\306\270?=\320>\316:\303FW<\305\334\001=\3107\372\274\013\004\346\274\375\030+=\343\372C\275\247\233<\275\260\341\345\274\354\3648\274:\370\014\275X\2529=j\330\366\274$\234b\273\312\2060\275\307\3736\275\213J6\275\007,;\275\311\220G=\370\230\335<\232\340\234<\241\r\"\275\\\353=\274\205\2020=}\201E=\327\037\276<\225\242U\274\257\033\026=\"\354\355<\006~\357<+\270\274<\037\333\235<\273^_<\341\360\003\275\203\345\367\274h\036-\275\265\'$\275\325M\303\272\337\\n\274\230\330\257\274\236\232B==\205\223\273\324\344\265<b\317&=\241\335\271<\253!#=\305\274%\2751\037\201;9\017@<t\235N=\2668\226;e\254\"\275\027g\032\275\300\3032=\271\2765=\234\343J\275e\351<=B\004C\275\227\247;=\373\3050\273Yc\231<\220u\234<S\354U\274\261\323\311\274\202(O=\337_&\275\016\353\201\274\326\241\333\274\242c9\275t\344\016=\327\220\263; \266N\274 \332S\275\316\323\007=\376z\203\274\350I\005\275u\233\256\274\244\236\365\274U\021\001\275\267`\212<\220f\376;\307KH<\2314\252;\031\030\332<@\373\302<\372\210?<\220%\324;)\306F=\366\247T\274\361\207\242\274{\325E\275*\256\034\275\226@\032=E\021\020\275\017\254\347\274\'B\335<\203E&<\362\227V=\256{F\275\373\t\232<\206\n_<\333EQ=\375fI\275\230Y.<\346\\&\275Hs\203\274\356\314\016=\206\366\376<\272]_<X=p<>;\240\274\343P3\275\306\250\342<\311d\312:\020wA=n\337\334\273\313\305\264\273\241\351\000=@\214\316;\251\261\031=\324g*\274\250\354\002=\211\254\007=\254\2419=\354\233\000=\324\031\013=\316#H\275\322\232X\274(\322F\274a.\214<\350\024\n=\216\335\273\274FG\000=x\234V:\236\231\006\275\031\3168\275L\0225\275\235%\256\274f\323=\275i\252X;@\023+\274\216\267\017\275\213\205\010\274\311\203\250<\215l8=Nj\253<\201\331\365\274\261%O\275N\311\211<.#\365:\303\035:\274\256.#\275\327\006\006<\267\344\350:\212X\340\273\302\261\276\274=\330\231\2749\254+\275nTN<s;\201<N\210\201<\353\316\376<U\335!\275\242\274\344<\233q\256<L*t<e\375\323\274\321\217\004=7]\321\274n\263D\275\312ZF=|\031\0058\331\207\276;\334\344\034<?d =\362\354\002=~\354\361<\200\177)\275\346?\311;MxE=/\232\013=\345\231\220\274\225\244\235\274\323\217\232\274\"B/<\255\220\036\2747H@\275>\021H\275\274)\311\274`\"9\275\232U\340\274\327\301&\275\325-%\275ag8=\346\234\317<\003\227N=\2655\367\274\204\206\n=\217}\005\275\266t\217<\000-(;K\2173;?\377\375<f\227)\275\031XV\2717\0266=\216\373\264<\366\3705\275l\030==\200\266@=\344\362Z\272=2J=!\205`:\260\215>=]&\002;\315\001\032\275%!\250\273\324\236\364<D\321\\<\300g\034\275\235\241G\274\345%\312\274\235S\323\273\234.\314:Su\234\273\373{,<\025\201v<Mn\034\275\372m!=\374.\'<7\325\351<\213\264O\275\354\2467\275\2125\335\274K\022\n=\232\264H\275\016v\206\274D\"\336\274{\232M\275\017zD\274\027)_\274\014\275\347<\305\"\360;\313\210\034\275\357\241q\274\365s\272\273\220aK=y^\022<\324+s<\256\227&\273\025\306#=\325\\\303\273\220T\336<.\347#\275\020\215>=0\323B\275\363Q\325<\320\371\273<O\233\344\274\20565=)[\236<-\t\200<\201|\177<\366\211D=\322\000\332\274\342g:=\360\237\022\275X\034\325\273W\3135=\326o\254\274\335\222W\272\016\275\372;3\325\002=D\313\206\274\331_*\275\225X\213\273\262\274\227<\006\245\247\274\002\214?=\211\262/\274b\247\031=gQ<=..=\275\024\027C=\323\243\357<\236\205\2047a\036\r<fXI=P\022/=\264\200\010=\177\376\005\273\032\201^\274\371\316\236\273P\204\314;b\0102\275\335\236L<N\243\277\274\276\234\231\273H\347\021\275\234\265\001\274K7\034=o}$\273\251FW\274\350\307T\273F\273\024=\024\016\216\273\200\277\310\274\225\006U\275\020J\n=\334QH\275\260\034\317\274\205:>=\245\220;=\210\344\306\274\323\202\222\272_)7\275\001\364\031=\240\376B=5\260\267<\001\235\373\274\251\355\034=\223\272\220<\247f\235\274~+\337<F\343\313:\230b\356\274e\367\023\275\211\320\244<OP\322<\3631F=1\371\003<v1\332\274\016w\302;;0\373<\2173G\275\007n8\275n\224\006<\274\230F=\r+\201;\307a\327<\336#\216\274F\027\315\274\336\303\227<^\3058=\030\232 =\255RA=\323/\022\275On\327\274!\226\017\275|\\\001\275\326\233M\273\204A\000=\320\323\342\274\230\211M\275\206kR=\311\353-\275\256\240\230<\002\034Z<\241\3569=\232\233\261;\272z\234<\262\225;=\265 \001=8F\266\2742\354*=\252\251\243<vl\220\274\374\337C=\367\022\305:]T\360\274\347o\311;O\007\016=\362\223\016=\376\001\202<\370\333\273;1\233-<H\351;=NT\206<\353\357\333\274>H\006=q\010\002\275>P\027\274~\237P\275\235\242\272:3P\002\275z1\304\274\037,\006<d\256\371;c\371\231<#\255N\2723\371\336;\374\'\372\274\356\266\360<\243%/=\006\373\024<\300\206\n\275\002\"\236\273\354\252\000\275\rP\374\274D\253\n\275\"\253\201<\001Q\303;\332>\307\274VB7<j\277B=\212\202\020=\340\212c<. \261<!-\030=\231\340#=\304\257\261<U\243\t\275\323#d<g\024P\274\233\227\316<\327,.=\270\222\024=h\221B\274\337^<<\232\366g9~\347\033\275\001\033:\274\020h\035=D\226o<\333\tC\275\366\r\003\274Z\376 =\237\262\313\274\000\003\026\275\"\034t;\317\005\243<\205\352$=\2473\331\274\236\232\014\275\272j;\275\315\007\'\275f\306\246<\025\023\276<8\254P\275\3553\346\274\255\357\326<;^5\275\307]\264<r\205\345\274\276\031\346\274v\272\004=\000\024H<\202\033\036=z`>\275\352\343?<\247\300U\275\n\373;=(\036*;\314H\376;\t\r\210\274\031\005\376\274\240\301\266\273\2519\332\273\325\233\035=\374\020\220\274\"(;=\007\003x\274\361\321\217\274e\206\211<\347\324\004\275\310*\211\274Z\330)\274\236n\037\275\226\007P=\212Y\r\275\244\023\r\275\217\2459=iG#\275\305\354\227;\303\272\330<\372\200\273\2745\254s\273\203^\r\272\226\245\241;\276$\371\274=XY\274\351\177V\275\234+:\275\307\026\037=OO\225<O\241Q=\324\263\024=\245\277.=\223w\003<\004\244\214\274\0216\373<7xU\275Wx\327\273\271\273\371<\347\017\026=$\016\204\274>\222B=\257\000\262\273\256\250I<\022\346@=\350\205\r\275\276\023<=\375\010\206\2740\033\007=\332O\030=\355H=\274%\026\027\275\376\274 <K\244\005\275_\326\372\274\370\377\262<\217\340\255<\244\"\276\274\322\252\276<\341\352i<\234\\5=\366DD;B\371\265<\212\3075\275S!p\274\302\313`\274\261\205\350\273\020v\345<\240#\252<y}\351<\330:\242\274\377\0266=16J\275\0266\222<l\207\317<SKl\274\371\005|;i\241M=\372\357\215;\237\205\275;\332V\265\274\371\006\214<\202 \251\274\340M\020\275FE^:6\265L=\376\035\236<7%/:Lby;\346\002\203<\016\343?<y\321>\275\325,\023=@\355\255\273\006\324E=v\352 \273`4\025\275d\031\203<\361\306\314<_J?\275\374\335\014\275\266\247q<\340#B\275\013\314[\2740\200\344<gH\007=bF5\274x\374\034=\206\010\256\274\262?\316\274\3712)\273\220\202\360;\356\3411:\356\217W=|\204\326:\365\314\364;\200\035\026\275\336\010==Qp\033\275\374\362\205\274\273\016\374<l\034?\275))\370<\263%;=\304\351\016=\';\014<\355\\$=\232\005\341<\036#\037\275\353\234#\275\"/\351\272\t\360\227<>\005\335\274\340\371!\275m\371\002<\241\345\304\274\311\372\024=U\274\336\274}r\315:\312\n/\275yR\303<\315\325H=\215\024\330\274\3341/\275\036\2233\275ZH\027;\004xt<d\3739<\212\032\274<yq<=\213Nd;,\336\030<z0\363\274\350\351X\274\301\310F\275\267\276\n\275\3253\304<\343\220\010=.\226\247\272\220\3457\275H2\022\275<\223\263\273\222\376\254<\346~\016=\031\273D\274*\332\376\273oz.:\001y;\275\330\272Q<\031\246\271;@S&\275\366\221\307;\2105\253<g%\317<F\367\367\273R\252\036\275P\250\035\275\257\3416=\243\003\341<\344a\305\274^\2632\275\371}K\275\007\345V=\341\264\021=\260\344c\273\2553g\274WR\343<\351Bj<\240Z\232<4\371\316<}\024x\274p\023\371<\375\361\016\274~\3774=\336\0023=eY7\274\232\347,\275#\251e\274\204\303\237\274[\263J=\210\336\200:\322\033\212:b\250+\275\223n+<!\003S<\242\027\'\2718\327\030=!\243C\275\256>\314<\2242\032\275\271|\005=&\217B=\332\230!=6\324#<\301\nL\275\337CK\275\217\354*=\037\274\224<\256\243\221\273D\207\265</\211\032\275\2027\213;\356\210S\275\024~N=\210\225\217;j`\'=\322\240\260<\327\363\014=y\2678=o\262\024=\2568h\274\323T#\275$R\366:\204\237\346;\315\257\260\273E\323\356\274H\0258\275\272\223\270\274\021\023T<\357\251\014=\230\372\016=\251k\224<I\275~<\217\235\227\272P\205\340\274\331\327\377<\242vA\275/SU\275\222\027\"\275\025_\037\275V_\222<\n\263#\275\324-X\274\320KW=\215k\302<d\001A\274=\026\222<^`\332;}\230\023=\251pH=\312\006\347\274XS1\275\355\355\365\273\335\266\n=Vg\236<.\0103=o!\n=\343Q\346<\021\275!=\320\272<=(\223\005\275C98\275\"\333\252;\251OK=\266~\312\274\272tP=\275x \275\246\217\353<\200\037\251<i\262\224;\246\007\302<\3309\027=\300\234\212;!\241\023\275~\025\312\274\243~5=n\2231=\370\337\007=4\030\344\274\035\021#=;\375$=\007\003\016={\027\204\2741\240\217\273\301\216I\275\027\366\035=\223#\333<,?\271\274D\036\274<\205\220\"=\023\365(=\210\3336\275#`W<\315t\333\273\r\210\373\273\347F2\274\356\327L=\304\235\r\274-z\246\274\030\035S=\025/\024<\247*\356<\210)\277\2748\334\366<\352c\224<\363\nE=!\250\210;\021\020\224\272\2627\321\274\256\226\275\274~s\014\275q\310R\275Ad?<\274-V\275\'\267\037=}\2355=<\n\357< u\317\274\242vG=\014\036\034<\200\265B\275\001\177\261<.\374S\275C\272\212\273[&*=\021 \365<!\236G\275\344\217(\275\002\207\032=O\226\003\275\207S-\275\2433F=Ej\000<\2016=\275\364\310\036=\374\275\217<N\033\361\274\216\274\377:\335\255\261<z[\301\274\355\371J\275\031\237\014\275\333\253*\275\342\277E\274\233\271\323\274\211\251\261\274W\341\312;\256\246V<A\337\024;\354D/=9I.\275\002\357(\275\310\205@\275\323\024\324<\2714T=\260.}\274\324-\036\275\236_L=\3262\274<]z\343<\006/\013\274\032\'\331\273\246\333J\272!\241\261<\366\261F=\311B\223<\0164\256\271o\0247=p\014M\275n//=\265\303\370<\200EW<^5\367\273\023\275I\275SK\230<\372\334\021\275\tl\371;\202\004f<\217_\260\274\3033\213<X{\004\274\223\3208=~3P\275g\376\372\274\350/\305\274\343\006\223;F\r`<\374\326\006<\2528\003=X\240\214\274H\032[<\363\337E\275\275\250X<\355\326P=\032(\325\274\370\000\244<\004s\267\273.\',=\266\rF=O\245\315<7\335\232\274B\340\034<\315\313\221<\\[B\275\020\027\360\273`\000M\275=\305\367<L\240\205<\340\033C\275\241fH:\007\235&\275Plq\274\035C&\275\026B\r\273v\203\227<\006W\2359R\311\266\274\343\325\254<T\"0\275\235Y\307<no\330<\200\375\021<A\355,=\233\340+\275\321p\356\2747\264<<$\340\001\275\346Q\377\273pe\017\275_\331\206<\207T\333\274\321\027\246<\231lv\274\221eL\274\241\351\035:\220\321\247<L\215K=\210\243\t=\361\323k\273\2510A\275\242\225\241<C1P<x\260\032\275\007\221\007\275\021\336K\275bM\324\274b \364<4t-\275\037\327\310<\230\333\322<\367\020\005\2753\357`;y\315\036\275i\322\021\275\032\035\376<x!F\274\003\200];\310\336\260;\227\205\303\274{\200O\274\254\203\016=m\2003\275\013E*=\214\364c\272\316\001\350<\243sZ\274\177w\205<\303U\366\274&\272e<\037\367\017=\\\211=\275f}\370;\237\206_:\303\021\332\274>\tr;\262\227\210<\343W\246\272\332!\'=u\004\336\274\266\352d\274\236\211\224\2746\204\002=\023\253<\274s \230<\207\207!\275\036}\021\275\017\241\370<e\213\270<\336\302V=S\322\317\274\377G0\275\3660\253\274:\241\307;\273\'\251\274o\027+\274\'\314\n=\rK\317\274\257\1773=\364\"\342<\254\177\022=\336!@\274\0163M\275+\325\253\274\267\024#\274\307$=<sf\026\275\016\024,\275\242\300K\275nR\037=\262(\031:\371\342V=<\262J\275\360\275\301\272\014A\243<\2753.<\021X\305\274:A!=\200\355\372<\316\207\n\275-\373\335\274\302\014\350\274\\N\237\274\304l]<\247_J=\346f+\275N\217M\275P]D\275\240\331J\275#C\221\273\177Ad\274\351\356\305\274\333\013\020\275\276!\016\274\250\360\002\275\nz;=\024k\353\273\371\204D<\236OG<P\257\022=\233\302R\275x\200-=ve6\274\035\373\033=\013\031\266<\270\226\267\274X\217r<\224\347\033\275\352\256,\275\370\263\241<S\355/;\020F\316\273\223\3418=\350\366\344\274\312\336L=g!\r\2735A\036\275\345l\204<\215\253\254<W\356\017\275W\303\270<\304\347\360\274\270s\202\274\271\337B=\254m\026\275\024\341];\257\376=\275[6B<(U\351\274g\251\031\275\205\276 \275S_\027=p`8=kz2\273\r\353\333\274\240\246\032\275=1\031=\241Na:N\205A\273\332\003\033=~-\371<\361\\T=\274uE=^\375\033=\010~U=L0\250;\303d\276;\270\353\366<\372{\305<\316\263\037<\344\3259\275u\355\276\273\346OV=\335\000\230;\315\221@\275V\0108=\025\344#=\370\241\277\274\332A\027\275\021\346\023=*\337\244<PpL\275\331T9\274\334\021\364\274#L\034\275\343+=\275`k\030\2752*\177<\302\311\032\274\377tF;}Fb<\311\246,=#\255$=\237\3328=\372\362<\275\001\n\001\275\311\014%<\013\224\361\274\022^\037\274\224\030\341\274:<\020=0\202\004\275\'\257F\274\013\270\013\275\322\323,\275\337\307W\275\242C\263\274\332pQ\275\246\340Y\273\324\204B=\305-\273<\024/6<\rR\322\274n\364\340<\013\010T=\266!\r==fA=\tsJ=\000\336\034=q\t\322<aj$\274\276\275\022=\014\220b:1\342\007=\177\316\204\274\257\375\315<\250h)\275{H\217<u\305>\275\367OH;\000f1\275\035\245\347<\366\263\264<o\317\022\275\252\ry\274\215W\n=\251\346\342\273\334\204U\275@\253I=\231x8\274w\325<=\002r\261<\032\313\330\2747\246B=\006\345\014=\301\177/;\001\001\021\275\250\361\371<\030\257*=\243\244\026\274\231#\353<\316\322\'\275\001r\235\274\0369}<\002\352\244\274\334\206$\275\345\251\247<1\326u\273\003\232\n\2759\031\303;\314\351N\275k\336\270<2=\t:Fc\003\275\237\231)\275/QM\275X\235o\274\014\261-\275uP\214<i\023N=\010\345X\274\255\336z\274\326\260~<\356\013\256\274\025\034\024\275J\330\371\274\334\231\030\275\331\215\276<\002\2266\274\224\005\275<\247\2225\275\331v\341\273\274\366\216<\224\264\374\274\363D\333<\335\207\372\274\007z-\275^\303\034\275\201\346\010=M\225\320<K\355U=*\242\253\274\326\222\"\275-#T\274\356\"\255<\020\264\254:\374|\207<\242\177\004\274R_v\274n#\031=@\020I\275Q\304\356\274\374@\006\2750\266\031<\261\253\016\273\275*\333;\363z\242<\374D\312\273\335\373}<\314\204\244\274\235\t\264\272\376\200\007=\032$\225<k_\212<\201[=\275\272t\357<\0331\006\273(S\270\273h\026B\275\334\031\352<[\320\237<\306\210\014=j\2534\275IW\337\274\334\215\277<\014\002\371;\233\225\223<\271\266\034\275\275\324\344\274\301\374\247\274xw\301<5AG\274^@\t\275\2727.\275C\035\244;\275\001\323<\200YG=\333\211 \273\034\303;=\341%\022=KI9\275\266\273\352<\314\374\206<6CV=\300)i\274\370\211\273\274\352\232\256\273\340\203(=\366\3643\275\233f\271;\001\363U=\326}@=\014>\243<cO\r;R\"\265\274\307\266\264\274\033\027\360\274\177\220\t=\002_)\274H\243\221\274g\376\264\273\321*\204;\034Z\302\273\027A?=\006=\020=(J\363<\274\227\202\274I6F=\343j\271\274\237\330\232<\035u\033;1\rH\275!\265 = \342\337<\2617\010\275\351\355\010=R\260)\275\370\245\\\274\231\n?=\320\317\235\274[J\367\273Q\017{\2734\361\002\275t\031\324<B\312\"\275!\333\n\273\0349O=\002JQ=\265i\036\274\330\250\003=\006V\036=\245/&=\275\023 \275\343\250\350<\245^\366<\022\272;=P\373\215<\3033\006=\342\0179\274\224\0300\275:\322\002\275\203\350\034\275\'d\001\275\210\2715;%\214)\275\365\177\230<t_\327\274\210\343\013\274\202\323\206<l\2637\274\372\210\200\274\232\005\216\274!\355~\274\326\207\232\274J\245\270<\274x\322\274\274\320\342<\331\021\242\273u\'\203<\364]\273\274\363\372:=\247\367:<\236w\244<\037B-=*\301*=\217\220\214<\313ju\274\014\337\366<\003\030j\274\2432F9%CI\275\330O\360;Ms\266\273\277\307\017=te\251\274\215\270g<\246\210%=\352\036#=9\2736\2755\244K\275\256Pw<\220l\275\274\ruO\275\216B\320\2749v\211<\030f\334\274\006\265|\273\204\202A<\252W\035=\272\330\034=d\334T\275\261\315\335\274/\373*\275o\024\036=y>\214\273E\222\000\275\274\010\371<\027\'\331<F\273\306\274\324:\020\275b\n\372\274\346*2=\306\331\035\275N\312=\275c\325\246<P%\301\274\273\024\267\274\335\3403\275i\026,;\207f%\275\336-f\267\025\243\362<\313&7\275\254s\213\274\007\317*=\331\247Q<\013R\303\274\354\252\360\274q\310J<\2171\342<u\242P\273Q\275x<&R\030<\001c\301<\347^W=\371\373\345\274\232X\375<\202\022\346\274\304\'\220:\334\367W=\353o&=\364\206\332<\251\354E\274g\331\353;vND<^\261\352<6\013(<u\310\364\274\364-\375\274K\233[\274\307\334\356\272t\224:\274\r]\364<\003\2270\274\001ER=\275L\226<\235\366\020\274\262\014\017\273D\022\020=Y\333,\275\223];\275\301\257\'=S\236\022\275ch\365\274\227\353*=\225L\200<\177\0278<\0228\324<$\033\035;\314\2070\275\010\013\303<\224\030\262\274\262#@\274\236\270\034\2757<\235\274%\014\020\275\275\274\013\274Y\\\267\274\010({\274\001m\004\275\202\251\275<9Y\375;X\374\"\275\303c\221\273C\2768=\372\207\232:a4\303<f\036N=\346@\023=\262\302\"\275\261ub\274\325\237\017\275\262k=\274\014\346?=Q\3029<zb\"\275\271~\341\274\205C\213<Oj\374\2729\265\344<\223\302,<R\302\022<\224\3524\274\3475?\275w\317\244\274b:-\275R\355\026=\223:\032<\310\203\364<\255\2314\275\340,\354<;\177\301;c*\271;\2575\262<\320\3558=\301\251\261<\205@\227\274\310\275\225\274\231\221\333<\214\266\315\274\247`\233<>\034\013<5\326.\275\327\350r\273\222\311\364</\250\034\274\273\0256\275\\X\031=\204v\\<\335@\372;p\252\317<\001\361\n\275\222\304\205\274\256\267\271:\271G\234<\364\201\271<X\275J\275RW\211<\263$\001\275\356x\235\274/m/<\344\325\314;fY:=]\263\220\274\315\376\350\273\375\033R\275\342\260\260;0\020\016=\323\030L\275`~\362<\264\356\023<\245\324\r=\366\225\025=\"B@<\341\034\370\274.b&\275\311\237L\274\260\001\305\274k\225><\236\200\307<\331\037\370;H\004<<\355\303\312\274\346s\212<z\273D=\235f\274\274nN\353<\024\177/\275`\352\342\273\031\004\200<\266\037\006<\337\246\206;\013\031\271\274\2403\302\273\345\337\316<\233;\301<\324q5\275w\224\350\271\037?J\275|e==^.U\275G\305\366\274\377\316W\272\345\205\002\273j\371\275;\363)\247<\240\262\303;\345\251\373<-@\005=u\267O\274\340\335\273\274\347g\350<@\226\375<\324\336\000=\355\031\332<DmY\273\227f\342<\301\025-\275\302\325\n=\377\270D\275\230\017\321\274\236\234\275\274O\355\236\274\374\251\004\2751\251*\275\236\246D\275\265C*\275\236\305\233<\275\3265\274\331\370\020=6\263\260\274(0\020=ge\263\273\212\001D=,\246\207<`AF=4\357\t\275S\026\225<\327\371\243\274H\323\200\274lu\217\274\323\357\253<&j\230<\250\003\346\274\311\277\000\272\341T\246;I1\t\275&\355*=d\340T\275,>\252\272`\315\220\273\177`\305<\261\231\375\274\233\\\226;XO\022=]\334)<\326=3\275\330\241%<\352\263s\274\004&\032=\365d5\275\332\375#\275\226A\304<x\032T\275t\255\237<D]\225\274\216;\007\275\317\263\244<\367\326*<\021\320\335\274\272\265K\275\3627)<\2556\353;\326\346\254\273r\262<\2746\\\205:=\377%:\030\257H\275\031\330\026\274\307>\305\2745\277P\274\200\016\027=\244\275\031\2752\255\331\273a\032\016\275\342*\n\275\351T\036\274\2548\025=4N\233\272E\334N\273\305\345D\275\341\301\217<7\033T\274H_A\272{-\030\275\261\243P=\265\004/=\277d.=\'J\330\274)\324\034<\271\332F\275+\323%\275\344\273\302\274\"2\016\2748\361\006=\355\212;=3(\337<\357\203\250\273\260:(\275i\033\322<\204\026%\274N\370\r\274\375\341\221<p\340\250;<\322/=\325`,=v\250%\273\302|\233\274f\002\374;\036\342\370\273\360|\365<\363\260\235<\345\244=\275\214\342\032=E_\211<\266)\t\275T\274\021<\222L`<\322\275\316\274m\352\355\274\3242A<\222{T=`\3444\275k\353R\274\211\223\353\274\037U\227<3\'\236;\252EP=D\310\367;\263DA\275\237\024:\275\312\017\306<\337m\030=h\017\372<\260\302\017=>P\367\274\220\353\373\274\253\254\036\275\255v8=\001\263\333<\235\317\276<\002\272\277\274\026\255I\275\316Vc<p%P\275\\\3168=Q\335\002=Td\234\274\206\350\304\274\030\301\214<\272R\026\275\372\371\017;\376\364\023\274X\3250<\304*\357<\267:%\275S\233\003\275\233\246\035\275\306Z,=A\2652\274\263\310\373\273\373w\214<\234\021\237<p\326\250\274\266{\247:\252\217\344<\n\020(;9\t\221<\023\250o\273\202\255\344;\357\013\245;\370I\006=6\020\033\273\231\005\031\274\014\254\301<\343\014\035\274\256\253\256\274\304)\233<#\033\335<\370\003\351\274\364o\241<Dl1=\232I+\275\274\306o\274\006|.=\t\326*=\354\225\332\274k\347\232\273?I\025\275\234\000\230<V\316\231<\212O5\275\333~\006=\'`\220\274]Bd<.\271\031=<`?=U\201G\275\315\005\330\274\207\266J\275\225EJ\275\225\267\374\274\014p\302\274z\303!=\327\252\270;\224\361\374\2748\243\303\274\006\017M\275\316\n\235\274\211j\031=\267\211$=\3173L\275\010\213\203<0\313\374\274\260\244\377\274\275\372\352\274\311\302,=I\241\252\274[\307\265\273)\006\325<\000\372\037\275\345\214\232<\267\241\211\274\253\340#=\222\014\020;\2609J\275P\303\322<7\\\'\275\315T\177\274\000\300\025\275\247s\212;}@\233<*h;\275dE\364\273\211\211M\275\241\3739=\203r/\274\204\300\315\274\\\363G<\017\205\362\274H\273(=\213\026\t=\364\257\005=\251\363E\274\255\n\031<\332^\344\274\270wC\275\321J\236<9\030!;\002\002f\274R\231N<\240t\274:\262(\010<\006\265\255<\004o\257\274F\251\320\274\315\031\020=|BV\275\226\215\010=Oa\n\275\252L\265<>\346\005=\272\334\027\275\363\357\257<\016\017L=LR\000\274J\353i;V5i\274\355^\007=\264KU\275\300\0274=\372Ee\274V\240\316<#\n\344\274lr\264<\001\r5\275\327\316\355<\235\333&\274\222\223\332;I\'6\275\336sT=\267\245O=\344\312\236<\333w{<\215\347\353;z\377\244<\202\243\362;\\r\362\274\314\323\341\274\311+Z\274\017\033\025=\024\022\030\275\207\220)=\025\337\264\274\003\331\003<N\301!\275\000\3455\275\030E\027\275\206T\252\274\371\2465\275\375\177\030=\177B\215:\272[\234\274\232\301\251\274}n\207<\255\326\325<{\037-\275\036\301A\273\260\"\267\274\306K\370\274\254\263\r\275\036\212\341<?N\030\275\310\2163\274m\205\237;uf\334<\351\216@\275\213-\361\274\200)7\275\265\357\334<\340\213\274;\'\025\342\274(\265\003\275f\320\344<\205p@=\006G\002\275J\330_\274 \267\005\275\230&\026\275\273x\215<\331\255\002\275\370\363\241;\013W\356;\321\001#=3\262!\274\3330\341<\344U\313\274\357\350\027:;\n^\2745o?=\037%4=\343\223\373\274*UP\275\030\345>=\020\306\353\274\0326\300\274\356\235\231;}\n0\275Bg_:>!#\273A\377!\275\273\236N\275\3778+\275`\346d\274\363\345\237\274\247\031\"=<x\270\274\311\211?\275g\300F=+pH=\354\0345\275r\t\031=\270S;;\317>\313\274*\263-<\364\n\037\275\364\340\234\273N\253\321<B\201\t\275\253\310\240\274#\361@\275\2167\213\274*5\214;Wd\236\274\025\n\210\274\305\031\320\273s\245H\275\257\351\317<}\266v<\361\333\206\274XZ\000<\320\033\003=\\\031P=\036*\035=}\004Q\274s\224\227\274f<\364<1(\033=\323BU\275\337{U=b*\317<\261\227\032\275\332\335\360<\200\270\376\273\353\346\374\274\035\360G\275;X0=\335X\215\274\250\245D=\211\005\014=\212n,<\242\034\203;\213\307\256\274\211\374\"\275,\265\256\274\210\003\352\274\032\340(=\360\003|\274\361\324\205\274\352\rh\274K\'\n\275Q\355\247;\375\367\362\273J\216\340\274\'v\273\274\261>\223<\224\241\006<\303\266<<[^W=\213\304\202;\267\315\266<\220*\373<\216\332\341\274$\232\327\274Q\205\337<\261\031*\274\211\013\004=\233.\313;v\2739\275\312\350?\274\363;\324;f\004w\274,\036\267;X\013,\274{\322&\274\037\361\352<\326D-<\341\375O;\314K \275\022\373\t\273y\033 \275ka\254<\354K<<c\226\253<\266\345\026=Z\255\312<\022K\302\274\254\027\257;\204@/\275C\3342=8\232\212;\301\353/\275\230}D\275\353;\025<\212\021\365;E\276\314\273\213\242\344<\350\315\323\273\037/\014=E\t3=n\331\034\275\327\206\013=}eU=\204[0\275P\254T\275\010\204\030=\273Y\020=\213@%\275e\027\211\2748S\263<\266c0=*\245\025=\221H\234<Y\013&\274M\251\036\275\273\310\206\273\207{\027=\016\270k\274\370D\346<\353z\346<\3365\355\274\334^9\275\016|\330<+X\"=c\207/<`\034\034<\246b\340<Z\014\r<\246\364\033=w\"\'\275\351\2051\274\260:2=eY\341:\360\324\313\274\372S:\275\272\033\036\275\203\332&\275\340\333\300\274\034~|<\331\336-=\014\2070\275\2143\226<\365s\261\274V\276g:&\235\306<\210\263\034\275\005\265T\2751oW<K\340\027=Z\374\254\274`K\025;\005\222\017\275p\257s;)\211>=e\303@=\232\337c\273\316\3059\273\224\270\037=\016&\217\274\375\344@<vm\252\274\275_,=\3236\345\274x\245\002=\354\n^<C{p\274v}\006=[\251C\275h\006>=\014\310\313\274+Ad<N\306\222<\343\243\031\274\324\367\366<\341AO\275bv(\275Hv\016=o\336\264\274\365[\274<6\ta\274:\2766\274+\367+\275g6\323\274H\3708<\366\206\351<\034\351C=\026\314\036\275\204\005\354;x\377\006\275o\226=\275\207A\233:9\357\247\274\364!^<\2073\325\274\357J\010=\375Q!\2758\r0\274$\221\010=|3\255<\332\253\254\274\225\007\272;\353\253\"=\251\223W=D6s<\023\026\r=\217W\271<\267\002\024=\t\\q<\373\033.=\231m\250;\032\0212=\267)\021<`K\320<\375l\223\274\3110$\274~\202\006=\252+b<j\244\027<\316j\037=\021s5<\333\304\232\274N\270\004=\\;\263\2740\324\273<\316\356G<\034\013@\274\313N\006\275\260dF=7\276\357<\261}?<\230t\356<o4\222\273\211\360~8\204d\307<\375\2127=!\016\r\275\200\205\035=\207\3041\275\243\313\002=\0238k\274\363\3311\275\322\tI\275\236\214C=\231\256\243\274\021z\023\275C\312\271\274\031\'\230\274n,\305\274x\010\371\274b\245\271\274\233\265\200<\247o;\275\364|\316<\207;O\275\240n\373<U\313\320;p\372\352<\373\206\027\275\261\3660=PN\003=5\250\372\274V\351L\275\365\346\022\274\264B\036=\022\322\332<j\033\236\273\316,==\231\216\376\274q:\340<Q3==\367;l;\373\372\257<F;\026\275u\256>;\265X\210<\326QP=\023KQ=\351c\027=\273\247\306<\366\221&\274oeJ=\360w\000=\346\034&\275\235\263\322<\362\351\034\275&\013\365<i\310\246;>b\030\274c\237\303<\344\276\367<q*\036\275\\,2\274h\027\023\2754a\007=0\346V=\230I\273\274\3652V\275\334\253\372<\351\315\006\274\221=\004\274c\3778\274\253\276\260\273d~\351;p\300\003=\212\370<\275+\222\010\274\335\236\315<r\366\214\274E\266\300\2733\232\207<H\313\300<zv\024\274G\350\316<py\001=\373.\252;\264~E\275\373k\310\274\334|\245\274\n\007\024\275\224R0=\301\322K\273\001\014]\274\304\266\006\275\370\366\006=\326\314U=\313#\234<\216H)\275\267:\333<_\264\265<4\201\'<\\\300\252<2\217\213\274rf\233<\t\216H=`\235\370;Tm\t\275A\304\034\275\006\340;\275\006fF\2754\302\246\274X\323\322<\221\304\325<Y\327\363<\006\354\351\274\035\253\330<\267\260\342\274.\000\003;\211\034\347<\333\371\267;^\377B=\233\221v:u\031\202\274\324~0=x\354=\274p]9=\347\322\223<$u\306\274jL\327<si;\2757\267\020\275m\332%=\370\256\377\272\345\343\354\274\207n\036;F%\335<\364nj<\225\363\t=l\246#=:\351\023=\356\'\265<r\235N=\365\311$=\370\256n\274J\023(\273\352\241==+\376\026\274\243\2152=\023\2160=,v\034\275j\371#\274]\026\t\275\276\230\336\272\236?2\274mh\320;\223R$=\021H\205<7\202\237\274[\304K=r\2475=\264s\013=;\016\377\274\352)\003=\032\241\304:?\005\370<\'7*=\260\343C=\003\213\025=gwM\275\217(\360\272\252\027\234<\363+6=\344\232\177<\033c+\275\304\376T<\256\310\352<\3536\006\275\305~ \2759o\372\273\354\266\365<Y\246\222\271\022\254\221<}\217.\275\233\3237\275\235Z\214;\245\031H=71\247;O\303/\275V\037+\275\345\204\324\274>\251\241<\334\335+\274\025oF;\243\244\250<\r,\266\274j\376==\247\026\177\273\r\357\026=\263\316\252<~\206\023\275\200\247\035=\243p\240\274\360\253=\274\313@D\275Z\2509\275\277\261W\2753?A<E.w\274x\375\352<\034\006\036\275\r\365\002\2758\\4\274@\002)\275\370\326K\275!5\224\274Y\333\312<\007\000\255\273\275d\242<\306\351H\275v\006\034\275\274\320h\273\276\246\370\274\215\334\352\274\357\357\246<\244a0\2757\303\022\274\242d:\275\t\371\340<^\017\207;&6\016=\317 \302\273W\350\006=\241o6\275\tG\2639#D\267\274\251\024\247\273\307\200\331<\245\0342=>\342@=\321\025\370<\317\335\004=*\2014=\026\237\223<\013\330%\275\227F\t<}\242#=\3565\326;\273M2<\227\366\022=6\227\023\275gM$= \007y<f\"u;\277\312\352<\372a7\2753!%<\325\333\021\275\330\221/=N\336f<<_L=\312\303v;\316\316\204<sh\003=3\227\314\274\236\005\347\273?\301\334<a\020T\275*\207\351\271ec\013=\375uT=\005M\214<h0\007\275\2162\373<h\316\222\274i9\270\272\215EJ\275\035X\231<8y\002\2752\020\\\273\232.7=\362\272\317<\320\252\217<l7N\275\r\355\345\274v\315:\275\313\017%=\313z\022\275\010\030\241<mE\252\273>\324\366\274\347\266t<\310/\010=]IN\274\332\2734\275uh\216\273\001\352G\275\024a\030;\273\022\257<\332\275:;\253+\023=\0139U\275\273_5\275Z\371#\275\023\225\315\271\330\375\353<-\317;\2759}\216<\204w\253<\3003\252<\001\210\304;J\3557\274\304\261\020\274\365\237J=\300\t\377\274\211\202q<R\264)<\266<\031=[\330\240<\003\233M=U\271N=\252\214\223\274\324\000\313\274*\327\352<D\303\005\275\022\242g<oF\217\274\274\210\371<\362I\312;\t\032R=\266\3143=\337\205A=-\213\233\274$\352\213\274\272\341F=kDu\274\314\372\030\273\203\317S=\367;\261<\363q\376;\rh\345<]mE\274\234\316\315\273\201&\361<\325\363/=\236\341\327\274\3719\031=\240\247\266\274\237\337)\275\356\2272<}zw<\007q\023=\240\231\340<s7\337<V\317;\275\276\001r\274\344a\027\274*~y<~l-=\333O\267\274\240\024\335\273\3675\356<\252DB=W\322\332<-\351E\2742[Y<\276\364\322<\032\207>\275DRM\275\340\214\007\275c\337;\274\370\270\350<u|:=\354N\310\274\231[J=\333\360\363<\227]/\275\274\316\203\274\351\336\024\275\031 \374\273\310m\373\274\020-\325\274\361U\002\2753<\347\274J\356\032\275$\034\223\273\326\232\331\274\326\314\310;O\002\255<\212\2550\275\033m6<\221_\032=\326\375\000\275C\010\241;.\374#\275\205iO\275\034\303N=\335@9\275  -=<\013\250;\267\344!\275%p\260<\2056\030\275K\222L=v\273:<\307\223\031< #s\274\255\275\367\274\035;\225\274\265|5\275V\302\336\274\026\222\314\274\312\241\215;\367\305\006=\333\313\324;\260\316\010\275\001\317\277;\004\371j\274M\0213\274RR\027=nN\255<A\0205=Y\224\304\274\337\347*\272Q 0=X6\'\275.)L=\202rZ;8\t\2149\314\216C\275\021\224Y\272\271S\037=\202\373\205<\231\027!<\204\361\020<\031\214\243<\251\006\007\275\343Q\301<9\256\331:m1\r=\3722\014\275`\3628=\221g\362<\243\"\306<{rV=N\241\305\274ol\311\273i\222\n=\234\222:\274~\221\006\275\270\0329=`}\313<\224=\345;\243\323\336<\001^P\275\342\013\267\274\035\321\177:?\347q< v\033\275\324R\024=\373LD\275\220\327\017\275\353\213!\275h\2659=L\t7<\374\204%<\017\324L\275N\205\007\275K\tJ\275\210\360 <hR\234<5\rE\275|#\251<;\314\000=)\231<\272\031\024A<N\335\350<IR@\275\235\350\356\274b\214\301\274\355\257/\274_\217\315<\301\024\004<*\306G<,\306{\274\231\033V\275Ql\335<\330G\2519\026\233\344<\\\372%\275\372\236\364<\317n\325\273\361\365W\274\213F\227\2749F\354\274H\247&\275xd\024=\210\350\226<\344\304\334\2745\2642=&o\177<\314M2;\365=\007<\313X\365\274\242\347L\275\'D\036\275e\215n<\245N\n\275\365\260d<&\326\035\275%\271\270<\212\347\030\274P\327=\275\306}\302<@\036\334;\372\230#\275\276\357\220<,\243\006\2755\320~\272G=\345;q\331\375\273\355\241\235<B\036\337\274\001S\366\273\275\273t\274&\306W\275m\214\365<Y\214\034\275\272\366\n\272rt\022\275\"\0338</\256\014\275\365t\255<\341\361\035\274\320eF\2748q\025\275p\356N=\264\256~\274\314\312\341\273y\264\006=!\324.\275\016\236\304;$[\241<\025Q\324<>C==N\035\000\274s\333\326\273\340^\342\274a\260@\274\273\242\005=\361\335\016\275_\307\375<(\223\r<\310Y\t=\224#$\275p\271Y:w\271*=\327U\323:n{\370<\225\3138<\346\332==\217_4=r\223O\275\347\341\254\274\004\245\202\274\031\003\272\274\362S[\273G\t;\275\2739\t=\225q;\275\3103\202\274\212\262\335<\305\272\277;\326\234\021=\232(2\275\243/\024\274\321\304`\274X\342\215:\014\3430=+\350\014=\365_\321;\256\353V\275\226vs<\250\376\030=\003\307O\275\261\251\025\274\244f<\275\316\375\203\274\003\205/=\225[\251<\233@)=nP+<\302\204\243\274\356\007 =\017\\T\275\221P\005=\233%\344\273\304*\376;w\374\324<;!\004\275\351\207\235<\252\020\035=\241\006E=\300\375\224<\363\r*\275\235\246F=\303\375:=\364\020\007;\316W\355<\323\2349=\264\004\370<4\024H\275%\002O\274<&E\275\215n\031\271\342L\315<\202\237\272<\233\3748=\344u6\274\007\270\007=[\330\017\275\256\236\205\273\3102\272\274\003\216\217\274\364@\246\272\213\022I\274\3410\304\274\235|8=\3654\307\274>\333\013\274\t\207\235\274)\331\020=\335\336\037\275\022\331&;\027>(\275G\202\032\274$\242G=;\212\363<\3259\374\274\t\206@\275\275\232)\2758\002\031=\204\261\205;4\213\300\272\027z\t\275\365\357\010<\232\177:<\277F\342\274o\241\032\275\370hE=b\3218<\3043\010\2758\214\367\274\001\360%\275\353U\250\274\001s\316\274>F\217\272\247b\025=\334\330#=\257\217O\275\201\233\240<Z\035\031=\374\250D\275\312\025\262\274\250z\301<C\023\026=\367\375z:\243\244\321\274\203JI=#\225P=\333\2200=t\243\035\275D\311\000;Q\203\002\275#\3769=\376Z+=\2224\213<\246\330\260<h\307\344\274/&\360\274\222:\334\274R7\204\274\237{0=\372\300\354<\003\341\207<7I/\275K?\254\272\370\277P=|f5\2753;>\2753\233I=\005\006%=\251\3313\274\343\302\250<\315b\201;\306\242\016\275\0132\030=in=\273q\031/\275\353\334-\273\256\240\256\272\220\332\265\274vt\322\274\014\251\000=F\244%=\020\327\215\274\nl\016\274,\347*=\325\303C\272o\217;\275U#\262\274A\007&\275\177\225\234\274\356\025\017\275x\233\001=\275\314\000\275z2\253<CO\267\274\215\227\224\274\307/f\274\005>\242\274\302\363&\271a\240J=\271\307\265;\355D\253\273\2336\202\273F\360\r\275\235\217\005<\202\344\022=\370\346\226\274\224\366\023\275VQ|<\367\036N<^Y\031=c\202\225\271\214\301\276<\367lD\275\257Ll;\267.\254\272j\251k<\017\203.\275\200D\002\275\341\333*:\373\037\027=)V/=\025\324\347\274\027v/\275\300\016\037\275\214\252?=\305\231\021=\244DK\275\030o\236<\374\255\320<J\010\251\274\017\217C\275|St<\205\nP\275\367\251\023\275\267q\326<\212^U\275\006\227\027<\276\211\"=z\326$=\256s\240<\252A\016\275d\241\255\2717\023\\\274\366\350\335\273{\016J=\325\263\002\274J@\271<\234\232/<\244\227\000\275&\270E=\303@$\274\310J\035\275\006\343,\275a\254\270\274\302\210\3719:i:\275\373\3558\273\225\2034\275\211y,=\263%u\274xJ\"=\352?b<\211\304U<\240Pn<\213@\003=^\242R\274\335\232\377\274\214\274\226\274k\273!<|\247\202\271\2143\025\275\335\331R=\320\215;\275\001\247\010\275\217\302\004=,iy\273\277\217\022\275\327\007\310\274\322\226\341\272\221\233\377<\213\223J=\273\301\037=d\355\304:\021y%\274\345@\222<\357A\376\274\346\363A=\345\300\372\274\365\260\275<\320\317\273\273\244k\034=\225\347#\275\2514\037=\261\267\343\274M#\004=\016\334\330\274\\\024\r=\317R1=\337\275.=V\255\035;\232\244\377\274\360\207\227;;\245W\274\234\206\252;\200\332\205<y\225Q\275\247\250\377;?4\201\273\320\324\364<K\236!=\343\240\241\272\375\267\016\273[\367O\275=\227(=\363\372\317;\373\217\026\275\252\257\253\274g\366\241<\253`\027=\215T\343\274\2413\034=2\351\314<t5L=\016\033\370<\020\363\310:\3228\027\273m\372\005=\306,\014\275\357jF\275\315\031\243\274]\325?<N\032\320\273\2666\006\275\377\352\n=\005\322P==X{<\325 \343\274\272\344\177;6\001K=\340\007U\275s\003\310:\354[\307;\372\347#=\311\2668<r\250!\274\257R\033\274\367|\016\275\006\257\350\273\005p\221\274\346s\367\274/\307\313<\300\237-=,o\203<`\'v<\rN\360<:\211\031\275\232z\361\274\230\266\300\273\353q\265\274\303f\036\275\223N,=\r_9\274M\222\036\272\257\250J\272\351\373\263<\033L\310\273fL\212<!\213\355\273\214\213r\274\241\rR\275\236\357M=\327B=<\010\353h\274\276\3652\275\316\025W\274\027X\310\274\211\222\233;\274\331\3529SuF=$\221\277;@}\t\275\230=\003\275\373\317?\275\345\210F;\311MA=x\2023\275\365\231\031\275\230~\245\274\r-\231<\356zS=\317lc\274\257\013$\274 c\370<\213g+\275\0255#=\345H\327\274Jj\021\275=\\\007\275\325\026#\275\212\251>\274k\302\373<+XT=\004,\263\274\257v\324\274\340\016S=\230\301$\275\261{\322\2742\006J=\254\",=\240\305\317;\263B?=\001\265\351\274\036(6\2755\205\205<Ti\204\274`\233<\275\301;\031\275E\250/\275Xa\247\274\'x\017\275\302~X\273\"\3677\275\336}\n\275\311\365K<h\361\320\274\203\311\245<Uk\253\274%\235\215\274\305\310L=\243\304\263<\373\367\206\274iS\203<%,\335\274\322\350\205<Z\010\017\275rJ\023=\307\345\202<=`P=\311\316\307;\253\311\346<\'7:<\206C\326\274\364\270\214\274\033\336w<N\3125=\224\272:=\267\334D\275 \n>\275(\200Q\275\233\337\224<8\330\352<\231pS\275\202D.\275\013@\017=,w\231<\212\3164=\256z;\275\3273\217<k\3160=u\313\273<O^C<\246\201\367\274\223;\335\274\256\023\024\275\225\005*=JT\\\274^K\226\274\271\356\257\274\326\367B<wp\245\274\263J\223<\343\3629\275\265\257\020\275\2038\035\275\205\204\347<\327Q\351\274\366Xf<\326\n\347\274\215\365\005=\211\245\256<7\246\010=\211N;\273#.W=\036\222\t=\353;\035\275\033\365\t=j\003\014<O\247\302\273m\t\204\274\304N\025<Q\3350<n\351\335\274\240\354\272\274Z\374]<E\"\305<I\224\272<TD:\275\344\266\362<\001Lh<,\333\016=\334\3266=\3265\206<\317\304\035\275\301\021\351<\037I%\2758qb<\200\353\000=\277c\301:\337\242?\275\227\354\017<a\306\022\275]O\206<?e\\:\375>U=$ \r\275\2268R=\n\0029\275\367A%\275\367\'\n\275\313\353$=:\367\223;\210[K\275\366N\004\275\264\002;=\340\\$\275N\260\t\275\274\277Q\275\205\022?=\037\205\270<\221bR=l\000#\275\201\036==sH\310<+\241\002<u8T=B\032\230<}.\026\274\377I\255<\2133\210<s\337\322\274\347\234\'\275B\276\216<\277\260\032=\315\275E=/V2\275Q\304;=M]=\274\224^\342\274\3675\032\274B\036\324\274m=\310;V\215X<\330\235+\275\023\233\324\274\320U\030=OV\316<\336\342<\274\027\344\333<\016\021\253<\341\"\273\274\3579\037=\202\330\312\274\275Y$=\213o.\275\307\363\215\274\023>f\273\305tm<\203{%=\270\234\226\274\276\300%\275\360\265\177<@\344W=Y\325\022\274\371f?=\211 \247;\232\357\023=\257\007\277<\003=\n=\364\367\213<\r4\001=\n\347\333;\307\275\260\2749\032/==\037F<\371\233\212\273\002\200q<i!\230\273\3532\013\275\355UE<\351td<\352?\204<G\031W\274\234eD\273\341\025-\275\177f\020\275YO\305\2742.\007=\306\251\267<$ \t\275jCQ\275\347\254@=R\276\2219\334-\253<\035D&<e\034D;\336\007K\275\033\2046<\204F\351<+\301u\274^\033E\275\237eV\275\"n\213<\007\025\216<\037\272\353\274\347\322F<NN\362<\331\261\333<V\330\253\274\267a\213<t\322\360\274\'\260O=\224\334\016<\371\204F\275\320X\366\274\364V\001\275\337uA\2759\263\343<\341\217\234</\342\004<Y>#==\263)\274D\245\301<\333\212\334\274\223X\311\274\331\352\035\2752%7\275\214\323P=[\333\033\275\224\364A\274SI\373\274\003F\262<\224\017\002\275\3003\364\274w*\220;.\3311=\304\3559=\357\3305\275f\337\"\275! \365<\252\3242\275\325(\036\275\376\260\027=\254\210\023\275\005i\375\273P5m<\224\263J=\256\217p\274\002%\225;\204\033\t=\376\364D\275\261an\274CO\224\274o\351K\274\265\003H=\360\002\266\274\200\260\001=\007\000\273\273+\335\037=m*\330<\300\230/\275S\033s\273Pw\333<ajQ<\016\215,=v\tF;#K\340<\200\016+=\257\037z</\375\317<5\t\216<\232O>=\306?\033\275\300\345\362\273y/6=\035\037,=\020@\314\274\232\267\364:\"\357J=GE\241<q\205(\275\3155\222\274Tl\205\274\326\274\224\274\316\020\357;\306w\325\273\035\3253\275^`\000=\035h#\274\270`F=\265S\236\273d\345\021\274O\222+=Z\2438=\361\\D<\300\n3=)\315\030<I;\326\273|\000\254\2744\252\"\274\27718=8\351.\275\204Q\300<b\265F<p\033\231\274\030\312=\274<\205\343\273\013=\031\275;>\302<ru4=\267\226\001\275\240O\000\275\3660#=y\301\036=TnK=E\215\336\274\331\214\215\273}eJ=\322\350\361\274\256\375 =\333l/=YhW;/\2269\275bu&\2752\324.\275\375l\256\274\367RO\275\203\211K=\344\315P\275\224\362\324<\344^\034;\322\001\274<\035Q\354\272\004\253\343\274mp,;\277&S\273\361\024\335\273\002x\025\275\306\304\200\273i{\322<\005\250F\273\301\243\346\274\270\343\020\273\031\235\334<U\342:=\213\366B\274\024\266}\272Vp\010=\375\316U\275\357\317\002\275\36304\275F3\343\272S]S=\340X\264;\237\026\016\275\013\222S=;;%=\267\231\201;F\0014;\303\002~<\2309h<p#b\274>\261\222\273b9K<e\235l<\376\035F=u\375L\275\200\215O\275\204\302\242<\302\256\373\274P|S\275\264\020\361:s\367\220<n`J\275\350A\367<\036\337J\275t\225C\275\007\240<\274\323F\355\274Ky;\275\025Y\025=hS\025<\006\211\334<\274?A\275\222=\031=\304FV=^t\033\275f\016V\275.\001E=\357t\273:\0033\370\274RQC\275\214iQ\2741\2751=!\307[<i\004\016=\342o\204\274\313\263:\275\267$\313;j\224t;\035\366\353\274>8H=\360\322*=\033>Q\275tm\r=\'@;=!\275\213:\273d&=S\374\271\274-\206.<\371C\332:\363\036\014=\254i\260\274\367$\276<\367\206q\274\304\322\206\274`\350U=\033p\321<\n\276U\275\000\277\003\275\355\330\260\274 r\221<60|\273\3077\013\275\202\321\017<\323})=\244\355\375;\250\017T<\315\321\006<\277}\014\273\367\0046=\0023(\275\255\353\006\275;\032\'\275\252|K\275A-R\274\364J\230;\347\0259=\344P*=\376\335\004=x\367\265<\303\327v<]\237\007=\264uV\275\376U\353<\2711\310\274\230\276\273:y\377F=\231\223F\2754\005\006\275o5\014=o\214\010=\245\335\014\275\000\3609\275\224&:\275\203\211U\275\036,%=J\022,\275\344\334\241\274\330\034\310\274\310}M;\253\271\255\274\353K\024\275;\364\315<`HK\275T~_<d\'\351\274q@\243\274\313\031C=\255\372\"=\221T0\274\376\365\032=\361\376\372<\237\335S\274\335\216\216;5h,=\035\2408\274\215\327\004=~\263$=\230\372\320\2749\266\230<\304\242E\275y3\010<\305\317F\275\t\335\261\274\360\310 \275r\037\332<onN8\263\247B\275$)\001\275\206\335\311\2743H$<\336}\276<\3753\"<\304\0004\275<@P<\245\231\314\274\270\253\033\275\2737\r=\322\236Q\275\215\331\327<\210\313B\275\217`\252<\324\270\333\273\314\355B\275\360\347\001\274>Z\005=\234\035O=t6H\275F\261\233\273\211\230\033\274\r\374\014\275V\300\000\275\227\336\025\275\260\237\221\274\224\277P=C\0234\275\345\342\250<\274\346\017\275\005\360\354;\353{\003<\356\2411\275\235\373\010\275-3\021=v\243$\275\007\314\021;i9\016=H~#\275\336\301<=\025t\326<\341\3619=m\223*;UR\315\274\221\361\014=\326\246\n=[\'G\275\345\217!=z\013\230<\256\221\233;I\325\314\272\312\325\024\275\320aL=\215\250W=\014G/<c\304\203\273\350\306(<[\227|\274\0273\024;]\002\263<K\224\240;\212e\316\274\212hG\274jh\026\275\314>\237</\023\264\274\031\336\270\274H\003\275<\036\240U=\026G\007=I\"2\274vZ\354<D\257\302\273\244I7\275\307\017+\273\001\374\375</\377\255<\217\255\327\274\211\014\330\274\310aI=\236\203\314<\322{\034\2758@\235\274\214\303\257\273\345O\036=\230\356\376\273\361JQ=\327\314H=\026-\016\275\356[\200<y\005Z;/\222E\275P\034P\275Ph\343\2737\335\027\273\313\032-\274/\2319\275\201\027\'\275[\264\347\274\215\221Y\274\320\2543\275\325~\221<\360\033\230\274\224i\002=9\240;=\344\2068\275\026\240\027\275\227\n\377<\270T\331<?$\254<\306\332)=\242\360\023\275\007\2525<\313\262\245< \242\311;\037\350\355\272\035\215o<\'\013\270<\014\365\025<P\361\t\275\305\211\300<m\333\275\274\247\260\261;~,\254\274\225\031\270<N\344\017=\317Q==\224\242Y\274n\033\307\274{\224\243\274\027\222\017\275\244[\353;}4\014<I\300\024\275\254\221\337\274\351\215\354;|\312@=iz,\275\327T\241<\263%\225<\302\016}<\326d\322<7\275-=\202\206\033<>Ce;C=\232<\271\204\365<U\240\350\273\335\330p<\354\0030=\347\2763<\235\"9\275%\363\245<\370F*=\271\377|\273\362$\035=\0208\366<\321\031\364\273!.k<\367&\261<D\353;<\205bB=\370\203\323;\235}M=\226\256\227\2731\224/=\232j\247\274\234\2435=A\\R\275\236\211Y;\025\333\021=\324\030\250<B\321\204\2734\216\221\274\323\r\002\275\362\302\211<\363\215X\274\256\3464=\337\316\256\274\026\000\322<a\356\034=\323s-\275\017\254\215<\241\346\037\275\331;\377\273\313\343\263\274\352\336\267<>\227\\<\321Y:<S\034:\272\222S3=z\244\024\275\305|\350<3l\257<S\267\332<\345\3076=L6\016=mK\332\274\027;\037\273\342S \275\336e&\275\002~\'=O:!=\277i\355<c\273\020\275\275\321\177<\230\021}\274\305\357P\275\243=\r\275\2141\005<\262\003\035\275\222\270\377\273RH;=\027\315W\274\017]\347\274\r\207O\275{\230w<\035\333\215\274\3754\241;\200\r\256<\347g\332\274\227\206\307;\363\220\007\275\373lI\275`^\372\274\353\237J\275\3214\271\273\203\340\036\274#\202T\275{}\324<\335\232\243\274\233\023\037=\264\264\210\273$\254%=\355iB\274\246v>=\305\276\273\274\270\353S\275!9\352;\316^I\274:8\034<\265\203\003=)8\016=\026i=<\300r:=\233\344\333<7\251\016=a\2124\275\2023\372<z\330H\275>\363\340\274\026\016\001\275\26262\27591S\274hz\371\274Xh\332;\221x\313\274\245\025H\275\353\3244=\002\325\030=Y\032@\275-\203\271<y\032\301\274I\274\303\273\023TG=\203\2231=H\302N<\352\346\332\274\242\2160\275\025)\032<\310\037\007=\te+\275\314\027\007=\246\275M=\363\3300=w\2649=\365\006L;\3135\023<v[\320\274\332\036\300\274\232v-\273\010\345\222;\n\226W\275fm\007=O\010\034\275\354\005,=s\037\264\274\027\365>=\033\367-\2754\033@=bH\214\274\360?:\275A\306=\274`a\255\274\354\374\344\274\374\376\035=\005*\014\275\332\366\245\274\250\356\322<\243\316\213:\3460\214\274\264\020\253:\263\321\014=\203\013\247<A4\364;q\270\031=\221c\364\2745\372\221<\375\177\262\274\233\024l\274\006\361\023=\023\326+\275\357\216\256<nO;=\226\354\022=\344\266\035\274\326\232\007\275\232\n\024=\216\241\211\274rF2\275\352\264\320\272\034wb\274\315%\003<\336 \025\275\252[c\274\311\017\246\274\004\272x<\340\373<<\374\301\217\274\217\337H=T.\025=C\371\233<b\345\377\274=\274B\275\232\3665\275\177\231q;\2243\t=\004\300/\274\267\031\352\274\306U0\275\344\020@\2757\362e\274c\244\016\275\3078\362\274\256G\364;D\324\217\274oJ\334\274\317\201\206<E\335\223<x\344H=\211\311\245<Yl,=\362\274J<\327s\334\274\211Y9=\002\323N=\202f\354\274\370\025H;w\357:<0\204\034=\322\023\n<\273;H=0;\236\274\330.\253\274\224F \273\367\021\350<\341E\027\275\214\344Z<\345\0147=]\322\217<\343t6\275\363\027\314<r\220M\275\352%<\275\255A\330<\003*V=\300a\320\274^\230\037\274<J\341;N9\026\275\274\211\017=\202:\254\274\372\027f<\372T\203\273]\226\010\2741\223\016<\t8\021\275\223\342\217\274\270\2019=\217\365K=\366*/=}\263\317\274d\262\024\275\223\315E9\2310`<\275\251\362\274\331\325$\274\267\305W\2756\303/\275\336\013\036<OJ\003\275\313\377e\274!\326<\275\332[\033\275e\361\313<\241\177G=\267U6<\321\221@=r\241D<a\000\201\274\004c\010=Vc\000\274\320R@=\276\013S\275\201J\370<bp\317\273\215\220\315<\342\374J=\003\266\035=\240r<=Tc\376<\314\037\026=\200A\362\273\311\005J\275\262+\006\275x\3341=\306\247\"=\372\216\247<E`\032\275\203\217\245\274\370\272\327<\222\0035\2754\375\r\275\310\242\254\274\352\217/=\323\230b<\237<3=\r\205d<\206i>\275\241S\013\275\301\346\312\274\305\377\341<\036w\027\275\307\344\254<TW\033=jc,\274^\016\220<{b\030=J\036\313\274o\177\213\274!\276\205\273\271\234\312\274\266\257\241\274\260g\344\273\031T\030=\250\234\027=\253\035\247<D\326\306\274\377\177\027\275\231\256\004:6\034P\275\353\304\266\274\225-\355<\274\004*\272\036\324\366;L\023\035\275\304\014\021=\236\321&\275\350\214<\2755\334\020\275\312\317\247\274\260\005\002\2757\025\302\2738\224E=n\241\263;A4\316<\215\276E=\202\337S\275\016yD\275N\220\375<\244\273\'<D\325#=\222\202*=`(\337\274\n\343\021=\276\231\323<\264\210\346;\303Yp\274\331\360\022<\370\204\365<\37667\275\'Il<\243\034/=!\355\023\275|\347O=/\227O=CW:9\014\005J=\245\262\244\274\307O\037\273\006\302&=\005NF;[\t\022\275\3601>\275\234\023#\275\347\250\333\273\035y\272\273S`><\033,\256\274\327\t\220\274Lz\002=6,\275\27498\320<\314N\347\274\341\000\277<\204L\000=\347r9=@\227\264<\336H\213\274/\267\231\273\365\376\032\274\260\360C=\250\206\020=\264\013+\275Z\243\237\274\007\237\277<Q\263\262\273\307\346A=\207m\r\274\300<\371;G\347L\275\377\335\271\273\301\001\304\274C\n\004\275,\312\n\273\267\310(<S\312\274;\214%\024\275\251\035\230;\303\356\202<\273\263N<\220\2617\274\252\227\205\274\244R;\275\311X\364\274\270\024\373\274\332\000\347;n\334\022=n\231\276;\266\224\210\274\220\312%\275\212Y*=\252v\326<k\263G\274]T8<\242A=\274q\3024\275\365\2432=\256\210\226<$mJ\275\222zI\275\265\370\321<d\321\r<\361\002\'\274\005\010\224<\250\345U\275\367\377\037\275\357,\275\274VB\343\274\"\226=\275\216\t\013\275\037\331[:7\325\212\274\222\177\314<\021\356\245<\266??\275\364\"\033\272\201\002\354\274`\343\216<\327\307\034=\242k\003\274\026\301\326\274\224\325\317\274;\205 =e\255\230<\242\330\266\274k\217/\273\01741<\245n\025<`\010?\275w\305L\274\021\267\'\275d`\325<S\232\207<T\277\010=K\246\260;\2244\036\275\016<\373<C\275\t\275)Y3\275\022\270W\275\202\273(=5d\314<5\177e\273\216\021\347<\" \217<\252\270\314\274\256\307\234\274\357^\217\274\024K=\275\250\374\001=\003\3144\2752%+=A\rC<S\334U= \222\304<L}\305<\2535{\274\324\0162=\006n@\275d\264C\275Z:\260<\213\3665\274\316\024\372\274\326M\000=v\017\320<\320U\037\274>\326S=w\375H\274\001\263N=!C/<\346\360K\275E^R\274\376\030\022\275\0137\266<a\327\023=!\214\267\274\346\2640\275^\250\007\275YE\014=\251U\307\274\377\333\233\274l\343\010\274\351\316-\275<\026\304<M\262\216\274\204\330\331\273\r\346\364\274\037\316\311\273\005\364\367\274\3166\377\274\0353\\<^\177\377<\030\311\221<:C\325\274\002Y\363\274p\331\225\274\002\306\254<\245\000\334<\205\356\016<9;\374;\240\253\365<\343\215C=\005\343\276\273\306\210\333\273\300\244P=\316\244E<\336\3148\275\t\306N\275\373\337>\275\026\327\342<\007\317H<\257\020\005\274\206\023\341<\373\253\024\274\202v\315<\367\030\207<y\t\225;\"\361\235\273\301\327w<\216\202\017\275\036]\223<&\317A\275\r\353\032=\022m\355;\276\234\364<b%\366<?\035\232<\333\344\007\275~@#=\005\367\014\275\200p\006\275\252\376b<\303\315?=\351\224\002=\371N\007=\'\033\352\274\324pS<\r\213s\274\263\036\2057\3312E\275\036Wd\271\310L\260;7?\030\275\234\376\017=\377\245 \271/m\"\274*\373\331:!\323V=\333\233\020\275\245\375\376\274{\370\020=\316X\007\275\347<\021\275xJ\037\274\250\360\236<\312M/\275g\303\021<\256G\307\274\353\005 =\n\200\n;\211\020\237<4\333\212<\356P\377;\010\267\322\274X5Q\274\366\267\370<:\032\332\273\214\312 =}\2317\272\205\004\n<\374IW\275\013\205h<2\201\304;v\254U\272$\277x<\352\031\330\274\350\037\201\274#\311\233:\257\005x<Y\346\366\274\350\364\025=\272\203\314<\316~B=w\312\010<\031\002\362<\006\234\217\273\025S\264;W>\216<J\034\006<s\016M=\375|\315\274\021\017\271\274\027\017:\275\324\373#=\265\363\200\274\216\334\263<1\346\211;h>\266;\243\254\221;\014\271\004=\330\365G\274f\377\r=\263j+\275\0138$\275\321\313u<\210}0=;\313\025\275\370\342\252;\310\0350=\336\013\355\272\224m\301<&\262\213;\025\363 =l\026\031\275\206\316\321\274p\346%\275L\311\010;\226\333O\275\332\002\323\273vU\t\271\331=Q;\315\014V<q4\307<\037\331\036=\023\005\324\274\320b\000\275di\222<\207\253\302\273\010\036G\275g\002J\274&R>=v[\340\274@9\363\274\010\n\346<\nT?\274B.\024\273\026]\204\274\027\357/\275&-~\272w\241\236\274\324S\373\274\23043=n\246,<J(\010<or\313<\206\352\376;\223\320\021=R\363/\275\315\306\213\274A\374\330<\243\253\007\275\t\303:\275\032,&=e\366\210:\273\276\363<\202)\342\274\tu\372<?\026\002;\020\354\306<\007D;\275I%W=8\276\237\272\331\364\300<\002\000=\274<\236\016\275\345\264\266\273\306@B=}\274\305\274\306\\\000\274\265\230\013=\321\234a;D\241\200<DT\260\274o\220\031\275\375\211\007\275\204\270e\273\354\036<=x\324\023\275q\220\002=j%\"=\3326\3749\036\266\226\273\016\2068\275D\355k\274\001|\236<\200\031z<J\322\211;\320\247\270<\005\267\250<\255\030}<\221W\304\274\340\215,\275\032^\002<\364\333,=\253.y;\363p\223\274\246\376\372\273\002M&<G\315\360<\256\356\200\273 \026\302\272w|I<\227o\260\2736\322\021=\262\016\002\274\325\2446\275\203k\177\274\241a\240;\217\034\202\274s\237\313\274\340\251z\274\240\023N=\030\005\014\274\010\013$<6\n\n=\234d&=w$%\274\247\"B\275\336\333\243<\013S,\275h\355\240\274\242\235\034\275R\373\214<J\230D\275:\303\313\274\204\362\254<\017X-\274\222\320D\275\244\310\235;\016\252D\275\217\327\301<\033\316\001=Z\020C\274g\364\007=?\033\030=\014\241J;\037\333Y<[\332J72\272\034\275JO\320\273D)M\275\222\245\312<L\032\006=Z\006W=?r\211<dH\375\274,\226\007\275`\232\003=i^B\275\325F\322\274\210\306K=\326b_<\275\231\375\273\301N,\275b\025N\275\331\256\337\274Q\321\276\274TL\202;\357q\t\275\356c%=\'x\234;;\265\207;\234\306\"=\021\351Z\274E\2549:\366\261\362\273\262#\355;\224\216?\275\210U(\275\264\017\2409\232\251\252<\016c7=\t4\027\275\221\313\221\274\320\352\021=;\337\007=\016\311\223\274\215\0024\275V\315\035<eQ\005\273\307u0<\0202\240<\331\300\245<qL\000\275\030\212X\274r\0015\275\325\337\273\274L\356\267\273\303\217>=\315H\236\273\373T\026\274C\256\030\2749\324J=G\325\002=:\253\217<\376\225E=\031\3533\275B\001A\275.\3338=\341\301\r=~\\\032\275\3642\330\274E\217\331:s\363\325;\357b\034\275\027!\223\274%C:=\020\\:=\014\362\361<\001\236\014\275\203F\024\274\024q\025\275\275\0208=/\317\367<\372\376\310<wwV=\365\3579\275R=\256<o\335%\275d\342\020\275:C\025\275\003\242P\275\374\037\222;\363\036\000\275A\233\243\274r[\177\274p4\010\273\201\243+=\356|\026\275\316\200T\275giI\2748\274\350\274\350J\035\275H8\023\275b\243\'=\333\345M=\367\226\213\274\253\341C\275\236\376\014=\214\222(\275\321 \242<\222eU\273\350\\\"\274\362\201M\275\200\014O\275\241{\'\275\212\013\216\274\016\204E\275d^R\274\000\"\001\275\212\2371<\307\"\274\2744\307T<`\366\227\274y@\230\274F\277\344\274\026\271+\274-\202L<\337{\205\274\232\014.\275d\325\304<\213\342\023\275\357\331x;\022L\311\274\356\205\207\274#u\013<y\353\346\274_;\243\274\204]\372<a\241S=A\365a;6\252!<\214L\026\275.2\322\274\254\027\017=\243\240\010=\267p\034<o\2043\275<\000%\275\211x\023\275 \2118<\344\252\231</5U\274\275\230M=\310\271\234\2745\347z<l\t\246\274\326\277\200<r\233J\275V\3179=\265@)\274\352\261\347<\251\211\231<rp\366<\323l>=J\256\023<\003\236T;\031g\374\274\200\300?=\0277e\274\210\241\202\273z\363z<\003r\354\274\355\260\031=Z_\004=j\263\006=\0018\265\274^\313<\275m^\004\275`x-\274\222\345\312\270\241\007<<PX\004\275\363*9=\230zM=h8Q<6&O\275cE-\274A/9=\221`\301\274\241\013\010=\\\213j\274\342\270\232<1Z\374\274x}\023<\001\257\334\274=\313\313\274~\2215\275\312\\\222<`t@=C\235V=\361\274\202<=8\351\273l[\200<&q\033=6\t\316;\203YB\275\364\357\205<\243\232\225<\336\252\350\274\013R\267<\244\360<=\336e \275\031\237#=\252\311\206<\001\005(\275\352\311\031:\275\242A\275\002\236\371\274\345! \275s\215\360<\017\364\325\274\354\304\337;[\244\000\275\360\254+\275ipQ\274\202\271(=/\013a<\254\213;\275\312\375\371<{\321\031\275u\304\t<\203]S\275~\270\301;\313\241\356<\274t\374\274\371\025\363\274\250\003\240<\247\0020=|d\331<\244\003\242;\037\374\234\272\367&\227\274O\254\014\275#\264\231<\300\273\257\272J\3272\274\224r#=\'\007\177<\323m\374\274\267\321\276\274w`\214\274,\271\236\274\376\220\031\274l\305\360<k\\\001=VP?\275\023\366E\275\231\216\020=\\\203\332<\230\361\253\274\334\377\315\274\240\0317<\246E\253<d\251E\275q\223\253<@\3378=?\r\334\274\2372\256\274\240\227\'=\263\020\330<\253\2553\275\246y\037\274\207|B=r_K\275f{j\272\214P\010=Y_\027\275\211\212\r=\220\0139\275\027\207\034=\033y\033:N\022C\274\255\212\343;\315&\366\274\375\346-\275juH\275\003\302h\274\231\002C\274\2376,=\245h\374\270\026\035^\274\203\350a\274D\264k;a\323\227;A\\\221\274q\n\032=\320\003\314\274_8\022=\332\323\250\274\252\t\026=;m\230<\314;\302\274\300\262\234\274\027\002\375\274V\263\030\275\241/(\275i\362:\275\274=#<%t+\274\003\234@\273:\255E<\266\327>\275\354E\227\2745M\215\274SE.\274\304j,=\265\3256<s\3163\273\247~=\275\024\376v\274\2544I\275X\236\246;\224L\024\275\215\360\332< \303s:\016\016\001\275?[$\274\350^C\275\271\276\266\274\301\345U\275\220\017D\275X\312\017\275\202\017U=\245\0168\275<\230K=\213m\343<1\347l\273\211\272L\275\247\2266<\276u1\275\226\345\030=}<\326<\033\376\336\273\331v\235<\274T\245\274\216\0015\274L\026\222<B\355\350\274\014l4\275G\023\"\275b\344\324\274/\004H=P\204N=\234g\315<\177c\023=}\343#=l\323\307;\'\231}\274\236\032\027\275\260\212G\275\342\'\210\274!1G\275\027\275=<\221\333-=~n>\275&\212\227\273\261\302\006\275\260\226\'=!sS=!\'\356\273\327\367\031\275\3039\035=\275\314\343<\367\336\233\274v}W\275\331\243\377<\212\016!=K\262\207<\275{0<\3542F\275\005\354\253<\03319\275\263L\351<\312\250%\275\344\374\024\275~\262%\273\201R\364\273\244\254\212\274;1\010=\336\320\377\274\023\274\360<\270X+= w\252<y\2730\275\261/\250<q\307\243\274\257\247O=G\324\356\274\024>$=\034\343Z:\344\2179\274\016\301Y;\246x\t<l\2614\275\3151=\275\nz1=/\223G=\2076\036=\321\342$<[\266\t\275_J\203\274\326\001\220<4c\255\274*\307V=\217\354\254:\272\035\341<\027`L=\3649y\273\223\350\302\274\335H\266\274\354Y);\253\345%=%\221\031\2749\316\014=\0074.=\261\262\366\274\336\304#\275\004\223%\275\335 G=\362\220\374<\242\242_\274\230\027\021\275\'\347\217\274al\035=\r\006>\275`\303\025=M\256\200\274\306\036\224<\254w\032=y\177\272\274\274\\Q=\016\317\t=\272pa\273%\271:=\357\346)\275\253\362\244;\253G\t\275<>\255\274E\003\342\274\220\206\364<c\n\344<\346\315\230<\366\005\353<\253\355\204\274t1\331\274:\334\366\273\003-\306\274\214\315\037\273c\233\316\274\364p\n=\332\036+=~\356\354<c\340T= \217\003\275p\270\t<7\311\016=\207\374m;\304y\032=|\020\220;]\244S\275\235\'V\273\332\244]<e*\376<\360\030^\273\331\264\317\272cd4=j\270\210<\226\261-\275\237o\270\273\250/ \275\212x:=\344\034?=\374\301\365<^\315\366<\247oy;rm\215<\202m\277\273|p\004\275`\005\234;\036\000\333<Z\255\225\274\232\347\253\274\003\336\363<\021\332\020\270<\3445==\233\006=xZ\017=\234\023\204;\037\276\213\274\'\235S\274\315\244N=\232\244\202<\'\207\031<\235\272\301\273J\243\016\275\002~K:D\273\324\273<\327\353;\234\320\"\275\241\257\216<\207\213\n=\235N\341\274]q\321\274\005\263\375<\247\2206=\306\235+\274\210[U<g\001\006=eN\037\273\025#t;{> =\006{M\275O\216\020=\370,\217<A\364\323\274\327=!\274A\321U=a\321H\275\rVK9\204\371z\273\206&\024<,[P=:\334\251<^\021K=B]*=\234\353|\274z\243\020\275\205T\001\275\000`\265\274\225\342\307<b\332\322\274r\201B<\350>#\275\013\244&\275\270\021H=\346\333Q\2742}\035<r\3177\274a\n\007<2\035c\274\360\305\344;\022\224\255\274\270\325K=\377\373*\275a\017N\274+\347\315<\n\250\024<\240;\034\275\224\213>\275\002\036-=\354a\302;\301OV=1\016\210<\022\232\374\274&7\017\275C\020\213\274\311=D\275\315aS\275w\312P<e\255\020=u\272\326<\346\206k;\027_\347\272x]T<\275\213v<L\333B\275\324\247\236<\260\347[\274\345\247\320\273\350+\301\274\217+\341\274\334]M\275\310\313\222\274\rH+<\234\303\247\274M\326\263\274\247\0372\275\236\013e\274.\220\305\274\025\027O=\306A\337;\021\342\235;2\332\363<[b?\275\005\322\037=\'\275\373<\371\271\024\275\006\327\t\274u\254P\273\242Z\365<\340G\261\274#\370W\275\227\3572\275\031&\302\274o\021\371;\255\177\325<D\017\256\274\321R\227\274f\204W=\243\337K\2752\033A=\370/,\274\201\025\316\274l\0160\275\243\363\246<,\373\037\2749]\316<\325m]<\023{\201<\203?\203<\232\363\246;I\024\020\272\2134\226;!\201I=q\245\010<\351T\001\275\277TC\275,\343\340<5\342\325\272Q\301\025\275\2606,=L\3258\274\353A\033=\373\336[<\345\311\016=\000\002&=3\222R<0\352\240\274\022\365&<\237\310\t=\314j6\274\347\026N=\367\262B\275\001\010G\275\361\2579\275\'\361,=W\275\222\274\013\'.;\026\314\262<\202\225\003=\356\223\372:\347}T\274\025\240\306;\365\310\222\274\306\355-;\024bh\274.\376\360<\030\034\250<\325g\201\274~/!=\026m\350;jC1\274\272}\231;\242P\314<\002\221\032=cm\026\275\324n;=\355\252\352\273\304\352 \275\227\245\007=\230J:\275\013\"A;Nw\265\274e\362\314<\212\234R\275\333\031\332\274YPF\275\0029\367:\017J3\275C\244F\275#\371;=S=m\274\010`\254<OU\2369\305~2\275KT\200\274\331\276\344:g-E\275)\235\r\274f\222\257\273\037\\\240<\325\302\021\275\\\314$=R.;\275(\351};\276\267\316<r\331\256\274\037\306\022;\320[C=\021\242^<\235Y/=\352\311P=wQO<r@\001\275\035\302\030:U<\325<\300\364\242\274O\213\021\275nz>\274=D\266\273\333\024C\275\016\251J\274\224\372F\275!\333l\274\013U$\274_E\023=\345\227\201<\316zN=\263R4<\'!\215\274@*/<\006:_\274\010\342\336\273\230\021\027\274V\020*<\336\371\352\274\333\t\315<\314\020\354;Zo\206<;\275\033\275\030o\351<&V,=\357 \365\274\275\021\257<\340\370\022<\201\177\212\274\203*\356<L\337\261<v\242\332\274\3717\262\273 \302\346<\232\374\034=l\020\331\273\030\014\226\274q\2421=\022U\250<X\345\332;\205b\351:U\207\260\274\202\017*\273\024d\355<xL7\275\335\233\003;2\302\254<\244L\323\274==M<\302a\323\273\335=/\275Gb\013\275\370*8=\337\272#=\260\235\347<<\r\345\274;<\023\274\027\025B=\231\235!\275x\020u;\226\342\301\274\235\007\016\274\216\327\244\274\305;y\274\275\213\'=+Z\266\274Vo\227\274\204*l<E8{<\352\257\341\2747(\303\274\216)\177<\362\233\274\274\014\302;;\342\317\243<\2237\035\274x!\230\274fE\003=p\031\036\275\340\2161\275\275\261G\275\367O\307\273E+|\274\305\0258<4\355E\275r\207\205\274O\203\r\273r\017\221\274+q\003=\367s\010=\002\232O<Q\017\343<\334\317\n=\205\346\305<\251e\025=I\003.=\375\367R\273\312x\307<>\202;=\016\250\263\274)\010\204<c\363\371<\266Z\231\272\242\336\"=\207RU\275\014\2637<\333\353\030\273\351}\251;\275\270S\275C\004\022=\265\010\004=>\342>=\264\3607=\177.\001=\306\200\357\274N\314#\275\335\212C=\261\352\323\274R\361\372\274\206\353\202\274zrE\2758&1\274g\321\241\274\226\027T\275gH\275<$~\372\274\000\246\313;0\177t<\236g\023;K6B\275\331\213\211\274\365\254\273<\"[G\275\317\270\t=\213\236\037;\371a\300\274\346q\230;\233TN<\001>\034=\t\246Z<\316E\202\274$\020\007=\276\252>\274)<\256<\2176\205\274\031\330\373\273f\024\020\275?l\325<b\023%=Q\207\035<V}&\275\231\255#=\354\317B<\025GW\275[\224V\275\326d\n=\265\352\227\274\244\rQ\275\306I\345\274\250\001\303\274i9\275<\227w\"= \253\272<\250\203A=3\257\024=\006\260\236\274\236\367W=3\330\206\2748K\224<\256a\317\273\006)\240<\264\361\201<\243\313\260\274\305\253\344\274\220\320\324:\212\3448=\216\243)=;\247\032=nz\023=\245!D\275X\007==\323}\321\274_\261\351\274D\230\264\272y\261\322<\210X\016=\035eH\275aJ\340\273`Y\345:\241\245K\275x\353\177\274\013\274[\274\036\226\003\274\"47\275\303\233S<DJ\305;3\270G<\252\271j<=\317\321<2=\210\272\264x\036=\320\264\206<c\247\312\274$\364\020=\270\346A=\030}\274\274+\0009\272\217^\316<\232\304\255\274n+\355;\346U\257\274\0172V\275l\030\023=\375N,\275\276W\225<_\016\037\274U\001<\275\353\027\327\274X\217!\275\245b\221<\321W\252<\222\275S=\213\027\303\273\026o\375\273t\026 =\252\300\271\274v\254z<m2\001=\377\030\332<\355\320\010\275\307\005\271;\376\236_<\311\r\'\275\370\014\253<\t\tE=\346\305\004=\217r*=\212y7=L}P=\370\023F\275hN\025=r\324M= \302O\275\276F\351\274\016\335\346<\203\200\364\274\0070\353\274p\353\252\274\356R1\275\200\231\030</J\364\273\353\335B<w\263\253\274\030b\003=u0\254\274\277l\326\273\006wF=\247\225A\273\326\333F=7\021,:\251\262\031<\325\375\001\274-\033\002\275\013/|<\326\303\264\274\332\373U<\237-_\273\253\246*=\314;2;\034\035\034=\270\022\263<\323m\016=b{\022\275\317UO\275\3233\236\274\331\303\022\274\320=S;g\261\311<\010F\357\273\314\2336=~\375?\275\270L\031<\260\336H=\2754\346;\033}\353;t\006E=\r\"\200<\234\231?=\265\273\006\275\271F\254\273\253s$<V#\316<\270\275\375\274\021\357\017<\274\333\222<L\307\321\273m\316P<\371\364\316<>\346Z<&M\275\274]Y\027\275h\274==\267\357\004=\021\003\341\274p\376\274\273t\252\217\273{h2\275H\301\310;\223\255/\275\006,\017=\220\364!\275\017_3\274A\341\225;\031\366;\274\357\367`<\223\0162<\345=\247\274J\013)\272l\305\r=&\036\311<,\037\017=\275\325z< \033)=\266v1=\201\236\374<\342\317\030=\226=q<\276\021*<^D\353\273!\324\225;\302\240|;\260\216\305<Q\346\316<T\217\307;\035\352\332\274\353%\026=\261G\310<|\373?=\276\210D=\204n\t<?;)=\224\034\377<7\201\023\274]O\002\275\232\355&\274\177\344\023=\376\264\212<\237\353N=wn=<*W\256<\237\320Z\2747o\216\274\321\177>=\255(\026<\3740\322\274\264~\346;$\367\270\274a\232\034\274\177\275\234\274_3\356\274\000</=JF\371<\354\376\021\275N\314T<\026T7\275\022X\344<!mE\275\376\372\213<N`q<\204\223\353<\333\363\307\274\020\352\236\274\362\237U\275\377\004\034\274\312zR=\331\2544<N\020:\273f\343\377\274\233\310\013=\277\2144\275?\306\256\274\020[\274\274\314\020\245<\332\n\021\27574\025\275f\033\027=\030\0051\274|\003\225\274|\362L\275\312`Q\275\'\013\033\275\334\256%=\245\275L\274h6\204<\226~\213<\220^3\275\273\255]<L\240\360\2731FS=\372\243\034=\233L\035\274 >\035\275\252\004\031\275\0256\343\274\023#\327<\317\372\355;\262\000J\275\010l\322\274\272z\202\274S\256\267;bc\333<YB\321\274\324\340\302;( 9=\014f\233<\367\'\257<\2211\277<\002\227.\275\352\334J:\227\277\r\275\316\034\034=5\370\237;x\177\r=\303C\257<6\354\335<rV\021\274\275&\316\274@8V=\242\225\000\275\331\3475=\301\250\367<2\327\210\273\232J\025\274\364\366\351\273\261\202$<`e\215\274\343\330\240\273\014\312\323\274?\3437;T\300\233\274-P!;\003\265\"\2750\214\321<\231bA\275\255\307N;\241\335\r\275\030*-\275\212z\242:ap5=\005\t%;n\216H=\202\356\271\274\026\260\335\274!a!\271\346H.=l^-\275\353\2502;\263\261+=YG \275c\010K\275\n\204\261\274\260f\360\272\036\020\007=\241}\t=\216\253\024\275\313\227\250\274\232\267k\272\336\235g\272\016\243\324\273\247H\307;^\226N\275u\243\002=\373dm\270\322\340\365\274\032\342.\275n\312\206<\377\n\274<z\375\t\275\324\213\232\2743\327\250;o\360\227<M(M=&{\t\274\371\324\257\273\365\355<=71\334\274o\212<=[\270\005\275\233 \265;\352\\\315\274\013yW=\254\325l<\243\1772\275\302\004\021<\307i+\275{\2318=f\005==\261\356-=,,\316\274\033\033D=v\030\217\274\323L\"\275\327\244\036\275\311\357\2729.\376\010=b\211\257<9\346\277\274>\337;\275\314i9\275\332\310\302<^\254\225<k\204\022\275\311\374\016=\271\237H=\333R\r\273n\272?\275|\373\205\274\"\2010=\344\234\030\275\215\t;=\32587<\306\356E\275*\301\026;\341s\371\274\360\220\275\274\r3\000\275\020\251w;\256\275\255<#\007\376<\202]#=\313\351\n\274\203\206\364\274\215\305B\274\327\345\332;b\2356\274\360\241\002\275O\330>;om\233\274\355\255\337\274\206\024.\273IM%9mN!=\270\212\200<\240s6;SU\032\275\013\262\270<\200 \305<\366\325\243\274\212\233\000\275\370\276\267\273I2\024=%\351\363\273\333z\204\274-\025\304;r\340*<\220\376C=,\340\236;\"\026\263\274\\\232\010\275\313BP;C\0252=\266\366\304\274\200\2165\275A\273\002=\000XA=^\247?=\022\023\352<\250\300*= u\236\274\\\230>\275\311\224\r=\213{!\275l\322\322\273?\267)=\300\215n<\223@\025\275\203\2279\275\025\221\203<\264\266\225<R\010N<\323\263\213<\037P\030;\027S*\274\257;\014=\222\311\336\274I*A\273\353C\324\274`\010\350\273\035x\035\275\303[;=y:\336\274\232\321\004<\232y\365<e\027j\2744\361\'\275/O/=\274H\216\273\213\252\362;\331\353\302<\335\025\356\274\322zU=GB>\273{JM\275\270\345c<\031\353\024\274\245\225D\275\340E\344\274\010a!\275\250\036\342<{\237\363:\364\0162=\020\231\\<\270\320\362<D\202\003=K\r\231\274l\235W=\237\251\035;;Z\027=\314\027p\274\224\271\311<\016\304U=h\206\344<i\242+<\335\243)\275k\201\010=\340\357\342<x\000\255\274L\346?=\250\204\020=\202\217\002\273s\001\372\273;]I=\340\017\253<\207\001\250\2746p\370<\340\340\034\275LXl\274\212|\025\275\276\263o\274\322\260F\275\372\206\345<\227j <\255\" = &\246<\351\305B\275\203q$\275\350a\317;\332j\341<\311z\227<\200\302\346\274K\317B<\333A\'=]\3410=\242-\007\275\202\2501=6\240\002\275\255\263\016=?/\277\274\347*\366\274\274\260\255<\236\373\272<\013vP<7\242\372;z\372\016\275/\324\230<S\302\303\2742e!\275H\256\223\274\362\235\223\274\271x\036=Xv$=WB\254<\300\000\001=\373\003)=\312\312;=\341\2477\274D0;\275J\326\222<(\354\311;W\230\347\274\246\246*=F\344\260\270O\017%\275I-;\2755\205\360;}\024E\275\341\3514\275?9\271\274fl\254<\004\255\325<\257\353\260\273\010\211*\275\375\362\355\274\033\0325=m\343?\275\3459\242<\232\217\312\274Q\364\211;\343G\332<\006\323\010\274q\340\324<S1<<)8M\274\240\214&<\030\205\300\274\256\312\024\275\243\275\"=\237\246\022<\205\201\252<\32387=\013\027\005\275\261WU=\322\330\342\274h\376\360\274\007\365?=\027y:\2751+z\274\"\226\376\274\004\2758\275\231\303\263<\376\354\353<\372\003u;\367\023R\275\016\263\365;\264\236I\275\266\262$=\177K\323\274Q\212\303:\345\245?\275\'\236N<h\277\024=\2735\177\274\177\003\333\274\307\377\254\273\371%N\275\274-\016=\000\025\014=\335\375\200<\241U\235;M }<\372\3330=\355\026\036=y\335\037\275\273\352\254<\336\234E<\274*\242<\265\223$=/\273I\275\001\234\025=*=6=n\351\006=.\2673=\003\302\323<\256v\024\275A\271\217\274\226\270\236\274K\270\210\274\343%V\275;\213\201<Rz<\275\307?\250\274M&\265;~U\t\275\0166\016<\030\231\361\274\022\303\215<%\363\202\273\250\342\035<\307\275\016\275\367m}<xm\206<6\241\014<3\231\341;\023\')\275\260\003\222<K\301\036=7\226L\275\305\363\312\273\343\034\004<\020\2139=\177T =\033\330\233\274\212\211+\275\336k\364\272\360\010\302<0\337\024\2733\272\322\274\226\036\322<\246\333\037\275\353\255\214\274\274[\324\273w\347B\275\323\3672\275h@\247<\r\024\276; \027z<_\312\275\274\202\037\324<aPH\274\361K\201<\232\004\021=\247\343b<%\345k\272\242\331?\275\303\004w<\257\205\n\275=\321%=\251\370\216\270%\335\331:\240/\022\274\256\223@\275\351\217\037=I\336\031=\013\341\326\274t[@<\260v\r\274H\327\366\274Y\032H=\263&\311\274\231&\212\274\020\224\006\274w\n\026=\tKN\275\265\360R\275Bt\341\274\013\013(\2759r%=\217\377%=\342n\273\274\242 \377\274\031\256\255\274\2410\017\274\216i\377\271,I\244\274\035\306l\274\217p\301\273\356\257V\275\342u\213\273\244l\010=\302;\241<~5\030<#a\272<\310\234p\274\255\323\022\274\356\177\261\274\337\254&\274\300\013\2549\346|0\275rz\036\275\'\271E=\373\275\320\274\212\363U<\252\2537\275\014\273\025=\373\005O\275\177\326\022\275g\013\351\274!\355\000=x\217*\273\320\205\276;-\037\271\274/\360.\274\301\354\371;\211\215,\273ekJ=\014\322H\275D$\017<\360\344\017\275\333\354\212\274.t\030=,\216\322\274\301\033I=\004\202z<\\5\241\274y\206I<\021\007\014\275u\236:;\306J\225\274=\372\030=\213[\247<\252\260\357\274\277t\274;\001\265\034<\340\313\007\275\350w\025\275z\320\352\274\272\377\n\275\365\345<\275O\034\322\274\265\321\021=\364|\023=\302\252?=xS\216;\314C0\275\032\222=\275P]\255<he\017\275\275\323\242<\277\231V\274EH\251\274\226\330\006=\t&\364<\311\235\327\274}\304\035\274C\271W;\231~H=\300\314C=\320\2221=(\360^<\274\214W\275\217\341W=3\246\"\275_\203h\274\251D\203;S\034\310\274\255\312\334\274s\367s\274\361\215\010\274\201\2166=\347\343\023=GMU\275\262.\022<\373\201(=\003i\325<\330:P=\372\246\227\274\016\205\357\274\255R<<\026\006\027<l\326\002;H}2\275\331\347\264<\026{\246<D-\201<\307\365J<\364\3536\274\354\345\236;r\314\255<\325\215\037\274\243\312K=\r5S\275\367x\306<\307\0133=\244D\204\274\315\2003\275\335\007j\273\262\241\026=[\260\027\272\321J\262;A\205\260<z\360Q\2758\371\312:\362\360\344<\310\345\351\274 \215\303\274Qv\026\274\357\351K\275o\332\017=\010>\221\274o\002?=\032\221\315\274\2705E<\233\271&9&\214\232\274\370V@=\377\261k<R\234\036\275\006\363\250<$\250\037\275\013\2462\273\202\243\345;\r\274n\274\271\033\013=P\022>\275\027\340\277\274\234\254\344\274\026\371\322;6\316-\275M:A\274\'\365\242\274i\230\254<\037\323?=|-\002<\313\335\263<\207\325\025\274k\036\037\275v\243\007\275\333\266?\275\360HM\275mQ\006=\034l=\275\240\241\347\273\325gs\273\002A\001=\237\330\232;\374# \275Q\206)\275\266\t\3419\032\226S=\301\255\332\274\213\233\303<B\354\332\274B\3257<A\002\034\273\260\0209\275(B\207<\200\264M\275/\014\350:\0000!\275\356\275\340<g\351\014=zt\245\274\354\315\363<\342\'\347;\204\374\371<\274\270\356\274\245fH=\334\202\337<?\025\272< \301\303<i\201$=\242/\224\274\020\275\031=\365w\004=\254\340\003=0\351W\275\263EI=\331F\001\275\313\314\210\274\2664R\275\302\035\347\274\"\004\337\274\230\321+=\252t\000\274\335\224\265\274mm\346\274K<\211<\367\365\007\275Q(\277\274\226\'\"=\025B6=s\r\344\274\341g\263\274\346U\340\274G\370\322\273@\017A\275ES\314\274\241|Q\275\340H\\\274\014hT\275\276\254N=\276\226A=\354\224\220\274\027j:=MA\033=\3506\214<\265\223\034=h\223\376<\355\372-\275\320}:=W\300\312\274\226!\004\274\364\341\017=\306/\366<;*\247\274M> =p^\031\275\365@V=\177\347*\2756^@\275zC\220\274\242RB=]\373\240<\245U=\274\"d\314\274\203\213\014\275[\362\027\275\\\2010\274d\223\355\274\213\177*=J\312\'\275\017\2451=\253\262\3709\2614n;`\212\026\2757\234[\273]\266\031=\376\314i\274\365X\241<\342\260:\275g\273\n\275W\351\347;It)\274\331\177\031\274\303\257==\355\210\301<;\007\323\274\300\2116\275\371*B=\016\205\2136\353\363\230\274P\373G=\262\361\344<\221\215\305\273\025`R\275\234\353\230;?\332\030=9\302\023=\321,;=\271\020<\275\225\t\356<\227\271\013=gj\350\274\367;\027\275\302\256\036=-\025M\273\370\342\002=\373\227\276\274\035gM=\376\263\030=\374\003\306;\366\000\247<\261V5\274\314a\316\274\257\237\014\274\252\037\006=\301\027\031\275\344rW\275\013L\232;# \206\274\212\302\032=\312\374\361\2744\2269\275\004o\024<\n\302\033\275\3716\000\275\301b\333\272\267\217\347\274A\212=\274\261\263N\274\370\235>\275|;\272\274&N\320;=\032\272<^\327\215<\"\006@=\345`\264<\203\023\302\274\031\001\235<\003`\273\273\177\251\312<\225CH: .\007\275\350\017\037\273\275\023\036<OK\036\274\300\2733\275<\3675=\225\2074=\274\023\222\274\367?\352\274\354;e<\324\212\251\274[\321K\275\201\241\007=$\360\203<\013(\025\275\317h\004\275\377\020\036=G\300\316<\t>\321\273\213\300\361\274\022I\006\274}\243\231\274s\212\354\274\010-\362<.\273K\272/\310\005=q\010\300<Wa\355\274\016p\213\274\260)\364;0&C=\216\271\375<CW\224<#\333b\274R\265a\2740\002\312\274U\232;=\245\366\216<\257HK\273\256\207;\2757\266F<}Z\235;\306\025\255\274q\334\217;\r\227J=\204\362\253\2749QF\275\201\321\010\275\203\3228\273G^\337\274\006\331\376;$\0104;0\220\026=r\033P\274K\351\013\275\311\332\306<Y\222S\275\014u\253<\321d\232<\341u\035=\001\005\010\274\017\3700=\330\3613=y\276\241\274\221g\370;.\222\236\274\026\226B;\350\375<=\355\031]\274\321R\327\274M)\337<\370\366\036\275\346d\204\273\201\322\340\274FX*=\354\317\005\275\020\021\177:\344\024q\274Ovm\273\023\243\034<\326\006\317\273\360\020\333\2746s\305<\0134\341<\036\230\202\274\226\n\001\275\333\021-\274*s\243<\340\331\276\274\267p\377\274\025\341\202<\274\327\240<+\206\362<u\261\254<\233\325\311\274\234\331q<\031f~\274\351\036\002=P&\020=\224w\r=\216H\324\274\216\\\035=\024\332\231\273]\335\033\275\344\330Y;:2\277;\035\312M\274\257\243\224\273I\\\371<\354\020\323:\241l\027\275\245\276\326<\324\350,=6\004\373\273\362@O\275J\"\203\274A\225\203\274.\317G=\020\353\333\272\2514\257\274\2432S<-\351\004\275#vE\275\204\207\237<|\026\006\275a\366\025\275p!\r\275\334\211(:\220\243\001\275C \342\274\013\023A\275\350\024O=lN\242;|$D=\311N\217\274<\372\320<\342\361\365<(\265 \273\345R\034<\"KL\275\024g\237<\377V$\275\203\0062=ON?=\361\3764=^\344H;\233Q\321\274<\241\335\273\222\362\304;LK*\275Q\317\014\275\273\251\266\274Wx\322\274a9\245;\205\200\322;\016\310&\275z\275;\275\251/\225\274\254\263&=\005\234\335\272}\224T\275\314d\211\273g\207\223<\311\300C=K\367c<\306\016\354<\021b\206\274\304q\324<\014K\204<^\221\020<\235~\r=T\3472\273\260\" \275\034\266\320<\027.\352<\255\244e\274E\363\004\275\013\243\213;\216\000\2269\346\243\374<\320\023Q=&\036C<dhb\274T\032\332\273W\3160\275&\'\326:\t#F=?\276\022\275\024@\225\274\245`\326\274\352\337\005=\206\013\276<[l\361<w\002\241<\376\300B\275\2033\245\274GVJ=\2267;=$P\272\274w\353R\275~f2\275w\312\010<\245\312X\274\337],=\333\224:=\310SP<o\200c<3!T\275\204\325\245<\003\200\r=$\304\037\275\236\2366=\257-\014=\212\245>=\262.@=-\210I=r\265\000=\272\255\302\274|W1=\325 \"<\267\222\246<)\366\250\274\021\263\253\273#`\246<\004M\r<\342-\023;\316\371\023\275\227\341(\275\202\314\207\274\016\007T=\354Ip<\313?\252<7\271\334\274c\200s;\214A:=\273V6<\310\367\356<\213(9=\221\271U=(r\371<S\334F\274:b\256\274b\226D=\322\312\321;\256\270\327<G\357\013\273\202\010\023=e\201\000<,\036!=\'Xn\274\022\366;\275\231\334K<P\205\357\274\257\r\r\275\354\374\004=y5?\273\374>g<$\024.=\215#T\275)F2=A\200\000\275\016\303\310\274\331F \275A\3078\275\315MV\273\007L\013=_zV\275\n\373Y\273\026\200\232\273\224\375E=\223\272\253\2737@\355<~l\242<y&\302\274\t\034U=\346z\204<1\245\n=n&\205:\371\363\335\273\205\353\225\273\371\010\021<\337\300\334\274\361\226\034=\300#\237<\r\353\272;\020A\n<%SX;x\0031\275w\375\037=\311\357S:\304\006,\275\313Dd\274d7\363<y_\210<\312\276?=+E\027=\030\304\240<+-\304\273s\270\261\273\017\360!\274@<R=C\223E=\216wg\274!R!=\332\0247=\210f\345<\3625\001<\241\036,\275\341\316R\275\256`.=\001\371@;\2644I\275T\336\014=\2059\024=\340@\276\274\331A\024=A\236\'\275U\255\306\274\215\331$\273\177\371(\275\033\262q:\371\367\271<\367\332W\275.\337\334\274h\001y\274\026eC=mi2=\3369\342\274\030(\017\275\003C\034<\271\354E\275\316\250\357;r\224\330;\267\340\251\272\256\237\034=\250,:\275f\035U;6&\000\275R\275#\275\376\213\310<(VL<\354\233 <\023D\244\274\241\231\366\274\t\365\t=.9-\274\305\021\000=\2022F=\275\260$\275it\270:[]4<\314)F\275\325\257\n=_\022\276<r\235S=!Ai\273w\263C\2756@\216\274\301bH\275\364\363\302\274}\361\351\273\227v\367\274\330n6\275\023 H=\'\201\034=\326\014\277<\3020\344<\306\274\260<\030\306S<\334\231\324\2740\341R=(\355\366<\223\301\300;\244\017P\275\031\313\022=\251\206\316<\315)=\275Z\301)\273\010\013+\275W\3767=vI\000\273KK\221<\260\254M\275\177\244T\274\236LJ\274QY]<\271\t\000\272\002\312$=/\312\370\274\274\306.\275\222\211(\275\241\003\263\274\325%\023\275B\277\003\275,\010\375;\371\332\211<\242f\330<\305\203\350\272\\\322\030=_\235I\275\336x\005=\331C\332\274?\331\352\274\346v\340\274\"\017\260\273\005\032\367:\305\272s\274LP;\275\273\'\374<\212_W<.\022S\274K\212\346<\310\036/=zl\226\273\001\016\302<:\345\247</s\303;\225\257\017\275\250\\\264\274\210\262B=\266\304 =\215\340\r<n\276J\2759\3609\275\020\253\245\274d\323#\275\347\2019\274-\316\314\2745\352\220<x\227\025=\306\322K\275\277\3410\275x\0074\272\225$\270<%\361F\275\257\365\234<+b)\274\230+\331:H%A\275\305\332\003<A\223\213;\331g\217<\272\023\313\274r\026\033=\320\341\350<\307a\026=M\177\336<\211\244m\274\304\270*\273\032\030\364;=\217\026\275\357K\016=\243\215\035\275~\226D\272g<K=\225\262X<]K/\275\023\030\335<|\025@\275\312\030@\274\305+L\275\210\227 =\215SP\275\031\3362=\2714\355<n\232\271\274\004\240U=^\242&=\342\276\272;.\271==\227C\014<\353\000\270\274K\"I=\231\021\374\274><\275\273\310Y\260<\301\250-\275\306\277?<Q\346w:\266\036G=\350\207\251\274\'P\003=\272\257P;60n<\000L\366\274ft\253:\"\2245\275\366\n*\275\206\200\020=h\234\362\273\303I\302\274\\\240Z<U\200\017\275~\366s\274\347\246k\274f\0060\275\375\276!;oN\t;E\305\031=\313\017E\273u\377\354<.\202\343<\020\201\030=Dc`<1\223D==\367\305<\032\353C=\017\177\364\274\266\250+\275^\330\025\275\257$\345\274\367\325$=\003\0040\275\321Ub:iN\340\271\232gP=_\003\035\275\2740\\<\311\036\'<\362\213\311<\312]\022=jY\034=\310\t\233\274\254\250s<\331b:=\376sM\275\254P\205<\242c\261:\236R\t\274\220\206T<\000\370D\275~\034\007\275\345\001.=\n&C\275]\206\372\274\346\361\224<8\200o:\035U\236<\336O\323<\036\352@\275\350\204)\275\366\036\023\275u\r\253\274%\321\312<k\300\306<\007\244\200\274f\027\004\275\230\310\032=\036s\"\275$L\370\2749\222\r\275)qH\274\177\233\021\274zz\202<\267\351I\275?\315\r<\213\007\227\274\373\363n<b\352B\275\233\344\351;\313k\330;\354y\352\271\222KF=M~\016<\330\214\261\274C\237\010=\207PZ\271c\037-=\236GE=\016=\253;\366<\251\274\357C\240\274\031@\243<\237\363\037\274K\244(\274\200)\263<f[\017\273D%C=\025\316k<\365\274L=>\016\002\275\275\243m\274\300Jt\274\026\371\367\274\224s\226\274\355\240\345\274\212\020K\275\247\006\347<\226\202S=]\366U\275\361 \266\274N=\026\275G\013\024\273\34416\2741S\332<n\305(=K*\347\274{\227\256\273\333\363\240;\223I\314;^\231<\275\263\3770=@i+<\003a.\275\333\007\243\274\226\332@\275c\016\020\275\003\3729\2745s\312\274\307@\013\275@\266\006=oxS\275\317\\\310\2733\2242=U\361\243\274\354\374\035\275j\326.9|\305\333<`\014t<\307k-\275a,K\275\310c\231<m}\001=\230\3439<\222\023\344<z\361\276<\373\341z<\234\330*\2756\354\025<Y\234\330\274\236o\221<1<\362\274\006\207\r\275t\240\234\274\356\353\302<\377\207\272\274\255\345W\275\254#$\275\'\033K\274S|\345\2741P}\274\201\367\272;\\\377\234\274\300\224\242\273\344\035\301<\205T/\275\000\257\037\274\212\333 \275\215\343\263\274p66=\0036\002;\314\371\"\275L\177\254<,\215\334;\013\350\224<\177O\201\274E\253\330<%\352\021=|,\027\275\r\025@\273\204e\203\274\254\004\301\273\274\032O<\307\342\010\275t\321\250<P\327\n<\225\365W=\025u|:\352a\003=D\253\020\275\010\346\221<\205\374;=\257w\302:)\3464=$\3024=\017\255+=\260\335\265\27452\317\274\227g\004=\n\267\032\275\315\036\345\274M\2339\275\247\225.\273\364\365\344\274\017\256\365<\020?D\274D\026\316<\307-A\275{\3455\275\203\370\264\274\325\357\276<OY\3339|71\275\206.\276\274I\2530\274.ZV=B\272?\275K\003g\274d\024\256;)^\345</|V\275\276Q\263\274:H=\275\374\353\234<1!\014=\372[\304<[\315\000=\016/<=\326\327O\275\353\331\000=\235S\231\272)\230\034\273\356\0018=+\350\232<\035\246};\363\304\310\274\244\271\020\275T\300\337<\005LN\275`\277d<\204\227)=\\\215\323\274\255S4=C\t\215<\211\236|:\222&/<(\004\274\272\364*\317<\360\034J=J6\013\275\311\322\000=H\254\354<\313\001\337<\303=\264<?\332C\275\340\023B=\007\020\025=I:\022\275\210S\257\274\354\370\210<\372\301H\274c\210\363<rN\343<\274\272\324<%\036\262;\001\371:=t\2409=<\354.\275daw<a\301V=\027\230d<\344\006L\275eFL=4\224}\265\031\375[;\315\250\t\275\177\221K\275\347\035\005\275\2721-=^$]\273K\326?=\026=\316<{\004[<\247\026A<\324\223V\275\211\303\264<\245\235J=\277\316\344<0\201\312\273\251\2147\274\277\2502=\272\t\244\273\357\257\001\274\236\272\207\272S\241\322\273Y\2058\274#P\300\273\265\300\006\275J+G=\215\2667\275\225G\030=G4\023=\027\201?\275\344O7\275\335k\t\275|\030\264\274\232K\370\274\204\317\212\274\032\334\371\274\354n\375<\217m6=\315K\264\274\002#\002=\226\350&\275_N\376<\'\300\351;r\023&\275B}3\274\026\366+\275\340\353\034\274\307i\013\275\"\377W\274\200\0205\275\362/#\275\225N\303<\301\267M\275XT\025\275\237Z/\274\263g.=[GV\275\350\341N\274\334\031*=q\324\367<a\301B\274\371\332\311\274p.\257\273 \302>\275\247\265\350\274\002`.\275TR9=\234|\214<\314\355\365<\333j\373\273\323\003\251:\360C\270\274*\017$\275Qn$\274\020\324\301;\363\257\010\273\334\356!=\230\355?=f\211\013=0\331\336;\211!\376<+\3343\275B\205\326\274\216f4\275YZ\226<\367H(\275;\301\261\274\3625i<J\"\000\275\313\222O\275d\206W\274~\302\374\274\036\366\223:\325\301\321\273\230*\"\274R\366\301\274\027\315\030\275\302\255\r=0\005L\275j]\362;F\007\006<\350%7=\303\205\241<,\311A;\37414\275\330\007\034=&YQ\275\226U|\274\375\232\262\273i)\203:X\023\373<C\272\004\274\"qS\275i\337\207;\276\274\276\274*\302J=lR\007\275\323\342\345<\357\345\006\275>F\300\274(\345<\275=\366\002\275-\204)=Q\317\377<\323\374\370\274\357G\020\275\"\244\320\273\254Rh<^\251\024\274\027\223\013;\365\032I=\312X\034\275s\022\376<\212X7\275\214\241\266<1\3778\275\000\321B\275I\366Q\275\235\220\017=\233;\215<7i8\275+\240<=\245\361a\274r\222\320\274_\314\027\273\325\207\353<\374\226\273\273LQ$\274\353\2620=%\343\357;\007\355&\275\222\026\026\273\210G\030\275\3529\336\273\333~<=\345WV<\274)E\275h\222\305<\272\316a\274+`\231\274_\022\333<\014p\003\275\2274\036<3\341k\274^\236\017=|`,\2754\027\020=\257?\205<XF\243\274(\316\022\275s\267\233<\rh\236\274\351p_<U}\325<\323\t\"\274\333\333\000=n\214o\273\365\234\374;\264-\251\274m:+<8\031\330:\324\3204<r\251\013\274W:I\275wWU\275i\n\220\272a\357a\274\255*>\275UE\"=\2207\004\275\003\320\327<\r#\274\274)\315\324\274a\332\215<z$,=\220\200\320\274FO\027=\276\220\324<\207\305T\2752\030K\275\363E)\275\357\2476=\330L\036\275\316\221H=\004\253*\275\230S\360\273\363jT=\265z\313\274\244TP\271\214\264\252\274T\316\207\274\"\205B=\t\221 \275_\032A\275\037\340t<:\364\240\274\007.\023=s\034B\275R\002\224\273!\'*=\266\247\365\273\214}I=\245\213\301;\306C.=#G\227<\225-\376<(\372Y;\350\264\013=\216\244\277\2745\206\341\274W\357z\274\304\003\037<\247\203.<\265\342T\275\211Y7=\350@\356<\210v\306\274\016\275\203\272\302\026\037\275:9\304\274c\003#\275\233\343S\275\274?\350<\311\3106<\347\341\256\274\323\336\r\274\312\212\001\275}}\246<\301\257S=\003\233\002\2756\344Q\2752\001\017<\000\372P=s\362S=\004\n!\273@\236\n\274\0249 =\225.R=\332\243\000\274\250\244\006\275\344;D\275l!p;\224\267\361\274W&z\273\326\340\025\275\024\201\016=\314.\"=\322eZ<sJ^<k\322\235<\313\021\272<L\220\356\274\260\354\t\273\014D\345\274\017\230\225\274\3476\267<\212\301\033\275\307\251\036=&\341\350<\r\304\024\275\352\337L\274\227\262\212<j\2433\275\021\315.=\210L\225\274\253\217\322\274X\237\'\274\262\215 \275\214\335\030\275K\037Q=\207\260A\274\245\311\014\275\343\335B=u=I\274\270\363\233\273@Y\340\274>y\016\274\004\341.\275}\370\213\273\256\033D\275\002X\344<\255SC\275!\r5\274G\362\234\274)\350\316<\215\035\322;\307\313><\243\234\356<H\026\236<\377K\036\275v\242.\275Zp\327\274\2511J\275g\233:\275I6\007\275\330\354\002\274\222\321e;=\213i;\177<\340\272\017\241\354\274\356.H=A\313\003\2729~\';\222\340=\275\321\344\267\272\356i\301;\211\321\007=\271*w\273\356\212A=\371\201\332<\367.\232\274\221\220\016\274\232\336\351\274\027r\303\274\306\317z\274\006)U\275\333\372\261\274\230|A=\300]\252;\rX\227\273\313VE<\202\343\366\274_\2111\275\021*O;\250\030\234\273\374\341\306<_\372\320;\347GE=Gf%=\335qV\275\260\341\366\274\342\310\324\274\204W$\275i\347\026<\001\263?=\252g\274\273\275\006)=Z\377$=\310\213\302\274C\352\322\2740xQ=\016nq;/5D<\342(K\275\245\273D\274I\3158\275\351\020K=R%\271\274;}\021\275b\017\010=\243\375)=G\265\314<\370\377E\274O\221\301\2749\004P\2755\026M;`|\271\274^\345\021\275/\025==j\215\357\274T\025\336\274/\261L\275\214\330W\275\303i$\275\337\270\216;\246\255\010<\2436+=\204\361\275<O\243\223\273\205(\352\274\014\350M\275\210v\334\274-\373F=\204\252P\274\251^m\274OG1\275\372\367w\274\341p\337<\014}?\275\266\007\253;\363\356\365\274\210m%\275\037,\024\275X{\237;;^\237\274JB\311\274I-\200\273\323|\016\275S\355~\274\325!\022=\353:H\275\351U\305<\352\023\340<\214\333\307</\356\216\273\241F\246\274\375&3=2\005\213\274\2225#\275\027\365\233<\335\3002\275\330T*\275@#Z;z\363]\274w\311P=)a(=\224\353A=\250\314\365\274\317\304E\275b\211\265\274Ms\207<\371v\371<O\022\366<\306\'==\353\266\222\272\304\333T\275z\'\215<\237.+=\027\267-\275\030\233\001\275\257\355\226\273t\007\031<\357$\260\274\366oH\275\344xL\275q\n(\273\301,\265<\024\220\254<\212\320\335\274\021\247$\275)\330k\274_(\036=\003\215C=M\236\370\274\007\311U=\260\tD\273\312d\251\274\332y\021<\253M\255\274H\023\010\275Q?\377<\004\363\220\274S\253\345<\334\342\250<\250$\376;\351\332\314<\202z\023\2755\371\335\274m\340\016=\212:F=\350\302\026=\262kx\273\341]\037=V\003i;bq(=Y\n\317\274\232\2118</n\370;\237n@\274\031\260%\275\376\330H=\202\010\371\273lw\370<q\345\244<\200\2366=b\006z\2732\377\250\274\331\225\337<\231*-\275\034\307\033\275\357o>=Q\3719\274\201\334\r=GP\010<\333\353\227;\322\247$;\'\306#=\037\301\271<\01009=Q\373F<\230\274\2778N\377\007=D\271-\275:\341\306\274\336\023\276\2738iA\273\317\270V\2729A!\275\372\324\025\274\234\247\001\274\204}\332\274@\231\021\275N\314B=5n+\275\317F\301\273\243\005R=\276tN\275\371\276\n\275\360l\023\275\024v\032\274\262+b\274\276\204\010\274\263\266\032\275\326\374|\274\215\311\016\275\371\023\007\275\357\032\250\272]\3001\275\345\002\233\274X^\303\272R\032\037\275\245\367\031=\334\241\024\275\014\023>\275\031U\253<WK@\274\302\200\234<\231\274U=N\255\262\273o\027L\275\325]\307\273$\211&\275\356\371\252:\2218Q=\370}\025;\200<M\275x\205\010\274[\rW=}2\002:\365#\350<\'\201\310<QA\230<S\356T\274pg\021=(P\n\275\t\273?\272\032\267!=\254\3715\275\331\270\231<\266\261\010=\374\236\021=_\206\202<e\221\036=\372\211)\275%\220\023=\215\205\022\275\254\024\014\2745w\312\274^PM\275\334\330\316\273\252\025!=a\036\031\273\242\207F<&\360-\275\305C;\275\345i\300<H\000\177\274\002\310\t\275\266a\017<\026\352\007=@\254\251\274M\374U\275<I1\273\323\264\346<6\2172\275\226`\330\274\320q\177<\335\033\275<,s3=\004q\214\272&\177O=\241\220$<D\243\003<\314y\036=\303y\n\275\270\234\214;\036\200~\273\230\346!\275\364~\345\273.\004J\275\323\217\301\274qA\333\274;\\\314<\020.\030\275\371\335\206<.\316K=d\346\357\274\013\020\206;\256.+=\216\\x;yg\375<#h\022=\034xB=\274\212$\275\364?\364<e\352\020=`iJ=>\270$\275@\357\013\2739\222B\275N\247\264<|\033\374\273\274\335\036=~DN=5\351.\274\271\252\177<\002b\020=\352\253C<\340@1=\343\232\201<B\200\212<\266\346\222<\307\347R;l\016\250\2741\274\033\275\233fL=\207\203 \274\2109\217\274\316UH=\273\316.=\264\260h<r[\031\275\377h\332<U\n\340<\221\022\016\275\016E\240;\374Y9\272\332a1=tI\006\275\201\227,=x\371\023\274\363#e;\265F\363\273\272\306\351\274\336S\255<\274\316\347\274\237/\232;\033\322\362\274\235~O=L\262X;\320\204E=\032\216\n=\307C2\275h\340\016\275k\362\004\2741+/=\241\177\352\273\300O8=\225\022\245<\366\014\022=\t\250\344;\016\326\345<L\302\014\274AP\325\274H\257s;\355\250\022<\364i\372\274\013yE=6\005{\274P\017\317\274\323\t\365\274\233n\335<\216\204\270<\356S\217<\220/y\274U\231$=\272\037\371<d\244\023\275>\314\317\274_\004\n\273\207\0051=8\0106\273\"s\366<\022\265\031\275\343C\013=\2460,\275\243\025\255<\027\377\020\275\010\2165\274\001\037\352\270(A\033\274\316LC=\2708\303<\016\264L\275\201\314\217\274>\225\004:,\033\263\274\307\005\317\272\212(\307<1\'R=\240\007\016\275\211\343=\274{\363 \274q=V\275\232\205\035;\276\314\035<W-<=\023\002\351\274\216\022\003\275BiD\275\231\266\330\274\312\0262=\002\037\325<\223,M=\377F$=\001Z\r\275\310[J\275\270\246\211<L\263\361\274\004cF=1j\320\274\322\351l\272b!6\275V\004\2329\262\210\362\274P\222\202\2739\037u<i6\032\275$\374\356;v57\275\007\014\024=\004.;=y\213\264<\204g\255\274\233\335\n\275\261\247 \275\270\277;<\010\221\030\275\373\262\320;I;L\275\340\221\315:\266\331\2139\330\270\256\274\361A\323\274*\226\214\274\020\030S\274:\2178\275\314?D\275l\000\266\274\265\275\311\273\331\260I\275\273a\241<\372b\005\275\031\256\367\274\013\304t<v\261\023\275\355\030\316<\375\317H=\302yG\275^\005\005<\0070v<\336\313\024\275\365t1\275\261\222S=\300\210\363\274\246\251W=YL$=\345\234\022=67R\275\363\302B;g\357/\275t\240\317<\342p@\275\377\227\356\272\326\002x<\243\"\212<\034\020\262<\227!\314\274y\2732\274\350\350\3077\017ZL=\202q\261\273\312\375,=\320\362\252\273\212\224%\275u\274{<\237+\001\275\200*;=;|\021<^\\\351;\3544\325<^\'Q=5A\235;8\000\324<\342\026;;a^\305<_@\022=x* \273\006\2744\274{UM;PM(\275=\233\302;c\377\";\3055\027\275z\374j\274\310\345\276\272\001\352\030=\006i\272<e\352$\270\033\341\250\274\316F\232<\331\362@=E\010\230<\217&<:\247_\272\272\247>Q\275\247_J\275\356\232A\273v\304\322<H\263\026=\220P\366<\025x\3319C\031\264<\356M7\275\022\235\010;\213J\007\272\020)\233\274\343\337\240\274\266\351\321\274H~I\275a\354\324<\307\2256=\t\345\251<\014\330V=L\265\237</f\t\275\322\256\320\273\364[\025\275\036Y*\274\250>\311:\2637=\275\017\\\240<\223\256P\273Y\221W=~\253\n\275\373#\202\274\257\004\377\274e\264\331\274\177\201\332<j8r\274\005:\t\275b\025\205\273+\323>\275\277/\000\275B#\224;C\250r<\355E5=\241\352\300\274\370#7\271\000*,=\253\0051\275\260[\r\275i2\265<\346\264:\274\207T\033\275\232W\"\274\274\024\313<8\001O=\222\366*=D>\034\275\265\353$\275\005\334\307<P\274\200\274<\003\251<\\\243\300\272\341,=\275\277zE=\362 U=\000\333\021=f\344A=\367\346\300<\014\3345<[7\243\273\030\257\023=\325\216\256\274\230!D\275\001\251P=\337\005F=z\346\007\274\325P+=\244\035\212\273\036~\003=\303J1=\333&B\275%\033\321\271\020\000.\275\357Z>=#NW=\367\274\371<3v,=\370\2077\275W\\\036\274p\332\257\274\234\375\356\274\343\210\212\274\007e\332\274\345\265\351\274.\0270<\363\3523\273\261\022<=?\017\330<\210\323\031\275\251#\026\275\303[\270<\206u\3728E-\007<\344\023\247<\006 \346\274\231)<\275i\265\331<\310\363i\274$uM\275GO\347<\331hK<%\\H\27589F\275H?c\272f`\244\2738\2053<^\016W\273\203L\344;\263><=\367\370\t\274X\207\314\274Bc\323\274\263\346\254\274,\252\023\275\264QL=H\275\"=#\2716=\010.0=\263\252\217<\345\347,\274`x\227;\3011\026\274\t\217F=\333\334\005\274@W\324<\002@\027\275\356\362\232\273\351\002<\274\235Z3=\336\360\374<\304\360\000=\315\tE=\203\361U=\032eN=\316|\227;\252\020\375<\204W\346\274\306\3127\275C\251+=h\231T\275\272|K<\333{)=\357\341\'\274\241\243#=\231O\210<\215\352\334\272N\270?\274\251\005\027\275\355x\376\274mU\016\275j\256\366\274y;\013=\206\261 <+\317\344<]\315\301\274\251\304\327\274=3\244<%s>\275\361\276\304<\240-\324<+~@\2751\022\246;\373z*=y\276I=\264\005\233\274\r\n\r=C*\334\274\023\232\374<\322\377\327\273\372\215\034\275\031\357\204\274\002\2175=r\322V\274/4\221;C7\010=\224\033\202;\016\205A\275a\035\315\274\306\261\222;\027\241\007=\211\202\237;\256\\3=:\021q<i\030!\274!\302\036=\336\212\211\274;\311B<\210v\036=5S=\273\243\250\"\275:\020\245<\315\273N\275\004\341\262;\314\331\253<e\231\241\274\232\223\"<\t\335\037=5;\252\274B\312\227<\\\366\";\177\207\333<\211\320g<\236\034\"\275\357IT\275\346\205#=\362\237\256\274\221\034I=\246Z\246\274E`\374<$0\177\272\200\003\245<\262=\003\274\0103Z<\321\205C=;f\003<}\253q<\300&\340<8T(=\233<\343\274\276\234\032\275\026\035U\275q\232H\275\242\365s<\360jL=g\363\'<a\210-\274\260@\274\274\251\223j<\3164\267\274\366M)\275O\r\0149dE\311<\354\342\236<\0236M=\223\207\035\275\010\276~\274\332q!<\226\324\371\274]\334\257< \301\205\274r\276P\275\224\372\326\273\273\035A=\001\354\247;\267\365\237<\261\227r\273\246\212\376\274\300\210\235;\337\363h<\235V\213;\326^:=\022\337\205<\212Lv<n\211\264<\314D?\275\316\231\'\275B\307\023\274\240\002\376\274\375IO\275F\021t\274\006q\226\273#<S=\362\301\331<5X\351\274\370 3\273)\366\371<_\254\026\275w\265@\274Ex\241<\026+\035=\237\014\242\274\352\337=\275\314G\272<\334I\316;\'\203n;\304\355B\273\227\275!\275\227C\312<\365r\355<\326 8\275\317wF\274T\256&\275\206\023\033\275\\\330\245<\212\300\223<\376\366\311\274D&\320<e\350\003=tX\330;\314p\215\274,\250\202\274)\356v\274j\r\250\274\t\225D\275VIW<\363\"\324\274I7\200\274\264\2704\275\227G\315<\331\245\240\274\364\373\023\274O\"_\273/\350\010\275\210cn\274 \317\t\275$\331~\274\265Z\007\275r\303\274\274\323\232\364<\366\215\360<\225\013K\274\316\211\n\275\013\037Q\275D\317:\275\317)\005=o\321\243\274\3224\343\274F~8=\252\202><\224.\020\274\371\316\"\275r\025\004\275\005#\303\273\324!\262<\226\210-\275\337\321D=R\325\310;\353M\013\275\244\362\202\274\037\337\310;$>\325<V\232!\275\340\241\374\274r\363\276<\307\305\204;\312)6\275(\242N=0\004\334<\240K\352;o\2349=\215/\017=\032u\334\274\036R?=S<5\275\340\277\366\274\357\021N\275\365T1\275@T\324\272\276\211\315\274\002?%\275||\240<\303M\235<\351\275\355<\276xH\273S\200\252:\364\014N=\031\315!=\245[\345\274eL\017\275\314a\261:\030W(\275}\212\237\274R\225D=7\344d<\032\250z;\232u\242<!\326@<\rhw\274\301\217)=\250\354&=\237\322\023=\031\243@\274J\2058=\223\030\214\273>{\016\275\024\336\333\274\326\317T\275%+\354<;\334\006=\274R\342<$\003\374<\003\'==\035\345\000\273\004\323\231<\223\360&=\0353\205\274\014\3375=G{.\275\361\346\006=\302\001\331<W\032@\275-\267\'<\271}\013\275\325\206\327<\356\333G=\032\313\203\273f\300\256<\210\351\201;\211y1=,*\230<gtP=X\246\027=yo\213\2748\352\254\272\220]0=>\245\177\274\026\216*=\232B\\\274u\316\344\274\023\225\307<!\223\335\274\304f\005\275\316v?=K{\t\275\300\355\"\275\034%\320<\013\262\217\272~\3761\275\254\335\250\274\002c\372\273\255\027E\270\376\340.\275\035\227\247\274\343\005\000=A\306$=\305_\270\273\032K\372<T<\240\274\222IJ\275=f\333<y\007\010\275|\337-<\375\301\204\274\346\214\376;K\030Q=#35\275\234\373\t\275d\311\330<6\035F=6\243u\274g\007\013\274J\271\326\274\233\357D=C\254\255\272e\033\222<#n\304<\277\035\005\275\227\264\371<Ab\300\274lc\225;2\321-=\207T\311<n\233\027=\033\327#=\000i\374\273\020\306\215<\271\037\002=\267v\253<\207KI\275\366\342\002=\n\010D=W]\201\273\345\256\020\274\267@\031\275\331\251\336\274\226\274\202\274dy\302\274`A+\275\274+\200<\267w,=\237\003f<\020a\010\275\t\320\264\273\343A\002=\326\205$<\325\036I<\275\3166<\367\271\350\274\367p\021<s0\342<\002\316\327\274\330\322\250<X\t\240\274s$\375\274$8\312\274\323\372\253:\022o?\275r\245R<\320VI\275\033\337\026\275\227=C<\024\0234<\347f\313\274H\3239\275\235\3374<\204\312\'\274,(\305\274\321Ap\274\264r\347\274\033\002D=\323\000\322\274\221\375\026<\201\003~<C\240&=\270\330\247<\024\000!\275\364\221/=\371\005\031\275\005g\003\274\356\314\351;\276\335\335<\210N\255;\345\002\244;\345e)\275P,\251\272/\374\005:[\336\305\273\216\205\260<\3747\300\273\333;\353\272\264A\035\274\313\010\351<\216U\014\275\302\2673\275\301\242\t\275\215\374\317\274\276\373\351\273D7.\275\236\247+\275\t\231\024=\nq\244\274\021,\241<\004z6<\372\207\315\274\334\031\310<~a\242<\252\221Q=\030\344\013<?\307\001=\310\207\302<R\227\275:\252\265\367\273\301\\m<\230\222n\274\024\000,=\214\213.=\010\361Z\274\024?\233\274@\343,=&Ek<is@=\315\013l;^@\020\2755\305\221\274a\327\267<\td\367\273B*Q=\222\346\027\275\362\374\322;B\266\006=\345\271\324<\234(7<%\310\037<\240\335\215<\354\3605\275\265z+\275\33640\274\275v\020=o\236\356<T\030\335\274\034\221\237\274\t\177\215\2746\035@;6\234\'=>\345\025<\033\306\000=\304\312\355<\205\366\004\274\201b\361\271\213;\301\274=\223\227<\345m<\275\003A\327<\260\266t<4?\024=\026\371\224\274\204\200\215\274\023\0039\2756pF\274\227\367W\2758#@=8\006\362\273\357\224u<\254\272\250<\346oO<N\212\031\275\322\200\223\274O\0365=\305\026\231\274\224\332A\275\273\237\035<\2334\266<m\242M\275kTN\275\334\227\370<\363\222\337\274,\007\024;\224\351\262<b\032I\275b\333\027\275\375\210\224<\370\233\235\271`\245\004\275\200\014M\275\266\232\221\274\210\322\353\274g\"\234;\261R\261:\347\253\032\275\031TG\275=\332I\275\364xS\273C@H=j\377\326\274\355\240\357\274.\314@=\347\370\006\275\321\002,=w\014\r;\277\210\244<_Or\274\370\003\002<\243\250\341<\232\003j<\212\216\214\273\267f\014\273?\257 \275%\003)\274\370\365\016\2740\272w<\021\275U\274\n\357\024=\335\3601\275\250K6\275@\262\340<\260\325d<@Y\022\275\235\"\213\274\257d\r\275\205\037o<\006\324&=\365\210\347<\206\220\212\274\026uD=\220Q\336\274\205\273\250<X\207R=\276TS\274\261\260\025\274Of\353\274{\227\351\272\027S\377\273\022\370@\274\023\2324;\372\222\033\275m+\372<`e\362\273\363\367\326\274zB\201<\343=\373<\2075\230:[\210\241\274s\311\270\274\016\236\351;\304\3033\275\340 Z\274\002l\023\275\267\356\033=X\t\274;\265x\264\274\316\324\234\274\375\177D\275\215w\234<^O\365\274\016#T\275uU];*m7<U3\365<1f\357\274\355)\035\275\331A\r\275\372\360\224\274o9\227;.M<\274>N0\275*\3770\275\270F\022\274\235\355\223\274\373\345:\275\301\254\342<\357@K=\331]O\274\275\035\200\274\264\323\356;\002_\345;\nD\036\275\375r\273;\212R\214\274~\235}<a~{\274\013\025\207<G0g\2742~y\274:\335\214\274\022\241\004\275h\346N<\363k\000\275J\0241=\361m\321\274]\213\310\274\357\332\207\274\312\024!;a\2054\274\304W\247;\242\305\371\274/W;=Ds\364<hVY<\235\306\215\274O\277\245\274\264\026!=\204\321\227<%\272\254<\017,\357\274\307\252g;\362 \224\274\302\322\030\275yU\312;I\303\261\273\377\270\331\274x-\227\2745\367\274\274\274K\034<@\337\300<\027KQ=Y\256\004=\361\001Q\27502k<e9\216\274;\242U\274\216_9\275\034,^\274\371\260\360\274`r\246\274\247\334\317\274W5R\275\256~J<\223\271#\274:z<\274\031\033\202</J\320;\375\232\250\273\324\211\300\2741\3729\275\320\214\032=Rd\314\272\"\364@\274p\263\236\274\263e6=\336\312-=\273t\346\274\244\210\007=\317\371\033\275\026\205&\273o\200\3209\032\255\340\274%\237\025=w\233\252\274p\240-=\255\216\343\274\300x\347\273\315g:;\343\351\276\274^\326\265;\360\r\357<\250\024F=\024\004z;\367\254(=[\227\334\274H\363 =\232\236P=\264kJ\275\263\320\251<\272Y$\275Z\252\177\274H\016\030\274J\272K=\351=\036=\264\252J<j.<=q\025\332<\036\027D=\231\\\334\274NE\022\275\026\030\343\274\355\251<<\333;\342<F\303\025\275a\2707=\275\344!\274\0264\022\273u\256\303\273\366C\234<\237\366(\275\377E\361\274\332\351\274<\301\021C\275d\230\333\272\000\036o;\224\033\007\2746\206F<\351\335\204\274RO$=\301\343/\275L\0232\275\301.n<\277g\337\272\315\251\256<\222\237P<\033i\355\273\211\206\271<4\245\010<\342\356-\275\274\244\320<\213C\r=H\2566=\340\334G\275w\\.=\027\213F=o(+\274\326h\341\274\277\017\001=\346\322\033<(\330\016\275\311\334J=\261\267\366<\377Q<;B\034\317\274|\272R\274\241\252O=\363W\240\274\322\264\326\274\3463\313\274V\354I\275\024~\315\272\342U\224<\000\2067=\007Y\247;\023\2166\275\007o@<c\277;=M\350\274\273\205\325\010\275\206&h\273\276l;\275\354\236&\274\352r\256<\207\312-\274\263\027\025\275\242\271U=\332\204x\274\376C\025=\216\036\276\274\010Z\251\274\007\2549<J\225-\275\365\350\363\274:\254\027\275!\347\347\274\3619;=R\300\013\275I\367\332<\3209\330<\361\362\017=a#\204\274\370M\224\274\243\016\274\273\250\242D=\361f\265;\243ZR\275\007/\353\273Sa\242;\331\241\224<:\341\037=\023\027\227;MN\350\274\204k\322;\223<\003=\'\177c< mK<\333\265\035\274\375\266@=n\221\375\274\306\031\335;\352M\356\274>\335\007=4[q<Q\2061\274\221>2\275\303\337\256<\361`\033\274\017g\033=\206\246\337<\023\210\302\274\370B:\2754\274\"\275\362\t\376\274\375\010\357<V-<=;j=\275\321\023\352;\\\'\037\274\342\220%\275\215\332\320\274\370\030\001\275\326\013+\274\373]\331\274\372\277\330<\004\016\276\274Z\252\004\275\031E\371;\254z\3609xz\355\274!;;=(k\006=\013\206Y\274\256\372\000\275\307\211\251<W\212\031\275\177I\025\275\220H\361\273\206}\205<\000\355\010\275u\254\207\274Gs\000\275\245\036\303\274\366\316\375\273:me<\243y\304\271\n\351i<\223Y\007<W)7=\370\334\256<\321\274Y\274m\2326=0\030U\274\330\372U\275f}#\274_\200\276;PY\031\275\264\3208=\241n>\274\306\266 <\027\n\227;\030\363\022;\021]\271\274\003\363\006=M \350<\363_K\275&R/=y\260\030\2750\370\025=%Q\204;&\"\265;\026\352\346<\312~/=O\022\001= RN<\237OU\275\006\254\333<\350\\x\274\272$|<\320\333P:\306&*\275\252&\\\274\022\024I\275\0022%;n\232\006\275\335\321\257<\017f\251<\343\200\340\274\031\333\032\275\377!\234\274#\002\356\273`\235\240<\335\212\274<$\340\t\274\256SH\275S*\036=Y\316\316;\026\212?=\377\346\034<\316\260\311\274m2+\275\324\306\030=\351^\226\273\235\220!=\330\017\021=_I\002\275\2303\013\275\370w\351;<\025\327;h\203-<\224\036\344<\270\016\230<[\227\351\273/\014.=9\356\026=z\032/<Q\320Q\275Na\261<\331<P\275`\360\255\272<iI\275.\3747<\355\323\262\274y\345\301\274e-\233\273#\225\260<5\"!<\252e+\275\\\361A=\360\016\315\274\340q\002=\003\003\361<\323t%=\342\324\226\274d\241\001=$\346\315\274;p\243<\"\3620\275A\206\035<\342,G=\024\027L=O\203\215<\002\260\354<Eh\025\274L\320;<\217oQ=},P=p\333s<\273Pp\272_\010\356\272\010\330\t=\234\224$=^\273@=3\230\205;\377=%\274\240:q<\250\234\364<@\254!=\225\007\263<\254\362\211<\236\025\020\275\375\271,\275\030\025\224<\007\365\032;9\332\334\274\205\010C=\343x\'=\024\235\311\274\266{\017\275\256\240=\274\277\215\364<Y>Q=\006\2734\275\014\364}\273\354X\370<\356\276\n\275\001\205\310;\241\3123\275\326\212M\275\020\023\017\275OR\261\274\377\207\003=D$>\275q\270\017\274\244\303&<\253\002L\273U\314\225<xK \275a\005\036=k\001A=\221\214\003\275\254R;\275j`\"=m\241\r=\243p!\275Y\241\206<\206\350\014=bA5=)\240T\275\346\035\207<\364\257\004=+\"!\275m\225\354\274\\<+=\276:\317<=\263\325\274E\355\334\274\330xI\275\271\230D=\355\211\352<\0224`<~\014\361<SH#\274\303\205c\274\210@D=\221r\"\275\020\3075\274_;8\274R\313+=\027\373\325\273\212\211a\274-\341\036\275\026\307;<I\274H;j\262\355\274\326\311\207<w\004\340\274\363\365*=U\202I\275W\325/=\016\251k;\355\253P<\354\203\257\2715?\234\274\237\0216=\214e\234\274\313\200\246<\030Q]<_\247O\275\034I\002\274\000\215\262\274q\3349\275-\202\316<\233\344N\275F\253\"\274Z\245T\275\2162C\275\225\242\317<6K\270<\207mD\274\006\316z\274\013\211\025\275\211)\026\275\033KF=\223T\277<\272\257\207\274.\266>\275b\300G=V,\271\274\355u\032\274\222\341\013\275C\020\035=\0109#=\t3@\275\220x>\275S\301\005=\373\030m<oYC\275oL\370\274\033\321\026=3\224]<\246\035\344\274\357\3335=\333b0\273T\270)\275@\360\207\273\326h2\275\257%\016\270h%\014<r\024\267<\262$\304;<\276\003\275d\353\340<X\222\206<\271\362S\274\"\016\334;\t\342\t=\224\345\336\274\352\326\210\274p\3529<~%G=cj\016=\3643\006\275\254}\022\275\334\033\202\274m\307\022\275\274\000,\275\376v\263<\021\206\206\274\311E9\275\263\213E\274\311\033\245<Y\333\227\274\2710\206\274EpQ\273\243\236\327\274\313\315\302\274\327>T\275\037T%<\016\233\350\274)a1=\007\245\230\274\301\357\250<zi8\274\234\270\222\274.\002\255\274\253g\337<2\254\010\275\027\326&\274Z\337(<\322\334\266:pK\332\274g\002\331<\266\013\001=\375Y\212:\360A\006\275\270\362)\274>>N\275[\350{\274\257DP<u\314\371\272ax\224\274\241\336C\275\003\366\346\274\362\256[<4\357\253\273~H\320\274\227\2502=\020\341e<-\"\377<\010\n\005=\323\370D=<\016\345\273;iq;g\327T<`XL=U\006u\274G\352\304\274^\254\r=K\257-\275\210O\266\274\010xm<.\237^<\357\213F\275v\220\013<\255=g\274,\264\014\275\033\\\261\274\201x/=\342\333M<F\345\200<\330\370\233<\207\004>\274E\243\344\274\200\351\"\273\271\214\201:\355b\016\274\335UL=\275B*<2\303\301<\357\301\342<\231\211>\275\270C>\275\02078\274mR\304\273^\004\245<\331\252\355;S\222)\274\257c\353\273pQ><f\306\251\273\217\273\230\274\222\245 =\204\230\361;)\320 \274\201\345\034=\203\371<\275\2279\236;\242%C=\242\216t\274\355\036\205\274\n\327\276;\273\005\210<\226+\366\274\t\360\022\274\235u\031=&a\313<w\232(<\204\250\351<\2746F<\343\266\262<\037OK\275O\263\253;/w\354\274\323k\313<\240L\325\274\324\014E<K\254\356\273go\022<W\342\"\2756{T=\344\035\326\274K\321B\274\344\005\301<\2413\267<\230\035e<\334\301\242<%\\\275<\362X\333<:\362\253\274\271W#\274\245\306\232\274\253\031\003=\364\316\213\273\'\2007=\260\2161=B\347\316\274\203\n\034\272\366f~\274\000\302.\275\376B!=\020\010!\275D\212\'\275[\201\232<\227\226\020\275B!t<S\2138\275\201\247\247\274^\351.=DyA=\261{H=\'\317\263<\315\022\371\274\234\240\354<\272\276\320\274\000!e\273\276P5\275\240\330\215\274\322E\247<\313\266L=\377\332-=\027\255\361\274\307\235\245;\204F\016<\260k\003\275\360u\330<y\303}\274\231\337\372\272\250x\204<\030u\211\274\027\006\306\273}\365,\274\004[Q=Q\261A\275\022\366)\274\001\224M=\364\364\035<\253\007\315\274\256\2472=\300p\257\274I\341 =sgM=\266q\030=Y\354\317<\2367\353<^\204\373<\351\013\"\275\211\257Q\275b\251\365<D7\037\274\2226\222<\214\336w\273\225\230\354;\276\270\322\274\014)\n\275\265\342\277<\224\003(\275\007J\200\274\\\213\027\273Z\337/\275\2064\017\2753J&=DJ\275\2748\313\273\273\261P.<k)\200\274\255a\352<\247\240(=\032\261\2149\241\343\013\275\313\357\377;`\237<\275o\245:\275\022\n*\275k\371&=[\274\022=\371+\352\274\351\300\031\274D\363\256\2747|%\272jW\235\273\353*O=!\247#\275]\255\3149\001J\255;jC\313\274\330\326\307<.\363\016\273\177@\n\275\330\016\335\273\230=\036<\275\307\306<\031K\261\274;e\r=\333`\335\274u\344\376<\302f\374\274\2212\000\2751\216\024\275:\335+\275\337\242\023=\314.\256;\252\0254=f\022\346\274\231\252\206;*\201\261<jC\035=\256\277\241\274!\251\017=\356p\020=/;\240<\205\027\024=\210_!\275K1\245\274\004iL\275\214#\373;\346\006@=Ab6<\225)/\275\323W\265\2741\241\031\275\222\307\270\274\031\316\245<9\006\214\274\205U\353\273in\004=\000\023\003<\001\016\342\274f\025\271\274\350S\301\273\323\363\n\2721\257a;\301\226\243;\354LV\275>\231\017<\022G\013\273\317\317\205<\\2s\274\030HD\274#\312,\275\356\373\014=\244\3646\275\023\023\032\275W\002)=\037r2=J*\324\274\3720\026\275\372\336;\275\252\324\373<v\352\323<\236\346Q\275%Jt\273]\n\235<\325\325\366\274\325o6\275\265\226,\275\352C \275\022\207\026\275\336\356\371\274\341\336\366\271\025F\023\275\337\237\366<\346mx\274q\326\257;\337m\313:+m\245\274e\255\n=\355\"\345\274\241W\016\275u\250(=\021\024\317\273\330\010\037\275\323\260F\275m\363\024\275\267x\025\272 \271\317\274\310\3260=R\177(=\347\257L\275~\344\273<\255V\355<=\301N\275\233tG\275\211\027\204\2744\016\'=@\241\001<\201\032\313\273\234\350\027=\336\310\375\274\221\3114\275\230\\\002=W\206\037\275\013\230\336\273\325=\231\274\345x\267\274\240\301\023\275\334\241\365<\233\007d<\363G!\275#\372\346;5\272\002=e\373g\274#\006\340\274\334t\265<_y=\275C\267\272<\367\310\330\274^\201(=\306\3249\275pW\363\271\340\237\340;\033\232\334<\005x\346;\231\334v<k5\255<\241&\r\275\242|\375<_o\327;j\002\212:|\030\035\273\251H5=\223\017\036\275\270m\305\274\331|3\273P \265;\335\023\376\274\000\251\004=\247Q\027\275\035\254;=\224,\343<e S=5\221\255\273\026g\005\275{\373W<)\231\253\274-\240;=\201\204@\275\321*\023\274\003\345\212<\027\231\r\275\365\274\314\274/\206\256<=:N<\014\341\001=\022\344\207\273\310\212\367\274\230\243\005=c\311\206\274\264\022D=U\034\023\275h\226L\275-\215\372\274\203\263\024\274\021\305\242\274\202\027\003\275\001\004\202\272\217\035\255<\330\241F=\027l\364\274\276\315\214\273\221\002\031\275_\231\265<\236k><\210eG\275\243\037E\275\340A\001<\220m+\275\274V\300\273\024\rV=x\177\320\273\371F\271\273DV?:\3561\036=M%6\274@A\336\274\237\321\031\275.\222\013\275\334\301O=\017\232:\275\310\010\320\274\013\\\250\272\007\320\252<4\353O=\346;\306\274\364_\340\274,\3513\275\246:<=\326/\032\275\375\213\226<}\223J;R\275\031=.],=\375\344\000\274V\234\001\274\320\360\"\274\205O8\274\225 \324\274z\361\016\275\023\226\030:\315\340}<\201\356\201\274\321\n\320\2743\025\005<\361\3012=\366\320\205;\010\2422\275X\367;=8\325?\275\r\275W;\245\352\003=lbE\274\274\032\360\274JS\304\274\301\rz\274c\004I=\017ES\275\017&\345<\022Q6\273\377\3565=g\004\202<B\000\377<Cb\211<&]Y<g\331\'=\tA\"=\\H4=\316B\250<\032\360/\275\334\253\322<\013g9=x\224\027=\274\301\346\274\211`\037\275e\031\342<%\356\026\275\252\307\246<\237\317\304;\2129\261\274\034o\002\275\032M&=\237S\263\274\344K\373<\333\216\227:a\345u\274[P\363<\366\364\232<w\375\365<\027\202|<\363t\314;\324\262\"=\277qD=\211\321>=\326\252\211<\301\231\007=j\002\032\275\230U?=\217\301\300\274\320J{\274\257a\345<\360M\004\275\312&\016=\344bK\275\315\263\252<P\317\363<MgT=\022<I<\000\272\257\274\275\271\234\274\243\270-\274\013\207\244\274\250\337_\274m\271n\274\001#\346\274U\016B<\005\336\005\275\017\333\005=\007\254\002=\210\365\264\274j\256\031=)\007\374;pZS<\nq\033\274dz0<\007t\027=x\254\005\275\366\241\313\274\266<\355:\305aT\273[Z\025\275\217\355\350\274\'\225\243\273IL*=\341\033\';\372c\203\274s\355\016=4\376\236\274\'\253\007\2751\253\330\274%Y\006;\253\002\020=\304H\247\274\231\373\002\275A\030Q\275\001\264G\273\346\264\021\275\272\331\231<\026\'\265<AI1\275\274\315\352<h\nK\275F\366\264<\365&\006={\250\240\274\277\332\035=\256\306\010=\260\272I\275\262\361U=\237_H;\004p\033=\221\262\310\273cB\344\274\360:Y;r\217T\275\014?\307<\021\026~<z\3562\2750\2468\273`u\207\274\270\372\357<L)\250\274\211[\362\274\014\017;\2759>\210:!jB\275\246\013\271<~\277<=$!\223\274\177\327!=\323V\270<g\241\256<\360-\034;p\350\242\274\272\335?\275rC\315<g\355G\275\261\310\001=\376\2554=A\337M=\017\217;=\004\227V;\215\201\034\275\330T\254\274\177\324\201;\344\247\327\274\tly\274\332{\022=\267\344`\272\363!\355\274\223\205\252:\002\201\037<\342\t\263\274\\\t\302\274\2367V=r~5\275\017\024\234\274\324\220\353<!\356\347<\360\006\357\273\025\266+<\274\001G=\330\271\263\272:\002\317<\303cA=^\332\000=\300\213\003=\3644F=[\367p\274\356\316\350\274n\264\206<\004=\001<\267\317\243<\311\365\272<#&\242<7\247\035=\223\263f\273C\232H;k\314\t=\201D\327<i_?\275\037I\351\274\316^\306\274\207~:\275\256\325\021\273\350\204\307<\034\301\033\275\024\376\301;\356-C=hcB\274c\001\362\273whP=GB4=\302\274\306<uCb\274\364\232H\274\377\360\311\272G\032\026\274\227\247>\274\300|F<\230\360\274\274\023\0168\275\001\302s\273\247\335\214\274\202\\$\275=\221R=\036<\013=\376y=\275z\264\352\274\250m@=\'\315\212;\361\312\221<\271\rb<\344\317\257;\345jF<\336\210A\275c\231\'=\3013=\275=\324\361<BKG\275\326\233\367<\323\241(\275\253\2013\275s\267\2109L\220\037\275\025|\246\274\323\220G=\264;\034=\233l\023\275\177\263\251<2\271:=\223\257\277<+\371\245\274\371\263J;\372\206a\273\365\321\236<\301\266C=>3\006=\321s*=\013\020K=,\320R\275\026y\035\275\356\276q<y\nM\275\030\014\204<\211\357@<\243p\312<O\371\230<\374\340N=\265\320&\275+\344\375\274#GQ\274\316|\013=\264\264\037<\277\356\344\274\360\342V<\017\217\032=\027\370\001=\343\301\000=\003\tG;\221\004\345<\200\302Y\274\227\313\006\2754\233\334;l\265/=\236\310\200<\261.\331\271H\222\341\274~\257\017\275\233\314\001\275]\377.\274j*\034\275i\251s<\344\256\371<_\261G\274B\371\217:\363a5;g\227\026\274\363\252%;]j\343\274\t\253\026\275C\216\233\274h\3051\275\233\277\037=\020\257\357<\264n\255<h\220\010\2754\227\r=c\204\r=\267w\313<w\354M=dfE\275ry\031\273\000\001\365<\035\355\321\274\353\320\007\275\032@T=\211a~\274\024\231\266\274\300j\317\272\303\211\251<~\025K\275\224G\224\274$\320\030\274\331\\U=L\231\031\275Cg5\274\211\032\227\274s\373w<*1\277\274\213\244I\274F\217.\275\025M\n==\303\272\274\207\t\231<O\255\017\275\2619\210<\356\321\360\273\271R\221< \313D;\305/)<\346\326\313\274\034\rE<\337\2025=\324\177\342\274F(H<\306\000\002=\351\332\037=7^U=}\215\"=\036\030\024\275\204\"\222;\257\210\221<\255\367\256\272\3054,<eSC=@\335\201\2745q\010\272-\320\272\273\237\223\006\275\374-+=\311\034\344;\0035\005\275\257\263;\274\t\000}<\220\177\260;\006h\221<f\235\333;T\220E=4\261+=\264\271\302\273D\275\t=\\[<\275)\252\271\274\253\034B\275\004df9\345\322\322:H\013\222\274W\264\034\275\214\221\245\274\266\315e<\010\277\345\274\336A \275Y\1779=\233\037\027\275\201|\300<\340\025\017\275\244\177R=\333\010\004=\1770\022\275,\'\374<\364\220\255<1V:=\345\252M\274z\221-=pg\211<W\016!\274#\207\250\273\325\222y<c\331\307<\310\231\027=\360\026\360;\302\2438\275\014\240\322<*\261\033=\352\203\225<a\024\003=\375\372\342<9\234\026\275&\031>\275-r-;\362\000@=6\362==\200\200\307\274\244\205{\274Z\264K\275r\354%<\253_\036=\221\252\211\273\371\000&=\301q\016=\264\033\222\274\202\350L\275\332\274\373\273\335~\256;\303\214\215\274\226\247\257\274\220\367\354;\032\261\373<!C~<]9z<\371\337J\274:p\334<\017\373G\275\345\226Q=Uy*\275ZV\231\272\n\024\004=\357\0344=/\357\340\273Y\211\026\275\232\330N\275B\216\257<\010l\261\274\234\265$\275PA\020\275\362\256\317<1\n\"=(\341\214<\177\034A\275\372\0338\275oB\n\274\211hS\275\235\315%=\267\203\257\274\362\022@=\031\304\304;\330\375\256\273g\322;=\021\234\252<\264\350\262\271\030P\241:g\3611=\211\211Q=\235V@=\231\233\365\274\261\210%\275\337Q\310\274\236\242\221\274\260\363\227<T\242K<\206\035\324\271\220\0226=\247\354,=\034~\367<\201P9;.\010\250;\255H\005\273\240\323D\275\267\207\274\274\365\217 <Gp\224:\233\245N\275w:1=G7\215\274\222v\016=\214\0045\275\234\n\355\274\002-\017\275v\354\030=\234-\002=g,V=/\324>=.x\027=\252\346\222<\323-\013\275\2669\024\274L\237U\275[\207\n=z\313$=\305\246d<\2262\227<\213\213\266;\332X\216\274\017\320P\274`\234(\274\217\343K=\025\311\232\272O\336\360;\"\206$\275\247\310\312\273]13\275-\372D\275\300\277\325\274\345\330M\275\254\231:\275\370\370\352\272\304\2602\275\332\036\302<\375\003\033=\252Mw<\315\367\026\273[\002\341<0\253;=w?0=\r\247E\275\344WN=\020\336U=\212\321,<F\324`<\262\207\254<\260/4\274|}5=\325\350-\275\027\202\270\274%\253*\274\355S\326<+\2070\273&6A\275\226+:\275S\032N<1&\033<\364\001\312\274\351\225\013\275\367\366!=\301\003\363<\273\002\375;\216\211y\274s\334\010=\227\342\'\275tV)=j0\030\275\177C\306<q\351\254\274~\333\354<\\\326V\275\203\\y\272Go\261<\254\335s\274\243\215/<\363\002\017\275~;\261<<\013M;\246\372\224\274\343\254P\275\220\244B=\327\212\226;\006\242e\273\206\355\316\274\274KW\275\003\364\310<3:\367\273;\362\231\274\3618\'\272a\324P\275\217\242\024=H\375\276\274\303{\247\274\342\370C\275\027p\223<\007\t&<.zd\274\014yH\274\246cG\275\025\'_\273\005\323\354<U\003\340\272=l\005=Zv4=\215\030D\275h\345\205\274\267\362/<\205>\260\274>\227@<A\006\005<\324\372B\275\r\251\006\274(Az<A8\215<\251~N=\366\253\316\274\312\340\372\274\245\235\003=\005\3436=w\370#=$\3713\275C\270\363:\n\333\231\274\0031\016\275I&!\275\231C\324;\222_\023\275G\226(=\t\005\"=?-\023\273Z\332\336\274}\037%\275\027\357H\274d\220\014=\233*9\275\264q\302\274\357\263&=\270;+=q\3246=\332\345\216\274J\t6=\010\026\000\274\200?\223<\314i\020=\300H0=t\221T\274\352\302\270<\364\200.=s\333\"\2747\322\264;5SU\2750=5\274\306\346\306<\031\203\205<\320\3144=F4\264\274\227q\300\274lJK=\017_\004=\224z\025\275A\030\232<0Iz;\335\033\272\274qI\360\274}\317E\274J\262\211\273\305s\222\274\265}_\274O\304\233\274P\201\024=\224\212\021=Q\220@\274a\221\233\274\200\217\236\274\207\214\t=\367b\276\274\301\223\270\274\217R5\275\314\311C\275/\277\022\273\022\275\014=\262u\345<b\016P=\177~W\275)\332\363\274\301U\021\275j|\026\275k\327F=\245\006\n\275\003\320\332<\237\2323=\030\034\027=\267\3374\275\350\037\004<>\"@=\320\362E=KR\357\274{\323\202<#\337\023=\"q\332<%\212\001=\203W\345;\201\013A=)\036\023=\347\262C=\005\272P=\301\200\261\273e\027\034=\325\342\'=#\000+=c\377\234<\265\210\222<u\267\006\275\322\'\000;\317J8=\014\321\352<W=\033\274\345\255\000=\233\373\037\274\267\217\n\274\014I\320\274\245W\030<\316K(=\234,H<\200E\234<\363K\034=\244N#;l\233J=+\243\025=v\227\362\273o2\265<-\202\276\274\241\230R\275\036\325\342\274cK\035\275p \014; \210\000\275j\177\006=)>g\274\212\343\033=n\203\356<\303e\023\274V\0238=\\\014\026=\354\n5\275U\360\026<\34351=\257\005\347\274\252\344\007\274\376\230\034=9@\317<\311=?=\215Q;=e\330I:(\363\202<\214l\267\274\241\343\266<\374\024\276\274=\365\004=H\014\217\274\312\266\020\275\371\233\037\275\353;I<\206@\252<\200\337\376\273\013\345\277\274Q\025\361<\222S\236:\264\310\005\275\211/\017\275[\302\316\274\006u\343<\032r\021;3\034\325\273\027\246R\274\022\343(=Wm\035\275\227\370T<\'\337\370\272\232bQ;\036RQ\275\201\330\211;t7T=\241\221\332;\344\207\033\275\317\336\036<}n\354<#\273\001\274\001,\374<\253j\377;\337\301\230<\231V\375:\222\n?=Y\243\356\274_\017\036\275\347\337=<\312\277\371\274\210w\235<?\312\213<XS\030\2752\r\347\273\377\010\020<x\016*=\302\034\031\275\224\271\307<~\344\220<\251kV=\214!\030< \377H\275.\235<=\341\003\351<\2307\342\273\036\033J\275T\353\026<$\272\365\274*?\303\274&\\)\275\006`7=E\033K\275\360\010\026=\225|\014\274W\270R=\246K\270<H\325\334\273\252L\003\275\267X\200;\324\343\254<Bp\'\273\264\177.\273w@:<*L\210<\325\322\205<\214#\004\275:\350\220\274<\000\215;\310H\374<\216\212.\275OQ\321;8\0304<\3047\203<u?I=\352nJ\275\216\203\037=\231\210\001=\203P\013;\037lG=SMc; \357\003=\214\331\006\275\255\032\302<\274B)\275a\031P\274<\315\211\273\265\200C<\315d6\274\210\231\214\274h\271!\275\270#\314\274n-\311\273\3158S=\nu\237\274\303\002j\274@\313L=\240,#<\313\333C\275\231\212L\272\277\002\201\2743\244A=\272[\274\274\236\251\305<\231\242|\2747\352<\2756x\010\275J\2116=sU:\275\037{\032=\261\256\032\275Y\324\210\273\364\271F=\257\005\n=%\330\337<\001\240\010=h\211I=\266\267\034=\317Q\331\273\202\251k\273y\207D=7\230h;\3464\010<\177\211\346<\t\376\023\275\373\361\300\274\357\214m<mD\240<\022h\276\273T\000\310<\205\350R\274\201\267\242\273\004\267\000\275\206\027\034=\312C?\275\332#\'\275\237F\253\274k)`:\365\351\251\274\014\2314=\\\366\336\274r^*\274\2617\017\275\204\251\030;U\007\211<\206\307\024\275\214<\032=\020\\D=\021\371\310;\263\254S\274\224\277\024\275\220:@=\247\027\373;CQO\275N\240\016\27418\333<*\3762\275\261\355\033\275\t\311\355<\200\310\016\272\221\243J\275\373Z,=\333\264\031\275I%\336\273\265/\257<\3362F\275\223\267V\275\0229\n;\n\256G\275\300\330\341\274\237[\276<\314\364\245<&\270\227\274h\220\226\274\025\203\235<\016\337V=\224\327\036=\250\370\261<\250\333 =\211\257D=\377\323R=\013\316\205;o\000\252<Wf\364\274\020\rE=/x\357;\355\360U=A\0353\275\302\347\2619\316\322\271\273\337\270\261\273\253\004Z\274\332\036b\273\200m\010\275\013dV\274\254\344\264\274\007\300O\275\353\320?\275>$\025=}O\377\273\271\023c\274\010\217q<Q\016\301<\371\265\253\274\3247\220;\220\260\263\273\320\356\356\274\316Z\307<0\256A=>\013\342\274A\006\016=\221*$\273E\032%=\343\276\362;\264\252q:\340/\327\274\311Uh;o\177\373<g<.=\201\264X\274\355\204>\275\306\021:=\276B\233<D0\004\275\330\267\010<:}\274<:\204\267<\361\272B\275\177\002\342:\365\333\007=e\373$\275\215\362V\274\364?\n\274\004\315u<\025\014K=\375\3245=\305\n\035\274\324v\326\274\033id\273\335\251\317<e7\236<\033\374^<t$%=Y\366>\274\304s\r\273H\007 <\212\220\235<\321\'\235<\224e==)}\234\274\361\377N=4\265\372<\272\356\002\275X|\336\274Tw\017\275\363HE\274\250\302\250<\n\354\211\274\230\266\337\274\215\334&=\242\006B\275\260\355T=\215\330\321\273.9\226\273fV\225\274d\207\r\275\0223Q=\246@{\274\006BL\275\026\264\347<?D>=\200\n\347\274|\031$=\372\235\"\275\255RL<s\362E\275)*\376\271\237\341\272<\251\357\206<1\364\355<\003i\344\274\007M6\275N8\340\273\n\205W={\363w:\215\220\r\275\267\335\222\274\221hF=\247\032\362\2740\262\330\274B\271-=\313\233l\274\211\3357=\371\271\374\273\2003M\275j\345\003=\372\274%\274\216VF\274\330\352\026\274\372n\347\274I\200\220\274\211*I\275z\235\206\274\023\n\365<\256B\377<\337\207Z\274\333p\\\274\337Mk\274\013\351\004=\337\223&=\201\252\203<\177@\246\274\200\332\026=o/\362\274c\261\265<\003\036C<WN\332<\345c\026\275\277\324<\275~&\342\274v\362\236\274/\271@\275\334\335:=\010\3177=\002\177\033=\242{\262\274N\020\023\275\243\375\364<e %\274\235bD<\t\010\021=\326\265\254\273t\375.\275\243\033\216<\343R\234<\227\220F=\"\272<=\343F\320\274A \000\275\320\325\n\275\206\253-\275\027,\264\274O\332\207\274k\3620\274\2224s<\324\331_\274\222\320p<u5\236\274X\337\024\274Z$0=\306\371\001\275]\325k\274E\025\212\274\362W\240<\r\327D=\205r\222<\266\312\340<=3\364\274\343\223\'=\241\257!=\245L\\\272\014\246\265<l\352B\275\177>\376;\354\320G<S\363.\272\321\265.\275u\241\347:|\336\036\275\220p\353\274\030N\032=\271`\323\274\257q\"\275\227\203S=\027\246,\275n\265\307<Z\033\354\2744\235\222\274\036D\276\274nq4\275\361\372\335<\360)\324\274#\226\262<\334\215\006\274\355+\361<\371\205\033\275\270c\026\275\014;\205;\034\235\270;{\335\177\274\307\373\342<&\323B<\225bT\275\036\355\213\274\025\350$\275PN\341\274Tl\316\273\016\037s\273}\206\007\275^\350\303\274\260Q\347<GY\275<1tP<eCI=\342\272\305\274\252s\272;\2156|\274+:\020\274\202[4<\341\353\243;\024Wi\274[(\227;\217\336#=X\204\034=\356\nU\275\250\031/=m\316\230\274\224\240\211\274M\2633=O\341y\273\240&\013<\234\010\237<\017\035\222;\224\350-\275\213\314D9\335\000\326\274\016\226\332<W\2071=\177\226R=\000\242\374;\221R\010\275}\013\371\274iR\201\273v(\315<\271\017\035=l\013V\275\246\023\232\274\325\223\022=\236A\253<\024\251==\24465\275\310-\035=\243\036\223\274\276\324S\275\243\351\302<\263;\204\273\366\207\017\275r\342\375<\275:<\275\213\013F=\001?<\275Uf\242<^{,\275\335\217\257\274y\250w<\207\250\331\272\007D\221<\006\036Y\274K\214\331<\035[\023\274\\\r\033\275\252\037\030<\230\213\344\274v\tO\275\275Y\223<_I\305<\354\212\336\273\262\275%\275\307O\037\275\217\251K\275+\375C\275wr\343\271\026i\245;\300m\r\275m\025\350\2746\030\205;\311\301\304\274\021\310|<\017\266\220<\347Sh; R\213:\210\311#=\225\274\315<+;\251;I2\223\273\365t\'<%=\026\275?o:\275gl\005=n\243==\356$\265\273\362\306&\275\206\357\250\274hc\371<~\3330=m\246R=\250\005\350\274\\Pz\273.\2731\274\202\341$=\376,\300;\037\373+\275\325\263\256\274p*\031=\277N\346<\231\206(\275\317\371\316<\036\364\031=\240\365\206;\375\257/\272\217\341}<\345q\261<\314\017\233\274\273.H<l\276\346\274\220\266(=\341\320\322<S\211O<\355f\255\273YY\214\274D\300G=\201~U=z\216\223<B3\313;J\344\262;35\254\273\315\271\001\274K\2261=z\343\307<2\266\313<\274\241\225<}\'\247;\027\027\025\275\363\377\366\274\263k\035\275\n\3409\275a\350{;\246\363W\274v!\216\274\310\334)\2758\212>\275\275\332J=\202@\240<\205\277V<\000\023\001=\017\335\013=\244\302\n<\252\024\254<\267\300/\275\310\342\350<\003\"\351\274\241v\005\275\221=!=\214<\025\2749\014I\274f>.\275z\177\005\275\324f\013=\324s\323\274\t\035B=qGS\275\376\026\016=\036,{<\376\212f\273:\211R\274%8\034<\035Q6\274XS\326<\2165\371\273v\300B=I\000\317\274\314G\211<\r\331M\274\360\321!\275A\350\026<\013\222\n=w\211\241\273\310\3025<}\244.;^\203\361;\t\023\036;+\203x<\031B(\275mr\316\274\255\260\005\273\275>\340<\035FH\275K\377S=\370u\t\274v\214\233<W\227\215\274\024\003\024=\213x|\272*\003\352<\270\316(=\344,\255<\374\270T=\372\346\311<\263\033\224;\206\030\r=\001M\363;\022\242@\274$\377\030\275\336\216\366;\024\2562=\\[\022\273q\350\221\274\321)\351<\3228M=\220\025e:i\201\277\274\'\352\346\274\311\335\275\274\273\206C\2752\246\"\275\273\230>=\3636r\274L?J=\035\370%=Q\212\032=\326\330C\275o\'U<\211\2047\273\273B\304\273\021\267\360<.\022\270<\231zB=\271\177.\275Z\266\"=\020\260r<\033\005\257<8\366\"\275\352\3247\272\007\205\276;\273:\356\274\355W\377\274\207\227\025\275\205\2646\275d\t\025=\020\372\355<\321\234\341<\336\316\357;GPg<\325\325\t\275\313\315%=/\016\034\275\247\2536=\346\353.\2752\300\244<4\337\342\274\347d\027=z\354\356<\000i\357\274l\341b\274#\030V\275vs\260<;s\034\275\360\240(=\270\224\355\273\343\313E=\335\321U=m\026\020\274\225\314\323<2Jy<d\333\010=\237&\"=\006\315&=`\377\034=\241&\020=\306\331H=,T\034\275\263@\3029\332h\350<\317G\236\2747\3529\275,e\005=d6\221<c:\202<\307/\271;S\333|;\315t\033=\323@\315\273\211 \223<K4?\274\260\205\024=\371>*\275\212\223#\275j\'\312\273\215\370\004=\005\374\221\273y\207\353<\032\307R=\261M\320<\355\334\271\273\037F\004=\2708\021\275\3106#=\266bA<\231k2=\'\273\340\274}\367\317<\004q\314\274x\001\223<5\025\034=\334\2035\274b\n\226\274\'\222\007=\\VW\274t\301S\275Z|)\275\371\\\t\274\007RD\274+ \031\275Y\223\241\273/\366\301\273\331\276K\275\003@\241<\217=\360\274\204\016\342\274\241;\302\274\257\2077=\374\206(\275@\227\235;\313\277p<\217V3<\336\003\030=\333\350*=)\273B=\233\323D\275\000P@=l\017\356<\2457\346<\024\373\225\274\351\214c;\014$@\275G\3209<\245I\026\275\235n\023\274@[\001\275V\323\017\275S+\354<\366\256\365\274\217\275\021;\'bF\274\351%\304<\235V<\275\0202\240\274@\271\211\274\2336I=\245y\353;l\361\236<y8\240\2746x\261\272AfV\275\271 &\275d\225\025=\234\014\r<\232\3312\275\027\213\021\274\375JH;JL\'\275\303=\016\274\235\2312=\261!a\274\277\234\334<\003\033\266\274\177T\330\273,\223\013=\273\207\246\274\324\314M\275D\243\361\274\343\252!=\\\323\035\275\003Z\225<\000RJ\275\302\363\351\272\251\345\312\274\335`\033=I\233\362<\035t&\274E\320:=1\311;\275#\220\351\274\014H\024\275\240\322\030\275\216~\037\274\242e\024\275\271\351{<_#\001\275\351\030\322\274\313\010\300\274c\222\360<J\235\036\272jt\213\274\353K\013\275\335\317<=w\313\331\274\244$\365\274\364\000\300;1z+\275\233\314J\275\233\036\265;?tR=\322\017Q\275\035\202\364\273\205\221\335<L\3401=\216\274t:\332nj\274k\261M:\324\337,=\242H\307<\312\007\263\274\260\362\'\275!\304\316<c\034+<\216\324\376\274\206\365J\275\0004K=\220\322\257\274\203v5=\300\3022=\315w\322\273\033\221^\272\n\354`<\257\340\207<\214\375\025=\316\275\023\275Y\341\365<S\220\215<\033\260\346<\'\r\360<\207\321\213\274\257\035\020=\374\273!\275N\245&=zW0\275\013DN=]\310@=\352\372\030=\207\201\231<\000\341\t\275Ld_\274\350\'M=\300\367\201\274/\204&=Q\2400<\265\007\325\274\203\207\001\274\226\222\022\274y\034\376;W\306\\<]\026\250\2744\237%=\367Q)\275\250]\323\274\031\205T\274\005`N\273An\017\275c\363\304\274\370\320\315\274\350\223 \274\007\265=\275\373\243\230\274\242\262\010<\310\251\370<B\260L\275j\322\033\275J-\014\272\223\347\255;6\313\307<\267H9\275uF\240<A\036!=\213\030\020\275\006\032e\273\205\\(\275\3608\216< z\037\275\033Z\322\273\225\366r<@\217\255<\n>\302\274`W\t=\323\032\031\274C,\360<\311\210,=\222\014\007\275|\3578=\316\364$\275o\300\370;>t\t<M\211.=\360\3739;\003\034!\275\276y\334\274\316|\250<\235\304-\275\342Wc<\222j\322\274\274e%=#\301>\275\257\004l<\t\\!<\215\330B=U8\003<*bB\274V\377\237\274{\330?=t^@=O\2458\275\267\301\003=\340\256@\275p\037/=\345\024\262;\030(\t\275i)\"=\2205U=\355Q\215<\353\233\266\274\267\242\310<\263\317\021=J\030Y\274\264E5=\261R-\274\323K\005=\204\010\257\272fu\306\274g9\"=\233\037==\343\312\233<\332\2719\274EZ\n\275\2056\262<\r5I=,B =\257,\315\273\330\202O;\257\216(\274H\'N\275\341\367\275<\265*G\273\200\376!\275L\236\030<\007(\375<\036a\000\275p\354\226\274\237\322A=S\036G=$=V=\036\3474\275\210\374\305\274\231\226\032\275\215\332u<^bA\275r\212\014\275\307\233\037\274\217\317\303<^xW\275T! \274M\234\314\273\033k\005=rh\214\274Lm=\275xM\221<\365&\231\274}\335+<\233\3477=~\371N=\220\310W\275\035)N=\240\266,=\357\371g\274\237\263V\274\007p\272<\031\323\242\273J\260B\275\340\222\017=Y\210\013\275\t\223$=\330\365\347\274r\206\374<\363x/\275\307\371A=\343\343\\;#S:8\035M\245\272K\332H=\'\036\200;\330\360\355<\221\253\276<\266\335\263\273\351\3765<\377\036\340<\263-\235\273\261\350=<\231\366\001\275\232Z\"\275\234\024\272;\t;P<\227<T\275W\016\335<C\313x\274\016\014\377\274<\360*=6\tP=\315\355j\274I$@\274\236\033\t=\271AK<\365f\324\274\030 \034<\205M\226:\233\317\034\274\225xE\274\277\021\222\274qj\200;\023\271[\273^\251\255\274\344\346\003<\300\347`<\245\t9=\257\002\263\272\237\237\374\274\343\035\324\274_G\021<m\367D\275N\230\016\275\336z?={\312\336<\006L\024\275\010$%=\344\267V\274\362\013\225\273\032M>\274\\\277\337\2743\037\342<\322\335\374;C>\230\2748\3630=\035\353+=W4#\273\007j\023\275f\242\331\274\303\006n\274\314\2732\275\232GM\274\366\220\261<\021\t\013=k\322\027\275\347\232\241<\032\262O\275\036EU\275\312\026\353\274\264\3104\274\317\360\033\274iqT\275\327\375\017=\345S9=\347\374\005<}N\214\274\377\020\202\273\342:\003\275\323\361\362\274\347\3766\275\t\335(\273\3709\211<9\365\203\274#\264O\275\200:\252;J\255\3518v\032y\273\360\315\035\275R\240\324\274\237t7=0<\014\275\225\232\031\273\363\024\350\274\2760\007\273\304\322 \272o\343x\273]\256\000\274\373\215\225<\366\0054<\301i\214<\252fI=F\366,\275\034\3461=QB\242\274g\243?<\274\215Q\275\372\205+;\326\354\217<\250\364I\275\333\230\314\274u\211!=b]\302<\306\225\'\275ni\334<F\021\360\274:\227\271<\200\033\033=u2\310\273\234\264P\275\350O\325<t!F=l\250\"=\014J\013\275\335\t\255<\013\317%=r\262.=\027\306k<\310\2116=@\347Q\275Q}\211\274\035\252\357\274[\354\233\274\312n*<\311R\323<n%\034\274\214\362G\275\270\027\027\275\244\2109<NB\034\274G\327\323<C\353L\275\201\021\343<\303\271P\275\356\016\365\274kY1\275r\216\2169N\177@=\026\007R\274H\353V\275\241\215=\274\003+4=\335\216\032=yc\370<\374\355r<]\247\177\274\332\313~\274\207n9\275q\'%\2759\262\200<\210\023\334\274:I\220\273\325\256\247\274\203\317$\275\024\020\027=k\203\214\272\362\026\026=e%\000\272ub\274<4\3273=\036P\362;\264\033D<6\226\021\273\020\022\377<\362\375\263<\234\277J\275G\344M\275\366C\004\275\254\001\341\274\262\021,\274_\261\213\274\'5\226<\337\267$=\006\251\265<\030\005N\275\242\307\020=\344\005*\275\357\026\234<SmV\275~\0061=)4g\271\313\2727\274\2778\224<\\\341\334\273\010\323#=\005\351\355<)\255\211\273\3136F=\315V.=u\3209\275\007&\346\274\232\212\266\274{\314\301\273=\322\346<\":\274\274|\224\010<n\230S=\036\251=\275F\233U=\220\371\002=\220S\323\273\n\335o\274)M8=\026\357\362\274\002\331\326\273\366p\301\274YC\036\275r\024\344\274:\016\355\274\214\262\363\274w\224?=L\317S\275F\032K\275I3\311\274\003\225T\2744g\272\274\367\224@=\243/Q=NA\256\274.\370!=\017\005\023<t\314B\273$HW=HR+\275/)4\275\207gT=\210\374\376\274>\222+\274\213\236\367\274Tg\303\274Z\371\223\274\314\252I=\303\261B\275d?R\2757\024\337<V\032\037=\256\332\216<5{\225<Q_\367\274{> \275{\307\264\274\036f\214\274y\375P=\'eh<\343\276\004=x\215D\274\257\266L\275\013c\372<W\223d\274\324\252\003\275\221E\003=\2212)<\200\204-=xU\252<@q\353\274\3530\364<\321&\n\275\000\300]\274\346\267;=\001\016\360\2748P\253;\031\334I=\275\035\002<W\371\023=\014L\010\275{j\024<\212\036@=\001\023\013\275K\200\216<\313==\275\tp\347<\026\305N\274\007\223#=\32041\274:\207N=jG&\272\272\220\t\273\005\350\206\274o$\300\2735V\336:\215a\251\274\372*\030=W\302L\275\016\350\033=\252L)=\236\221$=\311\345\n=\343\023\010\275B\177L\275&,\360<\225W\224<\210\361\200\274\217#\007\274\231\313\232<\361\265\216;.Qs<\211\367\275<\370\343\005\275\016`{\274\204\255\230\274\267\322\201<\364\033\002=s\276.=\213>\035=>\032.\275\266\332\022=4c\336\274\273ET<\315`\340\274\\PA=\267CG\274\242_E=\235\266\322<\317,D\275\335\014\n=+\332\265<\273*\004=d!\342\274\034RO=\263\372&<\033$\303<\025\271\313<\tFa\274f\222^\273\376K\014=\034DI\275:K\261;\013h>\273\224\322\\<\252\250\370<\311L(=\304\016\005\275E\244\232<\330\217G\275@1<\275\363\0213:\361\236\324\274Ga\021=*@\332\273.A\330<\323\033{\274H~o<fS\260\274\3368\r\273\274\312\t=\300`)\275:\310i9J\027z\273\252\301T\275\023\355.\274\330\022\352;i\271/\273\363:T;\226\275\201<\324;\024\275\322\035\016=\n\257G\275\370q!=\303\266Q=\201L\212\274e\014\3719\222\0371=\364\246\351\273lFE\274\227:\002=\266@\033\275\020\342v<\274\365\243;\232\177\202<\201H \275\236\255\374\274\212\234\214<\210s\310<\327I\2019\204\023\222\274\225\241D\275\026\263\224<\343hD\275\377/\007\274?\314)\2753\252\320;i\332\001\275XE\331\273N\2533\275\025\t8=\315\320r<d\036\326< P/=3aJ=\375\242\272\274\037\317\272:\227\340*\275\302\226\375<G(\357\274\265\330T=\003K\034\275\r\023+<s\331\245:\336G\250\274H\0041\274K\362\370\274\342\272\213\274\261\0213=\3519\037=\227\034\276\2749h\r=O\337{<(\036\303<\275*8\273\014\275\032=,lP=\307\334\241<D\302\317\274pI8<6\237\230\274G:\000\275\313\300\355;\010\273\004\274V\341\362<W\227>\274\252\244\013=y\230F\273\323\272\371\274p\"\022\274\000Z\355<\334\322\026\274[\306\022\275\032\250<=\310\324\206;\001Ic<\014W\314<\310\337=\273\032\t\236<\355\247\001;k\205A\275\354\272+\275?\351\324\274\035\273\003\275H\335\341\273}\266\016=gf\206<*\363L\2753<+=\257\273r<\026%\324\273_f\220<\233\267\246<v\270!;t1{\274\013\256g<J\3559<\212\260\020\275\2544\222\2746\032\301\274\210\362O=S?\236<\236\372G=|\304\032=\212\014\376\274h\362\236\274\360\323,\275\370\363-\275\277\205\367;P\202M\275\207\3175<\217:|\274\270\346\026\275\276\254\016=ob\021\274_\345k<.+\n<\325\330\312;\"#\227\274)\353S=\223\3744\275\020,B=\026\277\030\275FU\002=\333\203\341<\3779\t=\213M0\275aI\013=\267\1776=a\273R;&|\n\275X\261V=\274\037\373<V\300\212\272k\321\346\2743\317\333<S\253&=\316\246\000;\330\260\272\274\177\351e\274`\354.=\302W\312\274\030\nL\2754\313\341<9\242?=\352_\372\273\215v\037=]\0224=\353\233\016\275Q\\\302\274-\027\007=G\0207=\221\305\354\272X\340\250<\270\361\265\274\340\372k<\214Jb\274c\220!\274!\323\263<\007i\242\274A\200\276<\032\227&\275\210a*\275\304\356\261\273[\334\010\275\247m\034=\355\014\353<\356\317+=~\\\032=\000\316\345;\005V\005\275\233\2239\275\276\230\3439\274\206S\275\203Q\322<+\376\273\274Q_>< \301\311\274uo\013<\365\3233<8O\000<ZGc<\271\257\335<K\217(=\226_\271\274\270\375@=ev\242<\222D%\275\221\301\023\275pz.=\266\001q\2748\001\364\274$\372\030=n]\350;\243\034f\272\277\365O\274\277\014\"=\330\206#=\201\265J<\303=\266\274\013a\2429\203\243\306\274\345\036-=8\017\331\272\354\302:\275\313\2358=\3626\336\274\215\260,\274`\313\001=\343y-\275l\r\270\274\02249\273\\\331K=\006\315z\274\324\344:\275\350\366\021\275\223\2433=\346\350\335<\331\331\260\273\327\276\300<\200\3312\275\021\344R=\337{\265;G\000_\274v\311\321\274\274UR\275\310\332]<\344\220\\<\332\334\350<E(V\275\313\260\305:\321c\231\274w|\357;DX\256<\224\267\026<\303\036\3169z\377C=s\021\352\274w6\213\274\237\313\266<&_+\275\2473Q=}B9=\250Q(=\331`\212<\336U\277:-\373#\275\347\030\002\270\016\273\324\274tu\360\273\025\263D=p\376}\274\240\243\271\274z\020H=hk\316\271\021\331\252\274\317\340\023\274<i(=\354~F\275\355\004\t\274\364\014*\275Y\341\002\274\326*\007=\300\331\n\274?\363\376;3\3530=\271\360P\275\254\251\021\275\301K\032;f\232\365\2731\002N<\232@)\274c}\201\273?\377)=\233\371\354\274\267\240I\275\033\037*;\215s\030=\364\030\034\275\022\357\340\274\270\357D=\003\033H\272\360l\347<M\032\225<\233pV\275^\351E=P\233\207<rM\271\274\337\217)\275\254\224\216\273`\2039\275\375a\213\274\246\230~<\371):;\260\223#=\030\220M=\255<\211\274\022\034]\274u\r\002\275\277\274\223:)\201\274\274cV\347\273\346\241\324\274\005\337)\275\316\217\236\273@\245\032\275\377\000\313<\225\355\232\273\235xL=\301\'\357\274iHQ\275m\356-=\262o<=\317\356\034=i{\t\274\034\215G=\020\335\'\274\370\335H\274\317\001A\275+\260\031=8\375-=\306\376\323\274\300kR\275\200h\235\274X\230\246<nT\022=V\247\244<\035\216\345\274\335\026\360;\315k8\275\302\366\214\274 \266\314<\336\257\013\275\234\237&=\253\274\342<7\375O\275\026s\013\275%\365\307<E\217\010=$\240\003\275\307\030\027\275\375y\232<i\263\221\274\032\222\005\275\247\355%=i(\001\275\2373\266<\"\020\356\274%\356-\275\336\002\314<m\213K<\223\265\352<&:\000\275\007\031\005<\373$\263\274\033\216\321\274\251\307\300\273\310(\204\274\274x\017\275t\315P=\357g\333\274ChU\275\321\033\016=G\373P\275D\006W<_EM\274\020\201\r\275\256J\r=\010\177;\275\273\210.\275\024\266\352<\373\354i\274\"d\237< R\353<\364@\033=\250%#\274\n\2641\275b\201\034=##\362\274!\254\010\274\200\201\256;N-\271<8/M=\267N\260\274\3217\220<\023Y\007\275 \006Q=-o!=\032\303\224;\202\006\014=\335\274\337<{I{<\370\376\251:\240-\232<q\2543=2|\353\274\237\3462\275\236\034\004\275\024R\367\274\341X&\2745+\374<\205\272\264\274g\232 =\346a\336\273\362$\356<\232\342\016\273\314h\237\274\371\000\373\273s\024\035\275:\014V\2746\r\021\275\326\014\"=\353w\273<\254\330+\275\236X\004<\336n\244\274\351.M=\001w\246<\352H:<^\004\226;K\216\276\272\235_)\275\027$\361\274\362\351\026=\267g\233\274qzG=8\274\303<\016\245\213:\243\327\203\274\2765\324<\031uA=D$Q\275hs\364\273-\024t\274\006\022\014=\254.;\275\363\327\'=\203H9\275\240+6=\374\265?\2759\205R\275d\"\027=\372,\265\2732\342\001=\241\023a;A]\320\274v\306\007=\252\034C=\022\372)<55\273\274 \352\267<\247g\334<W\200\324\273\324,\222;\214I\261<\003\013\337<y\342\375<\244CA\274\241_6=H\010\035=\360r\373;&D:\274c\220\246<,]\250<CA\211\274!\320\237;=|`\274\'k\231<\365\005\321\274(\030$\275^,\367<x\261\326\274\330\276\000\275\321\333(=\366[\005=\367\r.\275\"7\"\275\250\220{<\n1\033\274\373\265\242\274\356\"\032;\324\033R=1?K\275\031\347H\27555R=\351\371E=\322rU=\0105\222\274\3437\017=\325\304\223<\217\031\210<\231\227\237<\231\370\277;\376\252H\275\344\270&\275\341\003B\2723\006\360\274\374\356\007<\217\377h\274\2374\252\274\251\322%=:N\005;\217t\276\274\017w\010=E\037H\273Xt{<\317\032\320</\364\027\274\363\260\006\275x\343+=\250\227\002=x\346\332<e`\300\274\177I\311\274\312\327\357\274\264^\014\275\236\326\337:\347\377G=\202;\376<\244\231Y<\264\215,=HM0=q{D=\205\312\246\273\374\366_<K\022\033\275\302O\356< x\021\274\360d\303:B;\003\275\262nT=\t\007\262<\325|\032\275\023k\367\274 \230\301\274\\\332\200<\031\272B\275\363M\225\274\317L=\275\237\214\246\274\020\310\277<\372\301\346\274YXL<\2643a\274-o\260<\300\035\221<1N\207<\332\317\232<\315\347\241\274<4,=\020\233\221<\316\246L=\310\237\035\274GvE\274\'\254w\274\227\024\006\275XG.\275\016\310y;6\2656=\351\235P\275w\314\030\275/\274L\275\tv\372\274j\207\023\275\206\376\257<\306\227\017=\311\020\336<3\0309\274e\231Y<\344\203\023\275^\373\034\275w\356\335\274\251H\316<)\236\300\273O\317?\275b\222L\275\327Z3<eA!\275aR\034\275k\321?<Jd\361<D\"6=\017\351\340<;n\256<\307\026?\275\336\350\317<\351T\340<\270\271D=\274A\371\274H\375y<zH~;\200\272\227<\254\303#\275\243\037.<\263\236T\275\352\212\231\274\252}!=\362\240P\275M\212S\275\232\324\025<\006-\322\272\244\202I\275`%#=0\201\301\273i\375\n\275`\356\010=8 \231:\300\367\215<\325\275\342\274\312\374\002\274bm\005\275\245\377P\274\231Q\300<\225\027\320\274\030V\004=\345\371\030=y8*=\251K\215<!3\000\275^\201\236<\017z\031=\246,\244\274\337\371\224<\341\2063\274\336 \266<p\005\306\274\302B\020\275\256\356a<@\021\260:\010j\252<p\327\242\274\256\237\013\274\336zn\274\010~\345\274\234\231\032=\235\031&\2750@\030\275\021O0\275%\325\320\274\345\010\320\274\266\0144=\213\2306=)\017~;\357\010\031=\245\251,\275\0059>=\322\rR\2751X\303\274~\305,==\3479=F?\033=\316n\n\275\254H\n=\355\226$=\016j\257\273\271rN\274\235W1\275\274\221\034\275\346}^\272D\262\360\274\316\027&=F$\342\273\007\303\031\274b\363\260<\306 Q\274\365\357\020=\243\342P=\200\337\000\275\214\251+\274\305\355\035<\r\0050\275\267\360;=\330\327==J\3120=\330\201+9U\327\027\275\320\201|<\250\316(\275\362\025\023\275)\221\266\274\376\034\373\274\247\374\364<\257\214\356\274\353{r<g\263\347<w\204{\273U.\024<\363H\225\272\rn,\274H%\223;\337/\017\275\365E]\273O1\036\275\204\214\202\274\242\025q;\222\303\037\275\265\3425\275W\027\026\275L\032+;\221h\375<\251\210\230<Q\031\254;C\242\320\273\213=3\273tW\246<\205\350\t\275\270F\023\275\236U\336<\215*\256<6\231\263\273\255\317\324\274\2412F=a\0334={x\375\273\016\335\310\274\323$\307;\000\335\345\274\277\363\002\274\332\027A\275\325\367\021\275\347*4=\020\314\221\274\240\265j\274\033\304)=S&7=X\014\200\274v>/\274\n\003\204\273\302[S=\264\347\342<\261\3454=\037t\035\275\347=~\274\221\336!\273\221\014\343\274\250\000\373\2730\273\027=\360\232\320\274\321\020^\274qs2=2\362=\2759\306#<t\323\255\274\023\220\244;\231tJ=\242\361\207\274rb\017\274r\035\364\274s\200A\275\016^\362\274:\001\221\274/\035\345:\253\232\023=/LO=y\232x<\313\252\340\274e\204\241\274\257\213S=y\202\233<\260\253A=\305\005\242\274\372\036\035\274\207~B=Yx}\273\374\023@<\265>\370:wL==\260\030\025<\301\364K=\352\365=\275+g\224</\0342\274\"\204\357<W\030\261\273\277V\"<\223\353\001<k{\032=\013\344\257\274J\331\005\2756\327\247:g\232\212<\252\250K\275-(@<\260\245S\275\363UO\275\251|?=\3727\005=\342\210$\275`M\220;\355\361\333\274)\333\313\274\267\2751=%.\024\275\r\213\205\2748\262\375\274\275<U\272%c\275\274mZO\274~\314\267\273\010\014F=r\3466=;\206+=\305[\325\274\205Q\001<\373\023\322<\263YA=\230\253\002=\371H\025=)C\367\274\203\217\331\274\204k\025\275\222\202P\275\032\342@=\273\020\243\274\335\205H<C\207d;\201g\373<\346:\007\275\006m,=zth<\34300\273Vf\247<\n~K\275\365\367\350<\250\244\255<\267aW=!J\370<\216\031>=y\331-\2745?X\274Aj\002\275\t}\026\275\024\233\376\274\371T =\267qp<kw&\275\000\240\352<p\377<\275\204\223>\275,\362\342;\340\356-\275Y\265\264\274\314\254\035\275P\276\302<\230\233O\275@a9<\242\000Y\274\242\352Z:\035O\331\274\257l\020\274\201\352)=\306\3323<nF\016\275\350\307h\274\332\252\033=*Z\344\274c|\246\273\201I\006\275\341\0253;G\260\005=]EU=\307\311\003\275ue\370<\032\236D=\236Yf\273\253\004\001;X\340\324<\360\211\263:\2430\201\273\212\003W=j\256P\275f\312\203\273\022f\027\275\023/\230\273\336\204K<\342\\C\275\n\302\366\273\275\377\330<\233\307\202\270A\2641\274\247A\214<\331\232\360\274\342*B<\374\275f<=)\377<\013\247>\274\037|H\274\255,\355\274\001\335\217<\212\334\370<G\335\327\272\366\247.\275s2\020\274I\n\024=\026\001+\274\221\231\024\274\002\371\320\274\371\002W\275v\037\322<\217\245\364\274\217\nB=\234\377\275\274E\300\025=l\277z9\232\243\032=\300Ag\274\374/6\275\337\372\363;\245\250\014\274bI%:k[\211<\026h\320\273\227\031\247\273@~\305;\033\257A=\014Z\213;9\2666\275\244\340\016\274\'\254\010=\236\020\3549\332\027\030\273\255\001\270\274.\334\032\275\344\237\006\274\244\262%\275\320\370\222\273<\225-\273\234\357G=\215\355p;?Y\355\273\257\007)\274\256\350\003\275\347\"\010\272\016\226\355<\261)\036\273lG\366:OP\005\275l\233M\275\r\344\322\273dT\177\274_\235\010\275C\317E\2757\335\337<E\2211\275=\"\225\274\231\322V=\033\023\353\2745b:=c\277\263\274c\017\214:\330\333D=\356|H=\237*\341\274\315q3\274\275\201\345<\354V\002\271\3058\022\275V\016\017\275aD\006=\346 \023\275A\334\202\274Ag\n\275\376\337\007\275`\341\207\2735\262\213<\373k\255\274[\2530=\2520+\274j\312A<\361\031\371;~\302\001\275\301r\323;\200@\227\274?\252\353;\230s\336<\200\341\347\274\302\221N\275\234t\032\274lHG=\304\243\004=HTS=\217O4=\224^/=POD=\374r\004\275w\345>=\216\235f<\362\022/\275\237S\247<\343\255\200\273^a\003\274v\344\017=\254^\300<\334Z\233<\336\245\260\274e\374\220\274\347\352\233;\350h\027\275\360\346\277<Yy6=\204\266\225<\006\377\033=%\264\017\275\210S\252<g\315\033=\352\266\006\274\020\363\325<d\233A=\215(\221<g\241\014<%M\027\275\210\266\346<U\344\310<\237\316\351<\312`.;\356\031$<\200\3331\275\031u\023=\340^\013\275\213\\\002\275\273X><N\001A=F\305\365<\342\034$\275$]\007\274w\274\006=\370\223B<wi1\275\023\260\343\274\205~7\275/\025\377\272g\377:=,\225\300<\240\2772=\225\240\014\274\232\331\241\273\037\313W=<\032\004=\267\331P<\373x\306\274\266G+=8\333\037\275\305\341\031=S\000\335\274\352\0013\275a\243\022\275d\252\'=\270\275{<\262\250\013\275\372P\233<\250IK:\003;\036\275}UT=:\354\253\274\361)\330\274\036A*=\310\262\351\274\014\326$<\223\216\031=\232m\261<M7\035\275`/\311\274 \350h<g\030\020=\020I\214<\251\216\206\273\304% \275\237\231.;0\253\005=\0311k\273\304\217\363\274\256\321\355\274@Z\037=#4\031=\311\3546<o?$\275)z@;\235\362\031=*\206v;\341\247\014=\322HP\274Z\266*=\334p\264\273>K\224\274\240\243\312\274\271\242\t=\230^ \275\307\262\022\275\223LB=\236N\000<\301>\327<\017.\322\274:\306\227\274H\'=\273\216*\024<\364m\257<\234\374n\274\030\027\325\273\376\312\306<\3139\034=\200!\2219\2666%=\017E#=s\345\365<1\253\r\274\374d\000=\331\346F\274\355\000M<\200y\354\274\013\226:\275\333\313t\274!4x;o\325.\275\024\204 =%\317\272<\375a\371<S`\234;A\r\201;1\356\335\273&\271\252\272{\036\357<\n\316\263\274\334\245\224:C\205\216\274\236A\270<z\240B=\310s\004=\037\2172\2754\\a\274\266q\033\274$\220U=\330\2368\274\333>W<C\0240\275\025\366%=\312t\033=\377\365(\275+\363@=kG\205<\266$.=\353\264 <\310\335:\275\254aV<\365\235\030=6\224*\275\230\311\026=rF\014\275\307o\204<\274+\013\2750,\221;\320\314\032=;\010I\273\311:\305\274Be5\275n\3608\275d\335\017=\351\0250\274\305\3456=\023\350V=\3775==\372:F\274\312\261\006;\257\364\247\274\177.M\275\324$G<4~\327<\334l8=n$\032=I\2060\275\2534\360<\2534p;-\3745=\'\257\033<\315\370 \2740\372 \275\340\033\253;D\2623<\021\271\003=\203?3=\210\271\211<\260b,\275\331:\307\273\006\034\355\274\033QU\275\264u<=Km\026=\362\r4=Z4\026=g]L=2C>=N\361I<\372M\275\274\'\326\355<\201\241\002=\016W@=f\274E=\3240\264\274\337y\354<\350\0206;\002r0\275,\273\003= V0=;]i\274\257Y\031\275tW\020;\362\\8=\332\035.\274\233\234\347\274{\375\325<\205YJ\274\3052\235\272_+3=%C\325:I2\210\272\260Q\257<p2\031<\300<\033\275\372r\220<\302\353h:u6\316;\3673\006\275\310\273\004\275\344\220M=\376_\325<\2177\267\273`\203\232<\335\344\241;\022M\002\273\033\1774=\"\264\006\275\313\025l;T\023\244\274\267\270\017\274\372\340\365\274\355\224j<\244\215\335;Z\177\r\275w\030\n=\216gG\274\341\303\036=\305\363/\275\0031}\274]-<<\343\376\374\273\355\025<\275\2760\326\274H@\222;\357\317#<\202\362,<\326iL=\301\344\201\274\264\333Z\2742\017\206;\225e\354<\340\026\225:\362d\233\274\277\001\232<\213\\3\275U\346\301;\013\032\256</Y\311<\361Ue<\265%\223<T\3454=\226\374B\275\035\321@=C\177\345<\361\376C=P\177\342\274\215N/\275q\223-=oH\323\273\007\251V\274\034+\275\274G\275\021=\330pO\274\210j\341\274$\365D\275F\2128\274\2043\252\274r\325\250<\t0;\275\335\276H=\276O\345<\203\320$=\026\342E\275\377\271\217<\374\013K\274\251~\272<\325g\026\275\246\271D<b\203Y\273T\2008\275\241>\350<\022e\304<\373\373\342\273!\261\213<\307\240n\274\356lZ;\312\305\352\274\261V\343\274\302e\023\275\013\010\n<H\363\251\274\270,\276\271\\A\222<\206\300\266\272\337\277\026\275\346\037\t\274.\254K=<\354\227<\363{\224\274X\226n\274\001\256\326\274G\337)=$\335\027\275\354\373\033\275Vr\316<aOJ\275\306\241\274\2740\034D\275\260<\237\274\206\304\034\274N\214@=\024MM\275\rl\331<^Ep<\274M\211\273\215\236\370<l\276\357\272\234t\330\273\003\035(=2\352e<\214&9=\312{\344\274w\027\355<.\332\244<\260\201N;{t4=\227~S<\230\310C;\314\254M\275\207ZJ\274z\026\000\275J\'u<i\250C=\226\353\003\275C\262W\275\311\013K=\374\315\\\274\303O\301<|\260\325<I\3676=\333J\036\274\305:\223\274N\001\016\274\312\372\016\275\033U\367<\254L\003<\371\275\216<\335\263S=v\330F\275\000\274S=B\341@\2748Z\007=\303\021H\275\343\3049:"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2150
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2150
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\370\216Q\275\307x\314\274\221\372\307;\272\3103=GjC\2746l>=\245\301z\274\303v\025\275\360Z\352;W\3126\275\207s3\274z.I\275h\241/\274\222\005\027<\272M\031\273\256\263+\275\372\n;=$\212\277\273\013\234\306\274F\311\377<\000\255\220\274\n\367\242\274s\237I\275\223\356\377\274\330\230\263\272\023\2607=H\025W\275:T\356;,\315\031\274d\224\022=\365}\246\274\301\250\002\275Dz\037=?4\021\275e2/\275\272Y\212\2720*\177<\363Z\201\274\367F\366\272:Q\032\275\203B\223<\206\025F\274\r\345r:y2u;3\315g8\275b\323<\347\343\313\274\232&\016=fDH=c\020\"=5\017s\274\361\212\025\274\230y9\275rMe\274\254\017\366\274\334\223\350:d\246\327\274\317\"/\275D\217\037\275\230\014F=h!\351\274H\266\327\274k<\030\275-\375\003\275\215\337E\275\225\n8\275P\026\032=m\226p\274\301-\310\27412\"=\0354f\274v\341\307\274\203\017.\275\271\261\226\274.\344]<\020\344\3529\231\237N=\207\336\304<K\020H\275\016\313\340\274\333\312\325\273J\2452\275\357\347B\275\325\204\272\274sVG\275/&\017=`\000\241<\345\222C=\331S\000=\223\206\030\275;J\350\272\265\"\277;}4\300<\263\317\250\273\227Z\351\274yz?\274\r\377\366\274j\237_<c\261/\275c\311\022\275u\005\017<w\377\353<\264YQ=\207\274\351\271\000\177-\275L\273\036\274\324\352l<\236h\270<\244\020\301\274\3127\272\273^\243(<\0210\372\273\214i\210<\373\273\003\275\222\244\353\274M1@=\215\273\213\273\232\0019\275Z\227\201\274\364\027\002\275\354\374\003=\256[l<\257\005p\274\347\277R\274\252\333\"\275,\016{\273\301\247V=\2433\341<\335\013\203<y\014\304\274\021\241\370<L$\317\274\307\273/\275\231\027\026\267\017\273_;\316k-=\277\233W\275\211\331\027<\031\270\t\275\320aB=g\205\344\274\022\244\010\274|Y\037=\2565\214\274u\353\027\273\242\275\006=\307\361:\275\357\333\344\274\376\3349=}L=\275\211\306B<\352\000\n\275\266\027\035\275\302\235#=\353\212\031=\003s*=2\322\266\274\n\203\314;\230\310\001\274\2354<\274\'\334\370\274_\210P\275uM\272\273\264/\310<(\320\211\274\t\005\213\274w\251\002=\010\350\222\274\035F\212\274UQ\3279\206\310S\275\t%\257\273\376&\324\274qo\365\2744\337\2159\276LB\275\343\363\000\275\337\370i\274@\254\253<\207mb<IV=<x\007\017=(\243\353<\n\205\243<\nC\237;\003-\227\274\234\375\002\275\216\235\325\274X\364J=\275\327\275\273\374\2440\275\353\000\202\274A\\\t=\005\2345\274\002\364\237<<\201D\275\316\t\031\274I9\333;\302f\235\274>\031,\275\377\215\320\272\2336\"\274;\203\315<\305[\013\273x@1=\025\357(\275lK\240<\223\262\031=\370~\007=VF$\275jX\356\274^\356\022\275u\320\210<\370tC\275\272\373\006=3\2078=:\276\025\275\340[\320\273\244\327\026=\212\320L\275\325\325R=\346\366\n\275c/o<\354=P\275\270\367\240<\3469\340<\325\273=\275t\034&;N\261\334\2748\027\267\272\311\007\336<\375~R=\2720)=\261\345n\274\r\375\340\274|\340@\275\3756\333\274\260\036K\273\330r\356\274\365\355w<\227\032\371\274(gv\274a\262\'=l\014\216\274-\355-\274&\315\003\275\355\036\362;\243\"U\2755\334:\275i\302G\275\\\023k\274\\\037\342\274\004\017\260<\205\010Q<\246\336\323\274n\233\'\275\010\2545=3\3257\274\025\336\030=\335\361\022<3\222{;\2525:=\264H\201<\\\357\221\274\254\265\033\274n\340 =|\333\356;A\201 \275\027\202F<\t\213\030\275\342y =\216y\032=\224\2533\275\314<\016\275\202\353J=\264*\327<\245E6\275\335S\220<\241[\225<0\n\014\275}{\246\273\363\361`<\313\031F\275\037$O\274tB\244<\215\311+\274\207\257\016=TF\323\274\367\247%\275&\344\231<\222\365\204\274e\342\034=kc:\275\364j\200<\370\261\367\274\377T\032=\251\3512\274(`q\274\364J\032=\rS\006=\204v\234<\272\367?\274\356\003\202<\005\n\364\2749\306\322<m\250\027=I\267\265<\301\356\007=I\036K=\253\222\310<\357\024\252\273\265\016\000=\266\371\237\274\212\215P<\021\004\311;\304\354!\275\332\302-\274}\014\342\273&^\306\274\n\234\236\274\232\367J\273\327\353\314<j\361-=\345\'\252<w\250\017\275\351\221\254<\020\020Q\275\377UE\275>\031 =7S\036=<\020>\275\3270\243<\262>\376\274\375\352B=\34543=\313_5=$\377\"\274\336+L=n_\001=m\313==\305DW<;\035U=]\311\016\275\266\326$\275\234\230H=\312c\246\273\250\250\024\275\023d\304\274\340\034\000=\334\323\037\274\266+U=\267\311\240:Zt#\275T\341\365\274\353|\362<\364\003V=\276\036H9\261\035N=5\315>\275\206g\254:\005\020\322<7\2529\275\316\354\002=\177\236\350\274\376\250\003<\265q\242;\204\340\371\274+mT=\265\017\205<\235y*\275\022\2675=\202r\264<\246)\013=\212*T\275!Q\327\274i\347/<\237\326@=\013\256@=\212\331I<\372\312\027\275\200\222!<\376\326M;\360H8=\203yK\275\033\301W\275\000\230\264\274\0130:\275es\271\274\356C\022=\214\t\330\273\\\371\276<\320\307}\2743\222\264\274\344\311*=\365\2502\275\336kV\275)#\226\274\364\345;<\361\024\030=\232\0062=r\213\334;\372\201V\275\013\260i;\363\031V<gN\002\275\225hA\275\034\t\021\275\272\355\010\275\261s\363\274\017\251\035\275\311\3665\274S\301\000=H&\312;\244\354D\2758cY;\002\375\r:\336\251\027=\304EP:\004\016\013\275\345w7\274\207\017I\275\"\030\237<\366\213\'\275[\375\002=\325\242\"\275\343\037]\274Z\233\023\275\376\217];\332#*\275G\013\'\275\245g\026\275:X\301<q\266\273<t\322\355<\311\333\004\274\2044\221<)w<=\300>\036=\0255\374\273\374&\363\273\273^[\274`\336\233;\033\243\201\272\374#@=\360\235\253;\261_@\275\203\245,<\256\207\233\273w\017\351\273U\316A=p\235\020\275U/\016\275d!\371\274g\330\202\274}I\261\274\357\273C\275\000N\273\273RDI\275\177\004\'\275\000\177C\275o&D\275\362\3013={\346q<\340\361A=\330\314o;\250\305\020=\251\334)\275k\251\005\275\300\205\217<\022\r\010=w\303\277<3\273)=\236\236\303\274e\245\341<\314\n\235\274\347\201\364<7p\217\273\025}\260:\203~:=i\270\367\274\362\253G\275\334z\333\274\230v>\275u\341\026<a\036;<\242\031\343;\004\251*=\375\251\261;<\251\030\274\250\315\217;F\214*=\355/\311\274\304\020*\274!\177\320\274S\256:=*\255\355<n\314X\274J\236\034\275\210\032\275<\353\014>\275\235\244\006\275kH\"=\275\035\216<\277:\266<\333\235G=\312\r\256\274\243\'\r=\034\314\032=K\371W\273`\216\371<\315\222R\275\355\262\017=\003i\317\274\341xR=\025\024.=\315\222\264\274\362\036\315\274\263\005\016=f)\375;\240 \240<r\201\354\274a:\033=A\031\\<c\237\263\270\25421=\032N\\<\265\242N<jvC;gL%=n\233\332<\016\206\242\274\276 \024\274\220\233@<\322r\246<Y\032\021\275\032\332(\275\"\317\030\274\320\n\004=:\277S\275A\371\276;\216\307>=\34678={\036\007=\371\347\350\274\362|\010<s\352m\274$+\234\274\240a\333\274\261\376+\275l^\014\274\005\265\367\273\271\030l;\023\331\305;}q\307:L\304f;x^\026=BZ5\275X\217t<\347d\n=@\023.\274TA\327;\233ci\274\277\013\276\274@t \274^\232;<u\206\210\274\363\262Z;+,B<H%\353\274\340S`<N\237\034=\227\351\370<\322\\3=C]\241;dq)\273OA\367\273\315\257\316<\323\325T\275e\013\376\273O\300\370\274\365.C\272\202\225\254\274\'\215\r\275A\205\t;\204V\277<\242\221\r\275\317\017A<\323\001G\275\002\300\005\275\235\013\352<v8=\275\250[,\274\335\243\303<F\353/=\274\256)\275\226\307\000<M\217\r;\250\377\030\275\036u!=\006\360\034\273\362v\237<;m\005\275\237\336?\275\342r\026=\244\010\310\274\255\004\017;\006\252\247\274\254\232\r=4^M\275\217\nF\275t\304\271<\316\234\r=\310zr<\026,L=\364S\232\274\322\023L\275\251\035O=x\371\302;\003\034\257;\330\231R\272\273\227\300;\217\267\034\275\227\331\274\274<\275\314<\242\204q\273\300\335:=Lw\345<T\270\345<\216\220)\275\026i\333<\233\245u<>\252 \273\177^C=tT|\274\327%P\274\324\351V\275\036\256\031\275\251J\234;\225\250R=\261\016*=\254F\304\274;\331Q=\304g\304\274 ER\275850=\326\211\235<\237B\t\275\341\310\t\275p\372\212:$4\026=\373\253 =n\361\350;.\200\031\275\264\300\274\274\2725\200<\rY\036=\014\262\310\274\370\216F=Lf\254\273(\275:\275\026BB=\t\0310=\324\336\210\274\335\337\032;b\363g<\212U\204\274\310\3725\275\026\014 =\375\252\317\274\017\2128<\001\215(<\220R-=\2712\361<7\177E=\205\313\274\274}\243\352\274\352$\200<\226\373\025\274\264\277]<x\274\321;E\356*=3wd;\207\n\244;\021\247P= 8\221\272ZI\231<\313\201\344:\244f\251:\006\372\t\275\232,\341;\025\267\202<b8\006=\200\276\262<l\341G=\311\252\244<\'\307@=\366s\035\275-\025#=\031+\240<\237\244\032\274\370\035\n<R\177\003=c\"%=\354\035\275\274]\332D\275\3151\367\274a\210(\274\024\001\205\271@\375S\275\030\031T;\341@0\275\347\033\351\274}\006~<\360\021\025\2757Q;\275N\014\205<\231\235\001\273\327.\326;\030\312\342\273\276\203\013\274\362x\025\275\224\\\255\274\231\027\010\2735\025n\274s\311\033\275XH\031\273e\020b\274\026\331\332<\24611<7\002T\275\037\247\324\274\242\370a:\334\266\275\274j&\032=\370\217D\275\350\346\251\274\036O\t\275\315l\013\275\\=\240<SC.=x\372\317<\3173\013< \342\246<\352\203\231\274\347\341R\275V\235\245;T\240\253;>O^;\331\2600=t\266\203\273\211\335\312\274N\371\030\273\275\026\025=\204\006H\275\204\340\013=N\301\365<\014x\220:\336\0002=\016\242\266<\232\344\317\272\254\330\010=b\273\311:\213\333\354;\277\345\032=\230EI\275\377\300>\275\273\320\324\274\202>#\272\264\023\020\275\366\243\n<v\203O\274\001I\020\275\277\316\255<\034x\374\273\241\027\032\275*\227\"\275\035k\325<=\312\032=\323\020\323\271O\333b\274\266J\005\274\357b2=k\257)9\232\255\2139\312\260\354<E\376u\274\204\233d\273\255\304\315<\3726\037;\330\3759=j\253\201<\214\277\023=`\365\212<=:n;`\017\025=B\254H=\020k\321\274q@\276<,\302M\275\177z:=\233\003!\275w\240\311;\003\017!\274\306\253&=\317k|<L\'\253<B\365\266\274\007\2453=\002Q#=\326\306\n=\334(1\275\343\233\202\274\252\243\031=\245:4=&\253\271\274\373\354\322<\016\307F\273P:)\275\314\310==\320\260\272\273\302W\002=\331\224(\275\332WN=.\324\034\275\342G\221<\253DD\275\376p\027\275\200%\254\274\232\r\322<\263IC\275w\2766\275\001\017\263<\254\023\r\274\r,O\275\360\r\310<gC;=\314\336\331<Sc\n=a\002U\273{b\373\274\017H\224\273\"\3317\275\233\215:\274\323\213\322\274\244Y\301<\363\0313\275\264\255\023\275\025\330\201;)\327\242<\207\275\021=\241\312\022=\375\025\313\273\340\214C=\221K@<\202mZ<T\274*<\342G\032\274\203g\030\275\221\207\035\272Z\230\023<&\315\001=y2\007\275,3\010\275\364lo\274\004\220\030\275g!\n;\306\262\343\272\272\275\014\273\204\353\344\274\317\355#\275\231\365I=\023\302\033=\255\232\202;\364X\313\274\231x<=\227\305\021\275B[\227\274\276\224\'=\204\267\325<9;\324\274\032\310\356<\225\031\335;\220LH\275\220ZI=\343\216\027=\375\253\006=\346@==x\210\230\274$\241/\275\020\204\201\274%#\304<:\310;\275\324\211U=\020\223E=S\366\344\273u\0242=\3321>=\003\334\033=\272\"\004\275\017\217\030=\245\225\331\274\351\344\226<\247\363,<\017e\252\274\355\343\351;\004\244\204\272\203\375\213<\213\262\206\273\020\225\271<\266\260\374\274\370\014X=\375\200\006<\347\250+= \020*\274\3271\314<\230C\275<\252\340\365<{0.\275\0105\355\273F@,\275\035\3466=\210\321\353\274\007\213\217;b-\r=\334\311\223<\340\032L\275\376\330?\2756\351\262;\327\327\352\273\363Q\023\275\361\340\353\273Fp\237;d\021\322<\360\000\004\275F\315T=\354\241\216;\t\353\353\273q\363\221\274\367\001h\274Z*\327\2749@\231;\357W#=\326\335\21274\270\351\2740$\235\274\n\236\275<7\344J=\330\207\n\275\023\266I<\241\330H\274\352Ew<\256\371\030\274\3728\r<3\205H=g\230\027=\200\0207\275\325\372D=)\372\250\273\214J\024=\n\353\021\2755\357\003\275\252\310\023\275\036\357\353:\234\204\336<\217\t\204;+\243\300<8\006<=N\3114<h\350\300\274S|\017\275\305\006\031;G\267\020\274\256\206E<\025\374\352\274\231\311\272\2748\321\276<\357\033\326<b\226\004\275/(\021\275\326\275\263\274\211`8<\306\304\034<\025\200\374\273\026\310\r\275\226\325U\274J\004~\274O\353\200<j8\322<\340\034\267\274\305>H\275\332[\227<\215\227\267\274\310\370\014=\215\302$\275YX(<\035K\334\273?F\335\274\363\001\007\275GO\313\274\250f\364\274\330\251\022=\3716\014=\252\3556\275\373\322+<\270`\025<\216\177\003\275\0031\024\275:\001W=X\205\371<\276#H=El\364\274\240\343\241\274\\\372\301<\244\233\007\274\000\345\030=\374XL<\374\252R=\264x\211\274\326z\"\275\357X\033\274\263]\037\275|\351\321\274O\007\215\271\277 L\274:\327\002=g\000\026=)\276\216\274\342\304#=B.\213\273\204\016S\275\214\355U\275\240\273%=V>G\275\265\206\031<<\177n\2738\307\361\274\3616c<\213\251\244\274\327L\343<\252\022\264<\370l\371\274hz\027<\345\336\022\274\207\315\r\274\224IE<\021R3\274\016\251\262<\255\335\236<\216\001b<\247\325\315<\001\2651=\351\353#<\326\355\247<\260\377\241\274\215\324I=\265Q\007\273\030(+<\014\340\024\275\240\370\313\274\0164\303<L.\020=\364f\331\274\306\\\204\274\r\347\315\274\202\0163\275\311\037s\274\177\253A\275\016}4=@\2330\275D\3401\274\002\220\007<\'\200E=\242lR=\324\215\263<\245%<=\317\022\336;\227\000R=\035G,=\t\3037=.c\037<\355t&\275R9\033\275\037}\352;\311\000J\275\340\317\021=\305V\177\274\224\024\026=\'S\037\275\004\2102=F\302\206<j\tR=\007\177&=Fr9;\301\330\332<\260V\240\274\036\331*=\321Y0\275\374g2=\344\tE\275\027\376+<\337KP\275.\374N\275l\017H\275\207\213\334\272\034\350\032=\200.\247\274\334\364Q<\007\017\3239[\253\234<\003V\213\273\316\3477\275\267v\226<eX\372\274I\236?\275j\224\r;\036\201K\275\020\001W\275\301[\345;\252\016\317<\254\251\030\275\262Q9=\357\303\251<\240\327\313\272\323\363\232\273>$7<\355_\032=7\312O\274\016\261:\275c\351\252\274}\264\024:\212#\261<s\321\205;\0010/\275S\024\373<zP\220:\325>N\274Q#\236\2744\213)=\362B\375<\243R\305;\246\022\303\272PKO=\360X\244\274\355XA<&y\032\2758\221\032\275\033w\203<\214\355\370\274\207\020\344;\376\274\320;D\266\025\275$\225\001<D\326!\275r\014C=\\bw<\234\316X68\2742\275\320\242&\275\2503\214\274\026\374\036=3{-\275\3171J\275z\230P\275\263\017\234\274\025\023\005=\005\"\306\274#63\274\217\334\373\274E=@=e\205\234<\315T\215<\253\016M\275\360Ac\274z\026,\275\305vy;\267$\234\274\247|I=\211\216s\273X\311-\275\014\254\353<\201!\250\274_\206H\275\373\371\002<\346\023\221\274N\337\277\274\315\234\031\273\000\2235<\n\004\031=\366\0160=-\025@<\354\036J=6\006+\274d8V\275e\335\017\275>F\303<\3125\267<g\253C\275!\231W\275`~\272:\266*\261<;S\013=\304\317$\275\232o\226\274\253\0229=,\371\026=\030@\301<&\264\002\275$\345B\275\"\240N= K@=\224\217\206:\013N\255\274\253O\315<E\315\275<\331\000$=\273\324I=\\UG=o}\037\275i\226\r=\307\3743<\216)\r\275\211\236W\274\r\220A\275\226\245-=\233N\245\274\317\264\206\274F8\361\274S\370\353;O\261%\273_\212\233;\310W\311\272\307x\353<Zm7\275^\301\216;\004\035;=z\344\336\274[fM<Y\232\031=\321zR=KBO=W\"\002=\321;N\274\303e+=\361D\004=i\265=8\233)W=\231\216$\275K5P\275\032\301\324\274\31340\2754\027\000\275Ju\212\274\201cA\275\206\2307=\r\276\013\274\236{\022\274\274t\234\274\334t\254<\207\372M\275\266\316\274<\"\216\232\274\333\260\341;0\367\001\275\220\201\300\274\201\355\357\274W\241\250<R\304/=7W+\275\352\0015\275\222n\310\274+\216\256\274w\241\020=$\306\363\274\333\323M\274\300\367R=\217\241|<b\234\262\273\030\254,=\375\014,\275G\010\361\272\004Y+=\225\343\035\273Ii\305<7P.=B\276M\275\312\017\364<\213\264\203<\1770*=\344A7=U\001O=~\200/\274k\225\010\274X\305\303\272\001o\002\275\370\220\360<\037\233\233<\2613J<\2569\205<s\2420=F\247\203\274\210PN=\306\367\315\273\005\313a\274\242(N\274\301B\031\275\347\211\002=4\'\240;\245w\370\274ST\346;|\334^<j\326c<\257\320\310\274&9\032=\2177\256\274d@R=6T\227\2740l\001=so\354\274\315\227\216<\323M+\275\212Q\260;;\3563\274$\207=<e\242\030=9\314\341<\t\222};l\205\253\274\225w\232\274\2266\t\274~\3666=/\357\344\274\205\3117\274\273\207>=\276\371/=w\036\245\273aGS\275\\s6=\261/(\275\355\0017=\345\005\221\274\3227\376<\363\251=\275w\201\373\273\200\230\016;\254\276\200<\313@\343<\214\005\317\274\222\372\026\274\240Mq\273m\323\271\274\250\340\254\274\0327\261;\356`u<\367\014H=(\200\223\274?AP\275\273\350S\275\017\203;;\020)\240<\002\350\312\274,\001\004=\373\037\374<}m.<\361`\344\2728v\025\275\230,B=\374\016#=<(\035=\210\036-\275\252HB\275Wa\371<\256\223\016\274\320R9=\334\311@\275O\305\354\274\202\270k\274g\271\345<%_\334\274c\023\020=\324x\344;@\300\201\274\nk3\267,\2535\274<>\336\274\032\347<\275Ws\223<\034z\372<\n\004\321\274WE\222\274a\004\361<kd\372<\010\025\372\273?\246\335\274\261\214\241<\231\002(\275\310X\317;\350\352\224;\0039:\275vF\340\273*r\375\274\235\021\333:\216)\n<\350\232\242\274x\306R\275\244d\373\271v\300\322\272\311\305\374\274\214_o;\356\326%\275\216\217\006\275UJ\224\274\264\270\243\274\264\215\303<4\033\362<\013\372\366<J\272 \275\235\361\231\273\202w\234<f\001\367:]\367\214<\207$\272<\334\243\320<\332\270o\273\035\255=\273\311\370\276<|O\240<\202`\007\275\316\230\006\275\321\334\017=\222\020@;\251\300B=\324C(\2752H\255\274\017\225\004\275-MC=\004)\016\2759\321\321<z\314\032\275\003\223\003=\231e\352<\356\0369\275\267\303\374<\230\213,<\357\2735=I\322\r=\270\311k\273\033\364\000\2753\2254\2745\223#\275L\337N=\202;J\275v\240\301\274\017;\327<XE\276<:\317D\275;8\206\273\227\365>\2750\315z<\264-\361<}\205\n=\364\2560=\357;\r\275f\320\272\274\314F5\275\345\372\242\274K\010/\275\354@\360\274\304\3378=\365\364 <:o>= \270T\275\216;\036= \261\271\274W\241\341<\307\272,\275\260\340\220<\036\030\347\274\372\213R\275\273\201S=\317\3455<<^F=Y\266\373\274\023+2\275\373\002\013=o\245\251\274_\326\003=\337A\255<p\225)\275m\234\337\274\341\351\235\274\335\250\274<\307F\313\274tJ\326\274\267\2251=!\226\035\275iP\334\274\247\016+\275\3712\201;\250)O\275@H\253<\222-\262\274\004i\225<\222,U=\247\220a<\036_$\275C\252\031\274\307\001\334\273~\"\232<6N\360\272\316.7:\334 \345\273\352\264\326<\222{u<\235\242\031=jB\336<m\250N\274\224\037\360\274(\007!:\261e\313\274\364\3367\275p\271\003\275x&\356;\305h\246<Xd.=L]+\274#\330\227\273<1/\275\273!\340;\026\027\232\271\221\261\256\273\365\215\030\275`\323#<M\025S<\246\251\001\275\215\2270\275!\366R=O+\221<\r\210\302\2748M-\275\330\331\225\274o\371^;\367\303\227\274q)I\275G\026\221<eb =\315\303\304;\202v\035<kg\002\275Y\244\347<\244\352%\274\237u\325\273}\276F=\316\035\243\274\376\326\343\274Y\261F\275\370\332\331;\221\321\204\274\201\302i<\013\253E=\306|\313<\274\\Q\275\027pi\274B<\257<\270\234\240<Z2Q\274jy\'\275v\362\2549\0379\036\275x\3329<,D\314<\240\277\'\275X\250\300<\203\376\337<H9\273<\203\316\360\274\247\014\260\274\370\264\034\275N\013J=\016\0376=\243\3043\274\266\372$=\321\312\354\274\250\205\022=\"\025\014=\234v\020\274\206;\362\274&\336\026\275_ZN\275\020D>\275\316G:\275(\366H\275G]M\275\300B\351<\017O\230\274&T\016\275+\352\234\274\310A\007\275\016\nI=;\200+\275\005\300\261\274;v?=q\274\304\274s\221)< \266\032\275\'\331\'\273t;\207<\317\271\273\274\255=g\274\337Y\000\275\273\342R\275W\006G\275\013\351#=\264\360D=\314\241\017<\223 -\274\001\237L=\221\314m\274\324\256\263<\363\241C=nLJ\274\211WB=\376w\031\274\205\036>\275\330\370V\275\243\2157\275\221\312\245\274P\0009=\231S\021<\277f\007\275\273\3563\275\272\252\361\274\030\356W\275\276\\\314\274\246\314,\275B_\227<\224?\032=\211\245\264\273\205\370\240\272;\212\232\274\010\222&\275n\200\331\274?\247\023=\225\206\006<\327\034\312<\240\010\264<7ST=\233Kg<A\t\000<\"sU=@n8\275\032\005t<\350\260\201\274\2577A\275\337\251*=\301\250\366\274#P\033\275\261\030/<\033\037;;\023\246@=ls\240<\375\303\226\273\300\260!=?\335\271;8\2416\275\320k\242;\226<V;\275\202*=\034\310\024=f\314\204<@\251\017=\017\3211\275\226-==K\013\030=\220n9\2752\361\023<\211(\033\275\314 :;p\354\r=g\210\'=n\257\306;\373\203j\274\253\253\033<\274\2363\275\001\204=\275J9\374<\310\315\337<\257\356\363\274\317\200\004\275\251\303\272<\'x\005\274O\327\016\2750\"\227\274$\334,=u~E=\222\322\033=V\002\267\2745\305!=\275\257Q=s1\330\273\232=\235:\252i\n\275\246]\373\274\354?\366\274;\202\231<*\000X<>\004\267\274\203\"\212\274\272[K=\376\275\300\274\372\300\220\274\210\324\037\275\007\376T;1\235\276\271\037\322\372\274\374\326%\275\275\372\204\274\033\340\201\274\364j\302\274\347>0\275Z\206\373:\036\270+\275\023\032\306\273\215cq\274v\224\336<\3219\303<\003A\004<\305\3632=\371\360\261;kU\030\275\333\227\266\274Jf\246\273\237\0140\275I\213\205<Q\263\020\275\365\023\217\274\031\373)\275Dy\356<\344\353\300;\241\0028=mA\373<\177\030L\275\225K\031=\025L\035\275K\227\255<\204W\306<(\302W\275h\266\211<Xb\007=zX6\275\307\315\020\275\231\373\231<1\362\216;\347Ry<_?\340<\371\034<=\005L\337\274(\340\202\274\204\t/=\367\276@=$0\023\275\t\227G=h\006\321<\026\030\035\275\201\255l;Kc\036=%V,\274\'F$\275`\242\226\274\377\nS\27590\302<X\010\230<\370\2544=g\324N\275\372\377\232<\006u8\275\203V\364< k\'==\232\236<\353Ns<\224\017\271\274\303A-\275x\314{\274\322\277D=V\300\226\274\246`P\275\315\353!=G?V\2759DA\275\307}\331\274v\360\210<\201\207\016=\364V\010\275~\263\034=6*x\274\344\211O=w\330\231\274P\367\r=\007\276\207\274\300\013T=\253UT\275L#0=\002p4\275\024k\307\274\37459\275\334\253\375;I\332N;\217\2109\275\265tF\275\324U*\273\324?\223<\010\353\001=\"\235/=\231\275\357\274\201\227T=\301\306\024\273|\302\262\274\207\252N\275{\340W<\022\301\003=\014\352\000=\177\005;\275\357\246\'\275\233\257\313\274\317\304\253<\344\002\203<\'\3079=\316\252\347:\370\233\240<m\352\016=\375F\274\274}\377j\274!\214-=\026\020\271\274Ky\232\273U \277;\312I\002\275\254\020\005=\307y\355\274\372\200\022\275\311\315\002=T\211\020\275\005\214\306\274\002w\350<<\371\265\273\317\260\010=M3l<\266\307*=\322\223.\275#I\3609\243\031?\275\"\206{\274\270\035B<\227>\350\273u\243\021<\2675@=\323n!\274\377\331P\274.\230\024\275\371\210K\275\366\216\367\273\013{&=\367\260)=\r\317L\275\245\300\005\275\365M%\275\270\010\227\274\354\302M=\227h\346;\223\237\206\274\333\237\031\275\341)\256<\2706\035\275Dq3=\202\036\241\2742\362\023\275\204\304\325\274\271B\016\275\313cQ=5\030\240\274T\376/=\232\204N\275\314b\371\272\317\235\362\274\005\266\256\274\020_\332<\300c\234\273\266n\004\275\021x\363;E\032\324\274\247-%\274\213\026\223\274\371\265\363<#`\013=\r<\331\274CV~<\251\332\3679\"w%=\031\306\254<\365/O=/\320\264\274\327\330\222\274\223\006K=\237hz<\r[\270\274k\254\252\273fD\036=C\364\013\274\207\034\026\275\004\335\t=k\341\"=\260;\223\2749:\"\275\241\036\230\274\234\270\277<\014\373\340\274!\314\205\273\365\322\220<\367\016U\275\266\2446=\217\353\341;\205i\265\273\204$7=\267\346j;F@O=\355\004\215<\316An<\302V\350\273\217\025v\2738dT=\244\353&=\001\023;=\311Pu\273\312\345\267<RD#\275\373\356\245\274sZ2<\233$i\274}\006N\275\033\257L=\001\004\374\2749\211\357\274M J\275\264\362\303\273X\360)\275\304fJ<<\'\037<\354Sd<\205\023\266<$?\371\274D\\$=\230\034\263<I\025p<,*\263\274\'\200N\275 \361\032\275\364\2231\274\344\r\373\273\352\347\213\274\232`\210\273\312q9\275NYH=\3276?\275\263- =\265\003\020\273\252\030\201<\016kL;\21115\275\030\260Q\275\025\355\023=\213\245j;W\201\032\274\252\205\014=cmP\275\352\346\037\275M\347I=\274\241\235\274\325.E=\365\203\220;\322@\000=\250\005\006=\256b\350\274\3000^:\253\243\274<\265F:=fYh<\300\022S\275C*,\275\244\307s<\322v\256<\207zs<H\233\032= \224\035=\375\206\345\274\334[ =\233\205u<\3701l\2749\031O=\025,A\275\003_\252;\204\347\020\275\347\031\000=\323\253W=w\355\333;\n\333\'\272sz\257\274f\273i\274n7\000\275\222s\226\273H\323\212\273}\220;\275#\274\2009b\020\213<\327\336I=\306\021\213\271\221)\021\275\033\234\340<\271\331\215<?=\326;\260\002%=\337\252\037\275#\220== 94=\325\357(\275\362>\026=<{\005\275\246\327\032=\333\244\263\274\003\353C\275\002:\325<\310\037\253\274\325a\252</L\267\274L\310D<\232\006\224\274\210\343\366<S\004\317\272\266\006\335<HK\341\274\365\362\251:\246vL\275\245\342\032=x\0037=\310\025T<wa,=?\257\215:\365\n\221\273\362)\360<\242\204\007=V\357\313\274\272\315\257\274\264u5=\343\033=\274\312I:\274.Q<\275\340qA<\314\315\355; \244\332\273\333\027\343\274\274\343\016=I5(\274\000\r\211<\212\277z:\010\215Q\274z\234W\274P\374\346<\325\025\006\275\267,!;LrA\274N\3458=\3154p<|\346\252;/\311\023=D%\245<\236\223L=\346T\033\274\222\371P\275\311\205\031\275)AT<-\025\355\274\273\033K=\340\007\202\274C\307\377<Q\356\356\272\304\230\007\275\023\025<<\362\242\371<\264<\266<\023\310E\275Th\302\274\353#b;\324\001\000=\027\347\366<K\267\224<\265%\370<\022\334.=\367\305\377\272\177\311\001\275\313\0252\275\016\2552\275\323\2177\274\267R\037\275\200\355\036=\201\362I<\364\312\370\273\0022P;2s\373;I\324K\275\n\031\025\275U\353\206<b\177\253<&\200{<\004\300D\275\214\223\373\274\357*R=\274\305\"\274\216\214\230<\232\331(=\222\361\203<\335M\007\273I\351\275\272\311l\000=R\026$\275\006PQ=~-\323<\253\353E<#p\344<H\020K<}\037\236\273/\301Y\273\327\347\202\274f^\030=J\377\342;F\033\037=m0\023=\371\355\021\273\035\352/=\206$ \274E]\013=\267%O<uY\016\275\375\334Q\275\036\224G\272\026\244W\275\343\032\207;\214OI=\205p\356\273n\213L\275\'\375\005\275Ww\013=\311@*\275\353\251\375\274V\020\306<\007uz<\303S@=4%7=\350:M\274M]\340\274w\036\013=6\216\212<<6\035\275\316\234g\274\025\302\240\273C1\207<\266\205%=\227\021T\275\334~\320\274W\007\336<\2659@<\222\004\234<\003\001\322\273\357\373\n=Z\nA=\250\366\311<\257\226\353<d\256\245\273XK\030\2759\307\204<\251\3431=\316\240\031=\355\025\250<<\007\026\275\242\273\030=\017=\006=\370{R=j \207\274\216D\'<\225C\014=\350\014-=\0071\260;c\234\213\274[\210%=\325@`<\252\235\030==\354\213<&\2672=\024zU=R\177<\275\r?\177\274\251c\003\275\220k\374\274\374\340.=O\367D\275\035\013J\275\314\371\026\275\261\227\302\273\313-\010\275\205\310\262<\273\203N=\214\246\027=\242~w<\014\345\007=^\246+=\221\302\212\274\020\016\255\274\312\037\300\274\263\301(\275\311\265\367\274\247>E\275s\251:\275W3\222;\323Y\003<\302\216W=5\345\013=c\005,=\372\342|<\235U\233\274\037Z<\274\233t`\273\216\3369=\002\250\026<\205\276\340\272\252\305\253\2727}\001=\372\217\346;\245\307C\275\3668\224;c\010\263:s\236A=>n\261\274T\305d\273%\372\204<\256\214@\275\374O\244\274\363~*\275P\311\017:\372\265\364;\031Z7<H\225\214;\017\304W\274s\274\013\275\243\340I\275\2157d\274\326\267#\275j\227O\275\346\r\021\275W\230I\275\3272;=\272\253\250;R\310\013\275\326\206\210\272\241\247\355\274S\022\373<\243\005}<H\377A\275\312\n\024:j\215\030\275z\247\214<]5\021\2753{N\275\311R\004=z\2230=i<O\275\212l\236;\327\025\031<r\'\2629\273\204U=$>\027=H2\027\275.\006\005=\231\242\351;\361\255\222<?\233\301\274I\232N\275M\237\325:|\354V=\332\257\013\275v\256\036<\271\000\014=H\207\002<\306\315\347<\254c\020\273V\033\327\274\355\006\034\275\324*\257<\342D<\275\310`\356\273\302\267\350<\266\315\245\274\365\351\312\273\024\2652=\313\346\223<F\262K=\217\300\276<\3466\335<^NE=\366\245\313<\315\021\257<M\363U=\325\251\035=\366\'!\274\027\344\201<\016\303\213<\276\315\201\274\324\023J=\224\335\016=\300\336E=7\263\374\273\374\n&=\363HO=\374\266\263<\346z[<\303\212\323\274\004\231$\275\364\277^\274\002\000\263<\227\253\t\275\330+\025\275\276eY\272\034\350\302\274\315\367.\275o\261\242;md\'\275\004\246\r\275\255\267\006\275G\027_;\352;\204\274=a\254;\000\023\035\275\220L\250<<\267\367\274z\2662\274\303\244\210\2745\337\016\275\241\335\r\2758C\235<f\316\272<\370\001\244<\277\270(<\375\207\266\274\"%=\275+\350y\2746\034S=Mi!\275\225\353\'=\035C+\275\202\260\367<\360\355\013\275\337\252\304<U;\014=\213\014[;\037$C=\362g\221;5\376\323\274\233\3211\275\311Q2\275\352\332.=#\225#\2755x3\274l\2706\274\236\260[<\222,2\275\362\036 =N\256\036\274/}N\275\235G<\274\004\342\266\274\026\312t:\320-\340\274Qp\327;jc\221;\350\271#=\005\3629\274/50=\260\310?\274\016\305Q\275\203\010Q\274\207\256\307\274\025.&=P\016\006=i<\373\274\314\002\274<l\313\016\275m/\n<\006v\234<l\277\010\275\036\350j;\337\341R\274b\272\377<i\355<\275\265@\272<\255u\227\274\203\024\334\274\356x_\273Z\202\026\275|\2179\275\375G\010=#\2045\274\321\316\023<u\231\032\275wO\314<\334\323\272\272\377zE=\211\024\273<C\316z<%\037\016=l\3604=\033\264\036=a\374\262\274\207\003\r<\314\301\366;A\230,=\204\n\335\274\350\302A\275\24332<J#H\275\370\231y<g\2373\275\251l\031\275\332\366I=\345\363\237\274*U\023=C\245x\274o+\032\274\306e\010\275S\313C=w\272N\273v\262:=a\'\304\274X\363\031\272\326u8\275\343\357\265<\031\020\204<\302\333*=#H\373\271\341e*=\'\247\200\274\232o\037\275\367\322\261<D\243!\275\312\3037=w1\002=j\301\203<\252B.\275\013\235/\275\\\336&\275o\264\261\274L\033\247\274\241\243w:E\027A=\034=\036:@\323\"\272\274\023 = \3709\275\337y>\274\037\014\003={\024\376<\323\200\236\274Cr\027\275\373HU\275\342\265\021<\353\356\231;\037\311\r\275\025\0032=\010\356\267\274\242\304\250\274C\374\r\275\342\271\257\273\312D4<\362g<\274\345\026^\273\237\310\267\274.\006`<^kD\275\350[\237\274\034\230\353\274\361Y7=\320\3164\273\210\342:=\206\276\252<\327\366\342\273\312\227G\2746\312\004=~=\274\274\262\331\362\274.\032\300\274Z\221g\274\034\337A\275@A==\275\025>=]p\371;\233\314\027\275\007\276v;c\237D\275\354\323E\271\215\272\t=`\331\227<\247G\255<\300\3025<\234\2008\272.\266\2619\257\264\275;\303U\263<\321!\330<nT8\275u~K=N\177\002=\312\230\021\275\356\351\222\273ko\314\274R\344I\275\341\"Q\275\321\031\225;C\230\253<\205\017-;\313\321N\275\010)G=q\013V\275\263\377G\274\322\021B\275\373E6\275\3017!=H\355\247;\313.\330;\026\237\316\274\345\307U\274\263\242;\275\010_\300\273\025\205\214\274\237\2641=]L\217\274\245\3313=\25437=i\276\316\2740\233\226<H\323G\274Hn\323\274^\021\020=}\235\216<\300\373\n\275Ho\244\274\320Y\355\274\220\2407=:\345\257<Es,\275l\237O\275oS\013=\202T\255<\364\337\242;\351\004\347\273\351n\327<\037^\213\274\033-\367;\250#>=L!-=\322\371\303\274\310*,<\313)\264;k\306\001\275\235\370_\274)\177\203<?\351L\274\202\260v\274\010\347h<\243\240T\275\303z\345\274\2034\211<\367\3263\273\031\327\310\274\2203\t\275RPH\275t\362\024\275\376-=\274\250\345{<\341U&\274\032\337\"=\001\255\335<\334\027\336\272I\216\372\274l\177\367;\342\'#=\t\334\035<\270]\316\274\366\033\317<+\243x<B>\240<\010\330\000<\005{\006\275>F\264\274\370\201o\274\2017\3409\337\032H=\022\310\220<`\276\311<z<\224\274\n\035+=O\031\247<\335\200\214\274\353\323\227\274N\226I\275\246\360\334<X\034B\275\025p\030\275H\324\004=%%n\274\264\021\026\275\324\315F=\347\255@\275\366rC=o\235\336<#\312q<f^\234\273\031W\355;\250!\327:\311&-=OL\034=\231\241\205\274\351\331\370<\326\na\274\230\237N\272\375\362\227<aK\266\274\253+<=\356:Q=j\333V=C\226I\275vg\324\273D\320\234<w\215N\273\'\025?=V\236\027\275\257\253\332\273\367V\020\275d\372\036;}=:\275\322tm\274\316\232K\275ng\350<\255\030\004\275\220-I=\373\032\025\275&\353^\274\205\236\022\275\301\334,\275\372\006\317:P\3772\274\3532\323\274\016\224\325<\227@\332<$WI\275\331\362U\2746\001\\<\322e\214<\266bE\274\254\344s<M=U=Ir\373<//I\2754\351\017=\022bU<\366R\030\275\217\254\310\273i\363\246\273\336\346a\274\325{m\274$\267\024=\344\303\337\274|\372\271\273\020\207\306\273\236HT\275@:\036=._\034\275\t\357\032\275\006\263N;\347\206\322<\n\373\336\273\355\263\267;\316Q\240\2748\016\237<z?\262<\245\3417<G\371\003=d\232\305\274U!;=b\232(=\220\330)=\007JP\275RAl\273l\205\237\274\351/C<Oi\217\273L\341 \275{=\224;\036VD=\262\376\335\2744\210\244\274h\234\025=C\304\346\273IH\230\274\307m\005<\223\313\272:\214\2072\273\326f\253\274\'<i\274\034\322\003=\022\232\202;\376 \006<\204\255\272\274v\245\341\274i\266\347\273\\O\000=\355\213:\275\366\265\257<\321\232\t=\331\230\036\2752\262\032\274I\014\367;\355\014\026=q\362\"\275\313\211\245;\212\377C=\210\2574=\370\221L\275\342\266\250<\257\342\016\275t\003#\274\033\275?\275\227q\344\274\351J\023<\247\211\224<i\026\022\275\004$U=5\303~\274\330\'\022\275\227\250\037\275xC0=\035a\031\275\273\330\327<\343\310H\275\322\317\342:~\370&\274\247Yk\274\005\002r<5tx\274wM\377<\275\337\002=\016\233 \275Y\030\316<\362UH=S\035u\273\374d\353\274{\t,\275\207@\376<,\002\267;\0160\221<\024&.=#\277\005\274\270\356U=\270;D\275\353\032E=\305\265^\273I\024\311\270\026P\315\273\n\013\010\275\222\337\220\274A\273\315<S^F\275\031\201\344:\032\010C\275*\027\222\274\265\311H=\236\232\007\274\' ?=\345\252!=f\262A\275:SJ\275\352\261\027=]\362\340\273\t\013\245<\260\212\214\274\010`\356\274\022P\301<K\t\310\274\220\255)=\\\254\243;)\231I\275\277\325\001=\321J#\275\033\2519=T\274R\275\023\324\253\273\370\nR=\216\330\242<\033\006\000\275\347\266\275<@\2550\275,g>=\306=0\274\227S\000=\007\0035\273w\0037\275\275\3271\275\345S\215\274\275\200\256<\344\235g\274P\022\376<\373\2157\275p\316\230\274\2643I\275\006,q\274\351\277\223<%%\005=r\210\336\273\316UE\274\'d\"=\235\344>\274\202Y;\275K\037\225\274\334\353\201\272R6\214\274^\253\027=\014\331\375;_\366\002\273\"^\355<\307wE\275\335\332\265<%B\325\274\262V!<\345\363\t<\343\031#=\034Y\031;\352\0075\275\314\205F\275\214\301l;\033\\\'\275\000\211F\275z\027\352\274\333\261\363\274\230\274E\275\010\177V\275\2549\013=\002\314W\275\227&\312<\273\021\310<\317\250\t\275(\314\241\274\236\276\251\273\225|\021\275\032\004\304\274|\356\327\274\231\033\313\271\344\321\216<\355\351\201<\373O><\376)\375\274\334\242\203;)\002\020=\276\255@=\001\370\272\273\373\333\261\273\343\261I=;K\310\274a\202\264<5\021(=\227\3401\274O}\376<\336\224+<sc\\\274\325\361\336<\356\254\357;\242\211-\274\311GP8\332\330S\275\352\037\010\273\360X\307\274\260\315^\274\300;\031\275\327\300\"=8bT\275\243\301\021<\004T\033<\214Xd<C\001\343<\005\356F=\331P];\335Y\266\274|\366\r;\362\272\036\275\210\325\274\274\230\344\016\275\334\177\025\275\024b\027\275\203\027\213<$\223\240<\256a\340<\237Z+<\020\347\303\271\314\010\2609\223L\207< o\213\274\327\202\253;\320\246\331\274\014\033\037\274\343\223\033\275\266\241\355\274Q\252\032<\266\017\350<)\025Q\275\0247?\275\027\311e<R\345\017\275\355\350\327\274\320y\322;3\020\336\274\272\265G\275\336\264V\275\350Y\362;\367\225\215\273\204\267\333\274l\314\204\274\020\215\240<Ef\257;H\276\241\272\211\377r<\330AL=p,~<:(\314\274\022a\254\271\027\215V=\262\2105=3>\326<\265\370\002<\304\023L\275\\\274\004\275\301]+\275\256\206\n=/\000\244<\024\340&\275\304\202\236<\305\220\014\275\362\024\241<R\026(\275<W\326<)\241\211\274t\000\352<\236\365\025\275\003\n\177\274\2254g<\\\247\330\274F\214*=R\273J=\351\245[<c\013\212<\354\313\013<M/5\275\001\257\231;\242\314\365\274\341\006\203\274\016\003i<hq0=z,\244\274 \306\025\275\204\345$=\265\235\013=\242\250\332<\303!\352<\374\0162<;?\016\275\350\211\003=\265\035\003==t\346\274\210}\r\274{\2202\275\223i\020\275|\317\017\275(!\223\274\347\373\024=\246\317\003=VkN\274\3715\372\274\356\3172=\2475\037\275B\274\272\274\352\216O\275\243\2141\275\265kJ=\317_3\275\004\t\312<\372aM\275V\021\007\275T$\334;N-\354<\026\317\314<\334\377I;\033\277\024\274(\304\212<\313\335G<\351\213D:w\276\034\275w\2476=\363]\353\273H1U\275\321.\002\275\364i\373<\000\311\014\275Eh\006\275\244\313>\274V\240\201<w\210\333\273U\246\222;\341J\364<\ro3\273\"\314\312\274\021\375C\275p\350\352\274\314b\267<\206*n;\250 N\275\334\317\3679\246\036\220<\365~\350:\212\306=\275\320UR=XUL\275\304\325%\275\361\222A\275\305^\244<\234L\231\274\002\3660\275\344\345\277<\363\321\013\275\036\241\361\274 \256\343<\205\233$=J\243C=}&\304;;\361\346<\320\034\031<\3130:\275w\252\273<T\2669\2756\307&\274\351\370/=W\323S=<\243\306\274BJ\365<;\244\"=\360o&=\203\342n<D\004\010\274\032\207\006\275j\220\022\275)\312\355\274\211\240\222\272\020|\003\272z1<=0%\347\274\205\356M\275]\351 \275\203G\356<m\370)\275\003\352<=\026\316P\273&^\010=F\037\311\273\317/\314\272Gh\231\274\3412\346\273\261\t]<\244\020\354<8\330R<VG\035\274\313\236r\274-\246B=\213\214\215\274v\317?\273P|H<H\tE=\025&*=\251q\013\275\342\3078\275\'\241\362\272\264\262\351\274K \367\271Qb\037<\224\275\376\274\312\341\237<\361{\235\274\272\337\265\274\210\317=\275\024\222S=&#\242\274\365Q\200\274\204NJ=\322`S\275M\326\365\2749\372<=>g4=\324\3542\275\202\312\306<\037\342L=\366\221\227\273\275\241o\273\262\207\372\274\222F\236<\263\345G=\311\321C=\265@J=C\222\277\272^*\001\274\370\345H\274\350M.\275liN=z;\014=\245\237\016\275~]\254\274v\2479\275\0071\341\274I\330\337;Bw8\275S\026\000\275-\\i\274c\"4\275\373\275\330\274M\324\235\273.\t\273;\362^f:\212\362)=\355\213\222<\310\014\003=D\305\361\274\005}8\275|S\236: a\024\275\217\263%\275\233\223\021=1\373\232<\344-8=\202\347\022=t\234\220<z\354\336<\376\362\241<\325]\331\274G[\022=\304n\360<\301\361\313:\243&\"\274\026< =\351\342\301\274\231\030$<\0240\373:\t\000\205;\211\345\273<\t\177W\275\017\305==\305\013\t<\250<K=\230\2046\275\205/)<P\003\032\275\330*\277<D\r\214\273\332HW;\032\203 <2H-\274\0051\020\275RQ\225:v\023,=\244\321W<\354\033\200\273\001\007\022\274X\261F=\255\001\266\274\312\220+=R\022-\275>\276w\274\377t>\2754EK7\"\210a\274\342\305\276<\254,\227\274,O+\275)!\245<\276\302\372\274M\\N=,\215\306<3(\267\273y5\036\275|\354q\274\310\252\207\2740I\272\273Q\227`\273g\230\263\274\323\344r\273\227`C\275F\366\256\274\362\225\250\274\327I\024\275J\013\032\275%\255\325\273\333\246\013\275\r\310F\275\232\036\342;{\017\254<f%W=(xT=\200\"\323\274\354\336\334\274N\375\357\274\2602-\275P\215\260;\222\310;\275\2370\377<`\374\370\274\274E\016\275\2777\022\275\000\251\277\273sr\r==+\360\274\213\371\007\275X8\214\274\204-\236<\326\366Q\275\374\332\356\272I\217\004<(yW=\300\251o<\310\302\024=\210\302\234<\364\354\206\274\314\375\374<\323n\362\274\266\213\r\275G\213%<\376&b:\236\001)\275\013EL\275\374\345\023\275\016\246>\275\200\233\215\274\351\315N=.E\355;\315X\370\274\257]\031\271\256\234\342\274\266\n\351\2745>\353\274\307\270\323\274\317m\033\275$\327-=\375\\\032=\266w<=4\302P\275\267n2=Bo\335\274\010\204\216<\345\312\337\273*\350(\275~D\340\274\306*\023=M\001F=\372W\033=\001\025\024\275\023\261\252:\243o\224<\207\244\303<\255I\004=\037\261\317\274\214\034\337\273.[\274\274{r\266<\250\312\361:\205\207\335\270V*\003=\262\247\302\274\265A\363\272\321\025\233\274\365w\222<~\317\020\275u-H=\361\3164=b\227+;\030\324?\275Xh\024\275\307HK\275\240\177\370<\304\026\'\275\242\222\030\275ij4\275\226\337I=@\306\300\274\006\354\036=Y\365\354\274\2067\315<\255Nt\273\205\361\030<\362m0=\275[\033<\345\263\023\275\3215\013\275\216\006\254<\277A1\275\300>&=\350$\235\274-\277\207\274\342~\205;\342\365[<\333<\276\274\303H\324;4C\277\274\033\023\014\275\3509:\275\253&J\275\346\261\332<]+>\275L\362\254\274\334\330\r\275\372-M\275w\323\013=FV\'=oK\020\274\\S\023\273\235\020\017\275\010r@\275\214\325T\275\330\023W<?\027\361\274\350V\266<\003\3736\273\232\305\007\275C\277\035\275o\000.\270?\036\253<\332\017c<\270I/=!m\n<\212\032A\275\312\205e\274\014\025O\275\264\n\021\275\355h\256<\261D\300\274j\026\221\274>^U\274\265\244v\273\310(\031\275\207\224\367\274\251T\"=\265c\n\274\335\336!<\343Q\020<\214\353:=\364O\024<\201\215\235<3\255\007=j\372\352\274\257^+\275\307\317&\275xn\004=K\221\262\271\365,a;9\221\343\272W\"\024\273\316\333{<\210\007\353<\020\351L\275\n\214\374<\247O\334<[\272r;\277F\377\274J\2522\275h\271F<{\301_<\205v1=\3261\\\274\210uF\272\314<\322;\202/\274<--\320;Wd\204\273\023]\352\272\343\260\300\274\304>\347<\221b\033=\031\035\213<\230\037`<\212\270\002=\005\343\206\274\014\0348\275\300\270\371\274\365\354#\275\001\374\201<h\2302\275\246\201b;\345\231\030\274@2\036\275\241\2632<Y\3724\275\352\230\351\274\3639\035\275b\t\345\274\306\016O=\314W\207<a\344:=\356\241\002<\326\226\333<5\3644\275\213\001/\275H03\275\203n\314:\'\036p\274{\374G\275\345|\343<}\2234<\'\233\241<&\372O\274\\\206C=J\340\032=\337\307\266<>m\247\273E)>\2740\034\205<i\357U\275\253\243\221<I\350\243<\251r\024\275&\211N\275\235\355\212\274\372\217\230<l[\224\274\331ga<\301\262\007=\304\242\256\273Z7\010\274\216dQ\275\321\202\344\272h\333\022<\021\201\252<\265k\224<\330#\235<\345b7\275\334\350O=\022c\357<~\t\241<\274qP\274\227c\025\275\340r\203<\032cP\275\252\227\341;\n\314/\275+F\206<\300\355;=O\332\302\274\223q\021\275\324\333E\275 v =9\033*\274\334\262M=\350\024\312\274\255\332\324<\245\306\372;\247_\322\274\032QR\275s\203\036=\352\252;<\250=D=\344\2624\275\243\374\230<\032\0232\275\263\226\365\274\227nN=5\255\001=\351Y<\275\231\227\220\274\247%2=\275\0266=\350\344(\2736\231\327\273\230`d<\231\201\200<q\367U=kp\034=\277\361M9\331\371\363\274p[\261\272\234\350\023\275\020\310\r=\330\351\230\273\371jI\275\016;\020\275P\210\030\275\332g\212\274,\030\"\274\342\247\3149\315\305\360\274\317@\020=\t\354\245\274\r-[\273\376O\322\274\321\177A\275\r\237\330;\322\335D\274Cw9\275~\023 =P\324\365\274`\226\032=*N3\275To\022\275\027\303E=\276$\306\274\250\013v\274cp\2229\323<5=\211,\274\272!8\027={\330\t\275=,\215\274\224W\350<\337z\t=\330\210;\275}\370&=\272\246w\270\013\236\265\2740\215\307<fE\304<-\272\335\273\311\326P\275\231\273N\275\230TM\275\006\225\361<\353\022\014=!\373%=\212=E=\212\265\200;hD\317;\223o$7\016\257@\275\374u\236<\355\357 =n\215\321<\"\t\344;\347tx\274\002\236(=\"\372\n\275\234\336\360\274\241\314\241<\255GB=?\376@=D\216Q\275>Z\256<\373\303[\2743VJ\275\023\025R\275A\021\016\275\223E<\273\206J\204\274e\006M=\306|\215<m\344\356\274\351\370J=M\252\014<\024\030J\274\306\362\354;\332\304\254\274/2T\274\3613 \274\311g\230<N\270B=\203\225\034=M\0365\275`\323\224\274v\275)=\323it\274\220\253k\274\305\267B\275\037\231\241<e\026\255<\242\203\034\275o\320D<iT%=^\'\302\272;\2574=\2518\002\275\263\346I;=\307\312\274}a\342\274$\370H\275\221\202\346\273\2072\303<\235?\001:\376\366\267</\3149\275=\343v<\265Y\"\275\344q\r<\251.6\2745]\327:\364\006\031\275v\331\311\274T\356\025\275\212\232\351\274dP\233<\373\314\230<F\263\311\274\234\030:=\212Z4\275i\362\334\273\244]\031=\t\207a\274HS\206\272}\223J\274Ys@\275\214g\341\274\370\020W\273\010\360%=\351\010\023\275\202\177A\275\001\317C;(\030\370\274:J\240;\006\t\361;\030\257\210\273[\021\200\274\021\203\201<\177\321\004=\275&9\274\021\205\n=\265\365A\275\314zM\275\026\255\334\273\274\307\244<\201v#;TV\034=\377\236T\275V\306?=\2407c<\277\310\354\272\212\263\370\274M\262D=\307D:=\366\314\372<\205$\256\274\374\004\225<\337\222Q\275,>\260<\013O\212<\273d\370<\213t|\271GA\002\275\307\302\371<\014\202P\275\224\226h\274\322\024y<c\013\331<\277G\010\274P3\377\274\337`\260::\323l\274E\370&\275\205\367\223<8\023\203\273{\212Q\275_\201\016=H\220!=`\246\'=-\237+\274\375\305\260:\307\210g<cl4=\252\004\366\274\335\254I\275)\020\353<q\270\352<\356\021\013\275O\241.\275\314%@<\321AD\275\305\244&\274\235\342\003\275\'\263\335\273\033\306\357\274\244;\334<%=\206\274\332\370\333\274\303\224\325\274CD\221\274H\020;\275\305\'/=\303\256\304< $\242;F\242:\275\351\364\267:\034<\232<\267d\303;\255\210N<\216\347\016;,r\270<\335\274\212<6\013;=sy?=\252_\353\274S\036\'\275\240!F=\224L2=?a\350;\252UA\275T\227$=\213!\024\274\305\177\253\274\317\377\201\273\273\013\r=\233\r\366\274\206\215Q\272B\245=\275\3036O\275\2238\245\274\033\336\265\274Z\2669\275\375\304\r\275+\331\275<\356\000\256\274y\327\"\275@\232\264<\3267\204\274\200J\310<\366\211\263<gy\332\274\211\221\313\274\375\325\025\275\375\327~\274\003oD=\330\036C\275\260\325\264<Z,\372;\252\242\002\273!\025\242<\341\305V\275v\033*=\025\326-\275P\005,=\370x\024=k\313$=\226\212\t<\023\206P\275\211\354\277\273b\307\210\274e$\243<\357C\372\273\206G\220\274p\231U\275\365!\306\274\314\364\010=\225\221\017=\306E$=0G\214<\034F\215\273dj?\275= \024=\251\326U=q(/=\351jh\274*\231\370\274\004\031\002=1\205\331\273\204\214=;F`;\275<\025\345<\374\226\261\272]T\244\274\364YH\275\036\017p\274\354\212\334<\303i\365\274w*\214\274\347\337N\275\021\250?=B1\016\275I41=\221\342+\275\'\237B\272\037.\003=\"Q!\273\037\300\032=\335o\212<.V\251<\374\023\022=\0025<:\377aM\275\363}\222\273\205p\206;M^\'<\\\256\20592\337\264\274{\3238=EbS\275n\356\n=\252mF=\027ZJ\2758\301\037\275b\0331\275\305\325D\275 G\226<\317l\234<\332\"\332\274\033\245\005\275\211 \372\273\013\266G=\255\334\211\273\316\335\327<\361\324\210\274o\231\370;h\332\177<Q\276\267\274\362\344\256\274\351\372\323\274Q\3130=\275\303-=\335u)\275\242\317?\274\224T$\275\344C\240:e\333\026\274\205\"\006\274\331l-=2!T=1\3748:!\032\004\275\004\302=\275\357\314\004\275\252\372\322<\2460\033\275|S\023=*\366\213\274wY\024=\252\274\334\274\376\206C\275\245k\323<%;\"<,w\002\274\256\251\'=\017C>\274y\254\205:_\252\016=r\220\222<E\027\261\274\212\'R<:\210f\274\310\311\253\274\220\373.=\226\202\236<e\332T\275`G\304<\353f\214;-\346L=\\\007\303\274\273\343\r\275\274\244\001=Fo5\274\222\260?=\213\370;\274\207\226\n\274\\\033\205<\3355\331<\267!\363<\305\223.\275\254\217P\275qo\363\274A\335l\273p\253\r<\232q\330<\203E\026=\360\r7\275w\330(\275\354\372|\274 \216\001\275\023\n\"\275\275\361U=.\366\342<=\025\017=g\"C\275C\303l<F\256\027\274\265\375l\274z\274o\274\374er<\332\322\300<8fB\274}\305\020\275a\225\t<\355\313>;q\375\t=g\267J\275/\027)\275\215t\232\271\251\235 <\254\014\n;\232V\333:\310\220Q=6A\252;\233\346\034=f\2706=a#\340<%\004*<\300\252`\274\307d\376\273\207\200\224\274\353I\025=\252d\351\2740\315\336;z6\005=\013SW=\262\344K=\006\032[<\356\203M\275m\270\261;\000\035\264<J\344\241\273\260f\366<o\253!<\2424\007=:\r\337\273#m\230\274\231M\337\274\325vc<\204\337=<\204\001(=\366V\350\273\354E9\275V|\020;/x=\275u\300\257\274\0312S\275\277\000W\275\335\321V=X\272\022\275\373\023S\275!\274\374\274\210\217\320<7`\201\273i\007\320\274-\300T\275KY\233<\310\277\362<K B<\2119\227\274\002>\023\275*Zt<\351\345\032=\246\362\322<\000\371\004=\235Eb<VY\315;\335\236F\274\263B\363<\3412.=\366\240P=\207o\244\274\037\312\006=\310\355\363\274Q\326I\275\206S\311\274\244 I<n\221\225<|\";\274\241\350\336\273J\356[\274\035\036\271;\276\343J=I\334\'=V5\241<\322h/\275il\353\274z\305\027\275uF\245<\032[>\275\305\037\312<\"\242,\275\214\311\224\274\362\321\"\275v\316\251<\314T\222<\244`8\275\t\023\207<\276\362\026\275C\322)=\264\365\206<\304\277\022\275\031\017L\275\236\357+\275b\007K<\266\247G=\277\006\342<\221f\302\273\0207\376<\021Q\013;\206m\032=\301$g\274\341u\227\273\\~\265\274\t\000T\2753\270\020=\002\035\240\273\212|!\275\251^\275\274+\222\200\274\231\255K\275\315]U\275\003\236\031=:\002\352<\232L\022=\340u\303\274\2167\367\273(/\006\275Yd\325\2743\231\024\275\000 R<j{\215\273;\3157=\023d\017\275\256<G<~0\n\275\323\247|\273\3376W=\341)\373\274\t\353\020=U\010@<\022&\303\274\357\315\023=N\227.=\"j\351\274\221\r\017\275n\360\212<Q/\253\274\013\363\212\274\231\'\025\275\342\273 =\360^H<\301\250/\275s\231R\275\205\236\033=\361\324-=\305\"\226\274B\0034\275\366\203H\275PZi<c\241S\275\332\346;;\235\272,<t\244O<\035n1\275\223*\017\2752\340/\275\034J\216<dP \275\026+H\274e\277\332\274R\2120\275\262\3144=\022<S=U\301&\274\241d\002\275t}\234;\264\3654\275b:\314\274\211\'\013\275a\302C=\217\303>=\273\341I\275\363\007\362<\256\366,=rW\263<1P\032\275\370u\003\275\301L\2779o\364\275\274(\203\213\274\023\033G\275\373\263\022\274`\246\n\273q\200L\275\214\251\034\275aX\353<\"\227^\274\211\263/=T\'\023=\347\377\"\273gf;\275nm =\337\260L<\030J?\275\245\275l<\213\201\346<L\355\033<K^\237\274~*V\275Iw\306<\365\264\362\274\362\302I=v\n\"=\36770=\330\006\276;\202\002W=\265\342H\275p\210T=\357\256\345\274l\026%\274\306\234\n\275\323@\006\274\016h\320<\\l\027\275\332\327\234;\343\210\310\274K9\347<\220\257\360<\251\021\022<\366f\000\274\032\340\237<k\220\360\273\372#\032=?\207\316\2742W\330:\204\327\006=\016xD=y\334>\275\342\350G\275\227\307\240<\240\302\221;A\236J\275\343\265Q\275\333;a<l\323b\273\357\010\212\274\376yO\275\257lM=\027b\364\273q\370a\273\003\2065\275\330t\035=\211\310\263\273l\2377\275\314\357/=\200\314\226<\244\350\005\273\021\363-\275m\223\326\274\330$\314\272\005\227\364<\034;\026\274\367<\261;)\177\353<=\360\016\275|\371\030=i\356><\311\"\220<\276^\031\274\346\263\272<\340f\"=\346N\016=+\3320<\010\233\212\274\234bw\273\265E\265<0\177\010=\222\021\t\275\331\'\263<\232(!\275\356W=<!\221\310\274\250\014\276<\226\223T=\257\271j\2737\031\303<\202\247\364<\256\240\241\274\341\003\2219\227\2001=O\265\331<Zl\305\273\007\236\265<\007 \370<\230\304\252<e\257\362\274\237Cj<\004\250\025\275\313^\366\272\357\026\022<\010\336f<\235\013:=\310M\353\274w|^<\031\332F=\350\310\t\275h\374\253<T\355,=\372d@\275\325\254R=\033\215?=J\010\306\274AY\261\274DX\031\275k\252C=\234\301\177<\216\256\022\275\203H/\275\372T\000\275\323\206Y<\361\343\207<\033\363P\275;\025\326;Z\006\005\275A\276\242<\307\037I\275\310dF\275\307 \232\273g&\263<D\222\244<\345\014\351\274(\242\200<\000\372\350<{\'\360<,\027=\274j\336\310\274\202\226U\275\322\346\331\274\323? =\346\205P\274\233\374\204\274\311P\274<:\3706\275\377\347\272\274\024\033\032\275\372\256-\275\3154G=\201\352\254\274\234\025>=\275\353G=\273\037\325<\255\357\031=4 \024\275 \255\250\274\302C\355<\374\212\243\274\263\346\031\274A\207\342\273\252\255\261\273+\032\317\273I\265\205<\275\276^<!\347J\275\352N\251;9\233H=2j\006\2746\271\022=KX:\275\262o\t\275]\273b\274\333\030\206\274g\354(\273\236\005\242<\300\367-\274\223\367%\275<\312\202\274\200;4=\240\343G=\240\337\202\274\271R\347\274\306$[\274\377<\021=|S\020\275\315\331V=k\330\275\274\367\205\334\273G\324\213<\204\326+<r\232\004\274\021\232\230\273Z\241\235<\203\016\345<j:\031=\303\3314<\343\n\201\273I\252\200<\333hC\274\355\377\004=\013\212p;aX\006<\324?\230\272A\363\026\275\335\236L=\034_\314\273\373\355\035\275\301\246\326\272.\344\023\275@\035\331\273A:\315\272w\224?=\347\023,\273\002\337\213:`\210\370<%\303\260\273\260F\004<\021\234\251\274_\202\214<\032 \356<$A\216;D\'\205<\002\234\360<\324\257\304\273\375\243#\2750`\211\273\010K7\273\334\235\033\275\2378\204\2741\014S\275\030\366\244;\3228\373<\330I\233;\220\212)\275%\177\016\275:f\021<En3\275\250\246\002=$/H\275o\3459;\344u\016\275\247\253\243<q\026\350<\361o\303<\353r\304;\205\210\n;\022\032D=\263\3018==<\036\275#!7\275\014\267\033=O\317\035\273\207\002:\275\377\026==\033l\'=\241\375E=\217\224\270\274/\214J=\346,\371\273^~\313<\320i\035\275\035\037I5\024A\264\274Wx\006\273a\357\212:\260\300 \274\006\034B=\360\375\373:YzS=\3279#=\013\007\356\273\374\216\304:\367D\037<\217\255\'\275\261\321W\275\330\336\376\274\2049S=\277U(\274\037\017\230\274\014\276\257<Y\222\300;\362\007)\275\\\372\022\2752f\364\274\232>\247;e\202>=\r\305\034;\266\013\025\275\371<\272\274\225\351\345<\251\217<\275\320\301$=\301\353\237\274\016/\240\2743\370)<\346\320\324\274\"\304<\275\3403\006\275\t\320\330<\353\r\017\274ye\265:\236\t\016\275|uK=W\265\035\272H\215%=\3215\214<BwR<\255\201?=\242\3543\274\031\302\205\273\373\267\307\273Q\020?=\355aY\274\363\"\002=\375\252\365<4\346\003<\363\023\272\274Mf\014\275I2\267\273\343U*\275\017\210\017\275!Ih<\374\275\232:\\E\343;7\247d\274\273\276\353\274\347M\235<\\l\276\274\033\237\010\275\376+C\275\020\263\303<\265\305u\273\251\003b\274s1\243\274\353\272V\274\225\355\201\274\277>\227\273\014\'\225<\010\001\337:\356.K<\3201\322:\343\226y\274\304\2203=*4\223\274\005\004&\275\374\357\302\274\217\214\030<5=\227<\037\037R=\303\340\354<\2241\364\274\266\037:=@2\235<\276*\214\274\2724\252<\223\343\312\274\313C\016\275;\256:\275=\345\031;\252\2074=\3254\007\275\372\271\271;\335\336\323<\232c>=u\016\334\274`I\376;\345\251\036=Z\353\"\274\225\313\365<-\337\036\275!\315\001\275\235m\035=a=\032<\331\332\036\275N\034\364<\341\334,<tiA\274\013\207\202\273h\213\021\275\023\237\207<\372\330\277<\361\353\022=\243\312\035\274Qg\327<\223\311\010\2739b\232<\342\027\t\274\351\302@\275\005fT\275\352\350\023=\353\274\032\274\023u\n=\225\352\026=.1\035=\234!V=W\342\373<gj<\275\320C\\<\311I\354\274\021_\360\274\032\200;\275\n\342z\2744u\022=\004\340\030\274\320G\006\275hb\257:Y\2354\275h\300V=\365\201\261;\377n%\275\321\346\336<~\361\272<\35777\275]c\033=Nh\267<\270*\006=U\266\261\274X& =R\032 \275R--\275$\351\332\274\313EO\275\247\315\035\275\224\217\030\275\374J\327<\'(\365\274f\300\243\274{\003\336\274r\363t\274\364\221\273\273\372\2643=^\330\004\275,\017\202\274(\235\024\274;\203\333;\242a\241\274\220\222g\273\"\351\020=\233\346\251\274\004`\013=nWF=\367M/=h\372\234\274\027\214\236<\300\'\323<il\274\274hAP<r\374\350<?R\306<m\373h\273<\035L=\261\244T\275\273\255M\275\205\271\223\274L\215\217<\311\211I=\200(\312<\200\316\244<o\362W=n\227\251<_D\014\275Q\206\227<\027\206W<L\340\323:\013\333\226\273A\371\220<p\363\365\274\224\317\002;4L\006=b_\027\275\247\326/=F\023/\274\267\017\331;\006\3408\274\323\223V\275\210\344\327<\324;.=\260\227T\275\326q)\275Z@\017<\001JR<\362\352W=\024n+;\n\335\223\273L\226c\274\257n*\275\345\233R\275n{&=\3236*=0j\360<z.:\274X{\213\273\321\247<=\303X\266<a\220*\275\225\017#=\017:.=\315\203\026=\261\216(=\304\337@\275\325\200?\275]\200\t=\3439\266\274G\353\266\273X\n?\275:\224B=\204o\352\273&\221[<d2U\275\250\202\251\274\326\307\003\275\001\345\357\274[\014\275<\025\226\014<\251\364\214<o\014\347:\270H\354\274\300\236i<\006\257s\274;\0274=.\301E;i\222\3069\351\352\232<\023\312D=\3607\303<.\371\246\274\301\t\036\275A\222$\275\226\272?<\204zB\274\346\310*\275\306Dk\274\205\344,\275c5F:\226h\030\275j,_:\315_Y<\232 \006\275&\005\243<$\3479=\251L\264\274td\354\274\332y^\273\200\365I\275,[\300;\344\257\376\274\230\211U\275\232@P=\342zy\273O{\244<+\036\317\274c\222\001\275\005\240\006\275Ip\307<p>2=\214m\211\274\303\350\037\275\261X\034=a\377T=M\262\360<L\016!\275\037cX<\314\013S<\237\374\322:a\261\007=\347+\214<\305#\242\274h\037\350<\001\031X=i\210\265<zq\037=\216p\357\274\301\010\225<\025\346\003\273F\347\375:\217\320\357<\270r0=\376\270\364\273M\222\001=\323\027\376<\331p+=\3633\247<\031\372\205\274\364\266\'=\r\256J\275\013<\274\274\254\232\335\274\2500:=\361\263\277;/\245\355\274\226\316i\273v\3627=\037\224u\272\3014\001=\225\0253=\273m\t<Z2B\275\356\314\004\275\246\022\370\273\013\030\'=\336MW\273#\321\036=x\220\260<\365\302T\275\213Y\332\274\310`L\275\236<C<\000+S\275N\254\210\274\370O\306\274w*\344<}\037I=\321\004*;t\354\274\274\362`\007\275Ly\033=\304^\002\275@\0039\275\216\r\000<\206\256\256;\272E9=\212\2128=c\355\335\2740\244A\274.%F<\010!\023\275\356T)=\306\2701\273\356\245B\275\324\333\204;\256\r\254<\017\034\316\274\356)\n\274\225\304\005=L2\344\274G\212L=f\212(<W\351\216\274\365&\221\274\202\3615\275\220$\376;\257\316H=:\267\024=\262\260S\275C\344P\275\214\226~<]\213*=\202\270\006=\251\320\370\2742\032\314<\267\231:\275X\362P\275\007s#\275\334\206(\273\261\205\t=\351U\036=\354g\306<\306\274;\275\305\367\300<P\313-=\317z\233<\224\220\356\274l\320\';\327\242\'=6*A\275\010iN=K\366\214<\375{A=vC\375;\020\002)=gA;=/\0006=K\354 \274ZV\032\275\342oD\275Q\365\273\274\202\033L\275\233\351\013\275\027\037\024=Y\231\317\27372\352<\375\2717\275\372M\231\274\"\304\352<\007Y\305\274\374z8=|#2\275\230\354\234\274=\211L\272\377z\357\274\250\242l<\222\205.\272\016\362%\272D\344J\274G\317Q\275\334\370\013\275\3358\037\275\023\0232=\260i>\275RD\236\274-I\334\274\2227\004\275>\024\032\275r\037\010=<\2370\275\305\0035\275\3032\021\275\013\233-<$\r\321\274\207c\374\274{@\302\273oS\013\275\201\333\334\274\336z.=\206\255\006\275\312\203\021\275\223V\026\275\275o\373\274\014L \273\326-\271<J\177^\272Q\273\020\274e,C\275\311\375\340<4\344\014=E=o\272\366QC\275\020\374\262<\275p&\274\320G\245<\023\232\224\274[\256\240<\023\\U\275\376\3226=G|\031=\231\337\233\274@\346\325<\256}\214;\264)P\275}\374\234;{\035\326<\331%\355<\211\027\224<DM);\362\027\251\272\337H\326\273\003\247)=\300\205@=\261E%\2750!!=\330\200\373\274\023\210\006\275\031D\371<\001\256C\275\365V\236;\353\233\025\275\247F\033=\310z!;WG\300\274\357\313\254\274\226\242\030\275\342\250\377\274\007\273:\273*J\004\275\247\0317\274^L\355\274R\335m\274\024i\007<\276\302\224;\214\332I;BW\362\27423[\274\335U\331\274\007\347d;GS\007=\375\205A=\254\314\212:\245\037l<\265\305\316\274\201P9=2[\036\272\237\267+\275\255q\010\275\272\235H=~n\220\2749:(=\335\263:=\206\201\n=T\'\322\274\251+4\274\346\342@\275\275\371\212<\rI\233<u[\237\274A\222\030<@h:=\360.\221\274G\333\237;-\007\241\273\255T\252\273\215\301Q\275\267\336\337<\306\200\274\274`zF\2755\356\241<\256Cv:\263\020\003\275\300\361\023\27287\215\274\226?$<\250T\307<C\010q<\257\323t\274\371K\360\273\337m\301<\213\354\362\271\312\244G=\351\237\036=\275{\013=\242\007n<\325G\316\274D\356F\275\303\340\257\274\247\035\222\274mj1<\201\230\273\274\354\247\003<R^\007\275l\266\210\274J\233\313<\357\303\216\274Pg\365<t\035\310\274\037;\317\274Mp\235\274v\347\005\275?\222]\274KA\200;\222@0\274\215/\"=\235\244T\274\323\374\310<a\203\346\274C\2131\275\241zO\275\031\205\025=\273\365\216;.\314\007\275\214{\026=\240\236\215\273!\330\262\273\356\307\313\274\374\250d<?H\333<\363~R==\361\016\275\2046&=Vn\324<\355\031\025\275\361\272\017=\243v\231\273\341\254\006=\2041\304<A<$\275\374\346\273<N\005\240<t\341%=\t\325\261<\303,M=\222\214\030\275L\007\201\274,nX\274k\001;\275\274H3=\377M\340\274\177\276\023=2z9<\316\3654\275\032\241\342<mAS=o\263O\275(\343\n=\024}\310<*).;\2764\323<z\241\337<(\313\034<\240`F\275}\304K=\2760\372</\311@\275-\373Q\273$\003C=d\200\336<\277\217\345;\201\255\005=\313\204\010=R\361\271\274\211\265\303<\344\317\277\273\364\310\204<T[\035\274\266\212&\275\321\005\017\273\013\243J=*\000-<\005\030\333<Hi\314\274\r\261`\273\0336\350<\305\"\006\275\211K\362\274\261\245\331<j~\264\274)$>=\201\204\211<\'TV<.\353t\272\034$\020=(\343\207\274\372:+=Ql\306<\276*\372<>,2;\335\025\361\273\336\250\265\274\202\3630\275fW\037\273R\245\324\274\215{\t\275a\017(=%\361\215\274\337\270\264\274\323\335\234<\241R0=\020\201!=\301\216\213<\202\3238=S\236\222\274\310\202\016=\204\225\262<\360\346\327\274\240\037-\275\327FI=\355A\017\275\027\317\320\274\241\000\356< \201\365;\037\237Q\274~F\217;t\251\217\273)\327\241<\201\376C\274+\320\307<5\221\030=\261\373s\274\3470:\275\035\320\343\274\221SA<2\010\021=)\255\236\273\221\030&\275\357]\302<\300\272,\273\203\306\003=Pv\025\275\004\033\360;\356I\017\275\266\213\261\2745@/=`\300=\275\344\203\\;\003/\016=\205\335\200<\327\014\021=\247\317G\274-\331\252<L\362-=\034\320\263<\306\253$\275\344t\262\274\223\377T\275M\232\332\274\307\000\307\274\322\252\337\274;\0234=rZ\327\274\274\013\237\274Zy\000=\302\177\000\274\366$N\275\335oH=J\324\234<\265\'\322\274\270ZC=i\031\204\274\370\2008\275;\007X=\267 \367<\255\276\264<\226\256T\275=\327:=\"\363\021=\251\354\037\275\235\256\207;N\365+\275\276O\006\275\026\017\231;5\331\242\274\210\277\231:V\333\304\273O\327}<\325t\262\274\221P\032\275_\326K=\214\335\356:\273\202\311\273\315\221\365<\333\346g<\177v<\275\300\"G=\327v9=i\001F\274\215\320\006\275\210\205\251\274\037\370\027\273\217BP\275,yF\274+\203b<\032\314\212<\355\203Z<<\320\034\275\023{S=\373\272h\273\nzO\275\206\316\344\274Z]H=\363h\237\274\r\230J<\206\005\232;h\346S=o\2373\275+@\237<\004\023\237<\234\033@=\210\223T\275Zny\274=\220==\017\021\265;\013\221u<\235aR\2757\343\300;\265\241\316<k\3528=\307\315\032\273\322<2\272y\321\276\273\334E\005=[\264\025\275\204\277\317;\354\235I\275\325\327\016<`\310S=\374\322\233<\212((\274\220\354\337:\372\204\023=\320\370\231;\301\"\306<\202\306\023=*T\033\275H\350;=\'=\236\274\r-I=\233\252N<\377Y6\275]\026\032\274\235\277O\275pv\022=9\244\000\273\346\224\362\274\316\037T=\201.\261<\305x?=\320q\234<\036\250\355<\010n/\275]\3055\275!\r \275T\2360<i\276\351\2745\256\245\274\337\214\316<\006]D\275Z\025*\275\377\2711=7\332t9\314\307<=\263\230\316\272\302\357\335<\263\276\221\274\307\n\331\274\326C\222\272\300\302\013=W\243\241<\310\276\032\275\0222b<-h\013=6\224\311<\213.6\275\226a\316<\254\260B=\017Z4\275\272T\323\274M\3430=\222\275L:wP\010=E\207\266<mP*\275\214zh\274\276\010\245<\017\235\025\275l\300\231\274\0365.\274\003;\231<+\004\267\274\302`\211<D\214X\274\354\3507=lV\265\274\317\362\005=\225$\t=\334\232\356<\257Q\267\274\346\236\332\273\243\2117\275\363+\206<\331\":\275k\013M\275\036\312\346\274q\031\262;\324\025\020\275\235\232+\275%\252R=5<\026\273~J\016=_\324C\275F$\340\274<\247\307\274\304u\235<\223\217\023\275\035\003\016\275%\346\311:\003\204\267\274\210o\260:\022\303\204<\337\321I<5\034x<\322\365O\275\031F\n\275\252\333\372<\265\030\260:\247\237\353<Q\354I\275\255\003 \274\346\300\276\274pm=\275\314D\007\275\035\251\272\274G\344\200\274H\270\006=\255j\306\274\t\371\232<\374]\375\274.\204 \275\247\326\320\274\311Y\r=\2222\314<yQ\344<\371\332\232<\240X\017<\010(.=\333nC=`\341\237\272\363\327\222<\037\2025\274\304`T<:\335.\275S\0140\2757\020&\275\244?V=\303r\002=\351\231\004\275\277\351\211\2740v&\275\241\242<=\373:\267\274wt\341<e\301\035=\343\331)=bQ\200\274\273&\"=S\236U\274x\267K=JmN=\210\232\366<\243\237\235<\273A?<$\215\255<eA\'=`\270\021\275$:\334<\225\324\r\275\30540=u)\213\273\207\276;=\'\267\344\273F\325)\275\352u\212\274\361\327?\275\235\325\273;\177\"\325\273\323\000!=\210p\030=\331tC\275\362\030\022=\320/\005\275\352\325\224<\275\017U<\t\243 <\320_\233\274*\330\231<\303\2005;\232\221\362<=\327B\275\200\032?\274:A\\<\355\013D<\305^\003\275\025\325\023\275\325HL=\034E\026\275\226\255\020=m\354\036\275\341;D=\233\213T\275\200S\355;r\210\312<\344ze\274\373vV\274 \333\037=Fo\010\275\004+(\275\207x\261<|\035\213;\225\373\231;\203\312\301;\315\014d<\262{\350\273n\343\323\274\023\334\345\274\372^\022\275\244\223\303<l\261\024\273e\237\310\274{\321\267<\321?:=\356\255\013<\233\257\333:OP\333<\377\315\017<3!\327\274\024\352\010=o?\306<U\326M=\275K%=\256cU=\225P:=r\2037=-x\211\274\304\035s\273\252\351T=O\247\024=\375\264G=\026\211W\275\201\236\244\274\233\267\314\274v4\212;\236\201\017=\233\271\004;\272p\217\273\242N\351\274\371b\216\274w\367\270\274K\r\251\274\335\337\036\275:O:=\273mE=rX\025\275\261C\036\275-\265\365\273\335\257.\275\365!n:1$ =DX\246:naW<AaA\273\215\340-\275^\231T=44\207\273\375\363.=\271!\220\274;\031\271<o\221\027\2745n\3709\360\3435\275\225q\305<\023\373\240<\026n\270\274\262\341\003<\334E8<#\013\005\275\247\222\032\274\025\0266=\032\370\231<&\210\032\275\311$;=\322\254G\274\'[%=\030N\267\274WGW\275E\310\212\274\320(\n\275#\3440\275\207%\000\275\275\322\223\273\270\353E=M\004\247\274\017F:=1\030\000=\'\272^\274\214\352=\2751\270j\274\313\212\022=\331\256\362\274Mk,\274\007\324];R|f;\"\315\002<[\267\224<%\3572=\034R\"\274\233~\361\272\333\335\027\275\024SN\274Y\204\010=\262\214\300<\253i(<\32762\2756\221\254\274+\371\030=\322\204\246\273u\212\324<\250\342\310\274J\311\305\272y\310\227\273!?\027\275 \242\007=\217\314\t<\270\265,\274?\010D=RL4\274\355\330\342\274\024O5<5\315\230<\266\3431=\233Z\262</\233\027<,9\273<\344\365\264\274O\210&=;\007\025\275\367\014\036\275e\205\035=\207?\003=\217){<K\357\026=\226D\346\274\355\227\300\273c\037\226\274\010\341\t=\020\013[\274\245w\332;\206N\'\274\347Sr\274\267K\004\274W\226H=\035\360\236\274P\303@\274\251U\236<\241\214\266<\346-m\273\23332\275\005e3=\266\030\373<Zj\000;\374\031\225\274\362\013\251\273\202\355\250\274o\352\250<Cj\037\274\323\324V\275A\263L\274m|\323;l\2011<\033\034\367<<\267\234\274T\251\005\274\263k?\275\324\002Q=\330\007&=c\325\317\274\021\221\003=\240y-\274k\217\026=\375\316\245\274\364\235\263;\032X\316<\252\r\242<\007\251P=\r\250\016\275\r\242.=`\301\031\275\2434\031\274mR%=\"\363M=\240\316\t=\226Y\227\274\223g=\273\242\241A\275-\302P=p\307\356\274y`\352\274\307\347\032\274\000+\n=(\342>=+\027*\274\261\001n<}\247\022=\327\212\362\274e\252\333<pk\024\273\356\032\236\274\276`C=\274F\r\274E.4<\351h\247\274\360YL<\323\211\250\274\032mp<a\301=\275\246\362\035\274\314\204\000=0\231\234\273\333\372i\272)\340W\275\332\335\020=\332\3360\275\263\002I=\030\202\344\2744\340@\275\265\317\317;;\347\340<\240\252E=\277\273\212<\260m\014=\246\250 <l\240\255\274\230\217\002\274\020m\020\274\352{T\275\303n\300<UQ\354<\227\340\346<~;V<&\340&\275\311\027?\275\354\352\022=\261\342\267\274\271\321&\275\344\255\036<g\017,=\302?\001\275\332\317\262\274C\245\276\274F\370\013<\236\004)\275\270\355\"\275\003\340\234\274\354j-:\324\241\035=P\304\017=\225\244U<\335\376&=Z\213\222;M\354\251<o1\356\273\024\334\266;\373\252\004\273\330\000\331<\334\231?=k\376==lg+=\347\325\342;N\004m<\264\250\204\274p+\333\274}\226\357<\245|\361\274d\252\013=l\361\216\2716\215\023=\004h\233\274F2S=\3659!\273\036O\013\275V7%=\316\306l\273\2155U\275\016\034H\275\275\367\234;\356%\236;\377k\004=f\240A\274_\354\363;\033\313\331<Q8\243<\014\021=\274\243\"\037=-\030F\275N\017\270<a\270\306\274\266\214R\273yY\227\274`\265>\275_\010H\275\204\213\000=o\027\035\274<P\211\274\323n\035\275\337h6=\203\364\n=B\3366=\262\343\310< I\274\274~l\310<d_\014\275\316u\272\274P\241\241<\305\251\007=~\216\247\274\032\360\212\274\353\302\367<.\366\246<*\235$\275\301<\323\274&\3215\275\rY&\274y\317\265\274Y\345\267<\352,*<\301u\\\274\342 \306;\363\2667=\217\260\375\274N\024\302;RO\t\275+\267\026=,\312F\273\021\316!;\200\364\231<\202\306\014=\332\337\236\273\201\252\324\274\355\315V=\351\355\375\273\220\3273\2749m\017\275f\245\n\275h\2725</^\336\274-R$\275\335\244Q=(\313\026\275!(&\275\327R\271;\033\322\372<\350]\032=|{\213\274\031\026@\274e~V=\304\226P\275\263/y;\373\244\006=\262O\227\274\232\276&\275\371\211\277\273\237\033\232\274\010\333y</>\370\274\352Nz\273v\245D\274A\032\254<\264\275\267<N\020\324<\230@\026\275fH>\275;\267\337<i\2545=\246-\346<\204\350>\275=[\255\274jn\337\274o\022\014\275\213l\007=\233\350}\274=qg:\000M\'\275\211\376c\274#\001;\275Q\244\031\275\023\276><HbM=t)\017\275\024\365V\274\220/o<=\212\330<\212\331\"=\001\225\313;\360\327\206<\251*/=C`\203;^\275D\275\031\267\306<\013\221\274<i\253\306\274hm0\275\224a\225<\272o/<\022a\236\274OT)\275k\220\000\275\215\216G\275B\032J\275Q\t(\275\033\025A=\"F5=\335.\246\274\312\235\r\275l\3263\274l0\334\273\324qF<\243\t\253<^\353B\275QB\354<\203\r\216\274\246\342-\275rd&\274#\323\003\275\215\033?=B\nG\275\211F\216\274\233\251\354\274-\033\333\274\266\371\027<\203\354\373<\000Q\003\273\021\231\247\274b\215#\273\020L9\275k\236\306\273\3618\306<T\002\021\275\'\2609\274\034l\010\275\t\323\351<\356Y\022<\023\215\022=\302\320\227\274:\022F=\014\321\235<A\016\360\274\306?\025;\224\304\266<\275\032\257<\313\213\007\275\007\263\024\275gV\266<\254\232\027=d\023>=\332\313\276\274\326\366\021\275\352\235O\275\370\353\355;\000\362\014=I\353A;\034N4\275\307\336.\275m\353\242:\223\000:\274\226\321\t=\344\326\314<\017P\343<\365\321\341<\254V\3278\341\377\341\272\313<\210\274\264N\305\274{\026\326<h\026\017\275\352.\006=\0059F\275\321M\241<n%\014=\"\226\034\275\245\304\026=\024)\261\274\212\320>=\336\004\014\275\236\006%=M4\030\275\357\036\354:]\215\027=P\352@=\276`h\274\347\375F\274\027\274R=\337Q\242<9\303\022<\244|\022\275\010\2627\275X;$\274\365bO<\355\261\037\275P\222\277\2738x\002<wQ\241\273\255c\032=\351\256\001\275D\030==\227v\027\275x7\211<q\246)=\347,\003\275\265\266X<\325\037\221<\347\334\r<xJ\266<\250k5<\212D\213\274\373\3135\273\227\332U\275\263;;=\306\265\366<O\302A\274\336z\261<\006!\314\274\221z\362\274K\372G=@\363\352<\365tn\274k\206L\275\204\201K\275T/\'\275O-\014\274?\3748\275RP\310\273\203\207\010\275\3739\332<\265\364|\274\353\322S\275\360R\031<4gI;\324(H<wL\302\274\331\376\376\274\021)I<\035\005W=\3658\254<\354\305f<\313\213K=+@\221<\2433\315\274\014\212@\274~E$\275<\n\200\274\375.D\275\260`.<\223x\025<h\305\234\274\036\017\357\274\247\213,=\246?\316;\330\177\347<\263\376\332\274\374\257\004\275R\253x\273\276\237\027<V\027%\275]]\032<\364R\264<*j\3239\"\302\025<\372\303*=G0\030=\2278\272\274c\035&=T\004C\275\233d\262\274p\337\033<L\375\r=\"\225\344\273\007V\032<\333d\032=\362\025\177<\273\233I<\013\311\240<\336(\002=\371G\023\275w\364U=@\177a\273R\354T=\330LC\275\025\017!\275l\361\351\274(\314g\274,O\256;y\217\005=\"E)\275\177\242\013=^C\035\275\277\037\316<(\354<\274\2566\r\274\300\342\021=\324\316\256;\252\263\020<+r$\274\030\325\021<m^8=\026\314\356\274\342\336\025=\267C\232<m(\204<\r\206Q<\227\371n<\373\266\360<\206\213\217\273\223G.\275oF7\275\033\337F=Mo\004\275S\3516=\334L\037=td8\275\241\262\r=]\264\205\2733\241\202\274xB\010=,\324\224\274\350\336Q\275\351g$=A9$<iD*<\203n?\275\325\002\013=\241]\313<\206\375\033=h\357\331<\234\347,\275wn<<Ko3=\006\372\206<\014N3\275\323\tV;\036\337\002\275\231\325X<\325DE\273\326\370\'\2751\014\016\275\037vA=(\2532=S\006\202<\373D\005\275pqD\275/D\002=\006D\205\274\353\033W\275\305m\252<&\366\216\274\330|\000=2\347\370\274\334\036\r=\347\3306\274#\t\'=\304\256\240<\024\\\006\275\014\340+=\344\206\003\275}4F\275\223\217\362<\244\257\231<\350\306<\275\236\027\002=b\017\272\274\220\263\236<WM;<\311\002b;\244\255\317<\224\014C\275\253\366Q\274VK,\275\336\376\257;\300\035\007=[YT\271\000\213\274<\204\t!\275\233\250-\274\310\331Q<\231\362\033=:\0373=\204\271\026\275/\267\007\275\242\356\032=+\242\234\274D\020\025<\324\302\004\275\374\016\027\273\366\034\003;\"\0035\275\224\023\"\275\362\3473\275\020b\220\274Wl*\275@\200\n=V5\211\274\334\027\026\275\3144\303\274\013\'\346<}\210\216<\007]N=B\224<=\361\222\031=\253K\017\275\226\013\023\275\212\354\\\274\026\240,=\200\261v;\330\344\204;\214\207\333<\006\222\020=\245\202\327\274\365\204\n<\2278\303<\324#\224<\354\307\273\274\273\223\316<\321\202G\2757b\220\272\006\006\036<\373\203\201<\351P\014\275\346bJ<\244\246\362:\237\317\024\274/\346\374\272\n\352\236<t6\035=\247~\024\275\250`\345\274\315\212\233\274V\312\231;\337\010!=\345\323\311<$\253\t=\340,\240\274$\000Q=?\361\253<\236\320.\274-t\230<\202\r\204<r8g<\244u\367<\313r\022\274^m\340<`=4\274B>R<\036\255D:\356i\331\274\371\010L\275\250js\273\276\032\373\274\037\246\274<\275\301\214\274g\320U=\276\323\014=P\026;\275\3335M=\327x\341<\230\211\251<\007\3200\275\376[\323<R~>\275+\006\312\274\262\351\355\274\250\177\017=Q q<\227\302I\275\035\237D=\220|\033=xU\035=\232!?\273\200\320\351<{=\344<eNW\274\272\334\014\275\200\024\307\273\021\263\r=\3045V=k\250L=\3275f<\026\005)<T\214\267<i\331g<\216\3344<\307;\2659\275\3554\275\233\307\360\274q\311F=\002\006\005;\004zL=\204\356\344\274\264E\034\275\2604Q=\277\206\022\2740`\375\274\320x\212\274\374\177\364<-\311\223\273\361\035\020<N%%\274\263\311\321;\r\371\'=:\007:=\307\030\215\274\032\253\324\274\326\030\312\273U6\021\274\024)\010=\314\202\026=\236\265,\275\315\'\025\274\350\007\006\275Q\207S\275\326\020@=\006~\246\274\363VI\275\310\tB=\301\347\263<\007\177\"\274\252\305\375\274\3237D\275\220\3119=]\2511\275\321\361&=\"\371S\275!\221]\273j\323\014\275:\364\022=\003\270\217<\032\330N\275\335C\366\274\365\213$\275\032\023_\274\367\014\n\275\331$\306\274Z\241\317\274\031\213F\274\033b\210<\265$1\275\377\252\273<\302?\245\273\307]\205\274\362\026\324<2\232\317\2747W\300<\356\267\027=m\262\336\274\177\273 =C\017\204\273\021\233\236\274\374\207Q=R\300N=\234BB=?\227\256\273\010\000\n\274\205\236:\274\3437\224<\233\307\037\275e\355\272\274\2113\225\274\356h\035=]\350\212<\336\3664=f\216\265<\244\354\347<qXI\274\024\320_\274\260N#\275\220&\313\274\030)(\275/;(\275pm\322\274b\314\233;\244h\203<s)S\275\0137F\275*\257\r\275\327$N\275\026\263%\275!~\363\274\225\226O\275\262\373\037=k\205L\275\345$+\275\234JA<\211|)=\221\252\000= \273\303\274\356\222\344\273\347#\230\273\260o\344\274K\333\342\274\341y\321<*\017\300<!kV=\273{@<\004#\001\274\304\237\374<\2226\013=s6\235<\010\t-=\0270,\275\357\270\254<\363\207\267\273\350\014\031\275$A\020<~\317\312\273\350\n7<\201\264\343\274J\251\034\274\330G\350:\264G\375;\314\256\004=H\351\"=\265\321\036\273\332M\237\274\256\204\245<\243K\020=<\254\020\275$\305O\275\201\246\025\275\355K\325<Z\035&=\003\267\253\274zY\002\275\021\266D\275\326\231\216<l\330\335\274\217-Q=\206\376\206<\373\315e\274\322J\022\275\005+\'=\026q\021\275\200t^\274\217\231%\273\010\362\025\275\"F3=j\363\024=\226\2613<\345\300P\275K\234\222\273\304\341)\275|@R=2\325\345\274\'\343\027<\272\260\226<P\2557=\225g\333<r<\323\274\337\202\226\274\230\334\034\273\037\2658\275)k\252\272.\311\366<d\010N\275\317\252\310;f4\007=,\254\030<\342\326U=\351\247%\275\020,\244\274\320sC=\270\344S\274\243\222\270<\013A\021=\215k\260\273\252\217\023=\332\257\005=\200\321.=T]\002;\377\330\003\275\352\341\247<\274C,\275g\242\010\274^\177B\273\274W\202\274EiR=}1\001\275\017\273\344\274C\351\215<!\224Q<)\031\2327\014\214L\275\304gP=\224@\t=\356\234\337<\266?<\273\3227+=?6M\275\346\021\037=\033\r&=;\345\307\274\241\277o<3\216Z<Q+F=\002\030\301<q\343\317\274\232\351V\275\254\267 =\256\r\032=EB\324<\005P\033<B\243N=9\261d\274\000\230=\275\237R\206<R\352\325;o\236>=%\255F\275\3037\'<X\022\347\274*\322\364\274DS\210<\357\336\037\275\214\320\260\274\274@\271<\315-&\275\301t6=\017\224\323\274\351\rr<1\207\037\274\234\026\004=\233\2722\275\306\264\356\274\246\345\017=\270\352\337\274u\270q<\266\225\n<\323\301I\275\310/\226<w\361\002\275J\3058\275Kf\036=\255t\014=y\353#\275PY)\274\303\3404<\276\222?\274\014C\026<\014^n\274\010L\"=s\006U\275\237p\256<\333\212\014\275\311\223\002=\020\353g\274\323\307\007=H\316\243;\373\002\031=\ne\366<\363a\033\275E\300\321\273;z\277\274\330\223\353<uQd<H\346\276<\023\332K<]\306\247\274\307\000H\275\376\016D=\365\0219=G4\257\274\216\217\234\273\305v\372\274|\231G\275|L\241<\025\033\014=\333\257\250\273\005\245\353\274\330\026X=\007\207.=-\334\t\275}\r\315;\035\0323=\222\201\321\274\363\177=\273m\2046=D\025\367<\326\337>=L*K=\252\023\230<\007\234\257;\310h\342<\326OV<\335\261\230;y\270Y\274\241c/=\377UU=sR\202\273d9\373\272\0211,=rAH\275\316\300\311<\033\331R\275\312\342,=\'-\035=@p=\274\215\353U\275\210\267\375\274\016\325\236\274Y\317)\275\321\036\305<O\366\266<(\207\205;u\221\307<)\350\302\274\206\304j<\034uH=_\337\210<\'\263\371\274\317/\275\273\001\0213\275}\225\034\275\032%\200<\347_E\275\005\242#\275\325\005\025=\033>\313\274\240\347\005\275]\256Y\273\267v3=\024\036\t=\021\251l<\347\n\205\274[t\311;\246\027\032<\311\340&=d\306\021\272\253N\300\274Z?4\273\354\307\306<\027\031\"=\301+\230\274\347\036\225<245\274\tc==\345\306\006\275tY\375\274\316\375\016=\230\312\203\274tC\r\275q\023\236\274W\204\276\272\310U\214\274\367\263\301\274T\2302=\206\270\'=.\377\373:V_\"=s\014I<\216\320\034\274M\202\313\273\022\254\010;\343M\236<\350\232\365\274\016\037\013=k\0328=1\334/=\301v\326;j\243+\275O\347J=\016\373E\2757s\342\274M\231\350<\346\330\260<\300\254\215<[\2106=\370OC=(\247\206:\001:s\274U0\025=LJ\'=\376E\322\274\277\023\025\275&\013\n\275n=\3137\231^|;\343\224\340\274zy\027=\n\201)<\241/\200\274\211[\317<\365gI=\317\376\022\274\251\223?\274u/:\275c\333^<z\213,\273\2613\350<~A\030<i\277-=\225\003B=J\267\234;\250\240K<c\330)\274KD\034=+\251\251\274\371\n.<\240\035.\275Tg:\275\354L\037=}-&\275\226DJ\275#\225\016= I\342\274\222\014\3157\323X\006\275\276\231\332<E\034\370<\226\271\"<J\272\266\274G\242\027=\263Me;\250\255v<\20021=1\250\001\275E\376\035=\021x\272\274\201\004\032=\356,~\274$\356\003\275\222\223\022=1Q\226<l\2065=\200aC=f\222\232\274\264)\313<&W\026\272\004O\010<\210z\261\274i`\027=\"_\251\273\237\254\275<8\213H=\275\327\241\274q|\036\275+\310\236\274\275XF;%\025\273;\210\3043\275\310\217\035<\351\025\252<\010\325\266<\207\323\251\273\020\006M=c\205-=\003h\363<\007\221\331\274#[\274<\342\201S\275\274u <\027P!\275 \303\213<\203\377\367\274\214\200\224<VH\363<\321\034\032=q\303\306\273@$C\275\220u\211;\313=\251;l\000M=c\2259=\361=\022<\332S\002=\000HR\275?\256*=\224-\225<\305\014\350\274(\336)\275\354\237\203<hq!\275\252\272\004\275\357\271h\273\223\244\352<\340\226\002<_\002\022\275\213\370\024=\007\364$\275\3001\217;\241\373\026\275\252\332+\274g\303G<P\245\237\274&sE\275\340\2642\275\264L\016=\320A\233<\360\324\026=\334z\016\275\212\345s\274\002PK\275\314[<\275\016}7\275\223\231\327;Q\364/\275z\352\025\274\236\0337\274|\365\376\273\3119U=\321\030I\274\272\215D=\256 C\274M\253\034\275f\222\014\275\270\200J\275/O\234\274\364\302\372\273/4\n=\266\276P\275\211\0345=\310\242\304<\303a\024\275T\261\271\274jfy\274\2430\t;\376\000\336\273J\001\377<=\277\017=\3570\304\274\177\376\262<5\365=\274\227\330\177<k\013,=J\267\304\274\004H\266<.\236\362<\"\007\361\274\360\355B\274\250\271`\273#\257\334;\352\022\373<\n$T=\250l\010=\\\034\341\274$z\371\274)\n\210\274\233hM=\241\366\350\274g\255\275\274r\033H;\261\255\370\273sl\333\274\374\335G\274Z6J=\007N\326\274\007xk\273%j\013=p\315+=\365\265\332<\337_\r=\311\203\230\274~\000\264\2746x\010\275\224E\021<\201\360\007\275e&\331<\317\274\261<\202i\001\275\005\376\231<\237p\316<\342(\220\273\265\346\242<\336aS=\322\312\007\2754\r\032\275\200\n3<\272k\377<\207F\323;v\3332=X\2676\275\257a\024\272\370N7=\361\264 9\270$p\274\002\341\357\272&.\024\275\014_\252<\324`T=.q3\275\302|-=c\360\r\274\203N\244<p\267Y\274\002\263z<\2510\272\274\344kX\274,o\352\274:\340D\275\200\323\260<\335w\004:\013\317(==\314\236\274G!\317;4N>\275\377\2515=\223\205\257\274\306\345\245\274\3141\034\275\210iA=\021Tt<\374\001\323<\3759\370<\305\271\017=j\227\211<J\270\n\275;w1=\223\t\033\275\350\343\202\274\305=m<\204Z\306\274!I\013<CR\003=\222\017\r<\275W/\275\205Y\034\275P\317W\275\035\377\365\274P\264\314\274\316a<=\210H\231<r\021\234\274\267\273_\274\343\2738<\014k=\273SR\017=`\327\216\272\204\nU\275=\214\025\275\310b0\275\004G\257<\205\333r\27482\271\274\323\233\324<\025\302\031=\232\300;<>%2\275\274)0=\321\223\005<\2366\021\275\2272(\274V\273\t=\270~0=\240\224I\274\363\242\203\274\336\235\331\273\357\317?\274\027\374K=\36129\2752\302\001<\'\337\300\272\022\323\023\275\322\221U=\260\376\000\275k\036\036=`\375[\274\nDP\275e\305\\\273Q\305\001\275-/\373\274\014\206\230;\347B#=v\243\350<\377w\304\274c\235\262<\333[\352<\261\030r<\361X\000\274\215\234\213<\346\023\260\274\321`,\275q\325\336\274Oe.=p\320\013\275\203\313Q<R0\202\273\360\326t\274\010\364\225\274x\347\332\274\336 \004=\231h\353<\362\013F\275\315ZJ\273N\206\236\273\211yB<\3014\316;\366,\316<\3359A\275ZM\357;\024\360\374;\251+R=:\260D=\254x%=rGJ\274\013;2\275\021\2712=\026Z\020;\356~\3259A\026\226<i\240\233\274\270\331_\274\002\365B=]\025\257\274\350$\201<T\332\315;\3769\314;n\206F\275\024\222H=\033\006\323\274\250[\353<\325\300\242\274\002\354\314<Wu-=sZ4\275A\032z\272S\337\035\275\320\236\356\274\353d\327<\235\371\245<[\2231=\"q\000=\356\314\014\274\021\361T=\332\207\'=*\254\007\275X4\317\273\221dV\275\364\023\010=\372\331@\275!r =FP\036=\216oE=\253\366\250\274\301\233\261\273\026\3746<\317\235\033<\003D\"\275<\370\206;\303\365\306\274\333\325\003\272\367\362\243<\326\026G=1\357\234\274\210\341 \273\365\340\336<\340.\026\275\235\335$\275@\352\022=,\252L=\3339\351\274\2152.=\342\210\362;dD|\274+\251\353\274\256^-\275\324\312\264\273\354J\314\274\324\235;=\2259\271\274f7%\275\026\200\351\274\225\217\375<\366s<=\010\252n;z\\\210\273\313\007_\274\343P\007\2740\234\320\273\310\2043=w{\004=mZ\343<8o\277;\273o\377\274l\374F9(\201\362\274\317\311I\274w\006\375<\235:\264<\362\031\020=\231\2761=\3429I=3{*\275\027\231}9\355\351B\274$\307\244\273)j\001<\262\270\003<hz\237\274\343\255I\275\302oF=0\346\216\274\371J\010\275\360\316\353<\t#Q=\343PD\275\206\3236=\242\033R<\217\372\221\274\25029\2757\372\316;\t;\204<*(P\275\007\355B=0V\214\274p\314\231;>w\032=\221\005\013\274}\303\255\274(\354\230\273\222\357 <\032W\257\274>\311n<&\342\030\275\214\234\337\274\251\321\014=\3118\325\274\237d3=y\312u<54j<\226+\327\272\2774\372<\374\254\341\271Z\033t<\317\327\313\274\377\235M\274f\330#\274\356\207)\275\354\204(\275\"\254\005\275j\342\243<\360\235\263<<\005\273\273Y\243\223\274\007\313\326\273g\365\000\275eAS\274mI\003\275V\331\205\274\215\rK\2756)B\275\342\315d\274t4\363\274\215\\*=\243\010#=\010\224U=;f\212<\202c\022\273]v\3539\341\210\003\274.\"%=VQ\332<\326\330f\274\\LJ\275=\025\304\273\274\201\r<D\353R\275i~I\275D\225(\274\016\017B=Z\342\356\274\231\231?=\225\246\021\275\222\362\005=\316\033\204<\304A\002=\006\021\335\274~\003\332\274I{q;\\\230\020\274\333:{\274\356\3032\275\022\204\025=\2175B=\333j\264;\201\321\246\273\232\272\010=.\267\346\271\313>\231\274\377mu\274\237\0228\275*\263.\273O\323\206\274\202e?<Z#w\274\017\372\314\274\300\033>=\243T\020=d\356\201<>\220\036\275\330\013\353\274\207\332K=\240\220v<\347rW\274d\272%=A\216\273<\201\375\t<\216\032\030\275S\340\360\272\220\013/\275lA\334< (\214\273\377^m\274\345\317);[\304\201<6\323\235;\211\306L\275\235W\265<[\246\254\273G\240\314\274\242}\342\274\013\035.\27526\030\275\034\246\317\273G\321.\275}\000\235<\253\360\216\274\337%;\275F\231\246\274\262\023\206\274B\375\221\274\253\353\n=\207\360P=Yn\034=K\261t<\336\373^\274\352N\276\274e\327\345\274\315D%=\260&\356\272\321\025\027=m!U\275\310Rv\274\007\212\275;\255\247\212<\223\203\323\274\365.\326\272a\304p;\003\275F=\366\230\353\274O\214;\275\022\347w<i\372(=\324\025\023=$b\024<\277\037\345\274{\345\005=`E\030\275\216T\315\274\010\201\374\274\301\265\031=gO\203\273(0S\275\2605\033\273\323\256)=\304\253\205\274\312\343N=B\024A\274\"\363\236<E\276\271<?\371\307\273\233\2659=:u\t\275s\264\005<\031\245\245<\360r\267\274\232\206\020\274@\253*\274\355\347|\274\351\327\013\274L\007\350\274\006\212==[\270\004=\227\334\027;\352\342W\275K4E\275\243\000\016\275\025\305P\2746\334\020<\323\216<\275\201K\001\274\246\017\025\275\212\220(\272M;\333;\370e\230;\243D\306\274\340\241\241<\331\264\221\274\"\224>\275\210\313\226\274>o\250\274\022\224E=\322\")=J\242\010\275EO\226<X\215\257<`\335\262\274\334\3513=YA\033<\257\r\361\274\256,0= \264$\275\3067\330\273<\251\215\274\204\312z\274\242\377Y\274\331\365\255<\251\210D\275\204\032\362\272h/F\275\036l\334\274R\336\027\275ud\266;\033N<=%}9=\036t\016\274\302\213\211<Hd\314\273;\\\037\275\210\334(\275\216\351\n=\362$,=}\211\223<{I:\275\247\332`<\335 \277\272\237\024\034<E~\346\273\343\026\333<\037\021\216\273`\306O\275\272+\000\274*f\226<iX\240\274.\252Q=\374S\211<\177@\363\273\343oE=\246\301\325\274xH>=\256\"Q;\203?\243<X\274\036\2751X\236\273J\353\375\274\033n\200\274CO\010\275\2527\336<\2526\274\274\033\326\206<[\363.\275\2322\235<P\270\246<\344\370B\2753\240\234;\210B\350\273\373v}\270jq\202\2744\307\264\274\007\355\332<\205\244\024\274\017C\234\274.\212G\275\025\373\240;7\225\022=+\302\336\274r\033\003\275\365e;=\357+\376\274\026x5\2759\033?<\354#Y\273\362Q\'\275rp!\275\311\263\000=\032\241\034\275\363ui\274&\232\350\274\324r7\274y\356G=\207\203\301;\022\200\020\275ZO\354\274\004\364-\275\343\251A\275\241\\\325<{x2=\014\240\206<^l\033=\247\243T=\r\251\026\275\007%\303;\037\261\267;o\270\014<N\227+=\373\270\346\274\032Y\235;\230\262\354\273\372X\313\272P\341P=\230l\264<\037\013\"\275\203\205\336\274\004V\315<\312\334\014\275\337\002\r=:\274C;\331\341$=s\356\316\274\205W\223\274\376\037\216<*N,=VG\010=\351\365\331\273\372\223\010=\026\032\223<\000\364\376\272\262\000J\275&T?\275p\014%<3p>;\274\231<=e\254O9\256\315\322\274\223\237\311<\342M\225<t\017\316<\356{\224\274\230\265\000:\273H\330\274\256\222\205<]\346\204<\032]\373<5F\367\274\303WE=\024\300@=\237y&\275\177\027\231\274\037g\354<\233{\376\274\224|\361<t\031[<\356E\000=P\000I\275_\2468\275r\001\003=\177)\037\275\010\202\262<\"\t/\275H\310\224\273\372.\307:\353\031\246\274D\322\250\272-V\023=\244\261\017\274\252\373\344\273q\356\006=\222\021<<\225\227\256\274i\334\024\274|\031Q\273i4E=\344\260\024=X8\014;\211\365\350\274\227\2109;\323\0312\275N\307\251<\'MO\275\217\264\206<\231{\3749M\351\327\274\242\256I=4\202@\275\333:-\275[\337\027=X\026)\274j\270\262\274\034\205\250\274\250t>=\360\221A=\316\332\261<\270z\377;7\310\220\274\255\274@\275Uh\276<\035\245%\272\233n0\275\325\360\214\273\260$O=-y\001;F\321\275\274\\\005\004\274\020\020\224:\344\256\016=\t;Q\273\303K\264\274ho\036\274{\200N=\377\266%\274.\3422\272\035\317\327\272\033\225\330\274;o\025\274\312v\217\273mE\350\274\032\034\372;b5\221\274Sj0=\0214\211\274E\362\375\2746h\007=e\364\216\274\365\024%\275!\205\230\274\313\352(\275\211R<\275\3319\225\274\271l\016\274}~\031\274\360.\277\274\276\214g\274\205Y\360<kg\246<7\377\013\275\343\t\026=\322>\311\272\216+\236<\036U\220;\360lB\275x[\211\273\010Hx\274\3764<=\017SZ<\336\323<\275\363\377)<\3015\334<QxL\275\325\255\016\275wb\024=z\024B=\234W+=6[\361\2734\256\025=\305\025P=N\260\006\275\243\021\032;\006O0:$.g<\254@%\275nWM=\300\350!\275\210\212\316;B>G\275\331\177\340\274\271\206W\274SJ\342\274\205\250\002=\331\272I\275\004\010\372\274_\210\221\274N\243\367\274\244\3148=P@\023\275\204\021\254<,C\331\274\215#4\275\355\263\313\273\027\371\360\274\025^W\274F8W\275z\357\323<\016b\330<\312\252\034\275\364\3703\275Q\235(\274\367?U\271\213\033\307\274i9\360\272\225\216=<;T<=B\320>\275\223\304\351;Op\005=\363\2165<Mu\"\275k\374O\273\241\275W\275\353N[\273[\\i\274)\031L\274\200\360N\275]\361C\275\265\341O\274\274I(\275\014\373\006\273\000\3470\274\0047\013=\375\277\371\273\242\327\367\274\362y\036\275K\222\341\274\253\035\272\274\331\205h\274\206\354\013\275\177 \225\274\222\301#\275\321\365\350\274h \355\273\246(\033<}\257\372\274\375\037@\275\200\005\351<\3068\030\275\236T\016\275\0163;=\355EO\275\277\005c\274\331\315\023\275\374v\365<\026\250y<w\260*\273X\271\211\274yg$\275\376\021>\275\310\3149\275\035\204.=\037\246\033=\363\223\017<\275\000\002=\201[.\275T\215\017\275\n}@=\260\003x<5\217g\274~\267>\275\3615\347\2748\341E=\200\354Q=}\225*=\021?(\275\261\312\037\275j4\005=\220M\217:\017\366\020\275\236\333*<\000\377V\274 \023M\275S\221\"=l.\314<\353\222\212\274\271:\020=?k\007=F\236{\272\353\376`\274g\247\020\275\032\374%=Co2\275\356\321\037=fK\250<A\357\034;\213\273.=;\202$<\263\213\365<\270\371<=\364M\027\275\020(1\274\246\262B=k:S\275\0214\256<\234\255\315;\301\230V\2753!\006\275\nL\366\2732\027G\275\016\332\034=\226k\001\275\251\327S\272 5D=H+&\275\235\2160=\025\316\363<\305\270\224\274\016\"7\275\202fG\275\277/\376\273f\002\356<x\314\243<\013\300\261;\014\303\r=n\0064\275\235\n\320\274\244.\333<M\004B\275\224\363G\275!\202W=\324\213\345<8\275\340<\305\2454<.\t\022<\254\033~\274\212\232\266<\330\237\364<\315\177\327;\347\'\021;#\242\333<\221\230\322<\372\017O\275\240+?\275\355\005G<.\227w<WH\313<\251\001\362\274R\355z;\376\'\226\274z!5\275\250\313D\272<,\262;\204\267\'\275\010\353\007\274r\204\017\275Jy\016=\222\337T\275I\307\332<\232L\006\274P\264\243<\362\267\233\274\315\226:=\034\3644\275\2072>\274\330\327U\275V=\032\275?\002\022=\356\241\252\274\0006\2219\270\014\n=K\321K=t\254\t=e\251\304<\033Y\"\275\243\323\305\274\324\336\251\274F.J=\322\005\203\272\275\353\240\274gr\237<\200e\240\274|\220\341\274\226\247\325<\351\035\014\274\204\244#\275\215\331/=\341[\275\273i\273\026\275NDH<\306\327>\274\201\227\006:\333\225D\274q}\324<i\212\230<\023\334\'=?\345\276<)\037\360\274\2456?=7\214\217<\"#\030=\324,\221\274i\233\t< i8\275\025>:<\372\024\320<\230\027\n\275\000\223;<\255\324\034\275bP\372\273\236\311*<a\2716<\002\365J<C\r\305\274#T\347\2742\237\276<\343\365\205\274E\341\t=j\312.\274Zn\256\272\001\210~<\031R<=\341\265H\275\275K\303\274\343j\254<x\355\366\274n\243\272:p\301F=J9\361\273\3240Y\274\024gA\274\234\272O=R\\\275\274c\337\030\275.L\267\2726\367%\274\302\243\r=O\2039\275#\214l:u\363\002\275=\235\247\274{lQ=k8\244<\000\331\000=d\021\033;\200\001\027=&E\247\274\013\246\025=y\365\341\274\']4\275OZe<\316[>\275\317\275\227\274\227L+\275H\036\263<N\212\310\274\370^\021=&o\265<9D\366<Q\312+<\221\204R=\202\020-\274\207\320\270\274\313\027z<eT\255<M\327\312<\372\177\357<\324\"w<\377\\?\274\336\2165\275\341\2064=\327\317\014\275\335\265\265;\000\002\260\274\230\265\275<\r\264\205</Y9=6\005\032=\343\\\200<\310\020\327\273\205\231\310<A\0063=\362X\326\273\347\206\252\274\344.\026=\263DI\275\020\014U\275\334a\201<\231\360L;\244\310\374\273\276\322\"\275#\352K\275oG\027=,\210O\275E\017<\275\263\375S\274\010?\312\274\357@\027\275\37246;\343\'<\275\025\275S=\"\240K\275;Q\227<\245\351\037\275-\274\027\275\333\201\017=\0070\035;\020A/\275\376a\021\274\220.\304<\235\316\016\275m\360&\275^\366\340;X\331\363\273F\0370\2750\024\037\275\226e#=\253;\265:;\345,\275\3153{\274-\223\037\2757~*=\305\224\230;\226\353\035=\324f\371;\301\366\023\275\323\000\255\274<]#<\351B-=\345KV\275\227A\036=y8:=b\256\000\275*3\025=U\354\277\274\030M\206<wst\274\2355\226\274\346\334 =\010\371\347\274z\'\345\274Z,\035\275\324\315E\275\354<L\275\030\t\"=\304\342M\275\306\301!=\212\253%\275\036\0327\275>EA\275\371t\310\274p\357\'\275t\347\006=\332\3309=\300\263k\274k\366m;\316$\250;&\350\226<*\346+\2748\253\031\275\340\035:\274\226L3\275\377\257J<L\207T=\231\016#=\315Mm<q\343\234\274L\nG<\354\220\240<\314\016\022\275\312\222\306\274i\233W\274\346d\204<\251^Q\275h\377\310\274K\345>\275\311\210\320\273\365\265\330<lx\236<\206\340\376\274q@\000\274\251\246@=\317\037\022\274\361n\212<\200\267\264;\354J\\<\222\310\027\275\266\247\n\274\005\021\261<\327\204\377\274\345P\033\275i\220W\275\341a\210\274\013\327\325\274\217\231D\275\345\245t\274\232]U\275\366\2072=\266Vu\2746\037*=\\\212\316\274\034;M=\300\004\262<\344\235D=H\202\302<\025\251E\275\231\003\030=\234\312\021\275\316\341\"<\331\0029\2755c\217\273e1\264\274\321.M<\016ZE=\370\375%\275\037\325N=S\347\371\273\241\336\032\275\362\250\241<\311%\242<thG\275\213AH=\020*;\275\316n/9r\024X=\201\224 =\237\240\266\274\356\3370=:z\212\273\261\332\344\274\211IO=p\314\202\274\274\352\002<\'\367\021<8\207E=\010/!\275\364\340\370<\351[\353\274\242o\333\274\'\007.=\224\214\372<\333!$;Q?\352\274%J\231\274\354Y\376\274\303\211\223\274\220\004\013\275\370s\220\274\326j)\274wzD\275\236\031G=\244\277-\275R\274O=\226k \275\314\3561=?wL=\034\373B=/J\303\271\265\2442=\311m\350\274\340\363\362<\321\033\010=zTR\275\276\315,\275u\211\261\274\373yI<\203\026\245<\271\300\332;\375\001\203\274\256wO\275N\271E=\243\252\341\274\245\001B=;ID=w\2764=\342\013\t=w\226\'\275\275\321,\275^\"#\274\002\246;\275\242z\207<2\010S=\207x=<If\244<\247BP:Z\3339\275:\314\260\274\211\322\350\274p\242\022\274\257X(\275R\251#\275\332bM\275\315\212\227<&*\276<}\335\024\2758\327,<\272\017\002=\222\000\366<\254\240N\275\365\t\244<2\257\030\275Ew\216;\266\317\211\274j\nV=\203:\232;\001\202\244<\203\320\003\275@\322\276<r\372\230\272~\256\000\2753\200\366\274\376\232\345\274\352\232\214\274\021Cs<\033\306\n;d\0344\2751\031 =\224d\354<NmM=U\n)=\360\311E\275\017\020\232<\253\321_<\354\217\247<\263\t\022=\232Y\004\275\365\266\222<\263\377\303\273\200_\377<\325/K=\013\2444\275\205\216\001\2751\020\364\274\003Wq;hG\237\274\247\352\032\275\1774\311<?4\350<\030\373W\274\247\202\020\275\005\326S<7\316\026\275\3174\317\274k4\356\274\216\331\244<\255\372\310\274[\344\013=\"\342U\275\347\306N=\t\312\014\275O\241\372\274o\245J\272\032\363@\275\026\264T\275\326\201I\275\234\212\315;\030\341E\275\241\333\221\274\324\317\006\275\024\3232=:\013,=JGg<\363\332$=\300|\005=W\357\376<?\241\003\2751\373\t=\321\263U=\030\314\'=f\3734=c5\001\275*\317\222<\233\333\213<\315\027!=\014\244\251<\33279\274y)\021=%\005J<\350\2353=Ej\237;\300]\020=#\025h<\337+\353;\360\305\257\274 \031\331\274q\223\'=Vdx\273\315\302H=\001\312/=\007\264\006\275\310)\233\274\243\033\213\273\001\364?=\024Z\324<\216\202\024\275X\301\325\274\313\3440\275\222\304F;\326\005\217<\327\353\206;\353\020h\274\254\372=\275\203\337\371\273\\?8=\310\224\033<>\266\014<\017\250\030\275/\202)=~\016\227\274_rQ=Z[\013\274\343\315\211\274\025B\003=\":P=G\275*\275CW\346\2736\024\324<\017\013?=\354^\344<\333\373\327<gEA\275\017\310\343:l\326R=}\006\231<3{\027=5\246.=B\336\020=\0177!=&Q\322\274\241V\005\275\204\233\025;\014Zp<T\325#=\376z\266\267\320\315\272\274\205h\214\274\263\245\365<\321>\213<\353si\274WFU<\035G\006=\364w<=\3568\032=\350*T=HYI\275I\303\267\2739\244\261\274\210\301\023\275e(\333:\323=K=t\013\035\275\201\3060=\365K\377\274\3277\025\275\375/}\272\341\214\271<\216\215\374\274\275\013%<\330fU<\337\0069\275\026\363\201<U\273\007= # =p\211\364\274_\037\334;\353\343\006\275\031\"\371<\246/\033=\033\312G=\223\001\"\275\3374\023;\245\364B\274\\3e\274\247\251\241\274\200\211+\275\307t#<\276\204\270\272o\205\227<\215(\n<c\222\322\273\363yL\275\034\351?\275_r\205<\213\263\250:d\257\313\271\315\365A=MA\006=\037|\363\274\315JM\274\232\273%\275L[\210<\245\372\204<\205\223\030\275\251\346P\274B\026z<6\027\006\275UB\033=\235Y\013\274Ej\342<\tJL<g\303^\274\031\312A\275~9\275;Q\352\262\274\244b\205\2732\345\037\275\230)9\275Pi\0329\250\3549=u\372\027<L\341\234<\017m\030\275\376\027\313;\302\272\032=\223\361I<\251\n\247\274\325\331\246\274)C2=X~W\275\231QH\275\200\006\361\274/\361-\275\332\205+\274\273\253>=\313\351\254<\031\323\343\274Q\306V\274\220*\013\275f\t\354\273}V\211<V\227\254\274ezK=\001\317!=>&4=\262\207\034=\315^\022<VM\300<\367\370\202\274lQ\235<O\027D=AU\213\274A\333\360\274\3265\277\273\035>\031\275\260\331\322<\323y\376<\"\210\007=\213\334\005\275\274h\316<\316SF=\342\000)<\nv\340<\306~<=\310~\312<\277\221\272\274\361!G\275\"V\020\275\0300\035\275\360\t\002=\313[\326<\000R}\274\353F-\275\324\326\200<\020\n\211<\214N/=\'\361\341<K\216\353<\350\354$\275\371\t\366<\216\030\332<KMU\275+\001\205<V\311\026\275\300\010\370<\333\021\211\274\210\244E\2741\257\016\274\225\336\230<\r\350\237;\307\260\r\274\212\355\260\274\343RN=\332\257\315\274b\315P=\246<\345<\031\021\360\274\246\307\224<\200J\336<\017\233\371\274bnH\275\256Rj;Q.0=z\342<\275\370VB\275So\035=R\345;=CB\304\274\330\r\327<\\\365\270;\200\235\032=\273R\022\275E)\263\274\317l\256:\241>\215;\376\260)\275c\205\010\275c k<\361\234D\2756F\020\274c\350\037=\256\221\036=m\263\010\275f\216\233\274h\205\031=\245K\214\274g&J\272^\273q<\225l@=\022\020\t=\027\017^<xSV=\371\r\260<\234\301,\275\3624\030;\367\357\206<\353\001\310\274\353\273%\275\256\266\037\270\233\344S\275\312\334\232\274b\300\000\273\202\217\324<\325\\\312;Xk\r=\237\2010\275\023\264+\275\275F\271\274\037X\036<\350\t6\274E8>\275i\263\302\272&\336\251\274hO\227<)%\007\275\222\227Z\273\260\247(\275\032\'\000\272v-\262;T\031\246<a\260\215<0\237\"\274\301\232\306\274\361NB\2759\253C=\271,\367\274\252Q\371<\257\334\021=\332y\210\274\355\014\264\2738*\330<\227\366j\274\351\264\326<\r\240\203\274M\2616;\200>=\274m7F\275\205\244N=\306FR=14\375<\314\243\n<\350\360\002\275L\277\257<\001$\033\275\253*\006=\246\331\353<\035]\212\274\031\257\213;\363\371*=\221\264\320\272\377\317\352<\370GH\275\256\023\021\274\264Z\371<\273\206!<\254\212\211\274\267Y\"\275,\262\346\274\272\274\037<\302\256\267\274\336\014\366<u\n;;R\035\240<c\002\320\274\001\002\224\274X;\024=\177NF<\235s\301<@e\246\273\371\200\360\2742\300n\274\210\275\251\272\026\216-\275\013g\263<o6\027=\251\374>\275i!,\274\231\345O\275J\221:\275\300\342k;L\220\304\274]\031\261:\230\016\236<\267\216\033=\262\2179=\027\337\232\273\010]L=\261\360\227<\214\317e\274\307\256O<\214\336a\274uu!=O\351\t=\374\341:<DE\307\274y\230\356\274\007\3225=\365n\006\273,\271T\274\336-D\274\227Q\026\275u\346N\275P\272:=m\314\017=\2106!\275\334\351\356<\266O\345\274\001\023Z\274R\366\"\274\204\tF\275`D\346\274\232\317H;\343n\250\274\202V7\274i\211L<\211\321,;H\346\t\275-\225\'\275\034S\013\275\243\236-=%\222\223\272\311z?=\346\023\t\275#\'0=\313\372\225\274\232\256\364;\250\0033\275\257\307\010\275\002\206\274<\371^A=,N\035=^\342\210\274I\231e<\207\254(=]\215?<\004\017\215\274\225\232\023\275\tY;\275\377\315\261\272A\351+<\023V>=\315\264\276\273\226\225<\275JeM\275\277>(=7\271\307<Q\365Q=\344\333*<\305\224y\274\265>\362\272;\025\260< \005<;\322Fx\273\007\033;\275e\314\300\274SA\367\274.\221\205<GE;\275M\340\217\274R\032+=AJ<=s\222\\\274+B\274\274\344\322\271\273<c\247\273\201\321K=?\n2=\256BC\274\344y\267<\3732\262<\036v\373<nO\020=\266\324\304\274\'\217\270\274^\002E=\266#\024\274\034\317+\274\005`\317;\354-\024\274\016s\014\274>\251\216<\264\037\336\274\315\242\377;\330\360\261<Q\205C<\267\220\336\274\022\'\306<Rg\013\275\331a\036\275\010\235H=Z~\315\273\257\372-\275\263\3248=>\377\207;\001\301P\275\010\342\323\274t\002(=\240B\261:\345tM=\274\367\337\274\253N\035=\365\013@=\246\202\005=\336-\032=}\312+=@\256\021\275D\014X=\300W\233<\335pN\274u\247&=r\364,=\236~L\275)u\324;\031\377\347<\240\3666\275r\225\021\275\016\330\005\274z\307$\275\2117\321<\212+L\275\203\206q;t\371\025\275\227\024\372\273R\216\300;\212\003\004={\032\254\274tR\233\274W~J<\251\361A\275\203\315\261\274\341\310\"=\330?\010\274\017\213y;\246)\316<\360\353\353<\022E\275<V\225\206\274\250\234\202<\337\021\211\274h\213\245<4\3575\275\305\260\270\274\207\311(=u\357\001=\366<U\275\361B4<\2765\335<{\371g\274J\317\001\274\314:\010=\370\315\250\274\235\367\263\274\315\223\033\275\rG\355\272\3169\004\275\275\236\203\274Q\001[\274y\216O<M\335\243\274\235\360\305:\247\n\007\275\272k\224\274\302\346\025=\376\032Y;\350\274N=D \361<6\3175=A\3020\2756\371W<\234\257\277:VI\026=4\272\330</\234\030=\215<\242\274\3038\026\274\023\005\237<\335\236\016=\030s\033\275\333\033*=\200W\037<\357L\021=\037N\266<\206\252\035\274\030\234\"\275N\306\233<\017}\264<\255\2778\275?|==,\036\264\274tN\373<\334\306M\275\246q\324;\013\362\272\273f\342\327<\213\267}\274\3700\005\275\270\023G\275\005\237\210<d\215J\275a%\t=Y\347\010=\005\220\344\274\262\242!=[\244\200<\352u)=\210\361==\367\221\022\275\317lB<\373\365\346\274\315^\370\274k\004\007=>\227=\275\236\3526=+\372\344<W~\257\273\337\260C\275\024}U=\216\213\003\275\376\245B\275\037[\357<\235/\314\274}\t\231<\177\362,\274z1N\275-)\206<#\207\'=`\2544\274Q\302\213\272a N\275^j3=\305:\270\273\315JF=\234\003\232<\033^.\275\262\375\245<\215[E\2751\211B\275\321\022\225\274\276\330\000\275S\327W=\016\003\255\274\370\336\333\272\035r\225\273\375\250\331\273\233@$\275X\244R=\003Q\222\274\t\267\323<v\347B<Y\336\014\275\027\250\207<\207\'\035=\356 D=S\222.\275k\016g:\330\rA=\326\005\347</\353\365<\016j\270<S\256\257\274y\321\242\273\213\203@\275"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2150
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2150
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2150
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2150
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2150
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
