node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2160
          }
        }
        tensor_content: "\214\376\373\274\320\r\363<\262F8<\332\265\204\274o\001%\274\036\246\272\273\206\211\310<\2131\235\274\331\217\035\275\337\r\010=X\035P=4\263\335\274\241\272\004\274\256X\216\2734\324\202<Q_\010=#\221\226\274\253\337\024<Q\317)\275Z\251@=\324$?=1\2366=\260\245\017\275\260\235.=\206Se<`\020\257<\230\346\221\273\364\305\200\273vEb<\273IR\274\256\2454<\226\017\237\274\033\327%\275D\244\025=\023f\013\275\310Q\007=\225\267s\273\\\356?;\311\271J=\271d5\275\2339?\275\314Z\271\274:\310#=\033\307=\275\213g\225<\356\373\335<\001Z<=<\202\016=\314|E\275\205\374?=\350\003:\275w\213K;{\200\263<\n\313K\275(\306\371;\221}D=\231\240\275\274\031!6\275\266\271\322\274Z\204>\273//C<\337\020=\274=J\016\2730\336\203<\010\004\317\274\276\363\225<\250\375)=\352\322Z<\253\306\014\273\321lN=\204\205\272<\274\306\257<}\271\021\275(\323\302\274\377E/=q\335%=\356\005\022=\2715H;\307\313\322<I\245\014=\035\257\224\274\266\016\020\274\030^&=Y\246$=\335\272\031=\340\306\250:al\271\2741\237\014\275\324\0002=u\010|;\335Y\325<\314\231\003\273`\307\036;\262\201*\275\021\026\n\275-\237\023\275p\242,=\243\004\177\274\220b\265\274R[y<\n<\264\274\354\030\017=\273\223\255<\260X\242;\335\033W=-\313L\275\022#\336\274[K\002\272\033\0341=\245\341\021\275\314\254;=M\007\013\275\001\262=\275\254\372*\275\220\364=\275\346\375\337\274\3075\025=\346Yw;6\242[\274Hk\365<{?\240\274\242\310(\273\241\364\254<\234H\277\273\253\343\371;\311\254\331<|\0276\275\361\310;=\273\212\226\274D\"\r\275\377FF=\346\017\030\275O1z\2730\204\201<\341\250\305\274k\201\204<\244@\322<\234Q\364<\\`\210<yl\354\274\365t\242<:\244\315<\251,\316\274\217T%=g\223\027\275id\264\2736\305\235\274\202\272\020;V\0354\275\270\351\210\273\243j#<N\334\370\273\005\020J\275\032u\321<\214\321\243<\226>N\275\245c\301:\245\212\327\272\352\340\266\274gF\310<\220\377\223<Ny\246\2739`\'\273\022\327\236\274C\361.\275)\303\365<\007)\243\274o\020\272<\247\312\225\273F3\202\274\201\014J=I\3518\275\" 8=G\212q\272\023\254\337\273\276\316:\274\"B<\275\275cl;\241\203\272<\3552\204<D\005O=:\277\030=\260\275\016\275g\010\302:W\340\016=\322\034@\273UA}<\326\337?</)3=\263\0023\275\335\335\262\273_\274\000\274Jg!\275\321\241\"=\245\254\031;<\236\315<\271\2554=\336#(=l\234=<M6\002\275`L\024\275\222ml\274\2265\217<\245\210U;M\302\005\275\214\346&\275\007ME=\200\233\200\2740`@=];W:\022\320\314<\375(\213;\362\321I\275\305\253\312\274\243\214F\275\0326[\273\263\222\367\274.\235;=\207y\"\275\342\025\375<\224\327@=**\235\273C\010\226\274j\276\004\275y3\016=Z\314x\274\032\302\r<\223\226\005=\037\373\202\272\307\2138=\310o<=\314\205\220\274\253h\360\274/A&\275%\247\262<)\031\336\2740\022Y\274\371( \275\370\323\266<\365\310\214<\365\212\347<\223\313\233\272\250\230\334<\017\373 <\216sF\274\275\337\035=\336\332-\275\340\267\246<\362F\330<\213\201J<\332~\022=\'l\021=\210\010O\275\031U\317<\177#\302\2735t\306\274\311\2226\275\331\3272<:\3260\275\266@N<\266\217j<\264,]\274\360\242\203<\221\261\317\274\032U\320<\260v\330:\270g\"\275\211\337\361<_ \t<B3\205\274\016\210A=F\303<\275\010\253\264\274\275\212\027=~pT=:P\202<\003\032\356\274\317\221\026:UH.\274A\241\226<\311\223\304\274\273\300,=\367\345\331\274\000r7\275\303\3110\275!\031==\035\3123=XN3\2758\226*\275[\2563\274\363\3637\275\327\"|\273\320\231\274\274y\367\033\275U\002\023=)\353\025<\334\310\327\272\216\n\212\274\3568\373\274[\213J=\337\3400\275\246\210\n\275\310\006\206\274\366\353\024=\257\270\305;\003Rz\273\006\216\027=\251\347\006\275\235\021\270<sn\026\275t\177\314<\224\206U=\330\276\364\273\352\272{;\255*\260<b\376\211\274A\322T=\311\222\221<\033yS\275\204=\360<\371AR\275|4\354<\243J\347\274\244\373\010\275R\371>\275\232z\275<\2455\215\274</N=2b7=\257\3000=\276\246\370\2747\350\"\275\013\003\000\275ON\227<\312\271f\274\270\037M\274\240\013\260<\301\333E\275\275\223\010=\243W;\275A\306V=+\3314=\302\256\324<\375\301<\275\365\'\277<q\331\267\274z\376\342<\252\331\007=\377\201\003\275n\242\236\274\032\224\273<\036\313\375\270\3613.<i\026#\274\330R\355;\235\017\004\275\320|\036<\207\3454=`&\357<v9\010=\302\230\216:\214\211\205\272~\034\266<\206\362\023\275\223\220N=\311*\312<\227\211\007\274\324w\036\275\0376U=>\222D=\311\210\032=\322\0369\275f\324\271<L\221\355\274Hv\251\272I!\n\2755mv<A={\273\033j\327<\307\340\033\2753\231R=ru\016\275\272\322\233<\305\003S\274\317e<\273\302l\263<\320\375\267<\266\303\264\274u\030\361<\022\034==\267\351\006<\323@N=\214\230\237;\351Z\215;\211\257\371<\330\316(\274X91=\000,\343<B\252O=<]@:xc\001;\004\210\312\274H\332t\274\317\335[;\205\300\014\274\222\356\030\275\356\247\263\274\307`\r\273p\000\272:\r\022\365\274\005\211a\274\226B\227\273\355\\\030:\325\3274\275UU\340\273\'\332\006\275\n\035#\275CYe\274\207\003\024=\022\'\355<\362_\347<q\022\320\274\350\263\264\274\227(L=\217A\242<\310F\035=\212\0002=j\362\231:F\252\r<\221\205+=\311\304M=~\033\022=\250\tI\275\311\034\261\274\236\2060<\232\205\207\274\372\333\327\274\303ub<z\247\232;\205B\366<\006\"\017=\367\027\020\275\337I\2619\033n\223<\277\327@=\302DJ;. 3\275\376&\201<\004E\034\275)\232\310\273\351\352K=[\350\265\274\020\254\264\272\351\230\027\275\265\314\371\274\360)\016\275\356\003\316<\036o\337\273\364\336%=\302Y\024\275\240\232\034=\r\214!\273\226\307\204\274Q\375E<\245\335\t\2751[N\275\340\0263\275\303\226H\275\t\340\246\273_\270\007\275\366\307\002\275BM\237\274K\261I<\014B\336<\267E\022=(}\241<\021\223&\273\260\354\001\275\032b9;\006\375\006\275\275\320\254\273\241Q\023\275SX\266;\"2@<\376\303\215<\243\351\327\274\334\267\260<hX,=pO\316\273\357S\247<\303\372\356<dd0\275g\251@\274\233\0133=HE,\273\272\240\013\275Q\257\260\274\264\213\216\274\024J\354\274a\316\372\274-\277\256<\300\342C=\024\253\026=\264\237\275\274\256S@\274g\313==\271K&\275\353Y}\274h\020\352;g\257\033\275\364\225K=\366\002\256\274Q\346\273\274\327\020\256\272\016\306\312\2735\006\245\273\321}\207;_\202\005\275\217\007!\275y\":\275e<\265<\305\275z<\204\332B<dj\300;;\022\037=t\"I\275\246X\224\274\251r\252<\300\320X\274XZ\346;\347+\013\273[O\n\2746\246B\275\n\237\303\274\311o\320\273\351;\322<\263`h\274~\332\014=,ZV\275\035Q\025<:\2650<\003{\017=\355\240\202\274\326\344<<TB\234\274\270D4\275\255y\004\275v\363\022\275\310\342,<t \231<\322(\335\274\261\213\314<\204q7=\357\364I\275\306\2207;(\003V<\025zO<\343\316:=\263\322(\275 \007G=\221\260>\275\017\220p\274k\241\r\275\325IS\275\302\023\013<\234c\023\275wP5=\251\303\003\275\234\251\370\274\2478\022=\271+(\273F[8=K\243\342\274\022\205Q\2756\3205=\257lF\275hz\347<\331\352?\275\244\'\007<\315\0044\274\236\340\355<\305\240\004=\377\316\267\274\205p\013\275\304\373\n\2747\230\262<\00684\274\231\225\035<\010\346\312<i,\333<\210\235\025\275e\210h<9_\341;\250\t\214\272\331\307\257\274)7;\275\366\265\032\275\265J3\275F\341\000=\340\366|\274\201\257\350:\365\007\317\274\236\212\\;\362\215C=\006C\2149\010H;=\2371@\275I\024F\274\367\223\374\274\007\260\307\274{1L\275+\035\037=\0355\243\274\324O\034=\311*n\273C\3744=p\214h\274\3409\325<Xt\271\273\024\2323=\206\331!<W\375\356:|\350T<x#\007=E\037\033=\203*6=\241\350\216\274\220\213\210<\206*[\274\317g\020\275\010\023\261\274\234JJ=\024\036\025;\320\240I\275\023\226\345\273\236\207\371\274j\232\343\273*&\347\274\203\230\244<\367=\013\274\236b\212\272\240\324<\2755\001\255\274\321\035X<\022`&\275\246t6=\177\335\230<\317\245\200\272~\211F\275\027<\301\274\002\2275=\024\355?\275\223\235\\<!\352\340\274[\201\006\275\354}\037=\334?\316\273hT\303<\034\215V=\235\251J\275\220P\351;M\241\312\274c\344\356\274\246\362\310\272E\230\213\273l\215E\273fM\262\274g\036\346\274\030\001\003<>\013\017;B`\236;>yB=xJR\275\334\273\345<Ha\265<y\003?=$\360\365\274\314\336H\275a\344n\274\340\357\251\274\234-U\274\327\231R=\2712\325\274@\340*=\347a!=\315I)<\014\342:=&\222\271;\322\2141=!<i;\253b9=\242\t\001=v\030@\274\223?\230<]N\014=6\233\013\275O\347+\2758h%<\037\360\243<G\245u;34I\275\344i\034\275\374\261\232\274wL\210;S\307\227<\353\3372\275\033F\001\275\316\035\321<~cD\275sYb\274\244\275\270;6\260#=^\333C<@\227\376\274[g\204<\275\347K=\367k\022<\345\344\037=\322>\002\275\213\365/=\016\356\033<\0205(=\272\275\361\274\355\275D=\235E\351<\354\241\025\275\320]\353\274\217o\321;\351\221V;H\260\024=\251\377&\275\260B\032<\333\246,=\233^\"\275\326\261I\275D0\363\274S\312\002\274x\310=\275\n\354\020\275\305\315C\275\222\333\253;f\227\337;\314\350\271<9,\355<\262v!7-\177\311\273\247\017\024\275\354\216\"\275\211\373E\275X\355\375<\325\354\220\270\237|`;\235\225\236\274\013\0374\275\317\262\335\273S%\326\2747\005=\275<k\277\274\222t\013=\031Z\021\275@\005\374<\365>\236;\355Q\003=Vn\323<\350Y\300\274\274U\263<\374\3204=\323\252 \274~\305\247;\374W1=\330k0\275\225\201\256\274w\340M\275\347m\212<\241\202D=\216\243\203<\332&<\2755YP\275\333\231#<X\2544\275\"\3312=\355\357\264<\307\305\001=\361\213\000;!\3663\275\033A;<\022\034\251\274\020j\003\275T\332\016\275\205K\204<\302&\205<\272yZ<>\267\273<\222RE\275{7\332\273\2112\231\274\013\301\302<\013Rk\273\314\205#\275\252\360\037=\334|w<\315T\365\274\336\240M\272\240\232B<\301\215\216:u\3131\275h4\003=L<Q<\230\215g\274j\326M<#\250\263\274\243\3425\275\203\353F\275\246\346\203\274\200\231\270<ES,<\212\352`<L\r\035=\001x\031\275V\211\366\274\267\007\214\274\250\024\036\275\336\337\331\274g\372\021<\030\225\000=\247\243\357<\352=G\275\252\375\036\275\315\003\034\273\233\037F\275\360\007\250\274\014!\t<\233;\030:\256m\242\274\001\214\032<\221\230R\274,\232\037\275\244\370\201\273}K\n\275\316\325\274\274O\232\307\274n\303\353\272W\324\365<\261\257,\274\014\274J=\235\276A=\025\246\332<\221=\025\275\022m-=\273\251\235;\376\3635=3Y\025\274=\347\023=}\027\334\273i`\363\274\304\310\301\274\236o\003\2753\347p\273\224\026<\275\212g\023=6U\033=\307\266\247<(\3747;GH\016\2752\027Q\274\200d\314<1\370\301\274\2626\024:L\376,<\251\321D=\217\326u\274\204\303\033\2751\223S\275\356\004F\274\205\2070\2750\2610=\227v\234\2738\305I=\341\321-=\033\200G\275\016$\272<0\300(<7\204\352\274\245\231\260\274\332\334:\275\031\0058\275s\016\336<,\367\006\275\271\246\001=fm?\275\203\327\000\275\307w\272\274\240\360/<+x\327\274W\246\347\273$wk\274n&J\2758R\325<\027\3350=\302\237\216\272\230\234\222<\345f)\275\335dc\274\005\026\t<\357\020\237<.H*=o \021\275V\275\316: \005\302\273\332-}\274R\334\350\274G\034\035\275\305P\212<T,\035<\314\261==eW\016=\330s\366;\0043u;\265\177\302\2746\212d\273 \301\371:\236\001\026<\370\362<\275\037\275\010\275\300\001G=\353`\363\274\267\014\034\274\242J5=\335\021\205<TTB=_\"O\275\245&J\274\255\225]\271\\\013\272<\311\376~<\362>\234\274\260}\"\274!\207u\274\271.;\274\355\2706\275\r)\010<H\234U\275\r#\244:\n^&=\324\356\335< \334^\274\'\223\332<0$\342<\307\311\376\274Z\341\037=\021\253\246\274\033\231i\2743\217/<n\364A=Y\213B\275\233\225Q=\037=\372\273\244\027A=\376\213\230<\021\304L=\233\265\002=\034\204\000=\373ZB\274\"2\016=-\002\027=\361^\360\274]\003;\275_\351\323<\020\020D\275\367\nU<t\254\345\274\034\200\346\274Hb\005\2758*\031\275\322\342\211\274\331g\030\275\226\264\033=(\025\312\267\337n\025=\232\333\317<\201\372\362\274\n\177\230<?\354\327\273\346\263!=6\377\022:G\261E<n\330V=\004\264V=\007\302\217\274\363U@=\301\277M\275\216n\364<\320\224\346\274\026N4<\230\302\330\273\037@+\275\202\267V=!\260\201<\232\230V=\n\227(=\034\313\341\274\373\327(\274\307\035\326\274pv@\274W,1\275\224e;\2758\277\357<\303\243\030\275\231|\\:B\366T=\203\000?<e\213%=XG\246;\233\333\240\274\rGF\271\266\203,=X\263\030\275^\310\035=3>.\275\004v\233<\245\262\020\273\246?7=\334UO<ow*\275\207\242\357<!Z|\273\2626<\275\270\345Y\274\t\313\230<:\2214\274\316 \247\274\303(\010\275 \\\312\273{T\246<f\205\215\273\264iO\275~\214H\275\275(M\275\267\017\265<>\2242=\201\244\003\275ZY\003=j\241\346<v}T=\340\276\232\272\363\215\377<\354\225\030\275B\237\001<\016\266J\275t\002\270\274\336\237\t=L\242 <=\205O=\203V\013=n\241\272<\201\372N\274n\033P\274R\306k<^&\360\273\213\363\322<iE\235\274L\233\266\274\321Ig\274\345Z*=~\001\026\275\033\370\017=\322\343\372<\303\031Q\275|\222\370<\356\002t\273\246\2730=\206\270\r<,\247\003\275\005l\206\2743\223\016=[(\n\275\t\3409=\317\014\036=\310\201V\275PL\343<f\206\323\2748\271F=\336@\375\274_\330\330<\342\335\354\273\031\220\025=3p\033=uD\201<N\235U=\324\2033\275\033A\356\274\005q}<\321\206\346\2741*\314\274\027\214\025\2751\273\013=\027-\306;\314\252P\275\222\377\345<\252F;\275\260\360\'=\3549A<0D(\275\350\"\266\274_\000\232\274\002\347\360<\356\214\030=%Ra\274\333\347j:\033$W\273*\tN\274\315\264\325<\236\025z<)p\312<\211\340\343\274\322\223\001\275\027\245\r=I\005\220;\351\323\"\275\235\343C=^\021A=G{E\275\2364\024<e\311L\275\225y\337\274@\253\n\275\2114A\275\024k\312\274\211 \246<A\366v\274\251 \353\274JC\r=!:*=EB\325\274\004\013\223\274i\304^\274\016ON;\004\254D\275\217\022?<\020\216^\274\n\333<\2752:\032\273\240O5=Y\311\000=\034`\000\275y\\\245<\270\243$\275\233\3364=\006O\"\275\362p\013\275\215)\204\273\354\325\337\274\330\360,\275NC\254\273\010\016\001=O\322\237<\247\246\031\272\276fS=\006\007\021\275\027\365+\275\035\303\360\274x\364\010\275ih\235<N\313\004=\342\334\251\274e\226\212\274L\355\201<\247,\327\274\213N\257<\217\231\314\270r\300\001<l\337\314<\271\357\231<%\206\037=\0356v\2742\2343=\346\3559\275r\213G\275\r4\211<H\370\371\272\260_Q=\316\201(=\223\261\026\275)o=<g\307Q<\343^,\275!\232\026\274H\345\'\274\016\277P\275N\024\002\275\300\014\026\274m\355\010\2757\317\350;uFO\275\354\2641=\375o\376<5\325\315\274?>\346<i\336Q\274\373\2645\275\374\035\000=}pF\275\311\205\017\275bR\007=\014u\260<\031\311)=\227\315\257<\343S\300<\027\323\013<&w\001\275\241\341\345</\245\035<\254\310\374\274y\335\275\274\r\250\346\274\355\'9=\340\340i<8\216\276\274\351/\362\274V|F\275I\3427<>\2756=\206\326\344;\005\213\240<\303\275\241<A~ \275\322B\002\275){\033\274\273[\r=\322p\304;\202\272\366<\216n*;\323\371S\274uv?<\214\006\004=\007\246\006=\367\362\273<\217\217c:\014V\266<s}\217<\257\330@=\331\307\013\275\026g6<V\3772\275\023\201\330<\220\3323\2750\031\341\274;r?\275\242#\026\275&\3260=\372\221\214\274\303\255A\275x\344\356<\263\315\303<B13\274\223\237\034=\253\022\265<\303\234\024<\265\256\326<\303\344\n<\007T\020\275P\273\355\273\030\235.\275\027\017\251\274~\007/\274\304\200\234<~o\217\273<\335\226\273\023r==\264LO\275l&\251\274;\367\207<\364\252\031\274K\317b\2741\363A\274\003\347/=\345\"0\275\200\000\n\275\343R7=\033c\020\275V\3254\275\006\020\273\273+\220J\275\234\261\260<\313\206\004\275\263\356\031=\225_\234;h\270K=\372W\016\274\351\3315\275..\221\274\257 \227\272~\363\000=ygB\275\230#\t\275\036uX\274\355Rb<\0038\017=\365@\005\275\264\335\000=\001\314\246\274\251\204\032=Q\225{\274\361\247\\\274\317k\222\274\227\026\256\2748N\233\274\301\000\375;\tI\r=\223\376\006\275\224\026U\275f\214&\275\370\241\373<\004\270!<\330y\202\274\201\360\013=j4\352\274\332\302W\274\353\320\357<\356\243\"\275\215e\"=\006\024\023=\215\360\330<\013\257\022=T\300$\275\'\212\245\274O}y\274\265\321\214\272\320\274\336;\034\\N:\2541\274\274\371\020\273\274P\325\203<\235g6\275\340\203Y\274\315Q`\273\214\270#\275\201\321U=x\331\037\272Y\367\001=\036v:=\227\340+\274\240\354\246<\026\362\226\274!s\242<t\350\006\275\266\360\025\274^\000\022\273U\rM\275M5\353;NzD=H\271\243;\221_\030=\247\325%=\321\033a\274\366u\031\274\017\314\266\274\212\007Y<\336\202_\272\276\025\n=\031\273f<\305\241\007;U\316\302:\263\331T\275\013U\233<D4\037=\267\346\260<\234\255\266< o\277\274T\364\341<#\0060=\332\305\213<\240y\344<3\256):\232\252\373<\013D\033=\267q\213\274g\224-\2752I3<jnV=bz\233<\202:\260\274\226\232j<\250\220O<~\376U=C^\360\274\342\242B\275\246XD\273\350\002\374\274^\001\253\274\206\304\263\274\321\0261\273v\215c\274I\360J=my\372<\352\247.=\270B\234; \362O\274\373\353\372<\0313\225\274~6 =\243\004\n\275\001\322\013=r\271\031\273\364\215\302\274\215r5\275\027\222!=Qa9=BL\376\274\312Q\224\274\n\037\205<\236)?\275\177uC=\r\220\035=\264\002l<[K\322\274d\254\007=9Q\311<J\311\024=Z\306)=\320\365\034\274\205\344\247\274\251b\016\274oy==\254k\001<\351\\\032\275/\000E\275\003\213*\275j\344|\274\\\313@\275\220\336;\275}.\272\274s\371;=gs2=b\331\200\273\204\373/\273r\032\207;\221e\255\273\330\244\312\274\':\307<8\364w<\264\206V\275\351\002\321\273U\270I=\322\034N=\361\320\236<\'\3357=RsR=\320\026\014=T\177S=\2613R=\364\217B\2753W\271\274\3551m;O\2625=8\333\005\275\365U\377\274r5\010<R>\216\274c\264\324\274\014\035\310;2\205\214\274w\302\307<\337\255\023:\006\312\340<\233\3005\274\203\2213=\375\006\007\275F\315Q\275\200\035H;\227\235C\275\242\177@\275\024#\242<}\330A=Q\342B=\214\030H\275_\267\034=3\177\223\273`GL=\021\366v<\247(\n\274\n\033\033<q\374\037\275\313\270T=1\245==t\376B=\224tk\274\210\316(\275R\233 =\257\253G<\177j\341;8w\203<N\345\341\274\005\373;\273W\023H=i\246\373<S\032\020<g\271-=\261\262\354\274\210\376z<|\2355=f\227S\275\033\313G;\315>\000<\316\020\325\274h\005\266\274\242O<\275\367\002\256;}T\t\275$\324\364<\225\225\241;)\303\030=\323\226\036\274\\\267\036<1\232X;b\0329\275\004\367\027<tYK\275=]\261<\216\017|</\024*\275\245\336N\274\211\265\237<_\001\335<\301\302M\274\250\007\"<o8\302\2745\347V\275\315_d\274\202\331N=\242%\035=\301\327\334<\247\201\204<l\244\230<\265\326\303<\337\006\204\274\324:%\274t\274$\275-CE=0\366\r\273\317(\336\274\177\203\t=F\224\251<IE\365\274\343`\010=\305\214\020\275\260\355\032\274\313u\211:\"J\000=\345\250(\275{G6\275)\314\201\274;\350\254\272\263\rW=\275\216\254\273\034\017U=\017\250\227<\343\254\277<\361V];@q\254\272\205\377\344\274FjM\275\271\262\372:a\206@\2742\220\375<\347v4\2743\311\366;\31204\275\221PJ=\033\266>;G5\006=\223\360\262\274\226\307\261<\267\211\252\274\227\354U=X?1\275\301\205\306<\223\240\274\273\202\"\345\273\036^\007=d7c;\323\0346\275\362]\226;ns/\275\307\332*\275c\234\251\2736\002\371<c\021\311\274z;X\274\010O\224\274B\302\255\274\263\037\266<\343\313|<h{\303\273E.B\275\342\351,\275\222 \253\272\237\370\\<\026\374\321\273\332-X\274=<W=\023\317\031\275\346k<\275G\345 =\024\031?=P\236\037=\234\016\262\274q?\377\274\204S\276<\036\261U\275\243L\023<T\235q\274\301\305#\273yoH=L\215\371\273\235\355\007\275_\237\342<W\007#\275k\303I\275!\272\265\274\261\260I\275\234\230D\275\301J\305\274\205\320o\274Y\217+\275Q\204\356\274u9\"=\250\230\206<|\277:\275\243\314\004;\037\247\325\274<\201K=|\374\205<I8d\273\010P\345<\210\2133=\315\307\375<\275\030\212<\264B\\\274\000\275b\274\215C\320\273\274\202L\274\006\032\317<,\265m<\315\337%=\212l\034=\005\027\302\274\367\242\223\274-\216\016<\323\206>=\347\2362=\340\014e\274>Y\323\274\326\007\231<$V\316<\272I\366\274\271+Q\2759K\366:J\005A\2755\016\225<\000\207\036=\224\005\266\274\265L,=\333\357\004\275K\315L\275yZ\305\274\344\256\351<\262\310\037;\266\262\270<\307+\211\274vY\247\274\261^\365;bM2=\0234\002=\233e\016=l\240\254<f{Q=\231\352\362<\321#\371<\0325*\2737%\236\274\010\375\004\275`\275#=l\202m\274\t\200\302<\274S\024\274\030\272\233\273V4U=&O&\275L\374\003\273P\2214=\353\230R\275D\223\261<}\302\256\274\203\003\005=\351\366\022=\t\014L\275qG\211\274\277$\242<\243|$=5\370\n=\306\214\223<\336\036\036=\000\025\210:\034\273Z<\322\370\010\274\371B\311;}0#\275\365M\271<q\027\343\274\201 \r<\\K9<X\244\332\273{\273\243<\334\311\306\274\252\021P\275\345\244\371\274 \013\324\274\273\303$<\017\343\031\274\256\300\231\274\266f\315<\267\000\r\275\362\223\037=0MW=\313\217\004=\220\005P\275\211\370A\275\233\235)=\260\211:\274\343\3212=G\001b\274\2517\010\274\014\342\n\275\033\207G=\266\353\034=\251\262\377\273\351k\271\274\207/6<\346\275\023=J\240\340<\372P\005;\356\274,\275\355\216\363\274\200\031\315<\014\347\330<]2/\275>!\317<\017N\006=\273\225\177\274W6M< 4;=$\251\034=g5Z\274\317\371;\274\213tN<*+\007=\246\020\200\274\217(E\274\t\217I=\035\2537\275\361v?\275\213\355\230\274\362\216\217\273\334\213Q<\337\370K=Z3\300<\t:\322<A\304\223\274\277\302/\275\020\300\005<^.\217:%\334\020\274h6#\275\026B+\275\355J-<\202\0309\275\301\354\002\274U\300@=\375\262\n\275\004\024\007=\261MD<\313\231\311<AU\271<!\377\272\2748\250[\274\202\313\316\271\272\036\202<\002\331\313\274\236\253\023=\341\277>\275\324Y\364<\221\262\004=\002\0176=F\027\362\274\023t\232;\034\331\354\273\247\317\227<]7\023=Dp\020=\362dK<r\334C=^\373\014\274\177\253u\274FzS=\363j[<\335\331\037\275O\244\200\274>=Q=\301\232\231\274\222N\324<\026\336%<\237<\"\275\335\273-=\256w\036=\373\000\262\274\242\\E=Y\272\273<:OO\275\252\033\345<w\253\335\274\347\320D=>\364\333\272\273z;\274vB\340<\022\2320\275_\222\237<\010\374*=\017\303/=\273\220\255\274zf\257\274\027\255\202\274\230m\341<\'`J\275\210\220\022=\270\r\326<\210\204\316\274\220\001\234<:sP;u\033+=:\'I=\333t,\275\364. \275z\035D\273C~B=GU\326<\312)\013\275\211\266s\274`;\005=\353x\215\274\331!\226\274A\204Q\275Ne.\275\276\2608\274\376\205,=\220i\006=\340\263v< BQ\273\247:G\275{C\253\274u\210\3419\307\366\247<\220\344\256;j\217G\275Q\257\034=\346\255\"<\257$\226<\227~\347<_RW\274\200\227\023=\272x\002\274\246|\353<\013\353M\275\013\244\266<\034\2570\275\331\240\321;\376\216\3577\345\r\300<\263;\240<{X\336<\236bJ=\016F\331;BWJ<a\326V\275\251\201\'=l\315\272;h\3044\275}\265T\274\005P&=\003\031I<|\357R=\221\264\213\274\027k\205\274\230\373\035=nw\356;\233\021\306\274\024\327\273;sj0\274\022\016\337\274\323s\307\273@\003\005\275\263\330I=\250(\330<s\202\027=\337bJ=\177\337|\274\240\313\014\275-<\227<\330\215\321<\354&\255<^\267\031\275\227Z\251\274\331\243\032=\275\024z<\364,N=\3679\014=\214\201\347\274O\266P\275\026\024\324\274\354\232\331<\024g\361;B\303\000=\236\315\324<\332\377:=\014T\307\273\034\335\306<\304\024K\275\022\\\035\275\226O\203\274\332\272Q<\3173\021\275\257_/\275\234\333q\274%\365\202<\023\313Q\274\307.Y<\313.0\275\342q\030\2750\335\213\274o-\274\274\326\017|\273\303\244\345<F\033\005=\n\216\031\275\277\337\270\274Te\026=I\357\237<\262\351R\275/\355\235<\313\310\242\273\001\240\347<qM\355;\214\305N\274\324\206n;\245\315>\275?\233,<\272S\024\274\331\274\277<e#\373\274\320\317\000:\341KQ=\024z\370<fu\343<\n\027\266\272uc;=\353v\335\271\352K\275\274\014)\006=\037\352{\274\233\036\'<\213\210\023;\024\3600<8\267\343<\235\001\031\2755P\014\275\003\tC=\213\233S\275\314\344\255<\365\325\'<\002\277t\274\274\n\365;m\017\027=\314\262\324<\343[>={\327\314<\255\211L=\300\254\321\274\246\2555\2756=?=\237\366\035\275\276\3052\275\001q\360\274;\322\205\274E\326\261<\312;\270<OL,\275\201\260\234\274it\025\275:\275\002\274\231\373\334<%&\304<\223\260L\274u\346-\273\223\364\330\274\307\016\220\274\306\n\263<X~?:\220\n\225;\311P0\275\014\016\263;\350\337\367\272\016O\014=\020\337\215<o\222\003=\356\010b<\354\025%=\263\316\335\274\n<\373\274e1\n\2750\351Y\273r\243m\274}\341&=K\2754<\242\026\354<`\t\n\275\312\220\270\274\247\271z:\034i\005\275\375\261\373;\017\322\360<x/H\275\201\377q\274\363aB=G\3552\275N!\020\275\326v\226\274\373fE=:B>=\024\246I\273\306D2=\305\265\214\273\333\361\277\274!\210\r\273pt\366\274|\000\t=\231\303V=}\344\354<\002\312\357<M\236\253<\356\254\270<F\346\251\273>=\371<\227K\335<\303\221I=L!%=\035S\254\271\360\025W\275\022P\023=L\030<;3\342\220<|\330\365<\202&\361<\243{C=\020F6\275Cs\221\274\222s\006=\372\361$\275\371>F=\331\037.\274\375\316\022<p\n\031\275Ma\234<\346\242]\273\355\2429=$\027\302\274\023x\001\275\"#&=i\304\004<n\004\323\274)\332\357\273\270\210[<\216C9\275\020s\243<\317S\330\2741\014j\274)\267*\275\240,\021\275\240\2025\275V\344\375\274\325\342\020=b\211\377\274\207\321`\274\212\006?\275\224^\206\274\351\2211\275\023>\275;\363y\331\274\304@\252\2747\247\013\275\377\332R<F\353z\274wI6=\355\257Q=\302\330:\274)!\377\273\371\305\023<W\027E=\014\335U=\372;:\274\274n\346<\307\246\375\274\037\024\224<\2338\203;W\234\336\274\354\307 =\355\212N<\341D\026=\227\252D<\216\317@\275~P\241\273\257&\377\274\232\210\327:4\346#\275\2366U<b\357\026\274\331\343)\275\345\367\273<\036\234\227<R\342\027\275\234\020\212<\214M\257<\207 \237<m[\036\275$\001\034;;Q\262<B\253\270\274\026\245\276<\345\273\003=*o/=\244Q\"<\201\034\202\274)N\t=\244\217\006\273\265\350\r\273IC\205\274\'\201\032<J\332\002\274\\\3727=a_\333\274\232\324\260\274C \'\275\000\330\023\275\371x\307\273f\022\356\274\235\024\216<-1 \275\010\213\024\275\306\376\350<t\376I\273\341\316\305<\\\310\232\274ns\366\274o<\001=(\004\205<\244\241*\275\260M\331;\342\263\216<f\327\304\272S]\261\2744\367\304\273\331\031\004\275 \375\005\274\246u4==.\031<\260\255\237<\252\233\310\274mF\324;.Z\226\274\272AF=\002\222\n\275I\336\024<\007\361C:?\272>\275eAD=a_P\274\276hH\275\253e@\274\341C\343\274\010\021g;\375\263\273\274R\007\374<\224O\r\275\341\307\374<\313\251+9w\223\252<\351Z\034\274,O\227\273\006\035\251:\002\216\274\274\352%\r<\333?`\274=\326@\275u^\037\275b\3166=WxE<O\343\322<\305\242\017<E\211\275<\332#\253\274\025#\254;\350Z\027\275\245^\037\273j\013/=\224\320\203\273\251*Y<7Tc\274\270\344\356\273\335\334\352<\237\342\365\273\200\232\365\274\256\223\236<\211VD\275\3501P=p\317\333\274o\374\006<Sk\361\273\350hQ<D\010\000<\025r\231\273=\375\031\274\350\030\345\274m\231\010\274\205|\014\272P\356\274\274UW\312\274\223\273I=\357\033\226\274\027\222\373<LP\317\274\311\031\263\274\336\277\216<\222\266u<\266vR\275\223\305R=\250\366\303\274tc-\275?5,\275\235\302N\275z\241s\273\337\017*<j\326N=\244\214\235<_\225\004=\r4\266\274\200z\376:X\365\005\275\314>1\275\367\237D\273n\340E=\037ZW=\300\nP\275)\215\271\2746\203}\274\363\225\r\275u\203\351\274\206:(\272\370hR\275\261OH=\027\256\350<7\235\027;\347\322\345\2746\000I\274d\336\267\274*\231A=\253\230 \275\353\360\300\274=\362\242<\177\236\256<`\022\220\273\365\010\321\273\226\372\265\273\003\302\020\2759\0166=6\341\036\275\352X\204<\302\323v\2741\027\'=\234e&=\2771\261\273}!i<\023\273\211<\317q\204\274\203\336P= \027\253<\317\215+\274\302/\030\275\320\354M=\220o?=\224\361\377<R\345\212\274_f\016\275\352T\334\274\217\017\355\274}\373\357\273\3418\230<\346\334\360\274\001\347\316<\260\362\270\274m\350\007;\325&\207\274A\014\212\274o\275\225<\275\322?=\225\241\275\274\303.\300<\267\362P= \206(\274\230\270\023=\3310t;D\231\027=\276V*=\273\274S=o\261L=\221B,\275\016\022/\274_R\223<\350\212H=1\326\262;\201\255\354<\301\276\200;cYR=\032\315\036;\346\300?\275S\347\013\275$\004+\274lT\315\274\201\235\240\274\353\0130=\006\233\035=\250%F=\035\372I=3\272$\2754\036\313<\332\3271\275p?N=[\307\370\274,\035!=\2215:\275\377\335)\274\312\242\025\275R\022\215<\200\"<=\241\314\030=\215j\200\274\034\314\271;\004\366\037\273\363\271L=\310\305\025=-3U=\326\3466\274n\247\021\275\210\371!=\350\334\315\274\031~\316<\361\304\370\273J\013\n\275}\222\361<\354\312\370\273\226k\024=\362\240\263\274\277\343\026=\016\031\r=\366A\350<\332)\267\274\235VM\275\\y\004=\301\346\330\274v\370\273\274&g\244<b\365J<\246\303\213\274n0T=\022\013E=\267/\026:R&\"\275k\021\312\274pML<x\324@=G\336\241\274R:\300\274x\346\025=\206\271\262<\177z\321\272L\n$=\207\257\212\274i\260\314<\364\223&\275\300\361F=\271\277\177\273\310\025j<\033\204\013\275\342\242\036\275D\2013=\306\214\006\275\356\312\241\273\210k\027\274r\361\005=\275A\034\274D\267\214\274\262\007,\274\031\230,=\374\376\024;\t\351\256;\237\331W\274\037\252\364;\244E\025<\321\030b\274GnH\273\226)<;K)\2709\030\360\320\274\312&\226\274\375w\266<\r#\025<8h[\274ng\321<J\242\'<\236:\353\274\016\"/\275\363\333\371<\263W\203<\227)3=X\222F=\243\353>\275$#K=v\017\372<\3600#\274@\277K\275\312\335\254\273<\315:\275\251x<\275z ?\275\266\rR;\'e\345<\\\347N\275\354\3235\275u\366!\275\277\240%=f\322O<4\026\250<\224=1=8sM=\345\214\007=\255\0023\275\315mx<\245D\212\273\222\343\303\274$\371#=Q\223\364\274>\354\034\275\212y\261;\013\341\037=B\374\026=P&A\275Kn^\274\366\306\344:\206\372\335\274\342\303C\275\262\277\360;\261\343I=\320\247$\2758W*\275q&\330<\357\350\256\273(\2236\2755\3003=\376P\212\274n\3704\275\362\213=\274\034\200\r=m\341\360<O\343\031\275\027XK<\227u\271\271Vg?=\006l\366\274\2507\256<\344D7\274\214\317\267<(\330\000=\025\016;<\027\026\362<\301\332\010=)]g\274h\006\023=r\335\030=/P\316:(d\001=w\026\364\274\3730\355<\007\230\321<\315\230E<\025\014\211\273\261\353\235\274,c|\274\206\n\336\271\272\251\017=\315\241\261\274\261\323\022\275\277\273B<Ij\006\275\366\017\244\273\033\023(\274\311A\207<G\373\325\274\372\241\356\273\006\334\357:\227\231\034\275\324*S;B\237s\274c\260\222<R\325.=\035\356\252\273\200\327\333\273\337\020\363\274\272\200)<\211\002\300<,\302\307\274Qc\200\273\272\351\014=(\020\234<\006\326\202<\373\3248=\276\2345=\236\002K=\376\031U\275.\016-\275N\305G=\373\225\031\274\337\3520\272*\0361\2758P\246<\014_\251\274\270b\257\274\367\0347\275\333\311\213\274`\246\027=\267\307\355<\241z8=\226\300\331\273\363\371,\275$iK<\370\234\234<\202lQ=\235|\001=T\267\246\274\354\031\247\274\246\r\220\274\271\221&\275\260\214N=\237\3176=\327\035-\275\243$C=\227f\000=\311\227:\274\235\255\\\274\301(\320\274(7G\275\024\272\315:J\356I=W{\002\275_}M=D\204\031\275\324\013\273\274`\3410\275\235\014X<#\335\225\274v4s<s(\315<\221p<\275I\373\026\275\227\2730\274\032\234\335\274\352\003w9\010\355n;\247\261<\275\217|B=\243\275\376\274\260D4=\351\021E\275\251\373\313\272~k\372\274Y\023W\274f\301\010=XK\017\275\220\311!\275\225s.=;\007\203\274[\240D=\376V\276\27495D\274\211}>\275\317\022\021=\245\354\303<V\2567:\201\212c\274y\237\251;r\337\235;\370\211\241\274R\2573=\360\374\213\2743\334\232<\201A\357\274\177\267B\275\251\264\355<1\235\n\275\377\301\021\275\005\210\347\274\177\013\334\274]\003\206<y\035\313<U\357\037\275\323\302\036=>\241O<\314\236\227\274\3127z;\355\344\t\274Z\305\215\274\250\2122=\372\021\235<f\267\002=Qa\241\274\300\244\215\273\236_O\275\025w\010=t|\202</\243\307<\235\365\277<<|\372;\'\265V\274J<\340<\256_\037=Q\321\305\274\240\271!\275\350\2520\275\217w$\275\316\244C=q\232:\274e\346E\275\371l\007\275J\313\267<\213`\000\275Uem<[\323C\275\t/\273<\377r\327\274\225?H\273\3541:\274\001\2762=\242\230\031=\235\326#\2758\302?\275\006\301\317\274\232v\325\274\236t$=\n\253#\275^\253\026=\266\205?<a\003\341<\227\322\020=3\326 \274O$\306<\334\370N;\362\377\366\274\241\257\024\273\231G-=c.\242;\276\321\020<}9\t=YC3\273\260\302\261\274W\374\360\273\004\200\364<\\\225;\275\021\306\215\274\253r$\275P\325:\274\227\361\300\272r;S\274\3034_<\003g\372\274\001\256d:\\JV\275J\3238\275\377\277\200<\030\233\312\273\006\345#=\324$i\272\013=g<\212\227\001\2755\207\007=\317z/=\344\2768\275\345\266,\275O\266\304<\036x\313:\364\274\342<\235\371\031=\323\304y\274\336\033\375\274_$;=\221\010\255\274o\353u\274(G\003=\260_+=\211}[<\300C2=/h\300\274q>K\275\217\272-\275\310S\257<\213\250\223<\032\324\025\275\304\250\037<!U\354\274\364--\275\235)\262;\316\255\037=\267\366\025\275\206OZ<f%W<\347\300\031\275\241)\375<\341\302&\275\347\334&\275\234\246J\275V\264\"\275\226\n\"=(\200\007\275\207\375\035\275\214\025\213\272\314O\235;\374d+\275kU.\275\271u\004=\005\032\021\275\240\354f\273\244>\007\275A\374\315<\\\251L<\330\003\367\2747\3466<\rk\205\274\250\221J<\240,\371<\251H\027=Y\013\242\273\215cU\275\232#*:$v\270<\300\310&=\323Y\357<C\317/<8\0277\274\263:\315\274\333d{\274-ir<?\3524\275\371\246P=g#\331<\264o\177\273\217\357*=1c\034<Q\350\022\275\245\030P=\244\273\265<\374\212\017<\314\353\244<\353\024\305\274\237o\232<\210nu\274b\301 =k\030$\275\254\335\036\275u\017\276<\371+&=VFJ\275\033\235\242<=\"\010<I\017\006=L\263%=\'u=\275\370w\222\274\203k\254;\215kw\272&\010\306<\222\321\320<t\332\002=f\300\302<\312\361\234\274\3562\220<\344\322F\2741`W\274w\375\373;\300^\037\275\273\333\313\274\t\224A=\202?\341<u\343==\"\200P=\366\t*=9R\025<D\"Q<\205\224\005\275Z\250J\274\253\202:<\343{a<\013\330\226<\024\377\255\274\230\342\031=\177\037}\274\"D\221\272xNm<\271\rS=\366\017\350\274p\370S=SV\204<8\r?;\325\223\266;i\374\354\274x\362\007<\374RL; \3274<\350\371\274<\325\273+\274\205\352%\274|\003\204\274\377\365\002<X\026\030\275jL\324\274\237z\227<\261\n\353<\324y\226<f\335v\274\310\2534\275\333k\244;\264\325\"\275\024\347\t=_/\036\275\344R;=n\025\205\274C\202\217<\"*\206;\364M\331<H\3260\274\343+C\275\360x\001\275\035\266O=Q\261\254\274\003\245F\275\3033\224\274 u\375\273\374^F<m\007.=V4\276\274\212J\267\274\262\033\267\272\006X\207\273VwM\275\272\021\212<\211\223\346;]\215\014\275\276A\362<\022\376D=\211\3310\274\244\031\017\275\3536\320:\351\352n\274@\233<\272v\226h<\242\n\353\274a\362M\275\335\007\307;\375\255g<\226\340\375\274=\271K\2753\025\322<\310\020\321\272b\355\320\274\224\220\344<\371Sn;\360,\212\274D\223\362<]Zi\274\353\315\033\275X\202-\275\314\333\007=\217\035\220<\206\035\031=3Xp<\004\007\016=x\177\341;)\243\232<\360\336g:i>\035\275\314\216K\275@?\035\275\252\200;=b\225\014=\322Ji;G\214\007=\240\373.\275\323_%\274\027\341X<\031\331\"<l\312\021\275Mn0=(\313\313\274\275\264T\275\371\223!\275\366S9=V\332\257<\177\334\264<\027\304\243<_7\301\274\017zI\275\213\317\275<A}\341;\031\300\236<g \212<\204&\327\274\216A\001\275/w/\275\022\367;\275\255\237\231\274=\340\003=\237X\303<\247\033F\275hG_\273}r6=\020\025B\275^(\335\273\240\347\025;\350\"\030\275_\220\205<\236\343#=\231\341<\275\240\300\230<\245\237\276;m]\374\274\364e.=\246@\371\274\'\350\031=b]W=K\333Z\274u\307\314\273\376r\023\275\356?\321<\260\225D=\366\207\373;K\3140\275\252\224\000\274\222\262\014<\201\006Q=\344\230$=\031S\275\274\262k\263\274\013F3=\361\302\007=\317L\022\275}&S<\304v\314\274\214\023C<\253*\222\274\217!\345;\035\371-\275\013\032\006=\371c\336<\367^c\273\205]\004\275yA\034\275\352\277D<\177\300:\275\270\222G\275\222\256\014\2744S-=%\013\004\275\030\2161\272\014gQ<`yE=\357\006\226\274\024l\327\274\312\023\232<W&\r=\253\373\302;d\251\356\274`\314!\275EG\2519\004qO=5b\374<\226mR=\016\352\354;s\024\302\274\374\032\r\274\356\363\267\272\035\304\263\274_Iu<\363\342};\356\361\017\2753\036\r\275\227\315L=+\234)\275{\373\253<\363\263\253<\\\377\033=Kg\304\2740\',\275k\364?=\342i\370<\343\200\001\275Z\217E\274q\3104\275\275\275;=\204\204\272<\375 F=\025\346\014\273\036G\013\275{\006\r;\331\354\376\274\326\226\233:#\232\036=\372_w<=\347\270\273\241\202\223\2735I\327<F\373\211<\234\'\227\2732\0174<\203\031\214<\034\352\031=\362\371\246\274\204\275(\273O\242-\275Q\332\201<\341\260r\273)TL\275w\342\206;\215\216\177\274\216\325\224:<\243\322\274t\364@\275\221\373R=\030 \367\272\351W\332\273]\016\371<\256i\033\275\033N\036\273\033|\202\274\372\036%\275\0332\016\275\310\213/\275M\323\007=+\247\026\274\247\2224=y\254\005=\226\345\311\274\337\366,\274\013~\t=;\020\250\274\2222\037\275\016\023\201\274\243\275\030\275\221!\341\273\272s\364<_\220\341<\236f\017\275p\002\031\275X\216\236\273\241\320\220\274t\316\362;\363w\005\275\026\355\366\274xL\023\275\370\3617\275D\001R\274@_M\275]\n\357;\212\021\013\275r8\212\273\253\250<=\033\303\001\275\0319\032\274\317\230x<q\247!=\r\021\277\273\332\315\212\273\247\366\344\274\177\3526=BhH\275\342a\000\275tj\353<\247c\214<q\001\335\274M1\203\274\244BB\274=j@\275r\033E\275\377-\031<fa\342\274\341\214\022=\270\223\367<\035_6=\255II=C\211?;\326\024\321\274\230\n\026\275P\207K\274\246\325C\274\202\351O\275\254\340\267\274s\267\370<Y\337\333\274\372\252Q=k\036\373\274r@\243<Gg\344;.wV=\307\317\236\274\200\005\212\274\t\313s<\177\024\252<\274\302\225<W19\274o.\010=ps\321\274\373\217\203<\371\330\314\274\220]\006\275\201\204\260\274\221\205\246\274G\303\230<\250\354F\274\265\311B=\2733\310\274\201\335\311<g\206\367\274\351x\220<\334\267\371<M\236P=\267\024\247\274\314\240\350\273|\323\217\274G\216\357\274\323\247\020\275\326\251\021=\265\000\337;(\207\341\272f!Q\275\307\316\022\2750\256F\275s\021\326\274t\315\027;\036\346\351<Y\324\023<\217\257\0329\177\034\027\275\252\330 =\327W\273\274!\325\005\2751\226;\2756E\370;|\305\337\274\204A\222<\276b\027\275\371\304+\275\317\022x;\207\300\034\273\206\227\004\274\276\r+<\325\243>=\312eU\275\257\035.=\2475<\275g\335\177\273C6\266\274\256\307O\275\314\000\020<\265\220\244;\357\371\302<<KB=_9\017\275\336\3508=\033\037x\274\276\254H<1\206\353\274lo3<\351.\262\274\270\235\023\274\010\306\025\274\224\002\364<\265m\037<\262\010\036\273\311\253\360\274\324\246\320\274UL\377\273\220\237\237<\362\004\016=IW\235<\227\324-\275e\300\324<D\366F=\027r\001<\227e4<j\257g;\241\275\255\274\344\226v\2738\000=\275Td\n<|\2215\274oG\377</7\345<\254\024\023<\360\371\334\273\301\034\211\274!\340\263\274\267\240\333\271\277\325\005\275\nD\213\274I\244B\275\216\271\303\273\'\311z\274\025\270>\275N\255\301\274J\3227=\234\331N\275+\224\330\273\031\'\324\274\334\256N\275\234Y==\331\345\027<a\336\033=Z\336\221<\210<\341\273\375\260\304\274f\021\320<\244\307\210<d\274\014\275\246e2=;e\267<@\264P\275\210&\232;U\355Z\274\303JW\274\223\300\036\275_\316\035\273\367\2044\274>\277*\275C\207\200<Y-\026\275a\324\016\275\207\334i<\2223\021=\246\274I=n\371_\273\241\355?=l\214C==\354+\274\230y(<_Y+=\260\003.=m\\,=\332\021+<\363\220\001\275=_\234<\r\274\"\275\222\006J\275\315\347R=\314\257\356<:\317\222\274\034\3630=\r\233\032\275\305\273\231;:\3109\275\0361\037\274\200\323\032\272\355c[\273\212\367\204<0\350\004=\214\374,=4\343\370<\277\313\204\274\3452\227\274^#\n;sW\351\274\311\003\216;\343<E\275]\301P=I\025T\275X2q\274\331\334\201\274\024<\006\275\344\263d<\032\344\257\273X\334<<\343\327\302<\026\260:\275\000~(;h\271\007=U8\020\275\030E\341<\216\024\241\274)\356\"\275\203\355\206;fyI\275\363zG=\325vN\274[1\250\274\266\343H\275\365^\323\274\033}\341\274\004\220\330\274Y\017L=\034~\347<\361\263W\274`\032&\275\365<\036=\360>\304\274I\265\240;\343\227O\275\ttU\274\340\2133<\010\304\006=\246\214\t\275\326\257w<\276\024\001=?\244\214<\244\311N\275\230\251\332:\332\027\350\273\230\te\2740Y<=\265i\021\275\251\312\r\275i&%\275\n1\355\273[\362\"<\214s1\275\223\001?;\225\267#\275*u\235\274\205\3610=9\t\262<?p\356\272}\030E=(\003\301<\352\355{\274\t\2652\275@\251<\272-\0375=v\211\230\274\257d\034\274Y\240o<q|)=\247K\357\274\340\025\364\2729\324K\275I\317\303\274\'z~<\n\000,\275\350x\273\274\325\014H=Z\311\262\274|\373!\274\343\264\022\275\273\324?\275\027\253\234<\035\331\345\274\231\345\n\274\270\254g\274\033\310\212\273\265\272\356:2\213\"\275\275gH<\027\016K<[V\367\274\022\341\037:\254\327Z<\333\032*\275P\367@\275\025,N\275R!/<AY\353\274\254\370\r=\373}3\275\362T\247\272\214@\364;Ie\014=6\312\016=\300\374\013\275^\263\022\275\377\334\010\275\215\341\276\274S\037\356<\036~\026\274q\200=\275\205(I=\256-j\273CZe<\375\014\275<q\035;\275\034\237\273\274\215\013\347\274\3177\230\273\314\341,\275\342\021%=f\245V\275V~w<\251y\316\274~\232\375;\'\034?=Sl\251< \003E=\222&\212\274\017*\004\275l\373\331\274\252(j<C}F\275\351\356S\275\304\nJ\274~\013\272\274\242\340\343\274\334_\017<\353@p<\311\031\013=\037\207\376<\201\007%=\340\313U\275\273=A\272=\343\002\275\026\353\340\274\316n\274<SW;\275\317\035,<\341\270\305\274\353\000\247<\323>\316<\'\031\021=\330\020\n\275\n~6<Z\266\316<\254\302\215\272L\320\237\274\330D\0219\374\211I<\304\203\221\274\202#\377<T\313\005\275 _(=\223H:=\202\370\241<\003\202\301<A\301\365;]\271\363\274-\014\211<}\244\273;\177 \362\274\315=\366;X\263&=\225K\333<\365\002\023\275\204O\234<\225\215\n=\331\225\326\274\311\003b<\250\267\2359\364\331\370<\273b\376\273\332\372\022;u27\275-v-<\322\324\265\274S\340c<\354<:=>\231\211<\211\230\324;\374\374\312;\214\2416\275\223t\264<2\321\313:\031\330/\273\207\251\034=\332yP\275g/\323\273K\322\300<Z\t\311\274M\022\177;\030\360\226\274d\2033\275\260\257E</\203\025\275B\365\311\274\270-\250<\223\313?=<\353\033=%\024\362<\312\207\213\274\270\0109=:p\022=\322]\016=\325\366\353\274Pz\210<+Di<z\251\301<\201\326\233<\337\373\202;\361^&;\221\240P\275\332\251\251:(;\360<c\331\364<[\330\344\2743\005*\275\206F\214;\331\350\344\274\"l;=\202\221\337<g\037\035<\231\360\026\275,\t\337<\036\224\342\274\232G\020\274Q\346==?d\233<\230vQ\274\3417\253\274\346.\014\274\220\226j\274\\F\331<L\034V;5\350\216<`\312\005\275\270z\230\272\323lV\275\307\323\000\274\234`\304;\326\357\'=,\275X<T\317\357\274\032\226f:\310\202_\274x\273\376;\243\361<\275\310\264Q\274\t\212\032=\337\316\232\274\221\364P=;t\213\271\323\320\275\274\333\243E\274\362nL\275\224\010\026=|\177\313<\325_\364;\360\260f\2749>\217<\274k5\275!H@\274+\363Q\275\265J\304<h\247*;\371$];\236}\006\275\374\262:=~\245\036\275\031Y\016\273Q!\023=\331\027 =\225,.<\236\346+=\004\035H\275aV\351\274\215>^\273\354\241$\275t\341\003\274:\313\n\275\260\214\344<h\007\330<\272\270.\2745+q\2747\223J<o6\331<\304\264\277\274\364\'\257\273\001A>\274\026c\336<\027\322\035\275\260\236\201;\276\231.=\277\024\024\275\236j\315<\300b\330\274\234\237%=zI(\2742\037L=\226\213\216\274-o\355;+B\253\274 \317/\275xc\370\274\210\257\033\275/M6<\227O2<A\310\256<\036\237Y\274U\006\024=\017n\023=Z\265\266:\'\364\320\274\206\003*\2753;Q=-)\004\274\252E(<H\025\267\274D5\224\274\233\256\354\273\277\370 =\321]U\274\244\376.\275\336\267#=\332\301\220;\227\313\245\273\323~\022=\271\006|<;\364\001\273\362\207?\275\257\305\322\274\004\352\217<Tjk\274K\025\263<??$=\226r\371<\356k\260<\375\267\021\274v\213.\274Ek(=*V\372\274\275\027?\274a\013)=;\201D\275~\3303<n\343\323\274\331\210U\275\260\303\235\274\023\234\313\274r\230]<Q\"\363\274\300\235\255\274\250\367\033\275B\036A\274\341\300\357<NR8\275:@\025\275@\316\371\274\313\3376<\022KI\275\264\024\025\275\021\223Z\274\007\356T\273\331\"\232\274\034\3220\274\330\364);\\\233\312<T\360g\274\367\257\374<\374\355\026\275-\025\354<Bz<=/\211\376<w\2424=\027B=\275\246\307%=\374\347\034\27536\320\274\241f\323;\037D<<X\220B:E\250w\274?\324\343<\341q\361<\276\233l\2744\r\340;\224`\360\273\2430B\275\300\352B\275\331\215q<d@\367<\245\\\033\275\226&:\2749\275\276<\302~\036\275F\365!\272\367\203\273\274jb\344\274[F\231\274M~\272<T\214\315\274\3549\035\274S\213S\275)\362@=\202\203\006==\242\234\274\315T\007=\026d\365<\264]W=\333\261M\275\2740F=\222l\275<\257|\r=.<x\274\200=\361\274W\211\005\275\304\373\025\274\321\256\010\275\266\021\000\273\006\307\035=\372\207 \2740-\267\274\265\240\276\2733w1\275\022\340\265<z\266\333<&\304\214<\031\203\265<K\223L=\325\302U\274\321\353\316\273\234\326\247\274f\250\013=\327o\300\274\360b\206\274^\305\270<^\231\357<\377\343\226;%\262\274\273GO(=\215KF<G\357\014\275\353\271\215\274Dp!=\355\335O=\321%\222<&\254v<tJ\326\274Y\035\255;ZG2<8\324\353<\030\362\244;\301\254\331<\316\032;\274k\230\363\273\325wq<_\226A=z\254z:Y\017\340\274A\334+=u\3034\274p\\\340<\003\264\000\274d!\376<\345\002\300<\201\321\017\275\323\013@<\177#U\273<\030\315<s\307*\275\301\030\010\275\270Q\353\2744\220/\274~\213\027\275\240L\320\274>,7\275P0\330\274\237\324l<\354OJ:\317b\226\274\375\336\372\273? \313<\313k\031\274\2778\203\274V\177\027=\377i\033\275\213\373\306\274\314/\016=\326\372\032=\376\250+=K\004\377<\250\352\321<\256o\263\274Q\314\t=L>\226<Q|\020\275\036\355\r\275OJ?\274\216\0170;\330\013\010\275\242\216L\275\\\005I\275f\252\242\273\350 \215\274\341\262\336\271\262c\t=\354\322\036\275\363 \246<o\323\"\275\305\375-=\301\r\305<\234\246P\274\374)\035\274[\3303\275L\3777=HE\037=\251\213\342;\310\231D\275\310\364\026\274\377fO\275\274\001\245\274pa4\275$\025\204\274\203f\000=\304\014\t\275\216\221\005\275\373\335\230;\232\214\';\275\316\321;\376\023\006\275\017h#\275k\305M=\223y\314\274\371)%<S\023\253\274\330sD\2745?#\275\341\325\375\274W\370\303\274E\200!\275;P\005\275\202\246G\274}\323I\275L%\037=\222o\375;fw\000\275\277\271\272\274&60\275\360\'\264;\267=!<\246\277\374\274sM\021\274T\022g\274\312\272\304<\345N\007\275y\r\014=\224>\031\273v\350\224\272]\216r<\312\263\300\274\0279\262<8\177\315\274M\025)=2l`<\030\270\265<\246b\032\275N\204\353<w\247S\275\001\177\277\274n2\007=\262/\231<I\301\345\274\n\n\027\274\307QS\273\214\006T\274\3175\203\274\256+K9\367\325\236\274\265\267\372<\301\317\331<\222\314J\273\023@\033=\301\256d\274!\305\235<\334\014%\274\302\363\374<6\370v<\\\365\214<3;.\274\304\202:\273\331n\263\274\361\220\267<\277\324\032\275~Z\316\274\253NQ\275f\020\007\275\250/\007<\372\356\034=\337\264\313<\370\352\347<=\217\014=}oQ\275\367\0016\275\032\006\226<b{\230<\210\250k\272\355\331.\275\344~\355<uj\304\274\345\027\003=Qc\366<\013\305\205\274#\324\020\275\343l\210<\002^\222\274\325\306\372<7\312-=\035Ez;\321\366\326<#\360\212\273\242f\013\275\333\317Q\275\310o\017\275\351{\362\274vq\261;\007\241\237<Nr?=\220\016\320<t\370\021\275\361\206=\274\247*\023<CZP\275\212\205n<\016$\315<#\265\371<D\"\350\274&\325!\273&\271\030<h\226\357\273x\t\300;\n\346,=\340\020 \275Zg7\274\027\004P\275c\316\204<i\257\267<t\205\245<\001P\343<\340\2517=\323\010N=8V\001=fX\234\274\210\274+\275\312\231\366\274-\264D<\335\226\024<\030\362\317\274`#\233<\"l\002=\361\242K<\001\267\024\275\204B\021=5w\347<\326\330C\274;}\376\273M\225\350\274\256G\013=$\234\005=\216\003\r=\032\"\036\275\333BT=\006\310\016=\273t\006=\377\0167=G\014?\275r)\364\274\273\364@\274\\\017B\275\013?\022=Y\332\202\274\273\371\224:S\277>\275O~\371<?\307\320<\361\377\016\275_Z\363<\267J\352\274\276j\302<Ef\240\273j\251Q=\263{u\274\"h\232<\244\2570\275F]F<\266Cr\274\232\302\024=h\267=\275\305\243\032=\321!5\275\001h\320;6\261R=\367\010&\275\333\'!=p\352\r<\275\362\r=\030Op<\276<\324<\264\014\270\274\303_!\275\346i)\274!\"6\274\321\243r\274>\217\266<_$\244\274\366K,=\323\365\010=\317*\026=\331\216\220\274.\225N<\267\327I\275\303s\255;\037!\314;7\313\000=\270Jv\274I\014)=}\314!=\326\252\034<\013k\201<\202\026\347\27458C\275\242\317N\275\306<\033\275)\3008\275\323\033&;\336\366\224\274\013\"\324<\232Y\r=\335\264\244<y\375\260<\264J\030\275/\222\023\275\024p\352;\370\261\274\274\2506\032=\255\026\362<\264^\274\273L\310\221<\\\204\224<\270qL\275b\214\r=\336o\010=\232\211\345\274hF\n\275\001\250\022=\226\033\204\272\274K3\275\247^\274\273\317*\226\274\243\365\t=\004\355\270\274\263\323\037\274N7\027=6\275\031=\206\315\017=\346\225\221;\353TP=\306\3024=\211\350i\273\246\370N=T\250\201<l\022\322\274\010\362\341\274\022\331\250;\201J[;A\013\211<\275\351\022=)\337E=Eo\004\275G\301\275\2744\216\374<\rv\352<\257(\271\274\316\005U\275\3632$=\002/J=\242\303\236\274\311\342==\251\031+<#\311\241\274\355\247\364<@\275_<\335g\227<\222\t\250;P\303\320\274\010\022\333<\367Q\014\275\363\340f<\277\024<9\002u\366:\316m\275<^!S\274\2247\010\274=\360:=0Q\214\274\355\300\320\274\340}\351\273\016\274N\275\300\324\332\2743\350\231\274\260%\234<\331\201B\2735\312Q\275\211Iq\274\235\007\r\275\317\246\334\274s2Q\273\315\020\273\274\264\237\'\275\014[\341:\025^O=D\227\313<\'\024\321\274`F\002=\306\352\256\274\021hD<ZK\231\274\000\030Z;\365\371J=$\223\002<\202\"\357\272\022\313R=3\215\005\275\311|d<E\3740=\001fB<\223E8\275\014]9=\351\032\r\275\357\247\261<\341\250\362\274\317\273H;\225\306\342\274\365N\376\274\275G\226<\021\231\000=\305\3501\275\264IR<\262\270t<\343\322H\274\365\225\357\274\375\273\351\274\325&:=\316L\260<\303\213\214<}\371*=\237\253D\275\001+P=\205E\204<l\020q<~z\313<#~,\275\010\362C<t\223\271\272\031q/\274\244\245\211<\322c\267\274\321\002\"<)\207H=\243\336\214\274\232\351\350<\232\364\010\275\234\0058\273q\347\347<}GS=\343\3633\275E\367V\275\2155\326<`w%\275s\237?=\354j\356\274\270\244=\275\000=\233\274\375?3\275\017-\000=\311\311K=\341\200X\274ajF=~:-=\264\210\214<D%\026<\002\261\245\273\244\350\010\274\272-A\274\213\013\257\274J\002)\274^!\345<KJ`\274\204K4\275C\250\261:C$\264;\037\333\242\2724\316\333<\026\316\307<\332\375!\275\215d\266\272+\206P\275\363l5=mtS=\320\231\357<\000\231\034<Wd\003\274\337\350\006=\252\376\366\273\230\254\215<%\272\275<F\240A\272{@d\274K\223\226\274\373\344\010=$l\203;\342\266R=v\234*<\337DI=a\241\013<N2\272\273\363-\033\273\001t\004\275\023\377\206\274K\361G;\277\216Q<g\024\374<\\\007S:g\237\303<\236\271S=>\233\236\274=9\373;\207\324\004\275- \214\274X\034I\275Z\310.=$\202\265\274\273cL=\355\314\2429\004\321\371<\271\212>\275\224\204\217<)p1\275#\321U=\034RF\275\266c-=\231\210\321<\002<\324<\007\2707\2754\005E=YWc<pp\"\274\005\247D\274t\017\036\273\267]Q\275[\036@\275\270l \275\334\364\032\275V\002\027\275,\0328=\210\224\222<\342\210.=]\210\311<\224\3674\275\223\213J=\371\236\374\274h[\277<t+\205\274\225k\007\274\310L\344\274\251\342*\275\221\336Q=\356\367\334<\321v\255<\373\027\n=0\254\324\2744\021\315\2739\235\312\274\272\273\036\275\251\236\024\275\201\202\252<\303\010\020={\346#<~\254\027\275*\036_\274\332\004\030<\263\343S=\203\315A;\004&\010=}\255\206\274\253\271\251<\260\211K<\344^\376\274/i!=\036\235\025=C\376\221<\371\367/\275\240\264\273\274\0037\354\272\320\266\277\274\226H\303<\315.A\274\030\341n<:\300\035=\206f\321\273\305\213R=\320\'\335\274nx<\27577\033=\206\263\361\274\351(\213\274\363\273\344;\2511O=Q\253\356<\321\203\036=\"\352\306\274\255\323@=)8\017\275\004\307\225<:\376\311;\305\367F=\200R\021\275(j@<\014\256\375\274\t#\000:\374]4\275/GR\275\336MQ\275)\253\'\273\211\207\311\274\332\323\311\274\035\376G=\312\n\024=\220\225\036\275P\343\302\274\225\036\320;\303J\346\271K[m<\207\376Q\275\333\271\021=\275\r\377<b;4\275\005\330\013\275\332\372\375\274kDF\274\372\003(=\306\261\010\274\020\354\242\274\355\226\204<)\322R;?\026!<)s\223;z\216\246<\307\374z<\215R\030\274\256\343 =\033\032\244\273\374\357K\275#\\\027\275\022RG\275\361+\001\275\253\033\214<\356\224\365<\017\335\352<\267VU\2753\017\253:\360\221\277\274\365\205\010=\241\206)\275wQ\023=Y\270;=\032(\274\273\021M\366\274e\t\370<\0356\227<\342\3279<\217tL\275\252\344\226;q\371\000\274cA\232<\305^:\275\333\0079=\270WL=\265\022.=\032 \232:\212\277\344<\310}5<\223\270\254\274\335\002\275<\255\n\270<\241\000@\275\345\200\006=K`\313\274}\2257\274\312\250\211\274\002\345,\275\241\177\033\273\023t\307;]\2246\275O\230\005;K2\246\274\324\270\'=\232\212\207\274\253\275Q={X\300<\037\206\232;\323\036\242\2736\033\010\275&\311\n=\323\333J\275-C\234\274\262W@\274`\007C<n\376\257\273\337\016)=>+\034=<\275\217\274g\317\333<\031%0\275\033\244\327<WfS\275\035[\241<\273\303\027=TS\037\275\024\2035\275\257:Q\275\220g\225\274\335\257B\275:m+\275~\211%\2745]\000\274\326|\351\2749\313\377\274k\3349\275H#D\273\200\355\210<1\323I\275E\245\340\274\027\267\010<\266\002\032\275\242H\321\272\272?9\275,\200\231\273\002q\231\274H\001\365\274=q\246\274\230\"7=\325\374\223\274\361E\025=FCM=\037\235$\273\277\233\315\274\310\365\326<\3419\300\274(\031\013=\373<\037=\310\3503<C\377\267\274\3441\030\274v\351\335\274\034W\357\274\265\235U\275\212\350\251<\014\035\3009\374\260\016\275\023\260\315<\300r\220;\004\314\263<4\203\254<\034\353o\274\031N\240<\301\0208<\205\337Z\274B{\001=\236\336 =)\345\364\274\0256\263\272\360S\302\273s\013\177\274\226\231\212\274\340K:\274\326o.\275?uE=>\273\002<\001m\374\274TaG\275\227v\321\274\252\222\253<\020_\275\274\244eN<2\001\370<x\274_\274F3K=\237\320\335:\322\367\216<\353\367\240<\264\276@<r\217Y\274\355\220\353;\243\350\001=\243\005)=\203s\222\274\002\"\335<\271=\3258\200w\375;\026\320+=R\337\025\274t\005\363<\nW\214<d\030*\275\246\'l\274\376\316\265\274\t\334\261<\245\365C\274\210\345\330<\"\343\332<;6\371<\242\220\n<\316\257\362<\027\000\347<\375G\032\273\307\370\023\275\026E2=n\374\017\275\222\214\350\274\2527\373\274v/$=\366\271(\274\350\030\252\274\240\335\300\274\014*\337\274<\214\272;\367\272\306\273\202\345\266\273f\304\333\274|\257U\275\014\370{\274\3416\005\275+\364\265\274w\225$\273\276\316O=\210$L<\03735\275\216\341\221\274&\303\013\275x\004\350\273\222\016\215<,/N\274\352xh<G*M\274w\257\000=\205\231:\275\232;\313\274G+\017\273)\265\326\274\337\347\340\274\205v\360<\267\0225=A\310\223;\232t =\246I\316<\330\2432;\375WQ=\345\032\252<\362\330N=\211b\300\274\263\245\214<\270j\010=\354 \337\274o{2=D\333\006=bP8=\004\2565=*\205Q=l\244<\275\'\367\034=\301mT=\314h\345:F\335S=\217\331\027=\220\367\327<\2675\241\274\344\201\017\273\213\"\237\273X\240P\274H\271\330\274\237+e<W\205\355<\"@+\275\002\222=\275\274\2422=\316M&=\tW\310<\\f\352<\313GT=f\366\177\274\221{\207<\255Mf\274\t\037\303\273\243}:\275&bl;\371\317\227;\363\304;\275\333\340$=\n[\253<\206\242\326;\024\275\321\274\346\027I\275)\230!=\367\201R==/\216\273\356w\375\274\222s\257<\257+K=\'\013\t\275i1\214\274\256\220\000\275F\\\'=%\301\252\274\244\237\270\273;M\033\274\330\261\253\274]\216\375\273I\333F\275\365i\360<\363C\307<\273\331\017=&\242\216\274\247\333\252;\251\000\321<S\320\251<_R\315\274\014I\037\275oR\311;\301\'\230\273\r\241\332;\206\250\010\271\204\265\010=@\003\255\274)\322V\275\277m\222<\334\355L=\306T@=e\357A=@i\321;\346\023\023=t&\034\275K\344\227\2735\301\032\275\220\256\324<B\004\033=\177\034\025=c\270\276\274&U\003<\273\271;\275\231%$<\\#\330\274\246C\n\275\251\014\332<\242\346\361<\204\277\320<A\326%\275\016X\226\273\350\335\270\274P\263\321;8?\270\274\254l\025=?\227\204\274;\031\035\274A@\236\274\3638\302<\246\233k\271\265&2\275\217xU\274\206\300\007=\341h;\274\322\252?=\241L;=\026L\003\275\342\022$=9{\343;GY\000\273iE\n=\300\3538\274o\236B=\3450 <<\014x\274u7\002\275~cW\274\177\330\271\273\2317\'\275\255\314\251<\315\366/;O8\270\273\263x\307\274w\233=\275\362#S\275*\241<=\nS\005\275\036\274\"=\343\336?\275\000\375\343<qk\363<{WH=\221\035\3519\276.\270\274\306$K\275h\001\230\274\377)\230;r!T\275\006Pk<\226>R\273\035\261\222<\337\242\020\275y\033\013\275{\331\361<\323\304\027=A\234\260\274\232\202\357<\252W\240;b \216<~\004!\275\026\004}\274\270\340\037=\224/&\275\252\263O=*\231K\2751\347\266;N9b\2736iW;. }\273X\352N=\266\013@\275s\266\373\274\322\237?\274\213t9\274\236eO=\277\333\242<\220\343\371<.\277\265;\367\256\021=\310o\270\274A\006\243\274\301\000\252<\373\026\240\274-c\010<\254o\224<\245$%\275\370\267i<>\374\265<\265\257\376\274\006S\034=q\337\267<\360\343\006=h\263\2349\321\357!\275_\373\000=\035s\337\274\007|C\274\365\360\231;\213\376\273\274\325o\010;\360\244\320\274\345\"\300\274\030\227\252\273\244\002\260\273\336W\220\2749\366\300<V\311\210\274\002AA=\034\330F<w\277\376<\3059\215\274\211\r\202\274\320\036\031\275\003\225\315;\277\025\230<\3771\021=a\275d\274\033\327\036=\225\332?\273\201#\017=\214k\354\274\327\347q:-\215\t=6\313\346\274\2135\321\274\215\246_<\337\276\035\275&,G\275W\272L;\323x\003\274V\006E=\337Z\221\272\312j\277\272\354f1\275\344\213\227;\217\313\023\275\250\261\311\274\340\315;=>6\251\274\254\250\316\273\331\306$=G\273\314\274\372}\373\274+8J\2741\271\242<\360Y\026\275\346S\323<\255\215\223\274)[P\275G\211\312\274\361\225\374\274N\332\324\273\277\201\034\275\255!V<\037\374S=\264\300(\273\247<\006\274\017\362\206\274\2147\200<@\231\330<k\255.=Aw\372<\311:\000=\201\352@\275\331\033\221<Z\301\300<Hx\210\2735A\237;vr\335;y\207\335;P\312\032=<\265@\274\376O\255;\261S\031=\252D\014\275\227U\263\272/\342\225\274\021c\031<VG\370<\001\320\016\274\007&\327<b\302\002=k\252o\274\373\004{\274\'17\275\364\376\352\273\341Y\236<\215O\033\275V\310N=\2335\035<\214}\024<\024|\002=\037?\210\273\276\273k<\243\3169\275G\365\005\275\032\245\314<\016~\202\272\233\321B=\310\226\207\274nn\233<\327\366\340<\272\203\376<\205\'\323\274\247\0242\275\210}\021=\266\022\025\275w|\307<\014p\214<\017/8\275\210\206T\275e\010U\273\035zA=c\241\354<\245\274]<%\312\325<z\203\360<\333?\370\274\375\rR\275\305~\345\274y\354\326;\030G7\274\017u\"<\206\200\277<\336]:<\007\251L=\353\361\273<\301r\332\274 \353\252<\303\356\365<T\007F=\357\021\020=\207\376\222\274z)T\275\013\233\210\272\352d\t;\364e\037\274>\241\376<\002\355\032\274\021;\035=]\362\302<\tk\037<Y\244\023=\016}\327\274a~X<Y!q\273\240qi<\231xZ\274\243\177\366<lA\026\275@\341\037\275\341(L\274\342\345\n\274n\220T=\301\264R<ma\\\273(H\'\275w&\254<\3726\014\273\023\2636<\224\355\233\274OhO=\022N\205</~\246<\260U\376;\3560\223<[ \211<\307\270\263<D\276\215\274\363\034E\275Z\037.\275\'o\030\275\313\230\377\274\344>\200\272\262; \275a\271\227\272F\236W\274\351\323\t\275\000/\341;\204\243\343<\014g9\275+\332j<\220\003\342\274\3404$=X\377\204<\223\241-\275\376T\027<|A\010=\346\271\013\275,|F\274:\nC\275\014\200\r\275a\333C\275j\307\205<\373\353\214<\234\364<=uR\362\273\353\202\347\274\251\261\326;\006F.\275\356r`<\023\334(\274\342x\032<\034\220u<\261A\207\274}\336C\275\n4}\274M\324\034=\306\217\010=\026\276\361<\275w\031\274\264\005\330:U\351\002=\227\213\'\275\347\021t\274\300\221\000=M\377\210\274O\203<=_h\027=.\361\276\274\032\251\366\274-e#\274W\245\314\273{\260\307<~s\031=\230m\271\274\310m\315\274\373\354\033\275\344\2160<3\321_\274\215!\006\274\336F#\275\327\025\236<.V\366;\326\347*\275\306\037@\275\261H\r<$\355\267<\020\037\347<[\314\334\274K\326\255<\236\357\001=\311\355U\275\326\224Q\275\262\242_;\230\265\'\274\351\357\266;wq\013<5Y^\272T.\037\274\345\204\303\273\374\007\n=V\370\027\275\2057R\275\217\004B=7\264:=\325\3173=\330\362\014=\255L==\273C<=)\303d<#\233\304\274\217\262\035=X3\211\274\202i\321\274W\211\177\2746q\353<<<\346;.E`\273c\213\226<]l\300<l\001\374\273\2300\213\274g\363\034;\333\331*=\007\022L=\035\336\330\273#\016\300<Y\023\002=\261\221?=\006\355\204\274{\3077=\267\271\034;5\3762=\330\336\227\273#3\234\274\246\025/<\256\356F\275\365\220S\273\257\032\341\273\206\016;={@\374\274\034\rL=\310\320\314\274;rL\275\373u\311\274v\342\270<\362\354\301\274\343\2274=/u\361\273\r\026X\274\003\331\033\275\337\1772=\300\'H\275d\3010\275\207%\371:\262\225B\275\366\222\025=\306\r^\274m9\326<\235$K\275\276;\355<\034\3626=\340[\004=&>\316<\202[\315\274\023\215\312<\340_\006\275\341s\024=D\211\335:\263\306-=\370\234\362\274\272K\t\275\314\344\326\273t`C=\366f\250\2748\356(<\201rD=V\221+=\373\032O\275\255TD= ~\000=;w\366<>6\035=\331\212\242;6\302\201\274\330j\340<\265\023I\275a\321\325<KL&\275\036\305H\275\255\251\024=)\023\366<.+%=\3557\230<\207`=\273\346\352\304<\306\335\317\274\321E\002\2731\345P\274\316\274\246;\0317+=\251\2668=w\3214<v\360&\275lX\233\274\027\336\021=\352.=:\2356\200<\217\227\004\275\016P$\274\226:\221\274\343!$\273\323\267\353<\226\013\007\275\3415\306:\37601\274<;\033\275\373\364\252;\357\327p\2734\207\223<\303\341j\274w\357\216<\374\375\370\273\303\262\246<5O\322<8P\241\274\221P\010;\212U\266\274\370\210@\274\310tl\274\327_\\:N#\223<\336\034\031\275\376c\370<\302\373\004\273\351M\t\274%\2648;$\t\201<\257\223\203<\301\340+=4x\233\274\273A\251\274\260W\221\274\334g\031=px\300\274\301\"\353\273kZ\177;\257DF=\242\305\213\274!\241\352\274\316\312\214\274\212\334V=\347\361v<\32080=nF`\274\267\004\003\275\374\n\206\274\230\224\226\273\002\257V\275\302W\231<\320\306\027<Z\305\375\274$\235\337;\215\321\272\273\226\3755\275$\200\352\272\330\221\374<\007\221\020\274s\335\213<\'\340\001\275\305\363\032=\3116\355\274\322:\346<\231\271p\274>t\001\2755\310+=\352\3716=\225\261\244;\215\216W\274\025\210G\275\344\227\r=\2366\305\274\332F8\275\264$\216<-\212\365\273v\363\022\2758`\221\274\316\3112=1\204\213<\345\350\013<*^\310\273\234;e\274\332\323.\275\305\016+\274\273F9\275\005!|<!\2341\272U>(=\345\006\032=<l_\273\372\205<=B\300\031\275!\271\'=^\364\327:\323&b<2~(=\035\177\336\274G.~\274\262\3335\275+O\000\275\006\2668\275\246\257\021;\306\253`\274Z\365\031;{\000\332\274$?:\275G\231\014=\334Rb;h\025a;\201IW\275e\240J\274\222\357\254\273/\366S\272J\r\t==\204\314<\263\003\201;\3629-\275\250\367\311\274\215w\257<\361\204\263\274A\301G\274>y\244<<\300<\274\311\0306=\305\034\315\274\304\024\362;\022\204=\275U\312&\275\334AO\274\013W\'=\343<K\274_\220_<\037\301,\275`\006\331<\325)B=\340n\214\274\275q]\274\313\333R\275\220\346\200\274\311?\005\275\020\353)\275\362`\247<\025W\261<\"\224\264\274\245\240\371\274\377\274\007\275W\032|;\375u\014=\361\272\246\274\307\273\016<h>\013=\303x\256\274\243\323\221<\005\262==\230\200\225<l\310\024=\3600C\275MW\213;\307z<=4\337\372;\343\247\211\274\030\304\017=-`\257\274\371\311\005=Hv\036\2754\274\273\274\024\320\245\274\021A\'<\245\024T\275\356\233\331<\177\027%=\364\326\340\274-\337X\273W)A\2751F\224\274\205\311\200<`\345O\275\217\202\270<\245\301\375\274Q^E\274e\213\236:\326\267\276;Z\022\007\275\256\253\013=Q\347T=\032\370\r\275KS\354<(\372\242\274\303\256\001\275\n`\374;\264\327\222\274\225\226;\275f/\322\273}\276+;\300\243I\275\253\2158=\005$N\274\027\372\362\274\277\366(\275ok\261\272\373\037\261\272LS.=\244W\346<n\240\021=\267hF\275\352\331\t\275\023\250\r=R\352(=\376\301\266<\037\306\264\274\032]\034\275\337dM=\357T\357<\027U)\275\000\004T=\003\330B\275\302\007\\;c\303(<[\242/\275;HR\274\244\234\236;,9s\272@!.\275\223t|\273\315\371B\275}w)=~\n\222<\362\347\325\273j\333\342\274\032\3679\275\275z\314\274\037a\330\2736\325\227<\277\243\032\274&V`\272{\252(\274\216\316 \275\356\\\377:}Q~<\032\275\330<\302k&<\326\221\020=\256=\031;\037\221\000<A<\177\274\362\234\007\275\001\315S<\003\360D<\273B\035\275\341\310-\275\247*\035\275y\r\333<\261\006\005\275\006\326\254\274:E\036=\022\300\274<:\367$\275\003V+< \002J=\300_\020<3\200-\275PG><\363\250\000=9\020\311<\214~:=[\010!<\352)\022=\306\360<<\340\364\032\275,\\<\275\037\327\235<\'~\237<\320\034\345<\024\203\t\2751vn<\345T\003\275a)\220<3;p\274\242\235\321;n9H\275\013l\326\2743\020\231\273|\327\253\274\231\"K\275\321\273$\275X\264\325<\244\314\244\2749\237I=\214b\350<iz \275\304\301\357\274\357\202.=\241\247\004=\215\020\300\274\275\312\313\274j\204\213<\n&\001;qW\351\274\225\203>\275WZ\321<s\026\214<\376Mc<|\370\215\273E\035D=c6|\274\256\225\271\274\216z\353<\206\302f<\030x\367<I\354\005\275eO/\275\244\364v\273\211\354\367\273Z\027\263<\255\307,=D\316S=m\037\371\274\3674^<\253\372\340<\323\3719\275\371E\001\274G\322\310\274\330\3115\275\260\263\376\274\204-\264;\030\"\036\273a\246R\275\t\204\230\274\322\252\301\274t\234B\274\031\342\251\274\364\2454\275B\202,=\373tI\274\3526G=\\\200T\275U\244\035\274\231\363\341<A\346\217\274\017r9\275\342\216:=\201\'4=\342\3777=\200\327\002=\356\273\000\275sB\373\274\235\312\327\274\030\275\357\273\204\264\233\274\327X\273<\334\335\262<\352@6=\032{\341<\232Q:=!\362\324\274\325\204\270\274\331\274\023\275\000\244\370<YzP\275\272g\244;\312\255\323;{a\315<}\267\037<\303\034\034=\251\025\273\272r\212\257\274\335D\353;b\225\277;\304\332\316<B\025I=.\325^\274\234)\201<=#2=%\230\361:\310\014:<\2705\020\275\014y<=\253\307\224\274\332m8\275&9\301;\314\262 =\235\344\203\274\352\200 \274_2Y\274\264\267\314\273t)\250<q\2235=\200\213\260<\227=\035=\t\035C=\351\266B;\301aE\275|M\235\273\214k\215<\332\227\242\274rD\212<\033>M\275<\r\002<\024\311\363\274\342\254\023\273\32316=\326j\201\274V\355$\275\361\035B\275|\240\241<3H\217\274x\230\027\274\216\034<=\243Z\030<\343\354\345;H\253\004<I\224\311\272Q7\242\274=\311\001\275O\272V<\312\001-\275\240]S\275P?!\275\367\330\276\273\217\377 =5\354\367<5}%\274H\262O\275\243\0141\275\352\216\345<n\036G=\365\330\021=\364\354\241\274\"\374\273<U\001 \275\336\037\247<\330\211\300\272=6\252\274#\364\375\274Q\253l\274r\201\020\275\277d:=\024v\316\274\216\354;=h\032\034=\332\266\3619]\323\027=\2145\004=\223\031\013=\034\321#\275\000\"\316;\237!\333<g\1777<\360\253O=\274\317S=\343\336\346<\301v\002=\352\030\2569\034\033\n\274q/\317\274-\033\302<@\313!\275M\372\003=F\2120\275\262\237>;\273&\004\275\355[\220<A\221\310<\006;Z\273\231\332&\2757p\257\274\013\213\300;\r\317\350<\014\300\244\274=\264\265<\204\017\017\275\026a\371\274\325p\235\274\036\331\350\274\013\271\275\273_\3637=>0\312<>\314\376;\246\017\003\275\006\207\324\274t\351\014=\212\314/=q\243\r\274o\275\244\274\247\362R=Y\177d<K\312K=\010Y)=1\353K=\300i\212<\265\256O=\2619U=E\326!\274^\034E<\245\303\"\275B\305\211<\177\303)=\302\203\346;\244p\250<\355bF\275\214~\311<Jn\271;W\205\031=\223\3752=]\242\215\274\333\242\003\275\304E\345\274\220\343\276\274\227B$\272+\323\014=\233\020\277\274\021\313\025\275Q\017\364\273\364\000e;\010i\024=\336\323-=\237b\"\275\305\344\335<\310\302\003\274~C\317\274\265>7=\367\005\262;\213\333~<\205AA\275y\302\360\274P\030C\2758UO\275\250L\237<\342a\032\2744/$;&7\373\274y \274\273\242~\016\274{\265.=\275\301\035\275\365\3311\275|*`<9\322(=\323fD=A\341!<\014\343\036:\345\t\256<\315a,=\310\007Q<\036!\350<n\n)\275-\364%<S\016\343\274\366\343R=\360\026\245<\317\034\335\274\032\2752\272x4\000;e\301R\275\352\236\351\274\325\252\332<\337\267\252\274\262\263\340<+VJ\275\236\'P\274\247k\364<x\333)<\350\333)\275g.\250<\314\351\014\2747\211/<\231\240\355\274\347\235\315<\323\266N=\2321\344;\205\223!\275\236\323U\275i\000\035=\204\023\005\275_\241G\275\233~\004\275\032\250\024<\250\317\013=\361\001\347;Qy\350\273\200\005/=o\200\027\2759\372\036\275\330\034\326\273o;\272\274I\335\024\275\2278\273\274?\377\375<\367\2203\275\010\014\232;\363\0226<%E(\275\201\360^<\326\260Z<2\316\261;g\355\366<!\243+\273\201\035w<\333\026\237\274\022\260\t\275O\316I<\'\232O\273\324\342\236\274\206\253\313<\360\316O=\277(i\274\0232\023=\323$}\274\301\177\255\273\205J\252;z\227\215<\343\237\030\275\344X\264\273G\016N\2754\017\332\273\246\007\220<\306\371\231<\213 T\275.\310E=*\356\010\274\307\360\235;_\333P<3|\353\274\343P\276<\343\r\022=C\306\332<\204\"?=3\347\343;\"(\202\274\001[\000\275\377\310\025\275\235\002x\274\334Q\262;\326\3357=\236\361;\275\"E\211<\221c\010\275\270\036\311\274\253\021\245;\310\334E\275\370T\222;\032\325\005=\003LT\275^\263E=sI\370<\026\365\016=n\310\210\274_\320\225\274\212\264\373<+\255\016<\226\211\007\275\220\301F<\262\312P=\322\2658=\244\013\274\272\357\242\240;\360\"\"\275),o\274\231^\013\275\273\315@\275\375\356\311<\336\026\000\275\032\375#=\333\336\250\274\203\345(\275\216\322\256\274\002$P=\244\2667\272\333/h\274\010\335\241\274)\014M\2751+\332\2747\352G=\201#\r=\'\276\340<\343A\013\273o\356\210<\273\323c<\007\332\354<\023\233$=\230\210\037=?v\366<_\320E\275Fhw;\242\300\220\274\301\"G\275\327z \274\272\254W<\206H\367\274\341\025O<h\237\006\275\001\271\317\272y\375\037=1\212\227\274a\253L=O)\031\275s\035L\275^\037M\275q\261\255\274;V\252<jm\310<\350z\225\274,\364N\275;\3531=\274\303\210<Z\3106=e\303\236\273\005\332&=\357\346\253<\301\305S\2756\322&\274\031iI\273\014|\006=\361\364/;7\354\355<\374\001\014\275*\373\036=(\312&=\306\272P\275\327\201\t\275\332\360Y\274:|:<S\246\361\274\241\355N\275\316AM\275\236OY<\343:5\275I\374;;\000\376\037\275\03507<\351\357\247<:;3\273/\303\031\275\206\323\304<U\003}\274<\332\031=\334\331\026\275\322\274\026\275&\2172\275lM\311\274\237\202@\275.\304C\275!rI=\374\212\310\274\371@$\275_O\331<\203\2755=\306]\261\274$\034\035=\254\226\312<\205\330\321\274\206\216P=\362\200\372<m\265 \275\355:f<GQ<\275\253-\016\275M\206\217<z6\376;g\236\325\274\023\203\226\274\351\177x\274\264\2108\275\234B\264<\323\"\027\275%\241\005\275\307\020\026=\034\333\203<\204%\217\272\351[t\274\353\\\211<s\371::\003\303\322\274\244u\016=g\225\016\2753-+=\343\222%=m\207E\275\014^\371;\330\n\245\274\356d=={\\\022\272\227\370\225\274\213\261(\274\234\320\347\274^$R=Rl5\275\343\"\340<\026:\223<\374a\262:\335/s<\302\321\335\274 5\026\275\350\004\014\275P\037\021\275\207\307C\275\3662\222<\361\277\217\274PV@\274\310\350\267\274\345d\030\274%f\007=L84<EN\005\275\310\200L=\315\237\246\274\036\026)\274\237\364\014\274\332/\214\274\025\r\312<`\243\200;5\334\274\274\266C\252\274\354y\006<\347e\025\275>\027\022\275;\366\345\274\315L\233<\371NM\275M\245\272\274z\357\324\274\n\3262\273\203\251\030=\021\033 <v\026\'=o!\003\274G&N=\256\212U=\216\342\247\273\306+\036=\254\017\355;uH\355;\267\004\335;\347\203\37598\332\010=\241\0206\275qw\007\275P\274\334<\301\373\270<\022\250\024=\210\352V\275\004H2\275}\363\326\273~\3473\274:\225!=\234l#\275\330\344!\275n\354\245\274\003j\266\274\213v\317<\023\221/<&T\036\275\216\007,\275\263\304M;I\322\005<5m\013=\254\223\022\275\001\2408:0\246\261<\020>};Y\366\252<\304\230x\273\021y\026\275\371\321\010\275\036 \200<b\272\001\275\354\273G=J^M=\356J[;\'P \275\333\0062=.\365\203\271\337\332\224\274\361V\017=\360\300,;\371\002\022\274#\020g\274\026lD\275X\\\035\275\310\205\267\273\213\312\270\2741\3236=U%\030<g\250U=\351,\230\274.\307\272;3\017\031\275\227\340\035\274\326\201\335<\025\006\272\274\357\341S=\255n\003<\224\010\030;{\035M\2751\355M\275/?\254\272\354\274\034\275KH\277\274[\377 =?\003Y<\221\027\254;\260\354\276<\003\246\323\274%\376L\275\322\252==*\333\001=r\266\030\275R\223 =#\276\261\271\3224\211\273\373\014\n\27480\006\275\360\274E8\333\036\214<\265\370\036=~Q\213\273h\254<\274\237\204\237\273\004\023Q\275\021\331\363<3\306r<\256\215\214\274\370\217\n\274\214\233\235<\271\232%\275\244\273?\275\272z\214\274iNI\275\347wD9u.&<\257\034:\275\356x\330<\313l3\274\0258\036<\302\300V=x\263V\275\375K\r=)\277L\275\260\177\250<\272\370\264\274AGx<\263d\016<\t\017\307<\265\300\036=\254\251G\275)\002\342<\377 \364\274\035/\324<\006o\323\274`SR=x\262\025<\016\347N=\'-P\275\"\231\330<I\333,\274]\"\214\274\035\247\241\273\003\037(;\342.\260\272\265\262\306\274\267\222\036=\"\272(<k\303\320\274\205\003\346\274T\261\023<k\0005\2755\316\t\275\344\024<=\305\3731<]\271\250<\242U*\273\335\300\017\274\224\336\006=\347nC=g\341\230\2749y\307\274\306\214\313<\336\026z\274\275\210\200\273\323\371\275\273\272\252\024;l\254\260\274\230\357&\275\254\240-\274R\342S\275`\365\331\272\306\260/\275\330\375\341\274\251\030\366;r\377\216<\3236J\275\310\314\225\273\257\323@\273.1\034=\277\310\206\274P% ;\366\300/<NXK\275\030\343=\275\005B\360\274\307\235\021\274\275p\"=*eB<\n\277\255<\301<D<\331d\306\274Y\035\345;]\277z\274\333\206\013=O\212r\274\267\356B\275\353\223\355\274\207\034r<\317\332\030=;\n\024=\226\303\242<}\020\001\275Po\217\273s\352+=hW\025=\001|\337<\016\0207\275\266\376\003\275\360\365 <.\037&\275\355\325V\275\335:\004=\276\264\327\274\372\224\020\275\234v\276\274\233>0\275y>\340\273gu\365\274\331\262\266<\305Qb<\374\251\'=[%\375;\310c0=\036\313\345<\376\021\365\274\001\365G\273:\316\233\274\323\327\251;%6x;W0\341<\253L\034=\356\rP\275l=\236<\355\324\271\274\251\202\033<owk;\354\234\250<\203\035G=I}\007<\346\220\225<\021z\"=V|\344\273k\220q\274v\227\344<?8\'\275\252\256\341<\261\237\263:\3410\246\274d\217(<\254RL=\201s\375\274\231*F\274\177\007\"\275\260\255\363\274\341\264C;p\213\214\274\331M\261;zH\233\274\345\352\332<z`\020=\236\0142<\\\2016\275Q\235\305\274\024\375:\275\314K;\275|\215G=\250<\206\274Y\014\374;\014\005\021\274\272\243@\275\330\360\364<o@8<\365\264|\274\206;\325<1\027\246\274\350\006)\275\260\302\277<\034\216@<g\325~\274\372>\345\274%\220\034\275(\351\302<\341J\206<\203f/\273\245\031\365\274@a\244;\300\327\r<\307\254\037=\304\032E=$B)<\250\261$=d0\003\274g\303\036=8\275+\274\271\335O\275\206%\347\273y\237B\275\326\002\031=\370\260\370<sQd\273<\276\t\275\363\2453=\206\200b<J3\205\273\273r\244<n\326\200\272\202\255\373\274\036\014\016<\244\345\312\274\237\356z<\367\321o<w\273\351<\",\202;\315\373;=&<\273\274Z\377J<#\201\372\274\264[=\275\360\215(\275s\211\016\275\256\335\021=\313)\252<3n$\275\355!\030\274-N-\275>\216\332\274\342L+=\214\332\317<2\257\030={O\374<$\031\010\275j\275\014=1w <\006\035\023\275F\\I<\235\212\004<\3258\305<\2055\342<Fw`<Q+O=\004\310\314<\027`\234<i.\375\273\241]\214\274\266\204\220;)\373\035\275\305\262\304\274\247\326\t\274:\364\257<\221<1;\261\217t<\221uO\275\331`\210<\030x\265<d{;=v\320\307\274\000\3026\275\345\276,=jZ\017=\251\322N\274\246\335n\274t\334\356:\203\277G\275\235\316\347\274\252\212L\275\002\337\354\274\3434\224<\240S\007<I\017\006\275\345D\367\272F\360&\275\031O\253<+@D\275\310\243\324\273\3470N<\315^5=\330\351\035\275\233=\272\274\371\321E\275@\030\323\274*_\231\274\347\351\314\274\221\330\003\274QMM\274U\260\236<\rT\037\275\277\301\234<\366\276\247\274=\322\301;H3\340\274\373\3522<\206&F=d\25469\007dV=\311\0104\275\214\rV\275\004\277\030\275\004hW=4\036u<`\342\266<\260\214/\275@\265\234;K\220\223\274\260\354\373<[\346w\274\355/\236\274\220+\235\271\312[N\275\2551\335\273\200^\002\275\026\320\312\274o\325!\275|Dt<\240x2\275\305\233;=\331\013\201\274\232\271\375<\010\220\277<3\375\016\272\010\362>\275\225\235\002\273\202=\260;\273\324#\275\\D\241\273!\251\223;\372MX\2749f\235<\314\344[\274\205l\346<\367\357\212<\353\331:=\343X\252<\033RG=\235\333\256;\343\267\235<(\303\220<t?)=\274\320\r=\252#+=\371+\004=W1\365\274\021\2629=~s\t\2741e5=I\232\332\274>\005\032=\207c\257<\037D@=\027\355\030=\234,\r\275sWR=\214\365\275\273\227i\t=\034\352D=\002\204\323\273\256\203\034=5C\222\274\201s)\275\\\230l;\206\322D\275w\n\242\274\247\2315\274K\205\"\274\203N\265<\347\236\342<k\020\336\274\300\312\027<h\244,=0\253\376;Ne\035=\347>\221<Is\312<8\243H=X\316\327<Co\366\274\037\031_<\037\216\260\273Dc\250;m;\241<\003\304M\272\253\346!=\377\2507=(\343\006\275\250\214n<\374[\r\2751\017U=M\212n\274\334RA\275\"\226\317\274\362\275><\204\026B<p\016\200\273#\261\030=\344\226Y<\211\312W\274a\316\325\274\001K!\275\3745\010<p\021\213\272\214-\266<`p\277\274R\001\247<X>\016=\240\365\217<I\305\000\275\034\240\255<Yd\027=\033\035\221\274\206\\\352\273\264\266\305<*^\263\274\233?\r=\215E\323\274i\261%=\222\267\326<\t\237w\2744\204T\275\'C\271:Hs\014\275\013P\220<\362\365<<\306\236\265;P\2236\2740\233^\274\353\021\351<\275?\365\273\257#\244;V$z<\017\273\\\2740\272\240\274\351r\245<\334\352\016:\245\366v\274\006\277\007=\323\3439\275$(\271\274\332\340\024\275\333\022,\275\'\245N=z\3560\275P&\247<\207\r\326<\206\341G\274\031z\017=\351A\212\274\250\211\026\275\375\270\'\275\'\313\330\274\216\264\341\274\ri7\274\201{\237<\302\013\031\275`fL\274\030G\201\274b\277\003=\301\t\352\274n\247E<\273\016W\275l\3211\275y\227\303\274\266E\204\27498:=\345\005\013=\310s*=\337C\207\274\245\226(\275\375)\213<\246\321\256<\211\306\315\274\322\225\337\274\224\254\275\272^6\034<\276\307\327<\201\r7=\225\022@=H,=\275\006\345l<J8\372;\326p\344<\305H\214<\030\336e<\225 6\275\311\3060=\344\010\030<\237\257@:\272\370D\275\263\031\262\2745\234M=\331\361\366:5\034\240<f\007\275\274\333,\306;\022\r\265\2749\211\'=\006\271$\275\2256+\275 q-\275\227\217\257<_?\005;D\204\235\273\345\354f\274\202\265p\274\325*s<\335\t#\275\237\2319\2746:\224\272\005\373\027<\340V(=\023\361\010=\013d\000\275\241\334>\275\022\214\017=\177@\303\274\322\221 <\366.\362\2743\r\376<\273M\245<\312\306\033\275\346\356\356;9\271\021\274>\000y\273q\372\004=\243\250T\275\253\340\243\273\210.\374\274y\367;=\237\221\030=\243\025g\274\212z\334\274\362:\203< \241\276<\267\300M\274\220\001\356\274\340\360G\274\315\361E\275r\361N=d\233F=)\201\362\2733|7\275\350\200\205\274\323\332c\274\253\363\017<t\376B\275\366,\362\274RCI=\213\222\215\274\tm\306\274\312\241B\275\274\341\027\275\004\204\200\271\211\373\336<\314\255M=\240\215)\275\245wA=\244\345\022=\n\343\032=\360\207\002\275O\256\025\275y;]\274\203\2338\275[2I\275L\002\352;\300q\r=\231\035\233\274x\274\202;\305\177\"=sOQ\275\226\300\007\275\320\344\003\275\305\210\243\274\256\364\252\274\215\201\312\274\0311\232\274\227\275\266\274\241\3313\275>\370\027=!\375\023\274L\344,=\315\030\001=n\027\305<\3448B\275\"\356Q=\210Z\234\274m&I=lX\013\275\022\355n\274\252X<=\336S:\275\213\216+\275\210\250\202\273\255\326\313<hM\026\274\266\357F\272\216\343P=\342\357D\275)\274\352<\341\347\305\272\002\375\023\274Y13=?2\260\272S\017\223<U\005j\274\036\026\016\275\226\224\344\273I\226\226<NH\362;\376\207\027\2741CC=\371\277m<\ns?=\242!\272<j\232\356\274\337\364\213\274v\244\010=d \265\274\273n.\274\212\025\346\274\270p\320\274\003\224\002<\220\024\206\274\307\231)=\265\331\000\275D\370\251\274\252\212O\274\0226\020=\341j^<\340CQ\275\207k}\274\004&[<\252\023\220\274#\317\206\272\314\260\031=%\210,\275_<H=\265h\376<\304\377,\275\006a\024\274]\270\220<;0\311\273\356\213\305;\312\267;=\031L;=\210\030P<[\034\017=nj \275\203+\315<I\335\025=\264\242P\2756x\305<\371\324H=\212CI:\355\n\310\274\340\000\370<M0.<\034\360\231\273\232\033I\275$;\235<\034\005_<v\314Q\275\304\2718<\333\255K;\264\334U\275H\0103=O\241h\273\205\270\215<,\t#={\nN=\031:K=Z9$\275\'\371P\275\340|O=\221\"\312\274_&a\272;k}<\312\370\270<\037\030x<\035\260\361\274\332\235\305;\2161V\275\360\303E=iUV=\3275\313\274w\331/\275\235\323\301<N\341\225\274Z\202\274<&\332\212;:R5<F\366G=\346\r\'\274wlK=\374\034\202<\337Xd<\370uu<ka\336\274XX\010\274\351n\027=\242\020\327<\217\177\006:j\360+\275$\'\"\275\"\310 =\344\263S\275\332U\n\275-7C\275U\006\252<*\324\342;\207\221(<\300\010\351\274V9\033=,:?\275\320[0=\214\206\"=\234I\246\274\272@\205<.\344\035=\321\234.\275lC@\275\355\345>\275\324`\247\2742\321X;\237\030\024\275\240\371\274;\376\354\264<=\220\243<\234#9=8XA=\310D\206\274\312\026\242;\244\000\364\273\371\346O\274\254yP=\303gN\275\214@\360\274\215~,\2755*\017=\247\021I\274\212\037#=(\355\027\275?y\271;\234\262;\274\3712F<\246=\353\274\304\036\371\274\222\356@\274\355\216\216<\203\370<\275H\203,=\322\033\024\275\315\224U\275\005@}<\202\350]<Z\314\016=\365\220;\275\230\r\035=\\\340\005\274q\013\325<\211\024\371\2747\307/=;<\006\275\365=:\275\363#+\274B\240<=\340\022\253<\347\315\206<i\010L:<\355>\275\261\031K=\3074\033\274\245\360\003=\177\254*=\">B=\220\tT\274\014\224\213;\016\\\304<6\035\352;\257\357Q=\203\3037\275\203[\320\274Y)\314<\201\370<=<\317\274<\2544F=\364\302\003\275B\200H=\215\320\361<\3020\'=X\244h<@\251\024\275\350H\264<\242\230\375\274\322\2415\275\2775J\275\262:\006\275\002\004$<\311e\317\274\236>\334\274]g\024\274%!7\275o\2050\275Sk\037=XC\3749!\237:\275\252(\234;E\205\343;\372PA<\244v\376<\007]\222<_K\244\274~\023\357<r\267\001\275Y\307/\275AO0\274-\201\216\273S>)\275y\316\020<\236:\031\275k\316\030\275\376\321\237<\014\313\r\275\307[\010=\360(\263\274\366\341\034\275\333\2364=\323FL\275\272\253\345<\177\3725\274\327\302\001=$WP\275\022\341\016=~\344i\2745\t&=o+\240<)\305-=\327\005\233\274\261A\033=\252\357\254;\356\r\363\274d\254\217\274\207\363\264;b2\310\274\301@\247<Z\034\270\274\361\207C\274\360(@\275.\375Q=IJ8\275k4(;\372\277>\275\270\276T<1\024\031<\317Z\023\275\026xV<4 #\275\302[\'\275\220\233\241\274Z\222\272\274\214\344\037=\216>\001\275N\245\033\275\251\nY\273\005h\025==\305\026=\314\024\036\275\237*\343<W]\"=}\262\013=\244I\234\274zOA<\367\301t\274\007\326Q=\246f\245\274$^&\274\3318\034;\257\361b<\017\232\027;\301\275\326\271*\027\326\274t\246Q=N\016\023\275.\3004;\036]\313<\023\257\024\275\010{\030=\214\327\252\274\352\231\024=\350\336>\275\001LV\274\266\020N\274\315D\321\274z\256\330\274\323\000F\275\272\0042=\344/P=\304g\265\272\001\302\023\275\360q\032=\027\231A;\027\024\364<\217\2332=C\234\366\274C\336\302<\224{H=9#\376\274\231c\205\274\017\210H\275\376\247\213<\017T\276<\352\223\302<X\300\245<V\357U\275\331 \341\274t\276\333\274\232_9\274\373\024\373\274\311\t\030=\274\212\035=r\264\034\275\000:7\275\317\263\274<\216\0377\273:\010\313\274TR\001\275s\343\032<0\356\254\274T\243\025=\241\315\022<\013\362\222<h\215P\275\013M\210\274p\342\224<\376\003M<\344Tl\271@\"4\275g%\340<\333\022v<P6\252<w\177\335\274\032B\214\274R\231\244<\t\224\017\274o\343\177<VlW;\351\304$\275m}o<\241P\022=2\025\033=bF\332\2743\2757\275K\322\244\271b\023\006=\362\325\n\275\357\231\034\275Z\375c\273(\257\036=\312f\224\274\272<\335\274\346)\261\274\001\367P<\t\204\240\271\005\306\205<\366\353a\2741\3671\275\253\310R\273\021\225\217\274B*P\275vd\353\274\n\246\017\275\242Z\370\273\271HU\2758cG\275h\266\001=\317\260#<\226\'\367<-\313,\275\006\t\010<\310\257\001=!\224A\274! %\275\007\276+\274r\nW<^,-=v\304\220\274p\323\320\274{\"L=\361\224m<\035k\363\274\027h\034=\222\310\235\274\031\335\367<\375\227\364<;\022\210<af\360<\206s\001=\200\206#=t\037\266\273o\376\377<\003zN\275Q\236\003\275 z\013\275%wS=u\250\005=z^\337<Q\t\356\274\253^\031\275\242\347K=a\332\221<\303v@\275\275\242\232:%\237*\273\272XA=.\343R=UD\007\275+\343\222\274\\\205.<\2225\377<\327y\020\273\234\036\001=\322\265\032=f\224\307<Q\220\023=`\264\231;\3338\241\274\317]\201\274\315b/=\230\361,\274\220\020r\272\271\323\300\274\006=\366<b*)<\025P\"\275\227\027\300\274qa%\275\301\212\030=bH\266<\026\204!\275\312+==\267mW\275q\262\'=\247\311\n=\265\253\256\271\335\031==\013\264\375\273\221\2534\273\212;\314\274jt\372\274\342j4\275\237Y\032\275\037\035\354\274\367\216\031\275\214O\372\272\273k\200<\013\315\357\274&k6=\2606\257\274\250B\025=\211e\004=<\365U<\273\371\347:\010\n\001=\275EF\273\334\320K\275\\\350\373<.\264S;\263/.=]\035\276<\325<J=H\001\010\275AE\342<}\355\263;\221\013\304<\354\212\177<\243\003\272<\217\231%=\272\330R=\002\242d<\335\366G\273S\017c\274\275a\037:|U\304<B~\363<\257\r;\275\036\221\376<\311\322%=v\303\t\275\023\347\315;\364-\351;\316\\\276;\315\275\306\274J\325\316\273EK\237;\300#.\275\021\307#\275cG\010\273\000\3354=c\213\334\274\222\004\231<_\021{<N}<=C\344\375<\217\361\247\274\014\271\026\275\336\321\262<\223e\023=\031\334\027=Y\310\010\275jhT\275\364\305\352\274gW\265\274\304\277R=T\251\324\274\372\023\321\273n\225\036<\310]R=\366-o<\373\302M\275\311\211\n\275\353\312\030\274G\003\316;\204\031\323<\2068J=t\233\003=\364\273\005<\2656\010\275\226\t\177<\177;\001=\271\250\002=\325\336\023=\013k\036\275\346\037,\275\023yO<\371WE<\332I\327\274\370!\264<U\215\231\272$\253\355\274\3407\366\274TY\027=\177\312\344;\031\360}<\025\0345\275tHF=\263\203\315<\027z\003:\222\013E=\256\223\277\273\227\302\367<\322?\307\273\325\266\210\274\231.\010\275%\374\007=\244\025\236<\222\376\261;u_\025\271L0\032=\022D\037=\357\361A= 1\301\273\234l\023\275\246>+\2758f\220\272J\326\313\273\023\276\340<*Q<=\'\207\371<\035\037\274<\263\370,\2754\263\317\274\002\270\016=\204,\030=,\362T=\267\240-\275\372\355\370\274\343\037\000=\037+\001\275[\324~\274\010\014D\275\366GS=\207\031E<\307\332(=\217\305\272\274\027\254\301\274\301\320M\274\001\014,\275=G\363;C\376\366\273xNP\274\216F@\275$\210\300<\255\313\246<\316\220\226<\323\313\032=\244n\"=\332X\n<2j>\275\221\231\224\273\274\303w</\331]<\310\310\030=\364$\214\274\301rD;\024\000\333\274\202(!\275%\006y<d\3501\275\325q\034=f\262\365\274\261\225(=\377X\021\275\306\355\344<\234\275\024<SI\010\275\315\266(<ND\t\275\016\221x<t\317\323<\237\300\260\274\031\202O=4\013L\274\317k.=\340\203\3278\366:m<~\377\036\275\311[\350\274g[h;\0138\261<f\255\344\274\247qM\275\250\371\273\2741\235\261<\277F\013\273-?\026\275!\240\205<\202E}\274d\331\006<<X\247\274\322\2458\275\030\3345=\246\303H\274J\346\"\275\005\215O=oC\245<S=v;\023U\030\275s\"T\275\337(\360<D\352\323<\221\355\236\274\212\2226=\262=\317\274?\325\324\274\372\\o\274z\000i\274\234\243\341<%\322&=\201B\237\274h\033\033\275\346\306\023=\252CL;r\335$=p\221.\274?Z\355\274k4\235<\r\312\212<`\006P<\256[\022=y\246\"<\372#\014\273\347\215(=\270\252B\273\352\005Q\274\037\241\334\273\356\211N\275;%\277<\243\335A=wv\255<\244\244\037\275\375~==\307\371w\273\225v;\275\3248\017=\245\256)\275\336j\035=g\306k\273G\235\301\273}rC=\031 \n=\"F0\275\330\247C=9\266&<\355{0=\201@T<Q8\021=\227\377\017\274\245\2066\274\277\3146\275\256\017\254<\300\256\347\274\032CW\275p\0278=>J\345<)\331\026\275\353OM\275)\352(\275\245y\006<\307~\010=\324\344\032=\346\265);\266{><k\322J<B\346+;\223B\313\274+\277\215\274\255\315\036\275\203s\306<\013\263\215<I\362-\275&v!:K\361z<3y8\275\322\177\037\272\350\0323=\225\321\001\275\031|g<\341 =<|f\346<\0319\244<\236\343\202<\t\022-\275\333z{<\037\031\n=\373\214)\275\244\262\376\273J\335<<\010\361\031\275\316\330=\274[\264\346<\210\370\233\274WC\341\273\3569B\275\027\036\001\274\3604\327;L\262)\274\t\317\000\274\372\250\220<\211\216*\275\236\205\346<!\"\275\274\247\270U\273\311\320\237<)4\342\274\353SP\275\227\336\341\273\23490=#*\300<9\\\035=\367\363\373\274\203\236\312\274\\\027@=\3536}<\366\352\003\274\366\216\265\274\276\333\354\274\227c\2569\251/\263<\243\223\014=\330\271D<6=\377<\251iF=i|\221;\246\242\036\275\316/\233;\2156\303\274\270\300E\275\342\"7\274a\036\226<\001\365\354\274oj\010=N\267\033\274JY\221<DK\034\275\024\025\031=M\326B=\245A\036={Z\r<*\327S\275\241\253\327<J/\253\274`\321\000=\350\020F\275\240\213\274\274\350\0267\275\204\343\272;t\310\017\275\355e+=U\347\023=\331 \322<\233k\016=\321\202\276\2749(\335;\257$\320\2742i\036\275\017\026\214<\036\315D\275E\347_<\244ih:\264\304\032\275e\'\005\275L\021+:\231W\305;\322\0223\275<\211\257<\307\305\250<\257y\373\274\'\253\000\275\362\302x<\007*\261\274\3174\r=\302\177Q\275\031\231+\275\303*\245;,\262\253<\003\356\354\274d\356G=\353\373\030=k5\366<(\226\024\273\014si\274\353\225\216\273\265\257\221\273-\035\354<\2405\007\275\177\306\257\274\221\260\236<\267\255m\273\024\261\n=\022\310$\275\214\"S=\315N:\275t\005\206\274\217F\202\274\372h+=\201\272\315\274L\207\235<\363\210\372<\315\322\250\2745\202\016\275/\342!=\361\275-\2756\014\337<\021\003\224<\030.F\275M<\303;+\"@\275%~\";i=I\275\231\342,=\260\271\343\274P\013\247<\305d\000<\364\274\305<\303\212>=S\321\220<y\020\254\274\370Q \275D\242\337<\324\263\216\274_xl\273\235!v\274\320?\270\274\201]\026\275\351U\002\275\354Lk\274l*\363<H\2177\275\031\241\357<\363\247\330\273\260<\305\274$G\244;\30510\274\270.\013\275_\326=\275as\250\274\336,\267<\263V\360\274\271\342\377\274K\213p<B\037\217<BT\030\275|\337\273\274\000B\354\274\201 J<`3\256<Vh\322\272\377\277:={\352\007=\'\307\215;\202\n\030=\tEi\274\226\022\343:\253+\034=\350\320.=KHw<\346_\023=\235\202\035\275\366\225\030\275\247\374\223<$L\356\271n\240\220\274\203t1=\234\024-\274\364\3428=\341\212*;\234\215<<\252\263 \275,`V\275\360\232\267\274?C\255\274wT\317\274\340U \275`v\226<\341\367\345\270\323\213\032;\205=\363\274\240\222\332\274\253\326i<U\321\300<Ba-=\333\'\252\274\370Z\003\275l)\254\274\213\324,\275\345\250S\275\340\245\004=7#\351<Q=\002=O\350\305<\2362\241\274|\267\266\273\306\272\016=%m\324;\247\'\265<\375\371c\274Nn\242:f\276\332\274\360QS=\220\256g<\213)\304<\'\364K=^\235\375<kjD<\036\257m\274\254 \257<\223\307F\275\312D\271<\252\220=\275b\261\035\275JA-=ld\200\274\030\336&\274-6\313\274\361T\016\275\267\376\250<\362;\004=\356\251\310\272\213\271\325\272%\231\036;\361\332\000\275\037\313Q\275\245\rI\275\210?\364\274\340\233m\274\357\023\257<\016\317\320\273\204\001\304\274\236\326\023\274\325J\006\275\337\034a<\252\346?\275\rMH\275\362B\001\275e\361\233:\332jT\275\033X:<\325\t\031<e5G=\351\344`<\023\335\016\275\017\030\306;\277p\252:2\200\014\274x\235\261<v@\037=\250|\363<\260,+<\300g\204\274\021{G\275\205\307\343\274\202\203\007\275\t\341\024\275C\363#\275\367\323=\275\255C\017\275M\027U\275\375\200\007\275YR\376\274\2108!\275|\333?\275\013M!\275\266\362\005=\305\324\035\275\211q1\275\035\315\251\274m\007\243<\254a+\275^\321\310<e\344\273\273\364\263\007<A\260E\274\270\317i\2748\244\363\274\202\301#\275{\265\351<\200\271\266\2742\350\031\274\272\r\033\273Z\246\314<b\031\351\274,\254^<j\235>=\2107\r=\221\262\331\274O\273\321<\n@\332\272`\255\002\275\364\\\006\275\010\363O\274\356\251\373\274}H\254\274!\360P<\342\225l<DV\235\273\333\263\356<\343N\036\275_p}<[\326(\275\272\355+;\343\243%=l\207\223<y\324 <U\254\234\272\016D6\275\240j\005\274y\267\225<\251\226\007=\334\363Q\275\307\267\361\274\034\324\202\274\213<T=\345\246\226\274\270\235\030\275\243\017\017=\264\237\347<M`-\275>7\027\275\360\321?\2746\034\246<\324\220\203\274\"c\020\275w\002H\275\367)\255<\201\r\177<\376\232\317:6\316>=\260;1;N\335\374<\237\020A=h\026\330\274\360\205\353\272\245\230<=\300\3111\275\026iX\274\035\342\332\274\014\367\262<~@\037\275\205J\313\274\355\320\027\275\256\202\001\275\223\325\323<\035\202\024\275\245p\274\273\276\355\003\275\247\333!=\266\237\306\274\006\227\342<^$\023\274\333\177q;\271y\013\275\033^H=\337\323\006\274X\336\304<\317\354\036\275\227\335\001=\332.\256;\206`G\275\014\2457\275\340O\254<\307\335\216\274\230\245O=\352\224\223<.\277\246\274\004\271\n\275\246\304\215<=AV=9q[\273]\355F=7\226\024=\031\255\013=\352\010\003=\213\210]\272\276\210\037<\322\002\255<\006\000\r<\010\033\254\273\340\203\367\274\326\213\351\273\221q\305\274\356L\347\274\270\217R=\355\236.=\370u*;\245\\\325<\321\005\337\272\016\177\243\274\214y\n\275\371\316\364\274\030`\270\274\205\003C\275\263\346\330<I,=\274j\331\345<B\0277<\310\010\300\274_aQ=/V\345\274\336\223\026=\024\272R\275\007\371\224;\301\302\225<|\276;\275\212]?\275{\243\005\275\341\\4=\343y\014\2747mQ\275\037\021\013<\360[\014\275$\205R\275\352\312\205<\341\034*\274z\2234\275j\2043\275o\260$\275\214\355V=D\216\247<\325\264\326\274P;\014\272\'8-<\0073?\275g\202S\275\243\334\024\274\034/L=E\245\002\275m\023-=\035;-\274x\320\206<\373\373\260\274\377\370R\273\330\3052:\227X8=\305<\337<ak#\275\2315\025=\020\371&=\314O6\275\323_\350\274\370\326\350;c\000%=\373\270\007\275\241d0\275_\022V=6\375I=\014\321\267\273\3027\234\274\236SE\274\032\005N=\366L\317\274\230n=\275J4\344\274_\325;=_\000\377;\270_D\275\251\035\211\274\254Q\256:\254m5<\344;\304;\216\333\000=\245\331V\275Q\216\325\274\010H\024=\315/\343\274\340\277\325\274\356\262*\275\246\325\315\274\305\361\010=\325,\003\275?5;=J\371\343<\212\323>\2754\340\346<n\275\315;}?M=,\331\007\275K\247\007\275\3546s<y\346\306<\277\336\315\274O\005\006=*\244(\275\237\177\221<\230\374\031\274\3510\347\274o\326\004\275&GV\275.\233$\275\r\251\347<\002\036,=@O\273\2744\210&\275[\025\034\275\374\237\355<\344\001\331\274\322\307C=\254\325\002\274\321\260N=\017e5\275Ln2=\272\257\r<\001\0303\275\365P\r=\320\301\367\274\313\334 \275}\274I\275\355X\022=\313&\335\274\307\244$\275\330\340\262\273\331\311\266\274yUj<\2533\024=\377I\217<2et<\251\334\260\272\225*\005\274T\230U=\376\331S=\r\263\357\273N\236\236\274d\003\341\273\023\013\223<\332\202\351<\376\366\027=A\3307\275\022\250\021\275\242\216D=\261\323\013={v-\275\311\346<=\334\274\200\274\017w4=.O\227;A\240\032=\244|\007\275]y\361<\205\347\260\274\214%\261<\016\224\261\274D\354\253<!\342\001=\022\334\211<\202\224;<\325F\020=!\010\225<\336\301j9\021,\301<\326\232I=\024\373\251\274\357\270\242<\201mT<s3V=\313\356\032<J,\024<\226\233M:L\326W<h7\000\274V\257U=\217\251^\274\257\255\202\2742\365\251\274\037\243\026\275\302\333B=3[3\275m\215\033\275\001]\227\272\344\307<<\350\331\016=f\233\'\274\3102\237\274\330\262\343\274\240\320\310\274\231\214\032\275\323\2209={\324\207<\357\202\004<,\272\014<\3319\244\272@1\014=4\306j\273^\030V\275V>g<\336\241 \275\373.K=.\034\023=w\000\253<\017\200\221;-[A\274\240\000\263\273d\374\024=\257\312\006\275\225\005N\274\355\254G\274\2068\331\274\352\336\027;\207\360F\275yp\006=c\010\n\275\212\272\311<\304!==r\277>=\230\302C=G\265\310\274:NE\275S\236D=\240\022\023\273\330)\346\2745\001.=\007m\361\274L*\257\274\222\372|\274?\343F=?\235;\275\222\311\221\274\247j\206\274\215\253\245\274\242\"F\275\"C$\275\312\343\002\275\243Pi\273\324S\215\273\322\2158=dp\001=S\000\224<\241&\315<\\F\r=\234\021@\275\363\263\221\274\020\344A\272\033\245B\274\350\177\246<\347\014-<\002\371\023;\347\340.\275\311>2\275\n\032\010\275\251\277y\274GG>\275\t>\212<\325\322[\274`\224\016\27507\031\275h\340\275<%7\265\274\360\250\342<\253\2652=\002n\352\274\006M\026\275\342\005\'\275v\002 <\216aj<\261L-\275\207B\210:\017\005\302\273\365\0275\275y\372\005\275\336o\262\274\255Ek\274)u\201<\300\234:=2\0142\275\240\223K=\016[\356<\005\013v\273\230s\002=\026\212R\2755\024(<Uh\242<W\0047=\307@I=\226\2455;\325\242\336\274\201-G\275\343\3602\275<1\240;\260Q\300<\262\027\377<W=4\274\362\267\027\275w\337:\275\364^A;\325l<=\001\242\363\274\216E\033=w\027\262\274\214^|<\2732\026<\375*p<\034\343\244<\2549F=u?D=\376\215\311<\322V\242\274#_\000\2752V>=m\353\334;\315\352\324\274p\221K<G2\213\274\357\317P=\363\027\214\272c\017\236\274\336HI=\266/\331<\204@\203\274\365+L=\357QD=\321j\010=\257L\226<_#\306<[\204F=\037\366)\275\010\375\032<\246\346\n\275P\346\301\274R\310\017:%\262@=\025)H\274\316\247\272\274Y\r\014\275\363L\003<\257HW:\223\2612\275\242\340(=?\355,\275\014~\337;\265\300.\275\304\343\334<\265dQ\275m\236,;\002G]\274\247\302\005\275\005qa<\3339E<\253<\215<U\325\275\272%3\205\272\224\247\013\274b\'4=\255]:=\036\251%\274\277\203\313<m\020\331\274J\267K\275\304\317\343\274\002d\230\274\361\244*=%\030\204\273\213\231\034\275\322\320\000=\212+@<j7\362;\000\302B\272\3446\320\274\301\241\001=\261D\032=zj\257<\245\r/=\312\362\372\274\036+\234\274z\317\"=,^\267\272S\273\275<y\010\375<\267\211S\275\374\364*=\240\210$\275\005Z\367\274a\313\"\275\221\025R\275\241\211\315\274\335\261H\275\362gS\275\234^\323\273\337\223@\274\237Hk<\\^@\275;\206\374\273\tYN=\007(\034\275\2426\230\273\221a\313<\350\005\007\275\332{\224<\310bm\273\021\236\032=\327t:<\233/%<\256\366\213\274\252\276\033=\006\2177=\205d!\274?\274\246\274\003\312\227\273\264C\361\274HQ\023=\350N\213\273:\337\020={7t;t\317J\275K\034\300<\0035f\273\345N\335\274\177b\345;M\222I\273h\255-\275|\263\006\272\251\303\300<;\2174=xm\000\274N-\257<\202\224\n\274\226R\005=Rt\362\272\306!\326<\\B\363<1f9\273\242^><M^u\273\030-\017=\000U.\274\033\312\326\274K\370E=\375\312\006\275\236,z;\317\2414\275\315\354\375\274\264\r!=\327\251\310<vM\314<\264\333\225\274\320\002!\275;\247\264<\034\002\003<\357\240\350\273\257l\024\275\256\343\203;\r\334\217<\r\254\033=+R\366\274\301\236\373\273E\266\034=\243\002q\274!MS\275\007\033\274<\255\313\026\275mc4=\252.\355\274\030\270\030=s\0059=\177\361(=\372\350\301<\000\365\375\274V\000>=e.\273\274D\340\007=\210\2157=\327\212\300\274\251\221?\275\344T\301<R\356\036=pT\035\275j\366\207\273P\2526\274\307\321-=\360\336\266;>^?\273\350e\272<\2762\350<\315\266\276;\315\2768\274@\241C=B^\302<R\3710=\200SV\274\274C\227\274yXR=\237t\n=\324\355h<\253j\017=\244h\340\273\350\234\274<\247$\241<\312NG\275n-\212<U>n\274\241\207M;\310~;=\007U\253<!\352.=\231\324\207\273\323\265D=\354\375\017\275m\336D=\033\246\001=\301^7=\001<\000\274\301\010P\274\270\340!=\215\240\027;}\364)<\243\373\025=\022\023\336\274\225\341\306\274\371\032\216\2743\323\324\274\357\251\340\273\201\014\351<\324\352.<\341P3=\227\3456=\266\037X<\242KC\275\022\266\027<\307\304\n\275\322/7\275$\227\016\275\177\313&=t\325\003\275\332>\320<\331\024;\275\022!\010\274\244TT<2\242\005=\360&3<\320v\013<\035\0028\275\n\272\225\274\267\005\235<\236c\326<\211\265\004\273\2466N\275\030vl\274\226\030\022\275\366\315\364\274\201\236(\275\210\233\032\275\'\024\326\274i\246\023\275\0012\333:\260\033R\275]\235\"\274\273\252\004\274\032\220\326\274R\261)=?\303\300;\333P\253<\244\320;\273\225V\023=\031\220\033\275\202\034E\275L/\032\275Qx}8<\254\252\274w\340-=L\226\203\2739\367G\275\217\340\311;\313\266D=oOQ\275\0260\002\274\343)*\274\013Y\r\275\335\352\313\272\002\007\005<\365\027\035=M\345U<~\210\217;|\013\002\275y\254\014=>\275\030\2751\333l\274Bg\024<\264b\277<\374$\276\273\303\256!\275\310F\036\274>\304\223\274\361\366\374\274]$\310;0\326\036\275\375@6\274.\307=\275\322\241\032\275\021\231\023=\356T$=\342\335/;\021\314\333<\026\034%=T\247e\274\240\200T=I\320\275<\257\034\\:\025\017\372\274A*\016=\311\371L\275\216\032&\275*\224E=\340b\321\274\260\2379=\'tv\274\240\230<=\206(\002=V\"\003\275\214\342\035\275\233\247\363\274\241L#\271\311\241/\275NA*<\261\200.\275\317P\020=.\332\250\274r\251K<H\223\333;>\0369=\351S\212<9_q\274u\024\240<\024Z\271<\254l\274:\"\360\002=9\346\003\275I\2165=\0108U<\270\345\304\274\033\307\006\274\3658\000=H\214D\275\310<L\275n\315\204<\367\324\327\273\36458<6h\032\275\021\254\301\274\275\024\006\274\244\0321<\302\355\213\274\315\236\027=\000n\207\274M\3265\275\345T<\275\355\356F\274\255\237\"=\316\003A=\321\0020=\037\326\240\274\035\376\312\274\367\026\226\274\326\221g\272\221\237\352\274{w\t=\333\271\242<o\245\204<\256\"\334;%\223\320<\262\237\241\274\273D$\275\006\342\025\275\265S0=M\226V\274K\\\361\274\311OM=Fo\263\274\331\314\250\274\350\260\013;\010\027b\274\352\231+=\245\304A\275dcH\275\013\256y;{RP\275DQE\273\276r*<\311\210\303\274\204\n\"=;\344\200\273\262\275\257<>\260\031\273\315T\017\275\252[*=\353\371\033=\264+7\275\255\203\344<\303\\\375<\013x\274<\237gC\274A\266\257<\355\221\020;j\342\306<\360\037\035=\027>W=Xt\027\2748G\271<\236\244\270<\024n\315\274_s\023\275\277\212\373\272\312\001\313;\273-\202\274/\027\027<\315N\212\274\315\031\265;\021\034\361\2743\3424\274\276\202\327\274\333\310\261\274\013\327\343\273\034!\346<\327\212\372\273ui@\275\237\336\260<v\355\267\274;\030#\275\342\316\020=\200\326:\275(\322E=\003\031|\274\313\201)=d\021\333\273\013\326\001;y\346D\275\241\202\221<\020p\330;\027}\345<\n\352E\275Z\2704\273\263\245l; \017B\274\r\365>\274\323\2724\275\271\354\352\274,\200\354\274\201&\246;:\365K\273\326\002L\275\211\030 \273\032\347\252\274\224\001o;\030e\020\275\274\033\226;\375)4\274\026\302\327<\227\357\327\274\226\264>=\r5E=#g?<Z\247\022<\350\307V\274\245eD=0\327\205<\221Y\301\274\034&t<\216B3\275\220\220\263\274<\367\353\274\357L\203<&\013\274\274o\030\001\275\334\035\223\274\373\313\016\275+\336\275\274\245\314\026=\355D\200<\233\037I<\213\004s\274?7\353\274Q\317\376<w71\2745\263\354\273\035\240K\274\305v\031=\255e\035=\334@\265\272U\211\352\274\020\246\237\273\223S\364\274)e`<4\020\254\273y\210G<`M\255\274\306\324\037=\035\355\214<\273\347:=\377kj;Y\333\331\274j\1778\275X\233<\273\037P\005\275\260b\261<=\223\353\274\200\257\266\274a\260\321\274\251\314\023\275\263\341q\273\203-\003\275\235\214\230<s\206\214<\304&F\275]\"?\275\'\201<<\301\027\256</Ni\274F\334\346<*5\375\274p\336=\275\235i6\2755\212-\275e2\345\273\301\224f;\003]\016\275\361\246\250<\243X==F<\034<\032VU<\241o\n=\033}\253<\226i\311<(i_\274a\031\305\274uGT\275me\016\273Ca\n<ej\033\273\263\373\215\274\227\227:=\236\247\252\274\331<\334\273\301*\226\274\332\365=\275\0061\024=\'\272/\274\032an\274\177n\002\275\261\n\021\275k\0042\274w\276\323\274\216\2407==\'P=\020PZ<\300\034><\377$\262<\342\361\244\274<\363%=\270\335\214\273\001<\032\275\305\205=\273\034\003*\274\317\342\311\274\330\341\037\275\017E;\275\232\327.=X1D<\253\227P\275~Y$={\034\306\274\352\204\331\272\000\212$\275\354h\353<^D\273<7\221\000\275\327\365\314\274\247\350R\275i,^<\223\347\022=\306m\347<g\2405\275ov\005=\277 \236<\205;z\2745\230\013=@\\0=}\234\235<\336\301\267<5c\333\274\221.\361<\327\352\332\273\304\207V\275\316\214\371\274\353N\024=N\3564\275\300\211\032\275\211,\222<L\323\236< \263c<\233\021\r\275\267\032\257<\317G!\275\010\224\'=\"X9\275\2766\357\273\327b\242<\214/\016=}\361\205\273x\013-\273\316F\n\2755\027\306\274\376@+=%\212\200\274\016[\261<\333\241H=\203\372\032\275#\321\344\273\327\331N\275\216\235\031\274q\022\313<\207z\274\274`\237\266<\005fP\275r\331\301\274\000\014\004\274U\177\031<\260e==\t\271\n=\221\375\007=~\210\000\275\324\254T=m\036:\275\340\t\346;/G\337;\331)\364:=er<\221\034\270\273\244i\t=\303.\311<\245\302T\274\326\343\310<\207\233\"\274)\371\034=\252\254@=\023\343/<\306\353\326<\036\202\271\273\223\311\024=\033\265\364<\316\326\271\274\376\313\"\275XP3\275\2104H=+\364\001\275\340p\005<\t\030\332\273\002[\320\273\221\3274\275\014\203\240<Mxa\274Q@\010=}\266\213\274{\227\037\275\370O\210;\326\0105=5\313\331\2743\034\356<_\262\005\275\312\211\025<\237/\030=04\345<\335\362\005=\276\2364\275\203o\227\274Zj\000<\302\202T=\211\323\222<-\244-\275\340PI=\260!\312<\340ik\274\341\356\013=\237[\017\275\351\346\003\274V\235\322;\206\033$\275\322]\020<f}\007\275\313\207\226\274]\3325\275G\341J\275Q\272F\275pP\014\275\223O,\274v\250\206\274\2119\325;\242\367\260<\203)n<w\367t<S\370\316<\030\2313=\341\3362\275\313O\263:\2140.\2755Zo\273\344\030\204<|\035\235\274\271rl<\224Rr\274I\260T\275l\3465<^\362H=?0\262;j7\n=vY\033\275\316$\362\273\232\303\246;\350\232\333<\270\323D\2751\305+\275+P\344<t\366\310<\220\257M=I\331\014=*\273\272\274\037\223R\275s\036\215<\023\276\350<\362@\221<\205d\272<6*\010\275\206\355\034=\263_\004\275\260\322\320\274\025\316U\274#ZR=\240\003\035=\004t\035\275\261\266\246;\351\'\354\274G\232/\275\002{\324\274\320\'\321\274_\344\034=\354\263\275\274\277\246z;D\320\017;\254m5\275\210.\261<\247\3261\275Y\307K;\356 \262;\355\361{\274\031\031\253\274C\375\n\274\361|H=nM\256<s\225$=\337b\230\274\347\002\033=\210dJ\275\001\322\205\274\340b6=\370\032+=\276\305\363<\310\221!\2742\322+\275w\214\032=\352/P\275\206\010I;+\235\264<S\276<\275\021\256\227<\237\205\001\274>4/\275*\364\333\2727\211p<\315J\215;\215\342t\274\\\210D<]#\025=nz3\275\\\217)\275k_\360<\245b\256\274\t\027J\275\3177\303\274\254\263\032\275\226\021\201\274)\031\036\275\355\222P\275\251\321\372\273G^\034\275{\363\333<h\221\357<r^\341\274|\253\373\274\013\341\235<\227\013Q\275\232QS\275\256\375\031\275\'\212\271\274\032;\325\274\343\255J\275\235\221\327:\365\002\007\275\263{R=e\366J<j\\\371\274?\004P;e\324Q\275LHS\275i\264\021=dk.=86N<6\302U=p\240\031=\375Mn\274\331\0214\275\014.\031<\003\036\036\274%\017\2779i\010\037=3\"0\275\357\257H=\266\024\342\274\363ER=\020\337\337\274\001\013\002=\030\326\267;\337\010+=\313\'\324<\334\0243\275%1$\275-\256\025\274\327\224\203\273\334\251\212\274\025\236\247\274m\'\247\272\272o\020\275K\377\367\274)x\246;b\203\264:%\362\342\273\251\216\036\275\\\275\333\273\010\034H;\036FM=e\265\030=N\355\000\275\"\205\364\273\270\272_\273\224\205D=\376\221M;\030F5<\321\257O\273\332\366\302\274\214P\033=\002\367H\273\001CF\275\"\027\317<\314\"\264\274\242m\242<J\245N=\241pE<\322u\021<\374\315\016\275\032\000\205<{\236\215:\237[\325\274P4+\275\373B+=\253\375;=\227\367\227<A\202\354;QE(\275\305Wn\274\374\207\315;\303z\023\275\306\215\033\275\357A\212;A\205\237<\215\006|\274\205\216\310\274\030gR=\233\354\376\274\265\273\306<f\360V\273H\335\032\275\243a=\272\217+#=|x\001=E\211\315<\236\227\320<C\375\222:i\243\016\275\252\022\260<|\367\264\274\t`\352<\275\210\001=~\024!=zcj;|\261B=\031p\250<%\006\024\275\267\3723=i\263/=\342\026\210<\317r\232\274\0109\300<r\323\332<\305JW\274_v\221\274\244\220\"=\327\371\255<\264c\256<\033\240\252<9tF;\225\266\252\274\226bS=N\252\003\275\352P(<w\010&\275\343~>\273O4\222\274O\254\375<\374\034\275\274\003\223\222<\335\343I=qEP\275S\024\001\275\344mg;\3275\005\275\221_S=b\225\'\274\346@\267\2749\030K;\244\326\002\275g+%\275\262\007\334\274\210\327\235<wr\312\272z{\357\274\177\365-9\004\237\373\274;\272\004\275\354N.\275\356\206\024=\231\034U\275lr9<\276Q5\275\324\203\353<\322uM\275\365F\341:\305\301\241<\264l\302\274\\Q&\273\226r<\275\2271\262<[\016\345\274\313~\036<0\352\317\272\216R\266<\207\247\204<\017\312\262\274\334w\204<M\256\325\273\336wB\275\245|z;\024RF\275\327ZP=\025UQ;N\324\367<\t\2638:\357\205Z\274\260\2648=\246\032\t<|~2=V#\005\275/\"\026=Cn\260\273\360\0166=w\014\363\273\037A\234;\001\237\343\273\222S`\274\343`\337;.yG\275\335EC\275\341\344P\274\005\212\021\275\361c\320<(\324\002=z\277z\271b\302\010\275\2266\313\273\202\273\315<\325u\247<\226 :=/S4\275\312\031\014\275k\364\370\274\302e9\275\337\272@\275V\305\020\275\221\001\202\274_\261S\271r7\235<\300\\=<\2424\034;\364\233@=\346\313N\275\347\315,\275n{S<\322e\217<\247/\254<\010?\211;}E,;\212\252H\275\335-\356\274\371\233\232<\327\332\036=\217\033\261<\263K\007\275\202H =\202\274\217\273<\033\001\2742\270\232;\246.R\275 \234L\275\244\335\321;W8:\274\203\tF;\033\2019\275]@4=\020q\326<b\311T=\372\236*=\323\006\000=X3\021\275\204\004,=\361\335W;\201`-\275\007\n,<_\275\n<\024c\025=\277(!\274\220i?=Y\306L=\031\367m\273Z\215\307<{\315\230:\300+\371;\225F \275\374\263O=\243=\216;\226\210\257\274w2\330<\364\037\014\275\220\273U\275X\202\207\274%\331\n\2741\235v<[Q.\275[\331\211\274t\203\373\274\337t\354\274\227_9<g\371n\274\352\375\223\2736& \275\032\202\207<\223\372\227\274\346I\335\274\007\212d\2738%R\2753+M\275\310\335!=\024\325\251\272\272\2508\274\324\2641=\002\355?\275\207r\031\274Y\323\"=\020]\230\274\023\025\314<\001\3522\275~\033 \275{\177B=\343x3\275\006\201\253<\005\366\312\273z9]\273\2714W<c\373\264\274&\343\313<h\035\031;\373\235\211\274\242\221\273\271o39\275\322\034\222;\216\302f\274\220\212\307<\3225\232\274\306\013N\275na\005<\313\016\335\274\224\230:=\005\005*=>h\017\274z\303\020=\371\r\005=G\222L=f\340\273;\362\213\031<\362\3179=\317\233\304;\226\0320=\372l+=\013z\035\274\017H\003<r\\S\273\225\327u\274(\233\346:)\353C\275v\272M=^\237\350\274\262..<\227\022\027\275\346\253\345;+\010\005=\350\0018\275\371\341S=\177\\\202;\002\'+\275\033\353D\273\212r\t=\221\223>\275Y\254`<\354\337\224<\347m\252\274ph\256\2729\226\216\274\240\202@<@\242C\275\310UG\275\3729Z<U\3067\274K/P\275\021\330\242<\317\001?=MA\001=8\035M\275h@ =\232\215R=\2307;\275\307B>=\276B\026\275\344\210\246<\22369\275L\227\014\274#\320\334\274\277\224\343\274\231\355\r\275\307\242~<^\362\014\275\366\006/=\257\033\334<\200\304\200<\323\272\343;\255O/=[\"\204\274\326 \241\272)\203U\275\252\266\212\273\321\274\221\2721\333P=+\214?=\351>;=9\306\366<\352\022\036\275\004]C\274I7B\275s\\I=\351+\360\274{\211\201\272\315\265\'=7\262%=\265u&:\247\336\216;P\324\020=\026\226(\275\205b\022=S\326\361;O\244<;\267\374\342\273ssV=\372ZU=.\204<=>\301\307<b\363+=\302\022\370<-/\326\274\366\"S=\002>v;\"\213\377<\303}\325\271\025T+=\303,\347<\317\344\351<\236\225 =\353\300\014=\323\2345=\226\336%\275\367\204\351\2747?\306\2732\270\352<Md =}\341S\275\313\276\002=V\225J<\304\\A\274\177\306%\275\033\213\203;y\202\3429w\213\365\274\2411\013=p\005\t=\247L(\275\211\273\375\273\202\254\030<\311\242\233\274R\235\036\275\002\376\374\274]\013\366:(\344$\274\304\025V=\n\261Q=r>@=\0011\257;\034f\"=!\376\322\273r3\025\275\255s\177\273\267\021\351\274~\274@\275~Qm<A,D\275\373\342\252<\004\004\366\274\022\021\317<qO\030=?\021&\275\233\225\033<\"\004\354;C\2034=2\020\225\274\377\234\213\274:\270\006<\330m\n;#@\347<\205\0049=\344L\242<Nj\037\275k\362\355<\"a\006;\335\215\263<\021\2130=\346\326\033\275\035]\243<\017\333\257\273\035\311E\275\200\022\030=`n\323\273\001be;r>_<\001\312\310<\226\014@\275\333\231\325<\370\304\003\275<\006\345<\365<\027=\025\2244=\237\250-\275\201\3737=\231\352\326\274\301_j\274\274P\036=\311\362\022\275v5+\275I\241`<\224\234%=\323\236\252\274E\221.=\214\003\274\271\272\311\363\274\"\265\271\2741{G\275\361\216\341<1u\200</\353\247<\027\357\001=\374\345\210<\276\222\024=8}\301<\302\007U<9\333\020\275\202\360I=\271z7\275\226o-\275\003\354.\275\026B\311\274@x\364<3\355\320\274g\2769=\013}(=1\n\221;c\273\342<-\035\000\275\033\202_<\235\273\'\274\225h\205\274M\010\253<I\224I=\027c\023=u)\327<:-~<R\374\210\274\213\021\013\2755\213\243<t\275P=U\302X\274\177\305\233\273\312\353\024=\177\260\032<\354\315~\272\266\025?=\r\'?=\017f,=\2437\326<\356\367*\275S\200\265<\347\000W\2740h\010=\202:\022=o\013\333\2745\262\303\274\264)\214<\343_\352\274RL\001=\312\306\270\273J^\272\274@,\016=YN\322;\007sm\274\036\227\022\275\363\334\027\275\267\317\367<(\241\235<\255Ai\274\032\016\321\274\326,:=\274c\337\274\254GQ=\024\347\256\274\260\336\'\275\006sF<\375\273u\274\217\342o\274\320\230\354\274(\005[\274R\330\330\274?\337\214< \212\001=f\2037=+f\306\274\262Z9<I\217U\274\243\352\016\275b\356<\274\3272\005;5V\361\274\314\223D=\245f\225<0\320\317\273\030d\030\274\357\3741=\353(\203;v\027\301\274;7\005\275i\003u<\307`A\275\315?D<\275\031\022=\371\273)=\365\266\'\275\213\033\023;\t\325\357<\336&\223\274\304\246K\274\363\313\221;\223\3704\275\277WT\275<n+<q\2070\275\027\035)\274\325f\024\275\342CM=M>\252<\333\230\372\273`\217J\275\002P\370<\"\t\022\275}\346(\275;\002>=n\2350\275\376]o\274$\036\327;\301\276\202\274x\322\272\273xqI=\310\376H=\276d8\275\224\026\222;\230\2735\275=\265\377<\0043\010=\007\222\036=\252?4\275\007\233\355<\331\252\026\275;\n\273\274s\340R\275\021%\215\274\226\037.=t\017\211<\246\374?=\305D\362\274\211}P\275^O\002=\261\317\232<\227\\\t\275\227\\6\275\257\212\025=\263\236L\274T\374:\275U\275\026\275\202\277A\2753\3334=\t\376\031\275\247P#\275!9:\275J)\251\274\233ZB\275.\367\324\274\254m\007\275\333D};\013\321\236\274\351x\020=\354\310\020\275$\314\361<\345{\017\274\333\235\024=9e\277\272Ae\034\274\325\311>\275\267DB=\366\311\316;\337\230\244<\255,\260\274\355E\231<\230 \035;XN\322\274y\366\335<D\244\024\275v#\341\274\322/\226\274\213`\202<\362b\332\274+\306?\275\352\204\037\275)JA=\020\244\337\274v\232\032\275\200,`\274\216\275A\275\301f\244\274\000$\344<d\263\005\275\002\221(=t.\374<\003\242\032\275+\211\367\274\177\037\215\274!\204I=\243o&\275\312\034\356<\002\246\017\275\236\266(\275\3561\254\274Z\360\025=\345\225D\275F\220;\275\234a0\275\331~F=$\353\214<\366\\S\275\205\305\206\274\272\0015=;\'J\275\304N3=&\243:;\371\253\203\273\024\274\332\274\211\217k<\301\002\034=&\234/<\360\263^<\371\0000<~\314\r=\200\321\006=\342\200\305\274$\204\311:*]\007=}MA=\372\306t:\270\306\310<c\313$\274\"\276\n=\376r\211<\305.N\275\2313\026=\367\232\007=\212,\005\275\276\264\377<PX\225\273#\347O\273+6\231<\326\277\222<\215\343G\275Z\241\026;\244f\343\274\031AP=\221\231J=\242\335R=p\2100\274\230\327\377<\017\376\350\274r\021\344\274\240\250I<\266Nz\274\273\277H=\312\315L=\322\031+=\001\304\t<\034\367\013\275 U\256<(\245\034=/7\321\274Y\037R=\212y\'=K\0000=N\212U\274,\234\255<\350.T\275\364\227\367<\310l\207;<\030\246\274~\237G=\355\274\306\273\261yW=q\272<\2750\303\227\274;\3509\274j\n\350\273\233,\217\274\201\250\355<\000D\006={\0233= %\223\274:2\205<a7\205<\341\275J\2749\210!=IQV:\254\006\225\274.H\307;kf\010=\312z\006\273\272\006\366<\2632\033=\254X\033=+\001\007\275n\275M<\202\317)=\312\2776<\027\001\013\274\336\220\355\273vU\020;T\277\230\274\353k\323<\026I\320<0&K=\306\001)=\371\3218\275W\207I=\250\204\027=\302\200i<8n\206\2748\312\277\274<\306\330\2747\365\301\273\001\256R=\212\220F\275J\206\354;kh\277<`\3538=Ou\313\274\345\257\365:\356}\010\274\364X\r=\321\237\006=\201\361&\275\252U\336;\376v\243<\377c;=\321\2343=W\331\212\273\375\2319=\"\317;=s\357\r=\036U\264<2\002\246\274R\010\306\274\326\305j\2740{#\275mO.\274\233\360\227\274\".\311;\321\\\211<\304z@\275\270!\027\275\347\301\325\274)\026\017\274c\303\035=W\310m\274\304\307\337<\326\272k\274\037\344\201\274J\326\200<\307\216\303\274\325H\024\272\323(\371\273\212\2646;A\371\003\275\3676\322;\202\212e<\245;(=RjB\275\307x\216<\252\r{<$\235\\\274\366\020\235\273\201\341\341\274w\306\205\274|\307\302<:a8=G\330\003\275\377\025\307<|\304\223<\273U>=D\337L=\335?\032=s\313\237<\237\224o<\264\"\037\275\247\031\022<!\272\026\275_\344\352\274\306\010(=\300\'\245:\265\002\355\274\2314\'\275\211\336U\274\330]U\275z\211E\274\373\244\r\275\034\252C=\357\247G=\257?\006=\376\275\006<7<1\275\264\235%\275\031!\026\275\234\250\262\274\301\240K=\026\351\314<\322\213\022=\026\270\005\274\037v&=7\361J=B\367\257\274\346y\337<\014\260\017\275\343\004\312\274\241.E=B\315\310\274\016MS\275\352\330@=w\354\243\274\312\277\323<\023q\030=q\202\033=\031f\350\273\274\257\222\273\307V5=^V@\275\357\250\355<\001{\322<\205g\'=O\212-=\240-K=_\3327\274n\373\313\273\004\033\204\273wD-=#\243\016\274h\r\366\274\353\253)=m\212<=Y\344\376<\255bb\274\026\272z<\2211\312<j\237\227\273\203;_\274\276\364\311\274\261\207T\274So\004\275\020\232Q\275\200\013\241\274\271\230\262\274L~\347\274m\325\t=\271Y\305<\021\300\310\274\203\235\277\274\306}\240<\2246K\275\263\220h\274\371%\020<0![<s\264\264\274;\355<<0\213\025=\016\267\255\273)J`<\327\221\352<}G\326<\202\r\037=_\\B\274\200\256&\274\302\273\021\275\264\230\304\274\n\260\351<\376\023\021\275\365w\361\274Z\311&=o\001|\274/y\001=\'\266\025=\245\343m\272T\214\033=\250#\331<\245=K\274[\336\251\274D\374\257<L\035\215<\362\257\303;\266h6=\003>\335\274/BK\275\232\017\030=\263\266\252<\303\232\005\275\315\242\306<\355~\353<~\271\361<\334\276\030\275j\344\354<t\231\234<U M=\307U\214\274\371X\235<z\024\327<\220\246U\274\214\261,\275,\370\204<\014\367\313<\243\022\006=\243Ww\273\370A\036\274s\034};u\200\201\273[~F=\304\344\302\274\360R\007\274\207\224\374\274g\205\323<\334\205D\275h\236&\275\235]3\274\321\243\017<\276x\010=\324\202\277;`QD<\257\316)<\262\023j<\374\352\367\273z\3731=\344R\"=\231_\302<\037\224\246;\013\201\261;\304\304\016=Zk\362<\035\335 =\032\271(\275\251\004\366\274\\=\363<\353G>\2738\372\322\274\342\"\331\274\360\rJ\2751\"\262<\3451\n=\333\277\202:\371\323L\275I\202\267<U\342\267<]\313\003=\n\330,<-\207\303<JRz\274\257[M=k\020.=\2104\006=\202\314\037\275\211\004D\275p\374\020\275\257\306\\\271\350\376G\275\017\372\322\274\244\235\375\2746\013\010<\320\212\274\273um\000\275DO\027<-\331i\2749\216\177<\273qD=\332\242H=\0336B\275~}\024:|\364\024\275\014\350\004<\246KM=\205e\'\274\"\324\213<\233\240\'=Q\010#=I\353\005\275&C\270\274\234cS\275p[&\274d\360\026\275\222\266\r=\211\352\221<\034\277i<\365\357\022\275BH\030=Qn\n=\355O&<m\237&=(W4<\243\220,\275\246\035\230<\036\006e\274\022\264/=\237\307,\2754\\s\272\352o-=\033\335\204\274\275\336\014\275 I\"\275\223\346\215\274\306.;\275\303\244\315\273\006\022t\274Z\307R=\t\rw:w\263\264\274\236a\250\274\215BN=\210\nJ=\226\326\252<sVn:\360\211\245\274v\035\250\274\345\316\323<\331`D<s\274\t\275{+\274\274\277\226\353\274f\221?\275\0379O\274\265\3078\275\264z\363;\200n\t=Qzs\274\241\305\037=\207\024\206\274Y\031\270;\312 \027=\240\322\345\274\240\326c;W]\'=\254z\231<\362nf\2705\'\223\273C\031\304<@\244\035=\0057N\275K\342G\274\335\212\346<a\024\021=Cs*\275>\227\341<\017VR\275\277\034$=EC\377<\356\016\027=\0230\277\274@6\253<\237\235\0359\232LC=\177\363\004\275$\252\017<\254]\221<\007s\227\274Kq\354<\310\213\013\2759<\004\275O\221P=\316\311N=\227\001\367;\027px<\267\325\177\273F\200N:\266\003I\275\346H\271\274\210|\337<+\333\"<\325^G=s\033\231<\254J\335;\005|\212\274\334\207.=~l<\275\016q\234</\033E=\226\236\023\275?59\275\304\016\241<\352I7\275\303\344e\274\237W\251\274\313\305\312<\203*/\274OF?\275\374\2751<S\301\211<W\3220\275\337\341S\274\334U\216\274X\231V=\370x\254<\311a\007\275\354\227\243\274n\373K\275g\361\365\274(\326@=\261_O=\270\323\261<\222\352\034=O\325\230<\t\232\000:\346{%;Z\214\365\274\240\336d<E3\032=\242\343\t=\343\350\273\274Z\230\375<\356]\377\274N4^\273+\026J<=\032\225\272\001=\003\274\352j\373<\006g\332\274\236\236,=\267\376\342\273\000Y=\274j\014)=\311\236)\275G\256\020=\t\230#\275g\215\241\274\356:#=0^-<\201\2706\275\205\032\277\274\303@\364<\017y(=\343^\377<Z\257\005=\212\177\377<8{\n<}!n\273Z\217;=@\3140\274\321~\361\273\204\304\335<\0130*\275i\3509=\007\264\265\274\272M\263;\220\260i;4\301\t\275\312\'\021\275\221NT\275\373B\310<\314\3465\275\205\250\025\275\373\372\335<\211\221#=Y\177\337\274\300\354\272\274\301\222*\274n\246D=R\005\374<\263\320?=a\374\326\274Q\236\234\274\347\013*\275]y\204\273\340=\267;{\2130=b.\341<y\323\010\275F\227\376\274p\034\344;4u9\275<^6=\201\0237;\355\230\367<\206\251S=~\275\234<b\322 =;\365\236<\213\255\001=\037\365\305<\266U\232\2736\222F\275\340Y\243;\354\202\221\274Z;2\274|\227v;\351\004\311\273[w\022=\315\216F=R\326\004\275ou`\274\302\323\275\273T\303A\275o\242D\274\364\346\206\274\301_\325<\013U\246\273\261\000/<P\323\267\273\234z\334\274\272s[\274\324\323/\2757\275%\275\266o>\275\271\246U<s\272\352;\331 \1779\227\035\032=uHA=l\202D\275Z\373\014\275u\230\234<\032\314Q\275B\017\344<Z\005\322\272\336D5=$5\036\275~\204v<\351\256\240\274uI\253<A\264\243\274\307\275\026\275\343\021T\273$\300\263\274cx:=-H\243\273\351_\000=\265\324F=z\033\316\274M\371\304<X\215\224<\331f\n=}\235j\274w\'\264<\351{\025<\205\251\016=\2142\036\275\343ES=\n\3561\275q\337,\275\365\331\002\275\252\336\326;NH\306<\034i\006=\374\205\337\274680\274\rzr<\356\267$\274J\030>=p\316\306\274\362\366O\275B\261\'=O\036\270\274\251?\223<.g\221\271\273\233\024=X\230K=\277%\037\274\231mn\274@X\376<\250\027\017\275\327\333\200\2745\344\217\274\240\333\224\2728\241\316\274\324\222c\274<,)\275\226T\"\275\303\223K<\371\377?=\001\237\316\273\323r\000\275\245t\213<\222OF\274\204\277\373<\350\2244\275\235Hv< \025\355<\233\205*\274a\257\034\275\3334;=9%\210;`\241\215\272\002I\263\273Iy\\<\234\246\265<\311\t\332\274\275\216I\275\332\004\321<V4\276;\212\303e\273\210\354\233\274\243&g\274\3656\311\274nI\356<AZ\256;h[\345\274\264@\261\274BU\355\273\0234\221\2730W\330<\\|\004\275\265\026I\275\313\tA\274ux;<\372P\231\274\257y\247<X\342\006\274z\313*\274c\235\235;\035W!<9\234\212;\213\260\"\275\2237\376\274\007\330\016\275\335\262\352\274\311\350+\275\013\355\311<\312.\032\275\226I <F\265R\274D\007\246<\330\247\371;\003\244.\275\265_1\275g.\022\273&j,=\320\345S=\315;\006=\371_)\275\243\315<=\276\203:\275\275\213*\275\240\371\320<\354\320\025=\365\305\031<\273\260\325<\206X\233;\017\260\022<\345\262\016=rP\253<9\366\032=\003}g<\246!\340\274L\323\031=@`\245\274<\263\t\275\351\305\016=j\341\030=W\336\226<^\275\303\274\371]\372<F\306\204\274[\276\246:\032\325\262\274\n\344\t:\254\3326=\350\356\371\274\366\261\022=\325J\035=\341\312O\273,\257B=D\237\343<}Q\013\275\026\236\336<\222\202I=\233G\203\274\216\367\230<\352\333\331<\225\250w<m^-\275eJ\326<v\374\030\275\020,\236<\2011\014<hR\322<\213\257\372\274\272z\365\274\244\244\211\274\314\240\001=\233\312\031=\323\223\214<\032o4=g\203\030<\333\034\014<\r 9=\024\227\354<\241$\217<\344\210\237\274!\231i<h\026\235<\016\230<=\317#O\274\2647\265<\253{<<c\rQ\275\226.\035\275\372\257\220<<D,\275\003\020\006=\244\310\225\272.\235\"<\236P/=E%\026<\333\241\000=J\207M\273\235\2344=\212\275\340\273Z^M<\371\345\376\274\345c\251<\304\201\220<GC\243<\225\215\303<\341\275\220<[\312\025=Li\346<7k/=\004t\367;9\310\030\2754M\213\273\2324\274</h\241\274\205DX\274\253\222K\274\030\003\037=o\270B\275O\363]\274\342}\275<\253\226a<\022c\226:\327\2510\275\005\2034\275\017\343\016=\177RD<\210T\342\271\232\340H=\253\030,\275\345<=<\315\212\242\274H\221\'=s\0160\275\020@;<\270\032A=~\311\234\272\316\t\031\275\027\255\025\275v\371\036=mWF\274\317\202P<X\003\372\274\343<\027\275_9H\275\346\030\023\275\217\237!=PD\316\274\377\000\367<>\236\r\275L#R=\230.\010\275\232\216\017\275\354\240\000=\254\220(=\225\247\031\273\356%u\274S\271Q\275QwN=\004[\262<\375\371\302\274\030\242\013=y\300\362<H87\275\3362\274<\253\322\365;\324\354\362\274\321\034\265\274&\024N=\210\2011\275<\273E\275\'\270\225\2735K\n\275e\345\351\274x<\247:\353\350\237<\334\265\"=)\263J\275w\247\003=\374\037\016=\223<b\274\260\317\214\274PX\366\274-Q\252\274\222\366B\275\243\r\036\2742\234\375<lF\237\274(P\363\274\234\277\223<u\264A\274F\300-=\361\214\337<\327}\"\275u\251\343\274\n\246&\275V\243\370\273\244\217(\275\370\224\212\274i\0313\275\232\372\006<\223\236|;\2116-\275\313\027\003\274\271q\375\274\n:\227<q\220Q<D\301\233\274\363\242\244\274\247\236a;\006U\373\273\347t\274\274\300\225:=\337\317T\275~\202\363\274y\347\027=(\025\230<5\2244\272\013|H\275V\274\240\273\325\021\367<V\330\366:Br\037=\301\243\024=~\273\021\275\003\r\324;\245[|<\222\245\r\275\343\0132\275\222\267G\275\'\332/;b1\247<Hv#\275\350e\364;{hC=\343\376\021=\220(\032=H\341\027=\026\034B<2<I=\265a\331<\373\265L<\304\207?=\272>(\275\304\235\341<\006+\354;\234\345=\275\353\000)=\350\246\227\2721\023\337\274\335\242;\274[\366\"\273\224t@\275\372\235D=M\333\026\275\301[Q<W/:\275\037\263\372<\305^\201<O0)\275I\333\032=\204U-\275a\320\212\273\031\367\t\275x\034<=_\005\355\272\336\360\351\274\030\265Y<\'\251\004\2751\313\343\274\342\203Q=\300g \274q\265{\273\267A\204\271Z\262g;\263\010\035=\300\343\236\274\270+\225\274s\270\025=D\376\305<\003\306$\274\367\223\370\274P|S\275?\223M\275\245\316\210\274m\364\302<\323\316K\275\017\031V;\005\035,\275W\016\345<25\r=T\362\371<O\002\037\274\311\3347=\201\202?\275\364\325S=\315\374\236\274Y\371\005<\332\313\301;\00008=\352Q\336<u?\202\274(\261\266\274\254\337\217\272\331\'\220<c\026B\273\331\331\327\274\317\235\001\272=\014 \274Z\n,\275Il!=\r\325\213\274\016\010\010=[K\017\275\030\225-<v\235\345<\305\006\305:\345q9=Q\033y\274\201\272\177<|\256\221\274hc\260;\351\244\362<\200W{<&$D\275)\315\340\274\341\373\n\2755\202;=}\310T<\372\210\202\272w\267\211<9\223\005=a=\027\275H\212K=\242\361\316\273\347\035\372\274\357\277\034=k\023F\275b\211\220<\272h\026\275\332\3176\275.q\253;\375(\000\275\205\241\220\274/\237\t=\336\201n<\345\377\026=\024\337\356<\267\252\321\274,\301>\275\177\221>=\020\027-\275\316\370,=\261y\257\274\276\302#=\003\023\034\274\200v\005\275M3\001\275bT\016\275\277v\230;\241\304\034=P\036\241;\334-\233;\267\234\202<\374\371B=\004 \340\273\304\230\037<\006i!\275\272\315\030=\333\373-:\2032\250\274\237\224\024=\206\275>=\002\026\010\275J\236)\275ES\321\274aW\315\274\022\356\000\275\233a\255<\233%\204\273q8\366\274X\313\007<N T\274\234nE\275F\260L\2758\272Q\275\006\001S\275\021\250\000=<\016\212\274\314\t(\273\226YM\275\275\257(\275<\323\252\274\361\037\274\274\027@;=/\210:<uP\023\275\310\344]\274{8W\275B\251<\275N\216\316\274\323a\354<\2320\342\274a7\350\273\344\026\020\275d\032%\275E\274\026\274o>0\275\370i+\275\2355K\275e\246\"\274\371\237?\273\300\007W\275(j4=\205\250)\275:\341\220\270\300\203\305<\227\252*\275\n\373A\275\316\037>;~\241S\273\360Z\330<0\366S\275~JJ=\205.\325\274\212\367\356\274\370\014\373<\264\335\006=\260\306K\274\t\260\252;\236Z\220<\031\233[<\251\266.\274\341\375\010<\221q)=.\264-:)\323R\275\200\032F\275\273\022\002=\347T?\275\271\225.<\247OE\273\034PG\275\004\321\341\274r\377\353\273\035\273\020\275\233\216%<\243\364y<\033\250>\273;\263\223\274\215m\007\275\302\261>=D\245\030=LN\'\275\357\323>=c\277\227;\224:\201<\"\313A<\002\t\324;\337\026\232<\r4\344\274\352\305R=\373Z\365<a=\335;\341\251?\275\275hI\275\364K\022\274\255v\257<\034>\026=\374\312\245<\022\264;\274\376\204\302\274\273V\357<W\224\002\275\000\306\246;va><\370\362J;X\270\034\275\2265T\275\316\"?\273x\253\214<\021e\226\272V\306\016<U0\016=\2624\244\274\273n\200<\213\250~\274U\355\247\273\365\351\341\274\327\241\370\274\350A;=\2254\344<\353\304\"\275\346\026s<\013\004\321\272{\310\311\265\224\031\335\273\037qF\275^nM\275b\204\263\274\222\320\003\275\277\201!<@\333.=t<\023<N\264T\275\344\315\327;\t\305\263\274\276\273\270;\315x\001<e\226\360\274\022\231p<\206gY\274\234)*\275\213\025\364;7\362\000\274$V$\275*\346\357<\231\304<\275g)\303<L\323G=,h\250<L\316\336\274\217\365\005\275\264\020A\274wc\002\275\310\355`\274\030\322\300;\251\3052\273\344lW\275\311\270p\274\025\326\271<\266\233,\274xrT=\271i\303<\206H\300\274\022\270B=\034\002H\275\345\307\324<\310\240Q\274\236\360\032\275\005_n\274\tz\201\274\270nh\272v\034\352<\273c\234\274\2273\313\274\235\376\033=\3407s\274e\347D\275\220h\304;9.E:\264 \246\274\0103\034\274s4\315<M:V\275s\307\022\275\202\304\001\275\003^9=\305\366\021<\363x\025\274bQ\230<\317\207\032\273\3014\331\274{\003H\275#\304\372<\203q@\275A\177\006=H\007\232\274u\240Q\2752\005<\275\306\317O\275\"\271\020=\"\320\363\274\225c=\275\214\332#;\337\2010=\361\t\302<8f\361<(\261\004\275\365FK\275eB\321\273*1\260\273\326F<=\347\016\t<\214`C\274\302\370\266\274\031\206\r\275\370\0071\274t\273B\273\232C\036=\352,\035\275\340\033\253;\343\362M\274\252\200\036\274\\\005I=Dz,<\370\201\006\275\265<.\275\200\342\\<76\023=\264\343\030=\271\206\003\275[\300\224\274\n\177\346<\247\\9=(\302\275\274\302H{<w\335\227:p\200\027=\302\227&=\275\002\302<,\227\302\274~\340\t=\374}\251\2749\350!=\264Y8<\371\2139=3q\033\275\201\371\341;\351Q\255<\233\3229;&8\023\274&{R\275\365\036O=_.\200\274\202\206\030=%\257\364<\270\321\013=\242=e\274\230\226\021\275\023:\026=\205\2240=\254\'2=YvD=\276\360\035\2752N\305\274\265[\034\275\336\262\205\273G\021E\275\323\232\023\274\031\246\020=\344\270%\275\337\344\001=\007\370I=\217\346\030\275\010\316H\275\367\366\321<)\321\024\274\364B\010\275\241\204\227\274*\3466\275\365&P=\260\2016\272\276`\327\274Z\276V<R\2311=Q\227\355\274\016<\005=\365\0068=\326\372G\275=\004\332;\361AG=\344\032W\275\224l\033=\374x(=\324\327+\274\273\3752=\007~2=\364\232\374\274\347\345=\275\274X\310\274V\366?<\006\014&\275\024\366\022\275\312\363\262\273\"\237\032\275\256\234\243<n\027\2739\321\n\213<\323)I=\n\211\322<;\t\017<\301@\016\275Z9\363\274 PF\2749H\370<\345K\327\274\367&\331<} \020=*\350!\275\254\231\307<+1\002=o\375\276\273\232\307\262\274S\036\032=\301T\273\274\246:\354<2\256\034\275-\254\305;\301!\026=\264\350<=P\321\326<\363\277\006\275\304\275\253<\242m\025=\336 [\274\263\352?\2750\325\233\272\337\013\035\275\357]\000=\350\255\315\273hV\354<z\3033=\273sU\275\342\361\304\274\315,:\273\250\271\351\274\017\025\372<\302\231\366;\244\031\360\273CQ\325<\316~\317<\325c9\274\3750\267\273nf\326<G\371\255<%4\342\274\033<\003=\\\374\032\275\241\332\014=g\3760=\267\244\020=>\203!<\244\354u<$S\255<\2448\223<\024\323\273<@\223*\275\013\346P=A\026-\274\267d\357\274\311\2775\275\220.\034=W<c;\346\346\023\2758\276\222\274\234x\215<\211\223U<CwQ\274\334\367\205;`\326\244\272m31={t\n\2741\031\301\274pV5=\023\312*:\274W;=\307\372*=\232\202\302;\\B\263<:A\256\274j;\326<.S!=\222Y\363<\234\312t\273-\034\205<\252\221%:\275@\323\274= \032<\216,-\2755\007\227\274r\353\306<\212\355y\274\257\t8=/<K=L\275*\275\360\220\007\275\274jO=?\277\304;\200\237P\273I\347\036;\326\320\343\274\312C.\275l\310\216;\234\203\242\274\264\241H\275v\3362\275\030]B\275\\Mg\274\006\3331=\th\023=\354\001F\275\\V\332\274\322\366F=\341\371\t\275\350i\231<\005p5\275?;\006=\000\3474<\031gI\275\2311\026<\312a\t=\202\222\026\275>\201N<\237\236S<\023\204\"<OQ\034<MB\343;\341zo\274\350\317\311<\340\335\303\274\316\324\307<\036\266\024\275\265\n\3349\004\341\024=z\327\213<\346\3125;\r\261\270<\201\307\307\274\3772\223\273\362X\025=Q\2301\275\364\243\256;\323J\362\274\347\010\355\274\222O\203\274\377@\361<\222\235\350\274\002\233<\275N\225\270\274\'\3730\275\221\277\356<x\321\256;\240,u<\211v\247<\312\225\003\275\3211\t=#\006\373<\342r{<\274^\341<N\335\335<\254+\250\273c1\226\274\\!6\273\332\356M\275~\003|\274\367\353\336\274v\034*\274\n\200K\275\\\252\266\274\243\206&=\230\031c<}\'\'\275\214\004I;\366&b\273\2252\361<|\360R=\362b\274\272v\323\340;\333\222\247\274u\354\273\274\347\320\367\2743\177`\2742d\363<v9\371\274\362\303\006\275\241\222:=\231\034\205<~\\\223\274\350\330\';ru\024=VQ\260\274\363\310\345\274\377\023\362\273\t9$=\265f\240\274\255\234\210<\251Y\330<1)\261\274\272\213j<\002*G=\277\255\254\274\022NT\275\323[\337;\270\271\250<\037=\034=\375\206\037\275;|A\273\257$\001=b\022=<\033\214\037=q\213\255<\355\r\"\275\335\305;\2741\217C\275\371l2=\256\360Q<R\0333\275\177\375\027\275\237\232\036\275R-5\275\361\222\336<\177E;\274+j7\275\'\357\373<\357X\027\274\356\025\351\274\343\307\022\275\007wA\275\225\274P=\215\362\352\274\372\233,=\021\025*=\357\033#\275\021\214,\275Q\271\266\273\355\226\225\274\004\367\360\274\001\361\231;C\3240=Qq\000=\356\326\025\275\226\256\272\274c!\"\275\354\177\272\274\306\257\007=\310b\006=\271\353\355\273O\315\362<\020v\177<\335\320s<\362\251\347<\004\217Q=\232OF=m\314D=X\n\024\275\302\2424\274\014\247 :\0173\350<*I\306\274 !#=\306[\031\275^\245\004\275\000\340\307<\245/\034=\240-\035=\323\335\r\273\213\320\026=N\212\270\273\026\362U\275\306\007\230<F$F\275\035R\303\274\362\255\255\274/\370\367;\257Y6:\315\210J=\223V+\275\" \t\274\275\225\033\2745o\355\274X\337/=<q\221\273\307\346\312\273?\350w<5I\010<\312\337\242\274\231\364\256</}\367\272\026\216 <\222Q\321\274B\262\255<\242\343\000=\250e\016\273::\014=u)\207\274pH\034=\353{\370\274z\3118<\013<\'\275~&\003=|I\035=\253\024V\274\346\240C\275\244\351\026=z\322\200<\274\274\232<\335\265\324<\325[\342;\317+\366<\307\244P=m\373\371<\222~\312\272\320M\302<\\\261!;\255zQ\275f,\357<f\213\244\272_q\026=\\l\025\275\031\226\253<MH\352<-r\344;\362ST\2752\262\232\274+\242T\275\247\304\247<\226\276D<\375@==\252\321\026=\334Re\274\3619`\273\274\313T\275\207\030W\275?v\351;kQ\034<u\305-=\315bO:\225\243\333<\254I9=\013-\"\275\242\242S\274\246\226\017\275\244-\372\274\276\366\223;\320V3\2748L\340<\350lH<9\222K=\334\223\314\274\207\305\326\2746>\276;\200k\257\274\311\032\\\274\266Y\022=\266\013_;\'\007A\274$\210\236;\365\321\241\273ukj<M \200\274\346r\002\275F\250\367\274K\3570\275\276\237\353<\303\310\033<\226\341\374<\311\361\013\275\331&\010\274h\002\330;\347\244 \275\303\317\223\274\317a\260;\020-6<\233\217H=\310\225\305<\345^ =\3737W=G(\366\274\376\353\202<\202\277 \275\221M\245\274\333\231\255;\243\314\037=K\265B=J\315\351\274\2211\014\275\263\207\013<uU\241<\346\005Y:\2713\2279\220=X\274\026^5\275t\224J=\214H\343\274(\253V\275Y\225&\273\263 \350\274\032\275j\274D\212e\274S\3160\2756\370\350<\327\254\355\274,g\355<\375[\010=\252\305\236</\320\020<\325}#\275>\372\337\2730\256\212\274x\376H\274\251y\013\274`\203S\275\334P\355\274.pT=\226\215\014\275\364\020\231<\022\343\353\274\242\376*\275TwR=\032\n\262<\372\203\342<\317\234T<\001g\337<nY\310;\331\016\010=f\216\356\274\235\241\346;T0\324;=a\001\275p$\026=(\034\311\274R\255\313\274\234/\013\275\324\307\242:\2212-\273\'\212\t=(-\013=.\\4\275\250/\273\273\326\270\201\273rvK\274D\362\017\275\240(\211<8\361\026\275\273tT=\277V7<\201\216?\275%\315\300\274(\371;<L\353\350<T\376<\274XIB\275o\257\377<\234k$<J\252\007\274\346L\016\275\206\220\363;eA\";\001w-\275\245\256\225<]\310\353<bm\024=\245\201\021=@Z(=\325h\232<\273W\025<h\300&\275 \016\247\274F\236?=>\017\215:\2570#\273\277e\016=o\010\230\274;KD\275\202W\272\274\235\320v<\313`\022\274\300\357D=\364\201\034=\352(S\275\277\272\316<\003\377\337<\316\3530\275\370w\235<\370\337\342<\207n4=\371\247c;}#\342<\335g\004=\203<\220\274X\300O=\366*\026\274\222y$9\301\220?=Y\2042=\340sZ<V\314B=\217WR<\257\220\026\275\252\345\237<\250%N\275{\366\212\273Uk%=\005\2372\274\024_o<=\206Z\274\224\236\014\2753\210 =\373\255\366\274(\327\246<\201O:\274\320\257=<\0101\223<k\336<\275\370u\367\274\272\375>\275\362JT<\365\n\262\273c\362)=\t\006\355<0\343,=8\370w<\343%&=\177y\374<l*\353;\033\260\217\274\245\217\303<h\317T=#\002:=\271\021N<S9\365\274L-\243;Nsf<pP\231\274b&K\275\317t\013\275\220\002\025=\033eI\275\200\n\334<<\254\261<\360[a<\304\256,\275\322\302\336<\036\013Q\275BR!=\025\020\022\274\374J\031<\361\n\013\275g\032\243\273\265q\033<\3237z<\234\327<=\304\302.\275V\352T\273A\216\242:\n\017\325\273\035\212\201\274~p\350\274\t\257\251\274G\256{<\246\300\212\273\310\2146\274\323\326b\273ea$<\010\013P;/\027h\274\362\354\210<C\250C<\216((\275/$O\275H\224\375\274R\260\232<p\365+<1_\374\274\034\260x<\003\325O\275\345\317\010=\n\303#\273\001\342<;\374\244\360\274\343\036$\274\215\211\304\274\2279^\272!\005!\275\251\336H\275hY\364<\305#c\273\013\352\206<\005\000\217\273\311\316\032\274n\255A=\007<\215\274f\303\203<\225\001\341<\017`\266<\222wI\2754\342y<\242s\214\274x\350(\275\366vV\275e\215\364\274\227\3371=\216\014M=\004\371\240<\341EF=\325\376Z<!1\301:\347\257g\274\334>\002\275\250\247\336;5+*\275\017\356\002;\013\356\301<\371\327?=\274\200\212\274\245\337\341\274\267\022\033\275\020\203\332<\345\376\274<\227\277\035\275J\024\023\275y\\\025;\006\253\026\275\313\345\261<!X\251<+os\274Q\001\010\275\016\376;<\335\255;;\255\222\365<\031\035<\275\343\005\n\275\220\r+=o)A\275\304\355\320<.p\033\275\262\016\264;\345\n\365<\267\351b;e\210F\275S3D\275zi\030\275\207\255:=\357\317\332\273\212\355\000=\372\222,\275z?4\275/\031\370\274\207\341\227<rw\030<\332\317\201<\266!P\274\303\335\222\274X\023U=\325\337\t\272L\t4\274^\0329\275\177\332n<dX\366<M33\274-z\033\275Y\010\256<\256\375\3649x\341\013=\351\016z<\036\211&=\036(H<qi0\275\032r:\275\371\344\243\274{\337\205\2742\246\027\275ib&\275\016k\206\274\001\352U\274gMP=\246_>=\337\3763\275\037!\244\273\306\202\303\274\327\330\340<H\361L;\213\025\377\274\361z\356\274S\362*\275I\022\202<\031o\323<\376\013\013\273\356\244:;\244B\325\274\232\265\332<\324:\371\272uh\'\275\375aL\275\001\027\371<\224\017\267\274\272\033`\274\236\256[:\177t\345\274\013$@=\271}N=\204\265\001<Y2\226<\334\022t\272\t\250\277<>\263\022\274+oY\274\325\216\216\274\221\333\265\274\212\324\340\274\330\325\334<%\343\350;;\342\036=Z\251\301\274\3350\020=\334\315D=\326[7=\006\3204\275\2470\'\275\332\317\243;\007\257-=d\243:=y^<=\345[\005=\303\245%=\314\016\r\275\274-\254<X\367\354\274BgR\275\322F\210\274\200\362\342\273\231l><\267e4=\210R\277<9\022\351:\306\224!=\001\307F\275ux<=XX\035<\310L\372<\036b\331<_\017\371<\r\036W\275\376m\312;|\t\310<\304\'0\274\211l\014=C\364N\275\0036\000\275\332\366\304\273x\025!\275\270\'\255\274\300\217F\275\3703\007=^s\t\274\267\365\272\274\267\226\025\275\263\246\'\275_\363>=Ei\005\274\206\r\006=\313i3=\313\3147\275D\376\006\275\317 7\274?\025\211\274[\250\326\271b\"/\275\315\305\t\275\226&\325<\252U\027\275\217\316\035\275\360o\271\274\266\325\331;\376\320;<\217\301(= \375\021;\346Q\245\274\024\024?=\224]\323\273\267\021J\275nyU\273\230\301\307\274um\245\274\350\213\374;*3\232\274 &\037\274\026\231\027=\031\020D\2758)\301\274\312\321L=h\225\"<\306\313M;S\307q\274p\357\026\275MM\213<c\350\304\274\256\021\253\274j4|\274\001\215H\275<\330\333<_4\341<\341\2005=\n\226\021<\004\016J\275ya\234<\032q2\275|2\371\274|\2163\275\305\202\r=P\"m\273\213\374%=\317l-=\246\243\254:\230\345\014\275!\231\032\273\007O\225<\210\035\306<Ij\373<\200\246E=\006\321\213\274\210\216\r=\035\345\016\274.a\204\274OGZ\274RVK=\277\t\372\272\016\2676=\3070\026\274p\014\020\274\370\005#\275\025\327<=|\004\221\274\373B3=\000,\020=x\250&=\310\276\"=\\\255P=j\233!<\001\242\310\274\254o\206\274\321\201\236\274\264Q:=?\344S=\347=:\275\317\360/\275\336\273B\275@\031\004\275{+U=\014\231\341\274@\026\341\274\376\247E\272\002e5\275\340C\010<\252\311(\275\301$\243<\251\262\344\274k(\004\275+\027:=!\3363=wHC<\333\226\204<\323^\322\274\326\363g\274\234\250\013=\350\036\350<K\235\354<]O\034\275X\361\374\274\323\3400\275J)\336:?\374\324<\035\037\304\274\247ko\274\220\306\357<n\225\245\273\276\262\273\274\320\321\030=%\345\234:\311fH=\334\334K=\330\312\246\274N\236\022=\274\276 \273s\026\311\274M\246\030\273\262\333\211\274\037\316\001\275\223\026\272<\255t\232\273*-\363\274Nc\312<tM\224<\325\215\023\275Rz\251\274>T\032\275\210\3769\274\020\230\343;\032\331\201<\262\271-=\213\277(=\325A\255\2738\3339\275#\312\032:\267\323\317<\321\033\242\274\353\026^\274\000\001\255\274\273eN\274\024\034 <e\372\000\275\022\227\366<}\020*\275\\h\206\274\213\312\206:\262-\r\275B\341\034\275L\351\366;\202\256\224:b\264\033=0\352V\274IO\277<\332^\021=\0211\006\274<\232\266<kET\275t\230\321\273?\311\251\2738\027\332;\221\371%\274\251\352\024=\261\361!<\316\000J=\206\234\272<\216\037S\275OM\367\273\036\361\242\274\361\3321=\003\361z;\265\017\307<\005\226~\272X<\272<\002\377;<\351\'\024\275\372];\275\362\241\005\275$\020L;|\343\202\274\236\000\357\274\216.\022=\377\322 =\004\225\036\275\275\366\035\275\330\030\r<;y-\275\370\007)\275\333EZ<\337A\213\2721\243A=\324\005\023\274\225\355\035=L\005\222\274\237\256\225<}r\032\275\0243\311\274Y\331\\<\032 \265\274Z~\325\273\330\312\372<\341\2613<Y\311\266\274\003\322\226\274J\272};\341\245S\275\250b\305\274\031I\006\275<\025\235;*\022\337\274\346\306\311<\322\016\010\275\242\031\211\274\273z\247<>\304\277<\357*=\2756\321\027<\243\341\217\274\014\226C\275A\nI\2734\320M<\260\335\217\274\214\277@<0\375\267<\375\324\325<\030C\006\275\253K\242\273cA\216<\363\357M\275\024\237@=0\010\237\274l=\216\2740\";;Fh2\275\222\0138\275]\354\374;\'\327n<\331\327z<\036\323F\275\003\214#=\311L\037=&Q\024\275VP-=\337\024\027=\004\rr<\207\214g\274B\310\363\274\2014\201<\325\205~\272\232n\347\274\021?\267\274-\307\017\271^\370\016\275\336\205\363\273\r\2670<\307^\232<\371\371\271\274j\023m\274\322hH\275\177\211/=pO\022\275\265\355\007<P\202\265\274\324\215\025\274Vj!\274\265\262\304<\371t9\275Lk\"\274pT\213\274\3036K\275\"\317J\2733\273\370<\346\025E\275_\343\003=M\0058=\354\002K=\306\010C<\266*\207\273\307\336\330\274@\262&<=-\006=!\210\337\273\352\321\254\274i\024\322\274\364iL=\235/\276\274MXI=\316\035=\275\207\272P\275\330\r\253<\351\252A=\266\310,\275l\265 =\031j\210\274A\2713<\315/\330\274L@\270\274\210\022\237<\262\264<\274\316O\223\274U\227\332\274\240\021\261<+\361M\275;GN\275bH\001\275\366\270J=\n\\\305<\2454\323\273k\033\226\274\237\364\366<\247\200\205<%\221\024\275(\033,\275\006d+\274\340\317==tTG\275s\201\275<\236\312\010;I.\014\273$\244\240<\373n\r\275K\tK\275\264\316?\275\272)\010\273weL=\210z\232<Rf,=?\031\375\274|\244\315<\002@;\2748_\035=\270\213\272<\250\025)\2752\262\"\274&G%<\013\240N\275\215\\\216<\246\371 <\353>\324\274\255\177T;\351\366\021\275i\220I\272&\300\334\274 (<<i\303\266\274\002<\001=)\035N\275\224\230\363<j\202{<\177\305\262<\237AN\274\246P\024=\314\232F\274\3565`\274\035\336\251\273\200\204n<hLT\274\242;\247<\233G;\275\177\347/=\333\3403=\231\230\300\274\254\205\034=.4\263<\2457\025=\220\305\207<\n\n\272\274\341\363\377\272\366<P\27579\266\274\017\250%<pA\375\274\250\340\346\274\010\\3=t\217e<\032W\002\275U\350\270\274T\227;=\377\253\n;d\306\265\274O\232\363<\037\270\271<\261D\033\272\354\007g\274\352\312{<\247\352\017=8o<<\034\374\272\274 \216\033=\033\301n\273\356GB\275fzB<\031m%=\312o\226\274\215\177-=\317\2377\274\177\206K\275\331!\267\274J\204\031\275\241qU\275\231\223U\274\237\n\266<\204\215,=\330D\r=\020\361/=\004<-\275\274E\224<\253\200\222\274\350\003,=\322`!\273\2558\"=Y$z<\215\013H\274\006,:=t\360h<\230\014W<e\033\373\274\357IH=\220$\217\274\240\332~;\257\236\262<\325/\014<`\243O=\343\273(\275\020RA\274i\356\213<q\030A<0R\345;\362\375\345<1g9=\315i\022\275\366\003\315<!\247#=\3369\224\274\247\214\"=N\264\310\274-\022Q=\357\300\004\275\363\306\246<\265\303\377<v)P\274\315\262Q\274b\230\216\273\237\030\007\274\334F\010=:S\214<T\226\232\274x\276K\275-\250T\275I\237*;\002.,=C\0301\275\215\223\212<E\177l<}}\334\274\201)S\275\201\224\034\275\337\327\366;\346\177\275<\213S~<\341\\\363\274\002\271C\275+\010\033\275\007<P\275\357Z\324<m\266\330\274.P\253\272\273\2533\275\r\221\367\274\345hP\275\330\2565\275\207n\332<\343^\222<\275\372?=\234~\353\272{\377?=\331\357:\275\272QS=\n\n\332\274\302\273\003\275>Y)=&\201/=\24135\272\233\345T:9\224\317<\035!D=7\372\236\274Cn\314\273j\216\030\274$\227\"\275\227\266\275\273{\2003\275\254F!<b\241\014;}\365\247<4\213>=7}\353\274\361\362/\2759N\317\274\323F\035\275\"6\274<\302\036\357;\266*\003\275\242\307\306<Y\325L<\267\265Q\274A`\303:I\375\366\274\014*(=\361\355\327\274\224J\037\275-\2076=&\3271\275\300\355\265;\300A\367\274\364&8\275\246?:<!\246\r\275br\244\272>\371\317\274;\023\231</@\247<\343\007C=\006)y;\213\236\r=Aw\365<\315d\224\274U\3467=\315\322\237\272\016\375?9\276\311?\275\006\020\234;\203\236\206<|\2619\275F!\315\274#\346\340\274@>\021\275\377&0=\271FP\275^m\324\273\202\000\t<\246\026\325\274\274\330B\273\007\232\025<\030\016\020=\217\360&<d\324\240\274\302\177\364<\001\204\036\273\201\035%=\350f\215\274\010\177\226;\324\346\347;\006\375\204\274w\371\254<I\020\002\275\245\230)=K\353y<\000\355\032=\226\244]\274\357\333%;\276\225\343:x\344\022\275&\366\200\271\322N\211\274\355\360\362</\304H\2752\267\312\273O>6=\334\271\321<n\037\307\274\033C\014\275\337\303\252\273\027\227T=t\300\024\275!\2155=\304\250\244\274j\274\270\273\374\341\263<\016+F=\235~\\<\'\311\303\274\242|K\275\214?\330\274J\366\014\274\364\256$=\033\211\355\273\314\302\337;lz!\275f\017\360\274\341\024V\275z\017\303<E\263\360:GL0\275\351\000\250\274\274\332(=M3\224\274g1t<\032\330z\274\274\305\017\275\261YK\274\337X\026\275y.?\275o/\037=J\202\004=\033\035W\275\320k\346\274L\201\r\2753\213\207\272W\002\260\273w*\260;\220X%\274\206b8;C\233i\274\275$\273\274\237\210\021\275X/!;\356MF\275u\036\023=\345\270\017=0xI\274d#\365\274\327\333\357<\231PM=|\214\231;A\025\274<34\352<\357\216\327\2748\273(\275\263qP\275f\t\213<4\0302\275\370\005F\275S\006K\275b\303\263\274\266\302V\275R\221\r\274h7\000=|\203\357<K\265\270\273;0G\274Io\340;^\343\001=r\213\016=i\'\365;\325\310D=\307\000V\275\233T\325<{\2469\275\023\310\245\273\205\037y\273P\2578\275\004\215\026\275\273\241\"\2753\350P\275\203\343\207\274OwQ\2750\372C\275@y\322<\020]A=\263\336\245\274\243P\210\274\007\2331=>\240\262\274!w\227<\210\261\260\274jD\032=\371\273\273\274KP\r\274\254\306 \275\334\304\314<\0014\303\274zB\243\272\031\364\364<\006b\005=T\366\247<\224\364(\275\2172\231\274hN=;\355\005\014\273\256\354M\273\230B\344\274\007P\022=\324\312\232;\360\3022\275\337\177;=}\342\201\273~\334\351\273\037\346\257;\256\310\341<\236u\375\272\350\r\351\274B\364\017=\366\216(\275\377\356\214\274\007\267V=qr#<\231T\237<\212\225\177<\360()<|\365@\273\022]\321<\260\351\361\274\311,\240<\220\206G=\271ng\274.\335=\275Fq\351<\320\000\024\274|\264\000;\333Z\215\274\227\210\023\275>\376E\275\234\326\220;@:\033<5\2339<\242K!=\024\3119\275\366\373Q<\257&\214\274\033\005\372<+;=\275\037\177\243\2742\316\353<\032]\233\273\307\370\001\275\307\264\346\274\257\267\377<\267mI=\306\320P=\221\022\214\274\357\2471\274\333\'\203<\240\234\007=\360;@\275\240hT\274\252T\005\275\327\302\254\274\331\023$<_\366\302\274\347R\252\272\330\330N\274h\233\\<B\353\r\275y#\033\275\212\027\266<\001\302%\274\270\226\253\274\334r+=\342Ls;H\323==.-8=A\027\007\275\242g\213<\271sD\275\355R\254\274\000\004\n:\017P6\274\265\322D\275\216K\356\274[\016s<\234\316 =&5\300<\252\372\222;r;\030\275$>\221<\211J\200\274\350\356\215\274\361\352\377<\261b\250;m\026\203<}2K=#\003\215\274\201\002\005=\'\260\n\275\312\367\201\274VE4\275a\211\303<\337\025\242<\263\217\032\275-\034D=\233\305\303<\244\350\240\273\205\026O\274\031f~<\025\240\036\272\272\252>\274\004J\0179\207+V=O\270\261\274`J\312\274\2421\300:\\>t<\272X\345;\233\361H<\244\t\262;% \037\274\326\027\210<\311\334F\275\177\214\177\274O\301.<|J\203;\244c\227<)\240\001\275\357K\246<\361<\344\274\273\365\004\275\252\315\027<\017.\022\275#\3106<\320\256\240;\270\302\033\275\372\264\006=\315\353@=?X\263;\373\275\023<\225C\022=q\350\200;\246\3574=\266\367S\275\216\275:\275\345J5\275\204\'I\275\320\314L=$\342\334\273\247\020;=\307\261L\275\300\0042\275n\007\'\275f\227S\274px \275\340\221\334<\253\363+=\373Z+\275G]\337\274r\373R\274\316!\033\275\021\tU=\357i\274\274\n\254\206\2747\205\003=]\364\032=.9\020={\035W\275_\254]<c\027\'\275t\370M\275%(\032=\243g\371\273\261\372N<\260\2042<\030\001\333\272WdJ=\313\023\"=.\200\324\274\37060<\232\203\371\274[Y\033<\n\005U<wN\321\274\360a\332\274$\345\014\274\343A\'\275H\237)\275@\341\214\2734\312F\275\'z%=\2175\207\274\344\031\347:\267\0314\275\276\014H=\211R+=\317e&\275\314cV\275\t\0175\274\266\351T<\237\3257\275M\023\265\274\0147\255<\215\350\007=\247\342\377<$6\204\273\024P\351\273j\320P\273/z\306<\'\215\232<ej\033=u\226\222;\361\255\033<@\347\257;\356\344\032=\006u\033=\230%\037\275e\002K=\r\242\r\275\322i|<\241\2639\2754[\211\274\t )=\004\014>=\236\037U\275\334\241M\275n=E=;\"\327\272\345$\231\273(\334\307<\034\312\372\273+(\033\275ql;=\317(\326;6\0063=\262=G\274\26612\275\000^\005=\324T\021=Zk\372\274B\370{\273<!R:\202\377\213<|x-=@\347x\274\027S\021=\272\313)\275i}\217<\006\345n<\364\242C\275\364\\\252:(\221^;@D-=ho-\275\305+]<\005\277\227\274\340\233\020<Q\305)\275\t\034\324\274\003q\007\275\340}\232\274zwN<Q\004$=5V\371\2737\302-<\303/\327\274\016d?\275~\335\233\274\302\345\204\273\307\3104\275k\315+=\000s\245\274\"\020\346<+I4\274\267 \222\274\365\303\241<P\275\236\274\250\350\355<`\025E\275Wo-=\312U1=6r,\275.\271\010\275\270q\002\275HU\017\274\205\202\005<\321\031P\274F\322\037<\243x\220<\037}\035\275\001,\250<e\364C\275\206\202\017<\356\366\320<\212\002\373:\014\266\372\274<\0230=\277\315~\274\374r\'=2[\004\274*w[\273\341?\255\274\206|\t=\314\233\315<\353\223Q\275:\022l\273\0000\336<RH$=\317\234\010\275\350pF<\364\324\360\272e\0165=&\224\323<\007\313\336<\017\204\213\274\344\2027\274\3612\030\275\204\220\341<\336uK<\025\3172=+C<=\374\301\205<{\351\331<4x\001\274H0\244\274\367g\237<k\2042=Td\307\274\225\212<:L\263k;#w&\274\nc\350\274B\326\000=\034\004E\275\221\373\212<3\026\323\272\375\024\037\275_\303R=\262\025\325\274G\216\036=\313#\200<\347\374\241\274\214n;\275`J.\275d\'\347\273$\337^\274\336\366\013\275\223\270\301<\367E\274\274\006qG={\263\002=MN%=\203\244\371\273\013\"\251<1%\243<\315\\l\274~\205O\275M\216\212\272\026I\006\273\247\357m\273\325\333M\274\313d\340\274wQ3=`\355\031\274\226l\366\273\212\2560<NNA\275\252\363\374<\030=o<\363\357\212\272\367kT==\2669\275\247dl\274\215/\252\273\320J\360\274\002\305\254;\313_\303\274\215A\203<|\2602\275\357\245\325\274`[S\275Ws\375<\241\253\266<\333\237\013\275&\003\233\273\357_\225\274\346Z\212\274E\316\324<I[\000=\360\330N=h\303\"=\034/\371<C\375,=E\273F=5^E<\271R0=\363\360\255\274\3104\007<\'>K=\024\241\031<-\263\313<\332k\010=9\207J=#]-=Ly\326<\343V/\275\177\n>\274\210\2377<K\232\256<\367\371J\275\244\\\264<)\273\230;\253\336?=Q\203\r\275O\254)=$\370\204:\272[\366<\376\034\231\273BR\033=\362_\r<o\230T=;R;\274\010J\272<\362\\\334\274a\212=<\202T*=\026H\034<n\324\230\272$\300\332\274\n$@=c\201\372\274\374\351B\275\342\237C\275a*\346\274\205\300\377\272/\030\032=\265\371U;(IV=P\207V=\233\360\002\275\241$\353<\005\351A=\310_\236\274#;\361<\241\351\027\272\372\301\307<\231\341\235:K\323\202;D~N\275\0247\356<\202\336R\275r\\+={\332@\275\311g\037\275t\005%\275(f\'=4\307\002\275R\003\256<X\367\233<&PM==O\020\275\260\355\333\274\256\275\217<sT\237\274\016\017@\275\'\253\213\274^\203S=\214\021\356<\332\026\366<\032\241M=\"\265\033\275[=+\275\211%:<\177\017\315<\253\3622\275\213\274\030\273\274\375.\275$\307@\273\013\257\013\275\30329\274\310C<=\356\324\337\274\322gT\274\365\323\024;\231\303\235\273>A\215\274/\023\321\274\277\261\013=\376\275\302\272\235-Q=\301\312\036\275\025\353\230\274X\334.\2755\2726\2741\\\007\274\237F2\273\241*Q=\225oO\275\376\303b<\213\303\301\274d\032W\275\2141\322\273\310\367\330;2\023\352\274,)\270\274\314l>=\3700W=\001*\370\274wt\371<}\035\013\275\261\271\233<\247?\356<\003B\311\274 o\242<\275\034*\275_1\276\274\217\254T=\373L\242<?\213\375\273\201\225==\\\226\275<\362\3402=\343\317\267<\357\366\314\273V\227\230\274\037\263\256\274>\365<=;#\005<\265\255\363<\354\223\220<\220\361\336<g\014\320<fBS=\203\253s<H^\034\275{p\213<\234\302S=\033\306\334<Q\242\327<\230y\234:\300\231F\274w\376\007=K\317\007\275\310:\003<\034\032*\275\014\334\311\274A\026\023=\263\353S\275(\274 \275\351\n\357\274Nj~:F\333\335<U\275%;YAJ\272w\205\014=Pt+\274\324\357\323<\277\336-\275\377\316\305<7\357\306:\276>)\275Z\335\022\275&\210q\274\271?0=\331n7\275K\030K=J\303\376<k\233\"\275\234zW\275\037\250\002\275\016)\261\274\232m\037\2751\227V\274\303\331\256<2\230s\274B\230X\274\261f\216<\240\350\r=\373\'L\275\017\230a\274h\363\026=\227\256(=\345\246\231;\343\261*\274\037}\377\274\227\217\236\273\026\2476=\364\226\222<\374P~;XJ\311<\217\0014\275\257\026\000=qi{<\323\365~\274\252\010\327<\354\347\200:\242\361C\275\265\236\213\273%\310<\275\177l\324\274\353x\001\275Ws\261\274uD\003=\270\327F\275\311\346\267\274**#\274\213\316\332\274\317s\022<}\333\236\274S\376\212\274\034\270\214:\360\033\030;\347\324\260\274\324\356\031\275\002`\330\2740\332\373\274\250\326\017<\234\301\t=}\356\333<Zw\031;\201\023\005<+\374\007\274\255\336\n=\326\234N\275R~2\275\204}\243<\014\2259=\374\307Q=\303\252C<\301\203a\274T\241\365;\217\360\005=1\220\356:S\025E\273\240Pu\274?W\303\274z\365\343;\205\3069=~\264\334:\342\227\021\275\313KG=\017\333O=\343\244K<f!\032=8\203\312<}_\260<\237:\345\274\004z\004=\200Y/\274>\350\250<\202k\002\275\354w\363<b\276\253<N\004\341<\363\323\210<,W\330\274\253\252\t=\256\267;8\312\204\231;H?\350\274:$\34691F\025=\333\370I\275^4\312\274-\363\r=\226\022\307;\340/\023\27488Q\275c8\363\274\337G\324<\353K<\275\207$\021=\242\0216\274\216\343J\275\373H0\273\005\301>\2758\262#=)\271\327<i@\301\272\321\306\245<\2638(\275\036\243E\275x\321\364<\310\271\277;\224$\017=FM\341<2<t<\326\320R=z\353\372\271\223\031:=\362!\\<\\\227\005=\213\031V\275\242AB\275%\225\330<;\227\201<\212=U\274Hx1=\234-V=\022|<\275\334\270\r\275C\2129<\247r\026=\331\243\324<\277\210\232\274\033x\221\273c\305\014<\321\010\356\274\364X|\274\203\335~;\320F\222<\277f\323<`\2629\275\230\217X<ov\013=\005\0332\275\034P\350\274\343]\204\274\313\220M\275\264:J=>\274\236<y\017\013\274\002O\304<N\243\305<|U\';\035\030\240<\321\001\032\275\375\304\210\274O.Q\275\351\370\247<\204\027b<\37712\2748\255\225<\253:\353\274d\016\027=\373\003\202;t\3473\275f;\364<s\204^\274\376\344N<\340\322\370\274\346\250L=6@T=%3\t=\210\207\306<#\211H=I\203C<\266\311\236\274\214\342\212<\376\270g< \214\222;\352\036\230<\320\271H=\220\251\275<\340D8\275\373\3510\275\002\276F\275\215\031\006=\207\332J=\346\230\306\274\247?\342<\322\364D\275`\310)\275\311UE<1uG\275\235\330\013\275GP6\274\351\tT=\233\363\"\275\210\343\371<\314i\017\274\227\')\275D\002\226\274\304\301\252\274\211\246\n\274\265\254\n\275\213\233\233\274sd\377<\246\371\262\274b\232_;\263F\n\275\000C\022=#\355S=`\272\265\274\236\275,=+.\034\274@\343\256\274\373\n\037\275\023\254\332<ga\024=_\324O=\235u\023=\333\335.=Bq!</\207\217;\275\2267\275\r6@=\357\342i<\032\237\211\274\330C\260\270\230mV\275w\016\270<\232\3009=U\351M=\216\2603=\333\2673\275\3357V<\212\255\021\275\234H\315\274\227N\314<N57\275\255P\316\273\236%A\275\366\330\364\272=\273\031<1\234?\274OTm\274k\376\026=6qC=\240n\201\274\r\321\272<\342\252\343<x&\323<\337\370(\274iwA\275\205\330?=\314\243\373\272\022o\372\273\375DY<Cd\255<\336J0\275\320=<=\316\336\247<\317\251\316\274\"w\334\274\246\375I=\303\332Q\275v\266Q\274\332\006\260<I1\372\273^\206%=\320m\027<\211\257E\275f!\227<\270\005\007\275B\316\304\274L\351B<\236-\370\270\273)\342\272p\355\350\274G~\034\274\223\223\230<\345/9\275u\037\240<\360z8<d\314\377\274h$0=\353\330\032=\322\342#=m,R\275\020\036}\2742\3273\275\376\006\362<x\245 \274\376\323\000\274\206\245\264<\256\0160=al\032=2N\246\274c\220\267<\362\320\265\274\017\027\217\274\206+7\273p\221\250\274/\022\364\274\307\260\n\275K\021\t=7\203\307\274o\322\032=\360\257\375<S\357\244<\016a%\275\017\222\322<!\301\r\274H\220S<EB\"\275\322\324$=\335\255\234\274\332T\270;\224\206\356\271QX\301\274?\353\330<\314\226\030=V1\037=\373\207\207\274\265\260\027<\331~^\274\366*H\275\262]H=\315+\312<\022CO<*\035\326<F\"\235<gi\327<\033\177\026\275C<n\274\311k,\274:\264\373\274\375+\301\274+%F=\301j%=\264\300h<\213,\224<0\241\004\275x\313\256\274\340&\023=\212\345*\275\261\357-=\342a>\275\301\022e<\302\200*=\273\372\247\274\003uh\274\205G&<\351\245M</\234\025\275\270\030\336<\007\311\032\275\205\321\350<\232\320\200<p5{<\372O\263\274\304/\027=\005\3301\275\265\205+=\257\362\337\274\003\002%\275)O>=\232sO\275\317\3105\275\372m\032=\255\031\036\275!\375\031\275n\331\221\274\002\364\303\274\376\320\'\275\220h\232<\005\033@=\253@\345\274\274,:\2750N\017\275-\026\351<e.\022=\245\035-=8\'\224<Ao{\274\321\261P=\257\316,=|\373\201\274\336\003\320<\031%\202<\237v@<\367\270\021=\260\217\205\273\222\2321=R/\202<\006/3=\212\003\317\274\274~+<\362W\221<\317\227\022\274\303V\317<\\\250\271\274M\002G=\263\214\306;+_\031\275\226&\037\275!WR<\275 B=\241ME\275\334\226\372\274\363\261H\273\212u,\275\235\234\214\274~\216U=\331\357\256\274\324\210\225\274\017\000\024\275\247\024)\275rF\'=\233(F\273\364\357\335<4IT\275\326\205\036\275r\007E\275z,\204;\332\222 \275\230\224\233;\372zB<m@\001\275Ih\020\275\204\3252\274\3355\004<t\005\020\274\307\304\274\274\377\257 <\020Y\022\275E\264\020\275\203\242@<\250oQ=\333\036V\275\266\260\262\274x \323\272\000l\r=\357s\340;YmR<]\031\275:\031[(=q\000\255\274\261\323};YH6=\301\342\226\274\t3G=\2036\246<\007^\310\274\033_B\274\305\361\363\274T\030@;\375\2205\275\360\254\177<\322\246w<=\264\017\273S(S\275\025=0\274\324TN\275\246\253@\275\3649O\275\177\210K=\343\202\022\275\013\277\002=-\266B\274u\356]<\214\326\010=\255\273\253<q}!=n>\216\274\335G\333<\301\276_<\245\037)<Y\035\247\274\262\307\021={\n2\275\331\232\306<\205\002C=5o3<Y\353\022\275\311\274\334<A|\310<A\037>\275\221Q$\274\267\203\330\274m\003\317\274\227\037\310<H\2746\275\233h\010\275\313\037\311\274\256nO;M\304\001\2755]\017\274*\352 \275\032p\033\274\330z\370\274\244>4\275zn\021\275e\371\315<\262\275<\274\332\220q<>\213\372\274Z\266\366;\354\347==\213\033\236<-\037\326<\334\2108<\375\304D=]\376\325\274\367c\277<\340\002\363\2733\025\307\274\222(\026<:]\334<\336\226\006\274\000kE\275Az\005=\001^)<{\242a<\335\2674<\216-\010<\275\217[:\272GF\273H\303\'\275\030uP=\312W\214<\313!\017;V\204\230\274\374\203\r<\301\315\365\274\225\327\212<\374\"V=j\207;\275\257\366\302<\276I\030=\013\361\270\274NP\214\274\366w\365<\357\001\240<8+\365\273lp\230\273f.\301;a\273\265<\214\022%\275-T9\2755\270\232<\022\321D\274\275\307\000\275>\204D=\205v\317\274e\026#\273\010\342D=`ZW=\251m2\275\367\016\300\274-D\373\274\333\355\210<9\377\275\274b\240\322\273\031\275.\275\216/:\275\275\010\003=\037\361H\275L\024\270\274X\313\374\274\311\2157=\331\017!\275\020u\346<\201\214\202<\262\354\265<\334\247\013=\226\3265\273v\306\336<\214u@\275\262\t\265\274!\200\026=\217!%=a\212\317<(E#\275\3273\023\275\335m\\;\265\025\223\274\272oU=j\225\363<f:\n\275i\364\347:\010\226\272\274\224\235\310\273V\'j\274>D\277\274\360NP\275u\305\331\274\323~\006\275\241l;\274\267m\010\274\332\265\227<\377\345G\275\275\251\026\275O\016t\274n\024==|\234\263\274+\r\210;\206\232\037\273\216\302\375<\351\326\"\275]n\031<\030\251\360<\201{\034;\263\030A\274\243*\266;\222\231\331\274V=4=G3r\274,B\234\274\255\263\352<.\231&\275#N\337<\233yr<(nR\275ov\036\275\367\367+\275\035\353\"<\227j\3338.\307\201;\"l\326\274\371M\004=\302\201\000\275\213\377\271;\225\276)=\231&L\275y\007\273<\032\025\350<g\266S\274I\322H=\203E\361\274\007\233V=\326p3\275\257\1773<\332\344\363<\272g\241<q!4<\301$\335\274\027x0\275)\207\373;\353\274Q;P\373,=\002_\177;\341\357F=\304\277X\274\302K\303<\353i\225<\372>\303<\351P\360<\312\346\'\275&6\026\275\2554\267\273\366\363I=\333\201\371;c\334M\275\364d\251\274\300\342\332\274$a\264\2749\241\373<BMC=\353\217\202:?\321\307\274\270\250\253;xI<\274\013\245\030\275\224sr:;\330\215\274\215\201\210<\221\271\373<\010Go<\357\312\035=\200\232\004<\306\n\t\275r\253\241<Q\246)\275\'\312:=\315_\305\274\231\271\237\274\332\343\266\274\255\226%\275\354kV\274*\n0=\322\206C=\316\363\356<\360\310\243<N\370\371<\372?\360\274}\364\213\274\316{\246\273\212\032\273\271\357i\314\274Y\021*\275\375|\326\273\353\215E\275\030[\010=\340-D<)4\236\274\357\0013=\275\354\024\275\366\033\352\2748\367\365\2747\251U=\277\240\035=\206q\270\273vz\247\272- !\275\340\324\352\274\017\024\243<\304\341W\274V\327\235\274$\274\246\273\274\244Z<+z\013\274\005\252\366\274\025\020R<\035,Q\275K\343\030\275-\216V\275w\0030=\201\222d\274!d2\275\261;\375;\330a\007\275:\257\237<\333\367 :\r\031-\275\223\3517=\032\2710\275\3217\010=z\310\261\274\033c\004=~%\305:\203\353\013=\323\275H\274\202\357\036\275\263lO\275ug\021=\240\212z<\245\017\346\274\234\261-=\202\352G\275\231Y\020\275J\232K=|\t\214<\345\200m<\3323\030\275\025;\223;P\226\371\272\273\241\316<6\325\312\273\307\3079=\376\025\363\274$8P<\377u\224\273\263`\016\275\236\026\254<9?\354<y\255)<Xf\014\275\213\337\270\274\256[==#\277,=\212\236\344\274\022\033\033\275x\320\340\273\025\'M=\242\334\373\274\306x\002<.6\027\273\210\240\346;\256\346\004=J\232\350\274\233\007U<\203\216\006=\000\225`;\303\2151\275\030\204^:\376\357+\274:\376O=\336\231\016\275\177\363\203\274r\234\024=0\267\021=\211\217*=N\024\235<\365#@\275\326n\"<k/L\275\320\027F=\306\337\023\274e\220\034=\375\2147\275\203\266\n\274\013C\031\275W\263<=&:\224<+\200%\273\234%\316<\256\236\343\274\310I\235\273\245\245\227<k\013\016\275\237\377\201\274\201\3128\275\350\230\t\275\005p\000=KG\323\273\303sv\274\016\306!<\024Bv\274Y\013O=\324i\203<x\2350\275Y\352\001=\217A\n\275D\010:=4\333\300;\203\024;=\256qB=Ix\020=W*\342;\327\001U=\006\236C\274~\370\316;\305\237\001\275P\376\000\275pE\003\275\263z\323\272\203\2639=e\34268NdD<\366t@\275D\313O=8:B\273R~\226<\277&\352\274Es\305;$\322\021\275OO\370\272\253\314,=\343\367\374\272\307\003,<\027=x;\263/\271\274\240\000B\275\036\342\274;\374\3721=&v-=k2\033\275\023\232\031=\030c\311\274\301\211\204\274\370\247\t=\333\035\257\274=\216F=\301\007<=\305w\017=\247\305\375<\201\313T=.s\314<\2301\224\274\335\325\363\274\005\204Q\275\313\365\251\273\004\366G<\313*\037\275\354;\017=\221\200\223;\311b\021\275R\222\360\274\240\334\017=\205\257\241<_0\020\274\257!\350<\234\024\246\274\t;\314\274\343\352O\275p[3\275y\201\356\273\353\346\036=\257\360\201<_<8\275]\013\037\274#W\226\274\247\243P\275\266\364D\274\234E\035\275\272\220\261<\344Z\246<\033\275G\275Be\000\275\0130\341\274D\017\003\274@I>=S\301S\274\343\037L=4p\025\275\032m\322<h\005\016\273x&T<\271\210+\275tl\205;\263\324\034\274\372\341-\275\346\341\376<\276I\330<\177\323\330\274\324\302\206\274\223\356R={\010\001\275\213T%=\017\2570\274\313N\033<\244\250\262<`\027\234<a\320\033\275\206\004/\275j\020\026\275\233\210 \272\214\250\317<\205\3701\274\361\367\225<>d\264\272d\036\243<\253:z\274\n\316\027\275\210\007\357\273\270-\021=\374\020\331\274A\\\203<,\264F\275\234\177\023=\001e\313<\322{\023=\027a+=\257\363_\274\374\346\365\274\203\372\356\274\347D\'=Px\002\275\256XO=*\250\017=\272\237\257\274\020m\277<\262\343\247\274i\323p<\245\324\273\273\251A\211\274\352\357\023=u(\031\274+\350\324<\030oQ\275\'\017\034\274`r\344<\327\311I=\177\353\023\275\255\256\211\274\227#D<\372#\007\273\034\327L=J\330\366\2743\0071\275\240\372\"\275\343\023\215\273OHx<n\372\036\275\2208A\274\370y\363:\037<\000\271.\323k\274u\3135\273\245\336\026=\363x%\275\225\004\266<\227\377\310\274ur\277\274\027P\007<`(\350\274\231\310\006\275\302D;\272.\371\211\274:jM<\342hP;n\356F=\367]\213<\323U\371\274\216\247\364;AD+=\361[\027<Z6\001\275\271/\311\273\261.\332\274\225\231\241;\316u\333<\240\214\031\274\022\307\213<\014g\371\274\024\343\017<\253]\332<\304\3578=-\365\267\274\363V\330\274\277\021\024=P6I\275EE\262<\201?D<\357! \274\201\206\335\274\261#\025=~\004\261\273#\003\313<\013\025\273;G\251(\275G&\r\275\365HB=\254[@\274\277\225?\275/vN\275;\260\243\271\367&\036\275\007<\221\272\243\223V<$z\014\275a\177\266<\263h&=%\300\033=B\'i<Z\2720\275*\223\373<\320\267\025<\035\004)\275\356\235\356\274\311\224\303\272?t\274\274\373?\221<%\372\345;\263\253\315\274_\014\217\274\235VQ\275M\217J\275\244\3526\274\272\245\254<Y\306\025\275\337R\234\274\034\013\200\274\254\373\007=X\3608\274ke\207\274i\364R\275\005:,=\221\024\031=\0002N\273\376\020k\274T>O=\365\005\377\274}\002H<\230S\314\274\273\003\277;\311\206\334\274i\032V\275\260\361\"=\351\333O\275\303n;\275P\216\267<\374E\211\274\227\236\032=\226\2619=\215\354J\275\"t\026=\271\223\235\274\326\253\253;\007\241\376\274\225p\217<\"\331P=\302\214R\272\363\253\336\274S\265\330<K\256g\274\364\007\'\275H\"\006\274\211\333o<Jm\205<\324\226(=>\007\304\274\316\313U\275\212\250\"=\222\330\354\273\267cT\275l\313\022=\306\236V\275\3651\227\274\375\322\243\274\266\370\377<\344t\204<\211\342O=r\010q<\352\237\257\274\334\363\343\274Og\027\275\024\2676\273|?T\275\351m\023\2737\355\'\2752\366\014<\202\213T=n\022l\274\371\203\001<\'\017\006<\210\275\266<\262\021I\275\"x\253<\010\222\245<\023\246+=%\306C=V\313\251\274\013\242H\275\032\000+\275\251\333\234</ K\275\326\3679=&\223\022\275\256G6<^\2041=3<\247\274\010\343\322;\326W\340\274`\2141\275:\367j<p\027\035\275\310\034E\275\242\255P\275\215MB=\223)\017;\374\210\361<\0249+\275\334\370\010=6\367l;I5\236\274$\222\223\274\222\030I\275m\321t\274\217\270$=\022P,\275\260\327\277\273\010\360\214<\345\366\275<\301\017\333\274i\374\033\275\277\320\364\274\\\355\226;\217YQ\275%\312\330<\263t\307\274Ua\326\274\257\3334=!P\020\275M\234%\275\330\300\270</\225\017\275q\337\360\274\277\376\022\275\376\006\017\275\263^\023\275R.5\275\333\202\274;fkK=\307i\024<\222f\001=RVO=\273\020\333<\365\241&\275pl\256<.\327\362;\037\217\272\274F\243==\241\177[\274\033q\261<L\366\003=\316\025==\274\255v<\260\347\035=\367(D\274\032[\310\274\022\201~\274#\252\213<A\364\241<J\250\025=\'\200\254<A\022\n=T\340\345;\370\257@\275P\330\231\273R\2440=\302\244H=\336\r\203\274\361\313\234\273Mw{9\2361D<\220@f;\202\260\246<\272\355\000\275%VS\275\210\327?<\302Q\237;\201\337\256<\240(S=~\360\n=\323\365\314\2732\263\221\274\211\315\257<\221\216\231;:\242\374\273\242\237V\275\360\232\000=\366V\372<\274w\213:\007u\350\274h\340\203<\022\263R=\253:\340\272S\243\242<\262\002\316;\010\246\340<\177\"L\274\316\303\202<e\030H=\013R\367\2749\204S=\215h\277<\356e7\274\243A\202<\334\021\006=f\3210=3\336{\274\2414\226<\221\301\026<*\300\256<\242D@\275\377\327\010\275,\'0<\304\3455\274\362\202\262\274t\341P\275U\017\213\273\307\372h\273[\330\230\274\247O5\275\254w)=ZoV<\257\323A\275\2559\000\275\320\345\263\274\002\201K\274\316t\273\274\244\333\001=\325\210\214<\355\013\010\275\"\210\241<\262\353j<\316x\272\274l\221\313<\010\016#=\320\371\351<g\326\343<\304\342\322<=\221V\274\347JE=\335\256\311\2742+P=d5\004\275\2351\037\274\3315\254\274\021\021\004\275\273X\354<\340\335\022\275\014\032\013=m\217x\274\216G\001\275\316\360\023=\377\265^\274 \013\000\274P\331\352\274\033\332\004=\"8\005=\343\004\025=Yo\236\274\210\024\313;\240\313/\275\326&\366\274\235=\210\274\234l\016\275m\346&\274\315\342\'=\2418\275\273\354\375*<\355\330\201<\3125\t=\250\345\211<\2170\354;\265\271 \275\263\226%\2752$x<h\013\030\2757u%\275\335\276-\274\001\372V=\315A\334\274\r\266 =0\236r<H\006\237;t1E=\240)\225:\3057\243\273\250\344?\275\021\035\253\274\367`\222\271\323\306\375\274\317\006:=\227`A\273Qp\313\274\232\374M=\010\351V=\206N*<\263?J\275\200\026L=jqN\275\325%\277<[_\006\274b\350 \275\342M3\275\321\233\265\274(\026\277\274\251\364\266;4\277\006\275\nN\214<\030\000\356<D\025\333;\245\264\213\273m\331\014<\305\004\255\274\350ny<\267\251B<\244N\317<9\247(<M\034\313<~%\026\275We4=\341.T\274cl%\274\200\322A<\356\354\033= s#\275\257\335\300;\266\204\016\275k7(\274>H\3669\177%\363<\3525\212\274\266\320\022\274\010\241M=\3076O=\330:$=\375\225(\275\220\241>\274\035P,\275Q\340G\275\223q\037\275\3019\r\275\003\247\226<\373\'\371\274\037\2104<\211\311/=+vi\274\250\007!<\\\271\356\274\370\231/\274nv\323<\\y\233<t\223[\273\223;z\274\351B\023\275\243\343\"\274\036\321\347<\017V2=\2700\323<i2L=S\235\200;fR\032\274\317\316\256<\254kC\274\230=\306\274\273\207\023\273\326\360\370<\201\250?<\217\355\032=\3223g\274\377h\362\272\341n\201<n\277\325;\203\335B=4\213B\274=\331\300\274\366f/=\315#\261\274\361b\030=\335\200\212\274\034\337\005=\2607/\275S\003\210\274\367\206;=\244[\225\274\263\254\021\272\350\222\265\274\311\0045\275\345\0347\275$h\376<\312\2236\274\314\014E=o\272\374\274O\005\256\271\267#S\272\226Mw<?)\036=E\035B\275\003\023.\275Ht#\275\334\000=\275\270\241\371<K\264\352<s\363A=:\212l<\213\274\242\274\302V\373<mk\324\273J\034E=\264\3419\275\323\201\367<\2075\021\275n\235\207\274D\267\210:a\245==\370\364!\275\221\032\036\274\017\035M=s#\014=\t\000\032=\310\3448\275s\341\2649|\3651=\335\234;\275W\260\364\274:HF=\240.\024=\315(\352\273\233G\017\275\\e\344<\002*\005\273\224\224]:\365\255\223<}\356\014\275\354\325\004=A\000\326\274\316\2718\274\000\245\245\274D\202\230\274\020\214M=\206y\007=\345J\247\274U\2259=\273\375\350\274T\273=\275\271S\"\275\270\n\007\275\217\366\330\270v\024\213\2738N\345;^\300J=\274\340*\275\321\371\227<\007Y+\275\303\335g;\221}\003;\337\026P\273W\262@\275\0315\221;\234\0230=!\317\233\274\226\322\314:\306E\331;f\025V\275\232i5\274P\377\300\273\212\026\240\274\257\224\224<\375F\"=\347\300\031\275\256\353\341<L3\265;\350\232\314\273\374\366\023=\201Zg<\266\342\263\274\321\326\232\274\313\276\252\273m\006\016\275\264\031\227\274\022\010\370<\310\372F;\257\332M\275<5W\275,EC\274\375\204F\275\024\317k\273\266G\036\275X\035O:R\365\302<{\357\277\273`\240(\275\255\301\305\274~`\224<v\363\303<\311\2560\275m\220y;1\224\241< Jj;\226t\035\275\2118Y\274S\037\327\274\325\271\3459\003&\353<\374\362\355<\253\n#<H\254\371<$\211k\274S\013s<.\023L=j\315V=\376\324B\275#\306\231\273\023;\336<+H8\275\323\363\205\274\263\251\222\273\312ZE\2751>\235<\356\236P=\252\031I<\347\200\345<\374\2528\275\036<\274\274\356\276P=\316\366\';h\362\251;\254K\013\2750P\236;\376\227\022:)\216.\275t\375\033\274\322\243\263<\317\'\033\271\221\220\002\275&XY<@\306U\275\002v\001=|\213V\275\302\212\362;\251\202\346\274X\241S\275\340iR\275\323\035g\274\223\033\200\273\206\362!9A^\024=V,\013=Bi\030=]+8=\350\2602=\213x\305\273*Z\360\274\307-N\274X\257k\274\232q\363\274\211#\\\273\024\002\035=W\t\264<E\260\341<\234\001\r\275fbF\275~T\265\274\327\200I\2751\246&=\030Q\253\274\017\003\331<\306B\360\274\212\0272\274\030iH\275f\267+\275\3753?=|\370O=\254dF\274J\224\n=\000\207\230<\333\322\236\2745])\274.\345\375;X\022\365\274\216\035\372<Ts\252<\271I\010<\036;\300\273wB\223<\006\016I\274\371f\223;\310\300\276\272gk\354<V\222(\275\261\257p\274k`\246\274\005\372\005<\327g\261<\310E\230\274\377X\317;\01733=\312\263V=V\230\026=j\330\352\274\036\317?\274L_(\275\314\325\305<74U=vb\334\2716C\273\274H\327\270\2733\214;\274\272\233(\275\206Nr<\242\021\340<\032\247\023\275\216I5=W\0037=\260\337r\273s~\324\274\001X@\275\272?\025=\337\006.\275)\024\310\274U2\004\275\340\306\323;\014?\324\273\263d\271<\321\r\207<\230Q\315\274\247@\\\274\003\353\251\273\315>\220;\263q1<%\237\345<\370\367d;y\2476\275k\210q<X\366\003=*a\255\274,\023\001=\372:E=\026d\300\274UGN\273\250\243:=\026\210U\275h\005/=?\020\340<\244\347\224<f\335 \275\212\325\316\274_^&\274\225t\021=SrW=h\351\017\274yb\266<j\331x\273\020q\226\274\243\n%\275\243\252\016<\221\225.=\n\332z\274G]|\273\360\342.\274\331G\033\275\205\367\210<%\357/=4T\237<\324bN\274\317YN\274\375\344\024\275S\267\005=\277\2741\275\t\276c\274(\3129=\256X\222\274h\347\036\272\364\376&\274\350\220\205\274S$\235:4\023O\275\315\324\017<g\225\345<\342\231\030;T\275L\275\322\304#\275g\221\271\274U\252\256\274yi\344\274\004\222\021\275\216\247\356\274\007\263\260\274\321\352\376\274%]\217\274!\016=\275Kg\r\275E\273&\274\326\212P\275 \r\003\275=\212\264\274\004\274\037\2759M\036\275[\347\333:\013e\237\274\336\301U<\r\372\035\275~\003\022\274\'\260m\273$\233\021<\220\016\350<c\300\241\273\353\321b<O\022\032\275\242\247><\231\353\317\274\364J%\272$G\351<H\200\215<\343\303C<=\361k\274]\261\004\273\301F\n=q}\024\275$\001\013=Mg$=\214\300?\275S\037J<\372\241U=j\nX\274\232\377J\274@j =\034\370\023\275\250\017\340\273\320\233\227<\2547\317\274L\310\261;\234\265\343<[]\016\275\335\304\347<\260\212M<R\222\023\275&\033\037;\311\320\210\270\254\037\026\275z\364\020\275\226~,=,\014\030\274\240M\n\275\312\'\361\274\3065#=_\330?\275\014\337\231\274\247\361\217\273\261gA\275\332A\021=\332Q\024=\332%N\275CFL\274\224N\201\274#6\215;=\304\013\274%\264\223\273kj|\274\257\255U\273$xQ=\034\311==\016\222\"=W\222\362\272\037\350\267<\242\376&=\013\306\'=\006\355<=\315\233#\274\302\355\021=\246\373-=\312\340g\274\031\241\247\274\\\177\303\274au7=\216n\014=\271+:;\'\345\020\275*\0220=\031\246\020=\325\271>=C\036\261\274\327(V=m\250d\274\331D0\275qj&=O\002\221\274G[Q=1\336\253\274s\253\267<Q)\017\275\313e\275\274Dg\030\275\236\t\001=i\253\307<\201[\340;\007\204\365\273CD\342:(\357;<6\032)=\236\327\203\274$\322J\274\307\017\265<\250Q\257\273\263\306\361<p\261\274\274\204\220\276<\261\277\270\274H\3603=\371\371A\275\226\330U=\033\336N<{[@\273\034\331\326<\223\343@\274\251\23069K5\340\274\325\242n\273bn;\274\303\315\330\274\332\342E=\335\036\020=\251jJ\273\320\367,=\277\'2\275\231\307\242\274\243\311==\014\013+=\026\262I=\271\327\020\274\267\225*=G\241\246<LT\026\275\264|\225<\031\320\254\273\256?\n\275\260V\255\274\320\366X<)\\\033<\307\346-=TT\367;\262c6\275i\273\005\275\026/W=\247K\032\274\217\021\027=]u\274\274\353\206 =W\002\241<\323\2377=\371\027\350;\347\\A\274\357\267\323\274\315\235\006\275\247\300\252<\345\223\355\274\354\362\017\275\307\0315\275\3155\t=G\212F=\262\2421\275q\372\301<g\267\r\275\374g\006=\261\301\203\274\241\252T\275\211u(=\366\\\n=\366uP\275R\267\256<\025\220R\275\351m+\275\235M3\275T\251\206\2744KR\275=xO\275\232\037C=k\241T<j\243\024\275 \372\262\274\re\313\274\307eD=p\262A=\363\205\3078=\221n<o&\364<z\320\002<;\374B=G>\007;\326s\375\270D\342\'==i\006\274\006\307\177\273\201\0047=\022ZW<\265\336$:tX\325\274\257\n\335\274($\336<\314yA\275\237\021/\275\204\221\331\274n\026\307<goT=\316l\016\275\262\241\346<I\351D<\n\353\343\274\300R\354;\203\374\342\274.\200\326\274\203\245U\275\322\014Z\274*\363;\275\273\000\027\275g\351(=R\340\007\272\t\365K<\2207\226<m7>=%\377\203<\375\350\'\275\215\304L\275O\237\032\2756\3068\274s\365\205\273\313\032h;\343\007\263<M^\206<$ \232\273H\3007\275\'\n\"\274J>\305\274n\276S=-\233o<\257(F\275\242\360\332\274\344\001\342;\323\332\332;y\270S\275\2256\336:\274X\003\275@\r\320<<5P\274\037Y\362<\025\023\350\273\357\333J\275@\000Q\273\275\273)\274+\025-=\311\377\370\274i\227&<\350z9=>u\346\273\353\273\314\273\3368\362\274\321\263N;\377\037\247\274\023\r\337\274\304\302<=\353Q\372\274#\257:=\357\320\030=\351\317*=\235\315U=\246EU\274\277bU\273\352\2529=h\271-9\024\212\243<\026\315\305:\215p\\\273\335\320\274\274\210(\211\274*W\223\274\366\237\024\275Z\375\220<1l><\325s3<\234\010\002\275\252\265\236<\276\023\035=\r\372]\274\302Q\377\274s\251\374<\3715S\275sm\022<}\370\341\274\\\3303=/\\\202\274O\224\033;\305\2264=\311sq<\317o5\275u\275T=O\250\250<\230c\313<\326g\013\275\262W\273<\330\352@\275\316J\177;j<\037=>\342\t=H\212\036;e\335\035\275\374#D=SEC\275\345\005\027<:\272*=\000C\240\274>CJ\275\022r\332\274\267-\215\274\276\310\373\274\374O\242\274n\355!\275h(L\275\271w\240\273\362\307\314;\006\007\331\273\242\332\013\275mi\230\274\025\311\312\274\254?\023=c\216\353\273U\260G<M\302\235\2743\372\307<\322j\r\275`\214?\274\365#\241\273*\231M\275%\3120\275\322\217\241\274\230\r\271\273M\377\222<\203\017\372<h\2626;i\207\024\275\366G+=\210EK\275\300\211\361<q\216D\275\251F5\275\307k\371;5\344\267<\354{==W\365\277<\2138@=C\275\356\274\273\247\014=\'\027I\272\312&\256;q\320\232\274R\253\276<\370E\001=\245\354\322\274\306\311\265<\265%W\275\372\250\351\274(\310*=\307\237\244;\355\250$\274<\037B\275\0248\334;\026\267\367;2W\213\274>\000\023=\014\010\027=\203\271\010\275\324i\372\274>\252\205<\217cz\274(\2316\275l\214!\275\025\\>\274\345/\032=\025J#=\271&\243\273Nx+<\016h\250\274\300\255\273\274\337.\247\274\016\252\337\274\336L?\275\364v\030=\340\221\303;\214\026\r=\307\356\210<GA\244<0@\004=s\263\206\274\257\352\256<\333o\017\275e\360~<\373>U\275\322\325\231\274X\275\224\273\'[T\275\200\\(\272\207,V\275k\034\n\274\003\036\320<\234\345\342<\321 !<\202- \275YnP<\222\000\327<\200\212\220:{\\\326<\310`\026\275\362\320k\274\322\334\324<&\342d<\014\223\000=%\302:\275\310\320C=x\241\236\2749\342\240<\231F\210<V\205[\274\022\r\241\274\205\2676\2752\3237\275\014\267\246\274\301\367^\274\350\212\017=\027\331&\274\014,\277<^\305a\2739\325\026\275\031\346L=\320S)=\210w?<\024b\016=\373\326\2319\265\234\316;\351\250\240\274\3677 =\315\255\t<\317\345y\273\366lT\272\256\034<=Z*\363<=\267\'<\227\363\311\274<\324Q=\371Y\232\274\220S\367\273\307\250\262;\222\314\025\274\354\212&=\234\366&\275is.\275\256\312\032\273|oH<\270\216\204<\260\313\256\274\325\002\220<\2336\252<\234i\337\274\337\"B;\346\354E=a\367\022<\352H\034=\\\367V=J\211\273\274\262\014\335\274,\240\214<\240\365\307\274\252K\032=e<\326\274j\273\212<CY\377\274Cs\007\275\261\234z\274\345{\234<\340\033\025\274\317\344\241\274\361[\n<\366\250\317<\347\343D=\030G\212;B\341H\275\203\231\352\273{s\362\2744?\020\275\244?N\275\021:*\275\rJ$=\227\2068\275\332\217\032=$\3777\275q\206\325\273\035\nP\275(Z\221;\336F\317\274\352\035\017=[y\033\275 \321\234\274\010\333C\275b\\#<\233~0=\000\265\213<\344\260\355\2733\017\354<\013\307P=\305\217\267\274\304\272G=\357T\330;\334\265:\275;4&=\324TQ\275W\260o\274\003j\005\275\240}\352<\317R\025\275I\376\r;\306\025S=\234\352\231<g\026\371<\271R2:,A\"\275\3722A=X\2320\274\223\025\025\275(h\006=\211\200\010=\376\277 =8\r#=\037\026S={\334\370\274\210\213<<|\346t<o^\230:\365\020\034\272D\314\006=\355\240I\275\266\370\316\273`\310!=\215}.<<\206\253<\343\204\271<\357\317\030;\271\262\024\274\333\335\375;\010\367\354<U\321)={4\371\274k\356\257<C&\031\275$\364/\275!\310&\275-\200\027=H\002\031\275L\027\r=\023\333&\274\326{\313;\321(Y<\026q ;$p\331\274\377?A=\226\3640\275N\303?\275\223\252\346<1\226\363\273\263\010\341;&\212\367\274\023\270\322\2746\245\262\274\354z4=\005\277Q\275\2217\014\275Q\305n<\326\341`<b\357\263<\217\222\336\273}\245\373<D{6=FJ%\275E\376\344\274\006\222\306\274-U\336\274\005\t\033=\334\257F\275cu\212\274\344\252@=\361s5<\336\351\213<\252e\353;\254I\345<\245\247N\275\224J0\275\337\0341=\335\322\271\274\022\321u\273?\004\325;K\352\232\274\345\t\223<\177\325\364\274\206j\227\274[\205.=P\231/=V\265\300<\274%b<\337\231\006\275{\014\340<\014\345?\275<3\354\274\252\343\331\2745I\255\273\02418=M3\313\274\337\357\347;\261\200$=-\316\031\275\030\3712\273\377x\370\271\036\203\033\275\241X\243\274\213\3554=\213\006\032\274Q`;=>\331C<\254E~<\256\272\243<\364\261\256\274\362\rL\275\030w\037=\2415\277\274\363\336\007=D\323*\275\007\006\202\274\336\314\346<\315_E=\\\276\367\274EU\203\274b\2504=\010\230\357\273\261Ub\274t\2325=qt\200\274J\274#\275\215\334/\274Z^\330\274\347\0306\275\020A\010=\003\277\'\274\320\3439=\257m\2638\340\351\312\274=\365E<\330\330\333\274`(\204<\277\252\306\274\003}\247<\212H\312<\345YU\275AA\337<\340}\304\274|7Q=a2\300<$LC\275I\t\274<L.\t\2759\207\016\275?c\013\272\367\324-\275\036\201\231\274\030_\017<\241\"\221\274\270\017-\273\216\342\350;R\363<\274\0032\363<\252\213;=\270b,\275S\031\035\273\373:K:\245\033\300<\341{\363\273%\226B=c\026T\274(>\033=\341\303\033\275\"B\036\273\006R\354<\336\'9=\271\254\235<\rI\000=\210\200\371<iKS=\273\237!=\334\352\r\275M\004\003\275\307T\332\273\240\001G\275d\020\021=u\272\033=?\354\270<\225\265z\273\215\201G\275F|V=</B=\205fO=\267A\376\273[\027\335<\341}\254\273}\344\316\273t\322\000\275\202\236S\275\375@B=\r\206\233\274b\307\35593\366\014\275\264\257K\275i7\367<\377\375/=\251\2621:\274\332!=\n\260\027\274\354\322\003\273(\300\314\274\336BW=\3004\n\275\310\020\007=\262:\212<\033\264\036=\216\275M<\036./\275\nd\323\273aR\363<\203\007P;\201!\272\274\360\245S=\000\0054\275\264\310\001=\274.N\275;\031b\274\2669\321\273\021\'I<\352\221\371\272\275\326\254\274@\2260\275\256\305?=q(\342<\365$-\2755\251\256\274}){;\200\003\363<\331\200\002=M\372.=#\2212\272\t\211\303;\004\227Y\273\357S\003=\337\277B=Y]\207\274\367\206~\274\211\307\321<D\242\355:EHv<\033\272\017=$\027\240\274\264UD=\304\246<\275\210b$\275v\314O<\\\023\254<!8\n=\250\337\"=\020v%=\350R\347\272pB\337<\rn5=\302\272\262\274\007\244\227<\365\333;\274\220\366\252\274_\244!=r\177M\275\342a\013\274\324\214%\275>\r\341<a]g<\236\305\031=\361\245\241;\201,\024\275\275e\371:k\016~<]\234\006\275D4\251\274\304\306?=\003\272\352\274?A\013\275[\317\242\273y\"\310<\275\303\225;\000\032\272\274&].\275\203\245\022\275\235\206\314\273\247\315\323\274\345\336\364;\324L3\275fxE<{\214\214\274\221]\342\274\303\235\277\273}\212\267\274\377\007 \272;\2030=\311-\037=dv\226\274\0167!=V\265\021=Z\302\031=\362\013\356<W\021\240\273\"\3203=@(*=\2676\031\275N\031\036\275\217{\027\275\267\nz<\273\232S=)*\256;v\320\272\274\312q\221\274r\376\246\273\213\355\261<\311\221\206<OC\237\274\367\372\025\275\373\365@=x9k<\222!\353\274\221\377\007\274\177\034#\275\373@\200<&\007\202<-\350)\275^F\363\274\226\341\354\273\370&\243;\365P\224<\254\215\350\274\313bv;)_(=#\026\006=C;J\274\255iT\275\326\372&=\371\3124\274\342o.;\373\000\263<\2118\346\274\377\351\013<U\202\3239;\017\340\274\372\256\022=\345#\225\274\\6\010=B\007H\274\265Z\211\274\332\314!<cv\327\2741\312==\240a\370\273\235\367U\275xjD\274\215\353t< [\351<.\030\345\274}u\017\275c\366\240;\230\270\352\273\265\2565\274\014\022<\275`\\,=\330\036\236\273i1\014\275l\211\t\274\022\236\330<T^#\274lh\005=}\301\202\274\222\326\222<\232\320\202\274\371fe\274\007\2463=\t\336z:\327\307\021=\347|K;\245\376S\275D?\223\274@\206\022\275\341J\034=aY\205\274\013\260\'=6\034\272:\017K,\274\315o(=\2110\r\275\0326\317<)1\235\274\032\214\"=F\013\300<\024Y\027= c\032\275e\324Q\275\301\264$\274\222\021\217<Tm-<\301\342H\275\235\270\233\274\314;\357<\261V\307;\204\371\013=o;5\274\265\251@\275\204\3556\275h\305-=\340TE=\364\001`\274\231\362\020\275\257\016\022\275A<\361\274\253\263\035=Pp\300<\340\323\262;\272\004.=\263Y\361<\364\017\264\273\373\253\363<\331\305)\274r\213%\274\363\332#\274\222WV=Z}w\274a~G=\351Y7=\351\366$\273\233w\022\274\325\322\344\273\265\0378\275_\367\013=Es\337<\321\275\360\274_\230\354<\337\306\354\274\333X\220\274(\305+=\362\252)\2756\265c<\227\301B\275\270\302\002;\010_\272\274M\357M\275\214\032`\272\3226\006\275\217\264\n\274\"\0351\275B\021\276\274\305\377N\275$\360\300<\362\200==\220>\034=\235\253\255\274<\232V\275k\\\234;\230)\252\273~\206\014<\023\205\274<\356\264S\275\263\213Q=\312F\332\274\245X\222\273\346%V;\254O\232<u\301p\274\340\273@:\021(a\274\353\240\376<\340\001\367<\305\251\253\274^R\262<~0A=d\026-=\2339\002=#WT=y\304\033<\301\025U=\351s(=Dd\257<$\336\'=\250\341\017\274\251\000\367\273\367+<\275\221\374-\274\177A\374<>\177\242<\212\274\026=\234\211\036\275R\201\333\274\226\207\n\275\326\250\231\274\256p~\274\243\265\365;\352\255D\275\250\304\252\274\247p\021\273\032I\374\274\370k\375\274\245\227\315;\240=\362\2743\010\273<?I:\275\233(\'=\037\257\"\275j\300\013\274\000\302\003\275\333\356\277<\206\2256\274\312\260\245\274vf\216<\356W\014=\372_\003\275e\223\002\275\177L\260\274$\367\022<\356\260\253\274B\300O=T\332@\274\313Z\321<\304\033\037\275\344=\311\274\336c\262\274[wS\275\332,\017\275\002\334.\274\336sA<\014\345\365\274\263\263U\274\311\311A\275N\207\307\272\347\200&<*\343\351\274\227\014C\275F\006\202<\302\3022<\221\276,\275\030y\367<\376#\370\273~\000O\275\374]\021=2NE\275\347f\272\274\330\354\013=\326\224\315;?w\003;\310\333\034\275\013\306:\275\331\353\"<b\270\372\274\023=\254;\r1\r=a\241L\275K\003\375\273\316\311\274<O&\037=4\026H=\005\256\t\274\001\327v\274\377\327\336\274\202\272\350;\020\300\026\275\004\332J\275\251uD=\013\350\363\274\"\307\'=\210\325N=!\334\023\275d\221\234;\220\350#\272\276<R\274\010\025\003=\262}\017<\006\003K=<\\\356<\007\365m\274z\354.=v\271>\273\247\300\331\274F\333\347<qAL<#\017%<\'\235\320\274p\360K=\335\303I\275\n\256:=s\006\223\274#\3658<\364\252\317\274\225M\234\274\353\235\320\274j#\342\274\315\036L\275\036`-\2755\'L\275\271t\372<f\357/=\274\004U\275\370\323!\274\250\345\030\275\013\2663=\3133\323<\t\252\370<[\230\003\2758\232*=g]Q\275G\023>\275U-\260\273\271\251\337\274M<=<\023\005>\275\002%U=\370w\376<\240~\207<O\025\024\275\375BG=\334(\347<)\026\034\275&\254\244\274R\354\202;\0064\234<g(j\273\307U\232\274AG\036\274000<\022\3142\274lT1=\2110D\275\221i\256<\320\264J\275^\320\207\2743\031\357\273\223\232\005=\326\324\243\274\244\367l\273h4\024\275d\246\346\274\351\340\367\274cR\020= qV\275.\251\024=\355\3014<\307\353r<.H\232\274>\017>\275\311\325\211<6\237\231\274\220\233F\275\320X \274\255&\270\274\'\356@=\225\252\254\274\246\326\271<T=\2578j\215i;\024Se\273\256\257\232\274X\200\021<\352\323\275\274b\027$\275\005\354T<\232\010L=\324\375\326<\227\2664=\013n\023\275\203\0203\275\002\201#\275\311\'\022=\303\222\002=\275q\265\2748D/\2751w(\275r\321{\2740P\302<\202#\344<\350\201\036\275\026\361\021<.\036\377<L;\262\273\342\274\017\275\243p\374<Q\010\007=VGH=\267;>\275\267B\"=\r\252G\274pQ\244\274*\013I=\006\325\021=wb\234<\373\017<\275Z \017\275\001p@\274\230\341\332\274\305\203:=U\014\024\275e\317/=x7\231<5\177\344<\220\363G\274-:\005\275\007<\265\274\315\367\314\274\0220\003\273eBI\275l\031\343\273\310\205\034=<p/;\372H\031=\373(\220<L\222Y<l=/\274\362\315\010=G\017\315\274\030\235P=\36049\275?\3448\275{\331\242<D\001j\274m\231(\274\330_E=\354!E\274\245\337P=\333\203\237\274`\342\317\274\353\003\366\274\357\247\266<\346\203\277\274\352\223f<F\217\n=\371\'\235;\324\310\014\275-\306\257<?\213\225\273\\\312\003\275o\264\230\273\313\220\360\274\371\305\257\274\251\2310\275\2301\246\274\227\276p\274\325\373\276;\254\024l<D[\356<r\3229=\221[$=\275o\204;n\327\252<\253eR=;\373\3248\232?\010\275\276\031\372\274Y\241\177:\023\272\220\274\033\205\010=!f\n\275E\365)\274\331\037/\275r\342p\274G\3050=\006\337)=\326ET\275\325\"\211;g\240\327<\037{\277\273\341C\331;\031%\225\273\0367E\274h97=\322\025.=\300\000<=\nP\327\274\327\374\346\274\200\313`<g\202\331<\t\213\320\2748\3408\275\236;\004=\373\211\203\273\227\254\257<\227Vs<5|\274\274h\237\340\274<\323\245\273P\3260=X\001\022\275\201\225\000\273A2\250<\022\211\316<\267\344\356\274m\032P=S\3546\273\221\243\312\273\236\326U\275\331\253\363;\243\0358=\010\210\010\275\260S.\275\364\025\022=\210`\337\273\257\361:\273N5\217<d\n;\275\023h\315\274 \277\003=x\371\236<W\312\342<\353G\013\275\227\020r\273\207\247\037\275.B\325<\207\0036=\005?\305\274\244\333>:\233\312D\275\021\320N\275\276\327\200\274\355V*<\204\344\274<\307\224\242<\211\262\337\274\270&\\<\nw;=\200\t/=}\310\016=v\364?=\250\304:\275O\324\014\275\354\321\037=\205N(=hnG\275?k\211\274k\373\036\274\230\217\007\275d\277?\273\002s0\2746p\r\274\317;\244<A(\367<I[\035=\200\371:\275\320)L=\r$\373<\315a\036\275\365_K<\265$\016=\027&\001\275\026\276\010<\244\314\026\275\250\210\271\274\214\312R\275\253\326\000\275\236W\253\274\236\267\256<\273\344\236\274\216\t{<\317\307\242\274\346\024\217<sN.\275(}+\275g\213K\275VvV\275n\016\037=u\313\305:@M\233\273]j\351\273\206\333\351<\014\2660<\275\347\357\274\2235\242<\345`W\275\360\017\357<~\212\244\274\\f\242<\263\377P=\203\016\007\274v\314\266\274\360\200\226\273S\275K\275?\273>\275I\'\220<\246\032\271\2748\302)\274lOT\275\017\031\255<\332J\r=\221\n\321\273\221\362\375\274\276T\377\274\323\337H=\031\206L=b\306=\274\217\311\327<;I\331<N^\006<\251\252\025=\312\177W\274\024(\030= A\257<&xL<\333\3768\275SgB\275\311\000\222<\217\216>\275\215\346\021\275s\031U=\333\3177=\3378L=}\371\236\274\017\301N\275\340=\274\274\314\230\017=s\367\263<\232<\006\275K\363\313\274D\273\221<\177\346R8\307O<<\370\201\212<hR\272\274\2509\007\273/\006N\275e_\226\274{9\"\275\345\r\257<\330{C=Fn\'\275\001wY<\366n\221\274\347\345v<\213\371\332\273PY.\273P]^\274\361P/=\233iR\273`\027\320\274:\233\304\273I\326Q\274\250=K=q\341\3168n\210\325\274\025L\n<\261\210\371<\313hL=\235g7\275\301\367\360:\013\234\310:\221\350\255\274\262\214\200<\220nd<\300W@\275\312`\372\273\371.\241\274A\3461\274O\200\326<9\033\346<\032\203w\271\251)\222\274\300A\340\274\231\t2=i\342\253;U\323S\275\343#V=y\255\362<f\014\277\274\311\325}\274\213k\233\273Ja\300<`]\247\274\375\222\303<x\212\234\274\021Q\211;\177\340\"\274\230\254\024=\212\325T\275J\001\n\275\304\310|<\313#\"<\036\275\314;\357\237\"\273\373\256I=\356,\274\274N&\342<d\372\376\274Q\327\307<\006\226>\275\243\306\023<\265z\244<\3266\207<\375:\257\274\2070\330</%\250\273\356\322\030=\235\274\035\275<U2=n@D\275en\260\273V\355H=\376X\307\273\367wM\274\230\222\007\275\242\245R\275I\324\026\275|\037$<5\376G\275\260\255\'<\200vE<\"\357S=(\2354=\205GQ\2744N\326\273\251/L\274\230_9=\023(1\275\025\305\204<z\317&<*\037\341\274\250M2\275\013\303C=7IH<\261\2327\275\371;\245\272\342\014;\275\274\214\341\273!\372J\273L\024G<\213\025\201\274\372t\350\274a$\204\274\350\245\226\274\311\255\271<\373+\010\275\210\0132\274\201\332\317<c\344\265<\232\332\'\275\201\022\017;IA\253<\355\230K=\262\021\355\273\360\324\243\274\211\347\'\275WG\327<\316a\365<\225\242\213<\036\236\312\274\375QS=\020\205\263\274\006Y\024\275|\005c\274\235p:\275\026\252\322\274\ng\261\274\256\t\241\274\307\220\347\274K\\\205\272}.W\275\220X\241\274\037ZS\274\037\333\005=\367CU\275`\347\002\275*\277\274<Y\224:=r\375=\273.g\022=\266\2301\275\251\000\252<c\200\277;R~p<`\211\036\274\210\320N\275~\3309<@\270Y\274\262\321\323<\2040R\275%\341\235\274V\3342=^\220T\275\010\2464\275\014\323\307\274\347\320\213\274i\346A=\271\033\323<\327\362\037\275\216E\031\275Z\305\272\272\346\214\023\274\030{\315<}T\004<\\\346\326\274\335tD=\031QO=[\2531\275\374\241n<\3202\265<\n\262\227\273\010\207}\274\262w?\274\262H\002\275\252\377H\275Fm\037=\300\301\223<\313_\352<\205\033\342\273N]\213\271o9/=\311\340\331\274\217UP=\376\362\333<>\203G;-\335\024\275OY\021\275\242\257@<\345\331\025=\277yW\275\353\276Q\274\233A\313<\2458\221<\"\327K=\222C\002\275YTR\275K\246\360\274\217\266\t;\330\032$\274\313\030\n\275\035\303\214\274\013\225\332;V\230\327<\232\357\322;\377:\033=\014\371\003\274\224\257k\274XU|<\341\212\211<08\376\274C\356\333\272\225z\272;\030\\\261\274\333!F=\246\344\256<\376\243\335<\207\267Q\275\224\323)=\244\305\025\275^\254H\275w\216\212;\306\257\242\274\202\351\022=\360\375T=\271\2015\275\376\357\242<\250\256D\275!\321)\275\225\311\256<\211D\270\274v\350\270;\374Y\370<\213f\365\274\340u\n\274\212*F==\2424\275\000\232\221\272K\2349<\245\213\263\274\366`Y\274\365;\260<\343\330\022\275\re\265;\373\n\023\275S\346\215;\027\342\332\274\201\255L=\302zk<\265:\210\274\263\267\346\273Ye1=;\236Q\275Q\032\207<\356\323\r=\224\376\026=\366\3453\275\016\373:\275\371\013&\274&1\332\274b\331\240\274\340\237\007<\235\251\337<1e\030\275TI\r<\013-\322<\211\001\032=\330\232\007;3d\031\274\216\307\326\274XiU=\024)\217<\r{3=\265\240);\350x\251\274\340\354\331<m\350\327\273\336\351\353\274[\234\256\273}U\264<\201\370S\274\023;\264\273WV?=\322T$=\251r\014\275\255\036J\275\345\236\033\275\364L\001\274?7\233;\312\312\274<+\264j<!\026T\275 k\013=\0239W=uz\263<\242/\366<(\"\373\274\202h\206\274\203\007m\273=\006\366<r5\307<4\300\001=\377\022\210\274\017\370\315;\2530\026\275<\261(=\375\366\033=\252\330\201<\311\004\267\273\305\246n\273\347\255+\275\332\260H\275\307\251\303<\255C\014\274CU<\275XOf<p\026\r\2758!S\275\277\250W\274\245\276\004\275\0270S\275\227)]\274fy\024\275\342\2600\273\277\245U=\225;\345\274\210\023\377<\320\240R\275\303^T=\335\301\320<lb\376<\214\205\244\272(\252\227;\014\212\000\274\377\020\275\27388m<m\3467=\235\262\342\273\351\366 \275\253NW\275nU\026\275\363\t\325\274&\031\345<_I\317<\345\243\036\275\311Q\337\274\371\210\313\270F\021D=vk\033=w.5=TU\234<\322a*\274\342\364\355;~ZT\275\033#\314\274\317FA\274\316\233R=\030\276?;\340\275\375\274\253\240D=*\267r<lo\325;A\322\273\274?\245\314\274U\273\221\274\354\3731\275\223\243@\274\234\363\350\274d<6<<\020\346;\\5\313\274\237\021)=\356\242u;\304\306\002\275\3408\230<\356@{\274\242\037J=\213mq\274\300\017W\275\330\352\272\274)A\331<\267~)<\373\217\253\274\263\216<=`\237H=\202O)\275\340\271\037\275\244\t\014<\315\021+\275\356\211\3178\325i\270\274\004\353\261\274\225\225\234\2741y\030\275\\\026\247\274\372\357\035\275_k\026\274^\336!\275\017\333\033\275C\227\010<Gv\337\273W5\021\273\213~\004\275\004\262\270\274\321\177=\275\344\t\215:j\206\n\275\263\273\213\274\361\337\356\2744\004\212<\223\241\"\275>x\020=\260\327\267\273\241\020\327\274\250\376/=1a\274\274c\266J=No\026<\256\320=\275:\3505=\274\317\364:\257\037\267<F\002\"\275QC\340\274\342\030\242<\254e\027<C \003\273\236\324E=\021\034\376\273\200a\322\274 T\273;U8\267<z\0257\275\343\247%=)\260;;\247<\001\272N\234\247<\031\017:\275\364\2441\275t\317\372\274I:C\275\316j\200;\036aO=\030+\361\274b0u<\220\247\377<\361&Y<\r\223\315;o\326f\273\364\237/=u\371\";7\312\344\274#\347\t=\000^\342<x\013\236;\306\033C=)\370\212;\367E\367<\357{\261\274\227/s;\031\032\022\274\3527\247<\331&\204\274\236P\214\273P\307\356<\325?,\275\334\317\353\274r4\314<f\211+=\207x\222<\317\026\375\274\201\262Y\273\326gF=R\217\'=\300\251\351<\037\"\3259\342\243\007=\323\035@\275N\236O\275U\314m<\013\236\013=(7\347<\025\221\234\274\247rz;\310S$\275p$(\274\205\245 =\374]C=5\331>=\t+L\275\346\314\232\274\273\252\245<\2254b\274\000\267\373;\253P\205\273K{\275\271\230k\240<Ubt\274\307\3659=8\032F<S\203+\275S\322F<\351\315,\274\002tu<\307\310\024\275s\366\351\274#GJ=2n\363<\371\312\274\274[\354\275\274\245\341\310:gP8\274\320\227q\274\315S\373;\252\344\271\274\326\204\365<f\266\375;\245m\026\275\207}+=\035\356|<\034c\016\275\027\335F<\211\300N\275\323\341\n=\007\357\030=-\243)\275\266\323Q\273~\2701=\216<\334<\224\241?=:\302\000=\270\007\215\274\241U8<\276\355\n=\205q\364<\002\362A\275-\2064\275\321lF\2754\361-=`\312I\275B\312L\275\235\0047\274\315\016\212<`\310g<\205Ut\272\036\321R\275\016\362\346\2743\226\035\275\323\265\260\274\207CR\275\377\375\310<\370\257\246\274]\2470=\007z4\275PY\221\270tKL=\r\357\275<]PE\275\322\340&=\2332\034\275\2070*=\016\216\002\275k4I=qj\016=\014g\202\274C\204Q=\265\232E=\301\220$\275n\"\231:\007 \255\274\016\363Q=\'\360e\273\236-\211<x+\210<W9M\275\204T\245<\232\225\310\273\277\256H\275\247\r>=\334N\201\273b\2138=U>\'=\246Y\021<p`\270\274\362\203\206;E\230\"\275\'\004?\275\246\270\356\273\372U<\275qm\272\274a<\344;\007\312\276\274\324\366?=N\2719\2752\331\322;v\335T=\347\226\341<D\3453=5!\034\275\302\tz\274&,6\275\225\227\032=\3056\252<\335\333\375\274\342\364\224\274\213$\340\273\214q\t=\262-\233\274\304\036,<\313\004\226\273\337o\001\275p\340N\275\237\243\3549\3075\366;=G\327\273\177\331d<\023GL\274\267\377=\274;+\243\273NK\372\273o\317\346\273\262\310\'\275\375\270\303\274\205|7\275\333\256\312<\340X3=\311\213\223\2742\357>\275\325\225\003=\224\332\251\274\3119*\275\322\353\006=\010y\224\2749\213<=~\005j<\306&(\274[#\223;\236\324L\275\372\366:\275\371\"?;\026N\272<\223\334m\2732\224L=\363\035S\275\007\022\375\2747\213\024=\221\230\231<\310\324\351:\347\264L\275tP!=Lx\372;*rC=\n\303N<\223\223\353<B\341\344\274\273\231T==.\314;pZ\016\275A\265/\272ah\377:\264\222\016\275\027\372\032\275%\025\005=O\221\023=\256\'L\274\025\210\017\275\324\331\014\275\026\320\301<\026\376\013;\036\211#=\213w\000\275\373\007P=\357\000\213<\277\207\023=|`Q=T\t\270\274;\022\264;\253n\313\274\207\017\200\274\364Y\017=\343\233\246\272\252\370\243<\245>\343<~\207\303\274\013\220;<X\322E\275\376~\323\274\351#4<7H&=\002W\371<b\021\275\274\347\215\302\274\034\010\021=ja\234\273\234b\222\274~g\034\274\372\311\274\274\032\247(\275S\206{\274\252\372/\275\003\241\025\275\245\034\034<\360\026)\275c\030\232<z\363A=n\023J\275\352\307\007\275\375\346\261\274/]7=\tTJ=\336\250M\272 \232*=\341\332\024<\026\315\030=U\276J=:\027\251<\241yd<\241\303)\274\270J\360;\003H\034\2754\235\222<\323\235\010=\332\3065;\266\360<\275\272\231\027<\354g\245;R~\006=\234Z9\275\334\321%\275\312\033\035\275\224:K\275\374\r[\272\366~\027\275\271j\306<\016\367:\274\216.\364\274\325\017\370\273\235D\325<8%:\275\"_\275<mQ!\272\320\t#=\313\2020\275\337\213\374<\325\330\007\275\2718\"=7L5<\243U\243;\312T\265\274\243\310M\2752[M\273\302\363>=\022\202\006\273+\271\236\274\255\204\'=\361,\366<J\344\006=[\253\225<,g\275\274\321WN<\243C\n9\242\327G\275l|\"=\207\234V<\267=\212\274-_M<8\242U\275\215\277\\<\036\023\205<q\272Z\274\3322\020\274x\212\335<Y\0367\275\032g\231<\035d\230;S\3414=\202r\035\275\207\331!\275Q\211&\274Mp\226<\306\235\023=\235\253Q=\001\266\017<\262\316S\275;b\013\275o\232\203\272\262\305\364:_\337$\275\344\365\016<\274d\t=sa@=\213\002\272<\347@U=)\361\037\275\332}\212\274\001\377\302\274\241\230\312<v\367\324<\021\377;\275\360\215\031\275o\021\025\275\366:\263\274\326\262\345;\243\355\345\274\020V\317<\244\346\344<r\3219=bZ\372<\323T :$S<=1\376\234\274\353$p<\322\312\000=\231\260\271\273j\357\n\275R\3473<B\257\007\274\343\202\202<\371\272\354<\027}\241\274G\306%=\256\213M\274\227|S\274\004\314&\275p\307\004\275N\\\025\275\366\023L=\207Q\336;o\335N<R\257Q\275\2238#=\177\005#=\010[l<\002\365:\275\202\217\302\2740\013\275\274+Ix\274\032\346[\274\231oS=\311\201\023\275\r\270&\275\202-\200;\261\246G\273\014\357\236<\244N\000\275Q\200\022\275\235yU=\030\244\255<\346\365\006\275\303\016\033=\275k(=\273\222@=\323w\322:\177*\354<{&J;|]\233<O\305V\275\016\344I\275\007\"%\274\024\347H<\014\036T\275\302q\002=4KL\274\003\017\365\274\207\005\220\273\'\232\214\273\347\305\242<8b\246<I\005\304\274!\323j\273[NQ;\267B\257<\345\257\034\275\233\265\253<@?\244\274\321OT\275\315\203\240\2731\036\003\275ih\202\274\365\237\027</\363\300\274\026\310f\274\333\336\r=\330\366\362\274\353kW=tP\340\271\013dD\275{\333G\275\364;\322<\212\006*\275/\273E<_\375\325</v4=\340\024\002\275\275\370B=\237\363U\275\233\2744\272\300e\360\273\211\224D=|Y\235\274g\250\234\274u\0050=\016\230C\274G;\023\274\322)\210\274\326\004\"\275\336\177\246<\361\027T=\022\373\365<\325o\010<\"6\343\274\177c\350<Mz\326:\032\366\333\273\363@C=\306\317t\273\337o\331\273\320\300\016=\004iC=\357?\334\273\314\347\"=(\366x\274\033\267I=U\n\035\275U\340\010=\026\331\017=\331\340Q\275z\327\021\275#L/<\310\3027=7\324N=\237\024\007\274-\0244=d](=*\351\361\274>!\272\274V\357\217<\220\256\r\274m\226\035=W\304:=\017\332\004\274\201\277\344\274\342\327*<\257\013<=)\003\306\273i\024 =]\205\245\273\3213,=G8\332\274\241G4\274J@\352\274\2576\004=\262|<=\360oM\274\364M\010\275eA\322\274\000-T\271\230\325\000=\315\020\230<\005e.=?\374Q=\232\3177=\3726\311<\010\220T=HG\"=\032/\363\274<\263h\273\370\364\244;\000\303\273\274\021\014\'=\307IM\275\'\034\356\274d\023\n\274a\223\320<\017NM=\005U\014=~\315\017=g\262\313\274\213e\300\274\257w\"\275\032,s<\267r\274\274\377\222B\275\205\0169=\215\332\231<\003\327X\274\217`\243\273\335\300\376\274\024`S\275\311\227\251\274s\210@\2755\2474\275\344\221\240\274\240]\016\275\'!0\275\026\304\215\274\213\323\247\273\256pJ=\333\335z<5\232\036\275\242f\375<\320\302S\274Z\346\n=L|p\274\014\345I=W6\262;q\r\000=\217\307Q=d\365\003=\'(\332<\355\301\374<\006e7=g\2545=\360\2766;\211+\030\275{\252\231<M\261B\275\273;k\274%D7<\214\227\007\275\362\357K=\322\371\261;\244\361N=\236E\336\274\245\372<=b\313l\274nXQ\275\373\025W=\220i>\275ns\335\273\335\310:;$\3471\273\301\tB\274\315\3703=\007*\262\274\326p\222<:\301*=h\2426\274n\031\'=\226\226\213\274\215\334\257\274\335^\223;\231@\247:,@4\275\342\251\"<\225\177\007;\003e-\274\026\317\336\274\304\307\231<{\226\217:\003\271\220<\324<\016\274\312a6<\332\367\371\274\2017!=\303\232S=}\374\026\275\350\324\226\2744\3430\275\244\003\027\274s2*=\316\324\030\275\315:\241;\260y.:\247\334\243\274\221\256\363;\037\331\376;xnf<\241\215\365\274\217\016\017\275R\177\216;\277\361,\275\337\207/=Y\031\346<\212\020\211<\253-\216<\307\014\345<\227\256\244<\200\231\312\2748\266\300\274\247\017\355<4\037?=[\236(\274\327e\217\273\276s\325<\027k>\271\303;\206<1\315-=h\333\311<\272^\034=\210\305:\275\243\242\353<\343x\035\275\266\215\301;Y\266N=\351)\332;\n\341\323\274n\241\010\275{\032\222;\217\233\221\274\234\367\362\274\2630\036=\374\nU\275\231\"L\2756\023\035\275\231E\031= \256e\272\277\200\336\274ap0=vR?\275\002\355I<\344\245\342<N\034\255<\251\3508<\254\323\266;\340\025.\275s_\373\274t\350\005\275\231\241\r;\350\210\037=\224\n\032\275\271j\224\274s\210\034\275b\257\033=\274\206\256\274[\317\010<,\003\271\274\346\035?="
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\364f\265<:g\270\274\314}\311\274\361\317k<\200Q\225<l\326s\2743\322V\275\300n\005=>\340A=\307\255U=P\315\211\274\017`Q\275U_\246;j\021\326:\264N\335<\337;o\274\005\360\022\275t\200J=.\317\034=R\235\277;\275`L\275T\366\367\274L\362\"<\222\332\355;1\231\353;\240\0201\274\002\236G=\201\"G=I\311\347\274\332\302O=\357j\024\275d\364/=\356\270\t\275\250RG=q\304A=\306 \327;\240$Q\275\"_\342:9\340X\274\230\366\305\274\264\220\260<w8\274;\300\362\200<l0\314<\327\360\203<\017\034\322\274\374%\307\272\264^\305<\200\342\030\275@\263F\275[~d9\247)#\273<\343\223\270\246\312\303;X\004o\273\235\273O\275\326\234\006=_\3329\274\200\024\004\275\374X\220\274\210^B\274\252\224\014\275\215S\007=y6 \275\275\010\371<\306\305-=\370\215\177\273,\365F\274\360\006\001=\225\212\332\274n\337\024=\334\361U\275y\017-\275x\256N\274M\322\277:;J\030\273\355Ak<\265\031\023=C\200.\275\254k\265\274\205m\314;\005\272:\275\350\266\207<\325\276_<\361\221\033=\330G\354\273\305\207\033\275\312\215\032=\335\265.\274\245l\300\274]\276V=\301.\360:\241\263\234<\020\250\217\274\203\274F\275\365\013u<\302\344\220<\211\331\210\274er\325<)\362\370<z(\214<F{\002=\025_\247<\201\330\300\274\021\177\271<\261\364.=\225\177\347;q\275#\275\311Y\'\275\313]\356\274\333\034\372<\271v\356;W\335\214<Td\326;\244\000(=G\367\257\274\205P\210<\336\217[<0\021\010\274v\206\363\274C\224m:\216\311\322\274\241\3019=\266u\367<_\3600\275+\0047\275\335\211%\275[5\324<\022.\307;#\035\004\275\211\201F\274c\332\000=\000\330\016;K-\375<H*\224<\000\215\352<\232\321\014\275\364\353\263\270\tD3\275\233j\020<\203\023\014=6sJ=&\342)=b\007\030\275\254\342\315\274\326\264a<\350\353%\275\321\334>=\231\250\376<\214\3071\274g\032\357<\025\350\014\275|\036s\274\204u\214\274r\314\342\2744\223\230<\277\323\t<\211\344\312\274\001/-<\347\'\021;\330p\035=\254\t\'=\222\003\247\274\275\353\002=\205\006\262<]\243#\275+HJ=s^L\275%\362A\274\030\210\023:\330\030J\274\\\027)\275\322N\264\274\"\315\247<\177y\377<\344\307/\275\341\243\244<qM\361\273l$$=\013\\\347<\334\030B;H\300+\275&\215W=\032M\027\274\305\243\004\275\201f\020\275\366\273\032=\272\0101=\tHA\275\233;\233<\205\303\351\274I\313\362<\342E\345<\252\203\262;\rd\257<\251)\027=\r\014M\275\353\033\214<\211\211!\275\271\351\304\274%_\332\274\231?\002\273\244\251J\275\326Z\366\274\257=(\275 \273|;\253\001\216\273.5\364<Z\004\031<\335\315Y;M\020w<\225\267\002=\3110y<-\024\177;\241\"H\275\025g\033=\004]\326\274\344\314O<\251\324>\2744\325:\275~\031<\275\023\203@\275+\222j\274\204\315:\274\226\277\224<l\354M;+\001\345\273\\\232;\275\'\247J\274\250~\005=\220\374\'<}\3112\275\230k\230<\375\245\010\275\315O\002\274\255E2\274G\354E\275\354/c\274\001\354*\275\0268G=e\270\312;b\356=\275;3/\275\343\1773\2752\242\245\274\314\314\374\274v\312\245<\037\3037=\206\234\022==aR\275DT\231<A\261E=\033d\311<\336\261L=]\231N<\362C\n=\371] =\222+>=\213\225\004\274\271}\257<\273\247\n\2756\206\222\274\2466M\2759\336~<\324\327\377\274\021\362C=t\251\266\274\332\r3=\234~\214;W\331@\275:\216E=\247\372\r\275D\245\276<:\226\243\274\216K\034=9\243\013=j<>=\243\347\303\274\226\244\000=7\\ =,\311\003=:\376Z<\270^\'=\037\3331=-\252\027\274\273\300N=/\357\237<un \275\336^\206\274\235\000\004\275\2535\035\273\377-1<\215p5<h9\303\274\334\016\213\274;SI\275Y\310\002\275\250\201\345<5|\371\274L\213\237\274\205\321!=\244\217<=f\330\031<p\013O\274t\001%=`hA=V\016:=\021\267\327<\320\235\327<\210\201\230<\211\276\007=p\022D\275\266\346\236\273\322\311\365:Q\227\034\274\274\037#=w\344V\275LO\310<\003cJ=\010\276\020\274T\323\251\274\265\352\254<~_\311<z\035V\275\300f:\275\354v5\274\243u\300\274&T)=R\030\"\275kZ\341<Ai+\275H=*=\260\0168\275+~1\275\305Z\362\274\004\003x:\376n\332<\302\2302=\355\035\003\274{\371\312;\212-\025=C\237\005=\035\336\354\274\276\315?=\0216%=v[\234<\313\330\346<up\037=\221@\036\275\363\354\'\275\362O\246\274\202D\377\274\265\324U\274\230AR=uvH<\006\034%\274\355\275\023\275dZ/\275\205oK\275j\231L\275\206XN=\031?\032=*s\273\273\321M2\2751\"\020<w\3310=\336\363q\274\274\275\214\274\272\343\035;\005\311\013\275(/O=\303\346!=\375u$\271\216\265\371<:\223\221\274\253\326\322\274m\"\316<\255\2666=\336\032O<9\203\357<\014R9\275\230\270e\274\302\334\235<V\273\010<n\360;<K\013\313;^\216K=\006:\005\275\243\326K:\016\314\031\275\264=\331\273\031\2074\274\355,`<@\256D=\376\243\343<\306\333=\275p\025$:\200\352\007\275r\261Q\274Y\2675=p\310\323\274Ka`<3x(=t\031\305\273\326\335S=\020\364\361\272\313\204\352\274\352\207\027=]\3477=\030\n.=:\266E\275\30157=\334\\\231\274\014\346\337;\021\316L<CE\270:\331\223\007=\252\364\021\275\323hV\275\302I\243\274\206~\226<mJ\325<#\034d\274TA\t\275Jc2=\215\237H=Af\271\274m\236\314\273C\177\303\274\003\335\230\274|\246\026=z\355\027\275\234\211K\275\253\021\372<]R\233<#n\235\274\210\356\306\274\207\335\207\274\267\023\276<Q\261\300<I\360\311\274\356\251\362:\301\225\311<\010\2600\274\311\325\335\274\363\272\031<oI\257<8*S\274\257\3744\275\263N\024=\371\300\333<\207\276\276<\2666\265:\024[4\275\3133\343;)\303S\275\007R\262\274<\2400=\310\205.<k\273\342;O\323\254</\2121=\246\322\240<\266\367?<G\324\n<\345\247-<\231\261P=\334\360<\275\236\001\322\274\\`\320\274$\363\304\2746h%=\316\221\206\273|Y&\275\341\200\032\275`J\"=M\026\244\274tD\014<\035\371S=\236\035\r=\374\372\364<\024&\022\275\245[9\275\333\307#\275T\310K\275\200\271\322\274\350\2007\274\333\351\326<O\266f<\253\305I\275cJK=T\365\355\274\022H\013\274`\'\007\275-=6\275\027W2\275M\034G\275\221\3304\274Y\017R\275\'\032\216\274\272i\010=\377\036\020=\035C\373<\302\343<\275O\\>=\201\203\032=&\360\365<\363\306\202<\254\0015\275\013+\342\273\000\271I=\351=\016;\305V.;\377/\355;u\205<\274\226)\236<\200:\244\274\244V\230\274W$\325\274\366\351J=\221\220d\274\264>-\275)\206;=+\264\222;\314\002\263<\000\370\'\273^?\361\273Cs\035\275\224\035\230<)LS<\362R\023\274\236\374$\2758\034t;\301\320D\274\303\032\256;5\375f\274M\306\027\275L\325/\273\036\256\224\273z\r=<\006\307\332\274n\035\031=\333)\n\275\340\214\342<E\240\003=\031x;=\355\342.=\2311\203<\006\312\374<vf>\275\345!(\274\203\374\277;\207=\017=\2052\301:\257\206\313\274\344&.=\3048\272;B\314>\274K\024\022=u\006.\275B\375f\274!$t\274(n\014=\250Y\337<!\362\262<\324N5\275\3265(=\\Y\t=\325\235\036=q]#\275BT\313\274\212\2404=\234#5=\332\311K\275\327\251\274\274v\n\211\274v\3102\275\271\247\025\274\323\027\024\275\312\212\232<Pob<\256u\267\274\311e\366;\341\230,=\223\205\354<~.\224<\311\231\257<V3\000=$\274M=\026\301\325\274\300!W\275\032\326\214\274\234\340E\274\352O):8\237*\275cI\325;\364\353\375<\317\237\376\274\036W8\275\302\312\242;\332\226\315\274\2171\021\275\305T\212\272dn\362:sJ\336\274oM&=%\270\301<z]&\275&\344\346\274\274\221\024:\014\031\220\274F\212\006\275\021\017\305\274\004\2314=MD?=\340;\353\274\010\315\301<\317\204\205\273\354PP\275~.+=\236\351\005\275\270\357\266\274\001d\035=\006\253\236\273\320!O;\253\234\t=a\272)=\355|?\274\271\273\006\275\330\207E=\273?\317\274\004W\004\275\003-==n\244\032=\226_\234<\t3J=!y)\273_>\375\274\246\351&=q\215)=/\213\010<0j\356\274\035z\343<\372\213\373<\n\276H=f\371\014=\205h\003\274@\273\270<\323&\211<\270\303\027\275\002\241 =#\267 =\376#C\275\365\306#\275oi\233<\235W\003=S;V\275\016\336\264\274\035?\032\275\265J2\275\032\022\336<\350\317\202\273U3&\275\246(\241\274\326\223\265<\2373\216<\000K\363<\207nO\275M\241\r=\236t\252\274\006Y\014<w\303\303\274\"\016\244<\331/S\275\221Z[; n\264<\025%\177<m4==\200\277l\274N\310M\275@+\227<\257\347\334<\241Pe;s\2100\275\243&\"\275\227\272\037=G\315\372\272\354\r\346<kY\200<C\336V=j\2710=\217\036L\275\245\307\236<Zo\361\274\334\357\027\274\221B|<9\315\002\275\267%\200<\202\345\231<\236\210O\275\200\366\013\275|\017\306;\317\373\267<\334\235\363\274\301\251\364<[\321|\274\010\341\313<\363\225\002\275\277m\365<\324\\\033=JHs<]\020$\275\351\315\001\275b\356&=\336\247?=\221\017\266<\353\2063<\\\3262=0N+\275r\364\323\274\312\245\025\275f^\376\274%u\372<\335\n<<\325|U=\242{\322<\277\217S<,0\003\275\013\025e\274\237\363\216<\266\'\030\275\233+\236<\nN\034=\\\273,\275\345\\\325< -g\273\276w<\275\236\210\014=\3517\372<\233#\222<\214\001\267;\342(P=\357\033\276;\345\256\325\274\321\330P\275\310=\270\273\352\035\216<\320%v\274\33276=X\334$\275\274/\355\274\322Vb\274:\200\344\274\345|T\274\302\325$<\264\004\033<\3134\n\275\222\373\177;\027\207\006\275\276J\371\274#\354\025\274\353\361F\275\352\1777\274\365<N<i\021\232:\352B|<\250e`\274\305\207A\274\005\332\356\273\010(1=\212\315\264<mz\022\275\002\345\362<\200\227\372\274\351RX<7T\336<\333\327U\275\361!B=4l\240;\020\177z\274*\306S\275\202`n<b*7\274\214\272/:\315\365J<,\213\264;\305%{<\301b\364<\320\235\264\274\325\361\352;8OD=\nO\032=n\376\341<\2337\030=\231X\276;e-\320\274\311bB<\202[\032=\004?\325;Q\030.<\032w3=\371\2655\275je\245\274y\205\017=-\262\032\273\005\235\251\2747h\311\274Gv*=]N(\2758O\352\274\325\306\333<3q\004\275\377\023\t\274\314\237<=\030\205\220\273\342\325 =h\367&\274g\244\270\274/\356==\222\303U\275r\335\007\275\326\312\355\271d\277\255\274\002V4=.\206@<n` \275\346\271\214<\r\230\031\275\3554 \274\000|\243\274\254/\371\273\004\213\326\274\2546\002=\r\336@=\212\315P=d\025\254<\274lS\275\377\320\355<U\241\003<\032\223k\270x\014K<\341z5\274L\343\000\275\314\004\332<\247\306\205\2741\263\330\273d\"6=>dm<\025\212\023\275\010;;\275\216\267==\020\235\334\274\207\340\325\274\330\274\343\274\350\350\177<\266\365\326<\275\2775=+\036\004\275\357\364\023\275\244\376!\275\024\032\346\273m\310\214<\n\314==\226\2741=\204\213\031=78\n;B\323\221;zY)\275\206\342\022=\261\025\t=`\355\005\275\265\322N\275\240\004W=\006\232\"=\207\024\301\273\367\007\t=\342\010\304<\232\300@==kP<\024\334\370<c\"\237\274k!\355\274E\210\230<:\343J<\322zT\275\335\262O\275a\203\356<y\263H=@\335\260<\216&\3059r\207\313\274\'?<=\263\240\265<\257\267\225<J\360\272<fq*\274\032\336~\274L\252>\274\320\224E=I\2579<54\037=\010\023N=6\342G\275y\330?=\206\202\350;{!z\274\024\215G\275\376h\241<\355`\217;\332v\302\2742H\025\275\'\177\252;=\317(=\253\007\307<SW\354;\272`\265:\227\000:\275\215\221\013\274\366a\231<\3331\374\273\307\360\356<\262\304\212\272z_/\275=\366\214\274O\253\310\273\2144\007\275\344\353\357\273Qn\t\275\014\030\324<\343#\350<\240D\333\274RE7\275\344R\252\273\007w\370\274s\026\005=\304\3128\275\233\003%=\323P\023=\373!\331\274\255\373\006\275t\275\013=\235\025\256\274\306\357 \273\373xE<\247\362\250<p\244R<\356\241\300\274B\367\022\2758\327\020<\331@T\275\n_\313<\244\236\227\274\362\213\312\274\341\347\006=J>(\27598\323\274\204p\362\273\334k\213\2738:\'= c =0a^\274\205/\365;\370\372\356\274z\337\030\275\317T\313\274\204\276\016\275\357[\205<C*\357\274)<;\275\n\327\006\273i6\371;\026O\235<\200+T=\246\264\240\274w\374\n\275\022\022w<\007,\020<\325\276\235\273K\271{;s\002\237< \261\025<\277\350P=i\207\363<\347\327@=\270\350\210\272U%\005\275g\371\221\274\330w\027\275Z\236\304;\247\213\203\274\332J\002\275\260\301\212\274\251p6\275\302\304\324<\262\367\001=\374\332>=\326X\203\274\267\":\274\023\237\306\273\276U\314<f\353)==3\032\275\352\340\003\275\302rJ<4\r\004<\0256&=\354\227\350;\306p\265\274sY#\275\301\206\270\272\322\374*\275\353\365\322\274G\200\354\274]\266\341\274a\317\212<\207\372\024;\371\245J=[J9=\361\022\032=\212\230\372\274w\203\034=\335\027\306<\232\371\026\274P\347\253<\333{\037\275\272~N\275\010\3336\275D\200\025\275\330\272\027=\300\374%\275\356\334>\274\307\331\313\274\355\226\314\2725\201\342<Ah\035=\001\356F=v~\313;\370\235f<\216\343\035=+B\337<\007AO=\271\376\270\274\262^\021\275\022w\246<y0\315<\317E\210\274\264\312\022;1\357R\275\263\3304\272\246;{<E\t\323\272IM\035\275\337\'F=\n~\270\274AaD=O3\217\274\006\3039\275\255_\361\273=\361\t=G\217-;\221T\312\274^\277\313;\314\020:<!\033H\274P\224\356\273I\014\346;\343\000\214\274\227|L=~\263\016=\033\000+=\237\3541\275\251\005\242<\243\365\332\274\0212\005\274\324\353\005\275m\270\010=Vr\356\274\210\235\'\275^H\017;\250\217c;[S\017=\225\367A=A\202\274\274\362\370\334\274\"#\312\274q+M\275Ws\005\275Y\367\3159\034\254 ;\323\303\341<u\034\3119\273J\332\273m\t\374\272\323\243\024=\360\r\371<TJ\010<\240@A\274\372\244H=\3337\223\274\367\3137=+#G=\317\275O=\235\332\037\274=v2=\314\0342\274t\205m<\340\320\254<\232X2\275\351\231G=\267V\340\272\265\023L\274=\232\367\273;l\277<Z\210\332<\240G\242<\024J1\275\222\270\205\273ov\231\274\017\266?\275\364\363f;\0042r;\213x.;*\007\r=\353\324[<\336%\320<\345l\247<\205Z\331\273\006\315\372<\251\332\231\274\250\302\014=$\353Z;\2638\326;\034\254\007= \253M\275\250A\300\274>H\r<3*W\275\311_\030\275|\324K=\233\277\265;\347\240\034<U0\251\2724\361\036\275\362\177R=\317o\340<8x<\275H\020\357\274\200X\212<\347&\253<\323\262\016\275\365q%<\373$\312\274i\365P\275\003\311M\275\330\223\010=\003\240\006=\334\256\336\274\330\225\310<\232:V\275Rc\213\274\3042\252\273\324\335\350\274\361]\'=\264\226l<\262\377\346<c\177,=z\317\017\275\373\206H=\330\254\361<w\027f<CXJ;\030\264y\274\234.\223\272?}o\274cp\342\274\310\350\374\274\307\202\215\274l\"\032=\020W\263\273>\324\030\275\262P\202\274 v3=n4\013\275\010G\356\274fGM\274]\273 \275[\2325\275y\377\002\275\003\234\'=\374\0222=I\000\3679\300^\207\272\021\2341=\201\354\304\274\273k#;\264\017\265\274d\366\026\275\n\0273=\263\322\200\274\227\243$=\277\246\t<\000w,<\364\251\034<L\377\230<\232]\347;\234\314\036=\031\224H\275\372\020\311<r{==b\2232\275\222\007\320;\020X\013=\252*\016\275\254\035\356<\032 \223\2741R_\273\3254\306<\010\355.\274E\201\363\274\352\326\226\274\222\023\035\274\341\335V<+iK=\365\000\032=b\016\362\274\034Z\360<\212J\203<\032m\037<\224:[\274S%w<\212\214\373\274\267\221:=:^N\274\317\346Y\273]\345\317\274_\323(\275\021*\323<\211E\2079&\216\242\273\036\242\274<d\2751=\227Q\243\273\264\223&\275r\260\260<T\206u<\206M\"\274:\372\'=\351\3406\275}4t;v\031\014;C\034\236\274}l\274\273\226q\001=JT)=E\240\000<\270H\262<\262\353\035\275\352:\006\275K\314\035\275\203l1;\027{?\275\302\006\204<\202\211\332\273\245N\006\275\025O\262\273d|\035\275\374x-=\031\211\'\275\314\354?\275zz\013\274\272e\017\275\021\r\000=\356b\361\273vg\273<T\364;\275I1\272\274\241\272r<(\255\375\2744HJ\272\\\341\334\272Z|\223<\321\236\206<\003\217\377<5\200T\275\263Y4\275=\016\002\275\376\302\377\274\026\0346\275~w\203\273\322\326\"\275O\351>\275\257\177\364<\376\344V\275\023\302\370;\023n*\275\177k\213<\371I\322<*\031\031=\231v.\275\223H\021<\303\202)=\177\034\210;\244\205\260\273-P\331\274\377\323@\275<\220\001\275fE0\275kO<<G\322\273<P\252\013=\003\250\275<z\010V\2744\230\035\274\215\251R\274[~\363<\002J2<\231\330\327;F\306\231\274\353\356\333<m\326\007=%\006\224<TO\233<\371(\244<p\346\023=\023R\344\273cN\211\274\277\216\373<\206P\364\274\310\3749=?\212#=_\346\341\274\336\237+\275\325a\345\274\266\036\030<\243e\030=\243\356r\274\020:\220\274\236\344\207<\201\206@\275$t\014=\204\246\224\274\325\231n<\177Aq<\035 \000\274\0163)\275\355\203\026\275\374d\305\274\n\221\'=\340\2364\275\261\307B\275\322\312\351<\213\263!\272L\345\004\274\005\255P<\362\205|\273\224\314\024=@\367#=\275^.=w~7\271\334n\260;xF\226\273\214WP\275\364\260\017=R>\223\274eC\260\274\036|&=\332\277l<\345\207)=m\340\036\275\200K\334<_D\217;\324\027\361<\005.v\274\270V:\275\303;\256\274\263\341-<\0066\221<\013\236P=\300*\271;\350(\002\274\246o*<\364*\022\275\345#\037\275\006u\340\2733\274\222\274\247\270\014\275\227\216@<8j\023;\177\224\372\274\266\030 \275(\361\241\271\257[P\274W\362G\275<\376\307\274\312\027K<\2135\254<\361\274\261\274\354\365\242\274\033\330\336<\r\234\330;#\245\232<\r\250n:\"\304I\275\016?e\274\374\310\221<\007\027\243\274\241\365@=\266\225\027\275\2270C=O\255\316\273]K0=_\306\352<%/\365;\231\376\246\274W\331\004\275\366x\241<\315&\004=\301\274\257\274\215\363\253\274R\331\255<\223\013\307;\221(\232<\005\360!=\303\307\330\274\2565:<@(U\275\262\352\021\275\034\\!=\257;\016=RCO\275\270\016\035<\002\275\240<\241@\235\2740\254\023\275>\n&\273\302\030\250\2748\336\374\274\024\227\214\274\3157Q\275\315.\3335\024\377G;\022v5=\264\266\336\274\330J1\274\334\010=9\232\250D\275\3121\021=w\271\342\274\206VU=\223\350/=\210\353$\275\000\254k\2729\317\345\274\n\370\221\273\267\205N=:V\320\273\256\217{\274\371I$\275/\314.\275&<\226\274\231u8=\336\361{<zWQ\275\224\264\344\274C\341\360\274~\321\247\274\222\340i\274I\354\312\274T\277p\274\377\004\200;\357<?\275\242\007\000\274\350D&\275\024\237\n=\204\227\246\271\034m\326\274\252^\252\272w\241]\271\367\225\235\274\010\214O= \256\326<&K\257<\360\317A=\253H6\275\364\315\323;`\356\243\274p=\271\272>\204!=\213\326J\274\200\320M=ef\351<\214FP\275^\3364<\305\0064\275\360!2=\206XR:\001\301!=Bb$\275\347\r?\275\027n!\275\274\017+\275\262@\310<\271QH=9\370\371\273(]\204<\032H\244\273\0208\232\274G\331\214<\027\t\r=\375qZ;)\300\250\274;\311\036\275\300\'\016\275\002\332\340<\200\036\223\274\327m\204\274\331\006\326<\260\262$\275\371\236\022=u\263N\275Z\256U\274u\204\r\275\010t\243<i3A\274\377\316\256\274\375\034\013<\311x\224\274@\354\221\274\336$=\274fF\030=\307%\347\273\377Q*\275\006\030\'\274\231Z~;t\233*=9\304\267<\324\367\244<\014\221\026\274\303\330Z\274\252\2715=\235%A\275\3079K=/$\355\274\370[8<\301-\274\273M\201&<\306\245\021\275\247\3176=\362\177\357:\232\003\250;.5\376\272E\357\246\274`\266Q\275|\316\000\275\\\320\261\273\264\025\232<\365\214\301<0\211\020\275\343\004\255<\000\370\033\275\370Wc\274\271\325D\275\367\215\300\274\001\270\310\274\023QU=|l\343<\362\010\003\275\"\002\241<qQW\274}\330\037\275\312O\225\274\013\004u\272\rZW<{\3040\275\364\256E=\337\214\027\275Q\355\213;\363\317\030\274\300\023\'\274R\001k\273I\\0\274\353_\237<qD~;\216<\023=\303\375\251\274\2132^<\247\001:\275\263=\036=j/2\275\266M3\275\375G\277<\235\271\010=\240\334\004\274\331?C=\254{&<\2668\366\2742Q\224<wb\";4\362\033\275^F\272\274\213~\204\274\373\354R\275s\260\022=oC\341:?\266\211<w\264\003\274U\362\276\274\240\253\025=i\r\031\275\311\216\341\274\364t6\275U\3658\275\310\312\305<-\250M=\253\0172=\230\263E<\243\215V=\nVG=\3749-\275/\006\031\273\342\207\021\275x\247\024\275I\341\010<H\255Q=\273\027L=}\372\031=\335\242\031=\243\0165\273\245\243\307<\237\257a<\247\372\277\274\232\325Q\275\307\260w\274_\310:\2748\324%\275}\253\347\272\0351+\275dP\013\275\307SB\274\242\223V\275\037\353\027\275\273wT=Q\337\247;\017.\022<\375\330@\275\231vN\275\337x\271\274\306\2665\274\010\2571=\004\007\037=t6\021;\233\360\024=4\332#=\021+-\275>[\007\274\026\326C\275y\n\366<.\341\204;O\032\t\275[\334\2758\322\375L=\001:K=\266\2276=\326Z\332\274M\334\034=\211\223D\275\262}\364<\2547\334\274ICk<8\251\305\274\241\"\013\275\317\013Q\275K\034U\275R\322\350\274y\245\303<\215|\213<+\364K\274\032\262\227\273\037o\257<\212\316e<?\001\241<\265T\217:\026\217\314\274\343\0377\274\227\005&=\317\3640<\032\234>=\316\334\032\275\241S!=\211\247\360<\301D\001=\023\256\014\273I3\341<\322B7=}\316.\273\035u\022=\325\307\001=\341l\334\274/\\\212<\230\024\204<\023mR\274\341\242\316<\315\365\252\274\203\"R\275\316\226*\275N}/\275\027j\310\274\324\2630=\243F\374\274\232\314\n\275J\014~<\\\355\275\274f1A=\203I\002\2755\005#\275JJE\275\351\274\004\274\021`\201;\034)D<\347:\264<\320x\t\275\267\032D\275\274|\207< G\r\273\331\264K\275h\244\376<\220\nL=\251\307\022=\263\377\025<Hr\211<\023<\017\275\263\236Q\2757\237\302\273I\243\241\274\230\254!=\0216f<\362\277J\275\264\247\n\275!\320J\275\367d\240\274\250\r\000<\233\035\n\275T\032{\273 \252,\2756N/\275\014\207\010=\346\221\177<(\035\017\274|T\274\274\002\217\210;\351\030\017<\364d^\274\2608\021\275\260\223!=\342\352\213<\270\256Q<\337U\226<*\277/9\300$\357;9ZE=F\225$\275\304\2608\270y\271\036;&]F\274\247\2626\273\006\255\025=\010\010\371\274!p<=\037\227\226\272\201\255\257\274\347^\317\274\334\377\010\274u\347\262<\205y\226;\300wF=\202\377\357<\037X\3448h\022\262<\262\263P\275\207\355V\275\317^\334\272\307\006\237<\261\337\256<\226\'\340;=\373\347\271\275\330\r\275\004O\027=\021\275\234\274\241Wv<]@\213\273\177\r\007\275pV.\274^\271\326\274%\211\240<\006\032\350\274&\001m\273\255|\201\274\037M\007=\340\006G<\034\330\256\274ZF\032\275m\260P=A\262\251<cY\034=\016\336@\275\272f\341<\345\3673\275\210\000\320\274\t\234\'\2741\r\267<|\334\020\275C!(=\272\034\036=\225\2626=\216<T\274\004}\350<*\024\335<\220\200\366\274\250fJ\275\337vW=B\223\236<s\337\336<:E\206<(g\234\274\307\215\014\275\332y\202<\255\001\362\274\221\346\032\275:S\037\275\361.\005<\322O\336\274.H\336<\001\337\243<\372s[;\322?!=|\357!=\340\004.=Z\n\002=\214\227\302\274/\3228<*]R\275x\202P\275=X\345\274@:7\2742\307\r<\302\2753=\231C\034\275\362\253\032\272\177\221@=\360_#\275D\204\253<E\022\005\275\033\237\022=\267\'\302\274\275\334\013\275\310\230a\274\350\246B\275G\317H\275\205\340\326\274\254\003\351<\010\034,=\026\362.\2755\374Q\274\234\217\016\274f\020\032\274|\311\032\272\327\355\234\273\300EM=\336K\376;vd\025\275`\353\006=\210}5\274\242\355\311\274\016\247\211<YMD<[|\315\274\023X9=\276\014\031\2753\341\320;\353V\267<\2654\221\273\260\274U\274\310\225\226<a\237\274\274T1\254\274\306J\350<\324\007\230\274\372\317K\275\005\035 =\343\273L=\022\350\232\273\022\0135\274\263|\242<>\357\277\2732\234\032\275\n_1\275\036\3227\275\254tG=Fx\'\274\310\272\304\274W? \275\251\007U<\252!)=\313\335B\2752:\215\2709\023\036\275\2235Q\275\033g+=qQ\325<\030\225.\275\372\364O\275\000s\270\274\233N\274\272\305\3473\275S\204\367\273M\006.\275\366N\230\274\320\206_\274h\342\340;?\254_<\345\352\257\274{eM=C\212\360<\3325[<\271H\350<\335\225\307<t4N;\301\025L\2757\274\024<\366O\016\275$\004\244\274\370S\316\274h\224\235<\345\201\265\274\177\230\'\275G\337\276<V;\200<\321( \275`\232\360\274\\\312c\274\357Ke\274Oc\336\274\324\243\375:\275x\001\275\274\323\224<\215\240\006\275\340\000\002=\"\272\023=\330B\350\274\323\311\027=b\037\350<\"\000\201<\373\306\006=QdQ\275\247\225p<\234C\243\274YhD=\337w\016=:\237\026=\004\300\253;>\252\253\274M\355\032\275\235\337\323\274cw\000\275\217(\261\273W\"\336\273\014\344\023\274\231\340M<v\330/=\033\210\312\274>\333`\273\313\255$=\274=\355<\3752E=\354G\220\274&\274\n\275?\010L<\265\204\361;\372\301\360:\246\210v<,\004\001\273\351\014\310\274\003\031N=\212\222\250\273G\315\244\274\224h\032\275\253\216\326\2747\363\214\273M\265B\275lX\211\274\177\032\020< ,\252<i\1771<\351fm\273sz\331\273\365\244*<v\236\202<<\262E\2754]\336\274Q\316\257\274\326\232=\273\306\317\347<4\375\331:\244\000q\273\021\177\033\273TZ*\274\206\307\345<5\351)={\323\372<@28=^\013M\2754\244\001\275[2\032=1K\213\274\t\342\222\274jpL\275\211\034(=\301\212\206\274:|\270<\344\337:;\237\205\335<w\355\347<q\364T=\303<+<\320\272\262<b\330R<L\357\035\275\022\374\010=\240uS\275.\207\005<7\256\327\274\274b\342<&\342:\275*\032\377\274\022\313\020=@\246\025=a\207\027=6\3209<\220\241\013\275\246H\301\274\370\307\330\273\024\034\315<-\026\377;|_\016\275wF\216\274y\356\230<|\001+=Y\254\373<0\322\n=\277I\020=>@\226;\'=\031=0\323\307<T\1773\275\366IN\274\207\0137\275\205\216\323<\312\013\240\274\266\252\237<_\236v;6\251\214\272\344|Z<X\034\311<\266.L:\315\312:\275\374\247\225\2748\364J\274\271n\372<\272&\253\274\010\244\024=\016\233\353<\362H\005;}\3378\275\341\027L=\022\003#<@5d\274s\2676=\2458V=\204 ;\274\340c\362<]?\200\274\252\374G\275\243\344<=e\246R\273\336D\245;\322\264\235<\307_C=H\211\255<3\261\353<:\320\364\274#\243\242\274\026_\304\274\037y\317<\201\330e;aTK=Y9\025=\231\037\261;m\334\346\274G\030N\275\246\224\010\274E\354&\275\014\272\260\274\014S.\275\225\221P\275:@\036\275\316\010\202\273:\367\260<X4\365\274j\007\217\274\351\3625\274\334\304;=\000\337\225\273\263&\242\274\027\273\363\274\215\016\334<\013\274f<\345\247\032;\031[\374\274V\253\230\273\242>\320<\376-\000=\263y/\2750\243W\275c\177\331</\213+=\337-\306<\246\264\324<\221\257\244<\245\257\032\275\240\342\354\274\\\014\003\275}\244/\272c\014\346<\214M\355;4[7<)x\210\274\222\303-\274\231E/\275\341S\207\274\023{\036<\253\366\363\274\340\342\365\2735\266+\275\345O}\274\001\002Q\275\346f#\275\025\370\007=*\263\r\275\334\243-:\352\203#=\270~&=\212K:=\006\247\311;\240#\264<\npT\275V\035\023\275Y-\017=\177\265\022\275\223\311\026<\310\257\363\272M\344\253<\312\210\245;\236\305\327<<\025\337\273\216\3471=WOd\274\335p\232<\236\225\344<\356\323M=I\334F=\264\333\004<\355~\024\275\323\350\372\273\207\265\253\273\366\265G=\363\201y\274\314\ri<7}\335\274\276\222 \275y\274\016=}\177W\274V\276\032=jeV=\363\013\301\274\342\223]\274\251\020\374;:J\006\274\235\253i\274\303\177\025\2753\272e\274\232e\371\274O\301\347<\010\017G=\377[1\2754\'\375;\321+p\274*\246\340<\234K\024=\207;\013\275\310\272@\275\361\253\261<.\021\003=\264\304\242\274FJ\036\275\250\006V;\357\343\313<\337$\355\274\347\235\022\2752xl\274i@S\275\266C\243<P\244\030<8\340\357\267[\230\003\275\350i4=\037\245\261\274\370\206\350\270r[\321:\307\240\241<\003\323\206\273\006s\250\274\345<5=\030\215\331;T\"\003=\250\0177=]X\030\275\'\017\013=\272i\241\274N\202;=u\273\230<V\220\375<\033\345\313\273T\342\'\275\232\333\300<\310#\030=\314V\242\271\343\026\340;+t/<q\300:\275+\360+=\035\230\357<[\275\231\274!\247\027=O\275%\275\265\374n<K\247\002\275Z\234\244<\215r\034\275\035]\372\273\242\263$<@tZ<\237\004\245\274\276\267P=\225\253#\275q\337\267\274D\366N=\234\214\\\273\243\326\342\274\017\"W\275d\t\371\274\352m\362<:\231`<J\247\234\274\233\3475\275\220\314\022\275L\016H=C\027\261:\247)\244\274Y:\206;e\245\262\274\230\370\372\274\216\255\343\272\234\327\032=LI\000=\r\353\270<o1\323\274g\027\375\274\377+\026=#\"o9\355 S\275\017\375_<\007p\216\274\230\302K=\"V\332\274D\003\311;\345\331v<\'\226\231<{j4\273\243G\213<=\306\250<X\376\320<Y\266\277<\216\033T=%w\034\274\367\250O\275\356\237\004=\245\256\r\275\024TL\275\256<\007=\350\016N=\217\306>\275@&K\2753\234\364\274\215$\366\274\205\213\021<ts\236\274,M\327\272.9V=\361\034C=\273\377%\275\331\2430\274\247\245\300\274e\204&=qu\371\274z0S=\311\350\033=\200MG=\355s\252<\207O\030=\003S\025=N=3=i\310:=|-\224\274\272|\024=\030\026\n<\2366\346\274\305\362\237<\010\271\005;\351\222\017=\276\375\321<\275`\204\273u\266\006=H,\337;\230\261\277<\006\340\326\274D\254\021\275rUQ\274\372\204I:7N\"<\210\321\264<\323\344\031=\220\246\260<\215\272\330<Ml\027=\266l\216<\272\023,\275\277\354\350\270\241 \271<\363|S=\301\254p<\'\302\204\274\305Ko\274{<\226\274\031\240\302\274lR-=\322\210-<?\207\225<\352\372\210<\031\201\307\273\235\226\201\272\217\3419\275\263\014\313\273\270\357\'\275v\244\177\272HoK\275\017\234E\275+\303%\275\372\037-\275M*\022=\005t\360\272\242\231<<\364E7=\223\272\004=\203\224|\274:ZK\275\24007\275\246\330 \275\233P\r=P\020-\275\034\320{<\252\245\230\274w0I=?;\212\273n\";\275K\0230\275\364\256\302<\230z@<\377\242\232\274\254\240{\274e\303\305<\200\321\007=\262\325\270\274:M\261\274\210\223\371;Ck\251\274\025\213\372\274\006\357\344\2715\253\324\274\035\\\013=H\000\242<\305\014\311\274\264\245\224<\220NC=\343\322\272\273\205\324\352;\025\177\224<$(M;5\000\216\274\275\363\016<\233\253\224<d\354/=N\245\232<P\236\204;zPE=8\251\021\274e\361|\274\366]\213<F\226\360<n{\231\274L\227j\274\244\357\203:\016\027\327;\3759\345<z#\303<\375QQ=\021\250+=\232\371\217\274\267\231\001=D\305\203\274JL\324\274\242L2\275\216b\361;L\247\304\274\213\261\247\2743m\236\274\201\221W=\315\\\203< \354\367\274\360\361\235\274\221\345+<d\3043\274H\216\3329~*\037\275~\251\331<J\220u;\217G\317\274\317\273I\275\375\373D=\246g\204<)\017S\275\370\253\207\274;+\032\275^\276\004=G6\017\275R\303\314<\211\366?=\234[\236\274\206=\n\275\243\025\211\272\261\351d<\\R\033\274\255>\275<{\375\032=\037\225\230<\351\250\005<\300\327\'\275\243\241\026=\000\231\230\271\356\344H\275Mu\246\274r,2\275\231\372\331\271\215^0=vp%\275\374\220<=\036Y\243<\324V\333<\373{I\2747&\272<\017@\224\274\005KT\2751nW=O4b\274M\364$=\262\004S=+\032+=\356w\237<\324Q\020<c7\373;\022\026A=\346\325\272<\020\206\345<\3135\277\274\305\240%\275@\305Y\274F\341O\274eT\350<<\370\253<\033p\364<\307\212\"<vY/\275\023\276\377\274\223Z\240\274\233\245h;#\0142\273]\244B<\366\317\216\274\'\234\305\274u\322F=l\247\251<\365\325;\275O\301\365<\277\331_;\\\030K=\377\376\256<\305\345o;3\375j\273\227\365\033<\336\303L\275\372Z\302\2742\236\202<<\210\024=\271\325&\275b4\n\275\355\035F\275s\274\365\274!\375.=\210\216D=\255R\254\273\236\313\022<\202\371\014=/\307\035\274\262\017\313<\327y\037\275DF\375<\236ER\275\222\016\002\274\251\371\034=\227\215\355< )&\275\302r\311\274\376\367\316\273\017\014\305<o\337\320\274\222N3\274\271(\025\275{\323\277<\310\034\000<C\372>\275\233\205\222\274\315}\n\274\014\0354=\311\025\214\274\035\341\372\274\305x\036=\263\335O\275\003(Q=J\237\000\275n\034%\275H\2572=\335?\216\274\222\256\200\274\275\335\366<\303\214\345<\307\n*\275k<l<\242u==\031(E<u\253\215\273\220g8=\013E\202\274$\271\342\274:t\202\274T\222Q\274\265\037\223;Ap\002=\347~\013\274\233\246\323<\202\262x\274!=\010\275j<K<\253\241:=\033\342 \275\t\262G=\200kz<\307x\r=6\343&<\220\276\307<i\224?\275\r\311\n\275\355\237/\274\212\370\203\273\r\272\035=\000h\353<xl\254<\30662\275\235 [\274\034$\375\274\t\033?=\005d\036=_\263(\275\351G\317<\211\361P\275\236\0243\275\322\357\300<Qe\254<\335\3019=\247\014\000\274\356?\313<\226<9\273\373*R=\024\225\033=\017L\351\274\232G\033\275!\216\r=3\235\373<\035> \275}\215\032\275H\305&\275\265|!\275\214\221V\275B\364\310<\275\026\025\275\002\373\006\275\257a\363<\006\321\365\273\'\347B\275\231\263T\275*q\355<5+q\274i3\235\274|qW\274\202u}\274\322\022\242<\231.\001\273+\030<=\331l\233\274n}\t=\370b<\275\270W\252\273W\255\346<0g\235<\374,\224\274\006\322D\275$\006\346\274 \303\235:\223!\224<_\317\033=H\0027=GQ\343<\272\202\317;\217s2:Y\276\215\274\266\332\234<\377^\270<)\013\005<\351\245+=qo#;\362/H\275\336\027J\275#\334\212<\214\2745\275\350\025_\273\301\014\337:\266\3274;\361\354\310<X\344C=\23665=H\274E=\216\3173\274\336\267v\274\201+\026\275\226J&\275\226\006\231<\323qS=u\314\212\273\225\002\026=7\\\204\273\375\000\271\274=\262Q\275\265\"1=\224\271\014\275\251E\321\274j\026S;\251\233\271\272\356@<\274\033l\236\2741\350\375\274\263\024E=Kn\003\275\252\270\341\273\363\t-=`85<\225\330\332<(\255\003=\026\322\212\273\034BV\273\205B\030=\255*\026<\tC\025\275eb\325:\242\226\010\275\252}\n\275(\244D=}\303p<\002\215\002\275lq\317\274\226==\274\220\354d<\031EQ<\251\004+\275=\360\030\273\034n\003=C\340\310\274\325\275\325;\275\2458\274\340lQ\275\326`\252<\304\034L\275\000\024\207\274\205\332\035=\375\004\235<lE\021=\354\372B;\256\024\033\274C\003\333\274s\262*=V\317\236;|n\212\274im\214\274=H\005=G=\036<\301$q\274\326I\026=\006\336N\273\354R\"\275\372\017P\275\201\271\323\273\334\241\236<\017W\016=\030\377\353\273\"\361-\274\01379\274\261\030i:\343\037.<\014N%=0YA=\352J\037=\322\222\372<7a\023\275\222\246)<\344\034\236:\334Z\313\274~\255\001\275\255\032\236\274\333\005\265\274>Hy;\255fV=l\355\014=\033\013\022=C]+=QS-=\346u\033\275E\243u<\223n\031\274\0365$=\305\022\205\274^\004\332\274\254\213\002=\216\324-\275\245\023\241<QL\260\2733t\311;5\006\r<\003=\024\274\331\2164<\217~H=\024SN\273\237\303\006=\246V\362\274 H\325\274\310\2308=\274g\333<\024\366\304\274z\350\013\275\341\343\221\2741\327P\274v*\201<\321TV=\264\024>=G+\274\274\233\035\323<\010\021\021=\321D\227\274\244_\342<\222/\037=\214\020(=>\236\344<v\357\020\274\235\031\217\274q:\273\273\\Eo<{N1\274\255\246\001\275\013\326U\275\356\243\2579>\347\335\273\2439\367\272\334\247\020\274\355\353Z\274s\005\007=\243s\021=^\201\021=Q\3658<\312\373I\275\013H\355<I\244C=\364\274V\272\225\243\365;\245\237\371;q\347\037\2748\337R<Sv\241\2746/F\2750\026\227;!KS\274\374\235\206\273\334\337\242<\032\374G\275\0269&\275\3063\005<\206\240\010\275\327\307\202<T\222S;\321\2623=\205\220@;GJ\";\234f\265\274\232K\036=\360\177\223;\026\026\265\274\360\240\335\273(\375:=o3=<\277`C\275\232\274\256<U}*\275\014\362\027\275\273c:=\263\226\020\275\203\240\220<o\214\233\274\317\264\313\274\235\355\235\273\2047}\274\306J\273<\2327\344\274;\266R<\377\373.=\003!\326<\374?:\274\"\353\343<\\\222(\275\356\232@\275\314ZO=\224I/\275\266\016\364\274\252/b\274\313\0077<\335\2054=\313\345=\274\241T7=BF)\274\254\350D=\307(3;J\251M\275\017:\305\274\344\005m;)\000$\275B\276g\274N9)=H\203\323<p\340\022=\346\016-\2758\260\253<\252\2437\275\352\302\220\273\236\022\n=^\rR=\006\351A\275**H=\017#;=\021\374\021<\227C\035:haE\275y\330\014=>p:=s\277\264\274?\366\346<\357\364\'\275\334\020,\275\030[\271<z\252\017;*R\334<X\312\374;\203\273.\274~G\221\273\221\224.\2756\254\240;B\342\206\273b\242\306\273C\255\016<\360;E\275\371\252F=\224\304\353\274i\220A\275\256\304!;#\010\331\273Ne\374<\014\317\354<\223\332z;\340\232\034\274\225\340/\274a]4\275\222\302~\274\023;c\272\367w\224<\2115\272:\205\3655\275\275\245\022\275Z\365\\\274\030\254\327<L\234\343\274\321\001\030<8\326\376\274=wM\275i\367<\275\357\375V=+EF=\277\022\217;\316\355\"\275d\263\034\2757N\237<{\232\201\273\035%\310\274\034\377E8\013SC=\376\332J=*\223>=\022\303\027;\034\223J\274n\026\007\275D\377/=~gK<p\026s9?\275J\2758\256\343\274\034\355\246<lJC=\\<+\275@\037G=(\351\353<K\014!=0\226\212<\221w%=\206\242\003=\037\300\037=hvU=\267\324\307\274\335G,\275*X\034=5]\333\274\3222 =\270\276m:\265\"\"\275U#\234<\327\344\267\274/\275\220<t^E=\207\343I=:\360\213\273\301\315c\274\337\332\001\275&\\\r=\207&P;\305u\024=\226\001(<\212\202.=\301\232\031\275P\315#\275\255;\300\274RI\264\273s\213#\275\"c\353<\001\265!\275\025E\304\274\256O\202<@\320\236\274>\347\375\274M\t~<R#\354;\220^#=\350v2\274\017\333\213\274\006\244:\275\253\264\037<\245r\361<\351\266\310<l\332\233<I\312\237\274\307c=<\342\232\037\275\"\025\225\274 R\205<LS\001\274\377\363C=gwL=X6\362\274\241L\007\275i\304\301\273\241\266\315\272\265c\254<;_\016\275\021\313?\275W<\364<Z\360_\273ga&\275\320\032\233<\000\3125\275F*\327\272\200M\355<\340\275 \275`\0316\275\253^#\274\010D\216\274\2202\362<\256\240\250<\241\036F=W\326<\274\252\342\025:\355\254?=m\230\264\274w\035V=\017\322\362\274r\327Q=\224e\017=\274\336H<\264\2410\274\"_\021=Z4D\275;\245G=D\322\034\275\230\274\374<\323\257\367\274\270I\271\274\220\0067\273WN8<iJ-\274M5-=(\035\017\274ut\237\2745\247\225<\270\307N\275\333H\021=\002A\024<\277\022\037=\331\201$=\r[\214<\016\rO=\n\334\016\275\311$\230;\320\371\272\273%\346J\275\315\371N=\236\242\205<\230u\031\275\333\257\021=\251t\222<\274\r\327<\201h\274\273\360\272\003\275\364\255\"=\200\362\243<\033\220G\275M\340;=\2474\261\274\007\341\337<\035uM\275M/\250<L2K=\361\000\225\273\362B\021=\024\310\200\274\36109;\245\275\253\274\206u \275\317\375\332\274\344\033\340\274\017q\004=\251\022<\275t\006x<\227\226\337<\316\264\203\274\237\216\005=EZ\211;\274\243\032\275\2542\256\273\200\326\330\274\306\365\'\275m\252\237<\030\007V<\350\245+\2750\251\233;\017fL\275\270\264l:\373\034\264<\332\024R\275\213\023\215<\271\364k<\263\203\365\274 k\034=\251\261M=$\002\266\273\271+\275\274\"\222\3209\340\246\025\273\010\340\271<C\232\203<\234:\261\272c\210\371\274\031\177\210\272Xl\013\275\246\301V\274&}K=\000\r\255\274\217\204U\274\262H\354;\357\225\001\274\254\276\010=PM\331<\201\037V\275\274f\226;RyU\275^t|\274\"\010\207;T\344\214<\374T\206<w\371#=\330\252A\275\244/5=\301\225\006\275\306\3120=d\352$\275\3738\315\274#\376/=F\2047=\251Vl<\253\305@<a\313\316<&\035\267<.g\030\275KHY:\346\336\241<\267w\273\274\340\241\357<\003\237\023\275\327\363\346\274_s.=\210\346S=wi\375\274\224W\037=\3112c:\216\301\377<\001Z\317<x\003>\275\377\364P\275\357\301\273\274P\234\223\274[\2417=z\352\022=\277\035v\274>\234\014=\374\347\330<\'cI=\332\367U=\215`\215<\274\034-\274\350\323\352<\276\2014\274\215vU\274;=\n\275r\005\201\274\333m\350\274\334R\036\274s|M=\367\362A\275j\003\336<\\\212\226\274\317NL\275]\302\321;\007\0007=\274\320\n\274\256e\202<\341R\005\273\226-&=A=~\274\340\336\204<B\370Q=\034\2111\275P\027/<\244\242\001=\242\033\017<}\256\362\274\215\021\024\275E\241\241<\261\014\021=\303\005\027\273\233?\314<\321\"\301\273C\306\264\274\2416\317\274C\365\305\273AgK=\265\245h\274s\374\364<\206?\270\274\227Z\206\274\222\200V\275\"=\354\2738\237\233<k\326\320<\340\210\177\273\034\213G=p\217\034\275\t\201\202\274\236\\\'=\017\230\032=a\372}\274\216\353\035<\202\366t<]\322\354\273\357\0042=\241\274\222\274\225\346\354<\300\265C=\300\374\210\274\263\367;<\263v\026= \246\357<\t\243R\275\337\276\334\272\246\314\347<J) \275[\342\224\274\272/\003\275\020\007\214<P^\303<\275j\226<\035\323\233<Kf\030=J\204\206<<N\245\274Dx5\275Z\020\254\274<0=\275\003GX\274\320i\'\274\'\024\311<\343(\352<*\250U\275P\0042=-*r;\224\227\007\275\252\255\356<S\340\t\272D.#<\231\363\032=\030\237=\275h\372+;`Yr<u\026>\275\023\326\306<\377\304$\275J\337!\2756\325\257\274w\023\326\274m\006\307<\003I\0009\260\013\317\274\357UA\2753\333\034\275\306 \375\273;\2049=\311\023?\274\227\264\231<\3274\350\273\261\201\373\274\360\267L\275\033{\240:s+&\275t\353\262<S\000\033\275\214w\220\274Qt\365<\225k\202\274\035\202\'=\363O\001<\030\331n\273\271\356\033\272\375_\220\274L\342#\273In\216\274\023\257\340<\254\024\266;\005<F=\314H.\275\310\224\317\274\327\034\003\274s\327\033=N\3454=\263\'8\275m\227&\275?\232\363\274\335y\006=\213\031\t\2741\370\337\274\225\004N=\n\030\241<p\250T=\361\203&=1\331\347<\310G\r=\'\362\000=\326\377M\275\347FT\275\3363\324<L\003\314;\tZ\270<i\201!=U\033\004=\033D\216\274\241x\221\274\320\256\036=\365t)\275\311w\205<x2==\345\017#=\367\324\346\274hU}\274G\314==\214\321G=\031\372\357<\016y&<{e)\275++\232\274\004\353M=\005\274\365\274\340\206\257;H\307\305;\001\224\013;G\005\336\274\376z(<\200\277F=\252\2667\275\030z\235<\026\004\214\274|l+<\003AJ;\302:\345<\312q\343<\370Y\231<\034VV\274\274\276\254\273\356\017A\275\031\307#\275\000\021\'=7\327\021\275\240\261\276\274\241M\351<\017#Q<\210\337\220<+RR=\242E\215<i\217\006\275\325\273\000\275\014^>=1!M\275#\201\254<\273\351\345<\200/S=\342\026)\275i\2532<\177\330\023\275a}\r=E\352!<C\337,=\216,K=0p#=\337\013$=\263\373\245\274\276-\027\275uC\205\274\r*,=\274\345i<s\346\373\274\253\211\023\275\345\013\216\274\220\002\032=\241U\037=\345\372\004;\2617\242;\234\351\324\274\217a\014=\240\020\027=\014\016\261;l\306p\274\376\tV\275\210\277Q=\305\217\203<\020\340\365<G\001\332\274\024cG=\205\244\365\274\263b\014\275\261\223E\275\367,\203\274\264\005)\275\247z^<R_<\275\240\257\000\275\355g\004=\365\262\321<:&\321\273\330H\205\274U\2605\275z\334\010\274p\037C\275p\267\013\274\243\333H\272\351.\001<,L\r=\306\210\237\274Q|\252;\214\351\010\275\377\272\031=-\021\033\274RT\260;\344V\213;\006\261\270<\327g\005\275\360\224\264\274\251%8\274l\214F<\30545\274\361\323\022=t\226\303\274pRT\275\214\230\031;|M\267<\017\3310<\202\007\017<\034\306 =\353u\301\274\016`,\273\202\316\255\274T\035\256;\324\'\035\275\304$\257<6\033\346\274\341\313\023;\334\033\276<\024\202\304\274\325\003.\275K!\024\275\322\035\264<\026\220L=\021\272\031<\346\020\376<\277T\260<\303;E=y\032%\275\317?G\274\221\260D\273\272\356\335\274d\016\341\273x\000\217;\336\371\214<\364\211O=\352\031\036=\217\220\323\274\347\3429=q1I=\250\2306=\306\255\036=\001\223\206<MaL\274+\273\263;kfO\274\272\031\260\274qG\322\274\023q\362;*,D\274F\005\274<\342U%<\220\334k\274\257\225\234<%nq<\204\t\376\274@y\272\274\346\2208\275\346\362\205<\200o\304<\251-\315<\002T\363\273\342\274[;\243\r\351<\023\266\341<\271\220\302\274\332lL<j.\370:\257\000*=\324\351\230;\354mD=\322\272\177<\245+\030=\272\005\277<\226\0320\274!\312\'=\276o#=\027o\014\275\342\345\277;O\231U\272\2230\235<G\261\333<\216\266\220;\025\207/\275\341(\220<\017\347\243<\3405\030<hQ\254<\211ON=k7\330;\300y\022;7\363#={*T<KiT\275\006k\340;\237\225\366<W\241<=\341i\361\274\227\177\341\273W\305\277<\020\227\016\274\345?\275\274%)\360<\232& \275v\220#\275\263f4\274J\005\316\274\367\227C<\003-\005<\303QA\275O\343\261<\213\226\030\275\233MG=\031\303\333\272\341\004\347\273f\177V\274;ri\273\327\013\016=()\345\274\255\311\304\273I\242-=\255\005\020\275z\371@\275\234k\370\274G|\366;\rM\331\274\373`\r\274\207\311F\273\227\257\026<\341\273\256\274\030`\362<\300\000\030=sn\003\275\323\220\017\275cv\252\273]\222[\274t\"\224\274e\020\311\273\342\014\317\274\224k\312<E0\376\273\231Nx\274\341\314\035=\243\351[<\005}\r=\021\360K=\005\240\027=\3604&\275\370\005\274\274*>\373;$\3618=FI\000=\243u\341\274\265\016\016\275\266\375\275\274\201\362\007=\016\261\242;\325\300\017=uP2\273\0033\355<M\321\311<\324(\003\275o\250\302;2r,\275\360\363\270<\274\355\017=\222\253\230<\232:P\275M\346\206;\376\034\026=\314\023.=\202\215\335\273\3203;=\355\254\003<4\024\361<\024\310\016</\332\007=q\3076\275\214\350\365\274\306?R=z\336+=\276\352\231\274`\367\321\272\371\206\002\270\364r\033<w\214\035<h\370U\275s\231\037\275\310i\247<\026&\351\274R\\\352\274\347\365\022<\256\014\023;\026\255\027=\371\364\203<\353\205\211<\236\320\233<4\022\n\275\006\253<\275\005sB\275\330G[\273;n/\275\302VO\275\250\335\027=P\305\023\2759< =\233\372D=\014\212@=\366J6\274L\213\013<\324\234\021=\027\026\"=\256p\340\274\014v\004=1-8=\204CY\272\275\241\034=0\272\275\274\351\352H=8\266+=\246\204\277\274\370\2128<\'\003\'\275\255\355\232\274M\007f\274\250tC\2751\2318=P\317\000\2750\233\217\274\204\213\026<r\t7;K\364G\274\275n\275\274\243\034\331<H\327\037\275\037\033\334<c\302.=\372Q\023\275%\227?=\352\'$=\210\375\032=t\321\007=\343\024\014\272\210\273$<\243\235@\274\357\355\014=\263TQ\275\342\005\013;3\373\345\274/><\275l\250\306\274}\266\334<k\305\257<\213\211\356<\267{\034\275\033E9\274\332\212\"\275\374\033\372<D\213.=\177\225n<m*\336\273b\253\232\274\314\356<<\320\274\035\275\003\242::x\212\207\272y\3616<\261JR=E#\315\272]\214+=v\215Q\275\032\261\006<\027\351&\274\036\005\007=\"\020\345\274T\324?\275\225\030+\273\357\204\242<T\212\r\275B-\316<\326)\"\274\321\327\031=\010\257\026=\341+\331<B\210\212\273\260\347<=\262\206\253\274\271&\016=j\2063=\001\244\265\274yM\022\275\365\247\330\273\246\250\200\273\001\314{<\364\'\007=\336];=\366\206\353;\027\265\237\273\363\247\031=\327\017M=\2108I\275\271yj\274\331\240o\274\217h0\273\366\330\220<\021e\004=4\325\003=\324W\305<\370\000\022\273\026\215R=\215\203J=(\005F\274\333\\%:4\2516=\323\211R\275z\247\306\274\031\236\341<A\275\340\274)\200\316<\026\212#\275\203O\233<\273\030B;\341\3330\275PA1=\247\362f;Ks\275<h\320\204\274[\t\021\275s\314\317\274\010\363*\275\357)[<\372\367p\274\031d\343;\030\374\372\274\037\267R\275\210\300\357<bF\364\274\337n\026\275 \360\001=\225]\002\274\331\223\231<\331\322\016=SL#<;\177\t\275\323\367\356\273\374+\020<\0028`\274\002\t\025=y\350\202\274Sa\023\275s\322O<p\241/\273uX#\275\025\215\371\274\241\335q<@\235;=\257\325\003\275zz\350<\331v\254<\004\371\341<\276 $\274\266\240%\275\002\243!\275\337\372\210<\341\3247=xw\026\275\257\341\266\274\373&\226<\306\330&\2737D\245:&\226\355<\333\2531=_T\347\274\r\361\333;\351*\376<^\"K=\3723\r\275\211\327F\275c\031\331\274\375\251\001\275\010>#<\207cL=\207\371R=9\351\274<\027\323r\274\334\341?\275\330I\034\273\314:K=L\n<<\223\331\202<m\360\267<\002\333K\274\333\263\036\275\210-p<\203r\260;\236G)=-h\256\274\035\211#\275\0259\016=\377\351-=,\224\362<>\231\014\275e\036\316\274\327aK<g\373\022\275oL\303\273\205\246\245<\240\266\347\274)\271\004=\0105>=\320P#=\264LG\275\351\031\264\274>\270@\2745\221\314<\273\351\345\274\203\312<=\271\242\030<\001\247\023=\217\024y\2740\341\324\274\t\034\r\275\361sC=\352\345\265<\303\272|\274\211aG=\365\214\306\274\231s\007\275~z\300;\313-0\273\360}\210\273\210\375\037\273\007{\017<\216\0311\275\200P\032=)\274)\275&\254H\275dMV\273\\\233E=\026\211\252\274\321\3726=\311\335\313;\222hA\274\377\n;=\236\377\216\274\276F\010=f\312<=\311\364N\275\246\326\005\275+\3603\275%\233\215\274\367\253\t\272\235\024\351\273\225\214\371<&=\023\275}\366\270\272\315\023Y\274\205Z\014<\035\2713\275\237-\324\274\227\014<\275\240w/\2756\013 =\027\032\212\274\275DO\275\2541\333\274#\236\201<j\361\214:\336kN\275\030\312\003=-\237\260\274\220I5<_lW\271M;\022=\250[\235<\323\222\374;\327\004\343<}\251\242;+eZ\273\304\312\322\274\337#2=_\206\236\274C\233\270<<\033%=\357\2077<\313n =l\331~<o\271\354<\370\013\025\275t\265%=\346\206D\2743\017\260;*\240\024<}\343\271\274\375\206\231\274&_\030\275\236L0\275]\032\033=I\230\327<\305\214:=S\004M=\267Bi<\254M*\275\036;\325\274M\366\265\274\303\371D<\001!\224\274\274\240E;;\014\356<\373\204\300\274V\225B=\265c\301\274`\241+\275#d\251<\356b\246\274+i\024\275\322PA\2754\373(\275\376\231$\275\260\307\361<_\332\027=\022\363\215<M#N=Md\345\274Y\234\242<\245&\350\274\266\021\022\275\234\205\374<\2621\004=\361n\021\275\241\241n<\004\023-\274\261\037\333\274\307m6==\271\022=\261BD=\211\330\376;\3277\257\274`\326\031\275\024\2340<\037\017\377<i\363\016\274\233\344!\274~\230\n=Y\363\030\275\345qv<CI;=\244\226G=\356\373>\275\003~\034=En\301;,R\361\274UeB=\376\231\213\274X\357\025=\264i\271\274\350\232B\274\0160\345\273\210e\372\273\252\272;\275d=/\274\361\005\033\275uK>=\034\353\240\274\206W\325<\241+I=\2219\020<<A\263\274;\341D=#j1=\230\006C\275_\306\020\275\223\365\374\2741^\241<\325\357\236\274\230\240\200\274v\306Q\274\227<P=\360a,\275\3068\026\275\005\325\001=5\337\204\274\335\214\250\274\361m7;\344n\360\274\230\306\244<!\201!\275\314\332F=\000M\243\2743\021\375\274\225`\023\275>\2342\275\254\006\264\274\206\352p;\376\031\252\272\336\212;=\025\374.\275u\206!=\214\272\217<T\374G\275\016\262\030=\037r\033\275eb\257<\037\327\207<7\201T=v\323\316;\373\374?=\324\311\313<PH\024\274`d\013\275\351r\002;\217\0060\275\261\243\267;B\314K\2751\367\300\274\204\240\020=&\262\303\274\026\356\264;\266\006+\274J2B\275\202\302\372<~\013\372<\225\217\002\275\370\r\373\274\207\204\034=\230\236O\275\322x:=\201\003\177\274\267@+\274\224\377A\275\004\030\314;\213BJ\275\005[\373\274\271S\306\274&\333\025\275\362\017,\275\017\304\247\274\220KD=\322\270\375\274u9\321\274\237c\242\274\010g\036\275\371\231\376\274\221\361\232;\340Y =\236\357\236;\340\020J\274\213\3750=X\341\026\275\324M5=P\312\020\275]T?<S\343\254<\035u\005\275\325_\304<\376\336\021\274\332A\032\274\034\343\006\275F\206\313<\254\250<=\t\313\r\275e/\367;_#\266<\020\016\007\275\202\2248\275\003\361\024=\265\201x\273\250\r*;\3641\247\273@{\215<\226\014:\275\301b\226<\362\006\277\274I\335R\275\215\315\230;J\317\013\275\344\017B=s\372Q\273@\360 \275g\3173\275\222\336R\275\327ug<g\010\026=\370#\347\273\035\246\007\275\177\034\352<\244\367\320:\226\226\020=\252\000\037\274\330\256+=\005\032\000\273\216\226\312\274\202.\217\274\305C\'\275\301C \275\010\357\t\274\360\210\221\274\303@;\275\320\350\006\274\275\333\004=C\304\375<-\212Z<\027M/\273\3752\304<\336\211(=e\274U\275\272\346h;[s#\274Z\037\033;\353\270T=\021/7\275\3166\257<r\013\375<4v1\275\257\200\017\275\002S\274</P%\275=7\014=\0374@=zB\356\274U\272\271<\027\241\267;M\350C=\3032O=\216\372\323<\'\271P=\033\261\"<y\327y<d\265\303<\223\021\352\274\034,\230<@\257)=\035\334\"\275%:+\275\356\r+\275^B+\274\264\335\016=u\206!=0\221\223\273d-h9\240\262<=\007.\r=Ms\362\274F\366J\275K\370h\273\321,;=\322\332\370\274\311o\235:\304l\276<8\355\371<f>&=/\204G\275n\361\227\274\300\327\245\273\2668\222:\222\310\034=\2160\371\273\017\340\010\275\317\314\206<\353\202\217<\255<\360<F&\004=\267#\252;8k9\275T}\250<_\333\036\275L\266\022\275R\214T\274E\3736=\021VK\275\314\007\271\274\026\206\355<X\370;=\325ML=\240MV=\342\'\002=\020T\024=pK\314<\001\271f<\374\367Z\274\364]\000=M\212\034\275\312\032\327\274\031\301\001;)S;\275|\345S\275\025\237\007=\364\246M\272\t\254u<o\010\314\273\230^\317<k\2777=\365\036Q\275\3636\302< _\247<\356\014\354\274E\177\270<\\<\026\275\033\014M\275{\236R\275\266\255\026\275\006\006\257\274\217\216\n\275\253\364\177\274\264\263.\275\206+\'=[\017\254\274\307\224\236<y\016>=\356\225\270<\320\017\330<5\006*=\224(/=\322\016t\273\231s==\357\313\322\274\350\264\363<\215u.=Y\2448=+\327G\275\2105\361\273\230\317\347<T\340\027=\234B\250\274\342\346 =\204\267\"\275O\376\003\275\264\223\300<\373\035)=\0036\357\274\213\270#\275\241QY;K\325B=\255\250\332\2733$\355\274\327\257\267;\216T\004\275\231\3009\275\275\273\t\275\205\326\303\274y\357Q\275\202\271\035\275JL\036\275\355\030\302<Z\2068=j\000\322\274\2525`<\322#<<OW\344<\300nb\273\201w ;9&T\275w\261*\274\363\321\332\273\321\245\260<TbT\275c\377\314<\223\253I\275%\212\352<3\203#;\016\321\324<\204qL=>7L\275\227;&\275T\037\202<\017\314\275<\026\371\203<\270\3725\275\216x\371<0@\212\273ag%=M\001\312\273\227\312k\274E\224\350\274\016\353\267\274\245C8=\204Z\313\274\026`\260\274c\200?=P\222=\275\344\267\311\274\212\276\363<\272]0\275G7\036\275}\226\212\274\336\237G=\243\263K=\340s\312<En\021\275\243\275\001=\312\373\225\274\334gD;*\225\036=\275a\375<@\265\014\275\351\r\004\275\345\316\223<b\257B\275\372\227Q\275\263\332\006;XF\216\274\360\326H=\\YJ=t.\006\275\273@\375\273-\002\017\275}#2\275U%(\275\254-\030\275(\\\025\275\234\307\354<U\'7<\205\215\341;\336N\333\274\013\022\321<\246\346U=\366\207z;\365d\003\275T\360,<\311\372\356:#6\036=U|\025=6\0044=y\312\203:\350\312\232\274\370\236\301<\001\277\302\274q\337\005=\235y&\275\234*\267;PI\\\273\345\317\343<\361\017==\247\023\310\273\343\350\001\275\347\265\306\274\035\375\334\274\364\371\253\274\005\232\036=o&\255\274\213\002c\273\336\302*\2752#(\274\214\256v\272\374F0\274c\213w<* \324\274\311~\207\273B\347\262<\273\336\325<\370b(\273]\210\224;>c8\274\024{\023=\300\241\257<I[\223\274k\016p\271\001\002p\274\316\251Q=d\333\025<\376\224J\275\353\204\304\274j\222\231<,!X\274\316\207&<M\'\036=*\322B<\033\000?=\261\300+\274W!\035=\\\375!\275\361\335\245\274@\350\004\275n\3420\275\204\224\242\2745\321\356\273\247$4\274\036\213O\275\025NB\275\250\333\014=N\213\262\274\316\345\007\275\201_;<\210\226\021=$\305\017=\245R\303\274\036\271\361<bU\343<9_\300<\260T\342<E\003<=\\~\026=+0\246<\227\243R\273;\3424=\366\210\357:\355\222\323\274\013\266\001=\375\236\010<b\333\310<\303\3046=4\216\010\275}y:\275\202\024R<c\375>\275\304\361]<\307\225S=\254\263\032\274\313\036>=O~\036\275\005|\273<YA\315\274:]\024<J\335\006;\0259\220<\347\320\220<\000\000N\274\323\231\252<|\000\033=b\255J\272 \306\227<\205\276O\274\244@;=F ;=3\2306\274\020\353h\274\310\tB=\237\035\372\273\346!\321\274Y\245>:\235C5\275\372l\302<\236\353\362;13\235\274\344\3361=Y5\340<n\205L\275\321g\177<\rQ\237<]+u<\235\322b:\264Zu\274.\242\026=\363\211\201;\n|\004=\331g\021<|_\220\2745G\324\273]\036\013\275\220\272B\275\002\235\376<\254\272\320\274[\026Q=\004\373;=\362r\370<\353\306\n\275\305\353\034\275x\302\244\273HF\273<\223\222\022\273\017~\327<k\221\333<\346I\037=\031\254\350\273A_%\2756xh\273\037\013\301\274R+\004\275jD>=\315\331C\275\334\303?=\314\223A\273B/@=\304\tT<\262gD\275\220\2549<=\247C\274\237\206@=\032\2754<\271\322I\275/\332u<\231\305)=\030g\r\274[FH\274@\3470\275\346[\214;+\363\024<\272\345\037\275\021\273\003:\325\001\350\274\376\225\032\275g:9=\372\003\323<7\020<\275\327q\317\272\313:\237\274\301p\216<{\033\267\274\220\360M\275\227g\302\273\241\334\357\274ZL\007\275T\316\264<\333\330#;\003J\034<#6\341\274\214\300\017\275\301\033\361\273\327\335\365\274\234\n0=\\=V;\362\364!\275c\375\315\274j\203\325\274\220\247\t\274\254\023m\274\337\325\275\274\263\030\037=\375\257\235<\206\327-\275\223I\'\275\233\364\024=L\214\\;\314\205.\275\235\227*\275`\027\345\274?\276N\275,\302\302\273\351\n2=\363\r\016=c7\303<\231\321\315<2p!<K\373A=5x8\274\337\316!=v\026\232\274\270\020/\275\274\030\251<\177\273\235\274\247\007\023\274\362\017\340<\317\027\023=8\177?<$~\035<\027\nL=\307\335M\275\312\300D\274\247\3143<\205\2325=\225n\227<\224A\006\275Z>\032\275\362\332S=Z\220\205\273U\326?=\272\010\226\273r0\020\275\002$\222<\316\241\370\274GeK=\370\221\201\274{[\236<\304\375L\273,4\244<\021\'\342\273\331\361\014\275\016\005$\274*%\027\274}\336\205\273\370p\026\275\266t\321<2V\312<yW\204\274\2221R=s~5\2758\346B\275\276\350\306<\237\376\316\274\367\035\226\274@\3600=u\362\227<\224\034\330;3(L=7\270\010\275W\227\'\274\247\022\177<C!\013\275\271|\314;\313\021\253\274\343\023O={\305\005=j\301\013\275\331\242\205\273\020QN\275\365tV\275b\272+=zrC<[\360\324<<\013S\275\276J==u\003\360<\335\022C\275\273\201U\275\037\t\314\274\315\264\300<E\333\'\275\335\245\307<\232\361\364< \252\376\274\027\371 =\026,\240\273\277^0=\345>\265\274Z[\315<\311\225\010\275=\213\026\275\214a\036;\005V\256<\010\231!\275\362e\202<\371\330e\274\231D\221\273\2279\274\274\224\027\005\274\000;\002\275q\261\003\275g\014\340\274\267\210\333<.\023J=C^V\275i\037a\274\253X4=\351!@\275\332\236B<\rpQ\275\340~\220\274\203\331$\274\334\350N\275\336\272\010=\362\211\374\274\270u9\275\031\026)\274\365\036\250\271\260\247\271\274k\201K=\222F)=\214\205\037=\234F\022\275\005\311\010\275\007%\2339\326\r\252\274\031\021 =I\226R\274\221NT=L\267\013=\022i\037\274\237S\337;\201eA=\'\333&=*<\252<\317Q@\275\252\266\004;\227\370\233<Wd\006\274\346\034\215\274\3055\231<\r\036\314;\2235\234<`\220G\275\027\273\250<r\2253\275\267\322k;\232;D\275{$\237<Y\217\243<\320ge\274\360\335\336<\301\235,\275 \307\277\274^\220\206\274\246\313\221\274\314\177V<a\310K</bO\275\271\242\2769\210\t\232;\303\323\016=\3072\004;\240\2473=X\331\034\275\314\235\020\2753\213\004\275\216\240|<\246\237\032\275\270?\376<\360|\352<\022\034\025;w\303\031<+\2626\275\212W\017=\r\207\353:\3755\305\274d\300P\275N\235\206<\261\336h\274\335\324\002=D|\260\273\306k\017<w\010\021=\267r\246<da =7\315!=\375\237^\274J\307L\275m\245H\275\342\276\004=\355\373\313\274\350\255\2779\005\317O\275\261?\250<\266\351\345\273\3361\335\273\263\244!=\3034\265\274\225E\036=JX\322;\367%\376\273\362\334\361<\365U\366\274\341HB\275\264+m\273\332//<\026\017\006\275\tx\027\275n7W\275\014\360,\2755I5=\333\364V\275\221\2005=\241M\036=\230Q<\275\007\307\321\273D\035\r=\350\331\306\274l\326]\273\262nG=\031\347t<\254H\026=T\355\030\275\212b\261<\212\177!\275\215M5=\217\377z\274^6%\274yX\343<\214\300\r\273\224?$\275\371\022\030=H2\361<\226*\240;\220\004D\275\322$\232\274<\312u<\276\336\365<\014\327\350\274d\353\250<$\236\317<n)D= 1\237\273\312\035\036\272`J\023\275a*\277\274\213\225\237\273\\\272\001=\252U\016\275\365\226\257:\257\017\345<W\243\341<i\026U=f]?\275\324L\035=B\2634=\211\312\n<\361t\335<0\242\016\275\310cT\275\245\323\000:n\361H=J\253A=%D\013=xI\304\272IY\210\2744\016+=\003\231\346\274Ov\036\275\363\306E=\002\342\307\274<\330M=\026\371O\275\036h\027<h\234Q\275\n&\377\274\373\2650\274hC\326<\223\037+<\233z3=\327\313R<I:\007\275\307%\250<\343\340S=6\023O=\273\033<\274\330\335\2509,H\017=\235\375-;5\247\356\274P\336P\275O4*=\315JT=m\374$\275\267G\303\2741\231\347< \224\370<\240\032\263\274\271M?\275\r@\'\275G\371\225<\007\335\334\274\342,\343<\005aq<\331\2049=\254\324\215<\246+M;\340\031L\274\373\360\314\274\342v3=:\317\r=Rd\014\275.{\306<!\000k<k\223\351\274\226r+<\311\276\013\274U\001\360<d\312\245<\342\007\301<n\262\026=\332\3636<\020R\355\274\242\340\242\273\360-$\275Q&\036\275\375\2103=\036\373T\275,\333N\275\205h\257;\204\014\306<\330u\320\274\016\3429=\000\322\271<\252\243\355\274\277\367\025\275\"\013\024:\257\316>=\036\213\003\275o@\240\273\273:J=\035\340\336:\242\036-\275\030yY\273\211\364\033\275\346\214\331<]\367\223\274\364\303==Q>\341\274\225\354;\275\\\372U\274\032\263\026\275\317\3241=\351\305Y\274\334\346m<\344S\010=w\307\016\275\001GC\275uU\t\275s\314\261\274\010&\034=\254]1\275{(\275<\244\376y<vsU\275\010\373\031\275\n\246\312<9\001\006\274\2277\321\274pf9<#\332\035=8\352i\274\310\255\035\275;x\245<\006\"\016\274,\240\232\273#\330\t=\020\3632\275\022\216\306<\3612\252<V\315\021\275\000\365\031\275\214\234\244\274\334]\304<|\303F\275%V\311\274\003E\235<\274\320\237\273k\2049\275\340\372\003=\346#d<\025[\n\273\036<8\275\200\036\371\273=`\265\274\"\356\237<\036H(=\262,<=\266\263\034;\032\3270\275,\254C=\355\224)=\020\241#;\025b9\275\017\026\034<LN4\275\300<\r<7\260\004\275\323c\037\274\322\371\302<\256\223\013<\277\331%\275\007`\2209\226TE=\273\305I<\234\243:=\267C\244<\271\017\027\275uJ\003\274\320-\224<\203\020\027\274M\212\272\274i\341\006=\325s\342<\006\r\3769\333\2070\275\tLI;;\030-\275e\2103<\250a\007\274XE\201<\310v:=\226>\322<.\235>=\"\312+=\341\237\253\2744\314><\022\263,;\3347\245\273\245\277L<\323\340\002=\030\265\023\275rDV=\272H\032=\301P%\272\2661\306\274N=l\274==\217<\350#\006\273\324\275\r\275\030\212\216<(88=\343\226\033<\004\305\320\272\275=\022=z\302\237\274Q\272\323<\307\203\213<s\"\020=\276j\031\275\372\223\000\275\360e\374<\353\353<\273g\247<\274\210\325H\2752\033F\272\301H\325\274\246\353\232<B(\314\271\032\177\021=P\\;<\353\013\355\274\354\006\261;\377*\003=\221\337T=\244\331\'=uC8<\237\035\025\275/m\005=\300gA=r\017\213\274\201\350\370\274z\226\335<\030\307\377\274\rL\036\275<9*=Kx\210\274\322n\202\274\307\351\206\274\352\323\204\274\354\3004=\212\276Q\275\363\254A;\323\335;\275\333\336\030=\320\325\341\274[\251-<EB\310\272\267;\003\274z +\2749\360\033\275\333\262\316<N|\231<!t\245<\250/\037\274A\\\026=\262U<<.\354\004\274\321\324q\273\363\365\035\275\205_T=f\232K=iw4=\001\332\304\274\217\021\010=l$#\274D\205\336\271\026.\305<\205\340<=\037_\222<]\270\021=%\370\367<\223Y\325;H\303\357\273\211\366G\275\316\263\002=\030\324\266\273\005P\241\273@\251\220:y\006\312\274\204\313\254<\277!\273\274,\240\331\273_\306\235<{Q\014=\005Y\227\274\370.\254\274p\034f<yDS=V\361\244<\0341\013\275N\321 =\2610@\275\017\361`;\241Vu<^\351\265\274\350T\016\275\354\231?=\323H\357\273\234v\\<\2458\250<\027\210\361\272\000\3214=\330\2106=\327\331\006=\311\226y<\273\3153\275\303\004(\275\270\034\270\274\370j6=x\034\005=s9D=gJ/=d\346\210\274Pb:\275\030gr;\311z\232\274\332\207\277\274;oE\274f\002\017=\232\333\307\273_\302\375\273h\336n<n\245\314<S\253G\275Z\206\362;\353#D\275\302\236\017=&\371H=*\320\241\274\210\n\212\274\376\"\027\275zb\325\2748\250\025=\337&\377\274]\263\022=F\241\0239\360\327m;\0035-=\263\037\254\274C\346q\273\262?@=1\341 =J\204\365;B\3404\272 \016\226;\360\242<\275\325\222y\274f\332\001\275e\2337\2752\220\212\273m:\231<\262\202E=i\221F\275\250`\336<\"c\320\273\256f\244\274R\324\334\274\002\315==T`\'\275N*K\272\251\317\007\275R\216\224<\306BJ\275N%?=\253\226m;\0167\016\275\210t\374\273\022\241\022=F6O\275\235\274\246\274-\375\005\274\3045\326<\310\3122\275\374e{\274\006v>\275\000\362\321<\367\032\025<S\231\024<H\\A=\252\305\2248\231\212.\275u\t*:\023G,\275\031\217\024\275\231\010\347:Mp\254;\311\336\027\275C\"\303;\202\363\217<}`\023<\356\204+\275\341\0058\274O\2665=\177\356\272\274/QJ=+{W\275\021\205.\275\345?\216\274\333\330\321\274i*\265\274\323\274\033=\316\277\310\274 #M\275\'lL\275Q\2155\275\002\240\317\274\265Q\307\274\222<\005\275g\030,=\t\256\025=\343\267\205\274|\256\036=T\366\331\274\222\327i<\206\324\333;\242*(\275\2011\350\274\244\033\334<\3346Q\274vk\020=!\032\305<\252\204\313\274@\364\236\274Z\361{:\261b\020\275!\247\024\275\265\313V\275%v9=^\360T\275\265\021\317\273\013J=\275\323\001P\275@\2128\275\221\366B\275H[];\023\207\211;K\030\216<\034\'\312\274w[W=\341\212\341\2746.\023=`\001\374\272\350\355S=\3458\266\274\356\343\003=\312\237E=\333\2533\274\264o\371<\250\002+=\205\320|<\311\325J\275;\300 \275\234\001\343\274\006\376@=\'\226\231\274\266 \021\275\354\003\361<\002]\260<\007\212\365\274\343,\335\274V\232b;W\316\'=\305\341\016\273\242\243\037;JV\213\274i\335\374<\274\030R=\351\273O\275\330\230R<\001\320\032=&\3670\275\212=\020\275\007\310\230<\206\3306<\222#\312;\222\030.\275\225\315L\275\022\025\320\273\"5N=\311N\325\274\326\0354=\325\345\034=\205\214\022\274\365t\350;\000,\243<\364e#=z\032\003\275\332\032\r=B\021\314\274\321W\034=}\005:\275\000\323\273;\033\214\211<1\371\237\274\007\326\266<X\317\026=\236I\234<\363x+\275\243\231\326<`3\025\275\226\202\004\274\236\363\252;v\3529=i\031\202<b^\360<[\014\021\275\277\264L\275X2N=\235@I\275\367o\367\274\336\017/<\362\301\242;;G\370\274z\030`<\242\253\323<tk4=\033\252\221\273\334\321\024=I\326/=\002)<=\364\031\241\272\375\033P\274(&\321<\261\375\030\274v@\\\274\0106\010\275\324\224d<K\235\252;R\276\336<\313\004J=\202\220\014=n\037\002\275A\364@=\230h\273\273H\216\371\274I\357Q=\250\016B<\201\316\303<\307\354$=au\022<\037\274<\275Ua=\275\022\010\253\274\245\022\001=ji\252;@}\026\275\262\360!9c\0250<\201\034A\275\005\316\311\274\372\246$\274\250h(=\325dG=,\210\024\275\005\343\325\274\275\202$<z#\020\2758\246\017< \034(\275f<\231<\362\0249\275\t\235G=\225x\267<\203s\035\275\353\225S=a\312\216\274<\276-\275\350v\210<\263\331\223<\2440+\275\220\322@\275\240\300\316:~\300\016=l>&\275\322u\306<\344\206,\275\006,\207\274\'\300\311<K6==\374~(\274\2055\370<\367i\022=;)\025=\236G\374\274\374\371\001\275B\344\340<\2546\262\274\244\023P\275\303\301\371<H\317P=\345\304n\274m\'\000=\256\303\333<\242\376P=\353\234>\274o3(\275\004\036\237\274\305\3765=\224\213\027\275\263t\020\275\307w\025=\201\351O=\036\215\265\274\233\323+==R\002\275:\226(=\352\021\006\275\217\2529\274|{\240\274g.$\275QL\204\274\227TF\275Z\301+\275\376\342\315\274\013\227\376<\0007:=^\2009\275\257\220\270<+\327\341<\232\375\304<u\007\227\274\254}B=G\306\004\275;\200\247<kh6=^L\033=\034*\t=\314W9\274\373~Z\274\r\200c;\033\020I=\247!\340\274\'\023\021\274\2667\306<\1771L=?\261\350;6\257\002\275\313\350\241<p\205:\275\016sD\275\020\252b<\005r\216<\217\3057=bY\374\273f\t==$p\277\274\337\035\254\274z\323\274\274la\334<\231\240\270<\371\373A=\3358K=a\n\251\2746\215F\2755\007\307\274\216\362\017<H\332+=\352\r\005\275\243\217\032=8\2717=\273\304p<\'{\266;\330\361b\2744\243\327;\004\333\255\274xV\013=\246\253T\275\022\372\313\274\244\343\345;G\302`\274\334M ={\014B\274\025\221\321<\337\356\025\275\3424\362<^\343\331\274~S8\275\202\354\261\274\031\353\004=4\371$\275U\350\002<\202\2324\275O\323~;k\344\250\273\362p8\274\3448\207\274\210\004j<T7\310\274\277\245\030=O\353\013\275*\334\237\274\375U\027\274\216\254\347<\263\300\005\275\316\224h<\377\031Z<\224\030F=\t\022\006=\217^V\275\265\260\030=|4\025\275\247\275V=mC\236<\365\r7=\310\260\034=\237L9=2^\342<0\240<=vyU\275\240\271\364<\333\227H\275\306\201\001<^\017\211\271=\006\r\275\035cT\274a\341\022\275\366-6=\241\277/=f\327\360<3\370\000\275\010!7=e\253\023=?\335)=\000E\"\275\322\226\005\275\312\177V\275h2B=V\252K=\226\367#=\235O5=\224<4=\263/z\274\262zC<MA\306\273\027a\014;\367\323-\275\214\274\"=+\206\033=\034\340/=\003(:=+`\207\274\340\0006=^\314?\274j\312B\275\006\227\272\274\245\323\307\274\320\013\317\274\307\"\346\274x\\\336\274\024F\230\274\016\025(\275N\340?=\344\311\337<\030\305\350\274\007\177\247;\01077=a7\013\274\034\301U=Q\344\335\274\237\n\241:\375\372\261<1\005\216<\372\r\347<\373\215?\275\361U\t\275\202\351\223\274\364\251\220<\212h,\275}q\277<\217\311\000\275\265\021\331\274\2666\310\274\002\310\007\274\364\343\371\274\230\321\216<\035y\216\274\3729F\274\327\3452<-\262\026=jB\311<\214<;\275\324\366G\274G\345A\275\353\222e\272F\t&\274}\000B\273\214[k<\256\325M=\352\365\270;I\2600=\350\356\301<mL\307\274\\\330\231\274\224\273\016=\233 \327\273Q\354C\274m\200 \274\202 \302<\270\023\237\273\332\241\036=\334\206\010\275:\271\017=%\304\356\273]\301\034\275\215@\300<\345\3766<\233\364E=\227\335\365;%/\016\275\250\2750\275\301]\226\273\001\231\276\2749\005V\275\222\370\326\274\201\247R=\250VQ=~\023<\275\030:8\275\001g\245\273Da(<\245\345G=a\304\210\274LQ(<\025KO=ch\265<\006\261@=\320\351)\275>>P\275w3)=\020\3162\275\245E==\230\021\236\274\001_\260\274\245Q\325\273\301\237\364\274E*\344<L\337\360\272\\\032e<\203\251\000<\354R\313\271\347O\206\274\3642+\275;\n\250:\356\240\025\275)Q\272\2741\233L\2749\231\262\2749\344\327\274\304`Y<\033\nn\273^@N\275\245\354\001\275\021\360\364<\257K\000=\243a\255\273j\245R\275\027\267\016=/b\227\273\200\345Q=k\024\203\274\360\223R=\273Pe;\021\314\034\273\316\340@=\314\301\022<\256\244\350\274B\351N\275\234\346=\275Q%R\274\360\377\000=\231\'I\275\201\304\236\274\251\254\366<\350\211\003=L\234R=2r\324;\274\230\351;\346\224\371<$\336\n\275\365\321\361;^\245,\2748\204H\275YL\017<->W=A0n<i\205\030<r\231\247;\204\227\003<\250d\253;&!\373<\216\315\322\2744^\355<\352\321\035=\374\034\276:]z\002;y\r\304<\001eP\275\302\2123\275\340\312\026=3I\373<\275\217B<\nJH\275\233\355\350\274\262:\232<D0\246\274\333n\327;\\\300,=OGe<\350\241\334<\323X\304<\247\272\216\273i\020\371<\325\030?=\302\352\037\275Fc\020\275\035\311A=.:\336;hfQ=l\307\254\274`\006\002\274C!%=S\276v\274\tS\257:\336\212J\275nX\341\274C\033\030\275z\333\022=\257\344\000\275v\033\350\274A\346\264\274\245\\E<\372\213\023\275\317t\337<\216O\330<\203f\023<\304\276\036=\027!\251<\251\364\010=\256H\336<\016W@=\377\020\2519,\252\254\274\202R$\274\005\342\037=$\222\273\274s<!=\217\273A=\237\346\327<\253\230N\275\233\006\004=C\020\263;\356GK\274\355\222\306<\255\312F\275H(;=nD\016\275\204&\023\273H\254F\275Y\205\004\275\331\337`<\3178\020\275q\200)=a4\357<\262 \220\272d\nR\275P\342\265\274\"K\253\274\352\245\026=\304\346i<\026\252\265<\347Y(=\223\300\037=\307\352\334\274\260\312\030\275\273\222 \275D\033-\275\361\361\233\274K\211\344\274\274\2017=\034\2048=\257\323!\275l\211*\273Y\353\305\273\371\275\365<\245\342\3539\014{T\274\255\344f<N\026\006\272\256\236F=\367|\333<OP\337\274\330\305J\275m\233\007=U>\277\274\001\2430=\246\'\213\274\356\360\374:\261\311A=\277=K=_\277?\274\310\335\321\274V\300\357<\202o#=9i\002=N\217\262\274\234\032\247\273\212RL=\324 \027\274%\325J\275\337\033\251<\342%\224\274I\345$<\2000<=\345\250L=\216\243\374\274\240\245\006\275\223M\357<(\273+\275\212\177\021\275\374\256\331\274\371V\022\275\274\005\337<\03674=P\352E\275&q\336\274\202\262e<\221\333\253<s\017\200<]Q)\273\n%\007\275\215\"\217\273t\242\372<\246\030\2359XN\261\274\016\214(\274\347x\213\274\232<\030\275\021\370\257;\020\323\310\273\277p\204<S\216\341;\267+\037\275iF\005=\326oN=K\370\025\274\004\273\253\274$V\347<\200\220\216\274c\230)\274}\211\024\274/\350\246\274\240\022`<\203i\341\274 \313\'<\026\023m<\217\314I\275L\014\336<+\026\374;\351\016\311;\034\002\240\274\351\275\013=\257\000\006:\301\007\266\274\235\006\333<\324\244\340:R/\034=b\211\265\274\022O\221\273\250\211\260\273n\321\300<\316\277\302<G;\004\274\260\202\342<\227/L\275\027]\357\274>\362Q<\213\271\315\274\336ZW\275\312\255\201<\341;\270\273\345\375\322<*;\370\274#\351!;!\023\255\274Ov*\274\001\0217<\327\303\214;\243\005\331<\262O\256<!\005\007\275sX\010\274\0161\243:\373\034\330<\202\364K=R*\231<\373\025\310\274\272\023\003\275YK|\274\247_\276\273\337\023\025\275Dg\005\275K\375\223<\302\024Z\27424*=<c#\275\357D:=\255S\317<\260\356L\274#\224\204\272\255\235f<\317s\210<\005z@\275d\346\034<\374j\207;\254qA=+s\247;\275\254\365\274Q\266\252<B\255\257\274\323\372\374<3\207\025\275\036L\360<yI\211<P_W=G4\020\275\302\352\311\274\211\264\033=Av\376\273\245\007\243<\225w\271:\275\032!\275\303M-\275\375\307\221\274-\252T\275\231Y\370\274\303\314)=\242\304<\275p\205\247\274\034\367\021\275\000\271!\273\022\221\025\275\317\211\002=\307kb<\034\013\213;\234\r\210<\000\231>\274g\226\223<\272u\"\275`E*=B\306O\275\357\315=\275^\201\326<\234\302\311<\307g\220\274\217U)\275n*\373<\3732\024<\010Sk\274\252\270\t\267\003\n\227<\3504\t=\330\355\222<#JC\275\001\236\263\274H(\231\274ax$=4A\034=\334j\362\274\343\306\357\273\20582\275\037\314\214<E\200h;\341\215D\275rSG=\326f)\2759\261\343\2748F\303:]\214\023=#\213F\275\"N\006\275\247\356\304\274\303\001P\274\310\231\261\273U\344\326<\025\017^<\201^H=\377\\\230\274\256\254\306;\270H\322\274\007b.=,\237+\275\252\310\374\273L\nV\275\2608\036\274\305i\030\274\016\206\035<\035l<\275\325\200\006\274\217\n\033\275\364XG=3\326*\275\342}\256<\267\0000=M\356\342<\020\\T=\203.M\275\216%K\275\216_\016\274\230\031\267<)\213I\275\347c\372\273\321\305b;\010p\007=\334\r\263<\200\270>\274D\230/\275RHA=a\021:\275\221{\336\274\374h1=\310\274\374\273\373;\361<.\332\204<\271\304\237<\265\014\037\275M\327\024=\203^U\275{n0\275\2768r<\007H\374\274\027\336I\275\222\333\252\274\341\331\314\274\3641P\275\026\226(=\267\267\030\275\375\340L\275bF\267\2748\2175\273`s\327<\212\000\204;\223\247*\275\250\267(=\014\351@\272\365x.\274\326\265C=^\263\267\274\177K\364<\014\034?=m+\222<\004e\363<>\313\223<\334W-=\3161\027\274\210JK\275;\276\n=\216\375\212<\346\377>=A\0302=\345\337\331;m\316\334<u\304\013<\202G\031\274\244v,=CT\264\274%7==\360\352\034\275Z\002\266\274\006wW\275\230\234\234\274qAK\275i.o\273\213\256\255\274\372\374S\275T\335\362<c\250\002=\330\344\230<\334\244\333<\250\365\327\274\352\273\243;=\307\030<\376\341x<L\263\036=\203\262\026\275\233\010\345<`\340\037=\307r+\274\254\026\217\274\000]\361<\377\221\314<\357\3618\2753\250\024=E4\375;\0147\020\275q\206\361\274\301E\274\274\"\310[<\245\242#\275\017(7=ns\021\275\237\250?\274\254qK\275Z\254;\275A\246\246\274\005\306P=\307\346D=\323\'\003\275p\033\242<?l\032\275\007i\364\274+SI\275\242DO=\332\3762\275\323@\306;\260\327\335<\001\231\366<}\251C=\333\240*<\374\320\031\275W\255\372\274\363\244\331<\254\206\256<\033\352F\275\344\332>\275u5,=\365Y\200\274\0148\201\274\362\320\270<X\335\232<\315\334H=\177$\025\275f\234N\274\263\216\013\275\205\313\243<\231,o<3\177\275:\306\361\204;\315C\317<\353\344F\275\342\002\020=g\262\002=a=\356\273\356Ve\274I#)\275F\020\315<\366YE=I\365(\275\272\354\265\274\275\335&\275\314\236\324\273\375]+\275\357v\256\274?\225-=r\360\004;\221aO=vr\013=\260\276\211;LmF\275\244\2506=\t&D<\223\007\243\273/\210\245<`I\230;\347<\223\271\266\250E=\002\373\220<\000\"=\275\014\373\034=m\210$\275\211u\233\274[4\320\274\340)]\274\323&\373\274IVg\274\331\266\325\2742\360b\274\227p\007\275\215z?\275\265\303b<JF=\275\037hP\274(\030\200<\022R\224\274\025\332\362\274\026\320C\275f\037\255;l\235\364<e\214E=\352H\'\275Y`5<\3509g<\236{\324\274\357O\025=\022X\205\274P5\253\274\231\213\004=\2549H<\351\206\356<\326\n\220<\276\276\021=\366\013h\274rI\223\274w\377\002=\370\200\233\274e\010\322\273\030.\'=\321\247\357\274\n \260\274~1\344\274p\274N\275-6\037=Q(\320</\253\006;\210\266\000=P\204\023\274\360\324Q\275\\ox\2744\252!\275 \\\333\274\213\257@<\257\223\270\273(\360(\2758e\301<\364\177\021\275\344E\372<ncN\27528\223<C\242k\274&44=\215!y\274\301\214\371\274\257\276\230<\016\302A\275\376a\217\2741^\266;=w/\274\010\2038=v\355\203<\237?\252\274<\2610<\361d:\275\033\022\020\275!(\255<\357\230\322\274\346\323T\275\353\\\t<\005|4=8Mf<V\231W\275\315\312\306\273=j\026\274\354\320@=\332[I\275B5\202<\032f\277\273\2003(\275\242\030\347<\212\024S=\326\252\032\275e4g;Ap(<\370(\020=d\334\034\274\367\323N\275<\024\377\274\211[\024\275d\324\251\274F\260\322\27313P\274\366\374\254\273x\307\013=\352\032#\275/\373\233\274\255C?=4\345\002\275^\343l<z*\277\274\034\245\336<I\263\001=QP\234<\365\337<\275\266\016<=\336\007\252\274\360\007\340<\013\3208=r\240D=\'a\003<c\346\025\275l\020\351<\002A\373<th\002=\277\275\214<b3\252\271\372\325\304<\204\315\027\275\347\243i<\300\362\234<\312\277!\2755\237\231\274\030h\r=!\316\304\274T?\336\273%\2778=8\375\201<]\325\271<$Ei\274\022\024?<\023 \004\275\221\312\014=\034\206\245:R\010\330<[\010\026\275\363\241\201<DE\037\273\224\005\203;v6\010\275\345\322\033=\324b4\275\342\372\013=t\270\204<uXx<\354\271V<\221/!\275\317\257\'<\0267\376;\021\274\335\273\227N\326\274/\023@;\310\250\360\274\271\\\370;\300\245\033=n\352@=\210\005\205\273\350\206\211<\367\301\310\272}H\241;d\tW\275<K?=6\265\226\274H\3179<\346\3577\273\3765U=\025\206\005<v\331\212<\253}\240<\226RE<\327\356\033=9\356Y;Y?\207\274\276\214D=\227FA<\022FG= \014\023\273\231\203\352<l\005G\273n\243E=\245\2040\275\361\366\003<\310\032\230<\200\n\210\274\371\374\363<8\251\033=3\177\247\274\323\014\"=\345\221\n=\217M\245\272U\210\000\275\232xk<\362\365\003\275{w\017\273\t\376\014\275K\334&=V\360\204<\373\315\341<U\266\345\274\321\017A=\013\364A=\344\2772=f\353\004=\255\002\326\274\366\255\024<\275z\355\274\360\253\222<\300\221\363\273\301\2719\272\2544Q\275\223\212\236\274\210\336\363\274Yu\033=Ki:\275\375\263\035\274\233\347j<\320\375\331\273\2171>=\2149\344<\314\251S\274\220\010\007\274\224j&<H\254\334\274R^c\274.\026\365<\376\002\021\275\2701\020=H\016 \275\335\374\240\274\000\273\030\275\237\323\362\274\236\000\032<i\374\024=\345WK\273\"\307\263<H\371\364\272M\245\253;;\300\367\272s9D=\240\332\215\274\343\005\037<,\361\t\275R\344\375;^\235;=\023MW<\344%\016=\362Z\315\273\037G\347;^\260\320;\257\023;=Jf\224\273\300%\330\274\223I\016\274t>D\275\230\367?\274\366=L\275i\331\373<\342[\001\274\256\004m<>\0322\275\340\256\014=@}|\274\"r\000\274@\363\000\275`\245C\275\303q\342<OO\025\275\325\272\342\274>z\215\274_\263r:\026\266U=L\030q\272\344\377\206<e\224\211;\361a\325\274\311\356\254\273\310\340\353;\270\213\003\275\226\266R<\232JC=\254\334D=\204\340*=\325\367\232\274\361xB\2756\201\252\274\322=#\275\262\212x\274c.\254<t\2104=4w\375\274\327\304\245\274\211\007\177<\337Z)=\277\267\'=\207NN<Vp<\275\323{O\2737\270+\274\254\240\014=\375+\272\274J|&\275\227L\036\275\346iB\275\3649\260;\"\275\314\273\007\343\241\274\363:\354\274!\263(\275\3052#\275=\016\021=:\254\016\275\003\250\236\274[\325 =\331\252T\275\363\302\330\273\3656\225\274T\231\372<\336@\357<\005F\n\275|oT<\214\273\254<\367B\242\274\327\363\307\274\212\336R=B\336\005\275^&\307<\371\034\300<7 \270\273\350t2<\270n\356<\004\036\013=\234\364\026=\313\370\026=\204\001T:D=U\275\246\027\354\274\225\375:\275\323\202\273\2748\250\357;F\266.\275<\217\207<l\214\201\272\314?\003\275c\220E=\021\216\230\274mg\245<\3078\225<#~\265<\2752\013\275/}4=\316\226\351\273A%\355;vU)\274u\313T<1\203z<\217zE\275\305\273%<\325\201\244<*\262=<:\177\320\274\364a\372\274\331\220\224\272;..=d\254 \275\251\240\222<\355*==\2619K<\276\220\321<l\357\022\275\037I\025;\325e4\275$=\030=Z]\303<\365\005\364\274P\221s:fx\035=\321/\003:\254\320G\275\261,\373\274e}0\275\351\032\251\274g_&\275\021\242W\275\366\352\302;\216\245\026\274\362\276G=\275\031L\275\222.\276\2744\216M=\017\004\367<\372\303\201<{E\335\2745\031\250;\241e\327<\344&K\275\357MA\275tB:=/dP=\324\031\000=\376\010\344<\036\257F\275\314M\334\274\352\267\013=E1\300\273;T\253\274\367\245\014<U\0246\274?\014_<4\255@<\342C\037=\036\300\301\273\250\203\364\274\033\332\201\274\021\202\303<,@==i]\373<\214\341\033\275\305\350\244<\234]\002=\305\222\304<\316\244\"=\205\2151=F}(\275\231[\030=\314\344\240<\n0&=\001\255\335<c\322\314<\306j)\274\0101\016=T\276&<\251yK=\020it<pM\375\274=\204A=\323\273T\275\260\207\010<\\09=f\243\007\274R\r\026\275\3447\022=\2217U\275f\336\206\273\240s(\274\300MA=K\177B<\346Z\223\274.z\266<\032r\344\273ol\322\273\357\376\310\274\233\254\335;\322_\272\274\305O==\262\377\241<I\315;\275\206\002D\275\002\2511<\276|:\275\\\370=\275\004y\027\275\331\222\322<\361g.\275\263\343I=\353\006^<\007\234\022\275Jj\351\273\3526\342<\313Z\"\275e(\365<\016l.<\202\010\026=%k\317\274\205\325\220\273\336J\032\275\345X\246<I\3711=\265)\230<\376f\341\274g=\356\274\352\024~<#\313\000<\3101\035\275L\324\351<\223\262N\274_\336\010=\263NX<9\357\037=\335\323\014=\336\010\350<\366\263Y\274\263\270\342\274\225+E=\257\230\307<\333\314E<\001}\021\275*\260\341\273\276\264Q=\235\216/\275\332\321K\274R\247\010=\3225\n\275?\224$\2753\300\035<\225\256/=L\374\374<>s\243\274\325y/=\217\322D\275~-\326;\274\265;\275\276\020\362<\335\3744=\007!\310<dS@\274r\360\221\274\304!y;\023\020\021\275\"\336\244\273\376\202\320<A\246\325;\376w\024=\307\265T=\331>5\275\021\324\213<\234v1\275O\265-\275\301\257\267\274\231;U\2746m\271<\321oJ=\241<\342\274\272\023f\274\312\370\263<\264\204\265:\302\216\240\274-\312J\275\274\0325=x\001\375<)$\322<\303\362\376\274\007\353\001=\310\207\240\274\250\357-\275\230\243\020=3\273\302\274:7\243<z\343N=A\036\024\275\350k\262;F\\\031=\2166}\2745\3650=\236\200\354\273Za\340\273&\231S\274\\\345\027\275\345Y\377\274\333\220\013\275rG\323\274\344\3750\275~\225`\274\332D0=\306\3215\275t\264d\273\207\222F\275\222\210\242;P[J=\262\220#=E\013\200<\361\346\306\274\3731\342;.\003\275\273\017\236\020=\351^R\274\004\302\340\272\275\321}\273\311\216\031:M[\252<\264X\231\274\363\260\267\2734\300\004\275\332\217:<\241UN=\327\221\302<\332OI\275\340M\337<@%$;4zI=P|I\275&\325A=\3326W\275\235\310\016\275N$\264<k\300\263\274\220<\3148\035yP<`j\026=o\262\035=~\002\"<\304#\000=\214\230\222<L\350\034=\335\325\350<\277@\372\273\007f\027\275ix\304:M\n\247\274u\211\323;\220\366q\274r2\035=\016\211\031<\257\340v\273Hk#\275\'\2137=\352\200T\275\216\264\004\275\201#\010\2753+\037=\304\013\"<K$\013\275\201\310-\275\025\2667\275\230w&=\224\005\006=\002\300\r\274\375p\007=\347\342I\275& \007<\301\306\207;\377\277\003\275\r\202D==\221\373<\350\000N\275\201\322\331;\264\0003=Z\205\021\275Aw;\275m\017\231<\333\2626\274\037jh<\345\020\n=\353\305<\275\253\2318;\274\200\243\274k\312 = \014\356\274m\210\013\275\'\247\323;\311\273\331\274\240\272B=\002\3527<f\346O==\'0=\245\"\247<\231\265\342<\274\007K\275\215\341?\275i~\031<\227\000\370<.\371|:\243O\310<.\005B\274\2025 =SzM\275T\324\006=\237i\036\275\261\307\367<\370\rW\274\346{\315<\207\020\210\274\211j!=\026 \025\274\024\303\004\274 3\276<\345c%=\322\356\005=K\334x<\370L\236;[\223:\275^~,=8\367\225<p\234\205\273cU\220\274\240>,\275\017\375\025\275\317\0059=c\373\242\274}\006I\272\350x\033\275\216\354\264\273\247\351\233<\333|\014=Zf6\275\006*]<\034\203<=`j\301:A$\224\274~C\023=\351:@\275%q\035\2743H\222:r$\201\274\323B\362<\346^O=W<\344\274\305V\251\274\244\352\355<8\350\020\275\323\243B\275\361Z/=\313\256\024\275$3\345<\272\022\023;\254\032h\274\023\205\024\274\333\201+\275\241\2543\273\305\335-=\022\354\266\274\233\023+<X\322Q\275\260\243*\275\315\210)=\010H \275\321\034\036=> \'<\376\026%=o\361&\274\367\207P<\327\217\177<\030\342N\274\021\236\207;\207\237\235;7\325\327<\030\274D\273\206\351\006\275,g\272<\343r\t<\252y\207\274\357=\035=\034\331\003=-\223\232<\321w\233<3\300$=\306n\033=X>Q;\023;\262\273h\257\365\273_b9=\210\325\324\273\263o\020=\347\222\032=\306\377\t<\343\000^<\354\300\224\274p^\215\274\340h\372\274\202G}\274\230O\201<\301\341,=.\366\n<WB[<\037Y\366<\235\312@=idS=\255)T\275\205-V\275\222\361Z\272\000*\364<b\372\022=f\362\247<M\232\022=\031\010\030\275\022dQ\275B\032\362<\"\033$=\277R\315<u2\033\275Ui\014\272\010\014i\273D\223\000\275\376\247\353\273K\016(\275X[(\275\254d\307<\357\253\036<\370q\264<\262b%\2754\254.=\020\254\325;qw\007<\t\323i\274<\202\n=\231l\306\272\347\t\223<#_\227\272\016\274\264:S<\372\273\247aN=a\221\001\274\304\177}\273\252;r\274\033\3737<\237\345\211;\327Q\217<\3710$\275}\371\"=-\362>=\025V\325<\366\276\201;\205l\371\273f7a\274_\360%=\177}1\274\035\342\202\273\004\274\024;\005\r$\275\202s\r\274h\263\236\274\033}3=\300n\320;\"\323]\274$n=\275\211\343\025=\023\227\260<\321)\255\272/\345\026=\270\3142=\246\250\344\274\206\216\010=\002\254\307;\227A\362<\315\221\325<XWQ=\n\374\036=j\243|\273a\013\";\25135=\243\262+\275\032H\210\273\347uc;b\312\270\274\361\035H=\372Z\234;\354\354\227\272B\341\036\275\265\r\332\274\310HJ=\354\233T\275\342\224?=\341Y\204\271M\273\252\273\336\302C<o4\023=\204\333T\275\360\277\374\274\304\010V=\263\267\013\275\023\236\307;\254\277\010\275*\364\003<;\017b\274+0J=\215w\301\273\215*b;\355\037)=Zw\351;\315dV<\333\315\"=\313\365\311\274\366?[\274\277\032V\275lP\356\274\026E\334\273\231!\2629^D\021=k\347f9\274\326\010=\373\027\n=\355\r\002\274\343\274\233\274\3559)\275\254\355\273\274\225\230R\275\224j\327<Ga\024=\300\020\335\274@\310N=\205\234O=\020\364\n\274\0130\253;8i\215<\231\032\375;\017_\267\273\0052S=\273R\016\273\222\376\247<\004\351\021<j\344\025\275\322c\342<\277\212k\273Q,\'\275\346\341\020\275\025\210.=\355&\024=M\005\244\274]\227\350:PA@=\0351W<6~\355\274\333\024/=A\305\223<\332N-\275\030\254\262<E\315\370\274KG\350\274+\265\353;\270\256\367;\220F\317<\246\217\202\274#\274\022=T`\024\275\270$\001\275\016\211\021=\242\306\223<&F\344\274>BQ=q*\023=\215t \275\340\241\177<\024\317\t\275X\342\371\274\257\251\031<\272}\030\2748w;\275z\374\267\272=\364 \275\304|L\275\024\354\026\275\013\340%\2752K\002;A\2102\275\373\006L\274\313*\006\275\341\244\331\273\363\224\244\274Ui7\274\353\024\327\273\0220+\275A0\313\273+g\212<5uF\275\016\305\367<\rD\003\275p\374\333:k.\335\274\300\303\235\273\371\375\212\273\013\262o<\231\217\312<.\216\325\2747\221\032<wmF=\207jk<\312/\261<\027\211 \275O\271D=\211\001?=KzE\275\325Q\007=X\203==P\265;=ow\324;|\351\030\273\"\226~\274\220\3211\275\2035\306;\252BI\275\375\033\273\274@\226\360\274\246A\244;\222Ft\274\337\375F<\261\277,=[_\024;\236\036!\274\352\360\367\274\357\203\035\275\241}+=(42\275\212\250V=\223\374\010:t\377\253:\305G\362<\027\250\207\274\rv(=Y\'P\275\006 \242\274R\206J=Aa.\274p\t\031=\263\351/=\274L\262\273\007\310\301<0\272\202;\351\3355\274\240\307\327\274\370\356\315\274G\270&=\246\372&=\313A\024\275\267\247N\274Z\246\336<\306\273\317\273\240*3=\273\333\276\274\241\353\234\274>dG\275\363p\244;(<\241<\316\211x\272\213HW=\344\250\030=.^><k\016\003\275\024Q\212<a^C=\210{\300\273\275q\325\274\312\376E=\031\212?\275A\325\234<\351xZ\274\025\0272\275\203\240?\275\347T\031=\334\366r\274\356U(\275\374\336\215\273\210\201P\275\241\305Z\273\310\232>\2753\031\n\275\326\311@\275\364\030G<\025\325\275<\216\232O=\004\375G<4|?\275[\017\'<\177\305t<(\006o;\354\227?\274Ta\003\275i\n\321\274\262\300Q=\r\333\345<  9\275\007\022T\275\205<\207\274\255`\376\273\303\336\262<\300+\243<\221-H=\013\007S=\r\276&\275\351\226\206\274\233\214\016=a\016R\275:\002\255<\ne0=\254a-\274\373i\314\274\225:J\275\217}R=s.|\274\252\364\211;]a\335\272\342\020e<\257L\003\275=\201J=\247M\242\274lnS\275#\004\337<\201d\342\274\312{\017\275\241+U=Ww\256<\001\t\377\272*@\302\274\372\360\222<\275G@<\320*\035=\362\253Q\275\014J\271\274\251\367\351\274\310d\033\275;\221\264\274\267\203\271\2736\024\250<\252\r\354;[\2211\274\010\221\026\275\303\345\363<\304\222\350<\362\216F\275\005\017\032\274*\301\010\2752|H\275\3545\250<\227\366C\275\274\"\346;1b\246<\302\265\216<9l\342\274J\020\272;\363\331\020;\025\032\311\270{\004\331\273\006\234\373<\352\026\001\275\376\002\273\274\246\374~\273+\272\311\273$\266\255<\254W\020=\245\266\021\275[\004\257\273\352\013\005\274%\270\036\273\356\267.\275w\303\335<EG <&\210\007< \246L=\347\344M={5\034=9\300\223<_\013\225\274\232\227\340;\227%>=\365\272\277\274\315<\013=*\205\030=\217\227\232\274Y\224\320\274\203\266\220\274\253\257`<\026Wv\273\241\n\324<)\2251\274(m\017\275~cH\273C\341\345<#5C\275\255h\001\275?\336\001\274\372\n\034=\202]\013\275\202\3636\274\232\030\374;&]\370\273\340EA\275\017\2315=_4<=,k\376<\377\274\033=e}\360\273\331\330\332;a50=OX\271<\321\310\006\275776\275O\205@=\262Pm\273B\020*=f\002\003\275K>$\275-UW\275\273;!<\260\367M=p\312\360<\316u.=\371\3544\274\230\234\224<\205E7\275\265\365\347<b\246\"\275\352]H\275\314\201K\275\222\213\244\274\3022e\274Z{:\275I.)\275\253)\256\274eu)\275l\211\347<6l)\275\037\363/<Y\211A=\257\354D=\253\300\230<V\322\325<%_\022\275\003\311\372\273\225\272\033\274\211\014k\274\233\347E\275\363\345\245\274{\271\263\274\206\367&\275kp\275\274\031\327\274;\007q0\275|\267J=\357\340\037=\304g\252\273\324\000\326\274\224\366M=W\322\206\273k]\362<\000\330e;q[&\2754\316$\275\0276Q\275$\363.<\303\343J=\373\357\242\274A\227&=\023d\315<\r\264K=\365E2\2743[/\275$o\301\273\344\321#\275 \326:\275,\237\253<\341&\332<\224\325\003=\001\016\341\274)\252\227\2736\242\022\275F\001\256\274\365\362\214\274u#L;^\327\005\275\006\001\000\275\017[\352\2728=\365\274\357\316$\274\223\333w<\327O \275\306fy<\314\313\027=\367\215\316<c\266\010=a/W\275A\3543\275B\026#=\347\355\271<\337)\300\273\370\255\242<^c0\275b\355\031\275u\312O\275vq?=\002\317\334<\311o\215<Y\3324=\r\232D=*\030\217<zdO\275\325\273\034\275U\224@=D1\236\273o\207)<\267`a;\375+P\274\236^\036=\027\313\270\274\264\306\244\273#X\256\274/\nt\272f\335\275;\375\022b:\007\213!=\034Q\224<}7\274\2728W\313\274D\026\035\275Wu\214<\201+B\275\010x\033<\030\373I=\322\214\272\273\233\360<=\273F\020\274\000\364\r<\271\331w<\253z\022=\020\033\371<\352\204J<\272vU\275A\263\235<\']\345\273\316\366K<\363gn<\326o\022=\300J\222\274\324\2414=:O\037=\334S>=\026T\346;v\272&<\324\207\024\274\020\t\265;!\206W<\221\351\216\2743=\240<\016\217 =^\034\211<:\355\257\274_\371\202\274\254T\326\274d\033a\272eJ\037\275\270\036K\275v\3513\275_9\026<\\\316\246;\020\026\355\274\032L2<>\030,=k\210!=\222\023\337\272\312\227\010\275{z\220<\276[Y\274\370z\262<s\034\001<\324\275\245:\375Z\317<S\014\272\274\013]?=:\035\221<\244\025\336<i\245\t<g\232\033\275t\217l\274\032\037\247<\n\225\301:\362D\347<\221(&<\274\203\351<\357\000%=50\025\275\220-\260\274e\327}<\022\2408<L\363\213\274\267\tM\275\266\377\010\275x\001\337<\304\026\356<\313\340\317<\n\221\007<\266\032\342\274\274N\n\275\271f\026\275.\206\301<\021\024k<\370E?\274\336+\221<B\3733=R`\016\275N\314T=~\263\001\275e\'\r\275!\034P\274>\014\267<v\320\017=\227\035\026\275;|\022\275dj\341<\321\022\004<$\005\367<\320\217\305\274\316\355\351<\371\210\370<\201\321B\275\325pj<\326\312\355<\235\033?\2757\n\334<K\3020\275F\006\220\274\375\325\r=jl\326\274\272\247|<aB1=\351!\r<!\273\025=\nr\350<\342\264\001\275\217\032C\275\376/\005\275\330\322\357\274\335\314&\275\263)\000\275\233\023\311\274\220\2317\275\"XB=!/\024=\237\001C=\013N\327;2g\322\273\343\205\235<\332\373=\274\247o;<l\304\237\274Z\326:\275\3768\341<\263\021\336<}\005\372<y\022\222<\001\317\261;\337\313\307<\260\016\'\275\367\013\315<$\314L\275\233\317\313<t\341q\274\346,\013\275@>\202\2745\305\017\275R\224i<\317\3057\275\205D9=Z\005\251\274\264\002\205<\252\325,\270\222\232*\273;\235\007;#\035\300\274\t\247\001<\026\236K\275\\\361\210\274^\027H=\230\366#<SNY<\177\246\341<\003_S=\004?\242<\246\313#=o\"\004=\350:\243;\277B(\275\206\363\025<\310\220\"\275^\273+\275\261\205\027=\003s?\273\353\205\010\275\010\264\032\275\376\024\362<\330\0217\275\225B\216<Z\005J=\022\313C\275\032\353H\275\002\255\034\274X\014\262<\300\037\273\274\322\251\033\2746\264Q=\273f\263:id=;\214\210@\275\326\2323=\326\367\034\275hdP=`V\346\274j\366\344\274\337\214\330\274\t+J=6\237/<3\253\346<\226\231\017=\274,F=I\006/=\375\323\251<\263\212\252<\333\006\364\274\251\355N<\353F!<\013I+\2731\177\264\273\034\276\251\272}\205\327\274(\303\314<r\370+=W\330\362;I\244\004\275\240.\"\273\353\223a\274;\207\025=\220\020\313\274\346\037\355\273\200\016,\275\255\031B\274c\230\337;1u\022\273n\037\313\274\303\305\013=1\t1\275QC\262\274\244]\202;\017fL\274\024\257\332\274b\r\227\274+3\025\275\t1G\275\367*\027\275\r\267E;\256\245@<\000\326\372<\235\374\236<\356\231M\274\320\024j\273\3610$=\1770:\275\312\213\351\2740)2\275\222\000\217\272\2337\370<\\\030\037\275\037\217\332<\271\324\267<\375H\013=^7\036<O\r0<\245\235\212<\035C\037\275\325e\356;J\371;\271>P\010\275\014\3071\275\215\314b<E\005\310\274}Mz\274\365\006v<e\344\302<W\221@;\t)D=\371\253\241;\363\246\327\273\273Y4=\\\315\335\274\037K&=\330\0043<\245\207\365\274\336\353\034\275/\003R=3\026\327\274\031S\343\274\177#\353<^\010\226<?\020\276\273\347\034+;\004D\303\2741\231\374<\000r\020=!\233\204<\321\305\312\274\021I\357<v\300\217\274y\276\023\275\ro\023\275\307N\343<\361\247\025\275\220\024\270<[\360\2659!\273}\274{\261\350\274 \014\013=\205H7<\212/\022=\317\301\025; ,\254\273]\233\006\275:T\337\273\343\303\017=\023z\311<\201\020\365<m\364\303\272~t4<(u\035\275Q9\243;\013\242\271\274\032o\254<\364\200\020\275\244!>=ZD\034\274\336ES<*U\344\274\226\370\370\274>\245.=\346\261E\275\346\273\351\274o\234?\275\2170<\275\204=\377\2744\251\354\274P\270e<\221\236\276<\361\0375<\371FD\275\026\374\207<\251$\326\274d\022C=t\276r\274W;\025=jjQ=1\206V<\001a\'\274\337\226\241\274\340\335?=\350\236\023\275\276\212\373<\255\345\300\274\214\362S<\336\2426=\272\361\'=:w3=#\325\016=p\'Q=\255A\037<\371&?=\326V\"=\227H<<V\223M=\2523G;Dj\207\274\361\354%=a\242\360\273\313D\201\274\212[\000=\036A\026<\n5.=\351cL\275\022\231\"\275\034t\344<}\213\245\274i\224\310<\352\364\374<\301\212Q=M\271\000=\204\252\231<\270\322\004=\312\211<\27530V\275\267\311P\274\220r\271<\350\030\326\274\250\301\035=\210\301N\274\027\027G\272\3206\204\271I\'\350<\233\346\002\275wg\335\274\010\035\231\274u\314H\275=\272?=\214\371*\275\332\2158=\306\217\265<\322mq\274+\246\232<\243$\320;\274\2607<\200M\372<\347\220\021=\"\017*\275\217\271\264\274\037\255\n\275a4\266\274\016c-\273\210{V\275\037\253\001\275\263\267\013=\255$\267\274\000\004%=\363\024@\275\242\234\332\274\0332\013=\330\252\227<\224y\024\275\325\267\235\2742\337S=\206~\372\274\024C\010=!O$=\237\3033=g\364\304<\255\177\'\275\031\314\022\275\347\374-\275\276#G=\030\3518=\354lJ\275#~0\275\272\2729:\304/I\275\026\021\032<T\251\231\273\211\305\016=f\2674\274\237\3267=\361vP\275D\277\373\272\014>\373<\255\2535=\232\211\223\272\350\276\016=gC\271<\213\216)<\217\323>\275,fR\275\024\"\334\274\030\346\321\2741\001G\275\335N\336<\377\373\262\274\013I\215\2740)\033=}\217,=3\262\270\274\262xA<\353\255\334<Q#\027\275\217\217L\275\255j\013<\272/@=%\3655\274s2$\275\373\006M\275\202\355U\275\260\200\330<\177GI=\330\003\271;\007}\316\274m8.<Eo\023;\327rO\274h\342\314<c\356\244\2748\377\035=k\204\324<\245<\n\275g\345(=\036\006\374\274\333\n\251\273\026\"\032\275d\344P\275\207\345.=\224\351-=q\253\314\274\377\342\247\274\031\227T=\244b\006=\017\2722\274\r\271\024=\2711\034=2\"\216<\034\306\260<^p\000\275\017\340O=s*\'\274L\302\330\274\000g\303\273\341GI\275j\272\020\274\336\032\004=\220\177L=j\377U=\332\332\365\274q\255\021\275d>\014\275P9J\274\216\220E\275uC\002\275K\222\204<\216\251\023=v\302S=\341u\002\275\331\276T=\n\223[<\216\035\032=\222\271\226<\036z\013<\241\177\315<\300\373T\272\247Z\246<~\\\200<=\3528\275\3027\036=\215\236\021\275\246\211\334\274\014\255\022\275\177\337#=J\274\276<\264\305+\2746[\366\274\351\367\233;\276\303\314\274K\343)=\264;\221\273\247::<j^ \275sqC<1\2709\275r\277\017\275\326\222\247\274\256\325\272\274A\026\206\2731\270\004=\230L\371;*-6;\317\034\024\275\016\200\322\274*\023\\\274aR\315<9I\010\275\014\266\333<\247i!\274\327N\334\272\312\rN\272\007\034\002=\230\370\315<\263X]\274nk\266;qcg<\244\242\334\274\207\030\002=\374\314N<A\205C=\206\257Y<\037\332\222<\337|\354<\244<\352\273\222\341Q\275\262\304P\275\002\000\256<\312\200\036\275`\014\026\275\366\374\024=f\315`\273\216\023W=\031\037\200;Q+\006\275\250aR\275\260s\271<\254.Y\274~\357\303\272\230E\010\275 u\306\274\340\006H=f\306q<\261\007\216\272\312K?\2758\345\372\274\240\237V=\330\003\210\274\330\032\204\272/t$\275Y|\316\274\276m\032\274\220=\200\274n\327\307\274\376\035\321\274\301\025\274;\205\316\023=\273\366\256<\306\202%\275d\363#=\234s\016\274\211\261\031\275\2059\020:\332\0214=M.V\275aP)=\027\021U=\263}Y\274\"\271)=!\321\200\274\'\331\313\274\333\271\327\274@zS\2750yL=hiH=T\310.\275\006h\212\273\246[O\274*IE\274y\365M=\303\301\033=#\220\313\274\240=%\275[\032s\274.u\333\274xiG\274\237\315\"=\300\026\031\275l\232\377\274\212\3108\275\006;\214\27328\205\273\025\326\221;\255\237U\275Ng:\275\221?\241\274v\354\213\272[\355\t\2750j\016\2755[\343\274\371\205#\274B\326,\275\320U-\275\360]P\275\220\000,\275\360\376\212\274@W\030\274\277\3462\274\343M\023\273\022\264\242\274\022\275\226\274\362\016X<\255\210\217<V\2617=\271\313O\275&\343\014<TZ\022\275\2675\200<>\252\355<\330\034g\274\010e\235<u\033\202\274\233r{<\351\243\260\274\213\347K=\3720L\274\326{a<&\033/\275\247C\314\274\222:,\275\320\020\235\273\314\336.\275~\241\216;\334\013\013<\005\261\307\272y&\236\273:\024\361\273\025+\217;1j\312;{z\004\275\267\356g<b\325\255<\213\325C= \r\315<\303W\377\274\346\303\311<\303\201\036=0\3617=\277I\231\274\256\017\355<\200N\266\273|T\261\274\336\243%=\231\177+=B>\224\273!\007\202\274\350\267=\274+\375?=\235\264\006=\273F\372<)2\037\275\026e-\275\333f\214\273\323\223\002=\027q\026\275\027\031\321<\366\004\253\273\332\344\007<\213[\375\2749mA<m\334c;bPy\272$S?=\007\250\236\274+[\346;i\\\003\275\364F\226<\351+\217\273\217\366L=\247\000F\275C\277>=\005Y\226<a\233\023=\177V\367\274\006\335+\275f\344\361<\n\216\326\274\301\252U=Z\362\t\275\344_\001<\351&J\275c}O=\251\r\t\275j|\303<\211\005\310\274\273\337%\274\334\n\023=\363\333G\275\262D\263\274\363\032\222\274\376\256\244\274\262\366,<\266\016\200\274\310\020\327\274\242\364F<fn\222\274t[\337<\201\340\020\275\271\256\027\275:\2743\275.\275\r=\245\321\037=\341h\377<k\003\276\274v>~\274\007\0013=\316\374\005=\347O\016=\243\321\274;\361\350\005<\304\263$\275\376\337N=\007o\225\274\232\313\030=\006\361\303<\242k\361\274\327\232\253<\235\030\375\273v\244\225<8@\006\275QTN\274\271V\001=\274\030\211\274p\204R\275\231\312\243\273\321\257(=\256o\230\274\306\246>\275\022P\322<\355\001\204<\362\376\212\274\246~!\274\374\006\364\274\\-\275\273\376\261\247<\373\333\007=8\016\327<\300x&\275\005\0232\275;\233\034\274F\232\243;!y+\274q\317\216<\214?\014=\377;S\275\3611\245<[\213U<\225\253\313<Z\032\265<\353F\245<\337#\263<\032\0146=\247\362\217<\217\212S=\377\014\236:\244\333/\275\177qC\275}\332\345:\347\242\024=)\211x9\275D\302\273\206\3309\2752\023\002\275\363\323H=\235\340\327\274\336\260\345\274>kY\274q\374U=7\017\200;F_\250\274\005A+=\201\331\000=\352\253m\274\327\235\310<\306\023k\274\3404\336<j\314\177\274O\374!\274p\273 =J\017\016=\'\306\201<p{\220<T\262\345\274\324n\021<\216\261\020=\226\342:=\350\342\375<b\036\267\274\240\263B=\272H\010\275Pz\241:\246\327#\275\222Q\232\274VF\201<\307?\000=\372\335V=\320\367@\274\254\246\345\272|\325/=\240\220.\275b\256\006\2752!\023\275\036\2045=\257\303(\274\323<D=\276\366.\275\t\0102=\263\001P\275A$/=\247\3744\275\000\223\331<\376\241\005\275\034\326\254\273\356\'\263\274\336q\225<Hi\217\273\252\2177=\2454@\275\210\337\035\275\235k\330<\325\346\336\274\226\307\255\274{\344\340<\247\253Q=\247\327O=r\0277\2759\373\273<T\237\033=\306\276\302<N\366\177\274wU\367\273\203\337\027\275\007\254\315\274\315\014\020\274{pK\274\226\177\325\274\320\207\217<\372\304B\274\023B\023\275<\356\227\274%\350R\274q\036J=\251d\272;\342\251K\275!\024\244\274>\3059\275z\210\242\274\241\372\246\274\275d\250<\307N\375<\367\211\325<\234t,;\373\'p\274M\262\256:\244\331\310\2732\2730=\277\232j\274x\345/<\016\177\260\274\360\302\t\275{\246%=7\372\n\275p\r\022=\332\236\005\275>\203\203<\325\222A=\306\234\034;\300X\226<\367F@\274S\022\264<J\023^<\263V\t=\035d\031=\263J\212;\031H\354<\034*\357\274/\010\025=\006\003\234<\262\006\007\274V>\326\274\333\226\224\274>\022Q\275`#\371<\225\215U\275.\2604\275\374\234(\275\034\re<\325\202\\\274\200OK=\031D\370<\212\337\n=iu?\275|\020\265\274D\240\005<\014@\270\274m:B\275\000\367\200\274/9\212\274\371\361E=}\200\023=\270&\014\275!ID<\366L(\275:\363%=M\376H\275\303=\354<\020\346L\275\270\265\022\275V\337\371<\244\223\265<P\330*;b\3570=\014\323\"=T|?8]\310&\274\222\315T=M\312\014\275\364j\255<P\007\n=\346\013\234\272\252?V\274\322;\237\274\344F\004\275\372\0174<\344D!=\272\030\002=\200\202\236\274\000U\254<U\242\377\274\321\001\036=\317\234*9]i\036\274b\224&\274\332\350\257<\316\206;=gC\023=\213\006\234\274\0030\336\273\024}\027\275x\252<\274\246\326%:\245\354\"<\323\3754=\2417T\274\003z\366<\272\025M\274nG\235<,0\374\274\257IZ\273\371\337\325< *\007\275\334Z\336<%E\236<\236\372*\275\241Y5\275\242\244\020=7\3038=\242*\373\274\206\346\355<$K\021=d|\"\275\037\264\376\274\317N\201\274\365\273S\275j\237)\275c\337\241\274OK6\274\023LS\275~\305|\274\307\375\355\274\223\3652<\310\365\026\275j6,=(4\351<4U\313<\352\222\337<\217d\366:\363y\256<#\220\332\274][\035<=\213\000<\354c\023\275WA!=\223f;=-#\023\275h\220\315<\"\360w<\344C?\275+\023\004\2754\371\240<n\254\357\274\037\203\233<\354\000]<\364K\277\274\227fR\274\326\347\022\275\275F\005\275Kb\344\274\200M\300<\353\260\005=N\003\272\274B,O=\334\370F\2758\362\006=\326[\364\273q,\r\275:\270\003\273X\352\204\274\321\361\211;\213\270\365<\264\320\212\274)c\007\275X\\D\27502&\275s\307\266;.70\275\307qO<\333\303\266\274\\!\371;\305W\212\274\263e\346<6f\316<\016YL=n9\n=r\237\340\272X\357j;\271\032\334<\336\034+\275R\266\267\273K\231V\275\210E>\275?p\247<_\322\274\274i\310\260<IL\301<\3628\302;\020\315\363<\361@~\274\\\250\006=\266`\213\274\201\214\313;\233\347\301\274\302\215H\275a\3424=\017\327\001=\220\362\030=\315\266\034\274\226\367\226\274(Y\355<7\n\034=`\217Z\273\264\245\377<\r1T\274\232\370\303\274P\343*\274\266\230\362;\223\236\034=\036\261\251<\033[u\274e\355V\275\3441U<\343aN=\273\334C<\250\374\240<\314\372\221<\262\223=\274\335\306\013\275\226\222\003\275r\230\017=\252\366 =}\210\217\274v\304<=\320(O=5I5\275EE,\275w\240\r\275`G2\274s\204\016\2749\232*\275Q\271\034\275\005\214\274\274RM\006\274\375tO\275\034s\r\274,)P\275\nIN\275\177\203\033\275\216\347\265\273]S$\275D\2466\275r\316\032\275\2569t\271\305\300<\275\256\337P\275Z*R\274\236\265\240\274\262\306\007\275"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2160
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2160
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
