node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2040
          }
        }
        tensor_content: "P\202\277\274>1\275<\247I7\273\221\024\351\274\326\364g<\331+\266;\251\277!\274\027\275W\275\3726\t\2755\036\027=\375\234\371<5\364\r\275\341v3=\342\000>\275\340\240\'=\030\343#\274o\035\020=\253])=\231m5\275\336\3530\275\2228Y\275Y\037L=\232\373B=\"K\230\274Q\343\001\2759\202*\275\277p\023=\213\377\245<\364\316\320<\r\203 <)q\271\274\236P\013<8\214\212<\016\0148=3\216\332\274`\362\031\275z\362^;\365I\377\274H\254\322<PL\032\275\362\357\014\274\017\223-\275K\333\021=U\r\007\275J\371\035\274\211g0\275\330\312\315\273\010\211\022=M\276Z=\314|*=:]?\274(\237\351:)\205\035=\335\357R=\001%=\275\251_\302\274\263\033\006\274\352z;\2756\006A=\270\006\344\274m\354\013\275\235\236\235\274\212\237\257\274\246\022\306<F\347\022\275k\370\371<b\360\013\275h\3267\275\033\327\2609d\336\247\274\275\256\'\274\317\300I=\344\326\007\275\300\232\251\274\\F\206\274\034q!=\352#\013\275\316\324\025=\221X\363\274\2466\013=O\317\224\272\216\360F=\202&]\275\247\274\004=\273SO\273\372\\I\275\nV\363<.\231v\274\037\333\240\274B\367~\2740f\035\273\226I\243<\235\236Z=\354\235\325\274\312E\000=\013\274\033\275\026!\'\275\273$\236\274\317\263\017\275iv\375\274\234\276\332\274\036\205E\2744\342\351\273\351\202Y\274\374\350\316;\n\317\275\273\374\252B=\272\350\014<\234<(=\255\330?=A\353\023\275\315\374<=\317J*\275$]$\275\007\315%=w\214\326\274\326r\233\274\240YZ\274)\036Y=\335\232\357<&h[<2kO\274\372bP=i)\234<\371\223\033\275a\335\357<\350\255P\274\221\327\017=\274V\274;\350-\006\274A\352!<\371\244Y=\336\030s<\372\237;=\301\274[=0\2749=l\205\204:Q\373\325;Lv\346\274\317\331 \275?\234a<\356\313\223<\345h\275<F\353\320<Q\270=\274\241\237\366<@o\301\274a>\006=I\243E\275)\2509=!\\M<KR,\275\247\243J\274\034\027\351<\232f\261\274F\320\236\274H\326\001\275U\3723\274A\"\017\275_\027\004<\035\034\300;P\232\277\274N=\217<)Z\260<\t\030\206\273H\002\\<5P#\275O\231\356\274\277\253\000\275%\320.=>[\\<\371\320m:@`V\273\037\021\006=\316\003\030=/X`<\002c\273\274\036\310\r=\r\330\014\273(\333u<,[1=qG\365\273\236l\335\274\243\310\376\274\271\234\263;\375\364\r\274g\274\002=\227|9\274Nb;=\2455\007\274\336\252K\275\027\320V\2746\370\200<!\030m;\233Bq<\010\344\304<\200\035-=\333\256\211<\367\333v<\n\270\324\274\021L<<\205\230\021\274\310\2545\275h\357\250\274G\203.\275V\323\005\275\236!\205<I\266\016\275\217\371Z\272\241K\363;\336\217M=\331>\371<\320\244\032=\232z#\2751^<=\335\302\344<\256\253\231<\362\2614\275\313\264\026=\206\340`\274@\205\014=-\216\340;\033R\034\274\341J\026\275W\226u\273\322\335}\273\017\243n\274\r\245\025=\264KF=\3144\317<\342\010\235\274\377F-\275d[\032<\270\254\035\275\304\214@<T<.\275\273;/\274z\224O\275\235}\345<\235{\005\275\331\013?=f$G<L\353\333\274\226\267\005\2751\025B\275\200\366D:\034\257\320\274:\2000\275\373#1\275\345\352T=\324f\035=\240\352\005=\255\003]=\005\014\246\273\217\023K\2757\037\032<\367\033\003\275\271\2578\275\257\036\360\274\366\225\255\274\205D\232\2733\1779=\231\213\204<\331\000\t=\327\315U\2759\037K=av\307<\367\r\034=\317`G=\352\035\031\275\274\300\036<\024\321\034<\205dY=voF=\267\353\207<5\315\240<]\204\016=0\323(\275\304\327\376<2\302\016=@|\227\274\342\363\302<)\2267\275\347D\004\274\0139\363<`}9\275c,\021\275\305xE<L\2270;;\372\346<~\276^;\224U\237<p\200h<\237<Q=\327\3449\275\251%\330\272\327\231B\274c\371\\\275\360\221\007<\310\232\355;\202\205::\243\343@=%(\365:\315\020\333\273\365i[\275Q6\007\275K6\022;\037\025\016=\3653\324<q\000\037\275\0227\316\274A-=\274\0254\251\272f\006D\275\320*\253\274\303\264F=\347lX=\'\257 \275m;\031\275\304A\305\274G2\037=\206\211I<\270x\227<\313\345*=\363iP\275\214P-=\303\3717\275\372]\211\274DK\342\274}\204G<azU\274Z-\"\274\253\240F=\rH\347;\026.\334;\023\026W=\245\325K\275\311\264\247<\003\274\016\274}w\311\274\27701<\211.\237<p-\022;\2126\r=\312\216)\275\351+\225;Qc\277\273\274(*\2758\333\254:^\352*<)\246\000=\353\034\006\275[\273\216\274\003iR\275\371\302f\273\300}6=\244\263\313\274J8\377\274I\3206\275Z\017$\274wo\204<\236&j;\211\307\370\274h\372\240<\375\275x\274\005\026-=\370J\236\274\220\324\301\274\n\203M\275\201}\206<\232GS<v\366\031<\343s>\275\326g\222\274\273)\027=\001p\027=\246G9\275\350\355\004\274\'Fw;\3247\032=\362]\003<\377\345(=\034\016\025=\234\354!=\330\331\333\274&\004\273;\207\233\002<\366G\\<\253\350\026=\002\230\026<b@B;\316>\020\2756k\352\272\202\032 \2756G-\2748\250\347<m\n\356\274\264\325\033=\322\233><\021)\241\273\002\275/\275\2628\232\274\016\312*<\267\363\241<|hR\273\306R\220\274\324\275+\275\277\032\231\274F\342\000\275\342J\306<\222\361\337\273\313\251p<f\227\271\274O\306\361\274\274\3537<D\344\002=Y\273\370<\256\277\013\275@\314\334<\374\010\324\274j\037#<w\360q\274\036\304\255<\356\251\350<\036\r\262<}\307\t\275\320t,<\275\374\027<b\366\353<\23743=\260\340\343\274\356\200;=\255\322\207\273>\214E\274\304\273-<\204-[9ZR\217\273\245\243-=\300\312\037\275O\225!=\204\007(<MUV\275=\214\343\274d\252#\274Q\244\026<Jg\'=\2233\245\274\331{\241<\315\270\025=f?E=YK\335\274\035\2559\275QK\304;GoA\275v\226\341<\210\356R=\266\263J\275l\3324\274\310\277\361;(\205Y=\245\325\215\274\017\3356\274c\0058=\212\035C\273\2441\026\275\232\310\203\274G#+\2754\247\010\2759<\274<\321\344R\275\276\330\257<c\333\243\274\377\372\304\272\254\370G<kD\033\275\025\344-=A\333 \275\375\300\276<G-Z=\200\037?\275\231\317\204;\255\245\214<\003v\333;$\nz<\361\027\347\274\003\356\361\273\215,D=\3117\330<\024\374\027=\222\231I=\250-\377\274\217\253\364<g\356\342<\272#$\275\246\210\370\273f\n\363<\364\3619=\037\357\305\274l\221\027=\301\371\000\274\341>\203\274\004\027Y\275\355\310\356\274\247\347\032\275\010b4\275DK\017\275\377\312\007=\225\271\344<\246\020\304\274B\221\250\273\353-\303<G\275\231<~\321\366\273\346\342\034\275\232@\001\274~\316*=\035^<\275\321\243\005=\257\330\234\2748\337\r=\272F)={\323\262\274\346\0167\274\263\257#\275\017\375K\274\257\260==\256\204T=\344\\\205<l\036\r\275\005d\322\274\327\210#\275\3130\307:e\034B=\004qG\275\030]\327<\300\345\200\274\272\264!<\231\356[=\214\240\026\275\003v.=N\257\n=\323.x;\274\316\032=\334\343\223\274T\000\273\273\274\272\000=<9\312\274\240.\002=\0161\016<W\234@\275/L=\275tS\227<}\243\023\275\252\204Q=\027E-=\256{\256;Z\334\010\274\334B\355\274\036\277\005=$\347\350<&\200\3749r\0315\275\347\374[\275\255\341\351<\005\003\224\274\252\3735=\003\337\r\274\275\243%\275\017\233\323\274!\366\323\273\177\354\364<\002%>=p%\002=\025M\251\274/\206&\275\215\304\227\274B\313\357<\000F4\275\020;:\275H\207X\275\372\325p\274\312\217N<\237b\302<\214\2270=\240J\031\274bN\004=\362\3276\275\013s\241\274\363\321G=\323\2765\274|\010\263\272\206o\032=\355\371\033<\373o\372\274\222\342~<\254\214F\272\215\031\343<\374\367\252\274~Z\234\274W\017\335\273\341N \275z\031C=o\023S=7hN\275J}\037=R\0255=w\310\020=Y\377\345;\356:\231<\246\323\237;\376/N=NX\304<\212F\\=\227\202\331\274JZ>\275?z]=!\377\017\275n\216?\275\2143\256\274ev\205;\336\205E\274\300\242\276\274\t\343\007\274e{^\273b\025 <\275g\033\275\361\035k;\\\252\353\274\224\257%\275\2329\013=\303d\376<\2539\234\274\353\337I<\366\335S=\311k\032=we\305\274\214\363+=a\211\300\274 \211\021\274>\020\310\274Y\213\006=\204\t\211\273\224\364\227\274\204\214\306\274\363\246\314;\324w?\275Y\316\321\2749\352\024=\264E\233;\306S\010<\031\322\261\274\016oQ\275\232!_\273i&V\275*\335\036\274q7N=\t\257]=\346\326\036=\360\371<\275\010\323$=\314e\004\275\246\316S\275\321P\005\275{\320\206\271\205\265\355;6VO=\221b\\=+H\301<\003\241\354\274\020\330X\273\321\224\016\275YV\n\275Y\373-\275\210\234\255<\010\177\020=\305\333)\275\364e\034\275\303\004 \275)l\275<t\215\021=\016\355\r\274\226dZ\275\244e\352\274\222\356I=Q\275\035\275Y\254\273\273-A\316<\244\370\226\273\244\255Y\275C\325C\275\347v\\<\264\3172<B\3178=\252\260\266\274\227E\377<\363\332\277\2736r\205;\244\245$<\332`U<\345\363\201\273\022\230B\274\207\324\302:\252\255;\275!\257\310<\373\306\'\274F\236\375<\234\233*\275\340*+\275\004\320j\274\'t#\275:\364\241<\310x8\275\316\357_<\004F\373<S\325==F\337]<\265\344(=\327N*=\333/\272<\235\033\303<\334rV\275\223~\374\274W\277\323\274-\270H=#\'\270\274vr0\275QP\212\274;\240\033\275qQ#\275B\016\270\273\034J\004\275i\360\220<U\332\352<\206\r?\274\262j\021=\246E\222\274\376\254\314\274\326K\276\274\361\267);a\340\026\275Lo\301<|X\257\274\007\314\273<\376\203\022=YN\013\273-a\364;\001\336A=\330o*\275|\230\325\274v\340\340<de9\275\037\320\203<\340ja<\267>\326<AA\214\274\203S\212\274\014A\014\275k`\340<\365,\255\273n\354:\273\307\024H\275\376\277\035<\362\207):\257\"\207\274WJ\313<n\3629\274^\257M\275\265\362&\275h\323\220\273\312W\340;\037\\Q=\265sU\275\014\236o\274\277\026R=\355\236\360\274}^\234\274\270\206\365<Q\226E=\274\014\\\275\356\302\021\275\370 \236<\255iJ=\n\033\276<\315\254\233<q\334\207;\273}\033=\224qK\274\361\201A<-\340\016=\272Z\006=\331\177.\274\r<\257<\277JD\275\247}\\\275b\004.=\224JR=\322|\021\275,g\362<.\335\027=\275\204&\274_\314\304<\277\375S=,\025d<\310\302\213\272\331\223B\275\004\221\245<\010\007A\275P\320e\274\300U\332\274\240\312\200<^0\323\274\276\2252\274\377\367\231<\375\323?<!\244\016=\376>$=kD\2529\037$\375<VZ\247\274\t\265\006;\021\035\035\275\301\016?\275\351\020\253<\306\005\355<fNJ=Sl\201\274\311\2054\275\236#E==\241p;(\324\261<\252O6\275\225\014\261\2743\272\345\274\301\277T=\244XO\275P+\224;\343\013\n\275\315\205\376:\260H0;\222V%\275LY\307<@q:\274\002\372(\275\262\300A\275]SM=\"\222J\275\311mE\274\200\257\306;\'=\360\274\330\177\204<\320h[=\226*\276<\264\230Y=\373t\023=l\324\n<p:V=\314\304\363<\t0\023=:B!\275\235Y?=\304\226\253<#\3142=Z\t\264<\r\316\311\274V\313\014;\350\034K\275e\246=\275\322d\253\274\242\373B\274]EH=\307\023S\275|\016\300<\253\256#<\317\217\206\273\272?\262<\234Z\362<4,B\275R8A\275\0163\034=Z\245I\275\242J\035=\n\235:<\204\351\354<\273[4\275\377\233\246<\305\216]=pJ\321<\352\237\361<\371\177\235\273\260W\013=\233\203\025=^\267\324\272\335?+;\215\275\225\274Q\245\013<\017\306L=\233\353>\275+*:=\254n%\275\346\235\235\274\037\033<<\320\230R\275\353\0148\275\256\253Q\275\007\025$\275\336\222\014\275\242\242\037=\203E%\275\005~4\275B\017\036\275H\342\336\274\2754Z=\316\016\022\275(y\323<\320\307\037\275\214y\026=.PB\275d\320\374\274F\217\372\274\217\006\347<\204\200\374\274\357\2466\274\236\235\006=\031_\036=Gs\342<~\2417=\200\214\220<\210\2205\275Eg4=\036q[\275t\253Y\275M\213R=\315\223\037\275c\303\313\274\336\355b<\177\366\275<\314\377Q=\031U\257<\334\212C=\r\200-\275\347\025v<\234b\365<\324\361\033<\263<\322<m\035\031=)\035d\273r\352\233<z\304(=.\260L\275P\212\225\273\342<\342<M\206\025\275\262\355\006\275\260G%\274\223(X\275\222\344\367\274P\030\330<\356\303\016\274\372Py<\034\241\261<\326*y\274\232\201\256\274\267q\r=\254\301\326<\346s\010\275\215V\337\274\313gO<\211\324\026\275\346\301\277\274\r\266\027<\367R\262<]N\213\274k\3743=\333\221;\275\252u\314\273?\347== \023\244<\226\021\215<\201zT=\200}0=\200\016\035=\005\325\010<\351S\031\275\344\'v<\360\3221=\1774<\275\350\266\326;\374M-\275\037l\273<1\234\';\346\302\237\274\224D$<0\325\023\275\221\\Z;\023\177K<+t\376\274\202\336(=e\244L=r\203h<\323\231X\275L|\031:\n\304%;\332\n\350<\234b\217;SR\370</M\252\272z_\344\274\222\362\n=\267T\022\275\246\322%<\255\300\327\273\241-!=\374\202*\275B\345A\275S\200\373<\376\263+\275\341(\352\274\216\231\000={\020\t=p\253-=\006\217Z\274KgY=\275/\200<\t\361\301<@\305\312<\r.\223<\243 ?=\325\337/=\007\335\010=o\277y\272(\302\340<\010\335\177<\310\376K<h\300\316\272\242\215[\275T#-\275}\230(\275\271\344\013=\030w\344<\254\346G\275\264mY=\006\031\371\274Y\241W\275\336\311\010=\371PC=!v\362<\240d2\275\326\223b<\245\367\002\274\r.&=\256X1=\206X\265\272\324p\266\274s5\260\274\373\234\226<\314\320N\275\342+8=\231\022 \275\223\257&\2758\203l\271\225\367B\275\032!\033=\251X3\275\372\203\\=l\263T=\334\362\020=\225\316\320\274E\224H;\275\241L\275\27419<\232\0378\275\372\007!=\256\024\037\275\210\314\001=\314=/=\034&\025\275DX\004\275\321\000\364\274\263X\342\274\366m\035\274?\266U=\264\207\037=\364\304\037=\227\363\330<\361>B\275\247T!=\244\315\307<&,(<\333\300P\274\032\230>\275\311s\025=\252TH\275\275\2416=\346r\320<\027g\307\273\016g]\275\334h\300<?\316(=\315\023\204<\367D:=\036\270t\274<\010\271\274\2222\305\274\206\2464\275\363\033\005=F\025\267\274\025\231h\274\021\336\n=\363\2255\275z\035\346;~~\005\275\256\317\022<m\270\327;\237\2624\274\262\203h<\242\327\352\274\n\037\242;s\3533=\333~W\275\253\215\036=2\\\010\275\200\337\'=1_\310\273\335\212A=\017\327\367<\250%~<Z0Z<\023(4<\325[^<\234\301g<\024\204R\275\355\363\034=\035\364\317<\222B\336<\3073L\275>|\266;\335&\000\275\306\357@\2749\233\360\273/\270\333\274^\213\352\274\363@\375<\243J+\274\326\037\025=\\\212\274\274\233\364X=\320\2215\274\004\313/<N\370\300\274\205\016\255\274\320\253B=\002\233\010=\217\320\276<\262\347+=5\206C\275\260\366\253<\231p8=\026E\325<\305\324\020\275\3607C\275u\263\201<\n\342\303<Rt\355\274\3128J\273\276\0271\275\275\330\374\274\310\345\007=\313\343\n=-\235(\275\325\237\306\274>w\265<\322\230\031\275P\3644=\204\016\252\274h\276\023\275\375t\356<\247\372Z\273\007\206)\275\332\362\310;\262\257\027\274\027\343\271\274\364\345h\274\267\025\226\273\241\205\025\274\333\277\253\274\334Z\034=Vj|\273D\010\\=\302\375\031\275\327VO=\257\315\234\274\036\177\377\274\267M+\275\n\226\233\274>\2033=\343!t;\3032\234<\213\342\014=<\213\350;\026Y\221\274\005\331\037\275;\247V=\235\333H\275\253\341G=\275\210\002\275\307\371Y\275A\231\245\274\216\342G<o\232\017=@\217\271\274-B-=H\030/=E\021.\274\317\345\226\274\273\2012=\ri\252<\023\233\024<\3278M=\234j\000\274\346\177\360\273\210\274x\273\206\373\232<\225\2179\275\375\203-=\340\246\007<\245\315\223\273\376\305\214;\260\311\227\271\206\0318</N\347;?\2532\275\262w\302\274y\350(<\022\017\001\275\311\223\227;{a\272\274\200\'\240<\244\rH=(9U\275<\366%=\242\260;=H\021[\274T\376\270\274G\000\210<\031EH=s\222\014\274\321\325A\273K\363I=E2\331\274\025\345\367;\256\372\342;\207\"\204\274n\360\032=W\312%=\336?9\275\014\t\033=\246S\007=\0014\312\274C\313\202<\361\346\344<T\247V=\334\226\003\275\242X(\275\244\233Y=\023\277\303\273\336\240E=\003>\225\274:\216\001<c.I\275\004DX\274\236\"Z\274\361\224\261<R\223\001<\243:\376\2749J\022=@=$\274s\356\214\271d\320\357\274\221\261\274<\226\357\010=v\376\221<\006\207?\275\'Ma\274\314L#=\204\355\242;\342\221\273<}5\014\275Um\013=\301q)\275\3304\032\275\220\356#\275\310\241W<\326\026#\275\323\335\020=\327$\341\272|\320\010\275\357\271J<\363\000\220\273/1w<B*>\275\\3\224\274]E\266<\234~\220\273\321\255z<*\037H<\266A@\275@vX= \323\371\274\2106$\275^\245p<<\373.\275\215zE\275M>\021<L\225\020\275\212\030;\275\032\213\324;\373\240\370\273\344\222\005\275\033OG\275\003\300G\274\264\230[\275\205\023\211\274Pw@<]T%:\360\331\303;i\227?\2753\'T\275\"Sb\274J0G=(\355\003=\316j\311\273\017\337\006\275\237\345\004=\203\252\002=\346\213\277\274\361g\362\274\3346\221<\357\030X\275\370\2629\275`9\032\275\247\2320\275\354\203R=\214\r\236\274\246\367\013\275J\252\\\275\3311\n=\206\3714\275\3734N=\3649Q<R\354\362\274@\017\r\274g\332\010\275\373\240\220\274\320\233\026=\322\265\345<\250\2363=\317Yv\274\001\312\274\274\206\302M=\366kM\275\004\252\013=\022\000\003<(c\'\2752\373n<O9C;\352G\320\272M\203\"\274\341bb<Ya6<`vW\275/,A<\327r\274\274\277Z\n\275\246\206&=\202\357#=\007-\332\274\016\035(\275p\216\014\275\240\037<=\016\310\364\274x?\035\274\227\036\022=:n\365\274\201M\200<\305/W=\364\374\217\273\356\263D\273\036\231\217\274\363$\242;c\330\254\273\351\003S\275\320\243\331\274W\004?\274d\247\305<\331s\225<\277\030\236<\276\274\033<\017\214\006=\312\2563=\360\327\002<\325#F=( F=\267\210\004\274d\222\250;N\233\027=G\311<<j\267\336;(\334\027=G\315>=^c\326\274\036\272R<Hk\327<\256\261\366<\304\236\034=\307m\006\275Z;_<\365#/=\274A\331\274{Z\017\275\022\340J<\332\226A=5\264\013=\277\244\004=\025\313[=\\\357\020\274\037\334?\275A\302S\275\353\362\252<m<V\275g\316P<F\307\003\275\030k{\274\2556Q=:\001\303<N?`<{\013\246<`\202\336\274\'5@\275Z\275\321\274 o\257<l\270F=\255b[;\233\036\030\274\3174\t\275A\t\234<.\376\301\274\377\274#=\375~\374\274P\350\226<g\373\310\274[#`\2745\337F\275\370\266\314\274\204\276)\274L\247\004=v\252\244<\225x\306\273\330x\244\273\361\271\231\274>H\n\275\316ZB=\327KE\2752i\362\273\215\205#\275Yk\250;\227\253]\275Z\326\333<\312\243J\275\324\222\014<?\344)=\334c\202</n\242\274\276\350#=\022<\222\274\361\272(\275$\316\037=A7\r=\325\276S<\3565+\275\374>M\274\330\336\r=wv\311<\032U\"=$q\265\274\236\2274=\020lH=\013\331\034=\3637\032\275\302\205A\2758\372R=0t\211\273\2037N\275|\311\242\274F\250\245<\025H\236\274\363jO=\324\201c\274y\212\255\274g\367\343<\326\305\215\274L!\336\274C\316\323<\350\327\007\275i^ =\022\222>=8~\207<h8\315\273\370\013\263<F\242\267;\177\301N=3\213\036=\320\013\200\273H|\337<\335\336f\274z\276(\275\330\235\364\274{m\262\273\324{\2069SE\213;\376g\252<C\034\r<\366C\000\275o\236y\274\023C\313\274\214V(=4D\255<\353@)\275v^,\275$?\031=\313\315\276\274\r\241\034<P_2=\035\004y\274j\237V=\'\334\242\273\372\3004==B\020\275\'\337\207<\335~\002\275\"Y\'\275\276\205[\275\274\310j\274M\000\325<1\361\251\274Z\362\207<\306*\205\274W\204\321<k-\275\274.?;;T\360|<\0275_<\252\363\031:U\312Q=BN\013\275\365\300\273\274jl\213\273yA\310\274+\263\273\274\003\241\037\275\306\217#\274\310\2132\275\267\271\036\275X6\274\274\014l]\275\036[\220<;v\031=o\361$\274\364\343\305\274\034/\r=\021\030\362\274\372h\332<\036\200D=\0014}\274\236\005\026\274`\317P=-\220T\274+\305\363<\371\nu<\230\200\270<\357\001\006\275\276\303\220\273\314^\004\275\304i\373\274\232F\213\272[\217B=\274r\211<\013\303e\274\226o\253<\333:V\275\031>\204\274\"\241W=\325>\214\274@H\344\274\331\217+\275\317\233{\273\260\'\016\275\rA\355<.\317\"=\240\305\006=\'b\017=\367\361\367<\034/\034<\001\2705\275nC\034<@\003\215\274\243\303,\275!\t<\275S\024\251\274\237\nY\275\231*G\275\033cP<{0\346\273\271\317\003\272J\333\245<z\324\003\275E\242Y=u@+<Rj\033<{\345g<\034%!=8wy<\0269\372<zS\325\273ll\345<\374\231\266\273\370/;<\337\266\216<\300\341\377\274\002\237>=\200\353s<\303Z\274<\222\010K\274\377B\002\275!\312,=|Y\344<\330`\366<\000\256\212\274sG\243\274\337\245\235<\007\037\2068\353\357\014\275\021\002\'\275\031\037%\275\007\350\274<\204\335Y=2\272*\274\235\357)\273\253\021d\274\014!\212\274\263G\224\274\'Lo\274\360\331k<8\2711\273\214\336\336<\321\322\017<<ZJ\274\014\365\032=|\262F;\350\212\345\274w\314>\275X\027I=\003%\227\274\366N\253\274\274\360\016=\315\250c\274\rW6=\031\022X\275\313\337\205<\246\273r<N\274D<MV8\275\037\354\254\273\246\333\365<d\324\232<g\321\244<\010I$\275q\021y\274d\357\n;\2369\232\273\343\332\010=\267\037\234<\2730\334\274\240\231L=\222\340\313\274\335\\\"\275\002D\'<6e7\275\372DQ\275\002\255J\275\327P\274<u\377\331<\023\362P\275\004!\005\275?\216\035\275[ZE\275\261\340\032=N2T\274\342r)\273\242\211\337\274\\Cc\2733x =$\016\000\274\221\013\321\274\215\374\305\274\025\010\310\274U\346F=\263\272\027\275\007\240e<\001M,\273\326\003\032=\241\214\257\274&\335\025\274\201\256%\275\354~%\275\033\220\202\274\014\247b\273\014\021\034\275\017~\257\274\341\006G:\251\2611\274\317\361\024\275\214\347\216\274#\334\350\274!\265%\275\243D\255\273/\306\374\272&\305b<@|\217<\326o\336\274l67=\304|M=\222\0013\275R++=J\376+=\010\266P=\363\237\016\275\341>A\275\r\243s\274\377\304\220<\365\262\372<\231\361\034=\214s\260<\031WA<\216\330F\273\r\212\037=LN\264\274\364\002\363\274\301\377\264\274\211\262\031=FA;=\351\352.=\016\376Y\274e\2575\275\226\231?\274\361N8\274uTX=\002qY<\037\233p\274X%\022\274\267\214?=\001\230\267;\031\344>\273A\324\340<\r}\334<B\305h\273\035\307W9\362RZ\2741\236N=\001\307\031=\216\375B\271\3768G=\032\321C\274%\216\002=e\340\325:\235\\2=\034\372[\275~\2474\275\313\253+\275\033\236\257<\tT\261<p\'6\275p\203\376\274r\177\017\275\250H\034\275j\\\306<\336|\343\274\273\336B\275\301N\025=At\023\275^\220\355\274\216Y\230<5\010\361\274\270\203E\275\307T\372<\352\312\006\275\225\270\036\275>\334D=B\330A\274\030\211\025\275\300\320\365\274\202\201Q\274\000BF=\366\276O\274\031bM<y\201\323\274\027\327\002=\346\2429\275\3457\007=\201\010y\274&\377\036\2753\3132\275dM><5\002\335\272\177]\010=&\214\254\274\\\330\217<1\212\226\2747\357\264<\301\306\336<Y\211p;\310T\275<`DM\275\216`\277\274\227\207)\275B\342\030=\210\032\336<\254\340.=5\036\201\274\310\005\022=\250~K\275\324\315\355\272\'n\345\273%Z%\273}\256U\274 \371\211<\363=0=\304?.=\243\300!=\022)R\275K\301\346\274\206\016\030=\273\315\220<\361nU=\322\2366=\226\225\004\272\020\021\255\274\246\023\274<\316\210\373<\360:\233\274|,_<\336\214\000\275\214\330\037\275-\344\026\275\336\277\"\275\344\366\343\274S\007\305<\022U\037\275Y5T\275\240T!\275\3128z<\225b[\274\254U\322<d\300\343\274\022VY=\027\016\025\274\316\236\271<`\266F\275yp\266<H\221\t\274\374\323\253\274\'mM\270\322\027\350<W\214\326\274\016C\204<_\2514\273(\211@=\242\031\006<]\234\030<\266{\023<\036a\336;A\321\227\272\232\326\000<\236G\r\274\222l\014\275\253_\016=\354\312)=w\341\316<J\2275=X%\260;}\272S<\204\315\251<\n\352\273;\302\033\003=\315\000\302\274\375WS=\310\243\301<\360\245;=\005g\264\273y\210~<l\032\023=\326Y\004\275v\235\364\274C;;=\270\215I<y\007\002\2759{T=\351\232\3629\"\215W\274\263\200I\275s\362D<\r\244\326;6\324K=U\330\002\274t\260\031\275*\311\310<\373.E\275\276\364)=\320\376}\274\342\344\236<\237\025\"\275\035T\311;\202\244\001\275\205\001\336<C\312\023\275\325p/=\263J\376;oaJ=\023\374\r=\370\302N=e>\354<[\001N\275f.\";\001\322\245< \313?\274$\345-=\237P\262\274\226\210%=\321\242\314<\201A\n\275\377\3549\275\306C\006\274\310xk\274\323 \t<\312c\330\274\364\375_\273\331\220\234<\002\353Z=\312\031\310\274dC\274\274X\257Q\275dd\030\275V\330/=A\336\'=\224zI\274\255\262\225<i\224J\275\250k\037\275\271\032W=\025sD={\274%\275\313T\016\274&dQ:\256R\255<\271K\233<m\264,\275\2156\021=\020\316\353\274~EY=r\206H=Q\336\005\274u\202X=\202\2110\2759\215\341\274\232\r\030<_b\033\275*\322K=\223x\321\274h\034\r=\300\0238\275\252\025/\275[?\325\274V\254F\275\206\245\325\274\016/\177<\310\270>\274*\260Q<\001C\n\274\027\nS=\362\345\350<\353\nY\275g7\243\274j\357\177<\016F\316<\020T\250\274Q\202\243<\023\364Y\275\371\3643<\222qQ\274\301\277\r=\314aE\275~\"\365<\320r\305<@fP\274AW\016\275\314\004\300:\000\260]=\265\010\034=XB\230;O\013\032\275\2201n<\003mP\274T<\321<\3148\005=r\3444=\275\352\226\273&M)=\216\255\335;\004\260:=\316\223m;\033\332\366\274>\277\346\274\375\251\"=\232\314\253\273s\373#=k\306\277\271\301=\267<2t?=\214\'\270\274e9\354<\001\373F=|\376L=\'\010M=zW\225;\247\347f<C\t\006=\026V\201\274\255%\026=\312\360\241<\273V\215\274\030\264!\275L\360\274<\034^y\272\225\347\370<\256\344\000=,W\211\273\005\305\032=)n\001\275O\350O\275\021S\231\273\310\r4\275I\331\307:#\352?\275\256%\275\274\301N\010<\375\277\315;\017\3511\275!\304_;\250z)=\313\350\235;\242#\331\272b\023?<\255\024\207\274>\010\261: \324\r\275P2\313\274\200\007\273:\240\271\331\273gd\252<\214@4<\343\362E\275\374\325\247\273\342\233\n\275?\237\272\274\263\033\335<\211I\233\274t\215Z=\321\237\326<\264\n\026=\355\363<\275\370\212\256\273\272}?\275\200\032\365\274 \331\251\274\335\022%\275F\363\t=c\370\254\274Y\230:=/\342\016\275\001V\215\272g\026H\275\237\3307\273\306|g\273\327\376\236\273\322X7\275\334\244[<\206H\r\275\326\301*\275\214\200K=\255\247T\275\305\r\365\274\353\276\035=\006\316\252\274\207\3746:\260&M=\267-\020=iS\023\275\254\243/=\227\037\312\274e9\237<\307\275\026\275\266\377q<0\005\"=\357\207\352\274\370\0377<s\250G=\363\204(=\226\315U=\021P\267\274\322\004I\275s\026\244\274Z\332\023=Z\304\303\273\36563\274>\260\373\274[e\251<8y\262\274^\361C=\314\231y\274!`\t=@\234>=#\026\353\274\226|\036\274I%W=O\020=\275Y\245v\274\226x\360;v\2061\275\277\022\235\274\244\020\202;\331\273\343\274\275R\377<ES\336\272\364\340\357;\234\212\t=}\213R=G\373\375\274\240\330D\275XW*<.)\360<ou\253\274\0038\277<\312\222\321\274\033\360\213\274\372\3120\275\200\036v<\347\303\260;1\255\377\271\346\026\001\275\014A\222<\374\307\373\274{8\020\275\265\340Q<\254\024%=^\242\004<\013\206\244<\317A =h\010[\275\322\223K;\255G =aNM\274\014e\036\275t\202Q\275\306\2432<\303\r\347;\245w:\2753\277\311<\247\323\001=\372J\225;\234\356\306\274\270\312<=\377\334\275\274;\007\026\275\313d\r<\027\"D<\322J\312\274bj\022=b\245\304\273lP\320\273\317\013\307;\354v\370<\t\244\217\271\304/\3639d\017*=\252,\341<\327hA=\372\242\'=7\267&\275\306\210\254<*xT\275\027\333\347\273\002\377K\274\2153\304<\320h3\274\233\006Y\275\'S\251<\202L\002=\304\3177\275J\304\350\273\233\360\253<\300\007\014=\031\365\273\274^\311\336<[\237B\275\211\356!=\345\007\352<\327\366\002\275[\203\313;,P\036<\332\204-=pa\350<\256\300\372\274ZC\031\275\340\334I=\004\020\n\275\027\213%=\350\n\235:\245\323m\274I\205<=B\316\374\274\360\030Q\275\200\031C\275\371\211\247\274\310\236\200\274\036`\001\275(d$=\306\337\010\274\361=\024=\343\252\023<\014=\016\274\346\r\347<\223s)<jx\016\275>\246?\275\260Z\234;Q\2647\275\250C\253<V\274\203<\036\360\376\274D_\223\273\252E<=\325\307\252<\236\205\021\275c\370\020=\243\354\026=k\210O;3\235]\274/\rF=:-\016\275\230\304\022<\242\262\266\274u\257,\275w\224\350<\240\306\376<c\260\355;\373$\270\274j\226?=VB\351<~\371*\275BrW\274\016\277\322\273\251\177\211\274\222\342C\275{;J<\027\000\230\273Av\250\274\305\0268\275\346\024\022\274\006\275J;\033(\243<\211\2467\275\020*\323;\267<\257<\306d\235<,\314[\275\365XA\275 \351\375<SF\007=\001*T\275w\366\026=}9)\274\201\324\230\273\034\265\310<\204\373R=w\026\361;\226\232T=\t\361\356<\355s\314<+j\332\273\207\371\221\274.\201,\275k\204\035\275\374\217\325<\300\253\352<\356\025\300\274\336zX=\222\035/=D\222Q\275\001J\264<a\314\355<\305R\317\274\321\266\330\274\022B\223\273\005\320\334\273?\332+\275r\010 =\311\276N=\033o\362<\260\\\245<\246\'\250\271_a\032=\3226\213;\371\3612\275D\262\031=\003\205P\2754|\007=\357U-\275VR\345\274\037A\217;{\227&\274\253\026\326\274\375E\237\273\240\364\271<\250\344\353;\002e\276\2725\306\036=\304G\227\2749v\004<0\021\324\274\021p\305\274\026\303\272\274\374\243\345\273G\255-=\032\230\225\274\231[S=\207\277\206\270zu\323</\352\033\275\034\004P=\265kN\275\306\341\316\272\017\210T=\375\224\310\274\236s\214;!f@\274f\226\350<\r\272\273\271Wh\367<W42=\213\2433:\251p\007=\336\355\325<\350\304H\275\254\261\207\272Q\310\303<\354\317\023\275\005)G=\212\264\325\274\274\332 \275*\216\023<\300\342\037\2748\016W=[\365R=\330\003\315<\320DT=+\334[\275\226\304\351\273\334N\"=4\312\017\274\220\231Z\274\006Y#:u\347\022=\007\347^;\025\230\303<\303\214F\275\322d\343\2741#\003<2\250@\275\304\317A=\317*\037\275\027e\250\272\324\250\310\274\2723\370<\307\241\331;\tx#\274ToG\275\037\0321<u\211S\275\242\331E=g\205\250\274697=\230\206\345<\254\033~\274\345#(\275\252\304\344\273\377\257T;\337\001L=^\356%=\321\0141=\366)\207<c\346\257\274t\326\007=\352\334\232\274?\346\217<\241\n5\275\327(7=\244\226#=YDl;@\360;\275\251\363\215:3\322>=\360c\210\274\335\376?\275\236\2219\273\203\035\213\274b\245n<\242v\331;\351\201\024\275\351\217\014=G\252\377;]\200\235\272\301\342=\274V3==2\276X\2756\354;<\365\274\326<\007\255\337\274\205\235\271<\374s\330\274\357p\300\274t\0225\274U\227A\275mpf\274\314\3750=%\350A\275\376rS\274\200\210\362:\265!\333\274~&\014\274\030\331\260\274\362Q\323\274n<\270\274a\244\274:y\256\214;)\234P\275/\2049<\024\021\326<qG\342<\037\312\232\274tB\341\273\243\304X\274\023\241\031=\265$\344<\305\213\r\273\234Yw\273?\276\203\274\256\347\306<I\030:\275\357$!=H\366\254\274]\0361\274\020ij\274\034i(\275\242\324\315;\262\3246;\223\254\324\274v\032\376\274\034\301D<\340\235\254<\222\315;=\027\3629\274\364\355-\275\207\304\224\274\007\256\354\274T\305\331\274\021I\242\274\367M\373<\273\301:=\037\320\274\274\020\235\211<\0256\030:\245N\3229\374{x\274\313\252\213\274\223dL=\243PY\273L\006\236<2)\\\274|\336\'=\034\252\326;\014T7\274\362.N=b>\256\274\331\357\024\274\014\246\273\274VY\023\273\377\315\253\274\032\177\013\275\004\253\022\2750>\233\272\\\313H=.\216N\275\275\206\212\272\006\267\240\274\032\307\303\274\255\361V\275>O\226\273\324B_\273\217\322C\275z\257N=\343iW\275X\265\356;\255\273,\275\300wX9})K\275\314\227]<!o*\275\207\322\351<+\377-=3\312\035\274\\\312M\2750\266\016\275\002s8=]XG\275m\276\023=b\205\371\274\007\201\336\274\235\256 \275\031\312-<\001\331(=C\247\332\274\365Z\327\274\323?Y<\336]\267\273m\033/=\264s\375<\233\271V=\373\026\"=\224sL\2751>.=\263\030\310\274P\\\261:\323\244\374<\035\003\270\274=\305O=3P\001<%$\274:\022\257\020\275\017NX\275\306%\022\275\351\014\312\273,\263\307\272\262\335\013=\215\323\020\275\002\247\037\274\365\343\271\274\340\354-\275\336<9=i\3144\274\377p\207<\367\314\'=\017!\200<\316\013!=\273)\n\2759X\343<\265p\272<b\"\036\275|\tL=\263\347\275\274\316\262\321\274\227eV<\316\272E\275\313\374\316\274n\033u;UlV=\357e`<\t\274\023=\367\254)=\214\244\013\275\361\214y<\347\321\244\274\344\034\260;\031>\037=\341\225\026;\375}.=\002\000\'\275oC\017=\301!>\2755\301J\275\321\3407;\232\2736\275\200\026\266<\312H\006=4\256!<\031\024\233;7\357H=g\307\'=6\213&=\313\035 7D\3547<Y\325\223<\326M\360\274\210\037\370<\213%\323<\254\300^\274\315\216_<]\252Z=R3N\275f\231\206\273Hd]\275m\364\227<\275\032\205<\367\254\004=Fq?=JGL\275\247m\251<8\221\031\275uE!\274\213\377\250;DvU\274\310(\324;j3\001\275\334O>\275\212kH<<\365\007\275\343O\001\272\3600\361\274E\255N\2759\375Z<\371\006+\275Bj\314<\027\353H\275Q\177-\273$\345\270\2749\241\214<U;\310\274\216\314>\274A\331H=I\201\320<\274aA\273k_,\2752\341K\275\000\341\357\274&\006\014=\242\026\240\274\303\021\r\275\3733\216<\244\237`\274\034\327\244\273l\213W\275\013\262E<\237\340X\274\0242\213\272\277c\360<T\324\r=\"\323\020=\037y\354\274\271(\347<h\316\224\273\224X\n\275\316\236\313<\004\220\224;\025Q\023\275\335\225\031\274b\222\352< \333\"\275\255\245O\275\265}==\025B\233\274\007\305A=\365SL=\177k{\271\030\006m<\2740G=@\002\332\270E\251\266<_\253S=\016o\325\274}P\221\274D\222\023=\032\2676=)\341,\274\242n\004=\237\022j:\251\002\032=\310\3520\275y\354}<8\342\032=\270\376\340\273\033Yn<\005\345e:\010\345\203\2740\367/\275QL\031=^z\207\274;^\302<p\013\216;\221P#\275\025\350\277<\230\362\265\274\331PW\275\321\330\000=\226|\001=y\376B\275\317\324\026\275&\316\234<\013\177Q=<\372\027=\\g\337\274\243\2654<\025w\210<\006BH\275sE\'=\234w?\275k\251\010\275\272\3101\275\"\215\"\275\316D\277:\264\354\005=\203\262\363<\256\352\032\275/\0202\275\346\375\326<Jl5\275gn\3659vJ,\274Y0H\275\376\223e<\"f\"=\316\340\233\274\257\266\032\275\354\214\004=\316,.=n\267 \273\332\200\310<\244\375\002=^0\276<\333F\027\275\255\3679=\365\3174\275\365u\251<\206\243G\275X\241P=\033\010\\<\274\264\007\275\275\r9=\006^\303\274\201\324Y=P\247\272<\003\313Q=V\2038=\334\221\237:\024\303\376<\nP\301\274\244\352#=\372_<\275\212_\205\273\370\330 \275\237\321\212<#xZ<\261\320\221<]\266\316\274\317\213\247<yl\235<\303_\363;\225\207\324<\222#6=\335y\302\274\313b5=7\233M\275\315\276\230<\"\330\235<{&4\274\035\345\024\275\213\262Q\274_\243\000=;C\375\274\350\376\033\274\206\300\275<\206\350\n\274\222r%\275\026\245\332\274\332\363\301\273\230\022\375\274\327p:<\007n!\275\306\315\004=\253N0\275u*\013\275:\355y\273\356M8\275\213\013\250\274\243\313\006\274\2000\256\274\306\302\010=\265\206\014\275\\\376P\275\351H\350<\264\326\262<\376\t\273\274\003Q\303\274\343]*\274\223\342\337<\355\317\236<\262\034\304\2741\324\267\274=\n\203\274\350\t\205<P\236:<\346\201c\274E\347/\275k\204\327\274\327\225\021\273\000\275\367\274,D\214\274v\0275\275f\372\353<N\274\r\274\255<\301<\034D\\\275,\250\221<\254\034\211<\325\'\245:\371\211L\275\266\335\r=\'\267\023=\205nQ=\016\2561\275\236U&<\314\234\330<\343\346V=\207\367\337\272-v\245\274_\3529=\031\000\336\274{\030\306\274\035\364\027\275\346\327\020\273\370\'\214\273\276]\242\274\267\351\334:\027\210\032\275h$\211\273\325\257\223\274\276pD\275v\202\231\274\'M\036=\306L\n\275g\n\265<\035\254<\273\344f\303\274CR\023=\244A8\275\260\230t\274\034*\234\273Ok:=y\337\000\275\254)N\274W\223\026\275\rT3\274\251\217\215<t\354\r\275\375\254\037\2746\203\366\274G.)=\371\320\201<\372x\020<\321\220\205<\031}\273<u]I=dI\356\274\207\203\305\2740\017L=JF:\275NS\276;\344\314\351<F?@\274s^\237\274\177~C\275K\347Q\274\215\325W\275\222\310\203<R+R=(\221\022=\321\2708=n,\006=|\371\024\275\354_!\274d\260\347\274P\241V\274l\317\024\274\332H@\275jn\260\274\3447\r=\007\033\263\273Q\340\t;\350t\003\2751\234\037=\234-\002=\332\3525=\241\030\235<\252:N=\253\364;=\2458\030\272\240)\032\275\244\310A\275\203A\031\275\027TQ=\001F\271:\266\260\t=y\330\335\274{\211\274\273\247\337\025<A\337\003<\216\024H\275h\316\027\274\232:\276<&*\026\275\216\300[\275\2121]\275T9\264\273+f\255<\240\370\366\274p\301\202\274\234B\'\275#\035\007\275c\271)=\230\336\244\274\204\274U\275\316\347J\275!\330S=|\345\034\275\317\207B=C\034\026=\236-B=fq^<BI\217\274\005\306\000=\316R\273\271\270\033/;\337\2458\275\362\253L\274U\377(\275$\267\027\274M\007U\275>p\025\274\327\205\236\274\007v\235\272\304\020p\274f\031\235<\352)d<$F\351<\350\014\315<\345\0043\273\363*<\275\220g\022\2730\315\032=\260 ;\274(\3524=\362[\'\275-\333\354\274\025\213<=\300\2152=\365\036J=\025o\t\271\037\242\370\274\331\255\340;\325u;\272\3103Z\275\274s\334\273V\276\r\275\354\254W=\326\320\014=\264[\'=v\034\\=xt\215<\010\221\'=\251\244\311<T9\325\273S\032\010=\251\031\016=\350G?<\305\300b<t@\372\274\n\324\234<\022O5=$\330\024\275^l\000=\207\353\211<\210\002\330<\201\3409=\251HM=\246\233\034<\326\301\345<\260\211c\274\004\327G=\243Q\002=s\211\"=P\306D=K\252E<\235I\213;Q\227\370\274\177\255\326<\032\223-=>a\246<\234(R=\240\2418\275\033\324\036=\337f\310<\233\341\352\274\271\000E\275e\211\210\274\"Xo\274r\223Z\275\313\366A\274\263\230O=\206\314U=\212\256<\274]\266O<\272\022o\274\265\240z\274\323\361\030=\246\005\006=\345\337z<\210\273\2269\325\341\327\274g\031(=\033o\327\273\002\2210=\223\311\341\274/\004\t\275\317Q\247\274(\310?<y\013\357\274/{(=\006\227\023=\261Z\344<7\313\271<#\200\300<\273\311\026<\272\253\032\275\253+1=H\027%\274\3048U\275\232\255\331<T\'\272<\314\245\002\275\201S\312<k\215\373;\301\270\231\272r\332-\274\360\260e<\031v\300\274Y\375F\275\275U\327;\233+\306;\363\013G=\376B\334\274\324\356\006=<\271\313<\304\224C\275\030_\325\274\350+\363\274R[P\275\337\216\331<{\304\211\274w\241F\275\350\371\r<j\367}<\307tI\275\217C\223<\307\002\025;\033YP=\336Y\301;yH<\275\216:\366;B\370\032\274v\255S\275(?\323<\360\364\327\274i\201\277\273,\352U\275\224\243\211\273N\035\335;\021G\277<\326~\254;\200NW=\340\353[\273\223\037\004\275z\'\022<\332\247[\275\272s\245<\256G\336<\262\373\341\273X\350\036<\236\217@\274\233\001\364\274\265\207&=\363\"\275\274#\224\356\274p\327\201;\016$\312\274\177\234\326<\235\261\317<1\177\323<\300k[\275\255w\225<\023\222*\275X\265\226\273\325_\002\275\307S\336<\223\211\365\274\313/R<\372\251?\275\023\203@\275\317\023B;\262\260a;\t\003F=vF\030\275\020\326t;2\220>\275\371\016\327<\266\'\020\2744,\017=\014OI=\374\375o<\231\267\325\273\320\020\007=\301\356W=T\327\216\2744\227\024\275\301\030\355\274\"1\017\275\327\030E=C\304)\275f\213\372;gp\251<\216\241F\275\t\334S=\371\027\354\274\374\261z<R\212\326\274%/\350\272`AJ=\264:\215\273\354C\302\273x\336\257\274\335\246\257\274+\207p\274\020\241?=\274\024\307\274\340r\005\275\024MJ\275\2272\305\274=\022\017;\306\221\035<|\376\236<\246\033\010\275\r\305\264\274\352?\020<@\237;\275Q\0017=f1\310;\347\370\024\275\036\233\303<7m\242\274\200\0315\275Y.\355<\360\363\031\275\330ew\274\rB\205<\031R\032\275\303D\367\274\032q-\275q\354\254\274\327\322\216<\203\270,<\\r\311\274\342.\302<\020y\310\274S.\311\274\t\033Z\274\317\3441=#\005\006\275\031l\335;\260\211\202<\205\202+=W\177\334<w\353\\=.\005\221<f\346p<\216WH=\276\236K\275\274NZ=\246%O\275\010kg<*}?\275\331T<=/\177\223\272\224SW\275\322\313\331\274\353\255R\2740$J\275C\254\032\275%\227\362<|\0030=u\216Q\274\233\303\201\274\205^\230\274\374\372=8\335\020k\274\033\333\372;xC\266\274\024?\361\274\252\322\035\275\3430\205\274\333\030\366<\264o-=m\351\206\274\331\370b\274:\033\016\274\252\r.=\023\327;;F\001?\275\273\262 \275\247\367\305\274\247bK\275|\210\230<\255\n\005\274\226`>\275\335h\025:\204\016\204<\310}H\274\375)\2019\322\301\216\273\314\2550\275y\022\322\271\256j\010\275\241Lo;;\027f<\215\357\004<!\"W\273\031\323\014\275\216}k<B\327\\<\223\"\215\274y\370\002=`\364D\274O\327X\275Q\360\257\273\305\007\311\274\335\355\"=\021\330\236<F-\355<\242x\320\273\206[]\274\025O(:\221\254\032\275\351\3123=\304\272\032\275\006\271\036\275T\222\245\274K\264\212:\323\314\211\274\273\023P\272\342\271\030;\353B\247\274o4^\274\242\034\030\275\303>V\275Q\347F\274!\270\257;\300O,\275\353?N<}\013O\275qT\205<\006\331\255\274J@\222<\204{\251<T\001y<Z-\345\274~\332.\274\361V\267<\266\243\205<>~\362<+\022\316<{\0172=\222\365J\275 \2313\275u\244\232;\207\213W=\244$\221\274$\326J<1i\021\274Qu\236\274\230\331\000\275\374\234\361<I\350*\275&\200N=\303\"\235<\344\034 \275\310u\262\274\t`.=\243%\261\274\204\344\252<\313\177Y=\200\336\310;P\214\263;\001\020;=\255MA\275\360\220Q\275\206\177J=\341v\207<\235\375\371<=E\317<\317\243H=\215\201L=\317\014L=\210b\334<\037\2717\273\022$5\274)7C=\252\216\236<\004\271\r<a\244\250<\030\327>\275Q\3758\275X\332\245<,s7=\311+9\275\n\277\021=\202\2036\275\3505)=\331\310U\274w$\300\274\022\301F=w\365\031\275\312E\343\274\236vC<qg\n<\250\006\342\274\252\"H\274\205.\001=\372\244\317\274\353|\262\273P\3728=X\014\250<\360k\035\274,\2015=Bm\027=\260\0161\275\357\006h<B\t\211<\247\327\257<\214\247\020=?\202B<\023l7=\333\215\r=\237\300X\274\t\3216\275:]\002=\267\336`\274\272j\335\274\002\217\250;d7/=e\257h\274OqD=2\036\206;\260E7<\331\033e<\317k@<\2625\005\275^\207\316\274[\244\262\274\014\2304=&j\315\274&f\010<\327\3041\275\346\374\275<*]\201<v\031[\274\321\200#\275\202\315\207\273\213C\256<\325\357\345\274mJE\273\313\327q<\002&!<\354\202S\275\351\251=\273\221\237\270<\250E\021\275gS\r\275&\tG\275\317\031\n\275\255\220\306\274\314/D\275\370\376\353\274\0367^:\033\3228<W\334z\273\237\r\001\275\036CB<\355\342\266\274\274o\204\274\262\234)=.\256\342\273q\302(\275\177{\361<\362\206@\275\246{\022=b\254\274\274\323\222G\275\265\302 \275\207\275P\275\312\224`\274\302r\300\274\350\331U\275|(\230\274<\263f<a\377\211<\234\311\360<6\207\324<\023\252\305\274\250\3421=\210OE=\"!\227<:u\n=\320h\r\273+#*\275\010\265\026\275\364T\256;\014\273@\275\323f\022=\224\201\263\274\001F\021=\235\264[\275\241\333\305\274\233\237:\274\234\230\272<*M:\275q7\005<\232_\374\273\272Y\223<\247`p\274\376\304\026\272by(\275k\226\'\274\025Z9\275R\202\364<Z\203\036\275\204\037\211;\t\034\016=\204\3118\275\247\356\345\274\352q\272\274\250\203\226\274\341b\276\273\345\276\316\273\344\020\234\271\254\210\375\273T\252\252\274\214(Z=\252~\377<\305\266\334<\026\365\177:\243KH<\'\345\217<\227\232\204\273\003N\260<><4\273bd\275\274\352\306J\274\263w\254\273n4\023\275\347{\246\274\310\254\261<\014c\271\274q<\003=\r\262\343\274\227\204Q=\351\"\363<\203\305\276\274HrT\274\\H\206<\225dO=\256\217\322<\271\367(=4\r$\275!\262\004=0\217\345;\307ni<\325\223\325<T{\024\275{M\214\274O\025\n\275\031V\237\274\272)F=\031<\273;\275\0176\275\333\353C\275\201(R\275\375\322b:o\t2\275\023\224\310:\354\273\220\274\221\246\304<\027? =\274\2163\275fb;\274!\001\340\274\245\205q<\034\241\330\274\377\324(=\030\2221=fj\005=a\355=\275\200]\277\274\256\0322\275\300\020Y\275\341\232n\274\366\354\266<\034\2743\275\235//=\177!L=X\271\245<\350i3=9\204\003=\n\247\201;\035\211-\275\334\034s\2743\177:\274\204Z\300\274\rP\254\274\027o\307;\351Y\023=\r\235/=?p\022\275\tM~;T\327e\274Y\213\312;\226\3007\275QV\030=\322Z\010\274P\262\271<\203-\271<;\232A<\377\371\370\274\356\023\250<~\226\'<0p\002\275\230\220\205<\350:\000\275\363(\003\275\363\230\000<\245\014\201\274]\2316\275\000\220\202\274\353\273R\275ctW\275\224\276H\2757\006#\274\352\312\322\274\r\006\272\274[\225\320\272\270\003I\275E\345S\275\322h\342\274Jm\316<\320\216\253<+[\205\274\021\324\375\273\013N\035=\2306\203\2727u\354\271\031\271\027<)\250C\275\325\210\242<\022\0243\275\363\017\n<\330\300=\275C\2500=\217\253\341<\222\262Y\275]@o<u\302\267<#\266\004=\360\312\335<\034\3516==\217;\275\320H\322\274<\345$=\2434\311<\321\264\376\274\203\321\212\274C`F\275\213\322\241<L\220\000\275\037\213\244<)!;=\\\215{\274u\273U<\234K#\275\271M\200;\253\257\037\275\226m\031=\257E.\273\1773\037\275\251M\016=-J\315;\245<\017<\227\317A\275\352\2532=\214I\313<\360\223\001=\324T\000=W\024%=~1F<\205\rC;d\202\347;\"\263\013=\n #=f\0367\275\025,\210<o\377-=\231\371\331\274H?/\275\tS\251<\272\377\027=\255H6\273\3109\032<\317\316\373<2=\343<0\202W=t\204\307<6\356\236:~\215@=\022\343\036=@\242\317\271\354\2620\275&\313(\275\224\tW\275\242\214C\2759\010J\273\211\237\201<\032\302\024\273\213E5=u\306X\275P\360\231<\255\252\253;\304HS=G\2117\274\207]\217<vO\026=\373@]\275j\346K=\204\331\233;\317\017&=\267\032\n=j\253\017=\0205\016=\235\366\014=\271\373\266<\237+\355<\213\306V\274\356IA=\337\371\322\274\273\202>\275\313\340\373\274{\224\026\275\021|\024<4\252\233<\250\352\274<jA \275\366\344\033\275o\260\022\275\365XU<\"\217T\274\271\211\006\275\r\314\034\275,\335H\2757w\'=N\0340\275\347{>=\346\t\251<\331\355!\275#\204\t\275V:3=\t\250\230<14\332<9\316\025\275\335\357#\275\326\345\367\274_[\260\274\307\204\020=\340\034\t=4SK\275\030\202\316\274\256;\353<\222K(\275t\025\035=\225\3440;\031\025\002\275m\n\204<\274h\232\274\262e \275r\324\301\274\206iA\275d\222\005\274w\376\356\272\373Iv<\231Y\022<\243\345\314;\223\325\332<\244\255)\2750\370H\275\244\212\272<\370RR\275%\003[\274$d\272<\333\362\241::\276\273<\277\3200\275\271\202E=\375\370\027\274\317\342\n=\320\360 \274\304\354\005=C>\002=}W$\275\010 \270<\355\232\\=U:E<t\305\336\273#\004\276\273\212\253\004<\213u\026\275\0370\247\274A\206b\274\267qF=\"N\n=\243d(<\336`\002=G\n\214\274}\325\320\272\035\352;\275\231E<\273\r\323\303:\244\206]=\314\\0=[\204&=\203,\r<\006#\232<\256\203\271\274A/\004\275\310\006\026\275\177\264\247\274\307!(\274\247U\t\274\315a7\275\335\t\022=\250/\217\271\002\371\303\274\350!\221\274\374\374Y=\r\033\376<\224$$\275H\333\343;K\307*=\236\340\002=\333\266_\273\310\257\032=$\256Z<\325:u\274\007\202\321\274\264\351\241<\366\276Q\2754VM\274X\245>\275\216\376|\274,\373\245<{\241\276\274\026\370\272\273\321\270)=\320e#=\232M\231\274\214\322&<l~9\274h\322==h\032W=\001\355W=\3200.\272YY\230\274mT\205\274\003\264-;\223\314V\274Jx@=\\\3568\275\375\204\023=\253\302\300\274\236\331\314:W\"\261\274\273nW<\277\314\375\273\202\257\214\274\255\370R=\003\322\r<.=\216;\265\n\244\274b\240\322<\2656M=/\346\021\275Z\246\"=\241J1=\263\021\030\274\263\2411\275!)\022=5KY\275\343\302v\274R\233P=+?@\275\352\246\3358\005P&\275\211w\345\273\315$J\275O\246\225<C\377\204<\214\265\206\274m7E=>\004\312<\212\336<=0\213\240<\017\252-\274\232\242\025=\376v\247<\315d\271\274\307@&\2725\217\263<\332\033\022\2755\333\210\274[d\201\273 \266/\273\310\363[<\345\346\037\275J\344\031<P$\017=(\316\273<\002\343\267\274\\n\037=M\267\216<\242u;\274\3503\003=\353N\026<\200\367\266;0\357\334<\301]\371:&\356%\275\033i.<)]\\\275k\266[\275T\'\024=A\235:=D\'\240\274\320P}<F@\316\274q\260\376<{\n\355;yc\025\275\241h\350<\253\177\254;\304Ge\274G\247#\275I:\t=\343o\030=\n\023\006\275\255\025:\275c\200\212\274\351\327K=\352\007s\274PFH<T\002\234\273\325\"\222<\221\337\006=3YI\274\313\202#\275\225|$\275q\367%<-]\364\274iTx\273\325s<\275/\275G=\307c1<\242\362Q=aW\"\275.\031.=\212\017\016=\037\010\373\274\236.\001;e<\007=\274Q&\273\370\350\243\273\222\220Q\275w\371\202\274\372\214\215\274\303F\030\275\310\2754=a\236\031;tvY\275[\270\300;U4M=~\337\r\275\352S`\274\024o[=9\n\333<\274\370\260<r\327\335\273b\321B\275,uE<f6\356\272-\204\312\274\032\002D\275\004\312[\274\317\362\007=n\250\030=%\234:\275\024\206\006=\010\213\002\275\310e(\275(\306\t=\313)\243<\361\241\251<\003\210I\275u\013!=\243\335W=\252\231$\274U\343\024=\221\274?=x\323!\2759\223:=F\351g\273\360\243\t=\271\216\030=\275n\212\274\313\3374\274j\331\215\274(\027==\n\020H=\326\303R=\243\206I\275\266x\036<\331b\345\274\336\257D<\351F\005\275\367g\\\275\317\0213=~\276\366\274\3640\276;\347{$=\216\251h:\265\255D\274\005B=\274|)\\\275|\002$\275\236\366\257\274\241\223\024<\016\r \274%7\221\274u\307a<\326\205<<o\242F=KHH\275\220\336\375<\265EL\275\360_\000=j\000\367;\177B/\275n\252\217\274\036\216\214\274\365\320\200<\016rE=\202K-=\330o\261\274\374\305\013=\352\014\224<;\355\010\275v\370\t=j\211!=M\332~\274\204\363j<\302|N=\307\337\336<K\221\261\274)\211F=\026=5=z\302\\\275\312\322\375\274\004x\255<c\303\306\274\004\301J\274\303_Z=LP\021\275e\234\037\275D\325[=\257&\211<H\230\2169\213\262\034\274\244\020\027\275\030\234Z\275\373\316\202:!\035/<\316\260F=\363*\336\274!\312\203\274\003\376\254<\237`\024=\323\017\203<\301|!=T\263\320\272i\273\357\274\367\346\004=i)\357</F\311<\370\342\032\2755\342,=\257\277\311<\3569\201\273\206\014\225\271\021n\362\274C\036\006\275\203W#\274\237\021\216\274(\217\021<O2\005\275\260@\346\274\314\266=\275x\333Y<\235;\010\273t\005\222<\353\006\231\274\335\321\016=\000\362\326\274\020e-\275a \275\274J\233<\275\016\037=\275\250\273\274\273%S\206\274\204\326\323<\3427P=\375I\373\274\006\250\177:|\302\356<9\037\365<\207!\211<\323\002*\275\"}\222<<\260-\2753 \371\273\353\261\272<W\3572=\223\342\351\274\370\036\204<4J,\275x#i;B\203*\275\376\310F\275\341\251.=\022\315G\274\355\236\331<R\327\033\275\n\007\005=\207\272b\274\034\322\256;O\020\013\275\221e\320<\275\305\034\275=\336\275;Q\020\357;\350P\370\2744\370\r=\340\016C\275\2401\004\275\352D\372\272\206\205V=}\377D=\344x\001\275X\377\312<\313\002Q\275\312oN=\260Z&\275\275]\271\274\221^\r<\220\313\313<\275\261\003<\363W*=\300\342U\275\335\254 =\320\217\251;\035\016\346<\260w5\275xD\030\274\345\370_<&ES=#zE=\302B-<S\231;=\333\0179\275\353\013\332;\003\315)=\375K\006=D\237\030=\327\261\353<\371\372Y\275\330.z<\342\326\\=\350\344\022<\220\202\315<\330\004X\274\243u\027=\370c\374\274\374\226A=\t_\017\275\261\253\270;\214L\261\274\236\334@=\354p\321;M\310,=\265\337\322\274\363\223\260\273Km\361<\311\332\313<\240\274s\274\321\016\212<E\211\326<\t\226\006=\343\332\256\274eP\374\272r9\333\274\017l\350\273\332\323\036<B3\"<T\367\326<\243\306E=\217\350\032=x\260\036\274\266s\340\274\2404+=?\356\370\274\315\317H\275\323q\356\274\02773=\231\016H\275\337\267c<\300\231\332<\213O\260<\036\366\275\274rT\217\273\206-\324<@\210O=Z\3102=Te1<\267_H\275\246[\371:\211\007H\274Oi+=\3106\217;)\234X\273\252.<\275a\247\233<\003\006 <V\0011\275\'\201\025\275\335\341\022:\002{=\275\305\336\352<\026N\237\274\365`\t=-\021*=Y\2601=U\034W\275\033\226\274\274\222yM=dT\204<\023\235\311:1|i<\330p&<\252\352\375\2732aP\275\363\004\371<\340i\004=ss\203<Z*\022=\211\006\316<\373\036\022\274B\352`:\240\352\032:\243\234\3447\356\321t\274\34185\275\205I\026=~\321\014\274\326+\025\275\215I\213\274V\035N=\0005\325\274\032\2669\275T\300\025=\3439m<D\321\377\274\364\255N=\356=\302<p\267\230\274!u\374\274\005\307u\274\337M\352\274,j\223\274km#\275,\221\r=\034:8=k\315\352<\331l8\275\335\201\t=3L\226\273\372^\217\274\344\030\252\274\312\3234\274\r\261\216\274\374\320\032=\313\240\317\274\317n\006=M\311\021\275=f\374\274%\344\233<\002\353\\=\310-8\275\372N\016\274\343\033\376\274eWP= E(=\311\301\217<\332\214-\275\362\213Q=\306Z-\275 \332\"\274\301l1=\221\317\315<\233\255\332<\034\336 \275\310\036R=|\376\025\275\274\262\007=\025A}\272\333\r_\274eO\034\275\014F\315<\023v\036\274\377\255S\273\273\275T=\002\337i\274\240\257\256\273\'\001\002\275\205L\035=\333\3123\275\377Y\242<\277\275\033\275\304\022Z\275qjU\275\234\323d<\300X7\274\217\350\322;\355\342\256\2748\001!<z\350+<L\035/\275\233\031%\275\300~k<\022)\325\273\373S<\273\351\231R\273\271\016\363\274\350X\007\275\354\361&=\374\017\242\274\232;\022=\306%\034=\224\252\210<\324$\321<C(\002=\314\201\025\274\312\312*\274\0376\313\274Nf\006=\241\274\342</W9\275L\266%=\307*6\275YiH=I\347\265\274C\315N\275Kt]\274I(O=No\275\274\\\215\250<\215\260\037=\0052m\274\264\325\360<\221\231\010\275\270\3719=+\n\001\275i\"$\274\217\242\267\273\013\261Z\273\336Q\324;\242\025\213<g5L=T$2\275\344C\275:\032\276Z<y\243P\275\002\273\t\274\"\326\300\274^\274\'\275G\304O\274\205\350N8c\344\010\274\370\"4=%\023\034=\247$\206<\233\177\021;P\354L\274yZ\025\274\025\010\232\274\230\215<\275\036\\\002=\346\261-\274\201\322~;\351<\026<\023!\205<l\000\035<2\267\212\274P`\027<\273\334\252\273ai4;\276\004\t=\262\216%=\242\223\340<\027\214\013\275@5\223<E\0319\275\"\313\303\274%:8;!\226\270<:y\204\274A\306\262;jPS\274\321?!\274\0012=\275J\2776=\002\034 =&t\023<\230\\\036=@I\031=l\351\240\273\354\274\231\273T\t\252<&;\001=]\033\363\274\271K\346<uN\273\274\376\374G;\335\262:\275\207P\204\273\342\360\200\274K{$\275\010\265F=\326^\330<\262#]=(w(=\251g\365<^\340\330;\222q7\275\242JX\275\322_(\273\264k\202<7\0142\274\010\375\006=\266&G\275\303X\r=\335C\002\275\337\026\357\273\237g\310;\330\326_<\324u8=D\022\030\275jg0=B\347,\275c\036\255<\364\300P=\252K\n\275\211\367\237\274\321\243\250\274\'\354\003\274[\347\315<s\232\300\274?0M\275z\273]<\273q\037=\373do;\022\3013\2756\362\317\273>\007\024\275C\027\372<s\336\022\275\363s\023\274\302\r\025\275G9]=y\321C=w&*=\017\201\303<\263\340|\274{\0336=\363\354\220\274\3667\017=\t\t\014\275\351\222#<\374bQ\275\211\216>\275\277\217\001<\233eF=\367\262\275\274\026\244\272<\223\323\204<\306^\277:`1!=\365\374E\275H\251O\274\307\224\222<\213\3058=\321\024\333<\314\210\245\274\024(p;\375\225\033\275!\017Z<CG\255<\304\007C<\333P\224<\231oF=\r3O=X`\213<b\236\323\273\203b2=\341Z\3029s\377\242\274Uu\360\273\232>|\274\226\\\032\2758\244@=\377p \275=j\006=\300.\036=$\244\350<\320h\t<\210\304 ;\002j\026<1\307\010\2750\352;\275\262\025\264\272\302\264@=v\2174\275w\255\034=\021HJ\275\035\2117\274wX\016=/\224\346<[\204\374\274\222@\001\275\r\316\353\274\023\030\225\274L\301\217;\r?P\275\231\367\030\2752\3267\274\272y\367\274-3\025\275\336\327u\272\213co<4\223\r=\021;7=\377x\352<\277Fo:b\335\000\275\342F\000\275\306\354/=\016\236\r=\036\006F\275\346\002U\275\214\376\024;\254\207A9\020\333\002=^V\010=\236\250I=\206I<=Z\202$8\017(D\275\227;\373\274w\360\302<\347u1=\246A\261<\024\201\n<\240\2179\275\371\nu<\372\360\245;yXT<M\030\374\274\253\362\323\273W\351\316<\304&\212\273.\341\232\274KK\005\275\223\323$<b\355`<=\226L\275Wt\006\271]\324\241<\033zn;y)\234\274_\316r\274$\206\232\274\177\236<\272\347\277\275<\351\336\006=\263<F\275\221&\317\274\364\007\216;|7\t\275\\\350\224<\372g\316<l\363\020\275\006\232\034\275s\3151\275Ah3<4\2250\275\026\035!=\200\231\177<\203*\007=\225\001\361;\266o\377\274ON\222<\325\326r;\212\216\013\275\345\224\025=\322\305\n<\006\220\005=:\357\255<M2\347\2749\343H\274\3157e<\2221T=c\334~\274\375.g\274\330^\346\274\036<`<\333\013\214<]\347\224\274\000\257\323\274\303\'\375<\350(\210<\271\275\365<\002@\313<$\255a;5\322E\275\210\3643\275$qc\274\'U\355\274\227~S\275\311\326\242\274\204V\321\274\3239\371<\033nl;Jc\354<~\322\324<\257-\026\275T\226\r=j\325!=\350O\315\274+ZU<u\024\005\275DHK\275\241&O=\304\002p\274\366\360\033=\251\306-\27569\n<\026\3205=Z\217B\275\n\362L=\277h\010<iF\240\274)\225\002=\222Q!=\264pU\275Pw\235<Y\227Y\275\240\225\006\275S\377\327<\314\370V\274^R\010=\337\344q\274?g\256\274\316\310\216\273\214\222\315<b\211S<{\327\231\273$*\373\274\351\322A=\024\244&=j\n\276\274\343:\323<\320@\263\2747eX=JqP\275\371\254\320\274\221c;\275\301\327\371\274\n}V\275\313\247\307\274\214\365B\275\234\000\007=\221\3531\275\271Z\307\274\3375.\275\305\231\020=}\203C\275wm\310\274\273\336\377<\013\246\315<Qy\007\274\213\r\356<\240\246\"=\207,\014\275\000z\2379\321\326&=\005n\'\275\343\000Z=\270\214\304\274\264\267\205:\253\230\033=G2U\275\300\t\214<\034yL\274[\205\304\2721}\016=\224\223)=\251S]=\027`\016\275\267U\363\274\3764m<\202>D<\"\027\375\274\240_\000=\326\355Z=\356\033 \275\364\226\003\275T\2036=8?\377\274\347\356\250<\002\0005\275=\3324\275\355\177]\275\306\342\313\274b\321G\275\023`7\275\26155\274R\250A=\361I\300<\305\276B=\033\237\n=\244>\000=\257\303D=\335E)\275%\371\306\274\207\262\000\275\201\212\252\2744}k:\351\377.=0\320\202;\200\007;\274\264\236\353<\242>\032=\317?\357\274\343\230\010;\020\177\";Q_\026=\274LW=\246\303\277\274\260\014\273\273\322\021\263<v\305\330;v\375\322\274\333\267m<Y\366x\273\026\374Y\274\326YK\274\t(\005\275\034[==)|\371<G\037C\274\006\022\033=\014p\020\275\322s`<\"\342\304:q\357.\274\353\2064\275Rl\003\275I\375\020=A\221@=;*\303\274\001l\360\274nn3=\344\274!\275\317\373\000=\241\253\037=\'h\025=&}N\275\255\227L=!\367\337\274O\321m<P\371\343<<\027*\275\"\213B=\316\315\022\275bN\222\270\345\276\257;\216\274P=.d\203\274\33609=\271\231\006\275$\"\214<\263Xa<F\327F=\232\035Y=/\227\347\274D,\005=\2742r<\014\301==\254\346j\274<\250\033\275\005\3763=\250\"%<~\220\036\275\247\307\317<\026t\212\274\256i\363<t\245\016\275\031\211E=\007MC<dB5\275\266\252/=\335\177\221<0\2155<D\017F=\253\220&\274\226\031\327\274\363!F\275\'\212\353;\312c\031<\217\344\324\274#\023\000=\305\016\251\274\317\335\277<\377K\t=4\014\303<5=\211\274cH\304<\343\327\316\274\216\222\372<{\217\324\273X\246\177\274\366NE\275\026\024:\275\313\014#\273U\345\320;\227\377\230<\346\365>=2\304|<\014\250B\275_P$=\nsC=\230\0270<\035\3649\274\314p\377\273Nh9\273q9\020\275\334y\026\275\213\307\027\275>\031F\275\274\242\021=HcG\275\211\376\350<I\317Y\275\300\277\307\274\261\310\311\274\0354U\2744e\350\274YJX<\304\305,<\033\307\001\275![\005\275\255\3008=\"\324Z\275\304\371\031\275\264\315\201\274\n\257\321\274\342\336\252\274/\236\272\274\312\356\251<\342\344\350<K0\346\274\177)g\274\307\231\215<\244\343\n<\025\373\232\273F!$\275\373rS\275\033@}<\275\351<\274\351\253\n=Q\274K=6\3077=\235\312\226<2>\300<\341J\312\274\2207\226<1$\023=\027\215\250<n\203\224<7\204\036\275<\242p\274My\"\275\221\'\245<\002%\215\273\033\341\006\275\177\243\202<\257>R=\000\327\027=\2366\036=\n\034B\274+\037?<\334\212,<\310\334j<;<\206:\261b1=\"\303\t=\340\032\006=\336\227+\275-\350\025=\371\222\235\273\025\022R\275\344b.=\347J\036\275\317\307\365\273AoA=\35171=\255\344$=\017\233\004<\237I\226\274\363\010R\275g&\232<4*\270<\365\026\367\274S\246+=J\206\206<\365\370\233\274\366\324F=\237\373*=\333bM\275gJ\361\274\"{\302\274!9\271\274&y\201\271\253\251\273\274<l\214\273\302\273\236<\272\247A<\264\313\032=AW\200\273\227\327\250;\016:[=>\344\036=+P\026=\204}\014=*\276n\273h\343\373:\254\2579\274\313 \023=R\006\201\274_p\276;\000KG\275\206\342\320<\301;J\275\300\327\'\275\237\270\320<\272&x\274\361T\376\272jo\017\275\233\303 \274\234X-\275\362\007\030\275\203|\226;\363\265\214<^\327\314\272\332\034\036\275\'\232\241<\004c\363<Jn#=\264fY\275r\346\021\272\r\262\013=\211\260\030\275\267lB\275K`V\275#\335\023=\216\367D\275\261\2130\275;\204\306\274/\365\345<7\030\035\275\233\300)\275\327O%\275V\250\316\274\000\216\220\274\340\214\212<~\362\327<\262^P<\367*\247\274\321dE<\354k\261\274\002\213P\275\303\203\"=\027\200\254<6\017\347<Mb\336\274:\262m\274\215\212\306<\243\005\352\274\214@\301\274\t\2448\274\277Us<(\263\016=\327F\035;j\320\030\275\274\204\262:\201P:\274\320\t:<\021b\304\274\005j:\275p\016\r\275\370T!\275`\316\"\275\177\221\355<\277\375+=\242\315\337:b\021\035\275\307\321 =\224^\342\274\271y\310<\223\226T\275\211\351Y\274\325T\254\274OP*;\\\236\310;~4B\274\316\340\202<>\310\227\274\351\344\010=\331.\367\274\274\332\243<\237\327\007\275\273\225\210\274q\3306\275\"D\325<m\316\030\275`I\"\2754\375H<*\277M\275T\322\257\272\037\347\207\273\013\210?\275\202\031\263< \032P=\206\301\000=h\376\002;\014\370\244\274.\025C\275\316\327S=\330,I=hhG;\001\323@\275a\210C\274-\213\222\273v\356\037=[l\005<\027v\257<3\262\242:ETD\274\347\277c<\226\026\257</\275F=\253\265\217<m\357.\275\367\260\n\275)\277?\275\372Q\265\274\262\"\010=\340\024\032=\323\251Z=\0276\316<\364]\210<\272r\336<\340d\214<\264\341\365<\320k\203\274\365\tH\275\355\224X\275\230\373\220;b\376\360<:Y\031=F&+=}\344\020=\366n\226\274\322\347C\275\322\366\031\273]\313\020=\267\373\'<\240W7\274\363x\2238\246\214\246\273\212\275\034=q\177U\274\376\3318=\013\016e<L\310\275\273Z:\345\274\314\266\"=\222\252\202;\201\000:\275-\276\032=\227\306\324;\252\255X<\005\237\367<\245\006[\274()\316<\241j\n=\210\003.=\003\320\201<\025\305\021=#i\243<\n\200T=v\351T\274\361\014\365\2744:\212\273n\212\262\273tGS=;o(\275\377g[;\033\006:\275\255:\013=\250|Z=s\371z\274\361V\005\275\267\265\211<\321\017\t\275\324\355B<\321\371&\275\027\372(\275fx\007:\356\361\030=DJz\274\206\r\364<\336\235D=\314\221(<\353M\031\275\200x\r\275\206\027\034<*\275\232\274\3213\357\273\233?\367\274|-F=\244\\\261\273\361\016V=\374\351?\275\257(#=\222 \302\274\214b\212\274xXp\274\334\001\020\275\365\325$=4Y\373:\271\260\025\275\276\246\r=\357\204\203;\313&\266<\307f\335<F\224\036=mD\373:\341\3613\275xx/\275\226\006;;\313\317\001=\345\315\017=z\200\\=\014\364C=\t\2575\275{\321\017=\232#\r\275\377\325B=i\235t\274\226z\264<\215?\253;T\377%=u\240\032=U;e<V\202\017=\027c\301<\344\240<\2756wQ=\274\003\036=\302\243\014\275\276@!\275\315\327\233<\244\260\030\273\233HO=$\'V=L(\372\274\356\374\342\274\3560\341<Uz\260<\337\004\254\274+\362\035=i\257\323\274\340\237;=\232\263\224\274u\346\367\274jNX;\355\340L\273\277}\032\275\313\203X=\210/\206\273-\"\034=\207\325H=\354\306\330\274\320\nQ\275\340\242Y\275\212*\222<\240\311q\274\204\035F\275\2070\035=\324\346\260\274\334\346-\275\302B\333\274K\336Y=\235\352\325\274&6Y\274\307\311\214\274\253\035\027=\271rD<f\\B\275w\235\373\2741v\021\273\020\026\207\274\253\223>\275&*:\2755\"f\273\225\276Z\275\204\023e\274\345\0214\274&@(\273P?N\273y\214(\275/\272\246\274\207\350U\274\231:S\275yy\204\274\2454\303\274~L\n\275\353\317\273<\361\024)=q*\035=\2160\214\274\234\307M\274\277\'Z\274n.Y\274\034\351\354<Y=X\275\002\252$=U\317\204< JD\273-\337S\275\022|\010=\002\355\201<\372f\251<\313\245\321<\334E.\275 \177\022\2745z\t=F\236{;i\267\032\275\226\\V\274\271}\330\274\215\"*\274\322\315\314\273\362U\226\274\010m\017;\360\037\313\274\237\276\013<c\353\\<!\365\026\275\216\307\227\274m\330\t\275\301\013\t=\330m\305\274J\334\356;r$\246<\225\210-=4N\333<\372]\352<\270\260\325\273\024(\026=\242#@\2750\014\251<b\210\000<\362\257\361<\027\372C=\316\346!<^\376\203<\327\373>=\240EM\275\026\2644\275\222\312\376\274\3449\371\273w\350\353<\314\r\373<\"x\243\273\232~\272\274\254\223B=\177\376\263<\rY<\275\220\233z\273,\201\035\275\216\227\347\273V\033[\275\372.1\274f\271P\275\202\314\342<\323\224\r\275\006\273(=\363\334\332<&{-<\355\005B<\263\371\315\274\242\026Q=v\017\316<\362=)<|Is<\226v\257;\245\037\366\274\316\001 \274\\\177\273:\013Z\377<B.v<\354\001\257<c\341 \273\002;$\275i6\005=\230yX\275\227b==\231{\307\274\257\243\032=u= \274\261\301\337\271+\214k<P\346\330\274:~m<\353N\334<\321\262\370\274.\207G=\250\232g\274\333\2607=\323\302\347\274\360\"\232\274\265\313\002=b\'@\274\267\357\214\274\344\276\002=\256\235\025<\236\361\226<\266S\342;\377)\322<\007\037\026\274[\245\037=\3540\025;R\366\203<\031\353\'=\343\337\037=G\321\365\274u\326\\<\257\323-;\240\210U=\377\177\026\274\'0G<\034\010x\274\375\305J\275\207[\262<\265p\016=\"\004/=\355\346.=\003qQ=\244\313\261<\322|\376\272\2655\204<\323\363\006\275\020\256<=hQ\327<\021\363\010\275\222)\n=\243#X\275LV\022\275\211\3548\275t\3351\274\354\003\327\274U\254<=\037\0321\275\215u\021\275\375\202\020=\325\004I\275E}\327\272\224\364\317;\274\n\005\274\"9\234;\330\206\"\274\302b3\274b\022<\275q\027\025\274\211\356\220\273X\344+=\312nX\275\032\344>\275\223\252\335<\362%\002\274\312\312\001\273T\244Y\273\\\344\262;4\0300=Vlj<;\275.\275\247P\324\273\364\200\001=}\321\321<\252\271\224<\303\007\274<t\024\t=\"\300\223<}7\343<]\231\310;\033}\252\273\243<\206\274\022\271\316\273\2350\362\273P\001\255<\004\262J\275\357\263\360<U\2657\275U\363P=\270&K=\243\237\351:\004Y6\275\241\301\"\275\374K\332\274kh \275\237^\n=\233\206q\274\346t\003\275\211\\\245\274[\327#;\256UK\275\205[\265\273\310\241[=5h\361<;\351\361<\274\374W\275^\240\033<\003Q\030\275\034\247C\2758\r\003=c\341\232<\264\024R=\357OV\275\257\365\020=\313\372\365<\033#.;6\001\026\275\325~.=\211@\231<H\220\276<\272V\266\273\315\256\003\275\3670\030<;t\306;\374\373\002=>7\364<\207\230\023\275*\332G=\010J\n=k\371\235<,\020\341\273\326\000\353\274\024y%=q\371\356;%\3045\275\037\375u<\004\320\266\274 \252X\275\177I5\275\004v\252\274\272\354G\275\217\314\024\275\261\226\034=\333b\325\274\330\032{<#\024T\274\031\343W=\225\260#\275\247\353S\275K\\\346\274t\332c<Z\351\016=\366J\202<i\331\331\274\016\242X=J\251\001\275j\360x<\347o8;*\023\335<C@a\274\352\217\036\275\262\260\253;\377\302\021=\317\327\024<\255\025\205<E\244L\275\263\217\243\274\240\267U<\235\321\267<\236[8\274\347t\002\274\337\356+\275\2201I=-\365\260<>\033]=mM\265\274}\363/\275\250\004$\275 r\346<2\244\002\275\350\027n\274\030\026+=\352*\362<\230H@=\315\026J=kl\242\273\230\345 \275\347\204 =\2501h\274\301\\\252<~*D\275m\251C=\034\030\212<=\303\220<\200\346\277<\377\301d\274_T-\275\365\322%\275\333\350{<\370P\200\274\216kU=\373\227\354<\366A\r\275\267~\351<\234\002\265\273td\023=m\272B\275\344>K\274A\257\227\274\212`\377\274\251O$<#\004\277\274u{\003\275\240\360\017=\0174\022\275}\214\316;\303O\366\272t\301\337;.\364;=\017\211\177;\237\322\035\274h\021\326<\237\222\323<;\351I=F\353:\273\234\264\367\274\213\177\033\274OWR=?6W=\022\035\250<\215\361-=\262\327)=\215c>;\232\212\305\274eeK=m\313\231<\r\264\225\274\372\227\014=\002\212<=\r-\026\275\222\206\253<t4\272<Q\021\013=\365\007\000\275\300\320\360<p\205\367<)\033M=\252\341\301\274p^N=9U\031\275\036\304L\273\230\370\223\274\335G:\275\374\374\021\275\307J#\275\305%\273\274\371\t]<\322\311/:\315+[<\034e9\275\324\372\\<\206\372\347\273\rn\'\275A\005P<\306\374\3018\331\317\324\273\027\207\203;T\265;\275\273\247\374;v\213\236\274\233}(=\026\233\022=(\033\023\275\215\311\t\275\331[!\275\010pE=\025\'\"=z\366\276<\302e\362\274\351{ \275\233n\351<P\261F=\2163\006\275}U\341<\276\007\367<\242p\301<0J\001\2753\343C=\256.\260\273A%\242<o\016\004=^_>=f\256L\275t\261\021\275\021\013\345\274\343^e\272U\000=\275\253uI=5\034$\275SNT\275n\355\355\274s\"%\275\330\310H\275\300P\236<\020W\\\275=\2101\275\336\244\271;\277`\023\275#\t\037=\n\000\341\267U#5=\323\352S\275\3422\372\271\361\322M\275\007\367\367:-\267\334\274)\216\0169\3403\371\273\356\273J\274Vr\323<\003w\376<Z\024_\274,\314Q=\342\311D\274\013O\350;s\214\314<\327\361#\274E$]\275\256\3718=\206\264\377\273\013\221\036=*\351N=D\373\376<\367\342\262\274S\245\273\274\302C\261\272\366=\307<\230\236H\275I\325 \275\226\0177=\334\231\024<\311\270E<\313\374N=\037\234\307<7\341.;\217+\322\274\265\2005=\264\017S=\3468C=\027\325\003=;lI\2754\'\277\274%NF=\ni$=\223\210#\275\255b\314\274\376TB\275\016&C\274L\031\223\273)AT=sR\327<D\276:=\224=\017\274\354\240\327\274\234+\'\275\351\3046=\035\"\003<e\3773\275H\235\233\2732\007\204\274\233\274;\275=\364\177<\375G\013=\230\216\024\275\266\234\026\274Z\342:=\204\257\330\273\202r\024\275\303\222\206<9\332!\275\231\205U:k_2\275B\335\010<E%\006=\317\336\327<X\030\001\274\323\244\314\274\230\315\370<\211-$=j\276\r\275M\007\034\275\360\370\201<\257h\362\273\217\036\036=\224\032\270\274\362l\330<HS\036=v\312\035=\242 $=2]\244\272\345\306)\272\240\217\033=<,\013\274^\315\276<\034\236\177<\227\021\n<\214\357p\274@\0275\274$CC=\236SL=\303\244,=\256\'\265:\027\250~<gs\322<1\006Y\275\225\026\026<\206\007\002= \355\005=\3562/\275\335Cv;\241{6=\335`E;\277\001\373<\t\023R=\313\222\347<o\261\367<\316\302\323:\362P\223<L\250F=\263N\302:U;\207<\265\272\036\274\211\214,\275]\237I\275\244S\223<\364V]=\277\235e<\3645\301<=@P=\032{&=\301\313\245\273\270\307\254\270\020G\027=F^O=]\363\316\274\316~};^\035\303\274\275\347[=\t\370\033=\232\237\232\274\210\235\n\275\306%K;\242~P=\331\030\032\273cP#\2759QU=\324\306*\275}\316\317\274\021\305\002\275\202\256N=\302\032\025\274yG7=\345\017\025=\203q\013\275m\026==S#,=\373.D<\312\033&<\231\013\242<\340\0328\275D\376Y\275e\274\316<\016)\321\272gE\200;\024\365I\275A\006\331\273m\376U=\314\n\273\273\016e5=\246\326\247\271\256\244\213:\2718D<\231i=<xO\000\275\365\270V\275\231Y\363;\336\233\003=\3058\"=\254|\355<\0348,=\232\266/=#,\032\275\362\036I= \225\024=\034\025e9\002W#<\204wj<\362\rJ;>BG=s\356\017=\032#\003\273{\246M;\020a\226<\007\270%<\362[\254<\303\313M\275E\014\236\274\372\315\376<lni;[\177\031=}|\376<\264.\215<E\032\370<\001AC=@E;\275`\302O\275]Vv\274\005\336\366\274N\345)=?\256\340\274\235\016%\274\265\022\006\275\321\3632=\315\036\025\275|&R=7\205\200;\364\364>=\203w\317\273J\207-<\033\302\234\271\233^\217<\003YT=\323f\020=\334g\350\2748\257\030\274\244T\217\272\362\002\\\275\232\266-\273w$I\274&4I\274yw\346<-?\005=\227\306\366\271nh4\275\253\271\002\274O\033Y<\210\362\021=\'}=\274\261\314.=B-\260:_\350C\275\"\0130=\327@\270\274J|X\275\225\302\262<\250\237!=\202\355L=\311\007M<b\376L=\177\014O=k\255\022\2752^\265<<\326\206;\270h\001=\2779\351<\210v%\275\214D\267<A\243(=\343\023\"\275\220\007X=\302\312:\275\206\227!\275\027\017 =\0250\023;:\353\027=8\017\200\274\016\033\010\275\261r\345\274\371\322\210\274\013\261\352<\367\270\033\273T\337\027\274\201BH\275\260\2104\275\027\2650=0iI=\375aC\275\254l{;>\200\356<\241\341\031=;g\225\274\301\350\274\274\263\2521=&4\030\273\214m\023\275\337\323\314\272\360\004\314\274\245AT=U\\V\275(\007\334;7V\277<\024\215\n\274tm\r\275p\300,\275P\013\016\275o\303\333\273\317\277%=\352\r2\275\003\3054\274\0070\202\274xd\214;(JE\273\375\001]=\362\256\242\274w\016$=\360\336\303\274q\225\271<BdL\272&\360\036;OfN=\'\355m\274\203\246\2339\371\023\'=\242`F\275\030\3042=\302\276\273<\347\206\202<M\023\\\272\306z4=se\340;\037\014[=xu2\275\356\2706\274\373\312\254\273\277\342X\275\210\261\313\274c\235e\274\322yH\275[D\326<t\215\376\274yF\010\274\177\333\210<W|\251\274\237!\373;)\375\232\274\\\340j<\206\026\354\273\031\323\336\273\346\314*=F\301F=\025\272\022=\233\355\020=\310\013k<\013\254n:|N\355\274t\330k\274{\344\253<V\341F\275\202o)\275\210\356G\275!\375\216\274\t\317%\275\301\317\254<\273\214H\275\253ta\274<\026=\275\003\352\331<x\001\005\275t\207\260<\360\325\210<\025\273G=~\031\261;\371\000\375<\t\210\\=y\355\252<x\373\236\274f\027\366<\246\262\352<}U\200\2740\257\366<\263\267\026\274RN>\275\341u\t=\370[C;\243\235\337<\323\214A=\264\305\222;\016\321\024<\201$\230\274\204_\236;\342\257\013=\207\271_\274\207+X\275;\013\016\274\022`I\275\310\360\310\274\251\231\021=\362\275f:\342\277\344\272\257\202\375;\\r(<\230\rU=\347&V\274+\237\357<}\377\007\273\313\325+=\320\010\331;\210\206\313\274[\240\'=\301G\n\275b\032\256\274J\216J\275\340\342]\273\344A/\275\007\277\204<\366\242\360\274\317\220\010=\034\206T=\276\177@=l\016\234\274\271\257?\274\251\020G=\"\037\367;\324\311[=e\232#\274\205\244\310\274h\037\237<\001eB<\322\266\007\275I\315\031=\030T\020\273.i\260<_\241X\274\332a\324\274\276\236@=\222\033X=\262\311\331\272R\247T\274\250\303\027=t\304\237<%\266(<2\235\364\274\314y(\275\321\2338<B%;=\301+z\274\323wq<\'{\033\273Ry\335\274g\303&\275V\301\356<\3732!=\335\013\215<*9\003=B\322\021=\2636\022\272\003\230\344<\301\2451=*\223\'\275K\001S\273\206o\'<G\230@\275\342F\360\271\327d-\275J\2102\275\030)\037<\322A\315\274 \235.=\034$\201<\345\005L\275\007q\322\274VvH=>G\271\274-\311O\275 p\327\274\217\234-<\202+]\275FwX\275\020\t\000\274\001\353P=X^\347\274\272o\235\274\262\372V=^m*=\315g\027\275\247:\024\275\272\332U\275\241)J=\024sw\274\343\273\241\274\362G\000\275\243.I\275b\235\267<\013\350R\275A\3705=\375\346 \275$\037>=\271UD\275\206\330\000\274%H8\275B\356g\272\303\353\237\274\345\340]\2746\226%\275\255h\364\274\022\346\302\274\274\204s\274\364\232;\2719h$=\333P\356\274\2473\354\274\372\005?\274-H\354\274|A\300\273z\026,\275z|\270\274*\035S=\257\3276\275\232\t\357\274Q\243Q\273\002\305\201\273\237\326\205<h\325\336<\353\362\201<\361\230\253\273\236\026\223\274\331\240\351;\252\021!\275\325\r\024=n\013$<\347\021\342\274\353\241\234\274\027\034\364<R\377\231\274\274\365\335\273F|I=6iB=T9,=_y\356<&J\332\274\027\207\032<\253\371\027=\230G\'=.\350\004\275\254^\003\275k\260G\275\335hK\275]\2362=Aa\252\274$[R\275\036xH=*`\373<\3068D=]A%=\203g\277\274\310p%\274\352X\372<b\361\305;1V@=\353\363-=\261\353\215<\204F\220\274+\260P=%f\270<3\304\211<L\204\037\275\264r,\275\200[\314\274^\227\027\275_\314\n\271\006\r\033=\016q\250<\016\354\t\273\211\270\357\274Bv\343:t\0372=)\245\000<3J6\275 \226\240\274\354\276\213<H\022\347\273q!R\275\370\341\000\273\007C\241<D\306y<a\336\247<\215\366:=\273C\205<\374\301\304\2748\304B<-\314\017\275\322\013L=\355;\312<\323\331\r\266^\026\220:\344!\010\274\307GK\275\222\230\027\275C\367\315<\263\317\031<1\230:\274h~\277<\034\267-=\223\355H=;\274\r\273\200O\205\274]\271\001=\251\320;;\005\357\302\274$Gw;m0$=\257\217?<7;\250<\206\247\026;1\211m<\365T\004=Ge@=\371#V=\253\217$;\271\365\370<\036\033\005<\226P=\275\355\020\310\274\336\364\030<5\373A\275|\357\037=\361LR=n\300W\275\362\336\201<\"\271=\275\017\257\\\275\221\252\177\274p\3312=\254\231\301<M\266\362\274\365\017\323\274&\355\002=\260G\204<i\203R=\372\375\330\274hT@=\312\216\235\274\257\2258=Y\345$=A\251U\275\212=-=]\323%\275\343\204\323;\346\251\000\275Z\014\025=\354\324\\\272\010J+=\264H!\275\203\253\016=\366_I\275\355\325\366\274\355\t\026\275=5%=\253\2532<\357\361\016=\n\235\354\273\026\027\031\275\200\006i<\006N\361\274\366\254\303<*\337-=5\000\"=:\004O\275\345\027\311\273\017\0376=\014\325\352<5k8\275-PW=h\215O=\nV$\275\337T<\273D\003k;\347r0=pe>< F\032<M\2518\275\244\025\210\273L\023S<\370\037~<J\252X\275\226\260V=\247\3201\274x\031\211;D\252\035=\324\254\215\274\311\356\'=#S\\\275n\205\374<\0272\026\275\320\375K\275\243\371\220<T\'\364\274oWX\275\200K1\273\213\340#<\031\251 \273\025TG=v\021\365\273\027V\203\274\207\026\016=\274\'\275\274\243\331\025=\230\207\371\274|\330\3019\016<\022=$\273Q\275\236\2325=\300\026$\275\301\362U=.\303_9CiL=\315U\302\2743\024\025\274\253\221J=4\343M\273\317\367\344\274HO\036\275\331x[=\375\246\350<\201\023D\274n\331\244\274\005\213\032\274\370\353\250;\235&\244<\225\3045\275X\314\210<F\347n<\323\240\337\273Dz\234<k`\010\275\025\024\307<\017\0037=\032bQ\274\r\221\333;\020\355\217;\010\201O\274f\243\311\273\327i\036\2758Z\233;I\320@\275\305B\325\274/\252\341<\237\207\030\274@H\324;\327\244\035\275\363\030 \275}\002L<\t;\247<\002\000\360\274\214\272\205\274^\2232\275\n\350J=L\247\262<\373(s\274\301\010\235<\356aQ\275\2042k<e\356>\275*\010$\275\225\3174=\002fB\275\177$\022=\366\326\275\274jq5\275\016\264\226<\224\316\330;\316\3107\275H\"\271;\005\345\010\274\303\221\005=\212{\255\274[\231\t;V\003\025<\266+\036\274\343\034\\\275E\262\2369{\277\324\272\372[9=\243v\016=\t\303V\275\0248\022\2745\204\322<\361\236\245<=\3278=.\202_\274\371\312\336<\336\005)=\320\245=\275\032H\300:\034\350\000=\224y\006\275\300C\324<}\006\344<\361\243\016\272\007\337\227<\226F\264\274\220\022\030=\353\250\362<\210\262%=\266\227I=\037@\374<\232\204S<\006\306\021\274\302\270\016\275`\323\321\274\020\361\302<\3212*\275iVH=L\220\213<u\231\240;\025\2445=\020^\310\273\224/D\275\303\235\275:\265D&\2759\374\247\273\362\361<\275\356\370%\275&\202\222;\255\253\365\274\362\017\\={\306I=\036L\225<@E\231<\202u\251<\333\377\265\274q\020 =x\355\217<0zU\275PY\274<t\376t<t\"Q=\026\262\255\270\366 e<\344H*=\211(\341\274me\020=\323\377\033\274\242}\327\273\324\220R\275\342\266m<\2203{<\205\275A=Sf\007\275\361{J\275\\\265\263<|~7=\316\033/=Pl\251<\\\314\031\275\r\303B\275/\n\027<\311p>\275\232\306\n\275=\253[\274y`\335<\376_7\274p\005\262;M#\257\274\33519\273\253O\353<\017\277X\275\371\326;\275\330\036\243<e\333\027\274az\234\273\231\367\001=\262\224\342\274|\364\223\274\004~<\275:\345F\275\323\013\223<\001\264\375<\001*U\275}9\351<CP\333<\025<\035\275\256\352R=\312\251\2026\347\341\020\275[\375D\275\231\350;\275e\343<\275\312\232\372:O\027\211;\322==\275j\221/\275\037)\031\275\242:\313\274\303\350\027=37y<\200\020\303\274\223\341\006=T\2560\275O{Y\275\333B\347\274\225\276\226;\264\"\034\274\203\240\037\275b\033W\275f0\270<\276\230\001=A\245\321\273h{%=\355\377\030\275\242\372|<ChG=\343\005G<\207\213\001\275\337\327!\274\254\377\"\275\"j1=\261\327\224<\000\205\347\274\343\364\364\274k\332\340\274\220\357B=*\005G\275I\366\202\273\367%\3059\\\0255=H\263\030\274CO\257;P\340\254\274\304~4\275K.\273<L\336F\275\245S6\275\363\026\250\274m\340\356\272N\034.=\014\323\271<\020\307 \275;\002\017\274\276\241\000=\265K\213\274-\275\255\274F\362\230\274\234\200\227\274\031\014[\274\177x\343;\364\tO\275\345j\215\271\320lU=\013\267W=\254\020\213<\343\263%\274\031\301\021\274\272e?\275\245\375\005=Zv]=\251;\206\273y\364\033=\031\"\020=\351U\341<\227\361,;O\353\233\274q\256I\275i\352\310<\211\220A=z\241\345\274\350\264\266\274\3273\354<v\341\025\274\3557\";\350\352<\273\236\036\023=v\354O\275\206\373b\274\351\2213\2756\336{<U\'k\274R\2167=s\362<\275\245x\030=/\035\234\274\357\031U<z\274\006=\220\223\240\274\260\037v\274\"\"\003=rz\226<\177\375\375;$\235Q\274\210\265\232<\321x\225\274F\322W\275\301\034\016\275\037\313\350\274\347\254\243<D\374I=\321g\377\274\332\364S<X\370\345:\373\t@<\227\357\013=\331t\265\274HU\246\273\246\311\333\274\303\373\021=~V\001\275k\025\025;\035]\354<\324\367&=G\365\314\274\334p\347\274\351\367\247:<\355U=\037\213\213<\tm\323\274s\301\003\275K\210-=%\311\336<\355C\251\274h\223\376\274\344x\326\274\003E<\275%\331C\275\274SZ\275\t,Z=\304\230+\275R\'T=\252\377\022<\243\027\212\274\342G-=Mg\331\274B\352\275\274\207\t\201\274\302DW=\321\277\\\275s\321J\275\3766X\275\372\333!\275y\341\207\274\356H\373\273\010\313\n\275\023\257Q=5`C\275-\004\320<\007\035\022\275\310\350\r=\371\337\024\275\230\375\r=\363\255~\273_&\363<wMK=\305\207\001\275\200\266\327\274\374eD=\221\253\316\273\250#\023\274;\224\032=y\271\033=\206%\223\273\320bF=\034\210\253<\213\221\013=\252pZ\275\324U\304:S\234\221\272\266G\036=\342@\'\275\010\265\013=\224LR\273\322\244[=W\306[\274\225\350\232<[\333\373<\342\250\336<\020rr; \023\345<\036\264\247\274b\315\300\274\027\205\030=\327\265\002\274\377\3447\275U\335\023\275V\344\013=\037\016\030\275\225\244\201<x\037\010\275\2722\016\274\214\022\240\273\316\322\322<a<[=D\232\260<\347g^\274\352\3107\275\022q5\275\375\215o<\257k\275<^\3620=C\370\232;\375#0=\035\3311=o C=v\231\332\273FW\240;\250\0340\274\352\034\000=\006(A=\254rJ\275@\303K=ba\037;$2T=\273y,=o\026.;l61=\362\231\005=\001D\357\274t\345\006\274\370.\325\274\213\304\004\273\006\262\255\274n\363\220<A\025F=\262\327\024=\253\276\'\275/\31019\0011\003\275\211\003\031=\215\003\201:\341\211-=>\215;\275\310n\346\274{yS\275\023\234J\274\001\215Y\273\\\262\277\2745\3218\273\255a\025;\003\200T\275-\336\001\275I\206(\275\333\3136=h\336\023<\246\235 \275\021\232|\274\252f\342\274\265|A\274\223\236\037=T\026^\274\004\356\010=\254\302\034;J\032\\\275\nu5=P7\370\274,\027\031=\377B\215\274,Y\265\274\2737\362\274:\0172=.9\205\274|r\'\275\020&7=J\333,\273<r@\275u\312\310<\276\267\325<\246\353H=\324\030\007\274~E&=\247\240B=^\tE\275\205\306\346<\356Zl<6j/\275\021)\235\274\3738\327;s\3053\275\245\316+=\3778\014<n\003+\275;H\337;\367o\312\274l\302\276\274\327t\275\274\351\350\301<\027\377R=\270`;\275Q\204\256\273\017\347\010\275\236}V\275\334\343\030\273\232\271\304\274\371w\333<\306#T\275P#\001=\375\342\217\274\n\375\236\274\022\013\017=\372~V=V\002T=\316\006\254<\031\215+<\220\'\033=!<\247<\277\321N=\233\340!\275k\231x\274\335l\"\275\277;[\275/\035\360<\364\017\260;\034\234\272;(\341Y;\347\234L\275V\300\374<O\321*\275nxU\275$\333*=l\222#;0i7=/D\270<\236\321\361\274\270\036\016\275l\361\t=\004j\370\274c\325\231\274\3223\\=a\315\034=\257Jy<Q\3173\275\264@\031=\330UG\275Y\327\271<l_U=\263\362;\274.\374X\274\354\202\236\274\037%\337\273^P\367\273\025\235V=\3402\246\274\000r\263\274Y\344\220\274!\215%\2732l\001=\022\304\257\274\306\215\333<5\003\272<tO\010\275\016\371\023\274\005\214\017=\315\342\240\274qe\353<i+\025\275c\335\311<\352\250\033=\322+\260<\217\3719=9\221d\274q\276I<\034\324+\274R\346\006=\234C\214;\324\370)<\350\200\016\274\224\223S=}\377\214\274\344_\313:\0337\342\274%\r\265\273\363\023\226<\374\n\305\274=\335s\274p`,\275\003\272\001\273\025U%=\351]I=L\260\257<\220z%=\324*\021\275\032\263\314\274\342z\004\275%XS;\374\346\302<p\272G=p\016\037\274{\\q\271xc\356\274\367\232S=9\366!=\323s(=)\003\006=\262\247\253<\214\024\331<\r\357\254;\2657\367\274@\3764\275\356\222K\275I\343\027<z\037\325<\245 y<\276v9=\226\224\3279\351\300$=7P\026\275\033\202\372\274WM;\275\036\372\023\273\277\256\267<J\326\220\274\260\316\361<cp(;/\326G\275\263_\202\274j\007\244;$\207\336\274\3638W\275H\216==4\'\036\275_j\034=L#\253\273\320c\032\275\033V\345\274\255\'\253<S\377Y<D\004\037=\357\347S\275L`7=\"\355Q\275\213.U=\022\315\232\274\014\004\r=\310\032?\275\225\306\003\274\222b\270<F\245\027\275k\215\310<\310\222\";\242\010S\274C\r\027\275\246\344s<z\201==cK\326\274\021\271\304;g\223+=@\311\027=6#\344\274P\3471\275\224\203\032\275rF\007=\265i1=\341\312c\274|d\306;Ki\032;a \026\275\370}>=\355yL\275\201\224\243\274UNR=\213\267\330\274y\236Y\273\263\277\371\274\010\226f;C\362\023\275M\013\310\274\032\016Q=\376\227V=\243J\'\275\036\256K=\226\020\'\275\306o!\274p\216\003<\375\204\021\275\346\247\241<1\324\343\274\200\206\034\274\271\r\377\274\340QB\275\303\307\357<\267\324\251;v\205\362\274\\\034\"=Ng+<L\025L=\234\324\007=\014\353\254<F\335X=\020\364\312<\231\272\337\274*\203?=\230V\242;\363\254\353\274\021\2512\275\005\222\205<\243\3239:\034:*\275\032\234D<\241\217R\275\260\265q\274\371\351u\274H\361P\272rt\'\275\035->\275\255\273\025=fh9\275\362\337\372\274f\003\022=\0370x;\275C?;\2158V\275\337}\030<5=c\274\320\274\262<%u\014<1\254\247\274\244\213S\275$Z\030=\251\021\277<\014\226V=\352C <\240\230\026<\242\333c\274\261\037\004=w\362\215\274\326\031X;b\214\243\274\310\031U\274\237\261\007=f\206\027\275\247\177\014\275\211\031E<n\266N<Z\017\033\275\376\255\017\2749p\242<CQe\274[R\006=\353\221S<\266\354\000\275\021z\204\274\372_\354<\200\260\332\273E /\275\310\2701;\'0\202<\031m\010=~[\037\275\321\266\375;@d\246\274\257\362\370<\364E\310\273#\010\250<\235\'\035\275\351j\246\274\252.\220<\013\212/\275\351P\254<\343\236\223;Sc$<\320\343==D\247?=|.\356\274(v\005\275\021E\256\274X\337\266<\301\361\272;\254\366\024\272\010\021P\275*j.\275\314h2=m\2546\275M\351\314\274#z\331\273\024\262\007=\236\203\223;\312+\305\274&\366\021\275\t\321\366<\221uC\275\276\353Z<g\017\364\274\310\000\357<\274\004J\275\206\313\347\274+\210\'=\264\245\025\275\225\332V\275\241\317\214<\323J\345<|\356/\275\204\177\242\274n\257\215\274\010\353\323\274]\207K<,2\310\274}wK\275\267\273\367<\271\2471\275\315\010:=^3\035\275b\333\026<\301\360\234:\321\005w\274\n\020<=aG\t=\343hs<\311{3\273\237\253\246<K\027\024\275\'\312V\274F\3226=\265\247)=(D\262<\337\207\035\275\242\316W\274cr,\274\013E\\\274\376\250\300<\010\271\203<a\244\201\273\'\352[=\366-\003=\350`y<_]7\275\245\201_<\313\211\313\274y\261a<\271;\036\2753\325\223<X\307\232\274\226\014\345\274\322\3043=\357d\270\274Y\034\340\274\214>\264<p\376L=\334\204\214<\366u>\275\361l\377</cG;\276A\316\274f\022\344:\006\213&=b%8=\341\320\300\273\263\004\'=\353>4:\t\315\360;\337P\035=\217\266\274<C\230\026=\013ER=\251 8=%\352N\274\231g@=W|U=\206\246O=\330\320\253\274.\316U\275\213\354\024=\353\231\007<\002\002\030\275\301\3203\275E\023-=\272\324C\275v\2612=\262? =~\201)\275\260\027\3328\256\211\330<\030\3607=WS\361\274;\2627=\233\372%\275\305h\036\275\215w\"=\344\223\242\274A\301\332<\210\361\253\274}c\352\274\241i<\274\007\'-=\246\376\304\274\331\251#=\227\330\017=\307R@\275(P\257<\020\020\245<\201\213\224<\361\245\206<@?Y\275}\031\230\273\246r9\275gL\276<b\354\017\275\225\025\034\274a\033\032<\273G\260\274f\203,\275\3725\303\273\234P\035\275\300\372\346<QZ\\=dZ\007\275\205\207\224\274\230\202R=\233\266D;\267\333\177<\270/\001\275\033\265C;\376G@=\200\340\243\273U;#\275\205\003\215;\213\235\215\274k\277@\275Z7b<\212K#=t-\021<\270\246.\275\022\305\273<S\242\215<\004\203\226\273\272k\242<vy>\275_E\317\274\0169N=\227.\367<\303\2154\275\025N\202\274l8\224;\020\224\326:\n\266\r\274M\330\232\273\253\215g\274\320\nR=\313\346J<O\204\001\275NL\236\273\334\000\\\273\224\031;<\273\032G=\030\216\374\274\030\223\225\274{\300\354\273\273\002H=.\0324\274}\343\214\274\313D\r\275\315\367\350\274vgP=\335K\025\275Q\256>=A\321\223<d\334\023=2\231\352\274\271LW=\021\351\005=\254o\004<t\214\301\274;1E\275\036\226O=\265\262\333;D\227\214\273c\215\017\275oz\266<{\371|\274\331\356N\275\276\273&\275\023\247O=\014\321\026<\357\374\270\274\351\3236=\216\n\356;\261W\343<\261\016@=\027~\224\274\312r\260<x\264Q\274\345\201\257;HG<<\265S0=N\310\337<\026\217\373\2737\316?=\325\257\036\275\237\241\246;2:0=f\003\'<\340\342\376\274S\236$\274\266\264-=zR\301\274\373\205\354<\014\252\345\274D\273(=\001\021b\273P\016\037\275\314W$=\264h\027=\363\212\332\274\tZJ=v\350\223;%$\010\275\317M\206<\334\370P=A\202\006\275H,X\275W\263\032=o\023\313\273\241hK=\210\262\301\273\n\314\231<F\225H\275\t=\r=C\262\'\274\267!\360<\333\316\034=\345\266t\274\362\234\376\273\034fF\273\222\360I\273\210\210>=\342\306*\275\350\310.=`\026\254<\370p/\275]\313[\274\235\310\360;\316*,\275(\223\243\273\262\233\321\274@}x\274r\360\353\271\255o\377<a\0277\274s^Z\274\003+K\275_\317;\275z\352\240<2jL<\234\023\365<rh\025\275\216oC==\205\274<\347\374,;\377\035\231\274\216a\361\274\032\340=\275E\371W\275b\n8<\3771I\275\021\377R\274\345\023R=(\204\305\274\t\274\003=a\203\271<\201a\311\272\314U\204\272\266\275\340\274\016\207q<E\022\003\272\346G\007\274\002\0078=2h\253\274\013\321\030\275l\201\020\275\271\004\257;$\260M\275?%S\275\213\2014\275\311\221\361\274\032&\356\273\003\210\250<,\370h<\242\000\314\274%\302\344\274M\350Z=\3612?=\233\273\271\274\316\254\355\274~\307Q<\301\252\t\273W\004U\275\351\021M\275P#O<\007g<=\346\362\206\273\344\013/=\222\305I<s\2322=d\272G=\342\350D<\247v\273<\2229\221<\313\001\330\272C\002\014\275e\252\177\2747\017\235;E\205\263\274Q\205\036=\304z\034\275\310UG<T\314\351<[5Y=\\\232\035=\205@\"\274r\376\323\272&W\027\275\026\350\354<\253\311@=\025N\020=\366k\201<u\\\025\274\204\206\371\274\2370\226<\027C\325;\273d0=zlg\274\355\356\223\274/z0\2750F\216\274}\n\206\274? \231<\305\203\006<!\035\336<0>)\275?\220@\275\t[\237<\277w\002=\350rF;6)\360\274\333\2403=fe\270\274\307m8\275`\325\030<\275\375.=\335\021\276\274\336\255\013\275\t\200\265<\314\rZ\274\341n\226\274\372\"\363\274\231\343n\274\265\207\337\273y\271(=\035&\377<t\271\344\273\217\352\"\275\023\2708\274\317\034/< P\'=\004\024\343<\275K4<|\267\026\272\200\014\256\274\350\276%\274\317\241S<\036\212\016\275)\313\307<8\315~<I\223%;s\224M;\033\353J\273<mC\275\321\240\271<\336\327\363<\241\201\036\275\272k\315<\240y9=\272\210\244\274\220\234d\273D\250_\274\345]\254<V\331+\275_K\252\2742oV\275\220\304/=\037\327\000=85\346\273\214!\274\274\353\260\346<5w&=\275kS\275\327\006\022\275\340\270\235\274\r\263\342\274\023\337\034=\214\344\225;G/a\274\311\235S=k\324\375<\363\235\035\275[\3142\275\330\277\372\274\316y}\272\275\036\335\274\007\357\275\274\312\331\004\275\223\334}<\323a\270\274\200r\336;\374\201\023\274\262\343\023\275\342\240\367\274\177N~<3&T=SU=\274\200T!=\246yD<u3\255\274\206\3776\274\001\232\022\274\317\035L\274c\341C=YPM\2744\307\234\274\325\242\004\275\314\027\206<i\274\252\274\231\366\337\274Q|\020=\312\243M=\373\236\r\275b\036\007\275\300\r@=\316\301\254;\r\004\246<Fq>\275\300\013#\275v\350\340;}H\360<m\222D\275\223\263i\274\251\226+\275\246\331W=* \302\274\251\\$\275N\356\235;\"\336\010\275\346U6=\306\035\215;\275\240\335<mQK\275s\310\005=T\330\335;\366\321\331<\250EE\275y\273\\=i\362\001\275\217\326\036\275,l\352<!9\"=\210\304y\274\000\273\374\274\345\241M;\305EN\275\302\313\\\275NX\035=\376\377\210\274\331\307\323<\205\2078=>\365#\274\330q6\275\264EZ=\371u\035<&\223\345<\207\017\025=\006`\376<\376\2409\273\357\234u\274Mfp;\033{\364\274\037\\\307<\273\354\271\274T\335-\275\265\204\032\275\n\232\034\275\004r\303<[t9\275\252\036\343:\026\211\223<rMR=\026\350F\275i\336K\275\376\354\241<r\2742<S\017N=I\342\000=[/~\274n\'U=\014!K=\021Z\000\273+\024\275<h\315<<\373\352\311\274\206Q3=;q\270\273\365\356E=\235\253F\275\272\240\203\273\017,\326\274\215\307{<\362\362=<\303z\347\273Q)\026=\265z\265\274J\233\013=C\202\363<z\026:<\361\214\271\274\263\214\325<U\367\023=\346;4\275\241\005\207<\361\236\324<T\034\211;\005y\234;\010XV\275\"D\257<c\205\026\274\237a!;\366\2518\275\001\336\025\275\027\241\n\273r\267\"=\203\310\303<4\320K\274\004\010\010=^\323\251;Ia\273\274\342k\013\274\002b\200\274\237\322\366\274\341A\017=\261\014\311;m\320:=\267<,=\245\264E\274\363\306L=a\004\332<\025\235)=\3020@\275;\221[=)f\341<L\241L\275\353NY\275\370\000;=\260\374\315<\247&Z=Am ==\245\016\275%q#=\027\246?\274\315\017R=\262bF\275\350$\000\273Jy\356\274\301lN<j\377\374<\\DU\275\030p\264\274\275\251\273<\300K\301\274\213\303C=\320\026T\275\320\004Z<\203\311\270\274vX\036\275\003v\261\274\220U_\274\343\311H=\202\336e\274\370\225\033=\355\332\032=X\222L;~\002\022\274,\231\256\274\300r\217\274\030\312\253;j\200:<\3728\002\275\001\323%\275\002$\n=\022D\020=\254dl\274+\342\322\274\312:\202;K57=R\035\211\274\003\330\022<\207N,=_dN=N\337X=\215I\006\275\005o*<ev;=\330\214\"\275\223\271B<@\266\r=\237\377+=\304\3015\275\244\362\"\275\272\313\271<c\0362\275\3018\014\275\n5\242<\205\325\237<\377)F\275\r\346\"\275\247W\371<W\356-\275l\210 \275\373\265<\272\005^&=\234\277\020\274\nd\025=<\233H\275\n\241\033\273\027#\355\273\230\'E;\246\227 =\224\014\006\275o[5=\375N\223\274\367\273\001\272\310W\021\274\004)<=\006x%=\201=\277\273Q\327\020\275w\033\323\274K\r\226\274\275\265\314;\307Z\253\274,\321\362\273\377\366\335\274\323\217\033\272\236v\335\273\243%L=>b\237<\351Ug<\250\0339\274\021\n\224\274k\036\373\274bV\275\274\235\375\345<\213S\020=r\305\245\274\245\"K\275~\227+<\255\212?\275\370\273@\275\260\271/\275,\216\373<\347\256\002=%\374\030\275)*\312<LG!=\275e\274;\037i\005;\311\027\375<\213\001\343\274\356\207,\275N(y\274aj\233;\346@\313:F\215\357<\311$\035=|a\321<\245\236\200<4X=\275\014b\"\275jgV\275\323\342\361;\332\235\266\274\240j\354\273\356|z\273c\320\326\274\317\375\274<T\323}:\240\272\302<N\214\214<\216m\332\274u\\\210\274\020\207\276\274\362\240R<J\277%9\211\371\327<~\271\003<\335xQ\274\037\2071\275p\\\343<\214\244S<\006\223\330<\265S\333\274\235\273O\275\324\351\016\274\001\013\207<\206\351T\275\346\364\"=v\010\232\274\247m\023=\317\3300=\201\315\310\274\314\213\371<Q\336\211\274309\275\323A\256<RY\255<\020a\330;\340\236[\274:\240\026\275h\025 =\\\371\214<\255\227\355<\231\177&=,#\036=\271o\037=\261\267\210\273\237\010<\275\013\320\312<\2336W<iP/\273f\3636\275W\233\001\274D\300\325\274\261]&\275\237E\355<\356\t\275<\264)\370<\3041F\275\207\2370\275A\323\020\275\243\375C\275N6\t;\200\n\026\274KAY;0d<\275q\356\246<\342\003\344\272j\205,\275-\261\024;\371\037\035;\244xL\275\320\3000\275\251\\+\275\253\017\036\275\207\344\024<\214\226\017<\377\344G=\031|P=\016C\375\274\303.\023\275x59\275\\\335G=\006\031\226\273J\2500=\023\r\243<Y\200\037\275\213\351W\275N\371O=\3546R\274\375\246\022=I\275\233\274\\\255\255\274._<=\243sL\275\303\270\315\274\347\250}<qP\365\274O\310C\275\0040\020=cF\343<i\364\260\273w\202\336<\211\347\356\274[\276\311\274\031\014?\274\016II=\353\237Y<C\031\013<\r]\017=\262\262\263<9m\275<\374d9=\301}O=\253\311\030\275\233\326\034\273\3427L<%8\303\274}\260\037\275\204\010,\275\332\306S\273\342d\007=\305\340\215\273\351\021x:*\302\027\275\261\326\331<\205\305\333\273\003\352`<\326\317\373<\204T\336<\025/4\275\2039\351\274\245\376!=C\027H\275O\310T\275q\311M\275c\207\323\274\250\036\270\274R\202\226<\376B\t<\027\3570\275\363\371O\275\306G\010=\036\035\344;\263\027\035=\031>\007=R`\303<\213\347\237\274\275A\033\275\207\313\360\2749]H\275@\205\353;\336\273\023=c\255\345<\347#A=Bu\373;\232\003\000=\\p/\275\246\251\274<\'T\236\274(F\306;\'\337\274<\246\360\031\2757o\026\275\265\340*<\201\023#\275\310\361:=\236\220/\275\236\300\371<\271\341\030\275\327t3=\332\372\372<-\346\250\273\274\214\360\274\301\257J\275>N\244<q\240\r<\276\r\364<M0l<V\376\332<U\335=\275\246\216!\274\360=\366:-\231\'=\241\334b\273\006<\330\274\022[\276\274\337e\240\274\226\333W=\034\305\321\274\365\206\241\274(\315\024=r\205\t=\007\335\330\274\212b\333\274i\030\253<\213~-\275\310\260\330<\0141\t=O\321U=\001W\354\272\231eE=\365\223Y<\215\275;=\206e\320\274H\275\021=\322\343}<I9\033=\300\001\016\275\352\253\236\274\217%X\275\367\256K\272\020\360\024\275|\337\232;E\340\030\275\364F&=2h\032\275^\234\364\274\235\036_<\301~E\275~\247G\275\206\364\\\274.w\003=\260\244E\274\022\357%\274\354\276\024=\250?\034\275a\274\367<\202\030x\273F\340m<\231W\213\273\344\024e<\214\342\031=K\2015\274L\260X=JM\026=\353g2:jO\272\274Y\3458\275\271\363\"\275\340\303\016=\203d\024\274(\366\312\274\014\014U=\303$\252\274\005\372H\275\025\332\r\274\034\000K\275\0373-=\335\330\020=\326o\006=\362\\\357\274\316\337><\006_D=\203F]=\216c\017=\343\275\035\274\203\341Z< \017I\275\245s\247\274\177^\034\275\252\177\303\274\000\0379\2758\242\364<\354\271\365\273\026\220!=:\3340<\010\376A=\373\365Y=\306\177\260\274]\262\336<\000\277\033\275>\205\003=\r\262\324<\023\230O=\233q\345\274\250 \006\275^#\025=\336J\341<\236\207T<\t\014B=\307\274\010<\265\224\037<\372\0203;P\275C\2753\301\325<e\344X\275\270-\002\273=\017\230\274Y\363V=\020\370\325<\303\351l\274+\351\'<y\360\031\275O}\"\275x\334\274\274N\3560\274\372h\005;\343_\031=#\252\216<\222\345P=8\255_\273\201\332\023\275\270\000B<m\022\'={\263\203\274\221\210S<a\002 =G\'><\244\030P\274\311\362w\272\272\236M\275\205\307\230<\332\253==h\250\010\275Q%\241;/|X=4w\307\273\354 \344<^\002A=\023\323\375<t\201\336\274\213\345:\273\362\253!\275\267\353\013\274\\\304\305<\353\247\343\274\314q-\275\342\024D\275\341z\340<\313&6\275\004:i<\207h\"=\255&S=\221o\260<|.\026\2758E\003=5\267\"\274\216a\003=\032\r7<Eo\310:\261\270\005\275\232\213\271\273YeF=\300\000\243<\203\0267<\272$V=\272\267+\275\312\0214<g0\023\274\340\303\366<\360\032n<\235\267\203\274B\344\217<\251^\003=\306\030;\275\034\373\344<W\330\022\275(W\327\274\025\220\034=\205D\275\274>\366\274;\231\305\006\274\263\242\013\275\346\265\t=_\265\n=KUi\274&\200\036\275\355\t\032\275\004\2555\275\322=>\275\322\3763=\335\335\024=jYW\275\003\300\356<\246N\354\273\332\223\335\274\031\214G\274=54\275\257\231Y=\372h\024\275\351_[\275\366\351\360<Z\236\026\272\240\230\353<~\014\210<\177\360\224\274\302\007A=\337\356[=y\016\332;\231\033 =\2075\"=d\346\201;\022o\301<A\263R\275\227>E<\337\217\226<\2775)\275=\301:;\264Y8=\212\322\212\274]\2656<\\\357\326<\030\250\255;\200\234\264<1\005\021\275\330\2501\27312F=\342\2461\275\3209\220\274\027\207\365\273V=\303<y[\010=j!\340\274\347\210\014\2741\272\273<g\323\021\275\332\316W<c\027\312<KF\203<\002\205\304<D\317\232<^Z\313\273\227\347H=7\304=\275>\3047\275\342g\270<\005\210Z=\325`|<\275\302\246;\311;C\275\001\311\003=\234\234\310\272\377\210E\275\370\215\010=\000\346\351<(QI=O\217\250\2744!\264<\372\0025\275\244\003\330\274\206w\324<M\366X=\361.\314\274l3\352\274\334\333?=u\274X=\232W\030=\347\213\026\275\253q\225<,\274\237\274\346\000\211;ky\017=5\010A\275\273EN\2755u\333<G\250\003=\264u\275<\341}a\273\001\006A\275\251u\001\275\177\343\"=\227\254\272\274:[]\275\367\n\257;!{\273;\255=X\275\335e\305\274\223\361m\273\374\266N=WB\225<\214\002\326:\001\031\014\275\366k\307\274\036\324\340\274\215-Y=\030{\245\271\232\022\211\273GE~\273\010w\000=\313\033t<\316\211:\275\376\371\257\274\325\233\305<A\035\005\275P\215\374\274$\273\037\275\327\213.\275\355[\230\274\220\250,\275\233Y\031<\332~1<g\201F\275\307\324X\275]\225T\275s\364o<X\032\376:h2V=\212rP=O&\301\274\212\017\377\274fi4\273\217NL9\357i\\=\241U\024=Y\327\277;G\tJ\275UK\t=\232>\3367\313e\017=OXL\275\006\025\232;\244\262==\277\236\001\275V\231\022=n$0=\316/:=t~x\274\312h\347\274\337o\033=J\375\252\274\316\005\344<p\177G\275a\346R=s\203@\275i!\023=:}X=\321\244\253<@8;=\363y#=(\315B\275\362ol<_%l\274l\303\031=iV4\274\027\002\321<\r\232[9\322\n4=z\003$=4\346\031=]\325R\273=\351\254\273\224\312<=\311\r\320\273}_\236\274\204\0067\274\034\013\351<$Y\302<\2007\234:\372C@\2759\306\365<v\215X<g\274\'\275\322\306A\274S\027\"\274\t\373?\275cW\332\274!\376\207\274E\244\274:\036\276Z\274<\276\327<\343v\026;\347\213T=.0\006\275\334H\264\274\244\'\211\274<\300\231<\341tW\275-\2306=\226\354\312\274>\005\036\275\217 \t\275\3504\262;\261\242t<#\2760=%}\200<3\375\321<5\035\215<\277\0359=\276O2=\204\304\213\273\310\317\n\275\343\360\t;\010%G=s[\000<|\314\230<3\346\353;G\020]<\211\256\356<1\202\257\274*>\222\274\225\316\\=\215G\267\274\312\315\017=l\021A\274c\235\007\275O\230\036\273\301\314\272<#o*<\220\314M=1\356\020=\365\266\000\275\275v6=\206\205\366<m\004\003= \361\370<\210\000>\275\252[\3629\007\374\317<S\302\266\274`\274\201<\277\314F=\215\205F=\201\360<==\020\257<\333B\r=<\242\036=\355\351\221\274 yN=\231\036\030<4\367\240<\223\322S\275\332Y<<\"\013\016\275R\000A\275(![\275\246\354\311;\007\034,=!\324q\274{\2215\275\237<\033=d\347N\271\220\341\220<\264d\\=\257\245`<\326&0\275M\0026<\021\344M=;\021y\274j\037\232\274V\033\306<\006\025\340<[\371\205;\333\350\243:\245R)\275\357lO=\272\002\266<k?\371\272L\210\260\274p\252\367\273\034\022\243\273\306\377>= bW\275\342\375\\=fO\031\275<\027\363<Pi\000=\230JW\275\320\312\033;\375\330M\274\215\364\021=\201\272P\274\210\016\301<n\216\t=2\005\273<z\3677<-\363B\275q\201\350;\033\2659=\031&\005\275\2065D=\002\2013=\365\333[=\362\236\306;kv\016\274\017\253Y=\300\245\314:\312\353L\275\030\217\366:w\220\016=z\246\027\2754y\253;k\203\';\017*\337<$\0035<+\304y98!\225\272\3770\244;\374\r\'\275\351h\016=\023\212O<\356\356\230\274\352\014\372<\326\025\376\274\353\270\"=d\037\354\274\264\371\356;\255\023\203<]\364\237<\247\030d\274xv\375<?\237\347<O\362H\275G\250\362\274)\310\270<eS5\2750\025\343\273E\2207=\353P\227\273\242\355*<\317\307A=\372 2=\310\355Y\274\336\355\025=\377\'\331<\357\366(=\212\303$=\036\367T\275\337f{\274\213\216\r\274\246h\371<>>\230\274\020\013&\275\002\336\\\275W\252\025\275)12\275\225 \267\274\2670J=\2339\"\275\254}\235;2C%\275\265\252\207\274(\213\327\274\001\352D\275\320\250/<f\030\250<M\035\006=3\324\300\274\373\377-\275\212\263?=L\211\346<\002@A\274v\0246\273J?3\275\312\026G=\213\221\206\2740\271\247<\303i\233<\013\021\345:\212m\252;\371\017[\274b\030]<\323\325T\275a\345\231:\002,*=\311\314y<+\276i:qH:<\346\222\231\274\354\205\306<Y\004a<\250\321@\275\273\252\327\272\334%\251<\206\372\335<GB\013=g:R\274\265 Z\275\nl\'\275\"\355L\275\321\340\"\275\357\242\263\274I\n\021\274I/I=\231VY\275`m\035=?\\\321<9\016\037=\006_\207;&1\002\275q\034M=bgM\275\243WT\275=\331J=\277\214\377\274k\370@=\355\322o\274\222\347\365\274\333jN\274&\037*\275\225}\327\274\315gR<\257\237\337<\246\274\222\272\243\367\261<^\307\201\273U\t\375<\025\026u\274\226g\210\274\214\334[<\242fZ=\260E\271\2746[\247\2748`\361\274\356\316\340\273\324\246\215<@\273\010\275!\240\2659B-K=\263\223\"\274\346\314\016\275l>\333\274FZ.=\216\376g\273&2.\275\274\327@=\277\365J=\255\026\\\275\000\177\263\274\335\272-=k\327\020=\006\306B<T\237\201\274\273\3034\275\001\316\306<\274,\177\273\367\346D\272_\307\003=q!3=\342\375;\275\273\007\221;\006\373\016\275\374\025\031=\205\001$\275\347\316\355\272wco\274H\307&\274|\336\344;K[\037\275\203t9\275\035\253Q\275\035G\367;g\245B\275x\002\266<_\253\316\273\225\240\364<0\233K=\2403\021\275\034S\215<\247\376,=l\271\261<Z\262\203<\002\217\220<\257\242\241<$\330\025\275\366}\330;\277\240o<Jk\203\274\0139E=\016\310\177\273\004\253\302<fUY=`QQ\275W>7=\235>8\275`\363\263\274\257\016\300\274\252\t}<\301e/\2758OQ\275H\335*<\307\005\246<2\316\274<\325\344\013=K3,=\337m\332\274\200\000z\272.\346G=Tn\034<nb\375\274B\245C\2723L\n\274\273\032M\275\234\016\360<\252gw<\264\216z\273\324U\251\274\355\r\305\274\305\230\372\273\336\2317\275H\324\033=\365\235\307<\256 \310\272\267\334\322<^\013\336\274\021\255*\275h\3038<\261}\t\275+\207\374\274\336\204\247;\344fK\275\t.\260\274\271\377G=\237\025<\275\334\346\035\274|^\036\275\332\221F\275\036\311\000\275\200\235\333;\236Cc\274gF\036\275\215\240V=74\240\274\256\323\215<\2765*=\341\347\362\274\275O\007=+\313\375<\322\037X\275\360O\224<\\:&=\006\224C<\337\233J=\226\3261=+K\272<E\273w<\305q\374\274l}A=\2620\232<7\022\320\274\273N\211\274vs\275\274\357\004K\274\013\035\275<\251a\t=\017\255[=\242\237\022\275\361\000;=\305\250.\275Sh\320<v\231|<\204\226\274\273J4\371<\263S>\275\347\242\003=\250\006\344\274\301\217\024<\311)?\275\313\336h<\207\224\241<p/\317<\033q\014<s\277\217;!P\223\273D\030Y\275\035\216\'=\251@\210\274\002\201\327\274Bh5<!\210\024=\226Y1;\371zS=\277\365E=\350\225\252\274f) \274\235\n\t\275\255c\241<6z\275<\362%A\275\320\213W=y{\020\274\025\360\260<\321\273\365<\317\t|<1\361\\\273I\367\322\273Y\276\032\275\036>\233\274\330P\304\273\302\255c<\2446\376<s\332A\273\220\336\003;>\031\341;\271\3221\274\006\265\014=[\271\020=\326j\3339\301\n\025\274\372t\257\271Y\325#<1\003C\272\337\365\215;\364\271[=4\316\205\274\tI<=3`X=\270\227\013\275\234\000S\275\006G\200\274\311\353\317\274\002\357\224\273+\302Q\275\360\333\260\274S\252%\274C\261,\275\366\2415=\320\256\030\274|\274\322\2745\370\201\274\213\351\202\274?\036\233;\t\334\345;5\316\231<\275*5\274\227\005\365<\205\177\350\273\235\267\030<\376f1\275\035\252\307<t\362Y=\242\033\242\274\"\320\375;\245*G=`;\251;C\245\313\274\2477&\275\372 \263:\366\217\306<\354E\254<\346j\315:38\\\275O.\000\275`\350T=\264\226T=.}\253<y\311\212\274\021\220<=\255\321\\<Mf\213;\005\255\247\273%\006\321<\372#]\275\271\202)\2754\2745=\344~E\275\250[\031\275\326{\314\274[\343\332\274\204\343\301\274\237k\\=\220\204\362\274\274\360\250<\360pR<\006\267*=Az\326\274\034\374\000\274\200>\374\274\356\275\177<\"0F:\314\2216\274\3750\002=>\235\254;\366\200+\275\3059H\275\037-\000<\342\251\031\275|\321\215\273\034\276C\275\375X\037\274\t\207\363<5\302M=\217\206Z;\341[F;\032\226\346\274\026\336\250<\376\257\036=\017\326\n<C\246h<\312\r1;&\024>=\254\375;=\224p%<\361xM\2757\\\200\274\371w7=\014\354\312<@\375\375<\027S\016<1p\034\275\037\341\225\274\r\261?<\204\237\376;-\332G=\366\373\214<\214\246\"=\356dq\272g4@=K\010S\274\315y\'<\"\274%\275\362T\210<#\276*=\203l\016=\363,F\275\364\300G\275\317\3328\275\331fA\275a\257(\275\222eX\275r\327\344<\201\215\031=\212\340\375<~\320:\274\337\370\211\274\032\364\230\274\237\002<\275\202\253T<+\206\'\275sXG\274\201\335O\275\306\253e\274\212`\340<\214\207<\274\216\210Q\275\240\313|\274?RV\273\313\317)=(\242)=\001\377\t=\347\237I=\361\253\352\273\031\223\025\275(r$=]\277]:p\274\014\274DH \275N\203\336<1\361\343\274\002\372-=\372\220\312\2747\354\222<-\334T=\337\325\254<\357\315\264\274X\366\360\272\037K\004\275\322\335S<\262\rx\274S\314\211<\371\230+=A`\027;\366\326F\275x\271\020\275q\357\302\274Z\017><\227UQ\275|<=\275K\214\201\274\035\263\\\275\355\304\203<vl\347<c$#\273\3456\277<\227\342+<\010\026\315<\371#\024\275\357\256\237\273;\273\235\274\302\224\t=\316\030\232\274\204\337\030\275j\354\263\274\233m\261:\277\022-=\371\224<\275\215\223\326\2746\261\222:M\311&\275\374\333:\274\021uH\273W/\371\274\016B\t\275\216\027\001\274\276\2626\275\001?B=\331\321I\274\202eZ\2739}\005\2758\325.=W\347&\275\261\000:\274\253\210f;\246A\202;\324\004\304:\222\230\341<\254\252K=\253\377\201\274b\034\202<\034\006\247\274\246\304\314;,e\341;^l%=\230\035/\275o\223\370\272\357fk\274\305\235R\275~\313-\275\346\374u\274\'\032I\273iNO=\211\243\023=\361\312\210<\260\036\\\275\036\317\252<\032p!<)|\005=\322\241\233\271\342\357\022<K\216\036\275\007\316\006<^5\001\275Ay\005\275\361C,\275K\354\032=\221z\320\274%\314\341<\317D8=*P4=wQW\275\347\\+;\350\353\234<\026\244%=p\267\010\275\267\323+=C\314i;\016\003\234\2743@\263\274>\276\263\274\224\244\325<a\r\033\2755u\274<\235UG\275\360\217\331\271\005\235\371;\366;Y<\261F\251\273l\217E\275\220\237\255<\201bA=y\024\270\274wJ&=+\007:\275\270F\206\274\321DA=)X\'=\261\020\357\274f\307\334<\212\3152\275\234h\311<TS\3459\365\341\001=\377\214=<\2037.<\270g\001<CE\311\274\267*A\275\332\304 =9CO\274|x\032<K\337\373<~\'e;\350D\"=_\367\240<q[\246\274\333\211C\274^\274<=\273\361\315\274\376H[=\246\372\000\275K\252G:i\330)\275^\r\241\273Sa;=\337\300\031\275\037N\307\274\240\2277\275!u\344<\327K&<i\t\316<+c.=\255RV\275\232Y\002\275\t\303\254\272\236\207\311<\212\035$\274\322\340\370\273\021\234\316\274\216\347\372\274!\364A<y\r\025\274\230Z4\274\354\334\341<\237\274/=W\376\003=\365[!=\'=\022=H\031\226<XiY=+!S\275i\030\"=\225\353\304\273\254g\204\273\t\275\323\274\031#\021=Rh\r=MPL=u\203[\274\266\357\t\274g\253*\275u#0\275\313\217\247<\236\205\022=\'T\230<\252F\255<M\242;\275\376\265B\275\306\234\250<\363\322\014;\214\350E=\032\263Z\274\0341\275\2744?y<\241\317\351<\352\350\026\275\027LF=\241$\r=\001\304\244;8\312f\274\372\330\350<\327\2566\275\001\324G\2754\355\343<\224\232>\275\245H\007=\n/\000<(\332\314< \274\314<\337\372.=\364\027\021=8\214/=\363\374\237\273\246\374(\275\025GJ=\004\345#\274^\312O\275\246\2433=<\260\216\274u\2254\275D\3046\275\263\244f;\237\350-<?\2516\274@d\002=\277V\233:\217\226-\275\214\330\315<)\322a\274\031\340M:\025My;\005\337\210:\271_L=\002\013\306\2749\317\001=\273y\253<o\257/=\274\313\233\273Gf\014=b\034\207\274\013\247%<\372\005\031\275\222\303\202\274\037\031x\274p\256\003\275\301\355@=BE:=F<\245<\220\222\375;\263\tJ\275\346\225\317<mGi\272\223a\032\275\003\205\253\274\226\0265\275\332C5\275\266k#\275\030\223\273\274\244\225\033\275\350\361Z=\367\227\201\274?\254\307<1/\317;9\237\237\274a1\245<\205E3=e\340\251\274\004j\270<8\250$=\376\321\000<\342e\304<\205\364\322<\333\336\252<\375\314Z\274\326\216/=\264\252m\270\202\320\330<\325v`<B0@=\"\265\354<\314\267Z<%\261\001\275\237E2=fYf;]\rL<\354\346\327;\207\255J\275\036?\336\274\366\024\220\274c\\6\275j\324\274\274\335\372\020;\303\030\026\274)\376=\275\025\373[\275,i$<\317\216\377<\022x\342\272(\306\006\275\000H\037\275\007|J<\356\361\277\274J\246#=\033O\220\274z\230\004\274\224\365== \314\257<\026\276g<\312?\272<\244\215\317<\3503\020={\207\367<\2009a;\314\016\273<mi\373<\256M\305\274v+h\274\004h%<\225\227\212\274\316.(=$\014\263<\007e\000=\357B\t=Kc\362<\002\266\033\274\215BY;P\031.=\226\010?<|\273E;A\300\331<n\316\274<\177\"\277<\0373$=\367\214I=<u\334\274_\340:=\'\314\321\274\310\031\232<zg\252\274\225\222W\275\212\276\2129\266\271O\275\211dB=f\216\235\274C_\345\274j\303\312<\010\345%=\207\240\214\274F\334#=\r\361\235<pK\250\272a$Z=\365\370w\274Gsb\272\271\307\034=\304\250\312<?S\222<s\351\031=\030\312[=\246\256\357<w\257U\274S\245\035\275\260\355\020\275@\321\223<V\230P\275\261/T\274\032\344\257\274\273E\323\273\206U=\275\246s\255<\224@\245<\366\325O=\301}\265\274-\223\352\274\225\200t\273\303\'\366\274Q,\001\275\016\330!<\372\2202<2x\270<\322\340W\275\256\020\207;\314co\274\250c&\275\014=k\2748\260\'\275m\357\022\273J\250O=\305\355\033\275\205\365\257<\337n\032\275\324\247!=\347\020\020\274R\320X\275\320\254\016\274\346\241><\262Y\347;\217w\243\274!,D;\377\372\032\273\031AI=\237bW\2750\254\'=T\024\264<\006_\332\274\366\217\356<\2703\351;\226\223\213<\217\035<=\330_\325<\237\253!= \373U\275H\330\334\274a\240;= b)=H\303e<#|!\275v\277U\275\343\014k;n\221%\275\241^=\275\215\035+\274L\342\037\273\315\007X\275(\326D\275\216\364\351\274\261\0303=Rm\267<\024\330\t=\360I\000=\355\355\265\274\255\371\027\275\326\365!\275\360\"J=\204\3725\275*o\307\274\375\022T\275\241^\037=\3724M=\020\307\314\274\227\346\217\274\323Q\325\274\317\200\341\2734w\375\274q\255\221\273\023@\022\275\013C\007\2752j%=\225\3759=en7;\033\365\323<\214\216\031\274\002\036H\275<\010[=i#\232;\325G\377\273z!6<\266\222\243;\346R\260:\354\220\237\274\2552I=1\242\256<\222\302;\275\237\277L=;\024\204<\222\023\231\273s\014\254<\276\222V\274V\350\275\274\353\374\020\275O\263\364<\213\352==\366\355Y\274d.\r\275\034\263\256<AF5=\276\357\021=\250\265V<\271\307L=\313\261G=\333:\331\273/\372\212<S\"\334<\200\037\010<?\010\002\275a&\265\271\322\377J\275\036\371\005\275H\216W\275E\033\223\272\255\273#\275\036>\260\274\340%Z\275/\210e\274\221\206!=\300jL=\255PG=\342\033,\275\231_\356<\317Z\025=)\343\010\275N=Q=\210-\035\275\240m\270\272E[\264<\354\236 \275\"\361\036=\251\322\034\275|\327\013\275`@$=[&Z=\242Q\256\273\274\2628\274\265D.\274\242\364\000=\014\200\351<\206\030H\272\210\221\331<mo\022=\257\"\316;\324\026<\275\230R\325<2.\322\274\270C\\=L\222\323<C]\322\274\350\220P<uT\200\274Fl\021=\204C\031\273\312,\370\274\021\263P=o#@=\322\343\314\274\272\204\276\273\325\266%\275\rS\366;V\316@=\026\013\232\274\005\330J\274\272\320\215\274s\245\\\275lyY\275D\277\247\273A\026\372\274\'\220K\274\372\357\375<k%F\274\240\351H\275\210~S=\025\236\017=\237\305V=\374\246\237\273\340m\342\274\320K?\275\3461\322\274\036R0=\273}\023\2757Q-=\025\022J=\373c0\275\261a\262\274H1\365<\226\3054\274G\255\014=u]\364<cj\232<w\262\371<\237\203S=.A\t=\030l(<\270\260\215\274\262\256\235<\261`\272\273\236\321\003<Z\224.\274F\021Q\273\014&\233\274\032\'\300<+\'\022=IV3<\013\340\306\273\300\275\247<\243\352\3026\310a\242<Wv\263<\364M\213\274@}\221\274\316*S\275\022\\j7\2173\014<\017\344R\275\313\212-\275\244\364\366\274\372\334\034=\240\2352=Q\010\225\274\010\227\271<B$E\275\346\r\235\274\256\033\023\274\034\363#\273\267\004\233\274[NZ\275%\247\034\274\3345V\275\313\225\250<X\300\331\274\302\347-=\033\250$\275\320\'R=\030QV\275eV\014\274\222\226]\2744\260&\275QY%\275\260\337.\275\030pE\275&(u\274\266W\304\274\344UY<`\007\014\274\256\321\335\274\240}\022<-\220&\2754\336,<\364L\353<qk*=\273%==\267\021\213;\033&,\275\215\330Y\275\203b/;\251\n!;q\324\030\275S\257\r=\t~\346<\\\241\005;?\374\313<\203\313\230;\325\255P\274(\245X\275T\361,<I\247\031\275\356~\324;\0337\315\274\005\215\244;U\356r\273\251\330\367<_\327Q\275\231-R;\200\3515=\301$\246;\3013\033\275\275\345C\275#\276\320\274f\010M=H\253\031\273\014\305\360\274\304\t\212:O\010\304;\206S\007\274\304\201K<\263\3655=bvB\275\330\267G=\250(\305\274\007\272\276<\343(d\274\037\3218\274\346\2753=\237\327\366\274\322i\036\275L\334\225\2747!\230\274\212\220\276<\002\352\275<\377\216\361\274\316\300(=\005\372?\274\233\027\006\275\313\333n:]\375\242\274a\216-=\275\316\025=\014u]=\237\rQ=\244\177B<\216\241\215\274N\236\364\274\200bJ\275\345\2372\275K\031s\272,\037=\273\367\3132<\301\236T=\021\025$=\374v*\274\372\326I=3\rS\275 yJ\275\023\237>\275\216y7\275*\266\027=\032\'\335\274\304\240I\275\354\232\322\274\035\312L=\004\270Y=\260#@=\234P\272;$0H\275\203F+\275\246\2577<Q\274\367<\260\240?\275\014\2559\275\372\027\303\272#\\p<I\373\010\271\215\365\005\275\263U\253\274\035\325==\002\324\202;-\266\245\274\224\265\215\274\005F/=\311[W<\253\021\263\274\033\202\254\274H\254O\275\027\007\322\2745\270\262;\367Q\341\274\017X\357<\372\206\023\275\264M(\275\375j$\273\002y1=\376u\373;\030S\021\275%\247<\275<\366}\274\304\000\323<\261\327[\275\342\324D=\007M\376<\265\370k\274b\2633<\017f\007=Ez\212\274cu\036=\356\365B\274 \032\271\274?\017\004\275e\371N=\247\264\036<\t\375I\272PI\346\271\'\000q\274\214a\377<\301l\215\274h\t\232<\275\220$=\303\203Q\275\363\004~<\331\333\022;o&X=\232\316\017\2721O\273\273\034\235\001\275\235X.\275\023\240\035\275\212I0<h3\263:\203n/;e3.=\230\270\327\274r\332&\275\265\343\201;gE\261<\231>[\275CmD\275\036~H\275-\302\351<-\n\"\274\327\373\350\274\001$\372<\022S\362;\037\257\245\274\263Hp\274o\r3\275@\252\263<wB\245\2740\236\034:\227\003 <[\326C=\231\216\007=\225FN\275V\022\001\275\327\252Q=\314]9=\345\377\213\2740\262\026=\321\276Y\274\325h\253\273\243\035%\275\231\r\354<\233\3538=5zE\275\025&W=\366mD=\013L\002\275_\204\320\273\363\306V\275]\314\t8:\323D<\016\354y<\026iQ<\277\220a<\3005\347;,\334\211;\222\005\003\275\202\323\223<\030S\027=\311\267\033\275Ye\304<\277\177\351;\322\346\034=K\270[<\214(\307<\245J\235;\025\254\336<_\362\265<\341/\035=\323\367\035;\254p\r=jj\030\273\001DH<\361\010\013=xgw\273C\022U\275\037H\302\274\010+-\275\354^\007=\317\256\252\274\256D\013=\3449W\274\241<4\275\35141\274\033\266\264;\317\266\213\274)XE=W\210\375\274\376\316\013\272v\351\237<\313g\005\275i\274x\274p\321==\300\244N\275\336\246\310\274W\227\231\274\245^\':\275t\023\275\032Z\364<:\000\320<\220\032-\273\233E\000\275M\003\272\274x\2316\275\311\201\010<-\231\'=%#\312<\3231;\275)\233)\274\372\303*\274\257MX\275\220Gq<d\1778<\326U\025\275\005\035q<\235\262\301<~\252\027<\350O\024\275s\243%=N\2569\275\257\365!\275\361C,\274\022\020\314\274\343\374\016=<k\231;n\244=\275\202\267\000\275w\365\032:z]A\275\322+\257\273\245\207Y=\327\364\221\2743\246A=\t\251\360<\277f\216\274\226D?\274\010\357[=f\"\r=?IY=\037\367\326\274\253A\326<\304\025\036\275(&\370<\370\036\022=\177\251c;\334\335$\275K\361\032=x\366H=x\254\r\275~\217K=\252\222V\275\020\022\306\274\226\2716\274\267\364!=R\262\362<\316`1=+\362,<\361\244\027=\262\021\371<\364\377Y=\003\355\366<\377\234\";\331w\313\274\331[\r\274\341\2263\275j\003\225\274U\240\023\275\010\341A\272\262*Y\275\262pZ\275\252_3\275a\355w;\233h\026=\366N\222\274T@\371<\220\344\007=\256B*=Q\3428\274d!\032\275\261\034\313\274\370\242D=\311\350\317\274\220\355\323<`\373\305\274\222@;=\345R\361;Zg2\275o\000\033\275\344\331K= \360\033\275\007o\036<T8\375;\270^\000=\361\036\177\274\275\274\027=\314\364\242<\266\216\207\274F/\355:ax\025=hW\276:;a#\275\376fO=4\272\007=a\247S=\266!\230:&*\330<\213\312\304<L\325\255<n\305\243<\2157\323<\261BD=\261\206R\274\261RU\274~\033\243<\035>+<\310\306=\274\213\307\316;\250\316\253<\"\020\274\274]\337Y=\016DB<{\2564=\203\245K<%\253\341<\223\373V;\2538G\275\240\010\014\274\263{\030\275\037*T\2754%S<\001\036H\275x\244+\275\374\250\003\275\242\320\203<\312r\373<-\226\202<`\2633\274K*\n=\215\203/=x$\032\274=\007\323\272oj!\275Q\325)\275?\2501\274\027\026\2129L\232D\275\362\221\307\273\200>\343<R\355\032\275\262\235Z\275\337e\313\274\231\037\r=\255N\234\274\220{\237;\036\371\343<\304eD<\315\007\274<\227\024\241<\245\250\t\272c\342/=\214\037\210\274\370-\234\273\202F\202;\177\005\035=)Vy<\277\033,\274\013\"\202\273\241\237\003=\236\212Q=\377\362\033=\301d\201\274\342\365W\275gO!=\343\337%\275\377\001\032\275\032\267\2009\312\313U<V\226\016\275G\354\312\274\r\225\002=\"a\231:\340\315=\275-\261\010<\244h\304<\371\317P;o\254\220<t \013\274K\265\273<oVD\274To\032\275\374\341\366;;\347\220\274*tG\275$nD\275\334,o\2743\3003=\225\025\364\273x\030\235<\306\365!:\224\341\367\274)<T\275z\014<;g\313\022\275\035\346\370<u(\277;\253\217\215<&\341\335;@\371\237<\rx\264;`r:\274O\n5=\023QP=\205\370D\275\250q\242;\006\321\035\275\204*\336\273\320\373<\274b\3626\275O\2015=\231A\n\275\332\037\225;r\177V=\245\242$\275\211\177\252\274\\v5\275\263_\330<\010\035 =\350\346(<\277>\326\274\345\276:<\304\215\226\2740p\366;\266+Y\275\364>\350\274\312\021\313\274Z\326\217<\231\240_<Jg\351<\235\026\032=\006D4=\035s =\310\037\300<{\342\021=\003\265\026=\220\014T=2 \022\275j\372\244\274\220\307\214\271\220\227\024=y=7=X\352-=\006\234\307\274\025\234\271\273\243\202-<\362\3034<\340}@\275\027\023\375<\374\355L=S\'T=\201\203S\275\363\356\346<H\2541=1B\223\274\230\216:=\351\321L<\376\341+<\365\316D\274\361.\304\273 \2552=\322 A\275T\265-<\'8\007\274^\035Z=\241\342\217<\232.Q\275z\215\\\275g,\326<\017<\003\275\0217\314<\261\327\302<\201\214\227<Y\016z\273\024&\024\274\325X\264<T\220\372\274}u\211\274\336I \275\210h\000=\364yL\275r\370\263<\002E3=\254\251D\274\302=\034\275+\337\003\275\024B\206\273\273\217\230;;X\022=\224R\334\274_\224\035\275_\200\272<\323(\274\274PuA\275\216\257\202;\216\030(=\237\365K=\250\355T<\223\373\320<\255\376\033\275\371\352\032=z.}<\304\375\003\274\207\026S=\271A\200<\232\246\003\275\232\n\003=F\t\214\2735e\033=\314Z\223;\014\004A\275\336\340\251\274\321\306\003\275\341\372\005<\036\370X\275\351\316\031=\217\336P=\223T\227<?`\216<\304\023\277\274t\376\224\2744\214!=\007h?\275Qx\027=I]?=\251\303\317<F\362+<4\217\267\273\343>#\275\271w\036\275L\r\221\274L\302?=\243\204&\275\2128\211\274\321\022O=\325\273W=\016`\300;\357 h<q\323\242<\373\262\202<\347\267\004\275\354\270\004\275#n4\275\020\000/\275\315Os\274T!\r<\254>\317<\365,\310;\336M\217;0\024\375\274#\331\033=\366\201 \275\235\3237;\301H\003=i\336\026\275e\002Q\275\244\370\322\274\013|G=\"_\242:o~\004\274?v6\275\244\207\221;\252\367\030=\364j\021\275\036e[\275\266O\250\274\214DT=\375w;=\261\210\342<\r\227\003\275}/P\275\022\210@\275\'\243+\275\336\212\321\274=\337#=r\274\016\275\016\334\201\274\013\031$\275L\026\034=\n9\233;kB\241\274\357J\372\274_\354%\275fr9=\361x9=o\000b\274\235\334\027=\375/\007\275.>\337;(A@=\253\246!;l\244\034=\201\232\320<\251\307(=\177\371\246\270\355\241/\275\273\027\312\274p)\246\274Fu\204\274`\000L=\331\002\362\274|\253\332;v\345O\275\234\257\247<V\300!=\350o\016<\334w\314\274\265S\256<\356\002E=Vwq<\365\215\252\273\326\227\311<\210\331\021=0\250\033\275\266\033*=h.0;\201\016\231<\006N\321<\366<\020\274\037:\214<i\\\004<m\021\344\274P\243\002\275+\221\271;\3076\215<\306Z\336\274C4E<!\341\321\2744\270T\275@\321\030=\307\020m\273\2626+=\246\037\254<\027\377M\274\341\'\002=\216\t\r\275\216\201\000\275V\036L\275\323\202E<\0040\"\275=\366\373\272\313d\302\274\311W)\274@C=\275\330\356\\=Q[3=\343H\3539x$O\275I\241\362<A\242\'=5\314\026\274l\'\020=u^\\=J\234\025\2753\3528\275\264\352~<X\331\237<<5\305\274qt =(\342\210;-\220\216<\350\353\341<7\021\371\274WT\375\274\023\245\030\275\224\331\264;\265A\033=W\275\307\2740\370H\275\177\327\\=4\236<<\265\214%\275\244Q\232\274\3444\365<\014Ex<\020C\t=\221\211\255<XI\037\275|\221\265\274\273\243==\233v\027\274\2270\300\274ka[\275\014\377\341\273!\306 \275\t\334J\275\367\252<<\323>\346\274\033\334\326<\346\255p<lp8;\252}&=\366\205\270<\317OG=\022I\355<\362\327W=\302\375G\275NL1<H\317\263\274\357q\235<\262K\340<\3517\002\275v~\002\275B\351s<[}K\275\325\225\344<3\373M\275\231e!=x >\275\300D\364<a\244$\275X\346\031\274\300.\034\275\031\315.=\317+\240<\022\362\341<\275\213\365;]k\362<\356\3305=\336\346L\275\224\311\035=Z4,=\370\032\235\274q\347):m\320/=A2\313<~\377o\274K\363.=\265\024+<\t\303R=\335=X=Mv\t=%s4=X\303\034\275\232\001\017=\177\027I=\304\r:\275Q\267\"\275h\263\177<\201\001\3739\024\001\\\274\2342\300;$\213\020=t[Q=\260\0374=\327\2771\275\230vb\274v\t\335\274G\240r<,\332L<\361\374%\275?K\330\272\270\201\005</\276\t=\025\300\277\274C\322\323<N\"\005\275Z\222\260<)g\001=\241\330\"=8\234N=c\343\217<\017\3248=\013;\251<\026\360H=\320\023\017=#\251\276<\255\031T\275\004VH=c^\304\274)\3105=3)B\273\372\001\251\274\234\177\023=6\262\220<\024o0=:\270\276\273\274\333#=&\245\254\272\213!\343<\237\313M=\247\363@=\202\3502\275\315*\355<\222a$;\037\024V\275\361\256\'=\345W\213<#\273\345<\224#\013=9[G\273u$\313\274\361R\262<\347\266)=IM\034=#\331Z\274\232y\255\274\270\305\213<u\375\033\273\003\310{\274\230\306\024=\337*\215<\322u\034\270\322M\226;f\221\245\274\241\376Q\274G+\222\274P\212\307\274X%/\274\352\214\211<z\022-=;3\366;\300l\226;Pq-\275\310\006\227<\322\235U\275X\203U=\222jB=i\342\264\273\326jW=\267\005\265;>=\353\274\373\276\252\274\317\002R\273\0051\\\275\343\017\027=\010*\317<)\371/\274\341l\233<\354\203\243\274_wT<\203%P\274\332IG<JJ\251<Y\001\035\275\233\034\307<\0233\036\275$[\223<\343\206\332\274\000=\210:=\242U=1p\352\273/.$\274|\261\226\273G\345\327:\213\344;<%2\271;\374\303\016\275q\031\001\275\251(*=f\0014\275\223i\346<\004\224h<R\313\342<\247\244,\275B\373D=7\306\376<\264\272\025\275\251kE\275\003\314[=G\031\361\274P\236w<\374\203\n\274\177r,<Ht\022\273r\2279<E\214\260\274\267\033\r=\033\224R\275$\003L\275\316\265$\275&t\021\275\260@\314<\345;\246;\217\311\330<P\242\303\274l\036\002=\301\257(=(\333Z=\nb\201\273\263\346\031\275\277K8\274\022p!\273\252\342R=BRO<\325\336D\274>\014\'=\033M\201\274\360m\032\275D\226F=\342\317\265<\242b\254\273v\2710\275n\272\252\274\037\340\255<\000\0057=T}c<\354\344\342<\265\252k<\315\200\213;\375\326,=\361*\302;\026\225\355\274x\240)\275\276\002E\275\353\033.=\364V0=\371\242j\274\037\004\"=\265\305\332;\266o\211\273\333\376R=\225\314X=s\246\320:s\t,=<\322\216\274\246\003L\275\236\267$\275\n\374\307\274\363\0026\275\034W\177;\364{V\274\305\037\001=\243\266\322\274W\2419\275\326r\n\275\302\3656\274\203^K=G\305\005=\357\342\275\273H\314\227<b_P\275\267\332\033=\035\250!\275\236\016\333\274\266\343\035=\013\3227=\370\030]=\023?%\275\205\022Z=!\310\314<q\032\267\274\010\243\374:\344\300Q<\271\373\313\274\311,\020<\222a1\275\262\2467\275\3347\\=\265\362\204\274D\302>\275\245\242:\275\020\373\275<\022\266)=\035>\027=\261\372\'\275wD\002\275-g\033\274&S\303\274\360\227L\275V\212[\275\302\253$=\321n\200\2740\221\027\275\244$\217\274\016\335\004=]R\016<\262\307\235\274\334J\323;J\214\020\274\343\375\327;3,!\274s\026\227\274\322\236\327\273Q\263\177<\301v\007<\263\356U\275?\345H<t\201e<\232\363\310\274\264\272/<\326\007\001=\024\264W=\242\363W=\313\005H\2752\347\335<\005o7=\272\022\023= \223\027\274\301\217\336<@@\":\230\342\337\274\224\330\343<Z\337L\274F\211\364\273L\220[<\224~\025\274\344&W\275{._<\2514 =\366U\006\275\217v\025=\005\275^\274:\324\275\274\354\266,\274fC\315<FG\035=\034\010\356<\374\025@=\265&C=5\335\022\275\020\361\203\273\275\347\333:\231\372<=\332\343\234<G\rR\275\237s\032=\260bK=\315V\201\274\207\3212=;\252G=\032\346\246\274\336\0311=\225\324\307<m\314\332<\342b\035<\246CQ\2752H&\275l?5\275\311\227\024\275\212\033Z=\251\241W\275\212\204D\275\373T\036=\374m)\275\030^\371<Z\023\031;\007\356)<(\005I\275j\253\332<A<\014=\374\201\032<\n\233I\274\032@\035=\032\275O=\321\266\324<\305\265\341<Gu\224\273\267\353C<\330\251U<\324\004>\275\025lP=\232fH=\211\275\003\275:,\'=W\256\022\275\223\2521=\035\177\033\275=\372\343:\240?\t\275\223r!=\253\002%\275!\360`\274\021#\265\274\0209\375<\001]\323\274o\216\243\273(\252\200;\375\374\210<\304\264\226<\"[\261<G\355\021\2752\252\003\275\231\221$\273\002\016\335\2734\331\035\275\033:1<\320\262\372\274\023^\036=\'N\220<\000Z/\273\357\217A\273Vx\036=hN*<\271\036N\274Y\004.\275\253$\306\274\221$\205\274\216\006$\275*\362\000\274\203jV=\335\315u\274\010\212\267\273A\223\220\274\201\230\236\273Z\025,\273Q{x<\013\367\213<\213\027\232\273j\327\005\275\325\204\032\274>\263\027=\020B*=\207\275(=o\345I=1\241K:C\200:\275\230\327\222\274b\333=\274\225\035\2557\263\354:=\3204T=~Y\020<V\373\346\274\224\335\340<*\323\032\274\255.\024=X\327$\275\335\345\345\274\340\333V=u\246\274\273~h\331:+w\031=\211zC=\004\310F=1(!=\230\332Q\275\376\336\247\274\034\357\220;+U\025=E\327C=\000{\230\274\354B<=\234\037\250\274\232\322\326\274\355\370S<y\301g<2\353\225\274\362Q\014<\307\013\026\275\025?\324<\233(p\274yH\356\274h|V=\342\342\202\273C\355\037=\022\\%=\021\032\351\273\352\223\275<\262p\003=\266f\306<\355\017\002=rd\330;v\227R;L\036y\274\262\305`;\004hD\275.\021\361<\214\016\227\274\276\025>\275-\202U=\353\235\360;U\250\377\271\177\234\222<\354o2\275\027T\240<\0219\211:((\301\274\205{\322\274\275\204#\274\206\363/\275\343\251&=\343\035\257;\243O\023\275 \231\'=eW\274\274\326E\302\274\216s\233\274\227B#\275\242\322\004\275\341\257L=\236\256\235<\256\023\365\273\216f\022\275\241\353\355\274P\213\300;\266\\\274\274)9\002=\275\013\235<8\325\245<\014(\034=\2518\245\274C\355\010\2752\310N<\360\n?=\366\215\014\274\265=\325<i\n\030=\226\243\014\275\377\026\016\275\233\244\025=\226?a\274\026Z\222<\370\0041<\300EI\275z\035\032\274\221\021\336:\005q?<qe]=\246P@\274\326\367$=\372(\017\271\005hJ\275;\n\272\274\304\343o<\273F\315\274\267\331\210\274i]C\275\326\023!\275\030\204\251\274\033.*\274\317B\317\274M\265#=\0355@<\250y2=\371x \275-+V\273\232yH\275|\274:<\246\372Y<)#&\275\026[\242\274n\374\013\273\341\243\003\274\266\351\243\274\017d\217<\241\237\036\273x3Q\275\312\216\321\270\210!j\274\323\310\243<\3674\272\274\310\014*=\207\313\376\274\343\262\002\274\222\027\014\275\355\037V\274\212\035.\274\370\245<=\343\352\207\274\201\361r<)\014%=\215\332\005\275*\211x<\342\223\334\271\212\223\026=c\336!<R\353<\274\302Z\004=X\241O=\014\017K\274\242S#<\021\334\211\273p\244\023=\317\316\004=\340Y\034\275\010^,=\364:/\275\354-\254\274L7b\274\350\3339=\364\006\336\274^\246\372\274Q\2018<$\230Z\275\234\007?<\304\353\006<>wA\275\266\023\352<\251\257\004\275%\365%\274\375\260V=\207\3379=4\240Z=\345F\351\274\200\025\363\273g=\231\273[\345\255\274\276\r\370\274\rC\312\274\313\320\254<C\'\351\274J\006\177\274\211\353\030\275\264$S<G\366$=\302\247i<\341\335\004\275\020\243N\275\321\335N=>\247J= \366C==\277a:\345s\245<p:\344\274^O,=\036\362\023\275[/d\274\243\202\031=O\304\'\272\350\361@\273?\343$\275\261\251z\272\306\241\261;T\006 =?\360\252\272NI\236\274\020\n?=\253\374\231<k+b\274RA\312;\237\2023\275\0212\003\274\036\rv;q\233\301<\240\362\352<\360PM=#\247\006=\347\026\314<\337\205&\275:\302\224\274\311\255\215\274Z\367\246;\373z\177\272-\307]\274\322\333\355<\310\260\250<\177\254q\2738\266\007\274\253\242%\275\2772\327<\333\324\271\273V\253\373<{\315F=\372\367H\275!\335\032<\207\320\020=md\327<\366\336\021=\234\212\014\275\366b5=A\367&=]\243,\2755\320\246\2749\246\330<&\311\002\275\225\375\277<m4\000=q\247X\275\026\215\002=\320B\223\274\245\2000=B\020E\275\206\357V\275(\236\007\274\363\376\006=M\014\222\274\312\010T\274t\270\213<}s\232\274(\3711=-\203\024\273Z\017\322:\032\360)\275q\270.;\375\0215\270N\355\325\274v\034\370<mp\\\275\247\312\373<\373@\002=\261A\014=f/\201\274p\001\345\274g\205\345\274\316Xc<\344O;\275\365/\017<\256\304\366\274\033\346\341<,\314\367\274\345f\327<=O\333<ft\025=\340\324\245:\322\'\r\275\233\350%\274\tR\016\275[\206\000\275J\016[=n\266\377\274\217\206w\274\2279\245\273\210t\370<\nQ\020\274\337\346\306<T\301\032\273\0002\231<\365\027\311;\034\325\252<\216\222S\274h&\005\275\344\000f;\321,\032=\264U\034=$\026\231\273\232yZ=\032\346W\274r\\\321\2742W\315\274`\343\024\274%\004\034\275\036\000[=\017\365G\273;:\031<\315\276-\274S\246I\275\007\206?\2733/\037=\215\004\033\275?D\262\2746@\255\274\2571\256\274h\257\'\275\235rY\275\214a\314<\243D\\\274\373\010 =J\205\216\274\270\251\'\275\3613{;\333CW=\306P7=\354\341\316\274\023\2367<\2479\025\275w\365\211\274R\t\241\274\272\330c\274\300K\311\274\316\3608\275|\324!\274\376\250\352\274\307\221(\275\254D\200\274Vu\201;\2146\035\275\300\215?\275\001\263\332\274%t\027<\234\010\037\274x\364C\275\251#v\273d\335\r=4\230==r\3073\275c\242\032\274\013\306P=t(\307<\200\235\362\273\027\257\225\274.\306\314\274\002\026F=\265\352\021\275\r\217\227<\030+E\274y\222A;,(\206\273`R\200<$\372I=W#\027\275|\305G\275{U\252\273\205\203>=\362\0213\275\336{\034\275R\201\274<\214\251\255<6\266\006\275\267\272!\275\010\025\341\274?JZ<q\007\301\274UK==\004\276E\274\305\265B=\303O\336\2746\245!\275\005#O=2.1=J\t\'\274\021\351U=\332\216B\275\232\2753<\370Z\323<a\0042\274\032\232w\274FH\223<\222\361G\275\207Bk\274\351_5=\330|\220\274lS\227<\225\'\201\274 H\206<\234:?=\376\335*<\316\0248\275hFz<\277\312P\274#<\221\274 \001\364\274g\325\325<\\\000\333\274&\333\020\275c\217\264<\333UF\275\312\357J\275F\334\302\274\230\220\023=5\"&=\030\016\227\274\332\207\311<.\016]\275\325\017\305\274[\324d<\305\254\247\273\262\\\340\274wB\222\274\365)\003\275g\004?\275\243\010\022\275\232\222\001\275I\035\035=\201\265Q=\232\220\022<\'\337k<\013\307R\275\265\372\001\275.{\017\275d\233\277<\363\rn;j\350Q=\210\373\242; \373F=\312\007\246<\020f\344\273I\215\005\275@\005\035=\373\004\316<$\005\201:\006\207\221\274qH\\=j\217N=6U\006\271W.\277<U\177\334\274{\226\233\273\376\234\244;\317\014\t\275>\273]<\367Q\312\274\256<.=V\036#\275\n5\014\275\020\366\220<\256\333\274\273\211:L\274\362H\020\275\300\032G\275\257g\032\275\337\3002;\232Z\231<k\360\003\274\253u\212\274s99\275N|\234\274^\260v<\240\271\326\273\3200G=\265_R\274\246*3\275\230\326\221\273{\301,\275\t\203\310\274\242\310\333\274H$V=Y\307\373<\020\357\204\274\004\273B=\3166\n=Q\311\031=\261\351><\364\360\341\274\306\353:=!\234I\275\327\024+\274\"\242\027\2755\255\313<qr \275\235\270\010=T\025\027\275[A\355\273\274\224\225<\215\367\2478\001\005E\274+\n>=8\347\014=\237o\356<KB\037=*K.\275\326\271\021\275\214Dq\274o05=\032\036\315\274\250\344\212\274\214J\010\275\203#E\275\341\230e\274\246\337.\275zW\220\273\3167;=oR\301<^\340Z\275\220\247\360\274o\217U=D1\372\274\264\336\010\2740\367\013\275v\306\207<\333\323I\275[\t)\275\001\264A\275Lv\034\275g\204\330<\313\314\252\274\314I\233;\357\032\240<\000\372Q=#K\242\274E\022\\\275\242\230,<G\0135\275\330a\030<1\321\030\273\252\252\233<|\246O\274\275\222d<F\200\312\274@\373Q\275\355e\306\274\200\030 <E|\237\274\343\323\314\274\353\356\271;\317\3630\275+\307\365\272\357\321\031\275\322\257$=\361bD\275w\"\030\275\027\024\301\274\266\220\321<n\2323<\355\366\177<\014\357\023\2740j\026=\336\032\212;y\267\035<\337\006\305\273\327\356\002<\271D\2259\217\361Q\274\367\244\351\274\317\354%\275\237\363\036;\337\0378\275\336\022H<\300\203\341\2738\315=\275\376\0259=\037\350=\275\245\032.<\025\3403\274\035\301\037=\300\344\003=f\252+\275\262(]\275\313\261N\275\206\241\220<\003\247\001=Xx\276\2740\204\336<\032\3617=\177+\003\275\360$\373\274LI\035\275\260\233\230\274\217\177\257;O_A\275M/\033\275a\031>\275Xw\267\274\214t7\275~&\264\274)\236\264<\236\335,<O\252H\274\023\035\316\273\316HE=g\036F\273\2553\004=U\234\352<O\271\'=\347\317\010=\253\306O<\330\271/=v\260\033\2756\223\336\273\241Q\376<\220\371\016\275\326h\'\275l\356\273:\216\226:=\267\206C\275\336V\354\274\306\320\346\274P\226\010\275<\030Z=\000\033\252\274\226\266\273\274\300D\235<\222\343@=\017W\263\274\241\333$=w\212N=0\346V;s\216\352;\353\360V<\377\200O\275m`U\275\022\026\034\275\312\252\030=\220\016\t\2755\253A=\035\364\363<y\344\216;h$*=P4\317\274\311[\022\275\353\257\005\2756\034(;\347\277#=\276\251+\275\365\266\234<\322D<<\363\270|<y4\356<\225W\252\273\370\2712\275\322!\263\274\030)X\275C\037o\274\2758+\275J\342\025<\221.\002;h\267\024=\203\220\226\274\355\346\351<\\\007\310\274\004A\270\273\375nB\275\201|\027;0\317\352<)\021\346\274z\355S=\314\250\010=)\347\\\275\004\270\305\2742x7\275\"\247\023\274\346n\373\274\351\235\022\274v\374S\275\350\001.=[\357\023<\217\331\037;S$\013<\364\214\355<\310(A\275\252r7\275K\"\326\274\314\t\301\273\342G\350\274\007\352C=Bo\n\275\033\231\255\272\353\306\177\274\363\026l<\324\320\025\275\265\023M\275\316CV=I\313\304\274\007\251\300\273\231_!\275j\206\370\274\244\367W\275\207\003\303<\336\342\'=w\327,<\227&D=\373\350\240<;iQ\2755\365\335\274\355\017\353<\250\341\310\274\377I8:\305\374\213\274\376o1<\261\274\256\274\270\007\234<\322b\010=\271\274\343<f\236\\<\216\237\255;\322\313\025\275\360P5\275\304\257\034=6\271U=\235-\016=+\210\206<\005:\334\274\0067\327<\000\353?=\002\277\017\275\274\035#\275R\337G=ku\261</\261\000\274\320\366c<5\220\346\274\206\3163\275$E\301\274U\304\004\275\353]0=\277\320M\275n \357\273\214<\270;\221 \360<\323#\313\273\027\362\302\2732\361\231<V\207\233\274\017i7=s;\004=\000K\t<\3236r\273\275\250\000\275\313[E<\261\314\207<\222\305\265\274\337\226\274\273<\254G\274\355\332$=15\r\275\316\261\267:\335\273\337<\321\346A=\206\005\000\273\226sR=\336\016i9\026?\256\273\266\270\370<\215X*=\0059K=\346\224/\273\301\014L=\324\323\370\274\003\024<=\346+D\274\t\024\364<\355\2276=\353l\265\273\201\357\246\274ZvB\275\210\014\027=\357\200\215<\033\365\031\274#\234\253;\200q\236\274\315\255\307\274\377A\000=\217w*\275%\254\345\274M\201\004\275id\365\274dBK\275\255F\024\2758\223\266<\202\007\356;?G\274\274\211\004\376< X\223\273\200[\272\274H\375\304<6hR\275A7\254\272]\264\255<q\t)=\273\253<\273\362\232\271\274\252\301\344<\240\326\304\274\320\335,=\016\206\021\275`r\014=+3P;H\240c\274g\271[\275\240\217\023\274X\301<;\354\236\004<\241J\337<\224\256\344\274\353\331`;$]\252\274\236!m<\377`.\275\307\215\336\272\255\305\212<\311\3510\275N\236B\275\260E$\275.o!\274\n\257\013\275\370\346\000=\276\306\254;\3129\346<o)R\275\302q\236<(g\000=\322\276\017=2*8\275J+\020=\203\351K\275\'\355L=\366?-\275\310\010\360<\227\342-\275\321E\277\273\304cM<\214\032P\274\014\375\337:\020\342?\275\364hS\275\312\232H=\354\373\235<\027\340\213\274\225\363\'=\262\216\016\273\222MU=%\267\361;\0027+\272:\3232=l\314\243<h\226\325\274\250\274\213<\227\026\234\274\256;\254<\272\200\265<n\344/<\271K\262;\204\262\347<\304\336\035=\335\002\244\274\314\371O=\347\032\307\273\005\365\366<\360\331\021\275\311,\037\275v26\275U\265R\274p\017\261\274\272\356Y\275\253,$\275E\242><)\205\003\274\021K\227;!\247s<\222\255\372\274\374C1=\357R+=V*\232\274@*\177<{\\F=\361m\246<`\021\t\275G^\263\274\356\\G\275\341\034\r\275\234\312\331<\353%(\275\nW\022;qE>\274)_x\273\316>W=)\350I=7PL\274\204\\\223\274e\037t<\'\322w\274X%\207<\260\257\314<\263\'-\275\304\345h<\003$#=^\372\361;\343\266\247<4\326\336;\247}-\275\226/\026\275\3446\026\275$\2117=\033\352\367<\305e\331<xHs<\006_\264<\301!\371\274\373\265/=\212z\361;\357?\326<\215\010\252<\370\356\014=\323\316P=<\332{;\242\361#\275]\3705\275\331\030\370\274\014\020I=F\200\242<\210\0146\275\351Mw<\206\320];a\326\t<B\230O=\361\233\354\274\334v\203<#!\325:\006\256v\274\370\223\030;\322\265\263\273\233\267D<\267%\245<Mx\006==\211#\275\326\227=\275M\317m\274d/4=\351\3217=\204\002)=2\240B\275`\317\034\275\345:\003=\021p\376\274?\3773\275\203CE\274\242Q!\274E\256\004\275\231\016\242;W\316\005<0\316M= \027!=\253\021D= B\201<mQS\275b\275\216\274o{9<\216:\016=P0L=h\354\240\274\254\277\030\275\3205%=\303\257J=\371@$=(\027\207\274!\334\366\272/\034\202<e\205C\275\271WX=5\037F\275d\010\017\274\253\241};%p\341;\022|\310<E\320\325\274\223.\036\272\340\026?\275!\315:=j\274\017=j\256C=\033r\002=\343\350\026\275\237\230\247\274\251\312\353<#PB\274\020\014j<\2538V=\272\017G=Pb\305<\316\220V\275\004\233\t=u\177\033\275Yo=<\216\327[=\256\030[=\316\324\225\274\025)\027\275\301\221\033=R^b<\003G\320\274\373.\316<\231\226\340;\027k\357\274\311t6\274\267\327\261<,m\036\275]/\200<[\347\251<\303\031*\275>K\036\275(\235\210<\222\314\273\274\374\2524=\301;.=x(\025=\246\312\363<\230\255\005<\253\270\230\274)p\357\2746\360\262<\217\325\221<\371\351\002<^\004\243\273:\340P\275\315\0266\274&\355N\275D\370&<q \000=\t\212\027\275\335\220:=\345?\017=r\234*\275>\270p;\246\246&\275\032\240\205<\203\335\000\275\346\200R\275\376\204\004=\366F\017=\2118\324\274\337\177\326;\200\222\002\275\213\016\244<I\031\027=D\000\222\274\223\256\005\275\3014\256\274\206\030E=\310\2773\275fPN=\254E\005\275\330\2422\274\2755-=7\306Y\275\351S\026\275\2708\003=\206\246\004\275\0102+<\343#I=\024\224\023\2740*u\274}\272\253<\312\204\362\274\256|\001=\016\361\301\274\213\255L\275?\274t<\315\035\350<\360\217\032=\2021\206\274a\364\256\274\031\320\314\274\301\2464\275\334\027\\<\366\326<\275\256zB\274\366S\'\275(\346C=^\025\026\274F$N\275D|<=-\234V\275\233 \002=\235\204\322<\325\214\006<\2617/\275:\017%=^wS\275\333\3041\274\202\267\000=s8\027\275\252\227\316<\303%7=\336A\342\273\303\035@\275, \277<\326\320+\275\305\216\270;\244\2030\275s\220\357<y\250\n\274\203|\272\274p\236\206<\206hL\274\005P@\275:\\\022\275\247\323\033=\310\\\242;\035\362$\275\251c\326\274\337\376\303<M\212\242\273a\004\024=\251\032N\272=\005\245<\261\341N=h$:\275\215\227\372\274R\344\036<(\272Q\274\232\313i\272 /\204\273\352c\330\274\302\"\220\274\205\0030\2751\264\234\274\361|O=j\373o\274\322\2425=\222\314\033<\030\377\270<\03415=6\032\013\275\345\364\003=L\227\210;\030\354Z\275\321\2648=6\222\200\274\234.&\274&\206I=\246\225\333\273s\204;\275\"\267\373<\232\206\267<y\247T\275_\020\322;\260x\247<l\367\017=0\374T=\004^&=>\024\004\275\tXP=\301\227U\275\344\036]\275tu\027\275bK\t\275\212\271\330<\232\375C\275\210\202\036=\337\301\230<2\307\237\274\214\333\315\274\276\303V\275\221\327-\273\020\266\316\274\277I\034=\'\357#\275R\0016=\243\225\322\272\374\264O\272BJ6=\260\205%\275\217\003\032=\205j\000\274\026c\033\275\253J\251\274Y\345[=\231\305\266\274\001\005\010=\252P\270<\037\276b<\362\375)=\347\'\217\274Q\217\265<\243\307\n=$\027\026<\304\346\201\274B\276\206\274\035\316>=B\237\306<\322\026y;8fw<\362\263Q=\357\205\201<h\252]\275\241\211\311\274,#\245<\273w\025<b\016\020=\305\t6\274{\376\320\2730*\035=^\230\335\273.hT=)\260\031=\377\nZ\275\3224\221<\332\314\374<\224=\026\2750\315\222\2737\321\275;\312J\037=\0003:=\010\374\032\272\330>\317;I2\245\274\212\210\373\274\343\330\266<+\r#\275\014\371V<\361\203t<\242\220\036=\330\252\225;\021U\205\274\253\227\311<BQ\276\273/4\021<\201\020L\275\264q\377\274\271\261S=\022\322\332<\032\203[=E\'\010\274V\312/\274\004J\027\275\277\222\307<\027cA\275<\177$=\212\214\002\275\371\0314=V\016\024\274\272\207\252<\02725=\311\030\002=\250\r\027=\210u:\2758!\257;\343\334h<8m\352\274\235\177T\275\017w)\275{\373\247<~\332*\275\'\201\267\274\007p\004\275z8\367;\017\320\300<\315W\225\274\221\211\003\275\310\000J=qd\270<\307\272\327\272\027,B=\3111\023<\203\215\275<\222\363\260\274\243\205\351\273d\305K\2751RZ=\262\010\t\275X#\022\275\366\375/\275\257\373U\271\365\301\212\274+w=\274C\222\010\275\320+\005\275p\005u\274\324\226\355:vh,\275\304\316\254;:\234.\273\234\014W\274z\324G=l>\227\274\312\022\370\274\374\210\026;i\227]=T\270K\275\2026\270\274\321\300z\274\317\035\347<\227\302\010=c\n\200<\332\212\201\274\352/J\274-{\232<d\265\360<\243g\013\275\305\323\004\275y\376\333<IP\311<\022\2575=X\232\026=/\3449<\256[\"\275\237\2534=\221\3437\275qF\253;)\242\216\274\177P\324\273\260n\"\275m\'=\275\345\362\337<\360>)\275\254\344\217\274p\267\235;{\3349\274\027\214\222<+s\010\273\002\3015=\376}?=\346\375\303<\252/\301<o&Z=\202\264\243;\300:\333;Y\356-\275DO%=>\274\337<0\036n\274\007\304.=\265\220\027=e\036\310<\257\203\363\274\260\301\244:[\370\265\2749tN\275\252\000M=\030/Z=Qzl\274\253\3215<\253QK<\30373\275EE\013=fl\336\271\251+-<\247U?\274O\257\330<\016.4=\255.\003=\233K\312<\215\0136;wD%=\342\030>=F\235\033=\324\212?=\221\332\245\273\212\363\\=R\3032\275\375\325\'\274J\263T\2741\034\342\274\000\365\233;\253\373H\2756\021S\272\304\3340<\222\363\374:\031\253Y\275K\266\227\274\321\360[=\217\230@=\006\257\242<v\370\251<\014\327\017=H< \273\003\373\335<\226\253\375\2742,C\275\261\256Q=\3612\017=\220\030N\273\362}\301;\345Z\260\274\330U\027\275~\025M=\200\316\036<Y\025\256\274h]4\274\263M)<`\244\023\275\3072\";W\252\002\275P:\235\274\024\273\035=[)\021\275H^\303\273\276\261\"=\351\313\326<7*\260<$\274\316\274\344\337\037=(\277\370:\023\377\017\275\374x[\275\226\364\027<@\337F\275w\313y<\321\330\272;\260\274G\275\217\0208\2758\002P\275\000hO=\310\336\024\273,i\347<\316`\002=\267>\032\275\225O\003=\360\375\236:\027\202!\275\300;n\274\373d.=\210\250X\275\\\370\r\275x\301B\275\370\264;=\370g\221<\351\230\000=\261\005\232<\3345\014\274w\202W=7B5\274\300@\320\274nA\\=\266\206\037\275u\213M=\217M\303\274\210;F=\317\220\270<\365\341\301<\255\263~\274\204\000\250;\354ZU=\355\305H=.\326\240;\224,K;2fH=H\241\223<\327j\376<\230&=\2740\335\357<\010\r\016=\031\256\035\275\317\372\213\274\341\001N;6\231\026\273\374\227\235\274\n&S=x\005\212\272\304\226X=\241\304Q\275?\351\026\275T\305\352;\223\305==\326f\036\275\362X\357<iR\024=>\030B=\267/\005=/\217^\273\316\005\237;\220\023\023\275\360\250\353\274\020\034\263<\277\245\352<\200\342m;\246\2442\274\324;]\273{\310j\273\245o\026=\324E\020\274\206\252,\275\243\332\310\274\036\233\264< \n\236;\024\021\253<W\3249<\034\373+\275\272\350\204:A\341:7\347\255\221\273\026[V\274M\234)=J\331,\274\325\354C=B\357\t;\022o\202;\221T5\275V\251U\274\217\013\352\273ZP\257; \250|;v\010.\275\226\331\001\275;,\031=\3163\337<H\013\305<\022l\335\274\307-r<~6\022\273\237+\273\274\\\2332\275|m\017=\177\273E\275<\334X=\036\032\366\274\007\377\033\275n|V\274\347\014\206\274j\213\024\275ts\343<\245\321\233<\245\222\333<\371FW\275WI\026\275#r\007;\304\274\301\274\247gr\272\367\020N=\244[\244\273\304\237C<>\310\036=\260\341\027<\361\225\235<)\332\017\274\327\310C\275\307\312\211<\352\253I=\200\201\000=5\241X=\"|\203\274\3575\265\274`\267V\275\254Y\025=R\016.=gmi<\207\245D=\266nU=\307b\022\275u\001\331\274\004\244\222<~\352\002\274\327\377\032=\310\265E\274\201\261A\275\314X\215<\307GC\275\341\3523=\031\230\027=}\247\252\274\303`\347\274q\247\310\274\\\362\211\273_H\310\274\255\377b<`\250\203\273)S\277;*=\031\275\251\205,<\316 \341\274\222\374\261\274y\345J=K-W\275L\251\032=A\n/\275\004\364Q\275>\307\247\272\240\260\014<\305\200\344\274&\314\301<t(+=\217\261E=\255*R=\036\320\307<!.\301\274J/\241\274\014\344\305<\346[1\275\345\027\251\274p1\216<\364K\t=R\016\317<\266\205\204\273\201\"\\=\266\364\330\274\n\032N=\341Y\236\274\256\271\341;\242\273\214<\252\213?\275\366T!<\177\256\336<3E.\275q\014\t\275i\371N\275\314\005\244\274lI\254\274\301\207\006=\201\340\021=\302\277\024\274:},\275\234G\004\275\273\r$\275\227,K\275\260\2437=\371\244\340\274+\2630\275\2741\336<b\216!\274\353^\372<ha\016=\210\270\227<\327\316\006=\022\2162=\3066\235\274\365\311\363:\033&\204<\014\342U\275\005+\361;IOQ<C*L=I*\212\274`}U\275T\377A\275e\226T=B\311\327\274^m{\2732\343\014\275\312\300\301<\t\254\027=\362\007\217<<j\265\274\000\306\335\274\006R\010\275\324\331\312\273\366\000\244\274b\233\336<\t\363\222\274\376<\306\274\344O\275<D\220R\274\303\250[=\177%<=\035uz<\214\216\354\274\377\006\266\274P\200N\275\375\200\002=\r\3226\271\200HS\275+\034\225\274\333@\034=\272\2307\275\222\304\033\275\325A|<y\242!\274[\256\277<\203S\016\275\234\"2\275nUR=\225\314<\275/\352\263<\262\270\276<\251\232\303\274\356`\004<:\271\200\272\307\254\035\275\331\3659\275E\326\333\2742sI\275f\256<=\207\277\017=\315\010\313\273qMH\275.\302\\\275\245\250X\275h\260\366:\"?B\275}eN=\367\033\021\275\226?\247\273BW\241\274s\375\026\273\251\346v<\245k\274\273\263\207*=;\347C\275{\013\330\274\032\306\207\274\215f\027\275m\\<<\243\035-9\215\2060=\017\335*\275od\031=[nf\274\211\003#=\342f\271\273\3549q<\001c\001=\301I(=\356\314\274<\200\226\006=\344%M=\252\037\023\274Qd\371<\352 \030=\213:f<\320!B\274\002\017\004\275\033\331\212\274\314\3070\275\302`\301\2744\0102\275\032\\\266\272\217\030 =c\223-=\027.\376\274<KN=\032\354\177<E4\356\274\t\022T;j\332H\274BM \274\253Q\005\275\201\376\330<|\240&\275\030(\007\275]\273\026\275\201_\361;\326\274I\272c\322\004<W\007\217<\261\246\333<\232\264\253<\302v\253<\265\271Y=Z\001D\275\"rB=\230\3333<\240u\302<}\377*=\312x\257<\3002A\275\210p\207<\353\010\271\274\307c\215\274.$\232\273V\352\035=3\305D\275g\3627\275s\032\004=\'\022\310\274\361-\027<\231\242`<\227\302g\271\361\320<\275{\020\350<\347\315\"\275\256a\030=]i+=\244!\307<#?\273<Xq\350\274;$\255<\260J\016\275\267\355\t\275\357\241&\275\204\333:\273{\266\201\274\375iA;\025\3064\274\362 \342\274\201\363\340<\222\2767\275N.\240<\004\007\035\275N\340\313;\276\333\353\274\227\343,\275\361cE\275\325\373L\275\177_\224\274\3709==\235\267/=e)\230</{P\275\r\214\377<\337\021\340\274#\016\212<\032c>\273\336FS\275mi@<k\3541\275EN\t=%\016 =\001\255\347\274\205\ry<\272\357\376<+!%\275\267 \267<.2\367\274\230\366\030\275\003xR\275\207\024.<\341\367\\=\263\255V=\004Y\227\273\253\316\032\275\315\263Z=\376\372d<\024\016\200<\262\366\016\275\300\2032<\032\022|<c\314\346\274jP\006\275zg=\274P\033J\275\022\003\310\274\267\331\260\273\264\270\211<J\204K\274\177\275,\275\021N\320\273\273\325\346\274 \334T\274\242<\352\274\221!\010\274\252<\\=\002\340Y\275\261\242@\275s\002\331\274II\\=\365t!\275\233\316\273<\356\017Z=\277\\{\274P\301\000=\331\325\333\274\3456\305<\232F\306\274\013,G=\n\370\246<x\301\262\273\211\035]\275ic\370<\374\346V=\272+X=60\376<\257L3\275\237Y\371<37,\275K\360\317<\317\317t\273\240HW=\204q\n\274\265A \275!\316\370\274;x2\275\376\026\330<$\n-=$\351A\275\274\270\216\274\356\373q\274\265\263\037<F\\5\275\213za\274\351\260B<\241X\227\274\200c\\\275\255\002\357<\233\016\014<\325\237\337<JW\276\274\374\215K\274\266\331*=\013\2579=\001\343k<c\311v\274\200\267P=O\215Z\275\305C\016<<\r*;\214\254z<\277\305\037\275\037Y\371<\216\204\215\274\360\217\356<\225d}<\313\226 \275\\z\306\274\370\273\260\273\225\235\232\274\204\'\264;\331\020y<\227\201\334\272M\201\374\273\201\230\035=\021\304\274< \374S\275D\231\342<w\n \273|\323-\2750\362\320</\211\345:5\273\001=\330\026M\275\363\252v<\325zB\273\013\276\032=\302L\t\275\003Q)\275\203\362L\274\322\\\004\275i\313\"\275\356j>\275\256\001;=&\254\2449\013\010\\\274\232\210\315\273\241\226$=\255%Z=\333+\036<-\361\t\274,\274:\275\361\322P\275\233}\026=y\336\036=\006\007\020\2752\266\020<\337h\343\273\327)Z\274\260\010\020\275gcR\275\0132\337:J\221\037=\223\023\022<\017\316\273\274\212\264\270\274\356\250\371<\nb#=\2211\375:\n\372\022<\300\035.\275\336\210\017<\3521\003\275z\020\216<=\177(\275\277\301\211<\365\202\201\273\365A\226<\215\271y<\347D\342<-\214\361\274$>\020\275\335a\252<\355IL=\200\324\303<\002z\000\275\356u\031\275\027q\262\274\232@\212\274\216\3311\275\216\231\334\274\361\217\025;8\323\027=\256!N\275\231\220\371\274\247\206\344\274a\260\362<\373c\025=|\364\247\2738\324V=.\237B\275\3502W=\210)\355\274)\240\014\274{\334\036\275=n\311<\314\ny<\271.\007\2742\355&=e\323\310<\265\243\021<\271M\t\274*\220C;\300\211\371<\332\255\361\273\210\313\003=t\316S<(\321\034=\t\026\273\273\223\324\252<\343\330d<\304\306\323\272\320K\t<\306YC\275/\341Q=%ZJ;_\331\274;\376\024G=\032F\213\274((\372;JI\033\274\246\374\232<o\0041\275mB\235<l\305R=u\0043\275J$\032=s\273B=7\244*\275\314\203\227\274\363\333\214\274\237\024\035\275\001d\313<\020[\345\274v\245O\275p\354N=\037b/\274&13=m\0035=8(;;\005\372\302<u\355\241\271U\000\225\274R/\262\274\202\263\027=]\256\243\2749\220}<p.\002=\210\243\330\274\020\244\356<R\023\232\273\273\026/\275\031\017\250\274\210\322\333\273\020k\262<\030\352\371<\021\207\340\274\237\301\315<sw\317\2744\2165=\261\305$=4C\217;\217V\214\274\212\t\235<s,M\275\301\371U=\216\366@\274C\201\226;\325\363\361<]\270\365<a\325\020=\363\023\350\274\205\014G\275\255QX=\224\306\224\273f\331\031\275\232P\016\275\324\217M=\2268\022=\3407\260\274\rO\306\274\024\307\267;\246\350;;o\nK\275Ts\362\274\225B\030<I\2527;\203\314\361<\327W\023\274`\367\352\274\317R\253\274\236\327\330\273\001\020v<j\357\006\275d\356\377<\377\357j;\364\356\034:\017\377O\275\316b|\274\313\334*\274-\254\035<\201\355-\275\325\017\270;\222,\344\274\250\345\025=C\234\251\274\204KT\274\221\024P<\252\020\274<\360\2442\273\304\361\354<\355\263\323\274\305j5<\027\003O\275\037R`<\337g7\273\362k\374\274\270\257\003\275\312\303\267\2730O\357\272uy?\274\242\311\312\274\310\237r\274H\206(=\253R\027\273>\357\307\274<\334\327\274\025\245\223;\024\033\251<)\030\213\274\372`\000\274\341r7\275sK\272;\353\313\275<\0043V=.\036W=\352]e;6\235\337\274u\257[\275\326\033P\275\024\224\033<\320\000k\273\244\367\r\275y\311N\275(=\254\273\355\334\366\273n\310\000\273#\253\256\274\035\334U;\301\017\010=\300\365@\275P\005A=\366\215\031\274ks4\275\264\345#8\260\251(\274\224<d<8\363x<\320\250\016=\016\207\177:\346q]=E6\330\274\334=E=\201\353\237\274\354\332\240\274\354)\245\273G\365H\275*\322\334\274\250\217\354<9\013\313<K\207\244\274Y\030\315\274\210h\305;kHy<\027B\354\274\276s\356<;o&\275\3679+\275\001\352\023\275\247:Y\274z\325\n\274\371\3541=\344\307 \275\340\014$=\363\274\243\274~\306\375\274\361\007\305\272\245\256\306\274\356\271\326:\253%6<\317\314\031<V\313u<y\027\n\275\364\3217<\371#Q\275E\rA<\222\010c<\025\241O=\366o\034<\360\276\010=*\025-\275!Y>\275\332\276g\274\263}Q:@\323/\275\203\r\314\274\263\013\036=\331\305:=\250)\245<k\327\014<t\313\031\274\354\314\241\274\245\234\035=\317_\022\274\002\333\'\272\223(\202<O\315\237\274\306>C\275O\036\336<\t\261\005\275\020\341\226\273\237\276\025=\306(\306\274\210\2452;\021\256\030\275\225\316\251<\270\t\336\273\323\263\243<cQ\025\275u!\223\274W\006\017\275WP\234\273\255k\356\274\2579S\275\274X/\274\036\240\257<\260\365\367\274\336<L\275\374+\335\274~\332\030=\302\267\r\274\263H\252<\267\272\305<fR\212\274\326\305w\274v\235*\275NM0=\270y\000\275\223Y8<\366\210\216\274\024\302\241\274\302r\274\274\214\2615;\024\303\340\274=?p\274\3047A=\033\307\030\274\325\2268\274\252\010\r=i\263\227\274*\337\230\274\037\213B\2732\'O=\256\221(=q\023:\275\021n\244\274\234+\316;\\x*=\217\333\260\273\266\321\"\273.=Y=\371m\005\274 \327\363<\331\267\022<\375\242[=\325\234\243:\215j\022\275\237`\317\273{\230\356<\273M1\275\254\200]\275o\303b\273\27787\274\030]R\275i#A\274\273\266\022=\312AG= \365&;\330\300\005=\344j\205\2738\203\254\274\343\205\330;=\255(\275\004\377\263<fB\020\274)^`<jc\342\274\356\242\327;\r;8\274\035\323\347\274\370\013\002\275\\z\322\274\024m*\275\013\001\033=\216\340\245\274\t\370G=\2135\363\274\346\220[<?X\337\274\355\372\370\274\371\223\320\273H\367@<\274dB=oz\346<kV+=.\202\243<6\321O\275\314\035\007<\\\245D\275\272@\332\274\277\341<=JW1\275y\272,;\242\270\266;+[0;]\362\240<\312\376\030\274\0070\220<\334\376\264<9p\021\275\232\2169=\016b\342<\372\020%\275\305}\014=\332Cz<\265\326D=o\205h\274%\251\223\274\320\277\t<\276\350\026=6\324&\275\372\014.\274\315\270\007=\350\3267\275\r\337\361<\241\342\036\273U\256\025=*\3609\275\250\220\270\274\264d\\\275\207 M\2754\265\321\274R\320\264:\021\300P=\252\240&=\371\302\023\275\354I\3039B\307b<r<(=k<\016\275\t\267\322<zk\310\273vg\021=.5\004\275\301[\265<\336\361\000=\360Y<9\227\377\327\273\3774F=\r$Q\275<\372:\275\020\211g\274\227\315;;\230\232@;\250s\3019\251\301\356<Q\325<=&N\354\273 \245\347\272y/\365\273\271\214%\275\300\255\322< \377\204<p\311R=h\372\023=<l\302\274\265c[<\376\324Z=\323\212o\274\272:$\275<\260\001\275o\326!\274P+<=\357\270+\274F\360,\275\251(\002<\"\252\020=\022\326\002=aoX=\333O\227\274\254=\033\274<\031\026=-\324x\273\\\366\240\274g\016\357\273p\313\226<\217\226 =\377;\004\274l\006\323\274\364\225\033=0Q\362<\352\026\273<\ndA=S~L\273Kd\365<9\030\304<\227\217]=\234\316\010=I\242\005\275\027\306H\274q\367\217\274F\212\335<\274\274i<I\023\250;X\263!\275d\362\310\274\010^b<\256\005,\275{W4=\236N\000\275\211v>\274.\"\207<3P\033\275j=\237;\374\310\022<\036\3436\275\215,\235<l\202\003=_T\270;\310k\312\274_\337\226\274\3674J=\\\2505\275\231\242\271<\250\351\250\274\t\341\020\275\350\243\022\275t\037\032\275\032\244;=\351iS\275\264#\"\274\212\200a<\r\232\033=<yT\275\343\273\010\275\347|\313\274k\251 =B\030!\2750f\231\274\366\306\221\274:4\322\274\257VY=\177\232<\275F\223\256\274+\262\030\275x\361\021<p\367\205\274\274&W={\303\217<\203\0339\275Et$=\244e\272\274ka\035\274.\266\351<\242\246\025\275jk\336\274E>\263\274u\343\007\275`\362\304\274\010\020\373\273i\026u<\035o4<\201\216T=s\217>\275\337\023\272<\373\247\203\272\330\343?\274hI\356<\362\205g<\3740\233<j\020\255<\267[\t=\224\314L\275\356\020\267\273\220\336\302\274\313D;=~fQ=K\342\'=\001/\361\273\367\244{<{\251\305\274\220_\324\274z\222B=\341\225T=i\320\034\274\233\022\"\275\0141\004\272\032\201\023\273\344s\"=\267\200\034\275\324\007P\275\035\210\361\272L\336\370<\361b\033=?[\226<\353\371\225\274\025\351\023=\310\013 =m\257\023\274\\\235\257\273\360\007\214<\302H*=\010|\343\274\373\306H=^P\354;\277H$=;\t;=4\003J=\225\020G\275\377\213\203\274oP\347\270% =\275\220C8=\277>M\275\177\356W\275\350\244\020\275\000\2145=\177h\256<j\201\310\274vN\215\274\033\t(=\262\223\002<\t\033\276<\362\332\235\274\003L\325\274\301v\022=\271\0147\275\342\365?9|)\255\274\035\246M<K\200\271\274\3231\037=\367\205\273\273\3603*=m\315>\275\364eS=\334\274$<\320\237\333\274e+\336<\256\250\364\2747\241\203\2745&#;\363\365\202<\262\225L=Pr\334<\367\365E\275\377s\202\274lE\003=\353\226\302\274\351 ,=:yU=:IM\275\272\231=\274\361}\016;\014A\034=\2778!\275p\2243=\346&\234<O\021 =1\275A\274y`\306<\320A\035\275jr\r=|R\014=\030\216\257;\341pM\275\0003|\274\005xC<b\344O=k_\001<r\0074=\036\034\323\273\313$q<4\307\201\274\360R;\274\255R\004\275+4\321<\275\370=\275t\277@=V\276\024\273\213\251\360\274\267zQ\271\022\351\350\273\375\275K\274\025\314\001\275$\240:\275\310x\000\275\236\003C\275\222\224\227\274\217\236\203\273\315\361+=y\002\357\274)O\035\275\340+M\275]\002\037=@A\354\273S\0355\274\250\177\332<\016\377&=\275\2476\275\346\010v\274yG\264\274;n\016=X\334\246\274\212\364$\275ALD\274\335\000\016=\220M\235<E@\004=\340R$\275\n_#\273\205\354\325\274b\237]=\235\256\342\273\333\255/\275\333\224\227<\\\355\227;\313;Z<\276\016\3749\316\375\'=I\000\001<\301\n\322<l.\237;/\315\325\274\214\277\370;\027|S<\310\'\021\274\2274\256\274G\027\235<\364\n\314<\375_\000\275,6\267\274F@\207;:\344[=P\375\210<-pc\274\253A?=\337T\366\273\305\r:\275q\357\342\274\"\315\301\274\002\013T=L\225t\274\232\027Z\273\262\367Q\275\034yY=\320\376\341<\270\020F\275V\301*=e\0200=\246\253g<\323\216\023<:\242\342\274\340/\344\274xM\241\274\225\313H<H0\027\275\033\372\264\273eKA=\020\271\321<\'\301\016\2757q2=i/0\275\013F\324<\214\373\260<h\310\007\275\343F\024=.,\213<V\356a\274\216\307+=\006\365<\275\033\207\205\273.N\201\274\373\037,\274\230\2655\275-\333(=\231Q\004=\353q4=G\271\t=\307\265\236\273\311\206C\275\n\250\306<\247CD\275-G%=\336\235J\274.\314\010=:\271\000<\301\354\352\274|Xp\274\261\235\';\355c\351\273\223\341\036=eZF<\2535\317\273~\371\300;\220VB<\"\371\033<\006\343\233<\307\310\320<Bk\334\274n&\201\274R\375\233<\356\035\325<\363\343\016=\233\367p<&W\201\273J;\306<\260\371z<\300\342)=\236\312;\274\324\2275=\337\3501\274(\217\372\273\276f\032=V\217\255<\264\3508=L#\366\274\243lw<_\207\004\274\321NB;\224\333\014\275\320\264\032\275\373\312\371<i^\227\273v\352\260<\3455`<0h\022<\010\254\234<\002!\252\274\263r2=-\322\027\274a_\344\2737 #<\010\275\354<V\370R<#\017\226<\2617\r=Nb\325\273\252\177@\275\235\233\"=\300\275\240\273\201\240\013=r\007S=>\254\341;\347\350&<6n\022\275\3423\205<t\000K\275\006w\375\273\304J\303\2747-\261\274\262\226\265\273\264\022~<\016\332\342< \022\350\274\026L+\274\303b\311\274\336\302Q\275B\252$\275\234\311\202<\220\304W\274T\343\270\274\253\342\032=\023\226\305<\343\3138<\346,\322<\007\277A=\0228W\275\224\021\217<]\033\014\275\0256b\273=]\325\272T\351{\274\'\007J=U\266?<\0267\233\274P\035\373;\217JN\275L\206E\2753\306\263<f\300\001\273\035\026\032<c\333=<#\356\032\274;K\277\273\362\344\033\274\262\033\005=U\351\361\273\215E\016\275\\\276A\273\372\324\260<x\326\353\274\330\362\004\275\261\013\277\274c\263\223<\354\377\021\275\006\330\364\274\342X\270<\205P\005=\006\273\025=]@\363\273\177\222M\274@\327\034=*\311J\275\351\017\017=G\021/\275\322q\004\274g\267I\275d\366\333:,m\333<q\260@\275\202\237\351\272R\365Y=\306\334\017\275\205\306\261\274io3\274\311e?\275\213\360W\275\202\315.\275\205K<=8\357\255<\344\033\'=d\365\305\274\224\256\372<v:\350<\304\226?=\376\232\327\274\035\322\342\274\246j\030\275\210\272\320\273\353\210\r\275\232A]<\312\312\275\273\024\017P\275K\227\315\273\032G==\243\034p<%D\306\273\003\350\353\272\321\002\222<\353\036\300<\217\025\256<e\243\000\275\246\350\232\273\322`(\275\017&R;\237\344\035\275XH=\275\022\216\001\275\"\324\217<\323\004F=\347\303J\274z \270;\220\036\023\275\r\341\016;NiK<6\207\346\272\254\245\364;\354G\306:\302\361!\275qQ*=:G\325\274H\354\014=\235g?=\243t\035=\315P+=\275\363/=\251\036@\272\016\334\265<]\337\312\274\376i\004\275v\272\027=\253\301\014=#>\r<\210\341\220\274\346\265@\275\005\323\373<\211\263\306\274\227\002;=$\302\274\274\206\256c8\274\351\235\274\257\302K\275\234}t\273\335;9\275K\264u\274~\334\021=\342\033;=\350\030\244\273\315\330#=\260\234Y\275Z\010\334<uc\014=\271\226\236\274`\363\001\275\301\313*\275\361)\255\274;\213\230;5\316D=\216YT=\212Da\274C\214a<K\224\022\273WcT\275\006\024D\275OO\027\274\342\3153=\t\223\250<k\214\004\275\007i\265\273\267}L=\003\006=\275C\250\316\274\272\227\247\274eS\027=N\200\332\274\337\205\014<x\365S=W\361\272<\266\326\341<\013\022\t\2744|\255\274&S\223;h\2108=P\216\302<D\034]\275\"\006\326<1\361H=\037\316+:\236\351\346\274\336\327\324< \234Q<\2429\274\274\005\037\330\274*M/=I\303#;\205i\347<\363:\244<\244\216O<\334JF\275\245\346+=A\r\336\274,u\016\275pp\036=\226\316_\274\242\256O=\310\267B=\220\250\026\275\313\221@\274\023c\022\275\234i\253<\315w\004\274\254\373\031=\254\020Q=\026Z\216\274[\n\230:\252)\025\275\366>\367\274#R\013=\206\276\336<A\327\257\274\202\332\200\273\005C\010=C\241V\275\373\347b\2746\334(\275\021\343\357\273tU\001=d\2202\274\267\315\377<\265n0=D\204M\274\007\276\355\274\223N\235<\313\325\034=l\342\333\274\317h\375\274m\035\342\274+K\261\274\032\300\007=&\'T\2755`\006\275\300\277\232;$/k\273\217\'l;\2733\035=\275\217\017\274\340\217[\275\007y\002<\345\000\370\274\322Mo\271\261\216\200\274\354}\232\2744\221S=re\247\273y5*\274{\t\007\274\210h\365<\353\366\377;6K\022<\3358\335<N\t\316<V7\003\275\265z\032=\033\010\"\275\3116\233\271l\275S\275\346\244\307\274\225\241@\275\016\214X=4\026q\274\216C\344\273*u\274\274ah\004\275e\250\037;N\000\256;Y\274\355\274\367\274\322\273D\340\377\274\261\255\226<\270+\314<z\025\035\274\360\275\022\275;\311\244\274\031\347L\274\024\373\211<P:\330\2747S\027\275\356-\376\274\262q\343\274Q8\257<\236\220T\275\362d\316<P\321\027\275\327\200\235\274D\347\324<\212O4=\261P\035=\273\315;\275%{T=\331\277V=\266;<=\336D\000\275\241\210#<^45=\327\306\267<k\rI\275\014G\266\274\215\252[<\372\261V<\376\314\037\275\326\274\271<%U\037=\245\230O=\244\311\003\2735:\241;\275\324\360\274\033\351\002=\016W*\275X\350\332\274\226\333Q=\322\254\217\273\231T\324<\212\363\210\274b\030\013=\030#:\275}\230\232\274\324 \037\275\315d\275<\305g\311;\2147\203<\312\013\310\274\256\320\031\275c\355\032\2735\2401<\377\013X\275\377\206\344\274\360\361\254<\3672\235;\225\365\260<\261u\266<\327\"K=\025\323z\273\020\326E\275=C\t\274\355I\326\274\016Q)=\254>\036\275\375H\006\275*\0063\274J\007\230<XL(=\322\031\036\275\237\377\003\274\003\373\303;_\353\370<\333(\227<\3729]=\376\r9<\353\r\372<\364\370\n=4\r\263<W\344\257;\206r\271<\\u\r\2740\306/\275\031C|<$G\223<)\332\023\274\241v:=\321\322H=\024|\023=tO9<\334\267 \275\236\202O=\220s6=\340\221\312\274\204\274\364<{\267\232<n--<z\257Y\274/\226\336\274,\311\206\273\216\343\371;\224\r;\275K_\351;T\260}<\312\261\352\274\037\272S=`\\\r\275\264\324\350\274\307\236]\272\211\212\326<\262g\242<\245\341\036\275f\254[\275\274\326\313\274\212v\177<\352\363S\275\313\272q<\344\347#\275\333\205O\275\203\304%=$\364\036\275-\t\025=\321YZ\275q\216\014\273\331{\034\275z\004\316\272\276R,=\271\244\016=\214\274\214\274\345\014C\275H\000\n=\215\2550=\246\301\365\274AZ\030=\203\314\306;\310\363\226<\200\327$\275\240;Q\275\3427\n=\224\324\210<\177\340\312<Y\021\024;\313Q\312\274\037AK<\021d\017\275\010E.\275\310\014\\=\326\002[\274\212\010U=m\325\216\2736\354\036\273\326\\A=Z4\214\273\275b\263\273\343\210]=\300\206\035=\323\0370\275\224/\316\273\021\034A=&\321\022;\335\352x<\301\025\"= \267\005\275\023\3629\275\204\372\365<{[\013\274\223\264\366\274\333FW\275\205w\005=\273i\037=\027\345W=\275\036v\274\210\330:<\366\320\\=\024^\322<\225\027N<\316Gw\274\036=T\2751\241D\275\rY\304\274\377\371S<\272\237\203\274\027\343\206\274\263r\t\275\371\3568\275F\303\032\275o\\\001\274K\365>\275\275\371\263<\371\315\244<\360:P=z\260\036=&\355S\275\362\315\034\275+\3735\275\005\325r\274\277\242\263\274\270\037\215\274\244\003\031<\350\033K\275G\321v\273\251`!:\020:\\<\303\244u\274[\351\371\274\'\r\024=\311\316)<s\202[<\036b\265\274B\t\013;$\242\230\273\202\340\016\275^\006\375<6\302\024=\362\210\003\275\2747\361;]<(=~\303H\275\030RA=f\2764\275\270\273&=\354\307\365\274\021\211\014\275}G\335;E\030\304\274\213Y\227\274\000e@\275\373Lt;q\225-\275\353\032\342\274\372\350\215\274\2469V\274\010\257\000\275\3454\002\275\241D\372\273\\/\022\275A5\224<4\247\376\274F7\261\274\272\332=<\317\265\222\274\215E\027\275\312]\362<C|\346\274\225\336L<,l\241\274\363\266\372\274D\021/=z\233|\274\212&\006<\374\030\002<R@\250\274\311\337\323\274\255bP\275\253\2437\275(\220(=f|\322<\265\200T=Q\263\000\275C99;\230I\270\273\353W\030=GdG\273\321q\255<5qX=\255^\250<62\221<\370,/;\345q\007<\237\370\200<\200[$=f\232\021=\004;\265;\316T,<\327\341#=\200\315\037\275\340\374*\274\303\224\201\274\002\302\002\273\347\355\t=}\233\031\275\366}+\274@r\002\275\355rC\275Z\224\243\273\370[\\\275\240\337A\275*\3221\275\317k\227\274\233K\213<\362\014\024=\037\332\372:\336\222\211\274J;K\275\263@F=\216\001w<\3757\200;=\2535=*s\277\274\0241\317<5\322\312<\212\326\020\275\265+\020=\330\016\001\275\376c\014\275)rJ\275j\305\025=\016D\235\274c\376\004=\331fD<\336\2423\275\243\342\352\2746\2358\275\022h\341\274\000\344\037=\031\030\020=N\341O\275\326)Z=7\362F\275\247\303(\275;>\004\274X\351\014\275_~W=\371\020N\275X\350\246\274\274r7\275\217z\277;4s)\275%C\303<\005mB=#7E<\271\256\377<\311\000==\341\2639\274\246\326\326<\331\356-=\201\357\325<\010m\020=p\310Y\275\275\247\345<~\303\366\274\030\3716\275r\024@=\010\014;\275*G\376<.\311K\275B\300L\275\276\034\330<\220\3671<^q(=\212\215\333\274.\000T=NT\\=\312\016\245\272\373:u\274z\262\331;\014\363\300;\341\334\"\275\374V :o\321\221<\2776>=\3639\331\274\273\354\365\272\327/\353<1\2273\273\367.\032<\250\032\323\2732\272\217<\024U\031;\231f\325\274\215[\315\274%s\302<\272\037\314<\274\312\006\275\365\3302<\251/q<1=\263\274>\277g\274O\035\355<\264m\356<\3167\010=\225\214\325\273A\260g;4\352\314<:\302H=\260\347\274;\212\357[=qJ\220<\346\276\316\274\375\356\222<T\010.\275K\205X\275\201\342\020=vMG=\266\3568<\222N\010\275V6\237<R\224\234\274w9\323<\000\025<=dm\n\274\267\337\273<\016v\t=Q\353\203\274\245\t\272;(\253*\275\345\250L\275\204\350\231\273H=\003=\n\351\223<gw\274<\254\364x\274Y\301\254\2749\231\364<UA\240;\211\271B\275\265\257B\275\310\322\025=\t\2620\275\306\332\023<\031\231\337<\245\361\310<\246g\257<\206<\236<\251\2634\275\203k\351\274Uq\215<\201\236,=\216\243\017\275\242\346\257\273\314m\373<\203+\377<\343\374\265\274\345\333\203\273<\202\000\275\031\353B=\227\221\236\274\004k\247\273\300)1\275 D\016\275\324n\n<t_\241;\264;\035<@\316P\275\257\334\027\275,\377\010=\231\023W=1\311\334\274\3777\207\274\2410\302<#]-<\352o\3358\272a\343<u\344\030=Z\372i;\"a\031=\206\336\031\274\210\271\016=\223\300\270\2742\307\334<Nk\027=\237)I\275\325\266\275<?(d<H!6=\333\237\021\275\250\330-\274\212\031\033=\310<#=B:M\275:N)=WX)\275\037b\341;\210\251@\274\243o\344<\236\337:=c+\233<\352\306F\275\2572\321\272\256@\344:\270\311\311\274\325\320\354<\345\221B=\332\205&=BZ\035\273\022I/=k\254\370<\373\310:=\264\227\215\274\347\273\212<\254\317\005\275\274\314\232;[:\017\275\t\271\315<\302\327]\274\372\340#\274\303\335\267<@\353\210;\t\307M;\246\2762;\313X\236<\032\300\265\274\266XY\275\203h~<\3014U=0\272c;a\244\t\275`\365\021;r\322\233<=\351D\274Z\017!=\240\305\261<\331\316\017=\335\006\341\273\2348\022=\360i\275<\251Q\037\275\274\271e\274\006\242E=\2664K=\030\007\346\274\376M\033=\306\t\311\272r\330H<l \276<B\214\365<boO\275~b{<\005\253!<;)W\275\237\373N\275\373\233\007\273\267\004\r\275\365+e\274\004\200\023\274F\'S\275m\333\231\273RP2\273\242\002\312\2745\313;\274\363\301F<\255-\373\274!~\362<n\nY=\030k\352\273}\006\215<\202\330\270<\260\224\241\267n\202*<\353\357q\274n;8;\203\213\244<\370\365)<IJF\275i\266\333<\n\325\221\274\2546\364;`\240S=\024\007g\274W\323\352<C\333\002\275z\207\345\274K?\023\275\000\\2\275\'\265\203<-\275\371<\320\205\001=>JR=\366\177a\274w\3369\275\325MH\274\004\254\034=o\216\305<\005\345\026\274\033\316\237<7\300\007\275\216r\225\274\023\200\345\274.\2015=\367\207\321<\312[0\275\261\203\026<\305G\023\275\321w2\275%\330B=\002e0\275\230\362\025\275\306\350+=\204\3208\275)\243\2748\332\2627<\360|?=\360\252\001\275v`\256<\345]l\274\303&\311\270\303\357F=\024\226M=\026E\021\275\307\270\360\274]\001\212\272V\023\202\273\300e\315:\002<M\275\213[\200<\266\004\034=\322C\235\274\\jA\275\202I*=\213\320G=\240{\370\274\303^Q\275\316R\335\272\023\350\267;?\211|<\331Z\207<F\223_;}\266\371\273\220\242!\275\017\312P=Z\307\222\274\006\215\246<\262\263\307<\273\036\027<amA\274\342\243#<\235&\342\274D2\311\274dU1=~\331\014\275\027\351B=\2077\024\275\215{\326<\237<\027=\374I\364\274\332[\303:\306\227M\274\277\223\'\274\366z\004\275\343~ ;\227&\027=\253\264\001=\007pF\274\330#N\275\343\010_\2748x\372<Y\325\310\272\353zh<0OW=\375=\252<\023G\010\274u\204\246\274\236\240:\275J8\346<\344\014\234<a\310Z\275\342f\267<\032\233C;\371\307V=\312-\357\273\20442\275\335$\255\274\342_2=W\004\323\274AO\010;\235\020\312\274\373cU\275S5\214<\331z[=\014&\016\275\376\021\000=>.\010=\265`5\274\003]\306\273U\350v\274\305\3725\275\021\000\031=\"\345\020=n\211\022=\177:E\275:\3459\275m1\244<\274\020X\275\002:\215\274\206\236\360\274$/\221\274R5\224<\247\326\276\274\203P\031=\253.\032=\364\302[=\233\213\346<\342\272\323\274\355\362\033=\306E\024=\231R\260\273ie\215\274\027!\232\274\342\261\034\275\216y*;i\332t:S\211\010=vl\037=U\331B\274\307\006I\274~C\007\275\003\0361\274\272\037~\274\215\025V=e\250\031\275\036\020Z\275\306\242D\275\221\215\314<]m\035=+#\023=\225\226\002=o\302\n\2753HZ\274,\2644=\217_\026=(\360\210\274\365@(\274\034\232\260<Dc\017\274p\251\202<\246wJ\27570n:\244\010+=\004\305\024=$\357\347\273g\202\315\274\304\t\003=w\0359\275\030<O\273\215i\374;U\n\241\272\222\226w\274\002\367\242<\004\325\026=\372\217\036\275\304v\023\275\375\2542\275\361^\244\274\206y\320\273\247\262\261\274$4\016=+\027\244\273\004\325-=X\242\315<\374\372\354958\006=\251\376\243\274\373\220\205<\322\372\024=|Fl\273\351\353\002=^@{\274aCA=\354\300\220\274+\323\370\272\036\373\216\274W\004&\275\371\032+=Px\026<\261\001\217\270\340*D=\245la<\244\305\265<]\301\250\274\354\345\356\274\324}0\274\353\347I\275\226r\371\274\246|\231;\217\033\007\275\300[\300\273\313~\036\275j{==~\317\013\275\rMZ\275U\030F\274>$\233\273k\346\343<\233\037q\274\336\227\r=\253\004/=\377\261\027<\306\023\330<$I\351\274-\014W=U\311\013\275e\3262\275\272\013\337\274\357\202\345<e\316\025=~\"7=y\263\337;rs\374:P=\260\273W=Y\275\\;\033<\2118s\274+\303\013\275\371\001\306\274\223QC\275\223\242\276\273|\002Y\2750\031\036=\274W\010\275\335\332E\275\211\220A<\343\261\031<\211\216\\=\221\246Z\275jm\244\274\307c\305\274\237\007*=\3708\304<\261\361y<\315\376\274<\250\211==j/<8\337C1\275>\205\250\274\014[\002\275u\3016<\242u\245\274\263g\217\273\2757\376<06\262<\270\370\006\275C\0165\273\366s\246\274\230#\250<\'\003(\275%\016\345<\254\312U\275U\240W=\317P\036\273\241\212\270<\213.\021=e{+\275\304)\347<K\201\024=H1+\275\315*\216;jOs<\267\341B\275\2679\205<\270?\033=\351\234\023\274(Q\022\2755\355\324\274\211\272M\274 \302b<R\020\326\274\327\210\\=y\302L\275\022t\307<c>\373;G~\327<\321\2315;\370\311\021=z\334\016<C\267,=\351U\272<\360\230@\273\351\235\350\274\277\337\256<En\211<\242\312\217;\214\313\375\274\310\225>=\334\200\207\274\340-\006=\230}\231\274\316\223#=|:\306\274\367\236\371\2726x\231<\006\005V\275\336s\022\275N\r\217;\376\036\274\274\n\246\214<\020\365\010\275\024\200\217<;\0325\275\320\264Y\275I\301\300<\341\277\323\273\356p\327\274\272\005\206\2742\303\326<\326M\252<i\340\274\274\207i@<\001\376E=#\236\305;\252\022\320<f5S=\227\030\216\272K\260\217<\361\215]=\366\334\323;6\033\372<)\'!==p\213\274\313\212\267<6\352\220<\345\312B=\365\347O=\024\361\212\274i\t7\275\204\316\013\275\333\344\344<\t\311\346<\345\t\307<\230\\\326<\222CS=\256H\305<\342\211\355\274/Z\034=\331r\327;O\000\337;x\345P=\243#P<?`\334\274}\361\373<\007\320E=\265\270\303\274N^$\275\352\207<\275t\335\006=~\010?=\202\227\220<a\200*\275\212\026\301\274Z\333\241<\031\317\250<^\275\300\274E+\300\274MB\\\274\201\005O=j\353\031\273]H\211\273-@y\274\030\010@\275^&\025\275\335qK=e\250\233\2742\271k\274\211\313B\275I\231\214\274{\312W\274\350\004\031\274\303\316w<\324\017s\274\313\357\342\274\013\217\254;\256!\n=+iS\275>\034\020<\314;\350<\244\201&<\366\3604<\356w?=_\214\204\274u\014!=]?\212;\361I9\274\302QC\274)\361\307<+\351\254\271\317K\255\274\202\237@\274\223\303\233\273U\355q\273PN,<jM\035\275x\020\035=\020\366\200<p\307>=\032zN=\027>J\273:t\325\274d#\334<\004M\276<\3046,\275\"{\200<\326\300\'\274\207\343$=:\277\001\273\376Q\251<\022()\275\357z\304:\253\365@<\007\253I\2757\241\354<\377$\352\274`\000,\275$\233\340\274\214\035*\275\350<:\275$\014\035;L\212\371\274~I9\275\211\216\224\274\326\234P\275\313\237.\275\252\272\327\274\277\234|\274i\360\217;\214\355\321:B\331\331\274+u\367;\210x\315<\212\216\361<\314\253\016=\245.\334\274F\022\"=\t\003\371\274\214S\373\274\214\3212=!\337O=m\003\013\275\023\304\351<\273\263\027<\032\245\024\275\266\003\347\274\312\241N\275\246\013\262\274\316\265E=\356\255\361\274+\254\035\275\201\006S=\311;R\275\020w\246<~\374\320\273M\333==\331NE=hJ\271\273\177o#=\361\374\245\273\013c\335\273(\014\235\274#:\003\275\251\257W=\"B\235;\243\000/=c\330J=^\344\266;&\272-\275tt)=\'V\021=\216\314O\275\027wW<\347\332\233\274\336\0009=t]s\274eM/\275\2302\343\273\355mX\274\036\330Q=-\357\"=\226UJ\275u\226\021\274;f\216<\367D\300\274)3\246\2730M\344;\331)m\274\331qs\274\236\242\246;\244Nu\274\275\345\317<{\217\'=YyG=\313\247R\2744G,\275\001\260\034\275\266\247\225\272U\311\251\274\211b\033<Ec\n\275\340u\311<\337\006\353\274\201FU=\227]\004=\215A\211\273\337\005\366:\326\221&\274\253\3244\274l2N=\344\367\003\275\'\277O=\020]S=2\345I\275\361\362<=\000\250\364<\nl\370<\336\375\236<Rn\200\273\264\247#=\327\006&=}`[=\256\r\354\274|67\273\352\365\246\273\332\337t9!\246\310\274\322\233\342\274`&\252:\221\025\035=\362^\353\274*\373\245\274\035\373\302\274]cv\274\372\007\334\274\036\037%=\245\342\325\274J\373\000\275_\2060\275\316Q\245\274}R\n\275\306mN<\215\370\272\274\343\215L=d\311\265\274\2723\251\274~\n\003=\242\237\361\274\212\227\374<\324\005+\2749\217E\275\006\214D\275u\245\002\274\023\237\026=\361`#=\036\235\344<\261\262I=\326\370\376<&\341P=\3475O\275s\331\347<\215\r(\275\024\352\315\274\377\377\213<\321mT=\355\323<<\236\215\\<5\323\265<dl\324<\035\212\233\274P\036$\275(\351\021=\347_\356\274\0011A=\210*;\275:w\217\2745p/\273\320\024\033\275\322\006\007\273<\371\253;\\\277\322\274\354\241\017\275p\253Z=\256H<\274M\305\215\272\2456R=HzF\274\244\230\273<\311\277I\2755\007\247\274A#\361:\013kK=\205\362\365<\275/\233\273\324\322\037;%\226\032\275\323)Q=\302\246\372;Wv\177<N75\274$\377w<\"\234\034=U\t\003<\231v\321<\353(\027<\361o\333<\302\340 =\303-\023=\216\255X\275\306u$\275\347\265\317\273\371#\n\275N=\360\274L[9=<\376L\275\237\355\252\271\323\266\017<\347\275\253\274\346\n\342<$\n\034=\340\317\'=\310S\376<\372b@\275\002\261\336\274\260\203h\273\354q,\275!\375\276<:AP=\231o\360\274j\322M\275\357\345\005\272A\241\366<\3410@=\216nu\274|\377C\274\220UJ=\032\234\206<\274\315\017\273\005\200\001<\030\260\324\274s\375\002=\233\273\206<\301\016f\274\336\3525\275\225\204\024\275e\260i<^w\362<\023\235[=\371`\007<\014\036\366\272\253\277R\275\274\216M\274C\331\024=\023o]\275\362\200\n=\235\010C\274\314\027\001\275(\350\313<\010\250\342<\202\277_\274\216\204E=y\032C\275\027\307I\275p\214\326<\236H\272\274\364b\023\274\021\257R\275\220\004@=\227r&\275\222mF7\221\274D\275Y\036\002\275h:\241<\233\306\223;\204\252\362<\261\332\272\274\224{H\275\323\022A=\021F\034\275\251\366\221<\031\212\232\274\322f3;\001\022:<\220\325\"\274caT=\375\037\\:KKM<45J\275\023\213I\275\236\3644=7\313<\274\237Y7\275\327\267)\274\016m\241\274\364\323\257\274\316\360)\275\237\364\305\273\022\210\221<\334[K\275?o\020=\304\322\021<\234\313\233\273\177\337\251\274#T\'=\276\342\031\273\325\350\005\275\315\261\026=S\2005\275\313y4\275hf\014\275\254N\"=\377\001(\275=P\365<\026!\222\274o\354==\005E(\275C\246Y\275`\334\277\274\034\311\205<I\340\326\273\005\013\303<(\"\252\274\363EU\275\343\205@=\253\313E\275%\024\311;$n\216\274\"\311\363<C\357N\275/Q\260<\341\277\253\274v\335\311\274!eB\275s6.=\237\374\223<B\031M\275\"\026\235;\024X\027\274\204\001\272\274no\212\274\244\333\323\274>\316\357\273+\026\216<\271.\333\273\200;\203<\000\377\303\274T6\201;\t\2239\274m\265\377\274o\325\201\273+\204==$\037:=\205\257\222\274u\215\237<n\225\010\275\3157\207<Q\324\350\274M\375&=\266\271\031=\005\037\030\275`g?9\230\237\004<\266\251R<tA+=\305e5=\032\257S=\233\321+=8\302S\272\327\333\354\274.\231{<\375\233\272\274\367\030\236\274W\204\231<&\313v;\222o\003\275fo\327;\\\201(=\323\251\242\272\210\203\307<+!\326<9f.\275\254\277(=%#\024=Z8\322\274g)\237\273\274HB<\330\n\361\274\"\3068=\260\037\005=\263\2620\275\302\272J\274\236R\026=\234%D\275Y\021v;\271\2216\275\231\260M=j\367\243\274P\252i\274O\363Y=dV(<\357VC\275-\235\242\274{\230Q\275\354\032\021=\337@ \274\363\261]\275\345\306m;\004\261\341\274\177\367,=\177\240\001<OS\304\274\372\346\372\274!\252q<3e\213<g\'\245<\3033X<\305\347J\275\330\232f<\276\365/=Y\230U<\344\273@=\370\341H<\344\362\207\273\262\347a<K\220\321\274\034\263\205;\332\2151\2759UU\274\322\230\357\274\306]6=\2514\201\274\207\347\016=,\323\364\274\270\003\243<\314\334$\274\"\022\020\275\020\035\321;\n\034-\273\367d\204\274\177\203\030=w\314\223\274\013 \033<&C[=)\216,\275r\204\247;\000\312\273\272\261\374j\271\257\374\317\274w9\016\275\226\t\262\274\033\215\357;\025i1\275IB3<\242}`<`\227r\274\2558\017\275\366\271\236<\033~\006\274\246\312 =eT\'\275E&Z\275\t\334\002\275LP\001=1\365\367\273U*\031<\350\311\r=\267\217<=\332\207\275\274t\372\'=\202h;\275a4\303;\324\212\305\274\323>\r<,\014\303<P\2460;\261\327/\275)\204-=\251@\362<\264\263f<()e<\335\365,\274\272q`<~\0306=\351\332\265\274\007\210C=\267\014\036\2756\374)\275\250F6<v\341D=;\270\302\274\370\3574\275#\331\177\273\333JB\274y\322\215<\364\223\261<C\262!=\361B&\275\355+T\275\020\017\n=\346p_\274\342\322Z9\305k\244<u\016I<\023{A\275\355\001\311<\332jJ\275\207\343\025=.Z-=c\024\020=\013xG\275|\361\356\273\007\036\322\274p\"D=7\020\270;\271\266F\274A\177\263\274\267s\276\273d`D=\311T\004\275\014\\D<\366V^\274\313\257\206<U\350\255<\214\"\217\274\341\026#\274}j\323;%CQ=U\014A\275\2344k:\367\366\305\273\307t\"=\235\260\350<\345\364\2758\351\356:\275n\"\006\274s\202\n\275\312\271\307<I\210U\274H\261\2469Ew\324\274\242Q[=\330JQ<4h5\274\371\250&\275\255BJ;\210\316\215<\214/J\275r\024\035\275\177\020\262<\311\201+=e\317 \275\272\337\336<\235\325G=\262\022\024\275\320\002\311;6\356_\274i\201\352\274<jZ=3_\203<\"\025p\274y\276\275;#\205\014=0j\255\274tc2<\214\313\002\274\233\3334=\343\303\202<Yu\375<\235|\351\273Z\001\226<f\255\027;\344(K\275\346|l\274\20727=\253\232\317\273}\014\026\275M.\331<:\360\303<\343k\204;?\203A=y\335+=\3332-=\361\037\r=\351\303E\275J\337|<\236K\014\275$\031\346\273\376\r\2729\n\266\010\275\223]@=\332)G\275j\0204<\202g\370\273\332Q\230\274a\252\333<L\330\034\275P8\016=\220 \027=\004hS<\337\214\243\274n,\244\274\365\'\r=88\212:\2418\300\273\265\351`;\331\243\005\275\373\257\322<\351\023\260<u\351\324\273-\257h\274VT\360<G\'\032\275)\230\n=\210\223\344<\031\223\331\273x\244\032\275\265\327\237\274.\007:\275E\321\004\272w\377\371\274\247\033\337\274;\315?\275\333:x<\2410\"=\372E\343<\353c\354\274 5\345;\373\005\332;\363\265#\275\241\245\317\274@\010A=j\355\320\274`:\236;\014\'\"=\'P\037=\203\307\207\274\334T[\275u>]\273\226\375\362;\001\t\265\274\001p\002\275\326Q\250<X\262t;\323M\347<\024X\342;\2354\205<\245R\266\274\371\306\217\274h\301S\274\225\"]=W\000\234\274\002e6:\224\207\r\275\274\371\010=\326\\-=t.\324\274\240\315o\274\034>\030=\242\021\n\275\007\274\231\273:NT\275\221\237.=s\3632\273\020M\250\274\003(\327<\207\240\225\272\241=\331;B\277\210;Yj:\275\300\217 \275P\016\263<\007\355V\2744m\341\274\210>5<\013\363J=\344\205!=Z\375\203<bb\013\275\020\232\245\274\314\264\215<JeT=\265Y\033\274Xv\2579\246\002\237\274a\241\242\274\306d\332\273ci!=\246&\375<\222o\\\274\247\035:=[\243\272\274\010\026\301<\2145\373\273]\357M=\333\316\035;\207\331\032\275\032bN=\314!\330<ui@\274\027J!\275\324e\227\274\226\373\270<\274\3136\275P{E=B\271V\275#\300\207\274\n\005\025\275\030\211\351\274\364\263\274\274\317\2453=\242m\032\275-_%=\353a\223<[\371\204\274y\017X\275\n\230\275<\207\211\006=\236Q5\274F\231\204<~2-<J\264R=\340V\254\274\\\311m\273E-\230<n\207\323:\207\r\022=\364\265\t=M\320\001<o\027G=\036\024\013\274R\003\n\275]\342\031=\263s(\275\200$e<\320>\216\274\016+6\275\266lI<2\326\003=a\332\371<c\265)\275\256\335X=\375\032\244<\224\232M<AD*\274\211\353\326\274V\240\022\275\323^\307;\231Q\241<\213\223Z=\324\370\020=6Q;=R\200\321;\031\000\"=^\346\322<q\235\010=KS\205</\330\207\274y\253\032\275\336\212$=\036\375`<h\263[\273\023c\236:\331\241\004=u\321\274\274\266t\022\275y\216\235<K\212\022=\340Z\364\274Z\266\370\274\207\226\316\2743\310A<\217\n\277<\372\301q<|\306\375\274\321\250\254;\260__;\226\025i\274\302\303\233\274\325\376\230<z\202-=i\227\246;\301Tb<Er\372\274\361\0302=\335\223\243\274uJ\330\272dp3=\230\022%=\343\231\005\274G{\177\272\376\007\006\2746K\210\274\310k3\274\331\254\023\275\221\276;=\357\031\n\275F\361\034=\206Y\353<\360j@\275\322{Z\275\010\222\016:\007\\*=\332\305 =t4\001\275-A\243\274\217\347E<\375\251\035\275.\243\323\274gEP\273\316\234W\2753\272\303<\361\3319=t:\227\274\270\232\034=\270k\2169\253\3616\274\034\000\250\273h\256\273\273\324\255\327\274\206\007/<^\256\t\275y\206\034=&+\335<\013b\022\273\207l\343\274 \301?\274\371\342\344\274\275=\356\273\203m8\275\270\024;\274\222p>=\351P\206\274T\322\247\273\220\274Q<\2739\032<Qf\326<cz\315<\363p\260<\314_.\273\3149 <\325\365G\275\352\250\302\274|\332\237\274\310\314\222;\014-\254<C,\321\274\033\006\271\274\263\246\023\275KI\207\274y\2358;\207\234\345\274l\372\210\274w\363\301\274\202\237\234\2713\336P\275Y\351\366<Y\2131=<\026\001\275T\366\017\274\346\230\243\274\277<7\2759D\237<w\365\313<\336\3652=e\030}\274\027FI\273\240s\215\274\203\326\363<\032b]=\364a@=^\350\345<d\272\354;Gw*\275Q\330P=\023\234%\275\200\226\014=l2J\275\256\334H=\367\273@;\252XF\2756o4=}YX\275\363\026\313<\306\247\n\274\1773\205:av\307\274P5\315;\t\333\036\274\262D[\273\237\022;\275q\225\\\275T\254\r\275\240!\315\273\307SJ=\264aV=\250\363\033\274\254\374Y=?\3250=\\\t_<\276\365\t=\212)\006\275B\230Y=\016\021@<LJ\027\275\225\027\0209\2048\360\274\331\324\"\274\253\025\332<\240\262\032\275\r\357\013\275Q\373\344\2748d\355<\000\344\034\274\271Ow\274FcI\275\201\212\033\273F\370C=B)\342\274#\016\206;^yZ=\347\240\232<\307\326V=O\010\017=\034H\234\274\200\345\360<~T;\275\350T\030=6\030]\275\375XE=\2339.=W\003G\275\357r\275\272\242\031\251;c\370\351\274Y]\022\274\3571\222;\244\241F<At\263\274>\227\000\274\371\022\355;\033\234\206\273\367x\275\274\353\372&=\251\216\365\274>\251\032\273=\260[\275\016\254\035\275\2045C=p\276\007\275\330\'\262\274\274\275\024\274g\033]<\267c\036=\304\003\374<\022\032\017=S\317G;\265\300\302<=\325\251<w\273s\274\316\277\335\274\016\346F\273\307\352\321<\277~\241\273\016)\247\272b\225\002\274\366\310\374\274%\304%=f\004\005=\365SP\273<\332Y\275\323\023\247;\036\3003\275v\2433=8\373\021\275D\244;\270K\021\332\273\305\325D\275\354\376\332<\376\024\255\274>\035\354<\366\202\n=\340\016\241<\0076\"\274f8\363\2743\263F=\366@2=D\365o<X\216d\274#\246D\275\273Z\036=\332\305\007\275\321\276\245\272\227\204\001=+{\010=\305\030B=L\332A=\264j\261<\356\013\336\274\225\1777\274\267\023\245<\007n*=\035\313@\275\252;\213\274\023X\005;TQV\274M\331\016\275z\345\001\275\254\037\335\2731d5=U\031A\274\304\210\223\274\270\026\010=\r\334\213<\027x\n\275^a\222\274\264J2=\2768Q<\025\270\330\274x\304F\275)RI=`\317\363\274\201$\201\274N\357*\273\223r\327<\234\024F\275\'U)=F\267g\274\026\020\275;\316\2049\274\334\225,=B\233!\275\330#\\=\360\3530\275\352x=\275u\024\255\274NI%=\200H\022\275\027\321\304\273\022nC\275\326\373z<\260W\254<}\237\"=\014rM<v\021\033=\000\273/=\307\226\256\274\240\351G=\004#\033=\033\201a\274\214M0=M\374\027=\014 \247\274]\267\034\275|[L==\275\036=(\r\360\273\200\233\225<c\371\010\272\22077\275\311\260q<q\335\266\274\2326\321;\321\207\244\272\003\001\325\274n\236\\\275\330\272\320\274\203\304\310;%&*=\254\376\213<\274k\001\275\333\000\260<\"\010.<\021a,\274\357\351\212<\305\225\241\274\nV.=\203\321B=x\333\037\273Z\367\031=\034\'\001=Kq\221\274&\0108<\270\307\177<mv\023\274\036\302\353<\014xO<\016\227X\275CW/<\311\343\316\274F\237\'\275\3205%\275\032{\024=\344\'\'\27527\t=V\306\026=\344+U=\205\306\306<aN\304\274\022*>\275]gy<\325H<;X1\205\274\337\274\r\275]/\353<\367\275\207<w:\006\275\335\262+=-\007*=\215\276\000\275~\303\375\274/\213\202<j39=\207\017\007\275\000*\377<@\3608=i\225\347<Z\255\025\275\367\254\263\2746\256X\275\352\243k\274\230\273\210\274\253\260@\274\331\364\247\2739\262-\275}\270.<\353\020\317<\275\270\010\275\000\214\310\274H\266\333:\361(\001\275&\332S;\345\244@\272\000\225Q=\2778\032=w\225\005=\023\365\352<c\034\207<\321N\004;G\204\201<\303\327H\275\tA\233<\361\322X\2754MR=\336;@\275\333\240\023\275\356ju<\212\217O\275\005\316?\275\363\327|\274\306\322S:\036\036\223\274\330IY<\035\224\253\274\273\241(=\326\312O\275\330\275\315<\263[l<7\235\017\274\360/\230<t\251T\275\232\240\026\275\263\260-\275\257\272\266\274x\241t\274f\267\"=\010\265c<Iy\225<E\302C\2758\307.\275<\262\231\274\321\2540\274\300\337\236\274\210\0253;@\030C\275\202gH<T\005\374\274Z\265\\\272,\331\247<\2527\307\274\2234\213\273\352 4\274\304c\254\274\216+\255<\340d\t\275\3479X=\216\3021=<\271C=\233k\032=U\247F\274\373<>\275\322\302A=W\tS\2752K\254\274\027K\233\274\032\230<\275g\250!=RU\265: \316:=X\271\363\273\252\224\312\274\2570\300<\352\220V\275\233pK=\307\263:\275u\036X=\341\377\241<n\035Y\2753\340\264<\325S\031=j\242\"=\225\'\006\274\247^\352<\3305J=_%\343;\255\327\356\274\225\242E<\310|\364<\200\2714=\006\214)\275\032V]\275\342\311i<\332:U=\306\202\027=\013\006\017\275/\230\374\274\033\340J=\t\332\t\275\354\274\255<\021B0<L\371g\274T\317Q\275\027H\256;\'D\332\273\373-C=\274K\327;\240\207\364;\370\r6=\305\014\367\274\302.\205<\rV\026\275\014\330\266<\335\r;<\324\260,\274i^Q=\250I\006\275\336 \341<g\344\003=9t4;\327y\335\274\312\357\037=\337\021\360<SM\272;\256D2=\374\302\206\273@\215\233<\262\371=\274\342b\000=\347ZL\275\373\322C=\252).\275\360J\002\274\240\346C=\036\304\023\275gD\016;\372\352\275\274\014\240\366\274\225P\307<\247\\?\273I\325\227<\010\000{<\007\2256\275\227\254\207\2748\360\035\275\330I\204\270\354\333A\274\354\207\272<\035i\004\275\311\377.\275\340\346Y=\253\203\273\274\306m\010=o\2456\275\217p\364:p\322\3459\315\311\\\275\327\035\226\273\230\205\210\274\306\200\017=.\315\002\275\257\352\255<D<\203<\007L\032\275F~A\275\347\277\020\27500\361<\222\376\313\273\262i\t\275P\371\333\274\211\302\354\272\\\355\315\274\3043.\2750\020\367\274\200? =\263\354S<\262\256\014=\017h$=\225/P\275\273a\000=2Z\326<0\207\256\274X\020\253<\006\3417\275\251\343\371<\240_O\274\313=$=\032\3242=\276\326\252<a\023\356<\340\251\323<X\232\205<\005X\023=\333\243\032=\363\316\2059\256|\314<C\366x<\354\223\330\274\226\236\250\274\335\347;=5\020\212\274<\216\013<\304\3632=\227\311\204\273^g$=M\\\303\274o_#\273K\321O=Y\032!\275\276#\277<\275\255\t=K\355\330\274\353g \275h\227F\275!\0145=\2243\346;\026\340\264<\271\223\275\274\t{\317\274\232x,<\335\254\246\273\307|\254\273\335\330i<\276\340C\2750\306\244<v\226C=\225zR\275\334\335C\275kUf;!\252\025=< \255<\276\220\341<\307\204R=\365Y\352;\306\207 \275\274\267\277\274\313\036e<P\215\315\274\'e\301;\032\030Y\275\257\026Q=\214\234\352\274\351Y\214\274s \005\275\003}\254\274\200RM\275\\\234\350<$_\020\275\272\3511=\007\304\364<\t\377V\275\326\363\003\2730\266Y=\2411M=\356\340\360\274\275t\211\274\223\'V=T\312\312\273@\201\023\273D\013\371<\315\323\226\273\362\232\307\272\221\343\342\274\364U!\275\217\270@\275m\332\204\274\303\234\363<\361\350@\273\327\334\276\274(\343\010\273g\0028=\373j\331<f\003r:\000\010O=`\246\225<\327.\037\275\224\267\032=<\253\371\273^\210&\273N\201\307<\317{\361<\325\312\362;C\343\270\273\004\342s<\240\376%\274\304\016\031\274\272\275\226<l^\272<gX\307<\322g(=Q44=4<,\275\230f\033=\177\371!\275\212\006@=\306&\323\274\023t\350\2748`\323\274\010\203\200\274\\@\263\274K5\026=\223\317\272<\'\234\244<\277\323\2357\242\0258\275\317iV\275\314x0\275|\210\022=\036k5<V\2353=\235\033!\275\251\335*=\035\224\216<4\316\244\272\302\005g<\312\002I\275\335\241\355\272\202\204X=\372\332\274<\251\314\206<\374\226M\275\242\326X\275\273#\223<u\302\017\2752\261Z\275U\343\014\275\222\005\003<\212\306I\275I\r\014=,\355\302<H\261W=\347\2113=\371\007\032=\201z\376<\206\3549\274%\322\355\273\305\301\256\274A\260v\274\tr\305\274\3665\026=P|G=\344JL\275\333\234\312<\262{\216\2746\004]<o\0066\275\334y\355\274\352\331\016\275\217\233\327\273\025\226\226<A\266\376;^\206\210\272\225\340\331<PN\310<\250&[<\274\n\177:\036O\014=B\307\215\274H\020)\275\303Z\344<Y\007r\273M\3466\274\224\311\236<\253\326\377<\000V5\275\276m(<\311\217\262<\204\267j<M\324\373\274\305\276\275\274\241\217\256\274\332\t\032=\035\204:<\257lO\2759\202\377;\376\037X=\256\232\243<l\326)\275\243)\227<\262\302\362\274\256\027\327<\203\004(=\032\347)\275]p\243\272\240\236\252\274]#N\2753\274\272\274\317\271E=7\317T=\006Z\023=\3205\202:\006\347N\275\034t\240;y\217Z\275+;\022=]\317 <\207\232\010=\361p\325<\2028\"=\016\365\341<\222\230\n\275\311\360\007\275\251n7=\264*\352\273Js\013\2749\302\323\274\303>\350<\357\264<=E\334\363\274<_\363\274\243\272\026<\222\236]=G\254\261\274\264\234\n\2740\266\016=\223k\016<\220?\001\275\016\2619\275\023M\351\274Q|I=\256\223\251\274X\330<<\314\"e<\033\202j\274\373;\034\274\245/\264\274Y\317\253\274\373L \275\373\252\260<\272\365\320\274\262\255\003\273\352s\310\272&\373\014\274\244\037\230\2747\353\'\275\230\020\221\273#H\222<e\364\260\274\266\233\344<\345\210L=@F9=\200\220\014=9vL\275B\320\236\274\273Q\323<\266\332\022=_\314|\274\0005\004:$M\000\275QF;=csW\275\244w+=\307\330\207;\214\203\010<\014\023\265<\246\020\035<\030\006g<D\314\003<$\237\226<\211CS\275\367\251\225\273\366\030\311<\344K\351\274\326)~<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
          dim {
            size: 4
          }
        }
        tensor_content: "9.\371:\256\337\n=\361\265M\275\207\367\263:\335F5<N\000\221\274\351\271\002\275\275\254\365<\305v\027=(\204\252\274\343~U=\244\307\003=\322\277\224;\020\224\t=^\221\r\275_u\274\274\240J%\275=>P=\354\014O\275\207^\303\274\301\257\262\274\360\207]\275.\003\312<\271Q\352\272\202\203)=\312\260\016\275\245\230{<8\254\312\274\327\222\264;\2365\223<x%\215<\270\014\262;l\321\255;Av/\275\017}\014\275\201\203\\\275Q\3473=\007\342\220\274\022s\002\275\262`+=\021\351G;BH\251\273\377\242\010=F\201\340<\360\016\235<=\006\027\274z\227%<j\236\342;l\344\211\274J\'\345\274\377\240\323;\366\024\344<Zq#=\210wC=T\363\177\274C\025\330<\341c;\275\220\227\036\275\234\246(\275{]\302\274\3465\210\273M\200\034;\315\010\034={\004\354:po\216\274}H\312<n\006\031\275\030\333/;\025\252\342<X\222[\275J\224I\275\265_\250\274V;Z<Qs+=\345\320\217<\2432y\274\360\332\241<\224:\314<SY-=\375!#\274\233\317\263<\212\230M=5Ka\274@\230\221\273v\356Q\275A-\3059\300\361\234\274\177?V\274T\352\225<\370r;=\260 ?<\243\234\027\275X\265N<\270\233\306;\274\321\262<\035\317\241\273\326\272:<\204\312,=\325\337M\275M(:=\273\304^\274\032w\202<\363dF=\346\260\213<7\377\000\273\013/K\274aN(\275\262\251\017\274\220\232\020=@vH=-\002B\275\212\3424\275\231eS\271T\330?\275\320\270\201\274\3315\357<\024\213,=T\316F\2755\262\361\274\006\222#;\321D\214<\371\317I=\277n\330\274\022\030Z=\301m\305\274S\2051\275\256q\020\273\314\263@\275\231\247\035=y\035\031\273z\237\026\275]\017>=\027\034\263\273\255\342E\274\223\024\372\271j\256\330\272c\024L=H\271U\275\264\340\010\275\374C\n<\347\036\\<\200\025#\274Z9\304<x\347\356<\310C\004\275\364\353\035=\371\203\032\273\0327\023\271vj\\\275\370\325X=\277\'\020\275\001=\020\275s\220\034=\305\224\002\275\002\206>\275\352O\r\275#V8=\207fA=\266\033\027\275\254*Z=F{\023=\3264\004\275\007\304\225<\013\301\347\273Kc\021\273\275\356\014\275\272W\375:GL\334<F\270\034=\216\256#\275\272b\317; N\202\273\345C+\275\261\263\024\275\010,\\=\n\027\242<\353\245]\274K\2004=\225\354\006=\272\357\353<eBK\275\226\3534\275\274>\037=Z\276\"\275\331\002\033\274\363\253A\275A\233\336\274\337ua\274\177f\227\274\224\320\033=\270\351@\275[\224m\272S\215L=|p5\275\303\214L\275\236\020_\274E\212u<M\310H=}t\340\274|mR\275\200\276\"=l\200\026\275\271\222`\273$\206V\275a\032\302\274\244\353\310<!t\004<\262\321/\275Y\253\257\274\233\250\270<\303\007[\275\262\352\205<\271\377\006\274\201\316\201\274c\272X\275AhN=\322gP=n7\026=\247|\213\274f\246\347<JS)=8*\014\275\304\351\244<\346\346\217<\310\355\370\274-\256\005\275\305j\245<\344\2677=\'.,\275\261@X\275\213\310T\275\367\316\343<i4\022=\363\033N\275`f;\275\360\345S=\016 \315<L\243Q=aF\356\273\322\361\304\274\\\365\220\273\246^\r\275]\340\217\274zvY=\321\336+<9\233\023=\222XO=<\250\320\274\212\227\273\274\327k\375;\016\330\241\274z\307\241<\337k\256<\347a\247\2744\305\036=\340\373\300\274m\336A=\363\255\260\274\371\223\007=~\334\247\274dW\020=s\231\370<\020>\254\274\342\321y<\232n/<5\326\021=\033\375M\275G.I=\027\337\301\274\355}\331\274\375>\260\2747\367\233\274<K\031\275\376]\007\275\347RA=\276\355\207\274\255I5=\213/A=3\351\336\274\256\024\204\274\255\013\371\274\232\246\232;\265\251L<4\354\330<\2316\004\275^\331\251<\343r\323<\272}\275\274\234\033G\275\234\n\020=\033\037\325\274\254\264:\275^\034\232\274=V<;\272\206+=\302N\204<$\254B\275r\032\356<r\177\t\275\373~B\274.\335\001\275n\366\007\275\212\3616\275J\270\013\275fa\312\272\362R\341\274U\350U=1HC\275~\344/\275\002\274\016\274\352\3005=\326/\320\274\rj,=\307^\021\275\203eE=\365q\007\275\211\276\355\273\234\033\326<~\3764\275\341JS\275\205\250y\274.\301\357\274Ut(<Eb5\275\366\211\333<\r\253\234\273\305\n\010\275\212oZ=\324\001I\275M\007\371\274u$*<[\033\032\274U\220%\275\364\013\202<\254@\001<\214`K<r\235\226<yT\007<\272\371\014\275\254\212F\275x8O<\213m\000=\307?>=\360\023\327<\224/6\275\207\265W<\271%8\275\013\254\024;\002\232\312<\355r\020<\351\203\t\2757\213\366<\205\304B\274h\312[<\017S\314<\324??=\266\330\014\2758\270\'=\033k\253<\274b\220<\361\376\357\273h\235\273\274\262|\036\275\363%\031=\254a\326\272.$\307:V\275\'=)\300\375<F_A=\270\210C\273Lx;=,\243\351:\342P&\274K@r<\r\270\227\272\035\357\001=\245\325\272\274\303>k\274,\222\220\273\240\017\236\274\225l\032\275\273*\367<\375\304\204<\260\356G=mi\024<\2478\310\274\371\337(<\212/\357<\025\366J<a\310\021=\355\276\246\274dk\267<\206SJ\275\236\3118=\377S*\274=QT<d\030\227\272)\013\362\274\n\003\355\273\316\307T=\300\031\241\274u\240\367<\350\364?\275\304\337><\235t\372\274P\344E\275\251\021B\275\271\256Y\274\261!\317\274\216\1779\273u\n1=;\311C\275\250\331\237\274\351\301!<\304\"\016\275\341~)=c\245\362\273\355\030\034\275\362\341\215<\274i\304<\274\033\030\275\370\255!<\235\211\032=\027\002\035\275\332h-\2740\300E=\010\333\232<\203Ed\274\204\225\313\274\020\344\344\274<\322\007=\356\n\243<\362\255[<\r\314S=\025fZ=\333LX\275\257\226S\275\301\336\030\275\332\3756\275\nn\205<\224\324\320\274OGb<\273\006\007\2756\247\025\272\035aD\275>=\005\275\'\362\272\274\202\324N=\325wD=H\210\020=\335\254\002=\273\251\320\274\326\003\016\274\361\2454\275\300P\346\274%\212\005<\3537\036\275\331\216\316\274O<,<?\320\233<\323bM=~E(=$\370!\275B?:=\255\363X\275B\2621\275\370{K=\000a\020=5\323[\275\001-z<\213-\217\274\000\255\032=E\312*=\2225u\273[\2767=\222\266\265;q\325%\274\006\r\225<\356\370\022\275\347s-\275{\031\236;\021\205\000=\337X\007\275A\242\022\274A\224\325\274\255\207\223\273\305\271n;\314\243\345<\311\242\335<AS.=\234\350\274<\260 O\275<\245\245\274\243[\313\274\023\234*=\324\374\241<\336`\\=\200\375\306\274\363\264.\274\246\230\217\274\326\270\265<\\\311M=\002W-=\335^\375;\364\251E=\341s\r\274\270\362\010=\023.\004<4c\020=\026\3561=\220\373t\274\tA\262<\265\336\320<`\"T\275\202\353\027\275\227C\031\275\376\267\033\275\231\223+\275\240\357\'\273\325)\005\275z-5\274H\367\004=\"\311\366<\271I\201;\032\341u<\306\245@<\207\201V\274\305\306!\275TFN=\364\217\305\273{e1=\374C\351<\211\033\021\275\370\354:<\037?\022=\340\354m<\3503+\274\001m\273;\344\020\306:Ov\377:\0317\007<\004\346P\273\014\226\365\274\211a\035=e\307A\275\267\325g\274a\327-=K\270H\275\311(#=5h4<a\353\347;Z\347\363\274m\030=\274\010\274\370<P\263\310\274\256F\371<c\031M=\346,N<\234\\N=\325=#\275\212\010\337<\024[\016=\302\033%=e\340\320\272\346\276\277\273\020(\t\275\242\221\352\274\217I\231\274\037L\034\275\006\003C=\323\026\277<.\271\r=\002\\4=d\013\004=\321\204:\274 N\205<\316>\316\274\351\304Y\274\330\276F\275n\022q\271\364}\316<\233\344$\275\003\213R\274\004\354O\274\371\250!=;\330\271\273\276rT\275\333\3757=V\207k\272K\360\022=\275\335<=w\247\035=\215\334I\273g\003\366<\243\304C;\025\337\350<~M>=\243\272\262:E\335\235\274\216\342\200\273F)D=\222\246\343\272\215\261i<\273\361\206<\361\026\"=Ov\\8>\256\322\273\221\324H<nJG\275\306I\323<|\330\016=txM=C$i\274aD\317<9\371I\275\003\0262\274\3119\014\275_\242N=\327b\026\275Z\211\007\275\255\226\361\274\021\025\317<\032\351\324\274\376\237;<\224\005O=(\367P\275\255\274y\274\230k\273\274<\004\030=\374\035J=\272?:\2754\226]\274Sg\256\273\222e\267</O\310\274\020\033\006=\3179\330\274\211\355B\275\262\3655=\331\000K=\231?\321<$\312&\275]\221K<\205B,\273b\314\025\274\003\0109=A\367\022\275\377\363#=T\177\202\274\363B\024=\305\371\222\274\266X\355\274\377\332\t=(\213F=\262\243\333\2747u\356<\007b\323\2747`G\275N_p\273\001\275\357\274~\326\n=\010\r\256\274OEO=y\367s;Xn+=\304\372\002\275\034\222\2059\330\276\036=\204\251\207\2731\327\347<\001\273\242\274#\316\250<\001\275\326\274\336\370\002<\2556\"=\232\020\215<\330\361\326<\316\027F=\017\275\366< uq\274\3775\006=u\3054\274`\273\226\273=\342\032\275\256\275\373\273\375$\'=v\327\003\275A{\'\274\353)\003=\315\013]\275\364JG=\"\312P\275\034\036\220\273(%\n=\312\201M=\260\013\002\2734E\262<\370\244\021<\265\261J\275\232\227\323\274x\316\374\274\352_\032=I|\327;t\002=\275\344\013\007\275\2047$\275S\267\003\274\027\004=\275\231\261+<_\233\347<\251\373\007\275\232\321H=\020\276\346<ozK\274\276\033\352\2747\3046=\023\020\027=U\'\334<\335^>\274\333\222\340\273?\211H=\221\251U\275\336k3\275h\211\336<\217\326\r=X\"A==\301\240<\"&\265\274\307f\356\274Ot\241<\277\262\241;\344nE=\243\250\212:\327\202\313\274\373\025A\275\1772\206\274 \226\'=H\"\000\275\204\374,=\320\304\333:)EZ<\025D\022=\323\263\306<\000\316\356\274^bL=.\317L\273\2603\343\274rh7=\220\177M=\021\026\n=h\313\372<t\202>=g\372 =\244s\322<3ja\274\021\254E\275\362\024\261<\215\216\276\273B.g\274Ed\016<k<\250<\2456S\274\315\371\367;\216u\202\273\034\2258\275\3527\037\275\026\370D=\267f\303\274\214+\007=\345\237\350;\263dj\274\372\016\016\274%\256\272<\244\207\204\2749\371Z\275\363x4\275E\247\376<\306\177\377<%|\"\275\315%\t<j{\233\274c\223\336;\211\215\270\2739I\021\275J\275\'=\335\331\355\274J\036Q=\260fq<;\"\036=\016\372\370\274(\251G\274\001\032=\275\301\254T=r}\014<\326a\006=-.\013<\236\013]\275:~0\275\216\270 \275\270\2133\275\277\242\227\274\246Y\230\274S\253H\274\374\000\222<\355C\272\273I\300\204<\016\271#\272\344u\201;\255\002\211<\'0\335\274|\237F;\005U\365<\"\264\356<t\006N=\333s\363\274\237\231]\275c\272\366<\331;)\275\007\354Z=\312J\300\272\253\006\327:\276\310\313<Ww\333\273\245x8=\255pP=\327W%\275c\026\345<\223Y*<\r\223=\275\323uZ=\014F\205\274\t\370\t\274|\254\016\275\267Z:<\323)9=\0049\030={o\003\275e<\347\274z\267\244<\207$K\275\314\2002=\301-\2369\240\254\r=\227>\'\275\001\301\377\273\340V\017=\001\355E=^\371\002=\336\266\276\273\322\250\005\275\2064]=\252!\334<\r\017\004=\235e\031=\204v\241\274\205\365\271<\375\306\213\274v\003\t\275\316\032Z=\306\242\\=\t\3012=\313\342B=\355R\212<\255\324\024\275\226\275\311<\032\251\251<q\347\317\274\357\364,\2750\223U\275\020\017|<q\367;\275\002JX=\275\200\275\274\336I\022\275\331\n\002\275\361\362Z\275jr\005\275|2\306\274\355\037\037<y\\X<\211c\020\275\004\373n;\311a#=\"\232\304<\346\217\376\274@\302>\274\252\354\007=\214\246\227;\377\351L\275\214\364\300<\365v7\272:\033\307\273\204\237\367;m\217[=\213\n\324<\277:\034=DM\006\275z\004\034==\362\233\273l\305\035\274\356\223.\274\321w\177<\234\241==!\311J=\243}\331<\253 \003\274IG\026=\3530\000=\330\240%=n\362\232\273\035\377\327;\254\316\200\274\'\237\005\275q\337\235<\271\220A=\027\246\315\274\370\tO=\331\253\037\275\207.\345;\344\376M\272\026\252;\274\237F\221\274\233h6=\027\260\362\274\002\3726\275\275=0\275\227\304\306<\305\233\215<\266\227\007=\026\217\347<\362\223Q\275B\370\323;\312I$\274\340\204\263;\361\372\241;\351\014%=\347\357$=$\223?=O\360\177;DYO;\367\325\263\274`\225\034:\330\305S=1\222\356<\024EI=\303\277\\=)_9\275eXG=\022\374\307\274\270L\261\274Y\201\335<a\234\024<\354\226_:\001\310Z\275\310\232\037<\235\277U=k\304\025\275\350\233\001=\354\375\220<b\207\3369\201\034)\275l\371\200<\237$\207<\232\303\027\275\257\215\234\274\376R\032=%\374\305<\230\335S\275\232JL\275\025\264W=B:/=jwD\275\004\342\010\275<\254\036=\255\360\013=\247\242\253<6x\313<\032M\205\274\3272-=\266\332\244\274\200\241\231<\352\3024=\241\325Y=\227q0\275\247z\336\274\247\302\033\275\373i\211\274\373M\023=\325\352]\275\344\341\006=\036E4\275\303\0339\275\211<Q=\321~:\275+\206\003\275u\223\376\274\202X\026=7I\344\274f&W<K\202-=\334{\376\274F\371\314\274R+\025\275XH;\275\227\273\254\274\301Re\274f\311V;%X\001\275\355\215\031=\303#\306<`\010L=)\035z\273\351`3\275\305\247\210\274BH\233\274\252\300\361\273\177F\341<?\000\005\275\263\0134<\003\247O\2742\031\032\275\244{B;A\244\021\275\021\201%=\013\023\252\274\005\207\244<6\035\004\275\231\270\323\274a\207\316\2745C\'=\345\325\035=\215\270\375<\267C\031=\250\r\317\274\275\242(:\352\020\247<\271\224\375<\223B\364<\351\rC<Tp9=G\003\005;:}\"\275u\326 <}\232\"\275\237\243==\027\036V\275\276\335O=\3125&<\355\030\033\275\361\307\"\275`+ \275b>\370;\306\361L=\r\206\340\273(\333\r\275\2732\016=\320\206\255\274\2639K\275\254\332J=bbv\274\244\325Q\275\353\237\003=f\031\021=X\2672\274\337IZ\275^-O\274S\307<=\342T6\275\263p;=[\034\211;I\237\262\274\010\374\030\275\373e\335<X\227\211\274\027\005\321\274\336n\242<!\263\330\273V\273\317<\222\317@\275\315\266\315<\026\227\036=\233\023\026\275\003\0027<\356\267\363<\220}E\275\006\022N<\027\206o<2\244\261\274~>\331\272\363\374\3539\251o\r=,\266\026\274\236\010\315<\370\024J\275b!\\\275\225+\034\274\274P\022\275\376\215\'\275\272\345\223<@\020D\275\2658\036=\ty\315;\330\341\343<\ta\'\275tJD=\334$\221\273\365\\\325<`b\365\274I\3548\2758\2647<\204\323\000\273d{\266\274yW\324</\352\017\274_\344#\2750c\220<7\201\306<\244kQ=\177\253W\275\302\032<=\373\336 \275\376/&=\\\344X\275\336G\2059\024\330\024=\264\360\016=\374\205\223\272\324\372\330<V[:\275\246~\237:s\313\215\274.+D\275\220\303\336\274\354w\233<;FT\275e\314\320\274\"\366\223<o\321\"<\240\002Y=Z\307\325<\333\2100\275Jn\n=\335\352\255\274x\332\374\273\017\3751\275j\006?;\376\001K=\373\234/\275\340\312\252:\342\177\250\274k\324\r=\213\315`<\024Q;\275u\002\037\271\023hX\275t\241\314<\262\373\357;\227\366^\273\250\002\207\274\212\214\t\275\352\370 \275\010P\254\274\023e\312<\377L\027<\032\351L<f\222\004\274\303\324\200;\327\354\"<>\252B\275\377j\206\274\265\235L=~B\027\275\272\0175\274\327\007b\274\216\023\326<\211\335\251\273g\301\224:\236\316\305<\340M\270<<LG\275\021QW;\246U[=\233\364\027=1\017x\274\371 L=\000\343\272\274N@&\275q\350\216\273\327\234I\275:v\252\274\014)\205\274\303ru<\232\364\241\274Jk\351\274\212\312)=\nfB\275\266@\211\274V=\013\275\331\243\254<N#=\275\303\006\336\274\300*>=d\304\n\274\334\304\013<O]\237\274\'I~;\315\024\021\274M7\022=x\004\2539U*\247<\t\241K\275Y\001\035\275U\326\206\274\311\320\212<C\264P\275\343\2548\274\235\245Q=\305?b\274\303%[=\372\270\364\273%\362j<!w>\2740\223\202<\231Y\013=t5,<\032\347\357<\300\255\034=\204\352\\=\237m\276<\351\3329;\345\371\005=\254P*\274\300\366^\274#\226\006=7[p\273\372L\010\275{\004\375<M\2620\274MZ&=\200}\010<\317v!=\251\317!=7\270\341\274Ct\010\275\355\211\270\274\301B\366\274XL\237<\203ja<\221:P=R\014;\274\315.\001<\372]\376<E\305O\275\216\2540=X\3328\275\272\333\275\274D\350\344<a\215D=\206\320Q\275]\271);\224\212\014=\016\365\251;\207\303\024\272\360\005\276\274\000&\032\275a^4<\030l0;&b\\;\205\r\025=\233\362\310<z6\233<^\264\\\275\255<\336\274\217\275[=\234\332/\274\212^U=\341\206:=j\227\365\274@l\203<jK\305\274\"\246K=\300\341X=\201\213\362<D\274\276\274\375\362U=\'wr<\240\270\234<6S\372\271\005\322\351<E\255\026\274\243+S=b\304\215\272\310Z\247<c\3271\274\226\226\374\274\364\215\340:\207~\031\275,F\035\274\324\2769=\356o\374\274t\221\334;\256\2234=\224Q\016\274\350\r+=7e\245<\307R&\275\226/)=\364\342\324\274Mv\004\275a\024a\273{\273,\273\010\301 \27503W=\022)|<\257\234\"\274\017\357\007=\330!2\274\334\366<=(z\000\275*\367E\275\331\315\335;}62\275\252\301\226<\034\324\006=y~1=\2061\326\274\002\340\223\274Y\020\346\272\222\376\000=\376\264\335<\240\365x\274\245XD\275sdZ\275P\005T<\226\267\252\272\342\231\311<\rI\344<\213OG\275hw\232;\307?\360\274G\246\345<\005\373C=\263\r\237\274\3728\033=<\r\036=\205U\370<\004\216\250:\205\014\001<\300\314\244\274\233\322C=\035\tN=Gr]=\215\214R=\010W\001<;\317B\275y\231U\275\205\210\234\274-r@=o\246\352<\247\223F=\026\234\014=\314N\324\274\307\221\257<.\301\221\274,Q\013<\337\2275\275ByG\275\203\004Z\275J\312U\275\356!\026\275\354\347\014\275\266\3447\2748\202\033=\223\374\034=2\226\360\273q\350J<7\225\242\273/J?=S{\216<\232\301\n=9?[<\366\352.=\317\336\262<a\251 =\317\307\352;\222\262\373\273pt\367<\347\237{;\302RW=\274\001\035=\333\235\311\274j\254\334<\275v\005\274\330 \033<\232Q\220\274\253\032C\274\227\340B\275\322\264\217\273\365\265x\274\267H\373<@\211\253:\271\243\r\275\370\365\375\274\355\206,=\237\rU=\001\213;\274M0\002\275\336\010\232<@l\267\273\317\307:\273\371\027&\275\336\2455\275\355mC=\014\231\227<\250\331\3349\025\225d<\330\311\007=:\337\030<\376\275C\274\027!\347;|XB\2748}@=S<\325\274\223O\002\2754\n\003=\360\034\013=\034\017D\275#* =\315\351\362\273\307\331\024=`\275E\275\211\245&\274\215V\013\275\316\013\005\274W\220\320\2748\226 \275\201\030\233\274\377\002\026\275U\000\266\274j\200\375;x=\255\274\311u\350\274R\220\\\275 \332\305\274\323\223\006\275\376\005\005<\224Y\010=\260\372\363\274k\246\322\274\217\364[=8\261+\275\004`F\275\005\017U\275W\227P\274\355T\027\275uW\004<\214o6\274\227$D=@\3261=\237\301\340<\351)\262\273E\020\303;\337`\t\275\027\274B\275\360\343\236\2734\243\034\275i\200\236<\007\033\213\274\2655\351\274\372#?\275\300\314\372\274\r\312\311<\t\317~<\303\342\330<\227UV=\344\004\342<Z\335(\275\0358?\274\223\354\036=\223\373)\274\365P\336<\326\000M=\032]\331<\353S\254\274\274\035[\274\225\';=\247\037)=\023\2119\274\'\353[\275X\017@=\253\022\310\274R\235\243<\217\215\353\2746\240\001=\370\1773\275\014\312\316:\220r \275[A\207<\210\244%\275\377w\216<0|+=\342\317\274:C\224\r\275\376\266\214;\320{*=\223\255A=^)\210<\272\243\325\2749\244\024=\034F\206<\217\030\"=\250}\274<uq3=/\2179=\255\t\004\275\345M7\275\351\275\006\275\'\310@=\t\372\232\274\233\317&\275p\335\'=\222\256\362<\215\236\001\274$\317\250<\260\246\335<\260:\266\274\\\364\014\275\260t4\275\311\3625=\315<9\275(\261H\275\r\216\302\274^\034\017=>\'\024<\0337\221\274\024U\214\272\350/\377:\350\323\036\275c`\373\272\314\177\r=j\201\032\275\023PO\275\332h\340\273bi\337<6\352\016\2753|I\275\2112\327\274\306\362#\274\343\300\262<\316\020\210\274\000Ck\274\327\335\013=\326\371\303;\230\277\325;\352\362\227\2737\216\010\273/\177X\275bj\240\273\334<\201\272\311kD=\020\262\367;T\3030;\005\376\r<9\315\232<\253\262\372\274\210\033\024\275Q88\274\035AG\273\327N\305<\201$,\275\316\351\335\274\241\314+\275^\3136\275\366\255\004=z\226\357\274\223\217\273<\345\324\025<\2019-;Ju\020\274\376#\323\274g\027~\274^\350\022\273\237t\272\273D\233S\275\376|\230<\tw\352<\357P\275\274p\236\376<\031\235\023\275\306\014\031=\030\366P\275[{\002\274\010\325\244<\276W6\273l\2553\275\033\030\316;\364\255\272:\217q\322\274l\236\333<%#E\275\214\2126\275\212\305F\275\tW\343<\0316\234\274@\224O\274H\225V\275\247\305\025\275B\364\225:!\223U=\202\243\323\274\033r-:\211\245\253\274\2339\310\274\241w\355;\034v\275<\371Q5<\227-M\275zpL<\363\305\014<\310\210\301\271\306\260=\274\367\026,=\026l\201;e\363\237\274\261|7=\301\245R\275\221\363\242<T\022G\275hk\257<\262\227\215<u\r\230\272#\024,;\215>\274\274\312oM\275J\245\216\271\016\021\356<\254\277y;dl\'=0\267m\274\200\235\t\274\r\241\026<\314\007\\\275\322\010\365<\346={<\254\002E=\202\327\344<\271w%\275_\034X\275\\\033\"<C\007c;~ \207\274\335T\342\274{,,=\023}*\275\354\260\212\274\001\376\'\275\256\017\3259_%\020\275\335\022B=\373g^\274\246\210\"\275\276\035\243\274\027\210D\275]\301\241:\314\342\332:;o\347<g\1777\273\2667\224<*\336\000\275(\203\031=\036\226\360\273\001\3245=yy\036\275Vy\375<l\266R\274\232\237*\274*\265:;\364\002\025=z\231P\275\221\376(=\257&\255\274C4e:#\252\252<\222PR\275\252\276\327<\347\326T=R\241Q\274\274T\3049\355\037+\275\304\345\004=Q\341\017<\344\\-=coo<\017\030k<\204\225\242\274\362\201x\274\275\"I=W\232F\275\021\350\232\274\275\320Z;\376\3456=f$\016<\334dO<\022\003r<\342\010\343<f\236<=\235L\245<\2666?=Q\211\010\275ZjJ\275\347\037\005\275q\374\022<\031\004\317\274Ga\206<z\006\212\273\202\215\010=\330:\375<Q\315T=9\371\272<b~\371<2\021\301;|\376(=\372\244\246\273\263\243T\275[\230\\\275\032\331\003=\373_5\275\370\363;=\256\035\312<\370\020\231<\355\033\325<\366\267X=\002\200\350\274\025\267\322<A\357\021\275\256,\034\275Li\261\274\223q\270<K&\020=\204\300\034\275\367\215\t\275\266\254/\275\256\213\2449f\330\300<\260+\036=v#\017\275\315\316-=w\013N\275\322o\036<\253\326\356\272\032\303A\275??\230<\341\334$<\353\354\317;\265\200\305\274AQr<\230}#\274\276`\\\275\250W\240:\323x2\275m\177\330\2745\275\342<\'O\275<\004\004\204<g\337\032=\336\340\221<\0253U=\0015\327<_\332D9V\014F\274|\256\315\274.\006\013;\353\211\n=\336\032\203\272\311%\250\274*\351^:\373\000$=\205O\343<\347\232\317:\206a\032=\264\253\005=\232\022%<\337\324\304<\363\230\001\275\002\222\305\274<[\200\274z\355y\2744\352\243\274\n\263;\274\020\347Q<\246d\220\273\261\256\255<\272\313\225<}\366\237<R\373E<\275<\363\273\203\017\306<V\200\005\275-\335\211\273T\035L\274\301yJ=\235O\320<P\005Z\273\251}\'=\365\335\013;2)\350<S>5\275\327\377\021\275\260U\242<nz\025\275\226\005\230\273\272\363\347\274D\250p\274\004\206W=\230\341\242<\243\373\036=\355\216\242;\240\243\263<\335~\036<\261\242$\274\3763>\275W*\016=35U=\0261\277<\324E\306<\307H\016=\001\3740\275\342]\322\274)\2645\274\235K\321\274\332s ={\357!\275:u\256<No\356<A\223\r\274@51=\013/|:!\rW\275F\347u\274\332\205\226\274\301\211\345<\321+\301\274(\334\324;2\037\232;\376\035\370:e[\361\274\353f\201<\205S\001\274\036\2650=\210\216\251\274\332\3646\272_\030!\275r_\356\273\036C)\275\317\253+=\244\317\275<\321p?<\311\275B<\346\314\013\275\n\327;=\"\t\226\273(\316I=\245\271\206;3?!\275\332\315\322<wEQ\274yL\222:\346b\275<\343\305\303\274\336,\206\274^\311\366<\311;*<\336pS=8p\247<2\002b\274\357\014<=\232\336I<\260M\025=r\273\3419h\017\344<k\021\003\275\216\342\337<\261\341?;\244]\221<J]\256\274e?8=\204\364\223<\224(\243\273\335\025Z=<r\033=6\234\361\274U{\327<\252\024\325\273\271j\320\274P\023q\274\317\nP=p`t\271\212\306\004\275\273K\214<\005\366\314\274\036\274\253\273\326\3205;UD)\275\270\274\240\274\230\243\026=\0329(=:\217\"<HD\221\274g\'J;}d\226\273!~\000=\265^3\274S\306\222\274\304\231\021\275D\361\250\274p\321\362;l\333\311\271\304\360E=\274\253/\275G\372\024;\361H\311<on\373\272t\177\211<\220\245\013\274[\007\343<\364#\202\274\3614\331\274\206\333i\274=6j</KE<R\023r;\340\214\r\275\013XW\275*\2064\275\331\226\031\274\300\257\265<\t\306!=\360\300\315\274\200ca;\010L\036\275_\336\262<\321\352D\274I\276\211<v\223&=\313e\326\274\205\311\212\274\363\356U=\272{b\274M\325$\273\206M\034\2753\335B<\016\002\211<o\221\220\274B\211\272\274\263\373\007=v\301>\274y\227\372\274\207^\177\274\234D\304\274\216\010\255<W\255\371<\257\301\217<8\352$;\212\342`<\375\272E=\351\327@=\325\177\335\274E#Z<\2637\323\274\004\274B=w{\355\273\177\214i<\376?D;\236e\311\272\004\251<\275\000nS\274\367\250\375\273\346\0131<x\310><\222uX=\357\276\215\274?\3613<\372\347\343;\340)\207\274\236!\'\274\001O*=\234\032\250<{\"6=\033\244@\275p\365S\275\037m\353:v}\314:<\327\232<\362)\270\273\235M\352<3\013\027\275\254\316X\274R4\254\273\313\250!\275\244\376\367\274\t\216\302\274\242Q\274\274\016\336\354\274wh\253<>\037\007=x\377\371<\004\002Q=@\347\341<*iK\275Mt\202<\200\\(\275\376\337\267;5\250\032=@\3145=\"\200\241\274\246\256\217<\254c%\274d\340v<\211\316a\274irA=\3429L=|\3277\275\216\253A\275\240\246\352\274\366[D=\340\326q\274\215@,<v\322\266<;\213\020=}m\372<\247\254W<0\346\033<\014\252\266\274\271\316\231<\326\035^\273 A5\275e*\254\274EM[=\203|2=\215\356\025<BP\340\274\270tZ\275V\334\027<tl\327<\007s\201<\234\221>\275\325\247\340<\276\333\211<\t\211\245\273?\333\345\274`\311\004<!\010\372\274\337\322\240\274\324\303\013\275\364\357\022=\273G\301<\363y\'\275f\206>=\003\337G=\035g\264\274\253~\324\274\207-q\274lj\210\274\374\314\274\273\344=<=q\303\023\275\2350\3639|\362\007\273\346\340M\274\265\273\222\273\353\037B;\317^\306;\377\245\226\274\263\206\257<=/@=\304z\211\274*\3722=\274\327\032\275/O7<\013\351\215\274U\026L=&f\266<\230:><\325?\004\275D]*<\217p\035<\201\361\n\275\2418\252\274z\210\214< \021*=\353\2061\272r\230\321<\253\245#=\265\335W=Q\362\277\273c\010\354\274\224\254\367<\350\024\207\274\014\3243\275\252\032\036\275s\000C\275YK\361<\030\377\345\274bkO=\0357\254\274]\237K=,W*=\357$0\275_|\033<\240\235T\275\302\307m\274\002\316?;hR\342\274d\t}\274[\265\340\274D\262\220\274\246{2=\360\270\"\275\362-\022\275\262ms<\3475);gA\234:\237X\001=\253?=;#18\275l\314B\275\260\002\003=\265\t?\275Jp\004\275~R@\275\037\242G=n\305I\273\230\2555=\250\005\025\275\375ap<\240~\307:\314{\340<<r\266\274\357\032\267\274w\242\035=\335\220%\275p\204\340<\037\363\004\274\311LJ\274\r\032[=\025\002\273<Dp\001\272\263\3503\275!\305\003\274\342\242\323::\0335\275\027c\354\274\217\211C=\271\304\272<\366\"]=\025 \322<\2018\214\274\336\t\203<\240\332T\275d\275\017=\027\277\245\274\245\324~\2741\210\036=\347\0220==\022\216\274\377N\373\274\002\350\000\274\272\257\227\274\031\226\342<-\0341<\327D\205<\257\010\023\274Y\344%\275\217\210\247\274\342\237\340\274H\257\301\274\231\241\001\274~\220&<sE\301<\206P\265\274\326nd<6\243\257<\312\"\210\274y@\311<G\026\210\274\214\377F\275\253\215\312\274c-\364<\005\246H=z\366[\274\333\002}\274\300g\223<\344\360\000=\217\247\001=\310\245\212;6v\374<w\n\r\275\365hM\274@`\021=k\263\264<\2436\330\273\323\303\024<\351\270\256\273>\024\376\271\370\243\032=Jh}<7j\217\274\231\274\222\272\322\305\270;\377\226\013\275{\210\351<[Y4\274\344\237:\275\257\256C=M\022\211\274F\332\201\274\026*\020\275q\226\256\274\325\373\022\275\204\031\366\274\236W\224<\264\316\034\275\323H\347\274\024\211o\273\r\026\030\275\263\266:\275z\370x<\317\000\025=+\347-\275\344\004B=\021b\006<&)\342\273)hR\274\0173A\275\307\370\326\274\220\363\253\274\016\'\332\2746\021\225<\'X\271\271\350\336\240:\023\305?=g\273H<\034\270\231<\336$T=\213\0173\275N\350\037\275\027\025\202\274\337\321\361<\363\206\253\274bJ\264<\271\241\307<\014H\005\274\267\255d\267\264\231\376<8\010\033=\005\205\017\274\373\214\310;\362ff<\030\277\314<\326\2167=\257A\\\275c\304\232\274)N\277\274_\306\177<#\366\r\275!\372\354\274\264\262_<\343\3111\275\277e\337\273P\261x<\r\017P<\227\322\325\273E\001\244<\271\2030\275\017\213\220\274\336yv\274\206\203\370\274\177\307\223<\375\333A=r\272Y<\007\236\340<\036\260\305<\026\374A=\255*\013\2756\365@\275T\263\343<^\364\277;\356\001v<qs\000\275OkP=\230j<=\025LZ=\342\257\020=\260\"4=N\"E=\300`]=\336\246\"\275.\r\365<\325Go\274Nn\371<0\377\021=\352\246\034=p\245\014\275\343[\235\274f#\023\274\356\207\221<@\211\351<\237\254W<\032\356\027\275\350\340\034\275\003O\317\2741\n.= \360\277<\217\\\036\275\254\257\271<\377\225\210\274\363\347\"=\031\321L\274\007\276h\274\3459\221\273{[<\275\304\261\277<$\273\236\274\022X\325<`7\273\274S\262@=\304-\335<t\356\223<\211\277\006=\227\2707\275\026\022/=\217l};\033\347K\275\245\n\020=\272\323\302\274\310\245\026\275\223\334C;F\320Q\275\207\262\016\275\335\340\267<\315$\333<\305\365\037<\375\323/<\250\206]\272\245$G\275\355\260\352<\006PV<\205d\032=\327|\376\273\240$\341<\016\236\024<QO\3349\017\253V\275c\337V=H\nP\275\344e\033\274\035mU\275.\t\277<\222g\377<\2321\010\275\241\331X=\345\236\206;\245\213\325\274\240\300\310;\'\210\306<\233\374\353<w\322\251\272\tuj<\212\037\266\274\304<H\275\221\221\002=v\016\216<\002E\0319<G\005\275B\265D\275\277\347\325\274M\334\313<\013\244\265\274\024\000\036;`z.<\257\026\031=\276\326\367<[\227\367<\363\226\002\275\313bF=\261\032\322\2741\213G=Y\275[\274\210\215T={D\002=<\274\311\274\233\234\'=\374\234\237<\200l\240\274\353\\8\273\330\025\234\274\024EG=\350\346$=\327\r]\275\337\251\301\274\034\013\025\275\005\247\037;\002^%=\355\211A=P\0004=\235\211#=p\215A\274+O\000=\236\034#\275\320E(=p\241\221:\373\\\357\274\021\214?\275)*G\275\030\212\026\275\3458<=Q\034\226<i!1\274\t\004\301\274t\266U\275\241\245W\273\025\372G\275^\260\324;\267\334O\275\362\311L=\261\026 \275\263\227Q<Px\010=P\326\032\275/\310\256\274\006H0<tU\320;\\b\003\275$ZX\275{\306d<\014\037\004=\374X\361<\213\225K=H\177\220\274d\2153=\344\244q\273\302/\361<\033\206\034;\3378\010=Y;\004=\230<N=\206\340\332\274\361\352C=&\376C=\224\306\257;J\213\373<\365\'\244<h\007\002\275\262\310\365\274\227yG=\312\226\375<k\220\256\274\340\241\256\274\253\364U\275\316>V\275\000x\201\274T \375\274\254\251Q=\276\365*=aW\007=mP`\274\260\2546=\002`\364:JA\233</\201\343\272\362[4=\365.\331<\251c\224;\230\262\025\274\\,\020:iY/=\277Y\347<}\364*=\371i\272<\014\'T\275\3322\021=js\322\274?\362\213\274\230\211\200\274\274|\021=\235;!<\024\231J=\327\216\245\274\201\353%=-)w\274p\341\'\2758\031_:\010\346/\275f\353\221<\254/\016=l\3046\274\300\302\005\274\326D7;Cs\010=w\247\003=a\273\265\274\304\241\003=5\364m<~\266\031\275Oo}<cHB\275[\301\277\273\321\177&\275\022X\262<%\211\025\2758\241,\275\323\366\341\274G\353B=\036}G<\277\342\020<Cp\254<N_\225<\246\205>\275\t\266\024=2\207\314\274\240\202_<v\337\014= 1G\274\216\r\270\274\360\212\260\274\372j\270\274\333X)\275R\333\322\274\316?\275\2749\253\221\2748K0<\004\t\220<i\353\034\275(\201m<\021\002C=]\267I<l\244y<\374c\035=\342\304\024=\txc<^[7\275a]\020\275\356\017`\273\037\243#=\324\3540=z\256\245\274\035\240\230<\010\222\332\274\315\260\\<\260j\374\2741\341\024\275\022\202\334<\217\203\262\272\256\205S=Bc]=\273\233\016=c\372\'\275\271>X=9[\357\274\013\263\327\273\335\273N=\036\316(=~(?\275\363\230\200<\226\242Z=\372\272@=\317-\032\275\246\337\016\275h\372\014\275_\205D=+)\010=\344\375,\274\340\267W\275.\366\025\275\225\034\213\274\300\204W\275|)\326;6\336\313:=\3663\275@\006\r=\225\366\020;{ \021=n|\265<\323F\001=//\235\274\210\301\271;\005\206\017:\315[\"=\344\323\033\275\213\\\210\273\350n}\274\'j\t\275~\026g\272@,.=\267\014\007=\345\205\263\274\204kJ<\212`\205\274I\314\037\275\372G+\274y\245\210\274\243(\035=\265\373Z\275NO5\2744\326]=mRJ= \242t:(\032\344<Z\211N=YD\t=\t\177\220\274\033]Y\275cw\347\274\305\276\251\274\361\277\002={\202\332<\374\220\361<<wD\275\234\307\210\274\340\267\324<\316\242B\275\215\220\303\274\341\254\032\275oG\016<\016\334\323\274z\207\275\274\357\300\t\275fYn<Ve\311\274\203\341\032\275h\200\321\274\342\032\371\2745\314\202<us\205<\241\320\021\2752^W\275&\2414\275\336`\355<\3659 <\227\013\207<\027\022\243<\034\300-\274\212F\322\274_\010\310\274\313\002Y=\030\210&\275S\255B=\367\301L=\3511\035\275\001\014\323<KA\001\275}_\204;\253\323U=\236c\256<\373\005\032\275\354\'%\274\214\024\034\275\242\221u\274`\372\014=.\242<\2756\273\342<\221\251D<\330U\207\274\224\025 =\337V\026\273\3539\362\274\352\023\352<\013H\260<\347\365,=\246A\250<\244\037$\2751\354t;P\235\325<\020\200\313:\264\3204=\353\005\003<\337\314\t=\300\006\031\275\000\306>\275(j\246\273b\255w;*R\210\274\235z\234\273\265\357-\275\341\014D\275\315\036-=\251\360\351\274\025\240=\275\371\234\264\273<\344\246\273{\331-\275\272C1\275Q\204o\274\250!\322\274\316S\301\274\214\t\204<$\022\003\274\276Nx<\216\311A\275\364\360$=\016\215\024=\017\363#=\314\233\374\274\364[F\275;_\033=n9[;\262\372\031\274T\205\n\275\3203O=\303\345\377\274\037d\255\273\237\254\372\274\033^\363<\371\027\356\273\020\334\210\274\224\365\263<\241\235+=\004\251\014=-\377X=\241%\024=i\031F=\001\024\021\2752\023\373<\262\272 \275\304\311\212<9\276\331\274\244\230\334\274\363M\277<z;\370;g\001\254<\025\301\236\274r9\227<\370sj\274\023\3235\274vB\"\275\030\220B=Y\247\016=\322\265C=\031\326\357\274!P\377<\361\314\327\274\362ZB=D\004d\273\233\213\232<\263\202T<\341%\305<\017\313;\275U\222\307\273\002\323\005<q\257E=\217\363g\274\234\027\324<\014\375\266\274Zt\261\273\302\366&\275\020\r\200\274u\216\352<6u\016\274D[\245\273\301AK\275\304\262&<\243@#\275oD\232<\017e\337<MaV\274\034\353\376<R\257C=\023<\333\274\035ok\274\207< \274\177\353\\=8\020\270\274\204AO\274\317\200\346\273\007\207\231;\013n\006=N\020\207\272\334\020#\274\277\265\223\273\027\372B=e\315\022\274\235\375.=H9\010\2758\266T=\016\341$<>\\\324<\\\033\364\274\312\325\021=6\364\222\273K\334\t<\207a\360<V\251P=\335\243 =\271\032\t=E0\332\274\236\202P<\022\232\206<\232\226\023=\34480=t\360\221\274\013\267\371\274\273\270Z\275[\372D\274#\0373;\316\006_;\037Fc<\302\307\333\273\305\376\324\274\220\000\370\272\277\331T\275\343E\312\273&9M=\3031\236<D\260\240\274!\256\201\2735\331\027=\230\234\205\274k\276t\274\262^\232\274+K\354\274\033\0361=Hb:\275\221\271U\275\030.W\272?\026\237<\363\352?\275r\212*\275\360\254L=\247/\251\273\325\352\013=\330+L\275\376\261\210\273%\333\362\274\257\347\013=n\223\362<\234\270J=\007\244(\275\241\342\315<\035\345:\274\270\247D;m\206\325;L\031\351;\364l\331<\\\t\217\274Q\305\022\275\215\206\001=\305\347:\275\336\331\312<\323P$<\215\327\227\274\337\'\236< \2554=\257Z\016\275\347\250\265\273*\2506\275\214R\207;s;\220\274\252:\315<\376\031\303\274M\215\026\275h^\031=\351\300Q=\236\277\022=\372\306\222\274\323\315\266\274\242)\264\273\211\023?=\037\276k<l\246\001\271\177Ce\273\212\347H=\267z\002\275I\233\030=\230\220\005\275\204Z\320\274\244\255\000\275\232}\276<\241\026\032\275\351\211H=\303\252E=S\221\026\275e\200\"\273KCQ\275\224(A\275\247o9=\203\277B\275\002\371\213<\014\356==W:\212<\r@\211\274\"~\026\275U3=\275\373-8\275\003\262G=\\\350\255\274{R\021=\223P\014\275G\013=\274\202\031M\275H\312\246<\335\340\205<\001\222\006\275\022\034V<\344\030)=zs\213<\222\315\022\275\235\2662<#\210\222\274T\344\036=.\331\311;\371\275]\274\332Jx\274\352\027F\273\336\346$=\224\362\000<\203$\306\272\276\243\243\274`\001\003=\271\257<<\372\032J\275o\023O\274\'s\260<]\322\023<\231y\263<Y<\240<aM\014=\253\302L=D\217\304\274\371\310\356;q\303\031\275p&\307\273\2437H=#\245\376\273\322\t\343\274\346X\262;\230j\003\275\016\233\241<a\261\337\274F\017\220<.\016\264<S=\241<[KI<s\333\"=?\343k\273b\341\r=\'\253\263<\020u\375;\243\212\312\273\210[\\;\203\3165\275\340\254r\274\025\305\252;\035\273\242<\213\342\254\274U\340-\275\350v\320<C\357\365\273\217\0078=\301\301O=\245\\;=|\327W=\204\266F=\004/#\275\262\241<=\216\t\005\274\024\347A\275\346\307/=\030;\265\274L\267\020=\225q\031\274\267\253M\275\361=>\275\203\031\035\275A\230\305;\336-\300:\327r\262;P\217\262\274FL\211\274\231\263\376<A\200\203\274\200O\001=]<\262\274F\360\330;9/*\274\274B\357\274\252\276\232<\310\032\031=\254\354\206\274p\250\256\274\rC1=\324|\304\273\366\357\t=\362\234\217\274v~\\\275\030\200R\275\025$.\275I\\1=Z\270\002=\363\232\200<z\314\201<\025Z9\275\213(\035\274\270J\213<\006\\\351\274\356c\314\274m\005\217;-k\336\274\331\177\256\2743~\010=\0332\302<f\000w\273Q\207O\275\212\3315\273\013u\003=z+\257\274\232N\252<\340s\361<\177QX\273\007\265\001=\353\364\227<\3437L\275\277\032\265<.\314\226;\177\363Y\275\254VN=\225\247A=\026\025$=9w&=w\033\000\275M\264\235<\233T0\275lVW\275y\024p;.\356\246\274\220\317\'\275\301\305\002\274\223\244\323\273\262\003\364<\213\035\025\275\006~k\274\307\004\246\274\231\333\267<\214\246\332\274\371\257q\274\320\266\265\274\001&\026\275\005x+=T\037{\274{\007\272<\323@R=i\035\037\274\262\370\316\274NR\2279\302>\006\275F\371\244<\024+\020\273\253pe<\3522\004=\013\375R\275\361\331\323<z\353\013<\235\'\373\274\020\220V=L5{\274i\371\357<U\036\317\274\377\244H=\266#$=\247\317\232\273\317\2058\274\352.\021<\311\031\276<\303\323\243\274\333R\023=1\220\004=8\200T;\304!\220<\360L\352<\032\025?=:9\022\275\247FV\275J\330\345<\375\2471=\221\2020=\350\325\320\274\312\244\021\275\023AG=\316\204*<\3329S<\240p\364<7\363\035=i\276\262\274\352\305P=6\265]=\206\247\000={\224\236<\303[\246<\301+\367<\211\302\365<\215;\304\2739\001$=\223UB\275\330\200\272;\200+\374\274+\311\344\274q\233I\275\214Qj\274TI\206\274\205\225\252:\355\007\036\275o\340\355\274\'\006\026\275\254}\312<\026\002X=|\2759\275\250UG\2755\\M<6,\330<Z\262V=5\007\017=vA\343\274\375\035\036\275\327\003\236;\001l/\275\265\nU\275\326j:\2752\t\023\275\256f\356\274<\243\215<5\306\035\275g\362Q\275\344\331\361<~\340\020=\325\025\032<d3W=\ni2\275P\037(=\375N\321\274?\223\234\274\213\261\304;\343\345\252<\324\2401=\377\226\372\274@V\252<\247s\364<\322bB\275 \370l\273\360\2537\274+\236X\275\204\305\000=\342\345\242\274\306\374\022=M\036\025\275\355\274\002\275^-o;@\243\324<\242WM=\013)7=\353`4<A`D=Y\320\236\274_\277\270\274(#F=\241-N\275f\344j<\307\005k<\017\224\201\273\233\037A\274\253\261\356\273\342\370\240\273\241aY\275t!\301\274j\226F\275\221\177\201\274\006\324\024\274\220\367T<\037\004\300\270{\014\356\274I\256\376:k\212\301<\246\026B=\251\244=\275\226\213\013=\262_\243\274\256\"\206<\205kO\2741\031\354\274\213\364O=\204\2318\275!L\025=w4\332;\355\256\306<|\030\273<7\257\3109\331-\306\274s\2279\274\271/\331<\327\204\312;MM\357<=\3514=c\251\022\274\251\227A=\201\030H\274\202>\037<oE\022=b0\231\274\323H\267;\274\233W\275\206#\300<B\302\374<\371\006J<\016\231\010\275\3638\316\273Wg.\275\331\325\374\274\354T\321\272\264:Z\275\227#\350<\027\321\006\275\277\265\'\275D\024o\274=\010$\275b\022\375\274\307\307\243\274\312\236\030=\231\001\004=\211\245T=\233\210%\275P\211\204\274)\002\360<\322\261P=\365$\023<d\375\032=J\376\370<\245\361E<Q\017L\275\3155\342\274\227\016\265<\030\301\321<\007n6\275`\366K\275\244oA\275\342\303\321<\370\202\016<\237\352(\275\266\2114\275\355\270\003=x\223\010\273\271S\266\274\211\326\216;\177\252\327;\343mI=\244\337C\275\036\301\213<\006-\376\274\343\247<\273\257\245F=\201X\276<A\341\007\275\2067\025\275F\224z\274\027\270\272\273\t\302M=-o\000=\312`\213\274}\243\360<S\366I\2754\016\n<\0303\021<\004q\371<j\264\223\272X\211R=S\202\302\274\266\177\027<\275\016{<\263t\207\274Hq\262\273`\020\005=\234\3353=eU\000=:$\376<\327\332\236\274\010\313\017\275\372I\r<c\354\034\275\331\027C\273=xX=\031\364\274<\362\322\256\274\204\334\033\275n\0335==\030\001;| E<\027\220\367<\317{/\2759\314\226\274R\3100<57m<\206\313S=&)\223<.\264\343\274\031\004E\275\302\276U\275;\315\\<H\207I=\021P\350\274\361\t\371\274\013Y\264<\305uA<\330\202\033\275T\370\335:D\321\330\274\3706\024<_\261\377\274\356\224\r<\225+\274\274{\267\246<F\262B\274p\037\324<\031\352\364\2741{\266<08\376\274\254;S=\244\"N\275\006\3641\275\357@1\275\"\304\266<\017\017\202<\2763`<\327\000 \275\t\225\315\274\200\020e\274+\325T=\300\207U\274+\333J=^\336a<Lk/\275\334\2012\275]\237M\275\2620\355\274\267\026\271\274$\333\234\274\232\023U\275\274c6<7d\310\272\3026\021\275\353\035\247:\311rQ\275L\262>=\017\351R\275<e.\274&\236A\275F\036l<\2756\347\274:p\374\274_[\363<k\177\276:k\333\216;L\3635\273oo\\\275\254\177\003\275\276R\203<M\263\377<\316T\331\274)\202$\275\315s<\275b\010Z<M\025J=\210S\003\275F\273$=d\037\367<\353\003\\\275\216\347\224<\313(J<\233\335\360\274\362o7\274\322\226@\275d\006J\273\021\014Q\2750\336\272;\270]\276<\205\226M\274-j/\275\206\237\204<,\314\027=}v\247<\346\002\357\274\'\036\302;\002\366\336\274W$\222<%\370A9_\323\330\274/\354\321\274\321\213\372<\202~\361<B\335H\274\220k\344<G\271|\274C\204-=\343X\036<W\371\241<\272.\340\274)E\'\275\211\037\214;+CN=>]Z=\335\235/=\363\263?\275\013\025\006=\332\227\272\274iW@\275\3116\t=\312%\335<-\3417\275\215\346\003=\005\214&\275\321o\251<g\201\352<@PD=G\317<<\346?\253<]\232\305: \257\357<\317\235\000\273kSQ=\363\347@\275]b\353\274\314\360\001=DgQ\274\\\326\300\273 G!=BD<=\230\250K=^\237\010=n1<\275\211\346\315\274T\351\355<I\025\035=\332\317\010=\364\215T\275\337\362a\274\004\314\300<\346\267\371\274\374\253\365\274\324\325\352<X)\027\275\343\354\300<\'\222\r\274\004r\246<t4\360\274\207\211\327\274\222\'\251<cl\027\275\373/H=\346\214D=`YQ\275\340\270\302\274%\260\313<\315\025\003\275\367\257\300;y\375\273;Bm\033\267\300\343\025=`\324Q\275\360 \325:3XU=\032+!=+\212\020\275|\021\252\274\347R\025\275\002\203\256\274\264c\'\275\373b\374<)@H\274\364\314[=\025a#\275\230\232\2766\221\367\031\275\005kG=Ep.=\301\0053\275\n\3040=C\256;=\354a\005=\354\335\024=\226N\033=\330^\210<k\271C\275\321\244\020<\341\365V;]\006\277\273\363?\033\275\217\245\\\275\313\261\335;\276,%\2753|)<\357\020\302\274g\2657=\025\356\024=\n*\303\274\002\234U\272-\274\030=\203Z8\275)\320Y=\263Y\244\274\261\357\201\274c1\206\273\311\002\002=\204\277\036\2751`\354\272\347\036\356<g\227\036\275\362QY\274-\337=\275[\330\254\274$@\325<\261\357\006=\373\325O\275\207\257\315<\222y\347\274}\321\364\274t\260)=:?F\275\340\3244=S\345\030\274M\204D=\224\005\256\2734\242\353<\321\025\n=\312\343\215\274\025\273\307<\226\356U\275\314\205\207\274\371\222\356\274\013\200 \275$#T\275bQ\321<\364|\016=\037U\002\274\273\3776\275\225\002\314<x\032\026\274 \016\374<Q\376\356<\035\211Z=4\374$\273=\347\231\274\213\033J\275\017v\234\274X\305\026\274\200\362.=\234\204\023<V[\032\274\030\272\235\274\351H\367\274oO\231<\222\036\224\272~\350\t\275\212\305\016\275\371h-=\303\321\036=\373\242Z<\344$U\273\300\3642=X\277N=[C\322\274\331\331E\275\nwO\275\000\344\377<\331`L\273;\022\221\274\371\244\222<v\263\340<\367]\365\274n\230w\272\177\212\217<\n\333\313<\022\266\325\274G\352$=\201\263\212\273\010\330<=\242d\212<>AD=\224\341Q=\377\213m\2743l\375\272\324\210\310\274Q\345\215<Vtf\274\306Q\245<On\340\274\014\016\000<\251\252\217<\241\013\216\274\3731R\275\232\320S=\350c*\270\350\363V\275A;\017\275\351i4\273\315\372\372\273\204\275*=\033\017\311\274T\002\345\273+|>=\263\026J=>\010\243<\214\3130\275\0218\366\274#o\353\274\341\027\261<\226\362(\274\326Y7=\264\\\344\274*\001G<9fU=\033j\001=\273\244\005\275c\345\332\274Z\034f\274\214\202\007=A\246\r\275\r\212L=\270\356\207<\363\270?=\245I9<|R?<\266\317\022\275CN\t\275\302\t\026;\026\311a<\001\260\233\274n}\004\275~\033g<\211Q\222<>5z<\036#\333<3\360\260<\301\204;\273\026\232C=n\274\033=\314\200)\274\321?8=t\350\363\274\006\211\002\274>\277J\275\215{\271\273}\301\361\274\001\354\001=\r\214\347\273l{\033=\354_.=\217\245P=\200\252;=\301\242(\275\221\315:=\363\353K=\034\241p<\035\025\234;\230}Y=\254\337\027=\220\376\235\274>\214\376<*E\001=&\326\003\275\371?\326\274\211_Z\275f\304@=\350R\347:\222\027\255<\\\010\333<\375\253\021=\326\234|\274\342\020\020=no\273<\212\271\357\274\021\027\362\273\352\031\370<1\216B\275\245:A\275\217\371Z:\371\200\355\274\220\033>=\235\277*\275\372\201U\275\014\251T\275\237\363U=\350\360Z\275\246\270\336\272D\372\374<\212\206V\274\327\305%\275\223 =\275\221f\037\275\351\036\374\274\341\205`\274k?#\274\357\342 \275N\340U<c\254\235<6\035\t\273\335\035\330\274\026J\331\274\212\223\'\275\310\321J=8\322\347\274\256\320\214\274\342\260]\275\376\371\n=\244\361\331\274\371\350\033\275\375\251\024\275%\354Q=\325S\236\274s\302\346<n?-=\240\036\374\274\321\311<\275\347\354\263<\202\036\374\274P\221\t\275Nl\030\274\253\037e;T\"\033\273\023\330\252\274\310\311\301\273\245\202\300<|\253#=Z\363>\273\207\240\000\275W\016\204\274\236\355!=_\245U=:\233\022=P\353\004\275\333\230$=i\204$\275T\377%\2758\202\014\275\370M1=_\376\033=+\216\377<\317\277\036=V\357\234<N\357\274<\036g6=\301%\t\275\2423J\274\327\026\237<\021M\006\275\300&A<\002o\003=A\312T=\316\310\212<f\3101<\034\260\225<b=)=\340\210\'\274i\363\315\274\347!\006\275PqF<n\214\210\273j\t\216\273Br\325\274\017\322\271;/\336\371\274\034\236\251\274\020\252\016=v}\340;g\010o<\377\372\363<}\211\020\275t\242N<d\362\200\273\243\023\327<?\004\310\274\325\2326\275\366\3579\275I\207>\275\342\007\025=\016\327\352\274\300b\220<\327\007\277;\334\255\250\274\351|\273;\300pJ\275g\037\206<\014\342\325\274\366\322U=?\033>\275\307/|\273~,?\273\275\356\310\274\337)9=\\\201u\274\035%\0309\22194\275\351\352\025\275d/\217<|\274=\275\034\352\220<VE\305<\333\302\220<\302i\014;YN\327;k\353\310\274\254\374&=\203\035C\275\364\265\255\274\003J\262;#\266 =Gq\375\274\345g\t\275\256\222)\2752\217\2159\003I[\275\320\324\374<;%\203\274\234\274<\275\2200\251<\230\233\223<B\220)=\005\020\037\275\321n\341;\355\211\020\274:%\314<V\n\370\274\214\236-\274]m\035=J\221\275<\023;\374;\257jk\274|\376\r\275\302\334\027\275kFV\275\322\271\247\274os\314936(\275\025`\343<]\247\275\274Ol\014\274\320;\031=\212\240\036=\345\311i;\362\247\200<\202\251E\275u\367\n\275\321x\020;\2761)\274\n\252\262\274\243\2010<\217\372\227\274\320\020 =\215g\224\274\260\201\000=\244<\352\274A\357Y=\234\313\\\274\307\376E=d\355\010\275\247\300\\\275[\261R<\255\314\210\274\010\344\036<v\201\311\274\373\262:\275\336\2501=\223\213.\275\304{\010=\247HP\275\225\210\245\274J\nC\275m\022F\275\334\306Q<\024\031\252<\000#S\275\034O\357<0RT\274&\262\003\275\222,\216\274\326+m\274(\233M<\271C==)h?\275\237\3215=\031\336\372<mV\264\274\370\236i;\017\365\r=M\316\266<\255\207\302;\265`\005\275\241\234\206<\240\303\017<w\032Y=Cv\343;\r\326\336\274j\341\246<\210\037\233\274\242\r}<\";\004\275\275\025\257\274e%\356\2727\250\022\275\177}Q=\354F\210<\367\032\310<\260\325\020</K\342\274!%\033=\355\347\345\272 \277F\274\031x\237\274\205 \221;\335a=<\267n\216<M\317\366;\023\263\\\275#\277\240<9\225K\275\377\346D\274K`\035=\362{@=\347/0=O\032\317\273\257\207\010\274\311\375\256:\350\273[=gz&<\264\3643=@\032\371\274!\2624\274\265E\253;\001\273\333\274\235X\t=.\250\330:\235\017\t=(s\215\274h`&\273\265\371\314;KZW=\213y\257\274\332\223\376<7\362\004=\034y.\275\\\207L\275\t;\035=\333\034\232\274\276&\253\274\222`/\275\215\201\314\274pF\254\273g9\000\274\305w]=\354\024\014<\226X>=\023\230\232; l\213<\223 p<i\237]\275(G+=i\'(=2\006$\275\340T[<L\236s<grV\275Rr\342\271\026HU;\323\024]\275bm\026\275\\\320\333<m_\247<g\260\"=\312\246\033\274%\027\032=\303\350\336<\376dk\274\013\"U\275\376Q*<;\245\026=1\352\036\275\326IH\275\376\331K\274X\271\345<\275:G\274\232E\341<p\362\001=\033\0136=$\350\222<\377\347\005=wX\022\275\014\323\016=I|#=D\247\266<\020\251\023=\253Y\220<\230$H=k\3637=V\376\211<\020SO\274\034\345\362\274\233\331}<\317\273;=\246\036\363<|\260\'\275cvY;NsP=\260\177U=.\242q;Z>-=\210gU=\275^\327<\020x\225\273\257\226==\350J\002=\007\363[\275\014\000@\274@\313u\2733{*\275|mB=>\247\252\274\217++\275\245\252N\275\330\003\021=\371\275\270\2740\270\266<JA\004=\2444S=d\213\263;\215?\342\274\003w\034\275\317\225$\275\3277\257<\221SL=\013\';<\314}\365\274\366]\225<cw\350<P\023\000\2755\267\036<\345L?\275\2704\021;\005\'\361\274\310\340\021\275\346\363\203\273 m$\275\021y\001=W\307\213<\\OK\274kE\t=\000\316;=\211\244\361\273\274iM\275\210\363\001=n\'#\275V\215\355<\213\373\211\273O\301\375;\323\033=<\350\372&\275\321+\252<\305\246\204\273\325nC=\230;\"\275*\314:\2741\357\233<b\300\370;x\'Y\275\345\027%\275~-\371\274\001j\023=3\301\345<\234\341(;\366!\006\275\227\022Z<\035\021\001\275B\2026\275\371\206\034\274C\342\221\274\037\332\345\274\204\001\233\274Yw\226\274bE>\275CxW\274d7\200<\246\204\256<\237y\322</~\000=E<\025<\215\n\220<\330\300\322\274\2460\340<4u\016;\340#\201\274A\216\001<\327F\035=\226\242\257<\210\227>=\316\235d:\330\t\r=\274\306\220<U\207\276\274\257\315(\274\272q\247;=\243Y=7!;\275Z\212\016=\tN\271<\344\360\036=\302=\223\274k\341\020\275\014\3316\275F\256\254\274\304\267\205;aO\022\275\037\346\365<\031\330\352<\003\227\257<\366.\366<?\376\204<\233\306\004=\334aW\275\240%\\\275\207\373\312\274di\274;\217\021 ;\223\004\212<I\357D\275\017\027S=\224Q\367;\260\321,\274\367\032A=\212\026\373<\'\274M=s\037\"=\372\324\n=\276L\'\274\246\021\322\274U\006\252<\321\317\203<\321\302$\274B\231t<KGo;(\027\262\274d|)=\306\277.<7}\246;zI.\275\355x\252<7\205\2448J\3239\2751\375\342\274\202\252\023=\031|\234<\233\034\031\275\t\263!=;p\364\274\020\213)=\326\213\342\274\247{\366\274M\030\230\273\330\"\"\275\3303\000\275>\2065\275\360d\356\274\360@\\\275\320\353\270\274M\016\360<\247/\322<\376\033\007\275\3734+=\237\277\262\274\'aT\275N\013C\275\317\031M\275\025\010\350\274\200i\362<\n\335\270\274MbS\274\255I\022\275@\200\210\274N]X<\0308>=YG\224<\270x\375<\020\332\033\273S\265\375<c\010C\2755\325+=*=Y<m\246\261\272\021\337\010\275\326E\375\274z\373\261;\343\330D\275\267\230\231<_w]\274\356\244J\275\006#J\274\r\2230\275\371\216\365\274\336\206\013=#?*=\351\023+\275*\372\370<\361lS=\004\313\257;$\0216\273}\212\271:\232\366\361\272\027\244\334\274\251\216\027\275\374\221\205\274\364\335\227\274\320\334\304<\034\021\346<Lx0=\005\361\035=\210 ]=\261\223W\274t9L\275\3210\320;\346\377T=tO \275\313\\.=2\221\310\274\"\236.\273\274\271w<\263Z\205\273\235\205\241\274\267\273\375\274b\373q;\364@\340\274\234\3024=\016QK=\005i\003=\375\274\224<#2X\275\235\250\225;C\275R\275\016^\355\274n\200d\274=\177g;\315F\034\275\244*\311\274\031$\377;\257\017\016<m\262\026=zl\366<\333\366\270<K\227\t\273Q7\306:U\333\200\273f?J\275\266\255\366\273\244\300\317<Q\2127<b\244.=\0074*=\302\330V\275\000\350\014=\200\271+\274\312\352\036\273\036{\364\274\251\234C\275\010\316/\2734\316\223<0H\255\274\301\3313\275\226\372J<qXP=\347\010\007=;uC<XY\374<\264\257\304\274\231\010K<Sk\354<\271\025\365\274\260\t\363<\301\207\364\274\036\242\023;\342\343\334<7\213v;TZ\017<\361\336\365\272+\220U\273\320\302\'\275\352\210\215<\023\216C\274\022\246\370\274\3771\253\274\266\276\311<#ZP\275\223\226w\274\314\232\376\272U+R\275\317\223\032\275Z\214\034\274\207`\223<\246\035)\275\212\020\024=\27569\273&\233\236\274\321x\024\272b$\361;6X\252\273\200\360.\275Q\325\331\273\223\324\014\275\257\316 \2745\'\210\274\274A\340\274)\rj\274\351\343K\275\363\004Z\275[\205H=\021R\027\275\343`L=p\366r<\241~z<hiG\275AY\007==\013\265<a\270\005\275\340D\310<\240X\234<\370\334\307\274\t]\020\275\002PC\272P\315l<`\3767\275\356\360\007=\227\206J\275Q1r;)\211\255\274C\010\035\275/\037N\275\203\260\216<+\274$\275\333\337N\275*\336F\275qp\215\274\216\206\026\275\376\346\035=\1772]\274\203`O\275LC\026\275\203\232\031\275\370\301\263<}-\317\273\0378\230<\306N\037\275\303\374\323\274j\276\257\274Y\3776<\263\013X=\033\007 \275\035\333s<c&\000=\227\244\016\275E\237\017=w\340U\275:\300\022=\236\2018\2732\222\006\274\342\210\364;\232\353\014\274\334\2050=\234g\240\274B\320\315\274G\005Z<\033\261\013\275\202\177F=\252\210\237\274\253\341\300\274\026\374\010\275\363\376a\274\023e)\273\034\301M\275\212\"\337\273\370\236\240<\215\226F\275\2010\254<\264<\200<\240*\276<Oj\256\274L\021\270<\300\362\\=\022\341\206\274\262]\222<\222l8\274.\272M\275\3175\'\274\036_P=\367r\203\273ndv<\267X\311\274Q\330\353\273\2733*=\250\377\330\274)\022\302\272[f\255\274\334\203\t=0\034l;\303-\336\273\035\252\364<\312\233;=\236\215G\275\224\026\364<\343\340\360;\002\325\r;\266<\017=\226\343\036\275\033N\366;\3349\251\274\273\232\270\274x4\264\274\237\365\360\274 F\333<3\024b<\354g5=J_\305<2\253\253\273\003\250D\275\035\022\002=\320\023A\275\333\347/:\343\326O\273\236\021U\275r\232\302<q\032T\275\001w\320<\313kp<\016,<=\217\373\314<D\265\233\272\227\340\333<Bs\363\274\373\356[\274Sp\002\274\304\022\037=\013\355\351<\371\212\211\274Wd.\275Rn.\275)\347\2239\"\305%=\020;\025=\031\210\226;\324\205\262\272\247\217\276\274\333\242\217\274+\221(\275\353\036\345;<\236\000=M\357\271:f\262\276\274 \204\025\275\000\250\242\273\212\256l\274\310\n\033\275\340\246J=v8#\275\221\216\004=\371\365\230<\313kQ\275\031*\256\274\036\334\303<\375b5<\315\225\261<\020r\324<\024\277#\275\023\001\023\275\251S\331<\264\317\342<7u\313<U\034\246\274\233\234\376\274\n\332\245\274>\037\347<3\371\225\274vl\227\274+\2675\273\365W\001=\340\272B=\357\350\021=\316\027)<%\221\005<\360+\001=G\223\356\274\300DZ<_\025\212\272\224n\025\275\236\2144\275\332s\307;\365\242\027=?\314\266\274\335\217<<\037\376n\274f\354\363<\356\tq<\276\007;\275t\207\333<:\036\031\275\026=P\275\212P\035\275\203\037\305\274&10\275f\204R\274\200\tW\275r\000\320<\035\241\346\274Y\272f\274\'\307;\274v\234\315<[\310\302<\026xS\2735\372\035<\217}\363<l\027\352\274\254\330\270\274\'5K\275\340\326\235<\275Bq<Y3\024\275U\034\003=[W\003\275\000\305\200;\332\235,<\177\327\017\275\210-\001=\332~6=Q\223\023=\330\320\023\274\211k\257<O\344\r\275\257\250\036\275\270\372Y\275 \204\037=\022\203*\275\213\003b\274\342\227\027\275\212\365Y\275Q\376\023\275\347\252\223<\307O7;\022k\276;\371\025&=\010\376P\275\363\235\327\274C)\031\275\\\302\304\273=r[<\234IA\275\231\374\323<l\003\275\274\343\247\366<\r_9\272\000\001\376<\2122\264\274\007.\n\275D\316\202\272z\333\260\2742\327\340\274\013\275\023=z\374\037<\221-\021\275\t\236-<Ew\373\274\365\230\323<\257\330\026\274\"\256\206<b\215\273\274\263\217\232\274\236\261\356\274\235\245\n=p\336\314<d\000\017\275\366\3557:\304\320\001=\351\360\031\274\247\'I\275\342\346\341\274\223\270u\274\222\021\030=:\2604\275\366Q\035<\320\346P=\003\321\267<\343\301!\274wD+=A\000D=:T/<Z\303\r=iyu\274\355`\313\274p\240\335<\204\2469\275)\373E<\264\351\333\274\316bG\274\177N+<\320[\014\274u\355(\275\250<\276\274\n\2102\275\003\332\240\274p\266\222<\305<\370;\321\373\272\274B\341\016=\262\222N=>\232\375;\321SW=#\302T=\234\2504=\320\347\307<7IC=q\341T=L\224\370<^\261%\275u\221V=\351\343\036\275\223\017@\275d\035<\274\316\247,;\\O\246<+\251\372\274A\273M\275D\206=;y\205Q=\354R^\274\036\222\230\273\037\377\016=\023l\345<\023\036\000=\300\337\023\275\027\'\217\274\276\013 =\250\246\330\274\232\301!\275\242\364y<\354\014\241\274\304\324,<QJZ=\251\326\326<T\3475\275)R\'<\260\374\353<\256\271\266<\324\370\256\274\310\\\271\2745\347\266\273\2220-\275\226^\372\274ID\354\274C\324\223\274V%K\275\33185\275Q\224\017=\306\357\005\273\033RL\275\374\006\370\274\215\204\n\275d0\311\274\036\366\265\274\344F <\271\035\024=\302~\000=k\250V\274\225\246-\275\263\256_\274\317\003\000=\231(\375\274\345\371\025\275\362\242\224\274\372\200I=\241\2755=\347F\016\275\250\225z\272e\272\370\273\362\031G=,\223,\274\241\371\\\275\231\231\220\274\177\334w\274\004\017=;2\311\365<\364\203[<\373\240\003\275!\030F<w\313D\274\372^\020=\206\200\307<\215]W\275\253\272R=\023\207\244\274j\3026\275~\230\243\274\217\247D=\200PT\275\n\352\305\271\227H[\275\245\372W\274aK8=<W\004\275{\354\312;\335\206\244\274\256\346\322\272\316?\r=\354sG=q\021\315<;f\017\275\360\033\026=\013e\215\273\025\343\031=\344gc<+\242 <=\220\037=  o;:\323\362<\276\262/\275\224E\241\274\341\2470=&\354\310<\252EX=\304\004\017=\326\010\355;_\\\206<\341\3417=\275\357D\275\317)\310\274\010\261\215<\236\244N=\372\221\036\275\331\240*=\325\257Y\274\\#O\272YX\363<\336\320R=\302\376I<\263\377[=\340\r\241<xQI\275\202\3372=\024^\032\275\3501o\273\014\010\n\275\261C\007=\312\333;\275\240\265=\274\037\032\207;\270W\373</Q\241\272v\300[=\024%3=\t\323\230<\311\367\032=h\214(\275\352\r\237<X\324M\275\334x\':)\371N\274l\375@=\334\217\035=\375\t\343<\266\230\332\273\305!W\275\305\240\366<\320\016\200\274\262:/=$\312\244\274\034e\346\274\027r\246<\327\303?\275\212\344Q<\250<\355\274\r\315%\275\372\317A=\340\256\274<\017\022\327\274\026\222\355\273\344K\007=z\313\257<\233\371R<\314\tJ=\360\003\024\275\243\3227\275513\272\2709\t<\251\252\\\275\226<\204\274\243eF=\346/\241<\342\332\034<\004E&:\022{\004<Z\335\200<\036\250\021\275\r\273\037:C(4\274e+w9F!`\274\276\367\\=\314?\344\274\247HP=_\305Z;H7\004=\244\265q<\327\254\372\271\374\3027=\312\\\371\274\256\262\316<2x\001\275\267\342Y\275\234p\241<\315\315i<\267YF=\241\316\344<)\ry\274\371\225\254<\251\305G\275o\353\270<\313\332\273\274\257\276\253\274z+\322<\022\321[=\3068\004\275.\340\001\274\333\216\311<\215\333\351:\244\245\276<\212\306\346\274L0\356<k\251\270;\340\333;\275\245+}\274^FP\275\033r\353\274\307\333n<\2409\257<40\264\274\274\363\220\274\231\221(\273\3571-\275\004\0243=\021\r)9\365$\363\274\001\247/=\005\317\270<\344\2744\275\227\014A=-^H=\014N\221\274\276s\210:3o3\275?\265f<\340Q\010=\213\206\314\274\002\021\213\274V\346R=\202|\006\274\274\310M=\367&\0209\230\264\353<Q\370P<\206^X=\343J\331\274\006Q3\275\3118E\275\312\377\303;\251\251\\\275\357|\217\274\352\325\253<d\r\277<\3539\344<`\306~\273\256c\247\274\310\377\343<C\036\010=\006\204\261\274b\316O\275\306\202?\274\326\\\244<Gc\035<&\321\227\273V\306%=(\333\346<\226\214\271\274\357\252\210\272\323>?\275q)!\2746S\371\2737\222\355;\014/\027\274\364\266/\274\260\201\221\274&\227.\273?\2008;\323$N<\227,\017<\210\027\014\275\275\331\020;\265p\377<>\337\036=\022\346:=\341\255\021=#\255%\275\343Y\371<\306\373\273\274\030\344\007=#\273\002<V\230\355<\\\030=<\013\364 <\236\337\266\274\221\275\322\274\251\2732\274\313\'\324\274\020\220S\275\236\252\"\275\226\330\324\274&f1\275.l\314\274\325\033\205<\344#\230<K\022Z;\303i\032\275X\031\021=\276\331]\274+\362\352<\350\314\346\274\261\354R\274\342Xm\274\026\240\r\275\'\201\225<\2626\036=\003\321[<\037Q\262<\236\027\364<\266\367\004;rH\372<\266s\364\272A\245U\275%3S\275+\221\017\275\264-0=\022\320\232<\020X \275\365\365\007\274$\021\354<X\226\010=\322\345A;\347-\341<\330\336h<6\215\013=<\330V=\364y\346\274;%A\275\000\035,=\262\025K=\320\3535=\010*W\275}\020u<\334J\361\274ZN@=\03349\274q\240\317;\320O\211;\243\334\\=_\203\247\274\263\355Z=^\372\t=\253\336b<k\037\357<\370\315J\275\341\371\252<\034v\221\267\270>D=;z5\275d\345\006\275S$5<\2050\'\275\024\261\332<\320\2363=\347\335Q\275\275kC\275\217s2<\305\252\000\275\026\302\206<\374\277-=\350\226?=\314;\261<\255\252\002\274b\014\020=\333\342\017\275\033!1\275\014\335M=\242\211^:\356[\266<\342\206\207<\017\243W<\276~\343;W\210\220<\010)\016<\362\363\027=\303\357U\275y\034\206<Y\222\006\275\257I\363<\331\264\340\274\265\233K\275\223AI\275F\331\252<\256Z\026=\374\357&=\202\2718=\022\336\375<B\227\350<\254\372?9C\177\017<\341\035\233\274\010\273\263\274\246R1=\2658\n\275\320 \220\274\250\306}<*\257Y<\337\261\213;r\250\360<\206\360\310<\r\321\030=\227\354@=\352\270\256<$\004\027\275\355]\337\272\341\250\333<\234\024<=X\001\365\274\317\217\036\275\347\303\235\274\215\231V\27488[\275\306\307\264\274\267\006C\275qO\360<R\310;<\377I\032=T\307]\275\237A*<hd\006=\346\307\001=\270(\000\275\007\254\202;\247K<\275s\314\353\274z\026\017\275\365\310\031\275\210\3773\2741_0=\007h<\273|\327D<u\213\312\274\244\376*=^\017\207\274\325Q\315\274y![=`v\035=\246`C=\220\311\205\274\313\277U\275]g|\274\256*\326\274\010\200J=X\307\236<\315KR=\330\007]=H\233@=\315\274\014\275[\340\020\275S\233\266<+\265\254\274d-\033\275\337)\243\273r)\340\274\037m\036\275\316\214/=\017\360\007\273{*\310<\220\2314\275\022\223\330\274\036\344\036\275\006\375\212<\332\355\270;4!\237\273\021LX=\262\222\365;\373\261\222\274\3163\021=3E\216\274\274AZ=\336\352\250;l\277\330\274\200\"Q=\335\267\366\274\211\240\024=\214G\311\274\313Q\243<\\\334T\275\"\021<;I\336<=:6\256\274\2154\027=K\260\273\274%\236\251<\337\337Z<\253x\t\275FmT=*\317U\273\230mN\275f\320g\274\311\177\224\274\312+L=f\266S<\204\222/=\337}]\275\346\324H=j\343\224\274\200\214E=\306O\364<o\307\205\273\010#\255<\353MV8\227\260\024<\337.\347\274T\r\247<\240\204\365\274\272\265\231\274O\0043=\272(\357\274\325L\000\275\335e\352\274g\'\034=\275\363N=\227\340\n=\310\226\004\275\360_\033\275>\000M=W\203~\274B\333\021<_\371]\274\322T?;\204%\027\274\333\240#<K\243Y=\034\226[=(+\021\275y\3014=\317Q4\274\010\367\\=\371z\270<Qk\307\272\025\216Y=eb\037=KIl<\246\316I<\256\026Q\274\365DY\273\201\264e\274\345\234\235;U\021\264<\304p\021=_\352\252\274\204s\236\274\240\264\254\274\307\262E\275\235\312\317\272\366\020\241;\344\236&=\204\2423=`\255\256<\274m =\344e\222;_u\361;<\330\315;/\2125<9\257Z\274\247\365\313\274\300I\305<+g?\275\323WY\273A\365\022=LP\204<\245s\'\274\222C\245<w\0167\274\005-M\275A\206Z=\343\221b;\320\214\303\2749\374\245;\347\333\241<j\233S\275lH\322\274a\375W=\325h\241:$R\266\274}\035@=m\367\035\275\364\204\271<\324\t\025=\370\355X=\220\354X=\271I\017\274\250\002:=\232<\257<&\227\026=\375d\000\275(\201F\275\\;\034\274\212/\000<m\023\265<l,M\275G\332\366<\346\017\333<Q\3150=\331G\236\274\345\200U\275\005\372\340\274\326\270\337<\243^:\275mY\037\275\215\314\324<\230\3355\275\264\353\034\275\223\223 \275\214\316\037\275\\\013\007=k\370\267<\374\033\316\274Re9=\324\032\242\2742:\033<)\334\242\274\317Z3\275S@\201<\204\246\263<C\200\025\273\241\331\362\274\350\322\0069\303Hz</<\035\275\366\311\303\274\213\3759<?\335Y=\271;\221\274\227l!=\243-!=\305\277J\275\304\355\272\274\367)\023=\37320\274~F\265<3\264\023;\240\234\017\275\364\274,=\314\231`\274\224\227,<Ed\"\275<n\375\274A\261]\275y\242\"\275\351\357\r\2743\361\334<\017\025Q=2\320\031\275\203.\226<4\255K<J\2333=>\032\350;\357o\026<n\177\213<\234\000\326<7\252r<\226\213{<\260tW\275\334\007(\274\3328\035<G\235\376\274|zf\274-E\366\274u\301\"=D\347\262<\355\307\023=z[\332\274\233\357\005<w\2020\275\2306@=c\337\265;^\316\306<k\r\245\272\332\367)=M\343V=\030\245W\275\303*:=\267#X\275\261\302\275<V\201V=Cd\372< &\242<C\227\307\274\340\215\361\274\302\2127\274Pl\020\275\3459\255<\317+q\274\017\273\366<\203e\"\274#\352\024\275\025\032n;|?\032=Hyz\272\353\177\021\275\331o\335\272\321#\266<(\3324=\220o\221<q!N<,n\034\275\367\361\360\274J\334\202<\036N\013=\027\273\216<\266\321\203<2\224+\275T\306\237\274\312\346\023=\222B>\275\300n\245;\270@\342;s\306\277<\362\020\264\274z\004Y=\022\021\337<\277\235\017<\022\016==\263tA\275\240\3658\274z\023\215\274\240//=\215\'\n\2750\270(\275\366\001U\275\n\004B=!\207|\274\251y\224\274\265\254\315\274\250\253\303\273,<I=Kk]\2752\211M\275\310\276W=\356\335\354;\234\302\022\275\324zN=\031\342\t\275\310>\326<\321Ok<\022\031\024\275}.3=\333\2562\275>\031\217\274\207\005\264\274i\204\023=#8\247<k@\236;R\272\203<-$7\275\002\360\304\274\240\334,\275\347EH\274\322\346\367<\014\207\027\275\346)\336<\344{\343:\030\325\007\275\261\330\033\275\214JF=\332\"\t;b>Y\275\256^B\275\235\341\333\274\300*\215<\267\t\364\274{wP\274<\364T\275d\035A\275\260 5\275\002\373;;n$\267<\375\367\225\273\355\316A\275\355\037(\275\254\345\016<Z\314\340<\006\375O\275yG\001\274HZ\010<\316\202\032\274b\240\346<{\241/\275\026/M=<\006 =\223z\343<\331\271K\275\201q\370\274m\314\230\272b\331M=\226\357\036\274\302\342\247<W\177L<\373\357\000\275\240fC\274):\"=UR\021;\317q\366\274\235\276\273\274\316 U\275{cL=\022\236\006\275}\366\230;\023\212-\275[j\374<:\212\355\272*\241!\275iO\266\274=\277$=F_\177\274\277\262*=\266\273\230<\237&\307<jz\204\2742.\374\274\037\366\336<`E\344\274g\202\326;\006u\302<\001R\010\275\375*^\274\315P)\275Iv+\275V\351O=\340\036\\=\330\335\'\275\306\316\004\275\340\323\024\275\251^\342\274\274Q \273\354W;\275@\315\357\274\370\211\315<\330\304H\275\2568\216<3\315@=\260\315\272\272&1\232\274a\230\035=u\276\340<\201\037\034=mH\274\274TX\021=\355\303\214<\007E\237<5\306Y=\027\025\034=^\225\207\273\311\356\\<Ce7;\231\360H=\275\347\256<\217\376\227\274\221I\211\274{\003I\275\321\254\234\273\3158\'\275\030`\327\274\001\364:\275Jy!\274\223\227\222<Ru\013\275%\201k<8\203B\275e\020\032\275f\353\264<5d1=\255~]=\333\022\345\274\361\254\206<GQ\213\274\202\342T\272\324\251\364<\t\315C\275\332;\226<\022(>\275\033\220\304\272\326\\==\317\311\267<y,1\2756.\217<X\371\266<\264\324X<\261\374Q=\250\372\325<\346]\243\274\261\013\307<\353@(\275\332\263\353:\207E\365<\350\"\036\274\276\3746\275.\2771=\353_\r=\231\355\354\273\366\\\013\275\254\033\337\273$;\232\274\273\346\224<\207\316p\274\026\276\300;n+r;\037\336\014\275\317\316\014\271<\024\013=j\242\016\274\212\325F;\274\375\027=\017X\211<\"\t:\275X,\215\274\rxL=\034\024\362\274,\335\r\275n_\353<e\215_;\201\031\t<\204\304t<i\301\027\274\035\362O;\326\217\262\274\270\274):J\221J\274\350\372\261\273\254\225\212<=n\020=\242M\025\275\205\202@\275\277\267\367<\254~\356\274\010\002\037:\021B\006\274\340G\000=6\333/=\312M\243\274\242)\347\274>[\027\275a\374@<lt\010=\204[R=\3144\006=\207i\034\27507R=L\361B\274C\2647=\262\014\013<\263\317\220\274\312\031\031\275\325\226Z=\263\022\177\274)\366\254\272\347\227\255<\212n\256\274\036\375\306\273@+C\275\303\201\335<\217\3361=\322\017\342\274to\022\275|&H\275\300\275\267\274\037\332!=\230/H\274\006\203\201\274Z\004\037<{qN=S\363X=\240\325\243<]\034\271\273\366S\207\274MVJ=\277\3462=\334\220\235<X\361\220\273\373\003\016;Pw\222\274\313\302p\274\302\336\237;\035\343(=[Z\267\274&\303\211\274\310\243R<\345iz<\337p\321;)\346#\275\343\346\364\272k#;\275\023R\242;\273\021\300\274\322I\264\272\247\224\036\275\334\3543\2752\265\023\275#v,=D\334Y\275\021\374I=\001\360\004;\310\024\305<\203i\251;\315\004R=\351\223\211\273\2737\236\274\247\354\263\273\002\333\326\274\007\354\342\274\250\302\000<D\230W\275\350\'I=\227\340\202\274s28=\023\327\217\274\rL.\275\030=R=x\262B\275\336X\237;_\323\243\274v\326\274\274\255-6\275\3506\237<\306\345T\275\263\305H\274l\003\035\275\306I\340\274Uhz\274`s%\275\266\002\300\274\217\240\033=\034\350\022=\303\215\024\275\272\342O\275\023d\301\274\277\254J\275\002?\212\274\003\0270<\302K\024\275Q\271;\275P\252\360<\354T\210<\307\260I=v\363\362\274:\317]\275\201\003!=\023\014N<n\314@<\341+r<\2028[<\332D==\025=^\273Uc\272<h_X</\333\'\275\305|\022\275\266\024\003\275\177\314\305;\202\007E\275\265\375\002=Q\016\321;\030\354)\274%*H=\030sm<)\0301\275\002q\217<\373/F\275\342\221F=sq$\275Y\227\006\275\301\224+\275\302\177\022<*\306\355\274\326\341O=w\275-=eG\035=\262\027\265\274\315\370\233\274C\376\210<\031\255\263\274\n\323B=\223Z[<\204\355\346\273\267R\367<\326M\276\274P\360\251<\221{\026=A\3266\275\014\222\t\275 R3\275\202\341\022\275\337\014\350<\340\231\024\275\013\364S;m\265\226\274\373r\372\274F\364L;v%\276\274\335\326.=mx\310\274\367\'\354<\363q^<\330\345K=\230\351\r=\266-\221\274_\311\326<\343\252\021=\236\236I\275D\032M=\211\3736\274\367\006\202\274\243z\004\275\255\036F\274j\216\016<\005\342\305<\371\320\371\274N\277\023=\342\021\334<t_U=\337\202;\275\235p\\<`\265\241;\231\356\016<q\300\242<\274NT\274\340\2751\275\226M\250\274\005\370?=\203\253-\273\312\332<\275\232\030\355<Z\020\235<\264<F<\326HP=%\035\030\274\036f\362\274\275\242\323;&\325\254\274I \n\275JkN\275\220\nM\2731\002-\275\265\251T=\322\005\004\275bIQ= \013\023\275\001\3115\275\357a\034=O\001\"=\323\027\024\275\264\226O<\013\033\305\274#\023\242\274\217\334\244<\\\273\262\273=\033d\274\314\201@=r\253\000=\236\255\244<\211X\342\274WI\372<\375w\340\274\256\231\273<J\362\037=E\220I\275\344\361\005\275mX\251\274+\277==\244\352+=\247Az\274\205\325\237:9\263\"\274O\315K\275\014\337\000=S\212H\275\253aX\2756\322\273<\223\253\346<,\343\353<XdM=q\251<\275\304G\211\273\312\211Z=,-\035;\246^\201\273#\355\177\274<\220$\275\226\205X\274\343\3046\275p\246|<\330\305\2409\237\034%=\376\355\016\275G\351\033=}\320\264\274s^\033=\335\266`<\346s,=\345\325\216<\005\361\227;w\230\213<\035\2264<\210\221\243<\365\310\343<`s\025<\367\314\"\275D\203\005\275\212\241\254<\334l\230\274\364u\006<\004\032\327<T\306C=\234\2732\275\317H\307\273\266\241F\275\242\265\213<\234\251-\274\310\326\333;\250P\302\2744\223\272<\r\0338=G\316\201\274\221\247B=\270\270\033=E\005\264\274\254\033]=\325\213\325<\264?\230\274\000\037?=\347\3236\275u\314\016\272\357\2663=p\263\267\274\305\317B=S\331{\274\177\300\006=\030\371\026=\210fT=Ot9\275\203\312\346<\300\305\234<b\214\311:%k\326\274\312\374\260;Z\316p<\2561\\=\001/8\274\t\316\022=\025Q\017=I,\257\274;vF\274B\334$\275I\345\014\275\377~;=\341\315\"=\356\3022=R\334w\273\302\201\256<c\330\367\273?:\204<\t\3570\274\324R/\275\030\370\033=i\020n\273\210\236\222\273[\240N\275Z\324\205;\201S0=\374\2777\275\306v\324\274b\214\232<A\014?=\271\205\004\275\217/\242\274\200*\223\274\350\355\372;$\2030\275\363wn<\221hH\275\252a\007\275\344x#=\305\221@=\275\271\261\273\246\313\325<\321\2363=\001\254!=\362X<<\352\302\267\274g\'\026=\004hO=\317\225\n<\325\302\364\274\3023\020=\237\207\260<\356\375\317<\000\242\006<.T\250\274k\021\034=\361\210\310;P\360\032=\252\352@\275\325e\336<\300\201\014=\372\346]=I\345\303;\336\356\013=\310CS\274\334@U=\334\217\220\274\251w$\275\356u\343;F\0270<\305\177\n= \004==\022\220W=n\331\364;\266B\023=e\323-<\245\221\007\275\326!\236;\257u\020\275\341\336\033\275\374\374}\274C=\020=\334\n\n<\234\006\341:rQ|<\033\177A=\243\366\242:\366\276\004=\000\273\031=\300x\t;\343\373\000\275\246\372\331\274\300\030\017\275c\206\006\275\346\'\034\271k\nN\275\26275=\315=4\275\271\337P= \266?<\223\020\261<N\217\204\273\'\014\002\275`\350\264\274\312\320\034=9J\227<W\233\032\274\364\\\276\274A\007j\274\254\365\365<8\236\r;\351\226\000\274\243\366W= \330\315<\337W\261\274\323\343\377\274\327q\t\274>\240\366\274!\203&=>\325\337<K\007\273\274\221\225I\275jp8\272\230\016;<!\316[=\360\3736=[\331Q<\2228\213\274G\354D=\032u\264<\341nM\275\366\340b\2731\200\027\275q\225\017\275\234\016\206<\2713\306\274\340\020\263<\253L\225\274\345\247\335\272\267\177V=\007B\006=\032\342\031=`\327}\273;&0\275uq\220<+S\233<\211\330\333\274E\243p\274\242-?\275\263\331\004=\003\354$=\357q0=3\252m;%\203\266<\20165\274-\215\330<\255G)\275`\327\024=f\334\335\274+U\001\274I\220\200<Z\017\026=\031WY=ar\371:cqh\273\206\355\354\273\333\314\216;au\376:\033\267\364<X\036\020\275\312\333\013\274\023;Y=\203nC=\007GZ<7\335Q\275\021\355\010\275O?R=\264\3762\275\245\215!\274^X\\<L)8\275V\035)=\243\312\254\273u\233\002\275u8;=2C\346\274l\261H\275\235\3010=\240\255\017=\270F\017=\'E>\275%\263V=(\343\373\272\240Th\274\216\350~\274Ai3\274\353\006\223<b}\231;TKE\275y\207\377\274b\275\320;\320\3533\274\212SY=\333@\026\275?\005\302<n\257K\274\342\363\027=i1\321\274Mp\313<\360\270\260<\276\257\317\274o6\004\275\267\253\244<\305M\266\274\365\231\255\274L&-<\010\004\277\273\340\214R\2751Z\365;&\204\370\274\313\375D\275\273\257\312<r\245?=b\311\n:\257\215*<:Z#=l\267B\275<\017[\274\214\027\316\273\204\324*=jd\032\2724\377\037\275O\177\'=\360\335\337;_\246\240\274\016\257\t\2743\211@<\223\t\325\274\317b3=\007\236Y;dK\002\274iB{\271\242\023p\2749)\021=\t\206\222<\271Z=\275D\013\035=\306\362X\275\340\007<\275m\262\031\275\237\226\025<\343O\241\272\257\304\203<\265x\312<\026\375\272\273\276/4\275\231s@<\232\311\263\274x\205\013=\026\2116=m(\242\274\365\312]=;\254\273<;g\n=\223F\257\274\004\351G\275\214\016\\=\265@\"\275\357\354)\2756`\352;\256I\006\274\333\026\001\2755\254\t\273\033\nN=V\363[=\212t\024=[<Q\275F\'%\275\310\357A<\373\301\037=?\272B=\210\247$\272\014\271\244<~w\002=\347\276\310;\024e\003<i\020\350\274\203yW=\277\212\240\274\222\371\'\275O}:=j+\330<gj%\275\353}G\275\317GY<>V\004=\177kZ\275L)2=\301\251D=\270\274T\275\303\026\003=\314\340\024=A\370J\275\207b<\275n\255F=\255\346\346<!\303\330<\374\324\027<\342\231\221\274\246SL=\231\221\033=\345\024\301\273fu\361\274\205\333$<\3311+\275\274$t;LF\371<C\006\261\273h\257\013\275\255\326P=\263\"\315\274O\363:\2752\327\024;\304\246\024=\016?h;\274\351\225<\334\215==p\214\366;\301\237\235\2736\252\346\274\223\025<=\334a\246\274,\230P\275\214~\243;\243\035T=\336\3214\274\252\347\312\273\002\206$=\315\231\370<\321\231\022=C\354\004=+\243\323\2732\3379=\237R\247;\306SM<\322\327\317<\223\252G=\265\350\336<\332\343X\2753\370\233\274\2112:=\'*\002\275\331\001`\274\037\274\022=\215\034<\275eD\254\274<\342\234:\3639[\274\215\003\n<\3729\243\274\246\376U\275\242\323\023\275\262\353D\275\266\010\327;\231\220\247\274y\321?=^f\350;\333\t\217\274qc\201\274\001\322\342<y\t\026=-\010\004=\243\354$\275\270\311\241<\345\032Y=8\024\035=\036^\262\2749~U\275Z\020W\274\3208B\275\215-\371\274\220\2256=;\211\235\274|\3661\275\352[\002\275\334N\036\275|w\217\2741\226\\\275\215Q\345;\211\245V\275\205\0200\274.\261\325\273\275\251\240<\303=\020\275L\301u\274\252\330!<x\022%=\327\201\261\274\260]\"=\r\233:=\206\264\332\274\271S\036;\221\360\352\274MF\361\273\303\274\203\274\226\3730\275;\257\"=\\;\213<\301\"1=\257-C<)\243\322<\004\253\355:\340\341;\274\355\331E\275\022\227\231<~q\244\274\277*\031=\307\037\360<\317\271\032\275\301\243W\275l\342\314<s/B\275CA\020=\262\221\343<\242Uw:G\372\003=\244\346\010\275^tM\274\267(,<~\013\352\272K\231\333\274\224\305\237<:\327T\2755i#=\317jP;\210\230y\274\372<B\275\206Q\357<0\2116\275\001 5\275\326\325\360\274\206\357/\273\340\253\247<\036\223\266\274\200Tt<g&\372<1\016\313\274\025&\250\274%$-\275W\215\246\274\020\032K\274\032\320\324;\263\373\356\274\231u\t\275F\243\'=\364\262+<\233\034\001\275\035\332\016=aG\036=\0144\026<=\213\017=\036s\300;\3337)=\335\375?\275\200R\324<\262\227%=i\240L\275]~\260\273\343v\353\273R\004\276\274W)+=\350\226\211<\362j\206\274\302\300A\275v\033\354\274>\226t\274&\355\006=\t\333E\274P#\031\275\205R\356<\364Z\021\275\233\251Z=\022\211Z=\243Z\204<\360\246q\274*\215\277\274=\244>\274\306.\315\274\236\032;\275%\200\037=\025rY\275\371\316\255<\\5<\275\256\256\034=\014\325X\275\251\354\270<\236\376\262:\016\366\264\274\341r\027\273\037\347\361\274m\224\036\274\375\030k;\256Q\306\274\330\374 <\352\330\005\274H\0234\2751\3116\275\310\215\000\275\262\247\021\275m\204\347:\303\223\267\274\352\256\226\274\002\243>=\365HJ\275\363\233b<d\203\010\275\271\227&<\306\t\336\274\336\331-\275\017\354\"\275v%\376\274\t\215\265\274\037_\030\275\004\201\351\274\177b\006=\3114\r\275\301\000\307\274I\265\003\275\310\315\\\273\327\231\003<\201\235\221\274d\005\302\274g\214S=\340\202\366<\020\017\t=|x\014\273\370\026\220;\365\240\353;F\246\223;\232y6\273\364\016\257\274\311\r\367\274g\3450\275bi\307\2732\030D=\036W\005\275\n\354I=\334b$<\275\240\222\274\320}\255\274+\216>\273-\0072;\007RR=\234xj\273x0\344<,\022\361<\232\223K\275~\274\311;\274U\237\273\246\363\033\275qn\256<xfU=\233\013\356\2716\312)\274\334\326<=lm\017\274\2157\343<\003[Z=s\301W\275\305.\037=\217\016\212:\262\217*\275s\257\251<b\264T=\036\345\361\274\307S=\275\210\216>\274\222\242\251:\234\256*\275\211k\021<LCV\275\261\266:=A=\260\273Y\033.=z\234\034=\225:\356;U\355\002\275n\371\353<!\212\312<\354G\230\274\346\214\261<\t\364[=\003\300N\275W\027Y=\244\242*<\305\251/\2759\n\265<\222G\346;\005i\243\272\223\244x<\016\314,\275\254\271~<\247s\"=\017\312\n=P{Z\274r\013P;*\273\275\274\312\375\266\274\243*\250\274\376GQ=&\003\375\274f|\210\274\221C\021=\025\346\225\274\360\203\315<q.\227\274\202\\A\275G\2443\273O\317\230\274&\366.\275\276i3\275H\317+\275(*\365<\331W\312\273\364\316\310<\315\321N<\376\2438<7\322&\275\200eZ:^)\017<\217\257<<\003\213.\275S\2626\274\022\225\213\274\307\336\303\274T\231\361<P\206\014\275\2327V=K\247\315\274\232\233<\275\361\334\217\274\234\340\332\274\247(\032\275m?7\275\305\315\241<\002\037P\275\275\227B\275\216\016.\275\251\225B\275\001A\216\274\217\240\031<t\351\247<\334\337\025=<R\002\275%\316G\275\353d>\275?{\367\272\021i\246\274\004<0<\216\005W\274B-\340\274Y\022\022=6<\235<GTA<`yR=q\200\251;\333>e<\372F\365<\264\244\032;x*+\274; z<\240(\245<B\024\344<\210t\\\275\340\353H\275\316\370\n\275\372M\027=\306l\366<\224r\022;8\345\306\273\005 (\275\275\266\334<]\225)=\371\206\350\274+\243-<t\317,\274\263Z\376<\354rd<\237\240s<\223N\005\272\344C\255<\006\354\344<\205\"\016\275-\357k<!\375\316;\255\251\370;H\311\276<L(C=\024N \273\223\254\222<\357\374\337<\361?\021=\000E\370<\320\353\300\274#\211w<2y-\275h\3726=k\031\242<3[\n=\257\360\303<\312\267\256<\006l\033=\230\353\304\2741;\365<\375\367\372\274\300\321\267<W`\236\2747<\333</\250e\271s\275\317;\345:Z=\204DW\274UK\023\275\3461\030\275tBH=\271\3504=9\032\326<\373\0001=\225\247\334<Q\030\032=\033\313\341\274qi\317<~x\220\274\312\275\206<\362\334\031\275\263\016\214<\343I\020;`\340>:\376\345\243\272\357m\226<j\326\300<\253UU\2754t\002\275\266{2=\001\216\211<\266\265\2468\246w8<\033\206F=\320\003\000=S`\027=\234\357\023\274\352\373\020\274\320\266?=\"\206\363\274\026*\337<(\nX\275\332?B\275\201\226\247\274m\023\324<k\006]={X\014=\266~\330\273\0346D=\372{r\274_5.\275[QM\275\357\343R=\273\326-\275\241\212\361\274y\204\t= \316\010=\204!\355;\231\356\016<D\2752\275M\030 \275\222\335\024=os\220<]\033%\275\276\312+=\211j7\275\276\375\321:\016\206\215\274\234v\025\275\024~\025\2757\010\022= U\026\275\231\257\201\273\256\304G\275\371:\r=\353\034J\2757l\024<\324\314\361\274\355\014\342\274KM\231\273\350\246-\272\257\231G\274\333/\037\275\302\266-\275?k\350\272B\322\032<\327\337\244\274\035\352\337\274G\330U\275\350{6<-\032\273\274p\253;\275\263[\006\275\317]\355<9\004\215\274\363i\023\275\332=\372<\325\2721\275\215\243\031\275E\026\240\274]#(=\013\360\260<\252L\225<\350{,;\325\204D=\240j\232\273C[\335\274b\014]\2756\014r\274\301\376&=r=<=\354fZ=Xw\010=\3424\027\275\305]\025\275\034\2147=\316\220C\273\373K\262\274\302\332\037\275\206\202\343\274\362\322\232<\237\225\333\274\353\251\257<\315\363+=\353\017Z\275\253!\335<\366f\032<\376\313(=\310\220[<\324\262Z<\006\324\242\273\323R(\274\000\017\353\274\n\222\026\275`\017L\274\004\177U\275}U\356<\322T\256\274\350\363\333\274][\010\275\336E\003<;q\006<\313h\025=\267\352$\275$\272R<\326To\274\210|\004=\006M\031\275AmX\275O\262\311;\276\362\017=V\366\324\274\273f\231\273\023@&\275o\354\356\274G\302\217:\204\263\215\274\310~!=\323\006G\275g\r\357\274\354\236\267\274\346\243X=\0263U=ZB\r\275 ($<\375\205R\275\002\'\016=k5\345\274\272\236\033\275\240D\023\270\\\223$\275\242\346W\273w\003\324<\376\362\254\274\007Q\035=\026v\222\273\370\254\244<\356wF=\202\3038\275M\377\034\275+\022\302;\202^\301<w\201<={\337\362\273\222\352K\274\213\032\033\275\374|\361\273r\036/=\377\301\003\275\177\005o\274\026\034\013<\023\010C=\377i\201\270\254\234\231\274w\345\223\274\322\022\024\275_\034\243<\334\352R;\343\222\315\274\207-A\275\332\031W\275u\0264=s]\037\275\225\362\363\274\034\"#=@\344\202\2746\220\243;\226d\004\275\357\342\003=\304<6\275\203\253\300<\355\257J=\243\013\t\275J\365\017\275\362.W\275\330\345x\274\010z\263\273\331L\022\274\316A\260\274\345|@=\303[\300<\264\021\216<\247i_\273\233\361\210;\0279\022\275\242\027U=\331w\303<\315\234f;\223\014\250<\027\225E=o\365%\275\321E\003=\322\353)\275Jw\213<\007(\007\275\334Q\261<\034\316=<\301\340?\275\340\022#=hH\325\274g\323\250<\037\234\226\274\214\017Z=\205\204\271<\034\033$\275\256\266<\275\252\335M=<=*\273\226\3407\275\320\013\016<\263{\017\275\275.\016\275u\336\302\273\325\272\361<\"\377F\275N\236\366<\273\3618\275\344\373\013;\203R\013\275yF\326:C\2166\275\031\300\r\275_(#\274\306\205\337<\207\213)\275\2445\300<\021,\357:q\t\033=\246\363:\2759\374\371\273\354\216\266\274m!\312\274\331\366\212<\332\032\262\274T\363\342\274b)\\\274\014o\006=\007`\016\275,\023N\274x\374u<\022\3256=\216\304P=\340\035\000\274`\3364\275cF\264\274\t\363\204\274&\273/;(\356=\274\244\350r;4\226\343<\240\356\262;\261N\260\274\260E\325;\037`6\274\271R!\273\006\214D=\232\213\027\273\303\344\215\2749\245\014=\017]S\275\2230\017<\017\224v\274<\207:\275P\006\375\274\207\373G\275\017\333\001\275\315WJ=\227K\030\275\367\315\345<b\255\343;)\025u\274\364\305]<d\321\346;\3435 =\225N\344\274-b\372;*\324p<\373\3645\274\227\334P\274\314\031\250\274\260\204!\275\347s\344<l\021\350<a~\251\274\373\224Y\275\266\336\237<R\004\252;\262J\033\275:`\\=\254\337N\274r\231\337<\030\217S=\242\023\270\273(\014<=HF\003\275p\374\365;\246+\343\274\251\361\310\273\327\0330\275\3470\370\273\336\'B=\r\375\3449\032\273\036<0\323]=\254S\362<9\303\304<\222s\373\274\241\343\036=F\325V\274M7\306<\250\312\"=\231\354\331\274\005i\006\275\270\206,\274\266\002\254<\031\265\370\274\304q\367\2746\274\351\274\350n;<\334\270\352\274k\303\014=\307\274\237\274t>G=\000`1\275\301\2571\274\214\234\274<%\"\261<\254\266E\2753z\222\274\342\354M\275\262\340\344<{\233K<)\223\017\275c\311\013=^\272\322\274\'q\000\275=,6\275\322:C=\211\303\255<\212R\177\273X\311\007\275\243\300\315\274x!\222<IC1=36\260\274\031WG<j\216\347\274\033`\t=>\301\030\275\243\346S<e\375\267<\242\220G=*\311K=\377\203\212<\307h\310\2748\364\340\274\336\375\365;z\334\212<[\350\272\274\277g\343<\226\036P\275\246\233\340<\330B%\274\220s-\275M`8=Kjo\274\2072)\275\366%<\275\3516.\275\032\3328<\005\2248=\327\031\256<\344\217\251<\023d\235<\016B\215\274\301\304K=@\037\036\275\246\344\007=\230!L\274\2724T<Q\237\253\274\304Tq\274\240\272\324<\024\354\032=\002[\001\274\202\rB=\200_T<\372\262;<\347\265Q\275S\2308\275m\336\027\275\313^\205\274X+\236\2745\277\230\2748 D=\372\202\310\273\\\3448=Q\177\352\274\231\207\305\274\214\236\247<j\037W\273\331H\031=\374\200u\274,\277\247\274\231d\233<\252\335\321\274\2534\\=\017\206S\274\367YC<\216\353\357\274\206<7\274\243\356\235\273&$$<]\366H\273\222\273\001\274\215\242\327<S\227Y=m\336(=@\354M\274\032\2320=\225\266\376<8\272\334<\n\326 =X\232&:\365\235@;\013\305@\275\333\240\342<F\305Y=-WH\275\245\256\024=:2O<\214\002\322<\251\006\346\273\001i\337<\344\353\310:\340J\225\273\271\232|\274\246.\n=\005\265u\274c\177\'=\242\031|\274[\217\212<\272\300\247<\005Z\327\274\222\006\247\274\234\362\352<J\353s\273\216\023*=\241|9\275\021\212\340<\241\214\275\274\250-\037\275\002\361Z\275\223\253\n\275Y\202\250\274\372\344\006=\212\376N=\344Q\330\2749\233?\275p\224?\272\206>Z\274\016\331\262\274\002\210>=xV\330\274\224\222\021;\305\310\371<\350!\010\275\354\271\374\274A\200\006\275\025\247#=\246[\210<\343\304\010\275\350\210X\275\336\357M<\262\212\021\275\01610<\310\231\302\274*\177;=Vw\010\275\272\267\260;\t\364\307<h\303%;6\261F\275\272\312\225\274\364x\031\275\234\203\031\275\037\252\270<v\325\337<\031\326\r=\321\205\302\274\252I5\275\367@\260<a\334Z\275\3149G=\n\200\257\274\372A<\275\010QM\275\257\214\304<:\033\027\274\224\323\023\275\320A\002\275\212\233\022\275O?\"=CE\247<\315w\330\273R\014\027=\252)\035\274\233\316\034\274\205\250\232:\266w\034</\226\210<o\376$\275,\204K=\267\235\257\274a2-\274\310\036N\275\341\3641=\205\267]\275\002\327,\274)\241\033\275\233(\222<N\304\200\274\335\217\343;\016\025`;\202\375Z\273>1\026<\257\252\037=\n\221,\2751+\212<6W\377\274\t\326==\303\375O\275\351\271\010=2\341\035=\253\314\014\275\027\202P=\370\005S<\305\003K=\333\3669=\307\3429=9\337\030<\267\3103=\200py\2745\261\304;\356\236\315\274\234n\262\274\010\317#<[{\307\273\3461T\275\246\202\345\272\225\372L=\341\022\036\275\274z\273<\314Y.=\232m\235\274\310)5=6}\030=0W\n=zd\006=\325\371\321<\333\333\023=\320\234Q<<)\022<\001U \275\347\033&\275\241\002\225\274\007\t\304<\005\257\305\274i\310\205\274\350\254\364<\021\013\004=_L\026\275(\320\256\274\257\031$\2757\304\304\274\000>\031=u\365\036<\233\373/\275\341D9=I\356\273<\340\367\273\274\252\265\002\274\002\2242=\341\3463\275\010\005\342\2748\310\267\274z\2631<|\371\t=\370>\315\274+;\002\275\376c\026:\036\247Y=\201\230\351\274D6\345\273\211\317\225<\001\241Z=_\260\\<5 \013\275\3550S\275\004\363\260\273(?\003\275\310\250\304\274C\312\035=\267\251Q\275\371gq<\224\351!\273\353$\033=\301c5=\016\246\036=\264\236,\275\204\323n;\221\374\252:\322\204\035=\272\3330<\362\2575\274\271\324L=\323\314u\274B\035(\275\252\300L=\366\330\\\275P2\004\275\t\274\323<i\"\240;\001`%=\275(\223\274\023\222*=\03261\275\000\210\332\274\273\270A=^\336\361\274\265|\335\274\341\362\210\274f;\037<x-\001\275=\336\320;\262t\037\275\0365\021<\234\374\320;\373+\003=7\306F\275\\\330V\275\337M\353<\347`\337< \350\320<\230O\006=^\013#=\246\267\017\275B\2374\275\337S\352\274L\323\330\274\275QC\275\"M \275\252N\001<\304<\331<\256n\310<\353\033M:%\257V\275\214\377\000<Mx\300\274\321cs\274\002\356*\275\355\314\256<\215\341E\275\275\202\213;\225\035\372\274\350\300:;\276\005\201\2744\207C\275\361\364\036\275.5L\2757\177(;\244sA\275\306&\343\274\312\264,=TP\205<\305\275\002=\247\002\013\275\\_\034=\374\225T=\374\013\014\274\256]T\275\002t\212<\t\tW=\262\003C=K\223\020=6P\257\274\313\201\253\274\212{\373<Oa/\275\002\215\237<+\265]:\275\253\261;\001\317D\275\306\230\'\273\221\003\350\274\\\331-=\030Q\276\274\303\244-=\\g\006\274\334\236\016=\272\0247=\030\366j\273\305{\350\274\346o\265\274\326e\304\274\214\305X\275i-H\275\215BD\275\333P.\275NH\366\272rQ\306\273g\302Z<\027g\310<\272[\227\273\303\307A=\234\221\371\274.\236?\275K\313\035\275\027\222v\273\002QK<\211\037\302\273\223\336\266\274\357\304&\275\004g\363;\372{T=y\231-\275\265\345?=\263\326c\274Q[:=\351\026+=\210\263X=\017\2177<\303\275}\274|O\033\275\021\203\371\274!g\033=,VL\275\027WJ=\237L\330<NZ1\275\257Sd<\274\022V\275>;\263<D\372\313\272A\376\374<Sw\230<\345\202\302\274(\201\254<\252\376\013<\007\000J=\211\222\016\275\325\327\274\274\177\363v\274\035\221\326<_L\325<J\375Q\275\005)\323\274\352\361\203\274\276X1=\202aH=\227\331v\274G\210@=\000\257\270<V[\2729\202\375\352<\301b3\274)v\017=%7\207\274\027\215X\274\217\376w\274\\\037\222\2712\211\027=\257\270\207;\304\370U=\355J\362<\273\315\001=\007\346(=\266JY\272\374\376\004=\325\334\320\274\313L\020=\310\350R=\213Tq;o\033\031=\227\023\353\274\357\2428=^\247*=P\307\\=X$\334\273\272k\255\273\026\002\327;\305j\024=\346\306\351\274\224\201\314<\230,L<\301\326C\274H\215M=\030D\036\275\363a\"=7\350\214;\276\261\036<m\300\222<=\3577=\351a\330\274\034\365\007\275\341\227\017\275;\266\353\2742\302\256<!\226\235\274\216V\030=,\375\017\275\316a\266\273\3128\252:\224\3122\275\255\221\022=\226\351C\272P\320O:J\376\212\274z\235P\275\324\3239\274 \330\346\273\251\210\361\273@\275\n\275~\236K=$e\004<\341\250D=\363F\235<\210\361\360;*&\374\271\005)\274;\315+\325<A8\312\274\271\014P<\213\264N=\211\312G\274\351X&=O-\005<\364(\207;\036O\031\275\033HT<i\220\303\274\233\212Y;\365\340\007=B\034{<\225\263\003\275a\272\027\275\314\371I=\335\027\001\275\245\267[\274\346a+\275m\232[\274#[\326<,\004Y<O\346\r\274\002\337\031=\266\224\016=@\177\222<Z.\030\275X\223/\274W\270\302<\314\263>=k\260\324;\241\304v\273\001WI=\370/\010\275\251\022<==\021[=\356\233\255\274pg\265<wkO=\340\021N=\246w\342\274\207\332\033\274eG\005\275\'\302;\275\255\0278=}\304\261\274\257j<=\214p\307\274LO\236\274\222\220+=\016\272\r\275\267=n\274\203\362\272\274\201\261&<F\275\204<En\233\274/\376E=\245\035<\275\343\003\'\275\277dD\2752\224V=\007w\351\274$\366B=\301\273\273\272W\372D=B\024\035=\004\030r<\177\305I\273=\217P\275\007^R\275\010\274\\\274N\035\234<{\222R;\n1\251;w\2336\274\267\245\242\274\273*<\271\235\343\374<b\307o\273}\214\027\275\000d\362;=\022\";\366\375\262\273\210\322\341\2737\373Z=\200\307\001=vj\247\274o`%\275FT>=\266s[<5Z\350\274\352\023\016\275P\303\375<>\372N\274\243\t\361\274v\363P=\321]5\275\220\3379<\264\307\210\274\241\345\346<\020%\334<J\362\027=\373\363R\275\373\375\023\275\312zS\273\247)\340\274\331Y\361\273Q\243\316<\315}\311<\236\033f<\241\016\254\274\307d\320<(\263\031=5\273R\275$Xb<e\235<<\210\177*\275|\204\035\275L\302\313;o\3763\274u|\033=\3548\274\267\014\322v<\203j\244\274\265\322C=c\310\301\274B\371\036=\210}~<\025\371\345\274\003\3107\275L\366\335\273\311\305n<P\334\037\275*\300\336\274\331\372\341\273\312\350;\275\212\315\252\274\300\314\013<l\035,=\232\322\242<%\270}\274Q\356\224\274\361\017=\275\305Vx\273\302NI\275\200\304B\275\032\035\225<\263l\203<p\rK<\245*\260\273\302\337F=[\200\233<F\224<=4W\342\274\017sU<\001\306\344\273jS\004=\0275\364\273\244\204\252\274\205\336\001\274\242\334\323<\201\t\373:S\263\376<\013[\363;$c\223<D\277\005\275\215>E\275\010\256\213<r\364`9\370\304k<\315\2340\275\313%G<9\315\351<s5\014\275\230\264\202\274\360\272\315\274\021yP=S:\364<t\336\207\2745r\215<\356M\204<\027\302\253\274K\334N:Z>r\274C\353\216<\231\374\306<\361\3569=\350Z\303<g|,\275\261\225\226<\213\002+\275S\2729\275\3035\001\2753T\255<\037,\037=f\203;=Gss<\206:J\275\233kT=\2419\355<%-\371:l\3345:\025\001\233<\242OJ\274\013\322%\274\332\345\314\274\024/H\275\266%\303\273\n`8<\031\200\205\274\275\213\023\275h\250#\275\363\2578\275\352\3233=\247\232\221;4p\363\274\373f\r\275\025\317F\275\226ZK=Op\037\275\334\315\302\273\326?\374<\235+\347<Q\016\347\274V]M\275\271D$=$\213\211\274\354\200\342;\247\024N=\362\325\305<\351\257[<X\007n<\365\207\323\273_\220B=\204\245\020=R\301\362\274\024\231i\273\r\241\225<E\033\261<\212\224\002=:\177\260<\005yV=\356{\235<2\274U=@\304A\275\n\005\367\273*\261\017\274\024\356\267<\374D?\275x\241\027=B\371\021\275\360\202L\274$\317A=\006w\233\274|\017\235<\315eU\274\235g\204\274\210\301\t\275IWC\275\025\267\323\274\035\253\n=\020[H=\236\251\365<\214J\223<|\211\n<\215\317\001\275-\344\326;}\373T\275\364+S\275\214\250\376;\000\351\311<8\022\376;\'\017\'\275\\\330\263\274\037\302\005\275\3401\037\274\024\250]\275k1\031\275^\371V\275\377\265\021=5\311\371\274\346\201\263\274\363\331\020=\326R\r=\311\331\243<\311\226+<\311\007\037\275\340Q\n=\340\346\036\275\363\321\206\274\353\0061=\246\031\260<\210FX\274\365\374d\273\277\357\331\274@\356\347\274\'\313>:\0179\224<\"\036e\274\026\032\241<M\211v\274\247\261\005\275\241\321\242:\2329\356\274\235,\241<$eV\275cim\273F;4\275C\t\"=-X\030\275zu\366<ekX\275\377\225\334;\233\316K\275\016\266\237<L\021$\275gg\000:Be\005\275*\022\332<\367\250M=<\203\r=H\232?=\327\247\327\274\232\t#\274\363rG<k\271:\274\241F\354;d\324\024=\203\341E\275-(\020=;\235\201\274-w\365<\022g$=T\251\260<R\242%\274\033&\221\273V\362\n\274K\311\035=\203\325@\275\250\350\333;\363\277U=n\316\001\274I\230\322\271Q\032\215\272\034\340\304<\016I8\275(\023\017=\225C\363;\364\356\024\275\016\215\337\273\377\342\223\274\352A3=\201\031\001\275\246\220 \274\275;\231\273q\030\244< \324\327\274g\341\375<\205\353\034=w\026.=\374}\371<\317#/\275\307\203\216\273\305\220\262<x\362\275\273\332\375\356;a\030\225<\265c<<{}\354;;\350N\275\330\302\353:\013E>=\247{#\275\370\001\004<\373\023\030=1\252N=\236\'J\275@\272\323<\007JT=Yt\253\274\003m\005\275\366\320\320\2744\374\361\271\241S6\275@\354\032\275\364\031i\274-p\370\274\235\374\332\274\311P\323<\030\364@=\223.\330<\nR\243\274\245\3412\275\357ZF<\261\370\362<B\366\344;Zx\203<|U\006=\225\243\233\273\353\205\335\274v\343\007=_\0252=\313\tH\274C\370H=Q\217==k\211.\2755\3125\275Lle\274\002!\377;\251mC\275\354\351\232\273&7\241<\271F\373<\na\216\2733\246\373\274\\j\010=\177;C\275\205\3441=\365Q\016=\336=\r\275\226c\261<\243sX\275|\031\013=)h?=i\235I\275\006kx\273\361{\263\273d\002+=\211\027\354\273=l\034=\367\3438=FC\256\274};6=k7\337<\377\246\226\2740\342\030\275\315*\361;\270\246Q=\304\265\324\274oF\341<\346sX\275pLA\275\271\246r<\355\213\010=\014\266\370\273\274&\376\274L\216\016=\244f:<\006<\220\274U\364\215;M\010\364<\205#\223\2748(\254\274\271\007==\232\251\363\2734yU\274\027\365\024\275\241C\231\273\361^\320;_&\327\2747\357\317\273\221\370\371<\r\\S\274#\033\302<f`\350\2748\017\361<\355\375O=$\247\240;\333XM\275mP\013=\361\\/=\326\027<=|.\202\274\024\310\004=9\036Y9\256\266p<\322$\333;\370\030\031=x^\326\274\005\242\034\2744\237\030\274\3500\236\274\321g\033=\255\266(\275\246l\034\274$a4\275{pP=\270^7=\355/4=\257\360|\273\007%$\275O\360\014<!\336\313\274#\256\001\275\343\3457<!\377\007\274:\177K=\n\373\340<\217\336\\=\331u\256<\177\343\027=\215y\000\274b\016H\275q\n\267\274\354\346F<\306\'8\274.\363\004=\351\372K=\345Z\366\274n\225G\274(\nC\275B\327+=\r\302\252\274\374T5=\272w\360<i2\367\271\3339,\275W\034]<\"\315>=\361\272\005\275\215\004\206<\265\205^<}\023=\275\\\2551=\320C\243\274:\235\035\275r\350Z=\216\270B\273\215\207<=\217&\226\274\210fN\275\373\320\317;\353:I\273\341\003\024=G\236\305\274\275\375\270<q3+\275\036\277C=6y\322\274!\243\322<\324\356\371<V\rl\274\001<+;\251g2\275I_:=\"\t\000=\371zA\275rS\034=v\310\241\2731V\r=\26357<\327&_<,\213\303\274\272\224w<\177\247\232<\331\331\036\275\020\320\214\274\225\250\002<\312\032M\275\t\300\311:\003\345\231;b\305R=?\355\376:\026\375\206<\354(\314<\300Za<,\321J\273T\025l;\324YI\275\201:\367\274\253m\211\274\352\337+<X4?\272\342x.<N<6\275\230w\024\275tE>=i\\\033=yW\014=\261~\'\275.\203\177\274\332\243Z=\355z)\275w;\343<W\314V=\025\177A=)\274+=\276+Z=\204ED\275m\004\323\274\217B0<\316\317-\275\232n)\275\231\364\036=t\310@\275U@M=\rR\026<\254\272\364\273\177\034g\274E\\\022=\200\213F=9\312.=Z\243\032=&+\310\274\256\357D\275\317\2541<O\004\220\274{mH=L\337\310\273\026\260\027\274\266\3408\275\232kA\274\325\265C=\031&\222;>\237\026\275\320;Q=_=h\274\t&<<Q\363\207\274>]I\275+\023\031<\032i \2754K\313\273\n\036M\274\001\222R\275a\353\360\274fZ\225<`f\306\273D\037/\274!h\273\274L-a<\307:\014=\327\372\341\274\\\177\350;\225\n\001\275\t\000\220<[\207+\275\342\362\032\275\024W>=~\350\t\275\373e\347;\304\312\336\274\306\274\376\274\016\'j<\300\300D\275\025\376\341\273O(\312\274 \373x\274\217\330\010\275\300\374\245\274\272\212\233<\t4+\274\222\231Y=\251\000.<R\t\271<\027\344?\275\221\240\237\274\252\2464\275i\354\023=\255|\035\275;{\337\272#\256\320;\262\n\320<\263\035\362<\352_\231<\246\036O\272\010\002\310<\21454=ljP=y\021H=\254Z\271<;v4\275 &T\274\262\323R=\211\225\016\275\025\262+\275A\207\206<\256\0132\274\014I\245\273\227\224\245\274\213j\024=\032\273~\274\356\327\311;\306\\3\275\361\274\242;\245\300\322\273O!\035\274\207(\021=\240\322\233\274\226s\376\274\004\026\t\274M\203[=\214\272\320<M\254\376<\021Z3=\005\367*\275[\343H\275V\026\277;\200G\223\274\363k\274\274o\276\001=_`\207\274c\330\365<Tu\003<\212\017#\275\270\243v\274\372\022K=\000KQ<\314\"D="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2040
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2040
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
