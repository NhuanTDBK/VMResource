node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2090
          }
        }
        tensor_content: "\337,\311<1\006\363<\214G\253<mh\322<\256Y\033=\232\254G<\262\315\242\273Z\037*\275\272)E=t`+\274\014\027R\275\275w(\275x\325Q=s\276+\275\206uB=\013\034\273<+\365\301<\217e%<i\313M\275\376\215\341\274\223\313/\2757m\016<Ze\3749B\227*=\345\375L\275\276\nK\275\2517\277<Z6\356<2\314F\274\364p\030\275\253\002\372\273\254\202\303\274K7\326<\227\230\352\274H0%=\025?2<\023\2340<\030W\007\275\370&\020\275\242\300\234\274d\324\036\275\017n\016\275\225>\242<Y\276\027\274o\263\331;l\'\367;\236\177\320\274\023\032#={1?=\215\335\242:\036\230\330<\266{\201\273*\213@=\014\343\231;Q\247\201\274\364\311\035=\000\006\345;\311\3452=Ha\242<\200&3<2\201P\275~\272\037<\013\241|<\372\375\325\274\227G\231\274\\\370\355\274\275E\240;P\307\010\275k\235$<\000\030\244\272\216\214K<_\223;\274\354\357\222<H\344\206\273#\301!<\270<\361\274\345\000\t=\345v\254\274T\026a\274\373BB\274R0\036<Y\'O\275[\022)<\262\245\270\274\376\353\";AVP=\330/\006=[$\203:2\027\360<\006|R\275\020\235\263\272\t\2249=\225\250u<\3344R=x7\177\274\277\242K\275\221\221 \275X\303&=C\024\033\275\326\234D\275-$T<M\202:=\241\233-\275\312\3006\275\026\355j;\356UZ\275\212l)\273\204\354\233\274\362\364Y\275\035I\322\273\270\2265\275E~\367;\0077\206;\272\r\017\275\370\005E=\322B\214<\tk\021\274\216\306n<\312t9\275dB>=\276\205\276<\234_\361\274<Y\203\274\013]\313<\372\252\005<Jd\303<\346\300X\275l\017\014=\024\313\226\274\331a\006=\021\034;\275dV6\275\034n@\274Bn\306\273\255A\025\275\355\314F=\234\204\333<W\253)\275\350tW=\2011\234\273\244\002Z\274\037f\201:\260\333w\274\327\375\366\274\341\235\022\275\020o\033\275ByT\275\010GS=\330\371+=\274\276\034=\2036*\275\0032\251<\354\'\000\275\320\216t\274?\266\267\274\252v@\275)\006\254\274\021\252\256<z\035h\273G\014\336<:\341C<\3546U\275\003\035\226\274\352\243\005<\321\272\002=\324?\341\274\026\214\200<\021\025\212\2748\330\266<EK\"\275\315M\323\274{1\300<\365V6=\213[K\275\357D\035\275.b\202<<~==^\350\271<*\323\007\275\325\363F=\312u\241<1 5\275\244<\033\275\353WL\275\2314\004\275L\350\373<[ F\275\373\363\002\275\364\232\016=?N\210\274\3704!\2754\201\016=\'*j<d\256\206<\335\346?=\372\372\230\274L\331\257\273\336\266\202<\310\307\220;\010QF\275DC\264<J\2730<\030\254\252\274mPQ\275^u:=\275\332\254<Q\353k\274M\303P=\254\233\247\274\013\266o<u ,=*\0101<\'\365\274;\030\023\"=s\361\017\275\267\026\007<T\334\270\2746\324\004=c]\313\274pJ\244<\225\352\234<\332;\340<?\303\273<5\300\217;\023K\330<\200Z\006\273;9K\274\346\323&\275ny;\275p\224\255\273c+.\274\371q\274\274\t\307Z=\001K\357</(H<m%7\275\204\211\"\275:h\266; $%\274\341\346\t\275\273I\346<\321\345\364\274\341\036\346\274\341h\316\274%\267W<q\262\010\275\327\000$\272@\376\256<\'\301\n\275\264\344\324\274[<\250\274pv6\275\031m\220\274\344g>:\360\330\262\274,\326\274\274\331\312\r\275\244,$\275\036\234E\275\243<\222<\014\221\330<\235\233\352<\2540)\275\237\204\273<\311\324\232;\203\231*\274\232\377\345\273\337\322b8\376%\035=j\222\247<C2\232<\205Y\2719\240\321\231\272\305\273\216\274\034\271\245\271X\305\367<\353\356\036=N\245\333\274\327@\376\273K\367\025=\305\330\036\275\235\330\037\275\2035\350\273\016\337\242\274\221\022D=\263I\027=\032N==\330/C=W\243\025\275\021\r\254\274J\177\255\273WFS=\031\003e;\033\2752=\360Y\323;b\006\024=t\206\257<\017\027!:\261\325g<kM\214\2740\2744\275 \327\022=\010 >=v\004(\2757\231\023\274\333\034J<{\325\211<\247\330\346<s\273\277\274\rH\242\274\300\210C=Ex\016=\200\261\263\274l\243\350\274Z\246T=\326\243\207\274\177A\247\274\001I\226<\'J\221\274H\335\263\273\237\202\271<\017\227\300\274\260<\317<\212\335\363<=\353O\275!\257\016=hnJ=\037\035\226<\246\367\t\2732\245\244;E\234\023=\2125\004\273\301\024\275<\200\306\315\273Vz\230\274\313\314\327\274r[\024\275;(@<\316\334.=\\\327\007=\340\270\016\275Ly8\275\351c8=\223t\257<\205\021x<[\006\366<\244#U\275=\372%\273,\333X=\213\201\215\274k(\345\274\005\247\215<\'\364M=\021\313\304;\221\036\372\274\344{\006\275r\2278\274\006\366\332<8\266\252<\262\373\016\2744m?\274\241\2576<\260\252\225<\3610\322\274T\355\320\274\010\013\250\274Z\240\021\274;\356e\272\216\316)\275\377\tA=\'\267\305<\006\330B\275\341\201\242\274\365\212\374;L\005S\275\255\256\261\274\213\351\236;|e\277;M\252/\274\204\3056\275\"5(=K\302X\274\013.\345<\237\021\260\270\310dM\275`\t\000\275\363q\332<\262~\275\274\243\003\020=5\244\327<\243\021W=\301K\257\274\227\317\010=\244\310\023\275_\257\320\274\017\264\177\273\242\307/\275f\032M\275I\'\014\275\004Ob\2746S\340<\331\010O<\263\275\256\274\272b\004\275\347\336\220<6\3414\275\200\372\274:E\376\303\274\3448\014\275\221\033O\275\347\357\265\274\246g\t\275-\233X\275\370\315!<\321*\007=!\221\354\274K\343m<\265@.\275\025\t\247\273\335\341\036\275\247\n\034=\376\201\031=k8\025\274\357\326\244<\335\367\016\275 \331 <\236\306\205\274\031\325\365\273N\235\036=r\251\373;\317\336D\275\371_\355\274\'\033=\275\362B\277;\252\266.=\026 \364\273\013\243E\273\330\002\362<\2609\374<\\\014/=\365\035Y=\374e%\275n\354\027\275&\353\273<\"\275\034\274;\213\360\274f\250\275\272\267\205\021\274\327q%<G\3621\273\321B\355<\254S\353<\240\224\350;\330c;<\"\323\224\274\227S\225\274\026y1\275\270\004\352\274\177[\257<;\240\262;!\367\224\273\006\226B= i\205\274\037\232)=\276\036X:\327D\313\274\362<\204<LT\202<\200\367;\275&\277>\272k\277I\274\323c\267<}~$\275\247\2712\275)\340\026=N\366\316<\335\002\036\274:f\016\275\350@\027\274\242_\242<H\r\246<\005\220\032\274\341D\366\274\343\017B=\365\371\345<\334\033\002\275re\257\274$\245\013=\266\206\311\274cAP\275\370\337\315;\033*\031\275\225\355\267\274\326(1=\031G*=-\254\007\275\022\3742=\375\276_<\265DX<.\305\017=\260P\336\274\307\177\024=X%\216<\366\224(\275\204yX=\263\235==}?\366<\234\350\256\274\313\014T=\030\204p\273\334\2716\275\234B9\275\036F\373:\216\'\212\273\357g];\253\316\"\274N\237\346\274\311\372\034\274\354]!\275*J\317<\356\3367=\273\356;<\335_\211\274]\345\367\274\210\024\224\274\323\222\r<a\236\331\274\302\345\037=\305SB\275u[>\275\242W\272<\010\357G\275\003\275\357\274\037\0210=\033R\272\272%\212r<\014\367\027=\202%#\275\361\021\355<\343\365\304\274\353\304\314\274\177\2635\274\373Z\237<v?\250\274j\0166\274\177\245\263<=\325C=\"o\031=\277\315\210\2739{\231<\314\023\275\274\202hv<(\256\'=\253\373\"=\n?\271<\005\374\330\274\244#\256;*\313B=z\2054\274\226\215P\275\217\206V\2737K\306\274O\2051=u\032B=\177_\374\274\253\013\225\274\362|\303\273n\372)\274\323\241u\274\036\211\227;9]\237<S\246I\273\317\265\263\274\365\251\370<\353\257h\274\2372\t=\037[\276\274\360E.\273\315\006\016=\261\320\007=\027\3510=\332\354\344\274r\2709\275s\317\233;\014\331}\274\336c\006\275\231[)=\314\213}\273O\2228\275\004\361\006<:\327#<c\272O\275\202\226\005\275\006N0\273\240e|\274\353\255R\274\231\277\317<\002\337\016\274G\305>\275\322\3044=\003?\316\274\324\2055=m\215\241<g\2426\273\000\351\004=<\341N\2759^p;\207\203\251<W(<=\325<\025\275\333m\201:K\177I=\331\225\177\274\002\352b;\246\226E<\313\377\005\273\001\214\246<\346\025\033\274\270\342[<w9\036\275\215V)<OU\r=\247\2228=\342|\021=i8\376<\021\331g<\2538b;$\275@\275\375\303\003\275\326\275\344\274\271\342\231\274\363\302\206<\247\030\211\273\022\277%=\365\004\234\272\215oR<\326\202+\275\267\246;\275nC2=\007\332k<\275\377\t\275\310\335\223\274\333\343;\274\022|P=\302\357\340\2749\351)\275\024\205\374<\311H\250\273-\365\242<|\346\022\275p\310<=\254\026\276\273q:\372\274cs\217\273\245l\250;\300\311J=\264\'\301<g)\361\274xA\234<)\177\t<A\315?=\230_D\2755\365G=\260l\353\274\237\274\315<0\215\217:\357h\323\274\227\262\315<\322\313B\274\312\027\226:\340t!\275\250\340\304\273\351\362@<F\037-=.\260\203\274\032\272,\275\206\t\272\274\267\371\365<\027\030-=\347\355\260\273\002\350\246<\026\312\251<C\004\365\271\317\017\025=\263\376\037<\221\226\363\274\201\214\341;Wj\347\274v\353\212\2748D\251\274\372X\335\2749\256I\275\3257\n\275UDB=\252\235\027\275\275\353\253\274\327e\000\274D\377\022=M\324J\275\263\237:=kD:\275\317\221\365\274\343\341\356\272+\033\243<\374\370\371\274z|A<e:J=$&9=\343\256V<\301\\\225<*\261q;\017\260\034=\261{\326\2744:E=\307\301\261\274\211M\212;\277R\234\274\263\207\371\274y\302\251\273\n\270L\2750.\317<\205D9=}\245\203</\347P=\032\034X=5]@=\025=\245\273\266\274\r<=\300\263<i<\354\274\343\324\005\275ia\007=\202xq\273vb\346<MM\017\275\242\250I=\310\316(=\277.\346\274T\227\013<\204\003\235;\023\3425\275\275\2178\275\350\337\200;\370\317\257\274!\200.=\007s\312\274\317\203\264\274&\340\033=3\3335=\346\216\235\274/s\035=\345\016L=\333\177\270\273=\303\224<\361d,=m\206\026\274\351\262*\274\214\232#\275cV\024\274\310-\261<H\3203\275Q&\010=\007\360e<\363\300\024=\t\213\037=+G0=\013\361P\275~\026D\275\332\022\205<\377\225@\274\013\304\256<Ck\'\275\003@\213\274Q\222_<\373\022\037=\3605@=O\3001<\323\345%=\317~+\275f\360\366<;\236:=\314\004\021<\211\327)=\264\2557=\330_\030\273\003\032\254\273\307w\363\274\"{\022=E\255\036=\333\271\031=_\205\316<\177j\"=\302\246\352;x\2368\273Ia\344\274\321.E=T`T=\267\024\035\275x,A=R\032D\275\271J\213<\213\177\031\274A\032\260<w\316\010\275\313`H\273,\033\203\274h\3100\275\001\0042=\343r\330<\r\367\207<n\261G\273\261\264\037\274i\202R;\301{\026=^\327\021=V\317k<\221(\035=\264j\301<\020\"(\275\205\326\205\274g\303\304\274}\326_<0<-\275\"\226\005=`\315\323<\272\n,\275\321\301S\274\373\264B=n\314E=\214\220d\274\306\221\036=\223\271\234\274\316](=\355_\337<\270\033\"\275|ma\274\256U\273;\257\245\034<\rG\242<9\351D\274\206\327\004\275\365l~\274\037h\343\274\337\302<=\206\255_\274\247\375\225<\033\206\006\275(\314\024\275\225\023^\273E\023\004\275\010\203\030\2758l\344<\257\274\340\274\006\303\000<\360\324\333\272\231\017\207\274dv)<\214\273\r\273?\344\261\274\"\312(\275*m2\275\214c@=\\g;=X\261\025;N\035\360<\365E\263<:|\211<\022\252\177\273R\013\017\275\343\265\200\274\275\376\r\275\n\275M\275\2346\312<;\257>\273\336*\036\274\342M3\274hk\251;\363\266*<3c\351<P\264i\273\234\322\032\274e\302\203<z\312\013\275|\347\220<DH1\275\245R\367\273\020\323\t\275\220v\365<\230*\377\274\247f\313\273\355\233C=iQ\007\274m\372Q=\325B\271<\277\362y\274KKt<\3539\025=\356\202\t\274\346\217\026=7\343\r\275\332\t5=ZLX\274\214\264&=\367\022\203<\244G!\275\231\031\255\274\224\010\031\275\016e,=\372\366\317\274\320\327\303<9,\245<\256\366\202\2731\276\"=\235V\031\275\276\251\304\274j\010\020\275\317\211\230\274;\231Q\275\305\006\300\273\321\304X=\277\267\333:\200\367\247<\004\207\036=Tb\007=\030Y\377\274\230\032\020\275\016\020\002\275\002\357\t\275E\374,=M\3065=\307\014<\275\231\302K<\276v =\274i\204<<\007\305\274\250\324 \275aN*\275d\374s;\020\"W\2745|h\274%\341\013=\207P\227<h\361\275<\004.\212\273\371\363\030\275\004>\315<\276\260,=\237l\363\274\333\357^;\256\\\t\275~\000\302<\023O\016\275|\255B\275\300\353*\274\026/\354<2y\340\274@\016\t=\205\3678\275p\010Y=G+\201<\204\324\016\275\030\271\253\274\np\006=\302\262>\275\303\300H=\363q\000\275\322\256>\275\217OR<I\326\226<\276\213{\273\023\245<\275\026\254\331<\032\333\014<$\\A\274\301T\372\274\034\005\227<\353\341\312\274\213\376\246\274\352\'\231\274\033\216z\274qT\210\274su4\2756Bz\274\261(6\274e\260\023\275\"\233n<5\225\254\274\234\266\030<\310\245\223\273\007\346M\274\240\301\265<\237\337\311\274\264\210\357;\352\2073\275\221\235H<\312\232\360<\253\3629\275#,\273\274\225\243\265<M38=\213\323,\274\350\240\327<\346\027$\275\006\314\037<\234` \274\3424B=t^\306<\336\257\032=DH\004=\'f\010\27549)=-\230\240<\277\322\241<\265#\033=\232H\324\274.\305\255<\342\212n<t\225v\274\362D\031\275>z\030=\010t1=]\314\350\274\366;\376<\373\255\030\274m\243\000=\037D\211<\221\362\233<\241\243\257\274 \257\354<\216%\005\275c-\026=\372\356\237\272\204\333\325<\220Lw\274\350\3427\275\301\030\000=J\025\204;\023U\326\274\023\014\311\2749~\215<{\000\271<>\356K=\244\343E\275n\355\203<\220\227\322;[:M\275\3229\261;\005\357\035<\234\273\014=\247q\365\272\355\337\273<\nZ9=\364y\r\2753\3716=d\303H;u\362\035\275a3\017=\357UQ;!5\241<\3569{\274\367\270\004<\231v\324<\n?<\275w\206\000=\331R)\274\315\225\324\274\325e3\275\347\214I=`\364.\275/p\274<\257\224W\27560?=\016HT\275\032\226\273\274\032\272#\275r\256V\274\3360\200\274E\036\242;\r\313\327<\233\036\320\273\024\2367\275lJ]<\004{X=\237%\2249^\304a<\207\370\221\274\374_\307\274\331\\\346\273YF\251\273:b\244\274\370\377\004\275P>&=\003\225\366\274\366%\225\274T\362\357\274\327\265A\275\341\226\343<\306zN\275\247\343\010\274 \3044\27509\274;S^\302;\364\240C=\0309\226\273\026W\236<\356\234\352<\347\202\345<\225\300\023=c\207\376<\022\236\204\274\\\251\333<MhI=Y%\314\274\ng\327;\366\021s<\252\267\005\275&\2061\274\216\022C\275\353\326\320\273\026zI\275.\023\026=\213\350Y\275\372\250\232\273\357\003\367\273\036\257\376\274g\222\220<\'\370Y<j\335\264\273\021\3228\275*\225\310\272v;\256\273\306\010\354\274u\331\005\2751\035\005<)\341\006\274?\224\343\274\275.\000=\310#\234\274\344}\003<=\004\243:k\276\337<\254\255%\275\275\332w</8\022=\303wG\275s\2257\275w#\031=\014\253G\275g\341\034=\276A\306<\372K\021=\3322\256\274\330\240\007\275\311 \344;Z34=\235[\017\275\314G+\274\035H\233<\352\026n<\237\251@\275,CR\275\372\264\n\274r\331)=RK4=\003\310\"=G\216\330\273\221w\235<\340\352\314;<XP;4T\201\274C\366\277\274ntF<\200\340\320;\361\261\031=\325zV=-\377\037=\320\245\204\274OH\037\274\230\200\315\272\344Z\035=\240\3714=\217\022\245<ZB\006<\373F\037=q\354/=\235\237\345\274\321Y5\275]\004\315\273\236\2361\275\343\2664=\220\000\306<\262\031g<d>\364\274\024\251A=\203\314\351\273\263\264\031\275,+\000\275\355f\265\2740\003{<\301WO=\331@\'\275\000\315\373:y\004\353\274\356\036N<?\210\260\274\335\000\023=\177\224\026\275\'\216S\274\374\"\010=\016UV\274\363\306\000<c\243!=\373\377#\274\351r\031<1\317\274<\271\'\214<|\204\267;\030~\t\274\273\021 \275M>\205:nA\021\275\276z\232\274\250H\270\274\207\253X\274\237\342R\275\004O\224\274\277?E=}O%\273U\213\032\2743}\346\274\262\326\342\272X7\231<\331\313{;\230\233O=\001\336=<[\214\256<I\302Y=\010\271,<j\010S\274\237\365?\272\275\220^\274\000?s<\261\375)\275\026&\213\274|?\244\274\022\367\366<`\356\026\275\335\240\237<\264\000\r<\241\3335\275\304/f\271\2478=\275\371\2634<\251\217F=j\373\367<\237\\S=\362\312\004\275~\301\215\274\332\256\036=\220\343\223<\t\r\205:\347;\302\274\361\204T\275O\'\320\274m\206*\275\314|L\275F\351@\275]\006Z\275b0f<|A$\275\344/U\272\341\352\245\273_\332\030\274\341rS\275p\267\326<\355\305\340\273n)\235;B\002J=QM\240\267\033\220\373\274\014%\032=I\205W<\032@\037\275\273\256\351\273=\014M<\315S\267;x\374T\275\317\333I=\345E\232\274\306\372\353<\n\275\212<!\236B\275\262\225^<\257D\313<\265\210\325\274\020\031\224<\334=\345<\251@H=n\274U<\260?\215<`\013\036={p\316\274\313\263L\273\353=\243\274\257e\016\275Q\003\033=w\027s<\335\035\227\274\354\226\306\2724\271\236<N\244\007\275W\370\345\274\365\357\263<\202\266*=\216\337M=2\3663\275\304\221\t\274\265\014\214\274C\347D=k\237\372<x*\223\274\347\3471=\356\214\345;\203\250Q\275-V4<\203(\333\274Z\364\034=\342\2579\275\376i\345\274\200\256\036;\306\"3=\273\3044\275\022\376,\275\006\254i\274\0264\346;\356\211\275<.Q\033\273~\267\316\273\2078\257<\270p5=\371\227\214;8*\026=\257\210\244\274W\215P=\265\2366\275 \353\020=u\"G\273@\310H\274\372\210\214;K\tH<d\243J=*\'G\275W;\316<\220\341\t=\242\330(=\344\265,=m\220\231<\336\314\375<`\"\244<mP\027=\\\225\342\273\374\017\004\275\005>\004=\266\000\352\273\332\0255\275@dK=mA%\275\244+\202<\\\256\302<\026\003N\275\026oW\273\020\206\017<7\203\340<6\231%\275\333\267<\275a|\023\275[\252\351<\301\3043\275\317\202\243\272\317\274\357\274\231\351Y\273\002\344!=MA\234\274XD\273\274\241\207\013\275\256\203\267; L\367<3\"\264\274\210\252\200<\310\211@\275~\362\236<\260:\":\000)v\274\024\r\036\275\035/J=.\003V=\241\367\311<-\"\302<V\323\257\274\010Tu\274\260x8=\367\372*=\026\205\237:\\\204\374<\253\036\344\274\233\271\316<\"\276U=\231\302\312\274\003Z\024\274\274a\201<\025\335\246<\306\036\037=\271\222R\275\022\016\006\274\207P\252<\260\373\022=q\000N\275\320@9\275\363W\250;O^\263\274W\250N=\264\251\002=\207\177\236\273\022K}<\tO]<R\0376=\001\226\t\275\231\365\370\273\305C8=\023\034\004\275l\276\007;Z#5=c\334\017\275\245\200M\275s\300\255\274\000T\257\273\375\307\347\274K\013\362\274\2234\273<x\003\320<\3775\004\274\265\332\030=z\2463=E\002b\273\363\243\"\274+\031~<\206=g\2747\273\n=\2328\017=u5R\274y\034\200<\032\331\";u\177\033=\032\3170<pMV\275\247\217\215<\255\035\235:M\354\244\273\304!\224\274\336\3070\274/\334\223\274*N1<\217S\374\274\023\253Q=\006\362q\271\261\312\270\274&1Y\275\002\205\304;\022\2560\275D\026\342\274\300\343M\275\216b4=\224\214-=\224\026@=r*\006=\351Hb\274hO\"<.\277\032<W\251\230\274!\002#\275u\206D\275[4Q=\224\\\262\274\342\0240=\251\262\211\274\304_\024\275*\330\260<\220\207\313<\275\264\271:\320\3364\2716Y\205<\304\251\252\274LK\306<\357\307\365\274\227\357j<$\356<=\333I\370<Y\343\002=%=\007=\356\366\200\273[\312\n\275=\346/\275o\232\276<\304F\'\274c\207\036\275\00799<dq\027=H)\024<\240n\026<\344\213\360<b\371\374;\0000q\274p\177\333;\026MQ\275\2220\344<Z\337#=\374\037\363\274B\337\233<s\026\215<\277\370#=\332^\001=6\230\325<s\343\003=\222\361$\275v\347-\275\326\237I=\253\237\005<\\a\036=\2641\033\274\213\362N\274\257-4\273\2774K\275\035\255a\274\034\202\274\274\244\000X\275\tC/\275\372G\024\274\321\201\214<\250\212\037<|DL=\302]$=\366\030\324\274R7\250<\203\366\226;\276\t\024=E\334 \275\327\204k<z\377&\274\274\225\211:\256\247M=\224\\\203\273\035\257\035\275\017T\005=\212\342X\275#uI\273f\354,\275\377\326\310<\2751\260<\344\241\207\274\357\340\320\274b\304\227\274\360\373\025\275@\005\324\274\320\214L\275a\320\265;k\2038<\371\267\304<\223\306\037\275V\325\322<\026\2252<\350\0166=\263i\002<W\232\334\274]\332\024=&\311\006=\352\355R=\367\007\241\274d\345\330<\350:\271\274\312I\205<\031j\326\274BN\334\274\317\367\036=\346UK\275(1\'\275\226C\271\274\301\220\354<\340[\231\274u\214\360\274,y\204\274\220\314/\274\333\211\010=\266P\243\274D\200O\275\366\325\217;Y\017\002\272\254\377\014=\202e\361<\367\243\362\274F,\035<\273o4\275\373\2758\273\311x\212\271D\017A\274Q\266\032\275\245\002\335<?\307\002=D\202\024=\256,/=HC?;\201j<<\t\261\312;^\210\006=wK\311\274\336\226\341\274\326\000\360\274\314P\022=G\306\370\273\352\206\317<\276?\234\274[^#\275\320\2026<\276\220\320\274\3607\341<\3075K=L7!\275k\233<<\001u\364\274z2_\274|\217\t\274\335\275\373<%\026\010\274\306\000/\275\004\026\'=\025\361<\275\270\354\020\275\221\000\370<\2608\217< n\314\273w\003\002=1\376\325<\txF=\002T\211<\037\313\'=R]\300<B\357\035=x\203\242:c3\200\274\032b\314\273\332\243\031=\035!\014=m\375\r\274\001`\017=\221\234\251<\267\014+\275\352\307\013=\363Z\325\2740^\312\274\363^G=]\316*;\326\243\201<\3660\032\275jrH\275A\325#\275\2361\217\274UjM<\335D\275\274;\245/\274\262\2734=\024\254\006\275+\201Z\275\277e\243\274\3242\002\275\201?;\275k+\230\273}\225-\275\262\324.<`\312%=k\030=\275\224\254\022\274sgQ\274\277\\N\274\304\0338\275\003\324E=\211.Q=h\006\035=D\266\037=9\264\231<\317\222\013;\323)\272\274%\032\370\274\341\2640\274\037\'\313<\320\202\277\274\324\274\r=\211\277\007\274m\027<<\327\n\365\274(\217;\275qyX=F\205L\274\217\3708=\272W\262\2744\343\017\275\234a\247<\245f\333<\325!==\325\035\321<\215\344\263\274\243\306\030\275\025\201\216<3\240\224\274\330\365\033\275\031\273\231<b\375b\273*e]<U=\002\273\255\230\313\274\227i4\275\021]t\273\\\t\335;\024,\375\274<\356\322\274gq5\275\003\361\341\274L\220&\274\346\316\t=\212}\302\271ec\247\274\360\341\336\274\362\247\353\274\030\003\001=e\036\351<\234^\031\275=\260\360\274\274L\302<\250\261Z<\201\342\030\275\222\247+\274\247\245\262\274\210\337\001=Yc\241\274\274\311\372\274\202\341\212\274\320\204\340\274\240\021O\275\302\226\377<$\017\002\275\252\267\256\274\327\334.\273y7\364<\277\272R\274C2\323\274\355\214\n\275\354, \275\341:V<K\204(\274\374/\n\275\311v\334<\007\355\200\273]\206?\275\031\277\255<\027E\277\274\373\246\030=\216@\341<\231\271J\275\361\362\022=\212\326\004=bT\277<\317\013\010=\\\364\201<\217\r\366<,\234\033\275]\373i<\376\027\204\274\264y0=\213\3250=O\271T=\243\256\241\274^\221\363\274gc\256\274T\276O<\024\036#=rP(\275/\365\001=\233\213:\274\001\213K\274_\344\n\275S\306:=r\335*\275\341\254M\275] &<\341\354S=mW\032=r\277\353<\226\253\033\275\342~\003=yj\r=\010\240\022=\343[\375<\202\317\224<\275h\r\275\030\364\307<\316\'J\273p\032B\273\240\000m;\032\244\274\273\314P\252<\214\002\r\275\"\177\232\274\304\314\325<\335(\243\274{x\034\275\301\263\016\275\326\221\246\274\r\312!\272\362\006!=uY5\275\230\017\273<j\237\367;\234{\260\274E\020\305\274\221\32109R\007\325\274\262\016\320\2734\254\010\274f\264\242<\225x\356\274\026.\263<\267\370)=B\313\n=\256\234\242;B\013\034<k]\230<\217\331\n=w}=\275\226@\032\275\357\221\253<\301\240+\274\023\350\342\274\033\034\364\273\006P\234\274R\n\261\273\203\027\261<\005A\010=\2137\313<\321\'5=\337S\231;\3546\342\274j\230*=\304{W= \3369=\215\2364<09G\275\254<\035=o\300\362;\272\033\025\275T\356O\273\021\246*\274\312Q\017\275\224\227\256<\372\027\316\274\274t!\275b\250)\275\226\024X=O7\'=@}P<\031\241\013=\322\237.\274@\207\321\272\244\365D\275\006\355*=\216\211\010\275;D,=d\324e\273\022sN=<3f<t\264-= .g\274MW\233\274\347\353F\273\234f5\2757\2532=M\347?=\276q#=\n\263$\273\355\004\240\274\367T\221\272\372\307;\275\276w\r=OZ\303\274\025C\325<\273\002u\274\017dH\275K \007\275\272\2535=m\031P=\265\220\267<\377\000\004=_\361\305<\275W\340\273$1\016=\202\375)=\337\232/=\317\177\000\2740\177\331\273YT\376\274\2565\207<{\345F=\316\017\226<\216\013H\275rB,=\033\027X\275\265\230\306<\307\300[\274\r\2230\275\021\314\006\274\321A\010\275\244\250\276\274h\323\377<\236\"#\275b\227\021=\2250\020\275\014\360\323;\226\355\322;\343\301\005=\2766\254;\337\326\014\275\232\365\217\272\263{\246<\236\376>\273\307\314/=\263&\'\275\315\036\220<\343\344C=\001\231P=\350-\022=\275-.\274\333p\250<\263\030F\275!l/\274\357=\n:\317A\035=E\001\317\274\370\323\037\275<\260L=\271~\251;\365\346<<t\261G<\r\016\312\274\301 V\275\204\335\037<\337rR\273Y\205\260<\006&N\274\026\037\265<9\246\007=\316\325$\275\345\026F\274\323G*=\3270\325\274\'\005\034:M\n\330\274$\274\366<\233iJ=x\224\265\274\032@F\274\315\345\333<I\325V<\2218\264<\364F\220<\375\353\035\275\306\246\216;\006\374h<\027\3656\275\273S9=\374\350\006=\247\366\007\275\351]6=\335\250\024\275\2733\"=\255\214)=\232\0143\2757(\341\2735z\222\274:\230\'=c\243u\274\373\313?==\006L\275\022\277\260\274\365OM\273\317f\022\275\244\313\002\275\255\225\266;\340\022V=\311\2249=\2432\030\275+\271\251\273\217\216\354<\251\017\0018\254\335\342\274\251s7\275\035D!\275S\231\261\274\330\352\351<\302_[\274Du\215<\265\005\005\274\363\317\345\274\331\352\031\275\265OO=\317m\352\273!\020k\274\t\257\355<\356A\256<\262\237L=-J\233<\200\223\343\274\256\246v<d\3332\2753\213\030\2758\374\212:!\377X\274\321\210\002=\"4\373\274\301>\335\274\360\3460\275H\372==u\2407=|Y;<V\211\'\275i\217L=\2711\307\274V*\302<\2070\t=\016\324\373<\266\214\004\275\260\300\202<\025\343\202\274\366\217\016;\320\221O\274\224\337\325;_3\016\275Z\335*\275\256TT=\227\330\0319\322d\206<\331\365\321\274\004\242\013\275R\213\026\275\215\220\016\274\2144\203<z\226\231\274P\220i\274A\3751=\277\330\351:\311\2550\275\333R\344\274\267H\275;\241K\035\275=\347\306<kb\035<\021\030\010=O(3;\324\032n:\017\221\021=\324e8=\3521\036=6\357\324<O\200\250\274r\036\342<F\373\316<\254uK=`\203\364<+\217\240;O\272W<\020\262\361\274Ok\034=\245N\001=\344>\231\274Y\017D\275\361\030X=\237\2268=\224gk<\266\332\217<\373\006\234<\352H\'=\331\2408=\211\025\177<\2521\331<\253\347\r\275$C-=Mj.=>\027&\275,\233(\275H$Z=j2\r=\307m\025=2\0001\275[\306\253<\362\2067\275\017}\367<\260\346\303\2748>\313\273\337\313\020\275\2735!=\237\261\003=\227\203V=\324\261\030\275\351\275Q=\362g\351<\013i)\275\217\016%=\024\245,=\210\3125=6\342\232\274\342>1\275X\255\342\274\022\252e\274\246\235\336<\363\244\342<\373\337X=\263a\007<\026\000K\274\020\rC\274\302\177\364\274\344\260\231<\334&\023\275/bS\275x`\223<5Y&=Z<Q\273\242\017\010=\023/\'\274<\3531<}\336\035=P\370\010\274\255\306Z=\320\036\251<\016\204\271\266\013{&=p7A\275m\257\020=\004\202\244\273Y\261\313\274*\250\355\274\243\323C\275\242\207\031=p\344A=\271a\231\274u\344\020\275\276)\324<\311\242\301<\216\010\245<l\341I\274\373b%\275_\266\322\274\202dE=\2475C=\346\007\027\275(\034\030=\300\264D=<\375\234<\\\025R=\320]*=\2171\250<\214\023\237<\216.\300\274{\252\022\275\347\021\311\274\032\031\021<\220\355%=\260g\027\275\177\310t<#U\206<J+\005<x\367\027=\221\242p\2746]\004\272\213\254Q\2757J&\275F\017\016=)\204j\273\326@\251\274\375\007\223<(f\270<\273c\026=\352D\342<\376\0260\274\'\202;<\324S\r=\201\010N=\n\';\275h\243\237\274<\373\006\275\267\306\206\274,D\250<\311*E\274r\036\035=\024=\311\274\232<5\275\275\021R=.2\032=>$\233<Rd\251<\030\226$=/\245G<\306\244\224<*\036<=\034\307\250\274,eW9K\3307\274\227\325\377\274\354B\270<X\352\357<\347\227n<\023\340\363\274\270\266\r<~^\r=\270\355\211<\245X\013\275\335\\\202\274\024\2677\275\265\244\343\274\234\355H\275Z\317\334<9\3444=QhB\275\323\216\202<KwM\275|\2055=\006N\221<\275s\r=\374\202)\275\254~\202\272\337\227\005=\261W\325\274xdO=\014\367\237<\314\224:\275\354\243\020=%F\373;\262CZ=];\005\273L\201]\274\\\243\017=\334\360@\275\375dA=\336[N\274\324BE=\270\316Z=W\272#=\233^\302\274\351\013\232<\335\273\024;\317\200\331<B\323\323<\006\010\376:\016\000@\275\230\265\255<\263\316\r=\032\004\316;\021\254c\273V\004\336\274\326t)=K\366N\275zo4=\263+\337\274\270\320$=\245\236\371<\244\314&\275\237gF\275@\007\274<\253r\r\275\316B-=\231\225\374<\342\243\340<H\230#;\323\207)=]l\246<\341; =?n\036=\203\214\003\275\213e\027=\223\253\371\274y\367\034=\252\330I<o\345\220;\177\251F\274\026\035O=\242\361\002\275o\213\307\274\361 L=q\242\356<\247\311\022\2754\030\255<\r\003\330\272:,X\275\310\022,=\262];=\302\351\"\275\233\243%=\210A\267<\307pM\273\037 \331\2730\326\312\274\362\377\003\274z1Q\273\3707F\275\210\371\217\274\225\330\320<\361E\220\274\270\203\013=\323\3501\275\322c\035\275\303\306\033=f\315\351<\207\336X=\205\000\370\274:\242\375<\266\324\025;\002Xl\274*)?\274%\2566=\001\024\376<\277_(<\276\346\220\274~\\\257\274\326\203/=P\360\250<\372\274/\275|\241<\274>\312M\275;\256\031=\255:\002\275]\213\252\274\213\253M=\370\371\204\273\3763\\\274\034\035)<\271\365W=\212?h<\032q\027\275\001\334\236<\tn\212<\337\020\013=\362\211\003=\331\265?\275\270\203!\275\267\222\031\275GbJ=\255\367\275\274\267\024\023\275\227yX\275N\325\267;]\264\200\274\006\224W\274K\376\216;\211\340T=\273\321L<\326\276\227\274\367\252F\275\307\362#=\355\300\306\274\227\326\t\275\300w8\2759\003\311\274,\203\230<\264c\t\275\004\301T\275\324h\014\275\n\375\200;\355\206$\275\327\201\332\274_\215,=\352\312\374<\371-\232\274\251\322\367\274%\001\310\273C\236K\275\025\241\027;bDY=\027\341+\275\215B\311;X[\300<\002\344 =9+\035<\262\330Y\275*5\'= \363\324<\007\324V\274\221\'\356\274\2212\177<w\231\227<\276\346\346\273B\265,;\344vg<`\3064\274R\376 =\306\204\177\274ug+<;\313B\273\274\273\264\274hj\024=\017\005X\275{\026\022\275N\375\016\273\220\321U\275\341<\007=\305o5\275\203 .<b\207\266\274\331\314\301<\002\360{\274\300\242\200\274:\362\361\274\270\177\252\274\313-2<P\256\211\274\006<\375\274`Y\024=\266WK\275\220\024I=\017\"=\274\001\022\\\272\347M\234\274\325O\331;\203\267\275\274\366\020K\274\261R\327<\'\323\267\274\030\364\273\272Sp\361<X\376@=\257\254R<\240Q\326<\2164R\275U\207\256\274;\363\t=\006\014\333\274\\v*=\031G\326< e\357\273\031C\205\272\036\3568<\301t<=!\037\317;\322\2021\275i\343\021\275\361\256\226\274C\370X\275\232\335K\274\243\374\374\272$\340/=_aE\275\330\335\242<,\351\365<\314\206O\274\250\217I<;i\005<\271\013\372\274\021\2175<\323\213\204<\341\317\222<5\003\376:\034\336I\275\356\314>\275\325sV=@(2\275H!0=\027dH=\003\201\n\275\262\256-=\177p\036\275\300d\310;\033OJ\275(J\307<_\000%=P\021J\275B\371\270<\367_Q\275\336\367\005\275y\336\353<\025\354:9\023\321#\275\341\253\257;I\202\033=\240\262/=B\025\024=\325\006\313\273\374\212\204;1\210+\275\'\0378<\355\207L=\237\226?=\251I%\275<\373\010\274\274l\277<\"\204\337\274AV\300\274\315S\030=\220\353\227<.\263\210<\025\274\265:J@M\275$\326\033=\325\2257=\"/\"\275\026\372\266<\244\373L=\260t;\274\026\026/\274\321NP=jdG=\321\251\257<n\253\017=\227\177\264<\'\321X\275R\330\333\273\274\204Z;\261\355\300\2743\023\016<$\226@\275\367\335X;\207w\213<.\311\010=\007\254\214;\311\350G\275\266\237\037<^N\212<\274_\000\275\335\273\200\274\243o\316\274\024\321\001=\232\233\025<\271\302\223\274L\0020=\246fL=\304\2447\273Ws\372<\262K5\275$\374\205\274N\350\353\273\243\351j<\342\264\201<\367\250\023<~\007,\275\273\222)< \300B\274\327\0109\275\222\0014\275\353\352`<\310\026-:Ae/\275|5\r\275vVR\275e\216>\275\004\365S\275\375G\331\274\t\255Z=z\370\226<\311\261D\275s\"$\275\274\n\376\274\221\202\021=\203\3050\275\"5\343\274dn\275<7c\227;@\2534=\357\336\217<\025\341u\273\262\261\034\275\007^W\274\350\353\026=\031NA<\335\360\017\275\377\200(=%4\206;R\366J<\304\307$\275\353\311\220;\261\277\362\274j\3349=V\270&\274?HM\275\333\332\021=I!\201\274\337\'4\275/k9=!\276S\275P\232Z=\313\327N\275k\177\002\275\026\237\302<\264\313\370<\243V\344<\242\376\t<\221\351S=\244P\036\274eBc<\215\254\224<D\023\214<B\253 \275\022\024u<\212\302\261\273\343k\r\275}\"\270\274D\240Y\275\247\370\346<o\332T=$p\350\271\026\261$\275\364\216I\275\326S0=kdO\275G\000(\275\036\265\340\274B\300\266;\230.\014\273\234w\003\275\364\223\271\274a>\202<Q\375I=wJ\025\275S^M\275\2743\021=uP\305<\372\245\016\275\214\352\304<\343!\205\273S\022\315\274\360>\204<_\262u\274b{L\275\200\213\243\274\347\216a<3\303\210\274\276\262\357\274ro \275 \002;=\307#!\274\033\017\332;C\013\026\274`k\021\275z\017N\2759i\005\275\355H\357<\242RA;\020k-<\027<z\272#\"\337\274\211\362_<W0\320<\216\276\372\274\317\303(\274\344\022\034\275<t\025\275\200\014$=\342\346\377<R\371H\275\366\355O\274Y\250=<\225\235\251\273\332o\\<\242\327G\275\tp\300\274D\250\304<\032B\211\274f\356z\274r\2764=\301\3570\275\001\025H\274\327\001+=\377\335/<h\216\006<\235\222\024\275\300\221\017\2755UX=\242\371\023\275\261\n =\267e\'=@\213\026\275\235\337]\274\273\025\302<\274C:=\274\202\274\274Y&!\275a0H=\212\020\360<\246-\031\275\206(:\275k\331\236<\253$\217\274&\337[<\311B#\2755\tJ=d\004\241\274\2341.=\320|!=\r\203\251<\322eV\275\225\350D=:T>=\013\326\360\274\331\260=;\266\\\320<\224-\003\275\335\221\025=iC\032\275\331\033J=0\255H\273\373\006S;\005O\372\274\347\021A\275F\310i\273\256\210\226<\340\370\'<1z\033\275|=C<\300\231$=\341\004\273\274\212\337j\274{o\313<\264\256\036\273\025\344D=\345Y\251\274\361\263\361\273 \326\344\274\224\2649<\376\303V=\217#\"\275\202\345\243\274\330\237\037;-\341>=\356\352$\271\3733\213<\317\302\t=4\256\357<$\330]<\351\026\022\275h\301 <z\006\017\275[m\305\273\0247\240<8\360;\275\242\"\203\272l\266\327<C4\325\274)\345\351\274\032\2204\274\242\263\250;\227)*=\377\0372\275\025!@=7]\230\274\320H\337\273\340\343\333\274D\272\004\275\271>\252\274q\213K=\365\370T=\026\2717\275\3534N=]*\271\274r\006+\275\320\260\024=Y\262\'<Z\216/\275\372\r>\274\257\350\335<\002\257Z=h\252\t=M\216D=m\316T\275\177\236\371<\000{\361\274\207\r\256<@#\362<<h\326<>j\334<)<;=t\376\017=>\266\335\274\002\311\010\275TcE=v\327%<L\203N\275\270\022Y<Zx\220\274o\337\r\275\363\3267=4j<=\225\331O\275\375\207\345\273*\247U=\314\243\031\275\315a\233;M\376\004\275r\330 =\343@R=\020\247\024\274_\372$=\231\217!\275\"\004\017\275<N\030\274\304\374\373<\016\000\210\274=,\003\275\241\357\372\274\214`\'<\224S\272\274\205\220D\275\352\314\002=wV\266<^\010\332:\227\234\005<\026\236\002\274\312\303\374\274\014e6\274\242V\205\272\323\300\364;vw\252\274\232\205\001=\362\217\017\274)}\035<\336\277\025\273\237\312\224<.m\207\273Y\264\345<\261\266\026<C\207R\275t~\'\272\244\330\027<y\236*=\202\027V=\273}\265<\365e\355\274\354\307a\274\\%c<N\213\225\274\260\037\210<r\257@\274\023sm\274$\337\3079\334\252O=\316\016\203<\r\032\333\273\244g\310\274\220M%\275\007\003?=\023!\331\274l-p\274m\217|\274@q9<\264\322\033=a\315\214<\366\201\360;\203)/:K/\277;\240p\206\272\357lR=f\345\225<z\035\207<\327iP=\215\304\2109&\315\300\274\032)\006\275/\r[\274;\324\021\275\246)\033\275+\236\020=\023\320U\274q\2254=\210`L\275\036\367\364;\237\315W<f\276S\275CW\013=\035\032\237<\257KX<R^/=7\344\213<\234\244P\274\0240P\275\313\320\020\275{[\001=I\234\t=\211\226\313:@\224\n\275xE\002\275\201\276\371\271m\251\264<\0216\r=\335RB\275\355\366.\275\227\204\312\274\\)\350<\013\324\237:\n\250\214<ln1\271\357\n\214<n\027\264\274-E\227;\221pH=\341\007\"\274\265\245X<+\022\372\273u\201B<d\270\005\275\'\236\035=#vH<\n\226\n\275\356\276u;c\004C=\356SW=VY8\275\272Y\t=\357/\3726\200\3660\275\361I\266;\001\313\n\274S#\230<\265\370\266<\036\312 =\323\255F\274\007\356\025\275Q6\200<\331}\204\274\351\374$\275ltm\274\342<\023:B\376\016\275\033v\005\275\362\350;\275\312Q\203\273\"\313\036\275>\345R\275\003\315X\272x\3573\275\256Ng\274\3456O:\002\321-<\325\220>=t4\016\275:\313\021\275\0146\245\274 {\373\274\363.\002\274\352\004[\274\231\343\347<{p\003=\252\315\024=\322\202N=v2\242<I_\254\274o\310?=\034\364 \275\007\321\366;\323g\274\274v(C\2756?2=`\255Y\275\001s\222:Dm\204<5\032\207\274ym\364\273\020\355\031=\352\016\260<M\200\\\274p\242\037\275chJ\275\355\260N\275\362\025\216<\265\201<=\261\002\353<\215\367\335<\255\r#\275\355\231\253<y|L=\2233\377\274\262\352\315\273Y9\213<\335\311$<\204\026\035;g5S=rP,\275h\232\241\274\227z\257\274\370I\033\2756\262%\275=u$:K\374G\275QlT\275\357/5<\233\237\004\273\274\306~<HKb<\362\254\265\273\342\005\021\275\27086\274\\\3372<\276\'\345;*\302?\275\010\340\271;\235\207\033\275\\\307\n=\032\354\007\274\3059\216:_\2114\275\344\0278=\352AD=\217\342D\275\323+\373\274\\|\364\274\201\033M=>\351\267;\r\200\224\274\325\212\010=\025\205\264<xLT\275\3074\310\274X\304$\275f\201\r\275\373`H\275\267\342\005=t@!=k\007\254\272^\320\021\274\342oF\275`\2225\274\242oE\275\314\330=\275SA\342<\274\007\035<\261\2008\275Ia \275O\r\212;~\301#\275\311#\r\275\347\207\335\274\246L\016\275\355\225\017\275j0\244<\013\3551=\251\020\214\274\341\305N=\202\227O=R\257\020\274#\203\003\275k\361\360;\356\262\307;\302\206A=TkQ\2753\010\331<\251\240\221\273iP\272;s8\r\2744\235\277;E\"\236\272V\316\017\275\35252\275\272\216\235\274Z\330\313\274r c\274\007\016\026\275\235d\212\274\362\321\334<\257\237\337\274\364a:\275\307`|\274\205\242r\272/\312\366\274F\210W\275\365d\253\273nY\247<\236\350\021=\007\236\346\274\252T\241<\376\002Z=\313.\206\274\313s\020\275\373\226H\274\216X@=\307)\201\274[p\353<\246\321\212<\307\377\'<\'\2654\275,\252\313\274\020\306\235<a\342<\275\020rR=|\367\035\275d\214\236\274\252\366\0149\036/s<\205\304\221;p\312<=\364b;=\201\2025=\266\333\247<\205\300\336<\263P0\274Y\302\335;\330\244\272\274~\016\214;c\377X=@\365\345:F\370\370<V\375C\274\303VB\274;h\234<\340\020M<\234\003s\274\364n0\275\244=9=\335\317\316<\307\023a<`\026\004\275h\203O=\277\375\030\274H\313\367\274\023~G<\231\344\003=\370^\316\274l\230\256<`6\313\273\331l\236<\025E`<W(\025\275\237\316\263\273\344\277\226\274\343@\033\274\311Y\217<\216#A<yk\364<\255\227\235\274(\036\020\275\323s\244\274\036\024\033\275\260\373\302<\"\031(\2722?\274\274}\214\261<\223o\234<4B\r<\233\261t;K4\035=MX\244<\256F<\275e\241\315<\225\210\320\273\345\256\005\275;\232\301;T\200\027=%&i<R\247V=\317\006T=\332\271X<\260Y!=\r\360\033=\245\177\021\275\220\301\200<I\247U=X\274\227\274>P>=\267=\022=\323#\241\274>)\036=\230\\@\275\315\375\366\273\036\355\005=\206(\231\274n\025q;\r\202V=\246rp<C\203\204\271m\r8\275\350\032\301<\307\307`<)o2\275bgC=\267\271F\275\030\211\315</@.\275*9E\275\375Z<\275\211\361\3629@\372D\273\357bP=\337g\207<]\321\001=\024\336\020=B,\260\274\001S\372;\303\371\363<\354?\341<Ns\350<)\307$\275Tl/\275j\255+\275x\311\177;\353\337\275\274S\242S\275_+)\275\245E\277\274\221\210U\275\236\\\305<\304\270\022=6\177\r\2754\240\242\274\276\317;= <V\274u\377\303\274z\010\262<\344*/=\234\366\000=8\016\276<\327\221\373\274lr\365\274&MD\275\323\025\376\274\377\373\326<mJ!<\277\036W=}\374c\273\203g:\275[NH=\020K\013\275E\'Q=\020r\300<.\242\251\274\320\351\010<\234[\342<\214\220t;e\354\251\274\377\360\003;\303\252\030\275\307K\225\274\022r)=\220D\034=\202\346\2139$\324\032\2751\325\202\274\363nF\274^\211\203\2745\"#=\266N\365\273.\217\004=R;\331\274?\030*\275\335i7=j\036,\275W\303\361:M_K=5\247\345<\267\271\246\274X~\322<5\311X\275\254\233P=\333]\342:\222\376\203\274\013\354\337;.F\364\274\264|\203\274PI\354\2749\262\354<2\371B<\204\310\257<X]\370<r\343C\275-\305\257<7\215J\275\245:6<\223~\005\275\246\256\303<\240\244\267\274r\375A\275)p\023=JB\037=}\375\372\273\237\342\027=\264$\367\273pQ\023=\246\222>\275\352v$<@\0354=\374\330\007=\r\235\n=\374\0258=hl3=\363\212D\274k+N\275(\2503\275\025w#<\23516=\321S\220\274\253\204J=P\370A9\316\312\335\273q\207P<N\344\023<\306\316\002=\354\301\220<+\265\255\274\312<\025=\nV\004\275\233\331m\27353C=\007)\317<;\2210=4D\021=c\245\206\273\t\333J<\204>3\274\371\256C\275\017\225\177\274ma\002\274\222L\022<\335)7=\244>\276\273QN\324\274\253\241\221\274K\312\333<\344$\232\274\352*\231\272\267*H9\304\345\373<\322^\216<G\330\322<5:Z=:\354(\275>\377_\274\t\3403=\356z@\275y\264\035=\032\230\237\274\nZ\361<\233X\251<\320\215\356;\363\rF\275]\231\034\2752s+=J\206\213\274\332|~<ch\332\273\334\323\025\275\376O\345<{\222\321;b\264\037=\341\3472\275\"$\370<U &<v\321\036\274KS\305<s\222\265\274\321o\241\273\234\337\317<g\343\002=0\023\353<\t}\267\274\0308N=\235\267(\275R\215A\274\236\005\026=X\001|<6\246@\274\020/C\275\324yQ=\017#!\275`\356\254<nI,<\247s\007\275\265lW\275\215\007\021\275w\005\002\275#)1\2754b\304\273\366\t@\275\257\326\250<\201XQ=R5\243<\337\001\214\274\341\247\357\274G\022\340<\203-0<\353\003`;(cQ\275&\277Q\275~b\212\274\373]\300<om\323<\026\231\321\274{?\217<\352H\325\273\305\0308=\330\311\343<\274\n/=1\230\225\274g\226!=\307><=\273\2069=\245\010\327<\360\2009<]3\006\275b7\217<\253r%\275\025\245x;\227\323\324:x(u;d\337\371\274\216\255\034=d\221(=y&\237\274\341\241\313;\311{%=\256X$\275\220\337\262<8~\374\274OlR\2745\032T\275\236T\017\275\362u\326<C\231I\275\2366\213<mk\003\275\014\n\370;D\263\033=\211\367\341<\007p\031\2759\221\022\275\371\331\254<\377Z\022=?S\r\275[\t\225<\274\000F\274\276k5\275\230\242\021=\225RF=q\330u<\342\010\310;\304\\\210\274\016\037\367\274\326\275\354<P\300W\275kN\010=\302#\244\274\320\036\350<\r\323P\275\267\0331=\321\261P=\333t\020\275\303u\231<(\034\353<\031:>=\334\337\306\272\334C\n<D\324\177\274\326=H=\233&\334\274\022\021\350\274\305\222\212\274dJ\311\272\000Y\320\274[=2=\340\312Z\275\236\3612\275u#=\275\327\037\213\274\253\240\037=\253v\264\274\210j\370:\354\220\216<\t\2028\275\250\274M\275c\200\031=\212\030\203;\017\3110\274\360\236\314;\257\320\217<\364P\224<9\240>=C#\016\274\322\3111=\t\026:\275\003t\254<=\235@=X\272Y=\262{\315\273\365\013\013\275a\361J\275l\207\032=n\200\022\275\261\343\023\275\246\305\275:\253\314\2219\244\227J\275\316\017\235\274R\207\030\275D\206b\2748Q\201<^\361\355\274q\031\005\275n\267\353\274\313SI=\204\360\t=!\233\302<\2674\214<W\214\214\272\0217\346\274\036.q\272S\210\351\274$\tU\274\224\334\032;`#5\275\340s-=\033\233?\275\nbZ\275\252\345\344\274\363\303B\275\377w\363\274\332\250\373<\213\301\010\275\315\266\027\274r\026@\275\2575K=\244\330\312;\201\034\022<\036\212\023=7d2<d\"\337<Q!B=\240\"4=Gl\017\2754\375\004\275]\310\205<\025\217\'=&\314\225\274\177\351\016\2756\333!<\336\213\024\274\350\264\005\275pw\035=\265\264\213\274\224\244Z\275K\205\006\275\000\275\206<\337\377s<\276\245\375\274FEP\275\226\352\374\273\036\220\340<w$Z\274<\305\265\274\034\236X\274\335\345\372\274\224\303*\2749v\272\273\365:G=\033\213R=~\030N\275\037\256\013\275 %\330\272\013\266\311\274/\310D<\263\346U\275\302\230;<[N\214<\'\246\356\274s#\353\273\020\226%=\325\213R\275\001P\264\274\t\311\007=A\276\022\275,\363\212<\252f\"\275\372[6<\017\2229=\"T\300\274e\025\017\275\023\277 =\316\246\236\274\263\327\010=A\3708\275\000k\257<\364X\314:/\266F\274@\323\376\274\342c\257\274$\014,\275\266\224\217\274`\306><\177\375\203\273\224\320\201\274\027\301\250<\225\302]\273\275\223C=f{]<\013\375C=\277\367\330;\245\205\206\273\326R\355<\3606Z\275\2301&\274\356(\016=h\252\016=`q#\2758Z\316<\361o <\031\026%\274\266R\260\274\275\375*\275Q\251 =\266\276B\275\254wU\275r1*\275\'gh\274c\242\354\273t\004\024\275\315\346\362\274\267\312\000\275\242>\242\274\255\260N<\234\244R=\014G;<egL\275\2721\215;\220(\267;\256.\006=t\306C=\']\331\273\317\345\210\272L\351T=j^Z\275ZoV\275\n\024\364\274\323\307\374\274\337\036\300\274\301!\310\274\237O\316<\010F\022=\356u\326<]\217\000=\324\215p\274:\347\023=Ax\247\274\372\234\315\274\000\023C<\026f\005\275%\260\364<#\371\201<l]\337<q\241H=\230\322\335<\377_@=\330\211D\275\372\010H\275a\344W\275\035\014\030=\366\326\306\274\013x7\275\037D]\273\264y\032:s\336\017\274\031\2669\275\r\323\225<\234\177\375\274\021\177F<ku\201<\215\321\034=\275B\337\274\254\027\303<\017\374\236\273\006\324N\275\326\235\337<, \031\275,\373l<\327\\\304\2737\010\232;\222\001\004=n~\223\274\250.\224\274\201\244L\2755>\310\274\330\340/=k\'\335<~\313M\2752.B<\354\361y\274P\037==\025\336>\275\001\367z<x7\021\275\273\025\000=\351\002\013\275\264\226\035\275w\224T=\365\362\324<c\260`;C\267\007\275H\243>\275=o,=S\303\217<0\336\240<\006\006T\275\364\313\002<\354\207\014<\221\263!\275\336(\027=\304\305\255\274\306\345\021\275,\363\033\275\330\303\021\275\327\263F=\225\";\274\223\277\'\275\344O3=4\023\324<PKo\274\324\037\311\274#T\037\274\201)\274<\001iE=\004\264\302<7\223C\273\213\026\230\274\262\347\276\274[F\377<\351\331B<R\3632\274\031\306\235<8\233\211\274o\002\230\274\303G+\275q\221K=\230\3547=\251\216K=\315(<\274\302\273\341<\021\352\320\274\233V\026=W\3041=\303\r(=\274]C<E\277\240;\347\201B=u\3213=\221\352R<\231\321\213\274\311\034\020\2753\317U\275E\nm<\313\311\251<\357\366 =\254f!\275\344\030R\274\275\242\'=q\207\265:\201\350\363\2718`0\275N\256\254:>\220\326\274\177n*\273\352F\235\274^<)=\3641\031=\240\2045\275\307\361\005\275\217\312\030\275\247\'h\274\303PF=c\002N<\334\353C<X\351\235<{\032\r\275\316\336=\275\371x\323<\236\316G=\220\373\232<Ma\017\275\021\n\222\274J%\232\272T\rA<bO\n\275\371\332-;V\322\271<\353\334#=.\302\027<p\330C=\026\014\032\275\275\007:\275\377\0069=\234\315\001\2751!\230\274d,\221\274\257\227.=|\376)\275>F7=\254\347E\274\334\241Q\275Y$:\275p\255$=d\3729\275\272\340\020\275\223Z\277\274eeA\274\260E=:\345\364J\274S\306B<aj\303<!\247\013\275\360\314B=$\022\375<L{\004\275\325S\2078\317\004.=v\2745\275X\rH\275\203a\035\275l\006V<\235*\264<s4\256<\005\313\027\274\273\357Z<\205\235S=\216\222a\273\"\031\247\273\316\301\"=\371U\376\273\260Z\302;\274\245\247<\377\213\266;.\3428=w>\377\274#\214l\274\345:\025=\035\2012=\346xG<\210z,=E\365\245;\323.U<\032\"S\275\035\031$\275\342\315\373\2739\263\370\274}\277?<z\3301\275\355\223|<<\243\200<E\014\032\275\204\2154\274\310D3\275J\352\257<wd\322\274j\305\212\274\024B\035<s` \275\234\375\330<\322\336*\275\013/1\275\220\271\374<lS\311<\233\314\225\274y\277\330<\331\240\030=\277\343U\275\033)?\275\333\310\010\275\233\"U<\222\225\315\273\210\213\035\274\302\2000\275~iR\274S\362\022=PfC;\340\335\211;o\364\313<\254\n@=\001GO=\376\r\341<(\2516\275\003\022\023\275\360\300\020\275\346i\212<\377p\371;I?\t\275\325\205\227\273\247Z\r=Lme\274\306^)\274\214\016P<\027^\310\273\205\026t\273\344\002\354\274\335(\254<\036vQ\275n\rm<\215\224J=\005\241\016\275\225\224T\275E\266\000=\014tc\272\002]\353\273\377\'\371;\217\2714\273A3*\275\207\313\270\274H\023\202<M\331\034\274\230_\204\2736\230\274;\213(q\274/\207\302:\004\353\003=Qv\010\275e\260\366<\221&u\274(E\312<-\216\032=\255\217\352\274>\n\254;7\035*<\n\350B<\256\177B\275\310\021\003\274\014%U\274$F\327\274\231C>;\207\2566\275\360Z\013\275\217\010\030=7\375\010=$\254\224\274\346\220\225<\320M\276\2729\361\024\275\202h\302\274\251\322\307:\0212\003\275\373a\003<\224\361v\274\320\022\317\274\255\204\267<\324\024\036=u\005M=\010GO\274\rs\307\274\277^Z<\327Y\262\274\213\003\000<a\271$=\037\274\003<\357\320\270\273tmD=\255\3201=\tp#\275f\256\215<\'\223 \275,~\033\275\004\205N\275&\010\353\274\034E\334<c\003\333<\331\341\002=3h;\275G\330\277;_\313\366;\002\363?=\372\"O\274\032U=\272\254\223\016\275\013\320\271\274Q5X<G_\317\2747\256\002=\222\362\035<s\347\275\273]\216\313\274\304n\021\275W\316\235<\365\333?\275\237K,\275,\303\037\275\351\266K=l\3308=J\332\027<\367dH=`\310\360\274\366\250\t\274Ui,=\367\267.\275a0\013<*J\314\274:\007G=\275\327\260\274\311\036H=\021,$=\215D =U9\211\274\337/\345<\373\226\330\274\337\261\016\275<\223\\<\036\021\006\2758ba<\264\271I\275\255\371 \274\351\013\022\275\264u\001\275C\230N;\217\266\032\275v\310\235\273>\315\020=\033\342\255<.\033\341\274\020e\361<\232\220C=\240\271\025<\270\270\323\274\327s}:\360\345\206\274\351Z\254<\030P\233\274z\203p<\302Y)=t\2579=\025\230\263\274\303\377\004\275\027\227\024=\351W\305\274\334\233\222\274\250h\204<\0027a<\373\261W=<\347\266;\250^\351\274]!\373\274\204\3201=\312\272\231<\265\311\344<\311\356\336\274\014\246G\274\336\376\013<\274\275\010=Q\323X:\327t><\354_\005=\211\345\257\272<a\314<h\232\023=,\367\037=\344\021\363<N\335~<\203\220\206<,\t$=>+\224;\231e\343\273\216|R\275\230l)\275\203\307\r\275\365\\!=\032\367\033=\265\377=\275\251\333B=B\006A=\301\351\327\274\265\332\020\275,h)=\320r\033\274]\230)\275n\364\355<\253\276P<\307\267\030=rm$=\333\352\216\274li,\275\016\377\031=\226\336<=\362N\363<2\027\376;\253p\207<uxV=\006\320o<\253\357\342\274\234\036S=\362\246M\275_\313\005=p+\225\274\037T\335\274+\n\031=Qe\017=\203\014D=\214c\270\273\266\364\202\272A(M\275\217\312\324\274\177\316\305<<}M=\014\020t<\006\356d<\202v8=\317\342W=\373\311X<s=\031=\201\236C<\212\3673=\222\330A\274z\'\255\273\241G\351<-0\225<=`A<Q\234D={\372\253\274W\210\270\274\026\220?=\321\3348\275\252i =4h\254\274\321pZ=\0328\'\275\241i\270\274v\234w\274\021\0039\275\305\006\222<Q\010@=\341\245\207\274\025\005\233<(\372\272<,\257\211\274\177DB\275@\004\030\275\236\027B=\231\347u<\345\tE=J\230\"=Kx\302\274\232\321\301\274q\352\360\272\301\266m\274\314\272\267<wu\226:\251\204x\274\002t7<\004\256\013\275\0163\024=\271;\263\274m\215$=\315Pj<}\224C=\3448\333\274\005r?=W\027\273<\243\342\323\274\343\257U=\177\251\333\274\366&\'\275\r\371f\274\213\325$=j\301\027\275_yk<\207K\352\274\000\312R\275\307\n\017=>\210\013=i\242N=R\'\305\273\334\021\027\274\370-\260\273\"y\311:@\226\217<q\306\035<b\250\232<\311\262\325<\307Q\220\274\361\316#\275\324\246\367;\003\002\254\273P\336\320;k\346R\275d\342}\273\247\370,=\321Q+\275u\271\263\273\324-Z\274\274\251\302<5vP=TmT\275b`C=G\351C=\337h\241<\357\240\023<\224QU\273\244a\364\274>\034T=\353\250\253<\270\225z<L&\001=\277|\317\274s\351>=\230\207\025=\000:\231<\317\362\031=\014\330N=\371\200\206\273\241\3266<\250V\333<a\007\263<\345\257U=\354\265\024=\323i\331<\3376\006=X\324$=\037#*\275\237\331\304\273i\223W;\304\333\033=F\345(\275B\0045<i\2077\275\027\004Z=\300\220S==\274\236<\216\335\340\272\240\354\003=\2518\016=\355\255\211<\370\374\035=&\036\256<X\201\300<h\314\027\275\2662v<M\tm\274\211\346(\275\311\2268\275\333/\342<\305O\036=\314\344\330<\315\026\352;\026\371U\275u\023&\274\204\251~<\316\371\330<i\020\1779\250\356\r=l^\372<1\236\213;7\201\003=8\272\232<>\267\360;\026\322\010\272+\30399\373\353\201\274>\357,\275\021\300B\275\313w\227\274|I{\272B\367\256\274\364\350\020=\023-\n\275\r\001\340;\n\3743;\200\035\307:\370\205A=y#1=M\2367\275\034\312V\275\354\304\342\273\271Z\373<K\311&=\277\037\362<\264\347N\275v\206\347<,\256I\274\356\3411\275\264\373U=\266\321\275\274\274\246\253<\237\352\255<!\200)=\200\276\335;h\361D=\236\210`\273\n\025\237;S\224$\274y\345\253<q&\311:,\030\244\273\230\207\300<\225;\033\275\341\376\352<\000\352J=\020\307\312\272\037\030;=-_\251<m\362\241<\010\252\023=\270\240\301;\250\010\257\274N\027U\275\250{\004;:\373\016\275e\357\023\275:\374\335<\207\005\253\273\3001B<Q\3240\273\321\224\265<\355\345 \274$}\020\275\314`\203\273\354G\225\274\256\2326\275m\3427\275YWN\274c[\021\275w\313R=y\310\244;\354/m;i\006\235<\024\363\271<\235N\310<-!\'=N\3403\272N\026X\275Z\034\n\275AE\253;\324\262\021\275<*\031\275\312\2124\274K\002\207<\300\325Z<R\256\305;\356\212\244\274&\347\256<\232\2423\275\032\014\202<\23113\274-n\206\274a\360\032<\310\332+=3\232\200<P\233\304\274\313g\030=O\277r:.DB\275\251m\327\274i\034F=\361JZ\275\2776\201\274gq\303\274\221r\037=\210\214(=\220\365\035\274%\023\210\274\347\030\343\272\340[\357<\005I&\275\271w\312\274\371b\r=\tQ\202\274\354\217\317<v\022\022\275[\247k<\347\335\335<\357+\240\274r\246\205\274\030\3466\273\215\317\"=`3\242\272\363\215\325\273C4\2279\033G@\275\210}\370<=\347\317<\215\036\305\274\030\206\n=4Y#=\257wT\275\353\256L\275_f\002=7\237i\274x/\2319}\232\352\273EI\014\275\224\270\010\275\013;\024\274\363\247&=\251\3008\275d\001\"=\351k\004=t\342\007\273bEA=\347|L=\030\302\017\275,\232\025\275\306\253\006\275W^\254<\007\021\266:{\030\233\274\375\2013\275$\024\013=ce\332\274\230\240\005=\353\2035\275\274$\230\274\002\257\205<\302P\356;\306\'\271\274\225\3007\271\356\005C\275\034\024\003\275]\020\377:\355\350W\275e\365\014\275\226\001T\275\024z\242\274\317\022C\275v\352\035\275b\226\002=`\3219=\0043\234<E\253o;\204\n?=1\"Z\275\004\252 <Dl4=\206t\374\274\004F\323\273e\360\307\274\360\332O\275\354\333\016\275\243\212\222\274\265\021\305<a\3430=\213\236\034;\343\306\315<0\361&=Xv+=\341\305\001=\336Q$\275\0161\371\274\337t\276\274\013\316U\275T:\245\274-*\373;\275D\327<Y\036~<Z\220\254\274v?b\274[\222#<-\316A=\257\211\007=\367\2742\275\277\255\251\274>\0326\275\"\264F=\265\027R\275\304n\220;\200\277j;1\264\332\273\2036\201<X\303\256\274%\226K=\303R>\275\203\252\364\274\273\344)=|\372\376<5\224E\274K\024\004\273.\354A=\322f\036\273\333=\r=\377\244\'=\341P6\275M\340Z\274m\373\202\274;\244\212;\274l!=A[\333<\307\365\253<\260\331\317\2736\273\020\275\331\323j;g\270+\275\321\352\323\274\212{6\275\034\345\330\274\306eA\270`C\372\274\037\022M\275\236?;\275y\243>=\r\303\004\275<\233#\275\032cF\275\004\316\'=j><<\317Rz\274\362o\200\274X\213\n=-e=\273}\355\253:\364\010\304<4K&\275\242sK=\236Q\005\2752i\340\273\300d\'=?G^\274\276\366G=pNN=\242\247\"=\241\245\"\275\276\301\006=\016\221\227\273\364p\333\274\301\343F\275#\276Q\275_@ =\236\237C\275\013\304\304;\342\3703=\tf\347\273\021\006\323\2740=\'=\006\016\016=\261NO\275\236\030\221\274\205\301!=\026\227\203<.\024<\275?\333K\275@g\276<\345\0322=\250\254\205\274 \365\031\275\340\014\026\274\r\320[\273\3100\003<\330\177\333<\223R\337;_8V\275K\307\240<\013\311\272\274E\233\013\275\327\322\207\273[S\020=\236tH\275\335R\321\274\370\200\355\2749D\311\274k\235\'\275|\376\354\273\320(\215<\020ic\274\231\216S<d<\017\274$\231@<Ra\025\274\350G\035\274\275\237\247<a\265\273\274\014\246\271;=\276N\275\217\034z<\220\201W=\317x\270<\200i1\275w\231\022\273\257\364 \275\310\010W\275\241\362a\274\274\024n<]\346:\274\006\005\315<\003n\207\2743\010\250\273\242/[8L4\005\275}\300#\275\033\367\276:f\202\371\274F~;\275R\036\355\272\232\356\234:\262\025u<4\252\273\274\270|\026<\264\374\207\274\337<J=j\220\037\274\345\336\340\273\345F\366\274\350<&<\260\346+\275\335\316\264<\325\2223\274a\0008\275i\2576=\317H(\275k\360\020<\r\362\261<\373\253\000\275\304\264\377\274\335\301\202\274\277\tU<\340E\337\274\016\264\262<a\231\330<\003Ot\273\236\251\217<\216\217\276\274\346\211<<\007b\004=\252\255\377\274\222\243\327<+i3=\013\370\221\274>\232\230<X\007@\275f\325\005=\211)\014\275\305\347\334\274Y\244Q\274\306\221<\275V\005(\274\207\372@\275\343h7=\236CC\275\354#\370<\2048\200\271\255n^<\233\314\371\274 P\251<\260\255\353\272\335rW<\310\200\220\274\330l\354<\234\226\030\274M\204\337\274\3634\252;\374\315\315<\231\002\337<\233\217\036\275\353\327\035\273\230\243\371\273\200}W=,\266d\274\262\372\010\275\340]\027<\000V/=\245\t\320<7)%\274\335\371\350\271\351@\221\274\333\300\022=\305\273\312;$\264\353\274kIO\275\261\2471=\264\305\330<P\341\234<3\0036=\3419\022\274\347\026>\275\203\340\254\274\nQ\253<e\333\360<5pk<\244K\t;r]\250<\331\003$\275\036\323\242;\007yo\274\\OH=\235{X\275\216\221,\275\202\324\306<\352\342.;X\346\372<\034\315\030=\001\302\332\274\220.+\275\315\025\335</\037\020\275\323d\342:\001q\264\274\275P\334\274:\253\227;\034\202\367<!D\032=\341.v\273Te%\275\327\215\241<n\376\002\2742\255\025\275\203\224I=\376M\303\274\364\276\001\275\313\313\367\274\001\347\034<\374\006t\274\013\355\342\274\033\3662\275\207\242\205:d\005\007;\271\3650=\020`\001:&\245\t<\223B\024=\337\266\277<\250\216\335\272\262\346\213\274\036\001\234\274\246Z(=\237OI\274\342\321\352;\237\333\365\274\227u\035\275\026t\241;\306\317.<\312\212G=n\266\265\274a7\304<{]F\274\302\245\375\274a \334<d.\222<\252B>\2737\3417\275\334lF\273\3537\023\275\217\r\020<\351\265&\274:\202\254;\241~\005=\315@#\275c\320\013\274V_\227\273\336\203\271<\212\316U\275\351\260 =\250\036\353\274\353f\021\275\302)(\275E\016\355;X\243\305\274\0252\377\274`\355F=\222\363\347\273l\n3=\227x%\274\320\362\200<B\026\327:B\272$<\374\310n\274:\366\254\271\242!\036\275\275$\006=\373K==\264F#=\3604\036\275\216\300\241<\317yR=h\373l<ZA\360\272\364\347\201\274^%\t\275f\3279<\314`\013=#[(\274\254\3155\273\323/\"\273\332G\374;X\231*\275i\212\r\275\351D.\275U\273\311\273\233\241\350<:\372L\275x\007\365\274\037\372\302<\345;\020\275\310a\000=\205\376\252<\246\270\327<\374\020\010=\026)\274\272\244\362\200<Nwx\273vs\006\274/\036\321<\021u\205;w\344M\275\360\266\203\274\003\257\236\274e\331\201\274bG,\275\215\027\177\273\n$9\274\n\254\215<\001\034\306:\231\343\364\274\r,\205;_\2150\275\250\354Q=QvN\275\361\3429\273\013\205\031\275\370x)=\210\215E\274\205\2171=I\374\r\275*\0148;\275\027\370\274\256\332]\274\243 \201\274\334\263U\275\347`\336\274~b\326<\266\n\266<\0064h;\270<\311\274`\325Z=\213\324L=A:\207\274\252\021$\275O\262\372\274\t?\305\274\360\341N\275\20135=\027NJ=h\310\234\274\313\'O=A\232\027;\254\350\277;\304\377\223<\257H\021=\323\032\202\274\\?1=\215\'\376:\266\317\033<\236\363\006\275\010\233\n\274\266^\3509\177\312\024=\255/8=Ay\352\272E\0065=\247\216\375<L\321\311\274\031`\305<\tg\255\272\364\245$=-\275\030<\301A\035=\010\335Y=\321\365\035=|q\341\274.\\\366\273\037X\300\273f\246\336\274[\2337=\346\230\243\274c\030\360<\017\025\\<\234\364\016=hJ\342<1\202J\275r\373\360<\223\366\037\275q2<=\336X*=\244\001\222;OX#\275\021c\2449\005\351\326\2741\331Y=\304\033\347<\276X\223<\217`=\275\020\211\r=\205\254\362\274\177\316K\273(\277(\275\3403J\275\206\251\314\273\253v7=\235\034\024=h\035\350\274\343\203\323<\"\3240\275\245\002U\275\261\364;=\026\324\335\274o\307)\2751hU\275>\3446\275\267\271\311;l\334/=\344r\355\274\377#&=\352\336\315\274\036\251\202\274\201k\261<W\345\364\274\367\226>\274\270\2416=\200\301E\274)\037<\275\207^(=\024\311\303\274\200\213@\275S\356\003\275\306\263S\275\2547\031\275\2224\'=\310C\n=\306\'\270<\233e\377\274g\0312\273\221\035\270\274\272\255Z\275s\233=\275d\304\324<X\373!<x\240+=\n,\327\274U\357\002=\264\273\010\275\325C\034<\314:n<b+7=\305\251O\275\021\272\317\274\265\3402\275\022 +;6\266S=\343|\277\274\016$\340;\\\214I\275`\3063\275b\337\246<\232\250*=j\216\257\274o\327/\275\352I\355<\340\353V\275d\332F=\227y\030=\201\260\031\275\252\376O=\236\370R=\017\205T=\274\363\277\274\206\r =(\230n\274\354\n\333:\214Q\324\273\017\2625=i\'\347\274T\0056\275+\267\021\275\030 \242\274A\016\206<\200\364\340\274B[K=ka\364<\375*-\275\254\303;\275\276\357\247\274\303N3\272\013\222\033\275\302K5=\037\352\347\274`\355\350<\366@\247\274\371\310\000\275N\226\002\275UM\356<g\004\033\275\312\233J=\320;\335<C\333\021\275\377e\353\274K\024\\\274\227\300\264\274\3203\037\275\340s\230:h\033\001\275#23\275\375\257\224<\236XX=\201P\225\274\304\254D=\252^\020\275 \357\026=\220\361.;P\036L=\332\021\016\275\2470\025\275\232\356\241:JqI=\272?8\274\264\271\r:\005\315\317\274\237\025\221<\301H\256;\262\2530\275\017g\367\273\273\226\267\273\224\204\301<H\227==\'\370\000=7\346\306;\317i\316<\267\353.\275B*K<E\370\033\273\220\351\000<\212\373\035\275i\263\376\274c\034\217<B\013\340\274\035\373x\273\036U\326\272\251\362\365\274\236\017\027\275c\252\365<\334a\227\274w\376*\275\002\275R=\3218\014\275(w\370;~!\027\275I3\025=4\264\277<\264\332\234<A\2068\275\340\216\r\275\rwB\275;X\027\275\361\263\025\275!\347\270\272\022q\352<R\342G<T\317\332\274Q\023@<\267\3472\274\363\242}\274\376WZ=\014e\357;\341\223\327:{\364\035<\203\335^9JK\357\274\227\036Y=\323;\364:\210\220\t=\345\0272\275\034\321\017<di6\275\353\247\313\274\204\275\024\2742\354\225;\032xV\274\307\246\257<n)\022=\351i\214<\256i\214;\005\236\306<\235\266\331<\306b\352<6\246\023\275P\202B=V&\303\274\304z\367\272\201T\216<P_y<n\242\275\274\313\334W=\260\364\272<>\332+=\023 8=W\025\277<{t\344\273\302\203T\275\302P\256<\005%\277\274\346fH\274\241\240\326\274\214\276\253\273\313E2=\tI2= \317\210\274\225y\2119\375\026F<\013\372/\275\177\323<=H >=\013\254\373\274\035\306Q=\301\027\273\273n\361\037\275\n%H<\273_/;\215ND<\013^\270\274\343\201/\274\2418\026\275\326\373A<\221\273\311\274\255\001\032=W\305L=:\366w\273Y\230\271\274\305\212x\273\"\216(=xr\023<ibC=\"\353\032\274\277e\006\275/\370\340\274\353\016\005\275%\245{;\342\375\371<\003\362\021\275A\000\335\274\357F\233\274\334\370\355<:Q?=\272\221\244\274\363\346\204\274^H\007\275H/\347\273o\222o\273\021\215\204\274\327\307\320<\340\345\274<\242\237\004=\250\315\227<\032\326\234\274\350\316,\275\213\037\267\273 f\000=T\233/=\330\017\r\275<\034E<\267\272-\275\362\271\n\275\256\332\016\275\2220-=\000\232\037\275S3\323\274j6\341\274\364\225_<\"\224W\275\335\357|<\236\227}\273j\247\354\274>\245\246\274\357\236N=\027\224~<\017\nT=\355{M\273C\231I\275\224\331&\275\200D\220;\0263\204\274\355\373\036;a\262I\273otG=\214\211\243:7\242Y<\272\314G<M\377T;@\316!:2\353\346\274\212\224\213\274\t\302\004=\331\177\025=T\243I=\367\364K=;\375I=\323\251\021=%I\002=\036E\355\274\032\367\024\273\331]M=W\226o\273\200\233\313;Nm\241\274\317\232\023=:H\014<p\311%=\312\211\334\274 \364\263\274\370\377\211<t\207\363\274j}7\275,\3220<\223\333\271\271f\020\252<Nn\336\274j\242(=\375BT=r\263\234<\344\036\\<5O\223;\212 0=\030\216R\275\304fE\274\026\237Y\275\346I\274\273C\301\353\274\314\010\240<V\242G\275\307\236\036\275\014\027\340<\363!\013\275\177*\377\274\r\316S\275\327\016\233\274\267\236\n\275f\217U\275-\250K<\023,\215\273Oa\004\275\211\005\031=\240\n\337\274\245\241\213;Z\270\007\275\377O\223<M\023\016=\204I\030\275\275\323/=\270V\\\274^$\274\272\004\224\005\273\304\236Q\275>\000\255\274\311\236\030</LT=\\*\356<^\2251\275\337\207\334\272k}0\275\347\251U=<\335\002=p\346\316<\232\365\360\274\3043X<\215\025\272;\220\301\000=\323#Y<\337\213\335\274\"\'B=\037S\023=\000\307\242\274\224\212\036\275\263\226U\274{\370\033=\236\304\305<\326`\\\274\337\3673;\261U\013\275l5\016\274\224hC\275Q\373\030\275\217Y \275\323\360\003=T\030d\273\016\022\033\275\272\244:\275\211Z\037=y\366\215;\333I\002=u\322\314<\"\350;\275\366\324Y\274\204\230\333\274ldJ=r{2=\021\235/=vXV\2743\036\317\274!\274\r=\342\303\000\275\003\344\255\273\321\247\257\273\223\200\022\275\250Ze\273\230\231\021<+\345?\275\3061\034\273V\302\n=\016LJ\275\303F\006=\237\207\006\2750$\335<{\211\255\274\r\231\033;_@H;\225!Q=\\\376t<\354\311\025=}yV<*\321%\275\003\371\001\274\301\327v<34Z<\276\020\374\274\034\034T\275\031>L\275m\205?=!\321\200;%;\002\274\005.S\275\210f\337\274\365L\210;\001\210\365<j\007\361<\312\211\026\274\207FH\275m\360\240\274e\377\203<4\302^<L\262\017=d\272\252<n\031B=E\226$=\204:\304\273\271@\210\274\374\227\"\2744d\234<\031\237\'\273\r&\234<}\237@\274\246\214O\275\207Z\370\274\203x\335\274\010d =v\254#=\007\376\303\273\260\347\250;\307&\356;E\255\r<aD\363<I\230\250\273\326\336R<\205|\303<?K\n=Q~T=\002\310\r\275\036\245\320\274Rw\270\274[\345W=\364\211\2548\317l0\275U<\033\273_9\315<_=\317\274\3521=\275\366\023\314\274eH\017\275]\334\363\274\223U\010=\006p\262<\363\004/\275\370\016L\275X\304\270\273\357\220>=\036\002X=\245?\347\274<\001\330<\177\021\031\274m=\221<IF\300;F`\264<9\250?\275\251\266\002=\033\253\002=\367u\260\273\2615\n\275n\035\025\275!\260\227\273f\024@\275$\233p<J\0105\275z\305Z;%\224w\274\026d\277;\275\361Y=\224Z\'<\026\227W=S\3047\275\257\364\273:E\250F<\236l\267\274<\352U\2756\333\342\274\276DB\275\352i9\274\005h4\272\300\330,\275\270\311#\275\377R0=\177\033K\273J_\032=Z;\207\274S&Y\275fY\333\273g\'*=\371aQ\275\005K\253\274\367\247\234\274\275\t?\273u-\244<\035\344Q\275\325\031\214;*\032w<\032\377\335<\317<\371;\354\266>=\036\242\210<=y\304<z\341\005\273\363\366\031\275\357\007\020\275\027\215\337\274\314E\250\274\227\377r\274s\236\226\270\002\204\032:`\316\372\274\000\260V=f\366I=e\\\374\274\376c\023=H6\350<\257-\371\274\022)\343\274\202`\243<{JE\273\270\242\351\2748\316\322;.J\020=\'&W\275\000\244\255<M?E\275\210\210y\274\351\261F\275\3326\342\274\334\302\370;\\\002\276;\261M<\275\326\360G\275\311z\026=\n\367\303<\206S\311<\347)U=\370\235I<\236\213\327<c\000*\275\236\267\021\275a\201@=7\221F\274D\346\352\273u\343\364\274\313\273\263\272E;\354<\022\016\3639o\267\240<_5\340\274\371$\246;-\237\006=`\3164=\177\231O\274\031U\346<\217\337\240\273\205\201*=}\271\300<\224\335+\2743\334\r=,1\310<\372\242\010=]oY=sl\020=\354\251\252;B\014\244\274\001\266 \274\275\255C\275\272(~\274?$\232<\245\365V=La\270\273\"\316\237<\"\262F<\017\314\203<X/\211\274\276\3235=\353~7\275\232\311\202\274B\226U\275\305\252B<p[f<\270\033W\273a\253U\275\365G(\274\377\014\321<\304\037\037=\233\351B\275\242\337K=\335D\023\275\252P4\275a\351\317\274i\273<=\010\371\"\275\377\0231\275[\021\310\274\265<\264\274\251]\262\274\333\000\014\275\231\355)\275\310tZ\2748\347A\275\325\004\035=\231F(:\026\352\253\274l+\305\274\217\326\277<\330!\371\274\177\242\264<K\212K\275\337\363Y\275\262\352 =\004\322\006\275\217\277\010=\211z\016\275\361\004\233\274R\263\262<\004\220*\275\240\233+<P\005\024<\322\220%=y\203*=\003\226\211<q\027\034\274/b9=?\236\017=\"\335!\275):\030\274\254$\332<\366\347\373\274j\252\340\273Rv\017<\204\367\333\274c\232G=\325,6\275\025B\266\274!\212?\275\243*\302<\004\312\331\272\374\347I<\347\215\323\2748\346:=5\203\002=\216\256\026\275zQH\275\265S\034<O\331\364;\200/\356\274\356\r\327\274\255\347,\275\332\016\016\275\t\\\234;\\I\n\275\334\306]\274A\220\235<=\204\346\273|5\260\274\301\211\014\2759\231Y\274\270\026\337<[\244\017<mc\022<\357C\221\274 \002\367<\003\'J=\342\361Y=;o{<\217\3059=\300\321T\275\315#\340<}V\264<\254\027\306\274\n\364E\275e\365(\275\036T\006=\371hQ\275\360\002\253;_\375D=NC\242<\221\301@=\235\242(\275\321#\376\274P\001\002\274\315\220;\275\214\307;\275%h\003\274\340\021\227<\356\013\302\274\333+\036=1\306\323\274\260\340\003\273\227s\316\274\2430V=\263P;:V\365\002\275\356\351\310<\344=x\273\275\310\316<vm\r=\203\271Q\275{B\000<\'\355\030\275\375K==M>E\275\233h(\275\320g\341\274X\225?\275\013\264\320\274E\206\307<\306\243H\2753\2771\275\rW\217\274\035\215\237<\"\276\036=\263\245\017=p>\037\274\'\327\025<\372\224\246;Y\237\220\274\014\217\262\274Q\321K<\315\235\213;2<\310;\341\266\"<xJ\323<\006\247\005<\000\025\035=\370\2072\275\370{\241\274\'\001M\274\323\263@=\002\2244\275\022\266\273<\220\315\244\273\374\030$\275\343\2520\274\265\005\257\272\367\363\360;\204\231\023\274\303AK\274\264\335@=w\202\264<\024\233\275\274\345!\345\274Cz\217<\366\021\240:/6\025\275{\034\307\273H\356\r\275\346\034\306\273\220\221\363<@\330W=\263\000\251\274xa\023\275\265\256\343\273\263\275F\275H\346\212\274,n\001=\027k\006=\231\346\214\274?\r\372;\256\001 \275\373\3672\274{\nH\275<\356#\2758\250\304\272\326{\343<H=\237<\313\006\341\274\360\365\220\274y\227\366<\334\215\351\273w\025\032\2755~u<sN\036=\265\016\214\274@\r\007=?\037\007=\315t\2439\352\321\243<\032\206\n<\215\213\016\274\227\351\353<\'\'\n\275\356O\322<\302T\266<X,\261:\312\030*\275\246^\270<\277\304G=\245w\340\272Gr%<\275f\233\273]-\342\274\031z\304<\364\267\006=7i\324<3VY=do\202\274\346\242\244<`7[\274|\333\024=H\225H\274\345\'A=z\210\3409\226\236Z=_m\024=\262EL=\337\277l\2740k\034<\314}#<\207/T=\364J\014\274O \375;/#.=\376\3272\275\233\316;\274\347\327]\274\324\372\240\274\217\" \275\216s8\2752\0024=F\247\227<\374,l<`\324\022<87\247<\264\253\345\274\330\210\253\274\361\221\314;\003\001\273\274\302H~\274\t\005\035\275\353=N=\017\214\007=\211\366N\275\320\000\266\274\247\243!\273\210\320\253\274\354\245\373\274\300\310.\275\271!\315\274\352\330\324<\233\376\037=\016&\016=Si2=\256\003\336\274\377\005\266;\242\323\363\274\263K#\275j\362+=\2458\314\274\252\311\276\274\303\025\205\274N%\350\274W\200p\274&\001K\275\305\003L\275\255]\006=\005\233W\274\254\212\"\275\312\273\347<y\271\367;\373\023i;L\"5\275\250E/\275\260a\024\275\016\367\034\275\375\n\036<\307\335/\274\240M\013\275\010:~<\370La\274dk\264\274\214\254:=uW7\275\240w\002;\230\306\217<\277\"\326:(\317\326<Fi\221\274V\301:\275\355\343\370<\322\255\227<\236\334\037=\336XD=<,U=\243v?=\274\226\241\274\226\206\r=yb\361\274X\241\032<\305[X<\247V$\275\014\3214\272|\215\254\274]g\010=Y\224\035\275`\364R\274\371\013\341;\374\n[\275\352o+=,\206A\275z\322\352<}C\236\273\250MC=[u^;s-\013\275{vY\275\013>\233;n0P<VE\227\273\226e1\271\377T\371<Y\351\336<\304\317\006=\320\217&\275\267\250\'<\025\010N\275\221\251.=zF\267<\253\375\247<\003Sp\273\212\004K:n\3247\2720*R\275\303KU=\223\314J\275\004\257I=_ZN\274ig9=\177\315\356;\245\364\2769\000\371R=\2013\000\274\262\377\333;\270\356\377\273\361}\364<\234@\n=$\324g<`\255\243\274#\030\225\274<\264u<\214>\371<\257\"\014=\025\034\202<\274\331w\274\004\321\006\275\236G\362;\212\206%\275\247\005\010=\220\215-\275\300N\035\272V\334\311\274`a\212<|\345l<\326,\022=\206\261B\275`{<\275 \210\006\275{cZ=\302\254\350<c\211N=q\302\036=vq\333<\026\235\020\275\203\374m<\225\366>\275\313k#\275\230\246<=)\322%<\264\021\000=b\323\220<\327^\022=\277bB\275\031\233P\275p\002\312<h\221 \274\330hA=\362|)\275\371\336W\274\200\233J=W\347\'\275>\020\'=\r\372\252\274\025\241S\275\277(\203<w\n\251\274\007X\010\275M\200\242\274\264\341\"<\3176;\275\014\262\334\274\213\273\210\274\204f\022=\3748\227<\200K\246\274x\356)\275~Oy\274K\371\026\275R\202\255\274\260\351P<j\335\372<\t\220e\274f\365E\275\313(\337;.@\031=F\341\265\274\"TL=\315\255\213;i\202\236<\277\217-\275\324\333,\275\236\001=\275}0L<\240#-\275\3267\374\274\212w%\275Ob\010=\024\t\001\275xJ\023<\200\262J=\3170(\275`\371T\275\364\203\361\274\023.N\275{\262p<\367\007\017=\223\177P\273>)\346\273l\241+=\232\034\007=Jg\344;F\226<={_\240\273t\235\253\274\334\231\212\273\300\331&\275\212D\203:\303-\026\272AF$=^\3305\275\223\256\230\274\034c\276\274lDM\275\014b\032=\001w\216<q\236+=\276\346\201\273\001\006\361<\303h\033=\244\3071\274g\037\202<O\262\224;\022\270\017\275\"\225\"=\210\357Z=\245\324\325<\004\314\275;\211\022\231\274\335\343\327\274R\210\035\274s\034I\275h\344T<-\004\347\274\216\254!\275s]b\274@l\004\274\214s?=W\026\205\274G5T\275\243\2620\275\010#\320<\351-M=4v\030=Z2(\275x\353^\272\212b,\275\013\355&\275\270\340J<O\200*\275yK\241\274\200*\200\274\276\206\022=\352r\330\274\303\265\343:Nc\026\275\325\367\005\275\020\361e\274\356\3034=\304&\314<\320\242=\275\234CI<\225\025\204<}\031U=\222\032\241;\355o\252\274B\370\'\275\231\202E\275\353\032\206<\332\366N\275\357\244/\275gT\013=1N\017=H~\374\273\303\236\373\274\275h3\274\025\204\365\274\227dB=\300\260\274<`\327^<\237\201$\275f\324W=\027\313\'\275\374\313\002=\232\335\333\273,\251\323\273\023\260\242<\367X\262\274\322\021\242<B=\311<ND:\275\261\030\254\274\215\201/\274\301\037\027\275\353\376\023<\032\"\323<^\367!\275\375;\324\2742\323\377\274\314\264$=\315\360+=rhG\272\010 \021=0TV=\014\272<=\376FD=\364\3470=\323\247\376<\355\367\265<-\002\255\273\247\206/=\007\237(\275\215\257B\274\332e\256\274g\2233=Im*\274\252\324\263<\344TW\274\265F\n\274\357\305\274:\222\211\223\274\305\331\325<`\314\315<z\242!=D8>=)+\200:\0033\001=<\021E=\333\033\006\275\233\266\240\273\026\"\213\274qs\311\274LF\366\274wnc\273\231\336\366\274\341\215\007\275\370\210\224<\336\345\321\274\314\031?=x!d\273?\277\357;\236b\222<\271\026L=H\352\275\274\242\256\376<\357NF\275u=\007=\335\005\224<\007\304\270\274\0144\376<\3640\316<i&>\275d}\356\274 \244\271;\241\344L=\337\371\252<\243\326\275;\233\363\032=\206\371\270<Fvr< 9\013\274\315(\341<y\207X=3j\205\274\027u\t=,\363\014\275\341lO\275\362k\013\275vRP\275\214`\200\273\256c\327<\271\177I=\225;K\272\363\235F\275\322j4\275\014@;=\r\006\014\275\230\350\021\274\275w\363<\035D\001\275\031\025\027=\017\364L<\310\214W=ch#=\273\234\037=\312\350\030;\226\344\315\274\247w\274\2745D\255;k\315\030\275wD\"\275\313\017\010\274\306A_<\352\257I=A\374\034=\312\337\010\275\2633\263\274\304\235\216;W\267\215<\237\233\'\275\373\367\t\275\275\000S\275\374#3=ck\2529\354\224\325;\211\214\r\275r\323\020=q\'X=\271x\020=y\252L=)0%\275\261\356\254\274g\236\257\273=F\267<9\207\r=Q\314\221<?I\200<\315\256U=N\241\333\274#\214A\275`\353/\274\253\016\256\274o\374\226\273*\236]\273\302@c<\004\301!=\364\237\266\274\231\217\014=\205\210\332;\221T2\275A\214D=\016 8\274\313\206K\275\t\323.=E;\004\275\243H\372<\330\257\232;\266\306\261\274Q\024\355<\240(\262<&/\246\274\251\214Z\275\315\314\000\275\3404\361<M=A=\372\016J\2741\213M\275\355\031F\270\246\276\035\275\312\210L\275c\221\247;\3027X\275)\322\324\274\236CB\275\371+~\274xz\363<\271\267\224;\254\253F\275a\0376\275\233N\236<8(\315;{\014)\274)\245\303\274<\363E\275\306\315\316<USV=\375~\016<<\030\352\274\246^Z\275\203\375\253\274\232v-=l\220\034\274<cE;L\221&\275\362\205 =!\021)\275*\2706\274s\264\302\274\344\375@\275\233\312\222;\n\035B\275J\252\030\275\337\313\200\274\243\373\004\275\366Pi\2739\313Z\275*\371\340\274\2045\007=\250\330\200\274\302\314\314\274\231\325,\274\352]\273;\250\333\027\273W\230\324\274\232\245\224:\255]\366\274\264A\346<\337q\020\275-\355\020=\377\362\027=\213\343-\273H\320U=\315\rB\275K\262\035\275o,\260\274B\220X=Q\333$<\200>\333;?\022D=\205\372P=D6\224<N\3373=O\3233=\371@\363<\236\262\300\274\27330\2738\014\262\273\352\353R\275\245n+=\031\256\007=\341\240b<F\241\037=\355Z\273<a\212\000=\305S\374\272\220\014\227\274\003\307\335\274\224\247/\275}\342,=e\355C=\351\305\364<\217\0245=\367D\021\275\265\261\336<\365\237!\273\226D\034=\370\243\240\273\363\277\300\274\024\3406\275\277\216&=\225\201=\275\312\363\330\273\251t:=\307)6\275}+\024\275Q\001\017\275\010\343,=\321\033?\275p\226\270\274\254b$<\303f\345\274\236L%=\014\366\021\274\344Y\346<K\021\365\274\217\336V\275\002cU=:x\033\275\250E\001\273\335\331\317\271\020\204\242<\014\362<\274\270\204\356; [3\275@\273V;\341\352\273\274\217\226\321\273\365\352Y\275\305\017@=\263\214\326\272\007\031\225\273\246\262\251\272\244\306A=\361\322\214<\035<\237\274_d\313<\353\204\335\273\337=\300<1c\324<C9\275\274|\312X=c8&\275\036#\212;\240\034\271<\232\260J\275\375X\005\275m\026\023\274\343\005\361<\276$\212\274kj-\274\r\262\224;>`\341<C\017\006\275j(C\275e\272\r\275?\203\253\274\334\201B=h-3\274\246-\257<)w\034\275\017\274\"=\236\253\277\274?\031\232;vT:\275X\032K\275\'^Y;\241\255\037\275m$B<\244Y@=ngM=\247\034\"\275=Q%\275X\014\017\2743\000K=\2731\022=W\366\347<\265\360L=\'\r\";\271R\010=\343]l<\036\323\272;\255X\244<\272\241i\274(O\223<\357\262O=!\302P\275F\005C=\354\020+\275\242\020\037<z\177\030=!\354\305<\276\275O=\341\005\320\274\255-\027\275\306\210\360\274\331R\255\274E\022q<\226\032\023\275\243\020C\2735\374\273<\246\352D\275\334>K=\337\257\356:E\363f<\261\302\246\272\014\364K=\347\377\261<@\254\204<\te|\274\\\243\265\274\322>[\274\347\007E\275\225^\260\274\254x\250\274c\251#\274/X\013=g\242\351<@\202#\275<\355\333\274{7\307\273T5\014\275\031\312\025=\261f\r\274\376_\007\275FR<=n5\024;\007\323:\275++G;\346e+;\3115(<\324hn<\363\362G=*\247\361<\276G:=a\272X\275\277\351\302;\304\'5=N\027\361\273 (\263<\034{t\271\027\233&<4s\273<?%$\275c\232\222\274\000\316\365\274\023\'\016=6\377\261<{\233O=z\335\350\274\371o3\275\rY\305\2741\222\235<\234?\030=\212\201H=\266\370 =\207Wa\274\214R\366<\216c];\035\206\t\275\344\370\021\275\333]\225\273,\245\260:1\037\301;h\233\276\274U\276\217\274rc\334\274\374\212\021\275\363\301$\275\321\0230\271\223\364\347\274\021g\213\274\357\243@\272\341\215\020=p\227@=\324\343h<!\364\202;\301\340\013=\301K\326<9\023\020<M!\007=\335 q\274\340\241|;\030\364V\275\271\214\004\275W\252\347\273\013\255\030\275=h\237\274\350\363\354\274\363\242E\2753\267\006<\372\267T= \247R\275\346\021\005=T\301\326<m\220\274\274\314R\267\274p\022\372\274f/\032=\334\034\237;\272\013\216<\241RC\274\006\263)<\2058\277;\034\270\032\275\033\243\t=\241\334\215;\033\256\033=!\231\275<!\265@\275l\272\020\275\233\331\303\274\345\314W\275\032\037\016=\255W\253<\355f\376\273T\256\240\274L\rL\275l\005\032=\261\224\343<\343I\036=W\304\035\275\037;\327\274\362\307\013\274\023\0308\275\260\263Y\274\336\310\023;\267\227Y=\304\277\021\274\244\250\241\273\ru\362\274\273\333;\275>\357P<\226\n\024\275[\241A<\020\347\242\273Q\325\263;\026o*\274\263`\221\274\027\357\003\275\334\005\r\274\356\242\025\275;\217\274;\003.E\275\225i\200\274\327\341.\275R\275\225:\202!K\275\263f*<\272|\024\275O3J=\323\262\355;\255@\243<;\0013=$\rZ=\222\231&\274\216\343L\275)N\336:\025 \002\272j 6=\213\\\270\274\025\235\002=w\222Y=:\336\\\274\374\257\307\274;\311:;\375(=\275\254\365N\275\025\366\320\274:\365(\275\25103=\226\321\365<w\000\342\272\340^=<\344\003\364\274R\0174=\372\004\023\275\316\352\007=\276\t\\<S\036\306;%\004%=\236\215\307<\244\313<=J\216\221:~T-\275\277*\037\275\240*\376<\271\241\307<\304e \2753\324\035=\230\214\346;\021\321\033\275\026\263\244\274x\336\243<\252\354\256<U\223`\274@S\300<\313(,\275\372\250&=\232\274P<@|a\274\232\236\207\274\324\214-<]\020\334\2745!\364<z9\177:\367\005\001\275\320\'\342\274\304\030\266\274l\032\013<lgE=\247\261Q\274\005\247\023\275\375 1=\274\260><\371C\361<\243\0176\275\276\312/=c}\017=\206?*=o\343\327<\n\2418=\2210\241<\223\367\215<\312%\321\272\340\332\226\274\236T\004=\n9m\272\\Z\024=VxN\275\266ZX\275\313\215,\275\211\252\002=V-\217<w\014\036\275\2475\205\274\224\207\321\272\334E\360\274\274\275^<iS\212<\276\010\372<d\030$\274\275Z\026=W\204\303\274\307\304\021=E)E\275\213\030O\2752\036\262<88\374;\265}\342<e\2704\275*\3545<\344\347\317<\367u\353\274\206\351;\275z\223\t\275\006:\274;\354\000-\275\003\254.\273\342\207\177\273h?\236<\024|\027=\307\303\255\273\030\214\244\274\343\244C<c\330\\<\'\337\326\274\355\250=\275]=>\275=\007\014\275\242\002\337;\224\t\033=w\331\252<%\3173\275D\302-=Z\360S\275%S)\275\250\243\013\275\030\227Y<N\260\000=\2048Z=\340\364L\275\325\344\320<\211LA=\236[y:\340,c<\243\242\026\275X\377e\274\342\315\334\273=$\270<\350\023Z=[g{\273\257\200I\275s`\310\274\033\230\013\275\351TV\2753\2170\274\214\217N=\364\315\341:\303\3074\275d\332\246\274^\356F\275\311\227\241\273\357\377F=\r\247\345\274\330\244\212;\006\3054\275%\235N\275?-\241\274\034\032S=3Q>\275&Z\211\274\377y#\275+\003T\275b\372;=\251fj\274\315q\360\2746\324\375\274u\273\304\273C\004q\274pU\022\275\311\034a\274\036$H<,\360\034\275\356\373\262\274|\301\347<\025M8\274\t\301\360\274\341\347\367\274\201]\231\274?\221\017\275\014g?\2756\233U=md<=\355\340:\274p\356K\275\321\026\034=\256\2545=\232\n\314\273\331\332L=\224\264\245<\263#8=\234zM\275Z\262X\275\026\'?\275}n\016=O\027\020<\272\233\007=\025\003M\275\'\316\300\274\315\354\231<[\250\345<\003\311\332\274m\024\001=vq\002=G\274\014=\334\241P<q\216\217:\222\372\'<\221N\320<\375\301\347\274\300\346I\274\240\'\203<\311X@\275-Z\020<\214?G\275\226R\023\275TXh\274\360\344\247;\233TM\273N\257\270<\210l\247\274\234\020Z=b\\_<\245>\002=\374U\250<X\364\365\2720\032\272<*fz<\240z\266<\313\305\027=\245\200I=aji<\366\303q<\304\307g\274E\005\202\274Bvw<\255U=\275\033\222?=\277\340\005<Q\353\333\274x\262\363<Q\375J\275\375\337\005\275=\331O=\272\314O\275\314b\223<\215a\270\274\246\317O=\347%#\274\237\241(=0\305y\274\243\257\212;\021\313\370\274\350\020\303<\002\353-=\033h\021\275a\006\304<\276\244%:.\305U<\317\331\3369~v\322\274\032\311 \272:F\356\272NqS=\034}\205:g\337,=\354#\021;\234b\210;\321\311M\275[|\205\272\313\375S=\304J;<-7\334<~+/\275]+\220<\372\240\032\274\266H\345;Y)\234<\303\347-\275\253\\-=m\233C\275(\324\002=\317b\222\274\323\366\005<\264]!\275\3776\021=\327\003\244<\264\315\216;\363~\270;U?\230<\212\0334\275\030\036H=H$\270\274\247\232\366<U\312\371\274\324\311\242\271\270\254?\275\310%\331\273\205M\273\274\026\\\360;\001+\331;\262\251+=\rSC\275\375\022\207<,\323.=e\224i<C#O=\014\307B=\244eD=\340S\013\273F*R<\375gE\274\236|\010\275\354\3430=\312\266\324\274\262a$<z@);\306j;9\255\005\361\273m:\347\274_\341\200\274QL?=5\t\340\274\006\264\225\273\322\t\231\274\244h\272\274\367\275I\275\35420<t\310\010=\213\254+;\261\224\357\274\003\005\242\274\025\272\363;\334\323\270\2745y\'==\212V\275<\3408\275\337\360W\274\003O9\275\013\230\334<\t\"5\274\034\267\007=\263(]\274\302a\210\2740\350\242\2747!s<\241y\030=\336\241N=i\376\362\271\032o\366<\225\021==]W0<\371\225)=\027\256\030\275;\010\036<\235\376\227<\363\254;;8 \026\273b\362\022\275C\202\306\274\n\245\021<J\221\001<>\362];\007\310B=[\261T\275r\3007=\375\213%\275\017\246\342;\326/\270\274,N\006\275\225\024\340\274\301\366T=\326\303\027<Lb\200<\np7=B\270\244\274\271~\003\275\247\tA=:\274\006\275\215]\030=\202\3021=B\370\031<3*\020=\236\324H=\234\2310;\373?\344<\\\332\361<\330X\373<(\334\305<\256\3015=\217\320\013\2738u\376\274\241=\013=_\0170\275\235\021\005\275!\036\347:\t\201\030\2750\311\374\274b\236\205<f\241\324;\254\270K\275;\262\020=\224BH\275(IL=\347_@\275\377u\353<\357\202\035\275\257.\363\274mx\017\275\334P\010=T\206\230:\364\334\313\273\033n\t\275\340^\247;\034$}<\227\276R=\365\304V=\247\243<= \244h<\355u\215<\305I\240\273Vx\267;\212\347w\274<\300\034=\000cQ\272#\031\022\275\335\262\000=>k\022\275\346\320\343\274uWL=\315\021T=P\203\345< \200\343<\202\341\207<\245$\257\273\253Y\007=\261;5\2759N\031\275\276Q,=\\\231\025\272\023\351+\275\2210\255<j`\'=\274\222\006\274Cu]\274\205\006\033=\221\262p\274\301\330\227<\263\227\002\2754\204\306;q\326<=]7r\274P\250\336\274\025R\251\274~\236\002\275\211c\333<R\037\025\273\203\204F=\271b\251\274r@V=\335\013\332\273\263\335M=\034L\275\274\375\361X;\354\035\277<3(\177<\314tb\274\261\307d<l\342Z\275Vl\264<3d6\274G\305\027;\212\364U<\312\311\276<\322T$\273\263:\371;*>1\275\230\213;\275,/.\275\002\213H\275sd\267\274\361\264\330<y`\210\271\365\321W\2742\2152\275\300\273P\275\n\177\261;\235T\345:\273\373\363\273\255\273!=r\233\210<\2078r<\242\365W\274\014\237\247\2741Cv\273F\232?\275\0009\244\274\300p\245\273\212\273Z\275\347\276\234:\275q\024\275\347fD<A\272l<\311\241\002\275^?\307<I\274\337<\n\253\\<\256\"\205<\322\030\210\273Y-\002\274\353\034H=\313\034\234<\202R\377\274\224\016\332;\237^\035\275\216\252\270\274\343Y\"=\240w\031\275i}/<\270\347+\275\211\331#=\033G\300\274\206(\034\275\3233\367\274\336P\265\274\202.\031\275\254\205\306<;#n\274d&\004=^\310H<w\314\034\275\254\361\001\275\240g\026\275\0352\331<\021\\E=\245\324\n=\310RA=\305\003X=\"\224\037\275c\310\227\2725\217!=\206v\370\274\271Z\013\275\341\3225=\364\347\227\274[\"&;\010\001\352<\216\325$\275\263B\251<\024d\375\274\024\326\215\274\276\002\300<-K\300<I\336%\275v\006\006\275\n\032j\273\244\242\252\274\3325N\275\371\\\315\274z\312%=\341g1<\314k\372\274/,X\275T\371\014=%\025`\274\313\212W;Z)8=\240c\000\274]\026\222\274\362\r5=\206\223a<\234\240\365\274W\253\024<&\202\036\275\357\362\313\274\343\n#\275\361\232Z=\373\302{\274V\"\273;\022\\U=\016\001\340<=\350\304\273\366\247T\274H\311U=X\203\331\274t6\203<\014c0\275\235H\036<\310I\021\275U\326\\;C\220\032\274\253\256\270<\360\001>\273y*8=\346(9\275vq\330\274<\202\345\274\2301\341<&8:\275\\\235\225\273\350\234$\2754\256\327;\365\350\217\273\037\316\314\273\023GH\275\001\017Q\275kA\264;v*>=\353xY<`\002\356<\326\001\210<\307\272>=\005\312u<\275\253\237\273\331\036\220\274\212r\214<)gX\275\220\312\264\274\234\2145\275\213g\236<\211nR=q\225\316\274\371\306\004\274\256U\301<C\345W=\273\307D\275\032T*=\177:\257<\245*+\275c\032g<\301QZ<\377F\004=$\332#=N\323\006=\243\353\017\275\355\301\265<}\201\204\274ynX<s\367\213<\331h =\210C==\241\206\032\275\01443=\361\357Q=\336\216@<\351\032G=2\357\256<X\341\267<\271\310\035\275\244\244\317\274x?2=J\327\215\274\201\307|\274w\233\024=E\004L=k\243\376<]\202y\273I\020\355<\326\231X=9\331C:o\236i\274\236N9\275\317\342\364;\023!\211\274\300\300d\274\233\301\331<w\322\220\274\312\016A\275\324P2;K\034\257<\r=\307;\252\321\021\275T\034\200<\177\312\330\274\027\'N;P\270\014\2748\007\320\274\222\217\234\274\372\177M<\243\305\021\273\224\371(<\333\353\317\274&\355\031\275\343\221\273\274\205W\217\274\364\227\217\274|+\264<\305A\316<H\244\t\274&\355\023\275\361m6=IV\342;\210\275\033\275(=x\274H\305S\274\200\3130\275l\2113</}\004\275\226\347\n\275\305\257\274\274\374\340\376\273n\\\201;X\177\275<]\201\004<p}\333;Q\350\335;BF\344\273\3652\323;sC\341<\244\207\225<\212\223Z=w\024\307\274,\251v\274+\347\351\274\351\262\004=\267\375\376\274\214\2310\275\027\332<=b\234U\275\332\3700\275S\331\"=\372\344\"<v\3416=\250\327\237\274S\236\230;p\2274\275\331\264G=\367\260\020=\200\246&=\271]E\275BZ]\274\300F\345\274-\363\031\275\267_0=$\3424<\027\335\260\274x\215\321<\220Q\336;\340\237\032\275{\364\004\274\007\357\361\274]\343\224<\r\2569=\327\334\265<\262\230\316\274\360\266\010\275R\253<\275\320\277`:\323\376\300<\253\257e</\2313\274\201\021\t\275\027\3139= \235\221<\344\331\236<.Y\036=\360\345\005\273`\375\264<\363\330\242<H;E=\001\032\371\274.\247\210;]\017\351<\033\001\237<\260\346\237<\204\377A\275y\260\214;m*R\275\013f\310\274\025P =O%\304;Rh\016=_\002\336<>\334\007\273\321J\236\274+4\014\275\323_\212\272\375C\261<V\300\312\274t\334_\274\3418\n\275m\264U=N\033\r\275p\r\227<\227\3172\275\200\260\253\273 \0004\274\254\371\333;@\264\033=\346\037/=\031\014L\275\353y\224\274C\326D=\006\313\004\275\307\230\223\274&$Z=S\363\027=K\232\025\274P\363\227\274\000nm<\336\\+\275\272\211\367<\t\315,<\013\261\006<\300B\310<9\207\334<T]\346\274(\350\250<\270\r\224<N\177@\275\262e\236\273G\250\275\274\n/\214\274/2\354\274\t\312E=\251\341\212\272\304sS=X\226\371\273\225\323\034=_\t\031;\212\001O=\321s\224<\271\253\216<\227\335)\274_\263\243\274\205\327\325\274\224Y\026\275\307;\035<H\256<\275\265\3320;\272\031W=\361\215(\275)\263Y\275\002\214\017=\002>C<0\304\363<\341\030V\275\241\330D;@\316\360\274-)\3759\375\2234\275\315\370G=\372\266!\275\302\276u<w\2734=6\222\017\273E\202\t=D\030\032=\004\247T\275\021\352\222<\357/\237\274\313\266;=\177\260\342\274\226\300q\274\t\370 =\206gY=\317\347\350\272\370\254\321\274;\205L=\r]\022\275\'\331\014\275i\202\270\271_\323\020\275\0101V\275\343\336%=\365\262\031=>\350 \275v\344\325:t\346?=\t\326+=dVy<+\n3\275$0\233\274>\007\210<\275\360\301<\023\360!=a\220\236\274=\213\004=\336\2636=\373\247\310;\364\210\337\272\251\327I\275\325\3631=\363\3336<\343\261\205<\263\272\n\275U\354A=z\001\300<\016\221><\3744\023\275\364\010\352<B\001X\275\252T\276\274\315\350<=\312\3339\274]\350K=\331\317T=\0029\023=\252B\002=\244\300\231\273\306\341\006<\215\007\220\274&\004\377\274{|\215\272\332\316\325;\330\270\007\275\315\037\027==\355\037\275g\316\314<\33032\275\322\010G\275L\243>=\027\267\'<G\340\334\274\277\356\033\275T\207\010=\345\312==BC\345\274\200\315\341\274 \310E\275\363F\032=\344x\304<\264(\327\274\260\373\276\273\224\211\r\274j\236\r=\327(\r\275\022\350%\274\300\376\023\275\021\3735\274Ht\257\273`\340\"=|\272\"\275)HH=\252\242\t\275\245\360\376\274{i\204<[mO=\251\203\356<\315\t5\274\316D\001=jj\254\274\260\336O=\212\360D\275/\\\000\275^\363 =\244\276\225<\335\261\347\274\236\034\034=]\'\256<\251\344\036=p\353\217<\333\211\014=\373\2202\2751\237\331<k\231\257<)\031k\274\246\240]<vy\020\272&\002?=0a\022=\261\0010=\300i\345<gq\353;\245\227\321;\004\230#<\232\345\352;&/\206<\317\272\217<r\243E\275J\247\315\273\3064>=\341S\020\275\020\275>\273\003\277\364<\301\275\274\274\306i\341<\031\007E=]Tf\274\032\317\266<\3013X=\t[>\275\257S\344\274X\3035=9\344K\275A\374\'=Ia]<\325]\257\273\"\334\264\274#\3267=\355\237O\274p\324\345;\222*\224;\240\027\016\275t\345)\275\264j4\275\202U\024\274\020\272\005=\007\206\211<\370\'};\276\013\332\274\002\354~\274\030\243\354<}k\033\274g\260\275\274\234GE\275u\220\245;l\212\337\271\272\343E<\274\177\364;>\313\367<Gl\217<Y\310\244\274\023\227L\275:\350\370</6\023=\345T\355<W}\310<\025\321\316<g\365R=\022\2153\275\024\277 =,\035G<\253$$\275\355f0\275\377?\200\274\347\255Z\275\tK\'\275\010#A\273\243\265\350\274\266\017X=G\311%<F\251%;\255\351\341;\3556A=\210\310\007=\260\023\026\275\010\250\340:>\372\221;\031Z\374\272UW+\275a5\375<\006\356U=e.\006=\372@\021<)A\200<\375\274\010=\262|\323\274\253\222\005=\365CV\274\037\014\321\273ax\214<\266b\354\274\221\237#\275O\006F=6F\037;\2212Q\275\037\021\233\274\370\315\246<d\344\311<\020\232\030\275o\250\372\274\220\375%\274=_T\275\360.\202\274F\272*\2757E\344<\242e\021=\311o;\275h\224%<\016V\004\274\270\336C\275,\026\252<\203\3176<\233<2=\000&a\273\232\326w\274^\030F=vA\224\274\235\000\361<\007OL\274\242\310\370<\222(y<\014\261Z=b\350\226<\241\314$=\371\351\303\274^q\240<\365]\301\274)\'\240;\365\010H=\023\264\252\273\"\201\277\2745\301\375;\2073.<Iw4<-C|\274\301]\026\275/\\\301;\217\233\341<\361p\204\273\246\210\002\275\001\0218\275B\240\204<:<\316\274\337\320R\275\205\277\005\274\235\326\344<\273\203\346<\334\027\271\274X\233G\275dA\226\273\225D\016;ZO\351\274\260\203\230;\242y\025\275\272q==\003n\024\275\251f:\273\033@\030<\3546\352<<\030\035=*\340M<\234\207\334\273\t\253\024=<H\017=Y\007(=\373 \265\274\340\322\020\275P!@=\241&6\274\201\005\321;\243\356\004\274\177gm\274\335\276\014\275r\336\341;\343t\241\274\234\227\330<\346\017\032\275\233\300\010=\002t\205<$\274\256\274\306\234\273\274\342N#\275\213\217G\274N\210$\275\214\253\275<j\216\340\274\240|M=\355\245\227<\304\365\273<\323\373L\2747\030C=\212\330\220:\205N\355\274\310\2441=\352,\206<\255\267\014\275\321\215n<\377\025\036\275\036r\022\275w!,\275`So\274H\354\216\274\210rs\274\307\242\362\274\274\225\373\274\250\377G=\036\371\t<\323\313\311\273\361i4\275\3575\002\275\010\374\241\274\202\006\326\274\365v\355<\006\350\253;\247{\325<\375h\355\274q\232\014=va\210<o\2432\274\345\236\222\274\336\276\002=\345E\345\274T8o<\316aE=C\020\311\274\216\032\257<UB2=\227\323\036\275\255\225+\275\036)\346\274\035\310\371;\365\234\232<\315\206\007\275.f\215\274\233\3061<\032k$\274\201[L=\326;\026=U\257s<ZU\017=E\277\007;\323\017(=Q@q<\321\3214\274{BL\275\014\201M=\361DL={\244\262\274i\330R\275\024\024\365<l4\253<\021\022\345<\227<\023;\270\"\000\273\0057/<d>\t<3\000\327\274\305\234\204;\365\037\212<\\\362\276\273@\203\021\275d\206\307;\2663>;\336l\251\274I\363\353\274G}!=\2751=<\014\363\262\274\022\026>=:f\216\274\247\201A\272\000\216\377\274\322|\245\274\351\304\013=+I\221:\255/\373:\344\376+\275\320UQ\275\277l\226\274\010\344\t\2748.:=\3064\017=\221\372\032;+\330b<\nr\254<R\354\030=^2\031=\367I\342<\262\237\307:\277\327E;X\007\270<\353\301\257\272%\231`<\352a\266<\333\002T\275-\352)\275\3425T\275\215\232\360\274xd\001=\327{\224\274\302\217O\274\237\036P=3\307\200<\372\361B=\035\217?\275\0312\314<i\366\200;\031K$\275\325\361s<+\006\r=\255Fj\274\202j\030=\353|\t\275\236\370K=\246\243\205\272o\006H\273%\224\177\274\316\304\021\275\355j\206\274\214\026\031=\020\310\237\274\301/\n\275,TJ=\177\361\331\272\235\375F=\221bz\274\253 )=\177\265k\274f\nV=O\007\263<mi\312<4SA\275Y\2361\274$\256\247;O\3375<\370\3563=^\223\254<\013|\225;+\232Z=\200\212%\275\271\224\260<\314xn<\264GE\275;\250\355<,\224>=\004-Q=\2512\354<\277\266K;\030\343\223\274\366\371J=\274\232\377\274\302\244m<tj\004\275\327j\213;\231\235\t\275\364_\366\274\311ZE<\324\263\205\274@\240X<\375\013\352\273\365\205\242<\313/:\274Z9*\275\347\3450=5\230V\274f\333\037=\017\357_<3\347\262\273v\366\220\274}\255\322\274\025@\032=\036<\376\274\177\016\213\274*\260!<\005\272\027<q0\022=gI\341<\005\376,=\345Y\312;\251NM;NB\255\274i\251\230\274G\"M\275\247\350\304<\202\237\370\2744-|\273eI\213;\030Q&=\242\361k<\263\240\277\274,B\215<\263\200+=\214\024\001=\300\002\302\274\307\265\002=C\235\241<Fk\213;q\364d<dxS\272\216\332\370\274V\272C\274\"\0076\275Ww\024=a\255M=\204\204\212\274\017N\017=\263u-=\324v\207<\023\222\036\275\036\3626<g\326\024=\343\010\022\275n-\217<\360IB<\357\364L=\211\360\027\274\365\3728\275\207\362\351<`lZ\272\353\254X=\007\223\024\275f\216\014=\275(\232\274\326tC\275=<\354<z\347)\275K\353\276:,\206\274\273=\332\343<\374\306\233<\t]1=\235\347\r<L\"\024\275\241\363\034=\342\322>\275]\367\014=&%A=\252\360\314<;sf\274\024\217\037=\2301\266< 8\274<\312\311\243\274\302\202\306\274\331\335(\272\250\212\203\274\347T)=\265\217\355<K\373V<aC\035\274\275\264\272<\252,\321<P\300\006\275Y\215\264<q\313#\275V\260\336\273\317\350\036=\026\327\007\275\201\205\360<\231\355\234<\346]\352\271\314\3155\275\243\235\335\273\027\272|<#F\037<v\233\321\274\313\314*=\260\0265\275a\2363=\342wD=fE\273<\022\246<\275He\220\274\303\237Y\274R\314\234<\232\023\023=\353S\235<F\226\000\2753Fo<B\223\013\275\032-y;\215?\263<`\025}\2746\254@\275\n7m<H\352\205\274\033!G\273<6\237\274\3028\253\274\'\336\014=\324\0255=\370e\235</\231\316\274\233 \n=J\300#\275\336\036\007\2754(\276<\265[_\271\254?\034\275\370p\242\273\351\315>=\334\275K=t~\036<\033\365=\274\231\024\314\273\230z\264<\374A5=\233=\356<>\0225<\342\177\254\274\273R^<\265\376O\272V\036\364\273\"\016\177<\311\000#\275\266\"\013\275}\023n\274lD;=}\277\005\275\207d\375<E\013\307<\343\371u\274.\244;\275L\2707=\367\354K=W\375\210\274\222\3104=\222~2=\027\260\326\274\350\334A;I\333L\274#\003F<\265\257\003<8\255\'=\031\375\005\275\234\320!=\223\"<\2751\222V=\241\336X=26R\275\364\257\004=\243\335:=\344\205,<\213\215 =\355p\340\273\261#E\274\227\243A<\021\265\216<\227\",\274\274\027M\275]\344\302<\"J\003\275\215p\003<\027\265[\274P8T=<\336\025;gE1\275k\255\263\273\211\005@<\363\206\205<\266\367\351<!MZ=\320\322/=\340\222\330<Th\263\274(\226\311\273\263a\206<&\342\200;rB4\275\013D\022=\314\230\353<ig\235\274\270hU\274\341\240\2119\314\200\237\274\014uW=\364\000f<\332\255}<P\220\327\274Wc\317<\033\037\202;Q</\274\231\035\004=`lA\275U\331\177<\332P0\275\366\250`\274\217\336\212;\327\014\307<\225_\301<S\010\032:\303\020M=,\300R\275\250Z\227<!\344\017=~\250z;u\355:=\203\362\177\273\264\332\243\273ga\351\274\376}\037\275d=\357\274\260\014\305\274V\241\025=\301\301\207\272\323\310t\274\251x\232<6\203E\275m\223T<\220V\220\274\354\001;\274\214\2703;\270\031\n\275L\013\235\2729\364\213<\361?\007\274\354i(\275+\330I=ZB\037\274^!\212<\2423\001=7b\336\273\221h\031=\347\267\t=T\374\206\274\371f\262:\005\2449\275rm\020\275)c\r\275,\316\013=1.3;\324\216\204\274W(i<\222\240\005=\206\303\'\275K-4=\361\342\376\274\031\244\'\275\365\355\265<>\241(=\342\025Z<\275\360\311\274\227\020\375;6\331I\275pM\'=Ut\001\275\026\032+\275\333A\221<.Z\033\275\371\211\n=\037$T=F\370\232\274\006\202<;S/J\274\221\035\200<\000\003\037\275\373\340\001=\203N\355<:m$\275\t<\007<\224!\346\273\304\215G=\350\330&=F-K=\026?7=\027.\355\274 \031\004<L\306\277\274\364\367;\275\257\324N\275\277@\324;+\3121\275\262bY=\t\203F\274\027\306\033\274\203 \343;nUH=\333%\375\274\240.\317<P*I<CQD<a\300\022=\342\346\333\274\267\255\243\273\275o\002\275\313E9\274Y\n\023\275p\363\207\274VE\217<\254\2706\274\016\033\306\274\260e\253\274}\227F\275\265\322+\275\033\374Q\275{\236F\275\264\266V\275^S8\2757(6\274\275\010\033=\035\211\223\274,\t\353\274\225\3019\275(\205n<\205:\246;\372\313\256<nQ\312:X\316*=\363XX\275\240o\204\274\002U#=\216C#\275\315\006\001=\340\tP\274\246\004\216\274\213\022\230\274G\230\350\274M\307T<\301\237O=O\206\354\274\231\r\350\274\366e\352<\033\356\216\274\272Kb;\342Q\016\274\211MV\273\203\225Q\274\t\231\301<\262U\316;5\341\314<\013m\243;\231\260\222<\300\026\025=\264H\301;$\020@<c\311\n\275\321\3751=\001\304A<\"\215(\2759\3764\275\014V5=\231qA\275\345\025\037=2\354\035\275\031\304\357\274s\237d\274\377A\340<\210\2612=\200S\234\274\307?I\275\201$\025<\240\022\207\274\226\264_<\251\242\203<\246\002\007\275\267\202\276\274\274\243z\274kW\036=\340\210\375<\375\027\217\274{\236\325\274\365\217\257\274\310\244&\274\"\315;\275\347\367?\275c\346\314\273\n\337\322\274\350P\t<;!I\275\262A\177\274\253\0107\275\312)\335\273\004?\027:P\371\335\274\316\264<=\334\326\r\274\267\360\367<\'z}\271\222a\013\275\005L(\272Z\'\216<\346\327\205\274$6\366;\033\311\344<\030\302O=\342~\005\275\315\016\203;\356Q\031\275;\014\033=x+\372<\236\256\240\274\347\000\017\275\320F\024=h:\350<~1\325<\26628;\213!\232<\270\016\354<J\322\006\275X\266*\275d\262w<<\3701\275\324\357L\273\031]=\275\336\244~\272\021\222\206<\005\225\025=\211\035\366<R\256\225;\013\024\022<J\227H<u\207\344\273\257\205\331<\221\320\325\274A\313A\275\232\246\307<e\246w\273\330\200A\275e\201y;\363\355\036=\205\023\374<+\213N=\300\232\376<\0330\256\274\236\215\013\2758\371\010<\271\027\006\275\347\3424\274U+\000=\253\246<\275\003\374\315<f\202\\<e\014W\275\324\245@=\366\270Y\275\0257S\275W~@=\"\013*\275P\273)\275\032\233\235\274\177GS\275\267h\004=\312O\207<\313f.<N5\267\274\225\026\351<\313\354+\275\326K\306\274\256\227\226\274\277\344:\275\242\034\025\275\027E3\275t\321\016=\352\2571\274u\200\255\274\363\210\302\274\247.)\275\273<\367\274\005{\342\274\253\227\034=\334\351%<\201\346\232<\326\351.=n\"*\275\265\271+\274\360\373\036\272\205\005f<\203G\264\274\3544\354\273\216\223\027=\275^\021\275\002\201\'\274\243\321>\274\'\316\260<\375(\035\275\301\324H=7+\022=\233\321O\275\213y\214<\246\013\r=1|\014\2757\2769=\361\242c\273O{\327<%\304\030\275Y\201\257\272^u\224\273F\253\023\274\t\210O=\337\tR\2745\371.\275\036aE=\034\212\037=\177IZ\274\261\263\024\275L\272E\275N\377\t\275\371\210D\275\310xE\274\366\221\334<\356.Y\275\261\230$\275\226\225\300;\006b\373<tM\304<O\320\000\275R\264\024=\206\2664\275\257I\266;\036\2506;M\3622=\013\367\270\274Y\221\344\274\256\320\376;\357\311\252<5\020(=?w@=\244\256@=X\262\350<g\0107=\254m\261<^\024\334\274\264\2340\274d\245\201\272n\260\010\275\266\275\230<\342CT\274\314=\215;\233\021\374\274:v\335<\375\220u<\005\270\033=4\004\016=\232\372%=\203\255O=\222\000\265<J\023==x]\305\274c\037h<\326t+=u\371C\275\277r\020\27543\236\273\225R\233<\263\363\032=\216m\211\274\321\373>\275\255`\000=\022V\272\271i\340n\274\037\340\225\272i\273.\275nj\014\273P\324\257\274\305v_\274\224|\274<\237/\333\274#\243O;\261fH=a6f\274S\201\270<k\213\246<k\243\013=\335\321\224\274\331\351S\275^\243\334;\334\257L=O\355}<\2233\'=\362V\036<]\362\221\2732\2178\272\201\"\030\274+\372.<8<\207<\252\033\024\273\343\"\033\275\003\250@\275P\3132=\216\310\271<\316\300\237\274\257\366\305\272\245\214!<\020\013!=\234\242\033=\225\313I\275f\266\305;q\367\025=F\265\320;\333\000L\275\243\260\010\274\354\264!=\241\261A=\233\345\352<\330\373\235<\'\334K=\341\341\013\274[\345\341\274\034\0302\272\220p\276\274\324\325.\275\346\024\217\274\354\213\362\2744\003$\275mV\256<\221r!\272\225\217H=\370v3=c\002b<\2024\364\274\337\341A\275e\231\267<Z\370D<(\236\306<\305\337$=\236\277\034\274&qJ<X\r\311<\317\342\305;\377\250\352\273\312g\354;\315fG=\353\202\016\275\323AD\275n\271\t<S(7\275\355\327b;\241\003\033\275K\177\004\275\207\2610\275\315$\251\274\344\323C=\240b\326<\312_\r<\247\274\030=\024\206\021\275\'KU\275\036\354\006=e\372T=g\n<=m\261S=&=\235\2736\r\007=K\365S<\355\035\002=1\003\020\275\211\027o\273\220\366\n;B\002S\274\351\275\036\275\375\026\007<\332p\224<\261\304G\275\024\2661=\306\372\374<H|\341<\214\220\345\271\302xM<\n*\"\275\274\253\033\275P\215\277;\3569$=\177\2505=M\2644\275\242\256\374\274\033\001\271<\024\240\322\274$\342\217<\023\016\013\275S?\361<\247\002\263<\020#;=\315\372\006\273\020\310\370\273\340\361l<\\\216\303\2741C\025\275e;\001\275\275/G\2759\234\016<E\224!\275\010\311S\275O\356^<\227\300\330<O\007G\275\021`\204;PJ4\275G\273|<\347\350\304\274\037\365L\275\210/U=\3033\037=id\213\274$k3\275\2708\002=\010\3373\275\207\037w\274\254V\016\275\202\n\347\2732\326\n\274\373\310\220<\360\333>;\255\314\244<\232\300\340\274\362}\222<T\366\317\274\211K\034=1aG\275W`\211<Y\034U=\305\201/=\225Z\202;\337\203\360\273^\207^\273\230\302\231;\331\025\221\274\317M+\275\007#\217\274\240\037\336\274\343\027,\275\023\353\341\272\317r\032\275\037\264\t=\314\3107\2753\0044=[o\206\274\247\212\006;:.+;_\3320\275\257\347.\275\324I\021\275xQ5<F\236\364;\035\000\344\274\346\244Q=\272\344\031\275!\017\374\274\224nV=\032\363\032\275E\037V\275\211\3364=\'L\242<\220\365\301\274\362(G=\252\325\230\274\373\375%\275\002\025\005\275\313\354\024=\307\254D\275\205B\351<X`\027\275\301(/\275\315\336\000\275\352\345\013=\'*A=\212J\010=\260\227><\021i\332<\360H\212\272\327#9<\371\006\254<\365\304!=\325\3735=\230\244\235:G\330v\274\261\351==\361o\315\274\030Q\234<#\256\212<\231,P=\226;\010\275\340\353;<B\323\312\274\3062S=\257)5=\005\354&\274d:<=\311\376I\275\232\240*\275\004[\027=_\013\n\275\301\332\023=\t\000\232<\202)\367\274Jc\203<\230\214\212\273\323Z4\275\246\302\252<N\241\235<69.\274\277\362@\2743\354\r=\010\263\014\275x\202\351\274\327P\025<\365\212\367:\246\267+<\322|\243\274\277\001\373\272\210\177V\275B\304#=\356\356i<3.\014\274)\322\312<\235\274\304<\022\275M\273\2359\367\274\036N\004=\202t,8\242\3451\275\237\364H=e\346\226\273\2559c<\014\233\336\274]\365:=\317!\021=\314\350A\275\033R\344<#^*=/\021\010=Z\321\214<\255E\025<\376\3525\275\351n\214;\023e,=E\207F=fl\203;ct\004\273\334v\013\275\273h!\275V\204S\275\255\253+\275P\277G=\020\347I\274X\304\353<\361\240\331\273E\236_<.\326\007\273\222\371\n=\212\177T\275\276\317\204<\331o\327\2744\033q<4z\033=L\267\237<\230\225L=q\010\n\275\'\245\307<1\243\204<&\354\257\273\334\354J\275\005d\020=0\357p<\342\2260\274\2610\033<%\242\030\274c\261?\275\254p\234<B\352^<>\037\211<\023\274T<<\"\257\274\247\317\'\274_03<\177b\314\274\024 \251\274\006n\335\274\224\217\260\274\035 X=\335YA=\347\037\005\275%10\273\324\311i<{\204\001\273\006w\374\274\304~\333\273}\177\375\274\344\342\276\274\244\331P=\344\377k\274\n\033\240<\300\350\001==\241_\274\3662*\275j5 =P0\200\273\314pL\275^}\307\27426Y\275\324\235\t\274\324\0146:\351d.\275\325\212\210\274eN\260\273\333\336\343<\351//\275H\331{<j\224i\274\002\313=<\236O\352<)\010:\274\361f\223\274\374`B\275O\037/=\242\0149\2759!\014\274=\301P\275\316\357\246\274\2370(\275\007\220\261\273|\252\210<\322C\376<\323\3536<\212^\361<\276\025\251\274\2346\343\273\024Vx;\225\375\026<\362\226\201\274G\024\366\274}\344\302\274\211\215D\275\301\275\243\273\206%\262\273\325\366\250<\323W\374\274\366\3019<q>>=\247\323\023=\017y\352<\265\004\326;~\351~<\366\353\023=\247\337Y\275\331\232V=;\342\276:WyX=*\344\317\274WV\300\273\306\026,\273\313e\367\274\226\333\201\274b\232\035\2754X2\275O\0326\273\331\331X\275\210\317L<\2457\247\274\236\256\240\272v\324\273\274\230\207S\275\220]\346\274\260G0< \241\n=\0048\271;\317\236p\273\363\207b<\027Y|:O\232/=yK2=Q\242\327;l\334\305<\035\277#=\336B\204<\267\314\275\274\341\257\251\274\0063\013<L/V\274B\353\'=\315\267\002\275sX\205\274\034\370\221<\256u\027\275X3\034=\370\030\001=\006\025\017\275\014Y\234\2743I2\275e\266\332<cIU=\2239\204\274\272\321F\275;\224F\274T\364\t\274\226X>\275@\3334<\214\203\331<\376\276\231:-\267,=\363\330\302\273C\n\003;\374\0314=\225s~<\225g\233<\234\374\227:N\241*\273\361\240\372\274OZ\021\275m\205\244\274\224\277\005\275\300\2547\275[\022\326\274\361\271d<\037\314\036\275\304\347A=L\350I\273YO\037\275Q@\260<\332\306\014\274\266vQ;\nR\020\275\200I\016\275\035x\361\274\230\217\373\274A\3117=\2744-=\017\362\360\274\204\000-\274iLw\274\205YW<\312\006\032\275\246e\2609&03\275`\r\014;t5E;\272A\030=l\276\264;\ta\301\273I\021\001\273\317\026\034;\272v\004=\'\003\373\274\300\224\273<\007\003\316<\217\251\017\274\253H\031=\010\0354=]\244J\275/\266K=\252\3056;n\301T\275\231\036&<\304\271S=5\2336\275\262]8\275*s\345\274\314\026\272<\353\343\'\273)\300W\275vL\251;\316\350K=z\213\253<,\323\027=\236\353R\273\337)9=\2608W=>\212O\2750\362)\274\260\235)\273M\346,=\256\225(\275\254\231C<\010\266\321<\007fA=\360X:\275\356\324O=\207\312\270\274N9\224;~=\243<*\334\014<\231\301-\2753\313\321<\210\323\306<\232)/\275\304\301\003=\010~E=\r\354\217<i\313\352\274?)\005\275\3746\302;\026\307\014=\207\301\203\274\340\022K\275\020\336\010=\351\263R\275\365KH=q\251\027\275\027\264\355\274nw@\275\237\031\305\274\n\206!=\237\310\'\274\360\371\262<B\371q;\233%\233\273\240\363L=pI\267<n\330O\275\017\224W;d\234\014=n\324R\273\343\316\314\274\273j\005\275\275\016U\274\031\r}\274\267\355\246\274U\257\371\274\007r\266\274h}\007<\336\205\227<\377=\t<^\361\271<\020\203\025=(\343f<a\230\273<\317:\321<\310\021\372\273\271\301!=(\243\316\274\340\251\007\275U%}<\"8\230<,\030\036<\243\360=<\203n!\274}\177\332;0\027\246;)\357A\274n\213\207\273\2463\314\274\270D\376\274\001T\t\275\033\245$\275Y\276D=}\326%\274\006\375\210<\355\221\035=d\036W\274\277>\365\273v\345\007=E\272c:!?U\275C\227\330;\260\234H=Vm\374\274\262\037n:[c\333<DK\231<M\337E=_\377\216:\363R\275<\271\352\032<\032\213#\274\342 \013\275\243\036\216<\271\355\313<\311l\346;\335\273\032\273Z\017\024\275+\024\316<\324qJ\274\217\312-\275:>P\275\332\321C\267\206b\215<\024\273\322<\353pG\274\303\007\320\274\013LR=\tM\2457R\374\245;\243R+\275r\033\034=B\344H\275\033gS=I\321\245\274_\3406=@\373\000\275n\024\234\273&\212P=\254\212\363\274\241\220\222\274 ~\225\274\214\375\027\275\035xL=\236\220\337\273\037\364\337\274\346Qw;vb\273;\330&\305<\275z(\275\003\3132;k\374\036=Z%\032<;\317\232\274@\362\020\274W6\262\273NcZ\275\240\000A=N\346\310< <P=\256\201f\273\n\251\036\275\033\331\233\274\364\\\242\274%U\006<\231\363\266<\247\0027\274\204\231\360\274jR<\275\204\313\350;\201V\306\274\360`-=\266\030\007\2756\263!=\013{J=\306;\023=\361\376\n=\313c\307<\035\212\353\274\337H\030=\230\024\035\275|~6\275\344\240c\274S\254\226<w\351\010=\305K\332\273\374\371\315<\252\'\004\274\215\231\362\273U\227G\275\212\320P=\375\270\000\274\222\203I\275\024?\346<\337v(\275\0342\342<\322\200\031\274\201\235\243\274+\2227\274~\233<\2758M\337<m\342\361<\335\267z\274N\203\002\273C<\t\275\364\3133\275\027\310G96\202E=\261\037\017\275,\211\300;=M\236\272\265H0\275!>\377\274\024Y\027=94\r=\325\375\315\274\311\032\343\274\033VK={\226*=\227\205\377\273H[5=\0163;\275\330K\253<\376\000\013\275).Z\274\273\304<<\276&\223<I\265\315:}\272\001\275\302m\254\274\345\3265\275\013<\350\274\221\221\353\274\007\310)\275\272L\333\273\013\277<=:\0036\274\300J<=\365\356T=\323\216\326;\325\2267\275\365\311\037=\361\246\263<qU\035=(\310\'\275\002\234 =\207\212\030=\363b\036\275\203\201\260<\215\335\013\275\\#\225<\272xQ\274\r\355P=6\023@<\211\225\340\274\267~M=o\260\334\274\236a4\275\334v\333\274F4\t=v\333\306\274\372\017\314\2748\007\350\274\204\010\234\273\000Q\035\274{D\034=da\317:\245\245E\275\3633\t=\271\315.:mT\312\273|R\352\272\033\327~\272\033\301\373<-\036\266<\220\272\241\273\022\035\267\273\023\304`<\304\242\256\274\211\030\201:;\1775\275~\217\301\274\3330\263<\315\315\244\274\"mm<\203\231\205\273\366Ry<\022\240\014\275\277\236G=\016\327\377\274x\321\010=\345\013T=\016\342\275:\246\232\035\275=\037<=P\336\356<\335N\\<^\302\027=\214\017?\272\374\263\247\274\216X\341\274|\323R<\373\233\223<&7\026=\223\222\223\274\261\013\371\274C\0338\275\272\202\016\275\225^\025\274\033m\365\273\245>\211;\234,#\275\376\271\016=\356\305\024=\352\025(\275\237{,\275\'\344\033\275\202\023\237<\221\347\024\275ztB\275^\310\313<\324\025\r\275F\0256\275J+\315\2741\352\037=\237\204\334\274\277_\005\274Dn\322<*\257\350\274\367G\220<\025\264\305<\274\205:=\2209G\274\233\335\253<\273\\\315<\374\357\325<\3215\014\275\2070\257<\216\377\004\275|\301\223<\240\365N=n\204j\271p\203\234\274K/\032<\335O\222;Wt\224;\016\0007<\327\363p<\221w\243;HDk<LF\272\274-\212\243<\202\033%\274Ri\362;Ep\245<\227\271\022=\235\304D\275l\373\246\274\241S\036=5\0211<G\371\367\273\301\235\260<\034U3=\002\303\003=Zv\236\273E\374\304\273\'\252N\275\332_\000=\313\032\032\275\246@d<\277\344\314\274\257\254}\274\003\377\206\274\302\231h<\362\2721\274\232=#\275\271\370.\274;\001\276<\236\373\342<\332e\335\270\265\344\002<v+h<\022x \275A2\013=j/-=\303~\177\274m\000\271<\023\331\244<\177\206\304\274kH|\274\233=\235;\373\227$<u\350\177<\215@\216\273-9\204\273\346\375G<\336\321\'\275\324\217}\274\373\373\306<\306OI\275\202=\234\273\313\273-\274\032\233=\275n\226\243<\226,\352;\252/\325\274{\3438<\301\332\337\274W#\017\273\214H\202;]\243\331<~\366~\274\352\017Y=\256\217(=\004\256\344\274\\\230\227\273\272\245\032=\035\3718\275\236B\027\275\317BF\275\'\0016=\360\343\031=\307H\312\274xr\242<\204\t\330<\203N\304<)\'\021\275\304\371\200\274G\030D\274\272^\024\275\343w\032\275\213.+=\355\022\360<\033\262\2349\313\216K=zO\000<\023\353\031=\324\315\357<2\346\016=\312\341\264<\003\3269<\374\205\216\274&\224\274<\303\300\236<\323m\224\273\273\270\221<\006\245\370\273\250\311\343\274\262\347\336\273\214\254\034\274\311\351\016<\032\231\023\275\253i\n\274\247\342+\275\370\352\022=otR\275\323#[\273uY`\274\225\002\010\275\251U\332:\177\371\226<F\017\316\274~\\\236;N\271I=3\n+=\205\372\207\274\241d\354\274\206\222W\274\220i\332<\265\306!=\207H\325\273\345\020\213\274\356\211\254<?F\215<\205\223S=\247\270\211\274\253\362\304<\214,\211\274\'R\223;\363j\276\274\031\327\250\274\206p\256\274|\035,<\276\324\207;\337Qv\274F\314\224\274A\356\016=\203;\031\275\200u\255\274\341\032N\274\323b!=<\347\"=\322A>=\260p\002\275\013Q\241<\236\356)=\017\273\310<t\005J=\320\006K\275\302\023\216<v\'\311\274/\204\246\2740\3632=\213\203\253;\332\243\r\275\270mE\273\263A\010=\344\363\276\274C\354Z\275n\200p<\033\336%=<\274\240<\365\356@\275\322Z\005=\224S\274\274l0J\275\346\273\310\271z\320J\275\000\314I=g\220\202;\006\276l<9\347O\275\362\317\205<\211\315\026\275\353\226\214<i\256\031\274\227 \007=\026E0<tT\266\272\247\210\311<]\024\221<\245\241\010\275\374\004\001=\367#\323;lF\274<\222\216\342\274\236\373\232;\357\347\026\274\265\200\023\275\020\253j<\263\240\314\274\017\204\030=\013\364\010=\0211\237<aSP\275k\231\020\275X\304 =\225\3247=\240^\257;\323b\004=Q\277\023=\354\222\017<@+\310<SFB\275\264\322H\275\344>\242<\226V3=]H\235<PV\016<A\325+\275\271\347\006;\276!\331\274\252\3528=\336\252B\275\017\230V=_\031!\275\263\323g\274H\002\376\274\230\344\031\275\347\237\210<\354 \010\273)`\242\2701\342:\275\363H\036\274\336\332\020\275\035n7\274\010\032\032\2755\200\236<k\355?=\345\0055\275\346j\326\274\352\001\026=\n=k\274\321H\021<vI\237\274s\371I=\367\317)\275\304r\n\275\004|\303<\261*\211<\211\230\266<=\341&\275\343\3075=\252vY\275\340i\005\275\355\343\345<I \016<\234\031\037\274\014\002\023<\256\026\200\273@\372\006\274\006\003\026\275\370\240\267\274\245\2037<9\201\'\275\337\216\232<\247\213s8*\356w\274\321[\337\274\375/\202<\216\355\307\273\321\2001<\210\2415\275\247\001\034=Z\035<\275\267^W=gtU\275\346\036\272\274n\247\326\274\305?\026=\r\2408\274E\026+=\350z\003\275\251*!\275I:\303\2721\304\270<\327\332(\275 \364\n<a].<b\023-=\335\253<=\277i\207\271O\007J=NAJ\273\367\2708=S0T=\324]%=w!)=^Z\352\274\245\274\023=\350\217\014=\210\262\006=\361\242\250<`\375\254\274\033\372+\275Y\242\r\275\223\220!=\333,\024\275\017\314\"=\221,)\274\022\tk<\353\362M=\326\2022;\021\353\021=b\213\t\2759\325\355\274\327\242@=\334\205S\275\010\325p;\205<\325\274\2761\205\274\003L%=[>\363\274\340o\026=\rI(=\242+\202\274\234\307\205<V\274\304\274\212\314\274<w8H\274\333\323\337\273\2378J\275\014?)<m\300Q\274\200\203\261<)\026&\275I\234M\275rT\002=\220+\333<\220\231\013\275^\n0\275\177\035\225:(p\375\274Y\025\211\273\263 \005\275\224\224R=\272\242V\272\374\357K\275V~\204<_\341\265\274\311\035\205\273\026\305\247\274]!><\313\223(=[\200\202<\345Rb;\373\215S=v;Z\275B\211\001\275\230\247\366\272\270+\247\274\323\367W\275\230V\201\272C\r\272;\"\302>\275\334\247\221<^w?=\010\224\r\275X\371<=\363\300\303\274|\314\332\273\370<\000\275vq\225<=\204\"<le\272\274\221l\374\274~n\305\274\341.\351\272\334w7=\207\320\302\2732\316\014<\277\355\264<\271\'\242; ~ =\310i/=a\3104\275\223\263\000=2\362\221\274W\223\332\274=\027\t\275\014\t\361<\243\2178\275HE!=z\376\020\273\030\374\374<[\331.=\0231\237<\347\024\371\274\365\177\316\273\311\3271=\037sf\274\202S\026=\3342L=y\376\217<e\316D\275g\324K\275R\177>= \315I<\206\372U<\024\345\224<\275b\225\272y\t\030\275\005\013\216\273\330x\332<\363\216\n\274\177\263X=\273\312\244<\324\341v\274\023n\033\274n\320\252<#\271\210\273 >\001=?\351M=8\010\345\274\\\251O\275\2656\r=\304\343N=q\246\240</\317:=Y\330/=~eS\275[K\241\274ks\'=\007\226`\273\267}\026<4C\330\274\311\001G=]JL\275f\004\203\274\225\360\003<\377\217\374\274\314\314\240;,D\r\275;\0372\275\310\241\031=e\247\035\274\256a\035=\256\376\324<\275C\007=\252\037%<\264\271\327;\211%\"\275Q82\275U\260\341<,]7\275*;\250<\344\2767\274\336!\254<\007\223\202\274E\277\354</\237\014\275y\237\262\274\215\312\267\274DX\363\273\035m\320<\311\367\340;\r\300\330\274\320\246Q\274\016\250\007=\t\025@\273T\316X\275\304WG\274\332\340/\275\022\213l<[\320\031\275g\211\243\273\367\215\344<F\213\244\273\037v\252\274\352(Q<\326\376\237<\264\361\364<sh%=\34666\274;w(\275\261\t1=\004\240\'\275\020\3602\275\370\036\304;G\215\270<\377Q\322<\217\010%=\377\252\345\274\336\rI=\3508\025\275G05=*\247\333;2s\003=\343\370~\273T\252X\275\222\357]<o\242\n\275\016\302\341\274||Q\275\202\307\035\275\354=8\275\022b\"\275\023)\204\274/\341,\274\355\347\022=\260\305\233\273\0241\014=7\243V=`u\321<\337L\367<\257\300+=;g\330<\273\354\036=y\020\r\275\361r\022=J\372d\274\247\226\032\274\303\332\177<\2575C;a\177l\273\2001\252\271`\311\016=\2411\023\274\002\265\266\274e+#=\231\236\006\275\006f\027=\255\021\304<\245\305\357<\244\034)<\354fN\275\320\216\370\273W\216\352\274\004\026Q\275\374d:\275L\277\034\275\3012\n\275\001S\034<\252\n\243<\nu\347<\022\257\274\274\320\274\326\274\242\324\257\274G@\353<7\251-\275\304b\277<\227\3763\275\241\014\r=\234\340\036=\363\363\353\274\325e\340<oW\313;\246\001$\275\007D\034<X\340?\275\330\235\214<a\377\301\273\263\343\033=O\261\252<S\201\274\274\255l\207<\203`,\275\r\265&=\322\2319\2742\357\264\273yAt\274\337\3012\275\256\333T<P\373\334\274\3659\313\274\3603\006\275\\\003-:\223^\030=\315\374\024\274\364$o<\014\255\r=\240\350\301\274\305\343\t=toV=\272e\233<\026\0148\275b\2128=\001\0357\275\330\335\240<\217*\302;V\367.\275\315\354J\272\337\3624=\372\310\251\272\256\255&\275\334\324\000\275L\217\273<\254\336/\275i\212\277<\370?K=\003\"\016\275XJ-<\221;\031=dO\274<\315\317Y\275M\013;<\266\033\024\274\034\337\016\274\212W;\275\203)\024=\301F\261<\3339I:\245\2640<\340d\250\274`\377\215\274\021#\030=\322$1=\362\"1<\304\305F\274\304\367\217;m\312\230<2\220\035\275\250\3764=s%\025\274O\323\\9\214\224\027\275\365.89\034\322M<\301\276\370\274T\r2\275\\[S\275\035\245\344\274\274K,\275\277l\246\2740\225\322\274\231\235X=\363|\362\274\002\201d\274\257\214\265\274\n\n\266\274i\tC<\327g\302<\3608\310\2740\266\013;a\347\n\275\374h\r\275\262\207K<ZH\242\274-z\245\2730\311\027\275\317\036\324<\317\311\014<A\t?\275Jy\256<\221\274B=\215\031,=wJG\275\217\037\200<\215\3035\275\353\252\342;\202Z\310;\231`\336\274Q\336E\275\345aW=#\322\272\274\313\023\312;\220\031S=eI&\275\307aN=\3553B\275\177U\267<\004\204 =\334N\235\274s}\335;\315\261O\275\300&\236<\200f\037\275\316\306\373<>\223E=/\266}<\327v\256<K\n\r=\202\351\242\274N\307V=\340\260N\275)\347==\352\325\345:\355@\006\275\203\031\357\274\312\362\263<\312\203\274\274Y\023\350<\272\357&\275\354\233\216\273S\365K<\026\353\324\274\327\270A\275\240\3077\2752\006\014\2756\2301=$P\023<\366\326\271:H\314#\275\177\027j<Q88\274\361#\336:fI\217\274Fk\035<y\031\334<)\203X\274\362\024n<\365\222\347\274\035\355\033\275mz\013<qP\026\275)w\036\274]\310-=\224\234\322<]pi\274\310\274\340\272I\305\373<\333\316V=\370a\247\2749k\255\274<\362B=A\3055\275\020\351I\275y\212\253<\247\3240=\264\033c<1\345\020\275\227@\007=\252H*=v|6\275\0354\001<G]C=\314\213s;\236\356%=\016\032\003\275_!*\275\036m+\275\312\257\326<\333H\210<\257U\375\274\210\230(\275\214\374\016=vj.\275\023)\001\275\340\365\205\273\350\323\375\274[rm\273\275\365-\275\300\207\353\272\002\246K=\37056\2759S\020\274\243>\037=\256pX=>\3121\2741\247\225\274\266\361\363<Q\213\021\274\207\257\310\272\205%\231\274\242\373S<\001U=<YO\n<\230\255\004\274\212h\014\274\330N\332<\224\305F=\2330\245<0\004@\274\250*6=nu2\275\321% =\177\324]\274=QF\273?\035\223\271\323\367\361\274\261\021\377\274S!\207<}\264\274<{4\010=\006\303\314;\013\254G\275\222\001\r\274\314F7<q&\035\275\362\267P\275\347\215\315\273NW\223;dP\322<,\3435\2749]\367\274\203\330\314;O\335\002\273\376\342\352<\226&\225<\025%`<Kj\323<<\375W\275\310\000\024=\353\267S={\217\206<\201\363\300<\243L\233\274\266\240)=\225.\241\274]\023\213<b\340\034\275\346)@=\252|\007<\271\367G=\301-%=\331\304\305\274h\205!\275T\177\033=\017{x8\306&\302\274\017\030\313\274\030\374\2708\001\331T;x\030Z\275+\255\204\274\355\3747\275\215\255C\275z\266\221<\207\237\002\274S\354\032=\334\3234=K\325:\275\263\027\231<:\220\321\274w\265X\274,\332\230\273\250\363J\275\325\277S=\225u\251\274NE\337\274Jc\023\275\212\341H=\351\325&\275\376\273@=x\006\031\274\025\260\335\274\205Y\236\274w\336\224<\310\003\215\272%\240E=\2620>\272,F\002\275?+7=\026v\301<\220\314f\274\006\230\006=\216<\315\274\367\206>\275\251\271\r\275\236\'\350\274T\232S\274\310\177?<\240\002\373\274cn\\\274\354\226\217;uE)\275u\202<=|\300\300;\274\277\216\274k\007\372<d\204\021=\234\301\202\274g_S\275\257\034\371\274E|\024\274\257\002\326<\301\261Q\273>\335`\274l\207\322\274\234\n\267\274\361\316G=\027<$\275\275t\260\274\333\233\253<\300z\312\2749\245\352<UW\304<\033i\031\275\3232h<\221\340%\274\375IS=\277\350\201;\351\177\270<\267\211(\275\031\2611\274r\322\252;T\340\235;mT\017\274?6\367\274\266\321\377\273\364-G\275\360RS\275&1\251\274\270\206\270\273[\341\207;_\207\006\275\313\361\367<c\230}\274\313\025\020\275\343\'\312\274cMR\275\260^\211;\330\000;=d\016P\275#\214J=\354\211\025=\007V\227<\203\362X\2747\343\331\274\211j\246\274M\200:\274\3109\236<\375\371\022=\333|\0369\202\201\374<\010\303\254\273\000VS<\331\341\252<|zX\275N\017\352<\226r?\275\312\2446<\270h5\275\024\231L\274)B\036=\262/\231\273\252m=<R\031\001\274\2743\366\273\227*\030<|V\r<[\225\000\275<\270\304\274X\223\264\274\212$0\275\300\233\261<\305vo<s\374t<\377\253\362;\230a;\270\277\275\264<\202\316R\275\263\035\343<\342\210\016\275\2109\213<\325\201\025=\233\324\023<\207\002\373\273\231n2\275+\006\247<M\025 =I\365\2609X\345e;\356p\007=]p\013\274\331B\007=\'\354Q\275\260\356E<<B0\275{\350\311<H\356Z=\227Z\272<\006\234Z\275/\375?=\036\003\025<\252xN\274s\004Y<\240\363\324<\230v)\275U|\261\274\023,\331<\334\000\236\274E\333]<$\356P<\207Bb<a\365\232<\r\013\333\274\325\370\200\274X2Z\274\251\265\305\274\236\337\367\274\211\026\227<\210O\265< B,=\035\031\253<\204k<\274\222\243K\2753m\026=F\2206\275)t2=\256i\031=\\KA\274*t@=-\3555\274s\367*=gw\033=1\374\362<\026\001\317<\321sN<ss\354;i\326S<\342\363\313<]\207\036:@\2327\275\022\004\243\274\343\211\352\273n\246$\275\212\352j<\021]\022=+_&\275#\304X<z\343\243\273\225oB=\002;<<\013\377S\274\271DZ\275\252\264\227<\373\304\225\274f\352\306\274\304\325*\274\204\240d\274\274\036X:\025\377%\275\305\337\244<\2207\016<x\304w<\254\363\321<\355\337)\275\021:\276<\004\345+=\000\007\305:\367n<<\324!@\274\323\244\014=\271\037Q\275\371\2377=\277\345\013\275\251Gl<\030\016\217\274\247jI\274\005nB\273[\374\003=\033\255\r\275\"\005*=\266\256\217<;\354\344\274[A\322;\303k<\274\017?I\274\024oN\275\356\001:\275k\211\035\275\252\224\315;\366\354\302<c\340\215<,\372X\275V\277O=B\364\202<m\223K\275\255\034\247<\257$/\275\315\264\314\274\002\016\344\274\365\005\027=A\235\036\275\373\275\021;\037\223\225;\032\031\026\275(\206W<\014a(\275\321\370*\274\352\246\216;.\341\315\274\277\334\014=\270\'.\274 \303\225\274\221\001\314\274hm\027\275\244)*\275\243\253X;5\334U\274\313\215C\275\234\277\010\274\364SU\274\301\020A\275d\244\315\274\036\302\304<bc\"=f\273>\275B`\021=\0102M\275\363\017U\275q\222V=\220q\305\273\270\253$=x\334=\275\306O8=\221\316\350\273nS\267\273R\031c\274\371-\256\273q\321X\274\323\372\210\274\270~\331<\260\226\327<<\\\367\274xz$=i\336\357<\353\252\3058o\356\252;M\351\210<+\271\205<\266\033;\275\266\256\201\274\374\313\213\274^\031\027\275\002\t$=l\337\371<\355\037I=\336s\362\273\361|/=^~P\2752\243==\"^\r\275\336\244\250;Og\r=\016\364\303</\336\344\274\332\335\246<\032\265%\274\344\363g\274\010*S\274\301\274|\272\300d\004\275\256\311K\275\256\327\036=\273\270D=i\034P\274-\333\032<\201eE\274\326g\027=|\001F=_\367\270<\246-\030=\216\347\353\274M_$=\\\250\010\275\372Z,;\374\250M=[\272H=_\032*\275\255\226\014\274\245\375\020<jP\365\274\037,\325\273z\231\017\273-\254?=\024\310\325<\204]\030=|\006\257<`\302C\275\243\336\023\275.\016\006\273@k6=x>\177\274;\236\244\273\235\360i\273\0062P\275(\030?\275O5P=\214\232,\275\345\333\320<pK\"\274\002E\326<e\310\366\274UX\277\272\234\n%\275\016\310\341<\364\225.<oau<\3020J=\307\2406=\177x\010=\222\3466=\315Q\276;\310\300&\273q\203\017\275\267\235\371<D?|\273\373\225\226\274U\313/\275\324R\360<u\360*=\270\234e\274\225\344E\275d\220\'=\r\242\245\274\206)\237\274:\010v\274%\276_\273\237\214\023\275]}m\274\337D6\274\024\216\005<\224[\242<\300\272\256\274\327\270\006\275i9?\273?\227+\274\t\354<;1\311\330<?\274C=#\372\007\275^\tU=\373\026\013=\351\270\321\274!\233?\275Mi>\275\000\014\327<\206\017,\275\233R\265<v\264>=\273\233\365\274\2471/<z\030\336<\333\367D\275\025\344\n\274\227\317F=3\266K\275\001\327\001\275\312\234\n<\230\312\343<r\223\372\274\213\017-\275\221\363\006;\275\335\014\275\230\342!=U\212\010\275Q\300\301;Y\033,\275\372`W\275(v\'=\006\361G=Q\347!=\031\025v;p6a;\250\004\206<8~\016\275<)G\273\031KQ\275\371&a\274\032\223j\274\327\272G=\030\0351<G\346\233;\361,,=\230#R\275D_\353<Z\300T=\'\306\303\274O\226^\274\367\307 \273Le\360\273S\364\375<\262V5=\337i\245\274\3566\236\272\216\257\207<~+\267<\300\361\372<\002\3211\275\273\332\233\270\375\307L\275\227\227\'=\341@\003=\211\360\306\274\006\226\320\273B\014\207\273\336\305\277;>\3419\275\230\227\253<T\337Z\275\242u2\275y\372\216\273+\274\037=\037\361%\275_\033 =\241\343\353\273\3370\037\274j\2613=\327\370O\275\252n1=\254\357\030\275\340\360\310<c\200\037;u\373\003\275@\n\t\275\2426U\275HC\024=\227]\250<j\261\013<uf\"\275\317eO=\210jR<\021\244,\275\222\240|\274\237n\006=N\374\236\274&\213\034\2751;\361<\247\230M\275\223\360G<vq\267\274\3204?=m\345;=\311Y&=h;+\275$\306\237\274\240/\353\274q\347\022\275\005D8<\362\324\034=Y\223\317<*\227@<fy\362\274q\004\350<%\306\026;\244a:=\247\365\236\272\274$(\275#\256S=\364\201^\274\210I\003=\265\204\351\274~\222%=\212\020\'\274\014\233\265\274V\346\016\275\377\261\254<2R\314\274\355_c\274DHD=\354O\314\274K\222\021\2755\035\362\274r\205\r\275\235:\234\274D\335\027\275\351=\221<\250\016\023\275n\021\223<\017\334\267\274\206`\317\274\220\007\236;\2207\272;m=\325<\236\t\335\2740;B=N\222\001\275\032i\213\274\221B&\273\237\271\377;*L\n\275\366\033\"\275\031\204\374\274\3061\t\275<\016F<\373s\347<\324v!\275lb\271<\306s7\275u>\266<\254\020&\275\377\202\303\274\363E\004\274^W6\273\00473=@x\327\273\247yS=\014^`<c\252\022\275\021*\003=\350o9\275\"\3475\275\274\202\t\274\245F\335\274\214\322:=\3463\365<\273\337A\2753Tm\274\203l\233<&\003\312\274\336\326I\274_,W=G\3030<\245 >\275\307f%\274\222\375W\274N\016;\275\257\217Z\2750\030T\275\343\335E<F\370\r\275G\"L\275\214\242\321<4\001\t\275*\212I\274\035\022C=9x\247\272\233\354\277;\247L\237\274RD/\275\217\207d\274\202\031P\275\361\3405\275\374\323\204\273\317\025R\275\235\311\242<\212\326\027\274\235\220\001\275\272W\324\273K\014\377;\310\2470\275\263\0018\275\202\362\004\275\036R)\275\251=f<\014\300y\273\221s\016\275\376(6\275\222\263\211\274\263\206U=\363\212\245\272\311\'0=\363t\336<\r\311\213<7^\374<[\006\263\274\037Y\330<\024\267\224<\004\265l\274\334\364\030=\320\027G\275\244Q\200\274\252%\273\271\022\253\276\274\300\014b<#\250\030\275\334\253\007\274)\007\2119hA%\275\022^\232\274\312\001\370<wc\312<N\201\032\275\023\266\354;\247\373\027\275\342\235\035=\230V\246\274\004\350E\275\'*\006=\327\321\201\272\026\333\027\275/\255\374\273\337I\371\274\216F\037=\023:t<s3\236\274\014\323&\275\330$O=\271\367\225<%\357\377<,\276.=\227\3643\275\261}\r\275E\2672=\213\265\022=F\307\016\275\377kD=D!r;\024\340\010\275\017\305/\275\271\2374\275\\\352\366<&\372T=\244\344\273<\222\023\014\275J\363\020\275\372f\002=\014/><:8\302\274*\302M=\227\037\335<N:\226\274jX\253\274*\210\225\274\234\200\032<v\2719;\311\204V=B\331g\274E\231K\275L,\361<a\256V=\305\332s\274\021\2148<\304\032s<n\321\201\274F\263\212;\304d)\275\030#\005\275\000\2320=N\273T\275#\010\247\274_\3154\275\315\2149\275\003\217$=\335.G<\2719\034\274\241\366.\275\207\2717<\334\255\323\274\372\227\355<\247\316\240\274F\245\000=Dz\370<\005\222\0008\005\\\225<*\260\002<\\\005\331\274\342\225\322\274]\372-\274\306z\366;\035\013H=\357\234\252;M\030`\274$b\234<\375e\375\274\023\0249={U\310<\302\320\006=\247i8\275\200\364K\274\272c\202;\256\374\024\275m_\366<WAT\275\345\345\021\275\202\270O=M\244\006<\317\240@=w\033\347\273\026\033L=\022\227\344<\030>\023\275O\225Q=\373\325\221<^\203W\274\344\227\360:a\"K\275\030\037\256\274\240~>\275\223@\351\274\305}E\275\254\343\332:\362\325*<\260\364e;\342i\"<\340\214L\275\270x\333\274\362\016\036=AE\372\274D^\016\275-\330\201;\366R\t\275~\346\010=!\305\3209\257\035\256\273\262\352\354\274\362x%\274\rY\301\274H\262h<G\257\002==H\003\274\271\004\005=\177\353(\274\'k\235<P\035\330\273\026\022\230\274\300\334T\2754UX=>/,\274\317\226\r=\232fa\274]1\275<\347\021\361\274\246\034\330\274\3557;\274\355\345\232<2\247\r\275\277\267=\275\240\310\037=\371\262><\2605X;\227\244;:=\215D\275\201#6\275\024K\233:\267\360\343\273\260\230L=\201\014\n\274\246.\314<\352\003\323<\313\203*<\362_\367\273)\273\353\273PD\325\274\370\3508\275\215\231\025=\020\2672=\342\031\034=\236\306H:\222\215\331<\202\033N\275\315\306e<\027z==\24055=G\257\013\274\244\334N\274]1\355\274H\2726=\341B\004=(g\217\2720\274\"\275\326q\247\274\002%\262\274\333n\365\274Mxs<\376\236G\275\025\203-=\360 J=~S>\275I\013%=Zg\034\275D\322E94\233\211<\233\252e\274\2000\337<\375\031N\275~\341\225\274\035f\201<Q\353N\275\315\205\274<\360\253\210<\005#Z\275\2759)\275\007\212\022=>\017\344<;A4=\177\014\316<d\036C<\331\2739=s\2124=\002\r%\275j\020\007=\244\330u\2744\3078\270A\276O=\235q\033\275\005\317\'=\205\276l\274\363\315>=\250\247\014<\307$\207\274\254\'8=\245;\022=6\351j<EC\242\274F\347X=\305C\016=\3212-=6\242\020\275\266\205i<\310\214\237\273\205!9=\221k\342<,\220W=C\327\025<\236\267t\273\003\270\324<4\367\327\274\022\021\223\274\360\221<=\204\267\036=N\307%\275\017\037\346;\2329\213\274\342\327\253\274\332\344.\275\"_q:\365f-\275&e5\2745\263^\274O\313:=\235\327\312\273?\2045\275%aV\275\341\n\022=\333K\360\272\350p\014=\242\257V=|#\364\274\263o+\275\031\357\031=\214c\321<)\013Q<\325\277Y;J\276\204<,\243m\274\3640\324;\233|\273;\021\341\324<\025\005\316<\226\211q\274\035\254\361;\255yL\275\265\253)=\217\353:\275L\362\363<i\\\221\273\330\033D=\231\251\206<\352d.\274\321\n\246\274#\241&\275\3532\026=\272-*=n,\353\274\224nZ=\345@\217<\311\302\343<*\313\033\275\251\317\345<F\315\016\275\217\277(=\033T\036=\252`C\275\177\027Q\275\242\030\260;\034\3614=\235\355D<+%0=\0004\000=|\"\246<\226lP\275\247\315\252\274\262=\275<D}&<F v\274F\022\'\2752xI\275\203\211\347\2726\212:\274\265\254\032\274\027`S\275H\316 \275\372\262\340\273\333&\036=\364\231Q=}m\221;\333\r\006\275(\021\203\274\331\252-\274U*a<\335V\332;O&\027=Iq?\274\260\313\025=\301=\337<|x\034\275\0329S=\255.\374<\016>\200;\307Je\274\001~J<\220#\312<q\014\006=N&\t\275\007*\251;D\364\207\273\033\3123\275C\304,=\252Y\337\274V\004\360\274S-\260<\030<\306<\206\240\020\275_:\211\2735\356\243<\350>\331;\357\201\236:\244B\371\273h7\202\274z<\261\274\215\\\254<,\202S=\002\263\027=\253OQ\275O\277\251\274!4\302\273\247XR\275\333l%\275\256\313\352\270w\340U<\362\300@<\274>\007=^\221j<k\362\r\274\325C\364\274\244Q\031\275\2656\301<\215kD=\343\031\237<_\303@\2750\311\226<\244Xt\274oF\373<\211Y\327:\002\355\250\274\232\263\320<\373\037\022;`\317J=\220\322%<\363ZM\275^r<=H_\037\275<\354\222<j78=\036\241\243<\371\311G\275\265\362D=Q\372&=\247\342\270\274\342\274N\275\265\214\014\275\347gS\2749\370\313\274\2575\307<S%\307\274%\333\"\274#\255\341\274=\277\004=\201\314G=\347\225I=6\020\315\271P8\230<C7E=.\032X\275Vp/<M\r\n\274T\217\014\274{B\027\274\337\335\363<\371\177\256\274wv]<3c\344\274\312}\004=h\300-<k5J=\203\326\001\273\200\364\032\274\217R\221\273t\201_;\025\337\200\274L>\347<\250\244\007\275\257f\311\274\251r\231\274\345\215G=\317\317.=\006\002M\275\010\343y\274\231DN<\320\300<<\005\373\366\271u\241-\275;jh<\273\255\035\275\360z\321\274\023\311\310\274<\274)=\310R\227\274\342\233K\2751\307\236\274\324\034w\271\257\317\305\274W?\016\274\000\276V\275o\332:=a\"\034<I\334\255\274\257\354Z=\226p\205<\020\361\356<\252\202x<\232A4\2742 \016=\\\373\242<\017\375\225\274\220\247\033<RlY\275Y\225W\275\337\315\355\274\270\262 \275\342eG\273sB\234;\336\024=\274\240]\\\273\351\244{<\225Q.=Z\350;\275r?8\274\025\206\n\273\022\362\373\274p\021\023\274=\320\244\274Y\231\362\274\302IW\275\233\332\246\273\254\370\000\275\023>W=\325\236\320\274\340\376\245\273AL\200<\366\350%=%\014X\275;\257~\273!ZZ\2744<\002;\366\200\241\273(\233v\272S\377\347:;NV=\321\350)\275\364LE<\233\243\023\274\336\2244=\300e\255:\306\275\276<\237\341%\275\362LS\275\302\375\356\274a\220\272<\310\364&=V+z;7u-\274\3616\244\274\251@\375<\227#\242\274\262\\o\274\222K\275\274\025\266\377\274O6\227\274\312 \314<\224\344\367\273\344\272\224\274\204\r\t\273\035\206<=\332\211\206\274\342\215\r\275\274\222\244;>\\\024;j\213p<vCN=\371\254J=3\227\320<\010U\"=\007d\034=|\002\216\273:\033E\275\201\233\023<\200\354M=<\3751\275\300~\367\274|\022Z=\207\321\303\273\025S\t\275^\375M=Nf9<\247\006\221\274\315\231\266\272\340\362\210<\260 \243<\313\364\022\275\251\330C\275\203B\260\274O|\242\273\226\372\255;\374\345\216\274\266\346L\275\023\037e<n\345\263;\277\315\036\274\324\254R\274\274\014\372\274\356\322\267\274\345N\010\275\347\206!=|\310\350<\177\237\243\274L\370\016=\267\213Z\275\331\021\354<M\356\334\274\246\335L=\260\327R=tN\032<H\366\215<-\242\304\272J\214*\275S\2026=\320A\264\274\2238Z<N\224\234<2\361\326<\226@\n<e\334\017\275\n\276\252<>\320N\275\312\246 =\247\032\247<\250fQ=\271\034\033\275\023\322L<\346Aw<\206\345+\275m+\243<\366\000=\270\256\324\263\274\270\337\340\274R\213@\275N\315\026=\353\031I=\354S\002\275~\321\370<{j\020<=\262\365\274\177S\275;\220\034\235<|*\026=|\027\243<\310xP\275\334\336\231;N\252\350\273\310J\003\275\213*6\275yg\343\274\264\317\274\274\313\212\231<\227u\264<\342r\341\274\017\035\333\274\273\033T=\256\230\007\275\022\2207=* \277\274\306\034\345\274\257+==\354\0009\275\377,G=\232\303\343;\363\357^<1\331\212\274PW\314\274\353\236U\275:\334\026=\201\332\373\273\217\321H\274Q\250Q=\224V-\274em\374\273\310\375\026=\355\333\323\273\n\035\245<\224\221\021\275\206E\235\273\003G\360<h\374!\275\266*\005\275\363\2075\2757w\n=\363R1=\352\300\010\275\031\216K\273\3412A=Z\352\021\275\277\243\310<\223\002\232\274\2131\264;_\220\251\274\364\370\013=\032\333\002=\023|\361\274\321\031T\275\300\016\244\274\246\330m\274\360,Y<T\361,=e\017\361;O\366Y<9\310-\274\223\\/=\017\004\031\275\231^\336\273\277F+<S\316!\275\036\313/\275\r\205\230\274\345}\234<\257\030\303;\004xQ=rKA\275\0047&\275v0\032=\376JI=\343\275\007\275PrZ<;(\315;.\270A=ba<=\002*\034\274G\220(=\016{\371\270\265\235\023\271\262\245P=\263\212C=J\003\003\275\236\347C\275ts\316\274\250T\001\275\320\322Q\2741~\022=!\026\001<\177z!=.\351\323<C<\010\2759x#\275\227\010c;,\261N\275\274\367d;z\2561=s\037\300<\210\3702\275\326\370\001\275\203\006\305\274\315\234\315\274:\204\272<\273\331@\275\220\335\215\273[\020\031=\010\207\345;\250g\005=\250\267\254\274h\303\312;6J\231<\006G\317\273\244\351U\275\306oQ=\006\312\'\274\360,\225<^0\027\274I\254\332<\341p\353;\354\353\"=\200\250\345\274_\366M\275~\301\037=\304\016D=\3011\205<rS\226<=\210G\275\037:#\275q\215k<}\300\232<#YZ=8\247\255\274\346Z\005;\317c#=\255\022\240\272\360k6\274\322\251N\275F#\201<\036;\221\2745Q\333\273ifw\274\246:3<\330QM\275\374\0039=\341\372{<\026\023H\275\346\340\036\275?\000r<\300B?=Y\262\263\272ciJ\274\275>\341\274\373\002C9\305\241[<\017<5\275y\213\302\274f\023\216<\264_O\275\362\001\374\274\251\356H<M\251\216:\000S <\033{7\275\223uE=\016\321\027\275:\0324<\032\0340\275\004#\344\274\001\210f< \314W\275.\234J\275A\367W\274\355\t9=\323\347I:0}G=\251z(\275\227\235\006\275\333\325+<\246\312\301\274\301]\004=l\0177=\250\274\027\275\346\346,<\224P\212<V\213K\275b\242\350\274\032\307\213\273\200\361x<B\354\243\274\n\342\306\274\354\316\014\275\331\372*<\0100\213\272\350\016\356\274[\\\036\275\201Y\327\272\204\037P\274\034W\245;\306\351\004\274\007\344\234;\013$g<JRU<\224\313Q\275G\322L=z\004\262\274\203y\313;\304s\321<\343\020\032=\3573t<\343\310\027\273\326\303\246\274\222\316/\275\373N\232\274\346\005\177\274\327\233\276\274\223L\217;\005\266l\274\te\325\274\324\257\244<\355>(\270\333\001D\275a\037\177\274\032\177\016<\357\031&;TQQ=\004v}<\305}\266\274\027\037\207<\365\364\330<\207\237\"=\307D8=4\255\003<\214q\275<\322s\261<\221Z\351;WiM\275/\345Q\274\333)\017\275\225\340\265\274\"\204\364;|t\002\273\233\366\316\274\\\036L\275\365\223O\275\235\331\377<\242\2726\275\376W1\275\3746\027<n]\360<T\356\343<V\246\323\272\253\305L\275w\235I=\370\324\260<\201\275\n\274\226\221\002=\31374\275&\003U\2742\377\243<g\320-=\334[\016=D$\371;\210F\033\275-\257\003\275\0176\324</L\347\274,\227$\273\036\200\367\2740\302 \275\255\271\247<^\031\306\274\306T\264;\177N\336<\306D\302<\350\006\352<\262\225\017=o\345\000\275\255YF=\270;\2679\335k\037\275\242xF\275\346\267\356\274;\364C=\323$i\274!d+<Q\201N\274]=\003=\221c\006\2750\225\313\272)\305Q\274\021\245;=\017Q\222<*T\032=[,I:\306\305\006=\344\021L\275KhW=\351\267!;\274\205A\275\325\366Y=\302\227\354\272\034\247\r\275\3733\304;\020\235t\273@G\263<\317\017.=\374]8\275\211#\270\274\023\346\230;i\024\274\274ds\035\267\236r\351\273\263AH<\177\272\035\274\000\357\222<\2326C=\220\316\346\274\210\026\301\274I{h\274\346\032\032=\273\016\366<\324\204\227<\344\244\313;[q-=\222V\236<-\231\213<\212\231W\275\267\347\010=\366\334$<?\017\346<\3650\025=\036\345f\274\224yt\274\207\202\353<S\3565\275\010D.<iZ\327\274\346aC\275a\204\204;\201\374\200\274\'\0169=\3651\000;~1,=D\324\010\274\347$O\274}\366{<+J$\275\230e\230<\177\200R\274\rH2=\337\256);U\006\254\273\353!9=h\330\230<|\367\001=S}\361<\344\0021\275_!5<7\253I\274\324\177B\273\344\265(<T^>;\316@%;\343\273*=2\272\"\275\272^J=G\347\360;s-\013<\3069\324\274\'\226\324\27318P\275\362\252S=\250\3524=\255\326\254<g}\332<\213\031)=\331)\313\273\336\314\343;\374*\206<\255]\352<\213+\006=+\021&\275\2054\017\275\316\224S=\332\254 =\357?,\275_\352\264\274\225\t\353\272:\313\023\275\332Xs;)8Q\275G\016-\273\370\327q\274I \027=\222~\245;\351\014\306\274\335!\360<\222`\201\273\266\271\021=\326_\354\274e\000%\275L|$\275\322\331\360<\274\001\025\274\361\244H\274\3205E=}`\211\274v\2016\275\246\026\255;\014\263B\274\326\215\0109>T\010\275\221c\336<LY\276<\035\302$=D\341\034=knT=\035\331\002=\373\267G=\205\305\256\272\007t\030=\252\371\225\274AG\364\274\237#>\275\0252\231\274>_\265\274\312%(\275\177&t\274\262</<a\320\026\275\220H\010<\340`\371<\222\200V=L^\350:\310\216\031\275\262\365\220;\225\374\215<\244\346u\273\226%\320\274(\2408\275` \314\274T\330\251<\231\225\374\271!T\347\272\354\030\017=\275\344\017=\274\362\023\275\363TU=\202\322\313\274N;\242<\270A\273<d?\354\274\220\263)=\325\257?\275W>\344\2744`\335;\036\027\344<n3*=2\005\330;\306vr\274|S\375\27474\320;:\2472=\033\356\220\27484$=\233?0=\200\366I\274\364=P\274\365\231\357<\222\025\002<!v==\272\331.=Y\002\374\272FW\237<\365\034\313<\227\032V\274\t\324O=\036?\327<VZ\025=D<-\275!\277\304\274?v\323<\271J\325\274s\014\210\274\023\371z<\323Vw\274\001\247\022\274\362\221\311;\223\022y\273\034\002A=\207\320s\274\277J\245\274\254\036\222\274\270\302\233\2732FY\275\241`\210\274t\014G\273\267+\202<Y\230T=\271\353M=\251\372\263<\223g]\274\305\276!=\216%\033\275(\003^;\271\033\'\275\237\220\r\274\367\364A\275>\013\214\273\313\013v<\345\323F=\345\020\373\274\276e\310\273\247\377\004=\333&J==\277\300;\n2K=Ch\333;\200LC\275\023\203@=\221\260\214<z\033\322\273\353\344\370\273\241\341H=*\367\350\274\356\363 =\267B];\036\343l\274\265\342\005=\014\252R=\273)Z\274;\216=\274\036\206W=\276+&=\311\347\n\275.YN=\234\274\320\274\363\177:\2753\371\032=\353&\n\275_\352\014\273D\2252\274|\244\005<\273\257T=\003S\217\273u\310\264<\303&\006<\010\255\025=\214\222x<\332\3465\275\244\372Z\275j\304(=\344z\355\274\317{3\275Ro\364;\0140\016\275\200\".=\213\254V\275\032\214\307\274\320\310\307\273&\304\223\274\216\300\206;\347B@\275\211\203L;\356\002\256;\242Gy\274>\3110=\325_\354\274,\222\270\274\2670%\275\016t\377<\201j9<W\237\223\274\226\276\265\274\342|G=\347K\243<\275l\233<\023\306\202\274\306\226\302\274\312\341I=\315kc<\026\264\026\275@U\225\274\236\323A=G\322>\275\336\365\"\275,\n\200\274\244\240N=\365\243\247<\036\207\232<r\357\275;\r\262\261<\304G\004\275$\233\352\273Pd\262<\350\255,\275\010G\030\275.\257\255<\324\230\r<;T\026<)\371>\275\265\374y;\226\354\261\270\341\374\021<6\271r;\345\373\236<:\t\262\274\256B\346\273@#A=\035`A=L\246@\274\262W\036<\203b\204\273\252\274\010=\272Y\334\274\236\271H\274\305\346\204\274\0315A\275\336\334\232\273\373\354\206<\312\025D<\363\363\254\274\312\014V\274\177h\030\275\241\322\027\274<v\017\275\273W\367;S\364\274\274\301\341\005\274\340\236\036<\360\222s\274\245*\324<=\025\262<7o\035\275\241=Z=\0214\241\274<{\301\274\225\013\351;Cq\242<\255\251\024\275\212\'\313\274\364\320\311<+\021l<F\377\266<\275M\033\272\017\350{<\r\355\334\274\235\222\030\275\213\306\331\274{l\373\274\277\264\225\274\236\276V\275O\306\271\274\r\203\235\274d\344\000\274\324t\216<\272u\200\274\0176S\275[\353\016<6\354\212\274\246\341Z\274\272\227&\275\342\322\355<?%\314\274?\365N=\251\306\264\274\266*,=\207\024\351\274\375\030\252<\272_+\275\224\365\033\275*\006G=E\240C=\252\252\376<\003\005v\274Xs\014\275_\352\000=V\034\365\274\014[\3729\024\370U\273\214\332@\275\353\310^<l0\337<\201\232\211<\306\357\006;\027\260$=\371\337,\275\026\273\356<\207\034\347<\262\247\271:=\264\230<\005S-\271OO\337\274\022#\250<\313\272\3748\022 F<h\326G=\311\230\020\275\343+\340\274\t\302>\275W\355\"=\206\004\035\275\331\200;=(\240>=\244\347K=Ph\027\2748\023\005=Cg\266<\221\334\203<\007n\007=!/\035=F\334\200\274\032\277\016\275S.\317<R^M\275\374q_\273\033\245\307\274\260\302\226\273C\274\312\274<RD=\311W\016<\214b8\275Z\304\250;\224\326\204<$\\\325\274{\023\277\274\021\217;\275<\013\024=e\236\265<L\372\002=\222f\205\274\037p\306;\264\230\025=\326\336\376;\312?\312<W\267\000\275\200\277\034<\343\333R<\033*s:\024\260A\275/\273\372\272R\214\265<\273\370\330;\277.\214\274\372\230\334:\336\rV;[\220\016=\366\360S;\373\337\372;W\332\237<\022\307\332\274c\321b<(\212\363<\203n\336\274\325_S=\263\'\244\274m\224I\275\342?F=\302O\033\275+\340\002=\004\313\032=6\3537=r\216\256\2731\202:=\357A\243<\013}\t=I\030\034\275z\0100\275kcN\275\247\326K\275\032\307I=L\326E=\330\264\365\274_\302\006=\020\2253\275\327\237\374<=\337 <\362P\000=\332\320\024\275R\037_\273\031\330Z\275fJL=q\350\315<\317[\314\274\3755\t\275]1\037=(=>\274%]0\275\024v\006\275\347\251\013=\315,W\275\351\2314=\370~-\275\177`\231<\216Z\335;\000J\345\274\235\365\020<\316vM=\0032\027=i\002\221\274\246][;\3709\220\274w\342{\274\352\2038=\003\320\'\275C\020\303<\376L\255<x-><\2470,\275Y\n\313\2744\376Y\275\366\3242=}\241\010\275Z\365\242\273\307\261\220;c\352\r\275\247\206\360\274\370n\017\275\340\267[<xF\266<@\354/<\243\316Q\275\365\337\010\275\031\363\314\274\207\260<\275P81\275\223\355I\274\355\245T<ZK\023\275>{\356<A\n\217<\363|\t=/n\347<\205fJ;PC?=\201~~;\206\366>\275l\037\204\271\344L\013=\356\274L:\347\261\276\274\303\322H\275)\027\335\274\330\326\000=j\321\242<_\031\260<\235\010\353<@m\014\273\210\205\016<\037IU9Q(N\275\246#\240\274\320\250Z\275\351\236\035\275\204\226\227\274\361\361\354\274\357X\0379\200Q\t\275\010\342\006\275z\036\315<\030?\n\274\320\357\014=\250\246/\275\264\3301<\262cW\275\0055\326:\006\213\351<\252\027\246<\355\037\031=\310o\253<-\312q<\212\274\271<\006&\214\274\375f-=\265#\020=5tH\275\242\001\021=\255e\262\273\213ER\272\374&\343\272 \253\225<\315\203\257\274,4\337<\307\341\013<\334a\250\274h8W=py\235;\243\246R\274y1.\274\202\240\021<\373\253T<\3514\235\273\036\r\005\275\214q_\273\237h:=d\361\036\275\"\255\371\273\350\320-\274\377\276C\273udl\272\241\263\241\274\201\324I\272\335~&=\27577=(\005\337\271\345\221\006\275\025\264\001=\270jT\275\031\014+=\254\266\210<\354\210\235\274\303\261\205<\311Cg\274\270n\"\275\340\340\367<\365\2366=,\243/=\227\003\242<QB,\275\032\377F=\267(*=}\207@;\314aG<e~}\273\367.\n\274Fi\031\275\225\212\224<\3362\325<>\335S\274\037\304\007=-\305/=\352\207(\273&\023q;\310\304\253<\342\270 =JN\263\273\272\345)\275%= \273g\267D\275\257\202\216\274\306!!\275\236`S<\035]\375<(f\337\274Mj\314\274\313\031\270<\332\373s<\033\225A;\371\262\327\273\020\'\377\272\226\342\316<df\204\274K\"%=D\\\351<\366\250\366<\232\242S=\274i\211\274H\207\323\274)t\245\272\267\037\203;\002\214K=\323\025\246\274ui\030< i\251<x\263\212\274\216\210\006\274\327y\035=*F\033=\036\362\304<\325 >=|\203N\275\341\327r<c\276\353<\270m7\275\225~\231<O\026\344<P\227\301;b\367\351\274AS\177\274\371\252\333\2746\240\212\274\311\247\301\274\013\252\021\275\274\354\004\274i\232\366\274-\251\000\275\330\n\017\275\331\234<<SY\220<\27447=.;%=w\"\003<\377\230@=\363\377\211\267\331\363\341\274lfi\273U\371\035;\271$\020\275\376\234\025=U\027\216;\222x8<$K\"\274AH\002=.\255D<\\d\221\274C\2352\275\270$o;\031kG\2748\300\353<p\320\034=>k\367; \332B\275\234\201m<\215\366B;\367($\275\376\037\024;\257\214y<J\206\'<R]K=D3\302\274sV6\275\037\3047<\026\222\t=\000\3429\2755\226+=\363\023\013\275\201\362\250\274[\005\033=\270\227\301\274\260c<\275#a\237\272Q\377$=\023g\037\275\213\304\213<!\010\262\274*EC<\020\013?\275\026!g<\004|\014=\340t\232;\240{\010\275\362sQ\275\273\177\007\275\247\330A=g\324\344\273\225^+\275\360\230\230\274\r\265;=\257\202\203\274d\006\271<\210\021V\274J\275\214\273*\351\261<\220\253\377\274\357\326N\2754#\372<\037p\350\274L\327<=\n*O\275\202\r4\275\331\004 \275\314\371(=\'\334B\275Z#\034=\305\375\361\273-v\217<{\030\244\274\n\237\003\275|&\317\274G\335\027\275Z&\267<9*5\275 \031Y<\346\274X=%\251\303\274\327j.=S\261\321\272o\305\003=+5\235\274U\375\314<\232qO\273V\3764=\377\373\020\275+\200,=\237\261L\272\264^\337\273>\360\347;\317\207\331<\247`\330\274\206$Q<\321\204\002\275\216\210=\274(\234\241<\332\227\251<t\336\366<V\224B\274_\346E=\267\3640\275\3034\254\274u\221\350\274\242e\361<\216\246C=Db\300<\342\022\224\274\'0\372;\357\303\"\274\230\2014=\213/\227<\244\3346=?\261}\274\241\265)\275\230\\\316;\306wR\275\236Z\217\274\2313C\275\237\250Y=!1\255\274\016u\313\274@O\263\274\n\246\313\274\337\031\311;+>\227\274`L\232<\027\017M<\316\227;<\036\2273<\006\221\204\274\354m\255</\343$=\217\030\036\274\024\344\350\274\t|\263\274!\312\026<Jv\r=/\020\306\273\327\320\333\2730\361J\275\036[\215;o\240;\273\3563Z=\033\202\326\274\270\355@=\202\271<=*\350$\275\315N\006\272\315\330\264<\362\006@\275\271\200\250<\374\027\342\274i\327\327\273\360aI\274\306\007\363\274\256\220\375<9n\033=\345p9<df)=\321\'`\274\324\314\255<Y\306e;\327gA<\274\225\341<D\2759\275\263\017\330;\251X\373;\301W\335<\337n\241\274\rUL=\254\nG\274fa\221\274S\271\022=\025\254\312<\335\3703\274=sH\275\2206)<<S\243<\213G*\275\215\353\000\275F=n<\322\0222=J)J\275\007\353\342<*\346K=X\226\254\2742\204\013;/\343\377\274\262G\325\274\313H\365\274\223\006\032=\n\317\377\274\030\225U\275F\353\037\275\232\013\312\273\033f.=\212\027\250\274\317\246\373\273gaO\275k\t\212<\232\360t<%~\2228$k;=\301\301I=d\335\252\274\026\307\233\272\214P0\275\307\244e\274\373$%\275\3258^\274\226\242r\274\\`R=\031\270C\275\217\035\252\274\345\216\276\274\014\'Z\275\350k\021=\322\357G\274\021JH\275\237\345\244\274^\2031\275\270(>=Sc\262\274\331\266W=\201A\033\275eG(=\261\254%\274\372\177\315<\207\255\247<\nD\307\273#\177-=9j\025=\316\033\345\274(\014N=W\025\217\272b\177\005=8\341C=\212\243\263\274\235D(\275\252s\035=\251\314 \275w?7\275?A\004\274\0018\274\274\333\r1\274\032yL\275Dd\006=\317\311t\274/\340\032<\013r\304\274!\206*=\352GO=9\027\356;\317T5\274F\312=\275!;\003\274\346r$\275D!\370;#\177\303;-\315\316\274\250\307\277<n\276\345\273\207\347@\275a\030\000=\366\354F=*\377\"=\003\276\253;rs#\275eiT=L\1770\275)\274Y=W\374.=\302b\024<\201\205\252<@\034$\275<\270G\275\020\271\024=b\361E\275\255\301\204<sr\213\274\222\253X=\363  \275d\023?=\035\207\241\274\331v\355<\232\tZ<Q;\247<t\275\'\275\005aN\274\303\330\273\274R\303];[/&=\215\363\031=\236\376B=$f\214\274\210T\246\274r\252\313\274c\207F=*\257e\274\337.\t\275\353\024\033=yS\232\273\232\341\251\274\035\357\370<\244\312\024<\030\024\272\274\203\232\206\274T\202$\275\310\030\002=\006\345\\<\275\300\321\274\346\215\034=\217\3258=4\303\314\274>\340\007\275\374\007\256<c\212\013\274\364|2\2733\344\"=\212\340\260\274\250\247\257<\303f\032\274\212<\223\273D\027`\274I\327\001=\023\0050\275\327\365\000=\274|#\275\252\325\262<k\006\236\272<;9<!\256\233\274Xl&=\340\213\246\274\030\250\271<\243U/\274p\211\375\274\327rN\275\334\001q\273\014\211\326\274}\371\222\274\3008\221<\262\217\t=\351\246\343:N\240\004\273\027\227\334\274:u\034=KR\"\275=61=\213\242D\275NQ\025=C1\251<v\355B\275\252\302\001\275\227)\365\274\250\274\261<Y\262\017\275\201\212\327<\321]\005\274\341IM=\377\220K={\215\020\273\227\206\370\274\'\336T<]\314C\275z\223U<\273\">\275\272\320S=\362\261$\275\205\202\010=$@\001=%\276\n;0K\366\274\3749W=\374\236\204\274/u\271<\000CZ\274~jU\275f\274V=\215\203\215\274\227\336\005<\376\")\273b\005)=\237\352\217;\'\355\255\274\213N1\2756O\257\274\331J\341\274e\326\362:%\257\036\275c\311\363<\002\360.\275\240\nD=]\0133\274\017\013\360<\240\231/<*c\346\274\356\257\237\274\301\022\023=\236\321\031\274\341\352\024\275,\261\324<\375\027S\275\326\221\302\2749\271Z=]\256\273\274k!\276<\376.H\275\337\3211\274-\020\354:\336\344\241<\335\305\204;i/\353<V\3601\2753\275\037=\231\017i\274l\337&\275\253\271\323\273K\334\364\274O\273\343\274\270Y\025=\360./;\370=X\274\007\"\035=\276\r\306;\271\326l\2747e\327\273V\332\n\275\370b\276\274u[\203<\204\251H=\253`\344\274\001\206\"=\377\"\212<F\226\315\274|\034Q\275\020\265\023\272h\003\231:~>/\275\343\217\022=\322:\206<\345\204g\274\365!{\274\336\341\325\274\325\002\004=|\035G=/\233 \275\010\233\224\272\177A\204;\036\367\210<hw^<\310%v;k\031\021=/[\252\274\305\'\333\274K\220\036\275\rN\320<\"\237\004=\326b\332;Hz\020\274\002\347)\275\300\255Q\275\224\355\322;\365\245d\273|\3264=O\275\360<m\t\377<\014\000\027\274\335\305\336<{\333N\275r\354\316\273\226\241\314<\003^B\275P\233\326<\305\030n<\234\261\227\274h\032\035\275\323&\344\274\342A\220<\252\234e;\037\320\007\275\310U\024\273\205\022\033\275\304\367\333\274s\327\240\273\337\025\324<\344\354:=\\\341\270;\273\033\236<(A\356<\024W\306\274E\3619\275YW)<\303\202V=\351;C<\200F=<\242\305B=L;\024\275\346Zg\274\255\302\r\275\326\035\346<\023\210\371<\032\263D=4\r-=\220\241b\274\342-}<\304\025\245\274\271\242\005\275t?\217;#\326)=xyD\275M\r\257\273^\007G=\204\022\376<\342\301\344\273{oW=\305P2=\300 \201<;4\033=AzB<\365\224\324<\336\210\324<\336\227\254<\207\200+;S\016p\274\2730\016\275\007\356)\275\301}G\275\310\031\234<\236\203@=h\302\344<\262\030\235;>K\004\275h\270.\274\321\021\260\274\'\364H<\022\347\376\2741\037\257\274\326` =\256T;\274\366?\233<,\257\036\274\r;\2579uf&\275\207\261\370\2733\320\373<2\302)\2750\205n<G6\002=\273A7\275\202\023\200\273X^\020=\252\204S\275|\253\244\274I[\351<\250WS\275\301\302O\275\014\341O=I\366\273\274B\313\000=\035g+\275\254`\306\274\216\004\310<\006\336\251\272C\351N=-\376Y=\tt7\275\024\374\254<-\362-<}\003\035\275\234M\211\274\256\330\034<$2T=\207PZ\274\372\026\005=\333\205\027=u\326\003=\230\317\353<|\316E=\017n\023=\227\0272\275uC\355\273\321\363Z=g\264\363<v\343*\275\036\255(=\244\211Y\275:(|\274\245\326\022=\232\005\357\2730\032\004\275\"\275s\2749\273<\273<\230N\275Aw\010\275@\231\272<\020H\257<\302\276\220\273*vu\274\202\213\364\274R\320\235\274\303\251\352\274\006,\005\275\252\257\375\274\241\035\375\274=\212\n=\255\305\266\274\262/#=\372&\271\274TK\035<\275:(\275\257B\010=\375\216p\274\370&\030<\274R\002\274{\016\325\274\225\020(\275\341\257W<\217\032\212;\360%\023\275^l%=\220;\302\274Gu\005\274bC\370;\366B\034==+E\275\272\373H\275\210v\016\275\213\rX\275\247\242>\274)]?\275\355cj<\336#\315<\024\027\330\273\275\017\227<.\007%\275\261\226W<@(\036\275C\t\032\275_\005\t\275\375\363\316\274q\n=\275z\034\224\274\206,\t=\3142\371\274nel<\372\3369\275p\314*<\266\021\017\274\241}\013\275[r\020:a}A=\033gI<\226\025\375<?\306\371\274\310\2409=\022-=\275X\205\301<\324\354\r\275\013\003\331<\274\372\367\274\274\303\221<;\242\273\272\256\354\324<=\032\223\272\017H.<\334\322\303\273\tj\326;\202<\033=\234\\\347\273\216\364}\274\030\232\322\273\321\236,=\323\307:=<A\'=\227\307\"\275\032\300\004\274\345\374I\275x\254\3649\032\347j<3\n%\274\243\366\265<\207\2259\274\"/S=\361\266\301\274\036h\177\274\256\002{<|K\220\274Q\367\256\274\014\251\330<<\211\232<\034\236\225\274\310ZD\275\362\202\257<$k\237\274\255\025\360<\233\2577\275\023s\005\275j\315O\275g\242\013\274\242;O=l\367\n\275\301\352;=\233\212D\275\305\006\021\273\354\246\035=.*\363;\022S\336\274~\002C=\254\317\026\275\246l\365<I\313\036\274\256\3357=x\322\230\274\034\376U=[\032X;B\304]:yI\001=\213\037*\275I\237\247\274\350\032\n<]\013\037=\314\201\016\275\304\376\224\274\307l\302<\266=\264\273e,:=\241hl\274/\200>\274\2713\037=\237^\324\274\245\014\321<269=?\227\251<\236Aq;e\221p\274\363\370O\275\030RU\273&.\377\274\022\301\006\2748\254\010\275\233\004\233;\312\'\003\275*O7\275K\2330=l\326R=\341<\300<\3141U=e\331&=\257\347*<\271\224\333;\372\307\274;;\314*\2731\253\022\275\031\332t\274\255$\036\275\r\341\353\274\010\223\263\274\025\257\306\272\244\026\370;b\033\034=\031\236@=\273&@\275l\275?\275/\336P\275K\221\301\274\343\237 =\232\020\252\273\316M\031;\210F\340<\007\003:\275m\254@\275V\001\220\274(\006\260<x\260\217;\250eM\275D\031\027\274\363\276\251<\327\206\207\273a\316*<h\200I=X\031\216<\252\356&=\307\314G=\326\352\177\274\200\t\363<\333\337\007\273\260\311\026<\324\302T<#\264\021\275\226\253\035\275\223\013(\275g\337M\274\342\350\005\275\312e\342\273\310\220U=S\274X;\207\'K=K\275\274<V\220?\275e\302\312\274\256p0=\354\3718\275\223\032\251\273M\275\202<mE\324<\353\311\013\275\230\273.\272\220\026T=Z\306\031=\261\333/\275\222\257\t\275\266\315Y<#V\t=\221\255V\275\271\354\300<&\257v<\3466\232\273\351p\330\274\0339\365\273\3162D<\326\0371=\222\'\247\274L\314D=\033\323\265\274j\230\233\273\006\333\250\273\031\336+\273)h\332\273\251\203\241\274x4\241<\320\320\207\274BG\205\274 \3128\275\020\251.\275\323\020\335\274A\177\322\274h;X\275]\236=\274\353L\233;\340\345\277\274;\313\025<\222\320\243\272:>\317\273\001\014\305\274[\027 \2740\014\303\274:\304\001;\272\224\276\274\366\272$=\325\244\271<\353rO=\312\320\027\275\321\010\316<\001\376J\274\226\215\264\274|\225\224<\242\017G\275\364\204G\275N\034u\274a`\005<\255\017N=Sbw<\276\0312\274\327\267O\275\226\3636<m!\337\274\017z.\275\364\201\270;:\033/=M}\202<\2438\253\273\256\225\035=ud!=fx\357;\273!\034=\037\204?\275\250eo<\241\303\307\274\347\227\376<\212\312\014\275\272\376\007=3,9=\263f\203<i\230\033\273\36219\275\"`U\274\375\257\206:\302T\371<YU\212;\235b7=t\022\t\275FpH\275\274Nd\273\331w^\274t-\251<\361ws\274(\264==\016X\262;\003B\253\273(3\240\274b\266S\275F\223\034=\334\265\007\275\014R%=\351\265\365<^\037\266<\275\212\206<\201\034V=\366\362\214\274Zk\264<\223j\017;\022\205;=\022\033\"\275\253\265\252;\315\006,<Mp\206<J\225\366\274\261\263\030=\016zN\275D\220\312<\014b\206\2741\3456\275\266\245\253<\237\350\326<\372\265\316\2741$\026\274\227_\224\274\021\020?\275\257_\n\275\215\277\313\274\215\013V=v\243\221<\362%\037=N\255\265<\272\204\035<\3249\305<\305\340\317\2744U\304\274\235J\313<\234x\026=?\241\216<&\352\037\275\206\2061\275\205\215\242<\r1\232<\'\014\221\274\212\037\000\275\253\177\031=0%W\275?\273\256<Z3e\273o\362\031=/\331E\274\027O\216<\270\246U\272j\030D\274\334H\225\274W\"A=\360mW\275\264\357s\274M\374\"=s\257\233\273\250?H\273}Is;\356\303D\275-\224\007\275\371N\037\273\204\336k\274DL\254\274N\207\215\272~8\301\274\257\377W\275\273+B=)0\033\275\037\267\334<\366s =#B$<\240c\342:\375\345\000\275W\006\231\274\271Z\334;\363\357\277<=/\276;\363s\224;\363H\333\274\352&\237\274\353\2069<\r\217P\266\273\355\003<C\007\236<\001\322\341\274\307\353X\275#8\032\275@\244\364\274\336*\032\275\243j\253<a\030T\275\016\007\360<\363=P=e{\2179\344\327\245<L!H=\347\236H\275\305U\320<`\313\366;\273\365Y=\263\340Z\275H\263.\275\220%\367<\036aj\274\200VW=\200\334\"=\335\246\024\275\271c\002=\307P\010\275b\224X\275\365\244F<]\200D=\263\207\036\275.c\245\274\r\236E\274U6\026\275\277\037\006\274\227xG=n\246\010\275&S-\275r\321\n=\304\266M\274<\0319=\334C\362\274h\226\'\275\272F\324\274\333Q\210<\306\240\t<:{\371\274\363\363V=\364\001\263<\263\214\034;}5\363<\360\217Y\275E\037\250\273\271\2070\274\252\252\010\275pE\316<\'\035\330;g\337u<hp\355\267\345\030\007\275\006\201\031\275\374\245N\275\0241\342;J0\021\274z\321\031=&l\027\274\026J\037=\347E\025\275\310D\254\273\250\236\217\273f\370\215<\031\357b<\214*J<\317u0=k\033\333\274\217\263\326\274e\373\200\274\277`#=\202\336%=Cw\026\274\331[P<\013\353\353\274\0219G=\336g\000=\003\250\016=\311\252l\273\243\315\337\274DE\320\2727\244\372\274nEQ\275sSE;_\203O\274z\335\352\274\234\210\033=\264\301\274\273\271\240G<c[\273\274x_A\275#\354T\274\370n@=\237\375\250\274\377\\\217\273\220-\321\273\266I\307<wD\221\274We8\274\245\313\001\275wq#\274\206\3354\274\361\017P\274\307N\254<\023\3357\275\251z!\275\344\r\234\274\027\\+\275\tK\313;3\037S\273\346.Q=\344\277\2429\364\320\225<\255^\021\274\343\377\242<9\242\374;]\364:\275B\2437\275|\347\004=\235C\362<l\300R<\r\025W\275\355\377L;\345g7<-\240:\275\3554X\275AH\350\273;\254\221<\245\037Y\274I\310\201\274j;!\275\242\350\312\274\016}\025=bQM\274<\264\225<V\250S\274h\366\227<\204hH\275\376\216\211\273\330\014\252\2734YO=~?\240\274WX\014\275\232\333[\273\031\205\224\274\255Q`<(\324S\275\260\246W=u\030\370\272\243|C=\371^H=\005\334L=E\327\313\274L\367\366\274\253\223;\275\310\222\214\274x\001$\275\026\357`\267\276T\021\275=e\005=ow2<}H>;\307-\t\275S\275B\275t F\275c[\261\274\313\207\355;g#s<\315\360.\274\360j,=:\007`<J\307\036\274\250\361C\274\344\344\032\274\375\301\303<\016E\260\274\273T\264<\301\304Z=lvE\2757\325C=b\2201\275cM\264\2741\206\'<\202\377n\2745\211\307;\204\035\217\274)\215Z\274dx+\275\207\261\323\2747\033[<!\361\277<T&2<\344h\013<\034EH\275\023\261\020\275\237P\353;\371\350P=\355\020!<\002\027A\275D\035N\274H\370\035;Fb\375<\3752h\273\322v\325\274\370+\364<\305?E=\0272#<g\227-=\353gQ\274\236B*\275\376=U\275\241.\010=\246;6\275\335\246,\274\002\265\031\274\034\3667\274O\304#\275\351\032\324;K\rz\274\346{\335\274\004\343M<\311\356/=\306D\211\274\"\352\261\273P\362\325\273\362~\022\275\013\027<\275\205^\323\274E\\\002\275~G<<\330\213\024\275#G\022\274V\360\r\274\035\211\002=\237#M;D\251X\275\0352\360<\'\325b<\303\332\233;a+\013\275&\016\025\274f\216\305\274\000\'\202<\323+!=\231\251\237;\210\225U\274i\351\037=\366\373F\2742r\201\274r\336K=cO\265\274\331\256$<\"8\346\274\236\037\267<v\266\013\275\337[#=\333v+\275\233\346\220\274\366\231U=\201\003\033\274\266\222\270<\016?\200\2743\246\225<o\033\031<\251\274\217\274S\331\005\275\265\3510\275*\'Q\275\331c\201;\274\177\321:\252\262\000\275\203}M=\3625<=\2352\235\274\270\006:\275\342D\214\274c\374\355\274Q\027o\274R\004\t\273\247\223\347\273!!\"=\341\373\267<\324\306\272<\213-\231\274\224\355g<1\220\344<\332=\032\275\366\2622\272\202\215\017\274\343;\273;DIC\275\265\2037\273\365E\017=\351*\004\275%\317\032;\332q\311\274\371H9\275y\022\034:\315iZ=3\263\351<P(P=\022\254 =\336\314\324\273\305\306\'=\276\374B\275\264\211\322\2746\001\036\274eT!\275\311$\204\274\361r\206<\324\337\330;b\321%\275\317\001\024\274H\266\266;\032\035\035\275\003A =&\367\370;G\027\344\274\306\323\366\272\327\026\001\275\315\224<\274X\2516=G\332\001\275\000\211\022=\226\336 \275O\377\034\275\237\245\000\275\3742\325<\251?\021\2754\357$= \2651=r\226\266<el\337\274\210\344\262;\333\251\237\2746\367==VUN\275A+\202\274C\216>\275\255el<\017\321\006\2751\'X=\340\326\310<\027\260\266;\263\210\361<\222%>\274\014\252\351\274\3248\236\273oz\237;\311\340\020\275l\266\336\274\276\317\254:\330V\026=\247\330\027=Z \232\273u\217\230;\2404!=\337\256\005=\337\022\024\275K\242D<o\310\256\274\263\025\202\274\333\224\016=\256\030(\275\224\302B=E\034F=K[\200<\236r\337\274\t\227\007=\337\226\346<\0253\021\275N\r\251<8\377\210;Rt\254\274\t\031\246<\325w?\275L\224\311\274\210\276\304:K\361\250\274\024\026\360\274\017\335&\275,\017!=aG\236;\306\222\346<vP\255<\023|5<\263n\231\2743U$=\037\335\246;\316t\036=\276\210K<;\244\372<8\t@\275o\362 \275\206\242\361\274\256p\326<\035\2721\274!:e\274((\035<\361a\036=\226j\005\274B\225\'=\265C\033\274K*g\274\203\370\216\274K\004\357<\312t\030=\250 H\275y\372+=\336\206A\275(\246\022=\\4\245\274\356\374\215\274X\203\200<\324=\013\275\315\335Z\274\013\025\261\274E\364\333\273L\375\014\274\276\363\261\273,Z\326;,\3036=\020v\r\275;&\221;\200\031\377\274\030\004\234<\022V89\354\222\004\275|\334\254\274\253K\001<\237+\022\273\356\371Z=Y\362<\275s\350E\275\341U\007=\216!\374<U\243\321\274\326\331\\;\037r\034=\361IL\275\317\004J\275\343\3555=1Q\014=g\205\017\275^\t\335<\212\376\327<\350\334\020<Y\003G= HR=\225/\023=\262\313?\275\265\222K=\022\272&\275/\301\034\275_!\256;\357\010H=\0017\024=\250\3741=\330IG\275O\233\270<0G\313<\017\375\201\274\030\362\014\275\306\376\016\275\277\320\345;\346\002[=-\0239\275\021\330\353\274\261m\317\274\301]\320<#\357)=\346\335\375<\2778?\274\222<A\275s\031\376\273m\270\312\273g~\323\274\320\322Z\275\321\021V\275 \251 =\323\232\324;\363\305G=\034>\000=.\236?\275\2273.\275\377\305\326:r\350\021\275%\2615;\'\347\373\274\007s\017\275\370dF\275\316C\030;\353\352\200\274 \355\244<$,?=\237\263\340\274\262\351\036\275\025\3402=?\212\023\275\035>\346<\301\3342\275)\214\001=b\241Q\275\241\347\177\274\232\350\227<\304sY=K\023Y\275j\1775=\321\253%\275\202\303\216\2740\315\206\274\026\211\255\2741\304\224<\245+\013\272\213\300\331<\254\000Q\275\214\243>\272\341eT=\362Pv\273\324,\3318\306\360\255\274\304\244{;\373\245\016\274Y\312\364\272y\200O\275\312\321\312<\344\265\017\275VX\367<uAq<p\334v\274{~2\275\303\324\262<\201:\3609[\013U\273\215\263\020\275h\000J=y\257\n=\204fu\272\n\201\334<\327~-\275lN\203\274>\006#=0M\020=\204\207\350\274\3148\013\274\330\3772\275\243\256F=\253+\214<q\021\363\274\317\273\223\272\313\366^<\270\036W=\325\267\236\2749\205\006\275\010\027\225\274\347\372|\272\003\363\032\275\226X7\275X.M=\203\032\264<\362\230\305\274\026sp<R\344\'\275\341&:=\307V\025\275\004\244\023\275\220\226&=\365\275/<^\313+\274^(G\275?F\374<\300\305z\274\346 \366<\234(\024;\317\211V<\241JO\275\24394\275\344[\303<\037.7\275\177!4\275G.\364<\240\341g\274\007?\002\275\270/\227\273\\\363\372<\007\225\247\274\355\317\017<\014\026\207<\005\241G\275\214I\343\274\036\231?\275\r1\335\274\231\374\031=\312\027\316\273\256|\'=b;/<\337\025O=Z\245\002=\307\214\275<\017{X=\201\362\023\274\000\242\342\274\"\313\205\273\346C\027=\210\005\371\274\220\257T=Ir\253\274\277\374D:ve\025=M\303\317<\rQR=\371~\215\274\032)\007\275Ss&\275\350\346,\275v\264(=5d:;V\365\315<\352\033k<\274\3733\275`\'\302<\010\222\211\274es5\273\252ZM\275\237\'\024=T\260W\274o6\305<\201\0269=\302\346Q=\355\330\242;\330\323;<<\247\300;w\232=\275\274\317\321\274ul$=\375\376\315\2734\342-=\317\335B=Y\347\365\274\263\300\026\272I@\242:\016\307q\274\303\372\255<\310\006 =V\346C=P1\257\274e=\037\275\344\252\313\274\205-\001\275\214\304\234\274{\246<\274\200:.\275\r\356p<\001\205&\275a\206P\275KR\341<d\317\310<\232\002(\275\360\307\004\275`X\202<\022+\322\274\363GS=\"\241\277;X\\\365;\274\004\246\273\367Z,\275\200\177\364<\245\300\354\274\361\306Z=\024-\341\274.\325(\275\325\275\343\273py>\274\276\376f\274S\006-=\332\326|\274\021g\232\273{<\026;\251/\031\273\233\360\243<\313D\026\2751\277\346;\3627\354\274\0171\372;\010\373\024=39}\273\363\250\005=\351\032\257\274\351\211\361<!\334\200<\023\241\361<\356\337\364\27316\230\274:\334\013\273Fx>\275\000\304\316<\322\306A\2759\227\242<N\245\002=\320f\327<\002\303\252<v\227P=C\313%<\034[\013=\007\272\005=\200\374-=Un\310\273\320<\343<\313\033\001\275f\333\025<\"\212\233:\235\270\377<\3363\346\274\254\303\247<\322\t\231;(=-=\357p\034<Q\324\375\274\262n\275<\317\220\345<5W/\275\254\215\036\275\244\\\316<!x\222<\216x\013\275\250\340\342\274\304e\257\274\234\0249=!8\014=\217\302\342<P\\\027=\034\241\004=\246\273G\275N\215=\275\025N\372<\210\'\314<\336}Z\275]\227\021=\312\236i\273b\325U\275\375\345\002\275\200U5<\344H\355<\251\225\361\274\353\244\253<\"y\345<\034J\005=\3525W\275\276\0334\272\034d\007\275x_%=aQK=$\227\260<\234\364\205<{\241\372:\'_\367<\203rJ\275\300\340\262<\226\223Y\274\366,+=\215\213Z=\r\327F=c\022+\275\200\237)\274\'F3\275\374jH\274\001\032r<O\325M=q\2231\275RiH=\003G\024\275f\2571\274S\343\013\275D\341\030=\230]:=\2400\007\275O\035\230\274\025lI=\354\313\337<\014\251\247<\257>\021=\020\240\251\274T\277P=\321\306\"\273\365\305&\275\251Q\020=nD\353<\016\363\342<N3\320\27452H\272\3670$=s\240$\274yF\020:\324\"\035=\324\374\336;\261\356:<\235\020\220;y\215\221\274\346.\351\272\243\370\033=mK\276\272\317\306T\275/\014n\274SSF=\323\372\007=\033\251\261\272\322\030\017=\261\220P\275\233\0323;I\306\363<\336\207\303<\247\2446\275\014\203\"=\251\222\"\275\226\232N\274\000\274%<\350\006\333\273n\244\274\273{,\027=\235XD<07H\275\361T\t\274\236\026$=\205\0339<\355)\360\274\373{\221<9-\334<\215|\020<\301\375\017=\331\375\221\274ox\016\275\022\037\264<\331\006\371\274\t\373\n\275K\226\005<E\353+\274S\275(\274\347/\326<\232\265G\275!$,<\363\355:=7\"3;\023\2451=\234\240\320\274\014\331\245;\215\253\"=3\234\354<\'\364#=\2364\262\273\320 0\275\261\324\030<\3511\r=_\210\026\275g\334@\275\337\036\256;\356\243\014<\030t\204<6T\231;\304\204\342\274\273\225\251\2734 \251\273O\342 =\350PP=\370\021\210\2733K8\274\301P>\275\350#C=\255 \354<<j\010\275\223H#\275m9\035\275x\216\355\271\310\350\027=\256\340?=\330\006\025=\346\363\207:$\350R=\240\333\t\274\032\302\245\273\010BC\275\272!\037=\377\177\315\274\004_+=``?<Pvw\272\016\210:=9\314\236\274U\274\027\275S\262\032\274\320\307\245\274\371\340:=hA\026;f\"A\275\031$E=L@\361<ozW\275F\273\225<\237\226\276<\274N\036\274\245A\265<__\272\274(\003:=\320\365r<C\n\331\274\334\331\353<\234!Q=\33432=F\240\247\274s\213\035\275>P\233\274\262\037R=\253y?\272\204\370?\275\212a\260<\326\302f<MQ3=\301\274\351\273\035\362\322\273>\204\256\273\265\244\026<\177\255*\2752\224I=\272l\010;\350\255/\275~\221S\275P2\364\274\253G4\275 >3:\265\001\245<\025\221\032\274\200\261\004=\361\357\214;\305\026<=0\3737= \267\034=\302~+=\037\254\351\274_\306\263<\007\363\021=\2728\367\274\023\337|<n\256\301<\321\230\210<\201E\265\273\271g3=\243\0304\2755\334Q=$|\002=\016\274\364\273\2361<=\005_\300\274KF\363\274\232\247\004=\307\377\032\275\213\311\334<\214\363\246\274\031\202\376:\022d\243\274\351z\016\275N\260s\273\221\032?\275\273JQ=\233\200/=\224D\224<\035\371\333\274\357\265_\274\271\305\032\275\2165\323\274\236\331*=\362\206Z=\037\342\220\274\030\207\'\275\2638\004=\252\362\334\273<\363\323<\n\225\014\275\014\340\030=d?\342<\235s\325\274\350\362\267\2742@\204\274m0#=[0L\275\226\363)\275\274\263?=r\243\001\275\020pQ\273r\210\3158\361\262\021\274\224\032\025\274#\340\350<D\016\213\274\025\322\036=\035/<\275!\362I=X\204Z\275\006\260\265\273\006\226\221<U\"Q=\366\201O\275\256\265\377<zR\020=9#\306<m\357\"=}e\021<\243\215#\275~\000;=\207\001d\274\371\306u<R\225\351\272W\3030\274\351\327\253\274\324u\004=\310\352G\275\207\305\264\273z?\010=`\303+;\324\352\264\274\301\010P=\026\313\t\275sJ)=k\252{;\316J\r\275\320\341N<\247J\033=\241\\\272\271RS&=\\\315\332<\226O\221\274\335\033\031=\024\250\203;[e;=\263\210T<k0\303\274\223\370<\275\256\324\035\275M\232.\275?\217#\275\331o\230<t\323&\274\267\304\306\272\267j\361<(j\005<\273K\213\274\251v\002<X\005W\275\370\332\037=\346\366x\273\234d\364\274\216j\310\274\025z4\275\024y\242;\010\021\351\274\rR\303\274\320\205\013\275%\200\245:au\261\274\343\335\350\273l\270)=)\321\016\274\201\207\235;D\254\363;\343%\221:\002\212\032\275\274\371\201\274^XX=\303^I\275X\1772<>\271W=x\007\207;\230\235;\275N\334\366<M\313V=\275\221E\274\032\332\271;\"\204\n=\200Q\373<F\301U\275\204q!\274\206\306E=\216\002\254\274\035U\345<\223\303\214<\231\262:\275<3D\2731\001P<9j(=\220C\217\274\t\323\027=\027\027t<\353>t\272\205\363\032=#\242\213<\365\207\371\273f\325\021=\200\261\230\273_D\317<`!U\275\177\2265=\250\000I\275\270\310;<\2515\'\275E\341\335<\000{r<\347\000\346\274\312\234\307\274z\001\034\275\230\301\250\274G\t\030\274n\330\261<\315\025K=\305\0161=\327\332G=f\314\'<\341\263E\274$DT\275\030\233\260<$\345\367\274\377MY\275\3079o\273g\276-=w\2461=\217\r\266\274\316\002D\275S\005\364\274\004\tK\275-\002\007\275\224<\375\271\357\352Q<\007\201\315\273\'{S=\260\273=<d4\023\275z\036$=\014\023\240<\334\370\223\274;6\030\275\320\317\255<b\223\312;\206< =\021\272E;\246RI=\022\337\001=\270\305\214;\256\315R=\314\257F=\217n\253<\332\375\304< y\335<\357\025\223<\212\013\325\2747\3169\273lH\022=\n\307\356\274\317\265)\274\241`b<\271\256H=\036\237,<=v\373<\325\220\216\274\207\262\256<=K\024\275\235\325\007\275\001\241\305<1\233O\275\201\360\2619\017\300\254\274\317\2075=2\206\'=H\216\025<\374\005\241\2743\323\030\275\235\301\225\274\376\271#<Z=\025=\036\351U\275fA\366\274\257\245-<\031\3319=]\233\022\275\212:\347<\n\3315=dLZ<\362\255\335<\240-\242<\263\363?\275\314\021,=\250\262\n\275\344\206\"\275\367\332_;\313\'5=\010\2147\275]\017\r=Ht\275;\326\3658\275\0230\031\275es\252<uZ\316\273\257\013\273\274\203\255\242:\026W\246<\363\300A\275\236\350\375\273\275\212\370\274\234\004\t=\211I\026\274\025\321\002;\376*\033<(\024\006\275PP+=\242\343\365;ht&=X\304I<.\336\272\272\321\305+=\266\341\026<Ui\253\270\371p;\275\371\021\350;\336\353\311<$\002k;8\303\032\2750M\026\275%\246\020=\323\2714=@&\253;\014>\022=\271\216\277\274\301\207U\274\254\320\031\275\307;J\275\335\343Q=7\222\300\274\316\034\360\274\2370N=\3553,<\230\034\270<\031\275+<0\247\241<\025\260Z=\354F,\275\2514\200\274Z9\r\274\203\364\002\275\272\257\024<\261L\375\274\210\'\027=\3635\245<[c\006=U.+\275J\216\026=\256\033\002=\357nS=\332\227\374<z\364\221<\331M\267\274K\255O\275Q\246\306<\r-N\275\302\236\017\275\'\305\312<<ey\274\025\2447\275\340\331\212\274\356\331O=S\2032=\213\273\240;\376\233\013=\256\005A=\341\245\347<\021\203K\275\373\361^<Z\030,\2754\017\342\274\347I!=r\272\016;\272\033O\275\337(g\274\221\016\300<\315\260\264;\177\337\034\274\356)\263\274\3437c<\301\301\032\275\266\003\017\275x\216\234<\024\242\021=~s\345\274;\253-<\343\310\004=\265\275$=\313$\341\274\251\266H=\260H\207\274\023pC\275C\005\306<?z\021=\312\345G\275\346-q<\223pE\275\323J\030=8\317\307\2744`\266;*L\343<2\271\017=\331\334T\274\216\215(=\275z/\275\310\203!<\365#+\274A^9=\233Ml<d^\022\275w\372\001\275S\312\225<\344\313Q\275\203\360\346;\355\372\033=\022W\025=\311\251F=#\355P\275\034a\354<\r\312\'=\3257\002=\352&\231\274\374\0205\274\021\025\221\274i\034I;$\\>\275\\\252\335<pj\025\275Z$W\275\026\345@\273f^\216;AI`<\261\207\037=\237O\255<\023P\'\275\357\303\303<$\317\207\274\354\270L\275]\350\322\274\2174\035<\t\3076\275\346\337\355\2746,\034=\010s>\275\311)O\275\n\272\032<\204q\017;Y\256T=\277#>\275\r-\003<?\315M=#MW<>\344\025\275\'>1\275\301E;\274\276\255\007\275\332\022L\275\034f\003=\213\263\340<\034\377\267;\0148p\274\202\014\206\274u\363+\275\251\2328=(h\'<\365[\345\274\021#\312\274m\207\367\273\245U\'=J\2523=\200\310T\2754\033C\273\\\245\375;\212\3338\275\216?Y\275L\261\354<\307\027\365\274\234y>\275\032\232+=\247\026)\274P\331\312\274(\374\265\273\353\002\242\274\234\341\314\274JH\036\275\313V\005<_D\315\274\274\216Y\275\\p3=R\214\204\274\245\320\255:\376\300\355<\026{2\275\235j\037\275\335\220\245;\2642\250\274\027.\231\274\266\324;=\253A\241:-G\270<B\237B=u\3417=\177\342\013=\343\274\262\274O\240#<\233\027}\274\251\200\216<\017o?=\321rW\275|,\337:\361Q\032\274\235\330@\275\'=%=\3517\022=+\366\026=\203 \006\275n\376\205\274\256q\247\274\2578\341\2727\224:<n\367\342\274\327\021\257<\252\336(\275\234~\177\273\317$\023=4\301B=\013_W<\352\221\035\275|\373\";X\273\035=\350U\215\274\r\0027=\240\326\242<F\255)=G\211;=l7\340\274\314lH\275\304\006\031\275\341!\032=4\256\374\274\254\016\326\274\376\3678\275\373\373\244<\312\231#=c\2703\275J\3575=a\001;;\003\342\000\275e\301\227\274\245\204%\275\213\022\203<\257\024=<\362\256\r<\325p\270<\344\034\251<J\317L=sn\026=<\374E<\217O\250<a#v<^%\250\273B\017\322\274\226AM=1\273\226<\373\317F=\357\310\000\275\343oA\275[\305U=\350\361\360<R\031r\274/\223\256\274\336Y\016=:X\226\273\354\210\254<;\360);N9#\275\373\264\266\274f\244\026=\352\014k\273\247\345\323\272\177|*\275\234\371\360\273\211\014\025=d\350\035\275\376\275\007\274#\345\206\273nT\300\274U\305 \275\247)L\273u\254\001=\260\210\306<\265\nX=\337\t\024=\367\314\352<\251\r\n\275,\347Z:\300\232\014\275\210L\352<\266\250\325\274\304\367R\275\020\367\033\275\354\262\256\274`\347+=\216zu\270\242/\224\272J\036\025<\247\361\030<F, =\2131\362<n?\221;\021\324F\275\'\261\231;\235\273Y=v\304\316\274\347A\016\275\311\350\021=\327\364\023=+\333\237\271\017\351\350\274d\204\325\274\033\304\035\275\252\265(=7/R\275{l.\274g\310\243;1i\220\274o\1771=\340t\003\275x\373\3438\315\277\017=\303RQ\275T\323\305<\334$A\275\001\261H<(\252L<r\020\340\274f\266\025\274\201\206N<v\024i:\262\0107=\303\020R\275h;G=\013\340\361<\257\216\201\274\\\305C\275bb+=C{O\275t5/\274\253\'\306\274&\342\017=INQ=\0212S=\315\n2\275s\320\225<\236Kn<Y{\022;p\272\036=\3704\035=\272\323]\274\267<#=\323\354\007\272\330$\024=\322\2505\275\205\260\001\275\210\307\234<f\2539=\374Nw\274\315\236\276<\317\004;=\346\000\014=*i+\274\361J\244<E\0035=\302\341\364\274\363U\202\274C~B=\311]\216\274+\n.<$\233;\2758r\200<\326\264l<9\r\017\275\n\004\010=/\202\377\274FQ[\274\n\007\361\274\006\r\232;Y\302:\275\025\204\343<\367\355\355;\217\245)\275F\215G\273\010\345\020\275\023)o\273\3708\035=X\317\276\270\222Y.=\214\206\222\273\361\343\345<`\016\037\275\205\244\265\274w\304\353<\332h\314<\212\'\203<\255\216\237<?[\231\274\304\217A\275\035\206J=\236+\253\274\275%\003=|J\356;\275&H<\335\360v<\301\303\"\275\247\000d<\245\242\t\275F\224F\275\030\023O\275j\346\353\274}\n\326\273!\237B= \037a\274,\346r<\346\224\005=R\344#=>\315\271<\302\325#=\347\343\207\274\r\351\025=\273\020\321<\005\0237=L\2657\275\016\3144\274g\224\";\242 D<\017\024\250<\234\024J\275\2741\343\274\2613%\275\315@P\273\207\355\343\272y\nS=3\022\205<\315\023G<\032\376>=Va\346\274\253\310\037\2759`3=\n\361\333<\215\212\206\274\370)\366<)[?\275\341\2201=\n\233\235\272b\226e<f\351\333\274\3407@={\361P\275\245\365<\275\264\254*=\304N\010=\2572\310:\tM-=\332M.=zp\t\275\177{\013\275\3335\010=\356\301\017\275\177z\340\274\'\265T=\267\261?=]\241\262<4\007E\274\324p\025\275\020\240\037=\345\265\022<8\254\013\275A\212\023=6K7\274}\201\372\274\330\221\345;(\317*\274\025\343\376\274\221\204U=\3737\324\274x\322\013=\323\362Z:@\237\364<{)\375\273A^U\274<x\277\274\300~\000=\324.\025\275\267\323\304<\312[\375<(8\341\274\231\362\374\274gZ\345\273\035\323\026\275=Z\246<\n\217\017=\356\232\350\273\233\232\034<\002sX\273\336&\316\274#9\212\273\345mR<\021\336\351\274\036\n\266\274X\252\362<\322\033\022\275\330?\311<xi\360<\026\213D\275\2541\022\275\304\313\373<\201z\327\273\002\3264=\334n0\274\352\254\220:\377\377G\275\026P\363;\021O\332<D\257\303\274\210\225\004\275\3052\021=\324\341\340;W\005\024<B\334V=\277\224\256\274\2177\215<\021sV\275\342IT=9\365/=-r\037=\230\313G\275\227\230S\275\3042\332\274@\000\327;9{\010\274\330>\347\273\023\220U\275\230\207\316<\222\267G\2753\310z\2746n\027\275\316%t<\227\3558<\374B3=\340\035I\274Y_\327\274\201F\333;z\301\\\274\"\266\032\274\202iV\275\205\222\347\274\253KC<df8=_dN\274\033sH<|\306\026=\270\004)=\247\276V:\247\370J\271>\222\273\274\243\030E<\322\360\255<\353\223\254<\313g\014=\032\216\024\274\305,\377\274\301\001\374<\253_\031\275\332\301\323:\027A\005\274\200M4\275\212\233\236\274\215\267(=N\351D=53K=\236\222U\273\032\300&\275\243\177Y\275\343\0336\274h\373\220<\303\352=\275\343\023\264<\265*\222<=\2246\275h\002\240<=j\331;\240\305\362<\351\002,=f<3\275\351!6=d\270!=.\025\'\274\311O\237<\355\034\253\274\027\322\236;G\217\214\274A,<=\2314M\275. \310\274\250\300\306\274\2550-<\007\014\225\274\003\365W\275d\242\363\2740\311\345<\006\255\275\274\360=\023=?\274\245\273 GU=\373u\201\274D\004\360<\345\313x<\025\264\342<G\227N=\302\275\207<\304\273\036=\214,\214<\300\363\376<\202\216]\274\nE\232\2746Mf\273\260\177H\275F\247*\275\334\217J\275\237\333\017=F@B<\252N\004\273\204C\014=\362)\244<F\346\020\274<j\240\274\253\272\013=E\330\325\274D\226\210\274X\177==\234\354S=\206\327\037\275\353\2041=\330\306\212\272G\310\340<#\236\017=bv\t\274`Y\n=#\"l<\350\2030\275\321+\342\2740d+\275\010^\032\275vu1\2750\305#\275\244\006\037\274\016\256\037\2757\340\363<i\3455=\267\177$=\373\1773\275\326\337M=1\333\312;\005\031\034\274L\023\375\274\2079\311\2741\355\027\275\016\242V\275,\003\030\275\034;\372<QK=\275\272\030==a\243I\275\251\025\036;H\306/\275\353\207\263\273.\243\316\274\215~\264<\236\316\206\274n4b\273\334r\037=\035PY=v&\301;\336\336V<(\232Y\275\300:\357\274\\\221X\275\377\301\321\274\301\312\033=\221xR\273_-\030\274\252JY;9\275\013=C\007\304\274p3@\274\207\274\363\274V\016\272<\234\034\003\267[\025)=\375\3673=\026\"*\274\265\035\006\274\356\233\n\275`Q5:\r\3436;mT\204\274\313\314\025=m\242v\273\246\n\206\274\363X\224\274\366\215\275\274\352RK<\020^\304<\016\255s\273r+\222\273\264\006$\275Z\332\217<\035\265\002\275d\237Z=\321\361\357:SS\246\274\202\027M\275\220g\204<\276\340\001\274\017\253\232<uVw<.\260M\275\344\222\025=4Q?\275\264t\014\275(\240T<\251w\210<\307\025x\274\323\233v\273/\223\352\272\324\217H<\333\226\270<\356\032\007=3\026\213<\334\227%=\205E\322\274\313\266-=\022 J\275vT\'=\177\243\"\273\031\r\352<\333\326#\275\356\010\250;\277Y\356<\310VJ\275\371\241\357<51\014=\214\201B=\333\275\354\274\246\340\206<\257E\370\274\326\001w;b\'\207\272\321j\275\274u\344*\275\232w\022\27517=\274\260\025;\275\255#,\2752\017\023\275%H7=\325\305\210<\242\257\000<g\266?\274\250\324@;\177\254\n=U\320^\274^\246\236<\244\031\207\274Y\213\303\273\334\002\"\273\341&A=\244\270t\274\336M\257<\263`&=;\022\245;\023?Q=\016\034o\274\260\374<\275\376\244\022=\354\0062\274\003\357\036\275^\245\367\274\233`P\275\224\227\234\272\305W\034\275\217\0354=\366\343\036=\370\206\027=\010o\253<\303\211\2469H\202@\275\321\033!=[\320(\2743\264\372<\367\213\002\274\2626X=\216\000I\275\034T\253<\314\351\342\274\200\371}<U\307\275\274]\266\360\273l:\340:\231\215?<\342S0=\353{\010=gk\262<\004!`\274\022\021i\274$\313\300<\264\335=\275&\027\023\275O\247h9\252l==\300\0010\275\370:W=\233VM\274\205~\334<@\"*=S\342\t=\301\243\275\273\035Lw<\304\331\017=\325\337\031=X\220\345\274\202\354>=\303jY=\253\341n8\331&\014\275$\\B=\326s9\275C\347\203<\215\217Z;$\373\032<HZ|\274\321E\333;\274\323\007=j\351\361\274}mR=\010w\303<\211 ,\275\033\202\007\275J\375U=\343sx\273%\306\356<\374\240\222;\274x\034\275\025\370\372\274\r\354\016=\203\312\335\274,\332\324\274\353f\177\274\242\021\210\274\264\253\026=\216\267Q\275K\006G=\014\312\n=\232\3045\275\304#\367<\214\263A\275p\rC\274nL9<\005\027t\274\025\235B\275\310\356\002=\206@\232<]\342\277<\331\257Y=Sq\034=H\317H=\354h$\274\247\200E<\241&\314;\001a\266\274\274D\331\272})B\275~\352\300:\nZa:Eq/\275\351\352\353<KD-\274m\246\033;JH\255<T\241\030\275&\204y\274q\234+\275\327\037\337<S\266J\275\307\356\252<\224\025$\275\233\366\240\274\205\253\002\275cI\\\273\346\3656\275/W\000=J\377\241\274\360K\300<&\251D=\263\2671\274w(\211\274{\336!\275\326D\240\274\347a\371;\247\227#\275|\253\233\274j3\241<\352C\003<\310\325\265<G\360\316\274\022\2143\275\206\302\371\274\254\261R\275\262\027\037=\222\203\364\274&\307-;`\204J<|\026D<\177\024\302\2724g\336\272\303C9\275\234\177,\275\004\251\267;E\376\365\274NM\010=dfU\275\364s\332\274\265\235C\275\345\345\306\274\335\306\230\274\277z\241\274\032\217\327\274\207\373\337<;\004\025<\247\351B\2758\331\n=yH\327\273\236V\014\275\206\364I=\365f\014=\030Yh<\345oL\275\022\232\317\274.P/=V\351\014\275\207\214\205\274\347!*\274G\223\310<q\t6\274\017\373/\275\n\322K\274\351\025\361<\337\277\n=\330\245\372<\247\220T\275{n\243\274\321\364P\273j[(=](\223<uS\347<\3637\260\274@\274\253<\226\2101\275\250\262\306<;\210#\275\325{{<p\340I=\350P\013=`\035\035\275q{\314\274@:\333\274n\026\334<\241\220]\274j>\006\275t\271\000\275\223\314\025=\320\367\271;\021\375\350<\227\006)\275\327TA=\200\307g\274\260\2463\273\376\267Y=\207\326\032\275\222)\302\274\2404!\275\314\256\024\274\023\326\266<#5\367<\271\244\200\273\327X\216<\367\364\320<\014\036T=)\270`<YC\225\274\354\242\342\274\301q\223\273h?\276\274\343qJ=Q\222\376\2731\313K=<\371$\275\376@6\274=\360\"\275A:\277\273\016\321!\275 \337F\275\312l\025=7!5=#\027\026=\212\214\017\275\361\022\024\275\2527\207<\261\273I=\350~%=\213\037 \275\000\277\365;\\\257)<\363Q!<\305\203\033\2756\2315\2754\023\333<\001\324j<\330y\337\274 \330\'=\021(\221\274\370\3276\275\376\007`\274\256$\340;\272\210\374;d\257\362\274WZ\026\275\234\216G=\023\342H\274) -=\035\275F\274\225\334\341\274\362U7\275\226./\275\372\317\365;\347\374\003=\005\235\251<\227\023\275\274\234\347T<h\006K\275e\330\273<\270\301\340;\016O5=\270M\017=\321\226\341\274c\300\337\273\3665@=\200\262\005\275A\021T\275\235U\223\274\327gt\274\035\177\363;H\267\266\274\301\234B=\'i>=\223\\\027=@q\323\273\242\315j<R\\t<\035\257\321<\331\206\026=\006\240\207<\263\377\026\275|dV\275\202bU\274\223h\363;\004\030\207<\331x\222<\244`\323\274\233p\027=\336\374\026<\"%\267<-_\265\274;\360n<\306\324U\274h\331\233\274\361\370\363<+\327@=5\300f<\310\2649=\225\265\373<A\347\354<\375g\t;\221@\025=\363$\340<5]v<L`\032=\270\306Y\275\216[:<\210*\234<\267%\004=y\n\251<\366\023y;fVZ\274\362\370%=\374\273\311\2743\333\037\275Iv5=\274\231M=B)\005\275CO\263\273\243\205\216<r~\312\274:\032R=\345\274\317\274\000\t\"\275\326P\035<;m\225<F\310\326<]\366\262\274\312\361$<y\365\337\274\207G\021\275c\367d\274,\327\253\273\313\370<=\374!!\274IH\274<\306\205N=\223\374\205\273@<\325<\n\364:\275\356\325\255\274\317\3619\275\273ZH<\366@\212\274\310\271\201\273V\243.\274\037\271\301<\317\373\327;\n\227H\272\030\313\256\273\221\010\255\273\303\266%<w$\257\274HE\250\273\272\335\2708\004\254N<\322c/<\350\315\211\274Z$\025=\311\037|\274\326\261-\275\303q\253\274\242\021F=i1\020;\222>\016<22\036\275\017\3369=$\236q<O\021==\035($=mmU=\326\003,<\205\206\264<\003\311;<Hbe<\270\225\211\274\352\032\315<U\353\204<5\033\031\275|!X=\343d\364\274\370\032J=\001u\035=a}?=\226\335\251\274\334\232>\2741\302K=^G\006\275}kI\275|\235\363<\221\211\357\274\223\214\200\273^\356\030=\304\035>=k\226\215:\302\244I=q\026)\274e{\245\274\016\021T=\257[4=\246\035\022=\213\210\020\274Y\350K<\234/\254\274\260r\324\273\350\032\273\274\225\3159<J\001<\275x\257\315<yd\n<\230\3703=hD\030\274\201/B=\016\242\214<w\0178=\330\024(=\324\375\017\275\347\352B=\273\316\352\274\274\336\313;8N\024\275\235\353\000=)5\230<\'\344F=\256\021\031=\303\'7\275\313S\347\274\335\000\241<\027\232&=\222\027\214<~s9\275Y?\'=\007k;\275\223\210A=\022\223\035\274l\245\033<nM\313<\000~\014\275\201\357\336<\271\354\r=\363\275X\275\375\253\253<\025\262\010\275Z\236*=e\3442\274\332NC<\212=\246\274\372S\311<\304\374\272:\275QT\275r6*\275\310\364\024=\317\204(\2750\310M\273\320\201\023\275\r\320\366\274\3145\026=]`\024=\255\315\023\275)~\345:\221\234\214\274\3457&\275qG\363<\004j\257\274\365\233\002=K\364\257<--.=\265wQ=,/\000\275\347|.=\374\211\005\275Jq\275\273\351\213\332\274\373/\013<\033\316q<\347c\344<\226\312\265\273/T\350\274;\373e<\373\332\345\274x\216\364\274\2567\275:\246-\350\274\214\273\302<\207`D=\227\014\230<\263\210\t=\263\311u\272\303\356\310;J?0\275\317\221\254\274O\2412\275\312\311W\275\036\335\272\274J\3537\275\237O\356<\242\357H=\266\237\332<\336)\033\275\230\350\000\275G\014\270\273\0208\342\273\333\242S9s\317\323\274\322[\316<$\324\205;2+$=>\315Z=J\276\221<\231\254\376\273FR-\273\221\340\024\275\264\316\007\2759\177\230\274\301\340Y<RF\261<\375\331\312<\217>\310<\275\363W;\326\251\336\274\361!\034\275\335\263A<\330\265V=\014J\321<\233\274\r=\212h(\275\366D0\2759\031\014\275\234\023\021=\020\243 =\204L\";\217\036\204<\355<\344<[~\217<\347\233\'\275&\030\024=d\313G=\267\277\245<=\331\220\274\366\"\224<\242\374\212<G\252\305\274\315\016\354\274\2102(=\370\314\372\274\332\016N\275\2301\360<OH]:h3\347\274\261\250L\275\274\371\002\275\333\360j<FTU=l\311\334<\234\271\022\275\276\026\235<\321\270\004=\304e\322\273nS,<IW\234\274\363\373\017=\317\271\243\273\004DI<}\251\016=\327-\262:=\336\327<\013c9\275}\322\257<\014\312O=o\203\262<\305$\001=\346I/\274\206V0\275\362\345E=&\024\033<\202\327\311:\322\312\375<\305\203\370<\354Q\356<V\331\274<\3337Z=\205\256Z\275\317[\216<\272!\013<\216\3117<\031\215\277<|\020\372;\006\2207\275=\263I<^o\264<S\304\204\274\334\233\013=\021rC\274\355wE\275\n\r\r\275\322\231\244<}\345\\<\347ii<^\2375=\31789\275!\020\370;\375l\372\273r?4<9\200\031\275b\374\363;\304j\362\274Q\003\325<\372_\246<Q\360\007\275\0352\261<\365\220\324<\205\226Z\275\303(\202\273(Z\331\274\316\374A\274%\002\211<*\033D<\313\330Z\2747\374\004\275\346k\270<v\227\031\275\206\\\203\274\313\375Z=\342C\007\274\014\236\373<\314\374\212<].\206\273hC3;Y\301\217<\010\237O\275\333\221\355\2746UN=.uW=3\233\"=\010A\270\274\3435I=\246\321%\275v\334@=\001\021\016\275\245\251;=\006\025\353\274\303\272I\275P\232;\275\'\306D\275s\244\217\274<m\"=\221-[\274\304\266\335<\026yI=}\030\000=\322\372\031=\003\245\320<\360pA\2757\316\231;%\017^<\315\270V=(\006\007=yPI\274&\023\367\274$\350\025\275\263_\013\273\002%\006\275\315;E\275g\377i<\202>\330\274\310\317\026\275\253\000V\275ZRL;\235;\314\274\023N\014\274\364\374\343<\025\022\225\274\265\241\232<<\370\007<\010C8=\301y\025\275tR\316<h\366\014=\362\202\032=\210o+\275\375\232\235<\0338\276\274\000\344&=\305\343C=;;?=\367\373\204<\004\204\007\275\361\274\006\275v\020\367\273\266/\037=_hW\275\270\372B\275\366T\202<\257k\262<\306\357\322<>x8\275\207\324\235;N\r\255<\\\252S=\332\243/;C\360\364<L\217\374\274\307\030\355\274d\253\033=r\355\224<%\021\312\274\275\356\006<\305d<\2755pd<\373\310\265\273\341\244\252<\261\035\326<\373\351\360;\277\273\027\275\372\2120<\236\303\'<ns\033<\330\205\3639pa\021=\237\305\232:\302(\250<\376\033\302<M\327\336\273\032f\025\275u\"B\275\301\364\'=\373H\353\274\206\232\236;\03618\275\325\307<\275-[\245<R\r\002<\340n#=\353\230C<p\243\354:\245\362(\2758O\210<\204N\304<\327\371v\274\322\267\030\275t\253&<s8\256<{\323L=\212G\341\274\036\201\361\274\331\177\016\275\375cT\273!\363\330<\017\270\205;\305:+\271F\236\236\274z\367\364\274\350f\023\273\266O\277<\315\234\036<\207`\236\274\335\361N<\002o\356<\347\023\245\274\215\312\217<\366V\273;x\200\321\270\376l4:b\354\271\273\024\237J\273H\362)\275\203\350Q<\013)\214;\251\364D\275\235\3743=\322|\033=\315k\211<\202)H\274\227\025e<\030FE;q\355B\275d\202\211\272\013UO\275xF\000\274\016\311\007\275u\225\346<Ak\363<:C\210;\334\2313=\237\014\345;O.\003\275SJS=\347\"\377:\275x\356<\"\225K\275\357\377\036=\016\354/=\213\264\342\274\302~%\275\354\001\316\2745\372\306<c\374F=\223\270\324;Zq\206<\326\013\261\274\342\201\245\274L.\227<\326\026\332;\3179\365\272i=L;y\351\003\275\000\366J<\244\302\376\273\233\234\356\2742\314L<Da\026\275K\244\264;\260.\260<\3241\341\274Mj\312\274\241\225\"\273\231(\023=\230\014q\274\014\304\306\274\300 \025\274r\346\341<\306\305m\273\362\345V\275\352\207\235<\275\3220=\210\200=\275>\'p\2730\275\217\274\000\220;;\215;i\274\211x,<\013\255\346<\270\002.\275&\007B<\r\033\001\275%\240|<t\204\322\274\330\026\234<W \357<hn\r\275\336c\216<\037~R\275\336\004\035\274v\351\272<1\211t;\333\210\370\274\372\266N=\317\270\t\273\346\267/<\0175\037=\315\211\340<}Ss\274\206\223;\275fe\n=\320\312\001\275\317S-=\213\312.\2751\2509=\342\224,\275\374o\213<4L\311\273%`\n=\320\220\001\273\216q(\275^JD=\376\246\202<\025W\344;\242*\242<\001\217\350\274\017d\003;\357\247%<\253]4\275\243\246v\274k\341\327<\251\216\265<\300\275N\2752\262\016\275\260$c\2738\0131\274\243\214\'\275\324\"W=rW\004=\223\033\220\274\371\037\230<\246c\210<\277n\214<\220\327U=\324\201\031\275\014\037F=\333\320\350\273\214\217(\2669\365\002\275F=\322<\033\333\003\275\357k\036<\335\360\373\274Vws\273)\345U=\374\207L=\251\033>\2759\331\254<\351\005\330;Z\210\037\275\324\316\263<\036\322:\275\373\342\310\274\212\333\254<\236\222T=\302S\244<-x\302\274\177\371\311\272:H\302\273ro\026=I:\030=\372O\215<Oo\211<\355\356\267<\371\363\031=\340a\211<\307\034\352<w\207==\037\265Y\2721\335\253\274\245\326\275:\021\\\221\274\304y/=u\213A=\265\024\032=\367qN=8>\227<$1S=\250\222:=X\023\350<\205\215\026\275\210\203.\275h\247\034\274\301\'\020=\200\355\324<\264\241\r=!\375\277<\353\370\031\275t\370\016\275\024sH=\013\t\035\271\313\010\327<\250\330\006\274\2071\020\275\252\306>=\372+\035;in=\274\207\223\210\274-DT=OH[\273\372H\335<\005\265u\274$\"\372<\305|\200\273\374\241\222<\217\205\000\274.\355\"\275\347\017\027=\346\004\216<k\251@\275I[\024\2700\274\362<\365\302\376\274\311\274\311<s\003\267\274\346\215\322<\352\313\204;\237\337l\273\251\017\272\274ym@=\311-Y\275\227S\333<\207h\351\274`z$=8T\240<}%P=S\023b<x(\t\275\216\3333=\256\013\002<r\317\371\274\354e\242\273\314\302\244<\216\201X\275(f\326<\332M2\272\007\370\253\274\374t\204<\352\224y<_cD=\016\315\250;\020\3540\275\371\330S\272\273`E\275\026\204\264;\025\025\027\275\256X(\275\207\325\027\274%m\231\273\343\267\231\2744\342p\274v\3409\275\225\337#=.^+\274\013\2578\2757X\244<\324\205\014\275\336\260J\275zpZ=6\325\'=R\364O<b9\234<\203\242j:;E\222\2745\013J\275\330\307H;=\022c\271v\217\362<\261n\000=w\202E\275\025W\304<#\035\257</E,=\362\340J<\314\233\236\274\335\\R=\302N#=\222F%=\021\324C=z0\301\274\030\'\370\273.K\371\274\204\2647<C{\031=\227\330\036\274\201`&=\017Y\t\273\333\310?=\225\363\n<\001TW\273 Q\307\274>k-=\203\300\233\274\014~$\275\230\306Y<\027!/=\215\021\335\274\271\347\353\274\341T\256;n\\\262\274\215\3424<\340\'\221<\315e\003\275091\275I\336.\274\337\233\256\274>\t#\275\366f\304<\326\276\034=\233\017\031\275\211Y\316< \342v<_\303\250\274\306\016\022=\217\372\n\275\037\356\266<\227u\340<\212\020\364<-a\365<\301J3;$\3518\275r\n\220\274\200;\311<\035j!=*\243\210;P\314\320<w F\275\311\205c<e\352I;e\346\336\274\337c\240<\020[\016\275\225\\D=q#G<\365\\W\275kj\244\271\205\0276\274\'T\222<T\031\006=\302\327\010<zc\212<)^G\273a\033\240\274\256\227\320\274<\030\267\274m\237\366\274\213\'\322\274\360&S\275-\317\264\274\317\336\325\274\2625\037=\271\366\027=\007\3512\275\244\242\215<\353|t<\n\242\324;5\335\023\275\234\'\023=\240\271Q=l\267[<\372\263\261<\231\250}\274\005\221\226\274]BP\275Y\353B<\030.\033=\321g6=U\235\026\272.`\034<\244\007\256\274\0351\027=`\225E=sR\001\275\\\272S=\225i\251\274\034d\264\2740\320$=k\3103=\037\022\037=[[4=\315\324_\274\326w)\2749\357\020=[qO\275\272\304\031<\366\274O= \310\223<Z}@=\270\025\010\275k$\214<\271\224?=vs\317<~\302R:\025\241;\274\035z8\275|\372Y=\221\022\246;\247\277\323<\020O)\274\263\326\220\274\271\037\025\272\031,G=\325h\315<mk7\275\005\217\343\273\205\341\353\273\3675Z=\221\004O=\315\317\030\275\271\317\023\274\206\264\225\274\021\022\234\274\214\233m\274\322\255\342\274b\250\237<\227\202\021=j e\273\265O =>s\347<r\021\022=\207\275+=\305\311\016\275\017\255_<\234.\006\275\002\204@=Y\256=\275\305o5=\221R\014\274\266?\315\273\305m%\275\347r=<\r?\201\271\246\365\326;\256\331/<j\206\305\273G\241\"\275\021\312\251;:n\263<14L=t\\>\275\337\'\257<p\242\210<\225F\017=\207\352#\273\212\277\273<\374\256\357\271\007\277&\275\264\333\320<WeM\275\326\371>\275\303U\000= \332\234<\036\344/=\031T\177\273~m\216\274\335\243\205\273\234\231;\275d\324T=\307\352\036=\021\332\335;\r\247\266\274)\020X\275\024\366\005\275\362\225*\273\024`F\275\006\270\'=\236\2653=CJ+=\025\027\211\274\372L$=\243\307\223\274XR\271<\302H\025\275\260\r\n=\2477\023=\234\320y\274\312y\373\274\'\231%=)CM=\303\350\000\271\356\213Y=4\277\222<\337\366\210\274\251\306!=)\221\265<\002\346\356\274\2221C<PC\025\274\267\340\252\274\006s\204<P\357\351;\347\226\232\274\311,\341\271\n@\016=/\224h<o\233?=O|T\275\361&I=\231\027?\275\333~\021\275\335\372I\275\007-#\274\300\212Q=\337s\333\274Q\373\335\274\3126\226<\2657\211<\324\251\013;\002r\205\274\336E\037\272G\320\r=\213 %=@\235\317\274\350\230-<\257\\N<\034\240\211\274\341\317K\275?\361T<E\370E\275\"\025\325<\367\237\021\275\356\034#;c\002\367\274\263\000\204\274h,\375\273b\271\251;\342)\277<\214\274\303\274\362\263\322\274\306\314\271\274\232tc\274N\242];f\224-<\360.\004=)\260\r\274\330aH<D\027\337<\213\017\022\275V>Q=\344\241\346;\246\3001=0h\336<oT\007=\334\022U\2744c\363<\000rO=\255\306\006\275\021\265W\275\274\322A=\344\256\310;\316\022D=+\330\337\274\014\031\342<{\241\312\273\305\345\223<\251<X\275\220\276l\274\260_V\275w\nF=]p\205\274\"\360P=\017\177\013\275&f\013=\022\344\367<i\031\237<\372\277\027\274U\nj\274>S\300\274\325\214\247\274\010\223/\275R\000o\273\375U\216\274e\244%\275\355{L\275\304\001\212\274%V<=\000\006\223\274\001\022J=Xy\023=\336\210\243\273\3501d;\230)\335;\364|\3319\031\315\214\273\nyC=2\304\261:\347\2126=\223UG<\334\3725\275\301\023]<\313\223)\274Bk\354\274\322)+=\306\255\034\275q`\300\274X\262\034\275Z\222|;\254\257\272\274L\017\037<Q\3461\274\260S\316<\224\206\335\274\241)\252\2744\0342\2751\020\365\274\254)D\275*\212D\274\361\223\331\274\t\362J\275\317]N=T\322\227\274J\340\005=\260\320#=\373\004\313\274;[\017=\027\252\002\273@T\366<!\311A\275\307\247\323<h\263J\275\264\010\355\273\231\322\003\274,\007\000=\327x\327<k\264%<\006\210\305\274\307\325\232<"
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
          dim {
            size: 4
          }
        }
        tensor_content: "t}\244;\212\241\002=\252\177\014=\352\273%\275\'\3522<r\0033;\0339}\273\026WH\273M\310h<*\250:=\270Y\n=!\344B=\307\3757=\260c\025\274\376\336\016=B\260C=\303\230`<bC\331\274\200\374!<4\n\036=\321\001F\275\367\224\033=\217!\301<7\357\262\274\255\307\314\272\253\367\026=\313\3053<\036X\026\275\367\"7;\263\375\010\275\022|\225<\336\003\253;\356\250\026\275\'\247==\303\256\226;\210\313\205<@F\226<%\334\013=\351NU\275Z\210\030=\227\305\343\273+*\036\2732\312\274<1-\025=o\227)\2756\026E<\267_\364\274\300\325I\275\007^\300\2745\370\264\274\234\267 \275]\212\303<\370\017\002\275\314\024\377<\346{\303<(~\206\274\377=\366\274o\245\350\274`N+\275\335\343@=Hv\220;|\222-=]\204)=$FU\275\212\300!=` \256\274\327mD=:4T\275\247\333P=\307\335\t=\004{\237\274T\304\260\274\324\230\033\274\222R\214\274M\214E=\027\r\330\273O\231\250\274\010N\247<5m3\275\224\233E=\311\202\022=w.\300<y\025\303<\214\033)\275\242\315\005\273\341\373\354;\245\313\247\274\230\017\002=\001l\'=\371\307\262<\224\001G=NG,\274\215\027\025;\347~\363<\3353V\275\013\024\336;\3466E\272\010#\201<\377k\"=\202n(<V\016\212\274\306\t\227\274\007\270\006=\251\3101=l&\203<\325\267\311\274\340\324L\275\226\266E\275\0077\203\273td\021\275\316\2219=\376\372\333;\226v\025\275\326\355v\274C\301F\275\313\2221\274\354mA=\007_\345<w;:\274B\325\372<IT\221\274\320\014\021\275K\361\233<\212\232\027=\231\335E\274\373\320\016\275\331\025\354;\302>T=\350~L;\272\317\330\273\034n5= \346\313<\201&\033\275/I\003\275_\244\010\274 \032.\275\231\3712<\236Z\337\274\341MS=\253\3317\275\2464n<j\226)\275G\327\325\2748\211\232\274#n\222<\005C\t=\246R\023=\356\006\231\274\365\312\030=\333L\006=\321\tX=\346!K=\222\336\332\274\034>F=\364S\250\274O\352\330<09\002\275\274\225\334\274\001\004\302<\324\335\353\273c3\021\275\260\376\310\274T\373F=x\276\321\273\036\2172\274\262\2461\274x\343\354\274j^\324;\370\370\177\273\260\356\227\274L\362\026=\352\210\236<\250+\304\272\276\356\376;\316\036\004=\240\233J\273\315\202\236<Z\016\231\273\022\301\334\274\031\355\321<#\227\037\275}\312K=ix\340\274\333\240?\275Q\236\264\274u!7<\313\257\315\274\tQm<:V,<\210\372\304\274\335z\230<\323B\003=\000\033E=\007v\016<\354\002\356\274oO\300\274\260uZ=$p#=gq\307:*A\346\274\261\273\203<\267\350\276<`k\237\274\376\251T\274\"\337\003\275\021\010u<\324\364\247\272\"\310\034\275\346\240\007;\213\177@<\236\372\340;x#\346\273T\016\006\275h[7=G\250\001=:\254\343\2749\3353\273|\323\032\275\235\257-\274\237\227\374<F\346!;%l6=5\323B\275\354<+=u\2379=Sr\250\2730v\262<\346Pp\273\251\251 \275\373\014Q\275\301\207\311\274\247\007\334<\277\247\016\275\245O\363<\306ZA\275\355\342\266;\311\031)\275s*\000\275n\031N\275!q]<\'<\341\274\365\340\034<\034\355S<2\320\033\274/\2631= \0147;\303\022J;\257%O<\213g\202<B\225$\273\254oD\275m\3312=\215P\372<\356\301\264\274^\201/=6\'\005\273uMj\274\002\003Y=AS\"=\352\352==\355\021?\275k\374\010=4\222\261\273iI-\275\037P&=\237c\253<\352\260\'\275\220QI=\270\356G=\033M\244\274\265\356I=\244N\271\274\375\\\370\274\213,\210\273\321\037.=\262;\017\275\340R\216\274\364\364\225<\255\r.=\350 >=R\327\030\274N\367\260;\204\262\277<G\377\276<\026\325\214;\360\255Y=1\020Q;^\005D=\234\020\373<\245\021E=\207N*\275EVL\275\035\243\312;\305\363\n\2759\2449=AQD=\246\253\360\274\363\367\005=\317\207\346<fy\227<\353y\260;\245&\236\274\r\262\223\273\26295\275Z\244C\275\315\330\214\273\232\001\364\272l\2349\275M\332\310\274\214\217\220\274 \330<=\263\260 ;\324\360\276<3X%<x/\023\275\326\032)=\3223&=Ht\003\274\370@\334\274\010\312\236\274\311|H:\3240\034\275\357F9=\235\315\r<\240CB=f\345\376;r)\"=\202\272\340;Az@\275\232U\367<-\307\t=\220r\014\275\314\211[<n\017\200\274\327P\217\274\371\345\254;\333E\033=\025\002U\274N\304\034\275\357\377W=\375R\000\275\236\2655\274\303N*=-\274\004\274\257\3365=\037\222V\275\227\"\372\274\235Ro\274\330\036\303\273\354(\324;\327Z\244\274\263\222\032=\007r<=\007\013\010\275\265X1=!\2332\275\rV\257\274t\347Z=\324\361\367\274\023 \223<8(]<#\230\007<,\266M\275\002e\004=\313\256\021<\364#\006=\217\300\260<\351\001 \274\2463[=Ku\031\275r\033[9\324\363x\274\010\354\014\275;.L<\214\340\016=E\2502=\220\241\213\274\313a\254<\254\036d\273\304#3<bg\333\274\247>\373\274\304\210R=\245(\022\275HB%\275!-\314\273\377\375;\275\353\236\020\275c+*=\343\257/<\277\240\024\275!\365/=\352!\263<\220^ =R\244\023\275\240\350*=\033\213\017\275\303\260A=\253[\355;S\2707\275.f\211\274\251i\303\273L\362\262<\226W\247<\276\372\035\274I<\375\274\237\013\346\274q%\017=q\311\336;\275\256\362<\311\331\230\273\347r\265<\271[\213\273\0104N\275dq\016<4\360\033\274\235\006\017<s\332\366\274v(\375\274\0069+=\256\252E\274~.\3629\247\007[\275\030\007\024<(\272\n\275\235\350\'<\351\333V\274\t\213\003=bv\r=\367\'F=\035\305\025<n\310l<\322V\005\275\331I`<\207\270U\275\235X\020\274\232\372@=\n\210@<\373\244\202<\236O,\273\227\343\032=\300\003\300<l\373\002\274\317\324L\275\355\210\221<\300\233u\274\371\263\035<\334\207\300<\245e\301\274\321\235`\274\024\264\317<o\253;\275q\t\342\274\227\336\000<\213\227-=\254\240D<~\006\276\273\335\231\021<UP/\273v\345\376\272\257\265\317\272\364\271\261\274\215\335\315<\315\275\237\274U\264R\275\251+\362:\010\363\300\274 I\373\274\022l\";}TM\275\224v\260\274\331RN\275;\327h\273r\031\267\274YX\215\273>V\n\275\265;\021\274O\262\025\275\211{\341<\354\301?=\362d$\274rY\302\274*\253c\274$\327.=\254\350\342\272\350\333V=\363\201\265;\244X.\275\376\352U=\304\353\251<\242\267!=\021\004_<\376\244\'=\344\361\241\274dPM=s\256)=/I\324\274\030\344\336<\027\263\001=\207\362\365<0\365\312\273\013\262#=V?3<\335\340\301\274\254\302Q=\2000\244<\007\213\355\273.gE\275\322O\247;\\\2645=;\230i<\240\274)\275\013\251P<\362\207\024\2741\2070\275\300H!=\236\202\003\275\366\327==u\267\310\274mU\r=\263B\264<\222*\004\275\330\375\324\274\2139\262\274\356\244\236;\231\247#=\363T\026\274\030g\273;\025\026b\274\005\251\213\274\026s\315\273\341\357\361;\375\013\250\273b\200==\"K\003=|\226\331<.4S=\235\"\375<\230}\005\275/<!=rl\010\275/5\256<l\2765<\202\273S=\301\215\t\275\257\336\312\273\326w=<<F\024\275\n\3150\274~vJ\275\370\0007=>\264A=\327\367M=&\361\371<\247\034\035=\363:\345<3\2760=\343\260\204\274\273L9\275r\341\372<\\\2035\275U\261\317<\2153=\275\257\036\310;@\037l\274\311yT=\n0\032\273\033\021\264;@e1\274\304JI\275\261\354\260<\026!\355\274\024\371-<\371\260\252\274\336\335\372\274\2719\t<\317|m:\241\324\006=\330\335\021=\335\036$=\030\\\340\274\004c&\275B\227\332<:\213_:\255\231\000\275\330\337-<\356v\334<VL]\274K\266\010\275B\332F=\354\010W\275\316\t\335<{\017\344<V\306\250\273\327\205\007\274\321\200\037\275\361\246!=\212[\027\275\202\032\347<pAe<\212?\224\274\014\031\305\273\375\273N=\315\302W<\203\213\036\275m\031\264<\224\202\277\274\374\007E\275\362\273%\275\276\326\014=\307\3255\2749\270s<\244i\267<Om\222\274\254\372\344\274\265!\276\274\272h\336<\212Y\216<\277T\361<\326\034f<\250\014\272<\300\032\021\275\350\224\026\275=\017\003\274\241\006Z\275,\177\324<\360\230==\237\211 \274I\2744\274\372ja<j\240U\275\334\250\2669\350Q\270<\036\340\024\275\n^g;R\314\207\273\206\010\266<E%/\275\226\025v\274\271\032\224\274\311\236u<\346\375;\275\226g?=\267\223B;\245\341\r\274P\r\204\274\2028\014=\2349T=\267\032\016\275S3*\274\270\0242\274B\\O=\t\370\325\274\017\341\017=\367\345\225\274\241bn<<\257I=Z\203<=\340\t9\274s[\t=\302fF=le\260<\020I\002\275\353\217\321\274\010/\241\274\3675.=\377\257~\274rb\013=B\214\264\274=\347\207<\005\316\014=F\205\002\275\017w\330<?\336\251<\346\252\232\273\000;\252\274:\367\n\275\271\033\226\273\251\3317\273\243^\002<A\373x\274\337S\007=j\373)\275\017\210T=\025\250\230\274|X&=Ki\033\275\032\006\217\274=r\021\275\372\025\026\275\215\321\345\274\006\2602\274v\t=\273\315\340\021\274\360\200\001:\240U3<\271V\350\274\177\3469=f{e\274\343\022\005=\243Z%=\201\220\t=j\271\362\273\004>\375<\301\004)\274\372\016\277;c\252E=&\n\267<\250\\Z=\202\232S\275\264\2338\275Z\227\022=\247\207\335\274T\007\264\273\017\374\002\274F\267\002<\323p\251\274\260\343s<\271\206\007=\365\350\314;\256\245\342\274%\256\371\274\365\034\033\274\215\322\351<\274\226\006=\345\251\333;l\337\230;\0252A=a\025\004=\0338*\275S5+<}\032w\274S,X\275\336\023\t=[>\300\273\344\322\314<SQQ\275\305J\023=\354t\235\273\277\323@=\230\334\375<\021\022t\274v`E\275\267\357&=\2647\214<<_\270<tK,\273\361\016\246;s\017\355;7\302/=\352\306\006\275\333\240P\274\006\245\334<\356\366\001=\312\325\250;\262\312E<\365\216D={YO<;9\031\275\302+\372<\312\273\336<a\2338\274\216\353\025\273\320j\031\274\305\337\203<\360\361\344<\025\271s\2743\032\022=P\0008\275^\241\360\274ye\313< \240\306\273\313\016:\274)@\007=i\370\"\275\376\311R=V\006&\271\324\354\'=Aa(\275\224\213\006\275%\236L\275\267Pr<\313\037\372<\273<\335\274\200w9\275Fz/\274\347\206\355<KS\036=uI\202\274I\243\214<Y\225+=\324m\312\274\264\366\222<\367\234_<\251\204\014=\3057\203\274\202\211\005=\237\010\276\273\257}\255\274:\305\276<\254\377\346<a\0229\275\001\376\003\275\353\255\227<7\364U\275EB/\275\347\214W=\302\273=\275\310\226\024;@\372\"\275v\341\270<\205)%\275\333d \2755\217\002=q\240\332\274h\264l\274\210F\201\274\177\032\374\274\315\004\377\274\244\2206\275\314k)\275\2604\003\275\220\302E\275`I\013\275\306\034k<E\306\217\272\265\307\254\274\217\373\203<a{\271\274|^\337\274\220\363\253<\256\300\033=E\353\363\274x`\000=\264\302\320<W\363\210\274\271v\323\274\027v\254<&\031\227<g\307\037<\2046\225;wO(\274L\\\340\274\214\202F=\213<\353<\224W\311\274\031\314Z\275\377\234\331<\344\262f9!4#\275\320M_\274uf\003<\020\350\371\273\267\026\021=\367\377\255<\007\207\221\274#p7\275\031\000\030=\253\037H=\272\003\016=\305\365E\275\276\r\"\275\035\210\014=\223C\374\274\347\224\004\275\251%\021<]U\'\274\305%\223\274\177r\261;\332c\346<\013\022G=\347\251:\275\004\321\025:\016x\023=\031eR=\306\037[=\324\307.=\261\002\234\273\n\024\314<\320\215\025\275\343\t\037=\372\215\321<\334?\245\274\317\221\226:PKU\275\205\334\217\274A@M=\330\243\302\274k\0231=\370\270\227\274\370~\354\274q\236k<jb\361\274XVk<\300*=\275*\304\023\275\275j\376<\317\017L\275\202\356\265\274\326i\247<+\313<\275\261\"\276<\277\351M=\353\r\225<\216\037<\275\270\346==^\340\257\274\211t\216\272kEo\274IqN\275!\3268=+n\237;\365\224.=\375\016\335<5\301\035\275|\240\254<\375\t\n;\217\270\211\274\223zc\2741\357\007<\034\376*<n\313\241<\312\004U=\373A3\275\252L<=v\361J\274`\305\247\273\260\335K=\202[\247\274\304\336\021=\033\005\364\274\367\263\247\274\365\034=;3\350\234<\240\240\000=\305\202\262\2747i\371<h|l\274Oe\023\275\017\242\n\274\246r\225\274\256m\241<\3260 =eK%\275\223\220\t\275Lc\377<\253u\277\273)\031q<j\253\036\275\323#(;\325\013\312<\332\263\004=\331em\274\261\3214;?\022_;\212[\227;EiP\275\026\317\030\275\002Jv<\364q\216<\375\0276\275\001kl<\346\363\266<x\241.=1\3771\2754\201\025\274\024\266V=\211:\022\275\261\033\210\274\366\030\002\275\206o\032=w\377\374\274Y\377?=\035\254\"=\017\300^\274\032\356\272\274\"\346\256\274\030\237D\275\355\002}\272\277-\226\273\270?\023\2756\206\023=v\263\215\272\255\300\357<\320\260\247\274\370\no<\000u\316<\013Di\274E\205\231\274}7\031=\347\217\3347\'\030T=\304\302>\275\372\"(\274\265\353$\275\3341$=%\206\241\274\371\031\377<U\364\276;\236\232\t\274B\305]\274\310\201g\274\251\'\007\275\336\376\007\275\343v\313<P2\005<%G\016\275\361\006\242\274.z\016\275I\360==D\tP\275Gb6\275\226\376J\275u\357\241;\013\376\255\274\022\033\304\272\332\006\210;\334\023\210;\2446:<\217\205*=\2241\275;\206\225<\275\320\233f<r\237\234\2748\002\032\273\354#\"=\214\\H= \304m\274\213%t\274N\243\333;6n\032=\261\202\274\272x\376E\275\274\017A\275@\347e\274\340\221O\275_\"\024=z7;\275\230\033\214<\254\340\010\275\214\022\341\274\346\030:\275\231\236\373\273\364r\301<X\310\222\274\214\271\031\275\300hM=\3216:\274\215\360\274<\211QQ\275\305\222=\275n\213J\274\371_!\275\370/\026\275t\216A\275M\375\014\274\334\304r<Y7Q\274\320\002\034\275>\'\251\274\371\251\005;\220\300\254<\303\306L=\355\025.=Z\034\330<u\215K=(5\t=\303\016\374\274Pp6\271\212\321[;\350\037\016=\273eO\275\301i\366;\213\337\303;\335\033\016=\"I\036\275\330-\034=\002$&\273\177\372\034<\201\306\265\2740nC=P\201\013=>2\230<17`;\262d(=\327Q\025\274\0264\210\274\036\303A=\256;\330\274\261*\277\274\233\355\346<\021*0=\002\332\021=\366\366=\275&T\2577\356\253<=~\341\024=+\361\351<\343\262\324\273E\032+=dZ@\274N\035\346<gT\214\272\023\264,=\025JJ\275i\340\270\273\372h\371\274\370RM\275L\215\177\274U\337\200;\331\226\321<\332\234\244\274\241W\020<\335\351\036<JN\026\275p\351\022\274\211\216L\273/:\322:\264\241\250\274\327\373V\275\327\177T\275\022\375k<\363M\033<\206\300#\274[AP=q\007#\275\224\356\023<\250\345\036\274T\311\'=\006\305\006\275\242\232c\274\266X\265\273\334:!\275\243\007\240<\212>A\275\360\363M=\020\2103\274\364\362R\273\256Y`<E\326E=\307Y\237\274\234\033\307\274*\344\264<\270\202\034<5\006#\2750DD=\243\'\332<q\275\267\274!\213\260<n\342\233\274\242N:=\302\266\r\275\265\211\035:\362/;=\000\336G\275\0322\202<CM\020=2\371=\275\345>\234<\365\271)\275\201\225 \272P\r(\275\344\274K=\253\316\352;\351>.=\343n\017\274n\232h\273\3116\t\275\361]\013\274\247\356\014<\322\312\n<U\020=\2752\330\010=\276\275\'\2737v\374<\227 \374\274\021/\227:J\361\204\274\316=\224;\252\2016\275\235\233\031=tR\234\274\262\366\326\273\0244\355<\257\246\026\275\360\340<\2754\274\005\275\350!\257\274C\355\330:\322\245\221\274\177\240\001\275R\032\305\274\204\000\205<-m\025\275\335\214\274\274\202\251\355\274\242\3400\275w\356$\275o\317\264<:\202\257;\312\345\326<\241\353 \275\004\265l;\345\220\333<`\005\303\273\257\200R=&\360\263<\260\254!;\032Q\325<\206^\247<T\256\002\274P\376.\275\275\013G=\325s?\275\023\330)\275\225RY\275\202\020\273\274L\241(\274\376\306\010\273k\202\326\274\335#\314<\364I =[\226_;t&-=\331\336\202<\374\004-\275R>\340<\234$M=\213\255\366<QsT\275\032\"\275:\002\362\001\274\205H\r=\365x\360\274,X:\274\275,\'\275\316\265/\275\264\345\370<\316O%\275\323Q\352:L\310\247<\031\245\034=,\3065\275k\335\204\273%\000\t\275\002\235\373\274\234e\277<4\303:=j,\355\274o\376\017\275q\205\021\275\245\243,\275\317\255\350\274\230\277\362\274\220\306::\233\334\007\2747\305\216<Y\354\233<\357\004\374<\023\200\014\275C\241F=\246\312L=R$=\275M[(<:n\211;r\353;\275\220tD=\346^\312\274\206\n\366<\253\013\020\275\013\241@=Z\t\215<\213\261[\274\217\365}<\355\"0\274\330\341\244\274G\242@<\232\001@=\257w\336:\345\265\033\275\325H\024\275\032\332\257;-~\273\274\034\022\231\274\341Z\312<\254\367\036\275G\265_\274\245\352\014\275\010\006\271\273\215\034%\274\337T\031:\323\025\304<\215qQ;\264\313\265<\245c\306<x:6\275\031X\023<\351\t\346<\207\314O<\225\245!\275\2365\353\274\260\266\236\273\302D\326<[\266*<Y.\n\275Fe\221<\350\307\371<F\032Q<`\016\213\274\301p\016\275O\303R\275\236\244\026\275\014\330\341;\336\227\264\2743(\230\273\211\241\340<\366\264\010<3\003\222\272\362\347\030=\027\034\313\274\225\211\320<\205\236\226<\213fV\275pd\010=g\320\235<Y\243\033=\352h\021\275\031\331M\274\325t\226;\207\274\361<\244\006J<xu\336\274\351*A<\215\234\355\274\246\260&=>\370\217<\207\315\000\275\354\035+\275|\345&\275\356\222\021= \036 \275\310#_<\275\025/=\010\340\245;Z[\n\275\246\365\014\275\320Lf\274\206\327*\274\201\342\017<^\217D=I\367e\274;\247\030\275\301\232\214<\301\343\022\274O\014\001<\246;$<&\017\002;~\217\023<Wp.;\376\310\300<:9\210\274\031GV\2759\016N=4]\006\275v/K\275\257\365\330\272\200\342-=\243x\017=n\237#\275w\0219\275\262\301Y=\277y\214\274\277\220A\275(\256\236\274\201\r\225\274\232d\020\275\237\330\321<N\3152=\324\236\032=\321h\031=\020\t\366\274\206k\255\273\276\363\027=Z\321X\274\220q\240\274:\022\246<?\327U\273\336\222\032\275fn\305<\262\357w;0\026\207\274f;\017=\\5\023\274\233\350T=N\352\304;\363\202\022\275\307\0169<\215\203\363\274\377&I\275\3703\242;\006\372>=\363W\205<\353\256\256<s\213>=Y\237\032=\311\344\372<q\032\035\275:+H=K\037$\275\343\203\231\274\347\"\222;^)\204<v\014\377<\242\254\005=R\335#\275\253G*=j\337\343<\255\352%=\027\246\222<\314\3140\275\271\364\312\274dHE\275\244\263\027=\215\035\320<~\023\233;\245f+=_\177\370;\0039\321\274t\314%\275\225\3209=\3400\366\274\367\335Y\275\201\256\013=\022nM\273>\257\014=\000\322A=\315|\n\275\251\227\"=i\303\262\274\211\2372=6\355\244\274\373V\362\274$\231\330<\'\332\212;\263\'\177\274\342\272o<\371\277\343<\275S\335<f\361\350<\314\333\017\275&Am\274\236)\007=W\217\270\274\301\212\r\275\304\314D\275\323E!\274\005$\336\274-m\221\274\361l\303<\326v\353<\\\350*\275\227t\251<\253\035\003\275Hp\n\2745\332\221\274\325\r\2608\340\260\005\275\'<}<\215:\317<t\301\256\274\016(4=HR\251\274\255p \275/R\223;\331e\262<e4O\274\004\266\030=p\360\243\273\212\206M<Q\244,;\30366=\345\027\304\274\257\300\000=`\'\031\275\230\374\212\274\214\2179\274\30248=\\Z?\275(\013B=\246L\007\275\267hQ;\2351P<\312=i<\332\263\231\274D\252X\275\344\233\'\275\'`\037\275?\341\354\273\2058\031\275\232\004\364\273\271R\210\274ll>\275\0369\320\274\224\215\370\272tL\223\2734(I\275\341\220M=s\307\026=S\351\213<\254\353\245\274\242\"Y=\373m\257\274-\r\361\274\037\275\024\275\2545\267\274~4\024=\226;\274\274\265\331\266\273\3512@\275\245^%\275\202\271\331\274\337W\373\273\226\231Q=\264\302\257<\230\177\033\274\303\3361=\312\327$\275\376\020\"=\340FO=\312\365K;\013<D\275_\266d\274\261\373M<-\271\245;m\257\027\275V\245\030\273n\275\353<\344\034\n\275\355\315-<s\350\334<\213i \275\302\274}<!\224\017\275j\377\026=\020\304\361\274e\230\322\274\020\010t\273\341\274\242\274\036\2336<b8\356;:\204\231;sk\001\274O\266\275;a1\276\273m\357\350<N|H\2755\020\032=Tj\201;\325Ze\273\r\264\226\274\005\375\236\2749\233<\273^\"\317<y\372#\275\302\",:*(\346<5\233\334\273\224\366\033\275\316\275\020\2756q\207\274\325\264(=\257\332N\275 |Y\275r\037%=\224v\211\274g\261\025;d\002o\274\037\372\373<>\"Q\275\301\364\270\274+\235\277\2745\264\005\273\034\356\303\274\214\036\321;\321\244V\275\335\360+\274>>\373<\3323\302\274\310\253\023:\0229\013\275J\302=\275q}\276<\231W!</K\020\274>\371\034\275\333\352M\275\236E\264<\250 \006\275c\224\255;\222s~<?\275\367\274\341h)=\'~\363\274\315==\275\005\035\006<\320\'\334\274\324\354\221\273\221\376\004\275f\030,<\334\333%=\261\202\262<2yH=\306?\354\274\017(\033\275\334\305\220\274o\026\233\274\335\017\007\275a\370C\274\224\\P\273\217\277\240\274\366\367\272\273\333E\211<:\n/\274,*\021\275epb;\217\305\216<\267\0248;*\014?=\377\035\237<\235\374\222;o\210\354;\367\322\016\275\273\352\237\274\004\347\024\275\326\302\334\274x\245K=\004\357W=gz\002=\237\355\306<MN\361<\n4F=\264\336\177<s\2649\275\357?B=\323.\031\275IRF\275\023\276R=j\235E\275\342\"I=2\232Y=\356\360\301\274\244\206\226<wa4\275\344p\024=\316oI\274,z\013\275!\270\272\274\306R\361<u\264\344<\200\274\363\274\366\312\001=\'\337\037\2742\241\366\274\262\311-<H\364\031\275\001\242>=\n\324D<\317R2\27584\034<\275\262\224<l\034;\275\302J\334<\233n\005\275B\374K=u\004E=LV\014=\267\273.=\274\010*=,\246\334\274c\315C<W\002\364\274\022\312\260\274NGC\275b\314\203<X\233\320<\304\250\004=}\207\226\274lnY=7\355\247<z,\372<\223\344U\275\260\211,=b\241(\275\026\345Q=\316\367\376\274\021\365\203\274\027s\213\274\037\2603=\256\3215=\014Zd\274\220\023\022=\221^S=\340\232\030\275\3269N<\315\377\232<?\336\277\274\000HL=\371\257\025=\346\250\366\273;\340@\274R\257\372;\035HB=\027\246\223\274\374ZW<\222\177.=\014X;=h`@\274\033,(\275\227o:\275&H =g;\024\274\001\305\362;\005\353\367<Yi\224\273\004\266H=\2134N\275\005\016\000=^\225\r=^\320\245<\244d\026=`K\242<\322\256$\275(\373p<\326\377\317\2746\220\013=\320\376\215\274\245\'\276\274\345\374Z\275\325p\241\274q\255\252\273\310\233\\;\r\340\n=\376\200\200<5_:=\312\274=\275@,\236<\205\345\237\273\347~\365<\000\370V=\347\332\333\274,\312\314<`%T=\337\034\n=o\230$=G\014[\275\016\224\322<I^@=\324NY\275\320\311\273\274&5I=\323\217\321\274G\r\261<\003\300\264<0\243\365;\225\243\303<R\366\n;y~\211\274\212\344\244<\262\033A\275:\2131=\024\370)=\204\362v<\366\217\337<l\370\314<8\177\020\273\207P!\275H\305\357<\260\206\001\274Y\251\n\2751\233\030\274e\034R=\t\025\037=p\214\242\274B\257h<\001\322\302\274}\177|<\237*\203\274X\024\032=z\257D\275\376\327\260<\247\260\377\274Q\226\212<-)3\275%\2318=\355\247\274\273,\014\317\274k\350I=\246\315\212<T\331\341\274g\245B=\332I\211\274\377O\266<\222\024G\275k\335*\2751\0036\275\021BC=~\370\226\273H\'\347\274C\235G=\2423-=\307\312\031<\367\252\023\275\024/\317:\027{C\275l\234\356;\245\031\005\275\336;\245\274:\332\237\274e\013\221<m\211\232<\010\230\035\274\275\014Y=\271\202Z\275\274\021\017\275(\'+=)c\212\274\260\333U\275\013\2224=mDK\274\251 \334\274\2152\206<\255\316R\275\367HN\275\016\037\260<\253YU\275\315 P\275\254\267*\274\"\217\005<E?\r\273[\272s<\010\0065\275\243U\010\275\363\356%=8Dd<\247\021C\274\244\317\340\274\324f\n={\267H=\tKB\275;\377:\275\033\262\227;\301\250\244<\233F.<$\373\322\273\272\377M:c\340\312<\245m{<\365\254\351\274\027\240\202\274\261\243\t\275\367\275\215\274\257\210\341\274@\3572\273\0026@;;\227Y=\257\242G\273\023J4\275\357\3016=\300\216\304\274b\335&\275/\311 \271O\353<\273X\273\003<\362z-\275\245\270\374<\025\330\325<&o\002<W,\010\275k\032\332< \253\007=T\025\253\274\357;\035<S\267==j\213-\275P\264\230\274\264\244\244<K\215#=\210\335$\275\224\237W=c\215\343\274\247\267\r;\202f\014=0\253&=\370\212\006\275\341\376\007\275\377k\271\272!\022\235\273\255P\201\273N-%:z/\257\273\373,\220<G\373\316\272\377B\005\275\014\241\201\274Rg\010\274\027+h<O\266\"=%\377A\2759\360C\275\253\345\014=\366\257\002;\206\017\325\274\311\263\033<ND;\275\356\343\377<\245\270\014\275F\307=\274\273\036\324\274pWR=@\322\376\273\374\314\206<Z7\315<\254\027=={?\267\271DN\031=\322\210\216<\245\\K=\253+\211;N\302;\275S\222\343\270\204j\033\275\315\235W\274\005\276.=\247\311(\275\001\357\202<(>\275\274\001\206\261:\270V\001=Y\366 \275\372\0205\275T\267L=\010\231V=w\0371\275\366I_\274\nT\354<\271\'&\275\001\337H=\310-\341<\333TK\275!\275\242\273\324z.\275w\227\006\2745\262\177<v\207B=\317\376\014\275\270\252R:\335\326 =\254&\022\274\000\337\177\274\033!\252\273\244,T<H\007$\275\331\274\010\275\003YV=-\221\024=B\3639\275\311\255\241\274f\274\254\274:j\336<|\210E\272\031\n\206\274\256\006F\274\267bG=^D\002=\026D\031\273\360i%=\033\374?=\250\2621=\200Iu<\375\347\346<\301=D\275\327\3573\274e\345@\274\333\326\006\274\236q$;\265fR=\232=\2258\233.\334;\345\0335\274Q\244\020=\274\206(<\320\3359\274I)\243:\336\023\002\275\372\332E=\355l\014\275m\205\204<[\024\324<\321\344\020\275\322\364\r\275\325?-\274\213\362\007\275Z\353N\275\236!\346<O\270\303\274)KG=\360g;=k\334\314\274k|\334\274\317\201\354:\302~\213<8s\242\271\036\310:<\343T\310<\0346\016=;\302\261<#\220\006\274\233\326\265\274\014\303\345<o75<`\332/=7_J<P4\245<\366\010\243\274$|\016=]\356\000=#s1<#\326#<\341\205\024\275\310\351\004\275\253\253\027\275\376\027-\275\306\250\022\275i\330\314\274kq\235\274\334\357S=\323\025\376\274\300\277\010\275\364X\276\274SU\272<Rg\021\275c\244_;hM\347\274q\372\036\274\226\340\332\274\313(.=O\371\355\274\300\3455\275\326w\026=\303n\036=\342\022\t\275\265\262\347\274\263.\342;\037\377\361\271G\017[\275\t\017\010\275{\277B=\007\275\233\273\317\224\t=\n\325,=X\277\342<\026\355\315;\220\236\000\274\022\215A=z\227J\275\035<\365\274wl\242<\205A\003\275\211\010!=\327\334\205\274\243}(\275;\301e<\210K\025\275CxH\275R\352p\274\332f\n\275\332#\311\274\373\271\305\274\035\016\335\274\277\027\362\274\301\3325=p\304&\275t?;=l\212\274\273l\263\364\274\363$5\2752[3\275}\312\275;9W\010\273p\025\256\274\177\273\265\273\254\246\222\273\225.\303\274\"\263\005\273.\367\314<\330\010I\275\253\316)=|\007U=\014\272\031;A\351\224\272\'IZ=\233\216\222<\204|I\273\343\253\320\274\347V\236<Z\273\t\274\027\374U\275\375\264W\275lEo<\267\255/\275(\216U\275\007\317\025\273*z}\274\212]6\274I\341\272\273\275\016\351;\220J\321\274\034C>\275k\274\374<\372\227=\275(\205\010=\233F\035=\324\r\324<\0227!\273P\020\006=\266@y\273L,d\274+\n\212<+\316\311\273\033\214e<z\305\021\275~\303E\275v !\275\nRA8l\341\007=\237\3137=\024\202\220<O\320\r\2758\245\037=g\306\200\274}\004\035=\230\356\271;uQ\335;\231\370V=\006\000\344\274\232\\\002\275\361\367#\274\274\2269=i\302\006\274\212\247\221\274\335*H=\264\315\343\273n4\000\275\006-\354\273\230\203\332\274\220KA\274\201\212\364\274\236\325\025=\002EI\274\n<\003=-\0008=\213\201\333\274\324\265\337:\267\t&=-\345X=]eW<\334K\025\275r\007\236\274\353\241\032\275\211\330\206<\263\220Z\274d\020\366\273A\2115\275\022\201\201<`\360\035\273\034\242N=2\3641\275\252d\330\274\020V\360<\323`w<m\010\265<\275k\377;\316t*\275\236\252\017=\256\027j\274K~\345\271\000\231\343\274c\370\346\274\2218\271<\264#R\274\217HK\275\313)&=,`\350\274\263\3320\275T\017#=\372\305F=\355;\336<a\201\375\274D\013M=\225?O\275\243\303;\274\312J\335\274\317m\032\275\036@\005\275m:M\275\351\236\217\273\346>U=\216\021\275\273\003\316\002\275>F\362\274\363\316D\275\377\313\026<\364\036\031=&\354\025=\267\302\270\274\373;\213;\332\261\234\274\204\313\342<R\370\355<D\031\007=\025\256\314\272\0232\325<\240\002C\274\002\016c\273\006\361F;>\243\226<k(q<\026pP\275eS\006\275\023\356\300\274\213K\243<-u\014=\301\225\224;4\360\370;\354\303v\274\216\347*<\037\256\027<\344\017\326\274\026\027\021\275<\221\016<JJ^<R\341;\275r\251\024\275-]U\275M[\275<\300\321&=\207\020\001\274\247C==An\331\274\340\034=\275X\235\004<\301\317\000;NWB=\370`\255<\265\314\371<&\327\251\274\017\216\201\274R\370\273\273W\316\232\273\017\0061<\271\002\251<\247\312\347\272\211\006\031=\274t\245\274j_==\252J!<\202\020R=[!S\275\221\305~:\324\373\024\275\230\224H\274\030\375\213\274Z\036\250<\314\030\261\273Z\253\277\274\362<\027<\024E\004\275\252\200\336\274@X\317\274/\345\250\274\374\270\247<;\326\364\274\306\365$\274^\306\001\275\367\034S\274\364\231\023<l\255y;4\230V\275\352\214C=\033\315\030<\347\271\n\275\334\314K\274r\247K\275\3579\014\275\021DN=\234^\020=\335\332\n\274\356\364\300\272V\003\021\274z\027\036\275\210\010\213;\342\002/<\2250\257\274R\230\t\275\233&A=\353\366\032=\200\314o\274ehA\274\236\274\000\275\334\002\252<9\320\222<\005;\n=C\367\351\273\253\031\353<\335\271\320<\025>\307\274y\242\005;sW(={\3263\275/\242\034\275\216h =\333\347\355\274N\232\'\275\026K\242\274\265\355\023=\2729\350\274\231ow\274xh\372\274R\326\314<2Q.\275\244\202\261<\270\t\006=_P\253\274\214\212N<L^.=\207\\\r\275\237\343\232\274%\353\264<\324\223N\275\217\215\224;4Xg<\205H\243<\265\267\254\274\331\336\350\273%\r\374\274\034n\023=\2652!=.\264\010\275\\%Y\274o\201\000=>ZG\275\237\327O=}\344\271<k\217\254<\360\010\363<\353\255/<\005?\'=\373o\336;D\037X\275va\000=\255\372\270<\250T\010\275\316\366\032\275\217Ux;*fA\275\203\210R=\232\0359=k\340\272;\214\265U=\247\376\245\2740V\272\273h,\310<`$\'=\321\244\201\274\275\3100\275\017f\346\274\215\251\262<\347l\023\275=Y\010\275\310\005\022=\355C\375<c\232\014\275G0\350\273\347\004\030=\365\006G\273t\021#\274\'\006\367\274\300\000\343\274\363\361\251<=\253\374\274\006s\262\273:]/=0\244\244<\255\262\000=\275\223@=\260\317\'=\253\310\344<\017\240\020\275\212\267\017=\262\373\221<\231\337\205;\037\025\237\274*\356\034=\364\376V=\263p#:\004\340Y\275\\]3;\200\241\341\274I\326 =\303V\036=\277\354\355<\353\306D\275\013\234\323<F\024\353\274\251\234\027\275U@\255<\260R\211\274\323JJ=3\266\333<\017\3739=\374X\233\2746$2\275\004\210=\275\372\2257=\360vJ=\333\007\005=f\260\215\274\267\275E=\014!\274\274\324\324\000\275\366\357\002=+\204\257<\360|O=\211J\231\274\010\353\304<\364\276x\274\301\032\336\274\205\036\200<\"<>=G\270\244<\342a\025<CfY\275zhR\275\252N\021\275K\345c<#%O\275\352\373\023\274\r\203Y\275>\360I=\210\264\246\274b\276\217<\205\310\224\274\355\360\342\274\336\305\005=2=6=w\343\010\275\216\3403=V\030\230<M\025\215<\276\314\274<\203\037\n\275\3075I\275\211Nx\274#[\";Hf\254<\224g:=\023\243\372<\341\214\035=\022\262*=\300E0=\234\235A\275AT\023\275eG\016\274Xtv<\017\343\303\274b3&=\265\360 =P98=\243X\024<z\233:\275\374,R\273\361\332\262\274\243}\240\2749\355\225<\334\323<<\315*,;\314i\315\274\350\371I=\341\247\257<V\376\305\273\0102\220\273h\226d\274\210\316\324<\020w\025\275\277r\253\274\277\3700=\036q\371<6\231\347\2749L\024\275[~\030\275@/\223\274\223\023\002=\224l5=\351\037+\275!\264!<\026>\004\275.T;<PE$\275\332{Y=PZ\023\275M}4\273\350\227\263\274\027\200\013=#\321\235<\374\204\330;;\214\227\273g\364\214<\255h\366<k\2575\274\264\257\213\274\331*Z\274\027\204\030=\026\tM\274\311;\r\275/wT={\243T=%\215\n<>\3763\275p\315\211:\360\304,<\016\017(\275.\023\320<<\250\006\275*Z\340<\315\362.\275I\376\222\274\376$\356\274\266\203R<Co\372<H\372\032\275F\\\333;\357\335\320<\256\340\235\274\265\036!\275\020gY=\032C3\275\023\332K\273\200\272\255<=>\'\275\256:\223\274\322\246F<\005b\t=\203\277(\274#\177\032\273\270\225\244;\252\025\017=\307\374G\275\243`F\275K\007\345\2740}\272:\212\304\357\274\363\320\037=\027\017\004=\306\242\205;\277Ik\274\343\254\356\274\010\3646<\252\362\237<\276\361\247\273A\266!\275]z/\275|`\027=\024:\333\273=\367#\275\224\224\003=\216-\031=#\336\004\274\373\004\n\275vN*<\034\272\254<\247\357\n\274l\203\332<\371\264\321<\313\036\342;\r\322\321\274%3\026\274\r\221\233\274\334\r\261\273z\331\016\275\316\254;=4U\016=\\\226x\274\340i)<dbR\274kK\336\274\003\021]:\371\207\024=)\363!=\005\004\"\275J\332\351<\3215&=s\271\342\274@\210(<\231\356\017=\203k\034=\271\221*\274\263\231\266\274\003\350\220<n\320`<\016{U<e\014\377\274\320\032$=\3446@;q\255\215;\354c\031\275\350\336I=\265e\230<I\007U\275f_\'<\367\031\320;g\\\327\274\031]\351\274\330\037\350\274n\316\014\275f\323$=\372\027\256\273j\266\237\274\031\335\210\274\n\225q\274\373\245\365\272\360 \375\273\006hy<\266\227\224\274\342{9=w\251&<n\377\376\273\2655&<\215\2338=8k>\275\003y\266;\340\030\020=\342\331W<-\255\331;A\356\337\274k8\032\275\242\375\264\274j\315\360<qnY<6H\302\273t\250\274\274V\235\214\274s\232\345\274\364\261\001<\016\273s\273\201C1\275\002\357/<n\202C=`\202\031\27425\037\275p\275|;\254\3418\275\366c!\275mT\036\275\373d&\275<\357\204<\310\316R\275\205q\\<\247`Q=\371\304l<\274\354\233<W\005W=\344+\212\274\007\365\001\274\273\361\232<\250\265\314<]\005V\275\251\314\225;\r\025\215\271\2338\314<H\240w<(+F=\315\266]\274\367\256\336\274\231gW=m<9=_\r\326<\333\250*\275\013;h\274\030\020==K\344\253<\230\037\344<\035\304M=\2169\353\274%\310)\275\206\327 <`e\"=e#\345\274\245\3504\275\001:\355<\320Xt<l\n\002\274\353W\305<\004\002\325<\300+w\274dn1<\222Q\247\274\031%\210<t\201\021\275]7S\275\r>O<\363\344\211<x\367\362<#\322\036=\333\224\037=\216\261U=\266\341q\274^\324\034\275\252\177;\275XSX=\315\2461\275\212s_\274=\273B\2754\335e\274P\336\241<r\357\323<\337\211L=\261\277y\274Q\253\344<\355\2503=TbS=*\257\016\275\322\'F=\324\202\001\275\247\030>=qc\222<D\315A=\314\200\002=\364\352P\275\231\333p<\221GX=/\207\r<5\221B=?OC<9wH;\210\037v<)\324A=\350\200\306\274\341\002\245\274O\320\312<\314\273L<\344\335D\275x\373\231\274r\260\237\274\301LE=\226\207\274\274\n\256\346<\\\265\022=\212B\033=\214I\255<\337\234\032=Y\007\312<\325\343$=\222\216\367;\021\217\023\275\254}7\275\260B\226<,\027\n=\345e8=M\333\253;M\316\256\273\356\260\025=\026C\356<\361\226\031\275-\203;\275\017\025\367<\023\353\353<]\255F=\330\2560=\351\355\340;U\351\273;\305s\000;\372\277\023\275\331p\344\274N\346 \275\225\274\300\274\256S\356<s\377\007\274|X\205\274\240^\236;\314\177\222\274Y Q<\2118M\274\207\302\314<\223\346P;\367gP\275\260\313\031\275J\350o<\306\tq<\226\036\313\274\335P\205\274\352\323)=\036\'\260<+\354\264;=\344\005\275\260\014R=e\023\311\274DlG\275t+\374<\221\260E\275\245\347\254\274kLZ;\302\221\341<\306\255+=V\251#=\272X@=\272\033)=c\267H=\316N\003\275\016%\001=w\227\177<\262\0350=\004\006\215<1\270\364\274q$I\275\303\032\026\275|\275\317<$ m\274\235\300 \275\202\202\352<y\2506\275\314\377\254\274\014\362\006=@\264;=\010\355\217:[\017\231\274\233M\022\275u\2268=f\344/\275p\351\310\273\210E{\274\257\2575\275m\005W=\n71\275\213\344\342<z\205\230\274pL\035=\177A0<Lr\377<-7\306<\336\276J\275\344\212\024\275b\242\374\274\356\267\356\274\233\201\254<\372%\010\273\257LS\275\230\274\004<\375\271\002<\263;\306\274zwt\274\346\350\241:\023u?=*\020,=J\332<\274\270J\371\274Eb\313<\202E\211\274\334\247\027\274d\000N;8\247\302;\2527\263:%\371\007=]\243#=\336\323\006\275\3604\021=\002\321\332<b\341\323\274\237\340\301\273\263\332\"\275\274\346\004=\013\303\010\275\352*\370<e\035X\274,\365\274\271\351\276;\274T\r\245\274A\001\251\273\343\260\257<\207\3337\274E\202\323<\307\321\250;^@B<\376\314\031\274\031LD=\277\335\363<\036P\016=XG\361<\311+\347<\372\002\031\275\266\3738=\205\340-;\237\006-<\036\225D=C\020\037=\256M\023\271\351C\226\272\245\244\253<9\257Q;U\r<=\240D\347<\2140\027\275\337\217\362<R\027\371\274C,\321\273\260\310E\275\344\025\005<#\340\022=\201\233\263<\236\324\303\274@q9=\261$C\274J\215C\275\026y\272\273\201\037 \275\215\273\261\274E\303*=\251zC=\277\271F=\036\3502=\245<D\274\302\247\361<\267\370\346\274I\373\257\273\306oO\275\237;\t=\316=\"=\007nG=\271\222\006\274b\004E\275\r\241\233;\276u\001=g\021\230\274\2538>=\250F6=j\257Z=-\351\200;\360K\331\274\3420w<\014LQ\275\313\272\324<\007\000T\275\342\250U\274j\272\001=\213\337\001\275\244\323B\275\'\345\023:\2670\025\271@i\001=`\2056\274 8\251\271\247\262\325\274\312p\245<\253,\004<\034[\312\274\272\240\207<_[\236\274\256uY\275\024\335 =\314\246<\275\033\033\001\274\323\335\343<\317,\037=\250H\025<^\0267;\375@T=\247\260\366\2740\246R=r\245A\275\325\225\327;*(\236\274I\021\325\274%\317T\275a\203\230<}w\027<b\313\207\274r~3;\372\354\254<\246\345=\275\"e\322\274l\314G=\002m\036\275\004\376l;C\213E<\324i\312\274\305\245>\274bD\016=!\3167;;l,\275E\361!=\031\025\372\274\031R\260\274\237S\241\271\204\002\206<\214\317\002<#wI\273\204\207\307\273\237\235\356\274k\323\346;Orc<q\347\265\274\000I\275\273\261\324\221\274\342X\316<\366\352>=\201\232S\273\326X\030=;\'\352<\312$!\275Q\177\212<\340?u\272oa?\275A^O=\335\314\214<\351\223\005=8\037(\275\030d\306<C.\036<\356\0271\275\tc\000\275Z\242\263:\267\202I\275\326\334\373<t\026\336\271\227\3048\275h\3705=\313-\014=7\031?\275=\267\273<\201\026\010=\021\212R\275(8\"=\371R\r\275CPM\274\263e\343<\261\264\021=AG\3619k\323\031=\302\350\332\273\325\275\340<b_\023\275\357]\243<mHM<\207\n\017\275Q`\212<\307\\\317\274\345\367I\275ZD\323<M\340\004=\013\254W=a\013\313<7\032#;\234:\223\274\324\3144=\010P\020=\210\211;=ozF\275\312\355\023\2758D\255\274\337\323\223<b\365t\2737\350\035=\373\200.\275\356=\317;\271:\250\274\236\224.=c\325#\275\"|\363<\314\270\032=\255r\026\275q\177\344<\267\243\006\275m\315\267<5\346\177<\201\306\022\274\372\326%\275\032A\353\274\214\032N\275\3326!\275\236\307\320<\304\252\261\274\246\331\275<B\335j<\211#\021=i\351\037\275\360h\337<\000A\352;\351DW\275\324\211\221<\034\340\037=R\210\241\273\236\344t<\2074\"\273n\272\037=\024\262Q=\2665\017=\256\r\260;]\002\265\274\257\230A\275(\327\264<\233\251\010\274\362V\023\275\325\260\300\274+\245\253<\t\\U=\240.=\275\331`;=R\035\034=B \364<\'\347\030=#\001\217\273\373\003O=\316*\001\275\307\337\311\273&_1=\210@\036<v\274\032<\227\006V=\250\267\020\275czP\275b-^\274\025\274J=b\341\375:Yz\031\275G;\231\274\3103\376\273 Q\371\274k%\016=b\035L;\357\3064\275\335\316\371;\304F\014<\371\321,=\304\256r;\005\357*\274\345R4\272\250\rL=\242\227\373<\326hD\274\252\002T=\266\354\301\274\001o/=@\312\006\275\2538\230\274\007\003g<\217M3=2P\250\273\265\027\356\272\261\023\317\273\365H\353\274uB\203<\036a/\274\345m\005<\306\240\376;\220MW=\206\206:=n\357d<\016\317t;\2258V\275^\246\205;\330\014:\275\276A=\275\376\217H=\213Z=\275uc\340\272\310\2361=\264K\035\2756\t?\275\253\2408\275(\213\332\274\300\303N=\225\240A=p\334>\274\344:2\275\021\337\307<\301\312\277\274\273\314\t\275h6:=C\334Y=\275\233\366<\023\352j;V\341\017<\343v%;>%\341<\014\026\377\274]\300X\274\365\321\272\274Y\2417=\034]i\274n!\302\2734\372\341;L\r\237\274\376\323\263\274\352\0030\274\272\303\036=m\302Y;\0233I;\352/\005\275\221\035\310\272F\262<\274U9\n\275\375\272\376\274|\351\3579\314\0263<\350(\261\274\004G\001=j\301s\274\254\225\217\274\324=\316\273\345\271O=\340\232q\273\rx*=\027\311\322<\014?\016\274\0161\024\275\314\t =\371p\032=s\363i:\314;r<\370\344\307\274m\001\005=\264\315\000=p\340O=C\010\231<\266^8\275y~==KnT\275*(\001\275\226\350\262\274d_\t\275\302&\20199\2022=\020\245\224\274\200\2108=Y\276\216\274\263&P\275\262\314L\275\027\262#\274\375I\271\274\3248\234\274\210\033Y=\241\214\020=>\311\246<\257a\222<\374\016\325<&\0263=\370/$=\204\352\003=C:\032<\377\264L\275D_?\275P\222\324< 5\013\275\007\233\230\274=Z\205<\205\033\325<\336\211\342<{\'7<O\334C=\325\024\027=\005\210Q\275\273/[\275\0107\226\274\222aS=\006!\305<\013O\226:E\214G=\365H\332\273\306\365\352<\\\346\013\275X\353\024\275\212\330U=\211\035S=\272X\376\274\205\371K=\351\363\205<\207sB=\303\203\230<\027\001&=\000Z\036\275\317\277\337\274\311\333\346\274\2647Z=t\021Z<\372\246_\274\242\227\201<\322*\026=\335\337\014=\365\035Z<\225\"\n=\355oM\274+\213S\275X\201\220\274T\030\005=\376\2333\275{\270Z=\372\265I\275\215\346\013=:\250\227\274\207\360@<VQ,\275\323\266V\274.-\020\275\005dH=)c\355\274G0\037\275\330\345\010\275`\244\261\274P\352\343<\317\364\216<\317\202\255\274\017~\372<\233\311P\2753jJ=0/O=?\255;<\\*\210<\240\366\222<\374k\266\274\001\311\264\274H\361\264<e\252\330<:S\306\274f\310D<b\2254:\375\341\275;\205\365<=\200:f\274\350\322\277\274qw-\275\030x;=t\302\364\273If\372\272f\342\322\274\tX\274<Eb\006;\367\024\236<\363<\235\273\311\240;\275\237\357\001=\245\321\307\274\342\'?\275\373\013\301\274\350\"\226\274]\251\315<<p\243<!$H=\341\177\030=\311\336\230\272\264\316\345<\031\336\227\272\035R\316<\272C\354\274:/+:nY\221<\026\215\346\274\346\313\226;L\224\034=\267\274+=\232F1\273\034\232R<\006\264\223\2742\273@<\020\267\027\275\311\3635=xb}\274\022\224\253<;G\003\275P\010\377<\016:\220\274q1N\275!V\000\275\335\274\334\274\362n\252<e\'Z=\373sJ=Ea\023=\214\245=;\366\262\361;R\036?=\243[\000\275E\3374<i&S=iZ*\275\306\t1=P,\037\275\0059)=\204\007\355\273\tUG\273\272\224\264<\232\257^<\261H*<\326Ub:\026\322\305<O\311O=\301B\355<\333\2056\273\213\223\217\274\333=K;[\344]:c\366<\273Y`N\275\263e\270\274\265\347\254\274\367\375&\274\244\3656<\321\2738\275:W\257<\367\320@=\363\336\017<\006E\234\274\201\3270=\350\266\020=\034[Q\275\353zJ=Z\376\341\274&\304-=C\247\220\274\177\006\240\274\366\006\r\275\000\267C=?CU\275\235;@\275\377\010\325\274\367\314\215\274\267\310\002\275?\007\017\272H\357\256\273\021\277\351<\016\366\301<\341H\275\273*V\027=\335\265\023<F|K\275\211\007\250<\324\300\014<\221\'\231<c\256\217\274vn\035\2751S\010=3\261\314\274\353MG\275\212\324b<\312\241\354\274\246bF<?\300\023<q6m<\247\371\270<\345\304.=p\007\007\274\236\240\307;\027\207&\275~29\275\374\220,=\370\376\265\273Or4=\021>\002\275j\267&\275UT\355\274H\'\305<\347u\034\275<\021\356:\244\032\335;r1\020\275t\263\010<\302\203>\275\316}\215:\234\221\007\275\037%\246<0<\314<;\207@=k\022V\275\203\377*\275\272\037(=\341\303Z<(\307\365<fy7<Y\200;;Y\374\304\273`\303\013\275\023\036\022:z_\200<\347}f<w\230\030=\007!\361\2741\333N=?\373<<j\350\033\273\033M\366<\273\327*<\020\022\030\275\316\231\356<\261\004\233\274>D\002=3\337\234\273,,\225;\264-\224\274\0336\373<\250\322\"=\026\2560=\310{1\272\347~\224\274\026\251\2179\2520\002\275\360_\017\275\275[n\274P,\200\271T\202\353\274RV\201\273D\312\215\274\247\021\031\275]\220\223\274\21710<j\310U=\372\330\263\274\307e\316:\244$\276;\357&\200<\r\215+\274n\327r\273\207\335\215<\006\203b\274?\220)=\325\360\035;\216K2<\366\342\023=\371f\375<\247-\024=k\320D=u^\225\274\274G\213\274o\337\242<\346\330\260<9fN\275\205\300`<q\324:=\340\0279=cp\324\274\024\362I\275\276\235\'\274\"@A=\315@A=\037G\225<\210\257h;M\326\254<\222\241,\275\250\010\036\274\260\031\337\274\276\321\236\273\220\n\031\273\346\325K\275-\341E;m|\274\274\036\311\006=\037\270+\275\314\323$\274\342\243M\275\323W\001\275\025\000$\275\031\236q:<\227\t=\257\266\236\274\3567\342<O\374\231<\316\013B=xe\374;+9\200\274\2046\211<j\263Q\274\200\243\030\275\'\373V\275\263nP\274X\375\365;\261\314\034<`:\220\273lt?=N\t\324\274bG\020<\225\255)\274\307\252\346<\200\365%=~xF\275\307j\017\274\361\201\025\275\2025\007=\340\367\204\273%1\313<\373A\300\274\360F\250;\235?@;\341g\205<\356\246\236:\026\020\030=o\2755<.\253\331\274\224i\024=u\252\t\2755#>\272,\266X=\356\274\t=\245x\022<kL\273\274TTD=\347P\301\274\372I\253\2748r\357\274\222J\276\274L\2234=[\355}<\325\030\272<s\252\303\270\334\177X=_\005\244\274\361)\307<\207\t\375\274\300\367H\275\356\316\301\274\201\377\266<\301\"\007\274\243\246\212<G\215D\275I\332>=\371N\237<\205\200A\273\214\261\337\274^\034\022\275\240;\312<J\n\361<\247\374\207;\354J4\275&[\325\274A\213)=\206\2270\272\371\217&=\356\236\036;\272\315\033\275Px\343\274\027r$\275\026\\\034=i\177\221\273\234\364s\271\241\023\020=62\017\274\266m;\275\260\372\035<\244\252\006\275\213k\232<\024\266M=\230\235(\275\3205\363<f\261o\274m\377 \275\\\004\371:\265S\007\274\331\327\003\274\367k,\275a\2066\275\332\253R=\027\314\340;\324\206\227\274\006C7=0h;\275\257l\"=\271\215\336<h\251\017=\352\016\033\275\363Hc\272\313\372D=,_\017=\353\236\213\274k\277\022\275S\242\374<\214\361\306\274\245`h\274n\345\344<\rr\256<k:O=\000?\334\274\0048U=\222\330?\275\351\266\353\274\224C\035\275#\261\317\274\2358O=\300\205$\274\371\251\265\274\2516\201\274\336\347B\275\202^\006=}\377\332\274\37786<\2521%\275\320AN=Z\242*<.\356\026=7\371\264\273+\016)= \2621\274\207\240\255<\372\242\036\275\014\002\335;\016\2732<\'j\230<\343\345s\274\247\253E\2748BL=R\332-\275}O\203\273V\254\256\274\273\r\213<\317\231K<\243\271\371\274bJ)\275\2663\304<\322g\r=S\203\017\274\026\251;=d\270Z=\315\263\336;\032\300\334<\300\336H:v\034\330\274\322\304W=\267x <\035\321\001=u\277\361<_z\225;(41<\023/+=\020\342.\275A)\225;;\030\033\275\210v\320\273\365>\273\274\352\205\346<\002@\312<\374\221\002\274\266\024\r<6C\007\275\243W\022=\355\037<\275\0207\205\274x\244\313\274\377\370\031=\013\313n<\205\322\254<1M\027\274L`\t=\204g\035=\374+?=\353\255\252;3\003>\275\362\317\235\273\035DN\274\251\350\351<\364\355L<\305\2643<?\274\014=Z%Z=\303\251\030\275\036\336\003=\"W\300<\225\351\002\275D^\254<\310\322\361;\341\227\035=L\370c\274B\250\000\275\003\353=\275\365~N=gs\022=\004\027\377\274\343\304=\275C}\014<lc.\274\347\020L=\343\1776\275\355)|\274Wf=\275\203\\*\275?\237)\275X\177\337\274\334T\362\274>/Y\275c\233\264<\231\037\244<\266%k<\264\017\375<a\243\274<eY\266\273r\375v\274sqE<\204t\362<r\230\235;\037\372\252<j\017\010\274\032(M\275@\330\230<\233\263\372<\360\\j:7\010\032=\341.\342<\311\260\326;\231\024\225<\345r\362<zjI\274\265\245Z=\274\212\003=h\016\205\272XP]<(\245\\\274\252@\357<\263\223\307<\024 \220\273{M\225<\004?\013<\306iL=\245\334)<\355\235\023\275*o\r\275\177\010\377\274\264i\032\273\014:\275<\264\335=<\236\220A\275\375\344\251<\352y2\2734\352d\274+@B=\253\014\356\274\300\310\277<\206\317N=\336>\232\274\315\177\364<\276X<=cx,\275\350\375Q\275\222w2=\220\204\370\274YK:=\350!\370\273c\335\n=\364\245\240<\217\210\331<-\3445=g\363{\274\376^8\275&?J=Ja\367;\230\014\345\274\224\020G=\300\235\021=\352\334\020\275K\376-\275\253 6=\t1\313\274\363y\014\275o\021\000=^\313\364\273\nHT=K\0042=1E\362\273\245D5<\307\211,=\211\016\243<\017\361\"<\361\333\345\274\241\014\352\273]\022\221\274\361<\037=\347S\030\275~+\226\274\343\344\255<\236\364\016:\235\360\030=\264\203A\275\304\337\303\274.L\302<\017\374H=In\230<X\327,\273\330:\333\274P\3520\2747a2=\333\205\025\275\345\020\300<\036Y\343<M\330\364\274\021 \023\272V\250\267\272\272\001\344<\275\224\373<\306\025\004\275\236\275\256\274\225\256\034=\225#\002\275\330\217\006\273U\334\252<\214xO\274\033\022,=\337<\025\275dl/\275\'\347/\275\341\214S=g&Y\275\3217_\274\320\360\224\273\354.\374<5\360\001=Fw\327\274%E\376\274\023\021\016=+\023\354\274\242\236!=\301\2339=\211T@=\360l\202<\215\032{<_\331F;a\376\313<Gu\202<E\216d\273\264+z\274v\037\366\274\373\364,<+{1=\365\356\277\274\372\2746\275/Q\353<\273\354\021\275\326\374\024\275\202<\303;\354qB\275U\334W=A\235\303\274\320\347\314\272\300\322Y=\234+\031=4\271s\274\023\265.<\323\376\332;[>[=\021\321P=^\265u;D\265\223;\3653\037\275ETP=\343\225\253<\200W\270<3\214\'=L\036\361\274\213\273\315<\353\023\035;\306\341,\275\031z\353\274\212K?=1\271:=\207\245\262\274\020\355\n\275\262\0145<\004P\235\274%&\247<K\350T=\304] =T\220\321\274\320@\004\275\207_\375\274\374\350.=\305{\360<\204\215\372\274\332\332\336\2728\r\372:\n\032B=\003s\266\274(\347\371\274`\204\'=\0251\016=\014\003Z8\365A\024\275\243r_\274\306\306\251<a~\355\274N\375\307\273\331\\d;!\341$\275T\327\035<\277Q\271<m\336\025=\000\303\336\272\361)\343:@\270\237\274\221\310?<\3570\336\274\264\310f<A\325l<iaP<\351 \306\274:W\020\275u\230\313<\244\3639=\265\360B\275\276\326<\275\206\235>\275\204\343\366\274Q\343%:\322\3670;i\020\266;\344\000\014\275c\214?\271\204WN;\024B\222\274\3203E\275E\330\021=\346\r\346<\010\302\327<\220\270U\275\250\364\365<\3751@\275~\301\324\274\312D3=\200G\022\274\r\236:\275\376\013\023\275\344\350/\275\305\243\364\274\215\2235\275\202\225\030\275>\346\026\274BC0\275\223\261\264\274\264O\035\275\331UK\275E_\t\275\206\342\242:\306\211\266<\002\030\014\275<to;\370W\375<\231\266\241\274Hz\022\275\007!\"\275*W\236<\305\217\235<;S\226;\027{\242\274\366\305\263\273\344\355\274\272\027\021C<\3650Q\275\003\307C\273^\316K=2\242\037=\210\022F=;k\014\274\036\256\347\2741\207%\275O)\001=r\225&=\270WI=\037\306\352<\301\306\311\274\237\206\263\271SPQ<\323\303\035\275\204+O\275!\202:<\341\020\017=\305\232\320\274N\024\026\275TgN=\261\3278=a\357\231\274\001\004\244<\336\355\007<\210\223\330\273v\352\343\274g\225}<?\270|\274*\202\000=\336\245\033=\333\023?;y\267Q\2751\006R=\252o\202\274|\270N=\255\232\004\275\310\321p<\304\333\2248\324L\014:\255D\016\275g\335\312<\263\327T\275\266\217\310<+\207S=\316P\326;\276\315\005=\334\341\\<\321L3=\357\267\337<\026\306\030\275\201\345U=\236\226\036=\227\335,=\372\r\003=\001\215\305<\377R\025<\rS\366<\2512\340\274#I\300\273t*J={g\213\274\216z\224;X\263Y\275\371dN=8?\275\273\032\270<\275\356I7\275B(\"\275\016\306\004\275\360Hi\274B\030;\275\216\356\241;\270\256L\275\370\313\273<\006\203V\274M\305\004\275\330x\252\273\354\375\261\273\254B\350\274g\030\033<W\301\035\275m\027\231\270\244R\371;k\202h\272W\2756:\317\370\261;\276\t\326\274\337\2637\275\327.P\274\374\246-</\014@=W\253\250\274\270L,\275b\377\364\274L\304P<\004\247.:\232\377\t\275\336JT=\260\274 =\327U\n=\032h =m\235\034\273\330G\036\275\t\241\301\274\250\220\033=\316\332:\275\211\300\343\274\0212d\274Z\003+={x\246\274\024\231O<\022p\036=\237\234A\275\327K8=PL\237\273H(\005=\262\006/\275QLD=\222\340\336<\213\377\270\274\357\221\205<\263\262\326\272\216n\345<\305@\270<\325\303\345\274\322\2055\275\236\276\n\2757W9\275\267\032b9\222\310\361<\251\\?\274\031\216a<\344[\021\275T*\315\274\272\301\370<\033\267\033=\226\351\243\273\373\343w<\002\215+=\347,\016\271\373\3476=%\226O\275\210\260\344\267\030\344P\275\t,\003\275=E$<z\2640\274\317\262\035=i\362\037\274S-\t\275\000_h;L\221H=\325\035\361\274\244\200\003\274rt\026\275\005}\013\274KR\003<\341?\004\275\340,\262\274\342D\r\275fIB=\242\301N=\034\245/=\233\242J<\037V&<\350\351\353<\177\301N=\213p\217;7\366u<\211.X=R=>\274\250\262\t=s\2341=\343\261\021\274C\371\224\274LP\344\274 HA=z\255\021=lM\357\274\352\357\327\274EH\n=\271.\312<\347\323\250\274\013\336\247\274\266\207@=k\253\361\274\334\322\374<m1*\275\266\224f\274\301\375.=\271\021+\275j\353\030\275r\306\002==b\222<\334\365\255;\340\236\363\274\034KB=\263^\177\274\000\237*<\205\270\342<\347BL=~%(=]\364\"\275ST\270<\223\'V=b\350\333<\246\365+=\007\264\'\274\316\005\243\274\017!\026<\031r\027=\014*\377\274\031\0304\275\370\241\324\273\030\341>\274E\r6\275M[Z\275\264I)=\320;\232<\347y,\274\206\377\014\275\026H\307\274\305k\272\273\037R\242<\"\022\005=\'\0068\275wKP<\014X\245:\327\3444=_\207T=\'\360\367\2747\3015\275rA8=\323\360\235\274d\014k<GI\022=t\240\326:\3424(=\222\372Q\275\357J\177<&$>\275\251\021\325<a\343!<\242\221\321\272\010u1=\254\0175<\323}\247\273\237\177\r=\242\216\322;\357\206?=\201f\025\274\214\361T= \334\007\271?o\250;\354\271\r=\360\240\002=\363!}\274Xj<\271\201\350\361<\317\215\035=\221\206\272\274\353\236V\275q D=S\266\353<YZ\032\275\006X\206<4\266I\274\'\376W\275\242\036N=QsK\274B\020$=\252\247\3506\376\360\262\274\347\375y<\013V\252;\"\265\322<\025\347\014=\371\\B\275_\326\337<\233m\016\275\246w)=\201\375/\275\375\261 ;\220\365\257\273,\372\371<\267l\276<\335\"\021=\022\351\255:\221\262?=fdY=\321\375\007=9\312\311\274\264\233\t\274U\277G=y\005<=\020t\\\274M\025\203\274\"\263\037=\010\216\231\274\315\365J\275\275J<\275N\242\013=\365\340\223\274t\000R\275?\3435=\362\330M\274\200q\333\2742\321\n\274\277\024\226\274\2732O\275\246L)=\350\252\010=?\372W=\300\336\336\274\244\237\000\274\203\374\310\274L$]\2741/\n\274|\366Y\275\261\235&\275E\227\000\275\254Y\215\273\\\"\322<\271\321f\274C\375r<=\264B\273\301\330\002=S\0337\275\345\210\350:\013\360\021\275qq\021\274\231\313\353;\230)7=`>L\275\247F\'\274\344\216\217\273(\265\030<:_\356<?H\360<\375\213W=c\030\363;\276\367\353<,\230\305<&\2467=\251\3731<\335\313\323\274\324?\037\275\323\004\372<\206g\t\275\273d\203<_\325\r\275\027\030\222;E\250*\275\365\337\254\274\232\215,\275\307\375\003\275C\357\006=z\305_<\234Pp\274\2773\247<\315\230\245\274Q);\273?\330\336\274\210\3502\275\305\3267\275\217\214Q=K\306{<\336\352\252\274\362L\033\275\254\342L\273c\377\310<\371L\257<\222%[=oO$<\323\261=\275\r~D=\370\2702;\312\317\023\2757\007\340\274\357\337.\275\235\373\006=\350\351\234\273\337;\317\274\275\203:<\260\355\t\275r#)\275nbX<\2356(\275\"\256#<\371t\036\275\316\026\374<\022]\225<\267Z\024;\214\301\323\274\0239+;\335p\376\274\"\3247\274\203\274\301<>,\347:&\304\022\275[\\\313\274\013\216}\273\"\345 <\n\322J<\366\211\003\275\305\227>=[\212\275\274!\'\027=\305L&=\241\202(=\316\026\023\275\251MR\275e\321:\274aPV\275\027\036$\274\013\314\376\273lT\034=\303\037T=4\303\252<\207\020\340<\313`Y=\371J\276\274\303nU\2757\377-\275\272\337\357\274\203\1775\275\242\356\032=\347\302\253<\311C\237\274Lb\026=\033\333\235<\217h\030=\002\366\007=X\212\\\274\211\332Y;\221\274;\275\326X\342\274U\255\022<a\273\246<\241\020V=Z\256\025\275\326@\016<b\223\222\274\034h\205\274\016\031\252;\203.\237<fZ\351\274\272\305U=\254c\004\274\364\210\017=\324\244\200\274,\035\343\274\262O\274\273HN.\275\017\223\351;\0333 =%^\207;8\273\331\274=N\255<\315\313\256<\244\212G\275\235E\330<\343\351\373<\244\2678=\374\206,<Y\362\353<-\027p<r\306S=#\345A=\021i\246\274\344\370\247\274X0A\274`\2316\275n\236\214<U\000\017\275\0035*<\361\321\'\275^\3368<\340*(\275Y^\250;\311\010\241<\234\247\r=6\021\010\275\251D\263;\235\212\023\275\245@\314<\232\271\031=\265x>=lGP=\241\016\t\275(\315\254\274\231\373Q=\t\024S=7zF\275\'\'(\274\204u\312<\350\207\300\273\375\373,=\220\271Q\275*\365\327<p\264U\275\222\231K=\231\027\344\272\312\213\273\273\336J\312<\250m?=@\226t\274so\307\274\032\177H=\\c <\005\256\236\274\026{M<R&\205<\026\035\211\274%M\367\274\343\220\335\273:L\271\274y\277\303\274\273\006k\274;\300\360<_\247E\275{\365\260\274\311|\267;P\350D=\005\'\267<z\360\241\273;\331\324<\320\004\225<-FG\275\225\004\031=\257\254\212\274\313\013\315\274\246\037\024\275\215\342\362\274\201I\247\274k\317)\275\233\3356<\273\320[<\237\362%\275\313\301\335\274J\026\014\273\365\247\007=3\037\221<\2769P=\206\335c<\366\257\315<wD\034\274\357\334\\\273\343\371/=\210\270\305<\312q\241\274\200\027d\274C\3258=\215\253\3069\006\254\300<\034\366\010\275\363\r\003=\266\242\211\274\253\025:=^*&=Sj\271<\344VT=\310\022\'\275\240\356\035=j\210B=\2252+=\333\272\030;d\265\270\274\301\\\033\274\203\200\257<\236z&<\256\342\337\274\371]\300\274\007K\352<\344D!\274\'\311)=\203\305\321<\230\003\003\275Va\022=]\372\343\273\225\356\t=\234?%<\240\365R\275\325A\365<\225\347M=\214\221:\275\303\0230\274 \030(\275^\220\"=kl\336<\3500U=\212Q\333\274\255\203\020\275}\237\020=gi\213<^\273\264<d\030\261<k\344\377<\232\331\340<Z\352\n<{\"\252<\271x\367<\2774$\274kZO\275X\356\372<\214\346\272;\031\223S=&\273\366\273@\234*=P\307\372<\025w\332\273\325E\324\274!\327\"=\310\036\222\274J\336,<]\3004<\244\2074=\021\210\377<\016\315$=\217gI<x\024\350<\201O\351\274;:D\275\357\274\244<w\007\n=\317\213\244\274\026\206\n\274V\231\221<\217\207\256<g\266*<\321\014)=\217\007\340<\241~R=\366\361\324\273&\013D=\356\344\364<8\323\\<.\363\202\274\257t\010=\337\003$=v\016\021=Fl4\275E\'\035=+,\021=\177\322W\275jYC=\373%m8@\3045\275O\214,\275\n\321\376<\246\263S\274\005\313\225<B\273\356<\004\006\001\275\211\351y\273\000_\232<\221\306L\275\017\244\375\274x~\356<\232F1=\210\303O\275\371l\276<i\230:\275\326\313U=\324&\000=&EG=r\332\246\273j\0210=K\321%\275M\213;=\227\213\035=\371\315\223:\207\360\261\274n\026I\274,\264\237;\211\2630=\212\376\351\274\334d\271\274\250\204\001=GQ\254\272\017\355\313\274\2733C=\317\203N=\202f\005=h\234\301\274\031\222*=\035\016@=\341\t\323<\274\332\203<\343AT=\274=\255<\214D\217\274a\371\250<\t\236P\274\304\334\313<E\360\313:\304x\024\275k\325\344;2\346@=\313l\030\274\244\333E\275\225\277\351:\340\276\025=\300]\226\273$Z%\274\340\336\304<\200\000U\275\r\277\3619\277\2677=\244\206\366<\003g\221\273\267\2513\275\317\"B<\240k\001\275\020\237\202<\302<\224\273\322\r+;\246\254\004\273\220\363?=\374\202\250;!S\372\274\020\017\337\274\354\026C=|\355.=\003\271\3729%\r\014=@cK=\227\216\250<\226\214\017\274b\032\347\274\374\331\002\275\231y\221\274\274D6=<-\217\274\304\2374=\317\214\231<\223H\005\274\205D\207<\212?\024<j\222\301\274\372\206\271\274q/\307<:\245,\275~\200\'=\330K\003;\2630\251<\335\322f:\020\255\264\274\326\255\361<\253\370P\275\007*\314\273b\227\211<\356\311\305\274\3536\305<\276\310\226<hRW\275\030\327\016=Zq\001\274\005\346,<\213\2620\275\2408 =d3\210<\375\233)<\344p9=X\273/\275\207 -<\244\320@\274\326\004i<\030\230\020\275\262G^<\216>\371<}\373l<\336]\036\275\0354\000=/\265V\275\035\236G=\267P\223\274:u\250\274Pv\314\273F_p\274SS?;\220Y\313\274b\326y\274t\232\005=\016\263\325\273\242.4=\302]\017<EL\030\275\014nX\275\261\240\021\273m\025\004=\201\301\332<\267\242\332<.p\001=iT\326<h\275s\274\264\260\265<\2016V=\030p\031<fv$\275\'\243\306\271\242S\371\274\t\226H\274\236\356\031\275\276\333P\275\316*E\275\000\313X;\036~=\275\315JN\275\351:I\275;k1=\021\\H\274\372v\031\274A\373\212<\003\003\262\274\247K\004\273\357\3014\274\311\341\204\272L\"\373<\214\022\372\274;v\007=\221\264\305\274\\5\024=\263\351S=\027j\324<\343\237\"<n\365\375\274\177\200.\275=\t\203\272\274\227W\275\'\225\203\274\200\302\256\274h\343\030=b0\026;?\260\372<\332\334Q\275[\2673\275?5\017\275\266\363\027\274\013;&\275\241V\273<\257\330W\274V\362\304\273\231\2419<\374\247\313<\327\223\361<\374\344\272\274Pq\237\274\300\373R=m?\177<\334\027\030\275\177\377$\274\322\266&=\327b\017<D\341\205\274\326\327\365\274\357\221\341<p5\220\274\322\023^<\315\346\257<\270\2119\273Q\'\211;f\233\356\274\006\356\013\275\016\330C\273)\236\214<\270\2319=c\234B=\330\235,=\27032=\0274\260<\265\0259;\313\214M\2750\2452\275\\\034\016\275\254p7\275/\260*;Wt\254<\330`\226;\303\266B=\226+F=\024\201\200\274\227\310O=\211\"C\275\021\323P\2758\371%\273\373\303G=rC\'\275\352\254x\274DZ\356;\2721+\274]\' <\005g\003;\035 @\274\025\010\021\275H\230Q<\034\301\t<ms[<-E\032<\331\ry\274H8O=\253\243\032=\361H\263<\234u\206<\241\353\355\274\205~\256<\036\201\371\273\247\245\023=\343\014\022\275\037d\006\275_\353\370\274\024\342-=\235\025#\275\033\334\r=\330\304\245\274.\3151=\234\254\316\274\314o{:\334,\355;$\237\222\274\266\007A;\255\245+\275E\364E\275\375Y\313;g\202\271\273\007\225;=/\375\261\274 \202\211\274E\021\n\275\2471*\275\240\225\204<\021\373\024\275\324\3517=\222M%<\003\001.=0\022\250<\315\023\013<\360\264L:\2775\264\273\356pS\275\355B\314\274Eg\250<\276\360a\273\371\251\003\275\007i\"=\031\006\237<I\002\244\272\024\333;=\206\215\362<\327\312\032\275\220EM\275\225$!\275\331\347\220\274\326\344\361;?\203W\273=\023\372<{Q\204\273\356\365\346\274\307`-=\274\226P\275J\027\370;\331\306\352\274\017\304D=\262\223\372\274\233VZ;\213ZU<\262\2600\275\377\002\003\275\350\204M\275\344\277\362<k\003\024\275A{U<2a\027=\360%<\275\026\327\330\274P\362\022=S\t)=\307\244W=Q.\020<UR\032\2759\r\230\274=8\367\274\3244>\275\001\226/\275\216\271\266<-\r\321;\223[N=\3437\'<^\312\021=\252\217(\273\037Y)=z\303\'<\274\225\271<\205\266@\273{\265\r=\311\214Y=\352\004%\275F\346\373<X\327\026<40\t\274\210;J\274\251\264\033=\224\362q\274\3623\356:\300+\204\274*\213\016=\265\022<\275}\275\007\275C\000R\275\000\361\355\273]\243\227\270G\306\275\274\016\026\305\274\201F\035\275\022\350\021\274\2311]\273\'\263.=\323\320Q\2752\376\'<\321\200\345\274MU\"\275\222y\264<\372\005B<\361\251\356<%Q-\275|+\300\274S\031\004=\333\024\337:;\307\267<B\336\353<\377\002V\275\235\276?\275}\022\301<E\325n<6`L=\353]\245\274n\2509\275\n*)=\352\326\374\273\367v\357\274X:f<\004\005=\275\021\276I;\307Q\211\274;\224\274<\236\327\311\274\275TT=3\rZ=\306\210\032<\277;u<j\334\370<\330I\030\275.\2440\275\032\267\363<\370\337W=6$\350\274\264\007,9\366N\005\275\277\2575\275\201>m\274-\006\002\275\017\3208\274\3274\036\275\342\343\252<*\317\244<?f?\275|N\t\275\365\006\266<e\364\004\275\262\357\242\274\244\302!\275\233\253T\275\013\004/=$\242\n=\ne\032;\260O\327<\263\031|\274d\264\010\275mU\023\275\217\357\305<\000\236\030\275\240\227\306<\322\177\n<\363\357,=\017s\316\274\022\256\t\275\357PY\275\345\311a\273ih\266;\242\007\377\273)\375\364\274>\305\362<\356\010n\274<\300(=\301\304J\275\332\362?\2758=,=\251\006\005\275\3221X\275\214\205\034=\313\364H=^CD\275k\3675\275l\004=\275\232s\353<3\023\254\274\371I\265:\327\260==n\271\271<\303\003\020\275}``;\245\376\035=\351\347\033\275\004\372\222\274\026\371\030\275\220\ta<\306#\020\275#\021\016<\305I5=\376|\310\2747\301\265\274B\223\327;l\347\205<\375re\274\374]\353\274\255\304P=\221\242\300<6@\000\274G\004&\274\373\363&=\177\213\254<%x\375<\213\242\r\275\350;\017\275\036x\312;\361\251\235\273\353T\010=\346c(=\266s3\275p\242\031=z\2004=\203l\033=\204v*=\016)$\275\300]\201\274\330\263Y\275\004\032\356<M,Z8eS\r=\016\311\375\274\312\226\'=n\305\213<\005o =\236A\026\2751\022%=\3401\"\275j\021\331<\010\310\016=\356wG\275\221X%=e\016\t\275p\376\031\275Xh\341;\344\3623\275\340\2017=V:\003=\300\020\366\273\'\013\006=U.>\275\364\243\260;\336eu\272S\243h\274}e\003=0i\206;\370\300\300<X3\r\274\216\n\304\274\250\247_\274{4V<8\266\322\274\373\302\261\274\276m\355\274\272\265[<%\277\313\274\203\027\222;\274\267\203<\005Z\274\274+\327\315\274\222\212:\275l\177\265<T\307\230\273\357\221\027=\016E\316\274\317\210`\274RM\206\274\016=\023<){9\275V\2663\275R\361\247<\272\027\032=\224\014\364\274\016\307\346<\372q[;\357O\016\274\204`\234\274C\214\311<\261\254Y\275\017\330\275;\010Q\013\275c\276\265\274L\2022\275\005M)=\276}U\275\r\302\377<\265D*:\302p\266<\035\346\026=\301a\010=\313\324\257\274d\274W\273\245\036\004<\344\203\226\274:\310\366\274zk)=\016\214\"\274\0363S\275/\014\021=\204\341N=mLJ\274\375\030\267\274V\260\013\275o\2741\275:\232\261\274E\376 \275J\005\375<\203\341H=\307\361)<c\374i\2746\212@=\214\365\243\274i\363\335\274\344\3465\274\347x\375<\t\024\r\274\251#\204<?;\005=\276\004\006=\301\203\251\274\263\025\221;\\\333\321\274\220\2151\273\000\314H=l1/=W\010?=\362[E=\222\n\002=6&\026=\230\003t\2748\316\261\274N\"\311;\013\353 \274\016\332\251<\365\202L\275\227R\033\275\016nO=uAw9\256\234\3409\345w?;C\021O\275\256\255z<c\337\'=\343\277;\275\354\0244\274}#\001=6s\002<y\320\n\275\344\2541<\214\205\234<\311N\202<\370[\000\275\327\'S\275\271F\021<&\201\362\273\310\336\354<D`\303\274\272\344\272<G\000\257\274<\201\272<0\301\033\275S\237\362<\245\264\243<\263\244\004=N`H\275\376\226\030\274\344\256\230\274*\312?=\366j\344\273*\304R\275\2009*\274\016\273<=\356\252V\275w\247&\275\203\205\034<#\036\026=X\024H\275T\333\016<\373uL=\243A%<\225\212\355\274\226\335)=,^\032\275\365\031\005\275%\001Z\275?\213\034\275^7,\275}J\'=\332G\366<L\336\032=B\206\241\274\333\233:;.\023I\275\240\2061<bz\006=\212s\252<\020\323F<N\351\206<0C\367\273\353\274\022\275m\213\035=\325\213\372;\237\210L<4\367U\274\264z\241\274B\316\032=\025\246&\275N\355\002=d\307\304;\265s*=\372\361K\275\305 K<\264\331\235<W\211\001=\221\217\024=d\255L=\302\251\325\274QA\013;0\351\272\274C\312\326<\n,\270\274\263\260$=\035Q\035\275\370@\'\275\355*\361<\004\350\270:\304\242W\275\305\253%=\020jO<W\213Q\274A\355\"; \304\213\274\204\206C\275\314$\324\274ZO\307<\000\000!=6\335\247\274\341d\373<\350}\350\274g\3134\275\013<\002\275nnQ\274\344e&=\310\275\351\273E\3374\275\236\370\264\274;\207#\275\207IC=\230\276\000=-\216\314\274\211!\034\275H\250\r=\267*\344;\342\252\310;vRV\2754\352\260<\270x\267\2749\263\036\275\235\367K=n\366%\275M\273\312<\246\343>\275G<\026\274?hR=\271\273S\274\356\252\n\275\264&\036=Vl\201;\014\371-\275\324\3724\275\376\274\035=\332\033\371\274H\346\035\275`\3735=\342LR=\020OF\275\231\025\271\274\263\270\003\275\301\276b<M\221>=\020\304&\275\246\240\235;\201v\032\275\373!\000\275s(\215<\235\332\025<\262\243\304<.^s\274={1=\r7\034\274\302\307\230\274\261rV\274n]\354<\t(\007\274\237r\035\275\314\302\275<\312\260\212<\032\243\233\274\373\257y\274\002\317\216:\321=\267\274],0\275\313\303L=[\206\236<42B<Q\034\337\272\327\231\024<\204q\235<\343\0133=\223\267H=\202\373@\275\264\256\027\274R\216>=\202\254\022=\201\203\265<v\376T=\004\261\302<\213\005\345<E\020K\275c\351<\275\323\275\206<\317\255J\273@++<D\243)\275\374\231\271\273\225\244K\275A\374\001\274\206\333\265<\263\364\205\2749\235X=$\332\356;\027\220\367\274NlN<\344\206\t<\026\"3=\373\264\035\275\305Ox\273\333\331\017\274\242\202\346<a\264\256<\337\251\r=nP;=X\345\276:\350}/\273\214c\n\275\300\177\000=\025\2652=\216\252&\273\230\301\030=\374\366/\275\211\rC\274\030\nD\273\3230\004=\251\230\206\274.\267\237\274k\342\226<\224\267\252<#F\260<K\316\201<\220\350\001\275\r8/\275\220\024M=$\031Z=\257)\004\275\320\263\334<\\n\330<9\253A=\333\333 =<?\n=G\307P\275\265\004\'=f\343\334\274\260\230\320\273\256\302\321<\225\202M\275\337\225\036=\302\215Q=\006\034_\273\027.a\274\2611F\275\372\242\210<\"\206L\275\020j\242;\237\316#=\331T[<2\267\356\274G\335(=\005\2322\275\261\3303<T|\236\272\037\343a<e<E\274\342s\027\274p\343\271<;\360\001\275\326\247\017=\342N\320\274\206o>=\302\213$=!\207\031=q\030\241;jf\261\273+l,\275\235\347(\274au$=\005\026\307<MN\000\274&a\272\274\010OC=\223x\262\272*o\262;\235\356Q=i\'\007=\022b?=\212\274\032\275\242F;=\371\225\\\274\314-Q\274nG,;(\017\n\275\311\317\004<\177l\364\273U\231\r=\017\362E=\217\251\322\274\262\375\031==Uv<\321$\t\275\017=H\274M\334\306<i\323\225;9\304\001=\335\037\347<b\031H=\347R\374\274\203\221_<\031!\375\274\226KK\275 S\250\274\306\244\024=\234\235\367\273\267\232.\275\373\'\023\275\212\340\355\274.\366(=\005\035\303;3\370\013\275\322G\344<\001\3227\275vy\010\275r\t\207\273\n\0101\275\315\224\005=\'\017\250<\254\025\036\275Z\362\006\274s\010\035\275j\000\262;\024e\020=\207;\342<\232\031/=Z\225\333\274\002u6\275\001\221\304<c3\343<\037\332\221<\302\215\207<\006\377)=Y\345\323\274.\234\027<c\262\237\274\177\252\025\275\222M\264<\017,|\274|\250S<\331\230<\274`\030/=}\3135\275\026+\375\274Q\307\033<=L\216<\013j =\273\231!\275f\2567\275X@:\275?\371\n\275\305\357\274\274\324\371\220;\360\t+=\260C:=\317\3707\275\235X\"\275\2675\274<X\320\022<~c2=m\326g\273R\215\254\274\3319==\272\324A\275\273\244V\275\334\277;\275t0W\275\242z\303< m\363\274\210t\032;_h\t:\256\305\003\275\217\n\242\274\263\036\230;\330\304\241<\001\362\033<0\254\005= R\013\274\212\232\010;s\205\003=3:\210<B\346,\275Jn`\274\034A\323\272\207\013\233<\376/\214<\375\344#=\356sB\275\236,\014=;UG\275\332N\304<=\230E\275\200\352S=U\203\002\275\221b\257<\260\243\300;\210\207\240\274\021.0<\233\025\224<5\376)\275I\2443\275\270\177\317\274\330\0022=$)\311\274\370a\202\273Zg\023\275\361\235R<\341\021M=\034\357\034\275gG\037=\266$\357<\266Z?=\021.Y=\241\332\031=?\nI=\373\260\026\2756\214b<\276\326$\275\010r(=\'\362\264\274\'\203*=\'\271Y<\317\302\"\275\365\307<\273\303\360T=\364\206\267<K\360&\275\243f\252\274^\002\355<\274 \034=\033\013+\275\303{\262<\026HI=\370\243\033\275\202\3310=\310\307*\2749\326\021\275\255\361\255\272\344j\313\274\345:\251\274\242\2323\274\345F\016\275\010A2=\340+\037\275\262v\030=\363\335\237\273c?[=\265b\030=\017\020\003=+X\313<\315\207R=\324\335A\275\273Yn;Z\037\025=\010N/<!\r\036\275\271\361\003\275\000 \206<\304E\213\274\026/\021\274Q\224\257\273\236s\325<U\177Y\2750|U=\340\177\244<\321\254>=\2461\360\2741\263?\275\245q\265\274\214\023\010=N&\007\274!\301\004\275j\330(=De\020\275\000\261G\275\227\271S=fe\376;\005\"D=\237\206\004\275\371W0\275\206\213+\2754\006\354\274/\307\265\274\317\215\323\272\374\354!\273\371\351.=\to\026\275\235\257S\275\300fJ=\2514\000=\345\n\234<\365\2256\274\230^\336<\237\"\301<\356\227\377:h\377u\274\177L\034:ST\'<7\257Z<\365t\006\275\304\221$\275k\002\277\273\216\221C=\014N\005=\232\354\370<z)\351<\205\2102\275{\274\306:vx\327<9\352\367<]RG\275=\346M=\261\276\342<\270-T=\372\376>= :\005\274CGX=-\232B=\353\030\212<\222X3=9\374\006<l-Q\275\265\347\251<\256\360\000=+\242A\275\317\353\210<\030\245\265\274a\222\277\274\366\213M\275KrE\275\307G\307< v0\275\035\\\037=\273.\205;\306\n\243\273gZC<\264\244\374<\365\226\325\274\366R\314\274\266\363I\274\345\337\347<\265\"\033\275\325\2565\274\237\017J\275\017m\033=\376\235L=/g\346\273\326\356\256<\243\\P\274T\272\344\273\261\261\253\273\240\206\226\274\023\025\361\273\211\364X<\270#V\275\310\267\317\273\001\244@\275!\242/=\213v&=~\344\373\274\266\375K\274\013b\t<\007\0206\274\365\204$=\255\027\221\274\356\233\034=\352\017\373<2\007\302\274\340\227\010\274\207q\265\274B\325-\275. \252\274\376&\302<\365\323\t<\350]Z\275\312\016\321<S\227\345\274\206\315-\274\343\2241=\271\247\336\274#8\344\274\310\3031=6eB<\363\210\025\275\201\371\351<\317\240\231\274\254i&\274X\303\000\273V\036\n\274$\215Q<\277\214\003=++;\275\276=,=\026\256\252;\251T\034<\270\034\352;^\372\n\275\266rX=w4\\<\262z\276<\273\214\264<\347\321C=*.\242\273\267\364\364<\022\257\031\275\274\001;\275\314\312V=;\357\252\274^\244\365<\362\004&\275\247kB\275\366xB=\010\265\370\274=\222\217\273\016\354<=\344\262\r=\262\220\025\275\266T)\275\236\236\253\274\330\275I=\332\317\007<p\t0=\'\266@<\274\311\022\275\n\201\023=H\314\224;m\301#;\206V>\275K=\302\274\246\177\033=n\365l\274\307\205#\274~\333\002<\010N\223<]\314\2779\314tJ=\001gf\274\217`B\275\0338\2768K\'\005=\'>[\275\235\033D\275\3627:\275\312\276\036\275\374\020\252;\304\010\"=\251\007\230\274\370\\\215<\312 \263\274/U\361<\206{\276<\316\'\035=\323\346\347\2742\025 \275\204(\360\274\274\373\374; <S=\353g>;_ \357<C\320\312;b\212Q=\334=\257;\016\240Q\275\3149\016\274\377OY=\273FB\273\350z\020\275\214\005\007\275\252VS=v`\227<\234\365\020\275l\313\321<v.M\272H\250!\275\357i\253\274o\313\272\2749\200;<IH\020\275\025_\005\275Zz\007\275\321L\215\274\346\026\255<\334\026<=B\347\304<\016\030V=,\241==\243\210\271<\205\"e\274i\026)<U\364\361<\036\373\222<D\213==\221<=\275\255\242\027=%\202D\275\'\177O\275\261\022\306<4|L\2754\346J\275E\327@=\366\222\236\274\331\2411<\252\220G\275\023!;\275y\036\343<g\001\224<\365\266\034\274\203b;\275\240\217\231;\336\215\355<\2719\353\274-\256>\274F\262U=\315Q\336;\301\342j<\203n\264\273\360\035\326:H\340i<\036\210f;\351j6<\r\314\031<\322\324\360<2\346h<\245\247*\275\225E\340:\214\3501=N\301\023<\271Y\337<\224o#\275\312\350\005\275;\231\357<\023\312D\275\277\026\022\275\264#\337\274O\223\017=\227a\362\272;\022\260<\234=\207<\337\323\274<\343\220N=#aX\275\226\243.=\366\020j;\210\333?:\277\271\r=\247\354d<\333\226\312\274\010]\234<\320\245.=/\024!=\2164:\275\363\000\322<G\201\t=z\342\236\274\257\323U<\245\303\033=\366\216\345\273\246\330O\273\n\275$=\344\030T=\271\243\351\274\r\330\024=\207\307\333<o\227\033\275\231\372c\274\214_$\275t\2162<\251\016?\275\234B4\275\263\020\003=\275\336\255\274T\326\005\2753\003\326<\206}\341;)\340\030=\314\314\016=\211\034I\274\336\365\303\274\317\003\354\274R\005K\275x\224\370<\334\347\026\275m\310!;\205\332\031=\236\346\025\273e<\342\274-\232L=\262\266\312\274\304$\243<\033\245\177<=\317\037;m\314@\274\02318\275\357\267V\274z\013:\274\371|Z\275\331\311\325;\325t\022=\262`\026\275q4O=H\306\273\274x&O<5\271\022\275\323k\262;N\302\322\274_\006p<\302\212};=\240\233:\331\014\300<W\241f;\341\257\241<\367\235A=9A\312\274\212\260\351\274Zu)\275;\"/\275\2422\356\274i\026*=\334\365\033\273\310\302\343;\306\020\207<\2242Z=V\003H=\355\234>=\276\002>\275\233xD=\035\241;;v[\033=$\'\037=\3739Z\275l\006/=\232K?=\025PP=\275R)=\270c\223<7\262\265<\006U\347\2746\250r<=eP\274?7\037<\364\214\n\275S%K\275k\240\207;\'K\272\274\2221\322<\241\274\254\274\207vQ=\312\211\237<\016qg<\0241*<\306W\264\274-\021I\275\302PC=5_\\\274\227\237(=\300F\021=\010#\014<=l<\275\271#+\275\214\252\210<\353\257t<\340Gb<\311\341\010\274`n\033\274\275\003\026\274\316\341\021\275m\272\014\275t\332D<\241`\233\274\322\303\010\275\t\214\004\274/\177\302<\227\003\350\274\353\\]\272Y/\246\274\027\313d<\362$?<\247wE\275\202\311\"=\371\334!;#\3473=<b\344\274{\325}<\243-\353<0/\256\274Km\225;\203K \275\307LA;a\261z\2743*\254\273^\036\203\274\275\235i\2742\310\327<\325\344H=\023S\3179}V\312\274\231H\204:\007\267\201\274<\377\335<\007\217+=.sQ\275\007\262\277<\274Q\247<\232\254\243\274\'=Z\275)\374$=\333\001V<\214\036\000\275>@-\275\263B\016\274\365/[=\273\365\230\273Hf6=-\271P=\025i7\275)\310C\275\302\300\322<>\354\260\274\304\252\216<6\327U=4\021`\2747\351\371<=\026\335<\t\227-=e\205\227\273\202|\214\274\360\347\352<+O\030=\232A\262<\027\205\335:\346\326:\274\242U9\274\312\301*\275T\204j<\305\032\017=I\227\251\274\375\036\'\275#\202\332<r\004\300;Cy\223\274Y\r\211;\276\017W\274\370>\314<Z\177\211<\257.\'\2758jQ=\223\005S=\231\336%=\365;\377\274\352\013;\275N-!=]f\006=\352o\002=\346\2041\275\371C\231\274\tf\304\274K\361\037\274\375d#=\261(\005\274X_\325<\224.\375<1\003\211<K\323\003\275P>1\2756\361\252\274\212\250\005\275\2042\230\271\366;\265<\250\016\017=!\222X=\341{3\275u\221K=w\r\031\275\363\030k<^\262\326\274j:\035=\217\202\365\274\233\003\370\274\303\034\332;\316E`<\r7\374\274\230N\022=n\253\016:c\331I=*\226\225\274?/\360<r3l:\357\022!\275\2721\021=\010\003H\274\321\337\020\275(\275!\275k\360Y\275\350t\033=\264aX=\032A,\275\201\350\234<xL\260\274T\005\240\273t5\207\273\016Z\0346\247\304\010\267\032\342\220\274\276k?\275\216\360(=\177U\n=\326\233\321\272\035j\031<\374%>\274q\206W\275\260\024\227\274\032\336\002\275\317\255\363<Hr\266<j\271\003\274F\327\226\274R\317\371<a(\237\273v\304$\274\330y\356<w\260><\251\204;=\007\237\005\275n\360\362<Lw\016\275\023\004\325<{]\376<\016\350\210\272l&\377\273\271\\@\275\247dX=o\332\207\274\n\335\335\272Z\247\307<\274\\D=3\362\225\273\264\265\034<Rg\021<\244\2360\275\3631\020\275\270\'\'\275O\364\246<\t\020/=\332\273X=\252\243\257<\341{0\275%|a<g&\307\274\354\215\007\274\206T3=\250?\216\274\235`\374\274\003\325\206\274B|\316<\305?Q\275\317\t\004\274\270\266~\274t\207^\274\272\343\260\274\353\0256\275\361`D=Q\006\376<k+\260<\374uN\274\223=w\274\215c?\275\027\\\256\272\034*\376\274\251}>\275\006\226-\274\222\243\244<\272\302\335;\340\256T=\006<\325\274 \227\302\273\201\261F\274`\222s\274\247*M\275\317\023A=\251\275\024<\326^P\275\371\327\312\272vq\246<\243\245\306\273sK\231\274\374\327=\275\241\r\334\274\250d1\275;Q\267;\310:,\275\366%\000\273w\304?=^\203Y\275\026\343\027=\357\222:\275\304L\213<\3119\343<\364\226\303;%/\n\275$68\274\346\352\310\274\326\375\332\274F\203\330<\376q\265<K\226\301\274\354-\356\272\247\377-=\210\227\r=m/\232<\336V\375;\014\010=\275f\321T;`\024&\275\031Z:\275\271\315#=\234v1<7\205\337\274P8\004\275\307b3<\307|\240\273\327AR\275\350\312\235<\274\215\377\273\360b\221\274\203\321&\275\347~A\275o\217W=\007\221\024\275\242\331\355;\005\376B\275\006\373\326<\272\220\255<]\333\350<\236\267(\274|\372\247<.&\033\2756\303\266<\211\214\037\275[(F\275\202\245{\274\263\360\245<A\337\370\274\\\305)<\307\026\226<E\360\017\275\214\361\320;-\034C=X\260\260\274\363\023@\274\204\213\023<\217\2448\275\311\026\366<\237\347b<8\273Y\275Z\213V\275m\347\031\275\007\314\264\274H\n\351\274\3025.=\260\347\030=\275\034\320;\257X\316\272\335\321\335\274\227\3670\275\302\335\2259\025_Z\275\310qj\274\r\210\265<Y\326\333;\263w\030\275z\003k\273=E\014=\344\372D<\355\3355\275{2\340\274jI3;\215\263S\275\267\354\037\275\211U,<\342w\300<\341\\5=\246\355:\274v_K\275<\347\323\274\236\261.=t\240*=\376\255\242\274\022\275\322\274\224w\353\274$\314X\275r\007T\275?\303\026=\265\240W=\356(\213\273\330O\022=\371\225K=\005\325\010\274b\371\013=\362\214>=&\375\205\274\337\372;:\000\000G\275\323\'\231\274Gw\265\274p\245\233;\005)\t=&\265:\274\033\277\211\274I\3538=i\334C=v\260k<B\r\034=ZH\031\274\343\0322\274\362\303\357<qD\232\273BM\205\274\016S\024=\246_\007\275P\232\003<\375\310 =\256\256L\275\314\233j<\327\005\267<\265F\230\274\204\331\000=_\360\035=\321\322\257\274\261\241\324<\014\022\204\274\243\256C=\373\230\377\274\355)]\274\365g2=\376s#\274M\341\217\274\220\333\020=\354\355\365\272\330\267\276\273i\313\247<\000\335W;\207\235\347\274\3269\024\275iz,\275s=\312<\031\017\222\274\353\276\r\275j\262\262<\243\360<<\375\217\021=\027\031\312\274\033\322\354\273:j\276\274\217\005\204\274\204\021B=\314-\347\274\227-\010;.[%=\365\221\344\274s\254==\203OU\274\000s4\274\234\226\252\274\237\242\031;&\265\357<\351\371G=Q\221S=\220\260s\274\253\036O\275\274\200d<\371?U\274_\010\037=\261Z\033\275\320\334\374\2734\346/<\201\333\210<q\'P=\246\216\027=?\031\243\273\3227\"=\374\377\010<4\335\262\274\035\357K\275\330\336\014\275\210M\027<\270\230\261;\334\372\027\275\027\2441<\"\255\210<\2600\004=G\3041=g\253\302;\311I\026=\303\212\006\275:\200\013=\036\0256=ty\233<\025D\004=_s\264<O\300\016\275\022\272D=a\2478\275\251\234\340\2740n\033<\376)\313\274?\244G;d\313\010\275y\265\034=\270a\026\275\246%\361<\377e\033\274\311k\201;\033fW\275\026\005^\270\216>I\275\342\222B;)\024\"\275.\251\241<\207\214R\274\025\377*=\030\344\332<\234\2046<\235!G\275l\003\024\272\243\200\352;\032\327\036\275\r\203\364<5\334\324<\321\3102=J#\225\274\275?\026=nA\320\274nd\263\2742\341\031=\311\354\002\274_\371\315\274/k\274\274\305\342F</\314\017\275r!\347;VY\030\2752\031\236\273\031\221h\274\2638L<\272\024Y\275\256\2634=\322\240K<\332\320\225<.Y2=\227\300Y=\253\231\036\275\323\000\237<\275h\260;m\363,\274\333\326\017=b\333\222\274z\3179\274\264\341\032\274?\3426\275\375-W=t\336\364<J|\271;\320`\322<\201\317 =\350\305\202\2745\357 =\007Z>;\010)&\274\317\262\244\271\346\244\\\274\271\203\027\273br2=U\373\022=\265\360\375\271\222\030\025==\312\367\273\327#L=?\336\277\274\303\031S\274\255S\367\274L\n)<\372+%\275q\2676\274\033c\035\275\n\363Q=\332\010\026\275Lx\301\2734h\303<\016s}<\205\333\'\275\n\316\001\275P\017\371\274<\010\"\275\365\267\367;V\tp\2746NC\274\347\032\033\275\034?\003=B\376\314<\212\271i\274\344\352\324<W\3102\274d\330\021<\224\216\252;\265\315\205\271U\3116\274#\374\222<\352t\013\275l\262\342\274\0214\205<0\240\371<\354K\257\274\232\242==\356\355i<\203\303\022=:$>=/I\035\273j\022\263\274\235\230-\275u\334\342\274\317\032G\275\272\271]\274p\374\022\275\371\016s<z\305T<(\273\255<dV\300\274\345u#\275t{3\275\327\325d\273\352J\030=\026\221\341<\315\372V=\364\204\013\275\367\016C=IX\027=\353\207\224\274g\200\022\274[}\314\274\247\321\337\271\264x\036\275\242\225F\274s\265Z\2759\247\211<[\305\005=a\001\037\275\r\nO\274*0\277;?aW=KS\026\274\203\245\233\273\364J\370\274\353\223\035\275\324\002\370<\327\240\021=\225%k\274RQm;\270\316\245;\373\250S<\261\311\013\275\303\215J\275(\320\005\275\005x:=\304\3177<]\354\350:&w\010=\273\252D\275\241\224\222\274\025\t\305\273:F\030=N\3045=l\"\311<\355c2\275\217\300.\275\363\275|\273b\007\246\274A\305P=<\000I\275\020\212\206\274a0f\274<\203\224\274R\230\254;1\217\340<-j\034=m\3220\275y\275>=\020r\206<\ro\363\274j\351&=L\343D\275\303\352\3249\263y\313<\354\024n9\335l\365<Rs\007\275\341\376\200<\315\267x\274\347\275.=Y[)=YRZ\275\316J\211;9\324\244<\206\263\357;d\363\307\273\335\351m<\346\246\335\272>L\270;m\316B\275\315\r\\\273\221\237$=\001\003I;Y\\8=\343~T<\236\201\346<V\261}\273\361G\200<\014\360\035\275&\274\361<l\246\003=x\364\006=\204\241\032\275Z\3523\275\025\372Z=R\034\323;C|A=n\244\005=\024\252\002<\346L&<\304}\263\274\365\303\366\274W\\d<\320@\375<\373z\267;\261\3050\275\014MO\275\013\361x\274\365\315\221\274\236\207\344;{\227y\273\361\317\263<\014e\227\274\237{\200<\264\250\246<\231t\235\273\217l\031\274^\315\310<l\376\357\274\205\341\272<\004\312\026\275O~\374\274gr\r=\244\223\276<\223T\263\273\334\257<\273\230\260\337\274\270\r2\274\372\243\374\274\364\005+\275\2752 \275c\006\014\275/v9=Z:3=\354\251\376\274\271\353\030=x\374\002;O\3003<-\372\035\275\365\273M=\331\326\201\274\353\323\357:6\370\263<zf\010\275X~L\275\336\t\000=\267uS\275\205\230\002\275\037\013\247<UiM=\000\024D\275\275\314-\275F0\203\273\263\372\354\273G\"\013\275\377/%\274\252\311\220\273\212A\244<\341\341\001\2755\260\025<\177\277$\275SE\270<\256\342\260< T\254\274\261\350m\274mx\234<x\273\214\274\036\263O\275\205\375;\275C\350w:\315%B=J\336\373<Vs\022=\204\241\254<\033\324\333;\355L\275\272\177%y\274\rL\301\274M\236\221\273\273\312\322\274}\377\236;\235\262\256\274z\t\237\272\217\322\210;\213\223J\274%\2707=q(,=\234\333\231\2744\024M\274\246\320a;4xC;\365o(=<\346\001\274.\203\366\274\216\202\216\274]\022A\275\337\005\347\273&\357$=\275|\312\273\224\361\t=\305\345\037=]\3678;\370\030#=Q\252==\232\352\334\274\334Q\271;\372\355w\273\344\0036\274s\245\214\274\324\251\000;@[\204\2745\242=\275_\026D=\340\341L\273C;\224<\362\310>;\204\367\021\275\264\376\354\274|\304\335\274m|\007<\300\235A\275\353\351\335<\325\277\027<z\035u;\010\023\036=m4/<\360\020\020=\223\010#\274\363\243\256\274\305\332\241\274!\323\236;]\364H=\300\246\213<\375\340X<<\202?\275\336\303\336<\354\270\250\274g\333z\2747\037U=\375\224&=\350\272P=\030\214\346<\362\242S=\362\266J\275o\244\017\274Y\n!<\021\006l<\311\234\000=/\213\334\274\3769!=5\005\031\273\002\tP=M\235\037\275\224o3\274\000\004;<\ne\375<\310\327:=\303\317\342\272\032\010\204\2742\274\363<c\256\013\274\003\024 \274\363\307\006\275t\026\033=\217D\':\376\366\022=\266\307\212<lZ(=\252+\310<\300\377\024=P\267\374<\356\206\352\274\224\033\017=d\373\360<!rZ=\267\357:=B[\036\275\013q\242<\253\\T=\211\324\261;\310\300\'=\0342\372<\207D\356<*\313\024\275\337\330\271\272\204\371#=Ar\014\275\270\344\002\275\023iN\274\004\350\230<\250@N\274\200\375\010\275\370\335\016=\256B\374\274\350\0166=\252\013{<7\245\202\274\000w\304;\334f\022=\0319?=\201\210K\274\216>\003\2751\337\343<\370?\017=\367\310~\274\334\035\020=\351\370`<\024\271\356\272\0360H=%D\t9B~W;\t\353\004<\240M3\275k\301\252<q\320w<\035\211\345\274\324IA=\356z\026\275\211j\035\275\342\354\";\323%\025\275\334\023\020\275\2166p<u\374\326<\211\355\274:\237\337E=2\372\371\274^\272B=\253\240\031\275\332dT\275o\341\222<R\010\035<\nt\375\274\374\004\035=\001\313&=}\211\243<\304\321S=\225\230\026\275\325\030\234\274$7\023=\347\031|;\203+\027=\241\334\021\275\373\246T\275\333\303I\275=\314\207<~\344p\274cN\246<i;7=\3670\217<K)\014=4r\207\274,C\307\274<T\036<._9\275\242K#\275K\031\007\275f\253\037\275\235\245\233\271n\024\021\275zi\352;\314,N=\002G\355<VBB\2758\255\023=63\213\274\302\346\224<U\0378\275u\256\317\274N\222\001\275\365\351\277\274lr&= \211\030\275\325y*=\334\235>\275\035\217\261<}\376\'=17_\274\305\233v\274\375\232\360<v\330W=\352\3162\275O:O\275\020\234\351<\"\232)=\371|\255\2743\354=\275\271\202\260\273\230\371D=\317\361P=\rJ\024\275\351\256\337\274 L\';\276\225\244\273S\373\376</\332\006=\035\215\240\273x\361\000=:\235\214\274\014\314-\275\241\277\305<\024\340\n\275a\331\226<\274\273\347<\030\367i\274\251\261\031\2759;\364\272\016\014\025;L\016\272\274\245\216>\275o\340v;\013;U\275\306\307i\274\350\242\331<\001\341Z\275f\026\373\274\223\321O\275\007\2647<1\362\023\273\273\001L\275CZ\013\275kc\200;\347\t2=\234\"\013\274\305\272\352\274\315\211\020\27549\355<\025EE\275\346c\233;\006RR\275\261\261\246<qoZ\275\255\333G=\300\353\235\274\357\226\016\275\205vC=\310\305;=\273Y\362\274\327s/\275$\377\343\273\214K\013\274\315\325!\275\324/\033\275E\266U=\361\031\265\273\025G\375<o\236c\274l9b<\301\2337\275\243/\232<\014\251\207<h0K=\360\212\036\275/\213\274\274\225{G=\260\347p<Y\340\350\274\375\250\332<\004_\004=\261-\017\275\223\273\004\275\241\304\316\274\263;\244\273\261+\022\274\343\027\251;\345\001>\274{\236L<\203\323L=5\351\230\274\366\035\360\274T#%=h\237\377;W\246R<Bw\'\274\253\310\333<.\256E\275\374i\030=\257\244V\275R\n\211\274#}1\274\307\013\277<V\037\271<7\345\023;XWP\275t`T\274\017\264\020<ErA=\267S\005=/5\"=.\013t\274]\312\333<\007\354\002\275!:\223\274s\016\035\274\004\306\023<v7\034=\345\266\362\274\351\250P\275>\373\036\274\ny\024\275E\300\030=\326\331/=\261\2435=\251w\033\274f?\216<\350\215\"=\302\257\347\274=]s\274Rm\271<\246\177\216<\265\t\261\273G\221\376<\266Z\024=\212.T\275\246\373\300\273Xd9=\177\213j<o,\247<R\315\342<v!\000\272\230\244\305<2\320K=\203\324\022=\016\3770=\3066\306\274>^\"\275\334\351\205<Uz4=\246\037\035=\035\366\003=6\234J\275\376\353@\275DxX\274\362\034\023=\200\0136=\345\3535\275]+/=\223\364\205<p\210\213:L\305\337\273\310\237\006\274\356-\n<\362\263\362\273\265\017*\275\243\234\r=\335\001\344\274\002\212+=]\316\007\275\331\001\n<\301\250\342<\025\271%=\207T\253\272f\205J\275E\233\220\274ET*=\001\256\255\271W\373!=[\247\035=|\221P\274\221\373\035\275\250\037\002\273H\340L\274,7@<~\006\323\2748]R\272-\225\230\274\024{(<\321\323\016\275\243\3006=\226b\236<gH\276<\005\355\353\274$G5\275\t\r\210<B\032r<\362\246O\275\221[V=\024\177V=\266W\365\274d3<\2743\223T=\377\347^;\244\247u<\317`\340\273\337q)\273\236\257\024\275\223a\017<!\341O=\177\3177\274\251b\003\275>!\257<\337}F=\3626\026=\251\204W;\227\276@=\223R\224\274S0C<\276(\004\275WN6\273\317\333:=\021\3050\274\375L\004\275\257\016\243<mQ\226;\256\003\217<\212a\024\275 >\250<\217\343M\275\361\313W\275\341\360\010=\302\302\313\274_\212\371;X<\025\274JT\033\275Y\306\251\274\331\177\314\272j\016\r:$\277\210\274\314u\223<\257\223\216\273\034\225\342\274e\240\357<v\020,=\23517\273\333\215\220<\025G\256\274z\227\232<\221%\261<E\330\003;\301\020\301;\241R\004\275rO\344\274\236\264[\274l\027-<S\311\035=\304\202\013=\312\nJ\275N\003\032\275\206\276\013=:\246\214;\265b\344\274\305\2460\275\013\253\334;\217t+=L?\364\274\207\222\322\272\365\004\024=\024<\235\273@\344P\275{\335\242<1\371\020=`\006\006\275\212c\267<\347X\005;xP\323<\312\264\t=\027Z]<\177iT=?\034\034=s\026,\273\r\341\227<\023\260\372\274\266^\311<P)=\275\241\237\001=~\302\214\273\013;\207\274c\2633=C\337$\275\340*#\275\305\231\267\2742BM\275\213I2\274j\3529\275\3523\306\274,\240\324\274\362\334N=\325\343\325<\037\207\033\275\2455\335\274\356~\036=\277\177\017\275&Qx;\250\257>=\347\241\374\274\264\272!\275\314\361\242\274\312!\017<\202\260\356\273\377\\\014\275\23054=\3177\007=\346p\374\274\256.\352<\225\376\024\275\363\242\332\270\224i\211\274\322X\236\274\\\202\340\272\252\303\334\274\r\343\014\275\005\335\001=8\2226\275\255\324\334<\365\270n\272,\r/\275\021\310C\275\357\2015=\277\2029\274\217\026[=\247ZF\275\247\246\025\275q\373\256\273\240kG\275\200e\347\274\026\241\310;\005\007+\275\377\253$<Z\2646<ld\311\274\347\276V\274\216\237b<\243H\324<\232\240\010=\307\016\211;\255\340\347\2741\2018\275\312x\373\273\004* <\334\247%<m\3633\275\371\263\271\273y\346C\275+\210+\274t\255C\275\260\350\317<.)4\275\300\343\365</\344$<E?\205\274\261\277\031<\363$Y=nE\246;]\260\025\275.@\016;z\242?=\344\364\030=\265\264\250\274\234\0343=D\233`<\303\320\365<\024\005g<\302@\1779\261\354\342\273\307\333%\275U+\366<}\025\243<r\344\222<\024\276\007\275?0J\275\241\240\231\274\272\312\360\274A\'P\274\3526\223\274\023\343J\275F\324\002\274\301\232\227\272\271\330\331\274\336\324J=J\314\205:~\372O=\331a\"<\025\034\033\275A.[\275\207\030\024\274q\344Q=j\242\005\275L\277C\275\t\345\330<y\r};;I\357\273\264\002\263;o\231?=0\237\n=.\210\001=r\n\244\274\3051\371;O\367_\273\367\\\324<\007\262\276;f\001\221;M\340\024\275L \245\273Z\201\345\274\254u\000\273\205oB\275\220>\374:\027\346(\273\337\354\226\272\2538\327;0b\260<\237%\272;\272\363\005<:\330 \275$\206%;>\256\013\275\203\200V=\211M\030=\"#\002=\275a\000\275\312\317\213\274\274\034\214\274r\243\031=\353\202\202\272\232\253/\274\346\332\242<\373\224V\275V,\305\274}R(=\337\017i<d\367\350\274\201l\252;\177I\006\275\032\353N<\336\242\003\274[R0\274\351Q\024=#\225\335\274\330\210^\271\317\373 \273\200\253\002<\223\323\016\275~\352\010\274\264n\223<\252\220\300<\221>C\275\342\304F<\354\340\345\274\200\274\247<r\t\002=\3609A\275\374\243\014\275\351\237\304<+H<<\364\213\t=\004\243\250<\207]0=\313\274V\275~\231M=P\201\324<\032\220\305<\302\355V= \313Z<\303\006\333\274\327\333\375\274>x\316\274\360\017\214;\210\232\026\275\351\353\213<ll\310\274\226\316[<\222\217\257<\264qA=\017{N\2723\332L=x\331\371\272\020\256o\274\237\254s\274y\330\013=;\332/\275c\233\305\274\035\205A=.$\025\275\317\313*=\nP\030\275z\276\246\273\314g!\275\350h\363<\272\215\237\274`[\207;Wc\3039Hd\257\274F\312\022\274\231\236\340\274B\302N=\305\363\270;f`d\273x\364\005<\236\311\003\275\330\016\272<2H\0039V_\305<(H\305;w\206\241<0B*\275y\323\222\274w\320\342\274\221m\016<\021\035\223:\342\261\"\275?\323\222\274\323Y\000<kF;\275\243IS=h\t\032\275\017Ex\273%>\031=\030h\302\274\321)\260<\204\361\320\274\22338\275\004\206\016=\274\210<\275\334\270\024=9X\371<L\205~<\273\025\372<\017a\366:\007W\255<g\206\262\274,\350A\275\344\2073\275\302\322\354\273\370,\312\274H\326~<c_\257<O\305\232\272Sq\370\274 \001\221\274*\352+\2758\315\036=W\305\202\273\272\237+\275\241\006\021\275\314\265,<\237\216J\275\344\217\027\275E-H\275\020\267\257\2741C\025<\350\336\337\274sGG\275*\334$=\347\010\013=N\337\005\274\317%\340<U\206Y\275s\335\341\274Ak\304\274\351\355\350\274L\255\213;\271\n\264<u\205\004=\024/\312\273\242\'\023\274\026oq<\304\302\r\274)\271\370\274\214\265\251\274\234\277\020\275(\312\204:\356\310*\275\231&B\274\216R8\274g9\373<q\326\002\275\306\262\237\274n{!=;\213\354\273\333\320\255<\244\'\037=\215\224\205\273\332a@=\020\2340=\0267\032=p\325\375<\n\320\355<F\223\361\273\324\244\034=@\225\252<;\306&\275\367|>\275|t\217<%\031\242\274\227\325\036\275\330\031<=\217\264W\274\030\243\035<h\251\246<Eq\007\275\335\273\361<\323\344\212\274\227tE\275\320\207\365\274\312E%\275\302\317\257\274>l\222\271\0333l\274^\310J\275\234U\273<\225O2=x\266/<W\372\262\274\264\\\211\274\325\271\030<\351\303-=&\314+=\357y8=J+\300\274\022\3277<\006\252\032\274$\324C\275q\210P\275\215\331\020\275k\353\255\274\241U8\275e57=\273\253\324<\026q\275<;\025\312\274\2551_\274\346\005i<\3074\317\274\250\232\325;(\362l;`\330\303;i\177*=`g+\274\013\342\332\274\2407?=\n\024\304\273\315\\#\275\214/O\275\366\000\275\274\324\220\007=o1/=\221\376U=u \360<zC\233<2S\363\274\030\3117\272\243\251-\275I\363\313<\331\026\351\274R\023\220<\267\265\312<\267\020\000=\222\022\230\274!S\205<j\372\305\27432\3009\310\013Z\275\033\3153=H\266S=\266+\303\274\036\372\226\273\377\371q\274\326\323\020\275\242c\014=M\240\306\274\363\272 \275\003;\202<U\177H\275\346\275W<f\254U\275\314\277\336<\020v==X\034O\275\254\nK<\237/D<\363Q\021\274\rs\272;QnE\274e\360\025=1W$;Bd=\275w\025G\275\234\210\240\274y\025:=\203k\032<\235\353S=b2\020<\262[Q\275{\227-=\020U\323<8,P\275\027B\332<`\372\024\275\334\373\352\273r39=3\342L\275\204)\366\274\212NO\274R\347:\275z\257\r\275\324\346\232<I\"\202\274\277]\014=\340\210\341;z\353\210\272\267X\235\274$\266\277\274\r5\303;t\261Q\275\272\010\035=i$[\274\253\255\245\274\331\006\330<V\002\002=1\322\364<\020\256\006=`\321\224<llX=[l$=KD\222\273\267eh:\325\237B\275\260\266-\274\367\024\"=\234\t\232\274\361\247\216\274\306\371\037\275\236\312\350\273%Y\240\274\255U\"=&\242c<\214\235E\275\000\341\t\274\010N\021\274\245-I\275\306\310\246<(\343\"\274d\232\000\275\301\335\002=\300\364+\275\250\362\255\274\\\010\"=\317\020\037\275\020\3337=\024-\004=\027\323\201<\322\263\020<N\010\204;a\035 \274\253\234\177<\333\340\r\275\271\334\365\274!\024G\275\273\277\236\2747\034\000=?\2169=h\202\334\273e\240\347<$x =\244\360D=\307=\010=mG\322<\037\356R=7\235\366\274\371\217\036\275`\325#=G\327\224\274M\225\250\274u\224\346;\2552\331\271F\235 =W\232\220<\315\206\347\274\207B \274\275\263\213\273\237 \307;;\004\323\274_\277\"\274\211r>;\225,\312<\245y\274<&\302n<w\352\376;\355\274\020\274\303\n\004\275\036\343\313<\254d\244\274\376\260\275\273T\334A\275k\265c\274\223\"\240<1\352\013\275\340\332\014\275w\254\367<\202\335\347\274\356\270\215\274\026\376\202\273\267}\365\274\245\331\\\274\360\235\036=\316\232\252<\277c\354<\210\0346=\311\366\350<\255\331\205:(\3468:\311\"\203\274\214\314\203<\210\251N=\377q\001\275\371\226]<\027\262\274\274\246\2206=\\\216\331;\324\344H\275\204\223i<\210o\006<\335\206\201\272\210\261\376;{\")\275\271\301\250\274\376\255\221\272(\232\004;\3416L\275\220]\261<\373\240\240<?\232%=%\365\020\275\030\"-\275\331R\233\274\256o\t=\305eU\275\244OV\271\364\364\023=\317\345>\275}\030V<\333\302I=\336i*=\016\004\247\274\311\023#\275\025\016\002\275\257\241Z\275\315\303*=R\344\372<\266\252\202<\031\264\207;Y\271\003\274\266{\273;\360\256\035=\216\225.<\216\006\035\275c>\033\275o\331:\275+=\006\275y\240\326<\217\2513\275\263\2077=\347\004\241<<PG\275\r\222C\275\252\221\246\274\315M\021\275L\243\200;\346\243\370\274\022\335\030\274]\220\336\273\243\251 \274\310\223\273<c3\271<r\265N=y\034\235\274Z\220\031=\376\356\324\273\020a&<\235\302I;\330H\203<\317F\325\274\312\177\"\275\314\261\035=I2\"=N\347U\275N%\253<c\373K\273\"\327\010\275<\244<=\210X\335\274\"iX=/\021\250\274\256\333H=&\314G\272\237\301\023\275\276\"\235;^\370\223<\021\005\036\275\212\230!=h\2308=\373\tE\275\223\037\222<\372\341\307<\252\316\237\274\334\234\270\274*\201\t\271\270\222\013=\252G\277;@c\263<B\214E;\021\272\030\274b\220\360\274&)\267\274\236\030\261;\244\256A;\t\317\321;\371\201\364<\212\374x\274~\314\323\273\372\340.\275u\003%=\010n\003\275\242\026\321\274<\203\313:\233\244\347\274R\347\372;jm\344<\336\214\300\274\217qZ<\026\270C\275\232\346\266\274\224\225 ;\247\023\004=K\302\376\273\026K\213\274=\316\371\2746`)\275#d\027=%K\211\274\334w\007\274\377\2768=\274[\262<K\240\227<F\030\224\274\274r)=\232s6=\035/\030=?\332Z<k\205\234\274\362y\021\2752}\355\274\222\005G=7Y\321<IW\022<\025Q\340<\244\305L\275\364(\002<\364\210\343<\305-\366<1>>=66\375\274\200wW=uz\363\274\315\344v<\337\325*\275\365+\226\274\255k\267<(\275\r\275\256h\302\274v\371/=\335\327\006;\330[\331\273\362\274\026\274\366l\034\274\323\2304\274)\007\211;\036\010\367<\037F\025=\254W\305;\270\330\237<\021)\025=\253\027@=Xz\004\275\177\311G\275\244\030W=C9\034\275x\350\037=\036\037\003\275\016\341\'\275\203j\003=H\373\235\274\'\371\034\273jP^\274\336\311\360<\315Q\3359\274GY\275\243/\202\273\211\246B<\256\217\3359\264\372\031=\247\222\027\275l\253<\274\263\375\"\275\272\373?=\315\237\312\274\222\022\362<]\036\023\275\032\346\030\275\242\375\336<%4S\275\034\031Y=o\001\021=\002[\245;\377\0324=\303MV\275}\257\373\274\317\362\347\274\306\242\373<Sh);\355\323\353<\004\331\320<FK{\274R\356\022\275>\032N\275m\026\300\274\t\202/=\266Q\266\274]\272\304\274\210x\201<\331F:\275\350\276\361<\001\\Z\275\005~+:\014\243\251<\362\333\034=\014\256\217\2742^\367<\325\274\021=\352\320\316;\r\364/\275\024\023\022\275\225\335B\275~\256\355;\024a\036\275.\307Y=o\r\005\275(jn\273=\321\027\274\374=\350:\034\242\207\274\027\0100\275\210z\324\274M\036\334\273\216=F=m\275\336\274p\017\"<\343\206o\273\227\375\006=\260\333\030=xR\375<\354\204U\275\252\352\201<\316\275\342<qw5=\271\304\033=\375\236\304:\222 \024\274B\251a\272\307\233\345\272%\253\t\275vf\327\274\010\342 =\352\0209\275\371\262\217;^\276R\275\257\326.\271\246HX\275[\013K=\214\001\016\275\203\307\002\274vK\036=\001\034Q=\216\372\351<C\204H<&\342\026=\022\231\267\274\233\360\236\273/Yr\274 \227\004\275\2542/=\343\244Q\275\002.\201\274\312e\363<\310\037|\273d\352\305\272-\351Y<:\2251\275\264\373\356<\005h3\273\007O@=\210\025\275\272>qz\274\213\212\013\275\310\246\306\274\273\207\320<\r\237w<\034\324\r\275\216i\026\275\342\273y\274Bu\027=\026-J\275NJO=\213\377:\275U-~\273=rK=M\017e<2y\247\274G\275\257\274\230\313\"\275\026\253\316\27474\310:\266\004\223<>z\001<\326x\360<\203\027n\274\252\026\225\273\307G\330;\312^J=\364m\320<Q\'\000\275\306\004\017\274\346\316\014=Uy\376<\354\2547\273\351\t\017=.P\370<\001\2758\275\327\346\361\274\276 9\274\377\037\330\2738\225\r=/m\306<\306N\237\274\033U0=\267\274=\275\247\275@=q\333;=N\323\354;;\177\264<\001\276\006=D\364L=\273\006\036=\245\nP=\206eZ\275u\217\020<\226:Q=\236\271F\274\261\361L\274\032\345\307<\245\0046=HY\345;g\244\t\274\205\334\350\274\364K\033=\243iZ\275\034l(=\003\031\'\275\203\320j<\316\3711=\332P=\275U\256,\275!2\030=;)\033=A\333\033\27503\207<0~L\274\347\002\336;\026D\033=>\277J\275\202j8=N\277$<\250\214\333\273\347\226\006\275\023\210\r;7\2215=\340\224.\275\013%\3649\242\350\250\274Y4\273<Q\200\204<tI\253\273\226\210,\273FS9=\026R2\275j\361$=~\225\037\273\035\204z\274/\330\247\274\245\312\313<\321+b\274\365\023\"=\374\333Z\275\316\237J=WF\002=\354\252I\274)\210K<\213\357\217\274p\361\230<p\004\021<|\036\332\274\366\035\010\275\273\226\241<\327d\026\275\r\204+=@\356H=@\356g;\005\021\006=QK\033=\234\n\020;"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.866025388241
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 38
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 48
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mul"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/range/start"
  input: "linear_regression/mean_squared_error_regressor/Rank"
  input: "linear_regression/mean_squared_error_regressor/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/Mean"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  input: "ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range"
  input: "linear_regression/mean_squared_error_regressor/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  input: "linear_regression/mean_squared_error_regressor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  op: "Mul"
  input: "linear_regression/mean_squared_error_regressor/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/Mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  op: "Sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/sub"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/sub_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/Rank"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/start"
  input: "gradients/fully_connected_1/BiasAdd_grad/sub"
  input: "gradients/fully_connected_1/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Rank"
  op: "Rank"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/sub"
  op: "Sub"
  input: "gradients/fully_connected/BiasAdd_grad/Rank"
  input: "gradients/fully_connected/BiasAdd_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/range"
  op: "Range"
  input: "gradients/fully_connected/BiasAdd_grad/range/start"
  input: "gradients/fully_connected/BiasAdd_grad/sub"
  input: "gradients/fully_connected/BiasAdd_grad/range/delta"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/Sum"
  op: "Sum"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "gradients/fully_connected/BiasAdd_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/mul"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_1"
  op: "Rank"
  input: "global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_1"
  op: "Range"
  input: "global_norm/range_1/start"
  input: "global_norm/Rank_1"
  input: "global_norm/range_1/delta"
}
node {
  name: "global_norm/Sum_1"
  op: "Sum"
  input: "global_norm/mul_1"
  input: "global_norm/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_2"
  op: "Rank"
  input: "global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_2"
  op: "Range"
  input: "global_norm/range_2/start"
  input: "global_norm/Rank_2"
  input: "global_norm/range_2/delta"
}
node {
  name: "global_norm/Sum_2"
  op: "Sum"
  input: "global_norm/mul_2"
  input: "global_norm/range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_3"
  op: "Rank"
  input: "global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_3"
  op: "Range"
  input: "global_norm/range_3/start"
  input: "global_norm/Rank_3"
  input: "global_norm/range_3/delta"
}
node {
  name: "global_norm/Sum_3"
  op: "Sum"
  input: "global_norm/mul_3"
  input: "global_norm/range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_4"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_4"
  op: "Rank"
  input: "global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_4"
  op: "Range"
  input: "global_norm/range_4/start"
  input: "global_norm/Rank_4"
  input: "global_norm/range_4/delta"
}
node {
  name: "global_norm/Sum_4"
  op: "Sum"
  input: "global_norm/mul_4"
  input: "global_norm/range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_5"
  op: "Rank"
  input: "global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_5"
  op: "Range"
  input: "global_norm/range_5/start"
  input: "global_norm/Rank_5"
  input: "global_norm/range_5/delta"
}
node {
  name: "global_norm/Sum_5"
  op: "Sum"
  input: "global_norm/mul_5"
  input: "global_norm/range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/Sum"
  input: "global_norm/Sum_1"
  input: "global_norm/Sum_2"
  input: "global_norm/Sum_3"
  input: "global_norm/Sum_4"
  input: "global_norm/Sum_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank_6"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range_6"
  op: "Range"
  input: "global_norm/range_6/start"
  input: "global_norm/Rank_6"
  input: "global_norm/range_6/delta"
}
node {
  name: "global_norm/Sum_6"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/Sum"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2090
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2090
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^train"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
}
versions {
  producer: 8
}
