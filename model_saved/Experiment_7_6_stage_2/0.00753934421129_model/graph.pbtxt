node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 378
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 378
          }
          dim {
            size: 55
          }
        }
        tensor_content: "\266[\351\2717T\345<\205\tA\275`\302f\275\2557 \275\240\000\302=/F\004\275\201\005\356\275\214v\326=x\244{=\313\243\306<!BY\275e\275\353=\323A\217\274F4i=\223\313V\275\236\363\027=\251\360\255\275\036\257A=@\207\r\275\375\316P=\220\006\031=0\375)<\375\033\305\271\343\241\253=\336?\333\275\261o\215=\202\001\350\273\362En\275~\r\354<\273\210\262=\265\353\355=\020\241\277<]\256&\275\230\"\234=H8\031<M\244\362<\2639`=\245S\275\2757`\335\275\271\005\032=\340L\256=\214q\271=W\242\213=\256\305f=}\263\245\274T\355\250<\000\364@\275\335\355\277<\276\220\326=4\3371\275J\034\304<l\247\302=\254\215?=@}a\274\317\022G\275\376-\233\275d\377\301=\332\021\350=7U\232=\372\326\247<lMP\2754\320\234<Z\212\234=\346\212\246=\377\315.=IRu<+)\301=\241\267W\275\267\312\023\274\2648\037\275b\320\003\275 \223\340<\377\331\304=\213\313\353\2745\276\242=\212\360\035\275\347\247\206=\321\361\314\275#\323\305\275\201/0<,\373\300=\007h\350=l\231\343\275\275\364\363<u\032\341=\366\340\031=\\\233t\275M\272\274=RC\351=K>}=}\256\242=\335\210M\275\035o\272\275\247\004\367;3\235\207\275\3252\264\275\026O\233\275H\341\024=\361\246\231=![@\275\302\345\377\273M\016V=(\341\224<\024\323\341\275Ti\r\275\375\205\345\275V\005H=\245K\221\275tx%\275Vsh=\357\243\240\275\3460\251<S\364\341\275\242+K<\356\351\305\275E\033-=y\275\327=\246\017f\275\341+\227=\374\276\223\274Ic\214=z\304\207=O\252\375;.\202\267=\326U\225=e\242Y\275!3\356<9l\354=\320\275G\275!\000\271\275\263J&=\207\277%=CM\337=\317\372\360=\316\372\346<\036_h=U\346W\275\031n\313=\244\010\332\275X\016\033\274:\362\340\274\314\206\267;\200 \217=\320\257\253=2\244\227=\313\016\324=J\341\304\275\305c1\275\265C~\2748\214\275<\204\271\325=\0327\255=\362V\007=\023V\031=\341\002\347\274\022\275\030\274\244I\307=z\266Z\275\361;\236\275\212\202\265\275\312\203\210\275\303g\321=\277\020\201\275,\356\345\275\377\321U<d\014W\275V\325\266:\317C\002=\003\016\000=uhj=j\304\205\275f\233\225=\276J\241=eS\025=\250H\313=\350\247N< O\220\274io\033\275\017\303\026\275u/\342=@\200\n=\267P\225\275\260e;\273\276\243\215\275\304\037!\275\252\361\341=\024\276\231\275\343\336\352\275IR$=H\223\017=s\305\210\273\266H\226=\254\253:=IB\335\275\022\261\276<\331\240\237\275L\362\006\274`\031\r\275vc\200\275\316\377\236\274x.\255=\036rt\274|\014\005\274\272#q=\016\303\026\274\346\030\001\273fC\352\275\372^]=\302\251\304=\267\324\243=\2753\017\275\013\335Q=\030\300\235=\302\236\343=\223\356\322\275\025a\204=\r\247\264=dU\220=\212-i\275\2113\214\273\237\211a\275(\023*=dH}\275<\024\354\275si\003=w|P= \245\025\275\021 \310\275\351\354\231\275\262eq\275\240*\263<\231\265\262=\255\r\201=\024\276\311\275\356\235\320\275\252\277E\275\325\300\227=\016\222\202\274\271\023\211=\373\t\254<\004$\257=\353\254D\275\345\252\223=\277Ju\272?\005\251=_\322\026=\353\241\246\275q\305\215=\t\r\354\275\317\275\021=\344\341\315\275\207\027\305=\222\311X= f1\275\243\000q<K\032\354\275y\034\r\275\343\031\314\274\244\317b=\0148E=\371\306\240\275\0233\260<\251\030\222\275%\256\256;$\252\252;1\032Q\275qh\232<?<C\275\270\231\311<6Y\221\274*\376\312=\nE\225<\r\342\241\275\234>s=O\204\312<\345\373\323\275\255\276\220\275\2550\273<\240\360O=\277l\246\275\n<1=\361<\267\275\242\241\330\275\210\373\216\274\177JA\275\345\336\304\275\227\217\314\275 \317,<\332\322\351=k%f=G\3759=W&\272=\376l\354=\265eW=u\306\351\273W\315y\275j\335\355\275\253\204\221=\037X\263=F\"m\274\214\204\355\275\033%^\275j\021\310<\037\335\242\275\343\246\343\275\001\250w\275\212*\277=<I\001=\216U\243=\2120\336=mO\240=\240\242\207\275 \371~\275\352^1=\025\362\352\274O\202\331\275\374\365X\275\274\313\304=J\036\025\275\211X\212\275\357V\007=\345\312\274\275\257N{=7\016\271\275\317\207\255\275\275\361\004\275\0133\242<\246\316\203=a\033\342\2754\200\306\275\202cC=\020a\216=[Oj\275\332\303v=\315\'\330<\3548t\274\007\377\030\275\322\312\273\2752\335N<\3570\200=\374\315\311\275\301\336\267=\222\377G=u\345\256=\243\257\354\275\301\335(=\324\245\257\275Tr\201\274`\017H\272\326=\347<5\003\362\274\215\r\356\2752\203\274=\335\037\254\274\350\321\325=Y[\315\275\303_\342\2747#\323\275\372\236\220=\237\r\215\275QO\272=\341\211\214\275\177\256\n=Q\r\315\275\3135h\275\243\227\212\2753\361\307\274\260\373\260\275\370o\255\273\223\302q\275\220\213\257=\362\263\306=\344\334\226<\325v\225\275H\036\277=C1\254\275\254\026\242\275\363\022\233=\344`D\275HD\360\275\037+\310\275\232_\230\275\3335\240=O\313,\274\354A\260=\253\323\207=\354\343\257=hUn<\372\3653<h\324\263=\305q\323\275\336\004\242\275<\367\336\275l\227\374\274A\313\205\275S\177\224<\332\026\307=\307\330\014\273\342s\237\274t\350\316\274Z\310\204=\024\324\334=m\366\315=\035\260\244=\203\344[=\302}\235<\t\313o\272\370\325/\275\247\323!\274I4L:\236\371\346\275I\364\345=\037R\213<\344\357\313=\007\347W\274JD\031\275\001\001}\275[\276\211=b\347\360\2752\277\356=\246\010\017\274O%\244=E\206\217\275\001\307\370\2749\341\241\275\273\303\257\274\311.\253\275\204/\266=P\354\316\275\333~F\275\355\377\027\275L2J\275\321\247@\275-:\233\275(\345\221={sN\274\241\333\'\274\036\325==\031\330\354=\027mW\275\003 \214=\';\314\273\266\214\277=XD\331=\233\301\325=}\303\347\275\320>\221\275\207\202\273=U\253\306\275\343\211\221=(3\305=\346?\305\2757\006\207\275%\305n\275\031+I\274_\271<\275>\312\231=X\032\317\275\2272;\275\014\277N\272\345\224\270\275\207\273\260=\372`p=F>\276=v{\204<\032p\277\27545\303\275\363\275\027<K\005\317=\212\357\255=\016t\307\274\\\221\213;*mJ=\205\"\025\273\037l1=\310\223\266\275\375\021*\275\212\t\310\275j\003\352<\371\276o\274f\246\034=\322M>\275\005n7=\000\311\201\275N\214s\275\332\3478\275\017t\325\275\324+\332=_w>\271Z\303<=\347\201\244\275\373\253$=\351\241\242\275<8 \275B\034\277\275\201\320\346\273\360\020\232\275\367\023\355\275\251\255\333\274w\270\234\273\203\223L=\036&C<\351\324\016=n\013l\2748\235\256=C\250\205=\275\211\344=\261p\352\275\234\205\256=X\035\027</\256\025\275\370\261\233\275\300\213z\274N\2364\274k\244\254\275\005r{\275{\362%<\000T6=\361\356\324\274\303;\271\274\r\364\215=\375\362\234=\325\327<\274\266\330I\274r\210\250=\373\212\330\273J\264\326<\363;\272\273\036\203L\275\201\307\313=]\310\212\275\204\217\324\275\342<\010\275\371`\243\275Fp,\273\314\324\314=\010\225L\275\000\275\035=\207!\004\273Wt\352\275\331\323d=\223\210\221\275\357$\337=\325T\215=\004G\211\274oD\332=<\200\261=1A\337\272\333E\273\275\013\022\266=gi\355\275\243\337\222=n<c\273\'{\275=\357h?\274\204\202T\275\356(R\274*\276\200=V\277\030\273\344\336\324\275\250\200A=\271\004\273=\373r\253\275\372\307\022\275\375K\322=\375Q\242\274\306~\300=\336\016\225=\307W\311\275)\272\231=\231\221\251=o\350\335\275\336V\014<\300\335\212<\326Sx\274\274\263_=_\251\357<\353\303\243;\017\022\225\275w\376\276<\246\231\330\275w\211\327\274\3075\271={X\252=UW\240\275\016\355\267=\3079\264=\222\337\334\275\rK\203=\023\352\032=\2620\344\275Bl\354\275\211\277\206\275\005\254j8O{B\275\306s\234\274T\246\033<\266l\r\275aOC\275\020\331\341\275UP\004\275\314\330$=\020T@=^\277\017\275\000\'d=K\224\271<\"\317\243\273{~\305\275D\336\305\275\335r\226\273\230\312\036<p\300\212=\223\302\213\275\nG\352<\245k\366\272D \211\274\355\342\034\275Z\032t\275\r\351F\275\362E\037=N\243\006\275Z\205f\275\211\276d\275\"\332\225=\371(B<\204\006\355=#G\\=V\350I\275\350\301\246=\010\332\335\275\2645\346=?\234\303\275\310\303\260\275\266\376\256=\240M\337\275.\356\317=\260Bw9\214V\305=H\222!\275\337M\232=P\321\343\275\270n\305\275\273\230\346=\341D\221=ku]\2758\314\027;\363\272\203\275 \246\346\275B\264\251=\307\261\252\275\372\367\262\274\336\010\342\275\215\274\347\275{+^=\246z\204=\277\207\004\275\005\334y\275\234T\327\274$\244\354\275\031\024O=\206@\210\273-\371\277=7\031?=\001\006\200=\005\016k=\377\024\226;E\262Y=bd\306\275\372\330V\272\206\262\224<h;\332\275\375\006\332\275:/\322;\246[\007\275G\327\277\275D\334\326=\366\375\207\275\0047\250=-\206\330=\275\027\325\275\2640\327\274\017\367\266=\272\247\302=\337\2011=\371\217D\275\202\214\201\274\370)\263\275\313\002\033\275\215\271e\275\253\314\244<+\033C=#\377\214=\023\360\245\275\206\257\340=2\212\245\275bG\273\274\017:\246<\336\016\004=\261\200\202\275\003\251\273\273\016\220\333=\017q\310<\223\311\026=\260\322\016<\321W\315\275WJ\013=S\024\n=|\203\243\275\201%\224\275`\301\260\275\270\2640=\\|\315\274\017P\340\275\303 \332=\317#+=\252|\006<if\257=T\331p\274\305\332B\275\215\271\276\275:U\226=\342D\341=C\235!<X\327\350\275\247(\227;\305e\320<\304f\002=\302\260G=\337\225;\275:\203\324\275\355\265I\275\037$,\275\000[N=\347\227\362;\003/T=\233\246\240\2749\226l\275\350d\205=\356&\232\275\324\204\324=\365p\265:7\252\232=\372\202\317\275\202*\351=\363G\315=\335sO=\251LJ=\277tZ= \367\307=\210\355N:\264\331\200=\034\2509=\245\"\235\275\3505\n=\216\200\366\273dH\262\275\236\232\224=\316\226 <!\300\276<KS\026\274\006k\251=\322\003\326<\034\003><3\272\275=\270AW=\317\251\313\275\300R=\275\240\207D=\307\365(\274bh\302\275\205\317\211=BE\242\275\311t\273\275\255\251>\275\265o\t=1[\262:0\351\301\275q\010\304=\023\320\354<\204\0077<\\\214\342\275\226#\276=2\234\205=\026h\213\275\303g\322=\203\271\342=\313\332\r=@!0=o\226\271=\366kR=\230\221\212=\3343\255\275\351\257\360\275R\234\235\275A\242\000<6\0023\275\262m\363<\220\034\317\275\321\\\034=Q\226\250=\237M\210=\335\255\204\275\345>\223<\256DH\275g\357\007=(\207\220=Y\356\353=\304\004\361=\346\324@<\215\320\241\275\230\347\014<$\240\034\274]\010\247=\361L\340=nO\261\274\212\334\243\275\254T\325;pS\237\275\376\260\215\275(C\n\275\377\335\216\275\233\016\341\275\023\367\335\275\371\035\010\275Q1\331\275\3166\225\275\256\343\354\2740\205\006<\245\260r=\005\313\332\275\200\026\352\275\321{@={d\360\275\241\342\264=-\276`\275f\003\324\275x\304\300<6<\253\275z\244\016\275]\200\264=\343*\367\274\006\027\216\275SxZ\275\224uw=\3373\000<n\241\231=y0C=P\000\327\273)\230\330=\357\373\274\273\332\357\351\275\310+\313\275\260\365\253=R\246\301\274vr\016\275r\320/=\270\364V\275u>\256;\205\240\236\275\376\360\261\275l\034\234=\214\264\206\275\356\005\377\274\302A\311=\227\342B\2755y\312\275\374\0259\274\324]\363\274\325\344\360=i/f=\246\240\r\273\271\371\341\275\330s\263\275\372\334\205=>\370\252=\242r3\273\331\241\220=\255g\200=(A\030\275\234\374\032=v\334A=\021\257d=\025\341\333\274r\304\003<\026\260T<\032T\330\2747\264\256=\035\007\213=,\030\217=:\002\245;\354\317\340=\004 =\275\313\326\213\275\325\267\303=?\341\246=\275\231>\274Y\355\205\275\266\260\'=\361?\243=L0\244=\374>\312\274\360\"\256=g\245\021\275\217\212d=\217\037\336=\237\230\030\275\300S\340<U\335\230\275\021`\r=\027\3226<\356H\352<C\300==\033U\222\275q\271\272=\333\257.=t{\246=S\375\026\273\010\277\334<\034%\237\275\301q\255\275&kc\275\230C\260=a\244\350=\342\214\216=,\031\216\275\027\340\203\275\2630\321\275TP^;0>\222\275\373r\n=\366\"x\275o\004\222=\274\3458:q\322C<`\266H\275\245N\307=\212\374\346\274\253Z\201\275\370\201\274=\254\365\240<\242\337\302<,\rl=\001\264\202\275+\026`<\027\t\303\275d\025\237\275\2220x\275\247\365\263\275\225a9\275\3508\340\2757\207\216=\326\307\254=\001\020\034;\325H\213\275\347\330M\275\034\260\226=$\023\316=\273\271\n<y\3616<\236\341(=Aq\026=#v\304<\252\270\274\275\207~\356\275X\232\027=L\270\323=#\306}\275\007hN=\226\322|\274\035\337\355\274\030u\037\275&\035F=|\370\221:\370G\342=}h\215=FC\032\2744\0358<w\315;=\t\252\020=Qp\242\275\251\213\352=r&\236=\227\310\317=\217`\336;\"\372V=Y\237t\275\201\347\324\275\205\214\250=\307I\210\275\347\231\214=g\243\313\275\022\017\264=\262\334\301=\3437\t;T%\206\275+^M\275\324\234\342=\346t\340\275U\353\307=D?\270=\220\3437\275v\352\033\275\177$\236\275L \340\275\317Z\275\274^\323\234\274\2071?=?\356c=\353\237\327=\037\221v=\235\226\242\275\264l\027=/0\024=->\013\274\234\311\275\275&\254P\275\333\306\247;\230+\266\2751Ov\275\253\204R=\016(;\274\255R\333<\031\353\335\274\206\207K\275k\'@\274u\204\232\2758\372\007\274\032\005|<\'\032t<G\026\210=\241\210\304=\351\334a\274\264\223\20293\331\n=\007\251\266=:\366\013;\016Q\341<\3220h=\n\313\335;s\306\253=\020\233\345=\016\325\366<\303e\216;\345\244z\275\2316\271\275n\202\315<\006\326\345\274\346>\205\2754T\201\275\231\203\310\275\317\365H=\264\242t\275lO\331=-7\032<v\321K=\000\274\302=>\t\206:^\350\343\275\032\350\356=o\363;\275\211\010\227\275\345\277\250\274\317\244\223=;\310\010\275E\333v=*!\213=\265\005,\275>\372\300=f\341\347=.G\027\275h{\212\274\253\276z=O\360\234\275\235{\206=\347\266\010<\237\201{\275\"`\346\275\022\222\177=!\264\221=3@_\275\013d ;\244\320$\275\265\257\346\273dE\307\274\003\375\311=~\006D\275\326\334\033=\373\000\274<\301\351\224<\304d\344\275\265\014\272=\204\314p\274(S\333\275\270\022(=S\301\223\275\2351\206\274\325\352]=r\362\231<\202,\247=\326/p=\354i\216;\312o\266\275\261\221\343=\036\241;=?I\213\275L\305\205=3=\261\275f\330x=\010\177R=\246\237\202\275c4\325\275>\033\221=\334\341\254;\367.\246\275\014~I\275VZ\220=/\022Z\275\247\000\336=S\037\220\274\2069\244=HW\247=\241C\275\275[C\362<<Z$:\236\013#\275B\341\232=9IE\275\273\030\244=\316\250Y\274\350\332\221\274\004k\301=u\256\306\275\223H\316\275$j\t\275/\253\357\275\375\017Z=\2130\220;\350\033\266\275)\n\247=o\001\361<A)\304\275\343\256\271<\352\230\357=\367\351\013=\274F\356\275\222>\327=\315\372\273\273\303\203\020\273\334t\006=Cn\241=8T\352\274\230\326\331=\342\222\026\275Q\016\233\275\223[j\274_\245\242\275n\311B\275{\312\224=\231\370\205=\005\264\266=O\022\267\275S\274\t\274\374y\211\275\253|\224\275$\206\215\275\264\266\356=\362\274\203=f\325\260\275\327cZ=\261\021\260=\233n\263=\016\333\264\275\225\240,\275\334\337\211=\26422\275\1778\322=Uf\220=\\\363\227\275;$q=TI+<\316P\331\275\376E\344\274.\250J\275t\224\213\275\004\311t=\343\260P\274\000Q\032=8L>=\336\336\242\275.o\237\275\271\014\317\275\"\237e\275\366C\333<3\342\336=\230k<\275\177\227\020\275%l\323\275\200\000A\274\366a\330\2759_\340\274\263\356\332\274\217\304\013\275?\336 =\013\274\276=\004n\256\275X\262\357=Q\034?=\033\rK\275\310_\270=.\365o\275\020[1\275Q\211t=O6\366\274\317\033\213=\265P\241=\032p\t=R\363G\275$2\216=`[\321=\367\377\3709\255R\313<~\013\270=\002\371\206\275\341;\224\275\241Cs=;\3719<n\360\307\275Z\362q\274\255\255\357\275EV\347\275\016\313\345\275X\016\274;\254\257\t\275$q\220\275#\302\222=\025A\321=H\363e=\315}\267\275\037bH\275\316\362\241\275=\276\271=\377p\262\274\342=\223=\007\2635\275x\364\356\272\334g\246=\244c\200\274\003>\353\275\360\376\211=-2\263\275\220Q\261<\342H\261=Z\242\356=\024k\342\275\330B\301\275\302\344\275;\342|\262\272\247B\006\275\363B\376\274\270\354b=\306,\244=o=\316\275<v\201=\"\212\332\272\315\362\265\275R\234\343=\3362\300=\007\346\330<:P\275=\227\236\036=\212\035#<\364r\212\275(\202.\275\000q\342\275j\031\326<\207-\033\275\275j\360\275\343N\372\274d\302\001=\356\'w\275\206y\325=\037\330,\275\275$\303\274\334\246\252\275O\"-=\242\233\206\274\2102\007=\336\230\212\2756#\316=\232?C<;\277|9\215/\264\275l\266\315\275\331`@=i}\366<[\2329\275\214E\212\275\262\251\326<\203\267\250\275\240E\326\275!\177}=z\306\221\275\310+\211;\372\230\014=\336[r;w\303\266<\n.\330=V\253\267\275bH\"\275)\311\306\274\3254\311\274\262\002\370<E\346j=\234\t\202=as\311\275\355w\315\272\200\374\006\274\025dl=k\021\342<\307\035x\275\341~\215=v\246\177\275\236\245\333=\357\334\265;\347\267#\275\241\213s<\r@\340==\235\250=\370\034{\275\266v\320=\000l\223=/\227\237=\3106\320\275?\020\033\274\024\206\230<\010\341\203=\000\233\230\274\253O*\275E\221\262\275\372\273h\275\341\272\036<\354\224\007=#/F\274w\267\324\275\302-\237\275\023\267\206=&m\235\273\213`6\275\266\305\321;\225\022\277\275\033#Z=\340c\210<\003:\332\275s\242\205=\025\253#\275\373|\252=R\356\313=\244\177|=/vG\275@\rP=\231\3677=\277\264#<\364\232g=\233\007t=3\265\257<\251\231\373\274\274Y.\275\237\363\317\274\017\333\343\273 F\203=wQ\022\275\333j(\275|\254\372\274\3138\023=\333\261\244=\235G\201\2754\241\243\275\255\362\270=\247\207\244<H\007\\=\212\211\346\275\302\211\355<~\203&\275\232D\024=\345\322\016\2750\032\201\275\233\327\304\275\360\021\202\275n\273\231=\035$\204\275\336X\315\274\031\201f=\223\177\303=\347O\350\273\204\255\255=b\374\236=\214V\256\273\232\204\214\2753rc\273\257\236\200=}\252\341;\364v8=\262\n\036\275 \337C\275\273\372\256\275&\222h=\242\253\327\274`\2475\275\203C\007=\331\241\236\275\265g\311=\202\247$\275.\255\374\272\324D\323\275\003\351\365;\244\025\225\275\262]\355<b\225\261=~ \330\275y\342\001\275\177\244\027\275\222%\236\275\327\210n\275&\336\334\275\351/\303\275\002\220o=<)[\275\337\t\022\275\344=\241=Q\261\350=\016n\301=\362\351\025\275\275m\353\275\243\nw=\322\230\233\275\324\n\177\274\363\326\026\275\204\273\031=\005\202\275\274\274&{=\255\235\344=\022B\024\275p\322\345\275\0220\311\275\221\266\320=\373\327\250;d\240\331=\267\307\354\275e#/=|\324\320\275^\006\264=;\026\324=\007\027\266=\377z\234\275\360=\255\273\007\244\335\274\2427\035<6-\013=\336\373e\275\204\252\036\275p\310\267=\013\202\256\2751)\314\274\233\245\275<?\224i<r\361\232\274)\213\005\275.\017O\275\377\006)=\210\266\224\275\354\210~\274J\356\206=RN\002=\370V\177\275\343\224\250\275;\332\305<\372T\220<5\001\272\274FW\317=\005R\314=i\206\320\275jI\217\275\261:\022=\337-\031=\231\345o=@\230S\275\034\324\325\274\237\340\312=~\371\255<\001DG=\007/\320<\210\316x\275\361\370\233<\276\255\271=i\243\244;h\006\234=\335\004\022\275\021\336b\275\327\217\314;\235\030\200\275k\367\220=\n\230L\275\024\223\031=b\355<\275V\315\343\275|\301\345=%\322Q=\260\241\327\275_\004\004=\222zr<|YO\275I\026\222=W\213Y\275\336\303\300\275\371\"\301=G\242\223=\341\230F\275\0377R\275O<\251=W\210\347\2755\357g=\210\355\314=\317h\346\275\250\230\316=\204\037\363<\213B\306\274A\274\247=\013k\t\2756ZI\275\n\202\323\275\317\214\250\275\320\311\240\275\317\311\003=iO\265\275[b\266\275,\3421\274w(\251=\036:\231<^\373\204\274\227\265\241=\262+\331\275d\001R\273\212\t\030=DA\205\275\3747\024\2754IA<\227hK=6\246\305<\354\351*\275\207\207\303=\000\n\360=e\t\274=\262\022\311\275\310)\200=L?o\275\371]\240\275X\211\251=~\223c=\206\303c\275\025\034\231\275\273\257\000\275\027W\265<K\033\206\274\330x\005<\021\246w=*\272\232\275\357\216b\2756\010\215=\264\213\252\274k\204\326\275\366\023\233;\320\014\263\275\324G\205\275h\323\314=\312AI\275l\274\244\275#\331\240\2756\270\024\275B*a=\274\331\241=\360\266W\275^\353\224\271n\254\277\275\252\252\206\274\024\250\360\274\202\335\213=\014\245\351\275e\330\225\274\347\240\254=\353@\301\274J{P=\342\267\311\271\\\232\345=^\302\222\275\342\002\261<;^`=g\347\321=oX\367\274lM\356\274\330^\230=3\243R\275Z\376\263\274\357\357S\275\242\214<\274[\347\350\275$\310\236=\"\206\262<\251\257\243\275\362y\343<\336?>\275\n\250\231\275\347q:\275;d\340\275Z\263N\275\331\004\276\274y%\347\275.\311\205=4\204\202\275\347\225A\275T\322\254\274\014\017\006\274\375\342\213\275<L\324\275]\264\227\273\244\200\376<c\016\265<%\260\306\275\311\275\272=3C9=\220p\353\275v\030\357\274=(\343\273\023\372\305\275^\033\223=\013\275\205\275\225\247\245\275B\250\346<\372\305\305\274\036K\355<\214\016\343=\215\'M;F\241W=\'o \273h\310\236\275o\351\272=\260\037\232\273b\216\356=t\020\315<T\256\212\274z\217\025<\361\320\225\274=_\024\275\245\252\243=\355\023K\275\"*=\275p}\276<\310\334)=\202\374\326\275\rK\220\275\257\030\266=EW\201;\244}\334\275\273\260\220\275\252\210\276=\201\267\255\275\337\0245\275\t\027\252<@\201\025\275\344\375\221=\226\334\204\2750\257\240\274\266\206\356=0c\242\275a\321\305=\301\307\303\275\310!\344<{\0315=\201\223\273<\277h\203=\365fk\274kA\265=\277\017/=);P\272\341\343t\275\277q\214=\300\266\271\275\206lx:\010\033\243:g]\r:?/T=\032C\225<@Vv=\362\245D\275/{g\275\305\270\246\275`\320\327=\013\033\203\274o\323\200\275\000m\341\2747o\232\275\0044m<l\252\302\275\311B\257=\312\207h=,\251G\275c\323\202=\022\263\307=\362\331\330\274\243v\216<\244\315>=k\2078\271\243\274\244\2752\265\005\275C\231^\275k$\276:\014\364\230\275\215\3648=\210M\005=\022k\317=\270z\202\275\246 \217\273p\223\302;\316\241%=\337\006Q<\277}_=[o{\275\213C)\275\000\307\267\274\371\'\250\275\265\343\205<\202\020\265=B\326I=\304b\276=U\232\333\274\324\301O;\334\024\354=X\005\206\275\365\221\247\275\033\343\215=\216\313\274\275\271_\300=\364{\231\275Ze\302\275\235\345\024<\374\222\262\275\322rP=IW\261=Q\017\202=W\347\322\273b\213K\275\r\214\301=\032S`<\347M\221:\034\213n\274\200y\007\273h\001+\275\272\374\345\27517\225<\247\025\272={\307\330;\\ \222\274\253\2405<\021\371\342\275\354\231\033<\333xG=\214|\223=\210\007\224=\325\322\350\275\2452\340=\203\356-=\330\313\211=\340\to\275\235\201)=-\300\202=\007\375\243=\032g\317\275\364N\034\275\366\342\332\275\246\326>=\314\232\222\274\230\235\244\275\352|c=\250h\206=;\364\264=\273\037\013\274V\230\330=\033\233\031\275\305r\225;\226\003\263=\270*\331<\215\312o\274A\r\257= \306L<\350\300\271<ZPI=\251\266\243=\303\323\301=?\370\214=\362\241\214=\025,e\275\220\353\030\275\214\335\2249\276\246};\201\023\370\274\016\000\305=\"@\335=\2718=<\213y\316\275}F\301\275M\326\225=\375\226<=\303-f\274n\215\276=9\024\322\275Y\274A\275\320QW\275D\010K=\224\356\020\275x\030\264\275T\243\303\275\250=\236\274\232\375\301\275\2703\233\274C_&=\r\377\262\275>w,\274\363,\326=\232\316\234\274\272K\n=\225\036\231=\227*\213\275\t\326#=\230\262\342\275\014\362f=B2\327=\260\376\263\274\337\0060=\321w\347=a\357\206\274A\0322\274h\355\234=\033_n\275$\236\227\275\305z\207=h\t\265=\256\221F=o\310\230:\270U\211<_f\345\275e\335\010\275\3507\234\275\262\r\307\272\364sJ=V\267\276=@\357C\275\237\337b=6\243A\275lvX\275\321\377\335\273s\220\203\272\261\004\304=\215\370\367\273\320\360\324=\302f\350\275\361&\334=P\030\260=]\234L=$6\276\275\216\276\034=\366`\023<i\320d=\320\307\312=\0367\007=:\027\356=\'}\225\275\330\022\261=\272\216\321=\363\303\355\275\231\341\243\275F\261\270\274\246\217\332=\356\224\214\275\256b#\275j\311\332\275y\250\323\275-\273\217=\016\361\006\275\371\377\273\274\223\255\234\275m|\\=\311\274\232\2754X\273=\024\260n\274\023\275\243\274\332\022O;\310?\177\274\031\242\324\2755\232i\275\352\242\315=5R\301<(g\315\275Qf\330\275\370\370\327=p[0\275]\340\210\275\223\370\275\275\235\026f<\364\237\252=\226\377\020\275\377^\347\273v\256\307\2754\251\314\275\237\207\362\2741n_=\302\0051\275\200\2118\275\250\220\255\275\315o\017\275\212\317w=\264$\223=\335S\344=E V=\023\234\276\275\375\252\377\274\002.\025\274\013\330\261\275\001\004\214\275\235:\365\271\300\234?=\376\270\326=\213\272\272=\266NH\275\200#A=\034yo=\277\031\245\275 \364\223=|,\306=\3267\264\275\326\3116=R+?\275\244\207\331\2759\253\231;\302.o\275v\303\306\275\377?\232<\302%@=\257J3\275\227\254\304\275\247\301\222=\357\201\343\275\236+B\275C\005\213=@\233\265<\025d.=\254\360\343\275\255B;=Qfv\273\372\235\325\275\032\023\277=\212\206\200;8\201\367<\322$\263=\311\315#\2742y\005\274\355\332\326\275\322\307\202<GP\253<\227\341\253<\262\021F\275\325\345\200=B8\201=\314\366==\022\335\360=\247\273-=\256\241H<\030\311\216;7\373\202\275l\013\340<,-\333\275Gl!=\031z\216:m9\272\275\373\373}=\031\266\221\2749d\263\275\237\310\312;,/\004\275[\323\177\275|4\254<{HC\275Y\332\332=UA\350\274\032\374>=\014\036r=\211\350A:\214\021\214\275\255\234\377<\206\273\262\275X\325\203=\253\320\242\275\337\345\022\275\010\254>\275^l\257\275\213\030X=\004f\267\275zp\311=\306Jm<\201\330 \275M\232\307\275JR\334\275\261\t\336\274kD\243=\306\000\250=s}/=\022\317\201\275b\001\264\275\317\217\322\275\007T\345\275\353\365!=\355\335V\275${i=\373\337|\275\272\340\230=V\353\221=\253\254g\275\222\325m\275\306\027\201;\374\t+=\213\266\203<V\253\215=\245\264\323=\254K\013=\026bb=z\247R=\010rA\273\016\016u=a|e\2758S\306\275cj\341\275\t\r|\275\r\324W\275\034\337/\275\354\266\262\275\372\371\315\274\177\n\321\275\346o\355\275\331 \344\273\n\363B=\3349\223\273\256\375\240\2755\376\244\275(\320\376<\003\037\346\274\250$\204=\022\330o=\271\312\337=\210\257\034\275 F\204<\013\373\010=v\226s=\233\177\321\275\260\177[=\205N\250\275\027`Q\275]Wh;t~\247\273O\025K\275\264\375\250\274\265&\255\275 \001\231\275^\206\271\275^\322\326\275s\031\006\275u7S=RT\361\274\346\261\267=]\214~\274\204n\013\275\nq\213=\250R\206=\244\223\346=\211\006\267\275\211\224\326=\026\346\332=\317\337\231=\006pE\275}}\301=\236\3316\275F\240\236\275\346\003\207=\350:\354\2757\251\236\275\365s\341=\033)\017\275\265c\267=J\371\344<\344\332\265=\373\005\222=\214\256\216<4\326\017=\303\216\233;Zu\263=\267\030\265=+\201\340=J\022\342\274\203\275s\275\033\363C=\202\377\267=a\2426=s\377G=\251\322\232\275`\363\"<\372\270\300\275\304\224\334\272\351\\\370<h<\332<\366\205\223\275>7^;\324\3567=\254\341\337\274\341\371\357;_:\323\275.dN\275<\372\300<{l\213\275:\371\030\275uF\322\275\370Wz=\025\353\326\275\274r\234\275R\305y=$U?=#\217\262\275`\316M\274\033\214\354=\317\305\234=a\360\372\273+\034\206\2744t\336:\324~\203=\205\200\337\275\315M\273\274\025L\305=J\371\273\275$\225\205==\031\325\275\242\241\354\275\336\213\215=c\266E=_\245\206;\367\022\223\275\216\255\231=\001\300\317=\344\035\277\2759\374\262=\353\245\324<\006\230\020\275j\221|<\224\2365\274\204\326b=\0059\272<y\346k\274\277!\376\274\357\323G=X~\232=p[\302\2755R\333\275\t\0233<$\371\260\274\225\237X=\335D\341\275:Y\224=\033\032\260\2753p\235\275\240\254\221\275c\325\232=\266\002\327<\341\265\260=\330\326L< \3013=\017g\342\275\225\324\327\274(\241\211\275\237R\215\275\027\342\335=\361p\037\274\207\346\303\273\336\326\251\275>\031\"\274\233\222_\275\002\302\224=\000\260\221=^\312:=\0014x\274,X\263\275{\261\337\274A<.\275\t\261\247=\225\005\033\275\020\272\311=\257\212\260\274\014\3508<\203d\354\275\025\007\214\275\036\247\332=j\226\224<\266\316\250\275 \347n\275)^\204\272\037;\037;\271M\336\275/1S\275x\271\324\274\237\271\212\274\271\213\025\275n\350\230\275\'\265\233=\004\350\302;\270\370\271=\333\2603=v\241\344<\237-\006\274o\345\342=\002I\247=\262\216D=4\274\204\275~)\032<a\376\357=\t\303\023<\335l\226\274M\257\204\275\222E\243=\374J\313\274\333rQ=Gu\207=g3\016\275qZ\316\274(>\027\274\340\232\245\275j\007R=ru\257=fE\242=\231\355\207=\270\244\251\275\204\027\247\275+J\326\274\377\221\305<\245\0036\275\254\255\227\273\233\274T\274\316bW=\016\313\037\274\3234\205\275\026\024\020=4K\314=>\207\277\275\200\373\214\275\0321\236;\244\235\270;\244\334\244\275\361s\366\274v\257)\275\305\325\361<^\212\305=gKH=4\253\332<8\016\261\275$\000q=\220eS\274\351\245\240=/\211\241\2758A\307\275\007s\361\272@\010\244\274u\013\254=Pvu=\260\307\330\274\347\361\350\274\247U\322<>\212\257\275BW\332=)6\303=\345N=\275\034\330\213\275\233\321\264\273\220o\222\275\364pQ\275\277l\342<\374}>=UR\261\274\007C\325\274\256i\\=\266\230\032\275\032k\260=4\034\316=|\017\323\275|\224\307\275\240q\275;N\317!\275\374\343\256\275.x|=T\307&;R{\204=0B\341\275\216\262\213=\034\031\214\273\346\374\t\275\377(\254=\246XS\275\3461\010\275\331\206\r=\262\311\340\275\320\354\253<\370\211\356=\1777\251=\244a\345;\370\235\325=\035L8\275/\267\233<\021 \224\273\326\323h=S\301[=\203\333j=\261\216\350=)\3578=\003]v<\2017\266=\246\373\254=\341B\256\275\210\267|;\277\026\331\275\002\332\351<.{\027\275t\366\253\275\035\247x<\331t\033\275\333\340{\275\371N\305=\330\356\001=\207\210\257=\216~\345=\330\351\321\275=A\270\275p\0331\2759q\217<,w\224\275U\375\333=\\9\243=\347M\230=\246\247\312\275\340\321\342=\372\250\327=\335\331\005=\276\004\206=$\225g<\207D\032\275Wp\275;\037@+<q\246@<x\212/\275K\007\354=`\355g\275\234\033\334\275{\n~<\304Yz\2758\004\263\275\025\323\304=0\227\250=/T\342=\361\223)=G*\301=\026pd=gj~\274\313\331\300=\201\345\307\275\322\275\262\275EQ\272\275m\216\356<\3743\205=_;\341=\210\r\277\275\202)\260<\237\003\251=\334\233\210=\256\017\257=\231\300\022=\246.\217\274V\020\225==j\260\275\332\311\374;\226\303\201=\236\254v=9\030\201=N\'\217\275\272C9\274\000\230\357=\3776\204=\224\214\327=3\301\201<F\253\304\275w\311\211=+\312g<6\374\352<\316{\036=\244\347\336=\305\tM\275\347\3049\275\305 \251\275T\323*\275\342\365\274;6\217\223\274\212\255\215\275\270\275\266\275:e\277=\225\307\353=\333\335\'\274\004\206\272=\256W\273\275\315p\261=\3668w=\020\332\267=\3546\345=by\345\275v\242\226;\347\233\321\275\242\005\334=\022\014;\275=\372\271\275\020\341\243=i\253\350\274\2224\237\275\006\343\350=\035\330\321\275q\252\007=9\321?=*\320#\275@\035\223=6\311\241=R\013\315\275d\323\337\275\335\320\310\275\302\326\207=\270\251\226=g-\336\275\240\361q=C\357\333=\211\263/\275\006\221\270=\255oM;*\025\321\275\025\214P=\232Mh=\211I\342\275#?!=s|\255=B\256\332\275\364\231\270\275\301\t\201=\346\362\276=\372%?=Vga\275\3428t\275\025\314\t\275\255=\270\275y\016\346=1]\346=\2700.\275&\246T=\350\264\263\274\302x\006=h\000\242\275\311\023\350\275]\336\013=\034\216\240\275^\017\327=\271\275V\275\262\237\263\273\226\0016\275\315\375\312=:\177\250<\356\277\313\275\313\351\353\275Y\277\232\274\300\007\200=w\224\317=\017y\271\275\016|\277=\201:\272<\022\316\000\275\274\221\223\275\241\n!=\360\272\335=\036n\035\275\270\001\337\275\024\346\275\272\366M,\275n\240}=\t&\265<\002\230\177\275o\376R\274\241[\016=\313\210\315=q\371\307\275\355B\225=\003v\333=66Z=\030\253Q=x}\260\274Y\226s\275I\336\265=\316\002\235=\374\272;\275\270\340<\274\253=\315=9\244\033\2757X\266\273X\376\335\275\246v\217\275\215l\225=s|$=\267I\312=R\360\005=\007j\303\274\203\352\255\275\203\356\236=\216l\245\275\247&\317=\037rv<\244_\316\275\356gf\275\2417\302\275\3467\302<\367\246\024\273&\375\357\274\005\010\233<\347\251\243\275g\375\252<\344\006%\275,_\207\275\032nq\274`\223\351<\241\265*<1q\350\275\303_C\275\037\035a=\214\256\007\275+\354\340\275\025\331\347\275\301\335\354=\333N\233=,T|=\316\003X\275\315\r\305\275\3404\356\275]\345_=S\321\366;)A\006=\023\322\263\274m&7=<m\211\274\262G\267=\025tV=hE\263=\343[\251\275)e\235=\212/\331=j\270\226=C\261A=V\2152=\3677}=\177\207E\2759\273\354=oU[\275\324{\250\275d\322S\275\245\357\246\275\326<\343\2748\032\243=\234a\323\274\207\322\333\275\025\002\345\275\252\265\331=\333G\376<\036S\303\2752o\270\274R\325\301=\035\336\303\275\272\316+\275\036I\034\275Bz\203\274\230hR\275\336\325\t<\3608\353=\317i\235=x[\006\275u\217\335=\020\271\371<\365zW=7_H=\006f\002\275*\331\211\275\001\272\271\275\365\270\356=c\247l\275K\321\221<0\352V\275\010\276\302<PV\020<\337\263\267\275\035]5\275Lx&=d\240\364\273\202\246Z\275\266\327\030\274>\272#\275\275\355\352=\024\333\005<\3740x\275\234\275\323\275\333\366\203=\\\306a\274$d\241=9\203\300=\207\022\207\275{.\263\275\220\264\267=(>\237;\345\276R\275\010JZ\275\355\357=\275\023\327\262;b\247w=\257\252\270\275U\251\267\275\335w,\2759\234\240=\r\363\301\275Jo\003\275s\245\016\275<N0\274\331\353l=\021\255\330\275\005\235#\275\342\025j\275w\203\332\275\274\215\233\274#\3054\275g\260\332\274c\302\357\274\253A\224\275c\232H\274\220\026\202=\020\t\270\274\177\027\004\275es\271<|\237\206=\213\365\354\274Y\236\321\2754\301\341\273\373\364\341\275gU\304\275\366\362\337\275\301\371\r=eL\224\275\364\003\037=\316\373\307=\264\241C<?\372\337\275\364]Z=j3\245=\334\203\036=\270\204\271\274+\207\246\275O\244\243=9\361t=a\037\014=\311c\210=X\205\234\272\361\000\370\274\340\226\333<0\327\\<\253\351\357=\355\203\206\273\216\343\264\275Q\300\273\274\2166\323\274\030/\272\275c5\036=\304x\220=\226\005\247\275\367\332\335\275\002\217\031\274\221\t\304=HZ\237<\266M\250=\243|\010=\262\370\237=\322\314\275=Dw\271=\236.\210\275\222<\320:}h\363\274-\321h\2755\322i=\235\317\037\275\332\227\274\2758\204\216\274v  <\223n\335=vv\177=\333\252\271\274(iH=\316\341\013\274+].\274\224\342d\275\235\250d=\242\233\n\275\206\270\010\275q\225\232\275o\214\331=f\316\246=5\037\242=\361\331\216<\342BM\275\242\213\334\274\200\033\245\275\226\233\253\274\363y\316\275\\\236\374\274\251\"&=d\377\343\275\201St\275:\255\021\275\322\304\244=\315\273\251\274\236D\346\274\234\325\206=\333\372\021=f\365Q=Mt\211\275\374\023c<\352\342\177<A\355-\274^t\204<[\t\203=\322\260r\275\210\373*=\247\016{\275.-_=J\300\250=\302\330\342\275}\215\266\275\273)\034\274\360\014\217=\201c\245=\316\242\237<q\rX=\350\267P<\030L\226\275d\210!\274\005\362\035\275B0\360=\024X\223=\022Q\254\273\006\340\252=y\005\002=\002+\316\274@\024\016\275m\323j\275\213{\364\274\024v\264\273l\006s<\351}X=<-\310\275\333f\221=\005\257\261=&\273\353\275\206B\360<\036o\306=q\314\313=\343\271y;\r\217\215=\222\001\270\275U\251\274\275\010\362\014=z\206x<2\353{\275Gg!=\2358\222\275\320o\257\275*\363)\272\374n\262=\260\242\352=\177\320=<\\0\367\274 \022|\275\353,\335\275R&V=\345\247\334\275+\355\323\275\350\216\234<a\364Y=w\251\243=\317\265\036\275\217\307\355=\350p}=Hb\316\275\354\376U\275\254\335\030\275\030<\367<6uL\275)\010\263\275\271\266\017=o\262~\275\036o\267\274\006$f\273\326~\301;\272M\205\275MH\213=\\\347\224\275\3148W\275\230\251I\2756r?\275$,a;\215R!\272\354\341&=\370\232\020=\212\364\265=\013\375\261\275z7\353=\331Y\360=\242\243\207\2748\236\321\275\362\345\221=O\211\324\274\004\031\004\273)=K\273,\362\214=\010\230S\275\243\215d=\317\001\200\275\271E.\275#\004\217\2751M\037\275\201Y\337\275\367b\273\275\337\333I=o\355\204=\231`X\274\205\311\"\274:\240\256=\\e\020\275\354\322\026=\270\272\275=\326\274\275=\330n\353\274\336\003y=\340\032\326=H\005\305\274\034WR=\215\037\302=\352l\256=\2410a=\251\345\247\275\241\267\374\274\335\364\244=\251;v\274#\242l<$\255\031=y\355#\274:\371\256\275\317};\273\227\273\256\275\255M\021<<\337\225\274\3017&\275\2344\266=GZ\"<\226\275\263\275\367B\206=\323QH\274\201j\016\275\276_\231=\371\336\'\275\017\335\253;AEv\275$\355\037\274N\026$=\260\034-=\237\005\236=T\216\351=\332\223\316=F\305`;\216\261K\275\275>\207\275\324\223\352=_ZA<\352\303\370\274G\242k;\222\347\206<~\214\270\275x\243\213<\363\234\223=,\344=;\342Z|\275o\307\226\275\2623\202=t5\324\275f\324\357=\024\266j=7&^\275\211}\002\275\000^+=\021\372W\275\2520=\274\n\337\244\274K\306-=>\356x\275Ke\376\274,\255\261\275H\027\254=\200,\352\275h\346\321\275\213\375\254\275?\223I=\272\225\305\275\322i\n=\2777L\275\001\021\217\274\"!\016\275#0\227=u<K=\3511\306= \362\246\275\300\000\343=\260\322\211\275\345\000K=\223\254\260=\026\371\240=4J\330\272\3106\224=\316\246\250=+(\327\275[\324$=:$\213=e\377 =\013\\K=\247o.=!\376\251=\004i\037=\265\340\036=\243<k\275@\214\231=\351h!<\000\324R=@\215\302\275\0254\320\275\320-\310\275\277 \352\275\204\235\031=7\365\254\275\265\314\333\275Xv0\274,F\355\275\005\024U=\223g\253\273\333C\267\275pP\341\275]\343\230=\006\034\244\275\260F\324=P\330\321=\374\326*\274\006\025\242\275I\370y=\251\234\233\275\305\020\315\274\370\004\311:0\"\036=\345O\313\275\265\247]\275\377\022n=\007\237\353\274S\206\277=-\204p=\335}\235=\315R\223=\254\225\317\275\366\t\236=z\347\254<\241,\304\274\270\321\221\275\'\000\302<\202\373\030\2748\t\022=\347\202\343\275\342@\215\275\325ql\275\177Y\203;\204\324d\275\024\336\260\274\352\306H<\341\211*=\275\205\320:@\212O;\021>U=!\265\212\272\206\366p\275\357K>\275P-\234=\361\347\252\275ZJ\301\274\203\250Z\275\t\371\256\273#\360\245\275\013\265\316\273R\243\306\275\360_\274\275\352\245\225\274[Y\312<S\221\360\274\223f\307\275\267\366`=\261\027\263\275\001Q\250=><\304=\020\273\307\275\256\231\207\274W]1=P\'{\275\372V\331\275\314M\304=?\271\321\271\270m\337<\236dG=5\364\272=\260e~=\241d\310=\232f\016\275\233{\300\275c\277\353\275;f\014=\004\364\325=\261WQ=\177I\233=^\034\027=h\277D<\037\363\231\275\271\003\353=\216\211\353\275\203\027w=\2040\003\274PDU\273\257t\205=\252\320\276\275\232%=\275{r\221\275\224\2143\275\\E\010=\'\377R=q\234\237\273=Eb\275GQ\357<5\244\314=\255;A\275\330\177\334\275\2173\301\275?\020\244\275\277\n;\275:\246>=\2778\342\275\242\347l\275f\030\312\275\014l\317\271!\261\351\275\023@\215;\0360\330=V\027{\275\035\302\340\275\322\300K=\'q\261:\22302\274\314\010\214\275\177A\322=H/\241=a\034;<\234i\243\274\256\327\300\273\263\376\340=y\002\353\275\264\211\276=6\234S=\016>\354<zLm=bZ\214<i\303\373<n\252A\275M\014\264=a\241\350=\317\3064\275\362\325\266\275P\304K<\314qA\275\217\025\215\275\333\024\321\275o?d=\316\354\316=\306h\342\273;\304\252\274\347\'O\275tQ\272<n\320<\275e\272_\275\253\265\204\275,J\264=\346\311\357\275\3129\266\275x\205.<\253_\326\275\237\235a=|\302C=\374;\212=9a\376<Au\225\274Q\003\010=)\302\245\274L\3631=\340\241\262\275_v\360\275$\201\257\275D,\201=\177\206\301=\315O&=\266\224E\274i~p\274\033\267\207\275t\222C<\n\314\264\275Kh\271=\217\001\r=\006\241\232=p\346O;\\\203[=B9H=\333:\241<\304\3755\275t,=<6Y\201\274#O\345=\211\022\347\275\203\324[\275>A\337\275g\004b\275\"\223\273<\350`\314\275_\352\267\275\2422\367\274\001\314\235=\306\253L<U\346\221=DyW;\221C\303=CH\231\275\241O\343\275\200\004F\274kf\217\275\035\n\004\2756\270\335<#N\336\274\263*\206\275\263\246\336<\352\224\036=\025\347i=P6\310=\216\036\014=y\272\343\275z}\204;F\032f\275\231l\014\275\230h\332\275W\301\347=r\2646=\253\214\227=\350\016A\275\377\242U=\261\231\244\274e\266\211\275B\353\225\275c\333\264=\001\240\240\275#\352\271<o\261\310\275\377\031\352=_\217\272\275n\312\206\275\254M?=\036i\260=\212\345\336=\344Q\202\274u\344\217\275\007\n\236=\254U\200=*\372\263=\203\276\264=\3755\256\272u%B\274\256+\222\275\371\241f\274f\326\352=\247%\260=\375\257O;1\330h=w\235*<\347\340\033<\023\300\374\274\005c\276:=\036v\275i:\244\275\025\365\251=)\224t=\0139\327\275|}U=\206\301{\274+-\260\275\347\261\002\274*)e=\224\226\353\275\000\274\352\275\020\\Z\274\215\335\276\275}\262\256\275p\260)\275\247\0269=\227\324g=\334\337\'\274z\307\205=l\361\336=\252\002\024=\322\266\304\275r\206\354\274@l\232\274\010\267\342=\022\376\252=\336XV=\000\261\256;\223\374\337<\215*~=1b\024\275\273s\260\275}\347\211\274\026~J\274\037}\302=a\245?=\355\025\262=k\360\257\274\377\003T<\365\2230<\010\332\253\274\2531\221\275o5\224=[.\220\275\235\224\246\273I\301e:&\026\337=\200\324\224=\333\301\355\275\345\323\276\275)\303\273\274\020Q\001\275\250\305;=.\021A\274\010\214&=]\207\313\275Q_O=\300\367\010=\346\242\313\275\366U\254=ly\275=\362\233$=62\321<Mv\257=\336F\374\274Zp\310\275D\222\313\275J\034\202=\206\r\334=\351\222\226\275\262VQ\275\337\254\257=\350|\212;I\226v\274+\205l=\237W%\275\025\300\276\275\02194=WA\241=\316\324\315=\216\020`\274\334\030\n;\220X\305=\362\032\251\275\231|\225\275S\375\210=(\264\355\275\304\326\r<J\230\201\275\220\'\331;\025l\204=\314\357\033\275Wb\265\275\000D\213\275\277=\325=\226\024\347\275\375\301\322\275\375l\304\275?\213\272=\252\016\254\274\275\254\351\275c\236r\275\233\'\203\274\025\350\266\274\273\034\243\275\3418\341< \000\324=M\2472<\247\205\227\275x\275G<\323\217\303\275\033/\265=\205\367s=^\177\302;\315\223\263\275\266\027p\275$\216\025=2\265g=\261\364\265\275}p_\275L\346\336\273$=\261\275\002\2415=P|\274=R\236Z=\356L\340\275*4\315=G\215I\275\307\216\323=LS&\275\250\342\274\273\340\032\230=\014\305\334\275KF\212=\371\306\237=\346*\304\275\341F*\275\t\312\022\275\235\374\225=|\266!=\360X\334\274)C\247\275\332\027\312=K\026\"=L\3722=\365\230H\275<!-=o\007\276\275r\265r=\3115\330\275\376\275\275<*\251\022\275\226AZ=\035\235\345=X\262\265=\253\327\260\275\352\n\005=\257g\261\274\222y\207\275\277\3069=\233\271\304=(:\007=9E\321\275Q\303;\275t\r\206=\356\366\266\274\0346@=\201\307\003=\3573\273\275\332\352\332<\265d\213\275)Z\r<\346\222\360\274G\016\236=K\270\270\274\322VV\275\377r\235=\231\327\336\275~t\037\275\001-\320=\320he=\261\306\213\2753\177(=\210\315|=\204\326\246\275\322\204\235<\231b\313=Gx\215=\304.\350<\006\0000\274\374\223\244=k7\351\274\340\256\374\274\305\221F=\367\351\271<\314\375\271\275\330\006*\275\200q\342\275x\220\315\275A`\207\275\327,\004\275\017\210\201\275BE\324\275\240\307\243\275;i-=.\212\223=%oH\274R\363=\275Fv\277\275\323\347\335=b\223+\275\304\2618=!my\275\211|\224\273\245o8\275\222#\336\274-\037\217\275\334/\215=\367\306\263\275\254\232\274\275\373\024\'=\273\362\300\275\301\022\360\275\251Se=)\005.\275\277\205\347<\270\373I;9\361\357=|\321\270=\224\267\321<\254y,=\220VY=J\027V<\337j\242<\343\004\263<N\010\271\275z\350\266\275\332\240\010\275\372\305\301=\302x\246\275\306V\244\275\233\361{\275N}\007\275\306\333\251\275(\370\342<p0\325\274\032\335\252\275x\322\331\275\326UI==\025\"=S\353\357=\310;\255=\216\003y<\273\217\345\275_\351\336=\242\341\351\2745\336\026\274\342\034\027=\320#A<\2350\343=\326g\205=4\342K\274\306\306\326\275\315\rs\275\225\277d=*\036\277=~\350\302\275\317\207L=\321~\273\274\277Mo=o\322q\275\031-K<\202\355\224\275\333F\275\275\352qK\275\245\312\'= \274\321<d\220&=\\e\214\274\031=\234\274\013\312&\275\234\343\237;\373\t\205\275,\003\227<\335H\345:\257\223\343:`\260\227\275\360hj\271\260\347E=YtB\275]\204w=j\242d=\344)s=\005s\336=\264\374\311\275X\267Q<\347\327\302;\266i\310<OgW=^\341x\275P\032\264\275\312\233;=\242k-=?\363{\275\243\211\245\275\370\365\007\274\266s\365<kO\224=\216\3239<\010\036\342\275\275n\327\275\250\371\270\275b\316\240\275\271\264_<\373_\005\275;\263\234;\322\360\331\275\346U\377<\317\271\224=VE\017=\320\262\201=\255\222\205=\027(\037=\240\367\273\275\"j\360=la\353:S\013@\275.\246\343<\220/\332<<\004\324=\243\343\005==\0059<\'ov=\276\261\321<\221\236\214\275\300mR=\314\336\360=d&\200\275\246\327\352=\370\214:;\357\272%\275C\336%\275D\216\016\275\257\035\237\275\223Z \2747\t5=\014\317\341\275\\\262\267=+>\351=\320uL\275\374\017\230\275\021\354h\275]ji\275q\346u\274\210\222W\275\335k\001<1k\324\2734\236\230<t\2159\275\365\237\336\275\210\005\310=\362\223\227\275\251\246*\275\360?\204<O^_=9\241m=\037\251\035=\212 &\275G\245M\273\3362\357=\331\"\263\275\\\036\263\274\230=\207\275s\233\340=\222D\336\275\315\367\331=\263\001\234\274\024\t4<.\361\351<\2649\205=o\303\203\275Q\034r=\221\252\277\275\327u\222\275W2\2569\226\301r;\276<\316\275\031\343\253\271\017)\025=b!\242\275\r\212\355=\310\372\344=Y\234\320\275\357\225\205\275\266\362\350=:\314\242\273=\346\023\275Z\345\211=\353\026\352=k\303\022;A\314/\275\212\013\215=\243\020U=\270\274\004=X\324\267=0UZ=\302\031\350=Vx1;MWC\273\316\213\302=\265\207\203=\rr3\275\327/\351=z\343\334=\250\340)\275\035\323\234=\275&]\275\023h\202=\243\231\344=\342\025*\275\265\216\375\274r\'\245<\267h\207\275ES1\274Zey=\212(\332=\335nH=\316\260\222=:\335{=\315\222\250\274\372\252\024\27570\355<Z~\315\275\270\351\244=pw\204< \315\270<\370\333\210=\023\213b\273\307\2216=~\312\256\274\233K\315=2\315\223\275\256\313\031=V\272\234=\tU\331\274\341\375\206\275\273\225\354\275Q\0073=\277\265\207\274\244\246\323\275\200\032\330\275Np\344\275\364\266\267=n8\355\275\331\236\325\274\207T\306\274j\327\301=\027o=\275o*\345<Z\245\262\275\331x\232\275\\j\331=\331`\341\275\027\327\336\275\210\000\016\275~,\345\275TW\326=\361\254\227\275\2323\300=\247\304S=\004\355\n\272A\3171\274\271\017d=\344\031\345=\310e\240\275\211\321\360\274\372M\353=2\000\021=\263\326\372\274\374T\273=\305\277.\275,\334\207=YL\354\275\342\372\021=\371\004\355\275VAW\2759\363\231=\240@\345\275\277A\310<\3253\214<Q\224V\275L\311G\275\333o\207\275\251\205\035\275w$\242=\237]\311\275\335\272l=\233\002\356<zm\324\275k!\006<-\312\255\275B+\333\275\373\230\352<\026\'\324=U\000\033\275\306k\246={h-:2\036\220\275\203x\030\275\010cm\274\262 \204;w\200\307=\006<1=\302yO\275\213*P=\003/\277=\232b\355=\026g\023\274\356e<\275\320\013Y<\351[\227\275}\304O\275w~\313=\201\276\035=\357\3353=\2739\237\275P\323S;\265\265\352\275\204\217\"=\0022\246=\371c\207\274\335\323\251\275\235[\273\274\t=\314\274\201\315\343;c.r\274\216\300\306\275\372\263\344=\354\312\331\275\367>\275=wCD\275a\237\032\274\347\327\034\274\337\005}\274<\327\226\275\241\2442=y\n\352\274\237\322/\274\377\004\213\275\315\377_\275\314\374A\274\343\276\356\275\273\325g<\350j\262\275\010\363\313\275<\216V=\353\302\030\275\232\321\231=\031\002n\275\302-W=\261\356h\275\330\256o\275\254\251\272\275\270\215\311<?\313\374<\313|\001\274L\250\273;\215f\201=\267\227[<\032/\004=\314K\354\275#G\333=\273\271\220\2759\255,<0\027\257\274U\n\322<\201\323\301\275\316T\217\275\351\227\267=*\357\265=\201c\367;Z-8\275|\217\373<\364\013\303=\243K5=\3200\243=\362\255+\2751\341\217=\273b\247<2\354e=\034\314\352\275A\212\313\275\261\350\204\275\324p\017\275\3633<=\301\221v=\323L|\275\322\207\323\274\"\367A\275T\204\302\274\204\177d\275\005\343\331\273\022$\256\274\252\255\210\274x\002|<U\334\354<}\255\317\275\001KY=\336\335\221=\243\026\254\275{\241\001=\246\014\034:\266X\277\274\205tF\273/\376\250=\240L`\275#dR=\350u\023<\364\257\371\274\246\3113\274\304h}=\244\256\275\275\310\254\344=u\357\234\275\027w\272=H\027;<\216\230\343\274\216U\217\275\307+\335=\245i\253\275\r\204T<\2005B=\014x\277=\231Z\346\274i\031q=\217\340\236\274\261\376\240=\020\223\264<\264\232$\275\304\322\366\273\320\222\203\274\272`\246\275?\342$\275\307U\355=I\306\245\275j\244|\275]\331O\275/\346\275\275\270\302\217;3\177\322=\312\275\211\275\341P\215=\253\210\033\2753\320\236=r\350!=\354}\254<4\005\217=\230Z\335=\332\355\217\274\361\315\212\274\t\000\205=\356\0336\275\261\354\000=\255\212\220\274H\316\342\275\3357i=\177\362\203\274-\242{=2\225\332=\353\273s=;,\323\275wk\255\275\037\026\222\275?S\355=\361W\233\275\220\005\340=\014\267\277<\253w\207\275\273\203!=*\274\221\273#C\307=8\373g\275\303\264\261\275.\274\240\274\rl\250\275M\215\237\275i\350D\275mY\235=\016\243\221\275\002\014\003=-\303\362<J5\346=\\N\020\274s\262\177\275n\307k=\305g\331<w\334\332=\305\363J\275\021\334P=K|\245=1\006\345=\361g>=\000B\303\274<\322\216\275\313\342_=\224\264\r=g\312\353\275(\033\231=\215j4=Z0\n\275\245}\321=\"v\347=^o8\275\232\001\000\275\250@\312\274\036\023\313\275\326\324c\275;\301\230=\007\220U=\211\265\266\275\267\227\252\275\336\314\216=\270xa=\213=+\275-\021\261=QSe\275q\010\035=\017\253\036\273Z[\214\275O:\260=P\305\302=\255\016\263\274\257\"I=\222\217\237=\221\256\233\275D\373\332\275\250\305\246\275\3028\241=\231\203\255=\032\337\261\275\225\266\265\274\274\246\200\275i\335\234\275*[<=\361\335\303\274{2u\275\234\244\222=\260\215\220<+\2427\273!8\270<.VR=\342\243\311=\331\017\231=f|\204=\1777\022\274\360{\246\275x\3446=\261{\372\274\306\332\213=_\330\212=\n\344\037=\256\225-\275w\000\251=dI\241=\244d\306=\023d4=\261G\210\275\350}\261\275\210\264==b|\252\273\354R\231\275\334\002\307\275\206\227\007\275$\225]=\004\203\316\275\205\302\314=(I\204=v\322\014;\265U\304\275o\177u<Xq\354=\217\225\204=\211\020\347\275j\210\205\273\'\250\243\272]\034\346\275\337\222\212=+,3\275y\026A=\333\351\355\273}m|\275\021\371\363\273\277\215\251<\371I\344\2750d\206\275\222\034\275:\216\321\210\275\350\343\237\274\303\364\336\2759x\004=O\342\331=\n\262\360\275\341\304\276\275AU\337=\342W\335<d\027\204=\303\232\355\274\277/Z\275[\250\262\275/\036\333\271t\302x<\355\261w\275\022b\214\275\302\002\352=T.\022\275\002\221\200\274\303\331\334<u\261\014=\305\343\276<\370\363\201<~\323\245\275\350\220\323\275\362\322\224\274\"\365\330<\373\223\345\2759H\312\275\255\016\335=g\226\216\275\004\t\302\273\006\222\305;\221O\317=TU\227=!\273K\274wm\205=\327\207e\274\315\317\277=\215\247\260=*\237\271\275\346^d<\353\201\260=o\264P\275\">\037\275\332\375*=n4\214\275p\036\342\275\244#\241\275\004H\224\275\020\273\021={\344\201\275\326d\267\275\374\242\244\275Q\341\272\275\201\177\325\275\200\246\310\275\017mK<u\037\263\2744\354r\275w\221\266\275\324\2712=\203\367\354=\213\023\273<Z\224\361\274\203\375\203<\356\024\030=\031\345K=x\200\241<\263\262\313<d\313\021\275\361\326\370;Y\177\252\274\221bv\274ng\331=\321\326\222\275\031\022\267\275\264\342\t<v\265l\274\263B~\274\275\025L=g\021\214\275\037Cx\275Oct\2754O\253\2755\362}\274\200\243\r\274\326\331\254=\004jB=$\017\262=\246\227n\275\325\007e\274\263\216\275\274\003\254\003=\276Z)=\251>\355=\013\230\260=\274\016\210\275\241M\251\274\344\335.=\233\275\275=\266\342\254\275\347?\250=Q\362t<\034)o=\032\357\030\275{R\276\275\253\300\273\275t\024\310\275\0306\031=\341z>\275$*\261=\352\263\222\275\2133\241\274\307\264a\274m\232[\275\254a\025\275\351\003\347\275\366\315\231\274\232e\366<\341\241\241\274T\220.\275\3742\337\275\227\246\277</\303\204=\233\273\322=\261\363\341\274&\027\206=F\360\313\274\367\352\261=Z\242w=\022\331\350\275P\031\313\275\275W ;k\326\362\274\237\210~\275\323\212\241\275\003\220\027\275\252dO=\344\312\247=\356>\006=\323E\265=\242\314\2459X\021\214\275\321:\273\275\276\022\227\275\334di=etJ=-\334:=\256y\037\275D\243\257\273r\216 \275:\334[\275X\215\033<\322\240!\275d\346i=!\3377=4\014\361\275\001\r\222;0\303\337\275I\026\031\274V\375\216\275\342\252\205\275It\200\274\211\334\314=#\022\354\274\033y\234;\027\361\030\274\"m\000\2750\227\215\275\273\236\273=\327&\016\275\301\211\325=\332p\236=\0059\314\275\2635\231<\224\272\244=?\352\256=\361\350\0267wo\332=\311\352\275\275M\251h\275\344YQ\275\355\177\222=\245\365\020<2\307\224\274\016\225\243\275\334\020\327\273\373\212\211\275\275\010D=E\340\303\275\330\206\353\273\237\260/\275\003\264z\275\231\027\215\274|\352\333=\306\203j\275\021g\315=\234\014^=\342\373\246\275\276A\243=\325\260]<\337\354\225\275*\351\251=|\234\250=~\364=\274c8\221\275\231\352\377\274\036\353\267\275\r\\\025<\323\345\247\275\027t\220=\033M\325\273\005R\215\2755\371g\275?5\303=O\262\253\2752Q\222\275\227\252\321=y\004Z=\005{G=\017W\023\274\005NV<\251\005\327\275\352\272\007\275\362\216\356=tm\344\275\234\366\200=d\365\331\275g\361K<\211\t\335\275lQ\203<p}Z=\022-\037=\277\313,\275\307y4=\357\373\267\274l\336\351\272\374\372\346=G\356\224\275[\354\237\275Z\020\276<;\242\241\275\376\023D\275Zl\307\275\001\264\274=\3240\233\275-O\347=N\261\350=\237L\344\275\260^\210=\022[Y\275=\243[=\013\025k\275\304\332\231=\241\356\273=\375\207\262=u\201\333\275\352\300\211=>\261\237=\013{\277\275\":\253\274u\255t\2757\314\332\275\200\224\312\274\274\016\276=\313\326\024=F\"?=\016\371\302=Z\354\324\275<m\211\274j\243\020=]_\211<\205\036\346\275\260B\026\275rd\246=>Z\361\274\303\202`\275\261\n\366<>+\250=(k\236\275\315\303\235=\231D\206=\375k\326=\344\367|\273\033G\252\275\351\354)\271;\244\345\275\362P\307\275\2638\354\274\245P\215<\312!\253<\207\\\"\273\237\353\232\274+\200\006=\241s\320\275\037!\026<\362\330\217\275\256\254\214\275\220u\325\275\364+\340=\320m\034\275\310\240\250=l\233\322=\005\277L=a\316\232=\313\006\247=\223\252\026\274\244\002\243\274\2126\343=s5f\275\006\216\357\275,,\264=\241b\004\273\302\203\230\274#\273\331=[\264\205=\2740\277\275\221\226\276=\300}\242<\371\237F\275vH\315;s\004x\275\n\031\214\275#\243\355\273R\241\021\274U\306\226\275^CM=f\274\253=\322\222\277;\343\232\217\275\3054\322\275^V\025=n\246\245=C\360\311=\2522v\275\204R\205<\303\250\371\274D#\017\275\333Kr<D\004\360=\361Z\264;\350\276\337\275\306*\027\275v\207\226=S\033.=/\242\356\273m\364e\275,\212\261=\226-`=\r\313\256\275\257r\337=`)\236=\223U5\275n?\251\275\310\217\234=\375N\227\274X\365\206=\200q\232=\350n4=\375o~=\300\225;\275R\343\307=\377\333\273\275\257\367\344=\317\221\033\275\275f\267=H\234k=hgV\274\317\235w\274\224e\303\275Vk\263\275\210\332\265=\241\313e\275B\024D\275Y\276W\275\203\223\323=<\006\200=\321\010\327\273\331?\371<\353\234\256=\326O\231=\024;\232\272\213\344H=a\346E\275\377L\326=t \350=f\311\274<\006+\016\274u*\343\274\321\030\274\2758[L=\340\003\211\274\350\314\306\275\2106\231\275\325|~=D\220\333=\210\353\354\274\227\023\262<j\214\325=\233)\275\275\337\206\032\275\317(\264=`\242\357=io\231\275\350\023m\275\r\007\331=\305y\240=\213\207\210\275\211\023\022=Luh\275\200\266\303<B\220\321\275A5\230\275\010\357\330\275\231xb\275p,\202<\026\255M\275}\272\355\275\357\274E\275\222\367\317\275\261\353\177\275\242\035?=\351r\316=\020\273\300=\215xf<~Gr\275\t\277\313\275\re\205\275c\215\025\274\024\210\235\2751\000\225;XJ\213\275\017\247\313\275\243jP\275\027\200-=\250\031z=\016\2375=Z\276\204=\270_\"\275\340D\245\275\323M5\275\310H\374<\354\352\201=\310]\001\275\334WJ\275\245\035\210=\254Ap=0\324\315<Y\271\301=\033\355\204\275\0174\237=D\215\354=v\343t=\351\262\330=wQ\250=r@\335=\277\257B\275\307\005\231=G\343q<\317\255\235\275\242T3<\275\355x\275W\236v=&\304{\275+\257\246=bp\331\275\254_@<\356\016 =!o\315\275~\304}=g\216\265\275:\201Z\275\016\022\315\274@\377\252\275\353n\330<\264\325\326\275\275\273\026\275XU\254=\010\207\262\275[\3256\273zR\355\275\374n\r\275w\314\260\275\240hx=\335\254\256=\301\216\223\275(\231\316\275P\316\252=A\300\272\275rY\234=\322\r\364\274\216O\312=`~5\275h\235\263\275\004i(=U\202\310\275\363\223{=\304\"\272=\270d*\275&\343(=tv\332=\\\277\327=\376z\317=U%\032=2\372\377<>R\264=N8\213<\321\327\237\2754=\332=Z\331\222\275\274]\306=\203a\336\275{o\227\2750\277\253\275\221\034\324\275\200:s=\324~\371<ls\346\275\332%q=\201\350\322=\\\362\217\275\212\220\266=\004\260\306=\204\326\001=\361\365\024=\027\n0\273Qw\246\275\234F\241\275\350S\301;\362{\342\2752\377\206\275F\262\347\275\364\035\351\275\267-\276=\353gR<\326D\326\274\t\205\223<l\024<=T\206\221=\353\314\254=V\004\343=\313\033\324=f\322\311=\034C\343\275\331i\260=8\213\001\275Lx\300\275j\305\221\275\024\007\344<xQU=\367T?;\233a\211;\242>\023\275\237\372\214\275}\363G=u\224\001<\310\035\350\274\216\t,\275\036)\312\275\t\332\252=\016b\275\275.G\034\275\222\016\274\275\274\023|\275\345\336\240=B`\253\275\347\346\265\272\271\022/\275A\302\355\274)\000\355=\023i\256\275\007\337\200\275\t\247\304;\324\010\337=^\007\244\275\272.\313\274dQ\326\275Ca\004=\353\'7=R9&\274q\232[=[\003\037\274\0266\323\274r\211%<W\3062\275|\250&=\001\210\352\273\257\220\234\275\\\216\345\273\371\376h\275G\320B\274\014\034\035=`z\251\274=\034\307=\177\343\\\274^\016\274\275e\r\016\2749\363\243:\234\240\337\272L\337m=\361\225\330\275(\360>\274\001\321\013\274\370\355\301\275\022 \324\275\006B\213=g5\210\275\271\311N\275\211\214\322=\215\204\303\274\356\017\313=\263\240\007=\2073\\\275<\316\\=\313K\034\275\321z\261<\250L\244<\3565\274\275l\350f\274\275,\216\275\366Y\344\273\201\204Y<c1\227=`|\321\275i\264\335=\331\004J<\']\201<,&)=#\032\234=m\214\255<\r\020\330\274HZ\n;\252\177\313=\372z\224=\ro\314<\235G\266\274\304\016\317\275\374m\276\274\207.?\274/W\274=\202\335\344\275\264\306\303<\234\032\253<E\267\264\274s^\306=\t\t\277=\264\203\225<$\347\237\275\316\002\341\2759\227V=G\233\244<\244\266\226\275\321_\257=-\327\346\275\313z\262\275\367\rX=\215*\256=\036\337\322=*\245\306\275 A\342:\032\265\276=d\343\271=\216\010\250\2752\010\212= K\313\275\372@}<v%G=@O\270=6\376\322\275\374\340Q<$\023D=[\205=\275A:\214=\245\2602\274\\\356\322\275T\331==\307!\302<t*\301=t#]=\360\343\316\275^j\307\275\326\260\341\275\223F;\275H\364\307\274\364<\205\274\264\353\006<\"\342:=>8\210<\274$\036=x\007\233=\207\302{\275\010\3231\275_\256K\275\310k\276=\020\242t\275\232G|=\267\277\337\275\371\032\264\275\006\363\"=P\232\213\275\006r\267=F\375\010=J\305\007\275\325\343\226\274\373D\226\274\031\030\264\275[B\233\274\351s\325\274\220Nf=\365\243\246=\315\\\216=p\332N=\257\270*=w(\350\275\224\0342\275\266\314A=3B\312\275\324~\244\275]\245\"=\\\244\265\275\354%\354=MN\337=eg\303;u\332\355\275<l\235\275\t\035\325=\370\216\004\275\013\305\346=\365\031\326\275\350\211\312=\274I\270\275|\206\001\275\221\034\317=\216\232\210\275\024\365\002;\220.\357\275\261\004l=\211\231\230=w\367\274=\030\252\034=\004\027\253\274\264\310\241\275L\245\230\275w\036\177\275\276\205\023=D\010e\274\355\305[\275\030\223A=X\241\026=W\254\300<\250p\351\274Y^\317\275\246m\334\275\003\362S\275\377\235\347\275\r\007\276=1\216k=\343#\341\274h$\312\275\314\352\222=\212\260\250<\267\217\260\275\261*|=\031#\262<&\035\021\275H\361\206\275h\263H\275\032\237\330=\355\023\236\275\304\306*\275]^L=\005\006\307=\263\225\330=\351\271m<\216\323\245\275\227A\325=\303\215\355=\246\344\036<\2548\017\274\035?\316\275\332,\356=\'Y\225\274\325\306\215=~\306\320=\270\370u\275\214\016\274\275u\201>=\302QV9o[8\274\033\201\201\275\351\206-=4o\034;br\350\275\256!\223<\227\300\331\274\020\242E=\030\235\376\274\216\332\334<6\205\'\273c\254\324=\00637=\230~\330\2749\316\200=\003\017\235=\020\245\246\272\264Z\356\2752x\226\275\337)\300=w\200!=\343\235r=\025\273`\271LA_\275\233N\263\275\007bR\275\332L\003\273\203wu\275\014F\322\275w\002\321=8`4\274\202\204\223\275J\237D\275\253\312\222=\037\300t\275o\274\222=(4V<R+h<\354\345\325=\252\375\232=\202\334\212\275\005\254\014\275\001\004\275=\340\373\302\275\346\244\360\275\235\325\031\275\3739\250; %_=C\210\307\275\276W\355<\260\260&=\265\207\225=\025\247h\275\210\224\273\275\205\231a=@\210\2158e>\016=\224\354\254=7\325\235=\266}\373<\350\342\332=k\241d\275\264\343\232\273m\007\232<\320B\347=\335:\225=\340+d=\017\344\331\275\036!\377;}H\360=\336\255\"<\r\'\273<\371\321m\275\212`\203=(\304\242<x!\310=\213|\227\275\006\373D=\360\035\261\275\"\010\206\275\r\006\312\275\313\210\235\275\343\336j\275\n\000\356=V\226\031<\225\031\334=\327\266\257=5;\276\274\0145\252\275:\357N=b\313\335=\351\256\000=\356b\265\275\335\353:\275\276\243\255<\226C\324=:\2217\275_[~=\027]\227=\016\260\013<)y\327=\331DY<\247\354s=K\251\301\2753U\256\275\252\224\201\275 \350\341=\346\346\006\272 \204\026=?\322i=\342<\322\275\263\243\226\275%\017I;>o.;\2418\320=P1\304=\002\"p=\'\354A=a\204\337\274vv\342\275J\377\257=\254$*=\371\272\200=|\352\330\274.J\032\275u\312\303=Q\2475;[\303D=\361\237\023\275OV\227=7\364\003\2753_\223=@!\214:~\307\022\2756\203V=\350I\266<1`\t\275c\236j<i\321\311=\205\201\205\273_\346\271\275\342Y\267=\305\002\231\275d\254\256\275O\315k=1\003\217\274f\031\226=\357T\024=\237\245\207\275\227\347\226\275\237\013\203<\255~:\275Hv\352<\343\301s\275\311?)=\263\344\202\273\"\201J\275\004\216\271=\363c\311\274\252\353\330=Yb\313=\251\205\321=\207\364z=\032\266-<G\342s\2759\021\346=\025\302\226<w\265\242\275\306e\200\274\321\017\226<\251k\225=\204\232\346<\0211\272=\215\336\261=\023[@=b7\337\274\003\020\241\2752\002\235\275\\\333\035<q\260\277\275\364\326\215\275\t\322\314=d\226\027\274\364\007\200=\260\311\364<\347\272\n\275\331\021\242=\336\026\321=\'::\275j\262\251\275\204;\322<\t\030\344=\345\233\264=\026\031=\274\322\247T=\027\267\204\274\346\006_=\202\244\226\275O\272\233=\213\264\345\275\240\350U\275\204\337Y<\006\317\215\274\265J/\275`\312\216=\223L\341\275\321\034F\274\364\340\221\275!\261\237\275o|V<\365\3574\275\357\313g\275\373\030y=\340\260\232\275\322\274\331\275~\356\222=G2\261\274\265\360\267\275<n\223\275o\240|\275\273<q=\306D\216=\366\342Z\274}0\344\275h\340K\275\335^\256\275\304\203\320=\266\327\347\275\224\241\224\275\357\021\317\275\0010{=\001\303\205\275\227\020\271\275\362\'\203=6\217\323\275-\235\347=rie<\231\031\332\273\272\351\360\275y*\001\274A\234\314<N]\263=f\241\177\275~\346\001\275J)\302:4\\\035\2751)\274<\022T\203\273\211f\262=\216B\'=K\274|=\000\300\206={U\357<\353f\204\275\231=\314\275x\252\303=\327p\357\275Ui\000<\024\213\017=\200\200v\275u\034\251\275\021\327\021\275\355\205<\275\351\365\334\275t\033e\274\254\024\025\275\007\031!\275\327\311\343<\001O\321\275\\\020\204\274\234B\301;\025\255\210\275s&q\275\315w\"\275\333\177\207=Xj\311\275i\254\230\275\007Z\2459m\031\005\275\033\221)<\315\215\355\275\277\300w=\275\223\233\275\362\365\\\275\376\356\212\275\306\207i\275E[\333=\256Y\321=$\246\214=\004\332Y=jj\211=\301\233\277<\353\306\332\275\356\205\007\274\230\320\304=b&z\275*\267;\275\373u\310=\323\305\221=\237\321\245=\0201\327\275^\340-=\024\362 =\271\273\3669\277\305\314\275\363p\317\274\037\3116\275#\001(=\300[\260\275\242\365s=\027W\313\274%\"P=k8\222=\377\216I\275\306\367\227\275\341\364\327\275\255\306\032\275\266\254\244;Zh\230=^\356\014=M(\233=e\217\306:K\357\200\275\034\265N=xM\236;\333\274r\275N1\240=\r~\255\275<\364\002\274\362l/\274\226\362\331\274W\331\260=\316kx<R\324\351\275g\346\224\275\355\031\001\273\302\023\252\274\005(\210=/\020\346=r;\316\274\355\200)=\376\017=\275Js\215=\010,\247\275\356\271\177=\361J\320\275\376\260\356=\304\013\306=\343\t\206=.\214~=\212S\213<\237#b=\363m\204\275\304\270U\275\035\272\206=wd\263=-e\240=\2157\347=\363q\360=\226\025\222\273\357\262\315\275\270]z\275\255\262b<\030l\000=\204\236C\274\026\246\017\273\321\366\332\275|\370c=\321d\317\275\346H\222=\360\227\226\274\357c\335=JPS\275\262I\215<f\237J\275\354\260\326\274\206\002\261\275\335!}\275\274o\363\273\351\274\242=\':\216\275\351\255\315\273\'\262w=L1\361<7\351\274\272\272\035\035=W\276\265<\236/\274=\237\301\307=\336\315F\273D\242\320= \376\206\275K\342\200\274\227s\303\2741\316\240=\231\240\375\274[\213t\275\370}\337=\033\302\245\275\212G\021\274u\277)\274x\217c\274\300D}=\177\375\353=\262/o\275I\237\250\275\006w\033=\324\002\344<[\036 \275\216\r\222\274\242\230\322=\3223\257\2756\251:=\366\301\273=\036\331a=m\205M=8\032\250=\226\313\205\275\234\364\336\2756\344\010=\316i\347=\216M\321\275\370\314?\275\252\343\301\275w;3=\241h\263\273\r\275\256=\216\344\221=\363\037\321<\340Z\241<\030\010\257<\215\257\200=\374\027\236=\246\021X=U\247\366<\030O\205=\201T\225\274\224j\201\275<K\277=\266|P<o\312k=\240<\234\273\006U\356<\246v\226=\215b\336\275RG\220=\006*m<\037\364E=\230_\t\2741,\263;\307\364\220\274\211\005\263=kq\322=\370\304\200=\272j_;\031\343v\2756\230\205\275\225\377\302\275\376\'_=\3164=\275\334\201\326=\022\327\331<\361]\345\275z\236/\273\000\250Z\274\312\203\213=\3757\215\275\362+\226\275\304\235\316=\227\235\305\275\333\337\364\274N\316\322\275E\323\341=\231@\013\275\207\223\010\275\203\251\312\275\t\371O=!\r\312=\311\351\353=\303\350\240\275\374\232\232\275\2215\261\275+\240>=\306N\225\275\356\350\210\275\372%\267=\226S\350<p\2671=\"o\245\274\317\207\277=\001)\330=CE]\275\313Dd=\215|\035\273\2461\017;\260^\341=\205\333$=b\027\214\275j\\\354\275B^L\275\346\331\332\275\344J\214=F\375\353\275\3013:=T\217\335<\224Fk\275\256\335\242\275\304\225\356\275\026\016G\275\242 \315\275Rn\225=\316\212\203\273\022Vl<\322\'\237=\360:\370\274~\365\253\275\322\230h=a{\260=\221v\203=\270\221\311<\371\213-=z)S=\347\245/;\247\230\244\275!-\336\275K\242\331\275\014\013\177=\325l\222\275\316T\005=A\202\t<\267\227\350\275\220\267\236=\323\334\301\274\010\215\323=\n\212\357=D\"\247\272Z\003\235<\204\320\217=v\'p=\31608;\241\263\017<F\271\030=\263\215k<\276y>=X\314(=\265\336*\275h\342U=\247\237\201\275\366\375/=J\341\326\275\222@\233\275V\262\206=\000\225s=\220R\233=J1P=\266\n\255=\023\265l\275\215\016\351;>\3668=\341\3410\275c\321\024=\222\325\305<\026\177\252=\373\204\343=\372.+=.\320\206=\003p\330=\254z\257\275\325\274\336<\354i>\275\233\366\340\275\325q\"\273\3710J\275\n\220\214\275\206\363\2169\231\211\230\275\207\332\354\274\364\232*\274\3277\314\274v\271\320=\344eR\275-8\211\275GTL\274\216G\342=\ne\236\275\326Uw<\223\312\277\275cR\332\275\210\215\016=X&\375\274wK\354=\253\204\317\275\246\300\274\275\336\215;\274U\016\227=\237A\237=\347\360Y\275zy\177=9\2308=\246\241\252\275z\343\226=\'B\276=\013\003\035=5\262\353<\306\200\330=T\225\322=B\006F=]3\262;\353*\354=&\327\226=\266@\231\274\230\362M\275DR\270\274V\360\300\275\025a\327\274\310\267\305\273\t\024\202=?T\227\275\332FV\275\374m\321=\362\311\270;\373\301K\275`+\017=\361\033\024=\033\216\324=\271[\256\275\201M\244\275\331-\247<_\345\006=\245\3171=\2617\032=\345b\177\275\032@\306=\004\261\210\275z#\275=\317\010\336=\200\337\277;q\230\313\275\230\366%=5\224S\275@\372\233=\326\n\033<g\335\002\275W\244\213\274Kb\257\275\273\024y\275&\301\307=\257\234\332\274{\201F\275\213\007\346\275t\366t\275\216\216\253<xs\250\275\014D\256\273\r\207\247\274\242\241\034<j\327\313\275\3042\222\275t\367\340=\371\035\307;\0306\352=F\275\207\274\027~s=\177\221\354=`\250\223\275*\246\300=\314R2=f0\227\275\rU\302=\253}\371\274\177\350(=fF\030\275\244\222\232\274\350)E\275\247O\017=\r\2732\274,7\360\275\352\365\r=g\030c\275g\205\260\273\222c\206\275\326/\272=_\265\206;\367U\002=\371\214\332=\017\200\270=\276\rF\274T\341\373:\022\377\346\275\003\377\275\275o\222\222=\r\245\224\274\364\320^\274\nE\310;\364\237m=AX+=\330N\243=\215\274C<?r\224=\231.t\274<\246~\274\2526\3469\333`\276\274^\306\250;\000\351\245<\207\214c=\240L\244=\001Y\355\274\216\024\346=fr:=\340\030\307\275\333o\347=px\352\275\014y\320=iV*=\'\330Q\275\273\321\242=Q\304\264=(OU\275D\022\244\274\357\324\267<\331\036C=\344\212\250=\013\270\305=\333\3253<\274\323/;w\n\242\275\355\222\350\275s\353\231=\375S\310\275\362\207\215\275\200<\013;\2676(\275\014\005\263=\350\317N\273\232H\246<\345F\352\275Y=~<\"\000\177\274G\214\233\274Q\206M<\231\224]\275\"B\302:\004\260k\275\326\332B=^\342|=\300;\351=\210$\036=\252!\344=k\204\333\275\377\007+\275T\334q=\256\254*<U\254\262\274\210\2129\275\027\014\210;\274 \270\273&j\232=\016\227m\275\033)T<\212kr\275m\243\313\275\177\207\026=i\212\223\272\354\336y\275t\370\277\275\342\342\272=%\242\357=\334\346\261\275\257\177\364\274\210\314\353\275\247\322,<\247\250\254\273\332\301\240\274\224)\177=(\225\244\275\311&K=J\361?\2755\245i\275\265-\347\275\324j\341={f$=\276\010\327\275\253z\355:4\007 \274\204\273h\275\366\364\242=\277\224\250\275W\273,<\350\215\207=+%\010=*4\310=\005\211\221\275\021{\n\275\317\346P\273\340\326\344=\203\035o\275\340\010\311\275L\022u=\262\246C=\356W\217\275z\014\013<\313[r=\024i\326\275\333\313\243=F\212\333=\334\024A\275\242>\366\274\023\370i=\311A\317=\230\366\311\275\306\001\343=\261V\255=(\320\346=\3359\002=o\352\272\275\234\370\355\275\003;b\275\013+%=U\201\037\275-\376\274\270ax\263\274\301\221\020=\275\024\n=\242\211F\275\363\263-\274x\303\343\274\207\3609\273\202.\244\2755\312\032\275[\342\370<Ih0<^8\260:s\034\250=\233\207\247\275nU\321\274_\342\306=2$\005=Y\2115;\214\t\256\275\274K\246\275F\346%\275\274\272{\274\337h.=\334*|\275j\273\201\275\301\353\371\274\022*:=\300\235\316\275\364\336\331\274\177+\224=.\024\343\275\374\216(;\210\022+\275\254\207\315\275^\266n=\263@\206\275\263t\305=%S\323=\177\230\243\275\023\244\224\275\225\324\317\275\320\354y=v@R=\033\223\234=\254\267\311=#\207\334\275\232>\234=\372\000\354=\307\032N=\355V\227\275\320\360~\275\206}\310\275\327\177\316\275:\203\255\275b\276y<\305\311@\2758\255\225\2753\364\303=\301\033\353<\013\355\203\275\365\271\005\275\265S\264=\341\336\355\275R\204\360\275\336Bo\275\307\313\334=:\007\246=\302\241T\275\002S*\275\250\001\013<\247\244\211\273\032\355\311\273\221\031\222\275/8_=\303K\277\275\216w\360\272q<\333\275\200\224\227\274\346\321\351\275\2663\272=Tu\305\275~\216\341=\252\252u\275\206\375_\275\210m\307<\004f\345\273\007ec=\346\324\356\275G\353C\275E\210\250\275\202O\346\272p\223\010\275\321+\310\275\363c\346\271(\353\350\275\002\203\322=\213\006j\275\022\216\260\274\032\230\233\275\000\252\247=\302bx:/]\313\274O\013\307=My\275\274\256\\\342=\231\320\350<XJ\352\274\353\236\221=R7\266<\017\002\272\275\364\303h\275\007{-\275m_\006=\321e\241<(\360\232\274\364\017H\275N\311\300=r\273\244\274\217&\003\274(\315\227=c\247\327\275\3342\230=)\276\335=a\007a=\233\245\273\275z\221\263<\264\371?=\320\027\016=\0071\312\275\024\336\000=\200\277\226=\361\"\250;S\224\356=\357\366J=4Y\234\273\345\266\355=\240\227\350\275\217j\036=\360\003 \275\213\213\311=9Mo\275\264\277\224\275\370^\263\275\257\250_=\277\362\315=\242\n\353\275\275\316Y\273\204^\352\274\010\207r=$\232\006\275\277\356\222\275\214\205\333=\r\003.\275\262\355\314=\253\362\357\275`\'8\275B!\233\275\373\023L\274\315\325\204\274\375\2508=(\020\312=\3218\252=z\336\242=\225#\006\272\014\rw<\360\0232\275\362\3613\274\323H\345\274\203\241\221<IpM=\250g8\275R\343A<\035F\206=h\371\211=\304\003\254=\n\314o<|1\337\275\007\253\030\275?\344\305\275\214\353\233\275\010%\245=Z\313\314=\324\333\267=\346\362\314\274\334\217\323=)+\224\275-X/\274\222\'l=\036\025\203<=2\274\275zi\223=\225J\315\275\257a\350\275\2411\230\275\2561\350=yAN\274\376\004\341\274S\0273\275\263\205-\275T\210\277\274W\254\312\275\354\215\232<\303,\350\275G\213\\=1\307\270;\277\335\225<\2044\224=\nu\360<^\252\214<{\375\256\275=S\013=\351*\221=@g\314=yw\226\275\307\311\036=\020i\037\275\376\276m\271\366\343N=\274\034\302;\026\272\267\275\337\237\210=\220\206\242\275r\230!\275G\033\005\275J).\275\200v\324=\220E\305=\225\013\235\275r}!=\314\237\316=`.\247=\037\350\201=\270u\333=zk\220\275\262\'];-v\244=\265\362\022\274\020\252\\\275\276\333+\275\177\211\317=\341$D\275\351Sn\275$3\254;\3662\305\275L\374Y=c\241\311=D\333\305\275\324\253 \275q\031\032\275\353\210\250=\207\017&=\266\235\352=O\323\245=\360\260\346<e\236\242\275\312\377\356\275\371\032!=!8\341\275\370)\254\275^\247\275=\353/\301=f>!<\030\317`<\347\263$=\211-#\273 \\\222={\006\371\274\370\377\351\275\345\317\272\275?<\333\275\362\022\251\274w\377\315=\315\266`\274 \314\n=\321\031\357\275\363\345\'\27471k=\306\364\005\275h\003\322\275\234[\301\275\266c2\275c\037\332\275r\321J=\227\230\277=[\332\241=\254\'\304\275\273\225\346=T\303(\275\207\270\251\275\353\345\323\275\301\303\221\274\3669$=\270\010\001\275\312\352}\274\3574\242=R\313\210\275\256(\305\273\326\013\206<ar4\274\014\325\214\275\333$\336\275|\322U=\222g\206\275\311P\354\274Q\003\245\275\030\363\210=\010c\264\275;#f=\313\245\257\272\231\313:<\016\304\025<H\352\351\275<\003\340=;\224x=|\033\217<\276$\247=\034\261\005\272\320\235\303\275R\026\211\275\376\217\007=`\210\277\275\007\235\030\275\000\324\035\274i{\255\275i\342C\275pT\263<\307S`=\374\321\300\275\261\226\257\275\234\272@\275\020.-\275\025\245f\274\225G]<8e\252\273\034\253\203\274P\350\316\274\037_\250=\024\317H=\360-\374:\030G\336=\0370Z\273\031\034\300\275G\226\203\275\317\036\202<\024\213\006\275\236x\235=>Si\275\213\354N\275\253B\037=\316\017\265\275\235\327\221=\345\204\217=\262\364\250\275\231,\232=\204\373~\275\233\373y\273\260n\342\275+\"\337\274 r\234=$\240\236=\337{\240=\321j\350\275\331\266\341\275\257\177\024=\256\352\223\275\021\230\277:\352Q\243\273\010\215\327=\024\256\315\274\315>\326;\025\nQ\275\233\305\236\275\265u\t\275\256\364_=0\260\254=\t\235\234\273cj]=V\364\211\2750\310\353=\360\3414\274\025\205\264=*\372\033\274\270!\257=j\335\234=n\005\304\275\302!\355=a\343\000=\344\376\256\275\364\274\234\275tY\023=\031\223\026\275^`\341=P\213 =#^\237\274\241\210\024:\317\302\277\274\005\324\360=fi\n\275g\031\352\274\325\251\230\275\334)\241<\020\023\221\275\255=\204=hk\257=\241\366\004\275\031\233e\275\n\347\214=\243\275&=j/\355=\310N\227\275\346_s\275\367*5\275T\346\002=\325\227k=\021\372\357=\263\024\220\275u$\031=q\027\350=\022\002D=\242\305\030;\326\343\372\273E\271\247\274\341,R\274{\342\343\275\253\330*=\215\013\212=\351\t\351\275?\024\345\275\204g\257=N\001w=\257\214o=\034$\243=\336\215\210=\327\373\200\275\364\034\000;\277\"\337=\303\207\247\275\257\002X=\307\372\351=\024s\020\275h\010\205=\210\260K\275\363\007\304=\356\374\317=\344\225\230\275\343p\334=\375e_\275\032\366\345=\034\017|<\221[a=<\'Z\275\222d\327<\261\273\341\275,\303,\275\337\215\371\274~30=Nn\\\275\255\347\242\275d\r\020=g\274u\273\010\272\230<\351\2547=\033\257\312\272\002\007\031\275d\240U\275W\220\346=\322\014\200\275!i\305=\3715\323\275(\335\223\273t_\345\275\035\347\311=V\326\344\274\375\006\257\274\352\017\271=\016\363\313=\301=\307\275>2N\274+i\260<\026W\341\275c\352`\275\021o\300=\236\250\211\275\375f\225\275\3646\350=\222\276\214=L?\310\275\r\304\332=m\024\303\275\260\205\264<\001W\005=\334G\325<Z\026s\275\256\326\356\275@\243\337\275\221\333k=\200\223\306=[\215R=)\211\311\272\221\224\207\274\226M%=\0146\314=\361\353\317\274z\206\343=\255\312\327=\247\363y\275\240\231\300\275\207\214\333=z\367\206=\353\276\231\275\345\232\325<\213z\357=\034[\356=+\271\227\2756/\265=\263)L\275\354\227\277;\001\016\233\274\331n\001\274#/?<\264\022\230=\352ha\275/\213\270\275\244\366\230=\207\275\006\275\004\002\177=r\327\245\275\271!\243\275z\253\337\273B\311\244=O\372\312\274\360\020\356=\216#\354=M\347\022=]5\276\273P\273\256\274\203\016_\275+$\230=\'\312\205\275\273k\213=V\253\336;\367[\257\274\274\205\200;l\223\266\275ED\001\275\342|\330\275(\234\232<\221\276B=w\337}\275\262\335\200<\002\370\241=\031\210.;\027\n\\<\270\021\230=NG\026=\207\010U\275\252\307<;$\312\016\275\345\024\231\275\033\347,=\310,\341\275>\003\301\275\254\271t\274\014\246\023<\236\367\007\275\317\021A\275l\r\317\275\331s7=\n\275\236\275\257\363)=\333o\034=\"\223\226<\'\252\317=\330u\327\275\017\035\325\274\355\301\315=mgY=5\021\253=2\332\272;\3763\001\275%M\356\275 \270\201=\374\325\306<F\262b\275\271\327\033\275\263\266\336\275\337\200\351=e.z<\2037\266\274\371X\235=\324C\303\275\207\242\264=\332\"R\275\\\321\\\274\226l\311=\004\261\212=\251\317\212=0W8<o#\356\275\371E\036\274\3057\270=[\340\001\275\377Z\306=\026dm<5Lc=~\004e\275FE\306\275\212\202\354\272t\252\305=td\243\273 Y`\274P\217\202\275 \245\"=\315\2508\275h\331K<\217\006\210=w7r=-%\332\273V&\330\275\201\212\002=]3h;F\2730\275\313(\214\275\016\350\241=\231tp\275\354i\243<n\370\226\275\312\342\201\274R\177r=Z\3344=LX\200\275Uz\327\275Ns\204<6\337\240\274\331\304}=\360=\023<\n,\330=\265Y\201=?T\234\275KzQ\275\370$F=}\010\223=\234\343:\273\020\227i\275\271\340r=\265\032\315\275\243;\037\275\322:\000<\217j\003\275\255^@=E\005\364<\347\306\341\275\214\364#=\034\3174\275G\255\352\274\033\002\377<\257\234\321;z\365\265\275eRw\275f\326\234=\201\026\264=\374\264\306;\373\253\373\273\245m\272;\273\257]\275\313\\\266\275B\376\373\274\342(\277=\031t\247=\313\243\300\275\367\204_\275\213\376\270\275\256Z\264\2756\\\204=\303v\270<}\014\300=WE\211\275\212\264\212=\0079\330=\363\377`=\355\206E=\036\321\221\275\231H\277\275\014K\342\274x\007\216\275r )=O\317\327\275\027\257\270\275\321\026\346<\326\210\024\275\374\206&\275\002U8=\266\201\347\275\233o\303\275 \002\236<\335\202\204\275\226\317\331\274\336z\322\275|\201\341;\177\254N\274<P\302\275\215\364\025\275\030]\3407\321\353\357\2753\230\020\275!2\266=\337\367^\272\261e\256=\r\004\271\275\275A\316\275\216W\216\275\321A\252\274*A\263\275\323\r\215=\230\363\r=\301C\216\275\3149\207=\27643=\352\220\216\2757\334\357\275\314\241\342=\252;\330\275}/m\275\223\326\202\275\014E\342=xF(<T\2457\275%\022L\27564v=\233$\327\274\252kV=\246\324\272=):\357\273$\346v\274\326\245a=\317\2076\275\005D\355=F\001\201<\341\352@<\250\025^<\351O\316:Pc\203\275\301\203\335=E\212Y\275*\003\301\275\351S{=\323o\357\275\013\002]<Q\'\262\275\307f\234=\357^q\274\353\227\271==d\275\275\024|\026\275\352\230\221=e\254\317=\323\235\253\274\255P\202\275[\020p=u\227a\275\351\022\201\274\371\000\302=X)\255=\263\205\223\275\300_\236=\013\243\240\274\235J\332=?\001\326<\253\244\200\275[\276\035=\212\236\310=\250\344\235\275a\030b\275\230(\250=g\177\223=\263\265W\274\024\243\335=U\260\222\275\010\206\345=\236\371\335\275\230.,=\3308\244\275\375\266,\275\373\203c\275q\002\272;\315\376\354\275^\004q==\372\260\275\010%\273==4\202\275\244\216\343=\216f\210\275\362\346\006\275\254\034\177\275s\331\n=\327\020R\274\234\337\343=\236`\335\2749J\345\273{\371\335=\253V\325\275\037\3717\275F\217\360:\003\237\347=\"v\201=d\301J\274\277\267\316;=\363\250=\272<\225=^\364\272=\344\007\003\274\\/\333;oM7\274\302\324\006\275o\356T\275\274)t\275\315Cp=\246\302J\275M\004\330:\264Q\305\275A\345r\275\211\2628=\251\217\271\275\033\332c=\356\244\243=1\261\034\275#\302\303=^Q\272=~\202\036\2749\322l\275\266\277\275\274%\3037\275\375m\037\275k\246B\275w\232\277\275&\002\"\275\220\331\035\275\321\014\210\275\031$\250=R&\331\275\207zw\275\'\342B=$\223C\275\256\366\354\275\315\360\302\275=\236\274\275\364\331S=\251\353\\<\365\031\357=b\201J\275\356f\240=\214\207N\275\355\257G\275\306\233\265=~\245i\275\356\376\010=\371\363\247=!{o=\351\013L=z\314a=\302\251\276\275\301\0374;S\337\234=\202L\335<\217\300\010=\"*\306\275a\312\003=\330\334\216\275I2\025=|<\027<\271\235\236\275\241\221\300:\207\357\265=\214\023f=\313\367\242<\260\367\304=]\307\330=V\n\225=W\303;=\343j\203= \267F\275\370\200=<\330f\227= \230V=\273\356H\275<\"\235\275\2739L\275\037e\\\275\020\216\352=\240\230\204=\356*\324\275\265_\213=r\352\311<-a\260\274l\200.\275v\233\325=\227o\000\275?#\034<H\315\231\275\211(\001\275\177x\321\275\213\203a\274\337\362\332<m\334\033\275\315\336{=\245\315\206=\212\006\275\275\243\320\225\275\216\003\216=i\270i\275fv}<(\240\n=\210\334\235<L,\274=\020J\004\275\340\\\253\274t\210\240\275\355\203\035=\372\231\303\275\027\240C\274\025n\243;92H\275*])=\314~\371;\275\222:=\256K,=\254\002\213\275K\270\325=\247\253e\275\245oB=\037\357\215\275\001o&=\304\347\233<\326\323\360<4\00138gd1=\033\241\177\275\334\206\213\275\210\237\320=\241m`\275\003\250\005\273\3578u\275\275\337\013=\263\243\243\275\007\376\350= \304\264\274\323\310;=j\250\204=\351\357\270;\ny\341\275\031zP=\014s\200<\233K\303<\3456\323=\377\212\322=\023\303t\274\204\342\204=\330\202\310\275mD\351<\224\326\332=\026\243>=\340o]\275\237\t.\275$\306\377<\023k\236=\351P\006=A\333\331\275\204\304\316=\3179\223<\211:\357=d\200\017=\314\343\233=\227|\263=\364\031p\274\233\035\345<!\266\325\2759\022]=\\\243j\275>w\025\274w\244\317\275\002RZ=1\257j=\r\325\210\275\2027\234;\333\212\311\275t_\001\274\312\236\341\275\242\014\273=\372T\317\275\025\225\344;\322\316y={\363\202\275\023\261\005=|\034\256\275\263\243\211\275\225\201\321\2753u\237<+\244\223<\240(\216=<\327v\275\032\224\265\274\377\242\235\275\003\307\351<d\352\210=\002\316R\274M\357\377;|\347\302=2\221\200\275\360\370\207\275g\346\217\275\022\226\353=>\342\022=F\231\225=\2437Q=\257\340\310\274\231q\240=\231\357\252\2756\366{=k\366\301<\211\276\034=ZXV=\230j\246\275S\356\331\274y\252\255=f]8\274v\177\230=\"\226\221\274\034i\312\275\357\227m\274\217u\344\275\240\020\227=\027:%=\334\326W\275\217\300\333=\216\026\020\275\004\353.\275*\334\217\275\271c\247\274\333\360\350<\245\205L=n+\276\275[0:=\2367\212\275\030\314w\275\352\324\246=\376Q\303\274^\265\275<\216\335\270=\373\026\204<\250\324\343\274\266B\337\275\326J\214;\217C\354<JgG:\216\315\246=\317\230\033=\360L\212\275\213\377\203\275\212\335\223\275\310K\317\275\002(i;\336\334\356\273z\030\206\275P\277\263=\373\205\376;o\214 \275\346\243\223<\347]\300=\247\004\201=\356\216\335\275c\326\337=Zi\356\275\340TL=\324R\350\275\215\247\314=\223t\200<\323J\307\275\355\262\035=~\256\306=!\232R\275)\020\032\275\367\207\257=Sk\327\275/\2115=\322\2445=\362:)=Z\246\201;9$J\273f\361/=\211\007\317\275\357\367\203\275}wN=\t\232 \274\270\261;=nG\271=g\350\327\275\332t\315=?\n\220=\320\035\332\275\022c\351=\320\221\236\275\204\036\037=i\327\347\275\"R:=\232|\307\274\216\207\217\275\214\337d=\260#\177=\346,\261<\025tM\275\367q\230=\352L\277\275\001\306\360=z\2609:\3225\357\274?Vw\275RH\326\275h\314\350=\373\333\021<\304a\311\274\275}\343=1E\240\275\374W\254=\217\242\357\275\306\3049=\260.\206\275\2423\263=ZQ^=\206\372\342=\376\010\203=\033\360\306=\322\n~<\260\361\302\275\355\'\240:\247\333\031\275\322%\334=|\203\344\274sp\271\273h\007R=<px\275u6\343\275\310\341*=\017\357\271=\244n\231\275\344\321\314=>sh;J/C<;\253\213:\205\305\223\275\273\233)=//\000\271\255!\206=FY\310\275y\322\204\275JO\204\271\020 ==\325p\251=s\035\305\275jj\217\274K\362\331\275\224\014\345\2752\t\237=\001r\311<\211z\031\274)\274\262=\216\310\030=\270TO=\254x\246=\372\235X=\374\303e=\235I\343\275\213\230\277=O\362\313=L\370\200<\376%\347\275p8\322=\014y[\275Fq\n\273\226r6=t\371\t\272\315X\302\275K\254\315=\260\021%=I\265\316<\205\204\216\274{\351\250=\307:\013={P,\274V\235\255=PI\214\275\225!R\274\355\362\'=\327\237\250\275\337B\234=\266\016G=\032\223\235;\244\211\262<\035Q\347=\267\343\314=\344\373f\274\027/\247\274K\305\252=\016\304\262=\263\n\276\275O\211\222<\371\305\335=\272\377\313<\262\346\327\275\241\023w\275\303\253\306=Ka\"=f\351Z=\027\203\257\274\255:\233\275\036\304K\275\325\317\317\275\340\251\252=?\024m=\310\374\277\274\230\340\311\274\266\334\247<t\010\310={Q\315\274\013\217\340;:\275\216=\242\021N\275\262=\327=%T\352=\345\027\265\274i\375\307\275\320?L=\340\270\274<\365\034\315=\177\315\250=8\353k<]\277\355<\215\340\265=\321F[\275\213\207m=v1\260\275\214(\023\275q\213\005\275IP\221;\273\241\363<\374\273p\274\302N\344<\213\'\253\275\350B\322=<u\274;\335\242\022=\237\023\014<\006;e\2752\327\365\274\266\235r\275\314Q\332\275\005g\206=\300\363\301\273\202\314\210=60%\275!\027G<G\"\240\275\330b\332\275\2309\341<\023\255\270\275y!\202=\265\207\323=\021\277N\275n\364\224;W\264\313\271S\246Y\275\3661\246=\2321\333=\337\360:\275p9s<\tn\251\275\271\252\360\275\256:\324=\035\213\025<N\316e=\331\347\n=\033\302\357=\024\217\246=IQ\306=\261\226\352=#\260\275=\346\342\013=\354\365\351<}\271\307\275a\021\320=h\'\177=\270L\275=\237\232,\275\306G\311\275\345c%=\275S\216\275\3201\200\275\337\327v\275\306\261\344=y\016\331=\234\273b\275\252zK=\031\363\203<\367\316o<H\334\310=\331\367\007\275!\216\377\274\206\322\260=s\'\334\275f\037\315\275v\357|\275}\254\235=\365\0231\274\243\026w\275|?\267\275\024\311H=7!\227\274A\025\356=\372O\366<\215\361\265\275\014\254\323\275\217\023\325;5vf=\204\223\267\275\324\323\217=Z\023\210=\005\003i\274y\230\202;/\365g<\2405\307\275\271\rI;O\210}<\214\314q\271|H0<x\360\315\275\316\267\214\275\005\324\327\274\'\350<:SO\032\2745\321\344\274\234\321\017=\212T\315;\253\311\275=\002\317i\275\036<\341=r\323\300<gt\357=_\274D\275O\311\304\275P\006\324=\027\346$\275\212\215\343\275\210_\230\274\231\352\364<\037\206\236\275\277\353\322\275i_\'\274!\265\304<{d\350\275\036\260\320\275\244\016P\275\n\007\240<_\000v=\032/T\274\326\211\275;U-t\275\033\330\310\274\270\030v\275\217\252\231=\367\346\255\275\322\245\241\275\212\343\253\274\262\240w=\020B\211=\301R;\275Y\213\205<^4\352\275jX\213<\335\023\347=\254\234\244=\334\017\322\275\346f\305=\342|\262\275\262\345\254=\305+\311=|0\226=\223\177\254:\271\216\247=\336j\030=\224S\005\2751w\245=\006\351f=7Z*=wM\311\274o\354%=|\t\247<\004\240?\275Rt\261\275\362\270\205=\232L\307\274\247\265\203=}\335\234\275<\311O<\272R1\275>\307R<0\016l<d\377f\275|\201j=\241)#=\332i\226=\374g\315<\310\004!<\207\230\207\272f;\210\275\222\r\274<\254T\201\274\332\353\213=5\271\005==\365\231\275\274\320:\273+8\330\275\255\270\232\275\037\214\236=\317s\027;\260\021\031<\014\001\362\271E7;=~\013\217<\270\030Y\274&\204\223=&\032\177\275\033\030\272=\227\017\322<\370av\275Jk\224\275\337\336\335\274\212\366X\275y\321\256=\\\250\230:\345\000\032=\021\244\320\275=\340F<\374\021d\274z\222\321\274\325,\241=\\\222\224\275\021c\037=\003>_\274\226\000\333\275\312\277\345=\250P\205\275\271\376\363<<fv\2753\315\035\275H\374\010=\360\316\024\274\253B\231\274\247_\272\275R}\325\275q\003\351\274Q|\325\275\376|\240\275\233\204\331\275\021\231\340=\263\020<==F\343=\224\217F=\376\"\220\275S\267%\273A\201\262=\231_\217=ng\245=\372\030\210\275\220\226y<\226\\\262\274p[\334=\016\331\246\275\200\'\255\275\370\233r\274o\037j\275\213\273\206\2751*\260=\355vY<\203\027\235\275\325\037\347\275s)\355\275\322\351\352\275\0354\202=\341\\\306\273\3104\320\275}\t\225<\314\310\300\275\224\005\002=\330\273\205\275\035m\341\275\223\352\217=\334\240\247\275\203\214\307=/S[\275\006\335\267=\025*h=N,\237=O\232\272\275\307-\337=\373\222\357\275\262\353\233<\254+z\274\357\013\322\275[t4=\347y\201\274\035D\274=tu\"\275w\232{=&\2678\275^\377\244=\320<\263\275\360\362&=N7\315\2738\321\234\275\244\253<=\340\313\212\274<\327\320\275L\005\262=\336\t\271=dN\253=(\037\271\275\330A\335=\313xL\27535x:Ao\274\275\007\033\014\275;\242\270=\373\033$<zwv=E\325\360;\303\320\245=\367#\211\274G}7=Jo\247=r\020\242< \240\374<?\351\036\275\r\310==\000H\251=\255\260\237<Y\267\313:\314D\350\275\263\353K=\013\272\260=]py\274iD]\275.\330\310=\372\231&=\333\214\221\275\223l\316\275F\217\307=\371f\326=\273\361Q=\226\027H={g\272\275\005\n\317\275\230B\334\275\344\232\202\274\256\022\240<\245\351\231=\317\373\225\275*5\035\274\022\361\246\275+C\314\275\013\346\310\275\021\270\257\275\303~\330\275\306\377\214\275\364\024\373<\355\357\003\275\364\350\237\275bs^\274\023e\305<\340\244X\274\246\246.=\343\307\025=i(\205<a\030\310\275|\341\210=\234\257\341\275\314\233L\275\2423\314\275\272\t\223<[\204\356=\037.\345\274\250\233\325=\226\215c:\261\024\221=y\321\270\275z\031{=^\215\321=\321\254\322=K\233M\273E\020\346\275?\3775=X\n\t\274\242w\350=\244\352\023\275\265\323\360=i\235\300=\326\013x\275\200\265\244=\332,}=\254(K:\303\256\346;!\032\225;\252\373\210\275\244\033\302=S5\262\273\342\353\252\275B\"\224\275\361\000\336\275\231P\275=\337\2114<V\352K\275]\004g\274\325\223\303=\305\254\346=\273h\253\274\006RA=qQ\373;4wW\275\004\262\274=\352\034\306=&J\247\274\2276\357\275B\346T\275\303R\200=JJh<\007Z\336=\342\266\247\275\214\002\207=\n0\334\275\242\201X=K\220\007\275\"\300\026<a{\005\274W\255%=<\214\245=\0301\365\274*\260\201;4\005\215=\215\231h\275\2469\256\272\234\374\205\274m\013N=*\323J\275\036\t\207\275\264\000A\275#a\350=!\034\326\275\001\204\276=\330\273\326\275\007c\332\274\273Rs\275yN\204\275%Z!=\333,\204=X\261\257\275n\205\327\275\306W\300=\331\375D=\267\003\211=\341\374}\275p\347\243\275\265\377\355<\217\365\'\275\334\266_\275\316FF<\256T\212=\205\252y\275/g\256\273\035\004\304\275\303i\207=;\202d\275a\234\252\275{N\255\274hT\332\275w\237\016\275\336\266B\275\303\317\301\275\275\266\006\275\266>W=\257/N=\275\026\274=\327\354\341=\373\t\335\275\314\200I\273\365\214\355\274\1772\t\275s\240\261=$\033\204\273Y\327\343\275\243P\"\275\341Q\255\275\\+,\274\270S\244=Q\021\311\274A\023\220\275ZX]=\241\213\250\274\222\242\034;\204\251\317=\223Kv\275~=\346=<X\2129\370\213\247\274\222RY=\234\240\017=\332+t\275\266\025z\275\202[\347\275X\264\243\274\004\021O\274\221\225\326<0\233\302\275\337\212M=\364D\343=\217\005\225<\275\366R=\247a\356\274\252\223\227\275\336\310\246\274\365s\307;\304W2\275\214j~\275T\311\247\275\221\316\225\275XG:=\236;\270\275\201\2142=\324\256\276=V\254\201\275\352\245\325\275O\324\341:\201\200\253<\246<\311\275\201\303\300\275-\304\262\274\373\231\220\275\300\207\312=\260p$=\007\257\223\273\345\027\336\275R-\220<\277`\202=\2623\005\275CL\330\275\217\032\337\275\367\007\005\275\371\345\252=\226\275\251=\204f`\273\000X\304\275\013\342d<E\364r\275ki\347\275\004w\364\273g\010{=\025\034\250=d\344\343=\270\326\310=\2763\301=\351/\323=v\313\204\275\247}O\275c\251k\275\336\245f=\330^\310=\033\230\355=\014\010\036=\303\301\340\274\324c\002\274v\374\332=\330\300\252=\312\336b\274\"@?=)}6=\'\032\254\275\232\351A=\203\255\341\275m\263B=\200 \271\271\030\325\034\275\022S\332\275\006s\030\275~x\313\275S\221\264=\216\341p=QI\312=/\322\312\275\257\002\267\275\024l\223<w\336I=}\3707\275\310(t\275&\005\203=e\035\236=~5R=\374\235W\275~\301\217\275\t\363\301=%\261\010\275Gy[\275\267\001!\275\033\006\001=\321\301\326=\325\334\314\275\346\235\312\275\'r\263=a\213 ;}\276\277=\277\\\235\275\354\333\212=\341u\272=6\321\022\274\230\n\227\2753o\027\275p\000%\275\022A\203\275\224\364\334=\032\322\026=\347\036\344\275n\321t\274\255\316I<*\370F;\352x\272=\340T\\=\361}\003\275\326E\221\274[9\243=\220\347\226=\342\016\336=\024\316\341\275I\366/=U[\341\275\237\032\333\275\001Y5=\333E\311=\367!o=8m#\275@U\372\274Y);=\302\377\256:v\362\267\275\317V\250=;=\\=#Z&\272\352o\346\275\006\376d\27550}\273\251\266\345\274\322\r\203\275\370\362\217=UY\213\275\205\036\360=\224\212]=\362\245\204\275\034\017\r=\016\226P\2746\372\363<\364\3324\274\"\246\370<\220w\017<\233)g=0X\220\275\200\003\316=Q\nX\275\0352\030=<w\r=\233\356\301=\014\325\234\275\231\371\302=\366L\274=\257\203m<h\032\340<3\362w\274\324*\347\275;\235\322\275\227/2=\362\224\230=\334u\355\274?\277\227=\345\213\004\275-\225\215=!\037\215\275\363\376:\275\026\035\300=::z=\027f`\275\251B\222=\375\3567<P]\265<YAE=mq\332\275n\233\324\275K\352\267\275\333#\272=Q\331\220=\013d\232\275\r\237\037\275\345\216|\2759\240}\275^\315\316\275\375\220\\\275\031\343\217<\200G\211=\310\251\364\274n\277\354\275\201\217\367;!\033E\275\215\212\212=q\023\177<\372\225p<6\355K\275\373\254\016\275Yi\025\273gT\320\275W\366\340<\'/\276=\010\235\365\272\\\'\r=\n\224\313\275\320T\210\275T\303\202=r-\352\275\003\307\252\275\261\322m\275\262+\225\275\303\372\246\275U\342\266=\356S\245\274z<\206=\204T;\270\310u8=\211\2351=?\266\271\273\376\223\232\274\345\202\303=\241K\273=\273S%=y\361\266=\246\315D=\326l\247=#\005\233=SC\032=\212\030\330\275)\206\255\272\334\r\256\275\211\240\237\275\373\246\330=\217\303q\274\004_\347=5\010\300=U\312\254\2755\214>=\031\002\002=\255E!\275\234\345\3029\350\336\036\275[;\320\275a\254\271\274\031\232\261=\331,\212=E\231\022\275\244\331\276\275Kg_=\220\321\314=\303k\203<i\001\314\274\200D\213<\217\241\272;\\]<=\005%\224\275\336E\000=l\n\306=]\254\370\273\031l\256\275.\273@\2758-\257=ta\342=C\006\353\275]t\331\275K2\375\274D2\205\275\024\'\014\274LV\337\275\023\277D\274w\'\334=\037\256\312\275\331+.\275|u\214\275\207,\002<Zg\332=V\031\227\274\351\021\366;\260\226\261\273\354\247\270\275\220\026\364;\326\rt\275\220\354S=lm\275\275\244/\203=\374\355 =\307\355\230=\230\203\212\275d\313\033=\363\252\352:\341\313L\275\260\353\216\275\006\232\010\274Z\304Z<\322v\006\275\337\257\353=\022\327M\275S\311\321\275\243\211\016\275\211\223z\275X@\255\275_7H=\246$\311\275\225\367y=\375\246\037\275\264K\226<d\027F=\376\375\216\2758\032\216\273\020\255\226=-\227\237=-\344\016\275\177F\360\275\201\233\327=\366$\202<C\357);\216\340\206\275\343c_=#\343\n\274\240\355\231\275\250\275\223=\231/\037=\250\227\235=\347u\216=\317Y\t\274\371\254@=\030\340\304\275\301\303\354\274\204\010\003\275\233\224\322=>V\260\275\262IX\275\227\255\271=\205\337\352=~)\276\275(\002\342=\206\324\251;\263E\211\273Q\277\205\275\263\240\360\275\374\340_;\371\333\341<V%\025=\256\303O<TP~=r\261\202=\003\202\226\273\034\265\216\274\2230o\275\220\267\363\273\327\343\320\273\026\357?=f/\204=\036S1\275J\263\177=h\376$=\261]1=\026m\'\2749\357\331\275\353\301\252<u1R=\212\014\213=ai\010=\332^\277\275k\021\246\275B\345\313\275&\177\345\273\307m\342=wZ\272\275\300A]=s\300\352<\250R\260=\017\220\353\275|\035@=\253/\277=\021j\356\275\002\367j\275\231+\357=j\217\207\275K\217\263;v\336W=\371\204\344\275\242e\260\2759\207\271\275\003S\317\275p\014\334\275!\002\210<\266\316\205<\007K\237<\020\300\351\275\035\334\333\275V\325r=\256\206\215=\004\272\305\274\330\025\220=4#\300=\203+\351\275~p\216=\016p\026\274M\346\316=\243H\344\273U9\255=\230\260\207\275tS\344=!{\255=\352`1=Y\224\276\275S\272\253=\347\233\223=Q\357\205=y|K<iE3<\343\315\013\275\276\033\217<\245\260_\275\327\364\345\275\213\261\227\275\035\220\252\275h\013\271=\324I\345\275C\023\241\275\232*\307=\357\226.=\354[\212\274\r\357\267\275Bg\263=\221tJ<\035\306\257\275\324r\341\275\313\026\013=\007GQ\274 C\204\275\034K{=\361\355N\275\020PT<s$5<\335?\261=\346\3739=\025\253\205=Uo\241=\322\337\225\275\266\200g\274\247\242\362<\323Tz\274(e\235\275\336}\302=\214\225L\275\232\021\255\275 7\310=\374\243\233=\347dY=\236?\377\274\225\355\225\275\322>\304\274Sh\310<\316H\342;\005\205\337=\314\177\360=.\337\257\275/b_<UN\332\275M\375(=?Xl\275w\257\273=\023\2101;_N\240=\305\266g\275{\344\272\275\245\261\241=a\330\323\275\344\373\242<\312PJ=\246@\036\275{x\307\275\271N^=\241\253+\275M\323\214=N\340\354=\036\262\253\275\\\rV<K{:=;\365\250=\3701\301=lXO=O\322\233\275\342v\217=\000B\345=\375\205|<\240\223\353=\026y\016=\277\227\226\275\360\340\323\275w\313\226=\024}M\274\024\207\334<\"W\177=\214g\244\275\037\035\305=y\363\250\2756+\242\275Y\200\360;\373=\177\275:\221\245<\206-\212<F\321Z\275R\200\346=i\321\343=r\256\373<\301\306m={\306\271<T)\217\275H\304{<\210\317\003=\372\177\264\275j\364\210=\343Q\214\275\360\027\244=\330|\321\275\342c\247\274\233\314\236;\206\314\320=\277\337M\275\315\302\210=\004\004\025\274\262\030\350\275\222f%=\242.\343\275\343(b\275E^-=)\251\n\275L\227\361;\210\247<=\343\372\342=IA\240=^\326\244=&\311\231<{`\234\274\010Ip\275\035\346\250=\036/\323=\316\303\257\273Q\017\221\275%\014\266=\302\022&<\344\307f\275\341\202\304\275a71\275-\276\277=\210\300\211<!\210\324\2754\013\n\275P\035\252\275\365\177\356\275\305\212\221=N\217\271\275\014k\216\275\037w\272\275\322\360\322\275\"{5=\266q\311\275\201s\335\275\007\214\270<[vf=\330\323\345=\033\221\001=\337~\"=\003\215j<\tS\305=\237\341&\275\274<c=\266\255o\274U\336\372<d$\330=!\312\260:\271\006\254\274\233\022\334\275H_\356\275(\231\035\275\22361=x8\202\275\017\326^\274g>\027\274\036!4;2\032z\275~\201\305\274WW\243=;\301|<\006\272\223\275\263\207b\275\035\335\341\274\355\375\327\275Ne\244\272`b\\\273\277\177`\275\351\r_=\247\303\225\275!\r\304\274\260F\216=\366\026h\275:\330\305\275\201\034\210\275;\032\245\274Fg{=\271\226\201=\264z\347\275\002\236\325\275L\232\220=?\022\331=\267\244C\275\366H\310\2752\222\231\275\317\001\331\274\246\377\210\2752yG\275\251\332\236\274\347v4\275\026\230\305<\343\'-<U\275\276\275\224P\t=3\003\211\275\305\267\321\275v\332J=\020t\313=\013\346~=!\n\"\273\n\202\317\275\2155\r<>K\201\275\223\2311\275\245s\263=KM\270\275M\320\214=A\362\345<\201\305\204<3\311\355=XF!=\022\273\211<\202\216\262=\347\353.=\254\261\246\275\'m\247=\006\316\017\275\n\215\270\275\250\014r=\322Xx=b\236\257\273\031\335{=\364\n\361\275<\005\244<s\235\201=|\314\252\274\351\323P\275\225\242\235\275\345O#<\230B\031\275\261\034\344=\010\200\213\275\341\204S=\213\224`\274a\300;\275\230\2136<\201\213\305<\333\242\370<\221M\222\275n\026\271=\323\256\221=7I\037\275\033{\007\275\r\017r=S\3360\272\352c\332\275\000\357\326\275\352\217\324\275\177!;=\211\366\321=\366\223\263;O^V=M\034\004\275M\004\303\275\3203\272\274\304\330^=}\001\306<J\302\324=[8\213=\263\266\334<\217\351\350=.\"K\273\0244\244\275\033\224\332\275\217\005\311\275\243\372\307\275v \321\275\205\264\352=\331\201\265<,\245\302\275\324!`\275\373UG\275\377<\221\2756m\010=\004i\003\275\334\030u=\030m\213<\262gL=\023\310\260<\325\335\240=\321\'7\275\006=\311=1\223\377<\226\321\277\275&\365[\275F\374\253=\350\t\327\274<\355/\275\027r\215\275\355`\215\274\343\265w\275a\355\336\275\340\247\355=Z\206y\274s\315f\274\311&\252=\254\213\021=\013\007\276=s\303\263=\030i^\273J\302\304\275sE\226=\240`f=\007W\r<9\242-<W\tA\275QK\001\274\206tN\275O\033\202\275\257\277\305=\242\253\217=^\316\345;\373P\321\275\260vL=\013\257\261=\016\227\216\275( \274=\376\366\013=\016\310\322\273\260U\264;\243P\006\275\254\262a\2733\003\313<\237&:\275J?==\035\245\344\275\362P\211;$W\325\275\247l\341\275QNX\274\2224\302\275\374~r=\005\335r\275\242\3151=k}\302\275\373\324\272\275p\005\274\275(\023\333\275\225#\271=u\030\354=\264H\352\275\023{\221=\355\230\205\274t\216\272<h\344\273\275=\3470=\324\013\014\275zRT=,\265\003=\303\340\257<\237\354o=\240\254a\275\361;p\275K\314\006;\030\205\r\275\356j\315\272\341\336\210<?\374o\275\222\366\001\274\330\371t\275\264\352,\275$\221\202\275d\263\346=\370\027}\275M\254\300=\225b\246\275\222{\267=\014f\025=\224q\254=\352\330\323=\330\303\336<HY\261\275?L-=\3345\261\275{?p=/R\337\275Oe\003\275\313C\274=\303c\277\275\230R.\275\241\241\211;!\367\025\275\274rB;\360\000\234<\376`\274=s#\246=Y\261\243<\325\253\243\275\016\326\254\275\217\275\300=\242\010\302=\364\304\207\273\276w,=\341/\334=\312\034\247<z+\264=O\364\353=\317\030]\274QN\242<8F\256=\277\212\350\275W\314\251=\366\366\261\274Z\243\264\274J\333\322=x\227\327<\314\005\321=\345\304\275=3C\204=\203\307e\275\007f\273\275\212\354=\275\246\030s=9\346?\275\'\221\0209\036\3312=\241\375\235\275 m\210\275 a\327=\267;\375< \354K=\226\313\375\274\244hw=v/\254=\272.m\275\010g\262\275\370\305\373< \264\312\2754\013\265\2742\024\252\275$\333\027\275\346\034\274\275\217\300\333\275\037\026;=D\327\334=\261\367\320\275\367\306\261=1\315\230=\263\276\031\274/\224\273=\346i?8\223\231\245\274mRI\275G-\226=\204\327g\275\227\242>\274\300{\312=\207i\265\275\255B\177=\271\321\304:\033{Y=\356\003)=-*?\275.\027K=\336\254\020<\227w\033\275\204,\256\275\300)\\=\2261\020\275\241\377\207\275n\361\326\275+\365\231=E\327l=?\325\352\275\262Z\034\275Y\300\300=\r\355:=\336 \"=g\016*\275h\244\360=\037\300S\2743\301\352\275\237\237\237\275\221\377\362<H\020y=3$\021\272/u:\274P\262\377<L\024\257;Y\363\323=Oo\374<\'k\356\275jX\217<N(D\274@\004\242\274-+g\275\016\275\274\275#\264i=\311\200\315\275\010t\336\274sY\326\274\347\007\273=d\276S=\003\tB\273\215\361\321=\377v}\275\376\220\253=\203\237\325=\033a/\275g\212\323;\346\354\314=\353\363i=A)\301<\233\004\316=\010\222\351<\274\t\234\272\222\211\263=p\307\252=Mo\027=G\010\243=\316i\311\275\037\203\256\275\022(\343=([i\275\241\242\273=\241w\301\274\237\317\022=\241\007\206\275\362I\302=\003\303\305\275`e\177=J\362\217=]?\324\275\376\212r=\323.\325\275\231H\267\274\340C\236=\022\370\221\275\273\250=\275\014XY\275\300TN\275\227\326-=\034\303I=\246\177\336=\263\305\303=\372\030\335\275\267A9=\354\237u\275^\273v\274\002\026\271\274\232\375\350=\\ \252:T\364`=u\367\034\275\027U\211\275\376\234t<g\210\213\275Fj\354=#\277\247<\247\211\337=\306e\262=\325]\266=\024\370$<\372\036\006=\343\347\260=\245\362\373<\315v\014=|-\312<\272\261\226\275Ju\233=Lps\273\222\007\204\275m\363\263\275tN\\=\3451\277=}\326\354=)\277\225\275\314\355\276\275G\227\360\275\250\271\271<*ha\275\335\177\243<\273|\315\275\031\340\352\275.\322\347\273\215`?=\235\256\320=\027\301\322\275\360\226\255=N\357\027=,>&=\240,\024\275\272*u=B\r\266\275\337\335>\275\271\255|\275\246\357\322=@x\326=0\312\277\275`\r\201\275\270%\221=\313\262\277\274\376!\322<x\242T=\311a\256\275\373\344\250<\002\310\275<-\221S<\032\264\264<~Ab=\250\030\024\275(\351\254=C7\377<s\031\253=\371\275\005\2733 \322<\211\350\266\275\246\231\304\275\375\036\300\275\201\233\211=*wq\275\026\226\023\275\207\347\202\275\304\014\224=\241\201I\275pg\312=\026W\021=b\342\276=cx\241=\363\375/\275\314\0028\275\304\031\341\275\240Kd<Y`\033\273\'\320l=\006\346\264\275\305\255\006==\360\332=\311\341O\275\027K\321<\232\234!=\336U\222\275\225~\221\275\330\363\340=I\236\206\275T\366o<\346\337~=\030\002\277\275\236u\365<\357\276\256\275E\353\243\275\330\373\266\2743\007$\274\344\371\272=\210\254\340\275\200R\200\2754\355};j\302\227\275\323o\236=\300\213>=>r`\275\023O[=\014\037_\275\224\353\357\275\2413\264\275\235\322\313=0\270_\275\005\013\247\275\004\345z=;\034\231=c;\013\275-$:\275O\230\013=\272\326\226=\331\210\201\275\"J\010=[jA=\236)\353=\375v\233\275\217\311`\275\016\375\217\275k.G\274\335\204\226\274\266m\244\273\325\253\352=3~S\274\270Y\335\275\2408\230=\323\3515=\006\223\237<\007\341r\275~\331\344\275\312.\211<\370\212\340\275\357\362s=\303\230\250=<\003\324\275\353B\261\274\264+\302=\267\335\357\275\314\010Z\274 \305\212\275J\004\231\275w\374\305=zb\\\273R\250\213\274\327\346\300\275\266\030\345\275w`\352\275b\313\350=;M\353<4z\335\274\345K\312<\237\0039</\363_<\362\223l==\314\336\274a(O= \2274\275\200\277^<U4\351\275\253n\243=s\372\324=\'\305\343=\255\236\242\274~C\325\275\326\300\343=\213F\246=\270\220\250=3o\316\275\224Mc\2750\333\027=\254\027\311\275\201\302\257\275#\307r;~\016\262\274\234ts=6\017\343\275W\257\266\275\374<\310\275\317\005\226=r\226\024\275\372\325\317\274\377zc=\343=\263\275\376\2708=j\313e=T*\332=\342\371{\275zm\217\275\336\326\322<\306\375\222=\363\000\223=I\245\"\274\000\205)\275\222x\340=\026\375[=\027>\220\275\2148\311=\302\013\240\275\251\305\217\275\206x\335\275\252\341G=\215\315\257=_\202\234\275\311\004k\273\\Q\007\275\333k\177\275\to\341=\034\226\211=\350\203\301=\3021\337\275\270\310\003\275\220}\250=7|\326=-\335\330\275\317\307\212\275]\237\354=\tC\212<\242|F\275\250\000\026=\031\244\002\275VQl\274%{J\275\"\274\031\275\3750\263=\n}\244\275\230\256\244\274\332\331\253\275\302\324k\275|\\\252=\2161\227\275\303\230\242=\022\036\344\275+o\307\275fS\213\275!!X=\213\253`:r|\r\275\217e\216=8\213\253=\332\361\217\275\246y\350\275x\364\202=\254\242\311={\310\371\274X\206\256=\207\232\007\275{\343v=\026m1\275\373\323\275=s\316\324=\314\276\227;$4\264\275\243`\306\274\367?\234\275un\270=\306P\242=d\335\322\275\270\256\256=\243\204\211\274\n\225\365\273\013\243\273\275x\237\240=\351\330w<\204\365\303<~\224\233\275\016\272\247\275k\034R\275!e\300=\264;\227<7\275\264=\372\216\306\275\026Z\024\275T\222\351\274\301\307\275=:\325N\275\363\310X<\243>\301<s\270\254\275\225\261\267=\237\306\361\274\215\326?\275#\347v=U\001\360\275>c!\275N\223\317=\342\002D\275\033\022\250\275|\363\023=\3070\324=\314E\347=c\236\227\275\356m\324=\r\343\331<\325\222\305=*(\342\275;o\002<]\203\225<\320\234>=\230\343\237\2759\324i\275B$\241=\030\342\265\2753a\335\275\007\347\214\275\371Z\217\275\240G\251\275\n\3476\275\217\353t\275\030\312\245=\351\031\257=\256\177\346\273\222P2=\364\356~\274\'8\205\275\312\272\204=\213~\274=\025}\244\2755T\300=!\225\216\275-\355\200=a\245\223\275\000Fo=\275\272\221=\250\'\372<\210@\271\275\337\204N=3\300\331=\352E\333<C\252\253<\n\016r\274\253\377\276\275~\346!=gY\303=)\"\205=r\'\270\274\342\243\303=\335\006\233=\376\374W=&\320\201\2750\241\356\275\006\275\302\275\205\364\340=\032\374\254\275\221b\341<\025k\"\275A?[=\275x\373<\244\270\322\275\'r\356\275|\030\354=N\310\001\275o\357\261\275\352\325U;m\333\350=\301\240\343\275\037\313\243\274q\331g\274g{\030<\273\215@=^\322\251\275(\266\272\272\002\n\310\275^6\261=\363\214\314=|\245|=\310\336\254=[\325\211\275\"\251\225\275\006\2137=\203\311\374\271\312\325\342=\215\307_\2749Y\022=\321q\266=\267(d\275\364P\331\274\373\244C=nd\010\274u\311\345\274\343g8\275\237\316]<f\213\335=\010\333\302=\311\rz\275\202G\362<\034\002\326=\356\320\354\274\236\357\312=\345<\345\275\337\276\241=\004\035\211\275o\362r\274\022^a=\034<\342=\003S\201\275^\037\334\275y\\#\274[oc=\336\247,\275\246\323\250<\3269\245\275\206\3365\275\023F\353\275y\302\260=:\331\377\274\005\221\315\274\254>\330=\376J\333\275X\207\034<\002A\333=x\371\334\275\256p\310=qu\177\275\237\327T\275\336\002\360=\031f\241\274Xu\254\275Q\374\215\275\005\340\252\275\234?\242=,\321\212\275(Q\031\275\0209\274=\226KO\275n\326\035=j\353M\275C\300\r=\334\006\356\275\017\225\231\275\367\354\254\275@n\250=hj0=\027\303\355<\201\204\027\275\323\007\303=\321\365\215:\rI\226=U\344\367\274\277/\037=\343\254\274\275\rd\342\274\337\203\255=\315\006\220\275\032\301N\275\275\213\376<\201\250\244\275\354g\326<\017s8=g\332P=Y\353\265\274WmR\275\265$\276\2752\354\325=\306\003\333<\214\352\204<\301&\211<?\021\232\275\213\302\233\275\251?\275=\340\374\350=\377\264\360\271\214\347\030\275\005\353\261\274W;\325\275\261\200\226\275\354\374\236=\001)h\275\010\303\213\275$\230\327=\303a\304\275\360j\351<\211&\205=\031\373\204\275\234]\232=\324\251\231\275\262h\250<\354b\310\275O\273\031=\353\016\316<l\002\021;k\315{=\010`\016=\261\002\255\275~\\\204=%\257\376\274\255\213\013\275\204\330p=w\312\217=cSC\275\035\215\236=\2149\001=\245\253\343<\225a\214\275\252\001\004\2754\356\316\275\224\352\236<%\272\223\275\261\263\203=\2543U\275Pca=\177<\231=8_\312=\204\344\005;\207?\226\275\027v\241\275\221\346?\275\334\n\322\273\331\025\235=@\240\301\275\357C;\272Kp8\275u\273q\273\244\242\224\275\330d`=RlW=N\030\367\271Fi\305=2{P=\305\020f=5\314\355=e.D=\361\331\213=\312\246\243\275\366\230[\275\316\350\262\275\023\237\247=k\347E=\252b\267\275lZ\217\275\034&\225=\277\253\333\275u\315\320<\336\233(\275\007\202 <5\347\334\275\312*\327\275zT\232=\336\266B=\244\231\202\275]\370\335\274=A{;0\240\341\274\250P0\275\254\373\304\275\327\313>=\305\014\344=\026j\346=j\261@= \200\237=\232\223\331=&\001Z\274\276\332\204\275\014\314\232=V!5\275\352\266{\275\014\253C\275\027\035\345=\300\352\203=\370\366\305\274\302:&<\346b$\275\310\252\242<\335\230\247\275\032\212\270=\320\220\"=\367i\250=\310/,\274\354t\254=\225n~=\031\273\317\274\216\023B<k\221\352\274c\317,=\233\201\241=Eut=\317,\226=-\343\265<\262\212\237=\376\224f\275\261T\267;\2113Z=s>\203\275\371\'\365\274\005p\274=\301;\324=\030Wu<\\\226\030\272\354\332\304=\361\034\017=\347P\234=\323L]=q\321\277\275f\253D\275\342\256\253\275\020r\037\275b^\355=\312\242\334\274S7\254\274%e\305\275\322\265\222=IQI\2751\263J\275\266\225T=9\361\277=\325+:=\214\206\264=6\321\243\274/\360\270=J\252\206\275 \315\302=\001{\213=!`\264\275\301\224Q=\216%\275\275G\335\301=\224*\265\275y\222\264=\313\352_<\005\342\022\274E\230\036\275&\317\225\275c\177\273=\363\326\204\2758X\312\272Ol\322\275\275c|\275X\222T\275\025^\353=\02089=\232\237@=\\\007\024\275\361g\357\275\213\246C<\262\213^=\257t\317\275\275\320v=\216P\033\274\276\344~\274\300\271\346\275\302\374\347=\317N\214\274\205I\225;\253\021\206=\241\013\003=]R\240\275\371L\303\274|7\341\275\376\365\215\274L\337\347=\334\340\357\275E\322\221=\227c\353=\362\226\240\275\267\360\340\275\371\024\270=K\312\213=\232\177\235\275\273*+=\217\266\360=\003m\307\275\310\256\217=\361\320\033=\225\210\306=\233y3<4 \215=P\027c;\203Lx\275\324?\270\275\250\371\357=9M8\275\256\2466=?z\326=^\212\310\275|\323\250\275\323\201\247\275[T\344=Qp\033=XbQ\275UO\261=c\252\272=\360\026\212\275\374]O<\343\227\240<C\217\305=-\216\226\275\330Og=Jfg\275\321Z\326<)\247\"\275|\210\273<-2\322<R\343S\275X\366n=fF\330=\3409\331=\271\304\263\275\032\026\246\275c\262\202\274\024(\251\275\304\207H\275]\370\032\275iF\240\274Fdv\275{Y\301\275\200\367\002=\013(0\275\350\313&\274\247\270\207=\241;8=\021WV\275\370\"\314\275\005\034z<\021_\315=\315\231\353\274J\266\316=\304\304\233=u\317\000\275T1\244=\321\335_\275\350@\300\275\317\342\004;\246\244u<\271\355\024\275{\017\252=\231\t\251\275\025_A\275\3013\342<\366\213\215\275N\342\253\274\312\027\300\275\001\331s\275[\333\260\275\265W\214=\363\262\346\274TF\326\275\002-Y\275]7\003=\304\210\214<\212\277\330=\373#\235=\242\356\345\275\220\245\205\275\233\346\241\275BW\021\275\201_\220<s\263\325=8\224\223\275\001\024y\275?U\345\275I\267D<\350A\330=\270,\301=.\347\210=\\\017\241\275\245\022\230=\267\277?=\227\303\316\274\201J\235=S8\212=\230B\344\275\301\030\344<\321\225\322\275\353\317\331\275\007\375\030\275s#\331=q\220R=\006\267\002\275\260\264\211\275u\307\336=\306\357\331=,\340\021=\025\201{\271o\3777=fl\353\275M\334\017\273\004\216z\275\363B0\275tRp=\232\t\233\275\247\340W=\251\255\353=Sn\t=c\307\371;\372\242\261\2753\217\312\2755LS=k\002\021\275=\277O=\220e\214\275\377\3476\275P[:=\376\207\221=\006,\366\274\3267\002\274\376L\327=\216\363\333=\001A\226=s\"l\272\337\201\252\275\300\023\356=\n\360\207\274u\017\332=\002\223n\275\240\215\251<\266\201\260\275sX\264=\r\320\204\273\337F\026=\234T\345=\227\274<\275\256\\\020=\006\252\214\274\302\306G\275\251\220\341=\200rI\274\247\250\257=\024\217g=\371|\025\274\315\001\277\2754\245\233=6\321\244\2753\t\247\275\t\204\245<2\'\262=\337\235\314\274\372\242\304;\\\016\254\275\267a\355<x\275\310<\304\273\206=\030\204\350<\307\326n\275t\027J\275\tb\301<\007\273\211;\024\355M\275\377W\273<7\320\223=\275\305,<\230H\353\274\200\371\023=mP\210\275\033\266M\275a>\036\275Q\221\325\275R\264\322=9Y\376<\026\004:\275\335Z\303\275:\365\334\275vv\267\275\265TV\273\351$t\275h#\341\273n\025\223<\350\250A\274\364,\333=\274\232\254\275e0g=\251\205S;\177V\306\274\343V}\274#\361\326=\243\262\332=\212\221\336=Hb\306\274a\307\234\275\247k\373\2745\334\347\274\246\253\273=\306)\007=\357\014\266=\300\366\302\2752\263\244=\330\202\223=\240\277\271\275:t\317\275%{\323=\210\347\345\275\3111\000=N\261*=\270\230I\275i:Y\274\277D\212\275\230<\026\275Fj\310=\315Gh\274\340\304\271\275\304\255\223\274$\371\203\275f\202\326\275\205U\370<\374b\177=\031\320\207\275E\361\335=\236\022\312\274\023\237O\275\n\216\303=\244U\201=\016\374\344\275\211H\271\273\252\241\353=u\341\003\275\305\002\200\274\224\251_=\014\216\356=}\026\217\274b\001c\2756\307\024=\320b\323\273\003B\227=\000\330}=8\005\372\274\374\202z\275\256r\213=\010\266\257<\257\010\360\275\312\214\340\274\357eq=\333\021u=*\202\213=m\\\322=\317\316\217=.\"\207\275\335\021\006\275\021\266\342=\261\243Y<&o1\275\252\215\240=?_8\274\300\"j\275\003&T=\275\277\330\274\0359\223\275\276\001\326\275\324\364\354=\266\347\261;\375;\204\275\3073\355\275\2615\315=4\207J\275\254\3447<\326\027\346<\177\260\237\275o\360\224;\205(\245=\023h==-\233>\274\317\343\224=\343w\216=G\263`=\234\224!\274Zs\303\2757\203\234=oz\n\275\363\334\215=\017k\325=\0313\351\275\005B\210;0\357\035;\212\306\303\275-\\\220\275)gq\275\211x\252\275\031\3419=M\004\'=\202\211\326=\214\316\216=\232\001\264\275@\035K=\263\240\223<L:\312<]\312+\275\001\300\276=k\\\344=5U\327\275\332\247\371<\300\010\351<\263\223/;\365_v\274\3029\331\274;nq<\347RL\275\231\377\200</)\244=\275^\207=\3660\250\275\362V\255=c\334\303=7\322~\273\207L\300\275\351\276\237=\217f\341<\206}~=\312\267E\275@\341\025;\374\370f\275v\341\336:Ib\223\274\252\312\245<\276U\323\274=\\t\275\367\"K<\322\235S\274\032\354\222;\030\257\334\275\265q8\274\251\004R=\243lp\275Rki=i\203\300<\206I\230\275H@\323\275\362BN\275\340)\304<[\016J\275\327\255\344=}g\347<\265\214\315\274\326d\245\275\237\t\223=%\036}\275x\2579=\265\np\275\362d\027\274~#\360=\306\317\020\275\005\007\326=\341\252\365<\256dz\274\312\346\315\275\325\330\246=u\026\272\275\240d\322\275\216;\227\274\"\240\257\275\027Zq\275!\322P=\035\307\212=\257\277\262<\017\225\237=b\271\205\274[\325m\274\253u\301\275`\242\330\274\267\246\026=\321\230\271=Y\372\032<O\020)\275S\007\263<\350?b;\341\245q=:\026\333\275L\251\225\275\371L\224=\215N\277=\232U\374;\260\376H=\204\261\343=\277&y\275\301m\310=\325\031\336=\306v\005=\343k\331\275\264\003\352=WL\254<q\257|<\271\230\030=\032\266\302\274N\325C\275W.\255\275\306\362\264\275\003\270\245\275`\314\213\275\356\205\275\275@;\261\275~\353A\275\313\010\217=\341\010X\275\343t\257<\020^\274=\305\264`<U\205*\273\013c\225\275p\226\202=A\336e\275\246\245\203=\256\234\267\27358\341\275f|\312\275SF\205\275\266\2465\275\216n}\275\3421\275\275\243\r\277=\267\006(=\016\301\020=\242WU<\256 \352<^#\313=Q\220\253=J\024\341\275Y\277\246\275\032\256\351:D\262\023<\317m\320\275\240a\262\275$v\305=M\'\032\271+\251\225\2750m\214\275\351\365p\275\322\303\325=\033\367p\275{\246\331\275\355D\350=\203\352\354=\316\356\243\275t;\320=\323G\"<\032\307\271=\300\314{\274I\234\204\274hC\306\275\361(\365<\300\344\237\275=\305\243=&\237\213=|-\033\275AA\023\275\3136\254\275\033\242==\343\300s\274\225\307U\275($\263=k#-=\017\314\206={\\\352= \347\276\275x\326\203=\305\367\231=\250\301,\275\216@\261\274\r\327\020\275\372\035F\275\276\326\334=\231\022\201\275\266\313\353<\251g\277=c\271~\273j\2237\275\312\023\276<\366\252\321\275I\253\254<\203\361\276\274k7\226=G\023\224\275\353\014\032\275x\344n\274*.==\014x\037=\370BD=>\202\273=\205G+=\312\363\314\275\006\360\337=d.\251\275s}\200=A\234\305\275\205DS\275\0143\320\275\307\252\242\274O\260\022\274\023\311\246=\030\342!\274\226\000\350\275\356;9;o\376\302=r\321l\274\340\243O\275\201\204\355\2748\320Q<\324\216\344=\250\270h=q\305\322<9\'\210\275\223\355\322<\270\020<<\020\022\375<\3322\244\274V\177\274\275_\002\312=\010\225\334\275\277\261\321\275\232.\336\275\3020 \275&ZP=\250T\270\275\2106\224\273Qe\212=x#P=n\341\217\271\301wm\274\354B\207\275\203\274\277=~F\261=\350v\007\274\021\337\310=\333\002\227=<\304\206<\366\004\255\275\\\267\034;\335\326\344<\232p\237;\300\2601=H\n\200\275a\250\334=?l\326=j\266\326;\034<\\=\363\364\262=i\t\244\275\232\227\030\275!\262?=d\001H=\355\264\233\2758\033\375;\n]M=\024[\336\274\317\347\022\275\013\352\215\275D\277E\275\343J\234=\264\251V\275\273\302R=\322\232=\275\267\032\036=\205\215\205=\002\234\267\275\345\031\370;\322 \023=\225\332\313=Iv7;6\0160\273H\353\204=\001\007\262<\375\036\352<\234\327\235=\tl\004=\234\201\254=v\241\273\275\313\223\307\275\276\242\270=\273}\226\274\253\325b=7H\222=)\231w<\330\241\353=\230\310\226=*\346\301\275\267\202\212\2731\023\337\275\030\204G=\313s\363\273&\273\251\275_\322\340=\207H\305=\374cz\273X\215]=\325#\237\275+\221e=z\363!\274\331\254\273\274fo\240\275,\347\342\274\267\245G\275\221\253Q\275\345I\207\274A\340\316\275\330\371\274<\313\247\354\2750\027u=\203\315@<;\001\277\275\325\334\356=\235\226\022\275\2527\251=,\305\270\274\370\013\345=\330\234u=XE^=\305\341\350\274o\324\220\275\314\013\244\275\335M\231\275\262K\016\275OO\223\275\351\215r\274\205\326\014=\353\334\357\274$\345\252\275;\300v\274\265\365\340=\277\027_=\177\306\310=\230\246\203=A6\250\275Q\274\004<~\025\320\275\342\235S\275 \342\373\274B\207\246\275[T\333=\250;\227=0i\336=\\RI<\354\304\016\275;\242\232\275\035u\361\272\302\265\307\275\246u\030\275y\021\223<\270\010\354=\234\255m=+G\210\275y\230h\273\302 \336=\266%\202=}\377\201\275\212\227\215<\202\272\357=2g\r=57\323\274\252\034\262=\241\036`=NP\230=%\212\352\2755\020\202\274j\223\357\275\350H^\275\373\024\234\273\360\252V\275\\\360\227\275+E\t\275S\214s\27403\272=\333y\213\275\300nd\275\367\352\021=\333\005\255<\314\266\356=|\224@\275\374\024\314\275Z+\342\275 \264\226=\202\241\322\275\007_0;\267\213\324=\252\305\310\270\346\272\324=\327\251\200=\337\342\231\273F\245\265\274|>;\275\274\233\340=\225\335\031=\322D\211\274\026\362\212=53\263;)-x\273\203l.<Q\216l\275\351u\342\275/\017?\275\267\203q;zB\215<o\311\314\275\017\\\027=\373\351\207=\222R\211=\327\020\336\275N@#:\267J\350;\200\'\211\275PF\263=\377C\267=\203=\257=\266\367\342\275,%@=\222z\314\275\210\020\227=0\022\274\275q\037\323\275\335\362\267\274\362\037\224\274&\222\222\275&K\264\2759?\207\275\3009\242=\016\001\305\273\036\275\351\275\316\017\356\275\203-%\275r\367\273\275\253\355\272\274&[\375<\227\312\343<\023\277\333<\235\252G=\367\270\302\275\273\367\277\275m\210\204=\271\030\220=\351\301\324\275\277g\222=\330\t\356=o\366?=\331\223\245=C\212\250\275\374\027\326<C\035\236=w\337\300\2753\"\335=Tu\247\275\311V\215\274DB4\275\221\323Y=\265\261\256=\023<\215\275\313\336j=[e\265\275\351\314^\275\215\020\223\275\213:5=\010\217\266\275\245~\030\273\227\363\270=\216\223h<\326\'\230<h\372Y\275v% =m\247\333\274XB\204\275S\255\274<\244\356\243=\302\341\306\275\266p\014\275\226\017\333\275%\300\261=\207\246\341\274\321\306~\275\220\315\214<\306\260\322=2\375\267\275\304j>\275\"\275\312=\254\322\227=\236\303\007\275\216r\010\275@\323\310<]\304\320=]\3576\275^\352\327=`:\366;S\213\233\275W\345\334\273\031\221\212<\026\306\264=\216\207\277=\032\304\002=\312\222\253=\256D\316\275z<\202\275\320\003\210=*\t\227=\277\270\035;\314\023\025<\002\306/\275\002\311\230\273I\257s\275S\021\317\275\002\313\221\275]\376\347=\010=\337<`7\343\275\222d\371<U\273\313\273<\270\345=\234\207\337\275\332\265\206\275\017\031\277<S:\216=Ox\346=V\211\245\274f\000j<\327\t\224\275\243^\314\272]\271\314=.\324\353\275\023fr<\272*\214\275=x\255\275\347}\313=\261M\322\275\242a\027<L&\321;\020\253\344\275\237\020\017\273\235\374\333=\264\205\263=e\r\231\275\300rf=\367<Z\275`\225]\274\216\343\203\275i\266\273=%\227\336\275\331q\216<\312\326\335=j\0203=f\273\"\275n(I=X\'\033\275\236\334\242<\003\300\3209\365:\233\275\232+\231\275z\361\344\274\336\267\353\275\241\362\226\275({\236\275\256\257\307=\275T\227=f\271\275<\000\242\241\275v\247\324\273\n\340[=U\274N\274\306\201\222=L\327z\275fs\275\275\232\260\350=\003@P\274>\035\343=\'~\023\275i\344a<\303g\202\274\332\177\037=\032\'\310\275\316\004\207\275v\365\237=/_\273<\212]\234=\361\371S<\310V\203\274\030\305\027\275\034\361\257\275\3744;\275\004\325\320=\277e\232=\236\303\277\275\225\342\245<\267\373\002<3\205\276<\267\214\001\275y\202\321=\345\313M\275\234Z\256\275\250=!\274R\376\211\275\034Dy=\375\352\004=\037i\212\274_\237\034\275\230\272\354\275t4\344<\260\240\321\275\3636\332\274\212\252u\275\271\270h=\222V\257\274\266\364\214\273\030=\237\275\266\325\270=\003\207\301\275\r\026\275=\213\231,\275_8\262\273\367k\225=\305\355\343=O\032\350\274\005\\g\275\322e\315=J\203\200\275x\270\275=0\213\233\275mQ\236\274\312]\250<.\255\200=\277\207\274\2754j\236\275\356\202\260=\\\273\230\275\017v\276=\2279\342</\204\340\275\365\013\302\274\0331.\275T\223C=\342<\206\2758j\221\275Ff\356\275U\r\212\275x\214\216=\265R\345\275Rz\030\275\025^8\273TD\233\275\311\220\353<G\216\r<WJ\211<{\247\265\275N\255\202=\302\002\323\274\322[R=\262ku\274\305\307\333=\340`\317=\2459B<\206\320\001\275\242\"\207\275\025\322\221\274\030\357\302=\210\272\035=\002_\317\2733:\204\274\265f[\273\211\342\221=\342~\263=\335\206%\275\026\301\201<\326\237\310\275\260!\227\274t\354Q\275\321\231\206=\362#\213=\232\314{<\361\316\307\275\234\r=<-a\226\275`RZ=\353\254~\275B{\350=\033\204\232\274\341\247\271\274\223\205\277=XP>\275\336\364\240<\033\364\203=\263Y\027\275\3118\347<,\014\003<\227o\347<J1\021<w\263\347\272>\2408\275\251\356\273\275=\225U=^\022\030<\003W\226\275#\266M=\023\211\013\275\234.@=\311\365\243\275;Z\270\275VI\226=\347\316\346\2751Z\271\274XR7\275\365\274\010=\261\265\340\2742=\374\274\362\200\264\275\244\210q<B\"\260\275\261\247\330\275=\300\227=\375\302\230=\2543p;\272\275f<\350v1=+\372\344=\027\253b=Y}\204\275\322\302\232\275\332\352\206\275\327\021\326=K\232K\275\303\213_=\211\231\216=\330\237\017\275Bk\224=[I\246\275\2650\243<,\240\037=\016\321\014\275\310\\)\274\321\340p\275F\214\333\2756\022@\275\270J6\274\323x\033\275;\257\311;G\236\335\274\023OT=\0233\350=n\330\201\273\001\376\335=\262[I\274\002L\341\275n+\254\275\305#j=\304\202N\275\224F\371;\201\360\276=X\034\'\2727\233\206\275\202\256\234\275j\374\224<\005J\235<\036H\266=\tc\312=\2332\274\275\245\307\000\275\010\372\215\275\037\274\301\275-\201\217\275\210\026{\275.F\223\275\257\234\353=\265\264\247=\030\315\222<\001\232\306\275\217\367\253\275,\022\344\273R\275\334\275_\277}\275\375\316\221=\\_^\275>R\357=\351Q\246=\261`\203\275\363\324\244\275-\276\220\275\247\356==\034\322\270\275-8w<\205\234\330=\227G\302\275u\213P=*\024 =9\231\r\275\344CG=\021Z\032\275m\202\224=:\325\177=5\231k\275t\250*=\276g\233\275i\266\341\275\023^\317\275\022\2302=\330/\250=~\327\274\274\003\211\276\275\035(1<\030\265\322=\337\262\263\2757\364\005=\345\004O=\207Y\301\275\201\360\223=(\377\310\275\"\277\341<r~=\273\032\r\205=\370\200;\275\215y\230=q)\354\275\\\262\201=\304\375\325\275\n\371\024=\215C\313<hxC\274\027P\023<K<\247\275P\356\361<\315\036\264\275\215\351v\275b\341\221\274\3631H:\013\302\037=\352\276\333\274\334\336\212\275\363\275\213\274\"\322\274\2758\314\341\275<\0044\274\202\030?=b\227\357\275h\210\303\271_!\304=w\247\266=\346\245\377\274\r7\335\275\200\337\356\275Hc\326=\t+\027=\254\242\260=\227\346\273\275\233\342\036\275\034\203\217\275\"\016$<YE\335=\234v\224\275\006\231\251;\343uj\275\t)\221\275\210\200\215\274\362\201X=\361\311k\275\275\037\227\275U\243\350=\222\200\311\275\273p\306=}p\362\274\363\270\032\275\371\034\250=G\217\277=uC\260\275fn.\274&\227*\275\220\375\204=\231Y\271=7\221N;\371\033\237=\252\217\020\275\335\356\355\273:\207\361<\201\223A=\336\241\313\275\225HG=\234h\352=4\372\'=\253\177\233\275T\251\335=\225}\316\275G\274\017=\340\253\312<^\213\241\275\343\336\223\274\013\2125;\266m\330\275i6\272=\207\342Q=\037A\231\275\003\354g;\025\362\347=\305\306f\273l\3356\273KF\203=G\034\311\274\310\213\352<e2\300<\322#\356\274Y\230\336\275\022\315\027\275!\364\371;Q\324\032<\253\215y=\n\310\245\275\035\320\245\2756\224\026<\242\253p\275=4\344=\240\317\316\275\351\233\230=*A\256\275\013\336B\274f\0009=\205\330\356=\234f\220=\217\260\222=\016\363\034\275\245\021\203\275\370\271\262\275\352\342\323\275g\"\035\275\017\004\321\275i\000\'\274\2416\226<\026\365\336\275=\273\306=\353r\234=\032D\020\275\205E\235\275\373\356.\275\225\333\220=\002\225\314\274\327\2766\275\235@\247=x\232A=\367\\\306=(KP\275+\263\225\275\366u\322\275\213\212N=\253\202F\275\006\242\204=\274\221\307=9>\261\274\275/ \274\n\223\236\275\026\365\263\275\006!\225=\021*\247\275\340\224|\273\237?\265<p\203\320<\307\"\274\275\233\267W\274\345\2670=\316/\315;\031\021\272\275\t\023\306=\326\3079\274\241\315\354<\226\335\250=\311z\021=\257\001\332\275\245x\322\2751E\264;\327\274D\275\376\024\354\275\353\351\332\275pA\002=y\273\371<o\232\223\275\221:\306\275\306\274\333\275\221n\331\275=\352\247=Ul\351\275 \223\244=\354\337\227\272\206cW=G\265\020=\230\2277<\034\366\224\275\353y\242\275m\356\241\275I\313\270\275K\n2=Q[W=\322\023\332\275\224\260v\275oD\305\273\203\034e=K\253\334=H\336\017\275H\261\245\275\207\342;\275\307{\251<\\\255\240\275\324\330\345<\344p\350\275\221:\342\275\336\373\177=_.\262=\236M\221<KL\211=k!\"<\023\214,=\022q\356\275\361\241w=\311c\336\274\333~2\275\367\250\213\275\034\005\320\274\034\303X\275\307\371\202\275\361E\276\2758\260s\275\221\236\223=\345h\355=sB\267=g\370\342\275|g\230=\037\225(=\302\001x=\244\341\350\275\260\271\350=gW\225\275eA\277=8\026\207\275oBU=\r\343p=\276\320x<M\261\352\275\311\035\204=\311\364\326\275\353\377`;\306\335\255=\205\311>\275\001_\013\275\2237\313\275\241\332\025\274\014\003h=\020$\333\275\247\374\233=`\264W9y\377\316\275\336n\213<\314b\276\275\240\030\232=\3527[=\204\312\225\275RD\214\273\364\347\275\271d\233\350\274m\351S<\331C\247\275\201G\327\275d>\267=\360\025\235\275\01445\275\360\'x\275{U\231\275\310bM=\027\365\247\2749(d=\332\225\305\273\206\220\257\275\266b-\275\366\230A\273\226\243\325=\004\375\313\275\017\360M=\307b\024\275\210A\347<L\377\235<\345\324\202=\312\270Y\275s\254\021=M/\201\274\365d\314\274\350\333~\273\275\313\230\275\032\221\265=\216\027&=\333d\000\272}E\\\275}a\343=\360\337\345=\350\222\014\274\305\007:=\260\014z=[m\016\275\365\250\330;\254\356q=\237\3453\274\312D\272=n\223q\274\221\257\200=f\036A=Q\320\356=\0333y\274\371-\252=O\033\250=9e\274\275\337\311\307=\215\227\373<\261p*\274\277\215q=\016\023\325\275&\202\'\275\006\376\210\275\003\016\277=4\233i\274K\237\t=\306\247Y=\277\243\312\275[\330\213=\267r\217=Xj\252<]\005\030=b\373r\275\204\306\n=\330\324\332\275o\221!=K\t\200\274\244`\315<I\341e\272\325m\314\275\025`\326<\324\375\250\274\314\343)<|\336\000=3\023\301\275\275ix\275 \327\313=t\266\303\273\262b\353\274\n\241\306=H\313\301\272\3765\242<>\254\202\2755A\225=\300\001\251=\247\202\345\275!\177\220\275\027k\257\2754\267:\275\221+s;\224Y\342=\n)\315\275\325\211\017;V\322\243<\354\300\035\274\206~\271\275\311h\303=-\316\305\275\027\222\253\275\355\223\233\275\301l\265\272(t:=\331\030\316=|\353\323=n\205)\274\352D\251=\0166\267\275\344\234\305=/\030\225\275\223\360-=\004\373\202\275\346\271H\275\341%\312<j\023\332\275\216TG=\326\365\027\274\"\363\356<ML9<\023A\350\275\017w\267\275e\007\276\275\233\360\257\274\367\270\272={@\271\275e\316\336\275\030b\251\274\035\266\355\274\362U\013=c\225\333\274\335w\201=\010c\226\275\027\177\236=)~B\275[/\226=\201}\307=&\263\272\275\366\321b\272\022\325\266\274\223\250\333\275\34620<\001/B\275\346\241\341<\200\340\325\275\306\201\214=5G\215=D\211\320=\331f\347\275\031\376\331=\010?E=\351\205\302=2c\246<\030q\203=\205Z\235\275jr\216=f\027q=\373 \202=\317\306\025<w+\264=p\300\212<\033\332\262=;o\310\275v~\307\275\255\237\213=\272\240\224=oD\350\274\236\020O\275@0\275\275\022\326$\274:3\033\275P7\234\275H\221U=uv%=[\325\215=\303\311\206\275\264\"e<\242\370]\275\007\360\332\274nB\240=\272o\316=\221\353\256\275/\310\243=\360\245\350\275+n\262\275^\371\225=\346L\316=\0317?\275e\021+=H\244\006;\337C*=\344\206n\275&\350\267\2750\3506\275\035\360\242=K\372\347=\r\256\203\275w\320\231=kW\252=\237\022q\275\335\023\347\274M\357\010=\251\031<=\206\220\211=\213\241\252=m\024J\275\236a\230<\252\263a=/X\245\274\030\003\344<\037\021\237=\"\303\272=&Rb=\356&\016\275\025\250\037\274\312*l\275\277\327\033=\325^\215=\221>\261\275\376\375#=.\370\363<\231\316(\275\374\241\266\275\001\343\330\274u\2773=\356Z\260\273\010\220%=\351fz=\037\265\"\275[\250\303\275i\270\243<n\351\210\275\321z\331\274]\324\311=\035\355\260\275\\\206\t\273d\214\216<\035\351\214\275\322e\n=\220\334\262\2745j\301=!\201\232=\220\302\230\275\231#k\275e\347\327<\240\031s=\030\310\343=E\243\004<]C\305\2750;e=\367R\247<v\366H=,:\257\274\302\342\340\275i\032\276=\322b\371\274Q\036\344=\035\245\240=\350\230\245=\244\000.\275Fc\326=\2304\301=\272\330i\2751>\326=\203\372\311=8a\211\275\322W\347<O\314\343\27530\303\275\323\247\233\274z\327\301\275\354Q\'\275\000\344)=\205\225,\275\33484=\r\253\250=T3\033=f\020l=\266\377\302=\364\323\240\275r\036\353=\205H\353\275\345\315\246==\246W=\266X\337\275\3648\366\274\264p\205=!4\340\274#\246\242=c\t\262\274\nW\363;q\364\267=\021@\017\274\000KK=\3262i=\034\022\304=/\302V\275]\261A\275\244Q\336\274\313\352\333\275\r\375\220=\006\265\325\274%\313\370;\223\274\213<\261:\327\275\361G\226=Pz\203=$\363\274=\325\036\311\275\202bY\275\013\225\002\275\346d\251\274\323\337\207\275\317\270\233\275\213\350\252\274\224\002\t\275\263\245\022\275\2306\214=\212v\216=G2\354\275\005\245\334\274*\360\240\275\313\344\003=Wt\340=\337\023\215\275\317k\275<\023g\303\274Kw\234=\300\346D\273{\333\277=\230\226m\275b\302\243\275z\311\252\274\331\343\304=\251\371\254;\330\257\264\275\221*\236\275\035\261A\2759N\306\275\202\256\244\2750\362\264=\324n/\275\\\014\240=\343-\206=l\212\270\275\341^\304=Qt\240\273\264\327\316=g\363-=\226\037\265\275.%\335\275X\365\234=\373A\217=fG\274\275\372\r\251=\223\224\334=\367l\310=\020R0\275\276\215\251\273\276\336\350=\342OR<\236%\207=\211\327\3559\277\350]\275\254\204d\275]\312\377\274\370\225 \275\231\216\240=\366\306)\273\\\271\240\274YX\236\2751d\225\275jP\254\275\342:\226\275\366K\355\275\344\234L=\366\241f\273\323\263\027\275\002L\320\275\204\336\223\275\032R\310=\353w\233=;J\020\275K\316\264\275\203\230U\275k\017\253\275\2008\203\275*\252\241=vm\253=D\200\003=C\206\035\275\330)X\275(\201<=\207\031\255=\005\316\322\274\300\026\033\272\n\340\330=\032U\311\273K\322d=\371\n\316\275\020\333\320=\"A\315=\224\273\217\275\325\252\214=u\343\327\275\026\215\026=\235kD<\024\032\231\273!\231\351\275\202\217I\272F\004\252=\016J\346<\336B>=\010\315\277=\233\257\254\275\021\265\213;U\365\325=\177\333p\2746\313\355\275\376\255W\275Q\323\311\275\322p\267<\320(\330\275\211\344\345<X \252\275\202\240\'\275iRO=\372?\240=%\002\1778v\275!=\t:\323\275\352\340\226=\026\034\201\275\0039\201=\360J\031;\363s\313=O\220\256\275\3301\331\275t\035\334=\202\375\261\275\270\025\331\274\277\036\341=t\215\251=lX\206\275m\277\302\275K\316w<\003JP\275\251\350\023\275\345\317\232\275\233\201\342\275+6\236;\013\2367\275\244(\261\275\006\014\036<Q\246\240=\236\274\023=\201\324\267<\276\263\336\275\265\334\375\273\223\340\331\273`\327\204=U\342\347\275:T\300<\220}\237\275j^\213\275\316\223\257=T\271\205\274Fj\350\275\345a\211\275\32662\275\345<\200=%\023\344=\237\257o;\205-\021\275.\243\027=P\225\324\2757\243\324=?\277r=\210\320U<\256\202\275=\347\'\005=D\310\217\2748\370\200=\017#n=\214\217\302\275\310p\272\275\300\241\260\275\336w\317\275&\215$\275\316\305\010;UB\231\274\"\022\000\274<\233\265<\005\365\335\275\350\276\254\275i\372\231\275\001\376\261\275h(\215\272\024\276\202\274~\227\211\275\0055P\274\253\001\255\275e\260P\275\2054\250=\233A\223=A<\031\2752w\337\275\363A\231=\361w3=\320\217:\275\217\207\244<\346\034\274=\273Y\245<\314M\304\275\306C\260=Y\\&=\2516(\274\277\322\356=\371\251U=<\037F\275>R(=\240\t\321\274\264\266\313\275on\213\275\310\271p<Kq\351=v71\275\204*\200\274{\201\345\275\222\024\254\275\014\2633=\264P4\275B\376b=\242\242\234\275\r\215d=\343i7\275\236\035\211<\014\331+<\274\234\022\2759\252\017<\327\003\n\275LL>=/\327\034\274\n\024\214\275\350g\031=\350\314\323<62k\274\344\213\205=\323+~\275\010\261\307\275\357\217u\2757i\347\275_\346\301\275\276\305\320=N\336\347\275\325\356_<\257\333\313=\254/\235\275\224|\376\274\357h\327=Sg:=\272hY\275hg\265\275n~\216=\306!\233=\223\362\204\275\210\030\222=\211-\321\275\353\265\017\273\026+\324\271\3143\304\275\316\207:<\352\325\013\275\334XS=U\316\264=K\327\302=\330\244\265=n\265@\275\204\342H\274b}\350\275\016E\252=L\365\336=\361K\t\275E\241\007\275\244\277f\275w\252\000<{\335\262\275\017\224R\275\332y\303=Q\367\004=\001\022\244\275\237\335\303=\20612\274\270\255z\275\333\376\206\275B\224\347\275:\247\312=\025\t\304\275tU\271\275J\360\246<\216\016O=\036\215\235=\223\300{\275\247V\254=\003\370\340;\276\010\360\275\230_\305\275\363\210\276;|\367m=\347w_<y\320\216\275\352\275\241\275-\0021<1R\005\275I\315\327=^A\356\275R\274\312=f\316\312\275\315\373\214\275\247@\275=\220h}=\273\306\272\275\0233\207\274\237\036R\275\330`\023\274\251\206\\\274\256\177\262<\236\225\343<\0004\271\275/\232\355<m&\221\275\277\355\210=\373\230\222=\330\230,=\202\242\232\275\035|\214=\021\260\367\274\030R\303=l\255\207\275\335\375\235\275\366\243\r\275\246\275\244\275<I\000\273\363@\030\275\330\207\221\275\253U\334\274ao\251=\004\365;=\212\005k\275\321]\020=\20019\275\301R;=\305y9= \247\220\275\322}\007<~\276F\275\3176\277=\251\214\220\275M\323\000=\344\001\203<\241I\351\273\242\\o=\260\003E=\225,)</%\223\275\216Y\016\2754\\%\274\206\000\271<\267\234I\275\226\307/\275\203X;=%\321\266=\251\006\351\275\3369\314=O\345\';\372\300\023\275\222\002\335=\017m\247\274\016\366\354<\022[\301\273\256\241\323\275\027C\226\275\230\324\272;4\223\316\275\331\253\351<\347\372\331\275~=\273=\033i\211<\244\207\305\2756\302\255<\324@\r=\273qy\275\277\343\340\274q\346\031<wN\366<\345&\2729S\344\212\275\206b\303\275$\007O=\337\307o\275\341\377\331\275|\r\231=c7\261\274\245\n\017=\270\230\n\275\006\255==\206Ja\275\230\340\032\275\t\370\020=K5L<S\367t=kr\322\274*\342t=\202\256\254=rG\352=\310\000L=\257\220\301\274\027\021b=\026`\030\275\230\2560\275\342J\357=\267\210S=\336\372 \275\205\307\304\275\320\032\312=3`\334=\356,\215;\347Z\232\275k\327\272\275\216\331\337\275&\342\321=Y\235)\275\212\260\317<\345}\244\275\205]S\275\031\014\370<\207\202\323=P\365O\275\217\343p=cp\207=\263\203\353\275\345\240\316\275\264\235\237\275&!\030\275\"]s=e\253\334\275e\306\235\275\264\273\360=F6\327\2752]U=2\226I=\270\207\235;\347\247\264\274=e\325\275\254#U=\356\333e\274\316\371\236=\206\326\343\275\2522$\275N\234?;1\035\037;\371\021\331=q\366^=OL\356=\306\'\311=\354\004C\275Wf\250\275\202N\271=h\242\274=\305\364\033=\"\235\262\274\025P\013\274]\335s=\377w\307=\2617\216\275L\361\277;\361\264\256\274\342\335\265\275oG\240\274x.\253\275\250|\311\275K\306\232<\275\353\220\275j\321\344=*\373\033=D;\220\275\020\027O=i\024\323\274\231\277\302<\336!\212\275c\365\330\274\377S\237\275\304\311\344=\374\347\032=\322\303\031\275*\225u=\324\255\007=\240-\024\2753\200\350<\\\006\335\275T\360\316\275\201\271\231\275\251\303\305=\237\023\232\275\373d\007\2756h\246=J\004\026<\262\272\032=\023\231r=Z+\332<\314\214\212<\271\277Q\275\227\217\227=1K\247\274]\224$\2750\207\331<\017\236C\275K\347\033=H\006-\274\234W\341\274\264\260\210\275\232\215\224=\004\035\213\275\237\007\263\275HRK=\250\025(\2745\327c\274\316C \275\200\313\252<\327C\002=\267\226\265<\241\032\332<VG\345=g\341\231=\347\244x\275\255 U;,`X\275_\371\275\275o\313\350\275\255\207\034\275\227\365\204;Xz\355\275\201\216r\275s\031o\275v\024\207\275F\303$\275c\374\366\274\376\247)\275\341\325\346=\366N\210=03\261=\336\252K=\307\313\240\275\000\252\004\274\363\254\003\275\004\n\247=z#\252=\306\243\317:d\343w<H\250\324<\215\247\272=[5\035\275Oi\333\275\252X\323\275\233>\350\275\342\364\310\275\345\230@=\035\237\337\275E\253}\2757\310e\275E\264\326\275\227\243\360=\302\001\263\273\221`\356\275(\\\272=d(\355<\204\r\352=\374w\300=\241u\336\275\340&\216=\247\000\307=\311\263Q=r\313\241\275Pk\320=\256ED\2753\356\317=\227\241A\271Q\301\301\274U\027\234=?tg\275\005\367\272\275\3462\254\275\326kt<9C\351\275\231\007\270\275\205\033\272\275\'\312\240=\236\251\232\274\3244|\275-\004\\\275Up\225=\374\250\344\275(\236\275=\354 \227\274\207p\007\275\222\326\240\2756\364\213\274\224\3413\275\321%\242=\031$\202\2758\000\333\275cS\346=f\3366\275|\254\273\275\267[\205=U\267#=\302G\277\275\027\304O=\342\t\327\275\207\350Z\275\020Cj=\274\201\'<A\341\006\274\177\356\254\275\'\305\340\274\016e\371;\270\364\216\273H7/<\214\256\251=\247\364\352\275)\272\323;\205\374\223<<6M\275\004\335\354\275\356\214\324\275n\252\333=\203W\350=\253\201*\275\324\347\313=\333\342\231<\352w\257=#\304\270=\337B\276\275\037\244v\274h\3251=\232\365?\275B\257-=o]}=V\0313=\255\240\235\273\354Ky<\211f\235<f\003\216=\372\227\205=\254\217\276=\240\235\216<>\334\345;\245\347\357\275?\034\313=gh\202=\251\022\204=yG\201=\033\t\247\275\t\034\377\274\367\205w=An\310<\256d\263\275\rIz\275\371_\025<\356\224\216=Mu\202\275\212&\311\273Y\347\321\275\310\367\226<C\002>\274\013T\260=;\260\005=(\326\325=9\362\266=u\350S<E\240x=\016R\324\275\345\263?\274\200p\005\275+g\226\275X)/\273\336\347\306\275\216\'\312=\376\237\301\275V\256T=\000\325\323=I\237\352=h\237\327=GxL\2753\262\347\275\270\217\"=V\305\324\274\225\365c\274\\0\356\272\'92\275\213\322\273<\364\237p\275\337{\237\275)\232\316=\361[\177=w\202\236\274\334\361\202\275\010\300\246\273\232\311\312<\317\341{\275I\024W=\016(\220\275\237Y\237\275\331\366\316=\3002\030\275\300\325\236\275\2512\215\275\270\023\272\274\356\037\021=\370\270J\275\315Mg;\232\371\325=\177\357\225;\203F\365\273d\254p\274\356\236v\275\025%\213\274!\014R\275m\345\215=\360\010\376<\352G\307\275\002\250v=\3150\222\272\230\254\322\275\274H\206\275\317\345\332=\202V\n=\350\001\346<\270\024]\275\024J\242\275q\242\216=\013\023\022\275r\n\001=\301%A=\035\013\244=YL\032=\252i\206\273\3336\302=\370\260\320<\177\001\331\275G\240\023=\030_\037\275\017\342\335=~\2365;\312\033\237\274\037g\224\275 \004\277;\034\227z;\356\362\240\275m\257\231\275K\\\202\2753>\256\275\232\345\301={Q\334=\231\316\373\274\271\223\325=\225\212\214\275\344js\274\027\205\344\275\207\222\204=\225\361\016\274\033Z\t\274\0350\363<\031\241\200\275h\216\261\275\316*U=wn\321=\275V6=cow=\210\205\244<pi\202=\026 \023=\340\275\341\275\222~\267=\216\021\020=w\016~\275sC\225\274@\234.=lc\341\275\227(m=7A\257=\217\334\245=\t6\356\275)\376/=\235\361\336\274\tK\243\275u\360\247\275w\364\323=\303\207\215\275\343W\217\275\354A\003<\213T\214=\027\017\237=lU\005\274\206^\257\275\020V\300\275kG\271=RV,=]\211\317=\304\375};\006\363T\274\275\t\334\275\022\200\316\275\312?Z=\250\235\250=\235XM\275\"\365~\275\251\254\212\275\225*e\275J,\234\275@\203\005=fM\326=L\374\304\275{\r\266\275\332\261\344\275\300\275\\<\252.!\275g\222\235\275\233\372\203\275[1\204<\312\272U\275\334\2549<\t~D\275\2037\367\274\036\242\250\274\233%`=\302\204\346\275\216A\227=\246\360\236=\327\226\316=\250\215\237\275\343\2344;JA\201\275\371\213\240\275\250\030~\275\300\016\242\275\177\334\315=\362\260\306=\355\303\273=\3026\273=\276\354E<\"\204\375<9\006\251=\'X6;\264R\303=`:4\273\303T<\275\005:\354=\341 \263\275\324\312\'<U7\325=\254\207\267\275\014\333Y=JD\205=<(\342=\"1\216=\n`\275<\253\301\016\275\205\244\023=|\001\307=\375Y\276\275\326\231\346=0\246\r\275\n\237\220=\016=R\275\234\221\332<\031\306\220\275\006\372\217\275\312_\301=o\007\363;\022\353\310=\264\022\261\274\362O\333=+\021\261\275\214}\244=`\035\271=\305D\330\275\214\335\321\275M\362E\274\034\252\354=;~[\275\220\375\273\275]3\223=\366\226@=a_W\273\313\274\361\274m!\301\274v?N=Un\266=\030Zf\274\337\270\305\275\375\010\300\275PFe\275\004\177P\275`V\r<\253C\020=\035f\316=jU\"=1\225\240\274\356F\"<\243\014 =c\016\324=\317\323\202<f\323O<l<\204=j\316\203\275ubX;\337\352\245\275\033\034\326\275<\246\227=\r\217\227;\014zP\275|>\357\275\367\2548\273\034M;\275a\277\214;x2\243=slR=`\237\315=\222\307\232\274:^\353=\020{\347=\315]#=\260\316e=\365\226\305=\315\032\225=\254\311\322=6\303\313\275\267E\021=\301\226\226\275\347\315\274<\n\336\204=V\256\235<\374\247\274\275\251]\212=\266O \275\371\244\024\275\253\014\257\275\341O\017\275\375\241\023\275\322\376\215=\"\026\275\275\006\233\236=7ia<\205\212\217=\234\205\233\274\257H\323\275q\000\211\275>\266\253\275\360\330\206=\241\307\266\273\324/\265\275\200\342\315\274SsT\275\021\031\212=\tx\201\275\326\306\301\275\372\245\303;\240\000\247\275`\306\315<\364\346\335=i7\354\275\364\262v\274\304bQ\274\024LO\275\230\240\327\275\r\356\360<\331\263\245\275t*\217=\2709\271\2752p\325=\rB\362\274sH==\311\234\346=^K\306\275\324\024\275\275o\344P=B\320\272=,\361\207\275m\327*=!\340I\275\276\261\333=\216\022\214\275ML\250<\321\237\024\275\274\030\230=\323)L=\354\r&\275\205\365h=\207\025U\274\376\210\355<O(_\274]k\250\275\232%\226=$\253\344\275\332d(=\264L\256\275\347\033\206=b\314\276<\222\256\007=\000\304\245\274yHi=\347\360\325=\202\r\026<\221\272\211\275\224In=Vr\255<\312\207f=s-\356\274\225>J=\360\267\375\274\271f\273=W\004\357=\321\006\237<\250\351S<)P\221\274\307\366\200\275\230WG=J\301\272=\236\327\t=\017\304\214\275r\276\230=\235\330\362\274\207\032\316\275#+\340\275\243G\276\275h\361\201=\276Y\314\275\024A\261\275m\326\205\275\301C\313=\371\226\016=\265\357\305\275\010\244\263=\'A\251=]\260#\275q\257\312\275\237\215\020<\316\276\256=\346\204\352\267\205!)=\223\212\311=\350u\246\275\323U\017=\226C\020\275\243\"h<<\250F\275bN\257\275&\265\312\275GD\221\275\215I \275\016\274\357=u\322\201<A\341<<\346\341$:\316jH=\323\356\233<\276\014\246=\206}\330\275\255\037\355\275\372\315\241\275TI\233=\200\212\277=\310K?\273\215\273\324;b\026\247\275`\264\214=\">\264\275\261&t=VB\321=\221\004\272<J\212\350\273VX_=\206\317\330\274#\366\351=m\343\344=(\3413\274\212\300A<\373\232+;\357v\332\2752\376#\273\244g\247\275\255\352S=\004gk\275}n\344\273\266\324\302=\023!\360\274\344\262\302\274\r\373\271=9{\315\275o\332%<\205a\337\274\254%n=\255:\312=\276T\350=\3309\246\275&\332I=\370zE\275\035\216\300=\3607\210\275\270\351\210=\016\010*=\rk\210\275\222\035\320=\237\324\301;\023\245\232\274\375\\\035\274\255\177M\274m\234l\274\3434\312<|`\005\275\304\001\213=\235a3\274\331M\322=*\207I=B\222\306<\0041\'<H\255[=\031\n\005\275\354!\325=\311V_:]P\256\275\025\346\255=`\243\367\273*=\273=h\035\231<\212\330c\273\314(\001\275,\307\243\2754\245):\220d1\275\366\351\332\273\246\366x<\252\217L=\'\266\302=\371\271\241=\204\014\006=\302=\301\2759\253\206\275\375y\276\275h1\371\274V\363\247\275\210\230\244\274\365\026\201\275\350\203v=\r\334\270\275\355%\314<\277\220\006=\275\002A=^\351\233=\303\334\251\275\354\364\265\274\200X\327\275\342\353\235<\013*\305=\273r\214\275\036\344\261\275\224\355|\274a\243\022\275\272:\215=\253\340\332;\350\340u\274i\212\276\274\276/\336=\263\326\013<5\275\027\275h\360\333\275\232\205\225=\363\030D=\234P\352=\177\335\347=\2704\267<3\\\343=\027\220c=\027\253\226\275\337\030\366\273\243\331\256\274\310\254\213=\2542\236\275\200M\014<\325d\310\275\362=\230=\274\025\252\275\000\037\235=T\315\230=\257\312\313\275l\355\306=Sc\222=~\234\311\275A&\377\273\3705\277\275\313I\303=\231\272\361\273\002\022Y\275\301\371\350=\256(O\274\001\225\263=\016\r\\\275\227G\353=1%g<\342\035\316=\253X\252\274\243[q\274\356\332\232\275\324\177?\275\326\242\350\273U\016\253=\025%\033=\210\261\261=\267\371\350\275\275\300\305;\007\252\221=ae\370\272\362\300r=\252\254\303=\n(O=\021\022\003=w\t\256=s!\342\275j{\265<\253\273I\275?{\245=\3438\212=\364ER=m{D=\216\347N=\267\207\265=_UH=\000{i=\033\360\013\272\014\313\226=\".\260\275\310}N\275\264J\322\275|\350\222\2750f\241=M\014\253\275\205\374\252=\214+\265\2755\366^\275H\033\355\275\246#\234=\326n\337=\020\255\360=\'=8\275\003.S\273\255,\025\275P\277\360\274q\224\375\274TF\314\275\327\210\225\275\324g\275\275\021\336X\275\243k\035=\336i\327=\356\017{=\0053\223=\361\204\211<\245S\036\275Dq\250=t\017[\274\033B/\274\217\217\321\275t\275\276\274\321\003\036\275\033K\277;]|\255\274\267\241z\275\270\304\227\275v5\022=\\\025\t\275\301\247\217=3Xl<9\236\362\274\377f\252=\3659\333=\210\372\303<T\256\353\274\240y\245\275\002\341b\275\256K\016=\261\272\303<S2j\275X\251\267=\0048\211\2734\004\260<\364\214\334\275N4\325=\213\276\224\2742\007\321\275\367\220\252=_{\246\275\ts\005=[o\016=>\354\264\2755~\302=\362\326\357=\320\221}=\014;\314\274F`\277\275\270\346\332;4\213\376<\221\347\310\273\325\244\236=7\253\213=\355\305\031=\203\200\347=q\017\343=\204=\236\275\003Q\307\275\315k\302<\301\000\352=\357Yt<#\2040\275\213\353\304;\310x\337\275\243\023\016\275l\373\211\275\014\341`=\245\230\036<\020r\303;\352\275S=/\277\322\274\034W\223\275\\`\205=\350\331@\272\212\"\177\275\212\003\304\273\347\305\231=Q\020\247\274\352\313\257;\344\265\335\275\306\352\024\275\266q\253\274\323\200\235=x\000_=\221\030\242\275\376\303\211\275\036+\356\274\325\007\001=K\263\312\274h\342\236\275S\213\356=a\273\213\275U\255\337\2756x\221<X\305k\275\005O}=\237z)=i\341+\275\027\013\326\275pu\203\275\215\200\243\275!\323\360\275a\263\333\273\234a\231=\"\234\226\275\203\306\220=J\000\035\275\2131\212;B(\355=\325\377\236=\321b\002<\376}\220;\265k\253\275P\027)\275I\0004\274\231\306\320\275\250\234|\275\010\234\250=0\010\206\275\211\222y=m\026\261=\220\271\357\275\265\333\215=+r\347<\027\237\017<,D\233\275\351\313f\274\2152O\275\305\357 \275>\006\"=pU\257=\021K\221\275\260+\344=\306+\276\275\341\251<\274*Nh\274\340J\210=Gp\261\274\203\025\216=\254\223\267=\313\247\203<g\037\343\275\"\2639=\n\255I=\377\037\360\274\016\373\372\274k)\320=)l{\275d\246^=\002\225\270\275\366\351\327\275\321\355\325\275\220%\327\275\'\010\237<\207\037\263=p4\224\273D\361\242\274\373 \340\274\036O\'\272cW\333=\'\227\363<(!C<I\235y=\304\331\336\275\366\355\230=\2278\350\275\036N\003;~\341\273\275\251\0250\275J\303\261=\365\237\242\273\376\303\204\275\257\313\246=\236\274\022\275\212\350\263=\353F\255\272G4\254\275q\347O:E\312\271\275j\337\272\274lRk=a;_=\201\330\212=\374\346\311\275\177\360\346\275\351\325\241\275d\276[=z;\267=z\037\353\275\272\364\231\275^\215\221\274\254#\270=\355&D=c\334E\275\'\024\232\275c\357^\275\236\310a=.\375)=\214/\003=*\324\343=$:\002\274 \256|;o\271\022\274\t\307\256=_\354\274\275\220\255\232=\000\017\242<u\245e\274\276z\342\275\354\302\204\275.\356\022=\311{\377<Tq\321=\367\'\303\275\352&\271\274\266\035\234=!*\242\275\032-\000=P\215\250={D\225\275\177\244\226=J5\346\275c,\256\275\245-\025=$\374\350=\035\264\266=\336\t\274=.\034\363\274\017\350/\274\177\330\307;#\232\335\272l\\\237=\333q\277\274\375\274\203=\022S1\273\325_\245<x\3078<j\307\205\274\255\204@\275\006\334f=\255\036\236\275\336\346\231=I\r\341=3J1\275\340v\023=\306\347a\275\037\016\022=J\235\031=\241\371\335\275>}y=\215-\265<\266\217\367<v\302\364\2749\243\024=\312\236~=9\226\206;\025\355=\275\215\225\262\275>\021d=\200\264\222=\315Cc<\026q\266\275\370j\010\275\335\260\364\274\313\003a\275G\255L\275X9\224<\347\277\t=*\005\274=\254\010l\2753b\324=\374\017\372\2735M\301=\271\225\214<6\347\307=F\345\251\275;\005\356=w\343\037\275\221%\313\274\024\313\220=\031p\211=\030#\004=\223|\216=`73=\351*\025\275\t1\276=:`\330=~?\307=t\341\033\275\257\030\237=\340\235\335<\344\355\025=k\375\026=\234bu\273\357z\215\275\342\244\001<\362V\310<\256\315<=\263\330\275=\317z\304=\013\372\346\275\300\274\330<`\306\326;\225\256\226;\314\225\021\275(\\\261\2755\251\344\2758Dm\275\026\360\016=\342\267\227\275*\265z\274\321\301\300\275*\337\210\275\030\362\236=\202\270\266\275\372\232h\275\232n\330\275\312H\237=\212rk\275\337\202\000\275\203@\315\275\202\316;\275\374\370\234\2744\035\330=v\026P\2750\234\020\275\272\267\353\274y\272k\275\231|\272=P\241\311\273$L\235=\272\262\230=W\036\314\274\005B\266=J\354t=\314@L\275\000L\257=\335R\346=\365\247\267<SB\247\275l\277\357==\207\227\275)\315\344\275m\2155\274\204\3324=\316\301\345=W$\262;\t\305d\275\325\363\214\275\274\222\203\275L\256\335\275\245\326\377<hN\260=~\333]\275Mg\347=\306\350b=s\320,\275\025\001\341\275R\027\234<\307ku:D5\255\275\243c\340\274\212\345\243\275\375\313\274\275\236\203e<-\204\001\275\364\340v\275ur\270\275\244\327\342=\321\306P\275d|>=Oj\355\275R\256\255<\231\032\002=`\303&\275&\334H=\207Y\332\273\316X\336\275 \304Z\275\225=\277\275cJ\005=\022\304a\274.?\273;\342\257\022=\246\250$\275\332\253\354\275\026@\013<fZ\336\275-X\266\275\037G\256\272\220t6=\206E\360=w\r\016=isM=w\324\370<\347\032\223\273\321l\224\275\257\217\226\275\035\334\213=\256\336*\274\263\017\355\275\354\3574=s3\316\275\204\273\334\275\020\275\330<\353\211\254=M\326\232=|6\356\275\305Y\212\274\352\343\347\275\363\0351<\023\240\207=\374\377\233=\260\311V\275\343\362\001\275c\'x\275B{f\275\316-\336=\364\201\322\275\355K\237\275\257\017\032=\206\357C=\332\223\302\275\207(\217\273\242\331\202\275o\266\244\275\264\323><y\213G=R\221\317<\032\210\337=\013\375\237=\215\347\235=\035\331\235\275\356 \326=u\302\315;\333*\215\275\252\256\255=\233\3146=\2349\265\275#$\263=9\374V\275\002\206\372\273.|\223=\224\323\306=\\\236L=zl^\275a\212\302<\305\231\200<\325\367\202\27479\306\275\372\240\220\2750k:\275G\034\277\275\020\224\001\275\375\302\250=mS\224\267\215|\275=\274q\212\274Hs\312\274?]\201\275\224\001\245\275\021\253\320=\231/\243\275(\215\035\275\334\317\315\275E\233\340\275\222\036\022\275\233T\245\275\341\351B<\331\377\307=\336\312\013=\203\224\343\275o\234\201=\321\324T=8\020\022\275fB\214\274\226e\200;\273(\205;E\325\227\273\217m\220<[\316\352\274\022\366\204=nI\342\275\267M\333=\027\341^=h\206;=\342\213\202=\233\000\232\275\356\013V\275\231&\256<9~ \275H&\225<#o\216=\365\ti=X\301\260=\3568\264<]\327\022\2751BY<o\235&\274\342\"\314=\305M*\275\010\306\330=\203\355\341=\010\221\366<\2379\262\275$\306\212=9\255>=_8B<h\253\331\275}Z\222\274\321\024\224\275F\276\311<\224\2564=\214\317\321=\'\337\276<\001\t\220<R\327\215\2758i\206<\271u\270\275_\260\341\275\360IE\275\226\203\225=\314\016\221\275\316\210\344=6\377\032\275p\314q\275\033\302%\275\272\003\234;\206\030\307\275\237\r\202\275\352\025\215\273\350\217\200=\004\306\226=\352H\302\275\022\004\234<\207\223\306\275\334OS\275\006|\225\275\335\224\243=0\277-=\233\355\266\275\230\001\325\275\005\241\345=Gi\304=\325W\242\274*\233\346=\361\340\262\275\312\202\362<\364}\222<\326\000\314\275\361\225\025=\020\177\245=x4%\275\263*\t=\\Gc\274-\257$=k\334\310\275\312\361F\275\003\232i=\365$\262\275Ay\225\273\204V\003<\275\334\225\275\373\233\222<R\336\003\273n\016\242\275\005o\256\274\221\373T=\250\354U=\305\366F\275\317\316\t=\245=\256\275\023\002\235\275\246\361\353=\246\204\330\275\206\n\201<\326a\374<\020\221\306=\023V\272\275E\372\354<\340\336-\275\006\320\004\275$\\\300=\005\366a<\\I\036=\261\022B=\216\234v=\232\274\261<\274Q/=(\374\024=\312cz\275\030k\376<\372\267G\275R\002\202\275gYp=O \207=\024I\325<\250$\271\275g\3058=`\341C\274\216Ka=_H\356\275\326\233\372\274\207\007+=S(\340=\336\303\234\275C\254\261\275j\275\301=Z/\206\274\345\371\200=\004\010\256\274\033\227\205=\233\272\331\275\242\261\273\274\237\t\263=%\307\346<P\250?=\030\332\252=y\361\315;\373\273k\272\010\367\251\275\000t\335\275\361\376\355;\\?\312=#\242Y=\215B\327=\030\321}=\364\363\250=\313\357\351\275\355G\317\273\307\365\235\275k\351\372\274\010\256\354=5\237\235=\237\224\203\275|\265\307\275Vd>\275\2313\316\275\244\203B=?=\337=\3511\017=\320Q\200\272q\310_<s\241\025\275\375\364\346\274V\024\230\2759!\245\274\352Uf\275{\332\267\275V\362\212=\035\334\177\275y?\277=\024\260<=z\246\323=\231_M\275\356\330c=\204\266\224=\262\245t=\372\343\322=\330<s=\356&Y\2755\211\226<\343\333\033\275\300\005\230\275\265 \207\275\023\256X\273q\274\014=\234\364\340\275(\014\265\273\201\030\260\275\202\026\222=n\272\235\275_\356\342\273\216d\224=}\277\251\275l5\345\275\222\362\202\273\375\276\345=\013\025\302\275LE\304\275\307\303\276=R/\367\274\375K\262\275\205Yy\275\223zD\273T\014q\274\007F\310=f \323\275\207\207\241\275kM\226\273\252\034\207<\027D\200\275W\314\276\273e\247h=\276\035\215=r\305\036=O\263m\273&\230\256\274\032\332\351<\177\353\347\275\312\352\245=\353\274[\275\262Cg\275\362\250\226\275\\?1=m\355\255\273\214(\257\274\327C\224=k\024\353\275\014I\263\275\177d\240=+\344\030=\343\324\250=k\224\200=\376\305\003\275#\260\246\274\025\036\277\275\217o\177=\3040\225\275\237I\347\275v\325\2729\225\355\214=\376\007$=\333I\242==\033F=\377\217\000=_\372\330\275g/\263\275\236]\314=D_\376:k\322\224=E\'\354<0\333\206=\304F\243\275Z\224\273\275\n{\022\275\216\233\253=\355%S\275\261\313\027=V\226\215=\303\242\014\275PN\327\275U\221\352=!\277\307=\270\373x\275{\236\027=\371\261\222\275XYs\275\r\246e\275a\264E;\343\3760\275+\014\221\275R\211B=T:\263=U\367\301\275\371\246\271=\313@x=A\234\247\274\010\0217=\335\212\241\275\262(\277=.0c\275\340\236\306\275N%\357=\004h)=\037w\214<C4\030\275k\377\276=\305\325\341:Z\302~\275\312\202\266\274U={\275\376\325\331\2757\307\317\275\033\237\310=n\244\336\275\324\245\273\275hf\010=\362\340N\274\304~\207=\255\336\276;\024v\275=\250`\007=\2623\340\275\211\356w=\307\001\366\273\025\376\201=x]\332;b\3355<\277\2624\275\311\304\'=\213\305\323=FN\331\275\316\236\032=U\320\022<[\007\226\275\022\307\267\274\251\374q=\302R\031\2738\020\265\275\330\244\260\275\014\356T\275\030u\354;\233\250\260=\230\010\342;\2679\266\275g \353\275A\210\347\275i-\302;\3779\022\275\341>\212\275\0243<\275\364{\354=\324\006\276\275\360\333L\275\313\355\226\275\037(\253\275\014\254\312\275\336\356\315\274=\266u\275M\233\016\275\344\260\352=\223l\356=\242\021\275=\271W\363\274\311h\273\274\0218\265\275pC\275\275\026\004\2449m\333\312=\342\002Z\2743Ew=F\023I=\353\3414\274f\314\307\275\316b\302\274\260\355Z\274\323\354\211\275\314\305\260=\235\010J=.\265\236\275)\241\273=5\327\003<\354m\337\275\302\226\341<\250e\216=8\337\316\274\257\r\260<\206\034\335=\230\267\037=\254\265\377\274\260\031\'=\262\355\355\275\331N\323<6rC=\236\243Z=\347\240$\275\034\267,\275\354\270\212\274\232\367\234=\300tF\275\031\r\240\275\332\371\336\275Z\276w<>\203\'\275\343\271\037\275\024\207E\274\311?\231\275\237\005\253\275L\2107<\014\027\223\275t\010\213\274\326?\374\274\306\232\266<\374v\264\275\266\001\360=\303\250\225\275\277\276\212:\356v\345\275v\251\265=\033p\215=v(\337=_\021\t\275\301\226\306\275\362\356\213\274\023\351_\275g\240\323\275\304\236\344\275o\302\327\274\"\000H\275\370\254\323\275\201H\272=\343a\351\275aK\352\274H*\334=)z\320\274\246T\234=\356\330|\275\\R\217\275C\256~\273\276d\232\275y\234$=vr<\275\273\317\210\275d\201\237\275E\301\342<Doq=\202\234\300=\310Gn=\r\262\352=\370\001\227\275\361J4=\017.\316\275\306{\336\275\221\360\030=4\216\005\275b^*\275\362\223\240;\265\364\353=\214\345\214\275\350n\346\275\377\010\267\275YK1=\030%\320\275\350h\342\275}j\265\275C\217\025\275|\313\331\275\216~\031<\226\202\032\275\3165\273=U\314\006\274\376\034\311\275M\226\256=O$V=>{-=k\226L=\272i\207=\272m\353<\361t^\275(\234\235\275E\201\335\275\nX\270\274p\365\222=\342\335\221\275\275:5=\022\264d=\337\3711\275k\366M=\2125\337\2751h2=\027\354\334=\242\037*=\363\324\355=\023\341\275=\363[\246\275\317\260\327=\351A\t\275\375w\242=P\"W\274u\025-=1\303\004\273\t\362I=`mr\275\2527\243=>\211\356\274\022\364\005=\017\263%\275WN\217\274\\\302`=>\022\005=\315<\035=\316\240\325=~@\354\275\204\300\302=-o\025\275\203\217\276\275\237S\206\275\370\245\356=&\320\370<G\304\212\275\310\255\320\275D/Q\274\026\233\242\2748\206\320\275\026\363\227=\314r\252\275\361\256\244\275`\342.=\263\221\254;Tx\001\274{\230\337\274\033!\022\275\332\342\221\275\311K\351\2759F\346\275\277\223\273\275\224\256\n<\262{E\275\245\317n\275\372\304\031=R\034P=/E\312=R\016\026=\337y\264\275\310\010\223;\277?\220\275V\366\317\275\024\035\221=:\331\236\275\364\371\217\273,_\353:\031\267L\274\2433\245=\326\347D=\205\034)\275\215M\341\275\263\266\316<\362\003\334;x\317\211=\334\351\312\275\222:$=WX\212\275x\324\305\275\207O\360=\343\2669\275\003S\217\275\273\216\262\275\204\214\205\274l4\306<\247,Y\2755\202\263\275\347X\005\272\035\232u\274: \253<\233\347\260\275\210\rD\271\246\360\344=\213\034\021=/\253\220\275F\377\313\275\324\256\225=6,\311=\342\250\206\275\306^\345\275XV\247\273\257i6\275\353X\301\2752\332\320\275\336\024\365<\332\350\022\273\252\216\030\275`\370]\274D\003\033<\265\014\325\274\202\177.\275\rZI\275yE\214\275\213(M\275u})\274\016\031G<\005\222\310=5r\204\275D6\353=\036R\274=zd\253\275\254d\001=\263\013N\275GLV\275\035\307\201=\242i\352<+\034\211\275\377\003\243\275s\241/<\320\216\330=\370\036\357=\272\270\253=\360b9\275\022\277\341\275Zw\223=I\337\312\275\'\026T=\307\254:=@\350\020\275:W\270=\036z\277<\255\265\245\275z\363\227\273\370\t\253\275\242\340`=\000\317\354\275\304\307\201\275\313\333\347\2758\235\005=!\300&\275\344v\224\274$\000\211\275\267\311\247\275\331\306\020<_\263<=X|:=\341\306:=w\371\r=\212\210\203=O\242\334\2755\025\272;V\211\324\274\227\2761\275\270\030\302=\347j\311\275$\311^\275\334\303a=\323\206\217<\326\273\200=\275\233\225\273\333^e=Q\332\221=y\030\202\274~!8=\321\270\360=\234T\\<\3707\266=\274t\240<\036~\320=\002n\272<\330\231t\274h\277\323=]<\260=\027@8\275\373\255&\274\342x\356<\234\020v<\270\266C=\357\212i\275\342IF=n\001\264=\203W8\275\206J\347\274\247\242\340=\352\305\270\275b\364\207<\272\206W=\242\353\013:\372\221\307\275\257\245\307=M\035\315<\\>\267\275\364\360\316\275>4\335=\241\314\213<\222\211\256\2755\310\263=\330\023\241\275}`\306\275\227/\200\274\313?\274\273K\334\272\275E\207i\274\343\037\217=`\004\274=\r\227a=\277\033\223\275Y{\214=\226q\255<\016E\346<\001\346\303\275\274\023-=f4\332=l\231\247;\017\262\235=6t\3179\230\312+=\257R\245\271\373!\010<n\247\203=\024\016\327\275\244 \216<\006\355w=Z\257\310\274\021\240?\275\033\354G\275\230\214\232\275\232\221a\275\350\025\306\275\312\345\254\275x\347\302=\375\355\303\2755^\035=\305\337\245\274\'\264\333=>\324\301\275@q\201\275r\322\000\275Y\332\000\274\207\2165=\305\r\317\275x\277\310=N\"a\275\024\364\266=\"\237\255=i5\242<\207\177 =\311\275\337=\213\024\221<\347\275V=\202cn\275|\346\215\275[\363\342\275,\343t=eb<\274\\f\232\274\025\365\306\275\205\354\205=Tb\273\275\340\017p=\274\n\322\275>\247V\273\023l\202=\242\014\325\275\021}\311\275fGb\275\240Y}<*J\264\275\275\273\304=\206\240\022<\357\372\243\274\236.\305=\225;i=\335\207\024=Sgk=1\263\330\275\272S|=\261\365&<}\332\216;\217\331\t=u\200\206<\002\322\343<\325\037\340\274]\305\303:\351\264\204=\227z6=\255\204\206=\214\256\324=\222?\302=\247A\323\275Y\257\253<0\244A=oiG\275\312n:=h\206\333\275e\211\212=\245\034\261\2749\266\r=`\246\224=\232}\231=\356\205\327\275\330\203\324\275\327\t\202=\006\356V=:\331\022<n\177n\275\025T\302=\247\233\334=\332\034\204\275\354&\002\275\320\337\252\275e\273\203\275\347\t\232=\274\323\001=O\232\034=\370\"\010\274\330\022\356\275}N\364;\034A\245\273`O\356=w\353>=\315\242j=_+\215<\354]\003=\313xX=ou\322<\021c\006\272:#\240=b\033\301<\024d)=\337:F=1\321$\275\203b\035=f\373\343\275\212\215\217=0Q\323\275\367\021\243<\267\265\377\272d8\266\275\214\251e=\035\002\351\275[o/\275J\016\346\275x\024\244\275$\362\336=\260)\230=B\316\226=Eh\027\275Y\267l\275\254\241>\275\212\360v=,kj=\245\274\211\275\371)\307\275\245R\352\275n\275\211\273\203`\230\275t\n\301;O@\241=\340/\245\275\t\274\363:\'\202\300\274Iw\303=\013\316\277\275Lj\317\274hL\266=\272P\312;\300\315\272<\311\242\251=\305#\364;\014\365\'\275B\266\352\275\352\354\013<H\354j=\177\274I=\356\300\325\275[\237\274=%)p\275\334\217\236\275^s\237\273\222\254Q=\200m\340=\227\"\027\274\025(\325=\276\t\355=\335\350\271=;P\266=\235\370y\275\237\r\250\274\327\006\261\275\3065L\275\003\372\213\274\033\021)=\272p\031\275\177\266\320\275\312TQ\274\256\005\354;0\236\304\275\265D\020=\351\237P\275.\300)\275\315\221\351\273\260#\315=oF\337:\260C\353=P\tn=nE\357\275\317\025 \275ob\337\2759/\357<\304L\351;j\315\300\274\230?\360\273\002jn=\022\263I\275\373\337\271\274\026\025\240=\216\025z=\010\315\347\272\014\350\260\275\374R$==\250\303\275V\201\240\275?:j=\261D9=\352E\243=+\316\233=K2\006\275B\n_=(\2334=\247:\364\274G`\203\275\"\302\207=\022\030\201\275\205Gb=\245\214\321\275\226\231\265\275\324\355\031\274)`\252\274p\037.\275\350\202\303\274\250\035\351=m\"\016\275;\347\000;+\270L=\332\243\261=\004L\211=\007\272\255\275\216V\225=\027jU:\000s\237\275\234wI\275\323\266\270=\324\026v<0\375e\275\214\270\244\275E\273\031=<\336]\275c\224\263\275\035\301*\275i\253\302<\3728\200=\016lc\275\034%\316\274|\340\243\274R\314\373:\'vM\275%\006\226=\323\204\200\275\230|\341\275\370\374\207\275\300\337,:\3258\016\274&\354\324=Q\220:\275N5\246\274\205\243\312<\205\205\356<\306\332f\275\262S8=\225\372\303<\262\241S=\265u\177=9\373\276=\034\203\305\275\006\t,\274\250\004\312\275\213]\226=O\367\350\275)\262\255=\342\022\035\275\240\n\255<\347\026^\274W\002\250\275H\"\324\275\343\317.<\363gN<\01354\273\262U/\275\320\277B\274\301\342\301\275\014.1\275\211\225@=\331\210\367\272\227\2621\275\271\256\233\275\376&\351\275\257\316\335\275YG_=X\223\366\274>\024\251=^Lt\274\0034\024=B\036\231\275\205\025i\275RU\263\275\216H\2649!\337\336=6\t\251=\301\243\251\274L@\343=\356\r\253\275\n\'\247=\220J\356\275\206@\275=I6\013\275\342M\274\274\351\212T<U\211\306=D\036b=\225\2771=zx\206=R\024\265\275\005\217\204==\2305=\360\027\014\274\230\271\241=\3311\212\275,!\241=\'~*\275H\266\344\275\243\242\316\275my\225\275\353\375\204\274*\021#=\2449\214<|\272K\275I\317\236=c\243\'=GB\364<q\252v<}y\310\275\002z\272\275\017\023D=uih\2753H\260\272g\324\013\275$\027Q\274\253\377\265<s\375\366<\3328\266<\031\367\253=x\311L<\310O\315\275;^\272\275]\014\361=\251\353\307=\333\300\203=\267\355\"\275\006\264x\2759o\241\275&~\243;\235\020H=E\326\355\275\024\235|\275\365\\J<3\367\273\275]O\330=\311U\323\275m6\034\275L\330\231\275M}[\275\374\301\010=*B\261<|\371\261=\271\323\327\275\243:\220\273i\356\010=}i$\275^o\274=\302\224\010=^\314f\275\224\023\275=\227\177\221\275v\025N\275}\033\275\275\021\323\031\275\025\256\352\275\316H\013=\255u;=:y\337\275\332\325\244=\327\320\217\275~\201\026=\274\227\216\275\306\235\325\274\325d\016\2755\030\347\275\307\345V\275|?\360=\001\341\320=G\216\264\2750\243\377\274\320\206+<\034\r\276=Z\350\305\275\362P\315\273\343h\022\275\237\322\226\274\213~\206=\307P\240=\210\234k=\300\013\207<\212O\017\275X K\275\354N\250\275}\202\220=\206t\200=\250\355\344<\325\307\342;w\346F=\353+-=\347\003\263\274\250\300T\275\355\324\216\274_\220\246\275\305\034\337\275^\375\202\274\035\213e=\177\351\261\275Z\346\316\275\306\361\236\275\2746\032\275\253\005\275\275+T\354<\326\310e\274\212\332\016\275a,!\275#\014\277\273\361+\266\274\352\030\n=\327+\265<\016$\240\272\233\227\310\275\212\307\255=x}?=\262\256\361\274\003\311G=\014|\334;9\t\316\275\302\030\360\275\313\302\246=\355%\257\274\301\204\256\274\226\347)=\343\022\312\275\033o5=\316\272\376<\271u%<\022\257\232=\2200\304=\356i|\272s\323\305\275\330\210\346\275N\317Q<\372&\236=s\\\343=\000\350\341\275\233PF\275]J\316=\375{\304=\241]\227\274\330]S=\024\217\251=\372f-=\035\303\205=\303{\210\275>\033\317\275o\023\025:\007s\226=\'\255-<$\312\212=-I\017\2756\255\315\275\212k\356\275\237\032\205\275\302\264\255=/\027\360\275\311\264a=\233\324\304=\014\250\206\275\351\263L\275\035\'\346=\202\260\356\275\250u\237=i\331\005\275\375|\312;\351|\333\275\301c\302\275Qp/\274\242\001\357=\262\322V=\246\017\342=\236\312\252<?\r];\373\354\273\275\314[\270\275,\205\331\275@\2773=\260\361\254=\337{m\274\035f\300==*<\275\020\037\347\275LP\251\275\356IP=\032\360w=#\013\t\275)\325\310=;\222\3539O(\321=Dy\022\275\017l\344=V\277J<-\320J=d?t\275;}n\275>\376\256=JD\275=\360m\233\275\317\317\210=\036\261\332=\026k-\275\r\013\003\275\224y\275\275.C\355\275\221P1=\372VC\275[\003\361\275\221T\224=\005\260\022<\341aC\275\375K\266=qE\201=\003g\254\275\246\004\232=\231\010B=rbY=\233\'&=i\021\261=\251\343\346\275\323m\014=g\026\311=\357\021\275\273\311\032\233=\347\377\324\275\217\337\313\2729\032\010\275\224\030\242\275\226\324\347\274\364\231h<yl\246\274\201+t=x\224\017\274\346+\226\275\034%v\274\257\300L=y*\023<+h\261<\2011\254<\037\007\233=\201@Z\275\246\360\243=\365\366J\275\232\213\315\275\000i\352\2754\256\250\273\034\306c\275\240\264\343=\232\3079\271\016@\342\274P\222\343\275h\245\346=M\366\023\275O\376\243\274\335A\003\275\330\316,\274\376=4=\017Y\204\275\340\214\352=w\236\376<w\347\004\275\201\020z=\n\227q=O>\306=\370\n\354<\212t\253=\327\264>=\010\306\204\275\220\242\270\274\272\r\321\275~j\305=P\367\237=\261x\255=\246\246 =r\243\206<\232\347\354\275\034,\225<\027\232\274= \314\320\275\235\274\204;r7\004\275\233\325\355=d\243\333\272\254\275\314\275q;k\275^\375W\275\245sm=\325q\226<!xf\275\2403\247\275\317\025\314\2751\261K\273\2373m=\344\255Y=\022\362a=x\316%\275a^\221\275n\2165;\336\302f=d\311\304=\223\270\232\274\266\267\252\273+\221\025=g\260\364<\274\025\335\274\216\357\304=\232*\201=K\330\240<5\264\314\274\213\364u\275\343\350\305=P(\242=J\210\343\275YS\346\275\223\001\r=\214\007m=\342]\213<\272q\227\275\210(\230\274\307q>\275r\016Z<\034~D\275[_H\275\365J\255=\222\242\200\274\212W^=\307\234:\275\217\367\336\274\375\311B\275\324O>=\353\366\203<\270\351\211\275\373B\206\275\372\003R=1\375\204=\002\345U\275R\311\356={\211\313=:\227\254\2751\303\244=\377\253N\275\235\274\310\275[\321R=@\214\222<\177r\224\274\033\003f\273k\231\244\275\334\276g=N\n\312\275\354G1<\267V\210=\007\260\331\2750[\025<\234PS\274\230E\030=\007}\347\275\327S\331=\346\325\360=k\210==1\315\251\275\303MU\275.\314\263\275\306g\255\275\375\376\"=0\337T\275\350~\330=\257\333\252\275\037\034\226\275\227\321\246<\251\213Q=4`\237\273\274K\242=9\016\027:qH\342<Y|\364<MO\317=\307\223\342\275\330\274v=\200g\250\274,\316D=-U\276\2750:\\=\323\337)=\303\035\225\274}Y\221\275U\201\021\275k\321\327<\0062\375\274r|\201=\353\0176=\001\305\270\275n\353_=\207\317\032=\002\204\274=l\216u=(\276\317\274\356\336\316=A{?<\315\236\207=RG\220\275\353\345\360\275N\010\326<\022\315\226=p\n\220=U\214\250=U\366\316=\303i\252=iwK\275@\263\342\274}\021\253=d\t\312=T\241\344=o\301\020<\347-\225<\222%P=\240\252\320=\023\271\252\275\313\375\262\274\020v\271=\376\353\231=\021F\301=\207\331\246<}\302\215=\2378F=\025\341\360=6\365\316=&Iq\275\037\347B\275\256f\305\275\177\257\340=m\222T\275\207VG\275\te\271=\271i\3709\310\261C=\351?\247=\273n\'=l\305$\275M\242>=Nx\212\2743\352\326=\335\256\317\275\231\023\343\272\014\203\333<av\354\275\003\371\262\275i\\\001=s\325\277\273\001B\324\275\220\217\327\274\354\2546=\353\205\246=\007\317\306\275\311%\200\275}\227\260=\251mN<\352\246\262\275\321?\322=\222\024h=\244\027\324\274\r\333\333=\233\263\243\275\222\274\232=\354\021\336\275\211r.=\017\325\201=\356C\221\275nG\216=~\252;=A\264\025=\334\373\336=\213\355\254<86a\275[\326\237\274}\010\357\274\347\244\311={\224\254=\305\277\\<\330\305\277\274\253\327\342=\240<\234=\277\300@\273\342\\\275\275%\371\265=3\322\255=\3219p\275c\325\227=\255 \375<.\375a=\213\366\273=D`\010<\231\201\224=\326\232\333\274%\223\352\275\376e?=\314\323\030=e\275\232\275CG\313=\241N\331=.\306\005=\377\2557\275\201-W\275G^D\275\275o\220\275\300Z\205\274I\021\324\275\324\211f<\370\0345\275\004\202\234=o\352]\275_\237\366\274AK\356=!J\351<W\253\033=L\242\202=\372\336\277\274\\\360L\275\033\016\273\274\376\235\343\275J*6=s\233\262\275\312}\377\274\032\255\201\2736[\262\275\201\316H=\267\244\250=\214z\275\275ey\014\274\367\026C=7\244\244\275\377\036l=w\023\253=L\216\266\275\210v\264\274\372;\267=\232fY\274\023?\351\275[\316\277\275v\233\257=b\235\000\274RLy==\333\355\274F;\341=\037\200\212=\2639\206=$/\270\274\246\221\300=\r\230\275\275G\213\214\275H>\256\275\353\004s\275\321\356\271\275\026\035\247\275\376\243m\275\3743/=\355\236\342\275+~\002\273\023\225\225\275\255\316!\274\'\315\304\275\362;7\275\340\343\363;\033\222\333\275n\332\270\275\274D\270<\244F\336\275,\024\020=\3772\222=\036\005<<\352d\333=>\257\026=\353\202\367<\262\300\316\275\353\3406=\304\026\205=\254\242\322\2757\264\253=\234\235\264\275\221\235)<\320\244\033<O=\350=\365/\261=\317\250\257\275\"\021\220\275\r\275\311<\264DI\275N\226\251=\353YE<\213\301]\275\216\347\223\273.\333\317\273M\345\266=\227\314\233\275\212>\230\275`B\334=\376\r\350\271\013\027\272=\3505\201=\335j\217<\014\326\277\275\205,\304=G5\313\274\315\317o\275\364y\227=6\223z<\202\313\340\275v\376\315=\264\330\330=2C\265<\210Q\336\275\242\371\334=\020\372\255\275\017\320O\274Q<\357<h\270\223\275\2310/=\277X?=\343\362)=@\220z=\312\246\371;\2031E=y\240I\274!\335a=\177V\253=\235\206E\275\374\265\320\275\363v\201=\316\350\217\274*\242\264\275\3445\2168]]\254\275\324 \233\275\021\211\234\2756b\353\273\374\222\223=O- =*\252U=C\0244<\350R\330\275oG\025<\322@\251=\226\305\246=\255\240\255=C\357\331=b\210\254={\226x\274\215\276\225\275\271G\241=\370\366\342\275(r\216\275j\027\030=\221;\220=\000\221\326\275\270\312\343\275qh\313=>?;=zTf\274\204\361\302<\n\361\355=se\000\275\013/_\275\031\220\276<\351\204\323\2758\367\024=\302UU\275\203x\247\275K\212\263\275fj\336\275.\231\344=\237\016\031</\325:\275\ncw=\300\331\033=\242j\231\275\032{h\275\243M\224=~\345\003=\351\364\271\275\373m\360\274\317\317{=\000\305\216=\202\265\210=4Z\312\275\004Sd\275-\002j\275_\247\320\275\354\006\362\271\034%\216=\235_\223\275xE\264=%(\217\274\022\330\200\275\331\265J\275\206\034\023=\353%\030\275\227.\260\275\214[P<\370 p\275`\000\0108\357\311\334\274\237\223\212\274\366\306\226=\\\033\225=\002\365\351\275\256\314C=\036\301\214=\344\"K\274\257\024f\275\321,\025=\365h\006=rq\350\275\346\333\303=\302\202\277=*\251\311=U/\363\273+\370\245;\276\021\017\275\240\n\261=z\272\300\274\211\014\035\275r\021\354\275\245n\277<\334}\355\275\227\215O=O=\263=\321l\353\274`;\330\275`\025~=7\262J<\347\177\214\275\246\347\241=\306\316A\274\312U\014\274\262$a\275\225\335\334=\005X\253\274\202\323n=\365\005{=\310\311\010=v\013\270=\241\034l;k\367\270\275/1\327\275\227\250\302\274%\020\377<\335q\275\275N\000\254\2750\250\312=\335C\301\275$\013\351\274wN\331\275\227\025u\274\245\310\271=\177\266c\275o\2222\274kT\351\274\000\002\250=\204\036\303=\220\265\222\275^J\336=v;\005;\223\353\350<G\310l\275\375\372@=\"\311,<\306 \246=\245\320\265\275\265\237\225\271\303x?=_K\343=F<:\275\005K\214\275\017\337j\274\307\272L\275\2417\214\273G\364\037\271\215\301}\274\246j\327=\317@\300\274uH\237\274\224t\245\275J\313\253\275\225\"\007\275\210\344\300\274\231=\352=Wh\346\275\306\026\201=\211)\024\274>{\207\275\267\010\334\272\033\207\350\275!Q\226\275\022\350s\274\026<\227\273m&\373\274\300\360\202=\016Y\351=|\227[=\301\032v\275\021\304\023:\256m\273<\240\014\236\275\256\204\325\275f(\227\275\355{\263==\036\006<.\001\332\275Im\377\274e_\016=2\261b=\222\035\310=\337\263\275=\352\013\246=\347\324\326=.9o=\353\231[<[\301\316\275\023E\023:n\314\034\275\331\271\013\274#E\001\274\332\237\244\275F\\\242=\303\2235<O\234?\275\007\333\244\275\267\317\236\275\377G\251=\342\256\234=\2421\006=\262\346(=\353\341\204\275TU\207\275\260\252\342\274l\365\270\275\245\366m\275\010w\262=\312b\321\275D\351T=\244\010!=[\334\216\275\266\262\317\275j\226/\274\013X\312=\035\202\226;\364\0175<\256V\322\275\225\335\013\274\353v\321=\033\246\343\275\226\335\365;\355\344\230\275\"\032\023=h/\230\275j;\213\275q\224\304\274zB\021\275\002v\233\275\312S\242=\r%\202\273\347\037\344\275]\3204\272\252\210\352=\377I\210\275H\266\232<\271\263\363<\304>\177<1\032<=\007\t\017\274\261q\241\275#?\r<M\354\325\275h\250y=N\224\220=q\211\210<\265lP=j\216\304\275Q\277.=\276sG=/\226w\275\007\371\265=UPz\275:\342\324\275\023>\262\275\314\274\212\275\223\000\263\274\001;\346=\356\031\271=4\253\314\274K71=\317\003\020\275z\262\306=\027\353\275=\212\316p\275\037\202\020\275\316/\264<G\271\355=\252T\356=\212\306\r=\001:\310\274\270Z\256=\226\340v=\035\276\231\274\225\315\032=r^\363;\231r!<i\364\325< \232\224\275\217\307\226\275I\030)\275\na\347\273\200(\347=p\222\247=\261\270\225\275\002\023!=\336\035\250=\256\355\"\275\345\331\207=\274\200}\275\300\205n<\026\207s\275\367\306\210<\030#\335\275\036\300\334\275\247\332\267\275\001\337f\275+\275\201=\034n\302\275\235\253-<\217\356\347\275\276\337\027\275\337>K\274\267l\231\274|l@=\211n\327\275\031\033\352=\365\200\231=}\362<=\223\240\237\275\247i\340\275K\032\352=\207\235\206\274\253\353\203\274@3u\275\270\\\375\274;\002\333=3\334\366\274\242\270\316=\026s\232\275\335\242\347=\303M\022\273\342\220N\275AQ\214=\313\004\203<\323\300{\273tD\313=\377\241\244\2746\306\356\275\020/\017\275\256x$\275\220e3=\'\234\235\273\365`@\275\322\305\334=;\272\033<\tZ\364<\224\354\275\275|\362\256\275\240\360\260=FO\301<\231\231\233=\205\007\177=\003t.\275`\330\213\275\316\330\014\2756\264\301=\214W\217=3x\326=Cob\275\250=\325=\177Ys=50\r=\342\006\353\275\203X\243<\340\004\206\275A\326\360\275{1\354\275\250/=\275?d\246\275\331\"\210\275\217\351\246=\340\344\307;Y\370\275=\250~\010=\226\376X=\273\"\315=y\200\240=\316Jy\275\006\2661\275\375G?=C\344\233\274\014g\033=p\333\320=\300(C;\240<^\275?\224D=J g\271\260\231\334\275\3458\225=\356Hz=\2623\034\275X\203\246:\214\201\342\275R\301\207<\202\305\270=\212>\014\275\264\216\271=\001\226\252\275\346\037z=\325\037\301=\022\275\327=\025I\322=\"Q\362\273\305\236\344=?}\235\275\327\027\202\275\017%\337\275f\201\346=\363\2670=\204\241\257=\361\237\211\274\257Z\003\274Z\276\242<\004\034\273<[\005$\275\255U\004\275\250\330;=\221\210\326\275\022\313w\275z\230\301\275\216\255\177\275!g\265;\347\202!<\013\035\223\275\357Q\316=\277;\317=\017\264\261\275\275\261\217=\205\032\254=\000\3170=\306\336\242=\266\302\001=;\031\025\275\277\033\340\275\273m\210\275\251a\212\275X\362\335\275\351\310\022\275Dz\326\275Q\255\026\273!\027\220\274)\267\203=\204\320\367\274}\315E=1\207\356\274cW8\275\220k\221<\315\215r=\311e\247\273\266\335\221=\365\355{\271(-;\275\3268\267\275y\215\353\275\351\342\215\274\360^\200\275mA\024=\347 \202\275\226\002)=\312\315\327\275\253\245\006=\316\252\343\274\336Is\275\311\214)\275\375\022\323\274\314\232\250<\340\2412=\315\262\357=)\237d=\331h\222\275\030\003\215;&\276\245=\177M\377<6\177\303=h\343\330\275g\260d=\237lw\274\232E\226=z\001\013=\325\265\326\274\216\327\333=\374\216V\273cVu\275\247\000\203\274:\264\t=\345\022\226=\311-f=G\220\031=\216|\204=\376y\303=1\314\336<\323\356\300\275\"\307\'\275\006u\251\275\'w\350<\027\237\236;\004\315\225\275\343\233\252\275\3115\023<\245\010\320\275@\007\337\275\001\203\254=\350n#=\004B\323\275\216\223\017\275\003V\360\275\213\355\302\275\203\030\303=w\357\330=\373%A\275\352\311@=\327\362\224\275\2705\020=y\365\313=\324|\303\275=k\346=\037\350\322\275\306\302\351\275*\223W<Vo\261=a\365\247=\356\206~=\024\021\360\275\032\177\025\275\361dw\273\t\373\007<\240^\227\275\022q\272=\366\304\304\275\300\366.<\266\217&\275\034!z=I\362Z=\345X\340\272\317_\251=&%\267<\335\343\240\275\351\367\325=\345>t\275\222\213\342\275\344\027\256\275\260V)=ig\032=\265\003\211=~\"\033=j\353\240=\332\302\201;\354\217O=\260\220V=\342\354\343<\334\316K\275\034,\304\274\035\256_\275\030\211x\275\246gA\275\247\373\034=\255t\t<m\352}\273\t\262\025\275\"6\005\274T4p=\022\354f=mK\t\275\345\n\306\275\226\322^\273t9x\275\265T\";\273q\311\275<\030\005; \221\257\275\027]\277=\3724r\275?\264Y;\365\010\244<\255U\252\275\336<?;\321\177\337=\244I\322\275\0144b\274\373;\004=\253\030\233\275aP\376<R\033?\275\334\025F=\262u9=\352\214\315=\242\014.\275.\251\202\275\3365\017\274\326\351\241\275}5\321\275N\253\017\275\003a\214\275\375\315\001\273\232[\344\275` \332=M\353\270=\275\370\317\275#\377\340=\366\022\247=\272\237\006=\256\314q\273?\177\006=\034\376f\275\n~\306=\362$\210\275\261\353\237\275\205\323g\275\024\324\304=\226\267\346\275.\327==\2333\333\275k\302\272=\033\003\317\274\375\211\315=\343gt<z\330\324\274\205]\035\275\010\332\326\275\374Ga\274N%\250=\204\007\204\275\353\361\274=03\273\273\000\257\272=\343&\355\275\272g)=cF\243<\203qV=z\324\242\275`\341\312=\201J\336=J\212O=JI\236\275\204]\324=\003\212\263=\275b\244=h\330\342\275\277\205\225\275R\263q= \360\272\275\242\302\003=Yn\252\275\201\353\343=\226\016Y=\203\006\215\273\257\010\217<_\271\310=\236\251K=@\365\240\274\311\326\324=i\325\022\275\316\255\246\275\325\237\236\275\326eT\275\351\257\023\275\021r\303\275\313\032]\273\237\274\020\275\'\004\303=\220\020\260\273`\037\230\2733\275\276=\237\241\222\274U\232\261=\245\307\032\272x\016\357=\242\230,=(1\313=\231\260C\275\366\201L\275\177\003\277\275\232\212\253\275;By\275,@\215=\276x\217\275\266J\370\274y\233\212=M\323\377\274\222.\206\275\0304\230=\320H\241=\206\204\352;G\020\244\275\346\374\340=\317\251\230\275\346y\216\275\272K\307;r\027\271\275\363Oi\2758wS\274g.\226=9Q\310\275\007\237\342\275ZEF=\314\252\305=\205\020\252<6\330\356\275\2716M<\361\214]\273!\033\332=\027\271\276=\030\262\022\275\316X\351\275\030.\310\275\001\210\014=\360L\224\275\225K\030;\270\007\036\274\311D\341;\037C\026=\2614\331\275\031,^\275Mm\316==\264\340\275\206EP<\026\002\035\275\306e\220\275\244&\342=qVy\275\260m\307\274x\331x\2757kX=\377#\213\275\307\357\330\275N\253\304=8\005\356\275\253v\022\274\010\032\346\275\242j\340\274\033\341\222=(l\206\275P\0023;\244\317J\275\022\007\277<\216YJ=\023\322\336\275\347\027\352\275h\000\226\275^\313\t\274\324\263\237<7\325\203\275\373\243w=\t/\367<\\H@\275\276\277^\274/\227\240\274\357\331\231\275;\335\213\275`f\336\274\353\310\337=\367\342\217\275\230|\272=u\005\356=16\026=\033A\215<jg\316=+\355\234\275\\\223\207<j\247\355;\201\270\373<\340\364\013=\013\312\n\274H\364\202\271\372W\250=\316\366\352\275Q\016\037=\307,\355=\226\235\246\2753\314\357<\353\376\351<\332@\237=\317\237\270\275>\020\355\275\220\232\317=L\353J\275\034S(\2758\222\226\275\016X\354=\363\355\254=\241\213L<\203\231\205\273.\277(<O`{\275\226\3437<\236\225\243<\016\257\347=8\315\033\275\266\031\267\274\245p\254=\311\177\201\275\306\\\030=Bt\365\274\007\205\346\275\032\354\341=0\020g=\363?\n=\235U*;\250$\300\275,\244\010\275Di\307=\327\032\217\274k=\236=d\365\272\275\3170\330=\035\372\275\275\322s\306\274\212cB=\003\266\372<r\375P=\311\204I\275\223*\334\275\244\372\316<OH\004\275v\316 =\234\335\223\275:\234\253=\266\373\262=\267\357\251=Z\275\307=k%a\274f0\255\275\030\207\234\274s\2044=\211\\\230\275\222\230\206=\234\310T\2747\351\304<\315c\353\272\325\026\226\275\353\303\213;\351Z\305\275\207\375\277\275\321\035<\275~\317\344\275 Vk=B\001T\275k\272\232\275 \315>=]6\321=\336b\306=\356V\301=^\316\"=\0347\210\275`\3529\275p\r\206=jn]\275\226\354\212\275\242p\247=\351|$<Q6\202=\267\r\315\275\221\220?=y\035\'=\314\317m<\340\201\214\275X\037\301\275\034\332\202\275g\304\335<,*~<l\232\016=\362\377\206=8\342\205=\204\225%\275\261<\262=\311\252\316\275\206\206\005\275\204K\321=\336\0058\2745^\"=\254iS=S\005\347=\n\207\227=\024\\\302\275\255c\356=\203r\235=K\303\374;\314\302\026\2723\341j\275\022Qc<\013T\307\275\0260+\275\305n\"\275w)p\275\2575{\275\243Pv\275\242\017c\275\007\213\255\274\326\235\025<\202h8=\234\347\005\275A\223\275\275n\310\302;\260\r5=\313=V=\273\225*\2746\210P=\354\274\201=s\212\354\275#+\017:\220#\256\274\25016=\330b\343=\205`\323\274\227n\241<\245D\323=`\005J=I\237\010=\324Hz;\254\331\014=\276E\334<\271\000\334\275\332\320K;gB\273=\237\204p=\033\314\343=\240\325\302=\311\026o<\010\313\027<j\267\276\275\207U\350=\270\202\216=\330\327D=\225\260\206=\360\177f=\252\307\220\275/\220\035=\225\363\206\275\206\275\276=R\275K\275i\245\327=\026\324/\275#^#=\'\3536\275\020N\255\275\225\250G;\374:\327\275f\256\261\275\373n_=\262\033)<vf\276\275y\0133\275\223\343\343\275\027r\274\275\276_\017\275\367\272\330=TG\005=\305\000\221\275\nC\354\275\221\007I\274\211p\214=\255Q\024=\277\312]\274\214\270\000=\330\032\241=\345\321\224=n\177\252\275\323-~=K\374\206\275\t\222\304=a\374\252\275}4\210\275\376\301\037=F\267\230=\367\234o=\231\225\232=\026\342\270\275\245M\030\275\220\217\310<\331E\037\275\243\314A=\"\226;=P\274\203=\033\025b\275\225\237\236<\211f\247\275\261@\311<\272iR\275n\030\271\275\001\360\340\2755I\346\274zi\306<\317\352\274=\370\230P=\276S\254\275\356\203\322\275n}\343;\374\335\210=\322\276\375\274\242\014_=oj\346\275\t\320\235\275\315m\324\275\351\224\002\275f\020\251=\346\201A\275G\357\267<\341I\201<\241\241\210=\357\244f\275\305\246\016\275a\234s=\362s\207=C\302\007\275\325\205\313<\032\237F=\227}\027\275w\360\211\274\031\303s\275\317\332\t=F\236\305\275XA\237\275\017\314\323=\372L\331\275\257\337\353\275\273\257\243\274\016}\352\275o\367\313\275\2373\t;\307\372\337\275\310\205\265\274>\221\207=~L:=\302\315\332\2750\225\304\275>\203\334={\320o=\367\366\337\275\004V\326\275\213\243\334\275\251Ld98\264 =b\210X\273\001\350B=\345]\200=\375S\223=\243\271\357\275\304\327\337\275W\304\220;h\007\234\275\035\206\273=px\306\275(\200\247\274\241\r\226\275\270\264E\2753\n\320<\353qN\275\275\'Y\275  \344\274\201\222\025\275\360k\010\275-n6\274)\376x<?\274\261\275\304A4=\247#\177\275\033\344\207<\254\223\323=\330/\270\275\226S\245=\321?\354=\003\204a=$e&=,\035\317\275-\210\346<\037?<\274\313\031\014\275\204m\355\275\t\364\301\274U\364\264\273$\'\246=\020\221\037\275\251\361\203=\313>\272=\325\030\255\275\260\233<=|\235\356<|2\"=\367t\314\275\345ai\275=\372y<T)\342=\340\004\232\275\'=E=\245\376\217=\203\260\330=\026z\354=\367\227m=I0]=E\317\230=\331\007\211=v\367\215:G\356\347\275\221>\265<\217\270\232\275+\310\311\275q\356<<G-\273\275\347z\333=\304;\225\274T\006\376\273\032\305-\275:\007\310\275u\260\330=\275j\276<!\277s=L\202\273\274\033\035\017\2759\210\271=F4\241\275x0\353\274K\303\256=-\273\244\275;{\230\275\254\2543\275\357\333\327\275{\232\344<V\365\273\275\207\322\204\275\245\032\326=\030@I\275\001\243k\274_\257\324\275\023\033a;\3338\323\275\277\013\252\275D\240c\275\033\256\005=\233\347\341\275;\316\201\275<Ie<.\205\267=(\360!\275\360\2230=$\252\201<//\275\275\023J\200=\261J\265=d\367+;]\267\304\275\375\230\305\274\221\344\333\275(q\211\275\036a\213=\315J|\273O\224\301\275\365\376\257=GYh\274z\004\306=:\221\222<\254\332\265<\tM\326\275\243G\231\275\222W\304=\261\246\374\274\267B{=8\010\261=W\227<\275\261\313\225=]\037\211\275\2569\336=\374\241\301\274[V\301\274\302f\245=\255\336\310<mb\n=k\005\333\275\356E\336\275,\362\357\275\272\310a<@\336\337\275\313,\210=E\n\317\275\367\037\234=\013\210\274=U\236\254<\302b\344=\210\374\257=\006\005\220=\010\213-=\256I\336<\233>>\275\353\233r\275\277>\215=\366=d\275\324\2747=\344~\206\275\t\317\001:$\341M\271\351A\346=\0236\275\275\203b\203\275\\\235\212\274\005\020E\275\373\345\225\275\376\235\275\275\212.\263=\271,\255=\021\361\322=\254R\226=l\343\350<\261\215\234\275\257v\255=\355\246\213=B\361\002<\323\277\247=\240o@=-H\243=\314\014\255=\225a\356=\340\372U=\256~\257=\355G\215<\371z\n\275:\363\350\275\"7&<c\217\274\275y\332\264=L\0252\273\001r\243<YE\'<W\223\236;9\257\245=\364\261$:\321\376F\275\334\013\311=]\'\253=\301z\350<\177\253\352<0K\277\274\036\365\333=\233\222\331\275\342\360\344\275\230\222\340=\277\037\360=<\235\271=\261NH\275\330\205\023\275!X\205=\274}\221\274Jz\216\275!\016\276\275\327c\"\275K\347\360=\270\316\271\275\242z\316\275\305\036\302\275\265:\302\275\311\244h=&\301\201=\263\354\315<\346\036\375<\210N\335=M\373\323=\350\033\327=^\315\342=\33542\275\033\256I\275\274u\313=D\336\276\275|\303\245=\t\313\314<\024i\220<\376\225\311=\230X\364<\256*\265\275h#\356=r\355\251\275\351p\352\275\351a/\275\333\213|<\237%o\274K\205\227=\266\305\306=\263@P;\036\271\320=\017X\200\275\250\346\n\275\025\237\221=\376)C<nk\272\2757\230\223\275\207@\202\2756e\360\275\203\177\257<\226\\j<\227I\301<\034{\366\274\001C~=Z\370~\275\354\001\343\274a\272\241\275;7\270\275\375\256\201\274\016\303\264\274=\257G;#\"\337=W\031\301=.~\020=q\0041\275\'\214n\275_\243k=\320q\355\275\365\374\377\274\300\230\326\275\001\237\264\274a\336\260<\352\013\277\275\317,\r\275\305\243\360=\371Z{=0\240s=u\204\276=u\363\254\275\321\221\266\275\364\237\204\275\0024\304\273\263_\353=\025@\350=c\351d=\222\216\243\275\213\373\223<!Zw\275U\001\027=l\350\266=\253\016X\274|K\326\275\023\001\341=\203\004\350\275_\322\321\2750\300c\275\310\0169\275\317\350\263=)\025\241\275\336\345x=;\224\213\275\376\337\234\275\352\271\211<T\246\236\275D\276K<\302\376\210=\265{\317=\324\251\277\274\r\214\352\275\361}\253\275\207\035\267<ps\020=&\323\177=\251\032\354=\r\376\220=\375\353\277=\244\322\230\275-Y\177=\352\350\336=e\276\231\275C\276\325\2759\306\265\275\036\203\220\275\210\316\353\275\373u\352\275\331\240\314=\336\027]\275\201\007\021=\215W\260\275\210SW\275\370\223\337\275\233)\247\275\372v/=\016\310\211=\226\243\320=2\373z=\356L\340\275\t\373\335\275\322\355e\275\333\374\314<\352\014\334<\205\327\370<sR\357=hro\275\244\322\321\275\036B\306\275W}\254=\362Ro\275\3656\024\275\rfu=\275`\263=\022\270c=N\267i\275I\376E\273\227\347\010<\214u\355\275\331\\\336\275\366\241\235=\323L1=\341\211\236=\207\221\261\275\315~&=)\253\330=\230\364I=\326\364\205=\322\315q\275\377\354\263<\3631\301\266\336\367\177=\330\262\"</V\357\275\311\253\262<;\311,\273Y<\342=\204+\272=Utv\275R\363n=]x\362<q\304\353=\320,D\275\022\355\276=\277\321\250\275\003\211{=\277e\333\275zOR\275\355{\252\275\320\344\262=S\320\302=Q\003\243=\332\261\225\274&T\260=\350A@=.\022g\275!\223T\275\313\n\301=\035\332\263\275\263K\317=\273k\t=\200\244>\275\211\372\212=a\230\242\275\223f\252=\014\201\214\275&N\326<\036Xk=uA\205=E\251w\2751\356\211\274Jc\301=|\273\222\274\301\002`\275s\017}=o{\316\275!x\345\275\216\300\267=\355,\273=\374N!\275B6\313\2756\033\000\275\254\374\205\275\356\256\030\275\014\322\215\275\374\000\013=\225 F=y\310f=Pj\030\272\312\375!\275\215!?=\313\301\251=E\371h;R\035\014\275\344\365\347\274\204\344\220<hB6\275\033\357\203=j\\\316\275[H\202<\334\3608\273\t\243\213\275\322\316\242=\010\202\365\271\211\254M\274H\364p=\252\374p=\243c\330=M\324\234\274\372\320\003=:\220F\275\375\263\277\275$\004G;\220v\262=\331\252\314\275\262i\033\273\3367\350=\377\007\351=\344\345\244=A$\030\2755\212\264=\322\261\241=\301\003\306=\377\020(\275\363\005\274\275n\277\300\275\273\220\353\275oK\'=Ce\271<\245\313\244=\277k\323=h\021\257=\211\353\304=]g\014<\203Lm\275zJ\254\275\327\t\233\274b\203D\275\241\033e=&JF\275\373:x\275\030\255\335=b\272\216\2738@\313=\347\360\276;\314R\264=\030F8\275Lg\364\274\240\0254\275\354J/=\236\037\346\275\347\021#\274\222\220\032=\207{\207=\336\340\257\275G\022\300\274\033\300k\275H\025F\275{\372\226\275\355\271\310<;p\243=\3342\023\275B\336\352=\277\262\314=>\2162<]\277\242\275\ru\347\275\307\327@\274[\2619\275\211\355\255=0\3640\275\\Y\324\275o\273\303<rD\257<\0338\371\274\314\323\241\275\315\010\007\275\225\3578=&\274Y\275(/\215=5\266\224=\237%\220=z\240\202=\330]z<i{\244\275ZO\352=\277\223\257\275~\301a\2730\222\025:\324=\225\275\332\r}=B7\351<\016/\361\274\013>\312\275\'\005\352\275\377\350\037\275\334l\005=\025\216\177\2755r[\274H\034\237=\325\177\260\275o\247\247=\212b\342<\304\201\274<y\221\352\275>\256\226\275\rU\204\275\343\321\216\273\222P\300=Mj\244\274h\376&\2753\333A=\037\200\032\275+\353\341;\311 \223=q\364\352\275\203\316O=\035h\331=\352\030\304\274V9\014\275\265 \304\275]\242,=nw\275={\370\240<\345\000\247\275>\333Y\275M\372\276=\370\276\t\274\331\312\305=\337=\267=U*z=\336\300\036\274\r\337\004\275\304L\330=A\262\342\274BC\271\274,\355(\275\256Q\323\275\370\351\021\274\202\347\227=~\274\347=%\215\301=?\374r\275\314\3526\275\242t\277=\256<\321\275\016\266\342<4>\201=^\013\247\275\326\301\272\275\035W7<!\270\315=\304\250?=\317\264\326=}\375\353=\351{\010=HIf=\270\177\234\274%ZS\275\326\213\036=\347\352\234\275\345\331\224=\210\037T=\222\255\257=_&c\275g`\346\274{h[=d\331\366;^l\320=\215\021W\274\240\373\330\275\355\231\204=\377l_\275\2017\227;\001\263W;\023D\265=\313\256\177<c\275X\275\034\025\266=\270}\246=\324;\007=\340\367W\274\267\330^<\013#\270\275e\350\330=\034f\357\275\016%\314=dD\241\275\244\257\344\275!\035\261\275\221u\007<\371$\325<\355\313\332\273o\246\005=\031\212\334\275\234\253\321\275g\374b\275H~\255\273\021cu<W\022\341=\013\340\233=_\352\321\275\337\033\240<q#\226=\342\207\244=zH\331\275\320e\223=\314\037\303=\323\367\262\275\227-^\275\006~\313\275\305xB=AL\256=\236\323\006\275\271\013\010=s.\021=\304s\025\2754\254\263<\365\264o=\'\360~\275\026\273,\274B\264\354\275d\314E<\367u\277\275J\246\245<Vx\013\273,\022\334\275\025\221,\275L\315\250<\t\210\340=\340s,\274\254\023\3269\025=\006\273Q$\320\275l\350\262\274r!D=\006f\356=\022\325\335=\233c\220\275:\225\330=\n\314\210\275t\301\035= \321\303=\001\225M\275KP\272\275\251\017\230=p\277n=\234N\271\275&\363\230=2\306\354\275\007\216j\275\211\245\320\274\270#\236\275\265\367\246<7T?\275\227\177\202\275\216\224j\275O\014T=\256U\223\275%\032\360\275\246m\246\274\2045\252\274\236`\353=\227\271\302=\3537\331=\\\235\331\275h\312\231=\231L\010;(\005\322=\005\3129<\304)6<\251\277\244\275!hs\275\346\323?=\\\230\277<\277\366\235=\035\357\202=\217\357\034\275\200=M=\301\314\220=\354\325t\274\377\242\350<_p\250=A\366\026=\350\223?<\240\216\231\274\266C\277\2749\261\213<\201\240\246=f\242\275=\313\032\260=:M\315;k u\272\177\254\230\275i\2173<$\363\343=\343\371\201=\232\234#<\227[\247\275c\022\227=\021\241\033\275\273t\350=\033\311\251<\307}D=\270\313\222=1E\024\275\016~\355\275\347\304\232=\313?s\275\371e\241=\276\033\023\275\251\230;\275OQ\344=ox\265\275\001\241\321\275E\3775=\304\215\270\275\302;U=6x\277\275\245\014\224=\304\325\t\275h\361\205=\357\254\303=\274w\201;\206v\270\273\244\345G\275Em\247\274\320\237\313<O\355\255\274\232\200\346=Z\276\017;\241\376\211\2753&{=\271\246p=\216\332K=\rB\252=}\355\036:\201)E\275\371\330$\275\326|\221\275\340\373\302\275.\306\325\275\341\244\345\275\014\231\025\275\255\263\311:\002\277\201\275\216b\277\275S>\235\273\366uK\275\242\201`=\254\002\252\275.H\352=\000\'\235\271\024\277\226\2758\331\027=M\311\t=\207!)<7xx\275\307\351\352<\237\346\321\275\243\362\367\273\327\013\346=X\257\233\275n\016\003\274\346\376\256\275\247\021!=\350\356\275\273\337-\260\275\322\256\310=$9\320=\256E\277\275\022\330\313\275\002}g\275\315\253\274=h\346I\275\276\342\230=\302\250\273<\225\274J=.\356\245=#\246_=K[\245\275\212U\267\274q\325B=y}\275=\241\335\313<PH\274=Y\226\026=\241\034\272=\3078X\275 \327\323\273\305\037\021\275\375\327\335=\2542H=\207\252\333\275\206j\355=\266\031\355\275\222\270\310<LH\252=\353\177\332=V)\326<\242\207\327<]q\365<\272-V\275\310\n\344\275\274c!=4\372\033\275\317\223\002=wKb=\023\034c\274\023\276\213\274\240\334\346=\311T\005=5/\243\275Wn\341<\302\315\033=\366\246V=\354\256\317=$Nt=3\273\345=,\r\232\275d)}=\307\216\317\274\324\370\334=\020\360\264\275\005\204\246=j\311d=\264\024Y=\336\217\232\275W\3655=\226z\345=\341.\230\275\014,\236\275\317)\225=\312\327\352\275\231s\026=\223\335\235\274\255\321\342\273\300\037\220\275g~\221<M\234\227=\267L\023<[6\300\275|E\343\275\273o\270\275\376T\177=\250\321\016\274\213m\324\2752\272\263=x\355\224=A\255H<\034\217\020\275\002\327\376<\2238\032=o3\013=\277Z8=\352\225<\273\356B\227:\374\351\225\275\232\370\221\275\255,!=\347\006\013=Q\017\263:%\236\202=\372\037]<\251XD\275i\243\322\273\244\245$\275&\004\005=\372\274\267=d\246\251\274\215\236A\275l;\205=\276\266\031\275Z\207\355\2736\244\241\274\215\366\025<T\300\351\274\006O\251<\235\"6=\346\375\215\275pw\211\275R]\"=\212\033\366<\365\364\323\274\360\257\203\275S{\212\274/Tf=\347,z=\360\230i=h\301s\275\036u\277=\303@\212\275\r\265\201\275\224\226\315\2741\244,\275\210\241b\273\360\2544=E\336,\275\360\300\272\274\347M\242=a|)=\005\270$\275\205\031\275\275\302\203\220\275\257\245L\274\272<^=t\270\322;W!\232<D0\353=\205\267\n=\302b\247=j\263\307=\2007\315\275\212\300\360=\200\307J=\226\265\214\275\335\232\217=r\322\204\275\017\316\331\275\325q\221\274\256L\230\275Khg\275\226\340\220\275\335\367\321\274\373\257@\275\\\343~\275\230\233\360\274s\326{\274E\270A=\366\006\002\275\244/\002=\341\240\203=\3107\332=\260,\244\275\005T\264\275\335\354k=K\363\224\273\274j\271\275X\034o=\211\331\266\273}\364}<~\261u\275|\034\254=\234\314\211=D\005\217\2754LA\274\030\3706<u\223V\275B\343X=\026~\307=\210&\322=Mi\273\275B\237\254\275\004\033\332\275\277\337\305\275JG\300\275!\304\221=}\246\240\275\242\036\220\274jH\177<\317\352\247\274\333\001\352=\301&\361\274\275v\350=\0208\355\275\322\230\332\275\212r\317=e\320\250=l\316\313\275\013\360\341=\210\003\035\275\326\234\255\275\3347c=O\261\260\275\225~\026\275\006\227E=f\343\222=\360\345p\275\254\215/<\345g\271\275B\265\205=q\212f\275Z\t\311=WI\261=\303\021\217\274\330W\337=\250\304\014\275\353\261\202=\207\303\253\275\006u\025=wZ\000=\344s\326\275Q\245&\275\246\\\314<\007\270\251\275\335\016\263=f\367\263=\222\000\211\275e\362\254\275F\005\242\274\216\301\222<h0\356=\360\266T=\343\021\311=\367-\201=u>o<\247\234\217\275\272\361\336=q\331T\275\320X#=\014\220\321\274\340\305\355\275\233\240\205\275Ue|<Y\260e:\032\374\222=\276\253\277\275F~\246\274\230<*\275\364s\324=\014J\275\275H\033\267=\314\205\262<\004%&\275\261\020o=t\013\021\275_\253\355\275\235\211\007;\253\341\225=\r\037\333\275\314\305<\275\351E\352=\365\036\013\275\322\274\272\275\001\331\211=\331\325\343=\026]\223=\227\247\327=\306i\214\275\223\016Y\274?\311\271\275\333\005_\275\317%\216\275\022\327\310<0$\210\275;\252\276\275\037\262\341\274\2064\037\275\024\030\300\275;\227+=c\230\300\275\004\231\272\274\003\323\270\275=\257P\275\205\300\222\274\357\307Q=\335X\247\275:(\240\275\033\265\276\27530\344\273f\177\001\275N\\\344\275\3473\317=\254g\223=|P\305\273\033\202\322=\214Qc\275\236q\301=?\273\276\274\210\203]=\260}D=\300\035\226\275\037=\036\275\201\003p\275E\356|\275\325\023\327\275\033\214t;\240\'\333=\022\222\303<+\356\226=\376S\333=k8\300;\215\276\311=0\337?=`\264\273\275!\344\336\274\273\027\204\273\037\367\344=\321\310\235=[\271\253=\245\'\241\274\371\242p\275)\0306=\315\334\357\274\370\030O<\353s\261=)\342\346\273\002l|\275=~\307<Zj\341<\177e\220\275\315\337\030\274\202a\016\275\357\024\356\275\367\220\262\275\353\311S<\003x\317\274\374\205\230\275\r*t=g\346\326\275\3608\334=\337@\351\274d\177\r=\347\217\274\2742\375t\274S\200\371<i\332A\275\022\261\202=\313\222\025\275HY\226=r\341\222=\326\257\275\274\234\374\226\275\205\372y\274\340@\330=\270\366\216\275\352\273S\273\227\'\204\2755e^=t\307\322=I\222\222\274\366\201\225\275\355\000y=\344\t\215\275 \274\303=kT\362<F\305P;<\023\206\275\264\314\030<\326u\034\274\331\357\000<\312`\313\275\270\301\177\275\304\274\276\275\264\350\255<?\347\310=\366\036\276\274{\006_\275\262\376\224\273\341\324\217=&\357\200\275\233\002^\275l\3732<@\177\312=\366>m=\233@\264\275\224\230\261=\235\252\224=wl\314\275\203x\332\275\355d\014<\000\236\327\275\222\213v\275\217r\224=\235U1\275\206=X\275\\]m=\364ie\274\275\003\342\274s\316\"\273\017vk<\267\366\n=\310\256\203=\247\263}\275\201\313\355=\217<\256=\246\276\032=K\361\265\275\006\203\300\275$\260\242\275\344\223@=ta\213=N\331\342<\216\315\\\275Uxa\275u\206\237\275j?\335=8\204\241=\nP\316=\375/5=\007\203\006\275M\217G=\271\332*=Z\221M\275C\313\032\274U{\027\275L\354\320=>i\271=N\350*<X%^\2755\005\357<\360\003$\271\332D\003=\2419\376\274A\321\272\275V\213\r\275\30611\274s\250\324;\275\327\322\274\303n\242\275\351\030\304\275\006\337\210=\211\262\277\274\030\',<\325\035e=X\204\246\275$\307\316\275\231\017\273;\362KL\272u\241\255<\006\210\241\275\3044\220\275@\246)=\346\206]\275\302\236\324=\246[G=G\200_\275I\005\306\275z\332\335\274\305\025\204<j\2120=N/l=\340[J=\276#z\275:\216\377<W\367g;\n\227\306=\221\034\345=b\215\246\275\2028\213\275X\215\255;\3609\333=\240e\267\274\217\322\340=P\346\326\275\306\250%<H\t.=N\274\350\2756\247\334\275\225t\217=\025\355\003=\037\353\305=\301X\277=:&\354=\351\234\266=\372\032\255=\034\304\332\274\247\212L=|a\216\275\031U\256=\014g\001=\014$\277\275\276\314\277\275\334\261\326=\361\244\r\274\343z\250\275\371\260\216\275O\032\257==\307\246\273\305\037\225\275E\361\343\275D~\362\274J\237\"\275\3619d=\237\271\261\275t[\246;\030{z\275v\037e\274z\273\010=3\242C\275a\231\342=I\203\232\274\t\361\376\274\"\251\006<\020\302\000\274\261\215P=\355\306\345<\020\257\222\275\316\255\301\273`\204{<h\036\026;\344_\302=\277\3560:\375\233\240=t\212\335=\274\344\241=/\n\264\275\262n\252\275\371!\316=\352\214\244=\334\251R\274O;\027=k\267\316\275c\342\266<\315X\323=\003~\232=\201IF<\227\322\237=\272dr\275\365\273(\275LH\311\274P\"\353=\'\0317=\312A\007=\363\016\236=\247\272\355\274\305\\\300\275\220Y\330;\324\223<=n\250\313\274\352\327\231\275v\'\217\275\261\352\340\274\273\240\005\272\216J\221\275\210\357\255\275\251\266\006<\013\032\224=\023\216\210=\260\370\364\274\226l\345\2753\205\021\275\211\200]\2759\252\360=x\000\344=\014\001\300<\252\254Z=}\332\322=}\306^9\201\354\313\270\356\374\226=\264^\314;\2007\024\275\256\0144\275\272I\214=h\237\274=K\020\332=\217?\350=\301\202\010\274\377\322\340:Z,~<\250\305\304\275\022GH\275\345^\306\274\344\017\212=F\242}\275N\3714=\243\302\254\275n\267\024\275h\037\340\275M\232\336\275WT\263=\026h\241\275\367\232\276\275\305\363s=\317\000\267<\'\023\300\275\321)/\275\270\005\261<[h\300\275\230\205>=\032\037\330=\355\276\310=[\302\316=\367\360\373\274j,\350\274M\313Q\275\235\227R=\000\263\260=S)c\275I\372\315\275f\367\224\274i}\214=|\007s\275\034\262\355=%\231\010=\370W\354=D\331\320\2753\213\306\274\301\343\334\275\207\354\324<\243>\357=\010$\271\275\035x\202\272\3310\316=\'\361S=i9\221<\331\213\203\274\310Y\343\275\307\345\032=\344\346\002\273\200\\q=k\004\255\275\005\215\241\274\370\\\240<\340)\247\273Y\025F=\234\021l\275\034\344j=\020c\033=\024\347V;;\274w\275\230\013\354\274\033\254\026\275*z\235\275n\337\230=1>\257=\232$\357\275L\030\351\275e\301\253\275\233\261\350\275U_\r\275\266B<\274\221n\213=8\216\205\275V\226\222\275\250\021\202\275\270\"\233\275A\025\272\274\310\3705=\024\254\210\275\032\r\241\275^\355l\274\003D$=g\361y\275pN\337=\312\222\361\274v\r\233=w\035\216=`\307\300\275wu\367<>X\322=\306\263\370\274z6\235=\270z~=\214/n=\317c!\275\241\234\215\275\350\000*;\234\025\313<J\014\314\275\270\243\221\274%\376b\275\336\275g=I\300\337\275\236\372\355<]b\324<\375\375\316\275$\302\'=\3228\\=\270\302\313==\335\356=8u\357<\337r\342=\003\031\336\272\207\036*=|\373\342\275\254\240\275=&\271`\275k\217\336=\240A\240=\354}+=\ru\316\275=\276\350\275V>1\274!\356\231=\013\013\236=\204M\237=\201\257\331\274PH\232;\301\275\336=\303\036.\275o\263\264=\0077,\275K\245\342=\035\304c=\312,c=qq\222=R\023s\27567\230=!R?<3\260\273=\201\344\375\274\235\025\244=\253\350\221\275\215\255\346<\237\266\"\275\347i\267=\233*j\275\354R\016\275\036\016\272=$0/\275S\264\2718@\267(\274\367\341o=\220\334\224\273\002\030\237=eC4\275&/\254\274\311h\215=\266jO\275\346\203\253\275\254\226&=\237\3417=\212|\350<\306\031\"=H\225\301\275\356\321\315=\205\273\336=\360\304\220\275nK\344=P\2007\275z \207=\327\300W=)\232\223\275S\026\314\274\021\004\333=/%\333\272\266\274\207=\n\345o=\315\'\016\275u\273\314=\362\311\227\275\326\365\223\275|\3220\275\336*\264\273;\214\232=qS\251\273i\301\334\275\001\365\\\275\t\377\302<\263\377\026=\236\203D=\2248<=G\0041\275\205\206\263<%4\202=\342/V\2752\177\354=L?\322<\237\316A\273,\014.\275d<\303=\316\261\r\274\335\241\245\274O[Z\275\341> =o\320l\275\035\370\016\2756+\312\275\"\260\244=\217\313\275=(d$=\347\345\332<S\221\256\275\334\327\220\275\355\322\232\275\226\221^\273\256\331\277\275!\3443\272\225\035\276=3\300\254;\354\213\221\275Sc\320\275\324\235\313\274>\034A\275\256*\016=V\'\223\275H\372\237;E^?\274\2640\234<>\201\016\274}a\341\273\323\354\265=\013\346 \274\237\333@\275\357gu=\251D\211\275\221\243\317=<\264#\274\320\366\240\274\250\233\226\275\324\214C\275\264\211\226\275{_\265\275`M\201\275\017\'\255=\330\206B\273\226\216#<\260x\304\275\005z\245=o\315\232=e_\353<\252%\332\275\346\225\022=\260\232}\275\024\254\332\275\017\256b\275\243\217?=\206\2739\275\034\256%\275\222\271/<\346\323\330=\343&\267<\362_\310=\313\321\222\275\235T\302\2757\316i=\364\374\340=\350O\235\275\365\255\301;\3701\247\275\252\353\365<\215\220W=\221d\353\274\250\022\261\275\001\366\235=\325>\267\274\275l\206=:\375\350\274\201Xa\275*\200\305\275a7\204\275KVu\275$\262\262=\\%\327=n\226\264=\276\350\205=\177\246\340=\263~X<U\201\327\2758\341\315=n\257\360\275\214|\230=\300\014\340=\353\371\301\275\301Lq=\353A\205=\332\215,<\307\221\210<\357\313\007\274\032\036\226<>\337\200\275m\233J<\277\314\315<\317\365\025=\r\214\'=$\244\\\275E\374V<o\024\224<\210R\303=Z\302P\275Da\222\275\217\236\231\275\342\373\251\275\222E\177<\276\365\235\275<\247%\2756\247\213=\260\335\236<]\"F\275e\216\260=\317\202\026=<m\207=\351\247\225<!h\250=;\332\252\275\030Uo\273\321`\235\275;\265\203=%QS=\024<\331<\273\201\322\275H\376\260\275\202\203\222<)\037s\275\245\243\374<\366\304z<\314\027\026\275\316i\000\275\252\353\204\275?p1\275\263/\227=(\005\314=@\277\353=\\.\350\273^\370&\275\317\217\204\275\2058\337\274IB2\275\350k\000=P\234\344\275<\035\254=t\277K<F\035[\274;\017\345\275\235^3=\365}\337\275\252\346]\275\035\254\245\274w\021Z=]\017\264\275\334=z=\361\373\341\274a\320\266\275\017\342\354\275\305\333\343\275W\353x<W\351<=\332\227;\275m\263\305=\206}\324\274]\230\345\274\375H\362;c\254\'=\022\235\004=G\r\310\275\341\203\211\275\376\374\352=\303\273\034\275k\211\007\275m\314\330\273\365C\373<#}\311=T0\254\275\233lv\275\320\327\t=\352\360\370\274\366\331V\274\3425b;\201\243u=X\0242\274E\245\272;\200*\003\274C&R\275\310\006\235\275\344\007\357=s\266\201<\020\003p=b\267\220\275\305G\314=\237\376[\275Z\255\223<!\\\225\275\227\356.=4I\235=\216\222\265\275\332\031`<4\202S\274\312QA\275c\240\316=\013\233^=Fh>=\364\201\220\274\017>5\275^\361\221\275v{\363<\220\226\240\274\nM\022\275aQq=\032T\344\274\351\212\246\275Ks\021=$\'\272=\3241[:\337V\234=\341V\256=\030\211}=\223\377\270\275\251\306\250\275\330*\210=\033V\351=:\035\245<\025\026\211=\205s*=Jy\250=\311\261\315\275\244\010\241\274\212\201\273\275v\003\225=\250\201\321\275\314m\212\275\356r\004\275\0058F\275\024\303\242\275\327t\240=Y\366\251=h\335\257\275\341\031\230<\023y\322=\034\2003=\023\320\312\275Q\022\215=\001\372\013=z\035\277\275\370\261\250\274\350xW\275\3545\272=\317\003\351\274O\206\304=(\336-\2756\321\252<\242s,\274\272\024\360=o]\353\275I \215\275@\205\213\275]\313\265=J\360\315=\247\247<=\r@\356=:\253J\275!N=\275?A\262\275\234j\311=Q\331P\275\213\315\265\275#\267s=\312\003\217=j\254`\273\313]\253<, >=\201\262\034\275\362\256\354=\366\204\230\274\270\206h=\004l\271;D\034-;\377\337\346=4;\317\274\016\222\230\273\253\214\267\274\237l<\275J\027\257\274\367`\203<^7\243\2752\251\266\274m\357\253\275\256\264\221=\303\252y\275x\010\177\274\251-\354\275\271\023d\2759\006\255\275\305!\336\275\0017\334\273O\006\260=8\313\327=k\2266\273\361@\311=\350\260i\275\000\357\303;\320\301\275=\203k#=.\247\233\275\335\210\371<C\325\377\274\273\352\337;yS\001\275\240\203\214\275\330L\244\273\336\202\334=R`\237=d\240\247=\230\231\333=\253\310\007<\372\223\260=J\215e\274\r\037\360\275\006K\276<\323m\356\274\307\331\t=\261F\206\2751*\232;\312\007\323\275\260\003\217\275e\031\340\275^i\221=\3527L\275c\202\300\275\307D\352=>J\202\275\372\"\307\275q\316\334=\272\t\217\272\357\344\265\275\340\232{=\213\216_=y^~<\034\ro\275\017_\272\275g`\235=Vg\000=\003\2077\275\347\373J\275x\351\346\275\227\r\201\2755\274\316=\177\345\310\275h-\337=QB\360\274\323\017\314\275hX\2627\303\360W\275\3358\331\275\032\321\342\275\202\353\241<\240\030\263\275\346\332\367<\334\277\255<\3538\336\275\242p\221\275\241d\232\273\313_\354=\346?\256\275\326$\223\275\272\007\262\274\271\377\225\274c\360\301=MD_=D\030\330=\373\227%\274e0\342=hd\223\275\354>\240\275\335\377\271\274\247\027c\273\330 \337\2752\234`\275\304]d\275\036\317\207\275\030\347\003=\344\246\300<\322\376e=/Q\322=\224\303n\275\234Z\250=\021\\\310\275\265\364d=2A];\354\362\354;+\221\351=\264\264\240;`\177\320=\207\251\224<\333\351\326\275\323W\227=_\265\321=\333\220\314\274\301\214\341=H\340\275\275\337\246\265\275\021\217\256=\2453b=\216\013\266=\333u\217=E\250\273=\326h*;\346\352\332\274i\031\272=\3522\322\274\"\252\315<\301\033\"=0\206\255=\022\336%=\314U1\275?$\233\275\211\201}\275\324\316j\275p\353 =@\270\236=\222oP\274\201\025\254\275>h.;\216\216\263\275B\016\352\274\326\303\013\275\234\004_=TU\217<\345]\247=c6\340\275<Dv\273\005\\\005=\206\365\206\275\030\r\326=\356g\227\275\252\317\241=ge#=s\344)=\257\244\354=2\035\357=\215\037\245\275\330\311\301=\335\212\351=\317\221\333=\271t\363<-,J<Q\\5\275\303\232H\275\357\264\270\275M\246\316<.\213\225=\312\325\006\275(\356\353<f\001>\272\266p\002\275\373\211\303;\034\321p\275(\014\377\274\206\345`=\245A\255=N\221\360=l\374\250=\256\024\243=/U\230\275\340d\221=\331x\201\275\315vH=Jp\274=H>$\275d\251\252\275\267\267\323\275d\355Q\2753\232V=\210\001}\275\265v\207=\035\316\246\275u\374\003\275\206\360\315=&z\330\275\257\242Q\275\014\251\224\273\232v\355=\261Oq\274J$n=\022\312\346\275\t\344x=Dc\303=\241\267\244=n\320\201\274\326J\025=\025\0062\275\206\'s\275$\321|\275\024S!\275P\202)\275\0254\263\274\300\003\346\275\324\375\305\275\177\253\251\275f1\210\274\331$\260=\360X\246=N&\311\275\212D#\275\036\244H=\332\nP\275\341\327\242\275i\263\276\273\204\000\215;t<\232=m\033\250<\237\205\023\275\217.\024\274\312\261\316\275\254\331\346=\225\207#\275\220ou\275\345\n\203\275\'\035\342=\320z\036;\310\207h\275RA\325\275\354\3463\2755\0064<Ya\265=\251\351@=q\030\206<\344\333\326\275\245Jd=\325\236_=\"u\351\275\236\330\025\275]\316\025;TFS<\2715N<\254\354\246<U\253\312\275XzN=K\277\221\275&\272\313=\241k6\275\322}\257\275\257\344\255=\001\314\007=%:\242=\t}4\275s\341<=\211QF\275\302\307s={%\260\275\217\311W=\204!2=$\240\202=\200.\342<\302\345\271\275\256j\351=\253s)=q\376\323=\275\256\206\275~ja\275\350\026\365<\342I\200\275\266W\365;\022\304\271=\372a\300\275\\A\031\274\243\207L\273\200_\321\274V\304\204<}\262\320=\216\372\243=:\357v\275\"\302\232=\2304\355<<\027\201=\037\377\242=\335\375\006\275\243\263\257=i\232\245=w\361O=\020\370\311\275\257\345N\274\320uE=HXO\275\270\017p\275\030\222B=*\314F\275\333Z\356< \275F\275\370k\341\2754w\335=\302f \275\274a\335\275K\317\211;!\3629\274\2013\262\275\311\240\333\275\300g\264\275R\r:=\0165i\274\334(\245\275\307Jk\274\2000\270<\350\302\3737\343\3520\275t\316\334=`=\211\273EH\276\275V\342\337<\213\212P\275yHa:_\354\217\275\371x\322\275\3420\213\275\266\237\377\274\r\237\214=\272\253\357<\005(\'=\202x\243;\035\260\000=\014\202\253\275\343\336\276\275(\327\303\275pw\265=\256/\333\275I\t\002\275\324Qp<G\330\224\274\r\360|=\366\370\354=\271\200\003=\251\010\310=SiP=\006\376\245=j9\243\275I\265\024\274\013S\332=j\253\257=\360\256\001\275\341\001\250=\027\005\343=\221cx=\035d\304=\302\213F\275\214\017E=\370z\245\274&q\247\275\360\035\201=\333\266-\275\303f]=k\301Y=\314\206\230\275\241,\230\275\303\310\324\275p\325\314;\003;\253=8\300\336=LrF\275\243\307N<i\337H\275\313\271\264\275\203\335\255=\304\010\337\274sj\344=\2639\340=b\260\246\275\031\230\207\275J\201\237=\225t\225=\260\300)\275\350\331\337<\343\004\356\272\316\237\246<\240\255\277<R\245h=\266\261\335=q\223\253\275\247\037\343\275\310\235\230\274\365\352E\274K\005\312=\317\265\301\275?\305\322=\351]~\275\273\305\202\275\200\270\241\275z\t*\275T\245*=\311\032\256\275\r}\013\275\377\310\253\2753\024\345\275 \244\207=\375\262\216\274h\341\263\275G\265E\275X\270\250\275\207\006\230\275J.\327\275#\255\326<\022#D=\352\247\305=\265\205\220<\266\025\327\275\317l\312=F\361p=\264\rb<A\333F=\277\032g=\331Qu\274\315\233\240\275\341\347\335=9\362D\274\014\025#=\350V\032\274x$\310\275\317\355\333<!\326#\275\214\026==\224\'!=`\034\350\275\324\3263\275\032\247Z\275a\243\325=\332\300\341=\3765\350=\001x\312=\356\325\254=\342\\\214\275\310|N=0\251\305;!\340\200=\212k\254\275X\260\335\275\213\325\234\275pz\310=\233{\237\273\342\225\206=\347\030\323\275&\220(<\352j\203\274\n\226\331\275\232\210\202\275\032Xl=X\274&=I\264\026\272]|\027\275u\247\313=\352>A<\275\261\023=\370a\257=p\222{\275\253\365\014\275\341:A\274Mz\354\275:\325\214\275\\a\202=\310<\214<f\234\323<\266b\200\275\003w\214=H!\255\275g8v\275\000T\344=\326\026\253<\0204\216=\375?\254\275\240w\276\275!\t.=\342,\377\273:\237\222=\257\315\344;\277\023\355<\223\354\235\275\"\213\255\273yN\221\274\230(\321\275\221\033\323\2746\233\242<\252Z\340=\266\344\203\274\342kR=\250\342j\275\nm\232=^\356\354\275\\\217\266\275\025\251\272\275\036\247\344=\231\327V;C\220\331\275\300\264\335=\207-\342\275\277\\\224\275\334!\304=\352\240q<\033\377\210\275\335\367\243\275\332\'\340\275P\252\021<\265\325\265=\364\010\346=\323S\200<np\261=\006\202\305<b\212\270=h\375\313\275/A<=%\313\243=\025c\305\275\326&\230\272\023\335 <\343\310V\275\026U\330\275\240$^=J\333\242=,\250\365<(\235\213\275\2032\350\275\227g>=\223\204\253<\267\342\230\272\273\345\247\274\033\357\350\275\372\026\242\275\372\323\247=\234\021\300=\2262:\274\210L==\247\376\031=\252fI=Q\245\262\275\340\350\256=3\272\323\275\375kO=G\372\322<9w\235=fd\211<\374J\242\275\001\226\267\275<\270\326\272_\205\276;?X\340\275\215A\030\275\346[\310=~\233\026=\n/q\275\235\346B\275\372r\275=S\t\265\275\024\027\212=*Wn=\356h\347<\274*\310\273\300\257\253=\315\271\213<\007\035\336=\035\004\270=\336\027X=\315\231m=\014\330\230=/\361\312=X\323\346<\332\251K=\324\267\302=\007\365\316=\354\346\260=%\245\212\275A\325\253=}\360\232\274=\250m=i\305\271=\270\234\352=\266I\372\274\333{\347=\205\356\244\275\373\372\316\275\203\001\327\274n\205\241\2750u\306=\247.\332=\224\314\275<t\353c=\036!\312=|\032\244=\312\3506=\027\205\334=\003s\020\273;%\010=S\233V=\364kb=\303\010\312\273\227\245\265=\376\022\351<y\262P=Ou\223\275\'0`=66\253<6\234\321\273\256\023\305\275>\221\333=\275\320p=\244L\250\275J\212i<\r_\314=\000\200\027\275\335I\302<\242~\235=\\aT\274\251\215\217\275\034\355\311=<\236\256=\214\"\251\275\350\272\254\275Z\2621\274\375;\360=h\264\313=\300L7\275\340\342\345<\0075\331\275\234\307O=;r=\275\233P\265\275q\n4\275\357\034\026\274\360\304\223=\030\233\347\275\354\277\227\275b\320\360=\271\357\237\275\002:\273\275\267N\353=\252a\006\274>\232\032\275\274\307\236=\266,\330\275\273\214\310\275\227\352\223=`\235\257\275c\311\314<\372{\300\275\205\215\342\275\266\013\336=\261\354\211=\253\346\214\274\243\'\231=\035\'\266=j\244\355\275(m\332\275\242\220\002\275\024W\203\275sz\233\275\235\221\202=\375\3337=\263\213\274\275:k\316\273\260\006\250=(\240J=UN\253\273S\204\251\274\366\037\206<Y\246>\275\351\247\243\275\341\246&\275))S;\272B\\<q\232\366\273\272\254\343=\344|\317\275QmH\274\272\177\301=\351I\327\275\331\344\356\275h\005\222=\033Sv\275\331\360\314\275\207Z(\275\335\262\n\275\013\313\360\275\347\371\022\275@m]\275\334|b=\274\354\222=\005E\356=\227\334\252=l\241\301\275\350\355\271\275\314\310\277\273\327\007\256\275\236>\363\274\n\240\317=\302g\253=C\r\344=\025\014\336<>\t\352=\231\363\350\275Q\316\262\275\033\033k\275\233w\300\275\237\242\230=1\351\315<\334W\335\274^\231\345<\366\246\021<,\305\247<\201<\342\274!|j=o\221\t=\033;A\2750%\371<\313\202\303<\356\367_\275\222U\244<V\341\025=\341\336\364<\211O\300\274\260G8=Z\341\356<\375\034\232=h\215\331\275Tqy;!\312\307==\206\356\275\324\325\323<\310PE\275\323\377;=\263Ee=\375\221\306=\273\326\220\275\256\217\"\273\035\355n\274\003\224\025\275Y\034F\273\371k\343\275\030\001\360\275&\321\014\275\324\203\360<h|\230=\336H\312=\343\324\276<\274\231\013\275t>\006=\311\376\355=3\255\304\275\366\226V\275\000\224.\274\020A\227\275\2341\005\275r\2511=&T\250\275+\336\001;\311\031\305:p\202\365\270E\377@=X\223x=\371_\320<\205\022\325=k;\351=\n\340\003;\330v\251\275?\036\227=P\213\004\275\235\332M=x\221f\275\205\333\301=\023\221\331\273K\217y\275x+\303\275G!\216=\304\355\207\275b\3029=)\253\253\275\370W\241;\201\220c<\273*\341<\314\016$<}\256~=\354\257\245=s\252\310=p\031\\;\234\365<\275\337\226\243:\240\250K\274\362\241\233\274\335DO\275?4\312=+6\333\275NTK\275\204\322\255=5\262\333=\3537\022\274z\036\315\275u<\226=\000\014\235\275[w\315\275O_\006=~\333\271\275-r\250=\003\372\310\275\373\355\301=\035\372\301\275\217\370\t\275\370C\027=\034Y\001\275\271Z\230=\246\r$\275\306\243\275\275!\231\362\272\320\004K\275\351_m\275\214\371\334\273\242O\302=\203Rv\274<\307+\275\311`\210;\365\n\343=\021\2263\275\266F\201\274\313G\334\275J\305\301\275\355\251\231=Oqs\275\261\027K=\200GN\275\003\001\347\275>\'\236=<\363\305<a3==\037\010\223=\233\'\271\275\241E\263\275\2624P\2750`\340=~\032\210=\230\005l=\244\373\026\275\277\363l=C\345\342\274\263Id\272\373\t\020=x\342\250\275\252\355\255;\223i?<7\022\324\275C\r\355=\234\000P=\324\275\306=j\203E=x\255\002=\260w\262=\017h\347\271\330\253\352\275\320\336\247=\370\222u=\257\031\311=\031qY=T\363\272\275$8\251=\375\025\234\275\206!\260\275!\007\334=\247\227\260\275k\030\215<\221TK\275V\306\023<\010\357\205=\2001\024=-\274\351=\210$\322\274p\241\331\275\t\214r<\264\221\211\275!\223\200<\225Y\274=\026\370\315\275\014\374\310\273\221\\\253\275~\211\221;\350\317\344=\377\213|\274F\232\210\275\251\370\003\275\0167\224\274\204\200\256<\230\240\210\275\002\035\250=d\273\034=\330/\242=\234\210\313\274\023\2668\273\233\326\026=&\032\n\274Q\342\037=J\325\200=m6E=\261\244\035=|\331g\275x\371\342=\336\333\210\2745\247\267=\301\342\235\275\377\326\275\274\373/\265=Xu\360<\375\323\237\275\257\264i=\035\037\355\275\336d\315\275\237;\300=\205\343\264\275\253\257Y=\330?H=\034%\361\274\007V\316=\306\246\246\275^\375G=\326\342\233\275[\244\213<\0265\355\275U\351O\275\211\022\232\275\370\006\273\275\002\270\323=\264i\261\275\312\204]\273\016@\303=\274\357N\275ZNN=\354>\337<*\320\202=Z\031{=Y\004|\275B\224\352\272\207%\244=\322Zj=\352?\245\275\212\331\261\275\333\276\350;\025[\032=4\321\365;@H\213\275\005\305\277=2~\252\275G\361T<\033l\250\275\240Z\242\275`b{\274\217F^\275\363\241\261\275eQ;;\303\272\277=\001\340\350\275#\002\314=\342\215\031\275\307\367\260=\342\325;<?\310\206=A\222\344=\020\251V=5(\264=^\017\222=\220r\204\274\251b\032=\326\357\241=j6\352=\311\224F=\316\305\335=x\255T\275]\250\307=~\225\363\274\222;\304\275Q]\320\273\376\343\006\275 |\340\275\201\351b=\323l\211=\325r\354:w\277l\275\251\270\310=Ra(\275)\316\244\275\253\323\326\274\324\324\326=\273b\001\272\331\371!\275\217\361*=*\356U\275St\334\275{\023\010\275+Y\205<\336^\316\273\307\0229=\024\344R\275=\332\263=\324\270\n=\204\253\024\275\020\266\307=\307N*\2741\326\336<\336\330\246;\346=0=AY\267\275\330\373\305\275\033\007\214\273\360\357%\273b\347\036\275\300!Y=\354j\205\275\312l\352=b\261l\275%3\274=\371\367>\275\027\273\347\275R\003\254\275F\370F\274\241\306\212\275\200\032s=\272(\323\275\226y\305<\302\316X=\037b\017\274{K\311\2753I\346:\300\351g\275\255\335\332;`\256F\274Y\215l\275S\232\360:\366z\201\275\"\271d\275\360\302\204=k(1<\266J\250=&\304\344\274O\265\231=NO\216\273 \211\333\275\302X\t\273\264SX= 4\232=X\260\337=V\033m=H\331c<\344\256c=\313\227@=\303\346\266\275\220&g<\001\364\025\274\201\315C\275\177\000\253=\362\344x=\2119\304=\225k\255\275\003\346<\275\275\371\017\275+\264\342=\224\273R=d\361-\275\306\241\214=\304\266\r=r@6\275\203h\332\275\312w\261=\300>\231\275\371\254\350= \211\335=:\313\236\273\3211\356=\262=\357=M\213\216\275ZE\204\275(I\370<5\021\261=\375O\236=\375)\366\274h)\022\275\301V\211=\227\033\265=\005\t\354=?c\035<H5\004=O.D\275\372[\234<\016i\307=A\244:=\3343\334\2757\216p\275q\374g=\006\363:\274\024\333\344<\370iY\275q7 \275\326\266\340=\347<\313\274\\\025\205=l\265\202<\370R\361<\\\r\271\275\353+\204=\014\205\323\275@R)\275T\216{<O\322R<w\333\217\275\204TK\274A(\261=bc\325\275NXJ=,\037\335\275\327\216\341\275(\225%\275\207)\365\274\305\361T=\260\3337=\013\022\317\275\240u\265=\264Z\306\275G\377\313\274\222v\321<\271UW=n\203\307=\321z\325\275\322\330\253<4\200\233=\002\307\272\275e\252\203\275|\203\326\275\256\364\241<\243\223\331\274\032+\311=\321\256\021\275\262Ph\275\014)\221\273b\214\245=s9\235=->\344\275\021\220\313\275U\315\022;\375\201\200<}M\216\275\237\302\017=\220\264\375<\353r\207=|\212\336=\221\252\347;X\201\270\275\262?<=w\263\216=C\367\311=YJL\275\3623\"=z\010\234\274\303\362\300=O\375\341\275p~\222\274\200K\214<\357\231\226<`\034\277\275\201-\200\274\025\024S=\201\014%<\246\007\322\275$\241u;\375\255\330\275@\214\255\275\270]\257=\216\362n=\376|\222\275h\365\r\275\357T\262< \214\353=v\362\013=%2\242=@\210\t\275JX>=\275?\237\275\265\300\354=\203f\027\275,,\336=\002\325,\272-\256\236=\364\253\263\275\334\307\233=\032\022\224\275\210=\320\274\231.\237<\261J\266\275\223\346\353\275\354C\007\275E\301\206=3\243\360\274\007$\356\275m\000\254=t\346\273\275\004It\274w\246\201\273\307\"\202\275Ec\260\275\t\000\205=h\265\371<7U\336=\267v\223=\0369\207<a\000\210=G\331\306=m\327,\275\325\304\221<\244\307c\275~\020f=\251\337\212=s\357\241;.b&\273I*\021\275\020\007\013=e\350\326\274\335\t\021\275\212\202\t\274P\373\254\275\321\"\220\275vo\271\274\313\335\302<\372^\325=\020aB\275\177\375x<\257fO\275\245\201G=\362\275\220\275]\n\336\275;\315\322\275N*_\272L:H\275gZ\034=#y\326\274\315Q\353\275&\337\276\275\033\327\305\275/|\335\275\3652~=\322\345\035\274\024\010\024\275_U\304\275\027 w\274\346p\332=\016\334%\275>\201\264\274KL\205=\214+\304=\255\000s<\331\370\357\275\350`\222\274\320\023\252\274O}\346\275\320\001\314\275\001]\261=\226<\266\274rA\250\275\014\367\333=&Q\337=n\315\202<\230\373\031\272piE=\215F\020<2\352E\274\217\025\347\275\256\272\001\2744sL=\3541\213<a\233\330\274:U+\275Z\345\332\275(\352\202<\373U\344=\303\234\250={\252i<Jy\316=\2141\252\274:V\353=\326\257\336<FZ\200<\274:\261=\033`^=du\274=\211A\353=]4\320\275f#\210\275\356d\300\275\326\375\246\275\240M\301\275\037\273\307\275\021H\254<\000\347\004\275\361S\334\275\030\0204\274O\314\201\274N\201J\275\355\254\222\275P4\002\275\203\263\330\275\324\274\023\275\323\315\021<\322\233\274\275\276a\270\275i\341\255=c\242\217\275\216\324\245=\307E\006\275\275\360\205=\236\233\264\275-\325\232=\373m\270\2752\361\226\275\256\300\322\275\312s\022\274d\273\212=\t\360\317\274\0244\244\275#\201\367\274\342\036\327<jYV=\214/Z=\223#\275=\316\276U=\t\033N=\377\274S=\0312x\274\013ow\275){\277=\334\364~\275\203\030\t=zz\330=0\354\352=\256)\342\275\017;\261=\010Q\331=\305l\332=f#\360\275#\360\336=\\\261\003=F\307\013\275\323\211\021\275\367\347\246=\317\031,=:\221{\274D\217V\275gN\334=\0205\234<\351\272\205\273O\212\r=\245u0<\274n\245\275\247\362\231\275=\304\354;f\264\353=\017\364\216=\260\373\222\275xn\222=\2536\271=\237J\264\275\367V\335<Q\202\344\271=28\2752\n\235=\304/\302\275\233l\273=\366_\n=\217\005\275=\212\365\312\275zq\233\275\366\311\311\275\334`\025\274\204\324\357=P\004/\275C\337\337\273jj\201=auc=\274\023a;w\245\325=6U\215=\3569\366;\331\016\320\2757#\245\275\334]\336=\020\252#=\341\'\326\271\377\224\263;c*\315\275\366=\307\275h\237\276\275\277|v\275\250G\271<\035X\004=\225\272r\274\312P\225\274\345\376(\274J_}=j\377\276=#\354\346=\351\270\220\274\232|V\274\301g\317<MR\232=x\274\330=\001\340\016=\'B\363\274\240\340\'\275*s\337=;\273\333;81\277\275\343\226\222=\316\326\304=\346\255\311=a\333\273\273p\360\236\274\000\331\273=\3246\306\275\240/\207\275\027h\275\275%4r\275%\363P=Iw\237\275\314\014\321=\220t\320=\014\'\202\272M@\204\275\374\361f=\314%\363<\251\270\307;\266\214\276\275N\007v=\320Y\276\275\320{\364<_7y\275p\243\231=\030M\220<t\236Z\275\200F\276<\277\326\253\275D\267\263=\377\230\241<\003\007\037=\311\t7\275`d\211<9C\214\275\025\262\216<\225\351\347\275X\312_<\246\320\344=\253\261\220\275j\232\253<\035&\326\275\201\004\322\275\376\330\222=L\277\300=8\304\341\275\340NP\275\177\274\267\275\270\365\322\275\260\263\314\275Q\321\322\275\360\262A;\321P\022\275.V\202\274\221\004\356=\266\241_\275\332\324U\275NJ\223=\010\rE;\355\352\260\275l#\336=\201g\324=!\t\224\275\376B\224\274\265P\031\275\273 \222=\216\271H\275\037\363\177=\306\357\352\275$B\327\275\177\030\\;r\014\327\275\216w\026\275\241\030\211=\177>\212\275\254g+=\365\004\224=\007x\035\275\370|\307<\263\320\244\275\206\002\251=\263\020#\274s\342\254\2756F\'\275!;w\275,\340\205=s\274\323<\263\201\022={\020\236=C\360\223;q\216u=\231xC\275\323E\257=\244\216\266=\024PE\274}\301\030\275\270y\t\275\216\302a\275\314I\303=(\374&\274\003\305\337\275Yv\272\275\357R]\275\234\274\233;\322DJ=\037\265\330=\372\207*=\316\321\223=]\203\300=\340p\034\275\2359H\275&:\033=F-y\273\\\303\326<\226\301\354\275\036\300\253<~V^\275\025\274\025\275\214\261\362\274\3369{=b\336\345=7\267\317\274\252\360\307\274c\262\253<C\305\236=q\206\202=\340Ei\274\227\371\203\275\300\027\211\275\214\355\320\275 \"\274=\257\0316=2+\354=S\307m\275\002\032\221\274\364E\247;v\223\305\275 &_=\007\365\304\275]\024\337\275\367\\\000\275\2433\260\275\277\236t\275QB\353\275\375\336\362:sT\271=\021A\253\275\364\002]\275\275\213\216=M\362\257=\361\342\337\275\375\013\221=\025\230\347;\260\270\033\275\272\251\356=\"\031/\273\201\340\330=\256\275\325\274\036c~\275pe.\275\035\333\333=m\021\253\275\203\006\304=l\027\000\275\227\242\231\275\033\"\343\275}\022\206\273F9\263=\035\243\177=\023c\327=\245\302n:(\320:=\273\315P\2741$P=\326W\263<\030\340@\275\013pA\275\\\357\367\274\215\216\243\275A\343\t\275|x\001=_\365\002=%]\275;B\275\326\275\372\013$\274\266I{\275/\250\201= \252\214\275\326\020\316=\007\177\275\275|\274\202\275\r\266^=\374\240(=y\373\022=\354T\035\275z\021\321\275\320N+=\000#\002\275\231\374\245\275\325\253%=\237\312\216\275v\373\036\275\3148\252<\217\t\262\275\2172j\2759g\313\275H\205\325\274\242\005i=\271\331\207\274\303\243\264\275\010?\325\275\235.\230\275$\3019=\002\314\213;\343\343\023=S\236\201<\000\323t\274/\';={\031\341\275\315\210\246\275\230\'t\275\225_C\275\211im=\267\231\203=\303\212\317=9\324\214\275\245\336\352=\304\030K\275\\P\276=\010\0223=(_\265\275\260\n\331=(\'\215\274\t\025\360<\310e\272=\262\350}\275\356B\261=\233\361]\275\253M\257\275Y[\007=\344\332Z\275\206:\200\275\216\304\222\275>\033\333\274\212\322L\273\312y5\275\337?\007\2752\000\326<\031\270\"\275<\371\222=\342\227t<N\r1=H\253\313=\177;\001=\302xr=\226!\251\275L\351\261\275\216/\231\275\2032.<\313O\026=\331\225\006\275\366\252[<\303n\337=\323,\264=\007\342\234=\335\237\230=\024\221\225\275\233\330\314\275! F<vW\342=&\013\251=\267I\213=\004\257\314\275g\235\253=B\030\315=\037\353\227=S\210\246\275\2021b=\\J\333=4\273\272=e3\220=\306\370\032;\312\321\311\275\233\277\206\275\034n\302=\307\352\235\275T\321?<\337\300\274\275(\270b\275U,\244\274\343\331\244=@X\344\275\312`\007\275\214X\315=\206)~\275\271#\276\275v\327\014\275^\233\322=\237\243D=K\036\'<\364TA\275\370\315\256\272\235U\243<2\'w=\346\013\251<a\371E\275\336o\203=q\036\306\274O\264\317\275&\211\243=\326O\337=\202\003\354=\327<\270\275*\370v\272cTb\275\276\345\215==\014{=\255\273s\275\250\201H\274\360m\201;\355\373\223\275\206\016\213\275\004\226\305<\026\2336=\230f\326=\236\233\212\2750\303\354\275\231\010\347\275\013\376\211\275\2031j\274z\327\211\275\303G\246\275\321\345\307=\031\026\305\275\326>B=f.\322\275W\271\234=&Ml=\031\232\205=\320\323\301\275\270\262\010=dm\230=\031\231z\274\353\341\033<O\366\237\274\356\216J:\023\020\256\275t\262\243=\312\342s<\377\032i\275\264\330\r=\260\201\260=\241\244\256=_$\267\272\201}\272=\267\314\332=\226s}=\203\375\250\274_$%=Y\245\351<\"\362h\275av\204=\266\033\222=\243\236\246\275\320\t6<?\013\351\274\360\360\330\275I\200\251=\335\314\305\275\t\367\221=y\300\312\275\357\376\337\275r\336\270\275\367M\007\275\265\267\210=P\305\274\275d\r\366\273\225\307\217\274.\222\030=\300\034\203=5\357\215\275R\255\275\275\213\243\236\275\360\240\270=M\233\304<\327\313\303\275\211\303\272\275/\304\030\275\262\304_<\354\000\306\275\351\273\274\275\rNM=n\227\242\273Q\355\367\2748K\271\274\224\246\013\2758\201\223=y\345^=;\311\307\275D\006\325<\332mL\275\233w\322=,$\206\275\336\3552=)i\005\275M8\262=\372|\204\274\244\237\277\275\031F\242=\010\247N\275\305\201\263\275nP\247=\242\245\222\2758$\327\275\031x\273=X\320\264=f\001@=@D\351=%\274Z\275\203\361(=]b\275=~\310\240=4\340\231=\206i\201\275dl\274=\001\320\233=\341\216\221=+\224C\275\032\353G=\037\266\323=tr[=\314\353\226\274E\313\214\275\250U\203\275-+\037=\2439\263\274\"\272\224\275\014\374\341\275\013_\377\274}?\361\273m\271\007\274\375Z\273\275(\341+=4\205\312\2755\362\317\275EH\202\275\343\206\021\273\243\207\265\271\366\276E\275\364\\\321\275q\322\242=\213\\\353=c\301\316=\010\222\225\275\037p\215=\366\247\315=\223)R=?H\227\274\212\014\330=!\327\212\275E\322\356\273L\321\212\275\022\323\204=\301\307\302=\267W\325<_1\321<{\251T\272\253\001\027\275l\332u\274p\312$\275NEf\274\253\322\227=\177\376\352=\021\017\n\275\310C\273\275\234\2510\275V.\310=\027i\273\275\007\367Q=\337\n\326=\nK\324<g\031\243\275N\271R<\007\007\303\275\226\200\215\275\211p\222=0\264\362\274\354\261\004\274v\303c\275\362\270\000\274\315\003j=N\037\260=Y\327\025\275\251!\272=\220\030\252=\n\253\345=ncZ\275i\253\340\275\205D\263<\030\n\277\275\n\372_\275\0229\330=\\\r\260\275]\254\302=\264\3636=i\270\206=7\017\236\275\304FF\275N\366\242\275V7\336\275D\235@\274\225\022\215\274\225\336d=a\236\301=\304\030\270\275N%\355<\342\225!;\357\007\205=+a\227=4xz\274Lf\300:\214\017\222=>\376\265=e/\356=[\234\265=\236\"o\275\264\306\217\275\225\202\351=\316{\270\275\206\323\272\274\003\212\213\273q\025\032=\270\313\343<X\2076=*(\307=\356\000u=0?\311\275\245\037X\275\273?\327\274\225\301\205=\241\251\277\272i\\\266\275\0233\'=\317\356\260\274g\333\262\275\035\'\200\273\245\010\210=X`\240<og\206=\372#\026=7\030\232\275J\t\326\275l\357\t\275B\207p=\321\000x=\351\256_\275\354N\231=[{\373\271Y\250\307\275<\316\247=\334\224\025=\327\236-=\005\334\273\275\034r\272\275\004\333\303\275Z>\213=\367s&\275\222\233\205\274\307f\347\2751\022x\275|\254\321\275\363,K\275f\274\320=}\360Q\275\325\255g\275,\341\337\274E\025\016\275\345\t\017\274*\024\212<o\0077\275\233\212\355\274&\214\376<\237\370\351\274U\311\335\274\203q4=\025\013\032\275\235\204\324=\212|\347\275b\313\303=\334\252\023\275\240m\237<\266B{=l\237i\275\254\344U\274\026\375\323=`L\333<  \006=*M\351=d\352a;\331\212\217=\364l\277=\273\230\020\274\353\200\352=\252\247p<sM\212=\277I\360\275oW\275=a\003>\275\022\352\226=\021\000\216\275\230\273\341\275\036\224\261\275\342,\246\274J\331\326\275\355\254\353\275\327+\022\275\014\350H\274\215\004\210\275G\365\226\272\216l\311=XF@\274.sp=G^\224=X_\322=\2470\262=\201Q\246\274\020\t\224\275\354\006\211=\305\356\207\2759\270\241=\353\035m=\227\".\275\0304\241\275\375&\221\275\242o\037\274\371O\316=\312\302\314=\354>\210\2751E\356\2754\363\302\274\r\021\242\275\245\373\210=\032\025\271\275v\327\214\274bW\276=\220x\336\275\365ap\273[2\321\275\033\2660\275\243M\256\275\350\207\272;\177\220\352\275\023\255\332=\3233\201\275\266\343\n\275\324E\324\275L\204g\275\253\362\357\274\0229R<\370:\226<H\253\265\275^\n\336=B\031\236=\000\3664\275\001Y\276=!\371\254\275\202\270\324\275\315\036\274=\330Dn=\340%\315\275\337\357\217=\237\273\346=+\031\226\275K6\210\275#|\315\275\027\244j\275\031\314\r=\010`\025=L\364\327=%y\325\273\022\000\271<\272;\273=.\321%\275\255\356\010=0\277T\275hN\235=\372\315\013\275\320\3307=\301\027\304=\000\254\001\275>\200\235\274\344{\232=\374A\230=\353*\335\2751(\034\275\005=\250<\'l\300=\375E\203<\300\023\320=n\010\325\275\352\000\242\275\244m\300=\003\277\355\275\312\361\256=\002x\252= \227s\272\3304\351=\207\022\336=\211n^\271\314\323\207=<R\200\272\367\3302;\270\331|\275<\274L=F\351\250=P\243\017\275\207\034\257\273\242E\274=S\253g\275E\346\333=\314\345/\274\315J\276\275\304\0013\275\315-\367\274`J\201\275;\370\321\275;;T=\315u\256\275\340rr=\352a\227<q\375v\275-\250\215\275\215\236{=\217\234\240=oN\243=\375\336@\275\332 v\275\255\335\035\275\222\234\333=>;\205\275E\000\013\275,R\214=\203Ex\275T\264\352\274<j8=\214\231\250<\003\007\304\274\354e\263\275\033\340\026\275\305\254\365\274l\325\245=>\210T=[\177\351<\207\247\201\275\367\3349=u\276\235\275n~\316\275\256\335V\275\334\363\200=\360\035\300=\203\253\222\275\364fp\275\350\211\213=\347\325\331=\377\246\336\275\035\301\221=\316\037\335\275\010\366\377\274\311y~\274w\302\223=\243v\357\274>&\357\275\366\023\221<\304\022\206=C\217\211<*Z\242=\226~\000\274\364hX<u\020P\275L\261\342\275\'\356\357=\004\255\315=\362\201\225=\037\305(\275\264\036\206\275w\361\276=I%\022\274\006\253.=\022\031\245\275\331%\205<\377\251\223\275#\201\340=\311\026]\273A\030\341\275[\014\224\274O\246\005=\275\233\335\275y\311@=\331\373\320=\315\247\334\275R\262\030=\363h\221\275\322\203=\275uv\215\274\035\016\322\275-\'N=[\314\274=@s\242;\256\261\302=[\035N\275\0207\347=P\'\230=\266\222\237\275\256\204\253\2758\366K\273QG\266\274\232)\224<\0244l\275$\374\352\275;\255\255\275\267\350\r\275\261\3358=\334<B=\343\344\340=ue\234=\317\275)=0\\g=\037S\026\275\026\314\216=_\013\333\275:\243\3529\245$T\275\003\3708=\226\022\272\274}\352$\274Lb\250<\272\353@<{M!\274\304\020\204=\020\002\217=S\311\343\275\371yQ=\202\221\255\275\005*\326\274N\320\213\275\240\262W\275e(\205<\307J\266\274;m\266=Z\332\\\273\033q\236<t\376\"\275of\274=2\334\227\275\254\3142\274D\310h\274\271\214\264<\277Z\007;\350!\273=\362\254\336=\276\251c=\303LJ< D\277\275\223d\265=\016\231\331<6\202\330\274\207\240\270=\014\014\244=\220\210\254\275\035f\256\274\355:\247\275\355\371\217\275\234z\217\275\036\305\021\274\201\\\316<y\316\344=\3774\342=\362\316\202\275\207e\346\272\n\364j\2752\372\351\275\333\336\267\275\007\306\214\275\023\212\242=c\265\266=\262\341\351\274C\027N=U\252K\275\322\345\227=e G\274T\304\275=\277\322\310\274\273O\273=\250\332o=\276\377\336=\335\244\321\275\025\017\225=\247\347D=\364i\201=\356\035\273\275V\351\332<V\026u=\034\303\223=\241\034\252\275>\016\272=\014[\357\275X\026\222<\227H\247\275\037\0255<\350\274\331\274\255\270\263\275H\256\330\275\322\331<<P\274\216\275\254\315\223=y\210\250=lUQ;\3724\272\275\227uL\274\340\'\016<\364\210\340=\021\240\355\275RE:\275\030F\205\275&\331\250\275\014\203i\275q\245\327\275\306\004X=\264\010Y\275y\257\352\275\263u\333=\310a\276\275W}\236\275\005\242 \274\301\037\266<\022\305\307\274C\364\032<\366\237*\275e\245\245\275\334\005\226;b^\313<\001w\323=K\245.\275\272k#=H\2308=\226\237\223\275\007\325O\274\371;\355=\276\021w=9\232\206=\276`\256\273\320\221/<\347\332\272=V*\323\275\257\367\337=>\340\306\275\372\235\345=\3470\340\275\271\234y\275W\004 \275n\032\306\274W\014\262=\204\367d=\\K\214=\220\216\246\275\317\347\025\275\333\314\222<T\007\274\273C\274\325=o\227F\2751\220\273=\205\355\232\274\002\245\307\275\315\207\245\275@Y$\275L\323X\2746\306\363;\220\205\272=\255w\214\274\241\251\212\275\275\000\337\275\353\355\013\275\336\373\241\273\014\353\200=\324\234\326\2752^\224=\376\263\335\275\312\357\321=\006\t\343\275\257r\243\273.n\300=\327\234\333\275J\306\363<\211\306\206=\233\030\273=\216|\022=\202\336\227\275\244\242F\275\013x\337\275\351O\330\2753\330\200<L\350\022=\201E\300\275\325v\n=\241\273]\275o9\250\275H\023~=\233\235\370;\2651H=\314\005\032\275\000\244\354=\251\212\330=y\233\035\275\376\001h\275&\007\322\273\234\264\317\275)\214\271\275i\204\266=\037\244\350\275\363\251\233\275\313\016\n\274!u\362\274\352\340\002=\315\362\310\275O\315\315\275\323\202\206\274\345\204>=\356*\321\275\324{\206\275\302\232#=,Y\02585{\231\275\377\341\3329?\316\336=\002Zk=;\002V\275o\263\r\275\3439\000=\321\331d=\334r>\275\250\3617\275d\222\301\274\014\302\260<\320\252L=,\225\304\273QL\237\275\377\317\330=\316\2016=jN\234=j`\022\275\276\373\004<\207\030\337\275\216\244\300\275\242\267\251\274\246(L=\225=\326<\257\372\"=V\372\035=\212Y\232<\035j\356=\243\312\216\275\'\t\310\275.\0038\274\337|<\275&~\256\274G\207\t\275\277\306<\275\230R\256;\341L\351=\024x\237\275\'\037\246=Z\307\200\273qmP\275Op\234<L)\326\2757y\327\274\257r\266\275\365\364\320\275\024\276\336\274Z\351\332\275\271\245\244\274=\251\301=\320d\327=\240o\207\275\033\014\213=\276\347\236\274\37643\275\037\021I\275\tC\200=5\262w\274\006\322\246=5qp=Wg\325=iQ\355\275`\220\320<}\301\361<}7\010\271z\037\202\275\206\252\206\275\213K\332\275y\316\001\275\377\267\305\275z-\344\275\310\312\307=[\257O=\316\350Y=E\3717\274C\330y={0\354\275.EA\275\253M\237=b\227\217<\377\2447=q\371\371\274\203\344`\274\233C\360\275.\266\263\274V\300\206=\236\347\206=h~P\275\244\306\346<\2708]=Xz\274<\316\250\331\275\202J\037\275\272\360N\275\302\177\272=\345o\013=3H\302\274m\337\001=\223`\215=\351\312.=\300\000\316<{\227i\275\346c\304=P\017\352\274\361.\331\274gC\342=1\206t\275\240\306<=\302\371\t<v\242@=S\000\256\275\206\324\214\275\222p\223=\207\253<\275G\243e=B\345\261=\022\257\317\275,~(=\336\257\357=\3523;=\202!\326\275\233^\326:\273\247\'=\347z\003==\326\227=-\337\232=\222D\234=<v\031=\370\345\202=%z\314\275\350\027a=\003\236\210\274\370\262\n=\022w\330<<\370\372\273\203\177\204=\232\200\335=:\006\210=w\\\206=\'\277\037\274\253N\250\275\264}K\273R\035\262\275O\271\256=<h\226=\303E\273=\203>\246=\2277\037=\3706\335\274\317\223$=\326\303\201\275\317xE\275\366\013\262\275*h\244\275\350]\376\274[\356\253\274\305T\345\275\305\n\335=\216e\254=\242\265\253\275R\205\334:\031\311\352=\245\215\332\274\255\274\264\275\244\253\263\271\207\212\320<\210j\216<\323\273\205\275\233.\201=\240\237\303\275\315e\033=\nu\t=\360$\214\275X\202\316\273\356\262\022=J\222d\274s\256\262\275\3349\271\275\334\332K\274i]\320;\365\247C=\207\205\341\275[\217\275=\331\303\222=+\263\313=\033\246\272\275:u\224<\336\342\004=O\264\031\2756y\332=\005_\354\274\214\314C\275B\027\037\275\006\250W=\223\240\250=c\370\265\275\261P\360\274\250\211\325=\245\013z\275|L\377\273s\376\341;v\320\305\275\246\032\201\275\204\335#\274\274\271\215\273=]\323\275dr(<_\351l\275\316\013\006=\302\n8<\033A\305=\034Oz\275\035\264\203\274\236\027\"=2\212\247<\233\273^\2759\243\247;L\270\346\274D q\275l\276\272\275\216\233\273\273\304*\233;\260=\270=j\354\310=\343>\221\275\177\036\254\275\251\210\250\275/\035\244\274\350\343\375\274(%\313=\242E\227\274\347E\016=\3474A\275\231\003\331\275#\217j\275l\322\320=\275\007\201\275\nX\376\274\325\260\310\275\324\313G\275\025\270E;$\031\217\274\240q\276\275d\n1=\340\034\230\275i|\331<d\356\272=\213\'K\2749\221\334\275\341-U\274\256\240\305=\001M\356\275\342k\017\275*\334\332\275\315\2539=\022\013Z=\254\264\306=K\345\327\275\010WJ=.\025\312=\t@k<$\276\'=\336\356\217\275\n\302\262\275?\344\n\275.P\220\275\211\324\235=\214\017\301=\350\211x\275\002\2469\275\226k\241\275\327\007Y;\031\006\317\275g\323\264=\346\334\244<1\334\254=\353\333K\275*\221\334\275\315\332\245=\337\275\237\275\356r\275\275N\t*=\251i\334=y.\'=U\314\026=\225R\313\275~s\203\275\264Y\225=\253`\302\275\221B49\035\013\265\274\256\275\355:\232\031\354\274\203\336\324=u\376\336\275\373\276\003=S\306\341\2755\345f\274\304\2303=\203\013\212=1\0220\275\013\200\226\275\233e\272=\372Iq;\317g\302\275\230\344\241\275\233#\240=rx1<\020\376\331<w\013x;;\274\216\275\036\254\251=\272\201u\275&$%=1\024\305=W\226r=\362\021\004\275\256\207\022\275\002\234P\275\"\264X\275\323=\320\275\343f;;\351ez=\025\251\325=\226\006l\272\257\016\222<\260,\217=\366\300\215\275\"\341\263:l\320?=\213\235\267\275\334dG=\252\375s\274Id\333\275#\2603=\327M\326\275-\374h=\330\353\351=\013\354\250\275\222\256\357\275\316\037\215\275\367\376\002\275\\E\316\275 7\307=\347z#\275\236\013\304=\332J\037\274\361#\360\275=\332\347=0\225==j\224\254\275s&\330\275\323\266\313\275\0043Z=\026\345\360=\373a\277\274\372?\250=\320!v=@m\345=}|\212\274\355\016\354=|\344\213\275\355\246\277\273a(k\275\227\324\317\275\345B\021=;g\324=-\036\233<\016{\033<w\210\254=\301\352\305\274\305\356\021\274\r\371\240\275\320Y\260=;\201G\275\265G\230\275%\t\335\275d@)=\034R\261=\277\240\322\275E_7;\325;\360=\024\034u<\340\202 \275\006.\372;\354_\240\2754\215\373;\272`\310=\000~\212\274\325C\276=\301\025\271\275F(\311<\244\346Y\275\033(\243\2752\200\246=s\330\324\273\022\211\247=\250Gw\275\273\275\275=\372\006u=\027\236\024:0{\261=AY\252<\377=h=\213\253\203\275\276]\344\275\267\033l=\036&\305\275\334J\352=\334<\026=\311\363\225\274\020c\337\275v\236H=\326\371\304=/{\336<7E\212=CX~\275G\327\241\274\177\215\246\275\345\037-=q\307\'==a\250=S7\357\275e\370\321\275H<Y=$\330Q\2744\216\330\274\243i\247<\355\330\325=$Ly\275\272\202\336<\271\320\203\275\377$\262=\263P\330<\377e\311<\010\267\334=6F\273<NR\222\271)\001\251=\201\366?\274#\303\235=h\017Q\275\241\024\300\275\366\231\026<W\317\022=__\007\275\206\265\256\275Y\263\246\275&}\221\275Uc\313=9\033\366<\337\030\273=\277j\310\275\216\213\331\275\361\311\315=\364\010\357=Fr\254\275kb\013=Q\024\325=+\236i:\213\355\250\272\275\374\322\275%YQ\274NZ\305\2751\032\206\275\306\004\302;\203\206\360< \023J<\223V\304=\376Z\330<\353(\256\275\340\210\263=1O\241\274\356\273\372< \313\370\274\316\255\356\275\221\342 =\342\267\332=Q\222\315\275\001\223\220=L\336\025=\262\240\003=\304\367W=_\027\235=\014\226\205:{Q\354=E\006Y\273E2\311\275\020o\273=\241\327\202\275\274\034\227=\337\334$\273\017\354\002=\240\364\025\275N\206\251\275\223,\256=j\327\352\275\\\302\204<\223f\310\274\273](<O\253\027=8Hf;S\225~=\026\347A=\223\314\240=\3573\013\275_e\231\275\207\216j=\214\317\242\274\342\366?\275\220\204H<\227\276\333=\004\263f\275\340q\342=RQv=\320h\026=zU\346\274Si\263<\265L\201=\313\237\341<\272\355\246;\246X\267=|\007U\2756g\235\274<{7\275p\032\233=\3342\315\275\244f\316=\326e\247=.\200\004\2750H\360\275\225\246\366\274\232\021o\275\355\223\344\275\266I\347\274\321D\\\275\222J\311\274I\215&=8\213\320\274\212\372;<\211\364\246;\270(\010=\343?Z\274=\201\020=\224U\201<:p\006\275\236\353\260=h\014\214\274\001\2371\275\327\336\207\274G6\341<\375\'\203=\313N\006\275\022a\352\275@$\227\275f\223*\274*z\003\275\033r\370\274V\212q=\027c\230\275\312\207\261=I\301\334=w\333g\274\213\240A=\263\227\206\275\243\321\331\275\261\216l\274D\226\232=\024$\243=\376\347\352=\336\002\214\275D\350\231;l\267\003:\235\322\277=4\316\311\275\301\255\316\2754c\r<\362\247`<\323\326\277\275\274tn=%\002\003=\201\367\332=\333\354\271\275\327X\250\274\234b\236\275\334\3278\275s\303\234=\204\361\346<\256\374S\275W\316o\275\016u\310=\014>\237=\017k\216=J\226\300=\234\3304\275M^\257=\230b\372\273\020\014\215\275\005\310\t\275&\321\335=\211\033\303\274\262}w\274\276\007\355\275J\352Q\275`\342\024\274Cq\355;\360\300\333=e\363\220\275\335\301\205\275\315LX\274=\206\277\275p\013\206=\257\2716=\323\231\017<R6\317=\033\375\002=\202|\212\275\371\251\343\275\226\257\250=BD\322\2753\316L=\271\314\020=\340\334\270\275\014\024\233\273\242\213\252\275:\355\250=\207\341\234=\367\204P=\3579\314=\201\027\231=\272T\302<MET=\004\017\251= \345\303\275\006\327\022<z1\252\275\230\207\303\275@\315\323=\347\300\235\275\260\210\307<;\204\023\275\3304\025=\013<Q<\350\220\237\273\323\030\204\275[\327x=\005\213\354\275\327\264\255;\233?\264=9\313\356=\036\223\260=\221{\013=\370\036\263\273\356\230\352=\333\204N\275@\343G\275P2\370\273\216\265\313<-\350?=\376\340\017=\344\326\355=*\220\360=\253P]\275\257XO=Uv\323=\211\rB\275\214#S=\331\207f=\362#\267=\334E\202=\250`L\275\253\374\037=\331y\351=\215\336\360\274\3742\256=*S\033\275\tD\025\274\345Z\007\274\226\014\302\274r\270D\275\261\317\241\274\307\325\267\275\307\337w\275\313\210u\274\241\222\201\275\266\257\305=\177N)\275\354k\276=\342y\017\2751\307\214\274|@\031=E\303\347<\021R\306=7 \311\275\210\276\304\275&/\231\275#,\210=\001\341)\274\372\206:\275K\005\361=;?\333\274\2348\032=\343\370\326\275S\"\253\274|w\322\275\347\036i\274SJa\275ho\353=\267\255\263=\276\256\033\2757W\352\274\366<\033\274\033\240\260\2756\027\261=\207\324\324\275\026\351\231\272\241\266\271<PT\223=Rq\233=\357\370\303\275\016\364\304<K\2710\275o\325:=2|\027=\371\246\351=\320\376\262\275iuK\275\005\242\327\274\223\371\024=~\243\322\275\t(\';\247;\323\275\211z\024=\251!\271\275m\353d<L\342\326\275\313l\335\275N\014\316\274<\353t\275\037F\003<}\251\301=E\004;\273\271&\273=\014\264\214\274T>\222=\032\377\344<\354\277/\275\351\177\351=_\3050\275U\350\310\275\000\177\356\275zef\275JC\200\275\274\217\211=\255\277\216=I\020B\275*\375\037=\010\004\226=\330\311e\275Yb\302\275\000\310\320=\210UP<?\332\312\274\213\360 <2\347\032<u\035\271\275\310\244\331=\021\266\225=\027\352\021=\2671\324\275g\036\244\275\234k\263<2\307\260=\242\233\335=\007\342B\274N\313,\275\305\254\004\2732\224\266\275\320\332\313<\333c\256=\033\3739\2751\311\233\2751f\232\275\265\"\300=(\314\365\274\366\217o\275~\213\177\274\023\351\324=\343\224\177\275}\262\317=\263\035#=!\344\002\275d\324\207\272\311\022\356=\026\262\334\275]\266\305=m\347\301=\254\246$\274|>\364\274\0342\340\274\223\025\006\275\232R\350<_\371\327\275\355=T=a\224@=\341\363\263\274,^J<\367\r\313\275{\377\266=\231-\327\275\204\243\313\275`I_\275\361p\257<\214\360\276=3o\314\2752\017\372<\353\227\350=&\024\206\275\242\343\270\275H\360\320\275\377AL<\264\013\006=\3205\242\275\355\017\373\274\220\024S=9E\031\2759\346\313\275;\217\364;\000c\347\275\330\005\227;\340nS\275\322\313\340\2749\214\214\275\213l3=\245\356\336\275Q+h<#\232\302\275f\352\234\274\310\255x=zd\347=\251\201\206=~\253\273=\250\343\357=\212(\363\274l\326\202\275\022\366\216\275\000\252\323=\307\322\200\275V\233\334={\261\354=\306\206\034=\n\021\312=$\013$<\022\177\"=O\\\313\275pZ\346\275\325\220\317=G\372Z\275fm\231\274\350\"\256\275`#\250\275\227\204\265=\255\037!<\234\304\361;%=S=\005\006B=\\O%\275iv\307;\372\013\316=\010H\273\275\017\312\246\275=H\220=\017\340\311=r\002\201\275\332\361.\274\227\000\315\274\203\266g=L\221\266=@\240}\275\242\341E\275\'\336\312\274I\307Y=\200]L\275\026W\031=\217v\234<\271\263\211\275\272\313s\274\341>\313\275\271C\204\275\357\312\261=)6\307=VB\256\275\361\227\306=\"\250-\275I\220\302=(t\226\275\263\300\324\275V~<=\0059\305=\307\016\314=z\2359\275\204\343>=/\035<\273!=\322:%\222\340=\260\341\312=\336\001\271;\370iv=coH=9p\366\274_?\314\273\371D\017\273h:c<a\247\302\275\317v3=\346ic;\254\224i\275\361Xf=z(\316=\004\200Y<\034\307\313=@\350\232=N\200\263=2\326\356\275\033\252\252=m\226O\2759^?=\355\301\344\275n\366\247=\241U\222\275]\360n=\353M\271\273\234\210f\275\310\247\001\275\214\241\212;#\306\325=<j\002<\004\\\333=X\365\346\274\373\312\022=\340\263D=\315\335\262=@\020\302\275[H1<\374D\370\273ep\224=! \263\275\001\303\354=\212\200\234\275\"\031w=8\346\253\274\324\2133\274\245\323\222=\311\254\322\275\202\234O=\037\270\341\275~\344~\275\322m\360=\332f\226=\300\250<<1/\210=\264\3477=\213\303n=\016\366\301;\213K\331\274\224\350\356<\374G\252\275\\\210\r\275\tO\354\275\373F\273=\351\251l=\033\021\223=9\265\017=\241\203j<\271S\353<\355\317|=A\'\211=\233\230\212\275\002e\343=1^\345=\366\373y\274J\032\314=\243\314\273=\177ud=vM\242=\221<w=p\335\020\275QWb=\006\310\311=tw\234\274n\'\332\275\010\210\340\274MT\007=)u\205=8\027u\275\\\022\224\275\354\343t\275\201v\035<\231\004+<\320\254\315=\2037\n\275\024\272\204\275\324\221\254=r\025\324\274\262\361\002=\211}1<\202\270\277\275BK\311\275!\255\226\274\247\307\234=\376\020\327\275\327\224\351\275>x\320=$\306\234=\345:\206\275Y\270\343\275\316\331\351\273%G\301\275!\324\226\273\270\2234\2747G\304=\2711\213\275}\310\275=\362K\331=%\331s\275\363\306\325\275[&4=)s\345\275\3343\215=\262B\307=\372\203\242\275\364+\346=\271\341\002\275\275.\324\275\360\372\213\274\233;\301\275O\271U\275\021\325\231=bc\206<\370\363\244\275\236\341\333<P\342\203\274\024(\177<\010_\322\274\253\022\334=\016\344b=Qr\250;\216L\214\275y-\357\275\333;\237=\313\264\265\275\230\360\014=\333\265\307\274}\266\245<\357\002\235\273\031\312\025=\021\373\272=\317\375\245=]\"\310\275\275\302v<cz\273=\016\340\021=E A\275s\265\327<\343M\226=~\242\376\273f\301\250=\262\265\350<\370n\324\275\212\241\254\275&3j=\210X\230=\211#@\275\371v\360\2753\203\257=\\0\237=\'S\306\275#\271\270;1\216\354=o\333)=\347\217I=\260we=\032\330\224=\372\026\321\274c\230M\275\356\260/;I\2738=!r\227=\"\253\345=\354\316\231\275\315\300\307\275\313\272\274\274\0309\337=\'9\345\275\200\021\262\275C\204R=\006\356\234\274Z\363%\275QM\277\271\311\340|\275>\243\212\275$`\361\274\004u\274;5S\255;}R\220\275\346\305\242\275\20518=\035&k\275\225\307\270=\026\254\331=\027;\'\273-\365\r\274Q\222\321\275\350\317\213\275ST\325=\262\347\346\275\353\030\312\275_.\205<\262\262<\275\024\254U=\352\205\267:\263A\325\275q%\325<\373h\200;\324\225o=I\256\255=t\001\362<\215*W\275P\277\303=\007\306\344<M\315E=\217c\325\275n\025\266=\'\317P\275F\214\243\274\347\322\007<\317d\301=\210L\236=\007\261Q\274%\003\350=Mt\252\2759\211\244\275,>\277=l\206!\275\354\210\004=\212($=\335}\326=*\346\352=\234A3\2744WL<\001U\347=\004\007\217=\210-(<\374\313\336<F\320\270\275$!\323\275&\232/=\203_\324=\017\260\211<~\226\002\274\023\314\255\275\332(\313\275&\261\255\274\246\363\252=l6\334=\250y\356\275~\216\200\275\361\035k=\246H\260\275\211R\236=\317\264\250\275KH\236<\362\032i=|Y\026\274b\206Y\275\001AO\274\350\005\223=/y\272\275\214I\272=1b\244\275\266Y\341\275\237\277\227\275y\372\273<2\375\302\275\014\330\271=D\254\275\275E[\001<\374\010o=OL\204=\227\025\356<M\325\256=\014\367\023\275\214\022\246=\231\006L\275\003\003\204\275\033\2717\273\331r\017<{\371p\275\337\372\305\275\020e0=i\243\234=\357\273\243=\362\005\310;\324\366\334\275\024\347\265\275\350*\243\275\334\314E=\266\2723\275~\342\022<\223<\200=_\361\200=f\331\263\275\272;e\275J}\375\274\013\250\316=\027\006G=\307\315^\274g\332\277\275WY\322=\314a\010\275|v\316=\337h\235\275\201M_=\265w\332\275\251<\345<\375|\375<x\317\336\275;\231\252\274\n2$\274\3536i\275\353K\247\273\311\327\221\275\247\377M=E\240\306=$\310g=\322x\312=\n\212\255\275\362`\004\275\320%\332<Y\t\315<\027\376\267\275\365\322\373<\307H\226=\207d\261=~k\004\275\032\256\231\274\253\312\221=\310\274\335\275\"\022\270\274\341(Q\275nR\236=\354\355X\275\240\373\310\275\347o\355;I\206\227\275#b\177=\027\343\205\275\355&\357\275\010S\307\273I]\254\275\010\324n\275\003\266\021\275\003\355\360\275i\333S\275\232\314`=y1\304<\335\233\013= \235\325<\351\360\245=\356}\003\275\005\331\215<n\251~=\344k\260=+\205\005\275\014\2341=m\'\232\274\211\323\221\275g\006\222;Y\212\271=\242\301\226<\3241\374<5_\217\275\2514\230\275\211\227\333\274\024\\X\274\271AW=\035\223\267\275Z\"L=\017J0\275\260\025\227=\000\202=\274+\353\316\275\010\265\224=\310\275\r\275\253u\322\275\356\265\r=t\311\236=1\365\246\275\253\255\363\273\023:\264\273\364\357\340=-\200u=\006D\032\275\304\266\340=\274Z\336=\006\333\232=\002\343$\2756(\351\275\230,\034=\020\367T=7W\352<Y\2566\275\366\027\323\274?\336Q=U\250\342\275\203\256D\275\366H\337\275\216\033h\274#6u\274&\343t=\\\322\271<K\312\315\275o\347Q\275eH\263=\371\201\345<\236?\221=\203\353m=\002\354\"<0f3=d\235\252\275\322\275\221\274-\036\"\275\373\354\030=\364P\355\275]\n;=\240;\000\273\242\374\347\2757\024\200=\270\244\317=\234a\261=\276\033\317\275\263\312\304<\220\032\304=\254\265\301=@\000\317<\215J\345\275u\373Q=\257\177\265=:\r\245\275rZ/=\246\313\210\275+\271\036=\350@\250={^\202\275\010\3320\274\276\200m\275\324\266\017=\364\0264\274m\350\013=\202V\257\275\241\347\307\275\305\030Q=\213=\025;\2243\266=\2575\301=\377`\220<\341\230\001\275\013\365k=\210\007\267<\355RG\275\034\302\321\275_\001\321<\301\306?\275\314:\355\275\263\020\231=\213E\272=,\202\301\274Hc\274\275r\003\211\275\350C\201=\247I\376;)\333\204\273\350HY\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 126
          }
        }
        tensor_content: "\346%O=\327(r\275\270x\032\276\361\312K=\320x\232\274\225\235\203=\0041\236\275\2244}<\332\330\370\275\253\232\036\273qE\010\276\320\372s;\375\305\321\275\026\202-\276\342\344\212\27575\336=\362\246\301=W\031\366=\020)\302\2757\1775\274\320~\321<j\342\023=\203\303\303=\316\241\275=R\247\277=\217\177\314=k\232J=s\274\322\275#4\'\276~\0278>]\257\340=\366=\223=9\\\261=\232L5>\240\257\017>\177\007\271\274\345\024><\261\214\305\273RE\360=1\231\036\273\252]\307=\256\205s\275\226\362\337=\035\020\017\2768\021\304\275\231\364\354\275\231h\022>\025z\361=\310\264\270=\271\266\215\275#\017\353\275\333\276\304=\314:\200\275\312\026\227=EAC\274C\022\326\275\267\331\267\275\332\016\346=P\263P\274\217&7<-vS=9@\025=\324\304J=h\023\204=\362\216\264\274p9\327\275\032+\020\275\025\227\371\274 T\271=s\236\373=\2620\210=\025\236=\275V\303G\275\3535(>\010\0263\276\337U\033> {\206\275\256\267X=\344|\t>\032\254\364\275\336\211h\275L\351\312\275a\004\376=D\351\305=O\245\373=\264\313\276\275q\021!\275\321+\313\275\343w\013\276\304\365\203=\0336\355=U\226\020\276P\261\332=\224\344]\275\363\221 \276\031\210*=\307\256%\276@\023\\\275\230H\004\276\261\266\'\276\361\200\364\274F\000\201;\351\016/=\262\336\031>\006\202\006>H\371\267\275-\2516\276\3378\002>V\027\003\276AK\363\273\222\341\321=\335\024\332<\035\3014=z\310\277<4\312\274\274\272\210\035>W\246\201\274\241d?\275\036K\241\273\274\361\200\274\026\321&\276\341\226\306\274\305@\030\276\313i\250=\246\331>\275Ls\032=;\2751\276z\005\347<\020\247\004>7+\316=\242iI=JA\201<7\373\273=\305^e=\320y\224=j\352 =:9\372=f/\002\276\272\342\230=\300G\224<d\354\351\275d\024\315=\352\031\365\274\220\354\314;\276\005\334=\375U->\r\017\215=\346T\205<y\367\265\274m\023\025>\217\207\'\276h#\177=U0\202=\324\346\"\276j\336\026>+U\007\276\265l\255<\334\2377\276@Y(>\341\3634>\026\\\206\275\023\300\323\275\371\311Z\275s\020\371\275\367ug\273\232\3767>\230<Z=O\246\273\275\024\221T=Vn3>\367\014\306=\014\262\004\276VO\334=X\310\343\273\365%\276\275UI9>\237\007\005\276\315\212\273\275\333\021/>\344X*=\024\303\010\276\273Z\">E\224E\275WU\201<MG\036\275` \235=M\n0>\375\367\277=\363]\343\275wK\">\210\352\247=\353x\254<\024\313&\275\265\026\227<Fu\311<: \'\276\276\343\322\275\216o:>\201\335s=\253\3739\276P\3302\276\365*\255\275U\013\006>\036\n6\276\305\203)\276\\\026U\275#n\315\275\033z\n\276\366-\032\274%\r\003=\357\217\265\275TG\025>\357Q\210\275\033\0031>\027o\023\276,\312f=\212\242&>=\247*=\325\3318\276+\377\251=E/\n\2767\2175\276\230\226\277\274\0326p\275\033]\211= \344\036<\033_\033\276\236\216\037<\300=-\276\343\271\024>\326%\263\275\314\0006>\341\027\341\2755%$\276\306\373\257<o!\315<\224m\312\275\234\311\323\275X\346\000>{\336\335=\003\370\">\261\337\266\275\306\266\235=\2054r\274|G\001>t\004\361;9\237\277\275\236\231R;Q7\033>\2440\006>PX\t=\211\267C\275\246\343\007>\257\242\007>l\375\232\275\213\356\273\274\327\3278>\0350\t\276Y\311\036\275j\007\036\276n\007\273\275\361\225e\275\363+F=H\005\231\275\246%\207<\215\024/\276\267\270\035>R\233/\276\234\377\215\275t\333\036<\033b4\274\036\032-\276\205\314\005>\037\2559\276\212\366L\275I\213\235<\022Sa\275\300.\322=\327\026\027\275\374\\\000>8IX\275\351\355%\276\246\340)\276\217\032(>\315\016\033\276\304\370\r\276Z\374\236\274\206T\351=\306v\357=\301\227\326=\2400\t>\"l\035>4\033\364=\261\203\330\275\321G^\275\334\017\264\275\331\r&>\270\3654>b\362\302\274J\026\010>\217\241\345\275\305\205\375=\t\3105;\0273O=\327\026g<\203\346L\275P\350\230\275\232\n\366\275f\333\373\275\\j\005\276{)\300<\377\0257\274\333R\250\275\241,\300\275&\214\010\275\310I\357\275 \343\266\275\305\375j\272\326\213e=\227\313v=\350\236k=\274\203\024\276\337F\317<\201r\006\276\206-\016=\010\361\221\275\270\336\354=\372/-\276\220p\226\275\360l\220<8\350\301=\320\\\251=E\3714\276\220\323\'\276\013GU=\252\256)\276\304\205\265=\324O\343\273\3610\241\275#|t\274\030\273\214=E\217n\275W\334\010>\315x\034=\260\024\247\275w\245\260=bh*>\010\207/\276\235t+\276\345\'\276\275\327\311\247=\303p<\274rd\245=f\245\352=\362\353\262\275\2550\302;o\241j\275\343d9>\014\265u<x\264\204=\202\225N=\264k\230=fC\311=/\177\014<:\372\236\275\016\020e\2751:\251=\276\2271\275=\302\305\275t\231\302=\337\257,\276\275\245\275=\006\224|\275_g&\276\334S*>\003M\335\275\031|~\275Li29u8\205\275\266\024\332\275\315\235\273\275\370\3339\276\244\370\313=\025R\340\274\347\367\242={\353\017>\237\211%>2\321\267=\003\317\372=\206\265\274=\273\360\014\276_\262\031>}\265\347\275\202\023\317\274\031Q\035\274H\327\030>\336\255\021\276\204W4>\224\220\002\276\214\316<;\257\363\034\276j>\233\275\360\0177\274{\r\014=\2063\221=\315\271\302\275\270?$=\342\356\217=\342t\345=z\270%>\235\014\027>)%\201=[\216\030\276\014\315t\275\014\323\023>\247\256\330<\322\314-\276\363\211\022=4\222\000\276\323i\216\275\344@g\275\316\354\000\273\333\240\341=\037\020N=\005o6>\360>\244\275\230\2527\276\243\230\307\275n~\010>\362\324&\276\300\270\371<*}X\275\227.\272\275q\320\323\274FXb\274\260Dk<(t\240\275b\365\270<`\373\276\275\307aH\275\204H/\276\303C\344\275VR\321=\'\255\302=\020\211\005>\365\3747\276\355\320\236=\304\023\204\275\3635\236\275|7\017\276\007\016\344\275\036=\331\274\272\r\225=C\375\023=\233z?=\272#\037\275^O\240\275\030\016\342\275\023\272\032\276\n\343\331\275\034\274\333=\366\003y=\246*\036>r\235\345=\220\245?\275Ld)\276\366\256\355\275\024B\035=\236\253\316=j\n\274\275U\317\200\275@\001#\276\0348\340<\031t\233\275\243\225\327=v\330\025\276B\360\332\275l=\372\275\222\"\035>2\354\203=W\231\261\275\005\254\026=\234G\037<dM\361=\274\033\014>J#^=\276\320 >\2500\023\276g\277\\\275\377^\305=;\267\214\275\270\2067\276\"\307\370=\3315q\275\271\365\345\275\322y\222\275}\214\202\275sj\315\275\306M/>\264\374\210=C\275\225=\310U\237\275\333\2012=\311D\344=A\2536=\006\016*=\005i\007\276\331#\301=\272l\027\276\254Q\224\275\266l\360\275\022\243\r\276\337\216\256\275~\231,>\314< \276\342n\324\275\221\010\321=]\227\261=\007X\036\272\234\306(\275\0208\004>\271\237\251=\233\016\034\275yD`\275\367\220\n\275\221\276r\275,w\347=\331\254#>c\351\342=\267\300e\275\2776\215=S!\372\275\017D\221\275\255\222%\274V\264n=>Z\006\276\306\331\235=ul%\2767K\031\276 \032$>\307\242&\276e\241\023\276\373\370\234\274\013I\366=9\343\205\275\246\220\'\276W\215`\275\274\177\330\275\033@&></w=\022T\016\27480\336=U\303P=\361\306\220\274\306R\035>~\236/>\201\275\315\275l\320\367\274\0343\306=\337M\324=\237\237\346=a\277:\275u\266\266\275\327~\n=j\233\215=\005Uc=e,\377\275)\0375\275\233\353\377<n\271\323\274v\020\221\274W\250\027>\301\234\374\275\245\377/\276\'%!>\263Hp<t\325\000<\r\224$\276\226\331\317\275\032\262\275=\334\352\345;e]\025>KC)>\270\317\300=xMY\275\245!\361\275\317\375t\275F\375R\275\004\2057\276:\221L\274\235\2551\276\026o\310=\337\337\022>\037H\357<\207\231\324=\330og=\273\206\354\273G\214\273\275\247\331\013\2764\347\321=\365\257\027=\250E\370=\302\346\">}\312\331=4\345m\273\254;\342\275\346H\232\275CR\014\276\252\275*\275\252\200\263< \300\007\274\341<\250\275\241\347\265\275\222\215\006\276\2255\317\275$\2323\276\317\342\255\274\000\357\223\2759F\370\275s\347->\267\345\233\2757\301\247\275\322\010\024\276<\240)\276o\226_=>7\310\275}4\000>\236\"_=F\332\373\274\030\272\310<[\351\033\276\034\276\210<^\343\255\275F\367_\275\331/\316\275K\244G<\276z6\275\261K\226=>\257\362\275\334m\002=\334\364\034\276\317<\037\276:\202\253=\375\3013\276\373q\020\274L\207\001>p\231\324=~\242\244=\037\233\022\276I\202Q\275\332\265\341=\315B\247=M\266\366<\313\230t=\003\242\017\276\317:\311\275\312\301\206\275`\036\243=\374M\005\276U\262\234\273\206b\365=\300\">=\325\263&>\200t2=\267.\265=V^f\275\217\220\210\274l\372\310<\264G\342\275\035\344\366=\335\277\n;\202\337\306=(7\242\275\332G\250\275\003\372\217\275x\251V\274l\352\365\275\200\010\275\275I\254\020\276\211\360\'\275\033\263\024\276h\020\301=\270g6\2767^\366=\244;V\275\3130+\275v\314\024>\262q\365\275\252\220\331=*\240\002>\304\237\321=\':\037;-\032\022\275\201\352 =\245\007\300\275\243\022\372\274X\203!>\243:\035\276gx\035\276*\300[=\356w\004>\207\346!\276\001N\n\275\216\270;=\254B\301<\365\013\237\275k\322\362\274N\247\363=\251\177\362\275-I\315;\30592\276\265\315\022\276\261\234\333\274\210\201\350\274e\031\r:\242\007\221\275j\337\233=S\350\222\274\007\377\375=\334=\350\275\256D\n= f\035=\224e8>\005\"\360\274X\370\205=\260\271\377=j\251\261\2757\235\016=\257y\353=\037\267\035>u[0\276S\277.>\320d\002>\351t\013\276\332\371\200;\177\013\356\275\320\3033\275\365\337\261=\236\265\253=\256W\010=D6\004\276\361\261i=qi\205<\025\343\010>M\242\r\276\324\233\376=\340\255\005\276`_\004\276\377k\204<<\313\001<p\275!\273,\030\220\274\000\261\306=t\316\306\275\030\251\267=\036\247\270=\235\200!\276\362\257%\276\254\013X=Nv-\276\003\304I\275w\2707>py\014\275]\350\211\273\354\230*>{?\361\275,\336V<\341\361\237<\361\023\000>Tm\376=\367\214&\275/\230/\276f\\\334\275\303\211o\275\205\321\203\275\346\001/\276\340{#\276>\340\r>`F\002>\037\201{=w\235\326=E\216\327\275.TD<]Vl=\001\217!\276\003\336\021\276\315\224)\276\355\344\232\275?\350\016\276\263\265\327=\3771\031\275\n+\036\276o\334%>f\346\304\275v\304\017\276;\010#\276?=l=\204\355\377\275Kd_\275\342\331\272=\244[\236\275\226\373\026>\351\227\231=\233\326;\275:\213w\275\270\352\224=\027\267/\276\211\311\376\275\333R\302=e\376\234\275\027\335\255=\366\204\006=\357[\273\275C5\001\276\324\034\032>\"X\001>\256\371\235=ID\251\275\275\377(\276\337\323\242\275\001\226 >\211%\273\275z\025\313\275\342:\017>\237+\260=4C3\276/\'\213\272r\301\035>\034\277\212\275\336\277$\275\376b\267\275\255\037\'=\370\203\022\275\216\204\304=Zk\277\274\033Y\260=\316%\021\276\330\177\271=pd >\3510\314\275\251\247\221\275\355\255\303\274\332_\030>z\306Y=F/\021>\022\250\214\274\222\203\351\274\004*\013>\255k\323=\273L\273\275U\260\027\276\037\364\313\275\370\021#>Ch#\276q`\033\275a\004\027\276\2642\034\275\007\331\t>\001\342-={9$>TF\037\276?\250\215=\027|<\274\tw\252=\016\214\267;\\\3172>\300\300\330\2749Y$\276\010\276\036=S\330\224=$\206A=\206b\022\276O\310\037=\237w\316=\024\332)\2764\321\370\275\275\277\002\274c\305\024>\361\230\362\275{!\224=\022\203\007\276~\254?\275o\016\201=\317\237\264\273\020Ee=\341\230\302\275\025\264\343=\2048H=\322v\264\275Ol\346\274u\222\216\275\376\305<\275\004\322\213\275\004n\262=\374\367\210<\333\277t\275N\314\023=!\016\271<G\177,\276I0\312=\025\265B\273\205\312\270\275\003\315\326=\240G\303=\305\\k:|t\366=\3565\341=\245\252\032\276CO\177\275\242\251\020\276\320d\n>C\371\331\275\250\224\373\275\371&\330=\367\014\371<\301D\006\276(\243\271\275\350\202\024\276B\223\010>,H\037;])[\275~\0037>x\206\262=\301\252,\276\343Z-\276\\\311\315<P\3423\273lt3>\360\346\357\274e<]=\204\243/\276X\006\t>m\223\020\276\001\305$=i5\210=\tB\200\274Kw\021>N\033\210<\337\203\227\274\213\266\031=\376\313#=\243\005&\2763\023\306\275a\310\235\274%\355\264\275\217\247\023>\343S\024>\355\235\304\273(\356\002\276L\367\027\276\254\002\031>z\022.>\307\326\037\276\322\367\251\274\342]\242=K\035\030\276}\027\205=\n\265V\275\310=\004>\331h4>\233\3362\2762N\261=Lb0\276\263\024!=R\2755>\306C\261=\326?\252\275\220 \273\275\\\177\274=t\277\371=d\033\020\276\362\253\315\275;m\032\276Y@\322\273\372\215\'>\312\361\203=\276\035\240=oq\036>c8\016\276l\2461<;\311\347\275\022C\021\276\347\n\000>\r\332B<\207\304\n>\225h+\275C\260\330<\331\037\351\274\226\271\021=\237\345\314\275\205Tj=\247\264\354=e$\320=\255\215!<\222\327\354=Z?\342<~\313\203\274N\225 =\367\344\343\274\"\036S\274A\331y<\302\201\274\275\332l}\275\306uw\275\324\314\310\275\244e\340\274F\255\021\276*\034\354\274\226\031\021>\366\300n\274\305\027\316\275wp\265\275!S\304=w \r\275\021\350\253=1\371\213=\212\n\275\275\200\3202=\311\000&\276\270\261\302=v\310\300\275d\232\237=\301\365E=\276\210\001\276\364\346\003>\216\321,>\037\2178\276\326\250\207\275*\327w\275\013Ig\274\376\210%>\223U \276K\376f\275O\3779>\211G\010\276\317/G=\\\302\231<\007\364\003<\3221\363= %U=\004\213b\275\365\263\357=\014\r\017\276\305\016\036>\001[\016=\026\235\026\276kB\006\276K4\302\275\223:y=c\3477\276\302\340\017\276\226\277\342=\243Su\275d\036\034\275mlR\2751x\027\276\227\027\035>\231H8\276\254\273\207\274\203\365\262\275Y@\215=]K\222<F\2615=!L\367\275\200\257\215=3*\344=\226\325\252<DZ\211<\373c\322<\\\314\266\275\306Ms\274a\357\024>\367\246\216\274\005\313\034\276\207\357\026\276/5&>\241U\243=\242QK\275&X\020>\261\210\036\276}\347\017\276\241\324\017>\213@\305\275.-&\276\001&9\276\306\313\005=\014%\203\274\251\263\030\276H\377\001\276\332\031\313=Dp\023<\364\000\236=S\220\025\2768 \014>\307|\036>\200l\236<\265\357\341\275]=\034<\371\3118>\177G*>\351\200->\'\230\027\276\2115!\276\312N1<\016\315/\276K\332\254\274S\307\313=\177\222\024><}\300=\006g:\276\236n\016=\260\3750\276\353\264\023\276\006\255+\274{\265)=|\254\025<P\215\351<\245T\032\276ns\003\276T\314x\275?\214\365\275\001@:\276\003\305e\275\233\022y=\211\272\031>\n[\200;\375\007e\275\021\204%\274\031u7<#\026\027\276\363]\377\275r\213\216\274\326-\010=\307E\000\276\233\n\243\275\036\020\033>/Z2>\217ay\275\233\226\230\272\336v0=v\273\362=\332\037b=\276\354\352\274\020?\t\276\310\0074\276\215\315\026\276v}\245\275\310\217\351=6X\037\276;\343\033>\275{\363\275\313\254\265=2\013\321=#P\005>PZ\337=\032\320\006\2764\322\375=\214\233#\276\227\344\243=5\207%=n6\030\276[{\034>x\315!>\t\017\223=\377 \340\274\327\3104\274\255\037\213=\340O/\276\014+/>:\323\220\275n\242(=\204\3730>\341\221\026=+\r\367=5\372.>lt\301=\0057\313\273\370\346)\276\005)P=tB\257=4\212\240\275\273Y\362\275\232{F=\303nQ\275\224\024)\275\225H\237\274\325\306\363\275N\035*\276L\266.\276\3721\020\276\272\2009>d,\013\276\177\221\323\275.k{\275\234\357\020\276P\t\346\275O\020\234\275y\2077\276\222\310\305<\267\355,\276\026/\307\275F\313\237\275 \345&>Fg.\276ye\007>\325y\271\274&\026\246=\363|7\276r\373c\275\374\374,\276\202\240\205\275\276\345\210\272\257\026\020\275 \3348>\020\245\307\275\324,\237=\264\252\315\275\020\242`\275\204\\{\275y\0206>6\035\007\276\353~\263\275\337g)\275\375\003\375\275z\021\363\275\217U#\275*\005\300<B\004\376\275M\303\263\275[KV\273\323\235\013>- \331\275d5\265\275g\225\347:\377\034\006\275\005\331)\276\214\214\274\275}\265)\276*\242\010>\364\021\036>+\014\353\274\257\200\000=k\177\013\276\223Z\247\275\025\t\213\275\333\351\231=~6h=\367\231\017>&&4=\036u*=\326\000\336\275\232\373\003\276q\274&\274\255p\236\275\2123\035=0\201G=1\336\010<\246\314 >\347SV=T\004\031>\326\037U=\370\302z=\264\365\231\275\264\256\360<\377\352\277=\327\242\014>9\t\273\275\002K\327\275<\254\336\275\217X\344\275\335\360\230=]F\364<~Y@\275\263#\367\275?m\020\275z\315y=?)\275\275w$)<\206\224\263=S\222\375=\377kh=8\034T\275\363~l\275f\2610=\357U\274\274\020\337\200\275*\226\262=\025r\216=p\356$=\027\324\323\274\261\272,<\030m0<MY\"\276\023\r[<\376\355/\276\340m\332\2756\023\201=\362G5\275\273(\307={\234\326\275bG\010>{d\001\276n\216+\276_\366\234\275O\006\037\272\321\234A=\312V\303\275\220\313\001=\222\300+=\252l\016\275\302\246\027\2769x\000\276\201\224\300\275\357\230\006>7\354\200\274\262\020\223\275\312h\271\274H\321\002>\025k\374\274|\034\317=v\023\362\275>\'p;JL\247\275Hk%\275\373*\206\275\227\217\341\275\001Ud\273q|\261=\025\334\237=\033\201:=\021j\362=\\\212\231\275\375;\007\276A,\014\276*\274.\275\356m\213\275\313\315\">\214\200 >\206\343/\276 I4\274\322\035\211\275[7\336<\0340\326\275\234\305\370=\335#\"\275S\224\377=\343\001\231\274\337\362\365\274\263\021d=\320\357\277=\010~\224=0-\205;\035\325\303=yf\377<\326\215\330=Xo\252=\210\332\330=|\343\255\275cp\002>\206\312\310\275&l\370<\243\305R=f+\006\274\244\325z\275\362\277\030>\024\3037>u\231\256\275\273>%\2764\264\277=\316\331\251=O27<\253\246\245\275s`\032\276\3077\251\275\207\253\321=9\263\003>)\204\275\275U\275W=\274\305\005\275\336V#>N+\256\275\025B\t=c\262E;\255\310\364=\326W\032\276\337\251\237\275\350\243\t\276q\022#\27640^\275\335\227\372=y\004\2469i\214\353<\377k$\276\361v\364\275\027]\003;\374w\010>\005\322\252=\346\277_<\350\010\n>\344\205\343\275lqU<j\031\376=\251]:\274i~\220\275\206\033,=4\242\254\275,w\263\275\347F\326={\203\014>\250\374\025>\343\226\247=X\210\341<\265\3366\276\311\216\231\275\255\216\025>W\005\354=\277\260\001\275?oS\275\231\202(>\241C\307\275\374\207\017\276\274\252\300<\332\215\321\275\235\024\353\275\303*\006\276_RT;\0022\341=\374\326\253\275\342\034\353\274c86<s\245\311\274\201\374&>r\215\305\275\353\004\240=\000x\253\274\001\033\233\273\206\332\310\275GjG=\310\332 \276\370!\005>\3467\235=. (\276H1\261={\306\232=j\373\000\276\366\2062\276\005J\364\275\310\240M=\357\273\253\275\014\023/=\262\342\343=\252/\266=\323T1>\2125\206\274\302\241\276\275V\020\017>\320\037\037\276?\237\n>h\237\366\275\2547\r=\023=\020\276\325.\010=M\224\n=\264Q\255;\201\010\343=+\354+\276\236\351%\276)C2>\205rr<K@\020>f\325>=\\k\020>\351W\224\275\323\tG<\234\300\207=\006\267\000>\255\374\036>\245.\005=\353\324-=R\215\262\275re\315\275\331\252(>A\245(\276\245H\226\275\361\220\371=\243|T=\026\371\020\276\225I\201\275\347\360\340\275\214zo=\374\233\212\275t\340\306=\314Y\372\275B\324\375=\370\256\255\274\tJ\342\274\010,\346\275\226J\n\2767\033E8\032\033\345\275\031\035\231=].\277\275\304\310\256=\351\212\032\275\230X4\276W/v;70\203\275B\027\027=\361\210&\276Z\212\262<\333\260\306\275\026\r\210=\\\214\027>J\030\327\274%\272.=\236)\001>L\003l\275f\345\">\346\343\335\275\022\237\331\275\035\306\027\275(\221{=xj$\276\322H\331<C\273\203\275\261`\033\276\313\016\352\275][\346\275=\370\335=\'\364\237\275q\301\243;C\026\373<\301\362\302<\013\202\302=\030mJ=u\206\304=\324\236\007>\302\220\306\275\rNR=p\253\'>\304q\017>\016\227\362=_\217\247\275\003s\243<\032\255\330\275\026\370\355=\tZ\330=a\256V=\274\030\340=}+\017\276\302\213==QP(\276\017\301->\323I#\275\nA\n\276\004\"\n\276Vk\314<\030\222@=g#\355=Y3\252=&\204\005>\016v\300\275\351\022\314\275Tt\373\275\340\3701<\332?\212<\022\007\275\275f\337\036>1\177/\276\251\246t<\370(\363\275\347U\240<_@\241=\216-\\\275\021\341\227\275\241\227\014\276\343^\251\274\233\274\216;q\022V\274\337\375&\274\177\200\010\276.\3612\276\334\254\023>\302\365\006\274L\022\017>E\270\t>\242\303\222=\251k\267=\315>\036\276*\022\221=\024O$=\312XE\274\363\300\333\275\201h9>\237\033\241\275\314r\375=\361\373$=_\204\321\275Cl\361\274p4O\275?\034\356\275\252O_\275\271[3>\000@\020\274\201;\221\274\302\232x\275}\207\025\2747:\034>\266\r[\274\306\225\260\274\214\372\322\275\216\360\277=\302\"2>\211\351\004\276\002\007+=\020\024+=\234\374\223\275i\3009\276\024\\\347\275\035\301\023\276\337{\224\273\2633G=\353\252\327\275\031\004.>*\306\021>J-\345\275\377\036\217\275\324_M=\366QN\274<\027\r>\242\356\352=\036U\021>\350`\234\275\242)\326\275\352z3=\010?\324<\376Q\027>\351\261\362=\270\325\206<\255\200\303\272\215+\033>\301\312\362:\374\243\352=\232\020\"\276C\233\014=Tv\263\275\314\020\'\276\037\300\252;\255\271\027>\004\366\027\274\213!\016>\316\\;\275\235X\013>\357Q.>\'\213\006\276\0067\302=,\005n;\020\330\314=\347\2309>\237\305\362\275]\221\343\274\006\220\367;\203u\226=\265C\374=\351k\361=\373\332\035>~l\200=c6\275=Q\304\030=H\275\035\276\231\373\247\275R[\234\275\206\271\034>X0\303\273\304\013q=\324:\270\275G\220j\273\225\207\375\275v\031\030>u!\234=\352Y\324=\315\301 \275\257\235\343\275\224\324\363\275;R0>\216\276\030\275\250\004\232\275\312/\022>\360\360\267\274\335\007\354\275\275\006\264\273\222\227\264\272\314\035g=} R=\253\005\263=\343\024\242\275I&\032=\"\256\325\275\326\257\377<\221)(>0\316\027=\240\201\212=\376\243D<F\330;=-\361z\275\350a\356=\315\031\324=\034\326\311=D\336n=\264)\363=\210K\231=\277\262\276=XB\242\275\325w\242\275\026\030\305\275\3735\232\275\305@\373=d\211\007\276\373\204\251\275W\010\026\276\336w\232=Lh\003>\263\375\004>\221\275n\275\260\375\007>\341\226\022>SW*\276\177\222%>\214\204\037\276\260\2746>\343\264)\2760\253\331\274\373\037\023\276k]/>\305\221\335\275\021\311\307\275\367\224\232\275\361\001\244=\247\0163=\260\307\r\276V\2146\272\305r\352\275tY\022\276\372(\023>R\265|\274\004v8>\214-\225\275\344E\237\275\303\023\224\2759\261\277=W\216\242;c\364\031>\002-\361\274y]\352\272m\215\234=\352\346\351\2754\374#>\306\234R=I)\203=\247\353\302\275o\022\355=\245v,>\323G\n>\324\017\355=\372]\216\275J\351\323<\331\037\\\275$\312\375=k\363->\206\017\021=\"\327\003>\317\321\025\276H\020(>\206\256\231\275\031bu=\235\333\300\275_X\277\274\204x\000\276\255\025\377=\316\252<\272\030\351\300=)\004\272\275^\302\256\274\031]\003\276\265\312|\275\340hL\274\\:\261\275K1\003\276\317\372\252\275\330\356\304=\033\261\t\276\360\3226\275c\030p=\341b\367\2758\250#>\342g\243\275\025\347\001\275\014\000\r\2750\\!>\\\220\303\275O\230\335\275T\264\232=\330W\004\275\247J\311\272()\007\276\335e\020>\241d\363<\025\370+\272j\"\363=z}%\276\270\014\274\275\376r\023\276\024i*\276\270\357)=\37641<\365\247\245\272\225\3136\276\250\310\257\275r\032\333;HO)\276\235NU=\340\324\024>\204\032\235\275g\0309\275\273\003\027\276\033 \027\276\244K\003>\273\313\234;?\351\300\272\030\020\322=p[\316\275\342\320\336\275X\337&\276\257\307\241\275\261\347\321<\362}U=E\t\364\275+L*\275\223\3713\276!r,\275\252\'\033\275k\324\016:\342\322\252\275N[\264=\342\271$=|\371\t\276\374\003\036>Dl#\276j\2035>\276W\001>\036\020\351=,)\250\274\233\226\212=\375p\020>k\302\025>\330\216+\276\275\001$=\246\205\215=\254B\237=\243/(>\177\271\315=1\346\024\276\362K\363\275O\345/>e76>\277Y\007>\251O\017>\217\0370\276tN%>\216\\0\275\302\"\354=S{\357=\305\2174\275\244\021\272\275\rv\017\276\245h\327\275\250\262\002\276\200\347\307\275\272,\321\274\177@\243\275\362\342\371<\260\nc=D`\026\276\362/\252=\303f\333\275\027\010\230<a\370\203=O\234~\275!\001\013>\021G\205=\034L\251\275\024\224t\274@\021+\275+\206\342\275\233c.\275\205}\244=\236$p=\203\335\\\275\222\261\234\273k\230,>\216N\244\275I~\t\276\016G\255\274\376\3661\276\262\273#=\271{F=C0\276<O\035\254\275i<*\276\304/\025>u\333<\274y\3111\276\243y\331=\177\347\331=\312\2068\276\301J\016>@lF\275\336\365\337\274\300G7>?:\036\276f+\020=\3770\003>\367I+>\327\363\365\275\205\035 \276\017\210\013>\034)\274\275X\334A\275\366\214\023\275@w\027\276\203e\220<*{K=\004\327\272<\004\005\230:\001P\324=\334\302[=\031\364(\276a\361\334=q\024^=0\244Z=[\243\027<\204\276\317=u\361\003\276\027\277\274;\303\326\014\276\220:\362\274\253\231\226<\257\213#\276+\323-\276\314>\037>\204\310i\275\"\302\312\275=\330\350\274\200-\301\275dd\'\274\2245%>\316\272\262\275>\207*\275\234\023\t<\376Cg\275[P\010>\007|\307=kK,\276H&\310=\210*\016\2766\224\032>\0350\246<\365\207n=\230\3368>?\336\344=\014\026\300=\216g\025\276_\241\210\275\363\202z=\335G\024\276\373X\374=\331\224\350=\304\202\317\275\341\377\235=J\0067\276\026\001{\275\231\035\'\276n\267\237=\313}->\002\\\005>-\034\374\275\346L\002\276\371\371\315=v\352\016>\200\256->\315\237.>\201\203\026>\3462\367\275A*\301=a\311\005<I\257\234\275 I\253\275\306\243\311\275\216\235\354\275\25605>\256\274\020>\274:\021\276\215s\225\275\342\233\303=\222\367\001>`\246\002\274N\010D\275{\033\014=\375\201\245<u\313h\275^\263\376\275\t\243z\275\214\3005\276\316\2517\276Uba=iF\344=\216]\303<\221\300\211\275\006\201\321<\200&\206=\304\241\220=\273\353\203;5\241\327=\2707\365=\346 a=\315/\333\275\031Y\345<\336\206\315=\214\224$>w\017\366\275\262l0=\023\337\352<\312\375\231=\001EU=mx\252=(\205\001>\010sZ;\251D\336=\244h\004\276\302+\211\275\266\307\024=\213l\333\275\033\3234=\203}\242<\327\3060\276\367\022(\275\324\341\237\275CA\020>\031\367\016<\232\030_\274\263\347\233:\320\222\010>\2310\025\275\271\177\355\275\340j+\276E*$\276`\267\315\275\304\311\226=;O\226\274\247\3114\276\304\032\234\275\257Q\034>F6\265\275\253\3559\276P\215\211=\253\267i\275>\222A=\245\002\200=.`\032>\217\354\016\272\226\352\010=B\237\032\276\212z\342=o\267\331<\346\000\257\275K\325\340\275\243\242\262=\023\317\330=\370\210\023\276\243w,=9\n)>\231\262\">E_[\275\226\267/\2768?\234\274\030\375\254<\312\231\'>[\264\356\274[\333\303\275\031\002~\2752\301\022\275r\033p=\342Y\253\275\243\337\034=\376vH=V\265\251=\266!+>\354\r\023>a\3534=t\340\357=O\350\013\276ZL\347\274\213\036\260;T\325\376<\221!\025\276\272x\215\274\360\235\377\275\357T\016><\234T\274\233\t$>\204!4=\203\262\020\276\260\037$>\241\005=\275A&#\276<-\265\275%N\241=\237z\215=U\350\033>\355\261\226=\r\337\350=c\236\001=\205i\260\274\224\306\306\275\345/\220\275\016\255y=5\233\022\276\305\3549>;\277:\274Wy\016\272Z\221\001=\006\323\031\276\367r)>\013\352%\276\350\"\022>\342\323K\275\310\202\377\275A\367\251<\214<\337=\335 \363=\266\353\226=\331\306\310=\362\257\353=\027\216\014\276\303\307\367<J\033\244=XD\034>7\326%\275\225\002\304=\245\023\361\275\016=\276;D\224\030>E\017]\275=\265\250=H\337k=\363\232*\276`\3748\275#\257\231=\345\310\343<rq\275=DKo\275[~\327=\237\025\210=\247L\005\275\366\"\002>7\217\350\273\343h8\276&\311\375\275\253w\030\275%\305s\275\302J\370\275\034\301$\275\177\212\351=\244\316\254=h-%\276\\\320\001\275\214\250\217=\25642>\325\335\352\274\361\243d=\335V\207=p\'(=\023N+=C\267i\275\0106S\274\316=O=\232O\'=\206g\363=\025\325\342<\223\370i\275s\037\250=\274\350\274=;R\374\275\023\331\330\275/\376\303\275\033i1=mG\245\275q\2079>`\216\212<B\321\243=-)\324=*\266X\275.\335$;\031\037\350\275i;\336\275\013\332\347\275\323\2218\276\301\347\274=\306q =\261\r\253\275\02400>)\215\353=]\245\211\275\267U7\276^\r\263\275\343^\200\275\265G\037>\203\230\233\275\353\311\312\275\356\304\032>k\266\204\274tG\013>y3\227\275z1\014\276\260\210\206=\372\341\361=\205\334\020\275\253w\243=\010\223&\276\353x\362;\202\377\222=\017F\216=9d4>aD\326\275\243\247\025\276Y*\377=\306z\025>\033\034\371\275e\001\343;`\355=\275\242\262\314=\364\001.>\336\330\327\275\364\224\323=\034\3311\276\027d->\304\216)\276A\273\337=\212\252\372\274I\355\020>\243O\016\276\375:\006\276\353n\321\274\r\034*\276_\014F;,\020\">\327\013\267=\222\214V\275\224\376\271=\376\203\323=\260E\004\276PA\032>TN\203=\252\023\017\272)]\361=\031\342\271\273%\223\014\276\014\315\023>F<$=\352\266\013\274\235\337\315<\342\243\370\275\213P4>\260\201\271=i\374\r\275 Y\000\276\355,\220\275\035/\333<_=U\275l\327\\\275kfS=7M\335\274\347~(\276\0225\352=\003\304\020>On\342<\347x9\276\210Ya<\372\222\310=\267\207\033>\204\024\341<\310\213\302=\347\310\235\275)\211\212=\326\2247\274\274\247\337\275C\372\236=\273\220\010\276\375\374\n\276)\345\207<\\Ci\275\362\317\243<}U\203\275\263\3022\276\33060\276\344N|=p\332\003>-+.\276\265\3162\2767\t\337\275\352CC=\223\327\242=NC\010\276\030\250g\275\267\210\265;\356c\253\274J\024\034\276(m\032>\372eX=\236|$\276E\247\212\275\362\261\243=\317\206\365\275\247 \312\2744\034\236\275\210r\n>\333\210\333\275\232\t\342\275>\357\311\274\r\210\242\274\234y\025>\355\t\362\275\003\215\310=\003\337\371=\242)\273=R\370\313=9\016\205=\245)\270\275p\010-;x2}=\201M9\276\035\237\256=O\325\364=\204\321\337\275\255\365\363\275L\334\005\276ZR\340\275\001\032\004=\217X\307=\346\3746\276\264\252\262<~L_\275\264B\375<\312\"D=\367\242\234<\266S\222<\225\277\366\275\031\344\244\275f\255\253\275X\315\363=\314\217\243\275\304h\212\275\220\023\364\274^@\237\275Z\372\320\275\001\2215>\245\341\364\275\341\021\037=k\200\304=\272\240\230\275\274\343\035\276\277s\253;\365c%\276\034\215.\276\220\031\030>FsJ=\351\304\030\276\364\354\307\275n\2575>\367\0343=\336@\t\276\230\342\240\274f\357\323=\305\022\002=\032M\013\276Gj\235\275T\236\253<D\207\353;\333I\031;\032c$=\360I\367=n\253+\276\027\262\001>E*\321\275\300\n(\276\312\"\244=E\026\257\275\"o\031\276\313\"\260=\257\343\231\275\035\310\354<\264\007\004\275P\231Y=\260\277\021\276\347)\355\275]3\370=9q\250\2752\242\265=\270\373\030\276\002\322\227\275\273\tN=\177\235\236\274z\270\245=<a\033>\343)\303\275\255N\271\275\023k\236=A\242>\274n\370\002\276+a)>D_\222=f\225\247\275\217^\334=\353\036\340=\010\343\217=\244\r\264\274e\353\024\276;\277\334=\016\325\307<T\201,>\216\210\261=\346\\\361\275\276\344\034\276f\224K\275rHr\274t\342\252\275\241\233\340\275\275\037p=d\013\376<\323}\203\273\022\263\231\275\231\203\255\275\317\255\271=U\334\016\276\367q0>\331\020\317=\245\346\327\275\203\247\001<\354\257\261\275\003\3157\276\262\244\316\275wa4>*\205\201=\"\\\340=*\005\262;39\251<\353\360\017>\3270\031>D~\n\276bPh\275\332\370\205\275\340\244\'\275`\025\244\275\333t\004=\332T\203\275\013\340.\276A~\222\274y\336\006>\352\3578=\024\354(>\345:\027>\374 %>\234A.\276\031\201%\276\271\\\365<\256\2533<\313\366\324=\033\226\315\274J\315+\276\010\344\300\275\316\376\013\276E\204\320\274\3473\370\274\244L.\276\203\343@<\311`F\274\334\374\010>z\356\220=\357\026\272=b|\317\275\375r\333\275\0078p\275T\233Z\271\340\215y=F\0272\276f;\244=\245\347\220\2752\355\001>\376$v9\271\270\346\275\213\235$\276\r\3224\276\371?\027\275I\275\375=\305}\220<\000_\016>\177(\222<\377\327%\276s.c=\345\356/>E\306\262\275\312\347\023\276\007\322\251=K\372\375\275s;\365=\327\261\342\275\302)\316=7\350\204\275\224\275`=\203#\001>\371Z\372;\315p\217<{:\254\275\373\345\027\2762k:>\321\3715=E\266\374<j\033\304<\210g\337\275\342\261\221\275\346\244\316\275\3312<\275\0176\350\275S\216->\007\225\231\275\262\341\t\276\242.8=b\026\005\276}\266\232\275\376\036e=V\010\034\274N\217\027=\027\203\036=\210\2263\276P{4\276\356*R\275\030\334\"\276\031l\355=\314\330\242<8-\211<BAu<=M:\276\177\232:\274\363g\210=\376\257\254\275\211\020\002>P?\357= *\310=v\256\021\276^\213\206<\216\'\020=O\321\302=\276\t\006\276\356\201{<\312m\243=\347\002\032\276\271`\017\276\362d\320\275VH\373\274\210\241\362=\237%1\276\215c\023\2765\037N=a=\262\275\241\357\357=\217\033\245\274\371Z\213\275~K\014>\314\323(=\366\253}\274\377\340\220=kY\326\275\225\310\017\276\315\207\203=\221\326}\275\374h3\276W\347\224\275\325\340\266\275\343\271\374\275\333\350\301\275\361\0312>3\'-\276/\026:\276\'w$\276\261\2071\276\347/\332=\321,\203\275\355\365\216\273\213\230\202\275\363-\211=\'\225\323\271\307\006#\275\332\366\017>5\213\005\276\241P\212<\251\024K=\364\t(\276\223O\331=,\206\n\275x\213\024=3\320\n\276\245\305\027\276\"\024\002\276\211\000)\275,\333\345\275\356\354\346\275@\222\201=1\227\276\275&\331\300\275\005\024->\363\334\203=\225%9\276)\274@\2753\246\005>\377>\t>\242\374\324=:@\254\275\230\207\016>8\313#\276\004x\014>\350\370\371;\352o3>\335\341/>\361\305\202\275P\3536>VY\315\275\217JG\275\302\305\035>\216\372\022>\001y\007\276\367\246\036\276X\362\005\275\017\023\017\276\213\314\034>\244(\257\275d\205\367\275^\331\010\276\336\252n=Bp\t>\217\001\024\276\021\366\365<\242\010\273\275\345\310\334=\255A\235=$\3307\275e\351\022\276\322P1\275\220#\277=\375jR\272.$\305\275\024\350\014=E\372\206=\206\362\032>8\365\203\274\027+\317\275B\244\t>\356\232\026<V>\234\275\014>\307\274+e\301=\265\215\340=S[\217\275\324V\307=&W\000>\021\331\t>\253_5>\334\212\020\276\234\007\256=\214~\034=\311\022\005\275\364d\253= 3\244\275Q\013\205=\323g1\276s\336\350\275?\\:\276\262\216\360\275\276\332q=\006\036\202=q\256\305\275d\275n\275@D\010\276\243l\014\275\201.\353:\0300\022=\021\346\227\275\355\3571>\014\221\246\275\202\022\001\276\345\240\337\274F\306\027\276\025/0\276?+\001\276V~\257<\004{\263\274*\363\362<Q\340\252=]\200\264\275\215p\275<9s\021>\273\323\227=\262\254\212\275\235\307\227\275\004\'\">+\3242>\366\3359=\005%\274\275\2318\200\275\354\334\350\275C\372!=$0t=u\2261\2765\236\r>\344\361o\274Y@\313\274\232\273\212\275\"\255\271\275H4\022\276\230\333F=\000\365\246=\271\032\r>\221\333\223=\256\205\222=oj\023\276\270\206\234\275\017\034\r\276\332\350\035>\007\354\323\275\001\014\263\275\313m\003\276F\2205\275DB\030>\177\261$\276[\003\346\275\254\220\023\276\342\3618\276/\342\365=P\321\023\276\262Zh\275J4%\276\310\0034>\243\257+:&&\013>\177)g<\374\330\">\002\3443\276\307\334g<\272\375\350<\035z\300\274z\312\000\276f8\255=\225\206\341\275\205\233\260\2754\247\036>\342X6>\3144\274=\300\247\321=\032\222\004\276\222q\007>\243\234F=\374 *>h\200\007\276\372U\005=\'\254\003\276\353\340*>\302H\020>\234\312\037>\nc\230\275\254Q)\275\354\3211>\034\364_=\303\223\203=\"\302\r>%d\247\275<3*\2769\2061\276b/)>\002\260\366=\305kd=\251\250\223<&>Q\275\254<\027\2765\213\365\275a\303,>\240\224\320;\275\026\316=x\000\323\275l\317\221=\017\342\350\275\000B\023>\222\367\304<\376t\337\275\240?\312\275\356v#=\216=\301<N>V\2753\223\023>0x\204=!+M=\247\2109\276-\225Q\275\300fE\271m\315\262\275Q\006]\275\230\330\263\273\251\223/>^;\253<]V\201<\257\342\024<\252\234->rj\002\276;\362\023=\251:\306=s\237\017=\370\0274\276\237\326 \275\215\025h\275Z\324\201<\366\360J\275\033\210\231=z \357=uV+>\253\274\026\276\231V\326=\010\254\341\275`_\023>`O\r>\325\254\314<\347#\004>\323\310\341\274o\247\034<\231r\267=\275\257\304=\265RL\275\'\010\003>5L\302=\256\317\246\275\222\345*=s\355\233\275rc\335\275K\341\276\275\204\024.\276U*\273\274\361\314\250\274\267\367\340=\030\275\310=\336\251\307=\342H\n\275ME\000\274\257\250\020\272D\033}=\252{\342\275\373E\231=\355\364\300\275\331\344\336\275\235d\243\274r\352!>\240D-\276\266,:\275\311\304\306=<&\024\276\326\026\200<\347\372\303\275\031{1\2766)\035>28\333\275L\025\300\275\222\226\360=\275aK\275\324Y\236\274\321\3005\276\030\341\'>\356\211.\276\261\006\305=\317F\324=\000\307\366\274\177\233\324<\254\242\320\273\327\370\034\276b\005\302=\227\246\001\276\2269\032>\273\350\241\275Z\365\334\274\342\263\034\274\216>\003>x\0368>\331\347\256\275\206\025W=d\267+>\242Y\004>\022U\327\275\006\0348>\310Q7>DD\004\276\316\332#\275\204\010\006\276\266\214!\276{\254\317=\026\264\024\276\356u\344\275\215\314,>\241?\322=\234\3479>\020)!>\373\2313>\017\352\271\275\214\0276=\325\'2\275-\252\301=\230:9>W\204\361\274\224m\204=D\263C\275j>\000>S=F\2752\3476=\372\023\3409U\216!>k\300\254=\010\301\264=\"\253\264\275)^\005>\210\022\\=`\373I<\330\004\312<\377\303\276=\026\0037\274\206\r\"\276\327-\210<ww\005\276\332\317\007\275\253]\026>O\220\037=6\001\023\276c\351\036>\031\0172>z\351i\274\030\3073<\247\017\266=\310\314\003\276\275?\003\275\364\321l=v1&>\213\336\362\275R\3048\276\272\232\000>\034\352\013>\272\001\305\275,A\215\275V\256w\275c5\326;\355{~\2737\277\316<Y:1>O)\035\2753&4>\351V\">\013\362\024>\366\345-\276\t\202\364\2753\363\007>+E\000\275}\016\014>C0\374\275\014\003\354\275\256\315\212=!\333\374=\301\244+\276\304\360\022\275\331\344\360\275a\321\350=l\366\322\275\023^j\275w\232$=\306\233\030\276\355\013\005\275{\231\243=eR\332\275\'\262\253\274\003.\022>\314H9>;0\014=P\244\003\275\354\342\370\274\242\\\023>\371c(\276\345\217\256=sM\342\274y\364\037>\251\366\272=\271Qc=U\303\357\275\303\0260>S\351S\275@\362$\275\236*\030\276\306\007:>e\267c\274\352D\r>3\374\355<\371\200)>\2436\360\275\177\206#\276H\247.\276\3733\243<\360$8\275\000E\024>\217?\302<3H\356\275}&\273=\033\235\271\275\230\334\240\273\345\177\203=\002\266\312=\370n\237<\304`~\274S\235\n\276+\236\205=\336\263\206\275\260\345\r>\004Y\234\274\246\360\t\276\366\037\222\272V\257{<{a\272<\"\217?\275d\n\315\275\207\223\">-9\024>\237\2717>E7\t\276\327\035T=HX\001>B\367\217=\223\2531>\272\210\370\275et\007\274\331G\324=\242T)\276S\002\037\276\264\002\244\275\372\3178>d\002\005>r\250q=\357\2502=\316\224\204=\351J\224=\023` >p\\:\276\222\310\211=fn\005>I\025\304\274\267\'\272<\026\355/>\300$\332\275\231\026\270=\363\263\256<\367X\363\2743\361\246\275)A\347\275\02144>=\177\372=\302\2417\276w\016\023\276_\300\376=\020\002\267=N\213\344\275\275\376V=\371fZ;\353>\273<\230\261\374=\215\036\\\274S\237\277=\302\200%>\315\315n\274\374K\023>\031\000\213\2751\2419>\340+\265=\314j#>\013\336\342\274*b\n\275\342\312b=,X\357=]\233\313\275Lv2>OM\265\274DY8>\254SV\275\021\265\337=\272\021\306\274\223\0345=[\010V=*\232\371<(\257!>\336\032\336=\031\3461>\204\320\016=\223\004\035>Wk\230\275\025\322\237\271\3447\032>5\227\345=\200p2>\371\3763\276\373H\273=l\352\317\275\240[S\274\367\314\'>\345s\245=\272\226\203\275\246tf;q\014\223=y*1\276D\346\370=\377=\256\275\335\314~=6o:>$\360\026\275*\303\036\276zw\027=Vt\223=\250_\025\275\327\013m\275\177\017\013\275\373\345%\276\310\353,\276\231\371\357<q2\031\276\374\256)>^\2050\276l\305/\276\257::>\260\265\254=\315\013\213\275\274\363\343=\233M\202\275k\204\214=2\367\217=\030\270\222\275!p\272\275\034N\350=\215\255\367\274\025\020\005>\022\315\245\274\271?1>\311\2319>\0255\366\275\013\030\244\275d2\024\276\236\326\273=/t\215=E\335*\276\213\321\221\274\314\1778>\336w+>k\372\016=k\004\313<\321\017\275<\225\0043>\222\".\276\327R\377\275}\0023\274$\247\'>\252\202\347\275_\361\032>E\2152\276\2179\266;T\226\310=1f\010\276&uJ=\236\257\'>\3532\241=>\356<;\242A#>\212\204\001\276\'\030\331\273\026\261\241<>\033\034>\005\2320>\263\236\205=\024\210)\274\002\276\356\275\311\000\204\274\310q\006=\235\\)\2767\t\240\275\340\274\306=\rp\343=\333\3654\275d\351\026>JG+\276s2\375\275\213\326\023\276\255\323\350=o^\205=?P\200\274\303q\240=\014\2042>\324c4\276\004-+\276Ua\300\275\352\004\354\275\235\330\334\275\213\007/\274oC\340\275\237\t\031=5\3735>\005\237\"=t\2740\276=#\213=\013Y\222<\376\354F=\336\000\370=\253%r\273\rh\010>\355\027\270\275\331_\023=\247\370\005>:Kt\2751\245s=\243.\253=\204\257\022\276\340\230\211=\303\254\373=5Q\356\275\362}\350\275\261\243\242<\261\023\005>\252>\n>\231\017o<\262\032\322=\370\230\242\275\326\333\021\274\003\275\344\274\220<p=h\374)\276\200\006\272<\217\256\253\275\352\300 \276\252m\240=\306\337\316<e!\001>\204\362\255\275\204-\364=P\244\026\275\362\020\356\275]\350 =\264\372(\274\007\014\r>Ag\227<\177Q\035\276|\235\035\276\271\305\032>\006T7\276\377#+>\216\317\267\274S\033\036\273\223\367\327\275\231>$>\231N\031=\321\034\226\275{]\375\275+\013\245=\003\227\271\275\032;5>\372\225E=\003\006\343=\375\032\361=\251\330\025=\023\334\020\276\242\"\242=\342s-\276\022X&>/j5\275\304\273\200<A\304\037\276\300?8>&\206\307=(\335\324\275\330.%\276\347\333)>\341\364.\276\215\035-=\375V\263=\000\367\004>\206\030\340\275|\236\204=m\2577\273#V_=e\246\343=H\325><\307I\301\2749(k\274*\221p\275\346\023\347\274\310\305\023=\033>\002>\241h\273=D\244`\274\342)\342=\027I\013>&\374\351;\265bW\275M*^<W,<\275\252\031\230=/>\004\276~\206\346\275\221K\234\275!b\336<|N\250=C\020\277=\237\212\020>N\274^=A\332\\\275\332>\273=\245\262\236={\363*\276\251\353\n>Z\'\021>;\275\230\275h\266\366=F\312\201=+\005\n>XU\353\275\005\350\261\275\t\3047\276M\224\334\274\352/\n>\201?,\276\'W\310\275\212\2121<\351|p=\356\241\346==\275\274=?\343\254\275\n\010/>\202;\017\276Fj\307=\341\271\310\275cf\014\276\256e\251=Yk\365=\337\017\345=\025\326\'>\326\326\r\276\374\3212\275C\365\324=\016\003\263\2748F4\276^\205\300;\331i\005\274D:6>w\213*>\3311\001>\235\270X\274H\217\226\275\2022*>\214\254\265\275PZ\376\275?\252\224\275\332m\033<\034\315J=J\0027>\233t\013\276\376k\001\2768h\001>1\235\177=\014\315\260=uU\333\275\023\314\001<\357\250\273\274S\355%>\004\216\323\274\274R#\2753\021\354\275\022\363_\2759\255\023>h\n\036\276\227\376\002\276\345\205\'\276O+\260\275n\307$\276\222Y\323<\377\203\263=-j\t<\362\235\034>.,\314\275k\353\227\275A*`<\033\032\224=O\207\236\275O8B\275\031\215\311\275\253\205\001>\332\321\202:\326\th\273\311g\034\276\333\033\005>\367\306\313<A\333\373\275\346\016K\275\335m\314<\233pj=\307\347\036>F\2623>\022T\n>\034\204\350\274\312|\017>Jw-\276\344+:\276*\224\312\274\234\010\270\275|f\210=\246\203\315=$\301\375\275\376;n\2757h!\2761\376\231\275\347\264\347<p\372\236=\0027\354=\315\345\242\274\356\022\331=\251\200\007<\"\310\221<\305\257\023<\350\306\360\275\267\234\306\275\361\311\010>\360\227\266=\2410\022>\216\327\362\274\2754\212=|\2448\276}\177\002\276\276 \014\274\331X\211\275!7\365=\332\363\366=\004\262#>\364\313%\276\353\252\"\276\245\226\'\274\314\300G\275\366\265\034\276\310\r\036\276\240QN=\037=\364\275\271\367\356\275\001\212\357=w\371\031\276\t\310\022\274\005\303\226\275\375`#\276=\001\024;x\000\306\275\363#\312=\001\003,>W(\'\276?\245\203<\231H\034>\234d\006\2766\320\305<\200\213\r\276\0027)>B\273$>o\305\177\270\005\367\\\275\"\032\206=\224a\007>5u\234\275\207\037\227\275\332\0330\276\343f\313\275\224^\305=\035\3125\276\340\212\361=\320\304\2078(t.\276+Y\037=\325\343\037>\034\312\021>\251\3508\276V \037=\n6\354=\350\325\363\275yd\361<\024\205\331\275.\311\025\276\331\235\030\276\363Z\325\273~\370\"\276\211`<=9z\242\274\272Y\002\276N\357\030>4\326\237\274\271t|=C\241\'\276;*\200\273\250\264\240=y./>0\346\271=v}\257\275\234\351\035>\\\276\305=\310\214\021>M\247\201;9\373)\276:\221W\275\235\221&>J\207y\275\213A\037=\003V\326=\363\005\345<\362\324\343\275\332\347\346\275\266X*\276y\265\331\274o\264\350\275\013/\324\275\354e\032=\2153.\275d\342\"\276\237\331\3339\021\0305=\t\315\224=\004a==\235\322\266<D-\301\275\215=\222\275\336\255\315\274\372$\242=\353\226\274\275C\0243>\311B\005\275\256\325\362\275\206:9\276\037D\255\274N3\014\276\311\310\036>\201\351\210\275\367\202\367\275e\271\203\275\336\254\360=Y\022,>}8\311\274#S\023>\203k\276=\212\2679\276\206\311\340=\343U\365=\214\233\246=\356\003\351\2754*-=\263\031\277=\\\0065>\021\n;\273x\006\327<\367\257\036\276\027\001\033>\325\"\310\275bI5>4\373\313=\326\357\017=\207\2025\276\335\274\">\307\304\020\276VY\244<\034\377v\275\226\225!>.`}\275\324+1>\201\331\243\275\007\000D\274\200\340\251=t\361\256\275\235\333\205=f\235\r>f\274\236=\222\356\021>-;7\276~\n\245\2754\236\251\275<\253\211\275\031Z\370\275\245qI\275\334W\271\2759s\014\276+o\323\275\330\215\024\276`-L=\024\n\324\275>%\022\275f*D\275\n\272c\275\304o,\276\320\364\233\275\372\023\240\275\265\025\345=T#\245=\263HE=}\254\031>\360[\026\276Nyt=\240\272#\275\026\\\373\275$\254\316\275\t\2159>h]\306=\371\352\272\275D//>\252\020\221=\025\027\370=\272\363\362\275\033\221]\274i\3571>\"\272\223\275\313\3023\275bF\004>\321\324i\275\345\336\n\276MH\006\276\227a\302=g\022\363=\306\211\327\274\2574\350=E\314\323\274\224\252\332\275}\\Z=g\270\324<~!<<\0260\037>\203\263-=\374F9>D\231\243=#\220\341=\032\261\237\275\231\3621<$i\357\275T>\300\275e\353\276\275[\260\'>\241\315\010\276\372\245z\275hE\330\271*p\271=i\023,\276\243\327\372=3T\214\275\330q7=d\'\002> \346\371=\021CT<#\211\346=#\335\250\275\357R\215=`2\224\272\350\001>\275\244\027$\276\026wO=lsF=\236\2540\276\3439=\275\265\003\037>;O\305\274\207F\005\276\320\013\373\275`\277\246\275\247b\023\276w\2143\276\273\201\034\276\033\026\336=Qe\302\272\020\207:\275\360\014\003\274\355\226\020\276\214\2463=nk\273\275\250T<<\322\246\036\276\264\241\214<\034hL=\027Z)\276\202-\311\273\320D\035\276L=\014\276x\213\343;\320E\202\275l{\214\274\325l>\275%\235\340\275\365(\255\275\260\353\007>\021+\023<\354\224\013>\315\344\320\275\236\272\010\2746 \256=\314\357+\274\213\200\n>\020\316\325=\333\302\307;r`\000>\216M\230=\206\005\237=\244\376T\274\326\017I;v\366Q=?$.>O\372\017>\t\344\327=l\246)\276{\314\221\275\344\0047=\006!\006\274\315\311\227\275\3431\t>=\240\336\274\024\303\"\276\"r3\276\305`p\275\311\266\003>^\033\323=\020\236\226\275Z\222f\275^i\224\275|\025\344=\222\201\200=j\3278\276\272\037\"\276>l\211=3\025\t>\006\300\023>\231j\354\274\336\316^=T\317\262\275\030c\230=\330\337\022\276a\357/>8\327\223=\003\323\311=\332\206\307\274\010\370\217\275\235\310\261\275\236\253\323=\005h\023\276\327\345\271<\224\271\023\274Ex\'\276=C\021>\352\230\016\275\266#\267\275\250X\310\275\263>o<\212~\222\275\345\3717>=\004\210<a\366\252\274\033\\\232=\223\305\254=\333B\350\274Z\016=\275\037\205\232=\344\340\326=\037;(>3\214\342\275\221\310\373\275\235\330\034\276\215\301\031\276\203{,=HH\033\275\374\363\002>\236\375!>O\034\007>\276=\350=<\200(\276*\373l=R\265\027\276\034\301\372<1C\027>\235\375\037\2767Z\004>\271\232\237=UY\316=\327\211\377\274Q\355d;\234Z*\276)^\037>\177\240\001>\202\362!>\226[\361<\362\332\016=\310\273\210=\\\343\251;\036.\222<]\024\346=u\313\320=\2420]\274N\177\000>\331=\253\275\000\'\006\275\355\236^\274\340s\364\275\222\343*\276Fu\330\275.\376\322=\247\322\300\275\266e\006=\034-\005\276B\274\216\275B*\023\276G\245(\273P\234g=\024|\000>\234$p\272j\250\302=dl\275\274\304\211\241=+\035\205\275\314(a\275\201vl\275_>\240=\276\206(\275+\026\234\274\007\261\246=<\375\357=\333]\314<\311\024\222\275Vl\303=B> \276\267\310\264\274j\244\004=\016\244\226=\365\204&>\nP\325=\320`\344\275\245rh==\307\372\275\256\001y\275\353\013\244\275\254\312+>4\257\216<\327b\002\276.\344\'\276\007\311&>\322\251\301\275\377N\237=Z\213\023>\r\2216\276\363\310\025>\"\207\225=xG`=\030\330Y\271\222L->\217m \276\225\210|\274U\027,\276\270\362\313\274\324\200\026\276Tr,\276\274\257\270=\263\347:=.A\315\275T|\341\275+\347\216=\365\374\375\275\253\317\343\275_S\r\276\325\'\235=\022K\331=~\230\025>2C\022>\212\255\264\274\360\200\007\276\314vW\275\213\250*\274P\363\257=\214\251,=}\031K=\251\353\024\275\311;\343\275\022\234\306=\373\2420\276\260\014\340<\347\327\234\275U\317\314\274+\342\374\275\275\"\257\275\033\332]=\267\020\262\275\330\031\372=\360\373R\2756\227\036>,(\304=\027l\317\275\342\024\234<\237\305\034\275Q\357\031\276\020\303\265\274\334I\025\276\3024\014\276X\027\037\276\327\031\305\275\013\272\370=E2\323\275\3559\365\275h\323\035\276\\>\304=\013i\037>Q2O\275\027\233\021>i\3620=\350k\361\274\226Q\306=\0041\276=ot5<\035J\357\275\247)\'>_9F=\235&(\274\342\264\365=\271\031$>\305\334\251\275C\225\235=\037\330\274=+\237g\275\347\315\006>GU\023\276\375\321\212\274\316\254\324\275o\373u=\342lv<Q\364$\276\346\223f=\275\nS<\310\262\025\276\371\223\243=/\254\007>\340\370#\276h\3526>\036\373\252=\313\224\277\275\007K\016\276D\251\315\275\260\334\271\275\243s\305<\2442;;\334xd=\254\243\031\2753Hx\275^x\214\275\346u;=F\260\211=\205<K\2751\243\233<%h\324=\'\3174>\366\014\250\2755Z\231\275F1\372<\305e\276=\315V\327=\325=\r=u]\231=\302_\371=\022\227\005\276\361\266\335\275\256\314}\274\224\0339=\225E\264=\361\0059\276\367\220\310=\321\213\024=\306-\235\275\t\363\007\276H,\007\276\332\273x=\364+L=\265u%\276\216\300Q\275\207\305\377=\nGj=\326G\021\276\307\236\261=\313\362\000\275\2456\007>*\231\005>\271\201\014\274\303\266\212\275\373(\314\275\321G5\276\022b\203\274r(\350\274\nc\334\275\227\306.=\320\363\316=\3679\032>\302\237\215\275;\354\215;t\200\021\276\237a}\274e\211\204=\373%\347\275\334\000V\275\257\264\024=\362\r\250<\267\366};U\207\013\276\303D\243=\374I\234=\234\345\014\276>\366\">Lk\034\276\201Q\323=\002%T\2756\330*>\000\3065\276q\354\251=\n\177\022\276\313l\214\275\235\345\201\275\027T.\276\363]j\275\310\347%>\305X,\276\315\231\256=]\357B\274\016C\016>\017\3723\276\317w\354;V\311i=w:,>\017\006\345\2759\0338\276\2727\277=\303),>D$\222\275@\311\022\276\266\237\341\275k\217\032>\250*Y\274\305\260\324=\302\273r\275r@\030\276\325\257\337\275\345T\240=\024?\273\275\376|\037\275\035\274\004\276`g\"\275xO\">\205\354\374\275\333\0366>\267\214\035\275\241\017V=mRk=\025\252\273\275h\t\007\276Z\312%\275\354\347\317=K\351\215\274?6\023>\355t+>\361\004\345=\217\330Y=\353\317\347=0\025\253=\3078+\275\255z\032>\376\273\017\276\265I\307<eFj=I\251\204\274\315\251\016>1S\000\276c`\204=\262\211\006\275\341\276\032\276\031B\004\275\375/\320=\010r\027\276Hr\245\275\275\2406>\302}\240=\2401z<G\277t=\354\036\356\275\251\341\n>\342-R\273\226F\200\275\024\341P\274k\266\032>D\026\366\275\207M\353=K\260\025>f\225\027>\323aE=^\364\303\274\017\210\002=Q\214\000\275\353\356\230==\016\207\272\236n\326<B\353\372\275%i_\275\216\373\">\030X,>\263\342\r\276\025\331\002>\371\366\334=\037\365\017>\232h\237=\326s\226=\374\r\272=kW\337=7\301\346<\246\355\246\274M\331\351\275\027?T\273u\214\265<\000\205\304=2\330\306=\037\224\261\275\344\032{\275^Qm\275\221\371\007\276\204hb\274J\352\213=m\221I<q@\277=m\t\374=\372H\n>\215\330\261\275\307\210\010\275\022mL\275\037\000\225\275\320v\252=A\264\243\2759\354\342<%e\006>)q\260=F\032-\276:\234%\276\355\217\025\276 \016%\276\230Q\300=\201~~\274e\347\304=y\326=\275op\320=F\306\374<x\000\">\330\tB\275Y\253h\274\243w\356=cS\214\2759\313\222=H\021\r\276\201\243\231\274=\245\032>\002-\214\272\360{3\275\013E\276\274\234\344\024>|u\205\275\360\277\362=\034\023\005\276\251\031\317=e\254\312=I\230\t>\242I\226\275\200\327\325\275\351\265,\276\004\233\212\275\014\322\032\274\265\010S\275\203U\322\273\250\037\307\275\202\212\234\274n\035L=\2158\331\275s\3508\276\244>\206\275\365\246\002\276\243\223\252\274\361V\230<\021j\277=\265\351\212;\014y\037\275\256p\351=A-\226:2\325\021\276\274w\325=t<*\276\r\264-\276\225\371\'\276\003\2547\276\006@\363=c\375\301=\334z\225=\272\220\262\274{\177\215=rC\014\276\211r\355\2757R\000\2763\210\020\2766\376\362\275\253\317\333\274\216\266b\275\214\261\024>\265\377\331=\233g\021\276\244\345\300<\311\332\363\275\"\024F\275n\221\031\276\350\234\326\275\331@3>bY\t\275\232\243\007>\'\3519\276k*T=t\036\203\274\265\251.\276P=\014\276H\200\005\275\324T\233\275\325\306\037=\3250\305=\334\204\t>\357-m=:\362\013>\n\367\205\275I\223\214=\251\321(>\242F\313<\004@\234<\374\" >\t\257Z\275#\3411=\3160\213<\240(\324\275a\344->\342U\367=\370\305r=\202L\233:\222\000\333\275\202\253d\275\030\225\245\275>B\322\275<\227\337<\031d\253==(\246=\"\2750\276\213*\231\275l\037\354\274\324RC=\337\240\020>\306m\316=cM[=i\230\r>\374v\325\275\177\0106<\346\205.>\274Tq=\334Y\237\274&\354\032\275\262\277,>;\201\334\275\233\t$>\251C\265:\"\370\244\275\3108\264\274\230\004\345=\244\022\263\275\326\025r\275\232;\013\276>\205\\=!\333&\276\206\357\t<\036\260+<\301\267\026\276\014\375\317\275\2407B\275\273\3560>\3303\271=\267<\255<\257\233\013\276|!\006>\323E\265\275\252E\202=\032,\244\275\314\326\323=.v\022\276\372\370g\275Q\037\301=\027\221\020>\257\177\034>J \006=\304\216\027>|\362\220\275\320\226\341=\300\014\313\271\233.\345=\263n\006>r\312-\276(u\t>\222j\000>a\253\240\274\317\226\367\275q< \276\247\2247=\316(\021\275\246\304\031\276?#\032>\356\241\005\275@\362\354\275g\365\263\274f4+\275\321\324Z=R\266\247;=\367\236\275\317_+>Ks\232\275I\250\342\2752\217\034\2764+\306\275cU\017>\026\231\246=\310\2104\275jK\013\276\r\226\331=\324=$\276\243\357\267=}\300\310=\242\\)\276\363\235*>$l\242\275\331\013\002>i\345\316=j\262\371\275\354\237\t=`\027(\276\003\330\275=\322\375&\276\001\2358\276\202\317\003>\351\007\217\274\315\250\303\274\261|*\276\201\377\267=\243N\266=%\245.>\320V\233\275\264r\304=9\003\234=G S\275\037\247\220\274\035^8>\353\244\002\276\\s7\276X\026\033>\301\026\372=;\034\225<\252\201\020\276\363\200\027\276(P\020>\333\342\261\275P\"\'\276E\366\326\273\373$i\275D\244\r><C\243=~=\014\275\275+\303\275\346\363\003>\356b\346\275W\240\024==(\001>%\371\315\274\246\253\323\275\202\213\002;\025\264R\274\032\345=\275\327\302\333\274\276K|<\345,\300=\202\345\202\275\354\257s\275\347Z\230\275D\205\332\275=H1>\036**>\316f\254\275\232z\">\322\314\004=\275\221\030\276P\345\005\275d\344\346\275\3050C=\317\210\306\275\275\325\231=g\255L\275\330=\217=\2540\332\275\202\331\037\276C\336\'=.\302\277\275Fd\216\274\301\332\276=\'\'\213=\272\021e\275\013\215\240<\264\351\024\276$\2235>w\261\037>\266\311<=\364\227\274<u\017\034\275\202)&\276\013\222\025\276Y\316&\276\034\326\325=\332Y(\276\030\325y\275\372W\225=#\275\372\275\003\243\n>\t\031\031=\375C-\276M\347\010>\226\241\370\275\206*\240\275\371\024\337\274\301\344\375\275\357\0061>\225F\'\276\244\256I\274\021\361\262=s\023M=\227\375\035>\021\347\020\276;\200\322=\025K\326=H\301\026\275\027\343\002\276ym\334=\356)\264\275\313\3500\275\361\241\355=\227\347\234\274\320\033\206\270C1\222\2759\364\255\275W\024\243=\325\253\313\275\237i\333\275R{\362\274\017\310Z\2753\006\r\276\220\256\237\275\022\360)>i\014\206<\235a\032>\212v\004\276\364\220\026\273?\373\311=x\200\031>\016p2>0\363y=\021YR=j\254\343=\203G\300\275j\350\362\275\277\010\036=\005\264\216\275\025\240\014\276\014f\344\275\016\347\014\276Rs>=\354\2428>\320\256\321\275^/%\275>\320\010>1:\261\272r\036W=\370\337\367=\245|\024=+ZN=t\3160\276\342\371\377=hl!>\356j\202=\300\365\016=91+>S\002\004>v\357\036>\nU$>\252$ \2766\274\013>\347\226\325=g\361\000\276\262S\304\275\213\332C\275(\266\"=RB\245=\261\016\364\275\343\345\t>\031\005\022>\034g\027\276\235\335\206\275\250+\353=\301\221h<\323:\020\273g\032\020\276V\246\215=\300B(\276|i\223=\331\334\352\273\261\037\t>_\224\270=_<4>p\341\356=2\037\305=\033\207\201\275\325\302$=\226\335\033\276\234\342!>\035\365\215=\362\263\n\275\031\341\367\275\360\225~\275q\2058>L%\266=\370\343\200<\335a\030\2766\\\222=a:U=BI\364\270a3\000=\232\255#>p\330z<\324\304\036\274\356d\270=b\310\214=\254\275(\276S\215\212\275Z7\256\275\304.!=bz\264=\"\261\213\275\273\017\033=*V\334=:\341\306:3\355Q\275\251\257n\275Y\320\r><\252u\275\323}\n>jy\023\276\222\035|==D\016>\037\205\022\276\274R\315\275\0364\373=Q\3374>\253bI=x\230*\273\242\315\325=S\212\237\273\246\375\"\276\337L\222=O\016\266=\252\247\251=\270_\263=\226o\340\275\374\307\007=m2\314\275\361y\267=\224\320\013\275cX5>\341\352\014:\255\370/\276\3411\344\274\206\364\215=Fm\026\276\267\346R\275\314\030\213\275\260\207z\274\334\337\">y\362\357\273hn\357=,\2069>\253\016:;\\\233\001\276\334\256\020\276\034\307(>:\302W\275V\306\007=\002\307!>P\3673\276\353\267\272\275\214;$>\311\237\234\275\377\370\307\274.\034\024<n\037\022>\232\347N\275h\202o\275E\350$>\225*\356\275\240Y\365\275B\214/\276\371\215\266=\234\341\316=\214]\366=\225Ln=;\356\225=s\335\365\275\314\376(>\312&\366\275Ep\273\275\0225\324=x\342=\274W\342\226\275\367\261\332\274\273\214\253\274^\376\016\276\311\346\305\275\r\347_\275\215\257\253\275\255\237\t>\374\304|=\32162\275G\272\032>P\224\201<\301\245\350=\022\257\022=\306\350\361=_\256-=\035\0135\275\216\037\202=i?\027\276\367\252&=\306\277#\276\246\236*=\'\343\273;\245\256\022>\027\330\377<r\263\034>\376\250/\2768\n\351<\232\256\215\275\023\035\360\275EM/=\360\263\366=\222\226\333=\356\367\201\275\364\365\000<\347\277\316\275\354\261\025\276\204\336\t\276\034X/\275\263\030\004>\250#\271\275\363\206\354\275`\310|=\333W\324=\250\270\006>\242U\010>,\313\354=\225\330\004\276\212\211O\275\255\257\023>\237\351\364=\324G%>\000f\216=\371~\035\276\354\3156\276\t*\335<{)6=Tm4\276G\002\021\276\350>\275\274\236\244\347\273jZ\244=\362\2131\276\251\036O\275\300\221\033=\206\364)>\024[3>\333\255\375=\342\025+>\017\325\366=r\240y\275!\352\244\275\r\325\263\275BE\024>\275K\362<\3201.;\235\273\332=\223\347\240\275g\301\270\275C&\036\274\363}\245=b\234\271\275\021n\374\275\214\t\271<h\001\266\275\3706\235\275\016\357\225=K\343 \276M\304\003>\210Nd=m\002\n= \215.>A\233)>\217\023\314\274$/\026=Ywz\275\321f\274\275\234\244\024\276bS\212\275OH\370=\213\216->\332\3271\276m\334\230\274f\244\374<`\254\r\276R\355\240=\255\377\354<\244M\001>\n\030+=%\272\203\273\030V\021>\224\0011\274g&\n\276\372\213}\275]5\272=\214Wn\275\016\037\304\275\2732R\275\233\2572\2758\323\035>@\244o=\331%/>j\221\300=\224\n\035=p\000\244\275\307\273\004>\257\213\341<+\000\346=V]c<\222%\225\274pW\233\275\027P\201\275\323\203\341<\016\013\003\275\270\347\003=R+k=\265I\216=0\232\257=r\332\253=\2618)\276\201\242\235=\334\207\364\275\375K\206=u\023:\276L\027\027=\342\360\372=\235r\n\276}k\234\275$\261\236\275\315\262\370=\272L/>X\240\004>\311\224\021>\341q$\276\347\353\023:e\237(\276\272W|\275b\214\007\276^x\303=KR%\276\013;\353\274/u\303=8\334\211=\230\'t\275\246/}\275\323?\316\2752\237\036>\031\213\275=J5\033\276\034y@<PC\010\275\224\240%>\240\371&<*G\277\275\354^\273=P\240\034\276\036\201\304=\2522\213=\223\2509\276\343\257\014>S\206\243=B\022\t\276\356\252\367=\033}\034\276\010\347\t\274\242\007\324\273\260\342\377=#b\014>\267v\224\273\252hq\275\222D\343<\026_\257\274\377<8=~\256\220=\222_\307\275\347\3604>v\014\334\275m;\316\2757\233(>\357\t\317\274 \357$>/\316\306\274#\225\225=\357\234&\276\\\'\320\275\366\274\200<\"P\'>\016Z\010\276\221\023\364=\'\007.>\264\372>\275D\272\313\275\274\375\362\275DC\266\275\277\237\000>\277d\024=\315\022/\276\243\243\315\275\371\352\007\275\374\2167\276p\2140>p#\225\274\001\022\037\276\354\3649>V\3506>\346\356/=\262\343\325\275\373E\031\276L#\370\274\021\233\367<\000E\004\276\217\2672\276\032-\240\275\330\317\333=\363\346\010>\023\253\355=\331\202\205;\262\203\025\276L7%\276\253\000D=o\242\374\274\245J\363\273\\\370\232\272\022G\202<\312\224\204<\236\200/=\341\255s<\342\321\016\276<\360A=\2427\016>\023\265\030=\316\374\223\275\216\210\343\273V\350\2318r\271\"\276\221\235 \276\361/\247== \002\276\0225\002>[A\250\274\0333\020\275\0169\317\275S@\252\274R\303\313=\200\033\270\275O\245\260=\322\255\003>\340\013\257=+J4=-W\347=|Z\204=e\377.\276\371\3662\276MW\246=\363L\270<92\276\275\274\201\014\276\232Wi\275[\023\227=\"\0074\276G\203Y;pKV\2756A\365\275\342\322(=\010\020\353\275\037.:\276\245\272\206=\342w\215=\357\327\014>\'P\313=\321}\265\273\372\272\036=\177\271\332\275\013\325==\024X\037>\263M.>_U\177\275YM\203\275vy\261\275_\377\330\275\034*\004\276\300\":\276\343\027\377\275U\254\326\275\020A\006\276\274\013\234<\213\"\035=\273\241\026=R\035\334\275;\336\025>3$:\276\r2\240=\"r\303\275\333\360%\276\242^\351=\246N\254\275F\003\352=\352M\234\275\t~\270\275`\231\274\275\266[7=z\214\233=2B\033\276/B\221;\tl\364=i\321\317\274\250\312\033>\331\336/\275\301\004\300\274\233\351#=\244`\267\275Z\3347<d\370\003\276\337\203\376=\273&,>Z\0231=\266\217\322<\204\267\303=mE\263\275\367P\351=\356\345\257\275V(\013\276wE8\276Z\356\252=\275\275/>\313\237\010>\254-\005>\036M\300\275\222r\007\276x\320\361\27589\002>`\2025>\334\022\375<\r\312\244<\363g\341=\204\324\203\275\372m$\276.c\202<F\230\005\275\365\252\302=g\343\030\276\r\035V\275Q\026!\276b\306\240=\245\317!<\204$\016=\315e8\276tx6>\367UV\275<\0175=n\353\233\275\005\367\316\275/\t\027>t\216\t\276\361v6>\363*\232\275T\353\026>\373\224\027\276h\263\273\275\255\261\367\275ph4\275;\337\241=~\307\337\275\r\3678\276z+\361<\320\273\002\276V\205\006>\217\213\004\276=\262&\276\036U\260\275\002\265{=f-\252=\34722>3\335\223=\036\364-9\030\207\007>\300\000\036>\353R\321=\337\365\225\274\213d7>\313\225\001\275\026#->\344`\342=\"\363\010=\347\201\235\275\271\304I=\334-\010\276\317W\214\275{j\267\275{\272\252\274\212c\016\275E\035\002\276\225\200r\271\303\227\'>\343^\364\273p\220*\275U\316;=+h0\275\346y\362=A(\370=$\n(\275e\026\205=I\322,>\021\300\233=\266\206*>\301\020d\273\324\223`\275\000\342\273\275\355\311\336\275\245\261&>-Y\024\274\002\252+>\370\216\334=\035\014\340\273\220\300H\275l\0201>I\003)\276\206{#\276\200\223\033\276`\317\354<K\254\335\275\321\246\343\275\245e:>\331N\355\275\222v\306<\303c\017>zJ\352\274\\\\-\275\374\266\026\276_4.>\"\0162>d\277)\276m\t\252\274\014\3064\274\326\341\224=\372\371\247=\016\370Q\275\004\247\013>\306#5===\236=\275\306%>a\373\007>\000\355\306\275x\270\'>v\264\361=\313\372\357\275\002\233\010\276\336\214\004>~\365M\274\006\3231>\\\310P\275\005\213\010>\211\2356\274D\'\010>\341\014\261\273)\331\002\276\3601\331\275pD\020\276\352d\002>!\2151>\n\331\310=\262\332/\271 \3713\274\332l\225\275\'\r\034=)\214\370\275-\025*>\310\263\032<6\376\316=\020\035\002\276\243\314\352\274\313\360\306<V~\345=\261\017,\276\2169\351=\304\360\241\275\371N\274=q\237\343=\010\272\007>F\207\026\275\224\365\357\275\264H\030>\\\202\034>\010\005g\272#\200\375\275\004\244\211=R8\035>m\334\363<\343$\315\275U\262\247<\220\232\233\275\032!\205<\"m\245\275\260\364%\276\250K\335\275\357\213\353\274Z\373\025\276(\2247\276\204\206==\364\010\227=p`#>\307\344,\276\2027\035>\313\212\265\274\022\204\006\274\214\304\377:\233!==e\026\021\276\364\013#=\'h%\276a\2639=\007>>=r\3678>(\007\240=6\006\327=\000x9>\231\240\001\275\264\210\365\275)u\356=\262\335,\276\357\023\343=}\344}=T\255\262=?\341*=\314\226E:\036\373I\275RL\246<\320\'\347=\210 \243=\363\347\021\276\320\271,>\254\307\005\276\2766J=Pz\004\276\317x\003>\031\257\203\275~\334\351\274\305\031v\273\331*+\2765\327\373\275\257\341s\275\375\354\033\276\007\250*\276\257\001\016\276\232\242\346=K& \276\274\034\020=\'\177A\275\177\371>=\241\306\002\276K\253\214=\\\342\254\274\3155%\275\006\023I=\0264\221=mm/>*\323\211\275\340%\027>y\000\302=\216M*=\330\307}\273\234\307\261\274\251\255\006<\304\010\021>S\230`=c\2521>\207\240%>F<\347\275\253\037e=\223\2600>\345<#\276\216n*>\321\376v\275v\3533<\223\367%\276\r}u\274\304\216h<\017M5>1\364\360=\366\305\243<y\000\007\276\324#\226\275\210\301\036>\242)\317<\242z\351\273s\230\207=\374\032$>\307\327_=\350\327\002\276\272B\301=\336+R\275G@+\276\256$\245=\222U\360\275p\204\340\275\0348 >\'\217\212\275#\027\251=\366\177\314;\237}\265\275d\204\'=z\254)>W\306\253={gP\275\305\303\026>\220\260\014>p\363\314=\224\3048\276;\3665>\034\217O=0\373\271<[_\003\276\303\305\254\275\257\032\003>&\365\014\276p\341\255\275\013\265\356=\371\257\213=\327\344\034>\'\262\250=\256\371\304\275\025&\332\275\276\235\207\274:P3=63\024\276\353wR=\364r\341\275V\340\270=\265t:\275\022>\264=\352\354\366<\350\310\267\273B\333\021>\336\360\355=\366\250\024>\253u\247\275-\373|\275\207\2038=\372\255\241=#\004\330<%s\224=\365\326\201\275t;N\275\240\034\312\275Lp\371=\237\235h\2752:\010>\n\244H\274\2417\027\276\0366\022=\0310\226\275\25352\274\330\226 \275\030\312V=U\351\030=I^\317=N\323o\275\224\023\361\275{\313\347=-\335\032\276\342\255\327\274{~2>k\274\036>Y\025\316\275=\016\031\276\037\206\361\2751Dn=\321|3=\265f\306=\301\331\007>q\027\004={\377\271\275\035\035,\276\r1\341\275NR\024\276\265\257\314\275\313Hs\275\227#R=\343:2>Z\335\372=\211\372\271=TO\031=\001\211\021<\325\307\370=`h\226=\"\010\035\275f\377.>I-\224\275rq\363\275\206C\033\276\306K\337<x:\005\274\223\001\246=@--\275\224T\376\274\223\205,\276Fc\000>\025\0319>\352W\275\274\335o\304\275\216\373\001\276\3665\223=Z>\247\275J\3071=U\3453\276\350,\366=\270\207\306= \306 \276\035L\335=\323\241\330=\245\266\356\275\334*\"\276\371<7\276\355\256\270\275D\324\334\275\355\221\250\273\\)\243\275\304\302,>I\345B\2758\253\300=W\355\014\275\n\250)>\306R\362<\003\324\301=\034?}=\002\036\025=\331_\242=\253\2322>\360\372\030>>\374j\2757>\037\276K\336\343\275ZJ\026\276\034\003\356=\\\353\037\274\374*\'\276\366\3053\276t\275W\275)\236\373\275\024\032\335\275\331\tl\275\272\276\017\275\2763\013>\205\232\030\275\005\016\006\276\335\235H=\362l`=F\331m\275u\342\030>(X%=Rx!\276Zp\342\275\374\020\213\275\231\307\216\275\324\316\231=\236\2515\276w\254\242<\242)w=\305j\305\275\207?\242\275u.(\276\342\352\024\276\206~\010>\203\354\375\275z, =\305\226\017\276\214=%\276|\274\016\2755\300R\275\246H)\276\370;\204\2759;\215\275\010\210\236<Q<5>1\361\224\275v\316\022\276x\216\274;\324y\225=\260\256\317\275\331\303\035\275\353qd\275\271\350\354=\234B\241\275\006\213\036>\007\236\215\275q\031\303\275\265\202\330\275(\246\350=}O\317\274\'\022\033>\274r\225=\245\211\035>7\205\004>x\322\325=&\343 \276\t*\256=\334\261\241\275\220\313\215=.\370w\275T$7>\231)\255=\333sC=Y8\024\2757\325C\275\304\273\333\275\301\t\236=\304\324t=\363h!>\2555\000<\014X\337\275\236u\203\273q\376\035>\336D\t\276SW\320=\000\361==ZU0>\311\344\311\274\001\220\000\275$\274\352\275\341\255\357\275\203\237\213\275\250\030\220=M\376\240\275\240@\346=\260\260\007\275\332\376\335=\2665\366\274\0029>\275\022i\251\274;wC<\327Wa=\327y3\275\333(\000\276\200\021\\<,R\352=|*\010\275^\026\273<:\326$>n\302\t>\307\036\265=\243\037 \276=\251\033\276V\221\'\274\327c1\275\273I\323\275Zn\356=gB\005=L\243\313\274\210\"o=<x\202=n\243@=5\212B=\252J\013=mx >\342F\016>\342\347\300=Ei\031>h\321^=\013\320\331\275\031p\350\274\325\367\021>\243V!\276@tx\275Xe0\276\022|J\275cz\t\276\347\023\026\276\0066\305\275\336:1>\302\024\327=_\321\350\275\317\027\016\276=I,\276J\257\017\276\302\276\004=g\256\346\275\r\204\206=\220\255\326=\372\005\331\274ek\364=\"\'o=\302V/\276\341\327\035<}\003Y\274\n\334\001\275\377/7>O>:>$\233\323\275\016\356\225\275o\352/>\304Oz=\0247\377\275\362\3317>\241\002\300\275\221\326\367\275\327\235\240=\241\357\350\275\020F\021\276\001\245\215\275\246\227\016>\321\253\226\275\220N\"> \222z\274\322\321m\273%\004(\276\344\2773\276\377b\363=\306\243*\274\336\234\n\275A\225\357\275)\245\314\273\033\275\006\276\376<\364=\221/\352<\320\361\000\275\031\201:=\276y\333\275\375\304#\276\342\262\305\273\017Q\212\274}\004b\275\307\273\003=\324\335\301=;\305]=B\361i=|\255\351\275f\312\257\275$\2702\276\242\320 \276\204\306\014>rq\337=}-\204=d_4\2765\035n=JhT\275\364\030\000\276\237\216\303\274a\343\236=\031\022\222=g\251\323=\024l\010\276\004\251I=I]\022>\223j,\276\337\267\267\275\316\375\311\275\354\236\r\276x-\265:\216)\354=\207\277\322\275\257\024\\;\262\332\240\275\205\263!\276\177\001\366<,7s<\252\2067\276\225\366\233=\027\321\026\276vB\230\275SF\017=\342\344\256<G\264+>\2267T\275\360\227\213=\215\r->\263_\365\275\216=\026\2769\216\213\275\233\311\004\276\027\313\007>o\204\331\275\336*\346=\243\267\253=\027B\306=}\203\203\275B\347\257\275\200\217\371=\275&\026\276,Df=\370l\036>\021\216\306\275\022\323.\276\223\335\372=\372M\020\276\263]\367\275\02477>K-\207\275\277@#\276\272r\314\275\021\373;\275\254\315\245=m\2074\276J\2012\276\035s\366\273\3513\355\274\'G\376<\026\246\027>N/\273<\207\365\203\275,\006\035\276\236\002\277;\t\256+\276^m5>b\233\346=\233\023U=\245\344\355<\222\376\217=\206\334\007\276\353\212\255\275\212t\204\275\241\365\014>\260r\317\275\323\246/\276\346\335R\275|\327\212:}\222\r>\210\271,>\247\212\234<\234\331\375=\316\257I\275o\344.>+r\326\275\350\227\257\275\364<\364<\362\357\207\275\2347\271\275\004h\023>\02745>\007\2347=\362\271 \275\232\274\267=d\242\234\275\347g\223\275Z\032\236\275\340T\257=\350\275\225\275\370\302g=\354\364\347=o\221\010\276\0334\312=I\370\261\275\220h\344\275\222.\214=e\204\346<\221~\210=Y_\377=v\026\252\275fUd<FA\205\275:%\202=\244\346\371=\252\367.\276\216\251\332\275S\027\013=\3033\264=\030\307\222\2755\2228\276y\351w=A\357\036>_\334\214\275V\314\200=u\260\212\275?\013\236\275\317\225S=\274\341\351=\'B%\276\322\370\017\275\307~\214\275f2\243<\331}\370\275\205=\024>w\312\027\276\362\035\263\274\010\214\232<h\224\000>\010:\005>\364\244@=$l\357<\023\337\362=\025\374G=?\307\023\276\325\300\311=\016I.\276\022;\307\275?\334\247\275f3\020\276\334\035\310\275\330\376\023>\364N\255\274\376\360\005\276Qx\243\272\014\2341=!\242\027\276\241\227\030>\372)\272=*p\334\275\226K\017>\213D\364\275x\3763>\304\205\236\275\002\3171\276:9\022\276U\320\365\275\337Z\214\275\230l\344\275a\313\372\274`\n\214\275\366\204\227=\016\'\030=M\354\335=WT|\275`\344\220<1\217\n\276`\3255\276\322\332\027>\241b\245=\022\\~=\312.3\2769\242\033=\225\336,>\343\3343\276\301L\017\275\365\242\017\276\373W\372\274\001\271N\275\250m\013\276\275\305\026=h_t\275\271\242\267\275\3071\'\276\263\225c\275\334\n\034>\027\250\305<\014\267\252= S7\276\225J\270=\270\333\030>\254\334\213\275\306_\257\275[I\217\275\003\307$\276\025\3442\276\021\323\035>\030\3425\274\371\206\226\274\303\"\n<\363\300\354\275\006p\003>rqJ\274\306D\306=\003\303\034\276\255\331\342\275\345Z\347=\234\340\303=\267\360H=\300\330\037>,\267\'=\tz\205<_\331\355\2745\337.>\315\303!>\316\217,>\224\206\272=\2041\021>\372.\357<\242\227\234\275\345V!\276\2149\336\275\026\235\021\276\205\001\026\276JNn\275\221\215/>\307;m\273\256k\037\276\306\237\362\275\030\377\300=\233L\347\274\022w\320=|6\362=\236\266\026>\\\313\020\276\241H\311\275{\310\330=\016u\307=t\213\005<z\377D\275\001A\200\27562\034\276:L.=\327\365\247\275\013\202)>\016\2051\276\215\272 \276\353\231*\276b\r\035\276\035\335\370:\354\004\316\274s\306\220=\365*6>\344\330\231\275W\260Q=\320\n\013;\013\210\266\275Ae,\276z\347\033\276+\3433=egk\275\"|\370\274\031\325\r;(\246\004\275\325\337\025\275\257V\254=\014\025\006\276z\007;=3\270r=5\316i\275\033\325\357=YL3>\361\244><\0225\243\275\240K\336\275\221\327\014>|U\031\276Kq\013\275\017`\r>\227\256,\276%\211\037>\334\347\355=\037\027~\275\010\303\352=B\264\366=\033\271\213=\274\0061=\276\316\003>I\345T=\3373D=\253\244$>F\202 \2769\006\375=\222l\371\274#\212\r\276\021\335W\275i\316k\275\3655\223\275\340\022\005>\243\212\005>\304E\364<\232\327$>:#\221=\235\341\201\275\340\013\317\274\311\016\006\276\375\205\213=\336\207\342=\375\232\030==\351\017>\234p,>\310H\332=\325&\'\276U\347\256=lj\305\275//T\275\323\010W=P\326\320=X\226\326\275\034$\207\275\026\370\374=\37255=\372\2749\275\004\312\375=\321\247\361\274\270$\004\276\215pc\275M\255\"\276\366\017\000>\336\300\302=M\352\355=P\311\022>+Mz\275G\007\017\276\265\373\224\275\357o\305=\262z\244\274+\332\317\275RE\266=w\331C\275%g\300\274\375Nc\275f6\n\276\177\007u=\32617\276\253g\263\275\342(\263<\270\375$\275=\312\342;\014\023\'>2\246\205\273\266\240\003\276\326R\205\275bz!\275\327\2035\276\235\215\227=\007\316\245<^N\010\276\231\027\347=\320b\026\275\037e\265=%\274\322=4*\326=;\341\322<\345\226\013\276&(\307=\364\006\033\275\365\232\004>\363*\036\2768$\262\275\025\226\353=\241x\214\275\235\306\275=4\322\037>*#\006\276\227Ha\275\267\334\021\276\264\276\330=\023c\007\276m\371\212=\320&\034\2769_\030>\342P\213=\207\262\235=\305\367V\275\266\020\230\2757CN=\275\3232\275\363:s=]h_<\317\363\266=]M\006\276z\'\301=\027[\211\275\235\020\017>\320)\304=@J->\032\314\222<5\r\026>\"\272\356\272\322\033\n>i\021\276\275,\300\315=u\357\'\276\301\203i\275\312k\305\275eH\334\275\006\273,>\355\234\254=F\305\004>i\306\246\275\317\346\274=\277\014\347\274G\252\242\275\023\340\242\275\335.\332<DqW;\333\211\343=j\365\242\275&\255\377=\337\203\251<\272\r\021\2766G\360\275v8\025\276\305\016\020\276\306I\022\2761\3626>\223\"\r>\234\377.\276)\214,\276\020M(>\221\251\000\276+\346{=\331\3274>\235\032\201\275\251J\035:u\3538\276B)\212=\337\014\323=\\\0012\276|\374*\276\276\2743>\223%x<\226\266\262\275\331H\013>\3756B\274\330\317\360\275R>\225=\246\241S\275\235\215\235\275=\326$\276\211\363\241\274\034\212\001>\344\251\004>\336\3019>5\252\373<\031\213\007\276}s\002>e\250\007\275\024\036-\275\277\262\332\275\222b\025>Q\275\t>Q8\214=\340\204\007>\016h\200\275\031F\226\275\243\357\022\275Gh7\276\274\2123\276\253]\312\275\307]\342<O\017\374=\257\325\017\276\251C_\275le\003\274\226\356\343=\2256]=\r\300G\275\277\356t<\332\n\t\276\264\320\347=\"n$>\333\211\036\276`8+>\2017b=7D\233=V\335B<GP%=\230\250\024;6\251\234=\352y\251\275:je=\"b+>\302\337\270\275\244\215\347=\022Dz\275\023\300\r\276(\021h\275\241/\014\276+\346\304=X\353\333=\374\256\375\275-\016\000>\265\247\331\275C+\177=\334\330\251<\353{&>\372\016\245\275\364\253\204=\227\366\002>\366\223\342\275\307\034\262=[m\317\275:\210$\276\327\213 \276\025\243\247=\357\277\300\275\033\373\027>\325k\035>\323<\000\276\246\201\362\275>}\004\276\205\377\032\274\274H\t\276Q$\001>\230\275\030\274\234\022/>u\332\334\274\331\252\020\276-\026\234=\004!\320\273B\3727\276\360\031\022>T\207!\275\307\221\344\274\264\377\225=\030\0007\276\343#\016\276+r\231=i\2735>_z3\276\321\2701>\000\216\344\275D\t >\220F\006<\261\0175>[\'\330\275G\302%>}#\t\276\362\014\010\276\236\3222\276F6\210\275\302\021\341=\305\023\251<\231\247\264\275\367\223\374\275\2542\363=\330\026\020\276Q\232\013\276 t\005=\027\221\r\276\3459\214<\237\3653\276E\300\025\276\022J3>\016\356r=\245\246\341\274\361\235\305=\312\231\341=#-\204=\007D;=\324\222\006>\255\323\232\2753\007\332=U3\311=\242\275\301\275~\363E=\273z\214=2\307\001>W4\342=\363P\252\275\224%\251=\277z\347\275\375\222$>\3053$\276\327F[=\235\013\223\274\361T\275=7\025\r>\374f\206=\351\3247=\374\354}\275\246O\t\276\264\330\022\276\352\243\367;U\027\365=\365\"\005\275\232\222.>\3052\032\276\3020\364=\001\350\024>nM\223\274\035\2318\276B\343\001>L\2049\276;\212\t\276x\235\024>=\362\267=@\374\234\275\313l\227\2755\235\206\275\272\252,\276\232\225\036>j\016\243\275\3741\231\275\003L\236<IH\277\275\025\203\247=+\016\345=\317\316V\275\261\227\006=\374\224\003\276\376\021\303=\336\022$\276\217\353\032>\024/\007=(\321\235=$\357&\276\377\n\033\275\247\313\254=\007d\n\275\003RC\275\376\010\032\276?\202\033\276\304Jg\274\021\372+>\333\232\022\276P\3512\276\265],\276\254\002\252=>\016\205=\336p3>\305zr\275}T\345\273\r\272\006\274\213\022\301\275\3714\227=pv\237\275\243S\232<\320M\347\275\"QJ;\241\315x\275%z\023>m\352\\\275\301c\360\2755\320+=~aI<|A\031\276\200ec=Zt\366=4J\013<\260F\302=\260F\217=\347\232\017\2756`M;,\324\270\275\030J8>>n\t=\200J\270=q\232\342=\307\222$\275\354v\205=2\261->\267\224\333<\343\261\316<\207\\\031\276\264\267\267=\350\240%\276\262B\272\275\27160>\024.\350=\000\370\314\275@h\370\275\345w\r\273~\215\321=\246\230\326\272\316\351\326=\351\301u=\352\347\366\275t\361 \274\267\235\'\276K\321#>K\366\026>\004q\375=\314\264\265\271\027\002\375=n\037W=\343\":\276`^\332\275\223,\211=>\264\024\276\273\243?\275|\234\327\275`W9>\270c\216\275\235\335\305=\350\'.=\2616\230\275\007\2521>\032P\n>\332\271\220\274\212\034\313\275\001\020\034<Bh\t>\260\307\324=\267\201\037\276{K9\276<\347\020=\306\255\007>di\367\275\250\2408;\033$\232=^\310\024>\270\212\243\274TP2\276\271\367\026\276{\371\260\275FX\n\276\26166\276\315*\375\275\247_\260\274\343\023\000=\330\000A=\307\303@\273\240\350D\275\222\3230>\350E\256\274\221jl<\352@\275=\021\232(\276S\346\002=a\202+>\034\027\274<\020K\214=\037\210\330=A\347\262\275V\"\017>\035\177\202\275T\265\022>W\177\343=\341\r\344\275\354P\005\276\236\272|=\264\3118\274\3107\327=3m4\27570\t>\200z\261\275\034\024\373=7P\005>\3035\250=\227\267\212\272\344\377c=\266\364\005\276\253\354\231;\202\233Z<\020\000\235\275\000/\017>\334\242\354;\"\005|\275\345{\020\276\022\356\221=\021\032A\275\037+C\275\352\345M=\241\321\350<\336\335w\275\010\322\205=\231\312*\275\364\272\210=\024\300e=GB\345\275\247\366\025>\376\364\231\274Y\030*\276jE\326<\320G7>\275\344\207\275d\237\233=\344a&\276v\210\"\274\t<1\275\245\224\021\276\007\364\032>\364\373u\274\221\030\257<\305\265]\275\351\300u=\341\r\275\274p\037\366\275\344\3100>\307\212 \276X\361\351\275|(&>x\032\340\275r\362\t>\256\035\036\276|FG=/+\020\275\266\243#\276\257k\325=\313W\223\273&\253\022\276\241\027\306\275-\271\211\275\215\262\200=Bd\004>\035C\343=\215R\005\276\304\351\227=]z&\276\314\221m=Dq)>\200:\r>i\005\275=K\307g\274\360\337,>d\345\322\273Kk1\276\213m\306<,}*\276\335\035I\274\333\323\'\276Q~\374<\020\271\214\275\335\334.>\3767\261\273c\270\327\275;f\021=IJ\034=\346\257+>\254\311)>\224\341\347=\332\013\223=v\320\224\274\262\201F<B\013\352=\216R\304=q\247\323=\246\232\006\276Y\252\365\275\326Cd=no\300\275_2\034\276\215\2123\276 T\315<\274\336\236\275\\_3>\013Z\201<.w\'>\331\255\276=\025\210/>l\333\354\274\326\346\010\276\315\275\262=0\360\031\274K\274V\275\354!!\276e\265\370\275a\222\261\275p9V\275R3\272<\332\360!\276\312U\263=Y\204%>\370]6>k\032\035>bu\231\275\333O.>\334S\331=|\360\006\274C\2106>\032\222\024>\252\211\277==_\345<mB\237<\271\217\221<\201}@=\226\036\006>\274\204\253\275^\027\221<n[\031\276\230\226\257\274\336[\275\275\213\210\221=\217\0248>\343\253\335=\006\364\263;j\256\007=\337\021\t\276\2556\024\276\376\207,>\231(\004>\316\272%>vC\023>\214\314\t\276\302\"#\276\220G\007=\367\333\035>3u\337\275\355\322\256=\301w8=\373\354\264\274\255\210\354=\\\272\233\275\201kn=Z\2706\276\301\225\311\275Pz\350\275\303\316\007\276\n\344\343=\355x\030\275\224\313\312\275\037\331\007\276\352\362\035>\232\275\203\275\004\346\367\275Y/h\274\363\005\024=\373z#>]\305\326=\345\177\221\275\372\007\271\275!\347\256=3\207\213\274\241\0131\276\036\302\220<\313\253\246\274\'\021%\275\212\217\310\274\322\302\237=\262\020 \276\237\371\207\274h*D=vX\014\276\277\321\345\275\001}\007>\265\246\262=5\234\366\274\256m\204\275\234\253%\276\032v5;X\264T=8\240\372=\344\007\001>q\021\014\276\355jH\275\020o\303\275i\213-\276\236\266a\275,+\337<M\242\341=a\326\006<\202-D\275\024e)\276v\376\251\275\217\272\030=G\024\266\275\rp\346\275x\221\035>\331\217%\276\220\0205\276u\t\000\276\241\261\264\275\364;1>D\267\212\275&U\304=gz,\276\006\360\000\276Nnm<\304\350%\276\205\2019>)\366\353<\311\205\035\276r3\241\275NA\036\276\220Q\021\276\270\216y\275\253\344?\274\233\342j\275\204>m\2756\313\003>\241\334\307\275G\263\265=\033\030\263=^2\375\275p]#>\007\0175>\3317\272\275\353&^\273\263\222\031\275 7\357\274\004eO<d\261\363\275\000{\201\275\034\tf\273\340h \276^T\275\273v\364\336\275Ss\232=pi\013\274\330\034Y\274\367\010X<\343\372@\275d\2300=Ve\207\275|5:\276\'\277\254=\324M:\2758\321\211=\322\223\316=+\253+\275\035\332^\274\000:*>\326&\357=\3430E=z\201\367\274\017\221\247=\240\034\350;\265\177\005\276`0\255\275\203-\313=\001B\r\274\"f\324\275\362\335\230<5\355\334=\313x\013\276\226\034\246\275\343V\216<\266\255\005>*\233\353=\255q\'>\350\020\237=\253\025)\276\003J5<\246\366\n\275[\265\277\275\353t\337\275\257Y\346\275E\217P\275\214\017\251=\355Ow\275_\022&\275\354\3704>\204H\231\274\rw\017\275\223\245`\275(\267\010>\255y\273\275X\350\223=\342\370\341\274\306Y:\276\321A\032>w=\355=^\363\334;\3201T\273^Q\034>\0251F\275\004\3403\276\016x#>\276).\276\207>\304\275\230\023\002\275\267\232\260\275\224q\256<2L\005\276+\212|\275\004\210\231\275<\236\032>\241\233\256\274&\344\332\275o\214\006>\336::>\rV\022>\031\277\261\275\210\013]=\363\022\224\275\375a\006\276\270\251\351\275\n\225\362=\337?\223=[\371\312<\337\260#=\")\020\276\354\363\315=w\330$>\344\255\003\274\tM\032\276\207(?=\217\263\240\275\231j\327;Y\t\003>]=\336=B\231X\275\346Y\226;_\007\262=\340\023\273=\023d\004>`\376\270\275\274\030\311\275\374D\214=\331\256\210\274\310\201B<\231\006\305\275\350I\305\275\234S\201=P\326q=\233\216)\2751\321\021>\370\220O\275O\265k\275\221\357O\2757\310\002>f\245\035\2763\373\375\275\307d\272=\276\217&\276\361a\332\274\215\246\013>\034\230\225=\0134\333<\226n\370\275\361\275\373\275m\236\342=J\321\177\274\341\355\201\275\253A\227\275qX\305=\325n(>>\006\036\275h\212\233=%\236\234\275\237\342\330=\000\346E\275\314\237\2277Is\374=\217\357\000\276$\343\205\275\345a8>*\230\366\275,\355\r\275\326\360)\276W$\300\273\023b\007>2~\206;\306\3179\276d9#>\353\246@=\346\215\347\275\373g\">3\267*>\325\030\344=0\277\275\275\314\206\322\2757\251\003\274z|\320=/\357\375\275\016=\370\273\247\307\250<\210jm=\221\277\237\275\205\272\032\276_\302 \2763N\222\275\006\273g=\255\013\226=\017y\326\275h\333\220\275\345h\231\275E\357;=\340\'3\274\377\277\306\275\031\326&\276\037\217\202\275\263\211\234\275\250\352 >\275\232\354=\270\326\270\273A!\261=\263\\&\276\245\035\232\275\305\037\232\274\023\337\326\275\351\267\243<\\\250\333=\005\177\034\276\020\341\024\276\010\017~\275\"h\236\274\303\024+\276\343\342\316<\006\201\266=\303P\030\276\t\312\200=0\025X= \275\">n\213l\274\207\216\001\276I\341b=o\333*\276C\357\021\276y\031=<S\265\207\275\275\254\257<\350t\264=|=\374=I\n\236\275KlC=>\315\222\274L\343\004=G1&\276\373\233O\275\020\022\213\275\031\262\270\275\347\253\373=T@P=!\300\235\275j\370\037\275}\001\242:\222\021\321=\224\036\016\276u\n\020\275U\252\316\274v<\256=Cjj\275\225b%>\003~\020\273\324;3>e\216\241\274\243\267\000>\335!\343=\321\3703>9]\036>\340\301\020>\245\346\222<d\371\222\274\353.\016>\000\244x=\243NX=8\3607\274\177\007\035>\312\214\236=\226X\353=\344\001\022\274\257PJ\274`\210\206\275Ul\023\276\364\255\205\275\224\275\203=\305\"\r=MC\314=\262\3520\276\376!M=\031\2660>\026\3565\275\2246\353\274\025\214%>\370\033\023>\347r!\276\226\250E\275D\340\346=\322\3124>y\2218>gC\214=\035\364\022\276\201\036\214=\374\337\216\275\266x\022\276Q3)\276\317\030\007\276\336\272\320=\364\304\007\276\376>\252<\267m!\276\307\0315=(q\013\276\n-6=\306\006\322=\376\021\254\275\327\341#>\227\202N==\342\270<pU\236\274\315\307\036=t\346,\2738\002\356=T\242\374\275\234}m\275p+&\276\267\204\263\275P\2623>\265\360_\2753\006\001\275k\324&>\036\006\030>P\314\370=\231\254;\275\307\335\036=\206\261\022>{\324\275=\002\207\000>>\371\217\275\307\205\356=\364qW\275\3444\t=!\336\330\275BHa=W\314\312=\034\036\241\275\264\222\230=\304A\247\275\250\0375\2764\n\006>\312\242\031\276\247\345!>"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000~\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.154303357005
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.154303357005
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 39
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 126
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 49
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  op: "Div"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  op: "Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub"
  op: "Sub"
  input: "avg/AssignMovingAvg/sub/x"
  input: "avg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/mul"
  op: "Mul"
  input: "avg/AssignMovingAvg/sub_1"
  input: "avg/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg"
  op: "AssignSub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "avg/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "avg"
  op: "NoOp"
  input: "^avg/AssignMovingAvg"
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/mean"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "control_dependency"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  input: "^avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  op: "Neg"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_2"
  op: "HistogramSummary"
  input: "HistogramSummary_2/tag"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_3"
  op: "HistogramSummary"
  input: "HistogramSummary_3/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_1/pack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/Rank"
  op: "Rank"
  input: "global_norm_1/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_1/range"
  op: "Range"
  input: "global_norm_1/range/start"
  input: "global_norm_1/Rank"
  input: "global_norm_1/range/delta"
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/pack"
  input: "global_norm_1/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_4/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_4"
  op: "HistogramSummary"
  input: "HistogramSummary_4/tag"
  input: "global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_5/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_5"
  op: "HistogramSummary"
  input: "HistogramSummary_5/tag"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_6/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_6"
  op: "HistogramSummary"
  input: "HistogramSummary_6/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_2/pack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/Rank"
  op: "Rank"
  input: "global_norm_2/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_2/range"
  op: "Range"
  input: "global_norm_2/range/start"
  input: "global_norm_2/Rank"
  input: "global_norm_2/range/delta"
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/pack"
  input: "global_norm_2/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_7/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_7"
  op: "HistogramSummary"
  input: "HistogramSummary_7/tag"
  input: "global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_8/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_8"
  op: "HistogramSummary"
  input: "HistogramSummary_8/tag"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_9/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_9"
  op: "HistogramSummary"
  input: "HistogramSummary_9/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_3/pack"
  op: "Pack"
  input: "global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/Rank"
  op: "Rank"
  input: "global_norm_3/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_3/range"
  op: "Range"
  input: "global_norm_3/range/start"
  input: "global_norm_3/Rank"
  input: "global_norm_3/range/delta"
}
node {
  name: "global_norm_3/Sum"
  op: "Sum"
  input: "global_norm_3/pack"
  input: "global_norm_3/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_3/mul"
  op: "Mul"
  input: "global_norm_3/Sum"
  input: "global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/global_norm"
  op: "Sqrt"
  input: "global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_10/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_10"
  op: "HistogramSummary"
  input: "HistogramSummary_10/tag"
  input: "global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_11/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_11"
  op: "HistogramSummary"
  input: "HistogramSummary_11/tag"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_12/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_12"
  op: "HistogramSummary"
  input: "HistogramSummary_12/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_4/pack"
  op: "Pack"
  input: "global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/Rank"
  op: "Rank"
  input: "global_norm_4/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_4/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_4/range"
  op: "Range"
  input: "global_norm_4/range/start"
  input: "global_norm_4/Rank"
  input: "global_norm_4/range/delta"
}
node {
  name: "global_norm_4/Sum"
  op: "Sum"
  input: "global_norm_4/pack"
  input: "global_norm_4/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_4/mul"
  op: "Mul"
  input: "global_norm_4/Sum"
  input: "global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/global_norm"
  op: "Sqrt"
  input: "global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_13/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_13"
  op: "HistogramSummary"
  input: "HistogramSummary_13/tag"
  input: "global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_14/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_14"
  op: "HistogramSummary"
  input: "HistogramSummary_14/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_15/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_15"
  op: "HistogramSummary"
  input: "HistogramSummary_15/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_5/pack"
  op: "Pack"
  input: "global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/Rank"
  op: "Rank"
  input: "global_norm_5/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_5/range"
  op: "Range"
  input: "global_norm_5/range/start"
  input: "global_norm_5/Rank"
  input: "global_norm_5/range/delta"
}
node {
  name: "global_norm_5/Sum"
  op: "Sum"
  input: "global_norm_5/pack"
  input: "global_norm_5/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_5/mul"
  op: "Mul"
  input: "global_norm_5/Sum"
  input: "global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/global_norm"
  op: "Sqrt"
  input: "global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_16/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_16"
  op: "HistogramSummary"
  input: "HistogramSummary_16/tag"
  input: "global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_17/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_17"
  op: "HistogramSummary"
  input: "HistogramSummary_17/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_18/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_18"
  op: "HistogramSummary"
  input: "HistogramSummary_18/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_6/pack"
  op: "Pack"
  input: "global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/Rank"
  op: "Rank"
  input: "global_norm_6/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_6/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_6/range"
  op: "Range"
  input: "global_norm_6/range/start"
  input: "global_norm_6/Rank"
  input: "global_norm_6/range/delta"
}
node {
  name: "global_norm_6/Sum"
  op: "Sum"
  input: "global_norm_6/pack"
  input: "global_norm_6/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_6/mul"
  op: "Mul"
  input: "global_norm_6/Sum"
  input: "global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/global_norm"
  op: "Sqrt"
  input: "global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_19/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_19"
  op: "HistogramSummary"
  input: "HistogramSummary_19/tag"
  input: "global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 378
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 378
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 378
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 378
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "CheckNumerics"
  op: "CheckNumerics"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Loss is inf or nan"
    }
  }
}
node {
  name: "control_dependency_1"
  op: "Identity"
  input: "CheckNumerics"
  input: "^train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CheckNumerics"
      }
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^control_dependency_1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
}
versions {
  producer: 9
}
